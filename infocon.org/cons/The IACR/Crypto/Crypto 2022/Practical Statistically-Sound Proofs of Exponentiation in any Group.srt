1
00:00:01,520 --> 00:00:03,679
hi i'm charlotte and i'm going to tell

2
00:00:03,679 --> 00:00:05,680
you about our paper practical

3
00:00:05,680 --> 00:00:07,120
statistically sound proofs of

4
00:00:07,120 --> 00:00:09,280
exponentiation in any group

5
00:00:09,280 --> 00:00:11,280
this is joint work with pavel chattan

6
00:00:11,280 --> 00:00:14,160
karen and kristoff

7
00:00:14,160 --> 00:00:16,239
now in a proof of exponentiation we have

8
00:00:16,239 --> 00:00:18,480
approver and a verifier

9
00:00:18,480 --> 00:00:20,800
and they both get as input the tuple

10
00:00:20,800 --> 00:00:23,199
x q t y

11
00:00:23,199 --> 00:00:25,039
now the prover claims that the result of

12
00:00:25,039 --> 00:00:27,840
the exponentiation x to the q to the t

13
00:00:27,840 --> 00:00:30,560
equals y in some group g

14
00:00:30,560 --> 00:00:32,399
but the verifier doesn't trust the

15
00:00:32,399 --> 00:00:33,520
prover

16
00:00:33,520 --> 00:00:35,600
so how can the verifier be sure that

17
00:00:35,600 --> 00:00:38,079
this is the correct result

18
00:00:38,079 --> 00:00:40,079
in groups of hidden order recomputing

19
00:00:40,079 --> 00:00:41,840
the result takes t sequential

20
00:00:41,840 --> 00:00:44,239
exponentiations we don't know of a

21
00:00:44,239 --> 00:00:45,920
significantly faster algorithm to

22
00:00:45,920 --> 00:00:47,120
compute it

23
00:00:47,120 --> 00:00:49,280
but we want the verifier to be much more

24
00:00:49,280 --> 00:00:50,800
efficient

25
00:00:50,800 --> 00:00:53,520
and to this end we let the prover send a

26
00:00:53,520 --> 00:00:56,840
proof of exponentiation or poe to the

27
00:00:56,840 --> 00:00:59,120
verifier to prove correctness of the

28
00:00:59,120 --> 00:01:00,480
result

29
00:01:00,480 --> 00:01:02,719
here the cost of computing and verifying

30
00:01:02,719 --> 00:01:06,479
the poe is much less than t

31
00:01:06,479 --> 00:01:09,040
applications of poes include verifiable

32
00:01:09,040 --> 00:01:10,960
delay functions and time and space

33
00:01:10,960 --> 00:01:14,240
efficient arguments for np

34
00:01:14,240 --> 00:01:17,200
now let's look at the existing poes

35
00:01:17,200 --> 00:01:19,439
again this is our instance x to the q to

36
00:01:19,439 --> 00:01:22,080
the t equals y

37
00:01:22,080 --> 00:01:24,400
so there's vesolovsky's protocol which

38
00:01:24,400 --> 00:01:26,880
is quite short the proof is all consists

39
00:01:26,880 --> 00:01:29,040
of only one group element

40
00:01:29,040 --> 00:01:30,000
however

41
00:01:30,000 --> 00:01:31,840
the soundness is only computational and

42
00:01:31,840 --> 00:01:33,200
it relies on the adaptive root

43
00:01:33,200 --> 00:01:34,960
assumption which is a quite novel

44
00:01:34,960 --> 00:01:37,600
assumption and not that well understood

45
00:01:37,600 --> 00:01:39,759
then there's phx protocol

46
00:01:39,759 --> 00:01:41,920
here the proofs are a bit longer the

47
00:01:41,920 --> 00:01:44,479
proof's size is log t

48
00:01:44,479 --> 00:01:46,799
however this poe is statistically sound

49
00:01:46,799 --> 00:01:48,079
in some groups

50
00:01:48,079 --> 00:01:50,079
and in other groups it's computationally

51
00:01:50,079 --> 00:01:53,520
sound if the low order assumption holds

52
00:01:53,520 --> 00:01:56,479
finally we have the poe of blocket iron

53
00:01:56,479 --> 00:01:58,399
which can be seen as a clever parallel

54
00:01:58,399 --> 00:02:01,119
repetition of patrick's protocol

55
00:02:01,119 --> 00:02:03,040
due to this repetition however the proof

56
00:02:03,040 --> 00:02:06,320
size blows up and the proof consists of

57
00:02:06,320 --> 00:02:08,639
lambda log t group elements where lambda

58
00:02:08,639 --> 00:02:12,720
is a statistical security parameter

59
00:02:12,959 --> 00:02:15,520
but this poe has the advantage that it's

60
00:02:15,520 --> 00:02:18,640
statistically sound in any group

61
00:02:18,640 --> 00:02:21,680
now our contribution is the following we

62
00:02:21,680 --> 00:02:24,160
construct a statistically sound pue that

63
00:02:24,160 --> 00:02:26,480
reduces the proof size of block at i by

64
00:02:26,480 --> 00:02:29,200
almost one order of magnitude for q of a

65
00:02:29,200 --> 00:02:30,720
special form

66
00:02:30,720 --> 00:02:32,480
we will let you see that in all of the

67
00:02:32,480 --> 00:02:34,560
applications we consider

68
00:02:34,560 --> 00:02:36,640
choosing you of this form is not a

69
00:02:36,640 --> 00:02:38,160
restriction

70
00:02:38,160 --> 00:02:39,519
and if you want to see how we achieve

71
00:02:39,519 --> 00:02:44,160
this result please come to the live talk

