1
00:00:00,799 --> 00:00:02,960
hi i'm peter and i want to talk to you

2
00:00:02,960 --> 00:00:05,279
about lemur which is a dynamic and fluid

3
00:00:05,279 --> 00:00:08,480
npc protocol for dishonest majority

4
00:00:08,480 --> 00:00:10,880
in secure multipart computation a set of

5
00:00:10,880 --> 00:00:13,440
parties who each have some private input

6
00:00:13,440 --> 00:00:16,079
want to jointly compute some function f

7
00:00:16,079 --> 00:00:18,160
across all of their inputs

8
00:00:18,160 --> 00:00:19,279
of course they want to do this while

9
00:00:19,279 --> 00:00:22,080
preserving privacy of their inputs

10
00:00:22,080 --> 00:00:23,760
in this talk i'm going to focus on the

11
00:00:23,760 --> 00:00:25,840
dishonest majority setting where the

12
00:00:25,840 --> 00:00:27,279
majority of these parties may be

13
00:00:27,279 --> 00:00:29,599
corrupted by the adversary potentially

14
00:00:29,599 --> 00:00:31,760
maliciously

15
00:00:31,760 --> 00:00:34,559
typically an npc we consider a fixed set

16
00:00:34,559 --> 00:00:36,320
of parties which doesn't change over

17
00:00:36,320 --> 00:00:37,280
time

18
00:00:37,280 --> 00:00:39,120
but today i want to consider dynamic

19
00:00:39,120 --> 00:00:40,559
participants

20
00:00:40,559 --> 00:00:42,399
the main motivation for this is

21
00:00:42,399 --> 00:00:44,960
flexibility so if the parties are

22
00:00:44,960 --> 00:00:46,719
running a very long and expensive

23
00:00:46,719 --> 00:00:48,559
competition they might not want to

24
00:00:48,559 --> 00:00:50,239
commit to being alone online for the

25
00:00:50,239 --> 00:00:52,399
whole time or they may want to drop out

26
00:00:52,399 --> 00:00:54,320
all the way through

27
00:00:54,320 --> 00:00:56,160
another benefit though can actually be

28
00:00:56,160 --> 00:00:58,559
security because moving the participants

29
00:00:58,559 --> 00:01:00,160
over time creates a moving target for

30
00:01:00,160 --> 00:01:02,000
the adversary which may be harder to

31
00:01:02,000 --> 00:01:03,199
corrupt

32
00:01:03,199 --> 00:01:05,280
this has taken advantage of for instance

33
00:01:05,280 --> 00:01:07,920
in the yosef model for npc where each

34
00:01:07,920 --> 00:01:10,400
party only actually is online to send a

35
00:01:10,400 --> 00:01:14,159
single message in the whole protocol

36
00:01:14,159 --> 00:01:16,479
so our work is based on the fluid npc

37
00:01:16,479 --> 00:01:20,000
model by childreatel from crypto 2020.

38
00:01:20,000 --> 00:01:22,320
so there the protocol proceeds in time

39
00:01:22,320 --> 00:01:24,240
periods called ebooks

40
00:01:24,240 --> 00:01:27,200
where each e-book runs within a single

41
00:01:27,200 --> 00:01:29,280
fixed committee of parties

42
00:01:29,280 --> 00:01:30,720
and they work in the honest majority

43
00:01:30,720 --> 00:01:32,479
setting so they assume that each

44
00:01:32,479 --> 00:01:34,880
committee in one e-book has an honest

45
00:01:34,880 --> 00:01:37,200
majority of the parties

46
00:01:37,200 --> 00:01:39,360
and the epochs may proceed in a series

47
00:01:39,360 --> 00:01:41,280
of rounds of interaction amongst that

48
00:01:41,280 --> 00:01:42,479
committee

49
00:01:42,479 --> 00:01:43,759
and then at the end of the book the

50
00:01:43,759 --> 00:01:45,280
parties will hand over their state to

51
00:01:45,280 --> 00:01:49,119
the next committee before going offline

52
00:01:49,119 --> 00:01:51,200
so in our work we extend this to the

53
00:01:51,200 --> 00:01:53,200
dishonest majority setting

54
00:01:53,200 --> 00:01:55,360
and one challenge we have here is that

55
00:01:55,360 --> 00:01:57,119
most practical dishonest majority

56
00:01:57,119 --> 00:01:59,040
protocols for mpc

57
00:01:59,040 --> 00:02:01,520
actually rely on a pre-processing phase

58
00:02:01,520 --> 00:02:03,759
which is a kind of a more expensive

59
00:02:03,759 --> 00:02:05,439
phase used to generate correlated

60
00:02:05,439 --> 00:02:07,360
randomness done ahead of time

61
00:02:07,360 --> 00:02:10,160
and independently of the inputs of the

62
00:02:10,160 --> 00:02:11,840
computation

63
00:02:11,840 --> 00:02:14,080
so to model this in le mans

64
00:02:14,080 --> 00:02:16,640
we allow all of the parties to be online

65
00:02:16,640 --> 00:02:18,640
in the pre-processing phase

66
00:02:18,640 --> 00:02:20,080
and then after that we move to the

67
00:02:20,080 --> 00:02:21,920
online phase where the computation is

68
00:02:21,920 --> 00:02:24,239
divided into these ebooks with changing

69
00:02:24,239 --> 00:02:25,840
committees

70
00:02:25,840 --> 00:02:27,760
and since we're in dishonest majority

71
00:02:27,760 --> 00:02:29,599
for security we only require that

72
00:02:29,599 --> 00:02:31,920
there's at least one honest party in

73
00:02:31,920 --> 00:02:35,680
each committee within any epoch

74
00:02:35,680 --> 00:02:36,480
so

75
00:02:36,480 --> 00:02:38,239
in le mans we give two different

76
00:02:38,239 --> 00:02:40,160
variants of the speeds protocol for

77
00:02:40,160 --> 00:02:42,879
multi-party computation in this model

78
00:02:42,879 --> 00:02:44,640
now the first two days we call dynamic

79
00:02:44,640 --> 00:02:46,000
speeds

80
00:02:46,000 --> 00:02:48,319
where we relax the online phase to only

81
00:02:48,319 --> 00:02:50,239
actually have a single e-book with one

82
00:02:50,239 --> 00:02:51,360
committee

83
00:02:51,360 --> 00:02:53,200
and this can of course be any subset of

84
00:02:53,200 --> 00:02:54,879
the parties who took part in the

85
00:02:54,879 --> 00:02:56,480
pre-processing phase

86
00:02:56,480 --> 00:02:58,239
doesn't need to be fixed until the

87
00:02:58,239 --> 00:03:00,080
online phase starts

88
00:03:00,080 --> 00:03:01,840
so this is more practical but a little

89
00:03:01,840 --> 00:03:03,599
more restricted with only having one

90
00:03:03,599 --> 00:03:06,000
committee online

91
00:03:06,000 --> 00:03:07,920
in the fluid speeds protocol the other

92
00:03:07,920 --> 00:03:08,720
hand

93
00:03:08,720 --> 00:03:10,800
we have full fluidity meaning that we

94
00:03:10,800 --> 00:03:13,120
allow evolving online committees in the

95
00:03:13,120 --> 00:03:14,640
online phase

96
00:03:14,640 --> 00:03:17,200
changing from one epoch to another

97
00:03:17,200 --> 00:03:19,680
a protocol can even be maximally fluid

98
00:03:19,680 --> 00:03:21,680
meaning that each epoch only consists of

99
00:03:21,680 --> 00:03:23,920
a single round of communication before

100
00:03:23,920 --> 00:03:26,080
the party can go offline and move on to

101
00:03:26,080 --> 00:03:28,319
the next committee

102
00:03:28,319 --> 00:03:30,159
so one thing that ties together both of

103
00:03:30,159 --> 00:03:32,159
these protocols is the pre-processing

104
00:03:32,159 --> 00:03:33,760
phase

105
00:03:33,760 --> 00:03:35,680
and since the pre-processing involves

106
00:03:35,680 --> 00:03:38,239
all of the parties we design a new kind

107
00:03:38,239 --> 00:03:40,879
of universal pre-processing protocol

108
00:03:40,879 --> 00:03:42,560
which generates correlated randomness

109
00:03:42,560 --> 00:03:44,159
that can be later

110
00:03:44,159 --> 00:03:46,480
and adaptively used by any subset of

111
00:03:46,480 --> 00:03:48,720
parties later on

112
00:03:48,720 --> 00:03:50,640
we do this by building on reset advances

113
00:03:50,640 --> 00:03:54,400
in pseudo-correlation generators

114
00:03:54,400 --> 00:03:56,480
so another benefit of the dynamic speeds

115
00:03:56,480 --> 00:03:58,159
protocol is that we actually get

116
00:03:58,159 --> 00:04:00,159
something very practical and the

117
00:04:00,159 --> 00:04:02,159
pre-processing phase has the lowest

118
00:04:02,159 --> 00:04:03,840
communication of any speech-like

119
00:04:03,840 --> 00:04:05,439
reprocessing protocol that was

120
00:04:05,439 --> 00:04:07,040
previously known

121
00:04:07,040 --> 00:04:09,439
this even holds if you look at only

122
00:04:09,439 --> 00:04:12,720
protocols without the dynamic feature

123
00:04:12,720 --> 00:04:14,560
so that's all i have time for for now

124
00:04:14,560 --> 00:04:15,680
but if you want to read more you can

125
00:04:15,680 --> 00:04:17,680
look at our paper on eprint or check out

126
00:04:17,680 --> 00:04:21,798
the talk crypto next week

