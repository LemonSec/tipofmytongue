1
00:00:01,040 --> 00:00:02,720
hi my name is shu and this is a work

2
00:00:02,720 --> 00:00:05,920
with rafael del pino

3
00:00:05,920 --> 00:00:08,080
so what we do is that we propose a more

4
00:00:08,080 --> 00:00:10,000
efficient ladder space around optimal

5
00:00:10,000 --> 00:00:12,080
blind signature in this work

6
00:00:12,080 --> 00:00:14,480
and our work can be extended to satisfy

7
00:00:14,480 --> 00:00:16,720
partially blindness and it's also the

8
00:00:16,720 --> 00:00:19,039
first scheme to be proven securing the

9
00:00:19,039 --> 00:00:21,600
quantum random oracle model

10
00:00:21,600 --> 00:00:23,279
we follow generic blind's signature

11
00:00:23,279 --> 00:00:26,000
recipe by officialino 5 where the user

12
00:00:26,000 --> 00:00:28,080
commits to a message

13
00:00:28,080 --> 00:00:30,560
and creates his com and the signer will

14
00:00:30,560 --> 00:00:32,399
sign on this commitment

15
00:00:32,399 --> 00:00:34,480
and user when given this signature will

16
00:00:34,480 --> 00:00:36,160
provide us your knowledge proof that

17
00:00:36,160 --> 00:00:38,160
this signature is a valid signature on

18
00:00:38,160 --> 00:00:40,079
this commitment which is a valid

19
00:00:40,079 --> 00:00:42,840
commitment on the original message

20
00:00:42,840 --> 00:00:45,600
here and the whole issue here is that

21
00:00:45,600 --> 00:00:47,120
the signature and this commitment must

22
00:00:47,120 --> 00:00:49,840
be kept hidden for blindness to home

23
00:00:49,840 --> 00:00:52,320
and our work is basically providing a

24
00:00:52,320 --> 00:00:54,239
new approach to this

25
00:00:54,239 --> 00:00:56,800
component

26
00:00:57,440 --> 00:00:59,440
so prior to our work there were three

27
00:00:59,440 --> 00:01:01,359
main uh

28
00:01:01,359 --> 00:01:03,760
lines of work for blind signatures one

29
00:01:03,760 --> 00:01:06,080
is a shore type line signature

30
00:01:06,080 --> 00:01:08,320
and uh this has been the most active

31
00:01:08,320 --> 00:01:10,640
area of research but hong kong recently

32
00:01:10,640 --> 00:01:12,560
showed that provable secure parameters

33
00:01:12,560 --> 00:01:16,400
require signature of several megabytes

34
00:01:16,400 --> 00:01:18,159
there is also a very recent work by

35
00:01:18,159 --> 00:01:20,960
lubusheski eron that constructs a new

36
00:01:20,960 --> 00:01:22,799
type of blind signature from one time

37
00:01:22,799 --> 00:01:25,439
signature with an or proof

38
00:01:25,439 --> 00:01:27,840
this is an interesting deviation from

39
00:01:27,840 --> 00:01:30,479
prior techniques but it requires an

40
00:01:30,479 --> 00:01:32,079
upper bound on the number of signature

41
00:01:32,079 --> 00:01:34,720
at setup

42
00:01:34,799 --> 00:01:38,240
finally uh the third one is base

43
00:01:38,240 --> 00:01:40,799
instantiating generated construction and

44
00:01:40,799 --> 00:01:44,320
agro it all uh creates well provides two

45
00:01:44,320 --> 00:01:46,640
generic constructions and the first one

46
00:01:46,640 --> 00:01:49,280
is based on random oracles and um

47
00:01:49,280 --> 00:01:51,920
evaluating that random oracle using fhe

48
00:01:51,920 --> 00:01:54,799
so this is rather less heuristic

49
00:01:54,799 --> 00:01:57,600
however the second one is very efficient

50
00:01:57,600 --> 00:01:59,280
but it requires a one more sis

51
00:01:59,280 --> 00:02:00,960
assumption which is non-standard and

52
00:02:00,960 --> 00:02:03,840
needs a bit more crypt analysis to have

53
00:02:03,840 --> 00:02:06,960
to base confidence on

54
00:02:07,040 --> 00:02:09,119
so our work in more detail is that we

55
00:02:09,119 --> 00:02:12,400
provide the first round optimal and uh

56
00:02:12,400 --> 00:02:13,760
a scheme that supports unbalanced

57
00:02:13,760 --> 00:02:15,599
signature

58
00:02:15,599 --> 00:02:17,760
so uh the verification keys can support

59
00:02:17,760 --> 00:02:19,680
any unbounded polynomial e-mini

60
00:02:19,680 --> 00:02:21,680
signature it's also based on standard

61
00:02:21,680 --> 00:02:23,760
lattice based assumptions and it's the

62
00:02:23,760 --> 00:02:25,360
first to be secure in the quantum random

63
00:02:25,360 --> 00:02:26,959
oracle model

64
00:02:26,959 --> 00:02:28,560
and it is more efficient than prior

65
00:02:28,560 --> 00:02:30,400
works so it provides around 100

66
00:02:30,400 --> 00:02:32,640
kilobytes for the signature and since

67
00:02:32,640 --> 00:02:34,959
it's a generic construction we are we

68
00:02:34,959 --> 00:02:36,959
could be able to plug in recent niz case

69
00:02:36,959 --> 00:02:40,160
to further lower the synchro size

70
00:02:40,160 --> 00:02:43,360
and agro recently updated updated their

71
00:02:43,360 --> 00:02:45,760
paper and what they did was that they

72
00:02:45,760 --> 00:02:48,239
used the recent uh nick by lewishevsky

73
00:02:48,239 --> 00:02:50,959
at all in crypto this year to achieve a

74
00:02:50,959 --> 00:02:54,480
shorter signature size than what we did

75
00:02:55,519 --> 00:02:57,120
so at the heart of our construction we

76
00:02:57,120 --> 00:02:59,280
provide a new commit then sign and zero

77
00:02:59,280 --> 00:03:02,640
knowledge proof uh proof protocol

78
00:03:02,640 --> 00:03:04,159
so here the client will create a

79
00:03:04,159 --> 00:03:05,760
commitment to this message it will send

80
00:03:05,760 --> 00:03:07,840
it to the signer the signer will sign

81
00:03:07,840 --> 00:03:10,720
this and then provide a signature back

82
00:03:10,720 --> 00:03:12,480
and what the client wants to do now is

83
00:03:12,480 --> 00:03:13,840
that it wants to prove in their

84
00:03:13,840 --> 00:03:16,159
knowledge that it has a commitment and

85
00:03:16,159 --> 00:03:18,480
signature pair such that this commitment

86
00:03:18,480 --> 00:03:21,519
opens to this public message and that

87
00:03:21,519 --> 00:03:23,680
this commitment is also signed by this

88
00:03:23,680 --> 00:03:25,200
signer

89
00:03:25,200 --> 00:03:27,280
and here we want to keep the commitment

90
00:03:27,280 --> 00:03:29,360
and signature private because this is

91
00:03:29,360 --> 00:03:33,280
how we get blindness for the

92
00:03:33,280 --> 00:03:36,400
resulting blind signature

93
00:03:36,400 --> 00:03:38,400
and we know how to do this efficiently

94
00:03:38,400 --> 00:03:40,640
in the classical setting using uh elgam

95
00:03:40,640 --> 00:03:42,959
i mean discrete log or ddh type of

96
00:03:42,959 --> 00:03:44,720
arguments but it's surprisingly

97
00:03:44,720 --> 00:03:46,239
non-trivial to do this in the lattice

98
00:03:46,239 --> 00:03:48,000
setting and this is

99
00:03:48,000 --> 00:03:49,680
basically why

100
00:03:49,680 --> 00:03:52,879
most prior techniques or all prior

101
00:03:52,879 --> 00:03:53,920
techniques

102
00:03:53,920 --> 00:03:56,319
requires a relatively

103
00:03:56,319 --> 00:03:59,200
inefficient scheme

104
00:03:59,200 --> 00:04:01,680
so at the core of our idea is that we

105
00:04:01,680 --> 00:04:04,640
use an abb style signature for this

106
00:04:04,640 --> 00:04:05,840
signature

107
00:04:05,840 --> 00:04:08,319
and to to proceed with this

108
00:04:08,319 --> 00:04:11,040
commit and prove protocol

109
00:04:11,040 --> 00:04:12,879
so for abv signatures

110
00:04:12,879 --> 00:04:15,120
the message is embedded into this

111
00:04:15,120 --> 00:04:17,600
lattice and the short vector e will be

112
00:04:17,600 --> 00:04:19,918
the signature

113
00:04:19,918 --> 00:04:21,600
and this is a transformation inspired by

114
00:04:21,600 --> 00:04:24,400
del pino at all but here uh we'll just

115
00:04:24,400 --> 00:04:26,639
replace this message times g by a

116
00:04:26,639 --> 00:04:28,720
commitment c

117
00:04:28,720 --> 00:04:30,639
and this commitment we'll be using a

118
00:04:30,639 --> 00:04:32,639
very traditional uh lettuce-based

119
00:04:32,639 --> 00:04:34,479
commitment and it will be in the form of

120
00:04:34,479 --> 00:04:38,320
br plus message time g

121
00:04:40,639 --> 00:04:43,040
and here um

122
00:04:43,040 --> 00:04:45,040
if we combine these equations together

123
00:04:45,040 --> 00:04:45,840
the

124
00:04:45,840 --> 00:04:49,199
client can recompute this equation and

125
00:04:49,199 --> 00:04:52,000
uh transform it into this kind of

126
00:04:52,000 --> 00:04:54,400
public matrix time private matrix a

127
00:04:54,400 --> 00:04:56,960
private short vector equation

128
00:04:56,960 --> 00:04:58,960
and at this point this is a simple size

129
00:04:58,960 --> 00:05:01,280
relation with an accompanying efficient

130
00:05:01,280 --> 00:05:03,280
and i z king

131
00:05:03,280 --> 00:05:05,440
so for more details please i refer to

132
00:05:05,440 --> 00:05:08,160
our full presentation or our paper

133
00:05:08,160 --> 00:05:09,680
and although i didn't explain it in

134
00:05:09,680 --> 00:05:11,759
detail the most technical part of the

135
00:05:11,759 --> 00:05:15,039
work was not the core idea but uh it's

136
00:05:15,039 --> 00:05:16,479
it's a more subtle part where this

137
00:05:16,479 --> 00:05:18,720
commitment c has to be proven well

138
00:05:18,720 --> 00:05:22,160
formed via nizk but here due to security

139
00:05:22,160 --> 00:05:24,080
proof issues we need this to be

140
00:05:24,080 --> 00:05:26,320
multi-proof online extractable which is

141
00:05:26,320 --> 00:05:28,639
a very strong property and to achieve

142
00:05:28,639 --> 00:05:30,560
this in a very relatively efficient

143
00:05:30,560 --> 00:05:32,880
manner we rely on the recent

144
00:05:32,880 --> 00:05:35,680
techniques to get this strong nic game

145
00:05:35,680 --> 00:05:38,240
and this will give us also as a bonus

146
00:05:38,240 --> 00:05:40,000
security in the qram

147
00:05:40,000 --> 00:05:43,400
thank you for listening

