1
00:00:00,320 --> 00:00:02,480
hi everyone so this is an overview of a

2
00:00:02,480 --> 00:00:04,560
paper with barcelonic named type primage

3
00:00:04,560 --> 00:00:06,879
resistance of the sponge construction

4
00:00:06,879 --> 00:00:09,280
so we focus on the sponge used for

5
00:00:09,280 --> 00:00:10,960
hashing purposes based on the

6
00:00:10,960 --> 00:00:12,240
permutation

7
00:00:12,240 --> 00:00:14,160
the sponge operates on the state of size

8
00:00:14,160 --> 00:00:16,640
by bits and it is split into two parts

9
00:00:16,640 --> 00:00:18,720
the first one is called the auto part it

10
00:00:18,720 --> 00:00:20,800
comprises orbit and it determines the

11
00:00:20,800 --> 00:00:22,400
rate at which message blocks are

12
00:00:22,400 --> 00:00:25,439
absorbed and the digest is extracted

13
00:00:25,439 --> 00:00:27,840
then we have the inner part it comprises

14
00:00:27,840 --> 00:00:30,160
zip bits c is called the capacity and

15
00:00:30,160 --> 00:00:31,840
this is a security parameter of the

16
00:00:31,840 --> 00:00:33,040
sponge

17
00:00:33,040 --> 00:00:34,880
we will restrict ourselves to the case

18
00:00:34,880 --> 00:00:37,760
where the digest size is fixed to n bits

19
00:00:37,760 --> 00:00:39,760
and we do not buy l the number of

20
00:00:39,760 --> 00:00:41,520
required squeeze call in order to

21
00:00:41,520 --> 00:00:43,520
extract the digest

22
00:00:43,520 --> 00:00:44,960
there existable tweaks to this

23
00:00:44,960 --> 00:00:47,039
construction and here we focus on two of

24
00:00:47,039 --> 00:00:48,800
them which were introduced in the

25
00:00:48,800 --> 00:00:50,719
context of photon scheme

26
00:00:50,719 --> 00:00:52,320
the first one allows to have a first

27
00:00:52,320 --> 00:00:54,320
message block which is larger with a

28
00:00:54,320 --> 00:00:56,879
size denoted by r prime prime and in the

29
00:00:56,879 --> 00:00:59,600
second week the digest is extracted with

30
00:00:59,600 --> 00:01:02,719
a rate r prime which is larger than r

31
00:01:02,719 --> 00:01:04,640
now we are interested by the probable

32
00:01:04,640 --> 00:01:07,520
secretive warranties of the sponge

33
00:01:07,520 --> 00:01:09,360
to do that we place ourselves in the

34
00:01:09,360 --> 00:01:11,680
ideal primitive model meaning that the

35
00:01:11,680 --> 00:01:13,520
permutation is assumed to be simple

36
00:01:13,520 --> 00:01:15,439
uniformly at random

37
00:01:15,439 --> 00:01:17,200
now in order to argue that we have a

38
00:01:17,200 --> 00:01:18,640
good hash function there are three

39
00:01:18,640 --> 00:01:20,880
classical security requirements

40
00:01:20,880 --> 00:01:22,799
mainly pre-image second pre-image and

41
00:01:22,799 --> 00:01:24,640
collision resistance

42
00:01:24,640 --> 00:01:26,479
unfortunately these security

43
00:01:26,479 --> 00:01:28,240
requirements are not strong enough for

44
00:01:28,240 --> 00:01:29,680
some applications

45
00:01:29,680 --> 00:01:31,520
consider for example the merkle dam

46
00:01:31,520 --> 00:01:33,439
guard construction based on an ideal

47
00:01:33,439 --> 00:01:35,439
compression function even if it is

48
00:01:35,439 --> 00:01:37,360
pre-image subunpre image and collision

49
00:01:37,360 --> 00:01:39,119
resistance it is exposed to length

50
00:01:39,119 --> 00:01:41,360
extension attacks which can be a problem

51
00:01:41,360 --> 00:01:43,600
in some concrete schemes

52
00:01:43,600 --> 00:01:45,680
in fact there exists a stronger security

53
00:01:45,680 --> 00:01:46,880
properties which is called

54
00:01:46,880 --> 00:01:48,479
indifferentiability

55
00:01:48,479 --> 00:01:50,479
in short it is a distinguishing game

56
00:01:50,479 --> 00:01:52,320
where the adversary must differentiate

57
00:01:52,320 --> 00:01:54,240
between a random morocco and the

58
00:01:54,240 --> 00:01:55,840
construction based on the public

59
00:01:55,840 --> 00:01:58,240
primitive it has been shown among other

60
00:01:58,240 --> 00:02:00,479
that indifferentiability implies

61
00:02:00,479 --> 00:02:02,799
security security of pre-image second

62
00:02:02,799 --> 00:02:05,200
pre-image and collision

63
00:02:05,200 --> 00:02:06,560
now going back to the sponge

64
00:02:06,560 --> 00:02:08,318
construction it has been shown to be

65
00:02:08,318 --> 00:02:10,639
indifferentiable with a bound of form q

66
00:02:10,639 --> 00:02:13,360
of a 2 to the c over 2. concretely it

67
00:02:13,360 --> 00:02:15,200
tells us that in order to be able to

68
00:02:15,200 --> 00:02:17,120
differentiate the sponge from a random

69
00:02:17,120 --> 00:02:19,840
oracle one needs at least 2 to the c

70
00:02:19,840 --> 00:02:22,400
over 2 queries and below this number of

71
00:02:22,400 --> 00:02:24,720
queries any attack on the sponge cannot

72
00:02:24,720 --> 00:02:26,480
be easier than the same attack on the

73
00:02:26,480 --> 00:02:28,319
render morocco

74
00:02:28,319 --> 00:02:30,319
this is what we can see on this table

75
00:02:30,319 --> 00:02:32,239
where for the classical security

76
00:02:32,239 --> 00:02:34,400
properties the security bond is the sum

77
00:02:34,400 --> 00:02:35,760
of two terms

78
00:02:35,760 --> 00:02:37,040
the first one comes from

79
00:02:37,040 --> 00:02:39,440
indifferentiability while the second one

80
00:02:39,440 --> 00:02:41,760
is the success probability of a generic

81
00:02:41,760 --> 00:02:44,319
attack on the render morocco

82
00:02:44,319 --> 00:02:46,239
now we can compare the security bomb

83
00:02:46,239 --> 00:02:48,239
against the best known attack

84
00:02:48,239 --> 00:02:50,720
so for indifferentiability collision and

85
00:02:50,720 --> 00:02:52,640
second pre-image this is clear that the

86
00:02:52,640 --> 00:02:54,560
security bond matches the best-known

87
00:02:54,560 --> 00:02:57,360
attack and the non-generic parts of the

88
00:02:57,360 --> 00:02:58,560
attack

89
00:02:58,560 --> 00:02:59,760
exploit

90
00:02:59,760 --> 00:03:01,840
in the collision of the sponge

91
00:03:01,840 --> 00:03:03,760
and this is the key id

92
00:03:03,760 --> 00:03:06,319
now for pre-image the best known attack

93
00:03:06,319 --> 00:03:08,080
is essentially the same one as second

94
00:03:08,080 --> 00:03:10,720
pre-image but there is an extra step of

95
00:03:10,720 --> 00:03:13,200
course 2 to the minus r prime

96
00:03:13,200 --> 00:03:15,280
this step was not required in the case

97
00:03:15,280 --> 00:03:17,280
of second pre-image because the

98
00:03:17,280 --> 00:03:19,840
knowledge of one first pre-match gave us

99
00:03:19,840 --> 00:03:22,239
access to intermediate state within the

100
00:03:22,239 --> 00:03:24,879
sponge and it saved some work in the

101
00:03:24,879 --> 00:03:26,480
attack cost

102
00:03:26,480 --> 00:03:28,560
on the other side the security bond of

103
00:03:28,560 --> 00:03:30,400
second primage and pre-match are the

104
00:03:30,400 --> 00:03:32,879
same therefore when the cost of this

105
00:03:32,879 --> 00:03:34,879
extra step is larger than the cost of

106
00:03:34,879 --> 00:03:36,720
finding in a collision there is

107
00:03:36,720 --> 00:03:38,799
therefore a gap between the security

108
00:03:38,799 --> 00:03:41,920
bond and the best-known attack

109
00:03:41,920 --> 00:03:43,920
and in this work we proved a tighter

110
00:03:43,920 --> 00:03:45,920
security bond for pre-image resistance

111
00:03:45,920 --> 00:03:48,239
which shows in particular optimality of

112
00:03:48,239 --> 00:03:49,840
the best-known attack

113
00:03:49,840 --> 00:03:51,760
in fact this bond was already believed

114
00:03:51,760 --> 00:03:53,599
to be true but there was no proof for

115
00:03:53,599 --> 00:03:55,120
that

116
00:03:55,120 --> 00:03:56,560
our bond can improve the

117
00:03:56,560 --> 00:03:58,000
state-of-the-art

118
00:03:58,000 --> 00:04:00,319
pre-image security resistance of scheme

119
00:04:00,319 --> 00:04:02,640
that output the digest in multiple

120
00:04:02,640 --> 00:04:05,280
rounds and this is the case for uh some

121
00:04:05,280 --> 00:04:07,120
lightweight crypto scheme where we have

122
00:04:07,120 --> 00:04:10,080
small primitives and small rates

123
00:04:10,080 --> 00:04:11,920
so on this table we have several

124
00:04:11,920 --> 00:04:13,680
lightweight schemes

125
00:04:13,680 --> 00:04:15,519
and the comparison between the old

126
00:04:15,519 --> 00:04:19,519
security bomb and the new secretivo

127
00:04:19,519 --> 00:04:21,440
a large part of these schemes are

128
00:04:21,440 --> 00:04:23,280
candidates of the nist lightweight

129
00:04:23,280 --> 00:04:25,280
crypto competition and in particular

130
00:04:25,280 --> 00:04:27,360
there are two finalists asconhush and

131
00:04:27,360 --> 00:04:29,840
photon beetle ash for the case of ascon

132
00:04:29,840 --> 00:04:32,800
hash the secretive bomb

133
00:04:32,800 --> 00:04:35,199
improves uh shows an improvement of 50

134
00:04:35,199 --> 00:04:37,840
percent in the exponents

135
00:04:37,840 --> 00:04:39,919
so that's it for this presentation i

136
00:04:39,919 --> 00:04:41,840
hope that you enjoy it and thank you for

137
00:04:41,840 --> 00:04:44,960
your attention

