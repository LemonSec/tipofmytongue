1
00:00:00,799 --> 00:00:03,760
hi everyone maria here

2
00:00:03,760 --> 00:00:05,680
today i'll be talking to you about

3
00:00:05,680 --> 00:00:07,600
accelerating the dell scale breathe

4
00:00:07,600 --> 00:00:09,840
algorithm with fast subfield root

5
00:00:09,840 --> 00:00:11,120
detection

6
00:00:11,120 --> 00:00:13,120
this is based on joint work with cray

7
00:00:13,120 --> 00:00:17,000
costello and jiashi

8
00:00:17,199 --> 00:00:19,520
the general super singular isogeny

9
00:00:19,520 --> 00:00:21,840
problem is the foundational problem in

10
00:00:21,840 --> 00:00:24,000
isog-based cryptography

11
00:00:24,000 --> 00:00:26,080
and it's believed to be secure against

12
00:00:26,080 --> 00:00:28,840
both classical and quantum

13
00:00:28,840 --> 00:00:31,760
computers given two super singular

14
00:00:31,760 --> 00:00:34,800
elliptic curves defined over f p squared

15
00:00:34,800 --> 00:00:37,440
it asks us to find an isogeny between

16
00:00:37,440 --> 00:00:39,440
them

17
00:00:39,440 --> 00:00:42,079
note that we do not assume the knowledge

18
00:00:42,079 --> 00:00:44,960
of any torsion points or that we know

19
00:00:44,960 --> 00:00:48,160
the degree of the isogeny

20
00:00:48,160 --> 00:00:50,239
this makes the problem substantially

21
00:00:50,239 --> 00:00:53,360
easier as shown independently by castric

22
00:00:53,360 --> 00:00:56,559
and the crew and mano and martindale in

23
00:00:56,559 --> 00:00:59,120
their recent papers giving polynomial

24
00:00:59,120 --> 00:01:03,120
attacks against the key exchange sidh

25
00:01:03,120 --> 00:01:06,159
or the encryption scheme psych so here

26
00:01:06,159 --> 00:01:08,000
we're really just considering it the

27
00:01:08,000 --> 00:01:10,080
general isogeny problem

28
00:01:10,080 --> 00:01:13,040
where all we know is that we have two

29
00:01:13,040 --> 00:01:16,159
elliptic curves defined over f p squared

30
00:01:16,159 --> 00:01:18,640
and we want to find an isogeny between

31
00:01:18,640 --> 00:01:20,400
them

32
00:01:20,400 --> 00:01:22,799
we can convert the isogeny problem to a

33
00:01:22,799 --> 00:01:27,119
pathfinding problem in the isogeny graph

34
00:01:27,119 --> 00:01:30,560
here the nodes are elliptic curves

35
00:01:30,560 --> 00:01:33,119
which we label with the j invariant

36
00:01:33,119 --> 00:01:35,680
which lies in fp squared

37
00:01:35,680 --> 00:01:39,360
the edges are then isogenes

38
00:01:39,360 --> 00:01:41,600
so finding a path between two j

39
00:01:41,600 --> 00:01:44,720
invariants in this isogeny graph

40
00:01:44,720 --> 00:01:48,320
is equivalent to finding an isogeny

41
00:01:48,320 --> 00:01:51,119
between the two elliptic curves labeled

42
00:01:51,119 --> 00:01:55,000
by the strain variant

43
00:01:56,719 --> 00:01:58,960
in the isogeny graph there are two types

44
00:01:58,960 --> 00:02:00,079
of nodes

45
00:02:00,079 --> 00:02:02,560
those lying in fp squared and those

46
00:02:02,560 --> 00:02:04,719
lying in fp

47
00:02:04,719 --> 00:02:06,960
gels and galbraith's key idea was that

48
00:02:06,960 --> 00:02:10,318
finding paths between the fp nodes

49
00:02:10,318 --> 00:02:13,040
is comparatively easy

50
00:02:13,040 --> 00:02:14,959
so the bottleneck step of finding

51
00:02:14,959 --> 00:02:19,840
isogenes between these two jain variants

52
00:02:19,840 --> 00:02:23,040
is really walking in the graph

53
00:02:23,040 --> 00:02:26,959
until you hit a node defined over fp

54
00:02:26,959 --> 00:02:29,520
because once you find a path from your

55
00:02:29,520 --> 00:02:32,800
start and end node to nodes defined over

56
00:02:32,800 --> 00:02:33,840
fp

57
00:02:33,840 --> 00:02:36,160
then you can navigate in the fp sub

58
00:02:36,160 --> 00:02:38,160
graph which is

59
00:02:38,160 --> 00:02:41,120
a lot easier

60
00:02:41,280 --> 00:02:42,879
in solver

61
00:02:42,879 --> 00:02:44,800
we implement and optimize dell

62
00:02:44,800 --> 00:02:47,200
scalability's algorithm and determine

63
00:02:47,200 --> 00:02:49,440
its concrete complexity

64
00:02:49,440 --> 00:02:51,440
this is really important for determining

65
00:02:51,440 --> 00:02:54,239
concrete parameters for schemes whose

66
00:02:54,239 --> 00:02:56,160
best attack is the dell stylebreath

67
00:02:56,160 --> 00:02:57,440
algorithm

68
00:02:57,440 --> 00:02:59,840
such as the soundness of a recent

69
00:02:59,840 --> 00:03:02,239
isogeny-based signature scheme

70
00:03:02,239 --> 00:03:05,040
ski sign

71
00:03:05,040 --> 00:03:07,519
building on this we present supersolver

72
00:03:07,519 --> 00:03:10,239
with superpower fast subfield root

73
00:03:10,239 --> 00:03:11,920
detection

74
00:03:11,920 --> 00:03:14,159
this allows us to scan a larger

75
00:03:14,159 --> 00:03:17,440
proportion of the graph at each step

76
00:03:17,440 --> 00:03:20,640
therefore minimizing the number of fp

77
00:03:20,640 --> 00:03:24,080
operations per node revealed in the

78
00:03:24,080 --> 00:03:26,400
graph

79
00:03:26,400 --> 00:03:28,799
in this way we can cover a larger

80
00:03:28,799 --> 00:03:30,959
proportion of the graph while still

81
00:03:30,959 --> 00:03:32,480
minimizing

82
00:03:32,480 --> 00:03:36,399
the number of fp operations

83
00:03:36,879 --> 00:03:38,959
in doing so we provide the best

84
00:03:38,959 --> 00:03:41,840
algorithm for finding paths to the fp

85
00:03:41,840 --> 00:03:43,680
sub graph

86
00:03:43,680 --> 00:03:46,319
and we decrease the concrete complexity

87
00:03:46,319 --> 00:03:49,280
of the dal scale breath algorithm

88
00:03:49,280 --> 00:03:51,040
this affects

89
00:03:51,040 --> 00:03:53,439
schemes such as ski sign an

90
00:03:53,439 --> 00:03:55,840
isogeny-based signature scheme and

91
00:03:55,840 --> 00:04:00,080
b-side an isogeny-based key exchange

92
00:04:00,080 --> 00:04:02,400
for more details please come to the full

93
00:04:02,400 --> 00:04:04,239
talk on wednesday

94
00:04:04,239 --> 00:04:07,480
thank you

