1
00:00:01,040 --> 00:00:02,320
i'm sam dimmer

2
00:00:02,320 --> 00:00:03,520
and

3
00:00:03,520 --> 00:00:05,200
this is joint work on authenticated

4
00:00:05,200 --> 00:00:06,640
garbling from simple correlations with

5
00:00:06,640 --> 00:00:09,760
eval eshai steve liu and ravi estrowski

6
00:00:09,760 --> 00:00:11,519
our aim is to improve the concrete

7
00:00:11,519 --> 00:00:13,519
efficiency of constant around malicious

8
00:00:13,519 --> 00:00:15,040
security party computation built off of

9
00:00:15,040 --> 00:00:16,560
garbled circuits and later authenticated

10
00:00:16,560 --> 00:00:17,840
grappling work

11
00:00:17,840 --> 00:00:20,240
uh the technology that underlies this is

12
00:00:20,240 --> 00:00:22,400
what we call simple correlations

13
00:00:22,400 --> 00:00:23,920
uh mainly a simple correlated randomness

14
00:00:23,920 --> 00:00:25,279
that can be generated silently with

15
00:00:25,279 --> 00:00:26,640
subliner communication and with good

16
00:00:26,640 --> 00:00:28,240
concrete efficiency

17
00:00:28,240 --> 00:00:29,279
the authenticated garbling work of

18
00:00:29,279 --> 00:00:30,880
wengedale and cassidol

19
00:00:30,880 --> 00:00:33,040
uh extended yaz garbled circuits uh

20
00:00:33,040 --> 00:00:35,200
using an oblivious transfer based form

21
00:00:35,200 --> 00:00:36,399
of wire authentication to give uh

22
00:00:36,399 --> 00:00:38,800
malicious security computation

23
00:00:38,800 --> 00:00:40,879
using uh free xor and wang at all and

24
00:00:40,879 --> 00:00:42,879
then the half gates of zahra at all in

25
00:00:42,879 --> 00:00:44,719
the follow-up work

26
00:00:44,719 --> 00:00:46,879
we will replace that ot machinery with

27
00:00:46,879 --> 00:00:48,640
our simple correlations in this short

28
00:00:48,640 --> 00:00:50,239
talk i will describe a little bit more

29
00:00:50,239 --> 00:00:52,399
about what authenticated garbling is and

30
00:00:52,399 --> 00:00:54,160
which correlations we used

31
00:00:54,160 --> 00:00:55,840
as well as

32
00:00:55,840 --> 00:00:58,480
which of the details of the construction

33
00:00:58,480 --> 00:01:00,800
from uh bengal and cathode survive

34
00:01:00,800 --> 00:01:02,559
recognizably into our work and which

35
00:01:02,559 --> 00:01:03,600
didn't

36
00:01:03,600 --> 00:01:05,680
and then as a very quick aside i will

37
00:01:05,680 --> 00:01:07,119
mention the slicing indexing work of

38
00:01:07,119 --> 00:01:08,960
russell and roy from last year and it is

39
00:01:08,960 --> 00:01:10,720
an open question whether or not this 1.5

40
00:01:10,720 --> 00:01:12,400
table rows per and gate

41
00:01:12,400 --> 00:01:13,600
can be transferred into authenticated

42
00:01:13,600 --> 00:01:14,799
goblin

43
00:01:14,799 --> 00:01:16,080
now

44
00:01:16,080 --> 00:01:18,799
this truth table and the garbling

45
00:01:18,799 --> 00:01:20,720
in the semi-honest setting may or may

46
00:01:20,720 --> 00:01:22,560
not look recognizable but

47
00:01:22,560 --> 00:01:24,479
the lambdas represent masks that hide

48
00:01:24,479 --> 00:01:26,640
from the evaluator the

49
00:01:26,640 --> 00:01:29,040
value of the wires and

50
00:01:29,040 --> 00:01:30,640
then additionally the

51
00:01:30,640 --> 00:01:32,240
evaluator will learn exactly one of the

52
00:01:32,240 --> 00:01:35,280
wire labels la-0 or la-1 lb 0 or lb-1

53
00:01:35,280 --> 00:01:36,400
which will allow them to read one row of

54
00:01:36,400 --> 00:01:37,840
the table

55
00:01:37,840 --> 00:01:38,799
now

56
00:01:38,799 --> 00:01:40,960
a malicious party a

57
00:01:40,960 --> 00:01:43,360
uh the garbler could cheat either by

58
00:01:43,360 --> 00:01:44,960
malforming the table

59
00:01:44,960 --> 00:01:46,880
or once you add a zero knowledge proof

60
00:01:46,880 --> 00:01:49,360
that the table has not been malformed by

61
00:01:49,360 --> 00:01:50,960
a selective failure attack because

62
00:01:50,960 --> 00:01:52,479
you're only going to open one of the

63
00:01:52,479 --> 00:01:54,720
zero knowledge proofs based on

64
00:01:54,720 --> 00:01:57,040
which wire labels you hold so to guard

65
00:01:57,040 --> 00:01:58,719
against both of these attacks

66
00:01:58,719 --> 00:02:01,360
you make the values uh lambda

67
00:02:01,360 --> 00:02:02,880
a lambda b limit c that are the wire

68
00:02:02,880 --> 00:02:04,479
masks to be held as secret shares by

69
00:02:04,479 --> 00:02:06,000
both parties and then you have to

70
00:02:06,000 --> 00:02:07,520
authenticate shares of both all the wire

71
00:02:07,520 --> 00:02:08,639
labels

72
00:02:08,639 --> 00:02:10,639
and all the wire masks and then all of

73
00:02:10,639 --> 00:02:13,120
the and gates

74
00:02:13,120 --> 00:02:14,319
now the simple correlations we're going

75
00:02:14,319 --> 00:02:16,080
to use are vector oblivious linear

76
00:02:16,080 --> 00:02:18,800
evaluation of vector ole or vol

77
00:02:18,800 --> 00:02:20,959
which machinery has been

78
00:02:20,959 --> 00:02:22,080
sort of studied a lot recently and

79
00:02:22,080 --> 00:02:24,400
improved for the purpose of a new branch

80
00:02:24,400 --> 00:02:26,560
of full base zero knowledge proofs

81
00:02:26,560 --> 00:02:28,480
as well as multiplication triple style

82
00:02:28,480 --> 00:02:30,640
randomness which is much more classical

83
00:02:30,640 --> 00:02:31,920
but only recently has been able to be

84
00:02:31,920 --> 00:02:33,680
generated silently and officially based

85
00:02:33,680 --> 00:02:35,360
on ring lpn

86
00:02:35,360 --> 00:02:37,040
i'll mention quickly that there are a

87
00:02:37,040 --> 00:02:38,879
number of variants of volt type and mt

88
00:02:38,879 --> 00:02:40,480
type randomness which we understand is

89
00:02:40,480 --> 00:02:41,680
sort of forming a correlation calculus

90
00:02:41,680 --> 00:02:42,640
we'll describe in the full version of

91
00:02:42,640 --> 00:02:44,160
this talk

92
00:02:44,160 --> 00:02:45,840
now for our construction versus the old

93
00:02:45,840 --> 00:02:46,959
construction we continue to generate

94
00:02:46,959 --> 00:02:48,959
shares of authenticated bits and then

95
00:02:48,959 --> 00:02:50,879
shares uh authenticated shares of bits

96
00:02:50,879 --> 00:02:52,959
and authenticated shares of and gates um

97
00:02:52,959 --> 00:02:54,640
the authenticated bits can fall

98
00:02:54,640 --> 00:02:56,480
naturally out of a silent bowl

99
00:02:56,480 --> 00:02:57,519
generation

100
00:02:57,519 --> 00:02:58,720
the authenticated generation of and

101
00:02:58,720 --> 00:03:00,640
gates is more complicated and differs in

102
00:03:00,640 --> 00:03:03,440
each of our three constructions

103
00:03:03,440 --> 00:03:05,840
we need various machinery for

104
00:03:05,840 --> 00:03:06,879
each of the different constructions we

105
00:03:06,879 --> 00:03:07,680
have

106
00:03:07,680 --> 00:03:08,560
some of them are just improving

107
00:03:08,560 --> 00:03:10,080
efficiency like this one that allows us

108
00:03:10,080 --> 00:03:12,080
to pass between uh statistically secure

109
00:03:12,080 --> 00:03:13,120
authentication and computationally

110
00:03:13,120 --> 00:03:15,680
secure authenticated bits efficiently

111
00:03:15,680 --> 00:03:16,959
for nisk we need a conditional

112
00:03:16,959 --> 00:03:18,640
disclosure of secrets

113
00:03:18,640 --> 00:03:20,800
functionality in order to authenticate

114
00:03:20,800 --> 00:03:22,640
the evaluator's inputs which is natural

115
00:03:22,640 --> 00:03:24,720
for a risk setting

116
00:03:24,720 --> 00:03:26,400
and additionally because we are reducing

117
00:03:26,400 --> 00:03:27,840
the number of rounds

118
00:03:27,840 --> 00:03:29,599
we can no longer have back and forth

119
00:03:29,599 --> 00:03:30,879
communication to authenticate the

120
00:03:30,879 --> 00:03:32,720
circuit garbling and so we have to sort

121
00:03:32,720 --> 00:03:34,159
of combine the free xor technique of

122
00:03:34,159 --> 00:03:36,480
wing it all and the zahor half gate

123
00:03:36,480 --> 00:03:38,319
technique of cats at all to get the the

124
00:03:38,319 --> 00:03:39,519
garbling right

125
00:03:39,519 --> 00:03:41,280
and i'm going to discuss one aspect of

126
00:03:41,280 --> 00:03:43,120
construction a little bit more detail

127
00:03:43,120 --> 00:03:44,879
for the volt type randomness where we

128
00:03:44,879 --> 00:03:46,959
change the way these wire masses work so

129
00:03:46,959 --> 00:03:48,400
in the standard construction b generates

130
00:03:48,400 --> 00:03:50,239
n distinct wire masks for each of the n

131
00:03:50,239 --> 00:03:52,560
and gates here we generate only l

132
00:03:52,560 --> 00:03:55,120
capital l where l is a small parameter

133
00:03:55,120 --> 00:03:56,319
based on the statistical security

134
00:03:56,319 --> 00:03:57,439
parameter and then generate all of the

135
00:03:57,439 --> 00:03:58,640
remaining

136
00:03:58,640 --> 00:04:00,560
wires as a public linear combination of

137
00:04:00,560 --> 00:04:04,159
the sort of uh truly uh independent wire

138
00:04:04,159 --> 00:04:06,000
values

139
00:04:06,000 --> 00:04:08,239
for security we sort of notice

140
00:04:08,239 --> 00:04:10,640
using some common torques that

141
00:04:10,640 --> 00:04:12,480
uh if you have

142
00:04:12,480 --> 00:04:14,879
row or fewer of these b star entries

143
00:04:14,879 --> 00:04:16,000
they'll all be linearly independent and

144
00:04:16,000 --> 00:04:17,759
so the old security proof goes through

145
00:04:17,759 --> 00:04:19,440
that if a were to crop more than row

146
00:04:19,440 --> 00:04:20,880
table entries and almost

147
00:04:20,880 --> 00:04:21,839
surely

148
00:04:21,839 --> 00:04:24,560
be with a board no matter what

149
00:04:24,560 --> 00:04:25,840
these are results on this page in the

150
00:04:25,840 --> 00:04:27,600
next

151
00:04:27,600 --> 00:04:30,320
and we compare our work not only to

152
00:04:30,320 --> 00:04:31,600
weighing it all in caps at all but also

153
00:04:31,600 --> 00:04:33,520
to those uh to the approaches of cats at

154
00:04:33,520 --> 00:04:35,280
all where you sort of graft in some of

155
00:04:35,280 --> 00:04:36,400
these simple correlations adding in

156
00:04:36,400 --> 00:04:37,680
volume or empty style randomness and

157
00:04:37,680 --> 00:04:39,360
speeds in kind of a naive way

158
00:04:39,360 --> 00:04:42,160
to show so versus the old ot approach we

159
00:04:42,160 --> 00:04:43,680
are at least five times faster with our

160
00:04:43,680 --> 00:04:45,440
best protocol and around two times

161
00:04:45,440 --> 00:04:47,520
faster uh using our techniques versus

162
00:04:47,520 --> 00:04:48,639
this sort of naive application of this

163
00:04:48,639 --> 00:04:50,479
correlated randomness and we get eight

164
00:04:50,479 --> 00:04:52,000
times faster the semi honest cost in the

165
00:04:52,000 --> 00:04:53,120
nisk setting

166
00:04:53,120 --> 00:04:56,600
thank you for your attention

