1
00:00:03,520 --> 00:00:05,600
hello i am akshama and this is the

2
00:00:05,600 --> 00:00:08,000
pre-talk for the paper time space bounds

3
00:00:08,000 --> 00:00:10,000
for finding collisions in merkle dam

4
00:00:10,000 --> 00:00:11,679
guide hash functions

5
00:00:11,679 --> 00:00:14,000
this is a joint work with cr go and

6
00:00:14,000 --> 00:00:15,839
japan glue

7
00:00:15,839 --> 00:00:18,960
as the long title of our paper suggests

8
00:00:18,960 --> 00:00:20,960
we study collision resistance with

9
00:00:20,960 --> 00:00:23,119
pre-computation in merkel dam guard

10
00:00:23,119 --> 00:00:25,119
based hash functions

11
00:00:25,119 --> 00:00:27,359
more specifically we studied resistance

12
00:00:27,359 --> 00:00:30,160
against bounded length collisions

13
00:00:30,160 --> 00:00:33,120
a natural question to ask is why study

14
00:00:33,120 --> 00:00:35,360
the pre-computation model

15
00:00:35,360 --> 00:00:37,680
well simply because this model captures

16
00:00:37,680 --> 00:00:40,320
stronger and more practical adversaries

17
00:00:40,320 --> 00:00:42,239
that can pre-learn something about the

18
00:00:42,239 --> 00:00:44,399
hash function and use that to launch

19
00:00:44,399 --> 00:00:47,200
better attacks

20
00:00:48,239 --> 00:00:50,399
to understand what i mean by bounded

21
00:00:50,399 --> 00:00:52,399
length collisions let me first present

22
00:00:52,399 --> 00:00:54,559
the merkle dam guide construction

23
00:00:54,559 --> 00:00:56,399
these constructions use compression

24
00:00:56,399 --> 00:00:59,840
function h that take fixed sized inputs

25
00:00:59,840 --> 00:01:02,399
and output strings of fixed length the

26
00:01:02,399 --> 00:01:04,640
construction takes salt and messages

27
00:01:04,640 --> 00:01:07,200
input the message is broken into blocks

28
00:01:07,200 --> 00:01:08,640
of fixed size

29
00:01:08,640 --> 00:01:10,720
so for the example

30
00:01:10,720 --> 00:01:13,119
in this diagram the message x is broken

31
00:01:13,119 --> 00:01:16,240
into b blocks x1 through xb and then

32
00:01:16,240 --> 00:01:18,400
edges applied iteratively on these

33
00:01:18,400 --> 00:01:20,880
blocks

34
00:01:22,159 --> 00:01:24,960
the key parameters in our model would be

35
00:01:24,960 --> 00:01:28,080
s which is the length of the precomputed

36
00:01:28,080 --> 00:01:30,560
information t which is the number of

37
00:01:30,560 --> 00:01:32,720
queries made to the compression function

38
00:01:32,720 --> 00:01:33,520
h

39
00:01:33,520 --> 00:01:34,320
and

40
00:01:34,320 --> 00:01:37,200
collisions that would have to be found

41
00:01:37,200 --> 00:01:41,479
have to be b blocks long

42
00:01:42,240 --> 00:01:43,920
there have been some prior works that

43
00:01:43,920 --> 00:01:46,640
have studied this problem for md-based

44
00:01:46,640 --> 00:01:48,479
hash functions

45
00:01:48,479 --> 00:01:50,320
and we present the results of these

46
00:01:50,320 --> 00:01:53,600
prior works in this table

47
00:01:53,600 --> 00:01:57,040
cd gs was the first paper to study this

48
00:01:57,040 --> 00:01:59,119
problem uh and they found that the

49
00:01:59,119 --> 00:02:02,640
advantage um could be bounded by st

50
00:02:02,640 --> 00:02:04,159
squared over n

51
00:02:04,159 --> 00:02:06,799
and they also gave a matching attack

52
00:02:06,799 --> 00:02:11,119
uh however the attack that they found

53
00:02:11,360 --> 00:02:13,520
gave collisions that were ordered of t

54
00:02:13,520 --> 00:02:16,319
blocks long

55
00:02:17,360 --> 00:02:20,080
so the acdw paper proposed that it was

56
00:02:20,080 --> 00:02:22,480
more meaningful to study bounded length

57
00:02:22,480 --> 00:02:24,480
collision finding

58
00:02:24,480 --> 00:02:26,800
the best attack they could find for b

59
00:02:26,800 --> 00:02:29,040
block collision finding achieved an

60
00:02:29,040 --> 00:02:31,519
advantage of stb over n

61
00:02:31,519 --> 00:02:33,760
and they conjectured that it was the

62
00:02:33,760 --> 00:02:35,360
optimal attack

63
00:02:35,360 --> 00:02:37,360
however they could prove the conjecture

64
00:02:37,360 --> 00:02:39,280
only for a restricted class of

65
00:02:39,280 --> 00:02:41,120
adversaries

66
00:02:41,120 --> 00:02:42,080
for

67
00:02:42,080 --> 00:02:44,560
any adversary in the pre-computation

68
00:02:44,560 --> 00:02:46,959
model they could prove their conjecture

69
00:02:46,959 --> 00:02:51,440
only for two block collision finding

70
00:02:51,440 --> 00:02:53,599
the follow-up work of

71
00:02:53,599 --> 00:02:54,959
gka

72
00:02:54,959 --> 00:02:57,440
paper which is a paper that has been

73
00:02:57,440 --> 00:03:00,400
accepted at this conference itself

74
00:03:00,400 --> 00:03:02,239
managed to prove the

75
00:03:02,239 --> 00:03:06,239
acdw conjecture for any constant b

76
00:03:06,239 --> 00:03:08,239
more precisely they give a bound that

77
00:03:08,239 --> 00:03:11,280
has a factor of poly log s exponentially

78
00:03:11,280 --> 00:03:14,480
large in b which reduces to a polylog

79
00:03:14,480 --> 00:03:16,800
factor when b is a constant

80
00:03:16,800 --> 00:03:19,040
however this bound quickly becomes

81
00:03:19,040 --> 00:03:22,959
meaningless as b grows larger

82
00:03:22,959 --> 00:03:25,280
the gk paper presented another bound of

83
00:03:25,280 --> 00:03:29,040
s to the four t b square over n for any

84
00:03:29,040 --> 00:03:32,400
b and any adversary

85
00:03:32,400 --> 00:03:36,400
comparing their bound to r bound of scb

86
00:03:36,400 --> 00:03:37,519
over n

87
00:03:37,519 --> 00:03:41,200
times max of 1 and st square over n it

88
00:03:41,200 --> 00:03:44,080
is clear that their bound is looser than

89
00:03:44,080 --> 00:03:45,360
hours

90
00:03:45,360 --> 00:03:47,200
in in fact

91
00:03:47,200 --> 00:03:49,200
the gk bound

92
00:03:49,200 --> 00:03:52,720
can be worse than st square over n bound

93
00:03:52,720 --> 00:03:55,040
of the cdgs paper

94
00:03:55,040 --> 00:04:00,439
when s cube b square is greater than t

95
00:04:00,959 --> 00:04:04,480
uh in comparison r bound would always be

96
00:04:04,480 --> 00:04:07,120
always be better than st squared over n

97
00:04:07,120 --> 00:04:10,159
bound of the cd gs paper uh let's look

98
00:04:10,159 --> 00:04:12,239
at our bound more closely

99
00:04:12,239 --> 00:04:15,200
so what does our bound mean it means

100
00:04:15,200 --> 00:04:18,399
that whenever st squared over n is less

101
00:04:18,399 --> 00:04:20,238
than one

102
00:04:20,238 --> 00:04:23,600
our bound is stb over n and this proves

103
00:04:23,600 --> 00:04:27,280
the conjecture of acdw

104
00:04:27,280 --> 00:04:29,840
whereas for the parameter range when st

105
00:04:29,840 --> 00:04:32,880
squared over n is greater than one our

106
00:04:32,880 --> 00:04:35,360
bound would be st squared over n times

107
00:04:35,360 --> 00:04:38,240
stb over n which is still

108
00:04:38,240 --> 00:04:40,240
better than

109
00:04:40,240 --> 00:04:42,639
st squared over n

110
00:04:42,639 --> 00:04:45,120
this shows that finding bounded length

111
00:04:45,120 --> 00:04:47,040
collisions is harder than finding

112
00:04:47,040 --> 00:04:48,960
collisions where there is no restriction

113
00:04:48,960 --> 00:04:51,599
on the length

114
00:04:52,240 --> 00:04:54,320
to learn more about the new techniques

115
00:04:54,320 --> 00:04:57,280
we used to achieve better grounds please

116
00:04:57,280 --> 00:04:59,440
attend our talk at crypto this is when

117
00:04:59,440 --> 00:05:01,520
and where our talk will be hope to see

118
00:05:01,520 --> 00:05:05,479
you there thank you

119
00:05:10,960 --> 00:05:13,039
you

