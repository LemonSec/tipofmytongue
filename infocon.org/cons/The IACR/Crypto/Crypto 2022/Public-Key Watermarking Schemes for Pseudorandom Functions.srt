1
00:00:00,880 --> 00:00:02,240
all right so hello everyone i'm bu

2
00:00:02,240 --> 00:00:03,679
priyank and today i'm going to talk

3
00:00:03,679 --> 00:00:05,759
about how to construct a public key with

4
00:00:05,759 --> 00:00:08,160
macro prf this is based on drawing to

5
00:00:08,160 --> 00:00:11,440
work with hru macho and with zero

6
00:00:11,440 --> 00:00:13,599
so a watermark scheme can embed some

7
00:00:13,599 --> 00:00:15,200
information into a digital object

8
00:00:15,200 --> 00:00:17,600
researching it too much

9
00:00:17,600 --> 00:00:20,080
and it will be hard to remove the

10
00:00:20,080 --> 00:00:22,160
appended information without destroying

11
00:00:22,160 --> 00:00:24,640
the boot marked object

12
00:00:24,640 --> 00:00:26,400
in this talk we consider watermarking

13
00:00:26,400 --> 00:00:29,359
schemes for programs that is the

14
00:00:29,359 --> 00:00:32,558
waterpark object is a program

15
00:00:32,558 --> 00:00:34,800
firmly it consists of three algorithms

16
00:00:34,800 --> 00:00:37,200
namely the generation of research which

17
00:00:37,200 --> 00:00:39,600
produces a pro marquee and attraction

18
00:00:39,600 --> 00:00:42,559
key the marking algorithm which and

19
00:00:42,559 --> 00:00:44,719
banned a message into a program with a

20
00:00:44,719 --> 00:00:47,120
marketing key and the question algorithm

21
00:00:47,120 --> 00:00:47,920
which

22
00:00:47,920 --> 00:00:49,600
abandons the uh which attracts the

23
00:00:49,600 --> 00:00:52,079
message and by the new watermark circuit

24
00:00:52,079 --> 00:00:54,719
with an extraction key

25
00:00:54,719 --> 00:00:56,480
its correctness requested the

26
00:00:56,480 --> 00:00:58,879
watermarked circles should

27
00:00:58,879 --> 00:01:01,199
roughly preserves the opportunity of the

28
00:01:01,199 --> 00:01:02,559
original

29
00:01:02,559 --> 00:01:03,840
program

30
00:01:03,840 --> 00:01:04,959
and that

31
00:01:04,959 --> 00:01:07,360
the attraction organism can attract the

32
00:01:07,360 --> 00:01:10,320
correct message and bandit

33
00:01:10,320 --> 00:01:14,960
yeah honestly watermarks circuit

34
00:01:14,960 --> 00:01:17,200
its mystical requirement is on

35
00:01:17,200 --> 00:01:19,920
removability which represents

36
00:01:19,920 --> 00:01:22,720
it will be computationally difficult for

37
00:01:22,720 --> 00:01:25,840
industry to remove or modify the message

38
00:01:25,840 --> 00:01:28,240
and bend it in automatic circuit

39
00:01:28,240 --> 00:01:31,280
without changing it's too much

40
00:01:31,280 --> 00:01:33,439
so let me hope to have watermark schemes

41
00:01:33,439 --> 00:01:35,920
for general functionalities

42
00:01:35,920 --> 00:01:40,000
however as shown by coherent 2016

43
00:01:40,000 --> 00:01:42,079
it is impossible to watermark a

44
00:01:42,079 --> 00:01:44,640
learnable functionality

45
00:01:44,640 --> 00:01:46,720
a natural class of non-vulnerable

46
00:01:46,720 --> 00:01:48,479
functionalities are the cryptographic

47
00:01:48,479 --> 00:01:51,680
ones such as decryption organism the pf

48
00:01:51,680 --> 00:01:54,960
evolutionary sum and so on so in the

49
00:01:54,960 --> 00:01:57,759
study we mainly focus on what market

50
00:01:57,759 --> 00:02:00,640
schemes for cryptographic programs

51
00:02:00,640 --> 00:02:04,000
and in this work we also follow this and

52
00:02:04,000 --> 00:02:06,560
particularly focus on

53
00:02:06,560 --> 00:02:10,959
the illusion occurs of the prf

54
00:02:10,959 --> 00:02:11,840
so

55
00:02:11,840 --> 00:02:14,239
next we give a more formal definition of

56
00:02:14,239 --> 00:02:16,959
the security of the automatic scheme for

57
00:02:16,959 --> 00:02:18,640
prf

58
00:02:18,640 --> 00:02:20,959
there are two practices involved in the

59
00:02:20,959 --> 00:02:23,200
security definition the challenger and

60
00:02:23,200 --> 00:02:25,520
unknown three the challenger will first

61
00:02:25,520 --> 00:02:27,120
generate a pair of marquee and

62
00:02:27,120 --> 00:02:28,319
attraction kit

63
00:02:28,319 --> 00:02:31,760
and it also samples a pf key

64
00:02:31,760 --> 00:02:33,920
since those three

65
00:02:33,920 --> 00:02:36,080
sends a message to the challenger and

66
00:02:36,080 --> 00:02:38,080
the challenger will embarrass the

67
00:02:38,080 --> 00:02:41,840
message into the pfk with the marker key

68
00:02:41,840 --> 00:02:44,319
it then sends the

69
00:02:44,319 --> 00:02:48,160
results circled 6 star 203 and also 3

70
00:02:48,160 --> 00:02:51,280
will create a circular substitute

71
00:02:51,280 --> 00:02:54,319
and it weighs if situated is close to

72
00:02:54,319 --> 00:02:57,840
the original watermarked circular system

73
00:02:57,840 --> 00:03:00,640
and the threshold result fails to

74
00:03:00,640 --> 00:03:04,080
attract the original message from ctrl

75
00:03:04,080 --> 00:03:06,720
in this definition we do not allow the

76
00:03:06,720 --> 00:03:09,840
adultery to learn either the bucket k or

77
00:03:09,840 --> 00:03:11,760
the expression key

78
00:03:11,760 --> 00:03:15,599
so we denote it as clicky script here

79
00:03:15,599 --> 00:03:18,319
we can also consider a strong adultery

80
00:03:18,319 --> 00:03:21,360
that can learn the market of the

81
00:03:21,360 --> 00:03:23,840
automatic scheme and this is called

82
00:03:23,840 --> 00:03:26,400
public marketing security

83
00:03:26,400 --> 00:03:28,640
alternatively we can consider an

84
00:03:28,640 --> 00:03:32,720
advisory that learns question key

85
00:03:32,720 --> 00:03:35,280
and this is denoted as public trade

86
00:03:35,280 --> 00:03:37,360
public integration security

87
00:03:37,360 --> 00:03:39,680
and finally we can consider public key

88
00:03:39,680 --> 00:03:42,239
security whereas those three learners

89
00:03:42,239 --> 00:03:46,560
pulls the market and expression key

90
00:03:46,560 --> 00:03:49,200
so in real world applications if we use

91
00:03:49,200 --> 00:03:50,799
a watermarking scheme

92
00:03:50,799 --> 00:03:53,840
with the first three security guarantees

93
00:03:53,840 --> 00:03:55,519
we will have to set up a watermark

94
00:03:55,519 --> 00:03:57,519
consolidate to hold either the

95
00:03:57,519 --> 00:04:00,959
marketplace or the extension

96
00:04:01,519 --> 00:04:04,959
such specialty is usually a single point

97
00:04:04,959 --> 00:04:08,080
of failure because if those three crops

98
00:04:08,080 --> 00:04:11,280
the ultimate facility and gets the

99
00:04:11,280 --> 00:04:14,879
keyhole there then it is able to

100
00:04:14,879 --> 00:04:16,000
remove

101
00:04:16,000 --> 00:04:18,798
all messages embedded in all

102
00:04:18,798 --> 00:04:20,720
watermark security

103
00:04:20,720 --> 00:04:22,320
this is a

104
00:04:22,320 --> 00:04:23,440
serious

105
00:04:23,440 --> 00:04:24,560
security

106
00:04:24,560 --> 00:04:26,840
threat to the

107
00:04:26,840 --> 00:04:28,720
scheme

108
00:04:28,720 --> 00:04:32,080
and if we use a automatic scheme with

109
00:04:32,080 --> 00:04:33,680
public security

110
00:04:33,680 --> 00:04:36,639
then we do not need such authority and

111
00:04:36,639 --> 00:04:38,800
the problem can be resolved

112
00:04:38,800 --> 00:04:40,960
so in practice it

113
00:04:40,960 --> 00:04:43,680
is preferable to use a

114
00:04:43,680 --> 00:04:45,280
watermarking scheme with public key

115
00:04:45,280 --> 00:04:47,440
security

116
00:04:47,440 --> 00:04:49,040
unfortunately

117
00:04:49,040 --> 00:04:51,440
also we have very elegant constructions

118
00:04:51,440 --> 00:04:54,560
of bank schemes that satisfy the first

119
00:04:54,560 --> 00:04:57,360
three security requirements we do not

120
00:04:57,360 --> 00:04:58,880
know how to construct a publicly

121
00:04:58,880 --> 00:05:01,840
automatical prf

122
00:05:02,160 --> 00:05:04,560
the goal of this work is therefore to

123
00:05:04,560 --> 00:05:05,759
construct

124
00:05:05,759 --> 00:05:06,639
the

125
00:05:06,639 --> 00:05:08,840
public key with micro

126
00:05:08,840 --> 00:05:11,680
piff so next we will see how to

127
00:05:11,680 --> 00:05:14,720
construct a public key automaker pif

128
00:05:14,720 --> 00:05:17,360
our standpoint is uh automatically is

129
00:05:17,360 --> 00:05:20,320
with public trashing and supermarket

130
00:05:20,320 --> 00:05:22,800
in this scheme there is a

131
00:05:22,800 --> 00:05:26,000
in this game the pfk

132
00:05:26,000 --> 00:05:28,800
page should be kept private and to embed

133
00:05:28,800 --> 00:05:30,000
a message

134
00:05:30,000 --> 00:05:31,840
into the pfk

135
00:05:31,840 --> 00:05:35,840
the mechanism will use a secret marquee

136
00:05:35,840 --> 00:05:38,320
and to extract a message from a

137
00:05:38,320 --> 00:05:40,800
watermark secret the creation algorithm

138
00:05:40,800 --> 00:05:44,479
will use a public tracking key

139
00:05:44,479 --> 00:05:46,720
so with this scheme

140
00:05:46,720 --> 00:05:49,120
to construct a public keyword macro pif

141
00:05:49,120 --> 00:05:50,479
our initial

142
00:05:50,479 --> 00:05:53,840
idea is to generate a fresh marquee and

143
00:05:53,840 --> 00:05:57,360
attraction key for each pfk

144
00:05:57,360 --> 00:06:01,919
that is the new cafe typically now

145
00:06:01,919 --> 00:06:04,639
includes the original pfk

146
00:06:04,639 --> 00:06:06,080
flash market market

147
00:06:06,080 --> 00:06:09,599
and a fresh equation kit

148
00:06:10,000 --> 00:06:12,160
in this way the

149
00:06:12,160 --> 00:06:13,440
there is no

150
00:06:13,440 --> 00:06:15,199
global market case that should be kept

151
00:06:15,199 --> 00:06:17,840
private so the scheme should have

152
00:06:17,840 --> 00:06:18,840
publicly

153
00:06:18,840 --> 00:06:20,800
security

154
00:06:20,800 --> 00:06:22,639
after this modification the marking

155
00:06:22,639 --> 00:06:24,800
algorithm can still work because it can

156
00:06:24,800 --> 00:06:28,880
use the marker key included in the prk

157
00:06:28,880 --> 00:06:31,120
but the question version doesn't work

158
00:06:31,120 --> 00:06:32,240
now

159
00:06:32,240 --> 00:06:34,639
because it needs the two needs to use

160
00:06:34,639 --> 00:06:36,400
the training key

161
00:06:36,400 --> 00:06:38,240
but the changing key

162
00:06:38,240 --> 00:06:40,720
is included in the prk and can't be

163
00:06:40,720 --> 00:06:44,319
accessed by the traditional result

164
00:06:44,319 --> 00:06:46,319
to solve this problem we need a

165
00:06:46,319 --> 00:06:48,240
mechanism to send decay to the

166
00:06:48,240 --> 00:06:50,319
attraction aggressor

167
00:06:50,319 --> 00:06:53,039
it seems that the only way to do this is

168
00:06:53,039 --> 00:06:56,560
to put ek to the pf output

169
00:06:56,560 --> 00:06:58,560
and of course we can't

170
00:06:58,560 --> 00:07:00,400
append it

171
00:07:00,400 --> 00:07:03,919
to the pf output directly because it may

172
00:07:03,919 --> 00:07:07,840
ruin the synthetics of the prf

173
00:07:07,840 --> 00:07:10,800
we solve this problem by using a pd

174
00:07:10,800 --> 00:07:14,400
scheme with sudden soft text

175
00:07:14,400 --> 00:07:15,280
so

176
00:07:15,280 --> 00:07:18,000
let pk and sk be the

177
00:07:18,000 --> 00:07:20,560
publicly and quirky pair of the piggy

178
00:07:20,560 --> 00:07:21,440
scheme

179
00:07:21,440 --> 00:07:23,759
and put them into the public parameter

180
00:07:23,759 --> 00:07:26,080
of those rank scale

181
00:07:26,080 --> 00:07:28,639
we also modify the

182
00:07:28,639 --> 00:07:31,280
pf evaluation algorithm and

183
00:07:31,280 --> 00:07:34,400
append an inclusion of the expression k

184
00:07:34,400 --> 00:07:36,880
to the original pf output

185
00:07:36,880 --> 00:07:39,280
here the randomness for the inclusion is

186
00:07:39,280 --> 00:07:43,120
determined by the input x

187
00:07:43,120 --> 00:07:44,960
to watermark uh

188
00:07:44,960 --> 00:07:47,520
pfk the mechanologism

189
00:07:47,520 --> 00:07:48,460
also

190
00:07:48,460 --> 00:07:49,840
[Music]

191
00:07:49,840 --> 00:07:52,319
combines the message into the first part

192
00:07:52,319 --> 00:07:53,440
of the

193
00:07:53,440 --> 00:07:54,639
prf

194
00:07:54,639 --> 00:07:56,400
evolution of result

195
00:07:56,400 --> 00:07:58,639
and then it keeps the second part of the

196
00:07:58,639 --> 00:08:01,599
solution unchanged

197
00:08:01,599 --> 00:08:04,960
and to extract a message from the

198
00:08:04,960 --> 00:08:07,199
watermarked circuit the creation

199
00:08:07,199 --> 00:08:09,360
organism will first

200
00:08:09,360 --> 00:08:11,440
get decayed from the second part of the

201
00:08:11,440 --> 00:08:14,160
circular port by decrypting it

202
00:08:14,160 --> 00:08:16,479
then it uses

203
00:08:16,479 --> 00:08:18,240
it uses the

204
00:08:18,240 --> 00:08:20,639
record extraction key to extract the

205
00:08:20,639 --> 00:08:22,400
message from the first part of the

206
00:08:22,400 --> 00:08:24,960
security

207
00:08:25,360 --> 00:08:26,960
so

208
00:08:26,960 --> 00:08:29,199
as the adult three is

209
00:08:29,199 --> 00:08:31,199
only allowed to modify the automatic

210
00:08:31,199 --> 00:08:34,320
circuit on the spot version of inputs

211
00:08:34,320 --> 00:08:36,880
uh the traction algorithm are likely to

212
00:08:36,880 --> 00:08:39,279
get the

213
00:08:39,279 --> 00:08:42,719
correct objection k by declaring the

214
00:08:42,719 --> 00:08:45,920
sacrament of a random importer

215
00:08:45,920 --> 00:08:48,920
and then by the security of the online

216
00:08:48,920 --> 00:08:52,399
publicly tradable automatically if

217
00:08:52,399 --> 00:08:54,480
the creation algorithm can finally get

218
00:08:54,480 --> 00:08:56,080
the correct message

219
00:08:56,080 --> 00:08:59,519
so the security follows

220
00:08:59,519 --> 00:09:01,200
also we need to

221
00:09:01,200 --> 00:09:04,959
examine if the scheme has surveillance

222
00:09:04,959 --> 00:09:07,279
at first guys the answer should be yes

223
00:09:07,279 --> 00:09:09,040
because the

224
00:09:09,040 --> 00:09:12,000
pf output now include two parts the

225
00:09:12,000 --> 00:09:14,720
first part is a the output of another

226
00:09:14,720 --> 00:09:17,200
prf and the second part is the soft text

227
00:09:17,200 --> 00:09:19,680
or pc scheme with pseudo-random soft

228
00:09:19,680 --> 00:09:21,440
text

229
00:09:21,440 --> 00:09:24,320
however the subtext suffering needs only

230
00:09:24,320 --> 00:09:26,640
holds against an oscar without a secret

231
00:09:26,640 --> 00:09:29,120
key and now as the secret key is put

232
00:09:29,120 --> 00:09:30,560
into the

233
00:09:30,560 --> 00:09:31,760
perimeter

234
00:09:31,760 --> 00:09:34,240
the doctor can learn it and saying it

235
00:09:34,240 --> 00:09:37,600
can decrease the certain part of the pr

236
00:09:37,600 --> 00:09:40,080
outputs and see if they are all

237
00:09:40,080 --> 00:09:42,160
decrypted to a symbol

238
00:09:42,160 --> 00:09:45,200
so it is very easy to distinguish it

239
00:09:45,200 --> 00:09:46,640
from

240
00:09:46,640 --> 00:09:50,880
from the output of a random function

241
00:09:50,880 --> 00:09:54,399
to solve this problem we use a robust or

242
00:09:54,399 --> 00:09:57,040
obvious keyboard prf instead of the pk

243
00:09:57,040 --> 00:09:58,640
scheme

244
00:09:58,640 --> 00:10:00,720
in a nutshell the

245
00:10:00,720 --> 00:10:04,560
robust of classical prf is prf family

246
00:10:04,560 --> 00:10:07,760
where the pfk is associated with the

247
00:10:07,760 --> 00:10:10,320
screen s

248
00:10:10,320 --> 00:10:12,880
a student still requires that giving

249
00:10:12,880 --> 00:10:15,360
only all process to the pr

250
00:10:15,360 --> 00:10:18,000
result no one could distinguish it from

251
00:10:18,000 --> 00:10:20,720
a random function

252
00:10:20,720 --> 00:10:23,440
but it now additionally requested

253
00:10:23,440 --> 00:10:26,000
it is easy to get to screen s and

254
00:10:26,000 --> 00:10:28,480
binding in the pfk

255
00:10:28,480 --> 00:10:32,240
giving a circle that explains the

256
00:10:32,240 --> 00:10:35,040
pf election agrees up

257
00:10:35,040 --> 00:10:37,279
and based on this we also need it to

258
00:10:37,279 --> 00:10:39,920
have robust vulnerability which requires

259
00:10:39,920 --> 00:10:42,240
that the security can be recovered from

260
00:10:42,240 --> 00:10:44,880
a circuit that is close to the past

261
00:10:44,880 --> 00:10:47,680
erosion election result

262
00:10:47,680 --> 00:10:48,480
okay

263
00:10:48,480 --> 00:10:51,839
so now it's a robust one of basketball

264
00:10:51,839 --> 00:10:53,040
prf

265
00:10:53,040 --> 00:10:56,560
we modify the construction as follows

266
00:10:56,560 --> 00:11:00,079
first we will include the pfk of the

267
00:11:00,079 --> 00:11:03,519
online robust on of the past capable prf

268
00:11:03,519 --> 00:11:06,399
into the pfk of the constructed

269
00:11:06,399 --> 00:11:08,079
automarketing scheme

270
00:11:08,079 --> 00:11:11,680
and the security embedded there is the

271
00:11:11,680 --> 00:11:12,839
crashing

272
00:11:12,839 --> 00:11:16,480
key for the pr key

273
00:11:16,480 --> 00:11:17,920
we also

274
00:11:17,920 --> 00:11:21,760
replace the subtext in the pf output

275
00:11:21,760 --> 00:11:27,040
with the output of the on optical prf

276
00:11:27,040 --> 00:11:29,120
the marketing organism still works out

277
00:11:29,120 --> 00:11:30,240
before

278
00:11:30,240 --> 00:11:32,560
that is it impacts a message into the

279
00:11:32,560 --> 00:11:35,200
first part of the pf evaluation exam and

280
00:11:35,200 --> 00:11:38,160
remains a second part on change

281
00:11:38,160 --> 00:11:41,200
and the threshold concern now getting k

282
00:11:41,200 --> 00:11:43,680
from the second part of the circle the

283
00:11:43,680 --> 00:11:46,800
given circuit and then it uses the

284
00:11:46,800 --> 00:11:49,920
the recovery key to

285
00:11:49,920 --> 00:11:52,800
get the tool to collect the message from

286
00:11:52,800 --> 00:11:57,479
the first part of the security

287
00:11:57,680 --> 00:12:00,000
this works because uh

288
00:12:00,000 --> 00:12:01,600
due to the

289
00:12:01,600 --> 00:12:03,120
little bitty of the

290
00:12:03,120 --> 00:12:04,720
of fascicle

291
00:12:04,720 --> 00:12:05,839
prf

292
00:12:05,839 --> 00:12:08,880
the treasure also can get the corrective

293
00:12:08,880 --> 00:12:12,399
key from the second part

294
00:12:12,399 --> 00:12:15,279
also the robust nubility

295
00:12:15,279 --> 00:12:16,880
further guarantees that

296
00:12:16,880 --> 00:12:18,880
the creation organism can get a correct

297
00:12:18,880 --> 00:12:21,279
decay from the second part of the

298
00:12:21,279 --> 00:12:24,720
watermark circle even if it is modified

299
00:12:24,720 --> 00:12:27,200
by the adultery

300
00:12:27,200 --> 00:12:29,279
and then by security

301
00:12:29,279 --> 00:12:31,680
of the online publicly created

302
00:12:31,680 --> 00:12:33,839
automatically if

303
00:12:33,839 --> 00:12:35,680
the attraction of example can get a

304
00:12:35,680 --> 00:12:37,680
correct message from

305
00:12:37,680 --> 00:12:40,240
watermark circles that has been changed

306
00:12:40,240 --> 00:12:42,480
by the adults recently

307
00:12:42,480 --> 00:12:44,959
so the security follows that

308
00:12:44,959 --> 00:12:47,920
also the pluralness of the new

309
00:12:47,920 --> 00:12:49,839
construction comes from the

310
00:12:49,839 --> 00:12:52,079
sovereignness of the publicly

311
00:12:52,079 --> 00:12:54,000
transformational pif

312
00:12:54,000 --> 00:12:58,320
and that was a robust of the plf

313
00:12:58,320 --> 00:13:01,120
and also the strongest holds

314
00:13:01,120 --> 00:13:03,200
so

315
00:13:03,200 --> 00:13:06,160
we have shown how to construct a public

316
00:13:06,160 --> 00:13:08,560
key automatically pif from automotive

317
00:13:08,560 --> 00:13:10,880
pis with penetration

318
00:13:10,880 --> 00:13:14,480
and a robust opportunity prf

319
00:13:14,480 --> 00:13:16,240
the first building block can be

320
00:13:16,240 --> 00:13:18,560
constructed from indistinguishability of

321
00:13:18,560 --> 00:13:20,880
execution as shown by coherent power in

322
00:13:20,880 --> 00:13:22,399
2016.

323
00:13:22,399 --> 00:13:25,279
and in this work we give constructions

324
00:13:25,279 --> 00:13:26,880
on robust

325
00:13:26,880 --> 00:13:29,920
object fast keyboard prfs from either

326
00:13:29,920 --> 00:13:33,200
one function or fg with different

327
00:13:33,200 --> 00:13:37,440
tradeoffs in their parameters

328
00:13:39,120 --> 00:13:41,519
so before continuing our discussion we

329
00:13:41,519 --> 00:13:43,600
recall our first

330
00:13:43,600 --> 00:13:45,360
attempt again

331
00:13:45,360 --> 00:13:48,880
the attempt fields because the threshold

332
00:13:48,880 --> 00:13:51,279
can't get to the correction key to

333
00:13:51,279 --> 00:13:55,279
perform the oppression procedure

334
00:13:55,279 --> 00:13:57,120
so

335
00:13:57,120 --> 00:13:58,560
we note that

336
00:13:58,560 --> 00:14:00,000
this

337
00:14:00,000 --> 00:14:03,199
if we consider a weak notion of marking

338
00:14:03,199 --> 00:14:05,760
where the traditional rhythm is

339
00:14:05,760 --> 00:14:10,560
allowed to use a hint about the pfk

340
00:14:10,560 --> 00:14:12,880
then this problem

341
00:14:12,880 --> 00:14:15,600
can be solved very easily by setting the

342
00:14:15,600 --> 00:14:18,800
hint to be the traction kit

343
00:14:18,800 --> 00:14:21,199
so because it's a shrinking automatic

344
00:14:21,199 --> 00:14:22,800
prf

345
00:14:22,800 --> 00:14:25,519
and by using this new notion

346
00:14:25,519 --> 00:14:27,680
we can divide our

347
00:14:27,680 --> 00:14:29,120
construction

348
00:14:29,120 --> 00:14:31,760
mentioned into two parts in the first

349
00:14:31,760 --> 00:14:34,639
part we get a publication with micro pi

350
00:14:34,639 --> 00:14:37,680
from old micro kiosk publication

351
00:14:37,680 --> 00:14:40,880
and in the second part we upgrade the

352
00:14:40,880 --> 00:14:44,079
publication with rpf to be a standalone

353
00:14:44,079 --> 00:14:46,720
public key automatically rf using a

354
00:14:46,720 --> 00:14:47,760
robust

355
00:14:47,760 --> 00:14:51,120
of basketball prf

356
00:14:52,079 --> 00:14:52,880
okay

357
00:14:52,880 --> 00:14:54,560
so

358
00:14:54,560 --> 00:14:57,360
next we will see how to get publicly

359
00:14:57,360 --> 00:14:58,959
automatically rf

360
00:14:58,959 --> 00:15:01,920
from simple assumptions

361
00:15:01,920 --> 00:15:04,959
thanks to our general framework uh it is

362
00:15:04,959 --> 00:15:07,440
sufficient to show how to construct

363
00:15:07,440 --> 00:15:09,839
public thinking automotive pif from

364
00:15:09,839 --> 00:15:13,240
simple assumptions

365
00:15:13,279 --> 00:15:16,079
so the contraction

366
00:15:16,079 --> 00:15:20,000
is built on a prf

367
00:15:20,800 --> 00:15:23,760
roughly speaking a puncture pif allows

368
00:15:23,760 --> 00:15:24,880
one to

369
00:15:24,880 --> 00:15:29,360
puncture prf key on import extent

370
00:15:29,360 --> 00:15:32,399
the function key functions identically

371
00:15:32,399 --> 00:15:37,120
as engine okay on all other inputs

372
00:15:37,120 --> 00:15:40,399
and it will hide the view output will

373
00:15:40,399 --> 00:15:42,079
rpf output

374
00:15:42,079 --> 00:15:43,040
on

375
00:15:43,040 --> 00:15:44,399
the function

376
00:15:44,399 --> 00:15:47,360
point extra

377
00:15:47,519 --> 00:15:51,759
so now with a point pif we construct the

378
00:15:51,759 --> 00:15:55,440
publicly hinted automatic pif as follows

379
00:15:55,440 --> 00:15:58,720
the new prfk 2k includes the

380
00:15:58,720 --> 00:16:01,440
prk of the punctual pif

381
00:16:01,440 --> 00:16:02,720
and

382
00:16:02,720 --> 00:16:05,360
random input x star

383
00:16:05,360 --> 00:16:09,120
we also compute the pf output y star of

384
00:16:09,120 --> 00:16:10,720
x star

385
00:16:10,720 --> 00:16:14,240
and compute this star as g of y star

386
00:16:14,240 --> 00:16:18,160
where g is an objective one function

387
00:16:18,160 --> 00:16:20,079
the hint is

388
00:16:20,079 --> 00:16:25,439
retained they include extra existence

389
00:16:25,519 --> 00:16:29,040
to watermark uh pf evaluation of reserve

390
00:16:29,040 --> 00:16:32,560
the microorganism just

391
00:16:32,639 --> 00:16:36,480
punctures the prfk on extra and the

392
00:16:36,480 --> 00:16:39,759
circuit will evaluate with the

393
00:16:39,759 --> 00:16:41,920
function key

394
00:16:41,920 --> 00:16:45,279
also to test if the

395
00:16:45,279 --> 00:16:47,680
or if a circuit is work marked the

396
00:16:47,680 --> 00:16:49,680
creation algorithm will test if the

397
00:16:49,680 --> 00:16:52,160
security is functional or extra

398
00:16:52,160 --> 00:16:55,519
that is if the circuit if the security

399
00:16:55,519 --> 00:16:58,160
area is

400
00:16:58,880 --> 00:17:00,240
that is if

401
00:17:00,240 --> 00:17:02,959
cx star is not equal to y star

402
00:17:02,959 --> 00:17:06,319
since g is an injective function it is

403
00:17:06,319 --> 00:17:09,119
equivalent to test if g

404
00:17:09,119 --> 00:17:12,799
c g of c of x star is not equal to this

405
00:17:12,799 --> 00:17:14,160
star

406
00:17:14,160 --> 00:17:17,199
this can be finished by using only the

407
00:17:17,199 --> 00:17:20,400
information from the hand and the fuse

408
00:17:20,400 --> 00:17:23,600
and the given security

409
00:17:23,839 --> 00:17:25,039
so

410
00:17:25,039 --> 00:17:26,480
also the

411
00:17:26,480 --> 00:17:28,240
security of the

412
00:17:28,240 --> 00:17:30,160
injector long function and the security

413
00:17:30,160 --> 00:17:32,880
of the functor pif parenting that

414
00:17:32,880 --> 00:17:35,520
the doctor is not able to learn one star

415
00:17:35,520 --> 00:17:37,760
from the current and the automatic

416
00:17:37,760 --> 00:17:38,960
circuit

417
00:17:38,960 --> 00:17:41,360
so it is not able to

418
00:17:41,360 --> 00:17:44,240
generate circuits that are pushed faster

419
00:17:44,240 --> 00:17:46,640
on input extra

420
00:17:46,640 --> 00:17:48,400
and thus

421
00:17:48,400 --> 00:17:51,200
it can't uh

422
00:17:51,200 --> 00:17:54,160
make a watermark circuit or marked

423
00:17:54,160 --> 00:17:57,520
and the security follows

424
00:17:58,320 --> 00:18:01,280
okay so by putting the

425
00:18:01,280 --> 00:18:04,240
about construction into our blueprint

426
00:18:04,240 --> 00:18:07,760
we get a publicly automatic pif

427
00:18:07,760 --> 00:18:10,240
from either one function or one way

428
00:18:10,240 --> 00:18:13,360
function plus fft

429
00:18:13,440 --> 00:18:17,039
with different shadows in the parameters

430
00:18:17,039 --> 00:18:19,280
the construction has a restriction that

431
00:18:19,280 --> 00:18:22,799
it only supports mac binding that is a

432
00:18:22,799 --> 00:18:26,480
circuit is either marked or unmarked

433
00:18:26,480 --> 00:18:28,480
and unlike the

434
00:18:28,480 --> 00:18:31,840
construction from ro which has message

435
00:18:31,840 --> 00:18:34,399
and binding

436
00:18:34,480 --> 00:18:36,559
we also give a

437
00:18:36,559 --> 00:18:38,880
construction our machine binding public

438
00:18:38,880 --> 00:18:41,200
key automatic prf from

439
00:18:41,200 --> 00:18:44,320
purely from standalone assumptions

440
00:18:44,320 --> 00:18:47,760
uh by using a quantitatively scheme

441
00:18:47,760 --> 00:18:48,640
please

442
00:18:48,640 --> 00:18:52,799
see our four people for the construction

443
00:18:53,760 --> 00:18:54,840
okay

444
00:18:54,840 --> 00:18:58,799
so to conclude in this work we give a

445
00:18:58,799 --> 00:19:01,039
general flow general framework that

446
00:19:01,039 --> 00:19:03,440
construct publicly automatically pif

447
00:19:03,440 --> 00:19:06,080
from a public thinking automatic pif and

448
00:19:06,080 --> 00:19:10,160
a robust of classical plf

449
00:19:10,160 --> 00:19:12,559
we also instantiate

450
00:19:12,559 --> 00:19:14,400
both primitive from different

451
00:19:14,400 --> 00:19:18,320
assumptions with different tradeoffs

452
00:19:18,320 --> 00:19:21,039
the main tradeoffs we considered in this

453
00:19:21,039 --> 00:19:22,640
work

454
00:19:22,640 --> 00:19:24,960
include whether the scheme

455
00:19:24,960 --> 00:19:28,320
uh support message binding and how large

456
00:19:28,320 --> 00:19:31,120
the perimeter emission is

457
00:19:31,120 --> 00:19:32,960
the parameter of snow

458
00:19:32,960 --> 00:19:36,640
denotes the version of inputs

459
00:19:36,640 --> 00:19:39,919
of c star that can be modified by the

460
00:19:39,919 --> 00:19:42,400
over 3

461
00:19:42,720 --> 00:19:43,919
and

462
00:19:43,919 --> 00:19:47,360
if you observe our results

463
00:19:47,360 --> 00:19:51,200
you will see if you hope to have to

464
00:19:51,200 --> 00:19:54,160
have methane binding and if you don't

465
00:19:54,160 --> 00:19:56,000
want to use ro

466
00:19:56,000 --> 00:19:58,880
then you will have a very very

467
00:19:58,880 --> 00:20:00,400
small x node

468
00:20:00,400 --> 00:20:01,919
which is

469
00:20:01,919 --> 00:20:03,760
a

470
00:20:03,760 --> 00:20:05,320
concrete

471
00:20:05,320 --> 00:20:08,960
exponentially small volume

472
00:20:08,960 --> 00:20:13,039
also if you hope to have constant xl

473
00:20:13,039 --> 00:20:16,960
then you have to use fg even if you have

474
00:20:16,960 --> 00:20:18,840
you have used

475
00:20:18,840 --> 00:20:23,039
ro and finally now our constructions can

476
00:20:23,039 --> 00:20:24,880
achieve the optimal

477
00:20:24,880 --> 00:20:26,000
uh

478
00:20:26,000 --> 00:20:29,520
epsilon which is roughly 102.

479
00:20:29,520 --> 00:20:33,120
so it is an interesting open problem to

480
00:20:33,120 --> 00:20:35,440
construct publicly automatic pifs

481
00:20:35,440 --> 00:20:39,039
without the restrictions

482
00:20:39,039 --> 00:20:40,159
so

483
00:20:40,159 --> 00:20:42,320
now to conclude

484
00:20:42,320 --> 00:20:45,280
in this work we

485
00:20:45,280 --> 00:20:48,240
initiate the study of public key

486
00:20:48,240 --> 00:20:50,880
automatically prf

487
00:20:50,880 --> 00:20:53,679
and that is just a start there are many

488
00:20:53,679 --> 00:20:56,960
many interesting problems in this area

489
00:20:56,960 --> 00:20:59,840
okay so that's all thanks for changing

490
00:20:59,840 --> 00:21:03,840
and i'm happy to answer questions

