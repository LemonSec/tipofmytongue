1
00:00:00,399 --> 00:00:02,399
hi my name is mark schultz this is a

2
00:00:02,399 --> 00:00:04,080
preview of my talk securing approximate

3
00:00:04,080 --> 00:00:05,279
humble marketing encryption using

4
00:00:05,279 --> 00:00:07,200
difficult privacy based on joint work

5
00:00:07,200 --> 00:00:09,519
with bayern lee daniely machado and

6
00:00:09,519 --> 00:00:11,360
jessica sorelle

7
00:00:11,360 --> 00:00:13,599
the talk concerns polymorphic encryption

8
00:00:13,599 --> 00:00:15,120
the cryptosystem is said to be fully

9
00:00:15,120 --> 00:00:16,880
homomorphic that it admits to privacy

10
00:00:16,880 --> 00:00:19,119
homomorphisms or ways of combining

11
00:00:19,119 --> 00:00:21,439
encryptions of n and m prime into

12
00:00:21,439 --> 00:00:23,760
encryptions of their sum and their

13
00:00:23,760 --> 00:00:25,119
product

14
00:00:25,119 --> 00:00:26,560
this suffices to compute arbitrary

15
00:00:26,560 --> 00:00:28,000
boolean functions

16
00:00:28,000 --> 00:00:29,760
it's often formalized as an evaluation

17
00:00:29,760 --> 00:00:32,719
algorithm such that on input a circuit d

18
00:00:32,719 --> 00:00:35,040
and an encryption of a message m one

19
00:00:35,040 --> 00:00:36,960
obtains a ciphertext c prime that

20
00:00:36,960 --> 00:00:38,960
decrypts to d of m

21
00:00:38,960 --> 00:00:40,960
sometimes it only decrypts to a nearby

22
00:00:40,960 --> 00:00:42,480
value though the difference from the

23
00:00:42,480 --> 00:00:44,559
correct value is known as the error

24
00:00:44,559 --> 00:00:46,079
there are many constructions of fhe in

25
00:00:46,079 --> 00:00:47,280
the literature

26
00:00:47,280 --> 00:00:49,120
ck cast in particular is not correct

27
00:00:49,120 --> 00:00:51,039
instead has small error this scheme will

28
00:00:51,039 --> 00:00:53,520
be of central importance

29
00:00:53,520 --> 00:00:55,440
to our work

30
00:00:55,440 --> 00:00:57,840
lee machancho have suggested that ncpa

31
00:00:57,840 --> 00:00:59,359
security is the wrong notion for the

32
00:00:59,359 --> 00:01:00,640
passive security of incorrect

33
00:01:00,640 --> 00:01:02,000
cryptosystems

34
00:01:02,000 --> 00:01:03,920
the correct cryptosystems decryptions of

35
00:01:03,920 --> 00:01:05,199
honest degenerate subjects are

36
00:01:05,199 --> 00:01:06,720
simulatable and therefore given no

37
00:01:06,720 --> 00:01:08,479
information to an atmosphere for

38
00:01:08,479 --> 00:01:09,920
incorrect cryptosystems these

39
00:01:09,920 --> 00:01:12,080
decryptions can leak information even if

40
00:01:12,080 --> 00:01:13,920
the user is only honestly interacting

41
00:01:13,920 --> 00:01:15,439
with their oracles

42
00:01:15,439 --> 00:01:17,520
this occurs for cks and leads to a

43
00:01:17,520 --> 00:01:19,280
distinguishing attack and key recovery

44
00:01:19,280 --> 00:01:20,560
attack

45
00:01:20,560 --> 00:01:22,159
data major proposed a new security

46
00:01:22,159 --> 00:01:24,320
definition which they call ncpad

47
00:01:24,320 --> 00:01:26,560
security or ncpa with decryption

48
00:01:26,560 --> 00:01:27,680
articles

49
00:01:27,680 --> 00:01:30,240
this is different from ncca security as

50
00:01:30,240 --> 00:01:32,079
you can only decrypt honestly generated

51
00:01:32,079 --> 00:01:33,680
ciphertexts

52
00:01:33,680 --> 00:01:35,680
in the setting of cracked encryption

53
00:01:35,680 --> 00:01:38,320
it's identical in cpa security but as

54
00:01:38,320 --> 00:01:41,439
cts shows for incorrect uh encryption

55
00:01:41,439 --> 00:01:42,799
there's a separation between the two

56
00:01:42,799 --> 00:01:44,320
notions

57
00:01:44,320 --> 00:01:46,159
lee machancha left it as an open problem

58
00:01:46,159 --> 00:01:49,680
to achieve in cpt security for ckks

59
00:01:49,680 --> 00:01:51,600
after they published their attacks many

60
00:01:51,600 --> 00:01:53,600
libraries implemented countermeasures

61
00:01:53,600 --> 00:01:55,680
these all roughly post process

62
00:01:55,680 --> 00:01:57,360
decryption by inducing large enough

63
00:01:57,360 --> 00:01:59,520
noise in some way where large enough is

64
00:01:59,520 --> 00:02:00,399
some

65
00:02:00,399 --> 00:02:02,240
controlled by some user controlled

66
00:02:02,240 --> 00:02:03,439
parameter

67
00:02:03,439 --> 00:02:05,200
our work is to characterize what larger

68
00:02:05,200 --> 00:02:07,280
means concrete

69
00:02:07,280 --> 00:02:08,639
in the full version of our words we use

70
00:02:08,639 --> 00:02:10,080
a variant of differential privacy and

71
00:02:10,080 --> 00:02:11,760
consider two separate notions of

72
00:02:11,760 --> 00:02:13,040
correctness

73
00:02:13,040 --> 00:02:14,720
in this preview i will simplify to

74
00:02:14,720 --> 00:02:16,560
gaussian noise funding and static

75
00:02:16,560 --> 00:02:17,680
correctness

76
00:02:17,680 --> 00:02:19,040
by static correctness i mean that the

77
00:02:19,040 --> 00:02:20,480
norm of the error can be publicly

78
00:02:20,480 --> 00:02:23,280
bounded by some function of both the

79
00:02:23,280 --> 00:02:26,319
circuit to evaluate and some bound on

80
00:02:26,319 --> 00:02:29,280
the norm of the input

81
00:02:29,280 --> 00:02:31,280
the concrete security notion we use is

82
00:02:31,280 --> 00:02:33,840
that of c bit security

83
00:02:33,840 --> 00:02:36,239
of machandra walter the particles had to

84
00:02:36,239 --> 00:02:37,360
have steep bits of security in some

85
00:02:37,360 --> 00:02:38,640
cryptographic game if for every

86
00:02:38,640 --> 00:02:40,480
adversary there is a

87
00:02:40,480 --> 00:02:42,000
concrete trade-off between the running

88
00:02:42,000 --> 00:02:44,160
time of the adversary t of a and the

89
00:02:44,160 --> 00:02:45,840
advantage that adversary achieves in the

90
00:02:45,840 --> 00:02:47,920
game

91
00:02:47,920 --> 00:02:49,599
we relax this notion to something we

92
00:02:49,599 --> 00:02:52,400
call c aspects of security where now for

93
00:02:52,400 --> 00:02:55,519
every adversary either this pro

94
00:02:55,519 --> 00:02:58,400
inequality uh bounding the trade-off

95
00:02:58,400 --> 00:03:00,480
between the t of a the running time and

96
00:03:00,480 --> 00:03:02,959
the advantage is satisfied or a separate

97
00:03:02,959 --> 00:03:05,920
inequality founding solely the advantage

98
00:03:05,920 --> 00:03:07,120
of the adversary achieves the

99
00:03:07,120 --> 00:03:08,800
satisfaction

100
00:03:08,800 --> 00:03:10,720
this is a concrete weakening of the

101
00:03:10,720 --> 00:03:12,640
notion of c bit security that's easiest

102
00:03:12,640 --> 00:03:14,080
to see graphically

103
00:03:14,080 --> 00:03:15,680
this is a graph of the logarithm of the

104
00:03:15,680 --> 00:03:16,879
running time of the adversary to the

105
00:03:16,879 --> 00:03:18,080
logarithm of the inverse of the

106
00:03:18,080 --> 00:03:20,239
advantage in terms of this graph a

107
00:03:20,239 --> 00:03:23,519
protocol has 128 bits of security if

108
00:03:23,519 --> 00:03:25,680
the parameters the any adversary

109
00:03:25,680 --> 00:03:27,760
achieves attacking this protocol falls

110
00:03:27,760 --> 00:03:29,920
into this blue region in particular

111
00:03:29,920 --> 00:03:31,440
there are no adversaries that achieve

112
00:03:31,440 --> 00:03:33,599
the parameters that are contained in the

113
00:03:33,599 --> 00:03:35,200
white region

114
00:03:35,200 --> 00:03:38,560
the notion of cs bit security enlarges

115
00:03:38,560 --> 00:03:41,680
this set of allowed adversaries slightly

116
00:03:41,680 --> 00:03:43,200
for the particular example of s equals

117
00:03:43,200 --> 00:03:46,959
96 bits of security it enlarges it to

118
00:03:46,959 --> 00:03:49,280
this cyan region

119
00:03:49,280 --> 00:03:51,120
this set of

120
00:03:51,120 --> 00:03:53,200
additionally allowed adversaries

121
00:03:53,200 --> 00:03:54,959
is a non-trivial set there are new

122
00:03:54,959 --> 00:03:57,120
adversaries allowed by this attack but

123
00:03:57,120 --> 00:03:59,120
all of these adversaries have explicitly

124
00:03:59,120 --> 00:04:00,400
low advantage

125
00:04:00,400 --> 00:04:01,840
in the example

126
00:04:01,840 --> 00:04:03,599
at hand all of them have advantage less

127
00:04:03,599 --> 00:04:06,480
than 2 to the minus 96

128
00:04:06,480 --> 00:04:08,560
independent of their running time

129
00:04:08,560 --> 00:04:10,400
and if one wants to achieve higher

130
00:04:10,400 --> 00:04:13,120
advantage one has to go back to the old

131
00:04:13,120 --> 00:04:15,439
adversaries the the ones that previously

132
00:04:15,439 --> 00:04:17,358
existed from the 128-bit security

133
00:04:17,358 --> 00:04:19,759
definition so while this does concretely

134
00:04:19,759 --> 00:04:21,040
introduce new adversaries and is

135
00:04:21,040 --> 00:04:22,240
therefore a weakening of the security

136
00:04:22,240 --> 00:04:25,040
notion it's in a controlled way

137
00:04:25,040 --> 00:04:27,280
that we view as likely acceptable in

138
00:04:27,280 --> 00:04:29,840
many situations

139
00:04:30,320 --> 00:04:32,800
using this novel notion of concrete

140
00:04:32,800 --> 00:04:34,720
security we're able to get significant

141
00:04:34,720 --> 00:04:36,800
gains our main theorem can be raised as

142
00:04:36,800 --> 00:04:39,360
follows they seek ksnc bits in cpa

143
00:04:39,360 --> 00:04:41,360
security post-processing by adding s

144
00:04:41,360 --> 00:04:43,520
over two plus the logarithm of the bound

145
00:04:43,520 --> 00:04:44,320
of the

146
00:04:44,320 --> 00:04:46,160
size of the error contained in the

147
00:04:46,160 --> 00:04:48,560
ciphertext bits of iid gaussian noise

148
00:04:48,560 --> 00:04:51,919
achieves the s bits between cpads

149
00:04:51,919 --> 00:04:53,520
this is s over two additional bits of

150
00:04:53,520 --> 00:04:56,240
analysis one thinks about it it's nearly

151
00:04:56,240 --> 00:04:58,960
tight for aspects of ncpad security in

152
00:04:58,960 --> 00:05:00,320
particular we have an attack that shows

153
00:05:00,320 --> 00:05:04,560
that sr4 additional bits is insecure

154
00:05:04,639 --> 00:05:06,800
by using this weaker notion this cs bit

155
00:05:06,800 --> 00:05:08,080
securing notion we can obtain

156
00:05:08,080 --> 00:05:09,919
substantial gains for even moderately

157
00:05:09,919 --> 00:05:11,120
large s

158
00:05:11,120 --> 00:05:14,560
concretely using s equals 96 we can

159
00:05:14,560 --> 00:05:16,479
obtain a counter measure that has 15

160
00:05:16,479 --> 00:05:19,120
bits of smaller

161
00:05:19,120 --> 00:05:21,360
parameters which is 20 of the total

162
00:05:21,360 --> 00:05:22,960
noise that we would have

163
00:05:22,960 --> 00:05:25,600
and for s equals 64 this becomes 30 bits

164
00:05:25,600 --> 00:05:27,360
smaller which is roughly 35 percent of

165
00:05:27,360 --> 00:05:30,080
the total noise

166
00:05:30,320 --> 00:05:32,080
while we apply this to the setting of

167
00:05:32,080 --> 00:05:33,680
fhe we expect this to be broadly

168
00:05:33,680 --> 00:05:35,600
applicable when everyone is compute

169
00:05:35,600 --> 00:05:37,759
combining a computational primitive in

170
00:05:37,759 --> 00:05:39,840
our case fhe with some statistical

171
00:05:39,840 --> 00:05:42,880
primitive anarchist differential privacy

172
00:05:42,880 --> 00:05:45,199
in summary we find that post-processing

173
00:05:45,199 --> 00:05:47,039
with between 25 and 82 bits of

174
00:05:47,039 --> 00:05:48,560
additional gaussian noise suffices to

175
00:05:48,560 --> 00:05:52,080
achieve 128s bits of ncpad security for

176
00:05:52,080 --> 00:05:53,120
a

177
00:05:53,120 --> 00:05:55,919
wide range of s between 32 and 128 in

178
00:05:55,919 --> 00:05:57,039
particular

179
00:05:57,039 --> 00:05:59,600
the precise s which one chooses

180
00:05:59,600 --> 00:06:01,840
should be application dependent in a way

181
00:06:01,840 --> 00:06:04,080
that will be elaborated on in the full

182
00:06:04,080 --> 00:06:05,600
version of the talk

183
00:06:05,600 --> 00:06:07,680
cks implementations that support 128

184
00:06:07,680 --> 00:06:09,199
bits of plaintext precision and easily

185
00:06:09,199 --> 00:06:10,880
fit or counter measure

186
00:06:10,880 --> 00:06:12,720
implementations with only 64 bits of

187
00:06:12,720 --> 00:06:14,400
plaintext precision may

188
00:06:14,400 --> 00:06:16,479
be more difficult to uh secure with our

189
00:06:16,479 --> 00:06:18,880
countermeasure while one can secure them

190
00:06:18,880 --> 00:06:21,440
likely by choosing small enough s or by

191
00:06:21,440 --> 00:06:23,199
exposing less plain text

192
00:06:23,199 --> 00:06:26,319
precision to uh users of the library

193
00:06:26,319 --> 00:06:28,000
this may uh

194
00:06:28,000 --> 00:06:30,639
make ckks in these small precision

195
00:06:30,639 --> 00:06:32,840
settings less competitive with other rfg

196
00:06:32,840 --> 00:06:35,039
schemes while our countermeasure uses

197
00:06:35,039 --> 00:06:36,800
large amounts of noise we have a lower

198
00:06:36,800 --> 00:06:38,560
bound on this noise at least in the

199
00:06:38,560 --> 00:06:40,400
sediment of c bit security with gaussian

200
00:06:40,400 --> 00:06:42,240
noise so this large amount of noise does

201
00:06:42,240 --> 00:06:45,560
seem intrinsic

