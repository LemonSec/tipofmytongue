1
00:00:02,639 --> 00:00:04,880
hi everyone i'm ken chung here from uc

2
00:00:04,880 --> 00:00:07,600
berkeley and i'm going to present our

3
00:00:07,600 --> 00:00:10,320
new work oriole challenge proof within

4
00:00:10,320 --> 00:00:12,559
your approval time and this is a joint

5
00:00:12,559 --> 00:00:14,080
to work with

6
00:00:14,080 --> 00:00:16,239
donso

7
00:00:16,239 --> 00:00:18,000
first let me introduce the definition of

8
00:00:18,000 --> 00:00:19,600
dkp

9
00:00:19,600 --> 00:00:22,080
a zeology proof enable prover to

10
00:00:22,080 --> 00:00:24,640
convince the verifier some statement is

11
00:00:24,640 --> 00:00:26,240
true

12
00:00:26,240 --> 00:00:28,560
such diverse proof has three properties

13
00:00:28,560 --> 00:00:32,000
companies funding and zero knowledge

14
00:00:32,000 --> 00:00:34,079
the company needs enables only honest

15
00:00:34,079 --> 00:00:36,719
approval to pass a verification with

16
00:00:36,719 --> 00:00:38,480
property one

17
00:00:38,480 --> 00:00:40,960
some needs enable on this verifier that

18
00:00:40,960 --> 00:00:43,600
did not detect the malicious poor except

19
00:00:43,600 --> 00:00:45,760
for negligible probability

20
00:00:45,760 --> 00:00:48,160
and the knowledge enables

21
00:00:48,160 --> 00:00:50,399
that means that the proof does not make

22
00:00:50,399 --> 00:00:54,640
any information about approval secret

23
00:00:57,440 --> 00:00:59,520
before we go into our work let me

24
00:00:59,520 --> 00:01:02,559
introduce some background information so

25
00:01:02,559 --> 00:01:06,000
here is a list of early stage dkps

26
00:01:06,000 --> 00:01:08,479
this this one general tools require a

27
00:01:08,479 --> 00:01:10,960
transit setup and

28
00:01:10,960 --> 00:01:14,479
their speed is not so good

29
00:01:14,560 --> 00:01:16,400
several years later there is a second

30
00:01:16,400 --> 00:01:18,240
generation of geometry proof

31
00:01:18,240 --> 00:01:20,799
they removed the traffic setup so the

32
00:01:20,799 --> 00:01:23,520
security is much much higher than the

33
00:01:23,520 --> 00:01:24,799
previous one

34
00:01:24,799 --> 00:01:28,000
and they also improve the speed

35
00:01:28,000 --> 00:01:30,320
but the proof size is much larger than

36
00:01:30,320 --> 00:01:32,960
previous one

37
00:01:32,960 --> 00:01:34,799
so

38
00:01:34,799 --> 00:01:36,640
second generation

39
00:01:36,640 --> 00:01:38,400
challenge proof has constantly improved

40
00:01:38,400 --> 00:01:42,479
generation time and in our new work we

41
00:01:42,479 --> 00:01:44,560
further reduce the proof generation time

42
00:01:44,560 --> 00:01:47,040
from crossing india to linear time

43
00:01:47,040 --> 00:01:50,000
at the same time we keep the security

44
00:01:50,000 --> 00:01:52,560
so we don't have trusted setup and we

45
00:01:52,560 --> 00:01:53,360
keep

46
00:01:53,360 --> 00:01:55,840
roughly the same proof size with second

47
00:01:55,840 --> 00:01:56,960
generation

48
00:01:56,960 --> 00:01:58,479
so

49
00:01:58,479 --> 00:02:01,119
in our work we are purely improving the

50
00:02:01,119 --> 00:02:03,439
speed without sacrificing other

51
00:02:03,439 --> 00:02:06,439
parameters

52
00:02:08,000 --> 00:02:10,560
uh here is our technical contribution

53
00:02:10,560 --> 00:02:13,200
and our linear approval comes from a new

54
00:02:13,200 --> 00:02:15,680
expander sampling algorithm this

55
00:02:15,680 --> 00:02:17,920
expander sampling algorithm enables uh

56
00:02:17,920 --> 00:02:19,200
to sample

57
00:02:19,200 --> 00:02:22,800
a fender with a graphic never successful

58
00:02:22,800 --> 00:02:24,160
probability

59
00:02:24,160 --> 00:02:26,319
and such expander enables us to

60
00:02:26,319 --> 00:02:28,080
construct a linear timing called the

61
00:02:28,080 --> 00:02:30,640
linear code which ultimately leads to a

62
00:02:30,640 --> 00:02:32,879
linear time prover

63
00:02:32,879 --> 00:02:34,959
and second kind of second contribution

64
00:02:34,959 --> 00:02:37,680
is non-black box proof composition

65
00:02:37,680 --> 00:02:40,000
and this enables us to further reduce

66
00:02:40,000 --> 00:02:42,239
the verification cost from square root

67
00:02:42,239 --> 00:02:43,040
10

68
00:02:43,040 --> 00:02:44,959
to log n

69
00:02:44,959 --> 00:02:47,040
and that's all about this short intro

70
00:02:47,040 --> 00:02:49,440
and tension is here and here is

71
00:02:49,440 --> 00:02:51,920
our paper link and the code link

72
00:02:51,920 --> 00:02:53,840
and i'm looking forward to meet you at

73
00:02:53,840 --> 00:02:56,840
crypto

