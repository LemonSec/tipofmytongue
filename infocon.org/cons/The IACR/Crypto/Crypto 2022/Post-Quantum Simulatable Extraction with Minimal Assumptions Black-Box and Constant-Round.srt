1
00:00:00,240 --> 00:00:02,720
hello everyone i'm shaolian i'm here to

2
00:00:02,720 --> 00:00:05,279
give a short overview of our results on

3
00:00:05,279 --> 00:00:07,759
post quantum simulator extraction this

4
00:00:07,759 --> 00:00:10,000
is a joint work with nahui cha

5
00:00:10,000 --> 00:00:13,840
kamingtong and takashi yamakawa

6
00:00:13,840 --> 00:00:16,239
extractable commitments are very basic

7
00:00:16,239 --> 00:00:18,800
and important cryptography primitive it

8
00:00:18,800 --> 00:00:21,439
requires the existence of an extractor

9
00:00:21,439 --> 00:00:24,160
given the malicious commander c star the

10
00:00:24,160 --> 00:00:26,720
extractor talks to the c star it may

11
00:00:26,720 --> 00:00:29,519
potentially rewind sistar but at the end

12
00:00:29,519 --> 00:00:32,640
of the execution the extractor is able

13
00:00:32,640 --> 00:00:35,600
to extract the value m star committed by

14
00:00:35,600 --> 00:00:37,600
the malicious c star

15
00:00:37,600 --> 00:00:39,120
here i want to remark that in the

16
00:00:39,120 --> 00:00:41,600
classical setting this primitive

17
00:00:41,600 --> 00:00:43,760
enjoys some property that we usually

18
00:00:43,760 --> 00:00:47,120
take for granted that is the extractor

19
00:00:47,120 --> 00:00:49,200
is able to not only extract the

20
00:00:49,200 --> 00:00:51,520
committed value m-star it can also

21
00:00:51,520 --> 00:00:54,640
simulate c-star's post-extraction state

22
00:00:54,640 --> 00:00:57,120
this property is particularly important

23
00:00:57,120 --> 00:00:59,920
for protocol composition for classical

24
00:00:59,920 --> 00:01:02,320
protocol this is usually easy to do

25
00:01:02,320 --> 00:01:05,438
because extractor can just pretend to be

26
00:01:05,438 --> 00:01:07,520
the honest receiver to execute the

27
00:01:07,520 --> 00:01:09,280
protocol with systar

28
00:01:09,280 --> 00:01:11,920
and then the extractor can rewind the

29
00:01:11,920 --> 00:01:13,840
system back to the beginning of the

30
00:01:13,840 --> 00:01:16,320
execution and start the extraction

31
00:01:16,320 --> 00:01:19,680
procedure however what if the c star now

32
00:01:19,680 --> 00:01:22,479
is a quantum industry in this setting

33
00:01:22,479 --> 00:01:24,640
simulating c star's post extraction

34
00:01:24,640 --> 00:01:27,360
state turns out to be hard work due to

35
00:01:27,360 --> 00:01:29,840
no cloning theorem we cannot record

36
00:01:29,840 --> 00:01:32,880
start state and rerun it back

37
00:01:32,880 --> 00:01:34,799
now let's take a look at a typical

38
00:01:34,799 --> 00:01:37,360
construction of extractable equipment

39
00:01:37,360 --> 00:01:39,680
to commit a value the commuter first

40
00:01:39,680 --> 00:01:43,920
sample two random strings a1 0 and a11

41
00:01:43,920 --> 00:01:46,320
which export to the message m this

42
00:01:46,320 --> 00:01:48,159
actually forms a sql sharing of the

43
00:01:48,159 --> 00:01:49,439
message m

44
00:01:49,439 --> 00:01:50,799
then the committee repeats this

45
00:01:50,799 --> 00:01:53,520
procedure for n times where the end is a

46
00:01:53,520 --> 00:01:55,200
security parameter

47
00:01:55,200 --> 00:01:56,880
next the commuter commits to these

48
00:01:56,880 --> 00:01:58,960
shares independently

49
00:01:58,960 --> 00:02:02,079
next the receiver symbol run stream of

50
00:02:02,079 --> 00:02:03,280
lens n

51
00:02:03,280 --> 00:02:05,119
the receiver simply sends the random

52
00:02:05,119 --> 00:02:07,520
string c to the committer the commuter

53
00:02:07,520 --> 00:02:09,679
thickness to its initial commitment

54
00:02:09,679 --> 00:02:12,800
according to the receiver's screen c

55
00:02:12,800 --> 00:02:14,959
now let us recall how to extract the

56
00:02:14,959 --> 00:02:17,040
committed value if the computer c is

57
00:02:17,040 --> 00:02:18,319
malicious

58
00:02:18,319 --> 00:02:21,200
our extractor simply sample a new random

59
00:02:21,200 --> 00:02:24,239
string c prime send it to the c star and

60
00:02:24,239 --> 00:02:26,800
learn the corresponding decommitments as

61
00:02:26,800 --> 00:02:29,599
you can see as long as c and c star are

62
00:02:29,599 --> 00:02:32,319
not identical there will be one column

63
00:02:32,319 --> 00:02:34,800
in this matrix where the merger's

64
00:02:34,800 --> 00:02:37,440
committer digmates to both positions in

65
00:02:37,440 --> 00:02:39,920
one column these two decommitments will

66
00:02:39,920 --> 00:02:41,840
allow us to recover the committed

67
00:02:41,840 --> 00:02:43,200
message m

68
00:02:43,200 --> 00:02:45,200
this is how the extractor works in the

69
00:02:45,200 --> 00:02:46,640
classical setting

70
00:02:46,640 --> 00:02:48,640
now let's consider the scenario where

71
00:02:48,640 --> 00:02:50,480
the malicious c star is a quantum

72
00:02:50,480 --> 00:02:52,319
machine

73
00:02:52,319 --> 00:02:55,040
in this case it might be still possible

74
00:02:55,040 --> 00:02:58,080
to extract the committed value m star

75
00:02:58,080 --> 00:03:00,400
using say the techniques developed by

76
00:03:00,400 --> 00:03:02,840
oneru for post quantum proof of

77
00:03:02,840 --> 00:03:06,159
knowledge however it is unclear how we

78
00:03:06,159 --> 00:03:08,800
can simulate the malicious sistar's

79
00:03:08,800 --> 00:03:11,120
post-quantum extraction state

80
00:03:11,120 --> 00:03:13,599
at this moment you're missing that maybe

81
00:03:13,599 --> 00:03:15,680
this construction is not good

82
00:03:15,680 --> 00:03:17,360
if we choose another construction of

83
00:03:17,360 --> 00:03:19,280
extractable equipment maybe we can

84
00:03:19,280 --> 00:03:21,360
extract the committed value while

85
00:03:21,360 --> 00:03:23,920
simulating the c-star's post-extraction

86
00:03:23,920 --> 00:03:25,120
state

87
00:03:25,120 --> 00:03:27,599
however it is worth noting that

88
00:03:27,599 --> 00:03:30,000
this construction is popular for some

89
00:03:30,000 --> 00:03:33,680
reasons for example it makes use of only

90
00:03:33,680 --> 00:03:36,720
minimal assumptions also it is constant

91
00:03:36,720 --> 00:03:38,799
round and makes black box use of all

92
00:03:38,799 --> 00:03:41,200
functions the last two properties are

93
00:03:41,200 --> 00:03:43,120
particularly important for efficiency

94
00:03:43,120 --> 00:03:44,480
concerns

95
00:03:44,480 --> 00:03:46,480
so if you want to find an alternative

96
00:03:46,480 --> 00:03:48,959
construction for extractable component

97
00:03:48,959 --> 00:03:51,200
in the postcolumn setting you may also

98
00:03:51,200 --> 00:03:53,519
want to maintain these advantages

99
00:03:53,519 --> 00:03:55,599
now let's look at the state of the arts

100
00:03:55,599 --> 00:03:57,280
if you want all the properties mentioned

101
00:03:57,280 --> 00:03:59,599
earlier basically there are four known

102
00:03:59,599 --> 00:04:01,920
constructions so far only the last

103
00:04:01,920 --> 00:04:04,080
construction makes black box use of the

104
00:04:04,080 --> 00:04:06,560
underlying primitive and only the second

105
00:04:06,560 --> 00:04:08,560
construction managed to achieve constant

106
00:04:08,560 --> 00:04:11,439
rounds in this column i also show if

107
00:04:11,439 --> 00:04:13,920
these constructions require quantum

108
00:04:13,920 --> 00:04:16,478
power for communication and computation

109
00:04:16,478 --> 00:04:18,880
moreover the first construction is based

110
00:04:18,880 --> 00:04:21,040
on assumptions as strong as oblivious

111
00:04:21,040 --> 00:04:23,440
transfers the second construction is

112
00:04:23,440 --> 00:04:25,199
algebraic assumptions

113
00:04:25,199 --> 00:04:28,320
in particular it requires the existence

114
00:04:28,320 --> 00:04:30,320
of fully homomorphic encryption for

115
00:04:30,320 --> 00:04:32,880
quantum circuits as well as the lw

116
00:04:32,880 --> 00:04:34,000
assumption

117
00:04:34,000 --> 00:04:36,400
so it looks like the current state of

118
00:04:36,400 --> 00:04:39,280
the arts are not satisfactory

119
00:04:39,280 --> 00:04:41,199
actually there is a reason

120
00:04:41,199 --> 00:04:43,280
this problem is hard even if we only

121
00:04:43,280 --> 00:04:45,440
require constant run constructions and

122
00:04:45,440 --> 00:04:47,840
simulatable c stars post extraction

123
00:04:47,840 --> 00:04:49,120
state

124
00:04:49,120 --> 00:04:51,919
the reason is such an extractable column

125
00:04:51,919 --> 00:04:54,479
satisfying only these two properties

126
00:04:54,479 --> 00:04:57,199
would imply constant from zero knowledge

127
00:04:57,199 --> 00:04:59,520
for which we have negative results

128
00:04:59,520 --> 00:05:01,840
due to time limit i want to explain

129
00:05:01,840 --> 00:05:03,680
these conditions for now

130
00:05:03,680 --> 00:05:05,600
if you are interested you can check this

131
00:05:05,600 --> 00:05:07,440
paper in our reference

132
00:05:07,440 --> 00:05:09,280
due to the lower bound mentioned earlier

133
00:05:09,280 --> 00:05:11,440
we cannot achieve all the desired

134
00:05:11,440 --> 00:05:12,720
properties

135
00:05:12,720 --> 00:05:15,039
therefore we choose to imagine a weak

136
00:05:15,039 --> 00:05:17,120
relation for simulation called epsilon

137
00:05:17,120 --> 00:05:18,400
simulation

138
00:05:18,400 --> 00:05:20,880
that is instead of trying to simulate

139
00:05:20,880 --> 00:05:23,680
the post extraction state as tc star

140
00:05:23,680 --> 00:05:26,080
with natural error we now allow a

141
00:05:26,080 --> 00:05:29,280
noticeable error gap more accurately

142
00:05:29,280 --> 00:05:31,840
we require the existence of a simulation

143
00:05:31,840 --> 00:05:33,680
extractor se

144
00:05:33,680 --> 00:05:36,560
sce takes a noticeable function epsilon

145
00:05:36,560 --> 00:05:39,919
as a parameter now we compare two words

146
00:05:39,919 --> 00:05:42,720
the first word is the real execution we

147
00:05:42,720 --> 00:05:45,680
denote stc star as a state of the

148
00:05:45,680 --> 00:05:47,360
malicious committee at the end of the

149
00:05:47,360 --> 00:05:48,560
execution

150
00:05:48,560 --> 00:05:50,560
we use this notion to denote the

151
00:05:50,560 --> 00:05:52,800
transcript which consists of all the

152
00:05:52,800 --> 00:05:55,039
interaction messages between c star and

153
00:05:55,039 --> 00:05:55,840
r

154
00:05:55,840 --> 00:05:59,360
in the real world we concern this tuple

155
00:05:59,360 --> 00:06:02,240
this value denotes the message committed

156
00:06:02,240 --> 00:06:05,199
by c star you can think of it as bonded

157
00:06:05,199 --> 00:06:06,800
in this transcript

158
00:06:06,800 --> 00:06:09,280
the second ball is a simulation

159
00:06:09,280 --> 00:06:10,720
extraction word

160
00:06:10,720 --> 00:06:13,520
this s e talks to c star it can

161
00:06:13,520 --> 00:06:16,240
potentially revamp c star at the end of

162
00:06:16,240 --> 00:06:17,759
the interaction

163
00:06:17,759 --> 00:06:20,319
the xe outputs the tuple which is

164
00:06:20,319 --> 00:06:22,160
supposed to be the simulated

165
00:06:22,160 --> 00:06:24,080
post-extraction state

166
00:06:24,080 --> 00:06:26,800
and the message committed by sistar

167
00:06:26,800 --> 00:06:29,520
we say that a extractable equipment is

168
00:06:29,520 --> 00:06:32,880
epsilon simulatable if these two tuples

169
00:06:32,880 --> 00:06:35,520
are epsilon codes for any noticeable

170
00:06:35,520 --> 00:06:36,800
function if so

171
00:06:36,800 --> 00:06:38,479
i want to remark that

172
00:06:38,479 --> 00:06:40,319
this weaker notion of simulation is

173
00:06:40,319 --> 00:06:41,600
still useful

174
00:06:41,600 --> 00:06:44,080
because epsilon simulation is always

175
00:06:44,080 --> 00:06:47,199
sufficient to imply nd based or

176
00:06:47,199 --> 00:06:48,960
game-based security

177
00:06:48,960 --> 00:06:51,759
here a typical example is that epsilon

178
00:06:51,759 --> 00:06:53,840
simulator zero knowledge already

179
00:06:53,840 --> 00:06:56,880
impressed witness in distinguishability

180
00:06:56,880 --> 00:06:59,120
now we ask a question if we are happy

181
00:06:59,120 --> 00:07:00,840
with this relaxed notion through

182
00:07:00,840 --> 00:07:03,039
simulation can we build extractable

183
00:07:03,039 --> 00:07:05,520
commitments that maintain all the other

184
00:07:05,520 --> 00:07:07,360
advantages

185
00:07:07,360 --> 00:07:10,080
and the answer is yes in this work we

186
00:07:10,080 --> 00:07:12,000
build such an epsilon simulatable

187
00:07:12,000 --> 00:07:13,680
extractable commitment

188
00:07:13,680 --> 00:07:16,080
to execute our protocol their honest

189
00:07:16,080 --> 00:07:18,160
product doesn't need to be quantum but

190
00:07:18,160 --> 00:07:20,400
it is secure against even quantum

191
00:07:20,400 --> 00:07:22,000
malicious committers

192
00:07:22,000 --> 00:07:24,319
as applications our extractable

193
00:07:24,319 --> 00:07:27,520
commitments imply two-party coin housing

194
00:07:27,520 --> 00:07:29,520
zero knowledge argument of knowledge for

195
00:07:29,520 --> 00:07:32,880
np and zero knowledge arguments for qma

196
00:07:32,880 --> 00:07:35,039
and eventually we also obtain secure

197
00:07:35,039 --> 00:07:36,880
two-party computation

198
00:07:36,880 --> 00:07:39,039
all these protocols also enjoy the

199
00:07:39,039 --> 00:07:41,120
advantages shown here

200
00:07:41,120 --> 00:07:43,599
but since our extractable column is only

201
00:07:43,599 --> 00:07:46,160
epsilon simulatable we only manage to

202
00:07:46,160 --> 00:07:48,160
achieve epsilon simultaneous version of

203
00:07:48,160 --> 00:07:50,160
these protocols

204
00:07:50,160 --> 00:07:52,400
if if you are interested please look

205
00:07:52,400 --> 00:07:54,720
forward to our talk at full length here

206
00:07:54,720 --> 00:07:56,720
is information for our talk and you can

207
00:07:56,720 --> 00:07:59,039
also find the full version of our paper

208
00:07:59,039 --> 00:08:00,400
at this link

209
00:08:00,400 --> 00:08:04,039
thank you for your attention

