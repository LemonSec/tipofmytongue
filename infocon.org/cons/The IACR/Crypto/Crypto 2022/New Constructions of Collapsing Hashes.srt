1
00:00:00,799 --> 00:00:02,720
this talk will cover two concurrent and

2
00:00:02,720 --> 00:00:04,160
independent works

3
00:00:04,160 --> 00:00:06,240
one by myself and the other by kao and

4
00:00:06,240 --> 00:00:07,279
zu

5
00:00:07,279 --> 00:00:08,480
these works provide a better

6
00:00:08,480 --> 00:00:10,240
understanding for the feasibility of

7
00:00:10,240 --> 00:00:14,000
secure hash functions in a quantum world

8
00:00:14,000 --> 00:00:15,440
let's start with the classical notion of

9
00:00:15,440 --> 00:00:17,199
collision resistance

10
00:00:17,199 --> 00:00:18,800
here we have a hash function h whose

11
00:00:18,800 --> 00:00:20,960
outputs are shorter than their inputs

12
00:00:20,960 --> 00:00:22,320
this means that there must be many

13
00:00:22,320 --> 00:00:24,640
colliding inputs to h

14
00:00:24,640 --> 00:00:26,640
however classical collision resistance

15
00:00:26,640 --> 00:00:28,880
assumes that despite existing it is

16
00:00:28,880 --> 00:00:30,640
infeasible for any efficient adversary

17
00:00:30,640 --> 00:00:32,800
to actually find a collision

18
00:00:32,800 --> 00:00:34,640
this property of compressing the input

19
00:00:34,640 --> 00:00:36,160
while having computationally hidden

20
00:00:36,160 --> 00:00:38,399
collisions has tremendous applications

21
00:00:38,399 --> 00:00:40,399
throughout cryptography making collision

22
00:00:40,399 --> 00:00:42,000
resistance one of the core cryptographic

23
00:00:42,000 --> 00:00:43,520
building blocks

24
00:00:43,520 --> 00:00:45,600
when moving to quantum it turns out that

25
00:00:45,600 --> 00:00:47,360
the obvious way to define security is

26
00:00:47,360 --> 00:00:49,440
insufficient and that a stronger notion

27
00:00:49,440 --> 00:00:51,440
called collapsing is required in many

28
00:00:51,440 --> 00:00:52,719
use cases

29
00:00:52,719 --> 00:00:54,559
the rough idea is that measuring the

30
00:00:54,559 --> 00:00:56,879
output of the hash function on a quantum

31
00:00:56,879 --> 00:00:58,719
superposition of inputs

32
00:00:58,719 --> 00:01:00,160
should be indistinguishable from

33
00:01:00,160 --> 00:01:02,559
measuring the input superposition

34
00:01:02,559 --> 00:01:04,479
this is widely regarded now as the right

35
00:01:04,479 --> 00:01:07,040
notion of security for post-quantum

36
00:01:07,040 --> 00:01:09,119
hash functions

37
00:01:09,119 --> 00:01:11,119
unfortunately very little is known about

38
00:01:11,119 --> 00:01:12,880
achieving collapsing and there's a

39
00:01:12,880 --> 00:01:15,200
frustratingly wide gap between the known

40
00:01:15,200 --> 00:01:17,119
positive and negative results

41
00:01:17,119 --> 00:01:18,799
the only positive result in the standard

42
00:01:18,799 --> 00:01:20,880
model requires the learning with errors

43
00:01:20,880 --> 00:01:21,920
assumption

44
00:01:21,920 --> 00:01:24,960
or lwe and uses the fact that lwe gives

45
00:01:24,960 --> 00:01:27,200
a lossy function

46
00:01:27,200 --> 00:01:29,040
on the other hand the negative results

47
00:01:29,040 --> 00:01:31,520
are all in idealized models or rely on

48
00:01:31,520 --> 00:01:33,920
untested computational assumptions

49
00:01:33,920 --> 00:01:35,759
so on one hand it could be that the only

50
00:01:35,759 --> 00:01:38,320
standard model collapsing hash function

51
00:01:38,320 --> 00:01:40,960
are those based on lwe or it could just

52
00:01:40,960 --> 00:01:43,119
as easily be that all standard model

53
00:01:43,119 --> 00:01:44,720
hash functions based on post-quantum

54
00:01:44,720 --> 00:01:47,680
tools are collapsing

55
00:01:47,680 --> 00:01:49,280
this talk will be about a new technique

56
00:01:49,280 --> 00:01:51,119
for proving the collapsing property of

57
00:01:51,119 --> 00:01:53,439
hash functions as explored concurrently

58
00:01:53,439 --> 00:01:55,360
in these two independent works

59
00:01:55,360 --> 00:01:57,040
the gist is that we can now build

60
00:01:57,040 --> 00:01:59,119
collapsing hashes from essentially all

61
00:01:59,119 --> 00:02:01,119
the same tools that are currently known

62
00:02:01,119 --> 00:02:02,880
to give collision resistance

63
00:02:02,880 --> 00:02:05,840
as long as that tools are post-quantum

64
00:02:05,840 --> 00:02:07,600
note that while the tools are the same

65
00:02:07,600 --> 00:02:09,440
in order to prove collapsing the

66
00:02:09,440 --> 00:02:11,038
construction changes

67
00:02:11,038 --> 00:02:15,000
please see the talk for details

