1
00:00:03,280 --> 00:00:06,000
hello everyone i'm ivan sung today i'm

2
00:00:06,000 --> 00:00:08,639
happy to introduce our work tight bonds

3
00:00:08,639 --> 00:00:10,639
on the randomness complexity of secure

4
00:00:10,639 --> 00:00:12,480
multi-party computation

5
00:00:12,480 --> 00:00:14,559
this is the drone's work with vapor goya

6
00:00:14,559 --> 00:00:17,039
and the shine

7
00:00:17,039 --> 00:00:19,279
in this work we consider the randomness

8
00:00:19,279 --> 00:00:20,480
complexity

9
00:00:20,480 --> 00:00:22,720
from a practical perspective

10
00:00:22,720 --> 00:00:24,720
generating high quality randomness from

11
00:00:24,720 --> 00:00:27,680
physical sources is difficult therefore

12
00:00:27,680 --> 00:00:29,840
in general we would like to reduce the

13
00:00:29,840 --> 00:00:31,760
randomness required in either an

14
00:00:31,760 --> 00:00:34,239
algorithm or a protocol as much as

15
00:00:34,239 --> 00:00:36,239
possible

16
00:00:36,239 --> 00:00:38,480
from the theoretical perspective the

17
00:00:38,480 --> 00:00:40,719
study of randomized complexity has led

18
00:00:40,719 --> 00:00:43,040
to important developments in computer

19
00:00:43,040 --> 00:00:45,760
science such as to the randomness random

20
00:00:45,760 --> 00:00:49,120
extraction and so on

21
00:00:49,200 --> 00:00:51,280
we study the randomized complexity of

22
00:00:51,280 --> 00:00:54,160
npc we start with a simply setting of

23
00:00:54,160 --> 00:00:57,199
npc that is perfect and semi-eye

24
00:00:57,199 --> 00:01:00,160
security against t crappy parties and

25
00:01:00,160 --> 00:01:02,640
computing the excel function

26
00:01:02,640 --> 00:01:04,799
later i will mention extensions to other

27
00:01:04,799 --> 00:01:08,320
functions and npc models

28
00:01:08,320 --> 00:01:10,640
the randomized complexity of an npc

29
00:01:10,640 --> 00:01:12,960
protocol is measured by the number of

30
00:01:12,960 --> 00:01:15,600
random coins tossed by all parties

31
00:01:15,600 --> 00:01:18,000
during the protocol execution

32
00:01:18,000 --> 00:01:19,759
we allow parties to toss different

33
00:01:19,759 --> 00:01:21,759
number of random coins in different

34
00:01:21,759 --> 00:01:23,600
executions

35
00:01:23,600 --> 00:01:26,000
the randomized complexity refers to the

36
00:01:26,000 --> 00:01:28,640
maximum number of random coins posed in

37
00:01:28,640 --> 00:01:33,119
an execution for all possible inputs

38
00:01:33,600 --> 00:01:35,759
the problem of randomness complexity of

39
00:01:35,759 --> 00:01:38,720
npc has been studied by a fairly large

40
00:01:38,720 --> 00:01:40,720
body of works which covers the

41
00:01:40,720 --> 00:01:43,040
directions of both lower bound and upper

42
00:01:43,040 --> 00:01:44,240
bound

43
00:01:44,240 --> 00:01:46,560
almost all of this works consider the

44
00:01:46,560 --> 00:01:49,840
same simple model as we do

45
00:01:49,840 --> 00:01:52,479
our research question is to understand

46
00:01:52,479 --> 00:01:54,240
how the randomness complexity for

47
00:01:54,240 --> 00:01:56,960
computing xor grows with the number of

48
00:01:56,960 --> 00:01:59,680
crowded parties

49
00:01:59,680 --> 00:02:01,119
the best known result for the upper

50
00:02:01,119 --> 00:02:04,320
bound is from km97 where crochet levis

51
00:02:04,320 --> 00:02:06,719
and mysore constructed a protocol with

52
00:02:06,719 --> 00:02:09,440
random complexity out of t square times

53
00:02:09,440 --> 00:02:12,080
log and our t random bits

54
00:02:12,080 --> 00:02:14,160
on the other hand they also gave a lower

55
00:02:14,160 --> 00:02:16,800
bound of omega t random bits

56
00:02:16,800 --> 00:02:19,760
in bdpv99 the authors obtained a lower

57
00:02:19,760 --> 00:02:22,560
bound of omega t squared over mst random

58
00:02:22,560 --> 00:02:23,440
b's

59
00:02:23,440 --> 00:02:26,480
then in jr05 they also showed a lower

60
00:02:26,480 --> 00:02:29,120
bound of omega log and random beats for

61
00:02:29,120 --> 00:02:32,319
t that is at least 2.

62
00:02:32,319 --> 00:02:34,800
on one hand when t is a constant the

63
00:02:34,800 --> 00:02:38,080
upper bound from km97 matches the lower

64
00:02:38,080 --> 00:02:40,879
bound from gr05

65
00:02:40,879 --> 00:02:43,280
on the other hand when t is very close

66
00:02:43,280 --> 00:02:44,160
to n

67
00:02:44,160 --> 00:02:47,120
say t is equal to n minus a constant

68
00:02:47,120 --> 00:02:49,760
then the upper bound from k

69
00:02:49,760 --> 00:02:54,200
matches the lower bound from bdpv99

70
00:02:54,239 --> 00:02:57,280
however for general t even if t is equal

71
00:02:57,280 --> 00:03:00,480
to n half there is still a quadratic gap

72
00:03:00,480 --> 00:03:02,159
between the known upper bound and the

73
00:03:02,159 --> 00:03:04,640
lower bound

74
00:03:04,640 --> 00:03:07,440
our first result shows that computing xr

75
00:03:07,440 --> 00:03:10,080
requires at least omega t square random

76
00:03:10,080 --> 00:03:12,640
bs which matches the upper bound from

77
00:03:12,640 --> 00:03:16,239
km97 up to a logarithmic factor

78
00:03:16,239 --> 00:03:18,239
we show that the same lower bound

79
00:03:18,239 --> 00:03:20,319
applies for arbitrary symmetric boolean

80
00:03:20,319 --> 00:03:23,040
functions such as the end function and

81
00:03:23,040 --> 00:03:25,920
the majority function

82
00:03:25,920 --> 00:03:28,239
our second result constructs an explicit

83
00:03:28,239 --> 00:03:31,200
protocol for xr with order of t-square

84
00:03:31,200 --> 00:03:33,760
times log square and random bits

85
00:03:33,760 --> 00:03:35,680
this is different from the construction

86
00:03:35,680 --> 00:03:38,879
in km97 which relax on an explicit

87
00:03:38,879 --> 00:03:41,360
combinatorial object

88
00:03:41,360 --> 00:03:43,440
our upper bound matches our lower bound

89
00:03:43,440 --> 00:03:46,080
up to a poly logarithmic factor and we

90
00:03:46,080 --> 00:03:47,599
extend our results to arbitrary

91
00:03:47,599 --> 00:03:50,480
symmetric boolean functions

92
00:03:50,480 --> 00:03:52,799
regarding our techniques for lower bound

93
00:03:52,799 --> 00:03:54,720
we connect the randomness complexity to

94
00:03:54,720 --> 00:03:57,280
the number of parties views and then to

95
00:03:57,280 --> 00:03:59,439
the size of the codeword space of t

96
00:03:59,439 --> 00:04:01,280
private encodings

97
00:04:01,280 --> 00:04:03,760
our result is obtained by analyzing the

98
00:04:03,760 --> 00:04:06,159
size of the codeword space of t5

99
00:04:06,159 --> 00:04:08,000
encoding schemes

100
00:04:08,000 --> 00:04:10,560
for our upper bounds we give an explicit

101
00:04:10,560 --> 00:04:12,560
construction for the combinatorial

102
00:04:12,560 --> 00:04:16,200
object in km97

103
00:04:16,399 --> 00:04:18,639
besides our main results we also show

104
00:04:18,639 --> 00:04:21,600
that running t axle functions require

105
00:04:21,600 --> 00:04:24,320
tilt of out of t-square random bs which

106
00:04:24,320 --> 00:04:27,440
means that each execution only requires

107
00:04:27,440 --> 00:04:30,240
tilt of out of t random bs

108
00:04:30,240 --> 00:04:32,639
when allowing helper parties we give an

109
00:04:32,639 --> 00:04:34,960
explicit protocol for general circuits

110
00:04:34,960 --> 00:04:37,440
with order of t square times log c

111
00:04:37,440 --> 00:04:41,360
random bits where c is the circuit

112
00:04:41,360 --> 00:04:41,680
for size

113
00:04:41,680 --> 00:04:43,680
details about our techniques please

114
00:04:43,680 --> 00:04:45,680
refer to the full video on our paper on

115
00:04:45,680 --> 00:04:49,720
eprint thank you

