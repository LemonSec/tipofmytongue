1
00:00:01,199 --> 00:00:02,560
hello everyone

2
00:00:02,560 --> 00:00:04,799
i am jorgos and this is a short teaser

3
00:00:04,799 --> 00:00:06,720
on our paper called gossiping for

4
00:00:06,720 --> 00:00:08,960
communication efficient broadcast

5
00:00:08,960 --> 00:00:10,559
this is a joint work

6
00:00:10,559 --> 00:00:12,880
with julian laws from sispa and bob

7
00:00:12,880 --> 00:00:15,839
schwab amantu from yale

8
00:00:15,839 --> 00:00:17,680
broadcast is perhaps more relevant than

9
00:00:17,680 --> 00:00:20,160
ever due to its multiple uses in

10
00:00:20,160 --> 00:00:23,840
applications both in npc and blockchains

11
00:00:23,840 --> 00:00:26,320
it is basically byzantine broadcast with

12
00:00:26,320 --> 00:00:28,560
the use of a public key infrastructure

13
00:00:28,560 --> 00:00:30,720
or pki

14
00:00:30,720 --> 00:00:34,239
pki can be based on trusted setup or on

15
00:00:34,239 --> 00:00:36,320
a bulletin board

16
00:00:36,320 --> 00:00:39,440
parties can use pki to sign messages

17
00:00:39,440 --> 00:00:42,640
with their own unique signatures

18
00:00:42,640 --> 00:00:44,480
in this example we have a designated

19
00:00:44,480 --> 00:00:46,879
sender with a specific message that they

20
00:00:46,879 --> 00:00:48,800
want to send to all other parties in the

21
00:00:48,800 --> 00:00:50,719
protocol they basically want to

22
00:00:50,719 --> 00:00:52,800
broadcast the message

23
00:00:52,800 --> 00:00:54,640
however some of the parties might be

24
00:00:54,640 --> 00:00:56,960
corrupt and might attempt to attempt to

25
00:00:56,960 --> 00:00:59,199
disrupt the communication of the

26
00:00:59,199 --> 00:01:03,440
designated sender to all other parties

27
00:01:03,440 --> 00:01:05,360
in the end of this protocol

28
00:01:05,360 --> 00:01:08,000
we want all honest parties to agree on

29
00:01:08,000 --> 00:01:09,600
the same message

30
00:01:09,600 --> 00:01:12,000
and in case where the designated sender

31
00:01:12,000 --> 00:01:14,720
is honest we want all honest parties to

32
00:01:14,720 --> 00:01:16,159
agree on the designated standards

33
00:01:16,159 --> 00:01:17,600
message

34
00:01:17,600 --> 00:01:20,000
in the parallel version we have all

35
00:01:20,000 --> 00:01:22,159
parties being designated senders for

36
00:01:22,159 --> 00:01:23,759
their own messages

37
00:01:23,759 --> 00:01:25,759
and of course they want to broadcast

38
00:01:25,759 --> 00:01:27,920
their own messages to all other parties

39
00:01:27,920 --> 00:01:29,680
in the protocol

40
00:01:29,680 --> 00:01:31,439
again however some of the parties might

41
00:01:31,439 --> 00:01:32,799
be corrupt

42
00:01:32,799 --> 00:01:34,640
and still we want the same properties to

43
00:01:34,640 --> 00:01:36,799
apply

44
00:01:36,799 --> 00:01:39,119
authenticated broadcast comes in many

45
00:01:39,119 --> 00:01:41,600
flavors depending on several factors

46
00:01:41,600 --> 00:01:42,720
such as

47
00:01:42,720 --> 00:01:44,799
synchronous or asynchronous

48
00:01:44,799 --> 00:01:47,360
communication between parties

49
00:01:47,360 --> 00:01:48,880
the number of corruptions that the

50
00:01:48,880 --> 00:01:50,640
adversary can achieve which

51
00:01:50,640 --> 00:01:52,640
differentiate between an honest or

52
00:01:52,640 --> 00:01:55,040
dishonest majority setting

53
00:01:55,040 --> 00:01:56,880
the setup assumptions

54
00:01:56,880 --> 00:01:59,200
and whether the adversary is static or

55
00:01:59,200 --> 00:02:01,680
adaptive

56
00:02:02,079 --> 00:02:04,320
in the settings that we first explore we

57
00:02:04,320 --> 00:02:06,880
assume synchronous communication

58
00:02:06,880 --> 00:02:08,800
dishonest majority in which the

59
00:02:08,800 --> 00:02:10,479
adversary can corrupt up to as many

60
00:02:10,479 --> 00:02:12,400
parties as they like

61
00:02:12,400 --> 00:02:15,040
and no trusted setup

62
00:02:15,040 --> 00:02:17,200
this is a setting that appears sometimes

63
00:02:17,200 --> 00:02:19,280
in blockchains

64
00:02:19,280 --> 00:02:20,800
in this setting

65
00:02:20,800 --> 00:02:23,920
the state-of-the-art is a protocol by

66
00:02:23,920 --> 00:02:27,360
dollar strong in 1983

67
00:02:27,360 --> 00:02:29,680
this protocol achieves cubic

68
00:02:29,680 --> 00:02:31,040
communication

69
00:02:31,040 --> 00:02:34,000
in terms of the number of participants

70
00:02:34,000 --> 00:02:37,519
however cubic communication can be

71
00:02:37,519 --> 00:02:39,840
bad for many applications

72
00:02:39,840 --> 00:02:42,480
so we were this is the

73
00:02:42,480 --> 00:02:44,720
the motivation for our work where we

74
00:02:44,720 --> 00:02:47,519
wanted to improve the communication of

75
00:02:47,519 --> 00:02:49,440
such protocols

76
00:02:49,440 --> 00:02:51,599
basically what we wanted was to use

77
00:02:51,599 --> 00:02:54,080
gossiping techniques to improve the

78
00:02:54,080 --> 00:02:55,760
state of the art in terms of

79
00:02:55,760 --> 00:02:57,200
communication

80
00:02:57,200 --> 00:02:58,720
for protocols

81
00:02:58,720 --> 00:03:00,800
both in broadcast and parallel broadcast

82
00:03:00,800 --> 00:03:02,640
settings

83
00:03:02,640 --> 00:03:05,200
gossiping we can think of it via this

84
00:03:05,200 --> 00:03:06,640
example

85
00:03:06,640 --> 00:03:09,040
we have one party who wants to propagate

86
00:03:09,040 --> 00:03:10,800
the message to all other parties in the

87
00:03:10,800 --> 00:03:12,000
protocol

88
00:03:12,000 --> 00:03:14,400
however some many of the other parties

89
00:03:14,400 --> 00:03:17,120
may be corrupt

90
00:03:17,120 --> 00:03:20,080
this party could initially send the

91
00:03:20,080 --> 00:03:21,760
message to all other parties in the

92
00:03:21,760 --> 00:03:22,879
protocol

93
00:03:22,879 --> 00:03:25,599
this would incur a communication

94
00:03:25,599 --> 00:03:28,319
linear in the number of parties

95
00:03:28,319 --> 00:03:30,080
and this could happen per round of the

96
00:03:30,080 --> 00:03:32,400
protocol for example incurring increased

97
00:03:32,400 --> 00:03:34,080
communication

98
00:03:34,080 --> 00:03:35,280
however

99
00:03:35,280 --> 00:03:36,799
she could instead

100
00:03:36,799 --> 00:03:39,440
choose a small number of participants

101
00:03:39,440 --> 00:03:41,519
send the message to them

102
00:03:41,519 --> 00:03:43,599
in turn they could send the message to

103
00:03:43,599 --> 00:03:45,360
multiple other parties

104
00:03:45,360 --> 00:03:47,599
and so on and so forth until a few

105
00:03:47,599 --> 00:03:49,519
rounds later every party receives the

106
00:03:49,519 --> 00:03:50,480
message

107
00:03:50,480 --> 00:03:52,799
this is gossiping

108
00:03:52,799 --> 00:03:56,959
what we saw is that we can use gossiping

109
00:03:56,959 --> 00:03:59,519
to improve the dollar strong protocol by

110
00:03:59,519 --> 00:04:01,760
a factor of n in terms of communication

111
00:04:01,760 --> 00:04:03,439
complexity

112
00:04:03,439 --> 00:04:05,360
however

113
00:04:05,360 --> 00:04:08,799
our idea doesn't fare well

114
00:04:08,799 --> 00:04:11,280
in terms of adaptive adversaries and is

115
00:04:11,280 --> 00:04:14,560
only secure against static adversaries

116
00:04:14,560 --> 00:04:15,519
this

117
00:04:15,519 --> 00:04:16,720
tradeoff

118
00:04:16,720 --> 00:04:19,440
as well as another observation

119
00:04:19,440 --> 00:04:21,440
are the motivation for the next

120
00:04:21,440 --> 00:04:24,160
improvements that we make

121
00:04:24,160 --> 00:04:26,840
this additional observation is

122
00:04:26,840 --> 00:04:29,199
that uh in many

123
00:04:29,199 --> 00:04:32,080
npc settings instead of single sender

124
00:04:32,080 --> 00:04:34,240
broadcast what we actually want is

125
00:04:34,240 --> 00:04:36,479
parallel broadcast as we explained later

126
00:04:36,479 --> 00:04:38,800
earlier uh where every party wants to

127
00:04:38,800 --> 00:04:41,040
send their own messages

128
00:04:41,040 --> 00:04:45,120
and what we do in our next results is

129
00:04:45,120 --> 00:04:47,360
that we show how to

130
00:04:47,360 --> 00:04:49,199
in the synchronous parallel broadcast

131
00:04:49,199 --> 00:04:51,600
setting against dishonest

132
00:04:51,600 --> 00:04:53,120
adversaries

133
00:04:53,120 --> 00:04:56,639
and against adaptive adversaries sorry

134
00:04:56,639 --> 00:04:58,400
dishonest majority

135
00:04:58,400 --> 00:05:00,479
how to achieve protocols

136
00:05:00,479 --> 00:05:03,199
with improved communication in terms of

137
00:05:03,199 --> 00:05:05,759
the state of the art both with and

138
00:05:05,759 --> 00:05:08,080
without trusted setup

139
00:05:08,080 --> 00:05:10,479
we do so again by using gossiping

140
00:05:10,479 --> 00:05:12,080
techniques

141
00:05:12,080 --> 00:05:14,479
in a secure way and

142
00:05:14,479 --> 00:05:15,840
via this path

143
00:05:15,840 --> 00:05:19,120
we analyze a new method of communication

144
00:05:19,120 --> 00:05:21,280
of propagation of messages

145
00:05:21,280 --> 00:05:22,840
which we call

146
00:05:22,840 --> 00:05:25,680
converge if you enjoyed this teaser

147
00:05:25,680 --> 00:05:27,520
you can watch our talk

148
00:05:27,520 --> 00:05:29,360
in the upcoming crypto

149
00:05:29,360 --> 00:05:31,600
or you can read our paper

150
00:05:31,600 --> 00:05:33,520
on eprint

151
00:05:33,520 --> 00:05:37,080
have a great day

