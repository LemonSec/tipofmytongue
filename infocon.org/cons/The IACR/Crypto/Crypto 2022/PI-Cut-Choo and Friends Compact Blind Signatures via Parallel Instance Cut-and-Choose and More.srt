1
00:00:00,799 --> 00:00:03,280
hey i'm benedict and this is the short

2
00:00:03,280 --> 00:00:05,680
video about the paper pikachu and

3
00:00:05,680 --> 00:00:08,160
friends which is joint work with champ

4
00:00:08,160 --> 00:00:10,880
anna lucian and julian

5
00:00:10,880 --> 00:00:13,280
and this is about blind signatures so

6
00:00:13,280 --> 00:00:14,960
let me tell you what a blind signature

7
00:00:14,960 --> 00:00:17,279
scheme is in blind signature we have a

8
00:00:17,279 --> 00:00:18,720
signer

9
00:00:18,720 --> 00:00:20,160
and a user

10
00:00:20,160 --> 00:00:22,080
now the signer holds a public key secret

11
00:00:22,080 --> 00:00:23,439
key pair

12
00:00:23,439 --> 00:00:26,160
and the user holds only the public key

13
00:00:26,160 --> 00:00:28,640
but most importantly the message

14
00:00:28,640 --> 00:00:30,720
now this message should be signed to do

15
00:00:30,720 --> 00:00:33,360
that they interact in some interactive

16
00:00:33,360 --> 00:00:35,040
protocol

17
00:00:35,040 --> 00:00:38,640
and the user gets a signature in the end

18
00:00:38,640 --> 00:00:40,239
now this signature can of course be

19
00:00:40,239 --> 00:00:43,280
verified as a standard signature

20
00:00:43,280 --> 00:00:46,480
using the public key and the message

21
00:00:46,480 --> 00:00:49,120
in terms of security we want to have two

22
00:00:49,120 --> 00:00:52,800
properties the first one is blindness

23
00:00:52,800 --> 00:00:54,480
which says that the signer does not

24
00:00:54,480 --> 00:00:56,640
learn what he is signing so he cannot

25
00:00:56,640 --> 00:00:58,640
link the interaction to message

26
00:00:58,640 --> 00:01:00,800
signature pairs

27
00:01:00,800 --> 00:01:03,039
and the second property

28
00:01:03,039 --> 00:01:05,280
says that we actually need the signer to

29
00:01:05,280 --> 00:01:07,680
generate the blind signature so we

30
00:01:07,680 --> 00:01:09,760
cannot generate the blind signature

31
00:01:09,760 --> 00:01:12,000
without interacting

32
00:01:12,000 --> 00:01:14,080
with the signer

33
00:01:14,080 --> 00:01:16,400
okay so this is a very useful primitive

34
00:01:16,400 --> 00:01:18,640
it has a lot of applications in

35
00:01:18,640 --> 00:01:20,799
electronic payment systems for example

36
00:01:20,799 --> 00:01:22,720
or in boating

37
00:01:22,720 --> 00:01:23,350
and

38
00:01:23,350 --> 00:01:24,880
[Music]

39
00:01:24,880 --> 00:01:27,439
the problem is that the state of the art

40
00:01:27,439 --> 00:01:30,400
in terms of constructions is not very

41
00:01:30,400 --> 00:01:31,680
satisfying

42
00:01:31,680 --> 00:01:33,600
and this is because although we have

43
00:01:33,600 --> 00:01:34,960
efficient

44
00:01:34,960 --> 00:01:36,640
constructions

45
00:01:36,640 --> 00:01:38,250
these either rely on

46
00:01:38,250 --> 00:01:39,520
[Music]

47
00:01:39,520 --> 00:01:42,159
non-standard and strong assumptions

48
00:01:42,159 --> 00:01:45,520
or they only support a small number of

49
00:01:45,520 --> 00:01:48,720
signatures while staying secure

50
00:01:48,720 --> 00:01:51,600
typically a logarithmically

51
00:01:51,600 --> 00:01:54,240
logarithmic number of signatures now our

52
00:01:54,240 --> 00:01:57,280
goal in this work is to close this gap

53
00:01:57,280 --> 00:02:00,079
and find a scheme that is efficient has

54
00:02:00,079 --> 00:02:02,240
full security and only makes use of

55
00:02:02,240 --> 00:02:06,320
conservative well-known assumptions

56
00:02:06,320 --> 00:02:07,200
okay

57
00:02:07,200 --> 00:02:10,399
so to summarize our first result which

58
00:02:10,399 --> 00:02:11,920
is a generic result we need to

59
00:02:11,920 --> 00:02:14,560
understand the boosting transform from

60
00:02:14,560 --> 00:02:16,879
last year's asia crypt by cuts loss and

61
00:02:16,879 --> 00:02:18,480
rosenberg

62
00:02:18,480 --> 00:02:20,400
this transform takes a logarithmically

63
00:02:20,400 --> 00:02:22,720
secure so-called linear blind signature

64
00:02:22,720 --> 00:02:24,319
scheme

65
00:02:24,319 --> 00:02:26,560
apply some one out of hand cut and

66
00:02:26,560 --> 00:02:29,200
choose and we obtain a fully secure

67
00:02:29,200 --> 00:02:31,120
blind signature scheme

68
00:02:31,120 --> 00:02:34,160
this secure blind signature scheme has

69
00:02:34,160 --> 00:02:36,800
still efficient signature sizes

70
00:02:36,800 --> 00:02:39,280
but the communication is not good and

71
00:02:39,280 --> 00:02:41,519
this is because this parameter n of the

72
00:02:41,519 --> 00:02:43,440
cut and choose grows in every

73
00:02:43,440 --> 00:02:47,280
interaction and our communication

74
00:02:47,280 --> 00:02:50,319
grows linear with this parameter now our

75
00:02:50,319 --> 00:02:52,400
first result is a compact version of

76
00:02:52,400 --> 00:02:54,800
this boosting transform

77
00:02:54,800 --> 00:02:57,599
which is basically doing the same but in

78
00:02:57,599 --> 00:02:59,840
a compact way such that we obtain a

79
00:02:59,840 --> 00:03:02,239
communication which is logarithmic in

80
00:03:02,239 --> 00:03:04,800
this parameter n

81
00:03:04,800 --> 00:03:07,200
okay so you may think that we solved the

82
00:03:07,200 --> 00:03:08,800
problem right

83
00:03:08,800 --> 00:03:09,519
but

84
00:03:09,519 --> 00:03:11,519
this is not the case because if we look

85
00:03:11,519 --> 00:03:14,159
at instantiations of this then they will

86
00:03:14,159 --> 00:03:16,879
be rather inefficient due to security

87
00:03:16,879 --> 00:03:19,360
loss and other problems

88
00:03:19,360 --> 00:03:21,760
so what we do is we construct two

89
00:03:21,760 --> 00:03:24,480
concrete schemes in the second part of

90
00:03:24,480 --> 00:03:25,920
our work

91
00:03:25,920 --> 00:03:27,920
the first one is based on the rsa

92
00:03:27,920 --> 00:03:30,840
assumption and we instantiate this this

93
00:03:30,840 --> 00:03:33,280
framework with some specific

94
00:03:33,280 --> 00:03:36,080
optimizations for rsa for example using

95
00:03:36,080 --> 00:03:38,319
traptors to further improve the

96
00:03:38,319 --> 00:03:40,560
communication complexity

97
00:03:40,560 --> 00:03:42,560
and then we have a second construction

98
00:03:42,560 --> 00:03:44,319
where we start with a key only secure

99
00:03:44,319 --> 00:03:46,560
blind signature scheme pls blind

100
00:03:46,560 --> 00:03:48,480
signatures

101
00:03:48,480 --> 00:03:50,799
and transform it into a fully secured

102
00:03:50,799 --> 00:03:53,120
signature scheme with a variant of this

103
00:03:53,120 --> 00:03:55,920
boosting transform that now also works

104
00:03:55,920 --> 00:03:57,760
for key only secure schemes and we call

105
00:03:57,760 --> 00:04:01,760
this parallel instance cut and choose

106
00:04:01,760 --> 00:04:02,560
and

107
00:04:02,560 --> 00:04:04,959
we further optimize this using cdh

108
00:04:04,959 --> 00:04:06,959
specific optimization such as

109
00:04:06,959 --> 00:04:09,280
aggregation

110
00:04:09,280 --> 00:04:11,599
now in the end we also compute some

111
00:04:11,599 --> 00:04:13,439
parameter estimations taking the

112
00:04:13,439 --> 00:04:15,519
security laws into account and we see

113
00:04:15,519 --> 00:04:18,880
that the rsa-based scheme is balanced

114
00:04:18,880 --> 00:04:20,798
while the cdh-based scheme has very

115
00:04:20,798 --> 00:04:23,040
short signatures

116
00:04:23,040 --> 00:04:25,680
so if you are more interested in

117
00:04:25,680 --> 00:04:27,360
our techniques

118
00:04:27,360 --> 00:04:30,080
and our results feel free to look into

119
00:04:30,080 --> 00:04:31,759
our paper at eprint

120
00:04:31,759 --> 00:04:35,120
or to attend our talk at crypto

121
00:04:35,120 --> 00:04:38,000
thank you

