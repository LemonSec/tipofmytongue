1
00:00:02,560 --> 00:00:04,400
welcome to the talk on multi-input

2
00:00:04,400 --> 00:00:06,319
attribute based encryption and predicate

3
00:00:06,319 --> 00:00:08,639
encryption i am anshu yadav and this is

4
00:00:08,639 --> 00:00:10,800
a joint work with shweta and chhota

5
00:00:10,800 --> 00:00:12,240
yamada

6
00:00:12,240 --> 00:00:14,080
so attribute-based encryption is a

7
00:00:14,080 --> 00:00:16,720
primitive that spino provides fine grid

8
00:00:16,720 --> 00:00:19,600
access control or encrypted data where

9
00:00:19,600 --> 00:00:21,359
data is encrypted with respect to an

10
00:00:21,359 --> 00:00:23,279
attribute x and the keys are generated

11
00:00:23,279 --> 00:00:25,920
with respect to policy f so that the

12
00:00:25,920 --> 00:00:28,320
decryption is possible if and only if f

13
00:00:28,320 --> 00:00:30,800
x is equals to one and in a more general

14
00:00:30,800 --> 00:00:32,558
notion of predicate encryption which

15
00:00:32,558 --> 00:00:34,320
provides a stronger security the

16
00:00:34,320 --> 00:00:36,880
ciphertext hides the attributes as well

17
00:00:36,880 --> 00:00:39,120
as long as the adversary does not issue

18
00:00:39,120 --> 00:00:40,960
any decrypting key queries in the

19
00:00:40,960 --> 00:00:43,840
security so let us begin with the

20
00:00:43,840 --> 00:00:46,719
motivation behind the book so the uh

21
00:00:46,719 --> 00:00:49,039
starting motivation comes from the fact

22
00:00:49,039 --> 00:00:50,399
that uh

23
00:00:50,399 --> 00:00:52,640
thinking of a data to be associated with

24
00:00:52,640 --> 00:00:56,399
a single cycle text may not suffice um

25
00:00:56,399 --> 00:00:59,199
for many uh modern world applications

26
00:00:59,199 --> 00:01:01,039
where the data related to a single

27
00:01:01,039 --> 00:01:03,120
entity can in fact be distributed across

28
00:01:03,120 --> 00:01:05,519
different locations so for example

29
00:01:05,519 --> 00:01:07,600
consider

30
00:01:07,600 --> 00:01:10,720
the following scenario where there is a

31
00:01:10,720 --> 00:01:12,960
medical researcher who wants to study

32
00:01:12,960 --> 00:01:15,200
efficacy of certain medicine

33
00:01:15,200 --> 00:01:18,400
in patients let's say about 65 years of

34
00:01:18,400 --> 00:01:19,600
age with

35
00:01:19,600 --> 00:01:21,680
both covariate asthma in such a

36
00:01:21,680 --> 00:01:24,000
situation we would like to use predicate

37
00:01:24,000 --> 00:01:26,640
encryption to provide restricted

38
00:01:26,640 --> 00:01:28,960
access to records of only those patients

39
00:01:28,960 --> 00:01:31,600
who are above 65 years of age and

40
00:01:31,600 --> 00:01:34,400
have covariant asthma however note that

41
00:01:34,400 --> 00:01:37,680
in the real world scenario

42
00:01:37,680 --> 00:01:39,439
records of any patient may be

43
00:01:39,439 --> 00:01:41,840
distributed across different departments

44
00:01:41,840 --> 00:01:45,119
of the hospital or across different

45
00:01:45,119 --> 00:01:46,640
centers

46
00:01:46,640 --> 00:01:49,200
for example cobit center may be located

47
00:01:49,200 --> 00:01:50,399
in a different

48
00:01:50,399 --> 00:01:53,360
part of the city i hope they would still

49
00:01:53,360 --> 00:01:55,360
want to be able to use predicate

50
00:01:55,360 --> 00:01:57,759
encryption to provide controlled access

51
00:01:57,759 --> 00:02:00,240
to the data so basically what we want is

52
00:02:00,240 --> 00:02:02,640
that each department should be able to

53
00:02:02,640 --> 00:02:05,840
generate encrypt ciphertext locally and

54
00:02:05,840 --> 00:02:07,119
then the

55
00:02:07,119 --> 00:02:09,598
the researcher should be able to use her

56
00:02:09,598 --> 00:02:11,360
key on the combination of these

57
00:02:11,360 --> 00:02:14,000
independently generated ciphertexts to

58
00:02:14,000 --> 00:02:15,440
to recover the

59
00:02:15,440 --> 00:02:18,080
underlying data and in general we would

60
00:02:18,080 --> 00:02:20,959
like to think of

61
00:02:20,959 --> 00:02:22,720
a b or p e

62
00:02:22,720 --> 00:02:25,760
in any such scenario where the data is

63
00:02:25,760 --> 00:02:28,239
generated at different locations but is

64
00:02:28,239 --> 00:02:30,400
it still correlated so that

65
00:02:30,400 --> 00:02:33,360
uh it it forms a single logical group

66
00:02:33,360 --> 00:02:35,200
it's just that the different components

67
00:02:35,200 --> 00:02:38,080
are generated in a distributed fashion

68
00:02:38,080 --> 00:02:39,920
so let us look at the related work in

69
00:02:39,920 --> 00:02:41,519
the domain in fact

70
00:02:41,519 --> 00:02:44,959
even though this primitive being

71
00:02:44,959 --> 00:02:47,680
quite useful it is largely unexplored

72
00:02:47,680 --> 00:02:50,000
the notion of miab was introduced by

73
00:02:50,000 --> 00:02:52,400
breakers key adele in the context of

74
00:02:52,400 --> 00:02:54,319
constructing witness encryption however

75
00:02:54,319 --> 00:02:55,920
they do not provide any concrete

76
00:02:55,920 --> 00:02:58,480
construction and in the case of mip

77
00:02:58,480 --> 00:03:00,879
there is no study at all

78
00:03:00,879 --> 00:03:04,080
so let us look at the main difficulty in

79
00:03:04,080 --> 00:03:06,239
in constructing mi ap so the main

80
00:03:06,239 --> 00:03:08,720
difficulty comes

81
00:03:08,720 --> 00:03:10,800
from the need to satisfy two seemingly

82
00:03:10,800 --> 00:03:12,640
contradictory requirements at the same

83
00:03:12,640 --> 00:03:15,599
time so on the one hand we want to be

84
00:03:15,599 --> 00:03:17,680
able to generate different components of

85
00:03:17,680 --> 00:03:20,159
the ciphertext independently and on the

86
00:03:20,159 --> 00:03:22,879
other hand we want to be able to combine

87
00:03:22,879 --> 00:03:24,959
these ciphertexts so as to perform

88
00:03:24,959 --> 00:03:26,159
decryption

89
00:03:26,159 --> 00:03:28,400
and if we look at the existing

90
00:03:28,400 --> 00:03:30,480
constructions for abe the second

91
00:03:30,480 --> 00:03:32,400
requirement

92
00:03:32,400 --> 00:03:35,280
needs that the randomness

93
00:03:35,280 --> 00:03:36,879
used in these

94
00:03:36,879 --> 00:03:39,519
ciphertext components is same and on the

95
00:03:39,519 --> 00:03:41,200
other hand the first requirements is

96
00:03:41,200 --> 00:03:43,920
that these randomness are generated

97
00:03:43,920 --> 00:03:46,400
independently and this contradictory

98
00:03:46,400 --> 00:03:48,159
requirement makes it difficult to

99
00:03:48,159 --> 00:03:50,640
construct m-i-a-b-e

100
00:03:50,640 --> 00:03:52,959
so here are the results that we get

101
00:03:52,959 --> 00:03:54,799
firstly we formalize the security

102
00:03:54,799 --> 00:03:58,319
definition for miab and mit and then in

103
00:03:58,319 --> 00:04:01,519
mi aba regime we get 2 a b

104
00:04:01,519 --> 00:04:03,040
for nc 1

105
00:04:03,040 --> 00:04:05,360
and heuristic constructions for 3 a b

106
00:04:05,360 --> 00:04:08,319
for n c 1 and 2 a b for p

107
00:04:08,319 --> 00:04:10,799
and the main insight in our result comes

108
00:04:10,799 --> 00:04:12,159
from

109
00:04:12,159 --> 00:04:15,599
the finding that there exists uh

110
00:04:15,599 --> 00:04:18,079
a surprising relation between

111
00:04:18,079 --> 00:04:21,600
techniques developed in context of

112
00:04:21,600 --> 00:04:24,880
a succinct cipher text policy abe to

113
00:04:24,880 --> 00:04:25,759
uh

114
00:04:25,759 --> 00:04:29,360
to a completely unrelated setting of

115
00:04:29,360 --> 00:04:31,840
two input to key policy a b

116
00:04:31,840 --> 00:04:34,080
and we exploit this relation to get the

117
00:04:34,080 --> 00:04:35,919
results that we have

118
00:04:35,919 --> 00:04:38,160
and then in the

119
00:04:38,160 --> 00:04:40,400
regime of mit we

120
00:04:40,400 --> 00:04:42,960
gave a generic compiler to lift any k

121
00:04:42,960 --> 00:04:46,080
input a b for a constant k to k p e and

122
00:04:46,080 --> 00:04:48,880
then using this compiler on the results

123
00:04:48,880 --> 00:04:51,919
that we have for m i a b e we get 2 p e

124
00:04:51,919 --> 00:04:53,919
for n c 1 and heuristic constructions

125
00:04:53,919 --> 00:04:57,440
for 3 p e for n7 and 2p e4

126
00:04:57,440 --> 00:05:00,680
thank you

