1
00:00:00,399 --> 00:00:03,120
hi i'm andre and this is a teaser talk

2
00:00:03,120 --> 00:00:04,960
for our work partial key exposure

3
00:00:04,960 --> 00:00:08,160
attacks on bike rainbow and andrew

4
00:00:08,160 --> 00:00:10,160
and uh it should motivate you to go to

5
00:00:10,160 --> 00:00:12,559
the talk at the main event and it is

6
00:00:12,559 --> 00:00:14,559
joint work with alexander mai javier

7
00:00:14,559 --> 00:00:16,720
bell and wei changwen

8
00:00:16,720 --> 00:00:18,960
so in this work we investigated the

9
00:00:18,960 --> 00:00:21,840
question if post quantum candidates are

10
00:00:21,840 --> 00:00:23,279
leakage resistant

11
00:00:23,279 --> 00:00:25,359
so what does this mean in an informal

12
00:00:25,359 --> 00:00:26,640
sense if

13
00:00:26,640 --> 00:00:29,359
you have an n bit key and l bit of this

14
00:00:29,359 --> 00:00:30,720
key get leaked

15
00:00:30,720 --> 00:00:31,519
then

16
00:00:31,519 --> 00:00:33,280
we say a system is

17
00:00:33,280 --> 00:00:34,719
leakage resistant

18
00:00:34,719 --> 00:00:37,280
if it offers a security of an n minus l

19
00:00:37,280 --> 00:00:38,960
bit key

20
00:00:38,960 --> 00:00:39,920
which is

21
00:00:39,920 --> 00:00:43,120
somehow the best one can hope for and we

22
00:00:43,120 --> 00:00:44,800
know from classical schemes like for

23
00:00:44,800 --> 00:00:47,440
example rsa that this is not the case so

24
00:00:47,440 --> 00:00:49,360
why do we ask this question for about

25
00:00:49,360 --> 00:00:51,120
post quantum candidates

26
00:00:51,120 --> 00:00:52,719
because the

27
00:00:52,719 --> 00:00:55,280
best known attacks are enumeration based

28
00:00:55,280 --> 00:00:56,960
meaning they

29
00:00:56,960 --> 00:00:59,039
enumerates the missing key bits

30
00:00:59,039 --> 00:01:01,120
and therefore strongly support this

31
00:01:01,120 --> 00:01:02,800
leakage resistance belief

32
00:01:02,800 --> 00:01:04,479
so they do not exploit any key

33
00:01:04,479 --> 00:01:07,040
redundancy key structure or public

34
00:01:07,040 --> 00:01:09,360
private key relations

35
00:01:09,360 --> 00:01:11,760
and in this work we give new attacks

36
00:01:11,760 --> 00:01:13,760
that actually heavily exploit those

37
00:01:13,760 --> 00:01:14,799
things

38
00:01:14,799 --> 00:01:16,000
and

39
00:01:16,000 --> 00:01:17,759
using our attacks we give new bounds on

40
00:01:17,759 --> 00:01:20,000
the required leakage for full key

41
00:01:20,000 --> 00:01:21,759
recovery

42
00:01:21,759 --> 00:01:23,759
so give me a let me give a brief

43
00:01:23,759 --> 00:01:28,000
explanation of the methodology we used

44
00:01:28,000 --> 00:01:30,880
so first we we model the leakage so from

45
00:01:30,880 --> 00:01:32,880
a theoretical point of view how does the

46
00:01:32,880 --> 00:01:34,799
leakage that we obtain via some

47
00:01:34,799 --> 00:01:37,360
arbitrary side channel look like so here

48
00:01:37,360 --> 00:01:39,200
we define

49
00:01:39,200 --> 00:01:41,840
two to three different models

50
00:01:41,840 --> 00:01:43,280
and just that you can relate to

51
00:01:43,280 --> 00:01:44,960
something let me let me introduce one of

52
00:01:44,960 --> 00:01:46,479
these models which we call the erasure

53
00:01:46,479 --> 00:01:47,439
model

54
00:01:47,439 --> 00:01:49,920
so we model the secret key always as a

55
00:01:49,920 --> 00:01:51,920
chunk of n bits

56
00:01:51,920 --> 00:01:54,000
and then you obtain in the eraser model

57
00:01:54,000 --> 00:01:56,560
you obtain an erased version of this key

58
00:01:56,560 --> 00:01:58,719
so some of the bits got erased here

59
00:01:58,719 --> 00:02:00,799
illustrated by the covered

60
00:02:00,799 --> 00:02:03,439
areas with question marks and you see

61
00:02:03,439 --> 00:02:05,680
the value of those bits is not known

62
00:02:05,680 --> 00:02:07,840
however the green parts are known and

63
00:02:07,840 --> 00:02:10,239
the positions also and it's guaranteed

64
00:02:10,239 --> 00:02:12,959
that those are correct

65
00:02:12,959 --> 00:02:15,920
and yeah then then given this erased key

66
00:02:15,920 --> 00:02:17,599
we asked

67
00:02:17,599 --> 00:02:19,920
two different research questions so the

68
00:02:19,920 --> 00:02:21,840
first one is about asymptotic leakage

69
00:02:21,840 --> 00:02:24,720
bonds it means basically we are asking

70
00:02:24,720 --> 00:02:25,840
how many

71
00:02:25,840 --> 00:02:27,680
erasures so how many erased bits how

72
00:02:27,680 --> 00:02:30,480
many question marks can we tolerate

73
00:02:30,480 --> 00:02:32,560
so that we can still recover all of them

74
00:02:32,560 --> 00:02:34,720
in polynomial time

75
00:02:34,720 --> 00:02:36,640
and here for example in the

76
00:02:36,640 --> 00:02:39,840
in the android case we find that up to

77
00:02:39,840 --> 00:02:42,480
a cube root of the length of this vector

78
00:02:42,480 --> 00:02:45,280
many erased bits can still be recovered

79
00:02:45,280 --> 00:02:47,599
in polynomial time

80
00:02:47,599 --> 00:02:49,360
and then we asked a more practical

81
00:02:49,360 --> 00:02:50,480
question

82
00:02:50,480 --> 00:02:53,200
a more practical question where we ask

83
00:02:53,200 --> 00:02:54,560
um to

84
00:02:54,560 --> 00:02:56,239
how big

85
00:02:56,239 --> 00:02:58,560
or how many erased bits can we tolerate

86
00:02:58,560 --> 00:03:01,599
if we want to recover the secret key

87
00:03:01,599 --> 00:03:03,840
in time less than some threshold this

88
00:03:03,840 --> 00:03:05,519
threshold might for example be two to

89
00:03:05,519 --> 00:03:07,840
the 60 bit operations

90
00:03:07,840 --> 00:03:10,239
and then we we find in the android case

91
00:03:10,239 --> 00:03:12,720
um and also in in other cases that we

92
00:03:12,720 --> 00:03:15,040
can tolerate way higher

93
00:03:15,040 --> 00:03:16,560
erasures

94
00:03:16,560 --> 00:03:18,400
and here for example in the entry case

95
00:03:18,400 --> 00:03:21,040
we find that 30 of eurasia's can still

96
00:03:21,040 --> 00:03:24,560
be recovered using less than 260

97
00:03:24,560 --> 00:03:26,560
operations

98
00:03:26,560 --> 00:03:29,200
overall we we find we we give such

99
00:03:29,200 --> 00:03:32,000
non-trivial polynomial time key recovery

100
00:03:32,000 --> 00:03:34,080
attacks for all considered schemes

101
00:03:34,080 --> 00:03:37,200
meaning rainbow bike and andrew

102
00:03:37,200 --> 00:03:39,840
and for all of them we find or we give

103
00:03:39,840 --> 00:03:42,480
even higher practical bounds that stay

104
00:03:42,480 --> 00:03:45,040
below some threshold where we consider

105
00:03:45,040 --> 00:03:47,680
different uh bit complexities

106
00:03:47,680 --> 00:03:50,159
and overall our results are comparable

107
00:03:50,159 --> 00:03:52,080
to non-post quantum systems like the

108
00:03:52,080 --> 00:03:54,560
results known for rsa

109
00:03:54,560 --> 00:03:56,879
so that we can safely conclude that post

110
00:03:56,879 --> 00:04:00,319
quantum candidates do not per se enjoy

111
00:04:00,319 --> 00:04:02,000
leakage resistance

112
00:04:02,000 --> 00:04:04,080
and if you are interested in how we

113
00:04:04,080 --> 00:04:07,200
obtain our results and in of course all

114
00:04:07,200 --> 00:04:09,920
our results on bike rainbow and andrew

115
00:04:09,920 --> 00:04:12,159
then please attend our main talk in the

116
00:04:12,159 --> 00:04:15,200
lotte lehman hall on the 17th of august

117
00:04:15,200 --> 00:04:17,440
in the session starting at 10 am thank

118
00:04:17,440 --> 00:04:20,680
you very much

