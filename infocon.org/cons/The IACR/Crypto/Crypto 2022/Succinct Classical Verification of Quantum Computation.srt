1
00:00:00,880 --> 00:00:02,960
this is a brief video abstract for the

2
00:00:02,960 --> 00:00:05,920
crypto 2022 paper succinct classical

3
00:00:05,920 --> 00:00:08,639
verification of quantum computation this

4
00:00:08,639 --> 00:00:10,639
is joint work with james bartusek yeah

5
00:00:10,639 --> 00:00:14,000
alkali fermi ma julia malavolta vinod

6
00:00:14,000 --> 00:00:17,680
kuntanathan thomas and lisa yang

7
00:00:17,680 --> 00:00:19,439
the setting for this work is that of

8
00:00:19,439 --> 00:00:22,320
verifiable computation in this setting

9
00:00:22,320 --> 00:00:24,720
we have some computation represented by

10
00:00:24,720 --> 00:00:27,199
deciding membership of a string x in

11
00:00:27,199 --> 00:00:28,880
some language l

12
00:00:28,880 --> 00:00:31,679
and this computation is delegated from

13
00:00:31,679 --> 00:00:34,079
some verifier to approver

14
00:00:34,079 --> 00:00:36,880
so the prover and verifier uh exchange

15
00:00:36,880 --> 00:00:39,280
messages in an interactive protocol and

16
00:00:39,280 --> 00:00:40,879
at the end of the protocol the verifier

17
00:00:40,879 --> 00:00:42,879
is supposed to decide whether or not x

18
00:00:42,879 --> 00:00:45,200
is in l and the goal for such a proof

19
00:00:45,200 --> 00:00:47,760
system is to have verification be

20
00:00:47,760 --> 00:00:50,160
simpler or easier in some sense than

21
00:00:50,160 --> 00:00:52,640
deciding whether or not x is an l on

22
00:00:52,640 --> 00:00:53,760
your own

23
00:00:53,760 --> 00:00:56,879
so in the classical setting we have such

24
00:00:56,879 --> 00:00:58,239
argument systems and they're called

25
00:00:58,239 --> 00:01:00,640
succinct arguments for np and what's

26
00:01:00,640 --> 00:01:03,440
known is that for any np language l say

27
00:01:03,440 --> 00:01:05,280
an end time t

28
00:01:05,280 --> 00:01:07,760
there is an interactive argument system

29
00:01:07,760 --> 00:01:09,920
for deciding l where the communication

30
00:01:09,920 --> 00:01:12,640
in the protocol is poly log t so very

31
00:01:12,640 --> 00:01:15,280
short and the verification time is poly

32
00:01:15,280 --> 00:01:17,600
log t and some fixed polynomial in the

33
00:01:17,600 --> 00:01:19,840
input length

34
00:01:19,840 --> 00:01:22,960
in our setting we are studying classical

35
00:01:22,960 --> 00:01:25,680
verification of quantum computation and

36
00:01:25,680 --> 00:01:28,320
so the primary goal in this setting is

37
00:01:28,320 --> 00:01:29,759
to make sure that even though the

38
00:01:29,759 --> 00:01:32,159
computation itself requires running a

39
00:01:32,159 --> 00:01:33,680
quantum computer

40
00:01:33,680 --> 00:01:36,159
the verifier in such an argument system

41
00:01:36,159 --> 00:01:38,560
should still be classical so the

42
00:01:38,560 --> 00:01:40,400
communication should be classical and

43
00:01:40,400 --> 00:01:42,079
the verification algorithm should be

44
00:01:42,079 --> 00:01:43,360
classical

45
00:01:43,360 --> 00:01:45,680
so uh with this

46
00:01:45,680 --> 00:01:48,399
consideration alone uh the breakthrough

47
00:01:48,399 --> 00:01:50,880
work of mahadev in 2018 showed that

48
00:01:50,880 --> 00:01:52,479
assuming the hardness of the learning

49
00:01:52,479 --> 00:01:55,119
with errors problem there are

50
00:01:55,119 --> 00:01:57,680
interactive argument systems for every

51
00:01:57,680 --> 00:01:59,840
efficient quantum computation

52
00:01:59,840 --> 00:02:02,799
where the verifier is classical

53
00:02:02,799 --> 00:02:04,320
so

54
00:02:04,320 --> 00:02:06,079
in this work we managed to construct

55
00:02:06,079 --> 00:02:08,479
verifiable computation with both of the

56
00:02:08,479 --> 00:02:10,239
efficiency guarantees that we just

57
00:02:10,239 --> 00:02:12,640
described so it is both the case that

58
00:02:12,640 --> 00:02:14,879
the verifier is classical even though it

59
00:02:14,879 --> 00:02:17,360
is verifying a quantum computation and

60
00:02:17,360 --> 00:02:19,920
moreover the communication in the in the

61
00:02:19,920 --> 00:02:22,239
protocol is short and the verification

62
00:02:22,239 --> 00:02:23,920
is extremely fast

63
00:02:23,920 --> 00:02:24,640
so

64
00:02:24,640 --> 00:02:26,560
our formal result is that assuming the

65
00:02:26,560 --> 00:02:28,959
hardness of lwe and additionally

66
00:02:28,959 --> 00:02:30,160
assuming the existence of

67
00:02:30,160 --> 00:02:32,480
indistinguishability obfuscation we

68
00:02:32,480 --> 00:02:35,519
construct succinct arguments for all bqp

69
00:02:35,519 --> 00:02:37,680
or even qma languages

70
00:02:37,680 --> 00:02:40,160
where the communication is poly log t

71
00:02:40,160 --> 00:02:43,040
where t is the qma verification time and

72
00:02:43,040 --> 00:02:45,040
the verification time of the protocol is

73
00:02:45,040 --> 00:02:47,440
poly log t and a fixed polynomial in the

74
00:02:47,440 --> 00:02:48,840
instance

75
00:02:48,840 --> 00:02:51,440
length here are a few highlights of what

76
00:02:51,440 --> 00:02:52,879
we do in this work

77
00:02:52,879 --> 00:02:54,400
the succinct argument system is

78
00:02:54,400 --> 00:02:56,480
constructed in two parts

79
00:02:56,480 --> 00:02:58,720
the main contribution of this paper is

80
00:02:58,720 --> 00:03:01,360
to build a protocol which has a laconic

81
00:03:01,360 --> 00:03:03,360
verifier meaning that the verifier to

82
00:03:03,360 --> 00:03:05,599
prover communication is short this

83
00:03:05,599 --> 00:03:08,800
protocol was built assuming i o and lwe

84
00:03:08,800 --> 00:03:11,440
the reason that i o is used is that i o

85
00:03:11,440 --> 00:03:13,440
allows us to build a tool that we call a

86
00:03:13,440 --> 00:03:16,080
succinct key sampler which gives us a

87
00:03:16,080 --> 00:03:18,720
way to have a compressed representation

88
00:03:18,720 --> 00:03:20,879
of a large number of essentially

89
00:03:20,879 --> 00:03:23,200
independent public keys that we define

90
00:03:23,200 --> 00:03:24,959
formally in the paper

91
00:03:24,959 --> 00:03:28,080
this i o based tool is then plugged into

92
00:03:28,080 --> 00:03:30,080
a generic template for building

93
00:03:30,080 --> 00:03:31,840
classically verifiable quantum

94
00:03:31,840 --> 00:03:33,200
computation

95
00:03:33,200 --> 00:03:35,840
and then we give a new security proof

96
00:03:35,840 --> 00:03:38,720
of this generic type of protocol that is

97
00:03:38,720 --> 00:03:41,519
modular and generalizable in particular

98
00:03:41,519 --> 00:03:43,840
it applies to the protocol

99
00:03:43,840 --> 00:03:46,080
with succinct public keys which is what

100
00:03:46,080 --> 00:03:48,720
we use in our main result

101
00:03:48,720 --> 00:03:49,519
then

102
00:03:49,519 --> 00:03:52,000
given this laconic verifier protocol we

103
00:03:52,000 --> 00:03:54,480
also write down a generic compiler that

104
00:03:54,480 --> 00:03:56,799
converts it into a fully succinct

105
00:03:56,799 --> 00:03:59,040
argument system and this uses as its

106
00:03:59,040 --> 00:04:01,760
main tool a post quantum succinct

107
00:04:01,760 --> 00:04:04,640
arguments for classical computation that

108
00:04:04,640 --> 00:04:06,640
is sufficiently composable

109
00:04:06,640 --> 00:04:09,200
and then finally we also write down some

110
00:04:09,200 --> 00:04:11,360
extensions of our results that allow us

111
00:04:11,360 --> 00:04:14,080
to achieve zero knowledge and also

112
00:04:14,080 --> 00:04:15,400
builds protocols that are

113
00:04:15,400 --> 00:04:18,560
non-interactive given a post-quantum

114
00:04:18,560 --> 00:04:20,560
random oracle

115
00:04:20,560 --> 00:04:22,479
this concludes our video abstract thanks

116
00:04:22,479 --> 00:04:25,359
for listening

