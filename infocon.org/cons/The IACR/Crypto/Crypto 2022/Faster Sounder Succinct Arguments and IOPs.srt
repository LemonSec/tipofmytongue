1
00:00:02,879 --> 00:00:05,120
hi my name is justin and i'll be talking

2
00:00:05,120 --> 00:00:07,440
about faster sounders succinct arguments

3
00:00:07,440 --> 00:00:09,679
and iops which is a joint work with ron

4
00:00:09,679 --> 00:00:11,440
rothbloom

5
00:00:11,440 --> 00:00:13,200
succinct arguments allow approver to

6
00:00:13,200 --> 00:00:14,960
convince a verifier that a computation

7
00:00:14,960 --> 00:00:17,039
was performed correctly using a short

8
00:00:17,039 --> 00:00:18,880
proof

9
00:00:18,880 --> 00:00:20,960
a major bottleneck in the adoption of

10
00:00:20,960 --> 00:00:22,640
succinct arguments which has been the

11
00:00:22,640 --> 00:00:24,880
focus of a large body of work is in

12
00:00:24,880 --> 00:00:26,640
reducing the overhead incurred by the

13
00:00:26,640 --> 00:00:27,920
prover

14
00:00:27,920 --> 00:00:30,000
here by overhead i mean the cost of

15
00:00:30,000 --> 00:00:31,840
proving correctness divided by the cost

16
00:00:31,840 --> 00:00:34,640
of the original computation

17
00:00:34,640 --> 00:00:36,320
in this work for a large class of

18
00:00:36,320 --> 00:00:38,960
boolean circuits c we construct succinct

19
00:00:38,960 --> 00:00:41,040
arguments for the corresponding circuit

20
00:00:41,040 --> 00:00:42,879
satisfiability language

21
00:00:42,879 --> 00:00:44,480
where if

22
00:00:44,480 --> 00:00:46,320
we want to achieve soundness error 2 to

23
00:00:46,320 --> 00:00:48,239
the minus lambda our approver will have

24
00:00:48,239 --> 00:00:50,160
overhead that is poly logarithmic in

25
00:00:50,160 --> 00:00:51,840
lambda

26
00:00:51,840 --> 00:00:54,399
this result relies on the existence of

27
00:00:54,399 --> 00:00:56,239
sub exponentially secure

28
00:00:56,239 --> 00:00:58,000
collisions and hash functions that are

29
00:00:58,000 --> 00:01:01,199
computable by linear size circuits

30
00:01:01,199 --> 00:01:03,120
i won't fully specify the class of

31
00:01:03,120 --> 00:01:05,360
boolean circuits that we can handle but

32
00:01:05,360 --> 00:01:07,119
it includes uh

33
00:01:07,119 --> 00:01:09,360
many natural types of structured

34
00:01:09,360 --> 00:01:10,840
circuits

35
00:01:10,840 --> 00:01:14,320
including batch computation circuits or

36
00:01:14,320 --> 00:01:16,960
iterated hashing circuits

37
00:01:16,960 --> 00:01:19,439
we obtain our succinct arguments by

38
00:01:19,439 --> 00:01:21,520
constructing interactive oracle proofs

39
00:01:21,520 --> 00:01:22,799
or iops

40
00:01:22,799 --> 00:01:24,320
for the same class of circuits with

41
00:01:24,320 --> 00:01:26,560
analogous efficiency parameters that is

42
00:01:26,560 --> 00:01:27,840
to say

43
00:01:27,840 --> 00:01:30,640
uh the overhead of the prover in our iop

44
00:01:30,640 --> 00:01:31,920
is poly logarithmic in the security

45
00:01:31,920 --> 00:01:33,759
parameter

46
00:01:33,759 --> 00:01:36,400
uh prior to our work the best iops or

47
00:01:36,400 --> 00:01:37,920
arguments for boolean circuits either

48
00:01:37,920 --> 00:01:39,840
had a prover overhead that was poly

49
00:01:39,840 --> 00:01:41,600
logarithmic in the circuit size or

50
00:01:41,600 --> 00:01:43,920
polynomial in the security parameter

51
00:01:43,920 --> 00:01:46,000
if you'd like to hear more about this

52
00:01:46,000 --> 00:01:48,000
result please come to my talk or read

53
00:01:48,000 --> 00:01:51,880
our paper thank you

