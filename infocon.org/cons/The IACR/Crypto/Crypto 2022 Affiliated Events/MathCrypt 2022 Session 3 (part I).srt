1
00:00:00,979 --> 00:00:04,380
foreign okay so now it's uh one o'clock

2
00:00:04,380 --> 00:00:07,259
so we'll we'll uh resume

3
00:00:07,259 --> 00:00:08,820
um uh the afternoon session on math

4
00:00:08,820 --> 00:00:12,179
Crypt uh we have Travis Russell speaking

5
00:00:12,179 --> 00:00:14,639
on a public key crypto system based on

6
00:00:14,639 --> 00:00:17,340
stabilizer codes so Travis you can take

7
00:00:17,340 --> 00:00:19,859
it away whenever you're ready okay uh

8
00:00:19,859 --> 00:00:20,820
thank you

9
00:00:20,820 --> 00:00:22,859
um so thank you to the organizers for

10
00:00:22,859 --> 00:00:24,600
putting this together uh and for giving

11
00:00:24,600 --> 00:00:26,640
me a chance to speak uh sorry I couldn't

12
00:00:26,640 --> 00:00:30,060
be there in person uh uh and my

13
00:00:30,060 --> 00:00:32,340
apologies if you hear children screaming

14
00:00:32,340 --> 00:00:33,980
in the background or anything like that

15
00:00:33,980 --> 00:00:36,899
uh so this is Joint work with my

16
00:00:36,899 --> 00:00:41,420
colleague Ljubljana bashai at West Point

17
00:00:41,579 --> 00:00:43,739
um so as you can see this is about a

18
00:00:43,739 --> 00:00:46,200
crypto system that we've uh that we're

19
00:00:46,200 --> 00:00:47,579
proposing

20
00:00:47,579 --> 00:00:49,800
um and I'm going to start with just a

21
00:00:49,800 --> 00:00:51,719
very broad Strokes overview of what this

22
00:00:51,719 --> 00:00:54,300
is kind of the cartoon version uh then

23
00:00:54,300 --> 00:00:55,500
I'll go through some mathematical

24
00:00:55,500 --> 00:00:58,199
preliminaries and and then I'll give you

25
00:00:58,199 --> 00:01:01,620
a more uh a more careful uh description

26
00:01:01,620 --> 00:01:03,960
of the protocol and hopefully there's a

27
00:01:03,960 --> 00:01:05,519
little time I can say a few words about

28
00:01:05,519 --> 00:01:07,560
about the security of it

29
00:01:07,560 --> 00:01:09,180
so

30
00:01:09,180 --> 00:01:11,340
um our goal is to construct a classical

31
00:01:11,340 --> 00:01:14,580
public key crypto system which leverages

32
00:01:14,580 --> 00:01:16,320
Quantum technology so what I mean by

33
00:01:16,320 --> 00:01:17,759
that is

34
00:01:17,759 --> 00:01:19,920
um the goal of this crypto system is to

35
00:01:19,920 --> 00:01:22,920
transmit like bit strings from Alice to

36
00:01:22,920 --> 00:01:24,960
Bob so Alice has a bit string a string

37
00:01:24,960 --> 00:01:26,580
of zeros and ones she wants to send to

38
00:01:26,580 --> 00:01:29,340
Bob but we're going to send it over uh

39
00:01:29,340 --> 00:01:31,860
some kind of a Quantum infrastructure so

40
00:01:31,860 --> 00:01:34,140
we're going to take the bit string and

41
00:01:34,140 --> 00:01:36,600
use it to encode a Quantum state which

42
00:01:36,600 --> 00:01:39,000
is then transmitted to Bob Bob's going

43
00:01:39,000 --> 00:01:40,799
to perform a Quantum measurement to

44
00:01:40,799 --> 00:01:44,579
extract the the classical message

45
00:01:44,579 --> 00:01:46,380
um this is this is going to use

46
00:01:46,380 --> 00:01:49,079
um a public key which is just a binary

47
00:01:49,079 --> 00:01:50,820
Matrix

48
00:01:50,820 --> 00:01:52,680
um for encryption and that's going to

49
00:01:52,680 --> 00:01:55,759
allow the allow Alice the sender to

50
00:01:55,759 --> 00:01:58,860
build a Quantum circuit for for sending

51
00:01:58,860 --> 00:02:00,780
messages basically

52
00:02:00,780 --> 00:02:03,240
uh there's also a private key which Bob

53
00:02:03,240 --> 00:02:04,799
has and it's going to play a couple of

54
00:02:04,799 --> 00:02:07,920
roles uh the first rule that it plays is

55
00:02:07,920 --> 00:02:09,419
we're going to use the private key to

56
00:02:09,419 --> 00:02:11,879
initialize a Quantum state which we call

57
00:02:11,879 --> 00:02:13,739
the Tableau when I say Tableau I mean

58
00:02:13,739 --> 00:02:15,260
like a blank slate

59
00:02:15,260 --> 00:02:17,459
so this is a little different than most

60
00:02:17,459 --> 00:02:19,140
public key crypto systems and that

61
00:02:19,140 --> 00:02:21,540
there's going to be two transfers of

62
00:02:21,540 --> 00:02:23,640
information so there's sort of two

63
00:02:23,640 --> 00:02:25,620
points where you could potentially have

64
00:02:25,620 --> 00:02:28,980
uh information stolen so some issues to

65
00:02:28,980 --> 00:02:30,959
think about but we're going to use the

66
00:02:30,959 --> 00:02:32,700
private key to initialize a Quantum

67
00:02:32,700 --> 00:02:34,800
State and later we'll use it to decode

68
00:02:34,800 --> 00:02:37,500
things so we initialize this Quantum

69
00:02:37,500 --> 00:02:39,900
state which we call a tableau Bob sins

70
00:02:39,900 --> 00:02:42,120
the Tableau back to Alice

71
00:02:42,120 --> 00:02:44,640
Alice then encodes her message through

72
00:02:44,640 --> 00:02:45,959
the quantum circuit that she's

73
00:02:45,959 --> 00:02:48,959
constructed based on the public key

74
00:02:48,959 --> 00:02:51,019
and then she sends that encoded message

75
00:02:51,019 --> 00:02:54,420
back to Bob Bob performs a measurement

76
00:02:54,420 --> 00:02:56,819
based on his private key and that

77
00:02:56,819 --> 00:02:59,220
reveals the message that Alice was was

78
00:02:59,220 --> 00:03:01,080
trying to send

79
00:03:01,080 --> 00:03:02,519
um so that's very roughly what the

80
00:03:02,519 --> 00:03:03,959
protocol looks like and then I'll go

81
00:03:03,959 --> 00:03:06,720
into more details once I build up some

82
00:03:06,720 --> 00:03:09,239
of the mathematical preliminaries

83
00:03:09,239 --> 00:03:09,900
um

84
00:03:09,900 --> 00:03:12,060
it sort of heuristically like roughly

85
00:03:12,060 --> 00:03:14,159
why do we think this might be secure

86
00:03:14,159 --> 00:03:15,540
obviously there's some weird things with

87
00:03:15,540 --> 00:03:17,280
the two different transfers of

88
00:03:17,280 --> 00:03:19,260
information because we're sending

89
00:03:19,260 --> 00:03:22,140
Quantum States back and forth we have

90
00:03:22,140 --> 00:03:24,780
this no cloning theorem uh in Quantum

91
00:03:24,780 --> 00:03:26,280
information which says that you can't

92
00:03:26,280 --> 00:03:28,440
take and uh you can't take an arbitrary

93
00:03:28,440 --> 00:03:31,019
State and just make copies of it

94
00:03:31,019 --> 00:03:31,680
um

95
00:03:31,680 --> 00:03:33,840
so that gives you some physical

96
00:03:33,840 --> 00:03:35,940
justification for security of sending

97
00:03:35,940 --> 00:03:39,659
messages over Quantum uh infrastructure

98
00:03:39,659 --> 00:03:42,299
um also the private key that's in use

99
00:03:42,299 --> 00:03:45,480
here is not unique and so Bob has the

100
00:03:45,480 --> 00:03:47,760
ability to generate a whole bunch of

101
00:03:47,760 --> 00:03:49,500
random private keys and use whichever

102
00:03:49,500 --> 00:03:51,420
key he wants and and that's going to

103
00:03:51,420 --> 00:03:53,700
help with the security

104
00:03:53,700 --> 00:03:55,620
but we'll explain more about that in a

105
00:03:55,620 --> 00:03:57,840
moment everything that I'm going to

106
00:03:57,840 --> 00:03:59,760
describe is based on stabilizer codes

107
00:03:59,760 --> 00:04:01,799
which were developed in the 1990s by

108
00:04:01,799 --> 00:04:03,540
Daniel gotzman it's sort of the bread

109
00:04:03,540 --> 00:04:07,140
and butter of quantum error correction

110
00:04:07,140 --> 00:04:08,879
um and the most similar Quantum

111
00:04:08,879 --> 00:04:11,580
protocols that we're aware of uh are

112
00:04:11,580 --> 00:04:13,560
super dense coding and something called

113
00:04:13,560 --> 00:04:16,380
Quantum mechalese so super dense coding

114
00:04:16,380 --> 00:04:20,220
is is a a very uh well-known uh protocol

115
00:04:20,220 --> 00:04:22,139
for sending classical information over

116
00:04:22,139 --> 00:04:24,120
Quantum infrastructure

117
00:04:24,120 --> 00:04:25,740
um there's no public and private key in

118
00:04:25,740 --> 00:04:27,720
super dense coding you assume that you

119
00:04:27,720 --> 00:04:30,360
have shared entanglement between Alice

120
00:04:30,360 --> 00:04:33,000
and Bob in our protocol we don't assume

121
00:04:33,000 --> 00:04:34,740
any shared entanglement so in that sense

122
00:04:34,740 --> 00:04:37,919
it's maybe less resource intensive

123
00:04:37,919 --> 00:04:39,540
um and then Quantum mechalese is another

124
00:04:39,540 --> 00:04:41,580
crypto system

125
00:04:41,580 --> 00:04:43,979
um which is also based on stabilizer

126
00:04:43,979 --> 00:04:45,240
codes

127
00:04:45,240 --> 00:04:46,620
um but in that case you have it's it's

128
00:04:46,620 --> 00:04:48,780
more like just a generalization of Mecca

129
00:04:48,780 --> 00:04:51,180
lease so you have like a unique uh

130
00:04:51,180 --> 00:04:53,100
private key that

131
00:04:53,100 --> 00:04:54,780
um in theory could be

132
00:04:54,780 --> 00:04:56,520
um you know hacked by someone who has

133
00:04:56,520 --> 00:04:58,680
the public key with enough computational

134
00:04:58,680 --> 00:04:59,639
power

135
00:04:59,639 --> 00:05:03,120
so slightly different okay uh so that's

136
00:05:03,120 --> 00:05:05,699
some background in an overview

137
00:05:05,699 --> 00:05:06,360
um

138
00:05:06,360 --> 00:05:07,680
so here's some of the mathematical

139
00:05:07,680 --> 00:05:09,720
ingredients that we use

140
00:05:09,720 --> 00:05:11,699
um I know there's some other talks about

141
00:05:11,699 --> 00:05:14,220
Quantum things so I'll try to sort of

142
00:05:14,220 --> 00:05:16,860
make this quick um uh so some of the

143
00:05:16,860 --> 00:05:19,259
quantum Machinery that we'll need

144
00:05:19,259 --> 00:05:22,620
um so recall that if I have a complex in

145
00:05:22,620 --> 00:05:26,280
by n Matrix uh uh it's called a unitary

146
00:05:26,280 --> 00:05:30,600
if it's inverse is its conjugate

147
00:05:30,600 --> 00:05:32,720
transpose U dagger

148
00:05:32,720 --> 00:05:36,780
and a matrix p is called a projection if

149
00:05:36,780 --> 00:05:38,759
it's hermitian so it's equal to its

150
00:05:38,759 --> 00:05:40,320
conjugate transpose and it's also equal

151
00:05:40,320 --> 00:05:42,960
to its square and whenever you have a

152
00:05:42,960 --> 00:05:44,699
projection matrix it's literally just

153
00:05:44,699 --> 00:05:47,220
projecting vectors onto a Subspace of

154
00:05:47,220 --> 00:05:49,820
Hilbert space

155
00:05:49,979 --> 00:05:51,360
um okay so there's many ways you can

156
00:05:51,360 --> 00:05:54,120
formulate uh quantum mechanics uh but uh

157
00:05:54,120 --> 00:05:56,940
for the purposes of this talk a state is

158
00:05:56,940 --> 00:05:58,680
going to be a unit Vector in a Hilbert

159
00:05:58,680 --> 00:06:01,620
space uh and the Hilbert space will

160
00:06:01,620 --> 00:06:04,020
always be working in is the in qubit

161
00:06:04,020 --> 00:06:06,900
Filbert space so we have the info tensor

162
00:06:06,900 --> 00:06:09,120
product of the two-dimensional Hilbert

163
00:06:09,120 --> 00:06:11,220
space with itself

164
00:06:11,220 --> 00:06:12,180
um

165
00:06:12,180 --> 00:06:14,639
a Quantum operation uh this is how we're

166
00:06:14,639 --> 00:06:17,759
going to encode the messages later on so

167
00:06:17,759 --> 00:06:19,740
Quantum operation is a map that takes a

168
00:06:19,740 --> 00:06:22,259
state and Maps it to you a state fee it

169
00:06:22,259 --> 00:06:24,600
Maps it to you fee where U is some fixed

170
00:06:24,600 --> 00:06:26,880
unitary and I guess the important thing

171
00:06:26,880 --> 00:06:30,419
here is that it U does not change based

172
00:06:30,419 --> 00:06:31,860
on the state so whatever state you're

173
00:06:31,860 --> 00:06:34,319
given you just spit out you fee

174
00:06:34,319 --> 00:06:36,780
and then a Quantum measurement is how

175
00:06:36,780 --> 00:06:37,860
we're going to decode information

176
00:06:37,860 --> 00:06:40,220
roughly it's a way of

177
00:06:40,220 --> 00:06:42,660
extracting classical information from a

178
00:06:42,660 --> 00:06:44,220
Quantum state

179
00:06:44,220 --> 00:06:46,919
and mechanically the way it works is we

180
00:06:46,919 --> 00:06:49,699
have a set of projections P1 through PN

181
00:06:49,699 --> 00:06:53,699
which sum to the identity operator

182
00:06:53,699 --> 00:06:56,819
and a measurement is going to yield one

183
00:06:56,819 --> 00:06:59,639
of the values one through n so it yields

184
00:06:59,639 --> 00:07:01,800
some discrete value but it's

185
00:07:01,800 --> 00:07:03,900
non-deterministic so the probability of

186
00:07:03,900 --> 00:07:06,440
getting the value a from a measurement

187
00:07:06,440 --> 00:07:10,199
is you take the norm of the vector PA

188
00:07:10,199 --> 00:07:13,620
times Phi squared

189
00:07:13,620 --> 00:07:16,380
um so for every fee that you give me I

190
00:07:16,380 --> 00:07:17,759
get this sort of discrete probability

191
00:07:17,759 --> 00:07:20,099
distribution over the the numbers one

192
00:07:20,099 --> 00:07:22,680
through n and that distribution changes

193
00:07:22,680 --> 00:07:24,120
depending on the fee that we're starting

194
00:07:24,120 --> 00:07:25,680
with

195
00:07:25,680 --> 00:07:27,180
um okay so that's sort of the ground

196
00:07:27,180 --> 00:07:30,360
rules for for quantum mechanics here

197
00:07:30,360 --> 00:07:31,740
uh we're going to be working with

198
00:07:31,740 --> 00:07:34,020
stabilizer groups uh and stabilizer

199
00:07:34,020 --> 00:07:36,180
groups or subgroups of the poly group so

200
00:07:36,180 --> 00:07:37,500
I want to tell you what the policy group

201
00:07:37,500 --> 00:07:40,560
is so recall the poly matrices these are

202
00:07:40,560 --> 00:07:42,780
the two by two matrices x and z that you

203
00:07:42,780 --> 00:07:45,599
see uh right there

204
00:07:45,599 --> 00:07:46,440
um

205
00:07:46,440 --> 00:07:47,639
and then I'm going to take these

206
00:07:47,639 --> 00:07:49,199
matrices and build some bigger matrices

207
00:07:49,199 --> 00:07:51,240
because I actually want to act on an in

208
00:07:51,240 --> 00:07:53,699
qubit tilbert space

209
00:07:53,699 --> 00:07:57,240
um so given a vector a uh so this is a

210
00:07:57,240 --> 00:08:00,240
bit string basically a vector of zeros

211
00:08:00,240 --> 00:08:03,599
and ones of length n I'm going to build

212
00:08:03,599 --> 00:08:07,199
the Matrix X of a which is this info

213
00:08:07,199 --> 00:08:10,860
tensor product so when I write x to the

214
00:08:10,860 --> 00:08:12,780
0 that means the identity operator and

215
00:08:12,780 --> 00:08:14,840
when I write x to the one that means X

216
00:08:14,840 --> 00:08:17,099
so you have a tensor product of a bunch

217
00:08:17,099 --> 00:08:19,440
of matrices that are all either X or one

218
00:08:19,440 --> 00:08:21,900
depending on the value of your vector

219
00:08:21,900 --> 00:08:23,699
and similarly you can do the same thing

220
00:08:23,699 --> 00:08:25,500
with Z's

221
00:08:25,500 --> 00:08:29,160
so the nth poly Group which we'll write

222
00:08:29,160 --> 00:08:31,740
as p n that's the set of elements of

223
00:08:31,740 --> 00:08:34,279
this form you have X of a times Z of B

224
00:08:34,279 --> 00:08:37,320
times some scalar there's only four

225
00:08:37,320 --> 00:08:39,479
possible values for the scalar plus or

226
00:08:39,479 --> 00:08:41,940
minus one or plus or minus uh the

227
00:08:41,940 --> 00:08:43,260
imaginary number

228
00:08:43,260 --> 00:08:45,540
and a and b are bit strings

229
00:08:45,540 --> 00:08:47,100
so you can check that this form is a

230
00:08:47,100 --> 00:08:48,240
group

231
00:08:48,240 --> 00:08:48,959
um

232
00:08:48,959 --> 00:08:50,760
it's a non-communative group in general

233
00:08:50,760 --> 00:08:52,200
so

234
00:08:52,200 --> 00:08:54,839
um and you can figure out how to sort of

235
00:08:54,839 --> 00:08:56,940
do the group operations by just thinking

236
00:08:56,940 --> 00:09:01,200
about uh these X of vector and Z of

237
00:09:01,200 --> 00:09:04,019
vector things so if I just take x and z

238
00:09:04,019 --> 00:09:06,060
the two by two matrices the anti-commute

239
00:09:06,060 --> 00:09:09,180
so x times Z is minus Z times x and so

240
00:09:09,180 --> 00:09:11,279
if I were to multiply these big vectors

241
00:09:11,279 --> 00:09:12,839
together

242
00:09:12,839 --> 00:09:15,420
um it's it's almost just a vector

243
00:09:15,420 --> 00:09:19,740
addition in Z2 in right so X of a and X

244
00:09:19,740 --> 00:09:23,040
of C gives me X of a plus c z of B and Z

245
00:09:23,040 --> 00:09:25,620
of D gives me Z of B plus d but then you

246
00:09:25,620 --> 00:09:28,620
have this factor of negative one to uh

247
00:09:28,620 --> 00:09:31,620
this is the dot product of B and C so

248
00:09:31,620 --> 00:09:34,380
it's non-commutative in general

249
00:09:34,380 --> 00:09:36,959
um but you can figure out a lot of the

250
00:09:36,959 --> 00:09:39,060
necessary ingredients by just working

251
00:09:39,060 --> 00:09:41,760
over vectors uh which is what's going to

252
00:09:41,760 --> 00:09:45,860
help us do some of the analysis later

253
00:09:45,959 --> 00:09:47,880
okay so that's the polygroup

254
00:09:47,880 --> 00:09:49,980
um a stabilizer group is a commutative

255
00:09:49,980 --> 00:09:53,160
subgroup of the polygroup which does not

256
00:09:53,160 --> 00:09:55,500
contain the negative of the identity

257
00:09:55,500 --> 00:09:56,820
operator

258
00:09:56,820 --> 00:10:00,060
and these like I said were studied back

259
00:10:00,060 --> 00:10:02,700
in the 90s by Daniel gotzman I'll just

260
00:10:02,700 --> 00:10:04,500
recall some properties of stabilizer

261
00:10:04,500 --> 00:10:05,540
groups

262
00:10:05,540 --> 00:10:08,160
the size of a stay israelizer group is

263
00:10:08,160 --> 00:10:11,760
no more than two to the N so the size of

264
00:10:11,760 --> 00:10:13,440
the poly group is actually Four to the

265
00:10:13,440 --> 00:10:14,700
end so these are sort of like small

266
00:10:14,700 --> 00:10:17,279
subgroups of a polygroup

267
00:10:17,279 --> 00:10:20,339
um relatively small and um

268
00:10:20,339 --> 00:10:22,380
they can be generated by up to in

269
00:10:22,380 --> 00:10:25,260
independent generators

270
00:10:25,260 --> 00:10:27,540
um because the stabilizer group is

271
00:10:27,540 --> 00:10:29,820
commutative it turns out that all of its

272
00:10:29,820 --> 00:10:32,760
elements are hermitian so g equals g

273
00:10:32,760 --> 00:10:35,459
dagger which allows you to write them in

274
00:10:35,459 --> 00:10:38,160
this form and uh all I want to point out

275
00:10:38,160 --> 00:10:40,440
is that the imaginary number to the a

276
00:10:40,440 --> 00:10:43,860
dot b that depends on A and B so all the

277
00:10:43,860 --> 00:10:46,560
information about this element G comes

278
00:10:46,560 --> 00:10:49,680
from this Vector a the vector B and then

279
00:10:49,680 --> 00:10:52,019
a scalar representing whether you have a

280
00:10:52,019 --> 00:10:54,959
plus or minus one in front

281
00:10:54,959 --> 00:10:58,700
um so I can associate to g a vector

282
00:10:58,700 --> 00:11:02,240
which we write like this so R Prime of G

283
00:11:02,240 --> 00:11:05,040
is uh I'm thinking of this as a row

284
00:11:05,040 --> 00:11:07,500
Vector here so I have the row Vector a

285
00:11:07,500 --> 00:11:09,839
concatenated with row Vector B and then

286
00:11:09,839 --> 00:11:12,360
I'll stick the C at the end and that

287
00:11:12,360 --> 00:11:13,800
tells me everything I need to know about

288
00:11:13,800 --> 00:11:16,500
about G

289
00:11:16,500 --> 00:11:17,519
um

290
00:11:17,519 --> 00:11:20,399
the scalar term negative 1 to the C can

291
00:11:20,399 --> 00:11:21,779
be ignored in a lot of the calculations

292
00:11:21,779 --> 00:11:24,060
and so we also have an R of G without

293
00:11:24,060 --> 00:11:26,399
the prime and you just ignore the C in

294
00:11:26,399 --> 00:11:29,579
that case so it's just a b

295
00:11:29,579 --> 00:11:31,200
um so a lot of the calculations that you

296
00:11:31,200 --> 00:11:33,660
do with stabilizers you just work over

297
00:11:33,660 --> 00:11:35,779
this Vector space

298
00:11:35,779 --> 00:11:38,820
so one thing you often need to think

299
00:11:38,820 --> 00:11:41,459
about is whether elements commute a

300
00:11:41,459 --> 00:11:43,019
stabilizer group is a commutative group

301
00:11:43,019 --> 00:11:44,519
so all of its elements have to commute

302
00:11:44,519 --> 00:11:46,800
with each other and you can check that

303
00:11:46,800 --> 00:11:50,880
by looking at these um R vectors so if R

304
00:11:50,880 --> 00:11:55,740
of G is a b if an R of H is c d

305
00:11:55,740 --> 00:11:58,200
it turns out that G and H commute if and

306
00:11:58,200 --> 00:12:01,380
only if this product defined here is

307
00:12:01,380 --> 00:12:04,440
equal to 0 mod 2. so this is a sum of

308
00:12:04,440 --> 00:12:07,800
two dot products of binary vectors so

309
00:12:07,800 --> 00:12:09,600
um so we'll do that dot product mod two

310
00:12:09,600 --> 00:12:12,120
if it's zero then they commute

311
00:12:12,120 --> 00:12:13,920
um it's not the usual dot product right

312
00:12:13,920 --> 00:12:17,100
so we have a times D and then B times C

313
00:12:17,100 --> 00:12:20,300
it's like this Twisted product

314
00:12:21,300 --> 00:12:22,500
um okay so we can check if things

315
00:12:22,500 --> 00:12:25,500
commute and then we can do most of the

316
00:12:25,500 --> 00:12:28,440
group operations just as vectors in in

317
00:12:28,440 --> 00:12:32,339
this binary Vector space so

318
00:12:32,339 --> 00:12:35,399
um R of GH is just R of G plus r of H so

319
00:12:35,399 --> 00:12:37,680
I just add vectors together the identity

320
00:12:37,680 --> 00:12:40,740
corresponds to the zero Vector you can

321
00:12:40,740 --> 00:12:42,660
also check for Independence of the group

322
00:12:42,660 --> 00:12:45,660
elements so G1 through GK are

323
00:12:45,660 --> 00:12:48,180
independent in my group if and only if

324
00:12:48,180 --> 00:12:50,279
the corresponding R vectors form a

325
00:12:50,279 --> 00:12:53,399
linearly independent basis for the the

326
00:12:53,399 --> 00:12:57,500
image of the group under this this R map

327
00:12:57,540 --> 00:12:59,940
um so what all this does is it lets us

328
00:12:59,940 --> 00:13:02,399
get a correspondence between stabilizer

329
00:13:02,399 --> 00:13:04,620
groups and binary matrices which we're

330
00:13:04,620 --> 00:13:07,079
going to take advantage of later

331
00:13:07,079 --> 00:13:07,980
um

332
00:13:07,980 --> 00:13:09,779
so just to explain that correspondence

333
00:13:09,779 --> 00:13:13,620
suppose I have a matrix a with K rows

334
00:13:13,620 --> 00:13:16,079
and two in columns

335
00:13:16,079 --> 00:13:17,220
I can always write that as a

336
00:13:17,220 --> 00:13:19,320
concatenation of matrices so I just take

337
00:13:19,320 --> 00:13:21,660
B to be the first in columns and C to be

338
00:13:21,660 --> 00:13:23,399
the second in columns

339
00:13:23,399 --> 00:13:24,660
and then I'm going to Define an

340
00:13:24,660 --> 00:13:27,120
operation on on this set of matrices

341
00:13:27,120 --> 00:13:30,360
here I'll Define a star to just be take

342
00:13:30,360 --> 00:13:31,980
the last in columns and make that the

343
00:13:31,980 --> 00:13:33,959
first so basically shift everything to

344
00:13:33,959 --> 00:13:38,339
the right mod in in units

345
00:13:38,339 --> 00:13:38,880
um

346
00:13:38,880 --> 00:13:41,760
all right mod 2 in in units um

347
00:13:41,760 --> 00:13:45,060
okay so uh we have the star operation

348
00:13:45,060 --> 00:13:48,899
and and now I can identify

349
00:13:48,899 --> 00:13:50,880
um these stabilizer groups with certain

350
00:13:50,880 --> 00:13:54,000
sort of matrices with nice properties so

351
00:13:54,000 --> 00:13:56,760
given a matrix with K rows and two n

352
00:13:56,760 --> 00:13:58,380
columns

353
00:13:58,380 --> 00:14:01,199
um there exist uh independent elements

354
00:14:01,199 --> 00:14:04,500
of the polygroup G1 to GK generating a

355
00:14:04,500 --> 00:14:09,000
stabilizer group uh where the r of g i

356
00:14:09,000 --> 00:14:12,120
is the ith row of that Matrix if and

357
00:14:12,120 --> 00:14:14,339
only if this property holds a star a

358
00:14:14,339 --> 00:14:19,320
transpose is zero and the rank of a is K

359
00:14:19,320 --> 00:14:20,880
um and and the idea is you check that

360
00:14:20,880 --> 00:14:23,639
the entries of this Matrix uh are just

361
00:14:23,639 --> 00:14:24,959
these Star Products so you're just

362
00:14:24,959 --> 00:14:27,240
making sure that everything commutes and

363
00:14:27,240 --> 00:14:30,360
then the rank of K uh excuse me the rank

364
00:14:30,360 --> 00:14:33,240
of a equal to K means that uh the rows

365
00:14:33,240 --> 00:14:35,160
of a are linearly independent since it

366
00:14:35,160 --> 00:14:37,139
has K rows anyway

367
00:14:37,139 --> 00:14:39,060
um so um

368
00:14:39,060 --> 00:14:40,380
so that gives you the independence of

369
00:14:40,380 --> 00:14:42,060
the group elements

370
00:14:42,060 --> 00:14:43,500
um so all this is just so that we can

371
00:14:43,500 --> 00:14:45,779
sort of compute stabilizer groups uh

372
00:14:45,779 --> 00:14:48,620
which will be useful later

373
00:14:49,380 --> 00:14:52,740
um last slide of preliminaries um so

374
00:14:52,740 --> 00:14:54,839
um we'll also be working with stabilizer

375
00:14:54,839 --> 00:14:57,720
codes okay so given a stabilizer group

376
00:14:57,720 --> 00:15:01,019
in the poly group uh the corresponding

377
00:15:01,019 --> 00:15:03,420
stabilizer code is a set of all vectors

378
00:15:03,420 --> 00:15:07,019
H in our in qubit Hilbert space that are

379
00:15:07,019 --> 00:15:09,360
fixed by every element of the group so

380
00:15:09,360 --> 00:15:14,279
GH equals h for all g in the group

381
00:15:14,279 --> 00:15:14,940
um

382
00:15:14,940 --> 00:15:17,220
if the stabilizer group is size 2 to the

383
00:15:17,220 --> 00:15:21,540
k then the dimension of the stabilizer

384
00:15:21,540 --> 00:15:23,459
code is 2 to the N minus K so there's

385
00:15:23,459 --> 00:15:25,699
like an inverse proportionality

386
00:15:25,699 --> 00:15:28,560
in particular if your group is size 2 to

387
00:15:28,560 --> 00:15:29,940
the N you're going to have a

388
00:15:29,940 --> 00:15:31,920
one-dimensional stabilizer code and

389
00:15:31,920 --> 00:15:33,420
that's going to be the case for most of

390
00:15:33,420 --> 00:15:35,360
the the rest of the talk

391
00:15:35,360 --> 00:15:38,100
and if I have a unit Vector inside this

392
00:15:38,100 --> 00:15:39,420
stabilizer code we'll call that a

393
00:15:39,420 --> 00:15:42,139
stabilizer state

394
00:15:42,240 --> 00:15:45,019
um last uh little factoid that I'll use

395
00:15:45,019 --> 00:15:48,300
the projection onto a stabilizer code

396
00:15:48,300 --> 00:15:51,860
has this kind of convenient

397
00:15:51,860 --> 00:15:54,240
formulation you just add up all the

398
00:15:54,240 --> 00:15:56,279
group elements and and rescale by the

399
00:15:56,279 --> 00:15:58,800
size of the group so we can write down

400
00:15:58,800 --> 00:16:02,699
these projections and this is going to

401
00:16:02,699 --> 00:16:04,560
allow us to build the kinds of

402
00:16:04,560 --> 00:16:06,779
measurements we need for decoding later

403
00:16:06,779 --> 00:16:08,000
on

404
00:16:08,000 --> 00:16:10,019
okay so

405
00:16:10,019 --> 00:16:12,060
um that was all the mathematical

406
00:16:12,060 --> 00:16:14,339
ingredients that I'll need uh now I want

407
00:16:14,339 --> 00:16:17,639
to describe uh the protocol in a little

408
00:16:17,639 --> 00:16:20,279
more detail than I did earlier

409
00:16:20,279 --> 00:16:23,220
so my goal is to transmit a bit string

410
00:16:23,220 --> 00:16:27,779
Vic a from Alice to Bob

411
00:16:27,779 --> 00:16:29,459
and um

412
00:16:29,459 --> 00:16:33,779
before anything happens I need to come

413
00:16:33,779 --> 00:16:35,660
up with a public key and a private key

414
00:16:35,660 --> 00:16:38,220
so we're going to choose a stabilizer

415
00:16:38,220 --> 00:16:40,380
Group H in p n that's going to be the

416
00:16:40,380 --> 00:16:41,820
public key

417
00:16:41,820 --> 00:16:43,320
and we're going to publish it as a

418
00:16:43,320 --> 00:16:46,320
binary Matrix this is the Matrix whose

419
00:16:46,320 --> 00:16:49,740
rows correspond to generators of H

420
00:16:49,740 --> 00:16:51,540
and um

421
00:16:51,540 --> 00:16:53,459
it's not unique so you have to choose

422
00:16:53,459 --> 00:16:55,920
this is H1 through hn you have to pick

423
00:16:55,920 --> 00:16:57,779
the order of those things

424
00:16:57,779 --> 00:16:59,639
um but that's how we're going to publish

425
00:16:59,639 --> 00:17:03,420
uh the public key is a matrix

426
00:17:03,420 --> 00:17:04,559
and then we're going to randomly

427
00:17:04,559 --> 00:17:07,140
generate a secret key which is another

428
00:17:07,140 --> 00:17:10,020
stabilizer group in PN it can't be any

429
00:17:10,020 --> 00:17:12,419
stabilizer group so I'll explain what

430
00:17:12,419 --> 00:17:14,579
our possible choices are in a moment but

431
00:17:14,579 --> 00:17:16,319
we'll see that there's a lot of options

432
00:17:16,319 --> 00:17:18,900
for for G

433
00:17:18,900 --> 00:17:20,939
uh so now the protocol looks like this

434
00:17:20,939 --> 00:17:23,880
uh Bob will generate the Tableau which

435
00:17:23,880 --> 00:17:24,660
is

436
00:17:24,660 --> 00:17:27,119
um a unit Vector from the stabilizer

437
00:17:27,119 --> 00:17:30,780
code of g g is the private key

438
00:17:30,780 --> 00:17:34,200
Alice will receive the Tableau from Bob

439
00:17:34,200 --> 00:17:36,120
she'll perform a Quantum operation so

440
00:17:36,120 --> 00:17:39,720
she'll multiply Phi by a unitary based

441
00:17:39,720 --> 00:17:43,380
on the stabilizer code H and the vector

442
00:17:43,380 --> 00:17:46,020
a that she wants to transmit so I'll

443
00:17:46,020 --> 00:17:50,640
Define that unitary in just a moment

444
00:17:50,640 --> 00:17:53,160
uh and then Bob will receive the encoded

445
00:17:53,160 --> 00:17:55,559
State uh fees of a

446
00:17:55,559 --> 00:17:57,120
they'll then perform a measurement which

447
00:17:57,120 --> 00:17:59,100
I'll Define in just a moment based on

448
00:17:59,100 --> 00:18:01,260
his private key and that will reveal

449
00:18:01,260 --> 00:18:04,440
Alice's measure uh message uh with 100

450
00:18:04,440 --> 00:18:07,260
certainty

451
00:18:07,260 --> 00:18:08,520
um okay so that's what the protocol

452
00:18:08,520 --> 00:18:09,720
looks like

453
00:18:09,720 --> 00:18:12,059
so uh what I owe you is an explanation

454
00:18:12,059 --> 00:18:14,220
of what are the possible G's

455
00:18:14,220 --> 00:18:16,980
uh what are these unitaries and and what

456
00:18:16,980 --> 00:18:18,299
are these measurements so I want to go

457
00:18:18,299 --> 00:18:21,918
through that on the next couple slides

458
00:18:23,840 --> 00:18:26,880
uh okay so the possible G's the possible

459
00:18:26,880 --> 00:18:28,080
private keys we're going to call

460
00:18:28,080 --> 00:18:30,720
suitable private keys so so given a

461
00:18:30,720 --> 00:18:32,760
public key h

462
00:18:32,760 --> 00:18:35,220
a suitable private key is another

463
00:18:35,220 --> 00:18:37,500
stabilizer Group G with the following

464
00:18:37,500 --> 00:18:38,520
property

465
00:18:38,520 --> 00:18:42,900
for every non-trivial element of H

466
00:18:42,900 --> 00:18:47,400
there exists a g in a little G and Big G

467
00:18:47,400 --> 00:18:50,940
the anti-commutes with h so GH equals

468
00:18:50,940 --> 00:18:52,580
negative HG

469
00:18:52,580 --> 00:18:54,900
and you have to prove that given an H

470
00:18:54,900 --> 00:18:56,700
such a g exists I won't go through that

471
00:18:56,700 --> 00:18:58,860
but but that can be done fairly easily

472
00:18:58,860 --> 00:19:01,820
with linear algebra

473
00:19:02,220 --> 00:19:04,320
um okay so why is this going to be our

474
00:19:04,320 --> 00:19:06,059
suitable key

475
00:19:06,059 --> 00:19:06,660
um

476
00:19:06,660 --> 00:19:10,200
suppose I start with a stabilizer state

477
00:19:10,200 --> 00:19:12,240
so Phi is a unit vector

478
00:19:12,240 --> 00:19:15,120
in the stabilizer code for G so it's

479
00:19:15,120 --> 00:19:18,539
fixed by all the elements of G

480
00:19:18,539 --> 00:19:21,660
um let's take an element H from uh

481
00:19:21,660 --> 00:19:23,220
little H from Big H that's going to

482
00:19:23,220 --> 00:19:25,860
represent Alice's message

483
00:19:25,860 --> 00:19:28,140
that she wants to send

484
00:19:28,140 --> 00:19:30,419
and then I'm going to pick a G from G

485
00:19:30,419 --> 00:19:33,660
that anti-commutes with h

486
00:19:33,660 --> 00:19:35,340
and now consider this I'm going to look

487
00:19:35,340 --> 00:19:38,220
at ghv

488
00:19:38,220 --> 00:19:41,100
g h anti-commute that's the Assumption

489
00:19:41,100 --> 00:19:44,220
up here so I can switch the order that

490
00:19:44,220 --> 00:19:46,799
gives me negative HG

491
00:19:46,799 --> 00:19:49,700
but now Phi was in the stabilizer group

492
00:19:49,700 --> 00:19:52,620
stabilizer code rather for G so G times

493
00:19:52,620 --> 00:19:54,720
Phi is just equal to Phi so now I have

494
00:19:54,720 --> 00:19:56,580
negative H Phi

495
00:19:56,580 --> 00:19:58,919
uh so what that tells me is that g times

496
00:19:58,919 --> 00:20:02,100
HV is equal to negative HV

497
00:20:02,100 --> 00:20:04,620
so HV is an eigenvector for G with

498
00:20:04,620 --> 00:20:07,559
eigenvalue negative one

499
00:20:07,559 --> 00:20:09,240
Phi on the other hand is also an

500
00:20:09,240 --> 00:20:12,840
eigenvector for G it has eigenvalue one

501
00:20:12,840 --> 00:20:15,179
and G is her mission that was a property

502
00:20:15,179 --> 00:20:17,400
of State elements of stabilizer groups

503
00:20:17,400 --> 00:20:20,280
so that means that HV and Phi are

504
00:20:20,280 --> 00:20:22,020
orthogonal to each other

505
00:20:22,020 --> 00:20:23,640
and this is what's going to allow us to

506
00:20:23,640 --> 00:20:26,600
do decoding if H is

507
00:20:26,600 --> 00:20:30,059
not equal to H Prime for instance so if

508
00:20:30,059 --> 00:20:32,580
I have two possible messages that I want

509
00:20:32,580 --> 00:20:34,980
to distinguish H and H Prime

510
00:20:34,980 --> 00:20:38,159
the inner product of HV and H Prime Phi

511
00:20:38,159 --> 00:20:40,620
that's equal to the inner product of H

512
00:20:40,620 --> 00:20:45,179
Prime H with Phi H Prime h v with v so

513
00:20:45,179 --> 00:20:47,280
that's using the fact that H Prime is

514
00:20:47,280 --> 00:20:49,020
remission I can move it over

515
00:20:49,020 --> 00:20:52,860
and now that's uh zero uh so H Prime H

516
00:20:52,860 --> 00:20:55,500
is non-trivial uh and so these are

517
00:20:55,500 --> 00:20:57,659
orthogonal to each other

518
00:20:57,659 --> 00:21:01,080
so you can distinguish different H's

519
00:21:01,080 --> 00:21:02,880
um and that's going to allow us to do

520
00:21:02,880 --> 00:21:06,240
encoding and and decoding so here's how

521
00:21:06,240 --> 00:21:07,620
encoding works

522
00:21:07,620 --> 00:21:10,860
I have my VEC a uh that I want to

523
00:21:10,860 --> 00:21:11,940
transmit

524
00:21:11,940 --> 00:21:15,120
and I have H which is given to me as uh

525
00:21:15,120 --> 00:21:17,520
generated by these specific generators

526
00:21:17,520 --> 00:21:19,460
H1 through hn

527
00:21:19,460 --> 00:21:22,740
I'm going to define the unitary uh my

528
00:21:22,740 --> 00:21:25,260
Quantum operation to just be this

529
00:21:25,260 --> 00:21:28,740
product so it's H1 to the A1 H2 to the

530
00:21:28,740 --> 00:21:31,260
A2 Etc multiply all those together

531
00:21:31,260 --> 00:21:33,659
that gives me a unique element of this

532
00:21:33,659 --> 00:21:36,360
group H and every element of H has this

533
00:21:36,360 --> 00:21:38,780
form so

534
00:21:38,780 --> 00:21:41,159
uh for the decoding I'm going to use

535
00:21:41,159 --> 00:21:43,679
take PG that's projection onto the

536
00:21:43,679 --> 00:21:45,120
stabilizer code

537
00:21:45,120 --> 00:21:48,000
and I'm going to generate a whole bunch

538
00:21:48,000 --> 00:21:49,980
of projections by taking PG and

539
00:21:49,980 --> 00:21:54,260
conjugating by these U of A elements

540
00:21:54,720 --> 00:21:58,200
and this theorem basically says that we

541
00:21:58,200 --> 00:22:00,059
can do encoding and decoding

542
00:22:00,059 --> 00:22:02,159
successfully so if if I start with my

543
00:22:02,159 --> 00:22:06,080
Tableau fee in the stabilizer code of G

544
00:22:06,080 --> 00:22:10,140
and then I encode my messages V sub a

545
00:22:10,140 --> 00:22:12,480
then measurement a feast of a by this

546
00:22:12,480 --> 00:22:14,760
set of projections is going to yield the

547
00:22:14,760 --> 00:22:16,740
vector a with certainty so I've indexed

548
00:22:16,740 --> 00:22:19,559
my projections by these species and my

549
00:22:19,559 --> 00:22:21,659
measurement is going to spit out the

550
00:22:21,659 --> 00:22:23,220
right message

551
00:22:23,220 --> 00:22:26,580
and the idea of this is um so recall

552
00:22:26,580 --> 00:22:28,320
that if I take the norm squared of an

553
00:22:28,320 --> 00:22:30,000
element like this that's the probability

554
00:22:30,000 --> 00:22:32,460
of getting VEC a you show that that's

555
00:22:32,460 --> 00:22:34,140
one so

556
00:22:34,140 --> 00:22:37,559
PGA times VA that's

557
00:22:37,559 --> 00:22:42,179
PG conjugated by u a times UA Phi so

558
00:22:42,179 --> 00:22:44,220
this becomes a UA squared

559
00:22:44,220 --> 00:22:47,460
uh but U of A is her Mission and unitary

560
00:22:47,460 --> 00:22:49,200
so when I Square this I get the identity

561
00:22:49,200 --> 00:22:50,700
that goes away

562
00:22:50,700 --> 00:22:53,400
PG times Phi is just V

563
00:22:53,400 --> 00:22:56,700
and UA times Phi is VA so in the end I

564
00:22:56,700 --> 00:22:59,280
get a unit Vector uh this Norm squared

565
00:22:59,280 --> 00:23:01,500
is one so 100 probability I'll get this

566
00:23:01,500 --> 00:23:04,039
a here

567
00:23:04,860 --> 00:23:06,299
okay so

568
00:23:06,299 --> 00:23:08,520
um that's how the encoding and decoding

569
00:23:08,520 --> 00:23:09,840
Works

570
00:23:09,840 --> 00:23:13,080
um and I realize that I'm quickly

571
00:23:13,080 --> 00:23:15,120
running out of time so let me just skim

572
00:23:15,120 --> 00:23:16,380
through a few

573
00:23:16,380 --> 00:23:20,159
um final properties so I can say a word

574
00:23:20,159 --> 00:23:21,120
about

575
00:23:21,120 --> 00:23:23,039
um sort of what our future work is going

576
00:23:23,039 --> 00:23:24,780
to be and and something about the

577
00:23:24,780 --> 00:23:26,880
security of this thing

578
00:23:26,880 --> 00:23:27,480
um

579
00:23:27,480 --> 00:23:31,799
okay so you you given a a private key H

580
00:23:31,799 --> 00:23:34,440
you have to generate uh excuse me given

581
00:23:34,440 --> 00:23:36,000
a public key H you have to generate a

582
00:23:36,000 --> 00:23:37,559
private key G and I said there were

583
00:23:37,559 --> 00:23:39,659
potentially many of these

584
00:23:39,659 --> 00:23:41,460
um so you can characterize them by using

585
00:23:41,460 --> 00:23:43,500
Matrix properties they they correspond

586
00:23:43,500 --> 00:23:45,900
to matrices which satisfy certain

587
00:23:45,900 --> 00:23:47,220
relations

588
00:23:47,220 --> 00:23:50,279
uh and uh again sorry I'm gonna fly

589
00:23:50,279 --> 00:23:51,600
through these slides I just want to

590
00:23:51,600 --> 00:23:53,159
describe in words

591
00:23:53,159 --> 00:23:55,620
um some of these things

592
00:23:55,620 --> 00:23:58,080
with a little bit of time I have

593
00:23:58,080 --> 00:24:00,539
um so it turns out that once you have

594
00:24:00,539 --> 00:24:03,720
one uh private key you can generate all

595
00:24:03,720 --> 00:24:06,360
the others in sort of a canonical way to

596
00:24:06,360 --> 00:24:09,240
do that you need a symmetric in by n

597
00:24:09,240 --> 00:24:12,120
binary Matrix uh any any random

598
00:24:12,120 --> 00:24:14,220
symmetric Matrix will do and then a

599
00:24:14,220 --> 00:24:18,480
random Vector of length in a binary

600
00:24:18,480 --> 00:24:21,179
vector and from that you can generate a

601
00:24:21,179 --> 00:24:22,740
new key with new generators you can

602
00:24:22,740 --> 00:24:25,320
write down nice formulas for them and

603
00:24:25,320 --> 00:24:27,360
because they correspond to just

604
00:24:27,360 --> 00:24:29,220
symmetric matrices and vectors we can

605
00:24:29,220 --> 00:24:31,080
count them there's approximately 2 to

606
00:24:31,080 --> 00:24:34,500
the N squared such keys so there's a

607
00:24:34,500 --> 00:24:36,120
whole bunch of random keys and once

608
00:24:36,120 --> 00:24:37,679
you've calculated one of these private

609
00:24:37,679 --> 00:24:40,380
Keys you can pretty easily generate the

610
00:24:40,380 --> 00:24:42,919
others so it's easy to randomly generate

611
00:24:42,919 --> 00:24:46,620
different different private keys

612
00:24:46,620 --> 00:24:47,340
um

613
00:24:47,340 --> 00:24:49,440
I don't have a lot of time left so let

614
00:24:49,440 --> 00:24:51,419
me just say um we did consider some

615
00:24:51,419 --> 00:24:55,200
potential attacks on this thing uh one

616
00:24:55,200 --> 00:24:57,000
kind of attack is just a Brute Force

617
00:24:57,000 --> 00:24:59,880
attack where Allison's one message and

618
00:24:59,880 --> 00:25:02,520
and Eve randomly picks the key and tries

619
00:25:02,520 --> 00:25:04,500
to extract the message with a Quantum

620
00:25:04,500 --> 00:25:05,779
measurement

621
00:25:05,779 --> 00:25:08,220
unsurprisingly that's not going to be

622
00:25:08,220 --> 00:25:09,600
very successful it's no better than

623
00:25:09,600 --> 00:25:11,159
guessing

624
00:25:11,159 --> 00:25:15,419
um but the reason that we consider this

625
00:25:15,419 --> 00:25:17,700
in the first place is because we have

626
00:25:17,700 --> 00:25:19,380
the no cloning theorem so we can't just

627
00:25:19,380 --> 00:25:22,200
make a bunch of copies of VA and then

628
00:25:22,200 --> 00:25:24,179
test it out with a lot of different G

629
00:25:24,179 --> 00:25:26,279
primes that's that's not going to be

630
00:25:26,279 --> 00:25:28,140
possible in general so it's good that

631
00:25:28,140 --> 00:25:30,299
that fails we also consider it a letter

632
00:25:30,299 --> 00:25:32,100
frequency attack something more

633
00:25:32,100 --> 00:25:34,260
complicated and we showed if you give

634
00:25:34,260 --> 00:25:37,440
Eve some a lot of power with a very some

635
00:25:37,440 --> 00:25:40,500
generous assumptions I guess there is a

636
00:25:40,500 --> 00:25:42,380
chance of this kind of attack being

637
00:25:42,380 --> 00:25:45,419
successful but then there's an easy way

638
00:25:45,419 --> 00:25:49,140
to thwart it basically uh Bob needs to

639
00:25:49,140 --> 00:25:53,039
uh use a different uh private key every

640
00:25:53,039 --> 00:25:55,620
time there's a transmission uh but we

641
00:25:55,620 --> 00:25:57,059
can randomly generate those so that's

642
00:25:57,059 --> 00:25:59,279
not too bad

643
00:25:59,279 --> 00:26:00,179
um

644
00:26:00,179 --> 00:26:02,760
I'm a bit out of time so maybe I should

645
00:26:02,760 --> 00:26:05,159
just pause for questions rather than uh

646
00:26:05,159 --> 00:26:07,919
describing my my um potential future

647
00:26:07,919 --> 00:26:09,600
work here so

648
00:26:09,600 --> 00:26:10,860
um thank you for your attention are

649
00:26:10,860 --> 00:26:13,100
there any questions

650
00:26:13,100 --> 00:26:19,860
[Applause]

651
00:26:19,860 --> 00:26:22,740
do we have any questions for Travis

652
00:26:22,740 --> 00:26:24,980
foreign

653
00:26:33,840 --> 00:26:36,740
Kate has one

654
00:26:37,020 --> 00:26:40,679
some I'm curious if uh if you can boil

655
00:26:40,679 --> 00:26:43,500
down the security of this to sort of

656
00:26:43,500 --> 00:26:46,200
easily uh stateable hard problem or

657
00:26:46,200 --> 00:26:48,299
assumption I'm not really sure with the

658
00:26:48,299 --> 00:26:51,440
quantum aspect to it

659
00:26:52,320 --> 00:26:53,700
um

660
00:26:53,700 --> 00:26:57,240
yeah I'm not really sure uh it's hard to

661
00:26:57,240 --> 00:26:58,620
say because

662
00:26:58,620 --> 00:26:59,700
um

663
00:26:59,700 --> 00:27:02,460
really the security comes down to you

664
00:27:02,460 --> 00:27:03,960
know what can you do with Quantum

665
00:27:03,960 --> 00:27:07,020
measurements it's it's not like it's you

666
00:27:07,020 --> 00:27:08,580
know equivalent to factoring or

667
00:27:08,580 --> 00:27:10,620
something like that

668
00:27:10,620 --> 00:27:13,020
um so it's it's really hard to say this

669
00:27:13,020 --> 00:27:15,659
is the second bullet point of our of our

670
00:27:15,659 --> 00:27:17,700
future work is that

671
00:27:17,700 --> 00:27:20,100
um in in this work we really only

672
00:27:20,100 --> 00:27:23,039
considered the possibility that Eve just

673
00:27:23,039 --> 00:27:24,779
picks a random private key and does the

674
00:27:24,779 --> 00:27:26,279
measurement the way that we say a

675
00:27:26,279 --> 00:27:29,340
measurement should be done in reality uh

676
00:27:29,340 --> 00:27:31,740
an eavesdropper could use any Quantum

677
00:27:31,740 --> 00:27:34,260
measurement that is possible and so the

678
00:27:34,260 --> 00:27:36,360
analysis of that's going to be a bit

679
00:27:36,360 --> 00:27:37,740
more complex and so we have a lot of

680
00:27:37,740 --> 00:27:39,779
things to think about it's not clear to

681
00:27:39,779 --> 00:27:41,880
us you know is this just equivalent to

682
00:27:41,880 --> 00:27:44,700
to something that we already know about

683
00:27:44,700 --> 00:27:48,320
thank you sure any other questions

684
00:27:48,320 --> 00:27:51,059
hello so if I understand correctly

685
00:27:51,059 --> 00:27:52,559
you're actually using Quantum

686
00:27:52,559 --> 00:27:56,640
Communication in this protocol yes

687
00:27:56,640 --> 00:27:59,039
and so then what would be the advantage

688
00:27:59,039 --> 00:28:00,779
over qkd

689
00:28:00,779 --> 00:28:03,899
which achieves a similar

690
00:28:03,899 --> 00:28:05,700
functionality in this information

691
00:28:05,700 --> 00:28:07,860
theoretically secure

692
00:28:07,860 --> 00:28:12,000
yeah one potential Advantage is that um

693
00:28:12,000 --> 00:28:13,860
well so

694
00:28:13,860 --> 00:28:15,600
I guess there's various formulations of

695
00:28:15,600 --> 00:28:17,159
qkd so

696
00:28:17,159 --> 00:28:20,039
um device independent qkd relies heavily

697
00:28:20,039 --> 00:28:22,320
on entanglement and we don't need any

698
00:28:22,320 --> 00:28:24,059
entanglement so that's one potential

699
00:28:24,059 --> 00:28:25,500
thing

700
00:28:25,500 --> 00:28:26,399
um

701
00:28:26,399 --> 00:28:29,279
the other thing is that because it's

702
00:28:29,279 --> 00:28:32,220
sort of asymmetric we have a private key

703
00:28:32,220 --> 00:28:34,260
and a public key

704
00:28:34,260 --> 00:28:35,940
um there might be some advantages to

705
00:28:35,940 --> 00:28:38,520
that so of course qkd is a protocol for

706
00:28:38,520 --> 00:28:42,000
Distributing a pair of keys uh so it's

707
00:28:42,000 --> 00:28:44,159
it's sort of symmetric

708
00:28:44,159 --> 00:28:47,159
um and while physics guarantees some

709
00:28:47,159 --> 00:28:50,159
security of that distribution it always

710
00:28:50,159 --> 00:28:52,200
comes with an asterisk you know you you

711
00:28:52,200 --> 00:28:54,179
have to implement this thing very well

712
00:28:54,179 --> 00:28:56,640
you have to implement qkd very well in

713
00:28:56,640 --> 00:28:59,100
order for that to really be secure so

714
00:28:59,100 --> 00:29:00,840
there may be some advantage to having a

715
00:29:00,840 --> 00:29:04,140
public public and private Key System of

716
00:29:04,140 --> 00:29:08,640
versus uh qkd in certain scenarios but

717
00:29:08,640 --> 00:29:10,679
um

718
00:29:10,679 --> 00:29:13,140
and and just one other follow-up I can

719
00:29:13,140 --> 00:29:15,000
is there an obvious Brute Force

720
00:29:15,000 --> 00:29:18,360
computational attack on this

721
00:29:18,360 --> 00:29:21,539
um all you can do is

722
00:29:21,539 --> 00:29:23,399
yeah yeah really all you can do is

723
00:29:23,399 --> 00:29:25,559
randomly generate a key

724
00:29:25,559 --> 00:29:28,200
um so given H

725
00:29:28,200 --> 00:29:30,659
um you generate one key and then all the

726
00:29:30,659 --> 00:29:34,140
other keys are uh coming from a randomly

727
00:29:34,140 --> 00:29:36,000
chosen symmetric Matrix and a randomly

728
00:29:36,000 --> 00:29:38,279
chosen generator and it's really easy to

729
00:29:38,279 --> 00:29:41,820
jump from one uh thing to the other so

730
00:29:41,820 --> 00:29:43,440
basically you've got a set of two to the

731
00:29:43,440 --> 00:29:44,700
N squared

732
00:29:44,700 --> 00:29:48,559
private keys that you're just going to

733
00:29:48,559 --> 00:29:51,419
select with uniform probability there's

734
00:29:51,419 --> 00:29:53,820
no like you know unless there's some

735
00:29:53,820 --> 00:29:57,179
like canonical choice that the that Bob

736
00:29:57,179 --> 00:29:59,940
is using unfortunately

737
00:29:59,940 --> 00:30:01,679
um then then I don't think there's an

738
00:30:01,679 --> 00:30:05,600
easy way to generate a private key

739
00:30:06,059 --> 00:30:09,260
thank you sure

740
00:30:09,419 --> 00:30:11,399
okay I think we need to get the next

741
00:30:11,399 --> 00:30:13,559
talk started so let's thank Travis uh

742
00:30:13,559 --> 00:30:15,539
one more time

743
00:30:15,539 --> 00:30:18,200
thank you

