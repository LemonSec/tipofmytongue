1
00:00:00,320 --> 00:00:02,159
of the day

2
00:00:02,159 --> 00:00:03,600
and

3
00:00:03,600 --> 00:00:04,799
we have

4
00:00:04,799 --> 00:00:06,399
abdel

5
00:00:06,399 --> 00:00:10,080
excellent so he shared his lies already

6
00:00:10,080 --> 00:00:11,440
can you can you speak of that to make

7
00:00:11,440 --> 00:00:15,000
sure we can hear you

8
00:00:22,720 --> 00:00:26,519
so we can see the slides

9
00:00:30,000 --> 00:00:33,120
yes uh sorry yeah i i made that more

10
00:00:33,120 --> 00:00:34,880
okay no problem

11
00:00:34,880 --> 00:00:36,800
so for the last stock of the day

12
00:00:36,800 --> 00:00:38,800
abdel is going to be giving this talk

13
00:00:38,800 --> 00:00:40,320
through the looking glass benchmark and

14
00:00:40,320 --> 00:00:41,760
secure multi-party computation

15
00:00:41,760 --> 00:00:43,600
comparisons for rallies

16
00:00:43,600 --> 00:00:46,239
and this is joint work with kashif navas

17
00:00:46,239 --> 00:00:50,160
eugenio salazar and victor zukaz

18
00:00:50,160 --> 00:00:52,640
yeah hi everybody thank you dani and

19
00:00:52,640 --> 00:00:54,480
thank you for being there

20
00:00:54,480 --> 00:00:56,399
i know this is the last talk of the

21
00:00:56,399 --> 00:00:58,559
session and i am the only thing

22
00:00:58,559 --> 00:01:00,640
separating you from the coffee breaks

23
00:01:00,640 --> 00:01:03,680
i'm gonna try to be as fast as i can and

24
00:01:03,680 --> 00:01:05,920
thank you to the organizers to allow us

25
00:01:05,920 --> 00:01:07,680
to do this online

26
00:01:07,680 --> 00:01:10,400
uh i our wish was to be there and to be

27
00:01:10,400 --> 00:01:12,880
able to give this presentation live but

28
00:01:12,880 --> 00:01:16,080
because of certain circumstances outside

29
00:01:16,080 --> 00:01:19,600
or control this was not possible uh

30
00:01:19,600 --> 00:01:22,240
hence i recommend you to also attending

31
00:01:22,240 --> 00:01:24,560
daniel scudero talk at the wrong session

32
00:01:24,560 --> 00:01:26,400
it's gonna be interesting

33
00:01:26,400 --> 00:01:30,159
as well so as danny mentioned uh we are

34
00:01:30,159 --> 00:01:32,560
gonna talk a little bit about release

35
00:01:32,560 --> 00:01:35,200
today uh it's a it's a word that you

36
00:01:35,200 --> 00:01:37,600
have heard many times already in this uh

37
00:01:37,600 --> 00:01:40,560
in this session and release typically

38
00:01:40,560 --> 00:01:43,680
need two things they need a

39
00:01:43,680 --> 00:01:45,600
a fixed point representation a

40
00:01:45,600 --> 00:01:48,880
flattening point representation some

41
00:01:48,880 --> 00:01:50,399
a way to

42
00:01:50,399 --> 00:01:52,840
to process rational numbers and

43
00:01:52,840 --> 00:01:54,720
comparisons so we're going to talk a

44
00:01:54,720 --> 00:01:56,880
little bit about how you can

45
00:01:56,880 --> 00:01:59,920
do that for release what is the state of

46
00:01:59,920 --> 00:02:02,560
the art and how you can combine the

47
00:02:02,560 --> 00:02:04,159
state of the art to obtain the best

48
00:02:04,159 --> 00:02:07,040
results when you implement results okay

49
00:02:07,040 --> 00:02:08,800
so i'm gonna go

50
00:02:08,800 --> 00:02:11,200
wait let me see yes i'm gonna go to our

51
00:02:11,200 --> 00:02:13,200
first slide uh it's like that you

52
00:02:13,200 --> 00:02:15,360
probably are gonna see like 20 times

53
00:02:15,360 --> 00:02:17,440
during crypto so i'm gonna talk a little

54
00:02:17,440 --> 00:02:20,480
bit what mpc is so you can imagine any

55
00:02:20,480 --> 00:02:22,400
set of parties they want to compute a

56
00:02:22,400 --> 00:02:23,840
function together

57
00:02:23,840 --> 00:02:25,599
and they want this function to be

58
00:02:25,599 --> 00:02:28,239
computed in a way that the inputs of the

59
00:02:28,239 --> 00:02:30,959
parties remain secret and you have some

60
00:02:30,959 --> 00:02:34,400
correctness guarantee on the output okay

61
00:02:34,400 --> 00:02:36,640
the typical way to solve this problem is

62
00:02:36,640 --> 00:02:37,519
to

63
00:02:37,519 --> 00:02:41,120
outsource it to a trusted third party so

64
00:02:41,120 --> 00:02:43,360
like you give the information to an

65
00:02:43,360 --> 00:02:45,280
entity that you trust it performs the

66
00:02:45,280 --> 00:02:47,760
computation and gives the results back

67
00:02:47,760 --> 00:02:50,959
okay the magic of npc is that it allows

68
00:02:50,959 --> 00:02:54,400
you to get rid of this

69
00:02:54,400 --> 00:02:56,879
of this trusted entity

70
00:02:56,879 --> 00:02:58,560
okay

71
00:02:58,560 --> 00:03:00,720
so you can imagine that you have a magic

72
00:03:00,720 --> 00:03:03,440
box and in this box

73
00:03:03,440 --> 00:03:05,440
it's not controlled by anybody this box

74
00:03:05,440 --> 00:03:07,280
can perform the operations that i just

75
00:03:07,280 --> 00:03:09,599
described it can calculate the function

76
00:03:09,599 --> 00:03:12,400
it can give you a privacy guarantees and

77
00:03:12,400 --> 00:03:15,519
it can give you correctness so npc does

78
00:03:15,519 --> 00:03:16,840
this in the real

79
00:03:16,840 --> 00:03:19,120
world are you moving your slides by the

80
00:03:19,120 --> 00:03:20,000
way

81
00:03:20,000 --> 00:03:20,800
uh

82
00:03:20,800 --> 00:03:23,360
yeah can you see it no unfortunately

83
00:03:23,360 --> 00:03:25,680
it's stuck on the on the first line

84
00:03:25,680 --> 00:03:27,599
oh man

85
00:03:27,599 --> 00:03:30,080
let's see no

86
00:03:30,080 --> 00:03:33,120
now it's moving yeah please continue

87
00:03:33,120 --> 00:03:36,239
okay yes so sorry guys like i think i'm

88
00:03:36,239 --> 00:03:38,799
not gonna maximize it because if not

89
00:03:38,799 --> 00:03:39,920
it's gonna be

90
00:03:39,920 --> 00:03:42,159
like that again so

91
00:03:42,159 --> 00:03:43,920
uh just to recap

92
00:03:43,920 --> 00:03:46,879
mpc lets you do this in the in the

93
00:03:46,879 --> 00:03:49,200
in the real world using mathematical

94
00:03:49,200 --> 00:03:52,239
protocols okay mathematical products yes

95
00:03:52,239 --> 00:03:53,920
so now let's talk a little bit about

96
00:03:53,920 --> 00:03:55,760
values

97
00:03:55,760 --> 00:04:00,000
relus are rectified linear units

98
00:04:00,000 --> 00:04:02,080
they are a quite popular activation

99
00:04:02,080 --> 00:04:04,560
function you can find them anywhere

100
00:04:04,560 --> 00:04:06,080
nowadays in

101
00:04:06,080 --> 00:04:09,680
not only in the ppml domain but also in

102
00:04:09,680 --> 00:04:12,879
other applications that doesn't require

103
00:04:12,879 --> 00:04:15,439
security why is that is because they are

104
00:04:15,439 --> 00:04:18,798
fast they are good representing data

105
00:04:18,798 --> 00:04:20,079
that you

106
00:04:20,079 --> 00:04:22,000
yeah that you would typically do using

107
00:04:22,000 --> 00:04:25,759
sigmoids and they don't require as much

108
00:04:25,759 --> 00:04:26,479
of

109
00:04:26,479 --> 00:04:28,639
a computational power as you would do

110
00:04:28,639 --> 00:04:31,280
for the sigmoids which is also quite

111
00:04:31,280 --> 00:04:33,199
good on the encrypted domain right

112
00:04:33,199 --> 00:04:35,120
because non-linearities are quite

113
00:04:35,120 --> 00:04:37,600
expensive and as long as you can do the

114
00:04:37,600 --> 00:04:39,520
comparison fast and you have a way to

115
00:04:39,520 --> 00:04:42,320
represent the fixed point arimatic you

116
00:04:42,320 --> 00:04:44,240
are on the other side and you can get

117
00:04:44,240 --> 00:04:46,000
rid of the

118
00:04:46,000 --> 00:04:47,040
of the

119
00:04:47,040 --> 00:04:50,080
sigmoids so how fixed point arithmetic

120
00:04:50,080 --> 00:04:53,040
typically works for npc for an unbounded

121
00:04:53,040 --> 00:04:54,479
number of parties

122
00:04:54,479 --> 00:04:56,800
well the most typical construction was

123
00:04:56,800 --> 00:05:00,000
introduced by saxena and katrina and

124
00:05:00,000 --> 00:05:02,639
this was many many many years ago and

125
00:05:02,639 --> 00:05:04,240
it's the question that you see on the

126
00:05:04,240 --> 00:05:07,440
screen okay where you have some mantissa

127
00:05:07,440 --> 00:05:09,840
that i'm gonna call v that lives from

128
00:05:09,840 --> 00:05:13,120
zero to some power two to the k

129
00:05:13,120 --> 00:05:14,880
and these are integers of course and the

130
00:05:14,880 --> 00:05:16,960
precision is given by that p that you

131
00:05:16,960 --> 00:05:19,600
see there the two to the minus p in

132
00:05:19,600 --> 00:05:21,600
reality this v

133
00:05:21,600 --> 00:05:23,280
leaves on some

134
00:05:23,280 --> 00:05:24,800
on some ring or

135
00:05:24,800 --> 00:05:27,360
on some field this being npc for the

136
00:05:27,360 --> 00:05:29,600
matter of the stock i'm gonna assume

137
00:05:29,600 --> 00:05:32,320
this uh q that you see at the end it's a

138
00:05:32,320 --> 00:05:34,880
prime hence this is a finite field

139
00:05:34,880 --> 00:05:36,880
and i'm not gonna tell you what is that

140
00:05:36,880 --> 00:05:39,199
the space in between 2 to the k to 2 to

141
00:05:39,199 --> 00:05:41,520
the k plus kappa

142
00:05:41,520 --> 00:05:43,759
it's gonna be abducted for the time

143
00:05:43,759 --> 00:05:45,280
being okay

144
00:05:45,280 --> 00:05:48,880
so every everything works well and fine

145
00:05:48,880 --> 00:05:51,039
until you come to multiplications when

146
00:05:51,039 --> 00:05:53,440
you multiply multiply two numbers using

147
00:05:53,440 --> 00:05:55,680
this representation

148
00:05:55,680 --> 00:05:59,039
you quickly run into a big problem like

149
00:05:59,039 --> 00:06:01,039
that is that the

150
00:06:01,039 --> 00:06:03,440
space needed for representing the b

151
00:06:03,440 --> 00:06:04,880
expands

152
00:06:04,880 --> 00:06:07,199
so this is where this space that i was

153
00:06:07,199 --> 00:06:08,319
mentioning

154
00:06:08,319 --> 00:06:09,759
comes into play

155
00:06:09,759 --> 00:06:13,039
this space is typically called slack and

156
00:06:13,039 --> 00:06:15,840
it allows us to use probabilistic

157
00:06:15,840 --> 00:06:16,880
masking

158
00:06:16,880 --> 00:06:19,759
to bring statistical security

159
00:06:19,759 --> 00:06:22,800
once you use this kind of masking so the

160
00:06:22,800 --> 00:06:25,680
authors of katrina the elders katrina

161
00:06:25,680 --> 00:06:29,680
saxena they propose a fixed point

162
00:06:29,680 --> 00:06:32,080
truncation protocol that allow us to

163
00:06:32,080 --> 00:06:34,000
reduce this space that because of time i

164
00:06:34,000 --> 00:06:36,400
cannot explain this into detail but it

165
00:06:36,400 --> 00:06:39,440
requires the use of a slack

166
00:06:39,440 --> 00:06:42,560
they also propose a comparison protocol

167
00:06:42,560 --> 00:06:45,840
that also uses slacks reuses the same

168
00:06:45,840 --> 00:06:48,560
concept to be able to compare two

169
00:06:48,560 --> 00:06:50,960
numbers in this case

170
00:06:50,960 --> 00:06:52,960
you can subtract these two numbers and

171
00:06:52,960 --> 00:06:54,639
compare them to zero

172
00:06:54,639 --> 00:06:56,639
and the protocol is based on extracting

173
00:06:56,639 --> 00:06:58,560
the most significative bit

174
00:06:58,560 --> 00:07:00,560
so imagine that your number lives in

175
00:07:00,560 --> 00:07:03,840
between 0 and 2 to the k again if your

176
00:07:03,840 --> 00:07:06,720
the most significant bit is 0 it means

177
00:07:06,720 --> 00:07:08,160
that it's negative if your most

178
00:07:08,160 --> 00:07:10,800
significant bit is 1 it means it's

179
00:07:10,800 --> 00:07:12,080
positive

180
00:07:12,080 --> 00:07:14,960
so the trick here is how you produce the

181
00:07:14,960 --> 00:07:17,360
masking the masking is produced as you

182
00:07:17,360 --> 00:07:18,560
see on top

183
00:07:18,560 --> 00:07:19,360
where

184
00:07:19,360 --> 00:07:21,360
you have to

185
00:07:21,360 --> 00:07:23,680
where is composed by these by these are

186
00:07:23,680 --> 00:07:26,880
prime and these are double prime the r

187
00:07:26,880 --> 00:07:30,160
prime is the randomness up to 2 to the k

188
00:07:30,160 --> 00:07:32,319
and sample bitwise

189
00:07:32,319 --> 00:07:35,520
okay so we use the random masking again

190
00:07:35,520 --> 00:07:38,400
that uses a slack and these allow us to

191
00:07:38,400 --> 00:07:40,800
have this complex equation

192
00:07:40,800 --> 00:07:42,880
somehow that

193
00:07:42,880 --> 00:07:45,280
it's capable to determine what is the

194
00:07:45,280 --> 00:07:47,280
most significant bit

195
00:07:47,280 --> 00:07:49,520
and the most important thing here is to

196
00:07:49,520 --> 00:07:52,160
notice that there is a comparison inside

197
00:07:52,160 --> 00:07:54,160
this equation but the interesting thing

198
00:07:54,160 --> 00:07:56,800
is that that comparison is against the r

199
00:07:56,800 --> 00:07:59,599
prime and the r prime was sampled

200
00:07:59,599 --> 00:08:02,319
bitwise so this allows us to use a

201
00:08:02,319 --> 00:08:04,080
bitwise comparison

202
00:08:04,080 --> 00:08:07,599
that can be taken for a by that can be

203
00:08:07,599 --> 00:08:11,039
17 implemented using any binary circuit

204
00:08:11,039 --> 00:08:14,160
and it's not quite efficient but you can

205
00:08:14,160 --> 00:08:17,440
obtain it that way and that is how

206
00:08:17,440 --> 00:08:20,560
katrina and the hog in this case decided

207
00:08:20,560 --> 00:08:22,400
it would be a good way to use this by

208
00:08:22,400 --> 00:08:24,400
the way these two protocols are

209
00:08:24,400 --> 00:08:26,560
extremely commonly used you can find

210
00:08:26,560 --> 00:08:29,919
them in scale mamba in mps speeds

211
00:08:29,919 --> 00:08:31,440
they are everywhere

212
00:08:31,440 --> 00:08:34,719
and this was 10 years ago

213
00:08:34,719 --> 00:08:36,799
i think one two years ago rabbit

214
00:08:36,799 --> 00:08:38,719
appeared rabbit is a little bit

215
00:08:38,719 --> 00:08:40,880
different the comparison here is in

216
00:08:40,880 --> 00:08:43,519
absolute terms so there is no concept of

217
00:08:43,519 --> 00:08:46,399
positive and negative and

218
00:08:46,399 --> 00:08:48,720
the comparison is done against some r

219
00:08:48,720 --> 00:08:51,839
and this r is a public constant

220
00:08:51,839 --> 00:08:53,600
in the domain in this case for the

221
00:08:53,600 --> 00:08:55,680
authors the domain was bounded by some n

222
00:08:55,680 --> 00:08:58,240
that's why you have an m in the end and

223
00:08:58,240 --> 00:09:00,959
an important detail is that the r is

224
00:09:00,959 --> 00:09:03,920
sampled b twice okay

225
00:09:03,920 --> 00:09:06,000
the method explodes the

226
00:09:06,000 --> 00:09:08,480
commutative properties of addition

227
00:09:08,480 --> 00:09:10,080
so

228
00:09:10,080 --> 00:09:12,240
it produces a couple of equations using

229
00:09:12,240 --> 00:09:15,040
the following elements first the x mask

230
00:09:15,040 --> 00:09:16,560
with the randomness

231
00:09:16,560 --> 00:09:18,080
that is called a

232
00:09:18,080 --> 00:09:21,600
then the b that is basically the a plus

233
00:09:21,600 --> 00:09:23,920
this capital v that you see there and

234
00:09:23,920 --> 00:09:25,279
then dc

235
00:09:25,279 --> 00:09:28,480
together when they are mixed up uh

236
00:09:28,480 --> 00:09:30,800
for some process that i'm gonna also

237
00:09:30,800 --> 00:09:32,800
adopt from this presentation because

238
00:09:32,800 --> 00:09:34,720
there is no time to explain

239
00:09:34,720 --> 00:09:37,519
you come up with these three basic

240
00:09:37,519 --> 00:09:40,240
comparisons that when are added in the

241
00:09:40,240 --> 00:09:42,240
way that is stated there

242
00:09:42,240 --> 00:09:44,320
gives you the x

243
00:09:44,320 --> 00:09:47,200
is smaller than r okay

244
00:09:47,200 --> 00:09:49,839
one of these is public the other two

245
00:09:49,839 --> 00:09:53,040
contain sacred data but the secret data

246
00:09:53,040 --> 00:09:56,560
is r and as i said to you the r is being

247
00:09:56,560 --> 00:09:58,480
sampled bitwise

248
00:09:58,480 --> 00:10:00,560
using ella bits

249
00:10:00,560 --> 00:10:03,440
hence this can also be performed using a

250
00:10:03,440 --> 00:10:06,000
boolean circuit okay

251
00:10:06,000 --> 00:10:08,800
if the m as i said at the beginning is a

252
00:10:08,800 --> 00:10:13,360
prime number then the sampling on r

253
00:10:13,360 --> 00:10:16,079
bitwise has some trouble right

254
00:10:16,079 --> 00:10:16,880
so

255
00:10:16,880 --> 00:10:19,440
in this paper what we try to do is to

256
00:10:19,440 --> 00:10:21,760
take all the stuff that you saw try to

257
00:10:21,760 --> 00:10:24,160
mix it up so that we produce the fastest

258
00:10:24,160 --> 00:10:27,040
comparison possible and we also use

259
00:10:27,040 --> 00:10:29,200
state-of-the-art elements to evaluate

260
00:10:29,200 --> 00:10:31,120
the bitwise comparisons that you saw

261
00:10:31,120 --> 00:10:33,279
there for that we used something called

262
00:10:33,279 --> 00:10:36,720
zaphod it's an mpc mix protocol

263
00:10:36,720 --> 00:10:39,440
contribution of a couple of years ago it

264
00:10:39,440 --> 00:10:43,279
allowed us to mix hsl 17 which is a

265
00:10:43,279 --> 00:10:45,279
something akin to bmr to evaluate

266
00:10:45,279 --> 00:10:47,519
garbage circuits in a distributed

267
00:10:47,519 --> 00:10:48,480
fashion

268
00:10:48,480 --> 00:10:50,399
and

269
00:10:50,399 --> 00:10:53,040
full threshold implementations of

270
00:10:53,040 --> 00:10:56,480
arithmetic circuits like speeds

271
00:10:56,480 --> 00:10:58,880
like overdrive speeds or whatever

272
00:10:58,880 --> 00:11:01,040
variation of speeds you

273
00:11:01,040 --> 00:11:03,519
want and it allows us to do that in

274
00:11:03,519 --> 00:11:06,720
constant rounds so it's amazing so

275
00:11:06,720 --> 00:11:08,560
the first thing that we did is to try to

276
00:11:08,560 --> 00:11:11,360
use support with rabbit as i said to you

277
00:11:11,360 --> 00:11:12,959
there there is a problem with the

278
00:11:12,959 --> 00:11:15,519
sampling the problem with the sampling

279
00:11:15,519 --> 00:11:18,800
is that it's done bit wise so hence we

280
00:11:18,800 --> 00:11:20,880
use two techniques that the authors

281
00:11:20,880 --> 00:11:23,440
succinctly mention in their paper a

282
00:11:23,440 --> 00:11:24,880
rejection list

283
00:11:24,880 --> 00:11:26,959
and using a prime that is close to a

284
00:11:26,959 --> 00:11:30,160
power of two and we use

285
00:11:30,160 --> 00:11:32,880
the subhot techniques and dabbits to

286
00:11:32,880 --> 00:11:35,519
instead of elevates for the sampling

287
00:11:35,519 --> 00:11:38,640
then we incorporated also a slug into

288
00:11:38,640 --> 00:11:40,399
rabbit and we change fundamentally

289
00:11:40,399 --> 00:11:43,120
rabbit we use the random sampling for

290
00:11:43,120 --> 00:11:46,160
from katrina and we use subhead for the

291
00:11:46,160 --> 00:11:47,360
evaluation

292
00:11:47,360 --> 00:11:48,800
and finally

293
00:11:48,800 --> 00:11:50,320
we

294
00:11:50,320 --> 00:11:52,000
come up with something that we call

295
00:11:52,000 --> 00:11:54,160
beyond katrina

296
00:11:54,160 --> 00:11:56,320
it's a unique protocol in the sense that

297
00:11:56,320 --> 00:11:58,800
it uses the fastest the less than

298
00:11:58,800 --> 00:12:01,120
implementation from rabbit that we have

299
00:12:01,120 --> 00:12:02,480
to also adapt

300
00:12:02,480 --> 00:12:04,880
the flow and the random sampling from

301
00:12:04,880 --> 00:12:06,079
katrina

302
00:12:06,079 --> 00:12:09,110
and the evaluation from zapcod and

303
00:12:09,110 --> 00:12:10,720
[Music]

304
00:12:10,720 --> 00:12:12,399
for sampling

305
00:12:12,399 --> 00:12:14,959
the circuits were also compiled using

306
00:12:14,959 --> 00:12:17,760
vhdl and then transformed to crystal

307
00:12:17,760 --> 00:12:18,800
fashion

308
00:12:18,800 --> 00:12:20,720
so that it can be used by the the

309
00:12:20,720 --> 00:12:23,279
framework later on so our testbed is

310
00:12:23,279 --> 00:12:25,519
quite simple by machines they see each

311
00:12:25,519 --> 00:12:26,399
other

312
00:12:26,399 --> 00:12:29,920
we use a scale number 1.14 and then we

313
00:12:29,920 --> 00:12:32,639
did extra modifications on a scale mamba

314
00:12:32,639 --> 00:12:34,720
so that we can

315
00:12:34,720 --> 00:12:36,480
use something that we call offline

316
00:12:36,480 --> 00:12:39,120
gardening so sad foot is reactive which

317
00:12:39,120 --> 00:12:41,519
means that garbling also happens online

318
00:12:41,519 --> 00:12:44,880
we modify it so that we can break a

319
00:12:44,880 --> 00:12:47,839
spray garble the circuits in the in a

320
00:12:47,839 --> 00:12:50,320
preprocessing phase and then

321
00:12:50,320 --> 00:12:53,440
do the evaluation of aurelius as well

322
00:12:53,440 --> 00:12:54,800
we also

323
00:12:54,800 --> 00:12:56,639
compile the circuits as i said using the

324
00:12:56,639 --> 00:12:59,040
hdl the original circuit and then we

325
00:12:59,040 --> 00:13:01,360
used a hardware synthesizer to try to

326
00:13:01,360 --> 00:13:03,519
accelerate

327
00:13:03,519 --> 00:13:06,079
the circuit execution as well and this

328
00:13:06,079 --> 00:13:09,839
is the takeaway so this is a

329
00:13:09,839 --> 00:13:11,440
time map

330
00:13:11,440 --> 00:13:14,000
the orange box there is the time that it

331
00:13:14,000 --> 00:13:16,560
takes using

332
00:13:16,560 --> 00:13:20,079
to execute a relu using mps pits with

333
00:13:20,079 --> 00:13:22,320
the typical comparison that is

334
00:13:22,320 --> 00:13:25,440
implemented there that is katrina uh

335
00:13:25,440 --> 00:13:27,519
as you may see it's quite significant

336
00:13:27,519 --> 00:13:29,040
when you compare it with the fastest

337
00:13:29,040 --> 00:13:30,639
version of private that we have that is

338
00:13:30,639 --> 00:13:34,240
rapid slack that is actually much is uh

339
00:13:34,240 --> 00:13:36,000
faster than than

340
00:13:36,000 --> 00:13:38,720
than katrina and if you use a beyond

341
00:13:38,720 --> 00:13:40,720
katrina you can even reduce the times

342
00:13:40,720 --> 00:13:42,720
further and if you use the offline

343
00:13:42,720 --> 00:13:45,600
garbling uh that is eighty percent

344
00:13:45,600 --> 00:13:48,160
faster than the young katrina the the

345
00:13:48,160 --> 00:13:52,399
improved was quite astounding when when

346
00:13:52,399 --> 00:13:56,399
when when we finally implemented this

347
00:13:56,399 --> 00:13:58,880
but to be fair these are the timings for

348
00:13:58,880 --> 00:14:01,519
all the methods so typical rabbit

349
00:14:01,519 --> 00:14:03,680
using a rejection list and with a power

350
00:14:03,680 --> 00:14:06,720
of two they were the slowest ones but

351
00:14:06,720 --> 00:14:08,320
you have to also bear in mind that

352
00:14:08,320 --> 00:14:10,079
ravi's rabbit implemented with a

353
00:14:10,079 --> 00:14:13,199
rejection list has perfect security

354
00:14:13,199 --> 00:14:15,519
so that's a super nice characteristic to

355
00:14:15,519 --> 00:14:16,880
have this is the

356
00:14:16,880 --> 00:14:19,360
chart that you saw above as you can see

357
00:14:19,360 --> 00:14:21,680
the difference with the original katrina

358
00:14:21,680 --> 00:14:24,000
is quite significant but if you take

359
00:14:24,000 --> 00:14:27,040
only rabbit slug and beyond you can see

360
00:14:27,040 --> 00:14:29,120
that when we use the hardware

361
00:14:29,120 --> 00:14:31,680
accelerated version

362
00:14:31,680 --> 00:14:34,320
the results are much better so these

363
00:14:34,320 --> 00:14:36,000
were tests

364
00:14:36,000 --> 00:14:37,920
that we perform in

365
00:14:37,920 --> 00:14:41,519
one two machines we introduced in the

366
00:14:41,519 --> 00:14:43,760
chart that you see on the right we even

367
00:14:43,760 --> 00:14:46,639
introduced some delay instead of just

368
00:14:46,639 --> 00:14:48,160
having the two machines talking to each

369
00:14:48,160 --> 00:14:50,720
other we have some artificial

370
00:14:50,720 --> 00:14:53,040
delay so thank you so much for your time

371
00:14:53,040 --> 00:14:55,120
the paper is available we also have a

372
00:14:55,120 --> 00:14:56,800
repo with all our resources so you can

373
00:14:56,800 --> 00:14:59,440
use it if you want and that's it thank

374
00:14:59,440 --> 00:15:01,120
you again for all your time and again

375
00:15:01,120 --> 00:15:03,279
please go and see danny's talk at the at

376
00:15:03,279 --> 00:15:05,680
the rome session and enjoy your coffee

377
00:15:05,680 --> 00:15:07,920
break thank you

378
00:15:07,920 --> 00:15:10,160
thank you so much

379
00:15:10,160 --> 00:15:11,680
you did receive innovation as well of

380
00:15:11,680 --> 00:15:12,560
course

381
00:15:12,560 --> 00:15:14,639
uh so

382
00:15:14,639 --> 00:15:17,040
one quick question from the audience if

383
00:15:17,040 --> 00:15:19,599
there's any

384
00:15:20,959 --> 00:15:22,880
so just a quick question of that like is

385
00:15:22,880 --> 00:15:24,639
there any difference between fields and

386
00:15:24,639 --> 00:15:27,839
rings in your protocol

387
00:15:27,920 --> 00:15:31,759
well uh not really like not really you

388
00:15:31,759 --> 00:15:33,600
can use uh anything

389
00:15:33,600 --> 00:15:35,360
that you want but in this case it was

390
00:15:35,360 --> 00:15:38,720
simple to explain it using it feels more

391
00:15:38,720 --> 00:15:40,959
evident yeah okay no that's great to

392
00:15:40,959 --> 00:15:45,040
hear so let's thank the speaker again

393
00:15:46,399 --> 00:15:48,880
and

