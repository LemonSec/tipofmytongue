1
00:00:04,850 --> 00:00:10,070
hi everyone so I'm Ruth and I'm

2
00:00:07,970 --> 00:00:13,459
presenting some work that I did together

3
00:00:10,070 --> 00:00:17,590
with mahira and Buuren and our work is

4
00:00:13,459 --> 00:00:21,289
called Nantes I noticed a ad revisited

5
00:00:17,590 --> 00:00:22,519
so our works on symmetric encryption so

6
00:00:21,289 --> 00:00:23,869
maybe when you think of symmetric

7
00:00:22,519 --> 00:00:26,240
encryption you get a picture like this

8
00:00:23,869 --> 00:00:27,560
in your head I think we can all agree

9
00:00:26,240 --> 00:00:28,220
encryption should probably take a

10
00:00:27,560 --> 00:00:29,779
message

11
00:00:28,220 --> 00:00:31,160
it should probably return something and

12
00:00:29,779 --> 00:00:33,020
decryption should probably take that

13
00:00:31,160 --> 00:00:34,730
output and recover the message

14
00:00:33,020 --> 00:00:37,190
encryption and decryption should

15
00:00:34,730 --> 00:00:38,718
probably also share a key and you would

16
00:00:37,190 --> 00:00:40,579
think for how long we've been using

17
00:00:38,719 --> 00:00:42,079
symmetric encryption we should have

18
00:00:40,579 --> 00:00:44,329
figured out by now all the other inputs

19
00:00:42,079 --> 00:00:44,870
but we seem to still not have made up

20
00:00:44,329 --> 00:00:47,960
our mind

21
00:00:44,870 --> 00:00:49,760
so let's step through a bit of the

22
00:00:47,960 --> 00:00:53,329
evolution of how symmetric encryption

23
00:00:49,760 --> 00:00:55,399
has worked over the years so I guess

24
00:00:53,329 --> 00:00:58,010
it's a crypto talk so I need to start

25
00:00:55,399 --> 00:01:00,829
with the one-time pad and we eventually

26
00:00:58,010 --> 00:01:02,928
moved on to randomized notions of

27
00:01:00,829 --> 00:01:06,680
symmetric encryption and our security

28
00:01:02,929 --> 00:01:10,400
goals move forward to privacy in CPA

29
00:01:06,680 --> 00:01:12,200
style security goals this was usually a

30
00:01:10,400 --> 00:01:17,360
company with schemes that were motor

31
00:01:12,200 --> 00:01:18,799
operation oxide for things like CBC if I

32
00:01:17,360 --> 00:01:21,560
can fast forward to where we are

33
00:01:18,799 --> 00:01:23,780
currently you will see that standards

34
00:01:21,560 --> 00:01:26,509
and protocols are using nonce based

35
00:01:23,780 --> 00:01:29,659
encryption what I'm gonna call and be1

36
00:01:26,509 --> 00:01:32,090
syntax and our security goals have moved

37
00:01:29,659 --> 00:01:34,850
from privacy only to now requiring

38
00:01:32,090 --> 00:01:39,590
privacy and integrity better known as a

39
00:01:34,850 --> 00:01:42,289
EAD so your env1 schemes are GCM which

40
00:01:39,590 --> 00:01:44,600
everyone knows is used in TLS and other

41
00:01:42,290 --> 00:01:48,619
things like OCB and the final portfolio

42
00:01:44,600 --> 00:01:50,929
of caesar and stuff like that so why did

43
00:01:48,619 --> 00:01:54,950
I call this one MV one obviously because

44
00:01:50,930 --> 00:01:57,170
I'm going to define and be e 2 so we

45
00:01:54,950 --> 00:02:00,409
like to see our work as the next step in

46
00:01:57,170 --> 00:02:03,439
this evolution we find our problem with

47
00:02:00,409 --> 00:02:06,170
the syntax of NBE one and we propose a

48
00:02:03,439 --> 00:02:07,639
new syntax and B 2 and we give a

49
00:02:06,170 --> 00:02:11,260
slightly stronger notion of security

50
00:02:07,640 --> 00:02:15,830
which is nonce hiding ayyy so I'm gonna

51
00:02:11,260 --> 00:02:18,640
go into this now so maybe let's take

52
00:02:15,830 --> 00:02:20,170
another step back and talk about

53
00:02:18,640 --> 00:02:24,369
what does it mean to have a

54
00:02:20,170 --> 00:02:26,950
cryptographic definition so perhaps you

55
00:02:24,370 --> 00:02:30,220
are aware there are two components every

56
00:02:26,950 --> 00:02:31,560
cryptographic definition syntax and

57
00:02:30,220 --> 00:02:34,930
security

58
00:02:31,560 --> 00:02:36,580
so what syntax syntax is what are the

59
00:02:34,930 --> 00:02:37,840
inputs and outputs of your algorithms

60
00:02:36,580 --> 00:02:40,570
are they randomized are they

61
00:02:37,840 --> 00:02:43,120
deterministic that kind of stuff and so

62
00:02:40,570 --> 00:02:45,250
as I showed on the previous slide we all

63
00:02:43,120 --> 00:02:48,160
have the message and the output of the

64
00:02:45,250 --> 00:02:49,450
ciphertext and the key and what the

65
00:02:48,160 --> 00:02:51,459
syntax should really tell us is what

66
00:02:49,450 --> 00:02:55,000
additional inputs your algorithm should

67
00:02:51,459 --> 00:02:57,459
be getting security we usually define

68
00:02:55,000 --> 00:02:58,840
this using a game and the game just

69
00:02:57,459 --> 00:03:01,150
needs to have anniversary it has

70
00:02:58,840 --> 00:03:02,709
Oracle's and the game decides when the

71
00:03:01,150 --> 00:03:07,140
adversary wins and how well the

72
00:03:02,709 --> 00:03:07,140
adversary is doing by advantage function

73
00:03:07,260 --> 00:03:14,260
so let's go into how NB 1 is defined so

74
00:03:11,620 --> 00:03:18,459
this was defined by raga way and others

75
00:03:14,260 --> 00:03:22,120
so if we have a scheme SE 1 our syntax

76
00:03:18,459 --> 00:03:24,670
NB 1 will take a message and produce

77
00:03:22,120 --> 00:03:25,959
what we call a core ciphertext and from

78
00:03:24,670 --> 00:03:28,119
this course I protect you should be able

79
00:03:25,959 --> 00:03:29,739
to retrieve the message and a special

80
00:03:28,120 --> 00:03:30,420
input we have here is what we call a

81
00:03:29,739 --> 00:03:33,790
nonce

82
00:03:30,420 --> 00:03:36,518
so what is a nonce nonce stands for a

83
00:03:33,790 --> 00:03:39,970
number used once so it should be any non

84
00:03:36,519 --> 00:03:42,190
repeating quantity and so in the real

85
00:03:39,970 --> 00:03:44,320
world I guess the most common cases of

86
00:03:42,190 --> 00:03:46,600
nonces are random numbers and counters

87
00:03:44,320 --> 00:03:50,519
but you can also see people use things

88
00:03:46,600 --> 00:03:54,040
like this sector numbers packet numbers

89
00:03:50,519 --> 00:03:58,330
device identifier as nonsense so long as

90
00:03:54,040 --> 00:03:59,739
it's non repeating and I will draw your

91
00:03:58,330 --> 00:04:01,090
attention to the two things in yellow

92
00:03:59,739 --> 00:04:04,239
that's very important for the rest of

93
00:04:01,090 --> 00:04:06,400
this talk that we're supposed to be able

94
00:04:04,239 --> 00:04:09,150
to pick any non repeating quantity and

95
00:04:06,400 --> 00:04:13,750
that the nonce is given as input to both

96
00:04:09,150 --> 00:04:15,910
encryption and decryption and I'll also

97
00:04:13,750 --> 00:04:18,160
make the note that half of a EAD is the

98
00:04:15,910 --> 00:04:20,140
ad part but I'm gonna leave that out for

99
00:04:18,160 --> 00:04:21,609
this presentation to keep it simple you

100
00:04:20,140 --> 00:04:25,240
can look at my paper if we want to talk

101
00:04:21,608 --> 00:04:28,780
about ad so let's go to a high-level

102
00:04:25,240 --> 00:04:31,930
idea what the security goals are this is

103
00:04:28,780 --> 00:04:32,349
privacy and authenticity so anniversary

104
00:04:31,930 --> 00:04:34,630
with

105
00:04:32,350 --> 00:04:36,850
access to the Quique should not be able

106
00:04:34,630 --> 00:04:39,550
to distinguish the outputs of encryption

107
00:04:36,850 --> 00:04:41,740
from random and it should not be able to

108
00:04:39,550 --> 00:04:44,920
get the decryption to return anything

109
00:04:41,740 --> 00:04:46,900
but reject for those of you who like

110
00:04:44,920 --> 00:04:49,600
games this is a picture depicting the

111
00:04:46,900 --> 00:04:51,489
game you see the adversary has access to

112
00:04:49,600 --> 00:04:53,700
two Oracle's and it needs to distinguish

113
00:04:51,490 --> 00:04:55,750
in a real world an ideal world and

114
00:04:53,700 --> 00:04:57,610
idealized the encryption should return

115
00:04:55,750 --> 00:04:59,980
random strings idealize decryption

116
00:04:57,610 --> 00:05:02,860
always returns both and I will just note

117
00:04:59,980 --> 00:05:05,830
that these are the notions of security

118
00:05:02,860 --> 00:05:10,270
under which things like GCM and OCB have

119
00:05:05,830 --> 00:05:12,219
been proven secure and of course to

120
00:05:10,270 --> 00:05:13,870
capture the idea of a nonce we don't let

121
00:05:12,220 --> 00:05:15,670
the adversary repeat a nonce to the

122
00:05:13,870 --> 00:05:20,290
encryption Oracle but it can repeat

123
00:05:15,670 --> 00:05:22,960
nonsense of decryption however likes so

124
00:05:20,290 --> 00:05:25,030
now we can get to the main question that

125
00:05:22,960 --> 00:05:27,549
motivated all of our research which is

126
00:05:25,030 --> 00:05:30,640
how does this nonce that goes into

127
00:05:27,550 --> 00:05:35,050
encryption go over to decryption and go

128
00:05:30,640 --> 00:05:37,349
into decryption and we realized that

129
00:05:35,050 --> 00:05:39,550
there's a difference between how it was

130
00:05:37,350 --> 00:05:43,030
presented in theory and how it actually

131
00:05:39,550 --> 00:05:46,180
happens in practice so in theory it

132
00:05:43,030 --> 00:05:48,700
looks something like this it seems like

133
00:05:46,180 --> 00:05:50,860
between encryption and decryption it

134
00:05:48,700 --> 00:05:52,420
sort of magically gets there maybe they

135
00:05:50,860 --> 00:05:54,070
conjure it up on the other side maybe

136
00:05:52,420 --> 00:05:58,030
there's a wormhole I don't know not mine

137
00:05:54,070 --> 00:05:59,950
to judge but in practice we haven't

138
00:05:58,030 --> 00:06:01,690
really figured out the wormhole yet so

139
00:05:59,950 --> 00:06:03,640
we send it in the clear with the

140
00:06:01,690 --> 00:06:10,000
ciphertext seems like a simple solution

141
00:06:03,640 --> 00:06:12,310
seems like it can't hurt right right so

142
00:06:10,000 --> 00:06:14,530
just to give you some idea that I'm not

143
00:06:12,310 --> 00:06:16,510
making all this up these are some quotes

144
00:06:14,530 --> 00:06:18,489
from the original rock paper that says

145
00:06:16,510 --> 00:06:20,050
that nonce transmission is kind of

146
00:06:18,490 --> 00:06:24,310
outside the model it's kind of out of

147
00:06:20,050 --> 00:06:26,200
Bend all right but if you look at RFC

148
00:06:24,310 --> 00:06:29,320
5.16 which talks about how you should

149
00:06:26,200 --> 00:06:30,729
implement a EAD it says well send it

150
00:06:29,320 --> 00:06:35,290
with the ciphertext you should be

151
00:06:30,730 --> 00:06:37,540
alright so this is where we get to the

152
00:06:35,290 --> 00:06:40,600
title of our paper which is nonsense

153
00:06:37,540 --> 00:06:42,220
unnoticed which says that well suddenly

154
00:06:40,600 --> 00:06:46,310
announced in the clear can compromise

155
00:06:42,220 --> 00:06:49,639
privacy in kind of an obvious way

156
00:06:46,310 --> 00:06:51,710
um so think about anniversary who gets

157
00:06:49,639 --> 00:06:52,760
to pick the nonce and literally sets the

158
00:06:51,710 --> 00:06:54,799
nouns to be the hash of the message

159
00:06:52,760 --> 00:06:56,080
assess the nouns to be the first part of

160
00:06:54,800 --> 00:06:59,120
the message

161
00:06:56,080 --> 00:07:02,440
there's an obvious idea of semantic

162
00:06:59,120 --> 00:07:04,910
security that's being salted here but

163
00:07:02,440 --> 00:07:06,650
yet our formalization doesn't capture

164
00:07:04,910 --> 00:07:08,540
this because the formalization doesn't

165
00:07:06,650 --> 00:07:14,030
need to communicate the nonce between

166
00:07:08,540 --> 00:07:16,190
the sender and receiver even if we don't

167
00:07:14,030 --> 00:07:19,640
talk about message privacy we can talk

168
00:07:16,190 --> 00:07:21,770
about sender privacy where nonces are

169
00:07:19,640 --> 00:07:24,140
effectively metadata and it reveals

170
00:07:21,770 --> 00:07:26,930
information about who the sender is and

171
00:07:24,140 --> 00:07:31,729
thereby compromises user and on every

172
00:07:26,930 --> 00:07:33,620
deal and you can see this in RFC five

173
00:07:31,730 --> 00:07:35,510
one one six again which recommends that

174
00:07:33,620 --> 00:07:39,500
part of your nonce to be made up of a

175
00:07:35,510 --> 00:07:41,240
device specific identifier and this

176
00:07:39,500 --> 00:07:43,100
would obviously be able to let an

177
00:07:41,240 --> 00:07:44,930
adversary tell which device you're

178
00:07:43,100 --> 00:07:48,380
sending something from if you're sending

179
00:07:44,930 --> 00:07:51,979
the nonce in the clear and we all note

180
00:07:48,380 --> 00:07:53,450
also that because a e 1 and B 1 is

181
00:07:51,979 --> 00:07:55,390
supposed to be indistinguishable from

182
00:07:53,450 --> 00:07:58,550
random it's supposed to give you

183
00:07:55,390 --> 00:08:00,020
anonymity sort of for free but if we

184
00:07:58,550 --> 00:08:04,060
then go and send the nonce with it well

185
00:08:00,020 --> 00:08:04,060
you kind of defeat at the whole point so

186
00:08:05,260 --> 00:08:10,969
I guess the natural next question would

187
00:08:07,910 --> 00:08:13,250
be what what impact does this have on

188
00:08:10,970 --> 00:08:16,669
things like GCM and TLS are we are we

189
00:08:13,250 --> 00:08:19,520
completely screwed no no it's not a

190
00:08:16,669 --> 00:08:21,979
problem in TLS for those of you who are

191
00:08:19,520 --> 00:08:25,549
worried because in TLS the nonce is not

192
00:08:21,979 --> 00:08:28,039
transmitted in the clear but it may be a

193
00:08:25,550 --> 00:08:30,289
problem depending on how you use in

194
00:08:28,039 --> 00:08:33,710
other users of GCM other uses of other

195
00:08:30,289 --> 00:08:35,838
mv-1 schemes because the attack that I

196
00:08:33,710 --> 00:08:37,310
sketched on the previous slide kind of

197
00:08:35,839 --> 00:08:39,440
can be extended to any

198
00:08:37,309 --> 00:08:42,799
nb1 scheme that chooses to send the

199
00:08:39,440 --> 00:08:47,270
nonce in the clear and so it's not that

200
00:08:42,799 --> 00:08:50,030
this problem somehow shows that AE one

201
00:08:47,270 --> 00:08:52,550
security does not hold it just says that

202
00:08:50,030 --> 00:08:53,959
there's a gap between how we thought

203
00:08:52,550 --> 00:08:58,310
about it and how it's actually being

204
00:08:53,960 --> 00:09:00,259
used so to fill in this gap what we did

205
00:08:58,310 --> 00:09:02,569
was we want to propose a new definition

206
00:09:00,259 --> 00:09:05,509
a new syntax and a new security

207
00:09:02,569 --> 00:09:08,179
definition and after that I need to show

208
00:09:05,509 --> 00:09:10,519
you how to do it how to get schemes that

209
00:09:08,179 --> 00:09:12,499
achieve this notion of security so we're

210
00:09:10,519 --> 00:09:16,069
gonna do this by transforms which take

211
00:09:12,499 --> 00:09:22,309
existing primitives like an NB one

212
00:09:16,069 --> 00:09:25,099
scheme and return NB two schemes so

213
00:09:22,309 --> 00:09:27,559
let's do a brief interlude to say that

214
00:09:25,100 --> 00:09:29,089
we're not alone in pointing out that

215
00:09:27,559 --> 00:09:31,339
this is a issue that needs to be

216
00:09:29,089 --> 00:09:34,129
addressed shortly after our paper was

217
00:09:31,339 --> 00:09:35,959
published Denver NC came up to us and

218
00:09:34,129 --> 00:09:38,629
said that you know he was concerned

219
00:09:35,959 --> 00:09:40,939
about similar stuff when they were

220
00:09:38,629 --> 00:09:42,919
writing up the call for Caesar and it

221
00:09:40,939 --> 00:09:45,228
was reflected in the call for Caesar

222
00:09:42,919 --> 00:09:46,579
because Caesar has sort of a public

223
00:09:45,229 --> 00:09:49,160
message number and a secret message

224
00:09:46,579 --> 00:09:51,258
number and this was actually formalized

225
00:09:49,160 --> 00:09:55,910
as a e5 but this is different from our

226
00:09:51,259 --> 00:09:58,999
formalization and I told Dunkleman and

227
00:09:55,910 --> 00:10:01,179
Lux use the NBA to syntax but they use

228
00:09:58,999 --> 00:10:05,259
it for to achieve RUP

229
00:10:01,179 --> 00:10:07,699
which is kind of cool and we think that

230
00:10:05,259 --> 00:10:10,789
the future direction of our work would

231
00:10:07,699 --> 00:10:12,410
be to extend our syntax to all these

232
00:10:10,789 --> 00:10:14,929
other interesting kinds of AE that's

233
00:10:12,410 --> 00:10:17,509
coming up and see if sending nonces in

234
00:10:14,929 --> 00:10:22,069
the clear causes any problems down the

235
00:10:17,509 --> 00:10:25,549
line for any of this stuff all right so

236
00:10:22,069 --> 00:10:28,878
let's return to our two parts of a

237
00:10:25,549 --> 00:10:33,108
security definition and start with the

238
00:10:28,879 --> 00:10:36,109
nd2 syntax so spot the difference that's

239
00:10:33,109 --> 00:10:38,059
not a big difference here the difference

240
00:10:36,109 --> 00:10:40,730
is that decryption doesn't receive the

241
00:10:38,059 --> 00:10:42,469
nonce anymore it's only an input to

242
00:10:40,730 --> 00:10:44,899
encryption and we're going to call this

243
00:10:42,470 --> 00:10:47,869
C now the full ciphertext as opposed to

244
00:10:44,899 --> 00:10:49,579
the KO ciphertext in particular this

245
00:10:47,869 --> 00:10:51,470
means that if decryption needs the nonce

246
00:10:49,579 --> 00:10:54,469
to perform decryption you need to

247
00:10:51,470 --> 00:10:55,879
somehow send it inside of C and so we

248
00:10:54,470 --> 00:11:00,169
have a better way to inspect how the

249
00:10:55,879 --> 00:11:02,989
nonce communication is occurring let's

250
00:11:00,169 --> 00:11:05,449
move on to security so security is not

251
00:11:02,989 --> 00:11:08,509
too different from the initial notion we

252
00:11:05,449 --> 00:11:12,079
basically just extend it to cover the

253
00:11:08,509 --> 00:11:13,910
new syntax so the only thing to note is

254
00:11:12,079 --> 00:11:17,390
that decryption now doesn't get an

255
00:11:13,910 --> 00:11:19,100
anymore as an input and the encryption

256
00:11:17,390 --> 00:11:21,020
Oracle should return a random string

257
00:11:19,100 --> 00:11:22,610
that saw the lengths comparable to the

258
00:11:21,020 --> 00:11:26,900
full ciphertext and not the core

259
00:11:22,610 --> 00:11:30,590
ciphertext okay so I can move right

260
00:11:26,900 --> 00:11:34,880
along how do we construct these AE to

261
00:11:30,590 --> 00:11:35,960
secure and b2 schemes and we think that

262
00:11:34,880 --> 00:11:37,880
the correct way to do this is by

263
00:11:35,960 --> 00:11:39,950
transforms because if we start

264
00:11:37,880 --> 00:11:42,200
constructing a you to secure env to s

265
00:11:39,950 --> 00:11:43,630
key from scratch you're kind of ignoring

266
00:11:42,200 --> 00:11:46,190
all the work that has been done to

267
00:11:43,630 --> 00:11:49,250
standardize and optimize and prove

268
00:11:46,190 --> 00:11:52,370
secure all these great and b1 schemes

269
00:11:49,250 --> 00:11:54,800
not to mention other primitives so how a

270
00:11:52,370 --> 00:11:57,050
transform works is it takes an NB one

271
00:11:54,800 --> 00:12:00,290
scheme a c1 and maybe some other

272
00:11:57,050 --> 00:12:02,030
primitives and gives you back an AE to

273
00:12:00,290 --> 00:12:06,140
secure and v2 scheme it's like magic

274
00:12:02,030 --> 00:12:08,510
it's great and what goals do we have for

275
00:12:06,140 --> 00:12:11,810
this transforms our goals are we want

276
00:12:08,510 --> 00:12:13,689
have no ciphertext overhead and we want

277
00:12:11,810 --> 00:12:17,060
to have constant computational overhead

278
00:12:13,690 --> 00:12:19,910
so I'll note that for the 0 ciphertext

279
00:12:17,060 --> 00:12:21,319
overhead it's not a simple comparison of

280
00:12:19,910 --> 00:12:22,610
the length of the call ciphertext and

281
00:12:21,320 --> 00:12:24,290
the length of the full ciphertext

282
00:12:22,610 --> 00:12:24,920
because that's kind of not a fair

283
00:12:24,290 --> 00:12:27,199
comparison

284
00:12:24,920 --> 00:12:28,699
if in usage you're sending the nonce in

285
00:12:27,200 --> 00:12:30,830
the clear what you really should be

286
00:12:28,700 --> 00:12:32,240
comparing is the length of the nonce

287
00:12:30,830 --> 00:12:33,740
concatenate that with the core

288
00:12:32,240 --> 00:12:35,360
ciphertext and the length of the

289
00:12:33,740 --> 00:12:36,830
fullcycle text so that's what we're

290
00:12:35,360 --> 00:12:39,770
going to define a ciphertext overhead

291
00:12:36,830 --> 00:12:44,330
and this actually makes it slightly

292
00:12:39,770 --> 00:12:46,100
non-trivial to achieve to achieve a to

293
00:12:44,330 --> 00:12:48,620
secure and b2 schemes in practice

294
00:12:46,100 --> 00:12:52,790
because after nonces are shorter than

295
00:12:48,620 --> 00:12:55,760
one block of your encryption primitive

296
00:12:52,790 --> 00:12:57,230
docks like for primitive so you can't

297
00:12:55,760 --> 00:12:58,640
just do the trivial thing of like let's

298
00:12:57,230 --> 00:13:03,650
push it through a box lifer and hope it

299
00:12:58,640 --> 00:13:05,930
works ok so to give you a flavor of how

300
00:13:03,650 --> 00:13:10,010
it works here's one of our transforms

301
00:13:05,930 --> 00:13:11,449
which I put in a picture over there so

302
00:13:10,010 --> 00:13:14,600
how the transform works is with this

303
00:13:11,450 --> 00:13:18,950
equation over here where se sub H n1 is

304
00:13:14,600 --> 00:13:22,220
an NB 2 scheme and it takes an NB 1

305
00:13:18,950 --> 00:13:25,030
scheme se 1 and a PRF F and it all puts

306
00:13:22,220 --> 00:13:25,030
an envier to ski

307
00:13:27,240 --> 00:13:32,490
so the basic idea here that's occurring

308
00:13:29,700 --> 00:13:34,680
is you take the first block of the core

309
00:13:32,490 --> 00:13:37,410
ciphertext C star that comes out of the

310
00:13:34,680 --> 00:13:42,359
encryption Oracle and you and cipher

311
00:13:37,410 --> 00:13:44,730
that using the using the PRF then you

312
00:13:42,360 --> 00:13:48,950
use this as a masking value to mask the

313
00:13:44,730 --> 00:13:51,420
nonce okay so this is how and then

314
00:13:48,950 --> 00:13:53,160
you've asked the nonce and during

315
00:13:51,420 --> 00:13:54,360
decryption you can unmask the nonce

316
00:13:53,160 --> 00:13:55,829
because you have access to the core

317
00:13:54,360 --> 00:14:00,180
ciphertext and you can retrieve what the

318
00:13:55,830 --> 00:14:02,370
masking value was and this it under this

319
00:14:00,180 --> 00:14:04,229
construction we truly can say that any

320
00:14:02,370 --> 00:14:07,649
non repeating non-spell have been fine

321
00:14:04,230 --> 00:14:10,080
because even if you chose the hash of

322
00:14:07,649 --> 00:14:12,360
the message or some equally silly nonce

323
00:14:10,080 --> 00:14:14,640
you haven't been masked by this random

324
00:14:12,360 --> 00:14:16,350
string and now you're golden the whole

325
00:14:14,640 --> 00:14:19,740
cipher text looks indistinguishable from

326
00:14:16,350 --> 00:14:21,990
random it's great so we show in our

327
00:14:19,740 --> 00:14:24,420
paper that if F is a PRF and s you wanna

328
00:14:21,990 --> 00:14:28,740
cheese a you on security your scheme as

329
00:14:24,420 --> 00:14:30,959
a whole will achieve a u2 security and

330
00:14:28,740 --> 00:14:33,649
just to show you another transform this

331
00:14:30,959 --> 00:14:37,229
one may be a little bit simpler this one

332
00:14:33,649 --> 00:14:40,470
uses a synthetic nonce so what you do is

333
00:14:37,230 --> 00:14:43,050
you in cipher the nonce you get a nonce

334
00:14:40,470 --> 00:14:45,839
n/2 and you use that with the encryption

335
00:14:43,050 --> 00:14:47,520
instead this is a simpler construction

336
00:14:45,839 --> 00:14:51,360
and maybe a little bit reminiscent of

337
00:14:47,520 --> 00:14:53,610
SIV and it's it's more efficient to

338
00:14:51,360 --> 00:14:55,440
because in decryption you don't need to

339
00:14:53,610 --> 00:14:58,410
retrieve the nonce anymore it's kind of

340
00:14:55,440 --> 00:15:01,050
sent with it and you can see some of the

341
00:14:58,410 --> 00:15:03,240
trade-offs between computational

342
00:15:01,050 --> 00:15:04,920
overhead and security here because this

343
00:15:03,240 --> 00:15:11,190
one's much more efficient but the

344
00:15:04,920 --> 00:15:14,459
security bound is worse so let me just

345
00:15:11,190 --> 00:15:18,930
sum up all that I have today so I'll

346
00:15:14,459 --> 00:15:21,540
talk deals with AE wants to kill MV one

347
00:15:18,930 --> 00:15:24,989
schemes like GCM ocv and the Caesar

348
00:15:21,540 --> 00:15:27,060
candidates we address a gap that we

349
00:15:24,990 --> 00:15:30,360
think exists between formalisms

350
00:15:27,060 --> 00:15:32,160
and usage we want to say that

351
00:15:30,360 --> 00:15:35,040
communicating a nonce in the clear is

352
00:15:32,160 --> 00:15:40,769
not as fine as it may seem it violates

353
00:15:35,040 --> 00:15:43,259
privacy and to address this issue we

354
00:15:40,769 --> 00:15:46,470
give a new definition of syntax and

355
00:15:43,259 --> 00:15:48,809
security and we show that it's very

356
00:15:46,470 --> 00:15:52,949
simple and efficient to construct a to

357
00:15:48,809 --> 00:15:55,279
secure and v2 schemes that's all I have

358
00:15:52,949 --> 00:15:55,279
thanks

359
00:16:00,240 --> 00:16:05,670
thank you very much for the presentation

360
00:16:02,110 --> 00:16:05,670
are there any questions

361
00:16:13,290 --> 00:16:16,589
what's the question

362
00:16:16,650 --> 00:16:23,550
people just pointing at each other okay

363
00:16:20,950 --> 00:16:25,140
then then I would have a question please

364
00:16:23,550 --> 00:16:27,250
[Music]

365
00:16:25,140 --> 00:16:30,550
so you said you you leave out the

366
00:16:27,250 --> 00:16:32,890
details of the AEDs like you you said

367
00:16:30,550 --> 00:16:34,949
you focus on a version of encryption

368
00:16:32,890 --> 00:16:38,080
which doesn't consider associated data

369
00:16:34,950 --> 00:16:40,870
do you have results about IDs in your

370
00:16:38,080 --> 00:16:42,850
paper and if yes can you give a brief

371
00:16:40,870 --> 00:16:45,130
overview what's happening then like is

372
00:16:42,850 --> 00:16:48,610
it the same just IDs edit or is there

373
00:16:45,130 --> 00:16:51,910
more structure happening yes in our

374
00:16:48,610 --> 00:16:57,430
paper we treat our whole formalism has

375
00:16:51,910 --> 00:16:59,620
headers or associated data in it and for

376
00:16:57,430 --> 00:17:01,660
the basic constructions that we sort of

377
00:16:59,620 --> 00:17:03,760
give here it's pretty much a natural

378
00:17:01,660 --> 00:17:09,099
extension because the headers just given

379
00:17:03,760 --> 00:17:11,770
as input to your and b1 schemes but with

380
00:17:09,099 --> 00:17:13,119
our we also have some advanced schemes

381
00:17:11,770 --> 00:17:15,849
in the paper that I didn't talk about

382
00:17:13,119 --> 00:17:17,979
here which kind of extends nonce misuse

383
00:17:15,849 --> 00:17:22,139
and then it gets a little bit more

384
00:17:17,980 --> 00:17:28,960
interesting how to fit the head a yeah

385
00:17:22,140 --> 00:17:32,410
okay thank you any more questions and

386
00:17:28,960 --> 00:17:36,210
they are in fact that there's

387
00:17:32,410 --> 00:17:36,210
microphones apparently somewhere can you

388
00:17:37,500 --> 00:18:02,920
it's okay I can do well it depends on

389
00:17:59,920 --> 00:18:05,260
the model that you're referring to so

390
00:18:02,920 --> 00:18:07,840
I'm not super I'm not super familiar

391
00:18:05,260 --> 00:18:15,220
which with which 32-bit you're talking

392
00:18:07,840 --> 00:18:17,080
about but what I will say to that is if

393
00:18:15,220 --> 00:18:21,100
your version of encryption covers those

394
00:18:17,080 --> 00:18:22,990
32 bits or nouns the 32 bits then it

395
00:18:21,100 --> 00:18:30,909
needs to you you need to come up with a

396
00:18:22,990 --> 00:18:36,190
formalism that incorporates that I have

397
00:18:30,910 --> 00:18:38,530
a question up here so there are people

398
00:18:36,190 --> 00:18:40,930
who want to use some very short nonces

399
00:18:38,530 --> 00:18:43,300
they just assume that nonsense do not

400
00:18:40,930 --> 00:18:45,940
repeat if you transform these short

401
00:18:43,300 --> 00:18:47,649
nonce into another nouns with a in a to

402
00:18:45,940 --> 00:18:50,320
the random way you have you you may have

403
00:18:47,650 --> 00:18:52,570
some some problem with collisions right

404
00:18:50,320 --> 00:18:55,330
so you need some collision resistance so

405
00:18:52,570 --> 00:18:57,310
are you losing something this way so it

406
00:18:55,330 --> 00:18:59,409
depends on which one of our transforms

407
00:18:57,310 --> 00:19:01,090
you use so some of our transforms will

408
00:18:59,410 --> 00:19:03,430
incur sort of like a birthday bound

409
00:19:01,090 --> 00:19:07,320
problem which is something like the last

410
00:19:03,430 --> 00:19:07,320
transform I showed but we also have

411
00:19:07,590 --> 00:19:34,090
other techniques yeah so you're saying

412
00:19:32,140 --> 00:19:41,710
that what the sender doesn't want to

413
00:19:34,090 --> 00:19:42,970
leak data I understand and we're not

414
00:19:41,710 --> 00:19:44,980
saying that we're not saying that

415
00:19:42,970 --> 00:19:46,030
there's anyone out there who is selling

416
00:19:44,980 --> 00:19:49,290
the nonce to be the hash of the message

417
00:19:46,030 --> 00:19:52,450
or something equally stupid

418
00:19:49,290 --> 00:19:54,280
but even something like counters right I

419
00:19:52,450 --> 00:19:56,260
mean that reveals information that is

420
00:19:54,280 --> 00:19:57,639
not captured in the model right a

421
00:19:56,260 --> 00:19:59,080
counter with differentiate between a

422
00:19:57,640 --> 00:20:00,100
stream that's sending many packets in

423
00:19:59,080 --> 00:20:16,980
the stream that's sending very few

424
00:20:00,100 --> 00:20:20,199
packets I I was wondering what your

425
00:20:16,980 --> 00:20:23,080
constructions had to do with kinetise

426
00:20:20,200 --> 00:20:25,750
paper on generic construction a lot of

427
00:20:23,080 --> 00:20:29,320
what I saw in your slides looked very

428
00:20:25,750 --> 00:20:31,840
similar to kinetise paper that talked

429
00:20:29,320 --> 00:20:34,990
about different secure ways to use

430
00:20:31,840 --> 00:20:39,939
nonces and wonder how your work relates

431
00:20:34,990 --> 00:20:42,940
to that paper so like I tried to say in

432
00:20:39,940 --> 00:20:44,380
our presentation we're not trying to

433
00:20:42,940 --> 00:20:47,680
claim that these transforms are like

434
00:20:44,380 --> 00:20:48,970
somehow new or exciting and we think

435
00:20:47,680 --> 00:20:51,970
that the main contribution of our paper

436
00:20:48,970 --> 00:20:53,940
is definitional but we included the

437
00:20:51,970 --> 00:20:57,040
transforms which makes use of many

438
00:20:53,940 --> 00:21:00,970
existing known techniques which we cite

439
00:20:57,040 --> 00:21:02,470
in the paper because it seems logical

440
00:21:00,970 --> 00:21:03,880
that if you present a definition you

441
00:21:02,470 --> 00:21:13,660
should tell people how to achieve that

442
00:21:03,880 --> 00:21:14,890
level of security okay thank you very

443
00:21:13,660 --> 00:21:18,130
much

444
00:21:14,890 --> 00:21:18,130
[Applause]

