1
00:00:05,790 --> 00:00:13,809
all right so thanks fun ok so I want to

2
00:00:11,320 --> 00:00:15,339
start by just putting up a statement of

3
00:00:13,809 --> 00:00:17,860
the decisional diffie-hellman assumption

4
00:00:15,339 --> 00:00:20,439
ok so it says that we fixed some cyclic

5
00:00:17,860 --> 00:00:22,779
group G of order Q little G is going to

6
00:00:20,439 --> 00:00:24,790
be a generator of the group and the

7
00:00:22,779 --> 00:00:27,730
assumption states that for uniformly

8
00:00:24,790 --> 00:00:29,320
random x y&z from Z Q that no

9
00:00:27,730 --> 00:00:31,360
computationally bounded adversary can

10
00:00:29,320 --> 00:00:33,489
distinguish between seeing G to the X G

11
00:00:31,360 --> 00:00:36,340
of the Y and e to the X Y and seeing G

12
00:00:33,489 --> 00:00:38,678
to the X to the Y and e to the Z ok so

13
00:00:36,340 --> 00:00:39,850
it seems fairly straightforward but

14
00:00:38,679 --> 00:00:42,519
there's a fairly subtle point here

15
00:00:39,850 --> 00:00:45,210
that's a little bit ambiguous which is

16
00:00:42,519 --> 00:00:48,219
when exactly is this generator G chosen

17
00:00:45,210 --> 00:00:49,960
all right so if you're of the opinion

18
00:00:48,219 --> 00:00:51,219
that this generator G is just a fixed

19
00:00:49,960 --> 00:00:53,170
part of the group description and it's

20
00:00:51,219 --> 00:00:55,570
chosen independently of the DDH instance

21
00:00:53,170 --> 00:00:58,030
well then you're in good company this is

22
00:00:55,570 --> 00:01:01,050
also the definition of DDH and a number

23
00:00:58,030 --> 00:01:03,309
of foundational cryptographic works ok

24
00:01:01,050 --> 00:01:04,899
but you might also hold a different

25
00:01:03,309 --> 00:01:06,158
opinion you might think that indeed eh

26
00:01:04,900 --> 00:01:07,600
the generator should be chosen as part

27
00:01:06,159 --> 00:01:09,700
of the instance it should be a random

28
00:01:07,600 --> 00:01:13,750
generator chosen along with the random x

29
00:01:09,700 --> 00:01:15,460
y&z and if you think this well then

30
00:01:13,750 --> 00:01:17,650
you're also in good company this is the

31
00:01:15,460 --> 00:01:21,460
definition of DDH in all of these

32
00:01:17,650 --> 00:01:23,710
foundational works ok so I'm going to

33
00:01:21,460 --> 00:01:25,300
call this first thing fixed EDH they're

34
00:01:23,710 --> 00:01:27,580
just DDH with a random with a fixed

35
00:01:25,300 --> 00:01:29,410
generator and the second thing random DD

36
00:01:27,580 --> 00:01:32,500
h which is DD h with a random generator

37
00:01:29,410 --> 00:01:34,000
and a natural question is well both of

38
00:01:32,500 --> 00:01:38,260
these assumptions are called V DDH

39
00:01:34,000 --> 00:01:39,880
assumption so are they equivalent and

40
00:01:38,260 --> 00:01:41,350
you can probably guess from the fact

41
00:01:39,880 --> 00:01:44,500
that the talk is not over that they're

42
00:01:41,350 --> 00:01:47,110
not equivalent and this is observed by

43
00:01:44,500 --> 00:01:50,050
Rupe in 99 and also discussed in some

44
00:01:47,110 --> 00:01:51,580
other works well well she pointed out

45
00:01:50,050 --> 00:01:52,720
that this fixed and random DDH

46
00:01:51,580 --> 00:01:54,730
assumptions are not known to be

47
00:01:52,720 --> 00:01:55,960
equivalent we don't know of a didn't

48
00:01:54,730 --> 00:01:57,610
give a black box operation or anything

49
00:01:55,960 --> 00:01:58,990
but at least pointed out that there's no

50
00:01:57,610 --> 00:02:01,360
trivial equivalence between the two

51
00:01:58,990 --> 00:02:03,940
assumptions so this is a slightly

52
00:02:01,360 --> 00:02:05,890
concerning state of affairs and you can

53
00:02:03,940 --> 00:02:08,859
also ask well do we have similar issues

54
00:02:05,890 --> 00:02:10,568
for a discrete log or CDH ok and if you

55
00:02:08,860 --> 00:02:12,280
think about it for a little bit you'll

56
00:02:10,568 --> 00:02:13,869
realize that we we don't really have

57
00:02:12,280 --> 00:02:18,410
these issues for discrete login CDH this

58
00:02:13,870 --> 00:02:20,000
seems to be uniquely a DDH problem ok so

59
00:02:18,410 --> 00:02:21,320
you can ask when are these fixed and

60
00:02:20,000 --> 00:02:23,630
generator versions of these assumptions

61
00:02:21,320 --> 00:02:25,370
equivalent for discrete login CDH there

62
00:02:23,630 --> 00:02:26,750
are folklore reductions showing that the

63
00:02:25,370 --> 00:02:29,300
fixing random generator versions are

64
00:02:26,750 --> 00:02:32,390
equivalent but for D D H we didn't know

65
00:02:29,300 --> 00:02:33,950
either equivalents or separations okay

66
00:02:32,390 --> 00:02:36,200
so before I go on I just want to note

67
00:02:33,950 --> 00:02:38,510
but an adversary for a random generator

68
00:02:36,200 --> 00:02:40,130
version of a problem always implies an

69
00:02:38,510 --> 00:02:41,899
adversary for a fixed generator version

70
00:02:40,130 --> 00:02:43,250
of the problem okay and this is simply

71
00:02:41,900 --> 00:02:45,440
because if you have a fixed generator

72
00:02:43,250 --> 00:02:46,670
instance you can you can raise every

73
00:02:45,440 --> 00:02:48,680
single one of your group elements to a

74
00:02:46,670 --> 00:02:52,820
random power and and feed that to your

75
00:02:48,680 --> 00:02:54,320
random generator adversary okay so the

76
00:02:52,820 --> 00:02:55,579
random generator problem is always at

77
00:02:54,320 --> 00:03:00,560
least as hard as a fixed generator

78
00:02:55,580 --> 00:03:01,850
problem ok so just as a warm-up here's

79
00:03:00,560 --> 00:03:03,140
the equivalence between random generator

80
00:03:01,850 --> 00:03:05,329
discrete log and fixed generator

81
00:03:03,140 --> 00:03:06,500
discrete log it's very easy you're given

82
00:03:05,330 --> 00:03:09,320
the random generator discrete log

83
00:03:06,500 --> 00:03:12,380
instance so I'm G to the R is gonna be

84
00:03:09,320 --> 00:03:15,320
my random generator and I'm giving JH e

85
00:03:12,380 --> 00:03:16,760
to the rx my task is to find ax so what

86
00:03:15,320 --> 00:03:18,980
I can do if I have a fix discrete log

87
00:03:16,760 --> 00:03:20,870
adversary is I run this adversary energy

88
00:03:18,980 --> 00:03:23,420
to the R I run it again on G to the rx

89
00:03:20,870 --> 00:03:27,709
get once I have R and rx it's trivial to

90
00:03:23,420 --> 00:03:29,780
find X ok so fairly straightforward for

91
00:03:27,709 --> 00:03:30,770
CDH is another there's an equivalence

92
00:03:29,780 --> 00:03:32,600
that's a little bit harder than the

93
00:03:30,770 --> 00:03:34,190
discrete log equivalence I'm not going

94
00:03:32,600 --> 00:03:35,959
to go through it but I will I will point

95
00:03:34,190 --> 00:03:37,940
out that the folklore CDH equivalence

96
00:03:35,959 --> 00:03:39,709
actually requires knowing the totient of

97
00:03:37,940 --> 00:03:41,060
the group border ok so if it's a prime

98
00:03:39,709 --> 00:03:42,740
order group then just knowing the prime

99
00:03:41,060 --> 00:03:44,120
is good enough but if it's a composite

100
00:03:42,740 --> 00:03:45,790
order grouping you should know the

101
00:03:44,120 --> 00:03:49,130
factorization to make the CDH

102
00:03:45,790 --> 00:03:51,200
equivalence go through so this motivates

103
00:03:49,130 --> 00:03:52,579
looking at this question in several

104
00:03:51,200 --> 00:03:53,899
different settings depending on what you

105
00:03:52,580 --> 00:03:57,470
know about the group order or its

106
00:03:53,900 --> 00:03:59,360
totient so you can actually consider 3

107
00:03:57,470 --> 00:04:00,680
different settings the first setting is

108
00:03:59,360 --> 00:04:02,930
known prime order this is the most

109
00:04:00,680 --> 00:04:04,970
common setting you can also consider

110
00:04:02,930 --> 00:04:07,040
unknown prime order and finally you can

111
00:04:04,970 --> 00:04:09,830
consider known composite order but

112
00:04:07,040 --> 00:04:11,299
unknown factorization ok and the simple

113
00:04:09,830 --> 00:04:13,640
discrete log equivalence goes through in

114
00:04:11,300 --> 00:04:15,020
all cases but for CDH the equivalence

115
00:04:13,640 --> 00:04:17,510
actually only holds the known prime

116
00:04:15,020 --> 00:04:19,340
order setting and in all the remaining

117
00:04:17,510 --> 00:04:21,320
boxes it's unclear if we have an

118
00:04:19,339 --> 00:04:22,820
equivalence or a separation between the

119
00:04:21,320 --> 00:04:26,840
fixed and random generator versions of

120
00:04:22,820 --> 00:04:29,469
these problems ok so this is maybe the

121
00:04:26,840 --> 00:04:31,969
state of the art before this work and so

122
00:04:29,470 --> 00:04:34,279
as a first as a

123
00:04:31,969 --> 00:04:36,469
result maybe as a form of cryptographic

124
00:04:34,279 --> 00:04:38,029
housekeeping we give black box

125
00:04:36,469 --> 00:04:40,369
operations between the fixed and random

126
00:04:38,029 --> 00:04:42,499
generator versions in and all the

127
00:04:40,369 --> 00:04:45,409
remaining boxes where we didn't know

128
00:04:42,499 --> 00:04:46,909
equivalences okay so I'm not going to go

129
00:04:45,409 --> 00:04:49,039
into detail about how we actually do

130
00:04:46,909 --> 00:04:50,329
these black box separations but they

131
00:04:49,039 --> 00:04:52,369
sort of go through in the way you would

132
00:04:50,329 --> 00:04:54,769
expect these black box operations to go

133
00:04:52,369 --> 00:04:56,149
through basically you prove that in the

134
00:04:54,769 --> 00:04:57,889
generic group model if you're equipped

135
00:04:56,149 --> 00:04:59,239
with an with an Oracle that solves a

136
00:04:57,889 --> 00:05:00,799
fixed generator version of your problem

137
00:04:59,239 --> 00:05:03,099
it's still hard for you to solve the

138
00:05:00,799 --> 00:05:05,959
random generator version of your problem

139
00:05:03,099 --> 00:05:07,339
okay so in some cases for the cd8

140
00:05:05,959 --> 00:05:09,079
separations we need to make further

141
00:05:07,339 --> 00:05:11,629
computational assumptions for the black

142
00:05:09,079 --> 00:05:16,639
box operation to go through but for DDH

143
00:05:11,629 --> 00:05:20,749
our separations are unconditional okay

144
00:05:16,639 --> 00:05:22,399
so this raises the question of well we

145
00:05:20,749 --> 00:05:23,659
have these black box separations and it

146
00:05:22,399 --> 00:05:25,849
might be possible now that you actually

147
00:05:23,659 --> 00:05:28,248
have concrete groups that realize these

148
00:05:25,849 --> 00:05:31,998
separations and you can ask well what

149
00:05:28,249 --> 00:05:34,039
would happen if we had such groups so as

150
00:05:31,999 --> 00:05:35,239
an observation I'm calling it

151
00:05:34,039 --> 00:05:37,789
observation because it's not actually

152
00:05:35,239 --> 00:05:39,169
terribly hard to figure this out but if

153
00:05:37,789 --> 00:05:42,110
you have a group where a fixed generator

154
00:05:39,169 --> 00:05:43,878
CDH is easy the random generator CDH is

155
00:05:42,110 --> 00:05:46,039
hard it turns out this implies something

156
00:05:43,879 --> 00:05:48,319
called a self by linear map so this is a

157
00:05:46,039 --> 00:05:49,909
group equipped with a pairing II where

158
00:05:48,319 --> 00:05:52,279
the source groups and the and the target

159
00:05:49,909 --> 00:05:54,139
groups are all the same group and self

160
00:05:52,279 --> 00:05:56,089
by linear maps are actually an

161
00:05:54,139 --> 00:05:58,459
incredibly powerful cryptographic object

162
00:05:56,089 --> 00:05:59,719
and they're known to imply for example a

163
00:05:58,459 --> 00:06:02,239
multi-party non-interactive key

164
00:05:59,719 --> 00:06:04,159
agreement and which is something that's

165
00:06:02,239 --> 00:06:08,299
only known from from from multi linear

166
00:06:04,159 --> 00:06:09,349
maps or from from obfuscation so sulfa

167
00:06:08,299 --> 00:06:10,998
linear maps for this really powerful

168
00:06:09,349 --> 00:06:12,949
object is an open it's an open question

169
00:06:10,999 --> 00:06:14,989
to construct them and it turns out that

170
00:06:12,949 --> 00:06:17,059
if you have a group where CDH is split

171
00:06:14,989 --> 00:06:19,339
so that fixed CD age is easy but random

172
00:06:17,059 --> 00:06:23,119
CDH is hard you can build from that a

173
00:06:19,339 --> 00:06:25,849
self L in your map okay so how do we

174
00:06:23,119 --> 00:06:28,399
interpret this result I don't want this

175
00:06:25,849 --> 00:06:30,199
to be I don't want this to say that well

176
00:06:28,399 --> 00:06:31,819
the way that we should look for self by

177
00:06:30,199 --> 00:06:34,639
linear maps is to is to look for a group

178
00:06:31,819 --> 00:06:36,499
or C DHS splits maybe the other way to

179
00:06:34,639 --> 00:06:38,479
interpret this may be the more plausible

180
00:06:36,499 --> 00:06:40,219
interpretation of this result is really

181
00:06:38,479 --> 00:06:43,039
that on any group were comfortable

182
00:06:40,219 --> 00:06:44,729
making a CDH assumption it would be

183
00:06:43,039 --> 00:06:46,259
really really surprising if there were

184
00:06:44,729 --> 00:06:48,058
split that you know while there is a

185
00:06:46,259 --> 00:06:49,889
black bloc separation it seems quite

186
00:06:48,059 --> 00:06:52,650
unlikely that fix edho would actually be

187
00:06:49,889 --> 00:06:54,539
easy but random CDH be hard on any of

188
00:06:52,650 --> 00:07:01,080
the groups that were comfortable

189
00:06:54,539 --> 00:07:02,460
assuming CDH on but before I go on I

190
00:07:01,080 --> 00:07:06,029
should mention that we have analogous

191
00:07:02,460 --> 00:07:08,248
results for the DDH setting so we're

192
00:07:06,029 --> 00:07:10,199
similar sorts of results for DDH we show

193
00:07:08,249 --> 00:07:12,719
that if a group has fixed EDH being easy

194
00:07:10,199 --> 00:07:14,879
but random DDH being hard this actually

195
00:07:12,719 --> 00:07:20,849
implies a simple black box construction

196
00:07:14,879 --> 00:07:23,580
of identity based encryption okay so for

197
00:07:20,849 --> 00:07:25,050
the rest of this talk and sort of in a

198
00:07:23,580 --> 00:07:26,909
change gears and look at a few other

199
00:07:25,050 --> 00:07:28,110
settings in which this this fixed versus

200
00:07:26,909 --> 00:07:32,039
random distinction is particularly

201
00:07:28,110 --> 00:07:33,930
important okay so the first thing we're

202
00:07:32,039 --> 00:07:35,520
going to look at is the fixed versus

203
00:07:33,930 --> 00:07:37,499
random distinction in the setting of

204
00:07:35,520 --> 00:07:41,308
generic preprocessing adversaries on

205
00:07:37,499 --> 00:07:43,469
group based assumptions okay so in

206
00:07:41,309 --> 00:07:46,050
pre-processing attacks in particular on

207
00:07:43,469 --> 00:07:48,509
discrete log we have attacks that

208
00:07:46,050 --> 00:07:51,330
working in two phases okay so first we

209
00:07:48,509 --> 00:07:53,639
have this online phase where an attacker

210
00:07:51,330 --> 00:07:55,109
is given computationally unbounded or a

211
00:07:53,639 --> 00:07:58,169
copy actually unbounded attacker is

212
00:07:55,110 --> 00:08:00,120
given complete access to some group with

213
00:07:58,169 --> 00:08:02,969
some some known fixed generator level G

214
00:08:00,120 --> 00:08:04,319
and in this offline phase the the

215
00:08:02,969 --> 00:08:06,240
attacker is trying to compute the most

216
00:08:04,319 --> 00:08:09,419
useful advice that will help it in the

217
00:08:06,240 --> 00:08:11,430
future to solve discrete log instances

218
00:08:09,419 --> 00:08:13,349
online okay so it's going to come up

219
00:08:11,430 --> 00:08:15,509
with this s bit advice string and the

220
00:08:13,349 --> 00:08:16,830
online phase now the attacker is going

221
00:08:15,509 --> 00:08:19,349
to be computationally bounded it will

222
00:08:16,830 --> 00:08:21,719
have some time bounty and this attacker

223
00:08:19,349 --> 00:08:24,360
is going to be given fresh discrete log

224
00:08:21,719 --> 00:08:26,729
samples so G G to the X with respect to

225
00:08:24,360 --> 00:08:30,959
that same fixed generator G and its goal

226
00:08:26,729 --> 00:08:32,729
is to find 5x okay so this is a very

227
00:08:30,959 --> 00:08:34,889
popular setting in which to analyze

228
00:08:32,729 --> 00:08:36,839
generic attacks on discrete log because

229
00:08:34,889 --> 00:08:39,240
it it mirrors the situation's we we

230
00:08:36,839 --> 00:08:40,289
encounter in real life where we don't we

231
00:08:39,240 --> 00:08:42,419
only have a handful of cryptographic

232
00:08:40,289 --> 00:08:46,139
groups and we're often using the same

233
00:08:42,419 --> 00:08:48,089
generator over and over again okay so

234
00:08:46,139 --> 00:08:49,500
it's known that for pre-processing

235
00:08:48,089 --> 00:08:51,630
attacks in discrete log that you can

236
00:08:49,500 --> 00:08:53,670
actually do fairly well when you have s

237
00:08:51,630 --> 00:08:55,920
bit advice so if you have a group of

238
00:08:53,670 --> 00:08:58,290
order n with s fitted vice and you have

239
00:08:55,920 --> 00:08:58,560
online time T you can solve a fixed n

240
00:08:58,290 --> 00:09:00,630
rate

241
00:08:58,560 --> 00:09:03,750
discrete log problem with probability s

242
00:09:00,630 --> 00:09:05,040
t squared over n so for comparison if

243
00:09:03,750 --> 00:09:07,680
you don't have any advice the best you

244
00:09:05,040 --> 00:09:10,110
can do is T squared over n ok so this is

245
00:09:07,680 --> 00:09:17,790
your probability of solving discrete log

246
00:09:10,110 --> 00:09:18,960
given given the resources SN T so it

247
00:09:17,790 --> 00:09:20,640
turns out that this result is actually

248
00:09:18,960 --> 00:09:22,800
tight so this is shown by Corrigan

249
00:09:20,640 --> 00:09:24,420
Gibson Cogan last year euro Crips that a

250
00:09:22,800 --> 00:09:27,029
generic adversary does succeed with

251
00:09:24,420 --> 00:09:28,500
probability at most as T squared over n

252
00:09:27,029 --> 00:09:32,700
this is tied up to apply logarithmic

253
00:09:28,500 --> 00:09:34,140
factors but observation this work is

254
00:09:32,700 --> 00:09:35,850
that this doesn't fully resolve the

255
00:09:34,140 --> 00:09:39,029
complexity of solving to speak log

256
00:09:35,850 --> 00:09:40,500
problems in particular this is only

257
00:09:39,029 --> 00:09:43,020
tight if you look at fixed generator

258
00:09:40,500 --> 00:09:45,510
discrete log if you look at the random

259
00:09:43,020 --> 00:09:48,720
generator setting the the success

260
00:09:45,510 --> 00:09:51,720
probability is changed slightly so why

261
00:09:48,720 --> 00:09:53,640
is that well when you're given a random

262
00:09:51,720 --> 00:09:56,550
dinner generator discrete log instance

263
00:09:53,640 --> 00:09:58,230
you have two ways of solving it one way

264
00:09:56,550 --> 00:10:01,709
of solving it is to use your fixed

265
00:09:58,230 --> 00:10:03,420
generator pre-processing attack but then

266
00:10:01,710 --> 00:10:04,500
you have to run it twice right the

267
00:10:03,420 --> 00:10:06,209
remember that to solve a random

268
00:10:04,500 --> 00:10:08,220
generator discrete log problem given a

269
00:10:06,210 --> 00:10:09,930
fixed generator adversary or accelerator

270
00:10:08,220 --> 00:10:11,250
Oracle you have to run it twice but you

271
00:10:09,930 --> 00:10:14,459
write on the generator then you run it

272
00:10:11,250 --> 00:10:15,900
on on the group element right so you can

273
00:10:14,460 --> 00:10:17,220
either solve two fixed generator

274
00:10:15,900 --> 00:10:19,620
discrete log instances which then

275
00:10:17,220 --> 00:10:20,970
squares your success probability or you

276
00:10:19,620 --> 00:10:23,250
can ignore the pre-processing advice

277
00:10:20,970 --> 00:10:25,080
entirely and just use the best algorithm

278
00:10:23,250 --> 00:10:26,880
that doesn't use pre-processing which is

279
00:10:25,080 --> 00:10:28,380
the the baby step try and stop algorithm

280
00:10:26,880 --> 00:10:31,980
and that succeeds it's probably T

281
00:10:28,380 --> 00:10:35,040
squared over N okay so in the fixed

282
00:10:31,980 --> 00:10:36,900
generator discrete log setting your

283
00:10:35,040 --> 00:10:38,670
success probability is st squared over n

284
00:10:36,900 --> 00:10:40,680
but in the random generator setting this

285
00:10:38,670 --> 00:10:43,020
actually drops to this t squared over n

286
00:10:40,680 --> 00:10:46,620
plus s squared T to the fourth over N

287
00:10:43,020 --> 00:10:50,550
squared probability and when this is

288
00:10:46,620 --> 00:10:53,450
your advantage the the s T squared bound

289
00:10:50,550 --> 00:10:56,040
of of ck 18 is no longer tight okay so

290
00:10:53,450 --> 00:10:57,810
in this work what we do is we close this

291
00:10:56,040 --> 00:10:59,670
bound we close ass gap and we give a

292
00:10:57,810 --> 00:11:01,469
matching bound showing that a generic

293
00:10:59,670 --> 00:11:03,510
adversary solves random generator to

294
00:11:01,470 --> 00:11:05,640
sweet log with probability at most T

295
00:11:03,510 --> 00:11:08,160
squared over n plus s squared T to the

296
00:11:05,640 --> 00:11:09,920
fourth over N squared I should mention

297
00:11:08,160 --> 00:11:12,030
that the the techniques we use to

298
00:11:09,920 --> 00:11:14,370
[Music]

299
00:11:12,030 --> 00:11:16,170
this pound come from the the pre

300
00:11:14,370 --> 00:11:17,790
sampling techniques of karate dota and

301
00:11:16,170 --> 00:11:22,079
grow their that have been developed for

302
00:11:17,790 --> 00:11:24,000
the past two years and in the paper we

303
00:11:22,080 --> 00:11:25,560
have analogous type bounds for the

304
00:11:24,000 --> 00:11:27,780
computational diffie-hellman problem and

305
00:11:25,560 --> 00:11:29,239
the takeaway from this is that well

306
00:11:27,780 --> 00:11:31,439
everything else being equal

307
00:11:29,240 --> 00:11:33,270
pre-processing attacks don't do quite as

308
00:11:31,440 --> 00:11:35,280
well in the in the random generator

309
00:11:33,270 --> 00:11:37,410
setting okay and maybe this is sort of

310
00:11:35,280 --> 00:11:38,760
intuitive because well pre-processing is

311
00:11:37,410 --> 00:11:40,290
really taking advantage of the fact that

312
00:11:38,760 --> 00:11:42,000
you're always going to be solving these

313
00:11:40,290 --> 00:11:43,560
discrete log problems with respect to

314
00:11:42,000 --> 00:11:45,210
the same generator and once you make

315
00:11:43,560 --> 00:11:46,530
that generator random your success

316
00:11:45,210 --> 00:11:50,400
probability is going to drop a little

317
00:11:46,530 --> 00:11:52,050
bit okay so this is maybe a spiritually

318
00:11:50,400 --> 00:11:57,959
a little bit similar to just salting

319
00:11:52,050 --> 00:11:59,910
right okay so for the last part of this

320
00:11:57,960 --> 00:12:01,290
talk and when it shift gears again and

321
00:11:59,910 --> 00:12:02,640
look at a totally different setting

322
00:12:01,290 --> 00:12:04,980
where the fixed versus random generator

323
00:12:02,640 --> 00:12:05,880
distinction matters and this is probably

324
00:12:04,980 --> 00:12:07,770
the setting where the distinction

325
00:12:05,880 --> 00:12:09,480
matters the most

326
00:12:07,770 --> 00:12:12,350
okay so this is oh this is for

327
00:12:09,480 --> 00:12:14,640
assumptions over non-uniform exponents

328
00:12:12,350 --> 00:12:16,650
okay so I should say what I mean this is

329
00:12:14,640 --> 00:12:19,050
not really a common phrase sometimes

330
00:12:16,650 --> 00:12:21,720
over non-uniform exponents but if you

331
00:12:19,050 --> 00:12:23,280
think about CDH and DDH right all the

332
00:12:21,720 --> 00:12:27,180
secret exponents in these assumptions

333
00:12:23,280 --> 00:12:28,770
are uniformly random from zq but

334
00:12:27,180 --> 00:12:31,620
sometimes we encounter assumptions in

335
00:12:28,770 --> 00:12:33,240
crypto that don't have this property and

336
00:12:31,620 --> 00:12:37,650
in particular this one assumption due to

337
00:12:33,240 --> 00:12:40,820
kinetic as DD h2 so this is exactly the

338
00:12:37,650 --> 00:12:43,740
same form of standard EDH except now

339
00:12:40,820 --> 00:12:46,530
this exponent X can be chosen from an

340
00:12:43,740 --> 00:12:48,390
arbitrary well spread distribution okay

341
00:12:46,530 --> 00:12:51,120
so y&z are still chosen uniformly at

342
00:12:48,390 --> 00:12:53,610
random but X this assumption has to hold

343
00:12:51,120 --> 00:12:55,080
for X as long as it's drawn from any

344
00:12:53,610 --> 00:12:57,120
distribution that has super logarithmic

345
00:12:55,080 --> 00:12:59,670
entropy okay so it's a very strong

346
00:12:57,120 --> 00:13:01,020
assumption it's saying for any

347
00:12:59,670 --> 00:13:02,400
distribution you can come up with we

348
00:13:01,020 --> 00:13:06,750
need this computational distinguished

349
00:13:02,400 --> 00:13:09,449
ability to hold and so why do we

350
00:13:06,750 --> 00:13:11,130
formulate this this sort of

351
00:13:09,450 --> 00:13:13,680
nasty-looking assumption well it turns

352
00:13:11,130 --> 00:13:16,500
out that DD h2 implies obfuscation for

353
00:13:13,680 --> 00:13:19,439
point functions okay so before I go on

354
00:13:16,500 --> 00:13:21,690
let me just define what that is point

355
00:13:19,440 --> 00:13:23,460
function obfuscation so point functions

356
00:13:21,690 --> 00:13:24,790
are our functions that accept on exactly

357
00:13:23,460 --> 00:13:27,250
one points so

358
00:13:24,790 --> 00:13:29,380
the the Cy X is a point function it has

359
00:13:27,250 --> 00:13:31,240
this hard-coded string why it accepts if

360
00:13:29,380 --> 00:13:33,400
it's input is equal to Y otherwise it

361
00:13:31,240 --> 00:13:35,080
rejects and the point function

362
00:13:33,400 --> 00:13:37,209
obfuscation the goal is to give out an

363
00:13:35,080 --> 00:13:39,100
implementation of this program of this

364
00:13:37,210 --> 00:13:41,710
function but the implementation

365
00:13:39,100 --> 00:13:43,240
shouldn't leak why okay so you should be

366
00:13:41,710 --> 00:13:44,980
able to evaluate this point function on

367
00:13:43,240 --> 00:13:47,140
any X that you want and learn whether or

368
00:13:44,980 --> 00:13:48,550
not it matched Y but the only way that

369
00:13:47,140 --> 00:13:51,040
you should actually be able to learn Y

370
00:13:48,550 --> 00:13:52,030
is if you happen to guess it yourself so

371
00:13:51,040 --> 00:13:55,300
you can think of point function

372
00:13:52,030 --> 00:13:58,060
obfuscation is sort of a secure way to

373
00:13:55,300 --> 00:13:59,109
do password checking for example okay so

374
00:13:58,060 --> 00:14:02,260
it has a lot of interesting

375
00:13:59,110 --> 00:14:04,330
cryptographic applications and it turns

376
00:14:02,260 --> 00:14:05,770
out that to achieve the the strongest

377
00:14:04,330 --> 00:14:07,690
possible definitions of point function

378
00:14:05,770 --> 00:14:09,970
alpha station for those of you familiar

379
00:14:07,690 --> 00:14:13,440
this is just a worst-case virtual black

380
00:14:09,970 --> 00:14:15,820
box office keishon we showed that

381
00:14:13,440 --> 00:14:17,770
actually you need really really strong

382
00:14:15,820 --> 00:14:19,960
assumptions to build point function

383
00:14:17,770 --> 00:14:21,370
obfuscation so in some sense you do need

384
00:14:19,960 --> 00:14:22,690
these these strong assumptions i

385
00:14:21,370 --> 00:14:25,000
quantify overall well spread

386
00:14:22,690 --> 00:14:28,770
distributions okay so for better for

387
00:14:25,000 --> 00:14:28,770
worse these assumptions are here to stay

388
00:14:30,840 --> 00:14:34,810
so next I want to talk about this thing

389
00:14:33,190 --> 00:14:37,090
called non malleable point function

390
00:14:34,810 --> 00:14:39,640
obfuscation so this idea of non valuable

391
00:14:37,090 --> 00:14:42,520
obfuscation was first proposed by caneta

392
00:14:39,640 --> 00:14:44,560
and Veria in 2008 but recently this has

393
00:14:42,520 --> 00:14:47,170
gotten some attention and in particular

394
00:14:44,560 --> 00:14:49,359
in last year zero crypt kurma got scan

395
00:14:47,170 --> 00:14:50,770
yogev observed that well kinetise

396
00:14:49,360 --> 00:14:53,260
original construction of point function

397
00:14:50,770 --> 00:14:56,500
obfuscation from b d h2 suffers from

398
00:14:53,260 --> 00:14:57,910
this malleability problem ok so if I'm

399
00:14:56,500 --> 00:15:00,640
an adversary and I see an obfuscation

400
00:14:57,910 --> 00:15:02,620
see why it's possible to actually Maul

401
00:15:00,640 --> 00:15:03,390
this into an option that accepts on a

402
00:15:02,620 --> 00:15:06,220
related point

403
00:15:03,390 --> 00:15:09,100
ok so CY accepts if your inputs equal to

404
00:15:06,220 --> 00:15:10,780
Y I can actually change that to an

405
00:15:09,100 --> 00:15:13,360
obfuscation that accepts on some related

406
00:15:10,780 --> 00:15:15,010
F of Y ok I can't learn why myself

407
00:15:13,360 --> 00:15:16,360
because these are security the

408
00:15:15,010 --> 00:15:18,400
obfuscator but I can mall the

409
00:15:16,360 --> 00:15:20,890
construction and so the goal in

410
00:15:18,400 --> 00:15:23,199
forgotten yoga is to is to change the

411
00:15:20,890 --> 00:15:24,880
construction so that it's not malleable

412
00:15:23,200 --> 00:15:29,100
and it particularly focus on the class

413
00:15:24,880 --> 00:15:29,100
of polynomial modeling functions

414
00:15:30,100 --> 00:15:35,440
so to prove security they formulate this

415
00:15:33,820 --> 00:15:38,350
new assumption called the strong power

416
00:15:35,440 --> 00:15:40,120
DDH assumption it has this the standard

417
00:15:38,350 --> 00:15:41,800
quantification over all well spread

418
00:15:40,120 --> 00:15:43,690
distributions and again this is

419
00:15:41,800 --> 00:15:47,709
necessary to prove security of a point

420
00:15:43,690 --> 00:15:50,050
function obfuscation and the assumption

421
00:15:47,710 --> 00:15:52,030
states that as long as X is drawn from a

422
00:15:50,050 --> 00:15:53,520
well spread distribution then the

423
00:15:52,030 --> 00:15:55,150
following group elements are

424
00:15:53,520 --> 00:15:57,310
computationally indistinguishable from

425
00:15:55,150 --> 00:15:59,560
random group elements so it's G to the X

426
00:15:57,310 --> 00:16:01,079
G to the X squared G to the X cubed all

427
00:15:59,560 --> 00:16:03,640
the way up to G to the X to the K and

428
00:16:01,080 --> 00:16:05,200
the assumption is that as long as X has

429
00:16:03,640 --> 00:16:06,850
enough entropy and you can't distinguish

430
00:16:05,200 --> 00:16:11,110
between that and just random group

431
00:16:06,850 --> 00:16:12,760
elements okay and so this assumption it

432
00:16:11,110 --> 00:16:16,540
turns out implies non valuable point

433
00:16:12,760 --> 00:16:18,910
function obfuscation so in this work we

434
00:16:16,540 --> 00:16:20,680
take a closer look at this construction

435
00:16:18,910 --> 00:16:23,709
in a particular this the strong power

436
00:16:20,680 --> 00:16:26,140
DDH assumption and we make the following

437
00:16:23,710 --> 00:16:28,330
observation that this assumption is

438
00:16:26,140 --> 00:16:31,569
really really sensitive to whether or

439
00:16:28,330 --> 00:16:34,180
not the generator is fixed or random so

440
00:16:31,570 --> 00:16:35,980
in particular if the generator is a

441
00:16:34,180 --> 00:16:39,189
fixed generator the assumptions actually

442
00:16:35,980 --> 00:16:41,560
false and for a sort of silly reason if

443
00:16:39,190 --> 00:16:43,030
the generator is false then when we're

444
00:16:41,560 --> 00:16:44,709
quantifying overall well-spread

445
00:16:43,030 --> 00:16:45,850
distributions we have to consider

446
00:16:44,710 --> 00:16:48,910
distributions that are going to

447
00:16:45,850 --> 00:16:51,010
conditioned on the choice of G okay so

448
00:16:48,910 --> 00:16:53,230
if a distribution can condition on the

449
00:16:51,010 --> 00:16:55,960
choice of G you can just simply pick any

450
00:16:53,230 --> 00:16:59,350
X you can randomly pick an X such that G

451
00:16:55,960 --> 00:17:00,790
to the X begins with a zero okay and and

452
00:16:59,350 --> 00:17:02,200
then this is trivially distinguishable

453
00:17:00,790 --> 00:17:03,660
from a random group element and you

454
00:17:02,200 --> 00:17:07,660
don't even need to use the higher powers

455
00:17:03,660 --> 00:17:09,339
right so this assumption is false when

456
00:17:07,660 --> 00:17:12,640
the generator is fixed and with a

457
00:17:09,339 --> 00:17:17,290
generator is random it's not obviously

458
00:17:12,640 --> 00:17:19,420
false but the problem is that if you

459
00:17:17,290 --> 00:17:21,159
look closely at the K Y 18 construction

460
00:17:19,420 --> 00:17:23,050
you'll realize that you actually have to

461
00:17:21,160 --> 00:17:24,459
use a fixed generator if you try to

462
00:17:23,050 --> 00:17:27,129
switch to a random generator an

463
00:17:24,459 --> 00:17:28,180
adversary can actually Maul it and if

464
00:17:27,130 --> 00:17:30,520
you want to put the random generator

465
00:17:28,180 --> 00:17:32,530
into crs well in the crs setting the

466
00:17:30,520 --> 00:17:33,970
this result was already known and so the

467
00:17:32,530 --> 00:17:35,830
goal here was was to give a standard

468
00:17:33,970 --> 00:17:37,840
model construction of non valuable point

469
00:17:35,830 --> 00:17:39,429
function obfuscation but the underlying

470
00:17:37,840 --> 00:17:42,250
assumption can't follow - the generator

471
00:17:39,430 --> 00:17:45,220
is fixed okay

472
00:17:42,250 --> 00:17:48,340
so we communicated this issue to take

473
00:17:45,220 --> 00:17:49,480
hey why 18 and in response they they've

474
00:17:48,340 --> 00:17:51,490
updated their assumption they have a

475
00:17:49,480 --> 00:17:53,560
totally qualitatively different

476
00:17:51,490 --> 00:17:54,940
assumption and from that they can get a

477
00:17:53,560 --> 00:17:57,790
construction of non valuable point

478
00:17:54,940 --> 00:18:01,180
obfuscation in this work we took a

479
00:17:57,790 --> 00:18:02,560
slightly different approach we we gave

480
00:18:01,180 --> 00:18:04,480
our own we gave our own assumption

481
00:18:02,560 --> 00:18:06,909
that's of Isis for non valuable point

482
00:18:04,480 --> 00:18:08,370
obfuscation and I'll give sort of a toy

483
00:18:06,910 --> 00:18:10,720
version of our assumption on this slide

484
00:18:08,370 --> 00:18:12,250
the assumption just says that for any X

485
00:18:10,720 --> 00:18:14,830
drawn from a well spread distribution

486
00:18:12,250 --> 00:18:16,840
and for any a and our randomly sampled

487
00:18:14,830 --> 00:18:20,169
from Z Q that you can't distinguish

488
00:18:16,840 --> 00:18:22,570
between a so this this exponent a in the

489
00:18:20,170 --> 00:18:25,390
clear and G raise to the ax plus x

490
00:18:22,570 --> 00:18:29,770
squared and a in a random group element

491
00:18:25,390 --> 00:18:32,110
and the point of designing an assumption

492
00:18:29,770 --> 00:18:35,020
of this form is that by by giving this

493
00:18:32,110 --> 00:18:38,379
this random a as but by injecting this

494
00:18:35,020 --> 00:18:41,830
random a you defeat the ability to to

495
00:18:38,380 --> 00:18:44,050
design a distribution on X that can that

496
00:18:41,830 --> 00:18:46,149
can make G to the ax plus x squared

497
00:18:44,050 --> 00:18:47,500
distinguishable from random right you

498
00:18:46,150 --> 00:18:48,880
can try to strip off this a if you

499
00:18:47,500 --> 00:18:50,170
divide it out the problem is that then

500
00:18:48,880 --> 00:18:53,200
the x squared term is gonna have a 1

501
00:18:50,170 --> 00:18:54,880
over a multiplying it and this a was was

502
00:18:53,200 --> 00:18:59,590
randomly chosen independently of you

503
00:18:54,880 --> 00:19:01,090
fixing the well spread distribution so

504
00:18:59,590 --> 00:19:04,139
it turns out this this is sufficient for

505
00:19:01,090 --> 00:19:07,290
non valuable point office keishon and

506
00:19:04,140 --> 00:19:10,210
but when you introduce new assumptions

507
00:19:07,290 --> 00:19:13,510
it's very important to justify them in

508
00:19:10,210 --> 00:19:14,770
the generic group model right so you

509
00:19:13,510 --> 00:19:16,150
know it's not clear whether or not we

510
00:19:14,770 --> 00:19:18,700
should trust these new assumptions and

511
00:19:16,150 --> 00:19:19,890
maybe when you when you pose new

512
00:19:18,700 --> 00:19:21,730
assumptions that are very very ad hoc

513
00:19:19,890 --> 00:19:23,590
sort of the only way that you can

514
00:19:21,730 --> 00:19:25,270
inspire confidence is to show that no

515
00:19:23,590 --> 00:19:27,790
generic adversaries can break your

516
00:19:25,270 --> 00:19:29,560
assumption okay so in particular we

517
00:19:27,790 --> 00:19:31,300
proved that our assumption holds in the

518
00:19:29,560 --> 00:19:32,830
generic group model but we have to be

519
00:19:31,300 --> 00:19:34,720
really really careful about the way that

520
00:19:32,830 --> 00:19:35,980
we prove security because we don't want

521
00:19:34,720 --> 00:19:37,270
to fall into the same trap that makes

522
00:19:35,980 --> 00:19:39,700
the the previous version of this

523
00:19:37,270 --> 00:19:41,590
assumption false so in particular when

524
00:19:39,700 --> 00:19:43,090
we do the generic group model proof you

525
00:19:41,590 --> 00:19:44,860
have to you have to allow the

526
00:19:43,090 --> 00:19:46,750
distribution the the choice of the well

527
00:19:44,860 --> 00:19:48,760
spread distribution to be fixed after

528
00:19:46,750 --> 00:19:50,410
the generic group labelings are fixed

529
00:19:48,760 --> 00:19:52,390
right so in the generic group model you

530
00:19:50,410 --> 00:19:54,490
have a representation or some bit string

531
00:19:52,390 --> 00:19:56,050
for every single group element and you

532
00:19:54,490 --> 00:19:59,110
have to allow the distribution itself

533
00:19:56,050 --> 00:20:00,970
to see the see the truth table of the

534
00:19:59,110 --> 00:20:03,669
labeling function before you specify the

535
00:20:00,970 --> 00:20:05,440
distribution okay and if you don't allow

536
00:20:03,670 --> 00:20:06,730
this to happen well then you can

537
00:20:05,440 --> 00:20:08,170
actually prove blatantly false

538
00:20:06,730 --> 00:20:10,510
assumptions hold in the generic group

539
00:20:08,170 --> 00:20:11,740
model such as g2 the entropic axis

540
00:20:10,510 --> 00:20:16,540
indistinguishable from a random group

541
00:20:11,740 --> 00:20:18,850
element and so along the way a only way

542
00:20:16,540 --> 00:20:20,710
of proving that our assumption holds

543
00:20:18,850 --> 00:20:21,879
holds in the generic group model we

544
00:20:20,710 --> 00:20:23,560
looked at a whole bunch of other proof

545
00:20:21,880 --> 00:20:25,930
from the literature that had justified

546
00:20:23,560 --> 00:20:27,790
these non-uniform assumptions before the

547
00:20:25,930 --> 00:20:31,030
generic group model and it turns out

548
00:20:27,790 --> 00:20:34,330
that all the existing proofs of DD h2 so

549
00:20:31,030 --> 00:20:37,570
kinetics strong DDH assumption make this

550
00:20:34,330 --> 00:20:38,980
have the same issue of the the generic

551
00:20:37,570 --> 00:20:40,149
group labeling function being sampled

552
00:20:38,980 --> 00:20:42,490
independently of the well spread

553
00:20:40,150 --> 00:20:44,530
distribution and so while the conclusion

554
00:20:42,490 --> 00:20:46,750
of all these proofs is is not false that

555
00:20:44,530 --> 00:20:48,670
indeed DD h2 is hard in the generic

556
00:20:46,750 --> 00:20:50,650
group model you could use these same

557
00:20:48,670 --> 00:20:53,950
proof strategies to prove blatantly

558
00:20:50,650 --> 00:20:55,150
false assumptions so one of the

559
00:20:53,950 --> 00:20:56,890
contributions of a work is sort of

560
00:20:55,150 --> 00:20:58,150
pointing out this issue in generic group

561
00:20:56,890 --> 00:21:00,040
proofs whenever you have to deal with

562
00:20:58,150 --> 00:21:03,340
these assumptions that quantify overall

563
00:21:00,040 --> 00:21:04,750
well spread distributions and towards

564
00:21:03,340 --> 00:21:09,159
remedying this we give a new generic

565
00:21:04,750 --> 00:21:11,530
group model proof that BD h 2 holds DD h

566
00:21:09,160 --> 00:21:13,330
2 holds against generic adversaries and

567
00:21:11,530 --> 00:21:14,740
we make sure that the the well spread

568
00:21:13,330 --> 00:21:18,790
distribution is picked after the

569
00:21:14,740 --> 00:21:20,330
labeling is fixed so that's it for my

570
00:21:18,790 --> 00:21:28,370
talk thanks for your attention

571
00:21:20,330 --> 00:21:39,570
[Applause]

572
00:21:28,370 --> 00:21:42,270
thank you questions are you aware of any

573
00:21:39,570 --> 00:21:45,389
crypt analysis of like concrete groups

574
00:21:42,270 --> 00:21:47,580
under this is in with this assumption

575
00:21:45,390 --> 00:21:50,310
whether this is true for any concrete

576
00:21:47,580 --> 00:21:52,230
groups the DDH to assumption or what you

577
00:21:50,310 --> 00:21:55,040
came up with in your work whether it's

578
00:21:52,230 --> 00:21:57,690
true yeah yeah for like a concrete group

579
00:21:55,040 --> 00:22:00,930
has there been any analysis of this

580
00:21:57,690 --> 00:22:02,220
assumption about concrete groups I'm not

581
00:22:00,930 --> 00:22:07,860
aware of this I mean I guess you would

582
00:22:02,220 --> 00:22:10,230
be more aware of it me so I don't think

583
00:22:07,860 --> 00:22:12,000
there is any concrete group that is this

584
00:22:10,230 --> 00:22:16,050
assumption it was shown to be false

585
00:22:12,000 --> 00:22:20,130
where you know did eh is old so I as far

586
00:22:16,050 --> 00:22:22,470
as they know maybe other people just

587
00:22:20,130 --> 00:22:24,510
curious he said you prove abound in the

588
00:22:22,470 --> 00:22:26,280
generic group model I wasn't sure

589
00:22:24,510 --> 00:22:28,770
whether it was entropic DDH ER in tropic

590
00:22:26,280 --> 00:22:31,379
it's been log or whatever it was in

591
00:22:28,770 --> 00:22:33,720
tropic DDH basically oh so we proved two

592
00:22:31,380 --> 00:22:35,940
different assumptions model so yeah one

593
00:22:33,720 --> 00:22:37,260
of them is DDH two and one is this a new

594
00:22:35,940 --> 00:22:39,180
assumption that we had to formulate

595
00:22:37,260 --> 00:22:44,760
finer I was curious about the DDH to

596
00:22:39,180 --> 00:22:46,230
what kind of concrete bound you got yet

597
00:22:44,760 --> 00:22:47,460
and of what you would what you would get

598
00:22:46,230 --> 00:22:48,750
but actually I'm just yeah I'm curious

599
00:22:47,460 --> 00:22:50,940
what kind of concrete bound together and

600
00:22:48,750 --> 00:22:52,500
whether you know whether it's tight yeah

601
00:22:50,940 --> 00:22:55,070
I don't know how to top my head and talk

602
00:22:52,500 --> 00:22:55,070
about them

603
00:22:57,990 --> 00:23:16,120
tell me please who is prime ku ku is

604
00:23:04,630 --> 00:23:18,790
prime number Q so for ya say it's prime

605
00:23:16,120 --> 00:23:20,199
here yeah for this whole talk assume

606
00:23:18,790 --> 00:23:22,629
that all the group orders are prime

607
00:23:20,200 --> 00:23:31,090
except for on the one slide when they

608
00:23:22,630 --> 00:23:31,960
weren't prime ok let's thank the speaker

609
00:23:31,090 --> 00:23:36,238
good

610
00:23:31,960 --> 00:23:36,239
[Applause]

