1
00:00:04,910 --> 00:00:09,590
all right so thank you for the

2
00:00:07,040 --> 00:00:11,389
introduction today I will be talking

3
00:00:09,590 --> 00:00:13,730
about lattice based on knowledge proofs

4
00:00:11,389 --> 00:00:16,279
and in particular our new techniques to

5
00:00:13,730 --> 00:00:18,500
get shorter and faster constructions and

6
00:00:16,279 --> 00:00:20,930
their applications and this is a joint

7
00:00:18,500 --> 00:00:23,570
work with my supervisors Ron Steinfeld

8
00:00:20,930 --> 00:00:27,770
Joseph new from Monash University and

9
00:00:23,570 --> 00:00:28,970
donkey Leo from Tata 61 ok so you have

10
00:00:27,770 --> 00:00:30,230
already been introduced as you don't

11
00:00:28,970 --> 00:00:33,230
know what's closed so I will just skip

12
00:00:30,230 --> 00:00:34,460
this one particular slide so the type of

13
00:00:33,230 --> 00:00:36,078
zero knowledge proof that we

14
00:00:34,460 --> 00:00:38,210
particularly focused on in this work is

15
00:00:36,079 --> 00:00:39,710
called a sigma protocol so it has this

16
00:00:38,210 --> 00:00:42,230
three more structure commitment

17
00:00:39,710 --> 00:00:45,200
challenge and response it has slightly

18
00:00:42,230 --> 00:00:46,580
different properties and the important

19
00:00:45,200 --> 00:00:48,770
thing is you have also seen in the

20
00:00:46,580 --> 00:00:50,239
previous talk is that we can easily make

21
00:00:48,770 --> 00:00:54,680
this non interactive using the so-called

22
00:00:50,240 --> 00:00:56,810
Fiat semi-realistic and in general these

23
00:00:54,680 --> 00:00:59,630
completeness is quite easy to satisfy

24
00:00:56,810 --> 00:01:01,550
and for the zero knowledge property in

25
00:00:59,630 --> 00:01:02,900
the lattice based crypto setting we have

26
00:01:01,550 --> 00:01:04,670
standard techniques like rejection

27
00:01:02,900 --> 00:01:07,579
sampling so we can use those ones and

28
00:01:04,670 --> 00:01:11,420
again the particular property that we

29
00:01:07,579 --> 00:01:13,579
focus on is this sound so let's define

30
00:01:11,420 --> 00:01:15,920
what we mean by this so this will be

31
00:01:13,579 --> 00:01:18,740
parameterized play something okay some

32
00:01:15,920 --> 00:01:21,679
variable K and we will call it k plus 1

33
00:01:18,740 --> 00:01:26,329
special sounds this means that we will

34
00:01:21,679 --> 00:01:30,139
be giving some algorithm these accepting

35
00:01:26,329 --> 00:01:33,529
protocol transcripts see X and Z and C's

36
00:01:30,139 --> 00:01:35,060
will be common for all these sets excise

37
00:01:33,530 --> 00:01:37,819
will be different these challenges will

38
00:01:35,060 --> 00:01:41,149
be different and we want to extract a

39
00:01:37,819 --> 00:01:43,069
witness W efficiently that satisfies the

40
00:01:41,149 --> 00:01:46,310
relation that people is trying to prove

41
00:01:43,069 --> 00:01:48,740
ok so if we can do this we will say that

42
00:01:46,310 --> 00:01:50,600
the protocol is k plus 1 special son and

43
00:01:48,740 --> 00:01:55,310
this will mean that we want to build

44
00:01:50,600 --> 00:01:57,919
this so-called extractor and it turns

45
00:01:55,310 --> 00:02:00,409
out that if the prover can guess this

46
00:01:57,920 --> 00:02:02,090
challenge X in advance then he can

47
00:02:00,409 --> 00:02:03,740
actually prepare this commitment in a

48
00:02:02,090 --> 00:02:05,389
way that the verified always accept

49
00:02:03,740 --> 00:02:08,269
whether the statement is true or not

50
00:02:05,389 --> 00:02:09,859
whether he know to it persona so this

51
00:02:08,270 --> 00:02:12,530
means that the larger the challenge that

52
00:02:09,860 --> 00:02:15,200
you choose the better sounds currently

53
00:02:12,530 --> 00:02:17,150
you will get you can ideally you would

54
00:02:15,200 --> 00:02:17,708
want to have a challenge set of size and

55
00:02:17,150 --> 00:02:22,780
magnitude

56
00:02:17,709 --> 00:02:24,549
or 128 or 256 and there is also

57
00:02:22,780 --> 00:02:26,980
commitment schemes I will not define it

58
00:02:24,549 --> 00:02:28,930
very formally but the important thing

59
00:02:26,980 --> 00:02:31,840
here is that this is just a function a

60
00:02:28,930 --> 00:02:33,579
homomorphic function where the inputs

61
00:02:31,840 --> 00:02:35,049
must be short okay so this is the

62
00:02:33,579 --> 00:02:37,930
requirement for lattice based commitment

63
00:02:35,049 --> 00:02:39,430
schemes just we can just assume that we

64
00:02:37,930 --> 00:02:41,739
have a additive level of a commitment

65
00:02:39,430 --> 00:02:44,349
scheme where the input for whatever goes

66
00:02:41,739 --> 00:02:46,079
into this commitment bracket must be

67
00:02:44,349 --> 00:02:49,540
short okay

68
00:02:46,079 --> 00:02:50,799
and there are in general two types of

69
00:02:49,540 --> 00:02:52,480
zero-knowledge close in the lattice base

70
00:02:50,799 --> 00:02:54,849
crypto the first one is the so-called

71
00:02:52,480 --> 00:02:57,040
combinatorial truth which is based on

72
00:02:54,849 --> 00:02:59,200
John's protocol and the challenge set

73
00:02:57,040 --> 00:03:00,790
for these protocols are very small there

74
00:02:59,200 --> 00:03:03,700
are only three elements in general and

75
00:03:00,790 --> 00:03:05,918
the advantage here is that you can prove

76
00:03:03,700 --> 00:03:07,599
very complex relations but the

77
00:03:05,919 --> 00:03:09,909
disadvantage is that since the challenge

78
00:03:07,599 --> 00:03:11,138
that is small you need to repeat the

79
00:03:09,909 --> 00:03:13,450
protocol many many times

80
00:03:11,139 --> 00:03:15,909
something like hundreds of times to get

81
00:03:13,450 --> 00:03:17,500
a negligible soundness error which means

82
00:03:15,909 --> 00:03:21,010
that you will get a very slow and very

83
00:03:17,500 --> 00:03:23,379
long proof okay and the second type is

84
00:03:21,010 --> 00:03:25,989
called algebraic proof so these are

85
00:03:23,379 --> 00:03:28,000
based on the Norse protocol and the

86
00:03:25,989 --> 00:03:30,819
challenge set in this case can be

87
00:03:28,000 --> 00:03:32,979
basically as large as you want and the

88
00:03:30,819 --> 00:03:35,198
advantage here is that you do not need

89
00:03:32,979 --> 00:03:38,199
to repeat the protocol so the proof that

90
00:03:35,199 --> 00:03:40,479
you get will be very short and efficient

91
00:03:38,199 --> 00:03:42,280
in terms of computation so you get this

92
00:03:40,479 --> 00:03:44,769
so-called one-shot proof and in the

93
00:03:42,280 --> 00:03:46,449
former case you get this what multiples

94
00:03:44,769 --> 00:03:49,359
because you have protocol repetitions

95
00:03:46,449 --> 00:03:51,970
and a disadvantage in the algebraic

96
00:03:49,359 --> 00:03:54,340
proof setting is that there are more

97
00:03:51,970 --> 00:03:57,430
limited in types of proofs that we can

98
00:03:54,340 --> 00:03:59,439
achieve so far and additionally the

99
00:03:57,430 --> 00:04:01,299
relation that you will be proving may be

100
00:03:59,439 --> 00:04:03,939
relaxed or approximate and I will tell

101
00:04:01,299 --> 00:04:08,349
you more about this so our focus in this

102
00:04:03,939 --> 00:04:10,030
talk is on the later type okay so if you

103
00:04:08,349 --> 00:04:12,220
look at the general structure of a

104
00:04:10,030 --> 00:04:14,439
standard proof of knowledge which is

105
00:04:12,220 --> 00:04:16,269
often called the heme with a board in

106
00:04:14,439 --> 00:04:18,219
lattice based crypto setting because the

107
00:04:16,269 --> 00:04:19,810
prover aborts with some probability

108
00:04:18,220 --> 00:04:22,900
which is not important for our purposes

109
00:04:19,810 --> 00:04:25,360
that's for zero knowledge property what

110
00:04:22,900 --> 00:04:28,900
we what happens is the prover has a

111
00:04:25,360 --> 00:04:31,320
commitment c1 which is an input so this

112
00:04:28,900 --> 00:04:33,359
input also shared by the verifier

113
00:04:31,320 --> 00:04:36,480
and so in this representation I'm just

114
00:04:33,360 --> 00:04:38,460
sending it publicly so we have C 0 and C

115
00:04:36,480 --> 00:04:40,050
1 is the first commitment we get a

116
00:04:38,460 --> 00:04:42,239
challenge and we have a response and

117
00:04:40,050 --> 00:04:45,540
then the verifier checks this will in

118
00:04:42,240 --> 00:04:47,880
linear relation is C 0 plus XC 1 is

119
00:04:45,540 --> 00:04:49,740
equal to some commitments and also since

120
00:04:47,880 --> 00:04:52,290
the input of the commitment must be

121
00:04:49,740 --> 00:04:55,320
short the verifier makes sure that there

122
00:04:52,290 --> 00:04:59,730
are upper bounded by some real numbers

123
00:04:55,320 --> 00:05:01,950
ok so in this setting how we prove

124
00:04:59,730 --> 00:05:04,470
special soundness is that if you assume

125
00:05:01,950 --> 00:05:06,900
that you have to accepting protocol

126
00:05:04,470 --> 00:05:10,110
transcripts with the same initial steps

127
00:05:06,900 --> 00:05:11,909
of C 0 and C 1 is common X challenges

128
00:05:10,110 --> 00:05:14,220
are different so we have X 0 and X 1

129
00:05:11,910 --> 00:05:17,070
here and we have accepting responses

130
00:05:14,220 --> 00:05:19,080
with respect to X 2 and X 1 so you will

131
00:05:17,070 --> 00:05:22,050
get these relations these equations

132
00:05:19,080 --> 00:05:24,419
satisfied and if you subtract the later

133
00:05:22,050 --> 00:05:27,540
one from the former one you get this

134
00:05:24,420 --> 00:05:30,030
relation ok so far so good

135
00:05:27,540 --> 00:05:31,890
so we know that this thing is small we

136
00:05:30,030 --> 00:05:37,469
checked because we check that F and that

137
00:05:31,890 --> 00:05:39,690
are short vectors ok so at this point we

138
00:05:37,470 --> 00:05:42,690
have this relation again here you can do

139
00:05:39,690 --> 00:05:44,520
two approaches the first one is this

140
00:05:42,690 --> 00:05:47,100
multiset approach so you want to get rid

141
00:05:44,520 --> 00:05:49,260
of this extra challenge difference here

142
00:05:47,100 --> 00:05:51,390
what you need to do is you need to

143
00:05:49,260 --> 00:05:53,460
multiply both sides by the inverse of

144
00:05:51,390 --> 00:05:54,780
this challenge difference and you need

145
00:05:53,460 --> 00:05:56,700
to make sure that this challenge

146
00:05:54,780 --> 00:05:58,799
difference inverse is small because it

147
00:05:56,700 --> 00:06:00,810
will go into the commitment box so you

148
00:05:58,800 --> 00:06:02,310
need to make sure that that's small so

149
00:06:00,810 --> 00:06:04,140
in this case you will not be able to

150
00:06:02,310 --> 00:06:05,790
change it choose a very large challenge

151
00:06:04,140 --> 00:06:07,860
set so you will need to repeat the

152
00:06:05,790 --> 00:06:10,400
protocol so you will get an inefficient

153
00:06:07,860 --> 00:06:12,930
protocol but what you end up with is a

154
00:06:10,400 --> 00:06:15,780
exact relation or very close to exact

155
00:06:12,930 --> 00:06:18,750
list and in the second approach you just

156
00:06:15,780 --> 00:06:21,539
be happy with what you got ok so you

157
00:06:18,750 --> 00:06:24,750
have a relaxed relation here but you try

158
00:06:21,540 --> 00:06:26,940
to handle this relaxation so the

159
00:06:24,750 --> 00:06:29,490
relaxation factor that we have here is a

160
00:06:26,940 --> 00:06:32,610
challenge difference x1 minus x0 and

161
00:06:29,490 --> 00:06:35,430
this has been already used in the words

162
00:06:32,610 --> 00:06:37,770
initiated by the Wachowski and his

163
00:06:35,430 --> 00:06:39,870
signatures and in this case you will not

164
00:06:37,770 --> 00:06:42,510
have any protocol repetitions so this

165
00:06:39,870 --> 00:06:43,800
will be very efficient but the relation

166
00:06:42,510 --> 00:06:44,710
that you prove will be relaxed or

167
00:06:43,800 --> 00:06:46,660
approximate

168
00:06:44,710 --> 00:06:51,969
so this is what we call the is x1 minus

169
00:06:46,660 --> 00:06:53,919
x0 is little taxation factor alright so

170
00:06:51,970 --> 00:06:56,259
going back to this picture we can see

171
00:06:53,919 --> 00:07:01,150
that this relation checked by the

172
00:06:56,259 --> 00:07:03,699
verifier is linear in X so this is a

173
00:07:01,150 --> 00:07:06,070
just degree 1 relation and if you want

174
00:07:03,699 --> 00:07:08,500
to prove more complex relations that's

175
00:07:06,070 --> 00:07:10,960
where our contribution comes in so I

176
00:07:08,500 --> 00:07:13,600
will just list first our contributions

177
00:07:10,960 --> 00:07:16,000
so our first contribution is once your

178
00:07:13,600 --> 00:07:18,820
proof techniques for nonlinear relations

179
00:07:16,000 --> 00:07:21,130
for a degree K which might be bigger

180
00:07:18,820 --> 00:07:22,509
than 1 so this is like a generalization

181
00:07:21,130 --> 00:07:25,000
of this via Jumeirah with a boards

182
00:07:22,509 --> 00:07:27,340
technique and then we also have to speed

183
00:07:25,000 --> 00:07:28,990
up techniques one is a CRT packing

184
00:07:27,340 --> 00:07:31,570
technique supporting intercept

185
00:07:28,990 --> 00:07:33,639
operations and the other one is the

186
00:07:31,570 --> 00:07:35,979
so-called entity friendly tools that

187
00:07:33,639 --> 00:07:37,150
allows you to do fast computation and

188
00:07:35,979 --> 00:07:39,310
then of course we have we have

189
00:07:37,150 --> 00:07:42,008
applications of these tools to a bunch

190
00:07:39,310 --> 00:07:45,580
of protocols by combining proof one out

191
00:07:42,009 --> 00:07:47,229
of many prefer inge proof and we have an

192
00:07:45,580 --> 00:07:49,690
application of these protocols to a ring

193
00:07:47,229 --> 00:07:52,389
signature and we also have a preliminary

194
00:07:49,690 --> 00:07:54,550
application to anonymous credentials so

195
00:07:52,389 --> 00:07:57,159
in this talk I will focus on the first

196
00:07:54,550 --> 00:08:02,199
two techniques and I will refer you to

197
00:07:57,159 --> 00:08:04,389
the paper for the other ones and just to

198
00:08:02,199 --> 00:08:06,610
give you an idea of how effective these

199
00:08:04,389 --> 00:08:09,960
techniques are so this is a comparison

200
00:08:06,610 --> 00:08:12,310
between post quantum ring signatures and

201
00:08:09,960 --> 00:08:14,770
at this point you can just assume that

202
00:08:12,310 --> 00:08:17,110
ring signature is a signature where you

203
00:08:14,770 --> 00:08:18,789
have a bunch of users and one user is

204
00:08:17,110 --> 00:08:20,919
trying to sign on behalf of all these

205
00:08:18,789 --> 00:08:23,020
users and somehow the signature length

206
00:08:20,919 --> 00:08:24,639
is related to this group size which is

207
00:08:23,020 --> 00:08:26,859
called ring size in the case of ring

208
00:08:24,639 --> 00:08:28,900
signatures so these are the sublinear

209
00:08:26,860 --> 00:08:31,030
sized ones you can see that so too is

210
00:08:28,900 --> 00:08:33,250
the smallest possible ring size and we

211
00:08:31,030 --> 00:08:34,689
go up to 2 to the power 21 and you can

212
00:08:33,250 --> 00:08:37,630
see that they are not scaling linearly

213
00:08:34,690 --> 00:08:41,110
and we have a dramatic improvement over

214
00:08:37,630 --> 00:08:43,299
these existing schemes so these two DRS

215
00:08:41,110 --> 00:08:45,160
and k'kaw are symmetric key based

216
00:08:43,299 --> 00:08:48,310
schemes and the other ones are lattice

217
00:08:45,160 --> 00:08:51,010
based schemes and if we compare our work

218
00:08:48,310 --> 00:08:53,199
to linear size works that are based on

219
00:08:51,010 --> 00:08:55,060
standard lattice assumptions we can see

220
00:08:53,200 --> 00:08:57,270
that for the smallest possible ring size

221
00:08:55,060 --> 00:08:59,729
of two we are at the same

222
00:08:57,270 --> 00:09:01,410
efficiency level with the linear sized

223
00:08:59,730 --> 00:09:06,240
proposals which are tailored to be

224
00:09:01,410 --> 00:09:08,550
efficient for small ring size okay so

225
00:09:06,240 --> 00:09:11,610
let's get more technical and try to see

226
00:09:08,550 --> 00:09:14,640
try to get an intuition behind this one

227
00:09:11,610 --> 00:09:16,710
shot proof technique right so in this

228
00:09:14,640 --> 00:09:18,840
case we will be generalizing this proof

229
00:09:16,710 --> 00:09:20,790
of knowledge so instead of sending to

230
00:09:18,840 --> 00:09:23,340
commitments the probe will mouse and k

231
00:09:20,790 --> 00:09:25,980
plus 1 commitments and the rest will be

232
00:09:23,340 --> 00:09:28,650
the same and the verifier will not check

233
00:09:25,980 --> 00:09:30,980
a degree k relation okay so that's why

234
00:09:28,650 --> 00:09:33,209
we have this parameter K which is the

235
00:09:30,980 --> 00:09:35,640
degree of the relation that's being

236
00:09:33,210 --> 00:09:37,380
checked by the verifier and again we

237
00:09:35,640 --> 00:09:40,050
have these bound checks but the

238
00:09:37,380 --> 00:09:44,310
important part is this big like a

239
00:09:40,050 --> 00:09:46,199
relation and first of all why do we care

240
00:09:44,310 --> 00:09:48,359
about this relation or this structure

241
00:09:46,200 --> 00:09:51,240
this is because in the discrete

242
00:09:48,360 --> 00:09:53,100
logarithm settings the very advanced and

243
00:09:51,240 --> 00:09:55,380
efficient protocols which are introduced

244
00:09:53,100 --> 00:09:58,410
recently most notably this blood proof

245
00:09:55,380 --> 00:10:00,360
they make use they involve this degree k

246
00:09:58,410 --> 00:10:02,280
relations and this overall structure of

247
00:10:00,360 --> 00:10:05,130
course they do not have this bound check

248
00:10:02,280 --> 00:10:08,069
and it's much easier to deal with many

249
00:10:05,130 --> 00:10:10,350
of the problems but there is no solution

250
00:10:08,070 --> 00:10:12,270
in the lattice setting yet yeah and we

251
00:10:10,350 --> 00:10:13,890
are providing two solution so what we

252
00:10:12,270 --> 00:10:16,890
need to do is we need to prove a degree

253
00:10:13,890 --> 00:10:22,740
K relation and also we want to extract a

254
00:10:16,890 --> 00:10:24,660
valid opening this CK ok and we want to

255
00:10:22,740 --> 00:10:26,520
do this for a homomorphic lattice based

256
00:10:24,660 --> 00:10:30,600
commitment scheme and we want to do this

257
00:10:26,520 --> 00:10:33,390
in one show ok so we will try to build

258
00:10:30,600 --> 00:10:35,340
this witness extraction procedure so we

259
00:10:33,390 --> 00:10:38,699
will have an extractor and this is the

260
00:10:35,340 --> 00:10:40,830
overview of the protocol and in this

261
00:10:38,700 --> 00:10:44,580
case we will have k plus 1 commitments

262
00:10:40,830 --> 00:10:46,260
this is the first move and then we will

263
00:10:44,580 --> 00:10:47,910
give the extractor distinct challenge

264
00:10:46,260 --> 00:10:50,160
this K plus 1 distinct challenges and

265
00:10:47,910 --> 00:10:52,829
they are accepting responses so we know

266
00:10:50,160 --> 00:10:56,910
that this equation is satisfied for I

267
00:10:52,830 --> 00:11:00,080
from 0 up to K and we want to get an

268
00:10:56,910 --> 00:11:00,079
opening of seeking

269
00:11:01,130 --> 00:11:06,840
okay so we can write this system of

270
00:11:03,750 --> 00:11:08,760
equations as a matrix times vector so we

271
00:11:06,840 --> 00:11:11,220
have am a matrix constructed by

272
00:11:08,760 --> 00:11:13,710
challenges and a vector of commitments

273
00:11:11,220 --> 00:11:17,010
and their corresponding commitment

274
00:11:13,710 --> 00:11:20,430
computations and this is over some ring

275
00:11:17,010 --> 00:11:23,580
R and actually we know that this matrix

276
00:11:20,430 --> 00:11:25,589
is the so-called wonderment matrix okay

277
00:11:23,580 --> 00:11:27,420
we know the structure we know a few

278
00:11:25,590 --> 00:11:30,060
things about these wonderment matrix and

279
00:11:27,420 --> 00:11:31,829
just recall our goal is to get an

280
00:11:30,060 --> 00:11:33,839
opening of this seeking okay so

281
00:11:31,830 --> 00:11:36,450
basically we kind of want to get rid of

282
00:11:33,840 --> 00:11:37,580
this matrix here and somehow move it to

283
00:11:36,450 --> 00:11:41,640
the other side

284
00:11:37,580 --> 00:11:44,040
so obviously one clear one naive

285
00:11:41,640 --> 00:11:46,080
approach is to just multiply both sides

286
00:11:44,040 --> 00:11:48,120
by the inverse of this one don't want

287
00:11:46,080 --> 00:11:48,750
matrix and the inverse looks something

288
00:11:48,120 --> 00:11:51,840
like this

289
00:11:48,750 --> 00:11:54,780
okay so we have challenge differences in

290
00:11:51,840 --> 00:11:57,210
the denominator and again actually this

291
00:11:54,780 --> 00:11:59,970
is like the generalization of the

292
00:11:57,210 --> 00:12:02,100
problem that I mentioned before again we

293
00:11:59,970 --> 00:12:03,810
need if you want to compute this V

294
00:12:02,100 --> 00:12:05,580
inverse we need to make sure that

295
00:12:03,810 --> 00:12:10,859
challenge differences have short

296
00:12:05,580 --> 00:12:12,780
inverses so if you do that you one

297
00:12:10,860 --> 00:12:14,280
option is to use binary challenges but

298
00:12:12,780 --> 00:12:16,500
in this case you will only have two

299
00:12:14,280 --> 00:12:18,209
challenges and the other option is using

300
00:12:16,500 --> 00:12:21,540
this so-called monomial challenges and

301
00:12:18,210 --> 00:12:23,580
this was done at a CNS this year but

302
00:12:21,540 --> 00:12:25,050
again if you even if you use monomial

303
00:12:23,580 --> 00:12:26,760
challenges it will not be one shot

304
00:12:25,050 --> 00:12:28,560
because the challenge set will not be

305
00:12:26,760 --> 00:12:30,830
exponentially large so you will need to

306
00:12:28,560 --> 00:12:33,930
repeat the protocol so this is not the

307
00:12:30,830 --> 00:12:37,530
problem this is not the answer to our

308
00:12:33,930 --> 00:12:40,290
problem and going back to this relation

309
00:12:37,530 --> 00:12:42,060
again so we again want to relax our goal

310
00:12:40,290 --> 00:12:45,000
is in the case of this one-shot truth

311
00:12:42,060 --> 00:12:48,510
and instead of finding an opening of CK

312
00:12:45,000 --> 00:12:51,060
we want to add a relaxation factor in

313
00:12:48,510 --> 00:12:54,360
front of this commitment C okay so we

314
00:12:51,060 --> 00:12:57,030
need to find y mm r where y is some

315
00:12:54,360 --> 00:12:59,550
scalar in the ring and we want to have a

316
00:12:57,030 --> 00:13:02,819
D commitment of Y times C instead of

317
00:12:59,550 --> 00:13:06,290
just C and we need to make sure that

318
00:13:02,820 --> 00:13:10,020
this Y and also these m and r are short

319
00:13:06,290 --> 00:13:13,020
okay so we want to kind of eliminate

320
00:13:10,020 --> 00:13:13,680
this wonderment matrix V here but we do

321
00:13:13,020 --> 00:13:17,910
not want to

322
00:13:13,680 --> 00:13:20,219
see any investor and thankfully there is

323
00:13:17,910 --> 00:13:22,350
and we want this scalar so we want to

324
00:13:20,220 --> 00:13:24,870
find a matrix V prime such as when I

325
00:13:22,350 --> 00:13:29,520
multiply V Prime and V I should get some

326
00:13:24,870 --> 00:13:33,060
scale okay and thankfully from linear

327
00:13:29,520 --> 00:13:35,610
algebra we have this beautiful fact so

328
00:13:33,060 --> 00:13:37,800
if you multiply a square matrix by the

329
00:13:35,610 --> 00:13:39,750
edgy bit of that matrix you get the

330
00:13:37,800 --> 00:13:43,459
determinant of the matrix times the

331
00:13:39,750 --> 00:13:46,230
identity matrix okay and using this fact

332
00:13:43,459 --> 00:13:49,260
we can multiply both sides of this

333
00:13:46,230 --> 00:13:51,720
relation by the edge' bit of V so we

334
00:13:49,260 --> 00:13:53,520
will get this thing here so edgy bit of

335
00:13:51,720 --> 00:13:55,620
V times V will give you the determinant

336
00:13:53,520 --> 00:13:57,480
of V and on the right hand side you will

337
00:13:55,620 --> 00:13:59,490
get the educate of V we also the

338
00:13:57,480 --> 00:14:03,959
identity but then you multiply with air

339
00:13:59,490 --> 00:14:05,940
you just get a and this is the

340
00:14:03,959 --> 00:14:07,529
relaxation factor that you end up with

341
00:14:05,940 --> 00:14:10,680
so the determinant of the wonderment

342
00:14:07,529 --> 00:14:12,570
matrix is the relaxation factor and it

343
00:14:10,680 --> 00:14:15,060
has destructive it's just a product of

344
00:14:12,570 --> 00:14:17,339
challenge differences okay and this is a

345
00:14:15,060 --> 00:14:19,650
scaler enduring heart because all these

346
00:14:17,339 --> 00:14:22,860
excise or and x-rays are just some

347
00:14:19,650 --> 00:14:25,470
scalars in drink okay and if you

348
00:14:22,860 --> 00:14:28,020
actually put in K is equal to one which

349
00:14:25,470 --> 00:14:30,480
is the linear case you actually end up

350
00:14:28,020 --> 00:14:32,699
with x1 minus x0 is the relaxation

351
00:14:30,480 --> 00:14:35,760
factor and which is exactly the case

352
00:14:32,700 --> 00:14:37,290
that was a pro that was obtained in the

353
00:14:35,760 --> 00:14:41,240
previous work so we obtain the previous

354
00:14:37,290 --> 00:14:41,240
words as a special case of hard work

355
00:14:41,660 --> 00:14:46,829
okay and we also need to look at the

356
00:14:44,339 --> 00:14:48,839
quality of the witness and the quality

357
00:14:46,830 --> 00:14:51,360
means that we need to look at how short

358
00:14:48,839 --> 00:14:54,360
is the witness and in general we can

359
00:14:51,360 --> 00:14:57,300
support challenge sets of this form so

360
00:14:54,360 --> 00:15:00,089
with some certain degree D or D minus 1

361
00:14:57,300 --> 00:15:04,410
at most and some certain Hamming weight

362
00:15:00,089 --> 00:15:06,810
and some infinity knot and in particular

363
00:15:04,410 --> 00:15:08,400
you can make the challenge set example

364
00:15:06,810 --> 00:15:10,920
two to the pub which having set sides to

365
00:15:08,400 --> 00:15:13,829
be rooted about 256 by setting these

366
00:15:10,920 --> 00:15:16,979
parameters so this means that it the

367
00:15:13,829 --> 00:15:18,630
proof will be one shot and we have some

368
00:15:16,980 --> 00:15:20,310
generic results depending on what

369
00:15:18,630 --> 00:15:24,180
parameters you choose this depending on

370
00:15:20,310 --> 00:15:26,489
this dwp and the relation degree k so

371
00:15:24,180 --> 00:15:27,540
how good or how short witness that you

372
00:15:26,490 --> 00:15:30,990
are going to get

373
00:15:27,540 --> 00:15:31,949
and the good thing is that we do not

374
00:15:30,990 --> 00:15:33,630
need any

375
00:15:31,949 --> 00:15:36,180
invertibility condition on the

376
00:15:33,630 --> 00:15:38,430
challenges this means that V is

377
00:15:36,180 --> 00:15:40,800
wonderment matrix can even be singular

378
00:15:38,430 --> 00:15:43,050
and you can use the so called entity

379
00:15:40,800 --> 00:15:45,689
from the modulus Q because you do not

380
00:15:43,050 --> 00:15:47,639
need to restrict your modulus to be of

381
00:15:45,690 --> 00:15:51,050
special form so that the challenges

382
00:15:47,639 --> 00:15:51,050
challenge differences are invertible

383
00:15:51,709 --> 00:15:56,790
alright so this is the first part and

384
00:15:54,750 --> 00:15:58,920
the second part is the CRT packing

385
00:15:56,790 --> 00:16:02,040
technique so I'll just try to give you

386
00:15:58,920 --> 00:16:03,930
an intuition behind this so going back

387
00:16:02,040 --> 00:16:05,699
to this proofs of knowledge they

388
00:16:03,930 --> 00:16:08,638
actually make use of these what we call

389
00:16:05,699 --> 00:16:10,529
an encoding or some message okay

390
00:16:08,639 --> 00:16:13,470
so do we define the encoding of some

391
00:16:10,529 --> 00:16:16,170
message M under the challenge X as X

392
00:16:13,470 --> 00:16:19,949
times M plus some random masking value

393
00:16:16,170 --> 00:16:22,349
Rho okay and let's suppose that we are

394
00:16:19,949 --> 00:16:27,209
working over this cyclotomic ring our Q

395
00:16:22,350 --> 00:16:30,209
and F is an element of this our Q and if

396
00:16:27,209 --> 00:16:32,910
you choose to appropriately you can make

397
00:16:30,209 --> 00:16:35,760
this X to the power D plus 1 separate

398
00:16:32,910 --> 00:16:38,760
into s factors each of them will be of

399
00:16:35,760 --> 00:16:41,370
degree D over s so s is a power of 2 and

400
00:16:38,760 --> 00:16:43,649
D is also a power of 2 and in this case

401
00:16:41,370 --> 00:16:47,040
using the Chinese remainder theorem this

402
00:16:43,649 --> 00:16:49,019
our Q will be isomorphic to is s rings

403
00:16:47,040 --> 00:16:52,019
or fields depending on whether these pis

404
00:16:49,019 --> 00:16:55,110
are irreducible or not and we can

405
00:16:52,019 --> 00:16:59,069
actually use this CRT mapping to encode

406
00:16:55,110 --> 00:17:00,870
in different spots multiple messages so

407
00:16:59,069 --> 00:17:02,189
this has already been used in the

408
00:17:00,870 --> 00:17:04,770
context of fully homomorphic encryption

409
00:17:02,190 --> 00:17:06,360
and we are providing an application of

410
00:17:04,770 --> 00:17:09,750
this in the context of zero knowledge

411
00:17:06,359 --> 00:17:12,418
proof so everything here is mod Q so I

412
00:17:09,750 --> 00:17:15,770
will just skip saying what Q and in this

413
00:17:12,419 --> 00:17:20,309
case this CR T of M will be equal to M

414
00:17:15,770 --> 00:17:23,879
reduced of each is polynomial P is okay

415
00:17:20,309 --> 00:17:27,569
so we can try to encode multiple

416
00:17:23,880 --> 00:17:33,750
messages in a single F of this form

417
00:17:27,569 --> 00:17:37,408
using this CRT CRT mapping and let's do

418
00:17:33,750 --> 00:17:39,299
a first trial so we just put so let's

419
00:17:37,409 --> 00:17:40,400
just denote CRT inverse by these

420
00:17:39,299 --> 00:17:44,450
brackets

421
00:17:40,400 --> 00:17:47,240
so we can input we can set em to be the

422
00:17:44,450 --> 00:17:49,520
CRT inverse of these Mis and one of the

423
00:17:47,240 --> 00:17:51,950
MS and we just multiply it by a

424
00:17:49,520 --> 00:17:54,980
challenge X and add some random asking

425
00:17:51,950 --> 00:17:58,420
value so this is an encoding each of

426
00:17:54,980 --> 00:18:01,550
these things in different CRT slots and

427
00:17:58,420 --> 00:18:03,470
so this is so far so good but how do we

428
00:18:01,550 --> 00:18:07,280
do inter spot operations so for example

429
00:18:03,470 --> 00:18:10,130
if I want to add an encoding of m1 plus

430
00:18:07,280 --> 00:18:12,770
an encoding of em - how do I do this so

431
00:18:10,130 --> 00:18:15,559
if you just extract so if you compute F

432
00:18:12,770 --> 00:18:17,600
mode key I for each I so you can do this

433
00:18:15,559 --> 00:18:21,110
because key is are public so you will

434
00:18:17,600 --> 00:18:24,500
get X I times mi plus Rho I but this is

435
00:18:21,110 --> 00:18:27,919
an encoding of mi under X I and these

436
00:18:24,500 --> 00:18:29,630
draw eyes and X PI are the CRT spots of

437
00:18:27,920 --> 00:18:32,510
these random masking value and the

438
00:18:29,630 --> 00:18:35,620
challenge so now we have lost two

439
00:18:32,510 --> 00:18:39,050
homomorphic properties because mi is

440
00:18:35,620 --> 00:18:42,050
encoded under X I and MJ is encoded

441
00:18:39,050 --> 00:18:46,790
under X J so you may not be able to do

442
00:18:42,050 --> 00:18:50,659
additions or multiplications unless X is

443
00:18:46,790 --> 00:18:53,990
equal to XJ okay so if you want to do

444
00:18:50,660 --> 00:18:56,600
inter spot operations our idea is to

445
00:18:53,990 --> 00:18:59,330
choose the challenge X so that it has

446
00:18:56,600 --> 00:19:02,510
the same polynomial in all the CRT spots

447
00:18:59,330 --> 00:19:06,230
so it's just it's just X and X in all

448
00:19:02,510 --> 00:19:08,210
the CRT spots so this means that X mod P

449
00:19:06,230 --> 00:19:11,690
I is equal to X prime for all the eyes

450
00:19:08,210 --> 00:19:15,740
and the degree of the challenge must be

451
00:19:11,690 --> 00:19:17,390
short as smaller than D over s and now

452
00:19:15,740 --> 00:19:20,300
the extracted and coatings which we

453
00:19:17,390 --> 00:19:22,880
denote by F I here will be F naught P is

454
00:19:20,300 --> 00:19:25,580
and mod Q as well and each of them will

455
00:19:22,880 --> 00:19:30,020
be an encoding under X and you can do

456
00:19:25,580 --> 00:19:31,970
these inter slot operations as as the

457
00:19:30,020 --> 00:19:34,820
way you wish okay and this is computable

458
00:19:31,970 --> 00:19:37,850
by anyone that has access to F and these

459
00:19:34,820 --> 00:19:40,428
pis and which are altered public okay

460
00:19:37,850 --> 00:19:43,280
and we have an application of this to

461
00:19:40,429 --> 00:19:45,500
arrange proof so the general idea for

462
00:19:43,280 --> 00:19:46,700
arrange proof is the proo knowledge of

463
00:19:45,500 --> 00:19:49,700
for example if you are doing at least

464
00:19:46,700 --> 00:19:52,580
one 64 bits you prove knowledge of 64

465
00:19:49,700 --> 00:19:53,590
bits so these be eyes and you show that

466
00:19:52,580 --> 00:19:55,870
these bits

467
00:19:53,590 --> 00:19:58,270
that you know construct some integer

468
00:19:55,870 --> 00:20:01,330
value okay and you use the homomorphic

469
00:19:58,270 --> 00:20:03,639
properties to do it so in this case we

470
00:20:01,330 --> 00:20:07,149
need to send these encoding 64 encoding

471
00:20:03,640 --> 00:20:10,960
for HP eyes and we can see that each of

472
00:20:07,150 --> 00:20:12,580
them since this F I is in this r2 each

473
00:20:10,960 --> 00:20:16,990
of them will cost something like D times

474
00:20:12,580 --> 00:20:19,480
log cubits so from a shortness

475
00:20:16,990 --> 00:20:23,440
perspective you want to choose a small D

476
00:20:19,480 --> 00:20:25,780
because each encoding is is a factor of

477
00:20:23,440 --> 00:20:27,370
D as a factor of T and from a

478
00:20:25,780 --> 00:20:29,560
computation perspective you want to

479
00:20:27,370 --> 00:20:31,780
choose the large so that we can use this

480
00:20:29,560 --> 00:20:35,649
ring substructure to do efficient

481
00:20:31,780 --> 00:20:37,600
computation so our idea is to first you

482
00:20:35,650 --> 00:20:41,020
find D prime to optimize the proof

483
00:20:37,600 --> 00:20:44,500
length and then you find D required for

484
00:20:41,020 --> 00:20:46,210
the security and then you use a CRT

485
00:20:44,500 --> 00:20:48,580
packing techniques the CRT packing

486
00:20:46,210 --> 00:20:51,280
techniques with s slots where s is equal

487
00:20:48,580 --> 00:20:54,189
to D over D prime okay but this means

488
00:20:51,280 --> 00:20:56,260
that we will work in this degree D

489
00:20:54,190 --> 00:20:58,570
polynomial so you can do fast

490
00:20:56,260 --> 00:21:00,970
computation and you will use challenges

491
00:20:58,570 --> 00:21:04,240
of degree D Prime and you can pack s

492
00:21:00,970 --> 00:21:07,750
bits in a single encoding and each one

493
00:21:04,240 --> 00:21:10,810
will cost D log Q over and if you divide

494
00:21:07,750 --> 00:21:13,750
by s because we have s load you will get

495
00:21:10,810 --> 00:21:16,270
D prime effectively D prime times log Q

496
00:21:13,750 --> 00:21:18,820
is the effective cost for each and

497
00:21:16,270 --> 00:21:21,850
coding of the bit okay so this is

498
00:21:18,820 --> 00:21:23,860
optimal in terms of the storage cost and

499
00:21:21,850 --> 00:21:26,020
we actively get overall faster

500
00:21:23,860 --> 00:21:31,149
computation because we have here working

501
00:21:26,020 --> 00:21:33,700
in a larger degree ring and this is a

502
00:21:31,150 --> 00:21:36,400
comparison between the range proofs so

503
00:21:33,700 --> 00:21:38,350
this C artifact one is our results and

504
00:21:36,400 --> 00:21:40,600
if you compare it to a hypothetical

505
00:21:38,350 --> 00:21:43,000
scheme which is optimized for proof

506
00:21:40,600 --> 00:21:45,340
length you can see that the proof

507
00:21:43,000 --> 00:21:48,250
lengths are very close so the gap is

508
00:21:45,340 --> 00:21:51,159
only because the ring size in our case

509
00:21:48,250 --> 00:21:54,120
needs to be multiple of 512 that's why

510
00:21:51,160 --> 00:21:56,980
we have a gap be a small gap between the

511
00:21:54,120 --> 00:21:59,560
proof sizes but if you look at the

512
00:21:56,980 --> 00:22:01,960
degree D and also the number of FFT

513
00:21:59,560 --> 00:22:05,830
level supported we have much faster

514
00:22:01,960 --> 00:22:06,610
computation overall and some open

515
00:22:05,830 --> 00:22:08,949
questions

516
00:22:06,610 --> 00:22:10,570
is of course one thing is applications

517
00:22:08,950 --> 00:22:12,760
of these new techniques to other zero

518
00:22:10,570 --> 00:22:13,779
knowledge proof and also their

519
00:22:12,760 --> 00:22:16,779
replication to higher-level

520
00:22:13,779 --> 00:22:18,399
constructions and also other ways of

521
00:22:16,779 --> 00:22:21,399
exploiting this CRT packing technique

522
00:22:18,399 --> 00:22:25,439
and we also have more technical ones in

523
00:22:21,399 --> 00:22:28,059
the paper so I will stop here and just

524
00:22:25,440 --> 00:22:29,799
to mention that we also have an

525
00:22:28,059 --> 00:22:31,740
application of these advanced zero

526
00:22:29,799 --> 00:22:34,510
knowledge proof to a fourth quantum

527
00:22:31,740 --> 00:22:38,309
confidential transactions protocol which

528
00:22:34,510 --> 00:22:38,309
will hopefully be coming up soon

529
00:22:38,530 --> 00:22:47,559
[Applause]

530
00:22:48,450 --> 00:22:56,560
anybody has any question please come to

531
00:22:50,740 --> 00:22:57,940
the microphone note there are no

532
00:22:56,560 --> 00:23:00,340
questions from the audience I will ask

533
00:22:57,940 --> 00:23:02,340
my own question so zero knowledge has

534
00:23:00,340 --> 00:23:05,530
been attracting a lot of attention

535
00:23:02,340 --> 00:23:07,240
lately and consider for Standardization

536
00:23:05,530 --> 00:23:12,040
in these protocols we presented the seem

537
00:23:07,240 --> 00:23:15,850
to be potentially very efficient is is

538
00:23:12,040 --> 00:23:18,010
the zero knowledge standard processes

539
00:23:15,850 --> 00:23:20,949
and you've been looking into to see if

540
00:23:18,010 --> 00:23:22,990
your work may be of interest in that

541
00:23:20,950 --> 00:23:26,860
context yeah I think it may definitely

542
00:23:22,990 --> 00:23:28,600
be of interest in one question in the

543
00:23:26,860 --> 00:23:30,610
taka you were mostly focusing on the

544
00:23:28,600 --> 00:23:32,500
power of to set cyclotomic is there

545
00:23:30,610 --> 00:23:34,270
anything specific that you were using or

546
00:23:32,500 --> 00:23:37,240
is something that adapts easily to

547
00:23:34,270 --> 00:23:39,850
arbitrary cyclotomic I think it it works

548
00:23:37,240 --> 00:23:41,590
for any D but you need to optimize it

549
00:23:39,850 --> 00:23:44,100
depending on the protocol that you are

550
00:23:41,590 --> 00:23:47,709
using I think we use something like 512

551
00:23:44,100 --> 00:23:48,980
for the actual parameters so let's thank

552
00:23:47,710 --> 00:23:53,960
the speaker again

553
00:23:48,980 --> 00:23:53,960
[Applause]

