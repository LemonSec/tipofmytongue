1
00:00:05,850 --> 00:00:12,120
yes so thank you very introduction holy

2
00:00:08,189 --> 00:00:13,740
 so so thank you for the

3
00:00:12,120 --> 00:00:15,119
introduction so this is about the

4
00:00:13,740 --> 00:00:16,230
communication like CEO of special

5
00:00:15,119 --> 00:00:20,210
private Sandro section is with such

6
00:00:16,230 --> 00:00:24,450
gratitude gosh from most University and

7
00:00:20,210 --> 00:00:26,430
there's kind of this way yeah so this is

8
00:00:24,450 --> 00:00:27,840
me this paper basically deals with the

9
00:00:26,430 --> 00:00:30,410
privates at intersection problem where

10
00:00:27,840 --> 00:00:32,910
we have two parties Alice and Bob and

11
00:00:30,410 --> 00:00:35,969
each of those holds a set so in this

12
00:00:32,910 --> 00:00:37,828
case Ellis holds like the numbers 1 3 4

13
00:00:35,969 --> 00:00:39,210
8 9 and Bob calls some other numbers and

14
00:00:37,829 --> 00:00:40,739
they would like to determine which

15
00:00:39,210 --> 00:00:41,880
numbers they like which elements they

16
00:00:40,739 --> 00:00:43,890
have in common without revealing

17
00:00:41,880 --> 00:00:45,540
anything about the elements that they

18
00:00:43,890 --> 00:00:47,730
don't have in common so in this case

19
00:00:45,540 --> 00:00:49,649
both parties should learn 1/4 1/8 but

20
00:00:47,730 --> 00:00:52,769
Bob should not learn that Alice has 3 or

21
00:00:49,649 --> 00:00:54,540
9 or anything else about the set ok so

22
00:00:52,770 --> 00:00:56,399
this is the general psi problem and

23
00:00:54,540 --> 00:00:59,910
there were a lot of papers that kind of

24
00:00:56,399 --> 00:01:01,320
present more efficient construction for

25
00:00:59,910 --> 00:01:02,519
this and like asymptotically efficient

26
00:01:01,320 --> 00:01:04,049
construction practically efficient

27
00:01:02,520 --> 00:01:05,610
constructions and the two party setting

28
00:01:04,049 --> 00:01:09,479
multi-party setting like passive

29
00:01:05,610 --> 00:01:11,009
security active security and this

30
00:01:09,479 --> 00:01:13,859
problem is very popular because there

31
00:01:11,009 --> 00:01:15,889
are like plenty of applications so to

32
00:01:13,859 --> 00:01:21,869
just like recall some problem

33
00:01:15,889 --> 00:01:23,279
applications that I made up are so so

34
00:01:21,869 --> 00:01:26,429
for instance like if you have a

35
00:01:23,279 --> 00:01:27,929
fingerprint and you a fingerprint reader

36
00:01:26,429 --> 00:01:30,149
like you have a database of fingerprints

37
00:01:27,929 --> 00:01:31,649
and you have a fingerprint reader and it

38
00:01:30,149 --> 00:01:33,359
reads the fingerprint from the reader

39
00:01:31,649 --> 00:01:35,310
like you would like to check whether the

40
00:01:33,359 --> 00:01:37,499
two fingerprints have a large

41
00:01:35,310 --> 00:01:39,209
intersection okay

42
00:01:37,499 --> 00:01:40,560
another application is that like maybe

43
00:01:39,209 --> 00:01:42,810
you have two lovebirds and they have

44
00:01:40,560 --> 00:01:44,999
like some dating preferences and they

45
00:01:42,810 --> 00:01:46,619
would only like they would like to know

46
00:01:44,999 --> 00:01:48,598
whether the intersection of their dating

47
00:01:46,619 --> 00:01:49,649
preferences is very large or small okay

48
00:01:48,599 --> 00:01:52,740
or potentially even know the

49
00:01:49,649 --> 00:01:55,349
intersection of that and a different

50
00:01:52,740 --> 00:01:56,999
application is if you have for instance

51
00:01:55,349 --> 00:01:58,799
the right sharing service and you have

52
00:01:56,999 --> 00:02:00,749
two people who want to go from like two

53
00:01:58,799 --> 00:02:02,279
points to different starting points to

54
00:02:00,749 --> 00:02:03,658
two different end points maybe would

55
00:02:02,279 --> 00:02:05,158
like to share a cab but they would only

56
00:02:03,659 --> 00:02:07,829
like to share a cab if they have a large

57
00:02:05,159 --> 00:02:09,450
intersection okay so in kind of the

58
00:02:07,829 --> 00:02:10,679
point that I'm trying to highlight with

59
00:02:09,449 --> 00:02:13,530
these applications is that quite often

60
00:02:10,679 --> 00:02:15,060
we only care about the intersection if

61
00:02:13,530 --> 00:02:16,620
the intersection is very large and

62
00:02:15,060 --> 00:02:18,480
sometimes you don't even care to compute

63
00:02:16,620 --> 00:02:20,790
the intersection itself you only care

64
00:02:18,480 --> 00:02:21,899
to compute the bit that tells us is the

65
00:02:20,790 --> 00:02:27,150
intersection our chore is the

66
00:02:21,900 --> 00:02:29,580
intersection small okay and kind of a

67
00:02:27,150 --> 00:02:31,049
natural question is if we kind of

68
00:02:29,580 --> 00:02:32,819
restrict the problem a little bit and

69
00:02:31,049 --> 00:02:34,650
say okay we only want to have a psi

70
00:02:32,819 --> 00:02:36,660
protocol for large intersections can we

71
00:02:34,650 --> 00:02:38,760
kind of maybe get more efficient

72
00:02:36,660 --> 00:02:40,739
protocols than the ones that we have for

73
00:02:38,760 --> 00:02:42,870
general psi so for general psi we know

74
00:02:40,739 --> 00:02:45,620
that we have to communicate something

75
00:02:42,870 --> 00:02:47,870
like if we do some to PC to computer

76
00:02:45,620 --> 00:02:50,099
intersections we have to do some

77
00:02:47,870 --> 00:02:51,989
communication effort that is linear in

78
00:02:50,099 --> 00:02:53,129
the set size okay so the question is if

79
00:02:51,989 --> 00:02:56,010
the intersection is large does this

80
00:02:53,129 --> 00:02:57,690
still hold and what we show in this

81
00:02:56,010 --> 00:03:00,390
paper is that this is basically not true

82
00:02:57,690 --> 00:03:03,090
so we can kind of design threshold psi

83
00:03:00,390 --> 00:03:04,708
protocols which have a communication

84
00:03:03,090 --> 00:03:08,400
complexity that is potentially smaller

85
00:03:04,709 --> 00:03:11,310
than the set size itself so for psi we

86
00:03:08,400 --> 00:03:13,230
know that as I just said that we have to

87
00:03:11,310 --> 00:03:16,200
communicate something that is linear in

88
00:03:13,230 --> 00:03:19,048
the total set sizes and what we show for

89
00:03:16,200 --> 00:03:20,790
threshold psi is that if we let's say

90
00:03:19,049 --> 00:03:24,750
have an upper bound on how different the

91
00:03:20,790 --> 00:03:26,280
sets can be then I'm using fhe we can

92
00:03:24,750 --> 00:03:27,780
come compute the private set

93
00:03:26,280 --> 00:03:29,609
intersection where the communication

94
00:03:27,780 --> 00:03:31,169
complexity is linear in the upper bound

95
00:03:29,609 --> 00:03:35,130
on the set difference on the symmetric

96
00:03:31,169 --> 00:03:36,750
set difference if we have additively

97
00:03:35,130 --> 00:03:39,299
homomorphic encryption and we can do

98
00:03:36,750 --> 00:03:41,040
something that is squared in the upper

99
00:03:39,299 --> 00:03:44,099
bound on the symmetric set difference of

100
00:03:41,040 --> 00:03:46,168
the set and if we do generic to PC then

101
00:03:44,099 --> 00:03:47,668
we can do something that is cubed and in

102
00:03:46,169 --> 00:03:52,889
this upper bound on the set difference

103
00:03:47,669 --> 00:03:54,269
okay okay so just to clarify like what

104
00:03:52,889 --> 00:03:56,459
is the functionality that we would like

105
00:03:54,269 --> 00:03:57,720
to implement like for what exactly are

106
00:03:56,459 --> 00:04:00,239
we trying to do so we have these two

107
00:03:57,720 --> 00:04:02,669
parties and they boast have sets of size

108
00:04:00,239 --> 00:04:04,139
N and then there is some ideal

109
00:04:02,669 --> 00:04:05,190
functionality and what they do is they

110
00:04:04,139 --> 00:04:07,169
send their sets to this ideal

111
00:04:05,190 --> 00:04:08,940
functionality the idea of functionality

112
00:04:07,169 --> 00:04:12,629
checks whether their sets have a large

113
00:04:08,940 --> 00:04:13,980
intersection so like just to kind of

114
00:04:12,629 --> 00:04:15,268
point out like saying they have a large

115
00:04:13,980 --> 00:04:17,039
intersection or saying they have a small

116
00:04:15,269 --> 00:04:17,519
set differences are kind of equivalent

117
00:04:17,039 --> 00:04:20,039
statements

118
00:04:17,519 --> 00:04:22,710
so we want to check whether they differ

119
00:04:20,039 --> 00:04:24,659
by not more than t2t elements and if

120
00:04:22,710 --> 00:04:26,669
this is the case they should learn the

121
00:04:24,660 --> 00:04:27,870
intersection and if this is not the case

122
00:04:26,669 --> 00:04:29,789
then they should not learn anything

123
00:04:27,870 --> 00:04:31,590
apart from the fact that their sets are

124
00:04:29,789 --> 00:04:32,370
not similar enough ok so this is what

125
00:04:31,590 --> 00:04:35,090
we're trying to real

126
00:04:32,370 --> 00:04:37,530
in a communication efficient way and

127
00:04:35,090 --> 00:04:38,969
before we go kind of to the construction

128
00:04:37,530 --> 00:04:41,909
we just do a bunch of simple

129
00:04:38,970 --> 00:04:43,890
observations so the first observation is

130
00:04:41,910 --> 00:04:45,480
imagine Ellis has some set and in the

131
00:04:43,890 --> 00:04:46,800
set some of those elements will end up

132
00:04:45,480 --> 00:04:48,570
being an intersection and some of those

133
00:04:46,800 --> 00:04:50,160
elements will end up being not in the

134
00:04:48,570 --> 00:04:51,870
intersection okay now if the

135
00:04:50,160 --> 00:04:55,650
intersection is very large so the number

136
00:04:51,870 --> 00:04:58,140
of green elements is very large then

137
00:04:55,650 --> 00:04:59,669
rather than sending the rather than

138
00:04:58,140 --> 00:05:01,590
having a protocol that outputs all the

139
00:04:59,670 --> 00:05:03,000
green elements it is enough to compute a

140
00:05:01,590 --> 00:05:05,219
protocol that outputs all the elements

141
00:05:03,000 --> 00:05:06,930
that are not in the intersection okay so

142
00:05:05,220 --> 00:05:09,420
if Ellis knows her full set and she

143
00:05:06,930 --> 00:05:10,980
knows which elements of those are not an

144
00:05:09,420 --> 00:05:12,210
intersection then she can just remove

145
00:05:10,980 --> 00:05:14,970
them in this way she learns the

146
00:05:12,210 --> 00:05:16,380
intersection okay and if the the set

147
00:05:14,970 --> 00:05:18,390
difference is very small then this

148
00:05:16,380 --> 00:05:20,010
quantity is way smaller than the

149
00:05:18,390 --> 00:05:23,729
intersection itself so this is kind of

150
00:05:20,010 --> 00:05:25,260
the important observation here so and

151
00:05:23,730 --> 00:05:27,420
then we kind of need some observations

152
00:05:25,260 --> 00:05:29,580
about polynomials so imagine I have a

153
00:05:27,420 --> 00:05:31,830
polynomial in variable X and it has

154
00:05:29,580 --> 00:05:33,570
roots a B and C okay and now imagine I

155
00:05:31,830 --> 00:05:37,320
have a different polynomial which has

156
00:05:33,570 --> 00:05:39,420
roots the roots B C and E now if I were

157
00:05:37,320 --> 00:05:41,670
to divide those two polynomials then the

158
00:05:39,420 --> 00:05:43,440
common roots will cancel out and what I

159
00:05:41,670 --> 00:05:45,000
will end up having a some rational

160
00:05:43,440 --> 00:05:46,890
function where the numerator and

161
00:05:45,000 --> 00:05:49,710
denominator contain the roots that are

162
00:05:46,890 --> 00:05:52,440
exclusive to P and exclusive to Q and if

163
00:05:49,710 --> 00:05:55,590
the interest if if they have many roots

164
00:05:52,440 --> 00:05:58,460
uncommon then the rational function will

165
00:05:55,590 --> 00:06:00,960
be a low degree rational function okay

166
00:05:58,460 --> 00:06:04,739
yeah and so these are the roots only in

167
00:06:00,960 --> 00:06:06,510
P these are the roots only in Q and if

168
00:06:04,740 --> 00:06:07,860
the rational function has a very low

169
00:06:06,510 --> 00:06:10,050
degree then we don't need too many

170
00:06:07,860 --> 00:06:12,360
points to interpolated okay so even if P

171
00:06:10,050 --> 00:06:14,160
and Q originally had very high degree if

172
00:06:12,360 --> 00:06:15,780
the rational function in the end has low

173
00:06:14,160 --> 00:06:19,230
degree we don't need a lot of points to

174
00:06:15,780 --> 00:06:21,059
interpolate okay and the next thing is

175
00:06:19,230 --> 00:06:23,250
that if we would like to evaluate this

176
00:06:21,060 --> 00:06:25,740
rational function it is also sufficient

177
00:06:23,250 --> 00:06:27,870
that we first separately evaluate P and

178
00:06:25,740 --> 00:06:30,780
Q and then we divide the evaluation

179
00:06:27,870 --> 00:06:34,980
points to obtain evaluations of this low

180
00:06:30,780 --> 00:06:36,390
degree rational function okay okay so

181
00:06:34,980 --> 00:06:38,430
given these observations we can do like

182
00:06:36,390 --> 00:06:41,610
a protocol blueprint of what we can do

183
00:06:38,430 --> 00:06:43,050
so imagine we have Alice and she has set

184
00:06:41,610 --> 00:06:46,409
elements a B and C and we have Bob

185
00:06:43,050 --> 00:06:47,819
Hoover set elements B C and E

186
00:06:46,409 --> 00:06:50,119
in the middle we have a magic box that

187
00:06:47,819 --> 00:06:53,249
just does some generic 2pc for us okay

188
00:06:50,119 --> 00:06:55,199
so what both now can do it LSN codes

189
00:06:53,249 --> 00:06:56,759
were set into a polynomial P so she will

190
00:06:55,199 --> 00:06:59,279
encode the set elements into the roots

191
00:06:56,759 --> 00:07:01,379
of the polynomial P and Bob will encode

192
00:06:59,279 --> 00:07:04,889
his set elements into the roots of the

193
00:07:01,379 --> 00:07:07,319
polynomial Q and then both of those will

194
00:07:04,889 --> 00:07:08,939
evaluate their polynomials independently

195
00:07:07,319 --> 00:07:11,550
at a bunch of evaluation points or here

196
00:07:08,939 --> 00:07:13,589
like UV and W and they will put this

197
00:07:11,550 --> 00:07:15,509
into some generic computer secure

198
00:07:13,589 --> 00:07:17,009
computation and what the generic

199
00:07:15,509 --> 00:07:18,779
implementation will do is it will divide

200
00:07:17,009 --> 00:07:22,139
those points so it will divide it will

201
00:07:18,779 --> 00:07:23,849
take P of U and Q of you divide it and P

202
00:07:22,139 --> 00:07:26,249
of V and Q of U and so on divide those

203
00:07:23,849 --> 00:07:27,748
point wise and then try to interpolate

204
00:07:26,249 --> 00:07:29,579
the rational function okay

205
00:07:27,749 --> 00:07:33,239
and now if the sets have a large

206
00:07:29,579 --> 00:07:35,550
intersection then we can do this with a

207
00:07:33,239 --> 00:07:37,258
small amount of number of points so we

208
00:07:35,550 --> 00:07:39,360
will interpolate some candidate rational

209
00:07:37,259 --> 00:07:42,329
function P star Q star divided by Q star

210
00:07:39,360 --> 00:07:43,739
and then we will roughly speaking like

211
00:07:42,329 --> 00:07:45,059
have an additional evaluation point

212
00:07:43,739 --> 00:07:46,558
which will just check that this

213
00:07:45,059 --> 00:07:48,419
interpolation was correct so we'll just

214
00:07:46,559 --> 00:07:49,800
do all of this inside of the secure

215
00:07:48,419 --> 00:07:50,878
computation how exactly we do this is

216
00:07:49,800 --> 00:07:53,279
for the moment like no relevant okay

217
00:07:50,879 --> 00:07:57,479
this is just the kind of the blueprint

218
00:07:53,279 --> 00:07:59,069
and if we exactly so if we kind of

219
00:07:57,479 --> 00:08:01,409
computed this rational function and the

220
00:07:59,069 --> 00:08:03,569
check passed then we simply return P

221
00:08:01,409 --> 00:08:05,759
star of X to LS or the roots of P star

222
00:08:03,569 --> 00:08:07,889
of X and the roots of Q star of X to Bob

223
00:08:05,759 --> 00:08:09,959
and from that they can learn the set

224
00:08:07,889 --> 00:08:12,539
intersection okay so this is the kind of

225
00:08:09,959 --> 00:08:14,309
high-level idea and now if you want to

226
00:08:12,539 --> 00:08:16,259
implement if you want to realize this

227
00:08:14,309 --> 00:08:20,399
magic box somehow what we can do is we

228
00:08:16,259 --> 00:08:22,860
can throw generic generic tools at it so

229
00:08:20,399 --> 00:08:24,360
for instance if we use F H E then we can

230
00:08:22,860 --> 00:08:27,869
do something that has communication

231
00:08:24,360 --> 00:08:29,579
complexity of T because the number of

232
00:08:27,869 --> 00:08:33,449
points that the rational function has

233
00:08:29,579 --> 00:08:35,779
two so if we upper bound the degree of

234
00:08:33,448 --> 00:08:39,328
this by a T and the degree of this by T

235
00:08:35,779 --> 00:08:40,860
then a rational function requires an

236
00:08:39,328 --> 00:08:43,438
amount of information points that is

237
00:08:40,860 --> 00:08:45,000
linear in T to interpolate it okay so we

238
00:08:43,438 --> 00:08:46,529
can kind of throw all of this inside of

239
00:08:45,000 --> 00:08:48,449
fhe then we get a protocol which is like

240
00:08:46,529 --> 00:08:51,209
has communication plex the o of T where

241
00:08:48,449 --> 00:08:53,370
I'm hiding poly log factors and if we

242
00:08:51,209 --> 00:08:55,729
use generic to PC like some garbled

243
00:08:53,370 --> 00:08:58,949
circuits or something then we would need

244
00:08:55,730 --> 00:08:59,830
to perform an interpolation here so we

245
00:08:58,949 --> 00:09:01,180
need to

246
00:08:59,830 --> 00:09:02,800
some motion eliminations who would end

247
00:09:01,180 --> 00:09:05,050
up with a protocol which would have

248
00:09:02,800 --> 00:09:06,910
roughly communication complexity cubed

249
00:09:05,050 --> 00:09:09,579
in the number of points that both

250
00:09:06,910 --> 00:09:11,829
parties input okay

251
00:09:09,580 --> 00:09:14,230
so what we now end up having is kind if

252
00:09:11,830 --> 00:09:16,060
we have a solution which kind of uses

253
00:09:14,230 --> 00:09:17,530
very simple tools like generic to PC but

254
00:09:16,060 --> 00:09:20,800
it has a large communication complexity

255
00:09:17,530 --> 00:09:22,240
on the other hand if we use fhe then we

256
00:09:20,800 --> 00:09:24,490
have very good communication complexity

257
00:09:22,240 --> 00:09:26,020
but like we're using kind of a strong

258
00:09:24,490 --> 00:09:28,030
primitive so a natural question is can

259
00:09:26,020 --> 00:09:30,579
we kind of do something in between like

260
00:09:28,030 --> 00:09:32,380
use a slightly weaker tool and get like

261
00:09:30,580 --> 00:09:36,190
some communication who likes it as in

262
00:09:32,380 --> 00:09:37,660
between those two and what we basically

263
00:09:36,190 --> 00:09:38,710
do is we give a construction that is

264
00:09:37,660 --> 00:09:42,069
based on additively homomorphic

265
00:09:38,710 --> 00:09:43,690
encryption and the high-level idea of

266
00:09:42,070 --> 00:09:45,670
the construction is that we take our

267
00:09:43,690 --> 00:09:47,890
threshold psi problem and we split it

268
00:09:45,670 --> 00:09:48,969
into two subproblems okay so by the way

269
00:09:47,890 --> 00:09:50,230
I didn't mention it so all of this is

270
00:09:48,970 --> 00:09:52,000
like in the passively secure setting

271
00:09:50,230 --> 00:09:53,140
okay so we assume the parties honestly

272
00:09:52,000 --> 00:09:55,960
followed the protocol we just care about

273
00:09:53,140 --> 00:09:57,910
privacy so what we will do is we'll

274
00:09:55,960 --> 00:09:59,560
split the full threshold psi problem

275
00:09:57,910 --> 00:10:02,380
into two subproblems so one problem will

276
00:09:59,560 --> 00:10:04,270
be we will design a so-called private

277
00:10:02,380 --> 00:10:06,670
intersection cardinality test protocol

278
00:10:04,270 --> 00:10:08,949
and the other one will be a PSI protocol

279
00:10:06,670 --> 00:10:10,449
which is specifically for sets where we

280
00:10:08,950 --> 00:10:13,270
know that they have a large intersection

281
00:10:10,450 --> 00:10:15,040
okay so the private intersection

282
00:10:13,270 --> 00:10:16,720
cardinality test it will just check do

283
00:10:15,040 --> 00:10:19,060
the sets have a large intersection yes

284
00:10:16,720 --> 00:10:21,520
or no okay and if this check will pass

285
00:10:19,060 --> 00:10:23,439
then we will run this psi for large

286
00:10:21,520 --> 00:10:26,050
intersections where correctness and

287
00:10:23,440 --> 00:10:27,670
security only holds if the input sets do

288
00:10:26,050 --> 00:10:29,589
indeed have a large intersection okay so

289
00:10:27,670 --> 00:10:31,270
this is specifically tailored to this

290
00:10:29,590 --> 00:10:35,850
kind of a problem that we try to solve

291
00:10:31,270 --> 00:10:38,079
it it's not a general psi protocol cool

292
00:10:35,850 --> 00:10:39,850
so let's assume for the moment that

293
00:10:38,080 --> 00:10:41,290
somehow we can check the two sets of a

294
00:10:39,850 --> 00:10:44,170
large intersection let's see how we can

295
00:10:41,290 --> 00:10:46,510
compute this intersection so what do we

296
00:10:44,170 --> 00:10:48,939
now just saw I said if we divide those

297
00:10:46,510 --> 00:10:50,530
two polynomials then the common roots

298
00:10:48,940 --> 00:10:51,880
will cancel out and we end up with those

299
00:10:50,530 --> 00:10:57,880
things that we would like to determine

300
00:10:51,880 --> 00:10:59,680
and from the perspective of the person

301
00:10:57,880 --> 00:11:01,210
that has the polynomial like that who

302
00:10:59,680 --> 00:11:03,729
has the set that corresponds to the

303
00:11:01,210 --> 00:11:05,650
polynomial Q we would like to reveal the

304
00:11:03,730 --> 00:11:08,440
denominator but we would like to hide

305
00:11:05,650 --> 00:11:10,930
the numerator and now we kind of run

306
00:11:08,440 --> 00:11:12,790
into kind of two technical challenges so

307
00:11:10,930 --> 00:11:13,660
on the one hand we would like to somehow

308
00:11:12,790 --> 00:11:15,010
take this rational

309
00:11:13,660 --> 00:11:17,020
function and we would like to randomize

310
00:11:15,010 --> 00:11:18,490
it in some way such that the numerator

311
00:11:17,020 --> 00:11:19,960
will look random but the denominator

312
00:11:18,490 --> 00:11:21,640
will still reveal the information it

313
00:11:19,960 --> 00:11:23,080
would like to reveal but the

314
00:11:21,640 --> 00:11:25,300
randomization process needs to satisfy

315
00:11:23,080 --> 00:11:27,790
two things so first of all after

316
00:11:25,300 --> 00:11:30,160
randomizing this rational function we

317
00:11:27,790 --> 00:11:31,569
don't want to degree the degree to blow

318
00:11:30,160 --> 00:11:33,250
up too much because otherwise we will

319
00:11:31,570 --> 00:11:34,960
end up needing a lot of evaluation

320
00:11:33,250 --> 00:11:37,300
points to compute this thing here and

321
00:11:34,960 --> 00:11:39,190
the other problem that we have is our

322
00:11:37,300 --> 00:11:43,240
randomization procedure has to kind of

323
00:11:39,190 --> 00:11:45,970
hide the numerator but it should still

324
00:11:43,240 --> 00:11:47,860
ensure that like the the common roots

325
00:11:45,970 --> 00:11:49,390
cancel out in some way okay so these are

326
00:11:47,860 --> 00:11:50,650
like on a very high level the technical

327
00:11:49,390 --> 00:11:54,910
challenges that make this problem kind

328
00:11:50,650 --> 00:11:56,319
of tricky and if we have something like

329
00:11:54,910 --> 00:11:58,180
this so if we have some way of

330
00:11:56,320 --> 00:12:00,340
randomizing the numerator but not

331
00:11:58,180 --> 00:12:02,739
randomizing the denominator then we can

332
00:12:00,340 --> 00:12:04,360
kind of just use secure computation to

333
00:12:02,740 --> 00:12:06,580
compute evaluation points of this like

334
00:12:04,360 --> 00:12:08,500
modified rational function but then

335
00:12:06,580 --> 00:12:10,810
perform the whole interpolation which is

336
00:12:08,500 --> 00:12:13,660
kind of the computation heavy part of

337
00:12:10,810 --> 00:12:15,760
this computation in plane okay so we

338
00:12:13,660 --> 00:12:17,170
kind of pull out the thing that costs a

339
00:12:15,760 --> 00:12:19,060
lot in terms of computation we pull it

340
00:12:17,170 --> 00:12:21,010
out of the secure computation part okay

341
00:12:19,060 --> 00:12:22,989
and we only use circular computation to

342
00:12:21,010 --> 00:12:24,760
compute a relation points of some

343
00:12:22,990 --> 00:12:29,260
pollutant there are some rational

344
00:12:24,760 --> 00:12:32,710
function okay so without any reason why

345
00:12:29,260 --> 00:12:35,080
this is how we do it so imagine that our

346
00:12:32,710 --> 00:12:37,360
and s are some random polynomial which

347
00:12:35,080 --> 00:12:38,350
I'll explain like in like a bit more

348
00:12:37,360 --> 00:12:39,670
detail in a second what they're but

349
00:12:38,350 --> 00:12:41,500
they're just some random polynomial okay

350
00:12:39,670 --> 00:12:43,630
and now imagine that we compute this

351
00:12:41,500 --> 00:12:45,520
polynomial so we have this is one of the

352
00:12:43,630 --> 00:12:47,500
sets this is the other set this is also

353
00:12:45,520 --> 00:12:48,939
the other set and we're like we multiply

354
00:12:47,500 --> 00:12:51,730
each of those sets by random polynomial

355
00:12:48,940 --> 00:12:53,170
and add them together so if we kind of

356
00:12:51,730 --> 00:12:57,100
write this out and I'm sorry for this

357
00:12:53,170 --> 00:12:58,660
slide so what happens is that these and

358
00:12:57,100 --> 00:13:00,850
these will share some roots uncommon so

359
00:12:58,660 --> 00:13:02,260
these ones we can pull out together okay

360
00:13:00,850 --> 00:13:04,450
so these ones we pull in the front and

361
00:13:02,260 --> 00:13:06,189
what we end up having is that they say

362
00:13:04,450 --> 00:13:08,170
the roots that are only in P will be

363
00:13:06,190 --> 00:13:10,600
here times this polynomial the things

364
00:13:08,170 --> 00:13:12,939
that are only here only in Q will be

365
00:13:10,600 --> 00:13:14,500
times the polynomial s this will cancel

366
00:13:12,940 --> 00:13:17,980
out so what we will get is basically

367
00:13:14,500 --> 00:13:22,510
this rational function okay and now the

368
00:13:17,980 --> 00:13:25,450
kind of the key observation is that if

369
00:13:22,510 --> 00:13:26,800
we have an upper bound so as I said like

370
00:13:25,450 --> 00:13:27,520
we assume that the intersection is large

371
00:13:26,800 --> 00:13:30,219
for the moment okay

372
00:13:27,520 --> 00:13:32,350
so we as we know that this and this the

373
00:13:30,220 --> 00:13:33,520
kind of the degree of like whatever is

374
00:13:32,350 --> 00:13:36,490
left frumpy and whatever is left from

375
00:13:33,520 --> 00:13:39,640
cue is upper bounded by some value by

376
00:13:36,490 --> 00:13:42,459
let's say T so now if this is at most T

377
00:13:39,640 --> 00:13:45,760
and R and s are also polynomials of

378
00:13:42,459 --> 00:13:48,040
degree T then this whole thing looks

379
00:13:45,760 --> 00:13:50,410
let's say uniformly random okay and

380
00:13:48,040 --> 00:13:52,120
because this is of degree T this is of

381
00:13:50,410 --> 00:13:53,680
this is of a degree at most seed this is

382
00:13:52,120 --> 00:13:56,440
of degree at most T and this is just a

383
00:13:53,680 --> 00:13:57,849
sum we know that the the numerator ends

384
00:13:56,440 --> 00:14:00,370
up being a polynomial of degree at most

385
00:13:57,850 --> 00:14:02,380
two T okay so what we now managed to do

386
00:14:00,370 --> 00:14:04,600
is we kind of managed to hide the

387
00:14:02,380 --> 00:14:06,399
numerator the denominator is still

388
00:14:04,600 --> 00:14:08,080
reveals the things that are owned the

389
00:14:06,399 --> 00:14:11,470
roots that are only in the polynomial Q

390
00:14:08,080 --> 00:14:13,899
and this whole thing still can be

391
00:14:11,470 --> 00:14:18,190
interpreted with a number of Appalachian

392
00:14:13,899 --> 00:14:19,779
points that is linear in T okay so we

393
00:14:18,190 --> 00:14:21,760
can basically if we can somehow compute

394
00:14:19,779 --> 00:14:24,700
relation points of this rational

395
00:14:21,760 --> 00:14:26,080
function then we can do the

396
00:14:24,700 --> 00:14:29,560
interpolation and plane so we don't need

397
00:14:26,080 --> 00:14:31,480
to do any two PC there so again like the

398
00:14:29,560 --> 00:14:33,670
protocol blueprint should reason to be

399
00:14:31,480 --> 00:14:35,290
reasonably intuitive now so we have

400
00:14:33,670 --> 00:14:38,050
again those sets we encode them into the

401
00:14:35,290 --> 00:14:40,420
roots of the polynomials we again have a

402
00:14:38,050 --> 00:14:44,380
magic box and now what the magic boxes

403
00:14:40,420 --> 00:14:47,380
does is it will just compute evaluation

404
00:14:44,380 --> 00:14:49,089
points of this polynomial where R and s

405
00:14:47,380 --> 00:14:50,740
are some random polynomial that are

406
00:14:49,089 --> 00:14:55,839
neither known to Ellis nor known to Bob

407
00:14:50,740 --> 00:14:57,459
okay so basically both will input will

408
00:14:55,839 --> 00:14:59,380
basically input some relation points of

409
00:14:57,459 --> 00:15:02,079
their own polynomials and the secure

410
00:14:59,380 --> 00:15:05,740
computation will return evaluations of Z

411
00:15:02,079 --> 00:15:07,810
to Ellis and 2x2 sorry

412
00:15:05,740 --> 00:15:10,089
to Bob so it will return it to the

413
00:15:07,810 --> 00:15:12,180
person who has to learn Q ok so in this

414
00:15:10,089 --> 00:15:15,880
case this is wrong it should go this way

415
00:15:12,180 --> 00:15:17,709
and then Bob can interpolate this

416
00:15:15,880 --> 00:15:23,860
polynomial in plane and extract the

417
00:15:17,709 --> 00:15:25,569
roots from the denominator and this we

418
00:15:23,860 --> 00:15:29,410
can basically as I said before because

419
00:15:25,570 --> 00:15:31,149
the polynomial has some degree like the

420
00:15:29,410 --> 00:15:34,870
rational function has a degree two of

421
00:15:31,149 --> 00:15:36,579
two T at most we can do this with so the

422
00:15:34,870 --> 00:15:38,110
number of evaluation points of Z that we

423
00:15:36,579 --> 00:15:40,899
have to do is also something on the

424
00:15:38,110 --> 00:15:42,189
order of T okay so the whole computation

425
00:15:40,899 --> 00:15:45,999
takes on the order of tea communication

426
00:15:42,189 --> 00:15:47,139
complexity up to paly log factors so the

427
00:15:45,999 --> 00:15:49,360
one thing that is in the beginning is

428
00:15:47,139 --> 00:15:50,829
that for this to work we assume that the

429
00:15:49,360 --> 00:15:52,779
sets do already have a large

430
00:15:50,829 --> 00:15:55,209
intersection so now we kind of still

431
00:15:52,779 --> 00:15:57,279
need a protocol that just checked gives

432
00:15:55,209 --> 00:15:59,018
us one bit of information that says are

433
00:15:57,279 --> 00:16:01,990
the sets do the sets have a large

434
00:15:59,019 --> 00:16:04,720
intersection or not and so what we do

435
00:16:01,990 --> 00:16:08,619
for this is we use the follow yeah so

436
00:16:04,720 --> 00:16:10,149
Bob asks this yep so one thing that we

437
00:16:08,619 --> 00:16:12,939
know is that if we have a polynomial of

438
00:16:10,149 --> 00:16:15,550
a low degree then we can interpolate it

439
00:16:12,939 --> 00:16:17,498
from few evaluation points okay one

440
00:16:15,550 --> 00:16:19,618
thing that is less well-known is that if

441
00:16:17,499 --> 00:16:22,149
you have a polynomial that is sparse so

442
00:16:19,619 --> 00:16:24,730
the sparsity here means like the number

443
00:16:22,149 --> 00:16:26,709
of how many monomials you have if the

444
00:16:24,730 --> 00:16:28,839
number of monomials are small then you

445
00:16:26,709 --> 00:16:31,479
can also interpolate the polynomial from

446
00:16:28,839 --> 00:16:32,920
few evaluation points and this is

447
00:16:31,480 --> 00:16:36,339
basically the property that we'll use

448
00:16:32,920 --> 00:16:39,849
for our check so the basic idea is that

449
00:16:36,339 --> 00:16:40,899
now rather than encoding the set

450
00:16:39,850 --> 00:16:43,350
elements into the roots of the

451
00:16:40,899 --> 00:16:46,089
polynomials we will encode it into the

452
00:16:43,350 --> 00:16:47,649
into into the roots of the polynomial we

453
00:16:46,089 --> 00:16:50,889
will rather encode it into the monomials

454
00:16:47,649 --> 00:16:56,019
okay so now this set ABC is encoded into

455
00:16:50,889 --> 00:16:57,459
X to the a X to be X to the C and now

456
00:16:56,019 --> 00:16:59,889
the simple observation is that if we

457
00:16:57,459 --> 00:17:01,779
subtract those two polynomials then all

458
00:16:59,889 --> 00:17:03,459
the common monomials will cancel out and

459
00:17:01,779 --> 00:17:07,990
we will end up with a polynomial that is

460
00:17:03,459 --> 00:17:10,000
very sparse okay and now I'm kind of

461
00:17:07,990 --> 00:17:12,609
like don't have the time to explain how

462
00:17:10,000 --> 00:17:14,439
but basically you can do a check whether

463
00:17:12,609 --> 00:17:16,329
a polynomial has like you can check

464
00:17:14,439 --> 00:17:18,970
whether the polynomial has a certain

465
00:17:16,329 --> 00:17:20,289
sparsity or not with like a protocol

466
00:17:18,970 --> 00:17:22,569
that has a squared communication

467
00:17:20,289 --> 00:17:25,270
complexity okay so if we now combine

468
00:17:22,569 --> 00:17:28,059
this with our psi protocol then in total

469
00:17:25,270 --> 00:17:29,529
we get a protocol which has a squared

470
00:17:28,059 --> 00:17:33,460
communication complexity only relies on

471
00:17:29,529 --> 00:17:36,580
additively homomorphic encryption so

472
00:17:33,460 --> 00:17:37,779
yeah so this work kind of like starts to

473
00:17:36,580 --> 00:17:39,129
look at whether you can do like

474
00:17:37,779 --> 00:17:40,480
threshold psi with small communication

475
00:17:39,130 --> 00:17:41,649
complexity and like it gives some first

476
00:17:40,480 --> 00:17:43,570
answers but there are like a lot of

477
00:17:41,649 --> 00:17:45,489
interesting question open so the first

478
00:17:43,570 --> 00:17:47,860
one is can we obviously like get rid of

479
00:17:45,490 --> 00:17:49,510
the T squared thing and get a protocol

480
00:17:47,860 --> 00:17:52,059
from simple from simpler assumptions

481
00:17:49,510 --> 00:17:54,100
that is just like has communication with

482
00:17:52,059 --> 00:17:55,960
like Co of T and

483
00:17:54,100 --> 00:17:57,939
the other question is can we do any of

484
00:17:55,960 --> 00:17:59,770
those in a way that is practically

485
00:17:57,940 --> 00:18:03,040
remotely useful because none of ours is

486
00:17:59,770 --> 00:18:05,290
and kind of what we shown in our paper

487
00:18:03,040 --> 00:18:07,000
is that if you manage to come up with a

488
00:18:05,290 --> 00:18:08,980
protocol that just checks whether two

489
00:18:07,000 --> 00:18:10,900
sets are similar or not which has an

490
00:18:08,980 --> 00:18:13,660
optimal communication complexity then

491
00:18:10,900 --> 00:18:16,510
using our psi protocol we get a full

492
00:18:13,660 --> 00:18:18,580
threshold psi protocol which has an

493
00:18:16,510 --> 00:18:21,629
upper poly log factors optimal

494
00:18:18,580 --> 00:18:21,629
communication complexity

495
00:18:30,330 --> 00:18:35,879
we have time for questions if you have

496
00:18:33,119 --> 00:18:37,708
any questions come to the mic so you

497
00:18:35,879 --> 00:18:39,599
have a protocol that only works for

498
00:18:37,709 --> 00:18:41,459
large intersection does it

499
00:18:39,599 --> 00:18:43,379
there's only correctness break if the

500
00:18:41,459 --> 00:18:51,209
intersection is to smaller does privacy

501
00:18:43,379 --> 00:18:52,678
also break so that's a tricky question

502
00:18:51,209 --> 00:18:57,509
because we're trying to do a fall out so

503
00:18:52,679 --> 00:18:59,009
in this case probably it that's a very

504
00:18:57,509 --> 00:19:03,119
complicated question that we try to

505
00:18:59,009 --> 00:19:04,919
answer for six months like the question

506
00:19:03,119 --> 00:19:11,789
of whether like so what you end up

507
00:19:04,919 --> 00:19:13,889
having is that if what you end up having

508
00:19:11,789 --> 00:19:16,440
is that these guys here will have a

509
00:19:13,889 --> 00:19:18,928
larger degree these will have a degree

510
00:19:16,440 --> 00:19:20,549
of let's say T and in general this

511
00:19:18,929 --> 00:19:22,709
rational function like does not

512
00:19:20,549 --> 00:19:24,089
sufficiently hide those polynomials but

513
00:19:22,709 --> 00:19:26,190
since you're only getting a certain

514
00:19:24,089 --> 00:19:27,899
number of revelation points it might

515
00:19:26,190 --> 00:19:29,700
still do it which is something we have

516
00:19:27,899 --> 00:19:34,978
no idea how to prove it's surprisingly

517
00:19:29,700 --> 00:19:36,389
tricky so like yeah that's yeah thanks

518
00:19:34,979 --> 00:19:39,419
for the talk on I have a somewhat

519
00:19:36,389 --> 00:19:42,269
technical question so on this slide you

520
00:19:39,419 --> 00:19:44,969
have the numerator being randomized but

521
00:19:42,269 --> 00:19:48,119
it denominator is deterministic nice so

522
00:19:44,969 --> 00:19:49,919
so what prevents the attack of just

523
00:19:48,119 --> 00:19:51,658
doing a GCD between the numerator and

524
00:19:49,919 --> 00:19:54,329
denominator and then you can remove that

525
00:19:51,659 --> 00:19:58,320
second term then you can get the first

526
00:19:54,329 --> 00:19:59,668
term sorry what do a GCD like how

527
00:19:58,320 --> 00:20:02,539
Euclidean algorithm between the

528
00:19:59,669 --> 00:20:08,039
numerator and denominator if you are the

529
00:20:02,539 --> 00:20:09,419
party but so I mean you're adding this

530
00:20:08,039 --> 00:20:13,320
polynomial in this polynomial so you

531
00:20:09,419 --> 00:20:15,209
will not get this I mean you you want to

532
00:20:13,320 --> 00:20:17,609
find out these two or like yeah like a

533
00:20:15,209 --> 00:20:19,139
common divisor of the yeah yeah but I

534
00:20:17,609 --> 00:20:21,839
mean this will not work here right like

535
00:20:19,139 --> 00:20:23,309
I mean this will be this is x are this

536
00:20:21,839 --> 00:20:25,079
is is and then they're added together so

537
00:20:23,309 --> 00:20:30,829
the GCD will not reveal anything just

538
00:20:25,079 --> 00:20:30,829
will look uniformly random to you Thanks

539
00:20:31,980 --> 00:20:35,920
[Applause]

