1
00:00:04,870 --> 00:00:10,450
okay I'm going to be talking about

2
00:00:08,490 --> 00:00:12,790
amplification in summation in the

3
00:00:10,450 --> 00:00:14,170
shuffle model of differential privacy so

4
00:00:12,790 --> 00:00:15,879
I shall start by introducing

5
00:00:14,170 --> 00:00:17,950
differential privacy and the shuffle

6
00:00:15,880 --> 00:00:23,050
model before talking about exactly what

7
00:00:17,950 --> 00:00:26,609
we've done in this work okay so in

8
00:00:23,050 --> 00:00:28,840
differential policy we have a database

9
00:00:26,609 --> 00:00:30,640
which has people's beta in it and we're

10
00:00:28,840 --> 00:00:32,110
going to perform some analysis and the

11
00:00:30,640 --> 00:00:35,710
property that we want is that the output

12
00:00:32,110 --> 00:00:40,629
shouldn't tell you too much about any

13
00:00:35,710 --> 00:00:42,730
one person in the database so formalize

14
00:00:40,630 --> 00:00:44,920
this we imagine we have some other

15
00:00:42,730 --> 00:00:49,690
database which instead of having me in

16
00:00:44,920 --> 00:00:51,430
it has Elmo in it and we don't want the

17
00:00:49,690 --> 00:00:54,010
adversary to be able to tell a different

18
00:00:51,430 --> 00:00:56,879
dot to tell whether it was me or Elmo in

19
00:00:54,010 --> 00:01:00,430
the data set from looking at the output

20
00:00:56,879 --> 00:01:03,250
and so the arbitration be able to

21
00:01:00,430 --> 00:01:06,369
distinguish these two outputs now of

22
00:01:03,250 --> 00:01:08,200
course if this was statistically secure

23
00:01:06,369 --> 00:01:11,170
with some negligible statistical

24
00:01:08,200 --> 00:01:13,209
distance then by some triangle

25
00:01:11,170 --> 00:01:15,399
inequality argument you can see that

26
00:01:13,209 --> 00:01:18,520
even if every entry in the database was

27
00:01:15,399 --> 00:01:20,229
different you wouldn't be able to tell

28
00:01:18,520 --> 00:01:21,250
any difference in the outputs and thus

29
00:01:20,229 --> 00:01:23,289
the output wouldn't be telling you

30
00:01:21,250 --> 00:01:25,569
anything about the data so that would be

31
00:01:23,289 --> 00:01:27,069
useless so we're going to have to relax

32
00:01:25,569 --> 00:01:31,509
our notion of what it means to be able

33
00:01:27,069 --> 00:01:33,250
to distinguish two data sets and this

34
00:01:31,509 --> 00:01:35,709
definition is the definition of

35
00:01:33,250 --> 00:01:38,500
differential privacy so what's this

36
00:01:35,709 --> 00:01:40,149
saying we've got X and X prime to just

37
00:01:38,500 --> 00:01:42,459
two databases that differ in one place

38
00:01:40,149 --> 00:01:47,310
and then we're talking about the

39
00:01:42,459 --> 00:01:47,310
probability that any event happens on

40
00:01:47,369 --> 00:01:52,330
the output of the analysis you should

41
00:01:50,920 --> 00:01:53,770
think of this Delta on the end there's

42
00:01:52,330 --> 00:01:57,069
been some cryptographically small

43
00:01:53,770 --> 00:01:59,110
parameter but like the statistical

44
00:01:57,069 --> 00:02:02,470
distance so if you think of that as

45
00:01:59,110 --> 00:02:05,200
being zero for a second the condition

46
00:02:02,470 --> 00:02:07,420
become just saying that the likelihood

47
00:02:05,200 --> 00:02:08,590
ratio between the case when you're

48
00:02:07,420 --> 00:02:10,720
looking at database X and when you're

49
00:02:08,590 --> 00:02:13,659
looking at database X primed is bounded

50
00:02:10,720 --> 00:02:15,280
by e to the epsilon so this somehow says

51
00:02:13,659 --> 00:02:16,420
that the adversary can't learn too much

52
00:02:15,280 --> 00:02:18,580
about anyone purse

53
00:02:16,420 --> 00:02:23,980
or learn anything with too much

54
00:02:18,580 --> 00:02:26,230
confidence okay so how are we going to

55
00:02:23,980 --> 00:02:28,480
apply this definition well originally

56
00:02:26,230 --> 00:02:29,890
the model that differential privacy was

57
00:02:28,480 --> 00:02:32,350
developed for is the trusted curator

58
00:02:29,890 --> 00:02:34,540
model where we have some trusted third

59
00:02:32,350 --> 00:02:36,850
party everyone gives all of data to this

60
00:02:34,540 --> 00:02:39,670
trusted third party the trusted third

61
00:02:36,850 --> 00:02:43,000
party computes some statistics on that

62
00:02:39,670 --> 00:02:46,179
data with some randomness handed to them

63
00:02:43,000 --> 00:02:48,790
and then releases them to an analyzer

64
00:02:46,180 --> 00:02:51,400
who is also our adversary and we want

65
00:02:48,790 --> 00:02:55,780
the analyzer to then be able to say

66
00:02:51,400 --> 00:02:59,010
something useful about so this analysis

67
00:02:55,780 --> 00:03:01,060
of the data is going to be useful but

68
00:02:59,010 --> 00:03:02,709
without being able to tell much too much

69
00:03:01,060 --> 00:03:07,660
about any one person because n is

70
00:03:02,709 --> 00:03:09,580
differentially private then there's the

71
00:03:07,660 --> 00:03:11,320
local model of differential privacy so

72
00:03:09,580 --> 00:03:13,239
here we avoid having to trust a third

73
00:03:11,320 --> 00:03:17,890
party we just say everyone is going to

74
00:03:13,239 --> 00:03:20,230
locally randomize their own data so each

75
00:03:17,890 --> 00:03:22,059
person applies a local randomizer R to

76
00:03:20,230 --> 00:03:23,950
their data and the resulting message

77
00:03:22,060 --> 00:03:26,560
they send to the analyzer is already

78
00:03:23,950 --> 00:03:29,380
differentially private now clearly this

79
00:03:26,560 --> 00:03:30,940
means that the you can't tell the

80
00:03:29,380 --> 00:03:32,920
analyze are too much about your data

81
00:03:30,940 --> 00:03:34,540
point there's a limit to how much data

82
00:03:32,920 --> 00:03:37,268
you can get across to the analyzer how

83
00:03:34,540 --> 00:03:38,859
much information and but across a large

84
00:03:37,269 --> 00:03:41,940
number of users the analyzer might still

85
00:03:38,860 --> 00:03:44,980
be able to say something useful about

86
00:03:41,940 --> 00:03:48,600
the entirety of the population as a

87
00:03:44,980 --> 00:03:52,209
whole so there's a trade-off here

88
00:03:48,600 --> 00:03:53,620
obviously we'd have we don't require as

89
00:03:52,209 --> 00:03:55,350
much trust if we're in the local model

90
00:03:53,620 --> 00:03:58,420
but we also can't get as much utility

91
00:03:55,350 --> 00:04:01,299
indeed it's a classical result now the

92
00:03:58,420 --> 00:04:04,000
in the curator model you can get order

93
00:04:01,299 --> 00:04:06,160
one guarantee when doing summation of

94
00:04:04,000 --> 00:04:08,680
real numbers in zero one but in the

95
00:04:06,160 --> 00:04:09,820
local model you can't hope for better

96
00:04:08,680 --> 00:04:11,739
than square root n error

97
00:04:09,820 --> 00:04:14,230
roughly speaking this is because each

98
00:04:11,739 --> 00:04:16,090
person has to add order one noise to

99
00:04:14,230 --> 00:04:19,209
their input and then when you add them

100
00:04:16,089 --> 00:04:23,130
all up you're going to get variance N

101
00:04:19,209 --> 00:04:23,130
and the standard error square root n

102
00:04:24,520 --> 00:04:31,000
so the shuffle model is an intermediate

103
00:04:27,550 --> 00:04:31,720
model between these two and the idea

104
00:04:31,000 --> 00:04:33,280
here is that we're going to have a

105
00:04:31,720 --> 00:04:34,060
trusted third party but we're only going

106
00:04:33,280 --> 00:04:36,698
to trust it

107
00:04:34,060 --> 00:04:38,050
to shuffle the inputs so it's going to

108
00:04:36,699 --> 00:04:40,750
take in all the inputs apply a random

109
00:04:38,050 --> 00:04:44,250
permutation and then show the result of

110
00:04:40,750 --> 00:04:44,250
that random permutation to the analyzer

111
00:04:45,360 --> 00:04:50,949
how we implement this thing where and we

112
00:04:49,569 --> 00:04:53,080
don't care about we're agnostic to in

113
00:04:50,949 --> 00:04:54,880
this this paper but there's some

114
00:04:53,080 --> 00:04:56,500
suggestions you could use MVC or a third

115
00:04:54,880 --> 00:04:57,880
party or you could use a mixed net or

116
00:04:56,500 --> 00:04:59,440
something if you have anonymous channels

117
00:04:57,880 --> 00:05:04,240
this kind of automatically gives you a

118
00:04:59,440 --> 00:05:05,860
shuffle up okay so what are our actual

119
00:05:04,240 --> 00:05:07,919
contributions in this paper so far

120
00:05:05,860 --> 00:05:12,490
everything I've talked about has been

121
00:05:07,919 --> 00:05:14,049
other people's work well here we look at

122
00:05:12,490 --> 00:05:17,289
the question of real summation of

123
00:05:14,050 --> 00:05:19,630
numbers in 0 1 and we show that in the

124
00:05:17,289 --> 00:05:23,110
shuffle one message Tahoe model you can

125
00:05:19,630 --> 00:05:24,969
do better then you can in the local

126
00:05:23,110 --> 00:05:28,380
model but you can't do as well as you

127
00:05:24,970 --> 00:05:30,729
can in the curator model and we also

128
00:05:28,380 --> 00:05:31,900
managed to prove a new amplification by

129
00:05:30,729 --> 00:05:34,090
shuffling result this isn't the first

130
00:05:31,900 --> 00:05:36,159
time that someone's proved amplification

131
00:05:34,090 --> 00:05:38,859
by shuffling result but we are able to

132
00:05:36,159 --> 00:05:44,199
improve at least in in certain aspects

133
00:05:38,860 --> 00:05:45,820
on previous results so real and

134
00:05:44,199 --> 00:05:48,099
participation all I mean is each user

135
00:05:45,820 --> 00:05:51,130
has some number in 0 1 and we want to

136
00:05:48,099 --> 00:05:56,139
estimate some of them previous rules

137
00:05:51,130 --> 00:05:57,669
work by 2 at all there is a slight

138
00:05:56,139 --> 00:06:02,050
improvement here in the local model and

139
00:05:57,669 --> 00:06:04,060
but it's not in the asymptotics sorry in

140
00:06:02,050 --> 00:06:06,520
the one message model but it's not

141
00:06:04,060 --> 00:06:08,380
present in there syntonex they are able

142
00:06:06,520 --> 00:06:11,380
to show however that if you have sqrt n

143
00:06:08,380 --> 00:06:12,789
1 bit messages or each person is able to

144
00:06:11,380 --> 00:06:13,960
put square root n messages into the

145
00:06:12,789 --> 00:06:16,690
shuffler and they all get shuffled

146
00:06:13,960 --> 00:06:19,960
together then you can achieve the error

147
00:06:16,690 --> 00:06:21,099
of the curator model so we're looking at

148
00:06:19,960 --> 00:06:24,900
what happens in the case where you can

149
00:06:21,099 --> 00:06:27,190
only put one message in and in that case

150
00:06:24,900 --> 00:06:30,789
we're able to show that with just one

151
00:06:27,190 --> 00:06:32,830
message of log n bits you can achieve a

152
00:06:30,789 --> 00:06:34,150
standard error of enter 6 so this is

153
00:06:32,830 --> 00:06:36,460
very intent for the third

154
00:06:34,150 --> 00:06:41,469
and but you can't do better than that

155
00:06:36,460 --> 00:06:42,940
this is the best you can hope for okay

156
00:06:41,470 --> 00:06:43,990
so I'm going to prove the upper bound

157
00:06:42,940 --> 00:06:45,969
I'm not going to prove the lower bound

158
00:06:43,990 --> 00:06:47,740
because I won't have time but I'd like

159
00:06:45,970 --> 00:06:50,080
to explain you know how this protocols

160
00:06:47,740 --> 00:06:54,370
worked how you can get this accuracy in

161
00:06:50,080 --> 00:06:56,620
the one message shuttle model so this is

162
00:06:54,370 --> 00:06:59,229
our local randomizer it's pretty simple

163
00:06:56,620 --> 00:07:01,930
and there are only really two things

164
00:06:59,229 --> 00:07:03,639
going on here you take your input we're

165
00:07:01,930 --> 00:07:05,560
going to put it into fixed point

166
00:07:03,639 --> 00:07:10,780
position so this is randomized rounding

167
00:07:05,560 --> 00:07:14,410
to a number in to one of the some number

168
00:07:10,780 --> 00:07:16,150
at ke precision and then after that

169
00:07:14,410 --> 00:07:19,810
we're going to do koe randomized

170
00:07:16,150 --> 00:07:22,359
response which is to say that each

171
00:07:19,810 --> 00:07:25,840
person will flip her a biased coin and

172
00:07:22,360 --> 00:07:28,180
with probability gamma they will return

173
00:07:25,840 --> 00:07:30,969
a uniformly random answer independently

174
00:07:28,180 --> 00:07:32,770
of their input when with probability 1

175
00:07:30,970 --> 00:07:36,130
minus gamma they will just tell the

176
00:07:32,770 --> 00:07:38,710
truth okay and at the end the analyzer

177
00:07:36,130 --> 00:07:40,600
is going to have to D by us this but

178
00:07:38,710 --> 00:07:43,690
that's straightforward it's just a

179
00:07:40,600 --> 00:07:46,150
linear map okay so this is our local

180
00:07:43,690 --> 00:07:49,510
randomizer so why does it have the

181
00:07:46,150 --> 00:07:51,039
accuracy that I claim well there are two

182
00:07:49,510 --> 00:07:53,950
sources of error here one is in the

183
00:07:51,039 --> 00:07:57,520
randomize rounding when we map the fix

184
00:07:53,950 --> 00:08:00,250
point this incurs an error with variants

185
00:07:57,520 --> 00:08:01,930
n over K squared n because their own

186
00:08:00,250 --> 00:08:03,849
party is 1 over K squared because that's

187
00:08:01,930 --> 00:08:08,820
the variance of the randomize rounding

188
00:08:03,849 --> 00:08:11,979
and then there's the error due to the

189
00:08:08,820 --> 00:08:15,639
people who are lying adding you know

190
00:08:11,979 --> 00:08:19,889
inputting uniform random response and

191
00:08:15,639 --> 00:08:22,180
there are KN x-ray gamma n of them

192
00:08:19,889 --> 00:08:24,010
approximately and each one is going to

193
00:08:22,180 --> 00:08:26,950
be adding something with variance 1 and

194
00:08:24,010 --> 00:08:29,020
so that contributes variance gamma N and

195
00:08:26,950 --> 00:08:31,380
I'll show in a couple of minutes that

196
00:08:29,020 --> 00:08:35,380
we're going to have to take gamma to be

197
00:08:31,380 --> 00:08:38,439
K over N times some function of Delta

198
00:08:35,380 --> 00:08:40,208
and epsilon and if you sub that K over N

199
00:08:38,440 --> 00:08:42,329
in the top there you can see that the

200
00:08:40,208 --> 00:08:44,059
variance comes out as n over K squared

201
00:08:42,328 --> 00:08:47,510
plus K

202
00:08:44,059 --> 00:08:49,400
and so we want K to be about n 4/3 and

203
00:08:47,510 --> 00:08:52,279
taking K to be n to the third gives a

204
00:08:49,400 --> 00:08:54,050
variance of n to the third and therefore

205
00:08:52,279 --> 00:08:55,160
we get this n to the sixth so that's

206
00:08:54,050 --> 00:08:59,000
where the end of the sixth is coming

207
00:08:55,160 --> 00:09:00,500
from as the standard error okay so why

208
00:08:59,000 --> 00:09:04,820
do I want to take gamma to be this why

209
00:09:00,500 --> 00:09:06,620
does this suffice in order to understand

210
00:09:04,820 --> 00:09:08,630
why this works we're going to look at

211
00:09:06,620 --> 00:09:11,420
what the adversary sees so this is the

212
00:09:08,630 --> 00:09:12,860
adversary's view and the adversative

213
00:09:11,420 --> 00:09:14,449
view is equivalent to a histogram they

214
00:09:12,860 --> 00:09:16,850
just learned how many times each input

215
00:09:14,450 --> 00:09:19,490
has been submitted the origin message

216
00:09:16,850 --> 00:09:23,839
has been submitted so that's a histogram

217
00:09:19,490 --> 00:09:26,150
of the possible messages and we know

218
00:09:23,839 --> 00:09:27,830
that these messages have come from some

219
00:09:26,150 --> 00:09:31,339
people lying and some people telling the

220
00:09:27,830 --> 00:09:32,750
truth so those people who put random

221
00:09:31,339 --> 00:09:34,310
responses in we can consider as this

222
00:09:32,750 --> 00:09:36,290
green histogram and those people telling

223
00:09:34,310 --> 00:09:37,699
the truth we consider as the red one the

224
00:09:36,290 --> 00:09:39,920
adversary obviously can't see which is

225
00:09:37,700 --> 00:09:43,370
which and what we're going to tell the

226
00:09:39,920 --> 00:09:45,189
adversary which is which we're going to

227
00:09:43,370 --> 00:09:47,330
give them a present which contains

228
00:09:45,190 --> 00:09:50,110
basically tells them the set of parties

229
00:09:47,330 --> 00:09:52,130
that troops wandered truthfully and

230
00:09:50,110 --> 00:09:54,290
we're going to assume they also know

231
00:09:52,130 --> 00:09:58,130
what everyone else's input is except for

232
00:09:54,290 --> 00:09:59,180
yours and this is that does a standard

233
00:09:58,130 --> 00:10:00,170
assumption and different for privacy

234
00:09:59,180 --> 00:10:03,650
that we want to be able to protect

235
00:10:00,170 --> 00:10:05,569
against arbitrary side information so

236
00:10:03,650 --> 00:10:07,819
with this present the adversary can now

237
00:10:05,570 --> 00:10:10,580
remove everyone who told the truth data

238
00:10:07,820 --> 00:10:13,400
from the histogram and they're left with

239
00:10:10,580 --> 00:10:14,900
the green histogram plus your data entry

240
00:10:13,400 --> 00:10:16,790
assuming you told the truth

241
00:10:14,900 --> 00:10:18,680
if you lied obviously your inputs

242
00:10:16,790 --> 00:10:19,790
independent of your data and so no

243
00:10:18,680 --> 00:10:21,890
information about you is going to be

244
00:10:19,790 --> 00:10:25,660
leaked so we're only going to worry

245
00:10:21,890 --> 00:10:25,660
about the case where you told the truth

246
00:10:25,690 --> 00:10:31,910
okay so this is the thing that we call

247
00:10:30,020 --> 00:10:34,220
the privacy blanket this green histogram

248
00:10:31,910 --> 00:10:35,810
here and the idea is that your one piece

249
00:10:34,220 --> 00:10:38,180
of data is hiding amongst everyone

250
00:10:35,810 --> 00:10:43,819
else's data so it kind of provides a

251
00:10:38,180 --> 00:10:45,859
cover for you to hide amongst these are

252
00:10:43,820 --> 00:10:47,060
the two situations that the adversary

253
00:10:45,860 --> 00:10:49,490
needs to be able to tell the difference

254
00:10:47,060 --> 00:10:51,770
between mmm needs to be able to tell

255
00:10:49,490 --> 00:10:55,550
whether or not there's been one extra

256
00:10:51,770 --> 00:10:58,720
entry added to and one extra zero

257
00:10:55,550 --> 00:11:01,760
submitted or one extra one submitted

258
00:10:58,720 --> 00:11:03,920
so we're going to look at the likelihood

259
00:11:01,760 --> 00:11:05,300
ratio here as I mentioned earlier your

260
00:11:03,920 --> 00:11:06,770
differential privacy roughly says the

261
00:11:05,300 --> 00:11:09,109
likelihood ratio isn't going to be

262
00:11:06,770 --> 00:11:10,640
greater than e to the epsilon so it's a

263
00:11:09,110 --> 00:11:12,890
physis to show that the probability of

264
00:11:10,640 --> 00:11:18,830
it being greater than equal to e to the

265
00:11:12,890 --> 00:11:20,180
epsilon is at most Delta okay so in

266
00:11:18,830 --> 00:11:24,710
order to do that we won't need to work

267
00:11:20,180 --> 00:11:28,160
out this likelihood ratio so in the case

268
00:11:24,710 --> 00:11:30,320
where you're submitting a zero this is

269
00:11:28,160 --> 00:11:31,579
just going this likelihood ratio is just

270
00:11:30,320 --> 00:11:34,670
going to be the number of zeros

271
00:11:31,580 --> 00:11:38,090
submitted divided by the number of one

272
00:11:34,670 --> 00:11:39,890
submitted which is some binomial random

273
00:11:38,090 --> 00:11:42,980
variable plus one divided by some

274
00:11:39,890 --> 00:11:47,050
binomial random variable and this won't

275
00:11:42,980 --> 00:11:49,100
be greater than e to the epsilon because

276
00:11:47,050 --> 00:11:50,990
binomial random variables are quite well

277
00:11:49,100 --> 00:11:52,430
concentrated about their means so so

278
00:11:50,990 --> 00:11:55,790
long as these means are large enough

279
00:11:52,430 --> 00:11:59,000
we'll be fine and how large the mean has

280
00:11:55,790 --> 00:12:04,280
to be is going to just be some function

281
00:11:59,000 --> 00:12:06,500
of epsilon and Delta and so as we want

282
00:12:04,280 --> 00:12:11,060
the mean to be some constant we can take

283
00:12:06,500 --> 00:12:13,550
gamma to be K over N times some function

284
00:12:11,060 --> 00:12:14,930
of epsilon and Delta and if you're

285
00:12:13,550 --> 00:12:16,370
familiar with differential privacy then

286
00:12:14,930 --> 00:12:19,069
you might recognize this log 1 over

287
00:12:16,370 --> 00:12:22,190
Delta divided by epsilon squared this is

288
00:12:19,070 --> 00:12:25,339
the amount of variance you have to add

289
00:12:22,190 --> 00:12:28,400
when doing the Gaussian mechanism in

290
00:12:25,339 --> 00:12:30,380
differential privacy so this shouldn't

291
00:12:28,400 --> 00:12:31,550
be too surprising because these binomial

292
00:12:30,380 --> 00:12:33,380
random variables that you're hiding

293
00:12:31,550 --> 00:12:35,120
amongst are approximately Gaussian so

294
00:12:33,380 --> 00:12:38,750
that's why it's log 1 of a delta divided

295
00:12:35,120 --> 00:12:42,320
by epsilon squared okay so that's the

296
00:12:38,750 --> 00:12:46,220
privacy proof so now what's this

297
00:12:42,320 --> 00:12:49,490
amplification thing so we've shown that

298
00:12:46,220 --> 00:12:50,750
we can do summation well and the

299
00:12:49,490 --> 00:12:56,270
question is can we extend this argument

300
00:12:50,750 --> 00:12:57,589
to other kinds of functionalities or

301
00:12:56,270 --> 00:13:01,220
other kinds of statistics you might want

302
00:12:57,589 --> 00:13:04,880
to compute and Ellingson Attell proved

303
00:13:01,220 --> 00:13:08,750
recently that if you have some local

304
00:13:04,880 --> 00:13:10,640
randomizer with in the local model this

305
00:13:08,750 --> 00:13:11,240
has epsilon 0 differential privacy where

306
00:13:10,640 --> 00:13:16,459
epsilon 0

307
00:13:11,240 --> 00:13:18,110
is most some constant then you

308
00:13:16,459 --> 00:13:20,719
automatically get different for privacy

309
00:13:18,110 --> 00:13:23,619
in the shuffle model with better

310
00:13:20,720 --> 00:13:27,259
parameters you need to introduce a delta

311
00:13:23,619 --> 00:13:30,769
which is nonzero but you get this scroll

312
00:13:27,259 --> 00:13:34,220
n on the bottom here so epsilon can come

313
00:13:30,769 --> 00:13:36,920
down by a lot if n is large and this is

314
00:13:34,220 --> 00:13:38,329
a useful result and if you're trying to

315
00:13:36,920 --> 00:13:40,819
prove high privacy but in a lot of

316
00:13:38,329 --> 00:13:42,949
situations you don't want very high

317
00:13:40,819 --> 00:13:47,300
privacy what you want is moderate

318
00:13:42,949 --> 00:13:50,118
privacy and high utility so we're able

319
00:13:47,300 --> 00:13:54,349
to extend this read the regime of this

320
00:13:50,119 --> 00:13:56,629
result to include larger values of

321
00:13:54,350 --> 00:13:57,829
epsilon zero you'll note that on the

322
00:13:56,629 --> 00:13:59,869
right here there's an e to the epsilon

323
00:13:57,829 --> 00:14:03,920
zero in our expression for epsilon so

324
00:13:59,869 --> 00:14:06,889
this this does blow up reasonably

325
00:14:03,920 --> 00:14:08,959
quickly an epsilon zero but the point is

326
00:14:06,889 --> 00:14:11,809
we can now take epsilon zero to be order

327
00:14:08,959 --> 00:14:16,939
log n and still get reasonable privacy

328
00:14:11,809 --> 00:14:19,429
guarantee of epsilon equal to say 1 ok

329
00:14:16,939 --> 00:14:23,360
and in fact even in the case where we're

330
00:14:19,429 --> 00:14:26,360
taking epsilon zero to be 1/2 and Delta

331
00:14:23,360 --> 00:14:28,100
to be 10 4-6 this graph shows that the

332
00:14:26,360 --> 00:14:29,660
constants that we're able to get out are

333
00:14:28,100 --> 00:14:34,309
better than those that come out of

334
00:14:29,660 --> 00:14:36,350
Ellingson at hours result and kind of

335
00:14:34,309 --> 00:14:38,689
because we're we're attacking things

336
00:14:36,350 --> 00:14:41,119
more directly than they were and I

337
00:14:38,689 --> 00:14:42,349
should mention though that their result

338
00:14:41,119 --> 00:14:44,809
is slightly more general than ours in

339
00:14:42,350 --> 00:14:49,480
terms of the systems in which you can

340
00:14:44,809 --> 00:14:51,350
apply it it works in models that are

341
00:14:49,480 --> 00:14:53,389
different to the one that we're looking

342
00:14:51,350 --> 00:14:58,040
at here so it's not quite as strictly

343
00:14:53,389 --> 00:14:59,329
stronger result ok so then you might ask

344
00:14:58,040 --> 00:15:04,549
if we have this amplification by

345
00:14:59,329 --> 00:15:06,498
shuffling can we do anything just by

346
00:15:04,549 --> 00:15:08,119
coming up with a local randomizer some

347
00:15:06,499 --> 00:15:10,220
way of computing it in the local model

348
00:15:08,119 --> 00:15:14,600
and then applying amplification by

349
00:15:10,220 --> 00:15:19,309
shuffling to that and kind of yes kind

350
00:15:14,600 --> 00:15:21,259
of no and the randomizer that I just

351
00:15:19,309 --> 00:15:22,079
showed you for use in the shuffle model

352
00:15:21,259 --> 00:15:24,480
it

353
00:15:22,080 --> 00:15:26,640
is a differentially private in the local

354
00:15:24,480 --> 00:15:29,850
model with some small value of epsilon

355
00:15:26,640 --> 00:15:31,920
and sorry some large value of epsilon so

356
00:15:29,850 --> 00:15:34,470
auto log-in and you can recover the

357
00:15:31,920 --> 00:15:39,199
result that I just showed you directly

358
00:15:34,470 --> 00:15:39,200
by applying amplification by shuffling

359
00:15:40,880 --> 00:15:46,439
however if you just take a local

360
00:15:44,820 --> 00:15:49,950
randomizer designed for use in the local

361
00:15:46,440 --> 00:15:52,320
model such as randomized running to zero

362
00:15:49,950 --> 00:15:56,070
one and randomized response or adding

363
00:15:52,320 --> 00:15:56,970
Laplace random noise then you won't do

364
00:15:56,070 --> 00:15:59,850
particularly well

365
00:15:56,970 --> 00:16:02,970
you'll only get either scroll down or

366
00:15:59,850 --> 00:16:05,640
maybe a log factor improvement so you do

367
00:16:02,970 --> 00:16:07,500
need to choose your local randomizer so

368
00:16:05,640 --> 00:16:09,150
that it's optimized for accuracy in the

369
00:16:07,500 --> 00:16:11,010
shuffle model rather than choosing it so

370
00:16:09,150 --> 00:16:13,620
it's optimized for the local model and

371
00:16:11,010 --> 00:16:21,000
then just applying amplification by

372
00:16:13,620 --> 00:16:24,090
shuffling sorry so there's another

373
00:16:21,000 --> 00:16:25,500
question here which is I've said in the

374
00:16:24,090 --> 00:16:28,260
one message model we can do this what

375
00:16:25,500 --> 00:16:30,090
about many messages so cheer at all said

376
00:16:28,260 --> 00:16:32,910
that with square root N one bit messages

377
00:16:30,090 --> 00:16:36,090
you could do better and you could do as

378
00:16:32,910 --> 00:16:38,670
well as the Q beta model pretty much and

379
00:16:36,090 --> 00:16:40,020
in a recent note which we've put online

380
00:16:38,670 --> 00:16:43,380
on the archives

381
00:16:40,020 --> 00:16:46,590
since submitting this paper we already

382
00:16:43,380 --> 00:16:48,350
know that yes you can and there's not a

383
00:16:46,590 --> 00:16:54,270
huge amount of new work in that note

384
00:16:48,350 --> 00:16:56,370
because it'll be shown deed that you can

385
00:16:54,270 --> 00:16:58,650
get away with order log n messages this

386
00:16:56,370 --> 00:17:00,630
is order log n messages of size order

387
00:16:58,650 --> 00:17:07,109
log n rather than order square root n

388
00:17:00,630 --> 00:17:09,420
messages and so how do we do this it

389
00:17:07,109 --> 00:17:14,089
basically boils down to some result by

390
00:17:09,420 --> 00:17:18,990
issue at all from 2006 which says that

391
00:17:14,089 --> 00:17:21,300
if you have anonymous channels then you

392
00:17:18,990 --> 00:17:27,109
can do secure addition with statistical

393
00:17:21,300 --> 00:17:30,090
security so we can add random noise to

394
00:17:27,109 --> 00:17:31,770
the inputs everyone can add random noise

395
00:17:30,090 --> 00:17:35,760
to the input and then apply this

396
00:17:31,770 --> 00:17:37,918
protocol by issue at all in order to get

397
00:17:35,760 --> 00:17:45,990
with only login messages in order to get

398
00:17:37,919 --> 00:17:49,950
a private form of addition so the so

399
00:17:45,990 --> 00:17:51,330
there's no need to use so if you have

400
00:17:49,950 --> 00:17:53,880
login messages available then you can

401
00:17:51,330 --> 00:18:00,059
get the accuracy of the curator model so

402
00:17:53,880 --> 00:18:02,460
then what questions are left open well

403
00:18:00,059 --> 00:18:03,870
I've said that login messages suffice is

404
00:18:02,460 --> 00:18:05,429
to get the activity of the curator model

405
00:18:03,870 --> 00:18:07,379
and I've said that one message doesn't

406
00:18:05,429 --> 00:18:09,390
you might ask what if I have two

407
00:18:07,380 --> 00:18:12,240
messages or three messages or log log n

408
00:18:09,390 --> 00:18:14,370
messages we're looking into this at the

409
00:18:12,240 --> 00:18:20,970
moment and but right now we're not

410
00:18:14,370 --> 00:18:22,139
entirely sure but then we should

411
00:18:20,970 --> 00:18:23,070
probably also be looking to do things

412
00:18:22,140 --> 00:18:25,169
other than addition

413
00:18:23,070 --> 00:18:27,960
you know the motivation for this model

414
00:18:25,169 --> 00:18:29,490
is that we can maybe have a means of

415
00:18:27,960 --> 00:18:31,799
shuffling or anonymous channels and we

416
00:18:29,490 --> 00:18:34,110
can just use that to compute a lot of

417
00:18:31,799 --> 00:18:36,900
different things and so we only have to

418
00:18:34,110 --> 00:18:38,010
implement this thing once and then you

419
00:18:36,900 --> 00:18:40,440
can compute a lot of different things

420
00:18:38,010 --> 00:18:42,900
with it very efficiently this makes

421
00:18:40,440 --> 00:18:45,179
sense only if you can actually compute a

422
00:18:42,900 --> 00:18:47,820
lot of different things with it so we'd

423
00:18:45,179 --> 00:18:49,410
need to be able to do something other

424
00:18:47,820 --> 00:18:52,980
than addition in this model if we're

425
00:18:49,410 --> 00:18:54,600
going to justify its use we also need to

426
00:18:52,980 --> 00:18:56,910
explain how it's going to be implemented

427
00:18:54,600 --> 00:18:59,399
and there's already work on people

428
00:18:56,910 --> 00:19:02,130
trying to implement shuffling in trusted

429
00:18:59,400 --> 00:19:04,320
Hardware which came out before all this

430
00:19:02,130 --> 00:19:06,919
work on differential privacy in the

431
00:19:04,320 --> 00:19:09,240
shuffle model came out and just because

432
00:19:06,919 --> 00:19:10,710
they thought it seemed intuitive that

433
00:19:09,240 --> 00:19:17,690
shuffling people's data before they

434
00:19:10,710 --> 00:19:19,860
looked at it would improve privacy and

435
00:19:17,690 --> 00:19:21,929
you know we can also think of maybe

436
00:19:19,860 --> 00:19:23,189
doing this using MPC or using a mixed

437
00:19:21,929 --> 00:19:24,630
net or something along these lines but

438
00:19:23,190 --> 00:19:27,540
these options need to be looked into and

439
00:19:24,630 --> 00:19:31,549
it has to be sufficiently cheap in order

440
00:19:27,540 --> 00:19:31,549
to justify using this as a model

441
00:19:32,299 --> 00:19:37,260
another issue is there's a trust

442
00:19:34,740 --> 00:19:39,740
assumption here and in my proof you

443
00:19:37,260 --> 00:19:43,080
might have noticed I assumed that

444
00:19:39,740 --> 00:19:44,820
everyone was following the protocol and

445
00:19:43,080 --> 00:19:46,168
we don't really need to assume that

446
00:19:44,820 --> 00:19:48,840
everyone follows the protocol it's

447
00:19:46,169 --> 00:19:49,040
sufficient for some positive fraction of

448
00:19:48,840 --> 00:19:50,330
P

449
00:19:49,040 --> 00:19:53,030
all that we know in advance to follow

450
00:19:50,330 --> 00:19:54,919
the protocol but we need there to be

451
00:19:53,030 --> 00:20:00,730
enough people following the protocol

452
00:19:54,920 --> 00:20:02,660
that enough of them respond randomly and

453
00:20:00,730 --> 00:20:05,210
don't tell the adversary what their

454
00:20:02,660 --> 00:20:07,040
response was so it can't be merely said

455
00:20:05,210 --> 00:20:09,920
send me honest they have to be honest

456
00:20:07,040 --> 00:20:12,620
that there's enough of a privacy Brian

457
00:20:09,920 --> 00:20:17,870
KITT for you to hide amongst so you

458
00:20:12,620 --> 00:20:20,090
might imagine that maybe some MPC means

459
00:20:17,870 --> 00:20:23,600
of shuffling will allow you to also

460
00:20:20,090 --> 00:20:25,820
verify that this noise is being added

461
00:20:23,600 --> 00:20:27,860
correctly the noise or the randomize

462
00:20:25,820 --> 00:20:30,230
response can be done inside MPC rather

463
00:20:27,860 --> 00:20:34,149
than being done outside of MPC and that

464
00:20:30,230 --> 00:20:34,150
would remove this need to trust people

465
00:20:35,200 --> 00:20:40,490
and then of course yeah so I've said the

466
00:20:38,480 --> 00:20:42,890
shuffle model it will work if all of

467
00:20:40,490 --> 00:20:44,120
these things happen you know if it can

468
00:20:42,890 --> 00:20:45,530
be implemented well if you can do other

469
00:20:44,120 --> 00:20:47,830
functionalities in it if we can remove

470
00:20:45,530 --> 00:20:49,629
this trust assumption then it's great

471
00:20:47,830 --> 00:20:51,379
but maybe it's not the best

472
00:20:49,630 --> 00:20:53,330
functionality for this maybe there are

473
00:20:51,380 --> 00:20:55,850
functionalities which allow you to do

474
00:20:53,330 --> 00:20:58,220
more and are easier to implement and so

475
00:20:55,850 --> 00:21:00,020
another question would be what are the

476
00:20:58,220 --> 00:21:01,520
single functionality could we have that

477
00:21:00,020 --> 00:21:05,389
would allow us to do a great variety of

478
00:21:01,520 --> 00:21:08,410
things cheaply okay that's all I've got

479
00:21:05,390 --> 00:21:08,410
to say thank you

480
00:21:12,480 --> 00:21:21,970
thank you very much James do we have any

481
00:21:15,580 --> 00:21:24,610
questions okay if there are no further

482
00:21:21,970 --> 00:21:25,630
questions let's thank James and all the

483
00:21:24,610 --> 00:21:28,359
speakers of the session again

484
00:21:25,630 --> 00:21:28,359
[Applause]

