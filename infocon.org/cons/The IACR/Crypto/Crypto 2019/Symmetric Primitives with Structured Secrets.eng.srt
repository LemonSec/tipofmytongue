1
00:00:05,210 --> 00:00:10,230
thanks to you for the introduction

2
00:00:07,500 --> 00:00:12,719
welcome everybody to the last talk of

3
00:00:10,230 --> 00:00:14,250
today I'm never done I'll be talking

4
00:00:12,719 --> 00:00:16,590
about symmetric primitives with

5
00:00:14,250 --> 00:00:19,380
structured secrets this is a joint work

6
00:00:16,590 --> 00:00:23,220
with Hart Montgomery and Shekhar Patrona

7
00:00:19,380 --> 00:00:24,960
bees let me start by considering key

8
00:00:23,220 --> 00:00:27,448
rotation in the cloud which is one of

9
00:00:24,960 --> 00:00:30,359
the most widely used tools to protect

10
00:00:27,449 --> 00:00:31,830
data in the cloud so key rotation in the

11
00:00:30,359 --> 00:00:34,050
cloud is one of the cryptographic

12
00:00:31,830 --> 00:00:36,570
applications that we encounter in many

13
00:00:34,050 --> 00:00:38,159
scenarios so suppose that we have some

14
00:00:36,570 --> 00:00:40,799
encrypted data in a cloud using

15
00:00:38,159 --> 00:00:42,659
symmetric key encryption and as a

16
00:00:40,799 --> 00:00:45,440
security measure we need to do key

17
00:00:42,659 --> 00:00:47,640
rotation in certain time intervals and

18
00:00:45,440 --> 00:00:50,970
naive approach to do this would be

19
00:00:47,640 --> 00:00:52,769
downloading all ciphertext encryption

20
00:00:50,970 --> 00:00:55,979
using a new key and then uploading all

21
00:00:52,769 --> 00:00:57,510
ciphertext back to the cloud however

22
00:00:55,979 --> 00:00:59,699
it's easy to see that such an approach

23
00:00:57,510 --> 00:01:02,129
would be overwhelmingly inefficient and

24
00:00:59,699 --> 00:01:04,500
it would require more resources so

25
00:01:02,129 --> 00:01:06,869
fortunately cryptographers came up with

26
00:01:04,500 --> 00:01:08,340
a more efficient approach which is to

27
00:01:06,869 --> 00:01:10,110
use cryptography primitives that

28
00:01:08,340 --> 00:01:13,290
although us to transform a ciphertext

29
00:01:10,110 --> 00:01:15,240
encrypted under certain secret PSK

30
00:01:13,290 --> 00:01:17,910
- another cipher text encrypted under

31
00:01:15,240 --> 00:01:20,130
another secret key sk prime using some

32
00:01:17,910 --> 00:01:22,229
ancillary information and as the

33
00:01:20,130 --> 00:01:24,479
security property we require that the

34
00:01:22,230 --> 00:01:27,810
auxilary information should not leaked

35
00:01:24,480 --> 00:01:30,750
underlying data now let's see a couple

36
00:01:27,810 --> 00:01:32,610
of examples of such primitives maybe the

37
00:01:30,750 --> 00:01:34,740
oldest example of such primitives is

38
00:01:32,610 --> 00:01:36,540
proxy encryption which has been

39
00:01:34,740 --> 00:01:39,390
considered in both symmetric and

40
00:01:36,540 --> 00:01:42,170
asymmetric setting proxy encryption has

41
00:01:39,390 --> 00:01:44,310
been proposed by Balazs italian 98 and

42
00:01:42,170 --> 00:01:46,560
subsequent works showed improved

43
00:01:44,310 --> 00:01:50,580
versions of this primitive both in terms

44
00:01:46,560 --> 00:01:53,820
of efficiency and security a more recent

45
00:01:50,580 --> 00:01:55,830
example is updatable encryption which

46
00:01:53,820 --> 00:01:58,800
has been formally defined by Bonnie Hall

47
00:01:55,830 --> 00:02:00,330
in 2013 and recently we have seen

48
00:01:58,800 --> 00:02:02,250
variants of this primitive with

49
00:02:00,330 --> 00:02:04,890
relatively strong security guarantees

50
00:02:02,250 --> 00:02:09,360
known as post compromised security

51
00:02:04,890 --> 00:02:11,340
proposed by lemon and TaqMan in 2018 in

52
00:02:09,360 --> 00:02:13,230
a more fundamental level there's also a

53
00:02:11,340 --> 00:02:16,110
primitive culture amorphic pseudo-random

54
00:02:13,230 --> 00:02:17,819
functions which has been implicitly

55
00:02:16,110 --> 00:02:21,120
introduced by now pink

56
00:02:17,819 --> 00:02:24,328
and wrangled in 99 and formally defined

57
00:02:21,120 --> 00:02:27,060
by BLM r-13 this primitive has also

58
00:02:24,329 --> 00:02:29,489
further applications such as distributed

59
00:02:27,060 --> 00:02:31,920
prfs and pseudo-random functions that

60
00:02:29,489 --> 00:02:34,530
are secured against related key attacks

61
00:02:31,920 --> 00:02:36,450
and also updatable encryption this

62
00:02:34,530 --> 00:02:38,519
primitive is particularly interesting

63
00:02:36,450 --> 00:02:41,010
because it served as a building block to

64
00:02:38,519 --> 00:02:45,689
build other primitives such as updatable

65
00:02:41,010 --> 00:02:49,168
encryption now a natural question to ask

66
00:02:45,689 --> 00:02:50,689
is what would bring all these primitives

67
00:02:49,169 --> 00:02:52,709
under one umbrella

68
00:02:50,689 --> 00:02:54,900
although these primitives differ

69
00:02:52,709 --> 00:02:57,120
significantly in terms of constructions

70
00:02:54,900 --> 00:03:01,530
and proofs these primitives have some

71
00:02:57,120 --> 00:03:04,109
common properties so the first one is

72
00:03:01,530 --> 00:03:06,750
that these are all sensibly symmetric

73
00:03:04,109 --> 00:03:09,419
primitives that have a structured secret

74
00:03:06,750 --> 00:03:11,400
space or extra functionality for example

75
00:03:09,419 --> 00:03:13,889
in the case of keyhole morphic

76
00:03:11,400 --> 00:03:15,299
pseudo-random function the key space is

77
00:03:13,889 --> 00:03:17,969
a group which is algebraically

78
00:03:15,299 --> 00:03:20,159
structured or in the case of updatable

79
00:03:17,969 --> 00:03:21,659
encryption the capab the extra

80
00:03:20,159 --> 00:03:23,668
functionality is the capability to

81
00:03:21,659 --> 00:03:26,399
transform a ciphertext encrypted under a

82
00:03:23,669 --> 00:03:27,810
secret key to another ciphertext under

83
00:03:26,400 --> 00:03:31,259
some other secret key

84
00:03:27,810 --> 00:03:33,810
in addition known constructions of these

85
00:03:31,259 --> 00:03:36,478
primitives require relatively strong

86
00:03:33,810 --> 00:03:39,090
concrete public key assumptions such as

87
00:03:36,479 --> 00:03:40,949
VD h or decisional diffie-hellman or

88
00:03:39,090 --> 00:03:42,769
learning with errors even the

89
00:03:40,949 --> 00:03:46,889
constructions in the random Oracle model

90
00:03:42,769 --> 00:03:49,290
need public key assumptions so this may

91
00:03:46,889 --> 00:03:53,069
imply that public key assumptions are

92
00:03:49,290 --> 00:03:54,780
inherent to both these primitives so the

93
00:03:53,069 --> 00:03:57,689
main question that we study in this

94
00:03:54,780 --> 00:04:00,150
world is our public key assumptions

95
00:03:57,689 --> 00:04:03,150
necessary for building these primitives

96
00:04:00,150 --> 00:04:05,879
the answer is guessed and here we have

97
00:04:03,150 --> 00:04:09,509
an overview of our results we show that

98
00:04:05,879 --> 00:04:11,698
a key home morphic weak PRF implies a

99
00:04:09,509 --> 00:04:13,888
certain primitive known as input

100
00:04:11,699 --> 00:04:16,289
homomorphic weaker F which has recently

101
00:04:13,889 --> 00:04:18,060
been shown to imply a bunch of

102
00:04:16,289 --> 00:04:20,969
primitives such as

103
00:04:18,060 --> 00:04:23,460
PIR private information searchable lossy

104
00:04:20,969 --> 00:04:27,150
trapdoor functions and of course public

105
00:04:23,460 --> 00:04:29,789
key encryption in addition we show that

106
00:04:27,150 --> 00:04:31,650
a proxy encryption with UPD security

107
00:04:29,789 --> 00:04:34,080
implies an updatable

108
00:04:31,650 --> 00:04:36,198
option with UPD security which in turn

109
00:04:34,080 --> 00:04:39,419
implies public key encryption

110
00:04:36,199 --> 00:04:41,759
more specifically we show that a proxy

111
00:04:39,419 --> 00:04:43,500
encryption with UPD security implies an

112
00:04:41,759 --> 00:04:45,120
updatable encryption with a strong

113
00:04:43,500 --> 00:04:47,280
security guarantee known as post

114
00:04:45,120 --> 00:04:49,500
compromised security and such an

115
00:04:47,280 --> 00:04:53,489
updatable encryption is sufficient to

116
00:04:49,500 --> 00:04:55,919
realize public key encryption this means

117
00:04:53,490 --> 00:04:59,490
that these primitive belong to the world

118
00:04:55,919 --> 00:05:03,389
of asymmetric primitives so the green

119
00:04:59,490 --> 00:05:05,550
arrows are contributions from Europe 19

120
00:05:03,389 --> 00:05:09,570
and the black arrows are the results

121
00:05:05,550 --> 00:05:11,550
from our work in addition we also show

122
00:05:09,570 --> 00:05:13,949
that certain variants of keyhole morphic

123
00:05:11,550 --> 00:05:20,070
weak pseudo-random functions do not have

124
00:05:13,949 --> 00:05:22,229
post quantum security now for the rest

125
00:05:20,070 --> 00:05:24,300
of the talk I'm gonna focus on this

126
00:05:22,229 --> 00:05:26,310
particular result and we will see how to

127
00:05:24,300 --> 00:05:30,060
get a key exchange protocol which is

128
00:05:26,310 --> 00:05:31,590
sufficient to realize pke from an exact

129
00:05:30,060 --> 00:05:34,620
key homomorphic weak pseudo-random

130
00:05:31,590 --> 00:05:36,539
function the ideas for this construction

131
00:05:34,620 --> 00:05:38,550
and its proof can be used in similar

132
00:05:36,539 --> 00:05:41,430
ways to construct a variety of

133
00:05:38,550 --> 00:05:46,770
primitives such as trapdoor functions or

134
00:05:41,430 --> 00:05:49,229
TIR and I'm gonna also quickly recall

135
00:05:46,770 --> 00:05:51,359
some of the definitions that we need for

136
00:05:49,229 --> 00:05:54,570
this particular result so if you are not

137
00:05:51,360 --> 00:05:57,960
even familiar with the big PRF I'll show

138
00:05:54,570 --> 00:06:00,930
the definition so we say that a function

139
00:05:57,960 --> 00:06:03,210
family is a weak PRF if an attacker

140
00:06:00,930 --> 00:06:06,479
cannot distinguish between samples of

141
00:06:03,210 --> 00:06:09,239
the form X I and fkx eyes from excise

142
00:06:06,479 --> 00:06:11,940
and you I swear you eyes are chosen

143
00:06:09,240 --> 00:06:14,520
uniformly from the output space of the

144
00:06:11,940 --> 00:06:15,960
weak PRF this is seemingly a victor

145
00:06:14,520 --> 00:06:18,210
version of a plain pseudo-random

146
00:06:15,960 --> 00:06:20,909
function where and where an attacker

147
00:06:18,210 --> 00:06:23,460
gets to see function evaluations on only

148
00:06:20,909 --> 00:06:27,620
randomly chosen infants instead of

149
00:06:23,460 --> 00:06:31,409
adaptively choose an input now let's see

150
00:06:27,620 --> 00:06:34,979
geomorphic weak pure so we say that a

151
00:06:31,409 --> 00:06:38,580
big PRF is she home morphic if the key

152
00:06:34,979 --> 00:06:40,919
space and output space or groups with

153
00:06:38,580 --> 00:06:43,650
efficiently computable group operations

154
00:06:40,919 --> 00:06:45,359
and in addition it satisfies the key

155
00:06:43,650 --> 00:06:47,758
homomorphism property

156
00:06:45,360 --> 00:06:51,330
which is basically given any to kiss K

157
00:06:47,759 --> 00:06:54,689
and K Prime and any input X we have F of

158
00:06:51,330 --> 00:06:57,870
k plus K prime X is equal to F of K

159
00:06:54,689 --> 00:07:00,830
prime X times F of K prime X F of 2x

160
00:06:57,870 --> 00:07:03,449
times F of K prime X we usually use +

161
00:07:00,830 --> 00:07:05,580
for the group operation on the key space

162
00:07:03,449 --> 00:07:11,039
and x for the group operation on the

163
00:07:05,580 --> 00:07:13,620
output space it's long been known that

164
00:07:11,039 --> 00:07:16,110
we can build weak pseudo-random

165
00:07:13,620 --> 00:07:18,479
functions in a generic manner from any

166
00:07:16,110 --> 00:07:20,729
one way function but with the result of

167
00:07:18,479 --> 00:07:23,699
this paper it doesn't seem likely that

168
00:07:20,729 --> 00:07:26,250
when we augment a bit PRF with keyhole

169
00:07:23,699 --> 00:07:28,469
morphism we can build it in a generic

170
00:07:26,250 --> 00:07:32,940
manner from any one-way function because

171
00:07:28,469 --> 00:07:34,860
it implies public key encryption now

172
00:07:32,940 --> 00:07:38,129
let's see a simple example of a key

173
00:07:34,860 --> 00:07:40,500
homomorphic weak PRF so if G Bab EDH

174
00:07:38,129 --> 00:07:43,259
hard group of order Q or G be a group

175
00:07:40,500 --> 00:07:46,050
over which the D H holds consider the

176
00:07:43,259 --> 00:07:49,199
function f whose key space is the hue

177
00:07:46,050 --> 00:07:52,229
and input and output output space are

178
00:07:49,199 --> 00:07:55,529
both the group G so if we define the

179
00:07:52,229 --> 00:07:58,409
function f as f of K H equals to H to

180
00:07:55,529 --> 00:08:01,199
the K which is a single exponentiation

181
00:07:58,409 --> 00:08:04,650
of group element it is easy to see that

182
00:08:01,199 --> 00:08:07,710
this is a weak PRF based on ddh

183
00:08:04,650 --> 00:08:10,198
assumption in addition it also satisfies

184
00:08:07,710 --> 00:08:12,960
the key hole morphism property which is

185
00:08:10,199 --> 00:08:16,440
f of k plus K prime is going to be equal

186
00:08:12,960 --> 00:08:18,150
to f of K H times F of K prime H where

187
00:08:16,440 --> 00:08:20,879
the multiplication is the group

188
00:08:18,150 --> 00:08:23,549
operation over the output space in

189
00:08:20,879 --> 00:08:26,969
addition if you define the function f as

190
00:08:23,550 --> 00:08:29,580
f of KX equals to H of X to the K where

191
00:08:26,969 --> 00:08:33,059
H is a random Oracle from bit strings to

192
00:08:29,580 --> 00:08:35,218
the PTH hard group so it is it has been

193
00:08:33,059 --> 00:08:37,768
shown that this is a key homomorphic PRF

194
00:08:35,219 --> 00:08:42,120
in the random Oracle model which has

195
00:08:37,769 --> 00:08:43,110
been shown by now King Poisson Rheingold

196
00:08:42,120 --> 00:08:45,449
in 1990

197
00:08:43,110 --> 00:08:48,240
so the definition that I give you for a

198
00:08:45,449 --> 00:08:50,670
QM morphic weak PRF requires that the

199
00:08:48,240 --> 00:08:53,970
function evaluations on sum of two Keys

200
00:08:50,670 --> 00:08:56,279
is equal to function evaluate to product

201
00:08:53,970 --> 00:08:58,700
a function evaluation on each individual

202
00:08:56,279 --> 00:09:01,790
key it's also possible to consider

203
00:08:58,700 --> 00:09:04,520
relax definitions one relax definition

204
00:09:01,790 --> 00:09:06,949
is almost or non exactly homomorphic

205
00:09:04,520 --> 00:09:09,890
week PRF and in this definition we

206
00:09:06,950 --> 00:09:13,250
require that f of k plus K prime X is

207
00:09:09,890 --> 00:09:15,980
close to f of K X times f of K prime X

208
00:09:13,250 --> 00:09:18,080
instead of being equal as a simple

209
00:09:15,980 --> 00:09:20,390
example if you consider this function

210
00:09:18,080 --> 00:09:23,810
where the input and key space are both

211
00:09:20,390 --> 00:09:25,880
zqn and the function is defined as the

212
00:09:23,810 --> 00:09:28,609
dot product or inner product of these

213
00:09:25,880 --> 00:09:34,090
two vectors over the Q rounded some

214
00:09:28,610 --> 00:09:38,120
modulus P this has been shown to be an

215
00:09:34,090 --> 00:09:41,750
weak PRF by banerjee part and rosin in

216
00:09:38,120 --> 00:09:43,940
2012 and it's kind of easy to see that

217
00:09:41,750 --> 00:09:46,910
this satisfies all mostly homeworks and

218
00:09:43,940 --> 00:09:50,420
property because for two different keys

219
00:09:46,910 --> 00:09:53,860
SN T F of si plus F of T a is going to

220
00:09:50,420 --> 00:09:56,870
be very close to F of s plus T a now

221
00:09:53,860 --> 00:09:59,570
before going into the construction of

222
00:09:56,870 --> 00:10:02,150
key exchange from geomorphic weak PRF

223
00:09:59,570 --> 00:10:04,040
I'm going to describe some notation that

224
00:10:02,150 --> 00:10:08,090
we'll use for the construction and proof

225
00:10:04,040 --> 00:10:11,540
so if Y is a vector of group elements

226
00:10:08,090 --> 00:10:14,960
and s is a binary vector I'm gonna use

227
00:10:11,540 --> 00:10:17,599
YT s or s dy to essentially denote the

228
00:10:14,960 --> 00:10:22,190
subset product over the components of Y

229
00:10:17,600 --> 00:10:24,290
using the binary vector s this notation

230
00:10:22,190 --> 00:10:26,720
can be similarly generalized into the

231
00:10:24,290 --> 00:10:29,750
setting where Y is a matrix of group

232
00:10:26,720 --> 00:10:32,660
element so if Y is a matrix of group

233
00:10:29,750 --> 00:10:35,540
element and s is a binary vector again Y

234
00:10:32,660 --> 00:10:40,730
s is gonna be a vector whose components

235
00:10:35,540 --> 00:10:43,370
are rows of Y where you do the subset

236
00:10:40,730 --> 00:10:46,100
product over the rows of Y for example

237
00:10:43,370 --> 00:10:48,440
the first component of Y s is gonna be

238
00:10:46,100 --> 00:10:54,500
the subset product over the first row of

239
00:10:48,440 --> 00:10:56,810
Y now to make sure that everybody is

240
00:10:54,500 --> 00:10:59,210
following the last talk of today I'm

241
00:10:56,810 --> 00:11:02,000
gonna show you a key exchange protocol

242
00:10:59,210 --> 00:11:04,370
from a keyhole morphic weak PRF where we

243
00:11:02,000 --> 00:11:05,420
don't actually use the V key of morphic

244
00:11:04,370 --> 00:11:09,710
which PRF

245
00:11:05,420 --> 00:11:11,870
so we have some Gilmour picnic PRF F

246
00:11:09,710 --> 00:11:13,850
and suppose that n is a large love

247
00:11:11,870 --> 00:11:15,500
integer large enough integer I'll talk

248
00:11:13,850 --> 00:11:18,380
about this integer later

249
00:11:15,500 --> 00:11:20,420
and why is an abelian group in addition

250
00:11:18,380 --> 00:11:24,350
suppose that we also have a uniform

251
00:11:20,420 --> 00:11:26,719
matrix of group elements this is a this

252
00:11:24,350 --> 00:11:28,940
is a square matrix where each element of

253
00:11:26,720 --> 00:11:31,899
the matrix is uniformly chosen from the

254
00:11:28,940 --> 00:11:36,380
output group of the QM morphic weak PRF

255
00:11:31,899 --> 00:11:40,370
so we assume that Y is our common random

256
00:11:36,380 --> 00:11:43,160
string so we have two parties Alice and

257
00:11:40,370 --> 00:11:46,850
Bob and they want to do key exchange so

258
00:11:43,160 --> 00:11:49,310
al examples a binary vector a and Bob

259
00:11:46,850 --> 00:11:53,390
samples and NB to string binary vector P

260
00:11:49,310 --> 00:11:56,779
Alice sends a transpose Y to Bob which

261
00:11:53,390 --> 00:11:59,899
is a subset product over the rows of Y

262
00:11:56,779 --> 00:12:03,680
Bob sends YB to the Alice which is a

263
00:11:59,899 --> 00:12:05,750
subset product over the columns of Y it

264
00:12:03,680 --> 00:12:10,130
is easy to see that if y is an abelian

265
00:12:05,750 --> 00:12:12,770
group Alice and Bob both compute final

266
00:12:10,130 --> 00:12:16,610
secret mutually in the sense that a T

267
00:12:12,770 --> 00:12:18,470
transpose Y P where a is the binary

268
00:12:16,610 --> 00:12:21,950
vector that belongs to Alice is going to

269
00:12:18,470 --> 00:12:24,320
be equal to a transpose Y P so in the

270
00:12:21,950 --> 00:12:27,080
first one we take a subset product over

271
00:12:24,320 --> 00:12:29,480
the vector Y be using a and in the

272
00:12:27,080 --> 00:12:33,140
second one we use we do the subset

273
00:12:29,480 --> 00:12:35,420
product over the vector a t y using B so

274
00:12:33,140 --> 00:12:37,610
the second exchange protocol and we

275
00:12:35,420 --> 00:12:39,860
haven't actually used the geomorphic

276
00:12:37,610 --> 00:12:43,430
which PRF but we are going to use it for

277
00:12:39,860 --> 00:12:46,459
the security to prove the security of

278
00:12:43,430 --> 00:12:48,319
the construction we are gonna use the

279
00:12:46,459 --> 00:12:50,390
pseudo randomness or hardness of

280
00:12:48,320 --> 00:12:53,390
repeated subset products in the output

281
00:12:50,390 --> 00:12:57,170
group so consider these two vectors X

282
00:12:53,390 --> 00:12:59,870
and K where x1 through XM are uniformly

283
00:12:57,170 --> 00:13:02,599
chosen elements from the input space of

284
00:12:59,870 --> 00:13:04,610
the keyhole morphic weak PRF and k1

285
00:13:02,600 --> 00:13:09,440
through kN are uniformly chosen elements

286
00:13:04,610 --> 00:13:12,230
from the key space now we form the we

287
00:13:09,440 --> 00:13:15,380
form a matrix of weak pair of outputs in

288
00:13:12,230 --> 00:13:18,660
the following way so we use the key

289
00:13:15,380 --> 00:13:22,740
vector in each row and we use the

290
00:13:18,660 --> 00:13:25,980
input vector in each column now if I

291
00:13:22,740 --> 00:13:30,660
take a random subset product of columns

292
00:13:25,980 --> 00:13:32,970
of s since F is Keyhoe morphic I can

293
00:13:30,660 --> 00:13:35,579
push the subset product of columns of s

294
00:13:32,970 --> 00:13:37,920
to the key space and I can view it as a

295
00:13:35,579 --> 00:13:40,920
subset sum over the key space

296
00:13:37,920 --> 00:13:43,079
this means that FS using the notation

297
00:13:40,920 --> 00:13:46,500
that I described in the previous slide

298
00:13:43,079 --> 00:13:50,160
is going to be equal to F of K star x

299
00:13:46,500 --> 00:13:55,800
i's for some k star that is equal to s 1

300
00:13:50,160 --> 00:13:58,350
k 1 plus s 2 k 2 through s NK n so we

301
00:13:55,800 --> 00:14:00,660
use the key homomorphism of F to say

302
00:13:58,350 --> 00:14:04,290
that this is equal to F of K star x i's

303
00:14:00,660 --> 00:14:07,259
now by the left or hash lemma we know

304
00:14:04,290 --> 00:14:10,589
that if n is large enough we can say

305
00:14:07,259 --> 00:14:13,440
that given K chain starts statistically

306
00:14:10,589 --> 00:14:17,970
indistinguishable from uniform so this

307
00:14:13,440 --> 00:14:19,740
means that given the matrix F F is FS is

308
00:14:17,970 --> 00:14:23,250
computationally indistinguishable from

309
00:14:19,740 --> 00:14:26,430
random or essentially this means that FS

310
00:14:23,250 --> 00:14:33,389
is the PRF big PRF evaluations on a

311
00:14:26,430 --> 00:14:36,060
fresh random key so we know that F is

312
00:14:33,389 --> 00:14:38,579
out would have the weak PRF on uniform K

313
00:14:36,060 --> 00:14:42,689
input pairs and in the previous slide we

314
00:14:38,579 --> 00:14:45,149
saw that given FS is computationally

315
00:14:42,689 --> 00:14:49,199
indistinguishable from Brando now we

316
00:14:45,149 --> 00:14:50,790
know that F itself is also computational

317
00:14:49,199 --> 00:14:53,279
indistinguishable from random because

318
00:14:50,790 --> 00:14:55,889
its output of uniform and key input

319
00:14:53,279 --> 00:14:59,040
pairs so if we combine these together

320
00:14:55,889 --> 00:15:03,089
this implies that given a uniform matrix

321
00:14:59,040 --> 00:15:05,339
y ys is pseudo-random so this proof

322
00:15:03,089 --> 00:15:08,610
technique has some other interesting

323
00:15:05,339 --> 00:15:11,399
implications as well so notice that so

324
00:15:08,610 --> 00:15:14,100
far we have only used the fact that the

325
00:15:11,399 --> 00:15:16,110
number of columns of Y are large enough

326
00:15:14,100 --> 00:15:16,649
so that we can apply the left over hash

327
00:15:16,110 --> 00:15:19,410
lemma

328
00:15:16,649 --> 00:15:21,720
this means that number of rows of Y play

329
00:15:19,410 --> 00:15:23,819
essentially no role in the proof other

330
00:15:21,720 --> 00:15:26,449
than the fact that we need large enough

331
00:15:23,819 --> 00:15:29,370
rows to do the key exchange protocol

332
00:15:26,449 --> 00:15:32,280
this means that linear equations with

333
00:15:29,370 --> 00:15:34,140
binary coefficients over the

334
00:15:32,280 --> 00:15:37,290
put space of a key homework week week

335
00:15:34,140 --> 00:15:39,390
PRF is interactable in particular this

336
00:15:37,290 --> 00:15:40,969
means that there is no exactly home

337
00:15:39,390 --> 00:15:44,160
morphic week period of instantiation

338
00:15:40,970 --> 00:15:48,330
whose output group szq with plain

339
00:15:44,160 --> 00:15:50,339
addition the hardness of repeated subset

340
00:15:48,330 --> 00:15:52,800
products or the pseudo randomness of

341
00:15:50,340 --> 00:15:54,780
knapsack function is versatile enough to

342
00:15:52,800 --> 00:15:56,939
build a variety of cryptography

343
00:15:54,780 --> 00:16:00,240
primitives such as trapdoor functions

344
00:15:56,940 --> 00:16:02,310
and PIR as a simple trick one can use

345
00:16:00,240 --> 00:16:04,860
binary matrices instead of binary

346
00:16:02,310 --> 00:16:09,420
vectors to get a certain cryptographic

347
00:16:04,860 --> 00:16:12,330
primitives for example one can define a

348
00:16:09,420 --> 00:16:14,670
function f where the input space for the

349
00:16:12,330 --> 00:16:18,420
function f is the set of Al bit strings

350
00:16:14,670 --> 00:16:21,120
and the key is a uniformly random square

351
00:16:18,420 --> 00:16:24,089
matrix where the elements of this matrix

352
00:16:21,120 --> 00:16:27,150
lives in the output group and s1 through

353
00:16:24,090 --> 00:16:30,330
as L or binary matrices if we define a

354
00:16:27,150 --> 00:16:33,030
function such that on this key and

355
00:16:30,330 --> 00:16:37,170
output outputs on this key and input

356
00:16:33,030 --> 00:16:39,839
outputs Y time subsets product of Si by

357
00:16:37,170 --> 00:16:42,599
the geomorphic weak pseudo randomness of

358
00:16:39,839 --> 00:16:45,320
F it can be shown that this is actually

359
00:16:42,600 --> 00:16:48,540
as strong pseudo-random function

360
00:16:45,320 --> 00:16:50,790
although the hardness of repeated subset

361
00:16:48,540 --> 00:16:53,160
products is versatile enough to build

362
00:16:50,790 --> 00:16:55,800
many cryptographic primitives it comes

363
00:16:53,160 --> 00:16:59,189
with some shortcomings as well for

364
00:16:55,800 --> 00:17:01,530
example we can use quantum algorithms to

365
00:16:59,190 --> 00:17:05,040
determine the structure of any abelian

366
00:17:01,530 --> 00:17:07,980
group this means that we can use these

367
00:17:05,040 --> 00:17:10,139
quantum algorithms to show that exactly

368
00:17:07,980 --> 00:17:13,589
how morphic weak perhaps with a billion

369
00:17:10,140 --> 00:17:15,959
output groups cannot be secured against

370
00:17:13,589 --> 00:17:18,659
Kohanim attack this means that over a

371
00:17:15,959 --> 00:17:20,459
billion groups approximate approximate

372
00:17:18,660 --> 00:17:22,650
homomorphism is the best that we can

373
00:17:20,459 --> 00:17:26,250
hope for in terms of post quantum

374
00:17:22,650 --> 00:17:29,010
security the idea for the attack is

375
00:17:26,250 --> 00:17:31,230
pretty simple we first use the quantum

376
00:17:29,010 --> 00:17:33,480
algorithm to determine the structure of

377
00:17:31,230 --> 00:17:35,670
the output group which is basically

378
00:17:33,480 --> 00:17:38,370
decomposing the abelian group into its

379
00:17:35,670 --> 00:17:40,230
cyclic components and then we use such

380
00:17:38,370 --> 00:17:42,510
explicit representation of the output

381
00:17:40,230 --> 00:17:45,660
group to solve a linear system of

382
00:17:42,510 --> 00:17:49,080
modular equations such an attack can be

383
00:17:45,660 --> 00:17:51,630
generalized to basically any primitive

384
00:17:49,080 --> 00:17:55,290
with exact home morphism over a billion

385
00:17:51,630 --> 00:17:57,320
groups I'm going to include the track

386
00:17:55,290 --> 00:17:59,460
with a couple of open problems

387
00:17:57,320 --> 00:18:01,649
recall that the construction of public

388
00:17:59,460 --> 00:18:04,800
encryption or key exchange from an

389
00:18:01,650 --> 00:18:07,290
exactly home or fatigue PRF or non exact

390
00:18:04,800 --> 00:18:09,389
one requires the output group to be a

391
00:18:07,290 --> 00:18:12,000
billion so the question is can we

392
00:18:09,390 --> 00:18:14,010
construct public encryption from a key

393
00:18:12,000 --> 00:18:17,400
home morphic weak PRF whose output group

394
00:18:14,010 --> 00:18:19,050
is non abelian recall that the pseudo

395
00:18:17,400 --> 00:18:21,060
randomness of an abstract function or

396
00:18:19,050 --> 00:18:23,850
hardness of repeated subset products

397
00:18:21,060 --> 00:18:26,399
holds if the output group is non abelian

398
00:18:23,850 --> 00:18:28,620
one and we all we only need a billion

399
00:18:26,400 --> 00:18:31,170
property to show the correctness of the

400
00:18:28,620 --> 00:18:32,879
key exchange protocol the next open

401
00:18:31,170 --> 00:18:34,770
problem is constructing public key

402
00:18:32,880 --> 00:18:36,620
encryption from home morphic

403
00:18:34,770 --> 00:18:39,930
pseudo-random generators which is

404
00:18:36,620 --> 00:18:42,000
seemingly weak or primitive so it is

405
00:18:39,930 --> 00:18:43,830
easy to see that any key home morphic

406
00:18:42,000 --> 00:18:46,530
each PRF implies a home morphic

407
00:18:43,830 --> 00:18:49,560
pseudo-random generator just by viewing

408
00:18:46,530 --> 00:18:51,180
the key of the key home morphic weak PRF

409
00:18:49,560 --> 00:18:53,460
as a seat for the PRG

410
00:18:51,180 --> 00:18:56,130
and leaving the input or inputs as the

411
00:18:53,460 --> 00:18:58,230
public parameter finally it's also

412
00:18:56,130 --> 00:19:00,420
interesting to consider improved

413
00:18:58,230 --> 00:19:02,580
definition definitions or constructions

414
00:19:00,420 --> 00:19:04,320
of updatable encryption that does not

415
00:19:02,580 --> 00:19:06,840
immediately employ public encryption

416
00:19:04,320 --> 00:19:09,149
such an updatable encryption might be

417
00:19:06,840 --> 00:19:11,909
helpful to perform certain tasks such as

418
00:19:09,150 --> 00:19:13,320
she wrote a ssin in cloud using purely

419
00:19:11,910 --> 00:19:15,870
symmetric primitives which would be

420
00:19:13,320 --> 00:19:18,919
overwhelmingly inefficient thanks for

421
00:19:15,870 --> 00:19:18,919
your attention to the top

422
00:19:23,720 --> 00:19:28,940
if you have a question please come to

423
00:19:26,370 --> 00:19:28,939
the microphone

424
00:19:34,680 --> 00:19:40,290
I have one question you didn't talk

425
00:19:36,990 --> 00:19:46,710
about proxy orientation and updating

426
00:19:40,290 --> 00:19:51,149
trip soon I in the chemo with PRF case

427
00:19:46,710 --> 00:19:52,980
you use the structure more ohmic

428
00:19:51,150 --> 00:19:56,790
property but in the case of

429
00:19:52,980 --> 00:19:59,070
approximation I so the rough idea to do

430
00:19:56,790 --> 00:20:01,139
that construction is that since we have

431
00:19:59,070 --> 00:20:02,700
indistinguishability of updates or

432
00:20:01,140 --> 00:20:04,890
something like indistinguishability of

433
00:20:02,700 --> 00:20:07,950
tokens and it gives you the capability

434
00:20:04,890 --> 00:20:11,010
to transform ciphertext given some sick

435
00:20:07,950 --> 00:20:12,990
under some secret PSK to ciphertext

436
00:20:11,010 --> 00:20:15,060
under another security escape time you

437
00:20:12,990 --> 00:20:17,430
essentially use this capability to sort

438
00:20:15,060 --> 00:20:19,530
of do a key exchange protocol when where

439
00:20:17,430 --> 00:20:22,110
you switch the knowledge of secret key

440
00:20:19,530 --> 00:20:24,240
to the knowledge of tokens and use this

441
00:20:22,110 --> 00:20:35,389
to perform the public encryption or key

442
00:20:24,240 --> 00:20:39,830
exchange such things more questions no

443
00:20:35,390 --> 00:20:39,830
thanks old speakers again

