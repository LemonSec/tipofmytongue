1
00:00:04,880 --> 00:00:11,180
this is a mathematical mystery as this

2
00:00:08,180 --> 00:00:12,620
work yes this works so this is something

3
00:00:11,180 --> 00:00:15,230
that I have been talking about a little

4
00:00:12,620 --> 00:00:18,169
bit with Travis Scholl and Dan sumo so

5
00:00:15,230 --> 00:00:20,000
mystery so as you may notice from my

6
00:00:18,170 --> 00:00:25,580
shirt I've been getting into blockchain

7
00:00:20,000 --> 00:00:27,500
recently in my way and as a side effect

8
00:00:25,580 --> 00:00:30,439
of a paper that I was working on

9
00:00:27,500 --> 00:00:33,379
recently we ended up looking for

10
00:00:30,440 --> 00:00:36,350
colliding ECDSA nonces in the Bitcoin

11
00:00:33,379 --> 00:00:40,789
blockchain and if you do this you notice

12
00:00:36,350 --> 00:00:43,129
that 99% of the repeated ECDSA nonces

13
00:00:40,789 --> 00:00:46,789
which gives you the private key are this

14
00:00:43,129 --> 00:00:49,159
value which happens to be n minus 1 over

15
00:00:46,789 --> 00:00:53,269
2 where n is the order of the elliptic

16
00:00:49,159 --> 00:00:56,510
curve used for Bitcoin so this is an

17
00:00:53,269 --> 00:00:58,879
interesting thing what's going on so it

18
00:00:56,510 --> 00:01:00,799
turns out that the x-coordinate of this

19
00:00:58,879 --> 00:01:03,708
value times the generator of the curve

20
00:01:00,799 --> 00:01:07,700
which is the same as the x coordinate of

21
00:01:03,709 --> 00:01:12,530
1/2 times the this point has 166 bits

22
00:01:07,700 --> 00:01:17,899
it's this value instead of 256 bits so

23
00:01:12,530 --> 00:01:20,390
that's interesting this has been known

24
00:01:17,899 --> 00:01:22,939
to sort of the Bitcoin crowd for some

25
00:01:20,390 --> 00:01:24,799
time and they're all like dude this

26
00:01:22,939 --> 00:01:29,419
magic belly decreases my transaction

27
00:01:24,799 --> 00:01:31,399
costs great every time I give a talk to

28
00:01:29,420 --> 00:01:35,000
a roomful of mathematicians about this

29
00:01:31,399 --> 00:01:36,710
they're like wait what this this makes

30
00:01:35,000 --> 00:01:38,179
no sense like how is this how is this

31
00:01:36,710 --> 00:01:40,908
even happening there's no way that this

32
00:01:38,179 --> 00:01:43,159
is this is random but also this is not

33
00:01:40,909 --> 00:01:47,990
documented in like the specification for

34
00:01:43,159 --> 00:01:50,210
these curves so okay it turns out that

35
00:01:47,990 --> 00:01:51,589
if you look at 1/2 times the generator

36
00:01:50,210 --> 00:01:54,048
the x coordinate for the 1/2 times the

37
00:01:51,590 --> 00:01:55,759
generator for all of this family of

38
00:01:54,049 --> 00:02:00,799
curves the prime order coalesce curves

39
00:01:55,759 --> 00:02:02,810
from SEC 2 they have the same property

40
00:02:00,799 --> 00:02:05,090
so I mean ok for 160 bit curve you would

41
00:02:02,810 --> 00:02:06,979
expect to have 160 bit x-coordinate but

42
00:02:05,090 --> 00:02:09,740
the rest of them are all small and in

43
00:02:06,979 --> 00:02:12,399
fact they all share almost all of their

44
00:02:09,740 --> 00:02:12,399
bits in common

45
00:02:17,980 --> 00:02:23,209
so okay if you look at sort of the the

46
00:02:21,890 --> 00:02:25,130
sect two standard that was produced by

47
00:02:23,210 --> 00:02:26,330
Sir to come this is all they say about

48
00:02:25,130 --> 00:02:27,799
the generation of these curves the

49
00:02:26,330 --> 00:02:29,360
recommended parameters associated with a

50
00:02:27,800 --> 00:02:31,010
coalesced curve are chosen by repeatedly

51
00:02:29,360 --> 00:02:32,600
selecting parameters emitting an

52
00:02:31,010 --> 00:02:34,010
efficiently computable endomorphism

53
00:02:32,600 --> 00:02:35,720
until a prime order curve was found

54
00:02:34,010 --> 00:02:37,760
repeatedly selecting parameters they

55
00:02:35,720 --> 00:02:42,050
don't specify like how they selected

56
00:02:37,760 --> 00:02:44,630
these parameters so you sort of the the

57
00:02:42,050 --> 00:02:46,280
natural generation procedure that you

58
00:02:44,630 --> 00:02:48,799
would expect for this kind of curve is

59
00:02:46,280 --> 00:02:50,209
so you choose some prime modulus you

60
00:02:48,800 --> 00:02:51,380
choose some curve parameters and you

61
00:02:50,209 --> 00:02:52,520
check whether they have all the

62
00:02:51,380 --> 00:02:53,810
properties that you would want then you

63
00:02:52,520 --> 00:02:55,010
count some points and you hope for a

64
00:02:53,810 --> 00:02:57,980
prime order curve and you sort of stop

65
00:02:55,010 --> 00:02:59,810
when you get a prime order group and

66
00:02:57,980 --> 00:03:01,940
then at that point you search for a

67
00:02:59,810 --> 00:03:03,530
generator of this group and then you

68
00:03:01,940 --> 00:03:09,440
then you think of publishing it standard

69
00:03:03,530 --> 00:03:11,150
so okay this 160 bit value that you find

70
00:03:09,440 --> 00:03:13,310
I mean we can hypothesize that this is a

71
00:03:11,150 --> 00:03:17,150
sha-1 hash of something it you know if

72
00:03:13,310 --> 00:03:19,519
this is generated in 1999 then that's

73
00:03:17,150 --> 00:03:21,830
160-bit hash function so it seems

74
00:03:19,519 --> 00:03:23,480
natural may be the most at least four

75
00:03:21,830 --> 00:03:24,769
significant four bits have been changed

76
00:03:23,480 --> 00:03:27,470
since they're different and in all of

77
00:03:24,769 --> 00:03:29,060
these points the other curve generators

78
00:03:27,470 --> 00:03:30,769
seem to be have been produced by

79
00:03:29,060 --> 00:03:35,390
changing the most and least nickname for

80
00:03:30,769 --> 00:03:38,989
bits and appending some digits to the

81
00:03:35,390 --> 00:03:40,339
most new paint bits there's a mystery

82
00:03:38,989 --> 00:03:42,079
here which is that you know you would

83
00:03:40,340 --> 00:03:43,519
expect to only need to try two values to

84
00:03:42,079 --> 00:03:44,840
get a valid point on the curve so why

85
00:03:43,519 --> 00:03:47,209
why so many changes why are they

86
00:03:44,840 --> 00:03:49,730
appending so many digits and then

87
00:03:47,209 --> 00:03:51,790
another unsolved mystery why did they

88
00:03:49,730 --> 00:03:53,690
double the point to get a generator

89
00:03:51,790 --> 00:03:54,950
because you know you could have just

90
00:03:53,690 --> 00:03:56,959
published things like use the original

91
00:03:54,950 --> 00:03:58,518
hash hash value if it's nothing on my

92
00:03:56,959 --> 00:04:00,560
sleeve value

93
00:03:58,519 --> 00:04:03,110
however this property doesn't seem to be

94
00:04:00,560 --> 00:04:04,940
known to aid in computing elliptic curve

95
00:04:03,110 --> 00:04:07,400
discrete log in any way so there doesn't

96
00:04:04,940 --> 00:04:10,400
seem to be any advantage to having this

97
00:04:07,400 --> 00:04:14,420
kind of structure or either attackers or

98
00:04:10,400 --> 00:04:16,579
defenders so we have no idea if this is

99
00:04:14,420 --> 00:04:18,798
some kind of backdoor it doesn't seem to

100
00:04:16,579 --> 00:04:21,108
be but this does seem to be some kind of

101
00:04:18,798 --> 00:04:23,659
dock like undocumented artifact from the

102
00:04:21,108 --> 00:04:26,450
generation procedure that shed some

103
00:04:23,660 --> 00:04:30,830
light on how the generators were chosen

104
00:04:26,450 --> 00:04:34,010
which is not documented in the spec so

105
00:04:30,830 --> 00:04:38,510
if you would like to contribute to our

106
00:04:34,010 --> 00:04:40,130
understanding of this problem

107
00:04:38,510 --> 00:04:41,900
did you work it sort of calm in the 90s

108
00:04:40,130 --> 00:04:44,300
it would be great to chat with you

109
00:04:41,900 --> 00:04:46,539
we have talked to Dan Brown and he did

110
00:04:44,300 --> 00:04:48,980
not know that this had this property and

111
00:04:46,540 --> 00:04:50,630
otherwise do you have any GPUs and can

112
00:04:48,980 --> 00:04:53,150
you help with sha-1 brute-forcing so

113
00:04:50,630 --> 00:04:55,040
there's 256 possible values if we assume

114
00:04:53,150 --> 00:04:56,270
that the most only significant four bits

115
00:04:55,040 --> 00:04:58,460
have possibly been changed

116
00:04:56,270 --> 00:05:00,710
I've been running John the Ripper but I

117
00:04:58,460 --> 00:05:01,849
don't have really have GPUs and my

118
00:05:00,710 --> 00:05:05,390
cluster is down right now so I don't

119
00:05:01,850 --> 00:05:08,390
have that many CPUs either so if you if

120
00:05:05,390 --> 00:05:10,130
you have if you would like to run things

121
00:05:08,390 --> 00:05:12,130
and then that would be exciting too we

122
00:05:10,130 --> 00:05:14,360
might hypothesize that this has been

123
00:05:12,130 --> 00:05:16,850
there's some ASCII seed but we don't

124
00:05:14,360 --> 00:05:22,309
know thank you

125
00:05:16,850 --> 00:05:22,309
[Applause]

