1
00:00:05,410 --> 00:00:09,160
good so contrary to what you might

2
00:00:07,630 --> 00:00:12,370
expect from the title this will not be a

3
00:00:09,160 --> 00:00:13,840
funny talk you might say Chris why would

4
00:00:12,370 --> 00:00:17,470
I expect that the title is also not

5
00:00:13,840 --> 00:00:18,520
funny I would not argue with you so

6
00:00:17,470 --> 00:00:21,099
we're all here on the seaside a

7
00:00:18,520 --> 00:00:22,630
different seaside and since it's not

8
00:00:21,099 --> 00:00:25,869
funny we'll start with the conclusions

9
00:00:22,630 --> 00:00:28,570
so the main punch line is that seaside

10
00:00:25,869 --> 00:00:31,269
512 gives you relatively little quantum

11
00:00:28,570 --> 00:00:33,010
security beyond what is coming from the

12
00:00:31,269 --> 00:00:37,030
cost quantumly evaluating it on a

13
00:00:33,010 --> 00:00:39,309
uniform superposition so in particular

14
00:00:37,030 --> 00:00:41,650
for example key recovery costs about 2

15
00:00:39,310 --> 00:00:44,200
to the 16 such evaluations if you have

16
00:00:41,650 --> 00:00:45,970
about a terabit of quantumly accessible

17
00:00:44,200 --> 00:00:48,010
classical memories that's ordinary

18
00:00:45,970 --> 00:00:50,950
memory that's in your laptop but you can

19
00:00:48,010 --> 00:00:52,989
query in the superposition and I'll say

20
00:00:50,950 --> 00:00:54,250
a little bit more about that later and

21
00:00:52,990 --> 00:00:57,400
so when you run the numbers on this

22
00:00:54,250 --> 00:00:59,320
assuming that the evaluation costs not

23
00:00:57,400 --> 00:01:00,760
much more than for the best case the

24
00:00:59,320 --> 00:01:03,100
best case distribution which is a

25
00:01:00,760 --> 00:01:06,220
plausible assumption we think breaking

26
00:01:03,100 --> 00:01:09,400
seaside 512 cost a fair bit less than 2

27
00:01:06,220 --> 00:01:11,289
to the 64 t-gates and it therefore falls

28
00:01:09,400 --> 00:01:14,260
well short of the claimed missed

29
00:01:11,290 --> 00:01:16,150
category one quantum security level ok

30
00:01:14,260 --> 00:01:19,030
so let's unpack this a little bit like

31
00:01:16,150 --> 00:01:21,790
if the clicker going good okay so

32
00:01:19,030 --> 00:01:24,280
seaside was proposed at Asia crypt last

33
00:01:21,790 --> 00:01:26,409
year it's a nice ogyny based so-called

34
00:01:24,280 --> 00:01:28,060
post quantum commutative group action it

35
00:01:26,409 --> 00:01:31,300
follows in the framework of KO venice

36
00:01:28,060 --> 00:01:34,180
from 97 the central object is this group

37
00:01:31,300 --> 00:01:36,550
action involving an abelian group G and

38
00:01:34,180 --> 00:01:37,870
a set Z and the action takes an element

39
00:01:36,550 --> 00:01:41,920
from each of those and returns an

40
00:01:37,870 --> 00:01:43,450
element of Z note that this has nothing

41
00:01:41,920 --> 00:01:46,180
to do with other s ogyny based

42
00:01:43,450 --> 00:01:47,680
cryptography like s ID h which use non

43
00:01:46,180 --> 00:01:49,570
abelian groups and don't involve group

44
00:01:47,680 --> 00:01:52,930
actions so all we have to the only thing

45
00:01:49,570 --> 00:01:54,820
we have to say it today is this killer

46
00:01:52,930 --> 00:01:57,280
app for this group action is a

47
00:01:54,820 --> 00:01:59,589
diffie-hellman style key exchange they

48
00:01:57,280 --> 00:02:01,330
have a public parameter Z and then each

49
00:01:59,590 --> 00:02:03,520
party chooses a secret group element

50
00:02:01,330 --> 00:02:05,679
applies the group action with that

51
00:02:03,520 --> 00:02:07,210
element and Z and that becomes their

52
00:02:05,680 --> 00:02:09,970
public key and then they can each

53
00:02:07,210 --> 00:02:12,310
compute a common shared key in a very

54
00:02:09,970 --> 00:02:13,930
much diffie-hellman style

55
00:02:12,310 --> 00:02:15,909
what makes seaside particularly

56
00:02:13,930 --> 00:02:19,099
attractive is it's a efficiency profile

57
00:02:15,909 --> 00:02:21,500
so you have small keys pretty fast key

58
00:02:19,099 --> 00:02:24,709
for parameters that were claimed to have

59
00:02:21,500 --> 00:02:26,930
missed category 1 security which is that

60
00:02:24,709 --> 00:02:29,599
it should be as hard as AES key search

61
00:02:26,930 --> 00:02:32,569
to break oh and these must be old slides

62
00:02:29,599 --> 00:02:34,939
that's 2 to the 170 divided by max depth

63
00:02:32,569 --> 00:02:36,679
ticket logical quantum gates

64
00:02:34,939 --> 00:02:40,129
there's also signature proposals which

65
00:02:36,680 --> 00:02:41,659
have attractive communication so the

66
00:02:40,129 --> 00:02:44,689
main way that people have considered

67
00:02:41,659 --> 00:02:46,638
attacking cset quantumly is to do

68
00:02:44,689 --> 00:02:48,138
seaside recovery that has given the

69
00:02:46,639 --> 00:02:51,260
public key fund the secret key or

70
00:02:48,139 --> 00:02:53,510
equivalent and it was shown in 2010 that

71
00:02:51,260 --> 00:02:55,340
this actually reduces to a hidden shift

72
00:02:53,510 --> 00:02:56,689
problem on the group and in fact that

73
00:02:55,340 --> 00:02:59,060
problem had been considered all the way

74
00:02:56,689 --> 00:03:00,849
back in 2003 by Cooper burg there's

75
00:02:59,060 --> 00:03:03,200
three main ingredients to the algorithms

76
00:03:00,849 --> 00:03:06,319
first there's an Oracle that outputs

77
00:03:03,200 --> 00:03:08,629
these random labelled quantum states by

78
00:03:06,319 --> 00:03:10,488
evaluating the action on those uniform

79
00:03:08,629 --> 00:03:12,200
superposition then there's some kind of

80
00:03:10,489 --> 00:03:13,790
sieve algorithm which combines these

81
00:03:12,200 --> 00:03:15,950
labelled States in a way to generate

82
00:03:13,790 --> 00:03:17,540
more favorable States and then once the

83
00:03:15,950 --> 00:03:19,668
states become very favorable you apply

84
00:03:17,540 --> 00:03:22,510
some kind of measurement to recover

85
00:03:19,669 --> 00:03:24,799
information about the hidden shift and

86
00:03:22,510 --> 00:03:26,239
there's three classes of sieve

87
00:03:24,799 --> 00:03:27,590
algorithms the first is Cooper Berg's

88
00:03:26,239 --> 00:03:30,319
original which gives you two to the

89
00:03:27,590 --> 00:03:32,720
order n Oracle calls and qubits reg have

90
00:03:30,319 --> 00:03:34,548
improved the amount of space to down to

91
00:03:32,720 --> 00:03:36,859
polynomial but increase the number of

92
00:03:34,549 --> 00:03:38,269
Oracle calls that were required and then

93
00:03:36,859 --> 00:03:40,519
interestingly Cooper burg give a

94
00:03:38,269 --> 00:03:42,650
follow-up algorithm which gets you back

95
00:03:40,519 --> 00:03:46,489
to 2 to the order root n Oracle calls

96
00:03:42,650 --> 00:03:48,079
and classical bits of RAM which is

97
00:03:46,489 --> 00:03:50,269
quantumly accessible means you can query

98
00:03:48,079 --> 00:03:53,419
it in superposition even the RAM is

99
00:03:50,269 --> 00:03:55,129
holding in classical bits Cooper burg

100
00:03:53,419 --> 00:03:57,979
call this the collimation sieve or sisa

101
00:03:55,129 --> 00:03:59,509
for short and it's assumes the prior two

102
00:03:57,979 --> 00:04:02,299
algorithms and offers more algorithmic

103
00:03:59,509 --> 00:04:03,918
trade-offs which we will exploit so

104
00:04:02,299 --> 00:04:06,049
that's all asymptotic stuff but what

105
00:04:03,919 --> 00:04:08,930
about concrete security so the prior

106
00:04:06,049 --> 00:04:10,699
estimates for seaside 512 come from

107
00:04:08,930 --> 00:04:14,629
costing the Oracle which was done in

108
00:04:10,699 --> 00:04:16,430
Europe year and they gave a cost for

109
00:04:14,629 --> 00:04:17,690
evaluating on a somewhat non-uniform

110
00:04:16,430 --> 00:04:20,299
superposition but there's been recent

111
00:04:17,690 --> 00:04:21,949
work we expect a similar cost for

112
00:04:20,298 --> 00:04:23,388
uniform superposition we're not

113
00:04:21,949 --> 00:04:25,490
concerned with the cost of the Oracle

114
00:04:23,389 --> 00:04:27,260
too much we won't address that in this

115
00:04:25,490 --> 00:04:31,070
work but we're looking at the SIF cost

116
00:04:27,260 --> 00:04:32,630
so the original Seaside paper used revs

117
00:04:31,070 --> 00:04:33,980
low space algorithm to

118
00:04:32,630 --> 00:04:36,500
estimate about two to the sixty-two

119
00:04:33,980 --> 00:04:37,940
Oracle calls and that's where that's

120
00:04:36,500 --> 00:04:41,570
what allowed them to set the parameters

121
00:04:37,940 --> 00:04:44,510
as they did thinking for aiming for NIST

122
00:04:41,570 --> 00:04:46,070
level one this work from the last year

123
00:04:44,510 --> 00:04:48,440
went back to Cooper Berg's original

124
00:04:46,070 --> 00:04:49,760
algorithm and dramatically reduced the

125
00:04:48,440 --> 00:04:52,550
number of Oracle close to about two to

126
00:04:49,760 --> 00:04:54,950
the 32 but then quite a few cubits are

127
00:04:52,550 --> 00:04:56,210
required for that so what about the

128
00:04:54,950 --> 00:04:58,580
third algorithm Cooper Berg's

129
00:04:56,210 --> 00:05:00,109
one that improves the previous two well

130
00:04:58,580 --> 00:05:02,180
it turns out there was no prior work

131
00:05:00,110 --> 00:05:05,270
looking at that so that's where we come

132
00:05:02,180 --> 00:05:09,050
in and we look at this so we're going to

133
00:05:05,270 --> 00:05:10,729
improve practically Cooper Berg's

134
00:05:09,050 --> 00:05:13,190
quantum algorithm see sieve algorithm

135
00:05:10,730 --> 00:05:15,350
and analyze it in the context see side

136
00:05:13,190 --> 00:05:17,180
parameters this is a summary of the

137
00:05:15,350 --> 00:05:19,580
various improvements I just want to

138
00:05:17,180 --> 00:05:20,900
emphasize the final item which is that

139
00:05:19,580 --> 00:05:23,120
we give code and actually runs

140
00:05:20,900 --> 00:05:24,739
simulations of this this quantum

141
00:05:23,120 --> 00:05:26,390
algorithm it's actually pseudo-classical

142
00:05:24,740 --> 00:05:29,360
you can simulate almost all of it and

143
00:05:26,390 --> 00:05:31,099
then just fake one little part of it and

144
00:05:29,360 --> 00:05:33,290
actually run the run the thing on a

145
00:05:31,100 --> 00:05:34,940
regular computer and we run it on

146
00:05:33,290 --> 00:05:38,090
reporters all the way up to the real

147
00:05:34,940 --> 00:05:39,920
seaside group order and here are the

148
00:05:38,090 --> 00:05:41,840
final results the number of Oracle calls

149
00:05:39,920 --> 00:05:44,750
can be brought down to something like

150
00:05:41,840 --> 00:05:47,419
two to the 14 with with completely

151
00:05:44,750 --> 00:05:51,440
reasonable amounts of classical memory

152
00:05:47,420 --> 00:05:54,470
moreover the memory and be accessed

153
00:05:51,440 --> 00:05:56,000
quantumly with existing methods using

154
00:05:54,470 --> 00:05:58,790
quantum computation that's much lower

155
00:05:56,000 --> 00:06:01,220
than the rest of the attack so this is

156
00:05:58,790 --> 00:06:03,530
the is kind of the takeaway point I will

157
00:06:01,220 --> 00:06:05,660
jump back through the final conclusions

158
00:06:03,530 --> 00:06:07,159
the paper is available on ePrint and you

159
00:06:05,660 --> 00:06:10,110
can download the code and run it very

160
00:06:07,160 --> 00:06:15,610
easily at this location

161
00:06:10,110 --> 00:06:15,610
[Applause]

