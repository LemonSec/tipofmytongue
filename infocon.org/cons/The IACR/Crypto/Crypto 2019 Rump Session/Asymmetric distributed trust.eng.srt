1
00:00:04,880 --> 00:00:10,850
hey for once I'm here without an IEC or

2
00:00:07,790 --> 00:00:13,309
slide but with something about crypto

3
00:00:10,850 --> 00:00:15,889
but crypto here means crypto consensus

4
00:00:13,309 --> 00:00:17,359
no blockchain even but it means

5
00:00:15,889 --> 00:00:20,359
consensus so I'm going to talk about

6
00:00:17,359 --> 00:00:22,790
protocols for just reaching agreement

7
00:00:20,359 --> 00:00:24,650
also known as consensus this was trying

8
00:00:22,790 --> 00:00:27,560
to work with

9
00:00:24,650 --> 00:00:30,470
Puran Tuchman of IBM so in the protocols

10
00:00:27,560 --> 00:00:32,000
in the blockchain you want to reach an

11
00:00:30,470 --> 00:00:33,410
agreement as Erika just nicely

12
00:00:32,000 --> 00:00:35,350
introduced I don't have to go through

13
00:00:33,410 --> 00:00:37,608
this with but we want to tolerate

14
00:00:35,350 --> 00:00:41,690
uncertainties and foxes and everyone

15
00:00:37,609 --> 00:00:43,909
else being delayed or slower lying and

16
00:00:41,690 --> 00:00:45,979
this is of course all the time

17
00:00:43,909 --> 00:00:48,739
blockchain protocols but it's been much

18
00:00:45,979 --> 00:00:54,079
made much more relevant again by this

19
00:00:48,739 --> 00:00:57,289
recent craze so as cryptography you

20
00:00:54,079 --> 00:00:59,629
might not know all of this slide by

21
00:00:57,289 --> 00:01:01,249
heart because in crypto conferences I

22
00:00:59,629 --> 00:01:04,548
see about half of the papers who forget

23
00:01:01,249 --> 00:01:06,409
define liveness but everybody here is

24
00:01:04,549 --> 00:01:07,760
definitely an expert on safety so

25
00:01:06,409 --> 00:01:09,530
liveness means also that something good

26
00:01:07,760 --> 00:01:12,409
will eventually happen and unless you

27
00:01:09,530 --> 00:01:14,659
have satisfied both properties in a

28
00:01:12,409 --> 00:01:20,060
distributed protocol you won't see much

29
00:01:14,659 --> 00:01:21,680
action right so about the trust

30
00:01:20,060 --> 00:01:23,479
assumptions that we are using the trust

31
00:01:21,680 --> 00:01:26,780
assumptions that we are using normally

32
00:01:23,479 --> 00:01:29,689
are defined by the numbers you see the F

33
00:01:26,780 --> 00:01:31,909
all T nodes the T faulty nodes and there

34
00:01:29,689 --> 00:01:33,740
are n of them and the trust is by the

35
00:01:31,909 --> 00:01:37,840
numbers ya by what you should you think

36
00:01:33,740 --> 00:01:40,640
that these nodes are all equal and

37
00:01:37,840 --> 00:01:43,189
assuming that trust by the numbers it

38
00:01:40,640 --> 00:01:44,929
means that all the numbers are all the

39
00:01:43,189 --> 00:01:47,600
nodes fail independently of each other

40
00:01:44,929 --> 00:01:50,929
so probability that one further node

41
00:01:47,600 --> 00:01:53,089
fails is independent of the first ones

42
00:01:50,929 --> 00:01:55,429
however this may not be the case in real

43
00:01:53,090 --> 00:01:57,560
world systems and so in those systems

44
00:01:55,429 --> 00:02:01,759
for those systems already a long while

45
00:01:57,560 --> 00:02:03,590
ago people invented our act and the way

46
00:02:01,759 --> 00:02:07,249
to specify the trust assumption through

47
00:02:03,590 --> 00:02:08,960
arbitrary sets of possibly faulty nodes

48
00:02:07,249 --> 00:02:10,880
and then you get arbitrary so-called

49
00:02:08,960 --> 00:02:13,400
quorums that specify who is correct

50
00:02:10,880 --> 00:02:16,130
but what we are seeing in both of these

51
00:02:13,400 --> 00:02:18,200
previous works and these previous models

52
00:02:16,130 --> 00:02:18,710
is that everybody uses the same trust as

53
00:02:18,200 --> 00:02:20,750
some

54
00:02:18,710 --> 00:02:22,280
you think the number of folds is this

55
00:02:20,750 --> 00:02:23,960
and you also think the number of folds

56
00:02:22,280 --> 00:02:25,880
is this and you run the system with

57
00:02:23,960 --> 00:02:28,160
maximum resilience however this does not

58
00:02:25,880 --> 00:02:30,049
have to be the case and some prominent

59
00:02:28,160 --> 00:02:32,329
blockchain systems have explored it so

60
00:02:30,050 --> 00:02:34,250
there is a system called ripple that

61
00:02:32,330 --> 00:02:36,440
uses the idea that you can declare who

62
00:02:34,250 --> 00:02:38,120
you vote in the consensus protocol who

63
00:02:36,440 --> 00:02:40,460
you're listening to for your votes in

64
00:02:38,120 --> 00:02:42,410
the consensus protocol because you're

65
00:02:40,460 --> 00:02:44,270
declaring an unique list of nodes that

66
00:02:42,410 --> 00:02:47,690
you revelling listening to so like a

67
00:02:44,270 --> 00:02:49,730
subjective trust but product there is no

68
00:02:47,690 --> 00:02:51,770
description of this protocol apart from

69
00:02:49,730 --> 00:02:53,540
the code so it's inherently difficult to

70
00:02:51,770 --> 00:02:55,700
tell whether it actually those consensus

71
00:02:53,540 --> 00:02:57,859
or not and I'm convinced it is not

72
00:02:55,700 --> 00:02:59,390
because also people have looked at this

73
00:02:57,860 --> 00:03:02,209
and tried to figure out what happens

74
00:02:59,390 --> 00:03:04,670
there is a sibling of ripple that's

75
00:03:02,209 --> 00:03:07,550
called stellar it evolved originally

76
00:03:04,670 --> 00:03:09,829
from a ripple in the code it's also

77
00:03:07,550 --> 00:03:11,780
quite well known it also aims at

78
00:03:09,830 --> 00:03:15,830
achieving these consensus among nodes

79
00:03:11,780 --> 00:03:18,950
where each node can declare who who they

80
00:03:15,830 --> 00:03:21,080
trust and they aim to achieve this

81
00:03:18,950 --> 00:03:23,450
notion of so-called federated peace

82
00:03:21,080 --> 00:03:34,310
Byzantine agreement but it also doesn't

83
00:03:23,450 --> 00:03:36,950
exist it also does not achieve it in a

84
00:03:34,310 --> 00:03:38,720
way where if you project everything to

85
00:03:36,950 --> 00:03:41,839
the same trust symmetric trust

86
00:03:38,720 --> 00:03:46,910
assumption will get the existing

87
00:03:41,840 --> 00:03:48,860
protocols so to motivate this this to

88
00:03:46,910 --> 00:03:51,230
motivate what I wanted to tell you here

89
00:03:48,860 --> 00:03:53,090
is about that we have a notion fixing

90
00:03:51,230 --> 00:03:55,190
these problems or addressing these

91
00:03:53,090 --> 00:03:57,440
problems in a better way we go back to

92
00:03:55,190 --> 00:03:59,810
quorum systems where a quorum system

93
00:03:57,440 --> 00:04:02,660
specifies the sets two that you are

94
00:03:59,810 --> 00:04:04,760
willing to tolerate and then each

95
00:04:02,660 --> 00:04:07,870
participant in the protocol can specify

96
00:04:04,760 --> 00:04:10,970
its own quorum system and then you get

97
00:04:07,870 --> 00:04:13,190
basically an array of such quorum

98
00:04:10,970 --> 00:04:16,040
systems that you're setting next to each

99
00:04:13,190 --> 00:04:17,810
other and the condition that you had in

100
00:04:16,040 --> 00:04:19,850
the traditional systems that was just

101
00:04:17,810 --> 00:04:21,798
explained before that you need to be n

102
00:04:19,850 --> 00:04:24,200
bigger than three F something like this

103
00:04:21,798 --> 00:04:25,609
this translates into a more complicated

104
00:04:24,200 --> 00:04:28,159
condition that you see in the middle

105
00:04:25,610 --> 00:04:30,229
here that you theories remove faulty

106
00:04:28,160 --> 00:04:31,529
sets that are faulty according to two

107
00:04:30,229 --> 00:04:34,558
notions therein

108
00:04:31,529 --> 00:04:36,359
the one correct guy now of course if

109
00:04:34,559 --> 00:04:38,429
we're starting to protocols

110
00:04:36,359 --> 00:04:40,649
according to such systems they are going

111
00:04:38,429 --> 00:04:43,229
to be nodes who made the wrong

112
00:04:40,649 --> 00:04:45,089
assumptions they trust the wrong friends

113
00:04:43,229 --> 00:04:47,789
because not everybody trusts the same

114
00:04:45,089 --> 00:04:52,139
nodes in the system and forgetting this

115
00:04:47,789 --> 00:04:54,299
now properly specified we can only make

116
00:04:52,139 --> 00:04:56,369
such guarantees for the nodes that are

117
00:04:54,299 --> 00:04:58,438
wise namely because they made the

118
00:04:56,369 --> 00:05:00,959
correct trust assumption not everybody

119
00:04:58,439 --> 00:05:02,819
has the same trust assumption and we do

120
00:05:00,959 --> 00:05:05,939
have protocols for a various now for

121
00:05:02,819 --> 00:05:08,549
various primitives from this table

122
00:05:05,939 --> 00:05:10,499
computing from Byzantine tolerant

123
00:05:08,549 --> 00:05:12,929
protocols and for consensus in this

124
00:05:10,499 --> 00:05:14,519
model and they satisfied a nice property

125
00:05:12,929 --> 00:05:16,258
that there are generalizations of the

126
00:05:14,519 --> 00:05:18,179
existing models and if you want to read

127
00:05:16,259 --> 00:05:21,029
more about this then I have a slide here

128
00:05:18,179 --> 00:05:22,919
and if you talk Latin then you will see

129
00:05:21,029 --> 00:05:24,869
why this is the case namely that not

130
00:05:22,919 --> 00:05:26,969
everybody wants to have the same trust

131
00:05:24,869 --> 00:05:30,570
assumption because Trust is inherently

132
00:05:26,969 --> 00:05:34,320
subjective just like taste thank you

133
00:05:30,570 --> 00:05:34,320
[Applause]

