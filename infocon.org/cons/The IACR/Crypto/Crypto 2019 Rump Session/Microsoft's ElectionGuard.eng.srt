1
00:00:04,980 --> 00:00:12,630
thank you mark 9 so I'm here to try to

2
00:00:11,040 --> 00:00:14,250
make people aware of a project that's

3
00:00:12,630 --> 00:00:18,599
been going on at Microsoft for a little

4
00:00:14,250 --> 00:00:22,140
over a year we're trying to take tools

5
00:00:18,599 --> 00:00:25,470
from this community and bring them to

6
00:00:22,140 --> 00:00:30,689
the real world and impact real elections

7
00:00:25,470 --> 00:00:34,620
and real way have much better integrity

8
00:00:30,689 --> 00:00:37,229
and verifiability in elections so what

9
00:00:34,620 --> 00:00:41,000
we're doing in particular is we are

10
00:00:37,229 --> 00:00:44,129
building a free open-source tool kits

11
00:00:41,000 --> 00:00:45,780
it's going to be released next month

12
00:00:44,129 --> 00:00:51,559
actually or at least the first version

13
00:00:45,780 --> 00:00:54,620
next month on github and it will allow

14
00:00:51,559 --> 00:00:57,269
vendors to take this code and build

15
00:00:54,620 --> 00:01:02,159
cryptographically verifiable end-to-end

16
00:00:57,269 --> 00:01:04,408
verifiable elections we are releasing a

17
00:01:02,159 --> 00:01:06,690
detailed specification that'll allow

18
00:01:04,409 --> 00:01:10,649
anyone to look at exactly what's going

19
00:01:06,690 --> 00:01:12,719
on do black box verification again of of

20
00:01:10,649 --> 00:01:13,469
the artifacts of an election make sure

21
00:01:12,719 --> 00:01:16,500
it's all right

22
00:01:13,469 --> 00:01:18,960
and we've already built one prototype to

23
00:01:16,500 --> 00:01:22,229
show how this can be done we may build

24
00:01:18,960 --> 00:01:23,658
one or two more one thing I want to make

25
00:01:22,229 --> 00:01:27,210
very clear this is something that

26
00:01:23,659 --> 00:01:29,399
Microsoft is not selling in any way this

27
00:01:27,210 --> 00:01:31,320
is free to anybody

28
00:01:29,399 --> 00:01:33,000
we're not building election systems

29
00:01:31,320 --> 00:01:35,520
we're trying to work with the existing

30
00:01:33,000 --> 00:01:37,140
community of vendors and whatnot and say

31
00:01:35,520 --> 00:01:41,548
here's something that you could really

32
00:01:37,140 --> 00:01:44,280
use please use it we'll show ya we have

33
00:01:41,549 --> 00:01:45,630
many partners in this project galois and

34
00:01:44,280 --> 00:01:48,359
Portland is doing most of the

35
00:01:45,630 --> 00:01:51,089
development work Columbia University is

36
00:01:48,359 --> 00:01:53,548
an important partner and most of the

37
00:01:51,090 --> 00:01:56,159
major vendors in the US have signed up

38
00:01:53,549 --> 00:01:59,159
as partners and agreed to to look at

39
00:01:56,159 --> 00:02:03,060
this and try it out and not just the US

40
00:01:59,159 --> 00:02:04,679
we're talking to vendors worldwide there

41
00:02:03,060 --> 00:02:08,009
does seem to be a lot of interest so

42
00:02:04,679 --> 00:02:09,539
we're very encouraged about this just to

43
00:02:08,008 --> 00:02:12,299
give a sense of some some of what's

44
00:02:09,538 --> 00:02:16,909
going on showing what's in here we're

45
00:02:12,300 --> 00:02:16,909
using threshold el-gamal encryption

46
00:02:16,920 --> 00:02:23,170
doing homomorphic tallying the votes yes

47
00:02:20,440 --> 00:02:26,140
I know homomorphic was a bad word to put

48
00:02:23,170 --> 00:02:27,519
in a in in a in a talk if you want to

49
00:02:26,140 --> 00:02:31,239
get a paper accepted but it's easier

50
00:02:27,520 --> 00:02:33,580
than the remm session right we have

51
00:02:31,240 --> 00:02:36,540
things that are full of interactive

52
00:02:33,580 --> 00:02:39,250
proofs basically most of the work is

53
00:02:36,540 --> 00:02:41,650
proving that encrypted votes are

54
00:02:39,250 --> 00:02:43,390
well-formed that there are ball zeros

55
00:02:41,650 --> 00:02:46,800
and ones the right number of zeros and

56
00:02:43,390 --> 00:02:49,779
ones so we've got snore proofs of

57
00:02:46,800 --> 00:02:50,860
possession of secret keys corresponding

58
00:02:49,780 --> 00:02:52,480
to the public keys

59
00:02:50,860 --> 00:02:54,520
we've got Shawn Patterson proofs of

60
00:02:52,480 --> 00:02:57,190
corrected decryption we've got CTS

61
00:02:54,520 --> 00:02:58,900
proofs to do disjunction so that you can

62
00:02:57,190 --> 00:03:00,820
prove that something is a 0 or 1 with

63
00:02:58,900 --> 00:03:03,610
that proofing which be at ramírez

64
00:03:00,820 --> 00:03:06,820
everywhere in this lots of tools that

65
00:03:03,610 --> 00:03:08,500
are very familiar nothing that new but

66
00:03:06,820 --> 00:03:10,060
it's taking this and making it sort of

67
00:03:08,500 --> 00:03:13,330
production quality getting it really

68
00:03:10,060 --> 00:03:14,770
used I want to just say a little bit

69
00:03:13,330 --> 00:03:17,410
about some of the design principles that

70
00:03:14,770 --> 00:03:20,080
we're using here because first of all we

71
00:03:17,410 --> 00:03:21,549
decided you build a very simple API and

72
00:03:20,080 --> 00:03:24,430
it turned out to be surprisingly clean

73
00:03:21,549 --> 00:03:28,180
not a lot of configuration try to make

74
00:03:24,430 --> 00:03:30,880
it so that is not a lot to screw up we

75
00:03:28,180 --> 00:03:34,150
also have the principle that we're

76
00:03:30,880 --> 00:03:35,950
writing this code once but we expect we

77
00:03:34,150 --> 00:03:38,739
hope that there will be hundreds maybe

78
00:03:35,950 --> 00:03:40,720
thousands of people who write election

79
00:03:38,739 --> 00:03:41,799
verifiers a little election verifier

80
00:03:40,720 --> 00:03:44,080
apps and I'll say a little bit more

81
00:03:41,799 --> 00:03:46,120
about how so some of the design

82
00:03:44,080 --> 00:03:48,310
decisions that this triggers is we're

83
00:03:46,120 --> 00:03:50,560
using integer alcohol not elliptic

84
00:03:48,310 --> 00:03:52,090
curves because we want like first-year

85
00:03:50,560 --> 00:03:54,090
programming students to be able to do

86
00:03:52,090 --> 00:03:57,790
this from first principles very easily

87
00:03:54,090 --> 00:04:00,190
build a verifier also just you know as

88
00:03:57,790 --> 00:04:02,200
an example you know we could say we've

89
00:04:00,190 --> 00:04:05,320
got you know some property of a divided

90
00:04:02,200 --> 00:04:07,030
by B mod n that you want to verify no

91
00:04:05,320 --> 00:04:08,828
too hard then you have to implement the

92
00:04:07,030 --> 00:04:12,220
extended Euclidean algorithm will

93
00:04:08,829 --> 00:04:14,380
provide C you check that a equals B C

94
00:04:12,220 --> 00:04:16,329
mod n and then you can check that C has

95
00:04:14,380 --> 00:04:18,820
that property just to make it as simple

96
00:04:16,329 --> 00:04:20,890
as we can for for people to implement I

97
00:04:18,820 --> 00:04:22,479
you know I know it's a little thing but

98
00:04:20,890 --> 00:04:26,200
but that's the kind of thing we're

99
00:04:22,479 --> 00:04:28,240
working on so the first version whose

100
00:04:26,200 --> 00:04:30,190
code is going to be released next month

101
00:04:28,240 --> 00:04:33,180
on github here's the URL

102
00:04:30,190 --> 00:04:36,300
feel free to come talk to me about it

103
00:04:33,180 --> 00:04:40,210
we're trying to get this the speck out

104
00:04:36,300 --> 00:04:43,090
as early as next week if I can get off

105
00:04:40,210 --> 00:04:44,979
the stage and get this finished send

106
00:04:43,090 --> 00:04:48,460
comments to me we want as much open

107
00:04:44,980 --> 00:04:51,400
review as possible and as projects for

108
00:04:48,460 --> 00:04:52,930
your students writing a little election

109
00:04:51,400 --> 00:04:55,299
verifier might be a one or two week

110
00:04:52,930 --> 00:04:57,040
class project or maybe a little

111
00:04:55,300 --> 00:04:58,180
independent study for the early ones we

112
00:04:57,040 --> 00:04:59,980
might be a little harder and the

113
00:04:58,180 --> 00:05:01,330
documentation isn't quite there yet

114
00:04:59,980 --> 00:05:04,000
we're trying to get it there

115
00:05:01,330 --> 00:05:06,969
but this is a nice little crypto project

116
00:05:04,000 --> 00:05:09,450
for people to do hope you're interested

117
00:05:06,970 --> 00:05:15,339
hope we'll be using this

118
00:05:09,450 --> 00:05:15,339
[Applause]

