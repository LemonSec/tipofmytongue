1
00:00:04,890 --> 00:00:10,430
<font color="#E5E5E5">all right so it's an announcement</font><font color="#CCCCCC"> for</font>

2
00:00:07,529 --> 00:00:13,799
the library that we've just released

3
00:00:10,430 --> 00:00:16,350
<font color="#CCCCCC">Berkeley on Monday and it's about</font><font color="#E5E5E5"> the</font>

4
00:00:13,799 --> 00:00:17,189
<font color="#E5E5E5">food is almost</font><font color="#CCCCCC"> a contribution and you</font>

5
00:00:16,350 --> 00:00:18,810
<font color="#E5E5E5">won't you</font>

6
00:00:17,190 --> 00:00:21,150
by now you've<font color="#E5E5E5"> been to at least one talk</font>

7
00:00:18,810 --> 00:00:24,000
<font color="#CCCCCC">about fhc</font><font color="#E5E5E5"> so you know what it's about</font>

8
00:00:21,150 --> 00:00:26,400
<font color="#E5E5E5">and while I'm</font><font color="#CCCCCC"> talking you</font><font color="#E5E5E5"> can just</font>

9
00:00:24,000 --> 00:00:29,520
meditate on this<font color="#CCCCCC"> picture above that</font>

10
00:00:26,400 --> 00:00:31,740
explains it pretty<font color="#E5E5E5"> much and if you want</font>

11
00:00:29,520 --> 00:00:35,340
to know more about fhc<font color="#E5E5E5"> and lettuce</font>

12
00:00:31,740 --> 00:00:36,989
cryptography<font color="#CCCCCC"> you can there are</font><font color="#E5E5E5"> still a</font>

13
00:00:35,340 --> 00:00:40,020
future<font color="#E5E5E5"> a few seconds available to</font>

14
00:00:36,990 --> 00:00:42,620
screenshot<font color="#E5E5E5"> or snapshot this these two</font>

15
00:00:40,020 --> 00:00:45,150
links<font color="#CCCCCC"> one is the collection of</font>

16
00:00:42,620 --> 00:00:47,550
collection<font color="#E5E5E5"> of papers about</font><font color="#CCCCCC"> fhc and the</font>

17
00:00:45,150 --> 00:00:50,010
second one is a very good<font color="#E5E5E5"> book reviewer</font>

18
00:00:47,550 --> 00:00:52,709
<font color="#E5E5E5">fhe and just a few points that I want to</font>

19
00:00:50,010 --> 00:00:55,440
emphasize about<font color="#E5E5E5"> the algorithm that we</font>

20
00:00:52,710 --> 00:00:58,860
<font color="#CCCCCC">use in this in this library is first</font>

21
00:00:55,440 --> 00:01:02,370
that there's a very<font color="#E5E5E5"> huge</font><font color="#CCCCCC"> ciphertex</font>

22
00:00:58,860 --> 00:01:06,750
<font color="#CCCCCC">expansion 16,000 x</font><font color="#E5E5E5"> 2 kilobytes for a bit</font>

23
00:01:02,370 --> 00:01:07,530
of<font color="#E5E5E5"> plain text second</font><font color="#CCCCCC"> their operations on</font>

24
00:01:06,750 --> 00:01:10,140
<font color="#CCCCCC">Zapotecs</font>

25
00:01:07,530 --> 00:01:13,680
<font color="#E5E5E5">all the gates the</font><font color="#CCCCCC"> binary gates that we</font>

26
00:01:10,140 --> 00:01:15,510
have on<font color="#CCCCCC"> bits a very fast</font><font color="#E5E5E5"> but what takes</font>

27
00:01:13,680 --> 00:01:17,870
time is<font color="#E5E5E5"> the bootstrapping because all</font>

28
00:01:15,510 --> 00:01:20,040
the separations introduce errors and

29
00:01:17,870 --> 00:01:21,840
after each operation<font color="#CCCCCC"> we need to get rid</font>

30
00:01:20,040 --> 00:01:26,970
of them and that's<font color="#E5E5E5"> what takes the</font>

31
00:01:21,840 --> 00:01:29,430
<font color="#CCCCCC">majority of time and okay so there are</font>

32
00:01:26,970 --> 00:01:34,679
two<font color="#E5E5E5"> implementations of the</font><font color="#CCCCCC"> efficient</font>

33
00:01:29,430 --> 00:01:36,540
<font color="#E5E5E5">torus</font><font color="#CCCCCC"> one of them is pure C++ code TPG</font>

34
00:01:34,680 --> 00:01:39,720
and<font color="#CCCCCC"> the second one is skew G which is</font>

35
00:01:36,540 --> 00:01:43,740
<font color="#E5E5E5">based on CUDA so why do we need Python</font>

36
00:01:39,720 --> 00:01:46,140
them well<font color="#CCCCCC"> wait</font><font color="#E5E5E5"> are we</font><font color="#CCCCCC"> are targeting GPUs</font>

37
00:01:43,740 --> 00:01:49,470
so we can hide all the<font color="#E5E5E5"> overheads of</font>

38
00:01:46,140 --> 00:01:51,780
<font color="#E5E5E5">Python behind a synchronous calls to the</font>

39
00:01:49,470 --> 00:01:53,250
kernels on GPUs so it doesn't really

40
00:01:51,780 --> 00:01:56,700
<font color="#E5E5E5">matter</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> Python</font><font color="#CCCCCC"> is slow because</font>

41
00:01:53,250 --> 00:01:58,590
<font color="#CCCCCC">the GPU is fast and all this</font>

42
00:01:56,700 --> 00:02:00,720
<font color="#E5E5E5">cogeneration that we can do on Python</font>

43
00:01:58,590 --> 00:02:03,090
<font color="#E5E5E5">helps a lot with optimizing for</font>

44
00:02:00,720 --> 00:02:05,460
performance<font color="#E5E5E5"> and I used it</font><font color="#CCCCCC"> a lot in the</font>

45
00:02:03,090 --> 00:02:07,110
library<font color="#E5E5E5"> and of course</font><font color="#CCCCCC"> Python</font><font color="#E5E5E5"> is easy</font>

46
00:02:05,460 --> 00:02:09,119
<font color="#E5E5E5">it's easy to install it's easy to see</font>

47
00:02:07,110 --> 00:02:12,440
what is happening<font color="#CCCCCC"> it's easy to test</font><font color="#E5E5E5"> easy</font>

48
00:02:09,119 --> 00:02:15,390
to to<font color="#E5E5E5"> have to do something with it</font><font color="#CCCCCC"> and</font>

49
00:02:12,440 --> 00:02:17,340
that's how an example looks like that's

50
00:02:15,390 --> 00:02:21,059
what you can find in the repository

51
00:02:17,340 --> 00:02:21,750
just<font color="#E5E5E5"> you create a key there's no point</font>

52
00:02:21,060 --> 00:02:24,180
to probably<font color="#E5E5E5"> here</font>

53
00:02:21,750 --> 00:02:27,060
yeah<font color="#CCCCCC"> you create a key you encrypt some</font>

54
00:02:24,180 --> 00:02:28,739
bits you run a gate<font color="#CCCCCC"> on them adjective</font>

55
00:02:27,060 --> 00:02:31,739
you decreed them with a private key back

56
00:02:28,739 --> 00:02:34,110
<font color="#E5E5E5">and you can check that you got what you</font>

57
00:02:31,739 --> 00:02:38,010
<font color="#E5E5E5">expected in this case it's a NAND</font><font color="#CCCCCC"> gate</font>

58
00:02:34,110 --> 00:02:39,750
<font color="#CCCCCC">ran on a sequence</font><font color="#E5E5E5"> of bits now for the</font>

59
00:02:38,010 --> 00:02:42,030
most important part<font color="#CCCCCC"> the performance of</font>

60
00:02:39,750 --> 00:02:46,200
<font color="#E5E5E5">course and that's what what we have in</font>

61
00:02:42,030 --> 00:02:48,420
<font color="#E5E5E5">there in the</font><font color="#CCCCCC"> title first</font><font color="#E5E5E5"> I compare it</font>

62
00:02:46,200 --> 00:02:51,238
<font color="#E5E5E5">compare it with the tip</font><font color="#CCCCCC"> AG of course</font>

63
00:02:48,420 --> 00:02:53,970
it's a bit<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know not very</font><font color="#E5E5E5"> fair</font>

64
00:02:51,239 --> 00:02:57,420
because<font color="#E5E5E5"> typically use a CPU but we have</font>

65
00:02:53,970 --> 00:03:00,030
a hundred hundred times speed up<font color="#E5E5E5"> as</font>

66
00:02:57,420 --> 00:03:03,179
compared to<font color="#E5E5E5"> th year that's using F of T</font>

67
00:03:00,030 --> 00:03:06,420
for bootstrap that's what<font color="#CCCCCC"> T which</font><font color="#E5E5E5"> he</font>

68
00:03:03,180 --> 00:03:10,860
uses<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> we can compare it to qhg</font>

69
00:03:06,420 --> 00:03:12,690
which<font color="#CCCCCC"> uses entity okay which is a fully</font>

70
00:03:10,860 --> 00:03:15,390
alike transform on finite fields and it

71
00:03:12,690 --> 00:03:17,579
has about the<font color="#CCCCCC"> same speed but new virtue</font>

72
00:03:15,390 --> 00:03:20,518
supports OpenGL as well it's written in

73
00:03:17,579 --> 00:03:23,430
Python<font color="#E5E5E5"> instead of CUDA so you know it's</font>

74
00:03:20,519 --> 00:03:26,180
still good<font color="#E5E5E5"> and if you want to see it</font><font color="#CCCCCC"> you</font>

75
00:03:23,430 --> 00:03:29,320
<font color="#E5E5E5">can check it out on this depositor here</font>

76
00:03:26,180 --> 00:03:34,340
thank you yeah that's it

77
00:03:29,320 --> 00:03:34,340
[Applause]

