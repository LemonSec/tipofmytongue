1
00:00:05,550 --> 00:00:14,890
hi<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> random number generators</font>

2
00:00:12,370 --> 00:00:16,540
<font color="#CCCCCC">that we've seen that</font><font color="#E5E5E5"> true random number</font>

3
00:00:14,890 --> 00:00:18,640
generators are<font color="#E5E5E5"> typically produce a bit</font>

4
00:00:16,540 --> 00:00:20,619
at a time<font color="#E5E5E5"> and random number generators</font>

5
00:00:18,640 --> 00:00:26,310
have typically not scaled with Moore's

6
00:00:20,619 --> 00:00:28,779
law and we put together the idea<font color="#CCCCCC"> of</font>

7
00:00:26,310 --> 00:00:30,880
<font color="#E5E5E5">parallelized random number generators</font>

8
00:00:28,779 --> 00:00:33,280
with the fact that the noise in CMOS

9
00:00:30,880 --> 00:00:35,350
<font color="#CCCCCC">sensors</font><font color="#E5E5E5"> image like your camera sensors</font>

10
00:00:33,280 --> 00:00:36,699
has been widely studied and nobody's

11
00:00:35,350 --> 00:00:39,910
been<font color="#CCCCCC"> able to get</font><font color="#E5E5E5"> rid of it other than</font>

12
00:00:36,699 --> 00:00:41,800
cooling<font color="#E5E5E5"> it down</font><font color="#CCCCCC"> so the idea is can we</font>

13
00:00:39,910 --> 00:00:46,059
build a gigabit random number generator

14
00:00:41,800 --> 00:00:50,019
<font color="#E5E5E5">out of a standard CMOS sensor basically</font>

15
00:00:46,059 --> 00:00:52,809
and this this physics messed me up<font color="#CCCCCC"> the</font>

16
00:00:50,020 --> 00:00:55,780
idea is that<font color="#CCCCCC"> heat forms phonons that</font>

17
00:00:52,809 --> 00:00:57,699
<font color="#CCCCCC">vibrate the electrons in the conduction</font>

18
00:00:55,780 --> 00:01:00,100
band<font color="#CCCCCC"> and from the valence band to the</font>

19
00:00:57,700 --> 00:01:03,070
<font color="#CCCCCC">conduction band to create a Poisson</font>

20
00:01:00,100 --> 00:01:06,660
<font color="#E5E5E5">distribution of electrons in each one</font><font color="#CCCCCC"> of</font>

21
00:01:03,070 --> 00:01:08,770
the pixel values and this amount of

22
00:01:06,660 --> 00:01:11,319
electrons in these pixel values

23
00:01:08,770 --> 00:01:14,860
increases exponentially with with

24
00:01:11,319 --> 00:01:18,220
temperature<font color="#CCCCCC"> so the idea is that we can</font>

25
00:01:14,860 --> 00:01:21,550
take a<font color="#CCCCCC"> any</font><font color="#E5E5E5"> CCD sensor that has a raw</font>

26
00:01:18,220 --> 00:01:23,410
output<font color="#E5E5E5"> basically adjust the amplifier so</font>

27
00:01:21,550 --> 00:01:26,170
<font color="#CCCCCC">that with</font><font color="#E5E5E5"> zero electrons you get</font>

28
00:01:23,410 --> 00:01:29,470
something<font color="#E5E5E5"> out</font><font color="#CCCCCC"> a digital number</font><font color="#E5E5E5"> out and</font>

29
00:01:26,170 --> 00:01:31,179
as you<font color="#CCCCCC"> go up</font><font color="#E5E5E5"> the amount of electrons you</font>

30
00:01:29,470 --> 00:01:34,630
go to<font color="#CCCCCC"> saturation</font><font color="#E5E5E5"> and then you'll get a</font>

31
00:01:31,179 --> 00:01:36,819
Poisson distribution of<font color="#E5E5E5"> values</font><font color="#CCCCCC"> we were</font>

32
00:01:34,630 --> 00:01:39,009
<font color="#CCCCCC">able to take pictures and</font><font color="#E5E5E5"> actually take</font>

33
00:01:36,819 --> 00:01:40,899
the first<font color="#E5E5E5"> pixel of every frame and</font>

34
00:01:39,009 --> 00:01:42,250
compare it<font color="#E5E5E5"> to the first pixel of every</font>

35
00:01:40,899 --> 00:01:44,800
other frame<font color="#E5E5E5"> and we were</font><font color="#CCCCCC"> able to</font>

36
00:01:42,250 --> 00:01:46,750
calculate<font color="#E5E5E5"> the Shannon entropy of all of</font>

37
00:01:44,800 --> 00:01:50,200
the pixels<font color="#E5E5E5"> in in there and we found that</font>

38
00:01:46,750 --> 00:01:53,140
in a 16-bit raw picture<font color="#E5E5E5"> that there is</font>

39
00:01:50,200 --> 00:01:56,679
<font color="#E5E5E5">about</font><font color="#CCCCCC"> three and a half bits of raw</font>

40
00:01:53,140 --> 00:01:59,770
entropy and<font color="#CCCCCC"> the we basically have it</font>

41
00:01:56,679 --> 00:02:01,989
shown in<font color="#CCCCCC"> a cumulative</font><font color="#E5E5E5"> distribution we're</font>

42
00:01:59,770 --> 00:02:05,410
able to take and and<font color="#CCCCCC"> whitened right</font><font color="#E5E5E5"> in</font>

43
00:02:01,989 --> 00:02:07,090
it using<font color="#E5E5E5"> a basically just about there</font>

44
00:02:05,410 --> 00:02:10,568
are many methods in the paper we have

45
00:02:07,090 --> 00:02:12,430
yet<font color="#CCCCCC"> one more</font><font color="#E5E5E5"> method</font><font color="#CCCCCC"> and we are</font><font color="#E5E5E5"> able to</font>

46
00:02:10,568 --> 00:02:14,109
take<font color="#CCCCCC"> that result</font><font color="#E5E5E5"> and against something</font>

47
00:02:12,430 --> 00:02:17,769
<font color="#E5E5E5">called the die harder test which is</font>

48
00:02:14,110 --> 00:02:18,670
around a<font color="#E5E5E5"> number generator</font><font color="#CCCCCC"> the line</font><font color="#E5E5E5"> that</font>

49
00:02:17,769 --> 00:02:21,490
is<font color="#CCCCCC"> closed</font>

50
00:02:18,670 --> 00:02:25,600
to the<font color="#E5E5E5"> diagonal is this random</font><font color="#CCCCCC"> number</font>

51
00:02:21,490 --> 00:02:28,270
generator<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the bad</font><font color="#CCCCCC"> UNIX random</font>

52
00:02:25,600 --> 00:02:30,519
number generator<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the better</font>

53
00:02:28,270 --> 00:02:32,770
random number generator on UNIX<font color="#E5E5E5"> alone</font>

54
00:02:30,520 --> 00:02:34,300
the one that blocks<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the machine</font>

55
00:02:32,770 --> 00:02:36,160
twister which is considered<font color="#E5E5E5"> one of the</font>

56
00:02:34,300 --> 00:02:39,040
<font color="#E5E5E5">best random number generator so we</font><font color="#CCCCCC"> we</font>

57
00:02:36,160 --> 00:02:41,140
consider the results to<font color="#CCCCCC"> be very good and</font>

58
00:02:39,040 --> 00:02:43,660
if you get<font color="#E5E5E5"> three bits of entropy per</font>

59
00:02:41,140 --> 00:02:46,359
pixels 24 megapixels 30 frames<font color="#CCCCCC"> per</font>

60
00:02:43,660 --> 00:02:49,570
second<font color="#E5E5E5"> that's 2.1 gigabits per second of</font>

61
00:02:46,360 --> 00:02:54,630
pure entropy thank you<font color="#E5E5E5"> very much</font>

62
00:02:49,570 --> 00:02:54,630
[Applause]

