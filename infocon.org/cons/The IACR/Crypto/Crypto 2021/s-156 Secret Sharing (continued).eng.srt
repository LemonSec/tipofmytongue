1
00:00:00,640 --> 00:00:02,960
and

2
00:00:03,919 --> 00:00:05,839
you're ready to go have a good session

3
00:00:05,839 --> 00:00:06,799
thank you

4
00:00:06,799 --> 00:00:08,240
okay so

5
00:00:08,240 --> 00:00:11,040
let's wait just

6
00:00:11,840 --> 00:00:14,240
like the last few seconds until it's

7
00:00:14,240 --> 00:00:17,240
done

8
00:00:37,120 --> 00:00:39,200
okay so welcome back to the second part

9
00:00:39,200 --> 00:00:41,600
of the session

10
00:00:41,600 --> 00:00:45,280
uh on secret sharing and

11
00:00:45,280 --> 00:00:48,879
the first talk is by vipulgola goyal

12
00:00:48,879 --> 00:00:51,920
ifan song and actually aram srinivasan

13
00:00:51,920 --> 00:00:53,120
and

14
00:00:53,120 --> 00:00:56,000
the title is traceable secret sharing

15
00:00:56,000 --> 00:00:57,360
and application

16
00:00:57,360 --> 00:01:00,640
and actually will be giving the talk

17
00:01:00,640 --> 00:01:03,280
can you see my screen as well as hear me

18
00:01:03,280 --> 00:01:05,040
yes

19
00:01:05,040 --> 00:01:06,880
thanks uh thanks a lot for the

20
00:01:06,880 --> 00:01:08,799
introduction and this is based on joint

21
00:01:08,799 --> 00:01:11,439
work with ripple boyle and even

22
00:01:11,439 --> 00:01:13,360
so let me start this talk by describing

23
00:01:13,360 --> 00:01:15,040
your scenario

24
00:01:15,040 --> 00:01:17,119
so let's say alice has some secret data

25
00:01:17,119 --> 00:01:19,200
s and she wants to store this secret on

26
00:01:19,200 --> 00:01:20,400
the cloud

27
00:01:20,400 --> 00:01:22,479
so think of the secret as the secret key

28
00:01:22,479 --> 00:01:25,680
for alice's cryptocurrency wallet

29
00:01:25,680 --> 00:01:27,920
so to enhance privacy

30
00:01:27,920 --> 00:01:30,640
she chooses n cloud service providers

31
00:01:30,640 --> 00:01:34,159
splits a secret into end shares using a

32
00:01:34,159 --> 00:01:35,840
secret sharing scheme and stores the

33
00:01:35,840 --> 00:01:38,079
shares on the service

34
00:01:38,079 --> 00:01:40,000
so there is a adversary who is

35
00:01:40,000 --> 00:01:41,920
interested in learning about the secret

36
00:01:41,920 --> 00:01:43,600
information the tile is stored on the

37
00:01:43,600 --> 00:01:44,560
service

38
00:01:44,560 --> 00:01:46,479
and in fact the adversary is willing to

39
00:01:46,479 --> 00:01:48,560
pay these servers in order to learn this

40
00:01:48,560 --> 00:01:50,079
information

41
00:01:50,079 --> 00:01:52,560
so what this adversary does is that it

42
00:01:52,560 --> 00:01:54,560
approaches one of the servers let's say

43
00:01:54,560 --> 00:01:57,520
the first server and promised us to pay

44
00:01:57,520 --> 00:02:00,000
a certain amount of monetary reward and

45
00:02:00,000 --> 00:02:02,399
ask the servers to send the share that

46
00:02:02,399 --> 00:02:05,119
it received from alice and in return for

47
00:02:05,119 --> 00:02:08,239
this reward

48
00:02:08,239 --> 00:02:10,639
uh even though this offer is enticing

49
00:02:10,639 --> 00:02:12,480
the server is very of the following

50
00:02:12,480 --> 00:02:13,599
possibility

51
00:02:13,599 --> 00:02:15,680
if alice somehow finds out that they

52
00:02:15,680 --> 00:02:18,080
cheated by sending the share it received

53
00:02:18,080 --> 00:02:20,239
from alice to an external party

54
00:02:20,239 --> 00:02:22,400
then alice could uh sue this server in

55
00:02:22,400 --> 00:02:23,680
the court of law

56
00:02:23,680 --> 00:02:25,360
and uh

57
00:02:25,360 --> 00:02:26,319
if

58
00:02:26,319 --> 00:02:28,160
alice somehow wins this case then it

59
00:02:28,160 --> 00:02:31,120
would not only uh lead to a big loss of

60
00:02:31,120 --> 00:02:33,680
reputation for the server but it also

61
00:02:33,680 --> 00:02:35,360
would mean bankruptcy because of the

62
00:02:35,360 --> 00:02:37,840
service agreement that it had with us so

63
00:02:37,840 --> 00:02:40,160
how could alice find out so for instance

64
00:02:40,160 --> 00:02:42,480
alex could have some secret information

65
00:02:42,480 --> 00:02:44,480
that could be embedded in the share and

66
00:02:44,480 --> 00:02:46,640
which would help alice supposedly been

67
00:02:46,640 --> 00:02:48,080
the case

68
00:02:48,080 --> 00:02:49,519
however the adversary that we are

69
00:02:49,519 --> 00:02:51,680
dealing with is very clever and the

70
00:02:51,680 --> 00:02:53,519
adversary comes up with the

71
00:02:53,519 --> 00:02:55,519
elaborate cryptographics

72
00:02:55,519 --> 00:02:57,280
so the scheme consists of the following

73
00:02:57,280 --> 00:03:00,000
components so it consists of n functions

74
00:03:00,000 --> 00:03:02,000
f1 to fn that we call as the collectors

75
00:03:02,000 --> 00:03:03,040
function

76
00:03:03,040 --> 00:03:05,440
and it also has a reconstruction box

77
00:03:05,440 --> 00:03:08,239
which we call as reg star

78
00:03:08,239 --> 00:03:10,640
now the adversary asks the servers to

79
00:03:10,640 --> 00:03:13,280
apply this reconstruction function on

80
00:03:13,280 --> 00:03:15,840
the share and send it to

81
00:03:15,840 --> 00:03:17,200
it and

82
00:03:17,200 --> 00:03:18,959
it will then pay the server the the

83
00:03:18,959 --> 00:03:21,440
promised monetary reward

84
00:03:21,440 --> 00:03:23,360
the adversary further promises the

85
00:03:23,360 --> 00:03:24,560
following

86
00:03:24,560 --> 00:03:27,280
so it says that even if alice gets hold

87
00:03:27,280 --> 00:03:30,000
of these collector functions f1 to fn

88
00:03:30,000 --> 00:03:32,080
the collector shares that the server is

89
00:03:32,080 --> 00:03:34,640
potentially sent to the adversary as

90
00:03:34,640 --> 00:03:37,120
well as the reconstruction box

91
00:03:37,120 --> 00:03:40,799
then alice has no way of proving that a

92
00:03:40,799 --> 00:03:43,440
particular server cheated

93
00:03:43,440 --> 00:03:45,680
so in other words there is no way for

94
00:03:45,680 --> 00:03:48,239
alice to actually trace a cheating

95
00:03:48,239 --> 00:03:49,840
service

96
00:03:49,840 --> 00:03:52,000
so on examining this scheme closely the

97
00:03:52,000 --> 00:03:53,760
server is indeed convinced that this

98
00:03:53,760 --> 00:03:55,360
claim is true that is there is no way

99
00:03:55,360 --> 00:03:56,959
for alice to prove in the court of law

100
00:03:56,959 --> 00:03:59,040
that indeed cheated and what would an

101
00:03:59,040 --> 00:04:01,920
any irrational server do it will send fa

102
00:04:01,920 --> 00:04:03,920
on sharing and collect the monetary

103
00:04:03,920 --> 00:04:05,680
reward from the adversary

104
00:04:05,680 --> 00:04:07,439
and if the adversary is somehow able to

105
00:04:07,439 --> 00:04:09,280
convince t of these servers to send

106
00:04:09,280 --> 00:04:10,239
these

107
00:04:10,239 --> 00:04:12,239
information then it can potentially

108
00:04:12,239 --> 00:04:14,720
learn secret information about alice's

109
00:04:14,720 --> 00:04:16,320
data

110
00:04:16,320 --> 00:04:17,199
so

111
00:04:17,199 --> 00:04:19,519
on hearing about this

112
00:04:19,519 --> 00:04:22,240
big conspiracy that is brewing

113
00:04:22,240 --> 00:04:24,000
alice approaches the cryptographic

114
00:04:24,000 --> 00:04:25,600
community for help

115
00:04:25,600 --> 00:04:27,120
specifically she asked the following

116
00:04:27,120 --> 00:04:28,960
question can we construct a secret

117
00:04:28,960 --> 00:04:31,680
sharing scheme that allows her to trace

118
00:04:31,680 --> 00:04:34,320
a cheating server as well as prove a

119
00:04:34,320 --> 00:04:36,320
provider valid evidence that could be

120
00:04:36,320 --> 00:04:38,560
examined in the court of law

121
00:04:38,560 --> 00:04:41,919
implicating a particular server of

122
00:04:41,919 --> 00:04:43,360
cheating

123
00:04:43,360 --> 00:04:46,000
and to help alice with this endeavor we

124
00:04:46,000 --> 00:04:48,080
introduce a new primitive called as

125
00:04:48,080 --> 00:04:50,080
traceable secret sharing or tss

126
00:04:50,080 --> 00:04:51,360
insurance

127
00:04:51,360 --> 00:04:53,280
so let me explain the syntax of a

128
00:04:53,280 --> 00:04:55,520
traceable secret sharing scheme

129
00:04:55,520 --> 00:04:57,759
so it consists of a sharing phase where

130
00:04:57,759 --> 00:05:00,560
we take a secret s and split it into n

131
00:05:00,560 --> 00:05:02,880
shares s h one to s h n so this sharing

132
00:05:02,880 --> 00:05:04,639
phase could be an interactive protocol

133
00:05:04,639 --> 00:05:06,560
that is run between the service and

134
00:05:06,560 --> 00:05:07,840
alice

135
00:05:07,840 --> 00:05:10,080
so the reconstruction is standard it

136
00:05:10,080 --> 00:05:11,600
takes in at least two shares and

137
00:05:11,600 --> 00:05:14,000
reconstructs the secrets

138
00:05:14,000 --> 00:05:16,400
and for privacy we require that any t

139
00:05:16,400 --> 00:05:18,320
minus one shares reveal no information

140
00:05:18,320 --> 00:05:21,039
about the underlying secret

141
00:05:21,039 --> 00:05:22,560
so in addition to

142
00:05:22,560 --> 00:05:24,479
the sharing and reconstruction phase a

143
00:05:24,479 --> 00:05:26,320
traceable secret sharing consists of two

144
00:05:26,320 --> 00:05:28,080
additional algorithms

145
00:05:28,080 --> 00:05:31,120
a trace algorithm and a judge algorithm

146
00:05:31,120 --> 00:05:33,440
so what does the trace algorithm do it

147
00:05:33,440 --> 00:05:35,199
takes the view of alice during the

148
00:05:35,199 --> 00:05:37,520
sharing phase it takes the description

149
00:05:37,520 --> 00:05:39,759
of these n collector functions as well

150
00:05:39,759 --> 00:05:41,680
as the collected shares for some subset

151
00:05:41,680 --> 00:05:43,520
c or size of these t

152
00:05:43,520 --> 00:05:46,080
the reconstruction box and it outputs

153
00:05:46,080 --> 00:05:48,400
the identity of a cheating party as well

154
00:05:48,400 --> 00:05:50,320
as an evidence pi i

155
00:05:50,320 --> 00:05:52,720
and the judge algorithm uh takes this

156
00:05:52,720 --> 00:05:54,639
evidence and pronounces whether the ayat

157
00:05:54,639 --> 00:05:58,479
party is guilty or not guilty

158
00:05:58,479 --> 00:06:01,280
so what are the properties that we need

159
00:06:01,280 --> 00:06:03,600
a traceable secret sharing to satisfy we

160
00:06:03,600 --> 00:06:05,360
need two properties the first is

161
00:06:05,360 --> 00:06:07,840
traceability it states the following

162
00:06:07,840 --> 00:06:10,880
so for any two secrets is 0 and s1

163
00:06:10,880 --> 00:06:13,039
if the reconstruction box on input the

164
00:06:13,039 --> 00:06:15,440
collector shares can distinguish between

165
00:06:15,440 --> 00:06:17,759
the sharing of s 0 and s 1 with some non

166
00:06:17,759 --> 00:06:19,759
negligible advantage

167
00:06:19,759 --> 00:06:22,000
then we need the tracing algorithm to

168
00:06:22,000 --> 00:06:24,319
output the identity of a traitor along

169
00:06:24,319 --> 00:06:26,000
with a valid evidence with some non

170
00:06:26,000 --> 00:06:28,000
negligible problem

171
00:06:28,000 --> 00:06:30,400
so here we require a very weak

172
00:06:30,400 --> 00:06:32,080
property from the reconstruction box

173
00:06:32,080 --> 00:06:34,319
that it only has to distinguish between

174
00:06:34,319 --> 00:06:36,240
two sharings with some non-negligible

175
00:06:36,240 --> 00:06:38,639
advantage and even in this case we want

176
00:06:38,639 --> 00:06:40,560
the tracing to output the identity of a

177
00:06:40,560 --> 00:06:42,639
traitor and along with the valid

178
00:06:42,639 --> 00:06:44,080
evidence

179
00:06:44,080 --> 00:06:46,000
the second property we need to satisfy

180
00:06:46,000 --> 00:06:47,759
is non-imputability

181
00:06:47,759 --> 00:06:49,440
which protects

182
00:06:49,440 --> 00:06:51,840
a honest server from a malicious dealer

183
00:06:51,840 --> 00:06:53,440
or alice in this case

184
00:06:53,440 --> 00:06:55,599
so what does non-imputability say it

185
00:06:55,599 --> 00:06:57,440
says that any malicious alice cannot

186
00:06:57,440 --> 00:06:59,280
provide a valid evidence against an

187
00:06:59,280 --> 00:07:01,759
honest server even if it colludes with

188
00:07:01,759 --> 00:07:03,440
every other structure

189
00:07:03,440 --> 00:07:05,280
okay so we need traceability as well as

190
00:07:05,280 --> 00:07:07,280
non-imputably

191
00:07:07,280 --> 00:07:09,440
so what are the main contributions so we

192
00:07:09,440 --> 00:07:11,120
formally define a traceable secret

193
00:07:11,120 --> 00:07:12,479
sharing scheme

194
00:07:12,479 --> 00:07:14,880
and unlike the other related notions

195
00:07:14,880 --> 00:07:17,120
like traitor tracing and so on this

196
00:07:17,120 --> 00:07:18,880
traceable secret sharing scheme seems

197
00:07:18,880 --> 00:07:20,720
non-trivial to construct even if we

198
00:07:20,720 --> 00:07:23,039
ignore the efficiency aspects so recall

199
00:07:23,039 --> 00:07:24,720
that a traitor tracing in a broadcast

200
00:07:24,720 --> 00:07:27,360
encryption can be easily constructed if

201
00:07:27,360 --> 00:07:29,440
we allow the ciphertext as well as the

202
00:07:29,440 --> 00:07:30,960
public keys to grow with the number of

203
00:07:30,960 --> 00:07:33,919
users but here this is not the case

204
00:07:33,919 --> 00:07:35,280
and our main contribution is the

205
00:07:35,280 --> 00:07:36,960
construction of traceable secret sharing

206
00:07:36,960 --> 00:07:38,400
assuming the existence of secure

207
00:07:38,400 --> 00:07:41,199
multi-party computations

208
00:07:41,199 --> 00:07:42,800
and we also consider a couple of

209
00:07:42,800 --> 00:07:46,240
extensions to this tracing so the first

210
00:07:46,240 --> 00:07:48,240
extension is that for tracing more than

211
00:07:48,240 --> 00:07:50,000
one trait recall that if the

212
00:07:50,000 --> 00:07:51,759
reconstruction box has to learn some

213
00:07:51,759 --> 00:07:53,680
non-imperial information

214
00:07:53,680 --> 00:07:55,680
there are at least three traitors and

215
00:07:55,680 --> 00:07:58,160
the question is can we trace t traders

216
00:07:58,160 --> 00:08:00,160
because there is no hope of tracing more

217
00:08:00,160 --> 00:08:01,280
than t traders because the

218
00:08:01,280 --> 00:08:03,199
reconstruction box would just ignore the

219
00:08:03,199 --> 00:08:05,840
other collected shares so here we can do

220
00:08:05,840 --> 00:08:07,919
almost optimally if we can trace up to t

221
00:08:07,919 --> 00:08:09,680
minus one traders

222
00:08:09,680 --> 00:08:11,759
we also consider a setting where we

223
00:08:11,759 --> 00:08:13,440
allow collusion between the servers

224
00:08:13,440 --> 00:08:15,039
where servers come together before

225
00:08:15,039 --> 00:08:16,800
sending the collected information to the

226
00:08:16,800 --> 00:08:18,240
adversary

227
00:08:18,240 --> 00:08:20,960
so recall that if we allow more than t

228
00:08:20,960 --> 00:08:22,720
servers to collude then there is no hope

229
00:08:22,720 --> 00:08:24,879
of tracing because the t servers could

230
00:08:24,879 --> 00:08:26,560
just reconstruct the secret and send it

231
00:08:26,560 --> 00:08:29,840
to the adversary in some encrypted form

232
00:08:29,840 --> 00:08:32,320
uh so here we allow up to t minus one

233
00:08:32,320 --> 00:08:33,440
service to collude and give a

234
00:08:33,440 --> 00:08:35,760
construction that satisfies this uh

235
00:08:35,760 --> 00:08:38,159
pollution resistance

236
00:08:38,159 --> 00:08:42,080
and we also consider an application of a

237
00:08:42,080 --> 00:08:44,000
traceable secret sharing to traceable

238
00:08:44,000 --> 00:08:45,680
delegation of computation so let's

239
00:08:45,680 --> 00:08:47,279
assume that the alice is not only

240
00:08:47,279 --> 00:08:49,360
storing the data on the servers but is

241
00:08:49,360 --> 00:08:51,760
also we want to compute some function on

242
00:08:51,760 --> 00:08:53,680
the secret shared data

243
00:08:53,680 --> 00:08:56,000
so here we consider a protocol in the

244
00:08:56,000 --> 00:08:58,160
offline online setting where the offline

245
00:08:58,160 --> 00:09:00,399
cost of alice grows with the the size of

246
00:09:00,399 --> 00:09:02,240
the function that you want to compute

247
00:09:02,240 --> 00:09:04,080
whereas the online cost of alice is

248
00:09:04,080 --> 00:09:06,000
extremely cheap that is it goes only

249
00:09:06,000 --> 00:09:09,120
with the input and the output and

250
00:09:09,120 --> 00:09:11,519
we give such a protocol for traceable

251
00:09:11,519 --> 00:09:13,440
delegation of computation

252
00:09:13,440 --> 00:09:15,200
so for more details about how we

253
00:09:15,200 --> 00:09:16,800
construct such a traceable secret

254
00:09:16,800 --> 00:09:18,399
sharing scheme i encourage you to look

255
00:09:18,399 --> 00:09:20,000
into the longer version of the talk and

256
00:09:20,000 --> 00:09:22,480
you can find the full version on it

257
00:09:22,480 --> 00:09:24,800
thanks

258
00:09:26,399 --> 00:09:28,000
thanks actually

259
00:09:28,000 --> 00:09:30,080
do you have any quick questions or

260
00:09:30,080 --> 00:09:32,480
actually

261
00:09:33,680 --> 00:09:37,040
okay if not we'll go to the next talk

262
00:09:37,040 --> 00:09:40,000
so the next talk is a quadratic secret

263
00:09:40,000 --> 00:09:42,000
sharing unconditional disclosure of

264
00:09:42,000 --> 00:09:43,760
secret

265
00:09:43,760 --> 00:09:46,880
and this is by amos bemel

266
00:09:46,880 --> 00:09:47,680
um

267
00:09:47,680 --> 00:09:50,959
austin otzman and nati peter

268
00:09:50,959 --> 00:09:51,839
and

269
00:09:51,839 --> 00:09:54,880
natalie peter is giving the talk

270
00:09:54,880 --> 00:09:57,760
thank you for the introduction

271
00:09:57,760 --> 00:10:00,080
hello everyone my name is nathi and i'm

272
00:10:00,080 --> 00:10:02,079
going to talk about quadratic secretary

273
00:10:02,079 --> 00:10:04,320
and conditional disclosure of cigarettes

274
00:10:04,320 --> 00:10:05,760
and join him up with the most payment

275
00:10:05,760 --> 00:10:08,320
and consent money

276
00:10:08,320 --> 00:10:09,760
so let's start with the definition of

277
00:10:09,760 --> 00:10:11,920
secret sharing scheme it was defined by

278
00:10:11,920 --> 00:10:13,600
shamir and blakely for the threshold

279
00:10:13,600 --> 00:10:16,160
case and later by ito cycle and shizeki

280
00:10:16,160 --> 00:10:18,800
for the general case we have an access

281
00:10:18,800 --> 00:10:20,880
structure gamma which is a collection of

282
00:10:20,880 --> 00:10:22,640
subsets of parties

283
00:10:22,640 --> 00:10:26,399
for example for example it may have a

284
00:10:26,399 --> 00:10:29,279
subset of parties of size greater than k

285
00:10:29,279 --> 00:10:31,680
for some question k or it may have a

286
00:10:31,680 --> 00:10:34,560
general structure and contain arbitrary

287
00:10:34,560 --> 00:10:37,200
subsets of different sizes

288
00:10:37,200 --> 00:10:39,120
in a secret sharing scheme we have a

289
00:10:39,120 --> 00:10:40,880
dealer with all the secret s and

290
00:10:40,880 --> 00:10:42,959
randomness out and it used them to

291
00:10:42,959 --> 00:10:45,920
generate and share s1210 and it send

292
00:10:45,920 --> 00:10:49,040
each side to party pi

293
00:10:49,040 --> 00:10:50,720
we say that the secret sharing scheme

294
00:10:50,720 --> 00:10:52,640
realizes in access structure gamma is

295
00:10:52,640 --> 00:10:55,120
both correctness and security odds well

296
00:10:55,120 --> 00:10:56,800
for correctness we require that any

297
00:10:56,800 --> 00:10:58,160
authorized sets

298
00:10:58,160 --> 00:10:59,839
which is in the access structure can

299
00:10:59,839 --> 00:11:01,920
reconstruct the secret s using its

300
00:11:01,920 --> 00:11:04,240
shells for security will require

301
00:11:04,240 --> 00:11:05,839
netanyahu an authorized set not in the

302
00:11:05,839 --> 00:11:07,360
access partner should not learn any

303
00:11:07,360 --> 00:11:09,440
information about the secret given its

304
00:11:09,440 --> 00:11:11,519
shells

305
00:11:11,519 --> 00:11:14,240
in our work we study polynomial secret

306
00:11:14,240 --> 00:11:16,399
sharing which is a broad class of

307
00:11:16,399 --> 00:11:18,800
signaturing scheme extend the well-known

308
00:11:18,800 --> 00:11:20,880
class of linear schemes

309
00:11:20,880 --> 00:11:22,800
in such scheme the secret is a field

310
00:11:22,800 --> 00:11:25,040
element and the randomness contains

311
00:11:25,040 --> 00:11:28,160
random field elements

312
00:11:28,160 --> 00:11:30,959
recently pasted and radon defined secret

313
00:11:30,959 --> 00:11:33,360
sharing with polynomial sharing

314
00:11:33,360 --> 00:11:35,519
in which each chair

315
00:11:35,519 --> 00:11:37,920
contains field element such that each

316
00:11:37,920 --> 00:11:40,160
element is a polynomial function of the

317
00:11:40,160 --> 00:11:43,200
secret and the random elements

318
00:11:43,200 --> 00:11:45,600
in our work we define secret sharing

319
00:11:45,600 --> 00:11:48,079
with polynomial reconstruction in which

320
00:11:48,079 --> 00:11:51,040
each authorized set can apply polynomial

321
00:11:51,040 --> 00:11:53,839
function on the elements of its shares

322
00:11:53,839 --> 00:11:56,000
and reconstruct the secrets we also

323
00:11:56,000 --> 00:11:57,920
define signal sharing scheme with both

324
00:11:57,920 --> 00:11:59,680
polynomial sharing and polynomial

325
00:11:59,680 --> 00:12:02,479
reconstruction

326
00:12:02,560 --> 00:12:04,560
the motivation for studying polynomial

327
00:12:04,560 --> 00:12:07,200
secret sharing is to prove lower bounds

328
00:12:07,200 --> 00:12:09,120
on the size of the shells for a bold

329
00:12:09,120 --> 00:12:11,360
class of sql challenge schemes and to

330
00:12:11,360 --> 00:12:13,360
develop new techniques for constructing

331
00:12:13,360 --> 00:12:15,040
efficient sequel sharing with small

332
00:12:15,040 --> 00:12:17,040
shell size for some or all access

333
00:12:17,040 --> 00:12:19,599
structures

334
00:12:19,680 --> 00:12:22,320
let us recall the well study class of

335
00:12:22,320 --> 00:12:24,320
linear secret sharing in which the

336
00:12:24,320 --> 00:12:26,800
sharing algorithm

337
00:12:26,800 --> 00:12:30,480
of the delay is done by linear function

338
00:12:30,480 --> 00:12:33,200
which are in fact degree one polynomials

339
00:12:33,200 --> 00:12:35,440
so we can view linear secret sharing as

340
00:12:35,440 --> 00:12:37,519
a special case of polynomial secret

341
00:12:37,519 --> 00:12:39,839
sharing

342
00:12:39,839 --> 00:12:41,600
for linear signaturing we know that

343
00:12:41,600 --> 00:12:43,519
linear sharing is equivalent to linear

344
00:12:43,519 --> 00:12:46,079
construction but we don't know if this

345
00:12:46,079 --> 00:12:48,959
equivalent solves for polynomial secret

346
00:12:48,959 --> 00:12:49,920
sharing

347
00:12:49,920 --> 00:12:52,720
with degree greater than one

348
00:12:52,720 --> 00:12:55,200
so linear secret sharing our intensity

349
00:12:55,200 --> 00:12:56,720
since many of the known schemes are

350
00:12:56,720 --> 00:12:59,120
linear and they have useful properties

351
00:12:59,120 --> 00:13:00,959
which makes them good for constructing

352
00:13:00,959 --> 00:13:04,639
secure cryptographic protocols

353
00:13:04,639 --> 00:13:06,959
let's move on to our results so i start

354
00:13:06,959 --> 00:13:08,720
with our lower bounds

355
00:13:08,720 --> 00:13:10,720
our first result is the lower bound of

356
00:13:10,720 --> 00:13:13,920
omega of two to the n over d plus one on

357
00:13:13,920 --> 00:13:16,000
the share size of secret sharing scheme

358
00:13:16,000 --> 00:13:18,480
in which the reconstruction is done

359
00:13:18,480 --> 00:13:20,880
by the greedy polynomials

360
00:13:20,880 --> 00:13:22,880
for comparison

361
00:13:22,880 --> 00:13:24,639
the best known lower bound for general

362
00:13:24,639 --> 00:13:27,279
sticker sharing is omega of n square

363
00:13:27,279 --> 00:13:30,079
over log n which is much worse and the

364
00:13:30,079 --> 00:13:32,079
best non-lower bound for linear secret

365
00:13:32,079 --> 00:13:34,959
sharing is omega of 2 to the n over 2.

366
00:13:34,959 --> 00:13:37,120
so our polynomial lower bound somewhat

367
00:13:37,120 --> 00:13:40,560
extends the linear lower bound

368
00:13:40,560 --> 00:13:42,639
our second result is the lower bound of

369
00:13:42,639 --> 00:13:45,519
2 to the omega of n over d for secret

370
00:13:45,519 --> 00:13:46,800
sharing scheme with the greedy

371
00:13:46,800 --> 00:13:48,959
reconstruction but for an explicit

372
00:13:48,959 --> 00:13:50,560
access structure

373
00:13:50,560 --> 00:13:52,079
we know a

374
00:13:52,079 --> 00:13:55,120
similar result only for the linear

375
00:13:55,120 --> 00:13:59,440
secret sharing before our work

376
00:14:00,240 --> 00:14:02,480
in our work we also study quadratic

377
00:14:02,480 --> 00:14:04,800
secret sharing scheme which are in fact

378
00:14:04,800 --> 00:14:07,199
polynomial secret sharing in which both

379
00:14:07,199 --> 00:14:09,920
sharing and reconstruction are done by

380
00:14:09,920 --> 00:14:13,199
polynomials of degree two

381
00:14:13,199 --> 00:14:15,360
in our work we construct such quadratic

382
00:14:15,360 --> 00:14:16,959
secret sharing scheme

383
00:14:16,959 --> 00:14:19,440
for any arbitrary axis structure in

384
00:14:19,440 --> 00:14:21,519
which the size of the share is o of 2 to

385
00:14:21,519 --> 00:14:22,360
the

386
00:14:22,360 --> 00:14:24,720
0.705 n

387
00:14:24,720 --> 00:14:28,160
for comparison the best known

388
00:14:28,160 --> 00:14:31,760
linear upper bound is a

389
00:14:31,760 --> 00:14:34,320
is a bit worse

390
00:14:34,320 --> 00:14:38,240
and the best known general upper bound

391
00:14:38,240 --> 00:14:42,240
is slightly better and the such scheme

392
00:14:42,240 --> 00:14:43,360
uses

393
00:14:43,360 --> 00:14:46,079
more complex tools than polynomials of

394
00:14:46,079 --> 00:14:48,639
degree two

395
00:14:48,639 --> 00:14:51,360
another result we show in our work is a

396
00:14:51,360 --> 00:14:53,440
separation between linear signaturing

397
00:14:53,440 --> 00:14:56,079
and quadratic secret sharing

398
00:14:56,079 --> 00:14:58,480
and you can see the gap between

399
00:14:58,480 --> 00:15:00,320
the shell sizes of the linear and the

400
00:15:00,320 --> 00:15:04,000
quadratic scheme in the slide

401
00:15:05,199 --> 00:15:08,480
well i don't have a timing to go over

402
00:15:08,480 --> 00:15:11,600
the signaturing that we construct but i

403
00:15:11,600 --> 00:15:14,079
will give you a quick roadmap

404
00:15:14,079 --> 00:15:16,560
of our construction

405
00:15:16,560 --> 00:15:18,959
so we start with quadratic two server

406
00:15:18,959 --> 00:15:21,600
cds protocol which is a simple

407
00:15:21,600 --> 00:15:24,399
cryptographic protocol presented by leon

408
00:15:24,399 --> 00:15:26,240
quintanatoy

409
00:15:26,240 --> 00:15:28,240
we use its ideas to construct to

410
00:15:28,240 --> 00:15:31,920
construct quadratic multi-server cds

411
00:15:31,920 --> 00:15:33,759
and i refer you to the long talk of the

412
00:15:33,759 --> 00:15:35,680
paper for more details

413
00:15:35,680 --> 00:15:37,680
then we use the quadratic multi-server

414
00:15:37,680 --> 00:15:40,399
cds to construct quadratic multi-server

415
00:15:40,399 --> 00:15:42,959
robust cds protocol with amplified

416
00:15:42,959 --> 00:15:44,959
security

417
00:15:44,959 --> 00:15:47,120
and finally we use the transformation

418
00:15:47,120 --> 00:15:49,680
from robust cds to secret sharing

419
00:15:49,680 --> 00:15:51,680
developed in a sequence of purple to

420
00:15:51,680 --> 00:15:55,680
obtain our quadratic secret sharing

421
00:15:55,680 --> 00:15:57,839
so to conclude this talk we define

422
00:15:57,839 --> 00:16:00,320
polynomial secret sharing schemes

423
00:16:00,320 --> 00:16:02,480
which are a broad class of sticker

424
00:16:02,480 --> 00:16:04,560
sharing that generalizes the well-known

425
00:16:04,560 --> 00:16:07,120
class of linear secret sharing we prove

426
00:16:07,120 --> 00:16:09,279
lower bounds for secret sharing schemes

427
00:16:09,279 --> 00:16:11,519
with polynomial reconstruction

428
00:16:11,519 --> 00:16:13,680
we show upper bound for quadratic secret

429
00:16:13,680 --> 00:16:16,000
sharing and quadratic cds which are

430
00:16:16,000 --> 00:16:18,240
better than the best known upper bounds

431
00:16:18,240 --> 00:16:20,240
for linear signal sharing and linear

432
00:16:20,240 --> 00:16:21,440
cdns

433
00:16:21,440 --> 00:16:23,600
and we show a separation between linear

434
00:16:23,600 --> 00:16:25,600
sequential and quadratic signal sharing

435
00:16:25,600 --> 00:16:28,320
for almost all access structures

436
00:16:28,320 --> 00:16:31,600
an open problem that arise from our work

437
00:16:31,600 --> 00:16:33,759
is to prove lower bounds on the share

438
00:16:33,759 --> 00:16:36,560
size for polynomial sharing well in our

439
00:16:36,560 --> 00:16:38,320
work we show such lower bound for

440
00:16:38,320 --> 00:16:40,560
polynomial reconstruction

441
00:16:40,560 --> 00:16:42,639
and another open problem

442
00:16:42,639 --> 00:16:45,519
is to show improved upper bounds

443
00:16:45,519 --> 00:16:47,839
for general degree polynomial secret

444
00:16:47,839 --> 00:16:50,160
sharing where the degree d is greater

445
00:16:50,160 --> 00:16:52,480
than 2.

446
00:16:52,480 --> 00:16:55,440
that's it thank you

447
00:16:57,759 --> 00:17:00,399
thank you nathi

448
00:17:00,399 --> 00:17:04,759
do we have a question for nattie

449
00:17:07,679 --> 00:17:08,880
okay

450
00:17:08,880 --> 00:17:11,760
in the meantime

451
00:17:12,959 --> 00:17:17,160
with presenting the last paper

452
00:17:21,359 --> 00:17:24,400
so okay so

453
00:17:24,400 --> 00:17:27,439
please please share the screen and me so

454
00:17:27,439 --> 00:17:31,120
i'm introducing you so

455
00:17:31,120 --> 00:17:34,320
the last paper of this section session

456
00:17:34,320 --> 00:17:38,400
is a paper by emantak maggie anat baskin

457
00:17:38,400 --> 00:17:42,480
cherniewski tom swede and minuen wong

458
00:17:42,480 --> 00:17:44,480
and the paper is titled constructing

459
00:17:44,480 --> 00:17:46,720
locally liquid resilient linear secret

460
00:17:46,720 --> 00:17:48,559
sharing scheme and minguen is giving the

461
00:17:48,559 --> 00:17:50,160
talk

462
00:17:50,160 --> 00:17:52,960
okay yes thanks for the introduction so

463
00:17:52,960 --> 00:17:54,720
i'm going to talk about constructing

464
00:17:54,720 --> 00:17:56,799
locally leakage resilient linear secret

465
00:17:56,799 --> 00:17:59,200
sharing schemes this is joined with hama

466
00:17:59,200 --> 00:18:03,120
maji anatopas king chanyeowski and tomsu

467
00:18:03,120 --> 00:18:05,600
so in a classical secret sharing schemes

468
00:18:05,600 --> 00:18:08,000
the security guarantees that any

469
00:18:08,000 --> 00:18:10,160
unauthorized set of secret shares is

470
00:18:10,160 --> 00:18:12,960
uncorrelated with the secret s

471
00:18:12,960 --> 00:18:15,039
but what if the adversary

472
00:18:15,039 --> 00:18:17,039
learns partial information about every

473
00:18:17,039 --> 00:18:18,320
secret share

474
00:18:18,320 --> 00:18:19,760
is the drawing distribution of the

475
00:18:19,760 --> 00:18:21,840
leakage correlated with the secret or

476
00:18:21,840 --> 00:18:22,960
not

477
00:18:22,960 --> 00:18:24,960
so locally leakage resilience secret

478
00:18:24,960 --> 00:18:27,120
sharing schemes ensures that the secret

479
00:18:27,120 --> 00:18:30,640
is uncorrelated with the secret

480
00:18:30,640 --> 00:18:32,400
so since the introduction of leakage

481
00:18:32,400 --> 00:18:34,080
resilient secret sharing schemes there

482
00:18:34,080 --> 00:18:36,960
have been two main research directions

483
00:18:36,960 --> 00:18:38,720
the first line of work tried to

484
00:18:38,720 --> 00:18:40,640
construct new secret sharing schemes

485
00:18:40,640 --> 00:18:42,080
that are designed to be leakage

486
00:18:42,080 --> 00:18:44,240
resilient against very strong leakage

487
00:18:44,240 --> 00:18:45,360
attacks

488
00:18:45,360 --> 00:18:47,120
however these constructions usually

489
00:18:47,120 --> 00:18:49,919
incur significant overheads and loses

490
00:18:49,919 --> 00:18:51,840
crucial algebraic structures such as

491
00:18:51,840 --> 00:18:53,520
linearity

492
00:18:53,520 --> 00:18:55,679
hence there is another line of work that

493
00:18:55,679 --> 00:18:57,919
investigates the leakage resilience of

494
00:18:57,919 --> 00:19:00,000
prominent secret sharing schemes such as

495
00:19:00,000 --> 00:19:01,919
xiaomi secret sharing schemes

496
00:19:01,919 --> 00:19:04,160
so our work belongs to this second line

497
00:19:04,160 --> 00:19:05,840
of work

498
00:19:05,840 --> 00:19:08,240
so in particular we consider macy's

499
00:19:08,240 --> 00:19:10,080
secret sharing schemes corresponding to

500
00:19:10,080 --> 00:19:12,480
a random linear code

501
00:19:12,480 --> 00:19:15,039
so given any code c to sample amazing

502
00:19:15,039 --> 00:19:17,360
secret sharing schemes one simply

503
00:19:17,360 --> 00:19:19,919
samples a random code word conditioned

504
00:19:19,919 --> 00:19:22,160
on the first coordinate being equal to

505
00:19:22,160 --> 00:19:25,600
secret s and note that most prominent

506
00:19:25,600 --> 00:19:27,200
secret sharing schemes are missing

507
00:19:27,200 --> 00:19:29,120
secret sharing schemes for example

508
00:19:29,120 --> 00:19:31,600
shamir correspond to resolument code and

509
00:19:31,600 --> 00:19:33,760
edit additive secret sharing correspond

510
00:19:33,760 --> 00:19:36,480
to the parity code

511
00:19:36,480 --> 00:19:38,720
so to sample random linear code we

512
00:19:38,720 --> 00:19:40,799
simply sample the generator matrix

513
00:19:40,799 --> 00:19:42,720
uniformly at random

514
00:19:42,720 --> 00:19:45,120
note that when the underlying field f is

515
00:19:45,120 --> 00:19:47,840
sufficiently large a random code will be

516
00:19:47,840 --> 00:19:50,480
mds with overwhelming probability

517
00:19:50,480 --> 00:19:52,799
and when g is the mds code the

518
00:19:52,799 --> 00:19:54,559
corresponding sql sharing schemes is

519
00:19:54,559 --> 00:19:56,320
simply a threshold secret sharing

520
00:19:56,320 --> 00:19:58,320
schemes where the reconstruction

521
00:19:58,320 --> 00:20:00,880
threshold is the dimension of the code k

522
00:20:00,880 --> 00:20:02,960
plus one

523
00:20:02,960 --> 00:20:05,520
so our first result is the following

524
00:20:05,520 --> 00:20:07,760
so we'll be using m to denote the number

525
00:20:07,760 --> 00:20:10,480
of bits leaked from every secret share

526
00:20:10,480 --> 00:20:13,039
so let n be the number of parties and k

527
00:20:13,039 --> 00:20:15,520
plus 1 be the reconstruction threshold

528
00:20:15,520 --> 00:20:17,919
and m be any constant

529
00:20:17,919 --> 00:20:20,080
as long as we have the guarantee that k

530
00:20:20,080 --> 00:20:22,240
is greater than half of n

531
00:20:22,240 --> 00:20:23,679
the basic secret sharing schemes

532
00:20:23,679 --> 00:20:26,400
corresponding to a random code will be m

533
00:20:26,400 --> 00:20:29,200
bit local leakage resilient except with

534
00:20:29,200 --> 00:20:32,880
exponentially small failure probability

535
00:20:32,880 --> 00:20:35,120
so to complement this result

536
00:20:35,120 --> 00:20:37,200
we also present a bottle deck for the

537
00:20:37,200 --> 00:20:40,080
existing boiler analytic approach

538
00:20:40,080 --> 00:20:42,400
in particular ben hermoda at all

539
00:20:42,400 --> 00:20:44,000
introduced this innovative foreign

540
00:20:44,000 --> 00:20:45,760
analytic approach to prove leakage

541
00:20:45,760 --> 00:20:47,120
resilience

542
00:20:47,120 --> 00:20:48,880
if there if you are familiar with the

543
00:20:48,880 --> 00:20:51,200
proof that where they use this magnitude

544
00:20:51,200 --> 00:20:53,360
of fourier coefficient as the upper

545
00:20:53,360 --> 00:20:56,000
bound for the distinguishing advantage

546
00:20:56,000 --> 00:20:58,320
this approach is adopted by all the

547
00:20:58,320 --> 00:21:01,120
existing works including this one

548
00:21:01,120 --> 00:21:03,520
we show that this approach is bound to

549
00:21:03,520 --> 00:21:07,520
fail when k is less than half of n

550
00:21:07,520 --> 00:21:10,000
therefore the first result is the

551
00:21:10,000 --> 00:21:12,799
optimal result one can hope to achieve

552
00:21:12,799 --> 00:21:17,039
using the existing technical approach

553
00:21:17,039 --> 00:21:19,280
so now let me position our works among

554
00:21:19,280 --> 00:21:22,240
the relevant prior works

555
00:21:22,240 --> 00:21:24,880
first in the original work by ben hamoda

556
00:21:24,880 --> 00:21:28,720
at all they consider any mds code g

557
00:21:28,720 --> 00:21:30,559
and they show that g will be leakage

558
00:21:30,559 --> 00:21:33,120
resilient as long as k is greater than

559
00:21:33,120 --> 00:21:34,799
some fraction of n

560
00:21:34,799 --> 00:21:36,720
and this fraction depends on the number

561
00:21:36,720 --> 00:21:39,200
of bits leaked from every secret share

562
00:21:39,200 --> 00:21:42,000
roughly when m is 1 you roughly need k

563
00:21:42,000 --> 00:21:45,120
to be greater than 0.85 times n

564
00:21:45,120 --> 00:21:47,280
in comparison our construction is a

565
00:21:47,280 --> 00:21:49,360
randomized construction there is an

566
00:21:49,360 --> 00:21:51,760
exponentially small failure probability

567
00:21:51,760 --> 00:21:55,200
but we prove a stronger result

568
00:21:55,200 --> 00:21:58,000
in another recent work by maji at all

569
00:21:58,000 --> 00:21:59,919
they consider shamir secret sharing with

570
00:21:59,919 --> 00:22:02,960
randomly chosen evaluation places so

571
00:22:02,960 --> 00:22:05,440
they are also a randomized construction

572
00:22:05,440 --> 00:22:07,600
they consider a severely restricted type

573
00:22:07,600 --> 00:22:10,640
of leakage namely the physical leakage

574
00:22:10,640 --> 00:22:12,480
but they prove a very strong result that

575
00:22:12,480 --> 00:22:14,640
the reconstruction threshold can be as

576
00:22:14,640 --> 00:22:17,039
low as two and the number of parties can

577
00:22:17,039 --> 00:22:19,120
be unbounded

578
00:22:19,120 --> 00:22:21,360
we make a special note about this work

579
00:22:21,360 --> 00:22:23,840
because they also employs the existing

580
00:22:23,840 --> 00:22:26,000
foreign analytic approach and they prove

581
00:22:26,000 --> 00:22:28,159
leakage resilience in the setting where

582
00:22:28,159 --> 00:22:29,919
the reconstruction threshold is less

583
00:22:29,919 --> 00:22:32,480
than half of the parties

584
00:22:32,480 --> 00:22:34,240
however this does not contradict the

585
00:22:34,240 --> 00:22:36,320
bottleneck i just showed you because

586
00:22:36,320 --> 00:22:40,480
they only consider physical leakage

587
00:22:40,480 --> 00:22:41,760
now finally

588
00:22:41,760 --> 00:22:43,919
let me highlight an exciting feature

589
00:22:43,919 --> 00:22:45,600
about our proof

590
00:22:45,600 --> 00:22:47,840
so one particular challenging fact is

591
00:22:47,840 --> 00:22:50,240
that the number of leakage functions is

592
00:22:50,240 --> 00:22:52,000
actually much much larger than the

593
00:22:52,000 --> 00:22:54,320
family of the constructions

594
00:22:54,320 --> 00:22:57,200
hence if you consider this standard way

595
00:22:57,200 --> 00:22:58,720
to proving

596
00:22:58,720 --> 00:23:01,120
the security of randomized constructions

597
00:23:01,120 --> 00:23:03,280
namely if you fix any leakage function

598
00:23:03,280 --> 00:23:05,520
and prove that most code will be secure

599
00:23:05,520 --> 00:23:07,679
against this leakage function then you

600
00:23:07,679 --> 00:23:09,760
use a typical union bound over all the

601
00:23:09,760 --> 00:23:11,840
possible choices of leakage functions

602
00:23:11,840 --> 00:23:13,919
this approach will not work

603
00:23:13,919 --> 00:23:15,280
because there are simply too many

604
00:23:15,280 --> 00:23:17,440
leakage functions

605
00:23:17,440 --> 00:23:20,159
so our proof identifies a new set of

606
00:23:20,159 --> 00:23:21,280
tests

607
00:23:21,280 --> 00:23:23,760
so every test is specified by a product

608
00:23:23,760 --> 00:23:25,039
space

609
00:23:25,039 --> 00:23:27,840
and we say a code word is bad if a large

610
00:23:27,840 --> 00:23:30,240
fraction of its coordinates fall inside

611
00:23:30,240 --> 00:23:32,240
this subset vi

612
00:23:32,240 --> 00:23:34,960
and the code passes the test if there

613
00:23:34,960 --> 00:23:37,919
are a few code words that are bad

614
00:23:37,919 --> 00:23:39,840
so to give you some intuition about this

615
00:23:39,840 --> 00:23:40,799
test

616
00:23:40,799 --> 00:23:42,799
every leakage function will correspond

617
00:23:42,799 --> 00:23:45,120
to some tests

618
00:23:45,120 --> 00:23:47,840
intuitively every vi will be the set of

619
00:23:47,840 --> 00:23:51,039
large fourier coefficient of li

620
00:23:51,039 --> 00:23:53,039
and we use a fourier analytic approach

621
00:23:53,039 --> 00:23:55,840
to prove that if a code passes this test

622
00:23:55,840 --> 00:23:58,240
we it will be leakage resident against

623
00:23:58,240 --> 00:24:00,720
this dkh function l

624
00:24:00,720 --> 00:24:03,200
hence if a code passes all the tests it

625
00:24:03,200 --> 00:24:05,760
will be leakage resident

626
00:24:05,760 --> 00:24:08,320
now the crucial benefit of defining this

627
00:24:08,320 --> 00:24:10,880
set of tests is that the the number of

628
00:24:10,880 --> 00:24:12,960
tests is actually quite small

629
00:24:12,960 --> 00:24:15,120
hence a union bond over the test now

630
00:24:15,120 --> 00:24:17,039
become possible

631
00:24:17,039 --> 00:24:19,440
and finally we employees a combinatorial

632
00:24:19,440 --> 00:24:22,640
argument to prove that fix any test most

633
00:24:22,640 --> 00:24:25,039
code will pass this test

634
00:24:25,039 --> 00:24:27,120
so i will not have time to go into more

635
00:24:27,120 --> 00:24:29,360
details on the proof so i will refer you

636
00:24:29,360 --> 00:24:31,520
to the long video and the full version

637
00:24:31,520 --> 00:24:32,880
for more details

638
00:24:32,880 --> 00:24:35,919
i will end my talk here thank you

639
00:24:35,919 --> 00:24:38,240
thank you very much minyan and thanks to

640
00:24:38,240 --> 00:24:40,400
all the speakers of this session

641
00:24:40,400 --> 00:24:42,799
and so now it's question time so i've

642
00:24:42,799 --> 00:24:45,440
seen already one question uh

643
00:24:45,440 --> 00:24:48,559
on the zulip

644
00:24:49,279 --> 00:24:51,760
kundu says

645
00:24:51,760 --> 00:24:54,400
it's a question for akshay

646
00:24:54,400 --> 00:24:55,360
i just

647
00:24:55,360 --> 00:24:57,679
just wondering how would the traceable

648
00:24:57,679 --> 00:24:59,440
secret sharing scheme

649
00:24:59,440 --> 00:25:03,200
bf if we have a quantum adversary

650
00:25:03,200 --> 00:25:05,440
so i'm assuming that the question refers

651
00:25:05,440 --> 00:25:08,080
to the case where the the collector the

652
00:25:08,080 --> 00:25:10,640
adversary and the servers have some

653
00:25:10,640 --> 00:25:13,039
entangled quantum state

654
00:25:13,039 --> 00:25:16,159
and what happens in that setting uh so

655
00:25:16,159 --> 00:25:18,159
not too sure so i would

656
00:25:18,159 --> 00:25:20,159
guess that our construction also

657
00:25:20,159 --> 00:25:22,159
satisfies this if we

658
00:25:22,159 --> 00:25:24,240
instantiate with suitability post point

659
00:25:24,240 --> 00:25:26,720
of primitives but yeah this is something

660
00:25:26,720 --> 00:25:29,679
interesting to consider yeah

661
00:25:29,679 --> 00:25:31,440
i would conjecture that construction is

662
00:25:31,440 --> 00:25:32,960
secure but yeah

663
00:25:32,960 --> 00:25:35,600
not too sure

664
00:25:35,600 --> 00:25:38,840
thank you

665
00:25:42,159 --> 00:25:44,960
other questions

666
00:25:47,279 --> 00:25:51,039
i have just a follow-up question

667
00:25:51,279 --> 00:25:55,400
like if we uh

668
00:26:07,600 --> 00:26:08,799
quantum

669
00:26:08,799 --> 00:26:11,440
multi-party competition in order to

670
00:26:11,440 --> 00:26:14,480
compute the stress so yeah

671
00:26:14,480 --> 00:26:16,240
yeah i'm not too sure yeah

672
00:26:16,240 --> 00:26:18,400
whether whether this is secure if you

673
00:26:18,400 --> 00:26:20,720
just instantiate the multi-party

674
00:26:20,720 --> 00:26:22,960
computation as a post quantum that's

675
00:26:22,960 --> 00:26:24,480
interesting to

676
00:26:24,480 --> 00:26:27,279
consider settings where yeah the the

677
00:26:27,279 --> 00:26:29,520
servers and the adversary have entire

678
00:26:29,520 --> 00:26:32,520
points

679
00:26:39,840 --> 00:26:41,520
and

680
00:26:41,520 --> 00:26:46,200
okay do we have any other questions

681
00:27:01,039 --> 00:27:02,640
okay i don't see any other questions so

682
00:27:02,640 --> 00:27:04,640
i guess okay we are almost at the end of

683
00:27:04,640 --> 00:27:07,520
the session anyway so let's close this

684
00:27:07,520 --> 00:27:09,360
session thank you very much for all the

685
00:27:09,360 --> 00:27:11,760
speakers and

686
00:27:11,760 --> 00:27:14,559
i think the next

