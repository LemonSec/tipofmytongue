1
00:00:00,880 --> 00:00:03,439
hi everyone this is the talk for the

2
00:00:03,439 --> 00:00:06,240
paper a rational protocol treatment of

3
00:00:06,240 --> 00:00:09,360
51 percent attacks this is joint work

4
00:00:09,360 --> 00:00:12,639
with christian professor zikas and i and

5
00:00:12,639 --> 00:00:17,639
you can see the full version on eprint

6
00:00:17,920 --> 00:00:20,080
if you read cryptocurrency news

7
00:00:20,080 --> 00:00:21,359
especially

8
00:00:21,359 --> 00:00:24,160
news on proof-of-work cryptocurrencies

9
00:00:24,160 --> 00:00:26,800
you will see the somewhat worrying trend

10
00:00:26,800 --> 00:00:28,960
of so-called 51

11
00:00:28,960 --> 00:00:31,599
attacks in these attacks

12
00:00:31,599 --> 00:00:34,239
the attacker has somehow obtained a

13
00:00:34,239 --> 00:00:37,600
majority of power in a system and

14
00:00:37,600 --> 00:00:40,160
they're able to steal tens of thousands

15
00:00:40,160 --> 00:00:43,280
of dollars even millions of dollars from

16
00:00:43,280 --> 00:00:46,399
crypto exchanges

17
00:00:46,559 --> 00:00:48,960
a lot of the time the attacker does

18
00:00:48,960 --> 00:00:51,600
what's called double spending

19
00:00:51,600 --> 00:00:53,920
to see what double spending is let's

20
00:00:53,920 --> 00:00:56,000
give an example in our fictional

21
00:00:56,000 --> 00:00:58,960
cryptocurrency called sac coin

22
00:00:58,960 --> 00:01:01,359
and how it can be exchanged for a fiat

23
00:01:01,359 --> 00:01:04,319
currency like the us dollar

24
00:01:04,319 --> 00:01:06,720
on the left we have a potential

25
00:01:06,720 --> 00:01:10,080
cryptocurrency thief who has some 100

26
00:01:10,080 --> 00:01:12,080
sat coins

27
00:01:12,080 --> 00:01:15,280
he asked in exchange hey can i exchange

28
00:01:15,280 --> 00:01:20,400
my 100 coins for your 5 000

29
00:01:20,400 --> 00:01:23,840
and the exchange agrees

30
00:01:23,840 --> 00:01:26,560
now the potential thief puts on the

31
00:01:26,560 --> 00:01:29,280
blockchain a transaction that gives his

32
00:01:29,280 --> 00:01:33,680
100 sat coins to the exchange

33
00:01:33,680 --> 00:01:36,000
seeing this the exchange gives five

34
00:01:36,000 --> 00:01:41,079
thousand dollars to the potential thief

35
00:01:42,240 --> 00:01:45,680
now at this point if the trade were

36
00:01:45,680 --> 00:01:50,079
honest then this is supposed to be over

37
00:01:50,079 --> 00:01:53,360
but in the case of double spending our

38
00:01:53,360 --> 00:01:56,399
thief is able to obtain a majority of

39
00:01:56,399 --> 00:01:59,920
power in satcoin hence the name 51

40
00:01:59,920 --> 00:02:00,799
attack

41
00:02:00,799 --> 00:02:04,079
and he's able to secretly create a

42
00:02:04,079 --> 00:02:07,119
longer chain the one in red here which

43
00:02:07,119 --> 00:02:09,679
excludes the transaction that gave the

44
00:02:09,679 --> 00:02:13,760
exchange the 100 sag coins

45
00:02:14,080 --> 00:02:16,879
now since the red chain is longer it

46
00:02:16,879 --> 00:02:20,319
means that even honest parties will

47
00:02:20,319 --> 00:02:23,599
turn to this chain instead and revert

48
00:02:23,599 --> 00:02:26,879
the shorter gray chain below and that's

49
00:02:26,879 --> 00:02:30,400
the one with the transaction

50
00:02:30,400 --> 00:02:32,720
so our thief in the end

51
00:02:32,720 --> 00:02:34,879
ends up with both the five thousand

52
00:02:34,879 --> 00:02:36,400
dollars and

53
00:02:36,400 --> 00:02:39,360
his 100 stat coins back to be double

54
00:02:39,360 --> 00:02:41,920
spent later

55
00:02:41,920 --> 00:02:44,800
but this kind of attack is really not

56
00:02:44,800 --> 00:02:47,440
supposed to happen because of a very

57
00:02:47,440 --> 00:02:50,160
common property of blockchain called

58
00:02:50,160 --> 00:02:52,000
consistency

59
00:02:52,000 --> 00:02:55,120
so what's consistency

60
00:02:55,120 --> 00:02:58,800
informally consistency says that if an

61
00:02:58,800 --> 00:03:01,680
honest party removes the most recent

62
00:03:01,680 --> 00:03:03,280
blocks in his chain

63
00:03:03,280 --> 00:03:06,000
which is given by the parameter the

64
00:03:06,000 --> 00:03:07,920
cutoff parameter

65
00:03:07,920 --> 00:03:10,400
then the rest of the blocks the ones in

66
00:03:10,400 --> 00:03:14,000
grey here are supposed to be immutable

67
00:03:14,000 --> 00:03:16,080
and that means that they can't be

68
00:03:16,080 --> 00:03:19,920
reverted or changed in any way

69
00:03:19,920 --> 00:03:23,519
so why has consistency been broken

70
00:03:23,519 --> 00:03:25,760
well it turns out that

71
00:03:25,760 --> 00:03:28,000
consistency requires two main

72
00:03:28,000 --> 00:03:29,200
assumptions

73
00:03:29,200 --> 00:03:32,560
the first one will not get into but it's

74
00:03:32,560 --> 00:03:35,599
that there must be a bound on the total

75
00:03:35,599 --> 00:03:37,760
hashing power in the system

76
00:03:37,760 --> 00:03:40,400
and this is so that blocks are not to

77
00:03:40,400 --> 00:03:42,000
made too quickly

78
00:03:42,000 --> 00:03:42,959
and

79
00:03:42,959 --> 00:03:45,519
that parties can't have two diverging

80
00:03:45,519 --> 00:03:48,080
views on the blockchain itself

81
00:03:48,080 --> 00:03:50,720
but the second one is the one we'll

82
00:03:50,720 --> 00:03:53,599
focus on in this work and it's that

83
00:03:53,599 --> 00:03:56,319
there's an honest majority of power in

84
00:03:56,319 --> 00:03:59,200
the system and this is exactly what's

85
00:03:59,200 --> 00:04:03,360
broken by a 51 percent attacker

86
00:04:03,360 --> 00:04:06,000
and when consistency is broken we say

87
00:04:06,000 --> 00:04:10,799
that there is a fork in the system

88
00:04:13,680 --> 00:04:17,519
so now we've discussed the problem of 51

89
00:04:17,519 --> 00:04:20,478
attacks i will quickly go over an

90
00:04:20,478 --> 00:04:23,360
overview of our contributions

91
00:04:23,360 --> 00:04:27,680
so first we model these 51 attacks in a

92
00:04:27,680 --> 00:04:30,639
rational framework called rpd

93
00:04:30,639 --> 00:04:32,960
then we'll discuss and solve

94
00:04:32,960 --> 00:04:37,120
a problem with the previous work in rpd

95
00:04:37,120 --> 00:04:39,440
which is what we call unbounded

96
00:04:39,440 --> 00:04:41,199
incentives

97
00:04:41,199 --> 00:04:44,479
and thirdly we will discuss what makes a

98
00:04:44,479 --> 00:04:48,400
coin susceptible to these 51 attacks and

99
00:04:48,400 --> 00:04:51,840
finally how we might protect these coins

100
00:04:51,840 --> 00:04:54,720
from these attacks

101
00:04:54,720 --> 00:04:58,479
so let's start with the first point

102
00:04:58,479 --> 00:05:00,960
now we know that sometimes honest

103
00:05:00,960 --> 00:05:03,919
majority is broken but this doesn't

104
00:05:03,919 --> 00:05:06,160
really answer the question

105
00:05:06,160 --> 00:05:08,880
why some blockchains might be more

106
00:05:08,880 --> 00:05:11,600
vulnerable to these attacks than other

107
00:05:11,600 --> 00:05:14,240
blockchains

108
00:05:14,400 --> 00:05:17,840
the rational treatment gives a rather

109
00:05:17,840 --> 00:05:20,400
intuitive answer to this question and

110
00:05:20,400 --> 00:05:23,600
it's that attackers don't usually attack

111
00:05:23,600 --> 00:05:26,800
blockchains for fun they usually care

112
00:05:26,800 --> 00:05:28,880
about profit

113
00:05:28,880 --> 00:05:30,800
and some factors that they might

114
00:05:30,800 --> 00:05:34,080
consider are for example the amount that

115
00:05:34,080 --> 00:05:36,240
they might want to double spend

116
00:05:36,240 --> 00:05:40,639
the cost of attack or the block rewards

117
00:05:40,639 --> 00:05:43,520
and several previous works have analyzed

118
00:05:43,520 --> 00:05:47,360
this 51 attacks in the rational setting

119
00:05:47,360 --> 00:05:50,160
under various adversarial models but

120
00:05:50,160 --> 00:05:53,039
mostly in more economics or

121
00:05:53,039 --> 00:05:54,560
probabilistic

122
00:05:54,560 --> 00:05:58,240
analyses perspectives

123
00:05:59,120 --> 00:06:01,680
so how does our work add to these

124
00:06:01,680 --> 00:06:02,960
previous works

125
00:06:02,960 --> 00:06:06,000
well compared to previous works our work

126
00:06:06,000 --> 00:06:09,680
analyzes this 51 attacks under a

127
00:06:09,680 --> 00:06:12,880
framework called rpd which has two main

128
00:06:12,880 --> 00:06:14,479
advantages

129
00:06:14,479 --> 00:06:15,680
first

130
00:06:15,680 --> 00:06:18,080
there is no restriction on the average

131
00:06:18,080 --> 00:06:19,440
zero action

132
00:06:19,440 --> 00:06:22,160
and what this means is that if we prove

133
00:06:22,160 --> 00:06:25,280
the optimality of some strategy

134
00:06:25,280 --> 00:06:28,800
or that our protocol is secure in some

135
00:06:28,800 --> 00:06:30,800
sense in this model

136
00:06:30,800 --> 00:06:33,360
then this means that this is against all

137
00:06:33,360 --> 00:06:36,319
possible adversarial actions and

138
00:06:36,319 --> 00:06:38,960
secondly this framework is compatible

139
00:06:38,960 --> 00:06:42,000
with uc which means that this analysis

140
00:06:42,000 --> 00:06:46,880
will hold in presence of other protocols

141
00:06:47,759 --> 00:06:51,360
in the rpd framework we start with a

142
00:06:51,360 --> 00:06:53,280
protocol designer d

143
00:06:53,280 --> 00:06:57,919
who has some blockchain protocol pi

144
00:06:57,919 --> 00:07:01,120
ideally he wants to implement a

145
00:07:01,120 --> 00:07:04,160
consistent ledger functionality f which

146
00:07:04,160 --> 00:07:07,360
is just a uc functionality with

147
00:07:07,360 --> 00:07:10,800
consistency embedded in it

148
00:07:10,800 --> 00:07:13,440
unfortunately because of the lack of

149
00:07:13,440 --> 00:07:15,039
honest majority

150
00:07:15,039 --> 00:07:18,479
he can only implement an inconsistent

151
00:07:18,479 --> 00:07:21,840
ledger functionality weak f that allows

152
00:07:21,840 --> 00:07:24,240
the blockchain to fork

153
00:07:24,240 --> 00:07:26,720
the goal when working with rpd then is

154
00:07:26,720 --> 00:07:29,120
to show that although we can only

155
00:07:29,120 --> 00:07:32,160
implement the weak ledger functionality

156
00:07:32,160 --> 00:07:34,960
when up against the rational attackers

157
00:07:34,960 --> 00:07:37,520
we can actually achieve the consistent

158
00:07:37,520 --> 00:07:40,479
ledger that is if we assume that the

159
00:07:40,479 --> 00:07:43,520
attacker acts according to some class of

160
00:07:43,520 --> 00:07:46,400
utility functions then we don't need the

161
00:07:46,400 --> 00:07:49,599
help of the weaker ledger to simulate

162
00:07:49,599 --> 00:07:51,680
them

163
00:07:51,680 --> 00:07:54,720
and if this is the case then we say that

164
00:07:54,720 --> 00:07:58,080
the protocol has attack payoff security

165
00:07:58,080 --> 00:08:00,560
of course this is uh with respect to the

166
00:08:00,560 --> 00:08:04,000
utility function class

167
00:08:04,000 --> 00:08:07,680
now in eurocrip of 2018 bgmt said

168
00:08:07,680 --> 00:08:10,240
although they weren't um explicitly

169
00:08:10,240 --> 00:08:13,840
analyzing these 51 attacks they show the

170
00:08:13,840 --> 00:08:16,080
following for the bitcoin backbone

171
00:08:16,080 --> 00:08:17,360
protocol

172
00:08:17,360 --> 00:08:20,000
they show an even stronger property

173
00:08:20,000 --> 00:08:22,720
holds called strong attack payoff

174
00:08:22,720 --> 00:08:24,080
security

175
00:08:24,080 --> 00:08:27,120
that is they show that in fact attackers

176
00:08:27,120 --> 00:08:29,280
are incentivized to just follow the

177
00:08:29,280 --> 00:08:31,919
protocol honestly

178
00:08:31,919 --> 00:08:35,120
but wait something doesn't seem right

179
00:08:35,120 --> 00:08:37,839
didn't we just say that a bunch of

180
00:08:37,839 --> 00:08:41,200
cryptocurrencies got attacked so

181
00:08:41,200 --> 00:08:44,080
what's happening

182
00:08:44,159 --> 00:08:46,720
well to see why this result doesn't seem

183
00:08:46,720 --> 00:08:48,880
to match up with reality

184
00:08:48,880 --> 00:08:51,360
let's first take a look at the utility

185
00:08:51,360 --> 00:08:54,240
function they used

186
00:08:54,240 --> 00:08:56,640
i'm using this squiggly equal sign

187
00:08:56,640 --> 00:08:59,120
because actually i'm omitting the fact

188
00:08:59,120 --> 00:09:02,000
that this utility depends on the

189
00:09:02,000 --> 00:09:05,200
simulator and the environment

190
00:09:05,200 --> 00:09:07,519
but the important thing is that the

191
00:09:07,519 --> 00:09:10,160
first term here is just the expected

192
00:09:10,160 --> 00:09:13,440
total reward for making blocks

193
00:09:13,440 --> 00:09:16,000
and the second term here is just the

194
00:09:16,000 --> 00:09:19,360
expected total cost of mining

195
00:09:19,360 --> 00:09:22,399
so in fact their utility function

196
00:09:22,399 --> 00:09:24,640
doesn't include the profit from double

197
00:09:24,640 --> 00:09:26,160
spending at all

198
00:09:26,160 --> 00:09:28,480
well it's rather simple let's just add

199
00:09:28,480 --> 00:09:31,600
an additional term here where f payoff

200
00:09:31,600 --> 00:09:33,920
is the profit for forking like the

201
00:09:33,920 --> 00:09:36,959
reward for double spending

202
00:09:36,959 --> 00:09:39,760
so now we have changed the utility

203
00:09:39,760 --> 00:09:42,160
function can we now prove something

204
00:09:42,160 --> 00:09:44,480
different

205
00:09:44,480 --> 00:09:45,279
well

206
00:09:45,279 --> 00:09:48,399
surprisingly and rather unfortunately no

207
00:09:48,399 --> 00:09:50,800
in fact we can prove almost the same

208
00:09:50,800 --> 00:09:54,160
thing we can show that the blockchain is

209
00:09:54,160 --> 00:09:56,800
still strongly attack payoff secure

210
00:09:56,800 --> 00:10:00,560
even with an arbitrarily large but still

211
00:10:00,560 --> 00:10:02,800
polysize f payoff

212
00:10:02,800 --> 00:10:05,760
and the proof is even similar to that of

213
00:10:05,760 --> 00:10:08,560
bgmt z18

214
00:10:08,560 --> 00:10:10,480
and it goes as follows

215
00:10:10,480 --> 00:10:14,320
let a1 be any polynomial time average

216
00:10:14,320 --> 00:10:16,160
serial strategy

217
00:10:16,160 --> 00:10:18,959
which makes a polynomial number of

218
00:10:18,959 --> 00:10:21,440
hashing queries q

219
00:10:21,440 --> 00:10:25,360
we see that a1's utility is at most f

220
00:10:25,360 --> 00:10:28,560
payoff which is polynomial by assumption

221
00:10:28,560 --> 00:10:31,440
plus the mining rewards from the q

222
00:10:31,440 --> 00:10:35,519
queries which is also polynomial

223
00:10:35,839 --> 00:10:38,399
we want to show that the passive

224
00:10:38,399 --> 00:10:42,240
strategy a2 can achieve better utility

225
00:10:42,240 --> 00:10:43,839
than a1

226
00:10:43,839 --> 00:10:46,720
so he simply does so by mining a bit

227
00:10:46,720 --> 00:10:47,920
longer

228
00:10:47,920 --> 00:10:50,880
he mines some q star queries which turns

229
00:10:50,880 --> 00:10:54,079
out to be just polynomial in q

230
00:10:54,079 --> 00:10:56,959
and since q is polynomial this means

231
00:10:56,959 --> 00:11:02,560
that a2 itself is a polytime strategy

232
00:11:05,279 --> 00:11:07,760
well this kind of proof strategy is very

233
00:11:07,760 --> 00:11:11,760
cute and it works but there is a problem

234
00:11:11,760 --> 00:11:15,440
realistically the passive strategy a2

235
00:11:15,440 --> 00:11:18,480
can't just mine forever and he thus

236
00:11:18,480 --> 00:11:21,920
can't always grow his utility to be that

237
00:11:21,920 --> 00:11:25,760
of to be greater than that of a1

238
00:11:25,760 --> 00:11:28,240
and this is an example of what's called

239
00:11:28,240 --> 00:11:30,560
saint petersburg paradox which

240
00:11:30,560 --> 00:11:33,360
informally says that infinite rewards

241
00:11:33,360 --> 00:11:36,640
are not realistic

242
00:11:37,200 --> 00:11:39,600
now we lead to discussing our second

243
00:11:39,600 --> 00:11:42,600
contribution

244
00:11:42,720 --> 00:11:45,920
we saw that the utility function from

245
00:11:45,920 --> 00:11:50,800
bgmt z18 allowed a passive adversary to

246
00:11:50,800 --> 00:11:54,880
grow his utility in an unbounded manner

247
00:11:54,880 --> 00:11:57,040
we call this property of utility

248
00:11:57,040 --> 00:12:00,560
functions unbounded incentives

249
00:12:00,560 --> 00:12:04,240
in fact we can show that any protocol is

250
00:12:04,240 --> 00:12:06,560
strongly attack payoff secure

251
00:12:06,560 --> 00:12:09,920
when the attacker's utility function has

252
00:12:09,920 --> 00:12:12,079
unbounded incentives

253
00:12:12,079 --> 00:12:14,720
and this is not a good thing because

254
00:12:14,720 --> 00:12:17,279
this means that we don't really know

255
00:12:17,279 --> 00:12:20,959
whether a protocol is necessarily good

256
00:12:20,959 --> 00:12:25,120
or bad or just that the utility has this

257
00:12:25,120 --> 00:12:29,360
property of unbounded incentives

258
00:12:30,880 --> 00:12:33,279
to avoid the problem of unbounded

259
00:12:33,279 --> 00:12:36,880
incentives we introduce a condition

260
00:12:36,880 --> 00:12:40,079
on blockchain utility functions called

261
00:12:40,079 --> 00:12:42,079
limited horizons

262
00:12:42,079 --> 00:12:44,160
we first generalized the block reward

263
00:12:44,160 --> 00:12:47,920
parameter b reward as a non-increasing

264
00:12:47,920 --> 00:12:50,800
function in the round number r

265
00:12:50,800 --> 00:12:54,000
then informally we say that a utility

266
00:12:54,000 --> 00:12:57,440
function has limited horizons

267
00:12:57,440 --> 00:13:00,079
if there is a round r

268
00:13:00,079 --> 00:13:03,120
such that after this round passive

269
00:13:03,120 --> 00:13:07,760
mining is not expected to be profitable

270
00:13:07,760 --> 00:13:10,639
and it's easy to see that utility

271
00:13:10,639 --> 00:13:14,000
functions with limited horizons do avoid

272
00:13:14,000 --> 00:13:18,399
the problem of unbounded incentives

273
00:13:18,399 --> 00:13:22,320
so what incentivizes 51 attacks that

274
00:13:22,320 --> 00:13:25,200
break consistency

275
00:13:25,200 --> 00:13:28,320
very roughly we show that for utility

276
00:13:28,320 --> 00:13:30,959
functions with limited horizons we can

277
00:13:30,959 --> 00:13:32,399
show the following

278
00:13:32,399 --> 00:13:35,680
we can break both attack payoff security

279
00:13:35,680 --> 00:13:39,360
and strong attack payoff security if the

280
00:13:39,360 --> 00:13:42,320
lower bound on the utility of a forking

281
00:13:42,320 --> 00:13:43,519
adversary

282
00:13:43,519 --> 00:13:46,639
is greater than the upper bound utility

283
00:13:46,639 --> 00:13:49,199
of an optimal front-running passive

284
00:13:49,199 --> 00:13:50,399
adversary

285
00:13:50,399 --> 00:13:53,120
and this is clearly true because this is

286
00:13:53,120 --> 00:13:55,760
really just the opposite of the

287
00:13:55,760 --> 00:13:58,959
definition of attack payoff security so

288
00:13:58,959 --> 00:14:01,920
what's left is to show what these two

289
00:14:01,920 --> 00:14:05,920
terms in this inequality are

290
00:14:06,240 --> 00:14:09,199
to upper bound the utility of a passive

291
00:14:09,199 --> 00:14:10,880
mining adversary

292
00:14:10,880 --> 00:14:14,160
we first observe that when the adversary

293
00:14:14,160 --> 00:14:15,440
is passive

294
00:14:15,440 --> 00:14:18,480
then the probability of forking is

295
00:14:18,480 --> 00:14:22,160
negligible so we can ignore this last

296
00:14:22,160 --> 00:14:24,240
term here

297
00:14:24,240 --> 00:14:27,199
secondly we observe that this term which

298
00:14:27,199 --> 00:14:28,160
is

299
00:14:28,160 --> 00:14:31,519
the expected block rewards is a bit hard

300
00:14:31,519 --> 00:14:32,880
to compute

301
00:14:32,880 --> 00:14:36,000
and this is because the time the block

302
00:14:36,000 --> 00:14:39,199
enters the ledger which is represented

303
00:14:39,199 --> 00:14:42,320
by this random variable ibr

304
00:14:42,320 --> 00:14:44,880
is a bit hard to predict

305
00:14:44,880 --> 00:14:48,320
but we can simplify computation by upper

306
00:14:48,320 --> 00:14:51,600
bounding this term by replacing the time

307
00:14:51,600 --> 00:14:53,680
blocks enter the ledger

308
00:14:53,680 --> 00:14:55,440
with the time

309
00:14:55,440 --> 00:14:57,680
blocks are broadcast

310
00:14:57,680 --> 00:15:00,959
and this can be done because b reward is

311
00:15:00,959 --> 00:15:03,839
a non-increasing function by limited

312
00:15:03,839 --> 00:15:06,480
horizons

313
00:15:07,199 --> 00:15:08,880
on the other hand

314
00:15:08,880 --> 00:15:11,680
to lower bound the utility of a forking

315
00:15:11,680 --> 00:15:12,959
adversary

316
00:15:12,959 --> 00:15:15,680
we consider this rather simple attack in

317
00:15:15,680 --> 00:15:16,880
this attack

318
00:15:16,880 --> 00:15:20,000
the adversary works to create a chain

319
00:15:20,000 --> 00:15:23,040
the red one on top here which he keeps

320
00:15:23,040 --> 00:15:25,120
private to himself

321
00:15:25,120 --> 00:15:28,000
the honest parties who are unaware of

322
00:15:28,000 --> 00:15:31,040
this red chain keeps mining on the gray

323
00:15:31,040 --> 00:15:33,600
chain below

324
00:15:33,600 --> 00:15:36,320
since the adversary has a majority of

325
00:15:36,320 --> 00:15:37,839
hashing power

326
00:15:37,839 --> 00:15:40,480
his red chain will grow faster

327
00:15:40,480 --> 00:15:42,399
than the chain that's known to the

328
00:15:42,399 --> 00:15:45,680
honest parties the gray one below

329
00:15:45,680 --> 00:15:48,639
and at some point releasing this chain

330
00:15:48,639 --> 00:15:51,680
will cause a fork by reverting the

331
00:15:51,680 --> 00:15:56,319
supposedly immutable green block here

332
00:15:56,639 --> 00:15:59,920
and how long this takes depends on the

333
00:15:59,920 --> 00:16:02,800
growth speed of this lower grade chain

334
00:16:02,800 --> 00:16:06,160
here which is known by a property called

335
00:16:06,160 --> 00:16:08,800
chain growth

336
00:16:08,800 --> 00:16:11,680
then we can obtain the utility of this

337
00:16:11,680 --> 00:16:15,120
adversary which is his expected profit

338
00:16:15,120 --> 00:16:17,600
from mining blocks during this time

339
00:16:17,600 --> 00:16:20,800
plus the profit for forking which he

340
00:16:20,800 --> 00:16:25,519
receives with overwhelming probability

341
00:16:25,519 --> 00:16:27,360
now that we have learned about

342
00:16:27,360 --> 00:16:30,560
profitable attacks perhaps a more

343
00:16:30,560 --> 00:16:33,040
interesting question is on these other

344
00:16:33,040 --> 00:16:35,839
side of the coin which is how can we

345
00:16:35,839 --> 00:16:40,560
protect a blockchain from these attacks

346
00:16:41,199 --> 00:16:44,720
remember that in the rpd framework we

347
00:16:44,720 --> 00:16:47,120
have no restriction on adversarial

348
00:16:47,120 --> 00:16:50,560
strategy and again no assumption on

349
00:16:50,560 --> 00:16:53,120
honest majority only that uh the

350
00:16:53,120 --> 00:16:55,440
attackers are rational

351
00:16:55,440 --> 00:16:58,160
and the question we're going to answer

352
00:16:58,160 --> 00:17:00,800
is the following how much time do you

353
00:17:00,800 --> 00:17:02,639
actually have to wait

354
00:17:02,639 --> 00:17:06,559
for a block to be immutable under these

355
00:17:06,559 --> 00:17:09,280
restrictions

356
00:17:09,439 --> 00:17:12,160
to do so we borrow from the model of

357
00:17:12,160 --> 00:17:13,919
bgkrz20

358
00:17:13,919 --> 00:17:17,919
which describes a 51 attacker by his

359
00:17:17,919 --> 00:17:19,520
budget b

360
00:17:19,520 --> 00:17:22,959
we say that a adversary has some budget

361
00:17:22,959 --> 00:17:26,319
b if he makes a total of b mining

362
00:17:26,319 --> 00:17:29,440
queries over the majority of hashing

363
00:17:29,440 --> 00:17:31,520
power in the system

364
00:17:31,520 --> 00:17:33,039
for example

365
00:17:33,039 --> 00:17:35,919
very informally let's say a total

366
00:17:35,919 --> 00:17:38,640
hashing power in the system per round is

367
00:17:38,640 --> 00:17:40,000
100

368
00:17:40,000 --> 00:17:43,120
and in a single round the adversary

369
00:17:43,120 --> 00:17:45,760
makes some 51 curries

370
00:17:45,760 --> 00:17:48,559
then in this round he has spent a budget

371
00:17:48,559 --> 00:17:52,880
of 1 which is 1 over the majority of

372
00:17:52,880 --> 00:17:55,600
100.

373
00:17:55,760 --> 00:17:58,080
now we give an overview of how we

374
00:17:58,080 --> 00:18:01,360
achieve our goal of finding a big enough

375
00:18:01,360 --> 00:18:03,919
confirmation time for blocks to be

376
00:18:03,919 --> 00:18:06,080
immutable in the blockchain

377
00:18:06,080 --> 00:18:09,280
and the proof idea is as follows

378
00:18:09,280 --> 00:18:12,640
first we start with a limited horizons

379
00:18:12,640 --> 00:18:16,240
utility function ua

380
00:18:16,240 --> 00:18:17,039
then

381
00:18:17,039 --> 00:18:20,240
using the limited horizons property we

382
00:18:20,240 --> 00:18:22,400
can upper bound the utility of an

383
00:18:22,400 --> 00:18:25,520
adversary that spends a total budget of

384
00:18:25,520 --> 00:18:29,840
b over some t rounds

385
00:18:30,559 --> 00:18:34,640
then we find the biggest b and t such

386
00:18:34,640 --> 00:18:37,919
that this upper bound utility u

387
00:18:37,919 --> 00:18:39,280
is positive

388
00:18:39,280 --> 00:18:41,840
this means that it's even profitable to

389
00:18:41,840 --> 00:18:44,559
spend any budget and go over over the

390
00:18:44,559 --> 00:18:47,200
majority

391
00:18:47,440 --> 00:18:51,919
and finally we use this maximal bnt

392
00:18:51,919 --> 00:18:54,880
to amplify the cut-off parameter of the

393
00:18:54,880 --> 00:18:58,000
blockchain so that consistency is always

394
00:18:58,000 --> 00:19:00,880
achieved against such rational attackers

395
00:19:00,880 --> 00:19:04,000
remember that the cutoff parameter is

396
00:19:04,000 --> 00:19:06,799
the number of recent blocks that are not

397
00:19:06,799 --> 00:19:09,360
yet immutable in the blockchain

398
00:19:09,360 --> 00:19:12,320
and for this last step we use the recent

399
00:19:12,320 --> 00:19:16,480
result from bgcar z20

400
00:19:16,480 --> 00:19:19,919
and finally we show here a graph that

401
00:19:19,919 --> 00:19:22,720
plots the price of renting hashing power

402
00:19:22,720 --> 00:19:25,520
the column on the left against the

403
00:19:25,520 --> 00:19:28,000
estimated length of the attack which is

404
00:19:28,000 --> 00:19:31,360
the biggest t such that this u of v t is

405
00:19:31,360 --> 00:19:33,440
greater than zero and it's the column on

406
00:19:33,440 --> 00:19:34,559
the right

407
00:19:34,559 --> 00:19:37,200
for reference the numbers used in this

408
00:19:37,200 --> 00:19:40,240
graph are from parameters in

409
00:19:40,240 --> 00:19:43,679
a theorem classic from february of 2021

410
00:19:43,679 --> 00:19:45,919
which is the time of writing

411
00:19:45,919 --> 00:19:48,799
and just so that our utility function

412
00:19:48,799 --> 00:19:52,080
has limited horizons i'm using t equals

413
00:19:52,080 --> 00:19:54,799
to 3 days as the maximal time interval

414
00:19:54,799 --> 00:19:57,200
where passive mining is deemed

415
00:19:57,200 --> 00:20:00,160
always profitable and actually in

416
00:20:00,160 --> 00:20:03,280
february the price of renting

417
00:20:03,280 --> 00:20:07,760
hashing power is around 0.00

418
00:20:07,760 --> 00:20:10,480
which gives the length of attack of

419
00:20:10,480 --> 00:20:12,799
around two to three days

420
00:20:12,799 --> 00:20:15,280
and this is around the order of the

421
00:20:15,280 --> 00:20:17,760
length of a recent attack on ethereum

422
00:20:17,760 --> 00:20:18,720
classic

423
00:20:18,720 --> 00:20:21,919
in august of 2020 which is about two

424
00:20:21,919 --> 00:20:24,240
days

425
00:20:24,400 --> 00:20:27,039
in case you were wondering what this

426
00:20:27,039 --> 00:20:28,880
weird dip is

427
00:20:28,880 --> 00:20:31,440
this is the point where the price of

428
00:20:31,440 --> 00:20:32,799
renting makes

429
00:20:32,799 --> 00:20:35,760
passive mining go from being profitable

430
00:20:35,760 --> 00:20:38,720
to being unprofitable and this makes

431
00:20:38,720 --> 00:20:41,600
sense since if passive mining were

432
00:20:41,600 --> 00:20:44,480
unprofitable then you can't use the

433
00:20:44,480 --> 00:20:47,679
profit of passive mining to finance an

434
00:20:47,679 --> 00:20:48,720
attack

435
00:20:48,720 --> 00:20:53,200
which leads to a much shorter attack

436
00:20:54,080 --> 00:20:57,280
so in summary we first showed why

437
00:20:57,280 --> 00:21:00,400
realistic utility functions must avoid

438
00:21:00,400 --> 00:21:03,760
the problem of unbounded incentives

439
00:21:03,760 --> 00:21:06,480
then we show that the class of utility

440
00:21:06,480 --> 00:21:09,760
functions with limited horizons

441
00:21:09,760 --> 00:21:12,080
do avoid this problem of unbounded

442
00:21:12,080 --> 00:21:15,039
incentives and can be used to analyze

443
00:21:15,039 --> 00:21:17,360
both the case where attack payoff

444
00:21:17,360 --> 00:21:20,080
security is broken and when it's

445
00:21:20,080 --> 00:21:21,280
achieved

446
00:21:21,280 --> 00:21:23,039
so what's next

447
00:21:23,039 --> 00:21:24,120
of course

448
00:21:24,120 --> 00:21:27,520
implementations and analyzing other more

449
00:21:27,520 --> 00:21:29,840
complex utility functions can be very

450
00:21:29,840 --> 00:21:32,400
interesting but perhaps of more

451
00:21:32,400 --> 00:21:35,600
theoretic interest we can also extend

452
00:21:35,600 --> 00:21:38,400
our results by following some recent

453
00:21:38,400 --> 00:21:41,200
works that analyze variable difficulty

454
00:21:41,200 --> 00:21:44,159
blockchains and adapt our results to

455
00:21:44,159 --> 00:21:47,919
this variable difficulty setting

456
00:21:48,640 --> 00:21:51,120
so that's it for the talk and here are

457
00:21:51,120 --> 00:21:53,440
some references for the papers referred

458
00:21:53,440 --> 00:21:56,919
to in this talk

459
00:21:59,919 --> 00:22:03,400
thanks for watching

