1
00:00:00,160 --> 00:00:02,960
hi everyone i am akshayra and i am going

2
00:00:02,960 --> 00:00:05,359
to talk about traceable secret sharing

3
00:00:05,359 --> 00:00:07,919
and applications this is based on joint

4
00:00:07,919 --> 00:00:12,240
work with vipul goyal and ifanson

5
00:00:12,240 --> 00:00:14,799
let's consider the following scenario

6
00:00:14,799 --> 00:00:17,279
alice has some secret data s

7
00:00:17,279 --> 00:00:19,760
and she wishes to store this data on the

8
00:00:19,760 --> 00:00:20,880
cloud

9
00:00:20,880 --> 00:00:24,320
to enhance privacy alice chooses n cloud

10
00:00:24,320 --> 00:00:26,000
service providers

11
00:00:26,000 --> 00:00:28,880
secret shares of data using a t out of n

12
00:00:28,880 --> 00:00:30,400
secret sharing scheme

13
00:00:30,400 --> 00:00:33,440
and stores the shares on the servers

14
00:00:33,440 --> 00:00:35,360
however there is an adversary who is

15
00:00:35,360 --> 00:00:37,280
interested in learning about alice's

16
00:00:37,280 --> 00:00:38,719
secret data

17
00:00:38,719 --> 00:00:40,960
and in fact the adversary is willing to

18
00:00:40,960 --> 00:00:43,120
pay the servers in order to learn this

19
00:00:43,120 --> 00:00:44,800
information

20
00:00:44,800 --> 00:00:46,879
so the adversary approaches one of the

21
00:00:46,879 --> 00:00:49,680
servers and promises to pay a certain

22
00:00:49,680 --> 00:00:53,199
amount if the server sends the share

23
00:00:53,199 --> 00:00:56,800
it received from alice to this adversary

24
00:00:56,800 --> 00:00:58,399
even though this offer is pretty

25
00:00:58,399 --> 00:00:59,520
enticing

26
00:00:59,520 --> 00:01:01,359
the server is very of the following

27
00:01:01,359 --> 00:01:02,960
possibility

28
00:01:02,960 --> 00:01:05,199
if alice somehow finds out that the

29
00:01:05,199 --> 00:01:08,400
server cheated by sending the share it

30
00:01:08,400 --> 00:01:11,280
received to an external party then alice

31
00:01:11,280 --> 00:01:13,280
could sow this server in the court of

32
00:01:13,280 --> 00:01:15,119
law

33
00:01:15,119 --> 00:01:17,600
specifically the share that alice sent

34
00:01:17,600 --> 00:01:20,000
to each of these servers could have some

35
00:01:20,000 --> 00:01:22,799
identifying information embedded inside

36
00:01:22,799 --> 00:01:25,119
and this information could help alice

37
00:01:25,119 --> 00:01:28,080
win the case against the server

38
00:01:28,080 --> 00:01:30,960
and if alice wins the case then it could

39
00:01:30,960 --> 00:01:33,040
not only result in a big loss of

40
00:01:33,040 --> 00:01:35,280
reputation for the server but it will

41
00:01:35,280 --> 00:01:37,360
also result in bankruptcy due to the

42
00:01:37,360 --> 00:01:40,880
service agreement it had with us

43
00:01:40,880 --> 00:01:43,360
so learning about the server's hesitancy

44
00:01:43,360 --> 00:01:45,280
the adversary comes up with a pretty

45
00:01:45,280 --> 00:01:47,920
clever cryptographic scheme

46
00:01:47,920 --> 00:01:49,680
so this scheme has the following

47
00:01:49,680 --> 00:01:52,880
components it has n functions f1 up to

48
00:01:52,880 --> 00:01:55,200
fn which are called as the collector

49
00:01:55,200 --> 00:01:57,759
functions as well as a reconstruction

50
00:01:57,759 --> 00:02:00,000
box rextar

51
00:02:00,000 --> 00:02:02,159
and all that the servers now have to do

52
00:02:02,159 --> 00:02:04,880
is to apply these collector functions on

53
00:02:04,880 --> 00:02:06,799
the shares

54
00:02:06,799 --> 00:02:09,360
and give it to the adversary

55
00:02:09,360 --> 00:02:11,520
and the adversary now pays the service

56
00:02:11,520 --> 00:02:13,440
with the monetary reward that it

57
00:02:13,440 --> 00:02:15,200
promised

58
00:02:15,200 --> 00:02:17,120
so these functions could be cleverly

59
00:02:17,120 --> 00:02:19,680
designed so that they could remove all

60
00:02:19,680 --> 00:02:22,000
the identifying information inside the

61
00:02:22,000 --> 00:02:22,959
shares

62
00:02:22,959 --> 00:02:24,959
leaving only the essence of the share

63
00:02:24,959 --> 00:02:26,480
impact

64
00:02:26,480 --> 00:02:28,879
and the adversary in fact promises the

65
00:02:28,879 --> 00:02:30,080
following

66
00:02:30,080 --> 00:02:32,640
so even if alice gets hold of these

67
00:02:32,640 --> 00:02:35,519
collector functions f1 up to fn as well

68
00:02:35,519 --> 00:02:37,920
as the shares that the servers send fi

69
00:02:37,920 --> 00:02:40,480
of sharing or or call this collected

70
00:02:40,480 --> 00:02:43,519
shares as well as the reconstruction box

71
00:02:43,519 --> 00:02:44,560
then

72
00:02:44,560 --> 00:02:46,879
alice will not be able to prove in the

73
00:02:46,879 --> 00:02:48,560
court of law that one of the service

74
00:02:48,560 --> 00:02:50,959
indeed cheated in other words there is

75
00:02:50,959 --> 00:02:53,440
no way that alice could trace a cheating

76
00:02:53,440 --> 00:02:55,120
server

77
00:02:55,120 --> 00:02:58,480
on examining this uh scheme closely the

78
00:02:58,480 --> 00:03:00,480
server is indeed convinced that there is

79
00:03:00,480 --> 00:03:03,200
no way for alice to implicate

80
00:03:03,200 --> 00:03:05,360
his cheating behavior

81
00:03:05,360 --> 00:03:07,519
and in fact any rational server would

82
00:03:07,519 --> 00:03:09,680
send fi of share i and collect the

83
00:03:09,680 --> 00:03:11,360
monetary reward

84
00:03:11,360 --> 00:03:13,519
and if the adversary is able to convince

85
00:03:13,519 --> 00:03:15,920
at least t of these servers to send the

86
00:03:15,920 --> 00:03:16,959
shares

87
00:03:16,959 --> 00:03:18,800
then it can learn information about the

88
00:03:18,800 --> 00:03:20,800
secrets

89
00:03:20,800 --> 00:03:23,440
so to prevent such a scenario alice

90
00:03:23,440 --> 00:03:25,360
seeks the help of the cryptographic

91
00:03:25,360 --> 00:03:26,959
community

92
00:03:26,959 --> 00:03:29,360
so the the specific question we are

93
00:03:29,360 --> 00:03:31,680
interested in is the following

94
00:03:31,680 --> 00:03:33,680
so can we construct a secret sharing

95
00:03:33,680 --> 00:03:36,640
scheme that allows alice to trace a

96
00:03:36,640 --> 00:03:38,159
cheating server

97
00:03:38,159 --> 00:03:40,720
so we are interested in not only tracing

98
00:03:40,720 --> 00:03:43,360
but also extracting an evidence against

99
00:03:43,360 --> 00:03:45,200
the stating server which could be

100
00:03:45,200 --> 00:03:47,440
examined in a court of law

101
00:03:47,440 --> 00:03:49,599
and in order to help alice with this

102
00:03:49,599 --> 00:03:52,080
task we introduce a new primitive called

103
00:03:52,080 --> 00:03:54,799
as traceable secret sharing scheme

104
00:03:54,799 --> 00:03:57,360
or tss in short

105
00:03:57,360 --> 00:03:59,680
so let me first describe the syntax of a

106
00:03:59,680 --> 00:04:01,840
traceable secret sharing

107
00:04:01,840 --> 00:04:03,680
so just like any other secret sharing

108
00:04:03,680 --> 00:04:06,159
scheme a traceable secret sharing

109
00:04:06,159 --> 00:04:08,400
consists of a sharing phase where you

110
00:04:08,400 --> 00:04:11,120
take a secret from the dealer or alice

111
00:04:11,120 --> 00:04:13,439
in this case and split it into end

112
00:04:13,439 --> 00:04:16,000
shares sh1 to shn which are sent to the

113
00:04:16,000 --> 00:04:17,279
service

114
00:04:17,279 --> 00:04:19,440
there is also a reconstruction phase

115
00:04:19,440 --> 00:04:22,160
which takes in at least 3 shares

116
00:04:22,160 --> 00:04:24,479
that was given to the servers and

117
00:04:24,479 --> 00:04:26,720
reconstructs the secrets

118
00:04:26,720 --> 00:04:29,280
for privacy we require that any of these

119
00:04:29,280 --> 00:04:31,440
t minus one shares reveal no information

120
00:04:31,440 --> 00:04:34,639
about the underlying secret

121
00:04:34,800 --> 00:04:36,560
so in addition to the sharing and the

122
00:04:36,560 --> 00:04:38,560
reconstruction phase of a secret sharing

123
00:04:38,560 --> 00:04:40,320
scheme there are two additional

124
00:04:40,320 --> 00:04:42,880
components of a traceable secret sharing

125
00:04:42,880 --> 00:04:45,120
namely there is a special algorithm

126
00:04:45,120 --> 00:04:47,280
called as the trace algorithm and there

127
00:04:47,280 --> 00:04:49,120
is another algorithm called as the judge

128
00:04:49,120 --> 00:04:50,560
algorithm

129
00:04:50,560 --> 00:04:53,120
so this trace algorithm takes in these

130
00:04:53,120 --> 00:04:56,400
collector functions f1 up to fn the set

131
00:04:56,400 --> 00:04:58,720
of collected shares fi on share i for

132
00:04:58,720 --> 00:05:01,520
some subset c which is at least t

133
00:05:01,520 --> 00:05:04,400
the reconstruction box rec star and

134
00:05:04,400 --> 00:05:07,360
outputs an identity of a cheating server

135
00:05:07,360 --> 00:05:09,840
and an evidence pi i

136
00:05:09,840 --> 00:05:12,080
and this evidence is examined by the

137
00:05:12,080 --> 00:05:14,320
judge algorithm which pronounces whether

138
00:05:14,320 --> 00:05:18,560
the ith server is guilty or not killed

139
00:05:18,560 --> 00:05:20,720
so we need a traceable secret sharing

140
00:05:20,720 --> 00:05:22,639
scheme to satisfy the following two

141
00:05:22,639 --> 00:05:25,600
properties the first property is the

142
00:05:25,600 --> 00:05:27,600
traceability requirement which states

143
00:05:27,600 --> 00:05:28,880
the following

144
00:05:28,880 --> 00:05:32,080
for any two secrets is 0 and s1

145
00:05:32,080 --> 00:05:34,720
if the reconstruction box rec star on

146
00:05:34,720 --> 00:05:36,639
input the collector shares

147
00:05:36,639 --> 00:05:38,639
can distinguish between

148
00:05:38,639 --> 00:05:40,800
the sharing of s 0 and s 1 with some

149
00:05:40,800 --> 00:05:42,960
non-negligible advantage

150
00:05:42,960 --> 00:05:45,280
then trace is required to output the

151
00:05:45,280 --> 00:05:47,840
identity of a traitor along with the

152
00:05:47,840 --> 00:05:50,639
valid evidence that is accepted by the

153
00:05:50,639 --> 00:05:52,320
algorithm with non-negligible

154
00:05:52,320 --> 00:05:53,600
probability

155
00:05:53,600 --> 00:05:55,680
so we here we require a very big

156
00:05:55,680 --> 00:05:58,080
property on the reconstruction box all

157
00:05:58,080 --> 00:06:00,000
that it required is to distinguish

158
00:06:00,000 --> 00:06:02,160
between shares of two secrets with some

159
00:06:02,160 --> 00:06:04,400
non negligible advantage and even in

160
00:06:04,400 --> 00:06:06,080
this case the trace should be able to

161
00:06:06,080 --> 00:06:08,240
output the identity of a traitor along

162
00:06:08,240 --> 00:06:10,560
with some valid evidence

163
00:06:10,560 --> 00:06:12,199
the second property is the

164
00:06:12,199 --> 00:06:14,639
non-imputability property which roughly

165
00:06:14,639 --> 00:06:16,400
protects and harness server from a

166
00:06:16,400 --> 00:06:18,560
malicious dealer or else

167
00:06:18,560 --> 00:06:21,440
so this requires that any malicious

168
00:06:21,440 --> 00:06:24,400
dealer cannot provide a valid evidence

169
00:06:24,400 --> 00:06:26,639
against a harness server and this should

170
00:06:26,639 --> 00:06:29,039
hold even if the dealer colludes with

171
00:06:29,039 --> 00:06:31,840
every other server

172
00:06:31,840 --> 00:06:33,600
okay so these are the two properties

173
00:06:33,600 --> 00:06:35,600
that we require a traceable secret

174
00:06:35,600 --> 00:06:38,240
sharing to satisfy

175
00:06:38,240 --> 00:06:41,280
so in this work we formally define a

176
00:06:41,280 --> 00:06:44,160
traceable secret sharing scheme

177
00:06:44,160 --> 00:06:46,639
so unlike the related notion of traitor

178
00:06:46,639 --> 00:06:49,680
tracing in broadcast encryption scheme

179
00:06:49,680 --> 00:06:51,840
traceable secret sharing is not revealed

180
00:06:51,840 --> 00:06:53,759
to construct even if we ignore the

181
00:06:53,759 --> 00:06:55,599
efficiency aspects

182
00:06:55,599 --> 00:06:57,599
recall that a traitor tracing scheme can

183
00:06:57,599 --> 00:06:59,680
be trivially constructed from any public

184
00:06:59,680 --> 00:07:01,440
key encryption if you allow the public

185
00:07:01,440 --> 00:07:03,280
keys and the ciphertext to grow with the

186
00:07:03,280 --> 00:07:04,960
number of users

187
00:07:04,960 --> 00:07:07,039
however this is not the case for

188
00:07:07,039 --> 00:07:10,000
traceable secret sharing scheme

189
00:07:10,000 --> 00:07:11,520
and a main contribution is a

190
00:07:11,520 --> 00:07:13,199
construction of a traceable secret

191
00:07:13,199 --> 00:07:14,960
sharing assuming the existence of a

192
00:07:14,960 --> 00:07:18,960
secure multi-party computation protocol

193
00:07:18,960 --> 00:07:21,280
and we also consider a couple of

194
00:07:21,280 --> 00:07:23,840
extensions to this notion

195
00:07:23,840 --> 00:07:25,919
so the first extension we consider is

196
00:07:25,919 --> 00:07:29,039
tracing more than one traitor

197
00:07:29,039 --> 00:07:29,759
and

198
00:07:29,759 --> 00:07:32,240
recall that it's not possible to uh

199
00:07:32,240 --> 00:07:34,880
trace more than t tracer traitors

200
00:07:34,880 --> 00:07:37,199
because a reconstruction box could just

201
00:07:37,199 --> 00:07:39,280
ignore the other shares and concentrate

202
00:07:39,280 --> 00:07:41,599
on some subset of t-shirts

203
00:07:41,599 --> 00:07:44,479
so here we can do almost optimally and

204
00:07:44,479 --> 00:07:48,000
can trace up to t minus one traitors

205
00:07:48,000 --> 00:07:50,879
we also consider a scenario where

206
00:07:50,879 --> 00:07:53,039
servers could collude with each other

207
00:07:53,039 --> 00:07:55,440
before sending the collected shares to

208
00:07:55,440 --> 00:07:56,479
the

209
00:07:56,479 --> 00:07:59,520
to the adversary and here if we allow

210
00:07:59,520 --> 00:08:02,000
more than t server collisions then

211
00:08:02,000 --> 00:08:04,400
there is no hope of tracing because the

212
00:08:04,400 --> 00:08:06,160
uh the servers could reconstruct the

213
00:08:06,160 --> 00:08:09,199
secret and send it to that person

214
00:08:09,199 --> 00:08:10,639
so here we

215
00:08:10,639 --> 00:08:12,560
do the best possible thing where we

216
00:08:12,560 --> 00:08:14,240
allow up to t minus one server

217
00:08:14,240 --> 00:08:16,879
pollutions

218
00:08:17,440 --> 00:08:19,520
we also consider an application of

219
00:08:19,520 --> 00:08:21,680
traceable secret sharing to traceable

220
00:08:21,680 --> 00:08:24,479
delegation of computation

221
00:08:24,479 --> 00:08:26,720
so here we give a protocol that works in

222
00:08:26,720 --> 00:08:28,960
the offline online setting so the

223
00:08:28,960 --> 00:08:30,879
offline setting grows with the circuit

224
00:08:30,879 --> 00:08:32,479
size of the function that we want to

225
00:08:32,479 --> 00:08:34,880
delegate and the online setting online

226
00:08:34,880 --> 00:08:37,440
cost is pretty efficient wherein the

227
00:08:37,440 --> 00:08:40,399
cost grows only with the uh the input

228
00:08:40,399 --> 00:08:42,159
and the output

229
00:08:42,159 --> 00:08:43,919
in the rest of the talk i'll mainly

230
00:08:43,919 --> 00:08:45,839
focus on our construction of traceable

231
00:08:45,839 --> 00:08:48,320
secret sharing in the minimal setting

232
00:08:48,320 --> 00:08:50,800
where there are no server collusions and

233
00:08:50,800 --> 00:08:52,880
we are required to trace only a single

234
00:08:52,880 --> 00:08:54,480
trader

235
00:08:54,480 --> 00:08:57,200
so before we move on to our construction

236
00:08:57,200 --> 00:08:59,519
let me explain the key challenges

237
00:08:59,519 --> 00:09:01,680
involved in constructing a traceable

238
00:09:01,680 --> 00:09:03,519
secret sharing scheme

239
00:09:03,519 --> 00:09:05,600
so let's start with the basic question

240
00:09:05,600 --> 00:09:07,680
on whether swami's secret sharing is

241
00:09:07,680 --> 00:09:10,399
already a traceable secret share

242
00:09:10,399 --> 00:09:12,720
unfortunately xiaomi's secret sharing

243
00:09:12,720 --> 00:09:15,120
does not satisfy the non-imputability

244
00:09:15,120 --> 00:09:16,399
property

245
00:09:16,399 --> 00:09:18,800
so this is because the dealer knows

246
00:09:18,800 --> 00:09:20,959
all the shares that are sent to each of

247
00:09:20,959 --> 00:09:23,839
the servers and hence it is easy for the

248
00:09:23,839 --> 00:09:26,160
dealer to accuse an honest server of

249
00:09:26,160 --> 00:09:28,320
cheating

250
00:09:28,320 --> 00:09:30,640
so to mitigate this we consider the

251
00:09:30,640 --> 00:09:33,279
following natural attempt wherein we run

252
00:09:33,279 --> 00:09:35,519
a multi-party computation protocol

253
00:09:35,519 --> 00:09:38,320
between the servers and the dealer

254
00:09:38,320 --> 00:09:39,440
so this

255
00:09:39,440 --> 00:09:41,680
functionality which is computed by via

256
00:09:41,680 --> 00:09:44,160
the mpc protocol takes in the secret s

257
00:09:44,160 --> 00:09:47,120
from the dealer generates the share

258
00:09:47,120 --> 00:09:50,399
and sends the shares to the service

259
00:09:50,399 --> 00:09:53,000
so this can be shown to satisfy

260
00:09:53,000 --> 00:09:55,519
non-imputability via the security of the

261
00:09:55,519 --> 00:09:58,320
mpc protocol but unfortunately there is

262
00:09:58,320 --> 00:10:00,720
no way that we could trace a cheating

263
00:10:00,720 --> 00:10:02,480
server because the dealer does not have

264
00:10:02,480 --> 00:10:06,480
any information available with it

265
00:10:06,720 --> 00:10:08,160
so the key

266
00:10:08,160 --> 00:10:10,399
idea behind the construction is the

267
00:10:10,399 --> 00:10:11,600
following

268
00:10:11,600 --> 00:10:14,399
in order to achieve traceability we must

269
00:10:14,399 --> 00:10:16,560
ensure that the dealer has some secret

270
00:10:16,560 --> 00:10:18,640
information which is unknown to all the

271
00:10:18,640 --> 00:10:19,920
servers

272
00:10:19,920 --> 00:10:22,720
and in order to achieve non-imputability

273
00:10:22,720 --> 00:10:24,880
you must ensure that each server has

274
00:10:24,880 --> 00:10:26,959
some secret information that is unknown

275
00:10:26,959 --> 00:10:28,800
to the dealer

276
00:10:28,800 --> 00:10:31,120
so the key challenge that we face here

277
00:10:31,120 --> 00:10:33,680
is that how to balance this information

278
00:10:33,680 --> 00:10:36,160
available to the dealer and available to

279
00:10:36,160 --> 00:10:38,959
the servers and so that we can satisfy

280
00:10:38,959 --> 00:10:43,319
both traceability and non-imputability

281
00:10:43,360 --> 00:10:46,560
so this brings us to our construction

282
00:10:46,560 --> 00:10:48,720
so our construction also follows the

283
00:10:48,720 --> 00:10:50,560
template that we discussed before

284
00:10:50,560 --> 00:10:53,200
wherein we run an npc protocol between

285
00:10:53,200 --> 00:10:55,680
the dealer and the servers to generate

286
00:10:55,680 --> 00:10:57,839
the secret shares

287
00:10:57,839 --> 00:10:58,959
however

288
00:10:58,959 --> 00:11:02,160
the key idea behind the construction is

289
00:11:02,160 --> 00:11:04,399
carefully designing the function that is

290
00:11:04,399 --> 00:11:07,760
computed by the mpc protocol so that we

291
00:11:07,760 --> 00:11:10,200
can achieve both traceability and

292
00:11:10,200 --> 00:11:11,839
non-imputability

293
00:11:11,839 --> 00:11:13,760
so let us consider the function that is

294
00:11:13,760 --> 00:11:18,160
being computed by the mpc protocol

295
00:11:18,399 --> 00:11:21,760
so as a first step the mpc functionality

296
00:11:21,760 --> 00:11:24,000
takes in the secret s from the dealer

297
00:11:24,000 --> 00:11:26,959
and generates the shame sharing ss1 up

298
00:11:26,959 --> 00:11:28,320
to ssl

299
00:11:28,320 --> 00:11:30,720
so this is just a t out of n xiaomi

300
00:11:30,720 --> 00:11:33,120
secret sharing of the secret

301
00:11:33,120 --> 00:11:35,120
let us assume that each of these shares

302
00:11:35,120 --> 00:11:38,240
are lambda bits law

303
00:11:38,240 --> 00:11:40,000
the next step

304
00:11:40,000 --> 00:11:41,519
done by this function

305
00:11:41,519 --> 00:11:42,959
is

306
00:11:42,959 --> 00:11:46,720
the following for each j in the set 1 to

307
00:11:46,720 --> 00:11:47,760
lambda

308
00:11:47,760 --> 00:11:50,880
it shows us a uniform random string r j

309
00:11:50,880 --> 00:11:54,399
which is lambda bits law

310
00:11:54,480 --> 00:11:57,440
now the next step is the following for

311
00:11:57,440 --> 00:12:00,800
each party i you choose

312
00:12:00,800 --> 00:12:04,480
ah as uniform string lij from

313
00:12:04,480 --> 00:12:07,760
the set of lambda with strings such that

314
00:12:07,760 --> 00:12:11,200
the inner product of lij with this rj is

315
00:12:11,200 --> 00:12:14,160
the jth bit of the shammy shell of this

316
00:12:14,160 --> 00:12:15,600
part

317
00:12:15,600 --> 00:12:18,000
so specifically

318
00:12:18,000 --> 00:12:21,600
for the first party we choose a random

319
00:12:21,600 --> 00:12:24,480
string l i j l one j such that the inner

320
00:12:24,480 --> 00:12:27,839
product of l one j with r j is the j th

321
00:12:27,839 --> 00:12:30,639
width of the first summation

322
00:12:30,639 --> 00:12:32,800
similarly for the second party we choose

323
00:12:32,800 --> 00:12:35,519
a another random string l two j such

324
00:12:35,519 --> 00:12:38,399
that the inner product of l two with rj

325
00:12:38,399 --> 00:12:40,639
is the jth

326
00:12:40,639 --> 00:12:44,079
bit of the second shammyshare and so on

327
00:12:44,079 --> 00:12:47,519
so once we choose all these

328
00:12:47,519 --> 00:12:50,399
liks the next step that is done by the

329
00:12:50,399 --> 00:12:53,360
functionality is to take this r j for

330
00:12:53,360 --> 00:12:56,800
each j and sacred share it using swami

331
00:12:56,800 --> 00:12:59,760
secret sharing to generate inches

332
00:12:59,760 --> 00:13:03,279
and the share of a party i is the set of

333
00:13:03,279 --> 00:13:06,800
all lijs and rijs for each j in one to

334
00:13:06,800 --> 00:13:07,760
lambda

335
00:13:07,760 --> 00:13:09,760
so the share of the first party is the

336
00:13:09,760 --> 00:13:12,720
set of all l one j's and r one j's and

337
00:13:12,720 --> 00:13:15,120
similarly the share of the nth part t is

338
00:13:15,120 --> 00:13:18,839
the set of all l and js and

339
00:13:18,839 --> 00:13:21,920
rngs okay so now what is the secret that

340
00:13:21,920 --> 00:13:23,519
is available to the dealer which is

341
00:13:23,519 --> 00:13:26,240
output by the npc functionality

342
00:13:26,240 --> 00:13:28,000
the dls secrets consists of the

343
00:13:28,000 --> 00:13:29,279
following

344
00:13:29,279 --> 00:13:32,399
so it consists of the set of all lijs

345
00:13:32,399 --> 00:13:35,519
but not in the clear but as a image of a

346
00:13:35,519 --> 00:13:39,600
one-way function applied on these lights

347
00:13:39,600 --> 00:13:42,160
it also consists of the xiaomi shares

348
00:13:42,160 --> 00:13:45,760
ss1 up to ssl and it also consists of

349
00:13:45,760 --> 00:13:49,839
the the set r i j for each i in 1 to n

350
00:13:49,839 --> 00:13:52,240
and for e j and 1 to lambda

351
00:13:52,240 --> 00:13:55,040
so these are the dealer secrets

352
00:13:55,040 --> 00:13:58,000
and what is the judge algorithm

353
00:13:58,000 --> 00:14:00,560
the judge algorithm takes in some proof

354
00:14:00,560 --> 00:14:03,680
pi i and an identity of a cheating

355
00:14:03,680 --> 00:14:06,560
server and it checks the following it

356
00:14:06,560 --> 00:14:08,720
checks whether there exists some j in

357
00:14:08,720 --> 00:14:11,440
the set 1 to lambda such that the one

358
00:14:11,440 --> 00:14:13,920
way function applied on pi i

359
00:14:13,920 --> 00:14:15,920
is equal to the one one-way function on

360
00:14:15,920 --> 00:14:17,360
lij which is

361
00:14:17,360 --> 00:14:21,040
available as part of the dealer secret

362
00:14:21,040 --> 00:14:24,480
so essentially the the dealer has to

363
00:14:24,480 --> 00:14:27,279
invert this one-way function in order to

364
00:14:27,279 --> 00:14:29,760
prove that a server has cheated

365
00:14:29,760 --> 00:14:32,079
and what is the secret that is available

366
00:14:32,079 --> 00:14:35,440
with the servers it is these lijs which

367
00:14:35,440 --> 00:14:36,160
are

368
00:14:36,160 --> 00:14:39,839
the secrets available with the server

369
00:14:39,920 --> 00:14:42,959
okay so given this construction let's

370
00:14:42,959 --> 00:14:45,560
see why it satisfies uh the

371
00:14:45,560 --> 00:14:47,760
non-imputability and the traceability

372
00:14:47,760 --> 00:14:49,279
properties and let's start with the

373
00:14:49,279 --> 00:14:51,600
non-imputability property

374
00:14:51,600 --> 00:14:54,320
so recall that in order to

375
00:14:54,320 --> 00:14:57,120
prove that a server had cheated the

376
00:14:57,120 --> 00:15:00,000
dealer has to produce a pre-image of

377
00:15:00,000 --> 00:15:02,160
this one-way function

378
00:15:02,160 --> 00:15:04,399
and from the security of the multi-party

379
00:15:04,399 --> 00:15:06,480
computation we can ensure that the only

380
00:15:06,480 --> 00:15:08,399
information that the dealer

381
00:15:08,399 --> 00:15:10,560
gets about the server secrets are these

382
00:15:10,560 --> 00:15:12,240
one-way function applied on the server

383
00:15:12,240 --> 00:15:14,320
secrets which are these likes

384
00:15:14,320 --> 00:15:16,320
so in order to implicate an honest

385
00:15:16,320 --> 00:15:19,279
server ah the dealer has to invert this

386
00:15:19,279 --> 00:15:21,320
one-way function and the

387
00:15:21,320 --> 00:15:23,360
non-imputability just follows from the

388
00:15:23,360 --> 00:15:27,360
one mainness of ows

389
00:15:27,360 --> 00:15:29,600
so the more interesting property is the

390
00:15:29,600 --> 00:15:31,519
traceability

391
00:15:31,519 --> 00:15:32,560
and

392
00:15:32,560 --> 00:15:34,000
recall that

393
00:15:34,000 --> 00:15:36,320
for tracing we have access to a

394
00:15:36,320 --> 00:15:39,279
reconstruction box rickstar and the

395
00:15:39,279 --> 00:15:41,040
guarantee that is satisfied by the

396
00:15:41,040 --> 00:15:42,720
rickstar is that

397
00:15:42,720 --> 00:15:44,880
given the collected shares of some

398
00:15:44,880 --> 00:15:47,600
secret s0 and the collector shares of

399
00:15:47,600 --> 00:15:50,639
some secret s1 this reconstruction box

400
00:15:50,639 --> 00:15:52,399
can distinguish between these two

401
00:15:52,399 --> 00:15:54,160
secrets with some non-negligible

402
00:15:54,160 --> 00:15:55,360
advantage

403
00:15:55,360 --> 00:15:57,759
now we need to use this reconstruction

404
00:15:57,759 --> 00:16:00,480
box and extract some evidence against a

405
00:16:00,480 --> 00:16:02,240
cheating circuit

406
00:16:02,240 --> 00:16:04,160
so in order to do this

407
00:16:04,160 --> 00:16:07,199
we actually define a sequence of n minus

408
00:16:07,199 --> 00:16:09,680
1 hybrids between the collected shares

409
00:16:09,680 --> 00:16:13,279
of 0 and the collected shares of s1

410
00:16:13,279 --> 00:16:16,000
so specifically the ith hybrid in the

411
00:16:16,000 --> 00:16:18,639
sequence is defined as follows

412
00:16:18,639 --> 00:16:22,480
we fix the ith share and fi on share i

413
00:16:22,480 --> 00:16:25,040
which is the the collected share

414
00:16:25,040 --> 00:16:28,160
and we sample the other shares in a way

415
00:16:28,160 --> 00:16:32,639
that sh1 to shi are the first eye shares

416
00:16:32,639 --> 00:16:36,480
of a secret sharing of the secret s1 and

417
00:16:36,480 --> 00:16:40,160
we sample sh i plus 1 to shn in such a

418
00:16:40,160 --> 00:16:42,480
way that these form

419
00:16:42,480 --> 00:16:45,199
the last n minus 1 shares of a secret

420
00:16:45,199 --> 00:16:46,959
sharing of s 0.

421
00:16:46,959 --> 00:16:50,079
so once we sample all these shares we

422
00:16:50,079 --> 00:16:52,320
apply the collector functions on these

423
00:16:52,320 --> 00:16:54,639
shares and run the reconstruction box on

424
00:16:54,639 --> 00:16:57,440
these collected ships

425
00:16:57,440 --> 00:16:59,279
okay so note that

426
00:16:59,279 --> 00:17:02,560
height 0 according to this definition is

427
00:17:02,560 --> 00:17:05,359
identically distributed to a collected

428
00:17:05,359 --> 00:17:07,599
shares of the secret s0

429
00:17:07,599 --> 00:17:10,720
similarly height n in the sequence is

430
00:17:10,720 --> 00:17:13,119
distributed identically to the collector

431
00:17:13,119 --> 00:17:15,280
shares the secret s1

432
00:17:15,280 --> 00:17:18,480
so via a standard hybrid argument there

433
00:17:18,480 --> 00:17:21,119
exists two intermediate hybrids in the

434
00:17:21,119 --> 00:17:23,839
sequence such that the distinct such

435
00:17:23,839 --> 00:17:25,599
that the reconstruction box can

436
00:17:25,599 --> 00:17:27,439
distinguish between these two hybrids

437
00:17:27,439 --> 00:17:30,640
with some non-negligible advantage

438
00:17:30,640 --> 00:17:33,280
so once we find such a hybrid

439
00:17:33,280 --> 00:17:35,840
hybrid pair then we can immediately

440
00:17:35,840 --> 00:17:39,280
conclude that server i is the trader

441
00:17:39,280 --> 00:17:41,840
why because if server high hadn't

442
00:17:41,840 --> 00:17:43,840
submitted its share then these two

443
00:17:43,840 --> 00:17:46,080
hybrids are identically distributed

444
00:17:46,080 --> 00:17:48,400
however since the reconstruction box can

445
00:17:48,400 --> 00:17:50,160
distinguish between these two hybrids

446
00:17:50,160 --> 00:17:52,480
with some non-negligible advantage it

447
00:17:52,480 --> 00:17:54,640
now follows that the server high is the

448
00:17:54,640 --> 00:17:56,320
trader

449
00:17:56,320 --> 00:17:58,240
so for those who are familiar with the

450
00:17:58,240 --> 00:18:01,039
trade traitor tracing literature this is

451
00:18:01,039 --> 00:18:03,760
actually pretty similar to the concept

452
00:18:03,760 --> 00:18:06,000
of private linear broadcast encryption

453
00:18:06,000 --> 00:18:08,160
that is used as a building block towards

454
00:18:08,160 --> 00:18:11,520
constructing freighter tracing schemes

455
00:18:11,520 --> 00:18:13,600
however for a traceable secret sharing

456
00:18:13,600 --> 00:18:16,160
it's not only sufficient to identify a

457
00:18:16,160 --> 00:18:18,880
cheating server we must also extract an

458
00:18:18,880 --> 00:18:21,039
evidence that is accepted by the judge

459
00:18:21,039 --> 00:18:22,400
algorithm

460
00:18:22,400 --> 00:18:25,360
so for this purpose we do the following

461
00:18:25,360 --> 00:18:27,600
so we consider these two hybrids hive i

462
00:18:27,600 --> 00:18:29,840
minus 1 and high by

463
00:18:29,840 --> 00:18:31,840
which can be distinguished by the

464
00:18:31,840 --> 00:18:33,440
reconstruction box with some non

465
00:18:33,440 --> 00:18:36,000
negligible advantage

466
00:18:36,000 --> 00:18:39,039
and we consider a sequence of lambda

467
00:18:39,039 --> 00:18:41,760
minus 1 intermediate hybrids

468
00:18:41,760 --> 00:18:44,320
between these two distributions

469
00:18:44,320 --> 00:18:46,720
specifically in each of these

470
00:18:46,720 --> 00:18:49,919
intermediate hybrids we change the ith

471
00:18:49,919 --> 00:18:54,080
share from a share of the secret s0 to a

472
00:18:54,080 --> 00:18:57,039
share of secret s1

473
00:18:57,039 --> 00:19:00,320
okay so we do this one bit adapter

474
00:19:00,320 --> 00:19:03,200
again via a standard hybrid argument we

475
00:19:03,200 --> 00:19:06,000
conclude that there exists two hybrids

476
00:19:06,000 --> 00:19:08,480
intermediate hybrids in the sequence i

477
00:19:08,480 --> 00:19:11,520
minus one comma j minus 1 and

478
00:19:11,520 --> 00:19:13,919
i minus 1 comma j that can be

479
00:19:13,919 --> 00:19:16,400
distinguished by this reconstruction box

480
00:19:16,400 --> 00:19:19,120
with some non negligible advantage

481
00:19:19,120 --> 00:19:21,679
so once we find these two hybrids we do

482
00:19:21,679 --> 00:19:23,039
the following

483
00:19:23,039 --> 00:19:25,440
so we take this reconstruction box that

484
00:19:25,440 --> 00:19:26,960
can distinguish between these two

485
00:19:26,960 --> 00:19:29,600
hybrids with non-negligible advantage

486
00:19:29,600 --> 00:19:32,720
and use this box to actually

487
00:19:32,720 --> 00:19:35,520
predict the inner product of lij and

488
00:19:35,520 --> 00:19:39,440
some rj with probability that is

489
00:19:39,440 --> 00:19:41,600
greater than half plus some

490
00:19:41,600 --> 00:19:45,520
non-negligible uh probability

491
00:19:45,520 --> 00:19:48,400
so once we construct such a predictor of

492
00:19:48,400 --> 00:19:50,720
inner product of l i j with a uniformly

493
00:19:50,720 --> 00:19:52,480
chosen rj

494
00:19:52,480 --> 00:19:55,360
we can use the goldrich levin decoder to

495
00:19:55,360 --> 00:19:59,120
extract the evidence lig

496
00:19:59,520 --> 00:20:01,840
now this evidence lij

497
00:20:01,840 --> 00:20:04,159
can be given to the judge algorithm and

498
00:20:04,159 --> 00:20:07,039
this will be accepted so this is the

499
00:20:07,039 --> 00:20:10,080
main idea behind extracting the evidence

500
00:20:10,080 --> 00:20:12,640
using the reconstruction box of course i

501
00:20:12,640 --> 00:20:14,880
have swept a lot of details under the

502
00:20:14,880 --> 00:20:17,919
rug and i encourage you to look into the

503
00:20:17,919 --> 00:20:21,200
paper for all the details

504
00:20:21,200 --> 00:20:23,280
so to conclude we

505
00:20:23,280 --> 00:20:25,440
defined a notion called as traceable

506
00:20:25,440 --> 00:20:27,280
secret sharing and provided a

507
00:20:27,280 --> 00:20:29,200
construction using any secure

508
00:20:29,200 --> 00:20:32,000
multi-party computation protocol we also

509
00:20:32,000 --> 00:20:34,480
considered extensions to tracing

510
00:20:34,480 --> 00:20:37,280
multiple traders and also considered

511
00:20:37,280 --> 00:20:39,440
collusion between the servers and i

512
00:20:39,440 --> 00:20:41,440
would encourage you to look into the

513
00:20:41,440 --> 00:20:44,559
paper for these extensions

514
00:20:44,559 --> 00:20:47,360
so we also provided an application to

515
00:20:47,360 --> 00:20:49,520
constructing a traceable delegation of

516
00:20:49,520 --> 00:20:51,360
computation in the offline online

517
00:20:51,360 --> 00:20:53,919
setting again you can refer the paper

518
00:20:53,919 --> 00:20:55,520
for the details

519
00:20:55,520 --> 00:20:57,200
and there are many interesting open

520
00:20:57,200 --> 00:20:59,039
questions from our work

521
00:20:59,039 --> 00:21:01,280
so the the main open question is

522
00:21:01,280 --> 00:21:04,400
extension to stronger adversarial models

523
00:21:04,400 --> 00:21:06,640
so here we considered a setting where

524
00:21:06,640 --> 00:21:08,880
the adversary provides some collector

525
00:21:08,880 --> 00:21:11,200
functions and the servers have to apply

526
00:21:11,200 --> 00:21:12,720
these functions on the shares and send

527
00:21:12,720 --> 00:21:14,400
it to the adversary

528
00:21:14,400 --> 00:21:16,320
but it is possible to consider stronger

529
00:21:16,320 --> 00:21:18,559
adversarial settings where the the

530
00:21:18,559 --> 00:21:20,880
servers and the adversary could

531
00:21:20,880 --> 00:21:22,880
get involved in a

532
00:21:22,880 --> 00:21:25,520
multi-party protocol and which provides

533
00:21:25,520 --> 00:21:27,520
information to that person

534
00:21:27,520 --> 00:21:29,440
so our construction does not extend to

535
00:21:29,440 --> 00:21:31,280
these settings and it is interesting to

536
00:21:31,280 --> 00:21:32,960
see if there are construction that can

537
00:21:32,960 --> 00:21:35,679
be shown to be traceable even against

538
00:21:35,679 --> 00:21:40,000
such stronger adversarial models

539
00:21:40,000 --> 00:21:42,000
there is also this very interesting

540
00:21:42,000 --> 00:21:44,080
question of extending a traceable

541
00:21:44,080 --> 00:21:46,000
delegation to constructing traceable

542
00:21:46,000 --> 00:21:49,840
multi-party computation protocols

543
00:21:50,159 --> 00:21:52,400
and finally are there other applications

544
00:21:52,400 --> 00:21:54,320
of traceable secret sharing schemes and

545
00:21:54,320 --> 00:21:56,400
how does it connect to other

546
00:21:56,400 --> 00:21:58,880
primitives in cryptography

547
00:21:58,880 --> 00:22:01,200
and that's it thank you for your

548
00:22:01,200 --> 00:22:02,880
attention and you can find the full

549
00:22:02,880 --> 00:22:06,480
version of our paper on

