1
00:00:01,280 --> 00:00:03,840
hi welcome to this extended talk on

2
00:00:03,840 --> 00:00:05,759
composition with knowledge assumptions

3
00:00:05,759 --> 00:00:07,919
i'm thomas kerber and this is joint work

4
00:00:07,919 --> 00:00:09,920
with my co-authors and supervisors

5
00:00:09,920 --> 00:00:12,960
aguilos quiries and colerice it's done

6
00:00:12,960 --> 00:00:16,880
at the university of edinburgh at iohk

7
00:00:16,880 --> 00:00:18,080
i want to start a bit with our

8
00:00:18,080 --> 00:00:20,160
motivation and

9
00:00:20,160 --> 00:00:22,080
if you've dealt with both knowledge

10
00:00:22,080 --> 00:00:24,240
assumptions and compositional systems

11
00:00:24,240 --> 00:00:26,400
before then you're probably already

12
00:00:26,400 --> 00:00:27,920
familiar with this

13
00:00:27,920 --> 00:00:31,279
um but

14
00:00:31,279 --> 00:00:33,360
at their core these are both two

15
00:00:33,360 --> 00:00:36,480
very very useful uh concepts and

16
00:00:36,480 --> 00:00:38,559
phenology assumptions they're useful

17
00:00:38,559 --> 00:00:40,480
because they often give succinctness

18
00:00:40,480 --> 00:00:43,760
where it would otherwise be impossible

19
00:00:43,760 --> 00:00:45,840
core idea of knowledge assumptions in

20
00:00:45,840 --> 00:00:49,200
many ways is that a short message can

21
00:00:49,200 --> 00:00:52,800
imply knowledge of something much larger

22
00:00:52,800 --> 00:00:54,079
and this is something which is quite

23
00:00:54,079 --> 00:00:56,559
hard to

24
00:00:56,719 --> 00:00:58,320
quite hard to do if you're not making

25
00:00:58,320 --> 00:01:00,239
assumptions about it

26
00:01:00,239 --> 00:01:01,440
and in

27
00:01:01,440 --> 00:01:03,600
compositional systems

28
00:01:03,600 --> 00:01:04,479
you

29
00:01:04,479 --> 00:01:07,439
have a tendency to to lose

30
00:01:07,439 --> 00:01:09,840
sight of the bigger picture of how

31
00:01:09,840 --> 00:01:11,680
cryptographic primitives actually end up

32
00:01:11,680 --> 00:01:14,159
being used and it can be

33
00:01:14,159 --> 00:01:16,400
a large problem if they're used in ways

34
00:01:16,400 --> 00:01:18,720
that are not inherently secure

35
00:01:18,720 --> 00:01:20,400
especially if they're interacting

36
00:01:20,400 --> 00:01:21,759
perhaps negatively with other

37
00:01:21,759 --> 00:01:24,000
cryptographic primitives somewhere else

38
00:01:24,000 --> 00:01:25,920
in the system uh perhaps there are

39
00:01:25,920 --> 00:01:28,159
shared secrets or shared messages that

40
00:01:28,159 --> 00:01:29,840
are being

41
00:01:29,840 --> 00:01:32,079
given to both systems and there are

42
00:01:32,079 --> 00:01:33,680
correlations that can be drawn between

43
00:01:33,680 --> 00:01:35,520
these this is something which you want

44
00:01:35,520 --> 00:01:37,360
to avoid and compositional security

45
00:01:37,360 --> 00:01:39,200
gives you a very nice way of reasoning

46
00:01:39,200 --> 00:01:40,560
about

47
00:01:40,560 --> 00:01:41,520
why

48
00:01:41,520 --> 00:01:43,759
this does not happen in

49
00:01:43,759 --> 00:01:46,079
certain constructions

50
00:01:46,079 --> 00:01:48,079
now unfortunately the two tend to to

51
00:01:48,079 --> 00:01:50,479
conflict and we've seen in practice that

52
00:01:50,479 --> 00:01:52,079
this is because of

53
00:01:52,079 --> 00:01:56,240
the reliance on uh white box extraction

54
00:01:56,240 --> 00:01:57,920
and knowledge assumptions for the most

55
00:01:57,920 --> 00:02:00,240
part and i'll get into that in a few

56
00:02:00,240 --> 00:02:01,680
slides

57
00:02:01,680 --> 00:02:03,360
but

58
00:02:03,360 --> 00:02:05,200
essentially is especially when we've

59
00:02:05,200 --> 00:02:07,759
looked at this through the lens of how

60
00:02:07,759 --> 00:02:10,399
our zk snarks modeled which was our

61
00:02:10,399 --> 00:02:13,360
primary motivation for this work

62
00:02:13,360 --> 00:02:16,640
we ran into two approaches and first was

63
00:02:16,640 --> 00:02:17,840
um

64
00:02:17,840 --> 00:02:20,959
well let's make a snark protocol more

65
00:02:20,959 --> 00:02:22,480
complex and

66
00:02:22,480 --> 00:02:25,120
no longer as succinct in order to make

67
00:02:25,120 --> 00:02:27,520
it usable in a composable setting so

68
00:02:27,520 --> 00:02:30,080
what's done here is often the witness is

69
00:02:30,080 --> 00:02:32,959
encrypted as part of the snark proof and

70
00:02:32,959 --> 00:02:33,920
this

71
00:02:33,920 --> 00:02:36,080
makes the proof both more expensive

72
00:02:36,080 --> 00:02:37,680
because you now need to prove correct

73
00:02:37,680 --> 00:02:38,959
encryption

74
00:02:38,959 --> 00:02:40,720
and also it makes it

75
00:02:40,720 --> 00:02:42,800
longer and not succinct anymore because

76
00:02:42,800 --> 00:02:46,800
it contains the witness by definition

77
00:02:47,200 --> 00:02:50,000
the other direction we've seen is an

78
00:02:50,000 --> 00:02:53,760
approach of we have composition up to

79
00:02:53,760 --> 00:02:56,480
non-attractive zero knowledge and assume

80
00:02:56,480 --> 00:02:59,360
that snarks do that securely and this is

81
00:02:59,360 --> 00:03:01,920
something that many works take and some

82
00:03:01,920 --> 00:03:03,920
do this explicitly and say we are going

83
00:03:03,920 --> 00:03:06,319
to instantiate swoop snark

84
00:03:06,319 --> 00:03:07,680
um

85
00:03:07,680 --> 00:03:09,599
and we know that that doesn't fit into

86
00:03:09,599 --> 00:03:11,120
compositional frameworks but we're going

87
00:03:11,120 --> 00:03:13,680
to do it anyway this is obviously not

88
00:03:13,680 --> 00:03:15,599
satisfactory there's a gap in the

89
00:03:15,599 --> 00:03:17,840
security analysis there and it's a gap

90
00:03:17,840 --> 00:03:20,720
that should be filled

91
00:03:20,720 --> 00:03:23,120
so to start with i'm going to

92
00:03:23,120 --> 00:03:25,519
do a very brief recap of both

93
00:03:25,519 --> 00:03:27,840
compositional security and of knowledge

94
00:03:27,840 --> 00:03:29,440
assumptions to make sure that we're all

95
00:03:29,440 --> 00:03:31,040
on the same page

96
00:03:31,040 --> 00:03:33,200
now compositional security

97
00:03:33,200 --> 00:03:34,080
uh

98
00:03:34,080 --> 00:03:36,319
generally tends to be a

99
00:03:36,319 --> 00:03:39,040
fairly simple premise which is you have

100
00:03:39,040 --> 00:03:41,040
some uh protocol

101
00:03:41,040 --> 00:03:42,640
of interacting

102
00:03:42,640 --> 00:03:44,959
uh systems on the left hand side now

103
00:03:44,959 --> 00:03:46,560
they don't need to be interacting but

104
00:03:46,560 --> 00:03:48,319
they tend to be

105
00:03:48,319 --> 00:03:50,560
um and you want to show that

106
00:03:50,560 --> 00:03:52,400
a

107
00:03:52,400 --> 00:03:54,400
series of interactions with something

108
00:03:54,400 --> 00:03:57,120
external and this is usually

109
00:03:57,120 --> 00:03:59,120
where it gets instructions from so these

110
00:03:59,120 --> 00:04:00,560
might be

111
00:04:00,560 --> 00:04:03,599
your prove or you verify or encrypt or

112
00:04:03,599 --> 00:04:06,159
whatever messages your protocol takes

113
00:04:06,159 --> 00:04:08,159
these are the external interactions we

114
00:04:08,159 --> 00:04:09,680
want to prove that this is this

115
00:04:09,680 --> 00:04:11,439
corresponds to some setting where you've

116
00:04:11,439 --> 00:04:12,640
got

117
00:04:12,640 --> 00:04:15,120
a trusted third party dealing with these

118
00:04:15,120 --> 00:04:16,238
uh

119
00:04:16,238 --> 00:04:18,320
with everything uh but with the same

120
00:04:18,320 --> 00:04:20,238
messages

121
00:04:20,238 --> 00:04:22,160
and this isn't quite the entirety of the

122
00:04:22,160 --> 00:04:23,440
story it gets a little bit more

123
00:04:23,440 --> 00:04:25,759
complicated than that obviously um and

124
00:04:25,759 --> 00:04:27,440
one of the things that make this

125
00:04:27,440 --> 00:04:28,880
slightly more complicated in a

126
00:04:28,880 --> 00:04:30,800
compositional setting

127
00:04:30,800 --> 00:04:32,880
is the notion of an anniversary

128
00:04:32,880 --> 00:04:34,560
and this notion is more complicated

129
00:04:34,560 --> 00:04:36,320
because usually in the

130
00:04:36,320 --> 00:04:38,000
real world we want to give the adversary

131
00:04:38,000 --> 00:04:40,160
quite a lot of power that's denoted here

132
00:04:40,160 --> 00:04:42,639
through the dashed interfaces

133
00:04:42,639 --> 00:04:45,360
and we want to tell um

134
00:04:45,360 --> 00:04:47,360
we want to have them

135
00:04:47,360 --> 00:04:49,360
have power over things like

136
00:04:49,360 --> 00:04:51,120
what are the exact ciphertexts that are

137
00:04:51,120 --> 00:04:52,479
being sent

138
00:04:52,479 --> 00:04:54,560
be able to observe all network messages

139
00:04:54,560 --> 00:04:56,479
that this kind of power

140
00:04:56,479 --> 00:04:58,479
which is a very large attack surface

141
00:04:58,479 --> 00:05:00,880
that our trusted third party here

142
00:05:00,880 --> 00:05:03,919
um probably doesn't replicate uh and in

143
00:05:03,919 --> 00:05:06,080
fact it shouldn't we wanted

144
00:05:06,080 --> 00:05:08,800
the trusted third party to be an ideal

145
00:05:08,800 --> 00:05:10,400
of how

146
00:05:10,400 --> 00:05:12,720
this should be implemented and so it

147
00:05:12,720 --> 00:05:14,880
would be ideal if it had a reduced

148
00:05:14,880 --> 00:05:17,039
attack surface and one which is secure

149
00:05:17,039 --> 00:05:18,800
by definition

150
00:05:18,800 --> 00:05:21,360
that's what's usually done and then

151
00:05:21,360 --> 00:05:23,840
in order to have any sense of

152
00:05:23,840 --> 00:05:26,400
equivalence we need to expand this

153
00:05:26,400 --> 00:05:28,080
attack surface again and we need to show

154
00:05:28,080 --> 00:05:29,840
that this can be

155
00:05:29,840 --> 00:05:31,520
that larger attack surface can be

156
00:05:31,520 --> 00:05:33,360
replicated with it and that's the task

157
00:05:33,360 --> 00:05:34,479
of the

158
00:05:34,479 --> 00:05:36,880
simulator that gives simulation security

159
00:05:36,880 --> 00:05:40,240
its name so this simulator interacts

160
00:05:40,240 --> 00:05:42,720
with both the reduced attack surface and

161
00:05:42,720 --> 00:05:45,360
the larger attack surface that

162
00:05:45,360 --> 00:05:48,080
it provides in order to be equivalent

163
00:05:48,080 --> 00:05:49,199
with

164
00:05:49,199 --> 00:05:50,840
the real world

165
00:05:50,840 --> 00:05:53,680
protocol now the only thing that's left

166
00:05:53,680 --> 00:05:55,600
there and where the notion of

167
00:05:55,600 --> 00:05:58,160
composition really comes in is what does

168
00:05:58,160 --> 00:05:59,520
this

169
00:05:59,520 --> 00:06:01,360
indistinguishability notion this

170
00:06:01,360 --> 00:06:04,080
equivalence between the two sides mean

171
00:06:04,080 --> 00:06:08,400
and in practice what's done is a uh

172
00:06:08,400 --> 00:06:10,160
distinguishing environment is used now

173
00:06:10,160 --> 00:06:12,880
terminology is a little bit of an issue

174
00:06:12,880 --> 00:06:16,240
here that the the two largest um

175
00:06:16,240 --> 00:06:18,479
systems are universal composition and

176
00:06:18,479 --> 00:06:21,199
constructive cryptography and our work

177
00:06:21,199 --> 00:06:22,800
uh follows more on the lines of

178
00:06:22,800 --> 00:06:24,560
constructive cryptography just because

179
00:06:24,560 --> 00:06:27,199
of its simplicity uh but we are also

180
00:06:27,199 --> 00:06:29,360
aware that most people are more familiar

181
00:06:29,360 --> 00:06:32,160
with the universal composition terms

182
00:06:32,160 --> 00:06:34,240
we're going to go in with universal

183
00:06:34,240 --> 00:06:36,800
composition terms here as well um and

184
00:06:36,800 --> 00:06:39,199
this distinguisher is actually the pair

185
00:06:39,199 --> 00:06:41,680
of your environment and your adversary

186
00:06:41,680 --> 00:06:44,960
um and as as many people observe in

187
00:06:44,960 --> 00:06:47,120
universal composition you can use the

188
00:06:47,120 --> 00:06:50,000
dummy adversary um without loss of

189
00:06:50,000 --> 00:06:52,240
generality that's essentially what we're

190
00:06:52,240 --> 00:06:53,759
assuming here we're assuming a dummy

191
00:06:53,759 --> 00:06:56,800
adversary uh where

192
00:06:56,800 --> 00:07:00,720
your environment is the attacker as well

193
00:07:00,720 --> 00:07:03,120
and so this um

194
00:07:03,120 --> 00:07:05,199
the statement of security is usually one

195
00:07:05,199 --> 00:07:08,960
of you have a set of uh committed

196
00:07:08,960 --> 00:07:11,120
distinguishes or environments

197
00:07:11,120 --> 00:07:12,800
um and you say that well for any

198
00:07:12,800 --> 00:07:14,080
distinguisher

199
00:07:14,080 --> 00:07:15,280
in this set

200
00:07:15,280 --> 00:07:18,240
uh if you connect it up with both your

201
00:07:18,240 --> 00:07:20,319
your protocol on the left hand side here

202
00:07:20,319 --> 00:07:22,560
and with your ideal world consisting of

203
00:07:22,560 --> 00:07:23,759
your

204
00:07:23,759 --> 00:07:26,240
specification or ideal functionality in

205
00:07:26,240 --> 00:07:27,599
uc terms

206
00:07:27,599 --> 00:07:30,560
and your

207
00:07:30,720 --> 00:07:32,319
simulator

208
00:07:32,319 --> 00:07:34,000
if you connect it up with both of these

209
00:07:34,000 --> 00:07:36,160
it's still equivalent now this doesn't

210
00:07:36,160 --> 00:07:37,919
quite reduce the problem because you've

211
00:07:37,919 --> 00:07:40,240
still got an issue with well one is when

212
00:07:40,240 --> 00:07:42,240
is one interactive system equivalent to

213
00:07:42,240 --> 00:07:43,440
the next

214
00:07:43,440 --> 00:07:45,120
but one thing which you can do very

215
00:07:45,120 --> 00:07:47,919
nicely with the set is you can say well

216
00:07:47,919 --> 00:07:49,840
i i don't want to have any open

217
00:07:49,840 --> 00:07:51,440
interfaces left

218
00:07:51,440 --> 00:07:52,639
except for

219
00:07:52,639 --> 00:07:55,680
one which outputs a single bit

220
00:07:55,680 --> 00:07:57,599
and this bit can be interpreted as a

221
00:07:57,599 --> 00:07:59,520
guess a visit in the left hand side or

222
00:07:59,520 --> 00:08:02,080
on the right hand side so that is how

223
00:08:02,080 --> 00:08:04,800
this is usually phrased that

224
00:08:04,800 --> 00:08:06,960
you you phrase it as a guessing game of

225
00:08:06,960 --> 00:08:08,879
the environment is trying to tell which

226
00:08:08,879 --> 00:08:10,960
of the two worlds it's in if it can't

227
00:08:10,960 --> 00:08:13,280
tell then you have security by

228
00:08:13,280 --> 00:08:15,360
definition because it means that any

229
00:08:15,360 --> 00:08:17,120
attack can be translate

230
00:08:17,120 --> 00:08:19,599
any attack against the real system can

231
00:08:19,599 --> 00:08:21,280
also be translated

232
00:08:21,280 --> 00:08:23,440
into an attack against the ideal

233
00:08:23,440 --> 00:08:26,000
specification and that the two behave

234
00:08:26,000 --> 00:08:28,720
identically

235
00:08:28,879 --> 00:08:31,120
now

236
00:08:31,759 --> 00:08:34,320
uh one thing which this uh notion

237
00:08:34,320 --> 00:08:38,000
affords you is and this depends a bit on

238
00:08:38,000 --> 00:08:40,399
the the set of permissible distinguishes

239
00:08:40,399 --> 00:08:43,440
that you can freely move uh things

240
00:08:43,440 --> 00:08:47,200
between this set and uh the protocol or

241
00:08:47,200 --> 00:08:50,399
uh ideal functionality on the uh

242
00:08:50,399 --> 00:08:52,480
on the left or right hand side

243
00:08:52,480 --> 00:08:55,200
um and this does depend on the set in

244
00:08:55,200 --> 00:08:56,240
particular

245
00:08:56,240 --> 00:08:59,040
if your uh set of distinguishing

246
00:08:59,040 --> 00:09:00,880
environments is closed

247
00:09:00,880 --> 00:09:03,120
under addition and subtraction of these

248
00:09:03,120 --> 00:09:04,160
notes

249
00:09:04,160 --> 00:09:05,839
and in

250
00:09:05,839 --> 00:09:07,920
the settings of universal composition

251
00:09:07,920 --> 00:09:11,200
and a constructive cryptography it is

252
00:09:11,200 --> 00:09:13,680
in our setting this is a little bit more

253
00:09:13,680 --> 00:09:15,279
complex and i'll get into that in a

254
00:09:15,279 --> 00:09:17,279
moment

255
00:09:17,279 --> 00:09:19,360
uh but if it is then then this is what

256
00:09:19,360 --> 00:09:21,440
gives you composition for free because

257
00:09:21,440 --> 00:09:22,800
uh

258
00:09:22,800 --> 00:09:25,040
the semantics of the the whole execution

259
00:09:25,040 --> 00:09:27,120
aren't changed by this move you're just

260
00:09:27,120 --> 00:09:29,920
reassigning what you're labeling what um

261
00:09:29,920 --> 00:09:31,440
and

262
00:09:31,440 --> 00:09:33,279
it means it's still going to be secure

263
00:09:33,279 --> 00:09:36,240
for regardless of the the set of uh

264
00:09:36,240 --> 00:09:37,920
distinguishes on the left and right hand

265
00:09:37,920 --> 00:09:40,160
side

266
00:09:42,080 --> 00:09:45,200
and yeah this can be used to both do a

267
00:09:45,200 --> 00:09:47,120
sequential composition if you absorb

268
00:09:47,120 --> 00:09:50,240
simulators in the into the distinguisher

269
00:09:50,240 --> 00:09:52,320
and it can also be used for parallel

270
00:09:52,320 --> 00:09:54,560
composition by just absorbing

271
00:09:54,560 --> 00:09:56,399
uh parts which you're not interested in

272
00:09:56,399 --> 00:09:58,399
into the distinguish or pulling them

273
00:09:58,399 --> 00:10:00,399
back out

274
00:10:00,399 --> 00:10:02,880
now um

275
00:10:02,880 --> 00:10:04,640
i also want to briefly go over knowledge

276
00:10:04,640 --> 00:10:06,560
assumptions and i'm going to work with

277
00:10:06,560 --> 00:10:09,440
the example of the algebraic group model

278
00:10:09,440 --> 00:10:11,440
which is a very powerful and very useful

279
00:10:11,440 --> 00:10:12,959
ultrasound

280
00:10:12,959 --> 00:10:16,720
the basic premise is that if you have

281
00:10:16,720 --> 00:10:18,640
some algorithm which behaves uh

282
00:10:18,640 --> 00:10:20,240
algebraically

283
00:10:20,240 --> 00:10:22,480
and we will get into the constraints of

284
00:10:22,480 --> 00:10:25,519
that the assumption usually is that

285
00:10:25,519 --> 00:10:27,279
all algorithms you're interested in

286
00:10:27,279 --> 00:10:29,839
including your attacker and your

287
00:10:29,839 --> 00:10:31,200
uh

288
00:10:31,200 --> 00:10:33,839
your environments will be able to break

289
00:10:33,839 --> 00:10:35,760
uh then if this algorithm outputs a

290
00:10:35,760 --> 00:10:38,399
group model a a group element in the

291
00:10:38,399 --> 00:10:40,160
outbreak group model so here it outputs

292
00:10:40,160 --> 00:10:42,240
y and it must know how to construct them

293
00:10:42,240 --> 00:10:44,160
from its inputs g and h

294
00:10:44,160 --> 00:10:47,040
in this case our um our

295
00:10:47,040 --> 00:10:48,480
algorithm

296
00:10:48,480 --> 00:10:52,079
knows that y is g to the a times h to

297
00:10:52,079 --> 00:10:52,880
the b

298
00:10:52,880 --> 00:10:54,800
and this this should be the case for any

299
00:10:54,800 --> 00:10:57,120
algebraic system and to make concrete

300
00:10:57,120 --> 00:11:00,880
what it means for it to know this

301
00:11:01,760 --> 00:11:03,839
we introduce the notion of an extractor

302
00:11:03,839 --> 00:11:06,480
and this also is how you can interact

303
00:11:06,480 --> 00:11:07,839
with

304
00:11:07,839 --> 00:11:09,360
knowledge assumptions on a practical

305
00:11:09,360 --> 00:11:11,200
level the assumption is that there is an

306
00:11:11,200 --> 00:11:13,120
extractor which takes the same

307
00:11:13,120 --> 00:11:14,399
inputs as

308
00:11:14,399 --> 00:11:16,240
our algorithm it knows all of the

309
00:11:16,240 --> 00:11:18,000
details about the algorithm including

310
00:11:18,000 --> 00:11:20,399
its code and its randomness

311
00:11:20,399 --> 00:11:21,839
and

312
00:11:21,839 --> 00:11:23,680
instead of outputting the the group

313
00:11:23,680 --> 00:11:25,200
element it outputs

314
00:11:25,200 --> 00:11:26,720
how this group element can be

315
00:11:26,720 --> 00:11:29,200
constructed so it outputs

316
00:11:29,200 --> 00:11:32,480
essentially a witness corresponding to

317
00:11:32,480 --> 00:11:35,360
the knowledge of this group

318
00:11:35,360 --> 00:11:37,600
we call the group elements that are

319
00:11:37,600 --> 00:11:38,959
being output here

320
00:11:38,959 --> 00:11:40,480
knowledge implying objects in our

321
00:11:40,480 --> 00:11:41,760
setting

322
00:11:41,760 --> 00:11:43,680
in the sense that uh

323
00:11:43,680 --> 00:11:45,760
the the possession of one of these

324
00:11:45,760 --> 00:11:47,040
objects implies the knowledge of

325
00:11:47,040 --> 00:11:48,640
something further

326
00:11:48,640 --> 00:11:50,320
and we call

327
00:11:50,320 --> 00:11:52,880
these representations uh witnesses in

328
00:11:52,880 --> 00:11:54,160
our set

329
00:11:54,160 --> 00:11:56,639
now one of the the questions we run into

330
00:11:56,639 --> 00:11:57,680
is

331
00:11:57,680 --> 00:11:59,360
how do you take this from a setting of

332
00:11:59,360 --> 00:12:01,920
where there's a single algorithm and

333
00:12:01,920 --> 00:12:03,440
move it to one

334
00:12:03,440 --> 00:12:05,920
where suddenly you have uh complex

335
00:12:05,920 --> 00:12:08,480
interacting systems sending messages

336
00:12:08,480 --> 00:12:10,800
and large parts of these messages are

337
00:12:10,800 --> 00:12:12,560
not going to be group elements are not

338
00:12:12,560 --> 00:12:15,040
going to be knowledge implying objects

339
00:12:15,040 --> 00:12:16,800
um and to address this

340
00:12:16,800 --> 00:12:19,760
we introduce a rudimentary type system

341
00:12:19,760 --> 00:12:21,680
now most of this type system so

342
00:12:21,680 --> 00:12:23,600
everything here in black

343
00:12:23,600 --> 00:12:25,760
is is just dealing with standard

344
00:12:25,760 --> 00:12:27,760
messages um how would you send bit

345
00:12:27,760 --> 00:12:29,600
strings how would you send

346
00:12:29,600 --> 00:12:32,959
um a single bit uh how would you send

347
00:12:32,959 --> 00:12:35,360
a field element to these kinds of things

348
00:12:35,360 --> 00:12:38,399
um but here in blue highlighted are

349
00:12:38,399 --> 00:12:40,160
the parts of this type system which are

350
00:12:40,160 --> 00:12:42,320
specifically dealing with knowledge

351
00:12:42,320 --> 00:12:43,920
assumptions

352
00:12:43,920 --> 00:12:46,320
and specifically given a specific

353
00:12:46,320 --> 00:12:47,760
knowledge assumptions and its public

354
00:12:47,760 --> 00:12:49,360
parameters

355
00:12:49,360 --> 00:12:51,040
which is something i will not be going

356
00:12:51,040 --> 00:12:53,680
into in this talk

357
00:12:53,680 --> 00:12:56,000
we have two additional types of objects

358
00:12:56,000 --> 00:12:57,760
the first is the knowledge implying

359
00:12:57,760 --> 00:13:00,160
object so this would be

360
00:13:00,160 --> 00:13:02,480
the group element y here and we also

361
00:13:02,480 --> 00:13:04,320
have an annotated knowledge and planning

362
00:13:04,320 --> 00:13:07,680
object saying for a given set of inputs

363
00:13:07,680 --> 00:13:09,680
um with this knowledge implying object

364
00:13:09,680 --> 00:13:11,200
we have a pair

365
00:13:11,200 --> 00:13:12,240
of both

366
00:13:12,240 --> 00:13:13,040
the

367
00:13:13,040 --> 00:13:15,200
object and its weakness so in this case

368
00:13:15,200 --> 00:13:16,320
this would be

369
00:13:16,320 --> 00:13:19,440
both of these parts together

370
00:13:19,440 --> 00:13:21,440
uh and it's crucial that we have the

371
00:13:21,440 --> 00:13:23,360
inputs here because for any

372
00:13:23,360 --> 00:13:24,720
kind of knowledge assumption and not

373
00:13:24,720 --> 00:13:26,639
just for the algebraic group model you

374
00:13:26,639 --> 00:13:28,959
can trivially just pass on a knowledge

375
00:13:28,959 --> 00:13:31,200
implying object and that doesn't need to

376
00:13:31,200 --> 00:13:33,040
add any information

377
00:13:33,040 --> 00:13:34,399
but it's something that you you can

378
00:13:34,399 --> 00:13:35,920
always do

379
00:13:35,920 --> 00:13:36,800
and

380
00:13:36,800 --> 00:13:38,320
as a result you you need to know what

381
00:13:38,320 --> 00:13:39,279
your

382
00:13:39,279 --> 00:13:41,279
inputs are to know what witnesses are

383
00:13:41,279 --> 00:13:43,279
valid

384
00:13:43,279 --> 00:13:45,360
um and the additional typing rules here

385
00:13:45,360 --> 00:13:47,279
are just essentially unwrapping this we

386
00:13:47,279 --> 00:13:50,480
say that well for whatever kind of

387
00:13:50,480 --> 00:13:52,720
um knowledge implying object we have

388
00:13:52,720 --> 00:13:54,560
there's some internal representation of

389
00:13:54,560 --> 00:13:57,040
how uh how this is actually sent over

390
00:13:57,040 --> 00:13:58,079
the wire

391
00:13:58,079 --> 00:14:00,399
um and corresponding with these pairs

392
00:14:00,399 --> 00:14:02,000
there's also a representation of the

393
00:14:02,000 --> 00:14:03,279
witnesses

394
00:14:03,279 --> 00:14:05,440
and crucially if we have one of these

395
00:14:05,440 --> 00:14:07,440
pairs of knowledge implying objects and

396
00:14:07,440 --> 00:14:09,440
witnesses then these need to satisfy

397
00:14:09,440 --> 00:14:10,959
some relation

398
00:14:10,959 --> 00:14:13,120
depending also on

399
00:14:13,120 --> 00:14:16,480
what inputs you got

400
00:14:16,480 --> 00:14:19,279
now how do we use this in practice where

401
00:14:19,279 --> 00:14:20,560
would we want to use this in a

402
00:14:20,560 --> 00:14:22,240
compositional system

403
00:14:22,240 --> 00:14:25,120
so in practice we would want to attach

404
00:14:25,120 --> 00:14:26,079
mainly

405
00:14:26,079 --> 00:14:29,120
use extraction in the simulator

406
00:14:29,120 --> 00:14:31,600
so we now and this is sort of also where

407
00:14:31,600 --> 00:14:32,320
this

408
00:14:32,320 --> 00:14:35,279
runs into its uh its issues in standard

409
00:14:35,279 --> 00:14:38,639
compositional frameworks uh is we also

410
00:14:38,639 --> 00:14:40,720
normally want to extract

411
00:14:40,720 --> 00:14:42,800
from the distinguishing environment so

412
00:14:42,800 --> 00:14:45,440
we want to get more knowledge about the

413
00:14:45,440 --> 00:14:46,720
distinguisher

414
00:14:46,720 --> 00:14:48,560
and in particular for

415
00:14:48,560 --> 00:14:50,399
attacker-created

416
00:14:50,399 --> 00:14:51,360
objects

417
00:14:51,360 --> 00:14:53,279
so for example in the case of

418
00:14:53,279 --> 00:14:55,279
non-interactive serial knowledge we'd

419
00:14:55,279 --> 00:14:57,639
like to extract from a

420
00:14:57,639 --> 00:14:59,519
non-interactive knowledge proof that is

421
00:14:59,519 --> 00:15:01,040
created from the

422
00:15:01,040 --> 00:15:04,079
by the environment or by the attacker

423
00:15:04,079 --> 00:15:06,720
and this is the problem because

424
00:15:06,720 --> 00:15:08,880
what that means for your standard notion

425
00:15:08,880 --> 00:15:11,199
of extraction is well if we want the

426
00:15:11,199 --> 00:15:13,279
simulator to extract from from this part

427
00:15:13,279 --> 00:15:15,920
here uh it needs to know this parts

428
00:15:15,920 --> 00:15:16,959
inputs

429
00:15:16,959 --> 00:15:20,000
and this parts randomness and its code

430
00:15:20,000 --> 00:15:22,399
which in a composable setting

431
00:15:22,399 --> 00:15:25,279
means we have to give the

432
00:15:25,279 --> 00:15:28,000
simulator which is the ideal world

433
00:15:28,000 --> 00:15:29,279
attacker

434
00:15:29,279 --> 00:15:32,079
full access to the entire system

435
00:15:32,079 --> 00:15:33,920
and that means we have essentially

436
00:15:33,920 --> 00:15:36,800
removed all notions of privacy that are

437
00:15:36,800 --> 00:15:39,199
possible in our ideal world we can no

438
00:15:39,199 --> 00:15:42,639
longer express privacy properties

439
00:15:42,639 --> 00:15:44,240
that's something that we probably want

440
00:15:44,240 --> 00:15:46,720
to avoid

441
00:15:48,000 --> 00:15:49,920
so this is an a

442
00:15:49,920 --> 00:15:52,240
the fundamental problem of why you don't

443
00:15:52,240 --> 00:15:54,560
have white box extraction in composable

444
00:15:54,560 --> 00:15:55,920
settings

445
00:15:55,920 --> 00:15:58,320
and how we get around this is we make it

446
00:15:58,320 --> 00:16:00,399
not quite whitebox

447
00:16:00,399 --> 00:16:02,079
and in particular

448
00:16:02,079 --> 00:16:04,079
we give the simulator essentially oracle

449
00:16:04,079 --> 00:16:06,480
queries just to

450
00:16:06,480 --> 00:16:10,000
this extractor uh and in practice

451
00:16:10,000 --> 00:16:12,880
we do this by lifting our environments

452
00:16:12,880 --> 00:16:14,720
into environments which give the

453
00:16:14,720 --> 00:16:18,480
simulator access to an oracle that um

454
00:16:18,480 --> 00:16:20,959
allows it to query the extractor

455
00:16:20,959 --> 00:16:24,240
and essentially the way we do that is

456
00:16:24,240 --> 00:16:26,000
we assume first off that all of our

457
00:16:26,000 --> 00:16:28,000
distinguishes are

458
00:16:28,000 --> 00:16:30,240
uh what we call knowledge respecting or

459
00:16:30,240 --> 00:16:31,920
in the algebraic group model case would

460
00:16:31,920 --> 00:16:32,880
be

461
00:16:32,880 --> 00:16:34,399
algebraic

462
00:16:34,399 --> 00:16:36,560
and this is crucial because if this is

463
00:16:36,560 --> 00:16:38,560
not the case then we can't extract from

464
00:16:38,560 --> 00:16:39,440
it

465
00:16:39,440 --> 00:16:41,759
so we need to make this as an assumption

466
00:16:41,759 --> 00:16:44,000
next up for each of the individual parts

467
00:16:44,000 --> 00:16:45,040
of this

468
00:16:45,040 --> 00:16:46,480
environment

469
00:16:46,480 --> 00:16:49,279
we transform it into a part which

470
00:16:49,279 --> 00:16:51,440
outputs as well the witnesses in

471
00:16:51,440 --> 00:16:52,959
particular if we have an original

472
00:16:52,959 --> 00:16:54,079
message

473
00:16:54,079 --> 00:16:55,519
which contains a knowledge implying

474
00:16:55,519 --> 00:16:57,120
object it may be a extra bit of

475
00:16:57,120 --> 00:16:59,440
information we transform this into a

476
00:16:59,440 --> 00:17:02,720
message with the extracted pre-applied

477
00:17:02,720 --> 00:17:04,559
and this message outputs not just the

478
00:17:04,559 --> 00:17:06,160
knowledge implying object but also its

479
00:17:06,160 --> 00:17:08,240
witness so here it's outputting

480
00:17:08,240 --> 00:17:11,039
that y is g to the a times h to the b

481
00:17:11,039 --> 00:17:13,039
the exact representation of this doesn't

482
00:17:13,039 --> 00:17:15,119
really matter

483
00:17:15,119 --> 00:17:16,240
um

484
00:17:16,240 --> 00:17:18,240
now this message is not what the

485
00:17:18,240 --> 00:17:19,839
recipient at the other end is going to

486
00:17:19,839 --> 00:17:21,280
expect it's going to expect just the

487
00:17:21,280 --> 00:17:23,039
knowledge and planning object so we

488
00:17:23,039 --> 00:17:25,760
intercept this message um at

489
00:17:25,760 --> 00:17:28,079
the the midpoint of these channels so we

490
00:17:28,079 --> 00:17:30,799
essentially add a new node uh to this

491
00:17:30,799 --> 00:17:33,360
network which does this intercepting

492
00:17:33,360 --> 00:17:35,600
and this node is charged with doing two

493
00:17:35,600 --> 00:17:37,440
things the first is

494
00:17:37,440 --> 00:17:40,640
um parsing out which part of this is the

495
00:17:40,640 --> 00:17:41,520
uh

496
00:17:41,520 --> 00:17:44,480
the interesting part the part with the

497
00:17:44,480 --> 00:17:45,760
knowledge implying object and the

498
00:17:45,760 --> 00:17:48,640
witness and sending this to a

499
00:17:48,640 --> 00:17:51,039
centralized repository of knowledge

500
00:17:51,039 --> 00:17:53,440
which is just going to record

501
00:17:53,440 --> 00:17:55,280
right this knowledge implying object has

502
00:17:55,280 --> 00:17:56,880
this witness

503
00:17:56,880 --> 00:17:58,320
and the second part is it's going to

504
00:17:58,320 --> 00:18:00,480
erase this again replace it just with an

505
00:18:00,480 --> 00:18:02,559
alternate applying object and send that

506
00:18:02,559 --> 00:18:03,919
on

507
00:18:03,919 --> 00:18:05,600
and this centralized repository of

508
00:18:05,600 --> 00:18:07,760
knowledge is then

509
00:18:07,760 --> 00:18:10,480
queryable by the simulator in the ideal

510
00:18:10,480 --> 00:18:12,160
world now

511
00:18:12,160 --> 00:18:14,320
because there's a mismatch in the real

512
00:18:14,320 --> 00:18:16,480
world in the ideal world there's no

513
00:18:16,480 --> 00:18:18,400
entity querying it in the real world we

514
00:18:18,400 --> 00:18:20,960
also introduce a node um which

515
00:18:20,960 --> 00:18:22,640
essentially just makes sure the

516
00:18:22,640 --> 00:18:24,799
connections are balanced uh which exists

517
00:18:24,799 --> 00:18:26,799
in both worlds

518
00:18:26,799 --> 00:18:30,000
now there's one thing which is uh still

519
00:18:30,000 --> 00:18:32,799
quite important here and that is we

520
00:18:32,799 --> 00:18:34,559
should not let the

521
00:18:34,559 --> 00:18:36,720
distinguishing environment itself

522
00:18:36,720 --> 00:18:38,960
query the knowledge repository it's not

523
00:18:38,960 --> 00:18:40,880
immediately obvious why this is the case

524
00:18:40,880 --> 00:18:43,760
but i'm going to argue it now

525
00:18:43,760 --> 00:18:45,840
and essentially it's

526
00:18:45,840 --> 00:18:48,080
so that we can preserve some notion of

527
00:18:48,080 --> 00:18:49,440
composition

528
00:18:49,440 --> 00:18:50,880
and crucially

529
00:18:50,880 --> 00:18:53,520
imagine if we wanted to move things out

530
00:18:53,520 --> 00:18:55,039
of the

531
00:18:55,039 --> 00:18:58,559
distinguisher into the the protocol and

532
00:18:58,559 --> 00:19:00,480
on the left here

533
00:19:00,480 --> 00:19:01,840
then

534
00:19:01,840 --> 00:19:04,000
one of the consequences of this would be

535
00:19:04,000 --> 00:19:06,720
that part of the protocol would be um

536
00:19:06,720 --> 00:19:08,720
providing knowledge applying objects and

537
00:19:08,720 --> 00:19:12,080
witnesses to the knowledge repository

538
00:19:12,080 --> 00:19:13,440
and crucially

539
00:19:13,440 --> 00:19:14,320
while

540
00:19:14,320 --> 00:19:16,400
if we do this as a single step it might

541
00:19:16,400 --> 00:19:18,080
be the same on

542
00:19:18,080 --> 00:19:19,440
on both sides

543
00:19:19,440 --> 00:19:21,679
in multiple steps we may have a case

544
00:19:21,679 --> 00:19:22,640
where

545
00:19:22,640 --> 00:19:24,559
one of the steps has something

546
00:19:24,559 --> 00:19:26,720
on its left hand side that is not on the

547
00:19:26,720 --> 00:19:28,880
right hand side uh

548
00:19:28,880 --> 00:19:32,080
placing things into the not

549
00:19:32,160 --> 00:19:33,360
into the

550
00:19:33,360 --> 00:19:34,799
uh

551
00:19:34,799 --> 00:19:36,799
knowledge repository

552
00:19:36,799 --> 00:19:39,200
and so there's

553
00:19:39,200 --> 00:19:41,200
essentially a case where

554
00:19:41,200 --> 00:19:43,120
it may very well be possible that the

555
00:19:43,120 --> 00:19:45,120
knowledge repository will have different

556
00:19:45,120 --> 00:19:48,080
contents in the real and ideal worlds uh

557
00:19:48,080 --> 00:19:50,080
just because of the technicalities of

558
00:19:50,080 --> 00:19:51,919
how we have moved things in and out of

559
00:19:51,919 --> 00:19:53,840
the distinguisher this is something we

560
00:19:53,840 --> 00:19:56,240
don't want the distinguishes of a

561
00:19:56,240 --> 00:19:58,320
different of that experiment to be able

562
00:19:58,320 --> 00:20:00,160
to tell so

563
00:20:00,160 --> 00:20:02,080
it's something that

564
00:20:02,080 --> 00:20:04,480
could very easily break um

565
00:20:04,480 --> 00:20:06,480
break security statements and make them

566
00:20:06,480 --> 00:20:08,480
very brittle if the distinguisher could

567
00:20:08,480 --> 00:20:11,440
just uh say query a

568
00:20:11,440 --> 00:20:13,200
non-interactive zero knowledge proof to

569
00:20:13,200 --> 00:20:15,520
the knowledge repository and ask was

570
00:20:15,520 --> 00:20:18,400
this created in the real protocol or not

571
00:20:18,400 --> 00:20:21,760
um and to prevent that we we explicitly

572
00:20:21,760 --> 00:20:23,679
forbid a

573
00:20:23,679 --> 00:20:26,000
querying of the knowledge repository in

574
00:20:26,000 --> 00:20:28,000
both worlds

575
00:20:28,000 --> 00:20:29,120
and this has some interesting

576
00:20:29,120 --> 00:20:31,280
consequences because it means that

577
00:20:31,280 --> 00:20:33,200
the simulators cannot immediately be

578
00:20:33,200 --> 00:20:34,720
absorbed into

579
00:20:34,720 --> 00:20:35,440
uh

580
00:20:35,440 --> 00:20:38,080
into the sets of distinguishes so we we

581
00:20:38,080 --> 00:20:39,919
come up with a

582
00:20:39,919 --> 00:20:42,080
slight variant of

583
00:20:42,080 --> 00:20:44,080
uh the denotation of constructive

584
00:20:44,080 --> 00:20:46,559
cryptography and there are various ways

585
00:20:46,559 --> 00:20:50,240
in which this differs but essentially we

586
00:20:50,240 --> 00:20:52,799
have a calculus that allows for

587
00:20:52,799 --> 00:20:55,760
differences in sets of distinguishes

588
00:20:55,760 --> 00:20:59,919
so we no longer need this to be a

589
00:20:59,919 --> 00:21:01,919
something that is fixed and it's

590
00:21:01,919 --> 00:21:04,320
something that can vary between

591
00:21:04,320 --> 00:21:06,320
statements of security

592
00:21:06,320 --> 00:21:07,679
and in particular we note that for

593
00:21:07,679 --> 00:21:09,280
transitivity

594
00:21:09,280 --> 00:21:10,480
this means that

595
00:21:10,480 --> 00:21:12,720
you need to be secure with respect also

596
00:21:12,720 --> 00:21:14,559
to the simulator of the first step of

597
00:21:14,559 --> 00:21:16,000
the transitivity statement when you're

598
00:21:16,000 --> 00:21:17,679
doing the second step

599
00:21:17,679 --> 00:21:20,400
so essentially this forbids negative

600
00:21:20,400 --> 00:21:22,720
interaction between simulators

601
00:21:22,720 --> 00:21:23,919
um and

602
00:21:23,919 --> 00:21:25,520
same thing goes for

603
00:21:25,520 --> 00:21:27,520
parallel composition where we forbid

604
00:21:27,520 --> 00:21:29,520
negative interaction with the parallel

605
00:21:29,520 --> 00:21:31,840
component

606
00:21:32,080 --> 00:21:33,679
now this has interesting implications

607
00:21:33,679 --> 00:21:35,919
for knowledge assumptions um

608
00:21:35,919 --> 00:21:38,240
specifically because

609
00:21:38,240 --> 00:21:40,559
if one of the simulators is actually

610
00:21:40,559 --> 00:21:42,559
using the knowledge repository you can't

611
00:21:42,559 --> 00:21:44,880
just easily absorb this into this into

612
00:21:44,880 --> 00:21:46,559
the distinguisher

613
00:21:46,559 --> 00:21:47,360
and

614
00:21:47,360 --> 00:21:50,960
uh the reason for this is uh

615
00:21:50,960 --> 00:21:52,400
quite simply because that would then

616
00:21:52,400 --> 00:21:54,960
give the distinguisher access to the

617
00:21:54,960 --> 00:21:58,080
knowledge repository directly

618
00:21:58,080 --> 00:21:59,120
so

619
00:21:59,120 --> 00:22:00,960
one of the interesting things we

620
00:22:00,960 --> 00:22:03,039
observed is that this is still going to

621
00:22:03,039 --> 00:22:05,679
work fine so long as you have disjoint

622
00:22:05,679 --> 00:22:08,000
sets of knowledge assumptions um

623
00:22:08,000 --> 00:22:09,840
for the most part so if you're

624
00:22:09,840 --> 00:22:13,200
doing a transitivity step and both steps

625
00:22:13,200 --> 00:22:15,039
use different knowledge assumptions this

626
00:22:15,039 --> 00:22:16,720
is fine you just need to

627
00:22:16,720 --> 00:22:18,480
knowledge lift the simulator of the

628
00:22:18,480 --> 00:22:19,840
first part

629
00:22:19,840 --> 00:22:21,280
and it's also fine with parallel

630
00:22:21,280 --> 00:22:22,799
composition as long as what you're

631
00:22:22,799 --> 00:22:25,360
parallelly composing with is knowledge

632
00:22:25,360 --> 00:22:28,159
respecting um and you can lift it with

633
00:22:28,159 --> 00:22:29,280
respect to

634
00:22:29,280 --> 00:22:30,640
the set of knowledge assumptions you're

635
00:22:30,640 --> 00:22:31,679
working with

636
00:22:31,679 --> 00:22:34,159
and the most part this means you're fine

637
00:22:34,159 --> 00:22:35,919
so long as you don't reuse knowledge

638
00:22:35,919 --> 00:22:39,280
assumptions across your system

639
00:22:39,280 --> 00:22:40,400
and we also

640
00:22:40,400 --> 00:22:42,240
given possibility results where we show

641
00:22:42,240 --> 00:22:43,120
that

642
00:22:43,120 --> 00:22:44,640
if you do try to reuse knowledge

643
00:22:44,640 --> 00:22:46,720
assumptions bad things happen

644
00:22:46,720 --> 00:22:48,240
and specifically bad things happen

645
00:22:48,240 --> 00:22:49,600
because

646
00:22:49,600 --> 00:22:52,959
now your simulator

647
00:22:53,280 --> 00:22:56,159
can be used to essentially provide the

648
00:22:56,159 --> 00:22:58,240
distinguishing environment access to the

649
00:22:58,240 --> 00:23:01,360
knowledge repository and this allows to

650
00:23:01,360 --> 00:23:03,919
distinguish uh what parts are being put

651
00:23:03,919 --> 00:23:05,600
into this in the real and ideal world

652
00:23:05,600 --> 00:23:07,440
this happens with the simulator and

653
00:23:07,440 --> 00:23:09,679
transitivity and it happens with the

654
00:23:09,679 --> 00:23:11,039
parallel component in parallel

655
00:23:11,039 --> 00:23:13,360
composition

656
00:23:13,360 --> 00:23:15,200
now finally we have some concrete

657
00:23:15,200 --> 00:23:17,280
results in zk snarks

658
00:23:17,280 --> 00:23:19,679
we give a proof sketch that graph 16 is

659
00:23:19,679 --> 00:23:22,320
composable in the outbreak group model

660
00:23:22,320 --> 00:23:24,400
we also take this a step further and we

661
00:23:24,400 --> 00:23:26,480
show that it's still secure

662
00:23:26,480 --> 00:23:28,960
using special case composition if you're

663
00:23:28,960 --> 00:23:30,320
using a

664
00:23:30,320 --> 00:23:33,440
setup ceremony for graph 16.

665
00:23:33,440 --> 00:23:34,960
and we want to finish this talk with

666
00:23:34,960 --> 00:23:36,400
some practical questions

667
00:23:36,400 --> 00:23:38,480
in particular

668
00:23:38,480 --> 00:23:40,640
we believe it's understudied which

669
00:23:40,640 --> 00:23:42,640
snarks are simulation extractable and we

670
00:23:42,640 --> 00:23:44,320
think this is would be something that's

671
00:23:44,320 --> 00:23:46,480
valuable to study but for existing and

672
00:23:46,480 --> 00:23:48,480
new snarks

673
00:23:48,480 --> 00:23:50,480
and we also raise

674
00:23:50,480 --> 00:23:52,640
an open question which this leaves which

675
00:23:52,640 --> 00:23:55,520
is uh this is only if knowledge

676
00:23:55,520 --> 00:23:58,080
assumptions are not being reused and in

677
00:23:58,080 --> 00:24:00,320
what we see in practice is that group

678
00:24:00,320 --> 00:24:03,200
curve pairs are reused frequently and we

679
00:24:03,200 --> 00:24:05,120
would like to know if this is safe

680
00:24:05,120 --> 00:24:06,000
um

681
00:24:06,000 --> 00:24:08,080
and it's not obvious to this at this

682
00:24:08,080 --> 00:24:09,600
moment it may very well be that

683
00:24:09,600 --> 00:24:12,240
re-randomization guarantees this

684
00:24:12,240 --> 00:24:14,960
but it remains an open question

685
00:24:14,960 --> 00:24:16,559
now if you're watching this before the

686
00:24:16,559 --> 00:24:19,440
conference um please feel free to drop

687
00:24:19,440 --> 00:24:20,880
into the live session and ask your

688
00:24:20,880 --> 00:24:23,360
questions if you have any uh if not drop

689
00:24:23,360 --> 00:24:25,120
an email to me and thanks for listening

690
00:24:25,120 --> 00:24:26,400
to this talk

691
00:24:26,400 --> 00:24:30,279
it was great having you

