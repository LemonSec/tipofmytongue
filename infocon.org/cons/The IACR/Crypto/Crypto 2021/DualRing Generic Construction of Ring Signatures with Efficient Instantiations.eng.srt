1
00:00:02,000 --> 00:00:04,160
hello this is chi hong yun from the

2
00:00:04,160 --> 00:00:06,160
university of hong kong

3
00:00:06,160 --> 00:00:08,720
today i'll present my paper during

4
00:00:08,720 --> 00:00:10,639
generic construction of ring signatures

5
00:00:10,639 --> 00:00:12,880
with efficient instantiations

6
00:00:12,880 --> 00:00:15,440
this is john's work with muhammad ashin

7
00:00:15,440 --> 00:00:18,080
joseph new from monash university and

8
00:00:18,080 --> 00:00:21,199
cicero data61 from australia and mahoua

9
00:00:21,199 --> 00:00:22,880
from the university of hong kong and

10
00:00:22,880 --> 00:00:25,199
jimin deng from weiss university in the

11
00:00:25,199 --> 00:00:27,680
usa

12
00:00:27,680 --> 00:00:29,679
in this presentation i will first give a

13
00:00:29,679 --> 00:00:30,960
very brief introduction about ring

14
00:00:30,960 --> 00:00:32,880
signature then i'll give our

15
00:00:32,880 --> 00:00:35,680
construction of our scheme due ring

16
00:00:35,680 --> 00:00:37,760
and then i'll give two instantiations

17
00:00:37,760 --> 00:00:39,920
one in the elliptic curve setting and

18
00:00:39,920 --> 00:00:41,200
the other one in the lattice-based

19
00:00:41,200 --> 00:00:43,120
setting and finally i'll give some

20
00:00:43,120 --> 00:00:45,840
conclusion

21
00:00:45,840 --> 00:00:48,160
so firstly let me have a very brief

22
00:00:48,160 --> 00:00:50,399
introduction about what is ring

23
00:00:50,399 --> 00:00:52,960
signature

24
00:00:53,039 --> 00:00:55,920
so um in a standard digital signature

25
00:00:55,920 --> 00:00:57,760
one signer will output one single

26
00:00:57,760 --> 00:01:00,000
signature and everybody can chat that

27
00:01:00,000 --> 00:01:02,160
this signature is really come from alice

28
00:01:02,160 --> 00:01:03,520
the actual sign

29
00:01:03,520 --> 00:01:04,879
but ring signature is something

30
00:01:04,879 --> 00:01:06,560
different that wants to provide

31
00:01:06,560 --> 00:01:08,960
anonymity to the actual designer they

32
00:01:08,960 --> 00:01:12,000
can do so by adding some kind of decoy

33
00:01:12,000 --> 00:01:15,600
proper keys collected from other parties

34
00:01:15,600 --> 00:01:17,200
and then they will jointly form

35
00:01:17,200 --> 00:01:19,200
something like a ring and then generate

36
00:01:19,200 --> 00:01:21,759
one signature output

37
00:01:21,759 --> 00:01:25,280
in a way that it will hide the sender

38
00:01:25,280 --> 00:01:27,520
the actual identity of the actual signer

39
00:01:27,520 --> 00:01:31,119
and then um so from the receiver bob's

40
00:01:31,119 --> 00:01:33,360
point of view um it

41
00:01:33,360 --> 00:01:35,520
cannot see whether this is the signature

42
00:01:35,520 --> 00:01:36,640
output from

43
00:01:36,640 --> 00:01:40,000
alice or all other decoys so one of the

44
00:01:40,000 --> 00:01:42,079
most important property of ring

45
00:01:42,079 --> 00:01:44,640
signature is to hide your region of

46
00:01:44,640 --> 00:01:46,880
course it has two sets also satisfy the

47
00:01:46,880 --> 00:01:48,799
probability of unforgivability as well

48
00:01:48,799 --> 00:01:52,240
so anonymity unforgibility they are

49
00:01:52,240 --> 00:01:54,640
the two most important properties of a

50
00:01:54,640 --> 00:01:57,680
ring signature scheme

51
00:01:58,560 --> 00:02:00,560
why this kind of signature is called

52
00:02:00,560 --> 00:02:03,200
ring signature this is mainly because of

53
00:02:03,200 --> 00:02:05,680
the first field um construction of ring

54
00:02:05,680 --> 00:02:10,160
signature in asia 2001 and 2002

55
00:02:10,160 --> 00:02:12,959
so um i'll briefly review it because our

56
00:02:12,959 --> 00:02:16,080
scheme is highly related to this one

57
00:02:16,080 --> 00:02:17,520
let's recall

58
00:02:17,520 --> 00:02:19,840
one of the fundamental building block of

59
00:02:19,840 --> 00:02:23,440
a classical ring signature so it is

60
00:02:23,440 --> 00:02:25,200
called a type t

61
00:02:25,200 --> 00:02:27,920
or free move signature scheme and one

62
00:02:27,920 --> 00:02:31,120
classical example is this nor signature

63
00:02:31,120 --> 00:02:32,879
so it's no signature or a three move

64
00:02:32,879 --> 00:02:34,879
signature that consists of three steps

65
00:02:34,879 --> 00:02:36,959
one the first one is a commitment steps

66
00:02:36,959 --> 00:02:39,120
which outputs a commitment value capital

67
00:02:39,120 --> 00:02:40,239
r

68
00:02:40,239 --> 00:02:42,879
and then a hash function we apply onto

69
00:02:42,879 --> 00:02:45,519
the message together with the commitment

70
00:02:45,519 --> 00:02:47,440
output a challenge

71
00:02:47,440 --> 00:02:49,599
and then finally there is a response

72
00:02:49,599 --> 00:02:52,400
function that which outputs a response

73
00:02:52,400 --> 00:02:54,560
small set is equal for example in the

74
00:02:54,560 --> 00:02:57,120
snow case is equal to r plus csk so it

75
00:02:57,120 --> 00:02:59,280
is a function on the randomness

76
00:02:59,280 --> 00:03:02,080
challenge and the secret key

77
00:03:02,080 --> 00:03:04,319
and finally in order to verify this type

78
00:03:04,319 --> 00:03:05,920
t signature

79
00:03:05,920 --> 00:03:08,720
there is a verification function b which

80
00:03:08,720 --> 00:03:12,480
reconstruct r from z set and of course

81
00:03:12,480 --> 00:03:15,680
the proper key and then we want the hash

82
00:03:15,680 --> 00:03:17,519
function to check

83
00:03:17,519 --> 00:03:19,680
if the c value the charge value is

84
00:03:19,680 --> 00:03:22,319
correct initial case the commitment

85
00:03:22,319 --> 00:03:24,879
value r is reconstructed in this

86
00:03:24,879 --> 00:03:27,120
equation and then

87
00:03:27,120 --> 00:03:30,080
use it on the hash function to compute

88
00:03:30,080 --> 00:03:32,000
the charge values back and check whether

89
00:03:32,000 --> 00:03:35,360
this c is equal to dc in the signature

90
00:03:35,360 --> 00:03:38,640
so this is a classical type t signatures

91
00:03:38,640 --> 00:03:40,239
there's no

92
00:03:40,239 --> 00:03:43,120
gq and many many other forms of type key

93
00:03:43,120 --> 00:03:44,840
signatures in the

94
00:03:44,840 --> 00:03:48,879
literature so let's see how an aos ring

95
00:03:48,879 --> 00:03:51,519
signature is constructed

96
00:03:51,519 --> 00:03:53,680
so assume that we have

97
00:03:53,680 --> 00:03:57,200
alice the atrocity there in the index j

98
00:03:57,200 --> 00:03:59,680
and that all other decoys are located in

99
00:03:59,680 --> 00:04:03,040
different positions in this ring

100
00:04:03,040 --> 00:04:03,840
so

101
00:04:03,840 --> 00:04:06,319
alex designer picks a random rj small

102
00:04:06,319 --> 00:04:08,080
audrey to generate the commitment

103
00:04:08,080 --> 00:04:09,680
capital rj

104
00:04:09,680 --> 00:04:12,720
through the commitment function a first

105
00:04:12,720 --> 00:04:14,959
as shown in this diagram

106
00:04:14,959 --> 00:04:18,639
and then designer uses rj and to compute

107
00:04:18,639 --> 00:04:20,959
the next challenge cj plus one through

108
00:04:20,959 --> 00:04:22,639
the hash function

109
00:04:22,639 --> 00:04:25,280
so hash the message together with the um

110
00:04:25,280 --> 00:04:27,360
commitment and that it computes to the

111
00:04:27,360 --> 00:04:30,800
next challenge values and then from the

112
00:04:30,800 --> 00:04:32,880
challenge and

113
00:04:32,880 --> 00:04:35,759
then we go to the index j plus one

114
00:04:35,759 --> 00:04:38,080
for this step this is the decoy where

115
00:04:38,080 --> 00:04:40,479
alice does not know the secret key

116
00:04:40,479 --> 00:04:41,680
but

117
00:04:41,680 --> 00:04:44,800
she can text a random response set and

118
00:04:44,800 --> 00:04:47,680
then to reconstruct the commitment out

119
00:04:47,680 --> 00:04:49,680
through the rarification function v

120
00:04:49,680 --> 00:04:50,479
there

121
00:04:50,479 --> 00:04:52,320
and then it will generate the next one

122
00:04:52,320 --> 00:04:54,639
let's see j plus two the next

123
00:04:54,639 --> 00:04:56,400
uh and then he will generate the next

124
00:04:56,400 --> 00:04:58,320
commitment rj plus one and then by the

125
00:04:58,320 --> 00:05:01,199
lg plus one he can compute the um cj

126
00:05:01,199 --> 00:05:03,440
plus two through the hash function and

127
00:05:03,440 --> 00:05:06,240
so on and so forth and then

128
00:05:06,240 --> 00:05:08,160
after j plus one go to j plus two and

129
00:05:08,160 --> 00:05:10,080
then up all the way up to n and then go

130
00:05:10,080 --> 00:05:12,880
back to index one and all the way up to

131
00:05:12,880 --> 00:05:15,759
the index j minus one

132
00:05:15,759 --> 00:05:19,039
so a ring is then formed sequentially so

133
00:05:19,039 --> 00:05:20,720
you can see that why this type of

134
00:05:20,720 --> 00:05:22,160
signature is called resonation in the

135
00:05:22,160 --> 00:05:25,479
first place

136
00:05:25,520 --> 00:05:28,080
so the last step is to close this brain

137
00:05:28,080 --> 00:05:30,400
so the last step we have

138
00:05:30,400 --> 00:05:32,960
um the commitment rj plus one and then

139
00:05:32,960 --> 00:05:34,160
through the hash function we have the

140
00:05:34,160 --> 00:05:36,960
commitment uh the challenge cj

141
00:05:36,960 --> 00:05:38,720
and then finally the last step is to

142
00:05:38,720 --> 00:05:40,160
compute set j

143
00:05:40,160 --> 00:05:42,400
by the response function and using the

144
00:05:42,400 --> 00:05:45,440
secret key of alice skj there

145
00:05:45,440 --> 00:05:47,759
so the rank is completed

146
00:05:47,759 --> 00:05:52,240
and the signature is c1 set one up to

147
00:05:52,240 --> 00:05:54,800
set n so this is the final signatures

148
00:05:54,800 --> 00:05:57,280
and in order to verify then this is very

149
00:05:57,280 --> 00:05:58,880
simple because you can see that this

150
00:05:58,880 --> 00:05:59,759
ring

151
00:05:59,759 --> 00:06:02,400
is formed by some publicly

152
00:06:02,400 --> 00:06:05,039
computable function v and h so um the

153
00:06:05,039 --> 00:06:07,600
raw file can simply run through this

154
00:06:07,600 --> 00:06:08,479
ring

155
00:06:08,479 --> 00:06:12,080
again and then complete the checking

156
00:06:12,080 --> 00:06:13,440
so this is

157
00:06:13,440 --> 00:06:14,960
why this type of signature is called

158
00:06:14,960 --> 00:06:16,560
ring signature

159
00:06:16,560 --> 00:06:18,240
but later on we find out that this type

160
00:06:18,240 --> 00:06:20,000
of ring signature is not efficient

161
00:06:20,000 --> 00:06:22,160
because you can see that the signature

162
00:06:22,160 --> 00:06:25,600
size is n plus one elements there

163
00:06:25,600 --> 00:06:29,440
so it is a on and it is not efficient so

164
00:06:29,440 --> 00:06:32,479
later on in the last two decades

165
00:06:32,479 --> 00:06:34,960
researchers they want to find out if we

166
00:06:34,960 --> 00:06:37,120
can improve the efficiency of ring

167
00:06:37,120 --> 00:06:39,280
signature schemes and we find out a lot

168
00:06:39,280 --> 00:06:40,960
of different construction using

169
00:06:40,960 --> 00:06:44,240
different primitives in cryptography

170
00:06:44,240 --> 00:06:45,840
including um using cryptographic

171
00:06:45,840 --> 00:06:47,199
accumulator

172
00:06:47,199 --> 00:06:48,080
so the

173
00:06:48,080 --> 00:06:49,840
advantage of this approach is that it

174
00:06:49,840 --> 00:06:50,800
can

175
00:06:50,800 --> 00:06:53,599
output some constant sign signature but

176
00:06:53,599 --> 00:06:56,080
in the rsa or parent-based setting but

177
00:06:56,080 --> 00:07:00,159
it requires the use of a trusted setup

178
00:07:00,639 --> 00:07:02,960
recently um there are some electric

179
00:07:02,960 --> 00:07:05,199
space a terminator without using some

180
00:07:05,199 --> 00:07:07,680
trust set up but it will result in a

181
00:07:07,680 --> 00:07:10,000
rather large signatures maybe several

182
00:07:10,000 --> 00:07:12,560
megabytes

183
00:07:12,560 --> 00:07:15,759
so if we do not want to um use trusted

184
00:07:15,759 --> 00:07:18,240
setup then um you suggest to use the

185
00:07:18,240 --> 00:07:20,160
zero knowledge proof based approach

186
00:07:20,160 --> 00:07:23,280
which will give an o log n size ring

187
00:07:23,280 --> 00:07:25,599
signature where n is the number of

188
00:07:25,599 --> 00:07:28,560
proper keys in the ring

189
00:07:28,560 --> 00:07:29,360
and

190
00:07:29,360 --> 00:07:30,800
in um

191
00:07:30,800 --> 00:07:32,880
in the state of the art in this approach

192
00:07:32,880 --> 00:07:34,000
um

193
00:07:34,000 --> 00:07:35,840
most of the paper they will use the

194
00:07:35,840 --> 00:07:37,360
technique called the one-hour friendly

195
00:07:37,360 --> 00:07:40,240
proof or the bulletproof approach um

196
00:07:40,240 --> 00:07:41,840
including the discrete log-based

197
00:07:41,840 --> 00:07:45,680
construction in gk15 in eurogroup 2015

198
00:07:45,680 --> 00:07:48,000
or the latex-based approach

199
00:07:48,000 --> 00:07:50,800
in crypto 2019

200
00:07:50,800 --> 00:07:53,120
this paper is also written by two of my

201
00:07:53,120 --> 00:07:56,120
co-authors

202
00:07:58,160 --> 00:08:00,560
um we also summarize all of the existing

203
00:08:00,560 --> 00:08:02,960
construction here in this table

204
00:08:02,960 --> 00:08:04,960
so um the research question is whether

205
00:08:04,960 --> 00:08:06,560
we can do better

206
00:08:06,560 --> 00:08:08,080
so let's have a look in the vr based

207
00:08:08,080 --> 00:08:09,840
construction we can see that in the last

208
00:08:09,840 --> 00:08:11,599
few years

209
00:08:11,599 --> 00:08:14,479
from 2015 to 2020 we can see a lot of

210
00:08:14,479 --> 00:08:17,199
improvement in terms of um

211
00:08:17,199 --> 00:08:18,639
proving uh

212
00:08:18,639 --> 00:08:20,720
pushing the boundaries from four lock

213
00:08:20,720 --> 00:08:23,360
and five floor end elements to two lock

214
00:08:23,360 --> 00:08:27,840
end elements in both ccs19 and fc 2020

215
00:08:27,840 --> 00:08:30,000
and um this fc paper is also written by

216
00:08:30,000 --> 00:08:31,520
myself and together with some of the

217
00:08:31,520 --> 00:08:33,440
coopers in this paper as well

218
00:08:33,440 --> 00:08:36,399
so um we we push the uh signature size

219
00:08:36,399 --> 00:08:39,120
to a rather low level and it is all lock

220
00:08:39,120 --> 00:08:40,799
enzymes for the lattice-based

221
00:08:40,799 --> 00:08:42,080
construction

222
00:08:42,080 --> 00:08:44,240
also for that is bl-based construction

223
00:08:44,240 --> 00:08:46,640
for the lattice-based construction

224
00:08:46,640 --> 00:08:49,760
um we have the um

225
00:08:49,760 --> 00:08:52,160
uh the on-site signature ring signature

226
00:08:52,160 --> 00:08:55,440
in acns 2019 but it is becomes very

227
00:08:55,440 --> 00:08:57,760
impractical when the ring size becomes

228
00:08:57,760 --> 00:08:58,880
large

229
00:08:58,880 --> 00:09:00,720
and the breakthroughs come from the

230
00:09:00,720 --> 00:09:04,480
ccs19 as well as the asian clip 20 paper

231
00:09:04,480 --> 00:09:06,480
they give an old lock and size ring

232
00:09:06,480 --> 00:09:07,600
signature

233
00:09:07,600 --> 00:09:08,959
and they are

234
00:09:08,959 --> 00:09:11,760
already quite practical but for a ring

235
00:09:11,760 --> 00:09:14,480
size of like one to one thousand to four

236
00:09:14,480 --> 00:09:16,480
thousand

237
00:09:16,480 --> 00:09:17,760
um

238
00:09:17,760 --> 00:09:20,320
but the question is okay can we do

239
00:09:20,320 --> 00:09:21,360
better

240
00:09:21,360 --> 00:09:23,279
give a better construction in both dl

241
00:09:23,279 --> 00:09:25,920
based and latinx space setting in one

242
00:09:25,920 --> 00:09:28,480
single construction

243
00:09:28,480 --> 00:09:30,240
this is mainly because um you can see

244
00:09:30,240 --> 00:09:32,320
that these two uh

245
00:09:32,320 --> 00:09:33,680
tables you can see that the papers are

246
00:09:33,680 --> 00:09:35,279
different so they use a little bit

247
00:09:35,279 --> 00:09:37,680
different approach to construct and one

248
00:09:37,680 --> 00:09:39,920
unique contribution about this paper is

249
00:09:39,920 --> 00:09:42,320
that we give a generic construction

250
00:09:42,320 --> 00:09:45,279
using the classical ring approach which

251
00:09:45,279 --> 00:09:47,680
hasn't been used for pretty long time

252
00:09:47,680 --> 00:09:50,800
and when it is instantiated in the dl

253
00:09:50,800 --> 00:09:53,040
base or lattice space setting it will

254
00:09:53,040 --> 00:09:55,600
give one of the shortest rings and

255
00:09:55,600 --> 00:09:59,519
actually scheme in vl base and also in

256
00:09:59,519 --> 00:10:02,000
the electric space for the lattice-based

257
00:10:02,000 --> 00:10:02,959
schemes

258
00:10:02,959 --> 00:10:06,399
we still have the on size ring signature

259
00:10:06,399 --> 00:10:09,279
so our rings essentially is shorter for

260
00:10:09,279 --> 00:10:11,440
a ring size of maybe less than one

261
00:10:11,440 --> 00:10:14,399
thousand but for large ring size then

262
00:10:14,399 --> 00:10:16,800
the old end size ring signature schemes

263
00:10:16,800 --> 00:10:18,560
are still better

264
00:10:18,560 --> 00:10:22,479
so this is our main contribution

265
00:10:23,440 --> 00:10:25,600
so let's have a look

266
00:10:25,600 --> 00:10:28,079
into high-level idea of our construction

267
00:10:28,079 --> 00:10:32,519
and why our paper is called during

268
00:10:33,200 --> 00:10:35,839
and the overview is that actually we try

269
00:10:35,839 --> 00:10:38,240
to revisit the classical ring approach

270
00:10:38,240 --> 00:10:40,800
and we find out some solution to make it

271
00:10:40,800 --> 00:10:42,880
shorter that is ola and size in the

272
00:10:42,880 --> 00:10:45,120
dl-based setting

273
00:10:45,120 --> 00:10:47,440
um when we think about what is the

274
00:10:47,440 --> 00:10:49,040
construction of the classical ring

275
00:10:49,040 --> 00:10:50,959
approach the difficulty to further

276
00:10:50,959 --> 00:10:53,519
complexity is because it's mainly

277
00:10:53,519 --> 00:10:56,240
because that um they include the hash

278
00:10:56,240 --> 00:10:58,720
function in the ring structure and when

279
00:10:58,720 --> 00:11:00,800
we instantiate those hash functions then

280
00:11:00,800 --> 00:11:03,839
we usually use those um like sha2

281
00:11:03,839 --> 00:11:05,920
and then it's very difficult to put it

282
00:11:05,920 --> 00:11:07,600
in a serial knowledge roof to further

283
00:11:07,600 --> 00:11:09,279
compress it

284
00:11:09,279 --> 00:11:10,079
so

285
00:11:10,079 --> 00:11:12,800
our very high level idea

286
00:11:12,800 --> 00:11:14,880
to form our construction is that we try

287
00:11:14,880 --> 00:11:17,760
to remove the hash function out of the

288
00:11:17,760 --> 00:11:20,320
ring and try to form a ring with a very

289
00:11:20,320 --> 00:11:22,800
simple algebraic structure and that's

290
00:11:22,800 --> 00:11:25,360
why we can further compress it

291
00:11:25,360 --> 00:11:28,880
using some serious proof

292
00:11:28,880 --> 00:11:31,120
and we why we want to keep the classical

293
00:11:31,120 --> 00:11:33,279
ring approach is that the ring structure

294
00:11:33,279 --> 00:11:35,839
itself already provides a certain level

295
00:11:35,839 --> 00:11:37,920
of anonymity just like the asian group

296
00:11:37,920 --> 00:11:39,839
o1 and o2 paper

297
00:11:39,839 --> 00:11:42,320
and we want to build a very simple

298
00:11:42,320 --> 00:11:44,079
algebraic operation

299
00:11:44,079 --> 00:11:46,640
like addition or multiplication to allow

300
00:11:46,640 --> 00:11:49,680
compression in the ring

301
00:11:49,680 --> 00:11:50,959
so

302
00:11:50,959 --> 00:11:53,680
our construction consists of two ranks

303
00:11:53,680 --> 00:11:56,560
a ring of commitments and a range of

304
00:11:56,560 --> 00:11:59,360
challenges and these two ranks are

305
00:11:59,360 --> 00:12:01,760
linked by a hash function so this is a

306
00:12:01,760 --> 00:12:04,320
very high level overview

307
00:12:04,320 --> 00:12:06,000
and our construction we also need

308
00:12:06,000 --> 00:12:08,839
something very similar to a type t

309
00:12:08,839 --> 00:12:11,279
signature but um actually we need

310
00:12:11,279 --> 00:12:12,639
something a little bit different we call

311
00:12:12,639 --> 00:12:17,279
the taipei star canonical identification

312
00:12:17,279 --> 00:12:18,320
and

313
00:12:18,320 --> 00:12:20,959
um why we call what is the difference so

314
00:12:20,959 --> 00:12:23,200
we roughly talk about it below

315
00:12:23,200 --> 00:12:25,360
so firstly we require that the verify

316
00:12:25,360 --> 00:12:27,040
function v

317
00:12:27,040 --> 00:12:30,079
originally is a function on p k c and z

318
00:12:30,079 --> 00:12:32,320
actually we require that this function

319
00:12:32,320 --> 00:12:35,040
can be separated into two parts v one

320
00:12:35,040 --> 00:12:36,800
set multiplied

321
00:12:36,800 --> 00:12:39,440
by v2 pkc

322
00:12:39,440 --> 00:12:41,440
so we find out that this type of

323
00:12:41,440 --> 00:12:44,399
structure satisfied most of the

324
00:12:44,399 --> 00:12:46,639
construction we know in the free move

325
00:12:46,639 --> 00:12:48,720
setting like this north central one you

326
00:12:48,720 --> 00:12:50,560
can see that

327
00:12:50,560 --> 00:12:53,519
the commitment value r is computed from

328
00:12:53,519 --> 00:12:56,079
a function of set and a function of p k

329
00:12:56,079 --> 00:12:58,639
and c so this is a v1

330
00:12:58,639 --> 00:13:02,880
and this the second part is the v2

331
00:13:04,079 --> 00:13:05,120
and

332
00:13:05,120 --> 00:13:08,079
we also require that v1 is homomorphic

333
00:13:08,079 --> 00:13:10,560
either additive or multiplicative

334
00:13:10,560 --> 00:13:14,160
and then um given the sk and c there

335
00:13:14,160 --> 00:13:16,000
exists a function t

336
00:13:16,000 --> 00:13:19,760
which um on input s k and z output set

337
00:13:19,760 --> 00:13:23,920
prime such that vk set prime is equal to

338
00:13:23,920 --> 00:13:26,880
v2 pkc

339
00:13:27,120 --> 00:13:28,639
and then we also require that this

340
00:13:28,639 --> 00:13:30,880
change space is a group it is satisfied

341
00:13:30,880 --> 00:13:34,160
in most setting and we also require that

342
00:13:34,160 --> 00:13:35,680
the canonical identification has a

343
00:13:35,680 --> 00:13:38,639
special soundness in the dlba setting

344
00:13:38,639 --> 00:13:40,959
so um we found that most of the scheme

345
00:13:40,959 --> 00:13:42,399
we know is

346
00:13:42,399 --> 00:13:43,519
actually

347
00:13:43,519 --> 00:13:44,320
um

348
00:13:44,320 --> 00:13:46,000
satisfy this property like the snow

349
00:13:46,000 --> 00:13:47,360
identification

350
00:13:47,360 --> 00:13:48,720
the identification scheme from the

351
00:13:48,720 --> 00:13:50,399
casper signature the transparency

352
00:13:50,399 --> 00:13:53,440
notification or the automotive snow

353
00:13:53,440 --> 00:13:56,079
and as well as the gq identification in

354
00:13:56,079 --> 00:13:58,720
the rsa based setting

355
00:13:58,720 --> 00:14:00,480
we also find out that the lattice based

356
00:14:00,480 --> 00:14:02,720
identification from the fiasco with a

357
00:14:02,720 --> 00:14:05,440
broad approach they also satisfy this

358
00:14:05,440 --> 00:14:06,480
setting

359
00:14:06,480 --> 00:14:07,279
but

360
00:14:07,279 --> 00:14:09,440
for the electric space setting um the

361
00:14:09,440 --> 00:14:10,720
special silence

362
00:14:10,720 --> 00:14:12,959
definition does not directly apply to

363
00:14:12,959 --> 00:14:15,519
that because there is something we call

364
00:14:15,519 --> 00:14:18,240
the knowledge gap such that the um the

365
00:14:18,240 --> 00:14:20,480
weakness extracted from the two

366
00:14:20,480 --> 00:14:22,240
transcript is not

367
00:14:22,240 --> 00:14:24,399
identical to the original one therefore

368
00:14:24,399 --> 00:14:27,199
we need to modify the definition for

369
00:14:27,199 --> 00:14:29,360
this special sinus a little bit

370
00:14:29,360 --> 00:14:32,320
for dynamic space setting in our paper

371
00:14:32,320 --> 00:14:33,680
in um

372
00:14:33,680 --> 00:14:35,920
in the conference version and we use the

373
00:14:35,920 --> 00:14:38,240
notion called the special impersonation

374
00:14:38,240 --> 00:14:40,800
that is a combination of special

375
00:14:40,800 --> 00:14:41,920
assignments together with the

376
00:14:41,920 --> 00:14:44,160
impersonation for canonical

377
00:14:44,160 --> 00:14:46,399
identification in order to deal with

378
00:14:46,399 --> 00:14:48,320
this issue so we

379
00:14:48,320 --> 00:14:52,480
add a new notion security notion there

380
00:14:53,199 --> 00:14:55,680
so this is a new building block

381
00:14:55,680 --> 00:14:57,519
and then let's look into the

382
00:14:57,519 --> 00:14:59,920
construction so we have remember we have

383
00:14:59,920 --> 00:15:02,639
two rings the ring the commitment ring

384
00:15:02,639 --> 00:15:04,800
and the ceiling the challenge rate and

385
00:15:04,800 --> 00:15:06,959
we use the same setting the actual sign

386
00:15:06,959 --> 00:15:08,000
alice

387
00:15:08,000 --> 00:15:10,480
is at the position j there

388
00:15:10,480 --> 00:15:12,399
so you know to start this one

389
00:15:12,399 --> 00:15:15,440
firstly alice signer picks um the small

390
00:15:15,440 --> 00:15:18,560
lj the randomness

391
00:15:18,560 --> 00:15:20,880
and then the sign

392
00:15:20,880 --> 00:15:24,160
takes the random challenges see what um

393
00:15:24,160 --> 00:15:28,320
c1 up to cn except cj so they will fix

394
00:15:28,320 --> 00:15:32,399
all other random c there

395
00:15:32,399 --> 00:15:33,519
and then

396
00:15:33,519 --> 00:15:36,880
um alice will form an r ring together in

397
00:15:36,880 --> 00:15:40,560
one single steps by a computation of

398
00:15:40,560 --> 00:15:42,560
you can uh this following this equation

399
00:15:42,560 --> 00:15:44,880
r is equal to alj

400
00:15:44,880 --> 00:15:49,199
times um v2 pkj plus 1 cj plus 1

401
00:15:49,199 --> 00:15:51,120
all the way up to v2 pk and cn

402
00:15:51,120 --> 00:15:52,880
multiplied to pk

403
00:15:52,880 --> 00:15:56,880
on v2 pk1 c1 all the way up to v2 pkj

404
00:15:56,880 --> 00:15:59,519
minus 1 cj minus 1.

405
00:15:59,519 --> 00:16:02,639
so one single computation will complete

406
00:16:02,639 --> 00:16:05,600
this r rank

407
00:16:06,160 --> 00:16:09,360
then we have a commitment r using the v2

408
00:16:09,360 --> 00:16:11,519
function and then we use this r to

409
00:16:11,519 --> 00:16:13,519
compute the challenge it's equal to the

410
00:16:13,519 --> 00:16:16,079
hash of r instead of all public keys and

411
00:16:16,079 --> 00:16:18,320
the message m

412
00:16:18,320 --> 00:16:22,800
next is to form a c ring by a simple

413
00:16:22,800 --> 00:16:24,399
computation

414
00:16:24,399 --> 00:16:26,079
for example we want to compute c j that

415
00:16:26,079 --> 00:16:28,880
satisfy this relation c is equal to c 1

416
00:16:28,880 --> 00:16:32,399
times g 2 all the way times c n

417
00:16:32,399 --> 00:16:34,160
so assume that

418
00:16:34,160 --> 00:16:36,240
this this symbol is the inverse of the

419
00:16:36,240 --> 00:16:39,279
multiplicity multiplication sign there

420
00:16:39,279 --> 00:16:41,199
so we have the um c

421
00:16:41,199 --> 00:16:43,279
after the hash function we have the

422
00:16:43,279 --> 00:16:45,519
capital r sorry the small c there and

423
00:16:45,519 --> 00:16:48,079
then we divide by c j minus one divided

424
00:16:48,079 --> 00:16:49,839
by c j minus 2

425
00:16:49,839 --> 00:16:52,160
up to c n and then divide by c 1 divided

426
00:16:52,160 --> 00:16:56,079
by c 2 all the way d y up to c j minus 1

427
00:16:56,079 --> 00:16:59,279
then 3 we cover cj

428
00:16:59,279 --> 00:17:02,800
and then the last step is to use this cj

429
00:17:02,800 --> 00:17:05,919
to form this small set and this small

430
00:17:05,919 --> 00:17:08,240
set is computed by the capital set the

431
00:17:08,240 --> 00:17:11,439
response function

432
00:17:11,599 --> 00:17:14,079
so you can see that this signature here

433
00:17:14,079 --> 00:17:16,559
now is a little bit different it's one

434
00:17:16,559 --> 00:17:18,720
single response together with n

435
00:17:18,720 --> 00:17:21,679
challenges so this is a small set c one

436
00:17:21,679 --> 00:17:24,160
up to cn recorded in the aos

437
00:17:24,160 --> 00:17:27,919
construction this is one challenge and

438
00:17:27,919 --> 00:17:32,080
and response this one is one response

439
00:17:32,080 --> 00:17:35,120
and and challenges so remember this one

440
00:17:35,120 --> 00:17:38,080
this um this distance is quite important

441
00:17:38,080 --> 00:17:41,678
for our electric space construction

442
00:17:42,400 --> 00:17:44,320
so how to verify

443
00:17:44,320 --> 00:17:47,919
for the verification actually the r is

444
00:17:47,919 --> 00:17:49,440
reconstructed

445
00:17:49,440 --> 00:17:52,640
from the v1 function and re2 function um

446
00:17:52,640 --> 00:17:54,480
the rebound function is on to the single

447
00:17:54,480 --> 00:17:56,720
response set and the retool function is

448
00:17:56,720 --> 00:18:00,400
on all proper keys and all challenges

449
00:18:00,400 --> 00:18:02,240
and then finally we

450
00:18:02,240 --> 00:18:04,240
use the hash function to check whether

451
00:18:04,240 --> 00:18:06,400
the c value is correct or not

452
00:18:06,400 --> 00:18:09,440
by this equation

453
00:18:09,679 --> 00:18:12,080
so this is the high level overview of

454
00:18:12,080 --> 00:18:16,320
our dual rate and we prove the security

455
00:18:16,320 --> 00:18:18,640
of our scheme um

456
00:18:18,640 --> 00:18:21,919
firstly we show that the anonymity um is

457
00:18:21,919 --> 00:18:23,520
actually provided by the rank structure

458
00:18:23,520 --> 00:18:25,679
in the random oracle model

459
00:18:25,679 --> 00:18:28,160
this is quite similar to the uh uh the

460
00:18:28,160 --> 00:18:30,960
asian grip 01 and o2 paper

461
00:18:30,960 --> 00:18:33,360
by the ring structure actually no matter

462
00:18:33,360 --> 00:18:37,600
where the um the alice designer start

463
00:18:37,600 --> 00:18:39,760
she can be in the position j position

464
00:18:39,760 --> 00:18:42,480
one position two it doesn't matter if

465
00:18:42,480 --> 00:18:43,840
it is uh

466
00:18:43,840 --> 00:18:46,799
no one is able to determine whether um

467
00:18:46,799 --> 00:18:49,840
which location she is

468
00:18:49,840 --> 00:18:52,320
and for unforgivability actually our

469
00:18:52,320 --> 00:18:55,200
paper reduce the security of this type t

470
00:18:55,200 --> 00:18:57,120
star identification

471
00:18:57,120 --> 00:18:58,480
is reduced to this one in the random

472
00:18:58,480 --> 00:19:00,080
oracle model that means that uh if there

473
00:19:00,080 --> 00:19:01,919
is an adversary at

474
00:19:01,919 --> 00:19:05,120
can forge this dual ring then it can

475
00:19:05,120 --> 00:19:08,240
break the um security

476
00:19:08,240 --> 00:19:10,960
of the underlying identification schemes

477
00:19:10,960 --> 00:19:14,320
in the random oracle model

478
00:19:17,679 --> 00:19:20,160
so once we have the

479
00:19:20,160 --> 00:19:21,520
um due ring

480
00:19:21,520 --> 00:19:23,679
then it's not very difficult to get the

481
00:19:23,679 --> 00:19:26,080
ecc base as well as the latter space

482
00:19:26,080 --> 00:19:28,080
construction

483
00:19:28,080 --> 00:19:29,520
so remember that

484
00:19:29,520 --> 00:19:31,520
our signature during the genetic

485
00:19:31,520 --> 00:19:34,559
construction actually gives a o n size

486
00:19:34,559 --> 00:19:36,799
generic ring solution

487
00:19:36,799 --> 00:19:39,360
consists of one response and end

488
00:19:39,360 --> 00:19:40,640
challenges

489
00:19:40,640 --> 00:19:43,600
but we know that by applying a suitable

490
00:19:43,600 --> 00:19:46,720
instantiation and a suitable seal

491
00:19:46,720 --> 00:19:49,440
knowledge proof it is not difficult to

492
00:19:49,440 --> 00:19:52,240
compress it to a old lock and size proof

493
00:19:52,240 --> 00:19:54,480
using the recent advance in the steel

494
00:19:54,480 --> 00:19:56,320
knowledge proof system

495
00:19:56,320 --> 00:19:58,160
in the dr base setting

496
00:19:58,160 --> 00:20:01,520
actually the the relationship between c

497
00:20:01,520 --> 00:20:04,240
and c 1 up to c n is following this

498
00:20:04,240 --> 00:20:07,200
addition relation so c is equal to c1

499
00:20:07,200 --> 00:20:12,320
at c2 on the all the way up to cn or p

500
00:20:12,320 --> 00:20:14,720
and then we put in this paper we propose

501
00:20:14,720 --> 00:20:16,960
a non-interactive some argument of

502
00:20:16,960 --> 00:20:20,559
knowledge we call the nisk to compress

503
00:20:20,559 --> 00:20:23,120
this c1 up to cm using a zero knowledge

504
00:20:23,120 --> 00:20:25,120
proof system

505
00:20:25,120 --> 00:20:26,640
actually this construction is quite

506
00:20:26,640 --> 00:20:29,280
similar to the bullet proof

507
00:20:29,280 --> 00:20:31,360
for inner product relation

508
00:20:31,360 --> 00:20:34,000
actually um you can see that this one is

509
00:20:34,000 --> 00:20:36,000
a simplified version of an inner product

510
00:20:36,000 --> 00:20:38,559
relation this is a inner product of this

511
00:20:38,559 --> 00:20:41,760
challenge vector multiplies in one

512
00:20:41,760 --> 00:20:43,760
vector and it is equal to the proper

513
00:20:43,760 --> 00:20:44,960
value c

514
00:20:44,960 --> 00:20:47,440
so we can simplify the bullet proof and

515
00:20:47,440 --> 00:20:48,480
then

516
00:20:48,480 --> 00:20:50,000
this is shown in the diagram on the

517
00:20:50,000 --> 00:20:51,760
right hand side but i will not go into

518
00:20:51,760 --> 00:20:53,360
the details

519
00:20:53,360 --> 00:20:54,320
um

520
00:20:54,320 --> 00:20:56,960
but um we can see that um actually

521
00:20:56,960 --> 00:20:59,679
because of this simplified relation our

522
00:20:59,679 --> 00:21:02,400
ana essay actually save about half of

523
00:21:02,400 --> 00:21:04,400
the computation in the bulletproof

524
00:21:04,400 --> 00:21:07,039
system due to us the simplicity of this

525
00:21:07,039 --> 00:21:09,520
relation

526
00:21:10,400 --> 00:21:13,840
by combining during with the nissa and

527
00:21:13,840 --> 00:21:16,159
then we also need to um move the

528
00:21:16,159 --> 00:21:18,240
parameters a little bit swap a little

529
00:21:18,240 --> 00:21:20,720
bit and then we can give our

530
00:21:20,720 --> 00:21:23,440
construction of the ecc base during

531
00:21:23,440 --> 00:21:26,799
we call it during ec

532
00:21:27,120 --> 00:21:30,799
and we also implemented it and

533
00:21:30,799 --> 00:21:32,799
we compare them

534
00:21:32,799 --> 00:21:34,559
with our signature size with some of the

535
00:21:34,559 --> 00:21:37,280
existing schemes and we can see that

536
00:21:37,280 --> 00:21:40,559
our scheme is actually the shortest one

537
00:21:40,559 --> 00:21:42,400
for all the ring size

538
00:21:42,400 --> 00:21:45,360
and we implement our running time in the

539
00:21:45,360 --> 00:21:49,360
uh in a macbook um using python and then

540
00:21:49,360 --> 00:21:51,760
um the running time shows that for a

541
00:21:51,760 --> 00:21:55,360
ring size up to one 1000 then um the

542
00:21:55,360 --> 00:21:57,120
designing time is a little bit slower

543
00:21:57,120 --> 00:21:58,799
like 10 seconds but it's still

544
00:21:58,799 --> 00:22:00,880
acceptable and the verification time is

545
00:22:00,880 --> 00:22:04,960
somewhere between 2.5 around 2.5 seconds

546
00:22:04,960 --> 00:22:07,840
and if someone can optimize it like

547
00:22:07,840 --> 00:22:11,280
using c and fast libraries perhaps um we

548
00:22:11,280 --> 00:22:12,799
can still

549
00:22:12,799 --> 00:22:15,280
have a shorter verification time and our

550
00:22:15,280 --> 00:22:19,280
scheme is quite practical in that sense

551
00:22:22,960 --> 00:22:25,679
so let's summarize our elliptic curve

552
00:22:25,679 --> 00:22:28,240
based construction for the lattice-based

553
00:22:28,240 --> 00:22:31,360
setting i'll remember that um

554
00:22:31,360 --> 00:22:32,880
our scheme

555
00:22:32,880 --> 00:22:35,840
is o lock on size in the generic

556
00:22:35,840 --> 00:22:38,640
construction and unlike the lipid curve

557
00:22:38,640 --> 00:22:41,600
based construction um there are no very

558
00:22:41,600 --> 00:22:44,159
efficient or highly efficient ck proof

559
00:22:44,159 --> 00:22:45,760
um in the lattice based setting that we

560
00:22:45,760 --> 00:22:48,240
can use but interestingly

561
00:22:48,240 --> 00:22:50,480
our scheme is already highly efficient

562
00:22:50,480 --> 00:22:52,240
in the electric space setting is mainly

563
00:22:52,240 --> 00:22:54,880
because our scheme consists of one

564
00:22:54,880 --> 00:22:57,760
single response and n challenges and we

565
00:22:57,760 --> 00:23:00,080
know that the challenge the size of

566
00:23:00,080 --> 00:23:02,799
challenge in the latin space schemes are

567
00:23:02,799 --> 00:23:06,080
rather small like 256 bits as compared

568
00:23:06,080 --> 00:23:08,000
to the size of a response in the latin

569
00:23:08,000 --> 00:23:10,240
space attack which is usually at least a

570
00:23:10,240 --> 00:23:12,799
few kilobytes

571
00:23:12,799 --> 00:23:14,159
so we can

572
00:23:14,159 --> 00:23:17,120
see that we need only one response and

573
00:23:17,120 --> 00:23:19,520
and very small challenges

574
00:23:19,520 --> 00:23:21,120
so um we

575
00:23:21,120 --> 00:23:23,440
obtain a very compact lattice-based ring

576
00:23:23,440 --> 00:23:25,280
sensor even without requiring a

577
00:23:25,280 --> 00:23:28,879
lattice-based sum argument

578
00:23:29,600 --> 00:23:32,480
and we give our type key canonical

579
00:23:32,480 --> 00:23:33,919
identification

580
00:23:33,919 --> 00:23:35,919
from the lattice-based setting using the

581
00:23:35,919 --> 00:23:37,760
rejection sampling technique

582
00:23:37,760 --> 00:23:41,279
and um we will give our concrete

583
00:23:41,279 --> 00:23:42,720
parameter setting

584
00:23:42,720 --> 00:23:45,200
in the paper but um the result are

585
00:23:45,200 --> 00:23:47,039
summarized below

586
00:23:47,039 --> 00:23:49,360
our scheme is the shortest one for ring

587
00:23:49,360 --> 00:23:52,480
size between four to one

588
00:23:52,480 --> 00:23:55,480
1946

589
00:23:55,919 --> 00:23:57,919
we believe that it is quite useful in

590
00:23:57,919 --> 00:23:59,760
practice for example the rank size of a

591
00:23:59,760 --> 00:24:01,360
monaro

592
00:24:01,360 --> 00:24:02,400
because

593
00:24:02,400 --> 00:24:03,200
a

594
00:24:03,200 --> 00:24:05,760
a ring size of a minion

595
00:24:05,760 --> 00:24:07,360
ring members is not practical because

596
00:24:07,360 --> 00:24:09,840
you also need to send all one million

597
00:24:09,840 --> 00:24:11,600
proper keys of the ring member so it's

598
00:24:11,600 --> 00:24:13,360
not practical to have this

599
00:24:13,360 --> 00:24:14,400
uh

600
00:24:14,400 --> 00:24:16,320
extremely large ring size so we believe

601
00:24:16,320 --> 00:24:18,640
that something around 1000 is more

602
00:24:18,640 --> 00:24:21,600
reasonable in that sense

603
00:24:21,600 --> 00:24:24,240
so this is the contribution of our paper

604
00:24:24,240 --> 00:24:27,200
although our paper is old and sized in

605
00:24:27,200 --> 00:24:29,360
the letter space construction our ring

606
00:24:29,360 --> 00:24:33,440
size our signature is still quite small

607
00:24:33,440 --> 00:24:36,080
and we also notice that in

608
00:24:36,080 --> 00:24:38,480
this conference crypto 21 there is

609
00:24:38,480 --> 00:24:41,279
another paper um they propose another

610
00:24:41,279 --> 00:24:42,720
ring signature in the latin space

611
00:24:42,720 --> 00:24:44,960
setting and they

612
00:24:44,960 --> 00:24:47,440
improved the previous result arm by

613
00:24:47,440 --> 00:24:48,559
quite a lot

614
00:24:48,559 --> 00:24:50,880
by reducing the constant terms in the

615
00:24:50,880 --> 00:24:52,720
lattice-based construction

616
00:24:52,720 --> 00:24:55,679
and we can see that um they can even

617
00:24:55,679 --> 00:24:59,600
create a ring scenario of 1024

618
00:24:59,600 --> 00:25:00,799
ring members

619
00:25:00,799 --> 00:25:03,520
which is smaller than our construction

620
00:25:03,520 --> 00:25:06,559
so um when we compare our skin with this

621
00:25:06,559 --> 00:25:09,039
our scheme the electric space lb is

622
00:25:09,039 --> 00:25:11,440
still the shortest run between ring size

623
00:25:11,440 --> 00:25:14,240
of 4 and 452

624
00:25:14,240 --> 00:25:18,240
and for the figure between 453 to 505 we

625
00:25:18,240 --> 00:25:20,559
do not have a actual figure in their

626
00:25:20,559 --> 00:25:22,400
paper so we cannot compare

627
00:25:22,400 --> 00:25:26,159
and for a ring size larger than 505 then

628
00:25:26,159 --> 00:25:29,039
their papers are better so this is a

629
00:25:29,039 --> 00:25:31,440
very rough comparison between our scheme

630
00:25:31,440 --> 00:25:34,159
and their scheme

631
00:25:34,320 --> 00:25:36,799
but we also want to point out that one

632
00:25:36,799 --> 00:25:39,440
very important part of our point of our

633
00:25:39,440 --> 00:25:41,760
scheme is that the computation of our

634
00:25:41,760 --> 00:25:44,080
scheme is extremely fast this is mainly

635
00:25:44,080 --> 00:25:47,600
because of the computation of our um

636
00:25:47,600 --> 00:25:50,240
challenge rank is very simple just a

637
00:25:50,240 --> 00:25:53,600
computation of a 256 bit string or

638
00:25:53,600 --> 00:25:54,640
numbers

639
00:25:54,640 --> 00:25:57,120
so uh the only slow part is the

640
00:25:57,120 --> 00:25:58,960
computation of the outright

641
00:25:58,960 --> 00:26:01,600
so the computation is extremely fast and

642
00:26:01,600 --> 00:26:03,840
we compare with one of the uh faster

643
00:26:03,840 --> 00:26:06,880
scheme in quickbooster 9 19 which has a

644
00:26:06,880 --> 00:26:09,440
implementation so we can compare it

645
00:26:09,440 --> 00:26:11,919
and when it was in the in the same paper

646
00:26:11,919 --> 00:26:14,080
running in the same computer um we can

647
00:26:14,080 --> 00:26:16,480
see that um their scheme can only run

648
00:26:16,480 --> 00:26:18,320
for a ring size up to

649
00:26:18,320 --> 00:26:21,039
64. because the next parameter setting

650
00:26:21,039 --> 00:26:23,559
in their paper is a ring size of

651
00:26:23,559 --> 00:26:27,039
1024 and we cannot run

652
00:26:27,039 --> 00:26:29,919
their scheme in a reasonable time

653
00:26:29,919 --> 00:26:31,520
so we can see that um their skin is

654
00:26:31,520 --> 00:26:33,440
already very slow

655
00:26:33,440 --> 00:26:36,480
in 64 during size of trick 64. but our

656
00:26:36,480 --> 00:26:39,120
skin is still practical for ring size of

657
00:26:39,120 --> 00:26:41,279
maybe more than 200

658
00:26:41,279 --> 00:26:43,840
so we can find see that our scheme is

659
00:26:43,840 --> 00:26:45,600
extremely practical

660
00:26:45,600 --> 00:26:48,080
when it is implemented in a macbook

661
00:26:48,080 --> 00:26:51,639
using private

662
00:26:53,440 --> 00:26:55,840
to conclude our paper actually proposed

663
00:26:55,840 --> 00:26:57,600
a generic construction of ring signature

664
00:26:57,600 --> 00:27:00,320
using a new dual ring structure

665
00:27:00,320 --> 00:27:02,960
following the classical ring approach

666
00:27:02,960 --> 00:27:05,360
which is quite different from

667
00:27:05,360 --> 00:27:07,919
the papers in the last few years

668
00:27:07,919 --> 00:27:09,760
um when it is instantiated in the

669
00:27:09,760 --> 00:27:11,279
discrete log base setting it is the

670
00:27:11,279 --> 00:27:14,240
shortest one without using trust set up

671
00:27:14,240 --> 00:27:17,200
and in the letter space setting we give

672
00:27:17,200 --> 00:27:19,360
the shortest ring signature for ring

673
00:27:19,360 --> 00:27:22,559
size between 4 to 500

674
00:27:22,559 --> 00:27:26,240
and when it's implemented our schemes

675
00:27:26,240 --> 00:27:28,240
both in the via base and the lattice

676
00:27:28,240 --> 00:27:29,840
space setting they are both quite

677
00:27:29,840 --> 00:27:32,159
practical

678
00:27:32,159 --> 00:27:34,720
so thank you for listening to our

679
00:27:34,720 --> 00:27:36,880
schemes and if you have any questions

680
00:27:36,880 --> 00:27:41,480
feel free to send me an email thank you

