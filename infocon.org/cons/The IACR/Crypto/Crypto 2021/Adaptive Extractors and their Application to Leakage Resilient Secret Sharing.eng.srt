1
00:00:01,040 --> 00:00:03,439
hi everyone i am saya lakshmi bhavana

2
00:00:03,439 --> 00:00:06,799
obatu from microsoft research

3
00:00:06,799 --> 00:00:08,960
and in this video i will talk about our

4
00:00:08,960 --> 00:00:11,200
paper on adaptive extractors and their

5
00:00:11,200 --> 00:00:13,280
application to leakage resilient secret

6
00:00:13,280 --> 00:00:14,240
sharing

7
00:00:14,240 --> 00:00:16,160
this is joint work with nishant chandra

8
00:00:16,160 --> 00:00:20,480
bhavna kanu kurti and shruti saker

9
00:00:20,960 --> 00:00:23,359
our initial focus will be on adaptive

10
00:00:23,359 --> 00:00:24,800
extractors

11
00:00:24,800 --> 00:00:26,560
and then we'll move on to leakage

12
00:00:26,560 --> 00:00:29,279
resilient secret sharing schemes

13
00:00:29,279 --> 00:00:31,760
abbreviated as lrss discussing their

14
00:00:31,760 --> 00:00:34,399
definition and takeache models

15
00:00:34,399 --> 00:00:36,320
and finally

16
00:00:36,320 --> 00:00:39,680
our construction and security

17
00:00:39,680 --> 00:00:42,480
before understanding adaptive extractors

18
00:00:42,480 --> 00:00:47,279
let's first see what extractors are

19
00:00:47,760 --> 00:00:49,440
they are introduced by lissan and

20
00:00:49,440 --> 00:00:52,719
zukermann in 1996 as deterministic

21
00:00:52,719 --> 00:00:55,360
algorithms that take in a long entropic

22
00:00:55,360 --> 00:00:56,719
source w

23
00:00:56,719 --> 00:00:58,879
which acts as a source of imperfect

24
00:00:58,879 --> 00:01:01,760
randomness and a short uniform seed s

25
00:01:01,760 --> 00:01:04,720
which acts as a catalyst to output a

26
00:01:04,720 --> 00:01:06,799
long uniform looking string

27
00:01:06,799 --> 00:01:09,200
formally the extractor output is

28
00:01:09,200 --> 00:01:11,200
guaranteed to look indistinguishable

29
00:01:11,200 --> 00:01:13,760
from uniform even given the seed and

30
00:01:13,760 --> 00:01:16,479
this guarantee holds true even in the

31
00:01:16,479 --> 00:01:19,439
presence of some arbitrary leakage

32
00:01:19,439 --> 00:01:20,400
on

33
00:01:20,400 --> 00:01:22,159
w

34
00:01:22,159 --> 00:01:23,560
throughout the stock by

35
00:01:23,560 --> 00:01:24,960
indistinguishability of two

36
00:01:24,960 --> 00:01:26,720
distributions we mean that the

37
00:01:26,720 --> 00:01:30,000
distributions are statistically close

38
00:01:30,000 --> 00:01:32,079
an implicit requirement in the above

39
00:01:32,079 --> 00:01:34,400
security guarantee is that the leakage

40
00:01:34,400 --> 00:01:37,600
on w is independent of the seed s

41
00:01:37,600 --> 00:01:39,280
and the challenge

42
00:01:39,280 --> 00:01:41,920
which is either the extractor output or

43
00:01:41,920 --> 00:01:43,759
the uniform string

44
00:01:43,759 --> 00:01:46,720
why not l of the dependence

45
00:01:46,720 --> 00:01:48,640
because the leakage function could be

46
00:01:48,640 --> 00:01:51,280
such that it takes in w s and the

47
00:01:51,280 --> 00:01:53,680
challenge and checks if the challenge

48
00:01:53,680 --> 00:01:55,840
equals the extractor output or not

49
00:01:55,840 --> 00:01:57,759
helping to distinguish with very high

50
00:01:57,759 --> 00:02:00,320
probability

51
00:02:00,320 --> 00:02:01,439
so

52
00:02:01,439 --> 00:02:05,199
is this the end of the story

53
00:02:06,000 --> 00:02:06,960
well

54
00:02:06,960 --> 00:02:09,280
in this work we demonstrate that this is

55
00:02:09,280 --> 00:02:11,760
not the end of the story by introducing

56
00:02:11,760 --> 00:02:14,879
adaptive extractors

57
00:02:16,959 --> 00:02:19,680
we say an extractor is adaptive with

58
00:02:19,680 --> 00:02:22,800
respect to a leakage family script f if

59
00:02:22,800 --> 00:02:25,599
for every function f in the family the

60
00:02:25,599 --> 00:02:28,319
extractor output looks indistinguishable

61
00:02:28,319 --> 00:02:31,360
from uniform even given the seed and the

62
00:02:31,360 --> 00:02:34,319
adaptive leakage on f that is the output

63
00:02:34,319 --> 00:02:39,200
of f on w s and the challenge

64
00:02:39,760 --> 00:02:42,400
here we would like to mention that while

65
00:02:42,400 --> 00:02:44,800
our notion of adaptive extractors

66
00:02:44,800 --> 00:02:47,200
explore a general form of adaptivity for

67
00:02:47,200 --> 00:02:49,760
a function family script f

68
00:02:49,760 --> 00:02:51,760
specialized variants were implicitly

69
00:02:51,760 --> 00:02:53,519
considered in the literature in the

70
00:02:53,519 --> 00:02:57,840
works of cement and agrawal at all

71
00:02:59,120 --> 00:03:01,680
in this result we show that every

72
00:03:01,680 --> 00:03:05,200
extractor is output adaptive by which we

73
00:03:05,200 --> 00:03:07,920
mean that the leakage on w can

74
00:03:07,920 --> 00:03:10,800
arbitrarily depend on the challenge

75
00:03:10,800 --> 00:03:13,680
formerly the extractor output is

76
00:03:13,680 --> 00:03:15,920
indistinguishable from uniform

77
00:03:15,920 --> 00:03:19,200
even given the seed and any arbitrary

78
00:03:19,200 --> 00:03:22,000
short leakage dependent on the source

79
00:03:22,000 --> 00:03:23,840
and challenge

80
00:03:23,840 --> 00:03:26,480
strictly speaking be sure that any

81
00:03:26,480 --> 00:03:29,760
extractor that extracts l bits and is

82
00:03:29,760 --> 00:03:32,879
epsilon secure is an epsilon into two

83
00:03:32,879 --> 00:03:36,640
power l output adaptive extractor

84
00:03:36,640 --> 00:03:38,720
though this may seem like huge loss in

85
00:03:38,720 --> 00:03:40,959
the security we show a practical

86
00:03:40,959 --> 00:03:43,760
instantiation using the gui extractor

87
00:03:43,760 --> 00:03:45,920
and also demonstrate a non-trivial

88
00:03:45,920 --> 00:03:48,319
application like allyrsis to prove the

89
00:03:48,319 --> 00:03:52,400
strength of output adaptive extractors

90
00:03:52,400 --> 00:03:54,560
finally concluding on adaptive

91
00:03:54,560 --> 00:03:56,640
extractors

92
00:03:56,640 --> 00:03:58,799
we note that these are gadgets of

93
00:03:58,799 --> 00:04:01,360
independent interest and would be

94
00:04:01,360 --> 00:04:03,920
interesting to study at extractors that

95
00:04:03,920 --> 00:04:06,400
are adaptive against different leakage

96
00:04:06,400 --> 00:04:07,439
families

97
00:04:07,439 --> 00:04:10,319
for example one could study what kind of

98
00:04:10,319 --> 00:04:13,680
joint leakage on w and s is permissible

99
00:04:13,680 --> 00:04:17,920
without breaking the extractor security

100
00:04:18,399 --> 00:04:20,399
moving on to secret sharing schemes

101
00:04:20,399 --> 00:04:22,479
which were introduced by xiaomir and

102
00:04:22,479 --> 00:04:26,000
blackley independently in 1979

103
00:04:26,000 --> 00:04:29,919
an end party t thresholds scheme

104
00:04:29,919 --> 00:04:32,560
comprises of a share algorithm

105
00:04:32,560 --> 00:04:36,080
that takes in a secret m and outputs

106
00:04:36,080 --> 00:04:39,758
the shares m1 through mn

107
00:04:40,560 --> 00:04:42,479
and some of the shares

108
00:04:42,479 --> 00:04:45,360
are fed into a reconstruct algorithm to

109
00:04:45,360 --> 00:04:47,280
output a secret

110
00:04:47,280 --> 00:04:49,680
a secret sharing scheme should satisfy

111
00:04:49,680 --> 00:04:51,600
two basic properties which are

112
00:04:51,600 --> 00:04:55,280
correctness which guarantees that the

113
00:04:55,280 --> 00:04:58,160
given any t plus one or more shares of

114
00:04:58,160 --> 00:05:00,479
the message and the secret m is

115
00:05:00,479 --> 00:05:02,560
reconstructed correctly

116
00:05:02,560 --> 00:05:04,639
the second property is privacy which

117
00:05:04,639 --> 00:05:07,520
requires that any set of t shares have

118
00:05:07,520 --> 00:05:11,840
no information about the message m

119
00:05:13,280 --> 00:05:17,039
in 2007 zimbowski and petrossa initiated

120
00:05:17,039 --> 00:05:19,280
the study of leakage resilience in

121
00:05:19,280 --> 00:05:22,000
secret sharing schemes where a secret

122
00:05:22,000 --> 00:05:24,400
sharing scheme is said to be leakage

123
00:05:24,400 --> 00:05:26,639
resilient against a leakage function

124
00:05:26,639 --> 00:05:30,320
family script f if for every leakage

125
00:05:30,320 --> 00:05:33,360
function f in the family and any two

126
00:05:33,360 --> 00:05:36,000
secrets m and f prime the leakage on

127
00:05:36,000 --> 00:05:38,800
shares of m is indistinguishable from d

128
00:05:38,800 --> 00:05:42,400
gauge on shares of m prime

129
00:05:42,400 --> 00:05:45,360
since the introduction of lrss numerous

130
00:05:45,360 --> 00:05:47,039
leakage models were studied in the

131
00:05:47,039 --> 00:05:49,120
literature which can be broadly

132
00:05:49,120 --> 00:05:53,000
classified as follows

133
00:05:53,120 --> 00:05:55,520
independent versus joint leakage

134
00:05:55,520 --> 00:05:58,080
where in the independent model the

135
00:05:58,080 --> 00:06:00,720
leakage can only be queried on

136
00:06:00,720 --> 00:06:03,039
individual shifts as opposed to the

137
00:06:03,039 --> 00:06:05,520
joint model which allows leakage on

138
00:06:05,520 --> 00:06:07,520
multiple shares together

139
00:06:07,520 --> 00:06:10,639
another distinction is in adaptivity

140
00:06:10,639 --> 00:06:12,160
when

141
00:06:12,160 --> 00:06:14,880
where a model is said to be adaptive if

142
00:06:14,880 --> 00:06:17,600
the adversary can observe leakage on

143
00:06:17,600 --> 00:06:20,080
some shares and then choose the shares

144
00:06:20,080 --> 00:06:24,319
and leakage functions to vary next

145
00:06:24,319 --> 00:06:26,960
most leakage models also support to

146
00:06:26,960 --> 00:06:29,440
reveal some full shares along with the

147
00:06:29,440 --> 00:06:31,759
partial leakage on shares obtained

148
00:06:31,759 --> 00:06:35,560
through the leakage functions

149
00:06:35,919 --> 00:06:38,960
independent of this categorization

150
00:06:38,960 --> 00:06:40,960
another leakage model that was

151
00:06:40,960 --> 00:06:42,880
considered in literature is the affine

152
00:06:42,880 --> 00:06:45,360
leakage model where the leakage function

153
00:06:45,360 --> 00:06:48,160
can act on all shares in a fan manner

154
00:06:48,160 --> 00:06:50,800
collectively

155
00:06:51,680 --> 00:06:56,160
other parameters of interest to lrss are

156
00:06:56,160 --> 00:06:58,800
the rate which is the ratio of the

157
00:06:58,800 --> 00:07:01,120
secret size to the share size

158
00:07:01,120 --> 00:07:03,360
and the per query limit which is the

159
00:07:03,360 --> 00:07:06,160
maximum number of shares a joint vary

160
00:07:06,160 --> 00:07:07,840
can depend on

161
00:07:07,840 --> 00:07:11,120
note that this limit can at most be t as

162
00:07:11,120 --> 00:07:13,039
otherwise the leakage function could

163
00:07:13,039 --> 00:07:16,840
reconstruct the secret

164
00:07:16,960 --> 00:07:19,759
observe that higher rate stronger

165
00:07:19,759 --> 00:07:22,800
leakage model and higher per query limit

166
00:07:22,800 --> 00:07:26,080
are usually desirable

167
00:07:26,479 --> 00:07:29,599
the literature of lrss has seen a long

168
00:07:29,599 --> 00:07:31,599
line of interesting results

169
00:07:31,599 --> 00:07:34,000
for the purpose of this talk we do a

170
00:07:34,000 --> 00:07:36,240
comparison of prior works

171
00:07:36,240 --> 00:07:38,160
in the information theoretic setting

172
00:07:38,160 --> 00:07:40,479
that are relevant to our result in the

173
00:07:40,479 --> 00:07:42,400
information theoretic setting

174
00:07:42,400 --> 00:07:43,919
the distribution that's trying to

175
00:07:43,919 --> 00:07:46,000
distinguish between the leakage of two

176
00:07:46,000 --> 00:07:48,000
distinct messages is allowed to have

177
00:07:48,000 --> 00:07:51,120
unbounded computational power

178
00:07:51,120 --> 00:07:53,360
we compare prior works based on the

179
00:07:53,360 --> 00:07:55,599
leakage models they support and their

180
00:07:55,599 --> 00:07:58,080
rate from the perspective of rate the

181
00:07:58,080 --> 00:08:00,479
result due to srinivasan and washington

182
00:08:00,479 --> 00:08:02,720
has an impressive rate of one-third

183
00:08:02,720 --> 00:08:04,560
supporting the basic leakage model

184
00:08:04,560 --> 00:08:07,039
namely the independent and non-adaptive

185
00:08:07,039 --> 00:08:09,199
leakage model from the perspective of

186
00:08:09,199 --> 00:08:12,879
leakage models chatopath

187
00:08:12,960 --> 00:08:15,120
support

188
00:08:15,120 --> 00:08:17,199
the strong leakage model namely the

189
00:08:17,199 --> 00:08:20,319
joint and adaptive leakage model they

190
00:08:20,319 --> 00:08:22,560
also let the joint queries be

191
00:08:22,560 --> 00:08:25,280
overlapping letting the adversary to ask

192
00:08:25,280 --> 00:08:28,560
leakage on a share multiple times

193
00:08:28,560 --> 00:08:31,599
but observe that even for any restricted

194
00:08:31,599 --> 00:08:33,919
setting of nnt

195
00:08:33,919 --> 00:08:36,080
there is not even a concentrated

196
00:08:36,080 --> 00:08:38,958
allyrsis for any model other than the

197
00:08:38,958 --> 00:08:44,119
independent and adaptive leakage model

198
00:09:13,040 --> 00:09:14,880
before presenting our construction let

199
00:09:14,880 --> 00:09:17,040
me quickly summarize our leakage model

200
00:09:17,040 --> 00:09:19,120
we divide the leakage into two phases

201
00:09:19,120 --> 00:09:22,560
the leakage phase and the reveal phase

202
00:09:22,560 --> 00:09:24,480
where in the leakage phase the adversary

203
00:09:24,480 --> 00:09:26,720
can first ask for partial leakage on

204
00:09:26,720 --> 00:09:27,680
sheriff

205
00:09:27,680 --> 00:09:30,160
and get back the leakage responses and

206
00:09:30,160 --> 00:09:31,680
after the leakage phase in the reveal

207
00:09:31,680 --> 00:09:33,760
phase he can ask for full shares and get

208
00:09:33,760 --> 00:09:35,519
them

209
00:09:35,519 --> 00:09:38,320
all these queries can be made in a joint

210
00:09:38,320 --> 00:09:41,440
and adaptive manner on all n shares such

211
00:09:41,440 --> 00:09:43,440
that each query set is of size

212
00:09:43,440 --> 00:09:45,519
atmosphere which is a necessary

213
00:09:45,519 --> 00:09:47,680
requirement

214
00:09:47,680 --> 00:09:50,000
and second requirement is that all query

215
00:09:50,000 --> 00:09:52,080
sets have to be non-overlapping across

216
00:09:52,080 --> 00:09:54,640
the faces

217
00:09:56,240 --> 00:09:58,480
our construction has two simple building

218
00:09:58,480 --> 00:10:00,640
blocks and anti which are an

219
00:10:00,640 --> 00:10:02,240
anti-security sharing scheme and an

220
00:10:02,240 --> 00:10:04,640
output add up to extract index recall

221
00:10:04,640 --> 00:10:07,120
that an output adaptive extractor

222
00:10:07,120 --> 00:10:08,800
guarantees that the extractor output

223
00:10:08,800 --> 00:10:12,000
looks uniform even given leakage

224
00:10:12,000 --> 00:10:14,720
even given short arbitrary leakage on

225
00:10:14,720 --> 00:10:17,600
the source and the challenge

226
00:10:17,600 --> 00:10:20,079
let's look at a simple construction that

227
00:10:20,079 --> 00:10:21,839
serves as the base for our main

228
00:10:21,839 --> 00:10:24,399
construction which supports leakage from

229
00:10:24,399 --> 00:10:28,720
t-shirts and reveals timor shares

230
00:10:28,880 --> 00:10:31,120
we would like to mention here that the

231
00:10:31,120 --> 00:10:33,040
following construction can be thought of

232
00:10:33,040 --> 00:10:35,760
as a clever adaption of adaptive

233
00:10:35,760 --> 00:10:39,200
extractors to sv19's construction

234
00:10:39,200 --> 00:10:42,000
which supports only individual and

235
00:10:42,000 --> 00:10:44,720
non-adaptive leakage

236
00:10:44,720 --> 00:10:46,560
we denote the sharing algorithm as

237
00:10:46,560 --> 00:10:48,480
bishop

238
00:10:48,480 --> 00:10:51,040
the message m is firstly secret shared

239
00:10:51,040 --> 00:10:53,440
into shells m1 through mn

240
00:10:53,440 --> 00:10:56,160
each mi is masked with an extractor

241
00:10:56,160 --> 00:10:59,920
output on a fresh source wi and defeat s

242
00:10:59,920 --> 00:11:01,680
chosen uniformly

243
00:11:01,680 --> 00:11:05,279
the masked mi appended with

244
00:11:05,279 --> 00:11:07,120
a seed share si

245
00:11:07,120 --> 00:11:08,959
and this was wi

246
00:11:08,959 --> 00:11:12,839
forms the ith base share denoted as

247
00:11:12,839 --> 00:11:15,279
bshi think of the construction as

248
00:11:15,279 --> 00:11:18,560
follows the message n is first shielded

249
00:11:18,560 --> 00:11:19,440
by a

250
00:11:19,440 --> 00:11:21,360
a secret sharing scheme

251
00:11:21,360 --> 00:11:24,079
and then each share of the scheme is

252
00:11:24,079 --> 00:11:26,000
further protected by the extractor

253
00:11:26,000 --> 00:11:29,839
outputs in the base share scheme

254
00:11:31,279 --> 00:11:33,920
to quickly see the security any form of

255
00:11:33,920 --> 00:11:37,279
leakage on atmos t-shares is

256
00:11:37,279 --> 00:11:39,279
independent of the seeders except for

257
00:11:39,279 --> 00:11:41,680
the extractor outputs this is by the

258
00:11:41,680 --> 00:11:46,560
privacy of the scheme sharing the seed s

259
00:11:46,560 --> 00:11:48,959
which further imply independence of the

260
00:11:48,959 --> 00:11:51,519
leakage from mis and m

261
00:11:51,519 --> 00:11:53,760
this follows by output adaptivity of the

262
00:11:53,760 --> 00:11:56,760
extractor

263
00:11:57,040 --> 00:11:59,760
which guarantees that leakage on the

264
00:11:59,760 --> 00:12:02,079
sources and the masked mis is

265
00:12:02,079 --> 00:12:04,000
indistinguishable from leakage for the

266
00:12:04,000 --> 00:12:07,839
sources and the uniform strings

267
00:12:08,160 --> 00:12:10,079
now that the responses in the leakage

268
00:12:10,079 --> 00:12:12,399
phase are independent of mis the

269
00:12:12,399 --> 00:12:15,040
construction can afford to leak t new

270
00:12:15,040 --> 00:12:18,959
mis and hence be his

271
00:12:20,320 --> 00:12:22,399
wide result the construction extend to

272
00:12:22,399 --> 00:12:25,120
support more than t leakage queries

273
00:12:25,120 --> 00:12:27,920
note that leakage on more than t-shares

274
00:12:27,920 --> 00:12:30,880
can possibly depend on the seed s as

275
00:12:30,880 --> 00:12:34,639
privacy provided by its shares is lost

276
00:12:34,639 --> 00:12:37,040
this will further imply dependence on

277
00:12:37,040 --> 00:12:39,600
mis as we no longer have the guarantee

278
00:12:39,600 --> 00:12:42,959
that the extractor outputs look uniform

279
00:12:42,959 --> 00:12:45,360
given this adaptive leakage dependent on

280
00:12:45,360 --> 00:12:46,480
the seat

281
00:12:46,480 --> 00:12:48,720
which may finally lead to dependence on

282
00:12:48,720 --> 00:12:50,800
the secret m

283
00:12:50,800 --> 00:12:54,000
to stop this avalanche of dependence

284
00:12:54,000 --> 00:12:56,720
the seed that is used in masking mis

285
00:12:56,720 --> 00:12:58,959
should be protected against more number

286
00:12:58,959 --> 00:13:01,760
of leakage queries

287
00:13:01,760 --> 00:13:06,639
how to do that is what we'll see next

288
00:13:06,639 --> 00:13:09,200
now we extend the base construction to

289
00:13:09,200 --> 00:13:11,200
support two t leakage queries and t

290
00:13:11,200 --> 00:13:13,839
reveal queries as follows

291
00:13:13,839 --> 00:13:17,839
let's denote the sharing as next share

292
00:13:17,839 --> 00:13:18,880
note that

293
00:13:18,880 --> 00:13:21,600
ayat best share can be passed as two

294
00:13:21,600 --> 00:13:25,680
checks y i and w i where w where y i

295
00:13:25,680 --> 00:13:28,160
consists of masked mi

296
00:13:28,160 --> 00:13:31,360
and sc chair si

297
00:13:31,360 --> 00:13:34,320
in the next share procedure each wire is

298
00:13:34,320 --> 00:13:37,600
further masked than extractor output on

299
00:13:37,600 --> 00:13:41,040
a fresh source w i prime and a seed s

300
00:13:41,040 --> 00:13:42,079
prime

301
00:13:42,079 --> 00:13:44,720
note that the source and seed are

302
00:13:44,720 --> 00:13:47,440
independent of the sources and seed used

303
00:13:47,440 --> 00:13:49,760
in generating the base shares

304
00:13:49,760 --> 00:13:52,639
the masked yi appended with the seed

305
00:13:52,639 --> 00:13:54,240
share si prime

306
00:13:54,240 --> 00:13:57,040
and the source wi prime used in this

307
00:13:57,040 --> 00:13:58,240
procedure

308
00:13:58,240 --> 00:14:01,839
and the source wi used at the base level

309
00:14:01,839 --> 00:14:04,320
forms the ielts share in the next share

310
00:14:04,320 --> 00:14:08,800
procedure denoted by nshi

311
00:14:08,800 --> 00:14:11,279
to see why this extra layer of masking

312
00:14:11,279 --> 00:14:13,760
with fresh extractor outputs work

313
00:14:13,760 --> 00:14:14,959
observe that

314
00:14:14,959 --> 00:14:17,760
the first set of t leakage responses

315
00:14:17,760 --> 00:14:19,360
are independent

316
00:14:19,360 --> 00:14:21,120
of all y is

317
00:14:21,120 --> 00:14:24,399
by the security of extractor on the seed

318
00:14:24,399 --> 00:14:26,000
s prime

319
00:14:26,000 --> 00:14:28,800
the reasoning is similar to the security

320
00:14:28,800 --> 00:14:30,399
of the base share and has won't be

321
00:14:30,399 --> 00:14:33,040
repeated

322
00:14:33,360 --> 00:14:36,399
the second set of tail leakage responses

323
00:14:36,399 --> 00:14:39,279
may possibly depend on wires

324
00:14:39,279 --> 00:14:40,000
but

325
00:14:40,000 --> 00:14:42,560
we show that

326
00:14:42,560 --> 00:14:45,040
this leakage on

327
00:14:45,040 --> 00:14:48,399
nh this leakage on next shift

328
00:14:48,399 --> 00:14:51,440
can be reduced

329
00:14:52,240 --> 00:14:55,040
as leakage on the basis

330
00:14:55,040 --> 00:14:57,920
which we have already discussed to be

331
00:14:57,920 --> 00:15:01,040
independent of mice

332
00:15:01,040 --> 00:15:03,279
in this while discussing the security of

333
00:15:03,279 --> 00:15:05,920
fishes

334
00:15:05,920 --> 00:15:07,519
finally

335
00:15:07,519 --> 00:15:10,720
as in the base construction since any

336
00:15:10,720 --> 00:15:12,560
leakage in the leakage phase is

337
00:15:12,560 --> 00:15:15,519
independent of all mis t mini shares can

338
00:15:15,519 --> 00:15:17,360
be revealed and clear in the reveal

339
00:15:17,360 --> 00:15:20,240
phase by privacy of the

340
00:15:20,240 --> 00:15:23,440
team sharing m

341
00:15:24,320 --> 00:15:26,800
to summarize we support any required

342
00:15:26,800 --> 00:15:29,199
number of leakage queries by increasing

343
00:15:29,199 --> 00:15:31,440
the number of layers of masking for the

344
00:15:31,440 --> 00:15:33,680
sake of completeness i'll quickly go

345
00:15:33,680 --> 00:15:36,079
over the final h-level construction that

346
00:15:36,079 --> 00:15:38,000
supports history queries in the leakage

347
00:15:38,000 --> 00:15:40,000
phase and take queries in the regular

348
00:15:40,000 --> 00:15:43,600
phase for refuelable parameter h

349
00:15:43,600 --> 00:15:46,959
firstly the secret m is nt shared into

350
00:15:46,959 --> 00:15:48,880
shares m1 through mn

351
00:15:48,880 --> 00:15:51,519
then for every layer j from one through

352
00:15:51,519 --> 00:15:52,399
h

353
00:15:52,399 --> 00:15:57,040
we sample the sources w1j through wnj

354
00:15:57,040 --> 00:16:00,639
and the seed sj uniformly further each

355
00:16:00,639 --> 00:16:02,480
seed is secretion

356
00:16:02,480 --> 00:16:06,160
to generate each party share

357
00:16:06,160 --> 00:16:09,199
the share mi is basket with an extractor

358
00:16:09,199 --> 00:16:13,279
output to get y1i which is then appended

359
00:16:13,279 --> 00:16:16,000
with the seed share s1i and the source

360
00:16:16,000 --> 00:16:19,920
w1i perform the first level share

361
00:16:19,920 --> 00:16:23,680
y1i and s1i are together then mask with

362
00:16:23,680 --> 00:16:26,720
the fresh extractor output to get y2i

363
00:16:26,720 --> 00:16:27,920
which is then

364
00:16:27,920 --> 00:16:29,279
appended with

365
00:16:29,279 --> 00:16:31,279
the seed share s2i

366
00:16:31,279 --> 00:16:33,360
and the sources used up to this level

367
00:16:33,360 --> 00:16:36,639
which are w2i and w1i

368
00:16:36,639 --> 00:16:39,600
all these together form the second level

369
00:16:39,600 --> 00:16:43,440
share and this process continues up to h

370
00:16:43,440 --> 00:16:47,839
levels to derive the final share i

371
00:16:48,160 --> 00:16:50,399
with this we conclude the discussion on

372
00:16:50,399 --> 00:16:54,720
our construction and security and

373
00:16:55,279 --> 00:16:57,440
briefly tell you how we instantiate the

374
00:16:57,440 --> 00:16:59,839
building blocks in our construction we

375
00:16:59,839 --> 00:17:01,199
instantiate

376
00:17:01,199 --> 00:17:03,360
the secret sharing schemes

377
00:17:03,360 --> 00:17:06,000
with the xiaomi secret sharing scheme

378
00:17:06,000 --> 00:17:08,240
and then instantiate the output adaptive

379
00:17:08,240 --> 00:17:12,640
extractor with the guv extractor

380
00:17:12,959 --> 00:17:15,199
i'll now conclude the talk with a brief

381
00:17:15,199 --> 00:17:18,480
mention of applications of lrss which

382
00:17:18,480 --> 00:17:20,559
are

383
00:17:20,559 --> 00:17:22,319
leakage resilient secure message

384
00:17:22,319 --> 00:17:24,799
transmission where a message has to be

385
00:17:24,799 --> 00:17:26,799
transferred from one place to another

386
00:17:26,799 --> 00:17:28,960
via leaky channels

387
00:17:28,960 --> 00:17:29,760
and

388
00:17:29,760 --> 00:17:31,360
leakage resolute

389
00:17:31,360 --> 00:17:33,200
secret sharing schemes

390
00:17:33,200 --> 00:17:35,200
where non-malleable secret sharing

391
00:17:35,200 --> 00:17:37,760
schemes guarantee that even if some

392
00:17:37,760 --> 00:17:40,000
shares are tampered the reconstructed

393
00:17:40,000 --> 00:17:42,960
secret is either unrelated or same as

394
00:17:42,960 --> 00:17:46,000
the original secret using our lrss

395
00:17:46,000 --> 00:17:49,360
construction we show how to construct an

396
00:17:49,360 --> 00:17:52,400
lr nms's in the joint leakage and

397
00:17:52,400 --> 00:17:54,240
independent tampering model

398
00:17:54,240 --> 00:17:58,000
we refer the audience to our paper for

399
00:17:58,000 --> 00:18:00,480
any further details

400
00:18:00,480 --> 00:18:03,640
thank you

