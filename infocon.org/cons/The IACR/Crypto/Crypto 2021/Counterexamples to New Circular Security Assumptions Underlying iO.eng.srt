1
00:00:00,160 --> 00:00:02,639
this talk is on counter examples to new

2
00:00:02,639 --> 00:00:04,720
circular security assumptions underlying

3
00:00:04,720 --> 00:00:07,200
indistinguishability obfuscation

4
00:00:07,200 --> 00:00:10,160
it's joint work by me sam hopkins i use

5
00:00:10,160 --> 00:00:12,639
jane and rachel lynn

6
00:00:12,639 --> 00:00:15,200
so as a starting point let's introduce

7
00:00:15,200 --> 00:00:17,520
indistinguishability obfuscation all we

8
00:00:17,520 --> 00:00:19,359
need to know for this talk is it's an

9
00:00:19,359 --> 00:00:22,080
extremely useful cryptographic primitive

10
00:00:22,080 --> 00:00:24,560
and uh provably secure constructions of

11
00:00:24,560 --> 00:00:27,359
indistinguishability obfuscation imply

12
00:00:27,359 --> 00:00:28,560
um

13
00:00:28,560 --> 00:00:30,880
secure constructions of a tremendous

14
00:00:30,880 --> 00:00:32,479
wealth of exciting cryptographic

15
00:00:32,479 --> 00:00:33,920
primitives

16
00:00:33,920 --> 00:00:34,719
so

17
00:00:34,719 --> 00:00:37,040
um indistinguishability obfuscation or

18
00:00:37,040 --> 00:00:39,520
io has been the object of intense study

19
00:00:39,520 --> 00:00:42,079
for the last uh 10 years or so

20
00:00:42,079 --> 00:00:43,280
um

21
00:00:43,280 --> 00:00:45,520
and only very recently

22
00:00:45,520 --> 00:00:46,719
has it

23
00:00:46,719 --> 00:00:48,000
has there been

24
00:00:48,000 --> 00:00:50,480
a construction of i o which can be

25
00:00:50,480 --> 00:00:51,920
proved secure based on relatively

26
00:00:51,920 --> 00:00:54,480
standard assumptions so for at least a

27
00:00:54,480 --> 00:00:57,280
decade io proved to be an incredibly

28
00:00:57,280 --> 00:00:58,960
elusive

29
00:00:58,960 --> 00:01:01,039
target an incredibly elusive goal to

30
00:01:01,039 --> 00:01:05,199
construct in a provably secure fashion

31
00:01:05,199 --> 00:01:06,799
now

32
00:01:06,799 --> 00:01:08,080
looking back

33
00:01:08,080 --> 00:01:11,439
on the history of i o constructions a

34
00:01:11,439 --> 00:01:14,000
perhaps kind of pessimistic

35
00:01:14,000 --> 00:01:15,680
point of view on them

36
00:01:15,680 --> 00:01:18,080
is that the field has been engaged in a

37
00:01:18,080 --> 00:01:18,960
sort of

38
00:01:18,960 --> 00:01:21,759
cat and mouse game in which heuristic

39
00:01:21,759 --> 00:01:23,680
constructions were proposed and then

40
00:01:23,680 --> 00:01:25,520
they were attacked which led to further

41
00:01:25,520 --> 00:01:27,280
heuristic constructions than attacks

42
00:01:27,280 --> 00:01:30,799
then more constructions and so on and um

43
00:01:30,799 --> 00:01:32,079
although now we have the benefit of

44
00:01:32,079 --> 00:01:34,320
hindsight at the time it may well have

45
00:01:34,320 --> 00:01:36,079
looked like this was just not going

46
00:01:36,079 --> 00:01:37,439
anywhere that we were just going in

47
00:01:37,439 --> 00:01:39,040
circles

48
00:01:39,040 --> 00:01:40,560
um but

49
00:01:40,560 --> 00:01:42,320
a more charitable interpretation and i

50
00:01:42,320 --> 00:01:44,000
think with the benefit of hindsight one

51
00:01:44,000 --> 00:01:46,479
that you can easily argue for

52
00:01:46,479 --> 00:01:49,040
is that even though um it might have

53
00:01:49,040 --> 00:01:50,399
looked like we were going in circles

54
00:01:50,399 --> 00:01:51,600
with these cat this sort of cat and

55
00:01:51,600 --> 00:01:52,799
mouse game

56
00:01:52,799 --> 00:01:54,079
actually

57
00:01:54,079 --> 00:01:56,159
underneath it all there was a notion of

58
00:01:56,159 --> 00:01:57,280
progress

59
00:01:57,280 --> 00:01:59,040
the progress the notion of progress was

60
00:01:59,040 --> 00:02:00,240
that

61
00:02:00,240 --> 00:02:02,799
the kind of heuristic assumptions that

62
00:02:02,799 --> 00:02:05,680
were used underlying these constructions

63
00:02:05,680 --> 00:02:07,680
got simpler and simpler and simpler over

64
00:02:07,680 --> 00:02:08,639
time

65
00:02:08,639 --> 00:02:10,959
until eventually

66
00:02:10,959 --> 00:02:12,959
about a year ago now

67
00:02:12,959 --> 00:02:15,599
or a little bit more this

68
00:02:15,599 --> 00:02:17,920
supposed cat and mouse game actually led

69
00:02:17,920 --> 00:02:21,360
to a provably secure construction of io

70
00:02:21,360 --> 00:02:22,640
based on

71
00:02:22,640 --> 00:02:24,640
these standard few assumptions by jane

72
00:02:24,640 --> 00:02:26,560
lin and sahai

73
00:02:26,560 --> 00:02:28,400
so this construction

74
00:02:28,400 --> 00:02:30,720
and story is not the main subject of the

75
00:02:30,720 --> 00:02:32,640
talk but it sets the background for what

76
00:02:32,640 --> 00:02:34,480
we're going to try to uh what we're

77
00:02:34,480 --> 00:02:35,840
going to try to do and what the aims of

78
00:02:35,840 --> 00:02:38,480
our paper are

79
00:02:38,480 --> 00:02:40,160
so now that we know

80
00:02:40,160 --> 00:02:43,519
one provably secure assumption of i o

81
00:02:43,519 --> 00:02:45,840
um we have there are a couple of natural

82
00:02:45,840 --> 00:02:47,040
goals

83
00:02:47,040 --> 00:02:48,640
first the jane lynn's a high

84
00:02:48,640 --> 00:02:51,440
construction it does not

85
00:02:51,440 --> 00:02:53,200
use uh

86
00:02:53,200 --> 00:02:54,319
uses

87
00:02:54,319 --> 00:02:57,360
assumptions which are known to be not

88
00:02:57,360 --> 00:02:58,720
quantum secure

89
00:02:58,720 --> 00:03:02,000
so it would be good if we could now find

90
00:03:02,000 --> 00:03:04,080
constructions of i o that are secure in

91
00:03:04,080 --> 00:03:06,640
a post-quantum world

92
00:03:06,640 --> 00:03:08,560
furthermore the jane lynn's high

93
00:03:08,560 --> 00:03:10,959
construction is pretty complicated and

94
00:03:10,959 --> 00:03:13,120
so it will be very nice to have simpler

95
00:03:13,120 --> 00:03:14,959
constructions of indistinguishability

96
00:03:14,959 --> 00:03:17,599
obfuscation

97
00:03:17,599 --> 00:03:19,519
towards both of these goals

98
00:03:19,519 --> 00:03:23,360
a natural approach is to try to base io

99
00:03:23,360 --> 00:03:26,319
on only lattice-based assumptions

100
00:03:26,319 --> 00:03:27,760
because lattice-based assumptions are

101
00:03:27,760 --> 00:03:29,680
typically secure against quantum attacks

102
00:03:29,680 --> 00:03:30,879
or are thought to be secure against

103
00:03:30,879 --> 00:03:33,440
quantum attacks this can lead to post

104
00:03:33,440 --> 00:03:35,120
quantum secure io

105
00:03:35,120 --> 00:03:37,840
um and if we can get rid of many of the

106
00:03:37,840 --> 00:03:39,840
assumptions that are underlying the j uh

107
00:03:39,840 --> 00:03:41,840
jane lynn sahi scheme we could hope that

108
00:03:41,840 --> 00:03:43,200
the resulting construction will be

109
00:03:43,200 --> 00:03:46,200
simpler

110
00:03:46,879 --> 00:03:49,920
towards this goal we've seen several um

111
00:03:49,920 --> 00:03:53,200
exciting recent works which describe new

112
00:03:53,200 --> 00:03:56,959
simple i o constructions um

113
00:03:56,959 --> 00:03:59,280
which while not being provably secure

114
00:03:59,280 --> 00:04:02,560
under uh well-studied assumptions

115
00:04:02,560 --> 00:04:07,439
do manage to state very clean um

116
00:04:07,439 --> 00:04:10,720
attackable verifiable assumptions uh

117
00:04:10,720 --> 00:04:12,560
that under which they can prove security

118
00:04:12,560 --> 00:04:14,799
of their schemes so these new uh these

119
00:04:14,799 --> 00:04:16,720
new schemes are due to brokerski dot

120
00:04:16,720 --> 00:04:19,600
lingard mall of ulta gay and pass and

121
00:04:19,600 --> 00:04:21,759
and we in wicks

122
00:04:21,759 --> 00:04:22,479
and

123
00:04:22,479 --> 00:04:23,759
um

124
00:04:23,759 --> 00:04:25,919
especially these second two

125
00:04:25,919 --> 00:04:27,199
state very

126
00:04:27,199 --> 00:04:29,199
nice compact assumptions under which

127
00:04:29,199 --> 00:04:32,000
they can prove security of their schemes

128
00:04:32,000 --> 00:04:33,919
and these assumptions are basically

129
00:04:33,919 --> 00:04:36,320
lattice-based so while they're not just

130
00:04:36,320 --> 00:04:38,160
standard learning with errors they seem

131
00:04:38,160 --> 00:04:41,040
to be relatively small modifications of

132
00:04:41,040 --> 00:04:43,919
uh learning with area style assumptions

133
00:04:43,919 --> 00:04:45,600
and both of them

134
00:04:45,600 --> 00:04:46,880
modify the learning with errors

135
00:04:46,880 --> 00:04:48,160
assumptions in

136
00:04:48,160 --> 00:04:51,040
similarly flavored ways uh and i'm going

137
00:04:51,040 --> 00:04:52,720
to spend the next few minutes describing

138
00:04:52,720 --> 00:04:55,759
how those modifications go so the both

139
00:04:55,759 --> 00:04:57,919
of them have an assumption of the flavor

140
00:04:57,919 --> 00:04:59,919
of learning with errors plus some kind

141
00:04:59,919 --> 00:05:03,199
of circular security plus some kind of

142
00:05:03,199 --> 00:05:04,960
leakage of some information some

143
00:05:04,960 --> 00:05:07,840
randomness of encryption to the attacker

144
00:05:07,840 --> 00:05:09,840
and both these papers gan pass and we

145
00:05:09,840 --> 00:05:13,440
and wix show that um under this kind of

146
00:05:13,440 --> 00:05:16,160
lwe plus plus assumption

147
00:05:16,160 --> 00:05:20,160
uh they can get provenly secure io

148
00:05:20,560 --> 00:05:21,919
so

149
00:05:21,919 --> 00:05:23,600
that's very exciting

150
00:05:23,600 --> 00:05:26,240
uh it suggests that there is an avenue

151
00:05:26,240 --> 00:05:27,039
to

152
00:05:27,039 --> 00:05:29,919
simple and post-quantum secure i o under

153
00:05:29,919 --> 00:05:31,759
which would be based just on lattice

154
00:05:31,759 --> 00:05:32,960
problems

155
00:05:32,960 --> 00:05:34,400
um but

156
00:05:34,400 --> 00:05:36,479
it now means that it's imperative to try

157
00:05:36,479 --> 00:05:39,120
to analyze this type of assumption right

158
00:05:39,120 --> 00:05:40,720
we need to understand if these

159
00:05:40,720 --> 00:05:42,479
assumptions are secure or if they're not

160
00:05:42,479 --> 00:05:44,160
how can they be modified to be secure

161
00:05:44,160 --> 00:05:45,600
and how can we modify the constructions

162
00:05:45,600 --> 00:05:46,880
accordingly

163
00:05:46,880 --> 00:05:48,720
towards the aim of post quantum secure

164
00:05:48,720 --> 00:05:51,600
io and simpler constructions

165
00:05:51,600 --> 00:05:52,639
so

166
00:05:52,639 --> 00:05:55,280
our paper

167
00:05:55,440 --> 00:05:57,120
is

168
00:05:57,120 --> 00:06:00,240
crypto analyzing assumptions of of this

169
00:06:00,240 --> 00:06:02,639
flavor

170
00:06:03,680 --> 00:06:05,600
so now i can say our results in a

171
00:06:05,600 --> 00:06:07,039
nutshell

172
00:06:07,039 --> 00:06:08,560
uh

173
00:06:08,560 --> 00:06:10,880
our result you know now now we are as we

174
00:06:10,880 --> 00:06:13,280
described uh as i described earlier in

175
00:06:13,280 --> 00:06:15,600
the talk in this um

176
00:06:15,600 --> 00:06:16,800
you know construction attack

177
00:06:16,800 --> 00:06:18,880
construction attack type cycle we're in

178
00:06:18,880 --> 00:06:20,720
the attack part of the cycle and and our

179
00:06:20,720 --> 00:06:24,160
results uh are a cryptoanalytic attack

180
00:06:24,160 --> 00:06:24,960
on

181
00:06:24,960 --> 00:06:26,880
these assumptions the ones the

182
00:06:26,880 --> 00:06:29,120
particular instantiations of this flavor

183
00:06:29,120 --> 00:06:30,639
of assumption that are in the gay pass

184
00:06:30,639 --> 00:06:32,160
and we and wix work

185
00:06:32,160 --> 00:06:34,240
and we show that the the assumptions in

186
00:06:34,240 --> 00:06:36,080
those works as stated are false so we

187
00:06:36,080 --> 00:06:38,160
give um we give a tax on those

188
00:06:38,160 --> 00:06:39,360
assumptions

189
00:06:39,360 --> 00:06:40,560
however

190
00:06:40,560 --> 00:06:42,000
to be clear

191
00:06:42,000 --> 00:06:44,639
the underlying strategy and

192
00:06:44,639 --> 00:06:47,520
constructions of all of these papers are

193
00:06:47,520 --> 00:06:50,160
not broken by our work and in particular

194
00:06:50,160 --> 00:06:52,160
the strategy that they give for

195
00:06:52,160 --> 00:06:55,440
constructing io from lattices may well

196
00:06:55,440 --> 00:06:57,120
be um

197
00:06:57,120 --> 00:06:58,479
may well be feasible it may well be

198
00:06:58,479 --> 00:07:00,319
possible to give construction of i o

199
00:07:00,319 --> 00:07:02,639
based on this this strategy it just

200
00:07:02,639 --> 00:07:05,599
means that the formulation of the

201
00:07:05,599 --> 00:07:07,199
assumptions that are underlying them

202
00:07:07,199 --> 00:07:10,319
have to be modified

203
00:07:11,199 --> 00:07:12,880
so

204
00:07:12,880 --> 00:07:14,080
our hope

205
00:07:14,080 --> 00:07:16,479
as we described before is that these

206
00:07:16,479 --> 00:07:20,080
attacks can lead to um refined and

207
00:07:20,080 --> 00:07:22,000
ideally secure versions of these

208
00:07:22,000 --> 00:07:24,000
assumptions um

209
00:07:24,000 --> 00:07:25,199
and uh

210
00:07:25,199 --> 00:07:29,880
and eventually to post quantum secure io

211
00:07:30,319 --> 00:07:31,280
so

212
00:07:31,280 --> 00:07:33,120
for the rest of the talk i'm going to

213
00:07:33,120 --> 00:07:34,800
focus in on

214
00:07:34,800 --> 00:07:36,400
just the one one of these two

215
00:07:36,400 --> 00:07:39,039
constructions the the work by gay and

216
00:07:39,039 --> 00:07:41,840
pass um and our attack on the assumption

217
00:07:41,840 --> 00:07:45,840
of we wix is relatively similar

218
00:07:48,000 --> 00:07:49,440
okay

219
00:07:49,440 --> 00:07:50,639
so

220
00:07:50,639 --> 00:07:53,919
let's fix in our minds a

221
00:07:53,919 --> 00:07:55,759
nice whatever that means fully

222
00:07:55,759 --> 00:07:58,560
homomorphic encryption scheme for

223
00:07:58,560 --> 00:08:00,400
instance for this talk we can think just

224
00:08:00,400 --> 00:08:04,479
about the gentrisa high waters gsw

225
00:08:04,479 --> 00:08:07,280
fhe scheme

226
00:08:09,199 --> 00:08:10,319
as i said

227
00:08:10,319 --> 00:08:12,319
the gate pass assumption has this kind

228
00:08:12,319 --> 00:08:15,440
of lwe plus plus flavor lwe plus some

229
00:08:15,440 --> 00:08:16,879
other stuff

230
00:08:16,879 --> 00:08:19,599
so let's go through the other stuff

231
00:08:19,599 --> 00:08:22,400
the other stuff has two components

232
00:08:22,400 --> 00:08:23,599
the first

233
00:08:23,599 --> 00:08:25,599
is a circular security type of

234
00:08:25,599 --> 00:08:27,039
assumption

235
00:08:27,039 --> 00:08:29,759
so let's review circular security

236
00:08:29,759 --> 00:08:30,479
um

237
00:08:30,479 --> 00:08:34,000
circular security is the notion that if

238
00:08:34,000 --> 00:08:36,159
so-called um

239
00:08:36,159 --> 00:08:37,919
key cycles

240
00:08:37,919 --> 00:08:39,440
are released

241
00:08:39,440 --> 00:08:41,599
to an attacker that the attacker cannot

242
00:08:41,599 --> 00:08:43,039
benefit from this

243
00:08:43,039 --> 00:08:45,279
so suppose this is this is a two

244
00:08:45,279 --> 00:08:47,839
circular security assumption here

245
00:08:47,839 --> 00:08:50,320
on this slide suppose that in addition

246
00:08:50,320 --> 00:08:51,120
to

247
00:08:51,120 --> 00:08:53,360
suppose that we that we um set up two

248
00:08:53,360 --> 00:08:56,640
copies of an fhe scheme with a secret

249
00:08:56,640 --> 00:08:57,920
key one

250
00:08:57,920 --> 00:09:00,320
and public key one secret key two in

251
00:09:00,320 --> 00:09:01,839
public key two

252
00:09:01,839 --> 00:09:06,320
and then we publish the following two

253
00:09:06,480 --> 00:09:09,519
cipher texts we publish an encryption of

254
00:09:09,519 --> 00:09:11,839
public key one on sorry an encryption of

255
00:09:11,839 --> 00:09:14,080
secret key two rather under public key

256
00:09:14,080 --> 00:09:14,959
one

257
00:09:14,959 --> 00:09:16,880
and an encryption of secret key one

258
00:09:16,880 --> 00:09:19,600
under public key two

259
00:09:19,600 --> 00:09:20,560
um

260
00:09:20,560 --> 00:09:23,040
it's believed that even given these

261
00:09:23,040 --> 00:09:25,680
cipher texts the underlying fhe schemes

262
00:09:25,680 --> 00:09:27,040
remain secure

263
00:09:27,040 --> 00:09:29,200
uh at least four

264
00:09:29,200 --> 00:09:32,320
natural fhe schemes such as gsw

265
00:09:32,320 --> 00:09:35,360
and in fact this belief underlies the

266
00:09:35,360 --> 00:09:38,080
security of unleveled fully homomorphic

267
00:09:38,080 --> 00:09:40,720
encryption so uh whether or not you

268
00:09:40,720 --> 00:09:42,880
consider this a well-founded assumption

269
00:09:42,880 --> 00:09:44,959
not completely clear but it is at least

270
00:09:44,959 --> 00:09:46,320
widely enough believe that we are

271
00:09:46,320 --> 00:09:50,160
willing to rely on it for unleveled fhe

272
00:09:50,160 --> 00:09:53,920
so that's uh that's circular security

273
00:09:53,920 --> 00:09:56,399
the second type of assumption

274
00:09:56,399 --> 00:09:57,600
is

275
00:09:57,600 --> 00:09:59,200
um

276
00:09:59,200 --> 00:10:00,800
we're gonna call randomness leakage the

277
00:10:00,800 --> 00:10:04,560
second plus in the lwe plus plus so this

278
00:10:04,560 --> 00:10:07,440
requires a little bit more uh setup to

279
00:10:07,440 --> 00:10:10,959
describe formally but the idea is that

280
00:10:10,959 --> 00:10:13,200
the attacker gets to see

281
00:10:13,200 --> 00:10:15,839
some of the randomness of encryption

282
00:10:15,839 --> 00:10:19,440
that results when um the fhe scheme is

283
00:10:19,440 --> 00:10:22,640
run on when when the fh scheme um does

284
00:10:22,640 --> 00:10:26,160
some evaluations of a uh

285
00:10:26,160 --> 00:10:27,920
of a of a circuit on some chosen plain

286
00:10:27,920 --> 00:10:29,839
text or on some chosen yeah chosen

287
00:10:29,839 --> 00:10:32,320
plaintext

288
00:10:32,320 --> 00:10:33,600
so

289
00:10:33,600 --> 00:10:35,600
the way that this is instantiated in the

290
00:10:35,600 --> 00:10:37,839
work of gann pass they call the shielded

291
00:10:37,839 --> 00:10:39,760
shielded randomness leakage and i'll go

292
00:10:39,760 --> 00:10:42,160
ahead and describe what that means

293
00:10:42,160 --> 00:10:45,120
so here's the usual um security game or

294
00:10:45,120 --> 00:10:47,600
almost usual security game um

295
00:10:47,600 --> 00:10:50,000
for cpa security uh except with this

296
00:10:50,000 --> 00:10:52,560
modified line here so as in the usual

297
00:10:52,560 --> 00:10:56,160
security game the adversary chooses two

298
00:10:56,160 --> 00:10:58,720
messages m0 and m1

299
00:10:58,720 --> 00:11:02,000
and then uh a bit zero one is uniformly

300
00:11:02,000 --> 00:11:03,519
randomly sampled

301
00:11:03,519 --> 00:11:05,920
and the attacker gets to see the

302
00:11:05,920 --> 00:11:08,800
encryption of um

303
00:11:08,800 --> 00:11:11,519
of the message mb so either m0 or m1 the

304
00:11:11,519 --> 00:11:13,440
goal is for the attacker to guess which

305
00:11:13,440 --> 00:11:17,120
one of the messages she has she has seen

306
00:11:17,120 --> 00:11:19,839
um but before doing so she can call a

307
00:11:19,839 --> 00:11:21,920
certain oracle that gay and past call

308
00:11:21,920 --> 00:11:24,720
the srl oracle a polynomial number of

309
00:11:24,720 --> 00:11:26,800
times so what is this oracle this is the

310
00:11:26,800 --> 00:11:28,480
oracle that is going to give

311
00:11:28,480 --> 00:11:30,720
uh give her access to some kind of

312
00:11:30,720 --> 00:11:32,000
information about randomness of

313
00:11:32,000 --> 00:11:35,920
encryption after fhe vows here's the srl

314
00:11:35,920 --> 00:11:37,680
oracle o

315
00:11:37,680 --> 00:11:40,000
whenever the srl oracle is called a

316
00:11:40,000 --> 00:11:42,399
fresh encryption of zero under some

317
00:11:42,399 --> 00:11:44,880
randomness of encryption our star is

318
00:11:44,880 --> 00:11:47,279
generated let's call that ciphertext ct

319
00:11:47,279 --> 00:11:48,560
star

320
00:11:48,560 --> 00:11:52,560
now the adversary chooses given ct star

321
00:11:52,560 --> 00:11:54,560
which she gets to see the adversary

322
00:11:54,560 --> 00:11:57,360
chooses some circuit um f

323
00:11:57,360 --> 00:11:59,200
which takes messages and outputs boolean

324
00:11:59,200 --> 00:12:00,639
values

325
00:12:00,639 --> 00:12:02,720
the idea is that the adversary is going

326
00:12:02,720 --> 00:12:05,040
to get to see some leakage on randomness

327
00:12:05,040 --> 00:12:08,720
of encryption that results when

328
00:12:08,720 --> 00:12:10,720
fhe val is run

329
00:12:10,720 --> 00:12:13,839
on uh using using uh the circuit f so

330
00:12:13,839 --> 00:12:15,120
when the circuit f is homomorphically

331
00:12:15,120 --> 00:12:16,560
evaluated

332
00:12:16,560 --> 00:12:18,160
what the oracle does

333
00:12:18,160 --> 00:12:21,360
is homomorphically evaluates uh the

334
00:12:21,360 --> 00:12:23,040
circuit f

335
00:12:23,040 --> 00:12:24,959
on the message mb

336
00:12:24,959 --> 00:12:28,880
and then it leaks a certain

337
00:12:28,880 --> 00:12:30,720
block of randomness

338
00:12:30,720 --> 00:12:32,320
the randomness should have the following

339
00:12:32,320 --> 00:12:33,760
property so the randomness that at least

340
00:12:33,760 --> 00:12:36,240
is composed of two parts r star

341
00:12:36,240 --> 00:12:38,079
um which is this randomness of

342
00:12:38,079 --> 00:12:39,920
encryption from the from the fresh

343
00:12:39,920 --> 00:12:42,639
encryption of zero this is hiding the

344
00:12:42,639 --> 00:12:44,639
more interesting piece of randomness r

345
00:12:44,639 --> 00:12:47,279
sub f so what is r sub f

346
00:12:47,279 --> 00:12:48,639
r f

347
00:12:48,639 --> 00:12:50,560
is randomness

348
00:12:50,560 --> 00:12:53,600
that if you used it as the randomness of

349
00:12:53,600 --> 00:12:57,120
encryption for the message f mv if you

350
00:12:57,120 --> 00:13:00,399
encoded f m b under this randomness r f

351
00:13:00,399 --> 00:13:02,000
you would get the same randomness of

352
00:13:02,000 --> 00:13:04,079
encryption as you do

353
00:13:04,079 --> 00:13:08,160
uh when you run eval on f and uh and mv

354
00:13:08,160 --> 00:13:12,160
so you can think of rfct star as the

355
00:13:12,160 --> 00:13:15,360
randomness that is uh sitting in the

356
00:13:15,360 --> 00:13:17,200
ciphertext that you would get if you run

357
00:13:17,200 --> 00:13:20,959
eval um on f and mv

358
00:13:20,959 --> 00:13:22,800
uh if you just leaked this randomness

359
00:13:22,800 --> 00:13:25,040
alone it would be easy to then recover

360
00:13:25,040 --> 00:13:27,360
um it'd be easy to break this the scheme

361
00:13:27,360 --> 00:13:30,800
so it's hidden it's um shielded by this

362
00:13:30,800 --> 00:13:33,440
other randomness r star

363
00:13:33,440 --> 00:13:35,279
okay so this is a little bit complicated

364
00:13:35,279 --> 00:13:37,920
but the basic idea is that the adversary

365
00:13:37,920 --> 00:13:39,440
gets to see some leakage on the

366
00:13:39,440 --> 00:13:42,000
randomness of encryption uh that results

367
00:13:42,000 --> 00:13:44,079
from running fhe eval on a chosen

368
00:13:44,079 --> 00:13:47,199
circuit f of c t star or f uh yeah f

369
00:13:47,199 --> 00:13:49,760
which depends on c t star it depends on

370
00:13:49,760 --> 00:13:52,480
the cipher text that um

371
00:13:52,480 --> 00:13:54,160
itself depends on the shielding

372
00:13:54,160 --> 00:13:57,040
randomness of r star

373
00:13:57,279 --> 00:13:58,399
okay

374
00:13:58,399 --> 00:14:00,560
so it turns out that actually this

375
00:14:00,560 --> 00:14:02,639
shielding works um at least if you

376
00:14:02,639 --> 00:14:04,959
consider it in isolation so

377
00:14:04,959 --> 00:14:07,120
uh game passes show

378
00:14:07,120 --> 00:14:09,760
that if you ignore circular security and

379
00:14:09,760 --> 00:14:13,040
you just think of uh lwe plus this this

380
00:14:13,040 --> 00:14:16,079
kind of randomness leakage this srl

381
00:14:16,079 --> 00:14:17,120
oracle

382
00:14:17,120 --> 00:14:18,480
this is actually

383
00:14:18,480 --> 00:14:21,680
secure if the fhe scheme you use is gsw

384
00:14:21,680 --> 00:14:23,839
um under the learning with errors

385
00:14:23,839 --> 00:14:26,240
assumption so

386
00:14:26,240 --> 00:14:27,839
where have we arrived

387
00:14:27,839 --> 00:14:30,160
basically

388
00:14:30,160 --> 00:14:32,000
we have this lwb plus plus assumption

389
00:14:32,000 --> 00:14:33,680
this whole thing

390
00:14:33,680 --> 00:14:36,800
um if you look at lwe plus one of them

391
00:14:36,800 --> 00:14:38,560
circular security

392
00:14:38,560 --> 00:14:39,600
we

393
00:14:39,600 --> 00:14:41,839
reasonably think that that is secure at

394
00:14:41,839 --> 00:14:43,519
least we base unleveled fat on that

395
00:14:43,519 --> 00:14:44,800
assumption

396
00:14:44,800 --> 00:14:47,279
if you look at lwe plus the other one

397
00:14:47,279 --> 00:14:50,480
randomness leakage it's provably secure

398
00:14:50,480 --> 00:14:52,720
under lwe at least for a natural crypto

399
00:14:52,720 --> 00:14:54,720
scheme like gsw

400
00:14:54,720 --> 00:14:57,440
and so it's kind of reasonable to think

401
00:14:57,440 --> 00:14:58,959
that you could add

402
00:14:58,959 --> 00:15:00,240
both of these assumptions at the same

403
00:15:00,240 --> 00:15:03,040
time and still get io

404
00:15:03,040 --> 00:15:06,079
indeed that is the conjecture that gay

405
00:15:06,079 --> 00:15:07,839
and past put forward

406
00:15:07,839 --> 00:15:10,079
so they call this the

407
00:15:10,079 --> 00:15:12,800
osrl circ conjecture

408
00:15:12,800 --> 00:15:14,480
and it goes like this

409
00:15:14,480 --> 00:15:17,519
it says that for natural schemes s

410
00:15:17,519 --> 00:15:19,279
such as gsw

411
00:15:19,279 --> 00:15:20,079
um

412
00:15:20,079 --> 00:15:23,120
if s is two circular secure

413
00:15:23,120 --> 00:15:27,199
and s is uh srl secure then it's secure

414
00:15:27,199 --> 00:15:28,639
with both kinds of leakages

415
00:15:28,639 --> 00:15:30,959
simultaneously the encrypted key cycle

416
00:15:30,959 --> 00:15:34,480
and the srl oracle leakages

417
00:15:34,480 --> 00:15:35,839
we show that this

418
00:15:35,839 --> 00:15:37,600
conjecture is false

419
00:15:37,600 --> 00:15:38,720
um

420
00:15:38,720 --> 00:15:42,399
by using a as a counter example

421
00:15:42,399 --> 00:15:44,399
gsw we'll construct an attack when the

422
00:15:44,399 --> 00:15:46,399
fhe scheme is gsw

423
00:15:46,399 --> 00:15:47,199
um

424
00:15:47,199 --> 00:15:49,680
some previous versions of our work which

425
00:15:49,680 --> 00:15:52,079
which circulated uh

426
00:15:52,079 --> 00:15:54,399
used instead of vanilla gsw a slightly

427
00:15:54,399 --> 00:15:56,079
modified gsw scheme which we still

428
00:15:56,079 --> 00:15:58,800
counted as natural but um actually we're

429
00:15:58,800 --> 00:16:00,240
able to conduct this attack even when

430
00:16:00,240 --> 00:16:02,079
this when the scheme is just regular old

431
00:16:02,079 --> 00:16:06,239
gsw no modifications are necessary

432
00:16:06,720 --> 00:16:08,160
so for the rest of the talk i'll go

433
00:16:08,160 --> 00:16:10,079
ahead and describe our attack

434
00:16:10,079 --> 00:16:11,759
so here's how it goes

435
00:16:11,759 --> 00:16:13,279
remember that what the attacker gets to

436
00:16:13,279 --> 00:16:14,079
see

437
00:16:14,079 --> 00:16:15,120
um

438
00:16:15,120 --> 00:16:16,320
is

439
00:16:16,320 --> 00:16:19,040
for starters let's say the cipher text

440
00:16:19,040 --> 00:16:21,519
of the um

441
00:16:21,519 --> 00:16:23,680
of mb who gets to see the encryption of

442
00:16:23,680 --> 00:16:25,440
the chosen plain text and they get to

443
00:16:25,440 --> 00:16:26,800
see a key cycle

444
00:16:26,800 --> 00:16:29,199
and what they get to do is choose a

445
00:16:29,199 --> 00:16:31,120
circuit so when they call this srl

446
00:16:31,120 --> 00:16:32,480
oracle we're going to call the srl

447
00:16:32,480 --> 00:16:33,680
oracle

448
00:16:33,680 --> 00:16:35,680
um they get to choose this circuit that

449
00:16:35,680 --> 00:16:38,880
maps messages to zero one and the choice

450
00:16:38,880 --> 00:16:40,959
of circuit gets to depend on two things

451
00:16:40,959 --> 00:16:44,000
it gets to depend on ct star the cipher

452
00:16:44,000 --> 00:16:45,600
text uh

453
00:16:45,600 --> 00:16:47,040
which is a fresh encryption of zero

454
00:16:47,040 --> 00:16:48,560
under randomness r star that's going to

455
00:16:48,560 --> 00:16:51,199
get used for shielding

456
00:16:51,199 --> 00:16:53,120
and the circuit gets to depend on the

457
00:16:53,120 --> 00:16:54,399
key cycle

458
00:16:54,399 --> 00:16:57,120
and then the we our attacker our attack

459
00:16:57,120 --> 00:16:59,680
gets to observe this um shielded

460
00:16:59,680 --> 00:17:02,320
randomness leakage our f minus r star

461
00:17:02,320 --> 00:17:04,079
where our f is going to contain some

462
00:17:04,079 --> 00:17:05,679
interesting information but it's

463
00:17:05,679 --> 00:17:08,720
shielded by r star

464
00:17:09,599 --> 00:17:11,280
so how are we going to choose this

465
00:17:11,280 --> 00:17:12,720
circuit

466
00:17:12,720 --> 00:17:14,959
um

467
00:17:15,039 --> 00:17:17,119
our choice of the circuit is going to

468
00:17:17,119 --> 00:17:19,679
use the for the following uh first

469
00:17:19,679 --> 00:17:20,959
observation

470
00:17:20,959 --> 00:17:23,679
so here just to introduce some notation

471
00:17:23,679 --> 00:17:25,919
i'm going to write um

472
00:17:25,919 --> 00:17:28,319
the private key of the main crypto

473
00:17:28,319 --> 00:17:29,919
system that uh

474
00:17:29,919 --> 00:17:32,559
uh mb is encrypted under as u

475
00:17:32,559 --> 00:17:33,440
and

476
00:17:33,440 --> 00:17:36,160
um r was a r is you know a matrix that

477
00:17:36,160 --> 00:17:38,799
is randomness of encryption

478
00:17:38,799 --> 00:17:42,080
for uh for for the message mv

479
00:17:42,080 --> 00:17:43,039
so

480
00:17:43,039 --> 00:17:45,679
the first observation is that if we

481
00:17:45,679 --> 00:17:47,840
choose certain gates in f

482
00:17:47,840 --> 00:17:51,039
we can make fhe eval of f

483
00:17:51,039 --> 00:17:53,840
move some information about the message

484
00:17:53,840 --> 00:17:54,960
mb

485
00:17:54,960 --> 00:17:57,919
into the randomness um into the

486
00:17:57,919 --> 00:18:00,880
randomness of encryption so let's uh

487
00:18:00,880 --> 00:18:02,320
let's go ahead and assume that mb is

488
00:18:02,320 --> 00:18:04,799
just a single bit so zero or one

489
00:18:04,799 --> 00:18:06,480
and let's notice that if we just

490
00:18:06,480 --> 00:18:08,880
multiply the bit by zero

491
00:18:08,880 --> 00:18:11,679
uh and as our as our circuit

492
00:18:11,679 --> 00:18:15,039
and then we fhe eval on on that

493
00:18:15,039 --> 00:18:16,480
uh what will happen is that we're going

494
00:18:16,480 --> 00:18:19,360
to move information about mb into the

495
00:18:19,360 --> 00:18:22,000
randomness part of the encryption so

496
00:18:22,000 --> 00:18:23,440
under gsw

497
00:18:23,440 --> 00:18:25,280
uh this is what would happen if you do

498
00:18:25,280 --> 00:18:27,679
that multiplication so here is our

499
00:18:27,679 --> 00:18:30,080
ciphertext of m of mb

500
00:18:30,080 --> 00:18:32,559
it's uh private key or sorry public key

501
00:18:32,559 --> 00:18:35,600
times randomness plus uh message times a

502
00:18:35,600 --> 00:18:36,960
gadget matrix

503
00:18:36,960 --> 00:18:39,760
to multiply by zero we multiply by uh by

504
00:18:39,760 --> 00:18:40,880
this thing this is just some some

505
00:18:40,880 --> 00:18:42,559
encryption of zero

506
00:18:42,559 --> 00:18:44,320
and if you do the multiplication what

507
00:18:44,320 --> 00:18:45,360
you get

508
00:18:45,360 --> 00:18:46,240
is

509
00:18:46,240 --> 00:18:47,760
uh

510
00:18:47,760 --> 00:18:49,440
the public key

511
00:18:49,440 --> 00:18:52,240
times some big matrix

512
00:18:52,240 --> 00:18:53,840
uh this is now the randomness of

513
00:18:53,840 --> 00:18:55,840
encryption in the in the new resulting

514
00:18:55,840 --> 00:18:58,000
cipher text and notice that mv is

515
00:18:58,000 --> 00:18:59,200
sitting in here some other stuff is

516
00:18:59,200 --> 00:19:01,039
sitting here too but but mv is sitting

517
00:19:01,039 --> 00:19:03,200
here

518
00:19:03,760 --> 00:19:04,720
now

519
00:19:04,720 --> 00:19:05,679
um

520
00:19:05,679 --> 00:19:08,000
this seems nice and notice that if we if

521
00:19:08,000 --> 00:19:10,320
we use this as our circuit f then when

522
00:19:10,320 --> 00:19:12,559
we do do the srl oracle we will get to

523
00:19:12,559 --> 00:19:14,480
observe this matrix

524
00:19:14,480 --> 00:19:15,360
uh

525
00:19:15,360 --> 00:19:17,039
but the whole point of this of the

526
00:19:17,039 --> 00:19:19,440
shielding is that it's actually fine if

527
00:19:19,440 --> 00:19:20,880
we see this matrix like it's not going

528
00:19:20,880 --> 00:19:22,960
to break security because

529
00:19:22,960 --> 00:19:23,919
we're not going to get to see this

530
00:19:23,919 --> 00:19:25,600
matrix directly instead it's going to be

531
00:19:25,600 --> 00:19:27,200
shielded by this

532
00:19:27,200 --> 00:19:30,160
additional randomness r star

533
00:19:30,160 --> 00:19:32,480
the second key idea

534
00:19:32,480 --> 00:19:35,120
is that in the presence of the

535
00:19:35,120 --> 00:19:37,039
encrypted key cycle

536
00:19:37,039 --> 00:19:40,000
we can use the key cycle to access our

537
00:19:40,000 --> 00:19:40,960
star

538
00:19:40,960 --> 00:19:43,120
inside our function f

539
00:19:43,120 --> 00:19:44,160
okay because f is going to be

540
00:19:44,160 --> 00:19:47,039
homomorphically evaluated

541
00:19:47,039 --> 00:19:47,760
f

542
00:19:47,760 --> 00:19:50,000
can take as sort of an additional

543
00:19:50,000 --> 00:19:51,760
hard-coded input

544
00:19:51,760 --> 00:19:54,480
we can think of f as taking the private

545
00:19:54,480 --> 00:19:56,960
key for um

546
00:19:56,960 --> 00:19:58,320
for the crypto scheme because it has

547
00:19:58,320 --> 00:20:00,640
access to a cipher text of that private

548
00:20:00,640 --> 00:20:02,559
key

549
00:20:02,559 --> 00:20:04,840
so this is actually this is the key

550
00:20:04,840 --> 00:20:07,200
idea um once you have this idea

551
00:20:07,200 --> 00:20:08,400
implementing the attack there are

552
00:20:08,400 --> 00:20:10,480
probably several ways to do it um and

553
00:20:10,480 --> 00:20:11,679
i'm just going to describe one way to do

554
00:20:11,679 --> 00:20:12,960
it but there should be there should be

555
00:20:12,960 --> 00:20:14,480
several ways to do it once you once you

556
00:20:14,480 --> 00:20:16,559
decide to use the key cycle to access

557
00:20:16,559 --> 00:20:18,799
the um

558
00:20:18,799 --> 00:20:21,039
the shielding randomness

559
00:20:21,039 --> 00:20:23,360
so here's here's the way we do it

560
00:20:23,360 --> 00:20:25,200
um

561
00:20:25,200 --> 00:20:28,000
we use inside f we use the secret key

562
00:20:28,000 --> 00:20:29,840
one which is encrypted in our key cycle

563
00:20:29,840 --> 00:20:32,000
under public key two so f can uh f can

564
00:20:32,000 --> 00:20:33,919
depend on secret key one so what we'll

565
00:20:33,919 --> 00:20:36,880
do is run a

566
00:20:36,880 --> 00:20:38,480
decryption algorithm

567
00:20:38,480 --> 00:20:40,559
the gsw decryption algorithm inside the

568
00:20:40,559 --> 00:20:41,679
circuit f

569
00:20:41,679 --> 00:20:43,360
uh because f gets to depend on the

570
00:20:43,360 --> 00:20:44,720
secret key

571
00:20:44,720 --> 00:20:45,600
and

572
00:20:45,600 --> 00:20:49,760
we'll decrypt the um ciphertext ct star

573
00:20:49,760 --> 00:20:52,960
which gives us access to the the

574
00:20:52,960 --> 00:20:55,200
shielding randomness r star

575
00:20:55,200 --> 00:20:57,120
in fact what we can get is not

576
00:20:57,120 --> 00:20:58,799
exactly this randomness itself but we'll

577
00:20:58,799 --> 00:21:01,120
get it times some short vector this is

578
00:21:01,120 --> 00:21:02,400
like the short vector that comes out of

579
00:21:02,400 --> 00:21:05,120
gsw decryption

580
00:21:05,120 --> 00:21:07,600
um and now if we take the inner product

581
00:21:07,600 --> 00:21:10,480
of that vector with some chosen vector v

582
00:21:10,480 --> 00:21:11,760
we can get

583
00:21:11,760 --> 00:21:14,000
we can after after the srl leakage we

584
00:21:14,000 --> 00:21:15,039
can get something that looks like the

585
00:21:15,039 --> 00:21:16,720
following so we're going to compose this

586
00:21:16,720 --> 00:21:18,720
trick with the trick i described earlier

587
00:21:18,720 --> 00:21:20,720
where we multiply by zero to move some

588
00:21:20,720 --> 00:21:23,440
information about the message part of an

589
00:21:23,440 --> 00:21:25,200
encryption over into the randomness part

590
00:21:25,200 --> 00:21:26,720
of an encryption

591
00:21:26,720 --> 00:21:28,799
what we'll get is um

592
00:21:28,799 --> 00:21:31,360
some junk plus

593
00:21:31,360 --> 00:21:34,480
something useful so if we before when we

594
00:21:34,480 --> 00:21:36,080
used this trick we had just message bit

595
00:21:36,080 --> 00:21:38,799
times some uh some randomness r now

596
00:21:38,799 --> 00:21:41,360
we're going to get message bit plus

597
00:21:41,360 --> 00:21:43,440
uh this in this this thing about our

598
00:21:43,440 --> 00:21:44,799
star

599
00:21:44,799 --> 00:21:45,760
and then there's the shielding

600
00:21:45,760 --> 00:21:47,280
randomness r star which will show up

601
00:21:47,280 --> 00:21:50,159
before the srl thing gets released

602
00:21:50,159 --> 00:21:51,679
now what we need to do is get rid of

603
00:21:51,679 --> 00:21:53,919
this other kind of garbage

604
00:21:53,919 --> 00:21:54,799
the

605
00:21:54,799 --> 00:21:57,679
useful thing is that we know

606
00:21:57,679 --> 00:22:00,080
this matrix here the gadget matrix

607
00:22:00,080 --> 00:22:03,280
applied to some ciphertext that we know

608
00:22:03,280 --> 00:22:05,039
and so and we had the freedom to choose

609
00:22:05,039 --> 00:22:06,320
this vector v

610
00:22:06,320 --> 00:22:08,159
so what we can do is choose a vector v

611
00:22:08,159 --> 00:22:09,760
which is in the kernel of this matrix

612
00:22:09,760 --> 00:22:11,520
it's a boolean matrix that's random so

613
00:22:11,520 --> 00:22:13,280
it has a non-trivial kernel with decent

614
00:22:13,280 --> 00:22:15,760
probability like one-half

615
00:22:15,760 --> 00:22:16,799
um

616
00:22:16,799 --> 00:22:19,120
and that that means that what we can

617
00:22:19,120 --> 00:22:20,400
actually find

618
00:22:20,400 --> 00:22:21,919
uh

619
00:22:21,919 --> 00:22:23,679
by by doing this

620
00:22:23,679 --> 00:22:26,159
is this term will vanish and we will be

621
00:22:26,159 --> 00:22:28,240
left only with this stuff

622
00:22:28,240 --> 00:22:30,640
okay so what we can get after the srl

623
00:22:30,640 --> 00:22:34,720
leakage is something like this

624
00:22:35,200 --> 00:22:36,640
um

625
00:22:36,640 --> 00:22:39,200
what what we can then do it turns out

626
00:22:39,200 --> 00:22:42,400
without going into too much detail is um

627
00:22:42,400 --> 00:22:43,200
use

628
00:22:43,200 --> 00:22:44,720
things like this to build a linear

629
00:22:44,720 --> 00:22:46,799
system which is solved by the short

630
00:22:46,799 --> 00:22:48,400
vector e

631
00:22:48,400 --> 00:22:49,520
okay

632
00:22:49,520 --> 00:22:51,679
so at the end of the day the attack goes

633
00:22:51,679 --> 00:22:54,720
as follows the um the attacker calls the

634
00:22:54,720 --> 00:22:57,679
srl oracle uh on some with some

635
00:22:57,679 --> 00:23:00,080
carefully chosen circuit which includes

636
00:23:00,080 --> 00:23:02,720
the gsw decryption algorithm and then

637
00:23:02,720 --> 00:23:04,960
uses this trick to multiply by zero

638
00:23:04,960 --> 00:23:08,000
which moves information about uh message

639
00:23:08,000 --> 00:23:10,320
over into the randomness the adversary

640
00:23:10,320 --> 00:23:13,120
gets the randomness leakage um the

641
00:23:13,120 --> 00:23:15,280
this has been carefully chosen so that

642
00:23:15,280 --> 00:23:17,679
the shielding um

643
00:23:17,679 --> 00:23:21,679
interacts in a known way with the with

644
00:23:21,679 --> 00:23:23,520
the message that's hiding in the

645
00:23:23,520 --> 00:23:26,320
shielded part of the randomness leakage

646
00:23:26,320 --> 00:23:27,840
and then the adversary uses the result

647
00:23:27,840 --> 00:23:30,320
to set up a linear system and a linear

648
00:23:30,320 --> 00:23:31,919
system will have a solution if the

649
00:23:31,919 --> 00:23:33,520
message bit is zero and it will not have

650
00:23:33,520 --> 00:23:35,840
a solution if the message bit is one and

651
00:23:35,840 --> 00:23:38,640
um that way the the adversary can break

652
00:23:38,640 --> 00:23:40,960
the crypto scheme

653
00:23:40,960 --> 00:23:41,840
so

654
00:23:41,840 --> 00:23:43,600
just some brief conclusions so where

655
00:23:43,600 --> 00:23:45,919
where where did we end up with

656
00:23:45,919 --> 00:23:48,799
so um we were studying i o constructions

657
00:23:48,799 --> 00:23:50,559
candidate i o construction is based only

658
00:23:50,559 --> 00:23:53,200
on lattice style assumptions and these

659
00:23:53,200 --> 00:23:55,760
assumptions they have this lwb plus plus

660
00:23:55,760 --> 00:23:58,000
flavor plus two things lwe plus a

661
00:23:58,000 --> 00:23:59,919
circular security assumption and plus

662
00:23:59,919 --> 00:24:03,039
some randomness leakage on fhe evals

663
00:24:03,039 --> 00:24:04,480
both of which on their own seem

664
00:24:04,480 --> 00:24:06,080
plausibly secure

665
00:24:06,080 --> 00:24:07,600
but we show that when you put these two

666
00:24:07,600 --> 00:24:09,520
kinds of leakages together at least the

667
00:24:09,520 --> 00:24:11,919
way that it's uh the way it's done

668
00:24:11,919 --> 00:24:14,480
concretely in these papers by gay and

669
00:24:14,480 --> 00:24:17,760
pass and we in wix um

670
00:24:17,760 --> 00:24:19,600
the the resulting

671
00:24:19,600 --> 00:24:22,320
assumption is attackable and in general

672
00:24:22,320 --> 00:24:23,919
you know sort of the conclusion we draw

673
00:24:23,919 --> 00:24:24,960
is that

674
00:24:24,960 --> 00:24:27,279
the uh

675
00:24:27,279 --> 00:24:29,200
there's not at least as far as we can

676
00:24:29,200 --> 00:24:32,640
tell there's not a sort of general

677
00:24:32,640 --> 00:24:34,880
principle that security of these

678
00:24:34,880 --> 00:24:37,200
leakages on their own implies security

679
00:24:37,200 --> 00:24:38,640
together

680
00:24:38,640 --> 00:24:40,480
instead the security of an assumption

681
00:24:40,480 --> 00:24:42,000
like this is going to have to be

682
00:24:42,000 --> 00:24:44,400
sensitive to a lot of details about the

683
00:24:44,400 --> 00:24:47,120
structure of the leakages

684
00:24:47,120 --> 00:24:51,120
so of course a natural next question is

685
00:24:51,120 --> 00:24:54,400
whether one can get a more specific

686
00:24:54,400 --> 00:24:56,320
version of this

687
00:24:56,320 --> 00:24:57,360
of this assumption whether you can

688
00:24:57,360 --> 00:24:58,880
instantiate an assumption like this in a

689
00:24:58,880 --> 00:25:00,720
way that avoids the attacks that we're

690
00:25:00,720 --> 00:25:03,760
describing and there is um some work in

691
00:25:03,760 --> 00:25:06,080
this direction by this set of authors

692
00:25:06,080 --> 00:25:08,240
that i think will be publicly available

693
00:25:08,240 --> 00:25:09,840
shortly

694
00:25:09,840 --> 00:25:10,640
um

695
00:25:10,640 --> 00:25:12,080
and of course you know it's not just

696
00:25:12,080 --> 00:25:14,320
whatever construction is proposed here

697
00:25:14,320 --> 00:25:15,919
it may be possible to give many other

698
00:25:15,919 --> 00:25:17,520
constructions which avoid our attack and

699
00:25:17,520 --> 00:25:21,039
it's very interesting to try and do so

