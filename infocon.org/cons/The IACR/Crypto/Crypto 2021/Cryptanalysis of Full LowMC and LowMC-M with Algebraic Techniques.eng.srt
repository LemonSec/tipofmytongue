1
00:00:01,680 --> 00:00:04,400
hello everyone my name is fukung leo the

2
00:00:04,400 --> 00:00:07,440
title of this talk is crypt analysis of

3
00:00:07,440 --> 00:00:10,240
volume c and low mcm with algebraic

4
00:00:10,240 --> 00:00:11,360
techniques

5
00:00:11,360 --> 00:00:14,000
this is a joint work with takanol isobae

6
00:00:14,000 --> 00:00:15,679
and willimer

7
00:00:15,679 --> 00:00:19,359
so what's low mc low mc is a family of

8
00:00:19,359 --> 00:00:21,840
block ciphers proposed at the euro crypt

9
00:00:21,840 --> 00:00:23,199
2015

10
00:00:23,199 --> 00:00:26,320
it is designed to be mpc and fhe

11
00:00:26,320 --> 00:00:27,439
friendly

12
00:00:27,439 --> 00:00:30,160
the main feature of learns is that users

13
00:00:30,160 --> 00:00:32,640
can have flexible choices for the

14
00:00:32,640 --> 00:00:35,360
concrete instances of low mc

15
00:00:35,360 --> 00:00:38,000
specifically they can freely choose the

16
00:00:38,000 --> 00:00:40,800
affine layers the key schedule function

17
00:00:40,800 --> 00:00:44,480
and the number of xboxes at current you

18
00:00:44,480 --> 00:00:46,480
can see the run function from this

19
00:00:46,480 --> 00:00:47,920
figure

20
00:00:47,920 --> 00:00:49,360
specifically

21
00:00:49,360 --> 00:00:52,960
it will first apply an xbox layer where

22
00:00:52,960 --> 00:00:56,399
the number of s-boxes is not fixed so

23
00:00:56,399 --> 00:00:58,719
users can freely choose the number of

24
00:00:58,719 --> 00:01:01,120
s-books per round

25
00:01:01,120 --> 00:01:04,000
then their fine layer will be applied

26
00:01:04,000 --> 00:01:06,960
similarly this layer is also not fixed

27
00:01:06,960 --> 00:01:10,159
and the users can 3d and it is randomly

28
00:01:10,159 --> 00:01:13,760
generated so users can freely choose it

29
00:01:13,760 --> 00:01:15,280
for the key of the

30
00:01:15,280 --> 00:01:18,080
after the fun layer uh the key addition

31
00:01:18,080 --> 00:01:21,280
will be applied and again

32
00:01:21,280 --> 00:01:25,040
the run key is generated by compute by

33
00:01:25,040 --> 00:01:27,759
multiplying the master key with a

34
00:01:27,759 --> 00:01:31,280
randomly generated binary matrix so the

35
00:01:31,280 --> 00:01:33,759
key schedule functions are also not

36
00:01:33,759 --> 00:01:36,159
fixed

37
00:01:37,360 --> 00:01:39,840
the most important application of the

38
00:01:39,840 --> 00:01:42,240
low mc block cipher is the picnic

39
00:01:42,240 --> 00:01:45,040
signature scheme which was proposed at

40
00:01:45,040 --> 00:01:49,200
acm ccs 2017

41
00:01:49,200 --> 00:01:52,240
the main feature a feature of the picnic

42
00:01:52,240 --> 00:01:55,040
signature scheme is that its security

43
00:01:55,040 --> 00:01:57,600
relies on the security of the underlying

44
00:01:57,600 --> 00:02:01,040
block cipher low mc specifically it

45
00:02:01,040 --> 00:02:03,280
should be difficult for the attacker to

46
00:02:03,280 --> 00:02:05,920
recover the key from a single plaintest

47
00:02:05,920 --> 00:02:09,360
cipher test pair since the proposal of

48
00:02:09,360 --> 00:02:10,720
picnic

49
00:02:10,720 --> 00:02:13,120
there have been several versions

50
00:02:13,120 --> 00:02:15,120
in pd2

51
00:02:15,120 --> 00:02:18,560
low mc with 10x boxes per round was

52
00:02:18,560 --> 00:02:20,239
adopted

53
00:02:20,239 --> 00:02:24,080
last year picnic 3 was proposed

54
00:02:24,080 --> 00:02:26,720
and the four round low mc with a full

55
00:02:26,720 --> 00:02:28,160
xbox layer

56
00:02:28,160 --> 00:02:31,680
was used in picnic 3 but the underlying

57
00:02:31,680 --> 00:02:33,920
block cipher

58
00:02:33,920 --> 00:02:35,680
most importantly

59
00:02:35,680 --> 00:02:38,160
picnic 3 is an alternate third run

60
00:02:38,160 --> 00:02:40,480
candidate needs the post quantum

61
00:02:40,480 --> 00:02:43,200
competition

62
00:02:43,200 --> 00:02:46,640
and since the proposal of low mc it has

63
00:02:46,640 --> 00:02:49,519
received several crypt analysis

64
00:02:49,519 --> 00:02:51,760
the higher order differential attack and

65
00:02:51,760 --> 00:02:54,239
the optimized interpolation attack

66
00:02:54,239 --> 00:02:57,920
directly push the low mc to low mcv2

67
00:02:57,920 --> 00:03:00,319
however the difference enumeration

68
00:03:00,319 --> 00:03:03,519
attack revealed some parameters in lone

69
00:03:03,519 --> 00:03:07,760
cp v2 were also insecure

70
00:03:07,760 --> 00:03:08,879
so

71
00:03:08,879 --> 00:03:11,120
low mc v3 were

72
00:03:11,120 --> 00:03:13,680
was proposed and then

73
00:03:13,680 --> 00:03:16,640
and the number of secure runs was

74
00:03:16,640 --> 00:03:18,800
recomputed

75
00:03:18,800 --> 00:03:19,680
to

76
00:03:19,680 --> 00:03:22,319
understand the security of loymc in the

77
00:03:22,319 --> 00:03:25,120
single plane test setting the guest and

78
00:03:25,120 --> 00:03:28,080
determine attack was proposed at 2sec

79
00:03:28,080 --> 00:03:29,840
2020

80
00:03:29,840 --> 00:03:32,799
it can only reach two out of four rounds

81
00:03:32,799 --> 00:03:33,680
of

82
00:03:33,680 --> 00:03:38,080
low mc with a full xbox layer

83
00:03:38,080 --> 00:03:41,040
and there is a parallel work published

84
00:03:41,040 --> 00:03:43,680
at the eurocrypt 2021

85
00:03:43,680 --> 00:03:46,959
it is a polynomial based method to solve

86
00:03:46,959 --> 00:03:49,920
a system of high degree polynomial

87
00:03:49,920 --> 00:03:51,120
equations

88
00:03:51,120 --> 00:03:53,280
this method can break

89
00:03:53,280 --> 00:03:54,080
a

90
00:03:54,080 --> 00:03:57,200
forerunned low mc with a 4xbox layer

91
00:03:57,200 --> 00:03:58,640
however

92
00:03:58,640 --> 00:04:02,159
the attack requires a huge memory so

93
00:04:02,159 --> 00:04:05,840
indeed it cannot be faster than a pure

94
00:04:05,840 --> 00:04:08,080
brute force attack

95
00:04:08,080 --> 00:04:11,519
as will be seen uh our text requires

96
00:04:11,519 --> 00:04:14,159
negligible memory and only two plane

97
00:04:14,159 --> 00:04:15,439
tests

98
00:04:15,439 --> 00:04:19,040
also our attacks are much more efficient

99
00:04:19,040 --> 00:04:22,479
than a pure brute force attack

100
00:04:22,479 --> 00:04:24,720
our attack is inspired from the

101
00:04:24,720 --> 00:04:27,280
different enumeration attack proposed at

102
00:04:27,280 --> 00:04:29,680
2 sec 2018

103
00:04:29,680 --> 00:04:33,120
so let me briefly introduce uh

104
00:04:33,120 --> 00:04:35,440
the difference enumeration attack

105
00:04:35,440 --> 00:04:37,360
it is indeed a

106
00:04:37,360 --> 00:04:39,759
mid in the middle attack the attack

107
00:04:39,759 --> 00:04:42,400
procedure can be divided into three

108
00:04:42,400 --> 00:04:46,400
steps suppose our target is to attack

109
00:04:46,400 --> 00:04:48,560
our runs of low mc

110
00:04:48,560 --> 00:04:50,639
the first step is

111
00:04:50,639 --> 00:04:53,600
for the first step

112
00:04:53,600 --> 00:04:56,560
by exploiting the fact that if only a

113
00:04:56,560 --> 00:04:59,360
few number of x-boxes are applied per

114
00:04:59,360 --> 00:05:02,240
round the attacker can choose an input

115
00:05:02,240 --> 00:05:04,639
difference such that there's no active

116
00:05:04,639 --> 00:05:09,039
xbox in the first t0 runs then

117
00:05:09,039 --> 00:05:12,000
starting from the t zeros around he can

118
00:05:12,000 --> 00:05:14,800
enumerate the differences forwards for t

119
00:05:14,800 --> 00:05:17,440
runs and store all reachable state

120
00:05:17,440 --> 00:05:18,880
differences

121
00:05:18,880 --> 00:05:20,720
at step three

122
00:05:20,720 --> 00:05:23,759
starting from the cipher test side he

123
00:05:23,759 --> 00:05:26,639
can enumerate the differences backwards

124
00:05:26,639 --> 00:05:30,320
for r minus t zero minus t one runs to

125
00:05:30,320 --> 00:05:32,240
match the stored reachable state

126
00:05:32,240 --> 00:05:34,240
differences so

127
00:05:34,240 --> 00:05:36,560
just like this figure

128
00:05:36,560 --> 00:05:39,840
just as shown in this figure

129
00:05:39,840 --> 00:05:43,440
the attack uh relies on our observation

130
00:05:43,440 --> 00:05:47,039
uh that for the use the three bit as box

131
00:05:47,039 --> 00:05:49,680
the average number of output differences

132
00:05:49,680 --> 00:05:52,320
for a uniformly randomly shorter input

133
00:05:52,320 --> 00:05:56,599
difference is 3.62

134
00:05:57,440 --> 00:06:00,080
so you can see from this figure that

135
00:06:00,080 --> 00:06:02,720
there must exist a valid differential

136
00:06:02,720 --> 00:06:05,600
chair so the problem so

137
00:06:05,600 --> 00:06:08,800
in the attack it is constrained that

138
00:06:08,800 --> 00:06:11,280
there should be an average one valid

139
00:06:11,280 --> 00:06:12,960
differential trail left after the

140
00:06:12,960 --> 00:06:14,240
matching phase

141
00:06:14,240 --> 00:06:17,199
and this will be exactly the correct

142
00:06:17,199 --> 00:06:19,120
differential chair

143
00:06:19,120 --> 00:06:20,639
so

144
00:06:20,639 --> 00:06:24,080
for attacks on parameters nkmr

145
00:06:24,080 --> 00:06:27,919
with k equal to m using two plane tests

146
00:06:27,919 --> 00:06:28,639
to

147
00:06:28,639 --> 00:06:29,440
uh

148
00:06:29,440 --> 00:06:30,240
to

149
00:06:30,240 --> 00:06:33,840
mount an attack with time complexity as

150
00:06:33,840 --> 00:06:36,639
smaller than 2 to the k

151
00:06:36,639 --> 00:06:40,319
uh t and r and 0 has to

152
00:06:40,319 --> 00:06:41,520
65

153
00:06:41,520 --> 00:06:42,319
uh

154
00:06:42,319 --> 00:06:44,160
such requirements

155
00:06:44,160 --> 00:06:46,639
uh where n is the state size case the

156
00:06:46,639 --> 00:06:49,840
key size m is the number of s-boxes per

157
00:06:49,840 --> 00:06:54,239
round and r is the total number of runs

158
00:06:56,000 --> 00:06:58,960
in spite from there are different

159
00:06:58,960 --> 00:07:01,680
enumeration attack we will use an

160
00:07:01,680 --> 00:07:04,720
extended attack from work

161
00:07:04,720 --> 00:07:06,080
it can be

162
00:07:06,080 --> 00:07:08,319
divided into three steps

163
00:07:08,319 --> 00:07:10,319
in general uh

164
00:07:10,319 --> 00:07:13,360
the extended attack framework

165
00:07:13,360 --> 00:07:14,479
is the

166
00:07:14,479 --> 00:07:16,960
same with the original difference in

167
00:07:16,960 --> 00:07:19,199
numerator attack framework

168
00:07:19,199 --> 00:07:22,880
as the first step similarly we compute a

169
00:07:22,880 --> 00:07:25,039
deterministic differential trigger for

170
00:07:25,039 --> 00:07:27,360
the first r0 runs

171
00:07:27,360 --> 00:07:30,639
then at step 2 we will use many blend

172
00:07:30,639 --> 00:07:33,520
tests to find a pair of plain tests such

173
00:07:33,520 --> 00:07:36,240
that there's no active experts in the

174
00:07:36,240 --> 00:07:38,880
last three rounds

175
00:07:38,880 --> 00:07:41,440
so you can see from this figure

176
00:07:41,440 --> 00:07:43,680
after the second step

177
00:07:43,680 --> 00:07:46,960
we now know that as the first r0 runs

178
00:07:46,960 --> 00:07:49,680
and the as the and the last are three

179
00:07:49,680 --> 00:07:50,560
runs

180
00:07:50,560 --> 00:07:54,560
there will be no active experts

181
00:07:55,199 --> 00:07:57,199
and at step three

182
00:07:57,199 --> 00:07:59,199
the attack we can enumerate the

183
00:07:59,199 --> 00:08:02,800
differences backwards for our two runs

184
00:08:02,800 --> 00:08:04,800
at step 4

185
00:08:04,800 --> 00:08:06,479
we will compute the difference

186
00:08:06,479 --> 00:08:08,960
transitions for the middle r1 runs while

187
00:08:08,960 --> 00:08:11,599
solving equations

188
00:08:11,599 --> 00:08:15,360
at step 4 we no longer uh pre-compute

189
00:08:15,360 --> 00:08:19,039
the stage differences in advance and

190
00:08:19,039 --> 00:08:21,120
store them

191
00:08:21,120 --> 00:08:24,240
instead we will compute the we will find

192
00:08:24,240 --> 00:08:26,800
a different transition for the mid-r1

193
00:08:26,800 --> 00:08:30,879
runs by solving equations

194
00:08:30,879 --> 00:08:34,159
our tag relies on some properties of the

195
00:08:34,159 --> 00:08:36,799
three bit experts

196
00:08:36,799 --> 00:08:40,399
so the specification of the xbox is

197
00:08:40,399 --> 00:08:42,080
shown here

198
00:08:42,080 --> 00:08:42,880
so

199
00:08:42,880 --> 00:08:46,800
x0 x1 and x2 are the inputs at input

200
00:08:46,800 --> 00:08:50,000
bits and zero divide z2 are the three

201
00:08:50,000 --> 00:08:52,240
output bits

202
00:08:52,240 --> 00:08:55,360
the first observation is that for each

203
00:08:55,360 --> 00:08:58,240
value non-zero difference transition the

204
00:08:58,240 --> 00:09:00,640
inputs conforming to such a different

205
00:09:00,640 --> 00:09:03,120
transition will form at a fine space of

206
00:09:03,120 --> 00:09:05,600
dimension one in addition

207
00:09:05,600 --> 00:09:08,240
uh the three output bits become linear

208
00:09:08,240 --> 00:09:10,560
in the three input bits

209
00:09:10,560 --> 00:09:14,160
that's the xbox is freely linearized for

210
00:09:14,160 --> 00:09:17,120
a valid nonzero difference transition

211
00:09:17,120 --> 00:09:20,399
for example uh if the input difference

212
00:09:20,399 --> 00:09:23,600
is zero 0 1 and the output difference is

213
00:09:23,600 --> 00:09:28,880
0 0 1 it can be derived that x 0 must be

214
00:09:28,880 --> 00:09:31,440
0 and x 1 must be

215
00:09:31,440 --> 00:09:34,959
x 0 must be 0 and x 1 must be

216
00:09:34,959 --> 00:09:38,399
zero so the expressions of the three

217
00:09:38,399 --> 00:09:41,680
output bits can be written as zero

218
00:09:41,680 --> 00:09:45,839
equals to zero z zero equals to zero z y

219
00:09:45,839 --> 00:09:51,360
equals to zero and z two equals to x2

220
00:09:51,360 --> 00:09:54,320
the second important observation is that

221
00:09:54,320 --> 00:09:57,279
for each non-zero input difference

222
00:09:57,279 --> 00:10:00,000
it's valid output differences from an

223
00:10:00,000 --> 00:10:02,480
affine space of dimension 2. this

224
00:10:02,480 --> 00:10:04,800
property also applies to the inverse of

225
00:10:04,800 --> 00:10:07,680
the xbox observation one

226
00:10:07,680 --> 00:10:10,320
so for observation one it also applies

227
00:10:10,320 --> 00:10:12,800
to the inverse of the xbox

228
00:10:12,800 --> 00:10:16,079
for example uh if the input difference

229
00:10:16,079 --> 00:10:19,360
is zero one one the corresponding output

230
00:10:19,360 --> 00:10:22,399
differences we are set by delta v one

231
00:10:22,399 --> 00:10:25,279
plus theta z two equals to one when

232
00:10:25,279 --> 00:10:28,320
output difference is zero one one the

233
00:10:28,320 --> 00:10:31,040
corresponding valid input differences

234
00:10:31,040 --> 00:10:32,720
we'll satisfy

235
00:10:32,720 --> 00:10:35,760
third x one plus third x two equals to

236
00:10:35,760 --> 00:10:37,600
one

237
00:10:37,600 --> 00:10:40,160
so based on the second our second

238
00:10:40,160 --> 00:10:43,680
observation we can compute the middle or

239
00:10:43,680 --> 00:10:47,120
one round difference transition

240
00:10:47,120 --> 00:10:49,600
in this way

241
00:10:49,600 --> 00:10:52,240
with the following three steps

242
00:10:52,240 --> 00:10:56,000
at the first step we can introduce some

243
00:10:56,000 --> 00:10:58,640
intermediate variables to represent the

244
00:10:58,640 --> 00:11:01,760
output difference of each xbox in the

245
00:11:01,760 --> 00:11:03,440
middle air runs

246
00:11:03,440 --> 00:11:06,640
so there will be m terms three l minus

247
00:11:06,640 --> 00:11:10,240
one intermediate variables

248
00:11:10,959 --> 00:11:12,839
then

249
00:11:12,839 --> 00:11:14,959
so after

250
00:11:14,959 --> 00:11:16,399
step three

251
00:11:16,399 --> 00:11:19,200
uh in the extended framework

252
00:11:19,200 --> 00:11:21,680
the improved state difference and the

253
00:11:21,680 --> 00:11:24,000
output state difference for the middle

254
00:11:24,000 --> 00:11:26,800
our rounds are already known so

255
00:11:26,800 --> 00:11:29,680
according to observation 2

256
00:11:29,680 --> 00:11:33,040
we can construct n minus 2 m equations

257
00:11:33,040 --> 00:11:35,760
in these variables

258
00:11:35,760 --> 00:11:38,240
and at step 3

259
00:11:38,240 --> 00:11:42,720
we solve the system of equations and

260
00:11:42,720 --> 00:11:45,839
get the solution of the variables

261
00:11:45,839 --> 00:11:49,440
then according to the solution the

262
00:11:49,440 --> 00:11:53,040
output difference of each s box in the

263
00:11:53,040 --> 00:11:57,200
middle r1 runs is not and we can easily

264
00:11:57,200 --> 00:11:59,839
check the validity of the difference

265
00:11:59,839 --> 00:12:03,279
transitions in each xbox by

266
00:12:03,279 --> 00:12:04,720
according to the differential

267
00:12:04,720 --> 00:12:07,839
distribution table

268
00:12:07,839 --> 00:12:10,800
so to make our one the largest

269
00:12:10,800 --> 00:12:14,000
uh we need to ensure that the number of

270
00:12:14,000 --> 00:12:16,560
variables should be smaller than the

271
00:12:16,560 --> 00:12:17,760
number of

272
00:12:17,760 --> 00:12:19,279
equations

273
00:12:19,279 --> 00:12:21,680
to make the attack faster than the brute

274
00:12:21,680 --> 00:12:23,760
force attack

275
00:12:23,760 --> 00:12:25,680
we need to ensure that the time

276
00:12:25,680 --> 00:12:28,399
complexity to numerous differences

277
00:12:28,399 --> 00:12:31,600
cannot exceed to to decay

278
00:12:31,600 --> 00:12:33,519
so we have uh

279
00:12:33,519 --> 00:12:34,320
two

280
00:12:34,320 --> 00:12:35,519
extra

281
00:12:35,519 --> 00:12:37,200
constraints

282
00:12:37,200 --> 00:12:39,200
to

283
00:12:39,200 --> 00:12:42,639
to make the attack uh reach as many

284
00:12:42,639 --> 00:12:45,519
rounds as possible that's to make our

285
00:12:45,519 --> 00:12:48,480
one plus r2 the largest the time

286
00:12:48,480 --> 00:12:51,600
complexity to enumerate differences will

287
00:12:51,600 --> 00:12:53,600
be uh

288
00:12:53,600 --> 00:12:55,839
computed

289
00:12:55,839 --> 00:12:59,680
will be computed as the maximum value of

290
00:12:59,680 --> 00:13:02,720
2 to the 1.86

291
00:13:02,720 --> 00:13:04,320
mr2

292
00:13:04,320 --> 00:13:07,519
and 2 to the m times

293
00:13:07,519 --> 00:13:09,360
1.86

294
00:13:09,360 --> 00:13:15,519
r 2 plus 3 r 1 minus 2 minus m

295
00:13:16,240 --> 00:13:19,440
and so under the details of how to

296
00:13:19,440 --> 00:13:22,320
derive such formulas can be

297
00:13:22,320 --> 00:13:25,920
referred to our paper

298
00:13:25,920 --> 00:13:26,720
so

299
00:13:26,720 --> 00:13:28,639
compared with the

300
00:13:28,639 --> 00:13:32,959
original difference enumeration attack

301
00:13:33,600 --> 00:13:36,160
there are two advantages to use the new

302
00:13:36,160 --> 00:13:38,959
structure to enumerate differences

303
00:13:38,959 --> 00:13:42,399
the first is that the memory complexity

304
00:13:42,399 --> 00:13:44,639
is negligible since there's no need to

305
00:13:44,639 --> 00:13:46,560
store all possible reachable state

306
00:13:46,560 --> 00:13:48,480
differences anymore

307
00:13:48,480 --> 00:13:51,120
second it allows many possible

308
00:13:51,120 --> 00:13:53,279
differential chairs exist after the

309
00:13:53,279 --> 00:13:56,880
different enumeration phase

310
00:13:56,880 --> 00:13:59,120
while only one many different chair is

311
00:13:59,120 --> 00:14:02,320
allowed to exist in the original attack

312
00:14:02,320 --> 00:14:04,160
in the original attack

313
00:14:04,160 --> 00:14:04,959
so

314
00:14:04,959 --> 00:14:05,920
we can

315
00:14:05,920 --> 00:14:09,040
extend the number of attacked runs

316
00:14:09,040 --> 00:14:12,079
however this also naturally causes a

317
00:14:12,079 --> 00:14:13,120
problem

318
00:14:13,120 --> 00:14:14,880
that's how to find a correct

319
00:14:14,880 --> 00:14:16,800
differential chair among all the

320
00:14:16,800 --> 00:14:18,399
possible differential trails of the

321
00:14:18,399 --> 00:14:20,639
different enumeration

322
00:14:20,639 --> 00:14:24,160
next i will discuss our solution to this

323
00:14:24,160 --> 00:14:25,199
problem

324
00:14:25,199 --> 00:14:28,639
but english in a world

325
00:14:28,639 --> 00:14:31,040
we will devise an algorithm to

326
00:14:31,040 --> 00:14:34,320
efficiently check but uh to efficiently

327
00:14:34,320 --> 00:14:37,360
retrieve a key from a random given

328
00:14:37,360 --> 00:14:40,320
differential chair

329
00:14:40,800 --> 00:14:44,079
so note that in the extended attack from

330
00:14:44,079 --> 00:14:45,360
work

331
00:14:45,360 --> 00:14:47,920
uh for the last hour three rounds there

332
00:14:47,920 --> 00:14:50,079
will be no active

333
00:14:50,079 --> 00:14:51,680
exports

334
00:14:51,680 --> 00:14:54,720
so for the last three runs

335
00:14:54,720 --> 00:14:57,680
to recap the key from a random given

336
00:14:57,680 --> 00:15:00,320
differential chair we first introduced

337
00:15:00,320 --> 00:15:03,199
some intermediate variables to represent

338
00:15:03,199 --> 00:15:05,680
the input of each s box

339
00:15:05,680 --> 00:15:07,040
in these runs

340
00:15:07,040 --> 00:15:13,000
there will be in total 3 mr3 variables

341
00:15:13,279 --> 00:15:16,880
then according to observation 1 once

342
00:15:16,880 --> 00:15:20,079
xbox is active the xbox is freely

343
00:15:20,079 --> 00:15:22,320
linearized and there are two linear

344
00:15:22,320 --> 00:15:25,600
conditions on the c output bits

345
00:15:25,600 --> 00:15:28,399
in supposing all the

346
00:15:28,399 --> 00:15:31,920
xboxes in the middle r1 plus r2 runs are

347
00:15:31,920 --> 00:15:33,759
active

348
00:15:33,759 --> 00:15:36,320
we can know that

349
00:15:36,320 --> 00:15:37,120
from

350
00:15:37,120 --> 00:15:41,279
observation 1 we can extract at most 2 m

351
00:15:41,279 --> 00:15:44,320
times our 1 plus our two linear

352
00:15:44,320 --> 00:15:48,160
equations in terms of the k bit key and

353
00:15:48,160 --> 00:15:48,880
the

354
00:15:48,880 --> 00:15:52,480
3 ms2 intermediate variables

355
00:15:52,480 --> 00:15:55,120
if the number of equations is larger

356
00:15:55,120 --> 00:15:56,800
than the number of

357
00:15:56,800 --> 00:15:58,800
variables

358
00:15:58,800 --> 00:16:01,920
uh we can expect only one solution to

359
00:16:01,920 --> 00:16:05,120
the equation system

360
00:16:05,440 --> 00:16:09,040
and according to the solution to the

361
00:16:09,040 --> 00:16:10,560
equation system

362
00:16:10,560 --> 00:16:12,720
we can get the

363
00:16:12,720 --> 00:16:14,880
uh the key value

364
00:16:14,880 --> 00:16:17,680
and the key and the correctness of the

365
00:16:17,680 --> 00:16:20,880
key can be easily verified by using the

366
00:16:20,880 --> 00:16:24,320
plaintext ciphertext pair

367
00:16:24,320 --> 00:16:25,519
so ins

368
00:16:25,519 --> 00:16:26,560
indeed

369
00:16:26,560 --> 00:16:29,839
we only need to use b runs uh

370
00:16:29,839 --> 00:16:32,240
if b says the files

371
00:16:32,240 --> 00:16:33,360
two

372
00:16:33,360 --> 00:16:35,440
times and b

373
00:16:35,440 --> 00:16:38,800
greater than k plus three m r three and

374
00:16:38,800 --> 00:16:43,439
b is smaller than r one plus r two

375
00:16:44,240 --> 00:16:45,279
so

376
00:16:45,279 --> 00:16:48,639
in the above explanation we only discuss

377
00:16:48,639 --> 00:16:51,040
the case where

378
00:16:51,040 --> 00:16:54,320
all the x-boxes in the middle r1

379
00:16:54,320 --> 00:16:57,199
plus r2 runs are active

380
00:16:57,199 --> 00:16:59,839
but it is possible to happen that there

381
00:16:59,839 --> 00:17:02,720
will be some inactive x-boxes in these

382
00:17:02,720 --> 00:17:05,039
middle rounds so what will happen if

383
00:17:05,039 --> 00:17:07,760
this happens

384
00:17:07,839 --> 00:17:11,839
uh one way is to uh introduce some

385
00:17:11,839 --> 00:17:15,119
intermediate variables for uh

386
00:17:15,119 --> 00:17:16,480
to

387
00:17:16,480 --> 00:17:19,439
to represent the input bits of each s

388
00:17:19,439 --> 00:17:20,480
box

389
00:17:20,480 --> 00:17:23,520
just as our way to perceive the last r3

390
00:17:23,520 --> 00:17:24,720
runs

391
00:17:24,720 --> 00:17:28,079
however this will not be uh

392
00:17:28,079 --> 00:17:32,720
friendly to compute the time complexity

393
00:17:32,720 --> 00:17:35,440
of our attack so we instead choose to

394
00:17:35,440 --> 00:17:38,640
get two output bits to linearize an

395
00:17:38,640 --> 00:17:40,480
inactive xbox

396
00:17:40,480 --> 00:17:43,520
then we can find an easy way to

397
00:17:43,520 --> 00:17:45,919
bounce the time complexity to retrieve

398
00:17:45,919 --> 00:17:50,400
the key for a random differential chair

399
00:17:53,600 --> 00:17:58,280
so it is given here

400
00:18:01,679 --> 00:18:03,440
by apply uh

401
00:18:03,440 --> 00:18:06,480
so now we have now the time complexity

402
00:18:06,480 --> 00:18:07,280
to

403
00:18:07,280 --> 00:18:09,360
enumerate differences and the time

404
00:18:09,360 --> 00:18:10,960
complexity to

405
00:18:10,960 --> 00:18:14,600
retrieve the key

406
00:18:15,600 --> 00:18:18,480
for uh for uh for after a given

407
00:18:18,480 --> 00:18:19,840
parameter

408
00:18:19,840 --> 00:18:20,640
uh

409
00:18:20,640 --> 00:18:22,559
n k m

410
00:18:22,559 --> 00:18:24,160
r

411
00:18:24,160 --> 00:18:26,799
uh so

412
00:18:27,039 --> 00:18:30,000
so we can compute the the maximum number

413
00:18:30,000 --> 00:18:32,960
of rounds that can be attacked

414
00:18:32,960 --> 00:18:35,679
so from this table uh it can be found

415
00:18:35,679 --> 00:18:39,200
that we can break one instances one

416
00:18:39,200 --> 00:18:42,559
instance of low mc when the block size n

417
00:18:42,559 --> 00:18:45,360
is much larger than the key size k

418
00:18:45,360 --> 00:18:47,039
this is uh

419
00:18:47,039 --> 00:18:50,000
benefit this is indeed

420
00:18:50,000 --> 00:18:52,960
this indeed benefits from our efficient

421
00:18:52,960 --> 00:18:56,640
way to enumerate differences

422
00:18:56,640 --> 00:18:58,880
and from this table

423
00:18:58,880 --> 00:19:02,000
it can be found that we can

424
00:19:02,000 --> 00:19:05,600
break several instances of low mcm

425
00:19:05,600 --> 00:19:06,640
and

426
00:19:06,640 --> 00:19:08,799
we can

427
00:19:08,799 --> 00:19:11,679
crypt analysis we and we can

428
00:19:11,679 --> 00:19:14,960
analyze much more runs than the proposed

429
00:19:14,960 --> 00:19:17,760
number of runs

430
00:19:18,480 --> 00:19:22,240
at last i will briefly describe our

431
00:19:22,240 --> 00:19:25,679
attack on the forerunner series of 4x

432
00:19:25,679 --> 00:19:26,880
box layer

433
00:19:26,880 --> 00:19:28,480
uh the

434
00:19:28,480 --> 00:19:31,440
general idea is the same that's

435
00:19:31,440 --> 00:19:33,679
uh that's where we are enumerate the

436
00:19:33,679 --> 00:19:35,440
differences and

437
00:19:35,440 --> 00:19:37,360
retrieve the key from a differential

438
00:19:37,360 --> 00:19:38,960
chair by

439
00:19:38,960 --> 00:19:42,320
with algebraic techniques

440
00:19:42,559 --> 00:19:43,840
so uh

441
00:19:43,840 --> 00:19:46,799
the attack procedure can be divided into

442
00:19:46,799 --> 00:19:49,120
four steps first

443
00:19:49,120 --> 00:19:53,120
we come we choose an output difference

444
00:19:53,120 --> 00:19:55,200
for the first round

445
00:19:55,200 --> 00:19:57,440
0s

446
00:19:57,440 --> 00:20:00,080
so the output difference of the xbox

447
00:20:00,080 --> 00:20:02,159
layer in the first round

448
00:20:02,159 --> 00:20:07,200
uh we expect that 3x0 dirt

449
00:20:07,200 --> 00:20:08,159
can

450
00:20:08,159 --> 00:20:10,240
maximize the number of

451
00:20:10,240 --> 00:20:13,679
inactive x-boxes in the second round

452
00:20:13,679 --> 00:20:15,600
uh

453
00:20:15,600 --> 00:20:18,480
based on some statistic knowledge we can

454
00:20:18,480 --> 00:20:22,000
compute the expectation of the number of

455
00:20:22,000 --> 00:20:26,320
inactive x-boxes for in the second round

456
00:20:26,320 --> 00:20:29,200
then we choose an input difference that

457
00:20:29,200 --> 00:20:32,640
are 0 such that data 0 can propagate to

458
00:20:32,640 --> 00:20:34,960
delta 0s

459
00:20:34,960 --> 00:20:37,360
then we choose two plane tests whose

460
00:20:37,360 --> 00:20:42,399
difference is delta 0 and encrypt them

461
00:20:42,480 --> 00:20:46,159
and obtain the cipher test

462
00:20:46,159 --> 00:20:48,480
according to the cipher tests we can

463
00:20:48,480 --> 00:20:54,080
compute the uh state difference 3s

464
00:20:54,080 --> 00:20:56,799
then at step 3

465
00:20:56,799 --> 00:21:00,400
delta 1 is already none and we enumerate

466
00:21:00,400 --> 00:21:06,640
differences from delta 1 to get 32

467
00:21:07,039 --> 00:21:09,039
for each data 2

468
00:21:09,039 --> 00:21:11,280
at step 4 we were in numerous

469
00:21:11,280 --> 00:21:14,000
differences while solving equations to

470
00:21:14,000 --> 00:21:16,640
get all possible different transitions

471
00:21:16,640 --> 00:21:19,760
from delta 2 to that

472
00:21:19,760 --> 00:21:21,360
3s

473
00:21:21,360 --> 00:21:23,520
so and

474
00:21:23,520 --> 00:21:25,760
so by solving equations we can always

475
00:21:25,760 --> 00:21:29,679
get we can get a possible a full run

476
00:21:29,679 --> 00:21:32,159
differential chair then we use our

477
00:21:32,159 --> 00:21:35,039
algebraic techniques to retrieve the key

478
00:21:35,039 --> 00:21:35,919
from

479
00:21:35,919 --> 00:21:38,559
this differential chair and then check

480
00:21:38,559 --> 00:21:41,600
the validity of the key

481
00:21:41,600 --> 00:21:44,640
with a similar way to

482
00:21:44,640 --> 00:21:47,440
balance the time complexity to retrieve

483
00:21:47,440 --> 00:21:49,600
the key and the time complexity to

484
00:21:49,600 --> 00:21:52,480
enumerate differences

485
00:21:52,480 --> 00:21:54,400
we find that

486
00:21:54,400 --> 00:21:57,200
the forerunner low mc with a 4x box

487
00:21:57,200 --> 00:22:01,520
layer or is insecure so you can see from

488
00:22:01,520 --> 00:22:03,520
this table that

489
00:22:03,520 --> 00:22:04,880
our attacks

490
00:22:04,880 --> 00:22:07,679
are much more efficient than the brute

491
00:22:07,679 --> 00:22:10,400
force attack

492
00:22:10,840 --> 00:22:16,159
uh and they require negligible memory

493
00:22:16,159 --> 00:22:19,280
in conclusion uh we devised some

494
00:22:19,280 --> 00:22:21,520
efficient attacks on low mc with only

495
00:22:21,520 --> 00:22:24,080
two children plan tests and a negligible

496
00:22:24,080 --> 00:22:25,200
memory

497
00:22:25,200 --> 00:22:27,440
parameters with two plane tests are

498
00:22:27,440 --> 00:22:30,080
required to be secure in the picnic

499
00:22:30,080 --> 00:22:33,039
security proof and hence such attacks

500
00:22:33,039 --> 00:22:34,320
are meaningful

501
00:22:34,320 --> 00:22:35,360
second

502
00:22:35,360 --> 00:22:38,000
it's not difficult to observe that our

503
00:22:38,000 --> 00:22:39,120
attacks

504
00:22:39,120 --> 00:22:41,760
much benefit from the

505
00:22:41,760 --> 00:22:44,159
uh from some special properties of the

506
00:22:44,159 --> 00:22:46,000
three-bit s-box

507
00:22:46,000 --> 00:22:48,240
however these properties

508
00:22:48,240 --> 00:22:49,039
have

509
00:22:49,039 --> 00:22:51,760
have now been used before

510
00:22:51,760 --> 00:22:53,679
and at the last

511
00:22:53,679 --> 00:22:56,080
making progress in the crypto analysis

512
00:22:56,080 --> 00:22:59,039
of low mc directly threatens the

513
00:22:59,039 --> 00:23:03,120
security of several instances of low mcm

514
00:23:03,120 --> 00:23:05,919
which is a backdoor construction built

515
00:23:05,919 --> 00:23:07,520
on low mc

516
00:23:07,520 --> 00:23:11,440
and proposed in crypto 2020

517
00:23:11,440 --> 00:23:12,799
that's all

518
00:23:12,799 --> 00:23:16,039
thank you

