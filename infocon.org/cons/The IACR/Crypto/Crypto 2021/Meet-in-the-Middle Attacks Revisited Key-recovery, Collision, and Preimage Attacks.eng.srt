1
00:00:01,680 --> 00:00:03,439
hello everyone

2
00:00:03,439 --> 00:00:07,200
i am hua from qinghua university

3
00:00:07,200 --> 00:00:09,760
i'm so honored to be here and i will

4
00:00:09,760 --> 00:00:11,360
share our people

5
00:00:11,360 --> 00:00:14,719
with in the middle attacks universities

6
00:00:14,719 --> 00:00:17,680
kill cover correlation and pre-immediate

7
00:00:17,680 --> 00:00:20,160
attacks

8
00:00:21,520 --> 00:00:24,080
firstly i will introduce some

9
00:00:24,080 --> 00:00:25,519
backgrounds

10
00:00:25,519 --> 00:00:29,119
then i will explain automatical mitm can

11
00:00:29,119 --> 00:00:30,880
recover attacks

12
00:00:30,880 --> 00:00:34,000
under its application of skinny

13
00:00:34,000 --> 00:00:37,200
next i will describe exploiting

14
00:00:37,200 --> 00:00:40,160
non-linearly constrained neutrons in

15
00:00:40,160 --> 00:00:43,200
mit-m attacks

16
00:00:43,200 --> 00:00:44,559
and finally

17
00:00:44,559 --> 00:00:48,480
i will introduce the miftm best

18
00:00:48,480 --> 00:00:51,680
collision attacks

19
00:00:53,280 --> 00:00:55,280
so first

20
00:00:55,280 --> 00:00:58,160
let's take a look at the source of state

21
00:00:58,160 --> 00:01:01,680
which in the middle attack

22
00:01:01,920 --> 00:01:06,000
the attack consists of two parts

23
00:01:06,000 --> 00:01:08,720
in the mitm stage

24
00:01:08,720 --> 00:01:12,159
we fleet out some wrong key candace

25
00:01:12,159 --> 00:01:15,439
and reduce the case base

26
00:01:15,439 --> 00:01:18,080
in the key testing stage

27
00:01:18,080 --> 00:01:21,520
we test the surviving key candidates in

28
00:01:21,520 --> 00:01:25,640
a broad force minor

29
00:01:26,320 --> 00:01:28,720
like the picture shows

30
00:01:28,720 --> 00:01:32,640
if we assume the block size is m bits

31
00:01:32,640 --> 00:01:35,680
and the key size is lbs

32
00:01:35,680 --> 00:01:39,040
and we assume the key can split into

33
00:01:39,040 --> 00:01:41,280
three independent key

34
00:01:41,280 --> 00:01:45,520
k1 k2 and k3

35
00:01:45,520 --> 00:01:49,200
some mps information of a state

36
00:01:49,200 --> 00:01:50,479
view v

37
00:01:50,479 --> 00:01:54,720
can be partially computed along forward

38
00:01:54,720 --> 00:01:55,840
direction

39
00:01:55,840 --> 00:02:01,600
by f1p without knowing t2

40
00:02:01,920 --> 00:02:05,360
and the same embed can also be computed

41
00:02:05,360 --> 00:02:09,119
along the backward direction by inverse

42
00:02:09,119 --> 00:02:14,720
of f2 c without knowing q1

43
00:02:16,720 --> 00:02:21,360
therefore we will get 2 to l minus m

44
00:02:21,360 --> 00:02:24,959
king can say remain

45
00:02:24,959 --> 00:02:27,280
then we test the surviving key

46
00:02:27,280 --> 00:02:30,640
candidates using some pen test

47
00:02:30,640 --> 00:02:32,480
cycle test

48
00:02:32,480 --> 00:02:36,160
first to find the correct key in key can

49
00:02:36,160 --> 00:02:39,760
in key testing stage

50
00:02:40,160 --> 00:02:42,400
and the total communication

51
00:02:42,400 --> 00:02:44,480
compact city it

52
00:02:44,480 --> 00:02:46,400
can be expressed

53
00:02:46,400 --> 00:02:48,239
can be expressed

54
00:02:48,239 --> 00:02:51,720
by this formula

55
00:02:55,280 --> 00:02:58,239
as eurocraft 1921

56
00:02:58,239 --> 00:03:03,519
the mitm pro image attacks on aes like

57
00:03:03,519 --> 00:03:05,519
was thoroughly modeled

58
00:03:05,519 --> 00:03:08,720
as constrained optimus optimization

59
00:03:08,720 --> 00:03:10,080
problems

60
00:03:10,080 --> 00:03:13,920
which was solved with lilp technicals by

61
00:03:13,920 --> 00:03:16,958
paul ethel

62
00:03:17,120 --> 00:03:19,760
next i will introduce the formal

63
00:03:19,760 --> 00:03:25,200
description of the mitm technical

64
00:03:25,680 --> 00:03:28,159
let the picture shows

65
00:03:28,159 --> 00:03:32,319
state scnc and state as case e

66
00:03:32,319 --> 00:03:34,879
as a starting state

67
00:03:34,879 --> 00:03:38,080
the eighteen states are e plus and e

68
00:03:38,080 --> 00:03:40,560
minors

69
00:03:41,840 --> 00:03:44,319
in the forward computation

70
00:03:44,319 --> 00:03:45,680
the

71
00:03:45,680 --> 00:03:50,720
starts from scnc and sks8 leading to

72
00:03:50,720 --> 00:03:52,319
e plus

73
00:03:52,319 --> 00:03:55,200
and in the backward computation

74
00:03:55,200 --> 00:04:00,480
the path starting from scnc and sksa

75
00:04:00,480 --> 00:04:02,239
leading to e

76
00:04:02,239 --> 00:04:04,720
minus

77
00:04:05,360 --> 00:04:08,640
passion match is between the e

78
00:04:08,640 --> 00:04:12,760
plus and the e minus

79
00:04:15,519 --> 00:04:16,639
moreover

80
00:04:16,639 --> 00:04:18,238
the sales of

81
00:04:18,238 --> 00:04:21,279
starting states are partitioned into

82
00:04:21,279 --> 00:04:23,680
different subsets with different

83
00:04:23,680 --> 00:04:25,600
meanings

84
00:04:25,600 --> 00:04:27,280
due to work

85
00:04:27,280 --> 00:04:30,479
the forward communication i denote and

86
00:04:30,479 --> 00:04:31,680
the

87
00:04:31,680 --> 00:04:35,040
read as blue cell

88
00:04:35,040 --> 00:04:38,560
each word of the bad word

89
00:04:38,560 --> 00:04:41,600
communication are denoted

90
00:04:41,600 --> 00:04:43,520
by red steel

91
00:04:43,520 --> 00:04:44,880
and no

92
00:04:44,880 --> 00:04:48,160
constants acknowledged by reseal

93
00:04:48,160 --> 00:04:51,199
besides there will be unknown words in

94
00:04:51,199 --> 00:04:54,560
both the forward and backward charge

95
00:04:54,560 --> 00:04:55,360
you

96
00:04:55,360 --> 00:05:00,720
by red cells by nodes by white steel

97
00:05:03,840 --> 00:05:06,479
the number of blue cells in the study

98
00:05:06,479 --> 00:05:10,080
state is the initial going of rhythm for

99
00:05:10,080 --> 00:05:12,800
the forward computation

100
00:05:12,800 --> 00:05:15,440
and it is defined

101
00:05:15,440 --> 00:05:18,000
as lambda plus

102
00:05:18,000 --> 00:05:21,840
similarly we use lambda minus defines

103
00:05:21,840 --> 00:05:24,479
the number of weight cells in the

104
00:05:24,479 --> 00:05:27,440
starting stage

105
00:05:27,680 --> 00:05:32,080
in forward and backward computation

106
00:05:33,120 --> 00:05:36,800
the dof will consist will be consumed

107
00:05:36,800 --> 00:05:40,400
we use sigma plus and sigma minus

108
00:05:40,400 --> 00:05:43,919
to represent the accumulated dof

109
00:05:43,919 --> 00:05:47,280
consumed in forward and backward charge

110
00:05:47,280 --> 00:05:50,280
respectively

111
00:05:50,320 --> 00:05:52,960
therefore the remaining degree of

112
00:05:52,960 --> 00:05:54,080
freedom

113
00:05:54,080 --> 00:05:57,600
of forward and bad word computation dof

114
00:05:57,600 --> 00:06:00,800
graph and dlf minus can be computed

115
00:06:00,800 --> 00:06:02,960
easily

116
00:06:02,960 --> 00:06:05,600
in addition the degree of match is

117
00:06:05,600 --> 00:06:08,479
denoted by dom

118
00:06:08,479 --> 00:06:12,560
so the objective function is to maximize

119
00:06:12,560 --> 00:06:16,880
the minimum view of dof plus dlf minus

120
00:06:16,880 --> 00:06:20,520
until m

121
00:06:22,560 --> 00:06:23,600
next

122
00:06:23,600 --> 00:06:27,600
let me introduce our automatical mitm

123
00:06:27,600 --> 00:06:30,960
kill cover attacks

124
00:06:32,479 --> 00:06:35,919
because our m is to the current key

125
00:06:35,919 --> 00:06:39,120
we need distinguish with the dlf is

126
00:06:39,120 --> 00:06:42,319
front key and the consumed dof is wrong

127
00:06:42,319 --> 00:06:44,880
key or not

128
00:06:44,880 --> 00:06:48,560
therefore we divide the lambda plus and

129
00:06:48,560 --> 00:06:50,880
the sigma class

130
00:06:50,880 --> 00:06:53,759
to two parts

131
00:06:54,000 --> 00:06:56,960
in the mitm ki recovery attack

132
00:06:56,960 --> 00:07:00,479
the 4k space must be tested

133
00:07:00,479 --> 00:07:01,680
and we

134
00:07:01,680 --> 00:07:06,240
must identify the unicorn secret key

135
00:07:06,240 --> 00:07:07,360
besides

136
00:07:07,360 --> 00:07:09,919
in the key recovery attack

137
00:07:09,919 --> 00:07:13,919
we prefer not to exhaust the full code

138
00:07:13,919 --> 00:07:14,800
work

139
00:07:14,800 --> 00:07:18,560
of the targeted cipher

140
00:07:18,560 --> 00:07:23,199
therefore the degrees of freedom from sk

141
00:07:23,199 --> 00:07:26,800
cannot be depleted

142
00:07:26,800 --> 00:07:29,280
what are the degrees of freedom from

143
00:07:29,280 --> 00:07:33,758
sdmc should be used up

144
00:07:35,199 --> 00:07:38,479
and there is at least one great seal in

145
00:07:38,479 --> 00:07:41,440
the plain tenth state

146
00:07:41,440 --> 00:07:44,479
test conditions can be represented

147
00:07:44,479 --> 00:07:48,318
by questions like this

148
00:07:51,120 --> 00:07:52,160
next

149
00:07:52,160 --> 00:07:53,599
i will show

150
00:07:53,599 --> 00:07:56,560
how we use our mitm

151
00:07:56,560 --> 00:08:00,560
care recovery attack or skinny

152
00:08:03,039 --> 00:08:05,599
let's briefly record the structure of

153
00:08:05,599 --> 00:08:07,840
skinning

154
00:08:07,840 --> 00:08:11,120
like the picture shows skinning bases on

155
00:08:11,120 --> 00:08:13,680
the twinkie framework

156
00:08:13,680 --> 00:08:18,400
we apply our message skin ink 3m

157
00:08:18,400 --> 00:08:22,879
the version with an n bit block size

158
00:08:22,879 --> 00:08:25,680
a 3m bit key

159
00:08:25,680 --> 00:08:30,639
and zero bit twitch tweaky

160
00:08:30,639 --> 00:08:34,479
each one the state is updated with five

161
00:08:34,479 --> 00:08:35,919
operations

162
00:08:35,919 --> 00:08:38,880
sub sales and customs

163
00:08:38,880 --> 00:08:40,958
and the round two key

164
00:08:40,958 --> 00:08:45,598
shift rows and the mixed columns

165
00:08:45,839 --> 00:08:48,800
and the key register is arranged into

166
00:08:48,800 --> 00:08:50,880
three four times four

167
00:08:50,880 --> 00:08:55,519
squares note as tk1 gt2 and tk3

168
00:08:55,519 --> 00:08:58,480
respectively

169
00:09:00,000 --> 00:09:02,880
then i will show you how to build the

170
00:09:02,880 --> 00:09:07,519
milp model for funding mit-m attacks of

171
00:09:07,519 --> 00:09:09,040
screening and

172
00:09:09,040 --> 00:09:11,599
3m

173
00:09:12,320 --> 00:09:14,800
objective function the objective

174
00:09:14,800 --> 00:09:17,440
function is to maximize the minimum

175
00:09:17,440 --> 00:09:23,200
field of dof plus dlf minus and dom

176
00:09:23,200 --> 00:09:25,920
for starting states we have to know the

177
00:09:25,920 --> 00:09:29,440
number of rules and the results

178
00:09:29,440 --> 00:09:32,720
so we introduce alpha and beta for each

179
00:09:32,720 --> 00:09:37,360
cell in the starting stage

180
00:09:37,360 --> 00:09:40,880
alpha equals 1 if and only if the sale

181
00:09:40,880 --> 00:09:41,920
is blue

182
00:09:41,920 --> 00:09:45,360
while beta equals 1 if an earning

183
00:09:45,360 --> 00:09:48,480
the sale is rate

184
00:09:48,480 --> 00:09:51,360
then we can compute the number of root

185
00:09:51,360 --> 00:09:56,320
cells by an order field of rf

186
00:09:56,320 --> 00:09:59,040
and also we can compute the number of

187
00:09:59,040 --> 00:10:03,040
ratios by add all fields of beta

188
00:10:03,040 --> 00:10:04,880
so we can

189
00:10:04,880 --> 00:10:08,480
we can use alpha and beta to represent

190
00:10:08,480 --> 00:10:11,200
the lambda e and c plus

191
00:10:11,200 --> 00:10:13,040
lambda k say plus

192
00:10:13,040 --> 00:10:16,880
lambda ends in minus lambda k say minus

193
00:10:16,880 --> 00:10:19,839
like this

194
00:10:20,480 --> 00:10:23,440
for the ending states we assume this

195
00:10:23,440 --> 00:10:26,640
match matching only happens as the mixed

196
00:10:26,640 --> 00:10:29,120
columns

197
00:10:29,120 --> 00:10:33,279
so each column of any states b plus and

198
00:10:33,279 --> 00:10:38,000
a minus are linked by the mc operation

199
00:10:38,000 --> 00:10:41,120
we can enumerate all possible patterns

200
00:10:41,120 --> 00:10:44,320
and convert this local constraints into

201
00:10:44,320 --> 00:10:46,800
linear encoders

202
00:10:46,800 --> 00:10:49,440
using the campaign hall computation by

203
00:10:49,440 --> 00:10:51,839
state

204
00:10:52,800 --> 00:10:56,160
in computation process we build rules

205
00:10:56,160 --> 00:11:00,880
for xor art and mc

206
00:11:00,880 --> 00:11:03,839
i do not describe the rules in details

207
00:11:03,839 --> 00:11:08,000
here because the time is limited

208
00:11:08,000 --> 00:11:11,360
besides we should add the constraints

209
00:11:11,360 --> 00:11:15,399
which mentioned earlier

210
00:11:18,160 --> 00:11:19,920
solving the model

211
00:11:19,920 --> 00:11:24,000
we identified a 23 round mitm carry

212
00:11:24,000 --> 00:11:26,480
curve attack a skin in

213
00:11:26,480 --> 00:11:27,760
3m

214
00:11:27,760 --> 00:11:30,480
as shown in the figure

215
00:11:30,480 --> 00:11:33,279
the starting states are y1

216
00:11:33,279 --> 00:11:35,800
and the 320 inverse

217
00:11:35,800 --> 00:11:41,360
tg121 thinking of 2 to 1 to g3 to 1.

218
00:11:41,360 --> 00:11:44,800
the matching process happens as the mc

219
00:11:44,800 --> 00:11:49,600
operation between zinc 12 x13

220
00:11:49,600 --> 00:11:51,920
there are three blue cells

221
00:11:51,920 --> 00:11:54,560
and three red cells in

222
00:11:54,560 --> 00:11:58,000
state as case a

223
00:11:58,240 --> 00:11:58,959
so

224
00:11:58,959 --> 00:12:02,240
lambda k is a minus

225
00:12:02,240 --> 00:12:06,320
equals 3 and the lambda case a plus

226
00:12:06,320 --> 00:12:09,360
equals 3 2.

227
00:12:09,360 --> 00:12:11,839
it consumes two cells in the forward

228
00:12:11,839 --> 00:12:14,480
computation

229
00:12:16,240 --> 00:12:21,360
hence we can get dof minus equals one

230
00:12:21,360 --> 00:12:24,399
in the same way we also can get

231
00:12:24,399 --> 00:12:28,720
dof plus equals 1

232
00:12:28,800 --> 00:12:33,600
at the main point we have um from the

233
00:12:33,600 --> 00:12:37,680
from the first two columns of c12 and

234
00:12:37,680 --> 00:12:40,479
x13

235
00:12:44,959 --> 00:12:47,839
this is the algorithm of 20 straight

236
00:12:47,839 --> 00:12:50,480
round helicopter attack

237
00:12:50,480 --> 00:12:55,040
we do not discuss the details here

238
00:12:58,800 --> 00:13:02,480
using the same method we also analyze

239
00:13:02,480 --> 00:13:03,839
screening

240
00:13:03,839 --> 00:13:06,000
a summary of skinning and focus

241
00:13:06,000 --> 00:13:09,200
screening is shown in the table

242
00:13:09,200 --> 00:13:11,600
our attack is the first

243
00:13:11,600 --> 00:13:16,079
23rd round single k attack on screening

244
00:13:16,079 --> 00:13:19,079
128

245
00:13:21,240 --> 00:13:22,800
384

246
00:13:22,800 --> 00:13:25,680
and screening

247
00:13:25,760 --> 00:13:27,120
64

248
00:13:27,120 --> 00:13:30,120
192

249
00:13:30,560 --> 00:13:33,519
and the memory needed in our attacks is

250
00:13:33,519 --> 00:13:36,160
so small

251
00:13:40,240 --> 00:13:44,240
next i will introduce another part

252
00:13:44,240 --> 00:13:46,880
exploiting non-linearly constrained

253
00:13:46,880 --> 00:13:51,839
neutral words in mit-m attacks

254
00:13:53,519 --> 00:13:56,880
in mit-m attack and screening

255
00:13:56,880 --> 00:13:59,199
we have to solve two systems of

256
00:13:59,199 --> 00:14:01,920
recursions in order to compute the

257
00:14:01,920 --> 00:14:06,240
allowable fields for the neutral worlds

258
00:14:06,240 --> 00:14:08,800
in the attack of skinning and previous

259
00:14:08,800 --> 00:14:11,600
mitm pre-made attacks

260
00:14:11,600 --> 00:14:15,519
the two systems of equations are linear

261
00:14:15,519 --> 00:14:20,560
so it is easy to derive solution

262
00:14:20,720 --> 00:14:24,560
however we encounter mining mitm attacks

263
00:14:24,560 --> 00:14:28,480
with non-linear constrained neutrons

264
00:14:28,480 --> 00:14:29,360
and

265
00:14:29,360 --> 00:14:32,399
there is no efficient method for solving

266
00:14:32,399 --> 00:14:34,800
serve

267
00:14:35,680 --> 00:14:38,320
we present a table based

268
00:14:38,320 --> 00:14:40,079
technical

269
00:14:40,079 --> 00:14:42,480
to solve the problem

270
00:14:42,480 --> 00:14:46,320
the algorithm choose here

271
00:14:47,760 --> 00:14:49,120
moreover

272
00:14:49,120 --> 00:14:52,240
we can apply the technical to the mitm

273
00:14:52,240 --> 00:14:54,079
pre-image attack

274
00:14:54,079 --> 00:14:59,560
and the time complexity is not inquest

275
00:15:02,880 --> 00:15:07,519
we price the algorithm to crystal 256

276
00:15:07,519 --> 00:15:09,760
and centennial hash

277
00:15:09,760 --> 00:15:12,399
prime major attack on sixth round of

278
00:15:12,399 --> 00:15:16,720
course transformation of crystal 256

279
00:15:16,720 --> 00:15:20,160
is shown in figure

280
00:15:20,959 --> 00:15:24,320
without giving more details i will issue

281
00:15:24,320 --> 00:15:29,120
the time complexity is 2 to 240

282
00:15:29,120 --> 00:15:32,720
and the memory complexity is about 2 to

283
00:15:32,720 --> 00:15:35,720
152

284
00:15:38,880 --> 00:15:40,399
similarly

285
00:15:40,399 --> 00:15:43,839
the sixth round mitm attack at the 10

286
00:15:43,839 --> 00:15:46,480
hash is shown here

287
00:15:46,480 --> 00:15:48,720
the time complexity and memory

288
00:15:48,720 --> 00:15:56,399
complexity is 2 to 208 and 2 2 48

289
00:16:00,079 --> 00:16:01,279
finally

290
00:16:01,279 --> 00:16:04,160
i will introduce the last part of our

291
00:16:04,160 --> 00:16:05,199
people

292
00:16:05,199 --> 00:16:10,000
mitm based collision attacks

293
00:16:11,920 --> 00:16:15,600
we call algorithm a tco partial target

294
00:16:15,600 --> 00:16:19,360
pro image if it can produce a message

295
00:16:19,360 --> 00:16:22,399
whose hash field is a random element in

296
00:16:22,399 --> 00:16:25,680
a given subspace

297
00:16:26,240 --> 00:16:29,279
suppose that there is algorithm that can

298
00:16:29,279 --> 00:16:32,399
produce a different tcl partial target

299
00:16:32,399 --> 00:16:34,079
per image

300
00:16:34,079 --> 00:16:37,279
then we expect to find a collision by

301
00:16:37,279 --> 00:16:39,440
running the algorithm

302
00:16:39,440 --> 00:16:41,120
2 to

303
00:16:41,120 --> 00:16:45,680
w times h minus t of 2 times

304
00:16:45,680 --> 00:16:49,279
to identify a collision on hcl hash

305
00:16:49,279 --> 00:16:51,680
field

306
00:16:51,680 --> 00:16:55,199
given an mitm characteristic

307
00:16:55,199 --> 00:16:58,240
the framework for collection

308
00:16:58,240 --> 00:17:03,240
is described in following algorithm

309
00:17:04,079 --> 00:17:06,559
we do not describe the algorithm in

310
00:17:06,559 --> 00:17:09,839
details as well

311
00:17:13,359 --> 00:17:15,839
according to our analysis

312
00:17:15,839 --> 00:17:18,640
we finally get the time complexity of

313
00:17:18,640 --> 00:17:22,240
the stack is like this

314
00:17:24,480 --> 00:17:28,079
so in the model we need to maximize the

315
00:17:28,079 --> 00:17:33,120
minimum view of cof plus minus t of 2 d

316
00:17:33,120 --> 00:17:36,480
of minus minus t of 2

317
00:17:36,480 --> 00:17:41,600
m minus t of 2 and t of 2.

318
00:17:42,559 --> 00:17:45,280
to determine the degree of match we

319
00:17:45,280 --> 00:17:48,640
consider two situations according to the

320
00:17:48,640 --> 00:17:53,039
position where the matching happens

321
00:17:53,360 --> 00:17:56,160
if the merging point is placed as a last

322
00:17:56,160 --> 00:17:57,120
one

323
00:17:57,120 --> 00:18:00,080
we found in this case we can ignore the

324
00:18:00,080 --> 00:18:03,918
coloring information of t

325
00:18:04,160 --> 00:18:06,799
if the matching point is not as a lot

326
00:18:06,799 --> 00:18:07,760
wrong

327
00:18:07,760 --> 00:18:11,280
the xor of the target t can happen in

328
00:18:11,280 --> 00:18:13,120
forward computation

329
00:18:13,120 --> 00:18:17,678
or in the backward computation

330
00:18:18,640 --> 00:18:21,200
the yellow cells are pro

331
00:18:21,200 --> 00:18:24,960
are prefixed constants

332
00:18:24,960 --> 00:18:26,720
like the fixtures

333
00:18:26,720 --> 00:18:29,679
we found that we can regard the yellow

334
00:18:29,679 --> 00:18:32,880
cells as great sales in the rules of x

335
00:18:32,880 --> 00:18:35,280
or

336
00:18:40,559 --> 00:18:43,840
we apply the automatic model of mitm

337
00:18:43,840 --> 00:18:46,480
collision attack to warpole

338
00:18:46,480 --> 00:18:51,200
and get a six round mitm attack

339
00:18:51,200 --> 00:18:53,120
as shown in the figure

340
00:18:53,120 --> 00:18:58,880
the temp complexity is about 2 to 248

341
00:18:58,880 --> 00:19:02,160
and the memory complexity is about 2 to

342
00:19:02,160 --> 00:19:05,160
248

343
00:19:08,000 --> 00:19:11,280
near distance we also apply our message

344
00:19:11,280 --> 00:19:14,480
to crystal and found a six round

345
00:19:14,480 --> 00:19:17,760
collision attack on crystal two hundred

346
00:19:17,760 --> 00:19:20,640
fifty fifth fifty

347
00:19:20,640 --> 00:19:21,679
six

348
00:19:21,679 --> 00:19:24,720
and a sixth round collision attack on

349
00:19:24,720 --> 00:19:27,039
crystal

350
00:19:27,039 --> 00:19:30,039
512

351
00:19:30,160 --> 00:19:33,200
the correlation attack on sixth round

352
00:19:33,200 --> 00:19:37,840
crystal 258 is true here

353
00:19:37,840 --> 00:19:43,799
time complexity is 2 to 1224

354
00:19:44,799 --> 00:19:50,760
and the memory complexity is 2 to 124

355
00:19:56,400 --> 00:20:00,320
this speaker is a collision attack on h1

356
00:20:00,320 --> 00:20:03,440
crystal 512

357
00:20:03,440 --> 00:20:05,600
time complexity

358
00:20:05,600 --> 00:20:08,280
is 2 to

359
00:20:08,280 --> 00:20:10,000
240

360
00:20:10,000 --> 00:20:11,280
48

361
00:20:11,280 --> 00:20:14,159
and the memory capacity

362
00:20:14,159 --> 00:20:15,039
is

363
00:20:15,039 --> 00:20:18,760
2 to 248

364
00:20:20,320 --> 00:20:23,039
summary of the results is shown in the

365
00:20:23,039 --> 00:20:25,440
table

366
00:20:25,840 --> 00:20:27,760
we improved

367
00:20:27,760 --> 00:20:31,679
the pre-image attacks on round-reduced

368
00:20:31,679 --> 00:20:33,960
crystal

369
00:20:33,960 --> 00:20:37,840
256 unless output transformation by one

370
00:20:37,840 --> 00:20:40,240
round

371
00:20:41,200 --> 00:20:43,120
for collision attacks

372
00:20:43,120 --> 00:20:46,840
the first six round

373
00:20:46,840 --> 00:20:50,000
class the first sixth round classical

374
00:20:50,000 --> 00:20:54,000
correction attack our vocal is provided

375
00:20:54,000 --> 00:20:57,280
also we give the first sixth round

376
00:20:57,280 --> 00:21:01,039
college attack and h1 college attack on

377
00:21:01,039 --> 00:21:03,679
crystal 200

378
00:21:03,679 --> 00:21:10,400
48 58 and goes to 512 respectively

379
00:21:10,400 --> 00:21:12,799
if you are interested in your people

380
00:21:12,799 --> 00:21:15,760
welcome to radiate

381
00:21:15,760 --> 00:21:19,960
and that's all thank you

