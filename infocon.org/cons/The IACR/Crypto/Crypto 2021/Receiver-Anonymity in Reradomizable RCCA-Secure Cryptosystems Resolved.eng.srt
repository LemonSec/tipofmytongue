1
00:00:00,000 --> 00:00:02,000
welcome to this talk about receive

2
00:00:02,000 --> 00:00:05,440
anonymity in randomizable rca secure

3
00:00:05,440 --> 00:00:06,960
crypto system

4
00:00:06,960 --> 00:00:09,760
for crypto 2021

5
00:00:09,760 --> 00:00:12,719
an e1 announces a joint work with remote

6
00:00:12,719 --> 00:00:13,840
chair

7
00:00:13,840 --> 00:00:16,160
young

8
00:00:18,480 --> 00:00:20,720
a public key equipment

9
00:00:20,720 --> 00:00:22,960
consists of three algorithms for

10
00:00:22,960 --> 00:00:24,400
degeneration

11
00:00:24,400 --> 00:00:27,039
encryption and decryption

12
00:00:27,039 --> 00:00:29,519
in the message communication scenario

13
00:00:29,519 --> 00:00:32,399
suppose alice wants to send a message m

14
00:00:32,399 --> 00:00:33,600
to bob

15
00:00:33,600 --> 00:00:36,960
first bob uses key gen to generate a

16
00:00:36,960 --> 00:00:40,719
public secret key pair pk and desk 8 and

17
00:00:40,719 --> 00:00:43,680
send the public key pk to alice

18
00:00:43,680 --> 00:00:46,640
the alice encrypts m under the pk and

19
00:00:46,640 --> 00:00:49,440
sends this advertised c to bar

20
00:00:49,440 --> 00:00:52,480
finally bob can use the secret key sk to

21
00:00:52,480 --> 00:00:54,719
decrypt this advertise and obtain the

22
00:00:54,719 --> 00:00:56,399
message m

23
00:00:56,399 --> 00:00:58,800
the c security has been widely

24
00:00:58,800 --> 00:01:02,079
considered as a golden security standard

25
00:01:02,079 --> 00:01:05,600
for public key encryption pke

26
00:01:05,600 --> 00:01:08,560
however it is evidence that for some

27
00:01:08,560 --> 00:01:11,520
practical purposes or somewhat weaker

28
00:01:11,520 --> 00:01:14,560
security notion than cca security is

29
00:01:14,560 --> 00:01:16,880
already sufficient

30
00:01:16,880 --> 00:01:19,759
to this end canadian and co-authors

31
00:01:19,759 --> 00:01:23,040
introduced the notion of replayable cc

32
00:01:23,040 --> 00:01:24,799
security

33
00:01:24,799 --> 00:01:28,880
rca security is the same as cc security

34
00:01:28,880 --> 00:01:31,680
except that the adversary is allowed to

35
00:01:31,680 --> 00:01:35,439
modify several tests into a new one of

36
00:01:35,439 --> 00:01:37,840
the same plaintext

37
00:01:37,840 --> 00:01:42,880
so it is a relaxation of cc security

38
00:01:42,880 --> 00:01:45,920
the relaxation in those pke with

39
00:01:45,920 --> 00:01:47,920
desirable features

40
00:01:47,920 --> 00:01:51,119
brand as even measurable rcc security is

41
00:01:51,119 --> 00:01:52,560
one of them

42
00:01:52,560 --> 00:01:56,079
we say a pke scheme is randomizable if

43
00:01:56,079 --> 00:01:58,719
there exists a efficient algorithm

44
00:01:58,719 --> 00:01:59,920
prevent

45
00:01:59,920 --> 00:02:02,880
that takes as input public key pk

46
00:02:02,880 --> 00:02:06,840
and the advertised c and outputs a new

47
00:02:06,840 --> 00:02:10,479
advertised c prime of same public key

48
00:02:10,479 --> 00:02:11,360
and

49
00:02:11,360 --> 00:02:13,440
plain text

50
00:02:13,440 --> 00:02:14,720
if the

51
00:02:14,720 --> 00:02:18,720
randomization does not need public key

52
00:02:18,720 --> 00:02:21,760
then we say this pke is universally

53
00:02:21,760 --> 00:02:23,840
randomizable

54
00:02:23,840 --> 00:02:25,920
when rcc security

55
00:02:25,920 --> 00:02:28,879
turns out to have numerous applications

56
00:02:28,879 --> 00:02:33,120
such as mixnet control malleable and sdk

57
00:02:33,120 --> 00:02:34,840
and

58
00:02:34,840 --> 00:02:38,000
cryptographic reverse firework

59
00:02:38,000 --> 00:02:40,640
however for some privacy oriented

60
00:02:40,640 --> 00:02:44,000
applications ran rcc security alone is

61
00:02:44,000 --> 00:02:46,720
not enough

62
00:02:47,040 --> 00:02:49,120
taking the mixnet based anonymous

63
00:02:49,120 --> 00:02:52,080
communication as example

64
00:02:52,080 --> 00:02:55,519
in the mix net the mixed node receives a

65
00:02:55,519 --> 00:02:58,720
batch of several tasks from sender a1 to

66
00:02:58,720 --> 00:03:00,239
am

67
00:03:00,239 --> 00:03:02,400
and then the mixed node

68
00:03:02,400 --> 00:03:05,040
randomize them and send them to the

69
00:03:05,040 --> 00:03:08,560
receiver b1 to bm

70
00:03:08,560 --> 00:03:11,519
the universal randomization performed by

71
00:03:11,519 --> 00:03:14,400
mixed node or links several types ci and

72
00:03:14,400 --> 00:03:17,840
the cs star in terms of contents such

73
00:03:17,840 --> 00:03:21,120
that the adversary cannot correlate the

74
00:03:21,120 --> 00:03:24,319
sender and receiver

75
00:03:25,120 --> 00:03:28,319
however we notice that the underlying

76
00:03:28,319 --> 00:03:31,120
public key of civil tests does not

77
00:03:31,120 --> 00:03:34,000
change after randomization

78
00:03:34,000 --> 00:03:39,440
so if the pke is not receiver anonymous

79
00:03:39,440 --> 00:03:42,480
that is the adversary can obtain some

80
00:03:42,480 --> 00:03:44,720
information about the underlying public

81
00:03:44,720 --> 00:03:47,120
key from the cellular test

82
00:03:47,120 --> 00:03:47,920
then

83
00:03:47,920 --> 00:03:50,159
the adversary may

84
00:03:50,159 --> 00:03:52,640
still be able to correlate the server

85
00:03:52,640 --> 00:03:56,400
types for the same receiver

86
00:03:56,400 --> 00:03:57,720
therefore

87
00:03:57,720 --> 00:03:59,840
randomizability and

88
00:03:59,840 --> 00:04:02,879
receiver anonymity are both required for

89
00:04:02,879 --> 00:04:07,840
the mixnet based anonymous communication

90
00:04:07,840 --> 00:04:10,480
it is able to achieve both

91
00:04:10,480 --> 00:04:14,480
for cc sources under cpa security

92
00:04:14,480 --> 00:04:18,639
but it is not the case for cca security

93
00:04:18,639 --> 00:04:22,160
because it permits strong adversary to

94
00:04:22,160 --> 00:04:24,320
curate the decryption

95
00:04:24,320 --> 00:04:26,400
oracle that is

96
00:04:26,400 --> 00:04:29,199
the adversary can probe the system with

97
00:04:29,199 --> 00:04:31,680
safer tests

98
00:04:31,680 --> 00:04:34,080
the first perfect and universal brand

99
00:04:34,080 --> 00:04:35,919
rtc pke

100
00:04:35,919 --> 00:04:38,800
in the standard model was proposed by

101
00:04:38,800 --> 00:04:41,520
grab hurricane and russell lake at

102
00:04:41,520 --> 00:04:43,919
crypto 2007

103
00:04:43,919 --> 00:04:47,199
we call this construction the pr scheme

104
00:04:47,199 --> 00:04:48,560
for short

105
00:04:48,560 --> 00:04:51,919
unfortunately the pr scheme does not

106
00:04:51,919 --> 00:04:54,160
achieve receivability

107
00:04:54,160 --> 00:04:56,800
and how to construct a receiver

108
00:04:56,800 --> 00:05:00,479
anonymous rent rtc pke was left as an

109
00:05:00,479 --> 00:05:03,680
interesting open problem

110
00:05:03,680 --> 00:05:06,479
but more surprisingly even after many

111
00:05:06,479 --> 00:05:09,680
years its open problem remains unsolved

112
00:05:09,680 --> 00:05:11,759
to date

113
00:05:11,759 --> 00:05:14,560
the main technical challenge of

114
00:05:14,560 --> 00:05:17,919
achieving rcc receiver anonymity arises

115
00:05:17,919 --> 00:05:20,960
from the fact that the decryption oracle

116
00:05:20,960 --> 00:05:23,759
in the game would output replay

117
00:05:23,759 --> 00:05:27,360
if one of the decryption results

118
00:05:27,360 --> 00:05:29,280
equals to the challenge

119
00:05:29,280 --> 00:05:30,720
plaintext

120
00:05:30,720 --> 00:05:32,639
m star

121
00:05:32,639 --> 00:05:35,680
so the adversary can guess

122
00:05:35,680 --> 00:05:37,280
the bit b

123
00:05:37,280 --> 00:05:39,520
and that gets the b

124
00:05:39,520 --> 00:05:42,799
and guess the bit

125
00:05:43,199 --> 00:05:46,160
b star and encrypts the challenge

126
00:05:46,160 --> 00:05:48,080
several times c star

127
00:05:48,080 --> 00:05:48,960
with

128
00:05:48,960 --> 00:05:53,759
p k b with p k b star and curious the

129
00:05:53,759 --> 00:05:57,840
decryption oracle to verify its guess

130
00:05:57,840 --> 00:05:59,600
if if it

131
00:05:59,600 --> 00:06:03,280
gets the b correctly the equation oracle

132
00:06:03,280 --> 00:06:06,160
would return a bot

133
00:06:06,160 --> 00:06:08,479
if the otherwise

134
00:06:08,479 --> 00:06:11,280
if if the adversary gets the b2b

135
00:06:11,280 --> 00:06:14,479
correctly the dilution oracle would

136
00:06:14,479 --> 00:06:17,440
replace would return as replay

137
00:06:17,440 --> 00:06:20,720
thus to defend against this attack

138
00:06:20,720 --> 00:06:24,160
it is a required that the randomization

139
00:06:24,160 --> 00:06:26,560
of civil attacks should not involve the

140
00:06:26,560 --> 00:06:28,400
public key

141
00:06:28,400 --> 00:06:31,520
that is to say universal randomization

142
00:06:31,520 --> 00:06:33,600
is required

143
00:06:33,600 --> 00:06:35,199
however

144
00:06:35,199 --> 00:06:37,840
achieving receivability

145
00:06:37,840 --> 00:06:40,319
is more challenging than realizing

146
00:06:40,319 --> 00:06:41,680
uniform

147
00:06:41,680 --> 00:06:44,560
universal randomization

148
00:06:44,560 --> 00:06:47,360
example is the pr scheme

149
00:06:47,360 --> 00:06:51,039
it is universally randomizable but not

150
00:06:51,039 --> 00:06:53,440
receiver anonymous

151
00:06:53,440 --> 00:06:56,319
to explain why the pr scheme does not

152
00:06:56,319 --> 00:06:59,360
satisfy receivable anonymity we review

153
00:06:59,360 --> 00:07:01,759
the scheme briefly

154
00:07:01,759 --> 00:07:04,080
the separatist of the pr scheme is

155
00:07:04,080 --> 00:07:07,520
composed of four strands

156
00:07:07,520 --> 00:07:10,479
the strand c1 carries the message while

157
00:07:10,479 --> 00:07:14,240
the strength c2 is to help randomize c1

158
00:07:14,240 --> 00:07:18,400
without public key the encrypted mask u

159
00:07:18,400 --> 00:07:21,599
shared between c1 and c2

160
00:07:21,599 --> 00:07:24,479
disables the adversary to mix together

161
00:07:24,479 --> 00:07:27,680
strength from two different separatists

162
00:07:27,680 --> 00:07:30,880
to obtain a valid separatist

163
00:07:30,880 --> 00:07:34,319
the component exponent of strength c1

164
00:07:34,319 --> 00:07:35,840
are perturbed by

165
00:07:35,840 --> 00:07:38,639
an additional vector z

166
00:07:38,639 --> 00:07:41,199
to restrict the matter of recombining

167
00:07:41,199 --> 00:07:42,840
those two

168
00:07:42,840 --> 00:07:46,319
strands here the blue errors illustrate

169
00:07:46,319 --> 00:07:50,240
the only way to randomize c1 and c2

170
00:07:50,240 --> 00:07:53,039
however one can note that there is no

171
00:07:53,039 --> 00:07:58,080
such mask or vectors in string c3 and c4

172
00:07:58,080 --> 00:08:00,800
so those two strengths can also be

173
00:08:00,800 --> 00:08:03,840
randomized with public keys

174
00:08:03,840 --> 00:08:06,319
which means the adversary is able to

175
00:08:06,319 --> 00:08:08,319
guess the public key

176
00:08:08,319 --> 00:08:11,039
and verify its guess we are curing the

177
00:08:11,039 --> 00:08:13,280
decryption oracle

178
00:08:13,280 --> 00:08:16,479
so the particular randomizability of

179
00:08:16,479 --> 00:08:19,360
several types breaks the receiver

180
00:08:19,360 --> 00:08:22,560
anonymity of the whole scheme

181
00:08:22,560 --> 00:08:25,599
to achieve rcc receive anonymity we have

182
00:08:25,599 --> 00:08:28,240
to disable the randomization of string

183
00:08:28,240 --> 00:08:33,039
c3 and c4 employing the public key

184
00:08:33,039 --> 00:08:36,399
note that randomization

185
00:08:36,399 --> 00:08:40,000
of string c1 and c2 is restricted by

186
00:08:40,000 --> 00:08:42,559
mask u and vector z

187
00:08:42,559 --> 00:08:45,920
if we also apply this technique to c3

188
00:08:45,920 --> 00:08:47,440
and c4

189
00:08:47,440 --> 00:08:50,000
extra strands are required to encrypt

190
00:08:50,000 --> 00:08:51,120
the mask

191
00:08:51,120 --> 00:08:53,440
in c3 and c4

192
00:08:53,440 --> 00:08:55,279
which would incur the partition

193
00:08:55,279 --> 00:08:58,080
randomization of ciphertext employing

194
00:08:58,080 --> 00:09:01,040
the public key again

195
00:09:01,040 --> 00:09:04,080
passed by this problem we move the mask

196
00:09:04,080 --> 00:09:06,800
and additional vectors to the validity

197
00:09:06,800 --> 00:09:08,399
tracking part

198
00:09:08,399 --> 00:09:10,640
since this part contains only one

199
00:09:10,640 --> 00:09:11,839
component

200
00:09:11,839 --> 00:09:14,880
no additional component is appended to

201
00:09:14,880 --> 00:09:17,360
each strand for perturb for the

202
00:09:17,360 --> 00:09:20,959
perturbation on the ready checking part

203
00:09:20,959 --> 00:09:24,240
the randomization of strength c1 and c2

204
00:09:24,240 --> 00:09:27,200
is still restricted by mask u and vector

205
00:09:27,200 --> 00:09:29,040
z1 and z2

206
00:09:29,040 --> 00:09:32,399
as for strength c3 and c4 the

207
00:09:32,399 --> 00:09:36,000
randomization is restricted by mask u

208
00:09:36,000 --> 00:09:40,480
and vector c bar one and z bar two

209
00:09:40,480 --> 00:09:43,120
the blue errors illustrate the only way

210
00:09:43,120 --> 00:09:46,720
to randomize ciphertext

211
00:09:46,720 --> 00:09:48,959
note that the several times construction

212
00:09:48,959 --> 00:09:51,360
of our variant

213
00:09:51,360 --> 00:09:54,240
still shares some similarities with that

214
00:09:54,240 --> 00:09:56,959
of the pr scheme

215
00:09:56,959 --> 00:10:00,000
it is essentially a double strand of

216
00:10:00,000 --> 00:10:02,640
creamer soup salvatized

217
00:10:02,640 --> 00:10:06,160
so we're going to explore why whether it

218
00:10:06,160 --> 00:10:08,880
is possible to generalize our treatment

219
00:10:08,880 --> 00:10:10,480
following the

220
00:10:10,480 --> 00:10:13,279
chromosome paradigm

221
00:10:13,279 --> 00:10:16,480
so next we will start by recalling the

222
00:10:16,480 --> 00:10:19,839
chromosome paradigm based on

223
00:10:19,839 --> 00:10:23,600
smooth projective hash function sphf

224
00:10:23,600 --> 00:10:26,880
and then seeks to extend the notion of

225
00:10:26,880 --> 00:10:31,040
sphf to interpret our proposed variants

226
00:10:31,040 --> 00:10:33,519
under its security

227
00:10:33,519 --> 00:10:36,320
smooth projective hash function

228
00:10:36,320 --> 00:10:40,000
svhf was originally proposed by creamer

229
00:10:40,000 --> 00:10:42,560
and the sub for generally constructing

230
00:10:42,560 --> 00:10:46,079
practical csa secure pke

231
00:10:46,079 --> 00:10:49,279
roughly sbhf is a family of hash

232
00:10:49,279 --> 00:10:53,040
functions h indexed by k that maps the

233
00:10:53,040 --> 00:10:54,800
element set x

234
00:10:54,800 --> 00:10:58,000
onto the hash value set pi

235
00:10:58,000 --> 00:11:01,600
has phf is associated with an mp

236
00:11:01,600 --> 00:11:04,959
language l where elements in ao are

237
00:11:04,959 --> 00:11:07,760
computationally indistinguishable from

238
00:11:07,760 --> 00:11:10,800
those in long language set

239
00:11:10,800 --> 00:11:13,760
x minus l

240
00:11:13,760 --> 00:11:14,720
this is

241
00:11:14,720 --> 00:11:18,959
the heart subset membership problem

242
00:11:18,959 --> 00:11:23,519
for any language element x in l its hash

243
00:11:23,519 --> 00:11:24,720
value

244
00:11:24,720 --> 00:11:28,480
h s k x could be efficiently computed

245
00:11:28,480 --> 00:11:31,839
using either the hashing key sk or the

246
00:11:31,839 --> 00:11:36,399
projection key pk with the witness w to

247
00:11:36,399 --> 00:11:40,160
the fact that x belongs to l

248
00:11:40,160 --> 00:11:43,360
every sphere should be smooth 1. that is

249
00:11:43,360 --> 00:11:46,560
to say conditioned on fixed projection

250
00:11:46,560 --> 00:11:50,240
key pk for any long language element x

251
00:11:50,240 --> 00:11:52,720
its hex value is statistically

252
00:11:52,720 --> 00:11:54,959
indistinguishable from the uniform

253
00:11:54,959 --> 00:11:58,000
distribution over the space pi

254
00:11:58,000 --> 00:12:01,440
some sphf's satisfy stronger smoothness

255
00:12:01,440 --> 00:12:02,959
smooth too

256
00:12:02,959 --> 00:12:06,639
it is to say condition on fixed pk and

257
00:12:06,639 --> 00:12:09,440
the hash value of any non-language

258
00:12:09,440 --> 00:12:10,399
element

259
00:12:10,399 --> 00:12:11,680
x star

260
00:12:11,680 --> 00:12:14,720
for any other non-language element x

261
00:12:14,720 --> 00:12:17,480
its hash value is statistically

262
00:12:17,480 --> 00:12:19,600
indistinguishable from uniform

263
00:12:19,600 --> 00:12:22,560
distribution of the space pi

264
00:12:22,560 --> 00:12:26,320
the notion of sphf could be generalized

265
00:12:26,320 --> 00:12:31,040
to tech sphf where attack tau is also

266
00:12:31,040 --> 00:12:34,399
taken as an auxiliary input by hash

267
00:12:34,399 --> 00:12:35,839
function h

268
00:12:35,839 --> 00:12:40,480
algorithms priv and the pub

269
00:12:40,480 --> 00:12:43,440
the regular sphf can be regarded as a

270
00:12:43,440 --> 00:12:46,959
special case of tech sphf with empty

271
00:12:46,959 --> 00:12:48,240
text space

272
00:12:48,240 --> 00:12:51,279
the creamer soup paradigm is based on a

273
00:12:51,279 --> 00:12:54,639
smooth one as bhfi and a smooth 2

274
00:12:54,639 --> 00:12:57,279
attacks sphfi hat

275
00:12:57,279 --> 00:12:58,959
the public key

276
00:12:58,959 --> 00:13:01,200
is pk and pk hat

277
00:13:01,200 --> 00:13:03,920
and the sephora test consists of three

278
00:13:03,920 --> 00:13:04,800
parts

279
00:13:04,800 --> 00:13:07,200
the language element x

280
00:13:07,200 --> 00:13:09,200
m times hash value

281
00:13:09,200 --> 00:13:10,240
h

282
00:13:10,240 --> 00:13:11,519
s k x

283
00:13:11,519 --> 00:13:15,040
and h value h hat s k hat

284
00:13:15,040 --> 00:13:17,279
x tau

285
00:13:17,279 --> 00:13:19,760
where the tactile is the h value of the

286
00:13:19,760 --> 00:13:22,639
first two parts

287
00:13:22,639 --> 00:13:24,959
to make our later arguments easier to

288
00:13:24,959 --> 00:13:26,240
follow

289
00:13:26,240 --> 00:13:29,000
below we first provide a overview of

290
00:13:29,000 --> 00:13:35,120
justification of cc security for sph

291
00:13:35,120 --> 00:13:37,279
considering the challenges advertised

292
00:13:37,279 --> 00:13:38,560
zeta star

293
00:13:38,560 --> 00:13:41,920
in the cca security game namely game

294
00:13:41,920 --> 00:13:43,440
zero

295
00:13:43,440 --> 00:13:46,240
in game one due to the hardness of

296
00:13:46,240 --> 00:13:48,639
subset membership problem

297
00:13:48,639 --> 00:13:50,320
we can replace

298
00:13:50,320 --> 00:13:53,040
the language element x star with

299
00:13:53,040 --> 00:13:54,880
non-language elements

300
00:13:54,880 --> 00:13:56,399
and compute

301
00:13:56,399 --> 00:13:59,440
pi star and pi hat star

302
00:13:59,440 --> 00:14:03,199
using the hashing key

303
00:14:03,199 --> 00:14:04,639
in game 2

304
00:14:04,639 --> 00:14:07,600
the decryption oracle also reject also

305
00:14:07,600 --> 00:14:10,720
rejects all the

306
00:14:10,720 --> 00:14:13,040
parts of all the biased effort tests

307
00:14:13,040 --> 00:14:15,680
with long language element x

308
00:14:15,680 --> 00:14:21,839
by the smooth two property of sphfi hat

309
00:14:21,839 --> 00:14:24,399
in game 3 we can replace

310
00:14:24,399 --> 00:14:28,160
pi star with random hash value from set

311
00:14:28,160 --> 00:14:29,199
pi

312
00:14:29,199 --> 00:14:34,160
by the smooth one property of sphfi

313
00:14:34,160 --> 00:14:36,480
now the challenge server attached zeta

314
00:14:36,480 --> 00:14:39,360
star perfectly hides m b

315
00:14:39,360 --> 00:14:42,480
which yields the cca security

316
00:14:42,480 --> 00:14:44,399
following the idea of commercial

317
00:14:44,399 --> 00:14:47,279
paradigm we also can interpret our

318
00:14:47,279 --> 00:14:50,480
construction from sbhfs

319
00:14:50,480 --> 00:14:54,320
taking strength c1 and c2 as example

320
00:14:54,320 --> 00:14:56,560
they can be generalized using three

321
00:14:56,560 --> 00:14:58,959
different sbhs

322
00:14:58,959 --> 00:15:02,079
the bx and the b y are the hash values

323
00:15:02,079 --> 00:15:06,720
of x and y on same hash function h

324
00:15:06,720 --> 00:15:10,399
the validity checking parts of c1 and c2

325
00:15:10,399 --> 00:15:14,160
are hash values of x and y under two

326
00:15:14,160 --> 00:15:16,160
different hash functions

327
00:15:16,160 --> 00:15:18,959
h hat and h tilde

328
00:15:18,959 --> 00:15:21,279
well the edge tilde can be viewed as a

329
00:15:21,279 --> 00:15:24,880
special case of h hat with vectors z1

330
00:15:24,880 --> 00:15:29,199
and z2 equals to zero now from the

331
00:15:29,199 --> 00:15:32,480
perspective of sphere the separatized

332
00:15:32,480 --> 00:15:35,199
randomization can be regarded as the

333
00:15:35,199 --> 00:15:38,399
randomization of hash values

334
00:15:38,399 --> 00:15:41,040
meanwhile one can note that there are

335
00:15:41,040 --> 00:15:43,600
two kinds of randomization

336
00:15:43,600 --> 00:15:47,040
the cf one within same sphere and the

337
00:15:47,040 --> 00:15:51,920
pairwise one between different spheres

338
00:15:51,920 --> 00:15:54,480
motivated by those observations

339
00:15:54,480 --> 00:15:57,199
where outputs will put forward the

340
00:15:57,199 --> 00:16:02,560
notion of randomizable sphf iesphf

341
00:16:02,560 --> 00:16:05,839
which is a regular sphere augmented with

342
00:16:05,839 --> 00:16:09,519
self and pairwise randomizability

343
00:16:09,519 --> 00:16:13,040
based on the typical definition of

344
00:16:13,040 --> 00:16:16,000
sbhf we formalize three actual

345
00:16:16,000 --> 00:16:19,839
algorithms namely rent x when t

346
00:16:19,839 --> 00:16:23,600
and the rand h to capture both cases of

347
00:16:23,600 --> 00:16:25,279
randomization

348
00:16:25,279 --> 00:16:28,639
let's say r x x denote the set of all

349
00:16:28,639 --> 00:16:33,120
randomization of x obtained via brand x

350
00:16:33,120 --> 00:16:36,320
c r x x prime denote the set of all

351
00:16:36,320 --> 00:16:38,399
randomization of x

352
00:16:38,399 --> 00:16:42,320
obtained via rain x with x prime and the

353
00:16:42,320 --> 00:16:45,759
c r t tau denotes the set of all

354
00:16:45,759 --> 00:16:50,160
randomization of tau obtained variant t

355
00:16:50,160 --> 00:16:52,959
similar to the classification of

356
00:16:52,959 --> 00:16:54,560
randomization

357
00:16:54,560 --> 00:16:58,440
we redefine two types of smoothness for

358
00:16:58,440 --> 00:17:01,199
iesphf as below

359
00:17:01,199 --> 00:17:02,839
the controlled self

360
00:17:02,839 --> 00:17:06,160
randomizables smoothness says that

361
00:17:06,160 --> 00:17:10,079
condition on fixed pk and the hash value

362
00:17:10,079 --> 00:17:13,439
for any long language element x star

363
00:17:13,439 --> 00:17:15,839
and any tech call star

364
00:17:15,839 --> 00:17:18,400
for any non-language element x and the

365
00:17:18,400 --> 00:17:19,599
tactile

366
00:17:19,599 --> 00:17:22,319
the h value is statistically

367
00:17:22,319 --> 00:17:24,720
indistinguishable from the uniform

368
00:17:24,720 --> 00:17:28,559
distribution over the space pi

369
00:17:28,559 --> 00:17:30,000
it is

370
00:17:30,000 --> 00:17:33,919
required that the x does not belongs to

371
00:17:33,919 --> 00:17:35,840
say r x

372
00:17:35,840 --> 00:17:37,039
x star

373
00:17:37,039 --> 00:17:41,840
or tau does not belong to c r t tau star

374
00:17:41,840 --> 00:17:44,640
the controlled pairwise randomizes both

375
00:17:44,640 --> 00:17:46,559
smoothness says that

376
00:17:46,559 --> 00:17:49,840
conditioned on fix the pk hat the hash

377
00:17:49,840 --> 00:17:50,720
value

378
00:17:50,720 --> 00:17:52,160
h hats

379
00:17:52,160 --> 00:17:53,360
h hat

380
00:17:53,360 --> 00:17:56,320
h h hat sk heads

381
00:17:56,320 --> 00:17:58,720
x one star call star

382
00:17:58,720 --> 00:18:01,039
etched sk

383
00:18:01,039 --> 00:18:04,879
x to start house start

384
00:18:05,120 --> 00:18:07,679
for any language element

385
00:18:07,679 --> 00:18:10,720
x and the tactile the hash value is

386
00:18:10,720 --> 00:18:13,200
statistically indistinguishable from the

387
00:18:13,200 --> 00:18:17,039
uniform distribution over the space pi

388
00:18:17,039 --> 00:18:18,480
pi hat

389
00:18:18,480 --> 00:18:22,160
also it is required that the x does not

390
00:18:22,160 --> 00:18:23,600
belong to

391
00:18:23,600 --> 00:18:26,480
crx x1 star

392
00:18:26,480 --> 00:18:28,880
x2 star or the

393
00:18:28,880 --> 00:18:32,799
tau does not belong to c r t tau star

394
00:18:32,799 --> 00:18:35,360
meanwhile we also define two new

395
00:18:35,360 --> 00:18:36,559
smoothness

396
00:18:36,559 --> 00:18:39,200
as this must one means that condition

397
00:18:39,200 --> 00:18:42,000
unfixed at p k for two random

398
00:18:42,000 --> 00:18:46,480
non-language elements x1 and x2

399
00:18:46,480 --> 00:18:47,679
and

400
00:18:47,679 --> 00:18:49,360
random tactile

401
00:18:49,360 --> 00:18:51,200
their hash value are uniformly

402
00:18:51,200 --> 00:18:54,480
distributed over the space pi

403
00:18:54,480 --> 00:18:57,679
the power wise between one smooth means

404
00:18:57,679 --> 00:18:58,480
that

405
00:18:58,480 --> 00:19:01,840
conditioned on fixed pk for two random

406
00:19:01,840 --> 00:19:05,280
non-language elements x1 and the x2 and

407
00:19:05,280 --> 00:19:08,000
the random tactile the hash values are

408
00:19:08,000 --> 00:19:10,960
uniformly distributed over the space pi

409
00:19:10,960 --> 00:19:14,559
hat and the pi tower respectively the

410
00:19:14,559 --> 00:19:17,360
over construction is based on six

411
00:19:17,360 --> 00:19:18,520
different

412
00:19:18,520 --> 00:19:20,400
resphs

413
00:19:20,400 --> 00:19:22,880
we now show how to realize

414
00:19:22,880 --> 00:19:26,400
rcc security and receive anonymity with

415
00:19:26,400 --> 00:19:30,160
those new smoothness

416
00:19:30,160 --> 00:19:33,280
similar to the security justification of

417
00:19:33,280 --> 00:19:35,200
chromosome paradigm

418
00:19:35,200 --> 00:19:38,160
we provide the argument to justify the

419
00:19:38,160 --> 00:19:42,000
rcca security of our variants

420
00:19:42,000 --> 00:19:46,080
let game0 be the rcc security game

421
00:19:46,080 --> 00:19:49,200
in game 1 due to the hardness of subset

422
00:19:49,200 --> 00:19:50,799
membership of

423
00:19:50,799 --> 00:19:52,400
membership problems

424
00:19:52,400 --> 00:19:54,720
will replace all the language elements

425
00:19:54,720 --> 00:19:57,760
in challenges advertised zetastar

426
00:19:57,760 --> 00:20:00,320
with non-language elements

427
00:20:00,320 --> 00:20:04,880
in game 2 by the csr and the cpr smooth

428
00:20:04,880 --> 00:20:07,760
the decryption oracle also rejects all

429
00:20:07,760 --> 00:20:09,520
the bias advertised

430
00:20:09,520 --> 00:20:12,240
at this the oral code would not reveal

431
00:20:12,240 --> 00:20:15,760
more information about the sacred key

432
00:20:15,760 --> 00:20:18,159
in game 3 by the

433
00:20:18,159 --> 00:20:22,080
st and the pt smooth one we replace all

434
00:20:22,080 --> 00:20:24,720
the hash values in challenge several

435
00:20:24,720 --> 00:20:27,120
tests with random ones

436
00:20:27,120 --> 00:20:30,799
now the data star perfectly hides mb

437
00:20:30,799 --> 00:20:33,919
and the rcc security of our construction

438
00:20:33,919 --> 00:20:36,640
holds the justification for receiving

439
00:20:36,640 --> 00:20:39,600
anonymity is indeed familiar to above

440
00:20:39,600 --> 00:20:40,720
argument

441
00:20:40,720 --> 00:20:43,919
in particular the decryption oracle also

442
00:20:43,919 --> 00:20:47,440
relies on csr and the cpr smooth

443
00:20:47,440 --> 00:20:50,240
properties to reject all the band cipher

444
00:20:50,240 --> 00:20:51,520
tests

445
00:20:51,520 --> 00:20:54,320
in the end the uniform distribution of

446
00:20:54,320 --> 00:20:57,600
all the hash values in zeta star implies

447
00:20:57,600 --> 00:21:02,240
the receiver anonymity in rcca setting

448
00:21:02,240 --> 00:21:05,120
in this table we'll compare our

449
00:21:05,120 --> 00:21:09,120
scheme with previous works

450
00:21:09,200 --> 00:21:13,120
besides our exclusive property of

451
00:21:13,120 --> 00:21:15,440
receiver anonymity compared with the

452
00:21:15,440 --> 00:21:18,159
recent work or found or found you on the

453
00:21:18,159 --> 00:21:19,679
courses

454
00:21:19,679 --> 00:21:22,480
also our 2 liam 2 linear based

455
00:21:22,480 --> 00:21:25,679
instantation is based on special groups

456
00:21:25,679 --> 00:21:28,720
which are larger than regular setting

457
00:21:28,720 --> 00:21:31,760
but it does not involve any pairing

458
00:21:31,760 --> 00:21:33,520
computations

459
00:21:33,520 --> 00:21:34,240
so

460
00:21:34,240 --> 00:21:36,559
in this work we provide the first

461
00:21:36,559 --> 00:21:40,240
receiver anonymous grant rcca pke and

462
00:21:40,240 --> 00:21:42,559
resolves the open problem

463
00:21:42,559 --> 00:21:45,600
then we designed a modular framework for

464
00:21:45,600 --> 00:21:48,000
constructing received anonymous random

465
00:21:48,000 --> 00:21:49,760
rcc pke

466
00:21:49,760 --> 00:21:54,559
with our newly extended sphere iesphf

467
00:21:54,559 --> 00:21:58,320
and rigorously proved its rcc security

468
00:21:58,320 --> 00:22:00,640
and receiver anonymity

469
00:22:00,640 --> 00:22:04,480
finally we instantiated the framework

470
00:22:04,480 --> 00:22:06,880
with k-linear assumption and the grid

471
00:22:06,880 --> 00:22:07,840
ring

472
00:22:07,840 --> 00:22:10,240
and improves the pr scheme with more

473
00:22:10,240 --> 00:22:13,760
general hardness assumption

474
00:22:13,760 --> 00:22:17,440
ok that's all thank you

