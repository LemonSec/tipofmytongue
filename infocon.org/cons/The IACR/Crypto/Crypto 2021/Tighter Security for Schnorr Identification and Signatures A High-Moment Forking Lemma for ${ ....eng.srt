1
00:00:00,399 --> 00:00:03,199
hi i'm lior and i will talk about how to

2
00:00:03,199 --> 00:00:05,680
derive tighter security bounds for snow

3
00:00:05,680 --> 00:00:07,919
identification and signature schemes

4
00:00:07,919 --> 00:00:09,440
based on a new high moment forking

5
00:00:09,440 --> 00:00:11,679
dilemma this is joint work with gil

6
00:00:11,679 --> 00:00:13,519
sekiv

7
00:00:13,519 --> 00:00:15,280
schnorr's identification and signature

8
00:00:15,280 --> 00:00:18,160
schemes were proposed by schnorrbecki91

9
00:00:18,160 --> 00:00:20,320
they are simple and efficient but at the

10
00:00:20,320 --> 00:00:22,640
same time allow for many generalizations

11
00:00:22,640 --> 00:00:24,320
extending their functionality to

12
00:00:24,320 --> 00:00:26,240
primitives such as multi-signatures

13
00:00:26,240 --> 00:00:27,599
threshold signatures and drink

14
00:00:27,599 --> 00:00:29,039
signatures

15
00:00:29,039 --> 00:00:30,480
this makes them an appealing choice of

16
00:00:30,480 --> 00:00:33,040
signatures and indeed they are being

17
00:00:33,040 --> 00:00:34,880
widely adopted since the patent of them

18
00:00:34,880 --> 00:00:37,520
expired and are currently in wide use in

19
00:00:37,520 --> 00:00:39,520
a variety of applications from

20
00:00:39,520 --> 00:00:41,280
cryptographic protocols messaging

21
00:00:41,280 --> 00:00:43,200
applications and blockchains and

22
00:00:43,200 --> 00:00:45,280
cryptocurrencies

23
00:00:45,280 --> 00:00:47,120
the security of schnorr's identification

24
00:00:47,120 --> 00:00:48,960
and signature schemes is typically

25
00:00:48,960 --> 00:00:50,640
proven via reduction to the discrete

26
00:00:50,640 --> 00:00:52,480
logarithm problem

27
00:00:52,480 --> 00:00:54,559
namely it assumes the existence of some

28
00:00:54,559 --> 00:00:56,480
successful impersonator against nour's

29
00:00:56,480 --> 00:00:59,120
id scheme or a successful forger against

30
00:00:59,120 --> 00:01:01,760
nord signatures and converts them into

31
00:01:01,760 --> 00:01:03,520
an algorithm for computing discrete

32
00:01:03,520 --> 00:01:05,840
logarithms which performs better than it

33
00:01:05,840 --> 00:01:07,520
should according to some underlying

34
00:01:07,520 --> 00:01:08,960
assumption

35
00:01:08,960 --> 00:01:10,880
this seems natural since the best known

36
00:01:10,880 --> 00:01:12,479
attacks against these schemes rely on

37
00:01:12,479 --> 00:01:14,320
this quick law computation but

38
00:01:14,320 --> 00:01:16,240
unfortunately the reductions that we

39
00:01:16,240 --> 00:01:18,240
have to the discrete log problem are

40
00:01:18,240 --> 00:01:19,840
non-tight

41
00:01:19,840 --> 00:01:22,000
this is not just a theoretical issue

42
00:01:22,000 --> 00:01:23,920
when setting the parameters of the group

43
00:01:23,920 --> 00:01:25,840
one has to choose between a larger group

44
00:01:25,840 --> 00:01:28,080
size which means the greater deficiency

45
00:01:28,080 --> 00:01:29,759
or a smaller group size which means

46
00:01:29,759 --> 00:01:32,479
degraded probable security

47
00:01:32,479 --> 00:01:34,479
so let's see exactly what is the loss in

48
00:01:34,479 --> 00:01:35,840
the currently known reductions to the

49
00:01:35,840 --> 00:01:37,680
d-log problem and where does it come

50
00:01:37,680 --> 00:01:38,880
from

51
00:01:38,880 --> 00:01:40,400
essentially all reductions from the

52
00:01:40,400 --> 00:01:42,079
schnorr id and signature schemes to the

53
00:01:42,079 --> 00:01:44,399
d-log problem use some variant of the

54
00:01:44,399 --> 00:01:46,240
forking dilemma introduced by pancho

55
00:01:46,240 --> 00:01:48,159
valenstern and later generalized by

56
00:01:48,159 --> 00:01:49,840
belarus nevin

57
00:01:49,840 --> 00:01:51,360
this is a rewinding based reduction

58
00:01:51,360 --> 00:01:54,079
technique that incurs a square root loss

59
00:01:54,079 --> 00:01:56,079
seemingly inherently

60
00:01:56,079 --> 00:01:58,159
for example this reduction technique can

61
00:01:58,159 --> 00:02:00,240
be used to convert an impersonator

62
00:02:00,240 --> 00:02:02,880
against novid scheme that runs in time t

63
00:02:02,880 --> 00:02:04,960
and has advantage epsilon

64
00:02:04,960 --> 00:02:07,119
into a d-log algorithm that runs in time

65
00:02:07,119 --> 00:02:09,038
roughly t as well but has success

66
00:02:09,038 --> 00:02:10,720
probability which is roughly epsilon

67
00:02:10,720 --> 00:02:12,080
squared

68
00:02:12,080 --> 00:02:13,520
so what does this tell us about the

69
00:02:13,520 --> 00:02:15,920
security of the smart d scheme

70
00:02:15,920 --> 00:02:17,520
shupes bound on the hardness of the

71
00:02:17,520 --> 00:02:18,959
discrete logarithm problem in the

72
00:02:18,959 --> 00:02:20,480
generic group model

73
00:02:20,480 --> 00:02:23,120
tells us that epsilon prime is at most d

74
00:02:23,120 --> 00:02:25,599
prime squared over p where p is the size

75
00:02:25,599 --> 00:02:26,879
of the group

76
00:02:26,879 --> 00:02:28,800
so if we work in a group in which this

77
00:02:28,800 --> 00:02:31,040
bound is assumed to hold such as some

78
00:02:31,040 --> 00:02:33,040
elliptic curve groups the forking

79
00:02:33,040 --> 00:02:34,879
glamour implies that the advantage

80
00:02:34,879 --> 00:02:37,440
epsilon of the impersonator is at most

81
00:02:37,440 --> 00:02:40,879
the square root of t squared over p

82
00:02:40,879 --> 00:02:42,879
this is potentially a much greater bound

83
00:02:42,879 --> 00:02:44,480
than the advantage of the best known

84
00:02:44,480 --> 00:02:46,160
attack on the schnorr id scheme which is

85
00:02:46,160 --> 00:02:48,480
by discrete law computation and succeeds

86
00:02:48,480 --> 00:02:50,560
with probability roughly t squared over

87
00:02:50,560 --> 00:02:51,440
p

88
00:02:51,440 --> 00:02:52,879
the situation is similar when

89
00:02:52,879 --> 00:02:55,120
considering schnorr signatures

90
00:02:55,120 --> 00:02:56,800
there the forking dilemma allows us to

91
00:02:56,800 --> 00:02:59,120
convert a forger that runs in time t and

92
00:02:59,120 --> 00:03:01,440
has advantage epsilon into a d-log

93
00:03:01,440 --> 00:03:03,840
algorithm that runs in time roughly t

94
00:03:03,840 --> 00:03:05,680
and has excess probability roughly

95
00:03:05,680 --> 00:03:08,800
epsilon squared over qh where qh is the

96
00:03:08,800 --> 00:03:10,720
number of random oracle queries issued

97
00:03:10,720 --> 00:03:12,159
by the forger

98
00:03:12,159 --> 00:03:14,080
if we work in a group in which the d log

99
00:03:14,080 --> 00:03:15,760
problem is assumed to be as hard as in

100
00:03:15,760 --> 00:03:18,159
the generic group model this implies

101
00:03:18,159 --> 00:03:20,400
that epsilon is at most the square root

102
00:03:20,400 --> 00:03:23,760
of qh times t squared over p

103
00:03:23,760 --> 00:03:25,360
again this can be much greater than the

104
00:03:25,360 --> 00:03:26,799
best known attack via this critical

105
00:03:26,799 --> 00:03:28,720
computation

106
00:03:28,720 --> 00:03:30,560
these gaps between the probable security

107
00:03:30,560 --> 00:03:32,159
of schnorr schemes and the best-known

108
00:03:32,159 --> 00:03:35,200
attacks against them can be significant

109
00:03:35,200 --> 00:03:37,280
these are just a few examples for

110
00:03:37,280 --> 00:03:39,200
different choices of parameters and the

111
00:03:39,200 --> 00:03:40,879
concrete gap that they induce between

112
00:03:40,879 --> 00:03:42,640
the provable security of shore's id

113
00:03:42,640 --> 00:03:44,840
scheme and the best known attack against

114
00:03:44,840 --> 00:03:47,599
it and these are a few examples for the

115
00:03:47,599 --> 00:03:49,200
concrete gap in the case of schnorr

116
00:03:49,200 --> 00:03:50,799
signatures

117
00:03:50,799 --> 00:03:52,959
as these numbers exemplify closing the

118
00:03:52,959 --> 00:03:54,720
gap between the best possible security

119
00:03:54,720 --> 00:03:56,560
of snore id and signature schemes and

120
00:03:56,560 --> 00:03:58,640
the square wood bound is not only a

121
00:03:58,640 --> 00:04:00,640
theoretical interest but can also have

122
00:04:00,640 --> 00:04:04,159
significant practical implications

123
00:04:04,159 --> 00:04:05,920
it should be mentioned that not all

124
00:04:05,920 --> 00:04:07,760
proofs of security for schnorr schemes

125
00:04:07,760 --> 00:04:09,200
go through a standard model reduction

126
00:04:09,200 --> 00:04:11,120
into the d-log problem

127
00:04:11,120 --> 00:04:13,200
one option that has been explored is to

128
00:04:13,200 --> 00:04:14,799
prove the security of these schemes in

129
00:04:14,799 --> 00:04:16,959
idealized models

130
00:04:16,959 --> 00:04:18,798
in the general group model

131
00:04:18,798 --> 00:04:20,320
shupe proved the tight information

132
00:04:20,320 --> 00:04:22,240
theoretic lower bound on the advantage

133
00:04:22,240 --> 00:04:24,240
of any generic attacker

134
00:04:24,240 --> 00:04:26,800
and in the algebraic group model fuchs

135
00:04:26,800 --> 00:04:29,280
flower pluvier and serra recently proved

136
00:04:29,280 --> 00:04:32,400
a tight reduction to the dog problem

137
00:04:32,400 --> 00:04:34,320
though tied the drawback of these two

138
00:04:34,320 --> 00:04:36,160
results is that both of the generic

139
00:04:36,160 --> 00:04:37,680
group model and the algebraic group

140
00:04:37,680 --> 00:04:39,919
model consider highly restricted classes

141
00:04:39,919 --> 00:04:42,240
of adversaries

142
00:04:42,240 --> 00:04:44,320
in the standard model bellari and delhi

143
00:04:44,320 --> 00:04:46,080
recently presented the tight reduction

144
00:04:46,080 --> 00:04:48,320
from the security of the snow id scheme

145
00:04:48,320 --> 00:04:50,639
not to the dog problem but to a new

146
00:04:50,639 --> 00:04:52,240
problem which they introduced called the

147
00:04:52,240 --> 00:04:54,960
multi-base discrete logarithm problem

148
00:04:54,960 --> 00:04:57,040
the drawback of this approach of course

149
00:04:57,040 --> 00:04:58,639
is that it assumes the hardness of a

150
00:04:58,639 --> 00:05:00,960
newly introduced interactive problem

151
00:05:00,960 --> 00:05:03,520
rather than the standard d log problem

152
00:05:03,520 --> 00:05:06,080
thus a pressing question is how inherent

153
00:05:06,080 --> 00:05:07,919
is the square root loss when trying to

154
00:05:07,919 --> 00:05:09,600
reduce the security of schnorr schemes

155
00:05:09,600 --> 00:05:11,280
to the hardness of the well-studied

156
00:05:11,280 --> 00:05:13,759
d-log problem in the standard model

157
00:05:13,759 --> 00:05:15,919
or in other words can the square wood

158
00:05:15,919 --> 00:05:18,080
barrier be circumvented based on the

159
00:05:18,080 --> 00:05:21,199
hardness of the d-log problem

160
00:05:21,199 --> 00:05:22,800
in this work we answer this question in

161
00:05:22,800 --> 00:05:24,720
the affirmative by proving tighter

162
00:05:24,720 --> 00:05:26,240
bounds for schnoe's id and signature

163
00:05:26,240 --> 00:05:27,759
schemes based on the hardness of the

164
00:05:27,759 --> 00:05:29,520
d-log problem

165
00:05:29,520 --> 00:05:31,520
first we refine the assumed hardness of

166
00:05:31,520 --> 00:05:33,919
the d-log problem in the standard model

167
00:05:33,919 --> 00:05:36,720
by revisiting its generic group hardness

168
00:05:36,720 --> 00:05:39,360
and distilling a key aspect of it

169
00:05:39,360 --> 00:05:41,440
then we introduced a new proof technique

170
00:05:41,440 --> 00:05:43,520
which generalizes the forking glamour to

171
00:05:43,520 --> 00:05:45,919
a high-moment variant of it and used

172
00:05:45,919 --> 00:05:47,520
this new technique and the refined

173
00:05:47,520 --> 00:05:49,680
assumption in order to derive tighter

174
00:05:49,680 --> 00:05:52,080
bounds for snow schemes

175
00:05:52,080 --> 00:05:54,160
for schnoe's id scheme we prove that any

176
00:05:54,160 --> 00:05:56,560
impersonator that runs in time t

177
00:05:56,560 --> 00:05:58,400
breaks the security of the scheme with

178
00:05:58,400 --> 00:06:01,280
probability at most t squared over p

179
00:06:01,280 --> 00:06:03,600
raised to the power of two thirds which

180
00:06:03,600 --> 00:06:05,680
improves upon the previously known bound

181
00:06:05,680 --> 00:06:07,759
of t squared over p raised to the power

182
00:06:07,759 --> 00:06:09,600
of one half

183
00:06:09,600 --> 00:06:11,840
similarly for snow signatures we prove

184
00:06:11,840 --> 00:06:14,000
that any forger that runs in time t

185
00:06:14,000 --> 00:06:15,600
breaks the security of the scheme with

186
00:06:15,600 --> 00:06:18,639
probability at most qh times t squared

187
00:06:18,639 --> 00:06:20,880
over p raised to the power of two thirds

188
00:06:20,880 --> 00:06:23,199
where again qh is the number of random

189
00:06:23,199 --> 00:06:25,840
oracle queries issued by the attacker

190
00:06:25,840 --> 00:06:27,440
this improves upon the previously known

191
00:06:27,440 --> 00:06:30,479
bound of qh times t squared over p

192
00:06:30,479 --> 00:06:32,960
raised to the power of one half

193
00:06:32,960 --> 00:06:34,800
finally though we will not cover this in

194
00:06:34,800 --> 00:06:36,639
this talk our approach can be

195
00:06:36,639 --> 00:06:38,720
generalized to apply to any id or

196
00:06:38,720 --> 00:06:40,720
signature scheme which is obtained from

197
00:06:40,720 --> 00:06:43,039
a sigma protocol with special soundness

198
00:06:43,039 --> 00:06:44,880
such as the okamoto idn signature

199
00:06:44,880 --> 00:06:46,400
schemes

200
00:06:46,400 --> 00:06:47,680
the remainder of the talk will be

201
00:06:47,680 --> 00:06:49,360
arranged as follows

202
00:06:49,360 --> 00:06:50,960
we'll start by reviewing schlor's id

203
00:06:50,960 --> 00:06:53,039
scheme and the existing reductions to

204
00:06:53,039 --> 00:06:54,960
the d-log problem

205
00:06:54,960 --> 00:06:56,639
then we will present our refined

206
00:06:56,639 --> 00:06:58,639
assumption and our results in more

207
00:06:58,639 --> 00:07:01,120
detail followed by the new high-moment

208
00:07:01,120 --> 00:07:02,960
forking glemma and finally we'll

209
00:07:02,960 --> 00:07:05,120
conclude with some closing remarks

210
00:07:05,120 --> 00:07:07,039
so let's begin by recalling schnorr's id

211
00:07:07,039 --> 00:07:08,960
scheme and from this point on we'll

212
00:07:08,960 --> 00:07:11,039
focus mainly on this scheme and you can

213
00:07:11,039 --> 00:07:12,720
check the paper for the extensions to

214
00:07:12,720 --> 00:07:14,639
snore signatures

215
00:07:14,639 --> 00:07:16,560
so the setting is that we have approver

216
00:07:16,560 --> 00:07:19,360
p who wants to convince a verifier v

217
00:07:19,360 --> 00:07:21,280
that she knows the discrete log of some

218
00:07:21,280 --> 00:07:24,319
publicly known group element

219
00:07:24,319 --> 00:07:26,160
we assume some publicly known and fixed

220
00:07:26,160 --> 00:07:28,639
group of order p which is generated by

221
00:07:28,639 --> 00:07:31,199
some fixed generator g

222
00:07:31,199 --> 00:07:33,520
v gets as input a public key which is a

223
00:07:33,520 --> 00:07:36,479
group element and in an honest execution

224
00:07:36,479 --> 00:07:39,360
p gets as input the secret key x which

225
00:07:39,360 --> 00:07:40,800
is the discrete log of this group

226
00:07:40,800 --> 00:07:43,840
element with respect to the generator g

227
00:07:43,840 --> 00:07:45,599
schnor's protocol proceeds in three

228
00:07:45,599 --> 00:07:46,720
rounds

229
00:07:46,720 --> 00:07:48,160
in the first round known as the

230
00:07:48,160 --> 00:07:49,360
commitment

231
00:07:49,360 --> 00:07:51,599
p chooses a uniformly random exponent r

232
00:07:51,599 --> 00:07:55,599
from zp and sends g to the r to v

233
00:07:55,599 --> 00:07:57,199
in the second round known as the

234
00:07:57,199 --> 00:07:59,759
challenge v sends a uniformly random

235
00:07:59,759 --> 00:08:02,960
element better in zp to p

236
00:08:02,960 --> 00:08:05,039
finally in the third round known as the

237
00:08:05,039 --> 00:08:06,160
response

238
00:08:06,160 --> 00:08:09,039
p computes beta x plus r

239
00:08:09,039 --> 00:08:11,759
and sends it to the verifier who accepts

240
00:08:11,759 --> 00:08:13,280
if and only if

241
00:08:13,280 --> 00:08:15,599
g raised to the power of gamma is equal

242
00:08:15,599 --> 00:08:18,319
to pk raised to the power of beta times

243
00:08:18,319 --> 00:08:19,919
alpha

244
00:08:19,919 --> 00:08:22,160
roughly speaking the most basic security

245
00:08:22,160 --> 00:08:24,080
guarantee that the protocol provides is

246
00:08:24,080 --> 00:08:25,680
that no efficient attacker can

247
00:08:25,680 --> 00:08:28,319
impersonate p without knowing so to

248
00:08:28,319 --> 00:08:30,960
speak the secret exponent x and we will

249
00:08:30,960 --> 00:08:33,599
formalize this guarantee later on

250
00:08:33,599 --> 00:08:35,440
actually the protocol also provides

251
00:08:35,440 --> 00:08:37,599
honest verifier zero knowledge

252
00:08:37,599 --> 00:08:39,839
which means that security is retained

253
00:08:39,839 --> 00:08:41,760
even against impersonators that can

254
00:08:41,760 --> 00:08:43,519
passively eavesdrop many honest

255
00:08:43,519 --> 00:08:45,920
executions of the protocol

256
00:08:45,920 --> 00:08:47,600
schnorr signatures are obtained from

257
00:08:47,600 --> 00:08:50,399
this protocol via the fiat mutants form

258
00:08:50,399 --> 00:08:51,920
and again for more detail you can see

259
00:08:51,920 --> 00:08:52,839
the

260
00:08:52,839 --> 00:08:55,440
paper towards formalizing the security

261
00:08:55,440 --> 00:08:57,279
of the protocol observe that the

262
00:08:57,279 --> 00:08:59,120
protocol satisfies the special soundness

263
00:08:59,120 --> 00:09:00,240
property

264
00:09:00,240 --> 00:09:02,240
that is one can extract the secret

265
00:09:02,240 --> 00:09:04,800
exponent x from two different accepting

266
00:09:04,800 --> 00:09:06,160
transcripts

267
00:09:06,160 --> 00:09:07,279
concretely

268
00:09:07,279 --> 00:09:09,440
given two accepted transcripts that

269
00:09:09,440 --> 00:09:11,279
share the first message alpha but with

270
00:09:11,279 --> 00:09:13,760
different challenges beta and beta prime

271
00:09:13,760 --> 00:09:15,920
x is obtained by computing gamma minus

272
00:09:15,920 --> 00:09:18,959
gamma prime over beta minus beta prime

273
00:09:18,959 --> 00:09:20,640
the special soundness property can be

274
00:09:20,640 --> 00:09:22,880
used to prove that the snore protocol is

275
00:09:22,880 --> 00:09:24,399
a proof of knowledge

276
00:09:24,399 --> 00:09:26,880
given a successful impersonator p star

277
00:09:26,880 --> 00:09:28,560
we can extract from it the secret

278
00:09:28,560 --> 00:09:30,560
exponent x

279
00:09:30,560 --> 00:09:32,640
the way this is proven is by employing a

280
00:09:32,640 --> 00:09:34,080
proof technique known as the forking

281
00:09:34,080 --> 00:09:35,040
glamour

282
00:09:35,040 --> 00:09:36,399
there are several variants of this

283
00:09:36,399 --> 00:09:38,720
technique but in all of them the general

284
00:09:38,720 --> 00:09:41,920
idea is to rewind p star in order to get

285
00:09:41,920 --> 00:09:44,160
to accepting transcripts and then to

286
00:09:44,160 --> 00:09:45,920
apply special soundness in order to

287
00:09:45,920 --> 00:09:48,959
extract the secret exponent x

288
00:09:48,959 --> 00:09:50,560
let's take a look at two variants of the

289
00:09:50,560 --> 00:09:52,560
forking dilemma and how they encounter

290
00:09:52,560 --> 00:09:53,839
the square wood barrier that we

291
00:09:53,839 --> 00:09:55,440
mentioned earlier

292
00:09:55,440 --> 00:09:58,160
the first is due to bilal neven and the

293
00:09:58,160 --> 00:10:00,160
idea here is to rewind the impersonator

294
00:10:00,160 --> 00:10:02,320
pre-star exactly once

295
00:10:02,320 --> 00:10:04,079
so the extractor first honestly

296
00:10:04,079 --> 00:10:06,399
interacts with p star in order to obtain

297
00:10:06,399 --> 00:10:08,880
the first transcript alpha beta gamma

298
00:10:08,880 --> 00:10:10,959
then it rewinds p star to the point

299
00:10:10,959 --> 00:10:13,200
right after the first message alpha

300
00:10:13,200 --> 00:10:15,680
samples a fresh challenge beta prime

301
00:10:15,680 --> 00:10:18,160
sends it to p star and obtains a second

302
00:10:18,160 --> 00:10:21,839
transcript alpha beta prime gamma prime

303
00:10:21,839 --> 00:10:24,000
first note that the extractor runs in

304
00:10:24,000 --> 00:10:26,480
roughly the same time as p star

305
00:10:26,480 --> 00:10:28,959
second velary neven proved that if p

306
00:10:28,959 --> 00:10:30,800
star breaks the security of the scheme

307
00:10:30,800 --> 00:10:32,720
with probability epsilon

308
00:10:32,720 --> 00:10:34,240
then the extractor succeeds with

309
00:10:34,240 --> 00:10:35,839
probability which is about epsilon

310
00:10:35,839 --> 00:10:37,200
squared

311
00:10:37,200 --> 00:10:39,120
the ggm bound for the d log problem

312
00:10:39,120 --> 00:10:41,760
implies that the advantage epsilon of p

313
00:10:41,760 --> 00:10:44,480
star is bounded by the square root of t

314
00:10:44,480 --> 00:10:46,720
squared over p so we encounter the

315
00:10:46,720 --> 00:10:48,160
square root loss compared to the best

316
00:10:48,160 --> 00:10:50,079
known attacks

317
00:10:50,079 --> 00:10:51,839
another variant of the forking dilemma

318
00:10:51,839 --> 00:10:54,240
was recently proposed by buteretal

319
00:10:54,240 --> 00:10:56,560
in this variant the extractor first runs

320
00:10:56,560 --> 00:10:58,000
p-star once

321
00:10:58,000 --> 00:11:00,399
and if p-star is successful then the

322
00:11:00,399 --> 00:11:02,959
extractor rewinds it repeatedly until it

323
00:11:02,959 --> 00:11:04,640
is successful again under a different

324
00:11:04,640 --> 00:11:07,120
challenge

325
00:11:07,360 --> 00:11:09,200
if p-star was successful in its first

326
00:11:09,200 --> 00:11:10,320
invocation

327
00:11:10,320 --> 00:11:11,760
then the extractor will eventually

328
00:11:11,760 --> 00:11:13,760
succeed so the successful probability of

329
00:11:13,760 --> 00:11:16,079
the extractor is the same as that of p

330
00:11:16,079 --> 00:11:18,640
star which is epsilon

331
00:11:18,640 --> 00:11:20,640
the running time of the extractor is now

332
00:11:20,640 --> 00:11:21,839
unbounded

333
00:11:21,839 --> 00:11:24,000
but it is not hard to see that in

334
00:11:24,000 --> 00:11:26,079
expectation it will terminate in time

335
00:11:26,079 --> 00:11:28,480
which is roughly t

336
00:11:28,480 --> 00:11:30,399
now we cannot use ship's bound for the

337
00:11:30,399 --> 00:11:32,959
discrete log problem in the ggm since it

338
00:11:32,959 --> 00:11:34,399
doesn't apply to expected time

339
00:11:34,399 --> 00:11:36,000
algorithms

340
00:11:36,000 --> 00:11:38,160
fortunately jager and tezako recently

341
00:11:38,160 --> 00:11:40,720
provided such a bond concretely they

342
00:11:40,720 --> 00:11:43,600
proved that in the ggm an algorithm that

343
00:11:43,600 --> 00:11:46,079
runs in expected time t prime

344
00:11:46,079 --> 00:11:47,839
solves the discrete log problem with

345
00:11:47,839 --> 00:11:50,560
probability at most the square root of t

346
00:11:50,560 --> 00:11:52,320
prime squared over p

347
00:11:52,320 --> 00:11:53,920
applying this bound to the extractor of

348
00:11:53,920 --> 00:11:56,000
butalital we again encounter the same

349
00:11:56,000 --> 00:11:58,079
square with barrier

350
00:11:58,079 --> 00:11:59,760
other variants of the forking glemma

351
00:11:59,760 --> 00:12:01,839
that we will not cover in this talk

352
00:12:01,839 --> 00:12:03,920
also encounter the square root variable

353
00:12:03,920 --> 00:12:05,680
as well

354
00:12:05,680 --> 00:12:07,600
we are now ready to present our refined

355
00:12:07,600 --> 00:12:09,360
assumption on the hardness of the d-log

356
00:12:09,360 --> 00:12:10,959
problem

357
00:12:10,959 --> 00:12:12,959
consider an algorithm a for computing

358
00:12:12,959 --> 00:12:14,959
discrete logarithms in a cyclic group of

359
00:12:14,959 --> 00:12:17,519
order p generated by g

360
00:12:17,519 --> 00:12:19,600
our assumption is that for any such

361
00:12:19,600 --> 00:12:20,959
algorithm a

362
00:12:20,959 --> 00:12:22,800
the probability that it succeeds in

363
00:12:22,800 --> 00:12:24,399
computing the discrete log of a

364
00:12:24,399 --> 00:12:26,079
uniformly random group element with

365
00:12:26,079 --> 00:12:27,600
respect to g

366
00:12:27,600 --> 00:12:30,560
is bounded by the expectation of t a

367
00:12:30,560 --> 00:12:32,079
squared over p

368
00:12:32,079 --> 00:12:34,160
where t a is a random variable

369
00:12:34,160 --> 00:12:36,720
corresponding to the running time of a

370
00:12:36,720 --> 00:12:38,560
we call this assumption the second

371
00:12:38,560 --> 00:12:41,279
moment hardness of the d-log problem

372
00:12:41,279 --> 00:12:43,360
a major upside of this assumption is

373
00:12:43,360 --> 00:12:44,720
that it only considers the very

374
00:12:44,720 --> 00:12:47,200
well-studied d-log problem and doesn't

375
00:12:47,200 --> 00:12:49,839
introduce any new problems

376
00:12:49,839 --> 00:12:51,600
additionally this assumption holds in

377
00:12:51,600 --> 00:12:54,160
the ggm as implied by shoop's original

378
00:12:54,160 --> 00:12:57,279
proof and observed by jaeger and tezao

379
00:12:57,279 --> 00:12:59,360
in the paper we also consider extensions

380
00:12:59,360 --> 00:13:00,800
of this assumption to arbitrary

381
00:13:00,800 --> 00:13:03,360
relations beyond just the d-log relation

382
00:13:03,360 --> 00:13:05,200
and also to higher moments of the

383
00:13:05,200 --> 00:13:07,279
adversary's running time potentially

384
00:13:07,279 --> 00:13:09,519
beyond the second moment

385
00:13:09,519 --> 00:13:11,440
with this assumption we can now state

386
00:13:11,440 --> 00:13:13,519
our results more accurately

387
00:13:13,519 --> 00:13:15,200
so assume that we work in a group in

388
00:13:15,200 --> 00:13:17,279
which the d-log problem is second moment

389
00:13:17,279 --> 00:13:18,560
hard

390
00:13:18,560 --> 00:13:20,800
then for any impersonator attacking the

391
00:13:20,800 --> 00:13:23,200
snow identification scheme that runs in

392
00:13:23,200 --> 00:13:24,240
time t

393
00:13:24,240 --> 00:13:26,240
her advantage in breaking the security

394
00:13:26,240 --> 00:13:28,880
of the scheme is at most t squared over

395
00:13:28,880 --> 00:13:30,959
p raised to the power of two thirds

396
00:13:30,959 --> 00:13:32,639
whereas before p is the order of the

397
00:13:32,639 --> 00:13:35,760
group for snow signatures we obtain a

398
00:13:35,760 --> 00:13:37,040
similar bound

399
00:13:37,040 --> 00:13:39,760
but with a multiplicative factor of qh

400
00:13:39,760 --> 00:13:41,839
raised to the power of two-thirds

401
00:13:41,839 --> 00:13:43,760
whereas before qh is the number of

402
00:13:43,760 --> 00:13:45,360
random vocal queries issued by the

403
00:13:45,360 --> 00:13:47,120
attacker

404
00:13:47,120 --> 00:13:48,720
just to give you some sense of how much

405
00:13:48,720 --> 00:13:50,560
our result improves upon the square root

406
00:13:50,560 --> 00:13:52,399
bound you can find some concrete

407
00:13:52,399 --> 00:13:53,920
examples on the slides for the case of

408
00:13:53,920 --> 00:13:55,600
shore's id scheme

409
00:13:55,600 --> 00:13:57,880
so for example if the group is of size

410
00:13:57,880 --> 00:14:01,279
256 bits and the attacker runs in time 2

411
00:14:01,279 --> 00:14:04,000
to the 64. our bound is better by a

412
00:14:04,000 --> 00:14:05,760
multiplicative factor of roughly 2 to

413
00:14:05,760 --> 00:14:08,399
the 21.

414
00:14:08,399 --> 00:14:10,160
here you can find some concrete examples

415
00:14:10,160 --> 00:14:11,519
for the improvement we make for snow

416
00:14:11,519 --> 00:14:13,839
signatures so for example if the

417
00:14:13,839 --> 00:14:16,000
attacker also makes 2 to the 50 random

418
00:14:16,000 --> 00:14:18,160
oracle queries i will bound this better

419
00:14:18,160 --> 00:14:21,279
by a factor of roughly 2 to 13.

420
00:14:21,279 --> 00:14:22,959
we can now present our high moment

421
00:14:22,959 --> 00:14:24,240
working lemon

422
00:14:24,240 --> 00:14:26,560
so dilemma does the following it takes

423
00:14:26,560 --> 00:14:28,560
an impersonator p star that runs in time

424
00:14:28,560 --> 00:14:30,399
t and breaks schnorr's id scheme with

425
00:14:30,399 --> 00:14:32,000
probability epsilon

426
00:14:32,000 --> 00:14:34,399
and it converts it into an extractor

427
00:14:34,399 --> 00:14:36,240
whose goal is to output two valid

428
00:14:36,240 --> 00:14:38,639
transcripts with distinct challenges

429
00:14:38,639 --> 00:14:40,720
moreover we show that this extractor

430
00:14:40,720 --> 00:14:42,240
succeeds with probability roughly

431
00:14:42,240 --> 00:14:43,760
epsilon raised to the power of three

432
00:14:43,760 --> 00:14:44,800
halves

433
00:14:44,800 --> 00:14:46,560
and that the second moment of its

434
00:14:46,560 --> 00:14:49,040
running time is roughly t squared

435
00:14:49,040 --> 00:14:50,880
looking ahead we can then use this

436
00:14:50,880 --> 00:14:52,639
extracto together with the special

437
00:14:52,639 --> 00:14:54,800
soundness property of schnorr's protocol

438
00:14:54,800 --> 00:14:56,480
to get a discrete log algorithm with

439
00:14:56,480 --> 00:14:58,560
similar parameters

440
00:14:58,560 --> 00:15:00,320
then our bound for the security of

441
00:15:00,320 --> 00:15:02,720
schnoz id scheme will follow from our

442
00:15:02,720 --> 00:15:04,480
assumption on the second moment hardness

443
00:15:04,480 --> 00:15:06,639
of the d-log problem

444
00:15:06,639 --> 00:15:08,880
before we describe our extractor

445
00:15:08,880 --> 00:15:10,639
note that the existing extraction

446
00:15:10,639 --> 00:15:12,800
procedures that we described earlier

447
00:15:12,800 --> 00:15:15,199
still encounter the square root barrier

448
00:15:15,199 --> 00:15:17,040
even with our second moment hardness

449
00:15:17,040 --> 00:15:18,560
assumption

450
00:15:18,560 --> 00:15:20,560
the single rewind approach results in an

451
00:15:20,560 --> 00:15:22,560
extractor that has success probability

452
00:15:22,560 --> 00:15:24,959
epsilon squared and whose running time

453
00:15:24,959 --> 00:15:27,360
second moment is t squared

454
00:15:27,360 --> 00:15:29,600
the second moment hardness of discrete

455
00:15:29,600 --> 00:15:32,320
log yields the bound of square root of t

456
00:15:32,320 --> 00:15:34,160
squared over p

457
00:15:34,160 --> 00:15:36,000
on the other hand the rewind until

458
00:15:36,000 --> 00:15:38,000
success approach yields an extractor

459
00:15:38,000 --> 00:15:40,399
that has success probability epsilon and

460
00:15:40,399 --> 00:15:42,480
whose running times second moment is t

461
00:15:42,480 --> 00:15:44,560
squared over epsilon so the second

462
00:15:44,560 --> 00:15:46,959
moment hardness of discrete log again

463
00:15:46,959 --> 00:15:48,959
yields the square root bound

464
00:15:48,959 --> 00:15:51,519
the key idea behind our extractor is to

465
00:15:51,519 --> 00:15:53,680
carefully choose the number of rewinds

466
00:15:53,680 --> 00:15:55,600
so that it optimizes the trade-off

467
00:15:55,600 --> 00:15:57,600
between its success probability and the

468
00:15:57,600 --> 00:16:00,320
second moment of its running time

469
00:16:00,320 --> 00:16:02,480
so we rewind the impersonator p star

470
00:16:02,480 --> 00:16:04,560
exactly b times for some predetermined

471
00:16:04,560 --> 00:16:05,920
parameter b

472
00:16:05,920 --> 00:16:07,759
and the question that remains is how to

473
00:16:07,759 --> 00:16:09,199
choose b

474
00:16:09,199 --> 00:16:10,639
what we'll do in the remainder of this

475
00:16:10,639 --> 00:16:12,880
talk is to analyze the reduction with b

476
00:16:12,880 --> 00:16:14,160
as a parameter

477
00:16:14,160 --> 00:16:16,000
and then we'll see what choice of b is

478
00:16:16,000 --> 00:16:18,240
warranted by the analysis

479
00:16:18,240 --> 00:16:20,320
first let us define our extractor more

480
00:16:20,320 --> 00:16:21,680
explicitly

481
00:16:21,680 --> 00:16:23,440
the extractor first honestly interacts

482
00:16:23,440 --> 00:16:25,839
with p star to obtain a transcript alpha

483
00:16:25,839 --> 00:16:27,279
beta gamma

484
00:16:27,279 --> 00:16:29,199
it then checks if this transcript is

485
00:16:29,199 --> 00:16:32,160
accepting and if not it awards

486
00:16:32,160 --> 00:16:34,399
if the transcript is accepting our

487
00:16:34,399 --> 00:16:36,399
extractor rewinds p star to the point

488
00:16:36,399 --> 00:16:38,639
just after the first message alpha b

489
00:16:38,639 --> 00:16:39,839
times over

490
00:16:39,839 --> 00:16:41,920
and in each rewind it independently

491
00:16:41,920 --> 00:16:44,160
samples a fresh challenge beta i to

492
00:16:44,160 --> 00:16:49,319
obtain a transcript alpha beta i gamma

493
00:16:51,199 --> 00:16:53,120
the hope is that one of these rewinds

494
00:16:53,120 --> 00:16:55,120
will yield an accepting transcript with

495
00:16:55,120 --> 00:16:56,720
a challenge which is different from the

496
00:16:56,720 --> 00:16:59,440
first challenge beta

497
00:16:59,440 --> 00:17:01,680
we'll now turn to analyze our extractor

498
00:17:01,680 --> 00:17:03,279
starting from the second moment of its

499
00:17:03,279 --> 00:17:04,799
running time

500
00:17:04,799 --> 00:17:06,799
the first interaction of our extractor

501
00:17:06,799 --> 00:17:09,039
with p star results in an accepting

502
00:17:09,039 --> 00:17:11,599
transcript with probability epsilon

503
00:17:11,599 --> 00:17:13,839
so with probability 1 minus epsilon it

504
00:17:13,839 --> 00:17:15,919
does not and the extractor about after

505
00:17:15,919 --> 00:17:18,640
invoking p star just once so its running

506
00:17:18,640 --> 00:17:20,400
time is roughly the same as that of p

507
00:17:20,400 --> 00:17:22,480
star which is d

508
00:17:22,480 --> 00:17:24,400
if the first interaction with p star

509
00:17:24,400 --> 00:17:26,240
does result in an accepting transcript

510
00:17:26,240 --> 00:17:28,559
which happens with probability epsilon

511
00:17:28,559 --> 00:17:31,120
our extractor runs p star b additional

512
00:17:31,120 --> 00:17:33,600
times so its running time in this case

513
00:17:33,600 --> 00:17:35,919
is roughly b times t

514
00:17:35,919 --> 00:17:37,760
overall we obtain that the second moment

515
00:17:37,760 --> 00:17:39,440
of our extractor's running time is

516
00:17:39,440 --> 00:17:42,160
roughly t squared plus epsilon times b

517
00:17:42,160 --> 00:17:44,400
squared times t squared

518
00:17:44,400 --> 00:17:46,640
an immediate observation is that setting

519
00:17:46,640 --> 00:17:48,480
b to be less than one over square root

520
00:17:48,480 --> 00:17:51,280
of epsilon doesn't really make sense

521
00:17:51,280 --> 00:17:53,520
this is because for all values of b up

522
00:17:53,520 --> 00:17:55,679
to one over square root of epsilon the

523
00:17:55,679 --> 00:17:57,280
second moment of the extractor is

524
00:17:57,280 --> 00:17:59,280
dominated by the additive term of t

525
00:17:59,280 --> 00:18:01,840
squared and obviously the larger we set

526
00:18:01,840 --> 00:18:03,840
b the greater the success probability of

527
00:18:03,840 --> 00:18:05,600
the extractor will be

528
00:18:05,600 --> 00:18:07,520
so from now on we will assume that b is

529
00:18:07,520 --> 00:18:09,679
at least 1 over square root of epsilon

530
00:18:09,679 --> 00:18:11,520
and the second moment of our extractor's

531
00:18:11,520 --> 00:18:13,520
running time in this case is simplified

532
00:18:13,520 --> 00:18:16,000
to roughly epsilon times b squared times

533
00:18:16,000 --> 00:18:18,000
t squared

534
00:18:18,000 --> 00:18:19,280
as for the extractor's success

535
00:18:19,280 --> 00:18:21,760
probability we prove a claim that states

536
00:18:21,760 --> 00:18:23,760
that if b is at least 1 over square root

537
00:18:23,760 --> 00:18:26,320
of epsilon then this probability is at

538
00:18:26,320 --> 00:18:29,120
least epsilon squared times b

539
00:18:29,120 --> 00:18:30,880
proving this claim is the most technical

540
00:18:30,880 --> 00:18:32,400
part of the proof

541
00:18:32,400 --> 00:18:33,919
the main technical difficulty that

542
00:18:33,919 --> 00:18:36,160
arises is that conditioned on the

543
00:18:36,160 --> 00:18:38,320
randomness of p star the success

544
00:18:38,320 --> 00:18:40,160
probability of the extractor is a

545
00:18:40,160 --> 00:18:42,160
non-convex function of p-star's

546
00:18:42,160 --> 00:18:43,600
advantage

547
00:18:43,600 --> 00:18:45,520
this means that standard techniques that

548
00:18:45,520 --> 00:18:47,200
are often used in order to prove

549
00:18:47,200 --> 00:18:48,880
variants of the forking dilemma and

550
00:18:48,880 --> 00:18:50,880
which use jensen's inequality do not

551
00:18:50,880 --> 00:18:53,760
apply our solution to this difficulty is

552
00:18:53,760 --> 00:18:55,440
to bound this conditional probability

553
00:18:55,440 --> 00:18:56,480
from below

554
00:18:56,480 --> 00:18:58,000
by a carefully chosen function of

555
00:18:58,000 --> 00:18:59,120
epsilon

556
00:18:59,120 --> 00:19:01,919
arguing that this function is convex and

557
00:19:01,919 --> 00:19:04,640
then we can apply jansen's inequality

558
00:19:04,640 --> 00:19:06,240
i just want to emphasize that this is a

559
00:19:06,240 --> 00:19:08,000
highly informal overview of our approach

560
00:19:08,000 --> 00:19:09,360
and you can find the full proof in the

561
00:19:09,360 --> 00:19:10,720
paper

562
00:19:10,720 --> 00:19:13,200
so now we can put everything together

563
00:19:13,200 --> 00:19:14,799
using our extractor and the special

564
00:19:14,799 --> 00:19:16,960
soundness property of schnorr's protocol

565
00:19:16,960 --> 00:19:18,960
we obtain a discrete log algorithm with

566
00:19:18,960 --> 00:19:20,720
parameters that are essentially the same

567
00:19:20,720 --> 00:19:22,640
as those of the extractor

568
00:19:22,640 --> 00:19:24,480
we then use our assumption on the second

569
00:19:24,480 --> 00:19:26,880
moment hardness of the d-log problem to

570
00:19:26,880 --> 00:19:29,360
argue that epsilon is bounded by b times

571
00:19:29,360 --> 00:19:32,240
t squared over p we recall that epsilon

572
00:19:32,240 --> 00:19:33,679
is the success probability of the

573
00:19:33,679 --> 00:19:36,000
underlying impersonator p star

574
00:19:36,000 --> 00:19:38,640
t is p star's running time and little p

575
00:19:38,640 --> 00:19:40,559
is the size of the group

576
00:19:40,559 --> 00:19:42,160
since we wish to minimize the bound on

577
00:19:42,160 --> 00:19:44,320
epsilon we can choose b to be as small

578
00:19:44,320 --> 00:19:46,160
as possible while still satisfying the

579
00:19:46,160 --> 00:19:48,080
condition that b is at least one over

580
00:19:48,080 --> 00:19:49,919
square root of epsilon

581
00:19:49,919 --> 00:19:52,240
indeed setting b to be exactly one over

582
00:19:52,240 --> 00:19:54,320
square root of epsilon gives us the

583
00:19:54,320 --> 00:19:56,320
promised bound of t squared over p

584
00:19:56,320 --> 00:19:59,760
raised to the power of two thirds

585
00:19:59,760 --> 00:20:02,240
let's conclude with some closing remarks

586
00:20:02,240 --> 00:20:04,400
to put our results in perspective

587
00:20:04,400 --> 00:20:06,400
note that it is the only result until

588
00:20:06,400 --> 00:20:08,480
now that breaks the square root barrier

589
00:20:08,480 --> 00:20:09,840
based on the hardness of the very

590
00:20:09,840 --> 00:20:11,760
well-studied discrete logarithm problem

591
00:20:11,760 --> 00:20:13,600
in the standard model

592
00:20:13,600 --> 00:20:16,000
previous results either encountered the

593
00:20:16,000 --> 00:20:17,600
square root barrier

594
00:20:17,600 --> 00:20:19,520
relied on highly restrictive idealized

595
00:20:19,520 --> 00:20:22,000
models or introduced a new interactive

596
00:20:22,000 --> 00:20:23,440
problem that goes well beyond the

597
00:20:23,440 --> 00:20:26,240
standard d-log problem

598
00:20:26,240 --> 00:20:28,720
so to recap we presented tighter bounds

599
00:20:28,720 --> 00:20:30,640
for schnore's id and signature schemes

600
00:20:30,640 --> 00:20:32,159
based on the hardness of the d-log

601
00:20:32,159 --> 00:20:33,200
problem

602
00:20:33,200 --> 00:20:35,039
we did so by considering a refined

603
00:20:35,039 --> 00:20:36,720
assumption regarding the second moment

604
00:20:36,720 --> 00:20:38,640
hardness of d log

605
00:20:38,640 --> 00:20:40,559
we then presented a new extractor that

606
00:20:40,559 --> 00:20:42,960
utilizes this assumption and derived

607
00:20:42,960 --> 00:20:44,640
concrete security bounds for schnorr

608
00:20:44,640 --> 00:20:46,559
schemes that break the square root

609
00:20:46,559 --> 00:20:47,679
barrier

610
00:20:47,679 --> 00:20:49,360
we mentioned a couple of extensions that

611
00:20:49,360 --> 00:20:51,360
you can find in the paper to other

612
00:20:51,360 --> 00:20:52,960
identification and signature schemes

613
00:20:52,960 --> 00:20:55,520
such as diesel foca motto and also to

614
00:20:55,520 --> 00:20:57,520
other relations other than discrete log

615
00:20:57,520 --> 00:20:59,039
and to higher moments than the second

616
00:20:59,039 --> 00:21:00,640
moment

617
00:21:00,640 --> 00:21:02,880
the main problem that remains open is of

618
00:21:02,880 --> 00:21:04,720
course proving optimal security bounds

619
00:21:04,720 --> 00:21:06,320
for schnorr schemes based on the

620
00:21:06,320 --> 00:21:08,559
hardness of the d-log problem

621
00:21:08,559 --> 00:21:10,159
so that's it and thank you for your

622
00:21:10,159 --> 00:21:13,039
attention

