1
00:00:01,520 --> 00:00:04,319
hello my name is patrick longa

2
00:00:04,319 --> 00:00:06,319
today i will talk about our project

3
00:00:06,319 --> 00:00:08,639
titled the cost to break psych a

4
00:00:08,639 --> 00:00:10,880
comparative hardware based analysis with

5
00:00:10,880 --> 00:00:13,120
aes and chatri

6
00:00:13,120 --> 00:00:15,120
this is joint work with weng one and

7
00:00:15,120 --> 00:00:17,839
jacob suffer

8
00:00:18,080 --> 00:00:19,920
before jumping to the main part of the

9
00:00:19,920 --> 00:00:22,240
presentation let me give you a brief

10
00:00:22,240 --> 00:00:24,320
summary about the project

11
00:00:24,320 --> 00:00:25,840
let's start with the problem that we are

12
00:00:25,840 --> 00:00:27,840
tackling

13
00:00:27,840 --> 00:00:29,519
psych that stands for super single

14
00:00:29,519 --> 00:00:32,000
arsenic encapsulation is an alternate

15
00:00:32,000 --> 00:00:33,680
candidate in the third round of the

16
00:00:33,680 --> 00:00:35,280
nispos quantum cryptography

17
00:00:35,280 --> 00:00:37,200
standardization process

18
00:00:37,200 --> 00:00:39,360
and it's in fact the only isoline based

19
00:00:39,360 --> 00:00:42,160
scheme in the competition

20
00:00:42,160 --> 00:00:44,480
this is important given that we think

21
00:00:44,480 --> 00:00:46,399
that diversity should play an important

22
00:00:46,399 --> 00:00:48,640
role in the selection process

23
00:00:48,640 --> 00:00:49,920
in which case

24
00:00:49,920 --> 00:00:51,440
site becomes a very attractive

25
00:00:51,440 --> 00:00:54,239
alternative if we notice that most

26
00:00:54,239 --> 00:00:55,680
finalists in the competition are

27
00:00:55,680 --> 00:00:58,480
lattice-based schemes

28
00:00:58,480 --> 00:01:01,039
maybe the single most critical drawback

29
00:01:01,039 --> 00:01:04,159
of psych is that it's relatively slow

30
00:01:04,159 --> 00:01:06,640
however on the other hand psych has

31
00:01:06,640 --> 00:01:09,840
demonstrated to have a solid security

32
00:01:09,840 --> 00:01:12,000
the problem is that currently psych is

33
00:01:12,000 --> 00:01:13,840
being penalized because its parameters

34
00:01:13,840 --> 00:01:16,880
are chosen very conservatively using a

35
00:01:16,880 --> 00:01:19,439
random max's memory model

36
00:01:19,439 --> 00:01:21,840
we observe that these hurt sites

37
00:01:21,840 --> 00:01:24,960
performance more than it should

38
00:01:24,960 --> 00:01:27,920
so what we do in this work is to analyze

39
00:01:27,920 --> 00:01:31,280
the security of site aes and c3 using a

40
00:01:31,280 --> 00:01:34,880
more realistic budget based cost model

41
00:01:34,880 --> 00:01:37,840
we use aes and c3 here because these are

42
00:01:37,840 --> 00:01:40,000
used as reference points to determine

43
00:01:40,000 --> 00:01:42,640
the nest security levels

44
00:01:42,640 --> 00:01:45,520
in our model we can consider both

45
00:01:45,520 --> 00:01:47,920
computing and memory costs together with

46
00:01:47,920 --> 00:01:50,240
historical price data and the use of a

47
00:01:50,240 --> 00:01:53,200
conservative projection of future costs

48
00:01:53,200 --> 00:01:55,920
for our analysis we also propose an

49
00:01:55,920 --> 00:01:58,320
efficient architecture for the single

50
00:01:58,320 --> 00:01:59,920
most critical computation in the

51
00:01:59,920 --> 00:02:01,759
cryptanalysis of psyc

52
00:02:01,759 --> 00:02:03,680
that is the large degree i saw in

53
00:02:03,680 --> 00:02:05,520
computation

54
00:02:05,520 --> 00:02:08,239
this architecture is then used to model

55
00:02:08,239 --> 00:02:10,479
an asic power instance of the van

56
00:02:10,479 --> 00:02:13,040
norskrot wiener or vowel

57
00:02:13,040 --> 00:02:15,920
parallel collision finding algorithm

58
00:02:15,920 --> 00:02:18,239
this algorithm is the most efficient

59
00:02:18,239 --> 00:02:22,800
algorithm currently known to break psych

60
00:02:22,800 --> 00:02:24,720
now let me briefly comment on our

61
00:02:24,720 --> 00:02:26,319
results

62
00:02:26,319 --> 00:02:28,319
as conjecture we conclude that the

63
00:02:28,319 --> 00:02:30,000
current psych parameters are very

64
00:02:30,000 --> 00:02:32,720
conservative and over offer a wide

65
00:02:32,720 --> 00:02:36,640
margin of quantum and classical security

66
00:02:36,640 --> 00:02:39,120
our model allows us to quantify such

67
00:02:39,120 --> 00:02:41,440
security gap

68
00:02:41,440 --> 00:02:43,760
accordingly we propose new parameters

69
00:02:43,760 --> 00:02:45,760
that fit more closely than in security

70
00:02:45,760 --> 00:02:47,040
targets

71
00:02:47,040 --> 00:02:49,040
these new parameters are still chosen

72
00:02:49,040 --> 00:02:51,040
conservatively

73
00:02:51,040 --> 00:02:53,440
we also report new implementations of

74
00:02:53,440 --> 00:02:55,920
psych using these new parameters and

75
00:02:55,920 --> 00:02:58,319
shows significant gains in performance

76
00:02:58,319 --> 00:02:59,680
and bandwidth

77
00:02:59,680 --> 00:03:02,159
this is a win-win situation as i said

78
00:03:02,159 --> 00:03:04,400
before the execution time is the most

79
00:03:04,400 --> 00:03:06,560
critical drawback of psych

80
00:03:06,560 --> 00:03:08,640
on the other hand bandwidth is one of

81
00:03:08,640 --> 00:03:11,200
the most attractive advantages of psych

82
00:03:11,200 --> 00:03:14,000
so reducing key sizes makes site even

83
00:03:14,000 --> 00:03:16,720
more attractive

84
00:03:17,519 --> 00:03:19,840
okay so now let's go deeper into the

85
00:03:19,840 --> 00:03:22,000
details of the project let me give you

86
00:03:22,000 --> 00:03:24,000
some basics about post quantum key

87
00:03:24,000 --> 00:03:28,080
exchange from super singular science

88
00:03:28,080 --> 00:03:31,280
psych is in fact based on ssidh which

89
00:03:31,280 --> 00:03:33,280
stands for super singular shiny diffic

90
00:03:33,280 --> 00:03:35,120
helmet key exchange

91
00:03:35,120 --> 00:03:38,400
this protocol was proposed back in 2011

92
00:03:38,400 --> 00:03:41,200
by david zhao and look at the film

93
00:03:41,200 --> 00:03:43,840
as we mentioned before sadh has a solid

94
00:03:43,840 --> 00:03:46,400
security history in its fight of its

95
00:03:46,400 --> 00:03:48,080
young age

96
00:03:48,080 --> 00:03:50,080
the best known attack is the classical

97
00:03:50,080 --> 00:03:52,080
vow algorithm

98
00:03:52,080 --> 00:03:54,239
so on a classical and quantum computer

99
00:03:54,239 --> 00:03:57,280
the tag complexity is exponential

100
00:03:57,280 --> 00:03:58,080
now

101
00:03:58,080 --> 00:03:59,680
psych is the

102
00:03:59,680 --> 00:04:02,080
secure version of sidh

103
00:04:02,080 --> 00:04:03,480
it was designed in

104
00:04:03,480 --> 00:04:06,879
2017 and then submitted to the nic post

105
00:04:06,879 --> 00:04:08,640
quantum cryptography standardization

106
00:04:08,640 --> 00:04:10,799
process

107
00:04:10,799 --> 00:04:12,959
let's recall some facts about elliptic

108
00:04:12,959 --> 00:04:15,040
curves and isogenics that are important

109
00:04:15,040 --> 00:04:17,680
to understand how sid age and psych work

110
00:04:17,680 --> 00:04:19,759
let's assume we have two elliptic curves

111
00:04:19,759 --> 00:04:22,240
e1 and a2 which are defined over an

112
00:04:22,240 --> 00:04:24,400
extension field l of characteristic

113
00:04:24,400 --> 00:04:26,080
characteristic p

114
00:04:26,080 --> 00:04:28,160
where p is prime

115
00:04:28,160 --> 00:04:30,800
and isogeny is then defined as a

116
00:04:30,800 --> 00:04:33,759
non-constant rational map that maps e1

117
00:04:33,759 --> 00:04:35,759
to e2 and that also preserves the

118
00:04:35,759 --> 00:04:38,720
identity element

119
00:04:38,800 --> 00:04:40,479
now let's mention some relevant

120
00:04:40,479 --> 00:04:42,800
properties that are important here

121
00:04:42,800 --> 00:04:44,960
for example i see initial group

122
00:04:44,960 --> 00:04:46,800
homomorphisms

123
00:04:46,800 --> 00:04:48,320
another important one is that

124
00:04:48,320 --> 00:04:50,720
isomorphism classes are essentially

125
00:04:50,720 --> 00:04:53,040
subsets of elliptic curves that share

126
00:04:53,040 --> 00:04:55,360
the same gain environment

127
00:04:55,360 --> 00:04:57,680
finally giving a prime p we have

128
00:04:57,680 --> 00:05:00,400
approximately p over 12 isomorphism

129
00:05:00,400 --> 00:05:03,360
classes of super super singular elliptic

130
00:05:03,360 --> 00:05:07,680
curves all defined over f p square

131
00:05:08,479 --> 00:05:11,440
one way to understand sidh is with this

132
00:05:11,440 --> 00:05:14,560
idea of super singular or sony graphs

133
00:05:14,560 --> 00:05:16,800
in this graph we assume that the

134
00:05:16,800 --> 00:05:19,440
vertices or dots represent the

135
00:05:19,440 --> 00:05:22,000
isomorphism classes of suprasingular

136
00:05:22,000 --> 00:05:23,360
curves

137
00:05:23,360 --> 00:05:26,320
meaning that they contain a subset of

138
00:05:26,320 --> 00:05:28,160
curves all with the same in j

139
00:05:28,160 --> 00:05:29,759
environment

140
00:05:29,759 --> 00:05:32,240
now the edges that connect these

141
00:05:32,240 --> 00:05:35,120
vertices are the isogenys which have a

142
00:05:35,120 --> 00:05:36,720
fixed prime degree

143
00:05:36,720 --> 00:05:38,639
so we can have graphs with different

144
00:05:38,639 --> 00:05:39,759
degrees

145
00:05:39,759 --> 00:05:41,600
for example on the left we have the

146
00:05:41,600 --> 00:05:44,000
degree two isoline graph and on the

147
00:05:44,000 --> 00:05:46,240
right we have the degree three iso in a

148
00:05:46,240 --> 00:05:47,120
graph

149
00:05:47,120 --> 00:05:49,199
so as you can see the graphs map the

150
00:05:49,199 --> 00:05:51,759
isomorphism classes in different ways

151
00:05:51,759 --> 00:05:54,160
and this is the idea behind the sidh

152
00:05:54,160 --> 00:05:55,759
protocol

153
00:05:55,759 --> 00:05:58,240
now let me explain how is ideation site

154
00:05:58,240 --> 00:06:00,000
work in a nutshell

155
00:06:00,000 --> 00:06:02,160
let's start with sidh

156
00:06:02,160 --> 00:06:04,720
let's assume alice is represented in red

157
00:06:04,720 --> 00:06:07,440
and bob in blue again we have our

158
00:06:07,440 --> 00:06:09,360
vertices which are the isomorphism

159
00:06:09,360 --> 00:06:11,919
classes just visually expanded on this

160
00:06:11,919 --> 00:06:13,360
slide

161
00:06:13,360 --> 00:06:15,600
so we start by fixing an initial

162
00:06:15,600 --> 00:06:17,360
elliptic curve that we call here e

163
00:06:17,360 --> 00:06:18,400
naught

164
00:06:18,400 --> 00:06:20,400
this one belongs to a certain isomor

165
00:06:20,400 --> 00:06:22,800
isomorphism class

166
00:06:22,800 --> 00:06:23,600
then

167
00:06:23,600 --> 00:06:25,759
alice proceeds by generating a secret

168
00:06:25,759 --> 00:06:28,560
isolation that that we call phi a and

169
00:06:28,560 --> 00:06:31,120
with that secret she maps e naught to

170
00:06:31,120 --> 00:06:33,600
another elliptic curve that we call e

171
00:06:33,600 --> 00:06:36,560
sub a belonging to another isomorphism

172
00:06:36,560 --> 00:06:38,400
class

173
00:06:38,400 --> 00:06:40,160
bob does similarly

174
00:06:40,160 --> 00:06:43,120
using a circular sign in e5b that map c

175
00:06:43,120 --> 00:06:45,440
naught to another elliptic curve that we

176
00:06:45,440 --> 00:06:47,600
call e sub b

177
00:06:47,600 --> 00:06:50,560
now each of a and e sub b are the public

178
00:06:50,560 --> 00:06:52,880
key information they are exchanged

179
00:06:52,880 --> 00:06:54,639
between the parties

180
00:06:54,639 --> 00:06:56,800
so then we proceed as follows

181
00:06:56,800 --> 00:06:58,479
alice takes

182
00:06:58,479 --> 00:07:01,599
bob's public key eso b and using another

183
00:07:01,599 --> 00:07:05,039
secret i saw in e5 prime a she maps e

184
00:07:05,039 --> 00:07:09,919
sub b to another curve e sub a b

185
00:07:09,919 --> 00:07:12,960
bob does similarly to map e sub a to

186
00:07:12,960 --> 00:07:14,639
another curve that we call e sub

187
00:07:14,639 --> 00:07:16,960
e-sub-va

188
00:07:16,960 --> 00:07:19,520
if everything is done properly then

189
00:07:19,520 --> 00:07:22,479
e-sub-a-b and e-sub-ba

190
00:07:22,479 --> 00:07:24,479
are expected to belong to the same

191
00:07:24,479 --> 00:07:26,240
isomorphism class

192
00:07:26,240 --> 00:07:28,080
meaning that they should have the same

193
00:07:28,080 --> 00:07:30,720
gene variant which then can be used as a

194
00:07:30,720 --> 00:07:32,479
share key

195
00:07:32,479 --> 00:07:35,520
alright but the problem with sidh is

196
00:07:35,520 --> 00:07:37,520
that it is not secure when keys are

197
00:07:37,520 --> 00:07:38,800
reused

198
00:07:38,800 --> 00:07:41,919
it is only recommended in ephemeral mode

199
00:07:41,919 --> 00:07:45,199
that's why we need psyc psych uses a

200
00:07:45,199 --> 00:07:47,520
variant of the hoffray hobelman skills

201
00:07:47,520 --> 00:07:48,800
transform

202
00:07:48,800 --> 00:07:51,440
to convert an ncpa secure public

203
00:07:51,440 --> 00:07:54,479
encryption scheme into an ncca secure

204
00:07:54,479 --> 00:07:58,319
key encapsulation mechanism

205
00:07:58,319 --> 00:08:00,080
in this slide you can see the details of

206
00:08:00,080 --> 00:08:02,639
the side protocol i won't go in too much

207
00:08:02,639 --> 00:08:05,039
detail here just wanted to highlight the

208
00:08:05,039 --> 00:08:07,360
three stages that make up psych

209
00:08:07,360 --> 00:08:08,479
as a cam

210
00:08:08,479 --> 00:08:10,639
it has a key generation stage where we

211
00:08:10,639 --> 00:08:12,240
generate a secret key and public key

212
00:08:12,240 --> 00:08:13,599
pair

213
00:08:13,599 --> 00:08:15,280
the public key is then sent to the

214
00:08:15,280 --> 00:08:17,599
encapsulator which proceeds to do an

215
00:08:17,599 --> 00:08:19,520
encryption of a randomly generated

216
00:08:19,520 --> 00:08:21,039
message m

217
00:08:21,039 --> 00:08:24,000
so it produces a cipher text c

218
00:08:24,000 --> 00:08:27,840
and also a share key the cipher text is

219
00:08:27,840 --> 00:08:30,080
sent back to the decapsulator which

220
00:08:30,080 --> 00:08:32,640
proceeds to do a decryption using the

221
00:08:32,640 --> 00:08:34,000
secret key

222
00:08:34,000 --> 00:08:36,080
and then there is a re-encryption to

223
00:08:36,080 --> 00:08:38,080
make sure that the cipher text was

224
00:08:38,080 --> 00:08:39,279
well-formed

225
00:08:39,279 --> 00:08:41,919
if that's the case then the share key is

226
00:08:41,919 --> 00:08:44,319
output

227
00:08:44,640 --> 00:08:47,279
now the security of this ideation psyc

228
00:08:47,279 --> 00:08:49,360
is based on the so-called computational

229
00:08:49,360 --> 00:08:51,680
super singular soyuni problem it is

230
00:08:51,680 --> 00:08:53,519
defined as photos

231
00:08:53,519 --> 00:08:55,600
let's assume we have two super singular

232
00:08:55,600 --> 00:08:59,920
curves e1 and e2 defined over fpsquare

233
00:08:59,920 --> 00:09:01,760
in our setting these curves are

234
00:09:01,760 --> 00:09:04,959
connected are connected by an isogony

235
00:09:04,959 --> 00:09:07,600
with a large and smooth degree

236
00:09:07,600 --> 00:09:09,760
then the problem is as follows

237
00:09:09,760 --> 00:09:10,800
given

238
00:09:10,800 --> 00:09:12,720
points p and q

239
00:09:12,720 --> 00:09:14,959
that lie on e1

240
00:09:14,959 --> 00:09:17,040
and the images of these points using the

241
00:09:17,040 --> 00:09:19,279
isoini on e2

242
00:09:19,279 --> 00:09:21,120
then the hard problem is to compute the

243
00:09:21,120 --> 00:09:24,480
isoini phi

244
00:09:24,800 --> 00:09:26,800
now let's talk about how the security

245
00:09:26,800 --> 00:09:28,399
strength of a given cryptosystem is

246
00:09:28,399 --> 00:09:29,519
determined

247
00:09:29,519 --> 00:09:31,360
and then focus on the specific case of

248
00:09:31,360 --> 00:09:34,880
parameter selection of for psyc

249
00:09:34,880 --> 00:09:38,080
okay so for a given crypto system one

250
00:09:38,080 --> 00:09:39,839
can use a simplistic but very

251
00:09:39,839 --> 00:09:42,000
conservative approach that is based on

252
00:09:42,000 --> 00:09:43,440
the query complexity of the

253
00:09:43,440 --> 00:09:45,680
cryptanalysis of the scheme

254
00:09:45,680 --> 00:09:48,480
in the case of aes-128a for example a

255
00:09:48,480 --> 00:09:51,600
brute-force attack requires 2 to the 128

256
00:09:51,600 --> 00:09:53,920
aes execution calls

257
00:09:53,920 --> 00:09:55,760
and this determines the security of this

258
00:09:55,760 --> 00:09:58,240
scheme in this case

259
00:09:58,240 --> 00:10:00,240
one can do a slightly more sophisticated

260
00:10:00,240 --> 00:10:02,079
estimation using the random access

261
00:10:02,079 --> 00:10:03,519
memory model

262
00:10:03,519 --> 00:10:05,200
so for example

263
00:10:05,200 --> 00:10:06,880
one can use the complexity of the

264
00:10:06,880 --> 00:10:09,200
iteration of the tag in terms of gates

265
00:10:09,200 --> 00:10:11,519
instructions or cycles

266
00:10:11,519 --> 00:10:14,399
in our example with aes 128 nis

267
00:10:14,399 --> 00:10:16,240
determined that implementation of this

268
00:10:16,240 --> 00:10:19,040
scheme takes approximately 2 to the 15

269
00:10:19,040 --> 00:10:20,160
gates

270
00:10:20,160 --> 00:10:21,600
that means that

271
00:10:21,600 --> 00:10:24,000
that the security of aes 128 is

272
00:10:24,000 --> 00:10:27,279
estimated as 2 to the 128 times 2 to the

273
00:10:27,279 --> 00:10:30,000
15 which gives us a total of 2 to the

274
00:10:30,000 --> 00:10:32,720
143 classical gates and this is

275
00:10:32,720 --> 00:10:34,959
precisely what is used to determine

276
00:10:34,959 --> 00:10:39,120
security level 1 in the nes process

277
00:10:39,120 --> 00:10:40,959
what are the disadvantages of this

278
00:10:40,959 --> 00:10:42,399
approach

279
00:10:42,399 --> 00:10:44,959
well the communication and memory costs

280
00:10:44,959 --> 00:10:46,959
are totally ignored

281
00:10:46,959 --> 00:10:49,120
and that crucially penalizes

282
00:10:49,120 --> 00:10:51,519
cryptosystems for which cryptanalysis

283
00:10:51,519 --> 00:10:54,079
actually requires significant and

284
00:10:54,079 --> 00:10:56,480
significant amounts of memory

285
00:10:56,480 --> 00:11:00,560
and this is precisely the case of psych

286
00:11:00,560 --> 00:11:02,959
all right in the specific case of psych

287
00:11:02,959 --> 00:11:05,440
and its parameter selection first of all

288
00:11:05,440 --> 00:11:08,079
we need to determine the search space

289
00:11:08,079 --> 00:11:09,839
this is essentially given by the number

290
00:11:09,839 --> 00:11:11,680
of half-order elliptical

291
00:11:11,680 --> 00:11:13,680
elliptic curves of groups and this is

292
00:11:13,680 --> 00:11:16,880
approximately p to the one fourth

293
00:11:16,880 --> 00:11:18,640
and this is the parameter that was used

294
00:11:18,640 --> 00:11:21,200
by this by the psych team to determine

295
00:11:21,200 --> 00:11:23,200
round one parameters

296
00:11:23,200 --> 00:11:25,600
in this case the super singular sooner

297
00:11:25,600 --> 00:11:27,519
problem can be modeled as a black box

298
00:11:27,519 --> 00:11:29,760
claw finding problem that can be solved

299
00:11:29,760 --> 00:11:32,000
classically with meat in the middle in

300
00:11:32,000 --> 00:11:35,120
time and space complexity b to the 1 4.

301
00:11:35,120 --> 00:11:37,680
so for example to match the 128 bit

302
00:11:37,680 --> 00:11:41,200
security of aes 128 at level 1 we needed

303
00:11:41,200 --> 00:11:45,120
a prime of approximately 512 bits

304
00:11:45,120 --> 00:11:46,640
later on

305
00:11:46,640 --> 00:11:48,320
and others pointed out that the amount

306
00:11:48,320 --> 00:11:49,920
of memory required by the meat in the

307
00:11:49,920 --> 00:11:52,639
middle attack was unrealistic they

308
00:11:52,639 --> 00:11:54,839
suggested to use the vowel algorithm

309
00:11:54,839 --> 00:11:57,279
instead you can see the corresponding

310
00:11:57,279 --> 00:11:59,680
time complexity in the slide

311
00:11:59,680 --> 00:12:01,760
they also suggested to use this storage

312
00:12:01,760 --> 00:12:03,200
to certain amount

313
00:12:03,200 --> 00:12:06,639
specifically to 2 to the 80 memory units

314
00:12:06,639 --> 00:12:08,880
for example under the light of this new

315
00:12:08,880 --> 00:12:10,880
analysis the bit length of the prime

316
00:12:10,880 --> 00:12:13,279
required for security level 1 could be

317
00:12:13,279 --> 00:12:16,720
reduced to 448 bits

318
00:12:16,720 --> 00:12:18,720
so round 2 parameters were updated

319
00:12:18,720 --> 00:12:20,320
accordingly

320
00:12:20,320 --> 00:12:22,880
for example you can see here that psycp

321
00:12:22,880 --> 00:12:26,959
503 that uses a prime of 503 bits was

322
00:12:26,959 --> 00:12:30,399
replaced by side p434 that uses a prime

323
00:12:30,399 --> 00:12:33,600
of 434 bits and this is uh for nist

324
00:12:33,600 --> 00:12:35,519
level 1.

325
00:12:35,519 --> 00:12:38,160
this reduction in sizes translated into

326
00:12:38,160 --> 00:12:40,560
an important speed up and reduction of

327
00:12:40,560 --> 00:12:44,160
public key and cipher text sizes

328
00:12:44,160 --> 00:12:46,079
in this table we can see a summary of

329
00:12:46,079 --> 00:12:47,839
security estimates

330
00:12:47,839 --> 00:12:50,240
for psyc the number corresponds to round

331
00:12:50,240 --> 00:12:52,720
two and also round three because the

332
00:12:52,720 --> 00:12:55,279
parameters remain unchanged

333
00:12:55,279 --> 00:12:57,519
in the column level nist classical gate

334
00:12:57,519 --> 00:13:00,240
requirements we display the estimates

335
00:13:00,240 --> 00:13:01,839
that determine the different security

336
00:13:01,839 --> 00:13:03,120
levels

337
00:13:03,120 --> 00:13:06,160
using aes for levels one 3 and 5 and

338
00:13:06,160 --> 00:13:08,320
chat 3 for level 2.

339
00:13:08,320 --> 00:13:10,240
the two last columns

340
00:13:10,240 --> 00:13:12,639
on the right correspond to psych

341
00:13:12,639 --> 00:13:14,639
with numbers estimated by

342
00:13:14,639 --> 00:13:16,560
and others in the first case and by

343
00:13:16,560 --> 00:13:19,040
console and others in the second case

344
00:13:19,040 --> 00:13:21,680
in both cases the memory requirement is

345
00:13:21,680 --> 00:13:24,560
fixed to due to the 80 memory units as

346
00:13:24,560 --> 00:13:27,040
explained before

347
00:13:27,040 --> 00:13:29,200
as can be seen the estimates marked in

348
00:13:29,200 --> 00:13:30,880
red are slightly below the gate

349
00:13:30,880 --> 00:13:33,200
requirements from nest and this is a

350
00:13:33,200 --> 00:13:35,760
first issue that we observe here

351
00:13:35,760 --> 00:13:38,079
this is justified as follows in the

352
00:13:38,079 --> 00:13:41,360
cycle specification document and i quote

353
00:13:41,360 --> 00:13:43,519
although their times fall slightly below

354
00:13:43,519 --> 00:13:45,680
nist require gate counts the

355
00:13:45,680 --> 00:13:48,079
corresponding conversion to gate counts

356
00:13:48,079 --> 00:13:50,160
would see these parameters comfortably

357
00:13:50,160 --> 00:13:53,680
exceed nest requirement

358
00:13:53,680 --> 00:13:56,399
end of quote

359
00:13:56,720 --> 00:13:58,880
so in some cases there is a gap between

360
00:13:58,880 --> 00:14:00,720
the needs levels and the estimates of

361
00:14:00,720 --> 00:14:02,720
the official psych parameters

362
00:14:02,720 --> 00:14:05,680
and this remains somewhat unexplained

363
00:14:05,680 --> 00:14:07,199
the second issue

364
00:14:07,199 --> 00:14:09,120
is that there is no fundamental reason

365
00:14:09,120 --> 00:14:11,279
to use the memory requirement due to the

366
00:14:11,279 --> 00:14:12,720
aid

367
00:14:12,720 --> 00:14:14,959
so in this work we solve these two

368
00:14:14,959 --> 00:14:19,119
issues as we will explain later on

369
00:14:19,440 --> 00:14:21,199
let's now proceed to explain our

370
00:14:21,199 --> 00:14:23,519
budget-based cost model that we use to

371
00:14:23,519 --> 00:14:25,279
estimate the cost of cryptanalyzing

372
00:14:25,279 --> 00:14:28,880
psych and to estimate security

373
00:14:28,880 --> 00:14:30,880
so this model consists of some easy to

374
00:14:30,880 --> 00:14:32,399
understand steps

375
00:14:32,399 --> 00:14:34,560
first of all we fix the budget of the

376
00:14:34,560 --> 00:14:35,839
attacker

377
00:14:35,839 --> 00:14:37,600
then we distribute the budget to get

378
00:14:37,600 --> 00:14:39,839
computing and storage resources

379
00:14:39,839 --> 00:14:41,120
such that the time to run the

380
00:14:41,120 --> 00:14:43,199
cryptanalysis is minimized

381
00:14:43,199 --> 00:14:45,120
and finally the security of the scheme

382
00:14:45,120 --> 00:14:47,360
is estimated as the time it takes to

383
00:14:47,360 --> 00:14:49,519
break it

384
00:14:49,519 --> 00:14:51,199
similar approaches have already been

385
00:14:51,199 --> 00:14:52,880
used in the literature

386
00:14:52,880 --> 00:14:55,440
for example van orskten wiener did it in

387
00:14:55,440 --> 00:14:57,279
94 and 99

388
00:14:57,279 --> 00:14:59,519
however there are some drawbacks in most

389
00:14:59,519 --> 00:15:01,120
previous studies

390
00:15:01,120 --> 00:15:03,279
the main one is that the analysis is

391
00:15:03,279 --> 00:15:05,600
typically focused on a specific point in

392
00:15:05,600 --> 00:15:07,519
time

393
00:15:07,519 --> 00:15:09,839
we improve the cost model in two crucial

394
00:15:09,839 --> 00:15:12,079
aspects that we believe increase the

395
00:15:12,079 --> 00:15:13,760
significantly the confidence in the

396
00:15:13,760 --> 00:15:15,199
analysis

397
00:15:15,199 --> 00:15:16,160
first

398
00:15:16,160 --> 00:15:18,480
we analyze historical price information

399
00:15:18,480 --> 00:15:21,279
of semiconductors and memory components

400
00:15:21,279 --> 00:15:23,279
in order to determine the soundness of

401
00:15:23,279 --> 00:15:25,839
using this information to evaluate the

402
00:15:25,839 --> 00:15:28,240
cost of cryptanalysis

403
00:15:28,240 --> 00:15:30,560
and second we apply simple but

404
00:15:30,560 --> 00:15:33,040
conservative projections to estimate the

405
00:15:33,040 --> 00:15:34,959
costs in the future

406
00:15:34,959 --> 00:15:36,800
which is ultimately the information that

407
00:15:36,800 --> 00:15:41,000
is relevant for a cryptosystem

408
00:15:41,199 --> 00:15:43,279
the piece of of information that we need

409
00:15:43,279 --> 00:15:45,120
for the analysis is the cost of

410
00:15:45,120 --> 00:15:49,040
components including gates and memories

411
00:15:49,040 --> 00:15:51,040
what we did was to compile public

412
00:15:51,040 --> 00:15:53,519
release prices of microprocessor units

413
00:15:53,519 --> 00:15:54,959
or mpus

414
00:15:54,959 --> 00:15:57,360
from intel and amd for the years between

415
00:15:57,360 --> 00:15:59,839
2000 and 2020.

416
00:15:59,839 --> 00:16:02,560
we use public transit transistor counts

417
00:16:02,560 --> 00:16:04,480
and also we use the standard assumption

418
00:16:04,480 --> 00:16:09,279
that a gate consists of four transistors

419
00:16:09,279 --> 00:16:11,759
in addition we applied some scaling to

420
00:16:11,759 --> 00:16:14,320
these release prices to approximate them

421
00:16:14,320 --> 00:16:16,800
to actual production costs

422
00:16:16,800 --> 00:16:18,399
given that release prices include

423
00:16:18,399 --> 00:16:20,399
additional costs

424
00:16:20,399 --> 00:16:23,279
including some margin for profit

425
00:16:23,279 --> 00:16:25,279
to do this approximate approximation we

426
00:16:25,279 --> 00:16:29,040
follow the procedure by canon man

427
00:16:29,120 --> 00:16:31,680
we did a similar estimate for memory

428
00:16:31,680 --> 00:16:34,079
components such as hard disk drives the

429
00:16:34,079 --> 00:16:36,880
rams and ssd members

430
00:16:36,880 --> 00:16:39,600
and finally we also validated our

431
00:16:39,600 --> 00:16:42,079
results with the forecasts provided by

432
00:16:42,079 --> 00:16:44,560
the international technology roadmap for

433
00:16:44,560 --> 00:16:47,440
semiconductors or itrs

434
00:16:47,440 --> 00:16:49,440
which was an international consortium

435
00:16:49,440 --> 00:16:51,120
that coordinated the progress and

436
00:16:51,120 --> 00:16:53,600
development of septic conductors in the

437
00:16:53,600 --> 00:16:56,320
2000s

438
00:16:57,120 --> 00:16:59,759
here you can see a graph with the cost

439
00:16:59,759 --> 00:17:02,320
estimates for the different components

440
00:17:02,320 --> 00:17:04,400
we display the number of gates that can

441
00:17:04,400 --> 00:17:06,160
be bought per dollar

442
00:17:06,160 --> 00:17:09,280
that is displayed as a blue line and the

443
00:17:09,280 --> 00:17:10,959
number of bytes that can be bought per

444
00:17:10,959 --> 00:17:12,400
dollar

445
00:17:12,400 --> 00:17:15,439
display uh as the red lines uh in this

446
00:17:15,439 --> 00:17:17,520
case considering different types of

447
00:17:17,520 --> 00:17:19,199
memories

448
00:17:19,199 --> 00:17:21,919
as can be seen the cost of the different

449
00:17:21,919 --> 00:17:24,480
components have increased in a very

450
00:17:24,480 --> 00:17:26,000
uniform way

451
00:17:26,000 --> 00:17:28,240
this is visible by looking at the solid

452
00:17:28,240 --> 00:17:30,720
green line at the bottom that represents

453
00:17:30,720 --> 00:17:33,520
the ratios the ratio

454
00:17:33,520 --> 00:17:35,760
between the cost of gates and the costs

455
00:17:35,760 --> 00:17:37,440
of memory

456
00:17:37,440 --> 00:17:40,080
this result provides evidence of the

457
00:17:40,080 --> 00:17:42,240
relatively stable relationship between

458
00:17:42,240 --> 00:17:43,360
the two

459
00:17:43,360 --> 00:17:44,960
between the two costs

460
00:17:44,960 --> 00:17:46,640
which is one of the key aspects that

461
00:17:46,640 --> 00:17:49,200
give us confident confidence in using

462
00:17:49,200 --> 00:17:51,919
the cost information to determine the

463
00:17:51,919 --> 00:17:54,000
cost of crypto analysis and therefore

464
00:17:54,000 --> 00:17:57,880
the security fire scheme

465
00:18:00,160 --> 00:18:01,360
all right

466
00:18:01,360 --> 00:18:04,160
so we obtain robust cost information for

467
00:18:04,160 --> 00:18:06,640
the analysis that we were carrying out

468
00:18:06,640 --> 00:18:09,520
what we needed next was to collect area

469
00:18:09,520 --> 00:18:11,039
and time data for the different

470
00:18:11,039 --> 00:18:12,840
cryptosystems and their

471
00:18:12,840 --> 00:18:15,760
analysis so let's start with psych

472
00:18:15,760 --> 00:18:16,960
for psych

473
00:18:16,960 --> 00:18:19,120
what we did was to design an efficient

474
00:18:19,120 --> 00:18:21,520
large degree isogenic accelerator which

475
00:18:21,520 --> 00:18:24,240
is the main component in cryptanalyze

476
00:18:24,240 --> 00:18:26,480
cryptanalyze in the scheme

477
00:18:26,480 --> 00:18:28,799
the goal in this case was to achieve an

478
00:18:28,799 --> 00:18:31,760
optimal area time product on an asic

479
00:18:31,760 --> 00:18:33,200
so we implemented all the main

480
00:18:33,200 --> 00:18:35,840
computations including point addition

481
00:18:35,840 --> 00:18:38,400
point doubling i saw in evaluation and i

482
00:18:38,400 --> 00:18:40,160
saw any computation

483
00:18:40,160 --> 00:18:42,240
for the case of the degree 4

484
00:18:42,240 --> 00:18:43,600
operations

485
00:18:43,600 --> 00:18:45,520
which is which are actually the most

486
00:18:45,520 --> 00:18:48,320
efficient ones for psych

487
00:18:48,320 --> 00:18:50,640
here in the screen we show a diagram of

488
00:18:50,640 --> 00:18:53,200
our architecture

489
00:18:53,200 --> 00:18:54,840
under the hood of these

490
00:18:54,840 --> 00:18:57,840
operations we also need an efficient

491
00:18:57,840 --> 00:18:59,840
field arithmetic architecture

492
00:18:59,840 --> 00:19:02,640
and that's what we did we also proposed

493
00:19:02,640 --> 00:19:05,520
a novel unified multiplied multiplier

494
00:19:05,520 --> 00:19:07,600
over fps squared that enables a

495
00:19:07,600 --> 00:19:09,679
theoretically optimal parallelization of

496
00:19:09,679 --> 00:19:12,799
the internal operations

497
00:19:13,200 --> 00:19:15,120
all right so we implemented this

498
00:19:15,120 --> 00:19:17,600
efficient hardware accelerator and then

499
00:19:17,600 --> 00:19:19,520
we proceeded to obtain all the data that

500
00:19:19,520 --> 00:19:22,880
was required to plug into our cost model

501
00:19:22,880 --> 00:19:24,720
so first of all we collected cycle

502
00:19:24,720 --> 00:19:27,679
counts for the different operations

503
00:19:27,679 --> 00:19:29,440
you can see the table with the best

504
00:19:29,440 --> 00:19:31,120
results that we obtained for each

505
00:19:31,120 --> 00:19:32,720
parameter set

506
00:19:32,720 --> 00:19:34,559
at the top you can see the case of the

507
00:19:34,559 --> 00:19:36,559
round two and three parameters

508
00:19:36,559 --> 00:19:38,160
but at the bottom there are new

509
00:19:38,160 --> 00:19:39,919
alternative parameters that i'm going to

510
00:19:39,919 --> 00:19:42,880
discuss later on

511
00:19:42,880 --> 00:19:44,960
note that we applied a very conservative

512
00:19:44,960 --> 00:19:46,080
approach

513
00:19:46,080 --> 00:19:49,440
we ignored all the control computation

514
00:19:49,440 --> 00:19:51,840
and data communication overheads this

515
00:19:51,840 --> 00:19:56,399
gives us a safety margin in our analysis

516
00:19:56,480 --> 00:19:58,400
we proceeded to obtain area and time

517
00:19:58,400 --> 00:20:00,960
results using synthesis told tools for

518
00:20:00,960 --> 00:20:02,320
asics

519
00:20:02,320 --> 00:20:04,159
the results were obtained with an open

520
00:20:04,159 --> 00:20:07,760
source nand gate 45 nanometer library

521
00:20:07,760 --> 00:20:09,520
the results corresponding to the large

522
00:20:09,520 --> 00:20:12,080
degrees in the accelerator are displayed

523
00:20:12,080 --> 00:20:14,799
in the table on the right

524
00:20:14,799 --> 00:20:17,440
as before we applied a conservative

525
00:20:17,440 --> 00:20:19,679
approach basically all the control

526
00:20:19,679 --> 00:20:22,159
circuitry that is required to implement

527
00:20:22,159 --> 00:20:24,960
the rest of the vowel algorithm is also

528
00:20:24,960 --> 00:20:26,400
ignored

529
00:20:26,400 --> 00:20:29,919
like for example the hash function

530
00:20:31,360 --> 00:20:32,960
we then proceeded to do the same

531
00:20:32,960 --> 00:20:36,159
analysis for aes in the case of aes we

532
00:20:36,159 --> 00:20:37,919
did the analysis with a parallel attack

533
00:20:37,919 --> 00:20:40,080
based on rainbow chains

534
00:20:40,080 --> 00:20:41,919
the complexity of the attack is shown in

535
00:20:41,919 --> 00:20:43,679
the screen

536
00:20:43,679 --> 00:20:45,679
in this case it corresponds to using m

537
00:20:45,679 --> 00:20:47,600
parallel engines

538
00:20:47,600 --> 00:20:50,140
targeting a key k of bit length b

539
00:20:50,140 --> 00:20:51,760
[Music]

540
00:20:51,760 --> 00:20:54,000
to obtain the area time information we

541
00:20:54,000 --> 00:20:56,480
use to our knowledge the most efficient

542
00:20:56,480 --> 00:20:58,880
aes implementation available in the

543
00:20:58,880 --> 00:21:00,960
literature for asics

544
00:21:00,960 --> 00:21:04,080
and in this case efficiency is

545
00:21:04,080 --> 00:21:05,520
defined as

546
00:21:05,520 --> 00:21:08,960
as the best area time product

547
00:21:09,760 --> 00:21:11,440
we follow a similar approach for

548
00:21:11,440 --> 00:21:13,760
shattering in this case using the vowel

549
00:21:13,760 --> 00:21:17,840
algorithm for collision find

550
00:21:18,960 --> 00:21:20,559
okay

551
00:21:20,559 --> 00:21:23,200
so at this point we have area on time

552
00:21:23,200 --> 00:21:25,440
information

553
00:21:25,440 --> 00:21:28,480
and for psych aes and chatring

554
00:21:28,480 --> 00:21:30,960
and what we needed to do was to plug in

555
00:21:30,960 --> 00:21:33,760
all this data into our model

556
00:21:33,760 --> 00:21:35,760
for this purpose we wrote a python

557
00:21:35,760 --> 00:21:37,520
script that made all the calculations

558
00:21:37,520 --> 00:21:39,280
for different years using different

559
00:21:39,280 --> 00:21:42,840
budgets from 1 million up to 1 trillion

560
00:21:42,840 --> 00:21:44,720
dollars

561
00:21:44,720 --> 00:21:46,640
and as i mentioned before we also

562
00:21:46,640 --> 00:21:48,640
included simple cost projections up to

563
00:21:48,640 --> 00:21:51,600
the year 2040.

564
00:21:51,600 --> 00:21:53,600
let me illustrate our results with the

565
00:21:53,600 --> 00:21:57,039
case of the 100 billion dollars

566
00:21:57,039 --> 00:21:59,120
uh in this case uh

567
00:21:59,120 --> 00:22:01,360
well i have to mention that other badges

568
00:22:01,360 --> 00:22:03,840
also achieve similar results

569
00:22:03,840 --> 00:22:05,919
the results for the years uh between

570
00:22:05,919 --> 00:22:09,120
2000 and 2020 were obtained with

571
00:22:09,120 --> 00:22:11,520
historical price information while the

572
00:22:11,520 --> 00:22:13,960
results for the years between

573
00:22:13,960 --> 00:22:16,960
2025 and 2040

574
00:22:16,960 --> 00:22:20,000
uh use our projections

575
00:22:20,000 --> 00:22:23,280
on the y-axis you can see the logarithm

576
00:22:23,280 --> 00:22:25,360
of the number of years of the number of

577
00:22:25,360 --> 00:22:27,039
years that it takes to break a certain

578
00:22:27,039 --> 00:22:28,720
cryptosystem

579
00:22:28,720 --> 00:22:31,919
the estimates for aes are in red

580
00:22:31,919 --> 00:22:35,360
corresponding to level 1 with aes 128

581
00:22:35,360 --> 00:22:38,799
level 3 with aes 192 and level 5 with

582
00:22:38,799 --> 00:22:41,440
as2

583
00:22:41,440 --> 00:22:43,360
the estimates for psych are in bloom

584
00:22:43,360 --> 00:22:48,880
corresponding to psych p434 p16 and p751

585
00:22:48,880 --> 00:22:51,039
respectively for the same security

586
00:22:51,039 --> 00:22:52,720
levels

587
00:22:52,720 --> 00:22:55,600
and as can be seen there is a very wide

588
00:22:55,600 --> 00:22:57,600
gap between the security estimates for

589
00:22:57,600 --> 00:22:59,200
aes and psyc

590
00:22:59,200 --> 00:23:01,280
which confirmed that the current round

591
00:23:01,280 --> 00:23:03,840
three psych parameters do fulfill the

592
00:23:03,840 --> 00:23:06,320
nice targets and in fact offer much

593
00:23:06,320 --> 00:23:10,080
higher security than expected

594
00:23:10,640 --> 00:23:12,559
so what we did was to try to choose

595
00:23:12,559 --> 00:23:14,799
parameters that follow more closely than

596
00:23:14,799 --> 00:23:16,159
these targets

597
00:23:16,159 --> 00:23:18,159
and these are the ones that i'm showing

598
00:23:18,159 --> 00:23:20,640
the screen now are labeled with the word

599
00:23:20,640 --> 00:23:21,760
neo

600
00:23:21,760 --> 00:23:24,120
psycp 377

601
00:23:24,120 --> 00:23:28,240
p546 on site p697

602
00:23:28,240 --> 00:23:29,840
for levels one three and five

603
00:23:29,840 --> 00:23:32,000
respectively

604
00:23:32,000 --> 00:23:33,840
let's remember that this still includes

605
00:23:33,840 --> 00:23:36,400
some conservative safety margins

606
00:23:36,400 --> 00:23:38,559
which we think makes our parameters safe

607
00:23:38,559 --> 00:23:42,639
to be used to target the needs levels

608
00:23:44,240 --> 00:23:46,720
so to finish this presentation i will

609
00:23:46,720 --> 00:23:47,919
share some

610
00:23:47,919 --> 00:23:49,840
software implementation results that we

611
00:23:49,840 --> 00:23:52,400
got that showcase the potential benefit

612
00:23:52,400 --> 00:23:55,200
of using the proposed parameters

613
00:23:55,200 --> 00:23:57,360
the results in this table in the screen

614
00:23:57,360 --> 00:24:00,080
correspond to an x64 machine

615
00:24:00,080 --> 00:24:01,279
with an x

616
00:24:01,279 --> 00:24:05,200
with an s skylake cpu the site round

617
00:24:05,200 --> 00:24:06,880
three parameters are displayed on the

618
00:24:06,880 --> 00:24:09,360
left and the alternative parameters on

619
00:24:09,360 --> 00:24:10,720
the right

620
00:24:10,720 --> 00:24:12,559
in each case there is a very nice

621
00:24:12,559 --> 00:24:14,720
reduction in bandwidth

622
00:24:14,720 --> 00:24:17,120
that is in the public key sizes

623
00:24:17,120 --> 00:24:20,559
which is displayed in terms of bytes

624
00:24:20,559 --> 00:24:21,919
given that one of the most attractive

625
00:24:21,919 --> 00:24:24,000
features of psyc is that it provides the

626
00:24:24,000 --> 00:24:26,400
smallest key sizes of any of the post

627
00:24:26,400 --> 00:24:27,840
quantum candidates in the next

628
00:24:27,840 --> 00:24:30,480
competition this reduction makes

629
00:24:30,480 --> 00:24:32,880
psych even more attractive

630
00:24:32,880 --> 00:24:34,320
also in the table we display the

631
00:24:34,320 --> 00:24:36,559
computing time in terms of millions of

632
00:24:36,559 --> 00:24:37,600
cycles

633
00:24:37,600 --> 00:24:39,360
you can see the significance speed up

634
00:24:39,360 --> 00:24:43,440
when moving from the round to three

635
00:24:43,440 --> 00:24:45,200
parameters to the new

636
00:24:45,200 --> 00:24:46,799
alternative parameters

637
00:24:46,799 --> 00:24:50,480
so for example site p377 intended for

638
00:24:50,480 --> 00:24:53,039
level one can be executed in close to

639
00:24:53,039 --> 00:24:56,080
four milliseconds this is in a 3.4

640
00:24:56,080 --> 00:24:58,080
gigahertz machine

641
00:24:58,080 --> 00:25:02,480
and which is about 1.4 times faster than

642
00:25:02,480 --> 00:25:04,799
site p434

643
00:25:04,799 --> 00:25:07,039
which is the current round three uh

644
00:25:07,039 --> 00:25:09,279
parameter for level one

645
00:25:09,279 --> 00:25:12,159
so again this provides a very important

646
00:25:12,159 --> 00:25:14,960
speed up in the computation which

647
00:25:14,960 --> 00:25:16,880
arguably pushes psych in the right

648
00:25:16,880 --> 00:25:19,440
direction to make it more amenable for

649
00:25:19,440 --> 00:25:22,400
many more applications

650
00:25:23,120 --> 00:25:25,360
to finish let me point out a couple of

651
00:25:25,360 --> 00:25:27,520
links with additional information we

652
00:25:27,520 --> 00:25:30,000
have our full paper version on eprint

653
00:25:30,000 --> 00:25:32,240
containing many more results

654
00:25:32,240 --> 00:25:34,240
and analysis

655
00:25:34,240 --> 00:25:36,480
also you can visit our github repository

656
00:25:36,480 --> 00:25:37,840
that contains our hardware

657
00:25:37,840 --> 00:25:40,159
implementations including a software

658
00:25:40,159 --> 00:25:42,799
hardware co-design prototype of the

659
00:25:42,799 --> 00:25:45,760
full ball valve algorithm

660
00:25:45,760 --> 00:25:48,480
and and this github repository also

661
00:25:48,480 --> 00:25:50,640
contains our software implementations

662
00:25:50,640 --> 00:25:53,520
implementations of the new parameters

663
00:25:53,520 --> 00:25:56,639
thank you

