1
00:00:00,000 --> 00:00:00,160
[Music]

2
00:00:00,160 --> 00:00:00,990
in that case

3
00:00:00,990 --> 00:00:03,019
[Music]

4
00:00:03,040 --> 00:00:04,720
you're ready to go

5
00:00:04,720 --> 00:00:06,960
okay thanks kate um

6
00:00:06,960 --> 00:00:09,679
so uh welcome back everyone to the

7
00:00:09,679 --> 00:00:11,360
second part of the quantum crypto

8
00:00:11,360 --> 00:00:12,480
session

9
00:00:12,480 --> 00:00:13,519
um

10
00:00:13,519 --> 00:00:15,599
and we're going to continue in the same

11
00:00:15,599 --> 00:00:17,920
format we're going to have the five

12
00:00:17,920 --> 00:00:19,279
minutes talk

13
00:00:19,279 --> 00:00:21,680
uh back to back and then at the end

14
00:00:21,680 --> 00:00:24,000
we'll use the remaining time

15
00:00:24,000 --> 00:00:25,680
for questions

16
00:00:25,680 --> 00:00:28,240
um okay so our first talk

17
00:00:28,240 --> 00:00:29,920
is going to be about round efficient

18
00:00:29,920 --> 00:00:32,558
secure multi-party quantum computation

19
00:00:32,558 --> 00:00:37,040
with identifiable abort by ba alone

20
00:00:41,760 --> 00:00:46,480
um and he will be given the talk right

21
00:00:46,480 --> 00:00:48,320
here are you right yes

22
00:00:48,320 --> 00:00:49,840
okay great so go ahead and share your

23
00:00:49,840 --> 00:00:51,199
screen

24
00:00:51,199 --> 00:00:54,559
uh give me just one moment

25
00:00:54,559 --> 00:00:57,440
all right uh can anyone see my screen

26
00:00:57,440 --> 00:00:59,039
yes perfect

27
00:00:59,039 --> 00:01:01,039
okay cool so

28
00:01:01,039 --> 00:01:02,559
let's start shall we

29
00:01:02,559 --> 00:01:05,519
all right so my name is e and today

30
00:01:05,519 --> 00:01:07,840
we'll be talking about a long efficient

31
00:01:07,840 --> 00:01:09,119
secure multi-party planning

32
00:01:09,119 --> 00:01:11,680
communication with identifiable board

33
00:01:11,680 --> 00:01:14,240
and uh

34
00:01:14,240 --> 00:01:16,560
so this is a joint work with my advisor

35
00:01:16,560 --> 00:01:18,880
kaimin and with uh my friends and

36
00:01:18,880 --> 00:01:22,000
colleagues bar hao ming and wishing

37
00:01:22,000 --> 00:01:24,240
so let's start with

38
00:01:24,240 --> 00:01:26,479
multi-party con multi-party quantum

39
00:01:26,479 --> 00:01:28,400
computations

40
00:01:28,400 --> 00:01:31,520
so here we have n parties and the goal

41
00:01:31,520 --> 00:01:33,520
is for them to join the computer content

42
00:01:33,520 --> 00:01:36,240
circuit which takes an input so it takes

43
00:01:36,240 --> 00:01:38,720
one input from every one and it also has

44
00:01:38,720 --> 00:01:41,119
n outputs so it has one output for

45
00:01:41,119 --> 00:01:44,479
everybody so at the beginning of broken

46
00:01:44,479 --> 00:01:47,040
everyone holds their own private input

47
00:01:47,040 --> 00:01:50,000
and then the party run some protocols so

48
00:01:50,000 --> 00:01:51,600
they exchange some messages that can

49
00:01:51,600 --> 00:01:54,079
either be quantum or classical and then

50
00:01:54,079 --> 00:01:56,079
at the end of the interaction at the end

51
00:01:56,079 --> 00:01:58,240
of computation everybody receives their

52
00:01:58,240 --> 00:01:59,920
own output

53
00:01:59,920 --> 00:02:02,640
so a common security notion we have is

54
00:02:02,640 --> 00:02:04,799
called security with support

55
00:02:04,799 --> 00:02:07,439
so roughly speaking

56
00:02:07,439 --> 00:02:09,840
just intuitively speaking it means that

57
00:02:09,840 --> 00:02:12,000
everyone learns only their own output

58
00:02:12,000 --> 00:02:14,160
unless the pro call of course in which

59
00:02:14,160 --> 00:02:15,920
case the honors party don't learn

60
00:02:15,920 --> 00:02:17,520
anything

61
00:02:17,520 --> 00:02:20,080
and uh this security notion was achieved

62
00:02:20,080 --> 00:02:20,879
by

63
00:02:20,879 --> 00:02:23,680
dupont nielsen and savville in this in

64
00:02:23,680 --> 00:02:26,560
their work in 2012 as well as in this uh

65
00:02:26,560 --> 00:02:29,520
more recent work by dullet rilo

66
00:02:29,520 --> 00:02:32,239
jeffrey my handsome sharpner

67
00:02:32,239 --> 00:02:35,120
but well this security notion it is good

68
00:02:35,120 --> 00:02:37,280
but it has a it has one obvious weakness

69
00:02:37,280 --> 00:02:39,680
is that the protocol may afford

70
00:02:39,680 --> 00:02:42,640
particularly it allows the adversary to

71
00:02:42,640 --> 00:02:44,720
afford the protocol whenever it feels

72
00:02:44,720 --> 00:02:47,440
like and when that when it happens we

73
00:02:47,440 --> 00:02:50,480
call it denial of service attack

74
00:02:50,480 --> 00:02:53,280
so uh it's a known fact that uh this

75
00:02:53,280 --> 00:02:55,519
kind of attack cannot be prevented when

76
00:02:55,519 --> 00:02:57,760
we have a dishonest majority

77
00:02:57,760 --> 00:02:59,040
and uh

78
00:02:59,040 --> 00:03:01,280
when it does happen like i mentioned uh

79
00:03:01,280 --> 00:03:04,480
the honors parties will get no output

80
00:03:04,480 --> 00:03:06,000
but because we are under a quantum

81
00:03:06,000 --> 00:03:08,000
setting it's there's a

82
00:03:08,000 --> 00:03:11,280
extra extra issue with this attack which

83
00:03:11,280 --> 00:03:13,120
is that the content inputs will be

84
00:03:13,120 --> 00:03:15,599
consumed and lost uh because due to the

85
00:03:15,599 --> 00:03:17,200
no cloning theorem

86
00:03:17,200 --> 00:03:18,800
when this attack happens

87
00:03:18,800 --> 00:03:20,800
so uh even though we know that this

88
00:03:20,800 --> 00:03:23,280
attack not like like i mentioned it

89
00:03:23,280 --> 00:03:25,040
cannot be prevented

90
00:03:25,040 --> 00:03:26,799
we still want to ask is there anything

91
00:03:26,799 --> 00:03:29,599
we can do about this situation so it

92
00:03:29,599 --> 00:03:32,319
turns out the answer is yes and uh this

93
00:03:32,319 --> 00:03:34,159
is uh because there's this other

94
00:03:34,159 --> 00:03:36,560
security notion called security

95
00:03:36,560 --> 00:03:38,720
identifiable board

96
00:03:38,720 --> 00:03:41,519
roughly speaking this is uh

97
00:03:41,519 --> 00:03:43,599
this security notion means that from the

98
00:03:43,599 --> 00:03:46,400
vocal force then at least why everybody

99
00:03:46,400 --> 00:03:49,840
knows who to blame for the protocol 14.

100
00:03:49,840 --> 00:03:52,239
so this security notion was formulated

101
00:03:52,239 --> 00:03:55,439
uh was introduced by ishai ostrovsky and

102
00:03:55,439 --> 00:03:58,239
zika back in 2014

103
00:03:58,239 --> 00:04:01,040
and it's a in the classical setting it

104
00:04:01,040 --> 00:04:04,080
was satisfied by the gmw protocol and

105
00:04:04,080 --> 00:04:06,239
the reason why it's satisfied is because

106
00:04:06,239 --> 00:04:08,959
they use a broadcast and dk proofs so

107
00:04:08,959 --> 00:04:11,360
the honors party can always prove to

108
00:04:11,360 --> 00:04:13,040
everyone that they did what they're

109
00:04:13,040 --> 00:04:15,680
supposed to do but uh unfortunately

110
00:04:15,680 --> 00:04:17,440
under content setting we do not have

111
00:04:17,440 --> 00:04:19,759
broadcast because you cannot clone a

112
00:04:19,759 --> 00:04:21,839
quantum state so

113
00:04:21,839 --> 00:04:23,919
you cannot broadcast common state

114
00:04:23,919 --> 00:04:25,680
and because of that it is actually

115
00:04:25,680 --> 00:04:29,840
unclear how to achieve identity

116
00:04:40,960 --> 00:04:42,160
parties are

117
00:04:42,160 --> 00:04:44,320
running one of these protocols and they

118
00:04:44,320 --> 00:04:46,880
say p2 is supposed to send a quantum

119
00:04:46,880 --> 00:04:48,720
message to p1 in

120
00:04:48,720 --> 00:04:51,759
one of the steps but then let's say p1

121
00:04:51,759 --> 00:04:53,600
here just uh

122
00:04:53,600 --> 00:04:55,600
just says that oh i received nothing or

123
00:04:55,600 --> 00:04:58,080
maybe p1 here says that i received

124
00:04:58,080 --> 00:05:00,400
garbage or something like that so he

125
00:05:00,400 --> 00:05:02,960
just says he just accused of p2 he just

126
00:05:02,960 --> 00:05:05,199
accuses p2 of being malicious

127
00:05:05,199 --> 00:05:07,520
and in that case because something is

128
00:05:07,520 --> 00:05:10,639
wrong this protocol would normally abort

129
00:05:10,639 --> 00:05:13,039
but then uh so here because we are four

130
00:05:13,039 --> 00:05:15,600
we need to catch a cheater but then from

131
00:05:15,600 --> 00:05:18,080
the perspective of p3 he would actually

132
00:05:18,080 --> 00:05:19,199
not know

133
00:05:19,199 --> 00:05:21,680
which of these two is uh malicious

134
00:05:21,680 --> 00:05:24,240
because the uh there are two potential

135
00:05:24,240 --> 00:05:26,639
situations the first situation is that

136
00:05:26,639 --> 00:05:29,360
p2 will in fact malicious and he

137
00:05:29,360 --> 00:05:31,199
actually withholds a message

138
00:05:31,199 --> 00:05:32,479
or the other

139
00:05:32,479 --> 00:05:34,560
possible situation is that a malicious

140
00:05:34,560 --> 00:05:36,720
person could be p1 who just falsely

141
00:05:36,720 --> 00:05:39,440
accused of people of nothing message

142
00:05:39,440 --> 00:05:41,520
and these two situations

143
00:05:41,520 --> 00:05:43,680
are indistinguishable from the point of

144
00:05:43,680 --> 00:05:46,000
view of p3 so

145
00:05:46,000 --> 00:05:47,360
here we actually do not have

146
00:05:47,360 --> 00:05:49,440
identifiable

147
00:05:49,440 --> 00:05:51,280
so it seems like that even when we are

148
00:05:51,280 --> 00:05:52,960
just sending a content message we

149
00:05:52,960 --> 00:05:56,000
already run into issues so apparently it

150
00:05:56,000 --> 00:05:58,080
almost seems like there might be some

151
00:05:58,080 --> 00:06:00,000
fundamental barriers with achieving

152
00:06:00,000 --> 00:06:02,960
identifiable board under condom setting

153
00:06:02,960 --> 00:06:04,000
but uh

154
00:06:04,000 --> 00:06:06,880
fortunately i guess uh we were able to

155
00:06:06,880 --> 00:06:09,199
overcome we're able to overcome this

156
00:06:09,199 --> 00:06:12,000
barrier so here's the uh

157
00:06:12,000 --> 00:06:14,560
and as well as other challenges that uh

158
00:06:14,560 --> 00:06:16,000
i will

159
00:06:16,000 --> 00:06:17,039
i

160
00:06:17,039 --> 00:06:18,639
am able to mention the full version of

161
00:06:18,639 --> 00:06:20,800
this talk but unfortunately not in this

162
00:06:20,800 --> 00:06:24,800
five minute version but anyways so uh

163
00:06:24,800 --> 00:06:26,479
our main contribution is that we

164
00:06:26,479 --> 00:06:29,039
construct a protocol for computing any

165
00:06:29,039 --> 00:06:30,720
multi-party content circuit with

166
00:06:30,720 --> 00:06:32,880
identifiable boards

167
00:06:32,880 --> 00:06:35,759
and the primitives we use are first we

168
00:06:35,759 --> 00:06:37,360
use a classical multi-party

169
00:06:37,360 --> 00:06:40,400
communication with identifiable board

170
00:06:40,400 --> 00:06:43,440
and two we use a verifiable quantum four

171
00:06:43,440 --> 00:06:46,319
homomorphic encryption scheme which was

172
00:06:46,319 --> 00:06:48,880
proposed and constructed by electric at

173
00:06:48,880 --> 00:06:50,080
all

174
00:06:50,080 --> 00:06:51,280
and uh

175
00:06:51,280 --> 00:06:54,240
our contribution is wrong efficient and

176
00:06:54,240 --> 00:06:55,919
what we mean by that is that the number

177
00:06:55,919 --> 00:06:58,479
of runs with quantum messages does not

178
00:06:58,479 --> 00:07:00,960
depend on the circuit

179
00:07:00,960 --> 00:07:02,960
but uh it does not depend on this

180
00:07:02,960 --> 00:07:04,400
circuit we are trying to compute what i

181
00:07:04,400 --> 00:07:06,720
mean but unfortunately that does not

182
00:07:06,720 --> 00:07:08,880
mean we have constant wrong because the

183
00:07:08,880 --> 00:07:10,880
uh run complexity still depends on a

184
00:07:10,880 --> 00:07:13,120
number of other factors

185
00:07:13,120 --> 00:07:14,000
uh

186
00:07:14,000 --> 00:07:17,120
unlike the uh the concurrent work who uh

187
00:07:17,120 --> 00:07:19,440
was presenting right before us by

188
00:07:19,440 --> 00:07:22,639
barcelona club angelo corona and mark

189
00:07:22,639 --> 00:07:24,400
they have a constant wrong protocol but

190
00:07:24,400 --> 00:07:27,039
they do not have identifiable force

191
00:07:27,039 --> 00:07:28,960
and the last thing worth mentioning

192
00:07:28,960 --> 00:07:31,199
about our construction is that it is

193
00:07:31,199 --> 00:07:33,759
fair if the underlying costco npc is

194
00:07:33,759 --> 00:07:34,800
fair

195
00:07:34,800 --> 00:07:35,599
uh

196
00:07:35,599 --> 00:07:37,680
what we mean by fairness is that either

197
00:07:37,680 --> 00:07:39,440
everyone gets their output or nobody

198
00:07:39,440 --> 00:07:40,960
does

199
00:07:40,960 --> 00:07:43,840
so that is our main contribution and

200
00:07:43,840 --> 00:07:45,759
unfortunately due to the time

201
00:07:45,759 --> 00:07:48,080
constraints uh we will not be able to go

202
00:07:48,080 --> 00:07:50,000
through the idea or the construction

203
00:07:50,000 --> 00:07:53,440
behind this uh protocol but but we uh

204
00:07:53,440 --> 00:07:56,080
really encourage you to either listen to

205
00:07:56,080 --> 00:07:57,840
the full version of the talk or read our

206
00:07:57,840 --> 00:08:01,120
paper to learn more about this work

207
00:08:01,120 --> 00:08:02,720
and uh

208
00:08:02,720 --> 00:08:04,560
in terms of future directions and open

209
00:08:04,560 --> 00:08:06,240
problems uh

210
00:08:06,240 --> 00:08:08,080
one of the things that might be

211
00:08:08,080 --> 00:08:10,800
interesting to see is that it might be

212
00:08:10,800 --> 00:08:12,319
it might be good to require more

213
00:08:12,319 --> 00:08:14,720
dishonest parties to close in the board

214
00:08:14,720 --> 00:08:16,879
so what we what we mean here is that uh

215
00:08:16,879 --> 00:08:19,280
in our protocol just a single designer's

216
00:08:19,280 --> 00:08:22,240
party is enough to cause an abort in our

217
00:08:22,240 --> 00:08:24,879
protocol in our construction

218
00:08:24,879 --> 00:08:27,039
and it might be interesting to see a

219
00:08:27,039 --> 00:08:29,120
improved i guess a better construction

220
00:08:29,120 --> 00:08:31,440
that can tolerate more honest party

221
00:08:31,440 --> 00:08:32,799
before

222
00:08:32,799 --> 00:08:35,039
he might have to abort and the other

223
00:08:35,039 --> 00:08:37,200
future direction is a

224
00:08:37,200 --> 00:08:39,679
prosperities for concentrate multi-party

225
00:08:39,679 --> 00:08:41,519
kind of communication with identifiable

226
00:08:41,519 --> 00:08:43,760
boards so here what i mean is that

227
00:08:43,760 --> 00:08:45,760
whether it's possible to get concern

228
00:08:45,760 --> 00:08:48,080
wrong and identifiable for at the same

229
00:08:48,080 --> 00:08:50,480
time because well we achieve this and

230
00:08:50,480 --> 00:08:53,040
this other work achieve this one but

231
00:08:53,040 --> 00:08:56,000
right now we're suspecting it might be

232
00:08:56,000 --> 00:08:58,480
difficult or maybe even impossible to

233
00:08:58,480 --> 00:09:00,240
get both at the same time for reasons

234
00:09:00,240 --> 00:09:02,560
that i described a bit better in the

235
00:09:02,560 --> 00:09:05,519
full version of this talk but uh we

236
00:09:05,519 --> 00:09:06,959
really don't know so you'd be

237
00:09:06,959 --> 00:09:08,800
interesting to either see a construction

238
00:09:08,800 --> 00:09:11,600
or steal for more impossibility restart

239
00:09:11,600 --> 00:09:13,760
and that is all i have for now thank you

240
00:09:13,760 --> 00:09:16,160
very much

241
00:09:17,200 --> 00:09:21,200
okay um thank you

242
00:09:21,279 --> 00:09:23,360
so let's move to the next talk we'll

243
00:09:23,360 --> 00:09:26,080
come back to questions uh later

244
00:09:26,080 --> 00:09:27,519
um

245
00:09:27,519 --> 00:09:29,040
and uh

246
00:09:29,040 --> 00:09:31,200
the next talk is about uh one way

247
00:09:31,200 --> 00:09:34,160
functions uh implying secure computation

248
00:09:34,160 --> 00:09:36,320
in the quantum world uh by james

249
00:09:36,320 --> 00:09:40,399
bottusek andrea cole d'angelo

250
00:09:40,399 --> 00:09:41,760
and fermi ma

251
00:09:41,760 --> 00:09:42,959
and

252
00:09:42,959 --> 00:09:47,200
james is here again to give the talk

253
00:09:47,200 --> 00:09:49,519
okay thank you yeah so

254
00:09:49,519 --> 00:09:51,120
um this is

255
00:09:51,120 --> 00:09:52,720
uh like you said one of my functions

256
00:09:52,720 --> 00:09:54,399
implies secure computation in a quantum

257
00:09:54,399 --> 00:09:57,839
world um with andrea dakshita and fermi

258
00:09:57,839 --> 00:09:59,519
and it's uh

259
00:09:59,519 --> 00:10:02,640
another talk about about npc um

260
00:10:02,640 --> 00:10:04,480
you know quickly just to remind

261
00:10:04,480 --> 00:10:06,880
ourselves here actually um if we want we

262
00:10:06,880 --> 00:10:08,720
can just focus on classical npc for this

263
00:10:08,720 --> 00:10:10,240
talk but it's where

264
00:10:10,240 --> 00:10:11,120
uh

265
00:10:11,120 --> 00:10:12,880
you know parties each have their private

266
00:10:12,880 --> 00:10:14,240
input and their goal is to compete some

267
00:10:14,240 --> 00:10:17,519
public circuit over their private inputs

268
00:10:17,519 --> 00:10:20,399
and again security uh states that uh the

269
00:10:20,399 --> 00:10:22,480
uh adversary corrupting some subset of

270
00:10:22,480 --> 00:10:24,399
parties doesn't learn anything um about

271
00:10:24,399 --> 00:10:26,000
honest party inputs other than what they

272
00:10:26,000 --> 00:10:27,839
should learn from the output

273
00:10:27,839 --> 00:10:30,320
right and so this is a very well studied

274
00:10:30,320 --> 00:10:31,519
notion

275
00:10:31,519 --> 00:10:33,600
dating back to the 80s in the classical

276
00:10:33,600 --> 00:10:35,680
setting and if we want to understand

277
00:10:35,680 --> 00:10:37,920
what is known in the classical world we

278
00:10:37,920 --> 00:10:40,079
really have to focus in on this

279
00:10:40,079 --> 00:10:42,240
primitive of oblivious transfer okay and

280
00:10:42,240 --> 00:10:44,560
this is like a very simple two-party

281
00:10:44,560 --> 00:10:46,320
functionality

282
00:10:46,320 --> 00:10:48,959
like so between sender and receiver

283
00:10:48,959 --> 00:10:51,200
and quite remarkably

284
00:10:51,200 --> 00:10:52,880
it's known that if you have a protocol

285
00:10:52,880 --> 00:10:54,399
for oblivious transfer then you can

286
00:10:54,399 --> 00:10:56,959
construct a protocol for a multi-party

287
00:10:56,959 --> 00:10:58,320
computation of any arbitrary

288
00:10:58,320 --> 00:11:00,560
functionality among any

289
00:11:00,560 --> 00:11:03,600
uh arbitrate set of parties okay so if

290
00:11:03,600 --> 00:11:04,800
you're

291
00:11:04,800 --> 00:11:07,440
interested in feasibility results often

292
00:11:07,440 --> 00:11:10,000
uh it suffices to just consider this

293
00:11:10,000 --> 00:11:11,440
much simpler notion of oblivious

294
00:11:11,440 --> 00:11:12,800
transfer

295
00:11:12,800 --> 00:11:13,839
and indeed like there are many

296
00:11:13,839 --> 00:11:15,519
constructions of ot from various

297
00:11:15,519 --> 00:11:17,600
standard assumptions

298
00:11:17,600 --> 00:11:19,279
um

299
00:11:19,279 --> 00:11:21,600
however you know crypto is uh one of the

300
00:11:21,600 --> 00:11:23,680
goals of crypto is to base your uh

301
00:11:23,680 --> 00:11:26,560
primitives on as weak of assumptions as

302
00:11:26,560 --> 00:11:28,000
possible and kind of the weakest

303
00:11:28,000 --> 00:11:29,680
assumption that we know to be possible

304
00:11:29,680 --> 00:11:33,040
for crypto or to be useful for crypto is

305
00:11:33,040 --> 00:11:35,360
the existence of one-way functions

306
00:11:35,360 --> 00:11:36,399
um

307
00:11:36,399 --> 00:11:38,560
unfortunately uh impoverished and

308
00:11:38,560 --> 00:11:39,519
riddich

309
00:11:39,519 --> 00:11:40,560
have shown

310
00:11:40,560 --> 00:11:42,399
that you cannot construct

311
00:11:42,399 --> 00:11:43,680
ot

312
00:11:43,680 --> 00:11:45,200
from one-way functions as long as they

313
00:11:45,200 --> 00:11:47,680
use them in a black box manner okay and

314
00:11:47,680 --> 00:11:48,560
even

315
00:11:48,560 --> 00:11:50,560
to this day like 30 years later we still

316
00:11:50,560 --> 00:11:52,720
don't even know of any uh reasonable

317
00:11:52,720 --> 00:11:54,560
non-black box approaches to constructing

318
00:11:54,560 --> 00:11:56,560
ot for more function so this remains

319
00:11:56,560 --> 00:12:00,000
seemingly a pretty hard problem okay

320
00:12:00,000 --> 00:12:01,120
um

321
00:12:01,120 --> 00:12:03,040
so this is kind of uh what's known in

322
00:12:03,040 --> 00:12:05,200
the classical world you could also ask

323
00:12:05,200 --> 00:12:06,000
what's

324
00:12:06,000 --> 00:12:07,279
uh what's known in the quantum world

325
00:12:07,279 --> 00:12:09,360
where we're going to allow

326
00:12:09,360 --> 00:12:11,200
maybe quantum communication allow

327
00:12:11,200 --> 00:12:14,000
quantum parties quantum adversaries

328
00:12:14,000 --> 00:12:16,240
and it's still the case that ot doesn't

329
00:12:16,240 --> 00:12:18,800
apply npc and indeed it even implies a

330
00:12:18,800 --> 00:12:22,000
multi-party quantum computation

331
00:12:22,000 --> 00:12:24,399
but what is uh one thing that's pretty

332
00:12:24,399 --> 00:12:27,519
remarkable about the quantum world is uh

333
00:12:27,519 --> 00:12:30,160
this this template that was given um in

334
00:12:30,160 --> 00:12:32,720
88 by uh crippo and killian

335
00:12:32,720 --> 00:12:34,880
uh they showed uh a reasonable way to

336
00:12:34,880 --> 00:12:36,880
construct ot just from the primitive of

337
00:12:36,880 --> 00:12:39,360
bit commitments and such a

338
00:12:39,360 --> 00:12:40,800
template is not known in the classical

339
00:12:40,800 --> 00:12:43,360
setting in particular this protocol

340
00:12:43,360 --> 00:12:44,720
makes inherent use of quantum

341
00:12:44,720 --> 00:12:47,120
communication okay

342
00:12:47,120 --> 00:12:49,440
and uh so they kind of they didn't

343
00:12:49,440 --> 00:12:52,000
really give a security proof

344
00:12:52,000 --> 00:12:54,480
in this original work and

345
00:12:54,480 --> 00:12:56,240
many years later

346
00:12:56,240 --> 00:12:58,240
this work of dflss showed that if you

347
00:12:58,240 --> 00:13:00,560
instantiate these commitments from using

348
00:13:00,560 --> 00:13:02,240
the learning of thera's assumption you

349
00:13:02,240 --> 00:13:04,639
can actually prove security of ot

350
00:13:04,639 --> 00:13:06,240
following this this grip on killian

351
00:13:06,240 --> 00:13:07,680
approach so

352
00:13:07,680 --> 00:13:09,279
this is nice but it's it doesn't really

353
00:13:09,279 --> 00:13:10,800
imply anything new yet because there are

354
00:13:10,800 --> 00:13:12,480
we know other ways of constructing ot

355
00:13:12,480 --> 00:13:14,480
from lwe

356
00:13:14,480 --> 00:13:15,440
um

357
00:13:15,440 --> 00:13:16,880
a

358
00:13:16,880 --> 00:13:19,839
uh another work around the same time

359
00:13:19,839 --> 00:13:20,880
showed

360
00:13:20,880 --> 00:13:22,639
interestingly that if you instantiate

361
00:13:22,639 --> 00:13:24,800
this template with uh bit commitments

362
00:13:24,800 --> 00:13:26,800
known from just one-way functions you

363
00:13:26,800 --> 00:13:29,120
can obtain some form of ot

364
00:13:29,120 --> 00:13:30,160
this is really

365
00:13:30,160 --> 00:13:32,720
like by week of t i really mean some end

366
00:13:32,720 --> 00:13:34,480
base indistinguishability based ot

367
00:13:34,480 --> 00:13:37,040
that's uh that's not known to imply npc

368
00:13:37,040 --> 00:13:39,120
but but nonetheless such this this type

369
00:13:39,120 --> 00:13:40,480
of implication here is not known in the

370
00:13:40,480 --> 00:13:42,639
classical setting okay

371
00:13:42,639 --> 00:13:43,839
um

372
00:13:43,839 --> 00:13:45,839
but this was kind of uh roughly the

373
00:13:45,839 --> 00:13:48,240
state uh of what's known in the quantum

374
00:13:48,240 --> 00:13:51,519
world prior to our work so is uh it was

375
00:13:51,519 --> 00:13:53,199
unclear whether like what was the

376
00:13:53,199 --> 00:13:54,959
relationship between like you know

377
00:13:54,959 --> 00:13:56,639
simulation-based ot and one-way

378
00:13:56,639 --> 00:13:58,399
functions uh

379
00:13:58,399 --> 00:14:01,440
or mp mpc and one-way functions right

380
00:14:01,440 --> 00:14:04,000
and so so our work kind of fills in this

381
00:14:04,000 --> 00:14:06,720
gap and and we show that that ot

382
00:14:06,720 --> 00:14:08,000
can actually be built from one-way

383
00:14:08,000 --> 00:14:10,800
functions and even in a black box way

384
00:14:10,800 --> 00:14:12,320
in a quantum world

385
00:14:12,320 --> 00:14:14,720
meaning if you allow the parties to uh

386
00:14:14,720 --> 00:14:17,279
communicate quantumly with each other

387
00:14:17,279 --> 00:14:18,720
okay

388
00:14:18,720 --> 00:14:20,240
um

389
00:14:20,240 --> 00:14:24,079
so like this is our main result and um

390
00:14:24,079 --> 00:14:27,040
i can now just uh briefly uh get into

391
00:14:27,040 --> 00:14:29,440
like how we how we construct this i mean

392
00:14:29,440 --> 00:14:31,839
the main

393
00:14:32,240 --> 00:14:36,000
route we take is showing that um

394
00:14:36,000 --> 00:14:37,920
this primitive of extractable and

395
00:14:37,920 --> 00:14:39,519
equivocal bit commitments implies

396
00:14:39,519 --> 00:14:42,399
simulation secure ot via this green

397
00:14:42,399 --> 00:14:43,600
template

398
00:14:43,600 --> 00:14:45,600
so this implication was already

399
00:14:45,600 --> 00:14:48,240
essentially uh known and

400
00:14:48,240 --> 00:14:51,040
formalized uh in this work of dflss so

401
00:14:51,040 --> 00:14:52,560
our main contribution is how can we

402
00:14:52,560 --> 00:14:53,839
construct such

403
00:14:53,839 --> 00:14:55,440
extractable and equivocal commitments

404
00:14:55,440 --> 00:14:58,079
just assuming one-way functions okay and

405
00:14:58,079 --> 00:14:59,360
to do this we start with an hour's

406
00:14:59,360 --> 00:15:03,279
commitment which is some some regular

407
00:15:03,279 --> 00:15:05,360
computationally hiding uh statistically

408
00:15:05,360 --> 00:15:07,040
binding equipment and it just assumes

409
00:15:07,040 --> 00:15:09,600
the existence of one-way functions

410
00:15:09,600 --> 00:15:11,760
uh what we do is we show that such

411
00:15:11,760 --> 00:15:13,839
commitments imply equivocal commitments

412
00:15:13,839 --> 00:15:16,800
and this is uh via a generic black box

413
00:15:16,800 --> 00:15:19,120
post quantum equivocality compiler that

414
00:15:19,120 --> 00:15:20,639
we construct which basically shows how

415
00:15:20,639 --> 00:15:22,160
to take any commitment scheme and make

416
00:15:22,160 --> 00:15:24,160
it equivocal in a very generic and uh

417
00:15:24,160 --> 00:15:27,519
post quantum manner okay

418
00:15:27,519 --> 00:15:29,440
next we show that actually

419
00:15:29,440 --> 00:15:31,279
we can construct extractual commitments

420
00:15:31,279 --> 00:15:33,759
from equivocal commitments um by going

421
00:15:33,759 --> 00:15:36,079
through this uh cropokilian template so

422
00:15:36,079 --> 00:15:37,199
if we additionally assume quantum

423
00:15:37,199 --> 00:15:38,839
communication you can obtain

424
00:15:38,839 --> 00:15:41,279
extractability um and this kind of uses

425
00:15:41,279 --> 00:15:43,920
this uh this this template for ot and

426
00:15:43,920 --> 00:15:45,120
kind of uh

427
00:15:45,120 --> 00:15:46,880
um changes

428
00:15:46,880 --> 00:15:49,759
basically uh massages it a bit to uh to

429
00:15:49,759 --> 00:15:50,800
a um

430
00:15:50,800 --> 00:15:53,839
uh really give a template for um

431
00:15:53,839 --> 00:15:54,880
okay

432
00:15:54,880 --> 00:15:56,240
so at this point we have an extractable

433
00:15:56,240 --> 00:15:58,480
equipment uh the last step is just to

434
00:15:58,480 --> 00:16:00,560
apply our equivocality compiler again to

435
00:16:00,560 --> 00:16:02,079
show how to get extractable and

436
00:16:02,079 --> 00:16:03,440
equivocal commitments from our

437
00:16:03,440 --> 00:16:05,920
extractable commitments and this is um

438
00:16:05,920 --> 00:16:07,759
kind of the high level road map of how

439
00:16:07,759 --> 00:16:10,000
our um how our result goes

440
00:16:10,000 --> 00:16:11,600
so that's

441
00:16:11,600 --> 00:16:13,120
all i wanted to say and happy to take

442
00:16:13,120 --> 00:16:16,000
questions uh after the uh last talk so

443
00:16:16,000 --> 00:16:17,440
thank you

444
00:16:17,440 --> 00:16:20,480
okay thanks a lot james a great result

445
00:16:20,480 --> 00:16:24,800
indeed um okay let's uh

446
00:16:24,800 --> 00:16:28,000
now move to the last talk of uh of the

447
00:16:28,000 --> 00:16:29,440
session

448
00:16:29,440 --> 00:16:30,720
um

449
00:16:30,720 --> 00:16:32,320
about the impossibility of quantum

450
00:16:32,320 --> 00:16:33,800
virtual blackbox

451
00:16:33,800 --> 00:16:37,800
applications circles

452
00:16:48,240 --> 00:16:50,320
okay great thanks can you uh see and

453
00:16:50,320 --> 00:16:51,680
hear

454
00:16:51,680 --> 00:16:52,880
everything

455
00:16:52,880 --> 00:16:54,160
okay great

456
00:16:54,160 --> 00:16:56,000
okay so uh right so i'll be talking

457
00:16:56,000 --> 00:16:58,240
about this joint work with zvika ifkya

458
00:16:58,240 --> 00:16:59,440
and chris

459
00:16:59,440 --> 00:17:01,839
on the uh impossibility of quantum bbb

460
00:17:01,839 --> 00:17:04,400
obfuscation

461
00:17:04,400 --> 00:17:07,280
and um so just to remind you

462
00:17:07,280 --> 00:17:10,000
a second here

463
00:17:10,000 --> 00:17:12,079
uh right so what's program obfuscation

464
00:17:12,079 --> 00:17:15,199
so um so an app an obfuscator is some

465
00:17:15,199 --> 00:17:17,359
kind of algorithm which converts

466
00:17:17,359 --> 00:17:19,760
programs into programs so for example

467
00:17:19,760 --> 00:17:21,439
you know this input program here might

468
00:17:21,439 --> 00:17:24,400
be obfuscated as this one here

469
00:17:24,400 --> 00:17:27,119
and uh the requirement is that uh this

470
00:17:27,119 --> 00:17:29,280
output this obfuscated program should be

471
00:17:29,280 --> 00:17:30,720
functionally equivalent to the initial

472
00:17:30,720 --> 00:17:32,400
program so it should still print hello

473
00:17:32,400 --> 00:17:33,440
world

474
00:17:33,440 --> 00:17:35,280
it should still be efficient but in some

475
00:17:35,280 --> 00:17:36,559
sense it should be difficult to

476
00:17:36,559 --> 00:17:38,000
understand

477
00:17:38,000 --> 00:17:40,240
and for the purposes of this

478
00:17:40,240 --> 00:17:42,160
work hard to understand will mean that

479
00:17:42,160 --> 00:17:44,880
it behaves essentially like a black box

480
00:17:44,880 --> 00:17:46,799
so even though the holder of this

481
00:17:46,799 --> 00:17:48,480
obfuscated circuit

482
00:17:48,480 --> 00:17:49,679
you know can look at the individual

483
00:17:49,679 --> 00:17:51,679
gates decompose the program do all sorts

484
00:17:51,679 --> 00:17:54,160
of stuff with it in the end in some you

485
00:17:54,160 --> 00:17:55,760
know well-defined sense it should be no

486
00:17:55,760 --> 00:17:57,840
more useful than an oracle which simply

487
00:17:57,840 --> 00:17:59,919
accepts an input and then produces the

488
00:17:59,919 --> 00:18:01,840
output

489
00:18:01,840 --> 00:18:03,120
so it's been known for some time that

490
00:18:03,120 --> 00:18:05,120
vbb obfuscators are quite powerful they

491
00:18:05,120 --> 00:18:06,400
have a kind of a wide range of

492
00:18:06,400 --> 00:18:08,480
applications

493
00:18:08,480 --> 00:18:09,760
you know both inside and outside

494
00:18:09,760 --> 00:18:11,600
cryptography

495
00:18:11,600 --> 00:18:13,200
unfortunately it's also been known since

496
00:18:13,200 --> 00:18:15,280
2001 that there are classes of

497
00:18:15,280 --> 00:18:19,039
unobfuscatable functions so there's no

498
00:18:19,039 --> 00:18:21,120
general obfuscator at least in the

499
00:18:21,120 --> 00:18:23,200
classical world

500
00:18:23,200 --> 00:18:24,799
so how does this proof work kind of at a

501
00:18:24,799 --> 00:18:26,640
very high level

502
00:18:26,640 --> 00:18:28,480
so the first step is to construct some

503
00:18:28,480 --> 00:18:30,320
programs

504
00:18:30,320 --> 00:18:31,679
so that you know if you run one of these

505
00:18:31,679 --> 00:18:33,200
programs on itself

506
00:18:33,200 --> 00:18:36,400
it will output some special secret and

507
00:18:36,400 --> 00:18:38,559
otherwise it will return you know just

508
00:18:38,559 --> 00:18:40,400
always a reject symbol

509
00:18:40,400 --> 00:18:41,840
so now it's clear that any algorithm

510
00:18:41,840 --> 00:18:43,520
that only gets oracle access to such a

511
00:18:43,520 --> 00:18:47,360
program will just always get rejected

512
00:18:47,360 --> 00:18:48,960
whereas an algorithm that gets a circuit

513
00:18:48,960 --> 00:18:51,120
kind of any circuit for this program no

514
00:18:51,120 --> 00:18:52,799
matter how obfuscated

515
00:18:52,799 --> 00:18:55,280
can just make a copy of that circuit

516
00:18:55,280 --> 00:18:56,799
feed it into itself

517
00:18:56,799 --> 00:18:59,039
and then get this special secret out

518
00:18:59,039 --> 00:19:00,960
okay so indeed you know this algorithm

519
00:19:00,960 --> 00:19:02,480
is able to do something that one cannot

520
00:19:02,480 --> 00:19:05,600
with purely oracle access

521
00:19:05,600 --> 00:19:07,120
and one can make sense of this idea of

522
00:19:07,120 --> 00:19:09,200
running a circuit on itself for example

523
00:19:09,200 --> 00:19:11,840
using fhe

524
00:19:12,720 --> 00:19:14,480
so what about with quantum mechanics so

525
00:19:14,480 --> 00:19:16,000
you know quantum mechanics as we know

526
00:19:16,000 --> 00:19:17,440
sometimes enables more powerful

527
00:19:17,440 --> 00:19:19,120
cryptography

528
00:19:19,120 --> 00:19:21,520
maybe it can help with obfuscation

529
00:19:21,520 --> 00:19:23,520
and indeed you know when you look at the

530
00:19:23,520 --> 00:19:24,880
proof that i described in the previous

531
00:19:24,880 --> 00:19:26,799
slide there's kind of a clear step in

532
00:19:26,799 --> 00:19:28,640
the proof

533
00:19:28,640 --> 00:19:30,320
that would violate the quantum no

534
00:19:30,320 --> 00:19:32,480
cloning theorem if the obfuscated

535
00:19:32,480 --> 00:19:34,080
program itself is allowed to be a

536
00:19:34,080 --> 00:19:35,360
quantum state

537
00:19:35,360 --> 00:19:37,760
okay so this crucial copying step would

538
00:19:37,760 --> 00:19:39,520
no longer be possible and now the

539
00:19:39,520 --> 00:19:40,960
algorithm can't extract the special

540
00:19:40,960 --> 00:19:42,960
secret

541
00:19:42,960 --> 00:19:45,200
and you might conjecture that you know

542
00:19:45,200 --> 00:19:47,120
the reason this is the case is because

543
00:19:47,120 --> 00:19:48,799
you know quantum mechanics perhaps can

544
00:19:48,799 --> 00:19:51,760
give us a virtual black box obfuscation

545
00:19:51,760 --> 00:19:54,000
and this was a question posed by

546
00:19:54,000 --> 00:19:56,400
scott aaronson in 2005 and has remained

547
00:19:56,400 --> 00:19:59,520
open since then

548
00:19:59,919 --> 00:20:03,200
so our result is that unfortunately no

549
00:20:03,200 --> 00:20:05,600
vbb obfuscation is in fact impossible

550
00:20:05,600 --> 00:20:06,480
even

551
00:20:06,480 --> 00:20:08,320
if the alpha skater is allowed to output

552
00:20:08,320 --> 00:20:10,159
quantum states and the assumption that

553
00:20:10,159 --> 00:20:12,159
we need for this is the quantum hardness

554
00:20:12,159 --> 00:20:14,000
of learning with errors

555
00:20:14,000 --> 00:20:15,919
so i should mention this is also a

556
00:20:15,919 --> 00:20:18,840
result of an independent work of anantan

557
00:20:18,840 --> 00:20:20,720
laplaca

558
00:20:20,720 --> 00:20:22,000
and in fact we show something a little

559
00:20:22,000 --> 00:20:24,960
bit stronger if you demand

560
00:20:24,960 --> 00:20:26,799
security with dependent auxiliary

561
00:20:26,799 --> 00:20:29,440
information in that case even multi-bit

562
00:20:29,440 --> 00:20:33,559
point functions are unobfuscatable

563
00:20:34,080 --> 00:20:35,760
how does the uh how does the proof work

564
00:20:35,760 --> 00:20:37,520
sort of at a very high level

565
00:20:37,520 --> 00:20:39,360
so remember that the crucial sort of

566
00:20:39,360 --> 00:20:41,200
issue in the classical proof was this

567
00:20:41,200 --> 00:20:42,559
copying step

568
00:20:42,559 --> 00:20:44,080
so our approach will be to sort of

569
00:20:44,080 --> 00:20:46,240
enable this algorithm to in some sense

570
00:20:46,240 --> 00:20:47,360
still run

571
00:20:47,360 --> 00:20:48,880
the state on itself even though it

572
00:20:48,880 --> 00:20:52,159
cannot produce two copies of it

573
00:20:52,159 --> 00:20:53,679
okay and we're going to use kind of a

574
00:20:53,679 --> 00:20:55,520
trick and a couple of

575
00:20:55,520 --> 00:20:57,120
ingredients from

576
00:20:57,120 --> 00:21:00,239
from the last few years

577
00:21:00,320 --> 00:21:02,240
so so when thinking about this you

578
00:21:02,240 --> 00:21:04,400
should think about a program which is

579
00:21:04,400 --> 00:21:05,919
kind of a random multi-bit point

580
00:21:05,919 --> 00:21:07,440
function so

581
00:21:07,440 --> 00:21:10,080
on some special on some random secret a

582
00:21:10,080 --> 00:21:12,240
it will output some other random secret

583
00:21:12,240 --> 00:21:13,600
b and otherwise it does nothing

584
00:21:13,600 --> 00:21:15,120
interesting

585
00:21:15,120 --> 00:21:16,480
and now we're going to use this first

586
00:21:16,480 --> 00:21:17,280
trick

587
00:21:17,280 --> 00:21:19,600
to kind of additionally encode some

588
00:21:19,600 --> 00:21:21,600
extra classical information so the first

589
00:21:21,600 --> 00:21:23,200
piece of classical information will be

590
00:21:23,200 --> 00:21:26,320
an encryption of the starting secret a

591
00:21:26,320 --> 00:21:27,919
the other piece of classical information

592
00:21:27,919 --> 00:21:28,880
will be

593
00:21:28,880 --> 00:21:31,600
uh an obfuscated comparator program okay

594
00:21:31,600 --> 00:21:33,360
so this program

595
00:21:33,360 --> 00:21:35,200
answers the question am i holding an

596
00:21:35,200 --> 00:21:37,760
encryption of b so this other random

597
00:21:37,760 --> 00:21:39,440
output okay

598
00:21:39,440 --> 00:21:41,840
and because of this this ingredient here

599
00:21:41,840 --> 00:21:43,679
which is that you know

600
00:21:43,679 --> 00:21:45,440
a nearly deterministic quantum process

601
00:21:45,440 --> 00:21:47,679
can actually be reversed restoring the

602
00:21:47,679 --> 00:21:49,039
initial state

603
00:21:49,039 --> 00:21:50,559
this means that after the algorithm

604
00:21:50,559 --> 00:21:52,320
extracts these two classical pieces of

605
00:21:52,320 --> 00:21:54,640
information it still has the original

606
00:21:54,640 --> 00:21:57,039
obfuscated state so by functional

607
00:21:57,039 --> 00:21:59,280
equivalence it can now homomorphically

608
00:21:59,280 --> 00:22:02,000
evaluate this functionality which maps a

609
00:22:02,000 --> 00:22:04,880
to b and can actually go from a from the

610
00:22:04,880 --> 00:22:07,120
encryption of a to the encryption of b

611
00:22:07,120 --> 00:22:08,960
run this obfuscated comparator which

612
00:22:08,960 --> 00:22:11,600
will then produce the special secret

613
00:22:11,600 --> 00:22:13,520
and it's not too difficult to show that

614
00:22:13,520 --> 00:22:15,120
with black box access this is not

615
00:22:15,120 --> 00:22:17,600
possible

616
00:22:18,000 --> 00:22:20,480
uh so summarizing briefly um so we

617
00:22:20,480 --> 00:22:22,400
showed that this very powerful primitive

618
00:22:22,400 --> 00:22:24,240
vbb obfuscation is unfortunately

619
00:22:24,240 --> 00:22:26,000
impossible even with the use of quantum

620
00:22:26,000 --> 00:22:27,520
mechanics even if

621
00:22:27,520 --> 00:22:29,280
the obfuscated programs can be quantum

622
00:22:29,280 --> 00:22:30,799
states

623
00:22:30,799 --> 00:22:32,400
some nice questions and issues to think

624
00:22:32,400 --> 00:22:34,559
about so the classical impossibility

625
00:22:34,559 --> 00:22:36,159
proof is actually unconditional whereas

626
00:22:36,159 --> 00:22:37,120
we need

627
00:22:37,120 --> 00:22:39,600
uh some form of lwbe so is that

628
00:22:39,600 --> 00:22:41,840
necessary

629
00:22:41,840 --> 00:22:43,440
one might also think about obfuscation

630
00:22:43,440 --> 00:22:45,280
in idealized models like let's say the

631
00:22:45,280 --> 00:22:47,760
quantum and oracle model

632
00:22:47,760 --> 00:22:49,760
it's also interesting to compare

633
00:22:49,760 --> 00:22:52,240
the class of impossible unobfuscatable

634
00:22:52,240 --> 00:22:54,480
functions that we wrote down versus ones

635
00:22:54,480 --> 00:22:56,080
which are possible using compute and

636
00:22:56,080 --> 00:22:58,320
compare obfuscation

637
00:22:58,320 --> 00:23:00,240
and one could also think of course about

638
00:23:00,240 --> 00:23:02,159
indistinguishability of obfuscation and

639
00:23:02,159 --> 00:23:03,760
quantum mechanics and you know there's

640
00:23:03,760 --> 00:23:05,039
been some interesting work on that

641
00:23:05,039 --> 00:23:08,039
recently

642
00:23:08,640 --> 00:23:10,880
so thank you

643
00:23:10,880 --> 00:23:13,520
okay uh thank you

644
00:23:13,520 --> 00:23:14,720
and uh

645
00:23:14,720 --> 00:23:16,320
thanks to all the speakers of the

646
00:23:16,320 --> 00:23:17,919
session um

647
00:23:17,919 --> 00:23:19,840
we have a

648
00:23:19,840 --> 00:23:22,559
few minutes

649
00:23:22,799 --> 00:23:25,600
until the break for questions um and

650
00:23:25,600 --> 00:23:28,320
then we'll do it uh as before

651
00:23:28,320 --> 00:23:29,520
so

652
00:23:29,520 --> 00:23:31,919
if you just want to go ahead and ask a

653
00:23:31,919 --> 00:23:33,520
question in person raise your hand

654
00:23:33,520 --> 00:23:34,720
whatever

655
00:23:34,720 --> 00:23:37,919
or just just ask

656
00:23:37,919 --> 00:23:40,640
then please do

657
00:23:41,440 --> 00:23:43,919
anyone

658
00:23:44,320 --> 00:23:47,279
um yeah i have one question for james

659
00:23:47,279 --> 00:23:49,679
it might be a stupid question

660
00:23:49,679 --> 00:23:52,080
is it possible to

661
00:23:52,080 --> 00:23:53,600
um

662
00:23:53,600 --> 00:23:55,760
construct secure computation using

663
00:23:55,760 --> 00:23:57,520
quantum communication

664
00:23:57,520 --> 00:23:59,679
uh with weaker assumptions and post

665
00:23:59,679 --> 00:24:02,720
quantum on my functions

666
00:24:03,760 --> 00:24:05,679
i i mean i think that's a good question

667
00:24:05,679 --> 00:24:06,799
it uh

668
00:24:06,799 --> 00:24:08,960
it's not clear

669
00:24:08,960 --> 00:24:10,320
um

670
00:24:10,320 --> 00:24:11,679
yeah i mean

671
00:24:11,679 --> 00:24:14,480
i don't think we know of any like

672
00:24:14,480 --> 00:24:15,840
formalizations of assumptions that are

673
00:24:15,840 --> 00:24:17,360
weaker than one-way functions like

674
00:24:17,360 --> 00:24:19,679
you're imagining like trying to

675
00:24:19,679 --> 00:24:21,039
come up with some assumption that like

676
00:24:21,039 --> 00:24:22,480
uses quantum

677
00:24:22,480 --> 00:24:25,120
communication yeah like for example like

678
00:24:25,120 --> 00:24:28,320
pseudorandom states could perhaps be

679
00:24:28,320 --> 00:24:29,919
based on like weaker assumptions in one

680
00:24:29,919 --> 00:24:32,880
way function so right

681
00:24:32,880 --> 00:24:34,400
no i think i think it's like a good

682
00:24:34,400 --> 00:24:36,960
interesting question to think about i

683
00:24:36,960 --> 00:24:39,360
yeah i i don't know of any like concrete

684
00:24:39,360 --> 00:24:40,720
um

685
00:24:40,720 --> 00:24:42,480
uh like basically assumptions to try to

686
00:24:42,480 --> 00:24:45,440
build this from but like it might be

687
00:24:45,440 --> 00:24:46,960
i think it is interesting to think about

688
00:24:46,960 --> 00:24:48,159
yeah

689
00:24:48,159 --> 00:24:50,080
thanks

690
00:24:50,080 --> 00:24:53,360
um can i ask a follow-up question um

691
00:24:53,360 --> 00:24:56,880
so you're saying that we don't know that

692
00:24:56,880 --> 00:24:59,600
uh like classical ot but with quantum

693
00:24:59,600 --> 00:25:01,159
computer the classical

694
00:25:01,159 --> 00:25:04,240
multifunctionality but with uh quantum

695
00:25:04,240 --> 00:25:07,039
communication implied onery functions

696
00:25:07,039 --> 00:25:08,320
exactly yeah we don't we don't know

697
00:25:08,320 --> 00:25:10,080
something like that right because that

698
00:25:10,080 --> 00:25:12,240
uh yeah there's like you have a quantum

699
00:25:12,240 --> 00:25:13,440
transcript

700
00:25:13,440 --> 00:25:15,360
i see but but

701
00:25:15,360 --> 00:25:17,200
do we actually do we know that it

702
00:25:17,200 --> 00:25:19,600
requires any sort of computational

703
00:25:19,600 --> 00:25:21,679
hardness i think that

704
00:25:21,679 --> 00:25:23,760
yes like basically well

705
00:25:23,760 --> 00:25:26,240
well for example we know that like uh

706
00:25:26,240 --> 00:25:27,840
information theoretically secure like

707
00:25:27,840 --> 00:25:29,360
commitments

708
00:25:29,360 --> 00:25:31,600
are impossible right even with final

709
00:25:31,600 --> 00:25:34,240
communication and and yeah this

710
00:25:34,240 --> 00:25:35,679
it's known that even like even against

711
00:25:35,679 --> 00:25:37,520
like species adversaries as well and

712
00:25:37,520 --> 00:25:39,279
this also carries over to secure

713
00:25:39,279 --> 00:25:40,960
competition

714
00:25:40,960 --> 00:25:42,559
see so what is sort of like the

715
00:25:42,559 --> 00:25:44,480
strongest assumption that is known to be

716
00:25:44,480 --> 00:25:47,279
implied by this like is this something

717
00:25:47,279 --> 00:25:48,559
yeah i don't know i don't know if it's

718
00:25:48,559 --> 00:25:50,480
really been uh

719
00:25:50,480 --> 00:25:52,640
really formally studied what kind of

720
00:25:52,640 --> 00:25:54,320
things like are implied by these these

721
00:25:54,320 --> 00:25:57,440
protocols with quantum transcripts yeah

722
00:25:57,440 --> 00:25:58,320
okay

723
00:25:58,320 --> 00:26:00,640
i mean perhaps like a natural thing to

724
00:26:00,640 --> 00:26:02,400
start is to formalize the notion of like

725
00:26:02,400 --> 00:26:04,480
one way function where let's say the

726
00:26:04,480 --> 00:26:07,520
output is quantum and then maybe

727
00:26:07,520 --> 00:26:10,080
something like that

728
00:26:10,080 --> 00:26:11,840
yeah that's fascinating

729
00:26:11,840 --> 00:26:13,200
right

730
00:26:13,200 --> 00:26:14,960
um

731
00:26:14,960 --> 00:26:17,919
more questions

732
00:26:19,520 --> 00:26:21,600
anyone for banjon you're getting allowed

733
00:26:21,600 --> 00:26:23,840
to ask twice

734
00:26:23,840 --> 00:26:26,720
fun next

735
00:26:26,880 --> 00:26:28,080
okay

736
00:26:28,080 --> 00:26:31,600
okay so let me check out the zulu see if

737
00:26:31,600 --> 00:26:33,120
there are any

738
00:26:33,120 --> 00:26:35,279
questions there

739
00:26:35,279 --> 00:26:38,279
um

740
00:26:41,120 --> 00:26:43,200
okay

741
00:26:43,200 --> 00:26:45,360
you see there are some that have been

742
00:26:45,360 --> 00:26:47,760
answered

743
00:26:47,760 --> 00:26:49,520
okay

744
00:26:49,520 --> 00:26:51,440
so nothing new

745
00:26:51,440 --> 00:26:53,600
um okay so

746
00:26:53,600 --> 00:26:57,039
you know uh last call one one uh one

747
00:26:57,039 --> 00:26:59,679
question perhaps a naive one

748
00:26:59,679 --> 00:27:01,039
yeah

749
00:27:01,039 --> 00:27:02,159
for the

750
00:27:02,159 --> 00:27:04,720
vbb obfuscation

751
00:27:04,720 --> 00:27:07,520
paper you were considering just um

752
00:27:07,520 --> 00:27:09,919
classical circuits is that right and

753
00:27:09,919 --> 00:27:12,640
um probably a naive question but

754
00:27:12,640 --> 00:27:14,640
does this carry over to classical turing

755
00:27:14,640 --> 00:27:19,799
machines as well uh is it easy to see

756
00:27:20,880 --> 00:27:22,960
i don't see any problems with

757
00:27:22,960 --> 00:27:27,120
carrying it over to turing machines um

758
00:27:29,760 --> 00:27:31,919
yeah i mean okay i haven't thought about

759
00:27:31,919 --> 00:27:34,320
this in detail but um

760
00:27:34,320 --> 00:27:35,840
i see no reason why i wouldn't i mean in

761
00:27:35,840 --> 00:27:37,600
fact it's i guess

762
00:27:37,600 --> 00:27:39,120
the prescription is i think in some

763
00:27:39,120 --> 00:27:41,120
sense even easier easier

764
00:27:41,120 --> 00:27:42,399
for touring machines because you don't

765
00:27:42,399 --> 00:27:43,840
have to worry about this you know stuff

766
00:27:43,840 --> 00:27:45,360
about

767
00:27:45,360 --> 00:27:46,880
kind of feeding a program into itself

768
00:27:46,880 --> 00:27:48,399
and input sizes and these sorts of

769
00:27:48,399 --> 00:27:51,520
things um right exactly and yeah

770
00:27:51,520 --> 00:27:53,600
but you don't see

771
00:27:53,600 --> 00:27:55,520
that it would potentially

772
00:27:55,520 --> 00:27:56,799
um

773
00:27:56,799 --> 00:27:59,039
get rid of the assumptions

774
00:27:59,039 --> 00:28:00,159
like you think you'd still need the

775
00:28:00,159 --> 00:28:01,600
assumptions there

776
00:28:01,600 --> 00:28:03,840
no i think i think i mean we need we

777
00:28:03,840 --> 00:28:05,520
need the assumptions for for reasons

778
00:28:05,520 --> 00:28:08,320
that go beyond um just kind of fitting

779
00:28:08,320 --> 00:28:09,919
fitting inputs into

780
00:28:09,919 --> 00:28:12,240
you know feeding a circuit into itself

781
00:28:12,240 --> 00:28:13,600
um

782
00:28:13,600 --> 00:28:15,600
size wise yeah so

783
00:28:15,600 --> 00:28:16,640
right

784
00:28:16,640 --> 00:28:17,840
okay thanks

785
00:28:17,840 --> 00:28:19,840
yeah i think that like following up on

786
00:28:19,840 --> 00:28:21,440
chris's uh question like something

787
00:28:21,440 --> 00:28:24,720
fascinating like the reason that uh like

788
00:28:24,720 --> 00:28:26,880
it's easier to show that turing machines

789
00:28:26,880 --> 00:28:29,360
aren't office capable is that it's

790
00:28:29,360 --> 00:28:31,440
easier to diagonalize them

791
00:28:31,440 --> 00:28:33,120
like in a circuit it's like how are you

792
00:28:33,120 --> 00:28:34,640
going to diagonalize the circuit the

793
00:28:34,640 --> 00:28:37,600
circuit cannot run on on you know on the

794
00:28:37,600 --> 00:28:39,360
circuit itself so you have to sort of

795
00:28:39,360 --> 00:28:41,440
decompose it etc while a turing machine

796
00:28:41,440 --> 00:28:44,000
can do it so like uh uh showing uh

797
00:28:44,000 --> 00:28:45,440
infostability for two machines in the

798
00:28:45,440 --> 00:28:46,799
classical setting

799
00:28:46,799 --> 00:28:48,000
is very easy

800
00:28:48,000 --> 00:28:49,919
but in the quantum setting like what

801
00:28:49,919 --> 00:28:52,559
does diagonalization mean because like

802
00:28:52,559 --> 00:28:54,399
you know like that basically the program

803
00:28:54,399 --> 00:28:56,480
is given by a quantum state

804
00:28:56,480 --> 00:28:57,679
so like

805
00:28:57,679 --> 00:28:59,919
how do you sort of

806
00:28:59,919 --> 00:29:02,559
run this thing on itself without

807
00:29:02,559 --> 00:29:04,320
corrupting it

808
00:29:04,320 --> 00:29:06,960
i think it's like fascinating to try and

809
00:29:06,960 --> 00:29:09,679
think about any sort of like meaningful

810
00:29:09,679 --> 00:29:13,440
notion of quantum diagonalization um

811
00:29:13,440 --> 00:29:15,120
right i mean the way that we kind of get

812
00:29:15,120 --> 00:29:16,159
around

813
00:29:16,159 --> 00:29:17,919
all of those issues at least in the in

814
00:29:17,919 --> 00:29:20,640
the case of obfuscating circuits is

815
00:29:20,640 --> 00:29:21,679
um

816
00:29:21,679 --> 00:29:25,200
is you know we we homomorphically

817
00:29:25,200 --> 00:29:27,440
when you evaluate talk about obfuscating

818
00:29:27,440 --> 00:29:29,520
a program into a state you have to fix

819
00:29:29,520 --> 00:29:31,840
some global algorithm that's going to be

820
00:29:31,840 --> 00:29:33,919
used to interpret these states

821
00:29:33,919 --> 00:29:35,279
and that's actually the thing that we

822
00:29:35,279 --> 00:29:37,600
homomorphically evaluate so we tell you

823
00:29:37,600 --> 00:29:39,279
we tell the user you know we'll encrypt

824
00:29:39,279 --> 00:29:41,760
this quantum state put it next to the

825
00:29:41,760 --> 00:29:43,120
interpreter you know homomorphically

826
00:29:43,120 --> 00:29:44,640
evaluate that

827
00:29:44,640 --> 00:29:46,480
um so we kind of get around all that but

828
00:29:46,480 --> 00:29:47,840
yeah um

829
00:29:47,840 --> 00:29:49,200
but yeah it's a good question for

830
00:29:49,200 --> 00:29:51,200
touring machines whether something

831
00:29:51,200 --> 00:29:54,840
simpler can be done

832
00:29:59,760 --> 00:30:00,880
i mean i probably don't know the

833
00:30:00,880 --> 00:30:03,679
literature dna um

834
00:30:03,679 --> 00:30:05,919
so in the classical model if i recall

835
00:30:05,919 --> 00:30:07,840
there are this impossibility of

836
00:30:07,840 --> 00:30:10,559
fiscation and random oracle i think even

837
00:30:10,559 --> 00:30:12,399
generic group model even some constant

838
00:30:12,399 --> 00:30:14,320
degree multi-linear maps

839
00:30:14,320 --> 00:30:16,640
if i remember so you mentioned this is

840
00:30:16,640 --> 00:30:18,559
all open and quantum

841
00:30:18,559 --> 00:30:20,880
so i assume you thought about your

842
00:30:20,880 --> 00:30:22,320
tricks currently they're like

843
00:30:22,320 --> 00:30:24,480
fundamentally stuck for different

844
00:30:24,480 --> 00:30:25,440
reasons

845
00:30:25,440 --> 00:30:27,200
or you just maybe didn't spend enough

846
00:30:27,200 --> 00:30:29,360
time

847
00:30:29,360 --> 00:30:31,200
um so i mean i i was purely talking

848
00:30:31,200 --> 00:30:32,960
about um

849
00:30:32,960 --> 00:30:36,080
vbp stuff i mean

850
00:30:36,080 --> 00:30:37,520
okay sure so

851
00:30:37,520 --> 00:30:39,200
i i think that the thing that i haven't

852
00:30:39,200 --> 00:30:40,559
that we haven't kind of carefully

853
00:30:40,559 --> 00:30:42,720
thought about is is the

854
00:30:42,720 --> 00:30:44,559
is the idealized models

855
00:30:44,559 --> 00:30:45,919
question

856
00:30:45,919 --> 00:30:47,440
so like for example

857
00:30:47,440 --> 00:30:49,200
with random oracles and i guess the

858
00:30:49,200 --> 00:30:50,960
issue there is that

859
00:30:50,960 --> 00:30:52,640
you know as i just said you know we're

860
00:30:52,640 --> 00:30:54,320
kind of we're asking the

861
00:30:54,320 --> 00:30:56,480
for homomorphic evaluation of the kind

862
00:30:56,480 --> 00:30:58,159
of interpreter algorithm

863
00:30:58,159 --> 00:30:59,600
and so kind of if

864
00:30:59,600 --> 00:31:02,080
if um executing the interpreter if the

865
00:31:02,080 --> 00:31:03,919
instructions for using the obfuscated

866
00:31:03,919 --> 00:31:05,440
state say

867
00:31:05,440 --> 00:31:07,360
you know do some quantum computations

868
00:31:07,360 --> 00:31:10,080
then make a query to the random oracle

869
00:31:10,080 --> 00:31:11,760
and then continue well okay how do you

870
00:31:11,760 --> 00:31:14,960
homomorphically evaluate that

871
00:31:14,960 --> 00:31:16,960
it's not clear

872
00:31:16,960 --> 00:31:19,039
on the other hand let me just say

873
00:31:19,039 --> 00:31:20,640
if you instantiate the random oracle

874
00:31:20,640 --> 00:31:22,640
with any function at all no matter how

875
00:31:22,640 --> 00:31:24,880
fancy then it is clear exactly what to

876
00:31:24,880 --> 00:31:26,640
do and then the impossibility proof goes

877
00:31:26,640 --> 00:31:27,600
through

878
00:31:27,600 --> 00:31:29,039
um

879
00:31:29,039 --> 00:31:32,000
well yeah i i guess there is also a

880
00:31:32,000 --> 00:31:33,600
super you know the question is do you

881
00:31:33,600 --> 00:31:36,080
standard random oracle model or quantum

882
00:31:36,080 --> 00:31:38,000
random oracle model i'm not sure about

883
00:31:38,000 --> 00:31:40,000
generic group so but what i'm saying is

884
00:31:40,000 --> 00:31:42,480
the standard at least random or so yeah

885
00:31:42,480 --> 00:31:44,399
definitely in eurom i mentioned there

886
00:31:44,399 --> 00:31:45,919
could be all kinds of complications the

887
00:31:45,919 --> 00:31:47,600
standard the complication you said

888
00:31:47,600 --> 00:31:50,000
exists but i think zero classical works

889
00:31:50,000 --> 00:31:51,120
i think like

890
00:31:51,120 --> 00:31:54,080
ron owner maybe i had some paper raphael

891
00:31:54,080 --> 00:31:56,559
had some papers i i think

892
00:31:56,559 --> 00:31:58,640
that showed that the traditional vvb

893
00:31:58,640 --> 00:32:01,279
application is not possible and

894
00:32:01,279 --> 00:32:03,279
even this in the classical random oracle

895
00:32:03,279 --> 00:32:05,760
model or even generic group models if i

896
00:32:05,760 --> 00:32:07,679
remember correctly so so i'm just

897
00:32:07,679 --> 00:32:09,360
curious with those results if you just

898
00:32:09,360 --> 00:32:11,679
naively apply them

899
00:32:11,679 --> 00:32:14,480
probably some kind of copying step uh if

900
00:32:14,480 --> 00:32:16,559
you at least look at those results

901
00:32:16,559 --> 00:32:19,120
um you know if they you know if they are

902
00:32:19,120 --> 00:32:22,000
amenable to your technique

903
00:32:22,000 --> 00:32:24,559
uh i don't know

904
00:32:24,559 --> 00:32:25,519
um

905
00:32:25,519 --> 00:32:26,960
i can

906
00:32:26,960 --> 00:32:29,519
i can answer that so the the paper

907
00:32:29,519 --> 00:32:31,279
you're referring to guinea like goes

908
00:32:31,279 --> 00:32:33,679
from um like something in the rhino

909
00:32:33,679 --> 00:32:35,200
oracle models to something in the plane

910
00:32:35,200 --> 00:32:36,320
model and then they invoke the

911
00:32:36,320 --> 00:32:38,799
impossibility of the plane result

912
00:32:38,799 --> 00:32:40,399
what they get in the plane model is like

913
00:32:40,399 --> 00:32:42,480
an approximate scheme so if you get

914
00:32:42,480 --> 00:32:44,559
if you can show uh impossibility of

915
00:32:44,559 --> 00:32:46,000
approximate

916
00:32:46,000 --> 00:32:49,279
um like qvvv then the result will go

917
00:32:49,279 --> 00:32:51,519
through

918
00:32:52,159 --> 00:32:54,640
okay but it's not obvious it's not known

919
00:32:54,640 --> 00:32:57,279
yet you're saying it's uh yeah i mean

920
00:32:57,279 --> 00:32:59,519
to go from uh if you're just carrying if

921
00:32:59,519 --> 00:33:01,120
you just care about the classical random

922
00:33:01,120 --> 00:33:02,399
original model where the queries are

923
00:33:02,399 --> 00:33:04,880
classical then that result goes through

924
00:33:04,880 --> 00:33:06,480
when the quantum center

925
00:33:06,480 --> 00:33:08,480
okay

926
00:33:08,480 --> 00:33:10,640
yeah because these results rule out vbb

927
00:33:10,640 --> 00:33:12,080
even with

928
00:33:12,080 --> 00:33:15,199
some non-negligible

929
00:33:15,279 --> 00:33:18,240
functional equivalents

930
00:33:19,120 --> 00:33:21,519
thank you yeah

931
00:33:21,519 --> 00:33:24,320
uh okay so real quick so i just answered

932
00:33:24,320 --> 00:33:26,480
the question on the uh why is it called

933
00:33:26,480 --> 00:33:28,640
on the uh

934
00:33:28,640 --> 00:33:30,480
unzu liv but then i checked with my

935
00:33:30,480 --> 00:33:32,559
co-author it turns out i answered it

936
00:33:32,559 --> 00:33:35,200
wrong so uh if daniel is here please uh

937
00:33:35,200 --> 00:33:38,240
check the uh zulip for the

938
00:33:38,240 --> 00:33:40,320
updated answer and sorry about the

939
00:33:40,320 --> 00:33:42,799
confusion

940
00:33:43,919 --> 00:33:46,159
okay

941
00:33:47,360 --> 00:33:49,120
anyone else

942
00:33:49,120 --> 00:33:52,120
questions

943
00:33:53,600 --> 00:33:55,360
okay so uh

944
00:33:55,360 --> 00:33:57,039
thank you everyone for a great session

945
00:33:57,039 --> 00:33:59,360
it's been

