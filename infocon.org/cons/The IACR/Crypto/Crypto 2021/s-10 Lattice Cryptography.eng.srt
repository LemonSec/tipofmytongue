1
00:00:00,160 --> 00:00:02,880
one moment

2
00:00:05,120 --> 00:00:07,040
good to go have a good session

3
00:00:07,040 --> 00:00:08,400
thank you

4
00:00:08,400 --> 00:00:10,719
so welcome everyone to

5
00:00:10,719 --> 00:00:13,280
the session on latest cryptography

6
00:00:13,280 --> 00:00:17,199
we will have five talks and each talk

7
00:00:17,199 --> 00:00:20,000
will be for five minutes

8
00:00:20,000 --> 00:00:23,279
and the questions will be handled after

9
00:00:23,279 --> 00:00:25,760
all the talks so for the speakers please

10
00:00:25,760 --> 00:00:28,080
stay awake until the end of all the

11
00:00:28,080 --> 00:00:29,359
talks and

12
00:00:29,359 --> 00:00:32,558
we'll come back to you at the end

13
00:00:32,558 --> 00:00:34,399
so i'm happy to announce our first

14
00:00:34,399 --> 00:00:35,600
speaker

15
00:00:35,600 --> 00:00:36,640
um

16
00:00:36,640 --> 00:00:38,640
first talk will be on subtractive sets

17
00:00:38,640 --> 00:00:41,200
over subatomic rings limitations of

18
00:00:41,200 --> 00:00:43,520
snow-like arguments over

19
00:00:43,520 --> 00:00:46,079
then the talk will be given by russell a

20
00:00:46,079 --> 00:00:49,280
russell please go ahead

21
00:00:49,280 --> 00:00:51,440
yeah thanks for the introduction

22
00:00:51,440 --> 00:00:53,680
so i'm i'm russell uh can you see my

23
00:00:53,680 --> 00:00:56,160
slides

24
00:00:56,559 --> 00:00:58,480
okay so i'm russell i'm going to talk

25
00:00:58,480 --> 00:01:00,320
about subjective sets of psychotherapy

26
00:01:00,320 --> 00:01:01,280
rings

27
00:01:01,280 --> 00:01:02,960
and this is a joint work with martin

28
00:01:02,960 --> 00:01:05,119
arrect

29
00:01:05,119 --> 00:01:06,960
okay so let's dive straight into the

30
00:01:06,960 --> 00:01:07,920
question

31
00:01:07,920 --> 00:01:10,159
and so the setting of this work is that

32
00:01:10,159 --> 00:01:11,600
we can't see the

33
00:01:11,600 --> 00:01:14,560
ring r and let

34
00:01:14,560 --> 00:01:16,479
s be a special element of the ring

35
00:01:16,479 --> 00:01:19,360
called the slack and let some set c be

36
00:01:19,360 --> 00:01:21,840
an arbitrary subset of r

37
00:01:21,840 --> 00:01:24,400
so given these we can consider any

38
00:01:24,400 --> 00:01:27,840
subset big t of c where big t is of size

39
00:01:27,840 --> 00:01:28,960
small t

40
00:01:28,960 --> 00:01:31,920
and we can define a venomous matrix of

41
00:01:31,920 --> 00:01:34,960
dimension t of t dimension and

42
00:01:34,960 --> 00:01:37,119
where the rows are given by the powers

43
00:01:37,119 --> 00:01:39,680
of the elements of big t

44
00:01:39,680 --> 00:01:41,520
and so given this setting we asked the

45
00:01:41,520 --> 00:01:43,119
following question

46
00:01:43,119 --> 00:01:45,600
when are the vendor mode systems defined

47
00:01:45,600 --> 00:01:48,799
by the slack s and the set t

48
00:01:48,799 --> 00:01:51,840
solvable over the ring r and by solving

49
00:01:51,840 --> 00:01:55,680
it over r i mean to find uh the vector z

50
00:01:55,680 --> 00:01:59,040
of ring element so that it satisfies the

51
00:01:59,040 --> 00:02:02,399
given uh system of equations

52
00:02:02,399 --> 00:02:04,640
so why do we care about this

53
00:02:04,640 --> 00:02:07,439
in for the duo when i want venomous

54
00:02:07,439 --> 00:02:10,160
system where it is defined by the

55
00:02:10,160 --> 00:02:12,480
transverse of a venomous matrix

56
00:02:12,480 --> 00:02:14,640
we care because we need to solve this

57
00:02:14,640 --> 00:02:17,520
kind of equations when we construct the

58
00:02:17,520 --> 00:02:19,599
knowledge extractors for snow like

59
00:02:19,599 --> 00:02:20,640
arguments

60
00:02:20,640 --> 00:02:23,200
that is space small like arguments

61
00:02:23,200 --> 00:02:25,840
and in these arguments we will use the

62
00:02:25,840 --> 00:02:28,400
set c as the challenge set and the size

63
00:02:28,400 --> 00:02:29,280
of

64
00:02:29,280 --> 00:02:31,920
the set c is inversely proportional to

65
00:02:31,920 --> 00:02:34,160
the knowledge error and so we want the

66
00:02:34,160 --> 00:02:36,720
chun so we want this set c to be as

67
00:02:36,720 --> 00:02:38,560
large as possible

68
00:02:38,560 --> 00:02:41,200
and the value t determines the type of

69
00:02:41,200 --> 00:02:43,920
arguments that we have so for example uh

70
00:02:43,920 --> 00:02:46,239
for t equals two we have the lattice

71
00:02:46,239 --> 00:02:48,560
analog of the classic short proof and

72
00:02:48,560 --> 00:02:50,560
for it equals three we have the lattice

73
00:02:50,560 --> 00:02:52,640
analog of bulletproof

74
00:02:52,640 --> 00:02:55,680
so finally we want that the

75
00:02:55,680 --> 00:02:57,760
norm of the slack s and the norm of the

76
00:02:57,760 --> 00:03:00,239
elements in c to be short so that our

77
00:03:00,239 --> 00:03:04,159
extractor can extract a good weakness

78
00:03:04,159 --> 00:03:06,720
so moving to the primal case we care

79
00:03:06,720 --> 00:03:08,560
because we need to solve this kind of

80
00:03:08,560 --> 00:03:12,080
systems when constructing lattice-based

81
00:03:12,080 --> 00:03:14,239
t out of n threshold primitives

82
00:03:14,239 --> 00:03:17,200
by combining linearly almost linearly

83
00:03:17,200 --> 00:03:19,519
homomorphic primitives with xiaomi

84
00:03:19,519 --> 00:03:21,440
secret sharing scheme

85
00:03:21,440 --> 00:03:23,360
and so in these constructions we will

86
00:03:23,360 --> 00:03:24,480
use

87
00:03:24,480 --> 00:03:26,879
the set c as the set of evaluation

88
00:03:26,879 --> 00:03:28,879
points for the shamier scheme

89
00:03:28,879 --> 00:03:31,760
and naturally the size of c is the

90
00:03:31,760 --> 00:03:33,920
number of shareholders and

91
00:03:33,920 --> 00:03:37,200
and t is the recovery threshold

92
00:03:37,200 --> 00:03:39,360
so since lattice-based

93
00:03:39,360 --> 00:03:41,200
linearly homomorphic primitives are

94
00:03:41,200 --> 00:03:43,920
often only almost homomorphic but not

95
00:03:43,920 --> 00:03:45,040
exactly

96
00:03:45,040 --> 00:03:47,840
so we want again the norm of uh just

97
00:03:47,840 --> 00:03:50,400
like s and the norm of the elements in c

98
00:03:50,400 --> 00:03:52,239
to be short so that

99
00:03:52,239 --> 00:03:54,080
when we perform linear operations

100
00:03:54,080 --> 00:03:56,000
homomorphically we don't blow up the

101
00:03:56,000 --> 00:03:57,439
noise

102
00:03:57,439 --> 00:03:59,599
and so given this we define the notion

103
00:03:59,599 --> 00:04:01,680
of st subtractive sets

104
00:04:01,680 --> 00:04:04,480
we say that c is st subjective if for

105
00:04:04,480 --> 00:04:06,959
any t subset big t of c

106
00:04:06,959 --> 00:04:10,319
this divisibility condition is satisfied

107
00:04:10,319 --> 00:04:13,280
and if s equals 1 we say that as we say

108
00:04:13,280 --> 00:04:16,000
that the set c is subtractive or we say

109
00:04:16,000 --> 00:04:18,560
that there is no slack

110
00:04:18,560 --> 00:04:20,399
okay so why do we define subtractive

111
00:04:20,399 --> 00:04:21,918
sets this way

112
00:04:21,918 --> 00:04:24,320
it's because if the set c is st

113
00:04:24,320 --> 00:04:25,840
subtractive

114
00:04:25,840 --> 00:04:28,800
then for any t subset big t of c

115
00:04:28,800 --> 00:04:30,720
we have that the venomous systems we've

116
00:04:30,720 --> 00:04:33,759
defined by s and big t are solvable over

117
00:04:33,759 --> 00:04:35,440
r

118
00:04:35,440 --> 00:04:36,560
okay so

119
00:04:36,560 --> 00:04:39,759
let me summarize our results of st

120
00:04:39,759 --> 00:04:43,360
subjective sets over psychothermic rings

121
00:04:43,360 --> 00:04:45,600
so first of all we consider the setting

122
00:04:45,600 --> 00:04:48,400
of prime power psychothermic rings where

123
00:04:48,400 --> 00:04:50,080
the ring r is

124
00:04:50,080 --> 00:04:51,919
constructed by taking the ring of

125
00:04:51,919 --> 00:04:54,960
rational integers z and adjoining it

126
00:04:54,960 --> 00:04:56,080
with

127
00:04:56,080 --> 00:05:00,800
a primitive p to the l root of unity

128
00:05:00,800 --> 00:05:02,639
so in this setting we have the following

129
00:05:02,639 --> 00:05:05,440
positive result we say we can show that

130
00:05:05,440 --> 00:05:08,320
this set c which is of size p

131
00:05:08,320 --> 00:05:11,680
is subtractive so there is no slack

132
00:05:11,680 --> 00:05:13,680
and on the negative side we show that

133
00:05:13,680 --> 00:05:16,080
there is simply no subtractive set of

134
00:05:16,080 --> 00:05:18,479
size strictly greater than p

135
00:05:18,479 --> 00:05:21,120
and therefore this positive result is

136
00:05:21,120 --> 00:05:22,840
optimal in this

137
00:05:22,840 --> 00:05:25,919
setting and next we move to the power of

138
00:05:25,919 --> 00:05:29,759
two setting where the ring r is again

139
00:05:29,759 --> 00:05:31,600
constructed by taking the ring of

140
00:05:31,600 --> 00:05:34,560
rational integers and adjoining it with

141
00:05:34,560 --> 00:05:37,600
an m fruit of unity this time m m is the

142
00:05:37,600 --> 00:05:39,680
power of two

143
00:05:39,680 --> 00:05:41,600
and so in this setting we can construct

144
00:05:41,600 --> 00:05:42,320
a

145
00:05:42,320 --> 00:05:44,960
large family of st subjective sets for a

146
00:05:44,960 --> 00:05:48,000
wide range of s and t and they are of uh

147
00:05:48,000 --> 00:05:49,440
different sizes

148
00:05:49,440 --> 00:05:52,080
and as the special case we showed that

149
00:05:52,080 --> 00:05:54,720
this set here which is of size m over

150
00:05:54,720 --> 00:05:57,520
two plus one is a two free subjective

151
00:05:57,520 --> 00:05:59,759
set and in particular this gives us a

152
00:05:59,759 --> 00:06:02,560
lattice-based bulletproof

153
00:06:02,560 --> 00:06:04,319
and on the negative side we show that

154
00:06:04,319 --> 00:06:06,319
there is no family of two t subjective

155
00:06:06,319 --> 00:06:09,120
sets where the m set of this family is

156
00:06:09,120 --> 00:06:12,319
of size strictly greater than n plus one

157
00:06:12,319 --> 00:06:14,720
okay so that concludes the short version

158
00:06:14,720 --> 00:06:17,600
of this talk thank you

159
00:06:18,479 --> 00:06:20,960
thank you russell

160
00:06:20,960 --> 00:06:23,919
uh please stay here until the end of the

161
00:06:23,919 --> 00:06:24,880
session

162
00:06:24,880 --> 00:06:27,440
you may be asked some questions

163
00:06:27,440 --> 00:06:28,960
so now let's move on to the second

164
00:06:28,960 --> 00:06:30,720
speaker

165
00:06:30,720 --> 00:06:32,000
uh

166
00:06:32,000 --> 00:06:33,280
i think it will be

167
00:06:33,280 --> 00:06:35,199
thomas antenna thomas could you please

168
00:06:35,199 --> 00:06:38,080
start sharing yeah thank you

169
00:06:38,080 --> 00:06:41,440
um so our next talk

170
00:06:41,440 --> 00:06:43,520
will be on a compressed sigma protocol

171
00:06:43,520 --> 00:06:45,600
serophilitis and the talk will be given

172
00:06:45,600 --> 00:06:49,599
by thomas atema

173
00:06:49,599 --> 00:06:52,080
thank you can you see my screen

174
00:06:52,080 --> 00:06:53,599
yeah perfect

175
00:06:53,599 --> 00:06:55,680
uh so i indeed i will be talking about

176
00:06:55,680 --> 00:06:57,440
the compressed sigma protocol theory for

177
00:06:57,440 --> 00:06:59,599
lattices and this is joint work with

178
00:06:59,599 --> 00:07:03,840
ronald cramer and lisa cole

179
00:07:03,840 --> 00:07:04,560
so

180
00:07:04,560 --> 00:07:06,400
the setting that we are considering is

181
00:07:06,400 --> 00:07:08,319
zero knowledge protocols for general

182
00:07:08,319 --> 00:07:10,800
constraints satisfiability so basically

183
00:07:10,800 --> 00:07:12,880
what we aim to do is to

184
00:07:12,880 --> 00:07:15,039
devise a protocol for proving that the

185
00:07:15,039 --> 00:07:17,039
commitment opening satisfies an

186
00:07:17,039 --> 00:07:19,759
arbitrary constraint so in this case or

187
00:07:19,759 --> 00:07:21,759
in this situation we capture this

188
00:07:21,759 --> 00:07:24,720
constraint by some arbitrary function f

189
00:07:24,720 --> 00:07:27,120
and we want to prove that f x equals

190
00:07:27,120 --> 00:07:28,960
zero where x is the opening of the

191
00:07:28,960 --> 00:07:30,400
commitment

192
00:07:30,400 --> 00:07:32,639
and we want to do this in zero knowledge

193
00:07:32,639 --> 00:07:33,759
so that

194
00:07:33,759 --> 00:07:35,759
after running the protocol no

195
00:07:35,759 --> 00:07:37,280
information

196
00:07:37,280 --> 00:07:39,759
about this commitment opening is

197
00:07:39,759 --> 00:07:41,759
released except the

198
00:07:41,759 --> 00:07:45,759
the ferocity of this claim

199
00:07:45,759 --> 00:07:48,000
the goal that that

200
00:07:48,000 --> 00:07:50,319
that we are aiming to achieve is that we

201
00:07:50,319 --> 00:07:51,759
do this with a low communication

202
00:07:51,759 --> 00:07:55,759
complexity for arbitrary functions f

203
00:07:55,759 --> 00:07:58,080
and we want to have a letters-based

204
00:07:58,080 --> 00:07:59,599
instantiation

205
00:07:59,599 --> 00:08:01,120
and we also want to have commit and

206
00:08:01,120 --> 00:08:03,280
proof functionality so basically that

207
00:08:03,280 --> 00:08:05,039
the commitment is

208
00:08:05,039 --> 00:08:07,520
generated at some point and at a later

209
00:08:07,520 --> 00:08:09,919
stage a proofer is able to prove that

210
00:08:09,919 --> 00:08:12,160
this committed value satisfies certain

211
00:08:12,160 --> 00:08:14,720
properties

212
00:08:15,440 --> 00:08:17,840
so there's been some related work on

213
00:08:17,840 --> 00:08:19,919
this topic on lettuce-based

214
00:08:19,919 --> 00:08:23,919
zero knowledge protocols at crypto 2018

215
00:08:23,919 --> 00:08:25,360
the first subliner circuits circuit

216
00:08:25,360 --> 00:08:26,879
sharing knowledge protocol from lattice

217
00:08:26,879 --> 00:08:28,240
assumptions was

218
00:08:28,240 --> 00:08:29,599
introduced

219
00:08:29,599 --> 00:08:31,280
uh they indeed have a sublinear

220
00:08:31,280 --> 00:08:33,120
communication complexity but their

221
00:08:33,120 --> 00:08:34,958
communication complexity is not poly

222
00:08:34,958 --> 00:08:37,360
logarithmic

223
00:08:37,360 --> 00:08:39,919
crypto last year and there was a

224
00:08:39,919 --> 00:08:41,599
letters-based instantiation of the

225
00:08:41,599 --> 00:08:44,080
bulletproof protocol

226
00:08:44,080 --> 00:08:46,399
they do have a poly-logarithmic

227
00:08:46,399 --> 00:08:48,560
communication complexity

228
00:08:48,560 --> 00:08:50,240
but their protocol is restricted to

229
00:08:50,240 --> 00:08:52,880
proving knowledge of an sis pre-image

230
00:08:52,880 --> 00:08:55,040
so their protocol does not allow proving

231
00:08:55,040 --> 00:08:57,120
that a committed sector satisfy some

232
00:08:57,120 --> 00:09:00,240
arbitrary constraints

233
00:09:00,240 --> 00:09:02,160
and also the protocol is not zero

234
00:09:02,160 --> 00:09:03,760
knowledge and it is tailored to a

235
00:09:03,760 --> 00:09:07,640
specific lattice instantiation

236
00:09:08,240 --> 00:09:10,320
uh there are also two uh concurrent

237
00:09:10,320 --> 00:09:12,959
works presented that crypto this year so

238
00:09:12,959 --> 00:09:15,279
we just saw uh

239
00:09:15,279 --> 00:09:19,360
the presentation uh by russell ly

240
00:09:19,360 --> 00:09:22,640
on limits of certain letters based zero

241
00:09:22,640 --> 00:09:24,800
knowledge arguments

242
00:09:24,800 --> 00:09:26,800
and i guess tomorrow there will be a

243
00:09:26,800 --> 00:09:30,240
presentation uh in which an application

244
00:09:30,240 --> 00:09:32,720
of the theory of some check arguments to

245
00:09:32,720 --> 00:09:34,800
let us basic since

246
00:09:34,800 --> 00:09:37,360
zero knowledge protocols will be

247
00:09:37,360 --> 00:09:39,920
explained

248
00:09:41,680 --> 00:09:44,560
okay so another prior work uh presented

249
00:09:44,560 --> 00:09:47,200
crypto last year is compressed sigma

250
00:09:47,200 --> 00:09:49,120
protocol theory and the high level

251
00:09:49,120 --> 00:09:51,839
paradigm of this theory is that and they

252
00:09:51,839 --> 00:09:53,040
want to achieve circuits during

253
00:09:53,040 --> 00:09:54,560
knowledge protocols by solving the

254
00:09:54,560 --> 00:09:56,800
linear instances first and then

255
00:09:56,800 --> 00:10:00,399
linearizing non-linearities

256
00:10:00,399 --> 00:10:02,640
and their approach basically starts with

257
00:10:02,640 --> 00:10:05,120
a natural sigma protocol for

258
00:10:05,120 --> 00:10:07,120
proving linear constraints

259
00:10:07,120 --> 00:10:08,240
so that's

260
00:10:08,240 --> 00:10:09,839
much simpler than proving non-linear

261
00:10:09,839 --> 00:10:12,480
constraints

262
00:10:12,480 --> 00:10:14,880
and this this natural sigma protocol has

263
00:10:14,880 --> 00:10:17,279
a linear communication complexity

264
00:10:17,279 --> 00:10:19,200
so they use an adaptation of the

265
00:10:19,200 --> 00:10:21,760
bulletproof proof of knowledge

266
00:10:21,760 --> 00:10:23,920
to compress the communication complexity

267
00:10:23,920 --> 00:10:26,640
of this natural sigma protocol from

268
00:10:26,640 --> 00:10:30,560
linear down to logarithmic so combined

269
00:10:30,560 --> 00:10:33,440
in these results in a protocol for

270
00:10:33,440 --> 00:10:35,200
proving linear relations with a

271
00:10:35,200 --> 00:10:39,120
logarithmic communication complexity

272
00:10:39,680 --> 00:10:41,600
and then they have a linearization

273
00:10:41,600 --> 00:10:42,720
strategy

274
00:10:42,720 --> 00:10:45,600
to linearize nonlinear instances you can

275
00:10:45,600 --> 00:10:47,440
apply this linearization strategy in a

276
00:10:47,440 --> 00:10:49,440
black box manner and it uses arithmetic

277
00:10:49,440 --> 00:10:52,160
secret sharing

278
00:10:53,200 --> 00:10:54,399
this theory has a number of

279
00:10:54,399 --> 00:10:56,800
instantiations it has been shown to

280
00:10:56,800 --> 00:10:58,240
achieve logarithmic communication

281
00:10:58,240 --> 00:10:59,760
complexity when it's based on for

282
00:10:59,760 --> 00:11:02,000
example discrete log or strong rsa

283
00:11:02,000 --> 00:11:03,360
assumption

284
00:11:03,360 --> 00:11:05,120
you can even get constant communication

285
00:11:05,120 --> 00:11:07,600
complexity under under a knowledge of

286
00:11:07,600 --> 00:11:08,690
exponent assumption

287
00:11:08,690 --> 00:11:09,920
[Music]

288
00:11:09,920 --> 00:11:12,399
and and you can also instantiate it with

289
00:11:12,399 --> 00:11:15,839
parent-based languages

290
00:11:15,839 --> 00:11:17,839
so a natural question that arises is

291
00:11:17,839 --> 00:11:19,519
whether we can also instantiate this

292
00:11:19,519 --> 00:11:23,040
theory from lattice assumptions

293
00:11:23,040 --> 00:11:24,320
and that's what this

294
00:11:24,320 --> 00:11:25,920
work is about so we present the letters

295
00:11:25,920 --> 00:11:27,519
based instantiation of this compressed

296
00:11:27,519 --> 00:11:29,440
sigma protocol to you

297
00:11:29,440 --> 00:11:31,920
and intuitively

298
00:11:31,920 --> 00:11:34,240
it's quite clear that you should be able

299
00:11:34,240 --> 00:11:36,640
to do this because we have a homomorphic

300
00:11:36,640 --> 00:11:39,200
ring sis based commitment scheme

301
00:11:39,200 --> 00:11:41,360
and plugging in this homomorphic

302
00:11:41,360 --> 00:11:42,959
commitment scheme into

303
00:11:42,959 --> 00:11:43,839
the

304
00:11:43,839 --> 00:11:45,920
compressed sigma protocol theory should

305
00:11:45,920 --> 00:11:47,360
result in circuit serum knowledge

306
00:11:47,360 --> 00:11:48,800
protocols with poly logarithmic

307
00:11:48,800 --> 00:11:50,240
communication

308
00:11:50,240 --> 00:11:52,079
so this is indeed the case but some

309
00:11:52,079 --> 00:11:54,480
challenges have to be

310
00:11:54,480 --> 00:11:57,680
tackled or handled before you you get

311
00:11:57,680 --> 00:11:59,040
all of this

312
00:11:59,040 --> 00:12:01,120
so we have some standard challenges uh

313
00:12:01,120 --> 00:12:02,959
such as sound and slack approximation

314
00:12:02,959 --> 00:12:05,360
factors uh rejection sampling these

315
00:12:05,360 --> 00:12:06,720
these kind of challenges are also

316
00:12:06,720 --> 00:12:08,560
encountered in

317
00:12:08,560 --> 00:12:10,399
lattice instantiations of standard sigma

318
00:12:10,399 --> 00:12:11,680
protocols

319
00:12:11,680 --> 00:12:12,720
um

320
00:12:12,720 --> 00:12:15,519
so we already sort of know how to deal

321
00:12:15,519 --> 00:12:17,440
with them we do have to be a bit more

322
00:12:17,440 --> 00:12:19,920
careful because compressed sigma

323
00:12:19,920 --> 00:12:22,480
protocols have a logarithmic number of

324
00:12:22,480 --> 00:12:23,440
rounds

325
00:12:23,440 --> 00:12:26,079
where standard sigma protocols only have

326
00:12:26,079 --> 00:12:27,600
three rounds

327
00:12:27,600 --> 00:12:29,600
so we do have to be a bit more careful

328
00:12:29,600 --> 00:12:31,600
and our contribution in this regard is

329
00:12:31,600 --> 00:12:34,000
that we present an abstract framework

330
00:12:34,000 --> 00:12:37,200
capturing various design choices

331
00:12:37,200 --> 00:12:40,720
so that simplifies the analysis of

332
00:12:40,720 --> 00:12:44,320
of these kinds of protocols

333
00:12:44,399 --> 00:12:46,560
so second uh we have to be a bit more

334
00:12:46,560 --> 00:12:49,040
careful with the extractor analysis so

335
00:12:49,040 --> 00:12:50,800
let us institutions typically have much

336
00:12:50,800 --> 00:12:52,560
smaller challenge sets and therefore

337
00:12:52,560 --> 00:12:55,040
larger knowledge errors

338
00:12:55,040 --> 00:12:58,079
um so it's it's important to have like

339
00:12:58,079 --> 00:13:00,399
to have a tight extractor analysis

340
00:13:00,399 --> 00:13:02,720
and uh prior to this work there there

341
00:13:02,720 --> 00:13:05,519
was no tight extractor analysis for

342
00:13:05,519 --> 00:13:07,519
these kinds of protocols yet

343
00:13:07,519 --> 00:13:11,440
so that's something that we present

344
00:13:12,720 --> 00:13:15,440
also we present a new apparel repetition

345
00:13:15,440 --> 00:13:16,639
theorem

346
00:13:16,639 --> 00:13:18,399
and that's required in these lattice

347
00:13:18,399 --> 00:13:20,160
instantiations because of this small

348
00:13:20,160 --> 00:13:22,160
knowledge error or a large knowledge

349
00:13:22,160 --> 00:13:24,160
error we have a large knowledge error so

350
00:13:24,160 --> 00:13:26,160
we have to repeat

351
00:13:26,160 --> 00:13:28,320
the protocol in parallel

352
00:13:28,320 --> 00:13:30,240
and for this reason we present a normal

353
00:13:30,240 --> 00:13:32,240
parallel repetition theorem showing that

354
00:13:32,240 --> 00:13:35,680
indeed barrel repetition decreases

355
00:13:35,680 --> 00:13:39,920
the knowledge error as we would expect

356
00:13:40,399 --> 00:13:42,880
and finally we present some adaptations

357
00:13:42,880 --> 00:13:43,920
to the

358
00:13:43,920 --> 00:13:46,800
linearization strategy that allows

359
00:13:46,800 --> 00:13:48,880
us to handle non-linear instances so to

360
00:13:48,880 --> 00:13:50,480
be able to prove

361
00:13:50,480 --> 00:13:52,399
that a committed factor satisfies

362
00:13:52,399 --> 00:13:56,160
arbitrary numbering constraints

363
00:13:56,399 --> 00:14:00,240
uh thanks it was the presentation

364
00:14:00,240 --> 00:14:02,720
thank you thomas

365
00:14:02,720 --> 00:14:04,720
uh around the virtual applause go go to

366
00:14:04,720 --> 00:14:05,519
you

367
00:14:05,519 --> 00:14:07,199
uh so our next speaker

368
00:14:07,199 --> 00:14:08,560
uh is

369
00:14:08,560 --> 00:14:10,240
chew i hope i pronounced your name

370
00:14:10,240 --> 00:14:11,279
correctly

371
00:14:11,279 --> 00:14:13,199
uh yeah we see your slice could you

372
00:14:13,199 --> 00:14:14,959
please make them false free perfect

373
00:14:14,959 --> 00:14:17,040
thank you so

374
00:14:17,040 --> 00:14:20,240
our next speaker will be shu katsumata

375
00:14:20,240 --> 00:14:22,560
who will present his work on a new

376
00:14:22,560 --> 00:14:24,560
simple technique to bootstrap various

377
00:14:24,560 --> 00:14:26,480
slightest zero knowledge proofs to cure

378
00:14:26,480 --> 00:14:29,199
secured musics go ahead

379
00:14:29,199 --> 00:14:30,880
uh thank you for the introduction so my

380
00:14:30,880 --> 00:14:35,120
name is shu and i'm from aisd ice

381
00:14:35,120 --> 00:14:36,240
so

382
00:14:36,240 --> 00:14:38,480
our result in a nutshell is that uh we

383
00:14:38,480 --> 00:14:41,199
provide a simple semi-generic method

384
00:14:41,199 --> 00:14:43,360
to construct um

385
00:14:43,360 --> 00:14:44,480
wait uh

386
00:14:44,480 --> 00:14:48,320
can i just change this screen

387
00:14:48,800 --> 00:14:51,600
how do i erase like my face from the

388
00:14:51,600 --> 00:14:54,800
right column sign uh we do not see your

389
00:14:54,800 --> 00:14:56,880
face well at least i do not see your

390
00:14:56,880 --> 00:14:59,199
face so i mean i see all your slides

391
00:14:59,199 --> 00:15:01,120
perfectly well

392
00:15:01,120 --> 00:15:03,120
i think you can just continue like that

393
00:15:03,120 --> 00:15:05,680
oh well

394
00:15:07,199 --> 00:15:08,800
i think in the upper right there's a

395
00:15:08,800 --> 00:15:13,719
view menu in the native client

396
00:15:14,480 --> 00:15:17,199
yeah indeed

397
00:15:20,560 --> 00:15:24,479
uh you're muted sure you're needed

398
00:15:24,639 --> 00:15:27,839
oh you're still muted

399
00:15:31,920 --> 00:15:33,759
sorry about that um

400
00:15:33,759 --> 00:15:34,639
okay

401
00:15:34,639 --> 00:15:37,040
so right so a result is a simple

402
00:15:37,040 --> 00:15:38,959
semi-generic method to construct curable

403
00:15:38,959 --> 00:15:40,399
secure scarolatus phase zero knowledge

404
00:15:40,399 --> 00:15:43,440
proofs and what i mean by a semi-generic

405
00:15:43,440 --> 00:15:45,279
uh transform here is that it doesn't

406
00:15:45,279 --> 00:15:47,680
work for any sigma protocol but it does

407
00:15:47,680 --> 00:15:49,279
work for a lot of classes of

408
00:15:49,279 --> 00:15:51,920
lattice-based sigma protocols or in more

409
00:15:51,920 --> 00:15:54,079
general a public coin interactive

410
00:15:54,079 --> 00:15:57,120
critical it's a pcip protocol

411
00:15:57,120 --> 00:15:59,279
and um the thing is uh we introduced a

412
00:15:59,279 --> 00:16:00,880
new tool called extractable linear

413
00:16:00,880 --> 00:16:03,279
homomorphic commitment and if we plug

414
00:16:03,279 --> 00:16:05,839
this in as a wrapper on top of this uh

415
00:16:05,839 --> 00:16:08,240
pcip then we'll be able to get a qr

416
00:16:08,240 --> 00:16:10,000
obscure and izk

417
00:16:10,000 --> 00:16:12,000
and this will be a proof of knowledge

418
00:16:12,000 --> 00:16:13,279
and uh it's going to be online

419
00:16:13,279 --> 00:16:15,440
extractable so the proof is easy and it

420
00:16:15,440 --> 00:16:18,399
will be a tight security proof

421
00:16:18,399 --> 00:16:20,639
so again this work is about nic casing

422
00:16:20,639 --> 00:16:23,440
the curom so the program the verifier

423
00:16:23,440 --> 00:16:26,240
the honest people will only query this

424
00:16:26,240 --> 00:16:28,000
random article in a classical way but

425
00:16:28,000 --> 00:16:31,040
the adversary will able will be able to

426
00:16:31,040 --> 00:16:33,519
um make superposition queries this

427
00:16:33,519 --> 00:16:35,759
random article

428
00:16:35,759 --> 00:16:38,240
as any nick k is in the rom that we know

429
00:16:38,240 --> 00:16:40,079
so the recipe is that we'll start from a

430
00:16:40,079 --> 00:16:42,639
sigma protocol or a pciv protocol and

431
00:16:42,639 --> 00:16:44,800
then we'll squash that into an nizk

432
00:16:44,800 --> 00:16:48,000
using random oracles

433
00:16:48,000 --> 00:16:50,160
so this is a brief overview of the known

434
00:16:50,160 --> 00:16:52,959
sigma protocols to nizk transforms that

435
00:16:52,959 --> 00:16:54,160
we know of

436
00:16:54,160 --> 00:16:56,000
um sophia schumer i think this is

437
00:16:56,000 --> 00:16:57,360
something that everybody knows and this

438
00:16:57,360 --> 00:16:59,600
is what we want to use in practice

439
00:16:59,600 --> 00:17:01,279
so in the classical setting this is

440
00:17:01,279 --> 00:17:03,040
excellent because it works for any type

441
00:17:03,040 --> 00:17:04,559
of sigma protocol

442
00:17:04,559 --> 00:17:06,720
but in the quantum world

443
00:17:06,720 --> 00:17:08,319
things are a bit different because it

444
00:17:08,319 --> 00:17:10,480
only works for a type of sigma critical

445
00:17:10,480 --> 00:17:13,280
known as a collapsing sigma protocol

446
00:17:13,280 --> 00:17:16,000
and it's unclear whether existing let's

447
00:17:16,000 --> 00:17:17,919
say when you're giving one sigma

448
00:17:17,919 --> 00:17:19,359
protocol and showing whether it's

449
00:17:19,359 --> 00:17:21,599
collapsing or not sometimes it's trivial

450
00:17:21,599 --> 00:17:23,520
but sometimes it's not and we don't know

451
00:17:23,520 --> 00:17:25,439
whether all schemes are collapsing or

452
00:17:25,439 --> 00:17:27,039
not

453
00:17:27,039 --> 00:17:29,360
and um so the other transform is the

454
00:17:29,360 --> 00:17:31,600
under transform so this was really

455
00:17:31,600 --> 00:17:33,360
designated for the quantum setting and

456
00:17:33,360 --> 00:17:35,280
it works very well for the classical

457
00:17:35,280 --> 00:17:37,360
setting too but in the quantum setting

458
00:17:37,360 --> 00:17:40,240
um what we have is that uh it works for

459
00:17:40,240 --> 00:17:42,000
any type of sigma protocol so it doesn't

460
00:17:42,000 --> 00:17:44,080
have to be collapsing but the caviar is

461
00:17:44,080 --> 00:17:46,720
that the challenge space that it

462
00:17:46,720 --> 00:17:49,520
supports is only polynomially large

463
00:17:49,520 --> 00:17:51,919
so uh if you have a sigma protocol that

464
00:17:51,919 --> 00:17:54,640
supports uh an exponential size

465
00:17:54,640 --> 00:17:56,960
challenge set naturally then there's

466
00:17:56,960 --> 00:17:58,480
going to be a big proof overhead when

467
00:17:58,480 --> 00:18:01,200
you convert it into an izk because

468
00:18:01,200 --> 00:18:02,400
you need to do a lot of power

469
00:18:02,400 --> 00:18:06,640
repetitions to amplify the samus error

470
00:18:06,640 --> 00:18:08,559
but the good thing is that the proof of

471
00:18:08,559 --> 00:18:10,880
knowledge is straight line so it has a

472
00:18:10,880 --> 00:18:13,200
tighter proof compared to shimmer based

473
00:18:13,200 --> 00:18:15,440
ones because the fish smear it requires

474
00:18:15,440 --> 00:18:18,080
rewinding

475
00:18:18,640 --> 00:18:22,000
and this is a rough gra table or a slide

476
00:18:22,000 --> 00:18:23,919
about the recent classical rom

477
00:18:23,919 --> 00:18:27,679
lattice-based nic case or pcps

478
00:18:27,679 --> 00:18:30,160
so as you can see um

479
00:18:30,160 --> 00:18:32,799
only the really basic one is secure in

480
00:18:32,799 --> 00:18:35,919
the qram using fiat smear and if it

481
00:18:35,919 --> 00:18:37,840
becomes a bit more complex like so it's

482
00:18:37,840 --> 00:18:40,720
not the sis or the lv relation if it's a

483
00:18:40,720 --> 00:18:43,679
bit more complex and structured then we

484
00:18:43,679 --> 00:18:45,200
don't know how to apply the schmear but

485
00:18:45,200 --> 00:18:47,440
we do still know how to apply the under

486
00:18:47,440 --> 00:18:48,880
transform

487
00:18:48,880 --> 00:18:50,559
however the challenge set is going to be

488
00:18:50,559 --> 00:18:53,360
restricted to the polynomial large so

489
00:18:53,360 --> 00:18:55,200
there's going to be a blow-up compared

490
00:18:55,200 --> 00:18:57,039
to the classical setting where we can

491
00:18:57,039 --> 00:18:59,440
use exponential size

492
00:18:59,440 --> 00:19:01,120
and finally we have these five round

493
00:19:01,120 --> 00:19:03,120
protocols or even larger than five round

494
00:19:03,120 --> 00:19:05,280
protocols here it's a bit unclear

495
00:19:05,280 --> 00:19:07,039
because we don't know exactly whether

496
00:19:07,039 --> 00:19:09,120
the schmear or the under transform even

497
00:19:09,120 --> 00:19:10,799
applies

498
00:19:10,799 --> 00:19:13,120
so this is the current situation

499
00:19:13,120 --> 00:19:15,360
and this is our result which is a new

500
00:19:15,360 --> 00:19:17,120
transform so

501
00:19:17,120 --> 00:19:19,679
it partially answers the question in the

502
00:19:19,679 --> 00:19:21,440
sense that it's a semi-generic approach

503
00:19:21,440 --> 00:19:23,679
that sits somewhere between

504
00:19:23,679 --> 00:19:26,240
shamir and unruh

505
00:19:26,240 --> 00:19:28,240
so the property is that first of all it

506
00:19:28,240 --> 00:19:29,840
works very well with a lot of these

507
00:19:29,840 --> 00:19:32,320
lattice-based protocols or in gen in

508
00:19:32,320 --> 00:19:35,039
general it works for any pcip with a

509
00:19:35,039 --> 00:19:37,039
linear response which i'll explain a bit

510
00:19:37,039 --> 00:19:39,440
later and as i said the overhead is

511
00:19:39,440 --> 00:19:42,960
somewhere in between chameleon under

512
00:19:42,960 --> 00:19:44,880
and uh we have a proof of knowledge

513
00:19:44,880 --> 00:19:46,080
which is

514
00:19:46,080 --> 00:19:47,440
can be shown through straight line

515
00:19:47,440 --> 00:19:50,000
extractability so the proof is naturally

516
00:19:50,000 --> 00:19:51,840
very simple and the construction or the

517
00:19:51,840 --> 00:19:54,400
idea is really simple too so

518
00:19:54,400 --> 00:19:55,919
most of the arguments are basically

519
00:19:55,919 --> 00:19:58,480
classical

520
00:19:59,120 --> 00:20:02,240
so i have like a few one minute left so

521
00:20:02,240 --> 00:20:04,080
let me just give you the very rough

522
00:20:04,080 --> 00:20:06,080
intuition of the idea so let's start

523
00:20:06,080 --> 00:20:08,400
with the sigma protocol for an sis ldb

524
00:20:08,400 --> 00:20:10,720
relation so it's really not important

525
00:20:10,720 --> 00:20:13,679
why we i mean what these like symbols

526
00:20:13,679 --> 00:20:15,039
are it's just that we have a theorem

527
00:20:15,039 --> 00:20:17,440
protocol and the most important part is

528
00:20:17,440 --> 00:20:20,320
that the third flow of the prover is a

529
00:20:20,320 --> 00:20:23,600
linear response in the witness e and

530
00:20:23,600 --> 00:20:25,600
this randomness that used in the first

531
00:20:25,600 --> 00:20:26,960
flow r so

532
00:20:26,960 --> 00:20:28,480
for people who don't know about lattices

533
00:20:28,480 --> 00:20:30,240
you could think about schnorr protocol

534
00:20:30,240 --> 00:20:32,960
it has a weiner response to

535
00:20:32,960 --> 00:20:36,320
and uh when the prover sends this uh z

536
00:20:36,320 --> 00:20:38,480
as a third float the verify will

537
00:20:38,480 --> 00:20:41,280
implicitly check consistency of this

538
00:20:41,280 --> 00:20:43,679
witness e and this randomness are in a

539
00:20:43,679 --> 00:20:45,919
publicly fashion

540
00:20:45,919 --> 00:20:48,320
and this is how you kind of get a

541
00:20:48,320 --> 00:20:49,919
soundness but when you want to go to

542
00:20:49,919 --> 00:20:51,360
proof of knowledge

543
00:20:51,360 --> 00:20:53,360
uh you need to have two transcripts to

544
00:20:53,360 --> 00:20:55,039
extract the witness

545
00:20:55,039 --> 00:20:57,200
and the question is how do we kind of

546
00:20:57,200 --> 00:21:00,000
check this consistency and extract two

547
00:21:00,000 --> 00:21:00,840
uh

548
00:21:00,840 --> 00:21:02,799
transcripts without rewinding the

549
00:21:02,799 --> 00:21:05,200
adversary

550
00:21:05,200 --> 00:21:07,280
so this is the main idea which is to

551
00:21:07,280 --> 00:21:09,679
just add another consistency check on

552
00:21:09,679 --> 00:21:11,520
top of the original protocol

553
00:21:11,520 --> 00:21:12,720
so what we're going to do is that we're

554
00:21:12,720 --> 00:21:15,360
going to commit to the witness e and

555
00:21:15,360 --> 00:21:17,280
this randomness are through a linear

556
00:21:17,280 --> 00:21:20,080
homomorphic commitment scheme

557
00:21:20,080 --> 00:21:22,320
and we are going to add this verifier

558
00:21:22,320 --> 00:21:23,840
there's going to be a new consistency

559
00:21:23,840 --> 00:21:25,840
check that checks again about this

560
00:21:25,840 --> 00:21:28,080
witness e and this randoms are through

561
00:21:28,080 --> 00:21:30,000
this commitment scheme and it looks

562
00:21:30,000 --> 00:21:32,720
really simple and this is exactly all

563
00:21:32,720 --> 00:21:35,200
the construction that you need and to

564
00:21:35,200 --> 00:21:37,760
prove that you can extract is that uh

565
00:21:37,760 --> 00:21:39,520
you kind of have an extractable if you

566
00:21:39,520 --> 00:21:41,919
have extractable commitment scheme then

567
00:21:41,919 --> 00:21:43,840
you can use statistical arguments to

568
00:21:43,840 --> 00:21:45,360
argue that

569
00:21:45,360 --> 00:21:47,679
the approver must have committed to some

570
00:21:47,679 --> 00:21:50,240
valid e and r in the first round

571
00:21:50,240 --> 00:21:52,799
to have non-negligible advantage

572
00:21:52,799 --> 00:21:55,280
so uh that was a really brief overview

573
00:21:55,280 --> 00:21:57,440
but uh for more details uh you can see

574
00:21:57,440 --> 00:21:59,919
the full paper at this link or i did

575
00:21:59,919 --> 00:22:02,080
give an extended one-hour talk

576
00:22:02,080 --> 00:22:04,400
prior to this crypto talk so uh please

577
00:22:04,400 --> 00:22:06,880
just check it on my home page uh thank

578
00:22:06,880 --> 00:22:08,799
you for listening

579
00:22:08,799 --> 00:22:12,120
thank you shoe

580
00:22:13,440 --> 00:22:16,400
we can move on to the next speaker

581
00:22:16,400 --> 00:22:18,799
um

582
00:22:18,960 --> 00:22:19,919
uh

583
00:22:19,919 --> 00:22:22,559
congratulations start sharing your

584
00:22:22,559 --> 00:22:24,559
your screen thank you

585
00:22:24,559 --> 00:22:27,280
so the next topic is

586
00:22:27,280 --> 00:22:28,480
smile

587
00:22:28,480 --> 00:22:30,799
set membership from ideal lattices with

588
00:22:30,799 --> 00:22:32,640
applications to ring signatures and

589
00:22:32,640 --> 00:22:35,039
confidential transactions the talk will

590
00:22:35,039 --> 00:22:38,240
be given by khan guyan can the stage is

591
00:22:38,240 --> 00:22:40,799
yours

592
00:22:40,799 --> 00:22:42,320
okay thank you very much for the

593
00:22:42,320 --> 00:22:44,559
introduction hi everyone my name is khan

594
00:22:44,559 --> 00:22:47,200
i'm a pg student at ibm research and eth

595
00:22:47,200 --> 00:22:49,039
theory and today i'm going to talk about

596
00:22:49,039 --> 00:22:51,280
smile set membership from idea lattices

597
00:22:51,280 --> 00:22:52,880
with applications the ring signatures

598
00:22:52,880 --> 00:22:54,799
and confidential transactions

599
00:22:54,799 --> 00:22:56,159
so this is joint work with vadim

600
00:22:56,159 --> 00:22:58,960
yubazewski and gregor scila

601
00:22:58,960 --> 00:23:01,200
okay so let's start with the uh with the

602
00:23:01,200 --> 00:23:03,200
membership proof is as the name suggests

603
00:23:03,200 --> 00:23:05,600
we want to prove knowledge of a secret

604
00:23:05,600 --> 00:23:07,600
element small s which is contained in

605
00:23:07,600 --> 00:23:09,760
the public set capital s without

606
00:23:09,760 --> 00:23:11,520
revealing any information about our

607
00:23:11,520 --> 00:23:13,840
secret elements so in this interesting

608
00:23:13,840 --> 00:23:15,919
example we have the set s which consists

609
00:23:15,919 --> 00:23:17,679
of four socks the

610
00:23:17,679 --> 00:23:20,159
green red blue and orange one and let's

611
00:23:20,159 --> 00:23:21,600
say i have a green one and i want to

612
00:23:21,600 --> 00:23:23,760
prove that it is one in one of these

613
00:23:23,760 --> 00:23:25,760
four colors without revealing anything

614
00:23:25,760 --> 00:23:27,440
about the color

615
00:23:27,440 --> 00:23:28,480
um

616
00:23:28,480 --> 00:23:30,320
so in terms of applications it is

617
00:23:30,320 --> 00:23:32,320
closely related to so-called one out of

618
00:23:32,320 --> 00:23:35,120
many proofs defined by grove and colvis

619
00:23:35,120 --> 00:23:37,360
uh where we want to prove that one of

620
00:23:37,360 --> 00:23:39,360
the one of the commitments in the set is

621
00:23:39,360 --> 00:23:41,039
a commitment to zero

622
00:23:41,039 --> 00:23:42,080
then we have the standard

623
00:23:42,080 --> 00:23:43,440
transformations to obtain ring

624
00:23:43,440 --> 00:23:46,000
signatures which then can be used to uh

625
00:23:46,000 --> 00:23:48,080
to build more advanced cryptographic

626
00:23:48,080 --> 00:23:49,279
primitives like confidential

627
00:23:49,279 --> 00:23:51,200
transactions or electronic voting and so

628
00:23:51,200 --> 00:23:53,360
on

629
00:23:53,440 --> 00:23:54,480
um

630
00:23:54,480 --> 00:23:55,520
so

631
00:23:55,520 --> 00:23:58,080
our main contribution would be the

632
00:23:58,080 --> 00:24:00,000
well we proposed a new lattice-based

633
00:24:00,000 --> 00:24:01,440
membership proof

634
00:24:01,440 --> 00:24:03,440
which is described in more details in

635
00:24:03,440 --> 00:24:04,799
the video

636
00:24:04,799 --> 00:24:06,960
and then uh well the next step would be

637
00:24:06,960 --> 00:24:09,520
the standard transformation to obtain

638
00:24:09,520 --> 00:24:11,039
efficient logarithmic size ring

639
00:24:11,039 --> 00:24:12,240
signature

640
00:24:12,240 --> 00:24:13,919
and then the second part of the paper

641
00:24:13,919 --> 00:24:16,720
focuses on well um applying this ring

642
00:24:16,720 --> 00:24:18,480
signature along with further

643
00:24:18,480 --> 00:24:20,960
optimizations to prior work to construct

644
00:24:20,960 --> 00:24:22,880
a monero like confidential transaction

645
00:24:22,880 --> 00:24:24,480
system which is based on the matrix

646
00:24:24,480 --> 00:24:27,200
framework defined by asking at al at

647
00:24:27,200 --> 00:24:30,200
ccs2019

648
00:24:30,240 --> 00:24:32,480
okay so the talk is only five minutes so

649
00:24:32,480 --> 00:24:34,799
i'll just describe this general approach

650
00:24:34,799 --> 00:24:37,360
for proving the set membership

651
00:24:37,360 --> 00:24:39,919
so uh suppose that this big set s

652
00:24:39,919 --> 00:24:41,520
consists of uh

653
00:24:41,520 --> 00:24:45,840
elements s1 s2 up to sn so it has

654
00:24:45,840 --> 00:24:47,120
size n

655
00:24:47,120 --> 00:24:49,360
and suppose i know as i

656
00:24:49,360 --> 00:24:52,240
so what we want to do is that we put we

657
00:24:52,240 --> 00:24:54,240
can put all the elements of the of this

658
00:24:54,240 --> 00:24:56,480
set s into the columns of the matrix

659
00:24:56,480 --> 00:24:59,600
just like here so this matrix here has n

660
00:24:59,600 --> 00:25:02,320
columns and then if i mod i can multiply

661
00:25:02,320 --> 00:25:04,960
this matrix by this index vector which

662
00:25:04,960 --> 00:25:07,200
has exactly one one in the i position

663
00:25:07,200 --> 00:25:09,760
and the zeros in all the other positions

664
00:25:09,760 --> 00:25:11,600
and if i multiply this matrix by this

665
00:25:11,600 --> 00:25:14,799
index vector i will get s i so uh in

666
00:25:14,799 --> 00:25:17,039
this interesting example with socks i

667
00:25:17,039 --> 00:25:18,880
will put all these four socks into a

668
00:25:18,880 --> 00:25:21,600
matrix and then i can multiply it by the

669
00:25:21,600 --> 00:25:26,159
0 1 0 0 vector to obtain my green sock

670
00:25:26,159 --> 00:25:27,039
so

671
00:25:27,039 --> 00:25:30,159
let this matrix be called p and then let

672
00:25:30,159 --> 00:25:32,480
v be this index vector which has length

673
00:25:32,480 --> 00:25:33,840
n

674
00:25:33,840 --> 00:25:35,919
so i can write this as p times v is

675
00:25:35,919 --> 00:25:37,520
equal to s i

676
00:25:37,520 --> 00:25:39,919
and now well the naive solution would be

677
00:25:39,919 --> 00:25:42,720
to just commit to v commit to s i and i

678
00:25:42,720 --> 00:25:44,720
will have to prove that p v is equal to

679
00:25:44,720 --> 00:25:46,799
s i which is just a simple linear

680
00:25:46,799 --> 00:25:49,840
relation between the committed messages

681
00:25:49,840 --> 00:25:51,360
obviously we have to prove that v is

682
00:25:51,360 --> 00:25:53,679
well formed so we have to prove that it

683
00:25:53,679 --> 00:25:55,840
has exactly one one and all the other

684
00:25:55,840 --> 00:25:57,440
elements are zeros

685
00:25:57,440 --> 00:26:00,000
but this can also be done using well

686
00:26:00,000 --> 00:26:02,080
by representing it as some linear or

687
00:26:02,080 --> 00:26:04,960
multiplicative relations so um

688
00:26:04,960 --> 00:26:08,080
so for this we can use some recent let's

689
00:26:08,080 --> 00:26:10,480
basio knowledge proofs which would give

690
00:26:10,480 --> 00:26:13,120
us some well concrete and efficient

691
00:26:13,120 --> 00:26:14,400
sizes but

692
00:26:14,400 --> 00:26:16,240
the main drawback of this approach is

693
00:26:16,240 --> 00:26:17,919
that we have to commit to this whole

694
00:26:17,919 --> 00:26:20,880
vector v which has length n

695
00:26:20,880 --> 00:26:22,080
so uh

696
00:26:22,080 --> 00:26:25,120
so one can imagine that if um the set

697
00:26:25,120 --> 00:26:27,840
has like two to 20 elements then this

698
00:26:27,840 --> 00:26:30,799
proof size might be pretty big so uh

699
00:26:30,799 --> 00:26:32,320
informal speaking

700
00:26:32,320 --> 00:26:34,559
informally speaking it might suck

701
00:26:34,559 --> 00:26:37,120
um so what we need is something

702
00:26:37,120 --> 00:26:40,480
sublinear in n so what we come up with

703
00:26:40,480 --> 00:26:42,400
in this set membership probe is a

704
00:26:42,400 --> 00:26:45,039
recursive log n round protocol

705
00:26:45,039 --> 00:26:47,200
which um

706
00:26:47,200 --> 00:26:49,520
uh well so in terms of proof size it is

707
00:26:49,520 --> 00:26:51,600
logarithmic but it is not really new

708
00:26:51,600 --> 00:26:53,919
because all because some previous works

709
00:26:53,919 --> 00:26:57,039
also had the logarithmic proof size but

710
00:26:57,039 --> 00:26:57,760
the

711
00:26:57,760 --> 00:26:59,600
the core advantage is this concrete

712
00:26:59,600 --> 00:27:01,200
efficiency which will be discussed in

713
00:27:01,200 --> 00:27:03,200
the next slide

714
00:27:03,200 --> 00:27:05,039
um so i just wanted to point out that

715
00:27:05,039 --> 00:27:07,440
this ver that the verification time of

716
00:27:07,440 --> 00:27:09,200
our protocol is linear and this is

717
00:27:09,200 --> 00:27:11,360
because the verifier has to process the

718
00:27:11,360 --> 00:27:13,600
whole matrix p which as i mentioned

719
00:27:13,600 --> 00:27:15,679
earlier has n columns

720
00:27:15,679 --> 00:27:18,159
so this is the main disadvantage

721
00:27:18,159 --> 00:27:20,559
so in terms of concrete efficiency

722
00:27:20,559 --> 00:27:21,440
um

723
00:27:21,440 --> 00:27:22,480
so for

724
00:27:22,480 --> 00:27:23,360
small

725
00:27:23,360 --> 00:27:26,240
ring sizes like eight or 64 we obtain

726
00:27:26,240 --> 00:27:28,880
like 16 kilobytes or 18 kilobytes which

727
00:27:28,880 --> 00:27:31,679
is like three or four times smaller than

728
00:27:31,679 --> 00:27:33,440
than another ring signature proposed

729
00:27:33,440 --> 00:27:34,640
that this year's crypto the

730
00:27:34,640 --> 00:27:37,200
lattice-based dual ring

731
00:27:37,200 --> 00:27:39,919
which has presumably well and what

732
00:27:39,919 --> 00:27:41,919
linear size uh

733
00:27:41,919 --> 00:27:43,039
signatures

734
00:27:43,039 --> 00:27:44,000
uh but

735
00:27:44,000 --> 00:27:46,480
the strength of our scheme is the well

736
00:27:46,480 --> 00:27:48,559
that it scales nicely with bigger ring

737
00:27:48,559 --> 00:27:50,960
sizes so for example for 2 to 21 it's

738
00:27:50,960 --> 00:27:53,520
only 22 kilobytes which is much smaller

739
00:27:53,520 --> 00:27:55,679
than uh the previous schemes

740
00:27:55,679 --> 00:27:57,679
um so yeah so i'm over five minutes so

741
00:27:57,679 --> 00:28:02,000
that it concludes my talk thanks

742
00:28:02,000 --> 00:28:04,080
you calm

743
00:28:04,080 --> 00:28:05,440
coming to you

744
00:28:05,440 --> 00:28:06,720
um

745
00:28:06,720 --> 00:28:07,679
right

746
00:28:07,679 --> 00:28:09,760
so

747
00:28:09,760 --> 00:28:12,159
uh our next speaker will be

748
00:28:12,159 --> 00:28:14,640
salid moscel sally could you start

749
00:28:14,640 --> 00:28:16,480
sharing your screen yeah perfect thank

750
00:28:16,480 --> 00:28:17,440
you

751
00:28:17,440 --> 00:28:18,399
so

752
00:28:18,399 --> 00:28:20,399
um

753
00:28:20,399 --> 00:28:23,279
the last uh talk of the session

754
00:28:23,279 --> 00:28:25,679
will be undeniable fully homework fully

755
00:28:25,679 --> 00:28:27,679
homomorphic encryption

756
00:28:27,679 --> 00:28:30,080
and the talk will be given by salid

757
00:28:30,080 --> 00:28:32,559
moscell

758
00:28:33,360 --> 00:28:34,960
hi everyone

759
00:28:34,960 --> 00:28:38,000
so my name is elite mossel and i'm going

760
00:28:38,000 --> 00:28:41,120
to talk about a joint work with shweta

761
00:28:41,120 --> 00:28:44,399
agrowall and chasse goldwasser

762
00:28:44,399 --> 00:28:46,159
i will talk about deniable fully

763
00:28:46,159 --> 00:28:49,440
homomorphic encryption

764
00:28:49,440 --> 00:28:52,399
okay so a binary fhe

765
00:28:52,399 --> 00:28:54,640
is the combination of deniable

766
00:28:54,640 --> 00:28:56,559
encryption and fully homomorphic

767
00:28:56,559 --> 00:28:57,600
encryption

768
00:28:57,600 --> 00:28:59,760
so let's start with some motivation

769
00:28:59,760 --> 00:29:01,919
story election

770
00:29:01,919 --> 00:29:05,200
so we have two candidates a blue and red

771
00:29:05,200 --> 00:29:07,200
and to vote for the red candidate

772
00:29:07,200 --> 00:29:09,039
everyone vote zero and for the blue

773
00:29:09,039 --> 00:29:12,640
candidate everyone vote one and uh it's

774
00:29:12,640 --> 00:29:15,919
publicly known so it's in the cloud

775
00:29:15,919 --> 00:29:17,600
now the

776
00:29:17,600 --> 00:29:20,399
parties the red and the blue parties

777
00:29:20,399 --> 00:29:22,640
they generate their secret key and

778
00:29:22,640 --> 00:29:24,880
public key using the key generating

779
00:29:24,880 --> 00:29:27,279
algorithm they keep to themselves the

780
00:29:27,279 --> 00:29:29,360
secret key and they publish the public

781
00:29:29,360 --> 00:29:32,480
key for everyone to use

782
00:29:32,480 --> 00:29:35,039
now bob used this public key to encrypt

783
00:29:35,039 --> 00:29:38,720
his vote b0 using a fresh randomness r

784
00:29:38,720 --> 00:29:41,520
and then he obtained its encrypted

785
00:29:41,520 --> 00:29:42,399
vote

786
00:29:42,399 --> 00:29:45,440
city 0 the cipher text and he submitted

787
00:29:45,440 --> 00:29:47,760
it to the cloud so everyone has access

788
00:29:47,760 --> 00:29:48,799
to it

789
00:29:48,799 --> 00:29:50,640
everyone are doing

790
00:29:50,640 --> 00:29:52,480
is doing the same

791
00:29:52,480 --> 00:29:54,640
and submitting their vote

792
00:29:54,640 --> 00:29:58,399
after the voting phase is done um

793
00:29:58,399 --> 00:30:01,679
we can uh using the homomorphic property

794
00:30:01,679 --> 00:30:02,960
we can

795
00:30:02,960 --> 00:30:05,600
compute this city star which

796
00:30:05,600 --> 00:30:08,080
obtained the tally of the result so how

797
00:30:08,080 --> 00:30:11,360
many people vote for the blue candidate

798
00:30:11,360 --> 00:30:14,720
then the parties can decrypt this city

799
00:30:14,720 --> 00:30:16,640
star and know

800
00:30:16,640 --> 00:30:19,279
the voting result

801
00:30:19,279 --> 00:30:22,399
now for the deniability property of this

802
00:30:22,399 --> 00:30:25,440
game so alice can come to bob and ask

803
00:30:25,440 --> 00:30:27,600
bob for whom did he vote

804
00:30:27,600 --> 00:30:29,279
for and

805
00:30:29,279 --> 00:30:31,679
but maybe she's willing to pay him or

806
00:30:31,679 --> 00:30:32,880
maybe

807
00:30:32,880 --> 00:30:34,559
he's in love with her and he feels

808
00:30:34,559 --> 00:30:37,679
obligated to answer anyway what bob can

809
00:30:37,679 --> 00:30:40,000
do he can give her his vote to be zero

810
00:30:40,000 --> 00:30:42,000
and the randomness he used

811
00:30:42,000 --> 00:30:45,679
or alternatively in a deniable scheme he

812
00:30:45,679 --> 00:30:47,279
can give her

813
00:30:47,279 --> 00:30:50,880
a the opposite beat and r prime that was

814
00:30:50,880 --> 00:30:54,559
obtained using a fake faking algorithm

815
00:30:54,559 --> 00:30:58,080
now alice if she encrypt the original

816
00:30:58,080 --> 00:31:00,000
message vote and with the fresh

817
00:31:00,000 --> 00:31:02,880
randomness she will obtain the city star

818
00:31:02,880 --> 00:31:06,880
the a0 and if she encrypted the opposite

819
00:31:06,880 --> 00:31:10,080
bit using the r prime she also will get

820
00:31:10,080 --> 00:31:14,480
exactly the same cycle text ct 0.

821
00:31:14,480 --> 00:31:16,640
now additionally what we want that alice

822
00:31:16,640 --> 00:31:19,120
will not be able to distinguish whether

823
00:31:19,120 --> 00:31:23,279
bob a uh gave her if

824
00:31:23,279 --> 00:31:26,240
the opposite bit with a fake

825
00:31:26,240 --> 00:31:27,440
randomness

826
00:31:27,440 --> 00:31:30,240
using like the fake distribution or she

827
00:31:30,240 --> 00:31:31,919
got something from the honest

828
00:31:31,919 --> 00:31:33,200
distribution

829
00:31:33,200 --> 00:31:35,440
where in the fake distribution the

830
00:31:35,440 --> 00:31:38,399
cipher text is encrypting

831
00:31:38,399 --> 00:31:41,679
the opposite bit that bob

832
00:31:41,679 --> 00:31:43,679
gave her

833
00:31:43,679 --> 00:31:46,159
okay denied the encryption it's a notion

834
00:31:46,159 --> 00:31:48,720
that was introduced by connecti de work

835
00:31:48,720 --> 00:31:52,000
naor and ostrovsky in 1997 they also

836
00:31:52,000 --> 00:31:55,200
gave a construction from a

837
00:31:55,200 --> 00:31:57,600
a trapdoor permutation

838
00:31:57,600 --> 00:32:01,200
and in 2014 there was a significant step

839
00:32:01,200 --> 00:32:04,559
forward by sahai and waters

840
00:32:04,559 --> 00:32:07,279
and our result we give the notion of

841
00:32:07,279 --> 00:32:09,360
deniable fhe

842
00:32:09,360 --> 00:32:12,720
we give a construction based on lwe

843
00:32:12,720 --> 00:32:15,679
which is a polynomial time assumption

844
00:32:15,679 --> 00:32:19,440
and our construction support large space

845
00:32:19,440 --> 00:32:21,440
this is the first construction that

846
00:32:21,440 --> 00:32:24,399
supports large message space all the

847
00:32:24,399 --> 00:32:25,600
prior

848
00:32:25,600 --> 00:32:28,640
construction support one bit and then to

849
00:32:28,640 --> 00:32:30,799
encrypt large message they encrypt a bit

850
00:32:30,799 --> 00:32:32,320
by b

851
00:32:32,320 --> 00:32:35,360
we get compact ciphertext which means

852
00:32:35,360 --> 00:32:36,159
that

853
00:32:36,159 --> 00:32:39,120
our ciphertext size is independent of

854
00:32:39,120 --> 00:32:42,760
the faking probability

855
00:32:42,880 --> 00:32:45,600
and our encryption is in the model of

856
00:32:45,600 --> 00:32:48,640
online online encryption

857
00:32:48,640 --> 00:32:52,000
and we use bootstrapping to obliviously

858
00:32:52,000 --> 00:32:53,120
generate

859
00:32:53,120 --> 00:32:56,240
fhe ciphertext

860
00:32:56,240 --> 00:32:59,120
and here's some comparison between the

861
00:32:59,120 --> 00:33:01,200
prior work and this work

862
00:33:01,200 --> 00:33:02,159
so

863
00:33:02,159 --> 00:33:04,399
the only one that gets negligible faking

864
00:33:04,399 --> 00:33:07,760
probability is this high water we still

865
00:33:07,760 --> 00:33:10,799
not achieve it although we get compact

866
00:33:10,799 --> 00:33:13,679
ciphertext but our encryption running

867
00:33:13,679 --> 00:33:14,559
time

868
00:33:14,559 --> 00:33:18,080
is depend on the faking probability so

869
00:33:18,080 --> 00:33:20,320
if we want to run polynomial time we

870
00:33:20,320 --> 00:33:22,840
cannot achieve negligible faking

871
00:33:22,840 --> 00:33:25,760
probability um our assumption is

872
00:33:25,760 --> 00:33:30,799
polynomial and well and also the cdn o

873
00:33:30,799 --> 00:33:34,559
is a polynomial but the high waters is

874
00:33:34,559 --> 00:33:36,799
based on io and one-way function which

875
00:33:36,799 --> 00:33:39,919
is not a polynomial time assumption

876
00:33:39,919 --> 00:33:41,840
and we are the first to support large

877
00:33:41,840 --> 00:33:43,200
message space

878
00:33:43,200 --> 00:33:45,600
and if you're interested to hear more

879
00:33:45,600 --> 00:33:46,559
you can

880
00:33:46,559 --> 00:33:47,519
hear

881
00:33:47,519 --> 00:33:49,760
the talk i record or you can check the

882
00:33:49,760 --> 00:33:50,880
paper

883
00:33:50,880 --> 00:33:53,840
thank you very much

884
00:33:53,840 --> 00:33:56,720
thank you salid

885
00:33:57,039 --> 00:33:58,159
um

886
00:33:58,159 --> 00:33:59,519
thank all the

887
00:33:59,519 --> 00:34:01,679
uh speakers of the of the session now we

888
00:34:01,679 --> 00:34:04,960
move on to the question part

889
00:34:04,960 --> 00:34:07,279
uh i see no questions on the

890
00:34:07,279 --> 00:34:08,639
uh

891
00:34:08,639 --> 00:34:10,879
in zulip

892
00:34:10,879 --> 00:34:12,960
neither do i see questions i'm just uh

893
00:34:12,960 --> 00:34:16,079
respected raised please go ahead

894
00:34:16,079 --> 00:34:18,719
hi hi uh so yes this is a question for

895
00:34:18,719 --> 00:34:20,719
the first talk um

896
00:34:20,719 --> 00:34:24,239
if uh i understand right you considered

897
00:34:24,239 --> 00:34:26,399
prime power psychothemics and

898
00:34:26,399 --> 00:34:28,159
and power of two psychoatomics only

899
00:34:28,159 --> 00:34:29,839
right um

900
00:34:29,839 --> 00:34:31,040
do you

901
00:34:31,040 --> 00:34:33,599
have any uh sense about

902
00:34:33,599 --> 00:34:35,760
what can be said in um

903
00:34:35,760 --> 00:34:38,320
more general composite cyclotomics or

904
00:34:38,320 --> 00:34:39,199
even

905
00:34:39,199 --> 00:34:40,239
other

906
00:34:40,239 --> 00:34:42,560
uh classes of rings maybe

907
00:34:42,560 --> 00:34:44,800
multi-quadratics or something of that

908
00:34:44,800 --> 00:34:47,359
nature did you look into that at all

909
00:34:47,359 --> 00:34:50,800
um to be honest i uh we we tried a

910
00:34:50,800 --> 00:34:53,040
little bit uh for

911
00:34:53,040 --> 00:34:55,839
uh like the m psychoatomic ring where m

912
00:34:55,839 --> 00:34:58,800
is composite but we didn't get very far

913
00:34:58,800 --> 00:35:00,400
so it was

914
00:35:00,400 --> 00:35:02,960
uh and and i think

915
00:35:02,960 --> 00:35:05,280
see if i remember correctly in nothing

916
00:35:05,280 --> 00:35:07,520
very interesting uh is going on so you

917
00:35:07,520 --> 00:35:08,480
can just

918
00:35:08,480 --> 00:35:11,440
split it with uh crt and then

919
00:35:11,440 --> 00:35:13,359
uh things follow so you don't get

920
00:35:13,359 --> 00:35:15,680
anything surprising there but i i forgot

921
00:35:15,680 --> 00:35:18,079
the details

922
00:35:18,079 --> 00:35:20,960
and more for other for other kinds of

923
00:35:20,960 --> 00:35:22,240
rings so

924
00:35:22,240 --> 00:35:24,160
other than cyclo terminal earrings we

925
00:35:24,160 --> 00:35:26,160
have no idea

926
00:35:26,160 --> 00:35:28,400
great and the set uh just follow up the

927
00:35:28,400 --> 00:35:30,560
set that you identified in prime power

928
00:35:30,560 --> 00:35:32,560
cyclotronics those are the

929
00:35:32,560 --> 00:35:35,200
so-called cyclosomic units is that right

930
00:35:35,200 --> 00:35:36,400
um

931
00:35:36,400 --> 00:35:39,119
yeah yeah yeah i think like they are

932
00:35:39,119 --> 00:35:41,760
like some of the psychoatomic units but

933
00:35:41,760 --> 00:35:44,960
not all if i remember correctly

934
00:35:44,960 --> 00:35:46,800
yeah well that's an infinite group so

935
00:35:46,800 --> 00:35:49,359
yeah but the usual uh generators i guess

936
00:35:49,359 --> 00:35:50,480
of that

937
00:35:50,480 --> 00:35:53,520
yeah yeah thank you

938
00:35:55,839 --> 00:35:57,920
all right so we have enough two more

939
00:35:57,920 --> 00:35:59,200
questions

940
00:35:59,200 --> 00:36:00,880
uh so the one question is

941
00:36:00,880 --> 00:36:03,680
in the zulu chat and the question goes

942
00:36:03,680 --> 00:36:05,440
to shoe

943
00:36:05,440 --> 00:36:08,000
uh the question by what's on that

944
00:36:08,000 --> 00:36:10,079
um and it asks when he asks the

945
00:36:10,079 --> 00:36:12,480
following does your technique

946
00:36:12,480 --> 00:36:15,119
also sharpen the security reduction for

947
00:36:15,119 --> 00:36:18,160
the zkp scheme

948
00:36:18,160 --> 00:36:21,119
uh security reduction as in security

949
00:36:21,119 --> 00:36:23,920
loss in that case yes it does

950
00:36:23,920 --> 00:36:27,359
uh depending on i guess where you can uh

951
00:36:27,359 --> 00:36:29,440
compare it with but if it's if you're

952
00:36:29,440 --> 00:36:31,520
comparing with fish shamier then it does

953
00:36:31,520 --> 00:36:33,760
provide a more uh tighter security

954
00:36:33,760 --> 00:36:34,880
reduction

955
00:36:34,880 --> 00:36:37,440
and compared to unreal uh i haven't

956
00:36:37,440 --> 00:36:39,760
checked but maybe it's about the same or

957
00:36:39,760 --> 00:36:42,160
our scheme might be slightly worse or

958
00:36:42,160 --> 00:36:44,720
somewhere with these like uh

959
00:36:44,720 --> 00:36:46,960
um core rebounds i'm not quite sure

960
00:36:46,960 --> 00:36:49,359
about that

961
00:36:50,720 --> 00:36:53,839
i hope that answers his or her question

962
00:36:53,839 --> 00:36:55,920
uh i hope so too if it doesn't please

963
00:36:55,920 --> 00:36:59,359
continue the discussion in new zealand

964
00:36:59,359 --> 00:37:00,720
um

965
00:37:00,720 --> 00:37:03,920
okay our next question it was asked on

966
00:37:03,920 --> 00:37:04,960
chad

967
00:37:04,960 --> 00:37:07,599
and the question goes to

968
00:37:07,599 --> 00:37:10,320
goes to khan

969
00:37:10,720 --> 00:37:12,320
the question is the following

970
00:37:12,320 --> 00:37:14,480
is the ring signature you mentioned in

971
00:37:14,480 --> 00:37:18,000
the random oracle model

972
00:37:18,400 --> 00:37:20,960
yeah so we transform our set membership

973
00:37:20,960 --> 00:37:23,119
broke into the one out of many proof and

974
00:37:23,119 --> 00:37:24,000
then

975
00:37:24,000 --> 00:37:26,320
the ring signature is just uh

976
00:37:26,320 --> 00:37:28,000
just the proof using the feature me

977
00:37:28,000 --> 00:37:29,359
transform

978
00:37:29,359 --> 00:37:31,759
so yeah

979
00:37:34,400 --> 00:37:36,880
thank you um

980
00:37:36,880 --> 00:37:38,880
right so the next question is from james

981
00:37:38,880 --> 00:37:39,920
hughes

982
00:37:39,920 --> 00:37:44,000
uh he asks um salid uh salisol he asked

983
00:37:44,000 --> 00:37:45,680
the following

984
00:37:45,680 --> 00:37:48,720
if the voting software creates two votes

985
00:37:48,720 --> 00:37:50,640
with r and r prime

986
00:37:50,640 --> 00:37:52,640
providing the voter with both r and r

987
00:37:52,640 --> 00:37:55,599
prime so the system works

988
00:37:55,599 --> 00:37:58,000
what stops the software from sending uh

989
00:37:58,000 --> 00:38:00,160
from sending in the wrong

990
00:38:00,160 --> 00:38:02,480
vote

991
00:38:02,640 --> 00:38:04,720
i hope i understand the question

992
00:38:04,720 --> 00:38:06,640
correctly so the

993
00:38:06,640 --> 00:38:10,720
the cipher text will only decrypt

994
00:38:10,720 --> 00:38:14,480
to one vote to the original vote like

995
00:38:14,480 --> 00:38:15,280
the

996
00:38:15,280 --> 00:38:16,000
uh

997
00:38:16,000 --> 00:38:19,119
the alternative the faking

998
00:38:19,119 --> 00:38:20,640
a bit

999
00:38:20,640 --> 00:38:23,520
it's it's something we hide inside the

1000
00:38:23,520 --> 00:38:27,119
encryption so it will give exactly the

1001
00:38:27,119 --> 00:38:30,079
same cipher text but the decryption will

1002
00:38:30,079 --> 00:38:32,400
always be the correct one

1003
00:38:32,400 --> 00:38:35,280
and the secret key is what they stopped

1004
00:38:35,280 --> 00:38:39,599
the software from sending the wrong vote

1005
00:38:43,760 --> 00:38:44,800
all right

1006
00:38:44,800 --> 00:38:46,640
thank you salid

1007
00:38:46,640 --> 00:38:47,920
uh

1008
00:38:47,920 --> 00:38:49,839
as you know the question from the

1009
00:38:49,839 --> 00:38:54,240
audience i have a couple questions too

1010
00:38:54,800 --> 00:38:56,640
so my first question

1011
00:38:56,640 --> 00:38:58,880
is for russell um

1012
00:38:58,880 --> 00:39:00,320
it's regarding the subtractive side

1013
00:39:00,320 --> 00:39:02,800
definition um understanding correctly is

1014
00:39:02,800 --> 00:39:04,560
that you give a

1015
00:39:04,560 --> 00:39:06,400
sufficient condition

1016
00:39:06,400 --> 00:39:08,480
but is it also a necessary condition

1017
00:39:08,480 --> 00:39:11,119
maybe you said it already but i i think

1018
00:39:11,119 --> 00:39:13,599
yeah yeah

1019
00:39:13,599 --> 00:39:15,920
it's a sufficient condition listen uh we

1020
00:39:15,920 --> 00:39:17,920
didn't investigate if it's necessary i

1021
00:39:17,920 --> 00:39:19,440
don't think so i see

1022
00:39:19,440 --> 00:39:21,280
okay you don't think so that was my next

1023
00:39:21,280 --> 00:39:22,400
question

1024
00:39:22,400 --> 00:39:24,480
uh so you believe it will be a bigger

1025
00:39:24,480 --> 00:39:28,079
set right that can be used

1026
00:39:28,320 --> 00:39:31,680
i mean so my gut feeling is that uh

1027
00:39:31,680 --> 00:39:33,280
sometimes you are lucky and things

1028
00:39:33,280 --> 00:39:35,040
cancel out

1029
00:39:35,040 --> 00:39:36,079
um so

1030
00:39:36,079 --> 00:39:38,320
yeah

1031
00:39:39,359 --> 00:39:41,200
all right thank you

1032
00:39:41,200 --> 00:39:43,599
okay we have one more question uh to

1033
00:39:43,599 --> 00:39:45,200
thomas

1034
00:39:45,200 --> 00:39:47,599
uh so the question is why do you need

1035
00:39:47,599 --> 00:39:48,960
the special result of parallel

1036
00:39:48,960 --> 00:39:51,440
composibility

1037
00:39:51,440 --> 00:39:53,520
so to the best of

1038
00:39:53,520 --> 00:39:55,359
our knowledge um

1039
00:39:55,359 --> 00:39:57,280
there were only parallel composition

1040
00:39:57,280 --> 00:39:59,200
results studying soundness and not

1041
00:39:59,200 --> 00:40:02,480
knowledge sadness so so so showing that

1042
00:40:02,480 --> 00:40:04,079
parallel composition reduces the

1043
00:40:04,079 --> 00:40:05,440
soundness error

1044
00:40:05,440 --> 00:40:06,319
and

1045
00:40:06,319 --> 00:40:07,520
we actually

1046
00:40:07,520 --> 00:40:09,680
needed the result that shows that

1047
00:40:09,680 --> 00:40:12,800
parallel position also reduces the

1048
00:40:12,800 --> 00:40:15,119
knowledge error of protocols so this is

1049
00:40:15,119 --> 00:40:16,960
slightly stronger but we we actually

1050
00:40:16,960 --> 00:40:23,079
rely on prior results to achieve this

1051
00:40:24,000 --> 00:40:25,520
all right thank you so i also have a

1052
00:40:25,520 --> 00:40:26,880
question to you

1053
00:40:26,880 --> 00:40:29,040
uh it's not regarding your five-minute

1054
00:40:29,040 --> 00:40:31,280
talk but on your longer talk you you

1055
00:40:31,280 --> 00:40:33,040
mentioned that you need a ring you rely

1056
00:40:33,040 --> 00:40:35,119
on the rings this assumption

1057
00:40:35,119 --> 00:40:37,200
uh do you really need the ring structure

1058
00:40:37,200 --> 00:40:39,680
or it's just for convenience that

1059
00:40:39,680 --> 00:40:42,560
that will probably simplify or

1060
00:40:42,560 --> 00:40:45,359
make your construction more efficient

1061
00:40:45,359 --> 00:40:48,640
do we need a ring structure um

1062
00:40:48,640 --> 00:40:51,119
so basically we so we do we we need a

1063
00:40:51,119 --> 00:40:53,200
module structure so we need to be able

1064
00:40:53,200 --> 00:40:56,079
to uh so so we we have a group element

1065
00:40:56,079 --> 00:40:58,880
and a ring and we need to be able to

1066
00:40:58,880 --> 00:41:01,119
multiply this group by

1067
00:41:01,119 --> 00:41:04,000
by ring elements

1068
00:41:04,480 --> 00:41:09,280
so so yes i think we we really need this

1069
00:41:10,160 --> 00:41:13,920
i see thank you very much thanks

1070
00:41:14,079 --> 00:41:15,680
um

1071
00:41:15,680 --> 00:41:17,599
well

1072
00:41:17,599 --> 00:41:19,599
you have more if anyone has more

1073
00:41:19,599 --> 00:41:20,480
questions

1074
00:41:20,480 --> 00:41:22,720
please

1075
00:41:22,720 --> 00:41:25,359
ask now

1076
00:41:29,680 --> 00:41:31,760
well otherwise i have one more question

1077
00:41:31,760 --> 00:41:32,800
um

1078
00:41:32,800 --> 00:41:34,960
to smile to come

1079
00:41:34,960 --> 00:41:36,880
um

1080
00:41:36,880 --> 00:41:37,839
so

1081
00:41:37,839 --> 00:41:39,599
you're

1082
00:41:39,599 --> 00:41:41,280
you're targeted

1083
00:41:41,280 --> 00:41:43,760
the um

1084
00:41:43,760 --> 00:41:45,760
uh to make your ski more efficient with

1085
00:41:45,760 --> 00:41:48,640
respect to the ring size right

1086
00:41:48,640 --> 00:41:49,440
but

1087
00:41:49,440 --> 00:41:51,200
what about the

1088
00:41:51,200 --> 00:41:53,520
the computational complexity

1089
00:41:53,520 --> 00:41:55,280
or maybe i misunderstood your table when

1090
00:41:55,280 --> 00:41:56,319
you

1091
00:41:56,319 --> 00:41:57,680
when you wrote

1092
00:41:57,680 --> 00:41:59,440
when you gave the

1093
00:41:59,440 --> 00:42:01,359
the kilobytes and megabytes with respect

1094
00:42:01,359 --> 00:42:03,200
to the ring sizes

1095
00:42:03,200 --> 00:42:06,400
was this the um

1096
00:42:06,400 --> 00:42:08,800
the computation time was the size of the

1097
00:42:08,800 --> 00:42:10,400
um

1098
00:42:10,400 --> 00:42:11,680
obligation

1099
00:42:11,680 --> 00:42:12,640
it's a

1100
00:42:12,640 --> 00:42:15,359
it's a signature size so

1101
00:42:15,359 --> 00:42:16,400
uh it's not

1102
00:42:16,400 --> 00:42:18,160
very good so the

1103
00:42:18,160 --> 00:42:21,280
the uh prove prove it time is linear but

1104
00:42:21,280 --> 00:42:22,880
i guess the the worst thing is that the

1105
00:42:22,880 --> 00:42:25,280
very biased time is linear because there

1106
00:42:25,280 --> 00:42:26,720
is this huge matrix and then the

1107
00:42:26,720 --> 00:42:29,040
verifier has to like compute operations

1108
00:42:29,040 --> 00:42:31,359
on that matrix so

1109
00:42:31,359 --> 00:42:33,759
it's not

1110
00:42:34,240 --> 00:42:35,280
i see

1111
00:42:35,280 --> 00:42:36,720
so and also

1112
00:42:36,720 --> 00:42:39,119
maybe my last question to you is

1113
00:42:39,119 --> 00:42:40,000
um

1114
00:42:40,000 --> 00:42:40,960
well

1115
00:42:40,960 --> 00:42:43,119
is there a relation between

1116
00:42:43,119 --> 00:42:44,800
your work and what's called the private

1117
00:42:44,800 --> 00:42:46,400
set intersection because it looks like

1118
00:42:46,400 --> 00:42:48,079
what you're doing is a special case of

1119
00:42:48,079 --> 00:42:49,520
this

1120
00:42:49,520 --> 00:42:51,359
i mean set membership is a special case

1121
00:42:51,359 --> 00:42:53,599
of the private set intersection

1122
00:42:53,599 --> 00:42:56,000
are you aware of any construction that

1123
00:42:56,000 --> 00:42:58,800
that is similar to yours

1124
00:42:58,800 --> 00:43:01,200
um

1125
00:43:01,280 --> 00:43:03,839
yeah i don't think i'm not oh yeah i

1126
00:43:03,839 --> 00:43:06,880
think i'm not aware of anything

1127
00:43:06,880 --> 00:43:08,640
for psi

1128
00:43:08,640 --> 00:43:10,079
okay

1129
00:43:10,079 --> 00:43:13,200
all right

1130
00:43:13,200 --> 00:43:14,880
so

1131
00:43:14,880 --> 00:43:17,200
i see no further questions and i also

1132
00:43:17,200 --> 00:43:19,440
exhausted my questions

1133
00:43:19,440 --> 00:43:20,480
um

1134
00:43:20,480 --> 00:43:22,480
in that case i think we're good so

1135
00:43:22,480 --> 00:43:27,160
thanks thank the speakers once again

