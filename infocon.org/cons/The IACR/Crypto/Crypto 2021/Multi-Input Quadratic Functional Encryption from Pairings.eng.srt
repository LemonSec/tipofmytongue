1
00:00:00,880 --> 00:00:03,520
this video is a presentation for martin

2
00:00:03,520 --> 00:00:05,839
particularly functional encryption from

3
00:00:05,839 --> 00:00:09,040
pairings in crypto 2021

4
00:00:09,040 --> 00:00:11,920
i am jumichi from ngd corporation and

5
00:00:11,920 --> 00:00:13,759
this is joint work with sweden and

6
00:00:13,759 --> 00:00:15,120
richard

7
00:00:15,120 --> 00:00:17,119
the contribution of this paper is quite

8
00:00:17,119 --> 00:00:19,680
simple we construct the first

9
00:00:19,680 --> 00:00:22,080
multi-input functional encryption for

10
00:00:22,080 --> 00:00:24,560
quadratic functions from the

11
00:00:24,560 --> 00:00:27,919
from a standard assumption

12
00:00:28,480 --> 00:00:31,279
so i will begin with uh recording what

13
00:00:31,279 --> 00:00:33,520
functional encryption was

14
00:00:33,520 --> 00:00:36,719
functional encryption or fv for short is

15
00:00:36,719 --> 00:00:38,879
a generalization of public key

16
00:00:38,879 --> 00:00:42,239
encryption and also a generalization

17
00:00:42,239 --> 00:00:45,200
of various cryptographic notions such as

18
00:00:45,200 --> 00:00:48,160
identity-based encryption or

19
00:00:48,160 --> 00:00:50,559
attribute-based encryption

20
00:00:50,559 --> 00:00:53,199
similarly to public key encryption a

21
00:00:53,199 --> 00:00:55,840
user can encrypt a message using a

22
00:00:55,840 --> 00:00:56,840
public

23
00:00:56,840 --> 00:01:00,640
key the serial property of functional

24
00:01:00,640 --> 00:01:03,280
encryption is that an online master

25
00:01:03,280 --> 00:01:06,080
secret key can generate a secret key

26
00:01:06,080 --> 00:01:10,560
associating it with awesome function

27
00:01:11,200 --> 00:01:14,400
when a ciphertext for x is decrypted by

28
00:01:14,400 --> 00:01:17,680
a secret key for a function f it only

29
00:01:17,680 --> 00:01:22,479
reveals uh f of x and nothing else

30
00:01:22,479 --> 00:01:24,840
if we can be applicable to various

31
00:01:24,840 --> 00:01:28,320
situations for example assume that x is

32
00:01:28,320 --> 00:01:32,479
a database and f is some sql query

33
00:01:32,479 --> 00:01:35,840
then a user can make sql queries to the

34
00:01:35,840 --> 00:01:38,400
encrypted database without revealing any

35
00:01:38,400 --> 00:01:41,360
other information of the database by

36
00:01:41,360 --> 00:01:44,960
using functional encryption

37
00:01:45,439 --> 00:01:48,479
multi-input functional encryption or mi3

38
00:01:48,479 --> 00:01:51,360
for short is a generalized notion of a

39
00:01:51,360 --> 00:01:53,840
fee and we can handle functions that

40
00:01:53,840 --> 00:01:57,040
takes multiple inputs in moav

41
00:01:57,040 --> 00:01:59,040
while we only consider syncrympt

42
00:01:59,040 --> 00:02:01,920
functions in fe

43
00:02:01,920 --> 00:02:04,159
rather than big public key and master

44
00:02:04,159 --> 00:02:05,600
secret key

45
00:02:05,600 --> 00:02:07,840
there are encryption keys for each

46
00:02:07,840 --> 00:02:12,399
throat or function in mriv

47
00:02:12,480 --> 00:02:13,920
an owner of

48
00:02:13,920 --> 00:02:17,200
eki can encrypt message for the sake

49
00:02:17,200 --> 00:02:19,920
observed i

50
00:02:19,920 --> 00:02:22,720
decryption algorithm takes ciphertexts

51
00:02:22,720 --> 00:02:27,200
for slot 1 2 slot n and a secret key

52
00:02:27,200 --> 00:02:28,959
and it reveals

53
00:02:28,959 --> 00:02:34,160
f1 x1 to xn to the decrypter and nothing

54
00:02:34,160 --> 00:02:36,160
else

55
00:02:36,160 --> 00:02:39,360
so for example myv can be used to

56
00:02:39,360 --> 00:02:43,280
securely make sql queries that aggregate

57
00:02:43,280 --> 00:02:46,000
several databases owned by different

58
00:02:46,000 --> 00:02:48,319
parties

59
00:02:48,319 --> 00:02:51,040
we can observe that when the number of

60
00:02:51,040 --> 00:02:53,360
slots is 1

61
00:02:53,360 --> 00:02:57,920
then mi3 corresponds to fv

62
00:02:58,879 --> 00:03:01,440
the indistinguishability based security

63
00:03:01,440 --> 00:03:03,840
of mif is defined by the

64
00:03:03,840 --> 00:03:05,760
following game

65
00:03:05,760 --> 00:03:08,080
first the adversary is given a public

66
00:03:08,080 --> 00:03:10,239
key and the challenger chooses a random

67
00:03:10,239 --> 00:03:11,519
bit b

68
00:03:11,519 --> 00:03:13,519
then the adversary can make three

69
00:03:13,519 --> 00:03:15,200
queries

70
00:03:15,200 --> 00:03:18,000
the first is encryption query and on

71
00:03:18,000 --> 00:03:21,920
input x side 0 and x i1

72
00:03:21,920 --> 00:03:26,640
it replaces the encryption of xib

73
00:03:26,799 --> 00:03:28,239
the second is

74
00:03:28,239 --> 00:03:30,560
the key generation query

75
00:03:30,560 --> 00:03:34,319
and on input function f it requires a

76
00:03:34,319 --> 00:03:37,760
secret key for function f

77
00:03:37,760 --> 00:03:39,360
the last is

78
00:03:39,360 --> 00:03:41,360
the corruption query

79
00:03:41,360 --> 00:03:43,360
and on input i

80
00:03:43,360 --> 00:03:44,959
it replies the

81
00:03:44,959 --> 00:03:46,959
eki

82
00:03:46,959 --> 00:03:49,760
as usual the other butter is prohibited

83
00:03:49,760 --> 00:03:52,799
to make queries that allows that allows

84
00:03:52,799 --> 00:03:55,439
the adversary to trivially learn the bit

85
00:03:55,439 --> 00:03:56,720
b

86
00:03:56,720 --> 00:03:59,360
then the security requires that

87
00:03:59,360 --> 00:04:01,200
the efficient adversary cannot

88
00:04:01,200 --> 00:04:04,159
distinguish the case where b equals zero

89
00:04:04,159 --> 00:04:07,200
and v equal one

90
00:04:07,680 --> 00:04:10,400
the studies of mifv can be classified

91
00:04:10,400 --> 00:04:13,040
into two categories with respect to a

92
00:04:13,040 --> 00:04:16,160
function class that the mifv scheme can

93
00:04:16,160 --> 00:04:19,120
compute in decryption

94
00:04:19,120 --> 00:04:22,000
the first category includes mifv for

95
00:04:22,000 --> 00:04:24,320
general functions such as

96
00:04:24,320 --> 00:04:27,600
turing machines or all circuits while

97
00:04:27,600 --> 00:04:30,400
all mi-3 schemes in this category need

98
00:04:30,400 --> 00:04:32,800
non-standard assumptions such as

99
00:04:32,800 --> 00:04:34,720
indistinguishability of sketching or

100
00:04:34,720 --> 00:04:37,919
multi-linear maps etc

101
00:04:37,919 --> 00:04:40,720
the other category includes mi-3 for

102
00:04:40,720 --> 00:04:43,840
specific functions and only known mi fee

103
00:04:43,840 --> 00:04:46,639
schemes in this this category can be

104
00:04:46,639 --> 00:04:49,120
handled only linear functions or inner

105
00:04:49,120 --> 00:04:50,720
products

106
00:04:50,720 --> 00:04:53,040
myv schemes in this category are

107
00:04:53,040 --> 00:04:55,520
efficient and can be constructed from

108
00:04:55,520 --> 00:04:58,639
standard assumptions such as matrix ddh

109
00:04:58,639 --> 00:05:03,199
or lwe or dcr assumption

110
00:05:04,000 --> 00:05:06,240
let us have a closer look at the fee for

111
00:05:06,240 --> 00:05:08,240
specific functions

112
00:05:08,240 --> 00:05:10,720
the start of this line of works is a

113
00:05:10,720 --> 00:05:14,160
single input fee for linear functions

114
00:05:14,160 --> 00:05:17,039
the point is that ddh-based schemes do

115
00:05:17,039 --> 00:05:20,000
not use pairings

116
00:05:20,000 --> 00:05:22,479
rather a single input to a fee schemes

117
00:05:22,479 --> 00:05:24,720
for quadratic functions are also

118
00:05:24,720 --> 00:05:28,560
proposed using pairings

119
00:05:29,680 --> 00:05:35,280
acfu 18 shows that linear myfv can be

120
00:05:35,280 --> 00:05:37,600
generically constructed from single

121
00:05:37,600 --> 00:05:39,919
input ring i3

122
00:05:39,919 --> 00:05:42,320
so the ddh based

123
00:05:42,320 --> 00:05:46,080
linear my ifv does not need pairings

124
00:05:46,080 --> 00:05:48,800
so looking at this table a natural

125
00:05:48,800 --> 00:05:51,680
question is pheasant we can construct a

126
00:05:51,680 --> 00:05:55,680
quadratic a quadratic miv scheme using

127
00:05:55,680 --> 00:05:57,280
pairings

128
00:05:57,280 --> 00:05:59,600
the contribution of this work is to

129
00:05:59,600 --> 00:06:01,520
answer the question

130
00:06:01,520 --> 00:06:04,318
affirmatively

131
00:06:04,560 --> 00:06:06,639
i will explain these functions more

132
00:06:06,639 --> 00:06:08,080
formally

133
00:06:08,080 --> 00:06:10,479
a single input linear function is just a

134
00:06:10,479 --> 00:06:12,639
multivariate linear function over the

135
00:06:12,639 --> 00:06:14,560
input

136
00:06:14,560 --> 00:06:17,039
similarly a single input quadratic

137
00:06:17,039 --> 00:06:19,360
function is a multivariate quadratic

138
00:06:19,360 --> 00:06:22,080
function over the input

139
00:06:22,080 --> 00:06:24,319
it is not hard to see that a single

140
00:06:24,319 --> 00:06:26,400
input quadratic function is a linear

141
00:06:26,400 --> 00:06:28,720
function over quadratic terms of the

142
00:06:28,720 --> 00:06:30,160
input

143
00:06:30,160 --> 00:06:32,479
so we can construct a quadratic

144
00:06:32,479 --> 00:06:34,720
functional encryption from a linear

145
00:06:34,720 --> 00:06:36,960
functional encryption

146
00:06:36,960 --> 00:06:39,120
but in this in this case

147
00:06:39,120 --> 00:06:41,919
the ciphertext size inherently becomes

148
00:06:41,919 --> 00:06:44,240
order m squared

149
00:06:44,240 --> 00:06:47,199
so basically a functional encryption for

150
00:06:47,199 --> 00:06:50,240
quadratic function refers to a

151
00:06:50,240 --> 00:06:52,000
functional encryption with compact

152
00:06:52,000 --> 00:06:56,000
ciphertext where the ciphertext size is

153
00:06:56,000 --> 00:06:57,440
oda

154
00:06:57,440 --> 00:06:59,599
m

155
00:07:00,160 --> 00:07:02,160
a multi-input linear function is a

156
00:07:02,160 --> 00:07:04,560
multivariate linear function over all

157
00:07:04,560 --> 00:07:06,240
inputs

158
00:07:06,240 --> 00:07:08,319
and the multi-input quadratic function

159
00:07:08,319 --> 00:07:10,960
is a multivariate quadratic function

160
00:07:10,960 --> 00:07:13,280
over all inputs

161
00:07:13,280 --> 00:07:15,440
an important factor is that a

162
00:07:15,440 --> 00:07:17,680
multi-input quadratic function is not

163
00:07:17,680 --> 00:07:20,479
linear not a a linear function over

164
00:07:20,479 --> 00:07:23,520
quadratic terms of each input

165
00:07:23,520 --> 00:07:26,400
because it also contains a quadratic

166
00:07:26,400 --> 00:07:28,880
terms that derive from two different

167
00:07:28,880 --> 00:07:30,479
inputs

168
00:07:30,479 --> 00:07:33,840
so quadratic uh mifv cannot be

169
00:07:33,840 --> 00:07:36,560
generically obtained from linear my3

170
00:07:36,560 --> 00:07:39,120
even if we do not care about the

171
00:07:39,120 --> 00:07:42,000
ciphertext size

172
00:07:42,000 --> 00:07:44,240
therefore the situation is essentially

173
00:07:44,240 --> 00:07:46,160
different in the single input setting

174
00:07:46,160 --> 00:07:48,319
and the market input setting

175
00:07:48,319 --> 00:07:49,759
since the

176
00:07:49,759 --> 00:07:52,160
issue is the cipher text size in the

177
00:07:52,160 --> 00:07:54,639
single input setting while what a

178
00:07:54,639 --> 00:07:57,120
quadratic function can compute is

179
00:07:57,120 --> 00:07:58,720
essentially different from linear

180
00:07:58,720 --> 00:08:02,960
functions in the multi-input setting

181
00:08:03,280 --> 00:08:06,080
we also mentioned the variance of mifa

182
00:08:06,080 --> 00:08:08,319
to clarify our result

183
00:08:08,319 --> 00:08:10,639
as explained the encryption algorithm

184
00:08:10,639 --> 00:08:12,960
takes encryption key i to encrypt a

185
00:08:12,960 --> 00:08:16,400
message for sort i in standard miv

186
00:08:16,400 --> 00:08:19,039
we can consider other cases where the

187
00:08:19,039 --> 00:08:21,199
encryption algorithm takes the public

188
00:08:21,199 --> 00:08:24,479
key or master secret key

189
00:08:24,479 --> 00:08:27,280
in public key mi fee anyone can encrypt

190
00:08:27,280 --> 00:08:29,840
a message for any slot

191
00:08:29,840 --> 00:08:33,360
on the other hand in skmifee only an

192
00:08:33,360 --> 00:08:35,919
owner of the master secret key can

193
00:08:35,919 --> 00:08:38,719
encrypt messages

194
00:08:38,719 --> 00:08:42,320
public kmi fee and secret kmiv is

195
00:08:42,320 --> 00:08:44,159
special cases of

196
00:08:44,159 --> 00:08:46,160
the standard miv

197
00:08:46,160 --> 00:08:49,200
in this work we show that

198
00:08:49,200 --> 00:08:52,320
public key quadratic mif can be easily

199
00:08:52,320 --> 00:08:54,959
constructed from linearify

200
00:08:54,959 --> 00:08:57,120
the main contribution of this work is

201
00:08:57,120 --> 00:08:59,040
the construction of

202
00:08:59,040 --> 00:09:01,600
sk quadratic mifv

203
00:09:01,600 --> 00:09:04,160
and constructing the standard mip for

204
00:09:04,160 --> 00:09:06,800
quadratic functions is an interesting

205
00:09:06,800 --> 00:09:09,839
open problem

206
00:09:10,000 --> 00:09:12,640
before moving on to our quadratic mifv

207
00:09:12,640 --> 00:09:15,120
construction we briefly recall how to

208
00:09:15,120 --> 00:09:18,800
obtain linear mifv in previous works

209
00:09:18,800 --> 00:09:21,760
basically all linear mifv schemes are

210
00:09:21,760 --> 00:09:23,839
obtained by this blueprint

211
00:09:23,839 --> 00:09:27,519
that is our linear if miv runs in

212
00:09:27,519 --> 00:09:29,519
parallel instances of a single input

213
00:09:29,519 --> 00:09:31,200
linear fee

214
00:09:31,200 --> 00:09:34,240
and each set of n algorithms can be seen

215
00:09:34,240 --> 00:09:38,240
as each algorithm of mifv

216
00:09:38,240 --> 00:09:40,480
since multi-input linear function can be

217
00:09:40,480 --> 00:09:43,360
computed by the summation of each single

218
00:09:43,360 --> 00:09:45,440
input linear function this scheme

219
00:09:45,440 --> 00:09:47,680
already satisfies the correctness of

220
00:09:47,680 --> 00:09:49,519
linear mrv

221
00:09:49,519 --> 00:09:52,000
however this construction risks every

222
00:09:52,000 --> 00:09:55,279
linear function value of each rod

223
00:09:55,279 --> 00:09:58,000
to prevent this we make each sort output

224
00:09:58,000 --> 00:10:00,480
the linear function value masked by the

225
00:10:00,480 --> 00:10:02,399
unknown term roi

226
00:10:02,399 --> 00:10:04,160
where the similar

227
00:10:04,160 --> 00:10:06,959
summation of the masking time can be

228
00:10:06,959 --> 00:10:10,800
removed by a decrypter

229
00:10:10,800 --> 00:10:12,800
this blueprint is not applicable to

230
00:10:12,800 --> 00:10:15,440
construct quadratic kmiv

231
00:10:15,440 --> 00:10:17,440
suppose each instance outputs a

232
00:10:17,440 --> 00:10:21,360
quadratic function over each input

233
00:10:21,360 --> 00:10:23,360
the multi-input quadratic function

234
00:10:23,360 --> 00:10:26,000
cannot be computed from these quadratic

235
00:10:26,000 --> 00:10:28,240
functions since it also contains

236
00:10:28,240 --> 00:10:30,800
quadratic terms derived from different

237
00:10:30,800 --> 00:10:32,480
inputs

238
00:10:32,480 --> 00:10:34,399
so the challenge is how to deal with

239
00:10:34,399 --> 00:10:36,240
such terms

240
00:10:36,240 --> 00:10:38,640
especially the difficulty lies in the

241
00:10:38,640 --> 00:10:42,640
fact that x i and x j are encrypted

242
00:10:42,640 --> 00:10:45,640
independently

243
00:10:46,079 --> 00:10:48,399
so we do not use such a parallel

244
00:10:48,399 --> 00:10:51,200
execution single input fee and take a

245
00:10:51,200 --> 00:10:53,519
new approach that is inspired by the

246
00:10:53,519 --> 00:10:55,839
secret key quadratic graphic proposed by

247
00:10:55,839 --> 00:10:57,360
rin

248
00:10:57,360 --> 00:10:59,680
the main tool of our scheme is a

249
00:10:59,680 --> 00:11:02,480
function hiding reality

250
00:11:02,480 --> 00:11:05,839
in function hiding fe a secret key has

251
00:11:05,839 --> 00:11:08,959
the underlying function as well as a

252
00:11:08,959 --> 00:11:10,880
ciphertext to hide the underlying

253
00:11:10,880 --> 00:11:12,560
message

254
00:11:12,560 --> 00:11:15,360
so the point time adversary can run only

255
00:11:15,360 --> 00:11:18,640
in a product of c and x from the

256
00:11:18,640 --> 00:11:23,279
ciphertext of x and the secret key for c

257
00:11:23,279 --> 00:11:25,600
especially we use a function hiding

258
00:11:25,600 --> 00:11:28,399
linear fv scheme where our decryption

259
00:11:28,399 --> 00:11:31,519
value is output on the exponent of the

260
00:11:31,519 --> 00:11:35,279
target group of pairing groups

261
00:11:35,839 --> 00:11:38,560
means quadratic kf scheme is based on

262
00:11:38,560 --> 00:11:40,839
the ring i3 scheme by

263
00:11:40,839 --> 00:11:42,800
abdp-15

264
00:11:42,800 --> 00:11:46,000
let us briefly record the abd filing fee

265
00:11:46,000 --> 00:11:47,279
scheme

266
00:11:47,279 --> 00:11:48,640
in their scheme

267
00:11:48,640 --> 00:11:52,079
public key is a group element vector w

268
00:11:52,079 --> 00:11:53,680
of ranks m

269
00:11:53,680 --> 00:11:57,440
and ciphertext or for our vector x is

270
00:11:57,440 --> 00:12:02,079
x plus sw where square brackets denote a

271
00:12:02,079 --> 00:12:05,200
vector of group elements

272
00:12:05,200 --> 00:12:08,240
a naive way to achieve a quadratic v

273
00:12:08,240 --> 00:12:12,079
scheme from the ref is to encrypt all

274
00:12:12,079 --> 00:12:14,880
quadratic terms in advance

275
00:12:14,880 --> 00:12:15,920
however

276
00:12:15,920 --> 00:12:19,200
this induces the ciphertext size of

277
00:12:19,200 --> 00:12:21,680
order m squared

278
00:12:21,680 --> 00:12:25,360
len's idea is to use function hiding

279
00:12:25,360 --> 00:12:28,079
area if we to compress the ciphertext

280
00:12:28,079 --> 00:12:29,360
size

281
00:12:29,360 --> 00:12:32,480
specifically each element of vector is

282
00:12:32,480 --> 00:12:35,600
encoded into ciphertext and the circuit

283
00:12:35,600 --> 00:12:38,399
case of the function hiding linear

284
00:12:38,399 --> 00:12:40,959
efficiency scheme together with masking

285
00:12:40,959 --> 00:12:42,639
term

286
00:12:42,639 --> 00:12:46,399
then decrypting every pair of ciphertext

287
00:12:46,399 --> 00:12:48,720
and the secret key of the function

288
00:12:48,720 --> 00:12:51,839
hiding linearife scheme recovers each

289
00:12:51,839 --> 00:12:55,440
element of the naive quadratic fv scheme

290
00:12:55,440 --> 00:12:57,760
in the target group

291
00:12:57,760 --> 00:13:00,560
so this ciphertext can be decrypted

292
00:13:00,560 --> 00:13:05,518
similarly to abdp unifi scheme

293
00:13:05,600 --> 00:13:08,079
our high-level idea is to apply in

294
00:13:08,079 --> 00:13:11,120
second to the linear miv scheme by

295
00:13:11,120 --> 00:13:13,760
acf018

296
00:13:13,760 --> 00:13:17,200
in the acfc scheme a ciphertext of a

297
00:13:17,200 --> 00:13:20,720
vector x for slot i can be written as x

298
00:13:20,720 --> 00:13:24,160
i plus s i w plus u i over group

299
00:13:24,160 --> 00:13:25,760
elements

300
00:13:25,760 --> 00:13:28,480
roughly speaking this has the form that

301
00:13:28,480 --> 00:13:31,839
the vector ui is added to the ciphertext

302
00:13:31,839 --> 00:13:35,200
of the abdp scheme

303
00:13:35,200 --> 00:13:36,560
this can be

304
00:13:36,560 --> 00:13:38,720
decomposed into

305
00:13:38,720 --> 00:13:41,440
ciphertext and secret keys of function

306
00:13:41,440 --> 00:13:44,320
hiding linear if we similarly to range

307
00:13:44,320 --> 00:13:46,480
scheme like this

308
00:13:46,480 --> 00:13:49,839
observe that description of each pair of

309
00:13:49,839 --> 00:13:52,000
ciphertext standard secret key or

310
00:13:52,000 --> 00:13:55,839
function hiding linear fe scheme is the

311
00:13:55,839 --> 00:13:58,399
ciphertext of acf

312
00:13:58,399 --> 00:14:01,760
the acfzu scheme

313
00:14:01,760 --> 00:14:04,000
the point is that the reason that we

314
00:14:04,000 --> 00:14:07,440
decompose acfc ciphertext by the

315
00:14:07,440 --> 00:14:10,560
function hiding unifi scheme is not to

316
00:14:10,560 --> 00:14:13,279
compress the ciphertext size as rings

317
00:14:13,279 --> 00:14:14,240
scheme

318
00:14:14,240 --> 00:14:16,639
but to allow decrypter to generate the

319
00:14:16,639 --> 00:14:19,760
ac physio ciphertext for quadratic terms

320
00:14:19,760 --> 00:14:23,360
derived from different inputs

321
00:14:23,360 --> 00:14:26,320
that is by decrypting a function hiding

322
00:14:26,320 --> 00:14:29,360
fe cipher tickets for slot i

323
00:14:29,360 --> 00:14:31,839
and secret keys for slot j

324
00:14:31,839 --> 00:14:34,079
the decrypter can run

325
00:14:34,079 --> 00:14:37,199
the degree can generate the acfc

326
00:14:37,199 --> 00:14:42,079
ciphertext of x i o times x j for throat

327
00:14:42,079 --> 00:14:43,600
i j

328
00:14:43,600 --> 00:14:46,720
by this construction we can solve the

329
00:14:46,720 --> 00:14:48,639
posed challenge of dealing with

330
00:14:48,639 --> 00:14:51,040
quadratic terms derived from two

331
00:14:51,040 --> 00:14:53,920
different inputs

332
00:14:53,920 --> 00:14:56,720
in summary each ciphertext of our

333
00:14:56,720 --> 00:14:59,680
candidate quadratic mic immunity scheme

334
00:14:59,680 --> 00:15:03,519
consists of m pairs of ciphertext under

335
00:15:03,519 --> 00:15:05,839
secret key of the function hiding

336
00:15:05,839 --> 00:15:08,399
linearife scheme

337
00:15:08,399 --> 00:15:10,800
in decryption it first generates the

338
00:15:10,800 --> 00:15:13,920
acfc cybertext for throat ij by

339
00:15:13,920 --> 00:15:16,800
decryption with all pairs of

340
00:15:16,800 --> 00:15:19,440
function hiding if we ciphertext insult

341
00:15:19,440 --> 00:15:23,680
i and the secret key in short j

342
00:15:23,680 --> 00:15:26,399
a secret key of our candidate is the

343
00:15:26,399 --> 00:15:31,199
acfzu secret key of vector c

344
00:15:31,360 --> 00:15:34,639
finally by running decryption of m

345
00:15:34,639 --> 00:15:38,959
squared input acfzu scheme with

346
00:15:38,959 --> 00:15:43,199
my cts and misk is the desired

347
00:15:43,199 --> 00:15:45,199
decryption value

348
00:15:45,199 --> 00:15:47,199
the correctness for multi-input

349
00:15:47,199 --> 00:15:50,000
quadratic functions falls by this

350
00:15:50,000 --> 00:15:51,440
construction

351
00:15:51,440 --> 00:15:54,480
but we need more work to make the

352
00:15:54,480 --> 00:15:57,120
candidates secure

353
00:15:57,120 --> 00:15:59,360
let us explain why this construction is

354
00:15:59,360 --> 00:16:00,959
not secure

355
00:16:00,959 --> 00:16:03,360
we consider a two input case where the

356
00:16:03,360 --> 00:16:05,600
vector ranks is one

357
00:16:05,600 --> 00:16:07,279
suppose the adversary has two

358
00:16:07,279 --> 00:16:10,320
ciphertexts password one one cipher text

359
00:16:10,320 --> 00:16:13,839
for throughout two and one secret key

360
00:16:13,839 --> 00:16:16,560
in this case the adversary can generate

361
00:16:16,560 --> 00:16:17,880
the

362
00:16:17,880 --> 00:16:21,199
acv064 sort one one sort one two and

363
00:16:21,199 --> 00:16:22,720
through 2 2.

364
00:16:22,720 --> 00:16:25,600
the acf is used cyber text for slot 2 1

365
00:16:25,600 --> 00:16:28,240
can be ignored here since this encrypts

366
00:16:28,240 --> 00:16:31,040
the same time as cipher text for slot 1

367
00:16:31,040 --> 00:16:32,880
2.

368
00:16:32,880 --> 00:16:35,199
we can observe that the adversary can

369
00:16:35,199 --> 00:16:39,759
choose abc arbitrary from 1 and 2.

370
00:16:39,759 --> 00:16:45,440
so it can run if abc for any abc

371
00:16:45,440 --> 00:16:48,160
however this gives too much information

372
00:16:48,160 --> 00:16:50,639
to the adversary

373
00:16:50,639 --> 00:16:53,759
mi fish should allow the adversary to

374
00:16:53,759 --> 00:16:57,279
make two ways of decryption that is a

375
00:16:57,279 --> 00:17:00,160
first cipher text for throat one is used

376
00:17:00,160 --> 00:17:03,040
or the second ciphertext for third one

377
00:17:03,040 --> 00:17:04,720
is used

378
00:17:04,720 --> 00:17:07,679
so the adversary should be able to run

379
00:17:07,679 --> 00:17:12,480
only f111 and f222 and we need to

380
00:17:12,480 --> 00:17:15,199
prevent the adversary from running other

381
00:17:15,199 --> 00:17:17,199
cases

382
00:17:17,199 --> 00:17:20,160
observe that we can allow decryption a

383
00:17:20,160 --> 00:17:22,559
equals b equals c

384
00:17:22,559 --> 00:17:24,720
so it is sufficient to prohibit

385
00:17:24,720 --> 00:17:28,079
decryption if a does not equal b or a

386
00:17:28,079 --> 00:17:30,720
does not equal c

387
00:17:30,720 --> 00:17:33,120
we deal with the former case by the

388
00:17:33,120 --> 00:17:36,320
technique of attribute-based encryption

389
00:17:36,320 --> 00:17:39,440
that is we embed the information of a

390
00:17:39,440 --> 00:17:44,640
and b into ict and isk respectively

391
00:17:44,640 --> 00:17:49,600
and our decryption or even a equals b

392
00:17:49,600 --> 00:17:52,000
we constructed such an attribute based

393
00:17:52,000 --> 00:17:55,760
function hiding linear fee from pairings

394
00:17:55,760 --> 00:17:58,240
attribute based ring ife is also

395
00:17:58,240 --> 00:18:00,039
considered by

396
00:18:00,039 --> 00:18:01,600
accu-20

397
00:18:01,600 --> 00:18:04,240
but they did not consider the function

398
00:18:04,240 --> 00:18:07,520
hiding property so this is also

399
00:18:07,520 --> 00:18:11,120
one of new results of our work

400
00:18:11,120 --> 00:18:13,840
the rata case is more complex

401
00:18:13,840 --> 00:18:17,360
intuitively we prevent this case by

402
00:18:17,360 --> 00:18:20,440
checking random elements used in

403
00:18:20,440 --> 00:18:23,840
myct11 and mict12

404
00:18:23,840 --> 00:18:26,160
are the same

405
00:18:26,160 --> 00:18:29,600
since the random element in mict is

406
00:18:29,600 --> 00:18:32,080
inherited from ict

407
00:18:32,080 --> 00:18:36,000
the random elements used in mict111

408
00:18:36,000 --> 00:18:36,840
and

409
00:18:36,840 --> 00:18:39,600
mict12 will be different with

410
00:18:39,600 --> 00:18:42,799
overwhelming probability if a does not

411
00:18:42,799 --> 00:18:44,799
equal c

412
00:18:44,799 --> 00:18:47,760
to enter such uh checking functionality

413
00:18:47,760 --> 00:18:51,600
to the acfz arena mi feeds the

414
00:18:51,600 --> 00:18:54,400
challenging task but i will not go into

415
00:18:54,400 --> 00:18:56,960
details in this presentation since it is

416
00:18:56,960 --> 00:19:00,080
a little bit too technical

417
00:19:00,080 --> 00:19:02,880
these are the high-level ideas of our

418
00:19:02,880 --> 00:19:06,960
quadratic mifv scheme

419
00:19:08,160 --> 00:19:10,880
let us summarize this work

420
00:19:10,880 --> 00:19:12,799
the main contribution of this work is

421
00:19:12,799 --> 00:19:15,039
the construction of secret key quadratic

422
00:19:15,039 --> 00:19:17,760
mif scheme from pairings and the

423
00:19:17,760 --> 00:19:19,200
assumption is

424
00:19:19,200 --> 00:19:22,320
the standard matrix ddh

425
00:19:22,320 --> 00:19:24,960
we also show that the public key

426
00:19:24,960 --> 00:19:27,679
quadratic miv scheme can be easily

427
00:19:27,679 --> 00:19:32,160
constructed from our linear fv scheme

428
00:19:32,160 --> 00:19:34,640
finally we

429
00:19:34,640 --> 00:19:36,480
we mentioned several open problems

430
00:19:36,480 --> 00:19:38,799
related to our work

431
00:19:38,799 --> 00:19:41,919
the first is adaptively secure a

432
00:19:41,919 --> 00:19:44,559
quadratic mifv since we proved the

433
00:19:44,559 --> 00:19:46,799
security of our scheme in the selective

434
00:19:46,799 --> 00:19:48,640
security model

435
00:19:48,640 --> 00:19:51,840
however even for the single input case

436
00:19:51,840 --> 00:19:54,880
the adaptive security of quadratic fee

437
00:19:54,880 --> 00:19:57,280
has not been achieved yet in the

438
00:19:57,280 --> 00:20:00,000
standard model so it seems a challenging

439
00:20:00,000 --> 00:20:01,520
problem

440
00:20:01,520 --> 00:20:03,039
the second is

441
00:20:03,039 --> 00:20:04,799
shorter ciphertext

442
00:20:04,799 --> 00:20:07,360
i didn't mention the cybertech sides of

443
00:20:07,360 --> 00:20:10,400
our scheme in this presentation but a

444
00:20:10,400 --> 00:20:13,280
cybertext of our scheme has a raj

445
00:20:13,280 --> 00:20:15,440
overhead that is necessary for the

446
00:20:15,440 --> 00:20:17,440
security proof

447
00:20:17,440 --> 00:20:20,000
so investigating an authentic proof

448
00:20:20,000 --> 00:20:22,880
technique to reduce the overhead is also

449
00:20:22,880 --> 00:20:26,559
an interesting open problem

450
00:20:26,559 --> 00:20:29,520
lastly mifv for function class beyond

451
00:20:29,520 --> 00:20:32,320
quadratic functions is also interesting

452
00:20:32,320 --> 00:20:35,520
direction which includes a multi-client

453
00:20:35,520 --> 00:20:38,320
functional encryption and multi-input

454
00:20:38,320 --> 00:20:40,640
variant of partially hiding functional

455
00:20:40,640 --> 00:20:43,440
encryption for quadratic functions

456
00:20:43,440 --> 00:20:46,000
this is the end of my talk thank you for

457
00:20:46,000 --> 00:20:49,240
your attention

