1
00:00:00,160 --> 00:00:00,320
[Music]

2
00:00:00,320 --> 00:00:02,800
i'm glad to introduce our paper

3
00:00:02,800 --> 00:00:05,359
smoothing out binary linear codes and

4
00:00:05,359 --> 00:00:07,759
worst case sub-exponential hardness for

5
00:00:07,759 --> 00:00:08,880
airplane

6
00:00:08,880 --> 00:00:10,639
this is joint to work with john john

7
00:00:10,639 --> 00:00:13,519
that appears at crypto 2021

8
00:00:13,519 --> 00:00:15,839
at the core of this work is worst case

9
00:00:15,839 --> 00:00:18,320
to average case reductions for erpn

10
00:00:18,320 --> 00:00:20,480
which is in turn based on smooth dilemma

11
00:00:20,480 --> 00:00:23,119
for binary linear codes

12
00:00:23,119 --> 00:00:25,359
this is the outline of this talk

13
00:00:25,359 --> 00:00:28,560
we will start with the preliminaries

14
00:00:28,560 --> 00:00:31,920
first of all binary linear codes

15
00:00:31,920 --> 00:00:34,480
linear means that we encode the message

16
00:00:34,480 --> 00:00:38,079
x by multiplying with a m by n matrix

17
00:00:38,079 --> 00:00:40,559
called the generator matrix

18
00:00:40,559 --> 00:00:42,960
binary means x over g of 2

19
00:00:42,960 --> 00:00:44,800
namely every entry of the matrix of

20
00:00:44,800 --> 00:00:47,760
vector is either 0 or 1 and m as the

21
00:00:47,760 --> 00:00:50,719
length of the code word

22
00:00:52,559 --> 00:00:55,039
in general a good code has some

23
00:00:55,039 --> 00:00:57,760
non-trivial amount of minimum distance

24
00:00:57,760 --> 00:00:59,920
which is defined as the smallest hamming

25
00:00:59,920 --> 00:01:02,079
distance between all possible pairs of

26
00:01:02,079 --> 00:01:03,840
code words

27
00:01:03,840 --> 00:01:06,240
some previous work consider a strong

28
00:01:06,240 --> 00:01:08,000
strong version of hamming distance

29
00:01:08,000 --> 00:01:10,640
requirement called balanced code

30
00:01:10,640 --> 00:01:13,119
where this hamming distance has both the

31
00:01:13,119 --> 00:01:15,040
upper bound and the lower bound

32
00:01:15,040 --> 00:01:16,479
in other words

33
00:01:16,479 --> 00:01:18,560
the codeword has almost the same number

34
00:01:18,560 --> 00:01:20,479
of zeros and ones

35
00:01:20,479 --> 00:01:22,960
up to a beta fraction

36
00:01:22,960 --> 00:01:25,360
in this work we also consider the

37
00:01:25,360 --> 00:01:27,759
so-called independent code

38
00:01:27,759 --> 00:01:30,799
where the generator matrix has k-wise

39
00:01:30,799 --> 00:01:32,160
independent rows

40
00:01:32,160 --> 00:01:34,720
[Music]

41
00:01:34,720 --> 00:01:37,680
we mentioned that the mds code maximum

42
00:01:37,680 --> 00:01:40,400
distance separatable code is a special

43
00:01:40,400 --> 00:01:42,880
case of the independent code

44
00:01:42,880 --> 00:01:46,479
for k equals n

45
00:01:46,560 --> 00:01:48,399
the search version of the decoding

46
00:01:48,399 --> 00:01:50,640
problem is that given the generate

47
00:01:50,640 --> 00:01:53,840
matrix and the noisy code word to find

48
00:01:53,840 --> 00:01:57,119
out the original x in presence of noise

49
00:01:57,119 --> 00:01:58,960
vector e

50
00:01:58,960 --> 00:02:00,799
the average case version of the problem

51
00:02:00,799 --> 00:02:03,119
is called learning parity with noise

52
00:02:03,119 --> 00:02:05,439
where the matrix and secret is sampled

53
00:02:05,439 --> 00:02:08,560
uniformly at random and the noise

54
00:02:08,560 --> 00:02:10,399
follows from the coordinate white

55
00:02:10,399 --> 00:02:12,720
independent distribution namely the

56
00:02:12,720 --> 00:02:15,760
benui distribution

57
00:02:15,760 --> 00:02:17,680
the worst case of the problem is called

58
00:02:17,680 --> 00:02:20,000
the nearest codeword problem

59
00:02:20,000 --> 00:02:23,040
ncp in short and we consider the

60
00:02:23,040 --> 00:02:25,200
promised version of ncp

61
00:02:25,200 --> 00:02:27,280
where the noise vector is guaranteed to

62
00:02:27,280 --> 00:02:28,400
have a

63
00:02:28,400 --> 00:02:31,200
exact amount of harming weight

64
00:02:31,200 --> 00:02:33,120
we're particularly interested in the

65
00:02:33,120 --> 00:02:35,599
worst case to average case reduction

66
00:02:35,599 --> 00:02:39,518
for these two versions of the problems

67
00:02:39,760 --> 00:02:41,599
we mentioned that some known attacks are

68
00:02:41,599 --> 00:02:44,800
the two form of decoding problems

69
00:02:44,800 --> 00:02:46,800
for the standard airplane where the

70
00:02:46,800 --> 00:02:48,879
noise rate is constant

71
00:02:48,879 --> 00:02:51,680
which means independent of the dimension

72
00:02:51,680 --> 00:02:54,480
the best known attacks are bkw

73
00:02:54,480 --> 00:02:56,640
that has a slightly

74
00:02:56,640 --> 00:02:59,360
sub-exponential time complexity

75
00:02:59,360 --> 00:03:03,280
the promised ncp is known to be np-hard

76
00:03:03,280 --> 00:03:06,000
in the high noise region

77
00:03:06,000 --> 00:03:08,640
when the noise rate is sub-constant

78
00:03:08,640 --> 00:03:11,120
the best known attacks for ncp at the

79
00:03:11,120 --> 00:03:12,319
airpn

80
00:03:12,319 --> 00:03:15,599
has the complexity of roughly 2 to the

81
00:03:15,599 --> 00:03:17,040
power of

82
00:03:17,040 --> 00:03:19,200
the product of the noise rate and the

83
00:03:19,200 --> 00:03:20,720
dimensional aim

84
00:03:20,720 --> 00:03:23,599
in other words in the non-noise region

85
00:03:23,599 --> 00:03:26,480
we do we do not know any algorithm that

86
00:03:26,480 --> 00:03:30,640
solves uh the airplane better than ncp

87
00:03:30,640 --> 00:03:33,200
let's uh take a look at the reduction

88
00:03:33,200 --> 00:03:36,799
from ncp to airpn

89
00:03:36,799 --> 00:03:39,920
suppose we have a ncp instance and for

90
00:03:39,920 --> 00:03:42,080
our convenience

91
00:03:42,080 --> 00:03:44,640
suppose it's in the transposed form

92
00:03:44,640 --> 00:03:48,480
where this s-transpose and x-transpose

93
00:03:48,480 --> 00:03:49,599
denote

94
00:03:49,599 --> 00:03:51,440
a row vector

95
00:03:51,440 --> 00:03:53,920
we know from previous work

96
00:03:53,920 --> 00:03:55,360
that

97
00:03:55,360 --> 00:03:58,239
how to transform the ncp instance

98
00:03:58,239 --> 00:04:01,280
into a single airplane sample

99
00:04:01,280 --> 00:04:04,080
that is we sample a random r from the

100
00:04:04,080 --> 00:04:07,280
sparse distribution that has length m

101
00:04:07,280 --> 00:04:09,760
and roughly hamming weight d

102
00:04:09,760 --> 00:04:12,239
and we also sample a uniformly random

103
00:04:12,239 --> 00:04:14,560
row vector y

104
00:04:14,560 --> 00:04:17,600
then we multiply the noisy code word

105
00:04:17,600 --> 00:04:20,079
with the sparse vector r

106
00:04:20,079 --> 00:04:23,440
such that hopefully c r will be

107
00:04:23,440 --> 00:04:26,880
uniformly random and x r will be the bio

108
00:04:26,880 --> 00:04:29,680
bias the noisy bit as in the air pn

109
00:04:29,680 --> 00:04:31,360
[Music]

110
00:04:31,360 --> 00:04:34,440
and finally the original message of the

111
00:04:34,440 --> 00:04:36,160
ncps

112
00:04:36,160 --> 00:04:39,440
has no entropy at all so it's it needs

113
00:04:39,440 --> 00:04:43,840
to be xor with the random mask why

114
00:04:43,840 --> 00:04:46,320
we can do this many times to get

115
00:04:46,320 --> 00:04:49,440
as many airplane samples as needed

116
00:04:49,440 --> 00:04:52,240
at eurocrypt 2019

117
00:04:52,240 --> 00:04:54,479
at eurocrypt 2019

118
00:04:54,479 --> 00:04:57,919
blank schedule gives a smooth dilemma

119
00:04:57,919 --> 00:05:00,560
sure to show that this kind of approach

120
00:05:00,560 --> 00:05:01,840
actually works

121
00:05:01,840 --> 00:05:04,320
as long as the underlying binary linear

122
00:05:04,320 --> 00:05:07,919
code is a balanced code and r is sampled

123
00:05:07,919 --> 00:05:10,720
from a special sparse distribution

124
00:05:10,720 --> 00:05:13,520
they proved this through the so-called

125
00:05:13,520 --> 00:05:15,759
binary fourier transform

126
00:05:15,759 --> 00:05:18,400
and here we offer in this paper we offer

127
00:05:18,400 --> 00:05:20,320
a alternative proof

128
00:05:20,320 --> 00:05:24,639
while the using the vesrane's exo-lemma

129
00:05:24,639 --> 00:05:26,479
i would like to elaborate a bit more

130
00:05:26,479 --> 00:05:28,880
about the sparse sparse distribution

131
00:05:28,880 --> 00:05:30,880
that i sampled from

132
00:05:30,880 --> 00:05:33,039
so this is the distribution that has a

133
00:05:33,039 --> 00:05:34,240
lens m

134
00:05:34,240 --> 00:05:36,800
and of weight roughly d

135
00:05:36,800 --> 00:05:39,039
as soon shown previously during the

136
00:05:39,039 --> 00:05:40,320
reduction

137
00:05:40,320 --> 00:05:43,680
x r will become the noise of the lpn

138
00:05:43,680 --> 00:05:46,960
where r is a m bit error vector that has

139
00:05:46,960 --> 00:05:49,120
a fixed humming weight

140
00:05:49,120 --> 00:05:52,479
and this results into a biased bit that

141
00:05:52,479 --> 00:05:55,120
has roughly 2 to the

142
00:05:55,120 --> 00:05:57,950
wd over m close to uniform

143
00:05:57,950 --> 00:05:59,840
[Music]

144
00:05:59,840 --> 00:06:02,720
there are a few candidates about this

145
00:06:02,720 --> 00:06:04,880
sparse distribution

146
00:06:04,880 --> 00:06:08,319
quite naturally we can sample it from

147
00:06:08,319 --> 00:06:10,960
all strings of lens m and hamming weight

148
00:06:10,960 --> 00:06:12,000
d

149
00:06:12,000 --> 00:06:13,600
or alternatively

150
00:06:13,600 --> 00:06:15,120
we can take

151
00:06:15,120 --> 00:06:17,840
d random strings each of them has

152
00:06:17,840 --> 00:06:20,960
hamming weight exactly one and we then

153
00:06:20,960 --> 00:06:24,560
take their xor sum

154
00:06:24,560 --> 00:06:26,960
another option is that we can sample it

155
00:06:26,960 --> 00:06:30,080
from an enfold binary distribution of

156
00:06:30,080 --> 00:06:31,039
rate

157
00:06:31,039 --> 00:06:32,560
d over m

158
00:06:32,560 --> 00:06:36,880
such that the expected hemming weight

159
00:06:36,880 --> 00:06:39,759
of r is d

160
00:06:41,440 --> 00:06:43,520
now we can take a closer look at the

161
00:06:43,520 --> 00:06:46,479
brvw quantitatively

162
00:06:46,479 --> 00:06:48,560
first we look at their smoothing lemma

163
00:06:48,560 --> 00:06:50,400
for balanced code

164
00:06:50,400 --> 00:06:52,720
there is some lower bound on the ncp

165
00:06:52,720 --> 00:06:55,100
noise rate due to the known attacks

166
00:06:55,100 --> 00:06:56,479
[Music]

167
00:06:56,479 --> 00:06:58,479
there's also the giveaway version of

168
00:06:58,479 --> 00:07:01,360
type bound on beta to guarantee that the

169
00:07:01,360 --> 00:07:03,360
balance the balanced code actually

170
00:07:03,360 --> 00:07:04,800
exists

171
00:07:04,800 --> 00:07:08,080
finally the problem can be seen as uh

172
00:07:08,080 --> 00:07:11,759
extracting n random bits from source r

173
00:07:11,759 --> 00:07:13,680
in presence of noise

174
00:07:13,680 --> 00:07:15,520
so there is a lower bound on the

175
00:07:15,520 --> 00:07:17,280
sparsity of the

176
00:07:17,280 --> 00:07:20,639
random distribution

177
00:07:20,639 --> 00:07:24,240
the end result of blvw is that

178
00:07:24,240 --> 00:07:26,560
assume the quantity polynomial worth

179
00:07:26,560 --> 00:07:28,800
case hardness for ncp

180
00:07:28,800 --> 00:07:32,479
on extremely low noise balanced code

181
00:07:32,479 --> 00:07:34,639
we get the quantity polynomial hardness

182
00:07:34,639 --> 00:07:37,680
for airplane in the high noise region

183
00:07:37,680 --> 00:07:39,919
where this noise is inverse pulling

184
00:07:39,919 --> 00:07:42,960
polynomially close to uniform

185
00:07:42,960 --> 00:07:44,879
so this is more or less a feasibility

186
00:07:44,879 --> 00:07:46,639
result

187
00:07:46,639 --> 00:07:48,720
there remains space for further

188
00:07:48,720 --> 00:07:50,080
improvement

189
00:07:50,080 --> 00:07:51,680
as we can see

190
00:07:51,680 --> 00:07:54,479
the range of lambda is quite limited

191
00:07:54,479 --> 00:07:57,280
it needs to be at least super constant

192
00:07:57,280 --> 00:07:59,039
otherwise there will be polynomial

193
00:07:59,039 --> 00:08:01,120
attacks for ncp

194
00:08:01,120 --> 00:08:04,000
and lambda is upper bounded by

195
00:08:04,000 --> 00:08:06,400
o log n at the same time

196
00:08:06,400 --> 00:08:09,199
because any larger lambda would make

197
00:08:09,199 --> 00:08:11,039
airplane noise

198
00:08:11,039 --> 00:08:13,360
negligibly close to uniform

199
00:08:13,360 --> 00:08:17,680
and making the result less meaningful

200
00:08:18,080 --> 00:08:20,800
now we introduce our work on how to get

201
00:08:20,800 --> 00:08:23,039
get

202
00:08:23,919 --> 00:08:24,840
now

203
00:08:24,840 --> 00:08:28,319
we now we introduce our work on how to

204
00:08:28,319 --> 00:08:30,319
get tighter reductions for smoothing

205
00:08:30,319 --> 00:08:32,900
lemma and better results for airplane

206
00:08:32,900 --> 00:08:36,750
[Music]

207
00:08:37,519 --> 00:08:39,599
we would start with the probabilistic

208
00:08:39,599 --> 00:08:40,559
analysis

209
00:08:40,559 --> 00:08:43,200
and give a non-constructive form of the

210
00:08:43,200 --> 00:08:45,360
smoothing lemma

211
00:08:45,360 --> 00:08:48,320
that is there exists at least a certain

212
00:08:48,320 --> 00:08:50,000
fraction of the code

213
00:08:50,000 --> 00:08:51,440
that for any

214
00:08:51,440 --> 00:08:54,959
error vector of weight w and the sparse

215
00:08:54,959 --> 00:08:57,120
distribution r

216
00:08:57,120 --> 00:08:59,839
c r is statistically close to uniform

217
00:08:59,839 --> 00:09:03,120
even given the noise xr

218
00:09:03,120 --> 00:09:06,080
the proof follows three steps

219
00:09:06,080 --> 00:09:07,200
first

220
00:09:07,200 --> 00:09:09,600
given a uniformly random c

221
00:09:09,600 --> 00:09:13,200
we have that the the inequality hold

222
00:09:13,200 --> 00:09:15,680
by the left over hash lemma

223
00:09:15,680 --> 00:09:17,760
then by a markov

224
00:09:17,760 --> 00:09:21,360
inequality for every error vector x

225
00:09:21,360 --> 00:09:22,399
there x

226
00:09:22,399 --> 00:09:25,040
there exists a certain bounded fraction

227
00:09:25,040 --> 00:09:27,680
of of the code that fails the randomness

228
00:09:27,680 --> 00:09:29,519
extraction

229
00:09:29,519 --> 00:09:32,560
finally take take into account that

230
00:09:32,560 --> 00:09:33,839
there are

231
00:09:33,839 --> 00:09:36,640
m choose k different possibilities for

232
00:09:36,640 --> 00:09:38,560
for the arrow vector x

233
00:09:38,560 --> 00:09:40,160
we sum over

234
00:09:40,160 --> 00:09:42,399
we sum up all the fraction of the bad

235
00:09:42,399 --> 00:09:46,560
code by a unit bond union bond

236
00:09:46,560 --> 00:09:48,480
so the end goal is to prove that the

237
00:09:48,480 --> 00:09:50,720
hardness for the standard airplane

238
00:09:50,720 --> 00:09:53,360
whose noise rate is constant

239
00:09:53,360 --> 00:09:55,600
and we will recall the entropy

240
00:09:55,600 --> 00:09:56,880
requirement

241
00:09:56,880 --> 00:09:58,959
then the bad fraction of the code will

242
00:09:58,959 --> 00:10:00,959
be exceeding one

243
00:10:00,959 --> 00:10:03,200
which is useless

244
00:10:03,200 --> 00:10:05,200
put it differently

245
00:10:05,200 --> 00:10:07,920
it is seems not possible to get a worst

246
00:10:07,920 --> 00:10:10,320
case to average case reduction for

247
00:10:10,320 --> 00:10:12,160
standard airbn

248
00:10:12,160 --> 00:10:14,240
unless more title techniques are

249
00:10:14,240 --> 00:10:15,360
employed

250
00:10:15,360 --> 00:10:18,399
we may in particularly avoid the union

251
00:10:18,399 --> 00:10:21,760
bond or any other inequality that incurs

252
00:10:21,760 --> 00:10:23,240
a huge security loss

253
00:10:23,240 --> 00:10:26,640
[Music]

254
00:10:26,640 --> 00:10:29,360
so here we have an important observation

255
00:10:29,360 --> 00:10:31,920
about the smussing lemma which is key to

256
00:10:31,920 --> 00:10:34,560
obtain title results

257
00:10:34,560 --> 00:10:37,760
it is easy to prove unconditional case

258
00:10:37,760 --> 00:10:40,720
that cr is statistically close to

259
00:10:40,720 --> 00:10:41,760
uniform

260
00:10:41,760 --> 00:10:44,560
but proving the conditional case

261
00:10:44,560 --> 00:10:47,519
that cr is close to uniform given

262
00:10:47,519 --> 00:10:49,200
leakage x r

263
00:10:49,200 --> 00:10:51,519
is much less efficient

264
00:10:51,519 --> 00:10:54,399
since one has to take into account

265
00:10:54,399 --> 00:10:56,160
all possible values

266
00:10:56,160 --> 00:10:58,000
for the error vectors

267
00:10:58,000 --> 00:10:58,880
which

268
00:10:58,880 --> 00:11:00,500
which leads to much worse bound

269
00:11:00,500 --> 00:11:01,600
[Music]

270
00:11:01,600 --> 00:11:04,560
what we prove is the throwing

271
00:11:04,560 --> 00:11:07,519
if r is drawn from a coordinate wise

272
00:11:07,519 --> 00:11:09,440
sparse distribution

273
00:11:09,440 --> 00:11:12,000
namely the binary distribution

274
00:11:12,000 --> 00:11:14,320
then the statistical distance in the

275
00:11:14,320 --> 00:11:15,760
conditional case

276
00:11:15,760 --> 00:11:17,760
can be bounded by that of the

277
00:11:17,760 --> 00:11:19,440
unconditional case

278
00:11:19,440 --> 00:11:22,399
paying reasonable cost

279
00:11:22,399 --> 00:11:24,959
and this bond is almost tight with

280
00:11:24,959 --> 00:11:27,040
respect to the sparse sparse

281
00:11:27,040 --> 00:11:30,320
distribution r is sampled from

282
00:11:30,320 --> 00:11:33,760
therefore this reduce the problem to

283
00:11:33,760 --> 00:11:36,720
bond the statistical distance between cr

284
00:11:36,720 --> 00:11:39,360
and uniform distribution for its very

285
00:11:39,360 --> 00:11:42,399
specific code in consideration

286
00:11:42,399 --> 00:11:44,959
such as the balanced code

287
00:11:44,959 --> 00:11:47,440
and the independent code we considered

288
00:11:47,440 --> 00:11:49,440
in this paper

289
00:11:49,440 --> 00:11:52,399
we will omit the proofs which is trivial

290
00:11:52,399 --> 00:11:54,800
which is not trivial but not so

291
00:11:54,800 --> 00:11:57,800
surprising

292
00:11:58,480 --> 00:12:01,360
now we state our main result that

293
00:12:01,360 --> 00:12:04,480
assumes that the ncp problem is hard in

294
00:12:04,480 --> 00:12:05,920
the worst case

295
00:12:05,920 --> 00:12:09,440
then it implies the erpm problem is hard

296
00:12:09,440 --> 00:12:12,240
for certain parameter choices

297
00:12:12,240 --> 00:12:13,200
first

298
00:12:13,200 --> 00:12:16,560
we get the similar result as blvw

299
00:12:16,560 --> 00:12:19,120
by setting the parameters to

300
00:12:19,120 --> 00:12:20,959
appropriate values

301
00:12:20,959 --> 00:12:22,160
in this case

302
00:12:22,160 --> 00:12:25,040
our result look looks uh sympathetically

303
00:12:25,040 --> 00:12:27,839
the same as blvw

304
00:12:27,839 --> 00:12:29,120
if we want to compare more

305
00:12:29,120 --> 00:12:32,800
quantitatively then as tabulated

306
00:12:32,800 --> 00:12:36,079
for most value of m our result in the

307
00:12:36,079 --> 00:12:37,360
right hand

308
00:12:37,360 --> 00:12:38,959
is

309
00:12:38,959 --> 00:12:40,880
slightly worse

310
00:12:40,880 --> 00:12:44,160
but when an increase to polynomials of

311
00:12:44,160 --> 00:12:45,839
higher orders

312
00:12:45,839 --> 00:12:48,000
then our result

313
00:12:48,000 --> 00:12:51,200
in terms of the lpn's noise rate becomes

314
00:12:51,200 --> 00:12:54,560
much better and it keeps improving

315
00:12:54,560 --> 00:12:55,920
in contrast

316
00:12:55,920 --> 00:12:58,079
the result of blvw

317
00:12:58,079 --> 00:12:59,680
cease to improve

318
00:12:59,680 --> 00:13:00,560
for

319
00:13:00,560 --> 00:13:03,279
m equals to n cubic

320
00:13:03,279 --> 00:13:04,800
and beyond

321
00:13:04,800 --> 00:13:08,000
this is because in their smoothing lemma

322
00:13:08,000 --> 00:13:10,800
the bond consists of two terms

323
00:13:10,800 --> 00:13:13,200
so the second term when it is

324
00:13:13,200 --> 00:13:15,040
sufficiently small

325
00:13:15,040 --> 00:13:17,140
the first term will become dominant

326
00:13:17,140 --> 00:13:18,320
[Music]

327
00:13:18,320 --> 00:13:21,839
namely we we don't get a better bond no

328
00:13:21,839 --> 00:13:24,800
matter how large the value of m is an

329
00:13:24,800 --> 00:13:27,839
advantage of our result is that

330
00:13:27,839 --> 00:13:30,160
we can try actually trade the larger m

331
00:13:30,160 --> 00:13:32,839
for better noise

332
00:13:32,839 --> 00:13:35,760
rate more importantly we obtain our

333
00:13:35,760 --> 00:13:38,160
result that was not known before

334
00:13:38,160 --> 00:13:40,000
for instance

335
00:13:40,000 --> 00:13:43,360
by setting the noise rate of ncp to n2

336
00:13:43,360 --> 00:13:44,800
minus c

337
00:13:44,800 --> 00:13:48,399
and assume that it has almost optimal

338
00:13:48,399 --> 00:13:49,680
hardness

339
00:13:49,680 --> 00:13:52,959
namely it nearly matches known attacks

340
00:13:52,959 --> 00:13:55,839
up to a constant in the exponent

341
00:13:55,839 --> 00:13:57,519
then we get the

342
00:13:57,519 --> 00:13:58,720
desired

343
00:13:58,720 --> 00:14:00,240
results that

344
00:14:00,240 --> 00:14:01,040
no

345
00:14:01,040 --> 00:14:02,959
sub exponential hardness for standard

346
00:14:02,959 --> 00:14:03,920
erp

347
00:14:03,920 --> 00:14:06,160
the proof is quite straightforward

348
00:14:06,160 --> 00:14:08,240
by setting the values for the parameters

349
00:14:08,240 --> 00:14:10,240
accordingly

350
00:14:10,240 --> 00:14:11,760
note that the

351
00:14:11,760 --> 00:14:14,880
successor the success probability here

352
00:14:14,880 --> 00:14:16,959
consists of two terms

353
00:14:16,959 --> 00:14:19,680
which is why we need to consider

354
00:14:19,680 --> 00:14:22,720
two cases for the different range

355
00:14:22,720 --> 00:14:23,990
of the values of c

356
00:14:23,990 --> 00:14:27,199
[Music]

357
00:14:27,199 --> 00:14:29,760
we try to find them some applications

358
00:14:29,760 --> 00:14:31,360
for our result

359
00:14:31,360 --> 00:14:33,440
beyond what is proven

360
00:14:33,440 --> 00:14:36,320
which which is not very successful

361
00:14:36,320 --> 00:14:37,839
but there it's

362
00:14:37,839 --> 00:14:40,000
it's a worth mentioning

363
00:14:40,000 --> 00:14:41,360
for example

364
00:14:41,360 --> 00:14:44,000
we want if collision resistant hash

365
00:14:44,000 --> 00:14:46,959
functions and the public key encryptions

366
00:14:46,959 --> 00:14:49,519
can be constructed from the worst case

367
00:14:49,519 --> 00:14:52,720
hardness of the decoding problem

368
00:14:52,720 --> 00:14:54,079
as said

369
00:14:54,079 --> 00:14:55,839
we proved the

370
00:14:55,839 --> 00:15:00,560
exponential harness of our standard erp

371
00:15:00,560 --> 00:15:04,079
and we also know from previous work that

372
00:15:04,079 --> 00:15:06,800
the standard airplane with sufficient

373
00:15:06,800 --> 00:15:10,079
sub-exponential hardness implies public

374
00:15:10,079 --> 00:15:12,399
key encryption and the

375
00:15:12,399 --> 00:15:15,040
collision resistance hash functions

376
00:15:15,040 --> 00:15:17,040
unfortunately the hardness of the

377
00:15:17,040 --> 00:15:18,560
airplane we proved

378
00:15:18,560 --> 00:15:21,040
is not as strong as what is needed for

379
00:15:21,040 --> 00:15:23,600
pke and cih

380
00:15:23,600 --> 00:15:26,959
up to a lowercase omega factor as we can

381
00:15:26,959 --> 00:15:29,810
see as i highlighted on the on the slide

382
00:15:29,810 --> 00:15:32,560
[Music]

383
00:15:32,560 --> 00:15:34,399
another wish for thinking is whether we

384
00:15:34,399 --> 00:15:36,959
can have a exponential algorithm to

385
00:15:36,959 --> 00:15:40,480
solve ncp with constant error rate

386
00:15:40,480 --> 00:15:43,279
which will be a counterpart to the bkw

387
00:15:43,279 --> 00:15:46,800
in solving standard airbn

388
00:15:47,519 --> 00:15:50,639
we know value by shovski spkw violent

389
00:15:50,639 --> 00:15:53,360
that the airplane can be solved with

390
00:15:53,360 --> 00:15:55,440
polynomial many samples

391
00:15:55,440 --> 00:15:57,680
with noise moderate moderately close to

392
00:15:57,680 --> 00:15:59,440
uniform

393
00:15:59,440 --> 00:16:01,839
and another collaboration of our result

394
00:16:01,839 --> 00:16:04,800
is that there if there exists algorithms

395
00:16:04,800 --> 00:16:07,040
and solving air pn whose noise is

396
00:16:07,040 --> 00:16:10,160
inversely polynomial closed uniform

397
00:16:10,160 --> 00:16:12,320
then it implies another algorithm that

398
00:16:12,320 --> 00:16:16,800
solves the ncp with constant error rate

399
00:16:16,800 --> 00:16:19,360
unfortunately these two results cannot

400
00:16:19,360 --> 00:16:20,720
be connected

401
00:16:20,720 --> 00:16:23,199
again due to another small gap

402
00:16:23,199 --> 00:16:25,600
in the above the delta lies in between

403
00:16:25,600 --> 00:16:27,519
the open interval

404
00:16:27,519 --> 00:16:30,240
of zero and one

405
00:16:30,240 --> 00:16:32,639
well in our collateral the data has to

406
00:16:32,639 --> 00:16:35,040
be one

407
00:16:35,279 --> 00:16:38,079
next we will present another cute result

408
00:16:38,079 --> 00:16:41,680
about reducing lwe to large field

409
00:16:41,680 --> 00:16:43,440
airplane

410
00:16:43,440 --> 00:16:44,959
in general there are two ways to

411
00:16:44,959 --> 00:16:47,380
generalize air pn to a large modulus p

412
00:16:47,380 --> 00:16:48,639
[Music]

413
00:16:48,639 --> 00:16:50,480
if we use the generalized binary

414
00:16:50,480 --> 00:16:52,399
distribution for the noise

415
00:16:52,399 --> 00:16:53,360
namely

416
00:16:53,360 --> 00:16:55,920
e is either zero or uniformly

417
00:16:55,920 --> 00:16:58,800
distributed over gfp

418
00:16:58,800 --> 00:16:59,600
then

419
00:16:59,600 --> 00:17:01,519
it becomes the so-called large field

420
00:17:01,519 --> 00:17:02,959
airplane

421
00:17:02,959 --> 00:17:06,799
alternatively if we use the discrete

422
00:17:06,799 --> 00:17:09,439
alternatively if you we use discrete

423
00:17:09,439 --> 00:17:12,079
gaussian for the noise then the problem

424
00:17:12,079 --> 00:17:14,079
is called lwe

425
00:17:14,079 --> 00:17:16,880
we show that the lw implies airplane

426
00:17:16,880 --> 00:17:19,039
over the same prime

427
00:17:19,039 --> 00:17:22,160
modulus in the high noise region

428
00:17:22,160 --> 00:17:24,400
the proof is very simple

429
00:17:24,400 --> 00:17:27,760
that is we can transfer every lw sample

430
00:17:27,760 --> 00:17:30,240
into a airplane sample

431
00:17:30,240 --> 00:17:34,640
using a random mask m and multiplying m

432
00:17:34,640 --> 00:17:37,280
with the airplane sample

433
00:17:37,280 --> 00:17:38,799
as we can see

434
00:17:38,799 --> 00:17:42,080
m a is the product of a scalar and a

435
00:17:42,080 --> 00:17:44,240
vector multiplication

436
00:17:44,240 --> 00:17:46,720
which always which is always uniformly

437
00:17:46,720 --> 00:17:47,760
random

438
00:17:47,760 --> 00:17:50,160
and for any non-zero

439
00:17:50,160 --> 00:17:51,520
e

440
00:17:51,520 --> 00:17:55,440
m e is uniformly distributed over f p

441
00:17:55,440 --> 00:17:57,280
excluding zero

442
00:17:57,280 --> 00:17:59,360
and otherwise

443
00:17:59,360 --> 00:18:00,480
is zero

444
00:18:00,480 --> 00:18:02,160
this means that

445
00:18:02,160 --> 00:18:05,280
m e follows the generalized binary

446
00:18:05,280 --> 00:18:07,360
distribution over gfp

447
00:18:07,360 --> 00:18:09,760
and therefore the right hand sample

448
00:18:09,760 --> 00:18:11,440
after the transform

449
00:18:11,440 --> 00:18:13,280
is exactly the

450
00:18:13,280 --> 00:18:16,080
european sample over gfp

451
00:18:16,080 --> 00:18:17,039
on

452
00:18:17,039 --> 00:18:19,600
qed

453
00:18:19,679 --> 00:18:22,799
finally a short summary of this work

454
00:18:22,799 --> 00:18:25,520
we present two worst case to average

455
00:18:25,520 --> 00:18:27,919
case reductions for different types of

456
00:18:27,919 --> 00:18:29,280
airbn

457
00:18:29,280 --> 00:18:30,320
first

458
00:18:30,320 --> 00:18:32,960
large field airplane can be reduceable

459
00:18:32,960 --> 00:18:35,679
from lw of the same modulus

460
00:18:35,679 --> 00:18:38,080
and thus reducible from worst case

461
00:18:38,080 --> 00:18:40,460
lattice problems such as gap svp

462
00:18:40,460 --> 00:18:41,600
[Music]

463
00:18:41,600 --> 00:18:42,720
second

464
00:18:42,720 --> 00:18:45,280
we generalize the reductions of brvw

465
00:18:45,280 --> 00:18:48,590
from promised ncp to airpn

466
00:18:48,590 --> 00:18:50,080
[Music]

467
00:18:50,080 --> 00:18:52,480
the underlying sap problem we consider

468
00:18:52,480 --> 00:18:55,120
includes not only the balance code but

469
00:18:55,120 --> 00:18:57,440
also independent code

470
00:18:57,440 --> 00:19:01,120
in addition to what is approved in blvw

471
00:19:01,120 --> 00:19:03,520
we also show that under the nearly

472
00:19:03,520 --> 00:19:05,280
optimum hardness assumption about the

473
00:19:05,280 --> 00:19:07,280
low noise app ncp

474
00:19:07,280 --> 00:19:10,240
it implies that the desired end result

475
00:19:10,240 --> 00:19:11,520
namely

476
00:19:11,520 --> 00:19:14,880
exponential hardness for standard erp

477
00:19:14,880 --> 00:19:17,120
there remain a few urban questions such

478
00:19:17,120 --> 00:19:18,000
as

479
00:19:18,000 --> 00:19:20,160
how we can base the hardness of the

480
00:19:20,160 --> 00:19:23,360
airplane on promised ncp

481
00:19:23,360 --> 00:19:26,240
of any code with a non-trivial amount of

482
00:19:26,240 --> 00:19:28,720
mean hamming distance minimum harming

483
00:19:28,720 --> 00:19:30,160
distance

484
00:19:30,160 --> 00:19:33,039
how to construct public key encryption

485
00:19:33,039 --> 00:19:35,520
and collision resistance hash functions

486
00:19:35,520 --> 00:19:38,799
from the worst case decoding problems

487
00:19:38,799 --> 00:19:40,240
and

488
00:19:40,240 --> 00:19:42,320
find out more efficient and useful

489
00:19:42,320 --> 00:19:47,200
relations between awe and airplane

490
00:19:47,360 --> 00:19:50,000
that concludes my talk thank you for

491
00:19:50,000 --> 00:19:52,559
your attention

