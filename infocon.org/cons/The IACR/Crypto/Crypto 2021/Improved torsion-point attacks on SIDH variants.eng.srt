1
00:00:01,040 --> 00:00:02,720
computer production i'm going to talk

2
00:00:02,720 --> 00:00:04,560
about improved torsion point attacks on

3
00:00:04,560 --> 00:00:06,720
sidh variants which is joint work with

4
00:00:06,720 --> 00:00:09,360
victoria dakka christine marti chloe

5
00:00:09,360 --> 00:00:11,679
martindale lawrence punning christopher

6
00:00:11,679 --> 00:00:14,000
and kate stein

7
00:00:14,000 --> 00:00:15,839
so socially based crypto is based on the

8
00:00:15,839 --> 00:00:17,920
heart problem of finding isogens between

9
00:00:17,920 --> 00:00:20,000
super signal optic curves

10
00:00:20,000 --> 00:00:22,000
but the degree of the secret isogeny is

11
00:00:22,000 --> 00:00:23,920
of the form l to the k where l is some

12
00:00:23,920 --> 00:00:25,920
small prime number and this can be

13
00:00:25,920 --> 00:00:27,840
interpreted as a path finding problem in

14
00:00:27,840 --> 00:00:30,960
the supersegment isogenic graph

15
00:00:30,960 --> 00:00:32,640
best known algorithms for finding a

16
00:00:32,640 --> 00:00:34,399
degree d isogeny

17
00:00:34,399 --> 00:00:35,760
are then just metered in middle

18
00:00:35,760 --> 00:00:39,600
algorithms reduced to random walks from

19
00:00:39,600 --> 00:00:42,000
both endpoints and hope for a collision

20
00:00:42,000 --> 00:00:43,440
this gives you an algorithm which has

21
00:00:43,440 --> 00:00:45,360
time complexity roughly square roots of

22
00:00:45,360 --> 00:00:48,480
d but requires a lot of memory

23
00:00:48,480 --> 00:00:50,320
and the valence bonus catheter algorithm

24
00:00:50,320 --> 00:00:53,039
gives a time memory trade-off

25
00:00:53,039 --> 00:00:55,920
nevertheless uh all known algorithms for

26
00:00:55,920 --> 00:00:57,039
this problem

27
00:00:57,039 --> 00:01:01,600
are exponential in the size of the input

28
00:01:01,600 --> 00:01:04,319
however most cryptosystems most

29
00:01:04,319 --> 00:01:06,720
prominently sit h are based on

30
00:01:06,720 --> 00:01:08,720
relaxations of this problem

31
00:01:08,720 --> 00:01:10,960
so the natural question occurs

32
00:01:10,960 --> 00:01:12,479
can one exploit

33
00:01:12,479 --> 00:01:15,920
this extra information somehow to beat

34
00:01:15,920 --> 00:01:19,119
generic into the middle algorithms

35
00:01:19,119 --> 00:01:21,040
first let me briefly recall super

36
00:01:21,040 --> 00:01:23,600
singular isogenitive album

37
00:01:23,600 --> 00:01:27,200
or otherwise known as idh

38
00:01:27,200 --> 00:01:29,280
let p be a prime number and let a and b

39
00:01:29,280 --> 00:01:31,680
be smooth coprime integers

40
00:01:31,680 --> 00:01:33,680
that e0 will be a super singlet curve

41
00:01:33,680 --> 00:01:36,079
over fp square

42
00:01:36,079 --> 00:01:40,400
then alice picks a cyclic subgroup ga

43
00:01:40,400 --> 00:01:42,640
and computes the corresponding isogeny

44
00:01:42,640 --> 00:01:46,000
e0 over ga going from e0 to ea

45
00:01:46,000 --> 00:01:48,159
and sends the codomain of the secret

46
00:01:48,159 --> 00:01:50,320
isogen ea to pop

47
00:01:50,320 --> 00:01:53,520
and bob also picks a cyclic subgroup

48
00:01:53,520 --> 00:01:55,680
computes the corresponding misogyny and

49
00:01:55,680 --> 00:01:57,119
again sends the codomain of the

50
00:01:57,119 --> 00:02:00,479
secretized rgb to alice

51
00:02:00,479 --> 00:02:02,799
and then they want

52
00:02:02,799 --> 00:02:04,799
to compute the common shared secret

53
00:02:04,799 --> 00:02:08,080
which is easy over ga and gb but just

54
00:02:08,080 --> 00:02:11,120
knowing the co-domain of the others uh

55
00:02:11,120 --> 00:02:13,280
secret isogeny is not enough to compute

56
00:02:13,280 --> 00:02:15,520
this shared secret so both have to send

57
00:02:15,520 --> 00:02:17,760
over some extra information namely

58
00:02:17,760 --> 00:02:21,040
allison's over phi apb and phi aqb where

59
00:02:21,040 --> 00:02:23,599
pb and qb generate the beat version and

60
00:02:23,599 --> 00:02:26,800
bob sends over phi b p a phi b q a where

61
00:02:26,800 --> 00:02:30,319
p a and q a generate the a torsion

62
00:02:30,319 --> 00:02:32,080
this motivates the following algorithic

63
00:02:32,080 --> 00:02:33,440
problem

64
00:02:33,440 --> 00:02:36,160
which we call the ssit problem let 5 be

65
00:02:36,160 --> 00:02:38,400
a secret misogyny of known degree a

66
00:02:38,400 --> 00:02:41,200
between two super simulated curves e0

67
00:02:41,200 --> 00:02:43,200
and ea

68
00:02:43,200 --> 00:02:46,160
and suppose you also know 5 pb and 5 qb

69
00:02:46,160 --> 00:02:48,800
where pb and qb generate the b torsion

70
00:02:48,800 --> 00:02:51,440
and the problem is to compute phi

71
00:02:51,440 --> 00:02:52,959
so our goal is to give certain

72
00:02:52,959 --> 00:02:55,440
conditions on a b and p where p is the

73
00:02:55,440 --> 00:02:57,920
characteristic of the base field

74
00:02:57,920 --> 00:02:59,680
and then we can solve this problem in

75
00:02:59,680 --> 00:03:02,080
polynomial time or at least faster than

76
00:03:02,080 --> 00:03:05,599
generic algorithms this is a relaxation

77
00:03:05,599 --> 00:03:07,200
of the found

78
00:03:07,200 --> 00:03:09,440
cssi problem which was introduced in the

79
00:03:09,440 --> 00:03:12,239
sidh paper where a and b are also

80
00:03:12,239 --> 00:03:14,159
required to be roughly the same size and

81
00:03:14,159 --> 00:03:18,200
both have to be prime powers

82
00:03:18,480 --> 00:03:20,640
so some remarks so for this problem to

83
00:03:20,640 --> 00:03:22,400
truly make sense you need

84
00:03:22,400 --> 00:03:24,000
the b torsion to be efficiently

85
00:03:24,000 --> 00:03:26,239
representable which you can do in many

86
00:03:26,239 --> 00:03:28,720
ways so you could choose p to be to be

87
00:03:28,720 --> 00:03:30,959
power smooth

88
00:03:30,959 --> 00:03:34,239
but most systems uh

89
00:03:34,239 --> 00:03:36,799
use special primes

90
00:03:36,799 --> 00:03:38,239
to make sure that the b torsion is

91
00:03:38,239 --> 00:03:40,159
defined over a small extension fields in

92
00:03:40,159 --> 00:03:43,440
s i d h a and b both divide p plus one

93
00:03:43,440 --> 00:03:44,840
and then b

94
00:03:44,840 --> 00:03:48,480
side which is a variant of sidh

95
00:03:48,480 --> 00:03:50,560
a and b are chosen to divide p square

96
00:03:50,560 --> 00:03:52,159
minus one

97
00:03:52,159 --> 00:03:54,319
in both sides the h and b set balance

98
00:03:54,319 --> 00:03:56,080
parameters are used

99
00:03:56,080 --> 00:03:57,760
meaning that a is roughly the same size

100
00:03:57,760 --> 00:04:00,080
as b but that doesn't really provide any

101
00:04:00,080 --> 00:04:02,319
efficiency benefit it just comes from

102
00:04:02,319 --> 00:04:03,840
the fact that you want the same security

103
00:04:03,840 --> 00:04:07,200
level for alice and bob

104
00:04:07,920 --> 00:04:10,560
so the first attack which exploits

105
00:04:10,560 --> 00:04:13,280
this uh extra information was by patea

106
00:04:13,280 --> 00:04:15,200
2017 ancient crypt

107
00:04:15,200 --> 00:04:16,639
and let me briefly recall what the

108
00:04:16,639 --> 00:04:18,238
attack does so

109
00:04:18,238 --> 00:04:19,839
the main idea is to find a special

110
00:04:19,839 --> 00:04:21,759
anamorphism theta of the starting curve

111
00:04:21,759 --> 00:04:26,080
is zero as an integer d such that

112
00:04:26,080 --> 00:04:29,040
phi theta phi hat plus d can be

113
00:04:29,040 --> 00:04:31,360
recovered from its restriction from e a

114
00:04:31,360 --> 00:04:32,320
b

115
00:04:32,320 --> 00:04:34,560
and why does this help us because then

116
00:04:34,560 --> 00:04:36,320
you can compute the intersection of the

117
00:04:36,320 --> 00:04:38,479
kernel of tau minus t and the a version

118
00:04:38,479 --> 00:04:40,479
of the target curve which will

119
00:04:40,479 --> 00:04:42,960
essentially give you the jewel of phi

120
00:04:42,960 --> 00:04:46,560
would you know some technical details

121
00:04:46,639 --> 00:04:49,120
and then the natural question how do you

122
00:04:49,120 --> 00:04:52,000
find such a uh

123
00:04:52,000 --> 00:04:55,040
such a tile so what

124
00:04:55,040 --> 00:04:57,759
restrictions the impulse on theta

125
00:04:57,759 --> 00:04:59,600
so you choose t time away the degree of

126
00:04:59,600 --> 00:05:00,479
tau

127
00:05:00,479 --> 00:05:02,479
is b times ever

128
00:05:02,479 --> 00:05:04,080
e is something small because then you

129
00:05:04,080 --> 00:05:07,520
can recover the b part of tau just using

130
00:05:07,520 --> 00:05:09,840
the torsion point images and then the e

131
00:05:09,840 --> 00:05:11,440
part can be recovered by some meat in

132
00:05:11,440 --> 00:05:13,840
the middle algorithm

133
00:05:13,840 --> 00:05:15,919
and then the next question is how do you

134
00:05:15,919 --> 00:05:17,759
find such a theta

135
00:05:17,759 --> 00:05:19,360
in general when you know nothing about

136
00:05:19,360 --> 00:05:21,919
the endomorphism ring of e0 then this is

137
00:05:21,919 --> 00:05:23,919
a hard problem because for generic

138
00:05:23,919 --> 00:05:26,080
random curves you usually don't know any

139
00:05:26,080 --> 00:05:28,320
non-scalar anamorphisms

140
00:05:28,320 --> 00:05:30,479
but in many applications or actually

141
00:05:30,479 --> 00:05:32,320
most applications a special starting

142
00:05:32,320 --> 00:05:35,520
curve is used y square equals x x

143
00:05:35,520 --> 00:05:36,880
which has a very

144
00:05:36,880 --> 00:05:38,560
particular endomorphism ring which is

145
00:05:38,560 --> 00:05:40,400
known and has a special structure namely

146
00:05:40,400 --> 00:05:41,759
it contains

147
00:05:41,759 --> 00:05:44,080
i and j with the property that i squared

148
00:05:44,080 --> 00:05:47,039
is minus one j squared is minus p j is

149
00:05:47,039 --> 00:05:50,080
actually just a forbidden small

150
00:05:50,080 --> 00:05:52,400
and i times j is equal to minus j times

151
00:05:52,400 --> 00:05:53,680
i

152
00:05:53,680 --> 00:05:55,520
and in this context just finding a

153
00:05:55,520 --> 00:05:57,680
suitable theta

154
00:05:57,680 --> 00:05:59,600
is equivalent to solving uh the

155
00:05:59,600 --> 00:06:01,840
following diaphragm time equation

156
00:06:01,840 --> 00:06:04,560
uh a squared times a small a squared p

157
00:06:04,560 --> 00:06:07,199
plus b squared p plus c squared plus d

158
00:06:07,199 --> 00:06:09,360
squared equals b times e

159
00:06:09,360 --> 00:06:11,600
here we're looking for small a small b

160
00:06:11,600 --> 00:06:13,280
small c and small d

161
00:06:13,280 --> 00:06:15,199
and e and we also have the actual

162
00:06:15,199 --> 00:06:18,319
condition that b should be small

163
00:06:18,319 --> 00:06:20,240
so how do we solve such an equation so

164
00:06:20,240 --> 00:06:22,240
first we solve it modulo a square which

165
00:06:22,240 --> 00:06:23,600
will give us d

166
00:06:23,600 --> 00:06:25,600
then we solve it modulo p which will

167
00:06:25,600 --> 00:06:27,680
give us c and then

168
00:06:27,680 --> 00:06:30,400
we hope that what we get is a sum of two

169
00:06:30,400 --> 00:06:31,440
squares

170
00:06:31,440 --> 00:06:33,680
if not then we iterate

171
00:06:33,680 --> 00:06:35,919
and this is a viable way of solving this

172
00:06:35,919 --> 00:06:38,000
equation whenever b is bigger than p

173
00:06:38,000 --> 00:06:41,280
squared times a squared

174
00:06:41,440 --> 00:06:42,240
so

175
00:06:42,240 --> 00:06:45,360
our main result concerns improving these

176
00:06:45,360 --> 00:06:48,880
methods in various ways

177
00:06:48,880 --> 00:06:50,160
so let me start with our first

178
00:06:50,160 --> 00:06:52,240
improvement so the first improvement is

179
00:06:52,240 --> 00:06:53,840
that it's actually enough for the degree

180
00:06:53,840 --> 00:06:57,440
of tau to be equal to b squared times e

181
00:06:57,440 --> 00:06:58,880
and why is that

182
00:06:58,880 --> 00:07:00,400
because then tau can actually be

183
00:07:00,400 --> 00:07:04,000
composed as psi one a top side to dual

184
00:07:04,000 --> 00:07:07,120
plus multiplication by m

185
00:07:07,120 --> 00:07:08,240
uh

186
00:07:08,240 --> 00:07:10,160
where uh the degree of psi one and psi

187
00:07:10,160 --> 00:07:12,960
two is b over m and the graph tau is e

188
00:07:12,960 --> 00:07:16,960
and m is actually either one or two

189
00:07:16,960 --> 00:07:18,960
and uh

190
00:07:18,960 --> 00:07:21,199
we can get most of the information about

191
00:07:21,199 --> 00:07:24,160
how just by looking at tao modulo b

192
00:07:24,160 --> 00:07:26,319
so tau modulo b is actually can be

193
00:07:26,319 --> 00:07:28,160
represented by a two times two matrix

194
00:07:28,160 --> 00:07:31,199
over z over p z and the kernel of this

195
00:07:31,199 --> 00:07:33,520
matrix

196
00:07:33,520 --> 00:07:35,360
is the kernel psi one this was already

197
00:07:35,360 --> 00:07:37,039
used in partisan tag

198
00:07:37,039 --> 00:07:38,960
but then the image of this matrix is

199
00:07:38,960 --> 00:07:42,400
actually the kernel of psi two

200
00:07:42,639 --> 00:07:44,879
and the m can also be recovered from

201
00:07:44,879 --> 00:07:46,800
this matrix representation the only part

202
00:07:46,800 --> 00:07:48,479
which cannot be recovered is the ita

203
00:07:48,479 --> 00:07:50,080
part but again

204
00:07:50,080 --> 00:07:52,639
this that part can be recovered

205
00:07:52,639 --> 00:07:55,360
by generic meat in the middle algorithm

206
00:07:55,360 --> 00:07:56,879
an alternative way of thinking about

207
00:07:56,879 --> 00:07:58,800
this attack is just running patis attack

208
00:07:58,800 --> 00:08:01,759
twice once with theta and then one with

209
00:08:01,759 --> 00:08:03,840
the dual of theta

210
00:08:03,840 --> 00:08:05,680
and then essentially with the first

211
00:08:05,680 --> 00:08:07,120
attack you recover

212
00:08:07,120 --> 00:08:09,039
psi one and the second one you recover

213
00:08:09,039 --> 00:08:12,680
the fuel of psi2

214
00:08:14,240 --> 00:08:16,319
so another way of thinking about this

215
00:08:16,319 --> 00:08:18,960
attack is actually a reduction from

216
00:08:18,960 --> 00:08:21,280
finding a suitable data with a suitable

217
00:08:21,280 --> 00:08:22,400
degree

218
00:08:22,400 --> 00:08:23,360
and

219
00:08:23,360 --> 00:08:25,199
the other one being

220
00:08:25,199 --> 00:08:28,479
the ssid problem

221
00:08:28,560 --> 00:08:30,240
so when the special when the starting

222
00:08:30,240 --> 00:08:32,479
curve is is y square equals to x equals

223
00:08:32,479 --> 00:08:33,279
x

224
00:08:33,279 --> 00:08:34,958
then we have a very similar differential

225
00:08:34,958 --> 00:08:37,039
equation to the previous one except

226
00:08:37,039 --> 00:08:40,320
now we have b squared instead of b

227
00:08:40,320 --> 00:08:41,919
and we can solve this whenever b is

228
00:08:41,919 --> 00:08:44,240
bigger than p times p times a with the

229
00:08:44,240 --> 00:08:47,680
exact same method as before

230
00:08:47,920 --> 00:08:49,920
but solutions should exist for a much

231
00:08:49,920 --> 00:08:52,320
wider variety of parameters just weren't

232
00:08:52,320 --> 00:08:53,279
able to

233
00:08:53,279 --> 00:08:54,399
find them

234
00:08:54,399 --> 00:08:56,399
we give heuristics

235
00:08:56,399 --> 00:08:59,200
on on when this should be solvable but

236
00:08:59,200 --> 00:09:02,880
solving them is left as an open problem

237
00:09:02,880 --> 00:09:05,200
the second improvement is that

238
00:09:05,200 --> 00:09:06,560
it's actually enough for the degree of

239
00:09:06,560 --> 00:09:10,480
tile to be b squared times p times e

240
00:09:10,480 --> 00:09:12,160
because you can run the same attack as

241
00:09:12,160 --> 00:09:13,440
before

242
00:09:13,440 --> 00:09:14,240
just

243
00:09:14,240 --> 00:09:17,120
when you're left with the eta part

244
00:09:17,120 --> 00:09:19,360
then of course if eta has a small degree

245
00:09:19,360 --> 00:09:21,279
you can recover it by some method of

246
00:09:21,279 --> 00:09:24,320
algorithm but even if

247
00:09:24,320 --> 00:09:26,880
the two curves in in that part of the

248
00:09:26,880 --> 00:09:28,800
attack are not close but one of them is

249
00:09:28,800 --> 00:09:30,720
close to the other one's conjugate you

250
00:09:30,720 --> 00:09:32,880
can still recover the isogeny by

251
00:09:32,880 --> 00:09:35,680
applying for penis and then applying the

252
00:09:35,680 --> 00:09:37,760
meat in the middle algorithm so this

253
00:09:37,760 --> 00:09:39,600
changes the equation from b square to b

254
00:09:39,600 --> 00:09:42,480
square p now this again imposes a modulo

255
00:09:42,480 --> 00:09:44,320
p condition now

256
00:09:44,320 --> 00:09:45,839
so you need to choose c and d to be

257
00:09:45,839 --> 00:09:48,480
divisible by p

258
00:09:48,480 --> 00:09:51,040
you make this choice and then you divide

259
00:09:51,040 --> 00:09:52,560
by p

260
00:09:52,560 --> 00:09:54,720
and set c equals to zero

261
00:09:54,720 --> 00:09:57,120
and then solving this equation

262
00:09:57,120 --> 00:10:00,000
is again a very similar one as before

263
00:10:00,000 --> 00:10:01,920
the solve modulo a square and then what

264
00:10:01,920 --> 00:10:04,079
you hope that what you get is the sum of

265
00:10:04,079 --> 00:10:05,279
two squares

266
00:10:05,279 --> 00:10:06,800
the importance of this lesson is that

267
00:10:06,800 --> 00:10:10,480
this is much less reliant on p

268
00:10:10,480 --> 00:10:12,160
because essentially by setting c equals

269
00:10:12,160 --> 00:10:13,680
to zero you only have one p in the

270
00:10:13,680 --> 00:10:15,200
equation

271
00:10:15,200 --> 00:10:17,440
and

272
00:10:17,680 --> 00:10:19,920
this leads to a solution so this method

273
00:10:19,920 --> 00:10:21,680
succeeds whenever b is bigger than

274
00:10:21,680 --> 00:10:24,240
square root of p times a squared

275
00:10:24,240 --> 00:10:25,839
but you know some technical details

276
00:10:25,839 --> 00:10:27,279
which

277
00:10:27,279 --> 00:10:29,040
for that uh see the full version of the

278
00:10:29,040 --> 00:10:30,079
paper

279
00:10:30,079 --> 00:10:31,760
so why is this important because you

280
00:10:31,760 --> 00:10:34,240
could bring down the exponent of p from

281
00:10:34,240 --> 00:10:37,440
one to one half

282
00:10:38,160 --> 00:10:40,959
but the then the exponent of a went up

283
00:10:40,959 --> 00:10:43,200
from one to two

284
00:10:43,200 --> 00:10:45,120
but this is particularly important for

285
00:10:45,120 --> 00:10:47,519
sidh-like parameter choices

286
00:10:47,519 --> 00:10:48,560
where p

287
00:10:48,560 --> 00:10:52,719
is the biggest factor in the equation

288
00:10:53,200 --> 00:10:55,279
so all these conditions were concerned

289
00:10:55,279 --> 00:10:56,959
with polynomial time attacks but you can

290
00:10:56,959 --> 00:10:58,560
also look at attacks which are

291
00:10:58,560 --> 00:11:01,120
exponential time but are faster than

292
00:11:01,120 --> 00:11:04,240
generic pathfinding algorithms

293
00:11:04,240 --> 00:11:05,760
and they have derived two types of

294
00:11:05,760 --> 00:11:07,360
methods for for dealing with this

295
00:11:07,360 --> 00:11:09,120
situation one is that of course you can

296
00:11:09,120 --> 00:11:10,320
increase

297
00:11:10,320 --> 00:11:12,720
uh the size of e

298
00:11:12,720 --> 00:11:15,040
and then uh the cost of the attack is

299
00:11:15,040 --> 00:11:17,920
just the the cost of finding a degree e

300
00:11:17,920 --> 00:11:20,240
isolate because all the other

301
00:11:20,240 --> 00:11:23,200
parts of the attack are polynomial time

302
00:11:23,200 --> 00:11:25,279
the other one is you can also

303
00:11:25,279 --> 00:11:28,320
guess part of the secret isogeny

304
00:11:28,320 --> 00:11:30,720
which will reduce a

305
00:11:30,720 --> 00:11:32,320
and then run the torsion point attack

306
00:11:32,320 --> 00:11:34,959
and then of course

307
00:11:35,120 --> 00:11:37,360
the attack can fail if the first gas was

308
00:11:37,360 --> 00:11:38,800
wrong

309
00:11:38,800 --> 00:11:40,160
and if it fails then you choose a

310
00:11:40,160 --> 00:11:42,640
different

311
00:11:43,760 --> 00:11:47,279
guess and guessing a degree d isolate

312
00:11:47,279 --> 00:11:49,200
will give you

313
00:11:49,200 --> 00:11:50,399
a factor

314
00:11:50,399 --> 00:11:53,680
d in complexity

315
00:11:53,680 --> 00:11:56,399
so now let me show two graphs which show

316
00:11:56,399 --> 00:11:58,399
the evolution of torsion point text

317
00:11:58,399 --> 00:11:59,680
throughout the years

318
00:11:59,680 --> 00:12:03,360
so the first is the 2017 attack biparty

319
00:12:03,360 --> 00:12:05,839
so in this graph you have two axes an x

320
00:12:05,839 --> 00:12:08,320
is alpha and x is beta

321
00:12:08,320 --> 00:12:09,760
where a

322
00:12:09,760 --> 00:12:11,600
is roughly p to the alpha and b is

323
00:12:11,600 --> 00:12:13,200
roughly p to the beta so now you want

324
00:12:13,200 --> 00:12:15,279
conditions on alpha and beta

325
00:12:15,279 --> 00:12:17,279
on uh

326
00:12:17,279 --> 00:12:19,200
when you have improved attacks so in

327
00:12:19,200 --> 00:12:20,079
this

328
00:12:20,079 --> 00:12:20,959
graph

329
00:12:20,959 --> 00:12:23,760
the red line symbolizes and above the

330
00:12:23,760 --> 00:12:25,760
red area symbolizes polynomial time

331
00:12:25,760 --> 00:12:28,079
attacks and the orange line and above

332
00:12:28,079 --> 00:12:30,959
symbolizes better than generic attacks

333
00:12:30,959 --> 00:12:32,480
as you can see the original attack

334
00:12:32,480 --> 00:12:34,000
didn't affect

335
00:12:34,000 --> 00:12:36,639
uh any sidh or b-side-like parameter

336
00:12:36,639 --> 00:12:39,120
choices because so the line

337
00:12:39,120 --> 00:12:40,000
uh

338
00:12:40,000 --> 00:12:42,079
the dotted line connecting the two ones

339
00:12:42,079 --> 00:12:44,560
corresponds to sid h-like parameter

340
00:12:44,560 --> 00:12:46,720
choices and the dotted line connecting

341
00:12:46,720 --> 00:12:49,200
the two twos corresponds to p-side-like

342
00:12:49,200 --> 00:12:51,200
parameter choices

343
00:12:51,200 --> 00:12:54,079
and now our work you can see

344
00:12:54,079 --> 00:12:58,239
we have a much larger portion of

345
00:12:58,399 --> 00:13:00,399
the parameter space covered here so

346
00:13:00,399 --> 00:13:02,399
again red line on above is polynomial

347
00:13:02,399 --> 00:13:04,480
time attacks orange line and above is

348
00:13:04,480 --> 00:13:06,399
better than generic attacks

349
00:13:06,399 --> 00:13:09,519
and we have a new line here which is

350
00:13:09,519 --> 00:13:11,200
yellow line which is

351
00:13:11,200 --> 00:13:14,240
better than known quantum attacks

352
00:13:14,240 --> 00:13:16,079
and as you can see now

353
00:13:16,079 --> 00:13:17,839
uh

354
00:13:17,839 --> 00:13:20,959
certain sidh and b-side-like choices are

355
00:13:20,959 --> 00:13:23,279
now affected by our attacks

356
00:13:23,279 --> 00:13:26,160
so let me give some highlights uh of of

357
00:13:26,160 --> 00:13:27,760
this graph which are the most important

358
00:13:27,760 --> 00:13:29,760
parameter choices

359
00:13:29,760 --> 00:13:32,320
uh for which we have uh

360
00:13:32,320 --> 00:13:34,880
certain attacks so the first is a

361
00:13:34,880 --> 00:13:36,800
polynomial time key recovery when b is

362
00:13:36,800 --> 00:13:38,399
bigger than a to the fifth and p is

363
00:13:38,399 --> 00:13:39,519
roughly

364
00:13:39,519 --> 00:13:41,519
a times b which is an sidh-like

365
00:13:41,519 --> 00:13:43,279
parameter choice and it actually was

366
00:13:43,279 --> 00:13:45,199
chosen in some designs most importantly

367
00:13:45,199 --> 00:13:47,360
a group key exchange with six or more

368
00:13:47,360 --> 00:13:48,959
parties

369
00:13:48,959 --> 00:13:50,800
the second one is a polynomial time t

370
00:13:50,800 --> 00:13:54,240
recovery when b is bigger than a square

371
00:13:54,240 --> 00:13:56,639
and p squared is roughly a times b which

372
00:13:56,639 --> 00:14:00,399
is a b side like perimeter choice

373
00:14:01,600 --> 00:14:03,600
again not chosen in b side itself

374
00:14:03,600 --> 00:14:05,680
because they're the parameters are

375
00:14:05,680 --> 00:14:07,680
chosen to be balanced

376
00:14:07,680 --> 00:14:09,040
and then the third one is an improved

377
00:14:09,040 --> 00:14:10,959
quantum attack whenever b is bigger than

378
00:14:10,959 --> 00:14:12,560
a square

379
00:14:12,560 --> 00:14:14,560
and b is roughly a times b which again

380
00:14:14,560 --> 00:14:18,319
is an s h live parameter choice

381
00:14:18,639 --> 00:14:21,279
so so far all these attack

382
00:14:21,279 --> 00:14:22,880
were concerned with the special starting

383
00:14:22,880 --> 00:14:25,440
curve y square equals x plus x we can

384
00:14:25,440 --> 00:14:28,399
also ask the question where you can

385
00:14:28,399 --> 00:14:30,880
specifically design starting curves for

386
00:14:30,880 --> 00:14:32,720
which you can solve a society in

387
00:14:32,720 --> 00:14:34,880
polynomial time or faster than generic

388
00:14:34,880 --> 00:14:37,279
algorithms

389
00:14:37,279 --> 00:14:38,320
and the

390
00:14:38,320 --> 00:14:40,160
first result is whenever b is bigger

391
00:14:40,160 --> 00:14:41,680
than a square

392
00:14:41,680 --> 00:14:43,199
then the answer to this question is

393
00:14:43,199 --> 00:14:44,720
affirmative so you can actually

394
00:14:44,720 --> 00:14:46,079
construct

395
00:14:46,079 --> 00:14:49,440
uh certain backdoor curves

396
00:14:49,440 --> 00:14:51,120
for which you can solve a society in

397
00:14:51,120 --> 00:14:53,360
polynomial time

398
00:14:53,360 --> 00:14:54,959
what is to be noted here is that this

399
00:14:54,959 --> 00:14:56,639
condition is completely

400
00:14:56,639 --> 00:14:58,720
independent of p

401
00:14:58,720 --> 00:14:59,440
so

402
00:14:59,440 --> 00:15:01,680
it only depends on the balance between b

403
00:15:01,680 --> 00:15:03,519
and a

404
00:15:03,519 --> 00:15:05,120
so what is the main idea behind this

405
00:15:05,120 --> 00:15:06,320
attack

406
00:15:06,320 --> 00:15:08,560
is that instead of fixing the starting

407
00:15:08,560 --> 00:15:10,399
curve and then looking for some special

408
00:15:10,399 --> 00:15:12,800
anamorphism on it you look for them

409
00:15:12,800 --> 00:15:15,040
together you actually look for

410
00:15:15,040 --> 00:15:17,360
the endomorphism first in a quaternion

411
00:15:17,360 --> 00:15:20,079
form and then you find the suitable

412
00:15:20,079 --> 00:15:21,760
super singularity curve which contains

413
00:15:21,760 --> 00:15:24,399
that endomorphism

414
00:15:24,399 --> 00:15:25,440
how

415
00:15:25,440 --> 00:15:27,600
uh does this change the conditions on

416
00:15:27,600 --> 00:15:29,680
equation solving

417
00:15:29,680 --> 00:15:31,920
so you have the same equation as before

418
00:15:31,920 --> 00:15:34,000
in in the first input method

419
00:15:34,000 --> 00:15:36,480
and again d has to be an integer but a

420
00:15:36,480 --> 00:15:38,079
and b and c do not have to be an

421
00:15:38,079 --> 00:15:39,360
integers

422
00:15:39,360 --> 00:15:40,880
they it's enough for them to be

423
00:15:40,880 --> 00:15:42,079
rationals

424
00:15:42,079 --> 00:15:43,440
what

425
00:15:43,440 --> 00:15:45,519
is to be noted that p times a squared

426
00:15:45,519 --> 00:15:47,680
plus p times p squared plus c square has

427
00:15:47,680 --> 00:15:50,079
to be an integer the reason behind that

428
00:15:50,079 --> 00:15:51,600
is that

429
00:15:51,600 --> 00:15:52,959
that quantity

430
00:15:52,959 --> 00:15:55,199
will be the norm

431
00:15:55,199 --> 00:15:56,639
or otherwise

432
00:15:56,639 --> 00:15:59,199
in quaternary terms the norm of theta or

433
00:15:59,199 --> 00:16:01,839
in isolated terms the degree of theta

434
00:16:01,839 --> 00:16:02,800
and

435
00:16:02,800 --> 00:16:04,560
you will be looking for a theta which

436
00:16:04,560 --> 00:16:08,040
has trace zero

437
00:16:09,120 --> 00:16:10,959
how do you solve this equation so first

438
00:16:10,959 --> 00:16:12,800
again you solve modulo a square which

439
00:16:12,800 --> 00:16:14,880
actually will give you the condition

440
00:16:14,880 --> 00:16:17,759
uh that b has to be bigger than a square

441
00:16:17,759 --> 00:16:20,240
because what you want

442
00:16:20,240 --> 00:16:23,040
is is is afterwards an equi equation

443
00:16:23,040 --> 00:16:24,480
where the right hand side has to be

444
00:16:24,480 --> 00:16:26,399
positive because on the left hand side

445
00:16:26,399 --> 00:16:28,320
you will have p times a squared plus p

446
00:16:28,320 --> 00:16:30,399
times p squared plus c squared which

447
00:16:30,399 --> 00:16:33,199
even if you choose uh rational a b and c

448
00:16:33,199 --> 00:16:37,120
will always be a positive number

449
00:16:37,120 --> 00:16:38,880
and then once the right hand side is

450
00:16:38,880 --> 00:16:41,120
positive then the only other condition

451
00:16:41,120 --> 00:16:42,320
for this

452
00:16:42,320 --> 00:16:44,320
to be solvable over the rational is that

453
00:16:44,320 --> 00:16:46,639
has to be a quadratic residue modulo p

454
00:16:46,639 --> 00:16:48,720
which happens half the time so

455
00:16:48,720 --> 00:16:50,240
if it's not then you choose a different

456
00:16:50,240 --> 00:16:54,000
d and you iterate as you did before

457
00:16:54,800 --> 00:16:56,480
and then so once you've solved this

458
00:16:56,480 --> 00:16:59,040
equation you you have found the t time

459
00:16:59,040 --> 00:17:01,360
in the quaternion form

460
00:17:01,360 --> 00:17:02,560
uh

461
00:17:02,560 --> 00:17:04,480
and what you do is you find the maximum

462
00:17:04,480 --> 00:17:06,079
order containing that particular

463
00:17:06,079 --> 00:17:09,760
quaternion and then you translate it

464
00:17:09,760 --> 00:17:13,280
uh to a super singularity curve

465
00:17:13,280 --> 00:17:16,319
so to understand the solution step for

466
00:17:16,319 --> 00:17:18,720
this problem this is essentially

467
00:17:18,720 --> 00:17:20,400
any theta is good

468
00:17:20,400 --> 00:17:22,240
which has a particular

469
00:17:22,240 --> 00:17:23,359
uh

470
00:17:23,359 --> 00:17:25,439
minimal polynomial in this context it's

471
00:17:25,439 --> 00:17:27,599
actually all thetars are good for which

472
00:17:27,599 --> 00:17:30,480
theta square is equal to minus t

473
00:17:30,480 --> 00:17:33,039
so essentially a b vector curves are

474
00:17:33,039 --> 00:17:34,880
curves which have an anamorphism ring

475
00:17:34,880 --> 00:17:38,559
which contains a copy of uh

476
00:17:38,559 --> 00:17:41,600
z square root of minus t

477
00:17:41,600 --> 00:17:43,760
and we show that uh the number of these

478
00:17:43,760 --> 00:17:45,840
maxim orders is actually exponential in

479
00:17:45,840 --> 00:17:47,039
log p

480
00:17:47,039 --> 00:17:49,120
which gives an indication that it's

481
00:17:49,120 --> 00:17:52,639
probably hard to distinguish

482
00:17:52,799 --> 00:17:55,600
a random curve from the bacteria curve

483
00:17:55,600 --> 00:17:57,200
without knowing anything any information

484
00:17:57,200 --> 00:18:00,400
about its anamorphism ring

485
00:18:00,400 --> 00:18:01,600
and

486
00:18:01,600 --> 00:18:03,600
again the condition that b has to be

487
00:18:03,600 --> 00:18:05,200
bigger than a square applies to

488
00:18:05,200 --> 00:18:07,039
polynomial time attack so you can again

489
00:18:07,039 --> 00:18:08,160
look at

490
00:18:08,160 --> 00:18:11,039
special vector curves for which you

491
00:18:11,039 --> 00:18:12,720
don't have a polynomial time effect but

492
00:18:12,720 --> 00:18:14,240
you have an exponential time attack

493
00:18:14,240 --> 00:18:16,240
which is still better than generic

494
00:18:16,240 --> 00:18:17,440
attacks

495
00:18:17,440 --> 00:18:19,760
and the result there is actually that

496
00:18:19,760 --> 00:18:21,840
even for balanced parameters you can

497
00:18:21,840 --> 00:18:24,320
construct vector curves for which you

498
00:18:24,320 --> 00:18:28,200
can beat existing attacks

499
00:18:30,320 --> 00:18:32,960
we also discuss other backdoor

500
00:18:32,960 --> 00:18:34,640
issues in the paper such as backdoor

501
00:18:34,640 --> 00:18:36,720
parameters a and b and backward base

502
00:18:36,720 --> 00:18:38,880
field types which i won't be discussing

503
00:18:38,880 --> 00:18:42,200
in this talk

504
00:18:42,400 --> 00:18:45,039
so to conclude

505
00:18:45,039 --> 00:18:46,799
uh we have made significant improvements

506
00:18:46,799 --> 00:18:49,200
to previous attacks most prominently we

507
00:18:49,200 --> 00:18:51,039
have an attack whenever b is bigger than

508
00:18:51,039 --> 00:18:53,440
a to the fifth and p is roughly a times

509
00:18:53,440 --> 00:18:56,440
b

510
00:18:56,480 --> 00:18:58,480
which uh breaks a certain group key

511
00:18:58,480 --> 00:19:00,960
exchange with six or more parties

512
00:19:00,960 --> 00:19:02,960
it introduced the concept of backdoor

513
00:19:02,960 --> 00:19:04,160
curves

514
00:19:04,160 --> 00:19:06,559
uh which is an important concept for

515
00:19:06,559 --> 00:19:08,400
future designs

516
00:19:08,400 --> 00:19:10,240
and actually can also be used in a

517
00:19:10,240 --> 00:19:12,880
constructive fashion

518
00:19:12,880 --> 00:19:15,200
our methods can serve as sort of a

519
00:19:15,200 --> 00:19:18,000
benchmark for sidh and b-side-like

520
00:19:18,000 --> 00:19:20,799
parameter choices

521
00:19:20,799 --> 00:19:25,039
for future cryptosystems and finally

522
00:19:25,039 --> 00:19:28,240
we advise against using starting curves

523
00:19:28,240 --> 00:19:29,440
coming from

524
00:19:29,440 --> 00:19:32,400
shady sources

525
00:19:33,200 --> 00:19:36,440
thank you

