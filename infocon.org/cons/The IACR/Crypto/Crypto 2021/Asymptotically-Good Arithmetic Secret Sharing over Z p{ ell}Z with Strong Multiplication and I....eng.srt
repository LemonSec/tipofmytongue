1
00:00:01,120 --> 00:00:04,799
hello i am mateo rambo i am going to

2
00:00:04,799 --> 00:00:06,520
present the paper

3
00:00:06,520 --> 00:00:09,519
asymptotically good arithmetic secret

4
00:00:09,519 --> 00:00:11,280
sharing over

5
00:00:11,280 --> 00:00:13,920
z modulo p to the lz

6
00:00:13,920 --> 00:00:16,880
with strong multiplication and its

7
00:00:16,880 --> 00:00:19,680
application to efficient multiparty

8
00:00:19,680 --> 00:00:22,000
computation

9
00:00:22,000 --> 00:00:24,320
the content of this paper

10
00:00:24,320 --> 00:00:26,640
is that we consider gadgets for

11
00:00:26,640 --> 00:00:28,800
information theoretically secure

12
00:00:28,800 --> 00:00:30,320
computation

13
00:00:30,320 --> 00:00:33,120
which were already known over finite

14
00:00:33,120 --> 00:00:34,960
fields typically

15
00:00:34,960 --> 00:00:37,280
z modulo pz

16
00:00:37,280 --> 00:00:40,719
and we construct them over the ring z

17
00:00:40,719 --> 00:00:43,040
modulo p to the lz

18
00:00:43,040 --> 00:00:45,680
of which the most interesting case is p

19
00:00:45,680 --> 00:00:49,360
equal to the ring of machine integers

20
00:00:49,360 --> 00:00:51,920
we construct them with the same

21
00:00:51,920 --> 00:00:53,360
parameters

22
00:00:53,360 --> 00:00:56,960
as so far known over finite fields

23
00:00:56,960 --> 00:00:59,760
the gadget considered as our secret

24
00:00:59,760 --> 00:01:03,039
sharing with the strong multiplication

25
00:01:03,039 --> 00:01:04,959
reverse multiplication friendly

26
00:01:04,959 --> 00:01:06,560
embeddings

27
00:01:06,560 --> 00:01:08,960
which enable to

28
00:01:08,960 --> 00:01:11,760
harmonize the cost of the

29
00:01:11,760 --> 00:01:14,320
simultaneous evaluation of the same

30
00:01:14,320 --> 00:01:17,280
circuit in parallel

31
00:01:17,280 --> 00:01:20,759
and finally batch verification of beaver

32
00:01:20,759 --> 00:01:23,360
multiplication triples

33
00:01:23,360 --> 00:01:25,360
for this last gadget

34
00:01:25,360 --> 00:01:27,920
of independent interest

35
00:01:27,920 --> 00:01:30,799
we also improve its communication

36
00:01:30,799 --> 00:01:34,079
complexity over finite fields

37
00:01:34,079 --> 00:01:36,560
and therefore as a particular case of

38
00:01:36,560 --> 00:01:38,079
our methods

39
00:01:38,079 --> 00:01:41,360
we recover directly the results of

40
00:01:41,360 --> 00:01:43,840
polychronia do and song

41
00:01:43,840 --> 00:01:46,640
about information theoretically secure

42
00:01:46,640 --> 00:01:48,159
computation

43
00:01:48,159 --> 00:01:50,079
over the the field

44
00:01:50,079 --> 00:01:53,798
z modulo pz

45
00:01:54,560 --> 00:01:57,439
the main motivation for these in

46
00:01:57,439 --> 00:02:00,880
these gadgets are secure computation

47
00:02:00,880 --> 00:02:05,119
directly over the ring z modulo plz

48
00:02:05,119 --> 00:02:08,080
namely when we consider an arithmetic

49
00:02:08,080 --> 00:02:11,200
circuit expressed with multiplication

50
00:02:11,200 --> 00:02:13,280
and addition gates

51
00:02:13,280 --> 00:02:15,680
modulo p to dl

52
00:02:15,680 --> 00:02:17,440
the question is

53
00:02:17,440 --> 00:02:19,760
what's the best protocol

54
00:02:19,760 --> 00:02:22,720
enabling to evaluate this circuit

55
00:02:22,720 --> 00:02:25,520
there is an indirect approach consisting

56
00:02:25,520 --> 00:02:28,080
in emulating this circuit

57
00:02:28,080 --> 00:02:31,120
from a circuit over finite fields

58
00:02:31,120 --> 00:02:33,920
and then using known methods over finite

59
00:02:33,920 --> 00:02:35,680
fields

60
00:02:35,680 --> 00:02:37,040
but here

61
00:02:37,040 --> 00:02:39,680
we are considering the

62
00:02:39,680 --> 00:02:42,160
we are considering protocols

63
00:02:42,160 --> 00:02:44,640
that are naturally expressed over the

64
00:02:44,640 --> 00:02:47,280
ring z modulo plz

65
00:02:47,280 --> 00:02:49,680
and we ask the question

66
00:02:49,680 --> 00:02:54,720
how far can these protocols be efficient

67
00:02:55,120 --> 00:02:56,480
the

68
00:02:56,480 --> 00:02:59,840
the complexity of such protocols

69
00:02:59,840 --> 00:03:03,200
are naturally measured in terms of

70
00:03:03,200 --> 00:03:05,440
communication the number of elements of

71
00:03:05,440 --> 00:03:07,840
the ring sent on the network

72
00:03:07,840 --> 00:03:10,959
and for the computation complexity it is

73
00:03:10,959 --> 00:03:12,720
measured in terms of

74
00:03:12,720 --> 00:03:15,040
additions and multiplications modulo p

75
00:03:15,040 --> 00:03:17,679
to the l

76
00:03:17,760 --> 00:03:20,080
the answer to the question which comes

77
00:03:20,080 --> 00:03:22,879
as a corollary of our results

78
00:03:22,879 --> 00:03:24,159
is that

79
00:03:24,159 --> 00:03:27,040
for a circle it's naturally expressed

80
00:03:27,040 --> 00:03:28,480
over the ring

81
00:03:28,480 --> 00:03:31,200
there exists a protocol

82
00:03:31,200 --> 00:03:34,159
naturally defined over the ring z modulo

83
00:03:34,159 --> 00:03:35,599
p and z

84
00:03:35,599 --> 00:03:37,680
whose complexity

85
00:03:37,680 --> 00:03:40,000
is exactly the same

86
00:03:40,000 --> 00:03:42,959
as the the complexity

87
00:03:42,959 --> 00:03:46,159
of the best known protocol over fields

88
00:03:46,159 --> 00:03:50,799
that computes the circuits modulo p

89
00:03:50,799 --> 00:03:54,799
this is the best we could hope for

90
00:03:58,560 --> 00:04:02,400
let us define the gadgets in more detail

91
00:04:02,400 --> 00:04:04,560
recall that a secret sharing is a

92
00:04:04,560 --> 00:04:06,720
randomized transformation taking a

93
00:04:06,720 --> 00:04:10,720
secret to a vector of n shares

94
00:04:10,720 --> 00:04:13,120
and the number of players

95
00:04:13,120 --> 00:04:17,440
the privacy threshold t guarantees that

96
00:04:17,440 --> 00:04:20,959
up to any t shares reveal no information

97
00:04:20,959 --> 00:04:22,800
on the secrets

98
00:04:22,800 --> 00:04:26,160
while the strong multiplication property

99
00:04:26,160 --> 00:04:29,600
states that starting from

100
00:04:29,600 --> 00:04:30,720
two

101
00:04:30,720 --> 00:04:33,680
vectors of shells of two secrets

102
00:04:33,680 --> 00:04:34,800
consider

103
00:04:34,800 --> 00:04:37,360
the products component by components the

104
00:04:37,360 --> 00:04:40,400
product share by share

105
00:04:40,400 --> 00:04:44,240
then from these products shared by share

106
00:04:44,240 --> 00:04:47,680
imagine that two of them are missing so

107
00:04:47,680 --> 00:04:51,840
that we have only n minus t products

108
00:04:51,840 --> 00:04:53,520
shared by sure

109
00:04:53,520 --> 00:04:56,720
strong multiplication guarantees that

110
00:04:56,720 --> 00:04:59,600
the product of the two secrets encoded

111
00:04:59,600 --> 00:05:00,320
by

112
00:05:00,320 --> 00:05:02,240
these vectors of shares

113
00:05:02,240 --> 00:05:05,440
is anyway reconstructable from the n

114
00:05:05,440 --> 00:05:07,360
minus t remaining

115
00:05:07,360 --> 00:05:10,560
share by share products

116
00:05:10,560 --> 00:05:12,880
the second gadgets are reverse

117
00:05:12,880 --> 00:05:16,320
multiplication friendly embeddings

118
00:05:16,320 --> 00:05:18,880
they consist in linear maps

119
00:05:18,880 --> 00:05:21,919
taking vectors of length k

120
00:05:21,919 --> 00:05:25,039
two elements of a galway

121
00:05:25,039 --> 00:05:26,960
field extension

122
00:05:26,960 --> 00:05:30,000
of degree say m

123
00:05:30,000 --> 00:05:31,759
such that

124
00:05:31,759 --> 00:05:34,240
when we

125
00:05:34,720 --> 00:05:36,960
they guarantee that

126
00:05:36,960 --> 00:05:40,240
to comp it is possible to compute

127
00:05:40,240 --> 00:05:41,759
the product of

128
00:05:41,759 --> 00:05:43,840
two input vectors

129
00:05:43,840 --> 00:05:46,479
component by component

130
00:05:46,479 --> 00:05:49,440
from the knowledge of the product of

131
00:05:49,440 --> 00:05:51,360
their images

132
00:05:51,360 --> 00:05:54,320
v of x times p of y

133
00:05:54,320 --> 00:05:57,199
the parameters of these gadgets

134
00:05:57,199 --> 00:05:59,520
is the lower m

135
00:05:59,520 --> 00:06:01,199
the extension degree

136
00:06:01,199 --> 00:06:02,720
the better it is

137
00:06:02,720 --> 00:06:05,520
and the higher k the number of

138
00:06:05,520 --> 00:06:07,919
products computable the higher k the

139
00:06:07,919 --> 00:06:10,639
better it is

140
00:06:10,639 --> 00:06:12,000
finally

141
00:06:12,000 --> 00:06:14,160
the third gadget is

142
00:06:14,160 --> 00:06:16,400
the beaver multiplicative triples

143
00:06:16,400 --> 00:06:18,160
verification

144
00:06:18,160 --> 00:06:21,120
it was so far known as a protocol but

145
00:06:21,120 --> 00:06:24,000
we can formalize it as a gadget

146
00:06:24,000 --> 00:06:27,039
that takes as input many

147
00:06:27,039 --> 00:06:30,160
triples and each of these triples

148
00:06:30,160 --> 00:06:32,800
comes as a shared secret

149
00:06:32,800 --> 00:06:37,360
namely a i is a vector of n shares b i a

150
00:06:37,360 --> 00:06:39,440
vector of n shares

151
00:06:39,440 --> 00:06:42,880
c i a vector of n shares and this

152
00:06:42,880 --> 00:06:45,120
for i from 1 to

153
00:06:45,120 --> 00:06:47,840
2 big n the number of multiplicative

154
00:06:47,840 --> 00:06:50,080
triples

155
00:06:50,080 --> 00:06:51,759
the linear map

156
00:06:51,759 --> 00:06:53,039
outputs

157
00:06:53,039 --> 00:06:54,560
takes all these

158
00:06:54,560 --> 00:06:56,240
vectors of shares

159
00:06:56,240 --> 00:06:59,440
and output results which determines

160
00:06:59,440 --> 00:07:01,440
with high probability

161
00:07:01,440 --> 00:07:04,800
if the triples are multiplicative or not

162
00:07:04,800 --> 00:07:07,680
and in the process this reveals no

163
00:07:07,680 --> 00:07:10,880
information on half of the triples

164
00:07:10,880 --> 00:07:13,599
and therefore they are usable in a

165
00:07:13,599 --> 00:07:17,840
secure computation protocol

166
00:07:19,120 --> 00:07:20,000
the

167
00:07:20,000 --> 00:07:22,080
height the main technical task of the

168
00:07:22,080 --> 00:07:23,199
paper

169
00:07:23,199 --> 00:07:26,319
is to find codes with square of large

170
00:07:26,319 --> 00:07:27,520
distance

171
00:07:27,520 --> 00:07:30,080
let me define the terms and motivate

172
00:07:30,080 --> 00:07:32,319
this question

173
00:07:32,319 --> 00:07:35,840
for two vectors x and y we denote

174
00:07:35,840 --> 00:07:37,840
the star product

175
00:07:37,840 --> 00:07:40,960
as the vector of same length consisting

176
00:07:40,960 --> 00:07:42,160
of

177
00:07:42,160 --> 00:07:45,039
the products coordinate by coordinates

178
00:07:45,039 --> 00:07:46,720
of the two vectors

179
00:07:46,720 --> 00:07:49,680
a code is a vector space and when we

180
00:07:49,680 --> 00:07:52,560
consider a code of a ring

181
00:07:52,560 --> 00:07:56,319
we ask that it is freely generated it is

182
00:07:56,319 --> 00:07:58,639
a free module

183
00:07:58,639 --> 00:08:01,039
that k be the

184
00:08:01,039 --> 00:08:04,639
number of independent generators

185
00:08:04,639 --> 00:08:08,479
and we defined the square as the code in

186
00:08:08,479 --> 00:08:10,160
the same space

187
00:08:10,160 --> 00:08:13,199
generated by all the star products

188
00:08:13,199 --> 00:08:16,080
between elements of the code

189
00:08:16,080 --> 00:08:17,759
in particular

190
00:08:17,759 --> 00:08:21,919
a generating family consists in the

191
00:08:21,919 --> 00:08:24,879
the basis vectors e i

192
00:08:24,879 --> 00:08:27,360
star ej

193
00:08:27,360 --> 00:08:30,560
for all i j in the

194
00:08:30,560 --> 00:08:32,399
in the range

195
00:08:32,399 --> 00:08:33,760
k

196
00:08:33,760 --> 00:08:36,080
and we can always assume i smaller than

197
00:08:36,080 --> 00:08:36,958
j

198
00:08:36,958 --> 00:08:39,919
so that this family of generators is of

199
00:08:39,919 --> 00:08:44,880
cardinality kk plus 1 over 2.

200
00:08:45,920 --> 00:08:48,560
the bad news is that

201
00:08:48,560 --> 00:08:51,600
actually a generic code has

202
00:08:51,600 --> 00:08:56,080
its square of dimension kk plus 1 over 2

203
00:08:56,080 --> 00:08:58,240
namely generically

204
00:08:58,240 --> 00:09:00,160
it's the result in red

205
00:09:00,160 --> 00:09:03,200
there is no linear relation between this

206
00:09:03,200 --> 00:09:06,320
family of generators the star product of

207
00:09:06,320 --> 00:09:09,600
element of the basis why do we want to

208
00:09:09,600 --> 00:09:13,200
find codes with a small square

209
00:09:13,200 --> 00:09:17,279
and thus a large distance because

210
00:09:17,279 --> 00:09:19,279
then this implies that

211
00:09:19,279 --> 00:09:21,399
the product of two secrets is

212
00:09:21,399 --> 00:09:23,680
reconstructible from

213
00:09:23,680 --> 00:09:25,040
a few

214
00:09:25,040 --> 00:09:28,240
products components by components

215
00:09:28,240 --> 00:09:29,920
and we call that

216
00:09:29,920 --> 00:09:31,839
a vector of product component by

217
00:09:31,839 --> 00:09:34,640
component is none other than an element

218
00:09:34,640 --> 00:09:37,040
of the square of the code

219
00:09:37,040 --> 00:09:40,320
so this is the main motivating question

220
00:09:40,320 --> 00:09:41,839
and

221
00:09:41,839 --> 00:09:44,320
let us recall solutions for this problem

222
00:09:44,320 --> 00:09:46,880
over finite fields

223
00:09:46,880 --> 00:09:50,080
the first example of read solomon code

224
00:09:50,080 --> 00:09:53,600
they consist in evaluation at endpoints

225
00:09:53,600 --> 00:09:57,760
of polynomials of degree up to k minus 1

226
00:09:57,760 --> 00:09:58,880
therefore

227
00:09:58,880 --> 00:10:01,360
the the square has

228
00:10:01,360 --> 00:10:04,640
small dimension 2k minus 1

229
00:10:04,640 --> 00:10:06,560
and that's big distance

230
00:10:06,560 --> 00:10:09,120
the problem with with solomon code is

231
00:10:09,120 --> 00:10:11,600
the the size overhead

232
00:10:11,600 --> 00:10:14,000
because the modulus p of the finite

233
00:10:14,000 --> 00:10:15,200
field

234
00:10:15,200 --> 00:10:17,680
the cardinality needs to be higher than

235
00:10:17,680 --> 00:10:20,399
n the length of the vectors to have

236
00:10:20,399 --> 00:10:23,200
enough evaluation points

237
00:10:23,200 --> 00:10:26,079
this problem is overcome by

238
00:10:26,079 --> 00:10:29,360
algebraic geometric codes

239
00:10:29,360 --> 00:10:31,839
which enable

240
00:10:31,839 --> 00:10:35,200
of arbitrarily large lengths

241
00:10:35,200 --> 00:10:39,279
for fixed p prime number

242
00:10:39,279 --> 00:10:42,160
then the natural question is how to

243
00:10:42,160 --> 00:10:46,480
carry these constructions over rings

244
00:10:46,480 --> 00:10:47,279
a

245
00:10:47,279 --> 00:10:50,160
naive strategy that works very well for

246
00:10:50,160 --> 00:10:52,240
some properties

247
00:10:52,240 --> 00:10:55,120
is to start from a good code

248
00:10:55,120 --> 00:10:56,240
and then

249
00:10:56,240 --> 00:10:59,440
lift arbitrarily the coordinates of a

250
00:10:59,440 --> 00:11:02,320
generating family

251
00:11:02,320 --> 00:11:03,440
and this

252
00:11:03,440 --> 00:11:06,880
produces a code over the ring modulo p

253
00:11:06,880 --> 00:11:08,160
to the l

254
00:11:08,160 --> 00:11:11,920
that has same dimension same distance

255
00:11:11,920 --> 00:11:14,880
and dual distance than the code below

256
00:11:14,880 --> 00:11:17,640
recall that dual distances

257
00:11:17,640 --> 00:11:20,560
parameterizes the privacy threshold of a

258
00:11:20,560 --> 00:11:22,959
shared secret

259
00:11:22,959 --> 00:11:26,560
a secret shared by a code world

260
00:11:26,560 --> 00:11:30,160
but this strategy fails for the square

261
00:11:30,160 --> 00:11:32,399
of the code

262
00:11:32,399 --> 00:11:34,000
indeed

263
00:11:34,000 --> 00:11:37,120
if we start from a code modulo p

264
00:11:37,120 --> 00:11:38,720
that has

265
00:11:38,720 --> 00:11:40,560
a small square

266
00:11:40,560 --> 00:11:43,920
then when we arbitrarily lift the basis

267
00:11:43,920 --> 00:11:45,200
of the code

268
00:11:45,200 --> 00:11:46,640
as before

269
00:11:46,640 --> 00:11:49,120
it is not guaranteed anymore that the

270
00:11:49,120 --> 00:11:51,040
square will be small

271
00:11:51,040 --> 00:11:53,040
and actually the square is typically

272
00:11:53,040 --> 00:11:55,360
large

273
00:11:55,760 --> 00:11:58,240
we give some examples in the paper

274
00:11:58,240 --> 00:12:00,240
but let me give the intuition it's

275
00:12:00,240 --> 00:12:01,600
because

276
00:12:01,600 --> 00:12:03,760
the code with a small square this means

277
00:12:03,760 --> 00:12:06,160
that there are many linear relations

278
00:12:06,160 --> 00:12:08,560
between the kk plus one

279
00:12:08,560 --> 00:12:10,480
over two generators

280
00:12:10,480 --> 00:12:13,279
but this linear relations modulo p there

281
00:12:13,279 --> 00:12:16,639
is no reason that they also hold modulo

282
00:12:16,639 --> 00:12:20,160
p to the l this is a big problem

283
00:12:20,160 --> 00:12:22,480
there is a solution to this problem for

284
00:12:22,480 --> 00:12:24,399
read solomon codes

285
00:12:24,399 --> 00:12:25,839
namely

286
00:12:25,839 --> 00:12:29,120
we just directly define the code above

287
00:12:29,120 --> 00:12:31,040
and over the ring

288
00:12:31,040 --> 00:12:33,279
as the evaluation code of the

289
00:12:33,279 --> 00:12:35,519
polynomials of degree

290
00:12:35,519 --> 00:12:38,480
small smaller than k defined over the

291
00:12:38,480 --> 00:12:39,600
ring

292
00:12:39,600 --> 00:12:42,399
and this produces a code

293
00:12:42,399 --> 00:12:45,839
whose square is of same dimension 2 k

294
00:12:45,839 --> 00:12:47,200
minus 1

295
00:12:47,200 --> 00:12:48,399
as the

296
00:12:48,399 --> 00:12:50,639
the square of classical real solomon

297
00:12:50,639 --> 00:12:53,360
codes over fields

298
00:12:53,360 --> 00:12:55,519
now we ask the question is it possible

299
00:12:55,519 --> 00:12:58,880
to do the same construction directly

300
00:12:58,880 --> 00:13:00,399
or

301
00:13:00,399 --> 00:13:02,639
algebraic geometry codes

302
00:13:02,639 --> 00:13:04,839
which do not have the size

303
00:13:04,839 --> 00:13:07,680
overhead and this is the main theorem of

304
00:13:07,680 --> 00:13:09,120
the paper

305
00:13:09,120 --> 00:13:12,639
it states the existence of a lift modulo

306
00:13:12,639 --> 00:13:14,000
p to the l

307
00:13:14,000 --> 00:13:15,600
of a g codes

308
00:13:15,600 --> 00:13:18,399
that have the same distance the same b

309
00:13:18,399 --> 00:13:21,360
whose square

310
00:13:21,360 --> 00:13:25,040
has the same big distance

311
00:13:25,440 --> 00:13:27,839
the proof is not necessary to understand

312
00:13:27,839 --> 00:13:29,839
the rest of the paper but let me

313
00:13:29,839 --> 00:13:31,519
overview it

314
00:13:31,519 --> 00:13:32,959
to start with

315
00:13:32,959 --> 00:13:36,000
an ag code is built from

316
00:13:36,000 --> 00:13:37,600
a space of

317
00:13:37,600 --> 00:13:40,800
functions which is l of d bar it is an

318
00:13:40,800 --> 00:13:42,880
annotation for

319
00:13:42,880 --> 00:13:44,800
a remainder space

320
00:13:44,800 --> 00:13:47,040
and technically it's it's a space of

321
00:13:47,040 --> 00:13:50,000
functions defined over an algebraic

322
00:13:50,000 --> 00:13:51,040
curve

323
00:13:51,040 --> 00:13:52,720
whose poles

324
00:13:52,720 --> 00:13:55,519
are of smaller order

325
00:13:55,519 --> 00:13:57,040
than the

326
00:13:57,040 --> 00:13:58,399
the data of

327
00:13:58,399 --> 00:14:00,480
this

328
00:14:00,480 --> 00:14:03,600
which is called the divisor d bar

329
00:14:03,600 --> 00:14:05,279
d bar

330
00:14:05,279 --> 00:14:07,440
now rebounds the the pose of the

331
00:14:07,440 --> 00:14:09,360
functions considered

332
00:14:09,360 --> 00:14:12,399
this space of functions is of dimension

333
00:14:12,399 --> 00:14:14,560
k

334
00:14:15,040 --> 00:14:17,120
and this is the the dimension of the

335
00:14:17,120 --> 00:14:20,160
evaluation code so the code is defined

336
00:14:20,160 --> 00:14:23,040
as evaluation at endpoints

337
00:14:23,040 --> 00:14:26,160
of this vector space of functions so it

338
00:14:26,160 --> 00:14:29,680
is very similar to which solomon codes

339
00:14:29,680 --> 00:14:32,560
then how can we lift this material

340
00:14:32,560 --> 00:14:34,800
modulo p to the l

341
00:14:34,800 --> 00:14:37,120
a celebrated result in algebraic

342
00:14:37,120 --> 00:14:39,680
geometry states that it is possible to

343
00:14:39,680 --> 00:14:41,839
lift the curve x

344
00:14:41,839 --> 00:14:45,440
along with the divisor and the points

345
00:14:45,440 --> 00:14:47,680
now

346
00:14:47,680 --> 00:14:50,160
we can define a space of function

347
00:14:50,160 --> 00:14:53,279
associated to the lifted divisor

348
00:14:53,279 --> 00:14:54,959
and from this

349
00:14:54,959 --> 00:14:57,760
recent results of judy walker

350
00:14:57,760 --> 00:15:00,079
guarantee that the

351
00:15:00,079 --> 00:15:02,639
space of functions above

352
00:15:02,639 --> 00:15:05,360
is actually of same dimension it

353
00:15:05,360 --> 00:15:08,160
subjects modulo p to the space of

354
00:15:08,160 --> 00:15:09,760
functions below

355
00:15:09,760 --> 00:15:11,199
moreover

356
00:15:11,199 --> 00:15:14,320
the results of jd walker guarantee that

357
00:15:14,320 --> 00:15:15,519
the

358
00:15:15,519 --> 00:15:19,120
evaluations at the points above of the

359
00:15:19,120 --> 00:15:22,160
stage the space of functions above

360
00:15:22,160 --> 00:15:24,720
is injective and

361
00:15:24,720 --> 00:15:27,279
this map of evaluation above

362
00:15:27,279 --> 00:15:29,759
it subjects modulo p to the map of

363
00:15:29,759 --> 00:15:32,000
evaluation below

364
00:15:32,000 --> 00:15:35,360
the consequence is that the image of the

365
00:15:35,360 --> 00:15:37,600
evaluation map above

366
00:15:37,600 --> 00:15:40,800
is a code which is a lift of the code

367
00:15:40,800 --> 00:15:42,240
below

368
00:15:42,240 --> 00:15:45,759
a free module of same dimension

369
00:15:45,759 --> 00:15:48,800
and therefore by the previous results it

370
00:15:48,800 --> 00:15:52,320
has same dimension and distance

371
00:15:52,320 --> 00:15:56,079
this miracle we can reproduce it

372
00:15:56,079 --> 00:15:58,480
not for the divisor d but this time for

373
00:15:58,480 --> 00:16:01,120
the divisor 2d

374
00:16:01,120 --> 00:16:02,560
and indeed

375
00:16:02,560 --> 00:16:05,600
the square of the code belongs to the

376
00:16:05,600 --> 00:16:08,639
evaluation code of the

377
00:16:08,639 --> 00:16:10,959
divisor to d for the same reason as for

378
00:16:10,959 --> 00:16:13,519
which element code the square of a real

379
00:16:13,519 --> 00:16:15,279
solomon

380
00:16:15,279 --> 00:16:16,639
is a

381
00:16:16,639 --> 00:16:19,440
corresponds to evaluations of polynomial

382
00:16:19,440 --> 00:16:21,040
of degree two k

383
00:16:21,040 --> 00:16:23,839
here it's it's the the same

384
00:16:23,839 --> 00:16:26,399
it's the similarity

385
00:16:26,399 --> 00:16:27,839
and therefore

386
00:16:27,839 --> 00:16:29,839
the square is small

387
00:16:29,839 --> 00:16:31,839
it has a large distance

388
00:16:31,839 --> 00:16:36,560
because we have this inclusion of codes

389
00:16:36,560 --> 00:16:39,440
this was the existence theorem

390
00:16:39,440 --> 00:16:41,839
the good news is that we can directly

391
00:16:41,839 --> 00:16:45,040
compute a list of lg codes

392
00:16:45,040 --> 00:16:46,959
in l steps

393
00:16:46,959 --> 00:16:48,800
each step

394
00:16:48,800 --> 00:16:52,240
is takes as input a code modulo p to the

395
00:16:52,240 --> 00:16:52,959
l

396
00:16:52,959 --> 00:16:56,000
and outputs a code modulo p to the l

397
00:16:56,000 --> 00:16:57,120
plus one

398
00:16:57,120 --> 00:17:02,199
with the square of same dimension

399
00:17:10,799 --> 00:17:13,439
the technique is classical i am going to

400
00:17:13,439 --> 00:17:14,799
recall it

401
00:17:14,799 --> 00:17:17,359
it is called hansel lifting

402
00:17:17,359 --> 00:17:19,679
and this theorem which is

403
00:17:19,679 --> 00:17:22,240
actually hard to prove it is proven only

404
00:17:22,240 --> 00:17:24,720
in the long version of the paper

405
00:17:24,720 --> 00:17:26,160
guarantees

406
00:17:26,160 --> 00:17:29,520
that the sensor lifting always returns a

407
00:17:29,520 --> 00:17:30,720
solution

408
00:17:30,720 --> 00:17:33,520
a code modulo p l plus 1

409
00:17:33,520 --> 00:17:37,600
with a square of same small dimension

410
00:17:37,600 --> 00:17:40,720
the method consists in

411
00:17:40,720 --> 00:17:42,960
considering all the generators of the

412
00:17:42,960 --> 00:17:44,160
square

413
00:17:44,160 --> 00:17:46,880
the e i star ej

414
00:17:46,880 --> 00:17:50,720
and expressing them on a basis of the

415
00:17:50,720 --> 00:17:54,559
square the basis b of small cardinality

416
00:17:54,559 --> 00:17:56,960
because the square is by the by

417
00:17:56,960 --> 00:17:59,440
hypothesis small

418
00:17:59,440 --> 00:18:02,480
then when we write this decomposition

419
00:18:02,480 --> 00:18:05,039
modulo p to the l plus 1

420
00:18:05,039 --> 00:18:08,960
by lifting arbitrarily the basis vectors

421
00:18:08,960 --> 00:18:12,080
there appears an error term the quality

422
00:18:12,080 --> 00:18:15,440
is not anymore true as we said before

423
00:18:15,440 --> 00:18:18,000
there is no reason why linear relations

424
00:18:18,000 --> 00:18:19,760
modified to the l

425
00:18:19,760 --> 00:18:22,240
would still hold modulo p to the l plus

426
00:18:22,240 --> 00:18:24,480
one

427
00:18:24,480 --> 00:18:26,160
so our goal

428
00:18:26,160 --> 00:18:28,400
is to search

429
00:18:28,400 --> 00:18:33,280
lifts of the bases vectors e nu i and

430
00:18:33,280 --> 00:18:36,400
coefficients lambda nu

431
00:18:36,400 --> 00:18:39,120
modulo p l plus 1 such that

432
00:18:39,120 --> 00:18:41,919
the previous linear relation also holds

433
00:18:41,919 --> 00:18:45,120
modular pl plus one

434
00:18:45,120 --> 00:18:46,640
to find them

435
00:18:46,640 --> 00:18:48,960
without loss of generality you can

436
00:18:48,960 --> 00:18:52,320
express them as arbitrarily lifts

437
00:18:52,320 --> 00:18:55,520
of the previous basis modulo pl so list

438
00:18:55,520 --> 00:18:57,520
module pl plus 1

439
00:18:57,520 --> 00:19:00,640
plus a corrective term of the form p l

440
00:19:00,640 --> 00:19:03,360
times a vector f i

441
00:19:03,360 --> 00:19:06,559
same thing for the coefficients which we

442
00:19:06,559 --> 00:19:08,960
can always look for

443
00:19:08,960 --> 00:19:11,520
in the form of an arbitrary lift of

444
00:19:11,520 --> 00:19:14,880
lambda plus a corrective term

445
00:19:14,880 --> 00:19:16,960
then we inject this

446
00:19:16,960 --> 00:19:20,000
form into the previous system

447
00:19:20,000 --> 00:19:22,240
and after a miracle which is a

448
00:19:22,240 --> 00:19:24,320
simplification

449
00:19:24,320 --> 00:19:27,280
we can cancel out from the system

450
00:19:27,280 --> 00:19:29,440
the the equality

451
00:19:29,440 --> 00:19:31,520
from which we started

452
00:19:31,520 --> 00:19:34,960
so after cancelling this equality

453
00:19:34,960 --> 00:19:37,520
we obtain a system of the form and

454
00:19:37,520 --> 00:19:38,799
equality

455
00:19:38,799 --> 00:19:42,320
a list of equalities which are all

456
00:19:42,320 --> 00:19:45,600
multiples of modulo p to the l

457
00:19:45,600 --> 00:19:47,919
and so we can divide everything by p to

458
00:19:47,919 --> 00:19:49,039
dl

459
00:19:49,039 --> 00:19:52,000
and obtain a linear system over the

460
00:19:52,000 --> 00:19:56,400
finite field z modulo pz

461
00:19:56,400 --> 00:19:58,720
and the unknown are exactly the

462
00:19:58,720 --> 00:20:02,240
corrective terms that we are looking for

463
00:20:02,240 --> 00:20:04,240
this concludes the theorem thank you

464
00:20:04,240 --> 00:20:06,799
very much for your intention

465
00:20:06,799 --> 00:20:09,039
and don't forget that this explicit

466
00:20:09,039 --> 00:20:11,360
computation are possible because we have

467
00:20:11,360 --> 00:20:14,320
tools for computing the ag codes over

468
00:20:14,320 --> 00:20:16,799
field the starting point

469
00:20:16,799 --> 00:20:19,600
and it is an active field of research to

470
00:20:19,600 --> 00:20:20,720
make

471
00:20:20,720 --> 00:20:22,640
this algorithm

472
00:20:22,640 --> 00:20:26,120
more efficient

