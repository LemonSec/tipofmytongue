1
00:00:02,750 --> 00:00:06,490
[Music]

2
00:00:13,120 --> 00:00:15,440
in this talk i talk about certified

3
00:00:15,440 --> 00:00:18,560
evaluating zero knowledge for kma

4
00:00:18,560 --> 00:00:20,560
this work is going to work with tomoki

5
00:00:20,560 --> 00:00:21,680
monument

6
00:00:21,680 --> 00:00:24,800
shimaki and takashima

7
00:00:24,800 --> 00:00:28,160
first let me explain qma briefly

8
00:00:28,160 --> 00:00:30,880
roughly speaking uma is a content

9
00:00:30,880 --> 00:00:32,880
version of an ap

10
00:00:32,880 --> 00:00:35,120
in this class the content polynomial

11
00:00:35,120 --> 00:00:37,600
time will fire can check whether the

12
00:00:37,600 --> 00:00:41,440
instance x is essential or not

13
00:00:41,440 --> 00:00:44,239
first the verifier receives a content

14
00:00:44,239 --> 00:00:47,200
contamination psi from the private

15
00:00:47,200 --> 00:00:49,920
and he checks whether the instance x is

16
00:00:49,920 --> 00:00:52,879
easy instance or not

17
00:00:52,879 --> 00:00:55,680
when the instance x is the s instance

18
00:00:55,680 --> 00:00:58,000
the existing quantum mechanism precise

19
00:00:58,000 --> 00:01:00,480
such that the verifier accepts its high

20
00:01:00,480 --> 00:01:02,800
probability

21
00:01:02,800 --> 00:01:05,199
on the other hand when the instance x is

22
00:01:05,199 --> 00:01:06,720
not yes instance

23
00:01:06,720 --> 00:01:08,960
or all quantum states precise the

24
00:01:08,960 --> 00:01:12,320
verifier rejects with high probability

25
00:01:12,320 --> 00:01:14,000
if the language l satisfies these

26
00:01:14,000 --> 00:01:16,400
properties at the same time we say that

27
00:01:16,400 --> 00:01:20,080
the language l is in qma

28
00:01:20,159 --> 00:01:21,840
in this talk i will consider the

29
00:01:21,840 --> 00:01:24,080
knowledge proof for qma

30
00:01:24,080 --> 00:01:26,400
and there are not spiritual qma a

31
00:01:26,400 --> 00:01:28,880
quantum polynomial times period without

32
00:01:28,880 --> 00:01:30,640
quantum matrix psi

33
00:01:30,640 --> 00:01:32,799
can convince a verifier

34
00:01:32,799 --> 00:01:35,840
that the instance x is yes instance

35
00:01:35,840 --> 00:01:38,560
without revealing any information beyond

36
00:01:38,560 --> 00:01:40,960
the fact that the instance x is this

37
00:01:40,960 --> 00:01:42,399
instance

38
00:01:42,399 --> 00:01:45,200
broadband and guro have constructed

39
00:01:45,200 --> 00:01:48,320
neurological or qma from classical

40
00:01:48,320 --> 00:01:51,759
commitments with statistical binding and

41
00:01:51,759 --> 00:01:54,159
computational hiding

42
00:01:54,159 --> 00:01:56,320
the outline of their construction is as

43
00:01:56,320 --> 00:01:57,840
follows

44
00:01:57,840 --> 00:02:00,960
first approval randomly generate and

45
00:02:00,960 --> 00:02:03,360
ranks classical bit strings

46
00:02:03,360 --> 00:02:06,159
and then commit them using classical

47
00:02:06,159 --> 00:02:09,360
commitments with statistical binding and

48
00:02:09,360 --> 00:02:11,920
computational hiding

49
00:02:11,920 --> 00:02:14,800
then the verifier randomly generates i

50
00:02:14,800 --> 00:02:16,959
and sends it to the proverb as a

51
00:02:16,959 --> 00:02:19,440
challenge

52
00:02:19,440 --> 00:02:22,319
then the problem sends the high speed of

53
00:02:22,319 --> 00:02:25,440
air to the bfire

54
00:02:25,440 --> 00:02:27,200
the preferred checks whether the

55
00:02:27,200 --> 00:02:31,200
instance x is ac instance or not

56
00:02:31,200 --> 00:02:33,920
the construction satisfies 0.3

57
00:02:33,920 --> 00:02:35,680
properties

58
00:02:35,680 --> 00:02:39,040
the first property is completeness

59
00:02:39,040 --> 00:02:41,519
this guarantees that when the instance x

60
00:02:41,519 --> 00:02:43,280
is resistance

61
00:02:43,280 --> 00:02:45,599
the verifier accepts with high

62
00:02:45,599 --> 00:02:48,238
probability

63
00:02:48,720 --> 00:02:50,959
the second property is statistical

64
00:02:50,959 --> 00:02:52,400
soundness

65
00:02:52,400 --> 00:02:55,440
this guarantees that when the instance x

66
00:02:55,440 --> 00:02:57,440
is not in c instance

67
00:02:57,440 --> 00:03:00,000
the verifier rejects with high

68
00:03:00,000 --> 00:03:01,280
probability

69
00:03:01,280 --> 00:03:03,920
for any unbounded muscle microscope

70
00:03:03,920 --> 00:03:08,480
that tries to make the verifier accept

71
00:03:08,800 --> 00:03:11,280
the third property is computational zero

72
00:03:11,280 --> 00:03:13,120
knowledge

73
00:03:13,120 --> 00:03:14,959
this guarantees that

74
00:03:14,959 --> 00:03:16,720
no content polynomial time versus

75
00:03:16,720 --> 00:03:19,200
purifier specifier learns anything

76
00:03:19,200 --> 00:03:21,680
beyond the fact that the instance x is

77
00:03:21,680 --> 00:03:24,000
yes instance

78
00:03:24,000 --> 00:03:28,000
now i will explain our motivation

79
00:03:28,000 --> 00:03:30,000
also that although there are no special

80
00:03:30,000 --> 00:03:32,239
kmay satisfy these properties

81
00:03:32,239 --> 00:03:35,040
computational zero knowledge hazards

82
00:03:35,040 --> 00:03:37,840
in fact new efficient algorithms or

83
00:03:37,840 --> 00:03:40,159
improvements of computers may solve the

84
00:03:40,159 --> 00:03:41,760
problem problem

85
00:03:41,760 --> 00:03:44,080
underlying the security of computational

86
00:03:44,080 --> 00:03:46,560
knowledge

87
00:03:46,560 --> 00:03:48,720
so computational knowledge does not

88
00:03:48,720 --> 00:03:50,799
necessarily improve our employer

89
00:03:50,799 --> 00:03:53,280
long-term security

90
00:03:53,280 --> 00:03:55,439
in other words in computational

91
00:03:55,439 --> 00:03:58,480
knowledge margins very higher may obtain

92
00:03:58,480 --> 00:04:00,879
information beyond the fact that the

93
00:04:00,879 --> 00:04:03,680
instance x is yes instance

94
00:04:03,680 --> 00:04:06,640
so this is undesirable

95
00:04:06,640 --> 00:04:09,680
one way to resolve the problem is to use

96
00:04:09,680 --> 00:04:11,760
the knowledge proof of qma

97
00:04:11,760 --> 00:04:14,480
with the statistical zero knowledge

98
00:04:14,480 --> 00:04:16,399
in a protocol with a statistical zero

99
00:04:16,399 --> 00:04:17,440
knowledge

100
00:04:17,440 --> 00:04:19,839
the security holds against unbounded

101
00:04:19,839 --> 00:04:21,600
must be higher

102
00:04:21,600 --> 00:04:23,520
so the security will never break in the

103
00:04:23,520 --> 00:04:25,120
future

104
00:04:25,120 --> 00:04:27,680
however it is believed that we can't

105
00:04:27,680 --> 00:04:30,479
construct neuro knowledge proof for qma

106
00:04:30,479 --> 00:04:32,720
with statistical soundness and the

107
00:04:32,720 --> 00:04:36,560
statistical zones at the same time

108
00:04:36,560 --> 00:04:39,280
so if the protocol satisfies statistical

109
00:04:39,280 --> 00:04:40,800
soundness

110
00:04:40,800 --> 00:04:42,479
the knowledge property must be

111
00:04:42,479 --> 00:04:44,160
computational one

112
00:04:44,160 --> 00:04:46,880
and thus the mass specifier can obtain

113
00:04:46,880 --> 00:04:49,280
information beyond the fact that the

114
00:04:49,280 --> 00:04:52,880
instance x is yes instance

115
00:04:52,880 --> 00:04:56,320
so the allocation is as follows

116
00:04:56,320 --> 00:04:58,479
can we construct neuro knowledge proof

117
00:04:58,479 --> 00:05:01,199
for qma we are the zero noise property

118
00:05:01,199 --> 00:05:03,120
holds in a long time

119
00:05:03,120 --> 00:05:05,120
without compromising statistical

120
00:05:05,120 --> 00:05:07,120
standards

121
00:05:07,120 --> 00:05:09,360
in our work we resolve this question

122
00:05:09,360 --> 00:05:11,440
affirmatively

123
00:05:11,440 --> 00:05:14,880
for that first we introduce a new notion

124
00:05:14,880 --> 00:05:17,600
with your noise property which we call

125
00:05:17,600 --> 00:05:20,240
certified evaluating zero knowledge

126
00:05:20,240 --> 00:05:22,400
and then construct zero knowledgeable

127
00:05:22,400 --> 00:05:25,360
for qma with statistical soundness and

128
00:05:25,360 --> 00:05:28,720
certified evaluating zero knowledge

129
00:05:28,720 --> 00:05:30,720
now i will explain an initiative

130
00:05:30,720 --> 00:05:33,199
definition of certified evaluating zero

131
00:05:33,199 --> 00:05:35,600
knowledge

132
00:05:36,240 --> 00:05:38,720
in a protocol with certified evaluating

133
00:05:38,720 --> 00:05:41,520
their knowledge a master specifier can

134
00:05:41,520 --> 00:05:43,759
issue a certificate

135
00:05:43,759 --> 00:05:45,520
which shows that he deletes the

136
00:05:45,520 --> 00:05:48,720
information received from the approver

137
00:05:48,720 --> 00:05:50,880
the approval can check whether the

138
00:05:50,880 --> 00:05:54,000
certificate is valid or not using her

139
00:05:54,000 --> 00:05:56,319
internal information

140
00:05:56,319 --> 00:05:58,240
when the certificate is valid the

141
00:05:58,240 --> 00:06:00,720
private accepts the verifier

142
00:06:00,720 --> 00:06:04,000
and the otherwise detects the verifier

143
00:06:04,000 --> 00:06:07,039
when the private accepts the verifier

144
00:06:07,039 --> 00:06:09,440
even if its computing power becomes

145
00:06:09,440 --> 00:06:11,440
unbounded after that

146
00:06:11,440 --> 00:06:14,000
he cannot obtain information beyond the

147
00:06:14,000 --> 00:06:18,080
fact that the instance x is yes instance

148
00:06:18,080 --> 00:06:20,400
this is this is an intuitive definition

149
00:06:20,400 --> 00:06:24,160
certified evaluating their knowledge

150
00:06:24,160 --> 00:06:26,000
so in the state what about writing their

151
00:06:26,000 --> 00:06:28,319
knowledge the security

152
00:06:28,319 --> 00:06:30,240
the security will never break in the

153
00:06:30,240 --> 00:06:31,280
future

154
00:06:31,280 --> 00:06:34,639
when the certificate is buried

155
00:06:34,639 --> 00:06:36,720
note that certified evaluating zero

156
00:06:36,720 --> 00:06:38,720
knowledge does not guarantee any

157
00:06:38,720 --> 00:06:40,880
security when the sub when the

158
00:06:40,880 --> 00:06:43,600
certificate is not the body

159
00:06:43,600 --> 00:06:46,080
however the private can't prevent the

160
00:06:46,080 --> 00:06:49,759
verifier from refusing to output a valid

161
00:06:49,759 --> 00:06:51,360
certificate

162
00:06:51,360 --> 00:06:53,680
so we believe that this security is

163
00:06:53,680 --> 00:06:55,759
still meaningful

164
00:06:55,759 --> 00:06:59,280
now i will expand our construction

165
00:06:59,280 --> 00:07:01,120
for that i will explain why the

166
00:07:01,120 --> 00:07:04,080
non-construction is not secure against

167
00:07:04,080 --> 00:07:06,720
unbounded merchant space fire

168
00:07:06,720 --> 00:07:08,800
in the non-construction of the knowledge

169
00:07:08,800 --> 00:07:10,880
proof for qma

170
00:07:10,880 --> 00:07:13,680
the the classical commitment satisfies

171
00:07:13,680 --> 00:07:17,280
only computational hiding so mary's

172
00:07:17,280 --> 00:07:20,000
unbounded verifier can obtain the

173
00:07:20,000 --> 00:07:22,240
committed value from the classical

174
00:07:22,240 --> 00:07:24,560
commitment

175
00:07:24,560 --> 00:07:27,120
this fact breaks the noise property of

176
00:07:27,120 --> 00:07:29,599
the non-construction

177
00:07:29,599 --> 00:07:31,599
to resolve the problem

178
00:07:31,599 --> 00:07:34,160
we introduce a new quantum commitment

179
00:07:34,160 --> 00:07:36,960
with a new hiring property which we call

180
00:07:36,960 --> 00:07:39,840
certified everlasting hiding

181
00:07:39,840 --> 00:07:42,000
in this hiding a monster

182
00:07:42,000 --> 00:07:44,000
malicious receiver can issue a

183
00:07:44,000 --> 00:07:45,280
certificate

184
00:07:45,280 --> 00:07:47,599
which shows up he deletes that quantum

185
00:07:47,599 --> 00:07:49,440
commitment

186
00:07:49,440 --> 00:07:52,400
when the certificate is valid even if

187
00:07:52,400 --> 00:07:54,240
receivables computing power becomes

188
00:07:54,240 --> 00:07:56,240
unbounded after that

189
00:07:56,240 --> 00:07:59,120
he cannot obtain the committed barrier

190
00:07:59,120 --> 00:08:00,319
in our work

191
00:08:00,319 --> 00:08:02,080
we have constructed that quantum

192
00:08:02,080 --> 00:08:04,879
commitment with statistical binding and

193
00:08:04,879 --> 00:08:07,840
certified evaluating hiding from an

194
00:08:07,840 --> 00:08:10,160
ordinary classical commitment with

195
00:08:10,160 --> 00:08:11,680
statistical binding and the

196
00:08:11,680 --> 00:08:13,520
computational hiding in the contaminant

197
00:08:13,520 --> 00:08:15,520
molecular model

198
00:08:15,520 --> 00:08:17,759
now i will explain an informal

199
00:08:17,759 --> 00:08:19,680
construction

200
00:08:19,680 --> 00:08:21,360
note that this is not a hormonal

201
00:08:21,360 --> 00:08:24,160
construction or ease of understanding

202
00:08:24,160 --> 00:08:26,639
so if you are interested in our homework

203
00:08:26,639 --> 00:08:27,919
construction

204
00:08:27,919 --> 00:08:30,639
please see our paper

205
00:08:30,639 --> 00:08:32,880
first in our construction

206
00:08:32,880 --> 00:08:35,200
the sender randomly generates two

207
00:08:35,200 --> 00:08:37,360
classical bit strings

208
00:08:37,360 --> 00:08:40,559
and keeps one as a secret key and the

209
00:08:40,559 --> 00:08:43,360
other other verification key

210
00:08:43,360 --> 00:08:46,880
then the sender generates pv ether state

211
00:08:46,880 --> 00:08:50,880
according to these classical bit strings

212
00:08:50,880 --> 00:08:53,360
the base of these quantum states depends

213
00:08:53,360 --> 00:08:55,279
on the secret key

214
00:08:55,279 --> 00:08:58,640
if the secret key is equal to zero

215
00:08:58,640 --> 00:09:00,800
the sender generates computational base

216
00:09:00,800 --> 00:09:02,160
state

217
00:09:02,160 --> 00:09:04,800
on the other hand if the secret key is

218
00:09:04,800 --> 00:09:06,240
equal to one

219
00:09:06,240 --> 00:09:10,800
the sender generates adamant base state

220
00:09:10,800 --> 00:09:13,440
and the beta bias of this quantum state

221
00:09:13,440 --> 00:09:16,959
is equal to the verification key

222
00:09:16,959 --> 00:09:20,560
then the sender encrypts message m using

223
00:09:20,560 --> 00:09:22,720
the bit values of computation based

224
00:09:22,720 --> 00:09:24,560
state as follows

225
00:09:24,560 --> 00:09:27,760
we are adding the hash function

226
00:09:27,760 --> 00:09:30,720
then the sender encrypts the secret key

227
00:09:30,720 --> 00:09:32,720
using classical commitment with

228
00:09:32,720 --> 00:09:35,200
statistical binding and computational

229
00:09:35,200 --> 00:09:36,880
hiding

230
00:09:36,880 --> 00:09:38,880
then the sender sends them to the

231
00:09:38,880 --> 00:09:40,000
receiver

232
00:09:40,000 --> 00:09:44,080
as the commitment of the message m

233
00:09:44,080 --> 00:09:48,000
our construction satisfies correctness

234
00:09:48,000 --> 00:09:50,480
this guarantees that when the protocol

235
00:09:50,480 --> 00:09:52,880
is executed honestly

236
00:09:52,880 --> 00:09:55,279
the receiver can recover the message and

237
00:09:55,279 --> 00:09:57,279
correctly

238
00:09:57,279 --> 00:09:58,959
when the receiver wants to recover the

239
00:09:58,959 --> 00:10:00,320
message m

240
00:10:00,320 --> 00:10:03,120
the receiver requests the sender to send

241
00:10:03,120 --> 00:10:06,079
the secret key

242
00:10:06,079 --> 00:10:08,000
and the receiver checks whether the

243
00:10:08,000 --> 00:10:10,480
secret key is equal to the committed

244
00:10:10,480 --> 00:10:13,200
value or not

245
00:10:13,200 --> 00:10:16,000
now the sender behaves honestly so the

246
00:10:16,000 --> 00:10:19,120
receiver accepts with an overwhelming

247
00:10:19,120 --> 00:10:21,760
probability

248
00:10:21,760 --> 00:10:24,399
remind that the secret key is the base

249
00:10:24,399 --> 00:10:26,480
of these quantum states

250
00:10:26,480 --> 00:10:28,640
so by measuring a computational basis

251
00:10:28,640 --> 00:10:31,279
states in the computational basis

252
00:10:31,279 --> 00:10:34,560
he can obtain 0 1 and by computing its

253
00:10:34,560 --> 00:10:35,920
hash function

254
00:10:35,920 --> 00:10:39,599
he can recover message m

255
00:10:40,079 --> 00:10:42,399
and our construction satisfies

256
00:10:42,399 --> 00:10:44,560
statistical binding

257
00:10:44,560 --> 00:10:46,959
this statistical binding injectively

258
00:10:46,959 --> 00:10:48,399
guarantees that

259
00:10:48,399 --> 00:10:51,360
no unbounded message center can change

260
00:10:51,360 --> 00:10:53,920
the probability distribution that the

261
00:10:53,920 --> 00:10:56,959
receiver obtains message m

262
00:10:56,959 --> 00:10:59,920
now i will explain a negative reason why

263
00:10:59,920 --> 00:11:01,440
our construction satisfies the

264
00:11:01,440 --> 00:11:04,399
statistical binding

265
00:11:04,560 --> 00:11:07,200
and the myself sender tries to make the

266
00:11:07,200 --> 00:11:11,040
receiver accept the different secret key

267
00:11:11,040 --> 00:11:14,560
other than the sender first committed

268
00:11:14,560 --> 00:11:17,360
however even unmarked merchant center

269
00:11:17,360 --> 00:11:19,440
cannot make the receiver accept the

270
00:11:19,440 --> 00:11:21,760
different secret key

271
00:11:21,760 --> 00:11:24,320
since the classical commitment satisfies

272
00:11:24,320 --> 00:11:26,880
statistical binding

273
00:11:26,880 --> 00:11:30,160
this fact implies that the secret key

274
00:11:30,160 --> 00:11:33,519
used to extract message m from this part

275
00:11:33,519 --> 00:11:36,160
is determined only by the commitment

276
00:11:36,160 --> 00:11:39,040
that the sender first sent

277
00:11:39,040 --> 00:11:41,839
so even unmanned message center cannot

278
00:11:41,839 --> 00:11:44,240
change the probability distribution that

279
00:11:44,240 --> 00:11:47,279
the receiver obtains message m after she

280
00:11:47,279 --> 00:11:50,480
sends the quantum commitment

281
00:11:50,880 --> 00:11:52,800
and our construction also satisfies

282
00:11:52,800 --> 00:11:55,440
certified evaluating hiding

283
00:11:55,440 --> 00:11:57,680
in this hiding myself

284
00:11:57,680 --> 00:11:59,519
can issue a certificate

285
00:11:59,519 --> 00:12:01,519
which shows that he deletes the quantum

286
00:12:01,519 --> 00:12:03,120
commitment

287
00:12:03,120 --> 00:12:05,839
when the certificate is varied even if

288
00:12:05,839 --> 00:12:07,920
its computing power becomes unbounded

289
00:12:07,920 --> 00:12:09,120
after that

290
00:12:09,120 --> 00:12:12,959
he cannot obtain the committed value

291
00:12:12,959 --> 00:12:14,720
when the sender wants to delete the

292
00:12:14,720 --> 00:12:17,120
quantum commitment the sender requests

293
00:12:17,120 --> 00:12:19,519
the receiver to measure all these

294
00:12:19,519 --> 00:12:22,480
quantum states in the normal basis

295
00:12:22,480 --> 00:12:24,560
and receive the measurement outcomes as

296
00:12:24,560 --> 00:12:26,639
a certificate

297
00:12:26,639 --> 00:12:28,560
then the sender checks whether the

298
00:12:28,560 --> 00:12:31,200
certificate is equal to the verification

299
00:12:31,200 --> 00:12:32,079
key

300
00:12:32,079 --> 00:12:36,240
where the secret key is equal to one

301
00:12:36,240 --> 00:12:40,160
if so the sender accepts the receiver

302
00:12:40,160 --> 00:12:43,040
and otherwise rejects the detector

303
00:12:43,040 --> 00:12:45,120
receiver

304
00:12:45,120 --> 00:12:47,839
when the sender accepts the receiver

305
00:12:47,839 --> 00:12:49,519
even if

306
00:12:49,519 --> 00:12:51,920
its computing power becomes unbounded

307
00:12:51,920 --> 00:12:53,200
after that

308
00:12:53,200 --> 00:12:55,600
and the secret key is leaked from the

309
00:12:55,600 --> 00:12:57,120
sender

310
00:12:57,120 --> 00:12:59,519
he can't obtain increments of message m

311
00:12:59,519 --> 00:13:01,360
correctly

312
00:13:01,360 --> 00:13:03,519
intuitively this is what certified

313
00:13:03,519 --> 00:13:06,480
evaluating hiding guaranteed

314
00:13:06,480 --> 00:13:09,120
now i will explain an adjective reason

315
00:13:09,120 --> 00:13:11,839
why our construction satisfies satisfy

316
00:13:11,839 --> 00:13:14,560
device team hiding

317
00:13:14,560 --> 00:13:16,800
and when the receiver's computing power

318
00:13:16,800 --> 00:13:18,160
is limited

319
00:13:18,160 --> 00:13:20,480
he cannot obtain the basis of this

320
00:13:20,480 --> 00:13:24,320
quantum state from the commitments

321
00:13:24,320 --> 00:13:26,720
this is because the classical commitment

322
00:13:26,720 --> 00:13:30,000
satisfies computational hiding

323
00:13:30,000 --> 00:13:33,360
so in order to make the center accept

324
00:13:33,360 --> 00:13:35,360
with high probability his high

325
00:13:35,360 --> 00:13:36,560
probability

326
00:13:36,560 --> 00:13:38,880
he has to measure all these quantum

327
00:13:38,880 --> 00:13:41,120
states in the normal basis

328
00:13:41,120 --> 00:13:43,040
and sends the measurement outcomes as a

329
00:13:43,040 --> 00:13:44,880
certificate

330
00:13:44,880 --> 00:13:47,440
on the other hand if he measures the

331
00:13:47,440 --> 00:13:49,440
computation based states in the normal

332
00:13:49,440 --> 00:13:50,639
basis

333
00:13:50,639 --> 00:13:53,279
this quantum state proxies

334
00:13:53,279 --> 00:13:55,600
to random class carbide string

335
00:13:55,600 --> 00:13:57,920
and he can no longer obtain the beta

336
00:13:57,920 --> 00:14:00,480
values of computation based states

337
00:14:00,480 --> 00:14:02,720
even if its computing power becomes

338
00:14:02,720 --> 00:14:04,000
unbounded

339
00:14:04,000 --> 00:14:06,959
and uh under and he can he obtain the

340
00:14:06,959 --> 00:14:09,920
base of this quantum state

341
00:14:09,920 --> 00:14:12,000
this is an intuitive reason why our

342
00:14:12,000 --> 00:14:13,839
construction satisfies satellite

343
00:14:13,839 --> 00:14:16,720
developing highly

344
00:14:16,720 --> 00:14:18,800
once we have constructed quantum

345
00:14:18,800 --> 00:14:21,839
commitments with these properties

346
00:14:21,839 --> 00:14:25,360
we can construct neurological qma with

347
00:14:25,360 --> 00:14:27,680
certifiable sincere knowledge and

348
00:14:27,680 --> 00:14:30,399
statistical sadness at the same time

349
00:14:30,399 --> 00:14:33,040
by combining this quantum commitment

350
00:14:33,040 --> 00:14:35,920
with uh with zero knowledgeable for qma

351
00:14:35,920 --> 00:14:39,519
of a broadband underground

352
00:14:39,920 --> 00:14:42,000
the outline of our construction is as

353
00:14:42,000 --> 00:14:43,519
far as

354
00:14:43,519 --> 00:14:46,639
first the prover randomly generate in

355
00:14:46,639 --> 00:14:48,800
length classical bit string

356
00:14:48,800 --> 00:14:51,120
and commit them using our quantum

357
00:14:51,120 --> 00:14:52,880
commitment

358
00:14:52,880 --> 00:14:56,639
then the purifier randomly generate i

359
00:14:56,639 --> 00:14:59,120
and generate the certificate of the

360
00:14:59,120 --> 00:15:01,120
quantum commitment

361
00:15:01,120 --> 00:15:04,079
other than this i

362
00:15:04,079 --> 00:15:06,399
then the verifier sends them to the

363
00:15:06,399 --> 00:15:08,800
approval

364
00:15:08,800 --> 00:15:11,760
supplier checks with all certificates

365
00:15:11,760 --> 00:15:14,240
are varied or not using high internal

366
00:15:14,240 --> 00:15:16,639
information

367
00:15:16,639 --> 00:15:19,680
then the problem sends the i speed of a

368
00:15:19,680 --> 00:15:21,839
to the verifier

369
00:15:21,839 --> 00:15:24,320
the verifier checks whether whether the

370
00:15:24,320 --> 00:15:28,480
instance x is ac instance or not

371
00:15:28,480 --> 00:15:31,519
our construction satisfies

372
00:15:31,519 --> 00:15:33,360
these properties

373
00:15:33,360 --> 00:15:36,240
from the from the nodes before qma of

374
00:15:36,240 --> 00:15:38,800
rodman and grillo

375
00:15:38,800 --> 00:15:41,199
and our construction also satisfy

376
00:15:41,199 --> 00:15:43,680
certified virus in their knowledge

377
00:15:43,680 --> 00:15:47,279
which is main target of our work

378
00:15:47,279 --> 00:15:49,600
now i will explain initiative reason why

379
00:15:49,600 --> 00:15:51,360
our construction satisfies certified

380
00:15:51,360 --> 00:15:54,000
developing the knowledge

381
00:15:54,000 --> 00:15:56,000
when the certificate issued by the

382
00:15:56,000 --> 00:15:58,639
verifier are buried

383
00:15:58,639 --> 00:16:01,519
he can't obtain the committed value from

384
00:16:01,519 --> 00:16:03,360
the information received from the blue

385
00:16:03,360 --> 00:16:04,560
bar

386
00:16:04,560 --> 00:16:06,720
so he can't obtain this one

387
00:16:06,720 --> 00:16:08,959
so he cannot obtain information beyond

388
00:16:08,959 --> 00:16:13,519
the fact that the instance x is instance

389
00:16:13,519 --> 00:16:15,440
in our work we have constructed

390
00:16:15,440 --> 00:16:17,839
teleknowledgeable for pma with these

391
00:16:17,839 --> 00:16:21,199
properties by using quantum mechanics

392
00:16:21,199 --> 00:16:23,759
note that quantum mechanics is essential

393
00:16:23,759 --> 00:16:26,160
for construction

394
00:16:26,160 --> 00:16:28,800
finally i will explain the reason

395
00:16:28,800 --> 00:16:30,880
why the quantum mechanics is essential

396
00:16:30,880 --> 00:16:34,880
for construction in the next slide

397
00:16:34,880 --> 00:16:36,639
in the classical world certified

398
00:16:36,639 --> 00:16:38,399
evaluating their knowledge implies

399
00:16:38,399 --> 00:16:41,279
statistical statistical zero knowledge

400
00:16:41,279 --> 00:16:42,800
so in the quantum

401
00:16:42,800 --> 00:16:44,880
in the classical world we cannot

402
00:16:44,880 --> 00:16:47,040
construct certified evaluating the

403
00:16:47,040 --> 00:16:51,360
knowledge before qma or np

404
00:16:51,360 --> 00:16:53,120
to explain that

405
00:16:53,120 --> 00:16:55,759
we will consider the knowledge protocol

406
00:16:55,759 --> 00:16:58,240
between the classical approval and the

407
00:16:58,240 --> 00:17:00,480
classical verifier

408
00:17:00,480 --> 00:17:03,839
so the messages between them are also

409
00:17:03,839 --> 00:17:05,599
classical

410
00:17:05,599 --> 00:17:08,000
so the marijuana specifier can copy the

411
00:17:08,000 --> 00:17:10,720
information received from the approval

412
00:17:10,720 --> 00:17:13,119
since the since these are classical bit

413
00:17:13,119 --> 00:17:15,359
strings

414
00:17:15,359 --> 00:17:16,640
by using

415
00:17:16,640 --> 00:17:19,039
by using the speed information

416
00:17:19,039 --> 00:17:21,919
the margin specifier can issue a valid

417
00:17:21,919 --> 00:17:24,240
certificate

418
00:17:24,240 --> 00:17:26,000
conversation from the definition of

419
00:17:26,000 --> 00:17:28,319
certified virus in their knowledge

420
00:17:28,319 --> 00:17:31,120
when the certificate is valid

421
00:17:31,120 --> 00:17:34,320
his computing power becomes unbounded

422
00:17:34,320 --> 00:17:37,760
so he can access to p1p2 received from

423
00:17:37,760 --> 00:17:39,280
the prover

424
00:17:39,280 --> 00:17:43,120
so p1p2 must be secure against unbounded

425
00:17:43,120 --> 00:17:45,679
verifier at the point that he receives

426
00:17:45,679 --> 00:17:46,960
then

427
00:17:46,960 --> 00:17:49,280
so in the classical world certified

428
00:17:49,280 --> 00:17:51,039
evaluating their knowledge implies

429
00:17:51,039 --> 00:17:53,360
statistical zero knowledge

430
00:17:53,360 --> 00:17:55,440
on the other hand in the quantum world

431
00:17:55,440 --> 00:17:58,559
the same discussion does not go through

432
00:17:58,559 --> 00:18:00,880
this is because in the quantum world

433
00:18:00,880 --> 00:18:04,160
even myspace cannot copy the information

434
00:18:04,160 --> 00:18:06,160
received from the pyruvate

435
00:18:06,160 --> 00:18:08,320
since the contaminant cloning theorem

436
00:18:08,320 --> 00:18:11,200
holds in a contaminant

437
00:18:11,200 --> 00:18:13,360
so in the contaminant certified

438
00:18:13,360 --> 00:18:15,200
evaluating their knowledge does not

439
00:18:15,200 --> 00:18:19,280
necessarily imply statistical knowledge

440
00:18:19,280 --> 00:18:23,360
now i summarize our talk of this talk

441
00:18:23,360 --> 00:18:24,320
first

442
00:18:24,320 --> 00:18:26,480
in our work we have introduced a new

443
00:18:26,480 --> 00:18:28,480
notion of quantum commitment

444
00:18:28,480 --> 00:18:30,799
with statistical standards and certified

445
00:18:30,799 --> 00:18:32,559
everlasting hiding

446
00:18:32,559 --> 00:18:34,720
and have constructed

447
00:18:34,720 --> 00:18:36,880
second we have introduced a new notion

448
00:18:36,880 --> 00:18:39,120
of zero knowledge property which we call

449
00:18:39,120 --> 00:18:41,440
certified virus in terminology

450
00:18:41,440 --> 00:18:43,520
and have constructed certified

451
00:18:43,520 --> 00:18:47,600
evaluating zero knowledge proof of qma

452
00:18:47,600 --> 00:18:50,000
open problem open problems are as

453
00:18:50,000 --> 00:18:51,760
follows

454
00:18:51,760 --> 00:18:54,640
the first open problem is that can we

455
00:18:54,640 --> 00:18:57,520
construct other cryptographic primitives

456
00:18:57,520 --> 00:19:00,799
with certified evaluating security

457
00:19:00,799 --> 00:19:03,280
note that a recent follow-up research

458
00:19:03,280 --> 00:19:05,200
shows that

459
00:19:05,200 --> 00:19:07,840
so that we can construct

460
00:19:07,840 --> 00:19:10,160
a protocol with certified evaluating

461
00:19:10,160 --> 00:19:13,120
security for public encryption purely

462
00:19:13,120 --> 00:19:15,760
homogeneity encryption and so on in this

463
00:19:15,760 --> 00:19:17,039
work

464
00:19:17,039 --> 00:19:19,520
and our recent work shows that we can

465
00:19:19,520 --> 00:19:21,440
construct functional encryption with

466
00:19:21,440 --> 00:19:24,160
certified evaluating security for all

467
00:19:24,160 --> 00:19:26,080
nc1 circuits

468
00:19:26,080 --> 00:19:28,640
but the but the number of key query is

469
00:19:28,640 --> 00:19:30,880
apparently bounded

470
00:19:30,880 --> 00:19:32,880
it is open problem whether we can

471
00:19:32,880 --> 00:19:36,320
construct other cryptographic primitives

472
00:19:36,320 --> 00:19:38,720
the second question is can we define a

473
00:19:38,720 --> 00:19:40,240
different type of

474
00:19:40,240 --> 00:19:42,640
developing security and construct a

475
00:19:42,640 --> 00:19:45,280
protocol with the security

476
00:19:45,280 --> 00:19:46,480
in our work

477
00:19:46,480 --> 00:19:48,960
we have defined certified evaluation

478
00:19:48,960 --> 00:19:50,160
security

479
00:19:50,160 --> 00:19:52,320
we are computational assumptions are

480
00:19:52,320 --> 00:19:55,760
needed only before the valid certificate

481
00:19:55,760 --> 00:19:57,360
is issued

482
00:19:57,360 --> 00:19:59,600
on the other hand we may be able to

483
00:19:59,600 --> 00:20:03,200
define other type of evaluation security

484
00:20:03,200 --> 00:20:05,120
we are we we are computational

485
00:20:05,120 --> 00:20:08,720
assumptions are needed only temporary

486
00:20:08,720 --> 00:20:10,960
but it remains open

487
00:20:10,960 --> 00:20:12,880
now i finished my talk thank you for

488
00:20:12,880 --> 00:20:15,880
listening

489
00:20:28,080 --> 00:20:31,080
okay

490
00:20:57,360 --> 00:21:00,360
okay

491
00:21:11,690 --> 00:21:18,480
[Music]

492
00:21:18,480 --> 00:21:20,740
um

493
00:21:20,740 --> 00:21:25,000
[Music]

494
00:21:44,559 --> 00:21:47,039
please repeat the question

495
00:21:47,039 --> 00:21:47,760
and

496
00:21:47,760 --> 00:21:49,120
first

497
00:21:49,120 --> 00:21:51,600
we use the one-time secret communication

498
00:21:51,600 --> 00:21:54,080
with certification by broadband islam

499
00:21:54,080 --> 00:21:56,799
and the commitment disease properties

500
00:21:56,799 --> 00:22:00,590
and the contaminant molecule

501
00:22:00,590 --> 00:22:02,960
[Music]

502
00:22:02,960 --> 00:22:05,960
okay

503
00:22:10,320 --> 00:22:13,409
[Music]

504
00:22:22,210 --> 00:22:23,679
[Music]

505
00:22:23,679 --> 00:22:27,760
please repeat the question um

506
00:22:44,220 --> 00:22:47,309
[Music]

507
00:22:53,760 --> 00:22:55,360
his quantum state

508
00:22:55,360 --> 00:22:56,799
but

509
00:22:56,799 --> 00:22:59,760
but the sender

510
00:22:59,760 --> 00:23:02,400
cannot change he can't change the secret

511
00:23:02,400 --> 00:23:03,600
key

512
00:23:03,600 --> 00:23:05,120
so so

513
00:23:05,120 --> 00:23:08,720
so after she sends the

514
00:23:08,720 --> 00:23:11,840
this quantum state

515
00:23:12,400 --> 00:23:15,360
she cannot change these quantum states

516
00:23:15,360 --> 00:23:16,480
these states

517
00:23:16,480 --> 00:23:19,120
so even mount mass standard cannot

518
00:23:19,120 --> 00:23:23,120
change the probability distribution

519
00:23:23,120 --> 00:23:26,120
okay

520
00:23:29,190 --> 00:23:32,329
[Music]

521
00:23:38,559 --> 00:23:41,120
so the message is is

522
00:23:41,120 --> 00:23:44,080
only from the sender to the receiver

523
00:23:44,080 --> 00:23:45,120
so

524
00:23:45,120 --> 00:23:47,679
if i want my sender cannot change the

525
00:23:47,679 --> 00:23:50,880
quantum state after she

526
00:23:56,799 --> 00:23:59,799
um

527
00:24:26,240 --> 00:24:30,679
communication must be condoms

528
00:24:31,730 --> 00:24:38,769
[Music]

529
00:24:44,799 --> 00:24:46,400
it is impossible

530
00:24:46,400 --> 00:24:48,720
because because because he can copy the

531
00:24:48,720 --> 00:24:51,840
classical bit strings from the driver so

532
00:24:51,840 --> 00:24:53,039
so

533
00:24:53,039 --> 00:24:54,159
we cannot

534
00:24:54,159 --> 00:24:56,400
construct

535
00:24:56,400 --> 00:24:59,200
start whatever i think the noise okay in

536
00:24:59,200 --> 00:25:03,000
the contact in the closet

537
00:25:21,360 --> 00:25:24,360
now

538
00:25:55,520 --> 00:26:00,240
and yours is this one yes excellent

539
00:26:05,120 --> 00:26:09,000
what we're actually hearing

540
00:26:14,320 --> 00:26:18,439
how do i get to this

541
00:26:22,960 --> 00:26:26,079
[Music]

542
00:26:47,360 --> 00:26:50,360
okay

543
00:27:00,960 --> 00:27:03,440
is it this one

544
00:27:03,440 --> 00:27:06,440
yeah

545
00:27:17,360 --> 00:27:20,360
oh

546
00:27:27,679 --> 00:27:29,039
and thanks for uh thanks for

547
00:27:29,039 --> 00:27:31,039
introduction i'm takashi from entity and

548
00:27:31,039 --> 00:27:33,279
kill university and i'm talking about

549
00:27:33,279 --> 00:27:35,039
quantum commitment and signature without

550
00:27:35,039 --> 00:27:36,799
warming functions and this is going to

551
00:27:36,799 --> 00:27:38,799
work with tomoyuki morimaya from kyoto

552
00:27:38,799 --> 00:27:41,200
university

553
00:27:41,200 --> 00:27:43,279
so as you all know the warming functions

554
00:27:43,279 --> 00:27:45,440
are a fundamental building block in

555
00:27:45,440 --> 00:27:46,640
cryptography

556
00:27:46,640 --> 00:27:49,440
and in the classical difficulty uh one

557
00:27:49,440 --> 00:27:50,960
function is known to be the minimum

558
00:27:50,960 --> 00:27:54,159
assumption for any non-trivial

559
00:27:54,159 --> 00:27:56,159
cryptography uh including symmetrical

560
00:27:56,159 --> 00:27:58,480
encryption visual keys public encryption

561
00:27:58,480 --> 00:28:01,200
key exchange is a signature commitment

562
00:28:01,200 --> 00:28:03,840
and so on

563
00:28:04,640 --> 00:28:05,919
and uh

564
00:28:05,919 --> 00:28:08,000
next i will talk about content grid so

565
00:28:08,000 --> 00:28:10,080
quantum information is awesome and one

566
00:28:10,080 --> 00:28:12,000
of the most surprising

567
00:28:12,000 --> 00:28:14,240
implications of confirmation for

568
00:28:14,240 --> 00:28:17,360
cryptography is quantum key distribution

569
00:28:17,360 --> 00:28:19,520
so this is the information theoretically

570
00:28:19,520 --> 00:28:22,320
security exchange protocol by using

571
00:28:22,320 --> 00:28:24,480
quantum communication

572
00:28:24,480 --> 00:28:27,200
and as i said so in the classical

573
00:28:27,200 --> 00:28:28,399
cryptography

574
00:28:28,399 --> 00:28:31,520
key exchange protocol has to at least

575
00:28:31,520 --> 00:28:34,080
assume the existence one function so

576
00:28:34,080 --> 00:28:35,840
this changes the landscape of

577
00:28:35,840 --> 00:28:38,720
cryptography when we consider quantum

578
00:28:38,720 --> 00:28:40,080
communication

579
00:28:40,080 --> 00:28:42,480
and after the invention of quantum key

580
00:28:42,480 --> 00:28:45,279
distribution people started to expect

581
00:28:45,279 --> 00:28:46,720
that other

582
00:28:46,720 --> 00:28:47,600
uh

583
00:28:47,600 --> 00:28:50,080
cryptographic premiums can also be

584
00:28:50,080 --> 00:28:52,559
realized by using quantum communications

585
00:28:52,559 --> 00:28:54,320
uh in the information theoretically

586
00:28:54,320 --> 00:28:55,520
secure way

587
00:28:55,520 --> 00:28:58,960
however it turned out that actually many

588
00:28:58,960 --> 00:29:00,640
cryptographic premises

589
00:29:00,640 --> 00:29:01,440
are

590
00:29:01,440 --> 00:29:03,120
impossible

591
00:29:03,120 --> 00:29:04,720
to achieve information theoretical

592
00:29:04,720 --> 00:29:07,840
security even with quantum communication

593
00:29:07,840 --> 00:29:09,679
and the claim to include

594
00:29:09,679 --> 00:29:11,679
symmetric public encryption is the

595
00:29:11,679 --> 00:29:14,559
signature commitment and so on

596
00:29:14,559 --> 00:29:18,000
so but if the

597
00:29:18,000 --> 00:29:19,760
information theoretical security is

598
00:29:19,760 --> 00:29:21,360
impossible then the next natural

599
00:29:21,360 --> 00:29:23,440
question is what is the minimum

600
00:29:23,440 --> 00:29:25,360
assumption needed for

601
00:29:25,360 --> 00:29:26,799
constructing them

602
00:29:26,799 --> 00:29:29,279
and especially our question main

603
00:29:29,279 --> 00:29:32,080
question is our main function necessary

604
00:29:32,080 --> 00:29:34,640
for contracting them uh when using

605
00:29:34,640 --> 00:29:37,679
content communication

606
00:29:38,159 --> 00:29:40,480
and this is our result

607
00:29:40,480 --> 00:29:41,360
uh

608
00:29:41,360 --> 00:29:43,200
we proved that we showed that one of the

609
00:29:43,200 --> 00:29:45,120
functions are actually not needed for

610
00:29:45,120 --> 00:29:47,200
contracting commitments and one-time

611
00:29:47,200 --> 00:29:49,360
signatures uh using quantum

612
00:29:49,360 --> 00:29:51,039
communication

613
00:29:51,039 --> 00:29:52,799
and uh

614
00:29:52,799 --> 00:29:55,679
a recent results show that commitment

615
00:29:55,679 --> 00:29:56,640
scheme

616
00:29:56,640 --> 00:29:58,880
actually implies oblivious transfer and

617
00:29:58,880 --> 00:30:01,200
multipatient computation in the quantum

618
00:30:01,200 --> 00:30:04,480
setting so this also means that uh

619
00:30:04,480 --> 00:30:06,159
functions are not needed for

620
00:30:06,159 --> 00:30:07,760
constructing general multiparty

621
00:30:07,760 --> 00:30:09,919
computation protocol in the quantum

622
00:30:09,919 --> 00:30:11,360
setting

623
00:30:11,360 --> 00:30:14,799
and for proving this what we actually do

624
00:30:14,799 --> 00:30:17,200
is to construct these primitives from

625
00:30:17,200 --> 00:30:19,120
what is called pseudo-random quantum

626
00:30:19,120 --> 00:30:21,360
states

627
00:30:21,360 --> 00:30:24,720
and uh i was saying about this later but

628
00:30:24,720 --> 00:30:27,520
uh the point is that there's evidence

629
00:30:27,520 --> 00:30:30,399
that certain random states uh does not

630
00:30:30,399 --> 00:30:32,480
imply the existing volume function or

631
00:30:32,480 --> 00:30:35,200
even vqp not equal qma

632
00:30:35,200 --> 00:30:36,640
and by combining

633
00:30:36,640 --> 00:30:37,919
them

634
00:30:37,919 --> 00:30:39,360
we actually

635
00:30:39,360 --> 00:30:41,919
take our message so one-way functions

636
00:30:41,919 --> 00:30:43,440
are not the linear assumptions for

637
00:30:43,440 --> 00:30:45,200
contemplation

638
00:30:45,200 --> 00:30:47,520
and this is a brief overview of our

639
00:30:47,520 --> 00:30:49,679
results and from now i will explain a

640
00:30:49,679 --> 00:30:53,600
little bit more detail about the results

641
00:30:53,600 --> 00:30:55,520
the first let me

642
00:30:55,520 --> 00:30:57,760
explain what is two random quantum

643
00:30:57,760 --> 00:30:59,760
states and this is a

644
00:30:59,760 --> 00:31:02,840
roughly a quantum analog to the random

645
00:31:02,840 --> 00:31:06,960
generators so this is the algorithm that

646
00:31:06,960 --> 00:31:09,519
a3

647
00:31:09,679 --> 00:31:13,679
you can iron that takes uh

648
00:31:13,679 --> 00:31:17,360
classical string k as input and output

649
00:31:17,360 --> 00:31:19,840
quantum state psi k

650
00:31:19,840 --> 00:31:20,799
and uh

651
00:31:20,799 --> 00:31:23,840
as security notion we require

652
00:31:23,840 --> 00:31:26,320
computational indistinguishability like

653
00:31:26,320 --> 00:31:27,120
this

654
00:31:27,120 --> 00:31:31,519
so this says that for any polynomial t

655
00:31:31,519 --> 00:31:35,279
a t copies of psi k for randomly chosen

656
00:31:35,279 --> 00:31:37,360
key k is computationally

657
00:31:37,360 --> 00:31:40,559
indistinguishable from t copies of power

658
00:31:40,559 --> 00:31:43,919
random states phi so where power random

659
00:31:43,919 --> 00:31:44,799
is just

660
00:31:44,799 --> 00:31:47,120
intuitively uniformly random quantum

661
00:31:47,120 --> 00:31:48,480
stage

662
00:31:48,480 --> 00:31:50,080
and

663
00:31:50,080 --> 00:31:52,720
by default we require this for

664
00:31:52,720 --> 00:31:55,519
unbounded polynomial t but we also

665
00:31:55,519 --> 00:31:58,480
consider a weaker type of security a

666
00:31:58,480 --> 00:32:00,559
reality is limited to one

667
00:32:00,559 --> 00:32:03,279
in which case we call it one periods

668
00:32:03,279 --> 00:32:07,360
and here i remark that for one pls

669
00:32:07,360 --> 00:32:10,159
this is nontrivial only when g is length

670
00:32:10,159 --> 00:32:11,519
increasing

671
00:32:11,519 --> 00:32:14,480
but for unbounded polynomial t

672
00:32:14,480 --> 00:32:15,279
uh

673
00:32:15,279 --> 00:32:18,880
qrs is not really non-trivial even for

674
00:32:18,880 --> 00:32:22,080
length decreasing one

675
00:32:22,080 --> 00:32:23,279
and uh

676
00:32:23,279 --> 00:32:25,600
here here are several known resultable

677
00:32:25,600 --> 00:32:26,960
gear s

678
00:32:26,960 --> 00:32:29,679
and uh g eta proved that one-way

679
00:32:29,679 --> 00:32:32,080
functions so they contracted to random

680
00:32:32,080 --> 00:32:34,240
state based on bombing functions but

681
00:32:34,240 --> 00:32:36,799
they left the other direction open

682
00:32:36,799 --> 00:32:38,559
and the reason the work like regiment

683
00:32:38,559 --> 00:32:39,600
proved that

684
00:32:39,600 --> 00:32:41,760
there is a quantum oracle relative to

685
00:32:41,760 --> 00:32:46,320
which dqp equals qma but prs exists so

686
00:32:46,320 --> 00:32:47,760
this means that

687
00:32:47,760 --> 00:32:50,960
uh it is unlikely that prs implies one

688
00:32:50,960 --> 00:32:52,240
function

689
00:32:52,240 --> 00:32:54,960
and in the sense that this is impossible

690
00:32:54,960 --> 00:32:58,080
relative to content work

691
00:32:59,919 --> 00:33:01,200
so

692
00:33:01,200 --> 00:33:04,159
okay so as i said so prs doesn't seem to

693
00:33:04,159 --> 00:33:06,720
imply our function so our

694
00:33:06,720 --> 00:33:09,279
our goal is to construct commitment to

695
00:33:09,279 --> 00:33:12,480
signatures from two random states and so

696
00:33:12,480 --> 00:33:14,320
first i will explain

697
00:33:14,320 --> 00:33:17,600
uh commitments the commitments either

698
00:33:17,600 --> 00:33:20,080
protocol between sender receiver where

699
00:33:20,080 --> 00:33:23,360
sender has some message b which is a bit

700
00:33:23,360 --> 00:33:24,399
now and

701
00:33:24,399 --> 00:33:25,679
in the commit

702
00:33:25,679 --> 00:33:27,760
we have two phases called commit phrase

703
00:33:27,760 --> 00:33:30,559
and review phase in the commit phase the

704
00:33:30,559 --> 00:33:33,120
sender generates some commitment com b

705
00:33:33,120 --> 00:33:35,039
depending on the message b and send it

706
00:33:35,039 --> 00:33:37,840
to receiver and the reveal phase the

707
00:33:37,840 --> 00:33:40,240
sender sends b along with some review

708
00:33:40,240 --> 00:33:43,360
information b and then receiver uh

709
00:33:43,360 --> 00:33:46,080
verified agent acceptor reset

710
00:33:46,080 --> 00:33:48,960
and we require two security notions for

711
00:33:48,960 --> 00:33:50,159
commitments

712
00:33:50,159 --> 00:33:52,320
the first is hiding which means that

713
00:33:52,320 --> 00:33:54,480
commitment high b

714
00:33:54,480 --> 00:33:56,320
and we especially

715
00:33:56,320 --> 00:33:57,360
consider

716
00:33:57,360 --> 00:34:00,399
uh computational hiding which means that

717
00:34:00,399 --> 00:34:02,000
commitment is there and commitment to

718
00:34:02,000 --> 00:34:03,120
one are computationally

719
00:34:03,120 --> 00:34:04,640
indistinguishable

720
00:34:04,640 --> 00:34:06,480
and the second is binding

721
00:34:06,480 --> 00:34:08,879
and binding intuitively means that

722
00:34:08,879 --> 00:34:11,040
fender cannot change his mind after

723
00:34:11,040 --> 00:34:13,440
sending complete however we have to be

724
00:34:13,440 --> 00:34:16,239
careful about when defining finding

725
00:34:16,239 --> 00:34:18,399
property for quantum commitments

726
00:34:18,399 --> 00:34:21,280
because in the quantum case especially

727
00:34:21,280 --> 00:34:23,280
when the commitment content

728
00:34:23,280 --> 00:34:24,320
uh

729
00:34:24,320 --> 00:34:26,239
the naive notions finding it impossible

730
00:34:26,239 --> 00:34:28,879
because the malicious offender may

731
00:34:28,879 --> 00:34:30,960
generate a superposition of commitment

732
00:34:30,960 --> 00:34:33,199
to zero and commitment to one in which

733
00:34:33,199 --> 00:34:34,960
case the commitment can be opened to

734
00:34:34,960 --> 00:34:36,320
zero and one

735
00:34:36,320 --> 00:34:38,480
with very different half for each

736
00:34:38,480 --> 00:34:40,320
and so

737
00:34:40,320 --> 00:34:41,839
when configuring

738
00:34:41,839 --> 00:34:44,159
uh content commitment so

739
00:34:44,159 --> 00:34:45,520
we have to

740
00:34:45,520 --> 00:34:48,079
consider a little bit relaxed notion of

741
00:34:48,079 --> 00:34:50,239
binding which is often called some

742
00:34:50,239 --> 00:34:52,800
binding property so this means the

743
00:34:52,800 --> 00:34:53,839
following

744
00:34:53,839 --> 00:34:56,480
let p b be the probability that the

745
00:34:56,480 --> 00:34:59,119
center can open the commitment to b then

746
00:34:59,119 --> 00:35:02,240
the time of probability p p0 and p1

747
00:35:02,240 --> 00:35:04,800
should be almost equal to one

748
00:35:04,800 --> 00:35:08,480
except for the negligible difference

749
00:35:09,280 --> 00:35:10,240
and

750
00:35:10,240 --> 00:35:11,200
this is

751
00:35:11,200 --> 00:35:14,240
our contraption of commitments from one

752
00:35:14,240 --> 00:35:16,880
plf here one pls

753
00:35:16,880 --> 00:35:19,359
regards that one pls means that

754
00:35:19,359 --> 00:35:21,599
when one only gives one copy appear a

755
00:35:21,599 --> 00:35:24,560
state pls so you cannot distinguish it

756
00:35:24,560 --> 00:35:26,240
from power random

757
00:35:26,240 --> 00:35:27,839
and so we assume

758
00:35:27,839 --> 00:35:28,640
uh

759
00:35:28,640 --> 00:35:31,760
one period from n bit to three n qubit

760
00:35:31,760 --> 00:35:34,000
and then the the product works as

761
00:35:34,000 --> 00:35:35,359
follows

762
00:35:35,359 --> 00:35:37,280
in the commit phase

763
00:35:37,280 --> 00:35:39,920
uh the the sender generates a state over

764
00:35:39,920 --> 00:35:43,280
two registers r and c uh where r stand

765
00:35:43,280 --> 00:35:45,760
through the reveries and see stand

766
00:35:45,760 --> 00:35:47,760
through commit bridge

767
00:35:47,760 --> 00:35:49,040
and uh

768
00:35:49,040 --> 00:35:50,079
if we

769
00:35:50,079 --> 00:35:52,400
uh okay and in the commit phrase it only

770
00:35:52,400 --> 00:35:55,280
sends c register and in the reveal

771
00:35:55,280 --> 00:35:57,839
reveal phrase it also sends a review

772
00:35:57,839 --> 00:36:00,400
register along along with the committed

773
00:36:00,400 --> 00:36:01,599
vb

774
00:36:01,599 --> 00:36:03,200
and uh

775
00:36:03,200 --> 00:36:05,440
in the command phase

776
00:36:05,440 --> 00:36:08,400
it only sends c registers so let's look

777
00:36:08,400 --> 00:36:11,119
at the register uh tracing hours are

778
00:36:11,119 --> 00:36:14,240
registered then when b equals there then

779
00:36:14,240 --> 00:36:15,760
this is simply

780
00:36:15,760 --> 00:36:19,119
a third random state psi k for randomly

781
00:36:19,119 --> 00:36:20,400
chosen k

782
00:36:20,400 --> 00:36:23,440
on the other hand for b equal one

783
00:36:23,440 --> 00:36:27,040
uh this is a third random state by k

784
00:36:27,040 --> 00:36:29,440
uh one time parties three content one

785
00:36:29,440 --> 00:36:32,480
ten parties with random key x and z

786
00:36:32,480 --> 00:36:34,560
and uh yeah this is a commitment

787
00:36:34,560 --> 00:36:35,680
protocol

788
00:36:35,680 --> 00:36:38,000
which we contract and this is a very

789
00:36:38,000 --> 00:36:40,560
simple protocol

790
00:36:40,560 --> 00:36:42,720
so we have to prove that this

791
00:36:42,720 --> 00:36:44,960
satisfies hiding and binding and

792
00:36:44,960 --> 00:36:46,800
especially computational re-hiding and

793
00:36:46,800 --> 00:36:48,480
statistical binding

794
00:36:48,480 --> 00:36:51,040
and for hiding so what we have to prove

795
00:36:51,040 --> 00:36:52,480
is that

796
00:36:52,480 --> 00:36:56,560
phi k and uh its contemplating positive

797
00:36:56,560 --> 00:36:59,440
state is computational indistinguishable

798
00:36:59,440 --> 00:37:02,880
for proving this we first consider our

799
00:37:02,880 --> 00:37:04,560
random state phi

800
00:37:04,560 --> 00:37:07,200
and its quantum quantum point state and

801
00:37:07,200 --> 00:37:10,560
because both states are look maximally

802
00:37:10,560 --> 00:37:12,000
mixed states so

803
00:37:12,000 --> 00:37:14,079
we can show that they are statistically

804
00:37:14,079 --> 00:37:16,000
indistinguishable

805
00:37:16,000 --> 00:37:17,359
and also

806
00:37:17,359 --> 00:37:20,560
by the security of one plf

807
00:37:20,560 --> 00:37:22,960
site k for randomly choosing k is

808
00:37:22,960 --> 00:37:25,359
computationally indistinguishable from a

809
00:37:25,359 --> 00:37:27,920
higher random state phi therefore by

810
00:37:27,920 --> 00:37:31,040
combining them we can conclude the

811
00:37:31,040 --> 00:37:33,040
computational hiding property of the

812
00:37:33,040 --> 00:37:36,680
commitment protocol

813
00:37:37,359 --> 00:37:39,440
and next for the binding

814
00:37:39,440 --> 00:37:42,960
so by using known result by em uh it

815
00:37:42,960 --> 00:37:44,880
answers the fact is to prove that the

816
00:37:44,880 --> 00:37:47,359
feasibility between commitment to zero

817
00:37:47,359 --> 00:37:49,680
into one and negligible which means that

818
00:37:49,680 --> 00:37:52,320
commitment to their between one

819
00:37:52,320 --> 00:37:55,040
information theoretically for a part

820
00:37:55,040 --> 00:37:57,760
and i will not explain the actual proof

821
00:37:57,760 --> 00:38:01,200
for this but the intuition is as follows

822
00:38:01,200 --> 00:38:04,240
so for commitment to one is a maximally

823
00:38:04,240 --> 00:38:06,000
mixed state in two to three n

824
00:38:06,000 --> 00:38:07,920
dimensional space because this is one

825
00:38:07,920 --> 00:38:09,440
time partial state

826
00:38:09,440 --> 00:38:11,760
of something on the other hand the

827
00:38:11,760 --> 00:38:14,960
commitment there is just a mix of two to

828
00:38:14,960 --> 00:38:17,280
the end states of which your

829
00:38:17,280 --> 00:38:19,599
states because the possible number of

830
00:38:19,599 --> 00:38:20,880
quantum states

831
00:38:20,880 --> 00:38:23,920
uh is to the end because there are

832
00:38:23,920 --> 00:38:26,960
this many keys for the prs

833
00:38:26,960 --> 00:38:28,079
therefore

834
00:38:28,079 --> 00:38:29,920
the mix of two different and states

835
00:38:29,920 --> 00:38:31,440
cannot be

836
00:38:31,440 --> 00:38:33,200
information theoretically close to

837
00:38:33,200 --> 00:38:36,000
maximum mixed state in the traditional

838
00:38:36,000 --> 00:38:38,960
space so they should be

839
00:38:38,960 --> 00:38:40,880
informations radically for about and

840
00:38:40,880 --> 00:38:42,640
this is inclusion of the proof of

841
00:38:42,640 --> 00:38:45,040
binding

842
00:38:45,119 --> 00:38:47,359
and uh yeah so now we

843
00:38:47,359 --> 00:38:50,480
get commitments from one pls

844
00:38:50,480 --> 00:38:53,280
and uh as i already mentioned uh recent

845
00:38:53,280 --> 00:38:56,160
results about fake guitar uh shows that

846
00:38:56,160 --> 00:38:58,640
commitment implies already bs transfer

847
00:38:58,640 --> 00:39:01,680
and also multi-party quantum computation

848
00:39:01,680 --> 00:39:05,119
uh in the by using content communication

849
00:39:05,119 --> 00:39:06,480
and uh

850
00:39:06,480 --> 00:39:08,880
and actually we cannot simply combine

851
00:39:08,880 --> 00:39:11,760
our resultant fears because uh the basic

852
00:39:11,760 --> 00:39:13,520
guitar assumed

853
00:39:13,520 --> 00:39:15,599
classical commitments

854
00:39:15,599 --> 00:39:18,079
and whereas we constructed quantum

855
00:39:18,079 --> 00:39:20,960
commitments however we observed that we

856
00:39:20,960 --> 00:39:23,440
can use quantum commitment in their

857
00:39:23,440 --> 00:39:27,040
contraction of mp2c by using a technique

858
00:39:27,040 --> 00:39:31,280
developed by another work uh by phantom

859
00:39:31,280 --> 00:39:34,240
and uh where they gave general technique

860
00:39:34,240 --> 00:39:36,240
to replace classical commitments with

861
00:39:36,240 --> 00:39:38,320
quantum one so by using this technique

862
00:39:38,320 --> 00:39:40,400
we can actually use our quantum

863
00:39:40,400 --> 00:39:42,800
commitments uh in the construction of

864
00:39:42,800 --> 00:39:44,000
mpqc

865
00:39:44,000 --> 00:39:46,640
uh by a power sector

866
00:39:46,640 --> 00:39:50,320
and then so we obtain one uh mpqc from

867
00:39:50,320 --> 00:39:52,000
one pr

868
00:39:52,000 --> 00:39:53,280
and

869
00:39:53,280 --> 00:39:55,839
as a result we can see that mpqc may not

870
00:39:55,839 --> 00:39:58,880
need wrong functions

871
00:39:59,040 --> 00:40:01,119
and next i will move on to one time

872
00:40:01,119 --> 00:40:02,320
signatures

873
00:40:02,320 --> 00:40:04,640
the one-time signature is a photograph

874
00:40:04,640 --> 00:40:07,200
between cyan and verifier resigner who's

875
00:40:07,200 --> 00:40:09,520
signing key sk and provider hold

876
00:40:09,520 --> 00:40:12,400
verification key vk assigner also has

877
00:40:12,400 --> 00:40:14,400
the message m to sign

878
00:40:14,400 --> 00:40:15,680
and to sign

879
00:40:15,680 --> 00:40:18,880
to the message m the signer generates

880
00:40:18,880 --> 00:40:21,599
the signature sigma m by using

881
00:40:21,599 --> 00:40:24,960
uh the his secret key escape or signing

882
00:40:24,960 --> 00:40:27,839
he escaped and then send the signature

883
00:40:27,839 --> 00:40:30,079
signature and the reply

884
00:40:30,079 --> 00:40:31,920
along with the message and then very

885
00:40:31,920 --> 00:40:35,280
fire verifies if it is valid signature

886
00:40:35,280 --> 00:40:37,520
or not and accept the reject

887
00:40:37,520 --> 00:40:40,400
and the one-time security means that

888
00:40:40,400 --> 00:40:45,119
given verification key under sigma m

889
00:40:45,119 --> 00:40:47,839
which is a signature for message m

890
00:40:47,839 --> 00:40:51,680
one cannot find the signature for

891
00:40:51,680 --> 00:40:53,520
which is different from them and this is

892
00:40:53,520 --> 00:40:56,560
a one-time signature

893
00:40:56,560 --> 00:40:58,560
and uh here i

894
00:40:58,560 --> 00:41:01,040
let me recall classical very simple

895
00:41:01,040 --> 00:41:02,960
construction a one-time signature which

896
00:41:02,960 --> 00:41:04,800
is called lamport signature and

897
00:41:04,800 --> 00:41:07,359
especially i focus on single bit message

898
00:41:07,359 --> 00:41:08,240
case

899
00:41:08,240 --> 00:41:09,839
and then the construction is very simple

900
00:41:09,839 --> 00:41:12,000
so f is the warming function

901
00:41:12,000 --> 00:41:13,920
and the the signing key

902
00:41:13,920 --> 00:41:16,800
is a pair of inputs x 0 and x 1 and the

903
00:41:16,800 --> 00:41:19,280
verification key is a pair of f of x 0

904
00:41:19,280 --> 00:41:20,800
and f of x 1

905
00:41:20,800 --> 00:41:23,520
then to find your message 1 bit message

906
00:41:23,520 --> 00:41:24,560
m

907
00:41:24,560 --> 00:41:26,560
the signature is just

908
00:41:26,560 --> 00:41:29,599
either object 0 or x 1 depending on

909
00:41:29,599 --> 00:41:31,119
the message

910
00:41:31,119 --> 00:41:33,520
and then the provider divides you know

911
00:41:33,520 --> 00:41:35,359
obvious manner

912
00:41:35,359 --> 00:41:38,000
then the one time security is clear from

913
00:41:38,000 --> 00:41:40,319
one minute away so basically

914
00:41:40,319 --> 00:41:43,200
imagine that we are given f of x 0

915
00:41:43,200 --> 00:41:47,520
and f of x 1 and given either x 0 and x

916
00:41:47,520 --> 00:41:50,480
we are required to find the other image

917
00:41:50,480 --> 00:41:51,920
which is

918
00:41:51,920 --> 00:41:54,400
impossible by using either one venus one

919
00:41:54,400 --> 00:41:56,720
function

920
00:41:57,119 --> 00:41:59,760
and our contraction or one-time

921
00:41:59,760 --> 00:42:02,560
signature from pls is very similar to

922
00:42:02,560 --> 00:42:04,160
sample signature

923
00:42:04,160 --> 00:42:06,800
and the the only difference is that we

924
00:42:06,800 --> 00:42:10,400
use prs instead of volume function

925
00:42:10,400 --> 00:42:12,880
so we assume prsg

926
00:42:12,880 --> 00:42:15,520
which maps a classical string k plus the

927
00:42:15,520 --> 00:42:18,800
key k to some quantum kit k and we

928
00:42:18,800 --> 00:42:21,920
simply use uh this g

929
00:42:21,920 --> 00:42:23,920
instead of one function f and the lambda

930
00:42:23,920 --> 00:42:25,200
signature

931
00:42:25,200 --> 00:42:26,640
and then

932
00:42:26,640 --> 00:42:27,520
uh

933
00:42:27,520 --> 00:42:29,520
in in the in the lambda signature we

934
00:42:29,520 --> 00:42:31,680
have to assume that f is one way

935
00:42:31,680 --> 00:42:35,599
function so we so as analogy we have to

936
00:42:35,599 --> 00:42:38,160
assume some kind of one-way property for

937
00:42:38,160 --> 00:42:39,520
silicon state

938
00:42:39,520 --> 00:42:41,040
and

939
00:42:41,040 --> 00:42:44,560
what we need for security proof is the

940
00:42:44,560 --> 00:42:48,160
foreign bombing property of g so when we

941
00:42:48,160 --> 00:42:50,880
are given uh psi

942
00:42:50,880 --> 00:42:53,760
uh the t copies of psi k for randomly

943
00:42:53,760 --> 00:42:57,520
chosen k it is hard to find k prime such

944
00:42:57,520 --> 00:43:01,119
that psi k prime is close to sine k

945
00:43:01,119 --> 00:43:02,800
uh yeah

946
00:43:02,800 --> 00:43:05,040
yeah i mean the probability of finding

947
00:43:05,040 --> 00:43:06,480
such k prime

948
00:43:06,480 --> 00:43:07,359
is

949
00:43:07,359 --> 00:43:08,319
uh

950
00:43:08,319 --> 00:43:10,800
sorry is negligible

951
00:43:10,800 --> 00:43:14,079
and this is the one witness property

952
00:43:14,079 --> 00:43:14,960
and

953
00:43:14,960 --> 00:43:17,440
we prove that

954
00:43:17,440 --> 00:43:19,599
if we assume that

955
00:43:19,599 --> 00:43:22,079
if we assume that g is a length

956
00:43:22,079 --> 00:43:24,400
increasing through the random state then

957
00:43:24,400 --> 00:43:27,520
it is also one way and this is natural

958
00:43:27,520 --> 00:43:30,560
classical statement which says

959
00:43:30,560 --> 00:43:32,400
uh prg

960
00:43:32,400 --> 00:43:34,800
length timing length increasing prg is

961
00:43:34,800 --> 00:43:36,720
automatically one way and so this is

962
00:43:36,720 --> 00:43:37,839
just a

963
00:43:37,839 --> 00:43:39,760
natural energy in the content setting

964
00:43:39,760 --> 00:43:40,960
and so

965
00:43:40,960 --> 00:43:43,839
once we obtain the one witness then this

966
00:43:43,839 --> 00:43:45,839
surprises for proving one time security

967
00:43:45,839 --> 00:43:49,200
is signature scheme

968
00:43:49,200 --> 00:43:51,760
and here are several remarks about our

969
00:43:51,760 --> 00:43:53,119
random signatures

970
00:43:53,119 --> 00:43:55,440
and first i remember that the

971
00:43:55,440 --> 00:43:58,560
verification key of our

972
00:43:58,560 --> 00:44:00,960
protocol is content and this is not very

973
00:44:00,960 --> 00:44:03,599
useful in practice but

974
00:44:03,599 --> 00:44:05,839
let me remark that this is actually

975
00:44:05,839 --> 00:44:08,400
needed for prs bit construction because

976
00:44:08,400 --> 00:44:09,599
otherwise

977
00:44:09,599 --> 00:44:13,520
if i mean if vk is classical then we can

978
00:44:13,520 --> 00:44:18,720
break the protocol by using qma oracle

979
00:44:18,720 --> 00:44:20,400
where we configure the various

980
00:44:20,400 --> 00:44:23,440
signatures of which therefore before

981
00:44:23,440 --> 00:44:24,640
contracting

982
00:44:24,640 --> 00:44:25,520
uh

983
00:44:25,520 --> 00:44:28,000
the quantum thinking here from prs we

984
00:44:28,000 --> 00:44:30,720
have to assume that we give content are

985
00:44:30,720 --> 00:44:32,480
lived in the

986
00:44:32,480 --> 00:44:34,000
relativized world

987
00:44:34,000 --> 00:44:35,680
and

988
00:44:35,680 --> 00:44:38,000
and the next remark is that the scheme

989
00:44:38,000 --> 00:44:40,319
is secure even if the adversaries is

990
00:44:40,319 --> 00:44:42,560
absolutely copy the bk and this is

991
00:44:42,560 --> 00:44:45,280
simply because we assume many copy

992
00:44:45,280 --> 00:44:47,920
security for prs

993
00:44:47,920 --> 00:44:49,680
and uh so

994
00:44:49,680 --> 00:44:50,720
that

995
00:44:50,720 --> 00:44:53,359
this means that we can imagine authority

996
00:44:53,359 --> 00:44:55,920
that distributes uh quantum kit vk to

997
00:44:55,920 --> 00:44:57,599
everyone

998
00:44:57,599 --> 00:45:00,960
and i the final remark is that no there

999
00:45:00,960 --> 00:45:03,520
is actually no protocol or one one-time

1000
00:45:03,520 --> 00:45:04,640
signature

1001
00:45:04,640 --> 00:45:07,119
with content verification key

1002
00:45:07,119 --> 00:45:10,960
but with bounded number of copies bk

1003
00:45:10,960 --> 00:45:13,520
and the this contraction the actual

1004
00:45:13,520 --> 00:45:16,079
information is really secure but the the

1005
00:45:16,079 --> 00:45:18,560
difference is that ours allow bk to be

1006
00:45:18,560 --> 00:45:20,400
unbounded in any

1007
00:45:20,400 --> 00:45:22,000
unbothered many copies of vk can be

1008
00:45:22,000 --> 00:45:23,839
given to the other boss whereas they

1009
00:45:23,839 --> 00:45:25,119
only

1010
00:45:25,119 --> 00:45:29,200
achieve bounded key security

1011
00:45:29,920 --> 00:45:33,760
and let me also explain some

1012
00:45:33,760 --> 00:45:36,079
extension possible extensions about the

1013
00:45:36,079 --> 00:45:38,400
contraction and first

1014
00:45:38,400 --> 00:45:41,119
uh though i explained one big message

1015
00:45:41,119 --> 00:45:43,119
case but the multi-bid messages

1016
00:45:43,119 --> 00:45:45,599
contraction is trivial by just currently

1017
00:45:45,599 --> 00:45:48,319
running the protocol many times

1018
00:45:48,319 --> 00:45:49,839
and

1019
00:45:49,839 --> 00:45:51,119
also

1020
00:45:51,119 --> 00:45:52,000
though

1021
00:45:52,000 --> 00:45:54,880
i only improved one time security but

1022
00:45:54,880 --> 00:45:58,240
founded many times secure signature with

1023
00:45:58,240 --> 00:46:00,400
stateful signature generation is also

1024
00:46:00,400 --> 00:46:03,839
trivial by purification you go simply we

1025
00:46:03,839 --> 00:46:05,520
can prepare many

1026
00:46:05,520 --> 00:46:07,680
boundary many key pairs and use them one

1027
00:46:07,680 --> 00:46:10,000
by one however

1028
00:46:10,000 --> 00:46:12,160
we don't know how to achieve unbounded

1029
00:46:12,160 --> 00:46:14,720
time security or even bonded main time

1030
00:46:14,720 --> 00:46:16,640
security with stateless signature

1031
00:46:16,640 --> 00:46:18,160
degeneration

1032
00:46:18,160 --> 00:46:20,400
and in the classical setting it is known

1033
00:46:20,400 --> 00:46:22,480
that one main function applies for

1034
00:46:22,480 --> 00:46:25,520
constructing unbounded many times secure

1035
00:46:25,520 --> 00:46:27,760
signatures and one of the main

1036
00:46:27,760 --> 00:46:30,800
techniques for that contraction is that

1037
00:46:30,800 --> 00:46:34,480
we generate a signature or verification

1038
00:46:34,480 --> 00:46:35,599
key of

1039
00:46:35,599 --> 00:46:36,720
one time

1040
00:46:36,720 --> 00:46:39,440
uh signature by using another instance

1041
00:46:39,440 --> 00:46:41,760
on the signature however in our case

1042
00:46:41,760 --> 00:46:44,240
verification key content and the

1043
00:46:44,240 --> 00:46:47,599
signature for quantum state is not

1044
00:46:47,599 --> 00:46:49,520
we don't know how to do that so

1045
00:46:49,520 --> 00:46:52,720
we cannot simply use that technique and

1046
00:46:52,720 --> 00:46:55,200
this is why we cannot achieve

1047
00:46:55,200 --> 00:46:57,200
one of the reasons why we cannot achieve

1048
00:46:57,200 --> 00:47:00,800
unboundedly many times security

1049
00:47:00,800 --> 00:47:03,200
and finally i let me mention concurrent

1050
00:47:03,200 --> 00:47:05,680
work by ana chen yen

1051
00:47:05,680 --> 00:47:06,640
uh

1052
00:47:06,640 --> 00:47:09,200
which also started cryptography from prs

1053
00:47:09,200 --> 00:47:11,520
and it was presented in the previous

1054
00:47:11,520 --> 00:47:13,599
session in the other room today

1055
00:47:13,599 --> 00:47:15,520
and they contracted

1056
00:47:15,520 --> 00:47:18,400
uh commitment protocol from not

1057
00:47:18,400 --> 00:47:20,880
necessarily increasing prf and the

1058
00:47:20,880 --> 00:47:22,880
crucial difference is that

1059
00:47:22,880 --> 00:47:26,319
they do not assume a length increasing

1060
00:47:26,319 --> 00:47:28,880
property unlike others

1061
00:47:28,880 --> 00:47:31,119
and also they contracted

1062
00:47:31,119 --> 00:47:33,280
what it calls random random path and

1063
00:47:33,280 --> 00:47:35,520
also they define construct what is

1064
00:47:35,520 --> 00:47:39,520
called prs-like states on the other hand

1065
00:47:39,520 --> 00:47:40,950
the contraction changes

1066
00:47:40,950 --> 00:47:44,009
[Music]

1067
00:47:45,040 --> 00:47:46,720
and this is a summary

1068
00:47:46,720 --> 00:47:47,520
so

1069
00:47:47,520 --> 00:47:49,119
we show that one period implies

1070
00:47:49,119 --> 00:47:50,880
commitments and

1071
00:47:50,880 --> 00:47:52,640
many copyrights implies one-time

1072
00:47:52,640 --> 00:47:54,480
signatures with quantum verification

1073
00:47:54,480 --> 00:47:57,200
keys and they can exist in the world of

1074
00:47:57,200 --> 00:48:01,920
pqp qma where functions do not exist uh

1075
00:48:01,920 --> 00:48:04,559
and yeah finally let me mention several

1076
00:48:04,559 --> 00:48:07,040
open problems the first is

1077
00:48:07,040 --> 00:48:07,920
uh

1078
00:48:07,920 --> 00:48:09,920
to construct many times

1079
00:48:09,920 --> 00:48:12,160
signature from prf

1080
00:48:12,160 --> 00:48:14,079
and the second is

1081
00:48:14,079 --> 00:48:16,240
crosstracking prs from one risk

1082
00:48:16,240 --> 00:48:18,319
generated so as i mentioned in the

1083
00:48:18,319 --> 00:48:22,240
contraction of one time signatures i we

1084
00:48:22,240 --> 00:48:26,160
showed that pls is automatically one way

1085
00:48:26,160 --> 00:48:28,240
so it satisfies one minute however we

1086
00:48:28,240 --> 00:48:30,640
don't know how to the other direction in

1087
00:48:30,640 --> 00:48:32,800
the classical setting it is known that

1088
00:48:32,800 --> 00:48:34,960
prg can be constructed from environment

1089
00:48:34,960 --> 00:48:37,760
function so it is interesting open

1090
00:48:37,760 --> 00:48:40,400
problem to do a similar

1091
00:48:40,400 --> 00:48:42,559
contraction in the constant setting and

1092
00:48:42,559 --> 00:48:44,000
the final

1093
00:48:44,000 --> 00:48:45,440
of environment is

1094
00:48:45,440 --> 00:48:47,680
cryptography from quantum commitment so

1095
00:48:47,680 --> 00:48:49,040
we show that

1096
00:48:49,040 --> 00:48:52,319
commitment can be contracted from prs so

1097
00:48:52,319 --> 00:48:54,400
from this view the quantum commitments

1098
00:48:54,400 --> 00:48:56,800
is a weaker assumption than the existing

1099
00:48:56,800 --> 00:48:58,880
prs so

1100
00:48:58,880 --> 00:49:01,040
it is interesting to construct other

1101
00:49:01,040 --> 00:49:03,280
crypto cryptographic examples from

1102
00:49:03,280 --> 00:49:05,520
starting from quantum commitment and

1103
00:49:05,520 --> 00:49:06,880
more generally

1104
00:49:06,880 --> 00:49:10,079
it is a very interesting open

1105
00:49:10,079 --> 00:49:11,280
problem or

1106
00:49:11,280 --> 00:49:13,440
interesting direction to study the

1107
00:49:13,440 --> 00:49:17,520
relationship among a different kind of

1108
00:49:17,520 --> 00:49:19,440
quantum cryptocurrency primitive

1109
00:49:19,440 --> 00:49:21,920
and yeah so this is end of my talk thank

1110
00:49:21,920 --> 00:49:25,240
you very much

1111
00:49:36,240 --> 00:49:38,400
mic is not working

1112
00:49:38,400 --> 00:49:41,720
any questions

1113
00:50:06,559 --> 00:50:10,160
yeah so what i think is that

1114
00:50:10,839 --> 00:50:14,240
any signature scheme with classical vk

1115
00:50:14,240 --> 00:50:17,359
can be broken by using qma oracle which

1116
00:50:17,359 --> 00:50:19,040
can solve any

1117
00:50:19,040 --> 00:50:21,839
problem in qma and so this is back

1118
00:50:21,839 --> 00:50:22,720
by the

1119
00:50:22,720 --> 00:50:24,960
work by basic

1120
00:50:24,960 --> 00:50:26,640
prs is

1121
00:50:26,640 --> 00:50:30,240
there's a separation from uh the the prs

1122
00:50:30,240 --> 00:50:32,720
and kma hardness so it is unlikely that

1123
00:50:32,720 --> 00:50:34,800
we can contract such a classic

1124
00:50:34,800 --> 00:50:39,240
verification key signature from prs

1125
00:50:50,800 --> 00:50:53,960
do you think

1126
00:50:54,640 --> 00:50:58,079
actually i think so that depends on the

1127
00:50:58,079 --> 00:51:00,800
situation which you can consider so for

1128
00:51:00,800 --> 00:51:01,839
example

1129
00:51:01,839 --> 00:51:03,680
it depends on if you allow the key

1130
00:51:03,680 --> 00:51:05,680
generation to become demographical and

1131
00:51:05,680 --> 00:51:07,359
signature duration to become democratic

1132
00:51:07,359 --> 00:51:09,359
and there are many settings to configure

1133
00:51:09,359 --> 00:51:12,160
and in some of those settings i think

1134
00:51:12,160 --> 00:51:14,319
for example if key generation is

1135
00:51:14,319 --> 00:51:17,040
classical then it trivially implies one

1136
00:51:17,040 --> 00:51:19,599
function oh and uh but yeah it depends

1137
00:51:19,599 --> 00:51:20,480
on the

1138
00:51:20,480 --> 00:51:23,480
fitting

1139
00:51:30,800 --> 00:51:34,240
i see so i believe in some setting uh

1140
00:51:34,240 --> 00:51:35,359
signature

1141
00:51:35,359 --> 00:51:37,200
doesn't immediately imply one function

1142
00:51:37,200 --> 00:51:39,359
so there might be possibilities that you

1143
00:51:39,359 --> 00:51:42,319
can construct classical verification key

1144
00:51:42,319 --> 00:51:43,520
uh

1145
00:51:43,520 --> 00:51:45,440
signature from i mean the bigger

1146
00:51:45,440 --> 00:51:48,319
assumptions in one

1147
00:51:48,839 --> 00:51:53,040
function let's thank the speaker again

1148
00:51:56,960 --> 00:52:01,000
so the next stock is an online

1149
00:52:23,440 --> 00:52:26,240
do you want me to share my screen

1150
00:52:26,240 --> 00:52:29,240
yes

1151
00:52:36,480 --> 00:52:39,480
okay

1152
00:52:49,920 --> 00:52:51,520
we didn't hear an introduction should he

1153
00:52:51,520 --> 00:52:54,000
go ahead

1154
00:52:54,880 --> 00:52:58,599
the next talk is

1155
00:53:04,319 --> 00:53:05,440
go ahead

1156
00:53:05,440 --> 00:53:06,720
okay

1157
00:53:06,720 --> 00:53:08,880
um okay so this talk i want to tell you

1158
00:53:08,880 --> 00:53:12,240
about semi-quantum token signatures

1159
00:53:12,240 --> 00:53:14,960
and before we talk about semi-quantum

1160
00:53:14,960 --> 00:53:17,440
signatures and semi-quantum tokens or

1161
00:53:17,440 --> 00:53:18,880
talking as signatures i want to talk

1162
00:53:18,880 --> 00:53:20,960
about just wanting tokens

1163
00:53:20,960 --> 00:53:24,240
so informally what are quantum tokens

1164
00:53:24,240 --> 00:53:26,480
these are quantum state they satisfy two

1165
00:53:26,480 --> 00:53:29,200
properties one is public verification

1166
00:53:29,200 --> 00:53:31,680
and the other is unclonability

1167
00:53:31,680 --> 00:53:33,200
and um

1168
00:53:33,200 --> 00:53:35,200
this is the baseline sometimes they have

1169
00:53:35,200 --> 00:53:37,599
more properties and now they are

1170
00:53:37,599 --> 00:53:39,440
today they are a central object in

1171
00:53:39,440 --> 00:53:41,040
quantum cryptography

1172
00:53:41,040 --> 00:53:43,520
so a bit more formally what it means

1173
00:53:43,520 --> 00:53:46,319
what is a quantum token scheme

1174
00:53:46,319 --> 00:53:48,160
given by two efficient quantum

1175
00:53:48,160 --> 00:53:50,800
polynomial time algorithms the first is

1176
00:53:50,800 --> 00:53:53,520
the generation the generation samples

1177
00:53:53,520 --> 00:53:56,640
the classical public key pk together

1178
00:53:56,640 --> 00:53:58,480
with the quantum state psi which we're

1179
00:53:58,480 --> 00:54:00,000
going to think of as the quantum token

1180
00:54:00,000 --> 00:54:01,200
itself

1181
00:54:01,200 --> 00:54:03,040
um and the second algorithm is

1182
00:54:03,040 --> 00:54:04,400
verification

1183
00:54:04,400 --> 00:54:07,040
and the verification is going to

1184
00:54:07,040 --> 00:54:09,520
get a public key and together with the

1185
00:54:09,520 --> 00:54:12,079
trade state to check and going to output

1186
00:54:12,079 --> 00:54:14,480
a bit of either rejection or acceptance

1187
00:54:14,480 --> 00:54:16,640
for this quantum state that needs to be

1188
00:54:16,640 --> 00:54:18,480
checked if it's legal

1189
00:54:18,480 --> 00:54:21,359
okay so how exactly does quantum token

1190
00:54:21,359 --> 00:54:22,960
schemes come into play you can think

1191
00:54:22,960 --> 00:54:25,119
about a very abstract

1192
00:54:25,119 --> 00:54:27,280
system between one sender and many

1193
00:54:27,280 --> 00:54:28,640
receivers all of them have quantum

1194
00:54:28,640 --> 00:54:30,720
computers everything is blue by the way

1195
00:54:30,720 --> 00:54:32,480
it's going to be quantum entities and

1196
00:54:32,480 --> 00:54:34,000
everything

1197
00:54:34,000 --> 00:54:35,440
orange is going to be classical

1198
00:54:35,440 --> 00:54:38,079
information so the sender is going to

1199
00:54:38,079 --> 00:54:40,400
generate using the generation algorithm

1200
00:54:40,400 --> 00:54:41,839
is going to sample this public key

1201
00:54:41,839 --> 00:54:43,520
together with the token is going to

1202
00:54:43,520 --> 00:54:45,920
distribute this classical public key and

1203
00:54:45,920 --> 00:54:47,520
then it's going to choose one of the

1204
00:54:47,520 --> 00:54:50,799
receiver to receive this single copy

1205
00:54:50,799 --> 00:54:53,359
of this uh quantum talk

1206
00:54:53,359 --> 00:54:55,200
could you pause for us

1207
00:54:55,200 --> 00:54:57,359
please could you pause army we're having

1208
00:54:57,359 --> 00:55:00,240
some technical evidence issues yeah sure

1209
00:55:00,240 --> 00:55:02,400
oh you have to start over

1210
00:55:02,400 --> 00:55:04,880
and don't start yet um go to the first

1211
00:55:04,880 --> 00:55:06,799
line

1212
00:55:06,799 --> 00:55:08,960
sure

1213
00:55:08,960 --> 00:55:11,760
just a moment

1214
00:55:12,319 --> 00:55:15,520
it's good i'm having a walmart

1215
00:55:15,520 --> 00:55:17,359
okay

1216
00:55:17,359 --> 00:55:18,839
we lost your screen

1217
00:55:18,839 --> 00:55:22,400
share i see

1218
00:55:23,440 --> 00:55:26,400
let's try again

1219
00:55:26,400 --> 00:55:29,359
but don't stop yet

1220
00:55:29,359 --> 00:55:31,920
so tell me when to share it

1221
00:55:31,920 --> 00:55:34,920
yes

1222
00:55:38,079 --> 00:55:39,450
can you share the screen

1223
00:55:39,450 --> 00:55:41,760
[Music]

1224
00:55:41,760 --> 00:55:44,480
sorry about that

1225
00:55:45,599 --> 00:55:48,160
tell me if you can see it just

1226
00:55:48,160 --> 00:55:49,520
[Music]

1227
00:55:49,520 --> 00:55:51,119
how about now

1228
00:55:51,119 --> 00:55:53,520
yes finally we recall the technical

1229
00:55:53,520 --> 00:55:56,319
difficulties uh let's um

1230
00:55:56,319 --> 00:55:58,240
welcome again omri uh he's going to talk

1231
00:55:58,240 --> 00:56:00,319
about semiconductor features

1232
00:56:00,319 --> 00:56:02,799
the floor is your sorry

1233
00:56:02,799 --> 00:56:05,920
uh thanks pavanjam so um today i would

1234
00:56:05,920 --> 00:56:07,680
like to talk about semi-quantum tokens

1235
00:56:07,680 --> 00:56:11,200
signatures before we talk about um these

1236
00:56:11,200 --> 00:56:12,960
specific objects let's talk about the

1237
00:56:12,960 --> 00:56:14,559
most like the baseline of this talk

1238
00:56:14,559 --> 00:56:16,160
which is quantum token

1239
00:56:16,160 --> 00:56:18,400
so quantum tokens are quantum states

1240
00:56:18,400 --> 00:56:20,960
they have two properties they should be

1241
00:56:20,960 --> 00:56:23,520
publicly verifiable and they should also

1242
00:56:23,520 --> 00:56:25,440
be unclonable

1243
00:56:25,440 --> 00:56:26,319
and

1244
00:56:26,319 --> 00:56:28,559
sometimes i said this is the best lines

1245
00:56:28,559 --> 00:56:29,839
most of the time they have more

1246
00:56:29,839 --> 00:56:32,079
properties and today this is like this

1247
00:56:32,079 --> 00:56:33,920
abstract object of quantum token this is

1248
00:56:33,920 --> 00:56:36,880
a central object in quantum cryptography

1249
00:56:36,880 --> 00:56:39,839
so a bit more formally a quantum token

1250
00:56:39,839 --> 00:56:42,240
skill consists of two efficient quantum

1251
00:56:42,240 --> 00:56:44,400
polynomial time algorithm

1252
00:56:44,400 --> 00:56:46,960
the first is the generation algorithm

1253
00:56:46,960 --> 00:56:49,359
it um samples the classical public key

1254
00:56:49,359 --> 00:56:52,240
pk together with the quantum state site

1255
00:56:52,240 --> 00:56:54,079
decay which is which we think of as the

1256
00:56:54,079 --> 00:56:55,760
quantum token itself

1257
00:56:55,760 --> 00:56:57,520
this is the first algorithm the second

1258
00:56:57,520 --> 00:56:59,200
one is verification it takes the public

1259
00:56:59,200 --> 00:57:01,520
this classical public key and the state

1260
00:57:01,520 --> 00:57:03,839
to check its legality and then it

1261
00:57:03,839 --> 00:57:06,640
outputs a bit either rejects the state

1262
00:57:06,640 --> 00:57:09,760
or accept this as a legal state

1263
00:57:09,760 --> 00:57:12,720
um so exactly how these um

1264
00:57:12,720 --> 00:57:14,559
these scheme quantum token systems come

1265
00:57:14,559 --> 00:57:16,880
into play in systems you can think about

1266
00:57:16,880 --> 00:57:18,240
a very like

1267
00:57:18,240 --> 00:57:20,720
clean abstract system between one sender

1268
00:57:20,720 --> 00:57:22,400
and many receivers

1269
00:57:22,400 --> 00:57:24,400
all of them have quantum computers and

1270
00:57:24,400 --> 00:57:26,400
the slender can generate using the

1271
00:57:26,400 --> 00:57:28,559
generation algorithm generator public

1272
00:57:28,559 --> 00:57:30,319
key and a token

1273
00:57:30,319 --> 00:57:32,160
can take this classical public key

1274
00:57:32,160 --> 00:57:34,240
distributed in the system and then

1275
00:57:34,240 --> 00:57:36,720
choose one of the receivers to get this

1276
00:57:36,720 --> 00:57:40,640
single copy of the quantum token

1277
00:57:40,640 --> 00:57:43,200
uh public verification is going to say

1278
00:57:43,200 --> 00:57:45,359
that this token can be moved around the

1279
00:57:45,359 --> 00:57:48,480
system and then any receiver between the

1280
00:57:48,480 --> 00:57:49,920
all of the receiver any receivable of

1281
00:57:49,920 --> 00:57:52,640
this token can verify this token it can

1282
00:57:52,640 --> 00:57:54,880
run the second algorithm

1283
00:57:54,880 --> 00:57:57,599
and if this state is verified if the

1284
00:57:57,599 --> 00:57:59,920
answer is one it's going to output a bit

1285
00:57:59,920 --> 00:58:01,920
the classical bit together with the

1286
00:58:01,920 --> 00:58:04,079
quantum state so if the answer is one

1287
00:58:04,079 --> 00:58:06,240
the state should be preserved and it

1288
00:58:06,240 --> 00:58:08,880
could can be reused and if the answer is

1289
00:58:08,880 --> 00:58:10,720
zero we have no guarantee you know what

1290
00:58:10,720 --> 00:58:13,680
happens with this uh mistake

1291
00:58:13,680 --> 00:58:16,319
um no cloning which we can think of as

1292
00:58:16,319 --> 00:58:18,000
security is going to say that if the

1293
00:58:18,000 --> 00:58:19,599
sender executes by the book and

1294
00:58:19,599 --> 00:58:21,280
generates this token

1295
00:58:21,280 --> 00:58:23,599
according to the algorithm again then

1296
00:58:23,599 --> 00:58:26,240
sends this token to any quantum

1297
00:58:26,240 --> 00:58:29,040
polynomial time malicious adversary

1298
00:58:29,040 --> 00:58:31,040
and the adversary rights to get one

1299
00:58:31,040 --> 00:58:33,119
copying out to two copies

1300
00:58:33,119 --> 00:58:35,440
with at the most negligible probability

1301
00:58:35,440 --> 00:58:37,520
both of these copies are going to be

1302
00:58:37,520 --> 00:58:40,000
accepted

1303
00:58:40,160 --> 00:58:42,799
um so quantum tokens started as quantum

1304
00:58:42,799 --> 00:58:44,799
money this was the famous

1305
00:58:44,799 --> 00:58:47,599
work of wizner more than 50 years ago

1306
00:58:47,599 --> 00:58:50,160
they massively evolved also wizner's

1307
00:58:50,160 --> 00:58:51,760
original scheme it wasn't publicly

1308
00:58:51,760 --> 00:58:52,960
verifiable

1309
00:58:52,960 --> 00:58:56,079
massively evolved also techniques wise

1310
00:58:56,079 --> 00:58:58,160
and now we have this object called

1311
00:58:58,160 --> 00:59:00,480
quantum tokens which as i said earlier

1312
00:59:00,480 --> 00:59:02,160
is central to the field of quantum

1313
00:59:02,160 --> 00:59:04,559
crypto

1314
00:59:04,559 --> 00:59:06,000
the only

1315
00:59:06,000 --> 00:59:08,240
concrete technique that we have for

1316
00:59:08,240 --> 00:59:10,559
implementing these these quantum tokens

1317
00:59:10,559 --> 00:59:12,640
is based on subspace states

1318
00:59:12,640 --> 00:59:14,240
so these are the only quantum states

1319
00:59:14,240 --> 00:59:15,680
that we're going to explain in a bit

1320
00:59:15,680 --> 00:59:17,440
what they are the only quantum states

1321
00:59:17,440 --> 00:59:19,119
that we know are both publicly

1322
00:59:19,119 --> 00:59:21,920
refurbished and chronicled but they seem

1323
00:59:21,920 --> 00:59:24,400
to have even more stronger properties so

1324
00:59:24,400 --> 00:59:27,040
let's start with them so subspace states

1325
00:59:27,040 --> 00:59:29,839
um was fair well first introduced like

1326
00:59:29,839 --> 00:59:31,760
to quantum cryptography balance on

1327
00:59:31,760 --> 00:59:34,160
cristiano and what is the subspace state

1328
00:59:34,160 --> 00:59:36,799
for a state for a subspace s a subspace

1329
00:59:36,799 --> 00:59:40,000
of n b strings we define the subspace

1330
00:59:40,000 --> 00:59:43,040
state of s of just the state of s as the

1331
00:59:43,040 --> 00:59:46,400
uniform superposition over the subspace

1332
00:59:46,400 --> 00:59:49,680
okay so and how do we use these states

1333
00:59:49,680 --> 00:59:51,760
to create to to implement the quantum

1334
00:59:51,760 --> 00:59:53,440
token scheme this is a combination of

1335
00:59:53,440 --> 00:59:56,079
the work of arms on a cristiano with the

1336
00:59:56,079 --> 00:59:57,920
later work of zandry

1337
00:59:57,920 --> 01:00:00,799
and it says that if we assume i o in

1338
01:00:00,799 --> 01:00:02,480
distinguishability of fuscato for

1339
01:00:02,480 --> 01:00:04,799
classical circuits but secure against

1340
01:00:04,799 --> 01:00:06,480
quantum distinguishers

1341
01:00:06,480 --> 01:00:09,200
um we can generate a token so the

1342
01:00:09,200 --> 01:00:11,040
quantum path the token itself is just

1343
01:00:11,040 --> 01:00:13,280
going to be the subspace state

1344
01:00:13,280 --> 01:00:15,040
and the public here is going to be two

1345
01:00:15,040 --> 01:00:17,440
programs two classical programs the

1346
01:00:17,440 --> 01:00:19,839
first one is an obfuscation of a

1347
01:00:19,839 --> 01:00:21,680
membership circuit

1348
01:00:21,680 --> 01:00:23,280
for the subspace s

1349
01:00:23,280 --> 01:00:24,640
and the second one is again an

1350
01:00:24,640 --> 01:00:26,079
association

1351
01:00:26,079 --> 01:00:28,640
for the membership circuit for the uh

1352
01:00:28,640 --> 01:00:31,920
subspace the dual subspace aspect

1353
01:00:31,920 --> 01:00:34,240
and there is also a very elegant and

1354
01:00:34,240 --> 01:00:37,040
efficient way to verify these states

1355
01:00:37,040 --> 01:00:38,960
using the um

1356
01:00:38,960 --> 01:00:40,240
transform

1357
01:00:40,240 --> 01:00:42,240
um but it's less relevant for the sake

1358
01:00:42,240 --> 01:00:44,079
of this talk all we need to know is that

1359
01:00:44,079 --> 01:00:46,000
given these two classical circuits a

1360
01:00:46,000 --> 01:00:49,440
quantum computer can verify this state

1361
01:00:49,440 --> 01:00:51,280
and um

1362
01:00:51,280 --> 01:00:54,240
in terms of security we know that if a

1363
01:00:54,240 --> 01:00:56,480
center gives a quantum polynomial time

1364
01:00:56,480 --> 01:00:59,040
adversary these two obfuscations and the

1365
01:00:59,040 --> 01:01:00,480
subspace state is going to be

1366
01:01:00,480 --> 01:01:02,160
computationally impossible like to

1367
01:01:02,160 --> 01:01:04,640
output two copies such that again both

1368
01:01:04,640 --> 01:01:05,520
of them are going to the best

1369
01:01:05,520 --> 01:01:07,440
verification with a non-negligible

1370
01:01:07,440 --> 01:01:09,200
probability

1371
01:01:09,200 --> 01:01:12,400
okay so subspace states are a great

1372
01:01:12,400 --> 01:01:15,119
implementation for quantum tokens and a

1373
01:01:15,119 --> 01:01:17,119
slight variation of them is corset

1374
01:01:17,119 --> 01:01:20,240
states so costed states are um this name

1375
01:01:20,240 --> 01:01:22,480
was given by a later work by colo angelo

1376
01:01:22,480 --> 01:01:24,319
leo leon

1377
01:01:24,319 --> 01:01:26,559
and a corset state considered not only a

1378
01:01:26,559 --> 01:01:29,680
substrate but also two strings x and z

1379
01:01:29,680 --> 01:01:31,359
two n bit strings

1380
01:01:31,359 --> 01:01:35,119
and the coset state of f x and z is just

1381
01:01:35,119 --> 01:01:38,160
the quantum one-time pad of the state of

1382
01:01:38,160 --> 01:01:38,960
s

1383
01:01:38,960 --> 01:01:40,620
this is exactly what's written here in

1384
01:01:40,620 --> 01:01:41,839
[Music]

1385
01:01:41,839 --> 01:01:44,640
black and green

1386
01:01:44,799 --> 01:01:46,000
um

1387
01:01:46,000 --> 01:01:47,920
the good thing about corset state is

1388
01:01:47,920 --> 01:01:50,079
that first first we need to say they can

1389
01:01:50,079 --> 01:01:52,559
function exactly like subspace so we

1390
01:01:52,559 --> 01:01:54,400
know that can they can also be

1391
01:01:54,400 --> 01:01:56,720
implemented as the quantum tokens just

1392
01:01:56,720 --> 01:01:59,760
making minor changes to the programs and

1393
01:01:59,760 --> 01:02:00,480
the

1394
01:02:00,480 --> 01:02:02,000
the state becomes across its state

1395
01:02:02,000 --> 01:02:03,839
rather than subsistence and the

1396
01:02:03,839 --> 01:02:05,760
programs the

1397
01:02:05,760 --> 01:02:07,920
become corset membership checks rather

1398
01:02:07,920 --> 01:02:10,640
than subspace membership checks

1399
01:02:10,640 --> 01:02:12,960
but it has another property of direct

1400
01:02:12,960 --> 01:02:14,559
product hardness

1401
01:02:14,559 --> 01:02:17,280
uh which says that if we send these two

1402
01:02:17,280 --> 01:02:19,599
obfuscations and the cost of state to an

1403
01:02:19,599 --> 01:02:22,240
efficient quantum adversary

1404
01:02:22,240 --> 01:02:24,480
it cannot even with at most a negligible

1405
01:02:24,480 --> 01:02:26,240
probability is going to succeed in

1406
01:02:26,240 --> 01:02:28,799
outputting two elements

1407
01:02:28,799 --> 01:02:31,520
one from the primal concept

1408
01:02:31,520 --> 01:02:34,319
and one from the dual

1409
01:02:34,319 --> 01:02:36,480
so this even like

1410
01:02:36,480 --> 01:02:39,119
which we know is at least as easy

1411
01:02:39,119 --> 01:02:41,520
as outputting two two copies of the

1412
01:02:41,520 --> 01:02:43,359
quantum state maybe

1413
01:02:43,359 --> 01:02:44,160
um

1414
01:02:44,160 --> 01:02:46,480
but it cannot even do this with more

1415
01:02:46,480 --> 01:02:48,799
than negligible probability

1416
01:02:48,799 --> 01:02:51,119
and this was proved by a colored angelo

1417
01:02:51,119 --> 01:02:53,039
leo leonsander

1418
01:02:53,039 --> 01:02:54,960
so

1419
01:02:54,960 --> 01:02:57,680
why do we care about this this like

1420
01:02:57,680 --> 01:02:59,920
direct product harness property together

1421
01:02:59,920 --> 01:03:02,319
with the natural properties of corset

1422
01:03:02,319 --> 01:03:04,880
state it gives us a very nice way to

1423
01:03:04,880 --> 01:03:06,960
look at them as signature tokens

1424
01:03:06,960 --> 01:03:10,000
because they have the following two

1425
01:03:10,000 --> 01:03:11,280
properties

1426
01:03:11,280 --> 01:03:13,359
the first one because we call targeted

1427
01:03:13,359 --> 01:03:14,880
sampling

1428
01:03:14,880 --> 01:03:18,240
so it says that for every corset state

1429
01:03:18,240 --> 01:03:21,039
we can define two sets

1430
01:03:21,039 --> 01:03:23,119
and given this costed state we have an

1431
01:03:23,119 --> 01:03:25,760
efficient way to we can choose one of

1432
01:03:25,760 --> 01:03:26,480
these

1433
01:03:26,480 --> 01:03:28,640
one of these sets and sample from one of

1434
01:03:28,640 --> 01:03:30,400
them like a classical element from one

1435
01:03:30,400 --> 01:03:31,760
of these sets

1436
01:03:31,760 --> 01:03:34,400
and for the case of corset states we

1437
01:03:34,400 --> 01:03:36,480
know one technique that we define the

1438
01:03:36,480 --> 01:03:39,440
first set as the primal coset which is

1439
01:03:39,440 --> 01:03:41,440
big s plus x

1440
01:03:41,440 --> 01:03:43,920
the second set is going to be the dual

1441
01:03:43,920 --> 01:03:46,640
coset which is s spell

1442
01:03:46,640 --> 01:03:48,240
plus z

1443
01:03:48,240 --> 01:03:51,359
and if we want to sample from the primal

1444
01:03:51,359 --> 01:03:53,359
cost we just measure this state in the

1445
01:03:53,359 --> 01:03:55,440
computational basis

1446
01:03:55,440 --> 01:03:58,240
and get s0 from the primal concept and

1447
01:03:58,240 --> 01:04:00,480
if we want to sample from the second set

1448
01:04:00,480 --> 01:04:03,200
which is color corset we sample this cos

1449
01:04:03,200 --> 01:04:05,359
that we we measure this costed state in

1450
01:04:05,359 --> 01:04:07,920
the hadamard basis

1451
01:04:07,920 --> 01:04:09,599
the second property

1452
01:04:09,599 --> 01:04:11,599
is one time sampling it's going to say

1453
01:04:11,599 --> 01:04:13,119
that we cannot

1454
01:04:13,119 --> 01:04:15,440
if we have one copy the first property

1455
01:04:15,440 --> 01:04:17,520
says he will one copy we can choose one

1456
01:04:17,520 --> 01:04:19,520
of these sets and sample from them the

1457
01:04:19,520 --> 01:04:21,839
second says that we never can get one

1458
01:04:21,839 --> 01:04:25,520
copy and sample from both of them

1459
01:04:25,520 --> 01:04:28,000
now this gives this strengthening of

1460
01:04:28,000 --> 01:04:30,559
standard quantum tokens because

1461
01:04:30,559 --> 01:04:33,119
what is the signature token scheme

1462
01:04:33,119 --> 01:04:34,799
rather than just a standard quantum

1463
01:04:34,799 --> 01:04:37,200
token scheme it has the same algorithm

1464
01:04:37,200 --> 01:04:40,640
small before generation of public key

1465
01:04:40,640 --> 01:04:43,280
and the state and the verification

1466
01:04:43,280 --> 01:04:45,839
but it has two more algorithms

1467
01:04:45,839 --> 01:04:47,680
one is the quantum algorithm that gets

1468
01:04:47,680 --> 01:04:50,799
this token in the public key and a bit

1469
01:04:50,799 --> 01:04:53,839
and effectively sign on this bit zero

1470
01:04:53,839 --> 01:04:54,720
one

1471
01:04:54,720 --> 01:04:56,240
and the second is just the classical

1472
01:04:56,240 --> 01:04:58,720
algorithm that verifies the signature

1473
01:04:58,720 --> 01:05:01,039
just the public key and the signature

1474
01:05:01,039 --> 01:05:03,200
and the beaten outputs rejection or

1475
01:05:03,200 --> 01:05:04,880
acceptance

1476
01:05:04,880 --> 01:05:08,799
so um and again to sign on zero we just

1477
01:05:08,799 --> 01:05:10,079
take this state and measure in the

1478
01:05:10,079 --> 01:05:12,240
computational basis we get an element in

1479
01:05:12,240 --> 01:05:15,039
s plus x and if we want to sign on one

1480
01:05:15,039 --> 01:05:17,119
we do a hard amount measurement and gets

1481
01:05:17,119 --> 01:05:19,839
a vector like this

1482
01:05:19,839 --> 01:05:23,119
okay and this jump even though it might

1483
01:05:23,119 --> 01:05:25,680
look small from standard quantum tokens

1484
01:05:25,680 --> 01:05:28,240
to signature tokens gives us a major

1485
01:05:28,240 --> 01:05:30,160
increase in functionalities these are a

1486
01:05:30,160 --> 01:05:31,520
few examples

1487
01:05:31,520 --> 01:05:33,359
uh there are more

1488
01:05:33,359 --> 01:05:35,520
and also all of

1489
01:05:35,520 --> 01:05:37,599
these examples here we can think of them

1490
01:05:37,599 --> 01:05:39,520
with quantum tokens with added

1491
01:05:39,520 --> 01:05:42,319
functionalities we also using signature

1492
01:05:42,319 --> 01:05:44,000
token scheme we have all of these

1493
01:05:44,000 --> 01:05:46,319
examples using what classical

1494
01:05:46,319 --> 01:05:49,039
communication between all receivers

1495
01:05:49,039 --> 01:05:51,039
but not from the sender to the receiver

1496
01:05:51,039 --> 01:05:52,319
so we still

1497
01:05:52,319 --> 01:05:54,160
this brings us to the two

1498
01:05:54,160 --> 01:05:56,559
downsides of signature tokens

1499
01:05:56,559 --> 01:05:59,280
the first is quantum communication

1500
01:05:59,280 --> 01:06:01,839
infrastructure is still necessary at

1501
01:06:01,839 --> 01:06:03,280
least from

1502
01:06:03,280 --> 01:06:06,720
communication from the sender and out

1503
01:06:06,720 --> 01:06:08,720
and the second is that the sender can be

1504
01:06:08,720 --> 01:06:11,119
malicious this can generate a falsie a

1505
01:06:11,119 --> 01:06:12,720
40 states

1506
01:06:12,720 --> 01:06:13,520
so

1507
01:06:13,520 --> 01:06:15,920
if the sender will be as honest and just

1508
01:06:15,920 --> 01:06:18,079
generate this token and send this to the

1509
01:06:18,079 --> 01:06:19,200
receiver

1510
01:06:19,200 --> 01:06:21,920
the sender can be malicious

1511
01:06:21,920 --> 01:06:23,839
generate this public key honestly and

1512
01:06:23,839 --> 01:06:25,920
then just send garbage instead of the

1513
01:06:25,920 --> 01:06:28,319
quantum dope

1514
01:06:28,319 --> 01:06:29,440
and

1515
01:06:29,440 --> 01:06:32,640
which brings us to the motivation

1516
01:06:32,640 --> 01:06:35,039
for semi-quantum tokens so what are

1517
01:06:35,039 --> 01:06:37,200
semi-quantum tokens

1518
01:06:37,200 --> 01:06:39,760
they started as semi-quantum money an

1519
01:06:39,760 --> 01:06:42,160
idea by radiant and stats

1520
01:06:42,160 --> 01:06:44,880
and now we have generalized

1521
01:06:44,880 --> 01:06:48,000
generalize them to just be semi-quantum

1522
01:06:48,000 --> 01:06:49,119
tokens

1523
01:06:49,119 --> 01:06:51,359
and what are these quantum token schemes

1524
01:06:51,359 --> 01:06:52,240
they are

1525
01:06:52,240 --> 01:06:54,240
regular quantum token scheme

1526
01:06:54,240 --> 01:06:57,119
but the sender can be classical

1527
01:06:57,119 --> 01:06:59,280
and the key

1528
01:06:59,280 --> 01:07:02,000
the key technical adding is that we have

1529
01:07:02,000 --> 01:07:04,880
classical delegation of token generation

1530
01:07:04,880 --> 01:07:06,880
so before if we needed to to generate a

1531
01:07:06,880 --> 01:07:08,720
token the sender respond to generates

1532
01:07:08,720 --> 01:07:10,960
the token by itself and then it sends it

1533
01:07:10,960 --> 01:07:13,680
to one of the receivers

1534
01:07:13,680 --> 01:07:15,039
now the sender is the classical

1535
01:07:15,039 --> 01:07:16,400
algorithm

1536
01:07:16,400 --> 01:07:18,000
going to interact with one of the

1537
01:07:18,000 --> 01:07:19,920
receiver

1538
01:07:19,920 --> 01:07:22,720
and after interaction the receiver if

1539
01:07:22,720 --> 01:07:24,880
removed honestly is going to hold this

1540
01:07:24,880 --> 01:07:27,359
one to token and the sender holds the

1541
01:07:27,359 --> 01:07:29,280
public key and it can

1542
01:07:29,280 --> 01:07:32,799
distribute it in the system

1543
01:07:33,359 --> 01:07:36,880
um security for semi-quantum token

1544
01:07:36,880 --> 01:07:39,280
schemes says that

1545
01:07:39,280 --> 01:07:41,680
if the sender interacts with the

1546
01:07:41,680 --> 01:07:44,240
efficient quantum adversary

1547
01:07:44,240 --> 01:07:45,920
and after the interaction the adversary

1548
01:07:45,920 --> 01:07:48,079
wants to output two copies

1549
01:07:48,079 --> 01:07:49,839
again like before with the most

1550
01:07:49,839 --> 01:07:51,520
negligible probability both of these

1551
01:07:51,520 --> 01:07:53,280
copies are going to be accepted but the

1552
01:07:53,280 --> 01:07:54,400
point here

1553
01:07:54,400 --> 01:07:56,720
is that this adversary is going to be

1554
01:07:56,720 --> 01:07:58,880
the one to actually generate the state

1555
01:07:58,880 --> 01:08:01,200
and still in semi-quantum token schemes

1556
01:08:01,200 --> 01:08:02,160
um

1557
01:08:02,160 --> 01:08:04,319
this state is unclonable even for the

1558
01:08:04,319 --> 01:08:06,880
generating computer so the computer sees

1559
01:08:06,880 --> 01:08:09,200
the classical instructions that the

1560
01:08:09,200 --> 01:08:10,799
sender sends

1561
01:08:10,799 --> 01:08:12,480
and it still cannot produce more than a

1562
01:08:12,480 --> 01:08:14,880
single code

1563
01:08:14,880 --> 01:08:16,799
um okay

1564
01:08:16,799 --> 01:08:18,640
what we know in terms of constructing

1565
01:08:18,640 --> 01:08:20,399
summary quantum token schemes we have

1566
01:08:20,399 --> 01:08:24,560
one one protocol by um s 2021 that says

1567
01:08:24,560 --> 01:08:26,238
that if we assume

1568
01:08:26,238 --> 01:08:29,439
the quantum sub external hardness of lwe

1569
01:08:29,439 --> 01:08:32,960
and also quantum secure io for classical

1570
01:08:32,960 --> 01:08:34,319
circuits

1571
01:08:34,319 --> 01:08:36,479
then we can construct the semi-quantum

1572
01:08:36,479 --> 01:08:39,040
tokens

1573
01:08:39,040 --> 01:08:40,238
um

1574
01:08:40,238 --> 01:08:42,319
more precisely what the previous work

1575
01:08:42,319 --> 01:08:45,359
shows is that this generated token is a

1576
01:08:45,359 --> 01:08:47,439
cost state also

1577
01:08:47,439 --> 01:08:49,520
and the public key is exactly the same

1578
01:08:49,520 --> 01:08:51,920
like before these are obfuscations of

1579
01:08:51,920 --> 01:08:54,238
this membership circuits for the two

1580
01:08:54,238 --> 01:08:55,439
cost

1581
01:08:55,439 --> 01:08:57,679
primal endure

1582
01:08:57,679 --> 01:09:00,399
the good side is that the previous work

1583
01:09:00,399 --> 01:09:04,000
shows that this state is increment

1584
01:09:04,238 --> 01:09:06,880
the bad side is that we actually later

1585
01:09:06,880 --> 01:09:09,040
got to know that

1586
01:09:09,040 --> 01:09:10,399
while this

1587
01:09:10,399 --> 01:09:12,960
if if this receiver is malicious it

1588
01:09:12,960 --> 01:09:15,120
cannot clone the state it can it can

1589
01:09:15,120 --> 01:09:17,359
still output two elements

1590
01:09:17,359 --> 01:09:19,600
one from the um primal concept and one

1591
01:09:19,600 --> 01:09:21,359
from the dual post

1592
01:09:21,359 --> 01:09:22,399
so

1593
01:09:22,399 --> 01:09:23,679
to recap

1594
01:09:23,679 --> 01:09:25,839
we know that fully quantum process state

1595
01:09:25,839 --> 01:09:28,479
when the when the generator is trusted

1596
01:09:28,479 --> 01:09:30,399
have this direct product harness

1597
01:09:30,399 --> 01:09:33,359
property which more

1598
01:09:33,359 --> 01:09:36,158
effectively it means that if i send you

1599
01:09:36,158 --> 01:09:38,880
the quantum state prepared and you try

1600
01:09:38,880 --> 01:09:41,520
to to break direct product hardness you

1601
01:09:41,520 --> 01:09:42,880
can't

1602
01:09:42,880 --> 01:09:45,679
however if we are interacting and i give

1603
01:09:45,679 --> 01:09:47,920
you classical instruction for generating

1604
01:09:47,920 --> 01:09:49,040
this state

1605
01:09:49,040 --> 01:09:51,679
which is exactly what um this says you

1606
01:09:51,679 --> 01:09:53,839
in fact can generate two elements one in

1607
01:09:53,839 --> 01:09:56,320
the primal coset one in the dwarfs

1608
01:09:56,320 --> 01:09:58,000
so we don't have direct product harness

1609
01:09:58,000 --> 01:10:00,239
for semi-quantum positive states

1610
01:10:00,239 --> 01:10:01,679
but we do have four fully quantum

1611
01:10:01,679 --> 01:10:03,199
processes

1612
01:10:03,199 --> 01:10:06,560
um and now our techniques so we show

1613
01:10:06,560 --> 01:10:07,840
that we can

1614
01:10:07,840 --> 01:10:10,159
do targeted sampling and also show that

1615
01:10:10,159 --> 01:10:12,159
this sampling is one time for

1616
01:10:12,159 --> 01:10:14,880
semi-quantum processing so let's also

1617
01:10:14,880 --> 01:10:16,640
remember what exactly is targeted

1618
01:10:16,640 --> 01:10:18,960
sampling and one time sample but before

1619
01:10:18,960 --> 01:10:21,199
we do that let's start with a protocol

1620
01:10:21,199 --> 01:10:24,719
that already exists which is of s 20.1

1621
01:10:24,719 --> 01:10:25,520
um

1622
01:10:25,520 --> 01:10:27,760
this is the protocol for delegating the

1623
01:10:27,760 --> 01:10:29,360
generation of deposit state and it

1624
01:10:29,360 --> 01:10:31,120
doesn't really import it it's not so

1625
01:10:31,120 --> 01:10:32,640
important that we know what's happening

1626
01:10:32,640 --> 01:10:34,239
in all of this

1627
01:10:34,239 --> 01:10:35,920
mainly the first message is important

1628
01:10:35,920 --> 01:10:38,080
and what is the first message this

1629
01:10:38,080 --> 01:10:41,120
classical sender is going to sample

1630
01:10:41,120 --> 01:10:44,480
a classical random substance of

1631
01:10:44,480 --> 01:10:46,320
n half dimensions

1632
01:10:46,320 --> 01:10:47,920
and then it's going to encrypt the

1633
01:10:47,920 --> 01:10:49,679
classical encryption

1634
01:10:49,679 --> 01:10:51,840
the the classical description of the

1635
01:10:51,840 --> 01:10:54,880
subspace using classical qfg like a

1636
01:10:54,880 --> 01:10:56,719
classical encryption

1637
01:10:56,719 --> 01:10:59,280
of quantum fully homomorphic encryption

1638
01:10:59,280 --> 01:11:01,840
it's going to send this qfha encryption

1639
01:11:01,840 --> 01:11:03,520
to the receiver and then the receiver is

1640
01:11:03,520 --> 01:11:06,320
going to generate the state by itself

1641
01:11:06,320 --> 01:11:07,600
um

1642
01:11:07,600 --> 01:11:10,480
and the point that we care about is that

1643
01:11:10,480 --> 01:11:14,080
because for the again for the receiver

1644
01:11:14,080 --> 01:11:16,560
the s is hidden it generates the the

1645
01:11:16,560 --> 01:11:19,199
cost state of s but it doesn't see s

1646
01:11:19,199 --> 01:11:21,920
so form the support of the qft it should

1647
01:11:21,920 --> 01:11:23,760
be computationally how to find any

1648
01:11:23,760 --> 01:11:27,280
non-trivial vector inside s

1649
01:11:27,280 --> 01:11:28,400
um

1650
01:11:28,400 --> 01:11:30,400
more elaborately what the security

1651
01:11:30,400 --> 01:11:33,040
reduction says it shows that if a

1652
01:11:33,040 --> 01:11:35,760
malicious receiver clones this quantum

1653
01:11:35,760 --> 01:11:38,159
state it outputs two copies of the the

1654
01:11:38,159 --> 01:11:41,040
corset state you can derive

1655
01:11:41,040 --> 01:11:43,440
a non-trivial vector a non-trivial

1656
01:11:43,440 --> 01:11:45,679
vector inside this

1657
01:11:45,679 --> 01:11:47,840
um and now we want to prove this

1658
01:11:47,840 --> 01:11:50,159
protocol change it somehow so we have

1659
01:11:50,159 --> 01:11:52,480
targeted sampling then one times f so

1660
01:11:52,480 --> 01:11:54,640
let's recall what it means target the

1661
01:11:54,640 --> 01:11:56,960
sampling mean we have two sets that we

1662
01:11:56,960 --> 01:11:58,320
can choose from

1663
01:11:58,320 --> 01:12:00,560
and every costed state can give you a

1664
01:12:00,560 --> 01:12:02,800
sample from one of them

1665
01:12:02,800 --> 01:12:04,960
and one time sampling means that this

1666
01:12:04,960 --> 01:12:06,320
sample is

1667
01:12:06,320 --> 01:12:09,040
one time it's at most one sample from

1668
01:12:09,040 --> 01:12:11,840
each constant state

1669
01:12:11,840 --> 01:12:14,400
and we know that we don't have um

1670
01:12:14,400 --> 01:12:17,280
we cannot choose the two the two sets

1671
01:12:17,280 --> 01:12:19,520
for our semi-quantum coset state cannot

1672
01:12:19,520 --> 01:12:22,560
be the primal and the dual costs

1673
01:12:22,560 --> 01:12:24,239
so here is what we're going to do we're

1674
01:12:24,239 --> 01:12:26,400
going to use to instead of looking at

1675
01:12:26,400 --> 01:12:28,400
the primary dual subspaces we're going

1676
01:12:28,400 --> 01:12:30,880
to look on two parallel cosets

1677
01:12:30,880 --> 01:12:34,840
that join to s plus x

1678
01:12:34,840 --> 01:12:39,199
specifically defined s0 as a subspace of

1679
01:12:39,199 --> 01:12:43,040
s which has one less dimensions

1680
01:12:43,040 --> 01:12:45,760
and another vector which is inside s but

1681
01:12:45,760 --> 01:12:48,239
outside s0

1682
01:12:48,239 --> 01:12:51,280
and the two halves of s plus x are going

1683
01:12:51,280 --> 01:12:52,880
to be the first half

1684
01:12:52,880 --> 01:12:56,239
is set one is going to be s zero plus x

1685
01:12:56,239 --> 01:12:58,719
this is a coset and the second constant

1686
01:12:58,719 --> 01:13:02,960
is s zero plus w plus x

1687
01:13:03,199 --> 01:13:05,280
okay so this this is this is our choice

1688
01:13:05,280 --> 01:13:07,600
until now we didn't prove anything for

1689
01:13:07,600 --> 01:13:09,280
targeted sampling

1690
01:13:09,280 --> 01:13:11,600
and in the paper we show a quantum

1691
01:13:11,600 --> 01:13:14,560
algorithm a polynomial algorithm that

1692
01:13:14,560 --> 01:13:16,640
given the following

1693
01:13:16,640 --> 01:13:19,199
it doesn't get only um membership

1694
01:13:19,199 --> 01:13:22,880
programs for s plus x and s spell plus z

1695
01:13:22,880 --> 01:13:27,600
it gets s 0 plus x and s 0 plus w plus x

1696
01:13:27,600 --> 01:13:30,000
so for the two halves of the coset s

1697
01:13:30,000 --> 01:13:33,600
plus x and also for the dual core set

1698
01:13:33,600 --> 01:13:36,719
and a bit to sign and the coset state

1699
01:13:36,719 --> 01:13:39,120
and it can project this costed state

1700
01:13:39,120 --> 01:13:41,440
onto this corset state with almost

1701
01:13:41,440 --> 01:13:43,280
probability one

1702
01:13:43,280 --> 01:13:45,280
okay when we know that if we measure

1703
01:13:45,280 --> 01:13:47,120
this corset state now we're going to get

1704
01:13:47,120 --> 01:13:49,199
our a wanted

1705
01:13:49,199 --> 01:13:50,880
element from the chosen set of

1706
01:13:50,880 --> 01:13:53,040
probability one given the fact that we

1707
01:13:53,040 --> 01:13:55,760
already have the state

1708
01:13:55,760 --> 01:13:58,080
um so

1709
01:13:58,080 --> 01:13:59,280
and the only change we need to make to

1710
01:13:59,280 --> 01:14:00,880
the protocol is that in the third

1711
01:14:00,880 --> 01:14:03,280
message the sender needs to change to to

1712
01:14:03,280 --> 01:14:05,600
send all three observations

1713
01:14:05,600 --> 01:14:07,520
rather than only two

1714
01:14:07,520 --> 01:14:09,520
um good so we seem to have targeted

1715
01:14:09,520 --> 01:14:12,640
sampling what about one time sample and

1716
01:14:12,640 --> 01:14:14,800
this translates to the question

1717
01:14:14,800 --> 01:14:18,239
um is it hard to compute for a malicious

1718
01:14:18,239 --> 01:14:20,080
receiver in the protocol that we just

1719
01:14:20,080 --> 01:14:22,400
saw is it how to compute two elements

1720
01:14:22,400 --> 01:14:26,719
one from set one and one from set two

1721
01:14:26,719 --> 01:14:28,239
um let's start with the walmart for the

1722
01:14:28,239 --> 01:14:29,840
securities

1723
01:14:29,840 --> 01:14:32,960
so the warm-up is going to say that

1724
01:14:32,960 --> 01:14:35,920
the receiver is going to try to do to

1725
01:14:35,920 --> 01:14:37,600
find these two elements given only the

1726
01:14:37,600 --> 01:14:39,280
first message

1727
01:14:39,280 --> 01:14:42,159
and this would also of course be hard

1728
01:14:42,159 --> 01:14:45,280
because it gets only less information

1729
01:14:45,280 --> 01:14:48,719
and um what one can verify that if we

1730
01:14:48,719 --> 01:14:52,640
have these two um elements one form s0

1731
01:14:52,640 --> 01:14:54,000
plus x and

1732
01:14:54,000 --> 01:15:00,480
small s1 is inside um s0 plus w plus x

1733
01:15:00,480 --> 01:15:03,760
then these you this u0 and this v0 are

1734
01:15:03,760 --> 01:15:05,360
inside s0

1735
01:15:05,360 --> 01:15:08,159
the x's cancel out and we get a vector

1736
01:15:08,159 --> 01:15:09,920
this sum from the closure in the

1737
01:15:09,920 --> 01:15:11,600
subspace s0

1738
01:15:11,600 --> 01:15:14,239
this is a vector inside s0 and this is a

1739
01:15:14,239 --> 01:15:17,760
vector w is in s but outside s0

1740
01:15:17,760 --> 01:15:20,640
which means that this sum which is this

1741
01:15:20,640 --> 01:15:21,600
sum

1742
01:15:21,600 --> 01:15:24,560
is inside s but not as zero and we know

1743
01:15:24,560 --> 01:15:27,120
that f0 is in particular the subspace it

1744
01:15:27,120 --> 01:15:28,960
contains the zero vector which means

1745
01:15:28,960 --> 01:15:31,280
that if this sum is in side s and

1746
01:15:31,280 --> 01:15:32,800
outside s zero it's particularly

1747
01:15:32,800 --> 01:15:35,840
non-trivial vector inside s

1748
01:15:35,840 --> 01:15:37,840
which means that this is already

1749
01:15:37,840 --> 01:15:40,159
computationally hard which is good

1750
01:15:40,159 --> 01:15:42,239
it is hard for a quantum polynomial time

1751
01:15:42,239 --> 01:15:44,480
receiver to get one message and output

1752
01:15:44,480 --> 01:15:46,480
these two elements

1753
01:15:46,480 --> 01:15:50,400
but the the real security game is given

1754
01:15:50,400 --> 01:15:52,480
all of the protocol and then outputting

1755
01:15:52,480 --> 01:15:54,320
these two elements so crucially it's

1756
01:15:54,320 --> 01:15:57,199
also given the third message from the

1757
01:15:57,199 --> 01:16:00,000
classical sender to the receiver and

1758
01:16:00,000 --> 01:16:01,520
this should be still computationally

1759
01:16:01,520 --> 01:16:02,480
hard

1760
01:16:02,480 --> 01:16:04,000
so let's see what happens

1761
01:16:04,000 --> 01:16:06,400
um our main technical are usually our

1762
01:16:06,400 --> 01:16:09,040
main technical tool for for showing

1763
01:16:09,040 --> 01:16:11,440
indistinguishability in this uh realm of

1764
01:16:11,440 --> 01:16:13,040
and cloneable cryptography quantum

1765
01:16:13,040 --> 01:16:14,000
tokens

1766
01:16:14,000 --> 01:16:16,159
is the main technical lemma

1767
01:16:16,159 --> 01:16:19,440
of zandry 20 2018 this is also called

1768
01:16:19,440 --> 01:16:21,760
the subspace hiding a property of

1769
01:16:21,760 --> 01:16:23,360
obfuscation or just substance hiding

1770
01:16:23,360 --> 01:16:24,719
obfuscation

1771
01:16:24,719 --> 01:16:26,880
it says that if we assume

1772
01:16:26,880 --> 01:16:28,800
uh quantum secure indistinguishability

1773
01:16:28,800 --> 01:16:31,760
of escalation for classical circuits

1774
01:16:31,760 --> 01:16:34,159
and assume uh post-quantum injective

1775
01:16:34,159 --> 01:16:35,920
one-way functions

1776
01:16:35,920 --> 01:16:38,800
then for every subspace of n-bit strings

1777
01:16:38,800 --> 01:16:41,440
this substrate can be fixed

1778
01:16:41,440 --> 01:16:43,440
and the dimension of the subspace is

1779
01:16:43,440 --> 01:16:45,199
half the dimensions

1780
01:16:45,199 --> 01:16:47,280
and half

1781
01:16:47,280 --> 01:16:49,600
these two distributions are going to be

1782
01:16:49,600 --> 01:16:51,600
computationally distinguishable for

1783
01:16:51,600 --> 01:16:53,199
quantum distinguish

1784
01:16:53,199 --> 01:16:55,199
so the first one is just taking the

1785
01:16:55,199 --> 01:16:57,120
membership circuit the circuit the

1786
01:16:57,120 --> 01:16:59,120
classical circuit that checks membership

1787
01:16:59,120 --> 01:17:00,400
in s

1788
01:17:00,400 --> 01:17:03,679
over it and sending the obfuscations

1789
01:17:03,679 --> 01:17:05,760
this is distribution number one

1790
01:17:05,760 --> 01:17:08,320
distribution number two is first

1791
01:17:08,320 --> 01:17:12,159
sampling a super space of s

1792
01:17:12,159 --> 01:17:15,440
so um a random subspace t

1793
01:17:15,440 --> 01:17:16,560
of

1794
01:17:16,560 --> 01:17:19,840
three quarters of n dimensions

1795
01:17:19,840 --> 01:17:21,199
conditional

1796
01:17:21,199 --> 01:17:23,360
containing s

1797
01:17:23,360 --> 01:17:24,320
so

1798
01:17:24,320 --> 01:17:27,760
much larger subspace that contains

1799
01:17:27,760 --> 01:17:28,480
s

1800
01:17:28,480 --> 01:17:30,239
and then alpha skating the membership

1801
01:17:30,239 --> 01:17:32,480
circuit of the subspace

1802
01:17:32,480 --> 01:17:35,120
okay and then sending these obfuscations

1803
01:17:35,120 --> 01:17:38,159
so obfuscating just s and obfuscating

1804
01:17:38,159 --> 01:17:40,640
undone super space of s are going to be

1805
01:17:40,640 --> 01:17:43,440
indistinguishable under assuming i o and

1806
01:17:43,440 --> 01:17:45,920
post one to one with functions

1807
01:17:45,920 --> 01:17:48,159
um

1808
01:17:49,199 --> 01:17:51,360
uh maybe you should wrap it up

1809
01:17:51,360 --> 01:17:54,239
yes two minutes

1810
01:17:54,239 --> 01:17:55,580
uh can you wrap it up

1811
01:17:55,580 --> 01:17:56,880
[Music]

1812
01:17:56,880 --> 01:17:58,480
yeah sure

1813
01:17:58,480 --> 01:18:01,760
um so we can try to use this um to try

1814
01:18:01,760 --> 01:18:04,960
to use this um main technical lemma to

1815
01:18:04,960 --> 01:18:06,640
switch from this distribution to this

1816
01:18:06,640 --> 01:18:08,320
distribution

1817
01:18:08,320 --> 01:18:10,960
and um the point is that we don't know

1818
01:18:10,960 --> 01:18:13,520
how to do it in there is there are a few

1819
01:18:13,520 --> 01:18:15,199
reasons why we don't know how to do it

1820
01:18:15,199 --> 01:18:16,719
but the main one because i don't have

1821
01:18:16,719 --> 01:18:19,360
quite i don't have time to explain but

1822
01:18:19,360 --> 01:18:21,360
this last bullet is the most important

1823
01:18:21,360 --> 01:18:23,199
we don't know how to prove

1824
01:18:23,199 --> 01:18:25,440
that an adversary

1825
01:18:25,440 --> 01:18:27,920
that is going to output these two

1826
01:18:27,920 --> 01:18:29,440
elements

1827
01:18:29,440 --> 01:18:33,120
is going to necessarily avoid

1828
01:18:33,120 --> 01:18:35,760
the dual subspace of t1

1829
01:18:35,760 --> 01:18:38,000
okay we want to observe we want to

1830
01:18:38,000 --> 01:18:40,640
output a vector inside s

1831
01:18:40,640 --> 01:18:42,640
but now not only s

1832
01:18:42,640 --> 01:18:45,280
which is non-zero s and should be not in

1833
01:18:45,280 --> 01:18:46,400
t1

1834
01:18:46,400 --> 01:18:49,360
which is one of these big subspaces

1835
01:18:49,360 --> 01:18:50,560
and

1836
01:18:50,560 --> 01:18:53,360
to to wrap it up um our main technical

1837
01:18:53,360 --> 01:18:55,280
lemma shows the following

1838
01:18:55,280 --> 01:18:57,280
under the same computational assumptions

1839
01:18:57,280 --> 01:19:00,320
and if we have any fixed s of the same

1840
01:19:00,320 --> 01:19:01,679
dimensions

1841
01:19:01,679 --> 01:19:04,800
it is impossible to get a sample from

1842
01:19:04,800 --> 01:19:06,719
the t distribution

1843
01:19:06,719 --> 01:19:09,280
like getting a obfuscation of the

1844
01:19:09,280 --> 01:19:11,360
membership check for a random big

1845
01:19:11,360 --> 01:19:14,640
subspace t conditional containing s

1846
01:19:14,640 --> 01:19:16,400
and it's going to be impossible to do

1847
01:19:16,400 --> 01:19:18,080
two things together

1848
01:19:18,080 --> 01:19:20,480
um you cannot

1849
01:19:20,480 --> 01:19:23,679
hit the dual of t with a noticeable

1850
01:19:23,679 --> 01:19:25,679
probability

1851
01:19:25,679 --> 01:19:28,640
but not hit the background which is s

1852
01:19:28,640 --> 01:19:30,239
perp

1853
01:19:30,239 --> 01:19:33,520
um with a negligible probability

1854
01:19:33,520 --> 01:19:35,600
okay this this this is the anti

1855
01:19:35,600 --> 01:19:37,199
concentration lemma you cannot

1856
01:19:37,199 --> 01:19:40,239
concentrate in the dual subspace of t

1857
01:19:40,239 --> 01:19:42,400
where you get an obfuscation

1858
01:19:42,400 --> 01:19:46,480
and yeah that's it thank you

1859
01:19:47,280 --> 01:19:50,280
okay

1860
01:19:52,880 --> 01:19:54,960
uh we won't have time for questions but

1861
01:19:54,960 --> 01:19:58,840
let's thank you again

