1
00:00:00,080 --> 00:00:01,199
um

2
00:00:01,199 --> 00:00:03,279
i'm gonna start by saying i'm sorry but

3
00:00:03,280 --> 00:00:04,799
this is actually about a research

4
00:00:04,799 --> 00:00:06,319
project uh joined with all of these

5
00:00:06,319 --> 00:00:07,520
lovely people

6
00:00:07,520 --> 00:00:09,040
uh but don't worry too much there will

7
00:00:09,040 --> 00:00:12,080
be one joke one insane plot twist and

8
00:00:12,080 --> 00:00:13,840
maybe some things for your bingo card so

9
00:00:13,840 --> 00:00:16,720
please stay with me for now

10
00:00:16,720 --> 00:00:18,240
curves you can trust

11
00:00:18,240 --> 00:00:20,119
[Music]

12
00:00:20,119 --> 00:00:23,199
notwithstanding uh the recent total

13
00:00:23,199 --> 00:00:25,199
annihilation of psych

14
00:00:25,199 --> 00:00:26,960
we the people are still

15
00:00:26,960 --> 00:00:28,720
on the quest for a curve you can trust

16
00:00:28,720 --> 00:00:31,039
which means that uh well one thing you

17
00:00:31,039 --> 00:00:32,960
can use to attack a lot of isogony-based

18
00:00:32,960 --> 00:00:35,680
schemes is known anamorphisms i've

19
00:00:35,680 --> 00:00:37,680
applied some color coding here red means

20
00:00:37,680 --> 00:00:40,160
it's bad so color coding

21
00:00:40,160 --> 00:00:44,320
red no anamorphisms are bad

22
00:00:44,320 --> 00:00:46,160
well you know the obvious solution to

23
00:00:46,160 --> 00:00:47,120
this is you just get rid of the

24
00:00:47,120 --> 00:00:48,640
non-anamorphisms you apply unknown

25
00:00:48,640 --> 00:00:50,399
anamorphisms which are green so that's

26
00:00:50,399 --> 00:00:51,600
good

27
00:00:51,600 --> 00:00:52,559
um

28
00:00:52,559 --> 00:00:54,399
so that's easy problem solved thanks for

29
00:00:54,399 --> 00:00:56,160
listening bye

30
00:00:56,160 --> 00:00:57,440
uh well but that's not gonna happen

31
00:00:57,440 --> 00:00:59,280
because uh

32
00:00:59,280 --> 00:01:00,960
well okay let me first say one more

33
00:01:00,960 --> 00:01:03,199
thing uh we label this as a super single

34
00:01:03,199 --> 00:01:04,559
elliptic curve of unknown and amorphous

35
00:01:04,559 --> 00:01:06,240
ring because that's what it is and uh if

36
00:01:06,240 --> 00:01:08,000
you take the first few letters of each

37
00:01:08,000 --> 00:01:09,040
word here

38
00:01:09,040 --> 00:01:10,720
uh you get an acronym it's called a

39
00:01:10,720 --> 00:01:12,960
stack ur

40
00:01:12,960 --> 00:01:13,680
and

41
00:01:13,680 --> 00:01:15,600
if there's anybody in the audience who's

42
00:01:15,600 --> 00:01:17,600
british the spelling is

43
00:01:17,600 --> 00:01:20,080
secure

44
00:01:20,720 --> 00:01:22,640
this is the one joke i'm sorry it's

45
00:01:22,640 --> 00:01:24,799
actually also stolen from luca de feo

46
00:01:24,799 --> 00:01:26,960
captain look at affair i must say

47
00:01:26,960 --> 00:01:28,960
so i wish i made it up on my own but i

48
00:01:28,960 --> 00:01:30,320
didn't

49
00:01:30,320 --> 00:01:32,880
uh right so as i kind of said before i

50
00:01:32,880 --> 00:01:34,880
talked about the joke here uh we don't

51
00:01:34,880 --> 00:01:36,000
really know how to construct such a

52
00:01:36,000 --> 00:01:37,680
curve so this is where we as a community

53
00:01:37,680 --> 00:01:39,280
are really just kind of scratching our

54
00:01:39,280 --> 00:01:40,640
heads

55
00:01:40,640 --> 00:01:42,720
um there is kind of a folklore solution

56
00:01:42,720 --> 00:01:44,479
to this which is that random curves have

57
00:01:44,479 --> 00:01:46,560
unknown endomorphisms again color-coded

58
00:01:46,560 --> 00:01:48,720
green to show that it's good

59
00:01:48,720 --> 00:01:50,320
um but we don't really know how to

60
00:01:50,320 --> 00:01:52,000
construct a random elliptic curve a

61
00:01:52,000 --> 00:01:53,840
random super singular elliptic curve the

62
00:01:53,840 --> 00:01:54,960
only way we know how to do this is by

63
00:01:54,960 --> 00:01:56,399
using random walks but then you kind of

64
00:01:56,399 --> 00:01:58,399
know a path from a curve that has known

65
00:01:58,399 --> 00:02:01,040
endomorphisms to your new curve and that

66
00:02:01,040 --> 00:02:02,560
transports to known anamorphosis so that

67
00:02:02,560 --> 00:02:04,560
doesn't work

68
00:02:04,560 --> 00:02:06,799
um you can still do this and just reveal

69
00:02:06,799 --> 00:02:08,239
the end point of your random walk but

70
00:02:08,239 --> 00:02:09,598
then of course the person who does this

71
00:02:09,598 --> 00:02:11,440
thing has a backdoor to the entire thing

72
00:02:11,440 --> 00:02:13,200
so you need some kind of trusted setup

73
00:02:13,200 --> 00:02:14,319
and whenever we have this as

74
00:02:14,319 --> 00:02:15,840
cryptographers what we want to do is a

75
00:02:15,840 --> 00:02:19,040
distributed trusted setup so we kind of

76
00:02:19,040 --> 00:02:20,800
basically chain secret dynamics

77
00:02:20,800 --> 00:02:22,239
generated by different people and then

78
00:02:22,239 --> 00:02:23,680
uh we kind of have to make sure that

79
00:02:23,680 --> 00:02:25,680
everybody does this properly and uh at

80
00:02:25,680 --> 00:02:27,280
the end the final endpoint of the entire

81
00:02:27,280 --> 00:02:29,520
thing will be our new random lip curve

82
00:02:29,520 --> 00:02:30,800
so this is what it looks like you have

83
00:02:30,800 --> 00:02:32,720
one special starting curve you can have

84
00:02:32,720 --> 00:02:35,680
known endomorphisms red bad

85
00:02:35,680 --> 00:02:37,519
and then you just kind of randomly walk

86
00:02:37,519 --> 00:02:39,680
around you get up you know others can do

87
00:02:39,680 --> 00:02:41,200
this she ends up at a new curve and then

88
00:02:41,200 --> 00:02:42,720
she passes that on to bob

89
00:02:42,720 --> 00:02:44,319
uh bob will also do a random walk ends

90
00:02:44,319 --> 00:02:45,920
up in a new curve reveals that that's

91
00:02:45,920 --> 00:02:47,040
the end point that's the random curve

92
00:02:47,040 --> 00:02:48,000
we're going to use this this is our

93
00:02:48,000 --> 00:02:50,720
trusted curve

94
00:02:50,720 --> 00:02:51,680
of course we have to make sure that they

95
00:02:51,680 --> 00:02:53,440
don't cheat so what you need here is a

96
00:02:53,440 --> 00:02:55,760
proof of misogyny knowledge proved that

97
00:02:55,760 --> 00:02:57,360
between two publicly known elliptic

98
00:02:57,360 --> 00:02:59,920
curves you know a secret esogeny

99
00:02:59,920 --> 00:03:02,000
so what we have is a proof of surgery

100
00:03:02,000 --> 00:03:03,680
knowledge for super singular ellipticals

101
00:03:03,680 --> 00:03:05,680
over pretty much any base field

102
00:03:05,680 --> 00:03:07,280
it's statistically zero knowledge which

103
00:03:07,280 --> 00:03:08,959
relies on some very non-obvious

104
00:03:08,959 --> 00:03:10,879
properties of esogenic graphs so there's

105
00:03:10,879 --> 00:03:13,280
a lot of deep math in here

106
00:03:13,280 --> 00:03:14,560
it's computationally sound assuming

107
00:03:14,560 --> 00:03:16,239
nothing but the pure estergening problem

108
00:03:16,239 --> 00:03:17,280
so you know if you're still thinking

109
00:03:17,280 --> 00:03:19,519
about psych it's not the psych problem

110
00:03:19,519 --> 00:03:21,599
so this is still possibly secure as far

111
00:03:21,599 --> 00:03:22,879
as we know

112
00:03:22,879 --> 00:03:24,400
uh and indeed we're actually planning to

113
00:03:24,400 --> 00:03:26,159
kind of run trusted setup ceremony in

114
00:03:26,159 --> 00:03:29,840
reality to uh get some super singular

115
00:03:29,840 --> 00:03:32,480
curves with this property

116
00:03:32,480 --> 00:03:34,159
uh our intended application for this was

117
00:03:34,159 --> 00:03:36,239
to defend sidh and psych in depth

118
00:03:36,239 --> 00:03:37,680
because it's not very vulnerable to this

119
00:03:37,680 --> 00:03:39,680
but it could help for some attacks

120
00:03:39,680 --> 00:03:42,799
unfortunately psych recently passed away

121
00:03:42,799 --> 00:03:44,400
due to these three attack papers so

122
00:03:44,400 --> 00:03:46,720
that's not going to happen anymore

123
00:03:46,720 --> 00:03:48,159
if anybody has new applications in mind

124
00:03:48,159 --> 00:03:50,319
please talk to us we have

125
00:03:50,319 --> 00:03:52,080
plenty of time to do this but

126
00:03:52,080 --> 00:03:53,680
so far we're not really sure who needs

127
00:03:53,680 --> 00:03:55,760
this

128
00:03:55,760 --> 00:03:57,120
i'm going to say that we're still using

129
00:03:57,120 --> 00:03:59,599
the technical tool of sidh squares but

130
00:03:59,599 --> 00:04:01,519
you know the marketing isn't really that

131
00:04:01,519 --> 00:04:03,280
exciting anymore so we're kind of just

132
00:04:03,280 --> 00:04:05,920
turning this around by 45 degrees

133
00:04:05,920 --> 00:04:07,840
and uh so you know this still looks like

134
00:04:07,840 --> 00:04:09,120
a square but if you just call it i

135
00:04:09,120 --> 00:04:10,879
suddenly diamond instead it sounds so

136
00:04:10,879 --> 00:04:13,200
much better and it looks really tough

137
00:04:13,200 --> 00:04:14,480
so this is what it is now thanks for

138
00:04:14,480 --> 00:04:16,798
listening

139
00:04:25,919 --> 00:04:27,040
hello

140
00:04:27,040 --> 00:04:29,440
i'm back don't worry there are no shell

141
00:04:29,440 --> 00:04:32,240
scripts this time

142
00:04:33,040 --> 00:04:36,000
all right so we've seen some spectacular

143
00:04:36,000 --> 00:04:38,000
complete breaks of various post-quantum

144
00:04:38,000 --> 00:04:40,400
candidates uh we saw

145
00:04:40,400 --> 00:04:43,840
uh rainbow is broken in a weekend on a

146
00:04:43,840 --> 00:04:47,360
laptop uh psych is broken in hours or

147
00:04:47,360 --> 00:04:48,960
even minutes

148
00:04:48,960 --> 00:04:50,160
uh

149
00:04:50,160 --> 00:04:52,560
and we're excited to

150
00:04:52,560 --> 00:04:55,040
uh we're excited to present some further

151
00:04:55,040 --> 00:04:57,199
work in laptop-based grip analysis these

152
00:04:57,199 --> 00:04:58,720
are very exciting times to be a group

153
00:04:58,720 --> 00:05:00,479
analyst with a laptop

154
00:05:00,479 --> 00:05:02,800
uh this time we're attacking an older

155
00:05:02,800 --> 00:05:04,720
but still used in legacy systems block

156
00:05:04,720 --> 00:05:08,000
cipher uh or rather such a block cipher

157
00:05:08,000 --> 00:05:10,880
that is iterated three times

158
00:05:10,880 --> 00:05:12,320
that's right

159
00:05:12,320 --> 00:05:15,120
triple rod 13 is broken in three seconds

160
00:05:15,120 --> 00:05:17,919
on a laptop

161
00:05:18,160 --> 00:05:19,520
and this is joint work with peter

162
00:05:19,520 --> 00:05:21,520
schmidt nielsen

163
00:05:21,520 --> 00:05:23,520
all right so we all know the story of

164
00:05:23,520 --> 00:05:26,000
triple wrap 13. single rod 13 was a

165
00:05:26,000 --> 00:05:27,840
sound design but its zero bit key size

166
00:05:27,840 --> 00:05:29,120
was just too small to prevent brute

167
00:05:29,120 --> 00:05:30,720
forcing

168
00:05:30,720 --> 00:05:33,120
double rod 13 was proposed

169
00:05:33,120 --> 00:05:35,039
excuse me

170
00:05:35,039 --> 00:05:37,120
double rod 13 was proposed but it turns

171
00:05:37,120 --> 00:05:38,720
out to be vulnerable to a meet in the

172
00:05:38,720 --> 00:05:39,840
middle attack

173
00:05:39,840 --> 00:05:42,080
uh thus triple route 13 which provides

174
00:05:42,080 --> 00:05:43,840
twice as many bits of security as single

175
00:05:43,840 --> 00:05:47,280
round 13 namely still zero

176
00:05:47,919 --> 00:05:50,240
so how does rat13 actually work

177
00:05:50,240 --> 00:05:52,320
now normally it's presented using weird

178
00:05:52,320 --> 00:05:55,199
non-standard mod 26 arithmetic

179
00:05:55,199 --> 00:05:56,639
but there's actually a much cleaner

180
00:05:56,639 --> 00:05:58,400
description of it it's actually just a

181
00:05:58,400 --> 00:06:01,120
standard feistyl cipher uh it has 8-bit

182
00:06:01,120 --> 00:06:04,560
blocks 0-bit key size um there are six

183
00:06:04,560 --> 00:06:07,360
uh feistel rounds uh in a single rot

184
00:06:07,360 --> 00:06:09,120
each of them is just a four bit s box

185
00:06:09,120 --> 00:06:12,160
you iterate 13 times for rot13

186
00:06:12,160 --> 00:06:14,400
um we were actually able to with the

187
00:06:14,400 --> 00:06:17,039
help of a sat solver uh reverse engineer

188
00:06:17,039 --> 00:06:19,199
the s boxes in

189
00:06:19,199 --> 00:06:20,560
rap 13

190
00:06:20,560 --> 00:06:22,560
and i will say this

191
00:06:22,560 --> 00:06:24,639
took significantly more than six seconds

192
00:06:24,639 --> 00:06:27,360
on a laptop uh it is surprising that

193
00:06:27,360 --> 00:06:30,960
this is possible uh given that the

194
00:06:30,960 --> 00:06:32,160
number of

195
00:06:32,160 --> 00:06:34,479
permutations of

196
00:06:34,479 --> 00:06:35,680
uh

197
00:06:35,680 --> 00:06:38,319
eight bits or seven because rat13 is not

198
00:06:38,319 --> 00:06:40,080
actually specified on non-ascii

199
00:06:40,080 --> 00:06:41,280
characters

200
00:06:41,280 --> 00:06:42,479
um

201
00:06:42,479 --> 00:06:44,160
the number of such permutations is far

202
00:06:44,160 --> 00:06:47,680
larger than what you can do with uh six

203
00:06:47,680 --> 00:06:50,400
four-bit block ciphers um there's a

204
00:06:50,400 --> 00:06:51,919
four-bit s-boxes

205
00:06:51,919 --> 00:06:54,400
uh so this is a little surprising that

206
00:06:54,400 --> 00:06:56,960
this works for all except uh braces

207
00:06:56,960 --> 00:06:58,080
brackets

208
00:06:58,080 --> 00:07:02,960
uh pipe backslash uh tilde and uh carrot

209
00:07:02,960 --> 00:07:05,440
um but this actually does work

210
00:07:05,440 --> 00:07:06,400
uh

211
00:07:06,400 --> 00:07:08,479
so i'd like to draw your attention to

212
00:07:08,479 --> 00:07:11,440
these s boxes uh because they look a

213
00:07:11,440 --> 00:07:13,840
little strange and we actually have some

214
00:07:13,840 --> 00:07:15,520
concerns that they might have been

215
00:07:15,520 --> 00:07:17,520
maliciously selected based on their

216
00:07:17,520 --> 00:07:20,479
sparsity and their low algebraic degree

217
00:07:20,479 --> 00:07:22,560
we also noticed a number of non-ideal

218
00:07:22,560 --> 00:07:24,639
properties uh most notably we found a

219
00:07:24,639 --> 00:07:26,160
differential characteristic that holds

220
00:07:26,160 --> 00:07:29,120
with probability one through not just

221
00:07:29,120 --> 00:07:32,560
all uh not just all six faisal rounds in

222
00:07:32,560 --> 00:07:36,319
rot we're through all 72 78 uh feisty

223
00:07:36,319 --> 00:07:38,800
rounds of rod 13 but actually through

224
00:07:38,800 --> 00:07:42,800
all 234 feistel rounds in triple rob 13

225
00:07:42,800 --> 00:07:44,479
which is extremely non-ideal black

226
00:07:44,479 --> 00:07:47,039
cipher behavior um

227
00:07:47,039 --> 00:07:50,000
uh i don't have a slide for it but

228
00:07:50,000 --> 00:07:53,120
using a sap solver

229
00:07:53,120 --> 00:07:54,800
using a sat solver

230
00:07:54,800 --> 00:07:57,599
we were actually able to

231
00:07:57,599 --> 00:08:00,479
solve for the plain text that goes to a

232
00:08:00,479 --> 00:08:03,440
given triple wrap 13 cipher text to

233
00:08:03,440 --> 00:08:06,560
completely break in mere seconds triple

234
00:08:06,560 --> 00:08:08,560
rod 13 on a laptop

235
00:08:08,560 --> 00:08:09,919
so again i'll ask you to use your

236
00:08:09,919 --> 00:08:11,919
imagination because pdfs only give

237
00:08:11,919 --> 00:08:13,280
arbitrary code execution when you don't

238
00:08:13,280 --> 00:08:14,560
want them to

239
00:08:14,560 --> 00:08:15,680
um

240
00:08:15,680 --> 00:08:18,080
so and

241
00:08:18,879 --> 00:08:23,199
there we have it in three seconds uh we

242
00:08:23,199 --> 00:08:27,120
have broken triple rod 13. uh i will say

243
00:08:27,120 --> 00:08:29,520
before you ask yes this is triple wrap

244
00:08:29,520 --> 00:08:33,679
13 in ecb mode as you can probably tell

245
00:08:33,679 --> 00:08:36,080
uh this is believe it or not uh still

246
00:08:36,080 --> 00:08:37,519
the most common mode of operation for

247
00:08:37,519 --> 00:08:39,360
triple rod 13 in practice even though we

248
00:08:39,360 --> 00:08:42,640
all know that triple rod 13 gcm over a

249
00:08:42,640 --> 00:08:44,640
two to the eight size gal watfield would

250
00:08:44,640 --> 00:08:46,320
be much better or even just triple rod

251
00:08:46,320 --> 00:08:48,240
13 cbc

252
00:08:48,240 --> 00:08:50,640
uh where do we go from here well triple

253
00:08:50,640 --> 00:08:53,440
rod 13 is dead so clearly we all need to

254
00:08:53,440 --> 00:08:55,200
come together to form an advanced

255
00:08:55,200 --> 00:08:57,200
rotation standard that we can replace it

256
00:08:57,200 --> 00:08:59,279
with uh i would like to propose the

257
00:08:59,279 --> 00:09:01,120
alternative solution that we destroy all

258
00:09:01,120 --> 00:09:02,480
laptops

259
00:09:02,480 --> 00:09:05,720
thank you

260
00:09:27,440 --> 00:09:28,720
test

261
00:09:28,720 --> 00:09:30,720
neat

262
00:09:30,720 --> 00:09:32,959
okay do i do the clicky thing i do the

263
00:09:32,959 --> 00:09:35,839
clicky thing by pressing the space right

264
00:09:35,839 --> 00:09:39,040
that's an affirmative cool

265
00:09:39,040 --> 00:09:40,720
all right

266
00:09:40,720 --> 00:09:44,080
there's a clicker there's a clip

267
00:09:45,040 --> 00:09:46,720
that does look clicky

268
00:09:46,720 --> 00:09:49,600
hello i'm thor um

269
00:09:49,600 --> 00:09:52,480
and i wanted to talk to you about a

270
00:09:52,480 --> 00:09:54,560
thing that happened last week which is

271
00:09:54,560 --> 00:09:57,680
that on monday of last week

272
00:09:57,680 --> 00:09:59,920
uh by tweet

273
00:09:59,920 --> 00:10:01,920
the department of the treasury announced

274
00:10:01,920 --> 00:10:05,120
that sanctions were uh imposed on the

275
00:10:05,120 --> 00:10:07,519
application tornado cache and i wanted

276
00:10:07,519 --> 00:10:09,440
to sort of talk about what exactly

277
00:10:09,440 --> 00:10:10,560
happened

278
00:10:10,560 --> 00:10:11,600
and

279
00:10:11,600 --> 00:10:13,760
why it should matter to people in this

280
00:10:13,760 --> 00:10:14,800
room

281
00:10:14,800 --> 00:10:17,519
um so yeah let's kick off

282
00:10:17,519 --> 00:10:20,880
so what is the context so tordeno cache

283
00:10:20,880 --> 00:10:22,560
is a cryptographic protocol a

284
00:10:22,560 --> 00:10:25,760
non-custodial mixer deployed on ethereum

285
00:10:25,760 --> 00:10:27,839
so what that means is that if a user

286
00:10:27,839 --> 00:10:30,160
deposits funds into tornado cache as a

287
00:10:30,160 --> 00:10:32,079
developer an application they can

288
00:10:32,079 --> 00:10:33,519
specify an address they would like to

289
00:10:33,519 --> 00:10:34,959
withdraw them out of but it's not

290
00:10:34,959 --> 00:10:37,200
transparent to any sort of statistical

291
00:10:37,200 --> 00:10:39,279
analysis what the input

292
00:10:39,279 --> 00:10:41,279
led to as an output

293
00:10:41,279 --> 00:10:44,320
if the user is doing it correctly um so

294
00:10:44,320 --> 00:10:45,120
the

295
00:10:45,120 --> 00:10:47,120
uh there's some legal precedent about um

296
00:10:47,120 --> 00:10:49,360
non-custodial applications and code in

297
00:10:49,360 --> 00:10:52,640
general so in 1999 as a sort of like uh

298
00:10:52,640 --> 00:10:54,880
result of the crypto wars so-called

299
00:10:54,880 --> 00:10:58,640
crypto wars of the 90s um source code is

300
00:10:58,640 --> 00:11:00,720
protected under the first amendment that

301
00:11:00,720 --> 00:11:03,040
means that if a developer

302
00:11:03,040 --> 00:11:06,160
produces some code that code is not

303
00:11:06,160 --> 00:11:09,200
illegal it is protected and second there

304
00:11:09,200 --> 00:11:11,360
was some recent guidance by fincen which

305
00:11:11,360 --> 00:11:13,279
is a department at the department of the

306
00:11:13,279 --> 00:11:15,760
treasury of the united states that said

307
00:11:15,760 --> 00:11:17,519
that custodial service providers are

308
00:11:17,519 --> 00:11:19,440
subject to the bank secrecy

309
00:11:19,440 --> 00:11:22,399
uh act and that non-custodial software

310
00:11:22,399 --> 00:11:25,040
providers are not subject to that um and

311
00:11:25,040 --> 00:11:27,600
that was what that specifically means

312
00:11:27,600 --> 00:11:30,160
is that am i speaking quietly

313
00:11:30,160 --> 00:11:32,320
sorry um so yeah what that specifically

314
00:11:32,320 --> 00:11:34,720
means is that if you are a

315
00:11:34,720 --> 00:11:37,680
application that takes custody of assets

316
00:11:37,680 --> 00:11:40,000
and there is a administrator of such

317
00:11:40,000 --> 00:11:42,079
assets you are a custodial service

318
00:11:42,079 --> 00:11:44,800
provider tornado cash is not a custodial

319
00:11:44,800 --> 00:11:46,079
service provider

320
00:11:46,079 --> 00:11:48,399
so all prior sanctions and arrests have

321
00:11:48,399 --> 00:11:50,959
been of custodial service providers

322
00:11:50,959 --> 00:11:53,279
which is in alignment with the pins and

323
00:11:53,279 --> 00:11:55,920
guidance tornado cash is not a custodial

324
00:11:55,920 --> 00:11:57,440
service provider and this should be sort

325
00:11:57,440 --> 00:11:59,839
of alarming for a couple of reasons

326
00:11:59,839 --> 00:12:02,880
so what happened on august 8th which is

327
00:12:02,880 --> 00:12:04,399
last monday

328
00:12:04,399 --> 00:12:06,320
the u.s treasury sanctioned tornado cash

329
00:12:06,320 --> 00:12:07,680
and what this means

330
00:12:07,680 --> 00:12:09,760
is that all of the funds that were in

331
00:12:09,760 --> 00:12:12,560
tornado cash are inherently burned

332
00:12:12,560 --> 00:12:14,320
because that means that anyone who wants

333
00:12:14,320 --> 00:12:16,320
to use such funds

334
00:12:16,320 --> 00:12:18,560
would be violating u.s sanctions law and

335
00:12:18,560 --> 00:12:20,399
what that also means is that if you sent

336
00:12:20,399 --> 00:12:23,760
a transaction from tornado cash to say

337
00:12:23,760 --> 00:12:26,079
brian armstrong the ceo of coinbase

338
00:12:26,079 --> 00:12:27,760
brian armstrong would be in violation of

339
00:12:27,760 --> 00:12:29,360
u.s sanctions law if he was to use all

340
00:12:29,360 --> 00:12:30,720
the funds in his wallet and this has

341
00:12:30,720 --> 00:12:32,880
happened um he hasn't actually sended a

342
00:12:32,880 --> 00:12:35,279
transaction but people have sent funds

343
00:12:35,279 --> 00:12:37,600
from like tornado cash to like

344
00:12:37,600 --> 00:12:40,000
various prominent addresses to say like

345
00:12:40,000 --> 00:12:41,760
hey so now you are in violation of

346
00:12:41,760 --> 00:12:43,200
sanctions law if you use all the money

347
00:12:43,200 --> 00:12:45,760
in your wallet so that's a thing um so

348
00:12:45,760 --> 00:12:48,560
subsequently um usdc the second largest

349
00:12:48,560 --> 00:12:50,079
stablecoin

350
00:12:50,079 --> 00:12:52,720
moved to block all tornado cache users

351
00:12:52,720 --> 00:12:55,839
addresses and since this is um this is

352
00:12:55,839 --> 00:12:57,120
cryptocurrency world they can

353
00:12:57,120 --> 00:12:59,040
programmatically do that so that if you

354
00:12:59,040 --> 00:13:02,320
use tornado if you use um

355
00:13:02,320 --> 00:13:05,200
cryptocurrency um tornado cache from

356
00:13:05,200 --> 00:13:07,760
tornado cash the usdc contract will

357
00:13:07,760 --> 00:13:09,519
automatically block you

358
00:13:09,519 --> 00:13:11,360
um and that means that you are

359
00:13:11,360 --> 00:13:13,680
inherently blocked from using the second

360
00:13:13,680 --> 00:13:16,240
largest stable coin on cryptocurrency

361
00:13:16,240 --> 00:13:18,399
world which is kind of disturbing

362
00:13:18,399 --> 00:13:20,399
subsequently uh github did platform the

363
00:13:20,399 --> 00:13:23,600
tornado cash repo um and on august 12th

364
00:13:23,600 --> 00:13:25,120
that is friday

365
00:13:25,120 --> 00:13:26,880
the um

366
00:13:26,880 --> 00:13:28,720
tornado cash develop a tornado cash

367
00:13:28,720 --> 00:13:31,519
developer was uh arrested in amsterdam

368
00:13:31,519 --> 00:13:33,360
uh for the state of reason that was they

369
00:13:33,360 --> 00:13:36,320
were suspected of

370
00:13:36,320 --> 00:13:39,680
being a tornado gas developer

371
00:13:41,519 --> 00:13:42,959
suspected of

372
00:13:42,959 --> 00:13:45,199
um and that's kind of disturbing because

373
00:13:45,199 --> 00:13:47,360
that means that a developer of a

374
00:13:47,360 --> 00:13:50,560
cryptographic protocol

375
00:13:50,560 --> 00:13:52,240
was arrested for developing a

376
00:13:52,240 --> 00:13:55,360
cryptographic protocol

377
00:13:55,839 --> 00:13:58,880
um so what does this mean for all of us

378
00:13:58,880 --> 00:14:01,279
well we as developers of cryptographic

379
00:14:01,279 --> 00:14:03,839
protocols

380
00:14:04,320 --> 00:14:06,000
are all sort of subject to the similar

381
00:14:06,000 --> 00:14:07,440
assumptions of the tornado cache

382
00:14:07,440 --> 00:14:09,440
developer thank you for my talk here's

383
00:14:09,440 --> 00:14:12,399
some information about

384
00:14:13,360 --> 00:14:14,480
the arrest

385
00:14:14,480 --> 00:14:17,440
if you would like to read more that's my

386
00:14:17,440 --> 00:14:20,000
talk thank you

387
00:14:27,760 --> 00:14:28,839
hello

388
00:14:28,839 --> 00:14:32,720
okay oh yeah that would be really nice

389
00:14:32,720 --> 00:14:34,240
even have slides

390
00:14:34,240 --> 00:14:37,440
hi so i'm john kelsey i work at nist

391
00:14:37,440 --> 00:14:40,639
um i'm also a phd student at k11 that

392
00:14:40,639 --> 00:14:43,360
i'm taking forever on sorry bart um and

393
00:14:43,360 --> 00:14:45,199
this is joint work with stefan lukes and

394
00:14:45,199 --> 00:14:47,360
natalie lang at bauhaus university in

395
00:14:47,360 --> 00:14:49,279
weimar it's about threshold hash based

396
00:14:49,279 --> 00:14:50,639
signatures

397
00:14:50,639 --> 00:14:52,880
so first thing is what's a stateful hash

398
00:14:52,880 --> 00:14:53,839
based signature because that's what i'm

399
00:14:53,839 --> 00:14:55,360
going to be talking about so there's

400
00:14:55,360 --> 00:14:57,440
this really old work from like the late

401
00:14:57,440 --> 00:14:59,120
70s early 80s

402
00:14:59,120 --> 00:15:01,920
about building one time signature out of

403
00:15:01,920 --> 00:15:04,000
hash functions the idea is if you have a

404
00:15:04,000 --> 00:15:05,360
hash function you can use this to

405
00:15:05,360 --> 00:15:06,480
construct

406
00:15:06,480 --> 00:15:08,399
a signature scheme with a public key and

407
00:15:08,399 --> 00:15:09,600
a private key works just like you'd

408
00:15:09,600 --> 00:15:11,920
expect except you can only sign once

409
00:15:11,920 --> 00:15:14,800
with each private key or you'll have a

410
00:15:14,800 --> 00:15:16,079
you know or you'll lose all your

411
00:15:16,079 --> 00:15:17,360
security

412
00:15:17,360 --> 00:15:18,240
so

413
00:15:18,240 --> 00:15:19,839
um you wouldn't think this would be very

414
00:15:19,839 --> 00:15:21,920
useful but it actually turns out to be

415
00:15:21,920 --> 00:15:23,199
because you can put them in a merkle

416
00:15:23,199 --> 00:15:24,639
tree let me see if i can actually use a

417
00:15:24,639 --> 00:15:25,600
laser

418
00:15:25,600 --> 00:15:27,760
no apparently not

419
00:15:27,760 --> 00:15:29,040
um

420
00:15:29,040 --> 00:15:31,040
oh i can wow so you can put them in a

421
00:15:31,040 --> 00:15:33,600
merkle tree and build like generate 2 to

422
00:15:33,600 --> 00:15:36,320
16 of these things build a merkle tree

423
00:15:36,320 --> 00:15:37,680
use the root of the merkle tree as

424
00:15:37,680 --> 00:15:39,199
you're effectively your public key for

425
00:15:39,199 --> 00:15:41,199
the composite key and then anytime you

426
00:15:41,199 --> 00:15:43,040
want to sign you choose a one-time

427
00:15:43,040 --> 00:15:44,959
signature you've never used before very

428
00:15:44,959 --> 00:15:46,480
important you've never used it before

429
00:15:46,480 --> 00:15:48,320
you sign the message and then you also

430
00:15:48,320 --> 00:15:49,440
include along with the one-time

431
00:15:49,440 --> 00:15:51,920
signature the merkle tree path and that

432
00:15:51,920 --> 00:15:53,199
gives you a useful scheme you can

433
00:15:53,199 --> 00:15:55,279
actually do this to solve real problems

434
00:15:55,279 --> 00:15:56,639
sorry i'm not i'm not sure if you can

435
00:15:56,639 --> 00:15:58,240
hear me um

436
00:15:58,240 --> 00:15:59,920
so the big thing to understand about

437
00:15:59,920 --> 00:16:01,279
this the big security issue is you could

438
00:16:01,279 --> 00:16:03,040
sign two things with the same key and if

439
00:16:03,040 --> 00:16:05,199
you do that then you're just doomed

440
00:16:05,199 --> 00:16:08,320
so what we do in this paper is we start

441
00:16:08,320 --> 00:16:09,680
with any kind of stateful hash-based

442
00:16:09,680 --> 00:16:11,040
signature scheme and we use it to

443
00:16:11,040 --> 00:16:12,639
construct a threshold hash based

444
00:16:12,639 --> 00:16:14,480
signature scheme it's a threshold

445
00:16:14,480 --> 00:16:16,320
signature so all the normal properties

446
00:16:16,320 --> 00:16:17,519
you take your

447
00:16:17,519 --> 00:16:19,040
your private key you split it into

448
00:16:19,040 --> 00:16:21,199
shares let's say you give you make six

449
00:16:21,199 --> 00:16:23,360
shares and you make a three out of six

450
00:16:23,360 --> 00:16:26,000
um threshold signature scheme now any

451
00:16:26,000 --> 00:16:28,160
three of your trustees can sign

452
00:16:28,160 --> 00:16:31,199
a consign a message but any two of your

453
00:16:31,199 --> 00:16:33,440
trustees who are compromised can't sign

454
00:16:33,440 --> 00:16:35,040
a message can't learn any private keys

455
00:16:35,040 --> 00:16:37,759
can't do anything okay um threshold

456
00:16:37,759 --> 00:16:39,600
signatures are super useful they

457
00:16:39,600 --> 00:16:41,040
actually be much more widely used than

458
00:16:41,040 --> 00:16:44,160
they are they're very useful both for um

459
00:16:44,160 --> 00:16:46,000
security right because you can have a

460
00:16:46,000 --> 00:16:48,000
device compromised and still survive and

461
00:16:48,000 --> 00:16:50,639
also very useful for um redundancy so if

462
00:16:50,639 --> 00:16:52,160
a device gets dropped off the off a

463
00:16:52,160 --> 00:16:53,440
cliff or something you can still keep

464
00:16:53,440 --> 00:16:55,839
signing

465
00:16:55,839 --> 00:16:58,399
so some details of our scheme um aren't

466
00:16:58,399 --> 00:16:59,920
super important we can support

467
00:16:59,920 --> 00:17:01,759
reasonable size parameters like three of

468
00:17:01,759 --> 00:17:03,519
five or three of six signatures or six

469
00:17:03,519 --> 00:17:05,839
of six signatures if you want 50 of 100

470
00:17:05,839 --> 00:17:07,760
signatures you can't do with our scheme

471
00:17:07,760 --> 00:17:09,679
um it's just not practical you could do

472
00:17:09,679 --> 00:17:11,919
it it would just be horrible um we need

473
00:17:11,919 --> 00:17:14,319
a big shared public string

474
00:17:14,319 --> 00:17:17,039
um and they'd be about two gigabytes for

475
00:17:17,039 --> 00:17:19,679
2-16 signatures and we in the paper we

476
00:17:19,679 --> 00:17:21,359
show some ways that you can get around

477
00:17:21,359 --> 00:17:22,959
that the ways that you can use that you

478
00:17:22,959 --> 00:17:24,640
could just use a cloud service provider

479
00:17:24,640 --> 00:17:27,520
we provide in in our paper protocols

480
00:17:27,520 --> 00:17:29,919
involving an untrusted helper whose only

481
00:17:29,919 --> 00:17:33,360
job is to manage the public string and

482
00:17:33,360 --> 00:17:34,320
who's

483
00:17:34,320 --> 00:17:36,080
who doesn't have the power to forge

484
00:17:36,080 --> 00:17:38,400
signatures do anything bad to you can't

485
00:17:38,400 --> 00:17:39,760
even sense their signatures all he can

486
00:17:39,760 --> 00:17:41,360
do is

487
00:17:41,360 --> 00:17:44,400
is just deny service

488
00:17:44,400 --> 00:17:46,720
other than that constraint we have

489
00:17:46,720 --> 00:17:48,400
extremely good performance it's

490
00:17:48,400 --> 00:17:50,559
symmetric crypto only point-to-point

491
00:17:50,559 --> 00:17:53,200
communications no no broadcast channel

492
00:17:53,200 --> 00:17:54,960
or anything horrible like that um

493
00:17:54,960 --> 00:17:57,120
computationally very cheap the trustees

494
00:17:57,120 --> 00:17:58,720
don't need a lot of memory so it's

495
00:17:58,720 --> 00:18:00,960
actually quite practical

496
00:18:00,960 --> 00:18:03,360
um in terms of security uh we have a

497
00:18:03,360 --> 00:18:05,679
reduction proof we reduce our security

498
00:18:05,679 --> 00:18:07,520
of our scheme to the security of the

499
00:18:07,520 --> 00:18:09,919
underlying hash based signature scheme

500
00:18:09,919 --> 00:18:12,000
and then also the security of our prf so

501
00:18:12,000 --> 00:18:14,000
like if you can distinguish the prf from

502
00:18:14,000 --> 00:18:16,000
a random function or forge signatures

503
00:18:16,000 --> 00:18:16,960
those are

504
00:18:16,960 --> 00:18:18,240
in our bound

505
00:18:18,240 --> 00:18:20,720
um the full papers here is on eprint i

506
00:18:20,720 --> 00:18:22,880
will take i will just say one thing why

507
00:18:22,880 --> 00:18:24,880
should you care the main reason should

508
00:18:24,880 --> 00:18:26,960
care is there are a lot of uses of hash

509
00:18:26,960 --> 00:18:28,960
based signatures in the world where it

510
00:18:28,960 --> 00:18:30,320
would just be a lot nicer to have a

511
00:18:30,320 --> 00:18:32,160
threshold signature so you can actually

512
00:18:32,160 --> 00:18:34,000
get this redundancy property and also

513
00:18:34,000 --> 00:18:37,760
the security property okay um the

514
00:18:37,760 --> 00:18:39,360
these techniques are very practical they

515
00:18:39,360 --> 00:18:41,280
can be implemented now

516
00:18:41,280 --> 00:18:43,039
stefan has a couple of students working

517
00:18:43,039 --> 00:18:44,320
on an implementation so hopefully we'll

518
00:18:44,320 --> 00:18:46,080
have some code up eventually

519
00:18:46,080 --> 00:18:47,520
um and

520
00:18:47,520 --> 00:18:49,360
you know you today

521
00:18:49,360 --> 00:18:51,440
um well after you read the paper

522
00:18:51,440 --> 00:18:54,000
and this also gives you a defense

523
00:18:54,000 --> 00:18:55,600
against the big problem with stateful

524
00:18:55,600 --> 00:18:57,360
hash based signatures right the big

525
00:18:57,360 --> 00:18:58,720
problem with state flashback signatures

526
00:18:58,720 --> 00:19:00,640
is you could reuse that key remember you

527
00:19:00,640 --> 00:19:02,720
have to this job of i have to use a key

528
00:19:02,720 --> 00:19:04,720
i've never used before to sign if you

529
00:19:04,720 --> 00:19:07,120
screw that up which is really easy to do

530
00:19:07,120 --> 00:19:09,120
um in your implementation then you reuse

531
00:19:09,120 --> 00:19:10,720
a key and it's a disaster and people can

532
00:19:10,720 --> 00:19:12,320
forge your signatures

533
00:19:12,320 --> 00:19:13,039
so

534
00:19:13,039 --> 00:19:15,039
um in this case if you use like say a

535
00:19:15,039 --> 00:19:16,160
305

536
00:19:16,160 --> 00:19:18,400
signature scheme all three trustees have

537
00:19:18,400 --> 00:19:20,240
to agree on the key to you on which one

538
00:19:20,240 --> 00:19:22,559
time key to use so only if all three

539
00:19:22,559 --> 00:19:25,520
trustees agree to reuse a key

540
00:19:25,520 --> 00:19:27,600
will you ever reuse a key so this

541
00:19:27,600 --> 00:19:29,679
protects you against

542
00:19:29,679 --> 00:19:30,960
almost any way you could do this

543
00:19:30,960 --> 00:19:32,880
accidentally right so if three trustees

544
00:19:32,880 --> 00:19:34,400
want to screw you over they can but they

545
00:19:34,400 --> 00:19:36,400
already can because it's a three of six

546
00:19:36,400 --> 00:19:39,120
threshold scheme so that's it please uh

547
00:19:39,120 --> 00:19:40,799
check out our paper on eprint we'll

548
00:19:40,799 --> 00:19:42,400
eventually publish it somewhere but i

549
00:19:42,400 --> 00:19:44,320
think this is really useful um we

550
00:19:44,320 --> 00:19:45,760
haven't filed any patents on it and

551
00:19:45,760 --> 00:19:47,360
aren't planning to i can't promise that

552
00:19:47,360 --> 00:19:49,600
nobody else has ever done it um but

553
00:19:49,600 --> 00:19:50,799
please please look into this because i

554
00:19:50,799 --> 00:19:53,200
think it's useful and be cool all right

555
00:19:53,200 --> 00:19:56,919
that's it thanks

556
00:20:16,799 --> 00:20:19,039
so

557
00:20:19,200 --> 00:20:21,120
for my

558
00:20:21,120 --> 00:20:23,120
main program talk yesterday i did

559
00:20:23,120 --> 00:20:25,039
something weird which is talk about

560
00:20:25,039 --> 00:20:26,559
wormholes

561
00:20:26,559 --> 00:20:27,760
um

562
00:20:27,760 --> 00:20:29,120
so

563
00:20:29,120 --> 00:20:32,000
for the rom session talk today i'm also

564
00:20:32,000 --> 00:20:34,240
going to do something weird which is

565
00:20:34,240 --> 00:20:37,039
give a typical boring talk

566
00:20:37,039 --> 00:20:39,440
okay so this talk is

567
00:20:39,440 --> 00:20:42,080
uh happening thanks to my co-authors

568
00:20:42,080 --> 00:20:45,360
vika breckerskin ron nettie

569
00:20:45,360 --> 00:20:46,480
and i will be talking about

570
00:20:46,480 --> 00:20:48,159
computational hardness needed for

571
00:20:48,159 --> 00:20:51,120
quantum cryptography

572
00:20:52,159 --> 00:20:54,320
thank you

573
00:20:54,320 --> 00:20:55,600
so

574
00:20:55,600 --> 00:20:57,120
ef5

575
00:20:57,120 --> 00:20:58,960
this is the quantum hardness that we

576
00:20:58,960 --> 00:21:00,240
consider

577
00:21:00,240 --> 00:21:03,200
what is it well it is um

578
00:21:03,200 --> 00:21:04,240
two

579
00:21:04,240 --> 00:21:06,080
well let's first think of what it is

580
00:21:06,080 --> 00:21:08,240
classically so classically it's

581
00:21:08,240 --> 00:21:10,799
basically just um

582
00:21:10,799 --> 00:21:12,880
um two distributions generated

583
00:21:12,880 --> 00:21:16,240
efficiently by two bpp algorithms

584
00:21:16,240 --> 00:21:18,880
and they satisfy two additional

585
00:21:18,880 --> 00:21:21,840
properties called statistical fairness

586
00:21:21,840 --> 00:21:23,280
which is saying that these two

587
00:21:23,280 --> 00:21:25,760
distributions are statistically far

588
00:21:25,760 --> 00:21:27,760
and computational indistinguishability

589
00:21:27,760 --> 00:21:30,240
which says that these two distributions

590
00:21:30,240 --> 00:21:33,120
are computationally indistinguishable

591
00:21:33,120 --> 00:21:34,480
and

592
00:21:34,480 --> 00:21:37,440
it is a classical result by golrick

593
00:21:37,440 --> 00:21:39,760
which shows that classically this kind

594
00:21:39,760 --> 00:21:42,000
of object is equivalent to one-way

595
00:21:42,000 --> 00:21:44,640
functions and therefore you can it is

596
00:21:44,640 --> 00:21:48,159
also equivalent to commitments

597
00:21:48,480 --> 00:21:51,280
and by the way this efi name is

598
00:21:51,280 --> 00:21:52,480
tentative

599
00:21:52,480 --> 00:21:55,200
if you hate it as much as i do feel free

600
00:21:55,200 --> 00:21:59,559
to suggest a new name to me

601
00:21:59,760 --> 00:22:02,799
but it turns out that there is this

602
00:22:02,799 --> 00:22:04,400
work by yen

603
00:22:04,400 --> 00:22:07,280
which shows that actually quantumly

604
00:22:07,280 --> 00:22:09,760
you can directly go uh go to

605
00:22:09,760 --> 00:22:11,360
statistically binding commitments from

606
00:22:11,360 --> 00:22:14,159
this efi and backwards

607
00:22:14,159 --> 00:22:17,600
so the catch is that by uh the work

608
00:22:17,600 --> 00:22:19,440
that i talked about yesterday with

609
00:22:19,440 --> 00:22:22,080
prabhanja ananth and henri yen and also

610
00:22:22,080 --> 00:22:25,039
the concurrent work by maureen yamakawa

611
00:22:25,039 --> 00:22:27,200
also happened yesterday

612
00:22:27,200 --> 00:22:30,480
we know that quantumly efi cannot give

613
00:22:30,480 --> 00:22:32,880
you one-way functions

614
00:22:32,880 --> 00:22:33,600
so

615
00:22:33,600 --> 00:22:36,640
somehow the work of yen is able to

616
00:22:36,640 --> 00:22:39,280
gather on this without even ever talking

617
00:22:39,280 --> 00:22:41,919
about one-way functions

618
00:22:41,919 --> 00:22:44,240
okay so what did we do

619
00:22:44,240 --> 00:22:47,039
well we basically showed that

620
00:22:47,039 --> 00:22:49,280
we basically extended this equivalence

621
00:22:49,280 --> 00:22:50,880
to other object

622
00:22:50,880 --> 00:22:54,159
so it is known if you have a vfi you can

623
00:22:54,159 --> 00:22:56,559
get commitments lt and pc with some

624
00:22:56,559 --> 00:22:58,320
statistical security

625
00:22:58,320 --> 00:23:00,480
and then we observe that this is

626
00:23:00,480 --> 00:23:02,159
suffices for

627
00:23:02,159 --> 00:23:05,440
qcdk for qma with only one copy of the

628
00:23:05,440 --> 00:23:08,640
witness also you can prove all of qip in

629
00:23:08,640 --> 00:23:10,559
qcdk

630
00:23:10,559 --> 00:23:12,320
on the other hand we also showed that

631
00:23:12,320 --> 00:23:15,919
very weak forms of commitments ot mpc or

632
00:23:15,919 --> 00:23:18,559
qctk also imply efi

633
00:23:18,559 --> 00:23:21,840
these include like

634
00:23:21,840 --> 00:23:24,000
don't satisfy any statistical security

635
00:23:24,000 --> 00:23:25,840
they only give you uh they only have

636
00:23:25,840 --> 00:23:27,600
semi honest security

637
00:23:27,600 --> 00:23:29,280
and even

638
00:23:29,280 --> 00:23:31,919
you can even consider objects like 2pc

639
00:23:31,919 --> 00:23:34,480
with very

640
00:23:34,559 --> 00:23:36,799
weak but still non-trivial functionality

641
00:23:36,799 --> 00:23:39,600
or qcdk for non-trivial languages

642
00:23:39,600 --> 00:23:40,960
and

643
00:23:40,960 --> 00:23:43,039
along this line of thoughts we also get

644
00:23:43,039 --> 00:23:45,360
an auxiliary result saying showing that

645
00:23:45,360 --> 00:23:47,919
quantum computation of zero knowledge is

646
00:23:47,919 --> 00:23:51,600
unconditionally equal honest verifier

647
00:23:51,600 --> 00:23:52,960
qcdk

648
00:23:52,960 --> 00:23:57,000
so that's it thank you

649
00:24:08,559 --> 00:24:09,919
here's your quick key i got it right

650
00:24:09,919 --> 00:24:11,039
here

651
00:24:11,039 --> 00:24:15,320
thank you no no i might be here

652
00:24:16,940 --> 00:24:20,059
[Music]

653
00:24:22,240 --> 00:24:24,080
yes this is a song but we don't need no

654
00:24:24,080 --> 00:24:26,640
stinking external audio if you all help

655
00:24:26,640 --> 00:24:28,240
and you'll know what to do that's right

656
00:24:28,240 --> 00:24:31,039
audience participation

657
00:24:31,039 --> 00:24:34,880
all right we ready ready all right

658
00:24:34,880 --> 00:24:38,000
well we're back at ucsb after a long

659
00:24:38,000 --> 00:24:41,360
absence josh good to be back here great

660
00:24:41,360 --> 00:24:44,080
there do seem to be an an ordinantly

661
00:24:44,080 --> 00:24:46,799
large number of papers at crypto this

662
00:24:46,799 --> 00:24:48,720
year yes indeed brian there are nearly a

663
00:24:48,720 --> 00:24:50,320
hundred papers at crypto this year

664
00:24:50,320 --> 00:24:52,640
nearly a hundred that's a lot do you

665
00:24:52,640 --> 00:24:55,279
know the exact number well in fact there

666
00:24:55,279 --> 00:24:57,279
were 93

667
00:24:57,279 --> 00:24:59,279
regular papers in the program as you

668
00:24:59,279 --> 00:25:00,400
look there

669
00:25:00,400 --> 00:25:02,799
and three best papers that brings us up

670
00:25:02,799 --> 00:25:04,240
to 96

671
00:25:04,240 --> 00:25:06,799
but three of the regular papers in the

672
00:25:06,799 --> 00:25:09,360
program were actually soft mergers so

673
00:25:09,360 --> 00:25:11,200
there were two papers sharing each of

674
00:25:11,200 --> 00:25:12,720
those slots so there's an additional

675
00:25:12,720 --> 00:25:13,679
three

676
00:25:13,679 --> 00:25:16,400
so that gives us a total of

677
00:25:16,400 --> 00:25:20,240
99 papers that's crypto this year

678
00:25:20,240 --> 00:25:23,679
99 papers this year

679
00:25:23,679 --> 00:25:25,760
i found a flaw

680
00:25:25,760 --> 00:25:27,360
time to withdraw

681
00:25:27,360 --> 00:25:30,799
98 papers at crypto this year

682
00:25:30,799 --> 00:25:32,320
91. everyone's saying let's see the

683
00:25:32,320 --> 00:25:35,360
center 98 papers a crypto this year

684
00:25:35,360 --> 00:25:38,320
98 papers this year

685
00:25:38,320 --> 00:25:40,559
just like mine

686
00:25:40,559 --> 00:25:44,400
we should combine 97 papers at crypto

687
00:25:44,400 --> 00:25:45,600
this year

688
00:25:45,600 --> 00:25:49,760
97 papers at crypto this year 97 papers

689
00:25:49,760 --> 00:25:51,360
this year

690
00:25:51,360 --> 00:25:56,520
what about psych what's not to like

691
00:25:57,520 --> 00:25:58,160
oh

692
00:25:58,160 --> 00:25:59,840
[Music]

693
00:25:59,840 --> 00:26:03,200
96 papers at crypto this year

694
00:26:03,200 --> 00:26:06,159
96 papers and crypto this year

695
00:26:06,159 --> 00:26:08,720
96 papers this year

696
00:26:08,720 --> 00:26:11,919
no vaccine card from crypto your bar

697
00:26:11,919 --> 00:26:15,039
95 papers at crypto this year

698
00:26:15,039 --> 00:26:18,880
95 papers at crypto this year 95 papers

699
00:26:18,880 --> 00:26:20,240
this year

700
00:26:20,240 --> 00:26:24,559
drink wine from napa at that kappa 94

701
00:26:24,559 --> 00:26:27,919
papers and crypto this year 94 papers at

702
00:26:27,919 --> 00:26:31,360
crypto this year 94 papers this year

703
00:26:31,360 --> 00:26:34,640
your visas delayed it's all a charade

704
00:26:34,640 --> 00:26:37,600
93 papers at crypto this year

705
00:26:37,600 --> 00:26:41,679
93 papers at crypto this year 93 papers

706
00:26:41,679 --> 00:26:43,120
this year

707
00:26:43,120 --> 00:26:45,600
eat too much shrimp and feel like a

708
00:26:45,600 --> 00:26:46,960
blimp

709
00:26:46,960 --> 00:26:50,320
i need two papers at crypto this year 92

710
00:26:50,320 --> 00:26:53,360
papers at crypto this year 92 papers

711
00:26:53,360 --> 00:26:54,559
this year

712
00:26:54,559 --> 00:26:57,919
apply induction to what has been sung

713
00:26:57,919 --> 00:27:00,159
six april

714
00:27:00,159 --> 00:27:02,720
33

715
00:27:02,799 --> 00:27:05,840
six papers in crypto this year six

716
00:27:05,840 --> 00:27:07,679
papers this year

717
00:27:07,679 --> 00:27:09,600
but you've all is late

718
00:27:09,600 --> 00:27:11,600
and crypto can't wait

719
00:27:11,600 --> 00:27:15,039
no papers being scripted this year

720
00:27:15,039 --> 00:27:17,039
no papers

721
00:27:17,039 --> 00:27:20,720
this year no papers this year

722
00:27:20,720 --> 00:27:23,919
sit on the beach then go home and teach

723
00:27:23,919 --> 00:27:27,840
and submit more papers to crypto next

724
00:27:27,840 --> 00:27:30,840
year

725
00:27:39,600 --> 00:27:43,199
we'll give you until 10 10.

726
00:27:45,360 --> 00:27:48,399
go get more beer

