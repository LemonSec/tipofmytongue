1
00:00:00,030 --> 00:00:05,879
and thanks everyone for staying until

2
00:00:03,149 --> 00:00:08,790
the very end I'm going to present one

3
00:00:05,879 --> 00:00:11,010
more signature scheme which we decide to

4
00:00:08,790 --> 00:00:15,948
call see sign is a joint work with

5
00:00:11,010 --> 00:00:18,359
Stephen Galbraith University of Auckland

6
00:00:15,949 --> 00:00:21,270
this is going to be the easiest

7
00:00:18,359 --> 00:00:23,820
Izod Janee talk you'll ever see I think

8
00:00:21,270 --> 00:00:27,539
because I will stop saying the word I

9
00:00:23,820 --> 00:00:31,980
saw Jenny pretty soon in the talk there

10
00:00:27,539 --> 00:00:33,780
won't be any number theory whatsoever if

11
00:00:31,980 --> 00:00:37,290
you've been following as ogyny a little

12
00:00:33,780 --> 00:00:41,520
bit you know that there's two parody

13
00:00:37,290 --> 00:00:46,920
games paradigms we use one is the aside

14
00:00:41,520 --> 00:00:51,300
eh by Joe and myself back in 2011 which

15
00:00:46,920 --> 00:00:54,210
is the basis for the psych nist

16
00:00:51,300 --> 00:00:56,819
candidate the only candidate based known

17
00:00:54,210 --> 00:01:01,829
as a genus in the nist post quantum

18
00:00:56,820 --> 00:01:04,619
competition it uses you can see it as a

19
00:01:01,829 --> 00:01:07,680
protocol that does random walks in an

20
00:01:04,619 --> 00:01:09,990
isotonic graph and DSO Geograph is the

21
00:01:07,680 --> 00:01:12,570
full super senior isogen ii graph over

22
00:01:09,990 --> 00:01:13,679
FP square which is the same thing as

23
00:01:12,570 --> 00:01:19,139
saying over the algebraic closure

24
00:01:13,680 --> 00:01:21,750
whatever it has very short keys it's the

25
00:01:19,140 --> 00:01:23,729
shortest among gold nist candidates but

26
00:01:21,750 --> 00:01:26,520
it's rather slow it's also the slowest

27
00:01:23,729 --> 00:01:28,020
among colonies candidates on the other

28
00:01:26,520 --> 00:01:31,500
side you have a more recent protocol

29
00:01:28,020 --> 00:01:36,048
suicide well which is both older and

30
00:01:31,500 --> 00:01:39,030
newer it was first invented by Cobain

31
00:01:36,049 --> 00:01:41,250
more than twenty years ago and then

32
00:01:39,030 --> 00:01:44,149
rediscovered ten years later and its

33
00:01:41,250 --> 00:01:47,700
latest incarnation it is called C side

34
00:01:44,149 --> 00:01:51,720
so C aside eh but you should pronounce

35
00:01:47,700 --> 00:01:54,689
it suicide it's also based on random

36
00:01:51,720 --> 00:01:57,750
walks in ISO Janee graphs but this time

37
00:01:54,689 --> 00:02:00,329
it is the F P restricted as autograph so

38
00:01:57,750 --> 00:02:03,509
as autographs restricted to prime fields

39
00:02:00,329 --> 00:02:08,818
its technical different it makes things

40
00:02:03,509 --> 00:02:12,840
very different it is unlike acid eh

41
00:02:08,818 --> 00:02:15,269
if you were if you so the

42
00:02:12,840 --> 00:02:16,800
by dunmer Stein you know that this is a

43
00:02:15,270 --> 00:02:21,180
straightforward generalization of the

44
00:02:16,800 --> 00:02:23,580
fireman whereas s idh is not exactly the

45
00:02:21,180 --> 00:02:26,790
same thing as the firemen and in

46
00:02:23,580 --> 00:02:30,239
particular C side supports static static

47
00:02:26,790 --> 00:02:32,459
he s change whereas si th does not it is

48
00:02:30,239 --> 00:02:35,610
based on a more natural security

49
00:02:32,459 --> 00:02:37,890
assumption depending on how you feel

50
00:02:35,610 --> 00:02:40,560
about this huge assumptions of course it

51
00:02:37,890 --> 00:02:43,349
has even shorter keys than s idh but it

52
00:02:40,560 --> 00:02:45,120
is also slower than aside eh this talk

53
00:02:43,349 --> 00:02:48,089
is not about key exchange this talk is

54
00:02:45,120 --> 00:02:50,850
about signatures as idh is known for

55
00:02:48,090 --> 00:02:53,730
having pretty bad signatures there are

56
00:02:50,850 --> 00:02:57,209
slow but much slower than the key

57
00:02:53,730 --> 00:03:00,090
exchange and they are also very large it

58
00:02:57,209 --> 00:03:05,040
is essentially a phyydschy mere kind of

59
00:03:00,090 --> 00:03:08,069
signature protocol which gives one bit

60
00:03:05,040 --> 00:03:10,798
of security per each iteration and we do

61
00:03:08,069 --> 00:03:12,929
not know how to optimize this and since

62
00:03:10,799 --> 00:03:14,030
the one iteration is low 100 iterations

63
00:03:12,930 --> 00:03:16,080
is been slower

64
00:03:14,030 --> 00:03:18,209
this is not what I'm going to talk about

65
00:03:16,080 --> 00:03:20,700
today I'm going to talk about signatures

66
00:03:18,209 --> 00:03:24,600
from C side which is also very bad

67
00:03:20,700 --> 00:03:30,358
protocol but different so just for

68
00:03:24,600 --> 00:03:36,329
something yet so what is seaside just a

69
00:03:30,359 --> 00:03:38,609
short recap so we take a set of super

70
00:03:36,329 --> 00:03:41,220
senior a little curves over a prime

71
00:03:38,609 --> 00:03:43,200
field FP you've probably know about a

72
00:03:41,220 --> 00:03:45,030
little curves what it means to be super

73
00:03:43,200 --> 00:03:46,500
singer is not very important the

74
00:03:45,030 --> 00:03:48,870
important thing is that it's even it's

75
00:03:46,500 --> 00:03:51,930
very easy to recognize one and also we

76
00:03:48,870 --> 00:03:55,920
are ways to produce them so here I just

77
00:03:51,930 --> 00:03:59,130
draw a set of 12 super singer little

78
00:03:55,920 --> 00:04:00,358
curved seams on this site of super

79
00:03:59,130 --> 00:04:02,880
seniority curve you have something

80
00:04:00,359 --> 00:04:06,780
that's called the group action just a

81
00:04:02,880 --> 00:04:12,480
fancy name for some function some law

82
00:04:06,780 --> 00:04:15,780
that on a group G for any element of

83
00:04:12,480 --> 00:04:18,418
this group G associates from one one

84
00:04:15,780 --> 00:04:19,829
associates a pair o curves so for

85
00:04:18,418 --> 00:04:22,680
example in this picture what I'm trying

86
00:04:19,829 --> 00:04:24,960
to represent is that an element small G

87
00:04:22,680 --> 00:04:26,550
of the group capital G is signed in a

88
00:04:24,960 --> 00:04:28,380
one over easy

89
00:04:26,550 --> 00:04:30,180
so for this thing to be called a group

90
00:04:28,380 --> 00:04:33,240
action it must have some compatibility

91
00:04:30,180 --> 00:04:37,350
with the group structure so in

92
00:04:33,240 --> 00:04:39,960
particular as a special case the inverse

93
00:04:37,350 --> 00:04:45,470
element of small G is going to go back

94
00:04:39,960 --> 00:04:48,539
from insects and you can do this on any

95
00:04:45,470 --> 00:04:52,920
curve and essentially what you're asking

96
00:04:48,540 --> 00:04:55,200
is that the group low like de cette or

97
00:04:52,920 --> 00:04:58,200
super Senor curve is essentially a copy

98
00:04:55,200 --> 00:04:59,610
of the group G but where you don't

99
00:04:58,200 --> 00:05:01,320
really know which a little curve

100
00:04:59,610 --> 00:05:04,230
corresponds to which element of the

101
00:05:01,320 --> 00:05:06,510
group and actually there is no notion of

102
00:05:04,230 --> 00:05:11,970
Correspondence there is no preferred way

103
00:05:06,510 --> 00:05:13,919
to have them in Seaside

104
00:05:11,970 --> 00:05:16,560
it is only efficient to evaluate this

105
00:05:13,919 --> 00:05:18,510
group action on some small elements of

106
00:05:16,560 --> 00:05:20,570
the group so I'm not going to tell what

107
00:05:18,510 --> 00:05:23,190
this group is but you already heard

108
00:05:20,570 --> 00:05:25,440
mentions of this group yesterday in

109
00:05:23,190 --> 00:05:27,870
Benjamin's talk this is some class group

110
00:05:25,440 --> 00:05:30,390
and for this class group we only know

111
00:05:27,870 --> 00:05:33,450
how to evaluate this action for elements

112
00:05:30,390 --> 00:05:34,890
that are of small degree and I'm not

113
00:05:33,450 --> 00:05:36,810
going to tell you what I mean by degree

114
00:05:34,890 --> 00:05:38,820
but things like these are polynomials

115
00:05:36,810 --> 00:05:41,040
there's mole polynomials there's large

116
00:05:38,820 --> 00:05:43,290
polynomials but I'm only able to

117
00:05:41,040 --> 00:05:46,320
evaluate the group action for unusually

118
00:05:43,290 --> 00:05:47,970
small degree polynomials so for example

119
00:05:46,320 --> 00:05:50,010
is say that I can do it for degree two

120
00:05:47,970 --> 00:05:53,830
and now I'm drawing in the picture in

121
00:05:50,010 --> 00:05:56,110
blue the action on

122
00:05:53,830 --> 00:05:58,150
on the on the elliptic curves by this

123
00:05:56,110 --> 00:05:59,919
degree two elements and then let's say

124
00:05:58,150 --> 00:06:01,448
maybe degree three so in red I'm going

125
00:05:59,919 --> 00:06:04,270
to draw the action by degree three

126
00:06:01,449 --> 00:06:06,699
elements degree five etc what your tain

127
00:06:04,270 --> 00:06:08,948
is a kind of graph which has lots of

128
00:06:06,699 --> 00:06:12,220
symmetries as you can see and which is

129
00:06:08,949 --> 00:06:14,860
isomorphic to a Cayley graph if you are

130
00:06:12,220 --> 00:06:16,270
more familiar with this terminology so

131
00:06:14,860 --> 00:06:17,800
what's interesting about these graphs of

132
00:06:16,270 --> 00:06:19,960
course they have lots of symmetries and

133
00:06:17,800 --> 00:06:23,080
there are easy and hard problem and

134
00:06:19,960 --> 00:06:25,120
based on these easy problems we can

135
00:06:23,080 --> 00:06:27,008
construct a key exchange so we have a

136
00:06:25,120 --> 00:06:29,380
very good algorithm to essentially

137
00:06:27,009 --> 00:06:32,650
perform random walks in the graph go

138
00:06:29,380 --> 00:06:34,599
from one elliptic curve to another but

139
00:06:32,650 --> 00:06:37,388
we do not have efficient algorithms to

140
00:06:34,599 --> 00:06:39,759
find paths between two given vertices of

141
00:06:37,389 --> 00:06:43,300
the graph and this is the basis for the

142
00:06:39,759 --> 00:06:45,940
seaside key exchange where Alice picks a

143
00:06:43,300 --> 00:06:49,509
random walk in the graph from some

144
00:06:45,940 --> 00:06:52,870
starting vertex to some curve which we

145
00:06:49,509 --> 00:06:54,400
are going to call ei Bob does the same

146
00:06:52,870 --> 00:06:56,379
on each side and it gets to some

147
00:06:54,400 --> 00:06:59,349
elliptic curve EB and then they will

148
00:06:56,379 --> 00:07:01,990
redo each other's walks starting from

149
00:06:59,349 --> 00:07:06,219
each other's public curves to get to

150
00:07:01,990 --> 00:07:07,780
some common shared secret EAB which you

151
00:07:06,219 --> 00:07:10,900
can see the analogy with the Feldman

152
00:07:07,780 --> 00:07:12,758
right you have a action on EB be action

153
00:07:10,900 --> 00:07:14,560
on Nia is the same thing as a be action

154
00:07:12,759 --> 00:07:19,120
on the first curve which I forgot to

155
00:07:14,560 --> 00:07:23,440
draw in the graph ok clear so far now

156
00:07:19,120 --> 00:07:25,509
let's move to signatures and from now on

157
00:07:23,440 --> 00:07:29,229
I can stop really talking about

158
00:07:25,509 --> 00:07:32,380
exogenous and how aunt was groups so

159
00:07:29,229 --> 00:07:33,909
let's make a sigma protocol an

160
00:07:32,380 --> 00:07:36,669
identification protocol from

161
00:07:33,909 --> 00:07:38,169
diffie-hellman standard defilement and

162
00:07:36,669 --> 00:07:39,758
then the signature will come from this

163
00:07:38,169 --> 00:07:42,849
using a standard feed from your

164
00:07:39,759 --> 00:07:44,740
techniques so the key pair is a secret

165
00:07:42,849 --> 00:07:49,210
test and a public element G to the power

166
00:07:44,740 --> 00:07:51,009
s for some generator G of a group and if

167
00:07:49,210 --> 00:07:53,289
you want to sign if you want to identify

168
00:07:51,009 --> 00:07:57,099
yourself you commit to a random element

169
00:07:53,289 --> 00:07:59,529
G to the power R then you get challenged

170
00:07:57,099 --> 00:08:02,649
with one bit which is going to ask you

171
00:07:59,529 --> 00:08:06,880
to either reveal the random element R

172
00:08:02,649 --> 00:08:10,150
which connects G to G power R or

173
00:08:06,880 --> 00:08:14,890
turn evilly the not so random elements

174
00:08:10,150 --> 00:08:16,979
are minus s so a mixture of your random

175
00:08:14,890 --> 00:08:23,020
commitment and of your secret which

176
00:08:16,980 --> 00:08:27,190
relates G power s to G power R so the

177
00:08:23,020 --> 00:08:29,169
verifier receives either R or R minus s

178
00:08:27,190 --> 00:08:35,650
and then verifies that G to the power

179
00:08:29,170 --> 00:08:39,039
the the value R minus bit times s is

180
00:08:35,650 --> 00:08:41,380
equal to G times s the public key power

181
00:08:39,039 --> 00:08:43,929
the bit so this thing is just there or

182
00:08:41,380 --> 00:08:46,900
not because bit is 0 1 equal to the

183
00:08:43,929 --> 00:08:48,959
commitment very easy protocol this is

184
00:08:46,900 --> 00:08:51,760
not what you want to use in practice for

185
00:08:48,960 --> 00:08:53,200
discrete logarithm signatures because

186
00:08:51,760 --> 00:08:56,680
you have a much more efficient signature

187
00:08:53,200 --> 00:08:59,080
using nor signatures but the interesting

188
00:08:56,680 --> 00:09:00,489
thing is with this is that well first of

189
00:08:59,080 --> 00:09:04,510
all this is zero knowledge is pretty

190
00:09:00,490 --> 00:09:06,700
easy to show that because R is a random

191
00:09:04,510 --> 00:09:11,050
element R minus s does not reveal

192
00:09:06,700 --> 00:09:12,300
anything on the secret s and so see the

193
00:09:11,050 --> 00:09:15,339
value C is uniformly distributed

194
00:09:12,300 --> 00:09:16,930
independence on from the secret there is

195
00:09:15,340 --> 00:09:19,540
no information whatsoever on the secret

196
00:09:16,930 --> 00:09:22,150
and you get a secure seniors of protocol

197
00:09:19,540 --> 00:09:23,890
using th a mere and interesting thing is

198
00:09:22,150 --> 00:09:27,340
that this protocol is compatible with

199
00:09:23,890 --> 00:09:31,569
the group action the Feldman so the same

200
00:09:27,340 --> 00:09:33,850
kind of protocol but not in a group but

201
00:09:31,570 --> 00:09:36,340
when a group acts on a set like that

202
00:09:33,850 --> 00:09:39,040
before a group G acting on the set oval

203
00:09:36,340 --> 00:09:41,140
it occurs and you can see the basic

204
00:09:39,040 --> 00:09:43,750
scheme you have a starting a little

205
00:09:41,140 --> 00:09:46,150
curve a one your secret is some element

206
00:09:43,750 --> 00:09:48,730
G to the power s goes to some public

207
00:09:46,150 --> 00:09:50,260
curve es and then you commit to some

208
00:09:48,730 --> 00:09:52,570
random curve and then you reveal either

209
00:09:50,260 --> 00:09:54,550
one or the other path to the curve so

210
00:09:52,570 --> 00:09:58,480
this is really revealing paths in Anna's

211
00:09:54,550 --> 00:10:01,359
ogyny graphs okay but what's the trouble

212
00:09:58,480 --> 00:10:04,630
with this protocol and we won't really

213
00:10:01,360 --> 00:10:07,210
do it with see side the progress is that

214
00:10:04,630 --> 00:10:08,320
we are using a group of which we do not

215
00:10:07,210 --> 00:10:10,570
know the group structure

216
00:10:08,320 --> 00:10:13,420
so in particular we have no element

217
00:10:10,570 --> 00:10:14,740
small G like in in this picture which

218
00:10:13,420 --> 00:10:16,390
would be a generator of the group

219
00:10:14,740 --> 00:10:18,130
actually we don't know generators for

220
00:10:16,390 --> 00:10:20,800
the group and we are not even allowed to

221
00:10:18,130 --> 00:10:22,749
compute G power s because we only allow

222
00:10:20,800 --> 00:10:26,170
to use a small degree elements if your

223
00:10:22,749 --> 00:10:28,689
ego so we must represent the group

224
00:10:26,170 --> 00:10:31,959
differently and in Seaside Secrets look

225
00:10:28,689 --> 00:10:35,319
like a product of a different small

226
00:10:31,959 --> 00:10:38,018
degree group elements each to some

227
00:10:35,319 --> 00:10:40,559
exponent and the secrets really are only

228
00:10:38,019 --> 00:10:43,720
going to be the exponents here this

229
00:10:40,559 --> 00:10:46,480
small s to small s 3 the exponents to

230
00:10:43,720 --> 00:10:48,910
this fixed basis of generators of the

231
00:10:46,480 --> 00:10:50,470
group so in this protocol the basis is

232
00:10:48,910 --> 00:10:51,819
completely fixed that's some public

233
00:10:50,470 --> 00:10:54,069
parameter and the only thing that is

234
00:10:51,819 --> 00:10:57,610
secret is this vector of exponents which

235
00:10:54,069 --> 00:10:59,498
is going to be a sequence of positive

236
00:10:57,610 --> 00:11:02,379
and negative and negative numbers

237
00:10:59,499 --> 00:11:04,179
between some bounds minus BM B and you

238
00:11:02,379 --> 00:11:06,819
won't end of them of course you have to

239
00:11:04,179 --> 00:11:10,569
choose the size of your key space

240
00:11:06,819 --> 00:11:12,040
accordingly to your security so this is

241
00:11:10,569 --> 00:11:15,509
what I mean by large enough then we will

242
00:11:12,040 --> 00:11:18,879
discuss how much large must this box be

243
00:11:15,509 --> 00:11:22,029
and then now your signature is just you

244
00:11:18,879 --> 00:11:25,149
take two elements R and s are is a Seikh

245
00:11:22,029 --> 00:11:27,309
R is a random commitment S is the secret

246
00:11:25,149 --> 00:11:29,920
and you want to add them the problem is

247
00:11:27,309 --> 00:11:32,829
both are nets are vectors in some boxes

248
00:11:29,920 --> 00:11:34,990
but when you add or subtract them you

249
00:11:32,829 --> 00:11:37,420
are going to start leaking something or

250
00:11:34,990 --> 00:11:39,639
your private key because so let's say

251
00:11:37,420 --> 00:11:41,649
this is s this is my secret and let's

252
00:11:39,639 --> 00:11:43,600
look for example what happens here you

253
00:11:41,649 --> 00:11:45,459
see I have this vector which goes out of

254
00:11:43,600 --> 00:11:47,319
the box so this is really telling me

255
00:11:45,459 --> 00:11:50,018
that the secret was very close to the

256
00:11:47,319 --> 00:11:51,549
boundary of the box yeah this one this

257
00:11:50,019 --> 00:11:54,639
coefficient was close to the boundary of

258
00:11:51,549 --> 00:11:56,379
the box so for example here not leanin

259
00:11:54,639 --> 00:11:58,059
leaking anything on the secret key but

260
00:11:56,379 --> 00:12:00,819
all those things that go beyond the box

261
00:11:58,059 --> 00:12:02,350
say something on the secret so if you

262
00:12:00,819 --> 00:12:04,089
read these a couple of times you will

263
00:12:02,350 --> 00:12:07,540
essentially leak although all of your

264
00:12:04,089 --> 00:12:09,429
secret so this is not going to work so

265
00:12:07,540 --> 00:12:12,009
what's the fix well there's two possible

266
00:12:09,429 --> 00:12:15,730
fixes one which was already proposed by

267
00:12:12,009 --> 00:12:17,769
avenge purely theoretically which is to

268
00:12:15,730 --> 00:12:20,470
just stop complaining and compute the

269
00:12:17,769 --> 00:12:22,269
group structure which is something that

270
00:12:20,470 --> 00:12:22,980
this kind of doable for these class

271
00:12:22,269 --> 00:12:25,480
groups

272
00:12:22,980 --> 00:12:26,860
it's very computationally intensive and

273
00:12:25,480 --> 00:12:29,110
actually even asymptotical is not so

274
00:12:26,860 --> 00:12:29,740
nice because it's a sub exponential

275
00:12:29,110 --> 00:12:34,779
algorithm

276
00:12:29,740 --> 00:12:37,930
it's a l1 1/2 algorithm but it's doable

277
00:12:34,779 --> 00:12:40,569
and it was just done last week by

278
00:12:37,930 --> 00:12:42,519
Berlin's Klein Unionville cutter and

279
00:12:40,569 --> 00:12:45,639
you've seen a presentation at the RAM

280
00:12:42,519 --> 00:12:48,850
session on this protocol that's even the

281
00:12:45,639 --> 00:12:51,490
winner of the RAM session of words the

282
00:12:48,850 --> 00:12:54,670
product is called si si well sorry si

283
00:12:51,490 --> 00:12:59,069
fish and you can read more on it at this

284
00:12:54,670 --> 00:13:01,540
imprint URL it has decent parameters

285
00:12:59,069 --> 00:13:05,199
decently short signatures not so fast

286
00:13:01,540 --> 00:13:08,349
but definitely usable if you wish at the

287
00:13:05,199 --> 00:13:10,839
128 bits classical security 64 quantum

288
00:13:08,350 --> 00:13:14,589
security technical is not the post

289
00:13:10,839 --> 00:13:16,480
quantum protocol because the parameter

290
00:13:14,589 --> 00:13:18,040
generation is sub exponential time but

291
00:13:16,480 --> 00:13:20,889
also the quantum attack is about

292
00:13:18,040 --> 00:13:23,949
exponential time so you have this weird

293
00:13:20,889 --> 00:13:25,420
situation where you generate parameters

294
00:13:23,949 --> 00:13:26,620
in the same time that it would take for

295
00:13:25,420 --> 00:13:28,209
a quantum computer to attack the

296
00:13:26,620 --> 00:13:29,589
protocol except that of course there's a

297
00:13:28,209 --> 00:13:31,300
difference between classical and one new

298
00:13:29,589 --> 00:13:34,509
computers so you can do this thing right

299
00:13:31,300 --> 00:13:36,279
now in the future when we have real

300
00:13:34,509 --> 00:13:37,870
working one Numa builders parameter

301
00:13:36,279 --> 00:13:39,339
generation will take polynomial time on

302
00:13:37,870 --> 00:13:41,170
a quantum computers so this thing

303
00:13:39,339 --> 00:13:43,470
becomes interesting again so this is

304
00:13:41,170 --> 00:13:47,069
more like a post post quantum protocol

305
00:13:43,470 --> 00:13:49,720
the RSA of the quantum world if you wish

306
00:13:47,069 --> 00:13:52,269
but this is not what this work is about

307
00:13:49,720 --> 00:13:56,350
this is about the other way of doing

308
00:13:52,269 --> 00:13:57,850
things which is to hide this leakage by

309
00:13:56,350 --> 00:13:59,680
using a very well-known technique which

310
00:13:57,850 --> 00:14:02,139
is called fire Shamir with aborts and

311
00:13:59,680 --> 00:14:05,019
which is also due to by Chesky so in

312
00:14:02,139 --> 00:14:08,939
this session with the Chesky beats MPC 2

313
00:14:05,019 --> 00:14:12,819
2 1 which implies a huge increase in

314
00:14:08,939 --> 00:14:15,279
signature size and time and which we can

315
00:14:12,819 --> 00:14:17,469
compromise a little bit by increasing in

316
00:14:15,279 --> 00:14:19,839
an unreasonable way the public key and

317
00:14:17,470 --> 00:14:22,990
so this is what the rest of this talk is

318
00:14:19,839 --> 00:14:25,149
about so what is this fire chummy with

319
00:14:22,990 --> 00:14:27,160
abort the problem you saw before was

320
00:14:25,149 --> 00:14:29,889
that when I was going outside of the box

321
00:14:27,160 --> 00:14:32,019
I was leaking things on the secret so

322
00:14:29,889 --> 00:14:34,149
the idea now is to still keep sampling

323
00:14:32,019 --> 00:14:36,970
the secret size inside this sandbox

324
00:14:34,149 --> 00:14:39,459
between minus B & B however the

325
00:14:36,970 --> 00:14:42,069
ephemeral secrets are these commitment

326
00:14:39,459 --> 00:14:44,709
secrets are going to be samples in a

327
00:14:42,069 --> 00:14:48,610
much larger box for some parameter Delta

328
00:14:44,709 --> 00:14:51,750
between Delta plus 1 times minus B and

329
00:14:48,610 --> 00:14:55,000
plus one x plus B so here's the picture

330
00:14:51,750 --> 00:14:58,810
here is your secret and here is your

331
00:14:55,000 --> 00:15:01,420
random vector and you still are going to

332
00:14:58,810 --> 00:15:03,969
have problems when your vectors get out

333
00:15:01,420 --> 00:15:06,430
of the bounds however what you do is

334
00:15:03,970 --> 00:15:08,740
that you just stop answering questions

335
00:15:06,430 --> 00:15:11,050
when this happens so in this situation

336
00:15:08,740 --> 00:15:13,660
you see when I subtract this vector from

337
00:15:11,050 --> 00:15:15,670
this vector I end up with a couple of

338
00:15:13,660 --> 00:15:17,769
vectors getting out of the bounds I will

339
00:15:15,670 --> 00:15:20,920
just refuse to sign and I will restart

340
00:15:17,769 --> 00:15:23,589
the protocol and the game is to choose

341
00:15:20,920 --> 00:15:25,420
this parameter Delta large enough that

342
00:15:23,589 --> 00:15:27,850
this rejection probability is low enough

343
00:15:25,420 --> 00:15:30,219
so if you do this protocol you can prove

344
00:15:27,850 --> 00:15:32,980
that whenever you win at this game of

345
00:15:30,220 --> 00:15:35,890
only revealing things when they are not

346
00:15:32,980 --> 00:15:38,800
dangerous then your distribution of the

347
00:15:35,890 --> 00:15:40,630
vector R - secret is uniform and so does

348
00:15:38,800 --> 00:15:42,310
not reveal anything on the secret and so

349
00:15:40,630 --> 00:15:43,930
you are zero knowledge again and so you

350
00:15:42,310 --> 00:15:47,439
can do future myrin as you know just

351
00:15:43,930 --> 00:15:49,209
protocol you're happy you're secure so

352
00:15:47,440 --> 00:15:51,100
the only problem that's left to do is to

353
00:15:49,209 --> 00:15:53,739
set this parameter Delta which is not

354
00:15:51,100 --> 00:15:56,440
very hard if you're gaming at lambda

355
00:15:53,740 --> 00:16:00,760
bits of security so think lambda 128

356
00:15:56,440 --> 00:16:02,470
then you need to have this box Delta

357
00:16:00,760 --> 00:16:05,890
times beta Delta plus 1 times beta

358
00:16:02,470 --> 00:16:08,199
should be large enough to contain lambda

359
00:16:05,890 --> 00:16:13,930
your security parameters time times m

360
00:16:08,199 --> 00:16:15,880
and was the length of your vectors for

361
00:16:13,930 --> 00:16:18,670
ejection probability we goes below which

362
00:16:15,880 --> 00:16:21,160
goes below 1/3 so this means that the

363
00:16:18,670 --> 00:16:23,529
signature slice is going to be quite

364
00:16:21,160 --> 00:16:26,290
larger because now you need lambda times

365
00:16:23,529 --> 00:16:29,470
and coefficients which are in much

366
00:16:26,290 --> 00:16:31,620
larger boxes and even worse your

367
00:16:29,470 --> 00:16:34,089
signature time is going to depend

368
00:16:31,620 --> 00:16:36,760
quadratically in your security parameter

369
00:16:34,089 --> 00:16:38,350
and in the length of your secret so when

370
00:16:36,760 --> 00:16:40,600
you really put real numbers into this

371
00:16:38,350 --> 00:16:43,600
you get something that has like say at

372
00:16:40,600 --> 00:16:46,360
the 128-bit classical security parameter

373
00:16:43,600 --> 00:16:49,570
public is more secret key is more

374
00:16:46,360 --> 00:16:51,279
signature size pretty bad is 2 is 20

375
00:16:49,570 --> 00:16:53,410
kilo bytes and very fine time is

376
00:16:51,279 --> 00:16:55,209
horrible is 10 hours estimated of course

377
00:16:53,410 --> 00:16:56,589
we didn't run this computation and sign

378
00:16:55,209 --> 00:17:00,729
in time you get three times as much

379
00:16:56,589 --> 00:17:03,040
because 1.2 times of those 3-1 times of

380
00:17:00,730 --> 00:17:05,370
the three you reject

381
00:17:03,040 --> 00:17:10,270
[Music]

382
00:17:05,369 --> 00:17:12,188
and so here comes the idea to get this

383
00:17:10,270 --> 00:17:15,879
compromise to try to make these things

384
00:17:12,189 --> 00:17:18,549
more efficient so let's have a new look

385
00:17:15,880 --> 00:17:21,160
at the protocol so our key secret key is

386
00:17:18,549 --> 00:17:24,790
a secret letter S which represents a

387
00:17:21,160 --> 00:17:28,480
group element which Sam maps a public

388
00:17:24,790 --> 00:17:30,700
curve II won over my public key es am a

389
00:17:28,480 --> 00:17:32,710
challenge it is a bit which asks me to

390
00:17:30,700 --> 00:17:35,020
reveal either the path from the public

391
00:17:32,710 --> 00:17:38,650
parameter to some random commitment or

392
00:17:35,020 --> 00:17:41,770
this path from es to yarn which I will

393
00:17:38,650 --> 00:17:43,720
reveal only facets it and I have to do

394
00:17:41,770 --> 00:17:46,840
this lambda times of course so couple

395
00:17:43,720 --> 00:17:49,419
hundred times four to get a decent

396
00:17:46,840 --> 00:17:52,600
security now the idea is to instead of

397
00:17:49,419 --> 00:17:55,240
using just one public curve as public

398
00:17:52,600 --> 00:17:57,520
key I will use many public curves so

399
00:17:55,240 --> 00:17:59,799
let's say that I use I want to have

400
00:17:57,520 --> 00:18:04,030
instead of just one bit challenge I will

401
00:17:59,799 --> 00:18:06,400
use T bit challenges and each possible

402
00:18:04,030 --> 00:18:08,950
challenge of T bits will be related to

403
00:18:06,400 --> 00:18:11,230
one public a little herbs so I will

404
00:18:08,950 --> 00:18:13,780
instead of having just one secret I will

405
00:18:11,230 --> 00:18:16,000
have to power T secrets and to power T

406
00:18:13,780 --> 00:18:16,510
public herbs and then when I receive a

407
00:18:16,000 --> 00:18:19,120
challenge

408
00:18:16,510 --> 00:18:21,390
I will only reveal the path from one of

409
00:18:19,120 --> 00:18:25,090
these public curves to my commitment

410
00:18:21,390 --> 00:18:26,440
okay so now I have larger challenges my

411
00:18:25,090 --> 00:18:28,720
probability of winning the

412
00:18:26,440 --> 00:18:30,309
zero-knowledge game is lower so I can

413
00:18:28,720 --> 00:18:32,020
reduce the number of iteration the

414
00:18:30,309 --> 00:18:34,510
number of iteration goes from lambda two

415
00:18:32,020 --> 00:18:36,879
lambda divided by T this parameter and

416
00:18:34,510 --> 00:18:39,429
of course the public key increases from

417
00:18:36,880 --> 00:18:41,290
one public curve to 2 power T public

418
00:18:39,429 --> 00:18:42,820
herbs so you see there is a next

419
00:18:41,290 --> 00:18:45,340
financial seperation between how much

420
00:18:42,820 --> 00:18:49,110
again in the signature size and how much

421
00:18:45,340 --> 00:18:52,330
I lose in the public key size and also

422
00:18:49,110 --> 00:18:54,490
let's look at how this parameters must

423
00:18:52,330 --> 00:18:58,510
be sampled before I wanted to win this

424
00:18:54,490 --> 00:18:59,919
game 128 times and my vectors had to

425
00:18:58,510 --> 00:19:01,270
take into account the factor that was

426
00:18:59,919 --> 00:19:03,549
repeating this thing hundred twenty

427
00:19:01,270 --> 00:19:06,970
eight times now I reduced the number of

428
00:19:03,549 --> 00:19:09,549
trials I only have to win this time 128

429
00:19:06,970 --> 00:19:12,280
divided by T times and so I am also

430
00:19:09,549 --> 00:19:14,660
going to reduce the size of the boxes I

431
00:19:12,280 --> 00:19:17,930
need to get a good rejection

432
00:19:14,660 --> 00:19:20,750
good no rejection probability and so

433
00:19:17,930 --> 00:19:22,610
what again is that now my boxes will be

434
00:19:20,750 --> 00:19:24,740
sampled in a much smaller space

435
00:19:22,610 --> 00:19:27,229
and so I will also gain in signature

436
00:19:24,740 --> 00:19:31,100
size more than what you expected and

437
00:19:27,230 --> 00:19:32,300
also in signal in sign in time but of

438
00:19:31,100 --> 00:19:34,040
course the problem with the public is

439
00:19:32,300 --> 00:19:39,110
that the public key is huge I get these

440
00:19:34,040 --> 00:19:43,490
exponential loss in publicly size there

441
00:19:39,110 --> 00:19:46,760
is a technique we can use to to to

442
00:19:43,490 --> 00:19:49,100
repair this it's not the ultimate

443
00:19:46,760 --> 00:19:51,820
solution but it kind of works and it is

444
00:19:49,100 --> 00:19:54,889
to use ideas from hash based signatures

445
00:19:51,820 --> 00:19:56,629
this is my public key now to power T

446
00:19:54,890 --> 00:19:58,970
elements so here T is equal to it's only

447
00:19:56,630 --> 00:20:01,010
four but things like more T equal eight

448
00:19:58,970 --> 00:20:03,110
so I have to power 8 public curves

449
00:20:01,010 --> 00:20:05,060
that's a lot of data what I can do is

450
00:20:03,110 --> 00:20:07,310
that I can start building a hash tree on

451
00:20:05,060 --> 00:20:09,020
top of this public key and this is not

452
00:20:07,310 --> 00:20:11,060
something very easy because this is all

453
00:20:09,020 --> 00:20:13,190
public data so I don't have to overthink

454
00:20:11,060 --> 00:20:15,980
this too much so will hash all the

455
00:20:13,190 --> 00:20:19,370
curves here and then make a Merkle tree

456
00:20:15,980 --> 00:20:22,340
on top of these hashes and this root of

457
00:20:19,370 --> 00:20:25,280
the Merkle tree will be my public key

458
00:20:22,340 --> 00:20:29,419
and now when I sign I not only need to

459
00:20:25,280 --> 00:20:31,730
reveal the path from one of these curves

460
00:20:29,420 --> 00:20:36,230
to my commitment but they will also need

461
00:20:31,730 --> 00:20:39,350
to reveal the Merkel proof of my public

462
00:20:36,230 --> 00:20:41,030
key and so just don't get confused this

463
00:20:39,350 --> 00:20:44,030
is using hash based techniques but this

464
00:20:41,030 --> 00:20:45,860
is all pebbly a public data so this is

465
00:20:44,030 --> 00:20:47,060
not a one-time thing I can do this as

466
00:20:45,860 --> 00:20:50,600
many times as I want

467
00:20:47,060 --> 00:20:54,260
there is no I can we use this public

468
00:20:50,600 --> 00:20:55,429
curvy to as many times as I want so when

469
00:20:54,260 --> 00:20:57,410
you put these things together you get

470
00:20:55,430 --> 00:20:59,870
performances which are still horribly

471
00:20:57,410 --> 00:21:02,540
bad but at least signatures now are

472
00:20:59,870 --> 00:21:05,060
decent you have you get under one

473
00:21:02,540 --> 00:21:08,000
kilobyte of course this is worse than

474
00:21:05,060 --> 00:21:10,310
sea fish but this is post quantum and

475
00:21:08,000 --> 00:21:12,830
not post post quantum public key now

476
00:21:10,310 --> 00:21:14,780
gets huge of course for this kind of

477
00:21:12,830 --> 00:21:16,550
parameter C equals sixteen you have to

478
00:21:14,780 --> 00:21:18,649
power 16 curves so you get to 4

479
00:21:16,550 --> 00:21:22,070
megabytes which you can compress to

480
00:21:18,650 --> 00:21:23,870
Train to 32 bytes using hash trees but

481
00:21:22,070 --> 00:21:25,399
of course then your signature gets

482
00:21:23,870 --> 00:21:28,518
higher because you have to include the

483
00:21:25,400 --> 00:21:31,729
merkel proof so all kinds of compromise

484
00:21:28,519 --> 00:21:33,440
from Isis anyway Heejun is 30 minutes

485
00:21:31,729 --> 00:21:35,839
and signatures takes six minutes so you

486
00:21:33,440 --> 00:21:39,289
are not going to use this anyhow as

487
00:21:35,839 --> 00:21:39,859
integrally this is not too bad but not

488
00:21:39,289 --> 00:21:42,399
too good either

489
00:21:39,859 --> 00:21:44,958
this is growing quadratically in the

490
00:21:42,399 --> 00:21:48,168
secret key in the security parameter

491
00:21:44,959 --> 00:21:51,200
because this is there is a subjects

492
00:21:48,169 --> 00:21:53,659
potential attack you can do other kinds

493
00:21:51,200 --> 00:21:56,289
o confirm compromises last week at PQ

494
00:21:53,659 --> 00:21:59,479
crypt so that companion berkutov i'm

495
00:21:56,289 --> 00:22:01,570
presented some speed sized compromises

496
00:21:59,479 --> 00:22:04,729
where they increase a little bit the

497
00:22:01,570 --> 00:22:06,979
signature size but by doing the

498
00:22:04,729 --> 00:22:08,899
rejection in a different way the gain on

499
00:22:06,979 --> 00:22:11,179
performance so they could get down these

500
00:22:08,899 --> 00:22:13,218
two under the minute for verification

501
00:22:11,179 --> 00:22:14,869
actually 20 seconds for verification

502
00:22:13,219 --> 00:22:17,209
that's estimates i don't think they

503
00:22:14,869 --> 00:22:22,639
implemented it lawrence correct me if

504
00:22:17,209 --> 00:22:25,339
i'm wrong and so yeah lasting security

505
00:22:22,639 --> 00:22:27,199
proofs for this stuff it's mostly the

506
00:22:25,339 --> 00:22:29,839
standard way you so you prove security

507
00:22:27,200 --> 00:22:32,059
of these things so you can do it easily

508
00:22:29,839 --> 00:22:34,820
in the rom and you get an on tight

509
00:22:32,059 --> 00:22:37,009
security proof by rewinding it's much a

510
00:22:34,820 --> 00:22:40,039
trigger to this in the q rom so we just

511
00:22:37,009 --> 00:22:41,599
didn't do that the secret key space you

512
00:22:40,039 --> 00:22:43,129
want to be this large enough so that

513
00:22:41,599 --> 00:22:46,908
there is enough secret keys of course

514
00:22:43,129 --> 00:22:49,519
and for to cover all these autographs

515
00:22:46,909 --> 00:22:51,320
you want this box to be larger than the

516
00:22:49,519 --> 00:22:53,899
square root of the size of your prime

517
00:22:51,320 --> 00:22:56,718
field but this does not guarantee

518
00:22:53,899 --> 00:23:00,018
uniform sampling in the key in the key

519
00:22:56,719 --> 00:23:01,579
space of super seniority curves so you

520
00:23:00,019 --> 00:23:05,809
get some problematic random self

521
00:23:01,579 --> 00:23:08,178
reduction proofs which in the end only

522
00:23:05,809 --> 00:23:10,668
give a strange eyes or genie walk

523
00:23:08,179 --> 00:23:12,739
problem which is a one out of many eyes

524
00:23:10,669 --> 00:23:15,259
or genie walks so this is mostly

525
00:23:12,739 --> 00:23:16,940
artificial we don't think really this

526
00:23:15,259 --> 00:23:18,769
reflects the real security of these

527
00:23:16,940 --> 00:23:20,209
protocols the security of these things

528
00:23:18,769 --> 00:23:23,239
is really based on the standardized

529
00:23:20,209 --> 00:23:26,209
dodging problem but we also have neither

530
00:23:23,239 --> 00:23:28,190
proofs in a different model the lossy

531
00:23:26,209 --> 00:23:31,309
key model of cleats Lubitsch a scheme

532
00:23:28,190 --> 00:23:32,929
Schaffner which work perfectly well both

533
00:23:31,309 --> 00:23:34,459
in the ROM and the to ROM so this is

534
00:23:32,929 --> 00:23:36,320
also the reason why we didn't try to do

535
00:23:34,459 --> 00:23:37,719
this in the ROM which give tight

536
00:23:36,320 --> 00:23:40,700
security proofs

537
00:23:37,719 --> 00:23:42,230
strangely this required to have this

538
00:23:40,700 --> 00:23:44,060
space much more

539
00:23:42,230 --> 00:23:46,130
than the square root of the finite field

540
00:23:44,060 --> 00:23:48,139
so that now we do not simple in the

541
00:23:46,130 --> 00:23:50,780
whole idea graph we simple in as much

542
00:23:48,140 --> 00:23:52,640
smaller subset of dezirian graph but

543
00:23:50,780 --> 00:23:54,710
actually this is a natural choice if you

544
00:23:52,640 --> 00:23:58,370
won't go asymptotically for quantum

545
00:23:54,710 --> 00:24:00,050
security this adds more strange

546
00:23:58,370 --> 00:24:01,610
assumptions like in distinguishability

547
00:24:00,050 --> 00:24:04,070
of public keys which is something we

548
00:24:01,610 --> 00:24:06,050
find totally believable but it's kitsch

549
00:24:04,070 --> 00:24:10,399
completely changes the game well in the

550
00:24:06,050 --> 00:24:12,200
end this is probably just side effects

551
00:24:10,400 --> 00:24:13,670
of the security proofs and not do not

552
00:24:12,200 --> 00:24:15,710
tell much on the real security of this

553
00:24:13,670 --> 00:24:17,120
stuff but at least we can get tight

554
00:24:15,710 --> 00:24:19,310
security proofs in the quraan which is

555
00:24:17,120 --> 00:24:23,239
rather nice and not easy to do for

556
00:24:19,310 --> 00:24:25,690
example for a side eh so just to

557
00:24:23,240 --> 00:24:28,400
conclude take-home message sign message

558
00:24:25,690 --> 00:24:30,500
we combine ideas from iso Jenice

559
00:24:28,400 --> 00:24:31,910
lattices and hash based signatures so

560
00:24:30,500 --> 00:24:33,800
now there's work for all sorts of

561
00:24:31,910 --> 00:24:37,790
cryptography and cryptanalysis in this

562
00:24:33,800 --> 00:24:39,530
room this is far from practical and it's

563
00:24:37,790 --> 00:24:43,220
unlikely to get practical signatures

564
00:24:39,530 --> 00:24:44,930
from this kind of techniques it is more

565
00:24:43,220 --> 00:24:46,670
realistic to use post post quantum

566
00:24:44,930 --> 00:24:48,650
signatures although those have very

567
00:24:46,670 --> 00:24:50,990
complicated parameter setups which make

568
00:24:48,650 --> 00:24:52,400
them not so nice right now if you are a

569
00:24:50,990 --> 00:24:55,460
nice orderly hippie you may want to use

570
00:24:52,400 --> 00:24:57,800
them there's tons of open questions on

571
00:24:55,460 --> 00:25:00,710
classical quantum security security

572
00:24:57,800 --> 00:25:02,510
proofs which are interesting the real

573
00:25:00,710 --> 00:25:06,080
dream for everyone in the community is

574
00:25:02,510 --> 00:25:08,210
to get a one pass post quantum signature

575
00:25:06,080 --> 00:25:11,570
like you would do an or signature on

576
00:25:08,210 --> 00:25:14,510
defeat on discrete log but we don't know

577
00:25:11,570 --> 00:25:16,790
how to do this and there's more open

578
00:25:14,510 --> 00:25:22,900
questions so thanks for your attention

579
00:25:16,790 --> 00:25:22,899
and thanks Luka

580
00:25:24,640 --> 00:25:36,530
any questions for Luca yes leo please

581
00:25:33,260 --> 00:25:39,260
use the microphone on the side Goshen's

582
00:25:36,530 --> 00:25:40,910
you can gain a bit so the leaders

583
00:25:39,260 --> 00:25:44,600
question can use Goshen's instead of

584
00:25:40,910 --> 00:25:48,590
this uniform boxes you can gain a bit on

585
00:25:44,600 --> 00:25:51,409
signature size but not too much so there

586
00:25:48,590 --> 00:25:51,770
is an appendix in the paper go look at

587
00:25:51,410 --> 00:25:53,570
it

588
00:25:51,770 --> 00:25:56,750
I don't remember what it says exactly

589
00:25:53,570 --> 00:25:59,000
what's the gain actually it's more

590
00:25:56,750 --> 00:26:02,870
interesting for isogen is to skew these

591
00:25:59,000 --> 00:26:06,980
vectors to not choose just a square box

592
00:26:02,870 --> 00:26:09,559
but to tweak these coefficients B minus

593
00:26:06,980 --> 00:26:11,690
BM B depending on the degree because the

594
00:26:09,559 --> 00:26:13,580
smaller the degree the faster your eyes

595
00:26:11,690 --> 00:26:20,090
dodging computation is so you work to

596
00:26:13,580 --> 00:26:22,129
give more more larger windows for small

597
00:26:20,090 --> 00:26:24,199
degree parameters and smaller windows

598
00:26:22,130 --> 00:26:27,110
for large degree parameters so you

599
00:26:24,200 --> 00:26:28,880
probably are more interested into making

600
00:26:27,110 --> 00:26:33,010
this isogen computation faster than

601
00:26:28,880 --> 00:26:33,010
trying to really go for optimum size

602
00:26:34,480 --> 00:26:43,000
you're welcome

603
00:26:36,610 --> 00:26:46,280
any more questions thanks for the talk

604
00:26:43,000 --> 00:26:48,170
could you go to slide 9 please this is

605
00:26:46,280 --> 00:26:50,990
gonna be a stupid question but why in

606
00:26:48,170 --> 00:26:53,270
slide 9 you don't

607
00:26:50,990 --> 00:26:54,860
is there a reason other security or

608
00:26:53,270 --> 00:26:57,679
correctness for which you don't prove

609
00:26:54,860 --> 00:27:01,520
instead for all the e1 e2 e3 4 with the

610
00:26:57,679 --> 00:27:08,059
same randomness are that's not going to

611
00:27:01,520 --> 00:27:09,559
change much because what that's going to

612
00:27:08,059 --> 00:27:11,000
make this in your shirt match oh no no

613
00:27:09,559 --> 00:27:12,740
no no completely know this breaks

614
00:27:11,000 --> 00:27:15,470
completely if you give two curves then

615
00:27:12,740 --> 00:27:17,270
you can find everything so if if I give

616
00:27:15,470 --> 00:27:19,580
you all so let's say this if I give you

617
00:27:17,270 --> 00:27:22,730
this one and then this one so if I give

618
00:27:19,580 --> 00:27:25,220
you the works from e2 to ER and from e3

619
00:27:22,730 --> 00:27:28,880
to ER then you can compute a walk from

620
00:27:25,220 --> 00:27:34,400
e2 to e3 and that gives away your

621
00:27:28,880 --> 00:27:35,630
secrets ok soon the thing is as soon as

622
00:27:34,400 --> 00:27:39,050
you find

623
00:27:35,630 --> 00:27:40,370
work between any one of these public

624
00:27:39,050 --> 00:27:43,520
curbs you're done

625
00:27:40,370 --> 00:27:51,770
you found oh yeah so that you lose okay

626
00:27:43,520 --> 00:27:53,180
thanks more questions okay well if not

627
00:27:51,770 --> 00:28:00,770
then that sank Luca and all this because

628
00:27:53,180 --> 00:28:02,540
of the session yeah so I guess this

629
00:28:00,770 --> 00:28:03,800
closes the program of the conference

630
00:28:02,540 --> 00:28:06,610
have a safe trip back and perhaps see

631
00:28:03,800 --> 00:28:06,610
you next year in Croatia

