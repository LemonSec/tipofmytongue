1
00:00:00,030 --> 00:00:04,380
thank you very much so yeah this is a

2
00:00:02,220 --> 00:00:05,370
three-way match this is going to be

3
00:00:04,380 --> 00:00:06,390
about new construction of

4
00:00:05,370 --> 00:00:09,090
non-interactive zero knowledge proof

5
00:00:06,390 --> 00:00:11,280
systems I'm going to present what is a

6
00:00:09,090 --> 00:00:15,330
common result in all three works and

7
00:00:11,280 --> 00:00:17,340
then a wheelie and she will present more

8
00:00:15,330 --> 00:00:21,448
specific results obtained in the other

9
00:00:17,340 --> 00:00:23,340
works so as you're gonna prove that's an

10
00:00:21,449 --> 00:00:25,050
interactive protocol between approver

11
00:00:23,340 --> 00:00:26,400
and the verifier where the prover tries

12
00:00:25,050 --> 00:00:29,070
to convince the very first at some

13
00:00:26,400 --> 00:00:31,409
statement is true the protocol should be

14
00:00:29,070 --> 00:00:33,360
correct it should also be sound meaning

15
00:00:31,410 --> 00:00:34,710
that if the statement is incorrect then

16
00:00:33,360 --> 00:00:35,940
no malicious prover shall be able to

17
00:00:34,710 --> 00:00:37,950
convince the very first that the

18
00:00:35,940 --> 00:00:39,510
statement is true and it shall be zero

19
00:00:37,950 --> 00:00:41,129
knowledge meaning that the very fair

20
00:00:39,510 --> 00:00:43,050
should not learn anything from the

21
00:00:41,129 --> 00:00:46,349
protocol other than the fact that the

22
00:00:43,050 --> 00:00:47,940
statement is true and non interactive

23
00:00:46,350 --> 00:00:49,559
journal approved it's a special kind of

24
00:00:47,940 --> 00:00:51,629
zero knowledge proof that consists of a

25
00:00:49,559 --> 00:00:53,610
single flow from the prover to the

26
00:00:51,629 --> 00:00:56,370
verifier and in this work will be

27
00:00:53,610 --> 00:00:57,750
interested in two special forms of non

28
00:00:56,370 --> 00:01:00,358
interactive Dhiraj proof so in this

29
00:00:57,750 --> 00:01:01,769
first part I will focus on something

30
00:01:00,359 --> 00:01:03,960
that's called designated very fair non

31
00:01:01,770 --> 00:01:08,100
interactive zero knowledge proof or DV

32
00:01:03,960 --> 00:01:10,439
music in short so in UDV music the very

33
00:01:08,100 --> 00:01:12,000
fair is given a secret verification key

34
00:01:10,439 --> 00:01:15,029
he can verify the proof sent by the

35
00:01:12,000 --> 00:01:16,380
prover using some secret information now

36
00:01:15,030 --> 00:01:18,150
here's something that's very important

37
00:01:16,380 --> 00:01:20,130
is that the standard soundness notion

38
00:01:18,150 --> 00:01:21,720
which state that the prover should not

39
00:01:20,130 --> 00:01:24,000
be able to prove an incorrect statement

40
00:01:21,720 --> 00:01:26,580
does not suffice to adequately capture

41
00:01:24,000 --> 00:01:28,799
the security we want from such a system

42
00:01:26,580 --> 00:01:31,020
anymore because it doesn't prevent the

43
00:01:28,799 --> 00:01:32,880
prover from learning information about

44
00:01:31,020 --> 00:01:34,920
the secret verification key of the

45
00:01:32,880 --> 00:01:37,140
verifier by receiving feedbacks on

46
00:01:34,920 --> 00:01:39,150
previous proof so the right security

47
00:01:37,140 --> 00:01:41,970
notion Ford even Isaac and the one we

48
00:01:39,150 --> 00:01:44,250
will consider in all these works is the

49
00:01:41,970 --> 00:01:46,048
notion of unbounded sonís which state

50
00:01:44,250 --> 00:01:48,659
that it should not be feasible to forge

51
00:01:46,049 --> 00:01:51,210
a proof for an incorrect statement even

52
00:01:48,659 --> 00:01:53,520
if you're given arbitrary polynomial

53
00:01:51,210 --> 00:01:56,630
access to a verification Oracle that has

54
00:01:53,520 --> 00:01:59,070
a secret verification key hard-coded

55
00:01:56,630 --> 00:02:01,289
very brief history of Music's and

56
00:01:59,070 --> 00:02:03,689
designated refer musics musics have been

57
00:02:01,290 --> 00:02:05,579
introduced in 1988 and in terms of

58
00:02:03,689 --> 00:02:08,818
assumption we essentially know three

59
00:02:05,579 --> 00:02:09,869
main assumption that imply musics we can

60
00:02:08,818 --> 00:02:13,149
build musics from the factorization

61
00:02:09,869 --> 00:02:14,640
assumption we can build music from

62
00:02:13,150 --> 00:02:16,409
[Music]

63
00:02:14,640 --> 00:02:17,970
from pairing related assumptions and

64
00:02:16,409 --> 00:02:19,319
very recently in a breaker result we

65
00:02:17,970 --> 00:02:23,340
learned that we can build ethics

66
00:02:19,319 --> 00:02:27,690
the l.w assumption without going into

67
00:02:23,340 --> 00:02:29,670
all the details for DVD 6 actually all

68
00:02:27,690 --> 00:02:31,230
the early results regarding the

69
00:02:29,670 --> 00:02:33,359
possibility of buildings is relaxed

70
00:02:31,230 --> 00:02:34,890
versions of musics they had the issue

71
00:02:33,360 --> 00:02:36,930
that the only satisfied bound it's

72
00:02:34,890 --> 00:02:38,700
honest meaning that it was possible to

73
00:02:36,930 --> 00:02:40,890
completely break it's a soundness of the

74
00:02:38,700 --> 00:02:42,839
protocol if the prover was given

75
00:02:40,890 --> 00:02:45,029
feedback and previous proofs by the

76
00:02:42,840 --> 00:02:47,720
verifier so this is not really a

77
00:02:45,030 --> 00:02:50,190
realistic security notion and the

78
00:02:47,720 --> 00:02:52,379
desirable one is unbounded Sun s as I

79
00:02:50,190 --> 00:02:54,180
said and although it has been some

80
00:02:52,379 --> 00:02:56,660
recent work on achieving those relaxed

81
00:02:54,180 --> 00:02:58,739
variant of musics with unbounded Sun s

82
00:02:56,660 --> 00:03:01,560
essentially the main take off is that

83
00:02:58,739 --> 00:03:03,390
entire works it was not known whether

84
00:03:01,560 --> 00:03:05,310
it's possible to build designated or

85
00:03:03,390 --> 00:03:07,140
fair musics with unbounded some nests

86
00:03:05,310 --> 00:03:11,040
from assumptions which are not already

87
00:03:07,140 --> 00:03:12,540
known to imply standard musics and so

88
00:03:11,040 --> 00:03:15,179
this is exactly the problem we solve in

89
00:03:12,540 --> 00:03:16,950
this work we achieve designated refer

90
00:03:15,180 --> 00:03:19,410
musics from an assumption that's not

91
00:03:16,950 --> 00:03:21,119
known to imply standard musics and we

92
00:03:19,410 --> 00:03:22,829
build the dictated word from music for

93
00:03:21,120 --> 00:03:24,620
all of NP from the standard

94
00:03:22,829 --> 00:03:26,760
computational diffie-hellman assumption

95
00:03:24,620 --> 00:03:29,340
there is a second result in our work

96
00:03:26,760 --> 00:03:30,450
that builds a nuna6 from l ee + non

97
00:03:29,340 --> 00:03:32,910
interactive witness indistinguishable

98
00:03:30,450 --> 00:03:34,950
proof for a bounded distance decoding

99
00:03:32,910 --> 00:03:37,410
language but since that was recently

100
00:03:34,950 --> 00:03:40,018
subsumed by the wonderful result of

101
00:03:37,410 --> 00:03:44,190
peickert and Jahan I will not discuss it

102
00:03:40,019 --> 00:03:47,190
in this work in this talk so here is a

103
00:03:44,190 --> 00:03:51,000
road map our starting point is a work by

104
00:03:47,190 --> 00:03:52,799
Dworkin our that builds non-attractive

105
00:03:51,000 --> 00:03:54,690
zremesh proved starting from two main

106
00:03:52,799 --> 00:03:56,250
building blocks the first one is a

107
00:03:54,690 --> 00:03:58,079
cryptographic building block it's called

108
00:03:56,250 --> 00:04:00,269
verifiable - pseudo-random generator and

109
00:03:58,079 --> 00:04:03,000
the second one is an idealized model

110
00:04:00,269 --> 00:04:04,200
it's and this is this is the existence

111
00:04:03,000 --> 00:04:09,260
of non interactive zero knowledge proof

112
00:04:04,200 --> 00:04:10,980
in the hidden bit model so our

113
00:04:09,260 --> 00:04:12,870
construction proceeded in two steps

114
00:04:10,980 --> 00:04:14,578
first we will relax this notion of

115
00:04:12,870 --> 00:04:17,280
verify Bob Sutherland generators that

116
00:04:14,579 --> 00:04:19,320
was invented by Dworkin now by relaxing

117
00:04:17,279 --> 00:04:22,140
the sunniest notion of these VP edges

118
00:04:19,320 --> 00:04:24,599
and generalizing them to the designated

119
00:04:22,140 --> 00:04:26,880
very fair setting and we will show that

120
00:04:24,599 --> 00:04:28,530
this relaxation and generalization

121
00:04:26,880 --> 00:04:31,680
still a low for a construction of

122
00:04:28,530 --> 00:04:34,349
non-interactive of music or designated

123
00:04:31,680 --> 00:04:36,720
river music using in addition musics in

124
00:04:34,350 --> 00:04:38,370
the hidden beat model and at the same

125
00:04:36,720 --> 00:04:41,850
time we will show that actually those

126
00:04:38,370 --> 00:04:44,880
Varric vpag are easier to build and will

127
00:04:41,850 --> 00:04:47,340
provide a construction of relaxed

128
00:04:44,880 --> 00:04:50,000
designated river PRG from the

129
00:04:47,340 --> 00:04:52,289
computational diffie-hellman assumption

130
00:04:50,000 --> 00:04:56,640
so let's go over musics in the hidden

131
00:04:52,290 --> 00:04:58,470
beat model here this I that I shown this

132
00:04:56,640 --> 00:05:02,159
slide denotes what each of the parties

133
00:04:58,470 --> 00:05:03,660
sees so our proffer on top sees a long

134
00:05:02,160 --> 00:05:04,920
hidden bit string so this is a truly

135
00:05:03,660 --> 00:05:06,450
random string that have been sampled

136
00:05:04,920 --> 00:05:09,570
honestly and that is somewhere in the

137
00:05:06,450 --> 00:05:11,670
sky at the same time the very first not

138
00:05:09,570 --> 00:05:13,560
see anything about this hidden bit

139
00:05:11,670 --> 00:05:16,620
string hence the name hidden bit model

140
00:05:13,560 --> 00:05:18,720
and so to design a music in this model

141
00:05:16,620 --> 00:05:21,240
what the prover is allowed to do is

142
00:05:18,720 --> 00:05:23,640
first to write some message any message

143
00:05:21,240 --> 00:05:25,440
of his choice and then to select a

144
00:05:23,640 --> 00:05:27,690
subset of the beat of the hidden bit

145
00:05:25,440 --> 00:05:31,170
string then the prover will send this

146
00:05:27,690 --> 00:05:32,490
message to the verifier and reveal the

147
00:05:31,170 --> 00:05:34,890
location of the hidden bit string

148
00:05:32,490 --> 00:05:36,600
indexed by this subset and you can

149
00:05:34,890 --> 00:05:38,310
really think of it as turning up some

150
00:05:36,600 --> 00:05:40,350
care cuts that were face down so you

151
00:05:38,310 --> 00:05:41,790
cannot put the very the prover cannot

152
00:05:40,350 --> 00:05:46,080
possibly cheat about that in this

153
00:05:41,790 --> 00:05:48,120
idealized model so we know since a work

154
00:05:46,080 --> 00:05:49,919
of a girl appeared on Shamir in 1990

155
00:05:48,120 --> 00:05:51,750
that non-interactive zero knowledge

156
00:05:49,920 --> 00:05:54,800
proof for all of NP do exist

157
00:05:51,750 --> 00:05:57,480
unconditionally in this idealized model

158
00:05:54,800 --> 00:05:59,010
the question is now how to transform a

159
00:05:57,480 --> 00:06:00,900
proof in this idealized model into a

160
00:05:59,010 --> 00:06:03,990
proof in the store that a common or an

161
00:06:00,900 --> 00:06:05,640
string model intuitively the main tool

162
00:06:03,990 --> 00:06:08,040
that we need is something that will

163
00:06:05,640 --> 00:06:10,890
allow the very approver to generate a

164
00:06:08,040 --> 00:06:12,990
long string that should look random that

165
00:06:10,890 --> 00:06:15,300
should also allow him to probably open

166
00:06:12,990 --> 00:06:18,060
some position of the string to the

167
00:06:15,300 --> 00:06:20,760
verifier in a verifiable way and those

168
00:06:18,060 --> 00:06:22,350
opening should not leak any information

169
00:06:20,760 --> 00:06:25,020
about the values that the prover decided

170
00:06:22,350 --> 00:06:26,520
not to open well as you can guess this

171
00:06:25,020 --> 00:06:29,219
is exactly what a verifiable

172
00:06:26,520 --> 00:06:31,740
pseudo-random generator does a vpag that

173
00:06:29,220 --> 00:06:33,979
three algorithm vpag takes as input some

174
00:06:31,740 --> 00:06:37,200
seed and produces a long string of

175
00:06:33,979 --> 00:06:39,960
suriname bits together with a value that

176
00:06:37,200 --> 00:06:40,630
will bind the prover to the seed you can

177
00:06:39,960 --> 00:06:43,150
think of it as we

178
00:06:40,630 --> 00:06:44,770
the commitment to the cedar then there

179
00:06:43,150 --> 00:06:46,690
is a proving algorithm that essentially

180
00:06:44,770 --> 00:06:49,719
allows to show when you have the seed

181
00:06:46,690 --> 00:06:51,100
that some specific position of the

182
00:06:49,720 --> 00:06:53,770
hidden bit string corresponding to the

183
00:06:51,100 --> 00:06:56,710
committed seed is equal to the right

184
00:06:53,770 --> 00:06:58,570
value and the verification algorithm

185
00:06:56,710 --> 00:07:00,340
takes as input this commitment to the

186
00:06:58,570 --> 00:07:03,520
seed takes as input the position of the

187
00:07:00,340 --> 00:07:05,320
hidden bit string a proof and the in

188
00:07:03,520 --> 00:07:07,539
candidate bit and outputs yes or no

189
00:07:05,320 --> 00:07:11,620
indicating whether it accepts or rejects

190
00:07:07,540 --> 00:07:13,990
a proof among the properties we need for

191
00:07:11,620 --> 00:07:15,130
this property for this primitive we want

192
00:07:13,990 --> 00:07:18,310
the seed to be shot

193
00:07:15,130 --> 00:07:20,500
we want our proof the proofs that we do

194
00:07:18,310 --> 00:07:22,870
not to leak any information about the

195
00:07:20,500 --> 00:07:25,800
seed except that the fact that some

196
00:07:22,870 --> 00:07:28,120
specific position of the hidden of the

197
00:07:25,800 --> 00:07:30,880
sharanam string is equal to the right

198
00:07:28,120 --> 00:07:33,010
value and the proof true satisfies some

199
00:07:30,880 --> 00:07:34,390
nests in a very strong sense and I

200
00:07:33,010 --> 00:07:36,760
insist that in the initial work of

201
00:07:34,390 --> 00:07:39,580
Dwarka now some nests had to be a very

202
00:07:36,760 --> 00:07:42,390
strong notion of somnus so the work on

203
00:07:39,580 --> 00:07:44,469
our required that every possible

204
00:07:42,390 --> 00:07:46,630
commitment to the scene even maliciously

205
00:07:44,470 --> 00:07:49,660
formed has to be in the image of the

206
00:07:46,630 --> 00:07:51,159
vpag that for every possible even

207
00:07:49,660 --> 00:07:53,340
maliciously formed commitment to the

208
00:07:51,160 --> 00:07:56,770
seed there has to be unique associated

209
00:07:53,340 --> 00:07:59,289
to the random string and that proof of

210
00:07:56,770 --> 00:08:03,520
opening to incorrect bits should not

211
00:07:59,290 --> 00:08:06,400
exist so our starting point is relaxing

212
00:08:03,520 --> 00:08:07,780
the strong somnus notion first we

213
00:08:06,400 --> 00:08:09,760
entirely dropped the first requirement

214
00:08:07,780 --> 00:08:13,390
we don't require the commitment to the

215
00:08:09,760 --> 00:08:14,860
seed to be all correctly form they can

216
00:08:13,390 --> 00:08:18,490
be banished as we found and not be in

217
00:08:14,860 --> 00:08:21,250
the image of the vpag then instead of

218
00:08:18,490 --> 00:08:23,290
asking incorrect proof not to exist we

219
00:08:21,250 --> 00:08:25,480
only require that proofs for an

220
00:08:23,290 --> 00:08:27,670
incorrect statement are hard to find and

221
00:08:25,480 --> 00:08:30,130
this is crucial because in the

222
00:08:27,670 --> 00:08:31,780
designated very fair setting it's always

223
00:08:30,130 --> 00:08:33,789
possible for the prover to cheat by

224
00:08:31,780 --> 00:08:35,620
guessing the secret key he can use the

225
00:08:33,789 --> 00:08:39,130
secret key the secret verification key

226
00:08:35,620 --> 00:08:41,080
to forge proofs so proofs for an

227
00:08:39,130 --> 00:08:42,880
incorrect statement do always exist we

228
00:08:41,080 --> 00:08:46,420
can only hope to guarantee that they are

229
00:08:42,880 --> 00:08:47,980
hard to find and then if we only had

230
00:08:46,420 --> 00:08:49,719
those requirement then that would be a

231
00:08:47,980 --> 00:08:51,130
trivial primitive it will be satisfied

232
00:08:49,720 --> 00:08:52,780
by something that just takes a PRG

233
00:08:51,130 --> 00:08:54,439
stretches it to observe the random

234
00:08:52,780 --> 00:08:55,910
string and commits to the output bit by

235
00:08:54,440 --> 00:08:58,160
bitte and that would be the commitment

236
00:08:55,910 --> 00:08:59,569
to the seed so we are just a minimal

237
00:08:58,160 --> 00:09:01,550
additional requirement to make this

238
00:08:59,570 --> 00:09:03,170
non-trivial which is that the commitment

239
00:09:01,550 --> 00:09:05,359
to the sheets will be shot Mel Trotter

240
00:09:03,170 --> 00:09:08,719
much shorter than the long solanum

241
00:09:05,360 --> 00:09:11,690
string with this we can actually build

242
00:09:08,720 --> 00:09:14,120
now a music for all of NP the ideas

243
00:09:11,690 --> 00:09:15,980
follow the prover will pick a seed

244
00:09:14,120 --> 00:09:18,320
generate alongside a random string and

245
00:09:15,980 --> 00:09:20,120
XOR it with the common reference string

246
00:09:18,320 --> 00:09:23,300
which is just a long random string and

247
00:09:20,120 --> 00:09:24,860
it will think of this long of this XOR

248
00:09:23,300 --> 00:09:27,620
of two string as being his string in the

249
00:09:24,860 --> 00:09:28,880
hidden bit model and in his head he run

250
00:09:27,620 --> 00:09:31,160
the proof in the hidden bit model

251
00:09:28,880 --> 00:09:33,920
obtaining a message and a subset of

252
00:09:31,160 --> 00:09:36,199
positions to open then the prover sense

253
00:09:33,920 --> 00:09:39,050
to the verifier the commitment to the

254
00:09:36,200 --> 00:09:41,060
seed that he used the message for the

255
00:09:39,050 --> 00:09:42,500
proof in the hidden bit model as a

256
00:09:41,060 --> 00:09:44,359
subset of the position he wants to open

257
00:09:42,500 --> 00:09:46,430
together with the value he wants to open

258
00:09:44,360 --> 00:09:51,140
them to and prove that he's not lying

259
00:09:46,430 --> 00:09:53,359
about opening to this position why is

260
00:09:51,140 --> 00:09:54,830
that secure intuitively that's because

261
00:09:53,360 --> 00:09:57,050
in the hidden bit model our music is

262
00:09:54,830 --> 00:09:59,210
unconditionally sound meaning that with

263
00:09:57,050 --> 00:10:02,150
sufficient parallel repetition we can

264
00:09:59,210 --> 00:10:04,400
ensure that only a tiny negligible

265
00:10:02,150 --> 00:10:06,470
fraction of all possible hidden bit

266
00:10:04,400 --> 00:10:08,120
string for only a tiny negligible

267
00:10:06,470 --> 00:10:10,640
fraction of all possible hidden bit

268
00:10:08,120 --> 00:10:14,720
string there exists proofs for incorrect

269
00:10:10,640 --> 00:10:16,790
statement so what we look at is all

270
00:10:14,720 --> 00:10:18,650
possible Sierras and we say that the

271
00:10:16,790 --> 00:10:21,170
Sierras is close to being a bad string

272
00:10:18,650 --> 00:10:24,140
if there exists a commitment to the seed

273
00:10:21,170 --> 00:10:25,849
such that if you take the the solar on

274
00:10:24,140 --> 00:10:28,760
string associated to this commitment and

275
00:10:25,850 --> 00:10:31,160
you exercise with the common reference

276
00:10:28,760 --> 00:10:34,700
string you obtain a hidden bit string

277
00:10:31,160 --> 00:10:37,579
for which a bad proof exists but since

278
00:10:34,700 --> 00:10:41,480
the commitments are shot and since we

279
00:10:37,580 --> 00:10:43,760
can make the the the fraction of bad

280
00:10:41,480 --> 00:10:45,830
hidden bit string as small as we like by

281
00:10:43,760 --> 00:10:47,480
a Union bound we can ensure that we've

282
00:10:45,830 --> 00:10:48,650
overwhelming probability of other choice

283
00:10:47,480 --> 00:10:51,589
of the common reference string it will

284
00:10:48,650 --> 00:10:53,810
not be close enough to a bad string for

285
00:10:51,589 --> 00:10:56,210
the prover to be able to find a short

286
00:10:53,810 --> 00:10:59,030
commitment to the seed that will allow

287
00:10:56,210 --> 00:11:00,380
him to create a bad hidden bit string so

288
00:10:59,030 --> 00:11:02,120
then the hidden bit string will have to

289
00:11:00,380 --> 00:11:05,510
be correct and the prover cannot cheat

290
00:11:02,120 --> 00:11:07,850
about this message on the subset so he

291
00:11:05,510 --> 00:11:10,520
has to find in correct proof

292
00:11:07,850 --> 00:11:12,470
for the opening if he wants to cheat but

293
00:11:10,520 --> 00:11:15,050
by finding such incorrect proof he will

294
00:11:12,470 --> 00:11:18,380
break the third property of our a

295
00:11:15,050 --> 00:11:21,859
reductionist notion which contradicts

296
00:11:18,380 --> 00:11:23,870
the security notion of our vpag and that

297
00:11:21,860 --> 00:11:26,270
essentially concludes the proof of the

298
00:11:23,870 --> 00:11:28,070
Sunnis the proof of the theorem on each

299
00:11:26,270 --> 00:11:30,800
part essentially reduces to the fact

300
00:11:28,070 --> 00:11:34,930
that the vpag does not leak any

301
00:11:30,800 --> 00:11:38,329
information about the non open position

302
00:11:34,930 --> 00:11:39,650
the main in sensation that we have is

303
00:11:38,330 --> 00:11:43,700
from the computational diffie-hellman

304
00:11:39,650 --> 00:11:46,370
assumption so the idea is quite simple

305
00:11:43,700 --> 00:11:48,230
CDH states that given G G to a G to the

306
00:11:46,370 --> 00:11:52,520
B it should be hard to build you to the

307
00:11:48,230 --> 00:11:53,960
a B actually we will use two well-known

308
00:11:52,520 --> 00:11:56,720
results first

309
00:11:53,960 --> 00:11:59,810
it's known that it's a result by a cache

310
00:11:56,720 --> 00:12:01,580
killed Schoop in 2008 but if you're

311
00:11:59,810 --> 00:12:04,459
given GG to the 80 to the B in G to the

312
00:12:01,580 --> 00:12:06,800
C it is hard to build G to the a B and G

313
00:12:04,460 --> 00:12:09,890
to the AC even if you're given a

314
00:12:06,800 --> 00:12:11,449
specific checking key that allows you to

315
00:12:09,890 --> 00:12:14,030
check the corresponding decisional

316
00:12:11,450 --> 00:12:15,920
problem like checking given G to the a B

317
00:12:14,030 --> 00:12:17,870
and G to the a C that they satisfy the

318
00:12:15,920 --> 00:12:20,020
corresponding decision or relation with

319
00:12:17,870 --> 00:12:23,150
GG to the 80 to the B in G to the see

320
00:12:20,020 --> 00:12:24,920
so essentially what has been shown in

321
00:12:23,150 --> 00:12:27,620
this paper is at the CDH problem the

322
00:12:24,920 --> 00:12:32,930
standard one is equivalent to this gap

323
00:12:27,620 --> 00:12:34,970
to insidious problem so we will use a

324
00:12:32,930 --> 00:12:36,650
seven much one on result I mean

325
00:12:34,970 --> 00:12:40,340
extremely well known result which is the

326
00:12:36,650 --> 00:12:41,630
gold - theorem which is that we can't

327
00:12:40,340 --> 00:12:43,640
find a hard core bit for any

328
00:12:41,630 --> 00:12:45,890
computational problem so we will denote

329
00:12:43,640 --> 00:12:47,870
this is hard core bits so the prime will

330
00:12:45,890 --> 00:12:49,850
rely on is the fact that it should be

331
00:12:47,870 --> 00:12:52,400
hard to find this bit B of G to the a B

332
00:12:49,850 --> 00:12:55,070
G to the a C even given G in G to the a

333
00:12:52,400 --> 00:12:57,260
to the B to the C and a secret key that

334
00:12:55,070 --> 00:12:59,210
allows us to check the decisional

335
00:12:57,260 --> 00:13:02,030
relation between G to the a B G to the a

336
00:12:59,210 --> 00:13:06,440
C and the previous values and this can

337
00:13:02,030 --> 00:13:08,390
be proven to be equivalent to C D H now

338
00:13:06,440 --> 00:13:10,940
in our construction intuitively this G

339
00:13:08,390 --> 00:13:14,000
to the a here will be our commitment to

340
00:13:10,940 --> 00:13:15,770
the seed it will be the seed and we will

341
00:13:14,000 --> 00:13:17,750
fingers will choose a B and G to the see

342
00:13:15,770 --> 00:13:21,059
as being public parameters we will have

343
00:13:17,750 --> 00:13:24,929
many of them as many as the size of the

344
00:13:21,059 --> 00:13:27,179
in this we want to produce analysis bit

345
00:13:24,929 --> 00:13:29,519
B will correspond to the episode a

346
00:13:27,179 --> 00:13:31,139
random beat associated to the commitment

347
00:13:29,519 --> 00:13:37,109
to the C with respect to those public

348
00:13:31,139 --> 00:13:38,699
parameters so how do you open so the

349
00:13:37,109 --> 00:13:40,409
fact that this is to the random that it

350
00:13:38,699 --> 00:13:41,608
cannot be found that reduces easily to

351
00:13:40,409 --> 00:13:43,519
this computational diffie-hellman

352
00:13:41,609 --> 00:13:46,499
assumption by the argument I just gave

353
00:13:43,519 --> 00:13:49,049
and how do you open a position of the

354
00:13:46,499 --> 00:13:51,539
string you simply reveal G to the a B G

355
00:13:49,049 --> 00:13:53,399
to the a C then the very fair can check

356
00:13:51,539 --> 00:13:55,229
that if you take the out core BT obtain

357
00:13:53,399 --> 00:13:57,779
the right bit and at the same time you

358
00:13:55,229 --> 00:14:00,059
can use his twin decisional detail man

359
00:13:57,779 --> 00:14:01,889
checking key to check that you've not

360
00:14:00,059 --> 00:14:03,839
lied by descending G's due to the a B

361
00:14:01,889 --> 00:14:07,499
and G to the AC and this satisfies the

362
00:14:03,839 --> 00:14:09,299
correct decision or relation so that

363
00:14:07,499 --> 00:14:12,389
gives essentially the construction we

364
00:14:09,299 --> 00:14:15,919
like we want we will switch to the net

365
00:14:12,389 --> 00:14:15,919
Atok if you have an equation first

