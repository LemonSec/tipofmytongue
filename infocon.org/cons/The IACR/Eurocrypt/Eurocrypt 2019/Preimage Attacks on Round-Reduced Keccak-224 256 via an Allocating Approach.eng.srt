1
00:00:08,880 --> 00:00:13,960
good morning everyone my name is C Olson

2
00:00:12,400 --> 00:00:16,599
and it's my pleasure to give a

3
00:00:13,960 --> 00:00:19,060
presentation here my topic today is

4
00:00:16,599 --> 00:00:22,329
preimage attack some ground readers key

5
00:00:19,060 --> 00:00:26,130
charge via and allocating approach and

6
00:00:22,329 --> 00:00:29,649
this work is done with my PhD King D and

7
00:00:26,130 --> 00:00:31,570
this talk will contain file pass in the

8
00:00:29,649 --> 00:00:34,000
first pass will you introduce the

9
00:00:31,570 --> 00:00:36,670
background and some men from our main

10
00:00:34,000 --> 00:00:38,230
contributions and in the second part we

11
00:00:36,670 --> 00:00:41,320
will talk about the structure of catch

12
00:00:38,230 --> 00:00:44,199
ax and in a third patch we will give a

13
00:00:41,320 --> 00:00:47,590
brief review of our previous work which

14
00:00:44,200 --> 00:00:50,620
is important to our talk or working this

15
00:00:47,590 --> 00:00:53,860
talk and in the master to pass maybe

16
00:00:50,620 --> 00:00:59,050
we'll take the three round key track key

17
00:00:53,860 --> 00:01:02,019
checks Sri Sri Lanka chance to to for an

18
00:00:59,050 --> 00:01:06,370
example to illustrate our basic and

19
00:01:02,020 --> 00:01:09,310
improve my third so let's see the

20
00:01:06,370 --> 00:01:11,890
overview there are three types of

21
00:01:09,310 --> 00:01:14,470
attacks on hash function preimage attack

22
00:01:11,890 --> 00:01:17,950
collision tag and the second preimage

23
00:01:14,470 --> 00:01:21,640
attack our work focus on the preimage

24
00:01:17,950 --> 00:01:24,220
attack that is given that a stage we

25
00:01:21,640 --> 00:01:28,270
need to firm the method M such that H

26
00:01:24,220 --> 00:01:31,150
equals to Hashem and this is a short

27
00:01:28,270 --> 00:01:33,610
introduction to the cachaça algorithm

28
00:01:31,150 --> 00:01:36,640
which is the most important a greater

29
00:01:33,610 --> 00:01:41,979
than I'd present in hi function at

30
00:01:36,640 --> 00:01:44,140
present and after md5 and sha-1 was

31
00:01:41,979 --> 00:01:46,679
written and NIST

32
00:01:44,140 --> 00:01:50,619
holds the stress free competition and

33
00:01:46,680 --> 00:01:53,320
there are 64 algorithms were submitted

34
00:01:50,619 --> 00:01:56,380
and four years later he qiangwang and

35
00:01:53,320 --> 00:02:02,199
three years later it becomes a three

36
00:01:56,380 --> 00:02:05,259
officially and chassis and the key chunk

37
00:02:02,200 --> 00:02:07,570
had many different instances difference

38
00:02:05,259 --> 00:02:12,080
in the length of the output digest our

39
00:02:07,570 --> 00:02:18,470
work focuses on the instances

40
00:02:12,080 --> 00:02:24,370
instances with deadest of 224 and 250 55

41
00:02:18,470 --> 00:02:27,320
56 this is a short summary of our work

42
00:02:24,370 --> 00:02:29,900
we present a metapod preimage attack

43
00:02:27,320 --> 00:02:32,870
model and this is the first time of

44
00:02:29,900 --> 00:02:36,230
multiple odd method now applied to the

45
00:02:32,870 --> 00:02:39,260
kitchen a griddle and the standard

46
00:02:36,230 --> 00:02:41,750
kitchen algorithm and so we provided the

47
00:02:39,260 --> 00:02:45,530
best a theoretical complexities on three

48
00:02:41,750 --> 00:02:49,040
and four wrong key chart - 2 4 + 2 5 6

49
00:02:45,530 --> 00:02:51,050
and we also give a first practical the

50
00:02:49,040 --> 00:02:55,609
first practical preimage attack on

51
00:02:51,050 --> 00:02:59,060
serology track to the whole and here are

52
00:02:55,610 --> 00:03:02,600
the detailed results we improved the

53
00:02:59,060 --> 00:03:03,820
previous best results by using this

54
00:03:02,600 --> 00:03:06,890
multimodal

55
00:03:03,820 --> 00:03:13,060
method and we can see from the table

56
00:03:06,890 --> 00:03:16,670
that the mmm against the size of 3 round

57
00:03:13,060 --> 00:03:24,020
the improvements are the instances of

58
00:03:16,670 --> 00:03:27,380
three round a significant and here is a

59
00:03:24,020 --> 00:03:31,280
practical attack we successfully found a

60
00:03:27,380 --> 00:03:33,230
second preimage for the message 1 in

61
00:03:31,280 --> 00:03:38,270
practical time and our codes are

62
00:03:33,230 --> 00:03:43,700
publicly available at it hub now let's

63
00:03:38,270 --> 00:03:46,310
talk about the structure of K check the

64
00:03:43,700 --> 00:03:48,560
kitchen algorithm uses famous the

65
00:03:46,310 --> 00:03:50,959
boundary construction it absorbs

66
00:03:48,560 --> 00:03:57,020
messages that are separating two blocks

67
00:03:50,959 --> 00:03:59,840
and squeeze the deadest generally a

68
00:03:57,020 --> 00:04:03,110
stage of the kitchen is represented hide

69
00:03:59,840 --> 00:04:06,920
the cube and the standard version

70
00:04:03,110 --> 00:04:10,430
contains 24 runs and the e-tron consists

71
00:04:06,920 --> 00:04:13,280
of five operations the first operation

72
00:04:10,430 --> 00:04:16,579
is set operation it is linear and

73
00:04:13,280 --> 00:04:18,738
diffuse the piece and the second one is

74
00:04:16,579 --> 00:04:20,120
the low operation it will rotate the

75
00:04:18,738 --> 00:04:23,599
piece along the lanes

76
00:04:20,120 --> 00:04:25,290
it is also linear and the third the

77
00:04:23,600 --> 00:04:28,650
linear

78
00:04:25,290 --> 00:04:32,820
with pie it is a permutation in the

79
00:04:28,650 --> 00:04:36,150
slices and the fourth operation is the

80
00:04:32,820 --> 00:04:39,840
only nonlinear operation chi and the

81
00:04:36,150 --> 00:04:42,960
last one iota as constant to the first

82
00:04:39,840 --> 00:04:47,070
first Elaine add a constant to the first

83
00:04:42,960 --> 00:04:50,090
link and which which she is used to

84
00:04:47,070 --> 00:04:54,000
break the symmetric along the length and

85
00:04:50,090 --> 00:04:56,940
this is the K track the Catholic team

86
00:04:54,000 --> 00:05:00,030
also hold a crunchy crypto preimage and

87
00:04:56,940 --> 00:05:03,360
collision contest to encourage the study

88
00:05:00,030 --> 00:05:06,030
of K check and the instances in this

89
00:05:03,360 --> 00:05:09,030
challenge a weaker and there are

90
00:05:06,030 --> 00:05:15,479
theoretical complexity is only to power

91
00:05:09,030 --> 00:05:18,989
a T and this is the current status of

92
00:05:15,480 --> 00:05:21,780
the challenge owning one fall around the

93
00:05:18,990 --> 00:05:25,200
instance is broken but there are many

94
00:05:21,780 --> 00:05:30,599
lower rungs and broken and our names are

95
00:05:25,200 --> 00:05:33,150
here we found a primitive faith with

96
00:05:30,600 --> 00:05:37,590
eight GPU Cass and his work is dying in

97
00:05:33,150 --> 00:05:40,349
the summer of 2017 but it is still the

98
00:05:37,590 --> 00:05:42,479
last challenge that has been broken and

99
00:05:40,350 --> 00:05:45,030
in the nested next approach we will talk

100
00:05:42,480 --> 00:05:47,730
about the attack and this challenge

101
00:05:45,030 --> 00:05:54,299
because it motivates our multi-mode

102
00:05:47,730 --> 00:05:56,580
matchy-matchy blog mode and this is a

103
00:05:54,300 --> 00:06:03,480
for the third match a brief review of

104
00:05:56,580 --> 00:06:06,030
our pre-birth would basically the

105
00:06:03,480 --> 00:06:08,610
preimage problem equals to solving

106
00:06:06,030 --> 00:06:11,700
polynomial system which you already had

107
00:06:08,610 --> 00:06:14,640
multiple solutions and the challenge the

108
00:06:11,700 --> 00:06:18,000
challenges with lower rungs sought by

109
00:06:14,640 --> 00:06:21,539
the south's our set of sets our directly

110
00:06:18,000 --> 00:06:25,020
and the instance of hare runs with large

111
00:06:21,540 --> 00:06:28,410
stage can be broken by the linearization

112
00:06:25,020 --> 00:06:30,750
of the structure of K charge but for the

113
00:06:28,410 --> 00:06:33,540
sweet round challenge with most list

114
00:06:30,750 --> 00:06:36,419
with small stage the previous

115
00:06:33,540 --> 00:06:40,219
linearization method does not work so we

116
00:06:36,419 --> 00:06:43,919
also use some algebraic technique

117
00:06:40,219 --> 00:06:47,099
and the key step of this work is that we

118
00:06:43,919 --> 00:06:51,869
do not realize all the file output

119
00:06:47,099 --> 00:06:54,569
speeds of the tank operation instead we

120
00:06:51,869 --> 00:06:56,999
linearize parts of the piece from the

121
00:06:54,569 --> 00:06:58,949
structure of key track and the Bellini

122
00:06:56,999 --> 00:07:04,259
writes the other path the other piece

123
00:06:58,949 --> 00:07:06,509
using algebraic operations and the

124
00:07:04,259 --> 00:07:08,659
details about this work are omitted here

125
00:07:06,509 --> 00:07:13,649
we only show the pipeline

126
00:07:08,659 --> 00:07:16,438
at the beginning we said two rows of the

127
00:07:13,649 --> 00:07:18,719
initial state to be wearable and the

128
00:07:16,439 --> 00:07:20,849
others are set with their low and in

129
00:07:18,719 --> 00:07:23,759
order to avoid the mid the different

130
00:07:20,849 --> 00:07:26,429
brought by the operation seat we also

131
00:07:23,759 --> 00:07:30,830
assume the SAMS of the columns to be

132
00:07:26,429 --> 00:07:34,469
constants and this is the first around

133
00:07:30,830 --> 00:07:40,378
the yellow boxes means the means this

134
00:07:34,469 --> 00:07:42,959
piece the yellow boxes means it is a

135
00:07:40,379 --> 00:07:44,879
linear with respect to the unknowns and

136
00:07:42,959 --> 00:07:47,579
the gray one and white ones are

137
00:07:44,879 --> 00:07:50,809
constants we can see that in the end of

138
00:07:47,579 --> 00:07:54,509
the first round or P is a linear

139
00:07:50,809 --> 00:07:57,149
similarly we also assume assume the SAMS

140
00:07:54,509 --> 00:07:59,430
of the cone the sum of the columns as

141
00:07:57,149 --> 00:08:01,919
constants in the second round and in the

142
00:07:59,430 --> 00:08:04,469
end of the second round we notice that

143
00:08:01,919 --> 00:08:07,109
there are several blue boxes meaning

144
00:08:04,469 --> 00:08:09,689
this piece and quadratic bits really

145
00:08:07,110 --> 00:08:13,169
respect to the unknowns and in each

146
00:08:09,689 --> 00:08:16,349
slice there are file and this now

147
00:08:13,169 --> 00:08:20,628
quadratic piece will be diffused to all

148
00:08:16,349 --> 00:08:23,159
the B's after the operation seat and

149
00:08:20,629 --> 00:08:26,279
from the other direction we can

150
00:08:23,159 --> 00:08:29,188
construct 880 quadratic polynomials from

151
00:08:26,279 --> 00:08:32,789
the given digest and now we get a

152
00:08:29,189 --> 00:08:35,759
quadratic polynomial system because they

153
00:08:32,789 --> 00:08:39,630
in this attack because the degrees of

154
00:08:35,759 --> 00:08:42,120
the freedom is very small so we have to

155
00:08:39,630 --> 00:08:44,819
solve this quadratic polynomial using

156
00:08:42,120 --> 00:08:50,130
algebraic techniques and the total

157
00:08:44,819 --> 00:08:52,680
complexity is to power 40 file and it

158
00:08:50,130 --> 00:08:56,699
can be done in practical time this is

159
00:08:52,680 --> 00:08:59,670
our previous work it motivated

160
00:08:56,699 --> 00:09:02,099
multi-block and that next time I see a

161
00:08:59,670 --> 00:09:07,439
basic attack on the sphere on each and

162
00:09:02,100 --> 00:09:15,449
two to four this is our preferred attack

163
00:09:07,439 --> 00:09:17,730
we notice that in the end in the end of

164
00:09:15,449 --> 00:09:20,699
the second four second forward around

165
00:09:17,730 --> 00:09:23,220
there are five quadratic piece in each

166
00:09:20,699 --> 00:09:26,880
slice and these quadratic piece will be

167
00:09:23,220 --> 00:09:29,699
disturbed to all the bits and we have to

168
00:09:26,880 --> 00:09:31,790
tolerate quadratic polynomials and this

169
00:09:29,699 --> 00:09:34,920
is hard to solve

170
00:09:31,790 --> 00:09:37,410
so an edger idea is that if we want to

171
00:09:34,920 --> 00:09:39,630
improve this attack we'd better to

172
00:09:37,410 --> 00:09:43,290
linearize all the piece in the end of

173
00:09:39,630 --> 00:09:47,519
the second room and at a lower cost of

174
00:09:43,290 --> 00:09:50,009
degree of freedom so a question is one

175
00:09:47,519 --> 00:09:53,970
of these quadratic bits are generated

176
00:09:50,009 --> 00:09:57,899
and the coaching and the problem comes

177
00:09:53,970 --> 00:10:00,689
from the request latch the the beauty in

178
00:09:57,899 --> 00:10:02,550
the capacity must be zero and that they

179
00:10:00,689 --> 00:10:07,529
cannot be set to either value so

180
00:10:02,550 --> 00:10:08,910
unknowns so this is our motivation if we

181
00:10:07,529 --> 00:10:12,509
want to linearize

182
00:10:08,910 --> 00:10:14,519
two rungs at with with the lower cost we

183
00:10:12,509 --> 00:10:17,160
must break the limits of from the

184
00:10:14,519 --> 00:10:21,959
capacity and it leads to a multi-block

185
00:10:17,160 --> 00:10:25,880
approach naturally but a key step is

186
00:10:21,959 --> 00:10:28,829
that the multiple of multiple ahkam

187
00:10:25,880 --> 00:10:33,660
approach must had the lower complexity

188
00:10:28,829 --> 00:10:35,939
compared to the one block attack and so

189
00:10:33,660 --> 00:10:39,300
the constraints on the middle state must

190
00:10:35,939 --> 00:10:41,459
be weak and the middle stage is just the

191
00:10:39,300 --> 00:10:43,550
output of the first block and the

192
00:10:41,459 --> 00:10:50,279
initial state of the second block

193
00:10:43,550 --> 00:10:53,459
so how weak from the capacity there are

194
00:10:50,279 --> 00:10:56,610
four hundred four hundred and the 48

195
00:10:53,459 --> 00:10:59,750
constraints and from the deadest we have

196
00:10:56,610 --> 00:11:02,540
two hundred and twenty four constraints

197
00:10:59,750 --> 00:11:04,970
so the constraints on the middle state

198
00:11:02,540 --> 00:11:07,879
must be smaller than the minimal one and

199
00:11:04,970 --> 00:11:11,360
only in this case the multiple architect

200
00:11:07,879 --> 00:11:15,379
can outperform what performs the one

201
00:11:11,360 --> 00:11:18,439
block attack and another case is that

202
00:11:15,379 --> 00:11:22,339
the middle state should also make the

203
00:11:18,439 --> 00:11:25,730
system easier to solve so we started

204
00:11:22,339 --> 00:11:30,920
this way and see which meters did it

205
00:11:25,730 --> 00:11:34,639
should be used and this is the mid this

206
00:11:30,920 --> 00:11:38,990
is the ideal case that is if we set an

207
00:11:34,639 --> 00:11:42,110
initial state like this two rows as a

208
00:11:38,990 --> 00:11:44,149
two unknowns and Row 1 and Row 3 I said

209
00:11:42,110 --> 00:11:48,740
two zeros and the latter low I said to

210
00:11:44,149 --> 00:11:50,660
once we can prove that busy setting we

211
00:11:48,740 --> 00:11:53,750
can linearize all the piece at the end

212
00:11:50,660 --> 00:11:57,230
of the second round and we can obtain

213
00:11:53,750 --> 00:12:00,399
the best two degree of freedom after two

214
00:11:57,230 --> 00:12:06,379
forward run so this is the ideal case

215
00:12:00,399 --> 00:12:10,069
but so the state a cancer-y the middle

216
00:12:06,379 --> 00:12:13,600
state but if we require the output of

217
00:12:10,069 --> 00:12:18,500
the first block to mean to the state a

218
00:12:13,600 --> 00:12:22,189
we must the hell 448 constraints say C

219
00:12:18,500 --> 00:12:26,540
is too expensive so I've seen this we

220
00:12:22,189 --> 00:12:30,410
change our target we realize that to get

221
00:12:26,540 --> 00:12:33,500
the equivalent effect and in the end of

222
00:12:30,410 --> 00:12:37,219
the second round it surfaces to meet the

223
00:12:33,500 --> 00:12:40,399
state B this is a bit either because we

224
00:12:37,220 --> 00:12:41,209
can choose the values of the Sam's of

225
00:12:40,399 --> 00:12:46,610
the columns

226
00:12:41,209 --> 00:12:50,779
during the seed operation and this is

227
00:12:46,610 --> 00:12:54,589
our main theory of this work it proves

228
00:12:50,779 --> 00:12:57,170
that if the if the piece in the state a

229
00:12:54,589 --> 00:13:00,170
prime satisfied the following two

230
00:12:57,170 --> 00:13:03,229
constraints then we will obtain the

231
00:13:00,170 --> 00:13:07,069
state be after the seat operation but

232
00:13:03,230 --> 00:13:10,009
this theorem we do not require the piece

233
00:13:07,069 --> 00:13:12,680
in the capacity of the apron equals to

234
00:13:10,009 --> 00:13:15,649
and not with the arrow strictly in

235
00:13:12,680 --> 00:13:19,670
that we only require the differences

236
00:13:15,649 --> 00:13:24,200
between different rows that is by a

237
00:13:19,670 --> 00:13:26,959
serum we only require piecing the second

238
00:13:24,200 --> 00:13:30,100
row and the foss foss zero a eco and the

239
00:13:26,960 --> 00:13:34,730
national adjusted their complement add

240
00:13:30,100 --> 00:13:37,580
many of the piece in a pram state can be

241
00:13:34,730 --> 00:13:41,540
adjusted by the second method block so

242
00:13:37,580 --> 00:13:43,339
we do not particularly further but

243
00:13:41,540 --> 00:13:46,730
particularly for the first two three

244
00:13:43,339 --> 00:13:49,610
columns in the nasa go so in our attack

245
00:13:46,730 --> 00:13:51,459
we only need to care about the last two

246
00:13:49,610 --> 00:13:54,709
columns of the nest to loss

247
00:13:51,459 --> 00:13:57,560
so next let's see how many constraints

248
00:13:54,709 --> 00:14:01,790
are needed for the for the three round

249
00:13:57,560 --> 00:14:05,660
key check sweet two to four and the

250
00:14:01,790 --> 00:14:09,949
answer is mulling 130 when from the

251
00:14:05,660 --> 00:14:12,890
padding and two times 64 from the

252
00:14:09,950 --> 00:14:17,720
differences and went from the bastard

253
00:14:12,890 --> 00:14:22,310
own culinary polarity well the number

254
00:14:17,720 --> 00:14:25,070
130 is smaller enough and it also makes

255
00:14:22,310 --> 00:14:27,529
the system easier to sow so the

256
00:14:25,070 --> 00:14:32,450
following put procedures and not a

257
00:14:27,529 --> 00:14:36,470
difficult for the first method block we

258
00:14:32,450 --> 00:14:40,130
use Gullu songs method and construct to

259
00:14:36,470 --> 00:14:41,510
the linear system the complexity is to

260
00:14:40,130 --> 00:14:44,930
power 66

261
00:14:41,510 --> 00:14:48,430
this is furthers first a blog and for a

262
00:14:44,930 --> 00:14:51,170
second blog the complexity is 2 power 31

263
00:14:48,430 --> 00:14:54,400
because Opie's are linear before the

264
00:14:51,170 --> 00:14:59,599
kind operation in the service third rung

265
00:14:54,400 --> 00:15:03,189
so put them together to power 66 from

266
00:14:59,600 --> 00:15:08,120
block 1 and 2 power 31 from block 2 and

267
00:15:03,190 --> 00:15:11,270
the complexity is 2 power 66 dominated

268
00:15:08,120 --> 00:15:14,000
by the first block this is better than

269
00:15:11,270 --> 00:15:18,350
the previous best result given Bank

270
00:15:14,000 --> 00:15:21,350
quality also but we noticed that but we

271
00:15:18,350 --> 00:15:24,250
know that the complexity of the first

272
00:15:21,350 --> 00:15:26,860
block is much higher than the second one

273
00:15:24,250 --> 00:15:29,950
so we can improve this attack by

274
00:15:26,860 --> 00:15:33,160
decreasing the complexity of the first

275
00:15:29,950 --> 00:15:38,800
block and increasing the tempo laxity of

276
00:15:33,160 --> 00:15:41,170
the second block how remember the 130

277
00:15:38,800 --> 00:15:43,689
equations transcribed age and the middle

278
00:15:41,170 --> 00:15:48,060
stage we can require them how to

279
00:15:43,690 --> 00:15:51,960
partially and the sis will balance the

280
00:15:48,060 --> 00:15:55,689
complexities between the tooth blocks

281
00:15:51,960 --> 00:16:01,030
and this leads to already improved

282
00:15:55,690 --> 00:16:04,210
attack as we have the required not all

283
00:16:01,030 --> 00:16:08,160
equations hold at the same time we can

284
00:16:04,210 --> 00:16:11,740
compute the theoretical probabilities

285
00:16:08,160 --> 00:16:17,500
when M equations when M equations hold

286
00:16:11,740 --> 00:16:20,710
out of 129 here now to the 130 because

287
00:16:17,500 --> 00:16:23,050
when equation is not important and the

288
00:16:20,710 --> 00:16:26,590
right column shows the theoretical

289
00:16:23,050 --> 00:16:28,599
results we can see that if we want all

290
00:16:26,590 --> 00:16:31,750
the equations hold the probability is

291
00:16:28,600 --> 00:16:34,750
very low but the probability will

292
00:16:31,750 --> 00:16:39,160
increase obviously even if we only

293
00:16:34,750 --> 00:16:43,780
require one equation not holding and in

294
00:16:39,160 --> 00:16:46,959
the middle column is a result is the

295
00:16:43,780 --> 00:16:50,199
practical probability we obtain from the

296
00:16:46,960 --> 00:16:52,420
department's and we constructed systems

297
00:16:50,200 --> 00:16:55,240
and solve for them first message blocks

298
00:16:52,420 --> 00:16:58,689
and the lambda columns show the number

299
00:16:55,240 --> 00:17:01,560
of solutions we have obtained from this

300
00:16:58,690 --> 00:17:04,680
table we can see that so practical

301
00:17:01,560 --> 00:17:12,280
probability and theoretical probability

302
00:17:04,680 --> 00:17:14,440
marry well and there are three first in

303
00:17:12,280 --> 00:17:19,869
the message blocks when I mattresses

304
00:17:14,440 --> 00:17:24,070
different values so the last question is

305
00:17:19,869 --> 00:17:27,310
how can we deal with the effect caused

306
00:17:24,069 --> 00:17:29,830
by the Nano the equation and generally

307
00:17:27,310 --> 00:17:33,580
an unholy equation will leads to one

308
00:17:29,830 --> 00:17:36,790
mutant bit instead P there are two types

309
00:17:33,580 --> 00:17:38,740
of the mutant being stated be showing in

310
00:17:36,790 --> 00:17:42,610
the path freak

311
00:17:38,740 --> 00:17:45,789
in the left in the left one beating this

312
00:17:42,610 --> 00:17:48,340
data PE becomes one we how it is

313
00:17:45,789 --> 00:17:51,280
supposed to be there this is type 1 and

314
00:17:48,340 --> 00:17:54,610
this is a tab 2 which is just at the

315
00:17:51,280 --> 00:17:59,049
outside and this mutant beasts are not

316
00:17:54,610 --> 00:18:02,649
difficult to resolve and basically it

317
00:17:59,049 --> 00:18:05,620
costs 2 power K operations to deal with

318
00:18:02,650 --> 00:18:11,890
K mutant piece and this will increase

319
00:18:05,620 --> 00:18:15,820
the complexity of the second block now

320
00:18:11,890 --> 00:18:18,940
let's see the overall complexity first

321
00:18:15,820 --> 00:18:22,000
to the theoretical one see I referred to

322
00:18:18,940 --> 00:18:24,570
the complexity of the block hi and I am

323
00:18:22,000 --> 00:18:27,400
either number of the holding equations

324
00:18:24,570 --> 00:18:31,379
from this table we can see that when the

325
00:18:27,400 --> 00:18:35,470
number M increases see I increases and

326
00:18:31,380 --> 00:18:41,830
c2 decreases and we can obtain the best

327
00:18:35,470 --> 00:18:46,659
attack when M equals to 120 and this is

328
00:18:41,830 --> 00:18:49,330
the practical complexity we we also

329
00:18:46,659 --> 00:18:55,750
obtain the best attacked when M equals

330
00:18:49,330 --> 00:18:58,480
to 122 and in the table because we

331
00:18:55,750 --> 00:19:02,530
stopped our program after we found when

332
00:18:58,480 --> 00:19:04,690
the first second message block so the

333
00:19:02,530 --> 00:19:08,200
practical camera angle city is the beach

334
00:19:04,690 --> 00:19:12,659
hair than the theoretical one and our

335
00:19:08,200 --> 00:19:12,659
codes are publicly available as a github

336
00:19:13,470 --> 00:19:18,610
and this is a toy example to offend the

337
00:19:16,570 --> 00:19:21,370
second preimage for the message one and

338
00:19:18,610 --> 00:19:24,399
they say the padded military friend this

339
00:19:21,370 --> 00:19:28,229
is today's and there are two other

340
00:19:24,400 --> 00:19:35,140
second for images with M equals to 120

341
00:19:28,230 --> 00:19:37,750
122 and 123 as an aster this is a short

342
00:19:35,140 --> 00:19:39,880
summary in this talk we present a

343
00:19:37,750 --> 00:19:41,049
multi-block preimage attack model and

344
00:19:39,880 --> 00:19:43,720
provides the best

345
00:19:41,049 --> 00:19:46,830
Cerreta co-come like city and 3-run and

346
00:19:43,720 --> 00:19:49,230
foreign key track 2 to 4 and 2 5 6 and

347
00:19:46,830 --> 00:19:51,010
we give you the first practical

348
00:19:49,230 --> 00:19:54,190
prettiman attack also

349
00:19:51,010 --> 00:19:56,950
one key track to the wall and this are

350
00:19:54,190 --> 00:20:05,500
the detailed read of thanks we are

351
00:19:56,950 --> 00:20:17,680
rotating thank you very much other

352
00:20:05,500 --> 00:20:22,750
questions yes what happens with the

353
00:20:17,680 --> 00:20:25,540
larger versions of chechik 384 512 can

354
00:20:22,750 --> 00:20:27,940
you get improved text but which are not

355
00:20:25,540 --> 00:20:31,060
practical or your improvements do not

356
00:20:27,940 --> 00:20:38,110
work at all for the larger versions that

357
00:20:31,060 --> 00:20:40,300
is latter addressed 884 512 we tried the

358
00:20:38,110 --> 00:20:43,929
patches but he's not work because a

359
00:20:40,300 --> 00:20:47,860
piece in the capacity is to match we

360
00:20:43,930 --> 00:20:50,830
cannot we cannot improve the current

361
00:20:47,860 --> 00:20:53,500
theorem to get a better constraint on

362
00:20:50,830 --> 00:20:56,649
the middle stage but we are still trying

363
00:20:53,500 --> 00:21:04,800
trained the moment you don't have even a

364
00:20:56,650 --> 00:21:07,380
better to ethically yeah no questions no

365
00:21:04,800 --> 00:21:12,188
then

366
00:21:07,380 --> 00:21:12,189
[Applause]

