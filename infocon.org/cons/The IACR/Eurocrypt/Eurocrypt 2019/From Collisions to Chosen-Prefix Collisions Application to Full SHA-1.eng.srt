1
00:00:00,030 --> 00:00:05,040
thank you for introduction so I'm going

2
00:00:03,149 --> 00:00:07,259
to talk about sha-1 this is a joint work

3
00:00:05,040 --> 00:00:09,269
with don't I pay her

4
00:00:07,259 --> 00:00:11,940
well cryptanalysis of sha-1 is a very

5
00:00:09,269 --> 00:00:14,160
technical topic and I know it's early on

6
00:00:11,940 --> 00:00:16,139
you're all tired after two three days of

7
00:00:14,160 --> 00:00:18,060
conference so we'll only talk about the

8
00:00:16,139 --> 00:00:20,490
high-level aspects of this attack and I

9
00:00:18,060 --> 00:00:23,430
will not go deep down to the bits and

10
00:00:20,490 --> 00:00:24,839
bytes of the bit flips so if you want

11
00:00:23,430 --> 00:00:26,070
more details please read the paper but

12
00:00:24,840 --> 00:00:28,740
the main ideas are pretty high-level

13
00:00:26,070 --> 00:00:31,920
anyway so I think you will get four main

14
00:00:28,740 --> 00:00:33,809
points so I start from the beginning

15
00:00:31,920 --> 00:00:36,090
with the hash function it's basically a

16
00:00:33,809 --> 00:00:38,099
public function that will take as input

17
00:00:36,090 --> 00:00:40,800
an arbitrary document and gives you a

18
00:00:38,100 --> 00:00:43,260
short output that you can use as a kind

19
00:00:40,800 --> 00:00:45,328
of identifier for the document and the

20
00:00:43,260 --> 00:00:47,219
security property we want is that this

21
00:00:45,329 --> 00:00:49,289
fixed function should look like a random

22
00:00:47,219 --> 00:00:51,030
function in particular it should be hard

23
00:00:49,289 --> 00:00:53,010
to find collision or pre images and

24
00:00:51,030 --> 00:00:55,110
that's why you can really use the output

25
00:00:53,010 --> 00:00:56,930
as a kind of fingerprint and this is

26
00:00:55,110 --> 00:00:59,309
very useful in many cryptographic

27
00:00:56,930 --> 00:01:01,230
contexts for instance for signature

28
00:00:59,309 --> 00:01:02,788
instead of signing a big document you

29
00:01:01,230 --> 00:01:05,369
first hash it and then you compute your

30
00:01:02,789 --> 00:01:07,020
signature on the hash it's also used on

31
00:01:05,369 --> 00:01:10,110
blockchain I'm just putting here so that

32
00:01:07,020 --> 00:01:12,899
there are more people in the room so I

33
00:01:10,110 --> 00:01:15,330
will mostly talk about sha-1 this is a

34
00:01:12,900 --> 00:01:18,229
very important hash function because it

35
00:01:15,330 --> 00:01:20,400
was widely standardized don't use

36
00:01:18,229 --> 00:01:24,840
basically everywhere until a few years

37
00:01:20,400 --> 00:01:27,210
ago it was designed in the 90s and the

38
00:01:24,840 --> 00:01:29,520
state size on the output size is 160

39
00:01:27,210 --> 00:01:31,289
bits which means you expect a security

40
00:01:29,520 --> 00:01:34,110
against collision attack of roughly 2 to

41
00:01:31,290 --> 00:01:36,659
the 80 if you look at how it's built it

42
00:01:34,110 --> 00:01:39,390
follows an iterative construction so you

43
00:01:36,659 --> 00:01:42,000
you have an internal state X here which

44
00:01:39,390 --> 00:01:44,310
is 160 bits you start with some fixed

45
00:01:42,000 --> 00:01:46,740
value that we call div and then you cut

46
00:01:44,310 --> 00:01:48,540
your message into blocks and 0 m1 m2 and

47
00:01:46,740 --> 00:01:50,399
you process them one by one so you have

48
00:01:48,540 --> 00:01:52,079
this compression function that takes the

49
00:01:50,399 --> 00:01:55,170
message block the current state and

50
00:01:52,079 --> 00:01:57,929
gives you the next state now what is

51
00:01:55,170 --> 00:01:59,729
inside this compression function so we

52
00:01:57,930 --> 00:02:01,829
have something that looks like this it's

53
00:01:59,729 --> 00:02:04,049
a construction called davis mayor and

54
00:02:01,829 --> 00:02:06,508
it's based on a kind of block ciphers

55
00:02:04,049 --> 00:02:08,819
you have this here is a block cipher you

56
00:02:06,509 --> 00:02:10,830
take the message as the key you encrypt

57
00:02:08,818 --> 00:02:13,739
your training value you get a new value

58
00:02:10,830 --> 00:02:15,660
here and then you add if you encrypt it

59
00:02:13,740 --> 00:02:18,210
the initial value and that's your new

60
00:02:15,660 --> 00:02:20,100
training value and I will not go deeper

61
00:02:18,210 --> 00:02:21,570
inside the block cipher so this is

62
00:02:20,100 --> 00:02:25,140
really all you need to know about

63
00:02:21,570 --> 00:02:26,549
jamming for his dog so in terms of

64
00:02:25,140 --> 00:02:29,040
cryptanalysis you probably know that

65
00:02:26,550 --> 00:02:31,770
sha-1 is broken so it's actually been

66
00:02:29,040 --> 00:02:35,700
broken for almost 15 years so there was

67
00:02:31,770 --> 00:02:37,590
some really amazing work in 2005 by an

68
00:02:35,700 --> 00:02:39,420
Italian Wang and colleagues and they

69
00:02:37,590 --> 00:02:41,130
gave a first collision attack on sha-1

70
00:02:39,420 --> 00:02:44,040
this was an attack with complexity

71
00:02:41,130 --> 00:02:45,960
around 2 to the 69 there's been a lot of

72
00:02:44,040 --> 00:02:48,299
follow-up work to try to better

73
00:02:45,960 --> 00:02:51,750
understand this attack and improve it in

74
00:02:48,300 --> 00:02:53,940
particular paper in 2010 giving a better

75
00:02:51,750 --> 00:02:56,820
estimate of a complexity and some

76
00:02:53,940 --> 00:02:59,100
improvements and finally about two years

77
00:02:56,820 --> 00:03:01,260
ago this attack was implemented in

78
00:02:59,100 --> 00:03:03,150
practice and we now have real collisions

79
00:03:01,260 --> 00:03:05,220
so it took a long time because two to

80
00:03:03,150 --> 00:03:06,780
the 69 is actually a very big number and

81
00:03:05,220 --> 00:03:10,920
it's hard to do this kind of

82
00:03:06,780 --> 00:03:13,110
computations so what we status today

83
00:03:10,920 --> 00:03:14,640
well it's been broken for 15 years so

84
00:03:13,110 --> 00:03:16,890
you should expect that it's not really

85
00:03:14,640 --> 00:03:19,619
used anymore right and the good thing is

86
00:03:16,890 --> 00:03:22,980
it's actually not used anymore in web

87
00:03:19,620 --> 00:03:25,200
browsers they start very rejection one

88
00:03:22,980 --> 00:03:28,049
should certificates since 2017 so they

89
00:03:25,200 --> 00:03:30,060
took a long time but now we do the bad

90
00:03:28,050 --> 00:03:33,330
news is there's more than web browsers

91
00:03:30,060 --> 00:03:35,790
in security and in some applications you

92
00:03:33,330 --> 00:03:37,470
still use sha-1 in particular showing

93
00:03:35,790 --> 00:03:39,750
certificates you can still buy them if

94
00:03:37,470 --> 00:03:43,050
you go to some serious website you can

95
00:03:39,750 --> 00:03:44,940
buy sha-1 certificate and a lot of

96
00:03:43,050 --> 00:03:47,010
clients will actually accept them so not

97
00:03:44,940 --> 00:03:48,810
web browsers like I said but if you look

98
00:03:47,010 --> 00:03:51,179
at mail client for instance the mail

99
00:03:48,810 --> 00:03:54,120
application in Windows 10 it's perfectly

100
00:03:51,180 --> 00:03:56,070
happy to connect to an IMAP server with

101
00:03:54,120 --> 00:03:57,300
the TLS connection sexual fulfillment

102
00:03:56,070 --> 00:03:59,519
certificate there's nothing wrong with

103
00:03:57,300 --> 00:04:01,530
this and those servers actually exist

104
00:03:59,520 --> 00:04:03,810
until a few weeks ago if you went to

105
00:04:01,530 --> 00:04:05,010
this machine this is a knife server of

106
00:04:03,810 --> 00:04:07,410
one of the Department of the University

107
00:04:05,010 --> 00:04:10,290
of Darmstadt right here so it's not just

108
00:04:07,410 --> 00:04:12,329
a random machine and this machine had a

109
00:04:10,290 --> 00:04:14,400
sha-1 certificate so it's now expired so

110
00:04:12,330 --> 00:04:17,130
we replaced it and it's now a to a

111
00:04:14,400 --> 00:04:18,989
certificate but yeah sha-1 is still

112
00:04:17,130 --> 00:04:20,820
really used for for security

113
00:04:18,988 --> 00:04:23,280
applications and besides certificates

114
00:04:20,820 --> 00:04:25,200
it's also used in gates is choosing the

115
00:04:23,280 --> 00:04:27,369
TLS 1.2 handshake and probably in many

116
00:04:25,200 --> 00:04:30,099
different other places

117
00:04:27,370 --> 00:04:32,440
probably thanking have you always use

118
00:04:30,100 --> 00:04:33,940
very old standards so I think it still

119
00:04:32,440 --> 00:04:36,130
makes sense to look at someone and try

120
00:04:33,940 --> 00:04:40,120
to see how badly we can break it so

121
00:04:36,130 --> 00:04:42,490
that's the point of this talk so I said

122
00:04:40,120 --> 00:04:44,860
we know how to compute collisions for

123
00:04:42,490 --> 00:04:47,410
sha-1 so what does it mean to compute

124
00:04:44,860 --> 00:04:49,570
collision on what can we do with this so

125
00:04:47,410 --> 00:04:51,760
a collision is just you start from Vig

126
00:04:49,570 --> 00:04:54,040
and you manage to build two different

127
00:04:51,760 --> 00:04:56,860
messages c1 c2 that give you the same

128
00:04:54,040 --> 00:04:58,840
output and the collision attack is a

129
00:04:56,860 --> 00:05:01,389
very complex process and basically those

130
00:04:58,840 --> 00:05:04,539
two messages c1 c2 they look like big

131
00:05:01,389 --> 00:05:06,460
blob blobs of random values so it's hard

132
00:05:04,540 --> 00:05:09,400
to really do something meaningful with

133
00:05:06,460 --> 00:05:11,530
them and you will also have probably to

134
00:05:09,400 --> 00:05:13,150
hide these random looking blocks

135
00:05:11,530 --> 00:05:14,979
somewhere in your document so you need a

136
00:05:13,150 --> 00:05:17,799
document format that's nice enough to

137
00:05:14,979 --> 00:05:19,990
allow you to hide this somewhere but in

138
00:05:17,800 --> 00:05:22,389
order to make exploitation a bit easier

139
00:05:19,990 --> 00:05:24,100
there's a very nice trick that you can

140
00:05:22,389 --> 00:05:26,020
actually add prefix before your

141
00:05:24,100 --> 00:05:27,970
collision and suffix after the collision

142
00:05:26,020 --> 00:05:30,310
and this is because of the iterative

143
00:05:27,970 --> 00:05:32,200
structure of hash functions so if you

144
00:05:30,310 --> 00:05:34,090
put the prefix it just means instead of

145
00:05:32,200 --> 00:05:35,530
starting your attack from the real IV

146
00:05:34,090 --> 00:05:37,419
you start from the state after the

147
00:05:35,530 --> 00:05:39,880
prefix and basically it's the same

148
00:05:37,419 --> 00:05:42,039
attack and the suffix well after you

149
00:05:39,880 --> 00:05:44,500
collide if you put the same suffix

150
00:05:42,039 --> 00:05:46,840
behind you still collide so what this

151
00:05:44,500 --> 00:05:49,870
means is here if you take message PC 1s

152
00:05:46,840 --> 00:05:52,539
and PC 2 as this is also a collision and

153
00:05:49,870 --> 00:05:55,530
you can choose B and s freely so you can

154
00:05:52,539 --> 00:05:58,450
use this to control your message and

155
00:05:55,530 --> 00:06:00,609
this is a very useful if you want to

156
00:05:58,450 --> 00:06:02,050
exploit it the main issue is you want a

157
00:06:00,610 --> 00:06:04,030
collision on two messages that are

158
00:06:02,050 --> 00:06:05,950
meaningful if you just have a collision

159
00:06:04,030 --> 00:06:08,169
on two random messages it's hard to use

160
00:06:05,950 --> 00:06:09,880
but using this prefix and suffix trick

161
00:06:08,169 --> 00:06:12,130
you can do it with relatively meaningful

162
00:06:09,880 --> 00:06:14,260
messages and in particular a nice trick

163
00:06:12,130 --> 00:06:16,840
is that many document formats allow some

164
00:06:14,260 --> 00:06:19,180
kind of conditional branches and so you

165
00:06:16,840 --> 00:06:21,010
can build messages that look like this

166
00:06:19,180 --> 00:06:22,570
so I'm using pseudocode here but this

167
00:06:21,010 --> 00:06:25,030
could actually be more like a PDF

168
00:06:22,570 --> 00:06:26,919
documents so you start with some if

169
00:06:25,030 --> 00:06:29,320
condition and this will be your prefix

170
00:06:26,919 --> 00:06:31,630
when you compute a collision and then

171
00:06:29,320 --> 00:06:33,820
you put a message like this as suffix

172
00:06:31,630 --> 00:06:36,430
and now what this does those two

173
00:06:33,820 --> 00:06:37,630
messages will collide because this is a

174
00:06:36,430 --> 00:06:40,060
collision block and you just have a

175
00:06:37,630 --> 00:06:41,350
common prefix uncommon suffix but now

176
00:06:40,060 --> 00:06:43,510
when you try to

177
00:06:41,350 --> 00:06:45,280
this document to execute them if I could

178
00:06:43,510 --> 00:06:47,980
they do very different things because

179
00:06:45,280 --> 00:06:50,109
the condition is true in one case

180
00:06:47,980 --> 00:06:52,570
unfolds in the other so now you have two

181
00:06:50,110 --> 00:06:55,510
very different document and both of them

182
00:06:52,570 --> 00:06:57,849
have the same hash value and this is

183
00:06:55,510 --> 00:07:03,969
actually what was used to build those

184
00:06:57,850 --> 00:07:08,050
two PDFs here so this is what we can do

185
00:07:03,970 --> 00:07:09,910
now in terms of practical attack so this

186
00:07:08,050 --> 00:07:11,800
is good when you can use those tricks in

187
00:07:09,910 --> 00:07:13,930
the document format but in in some cases

188
00:07:11,800 --> 00:07:15,640
you cannot use Voss Drake since then the

189
00:07:13,930 --> 00:07:19,030
collision attack will not be powerful

190
00:07:15,640 --> 00:07:22,180
enough to really break the protocol and

191
00:07:19,030 --> 00:07:25,090
a nice idea that was introduced in 2007

192
00:07:22,180 --> 00:07:28,570
is to do something a little bit more

193
00:07:25,090 --> 00:07:29,859
general than just a collision attack it

194
00:07:28,570 --> 00:07:32,380
would be nice if you could start from

195
00:07:29,860 --> 00:07:34,690
two different prefixes P 1 P 2 and then

196
00:07:32,380 --> 00:07:36,640
somehow managed to get a collision from

197
00:07:34,690 --> 00:07:38,320
which two different states and this is

198
00:07:36,640 --> 00:07:40,659
something we call chosen prefix

199
00:07:38,320 --> 00:07:43,300
collisions and what this mean is a

200
00:07:40,660 --> 00:07:45,700
Challenger is giving you p1 p2 and now

201
00:07:43,300 --> 00:07:49,330
you have to find two messages m1 m2 so

202
00:07:45,700 --> 00:07:51,430
that P 1 m 1 and P 2 m2 give a collision

203
00:07:49,330 --> 00:07:52,810
and if you know how to do this you can

204
00:07:51,430 --> 00:07:54,310
break a lot more stuff you can break

205
00:07:52,810 --> 00:07:56,950
certificates and you can break many

206
00:07:54,310 --> 00:08:00,160
internet protocols so just to give you a

207
00:07:56,950 --> 00:08:03,099
simple example on a kind of PCI

208
00:08:00,160 --> 00:08:04,810
infrastructure so what is a PCI how do

209
00:08:03,100 --> 00:08:06,730
you certify your key well the idea is

210
00:08:04,810 --> 00:08:09,790
quite simple if Alice wants a

211
00:08:06,730 --> 00:08:11,860
certification on her key she just

212
00:08:09,790 --> 00:08:13,510
generates a key then she makes a

213
00:08:11,860 --> 00:08:15,880
document like this public key of alice

214
00:08:13,510 --> 00:08:18,510
is blah blah and she goes to the CA and

215
00:08:15,880 --> 00:08:21,640
the CA is going to sign this document

216
00:08:18,510 --> 00:08:24,039
now how do you attack this well the idea

217
00:08:21,640 --> 00:08:26,440
is that Bob is going to create two

218
00:08:24,040 --> 00:08:28,210
different documents one that says the

219
00:08:26,440 --> 00:08:29,860
key of alice is something and the other

220
00:08:28,210 --> 00:08:32,079
that says the key of Bob is something

221
00:08:29,860 --> 00:08:33,700
and is going to use a chosen prefix

222
00:08:32,080 --> 00:08:36,219
collision attack to make those two

223
00:08:33,700 --> 00:08:38,410
document collide and here the prefix is

224
00:08:36,219 --> 00:08:40,840
on one side the key of Alice and on the

225
00:08:38,409 --> 00:08:42,250
other the key of Bob and so if you just

226
00:08:40,840 --> 00:08:44,169
have a collision attack you cannot do

227
00:08:42,250 --> 00:08:46,150
this which if you have a chosen prefix

228
00:08:44,169 --> 00:08:48,670
collision attack then you can do this

229
00:08:46,150 --> 00:08:51,160
kind of collision and now Bob can just

230
00:08:48,670 --> 00:08:53,349
ask for a certification of his key and

231
00:08:51,160 --> 00:08:54,490
because we two collide he can actually

232
00:08:53,350 --> 00:08:57,130
use this signal

233
00:08:54,490 --> 00:08:58,720
on the key of Alice and now he can

234
00:08:57,130 --> 00:09:00,459
impersonate Alice because he has a

235
00:08:58,720 --> 00:09:02,470
document that says Vicki if Alice is

236
00:09:00,459 --> 00:09:06,969
something and he controls with something

237
00:09:02,470 --> 00:09:08,680
and he has a certification of that so to

238
00:09:06,970 --> 00:09:11,410
summarizes children traffic collision

239
00:09:08,680 --> 00:09:13,329
are more dangerous kind of collision

240
00:09:11,410 --> 00:09:14,680
attack they really break stuff in

241
00:09:13,330 --> 00:09:16,300
practice they've been used to create a

242
00:09:14,680 --> 00:09:18,670
rock CA and they've been used by the

243
00:09:16,300 --> 00:09:21,969
flame malware so it's really a real

244
00:09:18,670 --> 00:09:23,130
practical threat in terms of generic

245
00:09:21,970 --> 00:09:25,420
attacks they both have the same

246
00:09:23,130 --> 00:09:27,730
complexity to to the n over 2 but in

247
00:09:25,420 --> 00:09:29,319
terms of cryptanalysis chosen traffic

248
00:09:27,730 --> 00:09:31,600
collision attacks are much harder and

249
00:09:29,320 --> 00:09:34,959
currently the best-known attack on sha-1

250
00:09:31,600 --> 00:09:37,360
as complexity to 277 so it's still not

251
00:09:34,959 --> 00:09:39,130
really usable so the goal of this work

252
00:09:37,360 --> 00:09:41,170
is to reduce the gap between the

253
00:09:39,130 --> 00:09:43,450
complexity of the identical prefix

254
00:09:41,170 --> 00:09:45,579
collision which is 2 to the 64 7 and so

255
00:09:43,450 --> 00:09:47,290
on and which shows on graphics kanji so

256
00:09:45,580 --> 00:09:48,990
we want to improve our chosen traffic's

257
00:09:47,290 --> 00:09:52,569
collision attack to make them more

258
00:09:48,990 --> 00:09:54,250
practical so first I'm going to talk a

259
00:09:52,570 --> 00:09:56,440
little bit about how you do crypt

260
00:09:54,250 --> 00:09:58,660
analysis on sha-1 and related function

261
00:09:56,440 --> 00:10:00,279
so the main idea is that you do

262
00:09:58,660 --> 00:10:02,529
something based on differential

263
00:10:00,279 --> 00:10:04,180
cryptanalysis and the idea of

264
00:10:02,529 --> 00:10:06,399
differential cryptanalysis is that you

265
00:10:04,180 --> 00:10:08,890
try to control the differences during a

266
00:10:06,399 --> 00:10:10,720
computation so if you can somehow start

267
00:10:08,890 --> 00:10:12,610
from a zero difference when have some

268
00:10:10,720 --> 00:10:14,110
differences from the message at some

269
00:10:12,610 --> 00:10:17,170
point cancel them and you go back to

270
00:10:14,110 --> 00:10:18,520
zero difference well this directly gives

271
00:10:17,170 --> 00:10:20,199
you a collision attack you just have to

272
00:10:18,520 --> 00:10:23,589
find a message following this trial and

273
00:10:20,200 --> 00:10:26,260
this is a collision unfortunately it's

274
00:10:23,589 --> 00:10:28,630
hard to find trains in particular trains

275
00:10:26,260 --> 00:10:31,089
like this but what we can do if there's

276
00:10:28,630 --> 00:10:32,920
a nice trick using the fact that the

277
00:10:31,089 --> 00:10:35,050
message expansion is linear and sha-1 we

278
00:10:32,920 --> 00:10:36,459
can build some trails with good

279
00:10:35,050 --> 00:10:38,380
probabilities I will not go through the

280
00:10:36,459 --> 00:10:40,510
details it's not very important but we

281
00:10:38,380 --> 00:10:43,290
know how to build some trails but I

282
00:10:40,510 --> 00:10:45,850
don't start from 0 and I don't go to 0

283
00:10:43,290 --> 00:10:47,649
the next important trick is that in the

284
00:10:45,850 --> 00:10:49,300
first round here the beginning of a

285
00:10:47,649 --> 00:10:51,970
computation you don't have to pay for

286
00:10:49,300 --> 00:10:53,890
the probability cost because you can

287
00:10:51,970 --> 00:10:55,870
just choose the message that satisfies

288
00:10:53,890 --> 00:10:58,270
the path so this is nice we don't really

289
00:10:55,870 --> 00:11:00,040
care about the initial steps but now

290
00:10:58,270 --> 00:11:02,680
what we can do is in those initial steps

291
00:11:00,040 --> 00:11:05,500
instead of using the nice trails that

292
00:11:02,680 --> 00:11:08,290
are linearized we can just modify them

293
00:11:05,500 --> 00:11:10,870
and use basically arbitrary trails even

294
00:11:08,290 --> 00:11:12,160
the probability is super bad it doesn't

295
00:11:10,870 --> 00:11:14,199
matter because we don't pay this

296
00:11:12,160 --> 00:11:16,089
probability anyway so we can actually

297
00:11:14,199 --> 00:11:18,219
start from an arbitrary difference and

298
00:11:16,089 --> 00:11:20,170
then connect to a good trail in the

299
00:11:18,220 --> 00:11:22,089
middle and using this you already get

300
00:11:20,170 --> 00:11:23,620
new collisions because you can start

301
00:11:22,089 --> 00:11:26,440
from zero and get a small difference

302
00:11:23,620 --> 00:11:28,569
here and finally the last trick is a

303
00:11:26,440 --> 00:11:30,910
multi-block technique where you're going

304
00:11:28,569 --> 00:11:32,889
to use two blocks using the same kind of

305
00:11:30,910 --> 00:11:34,600
trails and then the output difference

306
00:11:32,889 --> 00:11:37,899
would cancel because of a feed-forward

307
00:11:34,600 --> 00:11:40,000
so it actually looks like this you start

308
00:11:37,899 --> 00:11:42,730
from a good linearized trail here from

309
00:11:40,000 --> 00:11:44,769
Delta I 2 Delta oh you repeat it two

310
00:11:42,730 --> 00:11:46,360
time one the normal trail second time

311
00:11:44,769 --> 00:11:48,699
you just flip it so you have a negative

312
00:11:46,360 --> 00:11:50,889
sign and then when you go through the

313
00:11:48,699 --> 00:11:52,329
feed forward so you start from zero

314
00:11:50,889 --> 00:11:54,250
difference you get difference Delta oh

315
00:11:52,329 --> 00:11:57,040
and then through a feed-forward they

316
00:11:54,250 --> 00:12:00,190
cancel out so this is how we do

317
00:11:57,040 --> 00:12:02,860
collision attacks on md5 and sha-1 now

318
00:12:00,190 --> 00:12:04,930
how can we do chosen prefix collision

319
00:12:02,860 --> 00:12:08,230
attacks you're going to need a few more

320
00:12:04,930 --> 00:12:11,050
tricks and the main idea is that you

321
00:12:08,230 --> 00:12:13,870
want to define a set of differences here

322
00:12:11,050 --> 00:12:16,000
that are somehow nice meaning that

323
00:12:13,870 --> 00:12:19,569
starting from one of those differences

324
00:12:16,000 --> 00:12:22,329
you know how to go to a collision and if

325
00:12:19,569 --> 00:12:24,849
you can define this then what you do is

326
00:12:22,329 --> 00:12:26,529
you just start after you two prefixes so

327
00:12:24,850 --> 00:12:29,110
here you have some random difference in

328
00:12:26,529 --> 00:12:32,199
the states and you just process random

329
00:12:29,110 --> 00:12:34,930
blocks until you reach this nice set of

330
00:12:32,199 --> 00:12:36,310
differences and this is just to birthday

331
00:12:34,930 --> 00:12:38,260
attack and the complexity is about

332
00:12:36,310 --> 00:12:40,630
square root of 2 to the N over size of s

333
00:12:38,260 --> 00:12:42,459
so if s is big enough this is not too

334
00:12:40,630 --> 00:12:43,810
expensive and then you have a phase

335
00:12:42,459 --> 00:12:45,550
where you use several blocks of

336
00:12:43,810 --> 00:12:47,260
near-collision on you can see you erase

337
00:12:45,550 --> 00:12:50,199
your difference because you assume that

338
00:12:47,260 --> 00:12:53,500
it's nice so you know how to do it so

339
00:12:50,199 --> 00:12:56,079
what kind of differences are nice well

340
00:12:53,500 --> 00:12:59,800
if they have been to variance of those

341
00:12:56,079 --> 00:13:02,399
attack proposed so far so an md5 what we

342
00:12:59,800 --> 00:13:04,870
do is we use several trails that are

343
00:13:02,399 --> 00:13:07,029
different so they affect different bits

344
00:13:04,870 --> 00:13:09,370
of the output and therefore you can

345
00:13:07,029 --> 00:13:11,800
cancel differences bit by bit and this

346
00:13:09,370 --> 00:13:16,389
gives you a nice structured set that you

347
00:13:11,800 --> 00:13:17,920
can but you can define easily on sha-1

348
00:13:16,389 --> 00:13:19,340
is quite different because we only have

349
00:13:17,920 --> 00:13:21,410
really

350
00:13:19,340 --> 00:13:23,480
few good trails so you have to start

351
00:13:21,410 --> 00:13:26,449
from a single trail and then you cannot

352
00:13:23,480 --> 00:13:29,210
really have a nice structured set s but

353
00:13:26,450 --> 00:13:30,890
instead what you can do is give a little

354
00:13:29,210 --> 00:13:34,010
bit of freedom in the last round so you

355
00:13:30,890 --> 00:13:35,750
can affect a few different values and

356
00:13:34,010 --> 00:13:38,900
this just defines your set as you have a

357
00:13:35,750 --> 00:13:41,060
very small set or no nice structure and

358
00:13:38,900 --> 00:13:44,689
so if the goal of our work is mostly to

359
00:13:41,060 --> 00:13:46,910
get a bigger set of nice differences for

360
00:13:44,690 --> 00:13:49,100
sha-1 and for this we basically try to

361
00:13:46,910 --> 00:13:50,959
combine with two approaches because we

362
00:13:49,100 --> 00:13:52,310
target someone we want to use a single

363
00:13:50,960 --> 00:13:54,680
code trace because we don't have many

364
00:13:52,310 --> 00:13:56,630
good trails but we want to use ideas

365
00:13:54,680 --> 00:13:59,839
with several blocks because this allows

366
00:13:56,630 --> 00:14:04,160
us to get a bigger set that's really the

367
00:13:59,840 --> 00:14:06,140
main idea here so we introduced three

368
00:14:04,160 --> 00:14:08,180
little tricks and when you combine all

369
00:14:06,140 --> 00:14:11,090
of them you get something relatively

370
00:14:08,180 --> 00:14:12,890
nice the first trick is to look inside

371
00:14:11,090 --> 00:14:14,840
the compression function and give more

372
00:14:12,890 --> 00:14:17,210
freedom at the end the second trick is

373
00:14:14,840 --> 00:14:19,070
to use several blocks and the final

374
00:14:17,210 --> 00:14:21,020
trick is something we called clustering

375
00:14:19,070 --> 00:14:23,360
I will talk about later but it's

376
00:14:21,020 --> 00:14:26,449
basically we don't fix in advance which

377
00:14:23,360 --> 00:14:29,450
blocks were going to use so let's start

378
00:14:26,450 --> 00:14:32,020
with the first trick so we start from

379
00:14:29,450 --> 00:14:34,340
some differential trail in sha-1 and

380
00:14:32,020 --> 00:14:36,560
like in previous work we look at the

381
00:14:34,340 --> 00:14:38,810
last rounds and we give a little bit of

382
00:14:36,560 --> 00:14:41,449
freedom in order to be able to reach a

383
00:14:38,810 --> 00:14:44,630
few different values of output

384
00:14:41,450 --> 00:14:47,690
differences so in the previous attack we

385
00:14:44,630 --> 00:14:49,580
use the set of 192 differences and you

386
00:14:47,690 --> 00:14:51,470
know we work we relax it a bit more and

387
00:14:49,580 --> 00:14:54,740
we show that we can actually reach more

388
00:14:51,470 --> 00:14:56,150
than 8000 differences and well just by

389
00:14:54,740 --> 00:14:57,770
using this you actually reduce the

390
00:14:56,150 --> 00:15:00,110
complexity of the attack from two to the

391
00:14:57,770 --> 00:15:01,490
seventy-seven something to two to the

392
00:15:00,110 --> 00:15:06,950
seventy four point three so that's

393
00:15:01,490 --> 00:15:10,990
already a nice improvement so now we the

394
00:15:06,950 --> 00:15:13,160
next trick is to use several blocks so

395
00:15:10,990 --> 00:15:18,530
as I explained we don't have a nice

396
00:15:13,160 --> 00:15:20,569
structure on one block so we we cannot

397
00:15:18,530 --> 00:15:22,819
really have a nice set as that we can

398
00:15:20,570 --> 00:15:25,340
describe like abstractly like you need

399
00:15:22,820 --> 00:15:27,650
to have this invisible to be 0 but what

400
00:15:25,340 --> 00:15:29,780
we can do is if we if we're going to use

401
00:15:27,650 --> 00:15:31,670
two blocks we actually know in advance

402
00:15:29,780 --> 00:15:33,290
the type of values that we can cancel

403
00:15:31,670 --> 00:15:35,050
because we know that

404
00:15:33,290 --> 00:15:38,750
block will have an output which is

405
00:15:35,050 --> 00:15:42,258
infoset intercept that correspond to

406
00:15:38,750 --> 00:15:44,060
voice value here which is denoted G here

407
00:15:42,259 --> 00:15:45,920
so we know that after the first block we

408
00:15:44,060 --> 00:15:47,660
are inside G after the second block we

409
00:15:45,920 --> 00:15:50,060
are in set D and actually when you do

410
00:15:47,660 --> 00:15:52,009
the feed-forward what you get is if you

411
00:15:50,060 --> 00:15:53,810
want to have 0 at the end it means the

412
00:15:52,009 --> 00:15:56,420
initial value might be the sum of two

413
00:15:53,810 --> 00:15:58,310
values that are in D so you just build a

414
00:15:56,420 --> 00:16:00,620
set like this then if you want to

415
00:15:58,310 --> 00:16:02,420
consult Delta 1 plus Delta 2 it just

416
00:16:00,620 --> 00:16:04,310
means in the first block you want the

417
00:16:02,420 --> 00:16:06,170
output difference to be minus Delta 1 in

418
00:16:04,310 --> 00:16:09,949
the second block minus Delta 2 and you

419
00:16:06,170 --> 00:16:11,959
will be able to cancel it so you have to

420
00:16:09,949 --> 00:16:14,149
compute compute explicitly this set you

421
00:16:11,959 --> 00:16:16,310
don't have a nice description but as

422
00:16:14,149 --> 00:16:19,160
long as you can compute it it's quite

423
00:16:16,310 --> 00:16:20,508
easy to to just exhaustively build it

424
00:16:19,160 --> 00:16:22,250
and you know that all those values are

425
00:16:20,509 --> 00:16:23,720
nice so this is with two blocks of

426
00:16:22,250 --> 00:16:25,399
course you can do it with more and you

427
00:16:23,720 --> 00:16:27,500
can get a relatively large set if you

428
00:16:25,399 --> 00:16:29,449
increase the number of blocks and using

429
00:16:27,500 --> 00:16:31,970
this the complexity now goes down to two

430
00:16:29,449 --> 00:16:34,508
sixty eight point six so now we we're

431
00:16:31,970 --> 00:16:37,310
getting a relatively large gain and

432
00:16:34,509 --> 00:16:41,569
finally the last trick is what we call

433
00:16:37,310 --> 00:16:43,430
clustering and the idea is now we're

434
00:16:41,569 --> 00:16:46,189
going to look at this in terms of a

435
00:16:43,430 --> 00:16:48,649
graph so we take the set s of nice

436
00:16:46,190 --> 00:16:50,839
differences those are all the vertices

437
00:16:48,649 --> 00:16:53,240
in the graph and the edges are a

438
00:16:50,839 --> 00:16:55,040
near-collision block that we can use to

439
00:16:53,240 --> 00:16:57,410
move from one difference to another so

440
00:16:55,040 --> 00:16:59,959
the difference between the two points is

441
00:16:57,410 --> 00:17:03,350
one of the value that we can reach in

442
00:16:59,959 --> 00:17:05,658
this set D and an important observation

443
00:17:03,350 --> 00:17:08,179
about this type of graph is that there

444
00:17:05,659 --> 00:17:10,600
are many paths going from a given point

445
00:17:08,179 --> 00:17:13,069
to 0 which corresponds to collisions

446
00:17:10,599 --> 00:17:16,458
there's not a single path so if we just

447
00:17:13,069 --> 00:17:18,260
do a naive attack you would first select

448
00:17:16,459 --> 00:17:20,540
a path and then use the blocks

449
00:17:18,260 --> 00:17:22,579
corresponding to the path but instead of

450
00:17:20,540 --> 00:17:23,540
this we will try to take advantage of

451
00:17:22,579 --> 00:17:26,198
the fact that there are many different

452
00:17:23,540 --> 00:17:28,610
paths and use them at the same time and

453
00:17:26,199 --> 00:17:31,159
well there are several reason why they

454
00:17:28,610 --> 00:17:33,590
are several paths but the most basic

455
00:17:31,159 --> 00:17:35,299
cases you can just change the order of

456
00:17:33,590 --> 00:17:37,220
the blocks I mean if you have two blocks

457
00:17:35,299 --> 00:17:39,559
if you do Delta one then Delta two or

458
00:17:37,220 --> 00:17:41,150
Delta 2 then Delta one you get the same

459
00:17:39,559 --> 00:17:43,470
result so you you have at least this

460
00:17:41,150 --> 00:17:46,710
amount of freedom

461
00:17:43,470 --> 00:17:48,990
and so how can we use this freedom well

462
00:17:46,710 --> 00:17:52,679
if you look at how the attack is

463
00:17:48,990 --> 00:17:54,450
actually performed so you you start with

464
00:17:52,679 --> 00:17:55,980
a birthday phase you get your nice

465
00:17:54,450 --> 00:17:56,299
difference and then you want to cancel

466
00:17:55,980 --> 00:17:58,230
it

467
00:17:56,299 --> 00:17:59,940
and so you're going to start with the

468
00:17:58,230 --> 00:18:02,309
first block so you know you have to

469
00:17:59,940 --> 00:18:04,289
target some difference than that one now

470
00:18:02,309 --> 00:18:06,240
what you do you start from Delta one you

471
00:18:04,289 --> 00:18:08,789
look at your condition attack this gives

472
00:18:06,240 --> 00:18:10,980
you some message condition how to reach

473
00:18:08,789 --> 00:18:14,820
Delta one then you try many random

474
00:18:10,980 --> 00:18:16,649
messages until you hit Delta one but

475
00:18:14,820 --> 00:18:18,689
actually in many cases you can have

476
00:18:16,649 --> 00:18:20,279
several differences but are useful for

477
00:18:18,690 --> 00:18:23,009
you and that have the same message

478
00:18:20,279 --> 00:18:25,710
conditions and what this means is you're

479
00:18:23,009 --> 00:18:28,320
going to choose several interesting

480
00:18:25,710 --> 00:18:30,629
target Delta if they all have the same

481
00:18:28,320 --> 00:18:33,149
message condition you can find a message

482
00:18:30,629 --> 00:18:34,918
for any of them simultaneously and if

483
00:18:33,149 --> 00:18:37,018
you have for instance two possibilities

484
00:18:34,919 --> 00:18:39,419
for the targets then it's twice as easy

485
00:18:37,019 --> 00:18:41,779
to reach one of them and then the cost

486
00:18:39,419 --> 00:18:43,860
of each block becomes much smaller

487
00:18:41,779 --> 00:18:47,279
that's really the other trick that we

488
00:18:43,860 --> 00:18:49,649
use here so if you want to really do it

489
00:18:47,279 --> 00:18:51,509
properly it's a little bit tricky

490
00:18:49,649 --> 00:18:53,729
because you have to look at well all the

491
00:18:51,509 --> 00:18:56,009
blocks don't have the same cost and some

492
00:18:53,730 --> 00:18:57,419
of them are father from collision than

493
00:18:56,009 --> 00:18:59,490
others so you have to be a little bit

494
00:18:57,419 --> 00:19:03,690
careful but in the end you can actually

495
00:18:59,490 --> 00:19:07,320
compute the complexity of each target

496
00:19:03,690 --> 00:19:09,210
difference and you can decide what

497
00:19:07,320 --> 00:19:11,759
message condition issues you should use

498
00:19:09,210 --> 00:19:13,620
at each step on how to to move around in

499
00:19:11,759 --> 00:19:16,559
this in this graph and in the end the

500
00:19:13,620 --> 00:19:18,899
complexity is reduced to roughly two to

501
00:19:16,559 --> 00:19:21,928
the sixty seven so what are all the

502
00:19:18,899 --> 00:19:24,600
tricks we use at a high level now if you

503
00:19:21,929 --> 00:19:26,639
want to go more to a lower level so it's

504
00:19:24,600 --> 00:19:28,500
going to be a little bit ugly I will not

505
00:19:26,639 --> 00:19:30,330
go through the details but the big idea

506
00:19:28,500 --> 00:19:32,370
is we just start from the shattered

507
00:19:30,330 --> 00:19:34,080
collision attack because this attack was

508
00:19:32,370 --> 00:19:36,239
implemented in practice so we know it

509
00:19:34,080 --> 00:19:38,309
actually works which is not necessarily

510
00:19:36,240 --> 00:19:40,620
the case of all proposed attack on sha-1

511
00:19:38,309 --> 00:19:44,100
and we know the complexity of this

512
00:19:40,620 --> 00:19:45,928
attack and now in our case we need a

513
00:19:44,100 --> 00:19:47,610
little bit more freedom at the bottom

514
00:19:45,929 --> 00:19:49,679
and at the top so maybe it's a little

515
00:19:47,610 --> 00:19:51,570
bit more expensive to find the block and

516
00:19:49,679 --> 00:19:53,009
in the shattered attack so if you

517
00:19:51,570 --> 00:19:55,529
optimist it you can assume it's the same

518
00:19:53,009 --> 00:19:57,179
cost if you more realistic or

519
00:19:55,529 --> 00:20:00,690
conservative you can add

520
00:19:57,179 --> 00:20:02,969
safety margin and this is just how we

521
00:20:00,690 --> 00:20:04,830
will estimate the cost of the attack so

522
00:20:02,969 --> 00:20:08,129
now you just have to build the set and

523
00:20:04,830 --> 00:20:09,928
the graph it's actually a significant

524
00:20:08,129 --> 00:20:12,330
effort because the set is about two to

525
00:20:09,929 --> 00:20:14,369
the thirty four nodes so that's a big

526
00:20:12,330 --> 00:20:15,869
set and then you have to do when there

527
00:20:14,369 --> 00:20:17,939
are many edges and you have to do the

528
00:20:15,869 --> 00:20:19,408
clustering so it takes a bit of time but

529
00:20:17,940 --> 00:20:22,049
in the end you can perform this

530
00:20:19,409 --> 00:20:24,509
computation and then you have some

531
00:20:22,049 --> 00:20:29,158
trade-off that you can do you can either

532
00:20:24,509 --> 00:20:31,109
use a smaller set of differences with a

533
00:20:29,159 --> 00:20:32,549
small cost and this means your birthday

534
00:20:31,109 --> 00:20:34,678
will be more expensive because you have

535
00:20:32,549 --> 00:20:35,999
fewer values to target and then the

536
00:20:34,679 --> 00:20:38,909
second phase would be cheaper because

537
00:20:35,999 --> 00:20:40,499
you only keep easiest value or you use a

538
00:20:38,909 --> 00:20:42,539
bigger set and then the birthday is

539
00:20:40,499 --> 00:20:44,729
cheaper and depending on your assumption

540
00:20:42,539 --> 00:20:47,129
on the cost of one block you have to

541
00:20:44,729 --> 00:20:48,659
select different trade-offs and then for

542
00:20:47,129 --> 00:20:51,418
complexity if you're optimistic we

543
00:20:48,659 --> 00:20:53,429
estimate it will be 2 to the 16 6.9 and

544
00:20:51,419 --> 00:20:56,729
with a more conservative estimate we get

545
00:20:53,429 --> 00:20:58,469
sixty nine point four so to conclude

546
00:20:56,729 --> 00:21:01,109
what we do in this work is basically

547
00:20:58,469 --> 00:21:02,940
proposed a framework that we can use to

548
00:21:01,109 --> 00:21:04,649
turn a collision attack into chosen

549
00:21:02,940 --> 00:21:06,809
prefix collision attack so a more

550
00:21:04,649 --> 00:21:08,639
powerful kind of attack and this is

551
00:21:06,809 --> 00:21:11,099
quite generic and we don't really need

552
00:21:08,639 --> 00:21:13,320
special property of the initial

553
00:21:11,099 --> 00:21:15,989
collision attack and we've applied this

554
00:21:13,320 --> 00:21:17,759
to Juwan and so we get a pretty

555
00:21:15,989 --> 00:21:20,009
significant improvement from two to the

556
00:21:17,759 --> 00:21:22,139
seventy-seven point point one to

557
00:21:20,009 --> 00:21:24,899
something around two to sixty-seven and

558
00:21:22,139 --> 00:21:26,879
we've also applied it 25 and we get some

559
00:21:24,899 --> 00:21:28,408
results in some specific cases if you

560
00:21:26,879 --> 00:21:31,649
limit a number of blocks to just two

561
00:21:28,409 --> 00:21:33,869
blocks so what we show is that the gap

562
00:21:31,649 --> 00:21:35,879
between collision attack and chosen for

563
00:21:33,869 --> 00:21:38,158
a fixed collision attack is not so big

564
00:21:35,879 --> 00:21:41,099
in the case of sha-1 it's between five

565
00:21:38,159 --> 00:21:42,899
and twenty five so it's not a huge gap

566
00:21:41,099 --> 00:21:47,580
and much smaller than what was fought

567
00:21:42,899 --> 00:21:50,158
before so since this paper was published

568
00:21:47,580 --> 00:21:52,228
we've we've been still working on this

569
00:21:50,159 --> 00:21:53,909
of course we've been looking more at the

570
00:21:52,229 --> 00:21:55,739
low-level details and we now have a

571
00:21:53,909 --> 00:21:59,399
better estimate of the complexity so

572
00:21:55,739 --> 00:22:01,139
here I was saying this range and as far

573
00:21:59,399 --> 00:22:03,599
as we understand now it will be around

574
00:22:01,139 --> 00:22:06,119
two to the sixty seven point two and we

575
00:22:03,599 --> 00:22:09,299
can estimate the cost to run this attack

576
00:22:06,119 --> 00:22:10,800
a nice way to estimate the cost is just

577
00:22:09,299 --> 00:22:13,290
to look how expensive it is

578
00:22:10,800 --> 00:22:15,930
to rent a GPU to run the attack and if

579
00:22:13,290 --> 00:22:19,170
you want to do this on Amazon Cloud it

580
00:22:15,930 --> 00:22:21,660
will cost about 2.6 million dollar so

581
00:22:19,170 --> 00:22:23,940
that's a large amount of money but it's

582
00:22:21,660 --> 00:22:26,520
also something that is probably feasible

583
00:22:23,940 --> 00:22:28,610
but actually you can get GPUs much

584
00:22:26,520 --> 00:22:31,680
cheaper than that and the reason is

585
00:22:28,610 --> 00:22:34,080
apparently some people bought lots of

586
00:22:31,680 --> 00:22:37,020
GPUs to mine cryptocurrencies sometime

587
00:22:34,080 --> 00:22:39,149
ago now it's not so profitable anymore

588
00:22:37,020 --> 00:22:41,760
so they're renting those GPU relatively

589
00:22:39,150 --> 00:22:44,430
cheaply so if you go to those kind of

590
00:22:41,760 --> 00:22:46,290
GPUs instead of VMs on one you could

591
00:22:44,430 --> 00:22:47,820
actually run the attack for around five

592
00:22:46,290 --> 00:22:49,649
hundred thousand dollars so that's still

593
00:22:47,820 --> 00:22:51,480
a large amount of money but it's

594
00:22:49,650 --> 00:22:53,730
definitely reachable by your state level

595
00:22:51,480 --> 00:22:55,530
ursery so this attack can be run in

596
00:22:53,730 --> 00:22:58,310
practice so clearly if you're still

597
00:22:55,530 --> 00:23:01,430
using sha-1 please stop right now and

598
00:22:58,310 --> 00:23:03,870
just to conclude on some ongoing work so

599
00:23:01,430 --> 00:23:05,820
unpublished at the moment we have new

600
00:23:03,870 --> 00:23:08,189
ideas to improve this a little bit more

601
00:23:05,820 --> 00:23:10,110
and we think we can actually get the

602
00:23:08,190 --> 00:23:12,930
cost below a hundred thousand dollars so

603
00:23:10,110 --> 00:23:15,030
that's now really reachable even for

604
00:23:12,930 --> 00:23:18,900
academics and so we're now working on

605
00:23:15,030 --> 00:23:21,210
implementing this attack and we hope we

606
00:23:18,900 --> 00:23:23,490
will get a real chosen prefix collision

607
00:23:21,210 --> 00:23:25,170
by the end of a year but of course we

608
00:23:23,490 --> 00:23:27,750
never know what kind of issues can come

609
00:23:25,170 --> 00:23:30,550
in the way and that will conclude my

610
00:23:27,750 --> 00:23:33,619
talk thank you for being here

611
00:23:30,550 --> 00:23:33,619
[Music]

612
00:23:36,760 --> 00:23:47,690
thank you very much

613
00:23:38,350 --> 00:23:49,939
questions oh that's for the birthday

614
00:23:47,690 --> 00:23:54,020
phase can you repeat the question

615
00:23:49,940 --> 00:23:58,370
okay so self was asking in the birthday

616
00:23:54,020 --> 00:24:01,070
face how we reach where is it written

617
00:23:58,370 --> 00:24:02,360
here yeah you're asking about this to be

618
00:24:01,070 --> 00:24:08,540
another square root of s right

619
00:24:02,360 --> 00:24:11,360
so yeah in so if the idea so you start

620
00:24:08,540 --> 00:24:14,120
from two different states with some

621
00:24:11,360 --> 00:24:16,100
random differences and from each of

622
00:24:14,120 --> 00:24:18,860
those states you hash a number of random

623
00:24:16,100 --> 00:24:20,780
blocks from state 1 and from state 2 and

624
00:24:18,860 --> 00:24:22,969
you look at all the possible pairs and

625
00:24:20,780 --> 00:24:25,550
you check if one of the pair is in the

626
00:24:22,970 --> 00:24:26,900
set s so that's a basic idea now in

627
00:24:25,550 --> 00:24:28,790
terms of implementation of course you

628
00:24:26,900 --> 00:24:30,680
don't want to store everything so you

629
00:24:28,790 --> 00:24:33,350
need to use a memory less algorithm so

630
00:24:30,680 --> 00:24:35,120
there are some technical details but the

631
00:24:33,350 --> 00:24:49,610
basic idea is it's just a birthday

632
00:24:35,120 --> 00:24:52,610
search and now we look at pairs from

633
00:24:49,610 --> 00:24:54,229
this site I mean the complexity is the

634
00:24:52,610 --> 00:24:57,110
number of random blocks we have to try

635
00:24:54,230 --> 00:25:01,300
here until one of the pairs of random

636
00:24:57,110 --> 00:25:01,300
block the difference is in the set s

637
00:25:40,659 --> 00:25:45,100
no not really

638
00:25:42,380 --> 00:25:50,899
you really have to look at the details

639
00:25:45,100 --> 00:25:52,879
it also depends if it really depends on

640
00:25:50,899 --> 00:25:54,168
the hash function it depends on how you

641
00:25:52,880 --> 00:25:56,779
build your differential trains on

642
00:25:54,169 --> 00:25:59,570
whatever conditions also I think one big

643
00:25:56,779 --> 00:26:02,480
factor is how far your initial collision

644
00:25:59,570 --> 00:26:04,639
attack is from the generic one so in shy

645
00:26:02,480 --> 00:26:06,500
one the gap is not too big so that's

646
00:26:04,639 --> 00:26:09,949
also why we don't lose too much going to

647
00:26:06,500 --> 00:26:12,350
chosen traffic's in md5 the gap is much

648
00:26:09,950 --> 00:26:15,440
bigger I think you have numbers here

649
00:26:12,350 --> 00:26:18,080
yeah the best collision attack is only

650
00:26:15,440 --> 00:26:21,590
two to be 16 so has a big gap with a

651
00:26:18,080 --> 00:26:23,000
generic attack and so we where we lose a

652
00:26:21,590 --> 00:26:39,260
lot when we go to chosen prefix

653
00:26:23,000 --> 00:26:43,399
collisions but in general knife is no so

654
00:26:39,260 --> 00:26:47,049
it's not trivial okay yes sorry so the

655
00:26:43,399 --> 00:26:50,239
question is when we do this birthday

656
00:26:47,049 --> 00:26:52,460
stage we need to detect whether the

657
00:26:50,240 --> 00:26:54,230
difference here is in the set or not the

658
00:26:52,460 --> 00:26:57,019
question was how easy is this

659
00:26:54,230 --> 00:26:59,149
so in general yeah it could be hard in

660
00:26:57,019 --> 00:27:02,179
the case of sha-1 it's not too hard

661
00:26:59,149 --> 00:27:04,879
because those values are built basically

662
00:27:02,179 --> 00:27:08,889
like this very sums of values that are

663
00:27:04,880 --> 00:27:11,240
all in some core set and so this means

664
00:27:08,889 --> 00:27:13,699
basically some bits will never be

665
00:27:11,240 --> 00:27:15,380
affected or with very low probability so

666
00:27:13,700 --> 00:27:17,450
we just look for collisions on some

667
00:27:15,380 --> 00:27:18,769
specific bits and then we test with full

668
00:27:17,450 --> 00:27:20,840
difference if it's in the site or not

669
00:27:18,769 --> 00:27:25,779
yeah yeah yeah we need some extra tricks

670
00:27:20,840 --> 00:27:25,779
absolutely yes

671
00:27:35,990 --> 00:27:42,420
okay so the question is what do we mean

672
00:27:38,820 --> 00:27:44,189
by theoretical and practical and so yeah

673
00:27:42,420 --> 00:27:49,520
in this work is just implemented or not

674
00:27:44,190 --> 00:27:53,250
implemented when I was talking about it

675
00:27:49,520 --> 00:27:55,080
when I'm listing attacks on sha-1 here

676
00:27:53,250 --> 00:27:56,430
yes so I'm saying the first attacks are

677
00:27:55,080 --> 00:27:59,909
theoretical in the sense they were not

678
00:27:56,430 --> 00:28:01,500
implemented and then in 2017 the attack

679
00:27:59,910 --> 00:28:03,300
was finally implemented so there's no

680
00:28:01,500 --> 00:28:05,190
fixed threshold it depends on how much

681
00:28:03,300 --> 00:28:07,710
you're willing to spend to implement

682
00:28:05,190 --> 00:28:10,830
this attack so here what I'm presenting

683
00:28:07,710 --> 00:28:12,990
here the attack with complexity to 267 I

684
00:28:10,830 --> 00:28:16,050
think it's almost practical in the sense

685
00:28:12,990 --> 00:28:19,440
you could run it if you really have

686
00:28:16,050 --> 00:28:23,600
money to to spend but we didn't run it

687
00:28:19,440 --> 00:28:25,920
because we don't have this $500,000 so

688
00:28:23,600 --> 00:28:47,969
yeah there's no clear threshold between

689
00:28:25,920 --> 00:28:50,930
practical and theoretical so there are

690
00:28:47,970 --> 00:28:57,819
no further questions and let's sing

691
00:28:50,930 --> 00:28:57,819
[Applause]

