1
00:00:00,210 --> 00:00:05,520
so hi my name is Rafael Paz and I will

2
00:00:03,240 --> 00:00:05,790
talk about this work with who Bert and

3
00:00:05,520 --> 00:00:09,240
Elaine

4
00:00:05,790 --> 00:00:10,860
on consensus through this notion of

5
00:00:09,240 --> 00:00:14,070
herding I will get to what that is

6
00:00:10,860 --> 00:00:16,609
towards animal talk but first let me

7
00:00:14,070 --> 00:00:18,960
start by summarizing what consensuses

8
00:00:16,609 --> 00:00:23,189
say this is in fact the very old test

9
00:00:18,960 --> 00:00:28,170
that we studied since basically 78 we

10
00:00:23,189 --> 00:00:31,500
have a set of notes here we have six

11
00:00:28,170 --> 00:00:33,870
five of them and these notes would like

12
00:00:31,500 --> 00:00:37,140
to agree on an ever-growing list of

13
00:00:33,870 --> 00:00:38,550
transactions yeah so this is today what

14
00:00:37,140 --> 00:00:39,629
we call a permission blockchain but I

15
00:00:38,550 --> 00:00:41,790
said this has been around for a long

16
00:00:39,629 --> 00:00:44,930
time with name such a state machine

17
00:00:41,790 --> 00:00:47,550
replication BFT and so on and so forth

18
00:00:44,930 --> 00:00:49,170
what do we mean for these nodes to agree

19
00:00:47,550 --> 00:00:50,459
on these transactions well typically we

20
00:00:49,170 --> 00:00:52,469
require two properties

21
00:00:50,460 --> 00:00:54,149
the first one is consistency and

22
00:00:52,469 --> 00:00:57,390
consistency roughly speaking says that

23
00:00:54,149 --> 00:00:58,710
if I take any two nodes then the review

24
00:00:57,390 --> 00:01:00,870
of these transactions that they have

25
00:00:58,710 --> 00:01:02,550
should be the same and the second

26
00:01:00,870 --> 00:01:04,110
property is liveness which roughly

27
00:01:02,550 --> 00:01:06,030
speaking says that whenever a node wants

28
00:01:04,110 --> 00:01:07,500
to add a transaction that it should get

29
00:01:06,030 --> 00:01:11,010
incorporated in everybody's view

30
00:01:07,500 --> 00:01:14,460
sufficiently fast it's a little bit more

31
00:01:11,010 --> 00:01:16,770
formally consistency actually consists

32
00:01:14,460 --> 00:01:18,720
of two parts the first one says that at

33
00:01:16,770 --> 00:01:22,560
any given point in time if we take two

34
00:01:18,720 --> 00:01:23,939
nodes me and you either my ledger my

35
00:01:22,560 --> 00:01:26,310
view of the transactions have been

36
00:01:23,939 --> 00:01:29,309
confirmed so far this is a prefix of

37
00:01:26,310 --> 00:01:30,750
yours or vice-versa and a second

38
00:01:29,310 --> 00:01:32,520
property which is sometimes called

39
00:01:30,750 --> 00:01:35,820
future self-consistency

40
00:01:32,520 --> 00:01:39,449
says that my ledger should always be a

41
00:01:35,820 --> 00:01:42,860
prefix of my future self is this very

42
00:01:39,450 --> 00:01:47,509
loud can you like lower a little bit

43
00:01:42,860 --> 00:01:47,509
liveness is actually permit rised

44
00:01:47,990 --> 00:01:54,860
legrest is permit rised by a function T

45
00:01:51,180 --> 00:01:56,700
and this function determines how fast a

46
00:01:54,860 --> 00:01:59,130
transaction is guaranteed to be

47
00:01:56,700 --> 00:02:00,450
introduced into a ledger so whatever an

48
00:01:59,130 --> 00:02:03,089
honest guy would like to add a

49
00:02:00,450 --> 00:02:06,060
transaction if we satisfy T liveness

50
00:02:03,090 --> 00:02:07,950
that means that everybody should have

51
00:02:06,060 --> 00:02:12,150
this transaction inside the ledger with

52
00:02:07,950 --> 00:02:13,860
an T of N comma K steps where n is the

53
00:02:12,150 --> 00:02:15,660
number of players in K is

54
00:02:13,860 --> 00:02:17,310
some security parameter so there's a

55
00:02:15,660 --> 00:02:21,150
fixed bound on how long it takes for a

56
00:02:17,310 --> 00:02:22,770
transaction to get incorporated and both

57
00:02:21,150 --> 00:02:24,660
these populist covers don't need to hold

58
00:02:22,770 --> 00:02:28,980
with probability one but one -

59
00:02:24,660 --> 00:02:31,140
technically probability this notion of

60
00:02:28,980 --> 00:02:33,480
lightness in fact very strong this is

61
00:02:31,140 --> 00:02:34,950
often called synchronous lightness so to

62
00:02:33,480 --> 00:02:36,239
achieve something like this we need to

63
00:02:34,950 --> 00:02:39,179
consider synchronous modular

64
00:02:36,240 --> 00:02:41,220
communication so in a synchronous modern

65
00:02:39,180 --> 00:02:44,070
model of communication we in essence

66
00:02:41,220 --> 00:02:47,220
allow people to communicate in rounds

67
00:02:44,070 --> 00:02:48,720
think of a round as a time step and we

68
00:02:47,220 --> 00:02:51,630
have the guarantee that whenever a good

69
00:02:48,720 --> 00:02:54,840
guy sends a message it gets to everybody

70
00:02:51,630 --> 00:02:56,670
within some maximum delay and is the

71
00:02:54,840 --> 00:02:58,680
latest called Delta okay so there is a

72
00:02:56,670 --> 00:03:00,119
maximum upper bound on the time it takes

73
00:02:58,680 --> 00:03:04,380
for a message to get delivered to

74
00:03:00,120 --> 00:03:07,410
everybody in fact often for simplicity

75
00:03:04,380 --> 00:03:09,329
we can just assume that even if a bad

76
00:03:07,410 --> 00:03:11,280
guy sends a message there's also this

77
00:03:09,330 --> 00:03:13,080
maximum delay of Delta until it gets

78
00:03:11,280 --> 00:03:15,630
delivered to everybody so whenever

79
00:03:13,080 --> 00:03:17,070
somebody sends a message either good or

80
00:03:15,630 --> 00:03:19,140
bad it gets delivered to everybody

81
00:03:17,070 --> 00:03:20,579
within Delta time steps and this

82
00:03:19,140 --> 00:03:22,230
assumption is often without little

83
00:03:20,580 --> 00:03:24,810
generality typically the case in the

84
00:03:22,230 --> 00:03:26,820
classic setting it's also the case for

85
00:03:24,810 --> 00:03:28,550
when I'm considering here so for now I'm

86
00:03:26,820 --> 00:03:31,670
just going to assume that

87
00:03:28,550 --> 00:03:34,050
additionally whenever you send a message

88
00:03:31,670 --> 00:03:35,670
the message is authenticated so we know

89
00:03:34,050 --> 00:03:41,310
whenever somebody sends a message - it

90
00:03:35,670 --> 00:03:44,730
comes from all right so this is a set a

91
00:03:41,310 --> 00:03:47,970
very old model going back to the late

92
00:03:44,730 --> 00:03:49,380
70s and basically a lot of things are

93
00:03:47,970 --> 00:03:52,470
known for this thing almost everything

94
00:03:49,380 --> 00:03:54,690
you want to know so the earliest results

95
00:03:52,470 --> 00:03:58,109
that if you'd like to achieve consensus

96
00:03:54,690 --> 00:04:01,350
you need to assume that two-thirds of

97
00:03:58,110 --> 00:04:03,060
the nodes are honest and the rest can be

98
00:04:01,350 --> 00:04:05,430
completely malicious so I'm going to

99
00:04:03,060 --> 00:04:07,500
consider a setting where some nodes are

100
00:04:05,430 --> 00:04:10,050
completely maliciously controlled and

101
00:04:07,500 --> 00:04:12,360
others are honest and so as long as

102
00:04:10,050 --> 00:04:15,450
one-third are honest we can achieve it

103
00:04:12,360 --> 00:04:16,470
and this is optimal however if we

104
00:04:15,450 --> 00:04:18,510
additionally have access to a public

105
00:04:16,470 --> 00:04:20,459
infrastructure then we can do a lot

106
00:04:18,510 --> 00:04:22,650
better and then we can actually get a

107
00:04:20,459 --> 00:04:25,440
security even if we just have a single

108
00:04:22,650 --> 00:04:27,370
honest guy so we can handle any number

109
00:04:25,440 --> 00:04:29,380
of corruptions

110
00:04:27,370 --> 00:04:32,980
yet those protocol to require a lot of

111
00:04:29,380 --> 00:04:36,370
rounds however if we edition assume that

112
00:04:32,980 --> 00:04:38,949
50% are honest we can also get something

113
00:04:36,370 --> 00:04:42,370
that gives you live nests within a

114
00:04:38,949 --> 00:04:43,570
constant number of time steps so what I

115
00:04:42,370 --> 00:04:46,150
mean by constant here is actually

116
00:04:43,570 --> 00:04:49,360
texting a constant times Delta time

117
00:04:46,150 --> 00:04:50,948
steps in order to for a transaction to

118
00:04:49,360 --> 00:04:53,770
be confirmed okay

119
00:04:50,949 --> 00:04:55,690
so there's still an to the gut whatever

120
00:04:53,770 --> 00:04:57,940
I can do better than number two here but

121
00:04:55,690 --> 00:05:03,370
except for that pretty much everything

122
00:04:57,940 --> 00:05:05,889
is known let me go over the general

123
00:05:03,370 --> 00:05:08,320
principle for getting consensus

124
00:05:05,889 --> 00:05:11,500
protocols in fact most of them follow

125
00:05:08,320 --> 00:05:13,380
the following simple recipe so we're

126
00:05:11,500 --> 00:05:17,050
gonna have a protocol proceeds in a box

127
00:05:13,380 --> 00:05:18,729
in each epoch we select some leader how

128
00:05:17,050 --> 00:05:19,990
this leader selector is not important

129
00:05:18,729 --> 00:05:22,539
think of it as just being around

130
00:05:19,990 --> 00:05:23,979
round-robin so first the first guy goes

131
00:05:22,539 --> 00:05:28,300
and the second guy goes and so on so

132
00:05:23,979 --> 00:05:31,120
forth and this leader gets to propose

133
00:05:28,300 --> 00:05:36,100
any set of any batch of new transactions

134
00:05:31,120 --> 00:05:37,830
and the way he proposes them is by just

135
00:05:36,100 --> 00:05:40,479
sending it out to everybody else and

136
00:05:37,830 --> 00:05:42,520
then these guys are gonna run something

137
00:05:40,479 --> 00:05:47,760
called a Byzantine Agreement protocol to

138
00:05:42,520 --> 00:05:50,620
agree on this batch of transactions okay

139
00:05:47,760 --> 00:05:52,510
and once they've agreed on this set of

140
00:05:50,620 --> 00:05:54,400
transactions we now say that that set of

141
00:05:52,510 --> 00:05:58,060
transactions has now been added to this

142
00:05:54,400 --> 00:05:59,530
ledger and has now been confirmed except

143
00:05:58,060 --> 00:06:01,479
to tell you what Byzantine agreement is

144
00:05:59,530 --> 00:06:04,659
most we probably know it but let me just

145
00:06:01,479 --> 00:06:06,969
very quickly repeated so in a Byzantine

146
00:06:04,660 --> 00:06:09,639
or green protocol it's very similar to a

147
00:06:06,970 --> 00:06:13,450
consensus protocol except it's just a

148
00:06:09,639 --> 00:06:16,440
single-shot game so we have this set of

149
00:06:13,450 --> 00:06:18,250
notes each of them have some input and

150
00:06:16,440 --> 00:06:20,830
they talk to each other eventually

151
00:06:18,250 --> 00:06:23,440
generate some output and we require

152
00:06:20,830 --> 00:06:26,830
three properties take any two on the

153
00:06:23,440 --> 00:06:28,419
skies they should agree on what address

154
00:06:26,830 --> 00:06:31,659
so they should always get the same

155
00:06:28,419 --> 00:06:32,830
output termination just says it should

156
00:06:31,660 --> 00:06:35,680
terminate within some fixed below

157
00:06:32,830 --> 00:06:37,719
mealtime in Delta and the interesting

158
00:06:35,680 --> 00:06:40,810
property here is that of validity

159
00:06:37,719 --> 00:06:43,210
validity says that if

160
00:06:40,810 --> 00:06:46,600
all of the owners guys start off with

161
00:06:43,210 --> 00:06:49,979
the same input then they should also get

162
00:06:46,600 --> 00:06:55,710
there as an output okay so in particular

163
00:06:49,980 --> 00:06:55,710
if we go back up to this original recipe

164
00:06:56,190 --> 00:07:00,610
this liveness condition two burner that

165
00:06:58,690 --> 00:07:03,310
whenever somebody wants to add a new

166
00:07:00,610 --> 00:07:05,680
transaction they send it to the leader

167
00:07:03,310 --> 00:07:07,389
the leader if he's honest he's gonna

168
00:07:05,680 --> 00:07:09,490
actually send it to everybody and then

169
00:07:07,389 --> 00:07:11,320
by the validity requirement of the

170
00:07:09,490 --> 00:07:13,240
Byzantine green protocol we know that

171
00:07:11,320 --> 00:07:15,880
everybody now starts off with the same

172
00:07:13,240 --> 00:07:18,070
input and the batch of transactions and

173
00:07:15,880 --> 00:07:19,630
they will therefore agree to it so

174
00:07:18,070 --> 00:07:22,560
therefore that transaction will be added

175
00:07:19,630 --> 00:07:24,940
and we're done and consistency of this

176
00:07:22,560 --> 00:07:27,010
recipe follows directly from consistency

177
00:07:24,940 --> 00:07:29,919
of the or the agreement property of the

178
00:07:27,010 --> 00:07:31,180
business and given protocol so very nice

179
00:07:29,919 --> 00:07:33,490
we just need to construct Byzantine

180
00:07:31,180 --> 00:07:38,350
Green protocols and that can also be

181
00:07:33,490 --> 00:07:39,880
done and so that's it now the topic of

182
00:07:38,350 --> 00:07:45,760
this talk of course in the era of

183
00:07:39,880 --> 00:07:47,469
Bitcoin is to handle consensus in in a

184
00:07:45,760 --> 00:07:49,360
logical setting so selling where the

185
00:07:47,470 --> 00:07:52,030
number of nodes is huge

186
00:07:49,360 --> 00:07:54,550
the typical setting were these original

187
00:07:52,030 --> 00:07:57,250
particles were considered had three or

188
00:07:54,550 --> 00:07:59,590
five or six nodes it was they were not

189
00:07:57,250 --> 00:08:02,020
meant to handle a scenario where you

190
00:07:59,590 --> 00:08:04,900
have a huge number of nodes whereas the

191
00:08:02,020 --> 00:08:06,729
Bitcoin protocol and the blockchain that

192
00:08:04,900 --> 00:08:10,650
underlies it indeed handles this huge

193
00:08:06,729 --> 00:08:14,260
number of players so that's awesome

194
00:08:10,650 --> 00:08:15,880
so by by handing a lot among players I

195
00:08:14,260 --> 00:08:17,919
mean I mean that we have a protocol that

196
00:08:15,880 --> 00:08:21,010
scales poly logarithmically in the

197
00:08:17,919 --> 00:08:23,530
number of players okay so it turns out

198
00:08:21,010 --> 00:08:25,840
that nakamoto's blockchain protocol

199
00:08:23,530 --> 00:08:28,090
actually does and that's great but

200
00:08:25,840 --> 00:08:30,099
unfortunately does rely on these proof

201
00:08:28,090 --> 00:08:33,968
of work so it's very expensive and waste

202
00:08:30,100 --> 00:08:35,620
a lot of computational effort in

203
00:08:33,969 --> 00:08:38,740
particular I think at the moment it's

204
00:08:35,620 --> 00:08:43,000
more than the total solar production in

205
00:08:38,740 --> 00:08:44,530
the u.s. it's quite a lot ok so a little

206
00:08:43,000 --> 00:08:46,600
bit more formally by communication

207
00:08:44,530 --> 00:08:48,189
official consensus we would like to have

208
00:08:46,600 --> 00:08:49,990
a consensus protocol satisfying two

209
00:08:48,190 --> 00:08:52,030
properties the first one is that the

210
00:08:49,990 --> 00:08:54,370
total number of bits that players

211
00:08:52,030 --> 00:08:56,140
multicast in total among the

212
00:08:54,370 --> 00:08:59,920
should we pull a logarithmic in the

213
00:08:56,140 --> 00:09:03,010
number of players and the total length

214
00:08:59,920 --> 00:09:07,360
of the transactions and the security

215
00:09:03,010 --> 00:09:11,020
parameter okay so basically poly log and

216
00:09:07,360 --> 00:09:14,370
number of players and then multiplied by

217
00:09:11,020 --> 00:09:16,720
the total length of the transactions

218
00:09:14,370 --> 00:09:18,220
additionally we also require for this

219
00:09:16,720 --> 00:09:19,900
not be trivial we also require that

220
00:09:18,220 --> 00:09:21,820
whenever somebody would like to add a

221
00:09:19,900 --> 00:09:23,290
transaction we have liveness the

222
00:09:21,820 --> 00:09:27,370
transaction should get confirmed within

223
00:09:23,290 --> 00:09:29,290
some poly logarithmic time also okay so

224
00:09:27,370 --> 00:09:31,060
basically everything both the

225
00:09:29,290 --> 00:09:33,810
communication complexity and lab they

226
00:09:31,060 --> 00:09:36,280
should be polar guernica nominal players

227
00:09:33,810 --> 00:09:38,859
and now we see this and you think well

228
00:09:36,280 --> 00:09:41,410
you know this should be kind of easy to

229
00:09:38,860 --> 00:09:43,240
do there is a trivial fuller approach

230
00:09:41,410 --> 00:09:45,250
right if we have a protocol handles a

231
00:09:43,240 --> 00:09:48,310
large neural players why don't we just

232
00:09:45,250 --> 00:09:51,900
subselect a small group and then write

233
00:09:48,310 --> 00:09:54,400
it among those guys very easy right and

234
00:09:51,900 --> 00:09:57,310
we have very different methods of sub

235
00:09:54,400 --> 00:10:02,350
selecting a committee of players to run

236
00:09:57,310 --> 00:10:04,810
this and indeed it does work but that

237
00:10:02,350 --> 00:10:06,370
approach of sub selection in fact only

238
00:10:04,810 --> 00:10:10,089
gives you a protocol with static

239
00:10:06,370 --> 00:10:13,240
security in particular if we get to

240
00:10:10,090 --> 00:10:14,860
adapt the Clawd corrupt nodes then this

241
00:10:13,240 --> 00:10:16,780
can be completely broken because I can

242
00:10:14,860 --> 00:10:19,600
just if I know exactly who gets elected

243
00:10:16,780 --> 00:10:20,980
I can just corrupt only those guys and

244
00:10:19,600 --> 00:10:24,040
I'm on corrupting a small fraction of

245
00:10:20,980 --> 00:10:28,420
players and I control everything that's

246
00:10:24,040 --> 00:10:30,400
not so great in fact even if I have a

247
00:10:28,420 --> 00:10:34,030
communication efficient Byzantine

248
00:10:30,400 --> 00:10:36,610
agreement protocol that is adapt to be

249
00:10:34,030 --> 00:10:41,770
secure this method still doesn't work

250
00:10:36,610 --> 00:10:44,860
and in fact there has been some recent

251
00:10:41,770 --> 00:10:46,030
work including by ourselves that show

252
00:10:44,860 --> 00:10:47,530
how to achieve base in their green

253
00:10:46,030 --> 00:10:49,329
protocols that are communication

254
00:10:47,530 --> 00:10:51,010
efficient and adaptive secure but

255
00:10:49,330 --> 00:10:53,230
plugging those things into this paradigm

256
00:10:51,010 --> 00:10:55,810
still won't work and the issue is

257
00:10:53,230 --> 00:10:57,910
regarding the leader because we remember

258
00:10:55,810 --> 00:10:59,469
in this recipe we need to first have a

259
00:10:57,910 --> 00:11:02,199
leader who sends things out and then

260
00:10:59,470 --> 00:11:04,600
they reuse business agreement if this

261
00:11:02,200 --> 00:11:07,330
leader is corrupted the validity

262
00:11:04,600 --> 00:11:09,250
conditions we had from the online

263
00:11:07,330 --> 00:11:10,779
visit an agreement protocol gives us

264
00:11:09,250 --> 00:11:13,300
nothing because if the leader is

265
00:11:10,779 --> 00:11:15,700
corrupted he can send garbage three

266
00:11:13,300 --> 00:11:23,349
players and we're not going to make any

267
00:11:15,700 --> 00:11:24,640
progress okay so the question and they

268
00:11:23,350 --> 00:11:27,160
would like to address is whether we can

269
00:11:24,640 --> 00:11:30,459
get a communication efficient consensus

270
00:11:27,160 --> 00:11:34,540
protocol that is also doubly secure and

271
00:11:30,459 --> 00:11:37,479
that's the topic of this thought and as

272
00:11:34,540 --> 00:11:39,610
I mentioned nakamoto's original protocol

273
00:11:37,480 --> 00:11:42,910
indeed satisfies this current tea and

274
00:11:39,610 --> 00:11:44,980
this was shown a few years ago but it

275
00:11:42,910 --> 00:11:47,800
requires proof of work okay

276
00:11:44,980 --> 00:11:50,620
however it shows that assuming 50% a

277
00:11:47,800 --> 00:11:52,420
player's honest in this proof work model

278
00:11:50,620 --> 00:11:54,820
and using a random Oracle we can get a

279
00:11:52,420 --> 00:11:57,990
protocol that's is communication

280
00:11:54,820 --> 00:11:57,990
efficient and handles up the security

281
00:11:58,440 --> 00:12:04,420
the same year it was also shown by Chen

282
00:12:01,240 --> 00:12:08,529
and McCauley that you can also achieve

283
00:12:04,420 --> 00:12:11,829
it without proof of work and they indeed

284
00:12:08,529 --> 00:12:14,709
obtained in the public key model and

285
00:12:11,829 --> 00:12:17,770
using a random Oracle they show a

286
00:12:14,709 --> 00:12:20,849
communication efficient protocol that is

287
00:12:17,770 --> 00:12:23,439
secured respect adaptive attackers under

288
00:12:20,850 --> 00:12:26,020
assuming one third of the players are at

289
00:12:23,440 --> 00:12:29,490
most corrupted but this time they use

290
00:12:26,020 --> 00:12:31,720
erasers so I assume that you can erase

291
00:12:29,490 --> 00:12:35,050
computation and erase your memory

292
00:12:31,720 --> 00:12:37,089
completely let me explain how either

293
00:12:35,050 --> 00:12:40,209
proof-of-work erasers help us overcome

294
00:12:37,089 --> 00:12:43,899
the issue roughly speaking the issue

295
00:12:40,209 --> 00:12:46,209
with subselection is that it should be

296
00:12:43,899 --> 00:12:53,500
hard to predict who is the leader in

297
00:12:46,209 --> 00:12:55,000
advance but the first thing i okay if I

298
00:12:53,500 --> 00:12:56,560
can predict who the leader advanced are

299
00:12:55,000 --> 00:12:58,959
just going to corrupt him and then I can

300
00:12:56,560 --> 00:13:02,410
create havoc right because I let him

301
00:12:58,959 --> 00:13:03,209
send garbage transactions with

302
00:13:02,410 --> 00:13:05,529
proof-of-work

303
00:13:03,209 --> 00:13:07,089
nobody can predict in advance if we're

304
00:13:05,529 --> 00:13:09,070
doing this mining I can never know who's

305
00:13:07,089 --> 00:13:13,570
gonna be elected leader so that seems to

306
00:13:09,070 --> 00:13:15,610
be good alright another approach and

307
00:13:13,570 --> 00:13:17,110
that's approach used by Jeremy Kerley is

308
00:13:15,610 --> 00:13:18,850
to use a via ref and you heard about

309
00:13:17,110 --> 00:13:21,160
that in the previous talk so use this

310
00:13:18,850 --> 00:13:22,930
verifiable random function which are

311
00:13:21,160 --> 00:13:24,850
me to figure out whenever I'm gonna

312
00:13:22,930 --> 00:13:27,339
become the leader but nobody else can

313
00:13:24,850 --> 00:13:28,660
figure out before it has happened so we

314
00:13:27,340 --> 00:13:30,760
allowed that is kind of a secret

315
00:13:28,660 --> 00:13:33,400
subselection where the person who gets

316
00:13:30,760 --> 00:13:36,640
elected on the committee figured out but

317
00:13:33,400 --> 00:13:37,810
nobody else finds out unless until they

318
00:13:36,640 --> 00:13:40,270
reveal the proof that they've been

319
00:13:37,810 --> 00:13:42,069
elected that's great that deals with the

320
00:13:40,270 --> 00:13:43,720
fact that you cannot figure out who is

321
00:13:42,070 --> 00:13:44,400
the leader in advance both elite

322
00:13:43,720 --> 00:13:46,980
approaches

323
00:13:44,400 --> 00:13:49,390
now here it comes the interesting thing

324
00:13:46,980 --> 00:13:51,820
it shouldn't just be hard to predict who

325
00:13:49,390 --> 00:13:53,020
is the leader a priori but it should

326
00:13:51,820 --> 00:13:55,090
actually be hard to predict who is the

327
00:13:53,020 --> 00:13:58,210
leader even after he has become the

328
00:13:55,090 --> 00:14:02,680
leader a posteriori so what do I mean by

329
00:13:58,210 --> 00:14:04,780
this after leader speaks I know who the

330
00:14:02,680 --> 00:14:07,089
leader is right and then I can just take

331
00:14:04,780 --> 00:14:09,160
him and corrupt him now he's only sent

332
00:14:07,090 --> 00:14:11,260
something out so I can't deal with that

333
00:14:09,160 --> 00:14:14,410
but I can just send out some other

334
00:14:11,260 --> 00:14:17,020
message and given that there is some

335
00:14:14,410 --> 00:14:19,000
delay on this network I can just slow

336
00:14:17,020 --> 00:14:21,310
down the first one and make the second

337
00:14:19,000 --> 00:14:23,850
message come faster and therefore I get

338
00:14:21,310 --> 00:14:27,550
these two conflicting transactions again

339
00:14:23,850 --> 00:14:29,740
so that seems to be a issue that's

340
00:14:27,550 --> 00:14:32,439
harder to deal with and indeed the way

341
00:14:29,740 --> 00:14:34,750
they are dealt with with proof work is

342
00:14:32,440 --> 00:14:36,700
that actually just because you manage to

343
00:14:34,750 --> 00:14:37,600
mind something once that will not help

344
00:14:36,700 --> 00:14:40,660
you to mine again

345
00:14:37,600 --> 00:14:41,950
you're like the leader but even if I

346
00:14:40,660 --> 00:14:43,030
take you afterwards that doesn't mean

347
00:14:41,950 --> 00:14:45,730
you're going to be more likely to be

348
00:14:43,030 --> 00:14:49,030
like the leader again to send an invalid

349
00:14:45,730 --> 00:14:51,130
thing and the way China made Kelley deal

350
00:14:49,030 --> 00:14:52,930
with this issue is that your elected

351
00:14:51,130 --> 00:14:55,330
leader you send out this transaction for

352
00:14:52,930 --> 00:14:58,810
everybody but as soon as you send it out

353
00:14:55,330 --> 00:15:03,400
you erase the relevant state needed for

354
00:14:58,810 --> 00:15:04,810
the vrf so you send it out I can

355
00:15:03,400 --> 00:15:07,209
interrupt you and then you're like well

356
00:15:04,810 --> 00:15:08,619
I'm not leader anymore I could not have

357
00:15:07,210 --> 00:15:13,690
been leader before and I don't have the

358
00:15:08,620 --> 00:15:16,960
key anymore okay so this is how we raise

359
00:15:13,690 --> 00:15:19,450
your deals with it now one issue with

360
00:15:16,960 --> 00:15:22,210
this approach which has been raised by

361
00:15:19,450 --> 00:15:24,220
several people is that it doesn't really

362
00:15:22,210 --> 00:15:27,250
seem rational for me to erase this thing

363
00:15:24,220 --> 00:15:31,230
because by raising it I'm kind of losing

364
00:15:27,250 --> 00:15:31,230
a possibility that I can use later on

365
00:15:31,920 --> 00:15:36,810
so our main result

366
00:15:34,660 --> 00:15:40,329
is indeed showing that you can overcome

367
00:15:36,810 --> 00:15:42,939
this issue and not deal with ratios at

368
00:15:40,330 --> 00:15:44,530
all so we present a protocol in the PKI

369
00:15:42,940 --> 00:15:48,460
and cirrus models we don't even need a

370
00:15:44,530 --> 00:15:49,870
random Oracle assuming standard crypto

371
00:15:48,460 --> 00:15:50,950
assumptions over by linear maps in

372
00:15:49,870 --> 00:15:53,310
particularly we need a non-interactive

373
00:15:50,950 --> 00:15:58,860
as your knowledge with adaptive security

374
00:15:53,310 --> 00:16:01,780
that handles the same 1/3 corruption

375
00:15:58,860 --> 00:16:02,910
without Reyes without proof work and

376
00:16:01,780 --> 00:16:08,530
read from Oracle's

377
00:16:02,910 --> 00:16:10,240
all right so in the rest of the talk let

378
00:16:08,530 --> 00:16:13,660
me convey on the high level with our

379
00:16:10,240 --> 00:16:14,770
approaches so as I mentioned the idea is

380
00:16:13,660 --> 00:16:17,410
going to be relying on this notion

381
00:16:14,770 --> 00:16:19,840
called herding and the way we're going

382
00:16:17,410 --> 00:16:21,870
to do this is in fact as a first step

383
00:16:19,840 --> 00:16:24,700
we're going to define a new type of

384
00:16:21,870 --> 00:16:26,290
single shot consensus primitive that's

385
00:16:24,700 --> 00:16:27,910
going to be different than just visit

386
00:16:26,290 --> 00:16:30,699
the agreement it's something we recall

387
00:16:27,910 --> 00:16:33,189
batch agreement and it's going to have

388
00:16:30,700 --> 00:16:34,390
slightly stronger properties and then

389
00:16:33,190 --> 00:16:37,320
we're going to show to implement this

390
00:16:34,390 --> 00:16:39,610
new type of batch agreement from hurting

391
00:16:37,320 --> 00:16:40,750
what's batch agreement so batch

392
00:16:39,610 --> 00:16:43,540
agreements a little bit more complicated

393
00:16:40,750 --> 00:16:45,220
than than just business the agreement so

394
00:16:43,540 --> 00:16:49,900
here we consider an execution with

395
00:16:45,220 --> 00:16:51,730
players before starting in protocol get

396
00:16:49,900 --> 00:16:53,050
to interact with an environment and

397
00:16:51,730 --> 00:16:55,060
environment is providing them

398
00:16:53,050 --> 00:16:56,170
transactions so I'm getting some

399
00:16:55,060 --> 00:16:59,589
transactions you're getting some

400
00:16:56,170 --> 00:17:01,420
transaction and at some point the

401
00:16:59,590 --> 00:17:03,760
environment says start so it tells

402
00:17:01,420 --> 00:17:05,379
everybody let's start the protocol at

403
00:17:03,760 --> 00:17:09,060
that point they have seen a list of

404
00:17:05,380 --> 00:17:11,110
transactions ok we call this time t0

405
00:17:09,060 --> 00:17:13,540
then they run the protocol and then

406
00:17:11,109 --> 00:17:15,129
generate some output the security

407
00:17:13,540 --> 00:17:16,780
properties the first two agreement

408
00:17:15,130 --> 00:17:18,630
determination just as before agreement

409
00:17:16,780 --> 00:17:21,879
says that we have the same output but

410
00:17:18,630 --> 00:17:24,910
validity on Allen is stronger validity

411
00:17:21,880 --> 00:17:28,360
says that any transaction that anybody

412
00:17:24,910 --> 00:17:32,170
has seen up to time T 0 when the guys

413
00:17:28,359 --> 00:17:35,620
that start - some delay needs to be

414
00:17:32,170 --> 00:17:38,950
included so the source says whatever I

415
00:17:35,620 --> 00:17:40,689
have seen up until time T 0 - 10 seconds

416
00:17:38,950 --> 00:17:45,340
I need to include it in my output and so

417
00:17:40,690 --> 00:17:47,080
she'll everybody else so this notion you

418
00:17:45,340 --> 00:17:48,490
can see if you have this thing you can

419
00:17:47,080 --> 00:17:51,580
very easily get consensus

420
00:17:48,490 --> 00:17:53,680
just sequentially repeat this one after

421
00:17:51,580 --> 00:17:54,760
one after another and that current is

422
00:17:53,680 --> 00:17:56,310
that whenever somebody wants a

423
00:17:54,760 --> 00:17:59,530
transaction it will get other

424
00:17:56,310 --> 00:18:02,409
sufficiently fast okay so the question

425
00:17:59,530 --> 00:18:04,450
is how do we achieve this thing all

426
00:18:02,410 --> 00:18:06,790
right to do that we're gonna rely on

427
00:18:04,450 --> 00:18:10,300
this idea of hoarding what is hurting

428
00:18:06,790 --> 00:18:12,580
hurting is actually something that came

429
00:18:10,300 --> 00:18:19,360
up in the economics literature and

430
00:18:12,580 --> 00:18:25,169
probably even earlier in in in the

431
00:18:19,360 --> 00:18:28,560
literature on the social social science

432
00:18:25,170 --> 00:18:32,830
so this is what it's about so let's say

433
00:18:28,560 --> 00:18:34,090
we would like to decide whether smoking

434
00:18:32,830 --> 00:18:36,550
causes cancer or not

435
00:18:34,090 --> 00:18:38,379
we start off having some initial beliefs

436
00:18:36,550 --> 00:18:40,450
about what it does or not so we call

437
00:18:38,380 --> 00:18:43,390
this w is a state to the world which is

438
00:18:40,450 --> 00:18:46,170
a bit in a 0 or 1 does smoking caused

439
00:18:43,390 --> 00:18:49,000
cancer we start with its initial beliefs

440
00:18:46,170 --> 00:18:51,880
and then we're gonna speak one after

441
00:18:49,000 --> 00:18:53,590
another so first I go and I'm gonna

442
00:18:51,880 --> 00:18:56,290
output a guess for whether I think

443
00:18:53,590 --> 00:18:59,020
smoking causes cancer or not I guess yes

444
00:18:56,290 --> 00:19:01,000
okay and then you go and then you make a

445
00:18:59,020 --> 00:19:03,340
guess but the point is you have already

446
00:19:01,000 --> 00:19:05,440
heard my guess so right now you have

447
00:19:03,340 --> 00:19:07,600
your beliefs but you can update your

448
00:19:05,440 --> 00:19:11,580
beliefs based on my beliefs based on my

449
00:19:07,600 --> 00:19:14,020
guess right now if we assume that

450
00:19:11,580 --> 00:19:17,530
everybody's original beliefs are as

451
00:19:14,020 --> 00:19:19,720
strong all right so we have seen as much

452
00:19:17,530 --> 00:19:22,570
evidence we've just seen signals about

453
00:19:19,720 --> 00:19:25,450
whether this is the bit is 0-1 so if the

454
00:19:22,570 --> 00:19:28,360
beliefs are AB strong in that case and

455
00:19:25,450 --> 00:19:29,620
we assume that players are rational and

456
00:19:28,360 --> 00:19:30,760
not only the Russian but they assume

457
00:19:29,620 --> 00:19:32,350
that everybody's Russian and so on so

458
00:19:30,760 --> 00:19:35,470
forth it's called common old-fashioned

459
00:19:32,350 --> 00:19:38,379
LT then what we should do at any given

460
00:19:35,470 --> 00:19:41,170
point is I should just output make a

461
00:19:38,380 --> 00:19:43,510
majority decision if I have seen the

462
00:19:41,170 --> 00:19:45,940
first guy says no the second guy says no

463
00:19:43,510 --> 00:19:49,180
even if I originally believed that it's

464
00:19:45,940 --> 00:19:51,130
yes I'm like well you know that guy was

465
00:19:49,180 --> 00:19:53,680
rational so he must have had a better

466
00:19:51,130 --> 00:19:55,480
it's no 0 and then the next guy must

467
00:19:53,680 --> 00:19:58,810
have thoughts also so therefore I should

468
00:19:55,480 --> 00:20:01,830
change our mind and output know also so

469
00:19:58,810 --> 00:20:01,830
what happens at this point

470
00:20:01,960 --> 00:20:07,330
even if I think it's a yes if the first

471
00:20:04,539 --> 00:20:09,129
two guys say no I'm gonna also say no

472
00:20:07,330 --> 00:20:10,449
and then a third fourth guy will be on

473
00:20:09,129 --> 00:20:11,619
the same though and so on so forth and

474
00:20:10,450 --> 00:20:14,710
we get what's called an information

475
00:20:11,619 --> 00:20:18,639
cascade so everybody says no so this is

476
00:20:14,710 --> 00:20:20,499
very nice or not is it's sometimes

477
00:20:18,639 --> 00:20:23,799
called the foolishness of crowds because

478
00:20:20,499 --> 00:20:25,539
it leads to sometimes crazy a decision

479
00:20:23,799 --> 00:20:27,970
even though everybody starts off with

480
00:20:25,539 --> 00:20:30,220
having like a good beliefs you just have

481
00:20:27,970 --> 00:20:32,619
a few silly individuals that start off

482
00:20:30,220 --> 00:20:34,210
saying bad things and it just propagates

483
00:20:32,619 --> 00:20:35,709
and this is one way to explain the

484
00:20:34,210 --> 00:20:39,639
spread of fake news and so on so forth

485
00:20:35,710 --> 00:20:42,669
right but not on the other hand that

486
00:20:39,639 --> 00:20:44,619
they all agree right they don't agree on

487
00:20:42,669 --> 00:20:47,159
the truth but they always agree and this

488
00:20:44,619 --> 00:20:49,418
can happens with probability almost one

489
00:20:47,159 --> 00:20:52,389
so we're gonna use a very similar

490
00:20:49,419 --> 00:20:57,039
approach to get consensus and to get

491
00:20:52,389 --> 00:20:58,959
patch agreement we're gonna given a set

492
00:20:57,039 --> 00:21:01,539
of transaction bathroom transactions

493
00:20:58,960 --> 00:21:03,759
we're going to give it a score so each

494
00:21:01,539 --> 00:21:05,499
individual is going to assign a score to

495
00:21:03,759 --> 00:21:08,559
whatever to some batch of transactions

496
00:21:05,499 --> 00:21:11,679
and the way it's gonna assign its score

497
00:21:08,559 --> 00:21:12,850
is going to be by first looking at this

498
00:21:11,679 --> 00:21:15,159
batch of transaction and giving it some

499
00:21:12,850 --> 00:21:18,549
initial score think of this initial

500
00:21:15,159 --> 00:21:21,159
score as my initial belief I had okay

501
00:21:18,549 --> 00:21:23,289
and then I'm gonna add to that the

502
00:21:21,159 --> 00:21:25,539
number of votes I've seen for that batch

503
00:21:23,289 --> 00:21:26,889
so people are gonna be voting people

504
00:21:25,539 --> 00:21:28,629
gonna say which is which one do you

505
00:21:26,889 --> 00:21:30,908
think is the best and that's gonna be a

506
00:21:28,629 --> 00:21:32,590
vote for it so my score now for this

507
00:21:30,909 --> 00:21:35,080
transaction is going to be how much I

508
00:21:32,590 --> 00:21:38,379
believed it was worth at first Plus how

509
00:21:35,080 --> 00:21:39,820
many votes have seen for it and then

510
00:21:38,379 --> 00:21:43,449
basically we're going to do the same

511
00:21:39,820 --> 00:21:45,460
type of herding type of protocol so

512
00:21:43,450 --> 00:21:48,429
people are going to go one after another

513
00:21:45,460 --> 00:21:49,690
and they're gonna send a vote for the

514
00:21:48,429 --> 00:21:51,970
transaction that they think is the best

515
00:21:49,690 --> 00:21:53,999
the batch of transactions the tasting

516
00:21:51,970 --> 00:21:57,309
have the highest score according to them

517
00:21:53,999 --> 00:21:59,080
so when it's my turn to go I just vote

518
00:21:57,309 --> 00:22:03,340
say I'd put a vote for my best

519
00:21:59,080 --> 00:22:05,230
transaction a country's score okay now

520
00:22:03,340 --> 00:22:07,418
it remains to see how in what other

521
00:22:05,230 --> 00:22:09,999
people are going to go the way we decide

522
00:22:07,419 --> 00:22:12,070
the order is again using a vrf but

523
00:22:09,999 --> 00:22:14,470
there's a little trick here I'm not just

524
00:22:12,070 --> 00:22:16,720
applying the vrf to

525
00:22:14,470 --> 00:22:18,879
to the rum number like was done before

526
00:22:16,720 --> 00:22:21,460
but I'm also going to apply the VF to

527
00:22:18,879 --> 00:22:25,809
the set of transactions and the round

528
00:22:21,460 --> 00:22:26,799
number okay and we just do this for polo

529
00:22:25,809 --> 00:22:29,649
give me many times

530
00:22:26,799 --> 00:22:31,929
alright so very easy I start off with

531
00:22:29,649 --> 00:22:33,428
mine original set of transactions that

532
00:22:31,929 --> 00:22:36,129
I've heard from the environment I'm

533
00:22:33,429 --> 00:22:38,590
gonna score that and then when it's my

534
00:22:36,129 --> 00:22:40,240
time to go I send a vote for that then

535
00:22:38,590 --> 00:22:42,730
it's your turn to go then you're gonna

536
00:22:40,240 --> 00:22:43,960
vote for your best batch of transactions

537
00:22:42,730 --> 00:22:46,509
and so on and so forth

538
00:22:43,960 --> 00:22:48,190
and we update our score so therefore

539
00:22:46,509 --> 00:22:53,740
beliefs based on how many votes have

540
00:22:48,190 --> 00:22:55,809
seen this V ref needs to be adaptive

541
00:22:53,740 --> 00:22:59,370
secure and we've shown in the earlier

542
00:22:55,809 --> 00:23:01,299
paper you can do that based on goes

543
00:22:59,370 --> 00:23:03,969
strophic a so high and that's where we

544
00:23:01,299 --> 00:23:05,830
need these PI linear maps alright I

545
00:23:03,970 --> 00:23:07,210
haven't told you how to set initial

546
00:23:05,830 --> 00:23:09,759
score and that's actually going to be

547
00:23:07,210 --> 00:23:12,159
the important part of it the way we're

548
00:23:09,759 --> 00:23:15,360
going to set the initial score is by

549
00:23:12,159 --> 00:23:18,129
first given a batch of transactions TX

550
00:23:15,360 --> 00:23:21,129
I'm gonna determine how old did this

551
00:23:18,129 --> 00:23:24,549
batch is I'll say that the transaction

552
00:23:21,129 --> 00:23:27,370
has a certain age it's going to have the

553
00:23:24,549 --> 00:23:30,759
age of the oldest missed transaction in

554
00:23:27,370 --> 00:23:32,799
TX so let's say we have some bad guy

555
00:23:30,759 --> 00:23:37,179
who's going to propose some batch of

556
00:23:32,799 --> 00:23:40,090
transactions that to me look old because

557
00:23:37,179 --> 00:23:43,690
it has missed some transaction that I

558
00:23:40,090 --> 00:23:46,090
have seen that I've seen in my view but

559
00:23:43,690 --> 00:23:48,279
he has excluded in that case I'm gonna

560
00:23:46,090 --> 00:23:51,490
refer to this one as being old has been

561
00:23:48,279 --> 00:23:52,720
a long time it's not fast anymore

562
00:23:51,490 --> 00:23:56,559
because it's missing something that

563
00:23:52,720 --> 00:24:01,360
should have been there okay I will now

564
00:23:56,559 --> 00:24:05,289
set my initial score my original belief

565
00:24:01,360 --> 00:24:08,469
of this transaction thing basically some

566
00:24:05,289 --> 00:24:11,679
exponential decaying function of the age

567
00:24:08,470 --> 00:24:13,419
of the of the transaction so it's going

568
00:24:11,679 --> 00:24:15,759
to be some some constant times 1 minus

569
00:24:13,419 --> 00:24:17,440
epsilon times the age of transaction and

570
00:24:15,759 --> 00:24:19,870
in fact the right way to look at this is

571
00:24:17,440 --> 00:24:21,970
due to age in time divided by Delta

572
00:24:19,870 --> 00:24:24,309
where Delta is the network propagation

573
00:24:21,970 --> 00:24:25,659
time so really on a sometimes

574
00:24:24,309 --> 00:24:28,120
exponential they're decreasing in the

575
00:24:25,659 --> 00:24:30,610
edge in terms of

576
00:24:28,120 --> 00:24:33,459
propagation so why do I have this

577
00:24:30,610 --> 00:24:35,080
bizarre scoring function the idea is the

578
00:24:33,460 --> 00:24:39,490
following and this is the key for the

579
00:24:35,080 --> 00:24:41,290
proof if I take two on this guy's their

580
00:24:39,490 --> 00:24:44,740
initial scores are actually going to

581
00:24:41,290 --> 00:24:48,760
differ by very very little because the

582
00:24:44,740 --> 00:24:50,470
difference in in age between because the

583
00:24:48,760 --> 00:24:52,990
because of this network propagation

584
00:24:50,470 --> 00:24:56,620
assumption any two owners batches of

585
00:24:52,990 --> 00:25:01,060
transactions are gonna have very small

586
00:24:56,620 --> 00:25:07,239
gaps additionally we have that if I take

587
00:25:01,060 --> 00:25:10,090
some some on this guy he's batch he's

588
00:25:07,240 --> 00:25:12,850
gonna score it high his original batch

589
00:25:10,090 --> 00:25:13,899
has eight zero it's very young so

590
00:25:12,850 --> 00:25:16,409
therefore it's gonna have a score of at

591
00:25:13,900 --> 00:25:21,580
least C so it's gonna have a high score

592
00:25:16,410 --> 00:25:23,860
now what happens now is I'm not gonna

593
00:25:21,580 --> 00:25:26,860
really go over the proof but the idea

594
00:25:23,860 --> 00:25:29,860
here is that if the initial score differ

595
00:25:26,860 --> 00:25:31,780
by very little that means that scores

596
00:25:29,860 --> 00:25:33,399
that good guys have will differ very

597
00:25:31,780 --> 00:25:35,020
little and that misses good guys in

598
00:25:33,400 --> 00:25:38,500
offense are going to concentrate their

599
00:25:35,020 --> 00:25:40,420
voting effort on the same transactions

600
00:25:38,500 --> 00:25:42,250
and you can prove and this is a little

601
00:25:40,420 --> 00:25:44,140
bit tricky to do but it follows using

602
00:25:42,250 --> 00:25:45,910
proofs similar to the way a blockchain

603
00:25:44,140 --> 00:25:48,340
the protocol to analyze that will

604
00:25:45,910 --> 00:25:54,700
eventually be some set of transactions

605
00:25:48,340 --> 00:25:57,220
that get a lot of votes now since by

606
00:25:54,700 --> 00:26:01,060
this observation to each good guy scores

607
00:25:57,220 --> 00:26:03,910
his transaction hi good guys will never

608
00:26:01,060 --> 00:26:05,889
vote for any transactions that are very

609
00:26:03,910 --> 00:26:09,580
very old because their score just

610
00:26:05,890 --> 00:26:12,880
couldn't be too low and consequently

611
00:26:09,580 --> 00:26:14,199
from that we have validity and the

612
00:26:12,880 --> 00:26:19,240
agreement property will basically

613
00:26:14,200 --> 00:26:21,460
followed from the idea that if that as

614
00:26:19,240 --> 00:26:24,760
we argued before some transaction is

615
00:26:21,460 --> 00:26:25,330
going to get a lot of votes but and here

616
00:26:24,760 --> 00:26:28,720
is the point

617
00:26:25,330 --> 00:26:30,429
the key point why we're tying this the

618
00:26:28,720 --> 00:26:34,870
eligibility property of one you can vote

619
00:26:30,430 --> 00:26:36,520
to the transaction you can argue that

620
00:26:34,870 --> 00:26:40,590
the number of total votes that can be

621
00:26:36,520 --> 00:26:42,269
sent is going to be small and from that

622
00:26:40,590 --> 00:26:43,769
we can improve agreement and here we

623
00:26:42,269 --> 00:26:45,809
rely on two thirds honesty obviously I'm

624
00:26:43,769 --> 00:26:47,940
not going over any details but thought

625
00:26:45,809 --> 00:26:49,649
summarize we've shown here is that in

626
00:26:47,940 --> 00:26:52,350
the public key model with a common

627
00:26:49,649 --> 00:26:54,389
reference string assuming standard crypt

628
00:26:52,350 --> 00:26:57,090
assumptions we can get a communication

629
00:26:54,389 --> 00:27:00,539
efficient consensus protocol that

630
00:26:57,090 --> 00:27:04,110
handles attackers corrupting up to one

631
00:27:00,539 --> 00:27:05,850
third of the players we need no erasers

632
00:27:04,110 --> 00:27:07,889
no proof work the random Oracle's and

633
00:27:05,850 --> 00:27:10,289
what I think is probably the most cool

634
00:27:07,889 --> 00:27:13,139
thing here is if we're using this idea

635
00:27:10,289 --> 00:27:14,759
from social sciences and economics this

636
00:27:13,139 --> 00:27:17,399
idea of hoarding that these typically

637
00:27:14,759 --> 00:27:25,499
viewed as a kind of a bad thing and use

638
00:27:17,399 --> 00:27:27,119
it for for something good to leave some

639
00:27:25,499 --> 00:27:28,769
open questions and very natural thing is

640
00:27:27,119 --> 00:27:30,509
can we do better than one third we

641
00:27:28,769 --> 00:27:32,899
believe we can do we think my should be

642
00:27:30,509 --> 00:27:34,860
able to get it up to one half and

643
00:27:32,899 --> 00:27:38,820
another nice thing is to deal with

644
00:27:34,860 --> 00:27:41,039
partial synchrony and to thing worth

645
00:27:38,820 --> 00:27:42,960
mention is in fact in this other work we

646
00:27:41,039 --> 00:27:45,929
have shown that a peaky eye is needed so

647
00:27:42,960 --> 00:27:47,249
you cannot remove it and stronger

648
00:27:45,929 --> 00:27:50,020
corruption model is actually not

649
00:27:47,249 --> 00:27:55,029
possible thank you

650
00:27:50,020 --> 00:27:55,029
[Applause]

651
00:27:56,720 --> 00:28:04,170
questions for Rafael so thanks for a

652
00:28:02,190 --> 00:28:05,820
nice talk I have a question

653
00:28:04,170 --> 00:28:07,770
so it's this protocol or this technique

654
00:28:05,820 --> 00:28:09,240
that you use related to Avinash also

655
00:28:07,770 --> 00:28:11,490
somehow because it looks very similar

656
00:28:09,240 --> 00:28:13,530
similar to this kind of voting and

657
00:28:11,490 --> 00:28:15,150
infection and then they all turn I saw

658
00:28:13,530 --> 00:28:20,270
some medium article somebody yeah a

659
00:28:15,150 --> 00:28:20,270
Peoria I don't think it is but you know

660
00:28:25,790 --> 00:28:36,450
alright okay the very last question of

661
00:28:30,000 --> 00:28:40,110
so two questions so why is it okay you

662
00:28:36,450 --> 00:28:43,260
could say I just had a short question

663
00:28:40,110 --> 00:28:46,469
about the eraser sort of thing do you

664
00:28:43,260 --> 00:28:47,970
think one could use say one say use like

665
00:28:46,470 --> 00:28:50,190
some cryptographic primitives like one

666
00:28:47,970 --> 00:28:53,160
time signatures like can we incentivize

667
00:28:50,190 --> 00:28:55,260
I guess people to raise two arrays right

668
00:28:53,160 --> 00:28:57,420
like say that you know if we have one

669
00:28:55,260 --> 00:28:59,129
time signatures then yeah you can spend

670
00:28:57,420 --> 00:29:02,670
you you better delete your key because

671
00:28:59,130 --> 00:29:04,170
otherwise if it's used twice you lose I

672
00:29:02,670 --> 00:29:09,420
don't know everything or a deposit or

673
00:29:04,170 --> 00:29:11,570
something well I guess what we show here

674
00:29:09,420 --> 00:29:16,500
is you don't even have to think about it

675
00:29:11,570 --> 00:29:21,629
but yeah I don't know like in fact the

676
00:29:16,500 --> 00:29:25,140
way this the way these things work is

677
00:29:21,630 --> 00:29:26,490
that you you have this V F key that

678
00:29:25,140 --> 00:29:28,680
needs to be used in order to compute the

679
00:29:26,490 --> 00:29:30,180
future still so that's why it's a little

680
00:29:28,680 --> 00:29:32,190
bit complicated because you want to

681
00:29:30,180 --> 00:29:33,870
allow the good guy to be able to you

682
00:29:32,190 --> 00:29:35,700
reuse the key many times in the future

683
00:29:33,870 --> 00:29:38,040
so actually technically what you need

684
00:29:35,700 --> 00:29:39,930
here some kind of forward secure PRF

685
00:29:38,040 --> 00:29:42,720
where you can evaluate on index 1 2 2 4

686
00:29:39,930 --> 00:29:45,270
5 until I but you cannot evaluate it but

687
00:29:42,720 --> 00:29:47,010
you can you want to remove erase the

688
00:29:45,270 --> 00:29:49,080
possibility of evaluating on the past

689
00:29:47,010 --> 00:29:51,470
and still while being able to do it in

690
00:29:49,080 --> 00:29:56,040
the future so that's why it'll be tricky

691
00:29:51,470 --> 00:29:57,720
and even if I even if I try to race you

692
00:29:56,040 --> 00:30:01,170
know with active corruption we know it's

693
00:29:57,720 --> 00:30:05,250
not so easy to actually erase things in

694
00:30:01,170 --> 00:30:09,030
practice so was that after the fact like

695
00:30:05,250 --> 00:30:11,470
deletion again so that's a

696
00:30:09,030 --> 00:30:14,080
in our model of adaptive corruption

697
00:30:11,470 --> 00:30:15,880
which is also the same model as all

698
00:30:14,080 --> 00:30:19,060
notions of adaptive corruption in the in

699
00:30:15,880 --> 00:30:21,280
this very work whenever I corrupt you if

700
00:30:19,060 --> 00:30:23,440
you have sent a message I can not delete

701
00:30:21,280 --> 00:30:25,210
it so we're still in the synchronous

702
00:30:23,440 --> 00:30:27,250
model in the sense that you have sent

703
00:30:25,210 --> 00:30:30,760
something out I can delay it by Delta

704
00:30:27,250 --> 00:30:31,690
steps but I cannot delete it right after

705
00:30:30,760 --> 00:30:33,160
corrupting you

706
00:30:31,690 --> 00:30:35,430
so one could potentially consider

707
00:30:33,160 --> 00:30:38,080
stronger model where I corrupt you

708
00:30:35,430 --> 00:30:41,440
and then if this has not been delivered

709
00:30:38,080 --> 00:30:43,870
yet then I can remove it because you're

710
00:30:41,440 --> 00:30:45,130
bad at this point and in that model it

711
00:30:43,870 --> 00:30:47,800
turns out you can not get communication

712
00:30:45,130 --> 00:30:50,290
efficient and that's a upcoming policy

713
00:30:47,800 --> 00:30:52,480
paper showing that all right now we came

714
00:30:50,290 --> 00:30:57,340
to the very last question by this

715
00:30:52,480 --> 00:30:59,410
gentleman okay just just one so you're

716
00:30:57,340 --> 00:31:01,209
saying that you've seen that it's

717
00:30:59,410 --> 00:31:02,860
logarithmic in the number of parties but

718
00:31:01,210 --> 00:31:05,140
it doesn't look logarithmic because you

719
00:31:02,860 --> 00:31:09,490
I mean you every party has to sign this

720
00:31:05,140 --> 00:31:12,490
transaction so it's not every signing

721
00:31:09,490 --> 00:31:14,440
transaction I am proposing the

722
00:31:12,490 --> 00:31:16,870
transaction I'm making this yeah we're

723
00:31:14,440 --> 00:31:18,550
only picking people to vote on these

724
00:31:16,870 --> 00:31:20,139
things I'm only picking poly law getting

725
00:31:18,550 --> 00:31:22,389
many people I didn't tell you about the

726
00:31:20,140 --> 00:31:24,130
parameters or but yeah and this scoring

727
00:31:22,390 --> 00:31:25,990
function should be more generic I mean

728
00:31:24,130 --> 00:31:27,220
it should be a generic solution it's not

729
00:31:25,990 --> 00:31:28,540
like oh because it's really particular

730
00:31:27,220 --> 00:31:29,680
but it looks like it could be you just

731
00:31:28,540 --> 00:31:31,420
need some properties of the function

732
00:31:29,680 --> 00:31:32,680
yeah yeah the only publish you want are

733
00:31:31,420 --> 00:31:34,090
these two things this is just some

734
00:31:32,680 --> 00:31:36,400
function satisfied that we want

735
00:31:34,090 --> 00:31:37,750
something that behaves this way that we

736
00:31:36,400 --> 00:31:40,330
have something with the initial scores

737
00:31:37,750 --> 00:31:41,920
will not differ a lot but if I have some

738
00:31:40,330 --> 00:31:45,189
old transaction it should really bring

739
00:31:41,920 --> 00:31:46,690
down the bring it down by lot so I guess

740
00:31:45,190 --> 00:31:48,370
these two things and additionally

741
00:31:46,690 --> 00:31:50,100
property that all transactions should

742
00:31:48,370 --> 00:31:53,080
score low

743
00:31:50,100 --> 00:31:54,020
all right let's thank Raphael and the

744
00:31:53,080 --> 00:31:58,230
rest of the speakers

745
00:31:54,020 --> 00:31:58,230
[Applause]

