1
00:00:00,120 --> 00:00:04,710
I am Akshay RAM and the title of my talk

2
00:00:02,490 --> 00:00:07,049
today is revisiting non valuable secret

3
00:00:04,710 --> 00:00:08,969
sharing and this is based on joint work

4
00:00:07,049 --> 00:00:12,870
with Sai Krishna Badri Narayan and from

5
00:00:08,970 --> 00:00:15,330
UCLA so let me start this talk by giving

6
00:00:12,870 --> 00:00:16,948
you a brief overview of threshold sacred

7
00:00:15,330 --> 00:00:18,960
sharing as you might all be aware

8
00:00:16,949 --> 00:00:20,609
threshold secret sharing was introduced

9
00:00:18,960 --> 00:00:23,400
in the seminal works of Shamir and

10
00:00:20,609 --> 00:00:26,910
blackly in the late 70s and it works as

11
00:00:23,400 --> 00:00:29,609
follows so there is a dealer who has a

12
00:00:26,910 --> 00:00:32,730
secret message in and the splits this

13
00:00:29,609 --> 00:00:35,059
secret message into n shares sh one to

14
00:00:32,729 --> 00:00:39,529
sh n with some threshold parameter T

15
00:00:35,059 --> 00:00:42,239
even since I had share Shi to party P I

16
00:00:39,530 --> 00:00:44,070
we require two properties from the

17
00:00:42,239 --> 00:00:45,989
threshold secret sharing scheme so the

18
00:00:44,070 --> 00:00:50,579
first is the correctness which says that

19
00:00:45,989 --> 00:00:53,430
if any group of peor more parties come

20
00:00:50,579 --> 00:00:56,309
together and they can use their shares

21
00:00:53,430 --> 00:00:58,500
to reconstruct the message m and the

22
00:00:56,309 --> 00:01:01,379
second is the secrecy property which

23
00:00:58,500 --> 00:01:03,449
says that any group of t minus 1 parties

24
00:01:01,379 --> 00:01:06,869
learn no information about this message

25
00:01:03,449 --> 00:01:08,939
m and threshold secret sharing is a

26
00:01:06,869 --> 00:01:11,700
fundamental cryptographic primitive with

27
00:01:08,939 --> 00:01:14,548
numerous applications some of these

28
00:01:11,700 --> 00:01:16,650
applications include constructing secure

29
00:01:14,549 --> 00:01:19,409
multi-party computation protocols in the

30
00:01:16,650 --> 00:01:21,119
honess majority setting constructing

31
00:01:19,409 --> 00:01:22,950
threshold cryptographic primitives such

32
00:01:21,119 --> 00:01:25,890
as threshold encryption threshold

33
00:01:22,950 --> 00:01:28,770
signatures and so on and the security of

34
00:01:25,890 --> 00:01:30,420
all these applications crucially relay

35
00:01:28,770 --> 00:01:32,070
on the secrecy property of the

36
00:01:30,420 --> 00:01:35,880
underlying threshold secret sharing

37
00:01:32,070 --> 00:01:38,639
scheme but what if the adversary's goal

38
00:01:35,880 --> 00:01:40,829
is to not to learn the secret but

39
00:01:38,640 --> 00:01:43,740
instead its goal is to tamper with the

40
00:01:40,829 --> 00:01:48,539
secret so to motivate this further let's

41
00:01:43,740 --> 00:01:51,750
take the example of a threshold

42
00:01:48,540 --> 00:01:53,939
signature scheme so in here there is a

43
00:01:51,750 --> 00:01:57,930
sharing algorithm which takes in a

44
00:01:53,939 --> 00:02:00,570
secret signing key SK and it splits this

45
00:01:57,930 --> 00:02:02,460
secret signing key SK into n shares

46
00:02:00,570 --> 00:02:04,258
using any threshold secret sharing

47
00:02:02,460 --> 00:02:07,408
scheme and let's fix the threshold

48
00:02:04,259 --> 00:02:09,628
parameter to be T and the sharing

49
00:02:07,409 --> 00:02:13,650
algorithm then since diet share SSI to

50
00:02:09,628 --> 00:02:15,540
party P I and we require

51
00:02:13,650 --> 00:02:18,510
to properties from threshold signatures

52
00:02:15,540 --> 00:02:20,010
namely any group of tea or more parties

53
00:02:18,510 --> 00:02:22,739
can come together and generate a

54
00:02:20,010 --> 00:02:25,890
signature on a message and the security

55
00:02:22,739 --> 00:02:28,220
property is that any group of t-minus

56
00:02:25,890 --> 00:02:31,409
one parties cannot forge a signature

57
00:02:28,220 --> 00:02:33,590
but now consider an adversary who

58
00:02:31,409 --> 00:02:36,629
corrupts the channels through which the

59
00:02:33,590 --> 00:02:39,030
parties receive their shares and induces

60
00:02:36,629 --> 00:02:41,819
and tampering attack on these shares so

61
00:02:39,030 --> 00:02:43,230
will denote the tampered version by a

62
00:02:41,819 --> 00:02:45,420
tilde symbol on top

63
00:02:43,230 --> 00:02:48,950
for example the tampered share of party

64
00:02:45,420 --> 00:02:52,048
p1 is denoted by a such one tilde now

65
00:02:48,950 --> 00:02:55,048
when a group of tea or more parties come

66
00:02:52,049 --> 00:02:57,540
together and generate a signature with

67
00:02:55,049 --> 00:02:59,370
respect to these tampered shares then

68
00:02:57,540 --> 00:03:01,140
they are implicitly generating the

69
00:02:59,370 --> 00:03:03,870
signature with respect to a tampered

70
00:03:01,140 --> 00:03:06,119
signing key for example this tampering

71
00:03:03,870 --> 00:03:08,069
attack could fix the last few bits of

72
00:03:06,120 --> 00:03:09,840
the signing key to be all 0 string in

73
00:03:08,069 --> 00:03:12,149
which case the signature is generated

74
00:03:09,840 --> 00:03:14,940
with respect to a signing key whose last

75
00:03:12,150 --> 00:03:16,799
few bits are all zeros this means that

76
00:03:14,940 --> 00:03:18,299
the system now becomes vulnerable to

77
00:03:16,799 --> 00:03:21,599
related key attacks and this is

78
00:03:18,299 --> 00:03:26,010
devastating so you might be wondering

79
00:03:21,599 --> 00:03:28,768
that if the adversary is able to tamper

80
00:03:26,010 --> 00:03:31,078
this with six signing key to some

81
00:03:28,769 --> 00:03:33,540
related signing he isn't be breaking the

82
00:03:31,079 --> 00:03:35,910
secrecy property of the secret sharing

83
00:03:33,540 --> 00:03:38,190
scheme so the answer is no so it's

84
00:03:35,910 --> 00:03:40,799
possible to tamper with the secret even

85
00:03:38,190 --> 00:03:43,739
without learning the underlying secret

86
00:03:40,799 --> 00:03:45,989
and in other words secrecy alone is not

87
00:03:43,739 --> 00:03:51,989
sufficient to prevent these tampering

88
00:03:45,989 --> 00:03:54,810
attacks so let us first see why the

89
00:03:51,989 --> 00:03:56,639
existing cryptographic primitives do not

90
00:03:54,810 --> 00:04:00,540
provide a reasonable solution to this

91
00:03:56,639 --> 00:04:02,220
problem firstly observe that most of the

92
00:04:00,540 --> 00:04:04,858
existing secret sharing scheme in the

93
00:04:02,220 --> 00:04:08,010
literature are linear this means that if

94
00:04:04,859 --> 00:04:10,680
I multiply each share with some constant

95
00:04:08,010 --> 00:04:13,410
alpha then the reconstructed secret will

96
00:04:10,680 --> 00:04:15,480
be alpha times M and this property has

97
00:04:13,410 --> 00:04:17,488
been crucially used in many applications

98
00:04:15,480 --> 00:04:20,250
including designing secure multi-party

99
00:04:17,488 --> 00:04:22,799
computation protocols and so on however

100
00:04:20,250 --> 00:04:24,780
this property trivially allows tampering

101
00:04:22,800 --> 00:04:27,510
attacks because each of these tampering

102
00:04:24,780 --> 00:04:29,669
functions can just multiply this

103
00:04:27,510 --> 00:04:33,330
with alpha and we can tamper with

104
00:04:29,670 --> 00:04:35,280
respect to a related secret on the other

105
00:04:33,330 --> 00:04:37,200
hand primitives such as verifiable

106
00:04:35,280 --> 00:04:39,659
secret sharing and robust secret sharing

107
00:04:37,200 --> 00:04:41,630
only provide guarantees when at most

108
00:04:39,660 --> 00:04:44,100
half the shares are tampered with

109
00:04:41,630 --> 00:04:46,230
however in the scenario that I explained

110
00:04:44,100 --> 00:04:48,570
before it's possible for the adversary

111
00:04:46,230 --> 00:04:50,490
to corrupt all the channels and tamper

112
00:04:48,570 --> 00:04:52,430
all the shares in which case these

113
00:04:50,490 --> 00:04:57,090
parameters do not provide any meaningful

114
00:04:52,430 --> 00:04:59,460
security guarantees and a beautiful work

115
00:04:57,090 --> 00:05:01,320
of Kramer at all introduced this notion

116
00:04:59,460 --> 00:05:03,030
called as algebraic manipulation

117
00:05:01,320 --> 00:05:05,430
detection codes which can detect if a

118
00:05:03,030 --> 00:05:07,380
tampering has occurred however it

119
00:05:05,430 --> 00:05:09,480
restricts the class of tampering attacks

120
00:05:07,380 --> 00:05:13,050
to be just additive functions so it's a

121
00:05:09,480 --> 00:05:15,480
very restrictive class another beautiful

122
00:05:13,050 --> 00:05:17,250
work of Zimbabwe p3 second BRICS

123
00:05:15,480 --> 00:05:18,750
introduced this notion called as non

124
00:05:17,250 --> 00:05:20,840
malleable quotes which can protect

125
00:05:18,750 --> 00:05:22,620
against these tampering attacks

126
00:05:20,840 --> 00:05:25,039
unfortunately they do not provide any

127
00:05:22,620 --> 00:05:26,940
secrecy guarantees which is crucial for

128
00:05:25,040 --> 00:05:29,070
applications such as constructing

129
00:05:26,940 --> 00:05:31,680
threshold signatures and so on

130
00:05:29,070 --> 00:05:33,630
there is an exception to this so for the

131
00:05:31,680 --> 00:05:35,580
special case of to split state non

132
00:05:33,630 --> 00:05:37,340
malleable quotes it's known to imply a

133
00:05:35,580 --> 00:05:39,930
two out of two secret sharing scheme

134
00:05:37,340 --> 00:05:42,239
however this is not even true for higher

135
00:05:39,930 --> 00:05:43,920
states including three so even three

136
00:05:42,240 --> 00:05:45,480
split state non my little quotes it's

137
00:05:43,920 --> 00:05:49,950
not known to imply a three out of three

138
00:05:45,480 --> 00:05:51,930
secret sharing scheme this to prevent

139
00:05:49,950 --> 00:05:53,940
these tampering attacks on existing

140
00:05:51,930 --> 00:05:56,790
secret sharing scheme Boyle and Kumar

141
00:05:53,940 --> 00:05:59,550
introduced a new notion called as non

142
00:05:56,790 --> 00:06:01,200
malleable secret sharing so what is this

143
00:05:59,550 --> 00:06:03,360
non malleable secret sharing so it's

144
00:06:01,200 --> 00:06:04,890
just like any other threshold secret

145
00:06:03,360 --> 00:06:07,100
sharing scheme it satisfies the

146
00:06:04,890 --> 00:06:09,750
correctness and the secrecy property and

147
00:06:07,100 --> 00:06:12,240
in addition to that it also satisfies

148
00:06:09,750 --> 00:06:15,000
the non malleability property which

149
00:06:12,240 --> 00:06:17,790
roughly states that any tampering attack

150
00:06:15,000 --> 00:06:19,740
on the shares either preserves the

151
00:06:17,790 --> 00:06:25,260
original secret or completely destroys

152
00:06:19,740 --> 00:06:27,480
it so more formally let's consider the

153
00:06:25,260 --> 00:06:30,330
shares as such one two shn of some

154
00:06:27,480 --> 00:06:33,600
secret message in and let's consider an

155
00:06:30,330 --> 00:06:37,020
adversary who defines these tampering

156
00:06:33,600 --> 00:06:40,230
functions F 1 to F n so we consider the

157
00:06:37,020 --> 00:06:40,950
function fi to take in the share Shi an

158
00:06:40,230 --> 00:06:44,550
output

159
00:06:40,950 --> 00:06:46,560
podshare Shi tilde now the normal

160
00:06:44,550 --> 00:06:48,240
ability property requires that for any

161
00:06:46,560 --> 00:06:51,540
choice of these adversarial tampering

162
00:06:48,240 --> 00:06:53,850
functions the reconstructed secret is

163
00:06:51,540 --> 00:06:56,130
either the original secret M in which

164
00:06:53,850 --> 00:06:58,410
case there is no tampering or the

165
00:06:56,130 --> 00:07:00,240
distribution is independent of M where

166
00:06:58,410 --> 00:07:02,340
the randomness from this distribution is

167
00:07:00,240 --> 00:07:08,490
over the randomness of this sharing

168
00:07:02,340 --> 00:07:10,710
phase okay so it says that either it's

169
00:07:08,490 --> 00:07:12,960
the same message or its distribution is

170
00:07:10,710 --> 00:07:16,560
completely independent of the starting

171
00:07:12,960 --> 00:07:18,330
message so in this work we only focus on

172
00:07:16,560 --> 00:07:21,690
the individual tampering setting where

173
00:07:18,330 --> 00:07:24,510
each fi just acts on an individual

174
00:07:21,690 --> 00:07:26,580
shared Shi but it's possible to consider

175
00:07:24,510 --> 00:07:29,610
more expressive tampering functions

176
00:07:26,580 --> 00:07:31,859
which can take in two or more shares

177
00:07:29,610 --> 00:07:35,670
together but here we'll just restrict

178
00:07:31,860 --> 00:07:37,620
ourselves to individual tampering so

179
00:07:35,670 --> 00:07:40,590
coming back to the case of threshold

180
00:07:37,620 --> 00:07:42,300
signatures let's see how a non valuable

181
00:07:40,590 --> 00:07:44,250
secret sharing helps us in preventing

182
00:07:42,300 --> 00:07:47,220
this related key attacks and this was

183
00:07:44,250 --> 00:07:50,370
proposed in a recent work of Agarwal at

184
00:07:47,220 --> 00:07:52,710
all so the sharing phase now takes in

185
00:07:50,370 --> 00:07:54,480
this secret signing key and instead of

186
00:07:52,710 --> 00:07:56,340
sharing it using any threshold secret

187
00:07:54,480 --> 00:07:59,100
sharing it will now share it using a non

188
00:07:56,340 --> 00:08:01,200
valuable secret sharing scheme so now

189
00:07:59,100 --> 00:08:03,600
when an adversary tampers with these

190
00:08:01,200 --> 00:08:05,219
shares the non malleability property of

191
00:08:03,600 --> 00:08:08,040
the secret sharing scheme ensures that

192
00:08:05,220 --> 00:08:10,410
the reconstructed secret SK tilde is

193
00:08:08,040 --> 00:08:11,550
either the original secret sk or

194
00:08:10,410 --> 00:08:14,400
something which is completely

195
00:08:11,550 --> 00:08:16,470
independent of the secret key sk so this

196
00:08:14,400 --> 00:08:20,909
means that the system is protected

197
00:08:16,470 --> 00:08:23,490
against related key attacks so what is

198
00:08:20,910 --> 00:08:26,130
new in this work we give a rate

199
00:08:23,490 --> 00:08:28,200
efficient and read efficient as well as

200
00:08:26,130 --> 00:08:31,380
stronger constructions of non malleable

201
00:08:28,200 --> 00:08:34,140
secretary so let me start with the rate

202
00:08:31,380 --> 00:08:36,599
efficiency part recall that the rate of

203
00:08:34,140 --> 00:08:38,580
secret sharing scheme is defined as the

204
00:08:36,599 --> 00:08:40,410
ratio between the size of the secret

205
00:08:38,580 --> 00:08:42,030
message to the size of a share and it's

206
00:08:40,409 --> 00:08:45,630
a main parameter which determines the

207
00:08:42,030 --> 00:08:47,550
efficiency of a secret sharing scheme so

208
00:08:45,630 --> 00:08:49,620
the prior work of Goyle and Kumar which

209
00:08:47,550 --> 00:08:51,240
introduced this primitive non malleable

210
00:08:49,620 --> 00:08:53,910
secret sharing also gave a construction

211
00:08:51,240 --> 00:08:54,899
of C a non malleable secret sharing with

212
00:08:53,910 --> 00:08:57,929
Ray

213
00:08:54,899 --> 00:09:00,720
which grows as one over n log n where n

214
00:08:57,929 --> 00:09:03,929
is the number of parties and M is the

215
00:09:00,720 --> 00:09:06,689
size of the secret asymptotically this

216
00:09:03,929 --> 00:09:09,749
rate tends to zero as the size of the

217
00:09:06,689 --> 00:09:11,519
secret goes to infinity and the

218
00:09:09,749 --> 00:09:14,100
constants hidden inside the big theta

219
00:09:11,519 --> 00:09:17,910
notation are also large so it's not

220
00:09:14,100 --> 00:09:19,529
concretely efficient so in this work we

221
00:09:17,910 --> 00:09:22,860
improve the state of the affairs by

222
00:09:19,529 --> 00:09:25,079
first giving a positive rate

223
00:09:22,860 --> 00:09:26,910
construction of T out of n non malleable

224
00:09:25,079 --> 00:09:29,248
secret sharing for any threshold T

225
00:09:26,910 --> 00:09:32,670
greater than or equal to four so in

226
00:09:29,249 --> 00:09:35,220
particular the the rate is one over T

227
00:09:32,670 --> 00:09:37,738
log squared n where T is the threshold

228
00:09:35,220 --> 00:09:39,839
and n is the number of parties so this

229
00:09:37,739 --> 00:09:43,379
rate is independent of the size of the

230
00:09:39,839 --> 00:09:45,869
secret and another advantage is that the

231
00:09:43,379 --> 00:09:50,399
constants hidden are very small and it's

232
00:09:45,869 --> 00:09:52,199
in fact concretely efficient another

233
00:09:50,399 --> 00:09:54,839
advantage of our construction it's that

234
00:09:52,199 --> 00:09:56,519
it easily extends to more general axis

235
00:09:54,839 --> 00:09:59,160
structures so we can also get non

236
00:09:56,519 --> 00:10:00,749
malleable secret sharing for more Morna

237
00:09:59,160 --> 00:10:05,279
to an access structures beyond the

238
00:10:00,749 --> 00:10:07,079
threshold constructions ok so these are

239
00:10:05,279 --> 00:10:08,519
the results in the rate efficiency part

240
00:10:07,079 --> 00:10:13,589
so let's move on to the stronger

241
00:10:08,519 --> 00:10:15,149
security model that we consider so as so

242
00:10:13,589 --> 00:10:17,009
the prior work of Goyle and Kumar

243
00:10:15,149 --> 00:10:18,660
considered a security definition where

244
00:10:17,009 --> 00:10:21,929
the adversary tampers with the share

245
00:10:18,660 --> 00:10:23,699
only once but in practice it's possible

246
00:10:21,929 --> 00:10:25,559
for the adversity to launch more than

247
00:10:23,699 --> 00:10:27,359
one tampering attack for example if the

248
00:10:25,559 --> 00:10:29,339
shares are stored on some smart cards

249
00:10:27,360 --> 00:10:30,959
then the adversary could make multiple

250
00:10:29,339 --> 00:10:33,199
copies of these smart cards and launch

251
00:10:30,959 --> 00:10:37,618
different tampering attacks on these

252
00:10:33,199 --> 00:10:39,449
each copy and to prevent these attacks

253
00:10:37,619 --> 00:10:41,129
we propose a stronger attack model

254
00:10:39,449 --> 00:10:43,319
called as multiple tampering which is

255
00:10:41,129 --> 00:10:45,319
somewhat related to this continuous non

256
00:10:43,319 --> 00:10:50,219
valuable quotes which you heard about

257
00:10:45,319 --> 00:10:52,969
today and roughly it says that if I take

258
00:10:50,220 --> 00:10:56,579
in the shares as such want a session of

259
00:10:52,970 --> 00:10:58,709
some secret message m and if I consider

260
00:10:56,579 --> 00:11:01,888
two different adversarial tampering

261
00:10:58,709 --> 00:11:03,809
attacks on these shares we require that

262
00:11:01,889 --> 00:11:05,999
the recur joint distribution of the

263
00:11:03,809 --> 00:11:07,740
reconstructed secrets should to be

264
00:11:05,999 --> 00:11:10,470
independent of the original

265
00:11:07,740 --> 00:11:12,720
secret messaging so here we just

266
00:11:10,470 --> 00:11:14,610
considered to tampering attacks but it's

267
00:11:12,720 --> 00:11:17,310
possible to extend it to multiple

268
00:11:14,610 --> 00:11:21,420
tampering attacks in a straightforward

269
00:11:17,310 --> 00:11:24,000
manner okay so this is the security

270
00:11:21,420 --> 00:11:26,300
model so this is directly inspired by a

271
00:11:24,000 --> 00:11:29,070
similar notion for non malleable quotes

272
00:11:26,300 --> 00:11:32,339
studied by the work of Faust at all

273
00:11:29,070 --> 00:11:34,230
and concurrent and an independent work

274
00:11:32,340 --> 00:11:36,300
of Agarwal it all also considered a

275
00:11:34,230 --> 00:11:38,070
strengthening of this multiple tampering

276
00:11:36,300 --> 00:11:40,020
model where the strengthening allows the

277
00:11:38,070 --> 00:11:44,880
reconstruction sets to be different

278
00:11:40,020 --> 00:11:47,189
across different tampering 's okay so in

279
00:11:44,880 --> 00:11:51,540
the stronger security model we first

280
00:11:47,190 --> 00:11:53,700
sure- result which shows that for if we

281
00:11:51,540 --> 00:11:56,339
allow a priori unbounded number of

282
00:11:53,700 --> 00:11:58,380
tampering then for any threshold T and

283
00:11:56,340 --> 00:12:03,780
for any number of parties this notion is

284
00:11:58,380 --> 00:12:07,020
impossible to achieve and we also show a

285
00:12:03,780 --> 00:12:09,240
positive result which states that if we

286
00:12:07,020 --> 00:12:11,370
a priori bound the number of tampering

287
00:12:09,240 --> 00:12:14,250
then it's possible to construct this

288
00:12:11,370 --> 00:12:16,530
notion and additionally the positive

289
00:12:14,250 --> 00:12:18,300
result is also rate efficient so it has

290
00:12:16,530 --> 00:12:23,819
a positive rate it's independent of the

291
00:12:18,300 --> 00:12:26,189
size of the message so in the rest of

292
00:12:23,820 --> 00:12:27,870
the talk will first go the main ideas

293
00:12:26,190 --> 00:12:31,260
behind the rate efficient construction

294
00:12:27,870 --> 00:12:33,600
and I'll then briefly describe how to

295
00:12:31,260 --> 00:12:36,480
extend it to the stronger security model

296
00:12:33,600 --> 00:12:38,700
of multiple tampering and I'll finally

297
00:12:36,480 --> 00:12:43,170
conclude with some recent progress in

298
00:12:38,700 --> 00:12:46,800
this area so let's start with the rate

299
00:12:43,170 --> 00:12:48,569
efficiency part so before going on let's

300
00:12:46,800 --> 00:12:50,670
see what was the main bottleneck that

301
00:12:48,570 --> 00:12:53,220
was affecting the rate in the prior work

302
00:12:50,670 --> 00:12:55,260
of Goyle and Kumar so the prior work of

303
00:12:53,220 --> 00:12:58,080
Goya and Kumar used is to split state

304
00:12:55,260 --> 00:12:59,610
non malleable code and then it used it

305
00:12:58,080 --> 00:13:03,290
as an underlying building block to

306
00:12:59,610 --> 00:13:05,970
construct a non malleable secret sharing

307
00:13:03,290 --> 00:13:08,579
the rate of the code that was used in

308
00:13:05,970 --> 00:13:10,500
their paper was 1 over log M and that's

309
00:13:08,580 --> 00:13:13,050
where the login factor comes in the rate

310
00:13:10,500 --> 00:13:17,820
and this is asymptotically tending to 0

311
00:13:13,050 --> 00:13:19,680
and it subsequent to our work constant

312
00:13:17,820 --> 00:13:21,660
rate to split state non malleable quotes

313
00:13:19,680 --> 00:13:24,959
was constructed very recently in the

314
00:13:21,660 --> 00:13:27,510
of Agarwal and Abramski but the

315
00:13:24,960 --> 00:13:32,520
parameters there are still concretely

316
00:13:27,510 --> 00:13:34,110
inefficient of this code so the main

317
00:13:32,520 --> 00:13:36,780
idea behind a rate efficient

318
00:13:34,110 --> 00:13:39,150
construction is to instead rely on a

319
00:13:36,780 --> 00:13:41,069
three split state non malleable code and

320
00:13:39,150 --> 00:13:45,329
there are constructions which have an

321
00:13:41,070 --> 00:13:47,700
explicit constant rate of 103 okay so

322
00:13:45,330 --> 00:13:50,760
this actually requires some new

323
00:13:47,700 --> 00:13:54,630
techniques and let me tell you the

324
00:13:50,760 --> 00:13:56,760
techniques that we require okay so

325
00:13:54,630 --> 00:13:58,020
before moving on let's quickly recall

326
00:13:56,760 --> 00:14:00,360
what is a three split state nor

327
00:13:58,020 --> 00:14:02,730
malleable code so there is a message N

328
00:14:00,360 --> 00:14:05,430
and there is an encoding procedure that

329
00:14:02,730 --> 00:14:09,450
allows you to encode this message into

330
00:14:05,430 --> 00:14:11,130
three states LC and r and there's also a

331
00:14:09,450 --> 00:14:13,200
corresponding decoding procedure which

332
00:14:11,130 --> 00:14:15,450
given these three sets we constructs the

333
00:14:13,200 --> 00:14:20,250
message' so the non malleability

334
00:14:15,450 --> 00:14:22,920
property requires that if we tamper with

335
00:14:20,250 --> 00:14:25,080
these three states independently then

336
00:14:22,920 --> 00:14:26,880
the reconstructed tampered message is

337
00:14:25,080 --> 00:14:29,400
either the original message or something

338
00:14:26,880 --> 00:14:30,960
which is independent of it so as I

339
00:14:29,400 --> 00:14:33,360
mentioned before the difference between

340
00:14:30,960 --> 00:14:35,160
non malleable codes and non malleable

341
00:14:33,360 --> 00:14:37,320
secret sharing is that non malleable

342
00:14:35,160 --> 00:14:39,990
codes need not preserve the secrecy

343
00:14:37,320 --> 00:14:41,970
property for example there could be one

344
00:14:39,990 --> 00:14:46,560
state which gives information about the

345
00:14:41,970 --> 00:14:48,440
message and independent works of carnac

346
00:14:46,560 --> 00:14:51,329
or T at all and Gupta at all give

347
00:14:48,440 --> 00:14:53,430
explicit three split state non malleable

348
00:14:51,330 --> 00:14:55,740
quotes with rate which is one third and

349
00:14:53,430 --> 00:14:57,089
we'll be using this as the building

350
00:14:55,740 --> 00:14:59,220
block in our non malleable secret

351
00:14:57,090 --> 00:15:01,020
sharing so let's go on to the

352
00:14:59,220 --> 00:15:03,660
construction so let's start with the

353
00:15:01,020 --> 00:15:07,199
sharing phase where we have a message in

354
00:15:03,660 --> 00:15:09,870
and we want to split it into n shares so

355
00:15:07,200 --> 00:15:12,120
the first part is to first encode this

356
00:15:09,870 --> 00:15:15,620
message using the three split state non

357
00:15:12,120 --> 00:15:19,770
malleable code to get States LC and R

358
00:15:15,620 --> 00:15:21,450
will then secret share in using any P

359
00:15:19,770 --> 00:15:24,090
out of n secret sharing scheme it need

360
00:15:21,450 --> 00:15:25,650
not be non malleable or anything so you

361
00:15:24,090 --> 00:15:27,780
can just think about Shamir secret

362
00:15:25,650 --> 00:15:31,769
sharing to get the shapes

363
00:15:27,780 --> 00:15:34,769
l1 l2 up to L n will then share

364
00:15:31,769 --> 00:15:38,579
see using the three auto friends so here

365
00:15:34,769 --> 00:15:42,119
it speeds here it three to get the share

366
00:15:38,579 --> 00:15:44,189
c12 CN and finally we secret share are

367
00:15:42,119 --> 00:15:48,089
using a two out of n secret sharing to

368
00:15:44,189 --> 00:15:50,160
get the shares r1 to RN and the share

369
00:15:48,089 --> 00:15:53,309
corresponding to party I will be Ally

370
00:15:50,160 --> 00:15:54,779
CIA and RA so it will be evident in a

371
00:15:53,309 --> 00:15:56,850
few moments on why we are using

372
00:15:54,779 --> 00:15:59,009
different thresholds so this is

373
00:15:56,850 --> 00:16:01,799
crucially used in the security argument

374
00:15:59,009 --> 00:16:04,559
but let's first we check if it's

375
00:16:01,799 --> 00:16:06,540
reconstruct able but yeah so given any

376
00:16:04,559 --> 00:16:08,459
t-shirts you can use the reconstruction

377
00:16:06,540 --> 00:16:10,199
procedure for the underlying secret

378
00:16:08,459 --> 00:16:13,109
sharing to get the states

379
00:16:10,199 --> 00:16:15,149
Elsie NR and then finally we can use the

380
00:16:13,110 --> 00:16:19,259
decoding procedure of the non valuable

381
00:16:15,149 --> 00:16:21,119
code to get the secret message okay so

382
00:16:19,259 --> 00:16:22,470
the interesting part is that how do we

383
00:16:21,119 --> 00:16:24,779
prove non malleability of this

384
00:16:22,470 --> 00:16:27,389
construction so recall that to prune on

385
00:16:24,779 --> 00:16:29,339
malleability we need to show that for

386
00:16:27,389 --> 00:16:32,279
any choice of adversarial tampering

387
00:16:29,339 --> 00:16:33,749
functions say F 1 to F and reconstructed

388
00:16:32,279 --> 00:16:35,309
tampered secret is either the original

389
00:16:33,749 --> 00:16:39,420
secret or something which is independent

390
00:16:35,309 --> 00:16:42,029
of it so to do this we actually reduce

391
00:16:39,420 --> 00:16:44,519
any tampering attack against the secret

392
00:16:42,029 --> 00:16:46,199
sharing scheme do a corresponding

393
00:16:44,519 --> 00:16:48,480
tampering attack against the underlying

394
00:16:46,199 --> 00:16:51,179
non malleable code that is given these

395
00:16:48,480 --> 00:16:55,110
functions F 1 F 2 to F and we construct

396
00:16:51,179 --> 00:16:59,069
functions G 1 G 2 2 and G 3 which tamper

397
00:16:55,110 --> 00:17:00,540
with this states LC and bar and it

398
00:16:59,069 --> 00:17:02,639
follows from the security of the non

399
00:17:00,540 --> 00:17:04,740
valuable quote that the reconstructed

400
00:17:02,639 --> 00:17:06,359
tampered secret is either the original

401
00:17:04,740 --> 00:17:09,899
secret or something which is independent

402
00:17:06,359 --> 00:17:12,148
of it but the main challenge in

403
00:17:09,898 --> 00:17:15,839
designing this G 1 G 2 and G 3 is to

404
00:17:12,148 --> 00:17:17,369
ensure that they are independent so to

405
00:17:15,839 --> 00:17:19,408
use the security of the non valuable

406
00:17:17,369 --> 00:17:21,958
code we must ensure that the tampering

407
00:17:19,409 --> 00:17:24,600
function G 1 is independent of both C

408
00:17:21,959 --> 00:17:26,939
and R similarly the tampering function G

409
00:17:24,599 --> 00:17:28,469
2 has to be independent of Ln R and the

410
00:17:26,939 --> 00:17:31,200
tampering function G 3 has to be

411
00:17:28,470 --> 00:17:32,850
independent of L and C so ensuring this

412
00:17:31,200 --> 00:17:34,559
independent is the main challenge and

413
00:17:32,850 --> 00:17:37,379
this is where we will use the fact that

414
00:17:34,559 --> 00:17:41,220
we are secret sharing C and are using

415
00:17:37,380 --> 00:17:43,919
different thresholds okay so let's see

416
00:17:41,220 --> 00:17:45,210
how we can argue that G 2 which is

417
00:17:43,919 --> 00:17:49,950
tampering c is

418
00:17:45,210 --> 00:17:51,990
of the first state l yeah so if you

419
00:17:49,950 --> 00:17:54,600
assume that the threshold T is greater

420
00:17:51,990 --> 00:17:57,990
than or equal to four

421
00:17:54,600 --> 00:17:59,730
now as you consider C and its secret

422
00:17:57,990 --> 00:18:01,679
side using a three out of n secret

423
00:17:59,730 --> 00:18:04,470
sharing scheme so it means that given

424
00:18:01,679 --> 00:18:08,330
any three states let's say C 1 C 2 and C

425
00:18:04,470 --> 00:18:12,029
3 we can use it to reconstruct C however

426
00:18:08,330 --> 00:18:14,100
because L is secret side using 80 out of

427
00:18:12,029 --> 00:18:15,059
n secret sharing scheme and T is greater

428
00:18:14,100 --> 00:18:18,959
than or equal to 4

429
00:18:15,059 --> 00:18:24,090
given L 1 L 2 and L 3 L is completely

430
00:18:18,960 --> 00:18:27,090
hidden so this is how we use the the the

431
00:18:24,090 --> 00:18:31,080
the the fact that these are different to

432
00:18:27,090 --> 00:18:32,789
ensure that G 2 is independent of L so

433
00:18:31,080 --> 00:18:35,370
given any three states it's possible to

434
00:18:32,789 --> 00:18:37,799
construct C but given any three states

435
00:18:35,370 --> 00:18:40,379
of shares of L its information

436
00:18:37,799 --> 00:18:42,600
theoretically Heights L so we can use

437
00:18:40,380 --> 00:18:47,570
this to argue that g2 is independent of

438
00:18:42,600 --> 00:18:50,520
L my a similar argument we can show that

439
00:18:47,570 --> 00:18:53,939
G 3 which is tampering R can be made

440
00:18:50,520 --> 00:18:56,309
independent of both L n see how since

441
00:18:53,940 --> 00:18:58,049
our secret side using a 2 out of and

442
00:18:56,309 --> 00:18:59,940
secret sharing scheme given any two

443
00:18:58,049 --> 00:19:02,549
states let's say R 1 and R 2 it's

444
00:18:59,940 --> 00:19:04,950
possible to reconstruct our but given

445
00:19:02,549 --> 00:19:07,799
any two states of C let's say C 1 and C

446
00:19:04,950 --> 00:19:10,710
2 and any two states of l l1 and l2 it's

447
00:19:07,799 --> 00:19:13,620
impossible to it information

448
00:19:10,710 --> 00:19:15,870
theoretically hides both L and C okay so

449
00:19:13,620 --> 00:19:17,969
we have used this fact that these

450
00:19:15,870 --> 00:19:21,149
thresholds are different to through that

451
00:19:17,970 --> 00:19:24,149
g2 is independent of L and G 3 is

452
00:19:21,149 --> 00:19:25,649
independent of both Ln C but still we

453
00:19:24,149 --> 00:19:26,219
need to prove independence in the other

454
00:19:25,649 --> 00:19:28,289
direction

455
00:19:26,220 --> 00:19:30,480
namely we need to prove that g2 is still

456
00:19:28,289 --> 00:19:34,649
independent of R and G 1 is independent

457
00:19:30,480 --> 00:19:37,500
of both C and I okay so to prove this we

458
00:19:34,649 --> 00:19:39,059
actually use a tool called as leakage

459
00:19:37,500 --> 00:19:41,789
resilient secret sharing which was

460
00:19:39,059 --> 00:19:45,379
introduced in this independent works of

461
00:19:41,789 --> 00:19:48,240
Ben de moda at all and coil and Kumar so

462
00:19:45,380 --> 00:19:50,070
so it's just like any other threshold

463
00:19:48,240 --> 00:19:52,919
secret sharing which satisfies this

464
00:19:50,070 --> 00:19:55,799
correctness property and in addition the

465
00:19:52,919 --> 00:19:57,750
secrecy property is now strengthened so

466
00:19:55,799 --> 00:19:58,400
the secrecy property requires that any

467
00:19:57,750 --> 00:20:01,460
group

468
00:19:58,400 --> 00:20:04,250
t-minus one party's learn no information

469
00:20:01,460 --> 00:20:06,050
about the secret message in even when

470
00:20:04,250 --> 00:20:07,880
they are given bounded leakage from the

471
00:20:06,050 --> 00:20:10,040
other ships so the adversary is now

472
00:20:07,880 --> 00:20:12,530
provided t minus one shells in the clear

473
00:20:10,040 --> 00:20:14,570
as well as bounded leakage from the

474
00:20:12,530 --> 00:20:19,309
other shells and still he cannot tell

475
00:20:14,570 --> 00:20:22,010
what the secret is okay so we'll use

476
00:20:19,309 --> 00:20:23,780
this perimeter and we'll slightly modify

477
00:20:22,010 --> 00:20:25,760
the construction so that we will secret

478
00:20:23,780 --> 00:20:27,350
share C using a three out of n leakage

479
00:20:25,760 --> 00:20:29,330
resilient secret sharing and secret

480
00:20:27,350 --> 00:20:32,600
share are using a 2 out of n leak a

481
00:20:29,330 --> 00:20:36,050
resilient secret sure now using the

482
00:20:32,600 --> 00:20:40,399
leakage from this 2 out of n we can in

483
00:20:36,050 --> 00:20:43,970
fact prove that both G 2 and G 1 is

484
00:20:40,400 --> 00:20:46,370
independent of our and similarly using

485
00:20:43,970 --> 00:20:48,140
the leakage from this 3 out of n secret

486
00:20:46,370 --> 00:20:51,500
sharing scheme we can true the G 1 is

487
00:20:48,140 --> 00:20:54,110
independent of C so we have proved

488
00:20:51,500 --> 00:20:56,240
independence in all directions so this

489
00:20:54,110 --> 00:20:59,719
is the high-level idea behind the proof

490
00:20:56,240 --> 00:21:02,750
but there are lots of other things that

491
00:20:59,720 --> 00:21:04,040
I swept under the rug but I'll encourage

492
00:21:02,750 --> 00:21:07,820
you to look into the paper for the

493
00:21:04,040 --> 00:21:09,950
details and in this work we also give

494
00:21:07,820 --> 00:21:11,570
efficient constructions of leaky

495
00:21:09,950 --> 00:21:14,900
resilience secret sharing for any

496
00:21:11,570 --> 00:21:16,970
constant threshold P and this is used to

497
00:21:14,900 --> 00:21:18,920
our connection to combinatorial objects

498
00:21:16,970 --> 00:21:20,450
called as perfect hash function families

499
00:21:18,920 --> 00:21:23,510
and this might be of independent

500
00:21:20,450 --> 00:21:24,679
interest ok so this is the main idea

501
00:21:23,510 --> 00:21:29,679
behind the rate efficient construction

502
00:21:24,679 --> 00:21:33,650
and let me quickly go over the details

503
00:21:29,679 --> 00:21:35,330
behind the stronger results that is

504
00:21:33,650 --> 00:21:38,000
normally by secret sharing in the

505
00:21:35,330 --> 00:21:40,040
stronger multiple tampering model so the

506
00:21:38,000 --> 00:21:42,530
construction is exactly the same as

507
00:21:40,040 --> 00:21:44,510
before except that we use a three split

508
00:21:42,530 --> 00:21:48,170
state mighty temporal non malleable

509
00:21:44,510 --> 00:21:50,210
codes and we reduce any multi tampering

510
00:21:48,170 --> 00:21:52,730
attack against this underlying secret

511
00:21:50,210 --> 00:21:54,410
sharing scheme to a corresponding multi

512
00:21:52,730 --> 00:21:55,910
tampering attack against the non

513
00:21:54,410 --> 00:21:58,120
malleable code and this is the

514
00:21:55,910 --> 00:22:01,010
high-level idea behind the security and

515
00:21:58,120 --> 00:22:02,928
as an independent contribution we also

516
00:22:01,010 --> 00:22:04,820
give rate efficient constructions of

517
00:22:02,929 --> 00:22:07,510
multi time parable three spill state non

518
00:22:04,820 --> 00:22:07,510
malleable codes

519
00:22:09,160 --> 00:22:15,070
okay so to conclude in this work we give

520
00:22:13,060 --> 00:22:16,810
rate efficient constructions of non

521
00:22:15,070 --> 00:22:19,290
malleable secret sharing in the stronger

522
00:22:16,810 --> 00:22:21,909
security model of multiple tampering and

523
00:22:19,290 --> 00:22:25,030
there has been a lot of recent progress

524
00:22:21,910 --> 00:22:26,590
in this area and if you are in not

525
00:22:25,030 --> 00:22:30,580
working in this area then you it's

526
00:22:26,590 --> 00:22:34,629
probably the right time to jump in so in

527
00:22:30,580 --> 00:22:36,250
a subsequent work with Vasudevan we

528
00:22:34,630 --> 00:22:39,070
actually extend the techniques in this

529
00:22:36,250 --> 00:22:40,810
work to get constant rate construction

530
00:22:39,070 --> 00:22:43,389
of non malleable secret sharing so here

531
00:22:40,810 --> 00:22:45,550
we just had a positive rate construction

532
00:22:43,390 --> 00:22:47,800
but here it's a explicit constant rate

533
00:22:45,550 --> 00:22:49,840
the rate is close to one third which is

534
00:22:47,800 --> 00:22:54,790
the rate of the underlying non malleable

535
00:22:49,840 --> 00:22:56,800
code and in another work interesting

536
00:22:54,790 --> 00:22:58,690
work of Kumar McConaughey gives

537
00:22:56,800 --> 00:23:00,909
constructions of leakage resilience

538
00:22:58,690 --> 00:23:03,610
secret sharing against a stronger model

539
00:23:00,910 --> 00:23:06,040
of adaptive leakage so here the

540
00:23:03,610 --> 00:23:08,260
adversary is allowed to adaptively query

541
00:23:06,040 --> 00:23:10,659
leakage functions from the shares and

542
00:23:08,260 --> 00:23:12,580
still the secrecy should hold so this is

543
00:23:10,660 --> 00:23:14,770
a much stronger model than what we

544
00:23:12,580 --> 00:23:18,850
require for constructing non valuable

545
00:23:14,770 --> 00:23:20,650
secrets sharing and another interesting

546
00:23:18,850 --> 00:23:22,689
work for neuron venturi give a

547
00:23:20,650 --> 00:23:24,430
construction of continuous non malleable

548
00:23:22,690 --> 00:23:29,380
secret sharing in the computational

549
00:23:24,430 --> 00:23:32,200
setting with optimal rate and some of

550
00:23:29,380 --> 00:23:34,090
the interesting open problems are can we

551
00:23:32,200 --> 00:23:36,580
get some lower bounds on the rate of non

552
00:23:34,090 --> 00:23:38,800
malleable secret sharing another

553
00:23:36,580 --> 00:23:40,510
interesting problem is to improve the

554
00:23:38,800 --> 00:23:42,550
rate for more expressive tampering

555
00:23:40,510 --> 00:23:44,290
functions and even positive results are

556
00:23:42,550 --> 00:23:48,790
very rare in this more expressive

557
00:23:44,290 --> 00:23:51,360
tampering functions and that's thank you

558
00:23:48,790 --> 00:23:51,360
for your attention

559
00:23:54,480 --> 00:24:06,460
any questions so I may be missing

560
00:24:03,309 --> 00:24:08,889
something but but is it clear that if

561
00:24:06,460 --> 00:24:11,049
you have privacy threshold of T you

562
00:24:08,889 --> 00:24:13,840
cannot hope to get normal ability

563
00:24:11,049 --> 00:24:16,179
threshold larger than T exactly so we

564
00:24:13,840 --> 00:24:18,158
can still hope to get t minus one chest

565
00:24:16,179 --> 00:24:21,070
we can tamper with t minus one shares

566
00:24:18,159 --> 00:24:22,960
together and yeah so those there are

567
00:24:21,070 --> 00:24:24,789
lots of interesting so there are some

568
00:24:22,960 --> 00:24:27,940
positive results in this area but there

569
00:24:24,789 --> 00:24:30,250
is there's a lot of open questions so in

570
00:24:27,940 --> 00:24:32,260
the split model you could hope to get

571
00:24:30,250 --> 00:24:35,590
normal ability threshold larger than the

572
00:24:32,260 --> 00:24:37,840
privacy fashioned in the state model

573
00:24:35,590 --> 00:24:40,750
when your function of applied day today

574
00:24:37,840 --> 00:24:42,970
separately on each shell like no I

575
00:24:40,750 --> 00:24:44,740
didn't get your so I think I should say

576
00:24:42,970 --> 00:24:47,289
that I have a privacy fresh olive of 10

577
00:24:44,740 --> 00:24:50,230
yeah can I hope to get a normal ability

578
00:24:47,289 --> 00:24:52,389
threshold of 20 no because you can just

579
00:24:50,230 --> 00:24:54,970
reconstruct the secret and then you can

580
00:24:52,389 --> 00:24:57,428
just tamper with it let's say add one to

581
00:24:54,970 --> 00:24:58,600
it and then you can so even if you're

582
00:24:57,429 --> 00:25:00,610
tampering functions of they are

583
00:24:58,600 --> 00:25:02,860
separately temporary security you can

584
00:25:00,610 --> 00:25:05,649
apply this attack oh so you're saying

585
00:25:02,860 --> 00:25:07,689
that so if I am tampering with each are

586
00:25:05,649 --> 00:25:10,809
independently then my reconstruction set

587
00:25:07,690 --> 00:25:12,669
can be as high as possible yes but so I

588
00:25:10,809 --> 00:25:21,090
am kind of asking yeah yeah exactly so

589
00:25:12,669 --> 00:25:23,950
that is true okay thank you so in your

590
00:25:21,090 --> 00:25:27,760
construction why do you need to out of

591
00:25:23,950 --> 00:25:31,210
and secret sharing for our can't you

592
00:25:27,760 --> 00:25:34,330
just publicly send the amount of our and

593
00:25:31,210 --> 00:25:37,029
follow the same argument because it

594
00:25:34,330 --> 00:25:39,059
seems that secret cheering for our is

595
00:25:37,029 --> 00:25:41,620
nothing we can't argue that

596
00:25:39,059 --> 00:25:43,840
tampering on C's independent of our

597
00:25:41,620 --> 00:25:46,750
because we actually crucially use the

598
00:25:43,840 --> 00:25:48,490
fact that our is secret red using a two

599
00:25:46,750 --> 00:25:50,409
out of an leaky resilient secret sharing

600
00:25:48,490 --> 00:25:52,990
which is something stronger than just

601
00:25:50,409 --> 00:25:54,519
threshold secret sharing to get

602
00:25:52,990 --> 00:25:57,010
argue this independence of the other

603
00:25:54,519 --> 00:26:00,159
tampering functions of our so in order

604
00:25:57,010 --> 00:26:02,230
to reduce to the security of non

605
00:26:00,159 --> 00:26:05,309
valuable code we need to have

606
00:26:02,230 --> 00:26:05,309
independence in all directions

607
00:26:05,320 --> 00:26:13,490
but still when so like if it was one out

608
00:26:10,340 --> 00:26:15,289
of n steel you could and I III don't

609
00:26:13,490 --> 00:26:17,149
think this construction is secure at

610
00:26:15,289 --> 00:26:21,070
least I don't have a proof that it is

611
00:26:17,149 --> 00:26:30,439
secure okay thank you

612
00:26:21,070 --> 00:26:32,749
any more questions so kind of the same

613
00:26:30,440 --> 00:26:35,210
in the same topic when he took even a

614
00:26:32,749 --> 00:26:38,840
give that reduction to tampering on a

615
00:26:35,210 --> 00:26:40,340
land on c and r which he basically

616
00:26:38,840 --> 00:26:42,408
showed out the tampering on l is

617
00:26:40,340 --> 00:26:44,570
independent of C and R which we showed

618
00:26:42,409 --> 00:26:46,610
that our tampering on our is independent

619
00:26:44,570 --> 00:26:50,990
of L and C but you don't show the same

620
00:26:46,610 --> 00:26:52,699
on C you should know so you gave some

621
00:26:50,990 --> 00:26:54,529
simplification of the argument right

622
00:26:52,700 --> 00:26:56,330
because like if you go this way in this

623
00:26:54,529 --> 00:26:58,580
way you show that C is temporary

624
00:26:56,330 --> 00:27:01,519
independent energy to independent of

625
00:26:58,580 --> 00:27:04,070
both Ln R yeah you need both of them but

626
00:27:01,519 --> 00:27:08,779
you showed only from L and from our o

627
00:27:04,070 --> 00:27:10,850
are actually done by our this leak a

628
00:27:08,779 --> 00:27:13,070
resilient secret sharing so since our a

629
00:27:10,850 --> 00:27:15,740
secret shared using leaky resilient

630
00:27:13,070 --> 00:27:18,769
secret sharing we can use the leakage

631
00:27:15,740 --> 00:27:25,249
from this secret sharing scheme to prove

632
00:27:18,769 --> 00:27:27,619
that g2 is independent of our so it's

633
00:27:25,249 --> 00:27:30,799
independent of well and then you you got

634
00:27:27,619 --> 00:27:32,720
some leakage from all right so this you

635
00:27:30,799 --> 00:27:37,820
can think about this leakage from this

636
00:27:32,720 --> 00:27:43,249
as the tampered state of C hmm okay I

637
00:27:37,820 --> 00:27:45,289
think I get it thank you okay so if you

638
00:27:43,249 --> 00:27:47,029
replace this three split by a to split

639
00:27:45,289 --> 00:27:47,899
code do you get the threshold T greater

640
00:27:47,029 --> 00:27:50,320
than equal to three

641
00:27:47,899 --> 00:27:50,320
yes

642
00:27:55,339 --> 00:28:03,869
more questions no okay so we'll see you

643
00:28:02,009 --> 00:28:05,639
you want to prove better lower like

644
00:28:03,869 --> 00:28:07,589
proof Lord bounds what do me you are to

645
00:28:05,639 --> 00:28:10,349
get a concentrate you want to prove a

646
00:28:07,589 --> 00:28:12,509
concept so the constant is 1/3 what we

647
00:28:10,349 --> 00:28:16,320
achieve so is is it necessary to have

648
00:28:12,509 --> 00:28:21,649
this 1/3 or it's possible to get just

649
00:28:16,320 --> 00:28:23,220
like Shammi you great so thank you

650
00:28:21,649 --> 00:28:26,619
thanks the speaker

651
00:28:23,220 --> 00:28:26,619
[Applause]

