1
00:00:00,000 --> 00:00:03,899
so actually I'm going to start by

2
00:00:01,890 --> 00:00:06,838
talking a little bit about history

3
00:00:03,899 --> 00:00:10,129
instead of cryptography to tell you

4
00:00:06,839 --> 00:00:12,840
where the name John Dyer comes from so

5
00:00:10,130 --> 00:00:15,120
the owner was the sword of a knight

6
00:00:12,840 --> 00:00:18,810
called hollow in France during the

7
00:00:15,120 --> 00:00:22,350
eighth century AD and the story tells

8
00:00:18,810 --> 00:00:24,779
that when halong was about to die in the

9
00:00:22,350 --> 00:00:28,349
battle he did not want the soul to fall

10
00:00:24,779 --> 00:00:31,619
into enemies end and so first he tried

11
00:00:28,349 --> 00:00:32,880
to break the sword onto a rock and the

12
00:00:31,619 --> 00:00:35,640
sword actually broke the rock

13
00:00:32,880 --> 00:00:37,980
effectively creating the breach of how

14
00:00:35,640 --> 00:00:39,840
long you can look that up on Google if

15
00:00:37,980 --> 00:00:43,230
you want and you can see it in the P&A

16
00:00:39,840 --> 00:00:45,300
in France so I decide to free to throw

17
00:00:43,230 --> 00:00:48,360
this all away and it ended up in this

18
00:00:45,300 --> 00:00:51,750
rock in holcomb at war in France about

19
00:00:48,360 --> 00:00:53,699
300 kilometers away so because of all of

20
00:00:51,750 --> 00:00:56,340
that the honor actually means the one

21
00:00:53,699 --> 00:01:01,649
which lasts so I hope this is a world

22
00:00:56,340 --> 00:01:04,199
city named cryptosystem now I'm going to

23
00:01:01,649 --> 00:01:07,350
start with some motivations for this

24
00:01:04,199 --> 00:01:11,850
work so in conveys cryptography in

25
00:01:07,350 --> 00:01:14,100
general we have pretty good results for

26
00:01:11,850 --> 00:01:16,880
public key encryption schemes and key

27
00:01:14,100 --> 00:01:20,570
exchange mechanisms we have several

28
00:01:16,880 --> 00:01:23,189
security and performance trade-offs

29
00:01:20,570 --> 00:01:26,008
reductions to well-known problems things

30
00:01:23,189 --> 00:01:29,369
like that but signature schemes are much

31
00:01:26,009 --> 00:01:31,500
more difficult to grasp and in the rock

32
00:01:29,369 --> 00:01:33,900
metric in particular we had this rank

33
00:01:31,500 --> 00:01:37,829
sign proposal to the first round of the

34
00:01:33,900 --> 00:01:40,320
nist pqc standardization process and it

35
00:01:37,829 --> 00:01:42,929
was broken because rank sign was an

36
00:01:40,320 --> 00:01:45,360
option sign signature scheme and so what

37
00:01:42,930 --> 00:01:48,000
you do is that you ask your message and

38
00:01:45,360 --> 00:01:50,430
you need to invert the syndrome you

39
00:01:48,000 --> 00:01:55,140
obtain we've a trapdoor that isn't done

40
00:01:50,430 --> 00:01:57,659
in the keys and it turned out that the

41
00:01:55,140 --> 00:02:00,329
structure could not be hidden in the

42
00:01:57,659 --> 00:02:03,329
public key so the schema in the broken

43
00:02:00,329 --> 00:02:05,729
and mid wine in the lattice based

44
00:02:03,329 --> 00:02:08,068
cryptography you have this snow leave a

45
00:02:05,729 --> 00:02:11,430
chef's key framework kind of approach

46
00:02:08,068 --> 00:02:13,829
that has a really nice property that is

47
00:02:11,430 --> 00:02:17,370
done not rely on this kind of Eden store

48
00:02:13,830 --> 00:02:20,040
sure so this work is about adapting this

49
00:02:17,370 --> 00:02:23,760
framework to the RAC metric plus adding

50
00:02:20,040 --> 00:02:25,560
a new idea because as I will show if you

51
00:02:23,760 --> 00:02:28,079
do a straightforward adaptation to this

52
00:02:25,560 --> 00:02:31,620
approach it turns out that the scheme is

53
00:02:28,080 --> 00:02:33,930
broken in the ROC metric so what is the

54
00:02:31,620 --> 00:02:36,060
rank metric during the talk we are only

55
00:02:33,930 --> 00:02:39,720
going to consider codes with Co

56
00:02:36,060 --> 00:02:43,020
efficient in FQ to the M and to define

57
00:02:39,720 --> 00:02:45,630
the rank weights of vector X of length n

58
00:02:43,020 --> 00:02:49,080
what we are going to do is that for each

59
00:02:45,630 --> 00:02:52,109
coordinate of X that lies in FQ to the M

60
00:02:49,080 --> 00:02:56,040
we are going to unfold it in a basis of

61
00:02:52,110 --> 00:03:01,230
fum over fu and this will give us a

62
00:02:56,040 --> 00:03:02,850
column vector of length n so by doing

63
00:03:01,230 --> 00:03:08,070
that for each coordinate we obtain a

64
00:03:02,850 --> 00:03:10,350
matrix of size M times N or FQ and we

65
00:03:08,070 --> 00:03:13,470
call the rank weight of X the rank of

66
00:03:10,350 --> 00:03:16,049
its associated matrix and the distance

67
00:03:13,470 --> 00:03:18,630
between x and y the rank of the

68
00:03:16,050 --> 00:03:22,170
difference of the respective associated

69
00:03:18,630 --> 00:03:26,459
matrices another important notion is the

70
00:03:22,170 --> 00:03:29,339
notion of support of a random so we

71
00:03:26,459 --> 00:03:31,200
still have our vector X of length N and

72
00:03:29,340 --> 00:03:35,190
we will call the support of a wound in a

73
00:03:31,200 --> 00:03:39,810
dead support of X or capital e in this

74
00:03:35,190 --> 00:03:41,670
slide the fq subspace of fqm generated

75
00:03:39,810 --> 00:03:43,830
by the coordinates of X and by

76
00:03:41,670 --> 00:03:45,988
definition the dimension of a support of

77
00:03:43,830 --> 00:03:50,519
a world is exactly the rank weight of

78
00:03:45,989 --> 00:03:53,280
this world we are going to consider fum

79
00:03:50,519 --> 00:03:54,930
linear codes so this our more

80
00:03:53,280 --> 00:03:57,769
well-suited for cryptography lon

81
00:03:54,930 --> 00:04:00,239
a few linear codes in the rank metric

82
00:03:57,769 --> 00:04:03,780
the definition is pretty similar to the

83
00:04:00,239 --> 00:04:08,100
one in the aiming metric except that the

84
00:04:03,780 --> 00:04:10,230
scales line fqm instead of f2 usually so

85
00:04:08,100 --> 00:04:12,420
an african linear code is an F gamma

86
00:04:10,230 --> 00:04:15,359
subspaces of F came to the end of

87
00:04:12,420 --> 00:04:18,060
dimension K and to represent such a code

88
00:04:15,360 --> 00:04:21,720
we can even do that by a generator

89
00:04:18,060 --> 00:04:25,400
matrix or by check matrix this can be

90
00:04:21,720 --> 00:04:27,210
really expensive and not really it can

91
00:04:25,400 --> 00:04:28,979
lead to low

92
00:04:27,210 --> 00:04:32,549
kids so we are going to add an

93
00:04:28,979 --> 00:04:35,729
additional structure to this code the

94
00:04:32,550 --> 00:04:38,190
structure is called allele codes so what

95
00:04:35,729 --> 00:04:40,830
we are going to do is that we have some

96
00:04:38,190 --> 00:04:43,919
vectors of length N and we are going to

97
00:04:40,830 --> 00:04:47,400
associate a polynomial of degree n minus

98
00:04:43,919 --> 00:04:51,060
1 to these vectors so here G 1 for

99
00:04:47,400 --> 00:04:54,510
example and there is a knife and a zoom

100
00:04:51,060 --> 00:04:57,750
of ism between these perennials and

101
00:04:54,510 --> 00:04:57,750
[Music]

102
00:05:10,100 --> 00:05:16,640
thank you so I was seeing that there is

103
00:05:14,240 --> 00:05:19,220
an isomorphism between polynomials and n

104
00:05:16,640 --> 00:05:22,159
times a square matrices so what we are

105
00:05:19,220 --> 00:05:24,440
going to do to build such a matrix from

106
00:05:22,160 --> 00:05:27,380
a polynomial of degree n minus 1 is that

107
00:05:24,440 --> 00:05:29,780
on the first row you just write the

108
00:05:27,380 --> 00:05:32,180
questions of your perennials and then

109
00:05:29,780 --> 00:05:34,669
for each row you multiply it by X so

110
00:05:32,180 --> 00:05:37,580
this shifts the perennial kind of and

111
00:05:34,670 --> 00:05:40,810
you reduce it modulo P P is a polynomial

112
00:05:37,580 --> 00:05:43,130
of degree n with coefficient in FQ and

113
00:05:40,810 --> 00:05:47,270
the fact that we take the questions in

114
00:05:43,130 --> 00:05:52,010
FQ and shows that the rank weight and

115
00:05:47,270 --> 00:05:54,409
the support of the world is is kept the

116
00:05:52,010 --> 00:05:58,940
same between each line if you know about

117
00:05:54,410 --> 00:06:02,300
quasi cyclic codes taking P equal to X

118
00:05:58,940 --> 00:06:05,630
to the N minus 1 is the same definition

119
00:06:02,300 --> 00:06:07,670
you get quite a cyclic code and what's

120
00:06:05,630 --> 00:06:10,010
interesting is that now to describe the

121
00:06:07,670 --> 00:06:11,870
matrix G we only need to describe the

122
00:06:10,010 --> 00:06:15,440
first row so this will lead to smaller

123
00:06:11,870 --> 00:06:18,100
keys all right so now I'm going to talk

124
00:06:15,440 --> 00:06:20,150
about our problems for our scheme the

125
00:06:18,100 --> 00:06:21,860
most well-known problem in the Reg

126
00:06:20,150 --> 00:06:24,919
metric is the wrong syndrome decoding

127
00:06:21,860 --> 00:06:28,010
problem so we are given H apart check

128
00:06:24,920 --> 00:06:31,370
matrix of a cause as a syndrome and an

129
00:06:28,010 --> 00:06:34,370
integral W what we want to find is an

130
00:06:31,370 --> 00:06:37,340
error vector such that H times e equals

131
00:06:34,370 --> 00:06:41,450
s and we have a constraint on the weight

132
00:06:37,340 --> 00:06:45,919
of e so if this constraint is low enough

133
00:06:41,450 --> 00:06:48,710
the prime will be hard but if you take W

134
00:06:45,920 --> 00:06:51,830
to be high enough to prime becomes easy

135
00:06:48,710 --> 00:06:53,810
actually so this has to be well chosen

136
00:06:51,830 --> 00:06:57,349
in the parameters such that the problem

137
00:06:53,810 --> 00:07:00,140
is odd of course this could be

138
00:06:57,350 --> 00:07:01,850
specialized for any family of codes for

139
00:07:00,140 --> 00:07:07,460
ideal codes we will denote this prime is

140
00:07:01,850 --> 00:07:09,790
d now this is a more recent problem the

141
00:07:07,460 --> 00:07:13,310
RSL problem it can be seen as a

142
00:07:09,790 --> 00:07:15,380
generalization of the rsd problem so

143
00:07:13,310 --> 00:07:17,450
this time we are still given H approach

144
00:07:15,380 --> 00:07:20,270
check matrix of a code but this time

145
00:07:17,450 --> 00:07:21,950
instead of being given a syndrome we are

146
00:07:20,270 --> 00:07:23,240
given access to an array cool that will

147
00:07:21,950 --> 00:07:26,830
I put

148
00:07:23,240 --> 00:07:31,220
syndromes each time we do a request and

149
00:07:26,830 --> 00:07:35,419
the particularity is that each error

150
00:07:31,220 --> 00:07:39,470
vector e as its colonists lying in the

151
00:07:35,419 --> 00:07:42,318
same support capital e so this is kind

152
00:07:39,470 --> 00:07:44,599
of a variant on the rsd problem we are

153
00:07:42,319 --> 00:07:46,849
instead of having only one syndrome you

154
00:07:44,599 --> 00:07:48,949
are given multiple syndromes and you

155
00:07:46,849 --> 00:07:53,960
know that there is some kind of

156
00:07:48,949 --> 00:07:56,690
structure in the support of zeros all

157
00:07:53,960 --> 00:07:58,909
right so now I'm going to recall quickly

158
00:07:56,690 --> 00:08:01,039
what is signature scheme so it consists

159
00:07:58,909 --> 00:08:03,380
of four algorithms to set up one that

160
00:08:01,039 --> 00:08:06,139
gives the parameters the key chain that

161
00:08:03,380 --> 00:08:09,469
gives the public key and the secret key

162
00:08:06,139 --> 00:08:13,759
you can sign a message mu and our secret

163
00:08:09,470 --> 00:08:17,930
key SK and you can verify the signature

164
00:08:13,759 --> 00:08:22,849
Sigma to check whether it is valid or

165
00:08:17,930 --> 00:08:27,020
not on you on mu and security we are

166
00:08:22,849 --> 00:08:29,719
targeting is formally EU FCM a so if an

167
00:08:27,020 --> 00:08:32,569
adversary obtains a valid signatures of

168
00:08:29,719 --> 00:08:35,240
some messages it should be out for him

169
00:08:32,570 --> 00:08:38,620
to output a valid signature on a fresh

170
00:08:35,240 --> 00:08:43,430
message mu so mu that was not requested

171
00:08:38,620 --> 00:08:46,610
during the first phase now this is the

172
00:08:43,429 --> 00:08:49,510
straightforward adaptation to the rank

173
00:08:46,610 --> 00:08:52,670
metric of deliver ships key framework so

174
00:08:49,510 --> 00:08:55,310
to generate the keys we choose H a

175
00:08:52,670 --> 00:08:57,529
random parity check matrix of a code and

176
00:08:55,310 --> 00:09:00,140
we choose a matrix S that we call

177
00:08:57,529 --> 00:09:02,920
homogeneous matrix because each of its

178
00:09:00,140 --> 00:09:07,069
coordinate lie in a secret support e of

179
00:09:02,920 --> 00:09:10,459
dimension R and another part of the

180
00:09:07,070 --> 00:09:13,730
public key is T the product of H by s

181
00:09:10,459 --> 00:09:17,359
and this is an instance of the aerosol

182
00:09:13,730 --> 00:09:19,550
problem because each column of s can be

183
00:09:17,360 --> 00:09:22,970
seen as an error vector of the same

184
00:09:19,550 --> 00:09:27,439
support e and each gram of T can be seen

185
00:09:22,970 --> 00:09:30,110
as a syndrome all right so to sign a

186
00:09:27,440 --> 00:09:34,880
message you first choose a random vector

187
00:09:30,110 --> 00:09:36,860
Y of weight W you then compute a

188
00:09:34,880 --> 00:09:41,740
challenge using a hash function

189
00:09:36,860 --> 00:09:44,570
so you ask each x y and the message mu

190
00:09:41,740 --> 00:09:48,170
actually this hash functions gives

191
00:09:44,570 --> 00:09:50,390
challenge in of small weight and we will

192
00:09:48,170 --> 00:09:54,979
denote f in the support of the challenge

193
00:09:50,390 --> 00:09:59,270
even compute Z equals y plus years and

194
00:09:54,980 --> 00:10:01,940
that he is a signature the verify step

195
00:09:59,270 --> 00:10:05,390
is pretty simple you check that the

196
00:10:01,940 --> 00:10:08,030
weight of Z is low enough so this

197
00:10:05,390 --> 00:10:11,480
ensures that the signature wasn't forced

198
00:10:08,030 --> 00:10:13,870
by an attacker this has to be chosen low

199
00:10:11,480 --> 00:10:17,570
enough such that the rsd problem is odd

200
00:10:13,870 --> 00:10:20,420
and then you just check that each side

201
00:10:17,570 --> 00:10:22,330
minus G C equals hy basically the

202
00:10:20,420 --> 00:10:26,060
correctness is pretty easy to understand

203
00:10:22,330 --> 00:10:26,480
because when you complete hy you get h z

204
00:10:26,060 --> 00:10:28,729
sorry

205
00:10:26,480 --> 00:10:32,120
you get hy and then the second term

206
00:10:28,730 --> 00:10:35,150
cancels with that because G equals H

207
00:10:32,120 --> 00:10:37,370
times s so this is a pretty simple and

208
00:10:35,150 --> 00:10:43,010
efficient scheme but as I said it is

209
00:10:37,370 --> 00:10:44,900
broken so we we will see why we are

210
00:10:43,010 --> 00:10:49,400
going to look at the support of Z so

211
00:10:44,900 --> 00:10:51,800
because that is y plus y yes the support

212
00:10:49,400 --> 00:10:55,130
of Z is included in W which is the

213
00:10:51,800 --> 00:10:57,620
support of y plus the product space of e

214
00:10:55,130 --> 00:11:00,260
the secret support of the secret key and

215
00:10:57,620 --> 00:11:04,580
F the support of the challenge

216
00:11:00,260 --> 00:11:08,090
C actually we will consider that the

217
00:11:04,580 --> 00:11:10,460
support of Z is exactly W plus CF which

218
00:11:08,090 --> 00:11:17,750
happens with a really good probability

219
00:11:10,460 --> 00:11:20,390
and this supporters you can write the

220
00:11:17,750 --> 00:11:24,410
basis for this support this way so X 1

221
00:11:20,390 --> 00:11:26,740
to X X W is the basis of W and then you

222
00:11:24,410 --> 00:11:29,360
have this kind of product space here so

223
00:11:26,740 --> 00:11:30,950
because of this structure you can

224
00:11:29,360 --> 00:11:35,690
actually use techniques from the

225
00:11:30,950 --> 00:11:37,310
decoding of roaring parity-check code to

226
00:11:35,690 --> 00:11:39,650
recover the support is so what we are

227
00:11:37,310 --> 00:11:42,770
going to do is that you take a basis of

228
00:11:39,650 --> 00:11:45,380
F and for each element you invert it and

229
00:11:42,770 --> 00:11:48,590
you multiply each of these by the

230
00:11:45,380 --> 00:11:50,810
inverse of F I and because of the

231
00:11:48,590 --> 00:11:53,600
product space structure

232
00:11:50,810 --> 00:11:56,510
II will be included of in all of these

233
00:11:53,600 --> 00:11:59,000
supports so we just have now to

234
00:11:56,510 --> 00:12:02,000
intersect all of them and we'll recover

235
00:11:59,000 --> 00:12:04,070
the secret support which means that

236
00:12:02,000 --> 00:12:06,530
signatures leak information from the

237
00:12:04,070 --> 00:12:08,300
secret key and actually you only need

238
00:12:06,530 --> 00:12:12,430
one signature to recover the whole

239
00:12:08,300 --> 00:12:19,099
secret key so we need a new idea to

240
00:12:12,430 --> 00:12:21,589
counteract this attack all right so now

241
00:12:19,100 --> 00:12:24,440
I'm going to present you our scheme with

242
00:12:21,590 --> 00:12:26,270
the new idea I just talked about the

243
00:12:24,440 --> 00:12:30,260
kitchen is essentially the same as

244
00:12:26,270 --> 00:12:32,810
before but you can the matrix S is now

245
00:12:30,260 --> 00:12:35,480
split into two matrices as an S Prime

246
00:12:32,810 --> 00:12:38,630
and what's more interesting is the

247
00:12:35,480 --> 00:12:41,260
signing process so the first two steps

248
00:12:38,630 --> 00:12:44,330
are the same but now in the first step

249
00:12:41,260 --> 00:12:49,120
we are going to add these two PS to the

250
00:12:44,330 --> 00:12:52,910
signature P has the same support as

251
00:12:49,120 --> 00:12:57,260
challenge C and as a signer we get to

252
00:12:52,910 --> 00:13:00,290
choose the value of P and this gives us

253
00:12:57,260 --> 00:13:05,110
some sorry gives us some degree of

254
00:13:00,290 --> 00:13:11,599
Liberty to choose kind of a subspace

255
00:13:05,110 --> 00:13:14,330
after the space W plus EF and we are

256
00:13:11,600 --> 00:13:17,210
going to change the support of Z such

257
00:13:14,330 --> 00:13:20,750
that it lies in a subspace of the

258
00:13:17,210 --> 00:13:23,240
president support and actually because

259
00:13:20,750 --> 00:13:25,610
we get to choose P we can target a

260
00:13:23,240 --> 00:13:28,370
specific support and we are going to

261
00:13:25,610 --> 00:13:32,180
choose support carefully so that the

262
00:13:28,370 --> 00:13:36,080
attack does not work anymore so now the

263
00:13:32,180 --> 00:13:38,000
signature consists of Z C and P and the

264
00:13:36,080 --> 00:13:41,120
verification is pretty straightforward

265
00:13:38,000 --> 00:13:42,970
so you add lambda ear because you just

266
00:13:41,120 --> 00:13:48,050
reduce the weight of the support and

267
00:13:42,970 --> 00:13:52,370
your distant GP in the add function so

268
00:13:48,050 --> 00:13:54,680
what I does why does that work when we

269
00:13:52,370 --> 00:13:59,030
are adding PS to the signature we are

270
00:13:54,680 --> 00:14:01,739
choosing support for Z such that there

271
00:13:59,030 --> 00:14:05,280
is no element of the form ei

272
00:14:01,740 --> 00:14:09,260
where he lies in the secret support and

273
00:14:05,280 --> 00:14:14,430
if lies in the support of the challenge

274
00:14:09,260 --> 00:14:16,350
in the support of Z and if there is no

275
00:14:14,430 --> 00:14:20,040
element of this form we can not choose

276
00:14:16,350 --> 00:14:22,350
the decoding of lrpc code anymore which

277
00:14:20,040 --> 00:14:24,959
does not mean that signatures do not

278
00:14:22,350 --> 00:14:27,900
leak information from the secret key so

279
00:14:24,960 --> 00:14:31,380
we define it a new problem called the

280
00:14:27,900 --> 00:14:33,569
PSSI problem the definition here is

281
00:14:31,380 --> 00:14:36,030
pretty worthy but it's actually pretty

282
00:14:33,570 --> 00:14:40,170
simple to understand you have either

283
00:14:36,030 --> 00:14:43,860
secret support and then each time you

284
00:14:40,170 --> 00:14:49,439
make a request to under record you have

285
00:14:43,860 --> 00:14:52,230
F of Y D and W of width W that are

286
00:14:49,440 --> 00:14:55,350
chosen randomly and UI is actually a

287
00:14:52,230 --> 00:14:58,200
subspace that has the same property has

288
00:14:55,350 --> 00:15:01,200
the support of said during the signature

289
00:14:58,200 --> 00:15:05,430
phase and this problem asked to

290
00:15:01,200 --> 00:15:10,530
determine whether samples are generating

291
00:15:05,430 --> 00:15:15,739
from the signature scheme or when Z come

292
00:15:10,530 --> 00:15:18,089
are just random of the right weight so

293
00:15:15,740 --> 00:15:21,870
this is pretty technical but in the

294
00:15:18,090 --> 00:15:26,790
paper we give arguments that signatures

295
00:15:21,870 --> 00:15:28,410
as are pretty close to random so just

296
00:15:26,790 --> 00:15:32,670
check the paper if you want more details

297
00:15:28,410 --> 00:15:36,870
and this is the main theorem of our work

298
00:15:32,670 --> 00:15:38,969
so under the PSSI assumption the

299
00:15:36,870 --> 00:15:41,790
decisional erase our assumption and the

300
00:15:38,970 --> 00:15:44,670
ID or erase the assumption our scheme is

301
00:15:41,790 --> 00:15:47,430
UFC ma secured so again I'm going to

302
00:15:44,670 --> 00:15:53,010
skip the proof for now but you can check

303
00:15:47,430 --> 00:15:55,560
the paper if you want alright so what

304
00:15:53,010 --> 00:15:58,050
does it give in terms of parameters we

305
00:15:55,560 --> 00:16:01,290
gave two sets of parameters in the paper

306
00:15:58,050 --> 00:16:04,339
as you can see we have public keys sizes

307
00:16:01,290 --> 00:16:07,709
of all the twenty kilobytes and

308
00:16:04,340 --> 00:16:10,640
signature sizes of respectively four and

309
00:16:07,710 --> 00:16:13,230
five kilobytes so the scheme is really

310
00:16:10,640 --> 00:16:15,180
efficient these are reasonable

311
00:16:13,230 --> 00:16:20,030
signatures

312
00:16:15,180 --> 00:16:23,010
in particular and in terms of timings so

313
00:16:20,030 --> 00:16:24,900
kitchen and verification is really fast

314
00:16:23,010 --> 00:16:27,030
the timings here are given in

315
00:16:24,900 --> 00:16:31,140
milliseconds but as you can see the

316
00:16:27,030 --> 00:16:33,180
signature phase is kind of slow but an

317
00:16:31,140 --> 00:16:35,790
interesting feature is that you can

318
00:16:33,180 --> 00:16:38,069
split the signature phase in two and

319
00:16:35,790 --> 00:16:40,079
offline signature phase where you don't

320
00:16:38,070 --> 00:16:42,240
need your server to be on of online

321
00:16:40,080 --> 00:16:44,760
sorry and you don't have to know what

322
00:16:42,240 --> 00:16:47,160
message you are going to assign to

323
00:16:44,760 --> 00:16:50,040
perform this phase so you can do that

324
00:16:47,160 --> 00:16:53,189
ahead of time and then if you've done

325
00:16:50,040 --> 00:16:58,709
all that then the online signature phase

326
00:16:53,190 --> 00:17:00,930
is really efficient so to summarize we

327
00:16:58,710 --> 00:17:03,810
built a new efficient signature scheme

328
00:17:00,930 --> 00:17:06,599
that is an adaptation of the reverse key

329
00:17:03,810 --> 00:17:07,020
framework in the rank metric with a new

330
00:17:06,599 --> 00:17:11,310
idea

331
00:17:07,020 --> 00:17:14,160
you can select basic attack for the

332
00:17:11,310 --> 00:17:18,089
straightforward adaptation it is proved

333
00:17:14,160 --> 00:17:20,970
he you fcm a secure and as an open

334
00:17:18,089 --> 00:17:23,310
question we try to adapt this to the

335
00:17:20,970 --> 00:17:26,550
aming metric but because there is no

336
00:17:23,310 --> 00:17:28,530
equivalent of the RSL problem it does

337
00:17:26,550 --> 00:17:32,990
not seem to work or at least this is not

338
00:17:28,530 --> 00:17:32,990
that easy thank you

339
00:17:36,510 --> 00:17:40,680
so do you have any questions for Nicola

340
00:17:42,240 --> 00:17:47,830
please use the microphone on the side

341
00:17:45,750 --> 00:17:49,540
what's the security level of the

342
00:17:47,830 --> 00:17:56,010
parameters that you proposed because

343
00:17:49,540 --> 00:18:00,820
that hundred and twenty-eight 128 yeah

344
00:17:56,010 --> 00:18:04,200
quantum attacks classical what would you

345
00:18:00,820 --> 00:18:09,010
get a few to likeness security level

346
00:18:04,200 --> 00:18:12,640
five or three actually the limiting

347
00:18:09,010 --> 00:18:18,310
factor for tax is the distinguisher for

348
00:18:12,640 --> 00:18:20,080
the PSSI problem so I don't I don't

349
00:18:18,310 --> 00:18:23,169
think there is a quantum attack that

350
00:18:20,080 --> 00:18:25,629
would really target that so I don't know

351
00:18:23,170 --> 00:18:37,140
this we need more analysis I think okay

352
00:18:25,630 --> 00:18:38,860
thanks what's the second question what

353
00:18:37,140 --> 00:18:40,810
okay so if there's no more questions

354
00:18:38,860 --> 00:18:48,500
let's thank Nikolai again thank you

355
00:18:40,810 --> 00:18:48,500
[Applause]

