1
00:00:00,089 --> 00:00:06,660
because given a talk hi thanks

2
00:00:03,380 --> 00:00:09,809
so this is joint work with my advisor

3
00:00:06,660 --> 00:00:11,250
and Yanique we are hanging around all

4
00:00:09,809 --> 00:00:12,870
the conference during the whole

5
00:00:11,250 --> 00:00:14,150
conference over free to talk to any of

6
00:00:12,870 --> 00:00:17,070
us

7
00:00:14,150 --> 00:00:19,920
so me moving bow is a cryptocurrency

8
00:00:17,070 --> 00:00:22,340
that allows you to make private payments

9
00:00:19,920 --> 00:00:24,480
without having to download the entire

10
00:00:22,340 --> 00:00:26,340
the entire block chain without having to

11
00:00:24,480 --> 00:00:29,310
download 200 gigabytes of data when you

12
00:00:26,340 --> 00:00:32,790
start a new client it was proposed in

13
00:00:29,310 --> 00:00:37,410
2016 by an anonymous person going by the

14
00:00:32,790 --> 00:00:39,420
name of Tom Elvis Schuster which is the

15
00:00:37,410 --> 00:00:42,089
name of all the Mort in the French

16
00:00:39,420 --> 00:00:45,149
version of Harry Potter and it was built

17
00:00:42,090 --> 00:00:46,500
on the top of three main ideas it's a

18
00:00:45,149 --> 00:00:47,910
standalone cryptocurrency but it was

19
00:00:46,500 --> 00:00:50,940
built on three main ideas that were

20
00:00:47,910 --> 00:00:53,819
initially envisioned for Bitcoin and

21
00:00:50,940 --> 00:00:55,559
that for which reverie Maxwell should be

22
00:00:53,820 --> 00:00:57,840
credited namely confidential

23
00:00:55,559 --> 00:01:00,059
transactions which adds a privacy on the

24
00:00:57,840 --> 00:01:02,070
top of Bitcoin go and join which adds up

25
00:01:00,059 --> 00:01:05,039
anonymity and transaction cut through

26
00:01:02,070 --> 00:01:07,140
which adds up scalability after this

27
00:01:05,040 --> 00:01:10,049
publication the author disappeared never

28
00:01:07,140 --> 00:01:12,900
to be found again and some people to

29
00:01:10,049 --> 00:01:15,990
cover this work mostly angry poultra and

30
00:01:12,900 --> 00:01:17,549
a couple of months later another

31
00:01:15,990 --> 00:01:22,158
anonymous person going by the name of

32
00:01:17,549 --> 00:01:24,689
pig not to several in your four friends

33
00:01:22,159 --> 00:01:27,479
develop an implementation and is now

34
00:01:24,689 --> 00:01:29,850
luncheon so in other words what happened

35
00:01:27,479 --> 00:01:31,799
is that Gregory Maxwell put some forum

36
00:01:29,850 --> 00:01:34,649
blog put some forum posts on Bitcoin

37
00:01:31,799 --> 00:01:40,140
talk and this random guy appears puts

38
00:01:34,650 --> 00:01:41,970
this text file and three years later our

39
00:01:40,140 --> 00:01:44,310
cryptocurrencies lunch it potentially

40
00:01:41,970 --> 00:01:47,009
worth billions of dollars and there is

41
00:01:44,310 --> 00:01:49,259
no proof of security so what we did

42
00:01:47,009 --> 00:01:50,909
together with the girl in unique was

43
00:01:49,259 --> 00:01:55,110
proof that these cryptocurrency

44
00:01:50,909 --> 00:01:56,700
satisfies some security notions and we

45
00:01:55,110 --> 00:02:01,350
try to see if we could improve it by

46
00:01:56,700 --> 00:02:04,890
means of abstraction even before talking

47
00:02:01,350 --> 00:02:06,658
about mobile itself can I get a show of

48
00:02:04,890 --> 00:02:12,900
end of how many of you know what is a

49
00:02:06,659 --> 00:02:16,530
utx oh wow okay so in

50
00:02:12,900 --> 00:02:18,780
in in Bitcoin at some point you have to

51
00:02:16,530 --> 00:02:20,250
inject money into the system and the way

52
00:02:18,780 --> 00:02:22,080
you do it is that you create a

53
00:02:20,250 --> 00:02:26,099
transaction that only specify some

54
00:02:22,080 --> 00:02:28,560
outputs you put a value and you

55
00:02:26,099 --> 00:02:31,260
associate this value discredit to some

56
00:02:28,560 --> 00:02:32,819
verification key and if you know the

57
00:02:31,260 --> 00:02:35,220
signing key associated this verification

58
00:02:32,819 --> 00:02:36,929
key then you can spend the money and the

59
00:02:35,220 --> 00:02:39,000
way that you do it is that you create a

60
00:02:36,930 --> 00:02:42,030
new transaction where you're specifying

61
00:02:39,000 --> 00:02:44,280
the outputs how much of this money you

62
00:02:42,030 --> 00:02:45,720
are giving to which verification key and

63
00:02:44,280 --> 00:02:48,750
you would sign this transaction with

64
00:02:45,720 --> 00:02:50,790
your signing key now you would have the

65
00:02:48,750 --> 00:02:52,709
transaction to be balanced if I forget

66
00:02:50,790 --> 00:02:54,000
about fees and stuff like that I would

67
00:02:52,709 --> 00:02:55,650
have that the sum of the output should

68
00:02:54,000 --> 00:02:58,109
be equal to the value associated to this

69
00:02:55,650 --> 00:03:01,019
input and then it goes on and on like

70
00:02:58,109 --> 00:03:02,819
that so for example if I want to send if

71
00:03:01,019 --> 00:03:05,730
I have one Bitcoin and I want to send

72
00:03:02,819 --> 00:03:07,260
you to you two bitcoins I would have to

73
00:03:05,730 --> 00:03:10,078
create a transaction and I would have to

74
00:03:07,260 --> 00:03:11,870
find two verification key was value adds

75
00:03:10,079 --> 00:03:15,000
up to the amount that I want to send you

76
00:03:11,870 --> 00:03:17,099
okay and there is no reason for which in

77
00:03:15,000 --> 00:03:18,569
the output the output should be only the

78
00:03:17,099 --> 00:03:22,160
recipient it could be for example a

79
00:03:18,569 --> 00:03:22,160
change that I want to keep for myself

80
00:03:22,230 --> 00:03:27,810
now on the other side when I receive a

81
00:03:24,780 --> 00:03:29,480
payment I how to avoid that double

82
00:03:27,810 --> 00:03:32,400
spending how do I avoid that these are

83
00:03:29,480 --> 00:03:34,410
signing he has not been used twice the

84
00:03:32,400 --> 00:03:36,660
way that I do so is that I construct a

85
00:03:34,410 --> 00:03:39,329
list of verification key together with

86
00:03:36,660 --> 00:03:41,160
the Associated values that can spend the

87
00:03:39,329 --> 00:03:42,510
money and the way that I do so is that I

88
00:03:41,160 --> 00:03:45,989
look at the world transaction history

89
00:03:42,510 --> 00:03:50,160
and I see the outputs and I check that

90
00:03:45,989 --> 00:03:52,379
they have not been spent so again if I

91
00:03:50,160 --> 00:03:55,049
start if I download if I have a new

92
00:03:52,379 --> 00:03:56,608
Bitcoin client the way that I should

93
00:03:55,049 --> 00:03:58,799
accept new transaction is I don't load

94
00:03:56,609 --> 00:04:00,690
the world transaction history which a

95
00:03:58,799 --> 00:04:03,540
few days ago amounted to more than 200

96
00:04:00,690 --> 00:04:06,209
EAGA bytes I verify all the transactions

97
00:04:03,540 --> 00:04:07,590
and then I construct this list and there

98
00:04:06,209 --> 00:04:08,849
is a great deal of difference between

99
00:04:07,590 --> 00:04:11,010
downloading this world transaction

100
00:04:08,849 --> 00:04:13,018
history and unloading only the list of

101
00:04:11,010 --> 00:04:16,079
unspent transaction output this UT

102
00:04:13,019 --> 00:04:18,798
exocet dimension and which right now

103
00:04:16,079 --> 00:04:21,180
amounts to more or less four gigabytes

104
00:04:18,798 --> 00:04:22,380
and there is no reason for which I would

105
00:04:21,180 --> 00:04:24,349
have to download the entire transaction

106
00:04:22,380 --> 00:04:26,760
history rather than this set and this is

107
00:04:24,349 --> 00:04:29,430
what's very difficult to achieve

108
00:04:26,760 --> 00:04:33,560
and at the same time we're what in some

109
00:04:29,430 --> 00:04:33,560
form at least may move in water achieves

110
00:04:33,890 --> 00:04:40,349
now back to the improvements that I

111
00:04:36,930 --> 00:04:41,760
wanted to mention so the first improving

112
00:04:40,350 --> 00:04:43,650
that dimension is conjoined which is

113
00:04:41,760 --> 00:04:46,200
adds up anonymity and the way it does so

114
00:04:43,650 --> 00:04:47,909
is by noticing that in the inputs there

115
00:04:46,200 --> 00:04:50,280
is no reason for which all the signature

116
00:04:47,910 --> 00:04:51,990
should belong to the same person so if I

117
00:04:50,280 --> 00:04:54,809
were to get together with other friends

118
00:04:51,990 --> 00:04:57,510
that are making other transactions at

119
00:04:54,810 --> 00:04:58,980
the same time instead of signing only my

120
00:04:57,510 --> 00:05:01,980
little transaction we could construct

121
00:04:58,980 --> 00:05:03,780
together by coordination a bigger

122
00:05:01,980 --> 00:05:05,730
transaction the specifying the outputs

123
00:05:03,780 --> 00:05:08,700
all our outputs and we would sign and

124
00:05:05,730 --> 00:05:10,320
said this bigger transaction and I means

125
00:05:08,700 --> 00:05:11,820
of shuffling this will destroy the link

126
00:05:10,320 --> 00:05:16,680
that we have between the sender and the

127
00:05:11,820 --> 00:05:17,909
recipient now if there it's there are

128
00:05:16,680 --> 00:05:19,620
some contribution which are bit more

129
00:05:17,910 --> 00:05:21,930
complicated than that for example if I

130
00:05:19,620 --> 00:05:25,710
want to hide to the other participant

131
00:05:21,930 --> 00:05:28,620
how much money which are my recipients

132
00:05:25,710 --> 00:05:30,390
but the bottom line of this is that with

133
00:05:28,620 --> 00:05:33,450
cooperation I can achieve some form of

134
00:05:30,390 --> 00:05:39,270
annuity and and that is always good to

135
00:05:33,450 --> 00:05:41,400
have friends cut through it's not really

136
00:05:39,270 --> 00:05:43,260
possible in Bitcoin but the fundamental

137
00:05:41,400 --> 00:05:44,849
idea is that if at some point I'm

138
00:05:43,260 --> 00:05:47,250
creating some money and attributing it

139
00:05:44,850 --> 00:05:50,010
to Bob and then Bob send this to Charlie

140
00:05:47,250 --> 00:05:52,410
the ledger itself has no need to record

141
00:05:50,010 --> 00:05:54,780
the fact that Bob at some point had some

142
00:05:52,410 --> 00:05:58,670
money this can easily be forgotten and

143
00:05:54,780 --> 00:05:58,669
the way we call it this is Kathryn

144
00:05:58,820 --> 00:06:05,340
finally the last feature privacy feature

145
00:06:03,750 --> 00:06:06,990
that was initially envisioned for

146
00:06:05,340 --> 00:06:07,979
Bitcoin it's called confidential

147
00:06:06,990 --> 00:06:10,050
transactions and is the most

148
00:06:07,980 --> 00:06:11,790
cryptographically consistent and the

149
00:06:10,050 --> 00:06:13,830
basic idea is that if you want to hide

150
00:06:11,790 --> 00:06:16,380
the value in a Bitcoin transaction you

151
00:06:13,830 --> 00:06:17,909
can replace them with commitments if you

152
00:06:16,380 --> 00:06:20,790
don't know what commitment schemes are

153
00:06:17,910 --> 00:06:22,070
you can think of them as encryption if

154
00:06:20,790 --> 00:06:27,680
you don't know what encryption is

155
00:06:22,070 --> 00:06:29,790
whatever but the basic idea is that

156
00:06:27,680 --> 00:06:31,320
commitments are really what we want they

157
00:06:29,790 --> 00:06:32,400
are in the case of penderson commitment

158
00:06:31,320 --> 00:06:34,800
they are perfectly adding so they

159
00:06:32,400 --> 00:06:36,239
perfectly hide the values and they are

160
00:06:34,800 --> 00:06:38,070
binding in the sense that once I

161
00:06:36,240 --> 00:06:39,449
selected this commitment they can all

162
00:06:38,070 --> 00:06:42,930
really change my mind about how

163
00:06:39,449 --> 00:06:44,699
much value were put in there and at this

164
00:06:42,930 --> 00:06:46,020
point one problem would be how do I

165
00:06:44,699 --> 00:06:47,580
check that that transaction is balanced

166
00:06:46,020 --> 00:06:49,049
that the sum of the outputs minus sum of

167
00:06:47,580 --> 00:06:50,909
the inputs is equal to zero

168
00:06:49,050 --> 00:06:52,830
and the way that I would do it is that

169
00:06:50,909 --> 00:06:54,960
the day transaction the person that's

170
00:06:52,830 --> 00:06:56,669
creating the transaction would select

171
00:06:54,960 --> 00:06:58,859
the opening so that they are sum up to

172
00:06:56,669 --> 00:07:00,688
zero and at this point if the sum of

173
00:06:58,860 --> 00:07:02,520
their commitments in the outputs minus

174
00:07:00,689 --> 00:07:04,949
the inputs is the identity element it

175
00:07:02,520 --> 00:07:06,599
would mean necessarily that the values

176
00:07:04,949 --> 00:07:08,909
add up to zero and therefore the

177
00:07:06,599 --> 00:07:10,139
transaction is balanced now it's a

178
00:07:08,909 --> 00:07:12,900
little bit more complicated than that

179
00:07:10,139 --> 00:07:14,999
because implicitly these values are not

180
00:07:12,900 --> 00:07:17,039
natural elements they are elements in a

181
00:07:14,999 --> 00:07:19,319
finite field so for example I could have

182
00:07:17,039 --> 00:07:21,659
as input P minus 1 and 1 on the other

183
00:07:19,319 --> 00:07:24,569
side and I don't really want to did have

184
00:07:21,659 --> 00:07:26,699
this problem of wraparound so I for in

185
00:07:24,569 --> 00:07:29,249
order to to fix that I have to add a

186
00:07:26,699 --> 00:07:30,930
range proof simulation extractable

187
00:07:29,249 --> 00:07:35,120
journal is proof that says that these

188
00:07:30,930 --> 00:07:35,120
values is for example 32 bit long and

189
00:07:36,169 --> 00:07:42,539
this is sort of the starting point for

190
00:07:38,249 --> 00:07:43,979
me moving more so if I were to take back

191
00:07:42,539 --> 00:07:45,979
confidential transactions in the way

192
00:07:43,979 --> 00:07:48,060
they explained it before I would have

193
00:07:45,979 --> 00:07:49,919
instead of these values again these

194
00:07:48,060 --> 00:07:52,050
commitments and I will have some sort of

195
00:07:49,919 --> 00:07:53,159
opening associated to them and a

196
00:07:52,050 --> 00:07:55,169
transaction would have again the

197
00:07:53,159 --> 00:07:57,629
signature and then values were placed by

198
00:07:55,169 --> 00:08:00,688
commitments now there is another way

199
00:07:57,629 --> 00:08:03,419
which I can check that this transaction

200
00:08:00,689 --> 00:08:05,580
is balanced and is not to force the

201
00:08:03,419 --> 00:08:12,330
person to put the openings to be equal

202
00:08:05,580 --> 00:08:14,159
to zero but to put - to let define the

203
00:08:12,330 --> 00:08:16,080
access what the code will call the

204
00:08:14,159 --> 00:08:18,479
access as the sum of the outputs minus

205
00:08:16,080 --> 00:08:20,729
sum of the inputs and and notice that

206
00:08:18,479 --> 00:08:23,729
this is a our group element and we can

207
00:08:20,729 --> 00:08:27,628
see this as a public key of which only

208
00:08:23,729 --> 00:08:29,339
the sender which has the input and the

209
00:08:27,629 --> 00:08:31,740
recipient which has the outputs know the

210
00:08:29,339 --> 00:08:35,010
respective secret key so in theory they

211
00:08:31,740 --> 00:08:39,000
could get together and prove to anybody

212
00:08:35,010 --> 00:08:40,769
knowledge of these secret key by making

213
00:08:39,000 --> 00:08:42,779
a signature for example on the empty

214
00:08:40,769 --> 00:08:44,279
element and this in some sense would

215
00:08:42,779 --> 00:08:46,019
prove that they know the discrete log of

216
00:08:44,279 --> 00:08:47,760
this group element and therefore that it

217
00:08:46,019 --> 00:08:49,319
was a commitment to zero and if it was a

218
00:08:47,760 --> 00:08:52,260
commitment to zero it was a trellis

219
00:08:49,319 --> 00:08:55,620
transaction the sort of the way it works

220
00:08:52,260 --> 00:08:57,420
and and the crazy idea be moving world

221
00:08:55,620 --> 00:08:59,940
what what makes it beautiful is that the

222
00:08:57,420 --> 00:09:01,860
it actually says well right now when I

223
00:08:59,940 --> 00:09:03,840
want to make a transaction I have true

224
00:09:01,860 --> 00:09:06,570
secret keys I have a opening to the

225
00:09:03,840 --> 00:09:08,760
commitment and I have also assigning

226
00:09:06,570 --> 00:09:09,570
here what if I just get rid of the

227
00:09:08,760 --> 00:09:11,970
signing keys

228
00:09:09,570 --> 00:09:13,800
what if the this signature that I'm

229
00:09:11,970 --> 00:09:15,120
making would be sufficient both for

230
00:09:13,800 --> 00:09:17,790
proving that a transaction is balanced

231
00:09:15,120 --> 00:09:20,190
and for proving that I really know the

232
00:09:17,790 --> 00:09:21,810
openings to this commitment there is no

233
00:09:20,190 --> 00:09:26,550
a priori reason for which this would

234
00:09:21,810 --> 00:09:29,699
work and this is what we try to prove so

235
00:09:26,550 --> 00:09:32,010
using this if I were to go back to the

236
00:09:29,700 --> 00:09:34,650
initial slide where we saw the flow of

237
00:09:32,010 --> 00:09:36,960
transactions how do I create some money

238
00:09:34,650 --> 00:09:38,579
I would have to create a new transaction

239
00:09:36,960 --> 00:09:40,680
where the value is replace it with the

240
00:09:38,580 --> 00:09:42,660
commitments again and I would have to

241
00:09:40,680 --> 00:09:45,589
specify in something that I call the

242
00:09:42,660 --> 00:09:48,300
supply how much value I'm creating and

243
00:09:45,590 --> 00:09:50,280
the signature would be valid under that

244
00:09:48,300 --> 00:09:52,439
commit the commitment in doubt - the

245
00:09:50,280 --> 00:09:54,540
commitment with zero binding factor to

246
00:09:52,440 --> 00:09:56,160
the to the value that's being declared

247
00:09:54,540 --> 00:09:57,750
and it was sort of proved that this

248
00:09:56,160 --> 00:10:03,240
commitment is really creating this value

249
00:09:57,750 --> 00:10:05,430
and then the secret key for him how once

250
00:10:03,240 --> 00:10:07,440
I created this this commitment how do I

251
00:10:05,430 --> 00:10:08,969
spend it and the way that they do it is

252
00:10:07,440 --> 00:10:10,860
that I would create again a transaction

253
00:10:08,970 --> 00:10:14,700
I would put as input a commitment I

254
00:10:10,860 --> 00:10:16,920
would declare the change how much value

255
00:10:14,700 --> 00:10:20,070
I want to take for myself and on the

256
00:10:16,920 --> 00:10:22,380
other side the recipient would create a

257
00:10:20,070 --> 00:10:24,270
commitment to the value of the reminder

258
00:10:22,380 --> 00:10:27,330
the value that we agreed upon and

259
00:10:24,270 --> 00:10:31,620
together using our respective openings

260
00:10:27,330 --> 00:10:34,470
we would create this signature right so

261
00:10:31,620 --> 00:10:36,270
actually what we do in the paper is we

262
00:10:34,470 --> 00:10:42,750
show the way in which these you can do

263
00:10:36,270 --> 00:10:44,449
it not interactively so here when me

264
00:10:42,750 --> 00:10:48,090
moving most sort of starts to shine and

265
00:10:44,450 --> 00:10:50,610
if I have one if I have two transactions

266
00:10:48,090 --> 00:10:54,180
and again this transaction are just true

267
00:10:50,610 --> 00:10:57,150
lists of commitments which have can be

268
00:10:54,180 --> 00:10:59,040
verified with the signature and the

269
00:10:57,150 --> 00:11:00,810
signature is valid again under the sum

270
00:10:59,040 --> 00:11:03,120
of the outputs - some of the inputs I

271
00:11:00,810 --> 00:11:05,369
can also consider what is called an

272
00:11:03,120 --> 00:11:06,150
aggregated transaction and what does it

273
00:11:05,370 --> 00:11:08,280
mean the addition

274
00:11:06,150 --> 00:11:10,260
here it means that I take the inputs of

275
00:11:08,280 --> 00:11:11,550
the true transaction and I concatenate

276
00:11:10,260 --> 00:11:13,620
them and I put it in on your transaction

277
00:11:11,550 --> 00:11:15,959
I take their outputs and I concatenate

278
00:11:13,620 --> 00:11:17,160
them I consider the union of the two and

279
00:11:15,960 --> 00:11:19,530
now what is the access of this

280
00:11:17,160 --> 00:11:20,790
transaction while the inputs get added

281
00:11:19,530 --> 00:11:22,680
together and the outputs get added

282
00:11:20,790 --> 00:11:25,339
together so it's the addition of the

283
00:11:22,680 --> 00:11:29,130
true accesses of the two previous

284
00:11:25,340 --> 00:11:31,860
accesses and we know of a primitive

285
00:11:29,130 --> 00:11:34,020
namely aggregated signatures which allow

286
00:11:31,860 --> 00:11:35,820
me without knowing the signing key of

287
00:11:34,020 --> 00:11:37,949
any of the two transaction to squash

288
00:11:35,820 --> 00:11:39,510
together these two signatures and have

289
00:11:37,950 --> 00:11:43,500
only one which accounts for both at the

290
00:11:39,510 --> 00:11:45,480
same time and and the beautiful thing

291
00:11:43,500 --> 00:11:48,060
about this is that it gives me some I

292
00:11:45,480 --> 00:11:49,830
can then shuffle the transaction and I

293
00:11:48,060 --> 00:11:51,839
would destroy the link that was between

294
00:11:49,830 --> 00:11:54,450
the true transaction individually and

295
00:11:51,840 --> 00:11:56,310
also I can do this any time I do not

296
00:11:54,450 --> 00:11:57,870
have to I do not need to wait for any

297
00:11:56,310 --> 00:12:02,790
party to be online I can do it is known

298
00:11:57,870 --> 00:12:04,920
interactively and what I want and there

299
00:12:02,790 --> 00:12:07,650
is another thing that is interesting to

300
00:12:04,920 --> 00:12:09,569
notice and it is that and this is the

301
00:12:07,650 --> 00:12:12,300
scalability feature of me moving more is

302
00:12:09,570 --> 00:12:13,910
that if I have a transaction where the

303
00:12:12,300 --> 00:12:15,719
output goes back as input the

304
00:12:13,910 --> 00:12:18,510
intermediate thing that we talked about

305
00:12:15,720 --> 00:12:21,210
before well at this point the final

306
00:12:18,510 --> 00:12:23,310
transaction what do we have we have that

307
00:12:21,210 --> 00:12:25,490
the same coin the same commitment will

308
00:12:23,310 --> 00:12:27,630
appear both as input and as output and

309
00:12:25,490 --> 00:12:30,930
therefore it does not contribute to the

310
00:12:27,630 --> 00:12:32,820
final sum what does this mean it means

311
00:12:30,930 --> 00:12:34,260
that what if what if we think a

312
00:12:32,820 --> 00:12:36,330
cut-through is the way in the way we

313
00:12:34,260 --> 00:12:38,280
thought about this before what if we

314
00:12:36,330 --> 00:12:39,750
just remove these commitments then the

315
00:12:38,280 --> 00:12:42,089
signature will still be valid because

316
00:12:39,750 --> 00:12:44,310
the access again has these terms

317
00:12:42,090 --> 00:12:45,690
cancelling out each other so they don't

318
00:12:44,310 --> 00:12:47,040
really contribute so I can really get

319
00:12:45,690 --> 00:12:50,340
rid of them and still have a transaction

320
00:12:47,040 --> 00:12:51,810
which is valid so in a way they only

321
00:12:50,340 --> 00:12:54,390
price them paying for aggregating two

322
00:12:51,810 --> 00:12:56,400
transaction is adding these group

323
00:12:54,390 --> 00:12:57,960
element over here and in the meantime I

324
00:12:56,400 --> 00:13:00,360
get rid of all the intermediate things

325
00:12:57,960 --> 00:13:03,330
and the way that we sort this sort of

326
00:13:00,360 --> 00:13:07,710
fits together is beautiful and very

327
00:13:03,330 --> 00:13:09,660
simple at the same time and we move in

328
00:13:07,710 --> 00:13:11,790
bold they used to say that everything is

329
00:13:09,660 --> 00:13:14,850
a transaction even the ledger at this

330
00:13:11,790 --> 00:13:16,770
point you can think of it just as a list

331
00:13:14,850 --> 00:13:18,840
of coins that have been generated at

332
00:13:16,770 --> 00:13:20,010
some point and then squash together so

333
00:13:18,840 --> 00:13:22,170
it has only output

334
00:13:20,010 --> 00:13:23,939
and the supply the money that has been

335
00:13:22,170 --> 00:13:25,530
generated accounts for the total amount

336
00:13:23,940 --> 00:13:29,070
of money that is available in the system

337
00:13:25,530 --> 00:13:31,050
and the signature is accounts for all

338
00:13:29,070 --> 00:13:32,640
the past transactions so instead of

339
00:13:31,050 --> 00:13:35,099
downloading if you remember the picture

340
00:13:32,640 --> 00:13:37,050
of before if I want to have some

341
00:13:35,100 --> 00:13:39,720
cryptographic notion of validity of the

342
00:13:37,050 --> 00:13:41,280
UT X I just have to download this verify

343
00:13:39,720 --> 00:13:42,930
this signature and all the range proofs

344
00:13:41,280 --> 00:13:48,540
when I'm done I don't have to download

345
00:13:42,930 --> 00:13:51,329
to you 200 gigabytes of data so what did

346
00:13:48,540 --> 00:13:53,430
we do what we took minimal limbo we

347
00:13:51,330 --> 00:13:55,700
abstracted away the notion of homework

348
00:13:53,430 --> 00:13:57,719
commitments simulation extractable

349
00:13:55,700 --> 00:14:03,270
non-interactive general knowledge proofs

350
00:13:57,720 --> 00:14:06,000
and arguments and and aggregate

351
00:14:03,270 --> 00:14:08,400
signatures we provide some security

352
00:14:06,000 --> 00:14:09,810
notion that we believe describe the

353
00:14:08,400 --> 00:14:12,540
security properties that we want from a

354
00:14:09,810 --> 00:14:14,280
moving ball namely it is not possible to

355
00:14:12,540 --> 00:14:16,439
spend more money than is available in

356
00:14:14,280 --> 00:14:17,910
the system which protects the system it

357
00:14:16,440 --> 00:14:19,710
is not possible to steal money from

358
00:14:17,910 --> 00:14:22,709
honest users we want to protect the

359
00:14:19,710 --> 00:14:24,840
users and the amounts are hidden we are

360
00:14:22,710 --> 00:14:28,920
protecting the transfers of money from

361
00:14:24,840 --> 00:14:31,050
user to user and then we prove these the

362
00:14:28,920 --> 00:14:33,089
security of member raynbow and in order

363
00:14:31,050 --> 00:14:35,130
to do so we have to introduce new

364
00:14:33,090 --> 00:14:37,470
security assumptions of compatibility

365
00:14:35,130 --> 00:14:39,600
between the signature scheme and the

366
00:14:37,470 --> 00:14:41,820
commitment scheme this comes from the

367
00:14:39,600 --> 00:14:43,830
fact that as you saw before a commitment

368
00:14:41,820 --> 00:14:48,660
to zero acts as a public key for signing

369
00:14:43,830 --> 00:14:50,850
a transaction and we gave also examples

370
00:14:48,660 --> 00:14:52,560
of our commitment and signature scheme

371
00:14:50,850 --> 00:14:55,200
that satisfy this property namely

372
00:14:52,560 --> 00:14:57,300
paterson commitments and nor signatures

373
00:14:55,200 --> 00:14:59,400
which is what has been used in a green

374
00:14:57,300 --> 00:15:01,609
implementation of a moving ball right

375
00:14:59,400 --> 00:15:04,319
now and we give another example

376
00:15:01,610 --> 00:15:06,210
penderson commitments and VLS signature

377
00:15:04,320 --> 00:15:08,010
which which acts better in terms of

378
00:15:06,210 --> 00:15:09,630
aggregation because in BLS signature

379
00:15:08,010 --> 00:15:14,850
aggregation of signature is only one

380
00:15:09,630 --> 00:15:18,570
group element more formally what did we

381
00:15:14,850 --> 00:15:20,550
prove is that inflation again protects

382
00:15:18,570 --> 00:15:24,390
the system it says that it is very

383
00:15:20,550 --> 00:15:26,670
difficult for an adversary to create a

384
00:15:24,390 --> 00:15:28,740
ledger and the transaction which is

385
00:15:26,670 --> 00:15:31,500
consuming more money than was available

386
00:15:28,740 --> 00:15:33,090
in the system and intuitively you can

387
00:15:31,500 --> 00:15:33,870
say that this can happen in two ways

388
00:15:33,090 --> 00:15:36,720
either that

389
00:15:33,870 --> 00:15:38,610
three is breaking something in the

390
00:15:36,720 --> 00:15:40,950
cryptographic primitives using the

391
00:15:38,610 --> 00:15:42,090
ledger for example the commitment the

392
00:15:40,950 --> 00:15:44,160
binding property of the commitment

393
00:15:42,090 --> 00:15:45,810
scheme or the affordability notion for

394
00:15:44,160 --> 00:15:48,120
the signature or the range proofs or

395
00:15:45,810 --> 00:15:50,010
it's creating a transaction which is not

396
00:15:48,120 --> 00:15:52,020
balanced and in order to create a

397
00:15:50,010 --> 00:15:52,980
transaction translating a transaction

398
00:15:52,020 --> 00:15:55,050
which is not balanced

399
00:15:52,980 --> 00:15:57,870
means that the signature is valid under

400
00:15:55,050 --> 00:15:59,240
a commitment that is nonzero and again

401
00:15:57,870 --> 00:16:01,170
you see that there is this sort of

402
00:15:59,240 --> 00:16:03,900
relation between commitments and

403
00:16:01,170 --> 00:16:09,510
signature which needs to be put in place

404
00:16:03,900 --> 00:16:11,910
and formalized then we prove that it is

405
00:16:09,510 --> 00:16:14,520
not possible for an adversary that is

406
00:16:11,910 --> 00:16:17,370
observing honest user interacting and is

407
00:16:14,520 --> 00:16:19,949
interacting itself with the ledger to

408
00:16:17,370 --> 00:16:22,260
steal at any point in time one coin that

409
00:16:19,950 --> 00:16:25,130
belongs to an honest users this is a

410
00:16:22,260 --> 00:16:26,939
much more difficult to prove

411
00:16:25,130 --> 00:16:28,500
finally we prove transaction

412
00:16:26,940 --> 00:16:30,540
indistinguishability and it basically

413
00:16:28,500 --> 00:16:33,060
says that if we have two transactions of

414
00:16:30,540 --> 00:16:34,620
the same length then they you cannot

415
00:16:33,060 --> 00:16:41,010
really distinguish one from the other in

416
00:16:34,620 --> 00:16:42,930
the sort of NCPA game and actually these

417
00:16:41,010 --> 00:16:45,030
are over a week notion of privacy and

418
00:16:42,930 --> 00:16:46,949
we're working on a stronger notion that

419
00:16:45,030 --> 00:16:52,650
we're going to predict in integrating

420
00:16:46,950 --> 00:16:54,480
the full version because in fact if you

421
00:16:52,650 --> 00:16:55,949
consider two transactions and this true

422
00:16:54,480 --> 00:16:58,290
transaction I have nothing in common

423
00:16:55,950 --> 00:17:00,510
then when you aggregate them these two

424
00:16:58,290 --> 00:17:03,060
accesses the public keys sort of

425
00:17:00,510 --> 00:17:04,290
uniquely identify the true constituting

426
00:17:03,060 --> 00:17:07,319
transactions of this aggregated

427
00:17:04,290 --> 00:17:09,720
transaction because they are the subset

428
00:17:07,319 --> 00:17:12,030
sum of some of these commitments so I

429
00:17:09,720 --> 00:17:13,260
can in some sense derive back which

430
00:17:12,030 --> 00:17:16,770
construction made it and this is a

431
00:17:13,260 --> 00:17:20,640
property that I will that implicitly I I

432
00:17:16,770 --> 00:17:22,500
do not want to be there and there is

433
00:17:20,640 --> 00:17:24,600
there was a proposal namely kernel

434
00:17:22,500 --> 00:17:27,690
offset from Andrew poultra that is now

435
00:17:24,599 --> 00:17:30,360
integrated into cream that prevents this

436
00:17:27,690 --> 00:17:31,890
and this is something we will put in a

437
00:17:30,360 --> 00:17:34,350
full version strengthening the the

438
00:17:31,890 --> 00:17:37,200
privacy game for transaction

439
00:17:34,350 --> 00:17:41,280
indistinguishability this is basically

440
00:17:37,200 --> 00:17:45,210
all I have to say so far and I'd like to

441
00:17:41,280 --> 00:17:47,340
add that I am at the end of my PhD and I

442
00:17:45,210 --> 00:17:49,890
am looking for a postdoc

443
00:17:47,340 --> 00:17:53,429
so if you're looking for somebody that

444
00:17:49,890 --> 00:17:56,070
can tell you that your roof system is is

445
00:17:53,430 --> 00:17:58,230
secure and I can go all the way down to

446
00:17:56,070 --> 00:18:00,810
implementing ashing into the curve or

447
00:17:58,230 --> 00:18:03,600
hashing into a field element and maybe

448
00:18:00,810 --> 00:18:10,340
I'm the right person to talk

449
00:18:03,600 --> 00:18:26,580
[Applause]

450
00:18:10,340 --> 00:18:28,409
questions for our Mackellar so this

451
00:18:26,580 --> 00:18:31,050
notion of transaction or link ability is

452
00:18:28,410 --> 00:18:32,910
what what exactly does it cover like

453
00:18:31,050 --> 00:18:35,220
does it also cover like user earn link

454
00:18:32,910 --> 00:18:37,530
ability like when I spend like it goes

455
00:18:35,220 --> 00:18:39,210
from a user to another user and so on is

456
00:18:37,530 --> 00:18:41,520
it like something like same same level

457
00:18:39,210 --> 00:18:44,970
as the cash or is it like weaker or now

458
00:18:41,520 --> 00:18:46,889
it covers the fact that if I created if

459
00:18:44,970 --> 00:18:48,720
I created some money and then I sent it

460
00:18:46,890 --> 00:18:50,850
some other user and I squash together

461
00:18:48,720 --> 00:18:52,860
all these transactions then this

462
00:18:50,850 --> 00:18:54,060
transaction are indistinguishable okay

463
00:18:52,860 --> 00:18:56,580
so it's really for a particular

464
00:18:54,060 --> 00:18:59,960
transaction the the money the amount of

465
00:18:56,580 --> 00:19:03,570
money because so but what what about

466
00:18:59,960 --> 00:19:05,910
could this money be traced okay so the

467
00:19:03,570 --> 00:19:08,760
money can be traced later unless you add

468
00:19:05,910 --> 00:19:10,110
these criminal offsetting okay and that

469
00:19:08,760 --> 00:19:12,420
this is something that we will put soon

470
00:19:10,110 --> 00:19:14,129
in their full version this relation

471
00:19:12,420 --> 00:19:16,920
between commitments and signature is

472
00:19:14,130 --> 00:19:18,210
that look is that standard notion or is

473
00:19:16,920 --> 00:19:19,890
this like something that you need on top

474
00:19:18,210 --> 00:19:21,330
of like when you do when you do

475
00:19:19,890 --> 00:19:22,950
implement your blockchain you actually

476
00:19:21,330 --> 00:19:24,210
need to take care of that or it's

477
00:19:22,950 --> 00:19:28,710
something that this proper of me moving

478
00:19:24,210 --> 00:19:31,800
body to be introduced so it's proper so

479
00:19:28,710 --> 00:19:33,540
does that require like can it be do you

480
00:19:31,800 --> 00:19:35,909
need started standard commitments a

481
00:19:33,540 --> 00:19:37,500
signature yes but it is a property that

482
00:19:35,910 --> 00:19:39,000
you need to prove on a pair of cough a

483
00:19:37,500 --> 00:19:40,680
commitment and signature you need to

484
00:19:39,000 --> 00:19:43,470
prove that this pair commitment

485
00:19:40,680 --> 00:19:45,510
signature satisfy a property namely for

486
00:19:43,470 --> 00:19:47,220
example the at least the fact that a

487
00:19:45,510 --> 00:19:49,200
commitment to zero is a valid

488
00:19:47,220 --> 00:19:52,860
verification key or can be mapped to a

489
00:19:49,200 --> 00:19:55,250
valid verification key all right thank

490
00:19:52,860 --> 00:20:01,859
you let's technically

491
00:19:55,250 --> 00:20:01,859
[Applause]

