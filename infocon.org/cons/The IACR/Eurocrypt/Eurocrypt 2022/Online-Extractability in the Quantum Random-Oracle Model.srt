1
00:00:06,319 --> 00:00:08,640
okay

2
00:00:11,280 --> 00:00:14,080
all right hello everyone welcome to the

3
00:00:14,080 --> 00:00:15,200
session on

4
00:00:15,200 --> 00:00:17,359
information theoretic cryptography i

5
00:00:17,359 --> 00:00:18,960
suppose this is the

6
00:00:18,960 --> 00:00:21,760
session on quantum information theoretic

7
00:00:21,760 --> 00:00:23,680
cryptography

8
00:00:23,680 --> 00:00:27,439
so we have two exciting talks today

9
00:00:27,439 --> 00:00:31,279
and i guess as a quick reminder uh

10
00:00:31,279 --> 00:00:34,480
so this is now cosmos one and two uh

11
00:00:34,480 --> 00:00:37,200
cosmos two is cosmos

12
00:00:37,200 --> 00:00:40,640
well yeah cosmos three is uh hosting

13
00:00:40,640 --> 00:00:42,559
what's formerly cosmos three and then

14
00:00:42,559 --> 00:00:45,680
cosmos 3 is closed so yeah this is the

15
00:00:45,680 --> 00:00:48,000
correct room for uh for information

16
00:00:48,000 --> 00:00:51,520
theoretic security um okay so the first

17
00:00:51,520 --> 00:00:54,079
uh talk today is online extractability

18
00:00:54,079 --> 00:00:56,559
in the quantum random oracle model uh

19
00:00:56,559 --> 00:00:59,440
this is uh work by uh yeli don serge

20
00:00:59,440 --> 00:01:02,399
fair uh christian mayans and uh

21
00:01:02,399 --> 00:01:05,040
christian schaffner and uh yelly will

22
00:01:05,040 --> 00:01:09,159
give the uh the talk

23
00:01:16,560 --> 00:01:20,080
thank you for the introduction

24
00:01:20,479 --> 00:01:21,759
uh

25
00:01:21,759 --> 00:01:25,600
yes indeed online extractability

26
00:01:25,600 --> 00:01:27,840
to get on the same page let's first do a

27
00:01:27,840 --> 00:01:30,720
quick recap of what extraction is and

28
00:01:30,720 --> 00:01:33,840
where we find it in cryptography

29
00:01:33,840 --> 00:01:37,119
we find it in a context where some

30
00:01:37,119 --> 00:01:40,079
algorithm a sends messages that depend

31
00:01:40,079 --> 00:01:42,079
on some secret s

32
00:01:42,079 --> 00:01:44,560
and in an honest execution

33
00:01:44,560 --> 00:01:47,119
s indeed remains secret

34
00:01:47,119 --> 00:01:48,479
but there

35
00:01:48,479 --> 00:01:51,439
access an extractor algorithm

36
00:01:51,439 --> 00:01:54,240
that given some kind of enhanced access

37
00:01:54,240 --> 00:01:55,840
to the algorithm

38
00:01:55,840 --> 00:01:57,119
i'll explain

39
00:01:57,119 --> 00:01:58,719
later on a bit more what this enhanced

40
00:01:58,719 --> 00:02:00,320
access is

41
00:02:00,320 --> 00:02:04,399
can then recover the secret s

42
00:02:04,399 --> 00:02:05,920
some examples

43
00:02:05,920 --> 00:02:07,119
probably the

44
00:02:07,119 --> 00:02:09,679
most well-known example is that of zero

45
00:02:09,679 --> 00:02:11,920
knowledge proofs of knowledge

46
00:02:11,920 --> 00:02:14,000
like the sigma protocol that you see

47
00:02:14,000 --> 00:02:14,879
here

48
00:02:14,879 --> 00:02:17,120
it's a three-round interactive scheme

49
00:02:17,120 --> 00:02:17,840
that

50
00:02:17,840 --> 00:02:20,480
allows some proofer alice to prove her

51
00:02:20,480 --> 00:02:23,599
knowledge of a secret witness w for an

52
00:02:23,599 --> 00:02:25,280
np relation

53
00:02:25,280 --> 00:02:28,560
to uh the verifier bob

54
00:02:28,560 --> 00:02:30,400
and indeed the zero knowledge property

55
00:02:30,400 --> 00:02:33,360
ensures that the witness remains w

56
00:02:33,360 --> 00:02:34,560
yet the

57
00:02:34,560 --> 00:02:37,120
very definition of a proof of knowledge

58
00:02:37,120 --> 00:02:39,440
requires the existence of such an

59
00:02:39,440 --> 00:02:43,200
extractor that by interacting with alice

60
00:02:43,200 --> 00:02:46,959
can recover the secret witness w

61
00:02:46,959 --> 00:02:49,519
another obvious example is of course

62
00:02:49,519 --> 00:02:51,519
extractable commitments

63
00:02:51,519 --> 00:02:54,160
perhaps a bit less obvious is

64
00:02:54,160 --> 00:02:57,120
the use of extractors in proving cca

65
00:02:57,120 --> 00:02:58,800
security

66
00:02:58,800 --> 00:03:00,720
they come into play in

67
00:03:00,720 --> 00:03:02,800
simulating the decryption oracle which

68
00:03:02,800 --> 00:03:03,599
the

69
00:03:03,599 --> 00:03:06,480
reduction needs to do in such a proof

70
00:03:06,480 --> 00:03:07,599
namely

71
00:03:07,599 --> 00:03:10,560
for every query that the adversary makes

72
00:03:10,560 --> 00:03:12,959
to the decryption oracle this cipher

73
00:03:12,959 --> 00:03:14,800
text

74
00:03:14,800 --> 00:03:16,080
has to be

75
00:03:16,080 --> 00:03:17,760
sorry the corresponding plain text to

76
00:03:17,760 --> 00:03:20,319
that ciphertext has to be extracted

77
00:03:20,319 --> 00:03:23,200
somehow without using the secret key

78
00:03:23,200 --> 00:03:26,799
so we need an extractor for that as well

79
00:03:26,799 --> 00:03:28,560
then there are different

80
00:03:28,560 --> 00:03:30,560
kinds of extraction

81
00:03:30,560 --> 00:03:32,720
two important properties

82
00:03:32,720 --> 00:03:35,440
for extractability are a so-called

83
00:03:35,440 --> 00:03:37,760
straight line extractor

84
00:03:37,760 --> 00:03:39,840
which means that the extractor only

85
00:03:39,840 --> 00:03:40,959
needs to

86
00:03:40,959 --> 00:03:43,680
run the adversary once instead of

87
00:03:43,680 --> 00:03:46,400
rewinding it going back and forth

88
00:03:46,400 --> 00:03:48,640
executing it multiple times

89
00:03:48,640 --> 00:03:50,560
and indeed the straight line extraction

90
00:03:50,560 --> 00:03:52,560
is the preferable option

91
00:03:52,560 --> 00:03:54,480
because usually it leads to a better

92
00:03:54,480 --> 00:03:55,760
loss factor

93
00:03:55,760 --> 00:03:58,400
since well we we don't need to rely on

94
00:03:58,400 --> 00:04:01,519
the adversary succeeding multiple times

95
00:04:01,519 --> 00:04:02,720
and

96
00:04:02,720 --> 00:04:04,319
also better run time i guess that's

97
00:04:04,319 --> 00:04:06,560
that's self-evident

98
00:04:06,560 --> 00:04:10,480
another important property is on the fly

99
00:04:10,480 --> 00:04:12,640
so whether the extraction happens during

100
00:04:12,640 --> 00:04:15,920
an execution or only after the adversary

101
00:04:15,920 --> 00:04:19,519
has produced its final output

102
00:04:19,519 --> 00:04:20,720
in particular

103
00:04:20,720 --> 00:04:22,560
if we want an on the fly

104
00:04:22,560 --> 00:04:25,120
extractor it's important that the

105
00:04:25,120 --> 00:04:27,120
extraction that we do does not disturb

106
00:04:27,120 --> 00:04:29,440
the view of the adversary since

107
00:04:29,440 --> 00:04:31,759
we wanted to be able to still continue

108
00:04:31,759 --> 00:04:35,759
and produce the same output as before

109
00:04:35,759 --> 00:04:37,600
and this is indeed the

110
00:04:37,600 --> 00:04:39,360
kind of extraction that we need in this

111
00:04:39,360 --> 00:04:43,520
example of proving cca security

112
00:04:43,520 --> 00:04:45,360
then if a protocol allows for an

113
00:04:45,360 --> 00:04:47,040
extractor that satisfies both these

114
00:04:47,040 --> 00:04:51,919
properties we call it online extractable

115
00:04:52,240 --> 00:04:54,639
okay so a bit more about this enhanced

116
00:04:54,639 --> 00:04:56,320
access

117
00:04:56,320 --> 00:04:58,800
again a few different flavors

118
00:04:58,800 --> 00:05:01,520
i've already mentioned rewinding

119
00:05:01,520 --> 00:05:03,600
that's something you often find in

120
00:05:03,600 --> 00:05:06,400
proofs of knowledge or improving the

121
00:05:06,400 --> 00:05:09,120
zero knowledge property

122
00:05:09,120 --> 00:05:10,400
another one

123
00:05:10,400 --> 00:05:12,400
example of enhanced access that we can

124
00:05:12,400 --> 00:05:14,880
give to the extractor is giving it some

125
00:05:14,880 --> 00:05:16,960
trapdoor information

126
00:05:16,960 --> 00:05:19,120
this one you find often in

127
00:05:19,120 --> 00:05:22,160
for example extractable commitments

128
00:05:22,160 --> 00:05:25,039
and then there's the random oracle model

129
00:05:25,039 --> 00:05:27,680
for particles that have some application

130
00:05:27,680 --> 00:05:28,479
of

131
00:05:28,479 --> 00:05:30,240
a hash function

132
00:05:30,240 --> 00:05:32,160
that we can then model as

133
00:05:32,160 --> 00:05:35,280
an idealized random oracle

134
00:05:35,280 --> 00:05:37,440
which the adversary has to query

135
00:05:37,440 --> 00:05:40,560
and therefore we can give the extractor

136
00:05:40,560 --> 00:05:43,520
read access to the queries that the

137
00:05:43,520 --> 00:05:45,280
algorithm makes and

138
00:05:45,280 --> 00:05:47,440
it's also allowed to reprogram the

139
00:05:47,440 --> 00:05:50,240
random oracle

140
00:05:51,199 --> 00:05:53,440
this uh this

141
00:05:53,440 --> 00:05:56,319
method for extraction we can use in uh

142
00:05:56,319 --> 00:05:58,479
for example hash based commitments

143
00:05:58,479 --> 00:06:01,120
commit an open protocol so also talk

144
00:06:01,120 --> 00:06:03,039
about a bit more later on

145
00:06:03,039 --> 00:06:06,720
and again this cca security example

146
00:06:06,720 --> 00:06:09,199
and indeed this is the the the kind of

147
00:06:09,199 --> 00:06:10,560
extraction that we that we are

148
00:06:10,560 --> 00:06:12,560
interested in in this work because of

149
00:06:12,560 --> 00:06:14,560
course we want to ask the question can

150
00:06:14,560 --> 00:06:16,639
we do the same in the quantum random

151
00:06:16,639 --> 00:06:19,280
oracle model

152
00:06:19,440 --> 00:06:21,440
uh to answer the question let's first

153
00:06:21,440 --> 00:06:24,319
look at a simple example of extraction

154
00:06:24,319 --> 00:06:27,759
in the classical random oracle model

155
00:06:27,759 --> 00:06:29,199
a hash-based

156
00:06:29,199 --> 00:06:30,960
commitment

157
00:06:30,960 --> 00:06:33,919
that means that some algorithm can

158
00:06:33,919 --> 00:06:36,240
commit to a secret s

159
00:06:36,240 --> 00:06:38,800
by evaluating the random oracle on an

160
00:06:38,800 --> 00:06:40,160
input x

161
00:06:40,160 --> 00:06:42,400
where x consists of this secret

162
00:06:42,400 --> 00:06:46,240
concatenated with some random string

163
00:06:46,240 --> 00:06:49,440
and then with this read access that we

164
00:06:49,440 --> 00:06:52,240
allow the extractor to the algorithms

165
00:06:52,240 --> 00:06:54,479
queries

166
00:06:54,479 --> 00:06:57,280
we can do the following method for

167
00:06:57,280 --> 00:06:59,120
extraction

168
00:06:59,120 --> 00:07:00,720
very simple

169
00:07:00,720 --> 00:07:03,520
the algorithm just writes down every

170
00:07:03,520 --> 00:07:06,560
query in a so-called query transcript

171
00:07:06,560 --> 00:07:09,440
and then after this commitment c has

172
00:07:09,440 --> 00:07:12,479
been output by the algorithm

173
00:07:12,479 --> 00:07:16,560
the extractor can just look through this

174
00:07:16,560 --> 00:07:18,880
query transcript

175
00:07:18,880 --> 00:07:19,759
and then

176
00:07:19,759 --> 00:07:22,880
at least intuitively if

177
00:07:22,880 --> 00:07:24,639
the adversary is able to open the

178
00:07:24,639 --> 00:07:27,039
commitment then there must be some x

179
00:07:27,039 --> 00:07:29,680
prime in the transcript that evaluates

180
00:07:29,680 --> 00:07:32,639
to c because otherwise he wouldn't know

181
00:07:32,639 --> 00:07:34,400
the right pre-image

182
00:07:34,400 --> 00:07:36,080
and if he can furthermore open it to

183
00:07:36,080 --> 00:07:38,720
reveal the secret s then also this x

184
00:07:38,720 --> 00:07:40,880
prime must be equal to

185
00:07:40,880 --> 00:07:42,319
to the x

186
00:07:42,319 --> 00:07:45,440
that he will output later in in opening

187
00:07:45,440 --> 00:07:47,280
to the secret

188
00:07:47,280 --> 00:07:50,560
so that's all pretty uh straightforward

189
00:07:50,560 --> 00:07:51,840
but then

190
00:07:51,840 --> 00:07:54,879
we go to the quantum setting and then

191
00:07:54,879 --> 00:07:57,120
things kind of break down

192
00:07:57,120 --> 00:07:59,840
because in the quantum random oracle

193
00:07:59,840 --> 00:08:00,800
model

194
00:08:00,800 --> 00:08:01,840
the

195
00:08:01,840 --> 00:08:03,120
algorithm is allowed to make

196
00:08:03,120 --> 00:08:06,479
superposition queries to the oracle

197
00:08:06,479 --> 00:08:08,960
and in particular

198
00:08:08,960 --> 00:08:10,319
because of something called the no

199
00:08:10,319 --> 00:08:12,400
cloning theorem

200
00:08:12,400 --> 00:08:13,680
which says that

201
00:08:13,680 --> 00:08:15,680
an unknown quantum state cannot be

202
00:08:15,680 --> 00:08:16,800
copied

203
00:08:16,800 --> 00:08:19,360
it's no longer possible to

204
00:08:19,360 --> 00:08:20,720
just write down

205
00:08:20,720 --> 00:08:23,440
every query that the algorithm makes so

206
00:08:23,440 --> 00:08:26,000
there no longer exists such a thing as a

207
00:08:26,000 --> 00:08:28,080
query transcript

208
00:08:28,080 --> 00:08:30,879
however in 2019

209
00:08:30,879 --> 00:08:33,279
mark zandry introduced a compressed

210
00:08:33,279 --> 00:08:35,120
oracle technique

211
00:08:35,120 --> 00:08:37,760
which in a sense is meant to to overcome

212
00:08:37,760 --> 00:08:40,240
this very problem

213
00:08:40,240 --> 00:08:42,640
what it does it it gives

214
00:08:42,640 --> 00:08:45,600
a method to simulate the random oracle

215
00:08:45,600 --> 00:08:48,640
in such a way that we get access to

216
00:08:48,640 --> 00:08:50,720
an internal quantum state of the

217
00:08:50,720 --> 00:08:52,080
simulator

218
00:08:52,080 --> 00:08:55,040
that does contain some information on

219
00:08:55,040 --> 00:08:56,959
the interaction that has taken place

220
00:08:56,959 --> 00:09:01,120
between the algorithm and the simulator

221
00:09:01,120 --> 00:09:04,240
it's not the case that this

222
00:09:04,240 --> 00:09:07,120
quantum state now functions as a quantum

223
00:09:07,120 --> 00:09:08,880
version of a query transcript where we

224
00:09:08,880 --> 00:09:11,279
can just look up all the queries that

225
00:09:11,279 --> 00:09:13,120
the algorithm made because

226
00:09:13,120 --> 00:09:14,399
yeah that's what i already explained

227
00:09:14,399 --> 00:09:16,640
that's not possible

228
00:09:16,640 --> 00:09:18,959
i like to think of it more as

229
00:09:18,959 --> 00:09:21,600
the queries of the algorithm leaving

230
00:09:21,600 --> 00:09:24,320
some kind of footprint in this quantum

231
00:09:24,320 --> 00:09:26,720
state that we can then

232
00:09:26,720 --> 00:09:29,600
investigate to deduce at least some

233
00:09:29,600 --> 00:09:31,600
information on

234
00:09:31,600 --> 00:09:33,440
what's the airco sorry what the

235
00:09:33,440 --> 00:09:34,560
algorithm

236
00:09:34,560 --> 00:09:37,200
has and has not learned about the values

237
00:09:37,200 --> 00:09:39,440
of the oracle

238
00:09:39,440 --> 00:09:42,160
but in order to do so we have to

239
00:09:42,160 --> 00:09:44,240
measure this quantum state

240
00:09:44,240 --> 00:09:46,160
and as you may know

241
00:09:46,160 --> 00:09:48,959
in general measuring a quantum state can

242
00:09:48,959 --> 00:09:51,040
disturb the state

243
00:09:51,040 --> 00:09:53,200
which is something we want to avoid for

244
00:09:53,200 --> 00:09:56,000
our online extractability purposes

245
00:09:56,000 --> 00:09:58,240
because again we want to

246
00:09:58,240 --> 00:10:00,240
be able to continue the run of the

247
00:10:00,240 --> 00:10:03,360
adversary after doing the extraction

248
00:10:03,360 --> 00:10:04,720
and in particular

249
00:10:04,720 --> 00:10:06,480
due to this interaction that has

250
00:10:06,480 --> 00:10:08,560
happened between the algorithm and the

251
00:10:08,560 --> 00:10:09,760
simulator

252
00:10:09,760 --> 00:10:11,200
their internal states have become

253
00:10:11,200 --> 00:10:14,079
entangled which means that disturbing

254
00:10:14,079 --> 00:10:15,040
the

255
00:10:15,040 --> 00:10:17,920
oracle state may in turn also disturb

256
00:10:17,920 --> 00:10:18,640
the

257
00:10:18,640 --> 00:10:21,200
view of the adversary

258
00:10:21,200 --> 00:10:23,680
and that's that's also the reason

259
00:10:23,680 --> 00:10:26,560
that this compressed oracle technique

260
00:10:26,560 --> 00:10:28,800
so far in previous literature has mostly

261
00:10:28,800 --> 00:10:31,519
been used in cases where it's okay to do

262
00:10:31,519 --> 00:10:33,600
the measurement only at the very end of

263
00:10:33,600 --> 00:10:35,519
the run

264
00:10:35,519 --> 00:10:37,200
there have been some cases where it was

265
00:10:37,200 --> 00:10:40,240
applied on the fly but then

266
00:10:40,240 --> 00:10:41,760
it was either with some measurement that

267
00:10:41,760 --> 00:10:43,600
had a deterministic outcome which means

268
00:10:43,600 --> 00:10:44,320
that

269
00:10:44,320 --> 00:10:47,120
the measurement does not disturb the

270
00:10:47,120 --> 00:10:48,800
quantum state

271
00:10:48,800 --> 00:10:49,920
or

272
00:10:49,920 --> 00:10:51,920
it was just acceptable to

273
00:10:51,920 --> 00:10:54,800
have some polynomial loss

274
00:10:54,800 --> 00:10:56,959
which again in our case is not

275
00:10:56,959 --> 00:10:59,040
acceptable because we

276
00:10:59,040 --> 00:11:01,279
need to not disturb the view of the

277
00:11:01,279 --> 00:11:04,320
adversary at all

278
00:11:04,320 --> 00:11:06,720
so that has been indeed the

279
00:11:06,720 --> 00:11:09,200
technical core of our result

280
00:11:09,200 --> 00:11:12,640
to try to bound the disturbance of some

281
00:11:12,640 --> 00:11:16,160
suitable extraction measurement

282
00:11:16,160 --> 00:11:18,480
and we do so by bounding the norm of a

283
00:11:18,480 --> 00:11:20,720
certain commutator namely of that

284
00:11:20,720 --> 00:11:21,920
measurement

285
00:11:21,920 --> 00:11:24,480
and a unitary o

286
00:11:24,480 --> 00:11:26,480
which describes the evolution of the

287
00:11:26,480 --> 00:11:29,680
compressed oracle for a single

288
00:11:29,680 --> 00:11:33,279
query for a single call to the oracle

289
00:11:33,279 --> 00:11:35,920
and we have a bound that is negligible

290
00:11:35,920 --> 00:11:38,800
in the output size of the oracle

291
00:11:38,800 --> 00:11:40,320
which means that

292
00:11:40,320 --> 00:11:42,800
at least in the analysis

293
00:11:42,800 --> 00:11:44,800
we are free to move this measurement

294
00:11:44,800 --> 00:11:46,240
around so

295
00:11:46,240 --> 00:11:47,680
the extracture actually does the

296
00:11:47,680 --> 00:11:49,920
measurement at runtime but then in

297
00:11:49,920 --> 00:11:52,320
analyzing the behavior of the adversary

298
00:11:52,320 --> 00:11:55,519
we are free to just commute it with all

299
00:11:55,519 --> 00:11:57,519
the oracle queries and since the

300
00:11:57,519 --> 00:11:59,519
measurement is only on

301
00:11:59,519 --> 00:12:01,200
the side of the

302
00:12:01,200 --> 00:12:03,120
of the oracle it also commutes with the

303
00:12:03,120 --> 00:12:04,800
local computation that the adversary

304
00:12:04,800 --> 00:12:05,760
does

305
00:12:05,760 --> 00:12:08,880
so we can just push it towards the end

306
00:12:08,880 --> 00:12:10,720
and then of course introducing a

307
00:12:10,720 --> 00:12:12,639
measurement at the end does not affect

308
00:12:12,639 --> 00:12:14,240
the view of the adversary because he's

309
00:12:14,240 --> 00:12:16,800
done gone home

310
00:12:16,800 --> 00:12:18,720
and

311
00:12:18,720 --> 00:12:20,480
we can conclude that the adversary does

312
00:12:20,480 --> 00:12:22,839
not notice our

313
00:12:22,839 --> 00:12:25,920
measurement that then in turn

314
00:12:25,920 --> 00:12:27,279
allows us to

315
00:12:27,279 --> 00:12:29,519
present our main result

316
00:12:29,519 --> 00:12:31,600
we apply this technical lemma to show

317
00:12:31,600 --> 00:12:33,360
the existence of

318
00:12:33,360 --> 00:12:35,839
a simulator that simulates the random

319
00:12:35,839 --> 00:12:38,399
oracle so it has a

320
00:12:38,399 --> 00:12:40,959
both a random oracle interface and

321
00:12:40,959 --> 00:12:42,560
additionally

322
00:12:42,560 --> 00:12:44,959
some extraction interface

323
00:12:44,959 --> 00:12:47,360
such that for every bounded query

324
00:12:47,360 --> 00:12:51,360
algorithm a we have the following

325
00:12:51,360 --> 00:12:51,839
a picture

326
00:12:51,839 --> 00:12:54,160
allowed to query this random oracle

327
00:12:54,160 --> 00:12:55,680
interface

328
00:12:55,680 --> 00:12:57,600
then at some point

329
00:12:57,600 --> 00:13:01,440
put a commitment c on the table

330
00:13:01,680 --> 00:13:04,480
continue to run do more queries

331
00:13:04,480 --> 00:13:08,079
but as soon as the c has been output the

332
00:13:08,079 --> 00:13:09,680
reduction can then

333
00:13:09,680 --> 00:13:12,079
enter it query it to this extraction

334
00:13:12,079 --> 00:13:13,360
interface

335
00:13:13,360 --> 00:13:15,519
and the simulator will do some internal

336
00:13:15,519 --> 00:13:17,360
quantum measurement

337
00:13:17,360 --> 00:13:21,440
produce i guess x prime for

338
00:13:21,440 --> 00:13:23,839
guessing what's inside the commitment

339
00:13:23,839 --> 00:13:25,440
and then our theorem gives the following

340
00:13:25,440 --> 00:13:26,800
promise

341
00:13:26,800 --> 00:13:28,959
if at some later point

342
00:13:28,959 --> 00:13:30,399
the adversary

343
00:13:30,399 --> 00:13:33,519
outputs x which is promised to be the

344
00:13:33,519 --> 00:13:36,000
opening for the commitment c

345
00:13:36,000 --> 00:13:38,320
then with high probability

346
00:13:38,320 --> 00:13:39,519
either

347
00:13:39,519 --> 00:13:42,399
this x is equal to our guess x prime or

348
00:13:42,399 --> 00:13:46,639
else x is not an opening to c at all

349
00:13:46,639 --> 00:13:48,639
so indeed we see that we

350
00:13:48,639 --> 00:13:51,279
managed to preserve the intuition uh

351
00:13:51,279 --> 00:13:52,800
that we had in the in the classical

352
00:13:52,800 --> 00:13:55,120
random oracle

353
00:13:55,120 --> 00:13:58,079
uh now this this is in fact just a a

354
00:13:58,079 --> 00:14:00,839
simple example for the purpose of

355
00:14:00,839 --> 00:14:04,399
the current talk uh all we thought is

356
00:14:04,399 --> 00:14:06,560
slightly more general

357
00:14:06,560 --> 00:14:07,600
namely

358
00:14:07,600 --> 00:14:10,079
we proved that this extraction method

359
00:14:10,079 --> 00:14:11,760
works for

360
00:14:11,760 --> 00:14:14,399
any function any arbitrary fixed

361
00:14:14,399 --> 00:14:16,800
function f where

362
00:14:16,800 --> 00:14:19,440
if the adversary outputs some value t

363
00:14:19,440 --> 00:14:21,519
with the promise that it's

364
00:14:21,519 --> 00:14:24,399
the result of applying f to

365
00:14:24,399 --> 00:14:26,560
x and h of x

366
00:14:26,560 --> 00:14:28,000
and additionally

367
00:14:28,000 --> 00:14:30,959
this function has the property that for

368
00:14:30,959 --> 00:14:34,000
every x and t there are not too many y's

369
00:14:34,000 --> 00:14:37,120
uh such that uh f maps x and y to this

370
00:14:37,120 --> 00:14:39,600
particular t

371
00:14:39,600 --> 00:14:40,480
then

372
00:14:40,480 --> 00:14:42,480
uh yeah again intuitively

373
00:14:42,480 --> 00:14:45,440
uh this f has a similar kind of binding

374
00:14:45,440 --> 00:14:48,079
property as this original

375
00:14:48,079 --> 00:14:49,600
commitment

376
00:14:49,600 --> 00:14:51,120
example

377
00:14:51,120 --> 00:14:54,079
and so our extraction method

378
00:14:54,079 --> 00:14:57,519
works works here as well

379
00:14:57,600 --> 00:14:59,760
that's the main theorem of our work

380
00:14:59,760 --> 00:15:01,920
we go on to

381
00:15:01,920 --> 00:15:03,760
apply it

382
00:15:03,760 --> 00:15:04,959
in two

383
00:15:04,959 --> 00:15:07,519
additional use cases the first one being

384
00:15:07,519 --> 00:15:11,440
these commit and open protocols

385
00:15:11,440 --> 00:15:12,399
it's a

386
00:15:12,399 --> 00:15:14,639
particular kind of subclass of sigma

387
00:15:14,639 --> 00:15:15,920
protocols

388
00:15:15,920 --> 00:15:18,000
where the first message consists of a

389
00:15:18,000 --> 00:15:20,480
number of hash-based commitments

390
00:15:20,480 --> 00:15:21,920
and then the random challenge by the

391
00:15:21,920 --> 00:15:24,320
verifier just asked to open a random

392
00:15:24,320 --> 00:15:26,880
subset of those

393
00:15:26,880 --> 00:15:29,199
for this class of sigma particles we can

394
00:15:29,199 --> 00:15:33,440
now show tight online extractability

395
00:15:33,440 --> 00:15:36,880
and in particular we don't need

396
00:15:36,880 --> 00:15:39,839
special properties like collapsingness

397
00:15:39,839 --> 00:15:42,320
or unique responses that previous

398
00:15:42,320 --> 00:15:45,759
techniques required to do the extraction

399
00:15:45,759 --> 00:15:47,759
and also these previous techniques

400
00:15:47,759 --> 00:15:49,920
incurred the loss

401
00:15:49,920 --> 00:15:52,240
yeah i should say say at least the cubic

402
00:15:52,240 --> 00:15:54,639
loss because in fact it's

403
00:15:54,639 --> 00:15:55,680
the

404
00:15:55,680 --> 00:15:58,480
success probability of the adversary

405
00:15:58,480 --> 00:16:01,680
with an exponent 2k plus 1 for k special

406
00:16:01,680 --> 00:16:02,639
sound

407
00:16:02,639 --> 00:16:05,519
protocols so cubic for two special sound

408
00:16:05,519 --> 00:16:07,839
protocols

409
00:16:07,839 --> 00:16:09,519
and our

410
00:16:09,519 --> 00:16:11,199
reduction as i said is tight so we have

411
00:16:11,199 --> 00:16:13,600
no loss at all

412
00:16:13,600 --> 00:16:14,800
these

413
00:16:14,800 --> 00:16:17,360
c and o particles they are used in the

414
00:16:17,360 --> 00:16:20,720
popular mpc in the head paradigm

415
00:16:20,720 --> 00:16:23,040
one example of which is the

416
00:16:23,040 --> 00:16:25,040
candidate picnic in the

417
00:16:25,040 --> 00:16:28,320
ever ongoing uh nist competition

418
00:16:28,320 --> 00:16:29,519
um

419
00:16:29,519 --> 00:16:32,240
so there's a caveat that our current

420
00:16:32,240 --> 00:16:35,120
result actually applies to the just the

421
00:16:35,120 --> 00:16:36,880
interactive protocol that underlies the

422
00:16:36,880 --> 00:16:38,560
signature scheme

423
00:16:38,560 --> 00:16:41,839
picnic uses the fiat xiaomi transformed

424
00:16:41,839 --> 00:16:44,079
so non-interactive version

425
00:16:44,079 --> 00:16:45,440
for which the current work is not

426
00:16:45,440 --> 00:16:47,040
sufficient

427
00:16:47,040 --> 00:16:49,440
but we do have a follow-up work

428
00:16:49,440 --> 00:16:51,519
appearing at this year's crypto where we

429
00:16:51,519 --> 00:16:53,360
can also for this non-interactive

430
00:16:53,360 --> 00:16:54,720
version

431
00:16:54,720 --> 00:16:59,199
proof tight online extractability

432
00:16:59,279 --> 00:17:01,360
and then the other application that we

433
00:17:01,360 --> 00:17:03,680
give in the paper is to the fujisaki

434
00:17:03,680 --> 00:17:06,799
okamoto transform

435
00:17:06,799 --> 00:17:08,559
we have the first

436
00:17:08,559 --> 00:17:09,919
complete

437
00:17:09,919 --> 00:17:11,679
post quantum security proof of the

438
00:17:11,679 --> 00:17:14,959
so-called textbook fo transform there

439
00:17:14,959 --> 00:17:17,119
have been many many papers on

440
00:17:17,119 --> 00:17:18,799
post-quantum

441
00:17:18,799 --> 00:17:21,839
fujisaki okamoto

442
00:17:21,839 --> 00:17:24,640
but they all up to now

443
00:17:24,640 --> 00:17:25,679
had to

444
00:17:25,679 --> 00:17:27,119
introduce some

445
00:17:27,119 --> 00:17:29,520
alteration some addition to the original

446
00:17:29,520 --> 00:17:32,400
transform in order for the for the proof

447
00:17:32,400 --> 00:17:34,799
to go through uh such as

448
00:17:34,799 --> 00:17:38,160
uh the session key being derived as uh h

449
00:17:38,160 --> 00:17:40,720
of m and c instead of just m

450
00:17:40,720 --> 00:17:42,640
uh there was this additional key

451
00:17:42,640 --> 00:17:45,120
confirmation hash which also increased

452
00:17:45,120 --> 00:17:48,160
the size of the ciphertext

453
00:17:48,160 --> 00:17:50,559
and furthermore our reduction works uh

454
00:17:50,559 --> 00:17:52,640
with explicit rejection as well as

455
00:17:52,640 --> 00:17:55,600
implicit rejection

456
00:17:55,600 --> 00:17:58,960
and yeah again this fo transform also

457
00:17:58,960 --> 00:18:00,799
features prominently in the miss

458
00:18:00,799 --> 00:18:04,640
competition on the campsite

459
00:18:04,640 --> 00:18:06,880
so uh summarizing

460
00:18:06,880 --> 00:18:09,039
we are now able to lift a powerful

461
00:18:09,039 --> 00:18:10,960
extraction method from the classical

462
00:18:10,960 --> 00:18:12,799
random oracle model to the quantum

463
00:18:12,799 --> 00:18:14,720
random oracle model

464
00:18:14,720 --> 00:18:18,240
which works straight line and on the fly

465
00:18:18,240 --> 00:18:20,880
we use it to give a tight reduction of

466
00:18:20,880 --> 00:18:23,520
commit and open particles in the qram

467
00:18:23,520 --> 00:18:24,640
and

468
00:18:24,640 --> 00:18:28,480
a post-quantum analysis of textbook fo

469
00:18:28,480 --> 00:18:30,080
and i guess the main message of this

470
00:18:30,080 --> 00:18:31,600
talk should be

471
00:18:31,600 --> 00:18:34,000
the next time you run into an adversary

472
00:18:34,000 --> 00:18:36,320
that outputs some t with the promise

473
00:18:36,320 --> 00:18:37,440
that

474
00:18:37,440 --> 00:18:39,760
you can output x such that

475
00:18:39,760 --> 00:18:42,400
f of x and h of x equals t

476
00:18:42,400 --> 00:18:44,480
give us a call and we can

477
00:18:44,480 --> 00:18:46,160
extract it online

478
00:18:46,160 --> 00:18:47,840
thank

479
00:18:47,840 --> 00:18:55,679
[Applause]

480
00:18:55,679 --> 00:18:57,919
all you uh thanks for the talk uh we

481
00:18:57,919 --> 00:19:00,160
have time for a few questions uh as a

482
00:19:00,160 --> 00:19:02,000
reminder if you have a question uh

483
00:19:02,000 --> 00:19:05,039
please come to the microphone so uh um

484
00:19:05,039 --> 00:19:09,559
people attending on zoom can hear you

485
00:19:15,520 --> 00:19:18,960
right like there is no general quantum

486
00:19:18,960 --> 00:19:21,120
all applications it's only for some

487
00:19:21,120 --> 00:19:24,879
specific applications like commitment

488
00:19:25,280 --> 00:19:26,240
so

489
00:19:26,240 --> 00:19:28,640
maybe two questions like

490
00:19:28,640 --> 00:19:30,559
do you think that there is any hope of

491
00:19:30,559 --> 00:19:33,280
like some construction that emulates

492
00:19:33,280 --> 00:19:35,840
an oracle that would be useful

493
00:19:35,840 --> 00:19:37,440
you know that could be used

494
00:19:37,440 --> 00:19:39,200
for for whatever application like

495
00:19:39,200 --> 00:19:40,960
through like let's say five-star

496
00:19:40,960 --> 00:19:43,840
transform or something of this sort

497
00:19:43,840 --> 00:19:45,600
and that's one question and this is the

498
00:19:45,600 --> 00:19:47,679
other like a common usage of random

499
00:19:47,679 --> 00:19:50,080
oracles for fiat shamier non-interactive

500
00:19:50,080 --> 00:19:52,960
knowledge proofs so did you look at that

501
00:19:52,960 --> 00:19:55,120
application or do you know if other

502
00:19:55,120 --> 00:19:56,960
people did or what do you think the

503
00:19:56,960 --> 00:19:58,799
hopefulness of

504
00:19:58,799 --> 00:20:01,840
of that being quantum secure

505
00:20:01,840 --> 00:20:03,360
yeah

506
00:20:03,360 --> 00:20:05,360
yeah so the first question

507
00:20:05,360 --> 00:20:07,760
the current technique it works

508
00:20:07,760 --> 00:20:10,400
in any situation where

509
00:20:10,400 --> 00:20:12,640
there is some form of commitment even

510
00:20:12,640 --> 00:20:14,640
this generalized form that i showed with

511
00:20:14,640 --> 00:20:17,039
the function f

512
00:20:17,039 --> 00:20:18,960
so i think in that sense we

513
00:20:18,960 --> 00:20:19,760
do

514
00:20:19,760 --> 00:20:22,400
achieve more or less the same as can be

515
00:20:22,400 --> 00:20:23,440
done in

516
00:20:23,440 --> 00:20:26,240
the classical random oracle whenever the

517
00:20:26,240 --> 00:20:28,480
the the classical rom proof requires us

518
00:20:28,480 --> 00:20:29,440
to

519
00:20:29,440 --> 00:20:31,760
look at a transcript to

520
00:20:31,760 --> 00:20:35,120
to extract some free image

521
00:20:35,120 --> 00:20:39,199
of course that doesn't cover like all

522
00:20:39,679 --> 00:20:43,120
classical random oracle model proofs

523
00:20:43,120 --> 00:20:45,360
but at least those where there is such a

524
00:20:45,360 --> 00:20:47,840
hash-based commitment present

525
00:20:47,840 --> 00:20:50,240
and the second question for fiat samir

526
00:20:50,240 --> 00:20:50,960
uh

527
00:20:50,960 --> 00:20:52,799
yes there are uh

528
00:20:52,799 --> 00:20:54,320
there are uh

529
00:20:54,320 --> 00:20:55,840
previous works that

530
00:20:55,840 --> 00:20:59,120
prove security uh of fiat samir in the

531
00:20:59,120 --> 00:21:00,880
qram

532
00:21:00,880 --> 00:21:02,559
albeit at

533
00:21:02,559 --> 00:21:04,880
a loss quadratic in the number of

534
00:21:04,880 --> 00:21:07,039
queries that the adversary makes

535
00:21:07,039 --> 00:21:09,120
uh and furthermore

536
00:21:09,120 --> 00:21:12,000
in this follow-up work that we have uh

537
00:21:12,000 --> 00:21:13,840
that's also about uh

538
00:21:13,840 --> 00:21:16,159
non-interactive fiat xiaomi transformed

539
00:21:16,159 --> 00:21:18,559
version of the c l protocols

540
00:21:18,559 --> 00:21:20,960
and there we can actually prove a tight

541
00:21:20,960 --> 00:21:23,520
security reduction so without the square

542
00:21:23,520 --> 00:21:26,879
loss in the number of queries

543
00:21:27,600 --> 00:21:28,480
all right

544
00:21:28,480 --> 00:21:31,840
any other questions

545
00:21:32,410 --> 00:21:33,840
[Music]

546
00:21:33,840 --> 00:21:34,799
okay

547
00:21:34,799 --> 00:21:37,600
uh question uh with this technique can

548
00:21:37,600 --> 00:21:41,760
you also program the random oracle

549
00:21:42,840 --> 00:21:44,720
um

550
00:21:44,720 --> 00:21:47,360
with this technique uh

551
00:21:47,360 --> 00:21:50,400
no no it does it doesn't really no no so

552
00:21:50,400 --> 00:21:52,240
you don't need for the result but my

553
00:21:52,240 --> 00:21:53,919
question was more can you apply the

554
00:21:53,919 --> 00:21:55,120
result

555
00:21:55,120 --> 00:21:57,200
if uh i don't know in another scenario

556
00:21:57,200 --> 00:22:00,000
where you need to program the oracle

557
00:22:00,000 --> 00:22:01,760
you mean whether it's sort of compatible

558
00:22:01,760 --> 00:22:03,360
with the situation where you where you

559
00:22:03,360 --> 00:22:04,960
have to reprogram

560
00:22:04,960 --> 00:22:06,320
uh well yeah

561
00:22:06,320 --> 00:22:07,520
we show that

562
00:22:07,520 --> 00:22:10,720
our extraction measurement

563
00:22:10,880 --> 00:22:13,039
it does disturb the state of the oracle

564
00:22:13,039 --> 00:22:15,679
but not the view of the adversary

565
00:22:15,679 --> 00:22:20,559
uh so in that sense i think that uh

566
00:22:20,559 --> 00:22:23,280
that it wouldn't sort of interfere with

567
00:22:23,280 --> 00:22:25,760
with some other uh

568
00:22:25,760 --> 00:22:26,960
techniques

569
00:22:26,960 --> 00:22:30,880
so my guess is yes okay thank you

570
00:22:32,000 --> 00:22:33,760
all right i guess i had uh one question

571
00:22:33,760 --> 00:22:36,240
on my own so you had this general

572
00:22:36,240 --> 00:22:38,880
condition for this function f

573
00:22:38,880 --> 00:22:40,640
which uh i guess

574
00:22:40,640 --> 00:22:42,400
introduces some constraints which allows

575
00:22:42,400 --> 00:22:44,400
for online extraction

576
00:22:44,400 --> 00:22:46,559
i was curious whether f has to be

577
00:22:46,559 --> 00:22:48,159
completely independent of the random

578
00:22:48,159 --> 00:22:49,840
oracle or can f

579
00:22:49,840 --> 00:22:52,480
in some ways depend on the random oracle

580
00:22:52,480 --> 00:22:54,480
so i'm thinking for example of a case

581
00:22:54,480 --> 00:22:55,280
where

582
00:22:55,280 --> 00:22:57,919
um maybe we have h of h of x and we want

583
00:22:57,919 --> 00:22:59,679
to extract the uh

584
00:22:59,679 --> 00:23:02,240
um the original pre-image

585
00:23:02,240 --> 00:23:03,120
right

586
00:23:03,120 --> 00:23:05,120
uh yeah

587
00:23:05,120 --> 00:23:07,440
at least in our theorem it has to be an

588
00:23:07,440 --> 00:23:10,000
arbitrary fixed function so

589
00:23:10,000 --> 00:23:13,120
not depend on age

590
00:23:15,039 --> 00:23:18,159
yeah i guess intuitively intuitively

591
00:23:18,159 --> 00:23:20,640
as long as there is this sort of

592
00:23:20,640 --> 00:23:23,039
binding quality that that's what what

593
00:23:23,039 --> 00:23:24,640
matters that

594
00:23:24,640 --> 00:23:26,640
that if you see some t

595
00:23:26,640 --> 00:23:29,120
then it's very hard to

596
00:23:29,120 --> 00:23:30,880
do so if you see some t that has been

597
00:23:30,880 --> 00:23:34,000
produced by evaluating x

598
00:23:34,000 --> 00:23:36,960
by evaluating f on x and h of x then it

599
00:23:36,960 --> 00:23:39,280
should be really hard to find a

600
00:23:39,280 --> 00:23:42,000
different x prime that also

601
00:23:42,000 --> 00:23:43,919
together with h of x prime maps to the

602
00:23:43,919 --> 00:23:45,120
same t

603
00:23:45,120 --> 00:23:46,880
uh that's that's sort of the the

604
00:23:46,880 --> 00:23:48,559
important quality so as long as that is

605
00:23:48,559 --> 00:23:49,919
guaranteed

606
00:23:49,919 --> 00:23:51,120
the result

607
00:23:51,120 --> 00:23:52,640
should still go through

608
00:23:52,640 --> 00:23:55,279
okay thanks

609
00:23:55,760 --> 00:23:59,279
all right uh um looks like uh um there's

610
00:23:59,279 --> 00:24:01,440
no more questions so let's uh thank the

611
00:24:01,440 --> 00:24:05,400
speaker and uh

