1
00:00:04,720 --> 00:00:07,839
so the next talk

2
00:00:08,320 --> 00:00:10,480
is round optimal

3
00:00:10,480 --> 00:00:12,000
multi-party computation with

4
00:00:12,000 --> 00:00:14,559
identifiable abort

5
00:00:14,559 --> 00:00:16,800
by michelle champion diva ravi luisa

6
00:00:16,800 --> 00:00:19,680
siniskalki and henrik wardner and

7
00:00:19,680 --> 00:00:22,080
michaela is presenting

8
00:00:22,080 --> 00:00:23,039
okay

9
00:00:23,039 --> 00:00:25,279
thank you very much for the introduction

10
00:00:25,279 --> 00:00:27,519
manuela

11
00:00:27,519 --> 00:00:28,640
yeah so

12
00:00:28,640 --> 00:00:30,560
multiparticular competition

13
00:00:30,560 --> 00:00:32,800
we are at fifth session not gonna say

14
00:00:32,800 --> 00:00:34,079
what that is

15
00:00:34,079 --> 00:00:36,640
uh but there are many models uh in which

16
00:00:36,640 --> 00:00:39,680
you can study multi-party competition

17
00:00:39,680 --> 00:00:41,600
in particular the model we consider in

18
00:00:41,600 --> 00:00:42,800
this work

19
00:00:42,800 --> 00:00:45,120
has dishonest majority

20
00:00:45,120 --> 00:00:48,000
uh we assume no setup

21
00:00:48,000 --> 00:00:50,160
we assume that parties are fully

22
00:00:50,160 --> 00:00:52,320
corrupted and they behave in a rushing

23
00:00:52,320 --> 00:00:54,320
way it means that in each round the

24
00:00:54,320 --> 00:00:56,480
adversarial parties will wait to receive

25
00:00:56,480 --> 00:00:58,719
the messages of the house parties and

26
00:00:58,719 --> 00:01:01,359
then they will speak

27
00:01:01,359 --> 00:01:02,160
then

28
00:01:02,160 --> 00:01:05,760
all our protocols will rely on standard

29
00:01:05,760 --> 00:01:07,600
assumptions in particular

30
00:01:07,600 --> 00:01:10,000
our protocols are based on uh traffic

31
00:01:10,000 --> 00:01:11,600
permutations

32
00:01:11,600 --> 00:01:12,400
and

33
00:01:12,400 --> 00:01:14,080
we only deal with the black box

34
00:01:14,080 --> 00:01:16,400
simulation

35
00:01:16,400 --> 00:01:18,560
so what we know is that in the case of a

36
00:01:18,560 --> 00:01:20,000
dishonest majority there are

37
00:01:20,000 --> 00:01:22,960
functionalities that cannot be realized

38
00:01:22,960 --> 00:01:24,720
that's a

39
00:01:24,720 --> 00:01:27,200
bad news uh so we cannot realize some

40
00:01:27,200 --> 00:01:29,680
functionalities with fairness

41
00:01:29,680 --> 00:01:32,479
um however if we don't care about uh

42
00:01:32,479 --> 00:01:35,759
fairness uh we know that we

43
00:01:35,759 --> 00:01:37,600
we i mean we still need four rounds of

44
00:01:37,600 --> 00:01:39,759
communication to compute some meaningful

45
00:01:39,759 --> 00:01:41,680
functionality and we know that four

46
00:01:41,680 --> 00:01:43,840
rounds are also sufficient and uh some

47
00:01:43,840 --> 00:01:46,000
recent works show that you can do that

48
00:01:46,000 --> 00:01:48,960
from some number three assumptions or uh

49
00:01:48,960 --> 00:01:50,560
from um

50
00:01:50,560 --> 00:01:53,600
a malicious secure uh notion of

51
00:01:53,600 --> 00:01:55,360
obvious transfers

52
00:01:55,360 --> 00:01:56,799
however if you look at all these

53
00:01:56,799 --> 00:01:58,719
protocols you will notice that they are

54
00:01:58,719 --> 00:02:01,119
secure uh under a notion of security

55
00:02:01,119 --> 00:02:03,119
that uh is called security with the

56
00:02:03,119 --> 00:02:05,200
unanimous abort so in the in this

57
00:02:05,200 --> 00:02:07,920
security notion what you have is that

58
00:02:07,920 --> 00:02:10,878
uh honest parties uh might abort or

59
00:02:10,878 --> 00:02:13,680
might get the output of the competition

60
00:02:13,680 --> 00:02:17,120
but how if they do abort um mean like

61
00:02:17,120 --> 00:02:18,879
it's not like one party will abort and

62
00:02:18,879 --> 00:02:20,640
the other no like all donors parties

63
00:02:20,640 --> 00:02:24,160
will agree that that's an abortion

64
00:02:24,160 --> 00:02:25,920
with unanimous with that individual

65
00:02:25,920 --> 00:02:28,000
borth instead what you have is that

66
00:02:28,000 --> 00:02:31,120
in the case that honest parties abort

67
00:02:31,120 --> 00:02:34,080
they will also identify

68
00:02:34,080 --> 00:02:37,840
one of the corrupted party

69
00:02:37,840 --> 00:02:40,160
and the natural question is whether we

70
00:02:40,160 --> 00:02:42,560
can still construct a secure protocol in

71
00:02:42,560 --> 00:02:46,160
this setting um in for round which is as

72
00:02:46,160 --> 00:02:48,640
i mentioned uh the optimal the best you

73
00:02:48,640 --> 00:02:51,680
can do and in this work we answer to

74
00:02:51,680 --> 00:02:54,160
this question to to the positive and the

75
00:02:54,160 --> 00:02:56,800
way we tackle this question is by

76
00:02:56,800 --> 00:02:58,959
providing a compiler that takes an mpc

77
00:02:58,959 --> 00:03:00,720
protocol that is secure with unanimous

78
00:03:00,720 --> 00:03:03,760
support and turns it into a protocol

79
00:03:03,760 --> 00:03:06,560
that is secure with identifiable abort

80
00:03:06,560 --> 00:03:08,800
and like one um

81
00:03:08,800 --> 00:03:10,560
moreover like the communication channel

82
00:03:10,560 --> 00:03:13,360
we we use here is a broadcast channel uh

83
00:03:13,360 --> 00:03:16,080
where like in each round all the parties

84
00:03:16,080 --> 00:03:18,800
speak at the same time okay

85
00:03:18,800 --> 00:03:20,239
and so

86
00:03:20,239 --> 00:03:22,480
focusing on the messages of this uh

87
00:03:22,480 --> 00:03:25,120
purple party on on the left like

88
00:03:25,120 --> 00:03:27,200
uh each message will go in this

89
00:03:27,200 --> 00:03:29,680
broadcast channel so every party

90
00:03:29,680 --> 00:03:31,599
will receive this message so let's say

91
00:03:31,599 --> 00:03:33,599
that those are messages of an npc

92
00:03:33,599 --> 00:03:36,319
protocol with unanimous abort so one way

93
00:03:36,319 --> 00:03:38,959
that you can use to achieve

94
00:03:38,959 --> 00:03:42,000
identifiable abort would be to attach to

95
00:03:42,000 --> 00:03:44,640
each of these messages uh

96
00:03:44,640 --> 00:03:46,720
non-interactive zero knowledge proof

97
00:03:46,720 --> 00:03:48,080
because in this way

98
00:03:48,080 --> 00:03:50,879
every party that uh receive a message

99
00:03:50,879 --> 00:03:52,799
that sees a message on the broadcast

100
00:03:52,799 --> 00:03:54,799
channel even if this message is not

101
00:03:54,799 --> 00:03:58,000
directed to to this party uh the party

102
00:03:58,000 --> 00:03:59,519
can still check that the message is

103
00:03:59,519 --> 00:04:02,000
correct because uh if the the generality

104
00:04:02,000 --> 00:04:04,000
proof uh verifies

105
00:04:04,000 --> 00:04:06,000
here i'm lying a bit because like you

106
00:04:06,000 --> 00:04:08,080
need some special properties on the mpc

107
00:04:08,080 --> 00:04:10,400
protocol to apply this type of compilers

108
00:04:10,400 --> 00:04:12,159
because you need perfect correctness

109
00:04:12,159 --> 00:04:15,040
otherwise of course this doesn't work

110
00:04:15,040 --> 00:04:17,040
um but the big problem is that an

111
00:04:17,040 --> 00:04:19,358
interactive knowledge requires setup as

112
00:04:19,358 --> 00:04:22,160
i mentioned uh we want to use um we

113
00:04:22,160 --> 00:04:23,440
don't want to use random article we

114
00:04:23,440 --> 00:04:25,520
don't we want to rely on uh standard

115
00:04:25,520 --> 00:04:27,759
assumptions

116
00:04:27,759 --> 00:04:28,400
so

117
00:04:28,400 --> 00:04:30,800
uh the trivial idea would be okay uh

118
00:04:30,800 --> 00:04:34,000
let's use then uh um almost around zero

119
00:04:34,000 --> 00:04:35,840
knowledge because we know that we can

120
00:04:35,840 --> 00:04:38,400
actually do zero knowledge for rounds

121
00:04:38,400 --> 00:04:40,639
and so if you now look at the protocol

122
00:04:40,639 --> 00:04:43,919
or at least at the messages that uh

123
00:04:43,919 --> 00:04:46,800
one party sends and receive uh the view

124
00:04:46,800 --> 00:04:48,880
of this party is the following right

125
00:04:48,880 --> 00:04:50,720
there is an outgoing message and an

126
00:04:50,720 --> 00:04:52,479
in-going message

127
00:04:52,479 --> 00:04:54,320
and what you can do now is that for each

128
00:04:54,320 --> 00:04:57,680
outgoing message you you ask this party

129
00:04:57,680 --> 00:05:00,240
to uh provide the knowledge roof which

130
00:05:00,240 --> 00:05:02,479
we know we can do in for runs and if you

131
00:05:02,479 --> 00:05:04,560
remote this technology proof is of

132
00:05:04,560 --> 00:05:05,759
course that

133
00:05:05,759 --> 00:05:07,759
the npc message the outpouring nbc

134
00:05:07,759 --> 00:05:08,880
messages

135
00:05:08,880 --> 00:05:11,360
uh is well formed i am that i've been

136
00:05:11,360 --> 00:05:12,960
following the protocol and you do this

137
00:05:12,960 --> 00:05:15,520
for all the messages

138
00:05:15,520 --> 00:05:18,240
uh this uh um

139
00:05:18,240 --> 00:05:19,280
works

140
00:05:19,280 --> 00:05:21,280
but you need uh

141
00:05:21,280 --> 00:05:23,600
that the general knowledge protocol he's

142
00:05:23,600 --> 00:05:26,240
uh publicly verifiable in the sense that

143
00:05:26,240 --> 00:05:27,759
in this case

144
00:05:27,759 --> 00:05:29,919
like you need to provide the general do

145
00:05:29,919 --> 00:05:32,479
not prove to convince any of the parties

146
00:05:32,479 --> 00:05:34,479
that are involved in the protocol and

147
00:05:34,479 --> 00:05:35,199
now

148
00:05:35,199 --> 00:05:37,199
of course that might be an abort in the

149
00:05:37,199 --> 00:05:40,320
dear knowledge and you want that even

150
00:05:40,320 --> 00:05:42,400
the parties that are not involved in the

151
00:05:42,400 --> 00:05:44,160
generation of the transcript of the zero

152
00:05:44,160 --> 00:05:47,759
knowledge can identify whether the abort

153
00:05:47,759 --> 00:05:50,400
was triggered due to an incorrect

154
00:05:50,400 --> 00:05:52,960
behavior of the prover or due to an

155
00:05:52,960 --> 00:05:56,080
incorrect behavior of the uh verifier

156
00:05:56,080 --> 00:05:56,800
okay

157
00:05:56,800 --> 00:05:59,199
and this general truths are

158
00:05:59,199 --> 00:06:01,520
easy to to to achieve so

159
00:06:01,520 --> 00:06:04,000
let's assume this is not a concern

160
00:06:04,000 --> 00:06:06,000
what is a concern though is that this

161
00:06:06,000 --> 00:06:08,160
protocol is far from being optimal i

162
00:06:08,160 --> 00:06:09,840
mean this is not those are not for

163
00:06:09,840 --> 00:06:11,600
rounds

164
00:06:11,600 --> 00:06:13,600
good so

165
00:06:13,600 --> 00:06:15,440
then the next step to solve this issue

166
00:06:15,440 --> 00:06:18,000
would be to say let's just run one big

167
00:06:18,000 --> 00:06:20,319
zero knowledge where we prove that

168
00:06:20,319 --> 00:06:22,400
everything is is fine

169
00:06:22,400 --> 00:06:25,039
um of course like if you want to do that

170
00:06:25,039 --> 00:06:26,720
so if you want to run at the knowledge

171
00:06:26,720 --> 00:06:29,919
proofing parallel of your mpc protocol

172
00:06:29,919 --> 00:06:31,680
and prove at the end

173
00:06:31,680 --> 00:06:33,280
that all your messages were completed

174
00:06:33,280 --> 00:06:34,800
correctly you need decision knowledge to

175
00:06:34,800 --> 00:06:37,600
be uh delayed the input in the statement

176
00:06:37,600 --> 00:06:39,680
because the your statement which is the

177
00:06:39,680 --> 00:06:42,160
set of messages you computed will be

178
00:06:42,160 --> 00:06:44,880
fully determined only in the in the last

179
00:06:44,880 --> 00:06:45,680
round

180
00:06:45,680 --> 00:06:48,560
so now if you have this protocol the way

181
00:06:48,560 --> 00:06:50,960
an execution of this protocol

182
00:06:50,960 --> 00:06:53,840
uh would be it it should look like

183
00:06:53,840 --> 00:06:55,520
something like that so

184
00:06:55,520 --> 00:06:57,280
uh this powerful party will compute the

185
00:06:57,280 --> 00:06:59,360
npc messages and at the same time we'll

186
00:06:59,360 --> 00:07:00,880
start generating this zero knowledge

187
00:07:00,880 --> 00:07:04,160
proof and at some point it might be that

188
00:07:04,160 --> 00:07:07,759
the npc fails uh and but we don't know

189
00:07:07,759 --> 00:07:11,120
the reason why the mpc failed

190
00:07:11,120 --> 00:07:14,160
however the this purple party here will

191
00:07:14,160 --> 00:07:15,039
keep

192
00:07:15,039 --> 00:07:16,720
generating the messages for the zero

193
00:07:16,720 --> 00:07:18,720
knowledge until the end

194
00:07:18,720 --> 00:07:20,080
uh proving

195
00:07:20,080 --> 00:07:21,039
that

196
00:07:21,039 --> 00:07:23,280
the messages that

197
00:07:23,280 --> 00:07:25,919
she has generated were

198
00:07:25,919 --> 00:07:27,280
well formed

199
00:07:27,280 --> 00:07:29,039
and now given that the knowledge proof

200
00:07:29,039 --> 00:07:32,800
is uh is publicly verifiable

201
00:07:32,800 --> 00:07:36,000
the only reason why uh this

202
00:07:36,000 --> 00:07:39,039
purple party would not be able to

203
00:07:39,039 --> 00:07:41,039
complete the general truth is because

204
00:07:41,039 --> 00:07:43,680
she was behaving maliciously and so all

205
00:07:43,680 --> 00:07:46,080
the parties can identify uh this

206
00:07:46,080 --> 00:07:49,360
specific uh powerful party as the as

207
00:07:49,360 --> 00:07:51,680
being the corrupted party

208
00:07:51,680 --> 00:07:52,879
so

209
00:07:52,879 --> 00:07:55,039
um

210
00:07:55,039 --> 00:07:56,960
actually dear knowledge in this setting

211
00:07:56,960 --> 00:07:59,599
is not really what you need something

212
00:07:59,599 --> 00:08:01,599
stronger you need a form of normal

213
00:08:01,599 --> 00:08:03,280
ability and then zero knowledge

214
00:08:03,280 --> 00:08:05,520
uh which is something that we uh we show

215
00:08:05,520 --> 00:08:08,639
how to achieve uh in the paper but what

216
00:08:08,639 --> 00:08:10,879
is more interesting and what i uh wanted

217
00:08:10,879 --> 00:08:13,360
to talk in the in the last part of the

218
00:08:13,360 --> 00:08:14,879
talk is that

219
00:08:14,879 --> 00:08:17,120
so here we are running in parallel an

220
00:08:17,120 --> 00:08:19,199
mbc protocol and i didn't knowledge uh

221
00:08:19,199 --> 00:08:20,080
proof

222
00:08:20,080 --> 00:08:21,039
but

223
00:08:21,039 --> 00:08:22,800
why would they compose like that there

224
00:08:22,800 --> 00:08:24,879
is no reason why they would compose in

225
00:08:24,879 --> 00:08:27,360
parallel and and actually

226
00:08:27,360 --> 00:08:29,919
they don't or at least we don't know

227
00:08:29,919 --> 00:08:31,840
uh yeah to be precise we don't know how

228
00:08:31,840 --> 00:08:33,679
to prove that they compose nicely in

229
00:08:33,679 --> 00:08:35,120
parallel

230
00:08:35,120 --> 00:08:37,120
so the main reason uh

231
00:08:37,120 --> 00:08:41,120
why uh the proof fails is because

232
00:08:41,120 --> 00:08:43,279
like consider this this is the real

233
00:08:43,279 --> 00:08:45,279
experiment where like you have just i

234
00:08:45,279 --> 00:08:47,040
mean it's the protocol i described to

235
00:08:47,040 --> 00:08:48,480
you right and when you want to prove the

236
00:08:48,480 --> 00:08:50,560
security of this protocol ideally you

237
00:08:50,560 --> 00:08:53,040
want to rely on the security of the zero

238
00:08:53,040 --> 00:08:55,120
knowledge and on the security of the mpc

239
00:08:55,120 --> 00:08:58,320
protocol in a distinct

240
00:08:58,320 --> 00:09:00,959
interesting steps so what we usually do

241
00:09:00,959 --> 00:09:03,360
is that we do hybrid experiments where

242
00:09:03,360 --> 00:09:04,959
in the first experiment you run the zero

243
00:09:04,959 --> 00:09:06,640
knowledge simulator

244
00:09:06,640 --> 00:09:09,200
of course and then you prove that uh

245
00:09:09,200 --> 00:09:11,120
this hybrid is indistinguishable from

246
00:09:11,120 --> 00:09:13,920
the real uh experiment due to

247
00:09:13,920 --> 00:09:15,920
uh well the zero-knowledge property of

248
00:09:15,920 --> 00:09:17,200
the protocol

249
00:09:17,200 --> 00:09:18,880
and then you say okay good now we run

250
00:09:18,880 --> 00:09:21,040
the npc simulator and

251
00:09:21,040 --> 00:09:24,480
that's the proof is you stop

252
00:09:24,480 --> 00:09:26,320
unfortunately

253
00:09:26,320 --> 00:09:29,200
we got an error

254
00:09:31,200 --> 00:09:32,399
so

255
00:09:32,399 --> 00:09:34,560
unfortunately the last step of the proof

256
00:09:34,560 --> 00:09:37,120
doesn't really work and

257
00:09:37,120 --> 00:09:39,120
because what do you want to do in the

258
00:09:39,120 --> 00:09:41,040
last step of the proof you want to

259
00:09:41,040 --> 00:09:42,720
reduce the security of the protocol to

260
00:09:42,720 --> 00:09:44,640
the security of the npc and so it means

261
00:09:44,640 --> 00:09:47,839
that you are in this uh game like you

262
00:09:47,839 --> 00:09:49,839
want to say now i'm able to construct an

263
00:09:49,839 --> 00:09:51,839
adversary that breaks the security of

264
00:09:51,839 --> 00:09:54,480
the npc with unanimous abort and the

265
00:09:54,480 --> 00:09:56,320
security game works in this way you have

266
00:09:56,320 --> 00:09:58,640
a challenger and this challenger might

267
00:09:58,640 --> 00:10:00,880
generate messages for the npc protocol

268
00:10:00,880 --> 00:10:03,600
in an honest way or in a simulated way

269
00:10:03,600 --> 00:10:06,160
and we want to create a luana uh show a

270
00:10:06,160 --> 00:10:08,959
distinguisher to reach a contradiction

271
00:10:08,959 --> 00:10:10,640
and so the way we construct the

272
00:10:10,640 --> 00:10:12,880
distinguisher is by like

273
00:10:12,880 --> 00:10:15,519
creating a an adversity that internally

274
00:10:15,519 --> 00:10:18,720
runs adversary for for for our protocol

275
00:10:18,720 --> 00:10:21,279
for the identifiable protocol and just

276
00:10:21,279 --> 00:10:23,040
acts as a proxy

277
00:10:23,040 --> 00:10:26,079
between uh like the broods channel and

278
00:10:26,079 --> 00:10:28,480
the ch and the challenger of npc

279
00:10:28,480 --> 00:10:31,920
for the uh black mpc messages which are

280
00:10:31,920 --> 00:10:33,920
the messages of the unanimous abort

281
00:10:33,920 --> 00:10:35,440
protocol

282
00:10:35,440 --> 00:10:38,959
so okay i mean you can do that fine

283
00:10:38,959 --> 00:10:40,720
the problem is that

284
00:10:40,720 --> 00:10:42,399
we are in the play model we don't have

285
00:10:42,399 --> 00:10:43,839
random oracle

286
00:10:43,839 --> 00:10:46,959
so the way simulators usually work in

287
00:10:46,959 --> 00:10:49,360
this context is by

288
00:10:49,360 --> 00:10:51,200
resetting the adversity by doing some

289
00:10:51,200 --> 00:10:53,440
what we call rewinds right

290
00:10:53,440 --> 00:10:55,440
so it means that the simulator

291
00:10:55,440 --> 00:10:57,920
of the zero knowledge protocol might say

292
00:10:57,920 --> 00:10:59,120
okay

293
00:10:59,120 --> 00:11:01,279
here you are another second round and i

294
00:11:01,279 --> 00:11:03,920
want to see um i reply because i need to

295
00:11:03,920 --> 00:11:05,920
extract some secrets for you

296
00:11:05,920 --> 00:11:08,160
from you to perform the

297
00:11:08,160 --> 00:11:10,000
uh the simulation

298
00:11:10,000 --> 00:11:11,680
but remember the adversary is rushing

299
00:11:11,680 --> 00:11:12,880
here so

300
00:11:12,880 --> 00:11:14,800
the adversity upon regime in the second

301
00:11:14,800 --> 00:11:16,079
round

302
00:11:16,079 --> 00:11:17,839
he could change the second round of the

303
00:11:17,839 --> 00:11:21,279
mpc uh as well and now the adversary

304
00:11:21,279 --> 00:11:23,200
will never give you the third round of

305
00:11:23,200 --> 00:11:26,000
the zero knowledge unless he receives a

306
00:11:26,000 --> 00:11:26,959
new

307
00:11:26,959 --> 00:11:29,600
npc message with respect to the to the

308
00:11:29,600 --> 00:11:32,320
third round so he wants a reply that is

309
00:11:32,320 --> 00:11:35,519
consistent with this green npc message

310
00:11:35,519 --> 00:11:37,279
but the thing is that the challenger you

311
00:11:37,279 --> 00:11:39,200
cannot rewind the challenger i mean

312
00:11:39,200 --> 00:11:41,680
that's not how this experiment is

313
00:11:41,680 --> 00:11:43,279
defined

314
00:11:43,279 --> 00:11:46,000
and that's problematic

315
00:11:46,000 --> 00:11:46,800
so

316
00:11:46,800 --> 00:11:48,399
we need it looks like with the stronger

317
00:11:48,399 --> 00:11:51,760
security notion and what would be uh

318
00:11:51,760 --> 00:11:53,360
suitable in this context would be a

319
00:11:53,360 --> 00:11:56,800
notion of multi-party competition that

320
00:11:56,800 --> 00:12:00,880
allows for uh this type of rewinds so

321
00:12:00,880 --> 00:12:03,040
the first thing we do is to define the

322
00:12:03,040 --> 00:12:06,079
security notion and then we show how to

323
00:12:06,079 --> 00:12:08,160
uh to achieve it

324
00:12:08,160 --> 00:12:09,839
and this security initiation basically

325
00:12:09,839 --> 00:12:11,600
you have your adversity and again the

326
00:12:11,600 --> 00:12:14,800
challenger which does the same either he

327
00:12:14,800 --> 00:12:16,880
provides honestly generated messages or

328
00:12:16,880 --> 00:12:18,880
simulated messages

329
00:12:18,880 --> 00:12:20,079
but now

330
00:12:20,079 --> 00:12:22,959
uh the adversity can say okay uh now

331
00:12:22,959 --> 00:12:25,680
give me a reply to this new uh and fresh

332
00:12:25,680 --> 00:12:28,639
second round which is this green message

333
00:12:28,639 --> 00:12:31,279
and the mpc challenger interacts with

334
00:12:31,279 --> 00:12:34,160
the adversary and but stops at the third

335
00:12:34,160 --> 00:12:36,560
round and now the adversary can actually

336
00:12:36,560 --> 00:12:39,040
do this process uh many times

337
00:12:39,040 --> 00:12:42,000
um but he can do this only abundant

338
00:12:42,000 --> 00:12:43,360
number of time

339
00:12:43,360 --> 00:12:45,760
of times where b uh this bound is is

340
00:12:45,760 --> 00:12:48,160
known at at the beginning

341
00:12:48,160 --> 00:12:51,600
and after this only one of those

342
00:12:51,600 --> 00:12:56,079
sessions will be completed let's say

343
00:12:56,079 --> 00:12:58,320
and like you can see that if you have

344
00:12:58,320 --> 00:13:00,560
such an adversary then like the previous

345
00:13:00,560 --> 00:13:02,800
reduction would work because uh the

346
00:13:02,800 --> 00:13:05,040
rewinds made by the generality simulator

347
00:13:05,040 --> 00:13:06,399
would not

348
00:13:06,399 --> 00:13:08,399
be a problem in the reduction because

349
00:13:08,399 --> 00:13:10,560
the emphasis challenger is happy to give

350
00:13:10,560 --> 00:13:13,440
you more replies to multiple second

351
00:13:13,440 --> 00:13:15,920
rounds

352
00:13:16,000 --> 00:13:19,600
good so now what it remains to show is

353
00:13:19,600 --> 00:13:21,440
how you obtain

354
00:13:21,440 --> 00:13:24,240
a protocol that is secure under this uh

355
00:13:24,240 --> 00:13:26,720
this security definition

356
00:13:26,720 --> 00:13:28,959
so consider for not just the two-part

357
00:13:28,959 --> 00:13:30,880
case for simplicity we have like this

358
00:13:30,880 --> 00:13:34,800
yellow party and the purple party and

359
00:13:34,800 --> 00:13:38,079
like they start running an mpc protocol

360
00:13:38,079 --> 00:13:40,720
on normal npc protocol with no special

361
00:13:40,720 --> 00:13:42,800
properties at all

362
00:13:42,800 --> 00:13:43,600
so

363
00:13:43,600 --> 00:13:46,240
what are what is the problem of

364
00:13:46,240 --> 00:13:48,880
uh dealing with reboundable security in

365
00:13:48,880 --> 00:13:51,360
general so the problem is that

366
00:13:51,360 --> 00:13:54,240
if you just take any mpc protocol and

367
00:13:54,240 --> 00:13:56,320
you can see multiple

368
00:13:56,320 --> 00:13:59,360
third rounds that apply to multiple

369
00:13:59,360 --> 00:14:00,959
second rounds

370
00:14:00,959 --> 00:14:03,279
the problem is that this could uh break

371
00:14:03,279 --> 00:14:04,880
the security of the npc protocol because

372
00:14:04,880 --> 00:14:06,320
you can you might be able to extract

373
00:14:06,320 --> 00:14:09,040
some some secrets i mean after all

374
00:14:09,040 --> 00:14:11,519
that's also how a simulator would work i

375
00:14:11,519 --> 00:14:13,360
mean the simulator does rewind so it's

376
00:14:13,360 --> 00:14:15,040
pretty clear that you are breaking

377
00:14:15,040 --> 00:14:17,199
something by doing the rewind

378
00:14:17,199 --> 00:14:18,320
the

379
00:14:18,320 --> 00:14:21,760
high level idea of our protocol is to

380
00:14:21,760 --> 00:14:25,279
not then send the third message of the

381
00:14:25,279 --> 00:14:26,720
multi-party competition protocol in

382
00:14:26,720 --> 00:14:28,000
declare

383
00:14:28,000 --> 00:14:30,800
but we will encrypt this message

384
00:14:30,800 --> 00:14:33,199
and how do we encrypt this so

385
00:14:33,199 --> 00:14:36,079
upon receiving the second round uh each

386
00:14:36,079 --> 00:14:37,279
party

387
00:14:37,279 --> 00:14:39,440
and in this case i will be focusing just

388
00:14:39,440 --> 00:14:42,399
on the on the on the orange party

389
00:14:42,399 --> 00:14:44,399
uh creates a garbage circuit so the

390
00:14:44,399 --> 00:14:46,399
garbage circuit will contain the

391
00:14:46,399 --> 00:14:49,199
transcripts generated so far and the

392
00:14:49,199 --> 00:14:51,040
randomness of the

393
00:14:51,040 --> 00:14:52,720
orange party

394
00:14:52,720 --> 00:14:53,920
um

395
00:14:53,920 --> 00:14:56,399
and moreover this kerberos circuit is

396
00:14:56,399 --> 00:14:58,639
parameterized by a next message function

397
00:14:58,639 --> 00:15:01,680
this is the next message function of of

398
00:15:01,680 --> 00:15:04,320
the mpc protocol well uh with discovery

399
00:15:04,320 --> 00:15:06,800
circuit basically you can

400
00:15:06,800 --> 00:15:10,399
upon receiving a third-round message

401
00:15:10,399 --> 00:15:12,399
the garbage circuit can generate the

402
00:15:12,399 --> 00:15:14,880
third round on the behalf of the orange

403
00:15:14,880 --> 00:15:16,399
party and

404
00:15:16,399 --> 00:15:19,199
compute uh the last round of the mpc

405
00:15:19,199 --> 00:15:20,320
protocol so

406
00:15:20,320 --> 00:15:22,079
it's basically what i'm saying here is

407
00:15:22,079 --> 00:15:26,160
that the garbage circuit will do what uh

408
00:15:26,160 --> 00:15:28,079
what the orange party will do in the

409
00:15:28,079 --> 00:15:29,440
protocol

410
00:15:29,440 --> 00:15:32,480
and now what do i mean when i say that

411
00:15:32,480 --> 00:15:35,040
the third message of the protocol will

412
00:15:35,040 --> 00:15:37,040
be encrypted i mean we have a garbage

413
00:15:37,040 --> 00:15:39,519
circuit uh and the party done out the

414
00:15:39,519 --> 00:15:41,839
purple party in order to run it

415
00:15:41,839 --> 00:15:44,480
he needs to to get the labels and the

416
00:15:44,480 --> 00:15:46,560
way you get the labels is you by running

417
00:15:46,560 --> 00:15:48,480
an oblivious transfer protocol

418
00:15:48,480 --> 00:15:49,839
where the

419
00:15:49,839 --> 00:15:52,399
uh where the or the orange party will

420
00:15:52,399 --> 00:15:53,920
act as a sender

421
00:15:53,920 --> 00:15:56,399
using as input to the keys

422
00:15:56,399 --> 00:15:58,800
of the scarborough circuit

423
00:15:58,800 --> 00:16:01,839
and instead the parable party will

424
00:16:01,839 --> 00:16:03,360
act as a receiver

425
00:16:03,360 --> 00:16:06,000
and his input will be a bit string that

426
00:16:06,000 --> 00:16:08,399
represents the third round message of

427
00:16:08,399 --> 00:16:10,320
the mpc protocol so

428
00:16:10,320 --> 00:16:12,560
the security of the t now

429
00:16:12,560 --> 00:16:14,000
tells you that

430
00:16:14,000 --> 00:16:15,680
this input which is the third-round

431
00:16:15,680 --> 00:16:18,959
message is uh kind of secure right the

432
00:16:18,959 --> 00:16:21,199
sender should have no clue about what is

433
00:16:21,199 --> 00:16:24,560
the input of a receiver in

434
00:16:24,560 --> 00:16:26,160
an oblivious transfer protocol and

435
00:16:26,160 --> 00:16:28,800
that's basically how we make sure that

436
00:16:28,800 --> 00:16:30,720
the third round is encrypted

437
00:16:30,720 --> 00:16:32,959
but however we want to encrypt but we

438
00:16:32,959 --> 00:16:35,120
want to compute the output of this

439
00:16:35,120 --> 00:16:36,560
mpc protocol

440
00:16:36,560 --> 00:16:37,680
so

441
00:16:37,680 --> 00:16:39,920
what happens here is that then the

442
00:16:39,920 --> 00:16:42,720
purple party will receive the labels uh

443
00:16:42,720 --> 00:16:43,759
that are

444
00:16:43,759 --> 00:16:46,240
consistent with this uh third-round

445
00:16:46,240 --> 00:16:47,759
message

446
00:16:47,759 --> 00:16:49,839
the he will also receive this garbage

447
00:16:49,839 --> 00:16:50,880
circuit

448
00:16:50,880 --> 00:16:52,959
uh but now he has the labels he has the

449
00:16:52,959 --> 00:16:54,720
the garbage circuit and he can compute

450
00:16:54,720 --> 00:16:57,360
the last uh round of the protocol and he

451
00:16:57,360 --> 00:17:00,160
can basically uh now just run

452
00:17:00,160 --> 00:17:02,800
just compute the output for the for this

453
00:17:02,800 --> 00:17:06,000
mpc protocol okay and this is done um in

454
00:17:06,000 --> 00:17:06,959
um

455
00:17:06,959 --> 00:17:09,599
in a symmetric way um so the orange

456
00:17:09,599 --> 00:17:12,160
party will do exactly the same

457
00:17:12,160 --> 00:17:15,039
to get the output

458
00:17:15,039 --> 00:17:17,679
now of course it seems like we are

459
00:17:17,679 --> 00:17:19,439
saying okay now we we need to run

460
00:17:19,439 --> 00:17:21,439
actually two primitives kind of in

461
00:17:21,439 --> 00:17:22,959
parallel now

462
00:17:22,959 --> 00:17:25,199
we have this oblivious transfer but uh

463
00:17:25,199 --> 00:17:26,799
what happens if you rewind you believe

464
00:17:26,799 --> 00:17:28,559
is transferred during the during the

465
00:17:28,559 --> 00:17:30,799
reduction okay that's okay because we

466
00:17:30,799 --> 00:17:33,120
know from a previous result that

467
00:17:33,120 --> 00:17:34,559
we um

468
00:17:34,559 --> 00:17:36,720
we know how to extract one double secure

469
00:17:36,720 --> 00:17:39,200
uh oblivious transfer protocol so uh so

470
00:17:39,200 --> 00:17:41,130
that's that's not a problem um

471
00:17:41,130 --> 00:17:42,400
[Music]

472
00:17:42,400 --> 00:17:43,360
so

473
00:17:43,360 --> 00:17:45,760
uh i should say that to go from the

474
00:17:45,760 --> 00:17:47,760
two-party case to the multiparty case

475
00:17:47,760 --> 00:17:49,039
it's uh

476
00:17:49,039 --> 00:17:51,760
it's not straightforward like you

477
00:17:51,760 --> 00:17:53,679
it is a two-party primitive so as you

478
00:17:53,679 --> 00:17:55,760
can imagine there are some problems when

479
00:17:55,760 --> 00:17:57,840
you go to the multi-party case but the

480
00:17:57,840 --> 00:18:00,000
very high level that that's the very

481
00:18:00,000 --> 00:18:02,480
high level idea more or less

482
00:18:02,480 --> 00:18:03,679
um

483
00:18:03,679 --> 00:18:06,480
and so what we also think is that this

484
00:18:06,480 --> 00:18:07,200
uh

485
00:18:07,200 --> 00:18:09,679
approach might be helpful

486
00:18:09,679 --> 00:18:11,520
in any situation where you want for

487
00:18:11,520 --> 00:18:13,360
example

488
00:18:13,360 --> 00:18:15,840
in parallel uh in interactive multiple

489
00:18:15,840 --> 00:18:18,400
interactive primitives uh this means

490
00:18:18,400 --> 00:18:20,640
that you could prove secure also two npc

491
00:18:20,640 --> 00:18:22,880
protocols that are running in parallel

492
00:18:22,880 --> 00:18:26,320
and these might yield for example two

493
00:18:26,320 --> 00:18:27,919
constructions like multi-party

494
00:18:27,919 --> 00:18:29,679
competition combiners that around

495
00:18:29,679 --> 00:18:31,280
preserving

496
00:18:31,280 --> 00:18:33,120
and uh like

497
00:18:33,120 --> 00:18:34,559
similar things

498
00:18:34,559 --> 00:18:35,840
um

499
00:18:35,840 --> 00:18:37,919
and yeah we show that this notion is

500
00:18:37,919 --> 00:18:40,080
actually uh great when you want to

501
00:18:40,080 --> 00:18:42,240
achieve multi-party competition with the

502
00:18:42,240 --> 00:18:45,039
identifiable aborts and what we show is

503
00:18:45,039 --> 00:18:46,559
that all our primitives can be based on

504
00:18:46,559 --> 00:18:48,559
raptor permutations but

505
00:18:48,559 --> 00:18:51,520
uh yeah we think it's not hard to extend

506
00:18:51,520 --> 00:18:53,840
it and to realize everything from just

507
00:18:53,840 --> 00:18:56,320
uh oblivious transfer

508
00:18:56,320 --> 00:18:58,799
yeah but we can discuss this maybe uh

509
00:18:58,799 --> 00:19:01,440
afterwards and that's all thank you very

510
00:19:01,440 --> 00:19:03,679
much

511
00:19:06,640 --> 00:19:09,520
so thank you michaela we have time for

512
00:19:09,520 --> 00:19:12,160
questions

513
00:19:20,000 --> 00:19:21,919
so the number of remindings in zero

514
00:19:21,919 --> 00:19:24,000
knowledge would be expected polynomial

515
00:19:24,000 --> 00:19:25,760
time right so what do you set b to be

516
00:19:25,760 --> 00:19:27,200
yeah that's fantastic that's a good

517
00:19:27,200 --> 00:19:28,240
question so

518
00:19:28,240 --> 00:19:29,840
uh the point is that when you do the

519
00:19:29,840 --> 00:19:32,640
reduction so our zero knowledge is not

520
00:19:32,640 --> 00:19:33,919
any zero knowledge is a general

521
00:19:33,919 --> 00:19:35,360
knowledge product protocol that we

522
00:19:35,360 --> 00:19:37,039
construct

523
00:19:37,039 --> 00:19:38,559
that basically

524
00:19:38,559 --> 00:19:41,280
we prove that uh if you get let's let's

525
00:19:41,280 --> 00:19:43,520
say two accepting transcripts during the

526
00:19:43,520 --> 00:19:46,240
rewind uh the simulation would work fine

527
00:19:46,240 --> 00:19:48,400
then what we argue is that in the proof

528
00:19:48,400 --> 00:19:49,600
you will get this two accepting

529
00:19:49,600 --> 00:19:52,000
transcript with some no negligible

530
00:19:52,000 --> 00:19:53,280
probability

531
00:19:53,280 --> 00:19:55,280
and the reduction will go through so in

532
00:19:55,280 --> 00:19:57,280
the reduction we do not run in expected

533
00:19:57,280 --> 00:19:59,600
polynomial time but we cut the running

534
00:19:59,600 --> 00:20:01,600
time of the simulator

535
00:20:01,600 --> 00:20:03,280
such that the reduction remains

536
00:20:03,280 --> 00:20:05,360
polynomial time

537
00:20:05,360 --> 00:20:07,520
yeah that's a reasonable question

538
00:20:07,520 --> 00:20:08,960
another thing is did you also think

539
00:20:08,960 --> 00:20:11,760
about using non-black box zero knowledge

540
00:20:11,760 --> 00:20:13,760
yeah so

541
00:20:13,760 --> 00:20:15,600
i was thinking about that actually this

542
00:20:15,600 --> 00:20:18,159
morning to use to try to use non-black

543
00:20:18,159 --> 00:20:21,200
box zero knowledge introduction right

544
00:20:21,200 --> 00:20:24,000
and then the final simulator would

545
00:20:24,000 --> 00:20:26,480
be still be could still be let's say

546
00:20:26,480 --> 00:20:29,120
black box but uh

547
00:20:29,120 --> 00:20:31,840
i mean yeah it depends like i would say

548
00:20:31,840 --> 00:20:33,600
it's not that trivial because if you're

549
00:20:33,600 --> 00:20:35,840
still

550
00:20:35,840 --> 00:20:37,600
like i think i think it would be easy if

551
00:20:37,600 --> 00:20:39,679
you if you if you just want the la the

552
00:20:39,679 --> 00:20:42,159
final simulator to be known black box

553
00:20:42,159 --> 00:20:43,600
i think it's fine but if you just want

554
00:20:43,600 --> 00:20:45,280
to use the power of a non black box

555
00:20:45,280 --> 00:20:47,440
simulator indie hybrid

556
00:20:47,440 --> 00:20:49,280
and leverage on these

557
00:20:49,280 --> 00:20:50,480
uh

558
00:20:50,480 --> 00:20:52,880
i have an idea yeah

559
00:20:52,880 --> 00:20:55,039
but yeah

560
00:20:55,039 --> 00:20:57,200
okay so let's then communicate again

561
00:20:57,200 --> 00:21:00,440
thank you

