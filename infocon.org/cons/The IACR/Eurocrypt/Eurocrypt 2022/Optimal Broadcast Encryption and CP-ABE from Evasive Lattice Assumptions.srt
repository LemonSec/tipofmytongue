1
00:00:00,000 --> 00:00:03,320
by the way

2
00:00:28,880 --> 00:00:31,599
okay welcome everyone uh so this is a

3
00:00:31,599 --> 00:00:34,160
session on protocols and our first talk

4
00:00:34,160 --> 00:00:35,280
will be on

5
00:00:35,280 --> 00:00:37,920
optimal broadcast encryption and cpab

6
00:00:37,920 --> 00:00:40,160
from evasive relative lattice

7
00:00:40,160 --> 00:00:43,520
assumptions by hutakui and putak is also

8
00:00:43,520 --> 00:00:45,360
the one giving the talk all right uh

9
00:00:45,360 --> 00:00:47,520
thanks for coming so uh i'm going to

10
00:00:47,520 --> 00:00:50,960
start my talk with my uh slides from the

11
00:00:50,960 --> 00:00:53,280
euro clip 2013 ram session

12
00:00:53,280 --> 00:00:55,360
so imagine you're interested in doing

13
00:00:55,360 --> 00:00:58,160
online dating and if you user that's uh

14
00:00:58,160 --> 00:01:00,239
you know joins the website and the first

15
00:01:00,239 --> 00:01:01,359
thing you do

16
00:01:01,359 --> 00:01:03,120
on the dating website is to create a

17
00:01:03,120 --> 00:01:05,040
profile that contains all sorts of

18
00:01:05,040 --> 00:01:06,479
sensitive information about you like

19
00:01:06,479 --> 00:01:08,640
your hobbies you know um et cetera et

20
00:01:08,640 --> 00:01:10,320
cetera and the first thing you come to

21
00:01:10,320 --> 00:01:12,240
mind with concerns about your privacy is

22
00:01:12,240 --> 00:01:14,479
that you want to limit access to your

23
00:01:14,479 --> 00:01:15,439
profile

24
00:01:15,439 --> 00:01:17,920
so i delete two people who satisfy your

25
00:01:17,920 --> 00:01:19,759
dating criterion which could be

26
00:01:19,759 --> 00:01:22,560
something simple like a simple and or a

27
00:01:22,560 --> 00:01:25,759
bit more sophisticated dna formula

28
00:01:25,759 --> 00:01:27,360
so when other users

29
00:01:27,360 --> 00:01:28,960
join the system other users are

30
00:01:28,960 --> 00:01:31,360
associated with what we call attributes

31
00:01:31,360 --> 00:01:33,520
and when they join the website they get

32
00:01:33,520 --> 00:01:36,159
secret keys tailored to their attributes

33
00:01:36,159 --> 00:01:38,320
and the with the the correctness

34
00:01:38,320 --> 00:01:40,000
requirement is going to say that if you

35
00:01:40,000 --> 00:01:42,000
have a key for attributes that matches

36
00:01:42,000 --> 00:01:43,920
the access policy you should be able to

37
00:01:43,920 --> 00:01:46,560
decrypt the message and see the profile

38
00:01:46,560 --> 00:01:48,799
and for anyone else who with attributes

39
00:01:48,799 --> 00:01:50,560
that don't satisfy the access policy

40
00:01:50,560 --> 00:01:51,920
they should learn nothing whatsoever

41
00:01:51,920 --> 00:01:52,880
about the

42
00:01:52,880 --> 00:01:55,119
message and moreover this should be the

43
00:01:55,119 --> 00:01:57,360
case even if there's a collusion namely

44
00:01:57,360 --> 00:01:59,360
uh you have an adversary that could get

45
00:01:59,360 --> 00:02:01,040
multiple secret keys

46
00:02:01,040 --> 00:02:03,119
right this is exactly the notion of

47
00:02:03,119 --> 00:02:04,880
attribute-based encryption or more

48
00:02:04,880 --> 00:02:07,360
generally cipher text policy attributes

49
00:02:07,360 --> 00:02:10,239
encryption where the sender has a policy

50
00:02:10,239 --> 00:02:12,080
f and wants to encrypt a message and

51
00:02:12,080 --> 00:02:14,319
respect the policy to guys have a text

52
00:02:14,319 --> 00:02:16,319
secret keys are associated with bit

53
00:02:16,319 --> 00:02:18,800
string x that specifies the attribute

54
00:02:18,800 --> 00:02:20,400
and the basic correctness again says

55
00:02:20,400 --> 00:02:21,360
that

56
00:02:21,360 --> 00:02:23,280
if f of x is zero you should lend a

57
00:02:23,280 --> 00:02:25,599
message and correctness says if f of x

58
00:02:25,599 --> 00:02:26,800
is not zero you should learn nothing

59
00:02:26,800 --> 00:02:28,800
whatsoever about the message even

60
00:02:28,800 --> 00:02:30,560
there's a even if there's a collusion

61
00:02:30,560 --> 00:02:33,040
right so the main punchline from my

62
00:02:33,040 --> 00:02:34,879
previous eurocrypt talk is that we can

63
00:02:34,879 --> 00:02:36,400
actually construct attribute-based

64
00:02:36,400 --> 00:02:38,560
encryption schemes for our circuits so

65
00:02:38,560 --> 00:02:41,280
the uh policy f can be any circuits from

66
00:02:41,280 --> 00:02:43,440
the uh standard lw learning with errors

67
00:02:43,440 --> 00:02:45,440
assumption which basically says a given

68
00:02:45,440 --> 00:02:47,200
random matrix a as a plus e to the

69
00:02:47,200 --> 00:02:48,800
random and this type i'm going to use a

70
00:02:48,800 --> 00:02:51,120
squiggly underline as a shorthand for

71
00:02:51,120 --> 00:02:52,400
plus noise

72
00:02:52,400 --> 00:02:54,400
okay uh and this result actually really

73
00:02:54,400 --> 00:02:56,640
implies uh what in this

74
00:02:56,640 --> 00:02:58,400
i guess in this talk is called ciphertex

75
00:02:58,400 --> 00:03:00,879
policy abe cpabe for circuits where the

76
00:03:00,879 --> 00:03:02,959
ciphertext sign is very large it's going

77
00:03:02,959 --> 00:03:05,840
to be as large as the circuit size of f

78
00:03:05,840 --> 00:03:07,360
so if you're a practitioner you'll be

79
00:03:07,360 --> 00:03:09,040
concerned with the large cipher text

80
00:03:09,040 --> 00:03:11,519
size and this is a question addressed in

81
00:03:11,519 --> 00:03:13,360
a series of recent works where they try

82
00:03:13,360 --> 00:03:15,280
to get cpa before circuits with

83
00:03:15,280 --> 00:03:17,519
sub-linear ciphertext size so polynomial

84
00:03:17,519 --> 00:03:18,879
depth of the circuits you should think

85
00:03:18,879 --> 00:03:20,319
of the depth of circuit as roughly

86
00:03:20,319 --> 00:03:22,080
logarithmic a lot of the size of the

87
00:03:22,080 --> 00:03:24,080
circuit so this is a much smaller circle

88
00:03:24,080 --> 00:03:26,000
size unfortunately these results are not

89
00:03:26,000 --> 00:03:27,760
quite from the lw assumption anymore but

90
00:03:27,760 --> 00:03:30,319
for our stronger assumptions

91
00:03:30,319 --> 00:03:31,840
let me just say that one interesting

92
00:03:31,840 --> 00:03:33,280
thing about islam works is that they

93
00:03:33,280 --> 00:03:35,599
immediately imply uh optimal broadcast

94
00:03:35,599 --> 00:03:37,599
encryption scheme where the total cipher

95
00:03:37,599 --> 00:03:40,159
text public key and secret key size is

96
00:03:40,159 --> 00:03:41,760
poly logarithmic in the total mobile

97
00:03:41,760 --> 00:03:45,040
users capital end the system

98
00:03:45,040 --> 00:03:47,280
so uh right so a bit more about this uh

99
00:03:47,280 --> 00:03:48,799
recent work so the first of these

100
00:03:48,799 --> 00:03:52,000
results achieved cpa uh ave for circuits

101
00:03:52,000 --> 00:03:54,720
from rw and pairings and only for small

102
00:03:54,720 --> 00:03:56,239
depth circuits what's called nc one so

103
00:03:56,239 --> 00:03:58,080
lockdown circuits and the second of

104
00:03:58,080 --> 00:04:00,799
these words uh gives you uh users only

105
00:04:00,799 --> 00:04:03,200
lattices but it's actually a heuristic

106
00:04:03,200 --> 00:04:04,959
scheme in a sense that

107
00:04:04,959 --> 00:04:06,640
they don't have they don't provide a

108
00:04:06,640 --> 00:04:09,120
security reduction to a simple

109
00:04:09,120 --> 00:04:11,120
lattice assumption

110
00:04:11,120 --> 00:04:12,480
so the uh

111
00:04:12,480 --> 00:04:14,400
main punchline for this new work is a

112
00:04:14,400 --> 00:04:16,639
new cpab for circuits with small cipher

113
00:04:16,639 --> 00:04:19,358
tags from new lattice assumptions

114
00:04:19,358 --> 00:04:21,358
and that's the immediate corollary as

115
00:04:21,358 --> 00:04:23,040
with prior works we get optimal

116
00:04:23,040 --> 00:04:24,479
broadcast encryption from this new

117
00:04:24,479 --> 00:04:26,479
lattice assumptions

118
00:04:26,479 --> 00:04:27,680
in the rest of this talk i want to give

119
00:04:27,680 --> 00:04:29,120
you a sense of what the new construction

120
00:04:29,120 --> 00:04:31,919
looks like and as a warm-up the starting

121
00:04:31,919 --> 00:04:33,919
point are the this following what we

122
00:04:33,919 --> 00:04:36,160
call the matrix key equation underlying

123
00:04:36,160 --> 00:04:37,600
uh of the

124
00:04:37,600 --> 00:04:40,880
prior abe schemes from the lw assumption

125
00:04:40,880 --> 00:04:42,639
it basically says that if you're given a

126
00:04:42,639 --> 00:04:44,639
minus extension g on the left we should

127
00:04:44,639 --> 00:04:47,199
think of as a shorthand for uh

128
00:04:47,199 --> 00:04:50,160
a i minus x i just you can derive from

129
00:04:50,160 --> 00:04:54,560
this quantity a f up to x g where a f is

130
00:04:54,560 --> 00:04:55,840
a matrix with the same dimension of the

131
00:04:55,840 --> 00:04:57,840
ai in particular it's going the matrix

132
00:04:57,840 --> 00:04:59,199
the sine of the matrix af is going to be

133
00:04:59,199 --> 00:05:00,800
much smaller than sine of circuit that's

134
00:05:00,800 --> 00:05:03,360
something we're going to be using

135
00:05:03,360 --> 00:05:04,639
so here's roughly what our schema is

136
00:05:04,639 --> 00:05:06,320
going to look like in our master public

137
00:05:06,320 --> 00:05:07,759
key we're going to put in there this

138
00:05:07,759 --> 00:05:10,479
very white matrix a so the width of the

139
00:05:10,479 --> 00:05:11,600
matrix a is going to depend on the

140
00:05:11,600 --> 00:05:13,280
length of x but independent of circuit

141
00:05:13,280 --> 00:05:14,800
size roughly

142
00:05:14,800 --> 00:05:17,600
then the cam which we use master message

143
00:05:17,600 --> 00:05:19,600
is going to be lw sample respect to a

144
00:05:19,600 --> 00:05:21,680
sub f is going to be small and the

145
00:05:21,680 --> 00:05:23,199
product of the cipher text and secret

146
00:05:23,199 --> 00:05:24,880
key it's going to be lw sample with

147
00:05:24,880 --> 00:05:28,240
respect to a minus extension g

148
00:05:28,240 --> 00:05:30,160
so correctness oh sorry even before that

149
00:05:30,160 --> 00:05:31,759
how do we get to this uh product

150
00:05:31,759 --> 00:05:34,240
relation uh we decompose this product as

151
00:05:34,240 --> 00:05:35,840
follows so the ciphertext is going to be

152
00:05:35,840 --> 00:05:38,000
a lw sample respect to some random

153
00:05:38,000 --> 00:05:40,000
matrix b which is part of the master

154
00:05:40,000 --> 00:05:42,320
public key and the secret key is going

155
00:05:42,320 --> 00:05:44,880
to be a gaussian pre-image of the target

156
00:05:44,880 --> 00:05:47,120
matrix a matrix sensor g with respect to

157
00:05:47,120 --> 00:05:49,280
this matrix b

158
00:05:49,280 --> 00:05:50,960
so right then you can see that if you

159
00:05:50,960 --> 00:05:52,160
take the product off the samples and

160
00:05:52,160 --> 00:05:53,520
secret key you get the expression from

161
00:05:53,520 --> 00:05:55,440
before and correctness is fairly

162
00:05:55,440 --> 00:05:57,440
straightforward using the matrix key

163
00:05:57,440 --> 00:05:59,120
equation

164
00:05:59,120 --> 00:06:01,039
and in this game with just a bit of tiny

165
00:06:01,039 --> 00:06:02,639
tweak you can show that this game is

166
00:06:02,639 --> 00:06:04,800
secure under the lw assumption if the

167
00:06:04,800 --> 00:06:07,440
uploader only sees one secret keys okay

168
00:06:07,440 --> 00:06:09,680
well in general in cp abe will concern

169
00:06:09,680 --> 00:06:11,440
the setting with the adversary we have

170
00:06:11,440 --> 00:06:12,960
deal with collusions for the adversary

171
00:06:12,960 --> 00:06:14,880
potentially gets multiple secret keys

172
00:06:14,880 --> 00:06:16,720
and it's also easy to see that this game

173
00:06:16,720 --> 00:06:18,240
is insecure if the adversary gets two

174
00:06:18,240 --> 00:06:19,440
secret keys

175
00:06:19,440 --> 00:06:21,199
essentially because the adversary gets

176
00:06:21,199 --> 00:06:22,720
multiple equations the same output is

177
00:06:22,720 --> 00:06:25,280
secret and this will be able to recover

178
00:06:25,280 --> 00:06:27,680
basically lw secret s

179
00:06:27,680 --> 00:06:29,919
so the way uh the previous uh

180
00:06:29,919 --> 00:06:32,080
constructions get around this attack is

181
00:06:32,080 --> 00:06:34,560
to design the scheme so that uh when you

182
00:06:34,560 --> 00:06:36,000
take the product of the ciphertext and

183
00:06:36,000 --> 00:06:38,000
the secret key you get different lw

184
00:06:38,000 --> 00:06:41,759
sequence si si for the i secret key

185
00:06:41,759 --> 00:06:43,680
uh concretely in the bv scheme of

186
00:06:43,680 --> 00:06:45,759
brackets give up international

187
00:06:45,759 --> 00:06:47,840
sr is going to be of the form ri times

188
00:06:47,840 --> 00:06:50,479
the matrix s where r i is going to be a

189
00:06:50,479 --> 00:06:53,680
essential random low norm uh vector that

190
00:06:53,680 --> 00:06:55,280
comes from the secret key the i secret

191
00:06:55,280 --> 00:06:58,000
key so you pick a fresh r every time you

192
00:06:58,000 --> 00:06:59,919
generate a new secret key and this

193
00:06:59,919 --> 00:07:01,520
matrix s is going to be the encryption

194
00:07:01,520 --> 00:07:02,479
randomness

195
00:07:02,479 --> 00:07:04,960
it's sort of a souped-up version of the

196
00:07:04,960 --> 00:07:07,039
lwe secret s

197
00:07:07,039 --> 00:07:09,280
okay so to implement this idea so we

198
00:07:09,280 --> 00:07:10,720
will want to uh

199
00:07:10,720 --> 00:07:12,880
we want to design cpab scheme with the

200
00:07:12,880 --> 00:07:14,319
property that the product of the site

201
00:07:14,319 --> 00:07:16,319
protection secret key is of the formula

202
00:07:16,319 --> 00:07:19,280
r times x times a minus x tends to g

203
00:07:19,280 --> 00:07:21,199
the difficulty of doing this is that you

204
00:07:21,199 --> 00:07:23,680
have this term uh s that depends on the

205
00:07:23,680 --> 00:07:25,599
ciphertext sandwich between two terms

206
00:07:25,599 --> 00:07:27,039
that you found the secret key whereas

207
00:07:27,039 --> 00:07:29,199
your one cycle text times secret key

208
00:07:29,199 --> 00:07:31,759
so the way they implement this in a bb

209
00:07:31,759 --> 00:07:34,160
scheme is very clever idea where they

210
00:07:34,160 --> 00:07:36,240
use some techniques from identity based

211
00:07:36,240 --> 00:07:37,840
encryption

212
00:07:37,840 --> 00:07:39,919
in this work we take a

213
00:07:39,919 --> 00:07:41,919
rather different approach and we make

214
00:07:41,919 --> 00:07:43,840
use of the following matrix identity

215
00:07:43,840 --> 00:07:46,160
which comes from if you know this thing

216
00:07:46,160 --> 00:07:48,400
called vectorization is very related

217
00:07:48,400 --> 00:07:50,240
what this matrix identity say is that if

218
00:07:50,240 --> 00:07:52,160
you instead of working with the matrix s

219
00:07:52,160 --> 00:07:54,080
you work with the flatten of s which

220
00:07:54,080 --> 00:07:56,479
corresponds to a very wide row vector

221
00:07:56,479 --> 00:07:59,039
you get from concatenating the uh

222
00:07:59,039 --> 00:08:00,400
every row of s

223
00:08:00,400 --> 00:08:02,080
then you can actually move s from the

224
00:08:02,080 --> 00:08:04,240
middle to the left hand side and r will

225
00:08:04,240 --> 00:08:06,080
move to the right hand side but with

226
00:08:06,080 --> 00:08:08,479
extra tensor okay now the nice thing now

227
00:08:08,479 --> 00:08:09,680
is you have something that depends on

228
00:08:09,680 --> 00:08:11,520
secret key on the left hand side on the

229
00:08:11,520 --> 00:08:12,800
left part of the product and then

230
00:08:12,800 --> 00:08:13,919
something that only depends on the

231
00:08:13,919 --> 00:08:14,960
secret key on the right side of the

232
00:08:14,960 --> 00:08:18,400
product so it decomposes nicely into a

233
00:08:18,400 --> 00:08:20,160
ciphertext and a secret key so the

234
00:08:20,160 --> 00:08:21,599
ciphertext is again going to be a

235
00:08:21,599 --> 00:08:23,520
alternative sample respect to b except

236
00:08:23,520 --> 00:08:25,199
the secret now is now the flattening of

237
00:08:25,199 --> 00:08:27,039
s and the secret key is going to be

238
00:08:27,039 --> 00:08:28,639
again gaussian three images with respect

239
00:08:28,639 --> 00:08:30,879
to some matrix b

240
00:08:30,879 --> 00:08:32,799
and uh right putting this together we

241
00:08:32,799 --> 00:08:35,279
get the following very simple cpa-b

242
00:08:35,279 --> 00:08:36,880
scheme for circuits

243
00:08:36,880 --> 00:08:39,039
and to the best of my knowledge uh

244
00:08:39,039 --> 00:08:41,200
there's no attack on the scheme but the

245
00:08:41,200 --> 00:08:43,279
question this talk we want to address is

246
00:08:43,279 --> 00:08:44,640
can we actually prove anything about the

247
00:08:44,640 --> 00:08:46,880
scheme

248
00:08:47,839 --> 00:08:50,000
okay very well uh so the first thing i'm

249
00:08:50,000 --> 00:08:51,279
going to try to do

250
00:08:51,279 --> 00:08:53,040
towards proof of security is try to

251
00:08:53,040 --> 00:08:54,720
prove something a little bit simpler so

252
00:08:54,720 --> 00:08:56,959
the first step let's try to prove that

253
00:08:56,959 --> 00:08:58,880
the product of the ciphertext and the

254
00:08:58,880 --> 00:09:01,839
secret keys are jointly suited random

255
00:09:01,839 --> 00:09:03,920
if you can prove such a steam you can if

256
00:09:03,920 --> 00:09:05,839
you can prove such a statement you

257
00:09:05,839 --> 00:09:08,160
essentially rule out at least the attack

258
00:09:08,160 --> 00:09:09,680
that we described earlier but on the

259
00:09:09,680 --> 00:09:12,160
skin one you get two secret keys

260
00:09:12,160 --> 00:09:14,640
so let's try to prove this so as first

261
00:09:14,640 --> 00:09:16,800
starting point uh observe that by the lw

262
00:09:16,800 --> 00:09:19,279
assumption if you uh ri times s is

263
00:09:19,279 --> 00:09:21,519
pseudorandom so r i remember is the

264
00:09:21,519 --> 00:09:23,519
randomness that comes from the secret

265
00:09:23,519 --> 00:09:25,519
key

266
00:09:25,519 --> 00:09:27,680
and uh again

267
00:09:27,680 --> 00:09:29,120
with this expression if you multiply

268
00:09:29,120 --> 00:09:31,200
both sides of the equation by a low null

269
00:09:31,200 --> 00:09:33,120
matrix uh it continues to be

270
00:09:33,120 --> 00:09:34,720
pseudo-random you need lower norm

271
00:09:34,720 --> 00:09:36,720
because these matrices interact with the

272
00:09:36,720 --> 00:09:40,399
error in r i plus s okay so r items so

273
00:09:40,399 --> 00:09:42,560
this is random as long as uh a itself

274
00:09:42,560 --> 00:09:43,920
has no num

275
00:09:43,920 --> 00:09:46,080
and then a minus x times the iso number

276
00:09:46,080 --> 00:09:47,440
and now on the right hand side you now

277
00:09:47,440 --> 00:09:49,839
have independent l w sequence s i so now

278
00:09:49,839 --> 00:09:51,760
you can do a hybrid argument and from

279
00:09:51,760 --> 00:09:54,480
the lw assumption you get that the

280
00:09:54,480 --> 00:09:55,519
expression on the right hand side is

281
00:09:55,519 --> 00:09:56,959
also pseudo-random

282
00:09:56,959 --> 00:09:58,720
so this pretty much proves what we

283
00:09:58,720 --> 00:10:01,360
wanted to achieve in step one except we

284
00:10:01,360 --> 00:10:03,760
have a minus x tensor i instead of a

285
00:10:03,760 --> 00:10:05,440
minus x tends to g

286
00:10:05,440 --> 00:10:07,040
so we have to go back to our matrix key

287
00:10:07,040 --> 00:10:08,560
equation to make sure that it still

288
00:10:08,560 --> 00:10:10,160
works when you replace the gadget matrix

289
00:10:10,160 --> 00:10:12,399
with the identity matrix i and turns out

290
00:10:12,399 --> 00:10:14,720
it does except you pay a price you get

291
00:10:14,720 --> 00:10:15,680
this

292
00:10:15,680 --> 00:10:18,000
you get a much bigger error growth which

293
00:10:18,000 --> 00:10:19,680
is a doubly exponential in the depth of

294
00:10:19,680 --> 00:10:21,040
the circuit instead of singly

295
00:10:21,040 --> 00:10:23,200
exponential and when you translate it to

296
00:10:23,200 --> 00:10:24,720
a abe scheme this means that your

297
00:10:24,720 --> 00:10:26,640
ciphertext your secret key size is going

298
00:10:26,640 --> 00:10:28,480
to be exponential in that pocket circuit

299
00:10:28,480 --> 00:10:29,839
instead of polynomial depth of the

300
00:10:29,839 --> 00:10:30,959
circuit

301
00:10:30,959 --> 00:10:33,920
so as a ave for circuit is not terribly

302
00:10:33,920 --> 00:10:35,760
interesting because we already knew how

303
00:10:35,760 --> 00:10:37,839
to get cybertech scientific depends on

304
00:10:37,839 --> 00:10:40,560
the size of the circuits but it's

305
00:10:40,560 --> 00:10:41,920
sufficient for optimal broadcast

306
00:10:41,920 --> 00:10:43,920
encryption which corresponds to circuits

307
00:10:43,920 --> 00:10:45,680
with extremely small depth

308
00:10:45,680 --> 00:10:48,320
so if you have n users the size is n and

309
00:10:48,320 --> 00:10:50,720
your depth is w logarithmic in n

310
00:10:50,720 --> 00:10:53,360
so when you do 2 to the depth you get a

311
00:10:53,360 --> 00:10:55,440
poly dot n which gives you optimal

312
00:10:55,440 --> 00:10:56,800
broadcast encryption

313
00:10:56,800 --> 00:10:58,720
so that's for now for now let's give up

314
00:10:58,720 --> 00:11:00,399
on circuits for a moment and just try to

315
00:11:00,399 --> 00:11:03,200
get optimal broadcast encryption

316
00:11:03,200 --> 00:11:05,600
so so far so good uh

317
00:11:05,600 --> 00:11:06,880
and this is roughly what the satellite

318
00:11:06,880 --> 00:11:08,800
and secret key is going to look like as

319
00:11:08,800 --> 00:11:11,200
the next step we want to go from showing

320
00:11:11,200 --> 00:11:12,560
the product of the cyber test and the

321
00:11:12,560 --> 00:11:14,560
secret key pseudorandom to showing that

322
00:11:14,560 --> 00:11:16,000
the ciphertext is still a random given

323
00:11:16,000 --> 00:11:18,000
the secret keys that gives you one step

324
00:11:18,000 --> 00:11:19,279
towards self-proving security of the

325
00:11:19,279 --> 00:11:20,399
scheme

326
00:11:20,399 --> 00:11:23,200
and our intuition for this is that such

327
00:11:23,200 --> 00:11:25,120
a statement should in some sense follow

328
00:11:25,120 --> 00:11:26,720
from what we proved in the first step

329
00:11:26,720 --> 00:11:28,640
for the following reason if you look at

330
00:11:28,640 --> 00:11:29,839
what the ciphertext looks like it's

331
00:11:29,839 --> 00:11:32,000
essentially lw sample

332
00:11:32,000 --> 00:11:33,760
so our intuition is that if you are

333
00:11:33,760 --> 00:11:35,120
trying to distinguish from out of each

334
00:11:35,120 --> 00:11:37,279
sample as v plus e from uniform and

335
00:11:37,279 --> 00:11:39,120
you're given some gaussian pre major sp

336
00:11:39,120 --> 00:11:40,399
inverse with respect to some type of

337
00:11:40,399 --> 00:11:43,440
matrix p um really the only interesting

338
00:11:43,440 --> 00:11:45,440
distinguishes are the ones that take

339
00:11:45,440 --> 00:11:47,920
this uh s b plus e and b inverse of p

340
00:11:47,920 --> 00:11:50,639
multiple multiply them together to get a

341
00:11:50,639 --> 00:11:53,920
new lwe sample sp e prime and try to

342
00:11:53,920 --> 00:11:55,519
distinguish s p plus e prime from

343
00:11:55,519 --> 00:11:56,959
uniform

344
00:11:56,959 --> 00:11:58,399
in the case of our scheme when you take

345
00:11:58,399 --> 00:12:00,720
this product you'll be the s p

346
00:12:00,720 --> 00:12:03,040
s times p corresponds to the product of

347
00:12:03,040 --> 00:12:05,120
the ciphertext and secret keys which we

348
00:12:05,120 --> 00:12:07,440
know from step one to be pseudorandom

349
00:12:07,440 --> 00:12:09,200
therefore from that we you know if this

350
00:12:09,200 --> 00:12:11,200
if this is indeed the only attack then

351
00:12:11,200 --> 00:12:12,639
you will imply that the cyprus should

352
00:12:12,639 --> 00:12:14,399
random given the keys

353
00:12:14,399 --> 00:12:15,920
and this is uh

354
00:12:15,920 --> 00:12:18,320
and we formalize this intuition uh by a

355
00:12:18,320 --> 00:12:20,480
new lattice assumption which we call the

356
00:12:20,480 --> 00:12:22,639
evasive auditory assumption which is

357
00:12:22,639 --> 00:12:24,079
also independently introduced in the

358
00:12:24,079 --> 00:12:27,200
world of uh wilson suburi

359
00:12:27,200 --> 00:12:28,720
and the assumption basically says that

360
00:12:28,720 --> 00:12:30,720
if some uh distribution p which

361
00:12:30,720 --> 00:12:33,200
corresponds to this a minus x tends to g

362
00:12:33,200 --> 00:12:34,320
times r

363
00:12:34,320 --> 00:12:36,959
uh if s b plus e and s p plus e show the

364
00:12:36,959 --> 00:12:38,800
random then s b plus e should be

365
00:12:38,800 --> 00:12:40,240
pseudo-random given this gaussian

366
00:12:40,240 --> 00:12:42,399
pre-images

367
00:12:42,399 --> 00:12:44,160
and this should hold even if also you

368
00:12:44,160 --> 00:12:46,880
get the b and the piece uh as suspended

369
00:12:46,880 --> 00:12:48,480
in the lw assumption

370
00:12:48,480 --> 00:12:50,480
all right so let's try to pass this

371
00:12:50,480 --> 00:12:52,720
assumption a bit uh the assumption

372
00:12:52,720 --> 00:12:54,560
refers to essentially any

373
00:12:54,560 --> 00:12:56,720
any distribution b p that's independent

374
00:12:56,720 --> 00:12:58,720
of b but let's look at two concrete

375
00:12:58,720 --> 00:13:01,120
examples of our distributions uh p as a

376
00:13:01,120 --> 00:13:02,639
sanity check

377
00:13:02,639 --> 00:13:04,639
if p is a uniform distribution

378
00:13:04,639 --> 00:13:06,240
then it's fairly too easy to see that

379
00:13:06,240 --> 00:13:08,560
both the pre and post condition are true

380
00:13:08,560 --> 00:13:10,639
under the lw assumption okay the

381
00:13:10,639 --> 00:13:12,480
precondition just because p is random

382
00:13:12,480 --> 00:13:14,079
the post condition because b inverse of

383
00:13:14,079 --> 00:13:15,600
p looks like a random gaussian so you

384
00:13:15,600 --> 00:13:17,279
can just sample yourself without needing

385
00:13:17,279 --> 00:13:19,200
a tripod for b

386
00:13:19,200 --> 00:13:20,800
on the other hand if p is a gadget

387
00:13:20,800 --> 00:13:22,639
matrix then both the pre and the post

388
00:13:22,639 --> 00:13:24,480
conditions are false you can you can

389
00:13:24,480 --> 00:13:27,120
recover astronomers as v plus e

390
00:13:27,120 --> 00:13:28,560
so force implies force so that's

391
00:13:28,560 --> 00:13:30,160
consistent with our e basis velocity

392
00:13:30,160 --> 00:13:33,360
assumption so that's our examples and

393
00:13:33,360 --> 00:13:35,360
let me just say that the precondition

394
00:13:35,360 --> 00:13:37,120
requiring pseudo-randomness of this

395
00:13:37,120 --> 00:13:39,519
product is uh basically allows us to

396
00:13:39,519 --> 00:13:40,880
avoid generating attacks in the

397
00:13:40,880 --> 00:13:43,360
literature on our multi-linear maps and

398
00:13:43,360 --> 00:13:46,600
io categories

399
00:13:48,320 --> 00:13:49,839
all right

400
00:13:49,839 --> 00:13:51,760
uh okay for our actually scheme we

401
00:13:51,760 --> 00:13:53,040
actually need a

402
00:13:53,040 --> 00:13:54,240
slightly sweeped up version of the

403
00:13:54,240 --> 00:13:56,480
assumption where we get some additional

404
00:13:56,480 --> 00:13:58,000
matrix a prime coming up from some

405
00:13:58,000 --> 00:13:59,440
distribution but this is mostly

406
00:13:59,440 --> 00:14:01,760
technical

407
00:14:01,760 --> 00:14:03,760
okay so at this point uh

408
00:14:03,760 --> 00:14:05,440
we got pretty close to proving security

409
00:14:05,440 --> 00:14:07,120
of the scheme uh we basically proved

410
00:14:07,120 --> 00:14:08,720
that the separate shooter random if you

411
00:14:08,720 --> 00:14:11,040
don't have the cam key uh unfortunately

412
00:14:11,040 --> 00:14:12,959
if you put the chem key back the proof

413
00:14:12,959 --> 00:14:15,199
breaks uh essentially because when you

414
00:14:15,199 --> 00:14:18,000
do this we try to apply lwe with the

415
00:14:18,000 --> 00:14:20,320
assumption of ri times s now this s

416
00:14:20,320 --> 00:14:21,680
applies somewhere else so you're getting

417
00:14:21,680 --> 00:14:23,120
trouble

418
00:14:23,120 --> 00:14:24,800
so the way we fix this is we are going

419
00:14:24,800 --> 00:14:26,800
to master chem key with additional lw

420
00:14:26,800 --> 00:14:28,160
sample

421
00:14:28,160 --> 00:14:29,839
and this essentially allows to make sure

422
00:14:29,839 --> 00:14:31,440
that the leakage is of the from our

423
00:14:31,440 --> 00:14:33,440
items s and then you can do the same

424
00:14:33,440 --> 00:14:34,959
argument from before

425
00:14:34,959 --> 00:14:36,399
so once you make the camera a bit more

426
00:14:36,399 --> 00:14:37,920
complicated you're going to have to

427
00:14:37,920 --> 00:14:39,600
introduce extra terms in the ciphertext

428
00:14:39,600 --> 00:14:42,079
and secret key so that they can cancel

429
00:14:42,079 --> 00:14:43,760
and you get correctness

430
00:14:43,760 --> 00:14:46,000
this is essentially our final scheme

431
00:14:46,000 --> 00:14:47,120
and uh

432
00:14:47,120 --> 00:14:49,040
what we show about this scheme is that

433
00:14:49,040 --> 00:14:51,519
under the invasive rw assumption and the

434
00:14:51,519 --> 00:14:52,959
adw assumption

435
00:14:52,959 --> 00:14:54,880
this scheme is indicative of optimal

436
00:14:54,880 --> 00:14:56,880
broadcast encryption scheme with poly

437
00:14:56,880 --> 00:14:58,959
logarithmic size parameters

438
00:14:58,959 --> 00:15:01,440
and moreover if you take this identity

439
00:15:01,440 --> 00:15:04,240
matrix and uh move it back to the gadget

440
00:15:04,240 --> 00:15:06,959
matrix you also get a complexity abe

441
00:15:06,959 --> 00:15:09,600
with small ciphertext but for the cpave

442
00:15:09,600 --> 00:15:11,040
you're going to require additional

443
00:15:11,040 --> 00:15:13,519
assumption of the following form let me

444
00:15:13,519 --> 00:15:14,800
just say that this assumption doesn't

445
00:15:14,800 --> 00:15:17,120
talk about gaussian pre-images so it's

446
00:15:17,120 --> 00:15:20,000
incomparable to the basic rw function it

447
00:15:20,000 --> 00:15:21,519
also doesn't talk about the function f

448
00:15:21,519 --> 00:15:23,519
it's just about you know

449
00:15:23,519 --> 00:15:24,880
axis

450
00:15:24,880 --> 00:15:26,560
all right so that's basically the entire

451
00:15:26,560 --> 00:15:30,079
talk uh to conclude uh i

452
00:15:30,079 --> 00:15:31,440
uh i describe new construction of

453
00:15:31,440 --> 00:15:33,199
broadcast encryption cpab and new

454
00:15:33,199 --> 00:15:34,800
lattice assumptions i think that's a

455
00:15:34,800 --> 00:15:36,560
bunch of very nice open problems whether

456
00:15:36,560 --> 00:15:38,320
you are a uh

457
00:15:38,320 --> 00:15:40,000
crypt analyst working on a text a

458
00:15:40,000 --> 00:15:41,199
lattice person working on lattice

459
00:15:41,199 --> 00:15:44,560
reductions or someone working on new

460
00:15:44,560 --> 00:15:46,399
lattice-based cryptosystems

461
00:15:46,399 --> 00:15:47,120
so

462
00:15:47,120 --> 00:15:48,959
uh it'd be great to see more

463
00:15:48,959 --> 00:15:51,199
analysis and attack on the assumption or

464
00:15:51,199 --> 00:15:53,440
maybe reductions to the lw assumption

465
00:15:53,440 --> 00:15:55,839
for maybe a specific distributions fee

466
00:15:55,839 --> 00:15:57,199
delete the ones that matches what we

467
00:15:57,199 --> 00:16:00,320
need for applications and also maybe try

468
00:16:00,320 --> 00:16:02,000
to find new applications for this new

469
00:16:02,000 --> 00:16:05,279
assumption so right so in the work of uh

470
00:16:05,279 --> 00:16:07,839
strawberry disappearing at the crypto

471
00:16:07,839 --> 00:16:10,800
2022 and uh independent work uh we

472
00:16:10,800 --> 00:16:12,160
showed that you can build witness

473
00:16:12,160 --> 00:16:14,160
encryption from this assumption and

474
00:16:14,160 --> 00:16:15,199
slightly stopped uploading this

475
00:16:15,199 --> 00:16:16,240
assumption

476
00:16:16,240 --> 00:16:18,320
and finally can you build cpa be from

477
00:16:18,320 --> 00:16:21,120
just ubc lwe without needing this extra

478
00:16:21,120 --> 00:16:23,279
assumption about you know let's appear

479
00:16:23,279 --> 00:16:27,279
on previously okay thank you

480
00:16:34,000 --> 00:16:38,320
hey we have plenty of time for questions

481
00:16:38,480 --> 00:16:40,720
oh

482
00:16:42,639 --> 00:16:44,880
yeah

483
00:16:45,519 --> 00:16:48,079
uh thanks uh i'm curious to know that is

484
00:16:48,079 --> 00:16:50,320
it possible to extend this idea to key

485
00:16:50,320 --> 00:16:54,000
policy attribute-based encryptions

486
00:16:54,399 --> 00:16:55,839
key policy

487
00:16:55,839 --> 00:16:58,079
okay so key policy problem was solved in

488
00:16:58,079 --> 00:17:00,720
the uh that was the punchline of my uh

489
00:17:00,720 --> 00:17:03,440
euro clipboard session top 10 years ago

490
00:17:03,440 --> 00:17:05,599
yeah so the key policy version sort of

491
00:17:05,599 --> 00:17:07,119
you get the right parameters and then

492
00:17:07,119 --> 00:17:08,880
you know with the follow-up work of

493
00:17:08,880 --> 00:17:10,959
bonnie oh you get the right parameters

494
00:17:10,959 --> 00:17:14,480
uh the the cpa be with cipher text size

495
00:17:14,480 --> 00:17:16,959
basically is the construction you get

496
00:17:16,959 --> 00:17:20,000
when you are transit akp abe to a cpa be

497
00:17:20,000 --> 00:17:22,400
using universal circuits thank you yeah

498
00:17:22,400 --> 00:17:24,640
thanks

499
00:17:26,240 --> 00:17:28,640
any other

500
00:17:30,840 --> 00:17:33,200
questions okay so let's thank hutak

501
00:17:33,200 --> 00:17:36,200
again

