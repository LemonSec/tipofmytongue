1
00:00:02,240 --> 00:00:06,160
hello everyone i'm children from pri ssf

2
00:00:06,160 --> 00:00:09,040
information engineering university

3
00:00:09,040 --> 00:00:11,679
now let me introduce you our work on the

4
00:00:11,679 --> 00:00:15,040
two stream servers snow 5 and snow 6.

5
00:00:15,040 --> 00:00:17,359
this is a joint work with chinchon hui

6
00:00:17,359 --> 00:00:22,000
tranjian sweden tingling and the team

7
00:00:22,400 --> 00:00:24,480
i will make the presentation from the

8
00:00:24,480 --> 00:00:26,560
following five aspects

9
00:00:26,560 --> 00:00:29,760
the brief description of snow 5.06

10
00:00:29,760 --> 00:00:31,199
the way to find the linear

11
00:00:31,199 --> 00:00:33,600
approximations of snow 5

12
00:00:33,600 --> 00:00:36,480
the automatic searching tool we use

13
00:00:36,480 --> 00:00:38,640
a class of binary linear approach

14
00:00:38,640 --> 00:00:41,280
emissions of snow 5 and the correlation

15
00:00:41,280 --> 00:00:45,719
attack on full snow 5 and 7.

16
00:00:45,760 --> 00:00:48,239
snow 5 is a new member of snow family

17
00:00:48,239 --> 00:00:50,719
proposed in 2018

18
00:00:50,719 --> 00:00:54,320
and also lost satisfying the 256 speed

19
00:00:54,320 --> 00:01:00,399
security level for the 5g system in 2021

20
00:01:00,399 --> 00:01:03,199
snow 6 was proposed as an improved

21
00:01:03,199 --> 00:01:06,479
version of snowflake

22
00:01:07,439 --> 00:01:10,320
this is a framework of snow 5.

23
00:01:10,320 --> 00:01:13,760
like most fsr based stream servers it

24
00:01:13,760 --> 00:01:18,560
consists of a fsr part and an fsm part

25
00:01:18,560 --> 00:01:21,360
each type of the fsr and

26
00:01:21,360 --> 00:01:24,200
and each memory has a scale of

27
00:01:24,200 --> 00:01:26,479
128 bits

28
00:01:26,479 --> 00:01:28,640
this leads to difficulties to find the

29
00:01:28,640 --> 00:01:32,400
distinguishers for correlation attacks

30
00:01:32,400 --> 00:01:35,920
snow 6 is the same as snow 5 except the

31
00:01:35,920 --> 00:01:41,840
tap t2 is switched to the left half

32
00:01:42,799 --> 00:01:47,119
the previous results are listed here

33
00:01:47,119 --> 00:01:50,000
as we can see there is no result faster

34
00:01:50,000 --> 00:01:55,079
than exhaustive key search on snow 5.06

35
00:01:55,840 --> 00:01:58,320
now we introduce our way to construct

36
00:01:58,320 --> 00:02:01,520
the correlation attack distinguish

37
00:02:01,520 --> 00:02:04,320
our motivation is to find a biased

38
00:02:04,320 --> 00:02:07,439
binary approximation of this form

39
00:02:07,439 --> 00:02:09,520
a distinguisher only relates to the

40
00:02:09,520 --> 00:02:12,959
output words and fsr states

41
00:02:12,959 --> 00:02:15,520
the method is to convert the linear

42
00:02:15,520 --> 00:02:17,680
approximation equation

43
00:02:17,680 --> 00:02:18,800
into the

44
00:02:18,800 --> 00:02:21,920
approximation of a composite function

45
00:02:21,920 --> 00:02:24,560
besides there is a linear relationship

46
00:02:24,560 --> 00:02:26,480
between the four tabs

47
00:02:26,480 --> 00:02:29,280
meaning we can use three of them to

48
00:02:29,280 --> 00:02:32,640
generate the rest one

49
00:02:33,120 --> 00:02:36,000
for the approximation of a complete

50
00:02:36,000 --> 00:02:38,640
function we can compute the relation by

51
00:02:38,640 --> 00:02:42,400
the widely used welsh spectrum theory

52
00:02:42,400 --> 00:02:45,040
it is worth noting that the input

53
00:02:45,040 --> 00:02:48,400
variables x in this formula must be

54
00:02:48,400 --> 00:02:50,480
mutually independent and

55
00:02:50,480 --> 00:02:54,079
uniformly distributed

56
00:02:54,720 --> 00:02:56,800
the core step is to compute the

57
00:02:56,800 --> 00:02:59,200
correlation of the distinguish

58
00:02:59,200 --> 00:03:02,480
we expand it and get the equivalent

59
00:03:02,480 --> 00:03:05,120
linear approximation equation

60
00:03:05,120 --> 00:03:08,239
and observe that the black variables can

61
00:03:08,239 --> 00:03:10,720
be generated by the red ones

62
00:03:10,720 --> 00:03:13,599
because there is a one-to-one mapping

63
00:03:13,599 --> 00:03:15,760
between the red variables and the

64
00:03:15,760 --> 00:03:22,800
memories r 1 r 2 r 3 and the 3 rfsr tabs

65
00:03:22,800 --> 00:03:25,680
so it is easy to get the function that

66
00:03:25,680 --> 00:03:28,480
can generate the black variables using

67
00:03:28,480 --> 00:03:31,040
the red ones and the correlation of the

68
00:03:31,040 --> 00:03:33,920
equation is exactly the worst spectrum

69
00:03:33,920 --> 00:03:36,319
of this function

70
00:03:36,319 --> 00:03:38,720
and we construct

71
00:03:38,720 --> 00:03:42,080
six sub functions and their composite

72
00:03:42,080 --> 00:03:44,879
function f

73
00:03:45,280 --> 00:03:48,080
thus we have theorem one

74
00:03:48,080 --> 00:03:50,000
the correlation of this linear

75
00:03:50,000 --> 00:03:53,120
approximation of the function f is equal

76
00:03:53,120 --> 00:03:55,680
to that of the distinguishing

77
00:03:55,680 --> 00:03:58,159
by this we will convert the problem of

78
00:03:58,159 --> 00:04:00,879
finding distinguishers into searching

79
00:04:00,879 --> 00:04:02,159
for

80
00:04:02,159 --> 00:04:04,640
linear approximations of function f

81
00:04:04,640 --> 00:04:06,080
equivalently

82
00:04:06,080 --> 00:04:08,560
and we can evaluate the correlation of

83
00:04:08,560 --> 00:04:11,439
linear approximations by measuring the

84
00:04:11,439 --> 00:04:15,480
linear trials directly

85
00:04:15,840 --> 00:04:18,798
if this equation holds we'll get a

86
00:04:18,798 --> 00:04:21,040
linear approximation equation contains

87
00:04:21,040 --> 00:04:23,040
only the output words

88
00:04:23,040 --> 00:04:25,040
namely a distinguisher for

89
00:04:25,040 --> 00:04:28,000
distinguishing attack

90
00:04:28,000 --> 00:04:31,120
when the equation does not work we shall

91
00:04:31,120 --> 00:04:33,199
get a distinguisher for correlation

92
00:04:33,199 --> 00:04:34,479
attack

93
00:04:34,479 --> 00:04:37,360
the linear approximation process is

94
00:04:37,360 --> 00:04:39,919
shown here and we can search for linear

95
00:04:39,919 --> 00:04:43,680
trust on handling it

96
00:04:43,680 --> 00:04:46,320
the correlation of a linear trial can be

97
00:04:46,320 --> 00:04:48,479
calculated by this formula

98
00:04:48,479 --> 00:04:51,759
and get the accurate correlation of an

99
00:04:51,759 --> 00:04:54,080
approximation by summing up all the

100
00:04:54,080 --> 00:04:58,080
correlations of the trails containing it

101
00:04:58,080 --> 00:05:00,800
for snow 5 we can get the accurate

102
00:05:00,800 --> 00:05:03,199
correlation by exhausting the

103
00:05:03,199 --> 00:05:08,240
intermediate masks a b c d and q

104
00:05:09,440 --> 00:05:12,400
we modeled a set-based automatic search

105
00:05:12,400 --> 00:05:16,400
program and used the stp solver to

106
00:05:16,400 --> 00:05:18,240
search for linear trails with high

107
00:05:18,240 --> 00:05:19,759
correlations

108
00:05:19,759 --> 00:05:22,320
there are two mainly non-linear

109
00:05:22,320 --> 00:05:24,880
transformations in the approximation

110
00:05:24,880 --> 00:05:26,240
process

111
00:05:26,240 --> 00:05:30,560
the modular edition and the xbox

112
00:05:30,560 --> 00:05:32,680
for modular addition the

113
00:05:32,680 --> 00:05:35,919
characterization based on both set and

114
00:05:35,919 --> 00:05:37,199
mirp

115
00:05:37,199 --> 00:05:38,720
have been given

116
00:05:38,720 --> 00:05:41,039
we can characterize it

117
00:05:41,039 --> 00:05:44,560
in this way z is the dummy variable

118
00:05:44,560 --> 00:05:47,199
t is the parameter used to keep the

119
00:05:47,199 --> 00:05:50,000
modular addition the same precision as

120
00:05:50,000 --> 00:05:53,000
x-boxes

121
00:05:53,039 --> 00:05:56,000
here is the characterization of the xbox

122
00:05:56,000 --> 00:05:57,840
of aes

123
00:05:57,840 --> 00:06:00,880
we first adopted the idea of

124
00:06:00,880 --> 00:06:01,919
budel

125
00:06:01,919 --> 00:06:04,160
kalak to split the

126
00:06:04,160 --> 00:06:07,600
linear correlation a table into eight

127
00:06:07,600 --> 00:06:09,600
boolean functions

128
00:06:09,600 --> 00:06:12,240
then we need to get the product of sum

129
00:06:12,240 --> 00:06:15,199
representation of each blending function

130
00:06:15,199 --> 00:06:17,680
and convert it into a series of shorter

131
00:06:17,680 --> 00:06:20,639
constraints that are fully satisfied

132
00:06:20,639 --> 00:06:24,800
by the software logical friday

133
00:06:25,039 --> 00:06:27,120
finally we add the by objective

134
00:06:27,120 --> 00:06:28,560
constraint

135
00:06:28,560 --> 00:06:32,160
we can see that fk equals one if and

136
00:06:32,160 --> 00:06:34,720
only if the corresponding absolute

137
00:06:34,720 --> 00:06:39,280
correlation equals 4 times k divided by

138
00:06:39,280 --> 00:06:42,240
256

139
00:06:42,240 --> 00:06:45,759
as stp solver does not support the

140
00:06:45,759 --> 00:06:48,960
floating point data type we also use the

141
00:06:48,960 --> 00:06:53,840
parameter t to adjust its accuracy

142
00:06:54,319 --> 00:06:56,720
the absolute correlation of a child can

143
00:06:56,720 --> 00:06:59,680
be evaluated by summing up degrees of

144
00:06:59,680 --> 00:07:03,599
the modular additions and xboxes

145
00:07:03,599 --> 00:07:06,880
after stp solver returns a linear trail

146
00:07:06,880 --> 00:07:09,440
we verify it recompute

147
00:07:09,440 --> 00:07:14,080
its correlation and get its sign

148
00:07:14,400 --> 00:07:16,240
we can keep searching for other

149
00:07:16,240 --> 00:07:19,199
solutions by adding these constraints to

150
00:07:19,199 --> 00:07:22,160
avoid the same solution and we can

151
00:07:22,160 --> 00:07:25,039
approximate the accurate correlation

152
00:07:25,039 --> 00:07:28,080
step by step in this way

153
00:07:28,080 --> 00:07:30,479
and the best trail we've found is this

154
00:07:30,479 --> 00:07:32,719
one

155
00:07:33,039 --> 00:07:36,000
well we also folks focus on another

156
00:07:36,000 --> 00:07:38,000
child with a smaller absolute

157
00:07:38,000 --> 00:07:40,560
correlation

158
00:07:40,800 --> 00:07:43,120
in fact the trails we've searched out

159
00:07:43,120 --> 00:07:46,080
have part of masks in content and we can

160
00:07:46,080 --> 00:07:48,800
get the accurate correlation of these

161
00:07:48,800 --> 00:07:52,319
type of approximations by exhausting the

162
00:07:52,319 --> 00:07:54,720
intermediate masks

163
00:07:54,720 --> 00:07:57,039
by the property of modular addition we

164
00:07:57,039 --> 00:08:00,560
can reduce the exhaust of c to

165
00:08:00,560 --> 00:08:03,039
255

166
00:08:03,039 --> 00:08:07,039
and so as a b and q

167
00:08:07,120 --> 00:08:10,080
what d we proved zero is the unique

168
00:08:10,080 --> 00:08:13,080
solution

169
00:08:14,720 --> 00:08:17,599
thus we only need to exhaust the four

170
00:08:17,599 --> 00:08:20,400
bytes to get all the trials with zero

171
00:08:20,400 --> 00:08:23,039
correlations and reach the accurate

172
00:08:23,039 --> 00:08:27,120
correlation for fixed alpha beta gamma

173
00:08:27,120 --> 00:08:29,680
l m n and h

174
00:08:29,680 --> 00:08:32,479
we can also traverse two bytes of alpha

175
00:08:32,479 --> 00:08:34,880
and beta to find the absolute

176
00:08:34,880 --> 00:08:37,440
correlations as large as possible

177
00:08:37,440 --> 00:08:39,919
based on the two trials we have searched

178
00:08:39,919 --> 00:08:42,958
out we calculated their correlations

179
00:08:42,958 --> 00:08:47,760
the second one is the best result we got

180
00:08:48,880 --> 00:08:51,440
the last part is to launch a correlation

181
00:08:51,440 --> 00:08:55,360
on snow 5 using the distinguisher

182
00:08:55,360 --> 00:08:59,040
assume u and u hat are the initial state

183
00:08:59,040 --> 00:09:02,240
and guess the initial state respectively

184
00:09:02,240 --> 00:09:04,000
the distinguisher will show the

185
00:09:04,000 --> 00:09:07,120
correlation if you had equals u

186
00:09:07,120 --> 00:09:09,600
otherwise the distinguisher

187
00:09:09,600 --> 00:09:14,080
phi t shall be uniformly distributed

188
00:09:14,080 --> 00:09:17,040
we cannot guess all the initial state

189
00:09:17,040 --> 00:09:18,720
speeds at once

190
00:09:18,720 --> 00:09:20,839
so we will find some effective

191
00:09:20,839 --> 00:09:24,080
collisions such that part of the masks

192
00:09:24,080 --> 00:09:26,720
of the initial state are 0 in the

193
00:09:26,720 --> 00:09:30,080
pre-processing stage

194
00:09:30,160 --> 00:09:32,480
by collision we can get parity-check

195
00:09:32,480 --> 00:09:34,399
equations of this form

196
00:09:34,399 --> 00:09:36,880
which only contains part of initial

197
00:09:36,880 --> 00:09:38,800
state bits

198
00:09:38,800 --> 00:09:40,959
the number of check equations can be

199
00:09:40,959 --> 00:09:42,800
calculated from the collision

200
00:09:42,800 --> 00:09:45,760
probability

201
00:09:46,320 --> 00:09:49,200
in processing stage we set up the set

202
00:09:49,200 --> 00:09:51,200
statistic t

203
00:09:51,200 --> 00:09:54,000
evaluate each parity check equation by

204
00:09:54,000 --> 00:09:56,880
plugging output words and guess the

205
00:09:56,880 --> 00:09:58,320
initial states

206
00:09:58,320 --> 00:10:02,079
and predict the u hat that maximizes t

207
00:10:02,079 --> 00:10:04,399
as the correct one

208
00:10:04,399 --> 00:10:06,959
for the remaining bits we can recover

209
00:10:06,959 --> 00:10:11,120
them by repeating the same process

210
00:10:11,120 --> 00:10:13,360
thus we launched a correlation attack on

211
00:10:13,360 --> 00:10:14,959
snow five

212
00:10:14,959 --> 00:10:16,079
the best

213
00:10:16,079 --> 00:10:18,240
of our knowledge this is the first

214
00:10:18,240 --> 00:10:21,040
attack on force note 5 with the time

215
00:10:21,040 --> 00:10:23,360
complexity less than exhaustive key

216
00:10:23,360 --> 00:10:25,519
search

217
00:10:25,519 --> 00:10:27,360
question 6

218
00:10:27,360 --> 00:10:30,240
we can construct sub functions and the

219
00:10:30,240 --> 00:10:33,680
composite function in the same way

220
00:10:33,680 --> 00:10:36,320
the four lfsr tabs are mutually

221
00:10:36,320 --> 00:10:38,079
independent

222
00:10:38,079 --> 00:10:41,839
in snow 6 we shall take all of them and

223
00:10:41,839 --> 00:10:43,760
they input variables

224
00:10:43,760 --> 00:10:45,519
which differs from the composite

225
00:10:45,519 --> 00:10:49,279
function of slope 5.

226
00:10:49,760 --> 00:10:52,399
using the same method we can get the

227
00:10:52,399 --> 00:10:55,360
linear approximation process of it

228
00:10:55,360 --> 00:10:58,560
and the correlations of linear shots

229
00:10:58,560 --> 00:11:01,279
compared with the trails of snow 5 we

230
00:11:01,279 --> 00:11:03,680
have the observation that

231
00:11:03,680 --> 00:11:06,320
the linear approximation trials of snow

232
00:11:06,320 --> 00:11:07,200
six

233
00:11:07,200 --> 00:11:10,320
respond one to one to the trials with d

234
00:11:10,320 --> 00:11:14,399
equals zero of snow five

235
00:11:14,399 --> 00:11:16,880
and this observation indicates

236
00:11:16,880 --> 00:11:19,600
the set consisting of all linear trails

237
00:11:19,600 --> 00:11:25,600
of snow 6 is a subset of that of snow 5

238
00:11:26,320 --> 00:11:29,360
so the results of snow 5 are also

239
00:11:29,360 --> 00:11:32,640
appropriate for snow 6

240
00:11:32,640 --> 00:11:35,519
and the correlation attack on snow 5 is

241
00:11:35,519 --> 00:11:39,120
effective for snow 6 as well

242
00:11:39,120 --> 00:11:41,600
this is also the first attack better

243
00:11:41,600 --> 00:11:44,399
than exhaustive key search on full snow

244
00:11:44,399 --> 00:11:46,720
six

245
00:11:47,839 --> 00:11:50,480
to summarize we propose a carefully

246
00:11:50,480 --> 00:11:53,200
designed method to convert the linear

247
00:11:53,200 --> 00:11:54,639
approximation

248
00:11:54,639 --> 00:11:58,560
of the officer and part of snow 5 into

249
00:11:58,560 --> 00:12:00,560
that of our composite function

250
00:12:00,560 --> 00:12:03,040
equivalent

251
00:12:03,040 --> 00:12:05,760
based on this method we present a full

252
00:12:05,760 --> 00:12:09,360
coverage automatic search of snow 5 and

253
00:12:09,360 --> 00:12:12,720
find a valid binary distinguish

254
00:12:12,720 --> 00:12:14,880
using this pro

255
00:12:14,880 --> 00:12:17,519
submission we want the first correlation

256
00:12:17,519 --> 00:12:19,279
attack on 45

257
00:12:19,279 --> 00:12:22,000
with the time complexity less than

258
00:12:22,000 --> 00:12:25,040
exhaustive key search and we prove that

259
00:12:25,040 --> 00:12:28,000
the correlation attack is effective for

260
00:12:28,000 --> 00:12:30,880
snow six as well

261
00:12:30,880 --> 00:12:32,000
that's all

262
00:12:32,000 --> 00:12:35,720
thanks for your attention

