1
00:00:00,080 --> 00:00:02,080
working on and i said

2
00:00:02,080 --> 00:00:04,560
okay and i said on symmetry cryptography

3
00:00:04,560 --> 00:00:06,640
and then i he asked another question

4
00:00:06,640 --> 00:00:08,080
that was but is there anything left to

5
00:00:08,080 --> 00:00:10,080
do with symmetric photography so while i

6
00:00:10,080 --> 00:00:12,000
was preparing this talk i recall this

7
00:00:12,000 --> 00:00:14,559
situation and i think and i thought that

8
00:00:14,559 --> 00:00:16,720
the good aim of the talk would be to

9
00:00:16,720 --> 00:00:18,640
manage that's no one or to try at least

10
00:00:18,640 --> 00:00:19,920
that no one ever asks this question

11
00:00:19,920 --> 00:00:22,640
again so i will start

12
00:00:22,640 --> 00:00:24,400
saying just a few words about symmetry

13
00:00:24,400 --> 00:00:27,199
cryptography but before a disclaimer

14
00:00:27,199 --> 00:00:28,960
because parts of my work that will be

15
00:00:28,960 --> 00:00:30,960
cited during this talk wouldn't have

16
00:00:30,960 --> 00:00:32,719
been possible without my students

17
00:00:32,719 --> 00:00:34,960
without virginia xavier andrei antonio

18
00:00:34,960 --> 00:00:36,320
for nicolas

19
00:00:36,320 --> 00:00:38,399
no without the cosmic team

20
00:00:38,399 --> 00:00:40,000
and all my co-authors and in particular

21
00:00:40,000 --> 00:00:42,320
my colleagues ann guyton leo and roy

22
00:00:42,320 --> 00:00:44,000
anthony and christina so many many

23
00:00:44,000 --> 00:00:46,000
thanks to them and to my year sequencing

24
00:00:46,000 --> 00:00:47,280
model

25
00:00:47,280 --> 00:00:50,160
so i was saying we are going to start

26
00:00:50,160 --> 00:00:52,320
with a few words a few important things

27
00:00:52,320 --> 00:00:53,600
i wanted to say about symmetric

28
00:00:53,600 --> 00:00:55,120
cryptography

29
00:00:55,120 --> 00:00:57,600
and then i will talk more in detail

30
00:00:57,600 --> 00:00:58,480
about

31
00:00:58,480 --> 00:01:01,919
what orr just said about

32
00:01:02,320 --> 00:01:03,840
a big part of my work during the last

33
00:01:03,840 --> 00:01:05,920
years on quantum safe symmetric

34
00:01:05,920 --> 00:01:07,760
cryptography

35
00:01:07,760 --> 00:01:09,280
so i think it to understand the

36
00:01:09,280 --> 00:01:11,119
situation in symmetric cryptography it's

37
00:01:11,119 --> 00:01:12,560
very interest it's very important to

38
00:01:12,560 --> 00:01:14,960
understand what is our current scenario

39
00:01:14,960 --> 00:01:16,320
because we've had in the last two

40
00:01:16,320 --> 00:01:17,920
decades many competitions that have

41
00:01:17,920 --> 00:01:20,720
taken place so the as nessie stream chat

42
00:01:20,720 --> 00:01:21,840
three seashore the lightweight

43
00:01:21,840 --> 00:01:24,720
competition that is ongoing right now

44
00:01:24,720 --> 00:01:27,200
and so the outcome of this is that we

45
00:01:27,200 --> 00:01:28,720
have a lot of new standards new

46
00:01:28,720 --> 00:01:30,400
recommendations for a lot of different

47
00:01:30,400 --> 00:01:31,920
uh situations

48
00:01:31,920 --> 00:01:33,520
and that's why i think the question i

49
00:01:33,520 --> 00:01:35,439
got is kind of fair because maybe are we

50
00:01:35,439 --> 00:01:37,200
done now that we have a lot of things to

51
00:01:37,200 --> 00:01:38,240
use

52
00:01:38,240 --> 00:01:38,960
and

53
00:01:38,960 --> 00:01:40,799
the answer is clearly no and there are

54
00:01:40,799 --> 00:01:43,200
two main points why we're far from them

55
00:01:43,200 --> 00:01:45,040
the first one is that we need to

56
00:01:45,040 --> 00:01:46,640
continue analyzing these primitives that

57
00:01:46,640 --> 00:01:48,720
we have chosen and the second one is

58
00:01:48,720 --> 00:01:51,200
that new units might appear and we will

59
00:01:51,200 --> 00:01:53,600
need new primitives for constrained

60
00:01:53,600 --> 00:01:56,079
applications so i will develop a little

61
00:01:56,079 --> 00:01:57,680
bit more the first point regarding

62
00:01:57,680 --> 00:01:59,360
cryptanalysis

63
00:01:59,360 --> 00:02:01,119
because a primitive is secure as far as

64
00:02:01,119 --> 00:02:02,880
no attack on it it's known

65
00:02:02,880 --> 00:02:04,479
and the more we analyze a primitive with

66
00:02:04,479 --> 00:02:06,159
script analysis without finding any

67
00:02:06,159 --> 00:02:08,639
weaknesses the more reliable it is

68
00:02:08,639 --> 00:02:11,280
and that's why cryptanalysis is the

69
00:02:11,280 --> 00:02:13,200
foundation of the confidence we have on

70
00:02:13,200 --> 00:02:15,120
the primitives that we use

71
00:02:15,120 --> 00:02:15,920
and

72
00:02:15,920 --> 00:02:17,760
it's very important to design new

73
00:02:17,760 --> 00:02:19,360
attacks and to keep on improving the

74
00:02:19,360 --> 00:02:21,520
existing ones because this is essential

75
00:02:21,520 --> 00:02:23,680
to keep on trusting the primitives or

76
00:02:23,680 --> 00:02:25,440
more importantly to stop using the one

77
00:02:25,440 --> 00:02:28,000
that we found out to be insecure

78
00:02:28,000 --> 00:02:29,200
and

79
00:02:29,200 --> 00:02:30,640
i think it's fair to say that in

80
00:02:30,640 --> 00:02:32,080
symmetry cryptography were kind of

81
00:02:32,080 --> 00:02:34,160
paranoiac or we can be seen as kind of

82
00:02:34,160 --> 00:02:36,879
annoyed because

83
00:02:36,879 --> 00:02:38,720
we find that things are broken very

84
00:02:38,720 --> 00:02:40,560
easily sometimes very impractical

85
00:02:40,560 --> 00:02:41,599
attacks

86
00:02:41,599 --> 00:02:43,760
consider already a primitive break

87
00:02:43,760 --> 00:02:45,599
and i think there's a very good reason

88
00:02:45,599 --> 00:02:47,360
for this it's because

89
00:02:47,360 --> 00:02:49,360
attacks only get better with time and

90
00:02:49,360 --> 00:02:50,720
most of the times they represent

91
00:02:50,720 --> 00:02:52,400
properties that were not expected by

92
00:02:52,400 --> 00:02:55,440
designers so some weaknesses that that

93
00:02:55,440 --> 00:02:57,840
should concern us and that is better to

94
00:02:57,840 --> 00:02:59,360
be safe than sorry so

95
00:02:59,360 --> 00:03:00,879
this is better to be safe downstairs

96
00:03:00,879 --> 00:03:03,040
it's going to appear i think um at

97
00:03:03,040 --> 00:03:04,959
several points during the presentation

98
00:03:04,959 --> 00:03:06,560
and the second point that i mentioned

99
00:03:06,560 --> 00:03:09,360
was um that new needs for primitives or

100
00:03:09,360 --> 00:03:11,680
constructions might appear

101
00:03:11,680 --> 00:03:13,680
but what happens usually is that if

102
00:03:13,680 --> 00:03:15,440
units appear that are not

103
00:03:15,440 --> 00:03:17,200
satisfied by the current standards or

104
00:03:17,200 --> 00:03:19,040
recommendations and an official

105
00:03:19,040 --> 00:03:20,480
competition takes place so many

106
00:03:20,480 --> 00:03:22,400
proposals often appear

107
00:03:22,400 --> 00:03:25,040
and that's why with script analysis we

108
00:03:25,040 --> 00:03:26,720
try to find out what is the highest

109
00:03:26,720 --> 00:03:28,560
number of rounds that we can attack if

110
00:03:28,560 --> 00:03:31,120
we can so if we can break one of them of

111
00:03:31,120 --> 00:03:33,040
course we stop considering it but if we

112
00:03:33,040 --> 00:03:35,280
can't we try to see how far can we get

113
00:03:35,280 --> 00:03:37,760
attacking it so this number of rounds

114
00:03:37,760 --> 00:03:39,360
that's the highest number of rounds that

115
00:03:39,360 --> 00:03:41,200
we can attack gives us an idea of how

116
00:03:41,200 --> 00:03:43,280
many rounds we have left and that's what

117
00:03:43,280 --> 00:03:45,120
we call the security margin which is

118
00:03:45,120 --> 00:03:47,200
very important for comparing all these

119
00:03:47,200 --> 00:03:50,000
proposals and those that have a

120
00:03:50,000 --> 00:03:52,080
a decent security margin then are

121
00:03:52,080 --> 00:03:54,319
compared with regarding to efficient

122
00:03:54,319 --> 00:03:56,159
different types of efficiency

123
00:03:56,159 --> 00:03:57,599
and lately there have been a lot of new

124
00:03:57,599 --> 00:03:58,879
needs that have appeared that we will

125
00:03:58,879 --> 00:04:01,599
see a bit more later like said can fhe

126
00:04:01,599 --> 00:04:03,200
friendly low latencies in masking

127
00:04:03,200 --> 00:04:05,760
quantum save and sometimes this implies

128
00:04:05,760 --> 00:04:08,480
very innovative designs

129
00:04:08,480 --> 00:04:10,959
and new ideas and analysis needs to be

130
00:04:10,959 --> 00:04:13,200
proposed so it's a very important part

131
00:04:13,200 --> 00:04:15,040
of our work

132
00:04:15,040 --> 00:04:15,760
and

133
00:04:15,760 --> 00:04:18,079
now i'm going to just mention quite

134
00:04:18,079 --> 00:04:20,399
briefly a very short selection of a

135
00:04:20,399 --> 00:04:22,320
short list of my favorite results in the

136
00:04:22,320 --> 00:04:25,199
last 10 years on cemetery lithography

137
00:04:25,199 --> 00:04:27,360
there are many that will stay not

138
00:04:27,360 --> 00:04:29,360
mentioned and happily but i don't have

139
00:04:29,360 --> 00:04:31,280
time to go through all of them

140
00:04:31,280 --> 00:04:33,360
so uh in these last 10 years there have

141
00:04:33,360 --> 00:04:34,800
been some

142
00:04:34,800 --> 00:04:37,120
some devastating attacks and some widely

143
00:04:37,120 --> 00:04:40,400
implemented constructions for instance

144
00:04:40,400 --> 00:04:42,639
we we had been waiting for one collision

145
00:04:42,639 --> 00:04:45,120
since the theoretical uh coalition

146
00:04:45,120 --> 00:04:47,600
attacks from one in 2005 and it was in

147
00:04:47,600 --> 00:04:50,400
2017 that stephen sid al uh proposed the

148
00:04:50,400 --> 00:04:51,280
first

149
00:04:51,280 --> 00:04:53,360
found the first jawan coalition and

150
00:04:53,360 --> 00:04:57,040
later in 2020 laurent vera

151
00:04:57,040 --> 00:04:58,560
showed how to build chosen prefix

152
00:04:58,560 --> 00:05:00,080
collisions that was completely

153
00:05:00,080 --> 00:05:01,520
devastating

154
00:05:01,520 --> 00:05:03,520
less expected were the practical attacks

155
00:05:03,520 --> 00:05:06,560
that inuyadal proposed in 2019

156
00:05:06,560 --> 00:05:09,199
on the operation mode an iso standard

157
00:05:09,199 --> 00:05:10,720
ocv2

158
00:05:10,720 --> 00:05:13,199
that was a widely used 15 year old

159
00:05:13,199 --> 00:05:14,720
construction

160
00:05:14,720 --> 00:05:17,520
and recently last year attacks on around

161
00:05:17,520 --> 00:05:20,880
2 to the 40 were proposed on the gprs

162
00:05:20,880 --> 00:05:22,560
encryption

163
00:05:22,560 --> 00:05:26,080
algorithms gl1 and ga2 and in particular

164
00:05:26,080 --> 00:05:27,919
ga1

165
00:05:27,919 --> 00:05:30,639
it's suggested that the backdoor was

166
00:05:30,639 --> 00:05:32,479
was introduced so that the security

167
00:05:32,479 --> 00:05:34,720
couldn't be higher than 40 bits and

168
00:05:34,720 --> 00:05:37,680
yesterday it i presented some

169
00:05:37,680 --> 00:05:39,199
some improvements some very nice

170
00:05:39,199 --> 00:05:41,520
improvements of these attacks in in the

171
00:05:41,520 --> 00:05:44,240
afternoon sessions

172
00:05:44,240 --> 00:05:47,280
so besides these attacks on concrete

173
00:05:47,280 --> 00:05:49,600
instances we have also seen some new

174
00:05:49,600 --> 00:05:51,360
families of attacks appear for instance

175
00:05:51,360 --> 00:05:54,720
one i think of the most uh

176
00:05:54,720 --> 00:05:56,479
of the most uh

177
00:05:56,479 --> 00:05:58,479
non-expected ones once was a division

178
00:05:58,479 --> 00:06:01,280
property introduced by todo in 2015

179
00:06:01,280 --> 00:06:03,280
that proposes a generalization of

180
00:06:03,280 --> 00:06:04,880
integral attack and high order

181
00:06:04,880 --> 00:06:07,039
differentials but in addition allows to

182
00:06:07,039 --> 00:06:10,080
take into account more finer properties

183
00:06:10,080 --> 00:06:11,360
like for instance the three subset

184
00:06:11,360 --> 00:06:13,199
division property there have been

185
00:06:13,199 --> 00:06:15,759
several tools and algorithm proposed to

186
00:06:15,759 --> 00:06:18,319
to find this kind of attacks because

187
00:06:18,319 --> 00:06:19,360
it's

188
00:06:19,360 --> 00:06:21,280
i think it's explained in a way where

189
00:06:21,280 --> 00:06:24,000
tools are easy to to build them to apply

190
00:06:24,000 --> 00:06:25,840
and it's also important to say that it

191
00:06:25,840 --> 00:06:28,319
can be combined um very good with cube

192
00:06:28,319 --> 00:06:29,919
attacks which has allowed to provide the

193
00:06:29,919 --> 00:06:31,680
best known attacks on several stream

194
00:06:31,680 --> 00:06:33,919
ciphers very popular stream ciphertext

195
00:06:33,919 --> 00:06:36,000
driven and grain128

196
00:06:36,000 --> 00:06:38,080
and also it allowed to propose a full

197
00:06:38,080 --> 00:06:40,080
break of missy one which is a widely

198
00:06:40,080 --> 00:06:41,759
implemented primitive

199
00:06:41,759 --> 00:06:43,680
but there are not practical attacks for

200
00:06:43,680 --> 00:06:45,840
now and a lot of development has been uh

201
00:06:45,840 --> 00:06:47,600
have taken place in in this kind of

202
00:06:47,600 --> 00:06:50,000
attacks during the last years

203
00:06:50,000 --> 00:06:52,880
and regarding designs uh one of the

204
00:06:52,880 --> 00:06:55,039
of the most important trends i think it

205
00:06:55,039 --> 00:06:58,319
has been to um to propose um

206
00:06:58,319 --> 00:07:00,160
new constructions that are adequate for

207
00:07:00,160 --> 00:07:04,160
mpc fhe can friendly easy masking and i

208
00:07:04,160 --> 00:07:06,000
think we can there are more than that i

209
00:07:06,000 --> 00:07:07,440
have not put in the slide but i think

210
00:07:07,440 --> 00:07:09,199
mainly we can classify them in three

211
00:07:09,199 --> 00:07:11,919
packets the first one is

212
00:07:11,919 --> 00:07:13,440
the constructions that use partial

213
00:07:13,440 --> 00:07:16,319
non-linear layers like zoro low mc addis

214
00:07:16,319 --> 00:07:17,520
position

215
00:07:17,520 --> 00:07:19,599
and there were some some attacks on some

216
00:07:19,599 --> 00:07:21,280
preliminary versions for instance soro

217
00:07:21,280 --> 00:07:24,080
the one i proposed was completely broken

218
00:07:24,080 --> 00:07:26,000
and but i think we have learned a lot

219
00:07:26,000 --> 00:07:27,360
from this and

220
00:07:27,360 --> 00:07:30,000
many nice results have came out and

221
00:07:30,000 --> 00:07:31,840
there's also some that are string cipher

222
00:07:31,840 --> 00:07:34,160
based like premium and flip

223
00:07:34,160 --> 00:07:35,440
and also some crypto analysis have

224
00:07:35,440 --> 00:07:38,080
appeared in this in this part

225
00:07:38,080 --> 00:07:40,319
and i think the in particular maybe the

226
00:07:40,319 --> 00:07:43,440
most promising and interesting uh

227
00:07:43,440 --> 00:07:45,599
branch would be the ones that use large

228
00:07:45,599 --> 00:07:47,280
fields like the mean c construction

229
00:07:47,280 --> 00:07:50,720
proposed by albert al in 2016 that uses

230
00:07:50,720 --> 00:07:52,479
a round function of x to the power of

231
00:07:52,479 --> 00:07:54,720
three

232
00:07:54,720 --> 00:07:56,160
and actually there are many other

233
00:07:56,160 --> 00:07:57,599
important results that i would have

234
00:07:57,599 --> 00:07:59,520
liked to mention but i can't so in

235
00:07:59,520 --> 00:08:00,560
design for instance there are

236
00:08:00,560 --> 00:08:02,400
permutation based construction which is

237
00:08:02,400 --> 00:08:04,240
a new imports a very important direction

238
00:08:04,240 --> 00:08:06,000
that has taken place in the last 10

239
00:08:06,000 --> 00:08:07,039
years

240
00:08:07,039 --> 00:08:08,879
and there have been many attack

241
00:08:08,879 --> 00:08:10,639
improvements that considerably improve

242
00:08:10,639 --> 00:08:12,160
the efficiency of the most popular

243
00:08:12,160 --> 00:08:13,280
attacks

244
00:08:13,280 --> 00:08:15,280
and other new families of attacks like

245
00:08:15,280 --> 00:08:17,680
environmental space attacks the use of

246
00:08:17,680 --> 00:08:21,520
milp for proposing new tools

247
00:08:21,520 --> 00:08:23,599
as a technique for

248
00:08:23,599 --> 00:08:26,479
building better attacks and

249
00:08:26,479 --> 00:08:28,240
and

250
00:08:28,240 --> 00:08:30,080
and also a lot of important and

251
00:08:30,080 --> 00:08:32,080
interesting algorithmic results that

252
00:08:32,080 --> 00:08:34,559
unhappily i'm not able to talk about

253
00:08:34,559 --> 00:08:37,039
and also here they don't appear the

254
00:08:37,039 --> 00:08:38,880
quantum safe or the quantum related

255
00:08:38,880 --> 00:08:40,719
symmetric key stuff because we're going

256
00:08:40,719 --> 00:08:43,360
to talk more in detail later

257
00:08:43,360 --> 00:08:45,200
so just to finish with the introduction

258
00:08:45,200 --> 00:08:46,959
i will say a little bit some things that

259
00:08:46,959 --> 00:08:48,240
i think would be interesting to do in

260
00:08:48,240 --> 00:08:50,959
the next 10 years

261
00:08:50,959 --> 00:08:52,959
so regarding cryptanalysis if we

262
00:08:52,959 --> 00:08:54,959
understand the context that i presented

263
00:08:54,959 --> 00:08:56,480
in the beginning where we have had a lot

264
00:08:56,480 --> 00:08:58,640
of competitions and a lot of proposals

265
00:08:58,640 --> 00:08:59,360
and

266
00:08:59,360 --> 00:09:01,440
many crypto analyses have appeared the

267
00:09:01,440 --> 00:09:03,360
problem with this is that a lot of times

268
00:09:03,360 --> 00:09:05,680
new attacks appear in the context of a

269
00:09:05,680 --> 00:09:08,240
dedicated attack in a concrete cypher or

270
00:09:08,240 --> 00:09:09,920
in a concrete primitive

271
00:09:09,920 --> 00:09:11,839
and that makes the attack very technical

272
00:09:11,839 --> 00:09:14,000
and very hard to extract what is the

273
00:09:14,000 --> 00:09:15,680
essence of the attack how to improve it

274
00:09:15,680 --> 00:09:18,160
and how to generally apply it to other

275
00:09:18,160 --> 00:09:20,800
things so that's why i think

276
00:09:20,800 --> 00:09:22,320
one of the most important tasks

277
00:09:22,320 --> 00:09:24,080
regarding crypto analysis would be to

278
00:09:24,080 --> 00:09:27,360
generalize and improve existing families

279
00:09:27,360 --> 00:09:29,200
so this allows to automatize the

280
00:09:29,200 --> 00:09:31,360
application a lot of times shows new

281
00:09:31,360 --> 00:09:33,040
ideas to improve it

282
00:09:33,040 --> 00:09:35,440
and this is a task that that has already

283
00:09:35,440 --> 00:09:37,120
been started but but there is still a

284
00:09:37,120 --> 00:09:38,880
lot of work to do here

285
00:09:38,880 --> 00:09:40,720
uh it's important of course to keep on

286
00:09:40,720 --> 00:09:42,800
proposing new families and to keep on

287
00:09:42,800 --> 00:09:44,480
building dedicated attacks for instance

288
00:09:44,480 --> 00:09:46,240
for the lightweight competition that is

289
00:09:46,240 --> 00:09:47,680
ongoing

290
00:09:47,680 --> 00:09:50,800
and consider new scenarios like we said

291
00:09:50,800 --> 00:09:52,800
when we have large fields or post

292
00:09:52,800 --> 00:09:54,399
quantum settings

293
00:09:54,399 --> 00:09:56,800
that might make us rethink a little bit

294
00:09:56,800 --> 00:09:57,680
the way

295
00:09:57,680 --> 00:10:00,080
we have of doing crypt analysis

296
00:10:00,080 --> 00:10:03,040
and it's very important also to design

297
00:10:03,040 --> 00:10:04,399
more because there are already quite

298
00:10:04,399 --> 00:10:05,680
some but i think it's important to

299
00:10:05,680 --> 00:10:06,800
continue in this direction more

300
00:10:06,800 --> 00:10:08,560
automatic tools for cryptanalysis that

301
00:10:08,560 --> 00:10:09,839
will allow to

302
00:10:09,839 --> 00:10:11,760
to avoid a lot of bugs that we have

303
00:10:11,760 --> 00:10:13,680
sometimes all the technical and the

304
00:10:13,680 --> 00:10:16,079
complicated parts that we need

305
00:10:16,079 --> 00:10:18,240
for building them and to optimize uh

306
00:10:18,240 --> 00:10:19,920
their construction

307
00:10:19,920 --> 00:10:22,240
and regarding design um

308
00:10:22,240 --> 00:10:23,839
well there's always new designs to

309
00:10:23,839 --> 00:10:26,560
propose i think regarding setka friendly

310
00:10:26,560 --> 00:10:28,240
it's a very interesting direction of

311
00:10:28,240 --> 00:10:30,000
direction to consider the primitives

312
00:10:30,000 --> 00:10:32,320
based on large fields versus binary in

313
00:10:32,320 --> 00:10:34,959
the most cases in symmetric now there

314
00:10:34,959 --> 00:10:36,800
are some proposals very interesting but

315
00:10:36,800 --> 00:10:38,640
there's still much to learn

316
00:10:38,640 --> 00:10:40,160
because it might be interesting to

317
00:10:40,160 --> 00:10:42,240
redesign cryptanalysis

318
00:10:42,240 --> 00:10:43,680
to know what we can do and maybe that

319
00:10:43,680 --> 00:10:46,399
will allow us to propose more adapted

320
00:10:46,399 --> 00:10:47,760
primitives

321
00:10:47,760 --> 00:10:49,519
and regarding the permutation based

322
00:10:49,519 --> 00:10:51,200
constructions i think would be nice to

323
00:10:51,200 --> 00:10:52,800
better understand the security better

324
00:10:52,800 --> 00:10:55,040
understand what the properties that we

325
00:10:55,040 --> 00:10:56,880
can find in the inner permutations mean

326
00:10:56,880 --> 00:10:59,120
regarding security which are dangerous

327
00:10:59,120 --> 00:11:01,279
which not and maybe proposing more

328
00:11:01,279 --> 00:11:04,560
designs in this direction also

329
00:11:04,560 --> 00:11:05,680
and

330
00:11:05,680 --> 00:11:06,880
the same way i also think it would be

331
00:11:06,880 --> 00:11:08,720
nice to try to provide better security

332
00:11:08,720 --> 00:11:10,480
arguments with respect to particular

333
00:11:10,480 --> 00:11:12,640
attacks when we design some cyphers

334
00:11:12,640 --> 00:11:14,800
because i think when we design cyprus

335
00:11:14,800 --> 00:11:15,839
it's not all

336
00:11:15,839 --> 00:11:18,240
always super clear or super well done

337
00:11:18,240 --> 00:11:20,560
the uh also because it's not easy it's

338
00:11:20,560 --> 00:11:22,079
not because we're sloppies because it's

339
00:11:22,079 --> 00:11:23,920
very hard to do a

340
00:11:23,920 --> 00:11:26,399
well done security analysis and i think

341
00:11:26,399 --> 00:11:28,160
trying to propose things to avoid this

342
00:11:28,160 --> 00:11:31,279
would be very very nice and always be uh

343
00:11:31,279 --> 00:11:33,120
attentive to new emerging applications

344
00:11:33,120 --> 00:11:34,959
and the last point is quantum safe for

345
00:11:34,959 --> 00:11:36,399
symmetric cryptography that is what i'm

346
00:11:36,399 --> 00:11:38,640
going to talk about right now

347
00:11:38,640 --> 00:11:40,480
so as all said i've been

348
00:11:40,480 --> 00:11:43,760
that's been a part of of my main job

349
00:11:43,760 --> 00:11:46,000
for the last i don't know

350
00:11:46,000 --> 00:11:48,240
six seven years

351
00:11:48,240 --> 00:11:50,160
and the upline of these parts of the

352
00:11:50,160 --> 00:11:52,240
talk is going first i will introduce the

353
00:11:52,240 --> 00:11:54,399
main scenarios used in quantum symmetry

354
00:11:54,399 --> 00:11:56,560
cryptanalysis and i will present some

355
00:11:56,560 --> 00:11:58,959
quantum tools as a black box that will

356
00:11:58,959 --> 00:12:01,120
be uh cited in the remaining part of the

357
00:12:01,120 --> 00:12:03,040
paper in the of the paper and author of

358
00:12:03,040 --> 00:12:03,760
the

359
00:12:03,760 --> 00:12:05,040
of the talk

360
00:12:05,040 --> 00:12:05,839
and

361
00:12:05,839 --> 00:12:07,200
then i will

362
00:12:07,200 --> 00:12:09,760
summarize the main recent quantum

363
00:12:09,760 --> 00:12:12,160
attacks or quantum results that we have

364
00:12:12,160 --> 00:12:14,000
obtained and i will give a bit of

365
00:12:14,000 --> 00:12:16,079
technical details about two points one

366
00:12:16,079 --> 00:12:18,639
is q2 attacks we will see an evolution

367
00:12:18,639 --> 00:12:20,639
from standard simon attacks to

368
00:12:20,639 --> 00:12:22,560
linearization we will see what it means

369
00:12:22,560 --> 00:12:24,560
later and we will also see what are the

370
00:12:24,560 --> 00:12:26,959
offline simon attacks and how they work

371
00:12:26,959 --> 00:12:28,560
and we will end with some open problems

372
00:12:28,560 --> 00:12:30,959
and conclusions

373
00:12:30,959 --> 00:12:31,760
so

374
00:12:31,760 --> 00:12:33,680
in post quantum cryptography we consider

375
00:12:33,680 --> 00:12:35,440
that adversaries have access to quantum

376
00:12:35,440 --> 00:12:37,200
computers

377
00:12:37,200 --> 00:12:39,360
and in the asymmetric case we know that

378
00:12:39,360 --> 00:12:41,040
uh schwarz algorithm would allow to

379
00:12:41,040 --> 00:12:43,519
perform factorization in polynomial time

380
00:12:43,519 --> 00:12:45,360
and that's why most currently used

381
00:12:45,360 --> 00:12:47,360
systems more the most likely the process

382
00:12:47,360 --> 00:12:48,800
systems are not secure wouldn't be

383
00:12:48,800 --> 00:12:50,800
secure anymore under these

384
00:12:50,800 --> 00:12:52,639
hypotheses and that's why the community

385
00:12:52,639 --> 00:12:55,839
is looking for solutions so there's the

386
00:12:55,839 --> 00:12:57,440
you all know about the nice competition

387
00:12:57,440 --> 00:13:00,000
for post quantum primitives and we have

388
00:13:00,000 --> 00:13:02,160
flat space for base and

389
00:13:02,160 --> 00:13:04,000
and this is a very developed and

390
00:13:04,000 --> 00:13:05,839
interesting fields in the moment and

391
00:13:05,839 --> 00:13:08,320
regarding symmetry cryptography uh for a

392
00:13:08,320 --> 00:13:11,360
long time we thought that

393
00:13:11,360 --> 00:13:13,200
we had robert's algorithm that allows to

394
00:13:13,200 --> 00:13:14,720
perform exhaustive search in the square

395
00:13:14,720 --> 00:13:16,560
root of the classical time

396
00:13:16,560 --> 00:13:18,880
so doubling the kid length

397
00:13:18,880 --> 00:13:20,959
would be enough for providing an ideal

398
00:13:20,959 --> 00:13:23,279
equivalent security in this setting

399
00:13:23,279 --> 00:13:25,200
but there was an important question that

400
00:13:25,200 --> 00:13:27,760
that wasn't really answered or that we

401
00:13:27,760 --> 00:13:29,600
hadn't really looked at for a long time

402
00:13:29,600 --> 00:13:31,760
that was what about crypto analysis when

403
00:13:31,760 --> 00:13:33,760
having quantum computing available so

404
00:13:33,760 --> 00:13:36,240
let me develop this a little bit more

405
00:13:36,240 --> 00:13:39,519
so to say what does broken mean for us

406
00:13:39,519 --> 00:13:40,800
so um

407
00:13:40,800 --> 00:13:43,360
the security of uh primitive normally

408
00:13:43,360 --> 00:13:45,279
it's defined by the best generic attacks

409
00:13:45,279 --> 00:13:47,360
we can perform on it so we consider

410
00:13:47,360 --> 00:13:49,519
block ciphers the security of an ideal

411
00:13:49,519 --> 00:13:51,839
block cipher is defined by its best

412
00:13:51,839 --> 00:13:53,279
generic attack which is exhaustive

413
00:13:53,279 --> 00:13:56,079
search that would take two to the uh

414
00:13:56,079 --> 00:13:57,600
size of the key classically and the

415
00:13:57,600 --> 00:14:00,000
square root of this quantum leap

416
00:14:00,000 --> 00:14:02,320
and the question that a cryptanalyst

417
00:14:02,320 --> 00:14:03,360
needs to

418
00:14:03,360 --> 00:14:05,199
needs to take care of now is that real

419
00:14:05,199 --> 00:14:07,839
security meets this ideal security

420
00:14:07,839 --> 00:14:09,519
and to answer this we need to perform

421
00:14:09,519 --> 00:14:11,360
continuous security evaluations on the

422
00:14:11,360 --> 00:14:13,680
on the constructions because any attack

423
00:14:13,680 --> 00:14:15,120
that we will find better than generic

424
00:14:15,120 --> 00:14:18,320
attack will be considered a break

425
00:14:18,320 --> 00:14:20,480
and it's important to remark something

426
00:14:20,480 --> 00:14:22,000
that is not very intuitive for everyone

427
00:14:22,000 --> 00:14:23,360
in the beginning

428
00:14:23,360 --> 00:14:25,040
so

429
00:14:25,040 --> 00:14:26,800
as we said attacks are considered

430
00:14:26,800 --> 00:14:28,480
attacks when they are better than best

431
00:14:28,480 --> 00:14:31,120
generic attacks and if quantumly the

432
00:14:31,120 --> 00:14:33,680
generic attack is accelerated but the

433
00:14:33,680 --> 00:14:35,839
related attack is less accelerated than

434
00:14:35,839 --> 00:14:37,440
the generic one it might happen that

435
00:14:37,440 --> 00:14:39,199
broken clinical primitives will become

436
00:14:39,199 --> 00:14:41,199
unbroken in the quantum setting which

437
00:14:41,199 --> 00:14:43,440
can seem a bit

438
00:14:43,440 --> 00:14:45,600
strange but actually what this means is

439
00:14:45,600 --> 00:14:47,079
that the primitive might not have

440
00:14:47,079 --> 00:14:49,360
256-bit security against a classical

441
00:14:49,360 --> 00:14:51,199
adversary but might have 128 bits

442
00:14:51,199 --> 00:14:52,880
against a quantum one which i think it's

443
00:14:52,880 --> 00:14:54,560
very clear

444
00:14:54,560 --> 00:14:56,639
and so before getting more into the

445
00:14:56,639 --> 00:14:58,320
technical part we need to mention the

446
00:14:58,320 --> 00:15:00,000
main scenarios that

447
00:15:00,000 --> 00:15:01,440
have been used in

448
00:15:01,440 --> 00:15:03,760
in symmetrical quantum cryptanalysis

449
00:15:03,760 --> 00:15:05,760
and for this we need to present the

450
00:15:05,760 --> 00:15:07,600
types of complexities that we can use in

451
00:15:07,600 --> 00:15:09,760
an attack so we have time of course that

452
00:15:09,760 --> 00:15:11,680
can be classical or quantum when we use

453
00:15:11,680 --> 00:15:14,000
a quantum computer we have queries that

454
00:15:14,000 --> 00:15:16,160
can be classical or quantum and these

455
00:15:16,160 --> 00:15:18,079
queries are going to be very important

456
00:15:18,079 --> 00:15:19,680
for defining the scenarios that we will

457
00:15:19,680 --> 00:15:20,800
see later

458
00:15:20,800 --> 00:15:22,959
so classical queries there's nothing

459
00:15:22,959 --> 00:15:25,199
important to say there is craze to

460
00:15:25,199 --> 00:15:27,600
an encryption oracle and quantum queries

461
00:15:27,600 --> 00:15:29,440
are calls in superposition to a quantum

462
00:15:29,440 --> 00:15:31,600
cryptographic oracle so that's much more

463
00:15:31,600 --> 00:15:33,360
stronger it's a much more stronger

464
00:15:33,360 --> 00:15:34,880
setting than just asking classical

465
00:15:34,880 --> 00:15:36,160
queries

466
00:15:36,160 --> 00:15:37,759
and we also have the memory that can be

467
00:15:37,759 --> 00:15:40,000
classical or can be quantum and quantum

468
00:15:40,000 --> 00:15:41,920
memory can be classified in several

469
00:15:41,920 --> 00:15:43,440
types for instance we can only need a

470
00:15:43,440 --> 00:15:45,600
small quantum of a small amount of

471
00:15:45,600 --> 00:15:49,120
qubits just for the register

472
00:15:49,120 --> 00:15:50,480
where we put the state where we are

473
00:15:50,480 --> 00:15:52,320
performing the quantum operations or we

474
00:15:52,320 --> 00:15:55,759
can also need qram memories that's uh

475
00:15:55,759 --> 00:15:57,199
that's

476
00:15:57,199 --> 00:15:59,758
much more

477
00:16:00,320 --> 00:16:03,040
much less realistic um

478
00:16:03,040 --> 00:16:04,480
but these memories also can be

479
00:16:04,480 --> 00:16:06,880
classified into types quantum access

480
00:16:06,880 --> 00:16:08,399
classical memories or quantum access

481
00:16:08,399 --> 00:16:09,839
quantum memory so

482
00:16:09,839 --> 00:16:11,600
a first very simple classification

483
00:16:11,600 --> 00:16:13,680
regarding attacks is uh can be done

484
00:16:13,680 --> 00:16:16,000
regarding memory so it's very obvious to

485
00:16:16,000 --> 00:16:17,920
say that the lex the less complex the

486
00:16:17,920 --> 00:16:19,519
memory is and the less memory we need

487
00:16:19,519 --> 00:16:21,519
the more realistic will be the scenario

488
00:16:21,519 --> 00:16:23,680
and it's interesting sometimes to limit

489
00:16:23,680 --> 00:16:26,079
the uh the memory that we are allowed to

490
00:16:26,079 --> 00:16:28,000
use in an attack to develop better

491
00:16:28,000 --> 00:16:30,160
different algorithms but does that not

492
00:16:30,160 --> 00:16:31,920
mean that uh

493
00:16:31,920 --> 00:16:33,279
attacks using

494
00:16:33,279 --> 00:16:35,519
qram are not interesting i think from a

495
00:16:35,519 --> 00:16:36,720
theoretical point of view it's always

496
00:16:36,720 --> 00:16:38,560
interesting algorithmically

497
00:16:38,560 --> 00:16:40,240
and a lot of times

498
00:16:40,240 --> 00:16:41,680
this also

499
00:16:41,680 --> 00:16:43,440
gives some ideas for improving attacks

500
00:16:43,440 --> 00:16:46,959
in in other with other types of memories

501
00:16:46,959 --> 00:16:49,199
so now we can go to the four consider

502
00:16:49,199 --> 00:16:51,519
scenarios that i mentioned before

503
00:16:51,519 --> 00:16:53,519
so sorry let me just drink a bit of

504
00:16:53,519 --> 00:16:55,920
water

505
00:16:59,360 --> 00:17:00,480
so we have

506
00:17:00,480 --> 00:17:02,480
the q0 model for instance which is just

507
00:17:02,480 --> 00:17:03,680
a classical model where we have

508
00:17:03,680 --> 00:17:05,919
classical time and classical queries

509
00:17:05,919 --> 00:17:08,799
then the first quantum model is q1

510
00:17:08,799 --> 00:17:10,720
that considers q0 and in addition

511
00:17:10,720 --> 00:17:12,640
quantum time so we have a quantum

512
00:17:12,640 --> 00:17:15,119
computer for performing some quantum

513
00:17:15,119 --> 00:17:18,079
operations model q2 would be q1 but in

514
00:17:18,079 --> 00:17:19,520
addition we are allowed to perform the

515
00:17:19,520 --> 00:17:21,119
quantum queries as i mentioned before we

516
00:17:21,119 --> 00:17:23,119
are allowed to perform queries in

517
00:17:23,119 --> 00:17:24,720
superposition to a quantum encryption

518
00:17:24,720 --> 00:17:27,199
oracle and then a third model that is

519
00:17:27,199 --> 00:17:29,440
too strong and that

520
00:17:29,440 --> 00:17:31,120
there's no point in studying it anymore

521
00:17:31,120 --> 00:17:33,520
we will see why is uh that one that we

522
00:17:33,520 --> 00:17:35,360
can call q3 with that would consider

523
00:17:35,360 --> 00:17:37,840
model q1 and in addition we are allowed

524
00:17:37,840 --> 00:17:40,000
to perform superposition queries on the

525
00:17:40,000 --> 00:17:42,240
difference of a secret key to a quantum

526
00:17:42,240 --> 00:17:44,640
cryptographic oracle so that can be seen

527
00:17:44,640 --> 00:17:46,559
as the equivalent to quantum related key

528
00:17:46,559 --> 00:17:48,400
attacks kind of so this is an even

529
00:17:48,400 --> 00:17:50,559
stronger model

530
00:17:50,559 --> 00:17:52,000
so let me say a few words about the

531
00:17:52,000 --> 00:17:54,400
frequency of models q1 i recall it was

532
00:17:54,400 --> 00:17:57,280
quantum time but classical queries

533
00:17:57,280 --> 00:17:59,039
until recently the best we had obtained

534
00:17:59,039 --> 00:18:01,039
here was a quadratic speed up

535
00:18:01,039 --> 00:18:02,640
and we will see later why the answer is

536
00:18:02,640 --> 00:18:03,679
recently

537
00:18:03,679 --> 00:18:05,440
but it can be smaller actually so

538
00:18:05,440 --> 00:18:06,799
sometimes the speed up we get is less

539
00:18:06,799 --> 00:18:08,080
than quadratic

540
00:18:08,080 --> 00:18:10,480
and when this is the case if we compare

541
00:18:10,480 --> 00:18:12,799
with exhaustive search that implies that

542
00:18:12,799 --> 00:18:14,880
if a primitive was safe in q0 it's also

543
00:18:14,880 --> 00:18:16,799
going to be safe in q1

544
00:18:16,799 --> 00:18:17,760
so

545
00:18:17,760 --> 00:18:19,520
it's an interesting question to say okay

546
00:18:19,520 --> 00:18:20,640
then

547
00:18:20,640 --> 00:18:22,160
we've seen it

548
00:18:22,160 --> 00:18:24,640
several times q1 scenarios that do not

549
00:18:24,640 --> 00:18:26,240
improve more than quadratic are not

550
00:18:26,240 --> 00:18:28,960
interesting results and the answer is no

551
00:18:28,960 --> 00:18:31,360
so they are interesting results

552
00:18:31,360 --> 00:18:32,080
and

553
00:18:32,080 --> 00:18:34,000
let me develop a bit

554
00:18:34,000 --> 00:18:36,240
this so the first point i think that

555
00:18:36,240 --> 00:18:38,400
it's because in a post quantum future

556
00:18:38,400 --> 00:18:40,320
classical and quantum names will

557
00:18:40,320 --> 00:18:41,679
disappear

558
00:18:41,679 --> 00:18:43,679
so we will have an expected security

559
00:18:43,679 --> 00:18:45,840
that will be given by the best generic

560
00:18:45,840 --> 00:18:48,799
attack so very likely it will be grover

561
00:18:48,799 --> 00:18:50,400
and then the security margin that we

562
00:18:50,400 --> 00:18:52,240
mentioned before so how far away from

563
00:18:52,240 --> 00:18:54,160
breaking the primitives will be

564
00:18:54,160 --> 00:18:56,880
decimated by performing crypto analysis

565
00:18:56,880 --> 00:18:59,760
and knowing how many rounds are we uh

566
00:18:59,760 --> 00:19:01,280
far away from breaking the whole

567
00:19:01,280 --> 00:19:02,400
primitive

568
00:19:02,400 --> 00:19:04,640
and this will be determined by any

569
00:19:04,640 --> 00:19:06,000
attack that is more performant than

570
00:19:06,000 --> 00:19:08,480
generic and in this setting actual q1

571
00:19:08,480 --> 00:19:10,480
results are important information

572
00:19:10,480 --> 00:19:12,240
needed for determining the unique and

573
00:19:12,240 --> 00:19:14,720
future security margin that we will have

574
00:19:14,720 --> 00:19:17,360
and the other uh

575
00:19:17,360 --> 00:19:19,840
the other reason why

576
00:19:19,840 --> 00:19:22,240
attacks in q1 are very interesting even

577
00:19:22,240 --> 00:19:23,840
though they are sometimes less than

578
00:19:23,840 --> 00:19:25,280
quadratic

579
00:19:25,280 --> 00:19:27,919
is that uh regarding collisions for a

580
00:19:27,919 --> 00:19:30,000
long time we knew that we will see later

581
00:19:30,000 --> 00:19:32,720
that the the quantum generic algorithms

582
00:19:32,720 --> 00:19:34,320
for finding collisions are less

583
00:19:34,320 --> 00:19:37,039
accelerated than quadratic

584
00:19:37,039 --> 00:19:38,880
and so it was thought that if we managed

585
00:19:38,880 --> 00:19:40,559
to accelerate an attack

586
00:19:40,559 --> 00:19:43,039
quadratically and the generic one was

587
00:19:43,039 --> 00:19:45,360
accelerated less then we could reach

588
00:19:45,360 --> 00:19:46,960
more rounds quantumly that uh

589
00:19:46,960 --> 00:19:49,039
classically and actually a soya modern

590
00:19:49,039 --> 00:19:51,919
society showed in 2020 that this was the

591
00:19:51,919 --> 00:19:53,919
case by building quantum rebound attacks

592
00:19:53,919 --> 00:19:55,760
that reached more rounds it was a super

593
00:19:55,760 --> 00:19:57,440
nice result

594
00:19:57,440 --> 00:20:00,320
and uh to say a few words about model q2

595
00:20:00,320 --> 00:20:02,640
that i recall again is one that uses

596
00:20:02,640 --> 00:20:04,559
quantum time on quantum query so quantum

597
00:20:04,559 --> 00:20:06,159
superposition queries to a quantum

598
00:20:06,159 --> 00:20:08,000
cryptographic oracle

599
00:20:08,000 --> 00:20:10,000
so this is indeed a very powerful model

600
00:20:10,000 --> 00:20:11,360
but i think there are many good reasons

601
00:20:11,360 --> 00:20:13,440
to start security in this scenario so of

602
00:20:13,440 --> 00:20:15,919
course if a primitive is broken in q1

603
00:20:15,919 --> 00:20:18,080
that's much more meaningful and maybe

604
00:20:18,080 --> 00:20:19,760
we're not that interested in a primitive

605
00:20:19,760 --> 00:20:22,320
anymore but if it's not the case i think

606
00:20:22,320 --> 00:20:25,039
um affirmative resistance in q2 gives us

607
00:20:25,039 --> 00:20:27,120
a very important information

608
00:20:27,120 --> 00:20:27,840
uh

609
00:20:27,840 --> 00:20:30,080
some reasons why it's very nice to to

610
00:20:30,080 --> 00:20:31,679
use this model is because it's very

611
00:20:31,679 --> 00:20:33,200
simple and that's why it's used in

612
00:20:33,200 --> 00:20:35,200
security proof it's non-trivial and by

613
00:20:35,200 --> 00:20:37,200
this i mean that many constructions

614
00:20:37,200 --> 00:20:38,720
still seem resistant in this in this

615
00:20:38,720 --> 00:20:40,559
scenario

616
00:20:40,559 --> 00:20:42,559
and also because it's inclusive of all

617
00:20:42,559 --> 00:20:44,799
intermediate scenarios for different

618
00:20:44,799 --> 00:20:46,640
protocols or obfuscation or hybrid

619
00:20:46,640 --> 00:20:48,159
machines that might have some quantum

620
00:20:48,159 --> 00:20:51,200
parts on it incompetent users so as we

621
00:20:51,200 --> 00:20:53,120
said we like to be better safe than

622
00:20:53,120 --> 00:20:56,240
sorry so i think if we can be safe in q2

623
00:20:56,240 --> 00:20:58,320
it's better to try but

624
00:20:58,320 --> 00:21:00,640
of course it's not

625
00:21:00,640 --> 00:21:03,280
it's a very powerful model

626
00:21:03,280 --> 00:21:04,880
and so it has been defined and used in

627
00:21:04,880 --> 00:21:07,120
many results and i think that at least

628
00:21:07,120 --> 00:21:08,720
an attacking this model implies that we

629
00:21:08,720 --> 00:21:10,000
need to be extra careful when

630
00:21:10,000 --> 00:21:11,440
implementing the primitive and a quantum

631
00:21:11,440 --> 00:21:12,880
computer and using it in certain

632
00:21:12,880 --> 00:21:14,080
applications

633
00:21:14,080 --> 00:21:16,240
and also we have seen and we will show

634
00:21:16,240 --> 00:21:18,720
later that ideas in uh in the q2 model

635
00:21:18,720 --> 00:21:20,640
have proved useful for improving attacks

636
00:21:20,640 --> 00:21:24,720
in q1 which is uh very nice i think

637
00:21:24,720 --> 00:21:26,880
and finally the q3 model which was the

638
00:21:26,880 --> 00:21:29,679
uh kind of quantum related gear

639
00:21:29,679 --> 00:21:31,600
setting where we have quantum time and

640
00:21:31,600 --> 00:21:32,880
quantum

641
00:21:32,880 --> 00:21:34,960
superposition queries on the difference

642
00:21:34,960 --> 00:21:38,159
of a secret key and the quantum

643
00:21:38,159 --> 00:21:39,919
encryption oracle so this is a super

644
00:21:39,919 --> 00:21:41,440
strong model and actually retaliation

645
00:21:41,440 --> 00:21:43,600
stay one showed in

646
00:21:43,600 --> 00:21:45,520
2015 that everything is broken in this

647
00:21:45,520 --> 00:21:47,600
model so it's too strong and that's why

648
00:21:47,600 --> 00:21:49,039
it's not really interesting to study it

649
00:21:49,039 --> 00:21:51,200
anymore because we already know it's

650
00:21:51,200 --> 00:21:53,440
it's trivial

651
00:21:53,440 --> 00:21:55,760
so before getting into the technical

652
00:21:55,760 --> 00:21:57,120
part let me

653
00:21:57,120 --> 00:21:59,039
present some quantum tools as a black

654
00:21:59,039 --> 00:22:00,880
box that we will need stem for

655
00:22:00,880 --> 00:22:03,200
understanding some parts later

656
00:22:03,200 --> 00:22:04,880
so the main quantum tools that have been

657
00:22:04,880 --> 00:22:07,120
used in uh symmetric uh

658
00:22:07,120 --> 00:22:08,720
quantum symmetry gift analysis are

659
00:22:08,720 --> 00:22:10,799
global and externalization with

660
00:22:10,799 --> 00:22:12,559
amplification amplitude quantum

661
00:22:12,559 --> 00:22:15,200
collisions simon copperberg

662
00:22:15,200 --> 00:22:16,240
dutch

663
00:22:16,240 --> 00:22:18,480
versus vasilani and sure

664
00:22:18,480 --> 00:22:21,360
and i will give the black box details on

665
00:22:21,360 --> 00:22:22,880
the forum blue because it's the ones

666
00:22:22,880 --> 00:22:25,440
that i've chosen to use later

667
00:22:25,440 --> 00:22:27,280
so regarding grover's uh robust

668
00:22:27,280 --> 00:22:29,120
generalization that solved the

669
00:22:29,120 --> 00:22:30,640
exhaustive search problem that it's

670
00:22:30,640 --> 00:22:32,240
given a

671
00:22:32,240 --> 00:22:34,559
boolean function of n bits we want to

672
00:22:34,559 --> 00:22:36,640
find one element such that the image of

673
00:22:36,640 --> 00:22:39,039
this element through f is what

674
00:22:39,039 --> 00:22:40,799
so classically the complexity of solving

675
00:22:40,799 --> 00:22:42,880
this is about 2 to the n divided by the

676
00:22:42,880 --> 00:22:45,360
support of f that is number of elements

677
00:22:45,360 --> 00:22:47,280
that have an image one

678
00:22:47,280 --> 00:22:48,960
and quantumly

679
00:22:48,960 --> 00:22:50,480
it's the square root of the classical

680
00:22:50,480 --> 00:22:52,960
complexity

681
00:22:52,960 --> 00:22:55,039
regarding the collision problem that is

682
00:22:55,039 --> 00:22:57,440
given a random function on m bits of n

683
00:22:57,440 --> 00:22:59,039
bits to n bits we want to find two

684
00:22:59,039 --> 00:23:01,039
distinct elements such that their image

685
00:23:01,039 --> 00:23:02,799
range is the same

686
00:23:02,799 --> 00:23:04,960
so this can be solved classically thanks

687
00:23:04,960 --> 00:23:08,720
to the very nice polaros method with a

688
00:23:08,720 --> 00:23:11,200
complexity of two to the number two

689
00:23:11,200 --> 00:23:12,000
and

690
00:23:12,000 --> 00:23:14,480
quantumly we have the one that provides

691
00:23:14,480 --> 00:23:16,799
the best number of queries it's a

692
00:23:16,799 --> 00:23:20,960
algorithm from rasa oyantap 97 bht that

693
00:23:20,960 --> 00:23:23,120
allows to perform it with a complexity

694
00:23:23,120 --> 00:23:24,960
of about two to the n over three in

695
00:23:24,960 --> 00:23:27,200
queries time and qram this algorithm

696
00:23:27,200 --> 00:23:28,640
needs the the

697
00:23:28,640 --> 00:23:30,320
the current memory that we mentioned

698
00:23:30,320 --> 00:23:31,919
before

699
00:23:31,919 --> 00:23:34,159
diamond's problem says that if we are

700
00:23:34,159 --> 00:23:36,559
given a boolean function on ambits

701
00:23:36,559 --> 00:23:39,200
and the promise that there exists

702
00:23:39,200 --> 00:23:40,080
s

703
00:23:40,080 --> 00:23:42,799
a function f of n bits uh 20 bits and

704
00:23:42,799 --> 00:23:44,720
the promise that there exists

705
00:23:44,720 --> 00:23:47,279
s such that the image of two distinct

706
00:23:47,279 --> 00:23:49,279
elements with is the same

707
00:23:49,279 --> 00:23:51,200
if and only if the sort of both elements

708
00:23:51,200 --> 00:23:53,360
it says we want to find this

709
00:23:53,360 --> 00:23:55,120
so classically this can be done by

710
00:23:55,120 --> 00:23:57,360
trying to find the collision on f

711
00:23:57,360 --> 00:23:59,039
with the complexity as we saw before of

712
00:23:59,039 --> 00:24:01,520
2 to 10 over 2 and it can be done much

713
00:24:01,520 --> 00:24:03,600
more efficiently thanks to simon's

714
00:24:03,600 --> 00:24:05,520
algorithm

715
00:24:05,520 --> 00:24:07,520
in the quantum setting with

716
00:24:07,520 --> 00:24:10,799
a complexity in number of queries of ofn

717
00:24:10,799 --> 00:24:13,600
and time of n to the power of three

718
00:24:13,600 --> 00:24:15,039
i say that we were going to talk about

719
00:24:15,039 --> 00:24:16,799
this in a black box but let me open just

720
00:24:16,799 --> 00:24:18,159
a little bit the black box for

721
00:24:18,159 --> 00:24:19,520
explaining something here that we will

722
00:24:19,520 --> 00:24:21,520
use later we will need it for the other

723
00:24:21,520 --> 00:24:24,000
attacks so actually each simon query

724
00:24:24,000 --> 00:24:26,159
will recover one linear relation on the

725
00:24:26,159 --> 00:24:27,679
secret s

726
00:24:27,679 --> 00:24:30,720
and then if we perform often

727
00:24:30,720 --> 00:24:33,600
simon queries we will build a system

728
00:24:33,600 --> 00:24:35,200
with these linear equations and we will

729
00:24:35,200 --> 00:24:37,440
be able to retrieve s

730
00:24:37,440 --> 00:24:39,440
but we will see later why why we need

731
00:24:39,440 --> 00:24:42,320
this and this problem might seem a bit

732
00:24:42,320 --> 00:24:43,760
artificial but actually has many

733
00:24:43,760 --> 00:24:45,360
applications in symmetric photography we

734
00:24:45,360 --> 00:24:47,520
can recognize it's uh rewriting the

735
00:24:47,520 --> 00:24:49,520
function sometimes

736
00:24:49,520 --> 00:24:51,919
and the last

737
00:24:51,919 --> 00:24:54,000
black box that i wanted to show us the

738
00:24:54,000 --> 00:24:56,720
one solving dutch problem that is given

739
00:24:56,720 --> 00:24:58,880
a a function f of one bit one bit we

740
00:24:58,880 --> 00:25:01,360
want to decide whether f is constant or

741
00:25:01,360 --> 00:25:03,520
balance so classically we would need two

742
00:25:03,520 --> 00:25:05,360
queries we would query one and we would

743
00:25:05,360 --> 00:25:06,960
query zero and check that if they are

744
00:25:06,960 --> 00:25:08,320
the same or different

745
00:25:08,320 --> 00:25:10,320
and quantumly it can be solved with only

746
00:25:10,320 --> 00:25:12,240
one query thanks to the algorithm that

747
00:25:12,240 --> 00:25:15,440
was proportioned in 85

748
00:25:15,440 --> 00:25:18,400
so now i will go through an overview of

749
00:25:18,400 --> 00:25:19,919
some of the most important recent

750
00:25:19,919 --> 00:25:21,200
results

751
00:25:21,200 --> 00:25:23,840
classifying them in categories and we

752
00:25:23,840 --> 00:25:25,440
will stop in the ones that we are going

753
00:25:25,440 --> 00:25:28,400
to see uh to develop technically

754
00:25:28,400 --> 00:25:30,960
i think the main results in um

755
00:25:30,960 --> 00:25:33,520
in in this branch can be classified in

756
00:25:33,520 --> 00:25:34,559
in four

757
00:25:34,559 --> 00:25:36,960
four groups the first one is

758
00:25:36,960 --> 00:25:38,880
results that quantize classical attacks

759
00:25:38,880 --> 00:25:41,279
in q1 and mainly what it was to apply

760
00:25:41,279 --> 00:25:43,200
grouper to some steps of of the

761
00:25:43,200 --> 00:25:44,960
classical attacks

762
00:25:44,960 --> 00:25:46,559
then we have also relate collision

763
00:25:46,559 --> 00:25:48,559
related algorithms and attacks we have

764
00:25:48,559 --> 00:25:51,200
q2 attacks that use simon but also

765
00:25:51,200 --> 00:25:53,919
cooper work or linearization attacks

766
00:25:53,919 --> 00:25:56,240
that we will discuss later so that's why

767
00:25:56,240 --> 00:25:57,440
they are in blue

768
00:25:57,440 --> 00:25:59,840
and offline simon attacks that so it's

769
00:25:59,840 --> 00:26:01,360
also going to be presented and in the

770
00:26:01,360 --> 00:26:02,559
end there are a few results on

771
00:26:02,559 --> 00:26:06,159
dedicating quantum safety sites

772
00:26:06,159 --> 00:26:08,000
so let's start with the first one that

773
00:26:08,000 --> 00:26:08,799
was

774
00:26:08,799 --> 00:26:12,000
quantizing classical attacks in q1

775
00:26:12,000 --> 00:26:13,520
and here

776
00:26:13,520 --> 00:26:15,679
all the all the results we have obtained

777
00:26:15,679 --> 00:26:17,600
for now are

778
00:26:17,600 --> 00:26:19,360
applying grover as i said to some step

779
00:26:19,360 --> 00:26:21,679
and the better speed up that we have

780
00:26:21,679 --> 00:26:25,120
reached is quadratic

781
00:26:25,120 --> 00:26:26,640
so regarding collision related

782
00:26:26,640 --> 00:26:28,720
algorithms and attacks so regarding

783
00:26:28,720 --> 00:26:31,200
algorithms we proposed

784
00:26:31,200 --> 00:26:33,360
a collision search algorithm with the

785
00:26:33,360 --> 00:26:35,440
smallest number of overall computations

786
00:26:35,440 --> 00:26:37,840
and not needing a qram

787
00:26:37,840 --> 00:26:40,559
2017 that needs a time of two to the two

788
00:26:40,559 --> 00:26:42,960
n over five and that needs a classical

789
00:26:42,960 --> 00:26:44,880
memory of two to the number five

790
00:26:44,880 --> 00:26:46,720
and there are also some other advances

791
00:26:46,720 --> 00:26:48,400
regarding other collision related

792
00:26:48,400 --> 00:26:51,200
algorithms like the subset sum multiple

793
00:26:51,200 --> 00:26:52,799
images multi-collisions golden

794
00:26:52,799 --> 00:26:54,559
collisions or cakes or in case some

795
00:26:54,559 --> 00:26:56,000
problem

796
00:26:56,000 --> 00:26:57,679
and regarding the attack as we said

797
00:26:57,679 --> 00:26:58,640
before

798
00:26:58,640 --> 00:27:01,440
also yamadan sasaki showed in 2020 that

799
00:27:01,440 --> 00:27:03,600
morons could be attacked in the quantum

800
00:27:03,600 --> 00:27:04,559
setting

801
00:27:04,559 --> 00:27:07,600
they applied this on asmr one wheel pull

802
00:27:07,600 --> 00:27:10,640
and in 21 they applied to sha uh

803
00:27:10,640 --> 00:27:13,760
to 256 and 512 and the number of rounds

804
00:27:13,760 --> 00:27:14,640
they

805
00:27:14,640 --> 00:27:15,600
they

806
00:27:15,600 --> 00:27:17,840
managed to reach more quantumly and this

807
00:27:17,840 --> 00:27:20,480
one is quite significant i think it for

808
00:27:20,480 --> 00:27:23,279
512 goes from 27 to 39

809
00:27:23,279 --> 00:27:26,320
so it's a big difference

810
00:27:26,320 --> 00:27:29,520
and also we showed that the margin of

811
00:27:29,520 --> 00:27:31,760
gimli with respect to quantum coalition

812
00:27:31,760 --> 00:27:33,679
attack was smaller by two rounds than

813
00:27:33,679 --> 00:27:36,480
the classical one

814
00:27:36,480 --> 00:27:39,520
and now we will get to q2 attacks and we

815
00:27:39,520 --> 00:27:41,600
will get a little bit more uh technical

816
00:27:41,600 --> 00:27:43,600
here but not too much so

817
00:27:43,600 --> 00:27:45,520
and we are going to see an evolution of

818
00:27:45,520 --> 00:27:47,679
simon's attack up to a linearization

819
00:27:47,679 --> 00:27:50,000
attacks

820
00:27:54,399 --> 00:27:56,639
okay

821
00:27:57,919 --> 00:27:58,799
so

822
00:27:58,799 --> 00:28:00,480
for illustrating the most simple

823
00:28:00,480 --> 00:28:02,000
possible simon attack i think it's good

824
00:28:02,000 --> 00:28:03,279
to consider the even monster

825
00:28:03,279 --> 00:28:05,919
construction that was proposed in 97

826
00:28:05,919 --> 00:28:08,960
and this construction is built

827
00:28:08,960 --> 00:28:10,960
from a public random permutation on n

828
00:28:10,960 --> 00:28:13,679
bits and a key of 2 to the n bits

829
00:28:13,679 --> 00:28:16,720
so to encrypt plaintext x weak surface

830
00:28:16,720 --> 00:28:18,399
the first key k1 then we apply the

831
00:28:18,399 --> 00:28:20,080
public permutation and then we sort the

832
00:28:20,080 --> 00:28:22,320
second key k2 and that's how we generate

833
00:28:22,320 --> 00:28:24,960
the ciphertext

834
00:28:24,960 --> 00:28:26,799
so classically what is the security of

835
00:28:26,799 --> 00:28:28,720
this construction so we know that any

836
00:28:28,720 --> 00:28:30,559
classical attack requires that the

837
00:28:30,559 --> 00:28:32,640
complexity in time times the complexity

838
00:28:32,640 --> 00:28:35,200
in data is at least 2 to the n but we

839
00:28:35,200 --> 00:28:37,440
could for instance do an exorcist search

840
00:28:37,440 --> 00:28:40,080
on the first key k1 and have two pairs

841
00:28:40,080 --> 00:28:43,840
of data p1 and c1 so the pair plaintext

842
00:28:43,840 --> 00:28:46,720
p1 c1 and the pair p2 c2

843
00:28:46,720 --> 00:28:48,640
so if we perform an exhaustive search on

844
00:28:48,640 --> 00:28:51,200
k1 we saw it with p1 and we apply the

845
00:28:51,200 --> 00:28:53,520
permutation on this result and then we

846
00:28:53,520 --> 00:28:55,520
sort this with the ciphertext of p1 we

847
00:28:55,520 --> 00:28:58,000
recover automatically the possible k2

848
00:28:58,000 --> 00:29:00,480
and then once we have a pair of k1 k2

849
00:29:00,480 --> 00:29:03,200
that can be a solution we check if when

850
00:29:03,200 --> 00:29:05,919
we encrypt pe2 with this key we generate

851
00:29:05,919 --> 00:29:08,960
c2 so that's a way of recovering

852
00:29:08,960 --> 00:29:10,960
both keys that will cost us 2 to the end

853
00:29:10,960 --> 00:29:13,039
in time and two data

854
00:29:13,039 --> 00:29:15,360
and there are other ways of

855
00:29:15,360 --> 00:29:17,520
reducing the time below to the end for

856
00:29:17,520 --> 00:29:19,440
instance we couldn't define if we could

857
00:29:19,440 --> 00:29:21,520
define a function f

858
00:29:21,520 --> 00:29:25,360
as the encryption of x sort to p of x

859
00:29:25,360 --> 00:29:28,320
as we can see in blue in in the slide

860
00:29:28,320 --> 00:29:30,399
what it gives when we developed and it's

861
00:29:30,399 --> 00:29:32,320
easy to see also that f of x has a

862
00:29:32,320 --> 00:29:35,919
period as f of x is going to be the same

863
00:29:35,919 --> 00:29:37,840
it's going to produce the same result as

864
00:29:37,840 --> 00:29:40,399
f f of x or k 1.

865
00:29:40,399 --> 00:29:42,159
so in this case we can

866
00:29:42,159 --> 00:29:43,919
perform a different tradeoff where the

867
00:29:43,919 --> 00:29:45,600
time and the data complexities both of

868
00:29:45,600 --> 00:29:47,840
them will be of 2 to the n over 2.

869
00:29:47,840 --> 00:29:50,080
but in this case we cannot reduce the

870
00:29:50,080 --> 00:29:52,080
complexity below 2 to the n over 2 as

871
00:29:52,080 --> 00:29:54,480
all the coursework are queries so we can

872
00:29:54,480 --> 00:29:56,399
try to do different trade-offs but with

873
00:29:56,399 --> 00:29:58,480
this attack we cannot

874
00:29:58,480 --> 00:30:00,399
reduce the data over two to the number

875
00:30:00,399 --> 00:30:01,200
two

876
00:30:01,200 --> 00:30:03,919
so diamond in 91 proposed a way of

877
00:30:03,919 --> 00:30:05,520
reducing

878
00:30:05,520 --> 00:30:08,000
this data complexity and reaching all

879
00:30:08,000 --> 00:30:10,240
the possible tradeoffs in the curve

880
00:30:10,240 --> 00:30:12,320
t equals 2 to the n over d

881
00:30:12,320 --> 00:30:14,720
defining the function h of x which is

882
00:30:14,720 --> 00:30:16,720
the encryption of x so the encryption of

883
00:30:16,720 --> 00:30:20,480
x x 1 and g of x which is p of x so p of

884
00:30:20,480 --> 00:30:22,880
x xor xr1 and it's important to remark

885
00:30:22,880 --> 00:30:25,279
that uh geofix are not queries so any

886
00:30:25,279 --> 00:30:27,279
call that we will perform to your peaks

887
00:30:27,279 --> 00:30:30,000
are not queries that we need to call

888
00:30:30,000 --> 00:30:32,559
so then uh these two functions it's very

889
00:30:32,559 --> 00:30:34,640
related to what we saw in the function f

890
00:30:34,640 --> 00:30:37,360
of x before have also a period that is q

891
00:30:37,360 --> 00:30:40,000
k 1. so h of x is going to be the same

892
00:30:40,000 --> 00:30:42,480
as g of x 0 k1

893
00:30:42,480 --> 00:30:44,559
so we can the same way try to find the

894
00:30:44,559 --> 00:30:46,480
collision here and

895
00:30:46,480 --> 00:30:49,200
we decide how much call we do to a g how

896
00:30:49,200 --> 00:30:50,799
much coffee we do to wage and this will

897
00:30:50,799 --> 00:30:52,640
give us all the possible trade-offs in

898
00:30:52,640 --> 00:30:55,840
in the curve and uh in 2012

899
00:30:55,840 --> 00:30:58,080
nuncal manidal proposed a slidex attack

900
00:30:58,080 --> 00:31:00,399
that allows to transform this in a known

901
00:31:00,399 --> 00:31:02,000
plaintext attack

902
00:31:02,000 --> 00:31:03,600
because this one is a chosen tech text

903
00:31:03,600 --> 00:31:04,480
attack

904
00:31:04,480 --> 00:31:07,039
okay so that's enough uh for classical

905
00:31:07,039 --> 00:31:09,039
security of you and mansoor

906
00:31:09,039 --> 00:31:11,919
and now uh we want to see what happens

907
00:31:11,919 --> 00:31:14,480
when we analyze even mansour in kutu so

908
00:31:14,480 --> 00:31:17,200
academy presented in a very nice result

909
00:31:17,200 --> 00:31:18,720
in 2012

910
00:31:18,720 --> 00:31:20,399
that actually we could apply simon

911
00:31:20,399 --> 00:31:22,159
attack here if we are allowed to perform

912
00:31:22,159 --> 00:31:23,600
superposition queries to the

913
00:31:23,600 --> 00:31:25,840
construction so we have the same f that

914
00:31:25,840 --> 00:31:27,840
we defined before which is the xor of

915
00:31:27,840 --> 00:31:29,840
the encryption of x so

916
00:31:29,840 --> 00:31:31,120
p of x

917
00:31:31,120 --> 00:31:33,279
and this function f of x has a period

918
00:31:33,279 --> 00:31:36,159
that is k1 so we can

919
00:31:36,159 --> 00:31:38,720
directly apply simon in f of x

920
00:31:38,720 --> 00:31:40,720
and we will recover the secret that is

921
00:31:40,720 --> 00:31:44,320
the key k1 in polynomial time

922
00:31:44,559 --> 00:31:48,000
so now uh i'm going to uh present a bit

923
00:31:48,000 --> 00:31:49,440
more involved the

924
00:31:49,440 --> 00:31:51,200
same on attack but we will come back to

925
00:31:51,200 --> 00:31:52,640
even master when we will talk about

926
00:31:52,640 --> 00:31:55,039
offline simon so it's just a parenthesis

927
00:31:55,039 --> 00:31:57,120
on the even master part

928
00:31:57,120 --> 00:32:00,080
so in 2016 we proposed an attack on the

929
00:32:00,080 --> 00:32:02,240
ocb authenticated encryption and

930
00:32:02,240 --> 00:32:03,440
construction

931
00:32:03,440 --> 00:32:05,760
that for each new query takes a new iv

932
00:32:05,760 --> 00:32:07,519
that's very important and that it

933
00:32:07,519 --> 00:32:09,919
encrypts several message blocks and

934
00:32:09,919 --> 00:32:12,480
generates a tag for authentication and

935
00:32:12,480 --> 00:32:13,840
this stack depends on the message

936
00:32:13,840 --> 00:32:15,760
associated data and of course of a

937
00:32:15,760 --> 00:32:17,440
secret key and that is used in the

938
00:32:17,440 --> 00:32:20,000
encryption so to encrypt each uh to

939
00:32:20,000 --> 00:32:21,760
encrypt each block

940
00:32:21,760 --> 00:32:23,840
uh weak sort and offset

941
00:32:23,840 --> 00:32:26,320
delta i of iv and this offset is going

942
00:32:26,320 --> 00:32:28,720
to depend on the number of block on the

943
00:32:28,720 --> 00:32:30,480
iv and on the secret key

944
00:32:30,480 --> 00:32:32,880
then an encryption e of k is applied and

945
00:32:32,880 --> 00:32:35,279
then the offset is sort again generating

946
00:32:35,279 --> 00:32:37,039
this way the ciphertext

947
00:32:37,039 --> 00:32:39,279
so here we can define a function that we

948
00:32:39,279 --> 00:32:41,440
are going to use again in the next line

949
00:32:41,440 --> 00:32:44,480
which is f of i j of x that what it does

950
00:32:44,480 --> 00:32:47,600
is that for block i am for block j it

951
00:32:47,600 --> 00:32:49,919
sort the two ciphertext when in the

952
00:32:49,919 --> 00:32:53,279
input we consider both the same inputs x

953
00:32:53,279 --> 00:32:56,000
so if we consider this function f i j

954
00:32:56,000 --> 00:32:58,880
that is developed here in blue

955
00:32:58,880 --> 00:33:00,480
we see that this function has a period

956
00:33:00,480 --> 00:33:03,120
that is the xor of both offsets

957
00:33:03,120 --> 00:33:06,240
and in ocb it's very important to

958
00:33:06,240 --> 00:33:08,720
remark that though each offset depends

959
00:33:08,720 --> 00:33:10,559
on the iv the xor they depend the same

960
00:33:10,559 --> 00:33:12,480
way and linearly so the xor of two

961
00:33:12,480 --> 00:33:14,000
offsets does not depend on the iv

962
00:33:14,000 --> 00:33:15,120
anymore

963
00:33:15,120 --> 00:33:17,039
so that means that

964
00:33:17,039 --> 00:33:20,480
simon is going to recover the of both

965
00:33:20,480 --> 00:33:22,640
offsets even though we perform several

966
00:33:22,640 --> 00:33:24,320
queries and at each query we will have a

967
00:33:24,320 --> 00:33:25,840
different iv

968
00:33:25,840 --> 00:33:26,720
as

969
00:33:26,720 --> 00:33:28,559
dexor does not depend on the iv we are

970
00:33:28,559 --> 00:33:30,159
going to be able to build the linear

971
00:33:30,159 --> 00:33:31,519
system of the questions and to recover

972
00:33:31,519 --> 00:33:33,279
the xor vote

973
00:33:33,279 --> 00:33:36,000
and this is going to cost us of n and

974
00:33:36,000 --> 00:33:37,679
with this value we are able to perform

975
00:33:37,679 --> 00:33:39,679
forgeries that is to predict outputs of

976
00:33:39,679 --> 00:33:41,600
not yet create messages that shouldn't

977
00:33:41,600 --> 00:33:43,039
be possible

978
00:33:43,039 --> 00:33:46,880
and so as ocd is a very efficient um

979
00:33:46,880 --> 00:33:48,640
a nice construction that works in one

980
00:33:48,640 --> 00:33:50,720
pass we try to repair this to be

981
00:33:50,720 --> 00:33:52,960
resistant with due to attacks and the

982
00:33:52,960 --> 00:33:55,840
first thing we thought about was uh okay

983
00:33:55,840 --> 00:33:57,679
it the previous attack worked because

984
00:33:57,679 --> 00:33:59,360
xor of both

985
00:33:59,360 --> 00:34:01,200
no does not depend on the iv so we make

986
00:34:01,200 --> 00:34:03,679
this sword dependent on the iv then each

987
00:34:03,679 --> 00:34:05,760
time we call simon it will give us an

988
00:34:05,760 --> 00:34:07,919
information on a different value and we

989
00:34:07,919 --> 00:34:09,679
won't be able to recover any useful

990
00:34:09,679 --> 00:34:12,239
information so that's why uh so the

991
00:34:12,239 --> 00:34:14,239
previous the um

992
00:34:14,239 --> 00:34:16,800
the offset defined in ocv is it was this

993
00:34:16,800 --> 00:34:18,639
function that we see here where we see

994
00:34:18,639 --> 00:34:21,520
that uh the influence of the iv

995
00:34:21,520 --> 00:34:24,399
is uh given by fk of iv is the same in

996
00:34:24,399 --> 00:34:26,000
everyone and that's why when we sort of

997
00:34:26,000 --> 00:34:28,800
disappears but what we proposed was

998
00:34:28,800 --> 00:34:31,440
an offset that would be i times a k of

999
00:34:31,440 --> 00:34:33,280
iv

1000
00:34:33,280 --> 00:34:35,839
but actually uh an evolve simone simon

1001
00:34:35,839 --> 00:34:38,239
sorry it's still it's french that mixes

1002
00:34:38,239 --> 00:34:39,918
up for me a little bit

1003
00:34:39,918 --> 00:34:42,320
and um so and i've evolved simon is

1004
00:34:42,320 --> 00:34:44,159
still possible to be applied here so let

1005
00:34:44,159 --> 00:34:47,040
us consider the function j g

1006
00:34:47,040 --> 00:34:50,399
that source 2 by 2 the outputs and the

1007
00:34:50,399 --> 00:34:51,760
function f of

1008
00:34:51,760 --> 00:34:53,918
f of x 1 to x n

1009
00:34:53,918 --> 00:34:56,639
it's equal to d applied to ocv of 2 to

1010
00:34:56,639 --> 00:34:59,680
the n messages that are equal 2 by 2.

1011
00:34:59,680 --> 00:35:02,720
so this function f can be rewritten

1012
00:35:02,720 --> 00:35:05,040
as the concatenation of all the

1013
00:35:05,040 --> 00:35:07,599
functions f i g where f i g is the one

1014
00:35:07,599 --> 00:35:09,839
that i defined here the xor of two

1015
00:35:09,839 --> 00:35:12,480
cipher text of blocks i and g

1016
00:35:12,480 --> 00:35:13,280
when

1017
00:35:13,280 --> 00:35:16,320
the input message is the same as six so

1018
00:35:16,320 --> 00:35:19,280
this function f can be written as f 1 2

1019
00:35:19,280 --> 00:35:22,640
of x 1 f 3 4 of x 2 and so on and this

1020
00:35:22,640 --> 00:35:24,240
function is going to have a period that

1021
00:35:24,240 --> 00:35:26,240
is equal to the xor of

1022
00:35:26,240 --> 00:35:29,200
the offsets 2 by 2 of all the different

1023
00:35:29,200 --> 00:35:30,880
blocks that we have

1024
00:35:30,880 --> 00:35:32,160
and

1025
00:35:32,160 --> 00:35:33,119
then

1026
00:35:33,119 --> 00:35:33,920
uh

1027
00:35:33,920 --> 00:35:36,079
this xor we see that they are they give

1028
00:35:36,079 --> 00:35:39,440
us linear relations on a k of iv

1029
00:35:39,440 --> 00:35:42,800
so if the message is long enough

1030
00:35:42,800 --> 00:35:45,440
we are going to be able to sample uh

1031
00:35:45,440 --> 00:35:47,839
vectors orthogonal to the to the period

1032
00:35:47,839 --> 00:35:50,000
and to recover the needed information

1033
00:35:50,000 --> 00:35:51,680
with only one query

1034
00:35:51,680 --> 00:35:52,880
and then we are going to be able to

1035
00:35:52,880 --> 00:35:55,520
retrieve ek of iv and this allows us

1036
00:35:55,520 --> 00:35:57,839
again to perform forgeries so that

1037
00:35:57,839 --> 00:35:59,680
wasn't a good idea to propose the ib we

1038
00:35:59,680 --> 00:36:01,359
had thoughts so

1039
00:36:01,359 --> 00:36:02,480
uh

1040
00:36:02,480 --> 00:36:04,400
until now we have seen what we can call

1041
00:36:04,400 --> 00:36:07,599
maybe a standard simon attacks

1042
00:36:07,599 --> 00:36:08,720
and

1043
00:36:08,720 --> 00:36:10,320
these attacks mainly apply when the

1044
00:36:10,320 --> 00:36:11,359
message

1045
00:36:11,359 --> 00:36:13,680
the message blocks are directly sort to

1046
00:36:13,680 --> 00:36:15,839
something to the value to the internal

1047
00:36:15,839 --> 00:36:16,720
state

1048
00:36:16,720 --> 00:36:18,880
and then the most logical solution is to

1049
00:36:18,880 --> 00:36:21,040
apply tweakable block ciphers in order

1050
00:36:21,040 --> 00:36:23,599
to avoid this sort of director that

1051
00:36:23,599 --> 00:36:25,839
allow us to apply simon so for instance

1052
00:36:25,839 --> 00:36:28,560
data cv uses tweakable block ciphers and

1053
00:36:28,560 --> 00:36:29,920
we think that

1054
00:36:29,920 --> 00:36:31,680
their standard simon attacks wouldn't

1055
00:36:31,680 --> 00:36:34,720
work and then uh the question was so no

1056
00:36:34,720 --> 00:36:36,880
more q2 q2 attacks are possible in the

1057
00:36:36,880 --> 00:36:41,359
setting and actually yes so uh if in

1058
00:36:41,359 --> 00:36:42,240
in

1059
00:36:42,240 --> 00:36:44,800
2021 we could show that

1060
00:36:44,800 --> 00:36:46,960
in some cases we can apply some other

1061
00:36:46,960 --> 00:36:49,520
type of q2 attacks but there's no way to

1062
00:36:49,520 --> 00:36:52,079
avoid them so here we see

1063
00:36:52,079 --> 00:36:54,800
the computation of the tag in tata cb3

1064
00:36:54,800 --> 00:36:57,760
so here this is the associated data that

1065
00:36:57,760 --> 00:36:58,480
is

1066
00:36:58,480 --> 00:36:59,520
treated

1067
00:36:59,520 --> 00:37:01,839
each block of associated data by an

1068
00:37:01,839 --> 00:37:04,800
encryption function and a tweak

1069
00:37:04,800 --> 00:37:06,800
and at the end they are all sort and

1070
00:37:06,800 --> 00:37:08,400
they are also absorbed to detect some of

1071
00:37:08,400 --> 00:37:11,040
the message that is again encrypted with

1072
00:37:11,040 --> 00:37:12,160
applicable block cipher and this

1073
00:37:12,160 --> 00:37:13,920
generates the tag but here it's very

1074
00:37:13,920 --> 00:37:16,079
important to say that all the tweaks are

1075
00:37:16,079 --> 00:37:18,400
independent from the av but the last one

1076
00:37:18,400 --> 00:37:19,920
this is t is the only one that depends

1077
00:37:19,920 --> 00:37:21,599
on the ib

1078
00:37:21,599 --> 00:37:23,200
so for instance if we consider an empty

1079
00:37:23,200 --> 00:37:24,960
message here so

1080
00:37:24,960 --> 00:37:26,800
here we have zero inputs

1081
00:37:26,800 --> 00:37:28,240
and

1082
00:37:28,240 --> 00:37:30,720
one only associated data block that can

1083
00:37:30,720 --> 00:37:33,040
be either zero or one

1084
00:37:33,040 --> 00:37:35,920
and the function f i of b that considers

1085
00:37:35,920 --> 00:37:38,000
the truncation of the attack to the bits

1086
00:37:38,000 --> 00:37:39,520
i

1087
00:37:39,520 --> 00:37:40,320
of

1088
00:37:40,320 --> 00:37:42,079
the truncation of the tag to the bit i

1089
00:37:42,079 --> 00:37:44,079
so this is the function that we obtain

1090
00:37:44,079 --> 00:37:46,079
this is the encryption of the block zero

1091
00:37:46,079 --> 00:37:48,480
and this is uh the encryption of the

1092
00:37:48,480 --> 00:37:50,320
block data that we have that is not zero

1093
00:37:50,320 --> 00:37:53,200
that can be b zero or one

1094
00:37:53,200 --> 00:37:55,040
then here we can apply dutch to the

1095
00:37:55,040 --> 00:37:56,960
function f5 b

1096
00:37:56,960 --> 00:37:59,520
and it will says as if the truncation of

1097
00:37:59,520 --> 00:38:01,920
i is equal to one

1098
00:38:01,920 --> 00:38:04,079
that means that the values of the

1099
00:38:04,079 --> 00:38:06,720
encryption of 0 and encryption of 1 are

1100
00:38:06,720 --> 00:38:08,800
different because it will tell us if

1101
00:38:08,800 --> 00:38:10,960
it's balanced or it will tell us if this

1102
00:38:10,960 --> 00:38:12,640
is constant which means that the value

1103
00:38:12,640 --> 00:38:14,640
is the same so if we repeat these things

1104
00:38:14,640 --> 00:38:16,480
end time we will be able to recover the

1105
00:38:16,480 --> 00:38:20,000
whole value of a k t zero of zero so ak

1106
00:38:20,000 --> 00:38:21,200
zero one

1107
00:38:21,200 --> 00:38:23,200
and this will allow us again to produce

1108
00:38:23,200 --> 00:38:25,200
forgeries

1109
00:38:25,200 --> 00:38:26,079
so

1110
00:38:26,079 --> 00:38:27,920
what we well there are other more

1111
00:38:27,920 --> 00:38:29,839
complex linearization attacks that apply

1112
00:38:29,839 --> 00:38:31,599
other quantum algorithms besides this

1113
00:38:31,599 --> 00:38:32,400
one

1114
00:38:32,400 --> 00:38:34,320
but i think what we have learned up to

1115
00:38:34,320 --> 00:38:36,720
here is that it's a good idea not to use

1116
00:38:36,720 --> 00:38:38,480
offsets that's mostly tweakable block

1117
00:38:38,480 --> 00:38:40,320
ciphers for encryption with tweaks that

1118
00:38:40,320 --> 00:38:42,320
depend on the ibn on the block

1119
00:38:42,320 --> 00:38:44,720
and this allows us to resist to standard

1120
00:38:44,720 --> 00:38:47,680
simon attacks and the associated data

1121
00:38:47,680 --> 00:38:49,760
parts also had to depend on the iv so we

1122
00:38:49,760 --> 00:38:51,280
need that the tweaks also depends on the

1123
00:38:51,280 --> 00:38:53,200
iv so that we cannot perform

1124
00:38:53,200 --> 00:38:56,480
linearization attacks so that's how

1125
00:38:56,480 --> 00:38:58,720
we conceived qcb that we proposed last

1126
00:38:58,720 --> 00:39:00,800
year that has basically with what we

1127
00:39:00,800 --> 00:39:03,520
just said uses tweakable block ciphers

1128
00:39:03,520 --> 00:39:04,960
with the tweak depending on what they

1129
00:39:04,960 --> 00:39:06,960
should and the associated data has

1130
00:39:06,960 --> 00:39:10,079
tweaks that also depend on the iv

1131
00:39:10,079 --> 00:39:12,000
but this is a list of uh some of the

1132
00:39:12,000 --> 00:39:14,960
main results that have appeared in q2

1133
00:39:14,960 --> 00:39:15,839
and

1134
00:39:15,839 --> 00:39:17,280
most are

1135
00:39:17,280 --> 00:39:19,359
standard simon attacks as ones that we

1136
00:39:19,359 --> 00:39:22,079
saw in the beginning and there's uh some

1137
00:39:22,079 --> 00:39:23,680
other a bit different results like the

1138
00:39:23,680 --> 00:39:24,880
ethics attack

1139
00:39:24,880 --> 00:39:26,640
of lender and may that proposes the

1140
00:39:26,640 --> 00:39:28,160
global mix simon that we are going to

1141
00:39:28,160 --> 00:39:29,440
see next

1142
00:39:29,440 --> 00:39:30,240
and

1143
00:39:30,240 --> 00:39:32,160
the cooper works

1144
00:39:32,160 --> 00:39:34,400
attacks that apply

1145
00:39:34,400 --> 00:39:35,920
when instead of source we have modular

1146
00:39:35,920 --> 00:39:37,040
additions

1147
00:39:37,040 --> 00:39:38,640
and i think it's also nice to say that

1148
00:39:38,640 --> 00:39:40,839
um

1149
00:39:40,839 --> 00:39:42,720
that uh

1150
00:39:42,720 --> 00:39:45,680
the scenario q2 managed to uh speed up

1151
00:39:45,680 --> 00:39:47,440
slide attacks which is a classical

1152
00:39:47,440 --> 00:39:50,240
family of attacks

1153
00:39:50,240 --> 00:39:51,520
[Music]

1154
00:39:51,520 --> 00:39:53,280
exponentially so that's the first

1155
00:39:53,280 --> 00:39:55,359
classical family that

1156
00:39:55,359 --> 00:39:58,000
has a very very uh polynomial complexity

1157
00:39:58,000 --> 00:40:00,400
when we consider it in in a quantum

1158
00:40:00,400 --> 00:40:02,000
setting of course it's a q2 setting that

1159
00:40:02,000 --> 00:40:04,319
is very strong but still

1160
00:40:04,319 --> 00:40:06,319
so now we can

1161
00:40:06,319 --> 00:40:08,319
go to the offline segment attacks which

1162
00:40:08,319 --> 00:40:08,960
is

1163
00:40:08,960 --> 00:40:10,960
the fourth

1164
00:40:10,960 --> 00:40:13,839
group of results in quantum

1165
00:40:13,839 --> 00:40:17,279
quantum symmetric cryptography

1166
00:40:22,800 --> 00:40:25,520
as we said we come back to ibn master

1167
00:40:25,520 --> 00:40:27,280
and we have seen what happened

1168
00:40:27,280 --> 00:40:28,880
classically and what happened in q2 and

1169
00:40:28,880 --> 00:40:31,760
now let's see what happens in q1

1170
00:40:31,760 --> 00:40:34,319
so um

1171
00:40:34,319 --> 00:40:35,920
mori in the same paper they proposed a

1172
00:40:35,920 --> 00:40:39,440
q2 attack they also proposed a q1 attack

1173
00:40:39,440 --> 00:40:40,480
when they

1174
00:40:40,480 --> 00:40:42,160
they applied the bhc algorithm the

1175
00:40:42,160 --> 00:40:44,400
collision certain algorithm that we saw

1176
00:40:44,400 --> 00:40:45,440
before

1177
00:40:45,440 --> 00:40:48,240
and what they can do is uh

1178
00:40:48,240 --> 00:40:50,720
we have the functions h of x and j of x

1179
00:40:50,720 --> 00:40:52,960
that we defined previously

1180
00:40:52,960 --> 00:40:55,280
where h of x is the encryption of x

1181
00:40:55,280 --> 00:40:57,920
sorry encryption of xor one and g of x

1182
00:40:57,920 --> 00:41:01,839
is uh p of x xor p of x uh xr1 and we

1183
00:41:01,839 --> 00:41:04,240
recall that g of x is not

1184
00:41:04,240 --> 00:41:07,119
isn't when we call geofix uh

1185
00:41:07,119 --> 00:41:08,880
that's not queries that's not we can

1186
00:41:08,880 --> 00:41:11,839
call geofix without uh making the query

1187
00:41:11,839 --> 00:41:13,440
quantity um

1188
00:41:13,440 --> 00:41:15,119
increase

1189
00:41:15,119 --> 00:41:17,520
and so if we apply bht

1190
00:41:17,520 --> 00:41:19,920
uh we could do uh two to the n over

1191
00:41:19,920 --> 00:41:23,599
three calls to j of x and we will uh

1192
00:41:23,599 --> 00:41:25,280
no sorry we will do two to the n over

1193
00:41:25,280 --> 00:41:27,040
three calls to h of x which are the

1194
00:41:27,040 --> 00:41:28,400
queries

1195
00:41:28,400 --> 00:41:30,240
and we will store it in a qram so this

1196
00:41:30,240 --> 00:41:32,720
algorithm as we said needs accurate

1197
00:41:32,720 --> 00:41:34,800
and next we can do an exclusive search

1198
00:41:34,800 --> 00:41:37,359
in geofix which are not queries

1199
00:41:37,359 --> 00:41:39,520
over the two to the two and three that

1200
00:41:39,520 --> 00:41:42,240
remain to find a collision and as we can

1201
00:41:42,240 --> 00:41:44,960
do this with global the time will go

1202
00:41:44,960 --> 00:41:47,440
below two to the n over three so the

1203
00:41:47,440 --> 00:41:49,200
trade-off that we obtain here is data

1204
00:41:49,200 --> 00:41:51,280
times the square of time is two to the

1205
00:41:51,280 --> 00:41:52,319
end

1206
00:41:52,319 --> 00:41:54,000
but this is what was proposed by puebla

1207
00:41:54,000 --> 00:41:57,119
calamari and the suyaman sasaki in 2018

1208
00:41:57,119 --> 00:41:58,480
they um

1209
00:41:58,480 --> 00:42:00,160
they used the algorithm we had proposed

1210
00:42:00,160 --> 00:42:02,319
that didn't need a qram for being

1211
00:42:02,319 --> 00:42:04,240
applied and

1212
00:42:04,240 --> 00:42:06,000
so the complexity the time complexity

1213
00:42:06,000 --> 00:42:07,839
and the data are worse of course but no

1214
00:42:07,839 --> 00:42:09,760
qram is needed so the time and data here

1215
00:42:09,760 --> 00:42:11,760
are two to the three and over seven but

1216
00:42:11,760 --> 00:42:13,599
it still needs a classical memory of two

1217
00:42:13,599 --> 00:42:15,839
to the number

1218
00:42:15,839 --> 00:42:17,599
and there are some important questions

1219
00:42:17,599 --> 00:42:20,079
that were open uh when we had these two

1220
00:42:20,079 --> 00:42:22,800
results that were could we improve these

1221
00:42:22,800 --> 00:42:24,640
attacks and could we use simon's

1222
00:42:24,640 --> 00:42:27,440
algorithm in q1 that was a question that

1223
00:42:27,440 --> 00:42:29,119
had been

1224
00:42:29,119 --> 00:42:31,760
asks quite a lot of times so in order to

1225
00:42:31,760 --> 00:42:33,359
answer this let us first have a look at

1226
00:42:33,359 --> 00:42:35,599
the ethics construction so the fixed

1227
00:42:35,599 --> 00:42:37,119
construction is very similar to even

1228
00:42:37,119 --> 00:42:38,720
mansour but instead of having a public

1229
00:42:38,720 --> 00:42:40,000
permutation in the middle we have an

1230
00:42:40,000 --> 00:42:41,760
encryption function with an additional

1231
00:42:41,760 --> 00:42:43,520
key k

1232
00:42:43,520 --> 00:42:46,319
so classically this verifies that

1233
00:42:46,319 --> 00:42:47,520
t times

1234
00:42:47,520 --> 00:42:49,119
the complexity in time times the

1235
00:42:49,119 --> 00:42:53,040
complexity in data is 2 to the 2n

1236
00:42:53,040 --> 00:42:55,839
and quantumly leandra may as i said

1237
00:42:55,839 --> 00:42:58,400
propose a global meet same on algorithm

1238
00:42:58,400 --> 00:43:00,400
that worked in q2

1239
00:43:00,400 --> 00:43:02,240
and what they did was to perform an

1240
00:43:02,240 --> 00:43:05,040
exhaustive search on the key of the of

1241
00:43:05,040 --> 00:43:07,520
the encryption cipher with grover

1242
00:43:07,520 --> 00:43:10,000
and then

1243
00:43:10,000 --> 00:43:12,880
we can associate the variable k prime to

1244
00:43:12,880 --> 00:43:15,359
to which possibility for this key

1245
00:43:15,359 --> 00:43:17,680
and next they will use as a test for

1246
00:43:17,680 --> 00:43:19,920
global simon's attack on the evenment

1247
00:43:19,920 --> 00:43:21,440
sword that we recover once the key is

1248
00:43:21,440 --> 00:43:22,640
determined

1249
00:43:22,640 --> 00:43:25,040
so this way we use

1250
00:43:25,040 --> 00:43:26,240
the test is checking if the

1251
00:43:26,240 --> 00:43:28,319
corresponding corresponding function f

1252
00:43:28,319 --> 00:43:30,720
of k prime has a period k1 and when

1253
00:43:30,720 --> 00:43:32,079
that's the case it would mean that we

1254
00:43:32,079 --> 00:43:33,839
have found the good

1255
00:43:33,839 --> 00:43:36,000
the good key through grabber

1256
00:43:36,000 --> 00:43:38,079
and the complexity of this attack it's

1257
00:43:38,079 --> 00:43:39,119
in time

1258
00:43:39,119 --> 00:43:41,520
n to the 3 times 2 to the n over 2 and

1259
00:43:41,520 --> 00:43:44,560
in delta n times 2 to n over 2.

1260
00:43:44,560 --> 00:43:46,960
and actually in 2019

1261
00:43:46,960 --> 00:43:49,520
we propose a way of reducing the data of

1262
00:43:49,520 --> 00:43:51,440
this attack and actually if we have a

1263
00:43:51,440 --> 00:43:53,440
closer look at the function f of k prime

1264
00:43:53,440 --> 00:43:55,200
of x that is

1265
00:43:55,200 --> 00:43:59,680
xor of uh the encryption of x so xor of

1266
00:43:59,680 --> 00:44:00,960
the middle

1267
00:44:00,960 --> 00:44:02,000
part

1268
00:44:02,000 --> 00:44:04,560
applied onyx with the key that we're

1269
00:44:04,560 --> 00:44:06,480
guessing k prime

1270
00:44:06,480 --> 00:44:08,480
we we see the blue parts that depends on

1271
00:44:08,480 --> 00:44:09,839
the encryption oracle because there are

1272
00:44:09,839 --> 00:44:12,240
calls from kryptonix but does not depend

1273
00:44:12,240 --> 00:44:14,000
on key prime which is the value that we

1274
00:44:14,000 --> 00:44:15,920
need to guess and we also have the red

1275
00:44:15,920 --> 00:44:17,680
part that depends on the value we need

1276
00:44:17,680 --> 00:44:20,640
to guess k prime but does not depend on

1277
00:44:20,640 --> 00:44:22,800
the encryption article so in order to

1278
00:44:22,800 --> 00:44:24,880
reduce d it makes sense to make only one

1279
00:44:24,880 --> 00:44:26,560
query and superposition query and to

1280
00:44:26,560 --> 00:44:28,480
reuse it later

1281
00:44:28,480 --> 00:44:30,400
so how does it work actually

1282
00:44:30,400 --> 00:44:31,839
big lines

1283
00:44:31,839 --> 00:44:34,079
so uh what we will do is pre-compute our

1284
00:44:34,079 --> 00:44:36,000
offense states with a proposition query

1285
00:44:36,000 --> 00:44:38,319
to f of x of uh

1286
00:44:38,319 --> 00:44:39,680
of x

1287
00:44:39,680 --> 00:44:43,599
and next we will perform a global search

1288
00:44:43,599 --> 00:44:44,480
and

1289
00:44:44,480 --> 00:44:46,240
each iteration test will compute the

1290
00:44:46,240 --> 00:44:49,200
superposition of the e k prime x on the

1291
00:44:49,200 --> 00:44:51,440
pre-computed states we'll check with

1292
00:44:51,440 --> 00:44:53,599
salmon if this is periodic and next it

1293
00:44:53,599 --> 00:44:55,440
will undo the computation in order to go

1294
00:44:55,440 --> 00:44:57,599
back to the original states and be ready

1295
00:44:57,599 --> 00:44:59,200
for this iteration

1296
00:44:59,200 --> 00:45:02,160
so the the complexity in data here it's

1297
00:45:02,160 --> 00:45:04,240
only the o often original

1298
00:45:04,240 --> 00:45:06,560
superpositional queries that we do for

1299
00:45:06,560 --> 00:45:08,240
preparing the states

1300
00:45:08,240 --> 00:45:10,000
instead of two to the n over two that we

1301
00:45:10,000 --> 00:45:12,160
had before and the time complexity stays

1302
00:45:12,160 --> 00:45:14,160
the same

1303
00:45:14,160 --> 00:45:16,720
and so now having seen this

1304
00:45:16,720 --> 00:45:18,960
we try to answer the the question about

1305
00:45:18,960 --> 00:45:21,359
can we apply simon in q1 so the first

1306
00:45:21,359 --> 00:45:23,920
idea it's very simple is to simulate q2

1307
00:45:23,920 --> 00:45:26,000
queries so we could just perform for

1308
00:45:26,000 --> 00:45:27,839
instance two to the n

1309
00:45:27,839 --> 00:45:30,640
queries here for x and then we build the

1310
00:45:30,640 --> 00:45:32,400
artificially superposition of these

1311
00:45:32,400 --> 00:45:34,160
queries and then we have a superposition

1312
00:45:34,160 --> 00:45:36,319
state without needing any any quantum

1313
00:45:36,319 --> 00:45:37,760
queries but

1314
00:45:37,760 --> 00:45:39,200
this would already cost you to the end

1315
00:45:39,200 --> 00:45:41,119
so it wouldn't be very interesting so

1316
00:45:41,119 --> 00:45:43,119
what can we do to make it interesting

1317
00:45:43,119 --> 00:45:45,680
it's to separate the input into parts

1318
00:45:45,680 --> 00:45:47,280
so the end bits of the input can be

1319
00:45:47,280 --> 00:45:50,880
separated in u and in n minus u bits

1320
00:45:50,880 --> 00:45:52,400
and so the key k1 is separated

1321
00:45:52,400 --> 00:45:54,960
consequently also in two parts

1322
00:45:54,960 --> 00:45:57,599
so the part of ubits will have the input

1323
00:45:57,599 --> 00:45:59,680
that we will consider that is x

1324
00:45:59,680 --> 00:46:00,800
and the

1325
00:46:00,800 --> 00:46:02,960
related key of k1

1326
00:46:02,960 --> 00:46:05,440
and the other input we will consider

1327
00:46:05,440 --> 00:46:07,839
that we have zero that writes there and

1328
00:46:07,839 --> 00:46:08,880
will have

1329
00:46:08,880 --> 00:46:10,319
the remaining part of the key that is

1330
00:46:10,319 --> 00:46:12,800
sold to them so the idea here will be to

1331
00:46:12,800 --> 00:46:14,000
perform an

1332
00:46:14,000 --> 00:46:16,160
exhaustive search with grover in one

1333
00:46:16,160 --> 00:46:17,440
part of the key

1334
00:46:17,440 --> 00:46:19,839
and once we have this we can try to

1335
00:46:19,839 --> 00:46:21,359
apply simon's algorithm in order to

1336
00:46:21,359 --> 00:46:23,680
recover the other key so this actually

1337
00:46:23,680 --> 00:46:25,440
can be rewritten in a much easier way

1338
00:46:25,440 --> 00:46:26,640
now that we have seen the fixed

1339
00:46:26,640 --> 00:46:29,040
construction and this looks totally like

1340
00:46:29,040 --> 00:46:31,040
the fixed construction where we have an

1341
00:46:31,040 --> 00:46:33,200
input of ubits

1342
00:46:33,200 --> 00:46:35,440
uh a key k-1

1343
00:46:35,440 --> 00:46:37,440
one that is sort

1344
00:46:37,440 --> 00:46:39,200
here instead of having a permutation now

1345
00:46:39,200 --> 00:46:40,640
we have a permutation that is

1346
00:46:40,640 --> 00:46:43,040
parameterized by a secret key k 1 2 so

1347
00:46:43,040 --> 00:46:45,040
that looks a lot like the ak that we had

1348
00:46:45,040 --> 00:46:48,880
in fx and then we have the second key k2

1349
00:46:48,880 --> 00:46:50,640
so

1350
00:46:50,640 --> 00:46:53,520
we have the n minus u bits from chi 1

1351
00:46:53,520 --> 00:46:55,280
that are i guess with grover and the

1352
00:46:55,280 --> 00:46:56,880
remaining ubits will be recovered with

1353
00:46:56,880 --> 00:46:58,319
seven secret periods with exactly the

1354
00:46:58,319 --> 00:47:00,079
same algorithm that we just discussed

1355
00:47:00,079 --> 00:47:01,200
for effects

1356
00:47:01,200 --> 00:47:02,319
so here

1357
00:47:02,319 --> 00:47:04,319
the complexity is going to be in data 2

1358
00:47:04,319 --> 00:47:06,720
to the u because what we will do is to

1359
00:47:06,720 --> 00:47:09,200
call all the possible inputs x that now

1360
00:47:09,200 --> 00:47:10,720
is not 2 to the n as it was in the

1361
00:47:10,720 --> 00:47:13,200
previous life but it's 2 to the u and we

1362
00:47:13,200 --> 00:47:14,800
build the superposition with these

1363
00:47:14,800 --> 00:47:17,119
classical queries and once we have this

1364
00:47:17,119 --> 00:47:19,200
that we have also to pay in time we can

1365
00:47:19,200 --> 00:47:21,920
perform uh

1366
00:47:21,920 --> 00:47:24,640
a simon attack in the uh

1367
00:47:24,640 --> 00:47:26,880
sorry the test of the global iteration

1368
00:47:26,880 --> 00:47:28,800
will be applying simon and checking if

1369
00:47:28,800 --> 00:47:30,400
we have period or not

1370
00:47:30,400 --> 00:47:32,240
so that's the final time complexity we

1371
00:47:32,240 --> 00:47:34,400
obtain and this implies that data times

1372
00:47:34,400 --> 00:47:36,680
the square of the time is 2 to the

1373
00:47:36,680 --> 00:47:39,359
end so if we have a look at what this

1374
00:47:39,359 --> 00:47:41,280
means complexity wise

1375
00:47:41,280 --> 00:47:43,119
in even month 4 which is this first

1376
00:47:43,119 --> 00:47:44,640
table here

1377
00:47:44,640 --> 00:47:47,119
our attack is the one in the last line

1378
00:47:47,119 --> 00:47:49,920
and we see that we can provide the same

1379
00:47:49,920 --> 00:47:52,400
query sometime as the one from coach and

1380
00:47:52,400 --> 00:47:56,000
mori use bht but instead of needing a

1381
00:47:56,000 --> 00:47:58,480
very quantum memory that it was a qram

1382
00:47:58,480 --> 00:48:00,480
in their case we only need a few bits

1383
00:48:00,480 --> 00:48:02,800
for for storing the register so it's a

1384
00:48:02,800 --> 00:48:04,319
very big improvement regarding the

1385
00:48:04,319 --> 00:48:05,359
memory

1386
00:48:05,359 --> 00:48:07,839
and in the case of a fix we just saw how

1387
00:48:07,839 --> 00:48:09,920
the data of the attack from lender and

1388
00:48:09,920 --> 00:48:12,720
may can be improved but also we can

1389
00:48:12,720 --> 00:48:14,880
provide the q1 attacks that improves

1390
00:48:14,880 --> 00:48:16,000
also the

1391
00:48:16,000 --> 00:48:19,359
queries and time parameters

1392
00:48:19,440 --> 00:48:21,359
so to conclude this part we have

1393
00:48:21,359 --> 00:48:23,200
presented the best-known attacks on q1

1394
00:48:23,200 --> 00:48:26,720
and q2 of am of even master and ethics

1395
00:48:26,720 --> 00:48:29,680
uh we have shown how can we reduce the

1396
00:48:29,680 --> 00:48:32,880
data uh on some q2 attacks and propose

1397
00:48:32,880 --> 00:48:34,480
the first

1398
00:48:34,480 --> 00:48:36,240
simon attacking one

1399
00:48:36,240 --> 00:48:38,319
and this is our first spoiler of the

1400
00:48:38,319 --> 00:48:40,160
talk because in this afternoon there

1401
00:48:40,160 --> 00:48:42,240
will be a very nice talk uh by allah

1402
00:48:42,240 --> 00:48:44,559
gigel that will show that offline simon

1403
00:48:44,559 --> 00:48:47,040
is indeed optimal for even monsoon

1404
00:48:47,040 --> 00:48:48,480
and there are other applications that

1405
00:48:48,480 --> 00:48:50,480
have appeared of offline times like

1406
00:48:50,480 --> 00:48:52,960
slide attacks for related key and q1

1407
00:48:52,960 --> 00:48:57,040
and some analysis in sms4 and instant

1408
00:48:57,040 --> 00:48:58,720
candidates of the um

1409
00:48:58,720 --> 00:49:00,559
of the lego competition like elephant

1410
00:49:00,559 --> 00:49:01,440
and

1411
00:49:01,440 --> 00:49:03,920
fantasy i think

1412
00:49:03,920 --> 00:49:05,839
and then the question that we have not

1413
00:49:05,839 --> 00:49:07,920
answered yet that was is a better than

1414
00:49:07,920 --> 00:49:10,240
quadratic speed up possible in q1 so the

1415
00:49:10,240 --> 00:49:12,240
answer of this is yes and that's the

1416
00:49:12,240 --> 00:49:14,880
second spoiler because um

1417
00:49:14,880 --> 00:49:17,839
bonito

1418
00:49:17,839 --> 00:49:20,240
showed that actually the tuxor cascade

1419
00:49:20,240 --> 00:49:22,240
that was proposed by cassie antesaro in

1420
00:49:22,240 --> 00:49:23,920
2012

1421
00:49:23,920 --> 00:49:26,319
has a classical um

1422
00:49:26,319 --> 00:49:29,599
classical security of two to the 2.5

1423
00:49:29,599 --> 00:49:32,880
sorry 2 to the 2.5 n security and

1424
00:49:32,880 --> 00:49:35,520
quantumly the securities to to the end

1425
00:49:35,520 --> 00:49:36,640
so the

1426
00:49:36,640 --> 00:49:38,640
the acceleration is more than quadratic

1427
00:49:38,640 --> 00:49:40,480
and if you want details on this you will

1428
00:49:40,480 --> 00:49:41,760
have to attend the

1429
00:49:41,760 --> 00:49:45,920
pontas bantam this afternoon

1430
00:49:45,920 --> 00:49:48,319
so now we arrive at the part uh nearly

1431
00:49:48,319 --> 00:49:50,160
the final part on design of quantum safe

1432
00:49:50,160 --> 00:49:52,000
symmetry constructions

1433
00:49:52,000 --> 00:49:53,599
that's there's not a lot of results here

1434
00:49:53,599 --> 00:49:54,880
and i think this should change and i

1435
00:49:54,880 --> 00:49:57,040
would like to see a many more results

1436
00:49:57,040 --> 00:49:59,200
appear so uh

1437
00:49:59,200 --> 00:50:00,880
there was a nice paper by allegy and

1438
00:50:00,880 --> 00:50:03,119
russell 2017 that proposed how to

1439
00:50:03,119 --> 00:50:04,880
counter simon attacks using other

1440
00:50:04,880 --> 00:50:08,000
operation operations besides sword

1441
00:50:08,000 --> 00:50:10,000
uh in 2020 we proposed that our noun

1442
00:50:10,000 --> 00:50:11,280
that was a quantum state family of

1443
00:50:11,280 --> 00:50:12,640
symmetric primitives that was a

1444
00:50:12,640 --> 00:50:14,400
candidate of the lightweight competition

1445
00:50:14,400 --> 00:50:15,920
but that is not in the competition

1446
00:50:15,920 --> 00:50:18,079
anymore and we have already talked about

1447
00:50:18,079 --> 00:50:21,200
qcbm that is an efficient quantum safe

1448
00:50:21,200 --> 00:50:24,559
one pass authenticated encryption mode

1449
00:50:24,559 --> 00:50:27,760
and uh so this is not dedicated uh

1450
00:50:27,760 --> 00:50:29,599
constructions but sponge construction

1451
00:50:29,599 --> 00:50:31,839
with big enough states seem also

1452
00:50:31,839 --> 00:50:33,920
uh to have very good resistance to

1453
00:50:33,920 --> 00:50:35,440
quantum attacks and quantum industrial

1454
00:50:35,440 --> 00:50:38,240
which ability was proposed by catholics

1455
00:50:38,240 --> 00:50:40,880
in into papers

1456
00:50:40,880 --> 00:50:43,359
so we arrived nearly to the end uh i

1457
00:50:43,359 --> 00:50:44,720
just wanted to mention some open

1458
00:50:44,720 --> 00:50:45,760
problems that i think would be

1459
00:50:45,760 --> 00:50:49,680
interesting to work on in this setting

1460
00:50:49,680 --> 00:50:52,240
so of course to find the new quantum

1461
00:50:52,240 --> 00:50:53,680
attacks one point that i think would be

1462
00:50:53,680 --> 00:50:55,839
interesting but that we've been working

1463
00:50:55,839 --> 00:50:57,920
on for a long time and we have found no

1464
00:50:57,920 --> 00:51:00,319
way of doing that but it would be great

1465
00:51:00,319 --> 00:51:02,240
if someone could was how to apply the

1466
00:51:02,240 --> 00:51:05,839
quantum uh clear transform uh to uh

1467
00:51:05,839 --> 00:51:07,520
to speed up the key recovery part of

1468
00:51:07,520 --> 00:51:10,079
linear cryptanalysis which is uh already

1469
00:51:10,079 --> 00:51:12,160
very nice classically but maybe

1470
00:51:12,160 --> 00:51:14,079
this would improve even more if we could

1471
00:51:14,079 --> 00:51:16,960
do this efficiently quantum

1472
00:51:16,960 --> 00:51:17,839
and

1473
00:51:17,839 --> 00:51:20,400
i think it's still important to keep on

1474
00:51:20,400 --> 00:51:22,400
analyzing the quantum security of the

1475
00:51:22,400 --> 00:51:24,000
primitives that we are considering like

1476
00:51:24,000 --> 00:51:25,200
in the lightweight competition for

1477
00:51:25,200 --> 00:51:26,559
instance

1478
00:51:26,559 --> 00:51:28,559
a very important point is that try to

1479
00:51:28,559 --> 00:51:31,280
find the generic ways of extending the

1480
00:51:31,280 --> 00:51:33,280
key and the states as the states also

1481
00:51:33,280 --> 00:51:35,280
reflect some attacks that can be worse

1482
00:51:35,280 --> 00:51:37,520
quantumly when we try to collide

1483
00:51:37,520 --> 00:51:39,920
in most or something like this and so

1484
00:51:39,920 --> 00:51:41,760
finding a generic ways of extending the

1485
00:51:41,760 --> 00:51:43,599
key and the state would be very nice and

1486
00:51:43,599 --> 00:51:45,839
doesn't sound that simple

1487
00:51:45,839 --> 00:51:47,680
uh of course with research with

1488
00:51:47,680 --> 00:51:49,920
guarantees of resistance to quantum

1489
00:51:49,920 --> 00:51:50,800
attacks

1490
00:51:50,800 --> 00:51:53,359
and uh another point that i think a lot

1491
00:51:53,359 --> 00:51:55,839
of people have looked at but

1492
00:51:55,839 --> 00:51:57,040
so far no

1493
00:51:57,040 --> 00:51:59,200
no results regarding this is trying to

1494
00:51:59,200 --> 00:52:01,359
apply simon attacks on hash functions

1495
00:52:01,359 --> 00:52:02,720
because as in hash functions we don't

1496
00:52:02,720 --> 00:52:04,880
have a key um

1497
00:52:04,880 --> 00:52:06,800
those attacks wouldn't be in q2 but in

1498
00:52:06,800 --> 00:52:09,359
q1 so if we find the the kind of

1499
00:52:09,359 --> 00:52:11,200
structure that we have exploited in

1500
00:52:11,200 --> 00:52:13,040
creature attacks and hash function that

1501
00:52:13,040 --> 00:52:14,800
would give i think very

1502
00:52:14,800 --> 00:52:16,880
very important attacks

1503
00:52:16,880 --> 00:52:19,440
and i think also it's important to try

1504
00:52:19,440 --> 00:52:21,359
to evaluate

1505
00:52:21,359 --> 00:52:23,119
the cost of quantum implementation of

1506
00:52:23,119 --> 00:52:25,200
algorithms to correctly compare them to

1507
00:52:25,200 --> 00:52:26,800
genetic attacks

1508
00:52:26,800 --> 00:52:29,440
propose more quantization of classical

1509
00:52:29,440 --> 00:52:30,960
cryptanalysis

1510
00:52:30,960 --> 00:52:33,680
uh we are working on trying to build

1511
00:52:33,680 --> 00:52:35,599
offline linearization attacks that

1512
00:52:35,599 --> 00:52:37,040
doesn't seem very obvious now but i

1513
00:52:37,040 --> 00:52:38,559
think would be nice

1514
00:52:38,559 --> 00:52:40,960
and some different types of simon based

1515
00:52:40,960 --> 00:52:42,880
attacks as the linearization ones that

1516
00:52:42,880 --> 00:52:44,559
we think might appear or

1517
00:52:44,559 --> 00:52:46,400
combining them maybe with other quantum

1518
00:52:46,400 --> 00:52:47,760
algorithms

1519
00:52:47,760 --> 00:52:49,680
so just to conclude the

1520
00:52:49,680 --> 00:52:52,319
the quantum safe part uh nearly the talk

1521
00:52:52,319 --> 00:52:55,040
i think that's the the lesson to

1522
00:52:55,040 --> 00:52:56,640
to remember is that there is no reason

1523
00:52:56,640 --> 00:52:58,400
to panic that symmetry crypto seems to

1524
00:52:58,400 --> 00:53:00,480
be holding on very well

1525
00:53:00,480 --> 00:53:01,760
um i think

1526
00:53:01,760 --> 00:53:03,920
an interesting point i insist would be

1527
00:53:03,920 --> 00:53:06,640
to try to find ways of

1528
00:53:06,640 --> 00:53:09,440
of easily using the construction we have

1529
00:53:09,440 --> 00:53:10,640
now and

1530
00:53:10,640 --> 00:53:12,640
proposing bigger internal states and

1531
00:53:12,640 --> 00:53:16,319
bigger keys would be very interesting

1532
00:53:16,319 --> 00:53:18,319
and also we have seen that sometimes

1533
00:53:18,319 --> 00:53:20,079
ideas for quantum cryptanalysis might

1534
00:53:20,079 --> 00:53:21,520
improve classical attacks but i think

1535
00:53:21,520 --> 00:53:23,839
it's a it's a very nice

1536
00:53:23,839 --> 00:53:25,839
it's a very nice result and we have to

1537
00:53:25,839 --> 00:53:27,440
keep it in mind and there are many

1538
00:53:27,440 --> 00:53:29,119
things yet to do

1539
00:53:29,119 --> 00:53:30,880
like to precisely evaluate the security

1540
00:53:30,880 --> 00:53:33,119
to find new best better attacks and to

1541
00:53:33,119 --> 00:53:35,119
adjust the parameters

1542
00:53:35,119 --> 00:53:37,599
so thank you very much and just i hope

1543
00:53:37,599 --> 00:53:39,040
you all will remember that there are

1544
00:53:39,040 --> 00:53:40,319
still lots of things to do in symmetric

1545
00:53:40,319 --> 00:53:43,839
cryptography thank you

1546
00:53:50,480 --> 00:53:52,079
thank you very much for your talk are

1547
00:53:52,079 --> 00:53:54,240
there any questions and i remind you

1548
00:53:54,240 --> 00:53:56,000
those with questions please approach one

1549
00:53:56,000 --> 00:53:57,040
of the mics

1550
00:53:57,040 --> 00:53:57,910
can you please

1551
00:53:57,910 --> 00:54:01,089
[Music]

1552
00:54:07,200 --> 00:54:08,800
hello madam thank you for the wonderful

1553
00:54:08,800 --> 00:54:11,599
talk uh this is a smart from pakistan my

1554
00:54:11,599 --> 00:54:13,280
question is madam you have mentioned in

1555
00:54:13,280 --> 00:54:15,440
slide number 10 that for in the post

1556
00:54:15,440 --> 00:54:17,280
quantum cryptography scenario talking

1557
00:54:17,280 --> 00:54:19,599
about the symmetric cryptography the

1558
00:54:19,599 --> 00:54:22,240
grover's algorithm has just reduced the

1559
00:54:22,240 --> 00:54:24,240
exhaustive key so we have to double the

1560
00:54:24,240 --> 00:54:25,760
key length for the equivalent ideal

1561
00:54:25,760 --> 00:54:29,440
security so is there any other

1562
00:54:29,440 --> 00:54:31,760
solution you in your mind which you can

1563
00:54:31,760 --> 00:54:33,440
suggest for

1564
00:54:33,440 --> 00:54:36,720
for keeping the symmetric algorithms

1565
00:54:36,720 --> 00:54:40,000
safer in the post quantum mechanics

1566
00:54:40,000 --> 00:54:42,240
so i think doubling the key is needed

1567
00:54:42,240 --> 00:54:42,960
but

1568
00:54:42,960 --> 00:54:44,079
yes

1569
00:54:44,079 --> 00:54:45,760
it's not a question maybe yes yes in in

1570
00:54:45,760 --> 00:54:47,200
the slide number 11 you have shown the

1571
00:54:47,200 --> 00:54:49,040
solutions also

1572
00:54:49,040 --> 00:54:51,040
yes

1573
00:54:51,040 --> 00:54:52,640
so i think one thing is doubling the key

1574
00:54:52,640 --> 00:54:54,960
that this is needed but we also need to

1575
00:54:54,960 --> 00:54:57,280
try to find out the best ways an

1576
00:54:57,280 --> 00:54:58,640
attacker would have

1577
00:54:58,640 --> 00:55:00,559
for trying to attack the primitive so i

1578
00:55:00,559 --> 00:55:02,079
think both things are needed not only

1579
00:55:02,079 --> 00:55:04,559
just doubling the key but also studying

1580
00:55:04,559 --> 00:55:06,160
uh what are the best tools that that

1581
00:55:06,160 --> 00:55:07,920
natal way so we have to make it secure

1582
00:55:07,920 --> 00:55:10,000
against all the known attacks yes

1583
00:55:10,000 --> 00:55:11,359
okay thank you

1584
00:55:11,359 --> 00:55:13,680
thank you

1585
00:55:17,839 --> 00:55:19,760
yeah so question um

1586
00:55:19,760 --> 00:55:21,280
the uh

1587
00:55:21,280 --> 00:55:23,280
q2 model is often criticized as being

1588
00:55:23,280 --> 00:55:26,000
quite uh unrealistic but i was wondering

1589
00:55:26,000 --> 00:55:27,920
in a setting where uh both the honest

1590
00:55:27,920 --> 00:55:29,680
parties and the adversary are all using

1591
00:55:29,680 --> 00:55:31,839
quantum computers sorry

1592
00:55:31,839 --> 00:55:33,520
in a setting where all the parties

1593
00:55:33,520 --> 00:55:35,359
including the honest parties are using

1594
00:55:35,359 --> 00:55:37,839
quantum computers so in like a fully

1595
00:55:37,839 --> 00:55:39,680
quantum world

1596
00:55:39,680 --> 00:55:41,760
where these q2 attacks become realistic

1597
00:55:41,760 --> 00:55:42,960
then

1598
00:55:42,960 --> 00:55:46,599
i guess so right

1599
00:55:56,400 --> 00:55:57,599
hi and

1600
00:55:57,599 --> 00:56:00,160
thanks for a great talk um i have a

1601
00:56:00,160 --> 00:56:02,079
question related to the q through

1602
00:56:02,079 --> 00:56:03,280
security

1603
00:56:03,280 --> 00:56:04,240
to the

1604
00:56:04,240 --> 00:56:05,839
q2 model

1605
00:56:05,839 --> 00:56:07,839
especially related to feistel networks

1606
00:56:07,839 --> 00:56:10,240
for example so we know that three and

1607
00:56:10,240 --> 00:56:12,640
four rounds are attacked in the cpa and

1608
00:56:12,640 --> 00:56:14,960
cc case respectively

1609
00:56:14,960 --> 00:56:17,680
i think there is a result by

1610
00:56:17,680 --> 00:56:20,720
iwata and jose yamada about uh security

1611
00:56:20,720 --> 00:56:23,280
in the cpa case for the four rounds

1612
00:56:23,280 --> 00:56:26,799
how about uh security for cca aquarius

1613
00:56:26,799 --> 00:56:27,920
in the

1614
00:56:27,920 --> 00:56:29,920
in the future setting is it open problem

1615
00:56:29,920 --> 00:56:32,799
or so yes i i think it's an open problem

1616
00:56:32,799 --> 00:56:34,720
i know that i can already is working on

1617
00:56:34,720 --> 00:56:36,640
that like crazy for instance okay

1618
00:56:36,640 --> 00:56:37,760
so a lot of people i think they're

1619
00:56:37,760 --> 00:56:39,440
trying to make the five rounds uh with

1620
00:56:39,440 --> 00:56:41,280
pro or quantum security but it's it

1621
00:56:41,280 --> 00:56:43,280
seems kind of complicated for now but i

1622
00:56:43,280 --> 00:56:44,799
think there are a lot of advances and i

1623
00:56:44,799 --> 00:56:46,400
think that's something that when we will

1624
00:56:46,400 --> 00:56:48,319
have more tools for the

1625
00:56:48,319 --> 00:56:50,319
for the probable quantum security maybe

1626
00:56:50,319 --> 00:56:52,799
in these settings i think it will appear

1627
00:56:52,799 --> 00:56:54,480
but yeah i think everybody is expecting

1628
00:56:54,480 --> 00:56:56,720
that five rounds should be right but uh

1629
00:56:56,720 --> 00:56:59,040
that's it yes and another question i

1630
00:56:59,040 --> 00:57:00,760
have what about uh

1631
00:57:00,760 --> 00:57:04,000
indifferentiability for example uh is it

1632
00:57:04,000 --> 00:57:06,000
is it a topic that has been addressed so

1633
00:57:06,000 --> 00:57:06,880
i think

1634
00:57:06,880 --> 00:57:08,720
in a sponge function for instance no

1635
00:57:08,720 --> 00:57:11,520
industrial usability but

1636
00:57:11,520 --> 00:57:13,440
i

1637
00:57:13,440 --> 00:57:15,599
i i think specifically about feister you

1638
00:57:15,599 --> 00:57:18,079
know because there are oh yeah

1639
00:57:18,079 --> 00:57:19,680
so traditionally

1640
00:57:19,680 --> 00:57:21,520
results have been improving like 14

1641
00:57:21,520 --> 00:57:23,440
rounds is classically differentiable and

1642
00:57:23,440 --> 00:57:25,440
then down to

1643
00:57:25,440 --> 00:57:27,200
i don't know what's the state of the art

1644
00:57:27,200 --> 00:57:29,359
so i'm not aware of any results i think

1645
00:57:29,359 --> 00:57:30,720
it would be very interesting of course

1646
00:57:30,720 --> 00:57:32,079
any direction

1647
00:57:32,079 --> 00:57:33,599
any results on

1648
00:57:33,599 --> 00:57:35,119
understanding better security or having

1649
00:57:35,119 --> 00:57:35,839
more

1650
00:57:35,839 --> 00:57:37,520
more guarantees i think would be super

1651
00:57:37,520 --> 00:57:41,799
interesting okay thank you

1652
00:57:47,200 --> 00:57:49,359
hey thank you for the wonderful talk uh

1653
00:57:49,359 --> 00:57:51,359
i was wondering whether there are

1654
00:57:51,359 --> 00:57:54,799
interaction between proofs for protocols

1655
00:57:54,799 --> 00:57:56,400
in the cura model

1656
00:57:56,400 --> 00:58:00,559
with security analysis of symmetric

1657
00:58:00,559 --> 00:58:02,480
if there is interaction between between

1658
00:58:02,480 --> 00:58:04,319
the proofs in the current model because

1659
00:58:04,319 --> 00:58:05,040
there's

1660
00:58:05,040 --> 00:58:08,160
modeling yes having qrams right or

1661
00:58:08,160 --> 00:58:08,960
when

1662
00:58:08,960 --> 00:58:11,280
proofs when you have yes for example

1663
00:58:11,280 --> 00:58:12,880
zero knowledge

1664
00:58:12,880 --> 00:58:13,760
or

1665
00:58:13,760 --> 00:58:15,520
sigma protocols

1666
00:58:15,520 --> 00:58:17,599
and stationary heuristics yes whether

1667
00:58:17,599 --> 00:58:19,359
those all those techniques in idealized

1668
00:58:19,359 --> 00:58:22,319
models are also useful for proving or

1669
00:58:22,319 --> 00:58:24,400
analyzing security of symmetric key

1670
00:58:24,400 --> 00:58:27,200
crypto i don't know so citing the ram

1671
00:58:27,200 --> 00:58:28,960
session from yesterday uh we can take

1672
00:58:28,960 --> 00:58:31,680
the question offline

1673
00:58:34,160 --> 00:58:36,960
so just before the we we finish one

1674
00:58:36,960 --> 00:58:38,559
quick question have you tried

1675
00:58:38,559 --> 00:58:40,319
implementing any of these attacks on the

1676
00:58:40,319 --> 00:58:42,079
quantum computers so yeah i hear

1677
00:58:42,079 --> 00:58:44,000
superpowers some companies i'm not going

1678
00:58:44,000 --> 00:58:45,440
to do promotions because they're not

1679
00:58:45,440 --> 00:58:48,960
giving a sponsorship money offer um

1680
00:58:48,960 --> 00:58:51,280
quantum computation

1681
00:58:51,280 --> 00:58:52,960
capabilities so you can connect to their

1682
00:58:52,960 --> 00:58:54,640
computers and

1683
00:58:54,640 --> 00:58:56,640
did anyone try to implement one of these

1684
00:58:56,640 --> 00:58:59,040
attacks on that publicly available

1685
00:58:59,040 --> 00:59:00,880
quantum computers know that i know that

1686
00:59:00,880 --> 00:59:02,480
this is a metric part i don't think so

1687
00:59:02,480 --> 00:59:05,200
but um would be would be nice to try

1688
00:59:05,200 --> 00:59:06,720
maybe someone has more information on

1689
00:59:06,720 --> 00:59:08,880
that on the room but

1690
00:59:08,880 --> 00:59:12,240
or funding from that company

1691
00:59:12,720 --> 00:59:14,720
yeah if not

1692
00:59:14,720 --> 00:59:19,240
thanks thank you thank you very much

1693
00:59:23,200 --> 00:59:25,599
we will reconvene in about seven minutes

1694
00:59:25,599 --> 00:59:29,480
here and in the other room

1695
01:02:37,839 --> 01:02:39,920
you

