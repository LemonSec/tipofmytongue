1
00:00:01,199 --> 00:00:03,599
hi everyone i'm lea and today i will be

2
00:00:03,600 --> 00:00:05,759
talking about crypt analysis of

3
00:00:05,759 --> 00:00:08,080
candidates of skaters for fan

4
00:00:08,080 --> 00:00:10,240
determinant programs

5
00:00:10,240 --> 00:00:15,639
it's a joint work with lhan my advisory

6
00:00:17,119 --> 00:00:20,080
bij plus 20 proposed candidate of a

7
00:00:20,080 --> 00:00:22,560
status whose computational model is not

8
00:00:22,560 --> 00:00:24,640
circuit or turing machine but a fan

9
00:00:24,640 --> 00:00:26,480
determinant program

10
00:00:26,480 --> 00:00:28,560
a fund determinant program has strong

11
00:00:28,560 --> 00:00:30,640
connection with branching program and i

12
00:00:30,640 --> 00:00:33,280
will explain the connection later

13
00:00:33,280 --> 00:00:35,600
in this work we show cryptanalytic

14
00:00:35,600 --> 00:00:37,760
attack on their candidates

15
00:00:37,760 --> 00:00:40,239
we also give a plausible fix which may

16
00:00:40,239 --> 00:00:44,360
defend against our attack

17
00:00:45,120 --> 00:00:47,000
let's start by talking about the

18
00:00:47,000 --> 00:00:49,600
indistinguishability of a station

19
00:00:49,600 --> 00:00:52,160
io is a compeller whose input is the

20
00:00:52,160 --> 00:00:53,360
program p

21
00:00:53,360 --> 00:00:55,840
it outputs the program p prime which

22
00:00:55,840 --> 00:00:58,559
computes the same function functionality

23
00:00:58,559 --> 00:01:01,039
moreover if we have two functionally

24
00:01:01,039 --> 00:01:04,879
equivalent programs p1 and p2 p1 prime

25
00:01:04,879 --> 00:01:06,880
and p2 prime are computationally

26
00:01:06,880 --> 00:01:09,880
indistinguishable

27
00:01:10,799 --> 00:01:12,880
now let me introduce the computational

28
00:01:12,880 --> 00:01:14,960
model used in the candidate dial we

29
00:01:14,960 --> 00:01:16,960
check branching program and find

30
00:01:16,960 --> 00:01:18,960
determinant program

31
00:01:18,960 --> 00:01:21,600
both of them can compute some function f

32
00:01:21,600 --> 00:01:26,600
with n bit input and one bit output

33
00:01:27,280 --> 00:01:30,320
a bp is a dh with one source node and

34
00:01:30,320 --> 00:01:31,920
one sync node

35
00:01:31,920 --> 00:01:35,600
the edges of the dh are labeled by x i

36
00:01:35,600 --> 00:01:38,079
not hexa01

37
00:01:38,079 --> 00:01:40,640
here excise some input bit of the

38
00:01:40,640 --> 00:01:42,320
function f

39
00:01:42,320 --> 00:01:45,840
the bp is evaluated in two steps

40
00:01:45,840 --> 00:01:49,119
first we delete those ages whose label

41
00:01:49,119 --> 00:01:52,560
equals zero according to the input x

42
00:01:52,560 --> 00:01:56,000
for example if the input is 1 1 1

43
00:01:56,000 --> 00:02:00,320
then x 2 equals 1 not x 2 equals 0.

44
00:02:00,320 --> 00:02:02,960
so we need to delete the age

45
00:02:02,960 --> 00:02:05,360
labeled by not x2

46
00:02:05,360 --> 00:02:07,600
second we come to the path from the

47
00:02:07,600 --> 00:02:10,399
source node to the sink node

48
00:02:10,399 --> 00:02:13,840
since we set the dh carefully the number

49
00:02:13,840 --> 00:02:18,080
of paths is either 0 or 1 for example on

50
00:02:18,080 --> 00:02:22,319
input 1 1 1 the bp output 0 as there is

51
00:02:22,319 --> 00:02:24,800
no path from the source node to the sync

52
00:02:24,800 --> 00:02:27,120
node

53
00:02:28,800 --> 00:02:32,239
an adp consists of oneplus one matrices

54
00:02:32,239 --> 00:02:35,120
along with an evaluate function

55
00:02:35,120 --> 00:02:38,800
adp is also evaluated in two steps

56
00:02:38,800 --> 00:02:41,760
first is compute c of x which equals a

57
00:02:41,760 --> 00:02:44,160
plus sum of x i bi

58
00:02:44,160 --> 00:02:46,720
from i equals 1 to n

59
00:02:46,720 --> 00:02:49,599
second it computes the determinant of l

60
00:02:49,599 --> 00:02:52,879
of x and fitted to the evaluate function

61
00:02:52,879 --> 00:02:54,640
as the input

62
00:02:54,640 --> 00:02:56,959
here the available function is identify

63
00:02:56,959 --> 00:03:00,560
function so we omit it

64
00:03:01,040 --> 00:03:03,599
there's the transformation from bps to

65
00:03:03,599 --> 00:03:04,879
adp's

66
00:03:04,879 --> 00:03:08,000
letter mod of x denotes adjacency matrix

67
00:03:08,000 --> 00:03:09,680
of dig

68
00:03:09,680 --> 00:03:12,560
we can obtain l of x by deleting the

69
00:03:12,560 --> 00:03:15,760
first column and the last law of m of x

70
00:03:15,760 --> 00:03:19,440
minus identity matrix correctness is

71
00:03:19,440 --> 00:03:22,560
from ik97 which says that the

72
00:03:22,560 --> 00:03:25,280
determinant of failure of x is equal to

73
00:03:25,280 --> 00:03:27,760
the number of parts from the first node

74
00:03:27,760 --> 00:03:29,440
to the last node

75
00:03:29,440 --> 00:03:32,879
since we can write hexa as zero plus x i

76
00:03:32,879 --> 00:03:36,159
times one and write note x as

77
00:03:36,159 --> 00:03:39,680
one plus x i times minus one

78
00:03:39,680 --> 00:03:43,120
l of x can be written as a plus sum of x

79
00:03:43,120 --> 00:03:44,480
sub b i

80
00:03:44,480 --> 00:03:48,159
from i equals 1 to n

81
00:03:48,159 --> 00:03:52,239
for example the not x 2 entry in l of x

82
00:03:52,239 --> 00:03:55,680
can be decomposed to a 1 entry in matrix

83
00:03:55,680 --> 00:03:56,560
a

84
00:03:56,560 --> 00:04:00,480
and minus 1 entry matrix b2

85
00:04:00,480 --> 00:04:03,599
we can also observe that if f of x has

86
00:04:03,599 --> 00:04:06,560
nothing to do with some input x i

87
00:04:06,560 --> 00:04:11,120
the bi matrix will be a zero matrix

88
00:04:11,120 --> 00:04:13,599
this observation is useful in our

89
00:04:13,599 --> 00:04:16,079
attacks

90
00:04:16,478 --> 00:04:19,519
now let me take a brief look at the big

91
00:04:19,519 --> 00:04:22,240
and messed up fascication scheme

92
00:04:22,240 --> 00:04:24,800
the scheme consists of four different

93
00:04:24,800 --> 00:04:28,080
functionally preserving transformations

94
00:04:28,080 --> 00:04:32,160
there are irs and noise and lag relent

95
00:04:32,160 --> 00:04:35,520
a dag is designed to prevent this honest

96
00:04:35,520 --> 00:04:36,880
evaluation

97
00:04:36,880 --> 00:04:39,520
and the rand is done to help hide the

98
00:04:39,520 --> 00:04:41,680
information except

99
00:04:41,680 --> 00:04:43,280
and rank

100
00:04:43,280 --> 00:04:45,759
since our tech never evaluates this

101
00:04:45,759 --> 00:04:48,639
honestly and only uses determinate

102
00:04:48,639 --> 00:04:52,400
information we can only focus on ios and

103
00:04:52,400 --> 00:04:54,400
the l noise

104
00:04:54,400 --> 00:04:57,040
and noise were generated and noise

105
00:04:57,040 --> 00:04:59,600
matrices each entries of them are

106
00:04:59,600 --> 00:05:02,639
sampled from some noise distribution

107
00:05:02,639 --> 00:05:05,280
we added two times of these matrices

108
00:05:05,280 --> 00:05:09,199
respectively to the matrices of adp

109
00:05:09,199 --> 00:05:12,240
to keep the correctness the evaluator

110
00:05:12,240 --> 00:05:14,400
function also changes from identify

111
00:05:14,400 --> 00:05:17,360
function to module 2 function

112
00:05:17,360 --> 00:05:20,800
vij plus 20 proposed the mode 4 attack

113
00:05:20,800 --> 00:05:23,120
to show that the scheme cannot be

114
00:05:23,120 --> 00:05:26,000
secured without ios

115
00:05:26,000 --> 00:05:28,240
the attack works by computing the

116
00:05:28,240 --> 00:05:30,240
determinant mode 4

117
00:05:30,240 --> 00:05:32,720
since the program is chosen carefully by

118
00:05:32,720 --> 00:05:36,000
the anniversary the only unknown part is

119
00:05:36,000 --> 00:05:38,800
the noise added in this step

120
00:05:38,800 --> 00:05:41,440
therefore the adversary could learn the

121
00:05:41,440 --> 00:05:45,360
parities of the noise terms

122
00:05:45,360 --> 00:05:47,280
to prevent this

123
00:05:47,280 --> 00:05:50,400
irs is designed to inject randomness

124
00:05:50,400 --> 00:05:53,039
into the carefully chosen program before

125
00:05:53,039 --> 00:05:55,039
illinois

126
00:05:55,039 --> 00:05:58,560
as a result this part may become unknown

127
00:05:58,560 --> 00:06:00,479
thus the parities are hidden

128
00:06:00,479 --> 00:06:02,479
successfully

129
00:06:02,479 --> 00:06:05,919
i will explain ios by showing some graph

130
00:06:05,919 --> 00:06:09,680
of bp or symmetrics of adp

131
00:06:09,680 --> 00:06:13,360
ios works by adding an intermediate node

132
00:06:13,360 --> 00:06:15,520
between every two nodes

133
00:06:15,520 --> 00:06:18,880
let v j k denotes the node between v j

134
00:06:18,880 --> 00:06:22,400
and v k if there is no path from vj to

135
00:06:22,400 --> 00:06:24,400
vk

136
00:06:24,400 --> 00:06:27,520
to keep the connectivity we can add a

137
00:06:27,520 --> 00:06:31,360
path between vj and v j k or add a path

138
00:06:31,360 --> 00:06:33,600
between v j k and v

139
00:06:33,600 --> 00:06:35,120
or do nothing

140
00:06:35,120 --> 00:06:38,319
namely we have three choices here

141
00:06:38,319 --> 00:06:41,440
similarly if there's a path from vj to

142
00:06:41,440 --> 00:06:45,199
vk we have four choices

143
00:06:45,199 --> 00:06:48,560
compared to the formation case we have

144
00:06:48,560 --> 00:06:51,280
one more choice as we can delete the

145
00:06:51,280 --> 00:06:53,759
edge between v j and v k

146
00:06:53,759 --> 00:06:56,000
and lets the path across the

147
00:06:56,000 --> 00:06:58,800
intermediate node

148
00:06:58,800 --> 00:07:02,960
if the label between v j and v k is x i

149
00:07:02,960 --> 00:07:06,240
we can decompose x sine to x i equals

150
00:07:06,240 --> 00:07:07,199
zero

151
00:07:07,199 --> 00:07:10,479
which has three choices and x i equals

152
00:07:10,479 --> 00:07:13,440
one which has four choices

153
00:07:13,440 --> 00:07:16,479
then we can compose them together for

154
00:07:16,479 --> 00:07:19,360
example this stage appears if and only

155
00:07:19,360 --> 00:07:22,000
if x i equals zero

156
00:07:22,000 --> 00:07:24,960
thus the label of the age should be not

157
00:07:24,960 --> 00:07:26,240
excited

158
00:07:26,240 --> 00:07:28,800
therefore we have three times four which

159
00:07:28,800 --> 00:07:31,440
is 12 choices

160
00:07:31,440 --> 00:07:36,000
here we show a complete example of ios

161
00:07:36,000 --> 00:07:38,800
one can easily check that the rs does

162
00:07:38,800 --> 00:07:42,080
not change the connectivity between any

163
00:07:42,080 --> 00:07:44,960
two nodes

164
00:07:44,960 --> 00:07:47,440
the key observation of our attack is

165
00:07:47,440 --> 00:07:50,319
that the irs cannot always inject

166
00:07:50,319 --> 00:07:53,599
randomness into every matrix

167
00:07:53,599 --> 00:07:57,280
to be specific fbi is a little matrix

168
00:07:57,280 --> 00:07:59,520
which means the program has nothing to

169
00:07:59,520 --> 00:08:01,039
do with exci

170
00:08:01,039 --> 00:08:04,560
the resulting bi prime matrix of iis

171
00:08:04,560 --> 00:08:07,280
will also be a zero matrix

172
00:08:07,280 --> 00:08:10,560
i will show attack by the two example

173
00:08:10,560 --> 00:08:14,400
assume that we have adp whose b1 and b2

174
00:08:14,400 --> 00:08:17,520
matrix are all zero matrices

175
00:08:17,520 --> 00:08:21,840
after irs the b1 prime and b2 prime are

176
00:08:21,840 --> 00:08:23,919
0 matrices 2

177
00:08:23,919 --> 00:08:25,199
thus

178
00:08:25,199 --> 00:08:28,080
when we compute l prime of x which

179
00:08:28,080 --> 00:08:31,840
equals a prime plus sum of x i bi prime

180
00:08:31,840 --> 00:08:34,640
from i equals 1 to n

181
00:08:34,640 --> 00:08:38,320
we have f prime of 0 0 equals l prime of

182
00:08:38,320 --> 00:08:41,839
0 1 equals l prime of one zero equals l

183
00:08:41,839 --> 00:08:45,039
prime of one one

184
00:08:45,600 --> 00:08:48,000
then we use the four mentioned mole for

185
00:08:48,000 --> 00:08:50,480
attack we have the following four

186
00:08:50,480 --> 00:08:51,920
equations

187
00:08:51,920 --> 00:08:54,480
although the iis helps hide the

188
00:08:54,480 --> 00:08:56,800
information of this term

189
00:08:56,800 --> 00:08:59,360
we know that these four terms are equal

190
00:08:59,360 --> 00:09:02,880
to each other due to the property

191
00:09:02,880 --> 00:09:06,399
therefore we can combine the noise terms

192
00:09:06,399 --> 00:09:09,920
which are marked in red color

193
00:09:09,920 --> 00:09:12,880
evidently the summation of these terms

194
00:09:12,880 --> 00:09:16,560
congruent to 0 mod 4.

195
00:09:16,560 --> 00:09:19,680
thus we can test the scheme by choosing

196
00:09:19,680 --> 00:09:21,760
these two programs

197
00:09:21,760 --> 00:09:26,000
for p1 prime the equation always holds

198
00:09:26,000 --> 00:09:29,040
while for p2 prime the equation holds

199
00:09:29,040 --> 00:09:33,279
with probability one second

200
00:09:33,839 --> 00:09:36,000
the four dimension attack is quite

201
00:09:36,000 --> 00:09:39,760
restricted as it needs two zero matrices

202
00:09:39,760 --> 00:09:42,399
which means the output must ignore two

203
00:09:42,399 --> 00:09:45,040
bits of its input

204
00:09:45,040 --> 00:09:47,600
therefore a natural question is that can

205
00:09:47,600 --> 00:09:50,240
we generalize it such that it can work

206
00:09:50,240 --> 00:09:52,399
on more functionalities

207
00:09:52,399 --> 00:09:54,800
when looking to the attack we notice

208
00:09:54,800 --> 00:09:57,839
that we only need the equality of the

209
00:09:57,839 --> 00:10:00,320
miners since we do not necessarily

210
00:10:00,320 --> 00:10:02,720
require the entries in the matrix to be

211
00:10:02,720 --> 00:10:05,920
the same we do not need two zero matches

212
00:10:05,920 --> 00:10:07,680
anymore

213
00:10:07,680 --> 00:10:10,240
but how can we achieve the quality of

214
00:10:10,240 --> 00:10:12,800
minus regardless of the randomness

215
00:10:12,800 --> 00:10:16,079
injected by the ios

216
00:10:16,079 --> 00:10:19,440
here we need our second observation iis

217
00:10:19,440 --> 00:10:21,360
is a functionally preserving

218
00:10:21,360 --> 00:10:24,079
transformation which means it will not

219
00:10:24,079 --> 00:10:26,000
change the determinant

220
00:10:26,000 --> 00:10:28,560
therefore we can cancel is when

221
00:10:28,560 --> 00:10:30,480
computing the determinant

222
00:10:30,480 --> 00:10:32,959
when it comes to minus since the

223
00:10:32,959 --> 00:10:35,360
computation of minus are similar to the

224
00:10:35,360 --> 00:10:37,040
determinant

225
00:10:37,040 --> 00:10:39,839
we can quickly cancel the ios

226
00:10:39,839 --> 00:10:42,320
which means the ios will not bring much

227
00:10:42,320 --> 00:10:44,399
uncertainty to the minus

228
00:10:44,399 --> 00:10:47,440
and by choosing adp carefully we can

229
00:10:47,440 --> 00:10:50,079
completely kill the uncertainty of minus

230
00:10:50,079 --> 00:10:53,359
brought by the ios

231
00:10:53,839 --> 00:10:56,079
the reason is that the intermediate

232
00:10:56,079 --> 00:10:58,560
nodes only connect with at most two

233
00:10:58,560 --> 00:10:59,519
nodes

234
00:10:59,519 --> 00:11:03,360
thus release all columns of an aspect

235
00:11:03,360 --> 00:11:05,680
this property is helpful to analyze the

236
00:11:05,680 --> 00:11:07,040
minus

237
00:11:07,040 --> 00:11:09,920
let's start our advanced version attack

238
00:11:09,920 --> 00:11:13,040
by classifying the nodes and the minus

239
00:11:13,040 --> 00:11:15,360
we have two kinds of nodes original

240
00:11:15,360 --> 00:11:18,079
nodes and intermediate nodes we have

241
00:11:18,079 --> 00:11:21,040
three kinds of minus minus associated

242
00:11:21,040 --> 00:11:23,120
with two original nodes

243
00:11:23,120 --> 00:11:25,519
minus associated with two repeated

244
00:11:25,519 --> 00:11:27,360
intermediate nodes

245
00:11:27,360 --> 00:11:29,760
others

246
00:11:31,040 --> 00:11:34,079
the first case is minus associated with

247
00:11:34,079 --> 00:11:36,560
two original nodes for example when

248
00:11:36,560 --> 00:11:40,000
computing vs vt minor or in other words

249
00:11:40,000 --> 00:11:42,880
computing the determinant of this matrix

250
00:11:42,880 --> 00:11:46,480
we can add a low v j v k to low v j

251
00:11:46,480 --> 00:11:48,079
first

252
00:11:48,079 --> 00:11:51,839
this recovers the value of v j k entry

253
00:11:51,839 --> 00:11:54,720
then the column v j k has only one

254
00:11:54,720 --> 00:11:57,760
non-zero entry therefore when we do

255
00:11:57,760 --> 00:12:00,079
laplace expansion by the column the

256
00:12:00,079 --> 00:12:03,519
determinant equals minus one times the v

257
00:12:03,519 --> 00:12:06,639
j k v j k minor note that

258
00:12:06,639 --> 00:12:10,320
minus two e is congruent to 2e mod 4 and

259
00:12:10,320 --> 00:12:12,480
we can ignore the negative sign in the

260
00:12:12,480 --> 00:12:14,079
 attack

261
00:12:14,079 --> 00:12:16,959
as we all know computing the vjk vjk

262
00:12:16,959 --> 00:12:19,680
minor means computing determinant after

263
00:12:19,680 --> 00:12:24,320
deleting low vjk and column vjk

264
00:12:24,320 --> 00:12:26,320
up to now we delete the intermediate

265
00:12:26,320 --> 00:12:29,200
node vjk as well as recover the value of

266
00:12:29,200 --> 00:12:30,880
vjk entry

267
00:12:30,880 --> 00:12:33,200
we can perform a similar operation on

268
00:12:33,200 --> 00:12:35,200
every intermediate node

269
00:12:35,200 --> 00:12:38,800
as a result we conclude that the v s v t

270
00:12:38,800 --> 00:12:40,320
minor of f

271
00:12:40,320 --> 00:12:41,920
prime of x

272
00:12:41,920 --> 00:12:46,399
is equal to v s v t minor of l of x

273
00:12:46,399 --> 00:12:49,360
that is to say ios does not change the

274
00:12:49,360 --> 00:12:51,200
value of this minus

275
00:12:51,200 --> 00:12:55,040
thus the equality of v j v k minor of l

276
00:12:55,040 --> 00:12:56,000
of x

277
00:12:56,000 --> 00:12:59,839
implies the equality of v j v k minus l

278
00:12:59,839 --> 00:13:02,240
prime of x

279
00:13:02,240 --> 00:13:05,519
however iis introduces additional nodes

280
00:13:05,519 --> 00:13:07,839
which means the additional minus

281
00:13:07,839 --> 00:13:10,720
the second case is minus associated with

282
00:13:10,720 --> 00:13:13,200
two repeated intermediate nodes

283
00:13:13,200 --> 00:13:15,760
this case is a little bit different as

284
00:13:15,760 --> 00:13:18,079
computing the manner is equal to

285
00:13:18,079 --> 00:13:20,399
deleting the intermediate node without

286
00:13:20,399 --> 00:13:23,760
recovering the value of v j k entry

287
00:13:23,760 --> 00:13:26,560
notice that the entry of v j k may be

288
00:13:26,560 --> 00:13:30,160
changed from one to zero by the ios

289
00:13:30,160 --> 00:13:32,639
thus the minor is equal to either the

290
00:13:32,639 --> 00:13:35,360
left term or the right term

291
00:13:35,360 --> 00:13:38,480
in the left side the entry of v jk is

292
00:13:38,480 --> 00:13:40,959
changed to zero while in the right side

293
00:13:40,959 --> 00:13:44,240
the entry of vjk remains unchanged

294
00:13:44,240 --> 00:13:46,800
to kill the uncertainty we want the

295
00:13:46,800 --> 00:13:50,560
quality of these two terms

296
00:13:50,800 --> 00:13:54,079
in the third case when we compute vs vj

297
00:13:54,079 --> 00:13:57,440
k minor the row v jk has at most one

298
00:13:57,440 --> 00:13:59,120
non-zero entry

299
00:13:59,120 --> 00:14:02,560
so if the square equals zero the minus

300
00:14:02,560 --> 00:14:03,920
should be zero

301
00:14:03,920 --> 00:14:06,800
as if the square is one

302
00:14:06,800 --> 00:14:10,399
we can do laplace expansion by row v j k

303
00:14:10,399 --> 00:14:13,040
which is equal to deleting row v j k and

304
00:14:13,040 --> 00:14:14,720
the column v k

305
00:14:14,720 --> 00:14:18,480
up to now we delete rho v s column v k

306
00:14:18,480 --> 00:14:21,360
and the intermediate node v j k

307
00:14:21,360 --> 00:14:24,959
so this minor is equal to zero or v s v

308
00:14:24,959 --> 00:14:28,240
k minor of f of x according to the first

309
00:14:28,240 --> 00:14:29,199
case

310
00:14:29,199 --> 00:14:32,320
to kill the uncertainty we want the vs

311
00:14:32,320 --> 00:14:37,199
vk minor of l of x equals zero

312
00:14:37,360 --> 00:14:39,760
by further analyzing the three cases we

313
00:14:39,760 --> 00:14:42,880
conclude that for l of x one and l of x

314
00:14:42,880 --> 00:14:44,639
two satisfying following three

315
00:14:44,639 --> 00:14:45,839
conditions

316
00:14:45,839 --> 00:14:48,880
the minus of f prime of x 1 and l prime

317
00:14:48,880 --> 00:14:50,639
of x 2 are equal

318
00:14:50,639 --> 00:14:53,440
regardless of the randomness injected by

319
00:14:53,440 --> 00:14:56,000
the irs

320
00:14:56,000 --> 00:14:58,240
we also give an example use the

321
00:14:58,240 --> 00:15:00,560
conclusion one can easily check that

322
00:15:00,560 --> 00:15:03,760
four possible jk the jk manner of these

323
00:15:03,760 --> 00:15:06,399
four matrices are equal thus our

324
00:15:06,399 --> 00:15:09,600
attacker can play on it

325
00:15:09,600 --> 00:15:12,079
note that the function f depends on all

326
00:15:12,079 --> 00:15:13,680
input bits

327
00:15:13,680 --> 00:15:16,160
which means we do break the limitation

328
00:15:16,160 --> 00:15:18,240
of base version attack

329
00:15:18,240 --> 00:15:21,040
however we feel difficult to figure out

330
00:15:21,040 --> 00:15:23,760
the exact scope of functionalities on

331
00:15:23,760 --> 00:15:26,560
which our attack could apply because

332
00:15:26,560 --> 00:15:29,120
understanding functionality by adp model

333
00:15:29,120 --> 00:15:32,240
is not intuitive

334
00:15:33,680 --> 00:15:37,199
to fix the irs candidate we aim to break

335
00:15:37,199 --> 00:15:39,040
the first observation

336
00:15:39,040 --> 00:15:42,720
for example when vj vk entry is zero

337
00:15:42,720 --> 00:15:45,920
apart from four mentioned three choices

338
00:15:45,920 --> 00:15:48,399
we can have other choices which depend

339
00:15:48,399 --> 00:15:51,279
on some exercise such like this since

340
00:15:51,279 --> 00:15:53,600
the exam and the notice that cannot be

341
00:15:53,600 --> 00:15:56,160
satisfied at the same time there are

342
00:15:56,160 --> 00:15:58,959
still no paths from vjqvk

343
00:15:58,959 --> 00:16:02,399
and by labeling edges with x i or not x

344
00:16:02,399 --> 00:16:03,360
line

345
00:16:03,360 --> 00:16:06,000
the matrix bi prime will not be a zero

346
00:16:06,000 --> 00:16:08,639
matrix

347
00:16:08,639 --> 00:16:11,279
for future work we are interested in the

348
00:16:11,279 --> 00:16:13,360
following two questions

349
00:16:13,360 --> 00:16:15,519
can we come up with some other

350
00:16:15,519 --> 00:16:19,759
candidates or revisions of the ios

351
00:16:19,759 --> 00:16:22,560
and can we achieve probable security in

352
00:16:22,560 --> 00:16:24,880
some restricted model which captures

353
00:16:24,880 --> 00:16:26,320
known attacks

354
00:16:26,320 --> 00:16:28,880
for example can we prove security if the

355
00:16:28,880 --> 00:16:31,120
adversary can only perform mode for

356
00:16:31,120 --> 00:16:32,720
attack

357
00:16:32,720 --> 00:16:37,079
that's all thank you for listening

