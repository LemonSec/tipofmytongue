1
00:00:02,399 --> 00:00:04,240
yeah great

2
00:00:04,240 --> 00:00:06,080
okay so

3
00:00:06,080 --> 00:00:09,360
this is my plan first i will describe

4
00:00:09,360 --> 00:00:10,960
chasha algorithm

5
00:00:10,960 --> 00:00:12,400
then i will

6
00:00:12,400 --> 00:00:15,040
discuss differential attack on charter

7
00:00:15,040 --> 00:00:17,279
and our idea

8
00:00:17,279 --> 00:00:19,359
on that after that i will discuss what

9
00:00:19,359 --> 00:00:21,199
is probabilistic neutral bit in short

10
00:00:21,199 --> 00:00:22,400
pnbs

11
00:00:22,400 --> 00:00:23,600
and

12
00:00:23,600 --> 00:00:24,960
i will discuss

13
00:00:24,960 --> 00:00:25,760
that

14
00:00:25,760 --> 00:00:28,800
our approach to find pnb's

15
00:00:28,800 --> 00:00:30,960
then using this uh

16
00:00:30,960 --> 00:00:32,479
differential attack and probabilistic

17
00:00:32,479 --> 00:00:34,000
neutral bit

18
00:00:34,000 --> 00:00:38,000
this both will merge both ideas and will

19
00:00:38,000 --> 00:00:40,239
try to find key better than exhaustive

20
00:00:40,239 --> 00:00:41,600
key search

21
00:00:41,600 --> 00:00:43,200
so that is third part key recovery

22
00:00:43,200 --> 00:00:46,320
attack then after that our results in

23
00:00:46,320 --> 00:00:47,680
this direction and finally i will

24
00:00:47,680 --> 00:00:49,520
conclude my talk

25
00:00:49,520 --> 00:00:52,079
yeah so first is

26
00:00:52,079 --> 00:00:54,160
charge of cipher so

27
00:00:54,160 --> 00:00:57,120
the cipher is like this we have one

28
00:00:57,120 --> 00:00:58,480
matrix

29
00:00:58,480 --> 00:01:01,280
x or four cross four uh

30
00:01:01,280 --> 00:01:03,600
this is four cross four matrix and each

31
00:01:03,600 --> 00:01:07,280
entries are 32 bit and we call each and

32
00:01:07,280 --> 00:01:09,200
each entry each cell

33
00:01:09,200 --> 00:01:11,520
one word so we have total 16 watts and

34
00:01:11,520 --> 00:01:15,520
32 bit so total we have 16 times 32 512

35
00:01:15,520 --> 00:01:16,400
bits

36
00:01:16,400 --> 00:01:18,880
in this matrix first row is

37
00:01:18,880 --> 00:01:22,320
constant row so this c 0 to c 0 c 1 c 2

38
00:01:22,320 --> 00:01:25,040
c 3 this this is fixed constant second

39
00:01:25,040 --> 00:01:29,280
two rows are key rows and last row is

40
00:01:29,280 --> 00:01:31,200
public variable

41
00:01:31,200 --> 00:01:35,280
t0 counter and bis are nonsense

42
00:01:35,280 --> 00:01:38,560
and for cha-cha 256 that means 256 bit

43
00:01:38,560 --> 00:01:39,680
key

44
00:01:39,680 --> 00:01:40,479
this

45
00:01:40,479 --> 00:01:42,479
first row these constants are something

46
00:01:42,479 --> 00:01:44,320
like this c 0 to

47
00:01:44,320 --> 00:01:47,600
c 3 are like this and for cha cha 128 so

48
00:01:47,600 --> 00:01:49,759
128 bit key

49
00:01:49,759 --> 00:01:53,040
these constraints are almost same only

50
00:01:53,040 --> 00:01:55,040
very slight difference so here you can

51
00:01:55,040 --> 00:01:56,399
see c1 is

52
00:01:56,399 --> 00:01:57,920
three three here three one something

53
00:01:57,920 --> 00:01:58,960
like that

54
00:01:58,960 --> 00:02:00,640
and for chacha

55
00:02:00,640 --> 00:02:02,320
128

56
00:02:02,320 --> 00:02:03,439
this uh

57
00:02:03,439 --> 00:02:06,079
second and third row should be identical

58
00:02:06,079 --> 00:02:07,439
so

59
00:02:07,439 --> 00:02:11,200
k4 should be k0 k5 should be k1 k6 k2

60
00:02:11,200 --> 00:02:12,640
like that

61
00:02:12,640 --> 00:02:16,160
so so we have for charger 128 we have 4

62
00:02:16,160 --> 00:02:20,720
times 32 128 bit key

63
00:02:20,959 --> 00:02:22,879
yeah so that's

64
00:02:22,879 --> 00:02:24,959
such a matrix

65
00:02:24,959 --> 00:02:25,920
and

66
00:02:25,920 --> 00:02:28,480
we have to so this is our charger matrix

67
00:02:28,480 --> 00:02:31,040
this this matrix and we have to apply

68
00:02:31,040 --> 00:02:33,680
this function quarter round function

69
00:02:33,680 --> 00:02:35,040
on

70
00:02:35,040 --> 00:02:36,000
this

71
00:02:36,000 --> 00:02:37,840
columns so first this first column

72
00:02:37,840 --> 00:02:39,360
second column third column and fourth

73
00:02:39,360 --> 00:02:41,760
column after that we have to apply on

74
00:02:41,760 --> 00:02:46,400
diagonals like x 0 x 5 x 10 x 15 x 1 x 6

75
00:02:46,400 --> 00:02:49,280
x 11 x 12 like that so alternatively we

76
00:02:49,280 --> 00:02:50,879
have to apply

77
00:02:50,879 --> 00:02:54,400
column rounds and diagonal rounds

78
00:02:54,400 --> 00:02:56,640
this uh this we have to have like water

79
00:02:56,640 --> 00:02:58,480
run function and what is quarter round

80
00:02:58,480 --> 00:02:59,920
function

81
00:02:59,920 --> 00:03:03,200
it has its input is 128 bit

82
00:03:03,200 --> 00:03:06,080
so abcd all are 32 bit

83
00:03:06,080 --> 00:03:09,599
and output is also 128 bit a double

84
00:03:09,599 --> 00:03:11,519
prime b double prime c double prime d

85
00:03:11,519 --> 00:03:14,959
double prime and operation is like this

86
00:03:14,959 --> 00:03:17,519
a first we have to calculate a box plus

87
00:03:17,519 --> 00:03:21,599
b this means a plus b modulo 2 to the 32

88
00:03:21,599 --> 00:03:22,720
then

89
00:03:22,720 --> 00:03:25,760
that will call that is a dash and then

90
00:03:25,760 --> 00:03:29,120
calculate this jaw operation and make

91
00:03:29,120 --> 00:03:30,640
cyclic rotate

92
00:03:30,640 --> 00:03:34,799
so we are using addition mod 2 32 and 0

93
00:03:34,799 --> 00:03:37,280
operation and cyclic rotation and we

94
00:03:37,280 --> 00:03:38,480
have to

95
00:03:38,480 --> 00:03:40,879
uh use this this operation

96
00:03:40,879 --> 00:03:42,959
so this is quarter round function as and

97
00:03:42,959 --> 00:03:45,680
i already told you we have to use

98
00:03:45,680 --> 00:03:48,879
this function over columns and diagonals

99
00:03:48,879 --> 00:03:51,120
alternatively so

100
00:03:51,120 --> 00:03:53,439
say after our rounds we will have say

101
00:03:53,439 --> 00:03:55,920
new matrix xr

102
00:03:55,920 --> 00:03:58,239
so initially we have some x0 and after

103
00:03:58,239 --> 00:04:01,680
our rounds we are xr and then output z

104
00:04:01,680 --> 00:04:02,879
should be

105
00:04:02,879 --> 00:04:04,480
x0

106
00:04:04,480 --> 00:04:08,640
box plus xr box plus means you have to

107
00:04:08,640 --> 00:04:10,560
make uh added

108
00:04:10,560 --> 00:04:12,000
addition mod 2 to the 32 so

109
00:04:12,000 --> 00:04:14,080
corresponding cells first cell of x 0

110
00:04:14,080 --> 00:04:16,399
and first cell of x are you have to add

111
00:04:16,399 --> 00:04:21,758
mod 2 to the 32 so output is 512 bit

112
00:04:23,520 --> 00:04:26,160
yeah so

113
00:04:26,160 --> 00:04:29,040
this this is something like this a b c d

114
00:04:29,040 --> 00:04:31,120
quadrant function and we have to apply

115
00:04:31,120 --> 00:04:33,840
this a r x operation and we after one

116
00:04:33,840 --> 00:04:35,600
round we will have again

117
00:04:35,600 --> 00:04:38,240
another 128 bit

118
00:04:38,240 --> 00:04:40,160
and it is not difficult to prove that

119
00:04:40,160 --> 00:04:42,960
this is this from operation is actually

120
00:04:42,960 --> 00:04:44,800
invertible so

121
00:04:44,800 --> 00:04:46,240
if you know

122
00:04:46,240 --> 00:04:47,919
output you will get

123
00:04:47,919 --> 00:04:50,000
corresponding input since this is

124
00:04:50,000 --> 00:04:51,600
invertible so

125
00:04:51,600 --> 00:04:54,800
chacha round function is also invertible

126
00:04:54,800 --> 00:04:57,840
so if you know xr

127
00:04:57,840 --> 00:05:00,240
just making inverse and you will

128
00:05:00,240 --> 00:05:01,919
get your

129
00:05:01,919 --> 00:05:05,759
original starting matrix x0

130
00:05:05,759 --> 00:05:07,199
yeah

131
00:05:07,199 --> 00:05:10,240
now come to differential attack and our

132
00:05:10,240 --> 00:05:12,479
idea in this direction in this

133
00:05:12,479 --> 00:05:14,479
differential heterogyne

134
00:05:14,479 --> 00:05:16,080
so in differential attack we have to

135
00:05:16,080 --> 00:05:17,280
start with

136
00:05:17,280 --> 00:05:20,880
two chacha states and all bits are same

137
00:05:20,880 --> 00:05:23,840
except few positions and in actually we

138
00:05:23,840 --> 00:05:24,720
will

139
00:05:24,720 --> 00:05:27,039
in our case we uh

140
00:05:27,039 --> 00:05:29,919
only one bit is different and all other

141
00:05:29,919 --> 00:05:32,639
bits are same so we have charger matrix

142
00:05:32,639 --> 00:05:35,840
is 512 bit all 512 bits are same except

143
00:05:35,840 --> 00:05:38,080
one bit and that bit should be from

144
00:05:38,080 --> 00:05:39,759
public variable

145
00:05:39,759 --> 00:05:40,920
and we have to apply

146
00:05:40,920 --> 00:05:42,240
[Music]

147
00:05:42,240 --> 00:05:45,440
a few rounds such a rounds over what

148
00:05:45,440 --> 00:05:48,639
this original matrix and that

149
00:05:48,639 --> 00:05:51,280
differential matrix and

150
00:05:51,280 --> 00:05:52,960
and we have to check say after all

151
00:05:52,960 --> 00:05:55,199
rounds whether there is any correlation

152
00:05:55,199 --> 00:05:57,680
among these two matrices

153
00:05:57,680 --> 00:05:59,280
so here

154
00:05:59,280 --> 00:06:01,680
key should be same but iv should be

155
00:06:01,680 --> 00:06:04,160
different

156
00:06:04,240 --> 00:06:06,560
so we have to start with some x 0 and x

157
00:06:06,560 --> 00:06:08,080
dash 0

158
00:06:08,080 --> 00:06:08,800
so

159
00:06:08,800 --> 00:06:11,120
and say after our rounds we are getting

160
00:06:11,120 --> 00:06:13,520
x r and x dash r

161
00:06:13,520 --> 00:06:14,800
then we

162
00:06:14,800 --> 00:06:16,880
calculate this differential state matrix

163
00:06:16,880 --> 00:06:20,639
delta r like this where delta r i is x i

164
00:06:20,639 --> 00:06:24,400
r and z x dash i r

165
00:06:24,400 --> 00:06:26,479
so initially this

166
00:06:26,479 --> 00:06:28,240
since we are giving only one difference

167
00:06:28,240 --> 00:06:30,160
only one

168
00:06:30,160 --> 00:06:31,280
one ah

169
00:06:31,280 --> 00:06:32,400
delta

170
00:06:32,400 --> 00:06:34,800
i r should be only ah one should be

171
00:06:34,800 --> 00:06:38,479
non-zero and all other are zero

172
00:06:38,479 --> 00:06:42,319
so delta zero i all are zero except only

173
00:06:42,319 --> 00:06:44,479
one

174
00:06:44,560 --> 00:06:47,360
uh one i

175
00:06:47,520 --> 00:06:48,479
so

176
00:06:48,479 --> 00:06:50,800
we have x zero and x dash zero

177
00:06:50,800 --> 00:06:52,880
and we are giving input difference say

178
00:06:52,880 --> 00:06:57,680
at z bit of ith word so delta i j

179
00:06:57,680 --> 00:06:59,520
zero

180
00:06:59,520 --> 00:07:01,120
it is one

181
00:07:01,120 --> 00:07:03,280
then we apply our rounds and we

182
00:07:03,280 --> 00:07:05,680
calculate this probability

183
00:07:05,680 --> 00:07:08,430
so after r rounds we calculate

184
00:07:08,430 --> 00:07:09,759
[Music]

185
00:07:09,759 --> 00:07:14,639
delta r p q 1 q bit of pith world it is

186
00:07:14,639 --> 00:07:18,319
one given this is input difference

187
00:07:18,319 --> 00:07:22,080
is ah one here at z bit i th word

188
00:07:22,080 --> 00:07:24,160
suppose this probability is half into

189
00:07:24,160 --> 00:07:26,639
one plus epsilon d

190
00:07:26,639 --> 00:07:29,360
then this epsilon d we call

191
00:07:29,360 --> 00:07:31,280
forward bias

192
00:07:31,280 --> 00:07:34,720
and for attack we we need to

193
00:07:34,720 --> 00:07:35,840
increase

194
00:07:35,840 --> 00:07:40,000
this epsilon d as much as possible

195
00:07:41,440 --> 00:07:43,039
so

196
00:07:43,039 --> 00:07:45,520
so again recall so this is our charger

197
00:07:45,520 --> 00:07:47,520
matrix

198
00:07:47,520 --> 00:07:50,800
and we are giving difference only on the

199
00:07:50,800 --> 00:07:52,879
last row because last row is public

200
00:07:52,879 --> 00:07:54,720
variable row

201
00:07:54,720 --> 00:07:56,240
and

202
00:07:56,240 --> 00:07:58,800
it is not difficult to prove that if you

203
00:07:58,800 --> 00:08:02,080
give one bit difference and apply

204
00:08:02,080 --> 00:08:04,240
uh

205
00:08:04,240 --> 00:08:06,800
one round on x and x dashed so after one

206
00:08:06,800 --> 00:08:07,919
round

207
00:08:07,919 --> 00:08:12,039
you will have ten difference

208
00:08:12,080 --> 00:08:13,280
so

209
00:08:13,280 --> 00:08:16,720
if you calculate x 1 and x dash 1 so you

210
00:08:16,720 --> 00:08:21,360
have total 512 bit and if you check only

211
00:08:21,360 --> 00:08:23,759
it can be minimum 10 difference it can

212
00:08:23,759 --> 00:08:25,840
be more than 10 difference now if you

213
00:08:25,840 --> 00:08:28,080
have 10 difference you will have

214
00:08:28,080 --> 00:08:30,879
better epsilon d you will have better

215
00:08:30,879 --> 00:08:33,680
forward bias

216
00:08:34,399 --> 00:08:37,440
now last year

217
00:08:37,919 --> 00:08:40,080
not last year two years back so crypto

218
00:08:40,080 --> 00:08:42,240
2020

219
00:08:42,240 --> 00:08:44,320
uh

220
00:08:44,320 --> 00:08:45,600
yearly

221
00:08:45,600 --> 00:08:47,600
lender and toto

222
00:08:47,600 --> 00:08:49,360
they

223
00:08:49,360 --> 00:08:52,800
showed that for 10 difference

224
00:08:52,800 --> 00:08:55,519
you can get max around 70 percent keys

225
00:08:55,519 --> 00:08:58,480
for 30 percent key you don't have any iv

226
00:08:58,480 --> 00:08:59,519
which can

227
00:08:59,519 --> 00:09:02,160
give you 10 difference for

228
00:09:02,160 --> 00:09:04,720
now instead of and for that to get 10

229
00:09:04,720 --> 00:09:08,399
difference on average you have to try 32

230
00:09:08,399 --> 00:09:09,440
ivs

231
00:09:09,440 --> 00:09:12,240
and among the 32 one will give you 10

232
00:09:12,240 --> 00:09:14,000
difference

233
00:09:14,000 --> 00:09:15,279
now

234
00:09:15,279 --> 00:09:17,760
instead of 10 difference if we go

235
00:09:17,760 --> 00:09:20,160
slightly more so 12 difference

236
00:09:20,160 --> 00:09:20,959
then

237
00:09:20,959 --> 00:09:22,800
one advantage is

238
00:09:22,800 --> 00:09:24,959
now not only 70 percent keys for 100

239
00:09:24,959 --> 00:09:26,880
percent key you will

240
00:09:26,880 --> 00:09:27,760
have

241
00:09:27,760 --> 00:09:31,040
12 difference after one round and also

242
00:09:31,040 --> 00:09:32,800
you don't need to

243
00:09:32,800 --> 00:09:34,640
try for 32

244
00:09:34,640 --> 00:09:38,160
ivs you need on average you need

245
00:09:38,160 --> 00:09:39,920
only 9 ivs

246
00:09:39,920 --> 00:09:42,800
so of course in this situation epsilon d

247
00:09:42,800 --> 00:09:45,839
is now less initially it was like this

248
00:09:45,839 --> 00:09:48,080
now you have like this

249
00:09:48,080 --> 00:09:51,040
but advantage here is this probability

250
00:09:51,040 --> 00:09:53,440
is now getting better

251
00:09:53,440 --> 00:09:54,959
and overall

252
00:09:54,959 --> 00:09:57,040
you you can see

253
00:09:57,040 --> 00:09:59,120
that we can get slightly

254
00:09:59,120 --> 00:10:00,880
better

255
00:10:00,880 --> 00:10:02,160
probability of

256
00:10:02,160 --> 00:10:04,000
so altogether so instead of 10

257
00:10:04,000 --> 00:10:08,399
difference we can try 12 difference

258
00:10:11,120 --> 00:10:11,839
now

259
00:10:11,839 --> 00:10:13,440
using memory

260
00:10:13,440 --> 00:10:14,480
we can

261
00:10:14,480 --> 00:10:16,320
improve further

262
00:10:16,320 --> 00:10:18,800
so again recall so our matrix is this

263
00:10:18,800 --> 00:10:21,680
and suppose we are giving difference at

264
00:10:21,680 --> 00:10:23,120
here

265
00:10:23,120 --> 00:10:24,079
this

266
00:10:24,079 --> 00:10:27,200
on v0 so one bit difference

267
00:10:27,200 --> 00:10:28,399
now

268
00:10:28,399 --> 00:10:32,720
k1 is 32 bit k5 is also 32 bit so

269
00:10:32,720 --> 00:10:35,120
instead of trying to find iv online face

270
00:10:35,120 --> 00:10:37,760
you can make a table in offline phase so

271
00:10:37,760 --> 00:10:39,839
you have total 64 bit

272
00:10:39,839 --> 00:10:40,720
and

273
00:10:40,720 --> 00:10:42,800
you

274
00:10:42,800 --> 00:10:44,839
find corresponding

275
00:10:44,839 --> 00:10:48,560
iv this v0 so that after one round after

276
00:10:48,560 --> 00:10:51,279
one column round this column this this

277
00:10:51,279 --> 00:10:54,240
difference is 10

278
00:10:54,240 --> 00:10:57,600
so so we can avoid uh this

279
00:10:57,600 --> 00:11:01,040
probability inverse random ip choice in

280
00:11:01,040 --> 00:11:02,959
in the online phase

281
00:11:02,959 --> 00:11:05,760
and of course then you need table since

282
00:11:05,760 --> 00:11:06,720
on

283
00:11:06,720 --> 00:11:09,279
you you have 70 percent keys so table

284
00:11:09,279 --> 00:11:10,399
size will be

285
00:11:10,399 --> 00:11:12,399
like this

286
00:11:12,399 --> 00:11:15,839
now we can reduce further

287
00:11:16,240 --> 00:11:17,040
so

288
00:11:17,040 --> 00:11:18,560
these key bits

289
00:11:18,560 --> 00:11:20,800
these qubit positions you can

290
00:11:20,800 --> 00:11:23,279
partition into two sets

291
00:11:23,279 --> 00:11:25,680
like k m and k

292
00:11:25,680 --> 00:11:26,640
n mem

293
00:11:26,640 --> 00:11:30,800
now you you don't need to store k in mem

294
00:11:30,800 --> 00:11:32,399
but still you can

295
00:11:32,399 --> 00:11:35,279
find the corresponding iv because yeah

296
00:11:35,279 --> 00:11:37,680
so for example suppose

297
00:11:37,680 --> 00:11:40,160
i am giving difference here 13 6 that

298
00:11:40,160 --> 00:11:43,360
means 13th word so this word and sixth

299
00:11:43,360 --> 00:11:44,880
bit

300
00:11:44,880 --> 00:11:45,839
now

301
00:11:45,839 --> 00:11:47,200
this set is

302
00:11:47,200 --> 00:11:48,000
the

303
00:11:48,000 --> 00:11:50,880
like this so cardinality is 18

304
00:11:50,880 --> 00:11:53,360
that means

305
00:11:53,360 --> 00:11:57,200
64 minus 1846 ibis are not free we have

306
00:11:57,200 --> 00:12:00,480
to track that iv properly

307
00:12:00,480 --> 00:12:03,920
so and for this this positions

308
00:12:03,920 --> 00:12:06,399
it can be any value so

309
00:12:06,399 --> 00:12:08,880
you have to take that i be fixed and you

310
00:12:08,880 --> 00:12:11,360
have to you can take any any values of

311
00:12:11,360 --> 00:12:12,720
from this position

312
00:12:12,720 --> 00:12:15,279
but you will get one unique key

313
00:12:15,279 --> 00:12:17,519
so now that we saw table size is now 2

314
00:12:17,519 --> 00:12:20,079
to the 46 but now instead of 70 percent

315
00:12:20,079 --> 00:12:23,040
it will reduce up to 62 percent so final

316
00:12:23,040 --> 00:12:26,399
table size will be like this

317
00:12:29,040 --> 00:12:30,720
now come to probabilistic neutral bid

318
00:12:30,720 --> 00:12:34,639
idea and our approach to find

319
00:12:34,639 --> 00:12:37,279
pnps

320
00:12:37,279 --> 00:12:39,120
so output in

321
00:12:39,120 --> 00:12:44,000
uh cha cha is z equal to x box plus x r

322
00:12:44,000 --> 00:12:46,320
now in progress to neutral bit

323
00:12:46,320 --> 00:12:48,160
you have to find one

324
00:12:48,160 --> 00:12:50,160
key bit position k so that

325
00:12:50,160 --> 00:12:51,839
if you change you first you have to

326
00:12:51,839 --> 00:12:55,200
change that bit position

327
00:12:55,200 --> 00:12:57,839
on x and x dust so suppose this is x

328
00:12:57,839 --> 00:13:00,399
tilde and x dash tilde and calculate

329
00:13:00,399 --> 00:13:01,600
this

330
00:13:01,600 --> 00:13:02,720
this thing

331
00:13:02,720 --> 00:13:05,040
z minus x tilde and z dash minus x dash

332
00:13:05,040 --> 00:13:07,600
tilde and go reverse r minus capital r

333
00:13:07,600 --> 00:13:09,200
minus smaller rounds suppose you are

334
00:13:09,200 --> 00:13:12,000
getting y and y dash and calculate

335
00:13:12,000 --> 00:13:14,639
this value if this value is

336
00:13:14,639 --> 00:13:17,040
same as your

337
00:13:17,040 --> 00:13:19,200
original differential value

338
00:13:19,200 --> 00:13:21,120
with with some good probability then we

339
00:13:21,120 --> 00:13:24,959
call that is probabilistic neutral bit

340
00:13:25,440 --> 00:13:27,279
so

341
00:13:27,279 --> 00:13:29,040
situation is something like this so we

342
00:13:29,040 --> 00:13:32,560
are starting with x 0 and x dash 0 we

343
00:13:32,560 --> 00:13:35,839
have to apply r rounds we are here x r

344
00:13:35,839 --> 00:13:38,399
and x dash star and calculate this value

345
00:13:38,399 --> 00:13:40,079
then we go forward and

346
00:13:40,079 --> 00:13:43,120
go up to capital r down so we are here

347
00:13:43,120 --> 00:13:43,920
and

348
00:13:43,920 --> 00:13:45,600
here

349
00:13:45,600 --> 00:13:48,959
z equal to x 0 box plus x r and z dash

350
00:13:48,959 --> 00:13:54,399
equal to x dash 0 box plus x dash star

351
00:13:54,399 --> 00:13:55,360
then

352
00:13:55,360 --> 00:13:58,880
we need to change one key bit value

353
00:13:58,880 --> 00:14:01,519
on both on x 0 and x dash 0 and

354
00:14:01,519 --> 00:14:04,240
calculate this value and apply reverse

355
00:14:04,240 --> 00:14:06,000
touch around

356
00:14:06,000 --> 00:14:08,880
and check whether this value is same as

357
00:14:08,880 --> 00:14:11,199
your original value or not if this is

358
00:14:11,199 --> 00:14:12,800
same with high probability we call that

359
00:14:12,800 --> 00:14:17,399
is probabilistic neutral bit

360
00:14:18,639 --> 00:14:19,680
now

361
00:14:19,680 --> 00:14:24,000
using some conventional method

362
00:14:24,160 --> 00:14:25,920
crypto 2020

363
00:14:25,920 --> 00:14:28,880
authors got something 74

364
00:14:28,880 --> 00:14:32,480
pnbs so they got 74 pnps

365
00:14:32,480 --> 00:14:34,079
now instead of that one in the

366
00:14:34,079 --> 00:14:35,519
conventional method there is some

367
00:14:35,519 --> 00:14:36,639
threshold

368
00:14:36,639 --> 00:14:40,240
if bias is more than that threshold

369
00:14:40,240 --> 00:14:42,399
consider that is your

370
00:14:42,399 --> 00:14:45,680
on pnb like that now instead of that

371
00:14:45,680 --> 00:14:48,320
conventional idea we

372
00:14:48,320 --> 00:14:50,560
change little bit and we propose some

373
00:14:50,560 --> 00:14:53,680
new three step strategy and using this

374
00:14:53,680 --> 00:14:55,040
strategy

375
00:14:55,040 --> 00:14:58,959
we got better pnps so now instead of

376
00:14:58,959 --> 00:15:02,399
seven so in our first so this is

377
00:15:02,399 --> 00:15:05,360
in the first stage we got 68 second

378
00:15:05,360 --> 00:15:06,800
stage eight and

379
00:15:06,800 --> 00:15:08,639
finally we got

380
00:15:08,639 --> 00:15:11,600
three so these all rates are we got from

381
00:15:11,600 --> 00:15:12,959
first stage

382
00:15:12,959 --> 00:15:14,880
these blues are from

383
00:15:14,880 --> 00:15:17,519
stage two and these greens are from

384
00:15:17,519 --> 00:15:19,360
stage three

385
00:15:19,360 --> 00:15:24,920
so so we finally we got 79

386
00:15:26,720 --> 00:15:28,399
yeah now

387
00:15:28,399 --> 00:15:31,279
come to key recovery attack

388
00:15:31,279 --> 00:15:32,560
so normally

389
00:15:32,560 --> 00:15:35,759
is in using this pn use idea we don't

390
00:15:35,759 --> 00:15:37,680
need to try to find key

391
00:15:37,680 --> 00:15:40,720
at once we we have now key into two sets

392
00:15:40,720 --> 00:15:44,160
one is pnb and another is non pnb

393
00:15:44,160 --> 00:15:47,120
and we first try to find non pnb's

394
00:15:47,120 --> 00:15:47,920
so

395
00:15:47,920 --> 00:15:50,399
we first try to guess this suppose

396
00:15:50,399 --> 00:15:53,120
number of end is n and suppose key is

397
00:15:53,120 --> 00:15:56,800
256 so number of non pnb is 256 minus n

398
00:15:56,800 --> 00:15:58,560
and we first try to

399
00:15:58,560 --> 00:16:01,040
guess this down p and this part and we

400
00:16:01,040 --> 00:16:03,120
use distinguisher that differential

401
00:16:03,120 --> 00:16:04,880
distinguisher

402
00:16:04,880 --> 00:16:08,320
to uh find these non pnbs and after that

403
00:16:08,320 --> 00:16:09,360
we will

404
00:16:09,360 --> 00:16:11,680
find the remaining key bits so normally

405
00:16:11,680 --> 00:16:14,320
it is multiplication but here is

406
00:16:14,320 --> 00:16:17,360
some sense addition

407
00:16:18,959 --> 00:16:21,839
now there can be two types of error

408
00:16:21,839 --> 00:16:24,560
that our guest is correct non-pnb gas is

409
00:16:24,560 --> 00:16:27,040
correct but still bias is

410
00:16:27,040 --> 00:16:28,720
very small

411
00:16:28,720 --> 00:16:29,759
so

412
00:16:29,759 --> 00:16:31,360
we call that is

413
00:16:31,360 --> 00:16:33,440
probability of non-detection and another

414
00:16:33,440 --> 00:16:34,560
is

415
00:16:34,560 --> 00:16:37,600
non-bnbs are not correct but still bias

416
00:16:37,600 --> 00:16:39,839
can be high so and we call that is

417
00:16:39,839 --> 00:16:41,680
probability of false alarm so we have

418
00:16:41,680 --> 00:16:43,680
these two probabilities now using

419
00:16:43,680 --> 00:16:46,560
statistics it is not difficult to prove

420
00:16:46,560 --> 00:16:49,279
that if you use this many samples then

421
00:16:49,279 --> 00:16:52,959
you can bound both these errors

422
00:16:52,959 --> 00:16:55,360
and in that time final time complexity

423
00:16:55,360 --> 00:16:58,480
will be like this

424
00:16:59,600 --> 00:17:02,240
now come to our result

425
00:17:02,240 --> 00:17:04,720
now

426
00:17:04,720 --> 00:17:08,240
we give distinguisher here

427
00:17:08,240 --> 00:17:11,919
13th word six bit and we consider

428
00:17:11,919 --> 00:17:14,240
this output difference and forward bias

429
00:17:14,240 --> 00:17:17,359
is this so this is exactly like

430
00:17:17,359 --> 00:17:18,959
crypto paper

431
00:17:18,959 --> 00:17:20,000
now

432
00:17:20,000 --> 00:17:21,599
we

433
00:17:21,599 --> 00:17:24,079
take this pnd set so

434
00:17:24,079 --> 00:17:26,640
this 79 pnp set and we got this is

435
00:17:26,640 --> 00:17:29,360
backward bias and finally

436
00:17:29,360 --> 00:17:31,760
time complexity becomes like 2 to the

437
00:17:31,760 --> 00:17:32,640
power

438
00:17:32,640 --> 00:17:35,640
221.95

439
00:17:35,760 --> 00:17:37,919
but of course we need more data and more

440
00:17:37,919 --> 00:17:39,600
memory than

441
00:17:39,600 --> 00:17:42,480
that crypto paper so

442
00:17:42,480 --> 00:17:47,600
this is our result for chacha 128

443
00:17:47,600 --> 00:17:49,760
see up to 6 rounds existing atta was

444
00:17:49,760 --> 00:17:51,440
something like this

445
00:17:51,440 --> 00:17:53,520
2 to the power 1 0 5

446
00:17:53,520 --> 00:17:57,120
now we got 2 to the power 84

447
00:17:57,120 --> 00:17:59,679
and 2 to the power 81 if you use

448
00:17:59,679 --> 00:18:02,799
slightly large memory and for

449
00:18:02,799 --> 00:18:05,840
cha cha 6.5 this is first time

450
00:18:05,840 --> 00:18:08,400
we can crypto analyze and at a

451
00:18:08,400 --> 00:18:11,679
complexity is 2 to the power 123

452
00:18:11,679 --> 00:18:14,400
and for chacha 256 7 round existing was

453
00:18:14,400 --> 00:18:17,360
2 to the power 230 0.86 now is 2 to the

454
00:18:17,360 --> 00:18:18,640
power 2

455
00:18:18,640 --> 00:18:20,320
21.95

456
00:18:20,320 --> 00:18:22,720
but now we are using memory

457
00:18:22,720 --> 00:18:24,880
existing was

458
00:18:24,880 --> 00:18:29,600
memory less or almost negligible memory

459
00:18:29,600 --> 00:18:33,440
yeah now come to conclusion so

460
00:18:33,440 --> 00:18:35,440
using memory we can improve time

461
00:18:35,440 --> 00:18:37,039
complexity

462
00:18:37,039 --> 00:18:39,440
and also we present new

463
00:18:39,440 --> 00:18:40,480
technique

464
00:18:40,480 --> 00:18:42,720
to get pnbs

465
00:18:42,720 --> 00:18:44,480
and

466
00:18:44,480 --> 00:18:46,880
using these two ideas idea one and idea

467
00:18:46,880 --> 00:18:48,559
two we got

468
00:18:48,559 --> 00:18:50,559
this times better time complexity for

469
00:18:50,559 --> 00:18:52,720
seven round charger

470
00:18:52,720 --> 00:18:55,360
and also we got for six round chacha we

471
00:18:55,360 --> 00:18:58,000
got huge improvement

472
00:18:58,000 --> 00:19:01,120
two to the power 23 and

473
00:19:01,120 --> 00:19:04,080
now for charger 128

474
00:19:04,080 --> 00:19:07,200
we can analyze up to six and half round

475
00:19:07,200 --> 00:19:08,720
okay

476
00:19:08,720 --> 00:19:10,610
that's all thank you

477
00:19:10,610 --> 00:19:16,880
[Applause]

478
00:19:16,880 --> 00:19:20,000
are there any questions

479
00:19:23,280 --> 00:19:25,280
yeah yeah this if you can

480
00:19:25,280 --> 00:19:26,559
when you ask questions please come to

481
00:19:26,559 --> 00:19:29,120
the microphone

482
00:19:30,000 --> 00:19:33,320
hello sir

483
00:19:45,440 --> 00:19:48,000
hello sir

484
00:19:49,039 --> 00:19:50,840
hello sir this is asma shaheen from

485
00:19:50,840 --> 00:19:53,679
pakistan thank you for the great talk i

486
00:19:53,679 --> 00:19:55,360
just want to

487
00:19:55,360 --> 00:19:57,679
ask you that you have introduced a new

488
00:19:57,679 --> 00:19:58,880
strategy

489
00:19:58,880 --> 00:20:00,640
the new technique with which you have

490
00:20:00,640 --> 00:20:02,880
reduced the complexity of differential

491
00:20:02,880 --> 00:20:04,480
attack have you tried it on any other

492
00:20:04,480 --> 00:20:07,360
algorithm or is it feasible to reduce

493
00:20:07,360 --> 00:20:10,000
the complexity for any other algorithm

494
00:20:10,000 --> 00:20:12,559
yeah i think we can drive for the other

495
00:20:12,559 --> 00:20:15,280
ars algorithm where pnbs are used like

496
00:20:15,280 --> 00:20:17,200
salsa

497
00:20:17,200 --> 00:20:19,520
but i don't know

498
00:20:19,520 --> 00:20:21,520
satya is very important i first write

499
00:20:21,520 --> 00:20:23,440
there

500
00:20:23,440 --> 00:20:26,320
okay okay thank you sir

501
00:20:27,039 --> 00:20:28,799
okay as we're

502
00:20:28,799 --> 00:20:30,720
started late because of me then because

503
00:20:30,720 --> 00:20:33,120
of technical issues one quick question

504
00:20:33,120 --> 00:20:34,400
if somebody has

505
00:20:34,400 --> 00:20:35,760
and then

506
00:20:35,760 --> 00:20:37,120
a small question

507
00:20:37,120 --> 00:20:39,360
just uh i was curious to know

508
00:20:39,360 --> 00:20:41,520
if you think that there is any counter

509
00:20:41,520 --> 00:20:42,510
measure that could be

510
00:20:42,510 --> 00:20:43,760
[Music]

511
00:20:43,760 --> 00:20:46,000
added to cha-cha to make this kind of

512
00:20:46,000 --> 00:20:48,159
attack more difficult

513
00:20:48,159 --> 00:20:50,240
yeah so ah

514
00:20:50,240 --> 00:20:52,720
instead of initial charge output is z

515
00:20:52,720 --> 00:20:54,000
equal to x

516
00:20:54,000 --> 00:20:55,440
plus x r

517
00:20:55,440 --> 00:20:57,840
so my feeling is instead of just x plus

518
00:20:57,840 --> 00:21:01,039
x r we can go one round x one

519
00:21:01,039 --> 00:21:04,240
and if output is z equal to x 1 plus x r

520
00:21:04,240 --> 00:21:06,080
i don't think at least this kind of

521
00:21:06,080 --> 00:21:08,400
attack is possible this pn base attack

522
00:21:08,400 --> 00:21:09,280
because

523
00:21:09,280 --> 00:21:12,720
here we are out of 512 bit attack are

524
00:21:12,720 --> 00:21:15,440
getting 256 on free

525
00:21:15,440 --> 00:21:17,760
uh that's our constant and

526
00:21:17,760 --> 00:21:20,720
last row is public variable so

527
00:21:20,720 --> 00:21:23,679
this instead of that if we go up to one

528
00:21:23,679 --> 00:21:25,760
one round and but i don't know whether

529
00:21:25,760 --> 00:21:28,159
it is practical or not

530
00:21:28,159 --> 00:21:30,559
thank you

531
00:21:30,559 --> 00:21:32,200
let's thank the speaker

532
00:21:32,200 --> 00:21:39,039
[Applause]

533
00:21:39,039 --> 00:21:42,039
so

