1
00:00:01,439 --> 00:00:04,439
okay

2
00:00:18,960 --> 00:00:20,080
hello

3
00:00:20,080 --> 00:00:22,160
uh welcome to the post quantum

4
00:00:22,160 --> 00:00:24,720
cryptography 2 session

5
00:00:24,720 --> 00:00:27,039
we have three talks in this session and

6
00:00:27,039 --> 00:00:28,560
the first talk

7
00:00:28,560 --> 00:00:32,000
is by vessel van verden from cwi

8
00:00:32,000 --> 00:00:34,559
amsterdam

9
00:00:35,200 --> 00:00:37,440
yeah okay thank you for the introduction

10
00:00:37,440 --> 00:00:39,920
so i'm uh very happy that our paper made

11
00:00:39,920 --> 00:00:41,840
it here even though

12
00:00:41,840 --> 00:00:43,360
the title is a bit long and we had this

13
00:00:43,360 --> 00:00:44,879
negative correlation with acceptance

14
00:00:44,879 --> 00:00:46,559
rate

15
00:00:46,559 --> 00:00:48,160
but i'm very excited to tell you about

16
00:00:48,160 --> 00:00:49,200
all these

17
00:00:49,200 --> 00:00:52,399
these keywords that appear in the title

18
00:00:52,399 --> 00:00:55,199
so let's start with some some motivation

19
00:00:55,199 --> 00:00:57,440
so if we look at the current landscape

20
00:00:57,440 --> 00:00:59,120
of let's space crypto

21
00:00:59,120 --> 00:01:01,520
it's almost always based on either the

22
00:01:01,520 --> 00:01:03,440
lw assumptions or

23
00:01:03,440 --> 00:01:05,199
cis or and through or related

24
00:01:05,199 --> 00:01:06,880
assumptions

25
00:01:06,880 --> 00:01:09,520
and the letters that you get

26
00:01:09,520 --> 00:01:11,280
while they are very versatile to you can

27
00:01:11,280 --> 00:01:13,119
do a lot of crypto with it

28
00:01:13,119 --> 00:01:14,799
but they have rather poor decoding

29
00:01:14,799 --> 00:01:16,960
properties

30
00:01:16,960 --> 00:01:19,759
and at the same time many wonderful labs

31
00:01:19,759 --> 00:01:20,720
exist

32
00:01:20,720 --> 00:01:23,360
with great geometric properties

33
00:01:23,360 --> 00:01:25,360
and of course the

34
00:01:25,360 --> 00:01:27,759
the the question is then can we use

35
00:01:27,759 --> 00:01:30,799
these in cryptography

36
00:01:31,280 --> 00:01:33,840
and our contributions are a general like

37
00:01:33,840 --> 00:01:35,840
identification encryption and signature

38
00:01:35,840 --> 00:01:36,799
scheme

39
00:01:36,799 --> 00:01:39,360
based on the labs item vision problem

40
00:01:39,360 --> 00:01:41,360
and with general i mean that you can put

41
00:01:41,360 --> 00:01:43,119
any letters in there with certain

42
00:01:43,119 --> 00:01:46,720
properties and you obtain such a scheme

43
00:01:46,720 --> 00:01:48,560
and the better the properties of this

44
00:01:48,560 --> 00:01:50,720
letters the the better the efficiency

45
00:01:50,720 --> 00:01:52,560
and security of of the eventual scheme

46
00:01:52,560 --> 00:01:55,439
will be

47
00:01:55,439 --> 00:01:57,759
okay so let's get to the the definitions

48
00:01:57,759 --> 00:01:59,759
so what's the lattice well given any

49
00:01:59,759 --> 00:02:02,399
basis you can view letters as

50
00:02:02,399 --> 00:02:03,920
all the integer combinations of these

51
00:02:03,920 --> 00:02:05,840
space elements

52
00:02:05,840 --> 00:02:07,759
and i was talking about geometric

53
00:02:07,759 --> 00:02:10,318
properties so let's uh look at a few of

54
00:02:10,318 --> 00:02:11,200
these

55
00:02:11,200 --> 00:02:12,959
so probably the most famous one is the

56
00:02:12,959 --> 00:02:15,599
first minimum of lettuce so this is the

57
00:02:15,599 --> 00:02:17,280
the minimum length of any non-zero

58
00:02:17,280 --> 00:02:18,480
elapsed vector

59
00:02:18,480 --> 00:02:20,160
and alternatively you can view this as

60
00:02:20,160 --> 00:02:21,599
the minimum distance between any two

61
00:02:21,599 --> 00:02:23,920
distinct lattice points

62
00:02:23,920 --> 00:02:26,239
and secondly we have the determinant of

63
00:02:26,239 --> 00:02:28,480
a lattice so if you look at any

64
00:02:28,480 --> 00:02:30,480
fundamental area of the lattice up to

65
00:02:30,480 --> 00:02:32,800
this the translation of the of the

66
00:02:32,800 --> 00:02:34,720
letters

67
00:02:34,720 --> 00:02:37,040
then this this area has some volume and

68
00:02:37,040 --> 00:02:38,480
this is always the same and we got the

69
00:02:38,480 --> 00:02:41,280
determinant of of the letters

70
00:02:41,280 --> 00:02:43,120
so these are two geometric properties of

71
00:02:43,120 --> 00:02:44,720
lattice and they are related in the in

72
00:02:44,720 --> 00:02:47,040
the following way by minkowski's theorem

73
00:02:47,040 --> 00:02:48,959
that says that this first minimum is

74
00:02:48,959 --> 00:02:51,680
upper bounded by

75
00:02:51,680 --> 00:02:53,680
some quantity that depends on this

76
00:02:53,680 --> 00:02:55,760
normalized determinant of the letters

77
00:02:55,760 --> 00:02:58,080
so you can think of it as about square

78
00:02:58,080 --> 00:02:59,840
of n times this

79
00:02:59,840 --> 00:03:01,519
this normalized determinant up to the

80
00:03:01,519 --> 00:03:03,760
constants

81
00:03:03,760 --> 00:03:05,519
to do cryptography with lettuces we need

82
00:03:05,519 --> 00:03:07,519
some some hard problems

83
00:03:07,519 --> 00:03:08,879
so

84
00:03:08,879 --> 00:03:10,239
again the most famous one is probably

85
00:03:10,239 --> 00:03:12,400
the shortest vector problem where given

86
00:03:12,400 --> 00:03:14,800
any basis of a lattice you are asked to

87
00:03:14,800 --> 00:03:15,840
find

88
00:03:15,840 --> 00:03:16,800
such a

89
00:03:16,800 --> 00:03:20,400
non-zero shortest vector of the lattice

90
00:03:20,400 --> 00:03:22,480
and secondly kind of the inhomogeneous

91
00:03:22,480 --> 00:03:24,480
version of this problem

92
00:03:24,480 --> 00:03:26,159
is the boundary this decoding problem so

93
00:03:26,159 --> 00:03:27,840
here you're given a target

94
00:03:27,840 --> 00:03:30,239
that lies at the most distance

95
00:03:30,239 --> 00:03:32,799
rho from the lattice

96
00:03:32,799 --> 00:03:33,760
and

97
00:03:33,760 --> 00:03:35,680
the the problem asks you to recover this

98
00:03:35,680 --> 00:03:38,400
this lattice point

99
00:03:38,480 --> 00:03:41,280
and if we so these these two problems

100
00:03:41,280 --> 00:03:44,159
are in general very very hard to solve

101
00:03:44,159 --> 00:03:45,840
and the best arguments that we have are

102
00:03:45,840 --> 00:03:48,080
exponential in the dimension so in

103
00:03:48,080 --> 00:03:50,080
dimension 2 it all seems easy but trust

104
00:03:50,080 --> 00:03:52,319
me it becomes a lot harder

105
00:03:52,319 --> 00:03:55,439
in much higher dimensions

106
00:03:55,439 --> 00:03:56,959
but if we look at the concrete hardness

107
00:03:56,959 --> 00:03:58,319
of these problems

108
00:03:58,319 --> 00:04:00,560
then what it actually also depends on is

109
00:04:00,560 --> 00:04:01,840
the the gap

110
00:04:01,840 --> 00:04:04,319
uh between what this minkowski bounce

111
00:04:04,319 --> 00:04:06,640
says and what the actual

112
00:04:06,640 --> 00:04:07,519
uh

113
00:04:07,519 --> 00:04:08,959
for example for the short sector problem

114
00:04:08,959 --> 00:04:10,959
if you have a a

115
00:04:10,959 --> 00:04:12,560
first minimum that's much shorter than

116
00:04:12,560 --> 00:04:14,480
what this minkowski bound says

117
00:04:14,480 --> 00:04:16,478
then it's also much easier to recover

118
00:04:16,478 --> 00:04:18,478
this this vector

119
00:04:18,478 --> 00:04:19,600
so that's kind of what the state of the

120
00:04:19,600 --> 00:04:22,479
art cryptanilus currently says

121
00:04:22,479 --> 00:04:23,759
and similar for this boundary this

122
00:04:23,759 --> 00:04:26,479
decoding problem if

123
00:04:26,479 --> 00:04:28,960
this row is far away from this minkowski

124
00:04:28,960 --> 00:04:31,680
upper bound so if this row is very small

125
00:04:31,680 --> 00:04:33,360
then your target lies much closer to the

126
00:04:33,360 --> 00:04:35,520
lattice and it's also easier to recover

127
00:04:35,520 --> 00:04:37,840
this closest lettuce point

128
00:04:37,840 --> 00:04:39,360
so the concrete harness really depends

129
00:04:39,360 --> 00:04:41,280
on these these

130
00:04:41,280 --> 00:04:43,120
gaps

131
00:04:43,120 --> 00:04:45,520
okay so how would you do encryption in

132
00:04:45,520 --> 00:04:48,000
in general with lettuces and for the

133
00:04:48,000 --> 00:04:49,840
sake of this talk let's call this the

134
00:04:49,840 --> 00:04:51,759
the legacy approach how it's been done

135
00:04:51,759 --> 00:04:53,600
uh currently

136
00:04:53,600 --> 00:04:54,560
so

137
00:04:54,560 --> 00:04:58,240
um what you have is one party has some

138
00:04:58,240 --> 00:05:00,800
good basis that is secret of lattice

139
00:05:00,800 --> 00:05:03,360
well publicly you give everyone some

140
00:05:03,360 --> 00:05:05,039
some bad basis

141
00:05:05,039 --> 00:05:06,400
of the letters

142
00:05:06,400 --> 00:05:09,039
and with good i mean that these factors

143
00:05:09,039 --> 00:05:11,280
are somewhat short and orthogonal well

144
00:05:11,280 --> 00:05:13,360
with bad i mean that these vectors are

145
00:05:13,360 --> 00:05:15,520
somewhat long and not so orthogonal

146
00:05:15,520 --> 00:05:18,320
and note that any of these two bases are

147
00:05:18,320 --> 00:05:20,160
differ from each other by a unimolar

148
00:05:20,160 --> 00:05:22,400
transformation

149
00:05:22,400 --> 00:05:24,160
and because this search vector problem

150
00:05:24,160 --> 00:05:26,240
is hard it's hard to go from this this

151
00:05:26,240 --> 00:05:27,840
bad basis to this

152
00:05:27,840 --> 00:05:29,680
good basis

153
00:05:29,680 --> 00:05:30,479
um

154
00:05:30,479 --> 00:05:32,160
and what all these assumptions like

155
00:05:32,160 --> 00:05:33,280
andrew

156
00:05:33,280 --> 00:05:35,840
give you is a way to generate

157
00:05:35,840 --> 00:05:37,919
such a random lattice along with such a

158
00:05:37,919 --> 00:05:40,479
good basis

159
00:05:40,560 --> 00:05:42,560
okay so what can we do with just a a

160
00:05:42,560 --> 00:05:44,720
basis well we have the bias nearest

161
00:05:44,720 --> 00:05:46,080
plain algorithm

162
00:05:46,080 --> 00:05:47,919
and this is a decoding algorithm so this

163
00:05:47,919 --> 00:05:49,120
algorithm solves the bound source

164
00:05:49,120 --> 00:05:51,840
department this is the coding problem uh

165
00:05:51,840 --> 00:05:54,960
up to some well like if the

166
00:05:54,960 --> 00:05:56,960
depending on this this gap it can solve

167
00:05:56,960 --> 00:05:57,919
it or not

168
00:05:57,919 --> 00:06:00,800
and if you have a uh

169
00:06:00,800 --> 00:06:02,400
so what it does this basis gives some

170
00:06:02,400 --> 00:06:04,080
kind of fundamental area

171
00:06:04,080 --> 00:06:06,319
and any target that lies in one of these

172
00:06:06,319 --> 00:06:08,639
boxes gets decoded to the to the center

173
00:06:08,639 --> 00:06:10,720
of this box and you see that these these

174
00:06:10,720 --> 00:06:12,560
fundamental areas differ very much if

175
00:06:12,560 --> 00:06:15,600
you have a good basis or a bad basis

176
00:06:15,600 --> 00:06:18,080
so how do you use this to do encryption

177
00:06:18,080 --> 00:06:20,240
well we have a public basis of our

178
00:06:20,240 --> 00:06:21,520
letters so

179
00:06:21,520 --> 00:06:23,680
we can take any message and kind of

180
00:06:23,680 --> 00:06:25,840
encode it as a lattice point

181
00:06:25,840 --> 00:06:28,240
and to then encrypt it it's very easy

182
00:06:28,240 --> 00:06:30,800
you just add a small error

183
00:06:30,800 --> 00:06:32,720
and this gives you a target that you can

184
00:06:32,720 --> 00:06:34,960
just send over the wire and because this

185
00:06:34,960 --> 00:06:36,560
part of this decoding problem is hard

186
00:06:36,560 --> 00:06:39,360
you can't just decode it but using this

187
00:06:39,360 --> 00:06:41,039
good basis

188
00:06:41,039 --> 00:06:43,280
if you do the by decoding algorithm you

189
00:06:43,280 --> 00:06:45,680
do recover this this message as long as

190
00:06:45,680 --> 00:06:48,639
this error is small enough but if you

191
00:06:48,639 --> 00:06:49,919
look at the same time what happens with

192
00:06:49,919 --> 00:06:52,160
this this public basis then we see that

193
00:06:52,160 --> 00:06:55,120
we decode to a different message

194
00:06:55,120 --> 00:06:56,800
and

195
00:06:56,800 --> 00:06:58,639
in higher dimensions the property that

196
00:06:58,639 --> 00:06:59,919
he decodes to

197
00:06:59,919 --> 00:07:04,080
to the correct message is negligible

198
00:07:04,080 --> 00:07:05,919
okay so this is basically the idea of of

199
00:07:05,919 --> 00:07:08,639
doing crypto

200
00:07:08,639 --> 00:07:10,800
currently

201
00:07:10,800 --> 00:07:13,280
but there is some problem so this by by

202
00:07:13,280 --> 00:07:14,960
decoding that's being used or even

203
00:07:14,960 --> 00:07:17,280
simpler methods

204
00:07:17,280 --> 00:07:19,759
they all have this decoding gap that's

205
00:07:19,759 --> 00:07:20,800
at least

206
00:07:20,800 --> 00:07:23,599
a factor squared and away from what you

207
00:07:23,599 --> 00:07:24,720
optimally

208
00:07:24,720 --> 00:07:26,560
might be able to do

209
00:07:26,560 --> 00:07:28,400
and as a result we can break these

210
00:07:28,400 --> 00:07:31,280
schemes by uh solve like by running

211
00:07:31,280 --> 00:07:34,800
later reduction algorithms like big ac

212
00:07:34,800 --> 00:07:36,479
and you only have to solve the short

213
00:07:36,479 --> 00:07:39,199
factor problem in the average case in a

214
00:07:39,199 --> 00:07:41,440
dimension about n over two if your

215
00:07:41,440 --> 00:07:43,360
letters has dimension n to break it you

216
00:07:43,360 --> 00:07:46,400
only need to solve sap in dimension

217
00:07:46,400 --> 00:07:49,199
n over two and for a concrete example

218
00:07:49,199 --> 00:07:51,759
uh for some of these nist

219
00:07:51,759 --> 00:07:55,520
schemes if n is for example 1024 then to

220
00:07:55,520 --> 00:07:57,840
break it you only need to solve sap in

221
00:07:57,840 --> 00:08:00,000
dimension about 450. i mean it's still

222
00:08:00,000 --> 00:08:02,000
very hard but

223
00:08:02,000 --> 00:08:03,919
what this implies is that we have to use

224
00:08:03,919 --> 00:08:06,319
lettuces that are are much higher

225
00:08:06,319 --> 00:08:07,520
dimensional

226
00:08:07,520 --> 00:08:09,599
and as a result also

227
00:08:09,599 --> 00:08:12,639
much less efficient and also in terms of

228
00:08:12,639 --> 00:08:15,120
time but also in space

229
00:08:15,120 --> 00:08:17,039
so can we do better than this squared

230
00:08:17,039 --> 00:08:18,479
and

231
00:08:18,479 --> 00:08:20,560
well yes we can for example this is the

232
00:08:20,560 --> 00:08:22,879
the prime lettuce that was already in

233
00:08:22,879 --> 00:08:25,680
the coral reef scheme in 1988

234
00:08:25,680 --> 00:08:26,879
and

235
00:08:26,879 --> 00:08:28,160
if you

236
00:08:28,160 --> 00:08:31,599
look at these letters and and

237
00:08:32,399 --> 00:08:33,679
close enough then you can see that you

238
00:08:33,679 --> 00:08:35,760
can do efficient decoding in this

239
00:08:35,760 --> 00:08:37,599
letters just by some simple trial

240
00:08:37,599 --> 00:08:39,279
division

241
00:08:39,279 --> 00:08:40,799
um

242
00:08:40,799 --> 00:08:42,320
and even if you pick all these

243
00:08:42,320 --> 00:08:44,560
parameters right then this gap

244
00:08:44,560 --> 00:08:46,160
isn't squared of n no you can get it

245
00:08:46,160 --> 00:08:48,320
down all the way to log of n

246
00:08:48,320 --> 00:08:50,720
and this means that's that's just

247
00:08:50,720 --> 00:08:52,160
directly attacking

248
00:08:52,160 --> 00:08:53,440
um

249
00:08:53,440 --> 00:08:55,920
like this this lettuce might enable us

250
00:08:55,920 --> 00:08:56,640
to

251
00:08:56,640 --> 00:08:58,720
to get a scheme where n is let's say a

252
00:08:58,720 --> 00:09:01,440
thousand and to break it we need beta to

253
00:09:01,440 --> 00:09:04,160
also be close to a thousand so you get a

254
00:09:04,160 --> 00:09:06,839
lot more security using the same

255
00:09:06,839 --> 00:09:09,120
dimension but now we have a problem so

256
00:09:09,120 --> 00:09:11,040
if we want to do the same strategy of

257
00:09:11,040 --> 00:09:12,399
running encryption

258
00:09:12,399 --> 00:09:14,080
we have our our let's say our good

259
00:09:14,080 --> 00:09:16,240
letters on on on one side

260
00:09:16,240 --> 00:09:18,160
but it's not secret anymore like we

261
00:09:18,160 --> 00:09:20,720
picked some some very special letters

262
00:09:20,720 --> 00:09:24,000
and everyone knows it

263
00:09:24,000 --> 00:09:26,640
so even if you give some some bad basis

264
00:09:26,640 --> 00:09:27,760
of of

265
00:09:27,760 --> 00:09:29,519
to the public like everyone knows i'm

266
00:09:29,519 --> 00:09:32,560
you're using that lettuce

267
00:09:32,640 --> 00:09:34,720
so what have people tried before to kind

268
00:09:34,720 --> 00:09:37,440
of hide this this good lattice well you

269
00:09:37,440 --> 00:09:38,800
could think of like maybe introducing a

270
00:09:38,800 --> 00:09:41,519
little bit of of randomness in in this

271
00:09:41,519 --> 00:09:44,240
thing or uh you can maybe permute the

272
00:09:44,240 --> 00:09:46,160
the coefficients a bit

273
00:09:46,160 --> 00:09:48,240
but all of these methods

274
00:09:48,240 --> 00:09:50,880
have also been being broken by

275
00:09:50,880 --> 00:09:53,040
abusing this this kind of ad hoc

276
00:09:53,040 --> 00:09:54,800
construction

277
00:09:54,800 --> 00:09:56,080
and

278
00:09:56,080 --> 00:09:58,800
so what's the the what what can we do if

279
00:09:58,800 --> 00:10:00,640
we want to to keep the geometry of the

280
00:10:00,640 --> 00:10:02,000
lattice

281
00:10:02,000 --> 00:10:05,120
but but hide it well there's only one

282
00:10:05,120 --> 00:10:06,399
thing you can actually do if you want to

283
00:10:06,399 --> 00:10:08,880
keep the the geometry correct and that

284
00:10:08,880 --> 00:10:12,640
is to apply in isometry to this letters

285
00:10:12,640 --> 00:10:15,040
and for let's just the the the full

286
00:10:15,040 --> 00:10:16,480
group of hassan trees is not just

287
00:10:16,480 --> 00:10:18,880
permutations of coefficients no you can

288
00:10:18,880 --> 00:10:21,200
apply any orthonormal transformation to

289
00:10:21,200 --> 00:10:22,399
it

290
00:10:22,399 --> 00:10:24,640
so what you propose just to

291
00:10:24,640 --> 00:10:26,079
you pick your your good lattice and you

292
00:10:26,079 --> 00:10:27,839
apply a

293
00:10:27,839 --> 00:10:30,079
uniform orthonormal transformation to it

294
00:10:30,079 --> 00:10:31,600
which basically means that you somehow

295
00:10:31,600 --> 00:10:35,360
like rotate your your letters

296
00:10:35,360 --> 00:10:36,320
and

297
00:10:36,320 --> 00:10:39,200
now to do encryption you just get some

298
00:10:39,200 --> 00:10:41,200
messages on the right you use this

299
00:10:41,200 --> 00:10:43,279
orthonormal transformation to which is

300
00:10:43,279 --> 00:10:45,360
secret which is your secret key to move

301
00:10:45,360 --> 00:10:47,120
to the to the good side there you know

302
00:10:47,120 --> 00:10:50,959
how to decode and then you move back

303
00:10:50,959 --> 00:10:52,399
so what

304
00:10:52,399 --> 00:10:54,000
is the key recovery problem here like

305
00:10:54,000 --> 00:10:55,519
this recovering this autonomous

306
00:10:55,519 --> 00:10:56,800
transformation

307
00:10:56,800 --> 00:10:58,320
well that's exactly the latest

308
00:10:58,320 --> 00:11:00,959
isomorphism problem and this problem has

309
00:11:00,959 --> 00:11:03,040
already been studied i think since the

310
00:11:03,040 --> 00:11:04,880
since people begin

311
00:11:04,880 --> 00:11:06,640
studying lattices

312
00:11:06,640 --> 00:11:09,600
and so given any two letters that are

313
00:11:09,600 --> 00:11:11,519
isomorphic it asks you to find this

314
00:11:11,519 --> 00:11:13,360
orthonormal transformation mapping one

315
00:11:13,360 --> 00:11:14,720
to the other

316
00:11:14,720 --> 00:11:16,880
and in terms of bases what this means is

317
00:11:16,880 --> 00:11:18,640
that you need to find this orthonormal

318
00:11:18,640 --> 00:11:21,040
transformation but also this unimodal

319
00:11:21,040 --> 00:11:23,279
transformation such that b prime is

320
00:11:23,279 --> 00:11:26,800
equal to o times b times u

321
00:11:26,800 --> 00:11:28,959
and kind of the presence of these two

322
00:11:28,959 --> 00:11:31,519
transformations both as o and this u is

323
00:11:31,519 --> 00:11:34,240
what seems to make the problem hard

324
00:11:34,240 --> 00:11:36,480
so let's zoom a bit uh in on this

325
00:11:36,480 --> 00:11:37,600
problem

326
00:11:37,600 --> 00:11:39,839
uh in one way you can can view it as the

327
00:11:39,839 --> 00:11:42,800
the let's analog of the very original

328
00:11:42,800 --> 00:11:45,120
mclees scheme where you have some

329
00:11:45,120 --> 00:11:47,440
generator matrix g of a

330
00:11:47,440 --> 00:11:49,519
code in which you can decode very well

331
00:11:49,519 --> 00:11:52,800
and to hide it you apply a

332
00:11:52,800 --> 00:11:55,040
a basis transformation s

333
00:11:55,040 --> 00:11:57,519
over the finite field and you apply some

334
00:11:57,519 --> 00:11:59,200
permutation some arbitrary like random

335
00:11:59,200 --> 00:12:01,040
permutation to it

336
00:12:01,040 --> 00:12:04,480
and note that permutations under this in

337
00:12:04,480 --> 00:12:06,079
the world of codes with with the hamming

338
00:12:06,079 --> 00:12:08,240
metric per mutations are exactly all

339
00:12:08,240 --> 00:12:11,200
these isometries but if you move to the

340
00:12:11,200 --> 00:12:13,040
to the world of lattices you get way

341
00:12:13,040 --> 00:12:14,560
more you get this all these orthonormal

342
00:12:14,560 --> 00:12:16,160
transformations

343
00:12:16,160 --> 00:12:17,920
and similar with the oil and vinegar

344
00:12:17,920 --> 00:12:20,320
scheme where you also hide some

345
00:12:20,320 --> 00:12:22,839
some product map that you

346
00:12:22,839 --> 00:12:25,519
uh that in which you can easily find a

347
00:12:25,519 --> 00:12:27,360
pre-image and you hide it by also

348
00:12:27,360 --> 00:12:28,560
applying some

349
00:12:28,560 --> 00:12:31,920
uh a fine invertible map

350
00:12:31,920 --> 00:12:33,839
and what's important about this problem

351
00:12:33,839 --> 00:12:36,240
is that that's been being studied quite

352
00:12:36,240 --> 00:12:38,720
a lot not by cryptographers but mostly

353
00:12:38,720 --> 00:12:40,720
just by by

354
00:12:40,720 --> 00:12:42,480
mathematicians i suppose

355
00:12:42,480 --> 00:12:44,720
and the best known attack

356
00:12:44,720 --> 00:12:45,839
to date

357
00:12:45,839 --> 00:12:48,480
also always requires you to solve svp

358
00:12:48,480 --> 00:12:50,880
first so you really need to find the

359
00:12:50,880 --> 00:12:54,639
short factors first to recover this uh

360
00:12:54,639 --> 00:12:56,800
iso-entry

361
00:12:56,800 --> 00:12:58,639
and that sounds like something that we

362
00:12:58,639 --> 00:13:01,920
uh we want so uh that's why we want to

363
00:13:01,920 --> 00:13:04,399
use this as a foundation for doing this

364
00:13:04,399 --> 00:13:06,800
led space crypto

365
00:13:06,800 --> 00:13:08,880
okay but we have uh two challenges that

366
00:13:08,880 --> 00:13:10,240
that remain

367
00:13:10,240 --> 00:13:12,720
first we have this uh orthonormal

368
00:13:12,720 --> 00:13:14,240
transformation

369
00:13:14,240 --> 00:13:16,000
and this uses real values and in

370
00:13:16,000 --> 00:13:18,240
practice real values are not

371
00:13:18,240 --> 00:13:23,200
yeah not not really possible

372
00:13:23,839 --> 00:13:24,800
and

373
00:13:24,800 --> 00:13:26,240
on the on the other side we have this

374
00:13:26,240 --> 00:13:28,240
unimolar transformation

375
00:13:28,240 --> 00:13:31,040
and we need some some solid way to

376
00:13:31,040 --> 00:13:33,360
sample this unimodal transformation

377
00:13:33,360 --> 00:13:34,800
um

378
00:13:34,800 --> 00:13:36,800
and with without with by making sure

379
00:13:36,800 --> 00:13:38,240
that it's not in some sense a weak

380
00:13:38,240 --> 00:13:41,279
instance like there are examples where

381
00:13:41,279 --> 00:13:42,480
you

382
00:13:42,480 --> 00:13:45,279
uh sample this you in kind of an eve way

383
00:13:45,279 --> 00:13:46,160
um

384
00:13:46,160 --> 00:13:48,160
and then just running at a level

385
00:13:48,160 --> 00:13:49,920
recovers you that brings you back from

386
00:13:49,920 --> 00:13:53,040
this b prime to to b so that's not uh we

387
00:13:53,040 --> 00:13:55,920
have to get a solid foundation for this

388
00:13:55,920 --> 00:13:57,920
and the best thing we can do is just

389
00:13:57,920 --> 00:14:00,560
make sure that this b prime

390
00:14:00,560 --> 00:14:02,480
we want to sample this u in such a way

391
00:14:02,480 --> 00:14:03,680
that this b prime is completely

392
00:14:03,680 --> 00:14:05,920
independent of b

393
00:14:05,920 --> 00:14:08,320
except i mean it's in the same uh it's

394
00:14:08,320 --> 00:14:09,760
isomorphic but

395
00:14:09,760 --> 00:14:11,440
um

396
00:14:11,440 --> 00:14:14,079
it should not uh this this u is sampled

397
00:14:14,079 --> 00:14:16,880
in such a way that b prime doesn't

398
00:14:16,880 --> 00:14:19,440
cannot leak any information about about

399
00:14:19,440 --> 00:14:21,360
b and as a result also not like any

400
00:14:21,360 --> 00:14:23,760
information about you

401
00:14:23,760 --> 00:14:25,440
okay so these are the two problems so

402
00:14:25,440 --> 00:14:27,360
let's look at the first one this

403
00:14:27,360 --> 00:14:30,480
orthonormal transformation

404
00:14:30,480 --> 00:14:31,839
if we look at the

405
00:14:31,839 --> 00:14:33,519
the the literature on the let's

406
00:14:33,519 --> 00:14:36,160
isolation problem then this is actually

407
00:14:36,160 --> 00:14:37,600
already solved

408
00:14:37,600 --> 00:14:39,760
namely what we do we don't work with

409
00:14:39,760 --> 00:14:42,000
these bases but we move to the ground

410
00:14:42,000 --> 00:14:44,720
matrix of a basis so gram matrix of the

411
00:14:44,720 --> 00:14:45,920
base is just

412
00:14:45,920 --> 00:14:47,839
the matrix all pairwise inner products

413
00:14:47,839 --> 00:14:49,600
between these basis vectors

414
00:14:49,600 --> 00:14:52,079
and if we look at the gram matrix of

415
00:14:52,079 --> 00:14:54,000
this b prime

416
00:14:54,000 --> 00:14:55,920
basis then we see that this orthonormal

417
00:14:55,920 --> 00:14:58,639
transformation cancels out in the middle

418
00:14:58,639 --> 00:15:00,399
and we get an equation that only depends

419
00:15:00,399 --> 00:15:02,480
on the on the ground matrices of these

420
00:15:02,480 --> 00:15:04,800
two bases

421
00:15:04,800 --> 00:15:05,760
um

422
00:15:05,760 --> 00:15:07,920
so if we define q as this this scrum

423
00:15:07,920 --> 00:15:10,160
matrix what we actually do is kind of

424
00:15:10,160 --> 00:15:12,880
move from the world of lettuces to the

425
00:15:12,880 --> 00:15:14,560
world of positive definite quadratic

426
00:15:14,560 --> 00:15:16,399
forms

427
00:15:16,399 --> 00:15:17,440
and

428
00:15:17,440 --> 00:15:19,680
how you can view this

429
00:15:19,680 --> 00:15:21,839
kind of on a high level is that you keep

430
00:15:21,839 --> 00:15:23,680
all the geometry like we keep all these

431
00:15:23,680 --> 00:15:25,839
inner products but we forget about the

432
00:15:25,839 --> 00:15:27,360
particular embedding

433
00:15:27,360 --> 00:15:29,440
of the lattice

434
00:15:29,440 --> 00:15:31,199
so a quadratic form really presents some

435
00:15:31,199 --> 00:15:33,440
lattice bases up to all these rotations

436
00:15:33,440 --> 00:15:34,880
which means that we can just forget

437
00:15:34,880 --> 00:15:38,160
about this this these rotations

438
00:15:38,160 --> 00:15:40,480
and this allows us to fully restate uh

439
00:15:40,480 --> 00:15:41,920
the left eigenventure problem in the

440
00:15:41,920 --> 00:15:44,720
following way we need to find some uh so

441
00:15:44,720 --> 00:15:47,040
given these discriminations you want to

442
00:15:47,040 --> 00:15:49,040
find some unimolar transformation just

443
00:15:49,040 --> 00:15:52,160
that q prime is equal to u times q times

444
00:15:52,160 --> 00:15:55,040
u transpose times q times u

445
00:15:55,040 --> 00:15:58,160
um and if we now also restrict this q to

446
00:15:58,160 --> 00:16:00,959
just we only work with let's say integer

447
00:16:00,959 --> 00:16:04,320
quadratic forms then this whole problem

448
00:16:04,320 --> 00:16:06,880
only uses integers and we got rid of all

449
00:16:06,880 --> 00:16:08,959
floating points or

450
00:16:08,959 --> 00:16:11,519
real numbers

451
00:16:11,519 --> 00:16:13,360
okay now we have one problem left is how

452
00:16:13,360 --> 00:16:14,639
do we sample this unimodal

453
00:16:14,639 --> 00:16:15,920
transformation

454
00:16:15,920 --> 00:16:17,759
and in fact we kind of solve this in

455
00:16:17,759 --> 00:16:19,120
another way

456
00:16:19,120 --> 00:16:21,040
we don't focus on this u but what we

457
00:16:21,040 --> 00:16:23,920
focus on is how do we sample this this q

458
00:16:23,920 --> 00:16:26,320
prime so how do we sample our bad public

459
00:16:26,320 --> 00:16:28,720
bases

460
00:16:29,360 --> 00:16:30,160
so

461
00:16:30,160 --> 00:16:32,000
we have to sample from the equivalence

462
00:16:32,000 --> 00:16:33,440
class of course

463
00:16:33,440 --> 00:16:34,560
um

464
00:16:34,560 --> 00:16:36,320
so we denote that by this this bracket

465
00:16:36,320 --> 00:16:37,519
notation

466
00:16:37,519 --> 00:16:39,440
and what we did in our paper is we

467
00:16:39,440 --> 00:16:43,920
defined a distribution over this class

468
00:16:43,920 --> 00:16:45,839
um and of course justifying this

469
00:16:45,839 --> 00:16:48,720
distribution is not not enough we also

470
00:16:48,720 --> 00:16:51,920
give an efficient sampler

471
00:16:51,920 --> 00:16:54,240
that given any representative of this

472
00:16:54,240 --> 00:16:56,880
this class gives you

473
00:16:56,880 --> 00:17:00,079
a sample q prime from this class but

474
00:17:00,079 --> 00:17:01,360
together with this unimodal

475
00:17:01,360 --> 00:17:04,160
transformation

476
00:17:04,160 --> 00:17:05,039
and

477
00:17:05,039 --> 00:17:06,640
so we have this parameter sigma by the

478
00:17:06,640 --> 00:17:08,640
way so with if it's only efficient if

479
00:17:08,640 --> 00:17:10,720
this parameter sigma is large enough and

480
00:17:10,720 --> 00:17:12,240
this parameter sigma is what's gonna

481
00:17:12,240 --> 00:17:14,240
drive like how bad is your

482
00:17:14,240 --> 00:17:16,000
your public basis

483
00:17:16,000 --> 00:17:17,280
but what's important is that this q

484
00:17:17,280 --> 00:17:19,359
prime only depends on on the class and

485
00:17:19,359 --> 00:17:22,480
not on on q itself so if you get this q

486
00:17:22,480 --> 00:17:24,799
prime it does it cannot leak in any way

487
00:17:24,799 --> 00:17:26,720
information about this this unimodal

488
00:17:26,720 --> 00:17:28,799
transformation

489
00:17:28,799 --> 00:17:30,960
um and automatically what this gives us

490
00:17:30,960 --> 00:17:32,720
is an efforts case

491
00:17:32,720 --> 00:17:35,600
definition of of lip of the lip problem

492
00:17:35,600 --> 00:17:37,840
instead of uh

493
00:17:37,840 --> 00:17:40,240
like getting any quadratic forms find

494
00:17:40,240 --> 00:17:41,919
this unimod transformation we can say

495
00:17:41,919 --> 00:17:44,320
okay sample round one or like sample two

496
00:17:44,320 --> 00:17:46,720
of these forms from a distribution and

497
00:17:46,720 --> 00:17:48,559
then try to find this this unimodal

498
00:17:48,559 --> 00:17:50,320
transformation

499
00:17:50,320 --> 00:17:51,679
and

500
00:17:51,679 --> 00:17:54,080
given this sampler

501
00:17:54,080 --> 00:17:55,919
we can actually give a zero knowledge

502
00:17:55,919 --> 00:17:57,200
proof of knowledge

503
00:17:57,200 --> 00:17:58,720
scheme

504
00:17:58,720 --> 00:17:59,600
of

505
00:17:59,600 --> 00:18:02,240
knowing of uh like knowing the existence

506
00:18:02,240 --> 00:18:05,280
of a uh unimodal transformation

507
00:18:05,280 --> 00:18:07,039
and that would go to the details there

508
00:18:07,039 --> 00:18:08,640
but this immediately implies that you

509
00:18:08,640 --> 00:18:11,360
have an identification scheme

510
00:18:11,360 --> 00:18:13,679
but maybe more importantly we obtain a

511
00:18:13,679 --> 00:18:16,000
worst case traverse case reduction over

512
00:18:16,000 --> 00:18:17,919
this class q

513
00:18:17,919 --> 00:18:20,799
so if we pick this sigma large enough

514
00:18:20,799 --> 00:18:23,039
then we show that the the the this

515
00:18:23,039 --> 00:18:24,640
average case lib problem

516
00:18:24,640 --> 00:18:26,640
where you get your your instance sampled

517
00:18:26,640 --> 00:18:28,720
from this distribution

518
00:18:28,720 --> 00:18:29,919
is actually

519
00:18:29,919 --> 00:18:32,080
the worst case which means that if we

520
00:18:32,080 --> 00:18:33,280
sample our public key from this

521
00:18:33,280 --> 00:18:35,120
distribution we know there's nothing

522
00:18:35,120 --> 00:18:36,799
fishy going on like this

523
00:18:36,799 --> 00:18:38,559
if people are able to break that they

524
00:18:38,559 --> 00:18:40,960
are able to break any

525
00:18:40,960 --> 00:18:44,799
worst case instance over this class

526
00:18:45,200 --> 00:18:47,280
okay so that's this

527
00:18:47,280 --> 00:18:49,120
these two things kind of give us a solid

528
00:18:49,120 --> 00:18:50,799
foundation to this all

529
00:18:50,799 --> 00:18:51,840
um

530
00:18:51,840 --> 00:18:54,400
what is the concrete criticalize that we

531
00:18:54,400 --> 00:18:58,160
have at the moment so

532
00:18:58,240 --> 00:19:00,960
any decodable lattice gives us such an

533
00:19:00,960 --> 00:19:03,280
encryption scheme in the the way i

534
00:19:03,280 --> 00:19:04,720
explained it earlier

535
00:19:04,720 --> 00:19:06,480
and the best known attacks that we we

536
00:19:06,480 --> 00:19:08,320
know currently is just generic latch

537
00:19:08,320 --> 00:19:10,320
reduction

538
00:19:10,320 --> 00:19:12,320
and so what's the cost of this well if

539
00:19:12,320 --> 00:19:13,600
we

540
00:19:13,600 --> 00:19:16,160
try to find the shortest vector

541
00:19:16,160 --> 00:19:17,919
in the in the left itself then we know

542
00:19:17,919 --> 00:19:19,919
that this depends on this this gap

543
00:19:19,919 --> 00:19:21,679
between the the first minimum and this

544
00:19:21,679 --> 00:19:23,200
minkowski bounds that i introduced

545
00:19:23,200 --> 00:19:24,480
earlier

546
00:19:24,480 --> 00:19:26,640
but if two letters are isomorphic then

547
00:19:26,640 --> 00:19:29,280
their duels are also isomorphic so we

548
00:19:29,280 --> 00:19:31,840
can also run this attack on the dual

549
00:19:31,840 --> 00:19:33,520
so you also have to make sure that this

550
00:19:33,520 --> 00:19:36,240
dual gap is small

551
00:19:36,240 --> 00:19:38,880
and lastly of course you can always just

552
00:19:38,880 --> 00:19:41,360
try to decode directly and that depends

553
00:19:41,360 --> 00:19:44,559
on this decoding gap

554
00:19:45,200 --> 00:19:47,440
so let's look at a few of these these

555
00:19:47,440 --> 00:19:50,400
decodable lattices

556
00:19:50,400 --> 00:19:53,120
in which you can decode efficiently

557
00:19:53,120 --> 00:19:55,200
and

558
00:19:55,200 --> 00:19:56,880
this this prime lapse that i introduced

559
00:19:56,880 --> 00:19:59,760
before so we have this logarithmic

560
00:19:59,760 --> 00:20:01,919
gap both for decoding and then for the

561
00:20:01,919 --> 00:20:04,480
first minimum but unfortunately

562
00:20:04,480 --> 00:20:06,720
this this dual gap is still off of size

563
00:20:06,720 --> 00:20:09,840
curtain so we could use this lattice for

564
00:20:09,840 --> 00:20:11,679
this crypto but it would still achieve

565
00:20:11,679 --> 00:20:13,440
kind of the same security as these and

566
00:20:13,440 --> 00:20:16,400
true and elderly things by attacking

567
00:20:16,400 --> 00:20:17,760
the dual

568
00:20:17,760 --> 00:20:18,559
but

569
00:20:18,559 --> 00:20:19,600
maybe

570
00:20:19,600 --> 00:20:21,360
more surprising is that if you just look

571
00:20:21,360 --> 00:20:22,400
at the

572
00:20:22,400 --> 00:20:24,000
the simplest lattice of all just the

573
00:20:24,000 --> 00:20:26,080
orthogonal lattice

574
00:20:26,080 --> 00:20:26,880
then

575
00:20:26,880 --> 00:20:28,720
this orthogonal lattice achieves exactly

576
00:20:28,720 --> 00:20:31,919
the same kind of geometric gaps as these

577
00:20:31,919 --> 00:20:35,520
entro and lwe constructions

578
00:20:35,520 --> 00:20:38,879
so in some sense we can

579
00:20:39,200 --> 00:20:40,720
reach the same performance that we get

580
00:20:40,720 --> 00:20:43,280
with entry and lv just using the most

581
00:20:43,280 --> 00:20:44,559
basic letters

582
00:20:44,559 --> 00:20:46,400
that exist

583
00:20:46,400 --> 00:20:48,080
and if we were to improve on this we

584
00:20:48,080 --> 00:20:49,520
have for example the barnes ball that is

585
00:20:49,520 --> 00:20:51,919
where all these gaps are of size of the

586
00:20:51,919 --> 00:20:54,320
fourth root of n

587
00:20:54,320 --> 00:20:56,320
so what does that then gives us for like

588
00:20:56,320 --> 00:20:58,559
possible future work of any of you want

589
00:20:58,559 --> 00:21:01,520
to to to work on that

590
00:21:01,520 --> 00:21:04,000
if you want to build a scheme on z2dn

591
00:21:04,000 --> 00:21:06,720
it has similar

592
00:21:06,720 --> 00:21:08,720
security to just these luv andrew

593
00:21:08,720 --> 00:21:11,440
schemes so for example if you take c to

594
00:21:11,440 --> 00:21:14,799
the 1024 then to recover this to break

595
00:21:14,799 --> 00:21:17,200
lip you need to solve sap and dimension

596
00:21:17,200 --> 00:21:19,600
around 440 so that's similar to these

597
00:21:19,600 --> 00:21:21,520
then through things

598
00:21:21,520 --> 00:21:23,200
but at the same time it's extremely

599
00:21:23,200 --> 00:21:25,200
simple and efficient to

600
00:21:25,200 --> 00:21:27,520
decode in this lattice

601
00:21:27,520 --> 00:21:30,400
so that makes your implementation

602
00:21:30,400 --> 00:21:34,240
much more much much better and simpler

603
00:21:34,240 --> 00:21:35,760
and if we look at this bar and roll that

604
00:21:35,760 --> 00:21:37,600
that i mentioned before in the same

605
00:21:37,600 --> 00:21:39,919
dimension to break it

606
00:21:39,919 --> 00:21:41,440
you might even need to solve sap in

607
00:21:41,440 --> 00:21:43,760
dimensions around 780.

608
00:21:43,760 --> 00:21:44,480
so

609
00:21:44,480 --> 00:21:45,679
while this lattice has the same

610
00:21:45,679 --> 00:21:47,919
dimension to break it we

611
00:21:47,919 --> 00:21:49,440
require way more

612
00:21:49,440 --> 00:21:51,360
uh

613
00:21:51,360 --> 00:21:53,120
yeah way more capacity

614
00:21:53,120 --> 00:21:54,080
and

615
00:21:54,080 --> 00:21:55,200
note that all these arguments are

616
00:21:55,200 --> 00:21:57,360
exponential in this parameter beta so

617
00:21:57,360 --> 00:22:00,320
almost doubling it's like this it's uh

618
00:22:00,320 --> 00:22:02,240
yeah improves the security levels by a

619
00:22:02,240 --> 00:22:03,520
lot

620
00:22:03,520 --> 00:22:05,360
but of course the holy grail that we we

621
00:22:05,360 --> 00:22:07,919
haven't found yet unfortunately is a

622
00:22:07,919 --> 00:22:10,080
lattice where all these gaps are poly

623
00:22:10,080 --> 00:22:12,720
logarithmic in the in in the dimension

624
00:22:12,720 --> 00:22:14,400
and what this would imply

625
00:22:14,400 --> 00:22:17,039
is that we have a

626
00:22:17,039 --> 00:22:20,159
encryption scheme for example where this

627
00:22:20,159 --> 00:22:21,200
um

628
00:22:21,200 --> 00:22:22,880
in in some dimension n and to break it

629
00:22:22,880 --> 00:22:25,280
you also need to solve s p in well that

630
00:22:25,280 --> 00:22:28,720
dimension n or maybe slightly less

631
00:22:28,720 --> 00:22:31,200
so to conclude any letters you can put

632
00:22:31,200 --> 00:22:32,400
it in our framework and you get an

633
00:22:32,400 --> 00:22:34,720
identification scene you can put any

634
00:22:34,720 --> 00:22:36,880
decodable letters in there and you

635
00:22:36,880 --> 00:22:39,280
obtain an encryption scheme you can i

636
00:22:39,280 --> 00:22:40,480
haven't talked about this but you can

637
00:22:40,480 --> 00:22:43,039
take any gaussian sampleable letters and

638
00:22:43,039 --> 00:22:44,960
you obtain a signature scheme

639
00:22:44,960 --> 00:22:47,039
and in such a way that the security of

640
00:22:47,039 --> 00:22:48,960
these things only seems to depend on

641
00:22:48,960 --> 00:22:51,760
their geometric quality

642
00:22:51,760 --> 00:22:53,600
and just the orthogonal lattice the

643
00:22:53,600 --> 00:22:55,039
simplest of all is already enough to

644
00:22:55,039 --> 00:22:58,000
match the security of lw and through but

645
00:22:58,000 --> 00:22:59,840
of course the end goal is to to do even

646
00:22:59,840 --> 00:23:02,559
better for example by the spawn wallets

647
00:23:02,559 --> 00:23:05,960
thank you for listening

648
00:23:10,240 --> 00:23:12,799
uh we have time for questions

649
00:23:12,799 --> 00:23:15,679
any questions to vessel

650
00:23:15,679 --> 00:23:18,400
thanks for the nice talk um i i start

651
00:23:18,400 --> 00:23:22,720
with i think a very naive question so um

652
00:23:22,720 --> 00:23:25,360
if you have given your basis as a gram

653
00:23:25,360 --> 00:23:28,559
matrix how do you do encryption then

654
00:23:28,559 --> 00:23:30,080
okay so the

655
00:23:30,080 --> 00:23:32,559
the thing is that this chrome matrix

656
00:23:32,559 --> 00:23:33,840
still allows you to do basically

657
00:23:33,840 --> 00:23:35,520
everything that you normally can do with

658
00:23:35,520 --> 00:23:37,200
with the lattice

659
00:23:37,200 --> 00:23:39,280
so this this

660
00:23:39,280 --> 00:23:41,600
if you move from lattices to quadratic

661
00:23:41,600 --> 00:23:42,480
forms

662
00:23:42,480 --> 00:23:43,840
what you basically do is you restrict

663
00:23:43,840 --> 00:23:45,840
yourself to the letter c to the n

664
00:23:45,840 --> 00:23:47,200
but instead of using the standard

665
00:23:47,200 --> 00:23:49,039
euclidean inner product you now use the

666
00:23:49,039 --> 00:23:51,200
inner product that's defined with

667
00:23:51,200 --> 00:23:53,120
respect of this this credit form

668
00:23:53,120 --> 00:23:53,919
so

669
00:23:53,919 --> 00:23:55,679
uh everything worked exactly the same

670
00:23:55,679 --> 00:23:58,000
but you just use a slightly different

671
00:23:58,000 --> 00:24:00,640
inner product but you can also just run

672
00:24:00,640 --> 00:24:03,200
ll on ground matrices uh run bkz on

673
00:24:03,200 --> 00:24:04,400
grammatical

674
00:24:04,400 --> 00:24:07,760
all makes sense okay am i

675
00:24:07,760 --> 00:24:09,679
unless i take the time of other people

676
00:24:09,679 --> 00:24:11,200
maybe i can ask one more question yes

677
00:24:11,200 --> 00:24:13,039
please um

678
00:24:13,039 --> 00:24:15,679
so um you say that you need gaussian

679
00:24:15,679 --> 00:24:17,440
sampleable access to

680
00:24:17,440 --> 00:24:19,600
get a signature scheme but any less

681
00:24:19,600 --> 00:24:21,600
gives you an identification scheme so i

682
00:24:21,600 --> 00:24:23,200
assume the signature scheme you're

683
00:24:23,200 --> 00:24:27,120
talking about doesn't use via term here

684
00:24:30,720 --> 00:24:31,679
so

685
00:24:31,679 --> 00:24:33,520
because using fiat mirror

686
00:24:33,520 --> 00:24:34,960
it seems like you can get it from the

687
00:24:34,960 --> 00:24:36,640
identification scheme

688
00:24:36,640 --> 00:24:38,559
oh sorry yeah yeah so yeah so

689
00:24:38,559 --> 00:24:39,840
that's the general way but that's of

690
00:24:39,840 --> 00:24:42,320
course not so efficient

691
00:24:42,320 --> 00:24:43,679
uh

692
00:24:43,679 --> 00:24:45,520
and if you really have a gaussian sample

693
00:24:45,520 --> 00:24:47,760
of lettuce then you can do

694
00:24:47,760 --> 00:24:50,799
like competitive secondary scheme okay

695
00:24:50,799 --> 00:24:52,559
thanks

696
00:24:52,559 --> 00:24:53,520
thank you

697
00:24:53,520 --> 00:24:55,600
are there any more questions to vessel

698
00:24:55,600 --> 00:24:57,918
yes

699
00:24:58,720 --> 00:25:00,799
hello thanks for the talk

700
00:25:00,799 --> 00:25:02,080
so

701
00:25:02,080 --> 00:25:03,679
uh here you are

702
00:25:03,679 --> 00:25:05,919
you have this average case worst case

703
00:25:05,919 --> 00:25:08,559
reduction and the uh

704
00:25:08,559 --> 00:25:10,080
lip

705
00:25:10,080 --> 00:25:13,840
this looks hard in general right but

706
00:25:13,840 --> 00:25:16,400
fix one type of luts

707
00:25:16,400 --> 00:25:18,960
then couldn't this problem be

708
00:25:18,960 --> 00:25:21,120
easier for this specific class of lots

709
00:25:21,120 --> 00:25:23,200
that you are considering yeah so you

710
00:25:23,200 --> 00:25:26,080
might expect that

711
00:25:26,080 --> 00:25:27,360
but

712
00:25:27,360 --> 00:25:29,360
all the research so far even

713
00:25:29,360 --> 00:25:30,799
trying to to

714
00:25:30,799 --> 00:25:33,200
solve this problem just for z to the end

715
00:25:33,200 --> 00:25:34,880
so you you pepsi to the end and you get

716
00:25:34,880 --> 00:25:37,200
some rotation of c to the n

717
00:25:37,200 --> 00:25:38,559
the the best attack we know is that

718
00:25:38,559 --> 00:25:40,720
selection

719
00:25:40,720 --> 00:25:42,320
and there has been like more research on

720
00:25:42,320 --> 00:25:44,400
this but uh

721
00:25:44,400 --> 00:25:46,240
so far it seems if you can find any

722
00:25:46,240 --> 00:25:47,919
letters in which you can

723
00:25:47,919 --> 00:25:50,240
can do anything better than let's

724
00:25:50,240 --> 00:25:51,600
production i would be very interested

725
00:25:51,600 --> 00:25:52,799
but

726
00:25:52,799 --> 00:25:54,840
we haven't seen them so

727
00:25:54,840 --> 00:25:58,720
far i don't hear you sir

728
00:25:59,200 --> 00:26:00,960
hey thank you uh i think we don't have

729
00:26:00,960 --> 00:26:02,400
more time for questions so you should

730
00:26:02,400 --> 00:26:04,159
take it offline

731
00:26:04,159 --> 00:26:08,000
the next uh talk is by quickbank leo and

732
00:26:08,000 --> 00:26:11,840
this is an online talk

733
00:26:13,279 --> 00:26:14,960
will you maybe share

734
00:26:14,960 --> 00:26:17,960
sorry

735
00:26:35,840 --> 00:26:37,360
uh hello

736
00:26:37,360 --> 00:26:39,039
could you help me

737
00:26:39,039 --> 00:26:40,799
yes we can hear you but we cannot see

738
00:26:40,799 --> 00:26:42,320
you now

739
00:26:42,320 --> 00:26:43,200
uh

740
00:26:43,200 --> 00:26:47,660
could you see my screen share

741
00:26:47,660 --> 00:26:50,789
[Music]

742
00:26:51,279 --> 00:26:52,720
so i did that

743
00:26:52,720 --> 00:26:53,420
let's see

744
00:26:53,420 --> 00:26:56,539
[Music]

745
00:27:01,279 --> 00:27:04,919
did you see the screenshot

746
00:27:12,480 --> 00:27:15,440
yes we see your screen okay yes so let's

747
00:27:15,440 --> 00:27:18,000
uh let me let me test

748
00:27:18,000 --> 00:27:22,880
again so it goes to the next slide right

749
00:27:33,200 --> 00:27:36,880
i'm sorry i didn't get any feedback from

750
00:27:36,880 --> 00:27:39,120
uh

751
00:27:40,559 --> 00:27:41,840
sorry uh could you could you see the

752
00:27:41,840 --> 00:27:43,600
slides

753
00:27:43,600 --> 00:27:44,480
yes

754
00:27:44,480 --> 00:27:46,240
okay okay

755
00:27:46,240 --> 00:27:50,320
oh yes we do see your slices okay okay

756
00:27:52,320 --> 00:27:54,960
so um

757
00:27:56,399 --> 00:27:59,120
yes please

758
00:27:59,279 --> 00:28:03,200
okay yeah okay uh thanks thanks so um

759
00:28:03,200 --> 00:28:05,520
yeah so uh today i will be uh talking

760
00:28:05,520 --> 00:28:08,000
about our work on quantum algorithm for

761
00:28:08,000 --> 00:28:10,399
variance of average his lattice problem

762
00:28:10,399 --> 00:28:12,960
uh via a new technique we call filtering

763
00:28:12,960 --> 00:28:14,480
and this is a joint work with my

764
00:28:14,480 --> 00:28:17,360
co-author eli chen and my phd advisor

765
00:28:17,360 --> 00:28:19,039
mark zinder

766
00:28:19,039 --> 00:28:22,080
so um in this talk i will start by

767
00:28:22,080 --> 00:28:24,399
recalling the the two lattice problems

768
00:28:24,399 --> 00:28:26,480
that are widely used in cryptography

769
00:28:26,480 --> 00:28:28,399
namely the short integer solution and

770
00:28:28,399 --> 00:28:30,320
learning with errors problems

771
00:28:30,320 --> 00:28:32,720
however then introduce the virus that we

772
00:28:32,720 --> 00:28:36,399
consider in this uh talk and show and

773
00:28:36,399 --> 00:28:38,960
show how our algorithm works

774
00:28:38,960 --> 00:28:39,760
so

775
00:28:39,760 --> 00:28:42,159
um although our algorithm is notable and

776
00:28:42,159 --> 00:28:44,640
solves various lattice problems in the

777
00:28:44,640 --> 00:28:46,880
interesting parameter regime none of the

778
00:28:46,880 --> 00:28:49,600
results give applications to uh solving

779
00:28:49,600 --> 00:28:52,240
short shortest vector problems which is

780
00:28:52,240 --> 00:28:54,640
the most fundamental lattice problem

781
00:28:54,640 --> 00:28:55,600
so

782
00:28:55,600 --> 00:28:57,440
i would like to say that our work does

783
00:28:57,440 --> 00:28:59,760
not solve svp but still

784
00:28:59,760 --> 00:29:01,679
i believe provide interesting directions

785
00:29:01,679 --> 00:29:05,039
towards this ultimate code

786
00:29:05,039 --> 00:29:07,840
so let's start by recalling the precise

787
00:29:07,840 --> 00:29:09,919
definitions of the following two

788
00:29:09,919 --> 00:29:12,640
problems and we will compare them with

789
00:29:12,640 --> 00:29:14,720
uh the variance we considered in our

790
00:29:14,720 --> 00:29:16,399
work

791
00:29:16,399 --> 00:29:17,200
so

792
00:29:17,200 --> 00:29:19,120
the first one is the short integer

793
00:29:19,120 --> 00:29:20,480
solution problem

794
00:29:20,480 --> 00:29:23,200
and the problem is to uh given a random

795
00:29:23,200 --> 00:29:25,360
and wide matrix a

796
00:29:25,360 --> 00:29:27,520
find a nonzero solution x such that a

797
00:29:27,520 --> 00:29:30,000
times x equals to zero

798
00:29:30,000 --> 00:29:31,840
in other words we want to find a nonzero

799
00:29:31,840 --> 00:29:33,679
vector in the kernel of a

800
00:29:33,679 --> 00:29:35,840
and the additional constraint is that

801
00:29:35,840 --> 00:29:37,840
the solution should be short

802
00:29:37,840 --> 00:29:39,760
and this fails the trivial gaussian

803
00:29:39,760 --> 00:29:43,279
elimination as basically a random random

804
00:29:43,279 --> 00:29:46,399
solution will be large

805
00:29:47,360 --> 00:29:48,240
here

806
00:29:48,240 --> 00:29:49,200
there we go

807
00:29:49,200 --> 00:29:50,320
so

808
00:29:50,320 --> 00:29:52,159
atai formally proposed the following

809
00:29:52,159 --> 00:29:55,840
problem in 1996 given a random matrix a

810
00:29:55,840 --> 00:29:58,159
of dimension n by m and

811
00:29:58,159 --> 00:30:00,880
m is usually set as n log n the goal is

812
00:30:00,880 --> 00:30:02,799
to find the vector in the kernel of a

813
00:30:02,799 --> 00:30:05,360
with its l2 norm bounded by

814
00:30:05,360 --> 00:30:08,399
sum b

815
00:30:08,399 --> 00:30:12,399
and next uh is the uh the famous lwe

816
00:30:12,399 --> 00:30:14,320
the learning with error problem asked to

817
00:30:14,320 --> 00:30:16,320
find the secret vector s

818
00:30:16,320 --> 00:30:18,640
and together you are given an oracle

819
00:30:18,640 --> 00:30:21,440
and you can click the oracle polynomial

820
00:30:21,440 --> 00:30:22,399
many times

821
00:30:22,399 --> 00:30:24,640
and every click on the oracle returns a

822
00:30:24,640 --> 00:30:26,640
random linear combination of the secret

823
00:30:26,640 --> 00:30:28,880
plus a small amount of noise

824
00:30:28,880 --> 00:30:31,679
and more formally each click will

825
00:30:31,679 --> 00:30:32,480
give

826
00:30:32,480 --> 00:30:35,919
a i and y i well this y i is the inner

827
00:30:35,919 --> 00:30:38,960
product with this uh the random vector a

828
00:30:38,960 --> 00:30:41,760
i and the secret s plus some noise and

829
00:30:41,760 --> 00:30:44,240
the goal is to uh recover the secret

830
00:30:44,240 --> 00:30:45,279
vector

831
00:30:45,279 --> 00:30:48,080
uh by just clicking this oracle

832
00:30:48,080 --> 00:30:51,200
polynomial early many times

833
00:30:51,200 --> 00:30:52,880
and there are different choices for the

834
00:30:52,880 --> 00:30:55,279
noise distribution and one common choice

835
00:30:55,279 --> 00:30:58,720
is discrete gaussian

836
00:30:59,600 --> 00:31:01,200
so but why these two problems are

837
00:31:01,200 --> 00:31:04,720
important to cryptography i think um i

838
00:31:04,720 --> 00:31:06,399
probably don't need to explain too much

839
00:31:06,399 --> 00:31:09,039
here because there are many experts in

840
00:31:09,039 --> 00:31:10,720
this eurocrypt knows this much much

841
00:31:10,720 --> 00:31:13,519
better than me but still i want to say a

842
00:31:13,519 --> 00:31:16,240
little bit and this also motivates why

843
00:31:16,240 --> 00:31:18,880
we care about this variance of cis and

844
00:31:18,880 --> 00:31:21,440
lw

845
00:31:21,840 --> 00:31:24,480
and uh first of all they give like basic

846
00:31:24,480 --> 00:31:26,880
crypto applications like public key uh

847
00:31:26,880 --> 00:31:29,360
encryption and digital signatures and

848
00:31:29,360 --> 00:31:32,720
moreover with this rich structure of lwe

849
00:31:32,720 --> 00:31:34,640
there are many advanced applications

850
00:31:34,640 --> 00:31:36,799
including uh fully homomorphic

851
00:31:36,799 --> 00:31:39,440
encryption attribute-based encryption or

852
00:31:39,440 --> 00:31:40,559
even

853
00:31:40,559 --> 00:31:42,720
applications to all those quantum

854
00:31:42,720 --> 00:31:45,519
protocols like proof of quantumness

855
00:31:45,519 --> 00:31:48,799
and uh secondly there are uh this this

856
00:31:48,799 --> 00:31:51,200
uh problems are conjectured to be hard

857
00:31:51,200 --> 00:31:53,039
for quantum computers

858
00:31:53,039 --> 00:31:56,000
and one example is that among or

859
00:31:56,000 --> 00:31:58,399
candidates of the next quantum

860
00:31:58,399 --> 00:32:01,279
cryptography standardization almost half

861
00:32:01,279 --> 00:32:03,279
of the schemes are based on these

862
00:32:03,279 --> 00:32:06,640
problems or their variants

863
00:32:06,640 --> 00:32:08,559
and the third reason is that for some

864
00:32:08,559 --> 00:32:10,720
parameter regime we know that their

865
00:32:10,720 --> 00:32:13,120
average case hardness is implied by

866
00:32:13,120 --> 00:32:16,240
solving approximate svp for all lattices

867
00:32:16,240 --> 00:32:18,640
with certain approximation factor

868
00:32:18,640 --> 00:32:20,240
and since many people believe that

869
00:32:20,240 --> 00:32:23,440
approximate svp is hard this gives more

870
00:32:23,440 --> 00:32:27,720
justification about the security

871
00:32:29,039 --> 00:32:31,360
so in this work we will focus on

872
00:32:31,360 --> 00:32:34,559
variance of cis and lwe problems and try

873
00:32:34,559 --> 00:32:36,799
to solve them by quantum algorithms

874
00:32:36,799 --> 00:32:39,440
using a normal technique called filter

875
00:32:39,440 --> 00:32:40,559
and we're

876
00:32:40,559 --> 00:32:42,720
not going to focus on applications of

877
00:32:42,720 --> 00:32:45,200
this variant but more on their uh

878
00:32:45,200 --> 00:32:47,440
quantum solvability and the impact on

879
00:32:47,440 --> 00:32:48,720
svp

880
00:32:48,720 --> 00:32:49,600
and

881
00:32:49,600 --> 00:32:52,559
after uh all this uh the the discussions

882
00:32:52,559 --> 00:32:54,960
let's look at uh the definition of this

883
00:32:54,960 --> 00:32:57,840
variance

884
00:32:59,200 --> 00:33:00,960
so record this is the standard cis

885
00:33:00,960 --> 00:33:03,760
problem where we are asked to find a

886
00:33:03,760 --> 00:33:05,919
small l to normal solution of the linear

887
00:33:05,919 --> 00:33:07,919
system

888
00:33:07,919 --> 00:33:09,200
and

889
00:33:09,200 --> 00:33:11,919
in this work we consider the problem

890
00:33:11,919 --> 00:33:15,120
well the matrix a can be very very wide

891
00:33:15,120 --> 00:33:18,159
and the solution is shot in

892
00:33:18,159 --> 00:33:20,080
l infinity norm

893
00:33:20,080 --> 00:33:21,360
so

894
00:33:21,360 --> 00:33:24,480
that is the l infinity norm of x

895
00:33:24,480 --> 00:33:28,320
is at most q minus c over 2 for some

896
00:33:28,320 --> 00:33:32,640
constant c so here c is a sum constant

897
00:33:32,640 --> 00:33:36,159
namely this x well actually the solution

898
00:33:36,159 --> 00:33:38,799
is only allowed to take any value except

899
00:33:38,799 --> 00:33:42,080
the largest c values in the field s q

900
00:33:42,080 --> 00:33:45,760
as an example uh you can imagine uh cube

901
00:33:45,760 --> 00:33:49,279
is let's say five and c is one then each

902
00:33:49,279 --> 00:33:52,880
cut each car audit of x can only be

903
00:33:52,880 --> 00:33:58,320
0 1 or 4 because 4 is let's say -1

904
00:33:58,320 --> 00:33:59,760
so

905
00:33:59,760 --> 00:34:02,559
our results show that when the matrix a

906
00:34:02,559 --> 00:34:04,480
is very wide

907
00:34:04,480 --> 00:34:08,079
namely q minus c cubed times n to the c

908
00:34:08,079 --> 00:34:10,879
times q log q here because c with that c

909
00:34:10,879 --> 00:34:12,320
to be a constant this is still a

910
00:34:12,320 --> 00:34:14,159
polynomial

911
00:34:14,159 --> 00:34:17,040
there is a quantum algorithm that can

912
00:34:17,040 --> 00:34:19,760
find an x with a non-trivial infinity

913
00:34:19,760 --> 00:34:21,040
norm

914
00:34:21,040 --> 00:34:23,760
that's satisfying a times x equals to

915
00:34:23,760 --> 00:34:24,800
zero

916
00:34:24,800 --> 00:34:28,079
and also the infinity norm of x is

917
00:34:28,079 --> 00:34:31,359
bounded by q minus c over two

918
00:34:31,359 --> 00:34:33,199
so the running time and the number of

919
00:34:33,199 --> 00:34:35,760
samples or depends on entity and this

920
00:34:35,760 --> 00:34:37,839
somewhat limits application of the

921
00:34:37,839 --> 00:34:40,480
algorithm and when the c

922
00:34:40,480 --> 00:34:42,960
becomes large let's see just a

923
00:34:42,960 --> 00:34:45,199
log n then we don't know how to design

924
00:34:45,199 --> 00:34:46,320
an efficient

925
00:34:46,320 --> 00:34:49,040
quantum algorithm for that

926
00:34:49,040 --> 00:34:51,679
and as a corollary when the modulus is

927
00:34:51,679 --> 00:34:53,760
three we can find a binary solution in

928
00:34:53,760 --> 00:34:56,639
roughly quadratic time and even this is

929
00:34:56,639 --> 00:35:00,240
interesting and not known before

930
00:35:00,960 --> 00:35:02,720
and although um

931
00:35:02,720 --> 00:35:04,160
in in

932
00:35:04,160 --> 00:35:06,480
some cases we know that a solution

933
00:35:06,480 --> 00:35:08,880
bonded in l infinity norm is a solution

934
00:35:08,880 --> 00:35:11,599
bonding l2 norm but our algorithm

935
00:35:11,599 --> 00:35:14,240
doesn't give any uh c meaning for an l2

936
00:35:14,240 --> 00:35:16,640
norm because the first reason is that

937
00:35:16,640 --> 00:35:19,440
even if you even if we look at a single

938
00:35:19,440 --> 00:35:21,839
coordinate it can be as large as q minus

939
00:35:21,839 --> 00:35:24,800
c so even a single card it would be

940
00:35:24,800 --> 00:35:26,079
very large

941
00:35:26,079 --> 00:35:29,280
and the other reason is that matrix a

942
00:35:29,280 --> 00:35:30,880
is super wide

943
00:35:30,880 --> 00:35:33,839
namely uh proportion to enter the c and

944
00:35:33,839 --> 00:35:37,200
this would easily tell the outer norm

945
00:35:37,200 --> 00:35:40,079
so this is the uh the shot integer

946
00:35:40,079 --> 00:35:43,119
solution problem and our result of that

947
00:35:43,119 --> 00:35:46,000
and next let's look at the variant of

948
00:35:46,000 --> 00:35:47,920
lwe problem

949
00:35:47,920 --> 00:35:50,880
so this is the standard lw problem where

950
00:35:50,880 --> 00:35:52,960
you are given an oracle that outputs

951
00:35:52,960 --> 00:35:55,280
classical samples

952
00:35:55,280 --> 00:35:57,359
and the problem we are

953
00:35:57,359 --> 00:36:00,000
considered in this work is something we

954
00:36:00,000 --> 00:36:04,000
call lwe with quantum samples or slwe

955
00:36:04,000 --> 00:36:07,920
for short how this s stands for solve

956
00:36:07,920 --> 00:36:11,680
in our paper we have another religion

957
00:36:11,680 --> 00:36:14,079
notation but due to the time constraint

958
00:36:14,079 --> 00:36:16,560
i will just ignore it here

959
00:36:16,560 --> 00:36:19,680
so let's talk about this lw problem so

960
00:36:19,680 --> 00:36:21,359
instead of given a

961
00:36:21,359 --> 00:36:23,280
classical sample you are now given

962
00:36:23,280 --> 00:36:26,480
quantum samples every sample can uh

963
00:36:26,480 --> 00:36:28,480
contains a random coefficient of vector

964
00:36:28,480 --> 00:36:29,359
a i

965
00:36:29,359 --> 00:36:32,079
it's exactly the same as the standard lw

966
00:36:32,079 --> 00:36:33,760
problem

967
00:36:33,760 --> 00:36:36,240
and the inner product is now instead of

968
00:36:36,240 --> 00:36:39,520
giving as a classical sample a classical

969
00:36:39,520 --> 00:36:41,280
uh string is now given as a quantum

970
00:36:41,280 --> 00:36:43,680
state where the arrow is actually in

971
00:36:43,680 --> 00:36:45,839
superposition

972
00:36:45,839 --> 00:36:48,320
and the problem is to given polynomially

973
00:36:48,320 --> 00:36:51,040
many such quantum samples and find the

974
00:36:51,040 --> 00:36:53,280
secret vector s

975
00:36:53,280 --> 00:36:56,400
and here uh we can consider any error

976
00:36:56,400 --> 00:36:58,079
amplitude f

977
00:36:58,079 --> 00:37:00,400
not only just the discrete gaussian and

978
00:37:00,400 --> 00:37:03,359
indeed we don't know how to solve slwe

979
00:37:03,359 --> 00:37:05,119
with discrete gaussian

980
00:37:05,119 --> 00:37:07,040
and we will talk about that later in the

981
00:37:07,040 --> 00:37:08,400
talk

982
00:37:08,400 --> 00:37:09,520
so

983
00:37:09,520 --> 00:37:13,119
and and note that if we uh for a slwe

984
00:37:13,119 --> 00:37:15,440
problem if we measure the quantum state

985
00:37:15,440 --> 00:37:18,079
namely this uh cat y i

986
00:37:18,079 --> 00:37:20,400
and we are going to get an arrow across

987
00:37:20,400 --> 00:37:22,800
him to the distribution f squared

988
00:37:22,800 --> 00:37:25,280
due to the uh the fact of the quantum

989
00:37:25,280 --> 00:37:26,880
mechanics

990
00:37:26,880 --> 00:37:27,680
so

991
00:37:27,680 --> 00:37:31,040
uh the s-cap lwe with amplitude f can be

992
00:37:31,040 --> 00:37:33,440
reduced to the regular lwe with error

993
00:37:33,440 --> 00:37:35,440
distribution f squared

994
00:37:35,440 --> 00:37:37,520
so in other words if we can solve l w e

995
00:37:37,520 --> 00:37:39,920
with f squared we can solve this as lw

996
00:37:39,920 --> 00:37:42,960
with amplitude s

997
00:37:44,160 --> 00:37:46,240
so our result shows that

998
00:37:46,240 --> 00:37:47,920
there's a polynomial time quantum

999
00:37:47,920 --> 00:37:50,640
algorithm that finds the secret vector

1000
00:37:50,640 --> 00:37:54,160
at s if the dft of f is inverse

1001
00:37:54,160 --> 00:37:57,200
polynomial which i will explain later

1002
00:37:57,200 --> 00:38:00,160
shortly after and m is a sufficiently

1003
00:38:00,160 --> 00:38:02,240
large polynomial

1004
00:38:02,240 --> 00:38:06,400
so here this uh dft of f basically means

1005
00:38:06,400 --> 00:38:08,400
if we apply fourier transform on the

1006
00:38:08,400 --> 00:38:11,200
function f which is the arrow amplitude

1007
00:38:11,200 --> 00:38:13,440
function and let's say we get another

1008
00:38:13,440 --> 00:38:14,960
function f hat

1009
00:38:14,960 --> 00:38:18,480
then the minimum value of f hat is at

1010
00:38:18,480 --> 00:38:20,880
least inverse polynomial

1011
00:38:20,880 --> 00:38:23,520
so that's the uh definition of the dft

1012
00:38:23,520 --> 00:38:26,960
of f is being inverse polynomial

1013
00:38:26,960 --> 00:38:28,880
so this is the

1014
00:38:28,880 --> 00:38:30,320
our

1015
00:38:30,320 --> 00:38:33,839
result for slw

1016
00:38:36,240 --> 00:38:38,560
okay so uh before going to the details

1017
00:38:38,560 --> 00:38:41,040
of our algorithm let me also remark that

1018
00:38:41,040 --> 00:38:42,160
um

1019
00:38:42,160 --> 00:38:44,079
the quantum samples we define are

1020
00:38:44,079 --> 00:38:46,880
different from the problem of so-called

1021
00:38:46,880 --> 00:38:49,520
lwes with quantum samples defined in the

1022
00:38:49,520 --> 00:38:51,040
previous work by

1023
00:38:51,040 --> 00:38:53,760
guerilla canadians and distraught

1024
00:38:53,760 --> 00:38:55,760
in their definition the quantum lw

1025
00:38:55,760 --> 00:38:56,960
samples

1026
00:38:56,960 --> 00:39:00,720
the arrow e is classical but this a is

1027
00:39:00,720 --> 00:39:04,640
actually a quantum state so in our case

1028
00:39:04,640 --> 00:39:07,520
a is a classical and fixed string a

1029
00:39:07,520 --> 00:39:10,560
random vector and the uh the the arrow

1030
00:39:10,560 --> 00:39:13,280
is actually in superposition

1031
00:39:13,280 --> 00:39:16,560
so uh their variant of quantum lwe is

1032
00:39:16,560 --> 00:39:18,880
actually easy to solve but the idea in

1033
00:39:18,880 --> 00:39:21,680
their algorithm is um does not carry to

1034
00:39:21,680 --> 00:39:23,599
the quantum lwe

1035
00:39:23,599 --> 00:39:26,079
variant we are interested

1036
00:39:26,079 --> 00:39:28,240
so i would say there are two different

1037
00:39:28,240 --> 00:39:29,440
problems

1038
00:39:29,440 --> 00:39:32,480
uh which they recall different solutions

1039
00:39:32,480 --> 00:39:33,280
okay

1040
00:39:33,280 --> 00:39:36,320
so um all right so in the rest of the

1041
00:39:36,320 --> 00:39:37,599
talk i will

1042
00:39:37,599 --> 00:39:40,320
talk about how to solve slwe

1043
00:39:40,320 --> 00:39:42,960
and since our variant of cis can be

1044
00:39:42,960 --> 00:39:45,520
um can be solved following the existing

1045
00:39:45,520 --> 00:39:48,880
reduction basically by applying qft we

1046
00:39:48,880 --> 00:39:52,800
will only focus on slwe

1047
00:39:54,480 --> 00:39:57,520
okay so let's uh zoom in in a single

1048
00:39:57,520 --> 00:40:00,800
quantum sample which is this a n k y

1049
00:40:00,800 --> 00:40:03,119
so let's first look at what this cat y

1050
00:40:03,119 --> 00:40:04,319
is

1051
00:40:04,319 --> 00:40:05,200
so

1052
00:40:05,200 --> 00:40:06,160
um

1053
00:40:06,160 --> 00:40:08,400
so you can view this cat y as a vector

1054
00:40:08,400 --> 00:40:11,200
that is centered at uh s times a so if

1055
00:40:11,200 --> 00:40:13,760
you if you look at this uh function

1056
00:40:13,760 --> 00:40:15,920
this arrow function f you can see and

1057
00:40:15,920 --> 00:40:18,319
and also you flatten this uh the cat y

1058
00:40:18,319 --> 00:40:20,480
as a vector you will see it's actually a

1059
00:40:20,480 --> 00:40:21,520
vector

1060
00:40:21,520 --> 00:40:25,040
uh surrounded at s times a

1061
00:40:25,040 --> 00:40:27,040
so with this

1062
00:40:27,040 --> 00:40:28,000
a and

1063
00:40:28,000 --> 00:40:29,359
y

1064
00:40:29,359 --> 00:40:32,480
if you can learn s times a from this

1065
00:40:32,480 --> 00:40:35,280
quantum state with certainty let's say

1066
00:40:35,280 --> 00:40:37,920
then by collecting enough samples you

1067
00:40:37,920 --> 00:40:40,640
could easily recover the secret vector s

1068
00:40:40,640 --> 00:40:42,800
by just doing a gaussian elimination

1069
00:40:42,800 --> 00:40:45,200
because you just uh you learn a and you

1070
00:40:45,200 --> 00:40:48,319
learn s times a from cat y so you can

1071
00:40:48,319 --> 00:40:50,000
and by collecting enough linearly

1072
00:40:50,000 --> 00:40:52,480
independent uh such samples you can just

1073
00:40:52,480 --> 00:40:54,880
do gaussian elimination

1074
00:40:54,880 --> 00:40:57,760
it can just recover s but things won't

1075
00:40:57,760 --> 00:41:00,560
be that easy

1076
00:41:01,119 --> 00:41:04,640
so uh let's say for every value t

1077
00:41:04,640 --> 00:41:07,040
uh let's start by uh define this

1078
00:41:07,040 --> 00:41:10,319
notation cat ht to basically denote the

1079
00:41:10,319 --> 00:41:12,480
quantum state at center at t so in other

1080
00:41:12,480 --> 00:41:15,599
words it's basically uh this state the

1081
00:41:15,599 --> 00:41:18,560
state uh in the middle of the screen

1082
00:41:18,560 --> 00:41:20,880
with shift t

1083
00:41:20,880 --> 00:41:23,440
so the quantum state this quantum sample

1084
00:41:23,440 --> 00:41:25,520
which is the cat y we get

1085
00:41:25,520 --> 00:41:28,640
well equal to one of this uh cap h t

1086
00:41:28,640 --> 00:41:31,200
and if we know which cat httl is we know

1087
00:41:31,200 --> 00:41:34,800
that s times a must equal to that t so

1088
00:41:34,800 --> 00:41:36,640
let's also start with a very easy

1089
00:41:36,640 --> 00:41:39,119
example assuming all these h t are

1090
00:41:39,119 --> 00:41:40,480
orthogonal

1091
00:41:40,480 --> 00:41:43,119
and then given a y we can learn s times

1092
00:41:43,119 --> 00:41:45,520
a very easily right this is because the

1093
00:41:45,520 --> 00:41:48,240
arrow amplitude sorry this is simply

1094
00:41:48,240 --> 00:41:50,079
because um

1095
00:41:50,079 --> 00:41:51,040
we can

1096
00:41:51,040 --> 00:41:54,240
uh this error amplitude is known to the

1097
00:41:54,240 --> 00:41:56,960
adversary and one can simply construct

1098
00:41:56,960 --> 00:41:58,800
an efficient distinguisher for the set

1099
00:41:58,800 --> 00:42:00,640
of state ht

1100
00:42:00,640 --> 00:42:04,560
and therefore uh you can simply tell uh

1101
00:42:04,560 --> 00:42:07,599
this cat y equals to which h of t

1102
00:42:07,599 --> 00:42:10,000
but however this example is very ideal

1103
00:42:10,000 --> 00:42:12,000
the problem is because they are very

1104
00:42:12,000 --> 00:42:13,760
much on orthogonal

1105
00:42:13,760 --> 00:42:15,040
so the only case that they are

1106
00:42:15,040 --> 00:42:17,119
orthogonal is that the arrow is a fixed

1107
00:42:17,119 --> 00:42:19,200
shift in which case it's actually

1108
00:42:19,200 --> 00:42:21,680
equivalent to having no arrows so this

1109
00:42:21,680 --> 00:42:24,079
case will never happen

1110
00:42:24,079 --> 00:42:26,079
so indeed um

1111
00:42:26,079 --> 00:42:28,240
if we consider let's say just the ht and

1112
00:42:28,240 --> 00:42:31,760
ht plus one there's two adjacent vectors

1113
00:42:31,760 --> 00:42:34,079
and when the function f the arrow

1114
00:42:34,079 --> 00:42:36,640
function is kind of flat

1115
00:42:36,640 --> 00:42:39,359
uh then the overlap of these two quantum

1116
00:42:39,359 --> 00:42:41,520
states are very large and there's no way

1117
00:42:41,520 --> 00:42:44,000
for them to be offload so this is the

1118
00:42:44,000 --> 00:42:47,359
problem we need to deal with

1119
00:42:49,280 --> 00:42:51,119
so therefore we propose the following

1120
00:42:51,119 --> 00:42:52,640
way to distinguish the set of

1121
00:42:52,640 --> 00:42:55,200
non-orthogonal quantum state ht

1122
00:42:55,200 --> 00:42:57,359
so what we do is we first write down the

1123
00:42:57,359 --> 00:42:59,520
set of vector

1124
00:42:59,520 --> 00:43:01,599
in a matrix

1125
00:43:01,599 --> 00:43:03,920
we know that these vectors are not going

1126
00:43:03,920 --> 00:43:06,480
to be orthogonal anyway and our next

1127
00:43:06,480 --> 00:43:09,359
step is to simply apply a gram schmitt

1128
00:43:09,359 --> 00:43:12,640
and make them also normal

1129
00:43:12,640 --> 00:43:14,720
so this is what we do we apply this

1130
00:43:14,720 --> 00:43:17,359
normalized gram schmidt to make them

1131
00:43:17,359 --> 00:43:20,800
also normal bases here this ngs denotes

1132
00:43:20,800 --> 00:43:24,000
normalized gram schmidt

1133
00:43:25,040 --> 00:43:28,480
so then what we do is uh let's uh

1134
00:43:28,480 --> 00:43:30,640
basically we measure this state y under

1135
00:43:30,640 --> 00:43:33,440
this set of bases so note that since we

1136
00:43:33,440 --> 00:43:36,079
we know the function f which describes

1137
00:43:36,079 --> 00:43:40,160
this h t to h t plus q minus one and

1138
00:43:40,160 --> 00:43:42,079
also this measurement is actually over

1139
00:43:42,079 --> 00:43:44,960
log roughly log q bits this measurement

1140
00:43:44,960 --> 00:43:47,520
can be efficiently implemented

1141
00:43:47,520 --> 00:43:48,800
so we just

1142
00:43:48,800 --> 00:43:50,800
apply this measurement on the quantum

1143
00:43:50,800 --> 00:43:53,200
state cat y and let's say we get a

1144
00:43:53,200 --> 00:43:54,640
result z

1145
00:43:54,640 --> 00:43:58,319
and if z equals to zero what we learned

1146
00:43:58,319 --> 00:44:00,480
actually we didn't learn anything

1147
00:44:00,480 --> 00:44:02,079
because

1148
00:44:02,079 --> 00:44:05,040
that simply this cat y can be any of the

1149
00:44:05,040 --> 00:44:08,560
vector can be ht or h t plus one or or

1150
00:44:08,560 --> 00:44:10,800
even h t plus q minus one and we know

1151
00:44:10,800 --> 00:44:13,119
that all all these vectors overlap with

1152
00:44:13,119 --> 00:44:15,280
each other so therefore

1153
00:44:15,280 --> 00:44:18,960
uh regardless of uh what y is it always

1154
00:44:18,960 --> 00:44:21,280
overlap with the first vector h t so

1155
00:44:21,280 --> 00:44:23,280
therefore it it's always possible to see

1156
00:44:23,280 --> 00:44:25,359
the outcome being zero

1157
00:44:25,359 --> 00:44:28,400
so if zero z equals to zero there's no

1158
00:44:28,400 --> 00:44:29,839
information

1159
00:44:29,839 --> 00:44:32,319
and doesn't rule out anything but when

1160
00:44:32,319 --> 00:44:34,800
the outcome is one it is actually a very

1161
00:44:34,800 --> 00:44:37,040
interesting case we do learn some useful

1162
00:44:37,040 --> 00:44:39,599
information so what we what we know is

1163
00:44:39,599 --> 00:44:42,400
that s times a cannot be t

1164
00:44:42,400 --> 00:44:44,400
so why is that the case it's simply

1165
00:44:44,400 --> 00:44:48,240
because if uh this cat y equals to h t

1166
00:44:48,240 --> 00:44:50,960
then the result will always be zero

1167
00:44:50,960 --> 00:44:54,240
so if we see it's not zero that means

1168
00:44:54,240 --> 00:44:57,920
it's one then it's uh this s times a

1169
00:44:57,920 --> 00:44:59,680
cannot be t

1170
00:44:59,680 --> 00:45:01,920
so in this case we roll out one

1171
00:45:01,920 --> 00:45:04,319
possibility that is s times a cannot be

1172
00:45:04,319 --> 00:45:05,359
t

1173
00:45:05,359 --> 00:45:07,920
and similarly if the outcome is two we

1174
00:45:07,920 --> 00:45:10,560
know that s times a cannot be t and it

1175
00:45:10,560 --> 00:45:13,280
cannot be t plus one and this is uh

1176
00:45:13,280 --> 00:45:14,960
simply because

1177
00:45:14,960 --> 00:45:18,560
if y is ht or h t plus one then it is

1178
00:45:18,560 --> 00:45:21,280
actually in the span of the subspace

1179
00:45:21,280 --> 00:45:23,760
uh sorry in the subspace expanded by h t

1180
00:45:23,760 --> 00:45:25,200
and hd plus

1181
00:45:25,200 --> 00:45:27,440
and the outcome can only be zero or or

1182
00:45:27,440 --> 00:45:30,319
one and as we see the outcome is two it

1183
00:45:30,319 --> 00:45:34,000
is impossible and finally if the outcome

1184
00:45:34,000 --> 00:45:36,560
let's say is q minus 1 and with the same

1185
00:45:36,560 --> 00:45:37,680
reasoning

1186
00:45:37,680 --> 00:45:39,680
s times a cannot be

1187
00:45:39,680 --> 00:45:42,720
t cannot be t plus 1 cannot be t plus 2.

1188
00:45:42,720 --> 00:45:45,920
and the the only possible result is s

1189
00:45:45,920 --> 00:45:49,359
times a equals to t plus t minus one so

1190
00:45:49,359 --> 00:45:52,800
in that case we actually get a get a

1191
00:45:52,800 --> 00:45:55,440
equality and we roll out q minus one to

1192
00:45:55,440 --> 00:45:58,720
minus one possibility and learns s times

1193
00:45:58,720 --> 00:46:00,400
a with certainty

1194
00:46:00,400 --> 00:46:03,040
and this is what we call filter

1195
00:46:03,040 --> 00:46:05,200
and you can view this as a generalized

1196
00:46:05,200 --> 00:46:07,760
ambiguous state discrimination for a set

1197
00:46:07,760 --> 00:46:10,640
of quantum states and the one and

1198
00:46:10,640 --> 00:46:13,119
and when the outcome is q minus one it

1199
00:46:13,119 --> 00:46:15,280
gives you an accurate answer without any

1200
00:46:15,280 --> 00:46:17,920
arrow otherwise it just tells you it

1201
00:46:17,920 --> 00:46:20,400
doesn't know and we will uh

1202
00:46:20,400 --> 00:46:22,240
we will not use the information when it

1203
00:46:22,240 --> 00:46:25,280
doesn't know anything about the the

1204
00:46:25,280 --> 00:46:27,359
quantum state line

1205
00:46:27,359 --> 00:46:30,319
so this is the general uh framework of

1206
00:46:30,319 --> 00:46:33,680
filtering so let's uh proceed

1207
00:46:33,680 --> 00:46:37,040
so basically for fixed t here t is kind

1208
00:46:37,040 --> 00:46:40,079
of uh we will pick the t it's maybe uh

1209
00:46:40,079 --> 00:46:41,920
independent of the y

1210
00:46:41,920 --> 00:46:43,520
so if t

1211
00:46:43,520 --> 00:46:46,240
plus q is not equals to s times a then

1212
00:46:46,240 --> 00:46:48,720
the outcome will never be q minus one

1213
00:46:48,720 --> 00:46:51,920
since this cat y uh is in the span of

1214
00:46:51,920 --> 00:46:53,839
the first q minus one vector so the

1215
00:46:53,839 --> 00:46:55,920
outcome will always be the first two

1216
00:46:55,920 --> 00:46:58,079
minus one outcomes

1217
00:46:58,079 --> 00:47:00,480
so if t plus q minus one equals to s

1218
00:47:00,480 --> 00:47:02,800
times a we have some chance to see the

1219
00:47:02,800 --> 00:47:05,839
outcome q minus one but not always since

1220
00:47:05,839 --> 00:47:07,920
we know that every vector overlap with

1221
00:47:07,920 --> 00:47:10,800
each other so the question is

1222
00:47:10,800 --> 00:47:12,160
um

1223
00:47:12,160 --> 00:47:14,319
what is the problem what is the

1224
00:47:14,319 --> 00:47:16,480
probability that the measurement outcome

1225
00:47:16,480 --> 00:47:19,680
is q minus one when this t equals a t

1226
00:47:19,680 --> 00:47:22,720
minus one equals to s times a

1227
00:47:22,720 --> 00:47:25,040
and we show that the probability

1228
00:47:25,040 --> 00:47:27,280
actually polynomially depends on the

1229
00:47:27,280 --> 00:47:30,079
inverse of the dft of f which is the

1230
00:47:30,079 --> 00:47:31,839
quantity we mentioned in the theorem

1231
00:47:31,839 --> 00:47:33,680
statement before

1232
00:47:33,680 --> 00:47:35,920
and this quantity dft of f

1233
00:47:35,920 --> 00:47:37,200
also

1234
00:47:37,200 --> 00:47:40,800
uh depends on the uh the shortest vector

1235
00:47:40,800 --> 00:47:43,520
in the above gram-schmidt uh process

1236
00:47:43,520 --> 00:47:46,000
without normalization in other words uh

1237
00:47:46,000 --> 00:47:48,160
here we put normalization but it

1238
00:47:48,160 --> 00:47:49,680
actually depends on the vector without

1239
00:47:49,680 --> 00:47:50,880
normalization

1240
00:47:50,880 --> 00:47:52,480
and

1241
00:47:52,480 --> 00:47:54,319
so i'm not going to uh into too many

1242
00:47:54,319 --> 00:47:56,480
details but the relation of the forward

1243
00:47:56,480 --> 00:47:57,520
transform

1244
00:47:57,520 --> 00:47:59,599
uh actually comes from the fact that

1245
00:47:59,599 --> 00:48:01,119
this matrix we're going to graham

1246
00:48:01,119 --> 00:48:03,520
schmidt is actually a circular matrix so

1247
00:48:03,520 --> 00:48:06,319
here's a example we can have a closer

1248
00:48:06,319 --> 00:48:08,640
look so this 0 is actually can be

1249
00:48:08,640 --> 00:48:12,319
written as e0 e1 to eq minus 1

1250
00:48:12,319 --> 00:48:14,640
and similarly for h1 by the definition

1251
00:48:14,640 --> 00:48:17,280
it's simply a shift of the first vector

1252
00:48:17,280 --> 00:48:20,880
by one index and similarly for h2

1253
00:48:20,880 --> 00:48:22,960
so if you look at that it's indeed a

1254
00:48:22,960 --> 00:48:25,280
circular matrix and then we take

1255
00:48:25,280 --> 00:48:27,040
advantage of this being a circular

1256
00:48:27,040 --> 00:48:30,079
matrix and analyze the shortest vector

1257
00:48:30,079 --> 00:48:34,760
after doing drum schmidt on this matrix

1258
00:48:34,960 --> 00:48:36,800
so here are some examples of the

1259
00:48:36,800 --> 00:48:38,400
distribution

1260
00:48:38,400 --> 00:48:40,000
and their dft

1261
00:48:40,000 --> 00:48:41,359
so uh

1262
00:48:41,359 --> 00:48:43,280
i think i probably don't have enough

1263
00:48:43,280 --> 00:48:45,359
time to explain all the pictures but i

1264
00:48:45,359 --> 00:48:47,440
would say uh

1265
00:48:47,440 --> 00:48:50,640
let me change it to the laser yes so

1266
00:48:50,640 --> 00:48:52,960
basically for gaussian uh

1267
00:48:52,960 --> 00:48:55,520
we see that the algorithm depends on the

1268
00:48:55,520 --> 00:48:57,520
the dft which for this case is

1269
00:48:57,520 --> 00:48:59,599
negligible it's more and depends on the

1270
00:48:59,599 --> 00:49:01,839
gs length which is negligible it's more

1271
00:49:01,839 --> 00:49:04,800
so we don't know how to solve slwe with

1272
00:49:04,800 --> 00:49:06,640
gaussian distribution

1273
00:49:06,640 --> 00:49:10,079
but for dft of uh but for a laplacian

1274
00:49:10,079 --> 00:49:11,599
bonded uniform

1275
00:49:11,599 --> 00:49:13,760
we have a polynomial time algorithm

1276
00:49:13,760 --> 00:49:15,680
although you see it looks more but it's

1277
00:49:15,680 --> 00:49:18,160
indeed non-negligible and this is also

1278
00:49:18,160 --> 00:49:20,000
the the source the shortest vector is

1279
00:49:20,000 --> 00:49:22,319
also non-negligible and same for bonded

1280
00:49:22,319 --> 00:49:24,800
uniform distribution here

1281
00:49:24,800 --> 00:49:27,119
right and the last one is actually for

1282
00:49:27,119 --> 00:49:28,480
uh doing

1283
00:49:28,480 --> 00:49:31,920
uh the cis problem it's actually this uh

1284
00:49:31,920 --> 00:49:35,520
uh this f is actually the the dft of uh

1285
00:49:35,520 --> 00:49:37,040
the cis distribution which is the

1286
00:49:37,040 --> 00:49:39,040
boundary uniform distribution

1287
00:49:39,040 --> 00:49:41,599
and i'm not going to expand too much

1288
00:49:41,599 --> 00:49:42,800
here

1289
00:49:42,800 --> 00:49:46,160
all right so um

1290
00:49:46,160 --> 00:49:48,720
all right so let's quickly uh recap the

1291
00:49:48,720 --> 00:49:51,280
algorithm so given a quantum sample what

1292
00:49:51,280 --> 00:49:53,040
do we do

1293
00:49:53,040 --> 00:49:56,000
we first pick a random t and we

1294
00:49:56,000 --> 00:49:58,319
we hope s times a will equals to t minus

1295
00:49:58,319 --> 00:50:00,640
one so this is the first guess and then

1296
00:50:00,640 --> 00:50:02,720
we define the measurement which is the

1297
00:50:02,720 --> 00:50:04,319
measurement uh

1298
00:50:04,319 --> 00:50:06,160
uh defined by this uh normalized

1299
00:50:06,160 --> 00:50:07,359
parameters

1300
00:50:07,359 --> 00:50:09,440
and let's say after applying this

1301
00:50:09,440 --> 00:50:12,160
measurement on y we get the result z

1302
00:50:12,160 --> 00:50:14,319
then there are two possibilities one is

1303
00:50:14,319 --> 00:50:17,440
that uh v is not equal to q minus one

1304
00:50:17,440 --> 00:50:19,760
which is not the last uh possible

1305
00:50:19,760 --> 00:50:21,760
measure of the result then we simply

1306
00:50:21,760 --> 00:50:24,000
skip because we don't know anything with

1307
00:50:24,000 --> 00:50:26,640
certainty and if z equals to q minus one

1308
00:50:26,640 --> 00:50:28,960
we know that s times a equals to t minus

1309
00:50:28,960 --> 00:50:32,880
one and we got one equality

1310
00:50:33,440 --> 00:50:35,760
so therefore when the equals to q minus

1311
00:50:35,760 --> 00:50:38,319
one we get it correctly and with roughly

1312
00:50:38,319 --> 00:50:40,559
incorrect guess we can recover s by

1313
00:50:40,559 --> 00:50:42,480
simply doing gaussian elimination and

1314
00:50:42,480 --> 00:50:44,880
our work basically shows that

1315
00:50:44,880 --> 00:50:47,839
this uh and correct guess happens with

1316
00:50:47,839 --> 00:50:50,640
inverse polynomial chess

1317
00:50:50,640 --> 00:50:52,640
so therefore we conclude our result by

1318
00:50:52,640 --> 00:50:54,800
saying there is a polynomial time

1319
00:50:54,800 --> 00:50:56,960
quantum algorithm that finds the secret

1320
00:50:56,960 --> 00:51:00,240
vector if the dft of f is non-negligible

1321
00:51:00,240 --> 00:51:02,640
and m is a if sufficiently large

1322
00:51:02,640 --> 00:51:04,319
polynomial

1323
00:51:04,319 --> 00:51:06,000
right

1324
00:51:06,000 --> 00:51:09,520
okay so let's uh uh sorry let me say one

1325
00:51:09,520 --> 00:51:11,839
one more sentence so i would like to

1326
00:51:11,839 --> 00:51:13,680
discuss one frequently asked question

1327
00:51:13,680 --> 00:51:16,880
that is why this does not solve svp so

1328
00:51:16,880 --> 00:51:18,240
there are basically two different

1329
00:51:18,240 --> 00:51:20,720
directions one is from svp to cis one is

1330
00:51:20,720 --> 00:51:23,440
from svp to lwe so for the first

1331
00:51:23,440 --> 00:51:25,920
direction because our algorithm does not

1332
00:51:25,920 --> 00:51:28,160
give a shot bound on l2 norm and the

1333
00:51:28,160 --> 00:51:30,720
matrix is super wide so this

1334
00:51:30,720 --> 00:51:32,880
route doesn't work and for the next one

1335
00:51:32,880 --> 00:51:36,240
we know that our algorithm for slwe does

1336
00:51:36,240 --> 00:51:38,319
not work for uh discrete gaussian so

1337
00:51:38,319 --> 00:51:40,319
that also fails the second possible

1338
00:51:40,319 --> 00:51:42,960
round but there might be other way

1339
00:51:42,960 --> 00:51:45,280
which i leave it as a open

1340
00:51:45,280 --> 00:51:46,160
uh

1341
00:51:46,160 --> 00:51:47,760
question and interest direction for

1342
00:51:47,760 --> 00:51:50,079
future research so with that i conclude

1343
00:51:50,079 --> 00:51:52,240
my talk thank you for your time

1344
00:51:52,240 --> 00:51:53,050
thank you very much

1345
00:51:53,050 --> 00:51:56,239
[Applause]

1346
00:51:58,800 --> 00:52:03,240
we have time for one short question

1347
00:52:05,599 --> 00:52:06,880
okay let me

1348
00:52:06,880 --> 00:52:09,599
stop sharing

1349
00:52:09,760 --> 00:52:11,200
okay if there are no questions then

1350
00:52:11,200 --> 00:52:13,119
let's thank the speaker again

1351
00:52:13,119 --> 00:52:16,359
thank you

1352
00:52:34,960 --> 00:52:36,640
okay and the last speaker of this

1353
00:52:36,640 --> 00:52:39,359
session is benjamin vasilowski

1354
00:52:39,359 --> 00:52:40,720
we'll talk about

1355
00:52:40,720 --> 00:52:42,640
endomorphisms

1356
00:52:42,640 --> 00:52:44,640
thank you so yes i'm going to talk about

1357
00:52:44,640 --> 00:52:46,400
orientations and the super singular

1358
00:52:46,400 --> 00:52:48,559
endomorphism ring problem and to make

1359
00:52:48,559 --> 00:52:49,839
sure that everyone in the room has

1360
00:52:49,839 --> 00:52:51,280
something pretty to look at while i

1361
00:52:51,280 --> 00:52:53,200
ramble about isotonies you're going to

1362
00:52:53,200 --> 00:52:55,440
find a few pictures of lyon where as a

1363
00:52:55,440 --> 00:52:57,599
reminder eurocrypt is happening next

1364
00:52:57,599 --> 00:53:00,400
year

1365
00:53:00,400 --> 00:53:02,240
so first i'm going to introduce these

1366
00:53:02,240 --> 00:53:03,839
objects that i'm going to use in this

1367
00:53:03,839 --> 00:53:06,000
talk um super singular elliptic curves

1368
00:53:06,000 --> 00:53:09,839
hysogenesis antimorphisms what are these

1369
00:53:09,839 --> 00:53:11,440
first elliptic curves

1370
00:53:11,440 --> 00:53:13,119
i'm sure many of you are

1371
00:53:13,119 --> 00:53:14,480
of you are already familiar with the

1372
00:53:14,480 --> 00:53:16,800
notion of an elliptic curve um the

1373
00:53:16,800 --> 00:53:18,800
technical details of what analytic curve

1374
00:53:18,800 --> 00:53:20,319
is are not going to be very relevant in

1375
00:53:20,319 --> 00:53:22,720
the talk but just quickly it's a

1376
00:53:22,720 --> 00:53:24,960
geometric object in cryptography it's

1377
00:53:24,960 --> 00:53:27,040
typically defined over a finite field it

1378
00:53:27,040 --> 00:53:28,800
is the set of solutions of an equation

1379
00:53:28,800 --> 00:53:31,119
of this form do i have a pointer oh it's

1380
00:53:31,119 --> 00:53:32,960
very weak

1381
00:53:32,960 --> 00:53:34,880
uh y squared equals x cubed plus ax plus

1382
00:53:34,880 --> 00:53:36,800
b so that is a curve

1383
00:53:36,800 --> 00:53:38,319
an algebraic curve

1384
00:53:38,319 --> 00:53:40,079
and it's not just a curve it's also a

1385
00:53:40,079 --> 00:53:42,559
group it has a group that is written

1386
00:53:42,559 --> 00:53:44,800
typically additively

1387
00:53:44,800 --> 00:53:47,359
and well these are the basic objects now

1388
00:53:47,359 --> 00:53:50,079
what is an asotony an isotony is a map

1389
00:53:50,079 --> 00:53:52,480
between two curves now sargon is sends

1390
00:53:52,480 --> 00:53:55,359
points from one curve here e to the

1391
00:53:55,359 --> 00:53:58,480
other curve here f it's not just any map

1392
00:53:58,480 --> 00:53:59,920
it's a map that preserves certain

1393
00:53:59,920 --> 00:54:02,079
structures in particular you want it to

1394
00:54:02,079 --> 00:54:04,880
be a group homomorphism

1395
00:54:04,880 --> 00:54:05,839
so

1396
00:54:05,839 --> 00:54:08,000
elliptic curves isogenes and now what

1397
00:54:08,000 --> 00:54:10,079
are endomorphisms and the morphisms are

1398
00:54:10,079 --> 00:54:12,160
a particular kind of misogyny they are

1399
00:54:12,160 --> 00:54:14,480
isogenes from a curve to itself it's

1400
00:54:14,480 --> 00:54:16,079
just a restriction on the fact that they

1401
00:54:16,079 --> 00:54:18,319
have same domain and codomain so now if

1402
00:54:18,319 --> 00:54:20,960
you fix a curve and look at all of its

1403
00:54:20,960 --> 00:54:22,960
endomorphisms together they form a

1404
00:54:22,960 --> 00:54:24,800
structure which we call the endomorphism

1405
00:54:24,800 --> 00:54:27,359
ring it is a ring in the algebraic sense

1406
00:54:27,359 --> 00:54:29,520
you do have two operations on it an

1407
00:54:29,520 --> 00:54:31,440
addition and a multiplication the

1408
00:54:31,440 --> 00:54:33,920
addition is given point wise by the

1409
00:54:33,920 --> 00:54:35,839
simple rule and the multiplication

1410
00:54:35,839 --> 00:54:38,000
corresponds to composition

1411
00:54:38,000 --> 00:54:39,760
so from this definition you can guess

1412
00:54:39,760 --> 00:54:41,440
that maybe the endomorphism ring is not

1413
00:54:41,440 --> 00:54:43,280
a commutative ring because composition

1414
00:54:43,280 --> 00:54:45,040
of maps is not typically a commutative

1415
00:54:45,040 --> 00:54:46,720
operation

1416
00:54:46,720 --> 00:54:49,959
thank you

1417
00:54:52,960 --> 00:54:55,119
uh yeah not much well

1418
00:54:55,119 --> 00:54:57,200
okay i'm gonna try not to use the

1419
00:54:57,200 --> 00:54:58,880
pointer too much or maybe i can use the

1420
00:54:58,880 --> 00:54:59,920
mouse

1421
00:54:59,920 --> 00:55:01,520
do you see it yeah okay i'm gonna use

1422
00:55:01,520 --> 00:55:02,480
that

1423
00:55:02,480 --> 00:55:04,799
um okay

1424
00:55:04,799 --> 00:55:05,520
so

1425
00:55:05,520 --> 00:55:07,520
you may wonder oh but no it's not

1426
00:55:07,520 --> 00:55:09,359
connected to the i'm gonna use the other

1427
00:55:09,359 --> 00:55:10,079
one

1428
00:55:10,079 --> 00:55:10,960
okay

1429
00:55:10,960 --> 00:55:12,880
uh you may wonder what is the structure

1430
00:55:12,880 --> 00:55:15,440
of the endomorphism ring well uh first

1431
00:55:15,440 --> 00:55:17,040
very simple thing we can observe is that

1432
00:55:17,040 --> 00:55:18,960
it's a ring that contains the ring of

1433
00:55:18,960 --> 00:55:21,280
integers as a sub-ring and that

1434
00:55:21,280 --> 00:55:23,440
containment of the integers inside the

1435
00:55:23,440 --> 00:55:25,520
endomorphism ring is what we typically

1436
00:55:25,520 --> 00:55:27,359
know as scalar multiplication if you

1437
00:55:27,359 --> 00:55:29,359
give me an integer m there is an

1438
00:55:29,359 --> 00:55:31,200
endomorphism that corresponds to

1439
00:55:31,200 --> 00:55:34,400
multiplying points by the integer m

1440
00:55:34,400 --> 00:55:36,160
but we know much more than that we know

1441
00:55:36,160 --> 00:55:37,680
that if we focus on the additive

1442
00:55:37,680 --> 00:55:39,520
structure of the endomorphism ring what

1443
00:55:39,520 --> 00:55:41,520
we get is always a lattice it's a

1444
00:55:41,520 --> 00:55:44,960
lattice of dimension either two or four

1445
00:55:44,960 --> 00:55:47,040
so two or four which is it it can be

1446
00:55:47,040 --> 00:55:48,799
either but the case that is going to be

1447
00:55:48,799 --> 00:55:50,880
interesting for us and in general for uh

1448
00:55:50,880 --> 00:55:53,520
le for isotony based cryptography is the

1449
00:55:53,520 --> 00:55:55,359
dimension 4 case that is what we call

1450
00:55:55,359 --> 00:55:57,200
the super singular case

1451
00:55:57,200 --> 00:55:59,359
we say that an elliptic curve e is super

1452
00:55:59,359 --> 00:56:01,920
singular if its endomorphism ring is a

1453
00:56:01,920 --> 00:56:05,040
lattice of dimension four

1454
00:56:05,040 --> 00:56:06,960
so from that definition naturally

1455
00:56:06,960 --> 00:56:09,280
follows a computational question

1456
00:56:09,280 --> 00:56:11,440
known as the endomorphism ring problem

1457
00:56:11,440 --> 00:56:13,599
which i'm going to write and drink if

1458
00:56:13,599 --> 00:56:15,119
you are given a super singular elliptic

1459
00:56:15,119 --> 00:56:18,240
curve e you may ask can you compute its

1460
00:56:18,240 --> 00:56:20,559
endomorphism ring so what do what do i

1461
00:56:20,559 --> 00:56:22,480
mean by computing the endomorphism ring

1462
00:56:22,480 --> 00:56:24,079
if i give you a super singular elliptic

1463
00:56:24,079 --> 00:56:25,440
curve e you already know that the

1464
00:56:25,440 --> 00:56:26,799
endomorphism ring is the lattice of

1465
00:56:26,799 --> 00:56:29,440
dimension four and what i mean by

1466
00:56:29,440 --> 00:56:31,599
compute it i mean can you find a basis

1467
00:56:31,599 --> 00:56:33,440
can you find four endomorphisms that

1468
00:56:33,440 --> 00:56:35,280
generate all the others

1469
00:56:35,280 --> 00:56:36,720
and that is the endomorphism ring

1470
00:56:36,720 --> 00:56:38,480
problem

1471
00:56:38,480 --> 00:56:40,240
so it's a problem that plays a central

1472
00:56:40,240 --> 00:56:42,240
role in isagenie based cryptography it

1473
00:56:42,240 --> 00:56:43,520
has recently been proved to be

1474
00:56:43,520 --> 00:56:45,839
equivalent to another problem known as

1475
00:56:45,839 --> 00:56:48,079
the isotonic path problem which is the

1476
00:56:48,079 --> 00:56:50,000
problem if i give you two elliptic

1477
00:56:50,000 --> 00:56:52,240
curves can you find a nasogeny between

1478
00:56:52,240 --> 00:56:53,119
them

1479
00:56:53,119 --> 00:56:55,200
and this problem is

1480
00:56:55,200 --> 00:56:57,040
the problem that gives it its name to a

1481
00:56:57,040 --> 00:56:58,240
certainly based cryptography

1482
00:56:58,240 --> 00:56:59,839
isolate-based cryptography is a

1483
00:56:59,839 --> 00:57:01,839
certainly based on the idea that finding

1484
00:57:01,839 --> 00:57:04,240
these isogenes is difficult

1485
00:57:04,240 --> 00:57:05,040
um

1486
00:57:05,040 --> 00:57:06,720
so what does it mean to base

1487
00:57:06,720 --> 00:57:08,559
cryptosystems on these problems it means

1488
00:57:08,559 --> 00:57:10,480
that you have computational reductions

1489
00:57:10,480 --> 00:57:11,760
between them

1490
00:57:11,760 --> 00:57:14,400
you can show that often cryptosystems

1491
00:57:14,400 --> 00:57:17,119
that are called isotonic based have a

1492
00:57:17,119 --> 00:57:19,040
security that reduces to these problems

1493
00:57:19,040 --> 00:57:21,680
and reciprocally but less often you have

1494
00:57:21,680 --> 00:57:23,200
reductions in the other direction that

1495
00:57:23,200 --> 00:57:25,040
would be security proof spring that if

1496
00:57:25,040 --> 00:57:27,040
these problems entering an isotonic path

1497
00:57:27,040 --> 00:57:29,119
are indeed hard then the cryptosystems

1498
00:57:29,119 --> 00:57:30,480
are secure

1499
00:57:30,480 --> 00:57:32,880
so reductions often in one direction

1500
00:57:32,880 --> 00:57:34,319
sometimes in the other direction it

1501
00:57:34,319 --> 00:57:36,400
doesn't feel like a very sharp picture

1502
00:57:36,400 --> 00:57:37,839
it doesn't feel like we understand the

1503
00:57:37,839 --> 00:57:39,680
situation very well

1504
00:57:39,680 --> 00:57:41,839
and in fact in practice what happens is

1505
00:57:41,839 --> 00:57:43,920
that we design cryptosystems and relate

1506
00:57:43,920 --> 00:57:46,000
the security of these cryptosystems to

1507
00:57:46,000 --> 00:57:47,839
other computational problems that feel a

1508
00:57:47,839 --> 00:57:50,000
bit more convenient to work with

1509
00:57:50,000 --> 00:57:52,160
problems known as the uber isotony

1510
00:57:52,160 --> 00:57:54,559
problem vectorization the oriented

1511
00:57:54,559 --> 00:57:56,720
difficult problem so we have a lot of

1512
00:57:56,720 --> 00:57:58,240
problems and the picture doesn't feel

1513
00:57:58,240 --> 00:57:59,119
very

1514
00:57:59,119 --> 00:58:01,760
sharp and the goal of this project and

1515
00:58:01,760 --> 00:58:04,240
of this talk is to get a sharper picture

1516
00:58:04,240 --> 00:58:06,319
of the situation what are these problems

1517
00:58:06,319 --> 00:58:08,240
which are equivalent which are harder

1518
00:58:08,240 --> 00:58:10,640
which are simpler which relate to which

1519
00:58:10,640 --> 00:58:13,520
cryptosystems

1520
00:58:13,760 --> 00:58:15,280
so to talk about that i need to

1521
00:58:15,280 --> 00:58:16,960
introduce the notion of an orientation

1522
00:58:16,960 --> 00:58:18,640
which plays a central role in many of

1523
00:58:18,640 --> 00:58:21,680
these problems that i introduced

1524
00:58:21,680 --> 00:58:24,160
so as i said the endomorphism ring is a

1525
00:58:24,160 --> 00:58:27,359
lattice of dimension four

1526
00:58:27,359 --> 00:58:30,319
now if you pick any endomorphism of your

1527
00:58:30,319 --> 00:58:32,160
elliptic curve any that is not too

1528
00:58:32,160 --> 00:58:34,319
simple so you don't want to work with

1529
00:58:34,319 --> 00:58:35,680
alpha that is just a scalar

1530
00:58:35,680 --> 00:58:37,359
multiplication

1531
00:58:37,359 --> 00:58:39,520
then you pick this endomorphism alpha

1532
00:58:39,520 --> 00:58:41,280
and you can look at the ring it

1533
00:58:41,280 --> 00:58:42,480
generates

1534
00:58:42,480 --> 00:58:44,480
what is the smallest sub ring of the

1535
00:58:44,480 --> 00:58:47,040
endomorphism ring that contains alpha it

1536
00:58:47,040 --> 00:58:47,760
is

1537
00:58:47,760 --> 00:58:50,559
written as z brackets alpha for the ring

1538
00:58:50,559 --> 00:58:53,599
that contains all the integers and alpha

1539
00:58:53,599 --> 00:58:56,000
and it is always a sub ring of dimension

1540
00:58:56,000 --> 00:58:58,240
two

1541
00:58:58,559 --> 00:59:00,079
the sub ring of dimension two in other

1542
00:59:00,079 --> 00:59:02,079
words it's what we call a quadratic ring

1543
00:59:02,079 --> 00:59:03,920
or a ring of this form it's a quotient

1544
00:59:03,920 --> 00:59:06,079
of the

1545
00:59:06,079 --> 00:59:08,480
of the ring of integer polynomials by a

1546
00:59:08,480 --> 00:59:11,599
quadratic polynomial

1547
00:59:11,599 --> 00:59:12,559
so

1548
00:59:12,559 --> 00:59:14,480
the endomorphism ring has dimension four

1549
00:59:14,480 --> 00:59:16,240
these are dimension two sub rings you

1550
00:59:16,240 --> 00:59:18,799
have many of them what you can do is fix

1551
00:59:18,799 --> 00:59:21,920
a priory a quadratic ring o and wonder

1552
00:59:21,920 --> 00:59:24,319
how many copies of o do you find in your

1553
00:59:24,319 --> 00:59:26,559
endomorphism rings can you embed this

1554
00:59:26,559 --> 00:59:28,720
ring inside the endomorphism break

1555
00:59:28,720 --> 00:59:30,319
and that would be an orientation an

1556
00:59:30,319 --> 00:59:33,119
orientation is an injection of your

1557
00:59:33,119 --> 00:59:36,000
quadratic ring o inside the endomorphism

1558
00:59:36,000 --> 00:59:37,520
ring and you may have many ways to do

1559
00:59:37,520 --> 00:59:39,119
that each of them provides a different

1560
00:59:39,119 --> 00:59:42,400
orientation of your elliptic curve

1561
00:59:42,400 --> 00:59:45,680
now an oriented curve is a pair of a

1562
00:59:45,680 --> 00:59:47,760
curve together with an orientation of

1563
00:59:47,760 --> 00:59:48,720
the curve

1564
00:59:48,720 --> 00:59:50,559
so it's more structured than just an

1565
00:59:50,559 --> 00:59:52,000
elliptic curve it's an elliptic curve

1566
00:59:52,000 --> 00:59:53,920
with extra information

1567
00:59:53,920 --> 00:59:55,680
it's what we call an oriented elliptic

1568
00:59:55,680 --> 00:59:57,760
curve and it happens that

1569
00:59:57,760 --> 01:00:00,160
if you fix the quadratic ring o there

1570
01:00:00,160 --> 01:00:03,040
are only finitely many o oriented

1571
01:00:03,040 --> 01:00:06,000
elliptic curves you can write this set

1572
01:00:06,000 --> 01:00:08,000
i'm going to write it l o of p it's the

1573
01:00:08,000 --> 01:00:10,960
finite set of o o o oriented elliptic

1574
01:00:10,960 --> 01:00:12,079
curves

1575
01:00:12,079 --> 01:00:15,839
over a fixed field of course

1576
01:00:16,960 --> 01:00:18,559
okay so why do we look at these

1577
01:00:18,559 --> 01:00:20,480
structures these orientations it seems

1578
01:00:20,480 --> 01:00:22,240
like ellipticers were complicated enough

1579
01:00:22,240 --> 01:00:24,319
already now we add more structure

1580
01:00:24,319 --> 01:00:26,319
well it's interesting because each

1581
01:00:26,319 --> 01:00:29,440
quadratic ring comes with a finite

1582
01:00:29,440 --> 01:00:30,720
billion group

1583
01:00:30,720 --> 01:00:32,720
the ideal class group of the ring which

1584
01:00:32,720 --> 01:00:35,440
we write like this cl of o

1585
01:00:35,440 --> 01:00:38,319
and this finite abelian group acts on

1586
01:00:38,319 --> 01:00:41,200
the set of all oriented elliptic curves

1587
01:00:41,200 --> 01:00:43,200
what do i mean by that i mean we have a

1588
01:00:43,200 --> 01:00:44,960
group action

1589
01:00:44,960 --> 01:00:47,839
which is an operation here written star

1590
01:00:47,839 --> 01:00:49,599
it's an operation that takes as input a

1591
01:00:49,599 --> 01:00:52,240
group element here a and an oriented

1592
01:00:52,240 --> 01:00:54,400
elliptic curve here e and constructs a

1593
01:00:54,400 --> 01:00:57,200
new one written a star e so for it to be

1594
01:00:57,200 --> 01:00:59,520
a group action we require two open two

1595
01:00:59,520 --> 01:01:01,119
properties it is compatible with the

1596
01:01:01,119 --> 01:01:04,400
group operation so letting

1597
01:01:04,400 --> 01:01:06,240
a first element a act then another

1598
01:01:06,240 --> 01:01:08,240
element b act is the same as taking the

1599
01:01:08,240 --> 01:01:10,720
product and let's this product act

1600
01:01:10,720 --> 01:01:12,640
the second property we need is identity

1601
01:01:12,640 --> 01:01:15,040
the trivial element of the group

1602
01:01:15,040 --> 01:01:17,920
acts trivially

1603
01:01:18,640 --> 01:01:19,599
so

1604
01:01:19,599 --> 01:01:21,040
these actions are interesting because

1605
01:01:21,040 --> 01:01:23,440
you can build cryptosystems out of it

1606
01:01:23,440 --> 01:01:25,839
and one example is the seaside crypto

1607
01:01:25,839 --> 01:01:27,440
systems

1608
01:01:27,440 --> 01:01:29,760
so seaside is not the first crypto

1609
01:01:29,760 --> 01:01:32,160
system that is based on this idea but at

1610
01:01:32,160 --> 01:01:33,839
least it's the first that instantiate

1611
01:01:33,839 --> 01:01:35,599
this idea in the context of super

1612
01:01:35,599 --> 01:01:37,280
singular elliptic curves so here's

1613
01:01:37,280 --> 01:01:38,720
quickly how it works

1614
01:01:38,720 --> 01:01:41,200
it is a key exchange very similar to the

1615
01:01:41,200 --> 01:01:43,599
diffie-hellman k exchange in fact the d

1616
01:01:43,599 --> 01:01:46,640
and h in c side correspond to

1617
01:01:46,640 --> 01:01:48,319
diffie and hellman

1618
01:01:48,319 --> 01:01:49,920
so it's a key exchange between alice and

1619
01:01:49,920 --> 01:01:51,440
bob and the first thing they do is

1620
01:01:51,440 --> 01:01:53,839
establish a setup in public setup

1621
01:01:53,839 --> 01:01:55,359
everyone knows about it

1622
01:01:55,359 --> 01:01:58,000
they have to choose a reference oriented

1623
01:01:58,000 --> 01:01:59,440
elliptic curve so they pick an

1624
01:01:59,440 --> 01:02:02,559
elliptical e0 everyone knows about it

1625
01:02:02,559 --> 01:02:04,799
and in the specific context of seaside

1626
01:02:04,799 --> 01:02:06,960
they don't use arbitrary quadratic rings

1627
01:02:06,960 --> 01:02:08,720
but this particular ring zero joint

1628
01:02:08,720 --> 01:02:10,240
squared minus p

1629
01:02:10,240 --> 01:02:12,160
but you can think of this protocol in

1630
01:02:12,160 --> 01:02:14,079
more generality and just imagine that

1631
01:02:14,079 --> 01:02:16,880
it's an arbitrary orientation

1632
01:02:16,880 --> 01:02:19,280
so what else does she samples a secret

1633
01:02:19,280 --> 01:02:22,880
group element lets it act on e0 and

1634
01:02:22,880 --> 01:02:24,559
sends the result to bob

1635
01:02:24,559 --> 01:02:27,119
now bob can do the same thing he samples

1636
01:02:27,119 --> 01:02:28,640
a secret element b

1637
01:02:28,640 --> 01:02:31,200
lets it act on e0 and sends the result

1638
01:02:31,200 --> 01:02:32,559
to alice

1639
01:02:32,559 --> 01:02:36,079
and now alice can take what bob sent her

1640
01:02:36,079 --> 01:02:37,920
and let her own secret that act on it

1641
01:02:37,920 --> 01:02:40,160
and bob can do the same so this is

1642
01:02:40,160 --> 01:02:41,839
extremely similar to the fireman who

1643
01:02:41,839 --> 01:02:42,640
you've

1644
01:02:42,640 --> 01:02:44,960
just replaced exponentiation by letting

1645
01:02:44,960 --> 01:02:46,839
a group act on the

1646
01:02:46,839 --> 01:02:50,160
elements the main difference uh is that

1647
01:02:50,160 --> 01:02:51,359
well

1648
01:02:51,359 --> 01:02:52,720
the elements that are transmitted are

1649
01:02:52,720 --> 01:02:54,559
not group elements they are

1650
01:02:54,559 --> 01:02:56,880
they live in a space this the set of all

1651
01:02:56,880 --> 01:02:58,480
uh oriented ellipticals which does not

1652
01:02:58,480 --> 01:03:00,160
have a group structure and makes that

1653
01:03:00,160 --> 01:03:01,839
makes it resistant against quantum

1654
01:03:01,839 --> 01:03:04,000
attacks

1655
01:03:04,000 --> 01:03:05,200
so

1656
01:03:05,200 --> 01:03:07,839
is it actually secure uh you can look at

1657
01:03:07,839 --> 01:03:09,760
a problem similar to

1658
01:03:09,760 --> 01:03:11,119
the

1659
01:03:11,119 --> 01:03:13,200
okay i mean i should have said that

1660
01:03:13,200 --> 01:03:15,599
earlier the two curves you get from

1661
01:03:15,599 --> 01:03:17,280
alice and bob's side actually coincide

1662
01:03:17,280 --> 01:03:20,000
by the properties of the group action

1663
01:03:20,000 --> 01:03:21,039
um

1664
01:03:21,039 --> 01:03:22,880
if someone is spying on the network they

1665
01:03:22,880 --> 01:03:24,880
see e0 which is public knowledge and the

1666
01:03:24,880 --> 01:03:27,039
two curves that were exchanged a star e0

1667
01:03:27,039 --> 01:03:29,839
and b star e0 and the question is can we

1668
01:03:29,839 --> 01:03:32,240
can they recover the secrets and that is

1669
01:03:32,240 --> 01:03:34,319
known as the sea side problem very

1670
01:03:34,319 --> 01:03:38,160
similar to the difficult problem

1671
01:03:38,319 --> 01:03:40,000
okay so how does that relate to the

1672
01:03:40,000 --> 01:03:41,839
endomorphism ring problem

1673
01:03:41,839 --> 01:03:42,799
um

1674
01:03:42,799 --> 01:03:44,319
to answer this question we need to go

1675
01:03:44,319 --> 01:03:45,839
through another problem known as

1676
01:03:45,839 --> 01:03:47,200
vectorization

1677
01:03:47,200 --> 01:03:49,359
vectorization is to

1678
01:03:49,359 --> 01:03:52,160
this diffie-hellman problem what the

1679
01:03:52,160 --> 01:03:53,680
discrete logarithm problem is to

1680
01:03:53,680 --> 01:03:55,440
classical diffie-hellman

1681
01:03:55,440 --> 01:03:57,359
so how does it look

1682
01:03:57,359 --> 01:04:00,079
here's a reminder of our version of the

1683
01:04:00,079 --> 01:04:02,720
diffie-hellman problem how it looks like

1684
01:04:02,720 --> 01:04:04,559
and the vectorization problem is the

1685
01:04:04,559 --> 01:04:06,400
following you are now given two o

1686
01:04:06,400 --> 01:04:10,000
oriented elliptic curves e and a star e

1687
01:04:10,000 --> 01:04:13,839
and the question is can you find a

1688
01:04:14,000 --> 01:04:14,880
so

1689
01:04:14,880 --> 01:04:17,359
are these problems equivalent

1690
01:04:17,359 --> 01:04:19,280
it seems like we have an obvious

1691
01:04:19,280 --> 01:04:20,960
reduction at least from difficult to

1692
01:04:20,960 --> 01:04:23,200
vectorization just like

1693
01:04:23,200 --> 01:04:24,720
you have a reduction from classical

1694
01:04:24,720 --> 01:04:26,880
defendment to the discrete logarithm

1695
01:04:26,880 --> 01:04:28,000
problem if you can solve this with

1696
01:04:28,000 --> 01:04:29,760
logarithmic problem you can break and if

1697
01:04:29,760 --> 01:04:31,680
you haven't and here it's also the case

1698
01:04:31,680 --> 01:04:33,520
although it's a little bit more subtle

1699
01:04:33,520 --> 01:04:36,079
it's not so evident because actually

1700
01:04:36,079 --> 01:04:38,079
applying the action of an element is not

1701
01:04:38,079 --> 01:04:40,000
always easy and that introduces

1702
01:04:40,000 --> 01:04:42,000
technicalities but we do have a

1703
01:04:42,000 --> 01:04:44,079
reduction a polynomial time reduction

1704
01:04:44,079 --> 01:04:46,160
from the different problem to the

1705
01:04:46,160 --> 01:04:49,200
vectorization problem

1706
01:04:49,200 --> 01:04:50,880
now in the other direction that is the

1707
01:04:50,880 --> 01:04:53,039
first result i'm going to present

1708
01:04:53,039 --> 01:04:55,760
we do have a reduction

1709
01:04:55,760 --> 01:04:57,039
if we allow

1710
01:04:57,039 --> 01:04:59,039
quantum computation there is a quantum

1711
01:04:59,039 --> 01:05:01,119
polynomial polynomial time reduction

1712
01:05:01,119 --> 01:05:03,599
from the vectorization problem to the

1713
01:05:03,599 --> 01:05:05,839
diffie-hellman problem we can prove it

1714
01:05:05,839 --> 01:05:07,119
assuming the generalized riemann

1715
01:05:07,119 --> 01:05:09,359
hypothesis

1716
01:05:09,359 --> 01:05:11,200
so this relates to previous work

1717
01:05:11,200 --> 01:05:12,480
previously it was known under

1718
01:05:12,480 --> 01:05:14,319
sub-exponential reductions of

1719
01:05:14,319 --> 01:05:17,440
exponential instead of polynomial and

1720
01:05:17,440 --> 01:05:19,920
assuming some heuristic assumptions so

1721
01:05:19,920 --> 01:05:21,440
now we've replaced sub-exponential by

1722
01:05:21,440 --> 01:05:22,880
polynomial and we've replaced the

1723
01:05:22,880 --> 01:05:24,799
heuristics by the generalized women

1724
01:05:24,799 --> 01:05:27,440
hypothesis which is probably easier to

1725
01:05:27,440 --> 01:05:29,760
believe

1726
01:05:30,640 --> 01:05:33,280
so i'm going to draw a big diagram with

1727
01:05:33,280 --> 01:05:34,559
the problems and the equivalences that

1728
01:05:34,559 --> 01:05:36,240
i'm going to present so here's the

1729
01:05:36,240 --> 01:05:37,520
beginning of the diagram we've

1730
01:05:37,520 --> 01:05:38,799
introduced these two problems this

1731
01:05:38,799 --> 01:05:40,480
vectorization problem and the defilement

1732
01:05:40,480 --> 01:05:42,799
problem and we care about this defining

1733
01:05:42,799 --> 01:05:44,000
problem because it's essentially

1734
01:05:44,000 --> 01:05:46,400
equivalent to breaking c site at least

1735
01:05:46,400 --> 01:05:48,319
when instantiated with the particular

1736
01:05:48,319 --> 01:05:51,520
quadratic order used in c site

1737
01:05:51,520 --> 01:05:52,480
and

1738
01:05:52,480 --> 01:05:54,400
um there is a proof that you have a

1739
01:05:54,400 --> 01:05:55,839
quantum

1740
01:05:55,839 --> 01:05:58,000
sorry a classical reduction from

1741
01:05:58,000 --> 01:06:00,640
different to vectorization and there is

1742
01:06:00,640 --> 01:06:02,079
a quantum reduction in the other

1743
01:06:02,079 --> 01:06:03,920
direction so they are essentially

1744
01:06:03,920 --> 01:06:06,559
quantumly equivalent

1745
01:06:06,559 --> 01:06:08,400
now how does all this relate to the

1746
01:06:08,400 --> 01:06:10,240
endomorphism ring problem because i've

1747
01:06:10,240 --> 01:06:11,760
spent the first half of the talk

1748
01:06:11,760 --> 01:06:13,440
explaining you what the the endomorphism

1749
01:06:13,440 --> 01:06:14,799
ring problem and trying to convince you

1750
01:06:14,799 --> 01:06:16,960
that this is the fundamental problem we

1751
01:06:16,960 --> 01:06:18,960
care about in isology-based cryptography

1752
01:06:18,960 --> 01:06:20,799
we want to really build cryptography

1753
01:06:20,799 --> 01:06:23,200
based on the assumption that entering is

1754
01:06:23,200 --> 01:06:25,680
hard so what is the connection there it

1755
01:06:25,680 --> 01:06:27,760
doesn't look like these vectorization

1756
01:06:27,760 --> 01:06:29,119
problems

1757
01:06:29,119 --> 01:06:30,319
are very similar to finding

1758
01:06:30,319 --> 01:06:33,280
endomorphisms

1759
01:06:33,280 --> 01:06:35,200
so to show the connection between

1760
01:06:35,200 --> 01:06:36,799
vectorization and the anamorphism ring

1761
01:06:36,799 --> 01:06:38,559
problem i need to introduce a slight

1762
01:06:38,559 --> 01:06:41,200
variant of the endomorphism ring problem

1763
01:06:41,200 --> 01:06:43,599
called the o n ring problem

1764
01:06:43,599 --> 01:06:44,559
it is

1765
01:06:44,559 --> 01:06:47,760
the same problem but as input i don't

1766
01:06:47,760 --> 01:06:49,839
just give you an elliptic curve i give

1767
01:06:49,839 --> 01:06:52,960
you an oriented elliptic curve

1768
01:06:52,960 --> 01:06:54,799
so a priori that makes the problem a

1769
01:06:54,799 --> 01:06:57,200
little bit simpler because i ask for the

1770
01:06:57,200 --> 01:06:59,200
same thing but give you more information

1771
01:06:59,200 --> 01:07:00,640
the orientation is additional

1772
01:07:00,640 --> 01:07:03,200
information

1773
01:07:04,480 --> 01:07:05,920
so as a reminder here's the

1774
01:07:05,920 --> 01:07:08,319
vectorization problem and it's hard to

1775
01:07:08,319 --> 01:07:09,119
tell

1776
01:07:09,119 --> 01:07:10,960
whether there is a link between both of

1777
01:07:10,960 --> 01:07:12,880
them one is about finding the basis of

1778
01:07:12,880 --> 01:07:14,400
the lattice and the other one is about

1779
01:07:14,400 --> 01:07:16,559
inverting a group action

1780
01:07:16,559 --> 01:07:18,400
and we can prove that's the second main

1781
01:07:18,400 --> 01:07:21,520
result that they are actually equivalent

1782
01:07:21,520 --> 01:07:22,720
um

1783
01:07:22,720 --> 01:07:24,000
again assuming they're in the

1784
01:07:24,000 --> 01:07:25,920
generalized room and hypothesis

1785
01:07:25,920 --> 01:07:27,680
but most importantly

1786
01:07:27,680 --> 01:07:30,319
assuming that the discriminant of the

1787
01:07:30,319 --> 01:07:33,119
quadratic order

1788
01:07:33,119 --> 01:07:36,559
has a known factorization

1789
01:07:37,599 --> 01:07:39,680
so two consequences from that

1790
01:07:39,680 --> 01:07:41,920
first it means that without this

1791
01:07:41,920 --> 01:07:43,599
restriction on the factorization we do

1792
01:07:43,599 --> 01:07:46,880
get a quantum polynomial time reduction

1793
01:07:46,880 --> 01:07:48,880
and second i'm going to say that

1794
01:07:48,880 --> 01:07:51,039
classically it's not a problem either

1795
01:07:51,039 --> 01:07:52,880
because typically this problem is

1796
01:07:52,880 --> 01:07:55,200
instantiated in encryptive systems where

1797
01:07:55,200 --> 01:07:56,799
the discriminant of the order used is

1798
01:07:56,799 --> 01:07:59,119
essentially a prime number therefore it

1799
01:07:59,119 --> 01:08:00,880
has a trivial factorization so we don't

1800
01:08:00,880 --> 01:08:03,520
need to factor

1801
01:08:03,599 --> 01:08:05,280
again that relates to some previous work

1802
01:08:05,280 --> 01:08:07,760
some work was done in the setting of c

1803
01:08:07,760 --> 01:08:10,319
site so with this particular ring this

1804
01:08:10,319 --> 01:08:12,319
particular case where o is zero joint

1805
01:08:12,319 --> 01:08:14,400
square root of minus p and again that

1806
01:08:14,400 --> 01:08:17,279
was only known in subexponential time

1807
01:08:17,279 --> 01:08:19,759
so this subexponential again becomes a

1808
01:08:19,759 --> 01:08:22,399
polynomial

1809
01:08:22,479 --> 01:08:24,158
so we can extend our diagram a little

1810
01:08:24,158 --> 01:08:25,040
bit

1811
01:08:25,040 --> 01:08:27,279
um i've introduced a little variant of

1812
01:08:27,279 --> 01:08:29,679
the endomorphism ring problem and proved

1813
01:08:29,679 --> 01:08:30,399
that

1814
01:08:30,399 --> 01:08:34,399
the two problems are equivalent

1815
01:08:34,799 --> 01:08:36,319
now that relates to the classic

1816
01:08:36,319 --> 01:08:37,839
endomorphism ring problem through an

1817
01:08:37,839 --> 01:08:41,198
obvious reduction as i said the and the

1818
01:08:41,198 --> 01:08:43,600
oriented oh enduring problem is a little

1819
01:08:43,600 --> 01:08:45,120
bit simpler because i asked for the same

1820
01:08:45,120 --> 01:08:46,640
thing but give you more as input so you

1821
01:08:46,640 --> 01:08:48,238
have a trivial reduction

1822
01:08:48,238 --> 01:08:51,198
and do we have actually an equivalence

1823
01:08:51,198 --> 01:08:52,960
well in general

1824
01:08:52,960 --> 01:08:55,198
probably not actually in general we have

1825
01:08:55,198 --> 01:08:59,198
better algorithms to solve vectorization

1826
01:08:59,198 --> 01:09:02,080
hence the oriented entering problem then

1827
01:09:02,080 --> 01:09:05,198
we have for the classic entering problem

1828
01:09:05,198 --> 01:09:07,120
so in general we cannot go back but in

1829
01:09:07,120 --> 01:09:08,960
some settings we can go back in

1830
01:09:08,960 --> 01:09:11,279
particular in the setting of c site we

1831
01:09:11,279 --> 01:09:12,560
can go back

1832
01:09:12,560 --> 01:09:13,439
so

1833
01:09:13,439 --> 01:09:15,759
concatenating all these arrows

1834
01:09:15,759 --> 01:09:17,920
we can see that breaking c site is

1835
01:09:17,920 --> 01:09:19,600
equivalent to the classic entering

1836
01:09:19,600 --> 01:09:21,839
problem

1837
01:09:22,640 --> 01:09:25,759
with one of these steps being quantum

1838
01:09:25,759 --> 01:09:28,158
so is it really the classical end ring

1839
01:09:28,158 --> 01:09:30,880
problem because here i wrote entering

1840
01:09:30,880 --> 01:09:33,679
four o orientable curves is that much of

1841
01:09:33,679 --> 01:09:36,479
a restriction so

1842
01:09:36,479 --> 01:09:38,560
it isn't general restriction and it is a

1843
01:09:38,560 --> 01:09:40,158
little bit of a restriction here but

1844
01:09:40,158 --> 01:09:43,439
what that means

1845
01:09:44,799 --> 01:09:47,359
okay is that

1846
01:09:47,359 --> 01:09:49,279
we restrict ourselves to curve defined

1847
01:09:49,279 --> 01:09:50,560
over fp

1848
01:09:50,560 --> 01:09:53,040
the pr the finite field with a prime

1849
01:09:53,040 --> 01:09:55,600
number of elements

1850
01:09:55,600 --> 01:09:57,679
so this shows that breaking seaside is

1851
01:09:57,679 --> 01:09:59,199
equivalent to the endomorphism ring

1852
01:09:59,199 --> 01:10:01,679
problem or curves defined over a finite

1853
01:10:01,679 --> 01:10:03,760
field fp

1854
01:10:03,760 --> 01:10:05,920
as opposed to in general an extension of

1855
01:10:05,920 --> 01:10:08,239
fp

1856
01:10:08,640 --> 01:10:10,000
so this problem is equivalent to the

1857
01:10:10,000 --> 01:10:12,640
isogeny path problem it relates to a few

1858
01:10:12,640 --> 01:10:14,800
isotonic base cryptosystems

1859
01:10:14,800 --> 01:10:16,640
clearly it relates to breaking seaside

1860
01:10:16,640 --> 01:10:18,719
but two more of them and

1861
01:10:18,719 --> 01:10:22,000
i'm not going to list them all but not

1862
01:10:22,000 --> 01:10:24,320
all of the schemes we know relate to

1863
01:10:24,320 --> 01:10:26,239
this classic entering problem

1864
01:10:26,239 --> 01:10:29,840
is there a way to show that breaking

1865
01:10:29,840 --> 01:10:32,000
the endomorphism ring problem breaks all

1866
01:10:32,000 --> 01:10:34,239
of isartoni based cryptography

1867
01:10:34,239 --> 01:10:36,960
um is there a problem that we know that

1868
01:10:36,960 --> 01:10:39,440
all schemes reduce to

1869
01:10:39,440 --> 01:10:42,000
well there is essentially such a problem

1870
01:10:42,000 --> 01:10:44,400
that is the uber sartoni problem

1871
01:10:44,400 --> 01:10:46,320
which was introduced precisely to show

1872
01:10:46,320 --> 01:10:47,679
that you can break this one then you can

1873
01:10:47,679 --> 01:10:49,120
break essentially your isolation based

1874
01:10:49,120 --> 01:10:51,360
cryptography this is paul bucu's by the

1875
01:10:51,360 --> 01:10:53,599
way

1876
01:10:54,239 --> 01:10:55,520
so

1877
01:10:55,520 --> 01:10:57,199
this problem is very similar to the

1878
01:10:57,199 --> 01:10:59,040
vectorization problem

1879
01:10:59,040 --> 01:11:02,239
but is at the same time much harder

1880
01:11:02,239 --> 01:11:04,400
so we act we ask for the same thing it's

1881
01:11:04,400 --> 01:11:05,840
essentially the same i give you two

1882
01:11:05,840 --> 01:11:07,600
curves and i'm asking can you find a

1883
01:11:07,600 --> 01:11:09,360
group element that that sends the first

1884
01:11:09,360 --> 01:11:10,960
curve to the second one

1885
01:11:10,960 --> 01:11:13,040
but in vectorization i give you two

1886
01:11:13,040 --> 01:11:15,360
oriented curves so the curves together

1887
01:11:15,360 --> 01:11:17,040
with their orientation and here i give

1888
01:11:17,040 --> 01:11:19,440
you only one oriented curve and the

1889
01:11:19,440 --> 01:11:22,080
second one is orientable

1890
01:11:22,080 --> 01:11:23,600
so you know there exists an orientation

1891
01:11:23,600 --> 01:11:25,360
but i don't give it to you

1892
01:11:25,360 --> 01:11:28,960
so that should make the problem harder

1893
01:11:28,960 --> 01:11:30,239
this problem was introduced in that

1894
01:11:30,239 --> 01:11:32,400
paper with many authors where they show

1895
01:11:32,400 --> 01:11:33,600
that

1896
01:11:33,600 --> 01:11:36,880
sidh seaside osidh shita all these

1897
01:11:36,880 --> 01:11:41,600
cryptosystems reduced to uber

1898
01:11:41,600 --> 01:11:43,040
so is it

1899
01:11:43,040 --> 01:11:44,640
equivalent to the endomorphism ring

1900
01:11:44,640 --> 01:11:45,679
problem

1901
01:11:45,679 --> 01:11:47,600
well let's see we can introduce another

1902
01:11:47,600 --> 01:11:49,600
variant of the entering problem called

1903
01:11:49,600 --> 01:11:52,400
the o n ring star problem

1904
01:11:52,400 --> 01:11:54,560
again very similar so this time i give

1905
01:11:54,560 --> 01:11:57,280
you an orientable curve as input so

1906
01:11:57,280 --> 01:11:59,280
occur without its orientation and i ask

1907
01:11:59,280 --> 01:12:02,080
you to compute its endomorphism ring and

1908
01:12:02,080 --> 01:12:04,400
in addition to that i ask you to find

1909
01:12:04,400 --> 01:12:06,320
the missing orientation the one that i

1910
01:12:06,320 --> 01:12:08,159
promised to exist but didn't want to

1911
01:12:08,159 --> 01:12:10,559
give you

1912
01:12:12,560 --> 01:12:14,320
and that's the third result i want to

1913
01:12:14,320 --> 01:12:16,159
present today

1914
01:12:16,159 --> 01:12:18,400
these problems are also equivalent under

1915
01:12:18,400 --> 01:12:20,640
those very same restrictions we had for

1916
01:12:20,640 --> 01:12:22,400
the previous two problems

1917
01:12:22,400 --> 01:12:23,760
we assumed the generalized women

1918
01:12:23,760 --> 01:12:26,080
hypothesis and we assume that we are

1919
01:12:26,080 --> 01:12:27,280
given the factorization of the

1920
01:12:27,280 --> 01:12:28,960
discriminant

1921
01:12:28,960 --> 01:12:32,000
okay so we've introduced this uh problem

1922
01:12:32,000 --> 01:12:33,040
uh

1923
01:12:33,040 --> 01:12:34,640
which is interesting because it relates

1924
01:12:34,640 --> 01:12:37,520
to many cryptosystems

1925
01:12:37,520 --> 01:12:39,120
this variant of the endomorphism ring

1926
01:12:39,120 --> 01:12:41,280
problem is proved to be equivalent under

1927
01:12:41,280 --> 01:12:43,520
classic polynomial time reductions and

1928
01:12:43,520 --> 01:12:45,600
we have an obvious reduction from

1929
01:12:45,600 --> 01:12:47,840
the entering problem to o and ring star

1930
01:12:47,840 --> 01:12:49,360
because i want ring star it's really the

1931
01:12:49,360 --> 01:12:51,280
same problem except i also ask you to

1932
01:12:51,280 --> 01:12:53,040
find an orientation so it's strictly

1933
01:12:53,040 --> 01:12:55,920
harder i ask you for more

1934
01:12:55,920 --> 01:12:58,960
so rearranging these things and cleaning

1935
01:12:58,960 --> 01:13:00,880
up every oh yeah one more remark

1936
01:13:00,880 --> 01:13:02,000
sometimes you can go in the other

1937
01:13:02,000 --> 01:13:04,320
direction so sometimes o entering star

1938
01:13:04,320 --> 01:13:06,800
is not actually harder when the discrete

1939
01:13:06,800 --> 01:13:08,560
the discriminant of the order is not too

1940
01:13:08,560 --> 01:13:10,239
big then you have an equivalence between

1941
01:13:10,239 --> 01:13:11,760
these problems

1942
01:13:11,760 --> 01:13:14,080
what i wanted to say rearranging things

1943
01:13:14,080 --> 01:13:16,560
and cleaning up a little bit what we

1944
01:13:16,560 --> 01:13:19,760
can summarize the result as follows you

1945
01:13:19,760 --> 01:13:21,360
have three groups of problems problems

1946
01:13:21,360 --> 01:13:22,960
that relate to computing anamorphism

1947
01:13:22,960 --> 01:13:24,640
rings problems that relate to inverting

1948
01:13:24,640 --> 01:13:26,560
a group action and problems that are

1949
01:13:26,560 --> 01:13:28,480
actually breaking cryptosystems and we

1950
01:13:28,480 --> 01:13:30,320
prove a bunch of equivalences between

1951
01:13:30,320 --> 01:13:32,800
them all the arrows in this diagram are

1952
01:13:32,800 --> 01:13:36,320
new from this work except for this arrow

1953
01:13:36,320 --> 01:13:38,239
here

1954
01:13:38,239 --> 01:13:40,719
and i have one last picture of lyon to

1955
01:13:40,719 --> 01:13:43,920
show but maybe it's better to just

1956
01:13:43,920 --> 01:13:46,239
leave the summary if you have any

1957
01:13:46,239 --> 01:13:49,040
questions about it

1958
01:13:55,440 --> 01:13:57,360
thank you very much

1959
01:13:57,360 --> 01:13:59,280
we have time for questions

1960
01:13:59,280 --> 01:14:01,840
yes

1961
01:14:05,679 --> 01:14:07,920
so in the dell scale breath algorithm

1962
01:14:07,920 --> 01:14:09,040
they've

1963
01:14:09,040 --> 01:14:11,840
solved its walk over curves over

1964
01:14:11,840 --> 01:14:14,560
fb squared by reducing to the curves

1965
01:14:14,560 --> 01:14:16,480
over fp and solving it there

1966
01:14:16,480 --> 01:14:18,880
and i was trying to fit this into this

1967
01:14:18,880 --> 01:14:20,880
complexity graph that i couldn't really

1968
01:14:20,880 --> 01:14:23,040
grasp where it would fit

1969
01:14:23,040 --> 01:14:26,320
okay so devs galbraith

1970
01:14:26,320 --> 01:14:28,560
in a sense solves the isogeny path

1971
01:14:28,560 --> 01:14:29,600
problem

1972
01:14:29,600 --> 01:14:31,120
what it does is you're given two super

1973
01:14:31,120 --> 01:14:33,360
singular or yeah yeah you're given two

1974
01:14:33,360 --> 01:14:34,560
super singular elliptic curves and you

1975
01:14:34,560 --> 01:14:37,199
find paths from each of them to curves

1976
01:14:37,199 --> 01:14:39,360
defined over fp

1977
01:14:39,360 --> 01:14:40,880
and then you find a path between these

1978
01:14:40,880 --> 01:14:42,320
two knowing that you work in a smaller

1979
01:14:42,320 --> 01:14:43,600
graph because you have less curves to

1980
01:14:43,600 --> 01:14:45,440
find over fp and in the end what you get

1981
01:14:45,440 --> 01:14:47,120
is a path from your first graph to your

1982
01:14:47,120 --> 01:14:48,880
second curve so that's a solution of

1983
01:14:48,880 --> 01:14:50,560
isotonic path

1984
01:14:50,560 --> 01:14:51,600
and

1985
01:14:51,600 --> 01:14:53,360
we know that this is equivalent to the

1986
01:14:53,360 --> 01:14:55,440
endomorphism ring problem

1987
01:14:55,440 --> 01:14:56,640
so that gives you essentially the

1988
01:14:56,640 --> 01:14:58,480
complexity of computing endomorphism

1989
01:14:58,480 --> 01:15:00,239
rings

1990
01:15:00,239 --> 01:15:01,760
was that your question yeah i think so

1991
01:15:01,760 --> 01:15:03,760
yes

1992
01:15:03,760 --> 01:15:07,600
thank you very much another question

1993
01:15:09,120 --> 01:15:11,199
hi thanks for the great talk i was

1994
01:15:11,199 --> 01:15:13,040
wondering if you could comment on like

1995
01:15:13,040 --> 01:15:13,920
um

1996
01:15:13,920 --> 01:15:16,640
the tightness of your reductions like do

1997
01:15:16,640 --> 01:15:17,440
you give

1998
01:15:17,440 --> 01:15:18,960
some sort of security guarantees for

1999
01:15:18,960 --> 01:15:21,040
seaside with the presently chosen

2000
01:15:21,040 --> 01:15:22,800
parameters

2001
01:15:22,800 --> 01:15:25,360
uh no so all the reductions are

2002
01:15:25,360 --> 01:15:27,360
polynomial time

2003
01:15:27,360 --> 01:15:28,320
with

2004
01:15:28,320 --> 01:15:31,840
big o of one in the experiment

2005
01:15:32,400 --> 01:15:34,320
right thank you

2006
01:15:34,320 --> 01:15:36,320
i'm sure i'm sure you can uh look at the

2007
01:15:36,320 --> 01:15:40,159
proofs and get better results

2008
01:15:42,159 --> 01:15:45,599
any more questions to benjamin

2009
01:15:46,960 --> 01:15:52,280
if not then let's thank mentoring again

2010
01:15:56,000 --> 01:15:58,400
and that was the last session today and

2011
01:15:58,400 --> 01:16:00,159
we meet

2012
01:16:00,159 --> 01:16:02,320
at the conference banquet

2013
01:16:02,320 --> 01:16:05,880
at 7pm

