1
00:00:00,080 --> 00:00:02,560
paper

2
00:00:03,199 --> 00:00:05,920
the first paper chances will talk on

3
00:00:05,920 --> 00:00:08,000
short pairing free blind signatures with

4
00:00:08,000 --> 00:00:11,280
exponential security

5
00:00:11,920 --> 00:00:13,519
hello

6
00:00:13,519 --> 00:00:14,400
um

7
00:00:14,400 --> 00:00:17,600
yeah so hello everyone good afternoon um

8
00:00:17,600 --> 00:00:19,840
i'm a phd student from university of

9
00:00:19,840 --> 00:00:21,760
washington and this is a joint work with

10
00:00:21,760 --> 00:00:25,199
my advisor stephano tesaro

11
00:00:25,199 --> 00:00:28,400
so in a context of my signatures we have

12
00:00:28,400 --> 00:00:30,800
a signer with secret key and a user with

13
00:00:30,800 --> 00:00:33,040
public key and the user wants to sign a

14
00:00:33,040 --> 00:00:34,239
message m

15
00:00:34,239 --> 00:00:36,079
by running an interactive protocol with

16
00:00:36,079 --> 00:00:39,520
a signer and at the end the user will

17
00:00:39,520 --> 00:00:41,760
learn a valid signature

18
00:00:41,760 --> 00:00:43,280
from m

19
00:00:43,280 --> 00:00:44,960
which can be verified using the public

20
00:00:44,960 --> 00:00:46,000
key

21
00:00:46,000 --> 00:00:48,239
and on the other side we require the

22
00:00:48,239 --> 00:00:49,760
signer to be blind

23
00:00:49,760 --> 00:00:51,840
which means the signer does not know the

24
00:00:51,840 --> 00:00:54,239
message during the interaction

25
00:00:54,239 --> 00:00:56,160
and moreover

26
00:00:56,160 --> 00:00:57,840
even given the master's and signature

27
00:00:57,840 --> 00:01:00,719
later assigner cannot link them back to

28
00:01:00,719 --> 00:01:03,680
which session that issues them

29
00:01:03,680 --> 00:01:05,199
my signatures have a number of

30
00:01:05,199 --> 00:01:06,799
well-known applications

31
00:01:06,799 --> 00:01:09,439
for example it can be used in anonymous

32
00:01:09,439 --> 00:01:11,200
ecast systems

33
00:01:11,200 --> 00:01:13,920
all within anonymous credentials

34
00:01:13,920 --> 00:01:15,520
and more recently they have regained

35
00:01:15,520 --> 00:01:18,000
popularities due to their ability to

36
00:01:18,000 --> 00:01:20,960
implement anonymous tokens in web

37
00:01:20,960 --> 00:01:23,200
applications for example for privacy

38
00:01:23,200 --> 00:01:26,720
preserving ad key management

39
00:01:26,720 --> 00:01:28,479
the current practically efficient

40
00:01:28,479 --> 00:01:29,600
schemes

41
00:01:29,600 --> 00:01:30,880
fall into

42
00:01:30,880 --> 00:01:33,200
the following three classes

43
00:01:33,200 --> 00:01:35,520
rsa based schemes snoring style schemes

44
00:01:35,520 --> 00:01:37,600
and apparent based schemes

45
00:01:37,600 --> 00:01:39,840
snort style games require three rounds

46
00:01:39,840 --> 00:01:42,240
for each signing whereas the rsa based

47
00:01:42,240 --> 00:01:44,159
and parent-based schemes require only

48
00:01:44,159 --> 00:01:46,960
two rounds however both rsa and

49
00:01:46,960 --> 00:01:50,000
parent-based schemes have some drawbacks

50
00:01:50,000 --> 00:01:51,439
so the main drawbacks of the

51
00:01:51,439 --> 00:01:53,360
parent-based schemes and that they

52
00:01:53,360 --> 00:01:55,759
require pairing friendly elliptic curves

53
00:01:55,759 --> 00:01:57,600
which make them undesirable for many

54
00:01:57,600 --> 00:02:00,079
applications

55
00:02:00,079 --> 00:02:01,840
due to the lack of high assurance

56
00:02:01,840 --> 00:02:03,439
implementation for example in the

57
00:02:03,439 --> 00:02:05,119
internet browser

58
00:02:05,119 --> 00:02:06,880
on the other side

59
00:02:06,880 --> 00:02:09,758
the rsa blind signatures inherit all

60
00:02:09,758 --> 00:02:11,920
undesirable properties of rsas like the

61
00:02:11,920 --> 00:02:13,440
large key size

62
00:02:13,440 --> 00:02:16,239
therefore many applications might prefer

63
00:02:16,239 --> 00:02:19,040
using the snore style schemes

64
00:02:19,040 --> 00:02:21,520
despite your higher round complexity in

65
00:02:21,520 --> 00:02:23,760
particular because they are simple to

66
00:02:23,760 --> 00:02:24,879
implement

67
00:02:24,879 --> 00:02:26,879
allowed efficient verification and also

68
00:02:26,879 --> 00:02:28,640
can be based on any standard elliptic

69
00:02:28,640 --> 00:02:30,080
curves

70
00:02:30,080 --> 00:02:33,360
however very recently

71
00:02:34,879 --> 00:02:37,519
at all shows a polynomial time attack

72
00:02:37,519 --> 00:02:39,599
against the most efficient strong style

73
00:02:39,599 --> 00:02:40,879
scheme

74
00:02:40,879 --> 00:02:42,879
by solving the so-called rs problem

75
00:02:42,879 --> 00:02:44,319
efficiently

76
00:02:44,319 --> 00:02:46,879
so therefore a big problem we address in

77
00:02:46,879 --> 00:02:49,760
this paper is that can we have a secure

78
00:02:49,760 --> 00:02:52,239
snort style scheme which is also very

79
00:02:52,239 --> 00:02:53,920
efficient

80
00:02:53,920 --> 00:02:55,599
of course we are not the first of this

81
00:02:55,599 --> 00:02:57,280
question so let me tell you a little

82
00:02:57,280 --> 00:02:59,519
more about related works and however

83
00:02:59,519 --> 00:03:01,680
results are substantial improvement over

84
00:03:01,680 --> 00:03:04,560
the state of the art so the original

85
00:03:04,560 --> 00:03:06,080
blind snore

86
00:03:06,080 --> 00:03:08,000
was proposed by charm and patterson in

87
00:03:08,000 --> 00:03:09,360
1993

88
00:03:09,360 --> 00:03:12,000
is the most efficient the signature size

89
00:03:12,000 --> 00:03:14,159
is just two scalar and communication

90
00:03:14,159 --> 00:03:16,879
complexity is one group element plus two

91
00:03:16,879 --> 00:03:20,400
scalar however as i mentioned

92
00:03:20,400 --> 00:03:22,800
the scheme is actually broken

93
00:03:22,800 --> 00:03:24,879
so an alternative is a scheme proposed

94
00:03:24,879 --> 00:03:27,840
by abed in 2001

95
00:03:27,840 --> 00:03:30,319
however the scheme is less efficient and

96
00:03:30,319 --> 00:03:32,319
its original security proof was found to

97
00:03:32,319 --> 00:03:33,120
be

98
00:03:33,120 --> 00:03:35,440
actually incorrect but the recent result

99
00:03:35,440 --> 00:03:38,560
by castner shows in its security

100
00:03:38,560 --> 00:03:41,440
uh in the algebraic model and the random

101
00:03:41,440 --> 00:03:43,760
oracle model at this point i'd like to

102
00:03:43,760 --> 00:03:46,000
point out that all the results are shown

103
00:03:46,000 --> 00:03:48,319
in this page

104
00:03:48,319 --> 00:03:50,799
assume this to ideal model

105
00:03:50,799 --> 00:03:52,959
a more efficient scheme was proposed by

106
00:03:52,959 --> 00:03:56,480
fushpower in 1990 sorry in 2020 which is

107
00:03:56,480 --> 00:03:59,439
a so-called cloud spline store

108
00:03:59,439 --> 00:04:01,519
the signature size is exactly the same

109
00:04:01,519 --> 00:04:02,959
as the blind snore with a double

110
00:04:02,959 --> 00:04:04,400
communication

111
00:04:04,400 --> 00:04:08,400
however its security relies on a

112
00:04:08,400 --> 00:04:09,760
new assumption

113
00:04:09,760 --> 00:04:13,120
namely the so-called mos problem is hard

114
00:04:13,120 --> 00:04:16,238
where mros is a variant of rs proposed

115
00:04:16,238 --> 00:04:17,680
in their paper

116
00:04:17,680 --> 00:04:20,238
the important point here is that

117
00:04:20,238 --> 00:04:22,800
there exists a sub potential attack

118
00:04:22,800 --> 00:04:24,720
against mros

119
00:04:24,720 --> 00:04:26,639
which requires to choose

120
00:04:26,639 --> 00:04:27,520
large

121
00:04:27,520 --> 00:04:28,400
curve

122
00:04:28,400 --> 00:04:31,199
to achieve desirable security level

123
00:04:31,199 --> 00:04:34,320
so as you can see the existing schemes

124
00:04:34,320 --> 00:04:36,639
are either less efficient or do not have

125
00:04:36,639 --> 00:04:38,960
the best possible security guarantees

126
00:04:38,960 --> 00:04:40,240
therefore

127
00:04:40,240 --> 00:04:43,199
the major contribution of this paper

128
00:04:43,199 --> 00:04:46,320
is we propose two schemes that are both

129
00:04:46,320 --> 00:04:50,000
efficient and have exponential security

130
00:04:50,000 --> 00:04:51,600
so our first scheme

131
00:04:51,600 --> 00:04:54,160
the signature size is just rescaler and

132
00:04:54,160 --> 00:04:56,000
the communication complexity is true

133
00:04:56,000 --> 00:04:58,000
group elements plus three scalar and

134
00:04:58,000 --> 00:05:00,880
then we prove its security in the uh

135
00:05:00,880 --> 00:05:02,720
imaginary group model

136
00:05:02,720 --> 00:05:04,880
and for our second scheme we can prove

137
00:05:04,880 --> 00:05:06,880
its security in the algebraic group

138
00:05:06,880 --> 00:05:09,199
model assuming all needed discrete

139
00:05:09,199 --> 00:05:11,919
logarithm as hard in addition to a

140
00:05:11,919 --> 00:05:13,520
random oracle

141
00:05:13,520 --> 00:05:15,600
however we need to add an additional

142
00:05:15,600 --> 00:05:17,280
scalar to both signature size and

143
00:05:17,280 --> 00:05:19,280
communication

144
00:05:19,280 --> 00:05:21,759
very appealing feature of this second

145
00:05:21,759 --> 00:05:24,320
scheme is that it emits a partially

146
00:05:24,320 --> 00:05:26,479
blind version where partially blind

147
00:05:26,479 --> 00:05:27,520
means

148
00:05:27,520 --> 00:05:29,600
it allows a part of message to be known

149
00:05:29,600 --> 00:05:32,639
by a designer so as you can see

150
00:05:32,639 --> 00:05:34,240
um our scheme

151
00:05:34,240 --> 00:05:36,400
was the most efficient parametric scheme

152
00:05:36,400 --> 00:05:39,039
so far with natural security

153
00:05:39,039 --> 00:05:40,960
and before we move on

154
00:05:40,960 --> 00:05:42,960
i would like to mention a few more

155
00:05:42,960 --> 00:05:45,120
related works to give you a full picture

156
00:05:45,120 --> 00:05:46,560
of the area

157
00:05:46,560 --> 00:05:47,680
so

158
00:05:47,680 --> 00:05:50,160
first of all they were security analysis

159
00:05:50,160 --> 00:05:51,840
for snow style schemes in some

160
00:05:51,840 --> 00:05:53,440
restricted setting

161
00:05:53,440 --> 00:05:55,520
for example

162
00:05:55,520 --> 00:05:57,280
some of them can be proved secure when

163
00:05:57,280 --> 00:05:59,600
the number of sessions is small or when

164
00:05:59,600 --> 00:06:02,160
these sessions are sequential

165
00:06:02,160 --> 00:06:03,759
in this work however we targeted a more

166
00:06:03,759 --> 00:06:06,720
realistic setting where the sessions are

167
00:06:06,720 --> 00:06:10,160
concurrent and their number is unbounded

168
00:06:10,160 --> 00:06:11,919
interestingly some of the work i listed

169
00:06:11,919 --> 00:06:16,319
here do not rely on the agm or dgm

170
00:06:16,319 --> 00:06:18,080
another interesting line of work

171
00:06:18,080 --> 00:06:20,960
explores boosting techniques

172
00:06:20,960 --> 00:06:22,479
which

173
00:06:22,479 --> 00:06:24,639
the goal is to transform

174
00:06:24,639 --> 00:06:26,880
a scheme that is secure only for a small

175
00:06:26,880 --> 00:06:29,120
number of signings into a scheme that is

176
00:06:29,120 --> 00:06:30,880
secure for an unbounded number of

177
00:06:30,880 --> 00:06:32,400
signings

178
00:06:32,400 --> 00:06:34,319
however one drawback of the resulting

179
00:06:34,319 --> 00:06:36,800
schemes is that their communication

180
00:06:36,800 --> 00:06:38,479
computation complexities grow with a

181
00:06:38,479 --> 00:06:40,400
number of sessions

182
00:06:40,400 --> 00:06:42,319
so now come to a technical part of the

183
00:06:42,319 --> 00:06:43,120
talk

184
00:06:43,120 --> 00:06:44,720
so

185
00:06:44,720 --> 00:06:46,479
um

186
00:06:46,479 --> 00:06:50,240
or um for security definition i will not

187
00:06:50,240 --> 00:06:52,800
define the blindness formally we rely on

188
00:06:52,800 --> 00:06:54,960
an intuitive understanding so in this

189
00:06:54,960 --> 00:06:57,360
talk i will mostly discuss how to

190
00:06:57,360 --> 00:07:00,639
achieve unfoldability however unlike the

191
00:07:00,639 --> 00:07:02,479
fungibility for the normal signature

192
00:07:02,479 --> 00:07:05,280
scheme which is defined as the bursary

193
00:07:05,280 --> 00:07:07,199
cannot forge a signature that is not

194
00:07:07,199 --> 00:07:08,960
been issued by signer

195
00:07:08,960 --> 00:07:12,560
here as you can see for blind signature

196
00:07:12,560 --> 00:07:14,960
it is unclear which signature actually

197
00:07:14,960 --> 00:07:17,440
is been issued during the

198
00:07:17,440 --> 00:07:18,880
signing process

199
00:07:18,880 --> 00:07:21,199
therefore we need to use another notion

200
00:07:21,199 --> 00:07:22,160
called

201
00:07:22,160 --> 00:07:24,639
one more unfoldability

202
00:07:24,639 --> 00:07:26,720
so in a security game the investor can

203
00:07:26,720 --> 00:07:28,800
interact with a

204
00:07:28,800 --> 00:07:31,120
signer for l sessions

205
00:07:31,120 --> 00:07:33,520
and the goal uh so inversely wins if it

206
00:07:33,520 --> 00:07:35,840
can output l plus one valid method and

207
00:07:35,840 --> 00:07:38,080
signature pairs

208
00:07:38,080 --> 00:07:39,919
so here all the sessions can be

209
00:07:39,919 --> 00:07:41,599
arbitrarily concurrent

210
00:07:41,599 --> 00:07:43,360
in other words one more versatility

211
00:07:43,360 --> 00:07:45,599
means the anniversary cannot forge a

212
00:07:45,599 --> 00:07:47,599
number of signature which is more than

213
00:07:47,599 --> 00:07:50,160
the number of sending sessions

214
00:07:50,160 --> 00:07:52,000
so the overview of driving my target is

215
00:07:52,000 --> 00:07:53,360
as follows

216
00:07:53,360 --> 00:07:55,840
so to give you some intuition about our

217
00:07:55,840 --> 00:07:58,560
constructions i will first record what

218
00:07:58,560 --> 00:07:59,360
um

219
00:07:59,360 --> 00:08:02,160
the what blinds nor signatures are

220
00:08:02,160 --> 00:08:04,560
and show their relation with the ros

221
00:08:04,560 --> 00:08:06,400
problem

222
00:08:06,400 --> 00:08:08,000
in particular i will show how one can

223
00:08:08,000 --> 00:08:09,759
break the one more flexibility of blind

224
00:08:09,759 --> 00:08:12,080
snore by solving the corresponding ios

225
00:08:12,080 --> 00:08:14,160
problem and since the rs problem is

226
00:08:14,160 --> 00:08:16,319
solvable in polynomial time this gives a

227
00:08:16,319 --> 00:08:19,599
polynomial time attack against a blind

228
00:08:19,599 --> 00:08:21,199
storm

229
00:08:21,199 --> 00:08:23,520
and next i will show our idea to avoid

230
00:08:23,520 --> 00:08:25,680
the ios attack that on underlies our

231
00:08:25,680 --> 00:08:26,879
schemes

232
00:08:26,879 --> 00:08:28,960
but under some assumptions we can show

233
00:08:28,960 --> 00:08:31,120
the security of our scheme

234
00:08:31,120 --> 00:08:33,919
is equivalent to solving the wfrs

235
00:08:33,919 --> 00:08:34,958
problem

236
00:08:34,958 --> 00:08:36,880
which is a problem we define in our

237
00:08:36,880 --> 00:08:38,000
paper

238
00:08:38,000 --> 00:08:41,120
and in contrast to ros problem

239
00:08:41,120 --> 00:08:43,279
we can actually show wfos is

240
00:08:43,279 --> 00:08:45,920
exponentially hard which is implies the

241
00:08:45,920 --> 00:08:48,320
exponential security of our scheme

242
00:08:48,320 --> 00:08:51,279
in particular i will define what is

243
00:08:51,279 --> 00:08:55,040
wfos and

244
00:08:55,040 --> 00:08:56,880
provide some intuition behind its

245
00:08:56,880 --> 00:08:58,880
hardness

246
00:08:58,880 --> 00:09:00,959
so to start with i will first describe

247
00:09:00,959 --> 00:09:03,040
the non-blind version of of line star

248
00:09:03,040 --> 00:09:04,800
signatures

249
00:09:04,800 --> 00:09:07,360
so the public parameter consists of

250
00:09:07,360 --> 00:09:10,240
group g with size p and generate little

251
00:09:10,240 --> 00:09:13,040
g and a hash function h

252
00:09:13,040 --> 00:09:15,440
the signatu the secret key is a group

253
00:09:15,440 --> 00:09:16,480
element

254
00:09:16,480 --> 00:09:18,560
uh sorry it's a scalar randomly sampled

255
00:09:18,560 --> 00:09:19,839
from zp

256
00:09:19,839 --> 00:09:22,320
and the corresponding public key is g to

257
00:09:22,320 --> 00:09:24,399
the x

258
00:09:24,399 --> 00:09:26,880
and during the signing the signer first

259
00:09:26,880 --> 00:09:29,920
sample a random nouns a uniformly from

260
00:09:29,920 --> 00:09:33,120
zp and send g rise to a to the user and

261
00:09:33,120 --> 00:09:36,240
then the user computer challenge c as

262
00:09:36,240 --> 00:09:38,959
the hash of a and m

263
00:09:38,959 --> 00:09:41,360
and after receiving the

264
00:09:41,360 --> 00:09:43,360
challenge from the user the signer

265
00:09:43,360 --> 00:09:46,720
computes an s as a plus c times x

266
00:09:46,720 --> 00:09:48,640
and then the final signature is just c

267
00:09:48,640 --> 00:09:52,320
and s and to verify signature

268
00:09:52,320 --> 00:09:55,120
one can recover the a from c and s

269
00:09:55,120 --> 00:09:56,480
and then check whether the c is

270
00:09:56,480 --> 00:09:59,600
consistent with a hash value

271
00:09:59,600 --> 00:10:02,320
it is easy to get a perfect line version

272
00:10:02,320 --> 00:10:03,600
of it

273
00:10:03,600 --> 00:10:06,959
by adding two random masks

274
00:10:06,959 --> 00:10:08,640
as highlighted

275
00:10:08,640 --> 00:10:10,720
therefore uh we're now looking to the

276
00:10:10,720 --> 00:10:13,200
one more feasibility of the scheme

277
00:10:13,200 --> 00:10:15,839
so where the user becomes the adversary

278
00:10:15,839 --> 00:10:17,680
so we only need to consider the sinus

279
00:10:17,680 --> 00:10:19,920
protocol here

280
00:10:19,920 --> 00:10:21,680
so i would now describe how one can

281
00:10:21,680 --> 00:10:22,800
break the

282
00:10:22,800 --> 00:10:25,040
one more feasibility of blind snore by

283
00:10:25,040 --> 00:10:28,399
solving the corresponding rs problem

284
00:10:28,399 --> 00:10:31,040
so consider anniversary

285
00:10:31,040 --> 00:10:34,160
that starts two concurrent signing

286
00:10:34,160 --> 00:10:35,200
sessions

287
00:10:35,200 --> 00:10:37,440
so here i use subscript ones to know the

288
00:10:37,440 --> 00:10:39,839
first signing sessions and the subscript

289
00:10:39,839 --> 00:10:42,560
two to know the second

290
00:10:42,560 --> 00:10:45,120
so firstly i will show how we can

291
00:10:45,120 --> 00:10:46,560
generate a signature

292
00:10:46,560 --> 00:10:48,640
which is a linear combination of two

293
00:10:48,640 --> 00:10:50,399
sessions

294
00:10:50,399 --> 00:10:53,040
and then we'll show how we can extend it

295
00:10:53,040 --> 00:10:55,200
to an attack where the rosary can output

296
00:10:55,200 --> 00:10:57,360
three distinct and valid methane and

297
00:10:57,360 --> 00:10:58,720
signature pairs

298
00:10:58,720 --> 00:11:00,399
and then we'll see where the ios

299
00:11:00,399 --> 00:11:03,200
problems appears

300
00:11:03,200 --> 00:11:06,560
the first of all to combine two sessions

301
00:11:06,560 --> 00:11:08,399
diverse three can pick two arbitrary

302
00:11:08,399 --> 00:11:10,880
coefficients r one alpha two together

303
00:11:10,880 --> 00:11:12,800
with a message m

304
00:11:12,800 --> 00:11:14,959
and now the officer is that a should be

305
00:11:14,959 --> 00:11:18,959
a1 to alpha 1 times a2 to the over 2

306
00:11:18,959 --> 00:11:21,440
and that c to be the hash of a and the

307
00:11:21,440 --> 00:11:23,519
message

308
00:11:23,519 --> 00:11:26,160
and then reverse we can pick c1 and c2

309
00:11:26,160 --> 00:11:28,959
such that the value c is a linear

310
00:11:28,959 --> 00:11:31,360
combination of c1 and c2 is coefficient

311
00:11:31,360 --> 00:11:32,720
alpha

312
00:11:32,720 --> 00:11:34,399
and after the university received the

313
00:11:34,399 --> 00:11:37,920
cs1 and s2 from uh the signer university

314
00:11:37,920 --> 00:11:39,839
now said s to also be a linear

315
00:11:39,839 --> 00:11:42,160
combination of s1 and s2 with

316
00:11:42,160 --> 00:11:44,560
coefficient alpha

317
00:11:44,560 --> 00:11:46,800
and i will show that then the cs is a

318
00:11:46,800 --> 00:11:49,680
valid signature for for the message

319
00:11:49,680 --> 00:11:51,920
to see why this is the case we can see

320
00:11:51,920 --> 00:11:53,920
from the signing pro

321
00:11:53,920 --> 00:11:56,560
signing protocol we can get these two

322
00:11:56,560 --> 00:11:57,680
equations

323
00:11:57,680 --> 00:11:59,519
and then we can linearly combine this

324
00:11:59,519 --> 00:12:02,079
equation with coefficient alpha and now

325
00:12:02,079 --> 00:12:04,399
let's write g to the value on both sides

326
00:12:04,399 --> 00:12:06,639
of the equation

327
00:12:06,639 --> 00:12:08,560
so from the left hand side we get g to

328
00:12:08,560 --> 00:12:09,519
the s

329
00:12:09,519 --> 00:12:13,200
and from the first two terms of the

330
00:12:13,200 --> 00:12:15,600
of the right hand side we get

331
00:12:15,600 --> 00:12:17,760
basically give you a

332
00:12:17,760 --> 00:12:20,399
and from the last term it gives you the

333
00:12:20,399 --> 00:12:22,959
x to the c so this is exactly what we

334
00:12:22,959 --> 00:12:26,800
need to show the signature is valid

335
00:12:26,800 --> 00:12:29,760
and now to extend it to an attack the

336
00:12:29,760 --> 00:12:32,399
idea is that instead of picking just one

337
00:12:32,399 --> 00:12:35,680
triple of r1r2 and message we now pick

338
00:12:35,680 --> 00:12:36,880
three of them

339
00:12:36,880 --> 00:12:39,360
and then we pick c1 and c2 such that the

340
00:12:39,360 --> 00:12:41,760
highlighted equation i hold

341
00:12:41,760 --> 00:12:43,200
for all of them

342
00:12:43,200 --> 00:12:44,800
and then the anniversary can output the

343
00:12:44,800 --> 00:12:48,079
signature for each triple

344
00:12:48,079 --> 00:12:50,959
so as you can see the main like the main

345
00:12:50,959 --> 00:12:53,360
problem here to make this attack work is

346
00:12:53,360 --> 00:12:55,920
how to pick this alpha and how to pick

347
00:12:55,920 --> 00:12:59,200
the c1 and c2 and this is exactly the rs

348
00:12:59,200 --> 00:13:02,160
problem for parameter two

349
00:13:02,160 --> 00:13:04,800
however the rs problem is too hard for

350
00:13:04,800 --> 00:13:07,920
for two but we can extend this attack to

351
00:13:07,920 --> 00:13:10,880
arrow sessions easily

352
00:13:10,880 --> 00:13:13,200
and booham mode at all shows that when l

353
00:13:13,200 --> 00:13:15,120
is larger than log p

354
00:13:15,120 --> 00:13:16,079
um

355
00:13:16,079 --> 00:13:18,560
the ros problem is efficiently solvable

356
00:13:18,560 --> 00:13:20,959
so therefore it means

357
00:13:20,959 --> 00:13:23,360
the blind snore is insecure when arrow

358
00:13:23,360 --> 00:13:25,760
is larger than log p

359
00:13:25,760 --> 00:13:29,439
so i will now come to our schemes

360
00:13:30,000 --> 00:13:31,040
so

361
00:13:31,040 --> 00:13:33,839
remember that the key step of doing the

362
00:13:33,839 --> 00:13:36,480
ros attack against blind snore

363
00:13:36,480 --> 00:13:38,320
is that we can

364
00:13:38,320 --> 00:13:40,800
generate a signature which is a linear

365
00:13:40,800 --> 00:13:42,959
combination of two sessions

366
00:13:42,959 --> 00:13:45,519
therefore our idea to avoid it just

367
00:13:45,519 --> 00:13:48,399
simply add a y to this equation so

368
00:13:48,399 --> 00:13:50,399
suppose the y one and y two are chosen

369
00:13:50,399 --> 00:13:52,000
randomly and hidden to the vertices

370
00:13:52,000 --> 00:13:54,480
before picking c one and c two

371
00:13:54,480 --> 00:13:57,519
we find it is not possible anymore to

372
00:13:57,519 --> 00:14:00,880
combine uh two sections to get a signet

373
00:14:00,880 --> 00:14:02,880
sure so basically

374
00:14:02,880 --> 00:14:04,320
we don't know how to

375
00:14:04,320 --> 00:14:06,399
pick the y's here to make the equation

376
00:14:06,399 --> 00:14:07,839
hold

377
00:14:07,839 --> 00:14:09,360
so i will now

378
00:14:09,360 --> 00:14:11,680
describe how we construct our first

379
00:14:11,680 --> 00:14:14,639
scheme with this idea

380
00:14:14,639 --> 00:14:16,240
for simplicity i will only give a

381
00:14:16,240 --> 00:14:18,160
non-blind version here

382
00:14:18,160 --> 00:14:20,800
we can get a perfect live version of it

383
00:14:20,800 --> 00:14:22,160
easily

384
00:14:22,160 --> 00:14:25,680
following some common tricks

385
00:14:25,760 --> 00:14:26,480
so

386
00:14:26,480 --> 00:14:29,120
for our scheme the parameters public

387
00:14:29,120 --> 00:14:30,959
parameter settings and

388
00:14:30,959 --> 00:14:32,720
the key generation are exactly the same

389
00:14:32,720 --> 00:14:34,320
as blind store

390
00:14:34,320 --> 00:14:35,040
and

391
00:14:35,040 --> 00:14:36,639
for doing the signing

392
00:14:36,639 --> 00:14:38,800
assigner will additionally sample the y

393
00:14:38,800 --> 00:14:42,560
which is a non-zero uniformly from zp

394
00:14:42,560 --> 00:14:45,600
and send the x the public key rights to

395
00:14:45,600 --> 00:14:48,079
y to the user

396
00:14:48,079 --> 00:14:49,360
and now

397
00:14:49,360 --> 00:14:51,600
to compute the challenge the hash

398
00:14:51,600 --> 00:14:55,279
function will also take the y as input

399
00:14:55,279 --> 00:14:56,240
and then

400
00:14:56,240 --> 00:14:58,800
the sign will start s to be a plus c

401
00:14:58,800 --> 00:15:00,720
times y times x

402
00:15:00,720 --> 00:15:02,880
and then the final signature now is c s

403
00:15:02,880 --> 00:15:04,320
and y

404
00:15:04,320 --> 00:15:06,800
and to verify it um

405
00:15:06,800 --> 00:15:09,760
we we just reject if y is equal to zero

406
00:15:09,760 --> 00:15:12,639
and otherwise we can recover the a and y

407
00:15:12,639 --> 00:15:15,920
from from the cs and little y and then

408
00:15:15,920 --> 00:15:17,760
checks whether the hash is consistent

409
00:15:17,760 --> 00:15:19,680
with the c value

410
00:15:19,680 --> 00:15:23,040
so one thing to notice here is that

411
00:15:23,040 --> 00:15:25,120
we do not allow y to be zero because it

412
00:15:25,120 --> 00:15:27,040
is easy to for the signature for y to be

413
00:15:27,040 --> 00:15:29,360
0.

414
00:15:29,680 --> 00:15:31,279
for our second scheme the only

415
00:15:31,279 --> 00:15:34,480
difference is that we change the big y

416
00:15:34,480 --> 00:15:37,279
to be a patterson commitment of little y

417
00:15:37,279 --> 00:15:38,720
where the

418
00:15:38,720 --> 00:15:42,000
z as a part of the public key

419
00:15:42,000 --> 00:15:43,920
so

420
00:15:43,920 --> 00:15:45,839
because the commitment

421
00:15:45,839 --> 00:15:48,399
y now is perfectly high is the value of

422
00:15:48,399 --> 00:15:50,800
little y we can relax of assumption from

423
00:15:50,800 --> 00:15:54,480
ggm to agm plus this we log assumption

424
00:15:54,480 --> 00:15:56,240
and also to get a partially blind

425
00:15:56,240 --> 00:15:57,279
version

426
00:15:57,279 --> 00:15:59,839
we just need to change the z to be a

427
00:15:59,839 --> 00:16:02,800
hash of info for each signing where the

428
00:16:02,800 --> 00:16:05,199
info represents the part of message that

429
00:16:05,199 --> 00:16:06,839
is known to the

430
00:16:06,839 --> 00:16:08,399
assignment

431
00:16:08,399 --> 00:16:10,800
and due to the time limit i will

432
00:16:10,800 --> 00:16:13,759
only shows the mean 0 we get for scheme

433
00:16:13,759 --> 00:16:16,000
1

434
00:16:16,240 --> 00:16:18,720
so formally for any ggm anniversary the

435
00:16:18,720 --> 00:16:20,720
probability to break one more

436
00:16:20,720 --> 00:16:22,800
possibility of scheme one

437
00:16:22,800 --> 00:16:25,040
is bounded by the probability

438
00:16:25,040 --> 00:16:27,279
of solving the corresponding wfrs

439
00:16:27,279 --> 00:16:30,959
problem plus an actual term where here

440
00:16:30,959 --> 00:16:32,160
the

441
00:16:32,160 --> 00:16:34,240
qh represents a number of

442
00:16:34,240 --> 00:16:38,000
um uh has queries to the hash function h

443
00:16:38,000 --> 00:16:39,839
and l represents a number of signing

444
00:16:39,839 --> 00:16:42,480
sessions and q5 represents the number of

445
00:16:42,480 --> 00:16:44,000
group operations performed by the

446
00:16:44,000 --> 00:16:45,600
adversary

447
00:16:45,600 --> 00:16:46,399
um

448
00:16:46,399 --> 00:16:47,600
so for

449
00:16:47,600 --> 00:16:49,440
polynomial time anniversary we can see

450
00:16:49,440 --> 00:16:50,560
the

451
00:16:50,560 --> 00:16:53,040
the extra term is actually negligible so

452
00:16:53,040 --> 00:16:54,320
therefore

453
00:16:54,320 --> 00:16:57,120
our scheme 1 is secure as long as the

454
00:16:57,120 --> 00:17:00,800
wfos problem is hard

455
00:17:00,800 --> 00:17:03,759
so for the hardness of wfos

456
00:17:03,759 --> 00:17:05,919
we can show that for any adversary the

457
00:17:05,919 --> 00:17:08,959
probability of solving wfos is bounded

458
00:17:08,959 --> 00:17:13,599
by qh times qh plus 2l over p minus 1.

459
00:17:13,599 --> 00:17:15,119
so we'll

460
00:17:15,119 --> 00:17:18,400
note that p is the original group order

461
00:17:18,400 --> 00:17:20,799
therefore

462
00:17:20,799 --> 00:17:23,520
for anniversary to break to solve wfos

463
00:17:23,520 --> 00:17:26,000
either the qh or l have to be roughly

464
00:17:26,000 --> 00:17:27,199
the

465
00:17:27,199 --> 00:17:30,160
scale of square root of p which implies

466
00:17:30,160 --> 00:17:33,760
the exponential security of our scheme

467
00:17:33,760 --> 00:17:35,679
so finally i would like to

468
00:17:35,679 --> 00:17:37,840
convey some ideas behind how we define

469
00:17:37,840 --> 00:17:39,200
wros

470
00:17:39,200 --> 00:17:40,480
and

471
00:17:40,480 --> 00:17:42,640
why it is hard

472
00:17:42,640 --> 00:17:45,120
so recall that the

473
00:17:45,120 --> 00:17:48,320
our main intuition was that in our

474
00:17:48,320 --> 00:17:49,679
construction

475
00:17:49,679 --> 00:17:52,559
it's not possible to combine um two

476
00:17:52,559 --> 00:17:55,120
linear two sessions linearly to get a

477
00:17:55,120 --> 00:17:56,240
signature

478
00:17:56,240 --> 00:17:58,080
however actually there are other ways

479
00:17:58,080 --> 00:18:01,840
that one can combine two sessions

480
00:18:01,919 --> 00:18:03,200
for example

481
00:18:03,200 --> 00:18:05,600
a trivial way is that we can set both c1

482
00:18:05,600 --> 00:18:08,160
and c2 to just be the c

483
00:18:08,160 --> 00:18:09,600
and then we can find we can linearly

484
00:18:09,600 --> 00:18:11,120
combine these two equations and get a

485
00:18:11,120 --> 00:18:12,320
signature

486
00:18:12,320 --> 00:18:15,440
but however this will does not help at

487
00:18:15,440 --> 00:18:17,440
all to break the security

488
00:18:17,440 --> 00:18:18,880
because if you're thinking about it what

489
00:18:18,880 --> 00:18:20,640
you're doing is just getting one

490
00:18:20,640 --> 00:18:23,039
signature from two signing sessions and

491
00:18:23,039 --> 00:18:24,880
then both sessions cannot be used for

492
00:18:24,880 --> 00:18:27,120
generating other signatures

493
00:18:27,120 --> 00:18:29,520
so basically this action does not help

494
00:18:29,520 --> 00:18:30,960
but

495
00:18:30,960 --> 00:18:33,120
um however it is unclear whether the

496
00:18:33,120 --> 00:18:36,000
bursary can do some other arbitrary

497
00:18:36,000 --> 00:18:38,000
things other combinations

498
00:18:38,000 --> 00:18:40,840
so we define this following wfrs

499
00:18:40,840 --> 00:18:43,840
problem to captures all possible way the

500
00:18:43,840 --> 00:18:45,919
university can combine different

501
00:18:45,919 --> 00:18:47,919
sessions to get a new signature but due

502
00:18:47,919 --> 00:18:49,760
to the time limit i will not go into

503
00:18:49,760 --> 00:18:51,120
details here

504
00:18:51,120 --> 00:18:52,240
but

505
00:18:52,240 --> 00:18:55,360
the main reason why wfs is hard is

506
00:18:55,360 --> 00:18:56,559
because

507
00:18:56,559 --> 00:18:58,559
essentially the only way that the rosary

508
00:18:58,559 --> 00:19:00,640
can break sorry can combine different

509
00:19:00,640 --> 00:19:03,280
sections is the trivia way i showed in

510
00:19:03,280 --> 00:19:05,280
previous slides and this is mainly

511
00:19:05,280 --> 00:19:09,200
because we have sample random y here

512
00:19:09,200 --> 00:19:11,039
so by the end i would like to mention a

513
00:19:11,039 --> 00:19:13,520
few open problems

514
00:19:13,520 --> 00:19:14,480
so

515
00:19:14,480 --> 00:19:15,760
first of all

516
00:19:15,760 --> 00:19:18,480
um all of our results assume either the

517
00:19:18,480 --> 00:19:20,160
agm or ggn

518
00:19:20,160 --> 00:19:23,360
so a big open problem is whether

519
00:19:23,360 --> 00:19:25,120
we can get um

520
00:19:25,120 --> 00:19:27,039
snore style schemes with exponential

521
00:19:27,039 --> 00:19:29,280
security assuming only the random

522
00:19:29,280 --> 00:19:31,039
oracles

523
00:19:31,039 --> 00:19:32,559
also it's interesting to know whether

524
00:19:32,559 --> 00:19:35,760
there are other applications for wfos

525
00:19:35,760 --> 00:19:38,640
so yeah that's all my uh my talks thank

526
00:19:38,640 --> 00:19:41,440
you for listening

527
00:19:46,720 --> 00:19:49,200
well thank you so much

528
00:19:49,200 --> 00:19:51,679
do we have any questions

529
00:19:51,679 --> 00:19:54,400
for the speaker

530
00:19:59,280 --> 00:20:00,400
perhaps

531
00:20:00,400 --> 00:20:02,080
i can ask

532
00:20:02,080 --> 00:20:02,799
so

533
00:20:02,799 --> 00:20:05,120
intuitively why do you need algebraic

534
00:20:05,120 --> 00:20:08,640
group model and not not standard model

535
00:20:08,640 --> 00:20:10,320
um where you've got

536
00:20:10,320 --> 00:20:12,400
this necessity of it in your

537
00:20:12,400 --> 00:20:14,000
construction

538
00:20:14,000 --> 00:20:16,559
yeah actually so yeah so the main reason

539
00:20:16,559 --> 00:20:19,200
like we need the algebraic model that's

540
00:20:19,200 --> 00:20:21,440
because we need to extract basically

541
00:20:21,440 --> 00:20:24,480
what's the adversary do

542
00:20:24,480 --> 00:20:27,600
so basically we extract our fun and beta

543
00:20:27,600 --> 00:20:29,120
so basically that represents what the

544
00:20:29,120 --> 00:20:30,400
university do to combine different

545
00:20:30,400 --> 00:20:32,880
sessions so our main argument is that if

546
00:20:32,880 --> 00:20:34,799
they do something like that the

547
00:20:34,799 --> 00:20:36,880
anniversary cannot break the scheme but

548
00:20:36,880 --> 00:20:38,799
if you're in a standard model you have

549
00:20:38,799 --> 00:20:40,880
no idea what it was really do

550
00:20:40,880 --> 00:20:42,720
although it might not be able to do

551
00:20:42,720 --> 00:20:44,480
something more but like we just don't

552
00:20:44,480 --> 00:20:47,520
have form argument to argue that

553
00:20:47,520 --> 00:20:48,480
okay

554
00:20:48,480 --> 00:20:49,840
this makes sense

555
00:20:49,840 --> 00:20:52,400
uh thank you so much yeah thank you

556
00:20:52,400 --> 00:20:54,960
if there's no further questions

557
00:20:54,960 --> 00:20:59,640
then let's thank the speaker again

