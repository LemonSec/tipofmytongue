1
00:00:11,040 --> 00:00:14,360
what's up

2
00:00:16,079 --> 00:00:17,680
hello everyone

3
00:00:17,680 --> 00:00:19,920
it's working it's working

4
00:00:19,920 --> 00:00:21,760
so welcome back to

5
00:00:21,760 --> 00:00:24,160
um to our um

6
00:00:24,160 --> 00:00:26,320
one of our last sessions on

7
00:00:26,320 --> 00:00:28,080
primitives three

8
00:00:28,080 --> 00:00:30,400
um before we start we have a couple of

9
00:00:30,400 --> 00:00:32,320
announcements so remember today there is

10
00:00:32,320 --> 00:00:34,079
this organ concert

11
00:00:34,079 --> 00:00:37,040
um you can find the instructions on um

12
00:00:37,040 --> 00:00:39,040
on the webpage they have been posted

13
00:00:39,040 --> 00:00:42,719
there are a few buses um one it's at

14
00:00:42,719 --> 00:00:45,520
5 40 and and the other at uh

15
00:00:45,520 --> 00:00:48,719
five past six but we encourage everyone

16
00:00:48,719 --> 00:00:50,879
to walk so there will be a walking

17
00:00:50,879 --> 00:00:53,280
caravan um leaving

18
00:00:53,280 --> 00:00:54,719
from the

19
00:00:54,719 --> 00:00:57,520
here from the front door at

20
00:00:57,520 --> 00:00:59,680
quarter to six because we don't have

21
00:00:59,680 --> 00:01:02,000
enough buses for everybody

22
00:01:02,000 --> 00:01:05,199
um another announcement is that we found

23
00:01:05,199 --> 00:01:06,159
a

24
00:01:06,159 --> 00:01:08,560
mobile phone so please check

25
00:01:08,560 --> 00:01:10,720
if you have your mobile phone

26
00:01:10,720 --> 00:01:13,760
and just come on the front uh desk to

27
00:01:13,760 --> 00:01:15,200
get it

28
00:01:15,200 --> 00:01:18,320
okay so now um we start the session and

29
00:01:18,320 --> 00:01:21,360
the first talk will be given by kuto

30
00:01:21,360 --> 00:01:23,200
who presents joint work with chris

31
00:01:23,200 --> 00:01:25,520
bruska on building fine fine-grained

32
00:01:25,520 --> 00:01:27,680
one-way functions from strong average

33
00:01:27,680 --> 00:01:29,680
case partners so

34
00:01:29,680 --> 00:01:33,040
thank you very much uh

35
00:01:33,920 --> 00:01:35,759
yep okay perfect

36
00:01:35,759 --> 00:01:39,680
so um so the story starts with uh uh a

37
00:01:39,680 --> 00:01:42,960
1995 work of uh russell impartly had so

38
00:01:42,960 --> 00:01:45,680
who asked what world do we live in right

39
00:01:45,680 --> 00:01:47,920
because we cryptographers we uh we hope

40
00:01:47,920 --> 00:01:49,360
and believe that that we live in a world

41
00:01:49,360 --> 00:01:51,840
that uh recently impacted all coined

42
00:01:51,840 --> 00:01:53,920
cryptomania or public cryptography

43
00:01:53,920 --> 00:01:55,759
exists so we get to write nice papers

44
00:01:55,759 --> 00:01:58,719
attendance conferences and also secure

45
00:01:58,719 --> 00:01:59,680
data

46
00:01:59,680 --> 00:02:01,439
and there's also the possibility that we

47
00:02:01,439 --> 00:02:03,600
don't have public encryption to public a

48
00:02:03,600 --> 00:02:05,680
crypto but we still have symmetrical

49
00:02:05,680 --> 00:02:07,680
cryptography so we can still do

50
00:02:07,680 --> 00:02:09,598
many things

51
00:02:09,598 --> 00:02:11,120
of interest

52
00:02:11,120 --> 00:02:13,280
at the other end of the spectrum there

53
00:02:13,280 --> 00:02:14,800
is the possibilities that p is equal to

54
00:02:14,800 --> 00:02:16,879
np so all cryptos broken

55
00:02:16,879 --> 00:02:18,720
but many people in the more algorithmic

56
00:02:18,720 --> 00:02:20,319
side are happy because they can solve

57
00:02:20,319 --> 00:02:21,440
the traveling

58
00:02:21,440 --> 00:02:23,840
problem so they're uh very happy about

59
00:02:23,840 --> 00:02:24,480
it

60
00:02:24,480 --> 00:02:26,160
and that would also be fine if they

61
00:02:26,160 --> 00:02:28,160
lived in the world heuristica or p is

62
00:02:28,160 --> 00:02:30,400
not equal to np but p is still equal to

63
00:02:30,400 --> 00:02:32,080
np on average so you still don't have

64
00:02:32,080 --> 00:02:34,720
crypto but you can solve all np problems

65
00:02:34,720 --> 00:02:36,640
very efficiently on the rage

66
00:02:36,640 --> 00:02:38,720
so essentially in those four words some

67
00:02:38,720 --> 00:02:41,440
computer scientists are always happy

68
00:02:41,440 --> 00:02:43,280
then there is the middle possibility the

69
00:02:43,280 --> 00:02:44,560
fifth world

70
00:02:44,560 --> 00:02:46,800
which in particular so called pesilent

71
00:02:46,800 --> 00:02:48,959
which is a logical possibility that

72
00:02:48,959 --> 00:02:50,400
cryptography does not exist you don't

73
00:02:50,400 --> 00:02:52,480
have one-way functions nothing

74
00:02:52,480 --> 00:02:54,319
but you have a lot of

75
00:02:54,319 --> 00:02:56,319
np problems which are hard and of rage

76
00:02:56,319 --> 00:02:58,879
so you don't get even fast algorithms

77
00:02:58,879 --> 00:03:01,120
so that's the worst of all possible lens

78
00:03:01,120 --> 00:03:03,360
and something often called impact vs

79
00:03:03,360 --> 00:03:04,720
program will be

80
00:03:04,720 --> 00:03:06,959
is can we rule out this world can we

81
00:03:06,959 --> 00:03:09,440
show that computer scientists are bound

82
00:03:09,440 --> 00:03:12,640
to be at least somewhat happy

83
00:03:13,040 --> 00:03:14,319
if we could do that that would be a

84
00:03:14,319 --> 00:03:16,000
win-win for humanity we will know that

85
00:03:16,000 --> 00:03:17,920
either we do have some crypto or we have

86
00:03:17,920 --> 00:03:21,040
fast algorithms unfortunately uh it

87
00:03:21,040 --> 00:03:23,040
turns out to be a very hard problem

88
00:03:23,040 --> 00:03:25,360
and the core issue is that if we look at

89
00:03:25,360 --> 00:03:27,200
the hierarchy of hardness assumptions

90
00:03:27,200 --> 00:03:29,200
related to this world so the bottoming

91
00:03:29,200 --> 00:03:31,040
was hardness the top being public

92
00:03:31,040 --> 00:03:32,480
encryption

93
00:03:32,480 --> 00:03:33,760
we know that there are black box

94
00:03:33,760 --> 00:03:36,560
separations between any two of these

95
00:03:36,560 --> 00:03:38,640
harnessed assumptions so it's not

96
00:03:38,640 --> 00:03:40,720
possible to rule out the existence of

97
00:03:40,720 --> 00:03:42,560
some of these the logical possibility of

98
00:03:42,560 --> 00:03:44,319
these words just using black box

99
00:03:44,319 --> 00:03:46,720
techniques

100
00:03:46,720 --> 00:03:48,959
what might save us or where we can find

101
00:03:48,959 --> 00:03:50,560
an array of hope is that the real

102
00:03:50,560 --> 00:03:53,280
landscape is actually a bit more subtle

103
00:03:53,280 --> 00:03:54,799
it's known that in some levels of this

104
00:03:54,799 --> 00:03:56,000
hierarchy

105
00:03:56,000 --> 00:03:58,560
if we look at extreme hardness then that

106
00:03:58,560 --> 00:03:59,840
gets us

107
00:03:59,840 --> 00:04:01,599
somewhat in the higher level so for

108
00:04:01,599 --> 00:04:03,760
example exponential worst case hardness

109
00:04:03,760 --> 00:04:05,760
does imply average case hardness this is

110
00:04:05,760 --> 00:04:08,080
classical least decoding algorithms or

111
00:04:08,080 --> 00:04:09,680
at the top of the hierarchy if you have

112
00:04:09,680 --> 00:04:12,080
exponentially hard runway functions this

113
00:04:12,080 --> 00:04:14,480
actually gives you quadratically hard

114
00:04:14,480 --> 00:04:16,478
public encryption

115
00:04:16,478 --> 00:04:18,238
so maybe there is hope and the main

116
00:04:18,238 --> 00:04:20,560
question we ask is

117
00:04:20,560 --> 00:04:22,240
could it be possible that extreme

118
00:04:22,240 --> 00:04:24,560
average case hardness suffices to imply

119
00:04:24,560 --> 00:04:27,360
a very weak form of one-way functions

120
00:04:27,360 --> 00:04:30,800
so this is what we study in this talk

121
00:04:30,800 --> 00:04:32,479
so if we could do that we could rule out

122
00:04:32,479 --> 00:04:34,560
an extreme version of pestilence the

123
00:04:34,560 --> 00:04:36,560
worst of all possible lens

124
00:04:36,560 --> 00:04:38,479
so i have to explain a bit more what we

125
00:04:38,479 --> 00:04:40,720
mean by very weak one-way functions and

126
00:04:40,720 --> 00:04:42,639
extreme average hardness

127
00:04:42,639 --> 00:04:44,400
by very weak one-way functions in this

128
00:04:44,400 --> 00:04:46,320
torque i will mean specifically fine

129
00:04:46,320 --> 00:04:48,560
grind one-way functions i'll explain

130
00:04:48,560 --> 00:04:50,240
right after what it means but it's

131
00:04:50,240 --> 00:04:52,479
possibly one of the weakest notions of

132
00:04:52,479 --> 00:04:55,120
one-way functions you could imagine

133
00:04:55,120 --> 00:04:57,040
then for extreme refresh hardness we

134
00:04:57,040 --> 00:04:59,759
look at different notions right from the

135
00:04:59,759 --> 00:05:01,840
from the weaker to the stronger which we

136
00:05:01,840 --> 00:05:03,520
call exponential risk hardness

137
00:05:03,520 --> 00:05:05,680
amplifiable average hardness and a new

138
00:05:05,680 --> 00:05:07,039
notion that we call block finding

139
00:05:07,039 --> 00:05:09,120
average gas hardness so let's explain

140
00:05:09,120 --> 00:05:11,199
these terms before i can go on with with

141
00:05:11,199 --> 00:05:12,800
the results

142
00:05:12,800 --> 00:05:14,479
what's the find when runway function

143
00:05:14,479 --> 00:05:16,080
well your typical one-way function takes

144
00:05:16,080 --> 00:05:18,240
time n to evaluate and maybe two to the

145
00:05:18,240 --> 00:05:20,479
end to invert or something way too long

146
00:05:20,479 --> 00:05:22,400
find one only function we just want that

147
00:05:22,400 --> 00:05:24,400
inverting text takes time at least n to

148
00:05:24,400 --> 00:05:26,080
the one plus epsilon for some positive

149
00:05:26,080 --> 00:05:28,960
constant epsilon right it's slightly

150
00:05:28,960 --> 00:05:31,280
harder to invert than it is to evaluate

151
00:05:31,280 --> 00:05:33,680
it's really the minimal amount of

152
00:05:33,680 --> 00:05:35,680
non-triviality to get something that the

153
00:05:35,680 --> 00:05:37,919
adversary can't do as efficiently as

154
00:05:37,919 --> 00:05:39,199
yourself

155
00:05:39,199 --> 00:05:40,400
so this is a fine-grained one-way

156
00:05:40,400 --> 00:05:41,360
function

157
00:05:41,360 --> 00:05:42,960
and then we have these uh various

158
00:05:42,960 --> 00:05:45,120
notions of average case harness so

159
00:05:45,120 --> 00:05:46,639
exponential average cause hardness is

160
00:05:46,639 --> 00:05:48,000
quite natural

161
00:05:48,000 --> 00:05:49,600
essentially what it says is that if you

162
00:05:49,600 --> 00:05:51,360
have an np language the best an

163
00:05:51,360 --> 00:05:52,880
adversary can do

164
00:05:52,880 --> 00:05:54,800
to find whether to find out whether

165
00:05:54,800 --> 00:05:57,039
words belong to the language is

166
00:05:57,039 --> 00:05:59,600
try all possible witnesses uh in

167
00:05:59,600 --> 00:06:01,600
exponential time until it lands on the

168
00:06:01,600 --> 00:06:02,880
witness

169
00:06:02,880 --> 00:06:05,039
so that maybe it can get some speed up

170
00:06:05,039 --> 00:06:06,960
but in the end it will still take

171
00:06:06,960 --> 00:06:09,360
exponential time to decide membership to

172
00:06:09,360 --> 00:06:10,800
the language

173
00:06:10,800 --> 00:06:12,479
so if we could though show that

174
00:06:12,479 --> 00:06:14,319
exponential versus hardness implies

175
00:06:14,319 --> 00:06:15,759
fingering on my functions we will get a

176
00:06:15,759 --> 00:06:17,919
win-win result which is that we either

177
00:06:17,919 --> 00:06:20,400
have some weak form of cryptography or

178
00:06:20,400 --> 00:06:22,400
all np languages can be decided in time

179
00:06:22,400 --> 00:06:23,680
less than two to the end on the right

180
00:06:23,680 --> 00:06:25,600
that would be nice

181
00:06:25,600 --> 00:06:27,759
unfortunately our first result is that

182
00:06:27,759 --> 00:06:29,440
this is not possible with black box

183
00:06:29,440 --> 00:06:31,600
proof techniques

184
00:06:31,600 --> 00:06:33,600
so this result turns out to be actually

185
00:06:33,600 --> 00:06:35,120
not too hard

186
00:06:35,120 --> 00:06:36,720
but what we would really like of course

187
00:06:36,720 --> 00:06:39,199
will be a positive result so we say okay

188
00:06:39,199 --> 00:06:40,960
what happens if we start from even

189
00:06:40,960 --> 00:06:42,720
stronger notions of average hardness

190
00:06:42,720 --> 00:06:44,479
what do we get out of that

191
00:06:44,479 --> 00:06:46,319
the first natural candidate

192
00:06:46,319 --> 00:06:48,240
is what we call amplifiable averages

193
00:06:48,240 --> 00:06:50,720
hardness so remember at uh average class

194
00:06:50,720 --> 00:06:52,400
harness exponential versus hardness i

195
00:06:52,400 --> 00:06:54,000
give you a word you have to decide

196
00:06:54,000 --> 00:06:55,360
whether it's in the language it takes

197
00:06:55,360 --> 00:06:56,720
time to use the n

198
00:06:56,720 --> 00:06:58,639
i say that it's amplifiable if when i

199
00:06:58,639 --> 00:07:00,960
give you m words to decide for all of

200
00:07:00,960 --> 00:07:02,319
them if they belong to the language you

201
00:07:02,319 --> 00:07:04,400
need times m times two to the n

202
00:07:04,400 --> 00:07:05,919
right the more you have words the more

203
00:07:05,919 --> 00:07:08,319
you need to spend time to decide

204
00:07:08,319 --> 00:07:09,280
so

205
00:07:09,280 --> 00:07:10,880
basing franklin runway function on this

206
00:07:10,880 --> 00:07:12,479
will still give a win-win for humanity

207
00:07:12,479 --> 00:07:14,800
because you would either have crypto or

208
00:07:14,800 --> 00:07:15,599
a

209
00:07:15,599 --> 00:07:17,680
faster than 2d algorithm to decide all

210
00:07:17,680 --> 00:07:20,240
np languages when amortizing over many

211
00:07:20,240 --> 00:07:22,400
instances so that would already be nice

212
00:07:22,400 --> 00:07:23,520
win-win

213
00:07:23,520 --> 00:07:25,759
and another motivation for this study is

214
00:07:25,759 --> 00:07:27,680
that is that in the past assuming

215
00:07:27,680 --> 00:07:29,599
nanometers ability has been the key to

216
00:07:29,599 --> 00:07:32,000
circumvent some impossibility results so

217
00:07:32,000 --> 00:07:34,479
it helped for example getting uh n

218
00:07:34,479 --> 00:07:36,080
squared the hard public key encryption

219
00:07:36,080 --> 00:07:38,319
with negligible security error so there

220
00:07:38,319 --> 00:07:40,400
the authors had to assume a dream exomas

221
00:07:40,400 --> 00:07:42,080
that says that x-raying hard predicate

222
00:07:42,080 --> 00:07:44,400
simplifies artists optimally and without

223
00:07:44,400 --> 00:07:46,000
it it's black box impossible to achieve

224
00:07:46,000 --> 00:07:47,199
that

225
00:07:47,199 --> 00:07:49,280
or it was also used in a very nice

226
00:07:49,280 --> 00:07:50,720
recent work to show that if you have

227
00:07:50,720 --> 00:07:52,639
one-way functions with some amplifiable

228
00:07:52,639 --> 00:07:54,560
hardness then you get collision recent

229
00:07:54,560 --> 00:07:55,919
hash functions

230
00:07:55,919 --> 00:07:57,840
while without it it's a black box

231
00:07:57,840 --> 00:07:59,919
impossible so we thought okay maybe this

232
00:07:59,919 --> 00:08:01,759
is the key to getting our finger in one

233
00:08:01,759 --> 00:08:03,120
way function

234
00:08:03,120 --> 00:08:05,599
and it was not so our second result is

235
00:08:05,599 --> 00:08:07,039
that there is still no black box

236
00:08:07,039 --> 00:08:08,240
construction of fingering runway

237
00:08:08,240 --> 00:08:10,160
function for any arbitrarily small

238
00:08:10,160 --> 00:08:12,800
constant epsilon even starting from this

239
00:08:12,800 --> 00:08:14,639
insanely strong notion of average guy's

240
00:08:14,639 --> 00:08:15,840
hardness

241
00:08:15,840 --> 00:08:18,720
so not great for humanity but

242
00:08:18,720 --> 00:08:20,560
let's not stop here and then so we

243
00:08:20,560 --> 00:08:22,560
looked at an even stronger hardness

244
00:08:22,560 --> 00:08:23,520
notion

245
00:08:23,520 --> 00:08:25,599
which we call block finding hardness

246
00:08:25,599 --> 00:08:28,000
so the previous one said i give you

247
00:08:28,000 --> 00:08:30,319
m words if you have to decide for all of

248
00:08:30,319 --> 00:08:31,919
them whether they belong to the language

249
00:08:31,919 --> 00:08:33,760
you need to spend times m times 2 to the

250
00:08:33,760 --> 00:08:34,559
n

251
00:08:34,559 --> 00:08:35,919
block finding harness says that

252
00:08:35,919 --> 00:08:38,080
something that it's even hard to decide

253
00:08:38,080 --> 00:08:39,760
something about the membership of these

254
00:08:39,760 --> 00:08:41,760
words to the language so for example i

255
00:08:41,760 --> 00:08:44,800
give you the pattern 0 1 0 0 and i tell

256
00:08:44,800 --> 00:08:46,880
you can you find four consecutive words

257
00:08:46,880 --> 00:08:48,160
such that if you look at whether they

258
00:08:48,160 --> 00:08:49,839
belong to the language or not the answer

259
00:08:49,839 --> 00:08:52,640
will give you 0 1 0 0.

260
00:08:52,640 --> 00:08:54,720
so block finding hardness essentially

261
00:08:54,720 --> 00:08:56,800
says that just to answer this question

262
00:08:56,800 --> 00:08:59,040
can you find a pattern of membership

263
00:08:59,040 --> 00:09:00,959
bits uh for uh

264
00:09:00,959 --> 00:09:03,760
for m words this already requires time m

265
00:09:03,760 --> 00:09:06,320
times 2 to the n

266
00:09:06,320 --> 00:09:07,839
so that will still give some very weak

267
00:09:07,839 --> 00:09:09,839
positive like win-win result right if we

268
00:09:09,839 --> 00:09:11,920
had fingernail information from that

269
00:09:11,920 --> 00:09:14,160
either you have crypto or you can decide

270
00:09:14,160 --> 00:09:16,480
something non-trivial about the

271
00:09:16,480 --> 00:09:18,640
membership the pattern of membership

272
00:09:18,640 --> 00:09:20,720
bits for all np languages

273
00:09:20,720 --> 00:09:22,800
quite weak though but still from this

274
00:09:22,800 --> 00:09:24,800
one we do manage to get a fine grinder

275
00:09:24,800 --> 00:09:25,920
on my function

276
00:09:25,920 --> 00:09:28,320
with a quadratic hardness gap so it

277
00:09:28,320 --> 00:09:30,560
rules out at least some extreme extreme

278
00:09:30,560 --> 00:09:33,279
version of pesiland if you want

279
00:09:33,279 --> 00:09:35,040
so in the rest of this talk i'll go over

280
00:09:35,040 --> 00:09:37,440
the techniques we introduced to to solve

281
00:09:37,440 --> 00:09:40,080
these problems and one central unifying

282
00:09:40,080 --> 00:09:42,480
theme is a notion of a random language

283
00:09:42,480 --> 00:09:43,519
in np

284
00:09:43,519 --> 00:09:45,519
so what's a random language well take a

285
00:09:45,519 --> 00:09:48,240
universe okay many possible words in it

286
00:09:48,240 --> 00:09:49,760
and you flip a coin for each of these

287
00:09:49,760 --> 00:09:51,760
words with 31 over 2 you put it in the

288
00:09:51,760 --> 00:09:53,279
language with priority 1 over 2 you put

289
00:09:53,279 --> 00:09:54,880
it outside of the language so then your

290
00:09:54,880 --> 00:09:56,160
language in the end contains roughly

291
00:09:56,160 --> 00:09:57,760
half of the words

292
00:09:57,760 --> 00:09:59,600
no i want this language to be an np so i

293
00:09:59,600 --> 00:10:01,760
take a set of witnesses

294
00:10:01,760 --> 00:10:04,240
and for each word of the universe i pick

295
00:10:04,240 --> 00:10:06,000
a uniformly random witness in the set

296
00:10:06,000 --> 00:10:07,360
and i say that this is a witness

297
00:10:07,360 --> 00:10:09,600
associated to this world

298
00:10:09,600 --> 00:10:11,120
okay

299
00:10:11,120 --> 00:10:12,640
and then i give a check oracle to the

300
00:10:12,640 --> 00:10:15,200
adversary so this check oracle receives

301
00:10:15,200 --> 00:10:17,920
queries of the form xw where x is a word

302
00:10:17,920 --> 00:10:20,240
and w is a candidate witness

303
00:10:20,240 --> 00:10:22,160
and the check oracle checks whether this

304
00:10:22,160 --> 00:10:23,680
is the right witness associated to this

305
00:10:23,680 --> 00:10:25,120
word if it is

306
00:10:25,120 --> 00:10:26,720
then it tells you whether the word was

307
00:10:26,720 --> 00:10:29,440
in the language or not if it's not it

308
00:10:29,440 --> 00:10:31,040
tells you nothing

309
00:10:31,040 --> 00:10:32,959
so this is equivalent to taking a random

310
00:10:32,959 --> 00:10:35,440
language in np-intersect co-np

311
00:10:35,440 --> 00:10:37,680
and when the adversary manages to find

312
00:10:37,680 --> 00:10:39,600
the right witness we call his query a

313
00:10:39,600 --> 00:10:41,360
hit okay it's a terminology that i'm

314
00:10:41,360 --> 00:10:43,279
going to use a lot in the rest of this

315
00:10:43,279 --> 00:10:44,880
talk

316
00:10:44,880 --> 00:10:46,800
so the point of these random languages

317
00:10:46,800 --> 00:10:48,640
well there are there are two points

318
00:10:48,640 --> 00:10:51,519
first they help us checking that

319
00:10:51,519 --> 00:10:53,279
hypothesis we make about average because

320
00:10:53,279 --> 00:10:55,279
our languages are plausible because we

321
00:10:55,279 --> 00:10:57,360
can check whether they at least hold for

322
00:10:57,360 --> 00:10:58,959
a random language

323
00:10:58,959 --> 00:11:00,959
and it's also the basis for all of our

324
00:11:00,959 --> 00:11:03,760
black box separations

325
00:11:03,760 --> 00:11:06,320
so more precisely we prove three things

326
00:11:06,320 --> 00:11:08,079
uh we prove that a random language

327
00:11:08,079 --> 00:11:10,480
satisfies block finding hardness

328
00:11:10,480 --> 00:11:11,760
so that gives support for the

329
00:11:11,760 --> 00:11:13,440
plausibility of this strong notion of

330
00:11:13,440 --> 00:11:15,519
block finding hardness in the same way

331
00:11:15,519 --> 00:11:17,360
that when you use a new notion about

332
00:11:17,360 --> 00:11:19,200
hash function you will check that it at

333
00:11:19,200 --> 00:11:20,720
least holds for a random oracle so here

334
00:11:20,720 --> 00:11:21,920
we do the same but with a random

335
00:11:21,920 --> 00:11:24,079
language

336
00:11:24,079 --> 00:11:24,880
then

337
00:11:24,880 --> 00:11:26,720
we prove that random language are

338
00:11:26,720 --> 00:11:28,320
extremely

339
00:11:28,320 --> 00:11:31,279
hard to solve even if you weaken them so

340
00:11:31,279 --> 00:11:33,040
we prove that even if you give to the

341
00:11:33,040 --> 00:11:35,760
adversary an inverter that will agree to

342
00:11:35,760 --> 00:11:37,760
invert all sufficiently

343
00:11:37,760 --> 00:11:39,600
that will sample all sufficiently likely

344
00:11:39,600 --> 00:11:42,800
primages to any oracle circuit

345
00:11:42,800 --> 00:11:45,200
then even relative to this oracle a

346
00:11:45,200 --> 00:11:46,959
random language is still amplifiable

347
00:11:46,959 --> 00:11:49,519
average case hard and yet relative to

348
00:11:49,519 --> 00:11:51,200
this oracle there cannot be any

349
00:11:51,200 --> 00:11:52,800
fingering on my function because you can

350
00:11:52,800 --> 00:11:55,360
invert them with this inverter oracle

351
00:11:55,360 --> 00:11:57,440
so together this result two and three

352
00:11:57,440 --> 00:11:58,720
prove that fine-grained one-way

353
00:11:58,720 --> 00:12:00,800
functions and amplifier amplifiable

354
00:12:00,800 --> 00:12:01,920
hardness

355
00:12:01,920 --> 00:12:04,639
are black box separated

356
00:12:04,639 --> 00:12:06,959
so let's go over this uh this second

357
00:12:06,959 --> 00:12:09,360
result so this two and three

358
00:12:09,360 --> 00:12:11,279
so we use two oracles okay the first one

359
00:12:11,279 --> 00:12:12,639
is this check oracle it's a random

360
00:12:12,639 --> 00:12:14,160
language and you can check whether a

361
00:12:14,160 --> 00:12:15,600
word is in the language or not if you

362
00:12:15,600 --> 00:12:17,279
find the right witness

363
00:12:17,279 --> 00:12:19,040
and the second is an inversion oracle so

364
00:12:19,040 --> 00:12:21,600
intuitively what do we want you feed to

365
00:12:21,600 --> 00:12:23,440
the inversion oracle an oracle circuit

366
00:12:23,440 --> 00:12:25,839
that can call the check the check oracle

367
00:12:25,839 --> 00:12:27,760
and an output and it samples a random

368
00:12:27,760 --> 00:12:29,760
pre-image

369
00:12:29,760 --> 00:12:32,480
however this will be too strong because

370
00:12:32,480 --> 00:12:33,760
think for example about this simple

371
00:12:33,760 --> 00:12:35,040
example

372
00:12:35,040 --> 00:12:36,720
consider the circuit that just text has

373
00:12:36,720 --> 00:12:39,519
input some x and w okay it queries x w

374
00:12:39,519 --> 00:12:41,120
to the check oracle

375
00:12:41,120 --> 00:12:43,760
and it returns x and b where b is the

376
00:12:43,760 --> 00:12:46,720
answer of the check oracle

377
00:12:46,720 --> 00:12:48,240
the solver

378
00:12:48,240 --> 00:12:50,880
who will simply create the inverter on

379
00:12:50,880 --> 00:12:54,240
this circuit together with the output x1

380
00:12:54,240 --> 00:12:55,920
now if x was indeed in the language

381
00:12:55,920 --> 00:12:57,360
which just happens with project one over

382
00:12:57,360 --> 00:12:59,440
two that means that the valid pre-image

383
00:12:59,440 --> 00:13:01,920
will be a valid witness for x so with a

384
00:13:01,920 --> 00:13:04,000
single chord to the inverse oracle i've

385
00:13:04,000 --> 00:13:05,920
been able to completely break all

386
00:13:05,920 --> 00:13:07,440
hardness properties about my language

387
00:13:07,440 --> 00:13:08,800
because i can find the weakness in one

388
00:13:08,800 --> 00:13:10,320
call

389
00:13:10,320 --> 00:13:12,639
but the reason why the adversary managed

390
00:13:12,639 --> 00:13:14,880
to do that is because it asked to invert

391
00:13:14,880 --> 00:13:17,279
an output which was unlikely in the

392
00:13:17,279 --> 00:13:18,959
sense that the pass from the input to

393
00:13:18,959 --> 00:13:21,120
this output makes a single query to

394
00:13:21,120 --> 00:13:23,519
check and this single query makes a hit

395
00:13:23,519 --> 00:13:25,519
and making a hit should be a low

396
00:13:25,519 --> 00:13:27,440
probability event

397
00:13:27,440 --> 00:13:28,880
so what we do is a sequence of

398
00:13:28,880 --> 00:13:31,200
sanitizing of the circuit so first we

399
00:13:31,200 --> 00:13:33,279
look at the all the possible paths from

400
00:13:33,279 --> 00:13:35,120
an input to the output

401
00:13:35,120 --> 00:13:37,200
and we say that if a pass contains too

402
00:13:37,200 --> 00:13:39,040
many hits compared to the average number

403
00:13:39,040 --> 00:13:40,880
of heat it should contain then it's a

404
00:13:40,880 --> 00:13:42,160
heavy pass

405
00:13:42,160 --> 00:13:44,320
and we'll remove all heavy pass and we

406
00:13:44,320 --> 00:13:47,360
will only allow the oracle to answer a

407
00:13:47,360 --> 00:13:50,639
light pass from the input to the output

408
00:13:50,639 --> 00:13:52,800
now for technical reasons we cannot

409
00:13:52,800 --> 00:13:54,639
force all paths to be too light because

410
00:13:54,639 --> 00:13:56,639
if they have too light later we'll have

411
00:13:56,639 --> 00:13:58,480
to do some kind of union bound over all

412
00:13:58,480 --> 00:14:00,079
gates to show that with high probability

413
00:14:00,079 --> 00:14:02,000
for a random input all paths will be

414
00:14:02,000 --> 00:14:03,360
sufficiently light

415
00:14:03,360 --> 00:14:05,519
so to pass this union bond we need to to

416
00:14:05,519 --> 00:14:07,839
to keep some room here and define a path

417
00:14:07,839 --> 00:14:10,079
to be light if it's the average number

418
00:14:10,079 --> 00:14:12,240
of hits plus some kind of bound like

419
00:14:12,240 --> 00:14:14,079
necessary to to to allow this union

420
00:14:14,079 --> 00:14:15,120
bound

421
00:14:15,120 --> 00:14:17,519
and it turns out that this allows for

422
00:14:17,519 --> 00:14:19,839
other attacks based on what happens when

423
00:14:19,839 --> 00:14:22,160
you can make queries to the oracle with

424
00:14:22,160 --> 00:14:24,160
inputs which are too large

425
00:14:24,160 --> 00:14:25,519
and we have a different techniques to

426
00:14:25,519 --> 00:14:27,440
handle those two large queries by

427
00:14:27,440 --> 00:14:28,800
shaving the circuit so you take the

428
00:14:28,800 --> 00:14:31,360
circuit you look at all gates that make

429
00:14:31,360 --> 00:14:32,720
a query to check where the input is too

430
00:14:32,720 --> 00:14:34,639
large and you replace this get it by

431
00:14:34,639 --> 00:14:35,920
dummygate

432
00:14:35,920 --> 00:14:37,839
and we can show with a bit of work that

433
00:14:37,839 --> 00:14:39,920
this suffices to get rid of this

434
00:14:39,920 --> 00:14:42,800
annoying side effect

435
00:14:42,800 --> 00:14:44,560
so proof intuition

436
00:14:44,560 --> 00:14:46,480
suppose you have an adversary

437
00:14:46,480 --> 00:14:48,639
that breaks amplifiable hardness of your

438
00:14:48,639 --> 00:14:50,959
language okay from this adversary we

439
00:14:50,959 --> 00:14:52,639
build an emulation procedure which

440
00:14:52,639 --> 00:14:54,639
accesses the check oracle

441
00:14:54,639 --> 00:14:56,720
and also uses some carefully crafted

442
00:14:56,720 --> 00:14:58,560
advice string which is some information

443
00:14:58,560 --> 00:15:00,160
about l

444
00:15:00,160 --> 00:15:02,399
we show that with this advice string the

445
00:15:02,399 --> 00:15:05,040
emulator is able to correctly emulate

446
00:15:05,040 --> 00:15:08,079
all answers of the inversion oracle yet

447
00:15:08,079 --> 00:15:09,920
the size of the advice string is not too

448
00:15:09,920 --> 00:15:12,800
large it's of bonded size so that means

449
00:15:12,800 --> 00:15:14,240
that if there is an adversary that can

450
00:15:14,240 --> 00:15:16,320
break amplifiable hardness

451
00:15:16,320 --> 00:15:17,600
then we can build from it a new

452
00:15:17,600 --> 00:15:21,199
adversary that can get too many hits

453
00:15:21,199 --> 00:15:24,320
when accessing the czech oracle

454
00:15:24,320 --> 00:15:26,160
when being additionally given a not too

455
00:15:26,160 --> 00:15:28,240
long advice string

456
00:15:28,240 --> 00:15:30,320
and this we show is impossible using a

457
00:15:30,320 --> 00:15:32,160
new abstract technical lemma which we

458
00:15:32,160 --> 00:15:33,920
call the heating element with advice

459
00:15:33,920 --> 00:15:37,279
which i will explain soon after

460
00:15:37,279 --> 00:15:38,639
then there is before that there is the

461
00:15:38,639 --> 00:15:40,320
other side of the proof right we want to

462
00:15:40,320 --> 00:15:42,000
show that relative to these two records

463
00:15:42,000 --> 00:15:43,600
we don't have any fingernail functions

464
00:15:43,600 --> 00:15:45,440
so we have a hard language but we don't

465
00:15:45,440 --> 00:15:47,519
have fingernail functions the intuition

466
00:15:47,519 --> 00:15:49,519
is just take your candidate function on

467
00:15:49,519 --> 00:15:51,680
y function and the output and query to

468
00:15:51,680 --> 00:15:53,440
the inversion oracle and you hope to get

469
00:15:53,440 --> 00:15:54,639
a pre-image

470
00:15:54,639 --> 00:15:55,839
we need to show that this works with

471
00:15:55,839 --> 00:15:57,600
high probability

472
00:15:57,600 --> 00:16:01,040
uh so this boils down to showing that um

473
00:16:01,040 --> 00:16:03,120
actually with high probability the path

474
00:16:03,120 --> 00:16:04,639
from like one of the paths from

475
00:16:04,639 --> 00:16:06,480
pre-image to the output will be a light

476
00:16:06,480 --> 00:16:08,880
pass because our inversion oracle only

477
00:16:08,880 --> 00:16:10,480
agrees to invert if there is a light

478
00:16:10,480 --> 00:16:12,000
pass

479
00:16:12,000 --> 00:16:13,839
and intuitively the funny thing here is

480
00:16:13,839 --> 00:16:14,959
that you can think of your one-way

481
00:16:14,959 --> 00:16:16,880
function now as being an adversary that

482
00:16:16,880 --> 00:16:18,399
will be making queries like these

483
00:16:18,399 --> 00:16:20,240
queries that it makes are the paths from

484
00:16:20,240 --> 00:16:22,399
the input to the output and if there are

485
00:16:22,399 --> 00:16:24,320
no light paths it means that you somehow

486
00:16:24,320 --> 00:16:25,839
get an adversary that can make too many

487
00:16:25,839 --> 00:16:27,440
hits again

488
00:16:27,440 --> 00:16:29,680
and again our heating lemma shows that

489
00:16:29,680 --> 00:16:31,120
this is not possible so using the

490
00:16:31,120 --> 00:16:32,560
heating lemma we can show that with very

491
00:16:32,560 --> 00:16:34,560
high probability if you evaluate an

492
00:16:34,560 --> 00:16:36,480
arbitrary function on a random input

493
00:16:36,480 --> 00:16:38,320
there will be light pass

494
00:16:38,320 --> 00:16:42,720
from an input to the output that you got

495
00:16:42,720 --> 00:16:44,639
so what is this heating lemma

496
00:16:44,639 --> 00:16:46,399
it says the following you have a bunch

497
00:16:46,399 --> 00:16:48,560
of sets in the skies

498
00:16:48,560 --> 00:16:50,560
and in each of this set i pick a

499
00:16:50,560 --> 00:16:53,440
uniformly random element

500
00:16:53,440 --> 00:16:55,199
and now an adversary is trying to get as

501
00:16:55,199 --> 00:16:56,880
many hits as possible so the adversary

502
00:16:56,880 --> 00:16:59,839
has a budget of queries and he wants to

503
00:16:59,839 --> 00:17:01,920
uh he can ask questions of the form is

504
00:17:01,920 --> 00:17:04,959
ri equal to our star and his goal is to

505
00:17:04,959 --> 00:17:07,280
get as many possible yes answers as

506
00:17:07,280 --> 00:17:08,240
possible

507
00:17:08,240 --> 00:17:09,119
okay

508
00:17:09,119 --> 00:17:12,160
and so the heating lemma shows that

509
00:17:12,160 --> 00:17:14,799
for any adversarial strategy

510
00:17:14,799 --> 00:17:16,480
and the probabilities that you do too

511
00:17:16,480 --> 00:17:19,520
many hits decrease exponentially

512
00:17:19,520 --> 00:17:21,119
so this is the technical statement

513
00:17:21,119 --> 00:17:23,520
forget about it the intuition is

514
00:17:23,520 --> 00:17:25,280
what's the naive strategy well the nice

515
00:17:25,280 --> 00:17:27,359
strategy is you pick the smallest set

516
00:17:27,359 --> 00:17:29,039
and then you query one by one in any

517
00:17:29,039 --> 00:17:30,960
order the elements in it until you get a

518
00:17:30,960 --> 00:17:32,480
hit when you get it you take the next

519
00:17:32,480 --> 00:17:34,640
smaller set then you create one by one

520
00:17:34,640 --> 00:17:36,080
and so on

521
00:17:36,080 --> 00:17:38,000
well first we proved by induction that

522
00:17:38,000 --> 00:17:39,760
this nice strategy is the best possible

523
00:17:39,760 --> 00:17:42,480
strategy and if you call h the number of

524
00:17:42,480 --> 00:17:44,320
hits that this nice strategy makes on a

525
00:17:44,320 --> 00:17:46,320
rage we show that the probability of

526
00:17:46,320 --> 00:17:48,960
getting c hits more than this over h

527
00:17:48,960 --> 00:17:51,520
decreases exponentially with c and the

528
00:17:51,520 --> 00:17:54,160
exponent in this exponential decrease is

529
00:17:54,160 --> 00:17:56,480
actually more than one which is uh

530
00:17:56,480 --> 00:17:57,919
important for our proof to be tight

531
00:17:57,919 --> 00:18:00,400
enough to work

532
00:18:00,400 --> 00:18:02,559
so yeah that's the intuition and the

533
00:18:02,559 --> 00:18:04,480
very nice thing about this

534
00:18:04,480 --> 00:18:06,320
is that the the brand is actually so

535
00:18:06,320 --> 00:18:08,400
tight that even if you allow the

536
00:18:08,400 --> 00:18:10,240
adversary to get an

537
00:18:10,240 --> 00:18:13,039
arbitrary advice about all these sets

538
00:18:13,039 --> 00:18:14,559
you can directly extend the heating

539
00:18:14,559 --> 00:18:16,000
laymar to a hitting lemma that takes

540
00:18:16,000 --> 00:18:18,000
into account this advice simply by

541
00:18:18,000 --> 00:18:19,840
guessing the advice in advance

542
00:18:19,840 --> 00:18:21,679
right because the result is tight enough

543
00:18:21,679 --> 00:18:24,160
that just guessing the advice uh only

544
00:18:24,160 --> 00:18:25,520
gives you two to the k loss which is

545
00:18:25,520 --> 00:18:26,799
already sufficient to derive a

546
00:18:26,799 --> 00:18:28,320
contradiction

547
00:18:28,320 --> 00:18:30,000
so we get this heating element with

548
00:18:30,000 --> 00:18:31,520
advice with an arbitrary advice of

549
00:18:31,520 --> 00:18:33,200
bonded size

550
00:18:33,200 --> 00:18:35,360
um

551
00:18:35,360 --> 00:18:37,440
and that's the key to proving our first

552
00:18:37,440 --> 00:18:39,120
our core separation

553
00:18:39,120 --> 00:18:40,840
and i don't know how much time i have

554
00:18:40,840 --> 00:18:44,000
left but

555
00:18:44,320 --> 00:18:46,320
yeah okay so another so the positive

556
00:18:46,320 --> 00:18:48,320
results just too very quickly about it

557
00:18:48,320 --> 00:18:50,480
uh is getting fingernail functions from

558
00:18:50,480 --> 00:18:52,240
block finding hardness

559
00:18:52,240 --> 00:18:54,160
so without going into details with a

560
00:18:54,160 --> 00:18:55,760
block funny hard language what we manage

561
00:18:55,760 --> 00:18:57,760
to build is a puzzle a puzzle it's

562
00:18:57,760 --> 00:18:59,120
something where you can easily generate

563
00:18:59,120 --> 00:19:00,960
an instance but solving an instance

564
00:19:00,960 --> 00:19:02,880
takes some long time okay time n for

565
00:19:02,880 --> 00:19:04,559
example and the solution to the puzzle

566
00:19:04,559 --> 00:19:06,720
is just some integer

567
00:19:06,720 --> 00:19:09,840
and uh so how do we build our fingernail

568
00:19:09,840 --> 00:19:11,679
wave function the idea is just i'll

569
00:19:11,679 --> 00:19:14,000
generate n puzzles i'll pick one of them

570
00:19:14,000 --> 00:19:16,160
at random and i'll solve it so it takes

571
00:19:16,160 --> 00:19:18,000
time n to generate the puzzle time n to

572
00:19:18,000 --> 00:19:19,679
solve one of them and i give you the end

573
00:19:19,679 --> 00:19:21,280
puzzles and the solution and i ask you

574
00:19:21,280 --> 00:19:23,360
can you find the puzzle which i solved

575
00:19:23,360 --> 00:19:25,440
and intuitively the language hard enough

576
00:19:25,440 --> 00:19:27,520
to find out which puzzle i solved you

577
00:19:27,520 --> 00:19:29,039
will have to solve all the puzzles one

578
00:19:29,039 --> 00:19:32,000
by one which takes quadratic time

579
00:19:32,000 --> 00:19:33,840
and to prove that this intuition work we

580
00:19:33,840 --> 00:19:36,880
have to uh we need the hardness we need

581
00:19:36,880 --> 00:19:38,000
is block finding hardness of the

582
00:19:38,000 --> 00:19:39,440
language

583
00:19:39,440 --> 00:19:41,360
and so i won't have time to go over that

584
00:19:41,360 --> 00:19:42,400
but

585
00:19:42,400 --> 00:19:44,000
using the heating lemma with advice

586
00:19:44,000 --> 00:19:46,320
again it's possible to prove that a

587
00:19:46,320 --> 00:19:48,240
random language does satisfy block

588
00:19:48,240 --> 00:19:49,919
funding hardness so it provides some

589
00:19:49,919 --> 00:19:52,320
support for this very strong harness

590
00:19:52,320 --> 00:19:53,360
assumption

591
00:19:53,360 --> 00:19:55,200
and yeah that's the end of my talk

592
00:19:55,200 --> 00:19:56,880
that's a global summary of what i just

593
00:19:56,880 --> 00:19:58,240
said i'll be happy to answer any

594
00:19:58,240 --> 00:19:59,520
question

595
00:19:59,520 --> 00:20:02,720
okay thank you very much

596
00:20:04,880 --> 00:20:06,400
other questions

597
00:20:06,400 --> 00:20:09,280
somebody can come

598
00:20:15,120 --> 00:20:17,039
yeah um i don't know if you can comment

599
00:20:17,039 --> 00:20:18,880
on this but remember this crypto 2018

600
00:20:18,880 --> 00:20:21,600
paper by marshall ball and anna rose and

601
00:20:21,600 --> 00:20:24,640
others yeah and they comment on uh how

602
00:20:24,640 --> 00:20:26,480
it'd be surprising to obtain

603
00:20:26,480 --> 00:20:29,120
one-way functions from

604
00:20:29,120 --> 00:20:30,559
some type of

605
00:20:30,559 --> 00:20:32,240
assumptions the ones they have in that

606
00:20:32,240 --> 00:20:34,559
particular case yeah now how does this

607
00:20:34,559 --> 00:20:37,520
particular the last result you show to

608
00:20:37,520 --> 00:20:39,840
one way functions from block hardness

609
00:20:39,840 --> 00:20:40,880
how does it

610
00:20:40,880 --> 00:20:42,640
what what's the relation between those

611
00:20:42,640 --> 00:20:44,720
surprising results they show and do so

612
00:20:44,720 --> 00:20:46,960
thank you for the question actually um

613
00:20:46,960 --> 00:20:48,640
though i tell the story in an order

614
00:20:48,640 --> 00:20:50,880
which fits the chrono the the way we

615
00:20:50,880 --> 00:20:52,480
write it in the paper the actual

616
00:20:52,480 --> 00:20:54,640
historical chronology of the paper is we

617
00:20:54,640 --> 00:20:56,799
started from this result and we wanted

618
00:20:56,799 --> 00:20:59,360
to get around the the limitation uh they

619
00:20:59,360 --> 00:21:01,520
said and the idea we had was so what

620
00:21:01,520 --> 00:21:03,679
they show is from exponential time

621
00:21:03,679 --> 00:21:06,559
hypothesis you can get uh what i just

622
00:21:06,559 --> 00:21:09,120
called here a cryptographic puzzle

623
00:21:09,120 --> 00:21:10,640
right you can build an average heart

624
00:21:10,640 --> 00:21:12,400
cryptographic puzzle from exponential

625
00:21:12,400 --> 00:21:14,640
time i processes by going through

626
00:21:14,640 --> 00:21:17,120
this orthogonal vector problem and then

627
00:21:17,120 --> 00:21:19,360
getting average case hardness out of it

628
00:21:19,360 --> 00:21:21,200
and they managed to prove that actually

629
00:21:21,200 --> 00:21:23,760
this uh this is not only hard on average

630
00:21:23,760 --> 00:21:25,520
it also satisfies this amplifiability

631
00:21:25,520 --> 00:21:28,159
property that i told that i spoke about

632
00:21:28,159 --> 00:21:29,600
if you have many many many puzzles

633
00:21:29,600 --> 00:21:32,400
solving them workers uh uh well spending

634
00:21:32,400 --> 00:21:33,840
a time proportional to the number of

635
00:21:33,840 --> 00:21:34,960
puzzles

636
00:21:34,960 --> 00:21:37,280
so we wanted exactly to get this and we

637
00:21:37,280 --> 00:21:39,440
had this construction in mind

638
00:21:39,440 --> 00:21:41,039
and um

639
00:21:41,039 --> 00:21:44,000
basically the the unfortunate story is

640
00:21:44,000 --> 00:21:45,600
that our

641
00:21:45,600 --> 00:21:47,120
impossibility results our black box

642
00:21:47,120 --> 00:21:49,440
impossibility results show that uh what

643
00:21:49,440 --> 00:21:51,120
they manage to prove about their puzzle

644
00:21:51,120 --> 00:21:53,039
which is amplifiable hardness does not

645
00:21:53,039 --> 00:21:55,440
suffice to go all the way to to find one

646
00:21:55,440 --> 00:21:57,440
way function so it's another limitation

647
00:21:57,440 --> 00:21:59,760
in addition to the one they exhibited uh

648
00:21:59,760 --> 00:22:01,679
to the program of building fingering

649
00:22:01,679 --> 00:22:03,039
functions from exponential time

650
00:22:03,039 --> 00:22:04,720
hypothesis or strong exponential time

651
00:22:04,720 --> 00:22:05,919
hypothesis

652
00:22:05,919 --> 00:22:08,480
and so this alternative road goes to uh

653
00:22:08,480 --> 00:22:10,000
through block finding hardness but if

654
00:22:10,000 --> 00:22:12,240
you try to prove block finding hardness

655
00:22:12,240 --> 00:22:14,000
for their construction

656
00:22:14,000 --> 00:22:17,280
then you end up having to prove um

657
00:22:17,280 --> 00:22:19,520
so it uses this kind of of belly-comp

658
00:22:19,520 --> 00:22:23,039
messy algorithm american algorithm sorry

659
00:22:23,039 --> 00:22:24,320
and uh

660
00:22:24,320 --> 00:22:25,840
essentially adapting the berry converge

661
00:22:25,840 --> 00:22:27,600
algorithm to this notion of finding a

662
00:22:27,600 --> 00:22:28,559
pattern

663
00:22:28,559 --> 00:22:29,600
uh

664
00:22:29,600 --> 00:22:31,760
it seems extremely hard and uh we've

665
00:22:31,760 --> 00:22:33,200
never managed to make any progress on

666
00:22:33,200 --> 00:22:33,919
that

667
00:22:33,919 --> 00:22:36,720
i don't think it's feasible at all um

668
00:22:36,720 --> 00:22:39,039
but yeah so essentially we show new

669
00:22:39,039 --> 00:22:41,120
barriers toward using what they already

670
00:22:41,120 --> 00:22:42,320
showed

671
00:22:42,320 --> 00:22:45,200
uh uh to get fingering on my functions

672
00:22:45,200 --> 00:22:46,720
and we try to get around but when

673
00:22:46,720 --> 00:22:48,240
getting around we can't use any more

674
00:22:48,240 --> 00:22:50,799
their construction so we just

675
00:22:50,799 --> 00:22:52,320
need to abstract out the notion of what

676
00:22:52,320 --> 00:22:55,039
suffice is to get what we get

677
00:22:55,039 --> 00:22:56,880
thank you i think we need to move on to

678
00:22:56,880 --> 00:22:59,280
the next step

679
00:22:59,280 --> 00:23:00,320
so

680
00:23:00,320 --> 00:23:02,879
as

