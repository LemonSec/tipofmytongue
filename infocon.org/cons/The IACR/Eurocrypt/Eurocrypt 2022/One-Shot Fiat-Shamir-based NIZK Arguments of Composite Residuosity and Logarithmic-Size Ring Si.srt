1
00:00:05,120 --> 00:00:08,920
yes our next speakers

2
00:00:27,760 --> 00:00:31,199
okay hello

3
00:00:31,199 --> 00:00:33,840
um the next talk is going to be about

4
00:00:33,840 --> 00:00:36,480
one-shot fiaschemir-based musics of

5
00:00:36,480 --> 00:00:38,399
compulsive residuocity and logarithmic

6
00:00:38,399 --> 00:00:39,520
size

7
00:00:39,520 --> 00:00:42,160
ring signatures in the standard model so

8
00:00:42,160 --> 00:00:43,520
these are joint work

9
00:00:43,520 --> 00:00:46,320
uh by bernoulli bear con

10
00:00:46,320 --> 00:00:48,640
thomas peters and modi young thomas

11
00:00:48,640 --> 00:00:51,680
peters will get the talk thomas anytime

12
00:00:51,680 --> 00:00:53,600
thank you for the introduction so do you

13
00:00:53,600 --> 00:00:56,160
hate me well

14
00:00:57,520 --> 00:01:00,399
yes yeah perfect thank you so yes this

15
00:01:00,399 --> 00:01:02,239
presentation is about non-interactive

16
00:01:02,239 --> 00:01:04,319
zero knowledge arguments and more

17
00:01:04,319 --> 00:01:06,799
precisely to see how we can build

18
00:01:06,799 --> 00:01:10,000
concretely efficient um arguments based

19
00:01:10,000 --> 00:01:12,400
on composite residualistic problem and

20
00:01:12,400 --> 00:01:14,640
as an application we show how we can get

21
00:01:14,640 --> 00:01:17,439
a really short ring signature in the

22
00:01:17,439 --> 00:01:20,000
standard model and this wizard relying

23
00:01:20,000 --> 00:01:22,240
on pairings

24
00:01:22,240 --> 00:01:25,360
so for those who are not familiar with

25
00:01:25,360 --> 00:01:28,400
the concept of ring signature let me

26
00:01:28,400 --> 00:01:31,280
give a brief recap of what it is so we

27
00:01:31,280 --> 00:01:34,159
have a signer on the left so we have bob

28
00:01:34,159 --> 00:01:35,600
we use

29
00:01:35,600 --> 00:01:38,479
the secret key skb to sign any message

30
00:01:38,479 --> 00:01:41,280
but at the signing time he also embedded

31
00:01:41,280 --> 00:01:43,840
the signature a ring of other

32
00:01:43,840 --> 00:01:45,439
verification key

33
00:01:45,439 --> 00:01:47,520
that come from other users

34
00:01:47,520 --> 00:01:50,399
and why it does that because now anyone

35
00:01:50,399 --> 00:01:52,240
can check the validity of the signature

36
00:01:52,240 --> 00:01:55,520
as usual but you can only learn that

37
00:01:55,520 --> 00:01:57,439
someone in the ring performed the

38
00:01:57,439 --> 00:01:59,680
signature but without knowing exactly

39
00:01:59,680 --> 00:02:01,119
who does

40
00:02:01,119 --> 00:02:03,439
who did it so we have a kind of a

41
00:02:03,439 --> 00:02:05,280
anonymity property there

42
00:02:05,280 --> 00:02:07,759
so as far as correctness is concerned

43
00:02:07,759 --> 00:02:09,679
it's it means that as long as you have a

44
00:02:09,679 --> 00:02:12,640
verification key vk in the ring and you

45
00:02:12,640 --> 00:02:14,640
are using the associated secret key you

46
00:02:14,640 --> 00:02:17,440
can sign any message and any ring and

47
00:02:17,440 --> 00:02:19,680
the signature will be deemed valid as

48
00:02:19,680 --> 00:02:22,959
long as you use the same ring r to make

49
00:02:22,959 --> 00:02:24,560
the check

50
00:02:24,560 --> 00:02:27,360
so ring signature found a application in

51
00:02:27,360 --> 00:02:29,120
the whistle blowing context and

52
00:02:29,120 --> 00:02:31,920
cryptocurrencies and i will give only

53
00:02:31,920 --> 00:02:33,440
give additional words only for the

54
00:02:33,440 --> 00:02:34,840
whistleblowing

55
00:02:34,840 --> 00:02:37,840
case so now we can simply think of bob

56
00:02:37,840 --> 00:02:40,160
being a journalist that wants to

57
00:02:40,160 --> 00:02:42,160
disclose some document that he receives

58
00:02:42,160 --> 00:02:45,120
and he want to authenticate the document

59
00:02:45,120 --> 00:02:47,280
based on his reputation in order that

60
00:02:47,280 --> 00:02:49,760
anybody can believe in the document in

61
00:02:49,760 --> 00:02:51,280
the sense that it will not be considered

62
00:02:51,280 --> 00:02:52,800
as a fake news

63
00:02:52,800 --> 00:02:56,080
but uh while other people might be upset

64
00:02:56,080 --> 00:02:58,959
by this disclosure uh bob wants to hide

65
00:02:58,959 --> 00:03:00,879
his identity between a quarter or the

66
00:03:00,879 --> 00:03:03,920
user and use a ring signature with other

67
00:03:03,920 --> 00:03:05,360
the verification key of other

68
00:03:05,360 --> 00:03:09,440
journalists with good reputation as well

69
00:03:09,440 --> 00:03:11,680
uh so yeah that's the idea i think it's

70
00:03:11,680 --> 00:03:14,400
it's clear why we need the anonymity

71
00:03:14,400 --> 00:03:16,000
property but in ring signature the

72
00:03:16,000 --> 00:03:17,840
anonymity property that we target is

73
00:03:17,840 --> 00:03:19,120
really strong

74
00:03:19,120 --> 00:03:21,360
meaning that the adversary should remain

75
00:03:21,360 --> 00:03:24,319
unable to identify who is the actual

76
00:03:24,319 --> 00:03:25,360
signer

77
00:03:25,360 --> 00:03:27,920
even if it knows all the signatures all

78
00:03:27,920 --> 00:03:29,920
the secret keys

79
00:03:29,920 --> 00:03:32,879
that are involved in the ring

80
00:03:32,879 --> 00:03:34,319
in the paper we achieve that in a

81
00:03:34,319 --> 00:03:36,080
statical stance and even if the

82
00:03:36,080 --> 00:03:38,879
adversary is able to inject verification

83
00:03:38,879 --> 00:03:41,519
key that are malformed so that are not

84
00:03:41,519 --> 00:03:43,840
the output of the key generation

85
00:03:43,840 --> 00:03:45,440
function

86
00:03:45,440 --> 00:03:47,599
as for the unforgeability we only reach

87
00:03:47,599 --> 00:03:49,040
it from a

88
00:03:49,040 --> 00:03:51,440
computational assumption of course and

89
00:03:51,440 --> 00:03:54,080
it simply tells that you keep the usual

90
00:03:54,080 --> 00:03:56,239
and affordability as long as the

91
00:03:56,239 --> 00:03:57,439
adversary

92
00:03:57,439 --> 00:04:00,480
did not corrupt user are in the ring

93
00:04:00,480 --> 00:04:02,879
but of course he can corrupt many other

94
00:04:02,879 --> 00:04:05,599
users in the system and it should not

95
00:04:05,599 --> 00:04:09,680
help him producing a new valid

96
00:04:09,680 --> 00:04:11,040
signature

97
00:04:11,040 --> 00:04:13,519
okay so that was for the application so

98
00:04:13,519 --> 00:04:15,360
lo let's come back at the beginning of

99
00:04:15,360 --> 00:04:17,519
the story so we start with sigma

100
00:04:17,519 --> 00:04:20,000
protocols and thanks to the the previous

101
00:04:20,000 --> 00:04:22,880
uh presentations i can go really quick

102
00:04:22,880 --> 00:04:25,040
through that so we have a three-step

103
00:04:25,040 --> 00:04:28,240
protocol here so x is the statement is

104
00:04:28,240 --> 00:04:30,080
the prover want to prove that x is in

105
00:04:30,080 --> 00:04:32,560
the language to the verifier and so

106
00:04:32,560 --> 00:04:35,520
first the prover here uh simply commit

107
00:04:35,520 --> 00:04:36,320
to

108
00:04:36,320 --> 00:04:37,759
some value that we call the first

109
00:04:37,759 --> 00:04:41,600
message a here to v and it is v that

110
00:04:41,600 --> 00:04:44,800
send back p with a challenge and here

111
00:04:44,800 --> 00:04:47,520
uh the challenge space as you can see is

112
00:04:47,520 --> 00:04:50,000
is big since it depends on the

113
00:04:50,000 --> 00:04:52,960
uh security parameter in the exponent

114
00:04:52,960 --> 00:04:55,120
and based on that the approver produce a

115
00:04:55,120 --> 00:04:57,759
response so the verifier can check the

116
00:04:57,759 --> 00:05:00,160
validity of the transcript so that the

117
00:05:00,160 --> 00:05:02,479
triple here is called the transcript

118
00:05:02,479 --> 00:05:05,039
and uh yeah because the re-fire is

119
00:05:05,039 --> 00:05:06,800
though is the guy who picked the

120
00:05:06,800 --> 00:05:08,560
challenge he can be unsure of the

121
00:05:08,560 --> 00:05:10,800
validity of the statement and why

122
00:05:10,800 --> 00:05:11,759
because

123
00:05:11,759 --> 00:05:14,720
if x was not in the language actually

124
00:05:14,720 --> 00:05:16,639
you can rely on the special soundness

125
00:05:16,639 --> 00:05:19,360
property so special soundness property

126
00:05:19,360 --> 00:05:22,000
as we already heard about today simply

127
00:05:22,000 --> 00:05:24,160
means that when you have two transcripts

128
00:05:24,160 --> 00:05:26,160
that are valid with the same first

129
00:05:26,160 --> 00:05:28,080
message so you can see that a here and

130
00:05:28,080 --> 00:05:31,360
there are the same then you can easily

131
00:05:31,360 --> 00:05:33,440
compute a witness so that means that if

132
00:05:33,440 --> 00:05:35,520
you have two of course x is in the

133
00:05:35,520 --> 00:05:36,720
language

134
00:05:36,720 --> 00:05:39,199
so that also means that if x is not in

135
00:05:39,199 --> 00:05:40,800
the language

136
00:05:40,800 --> 00:05:43,840
once uh the prover commits to a

137
00:05:43,840 --> 00:05:45,440
there is only one challenge for which it

138
00:05:45,440 --> 00:05:48,639
is possible for him to produce a valid

139
00:05:48,639 --> 00:05:50,479
response

140
00:05:50,479 --> 00:05:51,520
so in the

141
00:05:51,520 --> 00:05:53,199
sometimes we do not have two special

142
00:05:53,199 --> 00:05:55,360
soundness we have something which is uh

143
00:05:55,360 --> 00:05:57,600
more general than that and we have we

144
00:05:57,600 --> 00:06:00,639
need more than two um valid transcript

145
00:06:00,639 --> 00:06:03,120
in order to extract the weakness so here

146
00:06:03,120 --> 00:06:05,120
we will need n plus one but all the time

147
00:06:05,120 --> 00:06:07,039
with the same first

148
00:06:07,039 --> 00:06:08,560
message a

149
00:06:08,560 --> 00:06:10,800
so that simply means now that if x is

150
00:06:10,800 --> 00:06:13,600
not in the language there exist at most

151
00:06:13,600 --> 00:06:16,080
and bad challenges

152
00:06:16,080 --> 00:06:17,840
and i call bad challenges those

153
00:06:17,840 --> 00:06:20,400
challenge for which it is possible to

154
00:06:20,400 --> 00:06:24,160
compute a valid response at the end

155
00:06:24,160 --> 00:06:25,280
okay so

156
00:06:25,280 --> 00:06:26,960
the purpose of the talk is about

157
00:06:26,960 --> 00:06:28,960
non-interactive proof

158
00:06:28,960 --> 00:06:31,440
we know in the random writing model how

159
00:06:31,440 --> 00:06:34,080
to compile the sigma protocols into an

160
00:06:34,080 --> 00:06:36,080
interactive zero knowledge proof and

161
00:06:36,080 --> 00:06:38,160
also a proof of knowledge

162
00:06:38,160 --> 00:06:40,160
so here the prover

163
00:06:40,160 --> 00:06:42,080
does everything and

164
00:06:42,080 --> 00:06:44,319
derives the challenge himself based on a

165
00:06:44,319 --> 00:06:45,520
hash function

166
00:06:45,520 --> 00:06:47,280
and as long as the function can be

167
00:06:47,280 --> 00:06:49,840
modeled as around the molecule we have a

168
00:06:49,840 --> 00:06:53,120
challenge which is uniformly distributed

169
00:06:53,120 --> 00:06:54,960
among these large

170
00:06:54,960 --> 00:06:56,720
challenge spaces that means that the

171
00:06:56,720 --> 00:06:58,240
probability not to fall on that

172
00:06:58,240 --> 00:07:00,880
challenge is negligible

173
00:07:00,880 --> 00:07:03,280
because the challenge space is big

174
00:07:03,280 --> 00:07:06,160
okay you can also have extraction and

175
00:07:06,160 --> 00:07:08,479
and proof of knowledge if we rewind but

176
00:07:08,479 --> 00:07:12,479
that's not what we are focusing uh today

177
00:07:12,479 --> 00:07:15,039
but unfortunately this only works in the

178
00:07:15,039 --> 00:07:17,840
run and not in the standard model so

179
00:07:17,840 --> 00:07:20,479
people cryptographers try to find what

180
00:07:20,479 --> 00:07:21,759
are the good property of the hash

181
00:07:21,759 --> 00:07:25,199
function in order to avoid somehow the

182
00:07:25,199 --> 00:07:26,560
bad challenges

183
00:07:26,560 --> 00:07:30,080
without relying on ideal as object

184
00:07:30,080 --> 00:07:31,919
so

185
00:07:31,919 --> 00:07:33,199
an important

186
00:07:33,199 --> 00:07:35,840
advances was proposed with correlation

187
00:07:35,840 --> 00:07:38,160
interactable hash function so this

188
00:07:38,160 --> 00:07:39,280
particular

189
00:07:39,280 --> 00:07:41,280
hash function that are related to a

190
00:07:41,280 --> 00:07:43,759
relation so we are now given a relation

191
00:07:43,759 --> 00:07:45,919
for which with the hash function it's

192
00:07:45,919 --> 00:07:49,280
hard to find an x such that x with his

193
00:07:49,280 --> 00:07:50,319
image

194
00:07:50,319 --> 00:07:53,280
uh are actually in relation

195
00:07:53,280 --> 00:07:56,240
so here we will see how we can use that

196
00:07:56,240 --> 00:07:57,360
in our

197
00:07:57,360 --> 00:07:59,440
interactive

198
00:07:59,440 --> 00:08:00,639
protocol

199
00:08:00,639 --> 00:08:02,000
if h

200
00:08:02,000 --> 00:08:04,639
given x and a so x the statement and the

201
00:08:04,639 --> 00:08:06,800
first uh the first message of the prover

202
00:08:06,800 --> 00:08:09,520
so you see that as your input if it is

203
00:08:09,520 --> 00:08:11,520
hard to find an input for which the

204
00:08:11,520 --> 00:08:14,080
challenge here will be the bad challenge

205
00:08:14,080 --> 00:08:16,720
then you are okay even if it's not

206
00:08:16,720 --> 00:08:19,759
uniform you just avoid the bad challenge

207
00:08:19,759 --> 00:08:22,639
and you have the soundness

208
00:08:22,639 --> 00:08:24,080
but correlation interactive lash

209
00:08:24,080 --> 00:08:26,800
function uh is what's hard to to to to

210
00:08:26,800 --> 00:08:28,560
build and uh yes

211
00:08:28,560 --> 00:08:30,400
many cryptographers try to make advances

212
00:08:30,400 --> 00:08:33,760
that direction and recently in 2019

213
00:08:33,760 --> 00:08:36,320
kennedy ital uh show how to build

214
00:08:36,320 --> 00:08:38,479
collision intractable hash function

215
00:08:38,479 --> 00:08:39,519
when the

216
00:08:39,519 --> 00:08:42,080
relation is efficiently searchable

217
00:08:42,080 --> 00:08:44,880
and what does that mean that means that

218
00:08:44,880 --> 00:08:46,640
once you are given

219
00:08:46,640 --> 00:08:48,720
one of the two elements of the couple

220
00:08:48,720 --> 00:08:51,680
here it is efficient to find the other

221
00:08:51,680 --> 00:08:53,040
one

222
00:08:53,040 --> 00:08:55,279
okay so that means that if we now want

223
00:08:55,279 --> 00:08:56,959
to use everything together that means

224
00:08:56,959 --> 00:08:58,640
that the hash function even if you know

225
00:08:58,640 --> 00:09:00,800
what should be the output of the hash

226
00:09:00,800 --> 00:09:02,399
function the hash function will not fall

227
00:09:02,399 --> 00:09:04,240
on that value

228
00:09:04,240 --> 00:09:07,839
okay and now if you can compute

229
00:09:07,839 --> 00:09:10,160
these bad challenges for that you need a

230
00:09:10,160 --> 00:09:11,440
trapdoor

231
00:09:11,440 --> 00:09:14,240
then you can uh build an uninteractive

232
00:09:14,240 --> 00:09:16,160
proof based on fiat xiaomi and such kind

233
00:09:16,160 --> 00:09:18,880
of hash function based on a trapdoor

234
00:09:18,880 --> 00:09:20,720
sigma protocol so the trapdoor sigma

235
00:09:20,720 --> 00:09:23,200
protocol it's what allows you to find

236
00:09:23,200 --> 00:09:25,200
the bad challenges

237
00:09:25,200 --> 00:09:27,040
this is simply what

238
00:09:27,040 --> 00:09:29,440
you can see on this slide so the

239
00:09:29,440 --> 00:09:32,000
trapdoor sigma protocol now you have a

240
00:09:32,000 --> 00:09:34,000
crs and based on that crs you have a

241
00:09:34,000 --> 00:09:37,519
trapdoor value toe and as long as you

242
00:09:37,519 --> 00:09:39,279
have now a

243
00:09:39,279 --> 00:09:41,519
statement a false statement or next

244
00:09:41,519 --> 00:09:43,519
which is not in the language

245
00:09:43,519 --> 00:09:45,760
and any first proven message then to

246
00:09:45,760 --> 00:09:48,320
allow you to find old and challenges the

247
00:09:48,320 --> 00:09:51,760
bad challenges so if the underlying

248
00:09:51,760 --> 00:09:54,000
protocol has n plus one

249
00:09:54,000 --> 00:09:56,000
special soundness

250
00:09:56,000 --> 00:09:57,760
we can then simply apply the collision

251
00:09:57,760 --> 00:09:59,360
and tractable of kenneth

252
00:09:59,360 --> 00:10:01,519
etal which is based on fully homomorphic

253
00:10:01,519 --> 00:10:03,200
encryption and special property of the

254
00:10:03,200 --> 00:10:06,399
secret key but uh the same year pekka

255
00:10:06,399 --> 00:10:08,240
and shenyan also show oh is it possible

256
00:10:08,240 --> 00:10:11,120
to build such kind of hash function

257
00:10:11,120 --> 00:10:15,360
based on lwe solely

258
00:10:15,360 --> 00:10:17,360
okay so we can simply say now that's the

259
00:10:17,360 --> 00:10:19,839
end of the story because

260
00:10:19,839 --> 00:10:21,680
once you are given a sigma protocol with

261
00:10:21,680 --> 00:10:23,760
binary challenge you can turn it into a

262
00:10:23,760 --> 00:10:25,440
trapdoor protocol

263
00:10:25,440 --> 00:10:27,920
okay so what's the point now the point

264
00:10:27,920 --> 00:10:30,079
is that with binary challenges if you

265
00:10:30,079 --> 00:10:34,880
want to have a real soundness at the end

266
00:10:34,880 --> 00:10:37,360
because here with one half you you may

267
00:10:37,360 --> 00:10:39,760
find by chance the the one for which you

268
00:10:39,760 --> 00:10:42,480
will be able to produce fake proof

269
00:10:42,480 --> 00:10:44,160
now you have to repeat

270
00:10:44,160 --> 00:10:46,560
the underlying signal protocols and you

271
00:10:46,560 --> 00:10:48,880
need to make a linear number of

272
00:10:48,880 --> 00:10:50,880
repetition in the security parameter if

273
00:10:50,880 --> 00:10:53,279
you want to decrease the error soundness

274
00:10:53,279 --> 00:10:56,800
probability uh to make it negligible

275
00:10:56,800 --> 00:10:58,880
okay so that means that so far

276
00:10:58,880 --> 00:11:01,040
not only the generic construction but so

277
00:11:01,040 --> 00:11:02,959
far all the instantiation needs for

278
00:11:02,959 --> 00:11:05,040
trapdoor protocol needs parallel

279
00:11:05,040 --> 00:11:06,800
repetition

280
00:11:06,800 --> 00:11:08,399
so parallel repetition of course is

281
00:11:08,399 --> 00:11:10,079
something which gives you less

282
00:11:10,079 --> 00:11:12,480
efficiency if you can compare it once

283
00:11:12,480 --> 00:11:14,000
you have cut and choose technique and

284
00:11:14,000 --> 00:11:16,000
then more a

285
00:11:16,000 --> 00:11:18,399
technique like schnoorlike protocol and

286
00:11:18,399 --> 00:11:20,880
this is exactly what we want to bring

287
00:11:20,880 --> 00:11:21,920
here

288
00:11:21,920 --> 00:11:25,760
such kind of communication improvement

289
00:11:25,760 --> 00:11:26,720
one

290
00:11:26,720 --> 00:11:28,800
important thing here to see that it is

291
00:11:28,800 --> 00:11:32,079
not for free uh for in term of the the

292
00:11:32,079 --> 00:11:35,120
trapdoor of the system is that if the

293
00:11:35,120 --> 00:11:37,200
underlying signal protocol is not only

294
00:11:37,200 --> 00:11:39,920
two special soundness but n plus one

295
00:11:39,920 --> 00:11:42,320
special softness for for and strictly

296
00:11:42,320 --> 00:11:44,399
bigger than one that means that during

297
00:11:44,399 --> 00:11:46,320
their parallel repetition the number of

298
00:11:46,320 --> 00:11:48,560
bad challenges will blow up so that

299
00:11:48,560 --> 00:11:51,120
means that repetition anyway will

300
00:11:51,120 --> 00:11:54,480
make it hard to to find uh to rely on on

301
00:11:54,480 --> 00:11:57,120
such kind of transformation

302
00:11:57,120 --> 00:11:59,360
so the goal uh of our paper is to show

303
00:11:59,360 --> 00:12:02,000
how we can do that in the standard model

304
00:12:02,000 --> 00:12:04,399
in one shot meaning that we can directly

305
00:12:04,399 --> 00:12:08,240
have a negligible soundness error

306
00:12:08,240 --> 00:12:13,279
when using a large challenge space

307
00:12:13,519 --> 00:12:14,800
okay so we

308
00:12:14,800 --> 00:12:16,560
here is a just uh

309
00:12:16,560 --> 00:12:19,360
an example a starting example of a

310
00:12:19,360 --> 00:12:21,440
trapdoor protocol so we start with a

311
00:12:21,440 --> 00:12:23,120
basic sigma protocol

312
00:12:23,120 --> 00:12:25,440
and yeah here thanks to

313
00:12:25,440 --> 00:12:28,160
the previous presentation

314
00:12:28,160 --> 00:12:29,600
we can see that we have a normal

315
00:12:29,600 --> 00:12:32,480
morphism so i can go through that

316
00:12:32,480 --> 00:12:34,240
really quickly but what kind of

317
00:12:34,240 --> 00:12:37,200
homomorphis do we have we work in the

318
00:12:37,200 --> 00:12:40,000
dcr settings so the dcr setting

319
00:12:40,000 --> 00:12:42,480
is uh the setting where the pi a

320
00:12:42,480 --> 00:12:45,040
encryption has been defined so we have

321
00:12:45,040 --> 00:12:47,680
we have a rsa modulus

322
00:12:47,680 --> 00:12:50,480
and which is the pro the product of p

323
00:12:50,480 --> 00:12:51,680
and q

324
00:12:51,680 --> 00:12:54,720
and the language here is the

325
00:12:54,720 --> 00:12:58,000
nth power so you have to prove that

326
00:12:58,000 --> 00:13:00,240
an element is an nth power of something

327
00:13:00,240 --> 00:13:02,480
modular n square

328
00:13:02,480 --> 00:13:04,079
so based on that now i think that you

329
00:13:04,079 --> 00:13:06,320
can understand the the basic sigma

330
00:13:06,320 --> 00:13:08,079
protocol so here there is no trapdoor

331
00:13:08,079 --> 00:13:10,079
you simply pick the randomness you do

332
00:13:10,079 --> 00:13:11,440
exactly what you

333
00:13:11,440 --> 00:13:14,079
you did here you get the challenge you

334
00:13:14,079 --> 00:13:15,920
get the response the verification very

335
00:13:15,920 --> 00:13:18,160
far you can check this equation this is

336
00:13:18,160 --> 00:13:21,680
exactly the one that we had on

337
00:13:21,680 --> 00:13:23,760
the slide before

338
00:13:23,760 --> 00:13:25,760
okay so now where the trapdoor can come

339
00:13:25,760 --> 00:13:26,720
from

340
00:13:26,720 --> 00:13:27,760
um

341
00:13:27,760 --> 00:13:28,639
so

342
00:13:28,639 --> 00:13:31,200
as i said this is related to the paella

343
00:13:31,200 --> 00:13:33,279
encryption and actually the language

344
00:13:33,279 --> 00:13:36,240
here can be seen as the

345
00:13:36,240 --> 00:13:39,360
ciphertext that encrypt zero

346
00:13:39,360 --> 00:13:41,360
so that means that if x is not in the

347
00:13:41,360 --> 00:13:43,760
language actually it encrypts something

348
00:13:43,760 --> 00:13:45,120
different

349
00:13:45,120 --> 00:13:46,720
and there is something which is really

350
00:13:46,720 --> 00:13:49,199
important here is that actually any

351
00:13:49,199 --> 00:13:52,240
element modulo and square are the

352
00:13:52,240 --> 00:13:54,880
ciphertext our encryption of something

353
00:13:54,880 --> 00:13:56,880
so there might be the case that actually

354
00:13:56,880 --> 00:13:59,440
x is not in uh

355
00:13:59,440 --> 00:14:01,920
is not an encryption of something even

356
00:14:01,920 --> 00:14:04,079
if it is in a in a range for which it is

357
00:14:04,079 --> 00:14:05,760
indistinguishable to tell if it's an

358
00:14:05,760 --> 00:14:07,680
encryption or not but we do not have

359
00:14:07,680 --> 00:14:09,839
that problem and in that sense we are

360
00:14:09,839 --> 00:14:11,600
the first to provide a trapdoor sigma

361
00:14:11,600 --> 00:14:14,800
protocol because uh basic uh id have

362
00:14:14,800 --> 00:14:17,440
already been used before but we are the

363
00:14:17,440 --> 00:14:20,240
first uh to to do it uh

364
00:14:20,240 --> 00:14:23,120
completely so now d here is simply the

365
00:14:23,120 --> 00:14:25,279
decryption of the pi encryption so p and

366
00:14:25,279 --> 00:14:26,480
q are

367
00:14:26,480 --> 00:14:28,560
allow you to decrypt

368
00:14:28,560 --> 00:14:30,880
so if x is not in the language that

369
00:14:30,880 --> 00:14:32,639
means that x encrypts something

370
00:14:32,639 --> 00:14:35,199
different that 0 modulo n

371
00:14:35,199 --> 00:14:37,680
and even if it is a multiple of p we do

372
00:14:37,680 --> 00:14:39,839
not care we do not have to avoid that

373
00:14:39,839 --> 00:14:41,199
case

374
00:14:41,199 --> 00:14:43,760
if it is a multiple of p it's not a

375
00:14:43,760 --> 00:14:46,320
multiple of q and then we have this

376
00:14:46,320 --> 00:14:49,120
property over the plain text space

377
00:14:49,120 --> 00:14:51,920
modulo q then and this value alpha x is

378
00:14:51,920 --> 00:14:54,320
not zero modulo q that means that

379
00:14:54,320 --> 00:14:55,600
we can

380
00:14:55,600 --> 00:14:58,480
find we can compute solve this equation

381
00:14:58,480 --> 00:15:00,880
and find the challenge and if it fits in

382
00:15:00,880 --> 00:15:02,880
the the challenge space then we we found

383
00:15:02,880 --> 00:15:04,560
the bad challenge the only one that can

384
00:15:04,560 --> 00:15:05,839
exist here

385
00:15:05,839 --> 00:15:07,680
okay and so this equation if you do not

386
00:15:07,680 --> 00:15:08,399
see

387
00:15:08,399 --> 00:15:10,399
simply come from the verification

388
00:15:10,399 --> 00:15:13,600
equation that you decrypt

389
00:15:13,600 --> 00:15:14,880
right so

390
00:15:14,880 --> 00:15:16,399
that's the the first construction that

391
00:15:16,399 --> 00:15:18,639
we give in the paper and now based on

392
00:15:18,639 --> 00:15:20,959
that and other trapdoor sigma protocols

393
00:15:20,959 --> 00:15:21,920
we

394
00:15:21,920 --> 00:15:24,320
build a ring signature in the standard

395
00:15:24,320 --> 00:15:25,279
model

396
00:15:25,279 --> 00:15:28,399
so here this is just a quick recap of

397
00:15:28,399 --> 00:15:31,839
the state of the art so using a crs

398
00:15:31,839 --> 00:15:34,800
cryptographers managed to

399
00:15:34,800 --> 00:15:36,959
produce ring signature that have size

400
00:15:36,959 --> 00:15:39,519
which is sublinear

401
00:15:39,519 --> 00:15:42,480
and um and recently it was possible to

402
00:15:42,480 --> 00:15:44,639
make large mixed size ring signature but

403
00:15:44,639 --> 00:15:47,279
without relying on a crs but actually

404
00:15:47,279 --> 00:15:49,360
those two last works are really

405
00:15:49,360 --> 00:15:51,519
theoretical so the hidden constant are

406
00:15:51,519 --> 00:15:53,279
really really huge you

407
00:15:53,279 --> 00:15:55,040
it's just impossible to use that in

408
00:15:55,040 --> 00:15:56,959
practice even if of course from a

409
00:15:56,959 --> 00:15:58,560
tyrical point of view

410
00:15:58,560 --> 00:16:01,519
this is great advances so in this paper

411
00:16:01,519 --> 00:16:04,320
we assume that we have a crs and based

412
00:16:04,320 --> 00:16:06,639
on that we keep the logarithmic size

413
00:16:06,639 --> 00:16:08,959
signature but our goal is to provide

414
00:16:08,959 --> 00:16:11,680
concretely short signature

415
00:16:11,680 --> 00:16:13,920
in the sense that it is comparable to

416
00:16:13,920 --> 00:16:15,759
the one that you can have in the random

417
00:16:15,759 --> 00:16:17,920
oracle model

418
00:16:17,920 --> 00:16:20,639
so we prove everything based on the dcr

419
00:16:20,639 --> 00:16:22,720
assumption so decisional composite

420
00:16:22,720 --> 00:16:26,240
residuosity problem and the lwe and lw

421
00:16:26,240 --> 00:16:27,839
is only used

422
00:16:27,839 --> 00:16:29,440
for the collision and tractable hash

423
00:16:29,440 --> 00:16:31,199
function all the other building blocks

424
00:16:31,199 --> 00:16:34,000
that we provide in the paper are proven

425
00:16:34,000 --> 00:16:37,839
based on the dcr assumption

426
00:16:38,639 --> 00:16:41,519
okay so let's me give you some hints of

427
00:16:41,519 --> 00:16:44,240
our reconstruction so it is based on the

428
00:16:44,240 --> 00:16:46,079
growth and culverized construction which

429
00:16:46,079 --> 00:16:48,880
was given in the random oracle model and

430
00:16:48,880 --> 00:16:50,880
so the idea there is that all the

431
00:16:50,880 --> 00:16:53,199
verification key are actually additively

432
00:16:53,199 --> 00:16:56,240
homomorphic commitment to zero

433
00:16:56,240 --> 00:16:59,040
so we see in a trapdoor

434
00:16:59,040 --> 00:17:01,759
sigma protocol that we can use

435
00:17:01,759 --> 00:17:03,199
the commitment but we need our

436
00:17:03,199 --> 00:17:05,280
commitment to be perfectly hiding in

437
00:17:05,280 --> 00:17:08,319
order to get a statistical anonymity so

438
00:17:08,319 --> 00:17:10,880
we will need a commitment and not a pie

439
00:17:10,880 --> 00:17:12,640
encryption but

440
00:17:12,640 --> 00:17:14,559
here it is detail

441
00:17:14,559 --> 00:17:16,319
and so the idea there

442
00:17:16,319 --> 00:17:19,199
is to perform a ring signature by making

443
00:17:19,199 --> 00:17:20,959
a signature of knowledge

444
00:17:20,959 --> 00:17:21,919
uh

445
00:17:21,919 --> 00:17:23,280
what does that mean that means that you

446
00:17:23,280 --> 00:17:24,799
just incorporate the message that you

447
00:17:24,799 --> 00:17:28,319
want to sign in the hash function

448
00:17:28,319 --> 00:17:30,559
which is modeled as a random miracle in

449
00:17:30,559 --> 00:17:33,760
that work and you prove that actually

450
00:17:33,760 --> 00:17:36,240
among all the the commitment in the ring

451
00:17:36,240 --> 00:17:38,000
that are the verification key you can

452
00:17:38,000 --> 00:17:41,440
open one and they provide a logarithmic

453
00:17:41,440 --> 00:17:44,400
size proof for that

454
00:17:44,640 --> 00:17:47,120
okay how can we turn that in the

455
00:17:47,120 --> 00:17:49,200
stand-up model now so that's

456
00:17:49,200 --> 00:17:51,200
our main question

457
00:17:51,200 --> 00:17:54,000
because we need trapdoor trapdoor sigma

458
00:17:54,000 --> 00:17:56,880
protocol and as we see we cannot rely on

459
00:17:56,880 --> 00:17:58,480
the discrete log setting because we do

460
00:17:58,480 --> 00:18:02,080
not have a way to uh extra to to find

461
00:18:02,080 --> 00:18:03,919
the bad challenges in that case or

462
00:18:03,919 --> 00:18:06,559
except if we repeat but if we repeat we

463
00:18:06,559 --> 00:18:08,080
have an exponential number of bad

464
00:18:08,080 --> 00:18:11,440
challenges so we are stuck so we we rely

465
00:18:11,440 --> 00:18:14,000
on the trapdoor sigma protocol that i

466
00:18:14,000 --> 00:18:18,400
just presented you a few slides

467
00:18:18,720 --> 00:18:20,960
go

468
00:18:21,120 --> 00:18:23,440
great so what does that mean so that

469
00:18:23,440 --> 00:18:25,120
means that now

470
00:18:25,120 --> 00:18:27,679
each verification here commitment to

471
00:18:27,679 --> 00:18:30,799
zero in the dcr setting

472
00:18:30,799 --> 00:18:32,720
we turn the sigma protocol into

473
00:18:32,720 --> 00:18:35,120
entrap.sigma protocol showing that one

474
00:18:35,120 --> 00:18:38,240
out of our commitments opens to zero and

475
00:18:38,240 --> 00:18:40,080
in order to compute the bad challenge we

476
00:18:40,080 --> 00:18:42,080
actually have to solve a polynomial

477
00:18:42,080 --> 00:18:44,960
equation of degree small r and small r

478
00:18:44,960 --> 00:18:45,679
is

479
00:18:45,679 --> 00:18:48,480
the logarithm of big r

480
00:18:48,480 --> 00:18:52,000
and you can do that with a big challenge

481
00:18:52,000 --> 00:18:54,400
space

482
00:18:54,799 --> 00:18:57,200
okay but of course we have many other

483
00:18:57,200 --> 00:18:59,919
difficulties that we have to circumvent

484
00:18:59,919 --> 00:19:02,640
in order to have our final construction

485
00:19:02,640 --> 00:19:04,880
so the problem is that how can we

486
00:19:04,880 --> 00:19:06,640
approve the unforgetability in the

487
00:19:06,640 --> 00:19:08,480
standard model result rely on the random

488
00:19:08,480 --> 00:19:10,080
miracle because in the round of

489
00:19:10,080 --> 00:19:12,080
miraculous by using the forking lemma

490
00:19:12,080 --> 00:19:13,919
you can rewind the adversary and then

491
00:19:13,919 --> 00:19:15,520
extract the weakness and as long as you

492
00:19:15,520 --> 00:19:17,919
have a witness you you of course have

493
00:19:17,919 --> 00:19:18,880
uh

494
00:19:18,880 --> 00:19:21,280
the soundness and you have you know that

495
00:19:21,280 --> 00:19:22,640
uh

496
00:19:22,640 --> 00:19:24,400
it's not possible to

497
00:19:24,400 --> 00:19:27,280
it's not feasible to to have a

498
00:19:27,280 --> 00:19:30,160
a through a valid uh signature or valid

499
00:19:30,160 --> 00:19:31,120
proof

500
00:19:31,120 --> 00:19:33,039
so the idea is that we do not need to

501
00:19:33,039 --> 00:19:35,600
prove knowledge we simply need to argue

502
00:19:35,600 --> 00:19:38,240
membership so we rely on unbounded

503
00:19:38,240 --> 00:19:40,720
simulations on argument and we provide

504
00:19:40,720 --> 00:19:44,160
in the person a construction in the dcr

505
00:19:44,160 --> 00:19:46,160
setting based on lossy

506
00:19:46,160 --> 00:19:49,280
encryption and so our id in the proof is

507
00:19:49,280 --> 00:19:52,720
to force the adversary to make a forgery

508
00:19:52,720 --> 00:19:54,880
related to a commitment that will no

509
00:19:54,880 --> 00:19:58,160
more be a commitment to zero and then

510
00:19:58,160 --> 00:20:02,640
break the the simulation soundness

511
00:20:04,400 --> 00:20:06,799
right but that's not enough because oh

512
00:20:06,799 --> 00:20:08,720
now do we define

513
00:20:08,720 --> 00:20:11,280
uh that the adversary wins so

514
00:20:11,280 --> 00:20:13,440
we force in the we want to force in the

515
00:20:13,440 --> 00:20:16,480
security game that the

516
00:20:16,480 --> 00:20:18,960
the adversary actually

517
00:20:18,960 --> 00:20:20,799
isabel if it also is able to produce a

518
00:20:20,799 --> 00:20:22,960
forgery that means that it's actually

519
00:20:22,960 --> 00:20:25,440
able to produce an opening of a

520
00:20:25,440 --> 00:20:27,200
verification key so that means that we

521
00:20:27,200 --> 00:20:29,440
want to rely somehow on someness

522
00:20:29,440 --> 00:20:31,840
property inside the protocol

523
00:20:31,840 --> 00:20:34,320
and we want to know which one of the

524
00:20:34,320 --> 00:20:37,200
reification key in the ring is actually

525
00:20:37,200 --> 00:20:39,200
attacking if you want

526
00:20:39,200 --> 00:20:40,880
so that means that

527
00:20:40,880 --> 00:20:42,000
um

528
00:20:42,000 --> 00:20:44,320
now in the security proof we will simply

529
00:20:44,320 --> 00:20:48,159
guess which position will be

530
00:20:48,159 --> 00:20:50,080
the the one of the verification key that

531
00:20:50,080 --> 00:20:52,720
the adversary try to to break in some

532
00:20:52,720 --> 00:20:55,440
sense and then we will turn it into uh

533
00:20:55,440 --> 00:20:57,039
in the next step in the proof turn it

534
00:20:57,039 --> 00:21:00,240
into a commitment to one

535
00:21:00,880 --> 00:21:03,200
but that's not enough i'm just checking

536
00:21:03,200 --> 00:21:04,400
the time

537
00:21:04,400 --> 00:21:07,679
uh that's not enough because um

538
00:21:07,679 --> 00:21:09,120
we want to prove the security in the

539
00:21:09,120 --> 00:21:11,760
standard model but result erasure so

540
00:21:11,760 --> 00:21:13,679
that means that if you remember the

541
00:21:13,679 --> 00:21:15,600
adversary can corrupt user in the

542
00:21:15,600 --> 00:21:17,360
unforgetability game

543
00:21:17,360 --> 00:21:19,760
and once he corrupts a user we have to

544
00:21:19,760 --> 00:21:21,760
give to the adversary all the coin the

545
00:21:21,760 --> 00:21:24,159
random coin that we used to produce a

546
00:21:24,159 --> 00:21:27,520
preview signature that it asked

547
00:21:27,520 --> 00:21:29,840
so now the idea is simply not to

548
00:21:29,840 --> 00:21:31,520
simulate

549
00:21:31,520 --> 00:21:33,919
the the signature and the proof but

550
00:21:33,919 --> 00:21:37,440
simply to guess which uh which identity

551
00:21:37,440 --> 00:21:39,360
will never be corrupted and the one that

552
00:21:39,360 --> 00:21:41,039
for which the adversary tried to produce

553
00:21:41,039 --> 00:21:42,720
a forgery

554
00:21:42,720 --> 00:21:45,440
it looks simple here but actually uh in

555
00:21:45,440 --> 00:21:47,120
order to be sure that we have a

556
00:21:47,120 --> 00:21:49,360
probability one out of r two to make a

557
00:21:49,360 --> 00:21:50,480
good guess

558
00:21:50,480 --> 00:21:53,360
uh we still need to have uh information

559
00:21:53,360 --> 00:21:55,360
theoretical argument there so that means

560
00:21:55,360 --> 00:21:57,679
that we need something which is uh

561
00:21:57,679 --> 00:22:00,000
sufficient which is perfectly hiding but

562
00:22:00,000 --> 00:22:01,919
at the same time we also need to extract

563
00:22:01,919 --> 00:22:04,480
the position so we have some conflicting

564
00:22:04,480 --> 00:22:05,840
properties

565
00:22:05,840 --> 00:22:08,880
that need to work together so we have to

566
00:22:08,880 --> 00:22:10,559
to solve that we had to to build

567
00:22:10,559 --> 00:22:12,480
sometimes extractable perfectly hiding

568
00:22:12,480 --> 00:22:16,720
commitment in the dcr setting

569
00:22:17,120 --> 00:22:20,240
okay and we are already done

570
00:22:20,240 --> 00:22:23,039
to show the security of the scheme so

571
00:22:23,039 --> 00:22:26,799
there is one problem left now is that

572
00:22:26,799 --> 00:22:29,840
we want to switch at some point between

573
00:22:29,840 --> 00:22:31,840
a commitment to zero and a commitment to

574
00:22:31,840 --> 00:22:33,200
one

575
00:22:33,200 --> 00:22:34,799
so that means that for that we have to

576
00:22:34,799 --> 00:22:37,440
rely on the dcr assumption of course but

577
00:22:37,440 --> 00:22:40,400
at the same time we need to extract

578
00:22:40,400 --> 00:22:43,120
uh the the bit the position the bit

579
00:22:43,120 --> 00:22:45,440
string here of the position of the the

580
00:22:45,440 --> 00:22:47,520
verification key in the ring in the

581
00:22:47,520 --> 00:22:49,679
forgery but for that we need a

582
00:22:49,679 --> 00:22:52,320
membership trapdoor related to the dcr

583
00:22:52,320 --> 00:22:54,480
setting which is

584
00:22:54,480 --> 00:22:57,280
of course related to the factorization

585
00:22:57,280 --> 00:22:58,559
of the module

586
00:22:58,559 --> 00:23:00,240
that means that if we want to extract

587
00:23:00,240 --> 00:23:01,919
and at the same time being able to make

588
00:23:01,919 --> 00:23:04,559
an indistinguishable transition there

589
00:23:04,559 --> 00:23:07,200
we have to work with distinct groups and

590
00:23:07,200 --> 00:23:09,520
then distinct modularly which is of

591
00:23:09,520 --> 00:23:10,400
course

592
00:23:10,400 --> 00:23:12,159
make life

593
00:23:12,159 --> 00:23:14,240
harder

594
00:23:14,240 --> 00:23:17,200
and the problem that comes from the

595
00:23:17,200 --> 00:23:19,600
working with two distinct groups is

596
00:23:19,600 --> 00:23:22,400
because in the way the the the ring

597
00:23:22,400 --> 00:23:24,320
signature of a

598
00:23:24,320 --> 00:23:27,280
ghost and culvert works actually the

599
00:23:27,280 --> 00:23:30,480
answer of the the underlying answer in

600
00:23:30,480 --> 00:23:32,480
the in the signature related to the bits

601
00:23:32,480 --> 00:23:35,360
the position or the verification key are

602
00:23:35,360 --> 00:23:37,919
actually used to select

603
00:23:37,919 --> 00:23:39,840
the verification key that it is used

604
00:23:39,840 --> 00:23:42,400
during the signature process

605
00:23:42,400 --> 00:23:44,159
so that means that these

606
00:23:44,159 --> 00:23:44,880
z

607
00:23:44,880 --> 00:23:48,080
zj have to be exponent

608
00:23:48,080 --> 00:23:50,559
of the commitment and so now we go into

609
00:23:50,559 --> 00:23:52,720
trouble because the two groups that

610
00:23:52,720 --> 00:23:54,640
there is no homomorphism between the two

611
00:23:54,640 --> 00:23:57,120
groups and so in order to

612
00:23:57,120 --> 00:24:00,799
avoid problem we had to ensure that the

613
00:24:00,799 --> 00:24:02,960
uh that j there

614
00:24:02,960 --> 00:24:05,279
there is no implicit reduction in it

615
00:24:05,279 --> 00:24:08,240
because otherwise we we lose the the

616
00:24:08,240 --> 00:24:10,159
information that we want to carry over

617
00:24:10,159 --> 00:24:12,000
the commitment so

618
00:24:12,000 --> 00:24:15,360
this is what we we sold also to to

619
00:24:15,360 --> 00:24:16,720
construct

620
00:24:16,720 --> 00:24:18,880
a ring signature and so somehow the

621
00:24:18,880 --> 00:24:21,200
proof related to the position must work

622
00:24:21,200 --> 00:24:24,240
over the integers

623
00:24:24,240 --> 00:24:27,200
so yes that's it for the unforgetability

624
00:24:27,200 --> 00:24:28,799
there are additional difficulty for

625
00:24:28,799 --> 00:24:30,960
proving anonymity but i do not have the

626
00:24:30,960 --> 00:24:34,559
time uh to to go on that

627
00:24:34,559 --> 00:24:36,880
but to summarize what we have

628
00:24:36,880 --> 00:24:38,640
uh we propose the first one-shot

629
00:24:38,640 --> 00:24:40,960
trapdoor sigma protocol so

630
00:24:40,960 --> 00:24:43,360
in a single shot we have an initial

631
00:24:43,360 --> 00:24:45,279
soundness error we do not have to make

632
00:24:45,279 --> 00:24:47,200
repetition

633
00:24:47,200 --> 00:24:49,360
and so we no more have to rely on

634
00:24:49,360 --> 00:24:51,279
something like cutting shoes technique

635
00:24:51,279 --> 00:24:53,600
in term of a comparable efficiency if

636
00:24:53,600 --> 00:24:55,279
you want

637
00:24:55,279 --> 00:24:57,440
and also our ring signature is

638
00:24:57,440 --> 00:24:59,600
concretely efficient in the sense that

639
00:24:59,600 --> 00:25:02,880
now the ring signature uh are simply

640
00:25:02,880 --> 00:25:05,600
keys that is a single commitment module

641
00:25:05,600 --> 00:25:07,760
and square and the secret key are the

642
00:25:07,760 --> 00:25:10,480
random coin of the commitment so this is

643
00:25:10,480 --> 00:25:12,080
really short

644
00:25:12,080 --> 00:25:14,480
there is nothing hidden there and the

645
00:25:14,480 --> 00:25:16,799
size of the signature is actually only

646
00:25:16,799 --> 00:25:19,760
uh twice uh the one that you get in the

647
00:25:19,760 --> 00:25:22,320
random oracle model

648
00:25:22,320 --> 00:25:25,279
so to to summarize that mean that we uh

649
00:25:25,279 --> 00:25:27,039
affirmatively answer the question

650
00:25:27,039 --> 00:25:28,880
whether it is possible to build

651
00:25:28,880 --> 00:25:30,720
concretely short privacy preserving

652
00:25:30,720 --> 00:25:33,279
signature in the standard model without

653
00:25:33,279 --> 00:25:35,760
pairings

654
00:25:35,919 --> 00:25:40,200
thank you for your attention

655
00:25:45,360 --> 00:25:46,480
are there any questions from the

656
00:25:46,480 --> 00:25:49,520
audience we've signed

657
00:25:50,880 --> 00:25:52,720
yeah would you like to step here to the

658
00:25:52,720 --> 00:25:55,720
microphone

659
00:26:05,520 --> 00:26:07,919
thanks for the talk

660
00:26:07,919 --> 00:26:09,440
maybe you already mentioned it and i

661
00:26:09,440 --> 00:26:10,960
didn't hear but

662
00:26:10,960 --> 00:26:13,679
um were you able to show adaptive

663
00:26:13,679 --> 00:26:15,840
soundness for your construction or only

664
00:26:15,840 --> 00:26:19,120
non-adaptive soundness

665
00:26:23,120 --> 00:26:24,559
so in the uh

666
00:26:24,559 --> 00:26:26,480
actually

667
00:26:26,480 --> 00:26:30,400
in the ring signature um

668
00:26:31,840 --> 00:26:33,679
it is adaptive in the ring in the ring

669
00:26:33,679 --> 00:26:35,840
signature anyway since uh yeah it

670
00:26:35,840 --> 00:26:38,400
depends of what the adversary already

671
00:26:38,400 --> 00:26:40,640
asked

672
00:26:41,760 --> 00:26:44,000
just

673
00:26:45,600 --> 00:26:49,240
how can i explain

674
00:26:52,080 --> 00:26:53,679
you say i think yeah the soundness is

675
00:26:53,679 --> 00:26:56,559
adaptive here

676
00:26:58,480 --> 00:27:03,240
but i do not remember oh

677
00:27:08,400 --> 00:27:09,200
okay

678
00:27:09,200 --> 00:27:12,000
i'm sorry i did not remember

679
00:27:12,000 --> 00:27:13,919
well i mean we we can discuss more uh

680
00:27:13,919 --> 00:27:17,600
offline maybe i will actually make

681
00:27:18,840 --> 00:27:22,720
thanks there more questions

682
00:27:25,200 --> 00:27:27,360
then maybe i have one uh could you

683
00:27:27,360 --> 00:27:31,439
please go back to your difficulty too

684
00:27:32,320 --> 00:27:33,279
yeah

685
00:27:33,279 --> 00:27:34,799
i'm just curious about

686
00:27:34,799 --> 00:27:35,919
um

687
00:27:35,919 --> 00:27:38,159
so here you rely on argue membership

688
00:27:38,159 --> 00:27:39,760
instead of knowledge and use loss

689
00:27:39,760 --> 00:27:42,159
encryption i'm just curious about

690
00:27:42,159 --> 00:27:44,320
how novel these techniques are to which

691
00:27:44,320 --> 00:27:46,880
extent use specific features that were

692
00:27:46,880 --> 00:27:48,799
unique to your setting

693
00:27:48,799 --> 00:27:50,640
and so on and so forth i'm just curious

694
00:27:50,640 --> 00:27:52,720
about the approach yeah yeah so here the

695
00:27:52,720 --> 00:27:54,240
fact that you want to use an uh

696
00:27:54,240 --> 00:27:56,159
simulation soundness argument of course

697
00:27:56,159 --> 00:27:59,760
here it's not new uh it's just that we

698
00:27:59,760 --> 00:28:02,720
have to provide all the ingredients that

699
00:28:02,720 --> 00:28:04,640
are needed and for the lassie encryption

700
00:28:04,640 --> 00:28:06,720
actually for the in the this year

701
00:28:06,720 --> 00:28:07,760
setting

702
00:28:07,760 --> 00:28:11,200
we had to adapt existing techniques but

703
00:28:11,200 --> 00:28:13,600
the building block in itself in the dcr

704
00:28:13,600 --> 00:28:15,120
setting

705
00:28:15,120 --> 00:28:16,799
we have to propose one that did not

706
00:28:16,799 --> 00:28:18,320
exist

707
00:28:18,320 --> 00:28:20,080
but of course rely on simulation

708
00:28:20,080 --> 00:28:22,559
soundness here to make in the

709
00:28:22,559 --> 00:28:23,840
in the construction it's of course

710
00:28:23,840 --> 00:28:25,679
something that it is not

711
00:28:25,679 --> 00:28:27,279
that is not new

712
00:28:27,279 --> 00:28:29,200
and construction uh

713
00:28:29,200 --> 00:28:31,360
constructing abundant simulations on

714
00:28:31,360 --> 00:28:33,360
earth's argument from aussie encryption

715
00:28:33,360 --> 00:28:35,360
is also something which is not new so

716
00:28:35,360 --> 00:28:36,720
here it's just for the purpose of the

717
00:28:36,720 --> 00:28:39,360
construction

718
00:28:39,440 --> 00:28:40,480
okay

719
00:28:40,480 --> 00:28:41,919
thanks

720
00:28:41,919 --> 00:28:45,840
let's find the speaker again

721
00:28:49,520 --> 00:28:51,360
and yeah that was our last talk of this

722
00:28:51,360 --> 00:28:55,240
session so thank you

