1
00:00:18,720 --> 00:00:20,720
ready

2
00:00:20,720 --> 00:00:22,960
so good morning i'm leo duca i'll have

3
00:00:22,960 --> 00:00:25,199
the pleasure to uh

4
00:00:25,199 --> 00:00:27,680
share this session this morning and also

5
00:00:27,680 --> 00:00:29,920
be responsible for mispronouncing

6
00:00:29,920 --> 00:00:32,238
numerous asian names i'm very sorry in

7
00:00:32,238 --> 00:00:33,760
advance for that

8
00:00:33,760 --> 00:00:37,120
uh we'll be starting with uh limits of

9
00:00:37,120 --> 00:00:40,000
polynomial packing for z

10
00:00:40,000 --> 00:00:42,000
pk and fpk

11
00:00:42,000 --> 00:00:44,320
and the talk will be it's a joint work

12
00:00:44,320 --> 00:00:47,680
between junk histone and kiwa lee and

13
00:00:47,680 --> 00:00:51,360
the talk will be given by kiwo

14
00:00:54,800 --> 00:00:56,399
um okay uh thank you for the

15
00:00:56,399 --> 00:00:58,640
introduction and thank you for coming i

16
00:00:58,640 --> 00:01:00,239
know it's early morning and we had a

17
00:01:00,239 --> 00:01:02,399
party last night so yeah thank you for

18
00:01:02,399 --> 00:01:04,479
coming

19
00:01:04,479 --> 00:01:06,960
today i will talk about limits of

20
00:01:06,960 --> 00:01:09,360
polynomial packings for

21
00:01:09,360 --> 00:01:12,720
zpk which is integering modulo p to the

22
00:01:12,720 --> 00:01:15,840
k and finite field f p to the k this is

23
00:01:15,840 --> 00:01:19,040
a joint work with my advisor johnny chan

24
00:01:19,040 --> 00:01:21,840
so i want to begin with a sketch of our

25
00:01:21,840 --> 00:01:22,799
work

26
00:01:22,799 --> 00:01:24,960
so the starting point of our work is an

27
00:01:24,960 --> 00:01:27,839
observation that

28
00:01:29,200 --> 00:01:31,280
an observation that very similar

29
00:01:31,280 --> 00:01:32,880
mathematical

30
00:01:32,880 --> 00:01:34,799
objects

31
00:01:34,799 --> 00:01:37,439
are being studied independently in

32
00:01:37,439 --> 00:01:40,320
subfields of cryptography so we abstract

33
00:01:40,320 --> 00:01:43,279
these concepts

34
00:01:44,159 --> 00:01:47,759
as what we call polynomial packing and

35
00:01:47,759 --> 00:01:49,759
initiate formal and unified study of

36
00:01:49,759 --> 00:01:52,479
polynomial packing and then we

37
00:01:52,479 --> 00:01:53,920
proved some upper bounds and

38
00:01:53,920 --> 00:01:57,119
impossibility results

39
00:01:57,520 --> 00:01:59,439
that is we prove that

40
00:01:59,439 --> 00:02:02,719
we cannot achieve 13 level of efficiency

41
00:02:02,719 --> 00:02:03,520
and

42
00:02:03,520 --> 00:02:06,000
we cannot construct some

43
00:02:06,000 --> 00:02:08,399
packing polynomial packing satisfying

44
00:02:08,399 --> 00:02:12,160
some desirable features and next

45
00:02:12,160 --> 00:02:14,720
coming back to our context

46
00:02:14,720 --> 00:02:15,599
we

47
00:02:15,599 --> 00:02:16,959
observe

48
00:02:16,959 --> 00:02:18,480
how these results

49
00:02:18,480 --> 00:02:20,239
imply in

50
00:02:20,239 --> 00:02:23,599
the context what what these results

51
00:02:23,599 --> 00:02:26,400
imply in the context

52
00:02:26,400 --> 00:02:28,400
so

53
00:02:28,400 --> 00:02:30,480
yeah for the sake of limited time i will

54
00:02:30,480 --> 00:02:33,599
first define polynomial packing and then

55
00:02:33,599 --> 00:02:36,720
see how it abstracts existing

56
00:02:36,720 --> 00:02:38,000
concepts

57
00:02:38,000 --> 00:02:41,200
so what is polynomial

58
00:02:41,200 --> 00:02:43,680
packing method

59
00:02:43,680 --> 00:02:46,239
it is a pair of algorithms

60
00:02:46,239 --> 00:02:49,920
packed and unpacked so

61
00:02:53,120 --> 00:02:55,760
so pack is

62
00:02:55,760 --> 00:03:00,319
it's a pack literally packs some

63
00:03:00,640 --> 00:03:03,360
several copy of some small ring r into a

64
00:03:03,360 --> 00:03:06,159
large polynomial ring scripts are and

65
00:03:06,159 --> 00:03:09,680
unpack which is opposite of

66
00:03:09,680 --> 00:03:12,879
a pack as the title suggests

67
00:03:12,879 --> 00:03:15,440
as our title suggests we are mostly

68
00:03:15,440 --> 00:03:18,159
concerned with the case where r is that

69
00:03:18,159 --> 00:03:20,640
decay or fpk

70
00:03:20,640 --> 00:03:23,440
we measure the packing density

71
00:03:23,440 --> 00:03:24,640
which is

72
00:03:24,640 --> 00:03:26,959
defined

73
00:03:26,959 --> 00:03:29,360
we measure the efficiency of our packing

74
00:03:29,360 --> 00:03:31,920
method by its packing density which is

75
00:03:31,920 --> 00:03:34,159
defined as the ratio between the bit

76
00:03:34,159 --> 00:03:35,519
size of

77
00:03:35,519 --> 00:03:37,680
packed rings and the bit size of the

78
00:03:37,680 --> 00:03:39,519
polynomial ring

79
00:03:39,519 --> 00:03:42,080
without any algebraic structure

80
00:03:42,080 --> 00:03:44,560
polynomial packing is no more than just

81
00:03:44,560 --> 00:03:46,720
labeling so

82
00:03:46,720 --> 00:03:49,440
what we find useful and interesting is

83
00:03:49,440 --> 00:03:52,239
degree d packing which satisfies a kind

84
00:03:52,239 --> 00:03:55,200
of homomorphic property that is for

85
00:03:55,200 --> 00:03:56,159
any

86
00:03:56,159 --> 00:03:59,200
polynomial p of degree not greater than

87
00:03:59,200 --> 00:04:00,560
d

88
00:04:00,560 --> 00:04:03,519
we have this commutative diagram where p

89
00:04:03,519 --> 00:04:04,720
is

90
00:04:04,720 --> 00:04:07,920
applied element wise in the left side

91
00:04:07,920 --> 00:04:10,319
that is

92
00:04:11,200 --> 00:04:14,000
if we pack message into a polynomial and

93
00:04:14,000 --> 00:04:16,959
evaluate p on the polynomial and unpack

94
00:04:16,959 --> 00:04:20,798
it we get the result which we

95
00:04:21,759 --> 00:04:24,160
get if we directly apply p to the

96
00:04:24,160 --> 00:04:27,360
messages element twice

97
00:04:27,360 --> 00:04:29,840
uh to prevent future confusion i want to

98
00:04:29,840 --> 00:04:32,639
remark that unpacked algorithm may

99
00:04:32,639 --> 00:04:35,199
differ for each multiplicati

100
00:04:35,199 --> 00:04:37,280
multiplicative level

101
00:04:37,280 --> 00:04:39,840
so this is how we formally define

102
00:04:39,840 --> 00:04:41,440
uh

103
00:04:41,440 --> 00:04:43,520
on dvd packing

104
00:04:43,520 --> 00:04:46,080
uh in our paper it is pretty short but

105
00:04:46,080 --> 00:04:47,600
you do not have to read it right now i

106
00:04:47,600 --> 00:04:49,759
just wanted to make sure that

107
00:04:49,759 --> 00:04:52,000
actually dvd packing is defined as a

108
00:04:52,000 --> 00:04:54,400
collection of packing methods so unpack

109
00:04:54,400 --> 00:04:58,080
may differ for each multi multiplicative

110
00:04:58,080 --> 00:05:00,080
level

111
00:05:00,080 --> 00:05:00,880
so

112
00:05:00,880 --> 00:05:03,039
now the context

113
00:05:03,039 --> 00:05:05,360
uh first thermomorphic encryption it is

114
00:05:05,360 --> 00:05:07,360
a cryptosystem which supports

115
00:05:07,360 --> 00:05:09,840
computation on encrypted data

116
00:05:09,840 --> 00:05:13,039
that is for a class of functions we have

117
00:05:13,039 --> 00:05:15,199
procedure called eval

118
00:05:15,199 --> 00:05:17,360
which makes this diagram commute so that

119
00:05:17,360 --> 00:05:20,160
if we encrypt a plain text

120
00:05:20,160 --> 00:05:22,479
and apply eval p

121
00:05:22,479 --> 00:05:24,400
on it and decrypt it

122
00:05:24,400 --> 00:05:26,800
we get the results which we get if we

123
00:05:26,800 --> 00:05:31,440
directly apply key to the plain text

124
00:05:31,520 --> 00:05:34,080
another remark is that contrarian

125
00:05:34,080 --> 00:05:35,680
he schemes

126
00:05:35,680 --> 00:05:38,479
are often based on being lw e problem

127
00:05:38,479 --> 00:05:40,960
rather than plain lw problem for

128
00:05:40,960 --> 00:05:43,919
efficiency regarding

129
00:05:43,919 --> 00:05:47,360
heat size and etc

130
00:05:47,360 --> 00:05:50,080
this includes a renowned bgb scheme and

131
00:05:50,080 --> 00:05:51,840
fpv scheme which

132
00:05:51,840 --> 00:05:53,199
which is

133
00:05:53,199 --> 00:05:57,680
in mainstream in hd community

134
00:05:57,759 --> 00:06:00,400
but what does it really mean to be a

135
00:06:00,400 --> 00:06:03,120
rlw based homework encryption that means

136
00:06:03,120 --> 00:06:06,080
our plain text is now a scary looking

137
00:06:06,080 --> 00:06:08,160
polynomial ring and our scheme is so

138
00:06:08,160 --> 00:06:10,720
morphic up to computation

139
00:06:10,720 --> 00:06:12,560
uh

140
00:06:12,560 --> 00:06:14,479
computations namely additions and

141
00:06:14,479 --> 00:06:16,400
multiplications of this polynomial

142
00:06:16,400 --> 00:06:18,160
polynomial ring

143
00:06:18,160 --> 00:06:19,199
so

144
00:06:19,199 --> 00:06:23,840
using ring lw enhances efficiency but

145
00:06:23,840 --> 00:06:27,120
not about practical usability so this

146
00:06:27,120 --> 00:06:28,800
scary looking

147
00:06:28,800 --> 00:06:30,560
polynomial reading structure does not

148
00:06:30,560 --> 00:06:32,319
seem to reflect

149
00:06:32,319 --> 00:06:35,440
practical reality so like who would

150
00:06:35,440 --> 00:06:38,000
uh want to compute on this polynomial

151
00:06:38,000 --> 00:06:41,360
ring for real life applications

152
00:06:41,360 --> 00:06:44,400
uh so the great idea of smart denver

153
00:06:44,400 --> 00:06:46,720
turn was essentially to use polynomial

154
00:06:46,720 --> 00:06:49,039
packing for more friendly structure

155
00:06:49,039 --> 00:06:51,199
or in their language to use homomorphic

156
00:06:51,199 --> 00:06:52,960
in the operation

157
00:06:52,960 --> 00:06:54,960
that is if we attach

158
00:06:54,960 --> 00:06:57,120
this packing method in front of he

159
00:06:57,120 --> 00:06:59,440
scheme we can use h scheme with regard

160
00:06:59,440 --> 00:07:02,319
to more friendly structure are

161
00:07:02,319 --> 00:07:04,479
while not losing too much efficiency

162
00:07:04,479 --> 00:07:06,240
efficiency by

163
00:07:06,240 --> 00:07:08,319
embedding

164
00:07:08,319 --> 00:07:10,479
not losing too much efficiency in armor

165
00:07:10,479 --> 00:07:12,560
tight sense by embedding as many

166
00:07:12,560 --> 00:07:16,319
elements as we can

167
00:07:16,319 --> 00:07:20,960
um here are some examples of hd packings

168
00:07:20,960 --> 00:07:23,039
uh the traditional packing method by

169
00:07:23,039 --> 00:07:25,680
smart denver turn

170
00:07:25,680 --> 00:07:27,440
pack messages through crt ring

171
00:07:27,440 --> 00:07:28,880
isomorphism

172
00:07:28,880 --> 00:07:31,520
does their method naturally has a degree

173
00:07:31,520 --> 00:07:34,479
infinity and perfect density of one

174
00:07:34,479 --> 00:07:36,800
uh the special case where the

175
00:07:36,800 --> 00:07:38,880
cycloatomic polynomial fully splits

176
00:07:38,880 --> 00:07:40,560
modulo p

177
00:07:40,560 --> 00:07:41,520
is still

178
00:07:41,520 --> 00:07:45,360
universally used in he applications but

179
00:07:45,360 --> 00:07:47,680
a limitation of the traditional method

180
00:07:47,680 --> 00:07:50,240
is that it does not provide

181
00:07:50,240 --> 00:07:53,680
packing for a general zpk

182
00:07:53,680 --> 00:07:56,080
especially when p is small

183
00:07:56,080 --> 00:07:56,840
in this

184
00:07:56,840 --> 00:07:58,400
regard um

185
00:07:58,400 --> 00:08:00,639
our packing method for that 2k was first

186
00:08:00,639 --> 00:08:04,160
suggested by gentry levy smart and later

187
00:08:04,160 --> 00:08:08,240
generalized to that pk by jalebian troop

188
00:08:08,240 --> 00:08:10,319
i will call this method uh

189
00:08:10,319 --> 00:08:12,400
heli packing in this talk

190
00:08:12,400 --> 00:08:14,560
and their idea was to

191
00:08:14,560 --> 00:08:17,039
pack messages only at the constant term

192
00:08:17,039 --> 00:08:19,680
of crt components of the

193
00:08:19,680 --> 00:08:22,560
polynomial ring

194
00:08:22,639 --> 00:08:24,000
considering

195
00:08:24,000 --> 00:08:24,840
that

196
00:08:24,840 --> 00:08:27,120
pk was to

197
00:08:27,120 --> 00:08:29,680
improve the

198
00:08:29,919 --> 00:08:30,639
yeah

199
00:08:30,639 --> 00:08:32,479
considering that pk was to improve the

200
00:08:32,479 --> 00:08:34,880
efficiency of fhe bootstrapping but this

201
00:08:34,880 --> 00:08:37,760
leads to slight a significant loss in

202
00:08:37,760 --> 00:08:39,360
packing density

203
00:08:39,360 --> 00:08:42,240
and new packing density and new packing

204
00:08:42,240 --> 00:08:44,640
methods were suggested along the recent

205
00:08:44,640 --> 00:08:46,959
developments in sag based and pc

206
00:08:46,959 --> 00:08:48,640
overhead 2k

207
00:08:48,640 --> 00:08:50,959
which we call speed family if you are

208
00:08:50,959 --> 00:08:52,959
familiar with that term

209
00:08:52,959 --> 00:08:55,519
an observation made by overdrive 2k was

210
00:08:55,519 --> 00:08:57,600
that degree 2 packing

211
00:08:57,600 --> 00:08:59,839
is enough for reverse beavers triple

212
00:08:59,839 --> 00:09:02,080
generation and they achieved density of

213
00:09:02,080 --> 00:09:04,640
roughly one over five

214
00:09:04,640 --> 00:09:07,760
and megahertz 2k upload by our team

215
00:09:07,760 --> 00:09:12,240
achieve density of roughly a half

216
00:09:13,519 --> 00:09:18,080
next i will briefly talk about rmfe

217
00:09:18,399 --> 00:09:20,480
in cryptography using large field is

218
00:09:20,480 --> 00:09:23,680
often required due to mathematical

219
00:09:23,680 --> 00:09:26,240
structure or security reasons on the

220
00:09:26,240 --> 00:09:29,200
other hand we usually want to compute

221
00:09:29,200 --> 00:09:32,640
over small fields namely f2 the boolean

222
00:09:32,640 --> 00:09:34,880
field

223
00:09:34,880 --> 00:09:38,000
so the idea of cascudo cramer thing and

224
00:09:38,000 --> 00:09:40,399
yuan was to study this reverse

225
00:09:40,399 --> 00:09:42,640
multiplication friendly embedding

226
00:09:42,640 --> 00:09:43,920
which embeds

227
00:09:43,920 --> 00:09:45,680
algebraic structure

228
00:09:45,680 --> 00:09:48,720
of copies of small fields into a larger

229
00:09:48,720 --> 00:09:50,959
field for example embedding copies of

230
00:09:50,959 --> 00:09:52,959
boolean fields into an

231
00:09:52,959 --> 00:09:55,360
a binary extension field

232
00:09:55,360 --> 00:09:56,720
essentially

233
00:09:56,720 --> 00:09:59,360
rmfes are degree 2 packing

234
00:09:59,360 --> 00:10:01,680
from end copies of fq

235
00:10:01,680 --> 00:10:03,040
into

236
00:10:03,040 --> 00:10:06,079
the uh into

237
00:10:06,160 --> 00:10:07,120
uh

238
00:10:07,120 --> 00:10:09,920
f q to the d which is isomorphic to f q

239
00:10:09,920 --> 00:10:12,720
x quotiented by uh some

240
00:10:12,720 --> 00:10:15,120
irreducible polynomial

241
00:10:15,120 --> 00:10:16,959
uh and i want to know that

242
00:10:16,959 --> 00:10:18,480
social indeed

243
00:10:18,480 --> 00:10:21,519
rmf is indeed a polynomial packing

244
00:10:21,519 --> 00:10:24,160
and i want to know that

245
00:10:24,160 --> 00:10:27,040
that rmfp is now a standard tool in

246
00:10:27,040 --> 00:10:29,120
information theoretical multi-part

247
00:10:29,120 --> 00:10:31,040
computation and is also being used in

248
00:10:31,040 --> 00:10:33,839
zero knowledge

249
00:10:35,519 --> 00:10:38,320
now theorems and implications

250
00:10:38,320 --> 00:10:40,560
in this talk i will only state theorems

251
00:10:40,560 --> 00:10:43,200
for a set pk case analogous theorem

252
00:10:43,200 --> 00:10:45,360
solves for fpk and you can check the

253
00:10:45,360 --> 00:10:47,760
paper if you are interested

254
00:10:47,760 --> 00:10:50,320
and also we will not talk about proof a

255
00:10:50,320 --> 00:10:52,240
short remark is that although our

256
00:10:52,240 --> 00:10:55,360
theorems may seem very natural

257
00:10:55,360 --> 00:10:58,240
proofs are slightly involved due to

258
00:10:58,240 --> 00:11:00,320
algebraic subtleties so if you're

259
00:11:00,320 --> 00:11:02,240
interested you can check the proofs but

260
00:11:02,240 --> 00:11:04,399
honestly i do not recommend to do that

261
00:11:04,399 --> 00:11:06,480
because truth is not the fun part of

262
00:11:06,480 --> 00:11:09,120
this paper

263
00:11:09,680 --> 00:11:12,079
first we have an upper bound on packing

264
00:11:12,079 --> 00:11:13,279
density

265
00:11:13,279 --> 00:11:15,519
roughly speaking

266
00:11:15,519 --> 00:11:18,160
density of degree d packing method is

267
00:11:18,160 --> 00:11:20,480
not greater than one over d

268
00:11:20,480 --> 00:11:21,600
and

269
00:11:21,600 --> 00:11:24,640
to be more precise we have this bound

270
00:11:24,640 --> 00:11:26,480
so we can check that this is consistent

271
00:11:26,480 --> 00:11:30,000
with traditional packing which is degree

272
00:11:30,000 --> 00:11:32,000
infinity packing and

273
00:11:32,000 --> 00:11:34,240
has perfect density of one but in that

274
00:11:34,240 --> 00:11:36,880
case the polynomial

275
00:11:36,880 --> 00:11:39,120
uh the equal atomic polynomial fully

276
00:11:39,120 --> 00:11:42,240
splits so this small d is one so yeah

277
00:11:42,240 --> 00:11:44,320
this makes sense

278
00:11:44,320 --> 00:11:48,240
um and so implications first mega suk

279
00:11:48,240 --> 00:11:50,959
achieves a near optimal density as a

280
00:11:50,959 --> 00:11:55,200
degree 2 packing for a set 2k as

281
00:11:55,200 --> 00:11:58,399
as since its density is roughly a half

282
00:11:58,399 --> 00:11:59,760
and second

283
00:11:59,760 --> 00:12:03,760
um our proof of fpk version of this

284
00:12:03,760 --> 00:12:06,959
theorem implies a new and more general

285
00:12:06,959 --> 00:12:10,560
proof for upper bound on rate of rmfe

286
00:12:10,560 --> 00:12:12,720
here general means it can be extended to

287
00:12:12,720 --> 00:12:14,079
higher degree

288
00:12:14,079 --> 00:12:15,200
not just

289
00:12:15,200 --> 00:12:16,959
degree 2.

290
00:12:16,959 --> 00:12:19,360
and last our theorem implies the first

291
00:12:19,360 --> 00:12:21,680
upper bound on rate of rmf over

292
00:12:21,680 --> 00:12:24,320
calculating which is first considered by

293
00:12:24,320 --> 00:12:28,000
kramer and rhombodensing

294
00:12:28,639 --> 00:12:31,200
and level consistency so

295
00:12:31,200 --> 00:12:34,240
recall a packing method level consistent

296
00:12:34,240 --> 00:12:36,720
if the packing structure is same for all

297
00:12:36,720 --> 00:12:38,639
multiplicative level

298
00:12:38,639 --> 00:12:41,920
since level consistency directly implies

299
00:12:41,920 --> 00:12:43,839
degree infinity packing this is

300
00:12:43,839 --> 00:12:45,600
desirable for the use in fully

301
00:12:45,600 --> 00:12:47,839
homomorphic encryption

302
00:12:47,839 --> 00:12:49,600
and if

303
00:12:49,600 --> 00:12:51,839
a packing is consistent then we can

304
00:12:51,839 --> 00:12:54,320
perform more big computations between

305
00:12:54,320 --> 00:12:57,120
different multiplicative levels so what

306
00:12:57,120 --> 00:12:59,600
is this good for for example we need

307
00:12:59,600 --> 00:13:01,519
these kinds of operation during reshare

308
00:13:01,519 --> 00:13:03,519
protocol which is an important building

309
00:13:03,519 --> 00:13:04,399
block

310
00:13:04,399 --> 00:13:08,160
of shg-based mpc

311
00:13:08,160 --> 00:13:11,440
mainly speeds family yeah

312
00:13:11,440 --> 00:13:13,600
so our theorem says

313
00:13:13,600 --> 00:13:15,440
we cannot pack more than the number of

314
00:13:15,440 --> 00:13:17,200
irreducible factors

315
00:13:17,200 --> 00:13:20,480
of quotient polynomial modulo p

316
00:13:20,480 --> 00:13:22,800
first

317
00:13:22,959 --> 00:13:24,880
our theorem implies that the heli

318
00:13:24,880 --> 00:13:27,200
packing for its spk is an optimal level

319
00:13:27,200 --> 00:13:29,040
consistent packing with respect to

320
00:13:29,040 --> 00:13:31,200
packing density

321
00:13:31,200 --> 00:13:32,959
second it is

322
00:13:32,959 --> 00:13:36,079
impossible to achieve efficient

323
00:13:36,079 --> 00:13:40,079
level consistent hd packing for 6k

324
00:13:40,079 --> 00:13:41,839
and followingly this shows the

325
00:13:41,839 --> 00:13:44,160
importance of a trick

326
00:13:44,160 --> 00:13:46,639
suggested in mega sdk to bypass some

327
00:13:46,639 --> 00:13:49,839
drawback of level dependent packings in

328
00:13:49,839 --> 00:13:52,880
reshare protocol

329
00:13:53,680 --> 00:13:54,639
so

330
00:13:54,639 --> 00:13:57,040
we call a packing method surjective if

331
00:13:57,040 --> 00:13:58,880
any

332
00:13:58,880 --> 00:14:01,360
element of polynomial ring is a valid

333
00:14:01,360 --> 00:14:03,920
packing for some messages

334
00:14:03,920 --> 00:14:07,040
subjectivity is desirable since if not a

335
00:14:07,040 --> 00:14:09,279
malicious packer might

336
00:14:09,279 --> 00:14:11,600
leverage this invalid packings in

337
00:14:11,600 --> 00:14:13,199
protocols

338
00:14:13,199 --> 00:14:16,079
our theorem says we cannot pack more

339
00:14:16,079 --> 00:14:18,560
than the number of linear vectors of

340
00:14:18,560 --> 00:14:20,480
quotient

341
00:14:20,480 --> 00:14:23,760
polynomial p to the k

342
00:14:23,760 --> 00:14:25,519
first our theorem implies that it is

343
00:14:25,519 --> 00:14:28,480
impossible to construct any surjective

344
00:14:28,480 --> 00:14:31,120
hg packing for

345
00:14:31,120 --> 00:14:33,920
z2k and following me this shows the

346
00:14:33,920 --> 00:14:36,399
importance of a concept named zero

347
00:14:36,399 --> 00:14:39,360
knowledge proof of message knowledge

348
00:14:39,360 --> 00:14:42,079
suggesting megazouk which proved that a

349
00:14:42,079 --> 00:14:44,720
ciphertext contains a validly packed

350
00:14:44,720 --> 00:14:47,120
message

351
00:14:47,199 --> 00:14:48,320
okay

352
00:14:48,320 --> 00:14:50,160
so summary

353
00:14:50,160 --> 00:14:50,959
we

354
00:14:50,959 --> 00:14:53,519
initiated the formal and unified study

355
00:14:53,519 --> 00:14:55,440
of polynomial packing which appears in

356
00:14:55,440 --> 00:14:58,399
various contexts including

357
00:14:58,399 --> 00:15:00,639
homomorphic encryption some autonomous

358
00:15:00,639 --> 00:15:02,880
encryption-based multi-party computation

359
00:15:02,880 --> 00:15:05,839
and information theoretical mpc and also

360
00:15:05,839 --> 00:15:07,199
zero knowledge

361
00:15:07,199 --> 00:15:09,519
then we proved upper bound on packing

362
00:15:09,519 --> 00:15:11,440
density and impossibility results

363
00:15:11,440 --> 00:15:14,160
regarding level consistency and

364
00:15:14,160 --> 00:15:16,959
surjectivity

365
00:15:17,600 --> 00:15:20,800
our results have implications on shg

366
00:15:20,800 --> 00:15:23,440
based npc oversight 2k namely optimality

367
00:15:23,440 --> 00:15:26,240
and some justific justifications of

368
00:15:26,240 --> 00:15:29,600
techniques used in megahertz 2k

369
00:15:29,600 --> 00:15:33,040
and implications on hg packing that heli

370
00:15:33,040 --> 00:15:35,199
packing is optimal if you want set decay

371
00:15:35,199 --> 00:15:37,920
message space and level consistency

372
00:15:37,920 --> 00:15:39,199
and also

373
00:15:39,199 --> 00:15:42,399
implications on upper bounds on rates of

374
00:15:42,399 --> 00:15:45,040
rmfv

375
00:15:45,279 --> 00:15:47,519
as a conclusion i want to say something

376
00:15:47,519 --> 00:15:49,199
about why i think this work is

377
00:15:49,199 --> 00:15:51,600
interesting first a packing is not a

378
00:15:51,600 --> 00:15:54,560
question asked before secure computation

379
00:15:54,560 --> 00:15:55,360
since

380
00:15:55,360 --> 00:15:57,360
messages are static in

381
00:15:57,360 --> 00:16:00,079
traditional cryptosystems like vanilla

382
00:16:00,079 --> 00:16:02,079
public key encryption

383
00:16:02,079 --> 00:16:04,000
we do not have to worry about algebraic

384
00:16:04,000 --> 00:16:06,000
structure of the message space

385
00:16:06,000 --> 00:16:09,040
second packing is a question shared by

386
00:16:09,040 --> 00:16:12,480
secure computation primitives such as he

387
00:16:12,480 --> 00:16:15,120
mpc and zero knowledge

388
00:16:15,120 --> 00:16:17,839
in this regime messages are dynamic and

389
00:16:17,839 --> 00:16:19,759
of course algebraic structure of message

390
00:16:19,759 --> 00:16:21,360
space matters

391
00:16:21,360 --> 00:16:22,959
and i believe

392
00:16:22,959 --> 00:16:25,040
that there are more questions of like

393
00:16:25,040 --> 00:16:26,880
this namely which is

394
00:16:26,880 --> 00:16:28,639
not a question that's before secret

395
00:16:28,639 --> 00:16:30,079
computation

396
00:16:30,079 --> 00:16:33,199
and but is a question shared by secret

397
00:16:33,199 --> 00:16:34,959
computation primitives

398
00:16:34,959 --> 00:16:38,079
and this must be especially visible when

399
00:16:38,079 --> 00:16:40,399
we try to apply secret computation to

400
00:16:40,399 --> 00:16:42,160
real life problems

401
00:16:42,160 --> 00:16:45,360
seeking practical usability

402
00:16:45,360 --> 00:16:50,040
and that's it thank you for listening

403
00:16:55,120 --> 00:16:56,560
thank you

404
00:16:56,560 --> 00:16:59,040
any question for him

405
00:16:59,040 --> 00:17:03,079
we have quite a bit of time

406
00:17:05,679 --> 00:17:07,839
no no one i'll shoot one first and then

407
00:17:07,839 --> 00:17:09,760
let's see if someone else

408
00:17:09,760 --> 00:17:11,439
um

409
00:17:11,439 --> 00:17:13,679
yes so

410
00:17:13,679 --> 00:17:15,919
have you also looked at the applications

411
00:17:15,919 --> 00:17:18,079
of your crm outside of cryptography

412
00:17:18,079 --> 00:17:19,599
because this kind of embedding

413
00:17:19,599 --> 00:17:21,919
techniques they look a lot like what is

414
00:17:21,919 --> 00:17:22,720
done

415
00:17:22,720 --> 00:17:25,919
for example by by harvey and van der pol

416
00:17:25,919 --> 00:17:26,799
for

417
00:17:26,799 --> 00:17:28,720
integer multiplication in times and log

418
00:17:28,720 --> 00:17:29,679
n

419
00:17:29,679 --> 00:17:31,840
all this kind of uh

420
00:17:31,840 --> 00:17:35,039
algebra computational algebra so

421
00:17:35,039 --> 00:17:37,840
um no not not really so that will be

422
00:17:37,840 --> 00:17:39,520
interesting direction future direction

423
00:17:39,520 --> 00:17:40,400
yeah

424
00:17:40,400 --> 00:17:43,400
okay

425
00:17:46,400 --> 00:17:48,320
anything else

426
00:17:48,320 --> 00:17:51,600
okay so let's uh thanks kiwi again and

427
00:17:51,600 --> 00:17:55,320
we'll come on next speaker

