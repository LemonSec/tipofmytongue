1
00:00:00,000 --> 00:00:05,759
<font color="#CCCCCC">to the session about zero</font><font color="#E5E5E5"> knowledge</font>

2
00:00:02,100 --> 00:00:07,949
<font color="#E5E5E5">protocols and the</font><font color="#CCCCCC"> forced</font><font color="#E5E5E5"> are going to be</font>

3
00:00:05,759 --> 00:00:10,340
about the existence of<font color="#CCCCCC"> Iran's or</font>

4
00:00:07,950 --> 00:00:13,219
knowledge proofs by any Lodge hacker

5
00:00:10,340 --> 00:00:16,970
people we are and I'm<font color="#CCCCCC"> chip Jane and</font>

6
00:00:13,219 --> 00:00:19,189
<font color="#CCCCCC">Neal's would</font><font color="#E5E5E5"> be given to talk</font><font color="#CCCCCC"> okay</font>

7
00:00:16,970 --> 00:00:22,410
thanks for<font color="#CCCCCC"> the introduction</font>

8
00:00:19,189 --> 00:00:24,869
so the wrong complexity of zero

9
00:00:22,410 --> 00:00:27,869
knowledge proof has seen a lot of

10
00:00:24,869 --> 00:00:42,300
research over the years I want<font color="#E5E5E5"> to</font>

11
00:00:27,869 --> 00:00:44,989
<font color="#CCCCCC">emphasize that don't worry it happens</font>

12
00:00:42,300 --> 00:00:44,989
every talk

13
00:00:51,390 --> 00:00:55,560
I'm talking about<font color="#CCCCCC"> proofs here</font>

14
00:00:53,730 --> 00:00:58,110
no arguments<font color="#CCCCCC"> so we're talking</font><font color="#E5E5E5"> about</font>

15
00:00:55,560 --> 00:01:02,400
protocols that are<font color="#E5E5E5"> sound</font><font color="#CCCCCC"> even against</font>

16
00:00:58,110 --> 00:01:03,570
unbounded<font color="#CCCCCC"> rumors</font><font color="#E5E5E5"> and we've known a</font>

17
00:01:02,400 --> 00:01:09,450
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> things about the run</font>

18
00:01:03,570 --> 00:01:11,610
complexity for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> while</font><font color="#CCCCCC"> called like an</font>

19
00:01:09,450 --> 00:01:14,070
orange<font color="#E5E5E5"> showed that two rounds</font>

20
00:01:11,610 --> 00:01:16,170
<font color="#CCCCCC">zero-knowledge</font><font color="#E5E5E5"> groups can basically not</font>

21
00:01:14,070 --> 00:01:17,759
exist for interesting languages the only

22
00:01:16,170 --> 00:01:21,180
<font color="#E5E5E5">languages for which you can have to run</font>

23
00:01:17,760 --> 00:01:22,979
proofs are in<font color="#CCCCCC"> PvP</font><font color="#E5E5E5"> which are languages</font>

24
00:01:21,180 --> 00:01:26,009
where<font color="#CCCCCC"> you can verify that on your</font><font color="#E5E5E5"> own</font>

25
00:01:22,979 --> 00:01:27,929
anyway<font color="#E5E5E5"> so you don't need to prove it on</font>

26
00:01:26,009 --> 00:01:30,119
the other hand of the spectrum we have

27
00:01:27,930 --> 00:01:32,310
<font color="#E5E5E5">the result of effect on which showed</font>

28
00:01:30,119 --> 00:01:36,210
that<font color="#E5E5E5"> five round proofs</font><font color="#CCCCCC"> do it exist</font><font color="#E5E5E5"> for</font>

29
00:01:32,310 --> 00:01:38,759
<font color="#E5E5E5">all of it be in the middle we</font><font color="#CCCCCC"> have the</font>

30
00:01:36,210 --> 00:01:44,460
question do three or<font color="#CCCCCC"> four run proofs</font>

31
00:01:38,759 --> 00:01:47,310
<font color="#E5E5E5">exists for</font><font color="#CCCCCC"> NP and cuts into the eight</font>

32
00:01:44,460 --> 00:01:49,649
<font color="#E5E5E5">show that if you only look at</font><font color="#CCCCCC"> blackbox</font>

33
00:01:47,310 --> 00:01:51,890
simulation<font color="#E5E5E5"> they're actually full round</font>

34
00:01:49,649 --> 00:01:54,479
proofs and thereby also<font color="#CCCCCC"> agreement proofs</font>

35
00:01:51,890 --> 00:01:57,000
cannot exist for all of ampion

36
00:01:54,479 --> 00:02:02,460
they can only exist for languages in

37
00:01:57,000 --> 00:02:04,740
<font color="#E5E5E5">column a which still has open the</font>

38
00:02:02,460 --> 00:02:07,679
question<font color="#CCCCCC"> well</font><font color="#E5E5E5"> what about</font><font color="#CCCCCC"> non wettable</font>

39
00:02:04,740 --> 00:02:10,440
<font color="#E5E5E5">simulation and there's a very recent</font>

40
00:02:07,680 --> 00:02:13,500
result from last year<font color="#CCCCCC"> in crypto by Alya</font>

41
00:02:10,440 --> 00:02:17,519
<font color="#E5E5E5">that showed that for public coin</font>

42
00:02:13,500 --> 00:02:19,950
protocols<font color="#E5E5E5"> under certain strong</font>

43
00:02:17,519 --> 00:02:22,739
assumptions confiscation namely that

44
00:02:19,950 --> 00:02:25,109
some exponentially<font color="#E5E5E5"> secure IO exists and</font>

45
00:02:22,739 --> 00:02:27,690
a special kind of obfuscation<font color="#E5E5E5"> called</font>

46
00:02:25,110 --> 00:02:30,540
input hiding obfuscation for multi bit

47
00:02:27,690 --> 00:02:33,390
point functions exist<font color="#E5E5E5"> they could rule of</font>

48
00:02:30,540 --> 00:02:36,989
public coin protocols for any constant

49
00:02:33,390 --> 00:02:39,980
number<font color="#CCCCCC"> of rounds in the sense that again</font>

50
00:02:36,989 --> 00:02:45,840
these<font color="#E5E5E5"> particles can only exist for</font>

51
00:02:39,980 --> 00:02:48,179
languages in<font color="#E5E5E5"> PPP so this still leaves</font>

52
00:02:45,840 --> 00:02:50,760
the question<font color="#E5E5E5"> of course what</font><font color="#CCCCCC"> about long</font>

53
00:02:48,180 --> 00:02:54,030
black box<font color="#E5E5E5"> private coin protocols those</font>

54
00:02:50,760 --> 00:02:55,640
are not Albanian this and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> our</font>

55
00:02:54,030 --> 00:02:58,950
result comes in

56
00:02:55,640 --> 00:02:59,649
we specifically rule of three round

57
00:02:58,950 --> 00:03:01,238
protocols

58
00:02:59,650 --> 00:03:03,870
even in the private coin and<font color="#E5E5E5"> on</font>

59
00:03:01,239 --> 00:03:06,760
<font color="#E5E5E5">Blackhawk simulation setting</font>

60
00:03:03,870 --> 00:03:08,709
specifically assuming<font color="#E5E5E5"> sub-exponential</font>

61
00:03:06,760 --> 00:03:09,939
<font color="#CCCCCC">isa qio</font><font color="#E5E5E5"> subject when she secured</font>

62
00:03:08,709 --> 00:03:12,459
puncture OPRS

63
00:03:09,939 --> 00:03:14,290
and exponentially<font color="#CCCCCC"> secure into hiding</font>

64
00:03:12,459 --> 00:03:18,069
obfuscation for multiple point functions

65
00:03:14,290 --> 00:03:21,159
we show<font color="#E5E5E5"> that private point three</font><font color="#CCCCCC"> run</font>

66
00:03:18,069 --> 00:03:22,839
protocols for<font color="#CCCCCC"> three realms your</font>

67
00:03:21,159 --> 00:03:27,099
knowledge<font color="#CCCCCC"> groups can only exist for</font>

68
00:03:22,840 --> 00:03:28,959
languages<font color="#CCCCCC"> indeed this of course leads to</font>

69
00:03:27,099 --> 00:03:32,619
<font color="#E5E5E5">the natural question</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> about four</font>

70
00:03:28,959 --> 00:03:35,260
rounds and we do not<font color="#E5E5E5"> expect that our</font>

71
00:03:32,620 --> 00:03:38,290
techniques can be<font color="#E5E5E5"> extended to four</font>

72
00:03:35,260 --> 00:03:40,328
rounds the reason is that<font color="#E5E5E5"> there's just a</font>

73
00:03:38,290 --> 00:03:44,159
<font color="#E5E5E5">weakened notion of</font><font color="#CCCCCC"> your knowledge</font><font color="#E5E5E5"> called</font>

74
00:03:40,329 --> 00:03:49,720
epsilon<font color="#CCCCCC"> zero knowledge which basically</font>

75
00:03:44,159 --> 00:03:54,430
<font color="#E5E5E5">the</font><font color="#CCCCCC"> simulator is allowed to not simulate</font>

76
00:03:49,720 --> 00:03:56,200
negligibly close<font color="#E5E5E5"> but the map can</font><font color="#CCCCCC"> be it</font>

77
00:03:54,430 --> 00:03:58,480
can<font color="#E5E5E5"> be possible to distinguish between</font>

78
00:03:56,200 --> 00:04:03,540
the simulator output and the real

79
00:03:58,480 --> 00:04:06,608
<font color="#CCCCCC">protocol</font><font color="#E5E5E5"> output by effect of epsilon and</font>

80
00:04:03,540 --> 00:04:08,858
this<font color="#CCCCCC"> weaker notion of zero knowledge our</font>

81
00:04:06,609 --> 00:04:10,900
result<font color="#E5E5E5"> extends to it which means we also</font>

82
00:04:08,859 --> 00:04:14,079
<font color="#E5E5E5">rule out epsilon zero</font><font color="#CCCCCC"> knowledge through</font>

83
00:04:10,900 --> 00:04:17,798
your own protocols however absolutely

84
00:04:14,079 --> 00:04:21,940
<font color="#E5E5E5">laws for forums can be dissociated</font><font color="#CCCCCC"> by a</font>

85
00:04:17,798 --> 00:04:24,179
protocol<font color="#E5E5E5"> due to</font><font color="#CCCCCC"> attacks Kidada from</font>

86
00:04:21,940 --> 00:04:27,669
multi collision resistant<font color="#E5E5E5"> hash functions</font>

87
00:04:24,180 --> 00:04:29,110
<font color="#E5E5E5">now we don't know as</font><font color="#CCCCCC"> far as</font><font color="#E5E5E5"> I know that</font>

88
00:04:27,669 --> 00:04:30,909
<font color="#E5E5E5">multi</font><font color="#CCCCCC"> Commission is national you can</font>

89
00:04:29,110 --> 00:04:33,580
actually<font color="#E5E5E5"> be instantiated</font><font color="#CCCCCC"> from standard</font>

90
00:04:30,909 --> 00:04:35,080
assumptions<font color="#E5E5E5"> but nevertheless it's a</font>

91
00:04:33,580 --> 00:04:37,150
<font color="#CCCCCC">technical hurdle</font><font color="#E5E5E5"> that would need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

92
00:04:35,080 --> 00:04:41,889
overcome<font color="#CCCCCC"> to extend this so it seems</font>

93
00:04:37,150 --> 00:04:45,409
<font color="#E5E5E5">unlikely at the moment so how do the</font>

94
00:04:41,889 --> 00:04:49,889
proofs<font color="#E5E5E5"> both our proof and also the</font>

95
00:04:45,410 --> 00:04:52,710
<font color="#E5E5E5">Kalai had actually work the basic idea</font>

96
00:04:49,889 --> 00:04:55,220
is one of<font color="#CCCCCC"> wrong compression which means</font>

97
00:04:52,710 --> 00:04:58,979
that we<font color="#E5E5E5"> take a three</font><font color="#CCCCCC"> round protocol and</font>

98
00:04:55,220 --> 00:05:01,320
we compress it<font color="#CCCCCC"> down to</font><font color="#E5E5E5"> a protocol with</font>

99
00:04:58,979 --> 00:05:05,190
fewer rows<font color="#E5E5E5"> why do we want to do that</font>

100
00:05:01,320 --> 00:05:06,870
well<font color="#E5E5E5"> the first idea</font><font color="#CCCCCC"> is that ruling</font><font color="#E5E5E5"> out</font>

101
00:05:05,190 --> 00:05:08,790
<font color="#CCCCCC">particle with fewer rounds should</font><font color="#E5E5E5"> be</font>

102
00:05:06,870 --> 00:05:11,610
easier because it's harder to construct

103
00:05:08,790 --> 00:05:14,370
them<font color="#E5E5E5"> so if we can kinetic and allowed</font><font color="#CCCCCC"> 3</font>

104
00:05:11,610 --> 00:05:16,050
to run protocols and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can compress it</font>

105
00:05:14,370 --> 00:05:19,199
for your own protocol<font color="#CCCCCC"> to to run protocol</font>

106
00:05:16,050 --> 00:05:23,910
<font color="#E5E5E5">then we've also ruled out three run</font>

107
00:05:19,199 --> 00:05:26,820
particle however<font color="#E5E5E5"> so one might think now</font>

108
00:05:23,910 --> 00:05:28,650
that<font color="#E5E5E5"> then you're done because if you can</font>

109
00:05:26,820 --> 00:05:31,650
compress<font color="#CCCCCC"> the</font><font color="#E5E5E5"> three on proof and we have</font>

110
00:05:28,650 --> 00:05:34,109
ruled out to run proofs by voltage<font color="#CCCCCC"> Oran</font>

111
00:05:31,650 --> 00:05:38,638
then you might<font color="#E5E5E5"> think that we're down the</font>

112
00:05:34,110 --> 00:05:39,870
problem is<font color="#E5E5E5"> life's not that simple</font><font color="#CCCCCC"> the</font>

113
00:05:38,639 --> 00:05:41,910
fact<font color="#E5E5E5"> is that in all of these</font>

114
00:05:39,870 --> 00:05:44,160
compressions<font color="#CCCCCC"> if you do run compression</font>

115
00:05:41,910 --> 00:05:46,919
you usually lose the in the soundness of

116
00:05:44,160 --> 00:05:48,720
<font color="#E5E5E5">the protocol meaning that what you get</font>

117
00:05:46,919 --> 00:05:52,469
there<font color="#E5E5E5"> is no longer proof it's actually</font>

118
00:05:48,720 --> 00:05:53,940
an argument<font color="#E5E5E5"> it's no longer sound against</font>

119
00:05:52,470 --> 00:05:57,000
unbounded<font color="#E5E5E5"> attackers it's only</font>

120
00:05:53,940 --> 00:05:59,070
computationally sound so we need to<font color="#E5E5E5"> do</font>

121
00:05:57,000 --> 00:06:02,430
take a<font color="#E5E5E5"> different path to get a</font>

122
00:05:59,070 --> 00:06:04,770
contradiction<font color="#CCCCCC"> and the path</font><font color="#E5E5E5"> that we take</font>

123
00:06:02,430 --> 00:06:08,070
is<font color="#CCCCCC"> that what we show is that if PI the</font>

124
00:06:04,770 --> 00:06:12,659
original<font color="#CCCCCC"> 3 run proof is sound</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> PI</font>

125
00:06:08,070 --> 00:06:15,240
prime is a<font color="#E5E5E5"> sound</font><font color="#CCCCCC"> argument but PI prime</font>

126
00:06:12,660 --> 00:06:17,280
<font color="#E5E5E5">being a sound</font><font color="#CCCCCC"> argument implies that the</font>

127
00:06:15,240 --> 00:06:19,289
<font color="#CCCCCC">original protocol</font><font color="#E5E5E5"> PI is not your</font>

128
00:06:17,280 --> 00:06:22,198
knowledge and thereby the soundness of

129
00:06:19,289 --> 00:06:24,870
<font color="#CCCCCC">PI actually implies that PI</font><font color="#E5E5E5"> cannot be</font>

130
00:06:22,199 --> 00:06:29,550
<font color="#E5E5E5">zero knowledge unless the languages in</font>

131
00:06:24,870 --> 00:06:31,320
<font color="#E5E5E5">VPP that is which now leads to the</font>

132
00:06:29,550 --> 00:06:33,449
<font color="#CCCCCC">question how do we actually compress</font>

133
00:06:31,320 --> 00:06:35,280
protocols to compress<font color="#CCCCCC"> protocols we</font>

134
00:06:33,449 --> 00:06:39,330
somehow have<font color="#CCCCCC"> to remove interaction</font><font color="#E5E5E5"> from</font>

135
00:06:35,280 --> 00:06:40,979
it so how can we do<font color="#E5E5E5"> that basically</font><font color="#CCCCCC"> the</font>

136
00:06:39,330 --> 00:06:43,568
<font color="#E5E5E5">only way to do that</font><font color="#CCCCCC"> is to</font><font color="#E5E5E5"> somehow move</font>

137
00:06:40,979 --> 00:06:45,699
around computation we could try<font color="#E5E5E5"> to move</font>

138
00:06:43,569 --> 00:06:48,159
mutation from the prover to the verifier

139
00:06:45,699 --> 00:06:51,460
to somehow<font color="#E5E5E5"> eliminate the first</font>

140
00:06:48,159 --> 00:06:53,050
<font color="#E5E5E5">communication</font><font color="#CCCCCC"> step which seems hard</font>

141
00:06:51,460 --> 00:06:55,839
because the<font color="#CCCCCC"> proved girl already uses his</font>

142
00:06:53,050 --> 00:06:57,249
witness<font color="#E5E5E5"> there so all we can do together</font>

143
00:06:55,839 --> 00:06:59,349
way<font color="#CCCCCC"> round we could try</font><font color="#E5E5E5"> to move</font>

144
00:06:57,249 --> 00:07:02,229
computation from the verifier to the

145
00:06:59,349 --> 00:07:06,449
prover<font color="#E5E5E5"> and we actually know from the</font>

146
00:07:02,229 --> 00:07:09,039
<font color="#E5E5E5">compression okay that we can use here</font>

147
00:07:06,449 --> 00:07:12,369
<font color="#CCCCCC">ehm here for</font><font color="#E5E5E5"> example works like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if</font>

148
00:07:09,039 --> 00:07:14,409
<font color="#E5E5E5">we look at public own protocols which is</font>

149
00:07:12,369 --> 00:07:16,509
where<font color="#CCCCCC"> data</font><font color="#E5E5E5"> is not chosen in some</font>

150
00:07:14,409 --> 00:07:20,020
arbitrary way but where beta<font color="#E5E5E5"> is just</font>

151
00:07:16,509 --> 00:07:23,949
randomly<font color="#CCCCCC"> chosen coins</font><font color="#E5E5E5"> then we can apply</font>

152
00:07:20,020 --> 00:07:26,859
<font color="#E5E5E5">CH</font><font color="#CCCCCC"> emil which basically means we</font><font color="#E5E5E5"> just</font>

153
00:07:23,949 --> 00:07:29,770
drop the first<font color="#E5E5E5"> message instead of the</font>

154
00:07:26,860 --> 00:07:32,379
<font color="#E5E5E5">sampling data</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we do is we sample a</font>

155
00:07:29,770 --> 00:07:35,258
hash function from<font color="#E5E5E5"> hash</font><font color="#CCCCCC"> factor</font><font color="#E5E5E5"> family we</font>

156
00:07:32,379 --> 00:07:37,360
<font color="#CCCCCC">send this hash function over to the</font>

157
00:07:35,259 --> 00:07:39,729
proven<font color="#E5E5E5"> and now the prover is able to</font>

158
00:07:37,360 --> 00:07:41,919
just compute the proof<font color="#E5E5E5"> she can compute</font>

159
00:07:39,729 --> 00:07:44,139
alpha then she can sample bigger by

160
00:07:41,919 --> 00:07:47,169
using the hash function<font color="#CCCCCC"> and compute the</font>

161
00:07:44,139 --> 00:07:49,209
response<font color="#E5E5E5"> gamma and just send both alpha</font>

162
00:07:47,169 --> 00:07:52,058
<font color="#E5E5E5">and gamma over to the verifier who can</font>

163
00:07:49,209 --> 00:07:54,069
verify<font color="#E5E5E5"> this proof in the random Oracle</font>

164
00:07:52,059 --> 00:07:56,969
model<font color="#CCCCCC"> we know that this is this</font>

165
00:07:54,069 --> 00:07:59,889
<font color="#CCCCCC">preserved soundness but</font><font color="#E5E5E5"> crucially</font>

166
00:07:56,969 --> 00:08:02,498
collided<font color="#CCCCCC"> I'll showed that not only is</font>

167
00:07:59,889 --> 00:08:05,379
this possible<font color="#E5E5E5"> in</font><font color="#CCCCCC"> ortho</font><font color="#E5E5E5"> mode you can</font>

168
00:08:02,499 --> 00:08:08,169
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> associate this hash function by</font>

169
00:08:05,379 --> 00:08:10,479
using<font color="#E5E5E5"> an obfuscation and functional PRS</font>

170
00:08:08,169 --> 00:08:16,869
<font color="#CCCCCC">mainly what you do is simply</font><font color="#E5E5E5"> you</font>

171
00:08:10,479 --> 00:08:18,669
<font color="#E5E5E5">obfuscate control here</font><font color="#CCCCCC"> of course so this</font>

172
00:08:16,869 --> 00:08:20,800
works in the public<font color="#CCCCCC"> point case in the</font>

173
00:08:18,669 --> 00:08:23,169
private coin case it's more tricky

174
00:08:20,800 --> 00:08:25,959
because well we do<font color="#E5E5E5"> not simply sample</font>

175
00:08:23,169 --> 00:08:29,349
random points here we do some arbitrary

176
00:08:25,959 --> 00:08:31,509
computation<font color="#E5E5E5"> however if you look at what</font>

177
00:08:29,349 --> 00:08:33,880
<font color="#E5E5E5">this actually does this in satiation of</font>

178
00:08:31,509 --> 00:08:35,829
the hash function<font color="#CCCCCC"> is so the verifier</font>

179
00:08:33,880 --> 00:08:37,990
whatever<font color="#E5E5E5"> would you would usually do</font><font color="#CCCCCC"> is</font>

180
00:08:35,828 --> 00:08:39,848
sample random coins<font color="#CCCCCC"> well what does this</font>

181
00:08:37,990 --> 00:08:44,680
<font color="#CCCCCC">have</font><font color="#E5E5E5"> fun to do it just statins coins</font>

182
00:08:39,849 --> 00:08:47,009
<font color="#CCCCCC">suitably so basically this</font><font color="#E5E5E5"> is just a D</font>

183
00:08:44,680 --> 00:08:51,469
randomized version of an almost<font color="#E5E5E5"> verifier</font>

184
00:08:47,009 --> 00:08:53,000
<font color="#E5E5E5">and if we notice that</font>

185
00:08:51,470 --> 00:08:55,580
actually apply the same thing to<font color="#CCCCCC"> a</font>

186
00:08:53,000 --> 00:08:58,580
private<font color="#E5E5E5"> point protocol we can't just</font>

187
00:08:55,580 --> 00:09:01,130
look at<font color="#E5E5E5"> the P randomized</font><font color="#CCCCCC"> Circuit of</font><font color="#E5E5E5"> the</font>

188
00:08:58,580 --> 00:09:03,170
verifier which just samples<font color="#E5E5E5"> a random</font>

189
00:09:01,130 --> 00:09:05,270
tape<font color="#CCCCCC"> sooner randomly using a heart</font>

190
00:09:03,170 --> 00:09:07,160
<font color="#CCCCCC">coding for your</font><font color="#E5E5E5"> F key and then just</font>

191
00:09:05,270 --> 00:09:09,590
honestly computes whatever the verifier

192
00:09:07,160 --> 00:09:11,360
would normally computer and then just do

193
00:09:09,590 --> 00:09:13,850
<font color="#CCCCCC">the</font><font color="#E5E5E5"> same transformation</font><font color="#CCCCCC"> you drop the</font>

194
00:09:11,360 --> 00:09:16,460
<font color="#E5E5E5">first message you just compute an</font>

195
00:09:13,850 --> 00:09:18,290
obfuscated circuit here<font color="#CCCCCC"> you send it over</font>

196
00:09:16,460 --> 00:09:23,300
and<font color="#E5E5E5"> now the program can just compute the</font>

197
00:09:18,290 --> 00:09:27,199
proof so this is the argument<font color="#CCCCCC"> the</font>

198
00:09:23,300 --> 00:09:29,540
question is of course how do we how do

199
00:09:27,200 --> 00:09:34,430
we prove<font color="#E5E5E5"> using this compression argument</font>

200
00:09:29,540 --> 00:09:37,730
that that<font color="#CCCCCC"> these three round proof</font><font color="#E5E5E5"> must</font>

201
00:09:34,430 --> 00:09:39,739
not<font color="#E5E5E5"> easier knowledge so we need to prove</font>

202
00:09:37,730 --> 00:09:41,420
<font color="#E5E5E5">two things we have our product original</font>

203
00:09:39,740 --> 00:09:42,800
proof<font color="#E5E5E5"> and we have our argument we need</font>

204
00:09:41,420 --> 00:09:45,050
to prove two things<font color="#E5E5E5"> we need to prove</font>

205
00:09:42,800 --> 00:09:47,000
that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> soundness of PI prime</font>

206
00:09:45,050 --> 00:09:49,430
actually implies that<font color="#CCCCCC"> PI</font><font color="#E5E5E5"> is not zero</font>

207
00:09:47,000 --> 00:09:51,020
knowledge<font color="#E5E5E5"> and we need that the</font>

208
00:09:49,430 --> 00:09:55,160
compression<font color="#E5E5E5"> preserves soundness in the</font>

209
00:09:51,020 --> 00:09:56,390
<font color="#E5E5E5">sense of computational</font><font color="#CCCCCC"> servers the first</font>

210
00:09:55,160 --> 00:09:59,569
part of that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> actually relatively</font>

211
00:09:56,390 --> 00:10:02,420
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> it follows the same strategy</font><font color="#E5E5E5"> as</font>

212
00:09:59,570 --> 00:10:05,210
<font color="#CCCCCC">go like or initially with some slight</font>

213
00:10:02,420 --> 00:10:07,250
<font color="#E5E5E5">clarification</font><font color="#CCCCCC"> if we</font><font color="#E5E5E5"> assume to what</font>

214
00:10:05,210 --> 00:10:09,740
contradiction<font color="#CCCCCC"> that this protocol would</font>

215
00:10:07,250 --> 00:10:12,020
be zero knowledge<font color="#E5E5E5"> then we can look at</font>

216
00:10:09,740 --> 00:10:14,450
some arbitrary<font color="#E5E5E5"> verifier so we can</font>

217
00:10:12,020 --> 00:10:17,569
specify a verifier and this verify what

218
00:10:14,450 --> 00:10:20,300
it does is just<font color="#E5E5E5"> it takes the non-syrian</font>

219
00:10:17,570 --> 00:10:21,800
put and interprets it as a circuit<font color="#CCCCCC"> and</font>

220
00:10:20,300 --> 00:10:23,569
once you receive the<font color="#E5E5E5"> first muscle it</font>

221
00:10:21,800 --> 00:10:25,660
just applies this circuit<font color="#CCCCCC"> to the message</font>

222
00:10:23,570 --> 00:10:27,830
and send this back<font color="#CCCCCC"> as its response</font><font color="#E5E5E5"> and</font>

223
00:10:25,660 --> 00:10:30,890
at the end it just output<font color="#E5E5E5"> the full</font>

224
00:10:27,830 --> 00:10:32,780
transcript by the<font color="#CCCCCC"> zeroes property we now</font>

225
00:10:30,890 --> 00:10:35,300
know that<font color="#CCCCCC"> there exists a simulator that</font>

226
00:10:32,780 --> 00:10:38,449
<font color="#E5E5E5">only given this absolutely input also</font>

227
00:10:35,300 --> 00:10:40,550
<font color="#E5E5E5">outputs a transcript that is</font>

228
00:10:38,450 --> 00:10:43,880
<font color="#E5E5E5">computationally indistinguishable from a</font>

229
00:10:40,550 --> 00:10:46,160
real one<font color="#E5E5E5"> and we can use this to</font>

230
00:10:43,880 --> 00:10:49,340
construct<font color="#CCCCCC"> a cheat improver against the</font>

231
00:10:46,160 --> 00:10:51,530
<font color="#E5E5E5">argument it's pretty simple what the</font>

232
00:10:49,340 --> 00:10:53,900
prover does is after receiving this

233
00:10:51,530 --> 00:10:54,189
obfuscated circuit<font color="#E5E5E5"> it simply runs the</font>

234
00:10:53,900 --> 00:10:56,800
same

235
00:10:54,190 --> 00:10:59,770
later on<font color="#E5E5E5"> this obfuscated circuit as the</font>

236
00:10:56,800 --> 00:11:02,290
<font color="#CCCCCC">auxiliary input it gets a transcript</font><font color="#E5E5E5"> and</font>

237
00:10:59,770 --> 00:11:04,050
it just<font color="#E5E5E5"> sends back alpha and gamma by</font>

238
00:11:02,290 --> 00:11:08,589
the zero knowledge property of the

239
00:11:04,050 --> 00:11:10,990
<font color="#E5E5E5">Oracle what we have is</font><font color="#CCCCCC"> that this is</font>

240
00:11:08,590 --> 00:11:13,270
indistinguishable<font color="#CCCCCC"> to the verifier</font>

241
00:11:10,990 --> 00:11:16,780
<font color="#E5E5E5">therefore for an X in the language the</font>

242
00:11:13,270 --> 00:11:21,600
<font color="#CCCCCC">verifier must accept however if the</font>

243
00:11:16,780 --> 00:11:24,579
language is not<font color="#CCCCCC"> in</font><font color="#E5E5E5"> VPP and or but if</font>

244
00:11:21,600 --> 00:11:26,260
this<font color="#E5E5E5"> would change so once we have an X</font>

245
00:11:24,580 --> 00:11:28,300
that's<font color="#CCCCCC"> not in the language and the</font>

246
00:11:26,260 --> 00:11:29,590
behavior of<font color="#CCCCCC"> Verisign will</font><font color="#E5E5E5"> change this</font>

247
00:11:28,300 --> 00:11:31,390
<font color="#E5E5E5">will mean that we can distinguish</font>

248
00:11:29,590 --> 00:11:34,150
between<font color="#E5E5E5"> elements in the language and</font>

249
00:11:31,390 --> 00:11:36,780
<font color="#CCCCCC">Helmuth not in the language meaning</font><font color="#E5E5E5"> that</font>

250
00:11:34,150 --> 00:11:40,420
the language must be<font color="#E5E5E5"> in VPP and</font>

251
00:11:36,780 --> 00:11:42,280
therefore if Phi prime<font color="#CCCCCC"> is actually sound</font>

252
00:11:40,420 --> 00:11:45,300
this means that either the language<font color="#E5E5E5"> is a</font>

253
00:11:42,280 --> 00:11:50,530
PPP<font color="#CCCCCC"> or the pre</font><font color="#E5E5E5"> run protocol is not</font>

254
00:11:45,300 --> 00:11:54,520
<font color="#E5E5E5">knowledge however all this of course</font>

255
00:11:50,530 --> 00:11:58,199
hinges on the assumption that this this

256
00:11:54,520 --> 00:12:03,310
<font color="#E5E5E5">argument is</font><font color="#CCCCCC"> actually some so is it and</font>

257
00:11:58,200 --> 00:12:06,010
how<font color="#E5E5E5"> can we prove that to see how</font><font color="#CCCCCC"> we</font>

258
00:12:03,310 --> 00:12:09,810
could prove<font color="#E5E5E5"> that we look at how the</font>

259
00:12:06,010 --> 00:12:14,050
prover might be able<font color="#E5E5E5"> to cheat and</font>

260
00:12:09,810 --> 00:12:15,099
<font color="#CCCCCC">cheating</font><font color="#E5E5E5"> provers at first the first</font>

261
00:12:14,050 --> 00:12:18,370
<font color="#E5E5E5">thing that the cheat improvement needs</font>

262
00:12:15,100 --> 00:12:22,620
to do is<font color="#E5E5E5"> just choose an alpha a first</font>

263
00:12:18,370 --> 00:12:25,720
message<font color="#E5E5E5"> on which it wants to</font><font color="#CCCCCC"> cheat and</font>

264
00:12:22,620 --> 00:12:28,420
what we will do is we will<font color="#E5E5E5"> define a</font>

265
00:12:25,720 --> 00:12:31,360
<font color="#CCCCCC">small subset of alphas</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we call pad</font>

266
00:12:28,420 --> 00:12:33,630
and we will show<font color="#E5E5E5"> that any cheating</font>

267
00:12:31,360 --> 00:12:38,200
<font color="#CCCCCC">groover</font><font color="#E5E5E5"> must with high probability</font>

268
00:12:33,630 --> 00:12:42,939
choose add alpha<font color="#E5E5E5"> as it's the</font><font color="#CCCCCC"> Alpha it's</font>

269
00:12:38,200 --> 00:12:46,660
going to cheat on and then we<font color="#E5E5E5"> will prove</font>

270
00:12:42,940 --> 00:12:51,970
that the the bad alphas actually<font color="#CCCCCC"> remain</font>

271
00:12:46,660 --> 00:12:54,520
<font color="#E5E5E5">hidden by the obfuscation the question</font>

272
00:12:51,970 --> 00:12:59,339
of course is how do we<font color="#E5E5E5"> define that</font>

273
00:12:54,520 --> 00:13:03,900
office again in the public<font color="#E5E5E5"> one case</font>

274
00:12:59,339 --> 00:13:05,010
which is basically the proof of Collider

275
00:13:03,900 --> 00:13:06,689
the

276
00:13:05,010 --> 00:13:09,750
finding what that<font color="#E5E5E5"> office are is</font>

277
00:13:06,690 --> 00:13:12,030
relatively easy because if it's<font color="#CCCCCC"> poly</font>

278
00:13:09,750 --> 00:13:16,350
coin<font color="#CCCCCC"> then we can simply say that</font><font color="#E5E5E5"> any</font>

279
00:13:12,030 --> 00:13:18,689
alpha that maps to<font color="#E5E5E5"> that using the PRF</font>

280
00:13:16,350 --> 00:13:21,000
<font color="#E5E5E5">masculine</font><font color="#CCCCCC"> beta</font><font color="#E5E5E5"> such that there exists</font>

281
00:13:18,690 --> 00:13:27,480
any one any gamma<font color="#E5E5E5"> that would be accepted</font>

282
00:13:21,000 --> 00:13:30,720
by a verifier is<font color="#E5E5E5"> alpha now it's clear</font>

283
00:13:27,480 --> 00:13:33,720
that<font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> a cheating proven must</font>

284
00:13:30,720 --> 00:13:35,520
use a bad<font color="#E5E5E5"> alpha because for the other</font>

285
00:13:33,720 --> 00:13:41,850
alphas there is simply no<font color="#E5E5E5"> accepting</font>

286
00:13:35,520 --> 00:13:45,990
government however in the private coin

287
00:13:41,850 --> 00:13:48,720
case<font color="#CCCCCC"> it's more complicated</font><font color="#E5E5E5"> because for</font>

288
00:13:45,990 --> 00:13:50,180
any beta there might always be accepting

289
00:13:48,720 --> 00:13:53,460
<font color="#CCCCCC">gods</font>

290
00:13:50,180 --> 00:13:56,430
it's just that what those cameras are

291
00:13:53,460 --> 00:13:58,800
might depend<font color="#E5E5E5"> on which consistent random</font>

292
00:13:56,430 --> 00:14:01,650
tape was actually used to compute<font color="#E5E5E5"> this</font>

293
00:13:58,800 --> 00:14:03,630
beta you can<font color="#E5E5E5"> imagine</font><font color="#CCCCCC"> the protocol where</font>

294
00:14:01,650 --> 00:14:06,209
I see in addition<font color="#CCCCCC"> to my own</font><font color="#E5E5E5"> random</font><font color="#CCCCCC"> Tama</font>

295
00:14:03,630 --> 00:14:08,310
just simply choose an additional<font color="#E5E5E5"> random</font>

296
00:14:06,210 --> 00:14:10,860
value and if you sent me that<font color="#CCCCCC"> write</font>

297
00:14:08,310 --> 00:14:11,520
about<font color="#CCCCCC"> in fact as your</font><font color="#E5E5E5"> gamma then I</font>

298
00:14:10,860 --> 00:14:13,530
accept

299
00:14:11,520 --> 00:14:15,180
that's an accepting gamma but you of

300
00:14:13,530 --> 00:14:17,790
course<font color="#E5E5E5"> have</font><font color="#CCCCCC"> no way of finding it because</font>

301
00:14:15,180 --> 00:14:22,620
<font color="#E5E5E5">I never reveal anything about this</font>

302
00:14:17,790 --> 00:14:24,810
random value so we need to a more

303
00:14:22,620 --> 00:14:27,780
complicated definition of what bad

304
00:14:24,810 --> 00:14:30,209
alphas are but this is<font color="#CCCCCC"> a hint of how we</font>

305
00:14:27,780 --> 00:14:36,290
can do<font color="#E5E5E5"> that because the only way for a</font>

306
00:14:30,210 --> 00:14:36,290
<font color="#E5E5E5">proven to Chi would be if they can find</font>

307
00:14:36,530 --> 00:14:43,500
right<font color="#E5E5E5"> now</font><font color="#CCCCCC"> first the security of the i/o</font>

308
00:14:40,410 --> 00:14:46,560
and the punctual PRF actually hide which

309
00:14:43,500 --> 00:14:49,110
random tape was<font color="#CCCCCC"> used so the prover</font><font color="#E5E5E5"> sees</font>

310
00:14:46,560 --> 00:14:51,359
knows what his office and he sees the

311
00:14:49,110 --> 00:14:54,270
beta<font color="#E5E5E5"> that the office gated circuit spits</font>

312
00:14:51,360 --> 00:14:56,220
out but we can show that<font color="#E5E5E5"> the security of</font>

313
00:14:54,270 --> 00:14:59,069
<font color="#E5E5E5">i/o and the punch will appear as she</font>

314
00:14:56,220 --> 00:15:02,280
<font color="#E5E5E5">hide which random</font><font color="#CCCCCC"> tape was</font><font color="#E5E5E5"> used to</font>

315
00:14:59,070 --> 00:15:03,779
compute this beta what that means is

316
00:15:02,280 --> 00:15:07,589
that we<font color="#CCCCCC"> can con</font>

317
00:15:03,779 --> 00:15:10,889
<font color="#CCCCCC">defining</font><font color="#E5E5E5"> our bad alphas</font><font color="#CCCCCC"> as those that</font>

318
00:15:07,589 --> 00:15:13,279
met<font color="#CCCCCC"> to random take wire the PRF</font><font color="#E5E5E5"> such</font>

319
00:15:10,889 --> 00:15:16,470
that this random<font color="#E5E5E5"> take leads to a beta</font>

320
00:15:13,279 --> 00:15:18,629
such that there exists a gamma<font color="#E5E5E5"> that will</font>

321
00:15:16,470 --> 00:15:22,110
be accepted by the verify with high

322
00:15:18,629 --> 00:15:26,480
probability<font color="#E5E5E5"> over</font><font color="#CCCCCC"> all consistent random</font>

323
00:15:22,110 --> 00:15:29,339
tapes why does that make<font color="#E5E5E5"> sense because</font>

324
00:15:26,480 --> 00:15:31,439
if the<font color="#CCCCCC"> prover has no way of</font><font color="#E5E5E5"> knowing</font>

325
00:15:29,339 --> 00:15:33,569
<font color="#CCCCCC">which random which consistent random</font>

326
00:15:31,439 --> 00:15:37,050
tape was<font color="#CCCCCC"> used to compute bigger</font><font color="#E5E5E5"> than the</font>

327
00:15:33,569 --> 00:15:42,748
only<font color="#E5E5E5"> chance of cheating is to find an</font>

328
00:15:37,050 --> 00:15:45,209
alpha such that for<font color="#E5E5E5"> many for</font><font color="#CCCCCC"> that map's</font>

329
00:15:42,749 --> 00:15:49,639
to a beta such that for a large<font color="#CCCCCC"> number</font>

330
00:15:45,209 --> 00:15:49,638
of random<font color="#E5E5E5"> tapes gamma would be accepted</font>

331
00:15:50,180 --> 00:15:58,170
<font color="#E5E5E5">and this means that</font><font color="#CCCCCC"> the cheating Coover</font>

332
00:15:54,990 --> 00:16:01,649
will output such a bad<font color="#E5E5E5"> alpha with very</font>

333
00:15:58,170 --> 00:16:05,160
high probability or yeah with very high

334
00:16:01,649 --> 00:16:07,439
probability<font color="#CCCCCC"> we could try to lead this</font>

335
00:16:05,160 --> 00:16:09,360
directly<font color="#CCCCCC"> to a contradiction</font><font color="#E5E5E5"> with the</font>

336
00:16:07,439 --> 00:16:12,959
soundness of<font color="#CCCCCC"> the original for your own</font>

337
00:16:09,360 --> 00:16:14,939
proof<font color="#E5E5E5"> the problem with</font><font color="#CCCCCC"> that is that at</font>

338
00:16:12,959 --> 00:16:18,209
some<font color="#CCCCCC"> point we would</font><font color="#E5E5E5"> need to puncture on</font>

339
00:16:14,939 --> 00:16:20,730
an unknown point<font color="#CCCCCC"> and thereby incur an</font>

340
00:16:18,209 --> 00:16:23,040
exponential loss we can<font color="#E5E5E5"> still do that</font>

341
00:16:20,730 --> 00:16:24,809
the<font color="#E5E5E5"> problem is that</font><font color="#CCCCCC"> the result would</font><font color="#E5E5E5"> be</font>

342
00:16:23,040 --> 00:16:27,990
<font color="#E5E5E5">much weaker</font><font color="#CCCCCC"> than because this means that</font>

343
00:16:24,809 --> 00:16:30,180
we would need a<font color="#CCCCCC"> three round proof that</font>

344
00:16:27,990 --> 00:16:32,639
is sound<font color="#E5E5E5"> that has a soundness error that</font>

345
00:16:30,180 --> 00:16:35,699
is exponentially small<font color="#E5E5E5"> only</font><font color="#CCCCCC"> then this</font>

346
00:16:32,639 --> 00:16:37,790
<font color="#E5E5E5">would make you still make sense so</font>

347
00:16:35,699 --> 00:16:41,309
instead we follow the same path that

348
00:16:37,790 --> 00:16:45,269
<font color="#CCCCCC">tell I had all did and we transfer the</font>

349
00:16:41,309 --> 00:16:49,800
loss to separate primitive and this

350
00:16:45,269 --> 00:16:51,929
separate primitive is what I mentioned

351
00:16:49,800 --> 00:16:55,469
<font color="#E5E5E5">before</font><font color="#CCCCCC"> that's people hiding obfuscation</font>

352
00:16:51,929 --> 00:16:57,689
for multi bit point functions so what is

353
00:16:55,470 --> 00:17:00,120
that that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> an obfuscator against</font><font color="#CCCCCC"> us</font>

354
00:16:57,689 --> 00:17:02,819
input<font color="#E5E5E5"> a point function described by the</font>

355
00:17:00,120 --> 00:17:05,459
point<font color="#E5E5E5"> and the output on that point and</font>

356
00:17:02,819 --> 00:17:06,089
it opens an obfuscated circuit<font color="#CCCCCC"> you want</font>

357
00:17:05,459 --> 00:17:08,429
that

358
00:17:06,089 --> 00:17:11,698
correct<font color="#E5E5E5"> meaning on the</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> it outputs</font>

359
00:17:08,429 --> 00:17:15,480
<font color="#E5E5E5">the output and all other points it just</font>

360
00:17:11,699 --> 00:17:18,059
<font color="#E5E5E5">outputs</font><font color="#CCCCCC"> ball and you want</font><font color="#E5E5E5"> that it's</font>

361
00:17:15,480 --> 00:17:20,099
secure<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for any polynomial</font>

362
00:17:18,059 --> 00:17:22,279
time algorithm and this<font color="#CCCCCC"> is important</font>

363
00:17:20,099 --> 00:17:25,559
<font color="#E5E5E5">that it's polynomial time algorithm</font>

364
00:17:22,279 --> 00:17:27,480
given<font color="#E5E5E5"> the office</font><font color="#CCCCCC"> kated circuit the</font>

365
00:17:25,559 --> 00:17:31,490
probability<font color="#E5E5E5"> of actually outputting the</font>

366
00:17:27,480 --> 00:17:37,529
<font color="#E5E5E5">point of the point function is</font>

367
00:17:31,490 --> 00:17:39,419
exponentially small and this can

368
00:17:37,529 --> 00:17:43,140
<font color="#CCCCCC">actually be instantiated at least in the</font>

369
00:17:39,419 --> 00:17:48,390
generic<font color="#E5E5E5"> group model by a construction of</font>

370
00:17:43,140 --> 00:17:50,340
correctly and<font color="#E5E5E5"> do so it's not</font><font color="#CCCCCC"> a</font>

371
00:17:48,390 --> 00:17:51,510
completely<font color="#E5E5E5"> unreasonable assumption and I</font>

372
00:17:50,340 --> 00:17:59,029
would argue<font color="#CCCCCC"> that probably a more</font>

373
00:17:51,510 --> 00:18:01,950
reasonable assumption than<font color="#E5E5E5"> I</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> so yeah</font>

374
00:17:59,029 --> 00:18:04,500
<font color="#CCCCCC">and so how do</font><font color="#E5E5E5"> we actually use</font><font color="#CCCCCC"> that to</font>

375
00:18:01,950 --> 00:18:06,570
transfer the loss<font color="#E5E5E5"> just a very short</font>

376
00:18:04,500 --> 00:18:09,360
sketch of how this<font color="#E5E5E5"> will</font><font color="#CCCCCC"> work the thing</font>

377
00:18:06,570 --> 00:18:13,230
is if<font color="#CCCCCC"> we look at a punctured version of</font>

378
00:18:09,360 --> 00:18:16,620
the verifier circuit<font color="#E5E5E5"> so very</font><font color="#CCCCCC"> puncture</font><font color="#E5E5E5"> on</font>

379
00:18:13,230 --> 00:18:21,120
<font color="#CCCCCC">some alpha star if we give this</font>

380
00:18:16,620 --> 00:18:23,939
punctured circuit conditioned on alpha

381
00:18:21,120 --> 00:18:26,428
star being bad<font color="#E5E5E5"> if we give this punctured</font>

382
00:18:23,940 --> 00:18:29,039
circuit to approver this cheating

383
00:18:26,429 --> 00:18:31,230
provable output alpha star with

384
00:18:29,039 --> 00:18:37,460
<font color="#CCCCCC">probability</font><font color="#E5E5E5"> that is slightly better than</font>

385
00:18:31,230 --> 00:18:40,649
<font color="#CCCCCC">random chance</font><font color="#E5E5E5"> and this allows us</font><font color="#CCCCCC"> to</font>

386
00:18:37,460 --> 00:18:43,230
<font color="#E5E5E5">shift this</font><font color="#CCCCCC"> to the input hiding</font>

387
00:18:40,649 --> 00:18:44,699
obfuscation<font color="#E5E5E5"> by constructing another</font>

388
00:18:43,230 --> 00:18:46,740
circuit that<font color="#E5E5E5"> basically takes the</font>

389
00:18:44,700 --> 00:18:49,470
<font color="#E5E5E5">challenge of an input hiding almost</font>

390
00:18:46,740 --> 00:18:53,100
<font color="#E5E5E5">alpha scanner as an input or is it as a</font>

391
00:18:49,470 --> 00:18:55,200
hot<font color="#E5E5E5"> coding input and we can use IO to</font>

392
00:18:53,100 --> 00:18:56,789
switch from the<font color="#E5E5E5"> punctured circuit to</font>

393
00:18:55,200 --> 00:19:03,630
<font color="#E5E5E5">this circuit because</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> two are</font><font color="#CCCCCC"> funny</font>

394
00:18:56,789 --> 00:19:04,860
<font color="#CCCCCC">curled</font><font color="#E5E5E5"> and because this slight bias over</font>

395
00:19:03,630 --> 00:19:07,410
<font color="#E5E5E5">random chance</font>

396
00:19:04,860 --> 00:19:10,350
is preserved under<font color="#E5E5E5"> that what we get is</font>

397
00:19:07,410 --> 00:19:13,770
that<font color="#CCCCCC"> we can break the input hiding of</font>

398
00:19:10,350 --> 00:19:15,480
<font color="#E5E5E5">the skater and thereby we have that this</font>

399
00:19:13,770 --> 00:19:19,710
protocol must be sound because the

400
00:19:15,480 --> 00:19:22,400
<font color="#E5E5E5">prover cannot exist and if we combine</font>

401
00:19:19,710 --> 00:19:24,960
<font color="#E5E5E5">those two</font><font color="#CCCCCC"> things we get our main result</font>

402
00:19:22,400 --> 00:19:27,090
namely<font color="#E5E5E5"> that three rounds your</font><font color="#CCCCCC"> nose</font>

403
00:19:24,960 --> 00:19:42,380
proofs<font color="#E5E5E5"> can only exist for languages in</font>

404
00:19:27,090 --> 00:19:42,379
<font color="#E5E5E5">VP a VPP under the assumption questions</font>

405
00:19:44,299 --> 00:19:50,730
<font color="#CCCCCC">okay so I have a question</font><font color="#E5E5E5"> so just</font><font color="#CCCCCC"> to</font>

406
00:19:49,200 --> 00:19:52,440
make<font color="#CCCCCC"> sure there is also</font><font color="#E5E5E5"> a positive</font>

407
00:19:50,730 --> 00:19:55,470
<font color="#E5E5E5">result here in the sense that you show a</font>

408
00:19:52,440 --> 00:19:57,679
general<font color="#E5E5E5"> round compression technique you</font>

409
00:19:55,470 --> 00:20:00,059
could take any<font color="#CCCCCC"> three message proof</font>

410
00:19:57,679 --> 00:20:03,059
<font color="#E5E5E5">compress it into a two message argument</font>

411
00:20:00,059 --> 00:20:04,980
in a<font color="#E5E5E5"> privacy-preserving way so</font><font color="#CCCCCC"> that in</font>

412
00:20:03,059 --> 00:20:07,320
<font color="#E5E5E5">particular say that I will now construct</font>

413
00:20:04,980 --> 00:20:10,049
<font color="#E5E5E5">I don't know</font><font color="#CCCCCC"> two message witness hiding</font>

414
00:20:07,320 --> 00:20:11,668
arguments<font color="#E5E5E5"> it's enough they will</font>

415
00:20:10,049 --> 00:20:19,620
construct a free message<font color="#E5E5E5"> witness hiding</font>

416
00:20:11,669 --> 00:20:21,090
proof for example so the zeros or<font color="#CCCCCC"> with</font>

417
00:20:19,620 --> 00:20:23,219
<font color="#E5E5E5">the</font><font color="#CCCCCC"> sign does not</font><font color="#E5E5E5"> come into the</font>

418
00:20:21,090 --> 00:20:26,070
<font color="#CCCCCC">interplay pressure at all</font><font color="#E5E5E5"> we only need</font>

419
00:20:23,220 --> 00:20:27,929
the<font color="#E5E5E5"> soundness of</font><font color="#CCCCCC"> the alright so this is</font>

420
00:20:26,070 --> 00:20:29,309
<font color="#E5E5E5">the</font><font color="#CCCCCC"> generally yeah</font>

421
00:20:27,929 --> 00:20:32,820
transformation<font color="#E5E5E5"> it would and</font>

422
00:20:29,309 --> 00:20:33,980
privacy-preserving<font color="#E5E5E5"> yet okay okay any</font>

423
00:20:32,820 --> 00:20:36,939
more<font color="#E5E5E5"> questions</font>

424
00:20:33,980 --> 00:20:41,680
so let's<font color="#CCCCCC"> tennis</font><font color="#E5E5E5"> again</font>

425
00:20:36,940 --> 00:20:41,680
[Applause]

