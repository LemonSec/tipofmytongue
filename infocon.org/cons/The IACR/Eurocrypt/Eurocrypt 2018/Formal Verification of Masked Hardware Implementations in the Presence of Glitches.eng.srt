1
00:00:00,120 --> 00:00:04,440
let's start with<font color="#E5E5E5"> masking so the first</font>

2
00:00:02,070 --> 00:00:06,180
paper is titled formal verification of

3
00:00:04,440 --> 00:00:08,670
<font color="#CCCCCC">masked</font><font color="#E5E5E5"> hardware implementations in the</font>

4
00:00:06,180 --> 00:00:11,519
presence of glitches<font color="#E5E5E5"> by Roderick bloom</font>

5
00:00:08,670 --> 00:00:13,950
<font color="#E5E5E5">and his course peanuts</font><font color="#CCCCCC"> it should both be</font>

6
00:00:11,519 --> 00:00:22,948
<font color="#CCCCCC">denied</font><font color="#E5E5E5"> killing</font><font color="#CCCCCC"> off her staff and mangled</font>

7
00:00:13,950 --> 00:00:29,630
<font color="#E5E5E5">and giving us winter</font><font color="#CCCCCC"> Anna start to start</font>

8
00:00:22,949 --> 00:00:33,510
with a brief<font color="#CCCCCC"> summary I want to start</font>

9
00:00:29,630 --> 00:00:37,230
with the vision<font color="#CCCCCC"> that we had in</font><font color="#E5E5E5"> mind when</font>

10
00:00:33,510 --> 00:00:39,899
<font color="#CCCCCC">we started working</font><font color="#E5E5E5"> towards stopping</font><font color="#CCCCCC"> so</font>

11
00:00:37,230 --> 00:00:43,648
<font color="#CCCCCC">that idea really was to create a formal</font>

12
00:00:39,899 --> 00:00:46,500
tool or common<font color="#E5E5E5"> effort</font><font color="#CCCCCC"> to pull tape mask</font>

13
00:00:43,649 --> 00:00:49,320
<font color="#CCCCCC">circuits as an input and with them tell</font>

14
00:00:46,500 --> 00:00:51,480
<font color="#E5E5E5">us whether it is securely masked or not</font>

15
00:00:49,320 --> 00:00:55,160
<font color="#E5E5E5">and if it's not securely masked people</font>

16
00:00:51,480 --> 00:00:57,839
<font color="#E5E5E5">want to this former tool to tell us</font>

17
00:00:55,160 --> 00:00:59,239
where things<font color="#E5E5E5"> went wrong and why</font><font color="#CCCCCC"> this</font>

18
00:00:57,840 --> 00:01:03,629
<font color="#CCCCCC">happened</font>

19
00:00:59,239 --> 00:01:06,420
so what happen is it seems so far<font color="#E5E5E5"> with</font>

20
00:01:03,629 --> 00:01:09,780
<font color="#E5E5E5">our formal verification approach we can</font>

21
00:01:06,420 --> 00:01:11,490
verify<font color="#E5E5E5"> glitchy circuits and just</font><font color="#CCCCCC"> say a</font>

22
00:01:09,780 --> 00:01:17,970
<font color="#CCCCCC">chip because</font><font color="#E5E5E5"> I'm really referring to</font>

23
00:01:11,490 --> 00:01:20,330
<font color="#E5E5E5">other implementations and not just to a</font>

24
00:01:17,970 --> 00:01:24,119
<font color="#E5E5E5">graphic way of expressing boolean</font>

25
00:01:20,330 --> 00:01:26,789
formulas<font color="#E5E5E5"> our approach doesn't require</font>

26
00:01:24,119 --> 00:01:29,670
any intermediate<font color="#E5E5E5"> modeling steps for</font>

27
00:01:26,790 --> 00:01:32,790
example<font color="#CCCCCC"> -</font><font color="#E5E5E5"> we implement this in</font><font color="#CCCCCC"> software</font>

28
00:01:29,670 --> 00:01:34,770
but works directly<font color="#E5E5E5"> on the netlist and</font>

29
00:01:32,790 --> 00:01:38,280
can be applied the different designs

30
00:01:34,770 --> 00:01:40,320
design stages so when you first<font color="#E5E5E5"> start</font><font color="#CCCCCC"> to</font>

31
00:01:38,280 --> 00:01:42,579
implement<font color="#E5E5E5"> your</font><font color="#CCCCCC"> our two designs we can</font>

32
00:01:40,320 --> 00:01:49,780
<font color="#E5E5E5">already</font>

33
00:01:42,579 --> 00:02:54,910
in in our tool<font color="#E5E5E5"> it will tell you if you</font>

34
00:01:49,780 --> 00:02:59,459
<font color="#E5E5E5">move it and in this example the biggest</font>

35
00:02:54,910 --> 00:02:59,459
example we have a first order protected

36
00:03:05,609 --> 00:03:11,500
<font color="#CCCCCC">why do</font><font color="#E5E5E5"> we actually need from the</font>

37
00:03:08,859 --> 00:03:13,209
<font color="#CCCCCC">verification of verification of mass</font>

38
00:03:11,500 --> 00:03:16,090
hardware limitations<font color="#E5E5E5"> aren't there</font>

39
00:03:13,209 --> 00:03:18,280
supposed to<font color="#E5E5E5"> be any secure masking</font>

40
00:03:16,090 --> 00:03:20,019
schemes so first of all we need<font color="#CCCCCC"> to talk</font>

41
00:03:18,280 --> 00:03:25,329
about<font color="#E5E5E5"> what is the secure of masking</font>

42
00:03:20,019 --> 00:03:29,590
scheme and we have a very very nice<font color="#CCCCCC"> way</font>

43
00:03:25,329 --> 00:03:31,840
to express<font color="#CCCCCC"> sectional resistance which is</font>

44
00:03:29,590 --> 00:03:34,359
<font color="#E5E5E5">covered by a roving</font><font color="#CCCCCC"> model which goes</font>

45
00:03:31,840 --> 00:03:36,190
back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the private circuits paper of</font>

46
00:03:34,359 --> 00:03:38,440
each hideout and this basically

47
00:03:36,190 --> 00:03:40,840
<font color="#E5E5E5">basically tells you that your</font>

48
00:03:38,440 --> 00:03:46,720
implementation<font color="#E5E5E5"> is sectional</font><font color="#CCCCCC"> resistance</font>

49
00:03:40,840 --> 00:03:49,090
if it is secure against problem is<font color="#E5E5E5"> death</font>

50
00:03:46,720 --> 00:03:50,980
<font color="#E5E5E5">that can attest ability to place up to</font>

51
00:03:49,090 --> 00:03:53,320
<font color="#CCCCCC">deep probing needles on your circuit and</font>

52
00:03:50,980 --> 00:03:53,859
if the attacker cannot extract any

53
00:03:53,320 --> 00:03:56,980
secrets

54
00:03:53,860 --> 00:04:00,370
then it's secure<font color="#E5E5E5"> in this problem</font><font color="#CCCCCC"> model</font>

55
00:03:56,980 --> 00:04:02,590
and so with this masking scheme<font color="#E5E5E5"> a</font>

56
00:04:00,370 --> 00:04:04,960
masking scheme is in some way a

57
00:04:02,590 --> 00:04:08,790
projection of<font color="#E5E5E5"> this rule set by these</font>

58
00:04:04,960 --> 00:04:12,120
probing models on the canvas<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> masked</font>

59
00:04:08,790 --> 00:04:16,269
implementation so it gives you the rules

60
00:04:12,120 --> 00:04:19,120
but the masking scheme<font color="#E5E5E5"> itself is</font>

61
00:04:16,269 --> 00:04:20,890
implemented by designers of<font color="#E5E5E5"> hardware so</font>

62
00:04:19,120 --> 00:04:23,380
<font color="#E5E5E5">there can be mistakes</font><font color="#CCCCCC"> in the</font>

63
00:04:20,890 --> 00:04:27,640
implementation of these schemes<font color="#E5E5E5"> and also</font>

64
00:04:23,380 --> 00:04:29,680
<font color="#CCCCCC">the digital design flaw that that that</font>

65
00:04:27,640 --> 00:04:31,810
takes this circuit<font color="#E5E5E5"> as an input and</font>

66
00:04:29,680 --> 00:04:35,800
<font color="#CCCCCC">process it further until it can be</font>

67
00:04:31,810 --> 00:04:37,600
<font color="#CCCCCC">produced in both many tasks it to change</font>

68
00:04:35,800 --> 00:04:42,850
your netlist and also things came<font color="#CCCCCC"> to</font>

69
00:04:37,600 --> 00:04:45,940
wrong there<font color="#E5E5E5"> so so we have for example</font>

70
00:04:42,850 --> 00:04:49,300
masking schemes<font color="#CCCCCC"> that look at at least</font>

71
00:04:45,940 --> 00:04:51,790
from<font color="#CCCCCC"> best masking perspective or a more</font>

72
00:04:49,300 --> 00:04:53,410
modern way is from<font color="#E5E5E5"> the from the sharing</font>

73
00:04:51,790 --> 00:04:56,640
perspective but<font color="#E5E5E5"> in the end this is</font>

74
00:04:53,410 --> 00:04:59,440
<font color="#E5E5E5">always a manual process to met in these</font>

75
00:04:56,640 --> 00:05:02,250
schemes to the implementations so

76
00:04:59,440 --> 00:05:04,840
<font color="#E5E5E5">implementation requires verification and</font>

77
00:05:02,250 --> 00:05:07,060
at<font color="#E5E5E5"> least in theory there are two</font>

78
00:05:04,840 --> 00:05:10,739
approaches one can finger the first

79
00:05:07,060 --> 00:05:14,590
approach to verify this<font color="#E5E5E5"> mask circuits is</font>

80
00:05:10,740 --> 00:05:17,560
either use empirical<font color="#E5E5E5"> verification which</font>

81
00:05:14,590 --> 00:05:21,450
is the predominant form and is widely

82
00:05:17,560 --> 00:05:26,350
used<font color="#E5E5E5"> in practice</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> there's also a</font>

83
00:05:21,450 --> 00:05:28,330
formal way of<font color="#E5E5E5"> proving this and so the</font>

84
00:05:26,350 --> 00:05:30,630
empirical verification works as follows

85
00:05:28,330 --> 00:05:33,510
<font color="#CCCCCC">so you take for example your</font>

86
00:05:30,630 --> 00:05:37,170
<font color="#E5E5E5">you're secure a</font><font color="#CCCCCC"> supposably security</font>

87
00:05:33,510 --> 00:05:39,270
escort<font color="#E5E5E5"> you like an oscilloscope</font><font color="#CCCCCC"> - it</font><font color="#E5E5E5"> in</font>

88
00:05:37,170 --> 00:05:41,790
<font color="#E5E5E5">to the ball</font><font color="#CCCCCC"> land and expect sites and</font>

89
00:05:39,270 --> 00:05:44,070
information<font color="#E5E5E5"> and then you run some</font>

90
00:05:41,790 --> 00:05:46,380
statistical analysis on the power<font color="#E5E5E5"> traces</font>

91
00:05:44,070 --> 00:05:49,440
that will tell you whether it<font color="#CCCCCC"> passes the</font>

92
00:05:46,380 --> 00:05:53,250
test<font color="#E5E5E5"> or fails the problem with this</font>

93
00:05:49,440 --> 00:05:54,750
approach is<font color="#CCCCCC"> that it's not conclusive so</font>

94
00:05:53,250 --> 00:05:56,850
if you don't find<font color="#E5E5E5"> a flaw</font>

95
00:05:54,750 --> 00:05:59,460
you just don't<font color="#E5E5E5"> know maybe you haven't</font>

96
00:05:56,850 --> 00:06:02,280
<font color="#E5E5E5">used enough traces to to test your</font>

97
00:05:59,460 --> 00:06:04,169
implementation<font color="#E5E5E5"> and if a flaw is</font>

98
00:06:02,280 --> 00:06:06,989
detective you don't<font color="#E5E5E5"> know if it's a real</font>

99
00:06:04,170 --> 00:06:10,250
flaw in a way it actually<font color="#CCCCCC"> origins</font><font color="#E5E5E5"> from</font>

100
00:06:06,990 --> 00:06:14,100
so it could be<font color="#CCCCCC"> on everywhere</font><font color="#E5E5E5"> from your</font>

101
00:06:10,250 --> 00:06:16,770
from the<font color="#E5E5E5"> circuit</font><font color="#CCCCCC"> it's also device</font>

102
00:06:14,100 --> 00:06:20,750
specific and it can hardly<font color="#E5E5E5"> be used</font>

103
00:06:16,770 --> 00:06:25,409
during the design phase of<font color="#CCCCCC"> your circuit</font>

104
00:06:20,750 --> 00:06:27,750
so<font color="#CCCCCC"> how about</font><font color="#E5E5E5"> formal verification</font><font color="#CCCCCC"> well</font>

105
00:06:25,410 --> 00:06:30,090
for the picture would say more<font color="#CCCCCC"> than 1000</font>

106
00:06:27,750 --> 00:06:32,040
words<font color="#CCCCCC"> so in terms of formal verification</font>

107
00:06:30,090 --> 00:06:35,159
terms of practical<font color="#E5E5E5"> form of verification</font>

108
00:06:32,040 --> 00:06:36,870
of mascot<font color="#E5E5E5"> augmentations there's really</font>

109
00:06:35,160 --> 00:06:38,910
not much there so<font color="#CCCCCC"> if you look</font><font color="#E5E5E5"> at the</font>

110
00:06:36,870 --> 00:06:43,050
<font color="#E5E5E5">software side</font><font color="#CCCCCC"> it would</font><font color="#E5E5E5"> look a bit</font>

111
00:06:38,910 --> 00:06:44,640
<font color="#E5E5E5">differently but you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> so in the</font>

112
00:06:43,050 --> 00:06:47,820
<font color="#CCCCCC">hardware's at</font><font color="#E5E5E5"> least when you started it</font>

113
00:06:44,640 --> 00:06:48,539
was<font color="#CCCCCC"> really not</font><font color="#E5E5E5"> much there</font><font color="#CCCCCC"> so and with</font>

114
00:06:47,820 --> 00:06:50,730
this set

115
00:06:48,540 --> 00:06:53,000
<font color="#E5E5E5">I should also talk a bit about what we</font>

116
00:06:50,730 --> 00:06:57,180
don't do or what we try<font color="#E5E5E5"> to avoid in this</font>

117
00:06:53,000 --> 00:07:00,750
in our<font color="#E5E5E5"> formal approach so what we didn't</font>

118
00:06:57,180 --> 00:07:04,740
want<font color="#CCCCCC"> to do is a</font><font color="#E5E5E5"> heuristic approach so</font>

119
00:07:00,750 --> 00:07:06,930
testing for example<font color="#E5E5E5"> specific specific</font>

120
00:07:04,740 --> 00:07:09,060
properties of for a certain<font color="#E5E5E5"> marketing</font>

121
00:07:06,930 --> 00:07:14,100
scheme<font color="#E5E5E5"> this would be again not</font>

122
00:07:09,060 --> 00:07:16,230
conclusive and person for me what has

123
00:07:14,100 --> 00:07:20,100
become<font color="#E5E5E5"> very much popular</font><font color="#CCCCCC"> especially in</font>

124
00:07:16,230 --> 00:07:21,270
<font color="#E5E5E5">the software world is this notion of</font>

125
00:07:20,100 --> 00:07:26,340
<font color="#E5E5E5">composability</font>

126
00:07:21,270 --> 00:07:27,570
which allows you to<font color="#E5E5E5"> verify smaller parts</font>

127
00:07:26,340 --> 00:07:29,909
of<font color="#E5E5E5"> the circuit</font>

128
00:07:27,570 --> 00:07:33,180
inside this composability notion<font color="#CCCCCC"> and</font>

129
00:07:29,910 --> 00:07:34,590
this will<font color="#E5E5E5"> then tell you if you if all of</font>

130
00:07:33,180 --> 00:07:36,270
the parts is<font color="#E5E5E5"> secure and to plug them</font>

131
00:07:34,590 --> 00:07:39,239
together<font color="#CCCCCC"> then in the</font><font color="#E5E5E5"> end to your whole</font>

132
00:07:36,270 --> 00:07:43,049
circuit will be<font color="#E5E5E5"> secure so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> didn't do</font>

133
00:07:39,240 --> 00:07:44,970
this because<font color="#E5E5E5"> not all circuits or</font><font color="#CCCCCC"> love</font>

134
00:07:43,050 --> 00:07:46,650
<font color="#CCCCCC">math implementations</font><font color="#E5E5E5"> fulfill this</font>

135
00:07:44,970 --> 00:07:51,930
composability notion in a

136
00:07:46,650 --> 00:07:54,960
straightforward way<font color="#E5E5E5"> but this would be a</font>

137
00:07:51,930 --> 00:07:57,480
one meaningful extension<font color="#E5E5E5"> to</font><font color="#CCCCCC"> our approach</font>

138
00:07:54,960 --> 00:08:00,060
and<font color="#E5E5E5"> as a matter of fact so</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> living</font>

139
00:07:57,480 --> 00:08:02,850
in a really<font color="#E5E5E5"> fast moving world so there's</font>

140
00:08:00,060 --> 00:08:05,130
already a paper on<font color="#E5E5E5"> this so it is this</font>

141
00:08:02,850 --> 00:08:08,370
paper masking schemes in the best

142
00:08:05,130 --> 00:08:10,650
physical defaults they<font color="#CCCCCC"> first it</font><font color="#E5E5E5"> all that</font>

143
00:08:08,370 --> 00:08:15,780
that's<font color="#E5E5E5"> something very</font><font color="#CCCCCC"> similar to our</font>

144
00:08:10,650 --> 00:08:21,390
approach but<font color="#CCCCCC"> for this composability</font>

145
00:08:15,780 --> 00:08:25,679
notion so enough said<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that we</font>

146
00:08:21,390 --> 00:08:28,020
don't<font color="#E5E5E5"> do we actually do so we started</font>

147
00:08:25,680 --> 00:08:30,390
with<font color="#E5E5E5"> this project about two years ago</font>

148
00:08:28,020 --> 00:08:32,370
<font color="#CCCCCC">and for a long time we</font><font color="#E5E5E5"> were really</font>

149
00:08:30,390 --> 00:08:35,340
struggling<font color="#CCCCCC"> to find something that</font><font color="#E5E5E5"> really</font>

150
00:08:32,370 --> 00:08:37,440
works<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> found some</font><font color="#CCCCCC"> brooches that</font>

151
00:08:35,340 --> 00:08:41,220
looked very<font color="#E5E5E5"> promising for first corner</font>

152
00:08:37,440 --> 00:08:44,070
<font color="#CCCCCC">and doing various effects but everything</font>

153
00:08:41,220 --> 00:08:47,670
fails for higher order so at some point

154
00:08:44,070 --> 00:08:49,980
became really desperate<font color="#E5E5E5"> until we</font>

155
00:08:47,670 --> 00:08:54,110
remembered the<font color="#E5E5E5"> roots of our information</font>

156
00:08:49,980 --> 00:08:57,120
<font color="#CCCCCC">and computer engineering education</font><font color="#E5E5E5"> and</font>

157
00:08:54,110 --> 00:08:59,640
so I think every<font color="#CCCCCC"> student</font><font color="#E5E5E5"> that that is</font>

158
00:08:57,120 --> 00:09:02,340
something<font color="#CCCCCC"> like this has heard something</font>

159
00:08:59,640 --> 00:09:04,590
<font color="#E5E5E5">back if you're really desperate if</font>

160
00:09:02,340 --> 00:09:08,220
nothing works and just<font color="#CCCCCC"> go for free</font>

161
00:09:04,590 --> 00:09:10,560
analysis and so this is what we<font color="#E5E5E5"> tried so</font>

162
00:09:08,220 --> 00:09:15,890
but the interesting question is now what

163
00:09:10,560 --> 00:09:19,020
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> free analysis of the circuit</font><font color="#CCCCCC"> and so</font>

164
00:09:15,890 --> 00:09:21,900
when we neglect<font color="#E5E5E5"> in time and look at the</font>

165
00:09:19,020 --> 00:09:24,180
circuit and I also want to use<font color="#CCCCCC"> the</font><font color="#E5E5E5"> site</font>

166
00:09:21,900 --> 00:09:28,199
to<font color="#E5E5E5"> introduce</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> notation I'm</font><font color="#CCCCCC"> going to</font>

167
00:09:24,180 --> 00:09:30,199
use in the rest<font color="#E5E5E5"> of this presentation</font><font color="#CCCCCC"> so</font>

168
00:09:28,200 --> 00:09:32,210
I<font color="#E5E5E5"> always</font>

169
00:09:30,200 --> 00:09:35,450
that we have a<font color="#E5E5E5"> secret</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is masked</font>

170
00:09:32,210 --> 00:09:38,930
inside this variable<font color="#E5E5E5"> SM this</font><font color="#CCCCCC"> mask</font>

171
00:09:35,450 --> 00:09:43,280
<font color="#CCCCCC">pattern</font><font color="#E5E5E5"> mask</font><font color="#CCCCCC"> M s</font><font color="#E5E5E5"> then we have some other</font>

172
00:09:38,930 --> 00:09:45,709
masks that are denoted with M variables

173
00:09:43,280 --> 00:09:47,780
and then<font color="#CCCCCC"> we have some variables that</font><font color="#E5E5E5"> are</font>

174
00:09:45,710 --> 00:09:50,150
interesting or publicly<font color="#E5E5E5"> known or</font>

175
00:09:47,780 --> 00:09:52,310
something else something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is not the</font>

176
00:09:50,150 --> 00:09:55,610
security relevant but also cannot

177
00:09:52,310 --> 00:09:57,589
provide<font color="#E5E5E5"> security like a mask to do and</font>

178
00:09:55,610 --> 00:10:00,770
these are<font color="#E5E5E5"> these public variants</font><font color="#CCCCCC"> of B</font>

179
00:09:57,590 --> 00:10:03,020
variables here<font color="#CCCCCC"> so when</font><font color="#E5E5E5"> we look at this</font>

180
00:10:00,770 --> 00:10:05,540
circuit and when we are neglecting<font color="#E5E5E5"> time</font>

181
00:10:03,020 --> 00:10:07,069
<font color="#E5E5E5">then we can</font><font color="#CCCCCC"> just write</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> as a potent</font>

182
00:10:05,540 --> 00:10:09,530
equation so this<font color="#E5E5E5"> is there's nothing</font>

183
00:10:07,070 --> 00:10:15,830
about time behavior but just for<font color="#E5E5E5"> the</font>

184
00:10:09,530 --> 00:10:20,110
moment<font color="#CCCCCC"> so the next thing</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> is for</font>

185
00:10:15,830 --> 00:10:20,110
<font color="#CCCCCC">expansion and for those of you who</font>

186
00:10:20,260 --> 00:10:26,330
already<font color="#E5E5E5"> heard</font><font color="#CCCCCC"> about this is also called</font>

187
00:10:23,930 --> 00:10:28,339
the<font color="#CCCCCC"> Walsh transform</font><font color="#E5E5E5"> and the way this</font>

188
00:10:26,330 --> 00:10:32,060
works is basically<font color="#E5E5E5"> we take</font><font color="#CCCCCC"> is called an</font>

189
00:10:28,340 --> 00:10:35,060
equation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> map true to minus</font><font color="#CCCCCC"> one</font>

190
00:10:32,060 --> 00:10:39,170
<font color="#CCCCCC">fourth to one and then</font><font color="#E5E5E5"> we can write each</font>

191
00:10:35,060 --> 00:10:41,390
equation<font color="#E5E5E5"> the very elegant form so we can</font>

192
00:10:39,170 --> 00:10:45,469
write a function<font color="#E5E5E5"> over the input</font>

193
00:10:41,390 --> 00:10:48,650
<font color="#E5E5E5">variables X as the as to some of the</font>

194
00:10:45,470 --> 00:10:51,680
<font color="#CCCCCC">three coefficients</font><font color="#E5E5E5"> times to create</font>

195
00:10:48,650 --> 00:10:53,660
<font color="#E5E5E5">correct characters and the</font><font color="#CCCCCC"> spree</font><font color="#E5E5E5"> eight</font>

196
00:10:51,680 --> 00:10:55,729
characters are nothing else<font color="#E5E5E5"> than all</font>

197
00:10:53,660 --> 00:10:58,030
combinations<font color="#E5E5E5"> are possible ordered</font>

198
00:10:55,730 --> 00:11:01,340
combinations of variables that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

199
00:10:58,030 --> 00:11:02,569
so how would this look<font color="#CCCCCC"> like</font><font color="#E5E5E5"> so we would</font>

200
00:11:01,340 --> 00:11:05,210
end<font color="#CCCCCC"> up with an equation that</font><font color="#E5E5E5"> looks</font>

201
00:11:02,570 --> 00:11:09,230
<font color="#E5E5E5">something like this so is alpha here are</font>

202
00:11:05,210 --> 00:11:11,930
my coefficients and then I add them up

203
00:11:09,230 --> 00:11:17,540
together<font color="#CCCCCC"> times</font><font color="#E5E5E5"> all combinations of my</font>

204
00:11:11,930 --> 00:11:20,420
input variables<font color="#E5E5E5"> X here so</font><font color="#CCCCCC"> how does this</font>

205
00:11:17,540 --> 00:11:22,760
help well there is this lemma<font color="#E5E5E5"> of J and</font><font color="#CCCCCC"> s</font>

206
00:11:20,420 --> 00:11:25,520
it basically<font color="#E5E5E5"> tells us a boolean function</font>

207
00:11:22,760 --> 00:11:28,640
is statistically independent<font color="#CCCCCC"> if all</font>

208
00:11:25,520 --> 00:11:30,920
<font color="#E5E5E5">variables for</font><font color="#CCCCCC"> all there is</font>

209
00:11:28,640 --> 00:11:32,750
<font color="#E5E5E5">it holds</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the subset of these</font>

210
00:11:30,920 --> 00:11:35,540
<font color="#E5E5E5">separate variables</font>

211
00:11:32,750 --> 00:11:39,530
despite the empty set although the

212
00:11:35,540 --> 00:11:41,569
<font color="#E5E5E5">Fourier</font><font color="#CCCCCC"> coefficients</font><font color="#E5E5E5"> should be</font><font color="#CCCCCC"> zero so</font>

213
00:11:39,530 --> 00:11:48,199
what does this mean for<font color="#E5E5E5"> our circuit so</font>

214
00:11:41,570 --> 00:11:51,680
if we accept<font color="#E5E5E5"> SM here the equation s</font>

215
00:11:48,200 --> 00:11:53,810
times M s so<font color="#E5E5E5"> as is our secret that we</font>

216
00:11:51,680 --> 00:11:55,400
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to protect but so when we looked at</font>

217
00:11:53,810 --> 00:11:59,359
<font color="#E5E5E5">the Fourier transformation of this</font>

218
00:11:55,400 --> 00:12:02,329
circuit<font color="#E5E5E5"> then we see that for that we</font>

219
00:11:59,360 --> 00:12:05,210
only have nonzero<font color="#E5E5E5"> coefficients for terms</font>

220
00:12:02,330 --> 00:12:07,580
where we have s<font color="#CCCCCC"> joint with a mass</font>

221
00:12:05,210 --> 00:12:10,340
<font color="#E5E5E5">together so this would be insecure if</font>

222
00:12:07,580 --> 00:12:14,540
you would have<font color="#E5E5E5"> an S alone here or an S</font>

223
00:12:10,340 --> 00:12:16,190
with a publicly<font color="#E5E5E5"> non variable but so far</font>

224
00:12:14,540 --> 00:12:19,640
the circuit<font color="#E5E5E5"> looks secure from our</font>

225
00:12:16,190 --> 00:12:22,930
perspective what's the problem with this

226
00:12:19,640 --> 00:12:25,970
is<font color="#CCCCCC"> say if you go</font><font color="#E5E5E5"> to a bigger circuit</font>

227
00:12:22,930 --> 00:12:29,390
<font color="#E5E5E5">because they're kids and later on we're</font>

228
00:12:25,970 --> 00:12:31,880
<font color="#CCCCCC">going to it</font><font color="#E5E5E5"> expand this to all possible</font>

229
00:12:29,390 --> 00:12:36,170
signal times<font color="#E5E5E5"> then this really becomes</font>

230
00:12:31,880 --> 00:12:38,090
quite inefficient and yeah<font color="#E5E5E5"> if it becomes</font>

231
00:12:36,170 --> 00:12:41,660
big enough<font color="#E5E5E5"> then it gets</font><font color="#CCCCCC"> impossible to do</font>

232
00:12:38,090 --> 00:12:45,830
this so in step of calculating the exact

233
00:12:41,660 --> 00:12:48,500
Fourier spectrum<font color="#CCCCCC"> our idea</font><font color="#E5E5E5"> was to</font><font color="#CCCCCC"> just do</font>

234
00:12:45,830 --> 00:12:51,680
an approximation<font color="#E5E5E5"> of this spectrum</font>

235
00:12:48,500 --> 00:12:55,700
<font color="#E5E5E5">because so we just want to know whether</font>

236
00:12:51,680 --> 00:12:58,699
certain<font color="#E5E5E5"> values are</font><font color="#CCCCCC"> zero or not</font><font color="#E5E5E5"> and so</font>

237
00:12:55,700 --> 00:13:01,880
with our approach it<font color="#E5E5E5"> so we're doing an</font>

238
00:12:58,700 --> 00:13:04,520
approximation<font color="#E5E5E5"> and this can can also come</font>

239
00:13:01,880 --> 00:13:07,730
up with<font color="#CCCCCC"> some of those spikes here</font><font color="#E5E5E5"> which</font>

240
00:13:04,520 --> 00:13:10,340
only can decrease our<font color="#E5E5E5"> security so we can</font>

241
00:13:07,730 --> 00:13:13,790
come<font color="#CCCCCC"> up with false alarms but if the</font>

242
00:13:10,340 --> 00:13:14,899
circuit is<font color="#E5E5E5"> security</font><font color="#CCCCCC"> mask</font><font color="#E5E5E5"> and we do this</font>

243
00:13:13,790 --> 00:13:17,209
approach

244
00:13:14,899 --> 00:13:21,860
<font color="#E5E5E5">you always say it's security this is</font>

245
00:13:17,209 --> 00:13:25,248
<font color="#CCCCCC">what we</font><font color="#E5E5E5"> prove instead of verification</font>

246
00:13:21,860 --> 00:13:27,499
<font color="#E5E5E5">then works in in three steps the first</font>

247
00:13:25,249 --> 00:13:31,519
step<font color="#E5E5E5"> is that we label our inputs</font>

248
00:13:27,499 --> 00:13:34,550
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to our Fourier analysis</font>

249
00:13:31,519 --> 00:13:36,889
so this basically means<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> just set</font>

250
00:13:34,550 --> 00:13:41,719
<font color="#CCCCCC">the input labels</font><font color="#E5E5E5"> here according</font><font color="#CCCCCC"> to a</font>

251
00:13:36,889 --> 00:13:43,970
<font color="#CCCCCC">variable which is s</font><font color="#E5E5E5"> joint with</font><font color="#CCCCCC"> M s then</font>

252
00:13:41,720 --> 00:13:46,610
we propagate these labels<font color="#E5E5E5"> according to</font>

253
00:13:43,970 --> 00:13:49,610
some<font color="#E5E5E5"> rules which depends on the Fourier</font>

254
00:13:46,610 --> 00:13:51,740
<font color="#CCCCCC">spectrum of the of the functions that we</font>

255
00:13:49,610 --> 00:13:54,619
are<font color="#CCCCCC"> calculating and then we check for</font>

256
00:13:51,740 --> 00:13:58,300
some secrets without any mosques<font color="#CCCCCC"> in this</font>

257
00:13:54,619 --> 00:13:58,300
case<font color="#CCCCCC"> secure</font>

258
00:13:59,079 --> 00:14:04,279
so this propagation<font color="#E5E5E5"> rules that we have</font>

259
00:14:01,699 --> 00:14:08,209
quite simple for for a stable<font color="#CCCCCC"> signal so</font>

260
00:14:04,279 --> 00:14:10,939
when we we don't talk about about timing

261
00:14:08,209 --> 00:14:13,339
<font color="#CCCCCC">so we just label the inputs for</font>

262
00:14:10,939 --> 00:14:15,529
<font color="#E5E5E5">something for this but it's a meteor</font>

263
00:14:13,339 --> 00:14:19,999
according<font color="#CCCCCC"> to the barriers we have in</font>

264
00:14:15,529 --> 00:14:23,839
there for<font color="#CCCCCC"> nonlinear gates like the N so</font>

265
00:14:19,999 --> 00:14:26,899
we're creating<font color="#CCCCCC"> this landing here where</font>

266
00:14:23,839 --> 00:14:31,069
we joined an empty set with the first

267
00:14:26,899 --> 00:14:33,410
input<font color="#E5E5E5"> set of the of them with the stable</font>

268
00:14:31,069 --> 00:14:35,540
set of the first<font color="#E5E5E5"> input and stable set of</font>

269
00:14:33,410 --> 00:14:40,269
<font color="#E5E5E5">second</font><font color="#CCCCCC"> input and then we're</font><font color="#E5E5E5"> doing also</font>

270
00:14:35,540 --> 00:14:40,269
there's a point<font color="#E5E5E5"> wise difference of both</font>

271
00:14:41,499 --> 00:14:46,490
it's like next<font color="#E5E5E5"> one looks a bit</font>

272
00:14:43,879 --> 00:14:50,899
differently<font color="#CCCCCC"> so for this we only do the</font>

273
00:14:46,490 --> 00:14:53,569
<font color="#E5E5E5">last part here where we do this point</font>

274
00:14:50,899 --> 00:14:57,709
where step difference<font color="#E5E5E5"> and</font><font color="#CCCCCC"> four registers</font>

275
00:14:53,569 --> 00:15:03,979
<font color="#E5E5E5">and all</font><font color="#CCCCCC"> of just one input bits we just</font>

276
00:14:57,709 --> 00:15:06,529
propagate<font color="#CCCCCC"> stable sets so up to now we</font>

277
00:15:03,980 --> 00:15:09,500
<font color="#E5E5E5">don't think</font><font color="#CCCCCC"> Lexi time so I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

278
00:15:06,529 --> 00:15:10,939
change this now so let's talk<font color="#CCCCCC"> about</font>

279
00:15:09,500 --> 00:15:14,240
so this is really<font color="#E5E5E5"> something</font>

280
00:15:10,940 --> 00:15:16,640
<font color="#CCCCCC">hardware-specific and</font><font color="#E5E5E5"> I want to discuss</font>

281
00:15:14,240 --> 00:15:17,870
this on a much simpler or in simple

282
00:15:16,640 --> 00:15:21,290
circuit as we had before

283
00:15:17,870 --> 00:15:25,370
this is<font color="#CCCCCC"> really just to expose a masked</font>

284
00:15:21,290 --> 00:15:27,170
secret and and some<font color="#E5E5E5"> mosques and so when</font>

285
00:15:25,370 --> 00:15:29,780
we look at the output<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> first x-ray</font>

286
00:15:27,170 --> 00:15:34,010
we would get s extra<font color="#E5E5E5"> M s because it's</font>

287
00:15:29,780 --> 00:15:36,709
what<font color="#CCCCCC"> SMEs XOR M 1 and when we looked</font><font color="#E5E5E5"> at</font>

288
00:15:34,010 --> 00:15:39,710
the output<font color="#E5E5E5"> we basically get s extra M 1</font>

289
00:15:36,710 --> 00:15:42,830
because<font color="#CCCCCC"> we cancel out a mess</font><font color="#E5E5E5"> so this is</font>

290
00:15:39,710 --> 00:15:44,720
all<font color="#CCCCCC"> secure up to now however</font><font color="#E5E5E5"> if you</font>

291
00:15:42,830 --> 00:15:48,380
assume that in the next<font color="#E5E5E5"> cycle would</font>

292
00:15:44,720 --> 00:15:50,810
process<font color="#CCCCCC"> a different secret so</font><font color="#E5E5E5"> we also</font>

293
00:15:48,380 --> 00:15:54,770
have different input signals but we

294
00:15:50,810 --> 00:15:56,660
assume that this<font color="#E5E5E5"> mass M 1 here</font><font color="#CCCCCC"> arrived a</font>

295
00:15:54,770 --> 00:16:02,140
bit<font color="#E5E5E5"> later than all the other signals</font>

296
00:15:56,660 --> 00:16:09,650
<font color="#E5E5E5">here what we get at</font><font color="#CCCCCC"> the output is s</font><font color="#E5E5E5"> hat</font>

297
00:16:02,140 --> 00:16:12,230
extraor m1 which<font color="#CCCCCC"> but the problem is in</font>

298
00:16:09,650 --> 00:16:14,510
the probing model in this<font color="#E5E5E5"> assume that an</font>

299
00:16:12,230 --> 00:16:17,120
<font color="#CCCCCC">attacker</font><font color="#E5E5E5"> places probably need on</font><font color="#CCCCCC"> your</font>

300
00:16:14,510 --> 00:16:19,310
circuit can continuously model<font color="#E5E5E5"> what the</font>

301
00:16:17,120 --> 00:16:24,440
circuit is doing at this<font color="#E5E5E5"> point so it</font>

302
00:16:19,310 --> 00:16:26,869
would not only<font color="#E5E5E5"> get this this equation</font>

303
00:16:24,440 --> 00:16:29,390
<font color="#CCCCCC">here but it will also record the</font>

304
00:16:26,870 --> 00:16:31,280
equation from the<font color="#E5E5E5"> cycle before and when</font>

305
00:16:29,390 --> 00:16:33,980
you combine<font color="#CCCCCC"> this you can</font><font color="#E5E5E5"> learn something</font>

306
00:16:31,280 --> 00:16:38,209
<font color="#E5E5E5">about the difference of the secrets that</font>

307
00:16:33,980 --> 00:16:43,720
you<font color="#E5E5E5"> got before this then not secure</font><font color="#CCCCCC"> it's</font>

308
00:16:38,210 --> 00:16:47,360
not what we want to have and if<font color="#CCCCCC"> if</font><font color="#E5E5E5"> the</font>

309
00:16:43,720 --> 00:16:49,400
signals then said again this flow

310
00:16:47,360 --> 00:16:52,070
vanishes and this is basically<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we</font>

311
00:16:49,400 --> 00:16:56,540
<font color="#E5E5E5">call</font><font color="#CCCCCC"> a gauge so a temporary violation of</font>

312
00:16:52,070 --> 00:16:59,510
this<font color="#CCCCCC"> proving assumption so in order to</font>

313
00:16:56,540 --> 00:17:01,780
also<font color="#E5E5E5"> cover this we need to extend our</font>

314
00:16:59,510 --> 00:17:03,640
rules and<font color="#CCCCCC"> we also</font>

315
00:17:01,780 --> 00:17:07,329
second<font color="#E5E5E5"> set here which we call the</font>

316
00:17:03,640 --> 00:17:13,210
Trenton cell which is here denoted in

317
00:17:07,329 --> 00:17:16,540
red and we just do the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing as for</font>

318
00:17:13,210 --> 00:17:18,819
the stable set for<font color="#CCCCCC"> non litigates we</font>

319
00:17:16,540 --> 00:17:22,619
already have a rule this really<font color="#E5E5E5"> covers</font>

320
00:17:18,819 --> 00:17:25,329
the<font color="#E5E5E5"> worst case so we have modified</font><font color="#CCCCCC"> that</font>

321
00:17:22,619 --> 00:17:27,099
but for linear<font color="#E5E5E5"> dates</font>

322
00:17:25,329 --> 00:17:29,169
we're also bitches can happen as you

323
00:17:27,099 --> 00:17:30,730
have seen<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> slide</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> we're</font>

324
00:17:29,170 --> 00:17:37,630
<font color="#E5E5E5">basically going to</font><font color="#CCCCCC"> use the same</font>

325
00:17:30,730 --> 00:17:39,580
<font color="#CCCCCC">nonlinear be true</font><font color="#E5E5E5"> as before</font><font color="#CCCCCC"> and then for</font>

326
00:17:37,630 --> 00:17:43,090
registered as we say<font color="#E5E5E5"> his</font><font color="#CCCCCC"> fencing</font><font color="#E5E5E5"> set</font>

327
00:17:39,580 --> 00:17:45,340
<font color="#E5E5E5">totally disappears because registers are</font>

328
00:17:43,090 --> 00:17:49,840
blocking<font color="#E5E5E5"> one cycle from from the another</font>

329
00:17:45,340 --> 00:17:53,939
<font color="#E5E5E5">and so we then</font><font color="#CCCCCC"> just propagate the stable</font>

330
00:17:49,840 --> 00:17:59,110
set so let's have<font color="#E5E5E5"> a look at</font><font color="#CCCCCC"> this on a</font>

331
00:17:53,940 --> 00:18:01,690
bigger example we<font color="#E5E5E5"> have before at the</font>

332
00:17:59,110 --> 00:18:04,689
beginning<font color="#E5E5E5"> and we just look at</font><font color="#CCCCCC"> the</font>

333
00:18:01,690 --> 00:18:07,810
transient set because is<font color="#E5E5E5"> a purely</font>

334
00:18:04,690 --> 00:18:10,810
combinatorial circuit<font color="#E5E5E5"> so again we are</font>

335
00:18:07,810 --> 00:18:13,230
<font color="#CCCCCC">leaving the input this before</font><font color="#E5E5E5"> and then</font>

336
00:18:10,810 --> 00:18:16,389
we apply or<font color="#E5E5E5"> nonlinear propagation rules</font>

337
00:18:13,230 --> 00:18:19,960
<font color="#E5E5E5">also for the XOR gate so we get this</font>

338
00:18:16,390 --> 00:18:22,420
empty set the copy of<font color="#E5E5E5"> the first impulse</font>

339
00:18:19,960 --> 00:18:24,910
copy of the second set of<font color="#CCCCCC"> the second</font>

340
00:18:22,420 --> 00:18:27,640
input and then<font color="#E5E5E5"> we also get the point by</font>

341
00:18:24,910 --> 00:18:30,120
<font color="#CCCCCC">step difference</font><font color="#E5E5E5"> and so if we</font><font color="#CCCCCC"> put or if</font>

342
00:18:27,640 --> 00:18:33,730
you're<font color="#E5E5E5"> doing this for all gates here</font>

343
00:18:30,120 --> 00:18:36,520
what we can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> this circuit is</font>

344
00:18:33,730 --> 00:18:39,430
indeed not<font color="#E5E5E5"> secure for its</font><font color="#CCCCCC"> range in</font>

345
00:18:36,520 --> 00:18:42,490
signals and<font color="#CCCCCC"> finishes</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we see</font><font color="#E5E5E5"> that</font>

346
00:18:39,430 --> 00:18:45,850
we<font color="#CCCCCC"> end up with signal combinations that</font>

347
00:18:42,490 --> 00:18:48,070
contain the signal or the<font color="#E5E5E5"> secret without</font>

348
00:18:45,850 --> 00:18:54,520
any masks<font color="#E5E5E5"> in them and this indicates a</font>

349
00:18:48,070 --> 00:18:57,240
<font color="#CCCCCC">flawed circuit so enough to fear</font><font color="#E5E5E5"> me we</font>

350
00:18:54,520 --> 00:19:00,180
also took this approach<font color="#E5E5E5"> and put it into</font>

351
00:18:57,240 --> 00:19:04,140
<font color="#CCCCCC">a</font><font color="#E5E5E5"> tool and our tool chain works as</font>

352
00:19:00,180 --> 00:19:07,200
follows<font color="#CCCCCC"> so we take a</font><font color="#E5E5E5"> sex description for</font>

353
00:19:04,140 --> 00:19:10,020
example<font color="#CCCCCC"> based on very low or VHDL passes</font>

354
00:19:07,200 --> 00:19:13,020
with an open synthesis tool which is

355
00:19:10,020 --> 00:19:17,010
<font color="#E5E5E5">called theosis and what we get from</font><font color="#CCCCCC"> that</font>

356
00:19:13,020 --> 00:19:18,690
<font color="#CCCCCC">is circuitry in JSON format that we are</font>

357
00:19:17,010 --> 00:19:21,000
going to process<font color="#E5E5E5"> further so this</font>

358
00:19:18,690 --> 00:19:23,520
contains<font color="#E5E5E5"> the gates into a wire so the</font>

359
00:19:21,000 --> 00:19:25,830
connections of<font color="#E5E5E5"> the of the circuit and</font>

360
00:19:23,520 --> 00:19:27,930
then we need a bit of<font color="#E5E5E5"> user interaction</font>

361
00:19:25,830 --> 00:19:30,419
here because the user needs to<font color="#E5E5E5"> tell</font><font color="#CCCCCC"> us</font>

362
00:19:27,930 --> 00:19:32,520
at the input of the circuit which

363
00:19:30,420 --> 00:19:35,790
signals are critical which<font color="#E5E5E5"> are secrets</font>

364
00:19:32,520 --> 00:19:37,440
which are<font color="#CCCCCC"> mods which are which are</font>

365
00:19:35,790 --> 00:19:39,090
public signals<font color="#E5E5E5"> and what is the maximum</font>

366
00:19:37,440 --> 00:19:42,560
<font color="#E5E5E5">protection order to them</font>

367
00:19:39,090 --> 00:19:45,959
I want this<font color="#E5E5E5"> circuit to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> tested against</font>

368
00:19:42,560 --> 00:19:49,320
so we take this information<font color="#E5E5E5"> put</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> into</font>

369
00:19:45,960 --> 00:19:52,380
a Python<font color="#CCCCCC"> script that</font><font color="#E5E5E5"> that creates all</font>

370
00:19:49,320 --> 00:19:54,600
the propagation rules to talk to for for

371
00:19:52,380 --> 00:19:57,210
with a concrete circuit<font color="#E5E5E5"> so we're going</font>

372
00:19:54,600 --> 00:19:59,280
<font color="#E5E5E5">to verify the end with this and the</font>

373
00:19:57,210 --> 00:20:01,980
constraints we're going to call<font color="#CCCCCC"> see</font>

374
00:19:59,280 --> 00:20:03,990
<font color="#CCCCCC">three sets over and this</font><font color="#E5E5E5"> is them going</font>

375
00:20:01,980 --> 00:20:06,630
<font color="#CCCCCC">to tell</font><font color="#E5E5E5"> us whether</font><font color="#CCCCCC"> the circuit is secure</font>

376
00:20:03,990 --> 00:20:09,480
or<font color="#CCCCCC"> not and if it's</font><font color="#E5E5E5"> not secure we can ask</font>

377
00:20:06,630 --> 00:20:12,870
for<font color="#E5E5E5"> where ways to follow</font><font color="#CCCCCC"> kated and what</font>

378
00:20:09,480 --> 00:20:19,140
are the signals<font color="#E5E5E5"> that</font><font color="#CCCCCC"> produce the</font><font color="#E5E5E5"> flaw so</font>

379
00:20:12,870 --> 00:20:21,270
with this implementation we support<font color="#CCCCCC"> this</font>

380
00:20:19,140 --> 00:20:26,400
instance of<font color="#E5E5E5"> our verification approach</font>

381
00:20:21,270 --> 00:20:29,550
with<font color="#CCCCCC"> write a few exemplary circuits that</font>

382
00:20:26,400 --> 00:20:32,010
are out there so we started off<font color="#E5E5E5"> with</font>

383
00:20:29,550 --> 00:20:35,100
verifying some<font color="#E5E5E5"> basic building blocks of</font>

384
00:20:32,010 --> 00:20:37,379
<font color="#CCCCCC">master circuits</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> the ice</font><font color="#E5E5E5"> W in the</font>

385
00:20:35,100 --> 00:20:40,800
<font color="#E5E5E5">Kitchener and gates which are known to</font>

386
00:20:37,380 --> 00:20:43,050
<font color="#CCCCCC">be thought and also</font><font color="#E5E5E5"> of course indicates</font>

387
00:20:40,800 --> 00:20:44,580
this and we also tried some other

388
00:20:43,050 --> 00:20:46,889
building blocks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> fresh fruit</font>

389
00:20:44,580 --> 00:20:49,710
implementations and gate and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> domain</font>

390
00:20:46,890 --> 00:20:53,070
are<font color="#CCCCCC"> in masking and gate and</font><font color="#E5E5E5"> for this</font>

391
00:20:49,710 --> 00:20:55,280
with<font color="#E5E5E5"> this verification up to 45</font><font color="#CCCCCC"> for</font>

392
00:20:53,070 --> 00:20:59,250
different orders of the multiplier and

393
00:20:55,280 --> 00:21:00,310
so in<font color="#E5E5E5"> this diagram you</font><font color="#CCCCCC"> can observe the</font>

394
00:20:59,250 --> 00:21:02,380
time and

395
00:21:00,310 --> 00:21:04,870
the verification<font color="#E5E5E5"> order for four</font>

396
00:21:02,380 --> 00:21:09,570
<font color="#E5E5E5">different orders of the</font><font color="#CCCCCC"> NPA</font><font color="#E5E5E5"> and as you</font>

397
00:21:04,870 --> 00:21:13,389
see the verification effort grows

398
00:21:09,570 --> 00:21:15,429
exponentially<font color="#CCCCCC"> but what's also</font>

399
00:21:13,390 --> 00:21:18,760
interesting to<font color="#E5E5E5"> see is so finding the</font>

400
00:21:15,430 --> 00:21:21,280
flaw is much easier so this is also what

401
00:21:18,760 --> 00:21:23,200
we observed in bigger circuits<font color="#CCCCCC"> when we</font>

402
00:21:21,280 --> 00:21:26,050
<font color="#E5E5E5">actually found a flaw then we would</font>

403
00:21:23,200 --> 00:21:28,720
found<font color="#E5E5E5"> this much faster than if we solve</font>

404
00:21:26,050 --> 00:21:31,840
this flaw game and run the verification

405
00:21:28,720 --> 00:21:35,410
on this but of<font color="#E5E5E5"> course we also tried it</font>

406
00:21:31,840 --> 00:21:38,470
against bigger circuits<font color="#E5E5E5"> so we tried this</font>

407
00:21:35,410 --> 00:21:40,390
for<font color="#CCCCCC"> example for Tomcat Jack</font><font color="#E5E5E5"> s ports so</font>

408
00:21:38,470 --> 00:21:43,510
we're<font color="#E5E5E5"> first order verification took</font>

409
00:21:40,390 --> 00:21:49,720
about 20<font color="#E5E5E5"> seconds</font><font color="#CCCCCC"> for a</font><font color="#E5E5E5"> verification</font>

410
00:21:43,510 --> 00:21:54,780
about 25 minutes<font color="#CCCCCC"> files S box times</font><font color="#E5E5E5"> APN</font>

411
00:21:49,720 --> 00:21:54,780
and biggest<font color="#E5E5E5"> circuit was the main event</font>

412
00:21:55,620 --> 00:22:01,090
which took between<font color="#E5E5E5"> 5 and 10 hours of</font>

413
00:21:58,540 --> 00:22:05,440
<font color="#E5E5E5">parallel checking in order to verify</font>

414
00:22:01,090 --> 00:22:07,360
<font color="#E5E5E5">this to be a secure circuit so this</font>

415
00:22:05,440 --> 00:22:10,180
<font color="#E5E5E5">brings me to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> conclusion of the talk</font>

416
00:22:07,360 --> 00:22:13,120
and<font color="#CCCCCC"> I want to end with a positive note</font>

417
00:22:10,180 --> 00:22:15,670
on the verification<font color="#CCCCCC"> of masculine form of</font>

418
00:22:13,120 --> 00:22:18,370
<font color="#CCCCCC">education of masking so we really think</font>

419
00:22:15,670 --> 00:22:20,980
<font color="#CCCCCC">that there is</font><font color="#E5E5E5"> hope for practical form of</font>

420
00:22:18,370 --> 00:22:22,719
verification<font color="#E5E5E5"> of</font><font color="#CCCCCC"> math circuits</font><font color="#E5E5E5"> and that</font>

421
00:22:20,980 --> 00:22:25,480
this really<font color="#CCCCCC"> can be counted only an</font>

422
00:22:22,720 --> 00:22:28,030
alternative but the<font color="#E5E5E5"> replacement for</font>

423
00:22:25,480 --> 00:22:30,910
<font color="#E5E5E5">empirical and theoretical methods that</font>

424
00:22:28,030 --> 00:22:35,530
are<font color="#CCCCCC"> nowadays the</font><font color="#E5E5E5"> predominant form of</font>

425
00:22:30,910 --> 00:22:37,780
verifying this<font color="#CCCCCC"> math</font><font color="#E5E5E5"> circuit we feel</font><font color="#CCCCCC"> that</font>

426
00:22:35,530 --> 00:22:41,740
<font color="#E5E5E5">that there's still a long way to go to</font>

427
00:22:37,780 --> 00:22:44,170
<font color="#CCCCCC">cover everything and</font><font color="#E5E5E5"> to make this as so</font>

428
00:22:41,740 --> 00:22:46,060
efficient that we can improve<font color="#E5E5E5"> complete</font>

429
00:22:44,170 --> 00:22:48,820
circuits and for higher protection

430
00:22:46,060 --> 00:22:51,129
orders<font color="#E5E5E5"> but there there's also lots of</font>

431
00:22:48,820 --> 00:22:52,240
room for improvement<font color="#E5E5E5"> and one way to go</font>

432
00:22:51,130 --> 00:22:54,460
for<font color="#CCCCCC"> example is</font><font color="#E5E5E5"> this</font>

433
00:22:52,240 --> 00:22:56,860
possibility and the combined form of

434
00:22:54,460 --> 00:22:59,140
this composability notion and so on<font color="#E5E5E5"> so</font>

435
00:22:56,860 --> 00:23:02,469
there are really some ideas out there

436
00:22:59,140 --> 00:23:13,179
<font color="#E5E5E5">how we can improve our</font><font color="#CCCCCC"> approach this is</font>

437
00:23:02,470 --> 00:23:22,540
just a first step<font color="#CCCCCC"> so thank</font><font color="#E5E5E5"> you so</font><font color="#CCCCCC"> we</font>

438
00:23:13,179 --> 00:23:24,550
<font color="#E5E5E5">have time for some</font><font color="#CCCCCC"> questions you have a</font>

439
00:23:22,540 --> 00:23:26,800
circuit which is<font color="#E5E5E5"> secure without glitches</font>

440
00:23:24,550 --> 00:23:29,889
and then with glitches<font color="#E5E5E5"> it's insecure and</font>

441
00:23:26,800 --> 00:23:31,600
the circuit<font color="#E5E5E5"> is very big then the problem</font>

442
00:23:29,890 --> 00:23:33,250
is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> okay you have</font><font color="#E5E5E5"> to decide do I</font>

443
00:23:31,600 --> 00:23:35,020
mean is it<font color="#CCCCCC"> really insecure</font><font color="#E5E5E5"> or not</font>

444
00:23:33,250 --> 00:23:37,240
because in practice I<font color="#CCCCCC"> don't know if you</font>

445
00:23:35,020 --> 00:23:40,920
want to make it secure against glitches

446
00:23:37,240 --> 00:23:44,170
it will be like<font color="#CCCCCC"> no much bigger</font><font color="#E5E5E5"> problem</font>

447
00:23:40,920 --> 00:23:45,820
registers but the<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> so we have</font>

448
00:23:44,170 --> 00:23:48,010
this<font color="#CCCCCC"> table</font><font color="#E5E5E5"> set rules and the</font><font color="#CCCCCC"> strengths</font>

449
00:23:45,820 --> 00:23:50,290
<font color="#CCCCCC">and set rules</font><font color="#E5E5E5"> and so the first thing</font>

450
00:23:48,010 --> 00:23:52,050
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we do when we practically verify</font>

451
00:23:50,290 --> 00:23:55,928
because<font color="#CCCCCC"> it's really</font><font color="#E5E5E5"> a tool that we use</font>

452
00:23:52,050 --> 00:23:57,879
when we going to implement<font color="#E5E5E5"> new new stuff</font>

453
00:23:55,929 --> 00:24:00,070
then we so this<font color="#E5E5E5"> is really</font><font color="#CCCCCC"> a practical</font>

454
00:23:57,880 --> 00:24:02,110
tool that is already news the first

455
00:24:00,070 --> 00:24:04,770
<font color="#E5E5E5">thing we do is we just test for this</font>

456
00:24:02,110 --> 00:24:07,330
<font color="#CCCCCC">table set rules this doesn't have this</font>

457
00:24:04,770 --> 00:24:09,690
huge exponential blow-up so this is

458
00:24:07,330 --> 00:24:12,669
<font color="#CCCCCC">what's really much much faster than for</font>

459
00:24:09,690 --> 00:24:14,710
and also<font color="#CCCCCC"> buying these trends</font><font color="#E5E5E5"> in set</font>

460
00:24:12,670 --> 00:24:18,760
rules<font color="#E5E5E5"> so this is the first thing we do</font>

461
00:24:14,710 --> 00:24:20,710
before<font color="#E5E5E5"> we go to the</font><font color="#CCCCCC"> transistor is their</font>

462
00:24:18,760 --> 00:24:22,300
<font color="#E5E5E5">scope</font><font color="#CCCCCC"> ID to add some probabilities in</font>

463
00:24:20,710 --> 00:24:24,160
the in this setting like to say<font color="#CCCCCC"> okay</font>

464
00:24:22,300 --> 00:24:26,590
<font color="#E5E5E5">what's the probability of actually</font>

465
00:24:24,160 --> 00:24:31,240
having<font color="#E5E5E5"> a glitch like because I don't</font>

466
00:24:26,590 --> 00:24:32,740
know<font color="#CCCCCC"> no so we don't take concrete signal</font>

467
00:24:31,240 --> 00:24:35,740
<font color="#E5E5E5">timings into account because</font><font color="#CCCCCC"> this can</font>

468
00:24:32,740 --> 00:24:38,110
also completely vary so if<font color="#E5E5E5"> you are going</font>

469
00:24:35,740 --> 00:24:42,190
<font color="#E5E5E5">to produce an ASIC for example and you</font>

470
00:24:38,110 --> 00:24:44,050
take two<font color="#E5E5E5"> different devices</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> this can</font>

471
00:24:42,190 --> 00:24:44,580
also have completely different signal

472
00:24:44,050 --> 00:24:45,990
timings

473
00:24:44,580 --> 00:24:51,570
or let's<font color="#CCCCCC"> put</font><font color="#E5E5E5"> Barry in when you have</font>

474
00:24:45,990 --> 00:24:53,340
different<font color="#E5E5E5"> environmental</font><font color="#CCCCCC"> conditions you</font>

475
00:24:51,570 --> 00:24:56,189
could I don't<font color="#E5E5E5"> think this would make</font>

476
00:24:53,340 --> 00:24:58,889
<font color="#E5E5E5">things easier</font><font color="#CCCCCC"> actually so right now</font><font color="#E5E5E5"> I</font>

477
00:24:56,190 --> 00:25:02,130
think<font color="#E5E5E5"> it's better</font><font color="#CCCCCC"> to just verify</font><font color="#E5E5E5"> against</font>

478
00:24:58,890 --> 00:25:04,680
the worst case then taking create<font color="#CCCCCC"> signal</font>

479
00:25:02,130 --> 00:25:06,090
time since account because<font color="#E5E5E5"> also</font><font color="#CCCCCC"> this</font>

480
00:25:04,680 --> 00:25:23,640
assumptions that you would have<font color="#CCCCCC"> the</font>

481
00:25:06,090 --> 00:25:25,530
<font color="#E5E5E5">signal timings is not realistic so I</font>

482
00:25:23,640 --> 00:25:42,690
guess when you<font color="#CCCCCC"> to orange</font><font color="#E5E5E5"> checking is for</font>

483
00:25:25,530 --> 00:25:45,840
checking each<font color="#CCCCCC"> secret like yeah this</font><font color="#E5E5E5"> is</font>

484
00:25:42,690 --> 00:25:48,000
<font color="#E5E5E5">what</font><font color="#CCCCCC"> we're doing</font><font color="#E5E5E5"> with just modifying the</font>

485
00:25:45,840 --> 00:25:50,730
labels at the input<font color="#E5E5E5"> but just removing</font>

486
00:25:48,000 --> 00:25:53,670
the<font color="#E5E5E5"> other secrets like some with taking</font>

487
00:25:50,730 --> 00:25:57,480
<font color="#E5E5E5">a SS</font><font color="#CCCCCC"> pots you have eight</font><font color="#E5E5E5"> secrets in</font>

488
00:25:53,670 --> 00:25:59,880
there right<font color="#CCCCCC"> and very fine against all</font>

489
00:25:57,480 --> 00:26:02,460
this if<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is time to see what</font><font color="#E5E5E5"> you want</font>

490
00:25:59,880 --> 00:26:05,280
<font color="#E5E5E5">to do is in parallel and so what we're</font>

491
00:26:02,460 --> 00:26:07,770
doing is we're<font color="#CCCCCC"> taking all the</font>

492
00:26:05,280 --> 00:26:13,170
<font color="#CCCCCC">wavelengths that</font><font color="#E5E5E5"> we would have but</font><font color="#CCCCCC"> just</font>

493
00:26:07,770 --> 00:26:15,180
removing the<font color="#E5E5E5"> seven other secrets thank</font>

494
00:26:13,170 --> 00:26:17,340
you public variables for instance or

495
00:26:15,180 --> 00:26:21,150
<font color="#CCCCCC">you'll just</font><font color="#E5E5E5"> remove the notes that we</font>

496
00:26:17,340 --> 00:26:22,770
keep the mosques<font color="#E5E5E5"> okay because</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

497
00:26:21,150 --> 00:26:32,310
<font color="#CCCCCC">what we need because</font><font color="#E5E5E5"> it can also become</font>

498
00:26:22,770 --> 00:26:34,090
insecure because<font color="#E5E5E5"> okay thank you okay</font>

499
00:26:32,310 --> 00:26:39,290
let's swing<font color="#CCCCCC"> for</font><font color="#E5E5E5"> speak here again</font>

500
00:26:34,090 --> 00:26:39,290
[Applause]

