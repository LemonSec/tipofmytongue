1
00:00:00,080 --> 00:00:02,320
i am still pierre carrell and i will

2
00:00:02,320 --> 00:00:04,160
talk to you about message

3
00:00:04,160 --> 00:00:06,399
recovery fault like the injection attack

4
00:00:06,399 --> 00:00:07,919
on the macules crypto system it's a

5
00:00:07,919 --> 00:00:09,920
joint work i've done with

6
00:00:09,920 --> 00:00:12,160
columbia vlad dragoy alexander and

7
00:00:12,160 --> 00:00:14,240
lillian

8
00:00:14,240 --> 00:00:15,519
so the goal of our work is to

9
00:00:15,519 --> 00:00:17,359
criticalize one of the four finalists of

10
00:00:17,359 --> 00:00:19,920
front three of the nist competition and

11
00:00:19,920 --> 00:00:22,560
the candidate's name is classic machilis

12
00:00:22,560 --> 00:00:24,560
and to do this crypto analysis we will

13
00:00:24,560 --> 00:00:26,400
use two tools

14
00:00:26,400 --> 00:00:28,080
first of all we will do laser fault

15
00:00:28,080 --> 00:00:30,400
injection and then we will do

16
00:00:30,400 --> 00:00:32,079
we will use integral linear programming

17
00:00:32,079 --> 00:00:34,800
to recover the message

18
00:00:34,800 --> 00:00:36,480
so classic maculis is based on the knee

19
00:00:36,480 --> 00:00:38,879
director crypto system and we will only

20
00:00:38,879 --> 00:00:40,960
focus on the encryption part

21
00:00:40,960 --> 00:00:41,680
so

22
00:00:41,680 --> 00:00:43,440
the empty encryption pack works as

23
00:00:43,440 --> 00:00:45,200
follows you have the message the public

24
00:00:45,200 --> 00:00:47,920
key h pub which is a binary matrix of

25
00:00:47,920 --> 00:00:50,160
size n minus k times 10

26
00:00:50,160 --> 00:00:52,800
and the encryption process has two steps

27
00:00:52,800 --> 00:00:54,559
first of all you encode the message gem

28
00:00:54,559 --> 00:00:57,520
into an error vector e of length n and

29
00:00:57,520 --> 00:00:59,920
weight t and then you just have to sum

30
00:00:59,920 --> 00:01:00,719
up

31
00:01:00,719 --> 00:01:02,800
several columns of h

32
00:01:02,800 --> 00:01:05,438
when i say sum it's a xor of t columns

33
00:01:05,438 --> 00:01:07,920
of the matrix public h to obtain the

34
00:01:07,920 --> 00:01:10,400
ciphertext s

35
00:01:10,400 --> 00:01:12,400
so the security of this problem is based

36
00:01:12,400 --> 00:01:14,640
on the syndrome decoding problem

37
00:01:14,640 --> 00:01:15,759
so

38
00:01:15,759 --> 00:01:18,080
the problem which is used in practice is

39
00:01:18,080 --> 00:01:19,840
a binary syndrome recording problem you

40
00:01:19,840 --> 00:01:21,920
have a binary matrix h

41
00:01:21,920 --> 00:01:24,240
which coefficients on f2 of size n minus

42
00:01:24,240 --> 00:01:26,720
k times n you have a vector s

43
00:01:26,720 --> 00:01:30,320
of n minus k coordinates an

44
00:01:30,320 --> 00:01:32,079
integral t which is the weight of the

45
00:01:32,079 --> 00:01:33,360
arrow

46
00:01:33,360 --> 00:01:36,079
and the problem is to find the vector x

47
00:01:36,079 --> 00:01:38,640
of weight i mean weight t such that the

48
00:01:38,640 --> 00:01:41,360
product h times x is equal to s so this

49
00:01:41,360 --> 00:01:43,119
is an npr problem so it's not the

50
00:01:43,119 --> 00:01:44,880
problem we will try to attack we will

51
00:01:44,880 --> 00:01:46,240
try to attack something slightly

52
00:01:46,240 --> 00:01:47,439
different

53
00:01:47,439 --> 00:01:49,280
we will try to attack a problem where

54
00:01:49,280 --> 00:01:51,439
you have the entries in n so you have

55
00:01:51,439 --> 00:01:53,040
integer entries

56
00:01:53,040 --> 00:01:55,439
and we will

57
00:01:55,439 --> 00:01:58,880
search for a vector x of weight t such

58
00:01:58,880 --> 00:02:01,439
that h times x is equal to s but all the

59
00:02:01,439 --> 00:02:04,240
values are in n now

60
00:02:04,240 --> 00:02:06,719
so how can we go to one problem to

61
00:02:06,719 --> 00:02:09,360
another the idea is to use laser fault

62
00:02:09,360 --> 00:02:10,878
injection

63
00:02:10,878 --> 00:02:12,720
so laser fault injections they were

64
00:02:12,720 --> 00:02:15,920
proposed in 2002 by kobetov and the

65
00:02:15,920 --> 00:02:18,319
principle is to shine an infrared laser

66
00:02:18,319 --> 00:02:19,920
on the back side of an integrated

67
00:02:19,920 --> 00:02:21,920
circuit so you have the circuits you

68
00:02:21,920 --> 00:02:24,400
have the laser and you will act on the

69
00:02:24,400 --> 00:02:28,319
circuit with inferior infrared lasers

70
00:02:28,319 --> 00:02:31,920
so how does it work so what we can do it

71
00:02:31,920 --> 00:02:34,239
we can correct instructions so you have

72
00:02:34,239 --> 00:02:36,080
the operation code of the infections

73
00:02:36,080 --> 00:02:38,480
which are encoded in binary

74
00:02:38,480 --> 00:02:40,800
and when we

75
00:02:40,800 --> 00:02:41,599
the

76
00:02:41,599 --> 00:02:44,000
information move from the flash memory

77
00:02:44,000 --> 00:02:47,040
to the computers to the processor

78
00:02:47,040 --> 00:02:50,640
we can flip a bit we can do a bit set so

79
00:02:50,640 --> 00:02:52,080
if you have a look at the xor

80
00:02:52,080 --> 00:02:54,000
instruction which is here you have a

81
00:02:54,000 --> 00:02:56,319
list of one and zeros and the laser can

82
00:02:56,319 --> 00:02:58,959
flip a bit to modify this one to become

83
00:02:58,959 --> 00:03:01,360
zero uh you can modify the zero to

84
00:03:01,360 --> 00:03:03,360
become a one that's what we can do we

85
00:03:03,360 --> 00:03:05,840
can do a bit set using our laser

86
00:03:05,840 --> 00:03:08,640
so if we do so the xor become

87
00:03:08,640 --> 00:03:11,120
an addition and we can turn addition

88
00:03:11,120 --> 00:03:12,879
which line to f2 in the classic scheme

89
00:03:12,879 --> 00:03:15,760
into addition in cover n

90
00:03:15,760 --> 00:03:18,319
that's the first main idea so we have

91
00:03:18,319 --> 00:03:20,800
done several incremental results

92
00:03:20,800 --> 00:03:22,480
and because we

93
00:03:22,480 --> 00:03:24,959
noticed that we don't need all the

94
00:03:24,959 --> 00:03:26,959
coordinates of the faulty syndrome to be

95
00:03:26,959 --> 00:03:28,799
in n but only a fraction of this

96
00:03:28,799 --> 00:03:31,120
coordinates are needed in order to solve

97
00:03:31,120 --> 00:03:33,519
the problem for instance for the permit

98
00:03:33,519 --> 00:03:34,959
for the parameters used in classic

99
00:03:34,959 --> 00:03:38,159
magnets we only need around 40 percent

100
00:03:38,159 --> 00:03:40,159
of the solid syndrome entries it's

101
00:03:40,159 --> 00:03:42,720
enough to solve the problem

102
00:03:42,720 --> 00:03:44,959
so we realize this

103
00:03:44,959 --> 00:03:47,840
solution and we did it on a desktop

104
00:03:47,840 --> 00:03:49,120
computer

105
00:03:49,120 --> 00:03:52,080
for the classic mcleans with 128 bit

106
00:03:52,080 --> 00:03:54,560
security we needed less than one second

107
00:03:54,560 --> 00:03:57,040
to recover the original message and for

108
00:03:57,040 --> 00:03:59,280
higher security levels we need less than

109
00:03:59,280 --> 00:04:01,840
three seconds

110
00:04:01,920 --> 00:04:03,680
thank you very much for your attention i

111
00:04:03,680 --> 00:04:05,350
think i am just five minutes

112
00:04:05,350 --> 00:04:08,970
[Applause]

113
00:04:09,920 --> 00:04:11,680
thanks for the call

114
00:04:11,680 --> 00:04:14,920
any questions

115
00:04:18,959 --> 00:04:21,040
so for the laser fault injection the

116
00:04:21,040 --> 00:04:23,280
basic control measure there are hardware

117
00:04:23,280 --> 00:04:25,440
control measures in which you cannot

118
00:04:25,440 --> 00:04:27,840
have access directly to the components

119
00:04:27,840 --> 00:04:28,880
you see

120
00:04:28,880 --> 00:04:30,639
the laser is acting directly on the

121
00:04:30,639 --> 00:04:33,440
integrated circuit because we have

122
00:04:33,440 --> 00:04:37,680
directly access to this part you can do

123
00:04:37,680 --> 00:04:40,479
devices so that you cannot

124
00:04:40,479 --> 00:04:42,720
unsecure this part of the components

125
00:04:42,720 --> 00:04:44,560
just add some

126
00:04:44,560 --> 00:04:47,759
devices some hardware stuff

127
00:04:47,759 --> 00:04:49,600
that's a basic control measure use

128
00:04:49,600 --> 00:04:53,040
against fault injection attacks

129
00:04:53,600 --> 00:04:57,800
we have time for another question

130
00:04:59,759 --> 00:05:00,880
then let's

131
00:05:00,880 --> 00:05:02,280
thank the speaker again

132
00:05:02,280 --> 00:05:02,850
[Applause]

133
00:05:02,850 --> 00:05:05,949
[Music]

134
00:05:09,120 --> 00:05:12,479
okay the next talk is multi-source no

135
00:05:12,479 --> 00:05:15,039
malleable extractors and application

136
00:05:15,039 --> 00:05:18,160
the talk is going to be given online by

137
00:05:18,160 --> 00:05:20,240
shenzi zhu shenzi

138
00:05:20,240 --> 00:05:22,639
can you hear us

139
00:05:22,639 --> 00:05:26,320
are you there yeah no yeah

140
00:05:26,320 --> 00:05:29,199
well i guess

141
00:05:29,199 --> 00:05:32,639
i share screams now

142
00:05:35,840 --> 00:05:37,919
can you show us can you share your

143
00:05:37,919 --> 00:05:40,240
screen

144
00:05:46,320 --> 00:05:48,639
i mean

145
00:05:49,680 --> 00:05:53,280
you can see my screen i cannot do it

146
00:05:53,280 --> 00:05:54,800
what is it

147
00:05:54,800 --> 00:05:56,720
yes we can

148
00:05:56,720 --> 00:05:58,960
okay

149
00:06:02,479 --> 00:06:04,639
okay so uh yeah hello everyone i am

150
00:06:04,639 --> 00:06:07,039
shinji today we introduced our work on

151
00:06:07,039 --> 00:06:08,560
the money source now malibu structures

152
00:06:08,560 --> 00:06:10,639
and his application so this is a drawing

153
00:06:10,639 --> 00:06:12,560
work with bergoyo and archaeans many

154
00:06:12,560 --> 00:06:14,800
mustang

155
00:06:14,800 --> 00:06:16,560
yeah so i will start by introducing what

156
00:06:16,560 --> 00:06:19,360
is a two source non-manageable extractor

157
00:06:19,360 --> 00:06:21,360
uh this notion is introduced by cherry

158
00:06:21,360 --> 00:06:24,160
gotcha and guru swami in 2014.

159
00:06:24,160 --> 00:06:25,440
um so

160
00:06:25,440 --> 00:06:27,039
in this setting we start with two

161
00:06:27,039 --> 00:06:29,360
independent weak random sources

162
00:06:29,360 --> 00:06:31,120
so here the week means that the source

163
00:06:31,120 --> 00:06:33,360
are not uniformly random and we want to

164
00:06:33,360 --> 00:06:36,240
use the extractor to extract mb strings

165
00:06:36,240 --> 00:06:38,560
that are close to uniform

166
00:06:38,560 --> 00:06:41,199
and in the setting of non-metability

167
00:06:41,199 --> 00:06:42,800
we assume that each source can be

168
00:06:42,800 --> 00:06:44,560
tampered independently by arbitrary

169
00:06:44,560 --> 00:06:47,199
functions and the security requires that

170
00:06:47,199 --> 00:06:49,440
the temporal output is either the same

171
00:06:49,440 --> 00:06:51,280
as the original output or it is

172
00:06:51,280 --> 00:06:53,440
independent which means the value is

173
00:06:53,440 --> 00:06:55,680
destroyed

174
00:06:55,680 --> 00:06:57,599
and the randomness of a source x is

175
00:06:57,599 --> 00:06:59,759
measured by its main entropy

176
00:06:59,759 --> 00:07:01,599
so if the mean energy of a source is

177
00:07:01,599 --> 00:07:02,800
greater than

178
00:07:02,800 --> 00:07:05,039
k it means that for any x the

179
00:07:05,039 --> 00:07:07,520
probability that this source is equal to

180
00:07:07,520 --> 00:07:10,000
that x is less than 2 to the minus k and

181
00:07:10,000 --> 00:07:12,479
in this setting we assume that both x 1

182
00:07:12,479 --> 00:07:14,960
and x 2 are nbc sources which may n

183
00:07:14,960 --> 00:07:17,680
entropy k we also call this such sources

184
00:07:17,680 --> 00:07:20,000
as the nk surface

185
00:07:20,000 --> 00:07:22,639
and formally the nominability is defined

186
00:07:22,639 --> 00:07:25,039
as the joint distribution of the

187
00:07:25,039 --> 00:07:27,520
original output and the temporal output

188
00:07:27,520 --> 00:07:29,120
is absolutely close to joint

189
00:07:29,120 --> 00:07:30,960
distribution of a two ampere string

190
00:07:30,960 --> 00:07:32,240
where the first empty string is

191
00:07:32,240 --> 00:07:34,000
uniformly random and the second hand

192
00:07:34,000 --> 00:07:35,759
this string is either the same as the

193
00:07:35,759 --> 00:07:39,199
first order is independent

194
00:07:39,199 --> 00:07:41,199
and here the epsilon is called the arrow

195
00:07:41,199 --> 00:07:42,720
of the scheme

196
00:07:42,720 --> 00:07:45,360
so in this book we introduce a new

197
00:07:45,360 --> 00:07:46,479
notion called the multi-source

198
00:07:46,479 --> 00:07:48,319
non-validable structures

199
00:07:48,319 --> 00:07:50,400
which is a generalization of the two

200
00:07:50,400 --> 00:07:53,199
source one so instead of the two source

201
00:07:53,199 --> 00:07:57,039
now we have s independent nk sources

202
00:07:57,039 --> 00:07:58,879
and the nominability

203
00:07:58,879 --> 00:08:00,639
can be naturally extended to the

204
00:08:00,639 --> 00:08:02,240
following so

205
00:08:02,240 --> 00:08:04,240
we consider that each source is also

206
00:08:04,240 --> 00:08:05,919
tampered independently by arbitrary

207
00:08:05,919 --> 00:08:08,400
functions and we can define the security

208
00:08:08,400 --> 00:08:10,639
in a similar way

209
00:08:10,639 --> 00:08:13,360
but however uh this definition is

210
00:08:13,360 --> 00:08:15,280
actually weaker than the two source one

211
00:08:15,280 --> 00:08:17,199
because you can build such a saying by

212
00:08:17,199 --> 00:08:19,440
simply applying the two source summative

213
00:08:19,440 --> 00:08:22,319
extractors to x1 and x2 and ignoring the

214
00:08:22,319 --> 00:08:24,479
rest of the source and however there's

215
00:08:24,479 --> 00:08:26,639
no prior results that consider the

216
00:08:26,639 --> 00:08:27,919
number

217
00:08:27,919 --> 00:08:30,080
extractors beyond the independent

218
00:08:30,080 --> 00:08:31,199
template

219
00:08:31,199 --> 00:08:33,200
so in this work we ask the following

220
00:08:33,200 --> 00:08:34,559
questions

221
00:08:34,559 --> 00:08:36,320
so can we attack against the tempering

222
00:08:36,320 --> 00:08:38,839
functions at temporary multiple sources

223
00:08:38,839 --> 00:08:41,279
together and what is the main entropy is

224
00:08:41,279 --> 00:08:43,200
required for each source and what is the

225
00:08:43,200 --> 00:08:45,279
arrow

226
00:08:45,279 --> 00:08:47,040
so the most general model one could

227
00:08:47,040 --> 00:08:50,160
consider here is the overlapping joint

228
00:08:50,160 --> 00:08:52,480
which means that for each eye its temper

229
00:08:52,480 --> 00:08:54,640
function can depends on a set of input

230
00:08:54,640 --> 00:08:57,120
sources ti and this ti can be different

231
00:08:57,120 --> 00:08:59,360
for each source and

232
00:08:59,360 --> 00:09:01,440
it can be arbitrarily chosen we

233
00:09:01,440 --> 00:09:03,040
mentioned that this model is also

234
00:09:03,040 --> 00:09:05,200
previously proposed by gaio and kuma in

235
00:09:05,200 --> 00:09:07,920
2018 but they are working the contact of

236
00:09:07,920 --> 00:09:10,560
non-malibu super sharing

237
00:09:10,560 --> 00:09:12,640
and however we find it's hard to protect

238
00:09:12,640 --> 00:09:14,640
against this general overlapping joint

239
00:09:14,640 --> 00:09:17,200
campaign so instead in this work we

240
00:09:17,200 --> 00:09:19,040
considered what we call the cover free

241
00:09:19,040 --> 00:09:20,320
camp

242
00:09:20,320 --> 00:09:22,240
which is a drawing uh overlapping

243
00:09:22,240 --> 00:09:23,440
drawing tempering but with some

244
00:09:23,440 --> 00:09:25,120
constraints

245
00:09:25,120 --> 00:09:27,519
so given um

246
00:09:27,519 --> 00:09:29,839
overlapping drawing tampering the set is

247
00:09:29,839 --> 00:09:32,720
i cover free if there exists an xj so

248
00:09:32,720 --> 00:09:35,360
that no tempering sets tk containing

249
00:09:35,360 --> 00:09:38,080
both x i and xj

250
00:09:38,080 --> 00:09:40,480
for example here you can see for i equal

251
00:09:40,480 --> 00:09:44,399
to one the x1 and x4 does not contain

252
00:09:44,399 --> 00:09:46,880
in any templates at tk

253
00:09:46,880 --> 00:09:49,040
and we say it is cover free tampering if

254
00:09:49,040 --> 00:09:52,640
it is eye cover free for each eye

255
00:09:52,640 --> 00:09:54,320
we'll see that this sampling model

256
00:09:54,320 --> 00:09:56,160
actually includes a rich class of

257
00:09:56,160 --> 00:09:59,120
tempering functions so for example

258
00:09:59,120 --> 00:10:01,680
this cover frequent contains independent

259
00:10:01,680 --> 00:10:02,880
tempering

260
00:10:02,880 --> 00:10:04,880
it can also contains the destroying

261
00:10:04,880 --> 00:10:06,160
tampering

262
00:10:06,160 --> 00:10:07,600
which means that

263
00:10:07,600 --> 00:10:09,519
in destroying temperings it means that

264
00:10:09,519 --> 00:10:12,160
the input source sources can be divided

265
00:10:12,160 --> 00:10:14,720
into at least two destroying sets and

266
00:10:14,720 --> 00:10:16,480
the source in each side are tempered

267
00:10:16,480 --> 00:10:18,240
together

268
00:10:18,240 --> 00:10:20,160
so for example this was cover free

269
00:10:20,160 --> 00:10:22,560
tempering of the course for each xi you

270
00:10:22,560 --> 00:10:24,959
can find another xj and another template

271
00:10:24,959 --> 00:10:27,440
set and then because they're destroying

272
00:10:27,440 --> 00:10:28,399
you can

273
00:10:28,399 --> 00:10:31,120
they are not containing any uh drawings

274
00:10:31,120 --> 00:10:32,560
that's

275
00:10:32,560 --> 00:10:34,640
dampening set together

276
00:10:34,640 --> 00:10:36,959
and moreover this cover free temporary

277
00:10:36,959 --> 00:10:38,560
is strictly richer than a destroying

278
00:10:38,560 --> 00:10:41,200
tempering as it contains some like fancy

279
00:10:41,200 --> 00:10:43,600
tempering functions as the following for

280
00:10:43,600 --> 00:10:46,000
example we call the cover a circles of

281
00:10:46,000 --> 00:10:48,240
size two for

282
00:10:48,240 --> 00:10:51,120
at least four independent sources

283
00:10:51,120 --> 00:10:54,000
so um and so the tempering is like the

284
00:10:54,000 --> 00:10:56,560
following so each uh xi

285
00:10:56,560 --> 00:10:59,040
uh the tempering of high side depends on

286
00:10:59,040 --> 00:11:01,760
both x i and x i plus 1. you can see

287
00:11:01,760 --> 00:11:04,240
this tempering function not destroying

288
00:11:04,240 --> 00:11:06,160
tempering because you cannot divide the

289
00:11:06,160 --> 00:11:08,320
source into two destroying sets

290
00:11:08,320 --> 00:11:10,480
but however this cover free because for

291
00:11:10,480 --> 00:11:14,720
each xi both x i and x x plus two are

292
00:11:14,720 --> 00:11:16,560
not containing any tempering set

293
00:11:16,560 --> 00:11:18,560
together

294
00:11:18,560 --> 00:11:21,519
now briefly summarize our contributions

295
00:11:21,519 --> 00:11:23,680
so first we introduce the notion of the

296
00:11:23,680 --> 00:11:25,200
non-malleable osmotic source

297
00:11:25,200 --> 00:11:26,880
non-manageable structure

298
00:11:26,880 --> 00:11:28,079
and then we give an efficient

299
00:11:28,079 --> 00:11:29,680
construction of these s-source

300
00:11:29,680 --> 00:11:31,279
non-metabolic structures against the

301
00:11:31,279 --> 00:11:34,240
cover-free champion

302
00:11:34,320 --> 00:11:36,079
with the main attribute requirement

303
00:11:36,079 --> 00:11:38,800
that's linear in n and with negligible

304
00:11:38,800 --> 00:11:41,360
arrow and polynomial operands

305
00:11:41,360 --> 00:11:43,360
we also showed that our

306
00:11:43,360 --> 00:11:45,200
our construction satisfied property

307
00:11:45,200 --> 00:11:46,560
called the efficiently pre-immediate

308
00:11:46,560 --> 00:11:49,600
sample book which means at given any

309
00:11:49,600 --> 00:11:52,079
output one can efficiently do a sampling

310
00:11:52,079 --> 00:11:54,160
over its free image using those

311
00:11:54,160 --> 00:11:55,839
techniques we also show that we can

312
00:11:55,839 --> 00:11:58,320
resolve some open problems and areas of

313
00:11:58,320 --> 00:12:00,079
non-valuable sharings and network

314
00:12:00,079 --> 00:12:01,920
distractions

315
00:12:01,920 --> 00:12:03,279
here

316
00:12:03,279 --> 00:12:04,959
that's the end of my talk thank you for

317
00:12:04,959 --> 00:12:08,199
your attention

318
00:12:15,920 --> 00:12:18,920
questions

319
00:12:27,279 --> 00:12:29,200
no well

320
00:12:29,200 --> 00:12:31,440
yeah i think we can go with the next

321
00:12:31,440 --> 00:12:32,959
talk

322
00:12:32,959 --> 00:12:35,760
thanks let's thanks again

323
00:12:35,760 --> 00:12:37,130
the speaker

324
00:12:37,130 --> 00:12:40,309
[Applause]

325
00:12:54,959 --> 00:12:56,720
so

326
00:12:56,720 --> 00:12:58,480
the next talks is black box

327
00:12:58,480 --> 00:13:01,040
non-interactive no malleable commitment

328
00:13:01,040 --> 00:13:05,079
rashid is going to give the talk

329
00:13:21,440 --> 00:13:24,480
hi can you see the slides

330
00:13:24,480 --> 00:13:26,480
yes we can

331
00:13:26,480 --> 00:13:27,360
okay

332
00:13:27,360 --> 00:13:30,639
hi everyone i'm rachet and i'm excited

333
00:13:30,639 --> 00:13:32,399
to discuss with you about our work black

334
00:13:32,399 --> 00:13:34,000
box non-attractive non-malleable

335
00:13:34,000 --> 00:13:35,920
commitments this is joint work with

336
00:13:35,920 --> 00:13:38,160
dakshita khurana george liu and brent

337
00:13:38,160 --> 00:13:39,519
waters

338
00:13:39,519 --> 00:13:41,360
let's begin with our result

339
00:13:41,360 --> 00:13:42,959
we construct non-interactive

340
00:13:42,959 --> 00:13:44,880
non-malleable commitments water

341
00:13:44,880 --> 00:13:47,199
commitments commitments are a two-phase

342
00:13:47,199 --> 00:13:49,199
protocol where there's a commit phase

343
00:13:49,199 --> 00:13:51,360
and then there's an opening phase in the

344
00:13:51,360 --> 00:13:54,000
commit phase alice let's say

345
00:13:54,000 --> 00:13:56,560
um commits a message m to bob

346
00:13:56,560 --> 00:13:58,399
and in the opening phase

347
00:13:58,399 --> 00:14:00,000
alice opens the message that she

348
00:14:00,000 --> 00:14:02,320
initially committed to to verb

349
00:14:02,320 --> 00:14:04,079
and what i mean by non-interactivity

350
00:14:04,079 --> 00:14:06,560
here is that both these phases happen as

351
00:14:06,560 --> 00:14:08,639
single message protocol so there's no

352
00:14:08,639 --> 00:14:10,720
common random string there's no setup

353
00:14:10,720 --> 00:14:12,079
and these are just single message

354
00:14:12,079 --> 00:14:15,040
interaction from alice to bob

355
00:14:15,040 --> 00:14:17,199
and uh additionally we construct

356
00:14:17,199 --> 00:14:19,120
non-malleable commitments so what what

357
00:14:19,120 --> 00:14:21,040
is the notion of non-malibity

358
00:14:21,040 --> 00:14:22,720
uh non-valiability means that a new

359
00:14:22,720 --> 00:14:24,639
party let's say mallory if it enters the

360
00:14:24,639 --> 00:14:26,880
system and if it tries to tamper the

361
00:14:26,880 --> 00:14:28,639
system or

362
00:14:28,639 --> 00:14:30,480
look at the interaction and change the

363
00:14:30,480 --> 00:14:32,079
interaction in any way

364
00:14:32,079 --> 00:14:33,680
she should still not be able to learn

365
00:14:33,680 --> 00:14:35,199
any relevant information about the

366
00:14:35,199 --> 00:14:36,880
system

367
00:14:36,880 --> 00:14:39,120
so how are these built in practice in

368
00:14:39,120 --> 00:14:41,519
the non-interactive setting we first

369
00:14:41,519 --> 00:14:43,120
built them for a very small number of

370
00:14:43,120 --> 00:14:45,360
tags by tags i mean very small number of

371
00:14:45,360 --> 00:14:47,360
parties let's say log log lambda many

372
00:14:47,360 --> 00:14:49,519
parties and this is not really relevant

373
00:14:49,519 --> 00:14:51,920
in practice because it's a very small uh

374
00:14:51,920 --> 00:14:52,720
set

375
00:14:52,720 --> 00:14:55,839
and then uh after we've built such a set

376
00:14:55,839 --> 00:14:58,160
for for these number of parties we

377
00:14:58,160 --> 00:15:00,000
amplify it to

378
00:15:00,000 --> 00:15:01,760
let's say constant number of parties or

379
00:15:01,760 --> 00:15:03,440
exponentially many parties so there's a

380
00:15:03,440 --> 00:15:05,279
tag amplification procedure that happens

381
00:15:05,279 --> 00:15:07,199
in literature

382
00:15:07,199 --> 00:15:10,160
and the way we do it is we require the

383
00:15:10,160 --> 00:15:12,639
new use of niveas to do this navy is a

384
00:15:12,639 --> 00:15:14,880
non-interactive witnessing in

385
00:15:14,880 --> 00:15:16,720
indistinguishability proofs

386
00:15:16,720 --> 00:15:18,959
and using navies makes

387
00:15:18,959 --> 00:15:20,800
means we make non-black box use of the

388
00:15:20,800 --> 00:15:22,880
underlying cryptography

389
00:15:22,880 --> 00:15:24,800
so our result we remove the use of

390
00:15:24,800 --> 00:15:27,199
navies simplify some assumptions and

391
00:15:27,199 --> 00:15:30,800
make black box use of cryptography

392
00:15:30,800 --> 00:15:32,240
there's an additional caveat in our

393
00:15:32,240 --> 00:15:34,240
construction where we go from

394
00:15:34,240 --> 00:15:36,639
non-uniform secure loglog lambda mini

395
00:15:36,639 --> 00:15:39,040
parties to uniformly secure

396
00:15:39,040 --> 00:15:40,959
exponentially many parties and i'll talk

397
00:15:40,959 --> 00:15:43,199
about this caveat and some techniques

398
00:15:43,199 --> 00:15:46,160
towards the end of the talk

399
00:15:46,639 --> 00:15:48,800
so let's look at some prior work

400
00:15:48,800 --> 00:15:51,040
we started in 1991 with a logarithmic

401
00:15:51,040 --> 00:15:53,519
round construction from one way function

402
00:15:53,519 --> 00:15:55,680
and since then there has been constant

403
00:15:55,680 --> 00:15:57,279
research in the field to improve this

404
00:15:57,279 --> 00:15:59,360
round complexity and simplify the

405
00:15:59,360 --> 00:16:01,199
assumptions that we get non-valuable

406
00:16:01,199 --> 00:16:03,040
commitments from so there are three

407
00:16:03,040 --> 00:16:05,759
round protocols two round protocols and

408
00:16:05,759 --> 00:16:07,680
in the end uh we have interactive

409
00:16:07,680 --> 00:16:09,440
protocols not sorry non-interactive

410
00:16:09,440 --> 00:16:11,440
protocols from different assumptions

411
00:16:11,440 --> 00:16:13,759
and the focus of the our work is only on

412
00:16:13,759 --> 00:16:16,959
this non-interactive setting

413
00:16:17,680 --> 00:16:19,600
so let's look at this tag amplification

414
00:16:19,600 --> 00:16:22,800
procedure which i was talking about so

415
00:16:22,800 --> 00:16:24,639
the way we do tag amplification is let's

416
00:16:24,639 --> 00:16:26,240
say we are at log log lambda many

417
00:16:26,240 --> 00:16:28,800
parties we go to log lambda many parties

418
00:16:28,800 --> 00:16:30,480
then lambda many parties and 2 to the

419
00:16:30,480 --> 00:16:32,720
power lambda many parties so we define

420
00:16:32,720 --> 00:16:35,120
an exponential amplification algorithm

421
00:16:35,120 --> 00:16:37,519
and then we do it recursively a few

422
00:16:37,519 --> 00:16:40,160
times a constant number of times

423
00:16:40,160 --> 00:16:41,440
and all the prior works and

424
00:16:41,440 --> 00:16:43,519
non-interaction non-member commitments

425
00:16:43,519 --> 00:16:45,839
uh but use sub-exponential navies to

426
00:16:45,839 --> 00:16:47,680
construct this

427
00:16:47,680 --> 00:16:49,839
and you only know news from let's say

428
00:16:49,839 --> 00:16:52,560
bilinear maps or data randomization

429
00:16:52,560 --> 00:16:53,680
assumption and some trapdoor

430
00:16:53,680 --> 00:16:55,120
permutations

431
00:16:55,120 --> 00:16:57,839
so the goal of cryptography is to

432
00:16:57,839 --> 00:17:00,880
get more simplified assumptions and

433
00:17:00,880 --> 00:17:02,720
increase the realm of assumptions that

434
00:17:02,720 --> 00:17:04,880
we know this tag amplification procedure

435
00:17:04,880 --> 00:17:07,520
from and that is precisely what we do

436
00:17:07,520 --> 00:17:10,000
so what are the ingredients that we use

437
00:17:10,000 --> 00:17:12,079
since we remove navies we use something

438
00:17:12,079 --> 00:17:14,160
called as hinting prgs which were

439
00:17:14,160 --> 00:17:17,359
introduced by copalin waters in 2019

440
00:17:17,359 --> 00:17:19,919
hinting prgs are special kind of prgs so

441
00:17:19,919 --> 00:17:22,400
prgs are length expanding functions

442
00:17:22,400 --> 00:17:24,160
where the goal is the

443
00:17:24,160 --> 00:17:25,520
to to

444
00:17:25,520 --> 00:17:27,439
output a 11 expanding function such that

445
00:17:27,439 --> 00:17:28,720
the output is computationally

446
00:17:28,720 --> 00:17:30,640
indistinguishable from random

447
00:17:30,640 --> 00:17:33,440
but in in hinting prgs you give certain

448
00:17:33,440 --> 00:17:35,280
additional hints about the seed and you

449
00:17:35,280 --> 00:17:38,240
can still argue um this computational

450
00:17:38,240 --> 00:17:39,679
distinguishability

451
00:17:39,679 --> 00:17:41,440
the important part is that we can show

452
00:17:41,440 --> 00:17:43,360
how to build hinting prgs from

453
00:17:43,360 --> 00:17:45,280
computational diffie-hellman or learning

454
00:17:45,280 --> 00:17:46,720
with errors

455
00:17:46,720 --> 00:17:49,280
and the second component of our

456
00:17:49,280 --> 00:17:50,880
tag amplification procedure is going to

457
00:17:50,880 --> 00:17:52,400
be keyless collision resistant hash

458
00:17:52,400 --> 00:17:53,360
functions

459
00:17:53,360 --> 00:17:54,799
so keyless corrosion resistant hash

460
00:17:54,799 --> 00:17:56,880
function require no setup

461
00:17:56,880 --> 00:17:58,400
and they satisfy the collision

462
00:17:58,400 --> 00:18:00,880
resistance property which means that if

463
00:18:00,880 --> 00:18:02,559
given two values it's hard to find a

464
00:18:02,559 --> 00:18:04,000
collision

465
00:18:04,000 --> 00:18:06,400
and a common example for such a hash

466
00:18:06,400 --> 00:18:09,840
function could be shar256

467
00:18:10,400 --> 00:18:11,520
so again

468
00:18:11,520 --> 00:18:12,720
we construct non-interactive

469
00:18:12,720 --> 00:18:14,480
non-malleable commitments

470
00:18:14,480 --> 00:18:16,400
but let's talk about the caveat in our

471
00:18:16,400 --> 00:18:18,480
construction so as i explained we go

472
00:18:18,480 --> 00:18:20,240
from log log lambda to 2 to the power

473
00:18:20,240 --> 00:18:22,160
lambda and we apply our amplification

474
00:18:22,160 --> 00:18:23,919
procedure many times

475
00:18:23,919 --> 00:18:26,000
but note that if you go from non-uniform

476
00:18:26,000 --> 00:18:28,320
security to uniform security you cannot

477
00:18:28,320 --> 00:18:31,039
really do this

478
00:18:31,039 --> 00:18:32,559
even two times like after the first

479
00:18:32,559 --> 00:18:34,480
transformation you get a uniformly

480
00:18:34,480 --> 00:18:36,720
secured log lambda scheme so you cannot

481
00:18:36,720 --> 00:18:39,039
really do this generically

482
00:18:39,039 --> 00:18:41,039
so in our paper we actually introduced a

483
00:18:41,039 --> 00:18:44,400
new notion which we described as more

484
00:18:44,400 --> 00:18:46,080
it's more that is stronger than uniform

485
00:18:46,080 --> 00:18:47,760
security but weaker than non-uniform

486
00:18:47,760 --> 00:18:50,880
security so let me talk about this

487
00:18:50,880 --> 00:18:53,280
what is uniform security uh

488
00:18:53,280 --> 00:18:55,200
we define a security definition between

489
00:18:55,200 --> 00:18:57,039
a challenger and an adversary where the

490
00:18:57,039 --> 00:18:59,120
adversary is probabilistic polynomial

491
00:18:59,120 --> 00:19:00,160
time

492
00:19:00,160 --> 00:19:02,880
and in for non-uniform security we say

493
00:19:02,880 --> 00:19:04,480
that the adversary gets some access to

494
00:19:04,480 --> 00:19:07,280
some advice stream

495
00:19:07,280 --> 00:19:09,360
so we define a notion of

496
00:19:09,360 --> 00:19:11,840
where we instead of the advice string we

497
00:19:11,840 --> 00:19:13,520
give the adversary access to some

498
00:19:13,520 --> 00:19:14,640
program

499
00:19:14,640 --> 00:19:16,720
and using this program

500
00:19:16,720 --> 00:19:18,640
it can ask the challenger to run it in

501
00:19:18,640 --> 00:19:20,640
some 2 to the power lambda to the power

502
00:19:20,640 --> 00:19:22,799
e time where you can imagine that e is

503
00:19:22,799 --> 00:19:25,120
greater than one so

504
00:19:25,120 --> 00:19:26,640
the adversary is getting exponential

505
00:19:26,640 --> 00:19:28,400
time to run this program

506
00:19:28,400 --> 00:19:30,080
and the output is returned to the

507
00:19:30,080 --> 00:19:32,960
adversary and the goal of this

508
00:19:32,960 --> 00:19:35,440
experiment is to still argue that ppt

509
00:19:35,440 --> 00:19:37,360
adversaries will not be able to win this

510
00:19:37,360 --> 00:19:39,120
game with more than negligible

511
00:19:39,120 --> 00:19:40,480
probability

512
00:19:40,480 --> 00:19:41,679
so this notion we call as

513
00:19:41,679 --> 00:19:45,039
e-computationally enabled

514
00:19:45,440 --> 00:19:48,240
so i want to end with some questions

515
00:19:48,240 --> 00:19:49,440
so uh

516
00:19:49,440 --> 00:19:51,360
one basic question that you can ask is

517
00:19:51,360 --> 00:19:54,080
since you get uh go from non-uniform to

518
00:19:54,080 --> 00:19:56,400
sort of uniform or like this notion of

519
00:19:56,400 --> 00:19:58,559
e-computation enable in an ideal case

520
00:19:58,559 --> 00:19:59,760
scenario you would like to go from

521
00:19:59,760 --> 00:20:01,360
non-uniform security to non-uniform

522
00:20:01,360 --> 00:20:03,280
security and we actually have a

523
00:20:03,280 --> 00:20:05,600
follow-up work which

524
00:20:05,600 --> 00:20:08,720
requires some new techniques

525
00:20:08,720 --> 00:20:10,159
the second question that i want to pose

526
00:20:10,159 --> 00:20:12,720
is um so our technique is basically if

527
00:20:12,720 --> 00:20:15,679
you're aware of the coppola waters 2019

528
00:20:15,679 --> 00:20:17,360
uh construction

529
00:20:17,360 --> 00:20:18,799
it's adapted into this commitment

530
00:20:18,799 --> 00:20:20,400
setting with some

531
00:20:20,400 --> 00:20:22,400
removing some setup and doing some

532
00:20:22,400 --> 00:20:24,799
additional generalization

533
00:20:24,799 --> 00:20:26,960
so can we even generalize it more and

534
00:20:26,960 --> 00:20:28,799
sort of use this framework of using

535
00:20:28,799 --> 00:20:32,240
hinting prgs to prove consistency or cca

536
00:20:32,240 --> 00:20:35,679
style security checks

537
00:20:35,679 --> 00:20:37,760
and the third would be

538
00:20:37,760 --> 00:20:40,159
so after the result of coppola waters in

539
00:20:40,159 --> 00:20:42,640
2019 they were able to remove hinting

540
00:20:42,640 --> 00:20:44,559
prgs and get it from something simpler

541
00:20:44,559 --> 00:20:46,720
which was injective traveler functions

542
00:20:46,720 --> 00:20:48,559
in the context of

543
00:20:48,559 --> 00:20:51,039
public encryption so can we do something

544
00:20:51,039 --> 00:20:52,720
simpler in the context of commitments as

545
00:20:52,720 --> 00:20:54,000
well

546
00:20:54,000 --> 00:20:55,830
so thank

547
00:20:55,830 --> 00:20:59,020
[Applause]

548
00:21:00,840 --> 00:21:05,039
you are there any questions

549
00:21:07,120 --> 00:21:08,559
okay

550
00:21:08,559 --> 00:21:11,039
you have a lot of time i have a question

551
00:21:11,039 --> 00:21:12,080
so

552
00:21:12,080 --> 00:21:15,840
one of the assumptions you have is still

553
00:21:15,840 --> 00:21:17,200
keyless

554
00:21:17,200 --> 00:21:19,520
collision resistance function

555
00:21:19,520 --> 00:21:20,640
and i guess

556
00:21:20,640 --> 00:21:22,400
uh

557
00:21:22,400 --> 00:21:25,440
by assuming that that's why uh the

558
00:21:25,440 --> 00:21:27,919
adversary at the end has to be uniform

559
00:21:27,919 --> 00:21:29,200
right is that

560
00:21:29,200 --> 00:21:31,440
that that's the only reason why you need

561
00:21:31,440 --> 00:21:33,840
a uniform adversary or are there only

562
00:21:33,840 --> 00:21:35,840
other reasons that's pretty much the

563
00:21:35,840 --> 00:21:38,559
only reason and um basically in our new

564
00:21:38,559 --> 00:21:41,200
work so there is this this notion of

565
00:21:41,200 --> 00:21:43,520
non-uniform secure keyless collagenous

566
00:21:43,520 --> 00:21:44,799
and hash function

567
00:21:44,799 --> 00:21:46,000
where so

568
00:21:46,000 --> 00:21:47,760
collision resistant hash function are by

569
00:21:47,760 --> 00:21:49,760
definition like a very uniform primitive

570
00:21:49,760 --> 00:21:51,280
because you can for a non-uniform

571
00:21:51,280 --> 00:21:52,559
adversary you can have the collision

572
00:21:52,559 --> 00:21:54,000
hardwired right

573
00:21:54,000 --> 00:21:56,320
so there are this new kind of hash

574
00:21:56,320 --> 00:21:57,440
functions

575
00:21:57,440 --> 00:22:00,240
by betancy kalai and panip where would

576
00:22:00,240 --> 00:22:02,320
say that given some state uh s

577
00:22:02,320 --> 00:22:04,159
information you cannot have like s

578
00:22:04,159 --> 00:22:06,559
square many collisions so the using this

579
00:22:06,559 --> 00:22:07,840
you can sort of

580
00:22:07,840 --> 00:22:09,679
uh hope to get maybe non-uniform

581
00:22:09,679 --> 00:22:10,799
security but it's a little bit more

582
00:22:10,799 --> 00:22:12,880
trickier and we have a follow-up work

583
00:22:12,880 --> 00:22:15,039
but that's the only reason you're right

584
00:22:15,039 --> 00:22:17,440
okay thanks yeah

585
00:22:17,440 --> 00:22:20,919
thank you for the question

586
00:22:31,919 --> 00:22:33,039
okay

587
00:22:33,039 --> 00:22:35,919
let's move on with the next talk

588
00:22:35,919 --> 00:22:37,120
so

589
00:22:37,120 --> 00:22:38,880
the next stall

590
00:22:38,880 --> 00:22:42,400
will be non-interactive

591
00:22:46,480 --> 00:22:48,799
the next talks will be non-interactive

592
00:22:48,799 --> 00:22:51,120
distributional indistinguishability

593
00:22:51,120 --> 00:22:53,679
and non-malabar commitments the talk is

594
00:22:53,679 --> 00:22:56,799
going to be given online by dakshita

595
00:22:56,799 --> 00:22:59,039
are you there

596
00:22:59,039 --> 00:23:01,120
hi yes i'm here let me make sure i can

597
00:23:01,120 --> 00:23:03,840
see my screen

598
00:23:04,240 --> 00:23:06,400
okay perfect i'm going to move the

599
00:23:06,400 --> 00:23:09,400
audience

600
00:23:12,559 --> 00:23:15,200
you can start whenever you want thanks

601
00:23:15,200 --> 00:23:17,679
do you still see my slides um on the

602
00:23:17,679 --> 00:23:19,200
whole screen

603
00:23:19,200 --> 00:23:20,000
yes

604
00:23:20,000 --> 00:23:22,720
okay great thank you um okay so this

605
00:23:22,720 --> 00:23:23,760
talk is going to be about

606
00:23:23,760 --> 00:23:25,360
non-interactive distributional

607
00:23:25,360 --> 00:23:26,880
indistinguishability

608
00:23:26,880 --> 00:23:29,280
and an application of this notion to

609
00:23:29,280 --> 00:23:31,039
non-valuable components

610
00:23:31,039 --> 00:23:33,120
um this is a new notion we introduced so

611
00:23:33,120 --> 00:23:35,360
let me let me motivate the setting

612
00:23:35,360 --> 00:23:38,480
um with the following question can we

613
00:23:38,480 --> 00:23:41,120
achieve privacy preserving arguments

614
00:23:41,120 --> 00:23:43,760
can you stop for a second sorry

615
00:23:43,760 --> 00:23:46,000
so

616
00:23:48,559 --> 00:23:51,559
okay

617
00:23:52,000 --> 00:23:54,720
what about now

618
00:23:56,240 --> 00:23:58,080
thanks

619
00:23:58,080 --> 00:23:59,919
okay you can start again from the from

620
00:23:59,919 --> 00:24:01,919
the beginning okay

621
00:24:01,919 --> 00:24:04,240
thanks

622
00:24:08,400 --> 00:24:10,640
all right so uh yes so this talk is

623
00:24:10,640 --> 00:24:12,600
about non-interactive distributional

624
00:24:12,600 --> 00:24:14,480
indistinguishability and non-malleable

625
00:24:14,480 --> 00:24:15,840
commitments

626
00:24:15,840 --> 00:24:16,840
and

627
00:24:16,840 --> 00:24:19,120
um the

628
00:24:19,120 --> 00:24:21,919
the motivation for this uh problem is

629
00:24:21,919 --> 00:24:23,520
the following question

630
00:24:23,520 --> 00:24:25,760
can we achieve privacy preserving

631
00:24:25,760 --> 00:24:27,760
arguments that do not require

632
00:24:27,760 --> 00:24:29,039
interaction

633
00:24:29,039 --> 00:24:31,039
um and

634
00:24:31,039 --> 00:24:33,520
while this is known to be doable either

635
00:24:33,520 --> 00:24:35,679
in idealized models like the random

636
00:24:35,679 --> 00:24:38,799
oracle model or by assuming some form of

637
00:24:38,799 --> 00:24:40,799
trusted setup like a common reference or

638
00:24:40,799 --> 00:24:42,720
a common random string

639
00:24:42,720 --> 00:24:44,799
the goal of this work is to understand

640
00:24:44,799 --> 00:24:47,120
whether we can achieve new types of

641
00:24:47,120 --> 00:24:49,120
privacy preserving arguments in the

642
00:24:49,120 --> 00:24:51,440
plain model that do not require access

643
00:24:51,440 --> 00:24:54,960
to trusted setup or a crs

644
00:24:54,960 --> 00:24:56,080
and

645
00:24:56,080 --> 00:24:59,120
let me briefly go over prior work in

646
00:24:59,120 --> 00:25:01,520
this specific uh setting there's of

647
00:25:01,520 --> 00:25:04,240
course a lot of wonderful literature on

648
00:25:04,240 --> 00:25:05,840
building privacy preserving arguments

649
00:25:05,840 --> 00:25:07,440
like i said in the random oracle model

650
00:25:07,440 --> 00:25:10,320
or with the crs and please refer to

651
00:25:10,320 --> 00:25:12,080
the full the

652
00:25:12,080 --> 00:25:14,320
the full version of my talk or my paper

653
00:25:14,320 --> 00:25:16,480
for more details on that

654
00:25:16,480 --> 00:25:17,840
because i don't have time here i'm going

655
00:25:17,840 --> 00:25:21,120
to focus on the plain model and there we

656
00:25:21,120 --> 00:25:23,360
know that non-interactive witness

657
00:25:23,360 --> 00:25:25,919
indistinguishable arguments exist from

658
00:25:25,919 --> 00:25:27,840
the randomization assumptions or

659
00:25:27,840 --> 00:25:30,000
bilinear maps or indistinguishability

660
00:25:30,000 --> 00:25:32,159
obfuscation there's also a notion called

661
00:25:32,159 --> 00:25:34,000
witness hiding that we

662
00:25:34,000 --> 00:25:37,520
believe exists and a recent work of um

663
00:25:37,520 --> 00:25:39,760
quickendal and zandery showed

664
00:25:39,760 --> 00:25:41,840
some universal constructions and some

665
00:25:41,840 --> 00:25:44,480
constructions under new assumptions on

666
00:25:44,480 --> 00:25:46,240
non-existence of witness encryption

667
00:25:46,240 --> 00:25:48,240
schemes um

668
00:25:48,240 --> 00:25:50,000
nevertheless despite

669
00:25:50,000 --> 00:25:51,679
knowing these two types of

670
00:25:51,679 --> 00:25:53,840
non-interactive arguments in the plain

671
00:25:53,840 --> 00:25:54,880
model

672
00:25:54,880 --> 00:25:58,000
without crs there are still major gaps

673
00:25:58,000 --> 00:26:00,000
in our understanding of what can we

674
00:26:00,000 --> 00:26:03,039
achieve non-interactively

675
00:26:03,039 --> 00:26:05,200
and uh let me try to illustrate one of

676
00:26:05,200 --> 00:26:07,600
these gaps with the help of an example

677
00:26:07,600 --> 00:26:09,840
uh so suppose there is a cryptocurrency

678
00:26:09,840 --> 00:26:12,159
that allows for finalizing transactions

679
00:26:12,159 --> 00:26:13,600
while keeping the amount being

680
00:26:13,600 --> 00:26:15,120
transferred hidden

681
00:26:15,120 --> 00:26:17,760
um now in general hiding things could

682
00:26:17,760 --> 00:26:19,600
lead to unwanted behavior like someone

683
00:26:19,600 --> 00:26:21,760
transferring more money than they have

684
00:26:21,760 --> 00:26:24,000
than they actually have in their account

685
00:26:24,000 --> 00:26:26,000
and in fact existing currencies like

686
00:26:26,000 --> 00:26:28,480
zcash uh deal with these problems by

687
00:26:28,480 --> 00:26:29,360
using

688
00:26:29,360 --> 00:26:31,440
some form of zero knowledge proofs um

689
00:26:31,440 --> 00:26:33,440
non-interactive zero knowledge proofs in

690
00:26:33,440 --> 00:26:35,520
the crs model to prove the correctness

691
00:26:35,520 --> 00:26:37,840
of encrypted transactions

692
00:26:37,840 --> 00:26:39,919
but the crs turns out to be quite

693
00:26:39,919 --> 00:26:41,760
expensive to generate because it needs

694
00:26:41,760 --> 00:26:44,640
to be generated by a trusted party

695
00:26:44,640 --> 00:26:46,000
um

696
00:26:46,000 --> 00:26:47,840
so the question is is it possible to

697
00:26:47,840 --> 00:26:50,159
achieve this type of functionality in

698
00:26:50,159 --> 00:26:54,159
the plain model and as a simplification

699
00:26:54,159 --> 00:26:56,880
can approver encrypt a message and then

700
00:26:56,880 --> 00:26:58,960
prove that the message is smaller than a

701
00:26:58,960 --> 00:27:01,039
given value let's say 10 but without

702
00:27:01,039 --> 00:27:04,159
revealing the message itself

703
00:27:04,159 --> 00:27:06,480
so in a non-interactive commit and prove

704
00:27:06,480 --> 00:27:08,799
argument approver with input a secret

705
00:27:08,799 --> 00:27:11,360
message m and a public predicate phi

706
00:27:11,360 --> 00:27:14,080
wants to generate a commitment to m and

707
00:27:14,080 --> 00:27:15,840
additionally prove that the committed

708
00:27:15,840 --> 00:27:19,200
message satisfies this predicate phi

709
00:27:19,200 --> 00:27:21,520
while guaranteeing and

710
00:27:21,520 --> 00:27:23,520
soundness and privacy so the soundness

711
00:27:23,520 --> 00:27:25,600
guarantee is that if the verifier

712
00:27:25,600 --> 00:27:27,679
accepts the provers proof then the

713
00:27:27,679 --> 00:27:30,080
commitment c is indeed a commitment to a

714
00:27:30,080 --> 00:27:32,840
message m that satisfies the predicate

715
00:27:32,840 --> 00:27:35,360
phi the privacy guarantee is that the

716
00:27:35,360 --> 00:27:37,600
commitment and proof together should not

717
00:27:37,600 --> 00:27:40,720
reveal the message m

718
00:27:40,720 --> 00:27:43,279
and what this means is that for every

719
00:27:43,279 --> 00:27:46,000
predicate and every pair of messages m1

720
00:27:46,000 --> 00:27:48,880
and m2 that satisfy phi

721
00:27:48,880 --> 00:27:51,120
the output of the prover given the first

722
00:27:51,120 --> 00:27:53,279
message should be indistinguishable from

723
00:27:53,279 --> 00:27:54,799
the output of the approver given the

724
00:27:54,799 --> 00:27:57,039
second message

725
00:27:57,039 --> 00:27:58,480
and now while this seems like a very

726
00:27:58,480 --> 00:28:00,640
fundamental problem unfortunately

727
00:28:00,640 --> 00:28:02,960
existing non-interactive proof systems

728
00:28:02,960 --> 00:28:05,360
like navies and witness hiding

729
00:28:05,360 --> 00:28:07,200
do not suffice to solve this problem

730
00:28:07,200 --> 00:28:09,039
just because the privacy guarantees they

731
00:28:09,039 --> 00:28:10,960
provide are somewhat orthogonal to what

732
00:28:10,960 --> 00:28:13,600
is needed here

733
00:28:14,399 --> 00:28:16,480
so in this work we take uh some of the

734
00:28:16,480 --> 00:28:18,159
first steps towards rectifying the

735
00:28:18,159 --> 00:28:20,159
situation and building non-interactive

736
00:28:20,159 --> 00:28:22,640
proof systems in the plane model without

737
00:28:22,640 --> 00:28:23,840
setup

738
00:28:23,840 --> 00:28:25,600
that provide these types of privacy

739
00:28:25,600 --> 00:28:28,159
guarantees um and in particular we

740
00:28:28,159 --> 00:28:31,520
introduced a new tool called a needy

741
00:28:31,520 --> 00:28:33,279
a non-interactive distributionally

742
00:28:33,279 --> 00:28:34,720
indistinguishable

743
00:28:34,720 --> 00:28:35,600
proof

744
00:28:35,600 --> 00:28:37,679
and we construct it based on

745
00:28:37,679 --> 00:28:39,600
indistinguishability obfuscation and

746
00:28:39,600 --> 00:28:41,600
variance of one-way functions

747
00:28:41,600 --> 00:28:43,760
and we use it to obtain non-interactive

748
00:28:43,760 --> 00:28:45,279
committed proof as well as

749
00:28:45,279 --> 00:28:47,039
non-interactive non-malleable

750
00:28:47,039 --> 00:28:49,200
commitments

751
00:28:49,200 --> 00:28:50,720
we show that

752
00:28:50,720 --> 00:28:53,440
the these resulting applications are in

753
00:28:53,440 --> 00:28:55,600
some sense non-interactive so what do i

754
00:28:55,600 --> 00:28:56,880
mean by that

755
00:28:56,880 --> 00:28:59,039
the interaction pattern of the resulting

756
00:28:59,039 --> 00:29:01,679
commit and proof argument is as follows

757
00:29:01,679 --> 00:29:04,080
the prover on input a message m and

758
00:29:04,080 --> 00:29:06,159
predicate 5 is actually going to be

759
00:29:06,159 --> 00:29:08,399
generating a sampler and sending the

760
00:29:08,399 --> 00:29:10,880
sampler to the verifier the verifier

761
00:29:10,880 --> 00:29:13,520
will run a local randomized algorithm on

762
00:29:13,520 --> 00:29:15,039
this sampler

763
00:29:15,039 --> 00:29:17,360
and the result of that algorithm will be

764
00:29:17,360 --> 00:29:19,120
a commitment string c

765
00:29:19,120 --> 00:29:20,799
uh we'll have the usual completeness

766
00:29:20,799 --> 00:29:23,679
property in that this string c is going

767
00:29:23,679 --> 00:29:26,080
to be a commitment to the message m that

768
00:29:26,080 --> 00:29:28,320
the approver intended to commit to um as

769
00:29:28,320 --> 00:29:30,720
long as both of them are honest

770
00:29:30,720 --> 00:29:33,200
the soundness guarantee will be that

771
00:29:33,200 --> 00:29:36,240
if the commitment string is not bottom

772
00:29:36,240 --> 00:29:38,480
then it is actually a commitment to some

773
00:29:38,480 --> 00:29:40,399
message that satisfies this public

774
00:29:40,399 --> 00:29:42,080
predicate file

775
00:29:42,080 --> 00:29:44,480
and the privacy guarantee like before is

776
00:29:44,480 --> 00:29:46,480
that for every pair of messages that

777
00:29:46,480 --> 00:29:48,799
satisfy the predicate a sampler that's

778
00:29:48,799 --> 00:29:51,200
generating commitments to m1 is going to

779
00:29:51,200 --> 00:29:53,279
be indistinguishable from a sampler

780
00:29:53,279 --> 00:29:54,799
that's generating commitments to the

781
00:29:54,799 --> 00:29:57,760
other message empty

782
00:29:59,360 --> 00:30:02,159
now uh the the technique that we use to

783
00:30:02,159 --> 00:30:03,600
build such a committed proof can

784
00:30:03,600 --> 00:30:05,279
actually be abstracted out into this

785
00:30:05,279 --> 00:30:07,120
more general tool

786
00:30:07,120 --> 00:30:09,520
where which has again the following

787
00:30:09,520 --> 00:30:12,880
syntax the prover on input a language l

788
00:30:12,880 --> 00:30:15,760
and a distribution d that samples in

789
00:30:15,760 --> 00:30:17,760
instance witness pairs

790
00:30:17,760 --> 00:30:20,000
in the relation of the language

791
00:30:20,000 --> 00:30:22,240
is able to generate is able to compute a

792
00:30:22,240 --> 00:30:23,520
sampler

793
00:30:23,520 --> 00:30:25,760
and send it to the verifier

794
00:30:25,760 --> 00:30:28,640
and given the sampler the verifier can

795
00:30:28,640 --> 00:30:31,919
interact with it and obtain samples from

796
00:30:31,919 --> 00:30:35,760
the language so uh samples of instances

797
00:30:35,760 --> 00:30:37,679
in the language and so the completeness

798
00:30:37,679 --> 00:30:40,399
guarantee is usual uh the sound is

799
00:30:40,399 --> 00:30:42,880
guaranteed is that if uh the sample that

800
00:30:42,880 --> 00:30:45,120
the verifier obtained was not what then

801
00:30:45,120 --> 00:30:47,679
it must be an instance in the language

802
00:30:47,679 --> 00:30:49,679
and the privacy guarantee is that for

803
00:30:49,679 --> 00:30:52,960
all pairs of distributions that sample

804
00:30:52,960 --> 00:30:55,919
pairs of indistinguishable instances

805
00:30:55,919 --> 00:30:59,279
um a sampler that that outputs samples

806
00:30:59,279 --> 00:31:01,360
from the first distribution is going to

807
00:31:01,360 --> 00:31:03,519
be indistinguishable from a sampler that

808
00:31:03,519 --> 00:31:04,640
outputs

809
00:31:04,640 --> 00:31:06,880
instances from the second distribution

810
00:31:06,880 --> 00:31:10,000
so the point is if if x if the x is

811
00:31:10,000 --> 00:31:12,000
sampled by these two distributions d1

812
00:31:12,000 --> 00:31:15,120
and d2 are indistinguishable then the

813
00:31:15,120 --> 00:31:17,360
samplers will produce outputs that are

814
00:31:17,360 --> 00:31:20,480
indistinguishable along with proofs so

815
00:31:20,480 --> 00:31:21,919
there is this additional soundness

816
00:31:21,919 --> 00:31:23,919
guarantee that this like adds to this

817
00:31:23,919 --> 00:31:25,760
setting

818
00:31:25,760 --> 00:31:26,720
um

819
00:31:26,720 --> 00:31:28,880
and now we um

820
00:31:28,880 --> 00:31:32,559
as rajit already described existing

821
00:31:32,559 --> 00:31:35,679
non-interactive schemes um and existing

822
00:31:35,679 --> 00:31:37,840
non-interactive cca commitment schemes

823
00:31:37,840 --> 00:31:39,679
have an important tag amplification

824
00:31:39,679 --> 00:31:42,559
component that requires commit and proof

825
00:31:42,559 --> 00:31:45,919
and we show that this can actually be

826
00:31:45,919 --> 00:31:49,120
achieved in the plane model via a needy

827
00:31:49,120 --> 00:31:51,840
so an idi is sufficient for this

828
00:31:51,840 --> 00:31:53,840
specific application to tag

829
00:31:53,840 --> 00:31:57,440
amplification for cca commitments um and

830
00:31:57,440 --> 00:31:59,919
so let me just summarize quickly

831
00:31:59,919 --> 00:32:01,840
we introduced this new tool it roughly

832
00:32:01,840 --> 00:32:03,679
guarantees that when two statements are

833
00:32:03,679 --> 00:32:05,519
indistinguishable then so are the

834
00:32:05,519 --> 00:32:08,480
statement and proof combinations um

835
00:32:08,480 --> 00:32:10,320
it has applications to commit and prove

836
00:32:10,320 --> 00:32:12,240
and to cca commitments and we believe

837
00:32:12,240 --> 00:32:15,440
this may find additional applications

838
00:32:15,440 --> 00:32:16,960
because i didn't have a lot of time i

839
00:32:16,960 --> 00:32:18,720
couldn't go into many of the details but

840
00:32:18,720 --> 00:32:20,640
the paper is an imprint if you want to

841
00:32:20,640 --> 00:32:22,000
take a look

842
00:32:22,000 --> 00:32:24,480
thank you

843
00:32:27,519 --> 00:32:29,840
okay

844
00:32:32,960 --> 00:32:35,840
is there any question

845
00:32:38,320 --> 00:32:41,320
okay

846
00:32:44,799 --> 00:32:47,519
thanks for your great presentation so

847
00:32:47,519 --> 00:32:49,360
do i get correctly that you have just

848
00:32:49,360 --> 00:32:51,200
one shot or you assume that there is

849
00:32:51,200 --> 00:32:53,600
offline something to share with proverb

850
00:32:53,600 --> 00:32:56,639
let's say commenter and

851
00:32:57,679 --> 00:32:58,640
um

852
00:32:58,640 --> 00:33:02,080
so so it is not completely one shot in

853
00:33:02,080 --> 00:33:04,799
the sense that the verifier

854
00:33:04,799 --> 00:33:07,440
obtains this commitment string which is

855
00:33:07,440 --> 00:33:09,120
like different for different inputs of

856
00:33:09,120 --> 00:33:12,559
the verifier so the the prover once it

857
00:33:12,559 --> 00:33:14,720
sends this sampler does not know what

858
00:33:14,720 --> 00:33:16,720
sample the verifier ended up with

859
00:33:16,720 --> 00:33:18,559
depending on application they may or may

860
00:33:18,559 --> 00:33:20,480
not need to know what it is so there's a

861
00:33:20,480 --> 00:33:22,399
bunch of applications where like this

862
00:33:22,399 --> 00:33:24,080
may not be necessary in a bunch of

863
00:33:24,080 --> 00:33:26,480
applications where this could be and

864
00:33:26,480 --> 00:33:28,640
like in the paper we describe like what

865
00:33:28,640 --> 00:33:30,399
the implications of this are in a little

866
00:33:30,399 --> 00:33:31,679
more detail

867
00:33:31,679 --> 00:33:32,399
so

868
00:33:32,399 --> 00:33:34,799
we couldn't use subversion resistance

869
00:33:34,799 --> 00:33:36,559
let's say simulation extractable or

870
00:33:36,559 --> 00:33:38,960
simulation sound nicks that they are

871
00:33:38,960 --> 00:33:41,120
two-run verifier sends some crs and

872
00:33:41,120 --> 00:33:43,039
priver uses them and you you guarantee

873
00:33:43,039 --> 00:33:46,159
that the proof is not malleable so like

874
00:33:46,159 --> 00:33:48,320
could we use them or

875
00:33:48,320 --> 00:33:51,200
so here one of the goals is to just not

876
00:33:51,200 --> 00:33:54,559
rely on any crs at all um

877
00:33:54,559 --> 00:33:56,559
because we and

878
00:33:56,559 --> 00:33:57,760
um

879
00:33:57,760 --> 00:33:59,919
so and

880
00:33:59,919 --> 00:34:02,080
and having the verifier send the crs

881
00:34:02,080 --> 00:34:04,399
first would again like you said would be

882
00:34:04,399 --> 00:34:06,640
actually be two messages whereas this

883
00:34:06,640 --> 00:34:08,639
can be like a single shot in certain

884
00:34:08,639 --> 00:34:10,879
settings and maybe some other settings

885
00:34:10,879 --> 00:34:13,040
require the prover to know what output

886
00:34:13,040 --> 00:34:14,639
the verifier obtained and in those

887
00:34:14,639 --> 00:34:16,960
settings this is this needs like first

888
00:34:16,960 --> 00:34:18,719
message from the approver response from

889
00:34:18,719 --> 00:34:20,399
the verifier

890
00:34:20,399 --> 00:34:21,359
so

891
00:34:21,359 --> 00:34:23,440
this is like completely non-interactive

892
00:34:23,440 --> 00:34:25,520
in some applications and

893
00:34:25,520 --> 00:34:29,359
needs this extra message in some others

894
00:34:32,079 --> 00:34:35,280
any other question

895
00:34:35,280 --> 00:34:38,000
i might have a question so you introduce

896
00:34:38,000 --> 00:34:41,040
this new notion it's very powerful this

897
00:34:41,040 --> 00:34:41,760
uh

898
00:34:41,760 --> 00:34:43,520
non-interactive distributional and

899
00:34:43,520 --> 00:34:47,359
distinguishability you show that

900
00:34:47,359 --> 00:34:51,440
io plus something else imply uh needy

901
00:34:51,440 --> 00:34:54,079
uh what about the other direction could

902
00:34:54,079 --> 00:34:56,719
you show needy or have you thought if

903
00:34:56,719 --> 00:34:57,920
need imply

904
00:34:57,920 --> 00:35:01,119
some weaker form of io

905
00:35:01,119 --> 00:35:03,839
uh that's a great question

906
00:35:03,839 --> 00:35:05,920
uh it's a great question i haven't

907
00:35:05,920 --> 00:35:08,079
thought too hard about it i i have tried

908
00:35:08,079 --> 00:35:09,680
to uh

909
00:35:09,680 --> 00:35:12,000
simplify like reduce the assumptions try

910
00:35:12,000 --> 00:35:14,480
to get it just from lwe not been very

911
00:35:14,480 --> 00:35:18,079
successful in doing that uh so far

912
00:35:18,079 --> 00:35:21,119
but i haven't tried hard to prove that

913
00:35:21,119 --> 00:35:23,520
niddy would imply i hope so great

914
00:35:23,520 --> 00:35:27,200
question um i don't know unfortunately

915
00:35:27,200 --> 00:35:28,079
okay

916
00:35:28,079 --> 00:35:29,520
thanks

917
00:35:29,520 --> 00:35:31,040
any other question

918
00:35:31,040 --> 00:35:32,400
i guess no

919
00:35:32,400 --> 00:35:33,200
so

920
00:35:33,200 --> 00:35:36,160
with this we conclude the sessions

921
00:35:36,160 --> 00:35:41,319
let's uh thanks all the speakers again

922
00:36:17,680 --> 00:36:20,399
you're muted

923
00:36:21,839 --> 00:36:24,320
okay so thank you everyone for listening

924
00:36:24,320 --> 00:36:26,000
this was the last session of the last

925
00:36:26,000 --> 00:36:28,240
day which means the conference is

926
00:36:28,240 --> 00:36:30,079
officially over

927
00:36:30,079 --> 00:36:33,359
uh there is one more thing so a couple

928
00:36:33,359 --> 00:36:35,040
you some of you if you want you can

929
00:36:35,040 --> 00:36:38,240
return the the badges you get a gift

930
00:36:38,240 --> 00:36:41,040
some of you um enrolled for the guided

931
00:36:41,040 --> 00:36:43,200
tour so that will start

932
00:36:43,200 --> 00:36:46,079
in 30 minutes something like that

933
00:36:46,079 --> 00:36:49,040
that being said let me also share a

934
00:36:49,040 --> 00:36:50,960
slide

935
00:36:50,960 --> 00:36:54,359
where is this

936
00:36:59,599 --> 00:37:03,960
the sliders are here

937
00:37:04,910 --> 00:37:07,980
[Music]

938
00:37:14,079 --> 00:37:17,119
hopefully you can see it so it's just a

939
00:37:17,119 --> 00:37:20,320
slide for eurocrypt next year so europe

940
00:37:20,320 --> 00:37:24,400
2022 it will be happening from may 30 to

941
00:37:24,400 --> 00:37:27,200
june 3 in trondheim norway

942
00:37:27,200 --> 00:37:29,920
so yeah start already thinking how do

943
00:37:29,920 --> 00:37:30,720
you

944
00:37:30,720 --> 00:37:32,560
how do you plan to go there and enjoy

945
00:37:32,560 --> 00:37:34,880
also nice nice time there

946
00:37:34,880 --> 00:37:37,680
that being said i do hope you enjoyed in

947
00:37:37,680 --> 00:37:38,800
zagreb

948
00:37:38,800 --> 00:37:40,160
uh

949
00:37:40,160 --> 00:37:42,000
maybe those that are vegetarians a

950
00:37:42,000 --> 00:37:44,960
little bit you enjoyed a little bit less

951
00:37:44,960 --> 00:37:46,240
but

952
00:37:46,240 --> 00:37:48,720
others hopefully you had a good time

953
00:37:48,720 --> 00:37:51,280
and hopefully we see each other

954
00:37:51,280 --> 00:37:53,920
well sooner than we had now two years of

955
00:37:53,920 --> 00:37:58,040
break thank you all

