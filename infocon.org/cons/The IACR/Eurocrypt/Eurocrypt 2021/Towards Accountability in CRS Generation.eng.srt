1
00:00:01,120 --> 00:00:03,439
hello everyone my name is ilada ahri and

2
00:00:03,439 --> 00:00:05,120
today i will talk about two words

3
00:00:05,120 --> 00:00:07,759
accountability in cls generation

4
00:00:07,759 --> 00:00:10,480
this is joint work with abandoned annan

5
00:00:10,480 --> 00:00:13,040
gilad ashara and vipulgoya

6
00:00:13,040 --> 00:00:15,200
let's start

7
00:00:15,200 --> 00:00:17,119
first i want to define non-interactive

8
00:00:17,119 --> 00:00:19,840
zero knowledge so assume we have an np

9
00:00:19,840 --> 00:00:23,199
language and we have two parties over

10
00:00:23,199 --> 00:00:24,800
and verify

11
00:00:24,800 --> 00:00:26,400
and the puzzle wants to convince the

12
00:00:26,400 --> 00:00:28,800
verifier that some statement is true

13
00:00:28,800 --> 00:00:30,480
without revealing any additional

14
00:00:30,480 --> 00:00:33,840
information about the statement

15
00:00:33,840 --> 00:00:35,600
in addition we are talking about

16
00:00:35,600 --> 00:00:38,399
non-interactive proof system therefore

17
00:00:38,399 --> 00:00:40,640
the approval can send to the verifier

18
00:00:40,640 --> 00:00:43,280
only a single message

19
00:00:43,280 --> 00:00:45,039
and we know that for achieving

20
00:00:45,039 --> 00:00:46,800
non-interactive zero knowledge we need

21
00:00:46,800 --> 00:00:48,879
to require trusted setup

22
00:00:48,879 --> 00:00:50,719
specifically in this talk we will

23
00:00:50,719 --> 00:00:52,480
consider the common reference string

24
00:00:52,480 --> 00:00:55,280
model and what is this model

25
00:00:55,280 --> 00:00:58,399
so the common reference string model

26
00:00:58,399 --> 00:01:00,320
the parties share a trusted public

27
00:01:00,320 --> 00:01:03,199
string from a non-distribution so you

28
00:01:03,199 --> 00:01:05,040
can think about this string as public

29
00:01:05,040 --> 00:01:07,600
key encryption or a commitment to some

30
00:01:07,600 --> 00:01:09,840
bit etc

31
00:01:09,840 --> 00:01:12,560
and the motivation to define this model

32
00:01:12,560 --> 00:01:14,400
is to achieve cryptographic priorities

33
00:01:14,400 --> 00:01:16,080
that we cannot achieve without this

34
00:01:16,080 --> 00:01:17,520
assumption

35
00:01:17,520 --> 00:01:19,759
for example non-interactive zero

36
00:01:19,759 --> 00:01:22,960
knowledge for mp manages to run the mtc

37
00:01:22,960 --> 00:01:26,240
and we have more examples

38
00:01:26,240 --> 00:01:28,159
the properties we require from such a

39
00:01:28,159 --> 00:01:31,200
pulse system is as follows so the first

40
00:01:31,200 --> 00:01:34,000
property is completeness which means

41
00:01:34,000 --> 00:01:36,479
that if the statement is true then the

42
00:01:36,479 --> 00:01:38,799
verifier accept with high probability

43
00:01:38,799 --> 00:01:41,360
the second property is summit which

44
00:01:41,360 --> 00:01:43,520
means that if the statement is false

45
00:01:43,520 --> 00:01:45,360
then the value file reject with high

46
00:01:45,360 --> 00:01:46,880
probability

47
00:01:46,880 --> 00:01:48,399
and the last property which is the

48
00:01:48,399 --> 00:01:50,720
spatial property is zero knowledge which

49
00:01:50,720 --> 00:01:52,880
means that if the statement is true then

50
00:01:52,880 --> 00:01:55,360
the verifier cannot learn any additional

51
00:01:55,360 --> 00:01:56,880
information

52
00:01:56,880 --> 00:01:58,560
about the statement

53
00:01:58,560 --> 00:02:00,960
in the way we formalize it we require

54
00:02:00,960 --> 00:02:04,320
that there exists a simulator such that

55
00:02:04,320 --> 00:02:06,560
the simulator upon receiving only the

56
00:02:06,560 --> 00:02:09,520
input only the statement can output the

57
00:02:09,520 --> 00:02:12,000
whole transcript can output the crs and

58
00:02:12,000 --> 00:02:14,640
the proof so basically the simulator can

59
00:02:14,640 --> 00:02:16,800
output everything that the verifier can

60
00:02:16,800 --> 00:02:19,920
see during the proof

61
00:02:21,280 --> 00:02:23,920
so all these work fantastic in the

62
00:02:23,920 --> 00:02:26,319
theoretical world however when you are

63
00:02:26,319 --> 00:02:28,800
talking in the real world we have two

64
00:02:28,800 --> 00:02:30,319
main questions

65
00:02:30,319 --> 00:02:33,040
the first question is who generates the

66
00:02:33,040 --> 00:02:34,319
surface

67
00:02:34,319 --> 00:02:37,120
we don't have any trusted public

68
00:02:37,120 --> 00:02:40,560
strength and the second question is what

69
00:02:40,560 --> 00:02:43,360
happened if this series is maliciously

70
00:02:43,360 --> 00:02:45,519
generated again we don't have any

71
00:02:45,519 --> 00:02:48,239
clustered

72
00:02:48,840 --> 00:02:51,519
stream these questions have been

73
00:02:51,519 --> 00:02:53,680
studying for a long time

74
00:02:53,680 --> 00:02:55,519
and the main answer is to consider

75
00:02:55,519 --> 00:02:57,680
weaker notion of security

76
00:02:57,680 --> 00:03:00,000
for example in the well-known work by

77
00:03:00,000 --> 00:03:02,959
the work and all they consider that in

78
00:03:02,959 --> 00:03:04,480
that we have witnessing

79
00:03:04,480 --> 00:03:06,720
distinguishability proof system

80
00:03:06,720 --> 00:03:08,560
and this proof can be made

81
00:03:08,560 --> 00:03:10,720
non-interactive without

82
00:03:10,720 --> 00:03:12,560
without any setup

83
00:03:12,560 --> 00:03:14,560
but we want to achieve zero knowledge

84
00:03:14,560 --> 00:03:15,920
and for music

85
00:03:15,920 --> 00:03:19,839
we need trusted setup

86
00:03:21,120 --> 00:03:23,360
so in the real world who generates the

87
00:03:23,360 --> 00:03:25,760
series

88
00:03:25,760 --> 00:03:28,319
the first answer is

89
00:03:28,319 --> 00:03:31,040
mpc multi-party computation so in

90
00:03:31,040 --> 00:03:32,640
multi-party computation we have

91
00:03:32,640 --> 00:03:34,879
multi-parties who generates together the

92
00:03:34,879 --> 00:03:36,319
service

93
00:03:36,319 --> 00:03:39,200
and if we have fraction of the parties

94
00:03:39,200 --> 00:03:42,560
that honest then we can trust the output

95
00:03:42,560 --> 00:03:44,640
but we know that in some cases this is

96
00:03:44,640 --> 00:03:46,799
not enough and

97
00:03:46,799 --> 00:03:49,120
we need to destroy the computers because

98
00:03:49,120 --> 00:03:52,560
even the computer itself can leak some

99
00:03:52,560 --> 00:03:54,720
trapdoors or some

100
00:03:54,720 --> 00:03:57,040
private information and then we cannot

101
00:03:57,040 --> 00:03:59,200
trust the output anymore

102
00:03:59,200 --> 00:04:02,000
the second answer is

103
00:04:02,000 --> 00:04:04,000
atlastic party

104
00:04:04,000 --> 00:04:06,560
but think about it do we really trust

105
00:04:06,560 --> 00:04:07,920
anyone

106
00:04:07,920 --> 00:04:10,159
in the real life do they really exist

107
00:04:10,159 --> 00:04:13,120
like the partisans

108
00:04:13,360 --> 00:04:15,519
so what can we do

109
00:04:15,519 --> 00:04:16,798
if we have

110
00:04:16,798 --> 00:04:19,440
one party who generates the service

111
00:04:19,440 --> 00:04:22,320
and this party is a malicious party

112
00:04:22,320 --> 00:04:23,759
then

113
00:04:23,759 --> 00:04:27,440
maybe we have some titles in the

114
00:04:27,440 --> 00:04:27,759
if series

115
00:04:27,759 --> 00:04:30,160
malicious party recovers private

116
00:04:30,160 --> 00:04:32,720
information but keeps the private

117
00:04:32,720 --> 00:04:36,160
information to themselves then we cannot

118
00:04:36,160 --> 00:04:39,199
do nothing right we cannot know even

119
00:04:39,199 --> 00:04:42,080
that this happened so it's impossible to

120
00:04:42,080 --> 00:04:43,680
protect against

121
00:04:43,680 --> 00:04:46,880
at least it seems impossible

122
00:04:46,880 --> 00:04:49,040
and if the malicious party uses the

123
00:04:49,040 --> 00:04:51,199
private information then we want to do

124
00:04:51,199 --> 00:04:53,919
something we want to prove they act

125
00:04:53,919 --> 00:04:56,919
maliciously

126
00:04:57,120 --> 00:04:59,919
there are many ways to use the privacy

127
00:04:59,919 --> 00:05:02,800
information and in this talk we focus on

128
00:05:02,800 --> 00:05:05,440
holding a party who tries to sell the

129
00:05:05,440 --> 00:05:08,000
pipe's information and calling the bill

130
00:05:08,000 --> 00:05:09,520
we introduce the notion of

131
00:05:09,520 --> 00:05:12,400
accountability in cls generation and we

132
00:05:12,400 --> 00:05:14,720
study accountability for music to pc and

133
00:05:14,720 --> 00:05:17,440
specifically for ot

134
00:05:17,440 --> 00:05:19,759
informally our result

135
00:05:19,759 --> 00:05:22,800
for music we get

136
00:05:22,800 --> 00:05:25,199
music for all np that satisfy

137
00:05:25,199 --> 00:05:27,199
accountability for

138
00:05:27,199 --> 00:05:29,600
two-party computation we have an

139
00:05:29,600 --> 00:05:31,759
impossibility results that says that

140
00:05:31,759 --> 00:05:34,160
there exists a functionality that we

141
00:05:34,160 --> 00:05:37,120
cannot achieve accountability

142
00:05:37,120 --> 00:05:40,320
and we also have positive results and we

143
00:05:40,320 --> 00:05:42,400
shall understand this assumption that we

144
00:05:42,400 --> 00:05:45,120
can get two parts of computation for a

145
00:05:45,120 --> 00:05:48,240
large class of functionalities that

146
00:05:48,240 --> 00:05:51,960
satisfy accountability

147
00:05:52,720 --> 00:05:53,600
now

148
00:05:53,600 --> 00:05:57,039
i want to focus on our scenario

149
00:05:57,039 --> 00:05:58,800
so in our setting

150
00:05:58,800 --> 00:06:01,680
we consider a party called authority who

151
00:06:01,680 --> 00:06:04,400
generates the series

152
00:06:04,400 --> 00:06:06,720
so if this authority is an honest party

153
00:06:06,720 --> 00:06:08,960
everything looks great the public and

154
00:06:08,960 --> 00:06:11,280
uses the crs generates music and

155
00:06:11,280 --> 00:06:13,039
everything works

156
00:06:13,039 --> 00:06:15,199
but this authority is a malicious party

157
00:06:15,199 --> 00:06:17,680
so as we said we are focused on

158
00:06:17,680 --> 00:06:20,160
authority who can sell the information

159
00:06:20,160 --> 00:06:22,400
so let's see how it goes

160
00:06:22,400 --> 00:06:24,319
the malicious authority generates

161
00:06:24,319 --> 00:06:26,319
serious with web those

162
00:06:26,319 --> 00:06:28,240
then the power uses

163
00:06:28,240 --> 00:06:31,120
the crs to generate and it can send the

164
00:06:31,120 --> 00:06:32,840
music to the

165
00:06:32,840 --> 00:06:36,479
verifier now the malicious authority

166
00:06:36,479 --> 00:06:40,319
can use descriptors and extract private

167
00:06:40,319 --> 00:06:43,680
information from the proof

168
00:06:43,680 --> 00:06:45,520
now the malicious authority not only

169
00:06:45,520 --> 00:06:47,520
extract the private information the

170
00:06:47,520 --> 00:06:49,680
malicious authority also sell the

171
00:06:49,680 --> 00:06:52,080
private information for profit so we

172
00:06:52,080 --> 00:06:55,120
have a third party them that can query

173
00:06:55,120 --> 00:06:57,039
the malicious authority the back those

174
00:06:57,039 --> 00:06:59,039
services so the malicious authority

175
00:06:59,039 --> 00:07:01,759
basically set up set up some battle

176
00:07:01,759 --> 00:07:03,360
service

177
00:07:03,360 --> 00:07:04,479
and this

178
00:07:04,479 --> 00:07:06,960
third party sends proof to the malicious

179
00:07:06,960 --> 00:07:09,840
authority and gets back the

180
00:07:09,840 --> 00:07:13,758
private information from the proof

181
00:07:14,240 --> 00:07:16,479
so let's summarize the scenario

182
00:07:16,479 --> 00:07:19,759
so when the malicious authority is

183
00:07:19,759 --> 00:07:21,440
malicious

184
00:07:21,440 --> 00:07:23,360
then the authority can maliciously

185
00:07:23,360 --> 00:07:26,319
generate the service we settle

186
00:07:26,319 --> 00:07:28,880
recover private information and use the

187
00:07:28,880 --> 00:07:30,880
backdoor service to sell the private

188
00:07:30,880 --> 00:07:34,000
information for profit

189
00:07:34,080 --> 00:07:37,280
and what is our goal we want to use this

190
00:07:37,280 --> 00:07:40,479
backed service to generate a proof

191
00:07:40,479 --> 00:07:42,800
that the cls was maliciously generated

192
00:07:42,800 --> 00:07:46,960
and the authority was dishonest

193
00:07:46,960 --> 00:07:49,360
and how we do it so specifically we want

194
00:07:49,360 --> 00:07:52,800
to consult an extractor that can query

195
00:07:52,800 --> 00:07:55,199
the backdoor service and can use the

196
00:07:55,199 --> 00:07:56,960
backdoor service

197
00:07:56,960 --> 00:08:00,000
and using it can generate the proof that

198
00:08:00,000 --> 00:08:02,400
the authority maliciously generated the

199
00:08:02,400 --> 00:08:04,240
fear

200
00:08:04,240 --> 00:08:05,360
so now

201
00:08:05,360 --> 00:08:07,680
if the malicious authority

202
00:08:07,680 --> 00:08:10,400
recognized the extractor and recognized

203
00:08:10,400 --> 00:08:11,599
the queries

204
00:08:11,599 --> 00:08:13,759
of the extractor then the malicious

205
00:08:13,759 --> 00:08:16,240
authority won't open these queries won't

206
00:08:16,240 --> 00:08:18,240
answer these queries

207
00:08:18,240 --> 00:08:19,120
so

208
00:08:19,120 --> 00:08:22,160
we need somehow that the queries of the

209
00:08:22,160 --> 00:08:23,360
exactly

210
00:08:23,360 --> 00:08:24,479
looks like

211
00:08:24,479 --> 00:08:27,280
a real query look like a malicious

212
00:08:27,280 --> 00:08:28,800
queries like

213
00:08:28,800 --> 00:08:30,720
a third party we just want to buy

214
00:08:30,720 --> 00:08:33,840
private information

215
00:08:35,440 --> 00:08:37,919
and how we do it so we design a crs

216
00:08:37,919 --> 00:08:40,240
generation port because it satisfy an

217
00:08:40,240 --> 00:08:42,799
accountability property

218
00:08:42,799 --> 00:08:44,800
so before we explain exactly what is the

219
00:08:44,800 --> 00:08:47,040
accountability property

220
00:08:47,040 --> 00:08:49,279
i will explain

221
00:08:49,279 --> 00:08:52,720
what the syntax of the particle

222
00:08:52,720 --> 00:08:56,640
we have four algorithms gmcrs prove

223
00:08:56,640 --> 00:08:59,920
verify and charge

224
00:09:00,320 --> 00:09:03,200
gen crs prove and verify is just an edit

225
00:09:03,200 --> 00:09:05,440
pro system as we know

226
00:09:05,440 --> 00:09:07,279
what is the jet so the input of the

227
00:09:07,279 --> 00:09:10,160
judge is the crs and an evidence though

228
00:09:10,160 --> 00:09:12,160
and the output of the judge is if this

229
00:09:12,160 --> 00:09:16,319
is honest or corrupted

230
00:09:16,640 --> 00:09:18,959
and what is the accountability this

231
00:09:18,959 --> 00:09:21,519
authority is malicious and still the

232
00:09:21,519 --> 00:09:22,480
information

233
00:09:22,480 --> 00:09:23,360
then

234
00:09:23,360 --> 00:09:25,360
we can use the vegetable service to

235
00:09:25,360 --> 00:09:27,680
generate a publicly verifiable food so

236
00:09:27,680 --> 00:09:29,920
basically this is the proof that anyone

237
00:09:29,920 --> 00:09:32,560
can just verify and check and for

238
00:09:32,560 --> 00:09:34,720
example we can take this proof and

239
00:09:34,720 --> 00:09:38,399
convince the judge in a court

240
00:09:38,399 --> 00:09:40,959
so complete the accountability property

241
00:09:40,959 --> 00:09:43,360
we need to require that we cannot just

242
00:09:43,360 --> 00:09:44,399
blame

243
00:09:44,399 --> 00:09:45,120
in

244
00:09:45,120 --> 00:09:47,440
honest authority right

245
00:09:47,440 --> 00:09:49,839
therefore we define deformation free so

246
00:09:49,839 --> 00:09:52,160
if the authority is on it we cannot

247
00:09:52,160 --> 00:09:54,880
generate a proof against the authority

248
00:09:54,880 --> 00:09:56,000
that

249
00:09:56,000 --> 00:09:58,720
is accepted by the judge

250
00:09:58,720 --> 00:10:00,959
and how we formalize it

251
00:10:00,959 --> 00:10:04,399
we said that the probability that the

252
00:10:04,399 --> 00:10:05,440
judge

253
00:10:05,440 --> 00:10:06,959
accept

254
00:10:06,959 --> 00:10:09,600
a proof for a

255
00:10:09,600 --> 00:10:11,600
and honest crs

256
00:10:11,600 --> 00:10:14,480
is negligible

257
00:10:15,440 --> 00:10:17,760
and we say that the four algorithms

258
00:10:17,760 --> 00:10:20,640
joined crs prove verifying judge has

259
00:10:20,640 --> 00:10:23,440
malicious authority security for music

260
00:10:23,440 --> 00:10:24,320
is

261
00:10:24,320 --> 00:10:27,120
gen crs proven verify is a new improved

262
00:10:27,120 --> 00:10:28,320
system

263
00:10:28,320 --> 00:10:32,320
and gen cls who verify and just satisfy

264
00:10:32,320 --> 00:10:36,640
accountability and defamation free

265
00:10:36,640 --> 00:10:39,040
so now i will explain how we define

266
00:10:39,040 --> 00:10:40,399
accountability and we define

267
00:10:40,399 --> 00:10:43,839
accountability via two experiments

268
00:10:43,839 --> 00:10:45,760
so the first experiment

269
00:10:45,760 --> 00:10:48,720
models the real world

270
00:10:48,720 --> 00:10:51,279
so we have an authority

271
00:10:51,279 --> 00:10:54,320
in the authority generates cls and sends

272
00:10:54,320 --> 00:10:56,959
it to the experiment so this class can

273
00:10:56,959 --> 00:10:58,959
be corrupted or not

274
00:10:58,959 --> 00:11:02,079
now the experiment samples some instance

275
00:11:02,079 --> 00:11:05,279
and generates the music proof using the

276
00:11:05,279 --> 00:11:08,320
crs from the authority

277
00:11:08,320 --> 00:11:09,120
now

278
00:11:09,120 --> 00:11:12,240
the experiment sent to the authority

279
00:11:12,240 --> 00:11:14,720
the proof and the authority

280
00:11:14,720 --> 00:11:17,279
sends back some weakness

281
00:11:17,279 --> 00:11:20,079
the output of this experiment is one if

282
00:11:20,079 --> 00:11:22,880
and only if this witness is a valid

283
00:11:22,880 --> 00:11:25,279
witness

284
00:11:25,839 --> 00:11:27,600
so why

285
00:11:27,600 --> 00:11:30,160
this is model the real world let's see

286
00:11:30,160 --> 00:11:32,720
so what is the first message in this

287
00:11:32,720 --> 00:11:35,040
agreement so the first message is

288
00:11:35,040 --> 00:11:37,279
exactly in the real world when

289
00:11:37,279 --> 00:11:40,399
the malicious authority can generate cls

290
00:11:40,399 --> 00:11:42,640
and then the approval has

291
00:11:42,640 --> 00:11:44,720
some statement in witness

292
00:11:44,720 --> 00:11:45,519
and

293
00:11:45,519 --> 00:11:47,200
the cover uses

294
00:11:47,200 --> 00:11:50,480
the crs from the authority and generates

295
00:11:50,480 --> 00:11:53,279
a music and sends this music to the very

296
00:11:53,279 --> 00:11:55,360
file

297
00:11:55,360 --> 00:11:56,880
and what is the second part of the

298
00:11:56,880 --> 00:11:59,760
experiment so in the second part

299
00:11:59,760 --> 00:12:01,040
this is

300
00:12:01,040 --> 00:12:03,200
actually the back of service and what

301
00:12:03,200 --> 00:12:06,000
happened in the back door service so we

302
00:12:06,000 --> 00:12:08,320
have some party

303
00:12:08,320 --> 00:12:11,200
who sends proofs to the malicious

304
00:12:11,200 --> 00:12:12,480
authority

305
00:12:12,480 --> 00:12:15,680
to the vectors service and get back

306
00:12:15,680 --> 00:12:18,160
witness

307
00:12:19,600 --> 00:12:22,399
the second experiment is the extraction

308
00:12:22,399 --> 00:12:24,240
experiment

309
00:12:24,240 --> 00:12:26,160
and in this experiment we have two

310
00:12:26,160 --> 00:12:29,440
parties the authority and x factor now

311
00:12:29,440 --> 00:12:31,920
again the authority generates

312
00:12:31,920 --> 00:12:35,200
cls this crs can be corrupted or not

313
00:12:35,200 --> 00:12:38,399
they extract those samples

314
00:12:38,399 --> 00:12:41,200
some instance and generates the music

315
00:12:41,200 --> 00:12:44,480
proof using the cls from the authority

316
00:12:44,480 --> 00:12:47,920
and again the extractor sends

317
00:12:47,920 --> 00:12:50,560
to the authority the proof and the

318
00:12:50,560 --> 00:12:54,000
authority sends the weakness

319
00:12:54,000 --> 00:12:55,440
but now

320
00:12:55,440 --> 00:12:58,160
we said that using the backdoor service

321
00:12:58,160 --> 00:13:00,480
the extractor should generate a proof so

322
00:13:00,480 --> 00:13:02,079
this is not enough

323
00:13:02,079 --> 00:13:04,880
and now what what

324
00:13:04,880 --> 00:13:07,839
now we require that the extractor

325
00:13:07,839 --> 00:13:09,279
generates

326
00:13:09,279 --> 00:13:10,800
some evidence

327
00:13:10,800 --> 00:13:11,680
tau

328
00:13:11,680 --> 00:13:13,839
and now the output will be won

329
00:13:13,839 --> 00:13:17,120
if the judge will be convinced

330
00:13:17,120 --> 00:13:19,760
but using this evidence style that

331
00:13:19,760 --> 00:13:23,120
fearless is corrupted

332
00:13:23,120 --> 00:13:25,440
okay

333
00:13:26,160 --> 00:13:28,959
so what is the accountability property

334
00:13:28,959 --> 00:13:31,760
for every authority that can success in

335
00:13:31,760 --> 00:13:32,800
the real

336
00:13:32,800 --> 00:13:34,959
experiment

337
00:13:34,959 --> 00:13:38,720
there exists an exacto that can succeed

338
00:13:38,720 --> 00:13:40,240
in the extraction

339
00:13:40,240 --> 00:13:42,959
experiment

340
00:13:44,639 --> 00:13:48,079
and what is our result so soon

341
00:13:48,079 --> 00:13:50,320
understandable assumption

342
00:13:50,320 --> 00:13:54,320
we construct an edict for np and i will

343
00:13:54,320 --> 00:13:56,160
show you now the high level of the

344
00:13:56,160 --> 00:13:57,680
construction and this transaction

345
00:13:57,680 --> 00:14:02,680
satisfy accountability and deformation

346
00:14:04,560 --> 00:14:07,680
the main idea of our construction is to

347
00:14:07,680 --> 00:14:11,760
add more information to the cls

348
00:14:11,760 --> 00:14:14,800
and the proof to the judge will be the

349
00:14:14,800 --> 00:14:17,199
ability to open them

350
00:14:17,199 --> 00:14:19,519
so specifically here we had

351
00:14:19,519 --> 00:14:22,160
commitment to the cls

352
00:14:22,160 --> 00:14:24,639
and the proof will be the ability to

353
00:14:24,639 --> 00:14:26,720
open the commitment and we know that

354
00:14:26,720 --> 00:14:28,320
from the security of the commitment we

355
00:14:28,320 --> 00:14:32,000
cannot just open commitments

356
00:14:32,320 --> 00:14:35,440
so we need to think right our extractor

357
00:14:35,440 --> 00:14:39,040
can query and can ask

358
00:14:39,040 --> 00:14:42,320
them they back their service so

359
00:14:42,320 --> 00:14:45,279
the extractor can send

360
00:14:45,279 --> 00:14:47,920
them direct to service proofs and get

361
00:14:47,920 --> 00:14:49,920
back witnesses

362
00:14:49,920 --> 00:14:51,600
so somehow

363
00:14:51,600 --> 00:14:55,279
from the obtained weakness the extractor

364
00:14:55,279 --> 00:14:56,560
should

365
00:14:56,560 --> 00:14:58,959
understand and have the and has the

366
00:14:58,959 --> 00:15:01,519
ability to open the commitment

367
00:15:01,519 --> 00:15:04,480
from the series

368
00:15:05,600 --> 00:15:08,720
so how can we do it so first of all

369
00:15:08,720 --> 00:15:12,079
we use a specific commitment scheme with

370
00:15:12,079 --> 00:15:13,760
specific property

371
00:15:13,760 --> 00:15:18,399
we use a randomizable bit commitment

372
00:15:18,959 --> 00:15:21,040
so in the high level

373
00:15:21,040 --> 00:15:23,040
what does it mean

374
00:15:23,040 --> 00:15:25,279
so you can take a commitment to some

375
00:15:25,279 --> 00:15:28,399
message for example to zero

376
00:15:28,399 --> 00:15:30,079
and the opening of the commitment to

377
00:15:30,079 --> 00:15:31,680
zero is

378
00:15:31,680 --> 00:15:36,719
l this is a random string l

379
00:15:36,880 --> 00:15:37,839
now

380
00:15:37,839 --> 00:15:40,480
we can sample our

381
00:15:40,480 --> 00:15:43,279
and randomize the commitment

382
00:15:43,279 --> 00:15:45,360
and what is the output of the

383
00:15:45,360 --> 00:15:46,880
randomization

384
00:15:46,880 --> 00:15:49,279
is the commitment to the same message we

385
00:15:49,279 --> 00:15:52,560
have the same message here zero but now

386
00:15:52,560 --> 00:15:56,639
the opening is l so out so we don't know

387
00:15:56,639 --> 00:16:00,160
l but we know r so if we can

388
00:16:00,160 --> 00:16:01,759
open

389
00:16:01,759 --> 00:16:04,160
the new commitment

390
00:16:04,160 --> 00:16:07,360
we will get x so l and then we can go

391
00:16:07,360 --> 00:16:09,199
back and extract

392
00:16:09,199 --> 00:16:11,680
an extract l which is the opening of the

393
00:16:11,680 --> 00:16:14,240
original commitment so this is the high

394
00:16:14,240 --> 00:16:16,320
level of the idea

395
00:16:16,320 --> 00:16:18,800
so let's see how it works

396
00:16:18,800 --> 00:16:20,959
so note that this is a toy example and

397
00:16:20,959 --> 00:16:23,759
this is not an anti-complex language

398
00:16:23,759 --> 00:16:25,519
and this language is

399
00:16:25,519 --> 00:16:26,880
basically

400
00:16:26,880 --> 00:16:29,199
commitments to zero

401
00:16:29,199 --> 00:16:31,040
so the prover has some

402
00:16:31,040 --> 00:16:32,959
the statement of the approval is a

403
00:16:32,959 --> 00:16:35,199
commitment to zero and the opening of

404
00:16:35,199 --> 00:16:38,000
the commitment to of the previous

405
00:16:38,000 --> 00:16:40,959
substring x

406
00:16:41,680 --> 00:16:44,399
in addition in the crs we have

407
00:16:44,399 --> 00:16:48,079
commitment to zero and the opening is l

408
00:16:48,079 --> 00:16:48,800
so

409
00:16:48,800 --> 00:16:52,000
remember we need to guess l l is our

410
00:16:52,000 --> 00:16:54,800
proof to the judge so how the extractor

411
00:16:54,800 --> 00:16:57,040
can use the vector service

412
00:16:57,040 --> 00:17:01,040
to open and get ill

413
00:17:01,040 --> 00:17:02,320
so let's see

414
00:17:02,320 --> 00:17:04,880
so now what the extractor can do so the

415
00:17:04,880 --> 00:17:08,079
excito samples out

416
00:17:08,079 --> 00:17:09,439
and take the commit and takes the

417
00:17:09,439 --> 00:17:11,679
commitment from the crs

418
00:17:11,679 --> 00:17:15,679
and we randomize the commitment

419
00:17:16,000 --> 00:17:18,799
and now this will be the new statement

420
00:17:18,799 --> 00:17:20,559
of the extractor

421
00:17:20,559 --> 00:17:22,640
so c hat now is the segment of the

422
00:17:22,640 --> 00:17:25,280
extractor

423
00:17:25,280 --> 00:17:29,360
and the x factor generates a music

424
00:17:29,360 --> 00:17:33,200
of c hat and sends it to the backdoor

425
00:17:33,200 --> 00:17:35,679
service to the malicious authority

426
00:17:35,679 --> 00:17:37,840
in the malicious authority sent to the

427
00:17:37,840 --> 00:17:39,600
extractor back

428
00:17:39,600 --> 00:17:43,039
the opening the weakness elk so

429
00:17:43,039 --> 00:17:43,840
now

430
00:17:43,840 --> 00:17:47,280
the extractor can extract l

431
00:17:47,280 --> 00:17:50,480
and this is the proof

432
00:17:50,480 --> 00:17:52,000
to the judge

433
00:17:52,000 --> 00:17:54,640
so the exact or sent to the judge

434
00:17:54,640 --> 00:17:56,080
l and

435
00:17:56,080 --> 00:17:58,880
of course the commitment from the cls

436
00:17:58,880 --> 00:18:01,600
and the judge just need to check if this

437
00:18:01,600 --> 00:18:05,360
is a valid opening of the commitment

438
00:18:05,360 --> 00:18:09,280
and output corrupted theory

439
00:18:09,360 --> 00:18:11,600
so accountability followed from perfect

440
00:18:11,600 --> 00:18:14,480
randomization and why

441
00:18:14,480 --> 00:18:16,320
because the malicious authority the

442
00:18:16,320 --> 00:18:18,000
backdoor service

443
00:18:18,000 --> 00:18:21,120
cannot distinguish that

444
00:18:21,120 --> 00:18:23,919
the string exo al

445
00:18:23,919 --> 00:18:24,799
is

446
00:18:24,799 --> 00:18:26,640
basically

447
00:18:26,640 --> 00:18:28,160
contained

448
00:18:28,160 --> 00:18:30,320
the opening of the commitment from the

449
00:18:30,320 --> 00:18:31,440
cls

450
00:18:31,440 --> 00:18:33,360
because it's identically distributed as

451
00:18:33,360 --> 00:18:35,919
a fresh random string

452
00:18:35,919 --> 00:18:36,880
so

453
00:18:36,880 --> 00:18:39,679
the background service will answer this

454
00:18:39,679 --> 00:18:40,880
query

455
00:18:40,880 --> 00:18:43,120
in addition c hat

456
00:18:43,120 --> 00:18:45,919
it's a valid statement right it's a

457
00:18:45,919 --> 00:18:49,039
statement to zero this is the language

458
00:18:49,039 --> 00:18:50,240
it will be

459
00:18:50,240 --> 00:18:53,520
a valid proof it will be fine

460
00:18:53,520 --> 00:18:55,600
so the malicious authority

461
00:18:55,600 --> 00:18:58,240
will answer to the extracto

462
00:18:58,240 --> 00:19:01,440
so we have accountability for from

463
00:19:01,440 --> 00:19:03,440
perfectly randomization

464
00:19:03,440 --> 00:19:05,919
and we have definitions we what is

465
00:19:05,919 --> 00:19:08,080
defamation feed information free says

466
00:19:08,080 --> 00:19:11,600
that we cannot blame

467
00:19:11,600 --> 00:19:13,600
and honest party we cannot blame and

468
00:19:13,600 --> 00:19:15,760
honest authority so why we have

469
00:19:15,760 --> 00:19:18,720
defamation free definition three follows

470
00:19:18,720 --> 00:19:20,480
from the security of the commitment

471
00:19:20,480 --> 00:19:23,039
because we cannot just without any help

472
00:19:23,039 --> 00:19:26,080
open commitments

473
00:19:27,280 --> 00:19:29,919
so this was the high level of the idea

474
00:19:29,919 --> 00:19:31,679
of our construction

475
00:19:31,679 --> 00:19:33,840
but of course i cannot explain all the

476
00:19:33,840 --> 00:19:36,640
details so i will give you a brief of

477
00:19:36,640 --> 00:19:38,720
some challenges

478
00:19:38,720 --> 00:19:41,120
and you can go to the paper and find all

479
00:19:41,120 --> 00:19:44,160
the details in the paper

480
00:19:44,160 --> 00:19:46,000
so first in the paper we extend this

481
00:19:46,000 --> 00:19:49,200
idea to an empty complete problem

482
00:19:49,200 --> 00:19:51,039
in the major challenge that we didn't

483
00:19:51,039 --> 00:19:53,200
talk about it is

484
00:19:53,200 --> 00:19:56,480
how the extractor can generate a music

485
00:19:56,480 --> 00:19:58,480
while the extractor doesn't know the

486
00:19:58,480 --> 00:20:01,760
weakness so i will remind you

487
00:20:01,760 --> 00:20:04,720
so let's see the extractor has

488
00:20:04,720 --> 00:20:07,200
new statement what is the statement

489
00:20:07,200 --> 00:20:09,840
commitment to zero and the witness is

490
00:20:09,840 --> 00:20:13,440
elk so r but the extractor knows only

491
00:20:13,440 --> 00:20:16,159
the value of r the x factor doesn't know

492
00:20:16,159 --> 00:20:18,320
l so the extractor doesn't know the

493
00:20:18,320 --> 00:20:21,280
value of x so huh so the factor doesn't

494
00:20:21,280 --> 00:20:25,280
under weakness so how can they start to

495
00:20:25,280 --> 00:20:26,720
generate

496
00:20:26,720 --> 00:20:27,919
genetic

497
00:20:27,919 --> 00:20:30,640
this is a major challenge that

498
00:20:30,640 --> 00:20:32,000
we

499
00:20:32,000 --> 00:20:36,640
show how to construct it in the paper

500
00:20:37,120 --> 00:20:41,120
and the last challenge i will mention is

501
00:20:41,120 --> 00:20:45,039
that the high level of our approach is

502
00:20:45,039 --> 00:20:47,919
to force the authority to add more

503
00:20:47,919 --> 00:20:49,520
information

504
00:20:49,520 --> 00:20:51,120
to the service

505
00:20:51,120 --> 00:20:53,679
however we have a problem here right

506
00:20:53,679 --> 00:20:55,840
because if the authority is a malicious

507
00:20:55,840 --> 00:20:56,880
party

508
00:20:56,880 --> 00:20:59,039
we need something we need somehow to

509
00:20:59,039 --> 00:20:59,919
check

510
00:20:59,919 --> 00:21:00,640
that

511
00:21:00,640 --> 00:21:03,360
the additional information

512
00:21:03,360 --> 00:21:05,840
is valid is okay

513
00:21:05,840 --> 00:21:07,600
because maybe the commitment to zero is

514
00:21:07,600 --> 00:21:09,919
a commitment to one or a commitment to

515
00:21:09,919 --> 00:21:12,000
garbage or just garbage and not

516
00:21:12,000 --> 00:21:14,799
commitment to anything

517
00:21:14,799 --> 00:21:18,400
and we cannot use music since music will

518
00:21:18,400 --> 00:21:20,240
require crs

519
00:21:20,240 --> 00:21:23,840
and so it's circular program

520
00:21:23,840 --> 00:21:26,559
so again all the details in the paper

521
00:21:26,559 --> 00:21:30,360
you can go and read

522
00:21:30,640 --> 00:21:32,799
now i want to give a brief of more

523
00:21:32,799 --> 00:21:34,960
results

524
00:21:34,960 --> 00:21:37,919
and as i said before we extend

525
00:21:37,919 --> 00:21:40,400
accountability and we study mutability

526
00:21:40,400 --> 00:21:44,919
also for two-party computation

527
00:21:46,880 --> 00:21:49,360
and we all know that we cannot achieve

528
00:21:49,360 --> 00:21:51,679
malicious two-round two-party

529
00:21:51,679 --> 00:21:54,960
computation in the plain model without

530
00:21:54,960 --> 00:21:58,880
any crs or any trusted setup and we do

531
00:21:58,880 --> 00:22:01,280
know that in the crs model we can

532
00:22:01,280 --> 00:22:03,760
achieve malicious two-round two-party

533
00:22:03,760 --> 00:22:06,400
computation but again we have the

534
00:22:06,400 --> 00:22:08,159
problem that if we have a corrupted

535
00:22:08,159 --> 00:22:10,799
authority who generates the cms then

536
00:22:10,799 --> 00:22:12,960
the authority can recover

537
00:22:12,960 --> 00:22:16,000
privacy information

538
00:22:16,640 --> 00:22:19,440
so can we achieve accountability in cls

539
00:22:19,440 --> 00:22:24,240
generation for two-party computation

540
00:22:24,799 --> 00:22:27,679
so first we extend the definition and we

541
00:22:27,679 --> 00:22:29,200
introduce the definition of

542
00:22:29,200 --> 00:22:33,840
accountability for two-party computation

543
00:22:34,640 --> 00:22:35,600
and

544
00:22:35,600 --> 00:22:37,039
in two-party computation we have

545
00:22:37,039 --> 00:22:39,280
something interesting in non-interactive

546
00:22:39,280 --> 00:22:41,280
zero knowledge we have a single message

547
00:22:41,280 --> 00:22:43,679
between the pogba and the verifier but

548
00:22:43,679 --> 00:22:44,480
in

549
00:22:44,480 --> 00:22:46,799
two rounds we have

550
00:22:46,799 --> 00:22:48,960
two rounds we have two messages

551
00:22:48,960 --> 00:22:52,480
so maybe the authority also control one

552
00:22:52,480 --> 00:22:55,840
of the parties and not only

553
00:22:55,840 --> 00:22:59,760
control of the generation of the cra

554
00:22:59,760 --> 00:23:02,400
so the authority can be active during

555
00:23:02,400 --> 00:23:04,320
the protocol

556
00:23:04,320 --> 00:23:07,280
and we ask if we can

557
00:23:07,280 --> 00:23:09,440
guarantee resultability even in this

558
00:23:09,440 --> 00:23:12,320
case so we call it we call this case

559
00:23:12,320 --> 00:23:15,600
storm inventability

560
00:23:16,000 --> 00:23:19,039
we have two results for ot

561
00:23:19,039 --> 00:23:21,200
the third is the first result is

562
00:23:21,200 --> 00:23:23,360
assuming io

563
00:23:23,360 --> 00:23:25,280
we can construct

564
00:23:25,280 --> 00:23:28,720
ot that satisfy strong discountability

565
00:23:28,720 --> 00:23:32,080
and deformation free in serious model

566
00:23:32,080 --> 00:23:34,320
and assuming standard assumptions

567
00:23:34,320 --> 00:23:35,280
we can

568
00:23:35,280 --> 00:23:37,520
construct two round malicious

569
00:23:37,520 --> 00:23:40,320
ot in the service model that satisfy

570
00:23:40,320 --> 00:23:42,880
weak accountability which is

571
00:23:42,880 --> 00:23:45,679
when the authority can control only the

572
00:23:45,679 --> 00:23:48,960
generation of the service

573
00:23:48,960 --> 00:23:52,000
and for two-party computation we have an

574
00:23:52,000 --> 00:23:54,640
impossibility with loss that says that

575
00:23:54,640 --> 00:23:58,000
there exists a two-party functionality

576
00:23:58,000 --> 00:23:59,760
that

577
00:23:59,760 --> 00:24:01,840
does not exist

578
00:24:01,840 --> 00:24:03,679
any protocol that can satisfy

579
00:24:03,679 --> 00:24:07,039
countability even weak accountability

580
00:24:07,039 --> 00:24:09,279
and we also have positive results that

581
00:24:09,279 --> 00:24:11,919
we have a large class of function that

582
00:24:11,919 --> 00:24:14,720
assuming standard assumption we can

583
00:24:14,720 --> 00:24:17,440
construct accountability we can

584
00:24:17,440 --> 00:24:19,039
construct a protocol that satisfy

585
00:24:19,039 --> 00:24:23,200
accountability and deformation free

586
00:24:24,080 --> 00:24:25,679
thank you for the listening and have a

587
00:24:25,679 --> 00:24:28,919
good day

