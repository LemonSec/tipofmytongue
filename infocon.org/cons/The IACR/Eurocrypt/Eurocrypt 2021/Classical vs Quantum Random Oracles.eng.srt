1
00:00:01,040 --> 00:00:03,919
hello everyone i'm takashi today i will

2
00:00:03,919 --> 00:00:06,160
talk about classical versus quantum

3
00:00:06,160 --> 00:00:09,040
realm oracles this is a joint work with

4
00:00:09,040 --> 00:00:11,919
mark gentry

5
00:00:12,000 --> 00:00:14,960
the random org model rom was introduced

6
00:00:14,960 --> 00:00:18,240
by pillar and roger in 93

7
00:00:18,240 --> 00:00:20,800
this model is the idealization of

8
00:00:20,800 --> 00:00:22,960
cryptographic hash functions

9
00:00:22,960 --> 00:00:24,080
in the rom

10
00:00:24,080 --> 00:00:26,160
some random function h

11
00:00:26,160 --> 00:00:28,880
is randomly chosen at the beginning of

12
00:00:28,880 --> 00:00:32,079
security games and then adverti is

13
00:00:32,079 --> 00:00:33,840
allowed to make

14
00:00:33,840 --> 00:00:37,600
oracle access to the random function

15
00:00:37,600 --> 00:00:39,200
and the rom

16
00:00:39,200 --> 00:00:42,239
is very useful for analyzing practical

17
00:00:42,239 --> 00:00:44,480
cryptographic schemes so this has been

18
00:00:44,480 --> 00:00:46,160
used uh

19
00:00:46,160 --> 00:00:50,398
for a rising variety of constructions

20
00:00:51,360 --> 00:00:53,840
the quantum runway model qram is a

21
00:00:53,840 --> 00:00:56,320
quantum version of the rom

22
00:00:56,320 --> 00:00:59,680
introduced by bonnie ethel in 2011.

23
00:00:59,680 --> 00:01:02,160
uh the difference from the original rom

24
00:01:02,160 --> 00:01:05,600
is that in the qram otherwise allowed to

25
00:01:05,600 --> 00:01:07,280
make quantum coverage to the random

26
00:01:07,280 --> 00:01:09,200
worker that is

27
00:01:09,200 --> 00:01:11,920
it can query a quantum server position

28
00:01:11,920 --> 00:01:15,119
of input and then the oracle returns as

29
00:01:15,119 --> 00:01:17,680
output in superposition

30
00:01:17,680 --> 00:01:19,759
and the reason why we should

31
00:01:19,759 --> 00:01:21,360
consider

32
00:01:21,360 --> 00:01:24,640
such a quantum access to the oracle is

33
00:01:24,640 --> 00:01:25,920
that

34
00:01:25,920 --> 00:01:27,759
the random oracle

35
00:01:27,759 --> 00:01:28,640
is

36
00:01:28,640 --> 00:01:31,759
usually instantiated with

37
00:01:31,759 --> 00:01:32,720
some

38
00:01:32,720 --> 00:01:33,759
fixed

39
00:01:33,759 --> 00:01:36,400
cryptographic hash functions in the real

40
00:01:36,400 --> 00:01:38,079
world therefore

41
00:01:38,079 --> 00:01:40,960
uh if adversary has a quantum computer

42
00:01:40,960 --> 00:01:42,399
then it can

43
00:01:42,399 --> 00:01:45,439
quantumly evaluate the hash function and

44
00:01:45,439 --> 00:01:47,920
so this corresponds to quantum work

45
00:01:47,920 --> 00:01:50,640
reactive in the quantum runaway model

46
00:01:50,640 --> 00:01:55,520
and this is why we should study qram for

47
00:01:55,520 --> 00:01:59,520
ensuring post quantum security

48
00:02:00,079 --> 00:02:02,880
here i'd like to review what are known

49
00:02:02,880 --> 00:02:04,880
about the qram

50
00:02:04,880 --> 00:02:07,520
and pointed out by the first

51
00:02:07,520 --> 00:02:09,758
work by bonnie ether

52
00:02:09,758 --> 00:02:12,000
many proof techniques in the realm

53
00:02:12,000 --> 00:02:14,239
doesn't work in the queue rom at least

54
00:02:14,239 --> 00:02:16,000
in a straightforward manner

55
00:02:16,000 --> 00:02:18,080
those techniques include pre-image

56
00:02:18,080 --> 00:02:20,840
awareness and adaptive

57
00:02:20,840 --> 00:02:23,040
programmability therefore in the past

58
00:02:23,040 --> 00:02:25,440
decade new approved techniques in the

59
00:02:25,440 --> 00:02:28,000
qram have been developed and this line

60
00:02:28,000 --> 00:02:31,040
of research made a great success and now

61
00:02:31,040 --> 00:02:33,760
almost all major protocols in the rom

62
00:02:33,760 --> 00:02:36,480
are also proven secure in the qram and

63
00:02:36,480 --> 00:02:39,280
those protocols include fujisaki okamoto

64
00:02:39,280 --> 00:02:42,959
or aep fiat chemir and full domain hash

65
00:02:42,959 --> 00:02:46,160
and so now there is no known scheme and

66
00:02:46,160 --> 00:02:49,360
that is secure in rom but insecure in

67
00:02:49,360 --> 00:02:50,800
qram

68
00:02:50,800 --> 00:02:52,879
then it is natural to ask the foreign

69
00:02:52,879 --> 00:02:54,000
question

70
00:02:54,000 --> 00:02:56,879
does security in rome imply

71
00:02:56,879 --> 00:02:59,920
security in kurum this is our main

72
00:02:59,920 --> 00:03:02,920
question

73
00:03:04,319 --> 00:03:07,120
in this work we give both positive and

74
00:03:07,120 --> 00:03:09,519
negative answer to the question

75
00:03:09,519 --> 00:03:12,000
and our first result is a negative

76
00:03:12,000 --> 00:03:15,040
answer so we give the first separation

77
00:03:15,040 --> 00:03:17,599
between rom and q rom

78
00:03:17,599 --> 00:03:20,800
specifically or we can give contractions

79
00:03:20,800 --> 00:03:23,360
of pke and signature schemes

80
00:03:23,360 --> 00:03:26,319
that are secure in the rom but insecure

81
00:03:26,319 --> 00:03:27,920
in the qram

82
00:03:27,920 --> 00:03:31,200
and i remarked that a similar result was

83
00:03:31,200 --> 00:03:35,840
also shown in concurrent work by zhang

84
00:03:35,840 --> 00:03:36,879
and

85
00:03:36,879 --> 00:03:38,959
on the other hand we also give

86
00:03:38,959 --> 00:03:42,159
some positive results that specifically

87
00:03:42,159 --> 00:03:43,519
we give

88
00:03:43,519 --> 00:03:46,159
our some rom to kill rom lifting

89
00:03:46,159 --> 00:03:47,519
theorems

90
00:03:47,519 --> 00:03:49,440
under some conditions

91
00:03:49,440 --> 00:03:52,239
and we also show some applications of

92
00:03:52,239 --> 00:03:54,159
the lifting theorems

93
00:03:54,159 --> 00:03:56,720
to the setting of signatures and query

94
00:03:56,720 --> 00:03:59,720
complexity

95
00:04:01,519 --> 00:04:04,159
from now i will explain more technical

96
00:04:04,159 --> 00:04:07,280
details about our separation result

97
00:04:07,280 --> 00:04:10,640
uh and forgiving our separation we

98
00:04:10,640 --> 00:04:13,280
introduce a new primitive which we call

99
00:04:13,280 --> 00:04:15,920
proof of quantum access to random oracle

100
00:04:15,920 --> 00:04:17,600
poqro

101
00:04:17,600 --> 00:04:19,759
which captures the essence of the

102
00:04:19,759 --> 00:04:23,280
separation between rom and qram

103
00:04:23,280 --> 00:04:25,280
and intuitively

104
00:04:25,280 --> 00:04:27,919
this is the interactive protocol between

105
00:04:27,919 --> 00:04:31,360
improver and verifier available proves

106
00:04:31,360 --> 00:04:34,240
that it has a quantum access to random

107
00:04:34,240 --> 00:04:37,120
oracle to classical wi-fi

108
00:04:37,120 --> 00:04:39,280
more specifically

109
00:04:39,280 --> 00:04:43,040
the fire first generate pair of public

110
00:04:43,040 --> 00:04:45,919
key and secret key and send public key

111
00:04:45,919 --> 00:04:48,400
to the approver and then prover given

112
00:04:48,400 --> 00:04:50,800
public key and quantum access to random

113
00:04:50,800 --> 00:04:53,680
function that generates the proof pie

114
00:04:53,680 --> 00:04:54,639
and then

115
00:04:54,639 --> 00:04:57,199
sends the proof part to the fire and the

116
00:04:57,199 --> 00:04:59,520
provider requires a proof

117
00:04:59,520 --> 00:05:00,720
to

118
00:05:00,720 --> 00:05:03,280
output acceptance or rejection

119
00:05:03,280 --> 00:05:05,440
and we require completeness and

120
00:05:05,440 --> 00:05:08,160
soundness completeness means that if

121
00:05:08,160 --> 00:05:11,280
both parties work honestly then

122
00:05:11,280 --> 00:05:13,919
verify access with probability one and

123
00:05:13,919 --> 00:05:17,199
soundness means that if prover only has

124
00:05:17,199 --> 00:05:19,680
classical access to random function a

125
00:05:19,680 --> 00:05:22,320
simplifier asset with negligible

126
00:05:22,320 --> 00:05:24,000
probability

127
00:05:24,000 --> 00:05:26,720
and if you're familiar with the notion

128
00:05:26,720 --> 00:05:30,400
of proof of quantumness introduced by

129
00:05:30,400 --> 00:05:32,800
brackets guitar then

130
00:05:32,800 --> 00:05:33,759
you may

131
00:05:33,759 --> 00:05:37,280
find similarity with poq however the

132
00:05:37,280 --> 00:05:40,320
difference is that in poq

133
00:05:40,320 --> 00:05:43,120
we only require soundness against

134
00:05:43,120 --> 00:05:45,840
completely classical cheating river on

135
00:05:45,840 --> 00:05:49,919
the other hand uh in our poqro we

136
00:05:49,919 --> 00:05:53,199
require soundness against or even

137
00:05:53,199 --> 00:05:55,280
quantum cheating river

138
00:05:55,280 --> 00:05:57,120
with only classical

139
00:05:57,120 --> 00:05:59,360
rocket access so this is the difference

140
00:05:59,360 --> 00:06:02,080
from poq

141
00:06:03,360 --> 00:06:06,240
we give two constructions a poqro in

142
00:06:06,240 --> 00:06:08,800
this work and the first construction is

143
00:06:08,800 --> 00:06:11,360
based on the lw assumption

144
00:06:11,360 --> 00:06:13,919
interestingly this construction is

145
00:06:13,919 --> 00:06:16,479
actually exactly the same as the recent

146
00:06:16,479 --> 00:06:19,520
construction of poq by

147
00:06:19,520 --> 00:06:22,960
brackets key ether that is we just

148
00:06:22,960 --> 00:06:24,639
observed that the

149
00:06:24,639 --> 00:06:28,720
poq actually also satisfies soundness as

150
00:06:28,720 --> 00:06:30,479
poqro

151
00:06:30,479 --> 00:06:32,639
and because the construction is exactly

152
00:06:32,639 --> 00:06:33,680
the same

153
00:06:33,680 --> 00:06:36,479
i will not explain the detail but their

154
00:06:36,479 --> 00:06:39,280
protocol looks like the following

155
00:06:39,280 --> 00:06:41,600
the verifier first generates glo-free

156
00:06:41,600 --> 00:06:44,479
permutation f and sends after the period

157
00:06:44,479 --> 00:06:46,560
and then the prover run some quantum

158
00:06:46,560 --> 00:06:49,599
computation by using quantum access to h

159
00:06:49,599 --> 00:06:51,199
and finally gets

160
00:06:51,199 --> 00:06:54,080
some pair of classical strings m and d

161
00:06:54,080 --> 00:06:56,720
that satisfy this equation

162
00:06:56,720 --> 00:06:59,599
where x0 and x1

163
00:06:59,599 --> 00:07:01,440
are the glow of

164
00:07:01,440 --> 00:07:04,240
f and especially what is important in

165
00:07:04,240 --> 00:07:08,319
that we have a time of h of x 0 x or h

166
00:07:08,319 --> 00:07:10,560
of x 1 here

167
00:07:10,560 --> 00:07:12,080
therefore

168
00:07:12,080 --> 00:07:12,960
if

169
00:07:12,960 --> 00:07:15,599
a cheating period only has classical

170
00:07:15,599 --> 00:07:17,759
access to random oracle

171
00:07:17,759 --> 00:07:18,560
then

172
00:07:18,560 --> 00:07:22,240
this x or is uniformly random unless the

173
00:07:22,240 --> 00:07:26,240
other box requires both x0 and x1

174
00:07:26,240 --> 00:07:27,759
however

175
00:07:27,759 --> 00:07:30,080
it can query both of them only with

176
00:07:30,080 --> 00:07:32,560
negligible probability by their claw

177
00:07:32,560 --> 00:07:33,599
freeness

178
00:07:33,599 --> 00:07:36,560
therefore if prover cheating approver

179
00:07:36,560 --> 00:07:38,319
only has classical access to random

180
00:07:38,319 --> 00:07:41,039
oracle then this time looks

181
00:07:41,039 --> 00:07:42,800
random and

182
00:07:42,800 --> 00:07:43,919
therefore

183
00:07:43,919 --> 00:07:46,080
it is difficult to generate m and d that

184
00:07:46,080 --> 00:07:47,440
satisfies

185
00:07:47,440 --> 00:07:50,240
this equation with high probability

186
00:07:50,240 --> 00:07:52,400
therefore uh

187
00:07:52,400 --> 00:07:55,199
this gives the separation between

188
00:07:55,199 --> 00:07:58,599
rom and qram

189
00:07:59,360 --> 00:08:02,879
and by using poqr uh we can easily get

190
00:08:02,879 --> 00:08:06,000
uh rom-current separations for signature

191
00:08:06,000 --> 00:08:08,479
and pk schemes and for example i will

192
00:08:08,479 --> 00:08:11,759
explain uh the case of signatures

193
00:08:11,759 --> 00:08:14,800
let pi sig be your euf theme is secure

194
00:08:14,800 --> 00:08:16,080
signature scheme

195
00:08:16,080 --> 00:08:19,280
and then consider modify scheme pi prime

196
00:08:19,280 --> 00:08:21,360
c through the signing algorithm to

197
00:08:21,360 --> 00:08:24,479
return the secret key if the message is

198
00:08:24,479 --> 00:08:26,960
valid peer cure proof

199
00:08:26,960 --> 00:08:29,199
and this modification doesn't affect

200
00:08:29,199 --> 00:08:32,399
security in the rom because by the times

201
00:08:32,399 --> 00:08:34,159
of poqro

202
00:08:34,159 --> 00:08:36,559
other battery in the rom cannot find

203
00:08:36,559 --> 00:08:39,760
valid poker proof on the other hand uh

204
00:08:39,760 --> 00:08:41,839
this modification makes the protocol

205
00:08:41,839 --> 00:08:44,000
completely insecure in the queue rom

206
00:08:44,000 --> 00:08:46,560
because the other three in the qram can

207
00:08:46,560 --> 00:08:47,600
find

208
00:08:47,600 --> 00:08:48,560
a

209
00:08:48,560 --> 00:08:51,360
valid procure proof by the completeness

210
00:08:51,360 --> 00:08:55,120
of poqro therefore it can just queries

211
00:08:55,120 --> 00:08:56,640
uh such a

212
00:08:56,640 --> 00:08:59,680
valid poqr proof to get the secret key

213
00:08:59,680 --> 00:09:02,240
to completely break the qe

214
00:09:02,240 --> 00:09:04,000
therefore this gives

215
00:09:04,000 --> 00:09:07,279
example of the separation of for ef sim

216
00:09:07,279 --> 00:09:09,440
signatures

217
00:09:09,440 --> 00:09:11,440
and similar separation

218
00:09:11,440 --> 00:09:14,000
is possible for in the cc apke by

219
00:09:14,000 --> 00:09:17,120
embedding poker verification into the

220
00:09:17,120 --> 00:09:19,279
decryption oracle

221
00:09:19,279 --> 00:09:22,399
and here we observe that the

222
00:09:22,399 --> 00:09:26,080
those separations rely on the fact that

223
00:09:26,080 --> 00:09:28,240
there's an oracle that uses secret

224
00:09:28,240 --> 00:09:30,959
information like signing and decryption

225
00:09:30,959 --> 00:09:32,240
records

226
00:09:32,240 --> 00:09:35,279
and so this technique is not applicable

227
00:09:35,279 --> 00:09:38,160
to euf nma signatures where there is no

228
00:09:38,160 --> 00:09:42,399
signing key signing queries and

229
00:09:42,399 --> 00:09:44,720
in cppke where there is no decryption

230
00:09:44,720 --> 00:09:46,160
queries

231
00:09:46,160 --> 00:09:48,800
and the reason why we need oracle with

232
00:09:48,800 --> 00:09:51,040
secret information is that

233
00:09:51,040 --> 00:09:53,920
the lwe based poqro

234
00:09:53,920 --> 00:09:57,200
or needs a secret key for the

235
00:09:57,200 --> 00:09:58,720
verification

236
00:09:58,720 --> 00:10:01,839
therefore if we have publicly verified

237
00:10:01,839 --> 00:10:05,519
our poqro or where specification can be

238
00:10:05,519 --> 00:10:08,560
done publicly then or we can

239
00:10:08,560 --> 00:10:10,160
uh extend

240
00:10:10,160 --> 00:10:13,839
those separations to euf and nma and in

241
00:10:13,839 --> 00:10:16,160
cpa pk case

242
00:10:16,160 --> 00:10:20,000
and therefore next we study

243
00:10:20,000 --> 00:10:23,120
uh constructions of publicly verifiable

244
00:10:23,120 --> 00:10:25,839
poqro

245
00:10:26,000 --> 00:10:28,959
for constructing publicly verifiable

246
00:10:28,959 --> 00:10:32,480
poqro we rely on equivocal correlation

247
00:10:32,480 --> 00:10:35,120
resistant hash e c r h introduced by

248
00:10:35,120 --> 00:10:36,720
ammos ether

249
00:10:36,720 --> 00:10:39,600
eclh is a function f that satisfies the

250
00:10:39,600 --> 00:10:41,279
foreign two properties

251
00:10:41,279 --> 00:10:43,680
the first is the collision resistance

252
00:10:43,680 --> 00:10:45,360
that just means that one cannot find the

253
00:10:45,360 --> 00:10:48,279
collision if f and the second is

254
00:10:48,279 --> 00:10:49,920
equivocality

255
00:10:49,920 --> 00:10:53,040
which means that all one can sample

256
00:10:53,040 --> 00:10:54,560
image y

257
00:10:54,560 --> 00:10:57,360
along with some quantum state s k and

258
00:10:57,360 --> 00:10:59,600
that enables one to find

259
00:10:59,600 --> 00:11:03,600
a pre-image x such that f of x equals y

260
00:11:03,600 --> 00:11:05,680
and p of x equal b

261
00:11:05,680 --> 00:11:08,240
for either of b equals zero and one or

262
00:11:08,240 --> 00:11:10,480
where p is some predicate that is very

263
00:11:10,480 --> 00:11:13,920
balanced uh here we the very balance

264
00:11:13,920 --> 00:11:17,040
means that the sizes of images of zero

265
00:11:17,040 --> 00:11:18,800
and one are not

266
00:11:18,800 --> 00:11:20,240
too different

267
00:11:20,240 --> 00:11:22,240
and here i remark

268
00:11:22,240 --> 00:11:24,959
that uh we don't claim that

269
00:11:24,959 --> 00:11:28,800
one can find uh for images of

270
00:11:28,800 --> 00:11:31,120
the images with p of x equals zero and

271
00:11:31,120 --> 00:11:34,160
one simultaneous three or rather uh sk

272
00:11:34,160 --> 00:11:38,320
only in everyone to find either of them

273
00:11:38,320 --> 00:11:41,920
however the point is that the b can be

274
00:11:41,920 --> 00:11:44,240
determined adaptably

275
00:11:44,240 --> 00:11:46,160
and i remember that this is a unique

276
00:11:46,160 --> 00:11:49,279
quantum capability because if

277
00:11:49,279 --> 00:11:51,839
this can be done classically then by

278
00:11:51,839 --> 00:11:54,399
rewinding or we can break collision

279
00:11:54,399 --> 00:11:56,320
resistance

280
00:11:56,320 --> 00:11:58,480
and in the work of ammo ether they

281
00:11:58,480 --> 00:11:59,920
constructed

282
00:11:59,920 --> 00:12:01,519
ecrh

283
00:12:01,519 --> 00:12:02,320
for

284
00:12:02,320 --> 00:12:04,880
the case of predicate is said to be the

285
00:12:04,880 --> 00:12:08,160
least significant bit of x

286
00:12:08,160 --> 00:12:10,320
relative to some artificial classical

287
00:12:10,320 --> 00:12:13,440
oracle and we observe that the their

288
00:12:13,440 --> 00:12:17,279
proof naturally extends to arbitrary uh

289
00:12:17,279 --> 00:12:20,320
predicate as long as pes are very

290
00:12:20,320 --> 00:12:21,519
balanced

291
00:12:21,519 --> 00:12:24,639
especially we consider to set

292
00:12:24,639 --> 00:12:27,760
the predicate by using random oracle or

293
00:12:27,760 --> 00:12:31,200
with one bit output

294
00:12:32,480 --> 00:12:36,959
by using a ecrh for such a random oracle

295
00:12:36,959 --> 00:12:39,600
predicate or we construct publicly

296
00:12:39,600 --> 00:12:42,560
verifiable qro as follows and the first

297
00:12:42,560 --> 00:12:43,519
we

298
00:12:43,519 --> 00:12:46,240
construct foreground version of

299
00:12:46,240 --> 00:12:47,839
the poqro

300
00:12:47,839 --> 00:12:50,000
in the protocol the verifier first is

301
00:12:50,000 --> 00:12:54,000
generate eclhf and sends f to the prover

302
00:12:54,000 --> 00:12:56,639
and then river generates the pair of y

303
00:12:56,639 --> 00:12:59,920
and sk and offend y and the fire

304
00:12:59,920 --> 00:13:02,079
randomly picks a

305
00:13:02,079 --> 00:13:03,519
challenge b

306
00:13:03,519 --> 00:13:06,480
and send b to the prover and then the

307
00:13:06,480 --> 00:13:10,160
river or finds x such that f of x equals

308
00:13:10,160 --> 00:13:12,920
y and h of x equal b by using the

309
00:13:12,920 --> 00:13:17,600
equivocarity of eclh and then sends x to

310
00:13:17,600 --> 00:13:18,320
the

311
00:13:18,320 --> 00:13:20,480
fire and then the verifier checks if

312
00:13:20,480 --> 00:13:21,279
this

313
00:13:21,279 --> 00:13:24,160
equation actually holds

314
00:13:24,160 --> 00:13:26,320
and the completeness is clear from the

315
00:13:26,320 --> 00:13:29,040
description and the soundness can be

316
00:13:29,040 --> 00:13:30,639
seen as follows

317
00:13:30,639 --> 00:13:34,800
by the collision resistance of f

318
00:13:34,800 --> 00:13:37,680
if p only has graphical access to

319
00:13:37,680 --> 00:13:41,519
h then it can know the value of h of x

320
00:13:41,519 --> 00:13:44,160
for at most one pre-image of x

321
00:13:44,160 --> 00:13:45,760
of y

322
00:13:45,760 --> 00:13:48,160
except for negligible probability and

323
00:13:48,160 --> 00:13:49,040
then

324
00:13:49,040 --> 00:13:51,440
the probability that this particular

325
00:13:51,440 --> 00:13:53,440
value of h of x

326
00:13:53,440 --> 00:13:54,959
is equal to

327
00:13:54,959 --> 00:13:55,680
b

328
00:13:55,680 --> 00:13:58,560
is one half because b is randomly chosen

329
00:13:58,560 --> 00:14:00,240
by the b fire

330
00:14:00,240 --> 00:14:03,279
therefore the fire axis with probability

331
00:14:03,279 --> 00:14:06,240
at most one-half plus negligible and

332
00:14:06,240 --> 00:14:09,040
this time with error can be amplified

333
00:14:09,040 --> 00:14:11,040
to negligible or by

334
00:14:11,040 --> 00:14:12,000
uh

335
00:14:12,000 --> 00:14:14,079
prior repetition

336
00:14:14,079 --> 00:14:16,399
and here i

337
00:14:16,399 --> 00:14:20,000
observed that the third round message b

338
00:14:20,000 --> 00:14:22,560
is just public kind so by using the

339
00:14:22,560 --> 00:14:24,240
standard technique of viet xiaomi

340
00:14:24,240 --> 00:14:27,279
transformation or we can reduce the noun

341
00:14:27,279 --> 00:14:31,279
the number round of the protocol

342
00:14:31,279 --> 00:14:33,440
if we consider the power replication

343
00:14:33,440 --> 00:14:35,839
version of the previous

344
00:14:35,839 --> 00:14:37,839
protocol and then

345
00:14:37,839 --> 00:14:41,519
we derive the challenges b1 to bn by

346
00:14:41,519 --> 00:14:43,120
using

347
00:14:43,120 --> 00:14:45,839
another random oracle g and then we can

348
00:14:45,839 --> 00:14:47,279
compress

349
00:14:47,279 --> 00:14:50,240
the protocol to two round protocol and

350
00:14:50,240 --> 00:14:52,639
by the standard technique

351
00:14:52,639 --> 00:14:54,959
we can reduce the soundness of this

352
00:14:54,959 --> 00:14:57,360
two-round version to soundness a foreign

353
00:14:57,360 --> 00:14:58,560
version

354
00:14:58,560 --> 00:15:02,560
and now we obtain a two-round publicly

355
00:15:02,560 --> 00:15:03,839
verifiable

356
00:15:03,839 --> 00:15:06,399
poqro

357
00:15:06,399 --> 00:15:09,440
from ecrh

358
00:15:09,600 --> 00:15:12,160
next i explain how to use publicly

359
00:15:12,160 --> 00:15:15,680
verifiable poqro to give separations of

360
00:15:15,680 --> 00:15:18,320
rom and qram uh for

361
00:15:18,320 --> 00:15:21,600
in the cpu secure pke and euf enemy

362
00:15:21,600 --> 00:15:25,920
signatures uh for ncp secure pke uh the

363
00:15:25,920 --> 00:15:28,079
idea is similar to

364
00:15:28,079 --> 00:15:31,759
the case of in the cc secure pke but the

365
00:15:31,759 --> 00:15:33,199
difference is that

366
00:15:33,199 --> 00:15:35,120
now the verification can be done

367
00:15:35,120 --> 00:15:37,440
publicly so we can embed the

368
00:15:37,440 --> 00:15:41,199
verification algorithm of poqro into the

369
00:15:41,199 --> 00:15:43,040
encryption algorithm

370
00:15:43,040 --> 00:15:45,040
of the pke rather than decryption

371
00:15:45,040 --> 00:15:48,320
algorithm therefore uh this naturally

372
00:15:48,320 --> 00:15:51,759
gives separation for individual security

373
00:15:51,759 --> 00:15:54,639
and similarly by embedding poq or

374
00:15:54,639 --> 00:15:57,120
verification into the verification

375
00:15:57,120 --> 00:15:59,600
algorithm of signature or we can get

376
00:15:59,600 --> 00:16:03,120
separation for euf nme signatures

377
00:16:03,120 --> 00:16:06,959
and here i remark that because

378
00:16:06,959 --> 00:16:10,000
the contraction of ecrh

379
00:16:10,000 --> 00:16:11,279
rely on

380
00:16:11,279 --> 00:16:14,000
some artificial graphical organ so those

381
00:16:14,000 --> 00:16:17,360
separations also rely on the same

382
00:16:17,360 --> 00:16:18,800
classical oracle

383
00:16:18,800 --> 00:16:20,639
therefore we don't have

384
00:16:20,639 --> 00:16:24,000
actual instantiation of such schemes but

385
00:16:24,000 --> 00:16:26,000
we can interpret these results as a

386
00:16:26,000 --> 00:16:28,399
negative evidence for rom to qram

387
00:16:28,399 --> 00:16:30,800
lifting theorem for those security

388
00:16:30,800 --> 00:16:33,199
notions

389
00:16:34,639 --> 00:16:37,920
next i would like to move on to our

390
00:16:37,920 --> 00:16:40,880
lifting theorem part so we give lifting

391
00:16:40,880 --> 00:16:42,800
theorem for

392
00:16:42,800 --> 00:16:45,279
what we call search type game

393
00:16:45,279 --> 00:16:48,079
which is described as follows the search

394
00:16:48,079 --> 00:16:50,240
type game is the interactive broadcast

395
00:16:50,240 --> 00:16:52,880
between quantum adversary and classical

396
00:16:52,880 --> 00:16:55,439
challenger

397
00:16:55,680 --> 00:16:58,160
where the classical challenge finally

398
00:16:58,160 --> 00:17:01,440
outputs acceptance or rejection

399
00:17:01,440 --> 00:17:04,319
and our listening theorem is stated as

400
00:17:04,319 --> 00:17:06,240
the forums

401
00:17:06,240 --> 00:17:08,240
let's cave in the number of challenges

402
00:17:08,240 --> 00:17:11,039
queries and then for any quantum

403
00:17:11,039 --> 00:17:14,160
polynomial time a making q quantum

404
00:17:14,160 --> 00:17:15,280
queries

405
00:17:15,280 --> 00:17:18,720
there exists quantum polynomial time b

406
00:17:18,720 --> 00:17:22,720
making k classical queries such that

407
00:17:22,720 --> 00:17:24,720
the probability that

408
00:17:24,720 --> 00:17:25,919
a

409
00:17:25,919 --> 00:17:28,319
lets challenge accept

410
00:17:28,319 --> 00:17:31,360
is upper bounded by 2 cubed plus 1 to

411
00:17:31,360 --> 00:17:34,559
the power of 2k times probability

412
00:17:34,559 --> 00:17:35,840
that b

413
00:17:35,840 --> 00:17:37,840
lets the challenge accept

414
00:17:37,840 --> 00:17:39,360
and especially

415
00:17:39,360 --> 00:17:40,240
when

416
00:17:40,240 --> 00:17:43,520
k is constant and q is polynomial

417
00:17:43,520 --> 00:17:44,880
then

418
00:17:44,880 --> 00:17:47,440
we have the following uh

419
00:17:47,440 --> 00:17:50,160
if the probability that b let

420
00:17:50,160 --> 00:17:52,880
challenge accept is negligible then

421
00:17:52,880 --> 00:17:54,480
uh the probability

422
00:17:54,480 --> 00:17:56,880
that a lets charge accept is also

423
00:17:56,880 --> 00:17:58,160
negligible

424
00:17:58,160 --> 00:18:01,919
and one can see that this corresponds to

425
00:18:01,919 --> 00:18:04,799
the security in the rom because b only

426
00:18:04,799 --> 00:18:06,880
makes graphical queries and this

427
00:18:06,880 --> 00:18:10,000
corresponds to security in the queue rom

428
00:18:10,000 --> 00:18:13,200
because a makes quantum queries so in

429
00:18:13,200 --> 00:18:15,840
the setting where challenger makes only

430
00:18:15,840 --> 00:18:17,679
constant number of queries

431
00:18:17,679 --> 00:18:20,160
this theorem can be seen as a

432
00:18:20,160 --> 00:18:22,720
listing theorem from rom security to the

433
00:18:22,720 --> 00:18:25,760
qram security

434
00:18:26,480 --> 00:18:29,280
and i would like to explain some queries

435
00:18:29,280 --> 00:18:31,039
of our written theorem

436
00:18:31,039 --> 00:18:34,080
and first uh we can see that there is no

437
00:18:34,080 --> 00:18:36,880
poql o or where the number of refined

438
00:18:36,880 --> 00:18:39,039
queries is constant

439
00:18:39,039 --> 00:18:42,320
uh remark that uh uh for both of our

440
00:18:42,320 --> 00:18:45,280
contractions uh the verifier makes super

441
00:18:45,280 --> 00:18:48,000
constant number of queries because we

442
00:18:48,000 --> 00:18:51,120
amplify the sounds error by using super

443
00:18:51,120 --> 00:18:54,880
constant number of uh power repetition

444
00:18:54,880 --> 00:18:58,160
and second for any nisk in rom food

445
00:18:58,160 --> 00:19:01,440
setup and verification algorithm make

446
00:19:01,440 --> 00:19:04,080
constant number of queries that is also

447
00:19:04,080 --> 00:19:06,799
sound in the queue rom and the typical

448
00:19:06,799 --> 00:19:09,520
example is fiat me nuke

449
00:19:09,520 --> 00:19:11,760
and we can show a similar lifting

450
00:19:11,760 --> 00:19:15,200
theorem for euf anime signatures

451
00:19:15,200 --> 00:19:18,400
unfortunately we cannot extend this to

452
00:19:18,400 --> 00:19:22,000
euf cma signatures or in such a general

453
00:19:22,000 --> 00:19:23,039
form

454
00:19:23,039 --> 00:19:26,080
on the other hand we give

455
00:19:26,080 --> 00:19:27,200
extend

456
00:19:27,200 --> 00:19:29,840
lifting film to ufc signatures with some

457
00:19:29,840 --> 00:19:32,640
additional conditions that are satisfied

458
00:19:32,640 --> 00:19:36,320
by fiat chamier and fd chicken shoes

459
00:19:36,320 --> 00:19:39,360
and their intuition behind that is that

460
00:19:39,360 --> 00:19:41,600
uh

461
00:19:41,679 --> 00:19:45,280
we we already know that there is a

462
00:19:45,280 --> 00:19:50,160
euf nma to euf cma lifting theorem for

463
00:19:50,160 --> 00:19:53,039
those signature schemes so we first

464
00:19:53,039 --> 00:19:56,880
apply our rom to qram lifting theorem

465
00:19:56,880 --> 00:19:59,200
for euf enemy

466
00:19:59,200 --> 00:20:01,919
security and then after that we apply

467
00:20:01,919 --> 00:20:03,919
this listing theorem to upgrade the

468
00:20:03,919 --> 00:20:07,200
security to uf theme security

469
00:20:07,200 --> 00:20:10,480
and we also obtain an extremely simple

470
00:20:10,480 --> 00:20:13,200
tool to get query lower bounds in the

471
00:20:13,200 --> 00:20:14,480
queue rom

472
00:20:14,480 --> 00:20:17,679
and for example we can reprove the

473
00:20:17,679 --> 00:20:20,640
optimality of global algorithm only in

474
00:20:20,640 --> 00:20:22,080
two lines

475
00:20:22,080 --> 00:20:25,039
so this is very simple and useful

476
00:20:25,039 --> 00:20:28,000
and the caveat is that this tool often

477
00:20:28,000 --> 00:20:30,320
gives non-tight bounds

478
00:20:30,320 --> 00:20:31,200
but

479
00:20:31,200 --> 00:20:33,760
we believe that this tool is useful when

480
00:20:33,760 --> 00:20:35,840
we are not interested in tight bound and

481
00:20:35,840 --> 00:20:38,960
we are only interested in giving

482
00:20:38,960 --> 00:20:39,679
a

483
00:20:39,679 --> 00:20:42,159
negligible upper bound which is often in

484
00:20:42,159 --> 00:20:46,480
the case of in the cryptography

485
00:20:46,880 --> 00:20:49,679
and finally i would like to explain uh

486
00:20:49,679 --> 00:20:52,559
our proof idea for the lifting theorem

487
00:20:52,559 --> 00:20:55,280
so the lifting theorem is described

488
00:20:55,280 --> 00:20:57,918
like this

489
00:20:58,960 --> 00:21:01,600
for explaining the proof idea

490
00:21:01,600 --> 00:21:04,240
let's first consider the classical

491
00:21:04,240 --> 00:21:06,400
version of the lifting theorem

492
00:21:06,400 --> 00:21:07,919
or where

493
00:21:07,919 --> 00:21:10,159
we only consider

494
00:21:10,159 --> 00:21:12,480
other three a that makes classical

495
00:21:12,480 --> 00:21:13,919
queries

496
00:21:13,919 --> 00:21:17,120
and i remark that this is still

497
00:21:17,120 --> 00:21:19,520
meaningful because

498
00:21:19,520 --> 00:21:22,000
a can make unbounded number of queries

499
00:21:22,000 --> 00:21:25,039
or whereas we can make only k queries

500
00:21:25,039 --> 00:21:26,880
which is the same number as the

501
00:21:26,880 --> 00:21:28,840
challenges

502
00:21:28,840 --> 00:21:32,240
queries and for proving this classical

503
00:21:32,240 --> 00:21:34,799
version the idea is the following

504
00:21:34,799 --> 00:21:38,080
for each i equal 1 to k

505
00:21:38,080 --> 00:21:41,840
b randomly guesses or when a queries

506
00:21:41,840 --> 00:21:44,799
challenges i query for the first time

507
00:21:44,799 --> 00:21:47,360
including the choice that a never query

508
00:21:47,360 --> 00:21:48,640
that

509
00:21:48,640 --> 00:21:53,039
then b embeds real random oracle values

510
00:21:53,039 --> 00:21:54,720
to their k

511
00:21:54,720 --> 00:21:57,919
guest queries by querying those queries

512
00:21:57,919 --> 00:21:59,200
to the real

513
00:21:59,200 --> 00:22:01,840
random oracle or while simulating other

514
00:22:01,840 --> 00:22:05,360
queries by using fake random oracle or

515
00:22:05,360 --> 00:22:06,400
that is

516
00:22:06,400 --> 00:22:09,520
simulated by b itself

517
00:22:09,520 --> 00:22:12,559
then as long as the gate is correct

518
00:22:12,559 --> 00:22:13,679
b

519
00:22:13,679 --> 00:22:15,360
correctly simulates

520
00:22:15,360 --> 00:22:16,640
the view of

521
00:22:16,640 --> 00:22:17,760
the a

522
00:22:17,760 --> 00:22:19,679
and the probability that the guess is

523
00:22:19,679 --> 00:22:22,799
correct is 1 over q plus 1 to the power

524
00:22:22,799 --> 00:22:24,000
of k

525
00:22:24,000 --> 00:22:26,559
therefore here is a reduction

526
00:22:26,559 --> 00:22:29,520
between the probability that a wins and

527
00:22:29,520 --> 00:22:32,799
b wins with the reduction loss of the

528
00:22:32,799 --> 00:22:36,159
factor of q plus 1 to the power of k

529
00:22:36,159 --> 00:22:37,200
and

530
00:22:37,200 --> 00:22:39,520
our idea is to generate this to the

531
00:22:39,520 --> 00:22:41,360
quantum case

532
00:22:41,360 --> 00:22:42,720
and when

533
00:22:42,720 --> 00:22:46,720
a is quantum a makes quantum queries an

534
00:22:46,720 --> 00:22:49,520
obvious problem is that because a query

535
00:22:49,520 --> 00:22:52,559
is a quantum so it is

536
00:22:52,559 --> 00:22:55,200
it is unclear how to embed

537
00:22:55,200 --> 00:22:59,120
classical random work values to those

538
00:22:59,120 --> 00:23:01,280
quantum queries

539
00:23:01,280 --> 00:23:04,480
and solution is to just measure those k

540
00:23:04,480 --> 00:23:06,240
guest queries

541
00:23:06,240 --> 00:23:07,120
and

542
00:23:07,120 --> 00:23:09,200
even though such a measurement

543
00:23:09,200 --> 00:23:10,159
may be

544
00:23:10,159 --> 00:23:11,120
uh

545
00:23:11,120 --> 00:23:13,679
noticed with non-negligible probability

546
00:23:13,679 --> 00:23:14,799
by a

547
00:23:14,799 --> 00:23:15,919
however

548
00:23:15,919 --> 00:23:16,720
uh

549
00:23:16,720 --> 00:23:19,520
by using the the the measure and the

550
00:23:19,520 --> 00:23:22,559
reproductive glamour introduced by don

551
00:23:22,559 --> 00:23:23,679
etta

552
00:23:23,679 --> 00:23:26,559
we can show that this works with slight

553
00:23:26,559 --> 00:23:30,080
reverse reduction loss of 2k plus 1 to

554
00:23:30,080 --> 00:23:32,720
the power 2k

555
00:23:32,720 --> 00:23:34,159
and this is

556
00:23:34,159 --> 00:23:36,880
the proof of the proof sketch of our

557
00:23:36,880 --> 00:23:39,600
living theorem

558
00:23:40,240 --> 00:23:42,799
this is the summaries right or we give

559
00:23:42,799 --> 00:23:46,159
the first separations between rom and

560
00:23:46,159 --> 00:23:47,360
qram

561
00:23:47,360 --> 00:23:50,640
and on the other hand we also give

562
00:23:50,640 --> 00:23:53,440
rom to qram lifting theorems

563
00:23:53,440 --> 00:23:54,400
for

564
00:23:54,400 --> 00:23:56,640
type games or with constant query

565
00:23:56,640 --> 00:23:58,080
challenges

566
00:23:58,080 --> 00:24:00,480
and we also give some applications of

567
00:24:00,480 --> 00:24:02,880
the listing theorem to signatures and

568
00:24:02,880 --> 00:24:05,120
query complexity

569
00:24:05,120 --> 00:24:07,440
this is the end of my talk thank you for

570
00:24:07,440 --> 00:24:10,440
listening

