1
00:00:00,880 --> 00:00:02,879
hi i am gianluca brienne and i am

2
00:00:02,879 --> 00:00:05,120
presenting the mother of all ligatures

3
00:00:05,120 --> 00:00:06,879
how to simulate noisy leakages via

4
00:00:06,879 --> 00:00:09,519
bonded leakage almost for free this is

5
00:00:09,519 --> 00:00:11,440
joint work with antonio fawono mateo

6
00:00:11,440 --> 00:00:14,240
brenski joao ribeiro mark simkin machias

7
00:00:14,240 --> 00:00:16,880
korsky and daniel venturi the security

8
00:00:16,880 --> 00:00:18,960
analysis of cryptographic primitives

9
00:00:18,960 --> 00:00:20,720
typically relies on the assumption that

10
00:00:20,720 --> 00:00:22,560
the underlying cigarettes are uniformly

11
00:00:22,560 --> 00:00:24,800
random to the eyes of the attacker

12
00:00:24,800 --> 00:00:26,640
in reality however this assumption may

13
00:00:26,640 --> 00:00:28,080
be false due to the presence of

14
00:00:28,080 --> 00:00:30,480
so-called such general attacks

15
00:00:30,480 --> 00:00:32,640
more formally suppose that we have a

16
00:00:32,640 --> 00:00:34,880
random variable x for example it may be

17
00:00:34,880 --> 00:00:36,719
a secret key the private randomness of

18
00:00:36,719 --> 00:00:38,719
some algorithm or in general something

19
00:00:38,719 --> 00:00:40,719
which should be kept private

20
00:00:40,719 --> 00:00:42,879
a leakage function for the variable x is

21
00:00:42,879 --> 00:00:44,800
defined as a factual f which takes as

22
00:00:44,800 --> 00:00:46,800
input as simple from the set x and

23
00:00:46,800 --> 00:00:49,039
outputs some binary string

24
00:00:49,039 --> 00:00:50,800
clearly it is impossible to achieve

25
00:00:50,800 --> 00:00:52,559
leakage resilience against arbitrary

26
00:00:52,559 --> 00:00:54,480
functions because for instance the

27
00:00:54,480 --> 00:00:56,800
attacker could choose the identity

28
00:00:56,800 --> 00:00:59,039
function thus obtaining the cigarette in

29
00:00:59,039 --> 00:00:59,920
full

30
00:00:59,920 --> 00:01:01,680
because of this we need to define some

31
00:01:01,680 --> 00:01:03,920
restrictions for example on the function

32
00:01:03,920 --> 00:01:05,360
family from which the attacker can

33
00:01:05,360 --> 00:01:07,439
choose the function before introducing

34
00:01:07,439 --> 00:01:09,520
the leakage models we need to talk about

35
00:01:09,520 --> 00:01:11,520
mine entropy intuitively the main

36
00:01:11,520 --> 00:01:13,360
entropy measures our details to guess

37
00:01:13,360 --> 00:01:16,159
the outcome of the random variable x

38
00:01:16,159 --> 00:01:18,080
given two random variables without the

39
00:01:18,080 --> 00:01:20,240
definition of conditional average male

40
00:01:20,240 --> 00:01:22,080
entropy of dorisatal

41
00:01:22,080 --> 00:01:23,680
because although being slightly

42
00:01:23,680 --> 00:01:25,439
counterintuitive at first it better

43
00:01:25,439 --> 00:01:27,600
captures the notion of residual entropy

44
00:01:27,600 --> 00:01:29,920
after learning the outcome of z

45
00:01:29,920 --> 00:01:31,840
indeed consider an example which

46
00:01:31,840 --> 00:01:34,000
compares this notion with a possibly

47
00:01:34,000 --> 00:01:35,600
more intuitive one

48
00:01:35,600 --> 00:01:37,520
in this case the random variable x is

49
00:01:37,520 --> 00:01:40,079
such that if the first bit is 0 then all

50
00:01:40,079 --> 00:01:42,720
the bits are 0 otherwise the other bits

51
00:01:42,720 --> 00:01:44,799
are uniformly random

52
00:01:44,799 --> 00:01:46,880
then with probability 1 over 2 it is

53
00:01:46,880 --> 00:01:48,799
possible to fully predict the outcome of

54
00:01:48,799 --> 00:01:51,280
x and with probability 1 over 2 again

55
00:01:51,280 --> 00:01:53,439
the outcome of x is completely random

56
00:01:53,439 --> 00:01:56,000
except for the first bit therefore the

57
00:01:56,000 --> 00:01:58,320
average of the residual main entropy

58
00:01:58,320 --> 00:02:00,399
after learning the first bit is n over

59
00:02:00,399 --> 00:02:01,759
two

60
00:02:01,759 --> 00:02:04,399
however an attacker has probability at

61
00:02:04,399 --> 00:02:06,159
least one over two of guessing the

62
00:02:06,159 --> 00:02:08,318
outcome of x just looking at the first

63
00:02:08,318 --> 00:02:10,318
bit and the notion of conditional

64
00:02:10,318 --> 00:02:12,400
average man entropy fully captures the

65
00:02:12,400 --> 00:02:14,400
setting by saying that the male entropy

66
00:02:14,400 --> 00:02:16,959
of x conditioned on b in average is

67
00:02:16,959 --> 00:02:19,680
approximately the same of one bit or in

68
00:02:19,680 --> 00:02:21,920
other words guessing the outcome of x is

69
00:02:21,920 --> 00:02:23,840
not harder than guessing the outcome of

70
00:02:23,840 --> 00:02:26,160
a single random bit

71
00:02:26,160 --> 00:02:27,599
now we are ready to introduce the

72
00:02:27,599 --> 00:02:29,840
various leakage models the simplest

73
00:02:29,840 --> 00:02:31,519
model we could think of is the one of

74
00:02:31,519 --> 00:02:33,519
bundled leakage in which diversity

75
00:02:33,519 --> 00:02:35,599
computes a function of x which outputs

76
00:02:35,599 --> 00:02:38,080
at most arbitrary bits

77
00:02:38,080 --> 00:02:40,160
thanks to its simplicity and versatility

78
00:02:40,160 --> 00:02:42,239
this model introduced for the first time

79
00:02:42,239 --> 00:02:44,879
by jambowski and petroc has been widely

80
00:02:44,879 --> 00:02:46,879
used in cryptographic constructions that

81
00:02:46,879 --> 00:02:48,640
remain secure even in the presence of

82
00:02:48,640 --> 00:02:49,760
leakage

83
00:02:49,760 --> 00:02:51,599
however in real world side channel

84
00:02:51,599 --> 00:02:53,440
attacks the leakage obtained by the

85
00:02:53,440 --> 00:02:55,920
adversary is far from being bounded for

86
00:02:55,920 --> 00:02:57,920
instance the power trace of a physical

87
00:02:57,920 --> 00:03:00,959
implementation of aes typically consists

88
00:03:00,959 --> 00:03:02,959
of several megabytes of information

89
00:03:02,959 --> 00:03:04,959
which is much larger than the length of

90
00:03:04,959 --> 00:03:07,360
the secret key

91
00:03:07,360 --> 00:03:09,519
this motivates a more general notion of

92
00:03:09,519 --> 00:03:11,440
noise leakage where there is no upper

93
00:03:11,440 --> 00:03:13,280
bound on the length of the leakage but

94
00:03:13,280 --> 00:03:15,360
instead we assume that the leakage is

95
00:03:15,360 --> 00:03:17,680
somewhat noisy in the sense that it does

96
00:03:17,680 --> 00:03:19,519
not reveal too much information about

97
00:03:19,519 --> 00:03:21,120
the secret x

98
00:03:21,120 --> 00:03:23,040
more formally the first and simplest

99
00:03:23,040 --> 00:03:25,040
model of noise leakage is the one in

100
00:03:25,040 --> 00:03:27,599
which conditioning the mine entropy of x

101
00:03:27,599 --> 00:03:29,599
on the leakage does not decrease the

102
00:03:29,599 --> 00:03:31,599
conditional average male entropy of x by

103
00:03:31,599 --> 00:03:32,720
too much

104
00:03:32,720 --> 00:03:35,200
in our work we refer to this model as my

105
00:03:35,200 --> 00:03:36,959
entropy noise leakage

106
00:03:36,959 --> 00:03:39,280
as lady weaker model replaces the random

107
00:03:39,280 --> 00:03:42,480
variable x which may be not uniform with

108
00:03:42,480 --> 00:03:44,560
the uniform distribution u

109
00:03:44,560 --> 00:03:47,280
in our work we refer to this model as

110
00:03:47,280 --> 00:03:49,599
uniform noise leakage

111
00:03:49,599 --> 00:03:51,680
another variant of noise leakage is the

112
00:03:51,680 --> 00:03:53,680
one in which we consider the statistical

113
00:03:53,680 --> 00:03:56,319
distance between the pair x z and the

114
00:03:56,319 --> 00:03:59,280
pair x z prime where z prime is a random

115
00:03:59,280 --> 00:04:02,159
variable distributed exactly like that

116
00:04:02,159 --> 00:04:04,239
but which does not depend on the outcome

117
00:04:04,239 --> 00:04:05,280
of x

118
00:04:05,280 --> 00:04:07,040
in particular we ask for this

119
00:04:07,040 --> 00:04:09,200
statistical distance to be bounded by

120
00:04:09,200 --> 00:04:11,519
some leakage parameter and we refer to

121
00:04:11,519 --> 00:04:13,599
this model as statistical distance noise

122
00:04:13,599 --> 00:04:15,280
leakage

123
00:04:15,280 --> 00:04:17,440
finally consider the notion of modal

124
00:04:17,440 --> 00:04:19,199
information between the random variable

125
00:04:19,199 --> 00:04:22,000
x and its leakage jet and we ask that

126
00:04:22,000 --> 00:04:24,160
this mutual information should be

127
00:04:24,160 --> 00:04:26,560
bounded by some leakage parameter we

128
00:04:26,560 --> 00:04:28,160
refer to this model as moodle

129
00:04:28,160 --> 00:04:30,560
information noisy leakage

130
00:04:30,560 --> 00:04:32,720
actually there are several other models

131
00:04:32,720 --> 00:04:34,720
which depend on further restrictions to

132
00:04:34,720 --> 00:04:36,800
the relation between x and z or the

133
00:04:36,800 --> 00:04:39,280
leakage function family however in our

134
00:04:39,280 --> 00:04:40,960
paper we mainly consider these four

135
00:04:40,960 --> 00:04:42,720
models since they are the most common

136
00:04:42,720 --> 00:04:44,000
used

137
00:04:44,000 --> 00:04:46,160
in addition we give a full picture of

138
00:04:46,160 --> 00:04:47,840
the separations between all these

139
00:04:47,840 --> 00:04:49,360
leakage families

140
00:04:49,360 --> 00:04:51,520
in particular we show an example of why

141
00:04:51,520 --> 00:04:53,520
my entrepreneurial leakage and uniform

142
00:04:53,520 --> 00:04:55,520
noise silicates are not the same thing

143
00:04:55,520 --> 00:04:58,400
and we proved to other separations

144
00:04:58,400 --> 00:05:00,160
first we proved that statistical

145
00:05:00,160 --> 00:05:02,080
distance noisy and main entropy noise

146
00:05:02,080 --> 00:05:05,600
leakages are two really different models

147
00:05:05,600 --> 00:05:07,680
and then we proved that although moodle

148
00:05:07,680 --> 00:05:10,000
information noise leakage is statistical

149
00:05:10,000 --> 00:05:12,240
distance noisy leakage the opposite is

150
00:05:12,240 --> 00:05:14,080
false

151
00:05:14,080 --> 00:05:16,080
to make things more clear here is a

152
00:05:16,080 --> 00:05:18,240
diagram of all the leakage models taken

153
00:05:18,240 --> 00:05:19,840
into consideration

154
00:05:19,840 --> 00:05:21,600
the first one is the simplest one the

155
00:05:21,600 --> 00:05:23,039
bounded leakage

156
00:05:23,039 --> 00:05:25,440
then we have the uniform noisy leakage

157
00:05:25,440 --> 00:05:27,600
which contains the bounded leakage

158
00:05:27,600 --> 00:05:29,919
indeed leaking albeits from the uniform

159
00:05:29,919 --> 00:05:32,320
random variable decreases its small

160
00:05:32,320 --> 00:05:34,800
entropy of at most l

161
00:05:34,800 --> 00:05:36,800
then we have the slightly more powerful

162
00:05:36,800 --> 00:05:38,880
notion of my entropy noise leakage in

163
00:05:38,880 --> 00:05:40,560
which the random variable is not

164
00:05:40,560 --> 00:05:42,880
required to be uniform

165
00:05:42,880 --> 00:05:44,800
then the statistical distance noise

166
00:05:44,800 --> 00:05:46,960
leakage which i said before we proved to

167
00:05:46,960 --> 00:05:48,800
be quite different from the milan

168
00:05:48,800 --> 00:05:50,639
entropy noisy leakage

169
00:05:50,639 --> 00:05:52,639
and finally mutual information noise

170
00:05:52,639 --> 00:05:54,479
leakage which is inside statistical

171
00:05:54,479 --> 00:05:56,560
distance leakage but we proved that they

172
00:05:56,560 --> 00:05:58,319
are not the same

173
00:05:58,319 --> 00:06:00,400
motivated by this situation we consider

174
00:06:00,400 --> 00:06:01,919
the following question

175
00:06:01,919 --> 00:06:04,319
can we reduce noise leakage resilience

176
00:06:04,319 --> 00:06:06,560
which is more powerful to boundedly get

177
00:06:06,560 --> 00:06:08,560
your resilience which is simpler to

178
00:06:08,560 --> 00:06:11,120
achieve in a general way thus achieving

179
00:06:11,120 --> 00:06:13,440
the best of both worlds

180
00:06:13,440 --> 00:06:16,000
and our mind result is a positive answer

181
00:06:16,000 --> 00:06:18,880
to this question and of course we solve

182
00:06:18,880 --> 00:06:21,280
it by defining yet another leakage model

183
00:06:21,280 --> 00:06:24,160
which we call dense leakage the plan is

184
00:06:24,160 --> 00:06:25,120
show

185
00:06:25,120 --> 00:06:27,440
how the other models of leakage are

186
00:06:27,440 --> 00:06:29,919
indeed dense leakage and then to prove

187
00:06:29,919 --> 00:06:31,919
that dense leakage is simulatable from

188
00:06:31,919 --> 00:06:33,520
bounded leakage

189
00:06:33,520 --> 00:06:35,520
before stating the definition of dense

190
00:06:35,520 --> 00:06:37,280
leakage we need to define further

191
00:06:37,280 --> 00:06:40,000
relations between two distributions

192
00:06:40,000 --> 00:06:41,919
in particular we define the notion of

193
00:06:41,919 --> 00:06:44,560
density of distributions formally we say

194
00:06:44,560 --> 00:06:46,880
that the distribution p is delta dense

195
00:06:46,880 --> 00:06:49,759
in b prime if forever is that in capital

196
00:06:49,759 --> 00:06:53,599
z it holds that p of z is at most one

197
00:06:53,599 --> 00:06:56,800
over delta times p prime of z

198
00:06:56,800 --> 00:06:59,120
we also define the relaxed notion of

199
00:06:59,120 --> 00:07:01,360
approximate density which informally

200
00:07:01,360 --> 00:07:03,840
says that p is delta density p prime

201
00:07:03,840 --> 00:07:06,000
with high probability over the choice of

202
00:07:06,000 --> 00:07:07,120
that

203
00:07:07,120 --> 00:07:08,880
now we are ready to define the dense

204
00:07:08,880 --> 00:07:09,840
leakage

205
00:07:09,840 --> 00:07:12,560
given a leakage function f we say that f

206
00:07:12,560 --> 00:07:14,319
is dense leakage for x if the

207
00:07:14,319 --> 00:07:16,160
distribution of the leakage conditioned

208
00:07:16,160 --> 00:07:19,120
on x being equal to a fixed little x is

209
00:07:19,120 --> 00:07:21,039
delta dense in the distribution of the

210
00:07:21,039 --> 00:07:22,560
leakage unconditioned with high

211
00:07:22,560 --> 00:07:26,160
probability over the choices of x and z

212
00:07:26,160 --> 00:07:27,919
by using the notion of approximate

213
00:07:27,919 --> 00:07:29,919
density the distribution of the leakage

214
00:07:29,919 --> 00:07:32,560
condition on x equals lateral x

215
00:07:32,560 --> 00:07:34,319
is approximate that the length in the

216
00:07:34,319 --> 00:07:35,759
distribution of the leakage and

217
00:07:35,759 --> 00:07:37,840
conditioned with high probability over

218
00:07:37,840 --> 00:07:39,759
the choice of x

219
00:07:39,759 --> 00:07:41,440
the notion of density allows for

220
00:07:41,440 --> 00:07:43,280
approximating distributions with other

221
00:07:43,280 --> 00:07:46,240
distributions in particular if p is

222
00:07:46,240 --> 00:07:48,560
delta density p prime and we have access

223
00:07:48,560 --> 00:07:50,319
to a certain number of independent

224
00:07:50,319 --> 00:07:52,479
samplings from p prime

225
00:07:52,479 --> 00:07:54,639
then we can run the rejection sampling

226
00:07:54,639 --> 00:07:56,720
algorithm to obtain a value which is a

227
00:07:56,720 --> 00:07:58,879
good approximation of a simple from the

228
00:07:58,879 --> 00:08:00,479
distribution p

229
00:08:00,479 --> 00:08:02,639
how does the rejection sampling work

230
00:08:02,639 --> 00:08:04,800
well first of all we simple as

231
00:08:04,800 --> 00:08:07,199
independent samples from p prime and we

232
00:08:07,199 --> 00:08:09,599
initially set i to be both

233
00:08:09,599 --> 00:08:12,479
then we defined the bit bj to be one

234
00:08:12,479 --> 00:08:15,759
with probability delta times p of z over

235
00:08:15,759 --> 00:08:19,520
p prime of zj and we set b j equals zero

236
00:08:19,520 --> 00:08:20,879
otherwise

237
00:08:20,879 --> 00:08:23,919
now if bj is equal to one we update i to

238
00:08:23,919 --> 00:08:26,639
be equal to j and we halt the loop

239
00:08:26,639 --> 00:08:28,879
otherwise we keep running the algorithm

240
00:08:28,879 --> 00:08:31,599
until we run out of samples

241
00:08:31,599 --> 00:08:33,839
finally we return the index i which is

242
00:08:33,839 --> 00:08:36,000
the index of the candidate sample we are

243
00:08:36,000 --> 00:08:38,479
using to approximate p or both if the

244
00:08:38,479 --> 00:08:40,080
algorithm failed to produce such

245
00:08:40,080 --> 00:08:41,200
candidate

246
00:08:41,200 --> 00:08:43,440
it is easy to see that the distribution

247
00:08:43,440 --> 00:08:44,640
p tilde

248
00:08:44,640 --> 00:08:47,760
from which is simple the outcome that i

249
00:08:47,760 --> 00:08:50,880
is close to regional distribution p

250
00:08:50,880 --> 00:08:52,959
to get more comfortable with the notion

251
00:08:52,959 --> 00:08:55,760
of dense leakage here is an example of a

252
00:08:55,760 --> 00:08:58,080
two minus cell dense leakage function

253
00:08:58,080 --> 00:09:00,880
for the uniform distribution over 0 1 to

254
00:09:00,880 --> 00:09:02,399
the n

255
00:09:02,399 --> 00:09:04,560
i copied the definition of dense leakage

256
00:09:04,560 --> 00:09:06,800
in this slide for convenience and in

257
00:09:06,800 --> 00:09:08,800
particular the function simply outputs

258
00:09:08,800 --> 00:09:12,000
the first l bits of its input

259
00:09:12,000 --> 00:09:14,880
first of all we fix an input x and then

260
00:09:14,880 --> 00:09:18,320
we parse x as z concatenated to y where

261
00:09:18,320 --> 00:09:21,040
z is the l bit prefix and y is the

262
00:09:21,040 --> 00:09:23,040
remainder of the string

263
00:09:23,040 --> 00:09:24,800
then we study the distribution of the

264
00:09:24,800 --> 00:09:26,800
leakage condition on x being equal to

265
00:09:26,800 --> 00:09:29,519
little x in particular for all l bit

266
00:09:29,519 --> 00:09:31,839
strings z prime the probability of the

267
00:09:31,839 --> 00:09:34,480
random variable z be equal to z prime is

268
00:09:34,480 --> 00:09:37,440
exactly 1 if z prime is the l bit prefix

269
00:09:37,440 --> 00:09:41,600
of x and it is exactly 0 otherwise

270
00:09:41,600 --> 00:09:43,440
on the other side without conditioning

271
00:09:43,440 --> 00:09:46,399
on x equals little x the random variable

272
00:09:46,399 --> 00:09:48,800
z is uniform over lb strings and

273
00:09:48,800 --> 00:09:50,720
therefore for each albeit string is at

274
00:09:50,720 --> 00:09:51,519
prime

275
00:09:51,519 --> 00:09:54,160
that has probability to do the minus l

276
00:09:54,160 --> 00:09:56,240
of being equal to z prime

277
00:09:56,240 --> 00:09:58,080
since we want the distribution of that

278
00:09:58,080 --> 00:10:00,640
condition on x equals little x to be

279
00:10:00,640 --> 00:10:02,160
dense in the distribution of z

280
00:10:02,160 --> 00:10:04,560
unconditioned we have to choose delta to

281
00:10:04,560 --> 00:10:07,360
be at least 2 to the minus l

282
00:10:07,360 --> 00:10:09,360
actually this value suffices for the

283
00:10:09,360 --> 00:10:11,360
condition distribution to be dense in

284
00:10:11,360 --> 00:10:14,079
the unconditioned one so we just proved

285
00:10:14,079 --> 00:10:17,360
that f is delta dense leakage for x for

286
00:10:17,360 --> 00:10:20,079
delta equals 2 to the minus l

287
00:10:20,079 --> 00:10:22,320
a little spoiler here this example not

288
00:10:22,320 --> 00:10:24,480
only shows how to prove that a function

289
00:10:24,480 --> 00:10:27,360
is delta dense but also shows what is

290
00:10:27,360 --> 00:10:31,120
the role of the parameter delta i'll say

291
00:10:31,120 --> 00:10:33,760
more on this when stating our simulation

292
00:10:33,760 --> 00:10:35,440
theorem

293
00:10:35,440 --> 00:10:37,839
but before talking about that i'll show

294
00:10:37,839 --> 00:10:39,839
a limitation for the case of my entropy

295
00:10:39,839 --> 00:10:42,240
noise leakage which also helps to

296
00:10:42,240 --> 00:10:44,160
understand some of the challenges behind

297
00:10:44,160 --> 00:10:45,920
our goal of studying the relations

298
00:10:45,920 --> 00:10:47,760
between the leakage models

299
00:10:47,760 --> 00:10:49,839
first of all we consider the notion of

300
00:10:49,839 --> 00:10:52,160
semi-flatness a distribution is

301
00:10:52,160 --> 00:10:54,640
semi-flat if intuitively it is not too

302
00:10:54,640 --> 00:10:57,680
distant from being uniform

303
00:10:57,680 --> 00:11:00,000
here is an example of a non-semi-flat

304
00:11:00,000 --> 00:11:02,560
distribution well of course it depends

305
00:11:02,560 --> 00:11:04,880
on the parameters but this distribution

306
00:11:04,880 --> 00:11:07,120
clearly is not semi-flat for two small

307
00:11:07,120 --> 00:11:08,800
values of alpha

308
00:11:08,800 --> 00:11:11,040
in particular we have an initial spike

309
00:11:11,040 --> 00:11:12,640
of a high probability and the

310
00:11:12,640 --> 00:11:15,680
distribution is uniform everywhere else

311
00:11:15,680 --> 00:11:17,279
consider now the following leakage

312
00:11:17,279 --> 00:11:19,360
function which is random on the spike

313
00:11:19,360 --> 00:11:21,440
and it is quite regular on the uniform

314
00:11:21,440 --> 00:11:22,240
part

315
00:11:22,240 --> 00:11:24,240
you can think of f to be the function

316
00:11:24,240 --> 00:11:26,480
which on the uniform part outputs the l

317
00:11:26,480 --> 00:11:28,480
bit prefix of x

318
00:11:28,480 --> 00:11:30,720
now let's try to see what happens when

319
00:11:30,720 --> 00:11:33,120
we leak from x obtaining for example the

320
00:11:33,120 --> 00:11:34,560
value 3.

321
00:11:34,560 --> 00:11:36,320
the problem here is that the spike

322
00:11:36,320 --> 00:11:38,480
decreases the min entropy of x quite a

323
00:11:38,480 --> 00:11:40,720
lot while the distribution of x on the

324
00:11:40,720 --> 00:11:43,120
uniform part has still quite high min

325
00:11:43,120 --> 00:11:45,680
entropy as a consequence a function

326
00:11:45,680 --> 00:11:47,920
decreasing the main entropy of x by l

327
00:11:47,920 --> 00:11:50,480
actually requires leaking way more than

328
00:11:50,480 --> 00:11:52,320
l bits in order to have a small

329
00:11:52,320 --> 00:11:54,399
simulation error

330
00:11:54,399 --> 00:11:56,880
for this reason when talking about my

331
00:11:56,880 --> 00:11:59,120
entrepreneur's leakage we have to factor

332
00:11:59,120 --> 00:12:00,880
in the alpha semi-flatness of the

333
00:12:00,880 --> 00:12:02,480
distribution we are trying to

334
00:12:02,480 --> 00:12:04,480
approximate and this increases the

335
00:12:04,480 --> 00:12:06,959
amount of leakage required

336
00:12:06,959 --> 00:12:08,720
let's move now to the main result of the

337
00:12:08,720 --> 00:12:09,680
paper

338
00:12:09,680 --> 00:12:11,680
first we define the following simulation

339
00:12:11,680 --> 00:12:12,959
paradigm

340
00:12:12,959 --> 00:12:14,959
we say that the leakage family f is

341
00:12:14,959 --> 00:12:17,200
simulatable from another leakage family

342
00:12:17,200 --> 00:12:19,839
g if for each leakage function in f

343
00:12:19,839 --> 00:12:22,240
there exists a simulator which is able

344
00:12:22,240 --> 00:12:24,240
to approximate the leakage with one

345
00:12:24,240 --> 00:12:26,480
leakage query chosen in the family g

346
00:12:26,480 --> 00:12:30,000
with small simulation error

347
00:12:30,320 --> 00:12:32,800
with this paradigm in mind we prove the

348
00:12:32,800 --> 00:12:35,600
following result for a random variable x

349
00:12:35,600 --> 00:12:37,839
the family of delta dense leakage is

350
00:12:37,839 --> 00:12:40,160
simulatable with small error from the

351
00:12:40,160 --> 00:12:43,120
family of l-bound leakage where l is

352
00:12:43,120 --> 00:12:46,480
defined as logarithm of 1 over delta

353
00:12:46,480 --> 00:12:48,880
plus some stuff which is actually very

354
00:12:48,880 --> 00:12:51,680
small in most applications

355
00:12:51,680 --> 00:12:53,760
the proof is quite simple and consists

356
00:12:53,760 --> 00:12:55,440
of constructing for a given dense

357
00:12:55,440 --> 00:12:57,440
leakage function a simulator which

358
00:12:57,440 --> 00:12:59,519
applies rejection sampling to

359
00:12:59,519 --> 00:13:01,200
approximate the leakage

360
00:13:01,200 --> 00:13:03,040
in particular first the simulator

361
00:13:03,040 --> 00:13:05,040
samples a certain number of independent

362
00:13:05,040 --> 00:13:06,880
samples from the distribution of the

363
00:13:06,880 --> 00:13:08,800
unconditioned leakage

364
00:13:08,800 --> 00:13:11,040
then constructs a leakage function which

365
00:13:11,040 --> 00:13:14,320
upon input x runs the rejection sampling

366
00:13:14,320 --> 00:13:15,760
algorithm to sample from the

367
00:13:15,760 --> 00:13:17,600
distribution of the leakage conditioned

368
00:13:17,600 --> 00:13:20,000
on the value x and then outputs the

369
00:13:20,000 --> 00:13:22,399
resulting index i

370
00:13:22,399 --> 00:13:24,720
finally the simulator outputs the height

371
00:13:24,720 --> 00:13:25,760
sample

372
00:13:25,760 --> 00:13:27,760
the banded leakage performed is only

373
00:13:27,760 --> 00:13:29,839
needed to obtain the index i and it

374
00:13:29,839 --> 00:13:33,120
depends only on the parameter delta

375
00:13:33,120 --> 00:13:34,480
as i said before

376
00:13:34,480 --> 00:13:36,639
by ignoring all the other stuff which is

377
00:13:36,639 --> 00:13:39,600
negligible in almost all situations we

378
00:13:39,600 --> 00:13:41,839
can see that the dense leakage parameter

379
00:13:41,839 --> 00:13:43,839
delta is strongly related to the bounded

380
00:13:43,839 --> 00:13:46,639
leakage parameter l

381
00:13:46,639 --> 00:13:48,959
here is the diagram of before in which

382
00:13:48,959 --> 00:13:51,040
we also use the red arrows to denote

383
00:13:51,040 --> 00:13:52,959
that the dense leakage is simulatable

384
00:13:52,959 --> 00:13:55,040
from the bounded leakage with a slight

385
00:13:55,040 --> 00:13:57,360
simulation error

386
00:13:57,360 --> 00:13:58,959
there are many applications to our

387
00:13:58,959 --> 00:14:01,440
result one of them is about the lower

388
00:14:01,440 --> 00:14:03,519
bounds in communication complexity for

389
00:14:03,519 --> 00:14:05,120
instance when considering banded

390
00:14:05,120 --> 00:14:06,800
collusion protocols

391
00:14:06,800 --> 00:14:08,720
in abundant collusion protocol there are

392
00:14:08,720 --> 00:14:11,199
several parties and each party holds

393
00:14:11,199 --> 00:14:13,760
some input x i and the goal is to

394
00:14:13,760 --> 00:14:15,920
evaluate some boolean function of all

395
00:14:15,920 --> 00:14:17,920
the inputs

396
00:14:17,920 --> 00:14:19,839
to check this goal it is defined an

397
00:14:19,839 --> 00:14:21,839
interactive protocol in which in each

398
00:14:21,839 --> 00:14:24,560
round a certain subset of the parties is

399
00:14:24,560 --> 00:14:26,800
chosen to cooperate and output some

400
00:14:26,800 --> 00:14:28,560
partial result

401
00:14:28,560 --> 00:14:30,639
the usual definition of the banded

402
00:14:30,639 --> 00:14:32,480
collusion protocol requires that the

403
00:14:32,480 --> 00:14:34,880
length of the transcript which is output

404
00:14:34,880 --> 00:14:37,279
by the colluding parties in each round

405
00:14:37,279 --> 00:14:40,240
is bounded by some parameter l

406
00:14:40,240 --> 00:14:42,160
we define two variance of this notion

407
00:14:42,160 --> 00:14:44,079
both without limitations on the length

408
00:14:44,079 --> 00:14:46,639
of the transcript the first one is in

409
00:14:46,639 --> 00:14:48,720
the noisy model in which the partial

410
00:14:48,720 --> 00:14:50,800
results output by the parties in each

411
00:14:50,800 --> 00:14:52,880
round are uniform noise leakages of

412
00:14:52,880 --> 00:14:55,440
their inputs and the second one is in

413
00:14:55,440 --> 00:14:57,279
the dense model in which the partial

414
00:14:57,279 --> 00:14:59,279
results output by the parties in each

415
00:14:59,279 --> 00:15:03,279
round are dense leakages of their inputs

416
00:15:03,279 --> 00:15:05,519
by studying these new notions we obtain

417
00:15:05,519 --> 00:15:08,160
two major results the first one is

418
00:15:08,160 --> 00:15:10,000
another lower bound in communication

419
00:15:10,000 --> 00:15:12,240
complexity in particular to evaluate

420
00:15:12,240 --> 00:15:14,240
certain boolean functions the transcript

421
00:15:14,240 --> 00:15:16,639
not only needs to be sufficiently long

422
00:15:16,639 --> 00:15:18,959
but also needs to contain a large amount

423
00:15:18,959 --> 00:15:21,199
of information about the inputs the

424
00:15:21,199 --> 00:15:23,120
second result which is also a

425
00:15:23,120 --> 00:15:25,199
consequence of the first one is the

426
00:15:25,199 --> 00:15:27,120
possibility to lift the security of

427
00:15:27,120 --> 00:15:29,279
cryptographic primitives with leakage

428
00:15:29,279 --> 00:15:31,199
resilience is modeled as a banded

429
00:15:31,199 --> 00:15:33,120
communication bcp

430
00:15:33,120 --> 00:15:35,040
to the more general setting of noisy

431
00:15:35,040 --> 00:15:37,440
leakage or dense leakage

432
00:15:37,440 --> 00:15:39,759
in conclusion we first introduced the

433
00:15:39,759 --> 00:15:42,399
notion of dense leakage which captures

434
00:15:42,399 --> 00:15:45,440
many existing notions of noisy leakage

435
00:15:45,440 --> 00:15:47,600
then we have shown that a single query

436
00:15:47,600 --> 00:15:49,600
of dense leakage can be simulated in the

437
00:15:49,600 --> 00:15:51,839
information theoretic setting using a

438
00:15:51,839 --> 00:15:54,240
single query of banded leakage therefore

439
00:15:54,240 --> 00:15:56,560
allowing also to simulate noise leakage

440
00:15:56,560 --> 00:15:58,800
with banded leakage

441
00:15:58,800 --> 00:16:01,120
finally we gave some applications in

442
00:16:01,120 --> 00:16:03,360
leakage resilient cryptography not only

443
00:16:03,360 --> 00:16:04,959
in the setting of banded conclusion

444
00:16:04,959 --> 00:16:07,120
protocols but also in the leakage

445
00:16:07,120 --> 00:16:09,680
resilience of linear secret sharing or

446
00:16:09,680 --> 00:16:11,680
essentially in any cryptographic

447
00:16:11,680 --> 00:16:13,600
primitive with banded leakage resilience

448
00:16:13,600 --> 00:16:15,920
in the information thread setting such

449
00:16:15,920 --> 00:16:18,880
as forward secure storage leakage

450
00:16:18,880 --> 00:16:21,199
resilient storage ligature resilient and

451
00:16:21,199 --> 00:16:23,759
malleable codes and many others

452
00:16:23,759 --> 00:16:25,279
unfortunately

453
00:16:25,279 --> 00:16:27,360
in the computational setting things may

454
00:16:27,360 --> 00:16:29,440
be a bit more difficult and this brings

455
00:16:29,440 --> 00:16:31,440
us to the first open problem

456
00:16:31,440 --> 00:16:33,600
can we make our simulator efficient for

457
00:16:33,600 --> 00:16:36,560
certain families of noisy leakage

458
00:16:36,560 --> 00:16:38,560
although our simulation may be

459
00:16:38,560 --> 00:16:40,399
inefficient we give an idea of

460
00:16:40,399 --> 00:16:42,800
application in the computational setting

461
00:16:42,800 --> 00:16:44,560
by lifting bounded leakage to noise

462
00:16:44,560 --> 00:16:46,800
leakage for passively secure multiparty

463
00:16:46,800 --> 00:16:48,800
competition in the common reference

464
00:16:48,800 --> 00:16:50,639
string model and for a concrete

465
00:16:50,639 --> 00:16:52,480
construction of leakage-resilient

466
00:16:52,480 --> 00:16:56,000
one-way functions in the floppy model

467
00:16:56,000 --> 00:16:58,800
another problem we leave open is whether

468
00:16:58,800 --> 00:17:01,279
other families of noisy leakage which we

469
00:17:01,279 --> 00:17:03,519
have not considered in our work for

470
00:17:03,519 --> 00:17:05,599
within the class of dense leakage thus

471
00:17:05,599 --> 00:17:07,679
achieving simulatability through banded

472
00:17:07,679 --> 00:17:09,760
leakage

473
00:17:09,760 --> 00:17:12,079
then we leave open to improve our

474
00:17:12,079 --> 00:17:14,799
results for banded collusion protocols

475
00:17:14,799 --> 00:17:16,880
in particular we achieved that each

476
00:17:16,880 --> 00:17:18,959
round of banded communication can be

477
00:17:18,959 --> 00:17:20,640
used to simulate a round of noisy

478
00:17:20,640 --> 00:17:23,199
communication or dense communication

479
00:17:23,199 --> 00:17:25,839
however since concatenating the output

480
00:17:25,839 --> 00:17:27,839
of bounded legacy leads to abandoned

481
00:17:27,839 --> 00:17:30,320
transcript we wonder if the same happens

482
00:17:30,320 --> 00:17:32,799
with noisy leakage or dense leakage

483
00:17:32,799 --> 00:17:34,559
in other words is it possible to

484
00:17:34,559 --> 00:17:38,160
generalize the results on bcps so that

485
00:17:38,160 --> 00:17:40,320
it is the final transcript to be noisy

486
00:17:40,320 --> 00:17:43,039
leakage or dense leakage of the inputs

487
00:17:43,039 --> 00:17:45,120
instead of the single communication

488
00:17:45,120 --> 00:17:46,480
rounds

489
00:17:46,480 --> 00:17:48,320
finally and more in general is it

490
00:17:48,320 --> 00:17:50,240
possible to extend our results to the

491
00:17:50,240 --> 00:17:52,559
setting of multiple leakage queries

492
00:17:52,559 --> 00:17:54,400
the problem with this is that once

493
00:17:54,400 --> 00:17:56,160
obtained the result of the first leakage

494
00:17:56,160 --> 00:17:58,480
query the second query itself may depend

495
00:17:58,480 --> 00:18:00,400
on such leakage and this makes the

496
00:18:00,400 --> 00:18:03,440
reduction much harder for instance in

497
00:18:03,440 --> 00:18:05,440
the setting of uniform noise leakage the

498
00:18:05,440 --> 00:18:07,039
first leakage query leaks some

499
00:18:07,039 --> 00:18:09,280
information from the uniform random

500
00:18:09,280 --> 00:18:10,480
variable

501
00:18:10,480 --> 00:18:13,039
which then is not uniform anymore

502
00:18:13,039 --> 00:18:15,679
can we overcome these problems

503
00:18:15,679 --> 00:18:17,840
if you are interested i invite you to

504
00:18:17,840 --> 00:18:20,080
take a look at our paper to see more in

505
00:18:20,080 --> 00:18:23,280
detail our results and open problems

506
00:18:23,280 --> 00:18:25,280
that's it for now and thank you very

507
00:18:25,280 --> 00:18:28,918
much for your attention

