1
00:00:01,760 --> 00:00:04,639
live on youtube

2
00:00:05,600 --> 00:00:09,240
okay should they start

3
00:00:26,880 --> 00:00:29,880
um

4
00:00:39,120 --> 00:00:41,280
ah i believe that is your cue to start

5
00:00:41,280 --> 00:00:43,200
yes

6
00:00:43,200 --> 00:00:44,559
okay

7
00:00:44,559 --> 00:00:46,000
so

8
00:00:46,000 --> 00:00:48,800
thank you uh so the title of this work

9
00:00:48,800 --> 00:00:51,520
is improved linear approximations to ar

10
00:00:51,520 --> 00:00:54,079
ciphers and attacks against cha-cha

11
00:00:54,079 --> 00:00:55,760
my name is murillo cochineal this is a

12
00:00:55,760 --> 00:00:59,120
joint work with sosa nato we work

13
00:00:59,120 --> 00:01:01,520
at the research and development center

14
00:01:01,520 --> 00:01:04,799
for communication security in brazil

15
00:01:04,799 --> 00:01:06,240
and this work

16
00:01:06,240 --> 00:01:07,920
we present a new technique to find

17
00:01:07,920 --> 00:01:10,799
better better linear approximations to

18
00:01:10,799 --> 00:01:13,520
arcs primitives and using the proposed

19
00:01:13,520 --> 00:01:15,840
technique we improve attacks against the

20
00:01:15,840 --> 00:01:18,960
stream cipher charger

21
00:01:18,960 --> 00:01:21,360
so arx stands for

22
00:01:21,360 --> 00:01:24,640
addition rotation xor

23
00:01:24,640 --> 00:01:27,119
and the set of operations that is

24
00:01:27,119 --> 00:01:29,520
heavily used in the many symmetric um

25
00:01:29,520 --> 00:01:31,840
primitives such as the string side for

26
00:01:31,840 --> 00:01:34,000
cha-cha this slide represent the query

27
00:01:34,000 --> 00:01:37,360
hand function of the string cipher

28
00:01:37,360 --> 00:01:40,799
so as a summary of the attacks

29
00:01:40,799 --> 00:01:42,960
we improved the attacks against six

30
00:01:42,960 --> 00:01:44,720
rounds of cha-cha

31
00:01:44,720 --> 00:01:47,840
substantially and also present a

32
00:01:47,840 --> 00:01:50,079
differential linear distinguisher

33
00:01:50,079 --> 00:01:52,240
for seven rounds of cha-cha which you

34
00:01:52,240 --> 00:01:54,799
can see that reduced reduces the time

35
00:01:54,799 --> 00:01:56,960
complexity but has a trade-off with data

36
00:01:56,960 --> 00:01:58,640
complexity

37
00:01:58,640 --> 00:02:01,520
so to give you a taste of

38
00:02:01,520 --> 00:02:04,320
what this is about previous works should

39
00:02:04,320 --> 00:02:06,479
hurry and mitra develop a theory

40
00:02:06,479 --> 00:02:08,000
selecting

41
00:02:08,000 --> 00:02:11,120
for selecting combinations of specific

42
00:02:11,120 --> 00:02:13,520
bits to give

43
00:02:13,520 --> 00:02:15,920
linear approximations for cha-cha

44
00:02:15,920 --> 00:02:18,640
and as expected the difficult part is to

45
00:02:18,640 --> 00:02:20,239
deal with the addition which is the

46
00:02:20,239 --> 00:02:24,480
non-linear operation for ax algorithms

47
00:02:24,480 --> 00:02:26,879
thus let us define theta

48
00:02:26,879 --> 00:02:30,080
of x and x and y as the carry function

49
00:02:30,080 --> 00:02:32,400
for the sum x plus y

50
00:02:32,400 --> 00:02:34,400
and define theta

51
00:02:34,400 --> 00:02:37,599
i as the if bit of theta

52
00:02:37,599 --> 00:02:40,000
so using some properties of the carry

53
00:02:40,000 --> 00:02:42,080
function it's possible to obtain linear

54
00:02:42,080 --> 00:02:43,680
approximations for the car and hound

55
00:02:43,680 --> 00:02:46,000
function of cha-cha in previous works

56
00:02:46,000 --> 00:02:48,480
outer is used in the following result

57
00:02:48,480 --> 00:02:51,680
which says that the if bit of the carry

58
00:02:51,680 --> 00:02:55,280
function can be approximated by y

59
00:02:55,280 --> 00:02:56,480
underscore

60
00:02:56,480 --> 00:02:59,760
i minus 1 with correlation i have

61
00:02:59,760 --> 00:03:01,599
so with this equation outers

62
00:03:01,599 --> 00:03:04,239
concentrated inside approximations for

63
00:03:04,239 --> 00:03:06,560
one round and then repeating the same

64
00:03:06,560 --> 00:03:10,480
equations to expanding to further rounds

65
00:03:10,480 --> 00:03:13,040
however we can create a strategy to

66
00:03:13,040 --> 00:03:14,879
improve linear approximations when

67
00:03:14,879 --> 00:03:17,120
considering more rounds by combining

68
00:03:17,120 --> 00:03:19,360
with with the following approximation

69
00:03:19,360 --> 00:03:22,959
for theta which says that we can

70
00:03:22,959 --> 00:03:26,239
the xor of the two adjacent bits of the

71
00:03:26,239 --> 00:03:28,400
carry function cancel out each other if

72
00:03:28,400 --> 00:03:31,440
correlation are half

73
00:03:31,440 --> 00:03:35,920
so for example consider the the word um

74
00:03:35,920 --> 00:03:37,040
xb

75
00:03:37,040 --> 00:03:39,519
of the foreign function so we can show

76
00:03:39,519 --> 00:03:43,360
that the ifbit of the word xb has this

77
00:03:43,360 --> 00:03:46,480
expression here which has a linear term

78
00:03:46,480 --> 00:03:47,519
xor

79
00:03:47,519 --> 00:03:49,920
a non-linear term in terms of the carry

80
00:03:49,920 --> 00:03:51,599
function

81
00:03:51,599 --> 00:03:54,560
then if we for example let's say that we

82
00:03:54,560 --> 00:03:57,120
want to find an approximation to the xor

83
00:03:57,120 --> 00:03:58,319
of the bits

84
00:03:58,319 --> 00:04:01,599
six and seven of xb so in previous work

85
00:04:01,599 --> 00:04:04,239
we would independently uh

86
00:04:04,239 --> 00:04:06,480
expand each bit

87
00:04:06,480 --> 00:04:08,799
which would lead to this linear

88
00:04:08,799 --> 00:04:12,159
approximation and below here which with

89
00:04:12,159 --> 00:04:14,879
correlation quarter

90
00:04:14,879 --> 00:04:17,040
instead we can

91
00:04:17,040 --> 00:04:20,560
use the this second approximation that

92
00:04:20,560 --> 00:04:23,360
we are proposing and in this case it's

93
00:04:23,360 --> 00:04:25,600
very easy to see that we can cancel out

94
00:04:25,600 --> 00:04:28,560
these two non-linear terms right here

95
00:04:28,560 --> 00:04:31,840
and we get this linear expression

96
00:04:31,840 --> 00:04:32,880
that

97
00:04:32,880 --> 00:04:34,960
not only has higher

98
00:04:34,960 --> 00:04:38,240
higher correlation of a half but it also

99
00:04:38,240 --> 00:04:40,080
has fewer terms which is good when

100
00:04:40,080 --> 00:04:41,520
you're trying to

101
00:04:41,520 --> 00:04:42,479
expand

102
00:04:42,479 --> 00:04:44,000
it further

103
00:04:44,000 --> 00:04:47,919
so why it is useful against arc cipher

104
00:04:47,919 --> 00:04:49,600
because it's possible to reduce the

105
00:04:49,600 --> 00:04:51,520
complexity in several cases so let's

106
00:04:51,520 --> 00:04:55,440
consider the example of the addition of

107
00:04:55,440 --> 00:04:58,880
z equals to x plus y so suppose we want

108
00:04:58,880 --> 00:05:00,720
to find the linear approximation for the

109
00:05:00,720 --> 00:05:03,919
b to z seven but we want to uh

110
00:05:03,919 --> 00:05:06,080
approximation for two rounds instead of

111
00:05:06,080 --> 00:05:08,479
one round so in the first round we can

112
00:05:08,479 --> 00:05:11,199
use the the previous works to find

113
00:05:11,199 --> 00:05:13,600
approximation to z7 which will be

114
00:05:13,600 --> 00:05:17,759
something like x7 x0 y7 xl or y6 with

115
00:05:17,759 --> 00:05:19,600
correlation half

116
00:05:19,600 --> 00:05:20,720
but now

117
00:05:20,720 --> 00:05:22,720
for the second round since the xor

118
00:05:22,720 --> 00:05:25,520
operation will not change the indexes

119
00:05:25,520 --> 00:05:28,400
and in the rotation you probably keep y

120
00:05:28,400 --> 00:05:31,600
6 and y 7 adjacent then we can use the

121
00:05:31,600 --> 00:05:33,360
second approximation of the carry

122
00:05:33,360 --> 00:05:35,680
function to cancel out the nonlinear

123
00:05:35,680 --> 00:05:38,080
terms instead of expanding them and

124
00:05:38,080 --> 00:05:39,680
leading to a linear approximation of

125
00:05:39,680 --> 00:05:42,080
higher correlation and fewer terms to be

126
00:05:42,080 --> 00:05:43,840
expanded further

127
00:05:43,840 --> 00:05:46,400
so using this technique we presented the

128
00:05:46,400 --> 00:05:48,080
first explicit derived linear

129
00:05:48,080 --> 00:05:49,840
approximation randomly three three

130
00:05:49,840 --> 00:05:52,800
complete rounds of charge of correlation

131
00:05:52,800 --> 00:05:55,360
two to the power of minus eight this is

132
00:05:55,360 --> 00:05:56,720
the expression

133
00:05:56,720 --> 00:05:59,440
and also for four complete rounds this

134
00:05:59,440 --> 00:06:01,360
is the expression it's very beautiful

135
00:06:01,360 --> 00:06:04,720
expression and we proved uh this result

136
00:06:04,720 --> 00:06:07,600
in our work and also

137
00:06:07,600 --> 00:06:09,120
we had

138
00:06:09,120 --> 00:06:10,880
computational results

139
00:06:10,880 --> 00:06:13,199
to check the results

140
00:06:13,199 --> 00:06:15,440
so using also differential correlation

141
00:06:15,440 --> 00:06:18,400
from previous works we

142
00:06:18,400 --> 00:06:20,800
improved the distinguishers as we saw

143
00:06:20,800 --> 00:06:24,160
said before for six and seven rounds

144
00:06:24,160 --> 00:06:25,600
so conclusions

145
00:06:25,600 --> 00:06:28,240
we presented a new technique to find the

146
00:06:28,240 --> 00:06:31,120
linear approximations for arx primitives

147
00:06:31,120 --> 00:06:32,960
and using the proposed technique we

148
00:06:32,960 --> 00:06:34,560
improve attacks against the stream

149
00:06:34,560 --> 00:06:37,120
cypher cha-cha and with these results we

150
00:06:37,120 --> 00:06:39,520
expect that proposed techniques can be

151
00:06:39,520 --> 00:06:41,680
used to improve attacks against similar

152
00:06:41,680 --> 00:06:44,240
arc based designs such as the extreme

153
00:06:44,240 --> 00:06:46,080
cipher salsa in the hash of function

154
00:06:46,080 --> 00:06:47,360
blink

155
00:06:47,360 --> 00:06:49,360
so thank you very much these are some

156
00:06:49,360 --> 00:06:52,000
heffern studies here and i'm

157
00:06:52,000 --> 00:06:56,120
happy to answer your questions

158
00:06:56,690 --> 00:06:59,949
[Applause]

159
00:07:12,960 --> 00:07:15,919
it's very very bad the

160
00:07:15,919 --> 00:07:18,400
audio

161
00:07:18,960 --> 00:07:22,239
yeah there's a horrible echo

162
00:07:25,599 --> 00:07:28,000
is this better

163
00:07:28,000 --> 00:07:29,919
yes a little bit any questions from the

164
00:07:29,919 --> 00:07:32,400
audience

165
00:07:34,000 --> 00:07:36,720
okay then i have a question um as you

166
00:07:36,720 --> 00:07:38,160
might know it was said in the morning

167
00:07:38,160 --> 00:07:40,560
this is the euro grip with the largest

168
00:07:40,560 --> 00:07:43,120
percentage of students so far

169
00:07:43,120 --> 00:07:45,280
so do you have maybe any advice for them

170
00:07:45,280 --> 00:07:46,560
because they'd like to improve your

171
00:07:46,560 --> 00:07:49,199
results here on the cipher in which

172
00:07:49,199 --> 00:07:51,360
direction should they go to improve the

173
00:07:51,360 --> 00:07:53,520
results

174
00:07:53,520 --> 00:07:55,919
against chacha and this is very good

175
00:07:55,919 --> 00:07:57,280
question

176
00:07:57,280 --> 00:08:00,560
i mean in our work we showed that

177
00:08:00,560 --> 00:08:02,240
it's possible to find better linear

178
00:08:02,240 --> 00:08:04,639
approximations but we couldn't combine

179
00:08:04,639 --> 00:08:08,639
with a better differential

180
00:08:08,639 --> 00:08:10,240
trail so

181
00:08:10,240 --> 00:08:12,479
it may be possible to to use the same

182
00:08:12,479 --> 00:08:13,680
technique to

183
00:08:13,680 --> 00:08:15,840
to improve results

184
00:08:15,840 --> 00:08:17,919
um but yeah

185
00:08:17,919 --> 00:08:22,960
that may be some new new ideas as well

186
00:08:24,479 --> 00:08:27,759
so let's move on to the second talk

187
00:08:27,759 --> 00:08:31,840
second one is uh rotational analysis

188
00:08:31,840 --> 00:08:35,200
from a differential linear perspective

189
00:08:35,200 --> 00:08:37,760
practical distinguishes for reduced

190
00:08:37,760 --> 00:08:38,799
ground

191
00:08:38,799 --> 00:08:41,199
this is

192
00:09:05,120 --> 00:09:07,680
so the chair is aware uh unwin was

193
00:09:07,680 --> 00:09:09,600
having some

194
00:09:09,600 --> 00:09:13,040
audio issues earlier so we may want to

195
00:09:13,040 --> 00:09:15,600
move on and come back because i also

196
00:09:15,600 --> 00:09:19,800
don't see them in the room anymore

197
00:09:26,570 --> 00:09:27,270
[Applause]

198
00:09:27,270 --> 00:09:29,279
[Music]

199
00:09:29,279 --> 00:09:32,279
uh

200
00:09:46,720 --> 00:09:48,480
hi everyone

201
00:09:48,480 --> 00:09:50,720
the work is done automatic search of

202
00:09:50,720 --> 00:09:53,279
meeting the middle pre-image attacks on

203
00:09:53,279 --> 00:09:54,959
a yes

204
00:09:54,959 --> 00:09:58,080
yes like hashing it has joined work with

205
00:09:58,080 --> 00:09:59,440
xiaoyong

206
00:09:59,440 --> 00:10:02,480
jung damping survey

207
00:10:02,480 --> 00:10:06,320
and ginger the package is focused on

208
00:10:06,320 --> 00:10:08,480
hash functions that use compression

209
00:10:08,480 --> 00:10:10,800
functions built from block ciphers

210
00:10:10,800 --> 00:10:13,600
applying for example the secure pj way

211
00:10:13,600 --> 00:10:16,480
modes the underlying block ciphers are

212
00:10:16,480 --> 00:10:19,920
aes like who states is a two-dimensional

213
00:10:19,920 --> 00:10:22,399
array of cells each round function

214
00:10:22,399 --> 00:10:24,720
consists of four cell-oriented

215
00:10:24,720 --> 00:10:26,079
operations

216
00:10:26,079 --> 00:10:28,399
the focus attack is the meeting the

217
00:10:28,399 --> 00:10:31,440
middle pre-image attack the basic idea

218
00:10:31,440 --> 00:10:34,240
is to find ways to split the cipher into

219
00:10:34,240 --> 00:10:37,040
two computational chunks each chunk

220
00:10:37,040 --> 00:10:39,600
involves at least one message word such

221
00:10:39,600 --> 00:10:42,160
that it can be computed over values of

222
00:10:42,160 --> 00:10:45,120
the involved message word independently

223
00:10:45,120 --> 00:10:47,279
from the message words involved in the

224
00:10:47,279 --> 00:10:48,560
other chunk

225
00:10:48,560 --> 00:10:50,959
those message words are called neutral

226
00:10:50,959 --> 00:10:53,440
words the two chunks are computed

227
00:10:53,440 --> 00:10:56,399
independently but end up at a common

228
00:10:56,399 --> 00:10:58,480
state where their results can be

229
00:10:58,480 --> 00:11:00,160
parasite

230
00:11:00,160 --> 00:11:02,160
several advanced techniques have been

231
00:11:02,160 --> 00:11:04,320
proposed to find better chunk

232
00:11:04,320 --> 00:11:07,200
separations and to cover morons for

233
00:11:07,200 --> 00:11:10,000
example the split and cut the initial

234
00:11:10,000 --> 00:11:13,200
structure the partial indirect sniping

235
00:11:13,200 --> 00:11:15,600
suppose the number of possible values

236
00:11:15,600 --> 00:11:18,240
fall forward and backwards neutral words

237
00:11:18,240 --> 00:11:20,959
are two to the b1 t2

238
00:11:20,959 --> 00:11:23,120
and the partial matching

239
00:11:23,120 --> 00:11:25,440
provide an ambient filter then the

240
00:11:25,440 --> 00:11:28,000
attack complexity is about 2 to the n

241
00:11:28,000 --> 00:11:31,519
minus the minimum of d1 b2 and m

242
00:11:31,519 --> 00:11:34,160
in 2011 the meeting in the middle

243
00:11:34,160 --> 00:11:36,880
pre-image attack was applied to as

244
00:11:36,880 --> 00:11:39,760
hashing mode with the initial structure

245
00:11:39,760 --> 00:11:41,279
and the partial matching through myth

246
00:11:41,279 --> 00:11:43,839
columns the attack successfully

247
00:11:43,839 --> 00:11:46,560
penetrated several rounds of aes in the

248
00:11:46,560 --> 00:11:49,120
attack the neutral world are directly

249
00:11:49,120 --> 00:11:52,399
selected from the encryption state well

250
00:11:52,399 --> 00:11:54,560
the key states are fixed

251
00:11:54,560 --> 00:11:58,160
in 2009 it has shown that introducing

252
00:11:58,160 --> 00:12:00,240
mutual words in the key state is

253
00:12:00,240 --> 00:12:03,200
favorable and can provide more degree of

254
00:12:03,200 --> 00:12:06,160
freedom and help to cancel impacts

255
00:12:06,160 --> 00:12:08,800
however due to the limitation of manual

256
00:12:08,800 --> 00:12:11,839
analysis the considered configurations

257
00:12:11,839 --> 00:12:14,560
are quite limited actually there are

258
00:12:14,560 --> 00:12:17,360
many choices of studying and matching

259
00:12:17,360 --> 00:12:20,240
point choices of neutral bets and ways

260
00:12:20,240 --> 00:12:23,440
of consolation of impact such that

261
00:12:23,440 --> 00:12:26,800
manual analysis inevitably misses many

262
00:12:26,800 --> 00:12:29,600
possible attacks as cannot ensure

263
00:12:29,600 --> 00:12:31,760
optimal results

264
00:12:31,760 --> 00:12:34,160
this work generalized the need in the

265
00:12:34,160 --> 00:12:37,120
middle attack by removing many previous

266
00:12:37,120 --> 00:12:39,920
limitations and systematically searching

267
00:12:39,920 --> 00:12:42,800
and extended attack space the search

268
00:12:42,800 --> 00:12:45,360
covers all possible combinations of

269
00:12:45,360 --> 00:12:47,519
starting and matching point

270
00:12:47,519 --> 00:12:50,560
both in encryption and the key schedule

271
00:12:50,560 --> 00:12:53,040
it allowed to select neutral bytes for

272
00:12:53,040 --> 00:12:56,079
both chunks from both encryption and key

273
00:12:56,079 --> 00:12:58,720
state it allowed to consume degrees of

274
00:12:58,720 --> 00:13:02,959
freedom to cancel impact on any possible

275
00:13:02,959 --> 00:13:04,000
runs

276
00:13:04,000 --> 00:13:06,480
we formalized the attack configuration

277
00:13:06,480 --> 00:13:09,360
using explicitly defined rules including

278
00:13:09,360 --> 00:13:11,920
how the attribute of cells propagates

279
00:13:11,920 --> 00:13:14,160
through the restaurant operations and

280
00:13:14,160 --> 00:13:16,560
how to do patron matching we then

281
00:13:16,560 --> 00:13:19,200
translate the formulized attack coverage

282
00:13:19,200 --> 00:13:20,480
configuration

283
00:13:20,480 --> 00:13:22,720
into mixed integer linear programming

284
00:13:22,720 --> 00:13:25,040
modules reduce the searching for the

285
00:13:25,040 --> 00:13:27,920
best attack into solving optimization

286
00:13:27,920 --> 00:13:31,680
problems and a constraint in nlp

287
00:13:31,680 --> 00:13:34,639
the attribute of each cell of each state

288
00:13:34,639 --> 00:13:37,440
is encoded using binary variables

289
00:13:37,440 --> 00:13:39,839
indicating whether the cell is

290
00:13:39,839 --> 00:13:42,079
computable for each chunk

291
00:13:42,079 --> 00:13:44,399
initial degree of freedom are defined

292
00:13:44,399 --> 00:13:46,880
according to the attribute of cells in

293
00:13:46,880 --> 00:13:49,279
the selected starting state

294
00:13:49,279 --> 00:13:51,440
the rules on how attributes are

295
00:13:51,440 --> 00:13:54,079
propagated through each wrong operation

296
00:13:54,079 --> 00:13:57,920
as translated into linear inequalities

297
00:13:57,920 --> 00:13:59,600
additional binary variables are

298
00:13:59,600 --> 00:14:02,800
introduced to indicate the conditions of

299
00:14:02,800 --> 00:14:06,000
case-by-case rules after defining these

300
00:14:06,000 --> 00:14:08,320
indicator variables the attribute

301
00:14:08,320 --> 00:14:10,639
propagation through the operation can be

302
00:14:10,639 --> 00:14:12,800
constrainted using these indicator

303
00:14:12,800 --> 00:14:15,199
variables following a case-by-case

304
00:14:15,199 --> 00:14:18,240
analysis the number of consumed

305
00:14:18,240 --> 00:14:21,600
degrees of freedom is also counted

306
00:14:21,600 --> 00:14:25,120
the most involved one is the xor mca

307
00:14:25,120 --> 00:14:27,600
rule for the backward chunk which is

308
00:14:27,600 --> 00:14:29,839
shown to be necessary to cover more

309
00:14:29,839 --> 00:14:33,920
possible ways to cancellation of impact

310
00:14:33,920 --> 00:14:36,000
the matching rules are translated to

311
00:14:36,000 --> 00:14:38,320
count the degree of match the initial

312
00:14:38,320 --> 00:14:42,639
degree of freedom and accumulated

313
00:14:43,440 --> 00:14:44,720
degrees of

314
00:14:44,720 --> 00:14:46,560
consumed degrees of

315
00:14:46,560 --> 00:14:47,600
freedom

316
00:14:47,600 --> 00:14:49,920
are used to compute the

317
00:14:49,920 --> 00:14:51,839
final degree of freedom

318
00:14:51,839 --> 00:14:53,120
and

319
00:14:53,120 --> 00:14:55,279
the objective function is

320
00:14:55,279 --> 00:14:57,519
defined to maximize the computational

321
00:14:57,519 --> 00:14:59,199
advantage

322
00:14:59,199 --> 00:15:02,000
the generated mlp models are done

323
00:15:02,000 --> 00:15:04,800
dissolved using a solar ruby it turned

324
00:15:04,800 --> 00:15:06,720
out to be very efficient to perform

325
00:15:06,720 --> 00:15:09,279
exhaustive search for the last instance

326
00:15:09,279 --> 00:15:12,320
of aes hashing mode and aes like like

327
00:15:12,320 --> 00:15:13,680
hash functions

328
00:15:13,680 --> 00:15:16,440
that include an attack on 8th round aes

329
00:15:16,440 --> 00:15:19,040
128 hashing modes which is

330
00:15:19,040 --> 00:15:21,440
experimentally verified and the full

331
00:15:21,440 --> 00:15:23,839
round of herica 512

332
00:15:23,839 --> 00:15:26,079
b2

333
00:15:26,079 --> 00:15:29,279
thanks for your attention

334
00:15:35,600 --> 00:15:38,240
thank you jojo

335
00:15:38,240 --> 00:15:39,440
thank you

336
00:15:39,440 --> 00:15:43,839
yeah so any questions from the audience

337
00:15:48,639 --> 00:15:50,560
i'm also checking the zoolib where

338
00:15:50,560 --> 00:15:53,360
people can also post questions

339
00:15:53,360 --> 00:15:55,360
mostly crickets so far also for the

340
00:15:55,360 --> 00:15:58,000
previous sessions okay uh junction in

341
00:15:58,000 --> 00:16:00,639
that case i have a question for you

342
00:16:00,639 --> 00:16:02,639
i think it's really exciting to see uh

343
00:16:02,639 --> 00:16:04,399
so many papers using automated

344
00:16:04,399 --> 00:16:07,120
techniques in this case you were using

345
00:16:07,120 --> 00:16:09,839
mixed integer linear programming did you

346
00:16:09,839 --> 00:16:11,040
consider

347
00:16:11,040 --> 00:16:12,959
using other types of automated

348
00:16:12,959 --> 00:16:15,519
techniques as well like why specifically

349
00:16:15,519 --> 00:16:17,360
mixed integer linear programming not

350
00:16:17,360 --> 00:16:18,480
like

351
00:16:18,480 --> 00:16:20,160
set solver for example or different

352
00:16:20,160 --> 00:16:22,720
methods

353
00:16:22,720 --> 00:16:24,160
we think

354
00:16:24,160 --> 00:16:27,360
the direct truth is with integer linear

355
00:16:27,360 --> 00:16:29,920
programming and it currently is very

356
00:16:29,920 --> 00:16:31,839
efficient so

357
00:16:31,839 --> 00:16:33,040
we haven't

358
00:16:33,040 --> 00:16:36,079
used others or

359
00:16:38,320 --> 00:16:39,279
okay

360
00:16:39,279 --> 00:16:41,199
so you didn't try a set solver because

361
00:16:41,199 --> 00:16:45,839
it was fast enough uh just usually

362
00:16:46,800 --> 00:16:51,839
okay great uh let's thank changing again

363
00:16:53,199 --> 00:16:56,079
and please excuse me for interrupting uh

364
00:16:56,079 --> 00:16:59,040
we have a request to deal with technical

365
00:16:59,040 --> 00:17:01,839
issues real quick

366
00:17:02,839 --> 00:17:06,079
um so you can hear us now

367
00:17:06,079 --> 00:17:08,240
yes it seems to work better now

368
00:17:08,240 --> 00:17:10,799
okay what about now do you still hear us

369
00:17:10,799 --> 00:17:12,000
yes

370
00:17:12,000 --> 00:17:14,959
do you hear me scratching the microphone

371
00:17:14,959 --> 00:17:16,240
yes

372
00:17:16,240 --> 00:17:17,280
okay

373
00:17:17,280 --> 00:17:21,199
uh that's right go there and speak

374
00:17:23,839 --> 00:17:25,679
thanks everyone we will continue in a

375
00:17:25,679 --> 00:17:28,000
moment

376
00:17:30,840 --> 00:17:34,400
speaker excuse me can you hear me

377
00:17:34,400 --> 00:17:36,640
yes

378
00:17:38,040 --> 00:17:39,280
[Music]

379
00:17:39,280 --> 00:17:41,840
oh that's terrible that's terrible audio

380
00:17:41,840 --> 00:17:43,679
that's not the one

381
00:17:43,679 --> 00:17:46,679
um

382
00:17:51,039 --> 00:17:52,720
hello

383
00:17:52,720 --> 00:17:54,320
yeah that's better

384
00:17:54,320 --> 00:17:56,559
okay

385
00:17:56,880 --> 00:17:58,640
okay i would suggest we move to the

386
00:17:58,640 --> 00:18:02,000
previous talk it seems that jungman is

387
00:18:02,000 --> 00:18:05,280
now collected connected

388
00:18:08,320 --> 00:18:10,080
so the talk is titled rotational

389
00:18:10,080 --> 00:18:12,240
cryptanalysis from a differential linear

390
00:18:12,240 --> 00:18:14,320
perspective young when the floor is

391
00:18:14,320 --> 00:18:16,639
yours

392
00:18:23,760 --> 00:18:25,919
okay can you hear me

393
00:18:25,919 --> 00:18:28,919
yes

394
00:18:31,280 --> 00:18:33,600
okay you're good uh

395
00:18:33,600 --> 00:18:36,000
let me

396
00:18:36,480 --> 00:18:40,600
let me share this screen

397
00:18:41,190 --> 00:18:44,349
[Music]

398
00:18:46,400 --> 00:18:47,280
okay

399
00:18:47,280 --> 00:18:50,480
okay you see my string

400
00:18:52,640 --> 00:18:54,960
yes we can

401
00:18:54,960 --> 00:18:58,080
and you'll just need to hit

402
00:18:59,360 --> 00:19:01,039
you'll just need to go into players yes

403
00:19:01,039 --> 00:19:04,200
i am

404
00:19:08,160 --> 00:19:11,200
[Music]

405
00:19:11,200 --> 00:19:12,640
yes

406
00:19:12,640 --> 00:19:14,080
okay

407
00:19:14,080 --> 00:19:15,280
uh

408
00:19:15,280 --> 00:19:18,520
thank you

409
00:19:26,400 --> 00:19:28,160
okay uh

410
00:19:28,160 --> 00:19:32,000
uh good evening everyone i am human and

411
00:19:32,000 --> 00:19:35,360
uh this is a work uh rotational analysis

412
00:19:35,360 --> 00:19:37,760
in a different linear perspective

413
00:19:37,760 --> 00:19:40,559
it is a joint work with sueveson and

414
00:19:40,559 --> 00:19:42,480
charlie

415
00:19:42,480 --> 00:19:45,360
in this study our focus is on

416
00:19:45,360 --> 00:19:48,320
differential linear analysis and we are

417
00:19:48,320 --> 00:19:52,240
interested in two questions

418
00:19:52,240 --> 00:19:54,880
how to extend

419
00:19:54,880 --> 00:19:56,080
the

420
00:19:56,080 --> 00:19:59,840
framework of differential analysis and

421
00:19:59,840 --> 00:20:02,480
how to compute the differential linear

422
00:20:02,480 --> 00:20:04,960
probability with

423
00:20:04,960 --> 00:20:07,440
improved accuracy

424
00:20:07,440 --> 00:20:10,240
so what we do in this paper is to

425
00:20:10,240 --> 00:20:12,640
generalize the differentiation

426
00:20:12,640 --> 00:20:16,919
so we propose uh

427
00:20:27,760 --> 00:20:30,320
i believe yunwen is having connection

428
00:20:30,320 --> 00:20:33,039
issues now uh

429
00:20:33,039 --> 00:20:35,840
so

430
00:20:37,039 --> 00:20:39,440
i think we have to move to the next talk

431
00:20:39,440 --> 00:20:42,320
okay let's move to the next talk

432
00:20:42,320 --> 00:20:45,440
so the next talk is titled a deeper look

433
00:20:45,440 --> 00:20:48,080
at machine

434
00:20:48,080 --> 00:20:49,200
okay

435
00:20:49,200 --> 00:20:51,440
a deeper look at machine learning based

436
00:20:51,440 --> 00:20:53,840
cryptanalysis and will be given by

437
00:20:53,840 --> 00:20:56,000
adrian benamira

438
00:20:56,000 --> 00:20:59,280
adrian the floor is yours

439
00:20:59,679 --> 00:21:02,960
okay thank you very much can you hear me

440
00:21:02,960 --> 00:21:05,679
we can hear you perfectly perfect okay

441
00:21:05,679 --> 00:21:08,159
so um my condition of internet is also

442
00:21:08,159 --> 00:21:10,400
unstable so i hope we will have no

443
00:21:10,400 --> 00:21:11,679
trouble

444
00:21:11,679 --> 00:21:13,360
hello everyone welcome at this

445
00:21:13,360 --> 00:21:16,320
presentation entitled a deeper look at

446
00:21:16,320 --> 00:21:18,400
machine learning based crypto analysis

447
00:21:18,400 --> 00:21:19,679
so

448
00:21:19,679 --> 00:21:21,520
my name is adrian benamira and this is a

449
00:21:21,520 --> 00:21:25,280
genre with david jiro thomas

450
00:21:26,159 --> 00:21:27,919
so there are three parts

451
00:21:27,919 --> 00:21:29,440
in this presentation the first one

452
00:21:29,440 --> 00:21:32,559
introduces the 2019 crypto paper of

453
00:21:32,559 --> 00:21:33,919
arwan go

454
00:21:33,919 --> 00:21:35,039
then

455
00:21:35,039 --> 00:21:37,039
we will explore the introduction of gold

456
00:21:37,039 --> 00:21:38,400
neural distinguisher with two

457
00:21:38,400 --> 00:21:40,640
perspectives crypto analysis and machine

458
00:21:40,640 --> 00:21:43,039
learning

459
00:21:43,200 --> 00:21:46,240
so uh in crypto 2019 aaron gore

460
00:21:46,240 --> 00:21:48,159
introduced a neural network based

461
00:21:48,159 --> 00:21:51,200
distinguisher neural distinguisher and

462
00:21:51,200 --> 00:21:55,200
he applied it on reduced fronts of spec

463
00:21:55,200 --> 00:21:57,440
the binary classification task learned

464
00:21:57,440 --> 00:21:59,440
by the neural network is the following

465
00:21:59,440 --> 00:22:01,919
the input is a pair of binary ciphertext

466
00:22:01,919 --> 00:22:03,919
and the neural network predicts if the

467
00:22:03,919 --> 00:22:05,840
input comes from a fixed input

468
00:22:05,840 --> 00:22:08,240
difference plaintext or from a random

469
00:22:08,240 --> 00:22:11,360
input difference plaintext

470
00:22:11,360 --> 00:22:12,640
um

471
00:22:12,640 --> 00:22:14,880
so this knowledge work performed better

472
00:22:14,880 --> 00:22:16,559
compared to pure differential

473
00:22:16,559 --> 00:22:17,919
distinguishers

474
00:22:17,919 --> 00:22:20,559
one notable results from course paper is

475
00:22:20,559 --> 00:22:22,880
that he improved the 11 wrong key

476
00:22:22,880 --> 00:22:26,520
recovery attack

477
00:22:26,640 --> 00:22:27,440
uh

478
00:22:27,440 --> 00:22:29,760
so these are the results for the

479
00:22:29,760 --> 00:22:32,559
node distinguisher compares to purely

480
00:22:32,559 --> 00:22:34,080
distinguishers

481
00:22:34,080 --> 00:22:36,000
so we can observe that every time the

482
00:22:36,000 --> 00:22:38,799
neural distinguisher is better than pure

483
00:22:38,799 --> 00:22:40,559
differential distinguisher

484
00:22:40,559 --> 00:22:42,480
so that means that no the neural network

485
00:22:42,480 --> 00:22:44,720
is able to learn appropriate p that we

486
00:22:44,720 --> 00:22:46,000
don't know

487
00:22:46,000 --> 00:22:48,320
and that we want to approximate uh to

488
00:22:48,320 --> 00:22:50,240
approximate sorry and this is what we

489
00:22:50,240 --> 00:22:52,880
are going to see uh that we have done in

490
00:22:52,880 --> 00:22:55,280
our paper so can we replicate the

491
00:22:55,280 --> 00:22:56,880
results of the neural distinguisher

492
00:22:56,880 --> 00:22:58,799
without the neural network

493
00:22:58,799 --> 00:23:00,400
can you speak a bit louder or move

494
00:23:00,400 --> 00:23:02,080
closer to the microphone

495
00:23:02,080 --> 00:23:03,039
sorry

496
00:23:03,039 --> 00:23:07,360
sorry okay i will speak here later

497
00:23:07,440 --> 00:23:09,440
okay so first part crypto analysis

498
00:23:09,440 --> 00:23:13,039
perspective is it better like this

499
00:23:15,039 --> 00:23:17,039
uh hello

500
00:23:17,039 --> 00:23:19,360
yes we can hear you a little bit better

501
00:23:19,360 --> 00:23:20,320
i think

502
00:23:20,320 --> 00:23:22,080
okay

503
00:23:22,080 --> 00:23:23,440
so

504
00:23:23,440 --> 00:23:25,440
um

505
00:23:25,440 --> 00:23:27,679
we introduced the average key rank

506
00:23:27,679 --> 00:23:30,960
distinguisher the i the idea is that we

507
00:23:30,960 --> 00:23:33,760
make use of the masked ddt that is a ddt

508
00:23:33,760 --> 00:23:36,159
with some position ignore n minus one

509
00:23:36,159 --> 00:23:38,640
round for enron distinguisher

510
00:23:38,640 --> 00:23:40,880
then we decrypt the last round with all

511
00:23:40,880 --> 00:23:43,279
possible sub keys and take the average

512
00:23:43,279 --> 00:23:45,679
probability depending on the average

513
00:23:45,679 --> 00:23:48,400
probability well put one

514
00:23:48,400 --> 00:23:51,039
real or random zero

515
00:23:51,039 --> 00:23:53,760
not that this distinguisher is crafted

516
00:23:53,760 --> 00:23:56,000
such that the data and time complexities

517
00:23:56,000 --> 00:23:59,440
matched that of gold or distinguisher

518
00:23:59,440 --> 00:24:02,080
these are the results of our average key

519
00:24:02,080 --> 00:24:04,159
rank distinguisher compared to garnier

520
00:24:04,159 --> 00:24:06,000
distinguisher we would like to

521
00:24:06,000 --> 00:24:09,760
especially highlight that first we

522
00:24:09,760 --> 00:24:12,080
every time we match the accuracy of the

523
00:24:12,080 --> 00:24:15,679
normal distinguisher and also also

524
00:24:15,679 --> 00:24:17,919
we have the same conclusion with the

525
00:24:17,919 --> 00:24:21,360
node distinguisher for 97.6 of the test

526
00:24:21,360 --> 00:24:23,600
set

527
00:24:26,799 --> 00:24:29,840
so now the machine learning perspective

528
00:24:29,840 --> 00:24:31,760
so the normal distinguisher can be

529
00:24:31,760 --> 00:24:33,919
modeled into three blocks so here you

530
00:24:33,919 --> 00:24:36,400
have the overall architecture

531
00:24:36,400 --> 00:24:38,159
here you have the inputs

532
00:24:38,159 --> 00:24:40,480
and the first block which is a 1d cnn

533
00:24:40,480 --> 00:24:42,480
with a common size one transform the

534
00:24:42,480 --> 00:24:43,840
input

535
00:24:43,840 --> 00:24:48,480
then you have 10 layers of 1d cnn

536
00:24:48,480 --> 00:24:51,520
and at the end you have a filters f

537
00:24:51,520 --> 00:24:53,679
which is a flattened

538
00:24:53,679 --> 00:24:55,200
which is a

539
00:24:55,200 --> 00:24:57,760
where each element is a nonlinear

540
00:24:57,760 --> 00:24:59,679
function over the inputs

541
00:24:59,679 --> 00:25:01,679
then you have finally a multi-layer

542
00:25:01,679 --> 00:25:04,720
perceptron to map to the output

543
00:25:04,720 --> 00:25:07,120
so our objective here is now to replace

544
00:25:07,120 --> 00:25:09,760
each of these individual blocks

545
00:25:09,760 --> 00:25:12,640
so we start from the inputs

546
00:25:12,640 --> 00:25:15,440
then we have delta l delta v v 0

547
00:25:15,440 --> 00:25:17,840
v 1 which corresponds to the output of

548
00:25:17,840 --> 00:25:20,080
the first block so this is the input

549
00:25:20,080 --> 00:25:21,760
transformation

550
00:25:21,760 --> 00:25:22,640
then

551
00:25:22,640 --> 00:25:24,640
from the node distinguisher we extract

552
00:25:24,640 --> 00:25:26,320
the mask

553
00:25:26,320 --> 00:25:29,520
and this max we apply it over the inputs

554
00:25:29,520 --> 00:25:32,080
with the end operation

555
00:25:32,080 --> 00:25:35,440
then we compute a ddt we call this ddt

556
00:25:35,440 --> 00:25:38,880
mask odt because uh we don't compute on

557
00:25:38,880 --> 00:25:41,279
different hole but on the output of the

558
00:25:41,279 --> 00:25:44,559
cipher and we apply a mask

559
00:25:44,559 --> 00:25:47,440
then at inference time

560
00:25:47,440 --> 00:25:49,200
we compute the probability of having

561
00:25:49,200 --> 00:25:51,600
real means having one knowing the input

562
00:25:51,600 --> 00:25:53,919
and the mask one of course we can repeat

563
00:25:53,919 --> 00:25:57,840
this operation for multiple masks

564
00:25:59,279 --> 00:26:01,360
so all these probabilities

565
00:26:01,360 --> 00:26:02,880
we consider that this is the

566
00:26:02,880 --> 00:26:05,520
approximation for the non-linear for the

567
00:26:05,520 --> 00:26:08,320
features f above

568
00:26:08,320 --> 00:26:11,120
and then we finally classify with any

569
00:26:11,120 --> 00:26:14,239
ensemble classifier

570
00:26:14,640 --> 00:26:17,039
so just a big picture of that does mean

571
00:26:17,039 --> 00:26:20,880
that we you can replace the resnet

572
00:26:20,880 --> 00:26:24,159
by multiple ddt actually multiples mask

573
00:26:24,159 --> 00:26:26,480
ddt

574
00:26:26,480 --> 00:26:28,720
and this pipeline actually give pretty

575
00:26:28,720 --> 00:26:31,200
relevant results compared to the null

576
00:26:31,200 --> 00:26:32,720
distinguisher so here you have the

577
00:26:32,720 --> 00:26:35,200
results on five rounds

578
00:26:35,200 --> 00:26:37,279
and here on six rounds the matching is

579
00:26:37,279 --> 00:26:39,360
also pretty high

580
00:26:39,360 --> 00:26:41,520
we can also we have also observed that

581
00:26:41,520 --> 00:26:44,960
it can be exactly related to adron simon

582
00:26:44,960 --> 00:26:47,200
thank you very much for your attention

583
00:26:47,200 --> 00:26:48,960
do you have any question so i will

584
00:26:48,960 --> 00:26:50,720
handle the machine learning part and

585
00:26:50,720 --> 00:26:52,320
trench when we handle the crypto

586
00:26:52,320 --> 00:26:55,200
analysis part

587
00:26:55,440 --> 00:26:58,240
thank you adrian

588
00:26:58,240 --> 00:26:59,840
so i mean you figured out by now i have

589
00:26:59,840 --> 00:27:01,520
a question if the audience doesn't have

590
00:27:01,520 --> 00:27:03,440
a question but don't rely on me for

591
00:27:03,440 --> 00:27:05,200
everything here right question from the

592
00:27:05,200 --> 00:27:06,880
audience please

593
00:27:06,880 --> 00:27:09,360
anyone

594
00:27:11,919 --> 00:27:14,240
yes

595
00:27:14,400 --> 00:27:16,240
can you state your name and ask your

596
00:27:16,240 --> 00:27:18,880
question hello can you hear me okay good

597
00:27:18,880 --> 00:27:21,440
hi i'm fernando uh thank you for the

598
00:27:21,440 --> 00:27:23,679
presentation i was wondering in the

599
00:27:23,679 --> 00:27:25,679
abstract of the paper you mentioned that

600
00:27:25,679 --> 00:27:27,440
the distinguisher somehow learned the

601
00:27:27,440 --> 00:27:30,559
differential uh table inside the cipher

602
00:27:30,559 --> 00:27:32,240
that the the previous the crypto 19

603
00:27:32,240 --> 00:27:34,559
paper was attacking

604
00:27:34,559 --> 00:27:37,279
do you have any insight if it is because

605
00:27:37,279 --> 00:27:39,520
learning this table is essentially

606
00:27:39,520 --> 00:27:41,679
equivalent to training a neural network

607
00:27:41,679 --> 00:27:42,559
like

608
00:27:42,559 --> 00:27:44,559
is there a clear mathematical relation

609
00:27:44,559 --> 00:27:46,000
there or is it just that it happened to

610
00:27:46,000 --> 00:27:48,880
do it

611
00:27:48,880 --> 00:27:49,840
um

612
00:27:49,840 --> 00:27:53,279
okay so i will answer it for the machine

613
00:27:53,279 --> 00:27:55,279
perspective and maybe i will let trench

614
00:27:55,279 --> 00:27:58,240
one at the world

615
00:27:58,880 --> 00:27:59,760
if he

616
00:27:59,760 --> 00:28:02,399
if he had something to add so

617
00:28:02,399 --> 00:28:04,720
um no there is no clear mathematical

618
00:28:04,720 --> 00:28:05,840
proof

619
00:28:05,840 --> 00:28:08,080
that you can replace uh

620
00:28:08,080 --> 00:28:10,880
that the neural network is learning

621
00:28:10,880 --> 00:28:12,880
so i want to be clear we don't have any

622
00:28:12,880 --> 00:28:14,799
mathematical proof

623
00:28:14,799 --> 00:28:18,480
for the moment actually uh maybe later

624
00:28:18,480 --> 00:28:19,279
but

625
00:28:19,279 --> 00:28:20,559
um

626
00:28:20,559 --> 00:28:22,880
and most over

627
00:28:22,880 --> 00:28:26,559
maybe i was not clear enough but the ddt

628
00:28:26,559 --> 00:28:28,000
is only

629
00:28:28,000 --> 00:28:30,159
actually it's multiple ddt and multiple

630
00:28:30,159 --> 00:28:32,960
mask ddt and it's only on the coverage

631
00:28:32,960 --> 00:28:36,000
null part so it's not the all blocks so

632
00:28:36,000 --> 00:28:38,000
i divided the neural network into three

633
00:28:38,000 --> 00:28:40,320
blocks here we are only talking about

634
00:28:40,320 --> 00:28:43,360
the block number two

635
00:28:43,360 --> 00:28:45,279
uh

636
00:28:45,279 --> 00:28:46,399
and

637
00:28:46,399 --> 00:28:48,880
yeah for the moment uh that's all maybe

638
00:28:48,880 --> 00:28:52,159
some trying to have something to add

639
00:28:52,159 --> 00:28:54,640
i don't know

640
00:28:54,640 --> 00:28:56,480
thank you does that answer your question

641
00:28:56,480 --> 00:28:58,880
more or less or yeah i guess i guess

642
00:28:58,880 --> 00:29:00,559
it's not clear which is

643
00:29:00,559 --> 00:29:02,240
perfectly fine

644
00:29:02,240 --> 00:29:04,640
thank you okay it's allowed to ask more

645
00:29:04,640 --> 00:29:07,840
than one question if somebody else has a

646
00:29:07,840 --> 00:29:11,399
question in the audience

647
00:29:12,000 --> 00:29:13,919
no okay in that case i would propose

648
00:29:13,919 --> 00:29:16,399
that we move on to the next talk

649
00:29:16,399 --> 00:29:18,399
next talk is entitled

650
00:29:18,399 --> 00:29:21,360
three third generation attacks on the

651
00:29:21,360 --> 00:29:24,799
format preserving encryption scheme ff3

652
00:29:24,799 --> 00:29:26,880
and the talk will be given by ohart

653
00:29:26,880 --> 00:29:30,559
among oh hot the floor is yours

654
00:29:34,000 --> 00:29:36,559
can you hear me

655
00:29:37,360 --> 00:29:40,760
yes we can

656
00:29:43,279 --> 00:29:44,720
um

657
00:29:44,720 --> 00:29:45,440
so

658
00:29:45,440 --> 00:29:47,120
the paper will i'll be presenting is a

659
00:29:47,120 --> 00:29:48,240
three-third generation of text on the

660
00:29:48,240 --> 00:29:51,039
format of encryption ff3 uh this paper

661
00:29:51,039 --> 00:29:55,039
is a work by myself or junkman nathan

662
00:29:55,039 --> 00:29:56,880
so the cipher that we are attacking is

663
00:29:56,880 --> 00:29:58,080
ff3

664
00:29:58,080 --> 00:30:00,240
which is a format preserving encryption

665
00:30:00,240 --> 00:30:02,480
scheme or fbe

666
00:30:02,480 --> 00:30:04,000
um the

667
00:30:04,000 --> 00:30:06,320
special thing about an fpe is that it is

668
00:30:06,320 --> 00:30:08,000
a symmetric cipher that can encrypt any

669
00:30:08,000 --> 00:30:09,360
domain into itself and like most

670
00:30:09,360 --> 00:30:10,559
symmetric ciphers that can only work

671
00:30:10,559 --> 00:30:12,880
over a specific domain um for example

672
00:30:12,880 --> 00:30:14,480
using an fpe we can encrypt the credit

673
00:30:14,480 --> 00:30:16,159
card number such that the ciphertext is

674
00:30:16,159 --> 00:30:19,120
also a valid valid credit card number um

675
00:30:19,120 --> 00:30:20,720
this is useful mainly for encrypting

676
00:30:20,720 --> 00:30:22,799
legacy databases whose formats cannot be

677
00:30:22,799 --> 00:30:24,559
altered or communication packets where

678
00:30:24,559 --> 00:30:26,320
the data needs to follow a specific

679
00:30:26,320 --> 00:30:27,360
format

680
00:30:27,360 --> 00:30:30,640
so how does the circuit look um f53 is a

681
00:30:30,640 --> 00:30:32,559
thirsty construction that accepts plain

682
00:30:32,559 --> 00:30:34,640
text of a domain m on n along with the

683
00:30:34,640 --> 00:30:36,720
key k and tweak t and it encrypts them

684
00:30:36,720 --> 00:30:38,640
to ciphertext into the same domain uh

685
00:30:38,640 --> 00:30:40,480
the tweak acts as an iv in order to

686
00:30:40,480 --> 00:30:42,320
enable independent encryptions of the

687
00:30:42,320 --> 00:30:44,080
same value

688
00:30:44,080 --> 00:30:45,520
throughout our work we assume for

689
00:30:45,520 --> 00:30:47,520
simplicity that m equals n and therefore

690
00:30:47,520 --> 00:30:50,480
we use n to express complexity which is

691
00:30:50,480 --> 00:30:53,679
expressed using data time and memory

692
00:30:53,679 --> 00:30:56,159
note that ff3 and format preserving

693
00:30:56,159 --> 00:30:57,919
encryptions in general are generally

694
00:30:57,919 --> 00:31:00,159
used in relatively small domains meaning

695
00:31:00,159 --> 00:31:02,480
that heavy usage of time and memory in

696
00:31:02,480 --> 00:31:04,799
relation to the domain size is practical

697
00:31:04,799 --> 00:31:06,559
in that case we generally prioritize

698
00:31:06,559 --> 00:31:08,399
minimizing the data requirements of

699
00:31:08,399 --> 00:31:10,640
attack even at the expense of additional

700
00:31:10,640 --> 00:31:12,159
time and memory

701
00:31:12,159 --> 00:31:14,559
so let's show previous attacks against

702
00:31:14,559 --> 00:31:16,960
ff3 the purpose of all of these attacks

703
00:31:16,960 --> 00:31:18,799
is to enable encryption and decryption

704
00:31:18,799 --> 00:31:20,559
of all plaintext and ciphertext under a

705
00:31:20,559 --> 00:31:21,840
certain tweak

706
00:31:21,840 --> 00:31:24,000
the most trivial way to do this is

707
00:31:24,000 --> 00:31:26,480
simply full code book recovery that

708
00:31:26,480 --> 00:31:28,399
means that assuming we have access to an

709
00:31:28,399 --> 00:31:30,640
encryption oracle we can query that

710
00:31:30,640 --> 00:31:32,559
oracle on all possible plaintexts and

711
00:31:32,559 --> 00:31:34,960
then keep a table of size and square

712
00:31:34,960 --> 00:31:37,200
that holds all of the ciphertext

713
00:31:37,200 --> 00:31:38,720
the first improvement to this attack was

714
00:31:38,720 --> 00:31:40,720
the first generation attack uh by duroc

715
00:31:40,720 --> 00:31:41,919
and vadene

716
00:31:41,919 --> 00:31:43,760
which meant that we now no longer need

717
00:31:43,760 --> 00:31:46,159
to query the entire domain and we can

718
00:31:46,159 --> 00:31:47,200
now

719
00:31:47,200 --> 00:31:49,919
recover all plaintext and ciphertext a

720
00:31:49,919 --> 00:31:52,640
heavy additional cost in time the second

721
00:31:52,640 --> 00:31:54,159
generation attack by juan miller and

722
00:31:54,159 --> 00:31:56,720
true in 2019 improved upon this by

723
00:31:56,720 --> 00:31:58,159
keeping the same data requirements while

724
00:31:58,159 --> 00:32:00,159
significantly reducing memory uh we

725
00:32:00,159 --> 00:32:01,840
present three additional attacks beyond

726
00:32:01,840 --> 00:32:03,919
this first we have a symmetric slide and

727
00:32:03,919 --> 00:32:05,919
an asymmetric slide attack these follow

728
00:32:05,919 --> 00:32:07,279
the footsteps of the second generation

729
00:32:07,279 --> 00:32:09,360
attack by huang miller and true

730
00:32:09,360 --> 00:32:11,360
by significantly reducing the data

731
00:32:11,360 --> 00:32:13,120
requirements while also increasing

732
00:32:13,120 --> 00:32:14,320
decreasing the time and memory

733
00:32:14,320 --> 00:32:16,799
requirements also adding a better time

734
00:32:16,799 --> 00:32:18,640
data trade-off meaning now we can reduce

735
00:32:18,640 --> 00:32:20,720
the data uh from end to the power of 11

736
00:32:20,720 --> 00:32:22,399
6 which is what we got in the second

737
00:32:22,399 --> 00:32:24,399
generation attack uh to up to enter the

738
00:32:24,399 --> 00:32:26,559
power of three halves uh which is a

739
00:32:26,559 --> 00:32:28,480
significant uh increase

740
00:32:28,480 --> 00:32:30,399
furthermore we present a third attack a

741
00:32:30,399 --> 00:32:32,159
cycle detection slide which is a

742
00:32:32,159 --> 00:32:33,840
practical application of an attack

743
00:32:33,840 --> 00:32:36,320
previously shown by bmw dinkleman and

744
00:32:36,320 --> 00:32:39,760
keller in 2007 which was then considered

745
00:32:39,760 --> 00:32:42,159
impractical due to high domain sizes of

746
00:32:42,159 --> 00:32:44,799
ciphers since ff3 works over low domain

747
00:32:44,799 --> 00:32:46,480
sizes that means that this attack which

748
00:32:46,480 --> 00:32:49,039
was previously considered theoretical uh

749
00:32:49,039 --> 00:32:52,000
is now practical on ff3 and we also

750
00:32:52,000 --> 00:32:54,320
verified it in our paper

751
00:32:54,320 --> 00:32:55,600
furthermore this attack makes

752
00:32:55,600 --> 00:32:57,679
interesting news of the structure of

753
00:32:57,679 --> 00:32:59,919
permutation graphs uh so this is the

754
00:32:59,919 --> 00:33:01,440
attack we present in our pre-recorded

755
00:33:01,440 --> 00:33:03,120
talk uh since it is also the most

756
00:33:03,120 --> 00:33:05,279
interesting uh all of our three attacks

757
00:33:05,279 --> 00:33:07,600
follow the same uh similar attack attack

758
00:33:07,600 --> 00:33:08,640
outline

759
00:33:08,640 --> 00:33:11,120
first we create a reduction from a round

760
00:33:11,120 --> 00:33:13,840
ff3 to four round ff3 using a slide

761
00:33:13,840 --> 00:33:14,960
attack

762
00:33:14,960 --> 00:33:16,720
second we break for around ff3 by

763
00:33:16,720 --> 00:33:18,159
reconstructing the codebooks of each of

764
00:33:18,159 --> 00:33:19,679
the individual ram functions using a

765
00:33:19,679 --> 00:33:21,519
subroutine uh known as prf

766
00:33:21,519 --> 00:33:22,880
reconstruction which is based on a

767
00:33:22,880 --> 00:33:25,440
similar subretine uh presented by uh han

768
00:33:25,440 --> 00:33:26,880
getal

769
00:33:26,880 --> 00:33:28,640
and then we can combine the above two in

770
00:33:28,640 --> 00:33:31,519
order to reconstruct the full ff3 which

771
00:33:31,519 --> 00:33:33,519
is eight rounds

772
00:33:33,519 --> 00:33:35,440
further contributions that we give in

773
00:33:35,440 --> 00:33:37,120
our paper beyond these three uh slide

774
00:33:37,120 --> 00:33:39,200
attacks or first we also improve the

775
00:33:39,200 --> 00:33:41,120
time complexity of prf reconstruction

776
00:33:41,120 --> 00:33:43,760
itself um where hong kong gave us n to

777
00:33:43,760 --> 00:33:45,120
the power of five thirds and we improved

778
00:33:45,120 --> 00:33:47,120
that to n to the power of three halves

779
00:33:47,120 --> 00:33:48,799
and also we introduced two related

780
00:33:48,799 --> 00:33:50,840
domain attacks which are attacks that

781
00:33:50,840 --> 00:33:54,880
require clearing over separate domains

782
00:33:54,880 --> 00:33:56,720
the first is a generic attack on cycle

783
00:33:56,720 --> 00:33:59,120
walking ft schemes and the second is a

784
00:33:59,120 --> 00:34:01,679
distinguishing attack on ff3 and ff31

785
00:34:01,679 --> 00:34:03,600
and we also have some additional minor

786
00:34:03,600 --> 00:34:05,360
results that i don't really have time to

787
00:34:05,360 --> 00:34:06,720
go over now

788
00:34:06,720 --> 00:34:09,440
so to conclude presented these three new

789
00:34:09,440 --> 00:34:11,760
attacks on ff3 where the first two

790
00:34:11,760 --> 00:34:14,159
significantly reduced data complexity

791
00:34:14,159 --> 00:34:15,599
while also improving the time and memory

792
00:34:15,599 --> 00:34:17,599
beyond what was known earlier

793
00:34:17,599 --> 00:34:19,679
and the cycle detection slide is a

794
00:34:19,679 --> 00:34:21,679
practical application of an attack

795
00:34:21,679 --> 00:34:25,200
previously thought to be theoretical

796
00:34:25,599 --> 00:34:28,240
any questions

797
00:34:28,399 --> 00:34:30,199
thank you oh hearts

798
00:34:30,199 --> 00:34:33,329
[Applause]

799
00:34:36,639 --> 00:34:38,320
yeah really interesting talk format

800
00:34:38,320 --> 00:34:39,599
preserving encryption is one of the

801
00:34:39,599 --> 00:34:41,918
things on my plate that nist and x9

802
00:34:41,918 --> 00:34:44,560
standardization um so i have a lot of

803
00:34:44,560 --> 00:34:46,399
questions let's see we have a question

804
00:34:46,399 --> 00:34:49,359
from the audience as well go ahead

805
00:34:49,359 --> 00:34:50,800
please state your name and ask your

806
00:34:50,800 --> 00:34:52,320
question

807
00:34:52,320 --> 00:34:53,199
hi

808
00:34:53,199 --> 00:34:54,800
i'm simon

809
00:34:54,800 --> 00:34:56,239
i have a question whether this is

810
00:34:56,239 --> 00:34:59,040
specific to the format preserving like

811
00:34:59,040 --> 00:35:01,359
is there anything specific to the

812
00:35:01,359 --> 00:35:03,520
format preserving property or could it

813
00:35:03,520 --> 00:35:06,079
also be applied the attack to form

814
00:35:06,079 --> 00:35:09,440
from a transforming uh encryption

815
00:35:09,440 --> 00:35:11,520
um

816
00:35:11,520 --> 00:35:13,760
i'm not really familiar with format

817
00:35:13,760 --> 00:35:15,359
transforming encryptions

818
00:35:15,359 --> 00:35:17,280
but these attacks aren't general against

819
00:35:17,280 --> 00:35:18,800
any fbes

820
00:35:18,800 --> 00:35:20,880
they rely on a specific weakness that

821
00:35:20,880 --> 00:35:23,440
ff3 has in its tweak structure

822
00:35:23,440 --> 00:35:25,280
so it cannot be generalized to other

823
00:35:25,280 --> 00:35:27,359
ciphers

824
00:35:27,359 --> 00:35:28,839
okay thank

825
00:35:28,839 --> 00:35:33,280
you so a question that i have is um as

826
00:35:33,280 --> 00:35:35,440
you might know there's a proposed update

827
00:35:35,440 --> 00:35:37,960
for ff3 that is called

828
00:35:37,960 --> 00:35:41,839
ff3.1 or ff3-1 depending on the standard

829
00:35:41,839 --> 00:35:43,920
that you're looking at

830
00:35:43,920 --> 00:35:46,160
where the proposal is to

831
00:35:46,160 --> 00:35:49,599
set a few bits of the tweak to zero

832
00:35:49,599 --> 00:35:51,839
actually a suggestion by uh

833
00:35:51,839 --> 00:35:54,079
sesh fordine in this paper with petul

834
00:35:54,079 --> 00:35:55,920
durak

835
00:35:55,920 --> 00:35:58,560
have you looked at differences between

836
00:35:58,560 --> 00:36:02,320
ff3 ff3-1 or dot one and

837
00:36:02,320 --> 00:36:04,560
if there might be

838
00:36:04,560 --> 00:36:06,880
some idea of perhaps extending some of

839
00:36:06,880 --> 00:36:07,760
the

840
00:36:07,760 --> 00:36:11,720
results that you have here

841
00:36:14,240 --> 00:36:18,000
um ff31 um

842
00:36:18,000 --> 00:36:19,839
our attacks it does invalidate our

843
00:36:19,839 --> 00:36:22,079
attacks since the weakness require

844
00:36:22,079 --> 00:36:24,560
relies on basically making uh encrypting

845
00:36:24,560 --> 00:36:26,640
under two separate tweaks that generate

846
00:36:26,640 --> 00:36:27,920
uh similarities between the rank

847
00:36:27,920 --> 00:36:29,520
functions so those are invalidated by

848
00:36:29,520 --> 00:36:32,000
that fix um and

849
00:36:32,000 --> 00:36:34,560
however um we do present

850
00:36:34,560 --> 00:36:35,599
uh

851
00:36:35,599 --> 00:36:36,960
one of our

852
00:36:36,960 --> 00:36:39,200
related domain attacks

853
00:36:39,200 --> 00:36:41,920
does address ff31 uh our main three

854
00:36:41,920 --> 00:36:44,640
slide attacks that are the main part of

855
00:36:44,640 --> 00:36:48,079
the paper however are not relevant uh

856
00:36:48,079 --> 00:36:49,920
foreign

857
00:36:49,920 --> 00:36:50,300
um

858
00:36:50,300 --> 00:36:51,440
[Music]

859
00:36:51,440 --> 00:36:53,040
since it fixes the issue with the tweet

860
00:36:53,040 --> 00:36:55,839
structure

861
00:36:57,359 --> 00:36:59,680
okay thanks i hope that some of the

862
00:36:59,680 --> 00:37:01,520
students maybe in the audience can say i

863
00:37:01,520 --> 00:37:03,040
can prove you wrong and i have an attack

864
00:37:03,040 --> 00:37:04,720
for that cipher as well

865
00:37:04,720 --> 00:37:06,960
so that's a challenge

866
00:37:06,960 --> 00:37:09,200
let's move on to the next talk

867
00:37:09,200 --> 00:37:13,280
cryptanalysis of the gprs encryption

868
00:37:13,280 --> 00:37:17,200
algorithms gea1 and gea2

869
00:37:17,200 --> 00:37:19,760
and the talk will be given by christoph

870
00:37:19,760 --> 00:37:23,839
beyerle christoph the floor is yours

871
00:37:24,560 --> 00:37:27,119
can you hear me

872
00:37:27,839 --> 00:37:29,599
yes yes

873
00:37:29,599 --> 00:37:33,520
thank you very much for the introduction

874
00:37:33,920 --> 00:37:35,359
so

875
00:37:35,359 --> 00:37:37,839
this talk is about the stream cyphers

876
00:37:37,839 --> 00:37:40,000
gea 1 and gea2

877
00:37:40,000 --> 00:37:42,800
and those are proprietary stream ciphers

878
00:37:42,800 --> 00:37:46,240
for encrypting the gprs traffic in the

879
00:37:46,240 --> 00:37:48,320
early 2000s

880
00:37:48,320 --> 00:37:49,760
and

881
00:37:49,760 --> 00:37:52,240
so compared to the a5 algorithms which

882
00:37:52,240 --> 00:37:54,320
were used for voice encryption

883
00:37:54,320 --> 00:37:56,160
and these algorithms were used for the

884
00:37:56,160 --> 00:37:58,240
for the data encryption in the 2g

885
00:37:58,240 --> 00:37:59,440
standard

886
00:37:59,440 --> 00:38:01,280
and they were designed by

887
00:38:01,280 --> 00:38:03,280
by etsy which is the european

888
00:38:03,280 --> 00:38:08,079
specification organization in 1998

889
00:38:08,079 --> 00:38:10,079
there were some reports on

890
00:38:10,079 --> 00:38:13,280
on the insecurity of gea 1

891
00:38:13,280 --> 00:38:15,520
so the etsy already prohibited the

892
00:38:15,520 --> 00:38:20,000
implementation of ga1 in 2013 while ga2

893
00:38:20,000 --> 00:38:21,920
is still mandatory to be implemented

894
00:38:21,920 --> 00:38:24,240
today

895
00:38:24,240 --> 00:38:27,359
but still both algorithms are not yet

896
00:38:27,359 --> 00:38:31,720
disclosed or publicly analyzed

897
00:38:32,880 --> 00:38:34,640
so to if you want if you quote from an

898
00:38:34,640 --> 00:38:37,119
official design document

899
00:38:37,119 --> 00:38:40,880
by etsy from 1998

900
00:38:40,880 --> 00:38:43,920
it says that the algorithm should be

901
00:38:43,920 --> 00:38:46,560
generally exportable taking into account

902
00:38:46,560 --> 00:38:49,280
current export restrictions

903
00:38:49,280 --> 00:38:52,079
and that within this operational context

904
00:38:52,079 --> 00:38:54,160
the algorithm provides an adequate level

905
00:38:54,160 --> 00:38:56,720
of security against eavesdropping

906
00:38:56,720 --> 00:38:59,119
yeah so the question remains

907
00:38:59,119 --> 00:39:03,520
what are these official restrictions for

908
00:39:03,520 --> 00:39:06,960
for fulfilling this export conditions

909
00:39:06,960 --> 00:39:08,160
and they were not

910
00:39:08,160 --> 00:39:09,839
explicitly stated

911
00:39:09,839 --> 00:39:11,839
but if you look at some other sources

912
00:39:11,839 --> 00:39:14,480
from that time for example some french

913
00:39:14,480 --> 00:39:16,880
laws there is a strong indication that

914
00:39:16,880 --> 00:39:18,560
this has

915
00:39:18,560 --> 00:39:20,800
this is associated to 40 bits of

916
00:39:20,800 --> 00:39:22,160
security

917
00:39:22,160 --> 00:39:24,079
yeah so we expect that this uh this

918
00:39:24,079 --> 00:39:26,079
algorithm has a

919
00:39:26,079 --> 00:39:28,400
significant weakness

920
00:39:28,400 --> 00:39:30,800
although it has a 64-bit key yeah so we

921
00:39:30,800 --> 00:39:32,880
would expect some security around 40

922
00:39:32,880 --> 00:39:35,200
bits

923
00:39:35,280 --> 00:39:37,520
in this talk i only focus on the crypt

924
00:39:37,520 --> 00:39:40,320
analysis or on the weakness on gea 1 for

925
00:39:40,320 --> 00:39:43,359
the full details also about ga2

926
00:39:43,359 --> 00:39:45,359
i refer to the paper or to the to the

927
00:39:45,359 --> 00:39:47,359
longer talk

928
00:39:47,359 --> 00:39:50,160
yeah so ge1 is a stream cipher which

929
00:39:50,160 --> 00:39:53,359
operates on a 96 bit internal state

930
00:39:53,359 --> 00:39:55,040
so this is depicted by these three

931
00:39:55,040 --> 00:39:56,880
registers here where each blue cell

932
00:39:56,880 --> 00:39:59,440
indicates one bit

933
00:39:59,440 --> 00:40:02,560
and from the session key and from the iv

934
00:40:02,560 --> 00:40:06,480
there will be a 64-bit seat generated

935
00:40:06,480 --> 00:40:08,720
yeah from this seat you can

936
00:40:08,720 --> 00:40:11,119
recover the session key

937
00:40:11,119 --> 00:40:13,280
and then there is a linear operation

938
00:40:13,280 --> 00:40:15,839
which maps the 64-bit state

939
00:40:15,839 --> 00:40:20,240
the 64-bit seat to a 96-bit state

940
00:40:20,240 --> 00:40:23,440
and then the states generate 1600 bytes

941
00:40:23,440 --> 00:40:26,800
of key stream by clocking the lfsrs

942
00:40:26,800 --> 00:40:28,640
and then choosing from each register

943
00:40:28,640 --> 00:40:31,359
seven bits which go into this function f

944
00:40:31,359 --> 00:40:34,160
and then the three bits um uh xord to

945
00:40:34,160 --> 00:40:36,720
generate the bit of the output stream

946
00:40:36,720 --> 00:40:38,720
and the goal of the attacker is to

947
00:40:38,720 --> 00:40:41,119
recover the 64-bit seat

948
00:40:41,119 --> 00:40:44,640
um from some bits of non-key stream zi

949
00:40:44,640 --> 00:40:47,359
where this data is limited by the

950
00:40:47,359 --> 00:40:50,480
available data per frame which is 12 800

951
00:40:50,480 --> 00:40:54,319
bits or 1 600 bytes

952
00:40:55,920 --> 00:40:58,880
so the weakness here is that after the

953
00:40:58,880 --> 00:41:01,359
linear initialization process

954
00:41:01,359 --> 00:41:04,000
the joint initial 64-bit states of the

955
00:41:04,000 --> 00:41:06,960
two registers a and c is only in a set

956
00:41:06,960 --> 00:41:11,119
of two to the 40 possible states

957
00:41:11,280 --> 00:41:14,319
so we would expect an entropy of 64 bits

958
00:41:14,319 --> 00:41:16,960
for registers ac but in fact it is only

959
00:41:16,960 --> 00:41:20,280
40 bits

960
00:41:20,400 --> 00:41:22,319
and this would directly lead to a very

961
00:41:22,319 --> 00:41:24,480
simple meet in the middle attack

962
00:41:24,480 --> 00:41:26,720
where the idea is that you generate a

963
00:41:26,720 --> 00:41:27,680
table

964
00:41:27,680 --> 00:41:28,960
for all

965
00:41:28,960 --> 00:41:31,920
two to the 33 possible values for

966
00:41:31,920 --> 00:41:33,359
register b

967
00:41:33,359 --> 00:41:35,440
and store the output store the output

968
00:41:35,440 --> 00:41:36,480
stream

969
00:41:36,480 --> 00:41:38,640
after the function f yeah so this bi

970
00:41:38,640 --> 00:41:39,760
values

971
00:41:39,760 --> 00:41:41,680
in a sorted table

972
00:41:41,680 --> 00:41:43,440
and then you exhaustively search over

973
00:41:43,440 --> 00:41:45,599
the two to the 40 possible states for a

974
00:41:45,599 --> 00:41:46,720
and c

975
00:41:46,720 --> 00:41:49,040
and find a match in the table

976
00:41:49,040 --> 00:41:50,640
and this gives an attack of time

977
00:41:50,640 --> 00:41:52,880
complexity 2 to the 40

978
00:41:52,880 --> 00:41:56,000
and only needs 65 bits of non-key stream

979
00:41:56,000 --> 00:41:57,760
but it needs some memory complexity

980
00:41:57,760 --> 00:41:59,200
because you have to pre-compute this

981
00:41:59,200 --> 00:42:01,839
table it's roughly 45 gigabyte of memory

982
00:42:01,839 --> 00:42:03,680
complexity

983
00:42:03,680 --> 00:42:05,839
yeah so we have seen that here there is

984
00:42:05,839 --> 00:42:07,920
an attack which matches this 40-bit

985
00:42:07,920 --> 00:42:10,319
security

986
00:42:10,319 --> 00:42:13,119
um we analyzed whether this

987
00:42:13,119 --> 00:42:14,480
attack

988
00:42:14,480 --> 00:42:16,640
is likely to occur by chance or if it's

989
00:42:16,640 --> 00:42:18,960
really an exceptional property

990
00:42:18,960 --> 00:42:21,760
um so the weakness was that the image of

991
00:42:21,760 --> 00:42:23,839
the joint initialization matrix for

992
00:42:23,839 --> 00:42:25,839
these two registers has a very low

993
00:42:25,839 --> 00:42:29,680
dimension here dimension 40.

994
00:42:29,680 --> 00:42:32,079
so we experimentally checked what would

995
00:42:32,079 --> 00:42:34,640
happen for two random primitive lfs now

996
00:42:34,640 --> 00:42:37,040
so we took the exact um

997
00:42:37,040 --> 00:42:40,000
initialization process as for gea1 but

998
00:42:40,000 --> 00:42:43,520
we used random feedback polynomials

999
00:42:43,520 --> 00:42:46,880
and from our experiments we extrapolate

1000
00:42:46,880 --> 00:42:50,319
a probability of 2 to the minus 47 to

1001
00:42:50,319 --> 00:42:53,599
obtain this weakness by chance

1002
00:42:53,599 --> 00:42:55,440
now so it is really an indication that

1003
00:42:55,440 --> 00:42:56,839
this was

1004
00:42:56,839 --> 00:42:58,960
deliberately weakened to fulfill this

1005
00:42:58,960 --> 00:43:01,760
export restrictions

1006
00:43:01,760 --> 00:43:04,000
and i will conclude the talk by talking

1007
00:43:04,000 --> 00:43:07,520
about implications on the security today

1008
00:43:07,520 --> 00:43:09,599
so we were really surprised when we

1009
00:43:09,599 --> 00:43:12,079
found out that the most modern

1010
00:43:12,079 --> 00:43:13,440
smartphones

1011
00:43:13,440 --> 00:43:16,000
still support the gea one although it

1012
00:43:16,000 --> 00:43:16,960
was

1013
00:43:16,960 --> 00:43:18,880
already forbid forbidden to be

1014
00:43:18,880 --> 00:43:21,520
implemented in 2013

1015
00:43:21,520 --> 00:43:23,599
almost all of the phones we tested and

1016
00:43:23,599 --> 00:43:26,640
had this ga1 support

1017
00:43:26,640 --> 00:43:29,839
yeah so we made a responsible disclosure

1018
00:43:29,839 --> 00:43:33,359
before we published our attacks

1019
00:43:33,359 --> 00:43:35,920
so we went to gsma which is the

1020
00:43:35,920 --> 00:43:38,319
organization of all mobile network

1021
00:43:38,319 --> 00:43:39,599
operators

1022
00:43:39,599 --> 00:43:43,680
and also to etsy and

1023
00:43:43,680 --> 00:43:45,760
participated in this vulnerability

1024
00:43:45,760 --> 00:43:48,079
disclosure program

1025
00:43:48,079 --> 00:43:50,880
with the goal that now gea 1 is disabled

1026
00:43:50,880 --> 00:43:52,880
in most devices yeah so there were

1027
00:43:52,880 --> 00:43:54,880
security patches

1028
00:43:54,880 --> 00:43:57,520
um that got rid of the ga1

1029
00:43:57,520 --> 00:44:01,599
and in the long term gea 2 will also be

1030
00:44:01,599 --> 00:44:04,240
forbidden in in new releases

1031
00:44:04,240 --> 00:44:07,119
yeah and right now it is discouraged to

1032
00:44:07,119 --> 00:44:09,520
to be implemented

1033
00:44:09,520 --> 00:44:12,880
yeah so to conclude gea 1 offers only 40

1034
00:44:12,880 --> 00:44:16,000
bit out of 64-bit security

1035
00:44:16,000 --> 00:44:19,520
and which needs a memory of 45 gigabyte

1036
00:44:19,520 --> 00:44:23,280
and only 65-bit of known key stream

1037
00:44:23,280 --> 00:44:25,760
we also analyzed gea2

1038
00:44:25,760 --> 00:44:27,599
and we found out that it is less weak

1039
00:44:27,599 --> 00:44:29,359
but still breakable

1040
00:44:29,359 --> 00:44:31,119
in particular we presented an attack

1041
00:44:31,119 --> 00:44:33,520
with time complexity of two to the 45

1042
00:44:33,520 --> 00:44:36,560
ga2 evaluations but it requires almost

1043
00:44:36,560 --> 00:44:38,160
all of the available key stream per

1044
00:44:38,160 --> 00:44:39,680
frame

1045
00:44:39,680 --> 00:44:41,119
and because we have seen these

1046
00:44:41,119 --> 00:44:43,200
algorithms still implemented in modern

1047
00:44:43,200 --> 00:44:45,920
forms this insecurity has affected our

1048
00:44:45,920 --> 00:44:48,400
communication until today

1049
00:44:48,400 --> 00:44:50,400
thank you very much for the attention

1050
00:44:50,400 --> 00:44:54,400
and i'm happy to take the questions

1051
00:44:54,400 --> 00:44:57,040
for kristoff

1052
00:45:01,440 --> 00:45:03,440
any questions for krista from the

1053
00:45:03,440 --> 00:45:06,160
audience here

1054
00:45:07,520 --> 00:45:09,759
yes

1055
00:45:15,119 --> 00:45:16,640
that's a long press to activate the

1056
00:45:16,640 --> 00:45:19,359
microphone

1057
00:45:19,359 --> 00:45:21,119
hi thank you for the talk uh i was

1058
00:45:21,119 --> 00:45:22,800
wondering um

1059
00:45:22,800 --> 00:45:24,480
you mentioned in the first slide that

1060
00:45:24,480 --> 00:45:26,720
etsy at some point prohibits

1061
00:45:26,720 --> 00:45:29,680
implementation of ga1 in devices did

1062
00:45:29,680 --> 00:45:31,839
they give any specific motivation about

1063
00:45:31,839 --> 00:45:34,160
this

1064
00:45:34,640 --> 00:45:36,960
as far as i remember i think it was

1065
00:45:36,960 --> 00:45:39,920
because of these weaknesses by noel at

1066
00:45:39,920 --> 00:45:40,720
all

1067
00:45:40,720 --> 00:45:44,759
which were found in 2011.

1068
00:45:45,040 --> 00:45:46,800
so there were already some claims about

1069
00:45:46,800 --> 00:45:48,720
the insecurity

1070
00:45:48,720 --> 00:45:52,480
so um etsy decided to re to forbid the

1071
00:45:52,480 --> 00:45:55,599
implementation of ga1

1072
00:45:55,599 --> 00:45:57,760
makes sense do you think uh something

1073
00:45:57,760 --> 00:46:01,839
like that is gonna now happen for a ga2

1074
00:46:02,560 --> 00:46:05,760
yes i think so as well yeah

1075
00:46:05,760 --> 00:46:08,240
thank you very much

1076
00:46:08,240 --> 00:46:11,359
thanks uh i have a question about the

1077
00:46:11,359 --> 00:46:13,440
responsible disclosure process that you

1078
00:46:13,440 --> 00:46:14,800
went through

1079
00:46:14,800 --> 00:46:17,440
um can you tell us a bit more about how

1080
00:46:17,440 --> 00:46:19,440
that went and how

1081
00:46:19,440 --> 00:46:22,240
quick or how long and frustrating the

1082
00:46:22,240 --> 00:46:24,160
process was what your experiences were

1083
00:46:24,160 --> 00:46:26,640
okay so david

1084
00:46:26,640 --> 00:46:29,280
our co-author completely handled this

1085
00:46:29,280 --> 00:46:30,720
yes

1086
00:46:30,720 --> 00:46:32,640
yeah he's here yeah so he can he can

1087
00:46:32,640 --> 00:46:34,960
answer this so hi so

1088
00:46:34,960 --> 00:46:37,680
um yeah so and we did two responsible

1089
00:46:37,680 --> 00:46:39,920
disclosures and one with the gsma and

1090
00:46:39,920 --> 00:46:43,440
one with c the main aim of the gsma

1091
00:46:43,440 --> 00:46:45,520
responsible disclosure was basically to

1092
00:46:45,520 --> 00:46:48,800
disable ga1 in the current phones

1093
00:46:48,800 --> 00:46:51,839
and basically we needed to inform all

1094
00:46:51,839 --> 00:46:53,440
baseband vendors

1095
00:46:53,440 --> 00:46:56,720
and mobile network mobile operators and

1096
00:46:56,720 --> 00:46:59,040
mobile phone vendors and operating

1097
00:46:59,040 --> 00:47:00,480
suppliers

1098
00:47:00,480 --> 00:47:03,440
and the other aim for the etsy

1099
00:47:03,440 --> 00:47:06,160
responsible disclosure was basically to

1100
00:47:06,160 --> 00:47:09,040
let them know that ga2 is also kind of

1101
00:47:09,040 --> 00:47:10,640
yeah weak

1102
00:47:10,640 --> 00:47:14,160
and so regarding the etsy we can make it

1103
00:47:14,160 --> 00:47:16,960
short they acknowledged our findings or

1104
00:47:16,960 --> 00:47:19,280
and and also the reception of our paper

1105
00:47:19,280 --> 00:47:20,960
first and then also the findings but

1106
00:47:20,960 --> 00:47:23,520
there were no big communication involved

1107
00:47:23,520 --> 00:47:25,200
the main how much time did it start to

1108
00:47:25,200 --> 00:47:27,040
drop how much time did it take for them

1109
00:47:27,040 --> 00:47:29,599
to acknowledge the findings

1110
00:47:29,599 --> 00:47:31,599
um

1111
00:47:31,599 --> 00:47:33,280
i think

1112
00:47:33,280 --> 00:47:35,920
got the first response within seven days

1113
00:47:35,920 --> 00:47:36,640
and

1114
00:47:36,640 --> 00:47:40,000
like roughly one month that they respond

1115
00:47:40,000 --> 00:47:42,800
um after requesting what their plan is

1116
00:47:42,800 --> 00:47:45,119
to to do deal with the whole whole thing

1117
00:47:45,119 --> 00:47:46,079
but but

1118
00:47:46,079 --> 00:47:48,960
it was not fast but also not

1119
00:47:48,960 --> 00:47:51,920
um yeah that didn't take that long so

1120
00:47:51,920 --> 00:47:53,760
they they confirmed in seven days that

1121
00:47:53,760 --> 00:47:56,319
the vulnerability was was correct

1122
00:47:56,319 --> 00:47:58,240
no they could not they were just

1123
00:47:58,240 --> 00:48:00,640
confirming that they received the paper

1124
00:48:00,640 --> 00:48:03,200
to our submission they never have

1125
00:48:03,200 --> 00:48:06,000
confirmed on the vulnerability

1126
00:48:06,000 --> 00:48:08,319
sounds like a familiar story

1127
00:48:08,319 --> 00:48:09,119
yeah

1128
00:48:09,119 --> 00:48:11,359
so they never yeah to make this clear

1129
00:48:11,359 --> 00:48:12,559
they never confirmed on the

1130
00:48:12,559 --> 00:48:16,000
vulnerability itself so that's that's

1131
00:48:16,000 --> 00:48:18,160
the main responsible disclosure was um

1132
00:48:18,160 --> 00:48:21,680
with the gsma and so where we

1133
00:48:21,680 --> 00:48:24,319
that was a good cooperation where we got

1134
00:48:24,319 --> 00:48:26,240
always um

1135
00:48:26,240 --> 00:48:29,200
an update who is currently involved in

1136
00:48:29,200 --> 00:48:31,440
hatching which was which party and all

1137
00:48:31,440 --> 00:48:33,599
this kind of stuff and they were really

1138
00:48:33,599 --> 00:48:36,640
keen to get rid of ga one

1139
00:48:36,640 --> 00:48:38,720
um from the phones yeah

1140
00:48:38,720 --> 00:48:41,359
so that's that's up great thanks thanks

1141
00:48:41,359 --> 00:48:43,520
for an interesting result thanks for uh

1142
00:48:43,520 --> 00:48:45,599
practically relevant

1143
00:48:45,599 --> 00:48:47,760
crypto analysis results we're now going

1144
00:48:47,760 --> 00:48:50,559
to try again jungwin says that she feels

1145
00:48:50,559 --> 00:48:52,400
uh confident that maybe this time it

1146
00:48:52,400 --> 00:48:53,599
will work

1147
00:48:53,599 --> 00:48:56,880
um to launch this session uh

1148
00:48:56,880 --> 00:48:59,280
let's launch a talk on um

1149
00:48:59,280 --> 00:49:01,119
rotational cryptanalysis from a

1150
00:49:01,119 --> 00:49:04,240
differential linear perspective

1151
00:49:04,240 --> 00:49:07,040
jungwin the floor is yours

1152
00:49:07,040 --> 00:49:10,160
okay thank you can you can you hear me

1153
00:49:10,160 --> 00:49:11,359
yes

1154
00:49:11,359 --> 00:49:12,640
okay uh

1155
00:49:12,640 --> 00:49:13,599
me

1156
00:49:13,599 --> 00:49:16,920
let me try

1157
00:49:20,559 --> 00:49:22,880
okay

1158
00:49:29,359 --> 00:49:32,000
hello everyone sorry for the travel uh

1159
00:49:32,000 --> 00:49:36,000
previews uh i am even and this is a work

1160
00:49:36,000 --> 00:49:38,160
uh rotational analysis in a different

1161
00:49:38,160 --> 00:49:40,800
linear perspective and this is a joint

1162
00:49:40,800 --> 00:49:44,480
work with uh silicon

1163
00:49:44,480 --> 00:49:48,319
uh in this study our focus is on

1164
00:49:48,319 --> 00:49:50,720
differential linear kinesis and we are

1165
00:49:50,720 --> 00:49:54,319
interested in uh two questions uh how to

1166
00:49:54,319 --> 00:49:56,319
extend the framework of differential

1167
00:49:56,319 --> 00:49:59,760
linear analysis and can we evaluate the

1168
00:49:59,760 --> 00:50:01,760
differential linear correlation with

1169
00:50:01,760 --> 00:50:03,599
improved accuracy

1170
00:50:03,599 --> 00:50:06,079
so what we do is to generalize the

1171
00:50:06,079 --> 00:50:08,240
differential linear analysis by

1172
00:50:08,240 --> 00:50:10,559
replacing the actual difference with

1173
00:50:10,559 --> 00:50:14,240
rotational difference so we proposed a

1174
00:50:14,240 --> 00:50:15,920
rotational differential linear criminal

1175
00:50:15,920 --> 00:50:17,119
system

1176
00:50:17,119 --> 00:50:19,599
giving a pair of rotationally related

1177
00:50:19,599 --> 00:50:22,880
inputs x and x prime we studied the

1178
00:50:22,880 --> 00:50:25,520
linear approximation with mass gamma on

1179
00:50:25,520 --> 00:50:27,680
the output difference

1180
00:50:27,680 --> 00:50:32,079
of fx and fx prime as through the cycle

1181
00:50:32,079 --> 00:50:33,520
so uh

1182
00:50:33,520 --> 00:50:37,200
and then we proposed a stream method to

1183
00:50:37,200 --> 00:50:38,960
compute the rotational differential

1184
00:50:38,960 --> 00:50:40,400
linear probability

1185
00:50:40,400 --> 00:50:42,960
and the first approach follows the

1186
00:50:42,960 --> 00:50:45,760
differential linear method of separating

1187
00:50:45,760 --> 00:50:48,800
a cipher into two parts and find a good

1188
00:50:48,800 --> 00:50:50,559
rotational differential and a good

1189
00:50:50,559 --> 00:50:53,440
linear approximation to concatenate and

1190
00:50:53,440 --> 00:50:55,760
here we have a formula to compute the

1191
00:50:55,760 --> 00:50:58,000
the bias of the distinguisher

1192
00:50:58,000 --> 00:50:59,760
but to better characterize the

1193
00:50:59,760 --> 00:51:03,040
dependency between the two parts a link

1194
00:51:03,040 --> 00:51:05,280
between the rotational differential and

1195
00:51:05,280 --> 00:51:08,720
linear approximation is presented and

1196
00:51:08,720 --> 00:51:11,680
based on it we extend our previous a

1197
00:51:11,680 --> 00:51:14,240
serious formula on differential linear

1198
00:51:14,240 --> 00:51:16,160
to rotational differential linear as

1199
00:51:16,160 --> 00:51:19,040
well and this formula will require us to

1200
00:51:19,040 --> 00:51:21,599
enumerate all possible in intermediate

1201
00:51:21,599 --> 00:51:24,160
linear masks to compute the

1202
00:51:24,160 --> 00:51:25,359
the exact

1203
00:51:25,359 --> 00:51:26,720
probability

1204
00:51:26,720 --> 00:51:30,079
and next we proposed a third approach to

1205
00:51:30,079 --> 00:51:31,520
compute the

1206
00:51:31,520 --> 00:51:33,040
different rotational differential linear

1207
00:51:33,040 --> 00:51:35,839
probability run by wrong so first we

1208
00:51:35,839 --> 00:51:38,240
observed that the previous rotational

1209
00:51:38,240 --> 00:51:40,319
distinguisher on k check f

1210
00:51:40,319 --> 00:51:42,240
was a special case of rotational

1211
00:51:42,240 --> 00:51:44,240
differential linear where the output

1212
00:51:44,240 --> 00:51:46,079
mass is one bit

1213
00:51:46,079 --> 00:51:48,800
and then our second observation is that

1214
00:51:48,800 --> 00:51:51,920
the probability of uh the output is

1215
00:51:51,920 --> 00:51:54,880
being unequal through a boolean function

1216
00:51:54,880 --> 00:51:58,400
can be predicted by the folder for

1217
00:51:58,400 --> 00:52:00,960
the following formula here

1218
00:52:00,960 --> 00:52:03,280
and our third observation is on the

1219
00:52:03,280 --> 00:52:06,160
effect of the constant so the constant

1220
00:52:06,160 --> 00:52:09,040
in into a permutation it actually

1221
00:52:09,040 --> 00:52:11,280
introduced a new rotational difference

1222
00:52:11,280 --> 00:52:13,599
here at the constant c

1223
00:52:13,599 --> 00:52:16,400
shifted x-ray with the constant c

1224
00:52:16,400 --> 00:52:19,599
and these three observations they allow

1225
00:52:19,599 --> 00:52:21,440
us to compute the rotational

1226
00:52:21,440 --> 00:52:23,200
differential linear probability by

1227
00:52:23,200 --> 00:52:24,480
evaluating

1228
00:52:24,480 --> 00:52:26,400
each round function

1229
00:52:26,400 --> 00:52:29,599
uh and next we go one step further to

1230
00:52:29,599 --> 00:52:31,599
extend a rotation rotational

1231
00:52:31,599 --> 00:52:33,839
differential linear analysis to arx

1232
00:52:33,839 --> 00:52:36,800
ciphers so first we like to mention that

1233
00:52:36,800 --> 00:52:38,960
what works for rotational differential

1234
00:52:38,960 --> 00:52:42,319
linear uh in our paper also it works for

1235
00:52:42,319 --> 00:52:45,280
differential linear just we set the

1236
00:52:45,280 --> 00:52:48,640
rotational amount to be zero and and to

1237
00:52:48,640 --> 00:52:51,040
get the propagation rule for a modular

1238
00:52:51,040 --> 00:52:53,760
addition we found that the dependency in

1239
00:52:53,760 --> 00:52:56,400
the carry function cannot be ignored

1240
00:52:56,400 --> 00:52:59,680
so we uh we deduced

1241
00:52:59,680 --> 00:53:02,319
carrier that takes the dependency into

1242
00:53:02,319 --> 00:53:05,680
fully consideration and based on the

1243
00:53:05,680 --> 00:53:08,160
carry role we also have a modular

1244
00:53:08,160 --> 00:53:10,240
addition for the differential linear

1245
00:53:10,240 --> 00:53:12,079
propagation

1246
00:53:12,079 --> 00:53:14,800
in a modular addition and this is

1247
00:53:14,800 --> 00:53:18,079
experimentally verified on a

1248
00:53:18,079 --> 00:53:20,240
small scale modular addition

1249
00:53:20,240 --> 00:53:22,800
and this will help us to compute

1250
00:53:22,800 --> 00:53:24,640
differential linear and rotational

1251
00:53:24,640 --> 00:53:26,480
differential linear probability around

1252
00:53:26,480 --> 00:53:28,559
byron

1253
00:53:28,559 --> 00:53:29,599
and

1254
00:53:29,599 --> 00:53:32,160
and the following is an overview of all

1255
00:53:32,160 --> 00:53:35,839
the applications in our paper and

1256
00:53:35,839 --> 00:53:38,160
we found rotational differential linear

1257
00:53:38,160 --> 00:53:40,000
distinguishes and differential linear

1258
00:53:40,000 --> 00:53:42,800
distinguishers for three permutations of

1259
00:53:42,800 --> 00:53:46,480
freight zulu and rz and we tested the

1260
00:53:46,480 --> 00:53:48,880
experimental probability to verify the

1261
00:53:48,880 --> 00:53:51,119
distinguishes of when the data

1262
00:53:51,119 --> 00:53:53,680
complexity is possible

1263
00:53:53,680 --> 00:53:55,200
to conclude

1264
00:53:55,200 --> 00:53:57,200
we proposed rotational differential

1265
00:53:57,200 --> 00:54:00,000
linear analysis as generalization of

1266
00:54:00,000 --> 00:54:02,240
differential linear analysis and the

1267
00:54:02,240 --> 00:54:04,400
theoretical analysis on rotational

1268
00:54:04,400 --> 00:54:07,200
differential linear escaping and then a

1269
00:54:07,200 --> 00:54:08,240
new measure

1270
00:54:08,240 --> 00:54:10,480
for computing the probability of

1271
00:54:10,480 --> 00:54:11,920
rotational differential linear

1272
00:54:11,920 --> 00:54:14,720
distinguisher is presented which

1273
00:54:14,720 --> 00:54:16,640
is efficient by

1274
00:54:16,640 --> 00:54:18,960
evaluating round by round

1275
00:54:18,960 --> 00:54:21,440
and finally our technique is applied to

1276
00:54:21,440 --> 00:54:23,920
three permutations where practical

1277
00:54:23,920 --> 00:54:26,160
distinguishes are obtained

1278
00:54:26,160 --> 00:54:27,760
thank you very much for your attention

1279
00:54:27,760 --> 00:54:30,800
and thank you for your time

1280
00:54:31,839 --> 00:54:34,720
thank you human

1281
00:54:37,040 --> 00:54:39,839
question from the audience

1282
00:54:44,240 --> 00:54:46,640
no i have a question um and this may be

1283
00:54:46,640 --> 00:54:49,760
an obvious question have you tried

1284
00:54:49,760 --> 00:54:51,200
you can hear me right

1285
00:54:51,200 --> 00:54:55,520
yes yes um so i see you've applied uh

1286
00:54:55,520 --> 00:54:58,160
your results to several arcs algorithms

1287
00:54:58,160 --> 00:55:00,000
including siphash have you also looked

1288
00:55:00,000 --> 00:55:02,240
at chesky

1289
00:55:02,240 --> 00:55:04,480
uh

1290
00:55:04,480 --> 00:55:08,720
yes actually i looked at uh chesky

1291
00:55:08,720 --> 00:55:10,000
uh

1292
00:55:10,000 --> 00:55:13,119
but but uh for chesky i think the

1293
00:55:13,119 --> 00:55:16,960
dependency is stronger than ziphash

1294
00:55:16,960 --> 00:55:21,760
because c cash has a wider block size

1295
00:55:21,760 --> 00:55:24,559
okay so why not include a result on

1296
00:55:24,559 --> 00:55:26,799
chassis in the paper or

1297
00:55:26,799 --> 00:55:27,920
because we

1298
00:55:27,920 --> 00:55:29,520
uh actually we

1299
00:55:29,520 --> 00:55:31,839
just improved the

1300
00:55:31,839 --> 00:55:35,200
current uh distinguishes on chess game

1301
00:55:35,200 --> 00:55:36,880
so okay

1302
00:55:36,880 --> 00:55:38,960
yeah so we didn't

1303
00:55:38,960 --> 00:55:42,079
we didn't include that result

1304
00:55:42,079 --> 00:55:44,640
okay thanks any questions from the

1305
00:55:44,640 --> 00:55:46,839
audience

1306
00:55:46,839 --> 00:55:49,119
still no

1307
00:55:49,119 --> 00:55:50,559
okay then i'd like to thank all the

1308
00:55:50,559 --> 00:55:53,680
speakers of this session

1309
00:55:58,880 --> 00:56:01,520
so we now have a coffee break and we're

1310
00:56:01,520 --> 00:56:03,759
going to

