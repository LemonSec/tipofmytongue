1
00:00:00,000 --> 00:00:02,399
paper which is trying to work with peter

2
00:00:02,399 --> 00:00:05,440
aguilos alex and masilis

3
00:00:05,440 --> 00:00:07,919
and it's about clock synchronization so

4
00:00:07,919 --> 00:00:08,880
let me

5
00:00:08,880 --> 00:00:11,440
quickly explain well what the basic

6
00:00:11,440 --> 00:00:13,519
setup here is

7
00:00:13,519 --> 00:00:15,519
so we assume that we have a set of

8
00:00:15,519 --> 00:00:18,480
parties connected over network that

9
00:00:18,480 --> 00:00:21,039
probably has bounded delays for example

10
00:00:21,039 --> 00:00:22,880
but most importantly what we assume is

11
00:00:22,880 --> 00:00:25,599
they have local clocks or duration

12
00:00:25,599 --> 00:00:28,320
timers at hand

13
00:00:28,320 --> 00:00:30,240
these are useful to master measure the

14
00:00:30,240 --> 00:00:32,479
passage of time at approximately the

15
00:00:32,479 --> 00:00:35,200
same speed so that's that's a basic

16
00:00:35,200 --> 00:00:36,480
assumption here

17
00:00:36,480 --> 00:00:39,840
um we also allow that the cr that we

18
00:00:39,840 --> 00:00:42,320
have a crs common reference string or a

19
00:00:42,320 --> 00:00:44,399
public key infrastructure such that we

20
00:00:44,399 --> 00:00:47,360
could associate parties to public keys

21
00:00:47,360 --> 00:00:49,840
and then verify messages

22
00:00:49,840 --> 00:00:52,000
and finally there is a there is

23
00:00:52,000 --> 00:00:54,079
typically an honest maturity condition

24
00:00:54,079 --> 00:00:56,079
in place

25
00:00:56,079 --> 00:00:57,600
so what is the goal of that these

26
00:00:57,600 --> 00:00:59,760
parties jointly tried to achieve and

27
00:00:59,760 --> 00:01:01,760
they tried to execute a protocol to

28
00:01:01,760 --> 00:01:04,319
jointly emulate a global clock

29
00:01:04,319 --> 00:01:07,439
so what is this so if you if you ask um

30
00:01:07,439 --> 00:01:10,320
in this in this in this execution

31
00:01:10,320 --> 00:01:12,080
part two different parties what

32
00:01:12,080 --> 00:01:14,960
currently they think the time value is

33
00:01:14,960 --> 00:01:17,040
they should report time values that are

34
00:01:17,040 --> 00:01:17,840
um

35
00:01:17,840 --> 00:01:19,600
close together so

36
00:01:19,600 --> 00:01:20,960
this is what we call approximate

37
00:01:20,960 --> 00:01:22,080
synchrony

38
00:01:22,080 --> 00:01:24,880
um timestamps so or these reported times

39
00:01:24,880 --> 00:01:27,759
should satisfy lightness condition that

40
00:01:27,759 --> 00:01:29,600
it moves

41
00:01:29,600 --> 00:01:32,159
just as time does and the monotonicity

42
00:01:32,159 --> 00:01:35,119
condition which overall requires that

43
00:01:35,119 --> 00:01:36,880
what the protocol implements is an error

44
00:01:36,880 --> 00:01:38,640
of time with

45
00:01:38,640 --> 00:01:40,640
it could have some irregularities due to

46
00:01:40,640 --> 00:01:42,560
the protocol achieving it but all has to

47
00:01:42,560 --> 00:01:44,880
be bounded and and respect

48
00:01:44,880 --> 00:01:45,920
the basic

49
00:01:45,920 --> 00:01:49,040
conditions we impose on time

50
00:01:49,040 --> 00:01:52,079
so what are the models that synchronizes

51
00:01:52,079 --> 00:01:55,040
are typically proven in

52
00:01:55,040 --> 00:01:57,520
prior models

53
00:01:57,520 --> 00:01:59,280
basically assume

54
00:01:59,280 --> 00:02:01,280
a fixed set of parties that run the

55
00:02:01,280 --> 00:02:03,280
protocol all parties are active except

56
00:02:03,280 --> 00:02:06,399
for the ones controlled by the adversary

57
00:02:06,399 --> 00:02:08,560
a relaxation of this which uh is called

58
00:02:08,560 --> 00:02:10,160
the ad hoc model which was introduced by

59
00:02:10,160 --> 00:02:12,480
weimalette a couple of years ago

60
00:02:12,480 --> 00:02:14,640
uh would then say well we cannot assume

61
00:02:14,640 --> 00:02:16,319
that all are active but maybe a subset

62
00:02:16,319 --> 00:02:18,080
of parties just doesn't start the

63
00:02:18,080 --> 00:02:20,160
protocol

64
00:02:20,160 --> 00:02:21,840
but we still you know in order to

65
00:02:21,840 --> 00:02:23,599
implement synchronize you could still do

66
00:02:23,599 --> 00:02:26,000
some forms of clever or smart counting

67
00:02:26,000 --> 00:02:27,680
of messages

68
00:02:27,680 --> 00:02:29,920
and the security threshold in these

69
00:02:29,920 --> 00:02:31,920
models were also uh formulated with

70
00:02:31,920 --> 00:02:34,560
respect to the active participant

71
00:02:34,560 --> 00:02:36,319
so what we are interested in this work

72
00:02:36,319 --> 00:02:38,480
is the dynamic at hog model

73
00:02:38,480 --> 00:02:40,879
where the number of

74
00:02:40,879 --> 00:02:43,200
online and offline parties changes over

75
00:02:43,200 --> 00:02:46,080
time so it's difficult to count for

76
00:02:46,080 --> 00:02:48,640
example or define a threshold of

77
00:02:48,640 --> 00:02:50,640
messages that you want to receive so we

78
00:02:50,640 --> 00:02:52,560
have no pr a priori knowledge of

79
00:02:52,560 --> 00:02:55,120
participation levels uh there might be

80
00:02:55,120 --> 00:02:57,040
unannounced disappearance and we have to

81
00:02:57,040 --> 00:02:59,599
bootstrap new commerce

82
00:02:59,599 --> 00:03:00,879
and the security threshold isn't

83
00:03:00,879 --> 00:03:03,040
formulated with respect to kind of this

84
00:03:03,040 --> 00:03:06,640
but this dynamic participation level

85
00:03:06,640 --> 00:03:08,959
so um we want to design a protocol

86
00:03:08,959 --> 00:03:11,120
synchronizing this dynamic ad hoc model

87
00:03:11,120 --> 00:03:12,080
and

88
00:03:12,080 --> 00:03:13,440
well the

89
00:03:13,440 --> 00:03:16,319
main so since time agreement

90
00:03:16,319 --> 00:03:19,200
can be seen as a firm as i just said of

91
00:03:19,200 --> 00:03:20,400
agreement

92
00:03:20,400 --> 00:03:23,040
um we could draw inspiration from uh the

93
00:03:23,040 --> 00:03:25,599
protocols that are already proven secure

94
00:03:25,599 --> 00:03:27,840
in this rather new model which are the

95
00:03:27,840 --> 00:03:29,599
blockchain protocols

96
00:03:29,599 --> 00:03:31,920
and so to draw some inspiration of them

97
00:03:31,920 --> 00:03:34,480
so let's look at bitcoin we know that

98
00:03:34,480 --> 00:03:37,920
roughly every 10 minutes

99
00:03:38,159 --> 00:03:39,680
we have a new block we have consistency

100
00:03:39,680 --> 00:03:41,680
and liveness so we can just take block

101
00:03:41,680 --> 00:03:44,159
depth as a proxy of time

102
00:03:44,159 --> 00:03:48,159
and yes this this would roughly be a

103
00:03:48,159 --> 00:03:50,000
a global clock

104
00:03:50,000 --> 00:03:51,680
however there is a drawback to that the

105
00:03:51,680 --> 00:03:53,599
clock is rather loose if you define it

106
00:03:53,599 --> 00:03:55,280
like this

107
00:03:55,280 --> 00:03:58,239
and pow proof work is not a standard

108
00:03:58,239 --> 00:04:00,799
assumption for synchronizers

109
00:04:00,799 --> 00:04:02,080
so let's get

110
00:04:02,080 --> 00:04:03,040
rid of

111
00:04:03,040 --> 00:04:05,280
that non-standard assumption by saying

112
00:04:05,280 --> 00:04:06,720
okay then let's just take a pure

113
00:04:06,720 --> 00:04:08,799
blockchain

114
00:04:08,799 --> 00:04:10,560
because there we only have one source of

115
00:04:10,560 --> 00:04:12,400
trust the genesis block

116
00:04:12,400 --> 00:04:14,560
but wait a moment so

117
00:04:14,560 --> 00:04:17,120
current pos blockchains either require

118
00:04:17,120 --> 00:04:19,120
an accurate estimate of participation or

119
00:04:19,120 --> 00:04:20,959
they assume a timing service themselves

120
00:04:20,959 --> 00:04:22,880
in order to operate correctly so it

121
00:04:22,880 --> 00:04:24,560
seems we are a bit in a deadlock

122
00:04:24,560 --> 00:04:25,759
situation

123
00:04:25,759 --> 00:04:27,360
and so this problem becomes very

124
00:04:27,360 --> 00:04:29,120
interesting is is clock synchronization

125
00:04:29,120 --> 00:04:31,040
at all possible in this setting and the

126
00:04:31,040 --> 00:04:33,600
answer that we give in this paper is yes

127
00:04:33,600 --> 00:04:36,400
it is and this brings us to the main

128
00:04:36,400 --> 00:04:39,280
result so in this paper we design

129
00:04:39,280 --> 00:04:42,800
uh on one hand the first ps blockchain

130
00:04:42,800 --> 00:04:44,960
protocol that is secure in this dynamic

131
00:04:44,960 --> 00:04:46,320
torque setting

132
00:04:46,320 --> 00:04:48,800
where we don't assume an external timing

133
00:04:48,800 --> 00:04:51,280
service for the protocol but we we only

134
00:04:51,280 --> 00:04:53,759
assume this weaker assumption on

135
00:04:53,759 --> 00:04:56,800
same speed clocks or duration timers and

136
00:04:56,800 --> 00:04:59,280
the blockchain protocol computes at the

137
00:04:59,280 --> 00:05:01,280
time itself and

138
00:05:01,280 --> 00:05:03,840
even more importantly the protocol is a

139
00:05:03,840 --> 00:05:06,479
clock synchronizer and allows any party

140
00:05:06,479 --> 00:05:08,960
any external server to compute time

141
00:05:08,960 --> 00:05:10,639
values that are only upon the distance

142
00:05:10,639 --> 00:05:13,360
apart we call this protocol chronos and

143
00:05:13,360 --> 00:05:14,880
it's really what you see here it's a

144
00:05:14,880 --> 00:05:16,800
combination of a lecture as we know it

145
00:05:16,800 --> 00:05:18,720
and the global clock

146
00:05:18,720 --> 00:05:20,720
maybe in the last couple of

147
00:05:20,720 --> 00:05:23,120
seconds that my local duration timer

148
00:05:23,120 --> 00:05:26,400
tells me still left i i try to sketch

149
00:05:26,400 --> 00:05:28,000
very informally

150
00:05:28,000 --> 00:05:30,240
the solution here so we have this set of

151
00:05:30,240 --> 00:05:32,400
parties that's running

152
00:05:32,400 --> 00:05:34,720
over a protocol over network in parallel

153
00:05:34,720 --> 00:05:36,400
we assume that the same set of parties

154
00:05:36,400 --> 00:05:39,840
run scoraborus genesis

155
00:05:39,919 --> 00:05:42,080
and so the main ingredients that we have

156
00:05:42,080 --> 00:05:44,800
to do is we have to exchange

157
00:05:44,800 --> 00:05:47,120
authenticated synchronization messages

158
00:05:47,120 --> 00:05:48,800
where parties report

159
00:05:48,800 --> 00:05:50,639
basically local timestamps to each other

160
00:05:50,639 --> 00:05:53,039
but we restricted by the pos lottery to

161
00:05:53,039 --> 00:05:55,840
avoid some adversarial dominance this is

162
00:05:55,840 --> 00:05:57,919
all a bit intertwined but roughly the

163
00:05:57,919 --> 00:06:00,080
idea is then as follows that

164
00:06:00,080 --> 00:06:02,560
parties try to reach first consensus to

165
00:06:02,560 --> 00:06:04,160
the exam possible of these

166
00:06:04,160 --> 00:06:06,479
synchronization beacons

167
00:06:06,479 --> 00:06:09,440
once this is done they can use this set

168
00:06:09,440 --> 00:06:12,639
of agreed beacons to adjust time val at

169
00:06:12,639 --> 00:06:15,199
their time value which also informs

170
00:06:15,199 --> 00:06:17,039
which slot number to use in the

171
00:06:17,039 --> 00:06:19,840
consensus protocol and finally we have

172
00:06:19,840 --> 00:06:23,440
to define a new procedure how newcomers

173
00:06:23,440 --> 00:06:25,520
can retrace all the evidence they see on

174
00:06:25,520 --> 00:06:27,759
the blockchain on one hand and on the

175
00:06:27,759 --> 00:06:29,199
time vegans they observe on the other

176
00:06:29,199 --> 00:06:31,520
hand so obviously i don't have time to

177
00:06:31,520 --> 00:06:32,880
go into this

178
00:06:32,880 --> 00:06:34,560
but i would like to refer to the full

179
00:06:34,560 --> 00:06:37,039
top of this paper or the paper itself

180
00:06:37,039 --> 00:06:39,199
for the details

181
00:06:39,199 --> 00:06:41,360
so with that i conclude thanks a lot for

182
00:06:41,360 --> 00:06:44,000
your attention

183
00:06:44,000 --> 00:06:47,720
back to you then

184
00:06:50,639 --> 00:06:53,360
for one question yes please hey

185
00:06:53,360 --> 00:06:56,240
hello christian yeah nice talking um

186
00:06:56,240 --> 00:06:58,639
could you please uh clarify one thing so

187
00:06:58,639 --> 00:07:00,479
i assume the attack assumption here is

188
00:07:00,479 --> 00:07:03,199
the same as in pos right so you can kind

189
00:07:03,199 --> 00:07:04,080
of

190
00:07:04,080 --> 00:07:05,919
um buy a stick lock if you have the

191
00:07:05,919 --> 00:07:07,599
majority of this thing that's the main

192
00:07:07,599 --> 00:07:09,039
assumption here

193
00:07:09,039 --> 00:07:11,440
oh yeah okay sorry yeah we need

194
00:07:11,440 --> 00:07:14,880
the honest maturity condition

195
00:07:14,880 --> 00:07:18,960
on the active stake so the the state

196
00:07:18,960 --> 00:07:21,039
level might fluctuate

197
00:07:21,039 --> 00:07:24,319
and we need that at any point in time

198
00:07:24,319 --> 00:07:26,319
the

199
00:07:26,319 --> 00:07:29,199
so the active state so the majority of

200
00:07:29,199 --> 00:07:31,520
the active stake is in the in the hands

201
00:07:31,520 --> 00:07:34,639
of of honest parties yes

202
00:07:34,639 --> 00:07:37,520
yeah yeah right thank you

203
00:07:37,919 --> 00:07:40,319
um i also have a question so

204
00:07:40,319 --> 00:07:42,160
does your solution

205
00:07:42,160 --> 00:07:44,639
assume anything about the uh the clock

206
00:07:44,639 --> 00:07:48,800
drift of the uh of the global clock

207
00:07:48,800 --> 00:07:49,919
after

208
00:07:49,919 --> 00:07:52,240
the duration timers right yeah yeah of

209
00:07:52,240 --> 00:07:56,160
the of the approximate uh yeah

210
00:07:56,160 --> 00:07:59,039
they cannot drift like too fast apart

211
00:07:59,039 --> 00:08:00,720
from each other but they can drift by a

212
00:08:00,720 --> 00:08:02,080
limited amount

213
00:08:02,080 --> 00:08:03,520
which is you know

214
00:08:03,520 --> 00:08:06,400
yeah mounted on a drift assumption

215
00:08:06,400 --> 00:08:08,400
yes so we model

216
00:08:08,400 --> 00:08:10,879
local duration timers and

217
00:08:10,879 --> 00:08:14,960
the adversary is allowed to to

218
00:08:15,280 --> 00:08:16,400
to uh

219
00:08:16,400 --> 00:08:18,720
influence the speed by which it ticks

220
00:08:18,720 --> 00:08:21,120
for the individual parties but only in a

221
00:08:21,120 --> 00:08:22,160
limited

222
00:08:22,160 --> 00:08:24,000
amount yes

223
00:08:24,000 --> 00:08:25,919
okay so let's thank the speaker again

224
00:08:25,919 --> 00:08:29,359
thank you very much thank you

225
00:08:32,559 --> 00:08:34,958
the next talk is going to be uh tardis a

226
00:08:34,958 --> 00:08:37,200
foundation of time locked puzzles in uc

227
00:08:37,200 --> 00:08:41,719
by custom baum bernardo david

228
00:08:46,160 --> 00:08:48,000
are going to give oh actually it says

229
00:08:48,000 --> 00:08:49,519
you're going to give the talk

230
00:08:49,519 --> 00:08:51,120
jointly

231
00:08:51,120 --> 00:08:52,880
is that no so apparently it's just

232
00:08:52,880 --> 00:08:55,839
costly

233
00:08:57,440 --> 00:08:58,959
yeah um

234
00:08:58,959 --> 00:09:00,080
i think it says two people are gonna

235
00:09:00,080 --> 00:09:01,600
give the talk but the other person will

236
00:09:01,600 --> 00:09:03,600
just maybe drink shots every 30 seconds

237
00:09:03,600 --> 00:09:06,000
if i run over time

238
00:09:06,000 --> 00:09:09,839
or does this not apply anymore

239
00:09:33,200 --> 00:09:35,519
do the animations work

240
00:09:35,519 --> 00:09:36,800
good

241
00:09:36,800 --> 00:09:39,800
yes

242
00:10:00,000 --> 00:10:01,279
well then uh

243
00:10:01,279 --> 00:10:03,760
let's get started

244
00:10:03,760 --> 00:10:06,480
yeah my talk now is about tardis a

245
00:10:06,480 --> 00:10:07,839
foundation for time block puzzles in the

246
00:10:07,839 --> 00:10:10,079
universal composability framework and

247
00:10:10,079 --> 00:10:12,880
this is joint work with bernardo raphael

248
00:10:12,880 --> 00:10:16,240
jasper and sabina

249
00:10:17,040 --> 00:10:18,800
first of all what are timeline puzzles

250
00:10:18,800 --> 00:10:20,880
um their cryptographic primitive that

251
00:10:20,880 --> 00:10:22,959
has been around already for some time

252
00:10:22,959 --> 00:10:25,760
but uh recently found more attention uh

253
00:10:25,760 --> 00:10:27,120
due to applications in the blockchain

254
00:10:27,120 --> 00:10:28,079
space

255
00:10:28,079 --> 00:10:29,839
uh timelock puzzle essentially allows

256
00:10:29,839 --> 00:10:31,839
you to encrypt a message into the future

257
00:10:31,839 --> 00:10:33,760
where the future is only a limited

258
00:10:33,760 --> 00:10:36,399
amount of time away from you so what

259
00:10:36,399 --> 00:10:38,320
does it mean well

260
00:10:38,320 --> 00:10:39,760
you uh

261
00:10:39,760 --> 00:10:41,680
you have a message and say a message x

262
00:10:41,680 --> 00:10:44,480
take your message x and you put it into

263
00:10:44,480 --> 00:10:46,240
a box

264
00:10:46,240 --> 00:10:47,680
like the safe here

265
00:10:47,680 --> 00:10:49,519
and then you say okay after a certain

266
00:10:49,519 --> 00:10:50,959
amount of time this box is supposed to

267
00:10:50,959 --> 00:10:52,320
open

268
00:10:52,320 --> 00:10:53,279
and then

269
00:10:53,279 --> 00:10:54,560
you know you give the box away to

270
00:10:54,560 --> 00:10:56,079
somebody else and then

271
00:10:56,079 --> 00:10:58,880
magically after some time

272
00:10:58,880 --> 00:11:01,200
box goes up and out comes your message x

273
00:11:01,200 --> 00:11:02,800
that you put in there and until that

274
00:11:02,800 --> 00:11:05,360
point of time uh obviously the box does

275
00:11:05,360 --> 00:11:07,360
not reveal which message was hidden in

276
00:11:07,360 --> 00:11:08,160
there

277
00:11:08,160 --> 00:11:10,320
and after this time you can't change the

278
00:11:10,320 --> 00:11:11,920
message anymore

279
00:11:11,920 --> 00:11:13,760
so it's kind of a commitment for a

280
00:11:13,760 --> 00:11:15,920
certain amount of time

281
00:11:15,920 --> 00:11:16,720
and

282
00:11:16,720 --> 00:11:17,839
in order to build these time-lapse

283
00:11:17,839 --> 00:11:19,920
puzzles what people usually do is they

284
00:11:19,920 --> 00:11:21,200
take a

285
00:11:21,200 --> 00:11:23,120
computational assumption which they

286
00:11:23,120 --> 00:11:24,959
think takes a certain limited amount of

287
00:11:24,959 --> 00:11:27,440
time to solve the problem and then you

288
00:11:27,440 --> 00:11:29,760
just build a sequence of these problems

289
00:11:29,760 --> 00:11:31,279
where you have to solve one to solve the

290
00:11:31,279 --> 00:11:33,279
next and so on and so forth in order to

291
00:11:33,279 --> 00:11:35,360
have a

292
00:11:35,360 --> 00:11:37,120
construction that is uh

293
00:11:37,120 --> 00:11:39,279
opening after a certain amount of time

294
00:11:39,279 --> 00:11:41,360
so this this gives you this time-lapse

295
00:11:41,360 --> 00:11:43,040
puzzle notion

296
00:11:43,040 --> 00:11:45,360
and the first time puzzle was

297
00:11:45,360 --> 00:11:48,399
constructed by rivers at all in 1996 and

298
00:11:48,399 --> 00:11:49,839
they used this iterated squaring

299
00:11:49,839 --> 00:11:51,279
assumption

300
00:11:51,279 --> 00:11:53,440
for groups of unknown order in their

301
00:11:53,440 --> 00:11:55,600
case the rsa group

302
00:11:55,600 --> 00:11:57,279
and this is also like the main

303
00:11:57,279 --> 00:11:59,040
construction we use nowadays in order to

304
00:11:59,040 --> 00:12:00,959
build timeless puzzles

305
00:12:00,959 --> 00:12:02,560
now the problem with this construction

306
00:12:02,560 --> 00:12:05,120
or the problem that we saw with time

307
00:12:05,120 --> 00:12:08,000
lock puzzles in general is first of all

308
00:12:08,000 --> 00:12:09,279
they usually don't have any

309
00:12:09,279 --> 00:12:11,920
composability guarantees so obviously if

310
00:12:11,920 --> 00:12:13,040
you have a time of puzzle you want to

311
00:12:13,040 --> 00:12:14,560
use this as part of a cryptographic

312
00:12:14,560 --> 00:12:17,279
protocol where maybe you only reveal a

313
00:12:17,279 --> 00:12:19,279
certain message that you send to another

314
00:12:19,279 --> 00:12:21,440
party after a certain amount of time but

315
00:12:21,440 --> 00:12:23,360
unless you prove actually that

316
00:12:23,360 --> 00:12:24,720
different primitives composed on a

317
00:12:24,720 --> 00:12:26,720
cryptographic protocol what security

318
00:12:26,720 --> 00:12:28,240
guarantees do you actually have if you

319
00:12:28,240 --> 00:12:29,519
use your timelock puzzle in another

320
00:12:29,519 --> 00:12:32,399
cryptographic protocol

321
00:12:32,399 --> 00:12:33,839
uh the second problem we tried to

322
00:12:33,839 --> 00:12:36,079
address was that there is a certain

323
00:12:36,079 --> 00:12:38,320
notion of time in uc uh

324
00:12:38,320 --> 00:12:40,079
the global clock model which also the

325
00:12:40,079 --> 00:12:42,000
previous speaker talked about

326
00:12:42,000 --> 00:12:42,880
um

327
00:12:42,880 --> 00:12:45,040
but it essentially assumes that

328
00:12:45,040 --> 00:12:46,720
everybody has a synchronized clock every

329
00:12:46,720 --> 00:12:48,399
party everywhere which is a bit too

330
00:12:48,399 --> 00:12:50,720
strong for our taste

331
00:12:50,720 --> 00:12:53,120
and even then uh it still doesn't

332
00:12:53,120 --> 00:12:55,680
necessarily help us to enforce this

333
00:12:55,680 --> 00:12:58,079
sequential computation that we need for

334
00:12:58,079 --> 00:13:00,560
these uh time lock assumptions

335
00:13:00,560 --> 00:13:03,120
why is this well um

336
00:13:03,120 --> 00:13:04,880
if you think about how you see the

337
00:13:04,880 --> 00:13:07,200
security experiment is usually set up

338
00:13:07,200 --> 00:13:09,360
right you have your environment and then

339
00:13:09,360 --> 00:13:11,600
this environment can run a multitude of

340
00:13:11,600 --> 00:13:13,519
sessions in parallel where it can do

341
00:13:13,519 --> 00:13:15,040
whatever it wants

342
00:13:15,040 --> 00:13:17,760
thus the composability

343
00:13:17,760 --> 00:13:19,600
well what does it mean well if you have

344
00:13:19,600 --> 00:13:21,760
an environment that gets a timer puzzle

345
00:13:21,760 --> 00:13:23,279
right now that environment what could it

346
00:13:23,279 --> 00:13:24,800
do it could go to the first session and

347
00:13:24,800 --> 00:13:27,200
say hey first session please do one step

348
00:13:27,200 --> 00:13:28,560
of my

349
00:13:28,560 --> 00:13:30,800
sequential computation then it can go to

350
00:13:30,800 --> 00:13:32,720
the next session and say well now please

351
00:13:32,720 --> 00:13:34,480
do one more step of my sequential

352
00:13:34,480 --> 00:13:36,480
computation and it goes on like this

353
00:13:36,480 --> 00:13:37,920
right so if you have enough sessions in

354
00:13:37,920 --> 00:13:39,040
parallel

355
00:13:39,040 --> 00:13:40,160
then

356
00:13:40,160 --> 00:13:41,839
even though you only took kind of one

357
00:13:41,839 --> 00:13:44,079
step of time in parallel you can solve

358
00:13:44,079 --> 00:13:46,639
an arbitrarily hard time or puzzle so

359
00:13:46,639 --> 00:13:48,079
this is not really the guarantee that we

360
00:13:48,079 --> 00:13:49,600
want to have because we want that you

361
00:13:49,600 --> 00:13:51,760
know it takes a certain amount of steps

362
00:13:51,760 --> 00:13:53,839
in a particular session to actually

363
00:13:53,839 --> 00:13:55,519
solve this

364
00:13:55,519 --> 00:13:57,920
our contributions entirely are first of

365
00:13:57,920 --> 00:13:58,800
all

366
00:13:58,800 --> 00:14:00,959
an abstract model for timing you see

367
00:14:00,959 --> 00:14:02,000
where

368
00:14:02,000 --> 00:14:04,000
parties actually don't know

369
00:14:04,000 --> 00:14:06,000
how much time progressed but they only

370
00:14:06,000 --> 00:14:08,000
know the time actually progresses

371
00:14:08,000 --> 00:14:10,800
we define and construct time lock

372
00:14:10,800 --> 00:14:12,480
puzzles in the universal composability

373
00:14:12,480 --> 00:14:13,839
framework

374
00:14:13,839 --> 00:14:15,440
moreover we actually show that if you

375
00:14:15,440 --> 00:14:17,040
want to have composable time-lapse

376
00:14:17,040 --> 00:14:19,040
puzzles you need programmable random

377
00:14:19,040 --> 00:14:20,399
oracles

378
00:14:20,399 --> 00:14:21,279
um

379
00:14:21,279 --> 00:14:23,199
in order to actually prove security uh

380
00:14:23,199 --> 00:14:24,959
these constructions and then we use

381
00:14:24,959 --> 00:14:26,399
these time-lapse puzzles in order to

382
00:14:26,399 --> 00:14:28,639
build a two-party computation without

383
00:14:28,639 --> 00:14:30,720
putting any pen in the board which means

384
00:14:30,720 --> 00:14:33,279
that if one party is corrupted then

385
00:14:33,279 --> 00:14:35,440
you can have a secure two-party scheme

386
00:14:35,440 --> 00:14:38,560
where the adversary can only decide

387
00:14:38,560 --> 00:14:40,320
uh if the other party gets the output or

388
00:14:40,320 --> 00:14:42,639
not without seeing the output first

389
00:14:42,639 --> 00:14:44,480
which is kind of the best you can hope

390
00:14:44,480 --> 00:14:46,240
to achieve

391
00:14:46,240 --> 00:14:47,839
with respect to the impossibility result

392
00:14:47,839 --> 00:14:49,199
of cleave

393
00:14:49,199 --> 00:14:52,639
that forbids fairness for to pc

394
00:14:52,639 --> 00:14:55,040
uh so what is abstract composable time

395
00:14:55,040 --> 00:14:56,880
uh we do not actually assume a global

396
00:14:56,880 --> 00:14:58,480
clock instead we assume what we call a

397
00:14:58,480 --> 00:15:01,120
global ticker so what is a global ticker

398
00:15:01,120 --> 00:15:02,880
it's a functionality that tells other

399
00:15:02,880 --> 00:15:04,880
functionality that time has passed but

400
00:15:04,880 --> 00:15:06,880
not how much time and it doesn't tell

401
00:15:06,880 --> 00:15:09,360
parties at all that time has passed

402
00:15:09,360 --> 00:15:11,040
and how do we use this well if you are a

403
00:15:11,040 --> 00:15:12,880
functionality or if you use a

404
00:15:12,880 --> 00:15:14,720
functionality then this functionality

405
00:15:14,720 --> 00:15:16,160
can go to the ticker functionality and

406
00:15:16,160 --> 00:15:18,560
ask hey did a tick happen and the only

407
00:15:18,560 --> 00:15:20,079
thing that global ticker is going to say

408
00:15:20,079 --> 00:15:22,639
is yep a new tick happened or

409
00:15:22,639 --> 00:15:24,160
no tick happened but you don't know if

410
00:15:24,160 --> 00:15:26,079
maybe five ticks happened in between or

411
00:15:26,079 --> 00:15:28,800
17 or whatever

412
00:15:28,800 --> 00:15:31,440
and in order to get some notion of

413
00:15:31,440 --> 00:15:33,360
synchrony of the parties you then have

414
00:15:33,360 --> 00:15:35,360
that the parties go to the ticker when

415
00:15:35,360 --> 00:15:37,279
they were activated and say hello i was

416
00:15:37,279 --> 00:15:38,880
activated

417
00:15:38,880 --> 00:15:40,560
but that's all the information that is

418
00:15:40,560 --> 00:15:42,240
happening they don't get any information

419
00:15:42,240 --> 00:15:44,800
from the global taker back that would

420
00:15:44,800 --> 00:15:46,720
tell them yes thank you very much it

421
00:15:46,720 --> 00:15:48,800
took us 17 ticks since you were here the

422
00:15:48,800 --> 00:15:51,279
last time

423
00:15:52,720 --> 00:15:53,759
okay

424
00:15:53,759 --> 00:15:56,079
as i mentioned uh we're not the first to

425
00:15:56,079 --> 00:15:57,759
talk about time in the universal

426
00:15:57,759 --> 00:15:59,519
composability framework uh this was

427
00:15:59,519 --> 00:16:01,040
first introduced in the work by cuts at

428
00:16:01,040 --> 00:16:05,040
all and 2013 which is a much stronger

429
00:16:05,040 --> 00:16:06,399
assumption in terms of synchrony of the

430
00:16:06,399 --> 00:16:09,199
parties than what we have

431
00:16:09,199 --> 00:16:11,759
time-knocked puzzles were introduced

432
00:16:11,759 --> 00:16:13,279
earlier in this work of rivers at all

433
00:16:13,279 --> 00:16:14,399
but they were malleable time-lapse

434
00:16:14,399 --> 00:16:16,480
puzzles so they don't have anything you

435
00:16:16,480 --> 00:16:19,120
could have for composability

436
00:16:19,120 --> 00:16:21,360
concurrent to our work there were

437
00:16:21,360 --> 00:16:23,600
two works one by the session chair at

438
00:16:23,600 --> 00:16:27,279
all and one by ephraim it all concerning

439
00:16:27,279 --> 00:16:29,279
non-malleable timeline puzzles

440
00:16:29,279 --> 00:16:31,120
um

441
00:16:31,120 --> 00:16:33,519
non-valuability is a strictly weaker

442
00:16:33,519 --> 00:16:36,160
notion than universal composability and

443
00:16:36,160 --> 00:16:37,440
unsurprisingly they could actually

444
00:16:37,440 --> 00:16:39,680
instantiate their timeline puzzles

445
00:16:39,680 --> 00:16:40,800
without

446
00:16:40,800 --> 00:16:44,639
the need of a programmable random oracle

447
00:16:44,639 --> 00:16:46,000
at the same time

448
00:16:46,000 --> 00:16:48,959
our construction is also not malleable

449
00:16:48,959 --> 00:16:50,399
so we have a

450
00:16:50,399 --> 00:16:53,360
strictly uh stronger security guarantee

451
00:16:53,360 --> 00:16:55,199
at the expense of having to use the

452
00:16:55,199 --> 00:16:58,240
random oracle which is necessary

453
00:16:58,240 --> 00:17:01,120
and then uh this two-party computation

454
00:17:01,120 --> 00:17:02,880
with uh output independent abort was

455
00:17:02,880 --> 00:17:05,119
also achieved by a

456
00:17:05,119 --> 00:17:07,280
work in parallel by koto at all

457
00:17:07,280 --> 00:17:08,799
but their construction is actually not

458
00:17:08,799 --> 00:17:10,640
proven to be secure in the universal

459
00:17:10,640 --> 00:17:13,119
composability framework

460
00:17:13,119 --> 00:17:13,839
and

461
00:17:13,839 --> 00:17:15,280
just to mention this because i have

462
00:17:15,280 --> 00:17:16,959
maybe one second left

463
00:17:16,959 --> 00:17:19,359
in follow-up work we actually

464
00:17:19,359 --> 00:17:21,520
showed that our construction is already

465
00:17:21,520 --> 00:17:23,439
publicly verifiable for the time of

466
00:17:23,439 --> 00:17:25,039
puzzles we also formalized the

467
00:17:25,039 --> 00:17:27,039
verifiable delay functions which are

468
00:17:27,039 --> 00:17:28,079
another

469
00:17:28,079 --> 00:17:29,679
nice primitive

470
00:17:29,679 --> 00:17:31,120
if you want to build anything time

471
00:17:31,120 --> 00:17:34,080
related with cryptography

472
00:17:34,080 --> 00:17:36,160
we showed that this folklore vdf

473
00:17:36,160 --> 00:17:38,640
randomness beacon that has been going

474
00:17:38,640 --> 00:17:40,480
around in the community for some time is

475
00:17:40,480 --> 00:17:42,480
actually provably secure under a certain

476
00:17:42,480 --> 00:17:44,799
choice of parameters

477
00:17:44,799 --> 00:17:46,720
and we give an even better randomness

478
00:17:46,720 --> 00:17:49,919
beacon that has uh more uh average time

479
00:17:49,919 --> 00:17:51,600
efficiency or a better average time

480
00:17:51,600 --> 00:17:52,880
efficiency than

481
00:17:52,880 --> 00:17:55,679
uh the vdf based construction

482
00:17:55,679 --> 00:17:57,760
and in particular we also generalize our

483
00:17:57,760 --> 00:17:59,039
two-party

484
00:17:59,039 --> 00:18:02,320
uh output independent abort computation

485
00:18:02,320 --> 00:18:04,400
to the multi-party setting

486
00:18:04,400 --> 00:18:05,679
and with this i'd like to thank you very

487
00:18:05,679 --> 00:18:08,559
much and then open for

488
00:18:13,679 --> 00:18:15,520
thank questions so we have time for one

489
00:18:15,520 --> 00:18:17,840
question

490
00:18:21,280 --> 00:18:22,160
okay

491
00:18:22,160 --> 00:18:24,960
there's a question in zoom chat okay

492
00:18:24,960 --> 00:18:27,960
yeah

493
00:18:30,240 --> 00:18:32,720
uh can the timelock puzzle functionality

494
00:18:32,720 --> 00:18:35,840
be used to realize other time lock

495
00:18:35,840 --> 00:18:38,720
related primitives for example time lock

496
00:18:38,720 --> 00:18:39,919
signatures

497
00:18:39,919 --> 00:18:42,480
or is it restricted to the concept of

498
00:18:42,480 --> 00:18:44,559
encryption thank you

499
00:18:44,559 --> 00:18:45,600
um

500
00:18:45,600 --> 00:18:47,360
good question we haven't looked into

501
00:18:47,360 --> 00:18:49,600
that specifically but i guess you could

502
00:18:49,600 --> 00:18:50,960
probably uh

503
00:18:50,960 --> 00:18:52,400
have something like time lock signatures

504
00:18:52,400 --> 00:18:53,679
built on it

505
00:18:53,679 --> 00:18:55,280
i think our framework allows for that

506
00:18:55,280 --> 00:18:57,840
yes

507
00:18:58,000 --> 00:19:00,230
okay let's thank the speaker again

508
00:19:00,230 --> 00:19:03,930
[Applause]

509
00:19:06,880 --> 00:19:10,640
okay so the next talk is uh on the power

510
00:19:10,640 --> 00:19:13,440
of multiple anonymous messages frequency

511
00:19:13,440 --> 00:19:15,200
estimation and

512
00:19:15,200 --> 00:19:16,960
selection in the shuffle model of

513
00:19:16,960 --> 00:19:19,440
differential privacy

514
00:19:19,440 --> 00:19:22,720
so this is work of uh i'm probably going

515
00:19:22,720 --> 00:19:25,200
to butcher these names badi gagi

516
00:19:25,200 --> 00:19:29,280
um noah golovich ravi kumar rasmus pug

517
00:19:29,280 --> 00:19:32,720
and amaya velinker and the speaker is

518
00:19:32,720 --> 00:19:36,400
going to be uh noah golovich online so

519
00:19:36,400 --> 00:19:39,840
yeah the floor is yours

520
00:19:43,679 --> 00:19:47,440
uh can you hear me and see my sights

521
00:19:48,480 --> 00:19:50,080
yes

522
00:19:50,080 --> 00:19:52,880
okay

523
00:19:52,880 --> 00:19:54,000
okay great

524
00:19:54,000 --> 00:19:55,200
um

525
00:19:55,200 --> 00:19:57,120
yeah so thank you um so i'm gonna

526
00:19:57,120 --> 00:19:59,120
discuss um our paper on the power of

527
00:19:59,120 --> 00:20:01,200
multiple anonymous messages

528
00:20:01,200 --> 00:20:02,720
um

529
00:20:02,720 --> 00:20:05,360
i'll begin by overviewing um uh some

530
00:20:05,360 --> 00:20:07,760
background on differential privacy

531
00:20:07,760 --> 00:20:09,520
uh and in particular i'll overview a

532
00:20:09,520 --> 00:20:11,360
couple of models of differential privacy

533
00:20:11,360 --> 00:20:13,840
that um beginning with the central model

534
00:20:13,840 --> 00:20:15,600
so in this model we assume there's a

535
00:20:15,600 --> 00:20:18,559
finite universe u which is simply a set

536
00:20:18,559 --> 00:20:20,720
and there's end users each user holds

537
00:20:20,720 --> 00:20:23,440
some data point in this universe and we

538
00:20:23,440 --> 00:20:25,440
denote the collection of the user's data

539
00:20:25,440 --> 00:20:27,280
points as as

540
00:20:27,280 --> 00:20:28,559
as x

541
00:20:28,559 --> 00:20:30,559
we call this the data set

542
00:20:30,559 --> 00:20:32,400
the goal of the users is to release

543
00:20:32,400 --> 00:20:36,159
certain statistics of this data set x

544
00:20:36,159 --> 00:20:37,520
and in particular the way they do this

545
00:20:37,520 --> 00:20:39,440
in the central model is they assume the

546
00:20:39,440 --> 00:20:40,960
existence of a trusted analyzer which

547
00:20:40,960 --> 00:20:42,480
can add noise

548
00:20:42,480 --> 00:20:44,000
to these statistics

549
00:20:44,000 --> 00:20:46,320
to preserve privacy

550
00:20:46,320 --> 00:20:48,000
the particular notion of privacy that we

551
00:20:48,000 --> 00:20:50,320
consider is differential privacy

552
00:20:50,320 --> 00:20:52,400
so an analyzer a

553
00:20:52,400 --> 00:20:54,480
which takes this input of data set x is

554
00:20:54,480 --> 00:20:56,880
epsilon delta differentially private for

555
00:20:56,880 --> 00:20:59,520
real numbers epsilon delta

556
00:20:59,520 --> 00:21:00,320
if

557
00:21:00,320 --> 00:21:02,480
for all neighboring data sets namely

558
00:21:02,480 --> 00:21:04,720
data sets which differ in the in a

559
00:21:04,720 --> 00:21:06,720
single user's data point

560
00:21:06,720 --> 00:21:08,320
um the probability of any event

561
00:21:08,320 --> 00:21:09,440
occurring

562
00:21:09,440 --> 00:21:12,799
under these two data sets is similar

563
00:21:12,799 --> 00:21:14,400
by similar i mean those probabilities

564
00:21:14,400 --> 00:21:16,159
differ by a multiplicative factor of e

565
00:21:16,159 --> 00:21:18,400
to the epsilon and an additive term of

566
00:21:18,400 --> 00:21:20,799
delta

567
00:21:21,679 --> 00:21:23,840
now central model of definite privacy

568
00:21:23,840 --> 00:21:25,039
makes a relatively strong assumption

569
00:21:25,039 --> 00:21:26,159
about the existence of a trusted

570
00:21:26,159 --> 00:21:27,280
analyzer

571
00:21:27,280 --> 00:21:28,840
in the local model we remove this

572
00:21:28,840 --> 00:21:31,360
assumption and what this means is that

573
00:21:31,360 --> 00:21:33,120
users have to add privacy preserving

574
00:21:33,120 --> 00:21:35,918
noise themselves

575
00:21:36,080 --> 00:21:39,200
um and in particular we call uh

576
00:21:39,200 --> 00:21:41,760
the user's mapping from their own data

577
00:21:41,760 --> 00:21:42,840
points

578
00:21:42,840 --> 00:21:45,679
to the uh the thing they sent to the

579
00:21:45,679 --> 00:21:49,600
untrusted analyzer um local randomizer

580
00:21:49,600 --> 00:21:52,000
and this consists of each user's data

581
00:21:52,000 --> 00:21:53,440
point uh

582
00:21:53,440 --> 00:21:57,960
having a noise added to it

583
00:21:58,640 --> 00:22:00,240
and in the uh in the model of local

584
00:22:00,240 --> 00:22:02,960
differential privacy an algorithm or

585
00:22:02,960 --> 00:22:05,360
local randomizer r is epsilon

586
00:22:05,360 --> 00:22:07,600
differentially private if the mapping

587
00:22:07,600 --> 00:22:09,120
from each user's data point to the

588
00:22:09,120 --> 00:22:11,120
output of the local randomizer

589
00:22:11,120 --> 00:22:12,880
is itself differentially private as a

590
00:22:12,880 --> 00:22:13,840
function

591
00:22:13,840 --> 00:22:17,039
of data sets of a single element

592
00:22:17,039 --> 00:22:18,320
now in particular this is a pretty

593
00:22:18,320 --> 00:22:20,799
strong requirement

594
00:22:20,799 --> 00:22:22,960
and it turns out that the local model of

595
00:22:22,960 --> 00:22:25,600
differential privacy often necessitates

596
00:22:25,600 --> 00:22:28,480
uh adding a large amount of

597
00:22:28,480 --> 00:22:29,679
noise

598
00:22:29,679 --> 00:22:31,600
and in particular even for very simple

599
00:22:31,600 --> 00:22:32,559
tasks

600
00:22:32,559 --> 00:22:35,200
such as say

601
00:22:35,520 --> 00:22:38,320
computing uh frequencies the amount of

602
00:22:38,320 --> 00:22:40,480
error in a local model is is quite large

603
00:22:40,480 --> 00:22:41,679
it's grows in the square root of the

604
00:22:41,679 --> 00:22:44,480
number of users

605
00:22:44,640 --> 00:22:46,159
so one solution that's been proposed in

606
00:22:46,159 --> 00:22:47,679
recent years the one that we consider in

607
00:22:47,679 --> 00:22:49,520
our paper is the shuffled model of

608
00:22:49,520 --> 00:22:51,440
differential privacy

609
00:22:51,440 --> 00:22:53,039
so this is very similar to the local

610
00:22:53,039 --> 00:22:55,120
model except you assume that there is a

611
00:22:55,120 --> 00:22:57,200
trusted shuffler s

612
00:22:57,200 --> 00:22:59,360
which lies in between the untrusted

613
00:22:59,360 --> 00:23:01,120
analyzer and the users

614
00:23:01,120 --> 00:23:02,880
so in particular each user who has some

615
00:23:02,880 --> 00:23:05,360
data point x i

616
00:23:05,360 --> 00:23:07,120
still going to add some noise to data

617
00:23:07,120 --> 00:23:09,919
points x i uh which we denote by again

618
00:23:09,919 --> 00:23:14,080
by r the the local randomizer but then

619
00:23:14,080 --> 00:23:16,240
uh the outputs the local randomizers are

620
00:23:16,240 --> 00:23:17,919
randomly shuffled by this trusted

621
00:23:17,919 --> 00:23:19,039
shuffler

622
00:23:19,039 --> 00:23:20,080
and so you can think of it as adding

623
00:23:20,080 --> 00:23:22,559
some amount of anonymity

624
00:23:22,559 --> 00:23:24,799
to the user's outputs

625
00:23:24,799 --> 00:23:25,919
and the

626
00:23:25,919 --> 00:23:27,760
the untrusted analyzer then sees the

627
00:23:27,760 --> 00:23:29,679
outputs that trust the shuffler and it

628
00:23:29,679 --> 00:23:31,600
performs uh some analysis of those

629
00:23:31,600 --> 00:23:33,440
outputs and reduces the desired

630
00:23:33,440 --> 00:23:36,080
statistics

631
00:23:36,080 --> 00:23:38,480
an algorithm is the differential in the

632
00:23:38,480 --> 00:23:40,559
shuffled model if the mapping from a

633
00:23:40,559 --> 00:23:42,320
data set to the output of the shuffler

634
00:23:42,320 --> 00:23:45,439
is differentially private

635
00:23:48,640 --> 00:23:49,520
okay

636
00:23:49,520 --> 00:23:51,200
so our main results are kind of to

637
00:23:51,200 --> 00:23:54,240
establish some uh upper and lower bounds

638
00:23:54,240 --> 00:23:56,080
for some basic tasks in the shuffled

639
00:23:56,080 --> 00:23:58,159
model of differential privacy

640
00:23:58,159 --> 00:24:00,159
the first task that we consider is the

641
00:24:00,159 --> 00:24:02,960
task of frequency estimation so here

642
00:24:02,960 --> 00:24:05,360
each user has some

643
00:24:05,360 --> 00:24:07,679
uh element which is a

644
00:24:07,679 --> 00:24:09,120
of a finite set say the integer is

645
00:24:09,120 --> 00:24:10,640
between one and b

646
00:24:10,640 --> 00:24:12,480
for some positive integer b and the goal

647
00:24:12,480 --> 00:24:14,480
is really simple it's simply to compute

648
00:24:14,480 --> 00:24:16,720
frequency estimates

649
00:24:16,720 --> 00:24:20,080
uh among uh the end users for each

650
00:24:20,080 --> 00:24:21,679
element uh between one of these we want

651
00:24:21,679 --> 00:24:22,880
to count the number of users holding

652
00:24:22,880 --> 00:24:24,559
each element

653
00:24:24,559 --> 00:24:26,320
of the universe

654
00:24:26,320 --> 00:24:28,559
and it turns out that in a particular

655
00:24:28,559 --> 00:24:31,200
special case um known as the

656
00:24:31,200 --> 00:24:33,440
single message shuffle model

657
00:24:33,440 --> 00:24:35,360
users can perform uh frequency

658
00:24:35,360 --> 00:24:37,200
estimation with error which is

659
00:24:37,200 --> 00:24:39,120
polynomial and n and b in the polynomial

660
00:24:39,120 --> 00:24:41,279
is shown in this expression and our

661
00:24:41,279 --> 00:24:42,640
first main result of this is actually

662
00:24:42,640 --> 00:24:44,320
optimal in the single message model

663
00:24:44,320 --> 00:24:46,320
shuffle a single message shuffle model

664
00:24:46,320 --> 00:24:49,039
which means each user sends a single

665
00:24:49,039 --> 00:24:51,039
message which is then shuffled by the

666
00:24:51,039 --> 00:24:53,520
shuffler

667
00:24:54,720 --> 00:24:56,320
and our second main result is to show

668
00:24:56,320 --> 00:24:58,240
that in fact you can

669
00:24:58,240 --> 00:24:59,600
improve upon this by using the

670
00:24:59,600 --> 00:25:01,360
multi-message shuffle model differential

671
00:25:01,360 --> 00:25:03,200
privacy which means that each user's

672
00:25:03,200 --> 00:25:05,679
local randomizer sends multiple messages

673
00:25:05,679 --> 00:25:08,480
which are shuffled by the analyzer

674
00:25:08,480 --> 00:25:10,159
by the by the shuffler

675
00:25:10,159 --> 00:25:11,760
and we have a couple results on the

676
00:25:11,760 --> 00:25:14,559
multimaster shuffle model differing in

677
00:25:14,559 --> 00:25:15,679
the

678
00:25:15,679 --> 00:25:17,360
the computation

679
00:25:17,360 --> 00:25:19,200
um and also the existence of public

680
00:25:19,200 --> 00:25:21,279
coins but roughly speaking we're able to

681
00:25:21,279 --> 00:25:23,200
get poly logarithmic error

682
00:25:23,200 --> 00:25:24,960
and communication

683
00:25:24,960 --> 00:25:27,679
uh which improves upon that

684
00:25:27,679 --> 00:25:29,120
of the single message

685
00:25:29,120 --> 00:25:31,760
shuffle model where it's polynomial uh

686
00:25:31,760 --> 00:25:34,000
error

687
00:25:34,400 --> 00:25:36,799
um so here's some open questions uh many

688
00:25:36,799 --> 00:25:39,120
of our bounds are uh

689
00:25:39,120 --> 00:25:40,640
not necessarily tight

690
00:25:40,640 --> 00:25:42,080
or some of our bounds are not known to

691
00:25:42,080 --> 00:25:43,360
be tight

692
00:25:43,360 --> 00:25:44,640
and some other interesting questions

693
00:25:44,640 --> 00:25:46,159
involve the

694
00:25:46,159 --> 00:25:47,760
selection problem in this fight in the

695
00:25:47,760 --> 00:25:50,480
multi-message shuffle model

696
00:25:50,480 --> 00:25:53,960
thank you for listening

697
00:26:01,440 --> 00:26:04,320
or one or two questions

698
00:26:04,320 --> 00:26:08,760
there's nothing in the chat so anybody

699
00:26:10,320 --> 00:26:11,760
okay

700
00:26:11,760 --> 00:26:13,600
so then let's thank the speaker again

701
00:26:13,600 --> 00:26:13,920
thank you

702
00:26:13,920 --> 00:26:17,769
[Applause]

703
00:26:21,679 --> 00:26:23,760
so the next talk is going to be on

704
00:26:23,760 --> 00:26:26,559
non-interactive anonymous router by

705
00:26:26,559 --> 00:26:28,960
elaine sheeh and kabu and elaine is

706
00:26:28,960 --> 00:26:31,360
going to give the online talk so the

707
00:26:31,360 --> 00:26:34,678
floor is yours

708
00:26:46,799 --> 00:26:50,279
are you there elaine

709
00:27:02,000 --> 00:27:04,720
it appears elaine is not online

710
00:27:04,720 --> 00:27:07,679
okay so let's move the talk to the end

711
00:27:07,679 --> 00:27:09,760
of the session for now it's very early

712
00:27:09,760 --> 00:27:13,200
uh the east coast so maybe

713
00:27:13,200 --> 00:27:14,960
uh yeah so

714
00:27:14,960 --> 00:27:17,520
i hope uh so is is the speaker for the

715
00:27:17,520 --> 00:27:19,600
for the next talk ready that that would

716
00:27:19,600 --> 00:27:22,720
be bifurcated signatures following the

717
00:27:22,720 --> 00:27:25,760
accountability versus anonymity dilemma

718
00:27:25,760 --> 00:27:27,120
yes i am

719
00:27:27,120 --> 00:27:29,360
okay

720
00:27:29,840 --> 00:27:31,600
sorry i didn't read the didn't read the

721
00:27:31,600 --> 00:27:32,880
full title so

722
00:27:32,880 --> 00:27:34,640
the full title is hyper-capital

723
00:27:34,640 --> 00:27:36,799
signatures holding the accountability

724
00:27:36,799 --> 00:27:39,600
versus anonymity dilemma into a single

725
00:27:39,600 --> 00:27:41,600
private signing scheme

726
00:27:41,600 --> 00:27:44,320
and this is work by benue libel

727
00:27:44,320 --> 00:27:45,919
uh

728
00:27:45,919 --> 00:27:48,799
thomas peters and moti yong and the

729
00:27:48,799 --> 00:27:52,720
speaker will be thomas peters

730
00:27:53,679 --> 00:27:55,279
thank you for the introduction do you

731
00:27:55,279 --> 00:27:57,679
hear me

732
00:27:58,080 --> 00:27:59,200
yes

733
00:27:59,200 --> 00:28:01,520
thanks

734
00:28:01,679 --> 00:28:04,559
so uh welcome to my presentation about

735
00:28:04,559 --> 00:28:07,600
bifurcated signatures so i'm going to

736
00:28:07,600 --> 00:28:10,000
show you that we do not have to choose

737
00:28:10,000 --> 00:28:12,720
once and for all between a strong notion

738
00:28:12,720 --> 00:28:14,320
of accountability

739
00:28:14,320 --> 00:28:16,399
and with statistical anonymity in a

740
00:28:16,399 --> 00:28:20,399
single private signing scheme

741
00:28:20,399 --> 00:28:22,240
our goal is actually to initiate

742
00:28:22,240 --> 00:28:25,840
research on bifurcated cryptography

743
00:28:25,840 --> 00:28:27,919
in more than two decades cryptographers

744
00:28:27,919 --> 00:28:30,399
built more and more advanced protocols

745
00:28:30,399 --> 00:28:33,679
but that can usually be divided into two

746
00:28:33,679 --> 00:28:35,360
branches

747
00:28:35,360 --> 00:28:37,919
on the one branch we have the primitives

748
00:28:37,919 --> 00:28:41,120
for privacy aware users where we can

749
00:28:41,120 --> 00:28:43,600
have end-to-end encryption or scheme

750
00:28:43,600 --> 00:28:45,600
with statistical anonymity or

751
00:28:45,600 --> 00:28:47,679
everlasting privacy

752
00:28:47,679 --> 00:28:50,640
and on the other branch we have

753
00:28:50,640 --> 00:28:53,120
the primitives designed to

754
00:28:53,120 --> 00:28:55,120
prevent

755
00:28:55,120 --> 00:28:57,440
to prevent

756
00:28:57,440 --> 00:28:58,480
excuse me

757
00:28:58,480 --> 00:29:01,440
to prevent uh abusing the cryptosystem

758
00:29:01,440 --> 00:29:03,200
and where one would like to property

759
00:29:03,200 --> 00:29:05,919
such as key escrow or identity score

760
00:29:05,919 --> 00:29:09,840
strong notion of accountability

761
00:29:10,159 --> 00:29:13,520
uh of course uh each branch they can

762
00:29:13,520 --> 00:29:15,760
separately might be the best solution in

763
00:29:15,760 --> 00:29:18,799
some context but both branches do not

764
00:29:18,799 --> 00:29:21,760
live together and it sometimes leads to

765
00:29:21,760 --> 00:29:24,000
some tensions

766
00:29:24,000 --> 00:29:25,520
so the goal of

767
00:29:25,520 --> 00:29:27,760
bifurcated cryptography

768
00:29:27,760 --> 00:29:30,559
is to make both branches living together

769
00:29:30,559 --> 00:29:33,600
in a single scheme in a flexible and

770
00:29:33,600 --> 00:29:36,639
user-friendly manner

771
00:29:37,440 --> 00:29:39,760
in the case of anonymous signatures

772
00:29:39,760 --> 00:29:42,480
cryptographers created the best

773
00:29:42,480 --> 00:29:45,039
solution

774
00:29:45,120 --> 00:29:46,960
for each branch

775
00:29:46,960 --> 00:29:49,279
for instance for a statistical anonymity

776
00:29:49,279 --> 00:29:52,000
we have ring signatures on the one range

777
00:29:52,000 --> 00:29:54,399
and for traceability we have group

778
00:29:54,399 --> 00:29:56,559
signatures on the other branch

779
00:29:56,559 --> 00:29:59,279
where an opening authority can identify

780
00:29:59,279 --> 00:30:01,360
the signer on demand but it can of

781
00:30:01,360 --> 00:30:02,640
course do it

782
00:30:02,640 --> 00:30:03,840
everyone

783
00:30:03,840 --> 00:30:05,520
when it was

784
00:30:05,520 --> 00:30:06,880
so

785
00:30:06,880 --> 00:30:09,520
some works try to mitigate these

786
00:30:09,520 --> 00:30:12,880
absolute properties in both branches

787
00:30:12,880 --> 00:30:13,919
but

788
00:30:13,919 --> 00:30:16,640
the separation between gross branches

789
00:30:16,640 --> 00:30:20,399
remains strong and schemes either offer

790
00:30:20,399 --> 00:30:23,440
a statistical anonymity or at most

791
00:30:23,440 --> 00:30:27,039
computational anonymity

792
00:30:27,360 --> 00:30:29,919
one notable exception

793
00:30:29,919 --> 00:30:32,799
where both branches leaves two together

794
00:30:32,799 --> 00:30:35,520
is in accountable tracing signatures

795
00:30:35,520 --> 00:30:38,720
however there the user receive a single

796
00:30:38,720 --> 00:30:41,520
signing key which features the brands

797
00:30:41,520 --> 00:30:43,520
the branch once and for all

798
00:30:43,520 --> 00:30:48,080
and even without being aware of which

799
00:30:48,080 --> 00:30:51,679
then we raise some questions

800
00:30:51,679 --> 00:30:53,919
why should we choose the branch at the

801
00:30:53,919 --> 00:30:56,399
key generation time

802
00:30:56,399 --> 00:30:58,640
can we avoid authoritarially freezing

803
00:30:58,640 --> 00:31:01,440
the targeted security notions

804
00:31:01,440 --> 00:31:03,440
and can we have the best of both

805
00:31:03,440 --> 00:31:06,080
branches in a flexible and rallying

806
00:31:06,080 --> 00:31:08,240
feature

807
00:31:08,240 --> 00:31:10,960
to answer this question we introduce the

808
00:31:10,960 --> 00:31:12,640
primitive of

809
00:31:12,640 --> 00:31:14,640
bifurcated anonymous

810
00:31:14,640 --> 00:31:16,559
signatures

811
00:31:16,559 --> 00:31:18,960
in bifurcated energy signatures

812
00:31:18,960 --> 00:31:21,360
the branch is selected

813
00:31:21,360 --> 00:31:24,320
by a predicate at the signing time

814
00:31:24,320 --> 00:31:25,840
so depending on the contents the

815
00:31:25,840 --> 00:31:28,640
predicate value determines point wise

816
00:31:28,640 --> 00:31:31,039
whether the signature will fall in the

817
00:31:31,039 --> 00:31:33,679
statistically unlimited branch or in the

818
00:31:33,679 --> 00:31:36,000
traceability branch

819
00:31:36,000 --> 00:31:39,200
moreover this predicate value is easily

820
00:31:39,200 --> 00:31:41,679
computable by the signer who can just

821
00:31:41,679 --> 00:31:44,159
make an educated choice as whether he or

822
00:31:44,159 --> 00:31:47,039
she can afford a signing

823
00:31:47,039 --> 00:31:50,000
for instance if he wants to avoid being

824
00:31:50,000 --> 00:31:54,559
trustable in some dangerous situation

825
00:31:55,600 --> 00:31:56,559
for

826
00:31:56,559 --> 00:31:58,399
privacy point of view from a privacy

827
00:31:58,399 --> 00:32:00,799
point of view we required a bifurcated

828
00:32:00,799 --> 00:32:04,000
enemy signature to be branch hiding

829
00:32:04,000 --> 00:32:06,320
that means that whether a signature is

830
00:32:06,320 --> 00:32:08,559
stressable or not is hidden from the

831
00:32:08,559 --> 00:32:09,840
outside

832
00:32:09,840 --> 00:32:11,840
this allow designer to make a free

833
00:32:11,840 --> 00:32:14,399
choice as no one can tell whether he or

834
00:32:14,399 --> 00:32:16,559
she accepts signing for one branch or

835
00:32:16,559 --> 00:32:17,679
the other

836
00:32:17,679 --> 00:32:19,279
except of course

837
00:32:19,279 --> 00:32:21,279
for the opening authority who can figure

838
00:32:21,279 --> 00:32:25,039
it out by trying to trace the signature

839
00:32:25,039 --> 00:32:27,360
we stress that revealing the branch can

840
00:32:27,360 --> 00:32:29,840
give private information about the

841
00:32:29,840 --> 00:32:32,320
signer so this is also one more reason

842
00:32:32,320 --> 00:32:36,240
why we should hide that information

843
00:32:36,240 --> 00:32:40,720
we also required branch soundness

844
00:32:40,720 --> 00:32:42,880
this is a security requirement which

845
00:32:42,880 --> 00:32:46,159
ensures that malicious signers even

846
00:32:46,159 --> 00:32:48,480
colluding with all the authorities

847
00:32:48,480 --> 00:32:50,880
cannot flip the branch and compute a

848
00:32:50,880 --> 00:32:53,039
signature that should fall in one range

849
00:32:53,039 --> 00:32:56,720
while finally falls in the other

850
00:32:56,720 --> 00:32:59,039
somehow it says that no one can cheat

851
00:32:59,039 --> 00:33:00,480
with the predicate

852
00:33:00,480 --> 00:33:02,880
so that any honest designer can make a

853
00:33:02,880 --> 00:33:05,760
secure choice

854
00:33:05,760 --> 00:33:07,840
here is a side note on the meaning of

855
00:33:07,840 --> 00:33:10,840
bifurcated

856
00:33:12,399 --> 00:33:13,519
so to

857
00:33:13,519 --> 00:33:15,600
conclude in a few seconds

858
00:33:15,600 --> 00:33:19,039
our contribution can be summarized as

859
00:33:19,039 --> 00:33:21,519
defining the new primitive and providing

860
00:33:21,519 --> 00:33:23,519
generic constructions

861
00:33:23,519 --> 00:33:24,559
we

862
00:33:24,559 --> 00:33:28,000
actually use a family of predicates and

863
00:33:28,000 --> 00:33:30,399
when a predicate

864
00:33:30,399 --> 00:33:31,600
evaluates

865
00:33:31,600 --> 00:33:34,399
or returns one one input a message

866
00:33:34,399 --> 00:33:36,159
assigner identity

867
00:33:36,159 --> 00:33:38,559
and a weakness that means that the

868
00:33:38,559 --> 00:33:40,399
signature will be statistically

869
00:33:40,399 --> 00:33:42,000
anonymous

870
00:33:42,000 --> 00:33:46,720
or an anti-notion implied branch hiding

871
00:33:46,720 --> 00:33:48,799
as further security

872
00:33:48,799 --> 00:33:50,559
in order to be able to define

873
00:33:50,559 --> 00:33:53,200
unforgivability related notions such as

874
00:33:53,200 --> 00:33:55,519
traceability or inflammability

875
00:33:55,519 --> 00:33:57,519
we first have to provide an

876
00:33:57,519 --> 00:33:59,760
indistinguishable extractable mode where

877
00:33:59,760 --> 00:34:01,600
it is always possible to extract

878
00:34:01,600 --> 00:34:04,080
identity but it is of course only

879
00:34:04,080 --> 00:34:06,640
possible in the security group

880
00:34:06,640 --> 00:34:08,480
otherwise we cannot have statistical

881
00:34:08,480 --> 00:34:10,719
activity of course

882
00:34:10,719 --> 00:34:14,079
so eventually we show

883
00:34:14,079 --> 00:34:15,918
how to achieve this for general

884
00:34:15,918 --> 00:34:18,560
predicates that can be represented as

885
00:34:18,560 --> 00:34:21,599
bounded depth boolean circuits

886
00:34:21,599 --> 00:34:24,560
and a nice feature of our instantiation

887
00:34:24,560 --> 00:34:27,599
is that we directly get a signature size

888
00:34:27,599 --> 00:34:31,040
that are independent of the circuit size

889
00:34:31,040 --> 00:34:33,520
and so we have two instantiations one

890
00:34:33,520 --> 00:34:37,280
based on lw and another one based on

891
00:34:37,280 --> 00:34:39,760
bearings

892
00:34:41,839 --> 00:34:45,078
thank you

893
00:34:51,280 --> 00:34:54,079
time for questions

894
00:34:54,560 --> 00:34:57,119
are there any

895
00:34:57,920 --> 00:35:00,240
okay so if not then i actually have a

896
00:35:00,240 --> 00:35:01,119
question

897
00:35:01,119 --> 00:35:04,160
so uh you mentioned that the uh the

898
00:35:04,160 --> 00:35:05,359
branches

899
00:35:05,359 --> 00:35:06,320
or

900
00:35:06,320 --> 00:35:08,320
more specifically which branch you're on

901
00:35:08,320 --> 00:35:10,640
is uh hidden

902
00:35:10,640 --> 00:35:12,160
and uh

903
00:35:12,160 --> 00:35:14,640
so so this has to be

904
00:35:14,640 --> 00:35:18,079
is this like a statistical thing or does

905
00:35:18,079 --> 00:35:20,320
it also make sense to consider this as a

906
00:35:20,320 --> 00:35:23,520
computational indistinguishability

907
00:35:23,520 --> 00:35:25,839
yeah so in our case we define it in such

908
00:35:25,839 --> 00:35:28,480
a way that we reconcile statistical

909
00:35:28,480 --> 00:35:31,760
anonymity and traceability but of course

910
00:35:31,760 --> 00:35:34,800
more generally as we say our goal is to

911
00:35:34,800 --> 00:35:37,119
initiate research on bifurcated

912
00:35:37,119 --> 00:35:38,800
cryptography and there yeah you can

913
00:35:38,800 --> 00:35:40,240
imagine that

914
00:35:40,240 --> 00:35:42,320
you can have end-to-end encryption which

915
00:35:42,320 --> 00:35:44,480
is of course something which is only

916
00:35:44,480 --> 00:35:46,400
computationally secure

917
00:35:46,400 --> 00:35:50,320
and you can try to couple it with other

918
00:35:50,320 --> 00:35:53,040
properties that usually can only be

919
00:35:53,040 --> 00:35:54,079
achieved

920
00:35:54,079 --> 00:35:56,800
on the other branch as we say

921
00:35:56,800 --> 00:35:58,720
so yeah the purpose of the predicate is

922
00:35:58,720 --> 00:36:00,880
somehow to get to reconcile two

923
00:36:00,880 --> 00:36:03,520
properties that are not uh

924
00:36:03,520 --> 00:36:05,920
compatible so of course

925
00:36:05,920 --> 00:36:08,800
here if we have a single uh commitment

926
00:36:08,800 --> 00:36:09,920
values

927
00:36:09,920 --> 00:36:12,079
it is of course either perfectly hiding

928
00:36:12,079 --> 00:36:14,160
or perfectly binding

929
00:36:14,160 --> 00:36:16,720
uh but uh and never never both at the

930
00:36:16,720 --> 00:36:19,280
same time but the purpose is as dual

931
00:36:19,280 --> 00:36:21,920
commitment for stance to have something

932
00:36:21,920 --> 00:36:24,480
which makes a bridge between the two

933
00:36:24,480 --> 00:36:26,079
branches

934
00:36:26,079 --> 00:36:27,040
um

935
00:36:27,040 --> 00:36:28,160
but yeah

936
00:36:28,160 --> 00:36:30,960
before our work we think that yeah most

937
00:36:30,960 --> 00:36:32,240
of the

938
00:36:32,240 --> 00:36:34,240
of the work and dual commitment for

939
00:36:34,240 --> 00:36:35,599
instance

940
00:36:35,599 --> 00:36:38,640
is simply a technical trick in a

941
00:36:38,640 --> 00:36:41,520
security proof of a broader protocol

942
00:36:41,520 --> 00:36:44,240
and not uh really a feature of the

943
00:36:44,240 --> 00:36:45,760
functionality

944
00:36:45,760 --> 00:36:47,359
but yeah you can use the predicate

945
00:36:47,359 --> 00:36:50,079
symbol to to balance between between two

946
00:36:50,079 --> 00:36:53,119
security notions

947
00:36:53,119 --> 00:36:55,359
i see thank you and the constructions

948
00:36:55,359 --> 00:36:56,800
that you have are they in the standard

949
00:36:56,800 --> 00:36:59,040
model or the random oracle model

950
00:36:59,040 --> 00:37:01,280
uh in the standard model

951
00:37:01,280 --> 00:37:03,599
how efficient are they

952
00:37:03,599 --> 00:37:05,280
how we do not evaluate really the

953
00:37:05,280 --> 00:37:06,480
efficiency

954
00:37:06,480 --> 00:37:08,880
for the

955
00:37:08,880 --> 00:37:12,800
but for the pairing yes we did it um

956
00:37:12,800 --> 00:37:14,400
because we do not

957
00:37:14,400 --> 00:37:18,800
have to rely on on generic

958
00:37:19,760 --> 00:37:21,119
on generic

959
00:37:21,119 --> 00:37:22,960
building blocks so yeah in the case of

960
00:37:22,960 --> 00:37:24,160
pairings

961
00:37:24,160 --> 00:37:26,560
uh the signature yeah you have you have

962
00:37:26,560 --> 00:37:29,040
the the size here so the size of the

963
00:37:29,040 --> 00:37:31,599
witness the size of the identity and

964
00:37:31,599 --> 00:37:34,960
yeah we have something which is uh

965
00:37:34,960 --> 00:37:37,520
as big or as short than that

966
00:37:37,520 --> 00:37:39,839
since the the predicate is of course

967
00:37:39,839 --> 00:37:41,680
very general

968
00:37:41,680 --> 00:37:44,400
okay yeah thank you very much

969
00:37:44,400 --> 00:37:48,280
let's thank the speaker again

970
00:37:54,320 --> 00:37:55,520
uh so

971
00:37:55,520 --> 00:37:58,480
the final talk of the session or

972
00:37:58,480 --> 00:38:00,400
well i'm not sure yet but uh maybe the

973
00:38:00,400 --> 00:38:02,400
final talk of the session will be abuse

974
00:38:02,400 --> 00:38:05,680
resistant law enforcement access systems

975
00:38:05,680 --> 00:38:07,520
by matthew greene

976
00:38:07,520 --> 00:38:10,720
gabriel capchuk and guys van lier and

977
00:38:10,720 --> 00:38:12,079
the speaker will be

978
00:38:12,079 --> 00:38:16,520
gabrielle kapchuk in person

979
00:38:36,000 --> 00:38:38,160
uh yeah thanks so much um

980
00:38:38,160 --> 00:38:40,079
i'm gabe capchuk uh and this is joint

981
00:38:40,079 --> 00:38:42,240
work uh with matt green and his friend

982
00:38:42,240 --> 00:38:43,040
lair

983
00:38:43,040 --> 00:38:45,359
um and this is abuse resistant law

984
00:38:45,359 --> 00:38:47,359
enforcement access systems although over

985
00:38:47,359 --> 00:38:48,480
the past couple days i've kind of

986
00:38:48,480 --> 00:38:49,839
started thinking about it by other

987
00:38:49,839 --> 00:38:52,079
titles like why law enforcement is in

988
00:38:52,079 --> 00:38:54,400
session title today or the weirdest

989
00:38:54,400 --> 00:38:56,480
paper at eurocrypt2021

990
00:38:56,480 --> 00:38:58,480
um and so i'm going to try and quickly

991
00:38:58,480 --> 00:38:59,599
walk through some of the stuff here but

992
00:38:59,599 --> 00:39:01,359
there's a lot uh going on so there's

993
00:39:01,359 --> 00:39:02,560
some stuff i'm not gonna have time to

994
00:39:02,560 --> 00:39:04,640
cover um but in general i'm gonna be

995
00:39:04,640 --> 00:39:06,480
talking about law enforcement access

996
00:39:06,480 --> 00:39:08,079
systems into end-to-end encrypted

997
00:39:08,079 --> 00:39:10,480
messaging systems um these go by

998
00:39:10,480 --> 00:39:11,520
multiple different names you call them

999
00:39:11,520 --> 00:39:12,800
back doors law enforcement access

1000
00:39:12,800 --> 00:39:14,560
systems whatever you particularly want

1001
00:39:14,560 --> 00:39:16,560
and perhaps a little bit ironically for

1002
00:39:16,560 --> 00:39:18,160
eurocrypt i'm going to be speaking

1003
00:39:18,160 --> 00:39:20,320
specifically in the context of the

1004
00:39:20,320 --> 00:39:21,599
united states

1005
00:39:21,599 --> 00:39:23,359
but the ideas here generalize pretty

1006
00:39:23,359 --> 00:39:26,480
well to multiple other jurisdictions

1007
00:39:26,480 --> 00:39:28,160
and just to kind of jog our brains a

1008
00:39:28,160 --> 00:39:30,560
little bit um into getting our social

1009
00:39:30,560 --> 00:39:32,160
brains on a little bit i want to quickly

1010
00:39:32,160 --> 00:39:33,760
just recount some important pieces of

1011
00:39:33,760 --> 00:39:34,960
history that have kind of led us to

1012
00:39:34,960 --> 00:39:36,320
where we are today

1013
00:39:36,320 --> 00:39:38,720
um in in the debate about the social uh

1014
00:39:38,720 --> 00:39:40,079
implications of cryptography and

1015
00:39:40,079 --> 00:39:42,240
encryption so if we think back to the

1016
00:39:42,240 --> 00:39:44,240
1990s there's all kinds of stuff going

1017
00:39:44,240 --> 00:39:46,240
on during the first crypto wars i mean

1018
00:39:46,240 --> 00:39:48,160
in particular uh hopefully everybody

1019
00:39:48,160 --> 00:39:49,680
remembers the clipper chip um the

1020
00:39:49,680 --> 00:39:51,119
ill-fated proposal by the clinton

1021
00:39:51,119 --> 00:39:53,040
administration to do key escrow for

1022
00:39:53,040 --> 00:39:54,240
basically every phone in the united

1023
00:39:54,240 --> 00:39:57,040
states um ultimately this was quashed by

1024
00:39:57,040 --> 00:39:59,359
privacy advocates business advocates um

1025
00:39:59,359 --> 00:40:01,440
uh because uh privacy and encryption was

1026
00:40:01,440 --> 00:40:02,640
actually important for all kinds of

1027
00:40:02,640 --> 00:40:03,599
reasons which we'll talk about in a

1028
00:40:03,599 --> 00:40:05,119
moment um

1029
00:40:05,119 --> 00:40:06,480
and things went quiet for a little bit

1030
00:40:06,480 --> 00:40:08,560
after that the snowden leaks kind of

1031
00:40:08,560 --> 00:40:10,800
reawoken the public to this uh kind of

1032
00:40:10,800 --> 00:40:12,640
battle between government interest in

1033
00:40:12,640 --> 00:40:15,200
getting into encrypted systems um and

1034
00:40:15,200 --> 00:40:17,119
and kind of privacy interests whether it

1035
00:40:17,119 --> 00:40:20,319
be by subverting um standards or it be

1036
00:40:20,319 --> 00:40:22,000
uh you know building technical access

1037
00:40:22,000 --> 00:40:24,480
capabilities that are quite complex um

1038
00:40:24,480 --> 00:40:26,800
in 2015 2016 there was a big showdown

1039
00:40:26,800 --> 00:40:29,760
between the apple and the fbi uh where

1040
00:40:29,760 --> 00:40:31,839
in the aftermath of a terrorist attack

1041
00:40:31,839 --> 00:40:34,880
in the united states um the fbi tried to

1042
00:40:34,880 --> 00:40:36,960
compel apple to build software that

1043
00:40:36,960 --> 00:40:38,880
would allow them to access encrypted

1044
00:40:38,880 --> 00:40:41,040
phones um we ultimately in the united

1045
00:40:41,040 --> 00:40:42,560
states never saw the conclusion of this

1046
00:40:42,560 --> 00:40:45,200
case because uh the fbi eventually found

1047
00:40:45,200 --> 00:40:47,280
a third-party vendor who was able to get

1048
00:40:47,280 --> 00:40:49,280
them into the phone using some kind of

1049
00:40:49,280 --> 00:40:51,119
some kind of attack

1050
00:40:51,119 --> 00:40:52,560
i mean this has kind of led us to the

1051
00:40:52,560 --> 00:40:54,560
current moment um which is kind of

1052
00:40:54,560 --> 00:40:56,240
characterized by a new set of

1053
00:40:56,240 --> 00:40:58,560
legislation um that are kind of trying

1054
00:40:58,560 --> 00:41:00,880
to make antenna encryption illegal by

1055
00:41:00,880 --> 00:41:03,440
default by kind of targeting very

1056
00:41:03,440 --> 00:41:05,440
specific liability claims in the united

1057
00:41:05,440 --> 00:41:08,079
states i mean it's kind of a very goofy

1058
00:41:08,079 --> 00:41:10,079
notion um that we're going to go after

1059
00:41:10,079 --> 00:41:12,400
maybe very united states notion to go

1060
00:41:12,400 --> 00:41:14,480
after uh insurance and liability and all

1061
00:41:14,480 --> 00:41:16,240
that kind of uh kind of thing as a way

1062
00:41:16,240 --> 00:41:17,040
to

1063
00:41:17,040 --> 00:41:19,359
pass legislation on encryption

1064
00:41:19,359 --> 00:41:20,880
but i think this is the current moment

1065
00:41:20,880 --> 00:41:22,720
in this debate is really summed up very

1066
00:41:22,720 --> 00:41:25,760
nicely uh by uh senator ernst a

1067
00:41:25,760 --> 00:41:28,240
republican senator from iowa during a

1068
00:41:28,240 --> 00:41:30,560
hearing in the senate in 2019

1069
00:41:30,560 --> 00:41:33,119
that says uh and she said i think you'd

1070
00:41:33,119 --> 00:41:35,040
uh you'd rather find a solution speaking

1071
00:41:35,040 --> 00:41:37,520
to the technology community rather than

1072
00:41:37,520 --> 00:41:39,760
having congress do it for you um and so

1073
00:41:39,760 --> 00:41:42,000
this is kind of the moment we are at in

1074
00:41:42,000 --> 00:41:43,599
this debate

1075
00:41:43,599 --> 00:41:45,200
um so just to recall some of the

1076
00:41:45,200 --> 00:41:47,280
arguments here um that hopefully people

1077
00:41:47,280 --> 00:41:48,880
are somewhat familiar with but uh law

1078
00:41:48,880 --> 00:41:51,040
enforcement advocates generally point

1079
00:41:51,040 --> 00:41:52,880
out that um they usually have some kind

1080
00:41:52,880 --> 00:41:54,960
of legal uh protection or some kind of

1081
00:41:54,960 --> 00:41:57,760
legal ability to access plain text but

1082
00:41:57,760 --> 00:41:59,839
technology prevents them from actually

1083
00:41:59,839 --> 00:42:01,920
exercising that legal authority right

1084
00:42:01,920 --> 00:42:03,839
and that that therein kind of lies this

1085
00:42:03,839 --> 00:42:06,079
uh this uh tension

1086
00:42:06,079 --> 00:42:07,599
um and in general the way that this goes

1087
00:42:07,599 --> 00:42:08,960
from law enforcement advocates is to say

1088
00:42:08,960 --> 00:42:10,400
well you tech people are smart you

1089
00:42:10,400 --> 00:42:11,839
should go figure out a way to balance

1090
00:42:11,839 --> 00:42:13,440
these two things you know you manage to

1091
00:42:13,440 --> 00:42:14,800
get encryption surely you can get a back

1092
00:42:14,800 --> 00:42:16,480
backdoor into encryption

1093
00:42:16,480 --> 00:42:18,400
um and and in general they point to kind

1094
00:42:18,400 --> 00:42:20,400
of the existence of very high value key

1095
00:42:20,400 --> 00:42:22,240
material that's already kind of in some

1096
00:42:22,240 --> 00:42:24,400
form of escrow so for instance you can

1097
00:42:24,400 --> 00:42:26,480
think about apple's code signing keys uh

1098
00:42:26,480 --> 00:42:28,560
which they have kind of secreted away

1099
00:42:28,560 --> 00:42:29,920
somewhere and they're able to control

1100
00:42:29,920 --> 00:42:31,280
and oftentimes law enforcement will

1101
00:42:31,280 --> 00:42:32,640
point to those keys in particular inside

1102
00:42:32,640 --> 00:42:34,880
c you know how to keep keys uh safe you

1103
00:42:34,880 --> 00:42:36,319
should be able to do this for other

1104
00:42:36,319 --> 00:42:37,839
things as well

1105
00:42:37,839 --> 00:42:39,359
uh privacy advocates on the other hand

1106
00:42:39,359 --> 00:42:41,520
point out that encryption is fundamental

1107
00:42:41,520 --> 00:42:44,480
uh to business to privacy to to you know

1108
00:42:44,480 --> 00:42:46,000
making sure that governments don't abuse

1109
00:42:46,000 --> 00:42:48,319
their power it i can't even list all the

1110
00:42:48,319 --> 00:42:49,760
ways that it's fundamental so i won't

1111
00:42:49,760 --> 00:42:51,760
even try um but also uh kind of on a

1112
00:42:51,760 --> 00:42:53,520
more technical point um these kind of

1113
00:42:53,520 --> 00:42:55,200
backdoor proposals that have been uh

1114
00:42:55,200 --> 00:42:57,200
kind of present for the last 20 30 years

1115
00:42:57,200 --> 00:42:58,960
they're all vulnerable to some kind of

1116
00:42:58,960 --> 00:43:00,560
abuse that is to say a malicious

1117
00:43:00,560 --> 00:43:02,079
operator of the system or perhaps a

1118
00:43:02,079 --> 00:43:03,680
foreign government might get access to

1119
00:43:03,680 --> 00:43:05,200
key material and then use it to spy on

1120
00:43:05,200 --> 00:43:07,119
people either in kind of a dragnet way

1121
00:43:07,119 --> 00:43:09,520
or in a very focused way

1122
00:43:09,520 --> 00:43:11,760
and importantly it's very very very hard

1123
00:43:11,760 --> 00:43:13,680
to detect the catastrophic failure modes

1124
00:43:13,680 --> 00:43:15,440
of these systems that is to say when

1125
00:43:15,440 --> 00:43:17,440
keys get out there's basically no way to

1126
00:43:17,440 --> 00:43:19,119
figure out the system is broken and we

1127
00:43:19,119 --> 00:43:21,119
just have mass surveillance in a purely

1128
00:43:21,119 --> 00:43:23,119
unfettered way

1129
00:43:23,119 --> 00:43:24,720
and so these two sides of the debate

1130
00:43:24,720 --> 00:43:26,560
have done a lot of yelling and there's a

1131
00:43:26,560 --> 00:43:28,560
lot of rhetoric there have been very

1132
00:43:28,560 --> 00:43:30,720
limited proposals at some ways that we

1133
00:43:30,720 --> 00:43:32,560
might be able to bridge the gap here but

1134
00:43:32,560 --> 00:43:33,680
ultimately there have been no

1135
00:43:33,680 --> 00:43:35,200
specifications for systems and

1136
00:43:35,200 --> 00:43:36,240
importantly there have been no

1137
00:43:36,240 --> 00:43:38,160
definitions for what a law enforcement

1138
00:43:38,160 --> 00:43:40,240
access system should do what kind of

1139
00:43:40,240 --> 00:43:42,000
properties it should have

1140
00:43:42,000 --> 00:43:43,520
and this leaves us in like a moment of

1141
00:43:43,520 --> 00:43:45,119
danger that is to say

1142
00:43:45,119 --> 00:43:46,480
governments are currently pushing

1143
00:43:46,480 --> 00:43:48,319
increasingly for deployment of some kind

1144
00:43:48,319 --> 00:43:50,240
of backdoor system but the people who

1145
00:43:50,240 --> 00:43:51,599
are talking about what properties or

1146
00:43:51,599 --> 00:43:53,680
systems should have are not in this room

1147
00:43:53,680 --> 00:43:55,520
right they're people and

1148
00:43:55,520 --> 00:43:57,680
bureaucrat bureaucrats or you know

1149
00:43:57,680 --> 00:43:59,760
people in government who don't think in

1150
00:43:59,760 --> 00:44:01,839
the same adversarial mindset that

1151
00:44:01,839 --> 00:44:04,000
cryptographers are used to

1152
00:44:04,000 --> 00:44:05,599
and so in our work what we try and do is

1153
00:44:05,599 --> 00:44:07,280
try and come up with a baseline

1154
00:44:07,280 --> 00:44:09,200
definition of an abuse resistant law

1155
00:44:09,200 --> 00:44:10,640
enforcement access system this is a

1156
00:44:10,640 --> 00:44:12,319
socially minded definition that we

1157
00:44:12,319 --> 00:44:14,079
formalized with a with a simulation

1158
00:44:14,079 --> 00:44:16,240
based uh notion

1159
00:44:16,240 --> 00:44:17,760
um this i'm gonna from here and i'll

1160
00:44:17,760 --> 00:44:19,359
call this alias because the name is a

1161
00:44:19,359 --> 00:44:21,760
little uh cumbersome um and so we split

1162
00:44:21,760 --> 00:44:23,760
our list into two flavors we have a

1163
00:44:23,760 --> 00:44:25,599
prospective alias and a retrospective

1164
00:44:25,599 --> 00:44:26,640
artist and i'll talk about the

1165
00:44:26,640 --> 00:44:29,200
differences there um in a little bit

1166
00:44:29,200 --> 00:44:31,200
we give constructions for both of these

1167
00:44:31,200 --> 00:44:33,440
different notions uh using cryptographic

1168
00:44:33,440 --> 00:44:35,680
primitives that we're all familiar with

1169
00:44:35,680 --> 00:44:37,599
and then we also give a lower bound that

1170
00:44:37,599 --> 00:44:39,200
kind of demonstrates the difficulty of

1171
00:44:39,200 --> 00:44:40,800
achieving retrospective alias and

1172
00:44:40,800 --> 00:44:42,480
practice and this is oftentimes what law

1173
00:44:42,480 --> 00:44:44,400
enforcement is kind of implicitly asking

1174
00:44:44,400 --> 00:44:47,920
for is this more the stronger notion

1175
00:44:47,920 --> 00:44:50,480
so just to fix the parties um we talk

1176
00:44:50,480 --> 00:44:51,839
about law enforcement as being an

1177
00:44:51,839 --> 00:44:53,200
organization that is in charge of

1178
00:44:53,200 --> 00:44:54,720
collecting evidence and then asking for

1179
00:44:54,720 --> 00:44:57,119
a warrant from uh from a judge a judge

1180
00:44:57,119 --> 00:44:58,319
would then issue a warrant that would

1181
00:44:58,319 --> 00:44:59,839
say okay law enforcement you're able to

1182
00:44:59,839 --> 00:45:01,839
go and access these plain text messages

1183
00:45:01,839 --> 00:45:03,599
um and users are the ones who are using

1184
00:45:03,599 --> 00:45:04,960
their antenna encrypted messaging

1185
00:45:04,960 --> 00:45:07,520
systems choose your favorite one

1186
00:45:07,520 --> 00:45:10,079
um and so what what is this notion of

1187
00:45:10,079 --> 00:45:11,680
abuse resistant law enforcement access

1188
00:45:11,680 --> 00:45:13,200
system so we want a couple of different

1189
00:45:13,200 --> 00:45:15,040
properties that we think are a good

1190
00:45:15,040 --> 00:45:17,119
baseline starting point a good minimum

1191
00:45:17,119 --> 00:45:18,720
for these systems and certainly without

1192
00:45:18,720 --> 00:45:20,000
these systems these should never be

1193
00:45:20,000 --> 00:45:21,440
deployed

1194
00:45:21,440 --> 00:45:22,800
uh sorry without these properties a law

1195
00:45:22,800 --> 00:45:23,920
enforcement access system should never

1196
00:45:23,920 --> 00:45:26,000
be deployed so in particular you want a

1197
00:45:26,000 --> 00:45:27,680
notion of global warrant policies that

1198
00:45:27,680 --> 00:45:29,440
is to say some kind of basic

1199
00:45:29,440 --> 00:45:30,960
understanding of what kind of warrants

1200
00:45:30,960 --> 00:45:32,640
should be allowed in the system and what

1201
00:45:32,640 --> 00:45:33,920
warrants should never be allowed in the

1202
00:45:33,920 --> 00:45:36,079
system we want messages to be secure

1203
00:45:36,079 --> 00:45:37,760
when there is no warrant that says that

1204
00:45:37,760 --> 00:45:39,359
they should be decrypted

1205
00:45:39,359 --> 00:45:40,960
and also kind of one of our key uh

1206
00:45:40,960 --> 00:45:42,640
contributions is some notion of

1207
00:45:42,640 --> 00:45:44,560
transparency and abuse detectability

1208
00:45:44,560 --> 00:45:46,079
that is the system should by

1209
00:45:46,079 --> 00:45:47,839
construction leak some information to

1210
00:45:47,839 --> 00:45:50,000
the public that can simultaneously give

1211
00:45:50,000 --> 00:45:51,280
confidence to the public that these

1212
00:45:51,280 --> 00:45:53,839
things are not being used willy-nilly um

1213
00:45:53,839 --> 00:45:55,599
and also that if they are being kind of

1214
00:45:55,599 --> 00:45:57,359
abused by for instance a foreign

1215
00:45:57,359 --> 00:45:59,440
government that that can be detected by

1216
00:45:59,440 --> 00:46:00,800
law enforcement by the public and then

1217
00:46:00,800 --> 00:46:02,960
the system can be refreshed

1218
00:46:02,960 --> 00:46:04,480
and critically we want cryptographic

1219
00:46:04,480 --> 00:46:06,240
enforcement that is to say we want all

1220
00:46:06,240 --> 00:46:08,000
of these properties to be built into the

1221
00:46:08,000 --> 00:46:09,920
math not by some trust assumption by

1222
00:46:09,920 --> 00:46:10,880
splitting up different parts of the

1223
00:46:10,880 --> 00:46:11,920
government and pretending they don't

1224
00:46:11,920 --> 00:46:13,680
talk to each other

1225
00:46:13,680 --> 00:46:15,440
um so just to give you some examples um

1226
00:46:15,440 --> 00:46:16,640
so what do we mean by global warming

1227
00:46:16,640 --> 00:46:17,839
policies well you can think of for

1228
00:46:17,839 --> 00:46:19,760
instance that all warrants should uh

1229
00:46:19,760 --> 00:46:21,440
list particular individuals so no

1230
00:46:21,440 --> 00:46:23,599
dragnet no kind of global

1231
00:46:23,599 --> 00:46:25,359
uh warrants

1232
00:46:25,359 --> 00:46:26,640
in terms of transparency and abuse

1233
00:46:26,640 --> 00:46:28,400
detectability we might want that the

1234
00:46:28,400 --> 00:46:30,240
system automatically leaks the number of

1235
00:46:30,240 --> 00:46:31,839
warrants that are currently being

1236
00:46:31,839 --> 00:46:33,119
activated that are currently being used

1237
00:46:33,119 --> 00:46:34,640
in the system or we might even want

1238
00:46:34,640 --> 00:46:36,000
something a lot more complicated like

1239
00:46:36,000 --> 00:46:37,520
differentially private statistics being

1240
00:46:37,520 --> 00:46:39,520
targeted

1241
00:46:39,520 --> 00:46:40,960
alternatively and i just want to

1242
00:46:40,960 --> 00:46:42,319
reinforce this right we want a

1243
00:46:42,319 --> 00:46:43,760
cryptographic enforcement that says that

1244
00:46:43,760 --> 00:46:45,839
the use of the backdoor implies in a

1245
00:46:45,839 --> 00:46:47,839
computational sense that all of the

1246
00:46:47,839 --> 00:46:49,599
other policies have been adhered to

1247
00:46:49,599 --> 00:46:51,440
right so there's no kind of uh there's

1248
00:46:51,440 --> 00:46:52,960
not just like we're splitting the keys

1249
00:46:52,960 --> 00:46:55,440
into two shards in the single government

1250
00:46:55,440 --> 00:46:57,200
so in order to do this we introduce

1251
00:46:57,200 --> 00:46:59,119
another party uh the bulletin board or a

1252
00:46:59,119 --> 00:47:01,040
public ledger um and importantly the

1253
00:47:01,040 --> 00:47:03,040
public bulletin board uh has no escrow

1254
00:47:03,040 --> 00:47:05,280
secrets um but everybody can kind of see

1255
00:47:05,280 --> 00:47:06,640
what goes on there

1256
00:47:06,640 --> 00:47:08,640
and we want it to have some kind of

1257
00:47:08,640 --> 00:47:10,640
offline authentication mechanism that is

1258
00:47:10,640 --> 00:47:12,400
to say you can offline verify that

1259
00:47:12,400 --> 00:47:16,079
something has indeed been posted

1260
00:47:16,079 --> 00:47:17,599
um and we consider the setting where

1261
00:47:17,599 --> 00:47:19,200
both the judge and law enforcement is

1262
00:47:19,200 --> 00:47:20,480
corrupt that is to say the worst case

1263
00:47:20,480 --> 00:47:22,480
scenario um where they are you know

1264
00:47:22,480 --> 00:47:24,960
fully colluding

1265
00:47:24,960 --> 00:47:27,119
so here's the basic paradigm of how we

1266
00:47:27,119 --> 00:47:28,559
get abuse resistant law enforcement

1267
00:47:28,559 --> 00:47:30,160
access system so we have our users

1268
00:47:30,160 --> 00:47:31,520
sending each other end-to-end encrypted

1269
00:47:31,520 --> 00:47:33,760
messages and we kind of see these

1270
00:47:33,760 --> 00:47:35,920
messages as having three parts one is a

1271
00:47:35,920 --> 00:47:37,280
first cipher text which is just your

1272
00:47:37,280 --> 00:47:39,280
normal end-to-end encrypted cipher text

1273
00:47:39,280 --> 00:47:41,680
c2 which is intentionally added there in

1274
00:47:41,680 --> 00:47:43,040
order to leak information to law

1275
00:47:43,040 --> 00:47:44,240
enforcement under these correct

1276
00:47:44,240 --> 00:47:46,640
conditions and a proof of consistency

1277
00:47:46,640 --> 00:47:48,960
between these two cipher texts

1278
00:47:48,960 --> 00:47:50,559
and the way an earliest system would be

1279
00:47:50,559 --> 00:47:52,079
used is that first law enforcement go

1280
00:47:52,079 --> 00:47:54,160
and gather evidence request a warrant

1281
00:47:54,160 --> 00:47:56,240
from the judge who would then sign it

1282
00:47:56,240 --> 00:47:58,160
um this signed warrant would then get

1283
00:47:58,160 --> 00:48:00,079
passed through some kind of transparency

1284
00:48:00,079 --> 00:48:01,280
mechanism so there's kind of an

1285
00:48:01,280 --> 00:48:03,440
arbitrary function that would be agreed

1286
00:48:03,440 --> 00:48:05,599
upon by uh you know a general policy

1287
00:48:05,599 --> 00:48:06,640
debate

1288
00:48:06,640 --> 00:48:08,480
this produces some kind of you know

1289
00:48:08,480 --> 00:48:10,880
short uh summary of of uh or

1290
00:48:10,880 --> 00:48:12,640
transparency information that would then

1291
00:48:12,640 --> 00:48:14,800
get posted onto the public ledger

1292
00:48:14,800 --> 00:48:16,640
and once it's on the public ledger this

1293
00:48:16,640 --> 00:48:18,880
thing would immediately act as a key

1294
00:48:18,880 --> 00:48:20,800
right and and uh law enforcement were

1295
00:48:20,800 --> 00:48:22,480
able to use this key in order to decrypt

1296
00:48:22,480 --> 00:48:24,400
messages right and really critically

1297
00:48:24,400 --> 00:48:25,680
here it's actually the posting of the

1298
00:48:25,680 --> 00:48:27,280
transparency information on the ledger

1299
00:48:27,280 --> 00:48:29,440
that turns it into a key it's not simply

1300
00:48:29,440 --> 00:48:31,280
computing the transparency information

1301
00:48:31,280 --> 00:48:32,880
offline but it has to be publicly

1302
00:48:32,880 --> 00:48:34,880
accessible

1303
00:48:34,880 --> 00:48:36,480
good so we consider these two different

1304
00:48:36,480 --> 00:48:38,160
notions uh prospective artists and

1305
00:48:38,160 --> 00:48:39,839
retrospective artists in a prospective

1306
00:48:39,839 --> 00:48:42,079
arlias we want to say that after warrant

1307
00:48:42,079 --> 00:48:43,280
activation

1308
00:48:43,280 --> 00:48:45,040
law enforcement will be able to decrypt

1309
00:48:45,040 --> 00:48:46,720
any messages that is in scope that's

1310
00:48:46,720 --> 00:48:49,280
encrypted after that moment whereas a

1311
00:48:49,280 --> 00:48:51,040
stronger notion of retrospective arias

1312
00:48:51,040 --> 00:48:52,480
will allow decryption of messages that

1313
00:48:52,480 --> 00:48:54,400
were even encrypted in the past

1314
00:48:54,400 --> 00:48:56,240
right so to give a a visualization of

1315
00:48:56,240 --> 00:48:57,839
this so we have kind of this moment of

1316
00:48:57,839 --> 00:49:00,000
warrant activation and a prospective

1317
00:49:00,000 --> 00:49:01,839
alias would be able to decrypt or allow

1318
00:49:01,839 --> 00:49:03,520
law enforcement to decrypt messages that

1319
00:49:03,520 --> 00:49:05,359
were kind of uh encrypted to the right

1320
00:49:05,359 --> 00:49:06,480
of this point that is to say in the

1321
00:49:06,480 --> 00:49:08,400
future at this point

1322
00:49:08,400 --> 00:49:09,760
whereas retrospective all of this would

1323
00:49:09,760 --> 00:49:11,520
allow messages that were uh encrypted at

1324
00:49:11,520 --> 00:49:13,839
any point along this orange line

1325
00:49:13,839 --> 00:49:15,440
um and kind of considering these two

1326
00:49:15,440 --> 00:49:17,200
notions we find that prospective

1327
00:49:17,200 --> 00:49:18,559
relations are actually relatively easy

1328
00:49:18,559 --> 00:49:20,160
to instantiate using cryptographic

1329
00:49:20,160 --> 00:49:22,240
assumptions that while not incredibly

1330
00:49:22,240 --> 00:49:24,160
efficient are actually reasonable in

1331
00:49:24,160 --> 00:49:26,240
practice whereas retrospective arias

1332
00:49:26,240 --> 00:49:28,079
appears to be hard um and in fact we

1333
00:49:28,079 --> 00:49:29,760
kind of give a lower bound proof that

1334
00:49:29,760 --> 00:49:32,400
shows why that might be true

1335
00:49:32,400 --> 00:49:33,920
so i'll just give you a quick flavor of

1336
00:49:33,920 --> 00:49:36,079
how we instantiate our two constructions

1337
00:49:36,079 --> 00:49:37,920
so here's kind of our paradigm

1338
00:49:37,920 --> 00:49:40,079
in the prospective case the transparency

1339
00:49:40,079 --> 00:49:41,599
information is again this output of an

1340
00:49:41,599 --> 00:49:43,520
arbitrary function along with the

1341
00:49:43,520 --> 00:49:45,920
simulation sound music of correctness

1342
00:49:45,920 --> 00:49:47,520
um and then the way to kind of generate

1343
00:49:47,520 --> 00:49:49,119
a key is that in posting this

1344
00:49:49,119 --> 00:49:50,720
transparency information law enforcement

1345
00:49:50,720 --> 00:49:52,480
also generates the first round of a

1346
00:49:52,480 --> 00:49:54,720
non-interactive mpc protocol

1347
00:49:54,720 --> 00:49:57,040
for the functionality basically reveal

1348
00:49:57,040 --> 00:49:58,480
this message if it's covered by the

1349
00:49:58,480 --> 00:49:59,440
warrant

1350
00:49:59,440 --> 00:50:01,200
right and by posting this first message

1351
00:50:01,200 --> 00:50:02,319
all the players are then able to

1352
00:50:02,319 --> 00:50:04,240
download the first message of the nimpc

1353
00:50:04,240 --> 00:50:06,319
protocol and then when they're actually

1354
00:50:06,319 --> 00:50:08,000
computing their messages they have their

1355
00:50:08,000 --> 00:50:10,319
c1 which is our normal ciphertext and c2

1356
00:50:10,319 --> 00:50:12,160
which is the second round of the nimvc

1357
00:50:12,160 --> 00:50:13,680
protocol right and this will allow law

1358
00:50:13,680 --> 00:50:16,160
enforcement to combine their inputs um

1359
00:50:16,160 --> 00:50:17,839
with the second that the c2 in order to

1360
00:50:17,839 --> 00:50:19,040
actually recover the message under the

1361
00:50:19,040 --> 00:50:20,800
correct conditions um additionally we

1362
00:50:20,800 --> 00:50:22,400
have a music of correctness to to make

1363
00:50:22,400 --> 00:50:24,839
sure everything is uh is

1364
00:50:24,839 --> 00:50:27,520
okay um in order to get retrospective

1365
00:50:27,520 --> 00:50:29,920
arias on the other hand um we kind of

1366
00:50:29,920 --> 00:50:31,920
replaced this nimpc with extractable

1367
00:50:31,920 --> 00:50:34,160
witness encryption um and so c2 here is

1368
00:50:34,160 --> 00:50:35,359
an extracurricular witness encryption of

1369
00:50:35,359 --> 00:50:38,319
the plain text but it's kind of a about

1370
00:50:38,319 --> 00:50:39,920
a language that's kind of reasons over

1371
00:50:39,920 --> 00:50:41,040
all the different components of the

1372
00:50:41,040 --> 00:50:42,720
system so it reasons about the warrant

1373
00:50:42,720 --> 00:50:45,119
it reasons about posting um and so

1374
00:50:45,119 --> 00:50:47,839
ultimately the key ends up being um a

1375
00:50:47,839 --> 00:50:50,160
signed warrant by the judge and also a

1376
00:50:50,160 --> 00:50:51,440
proof of publication that the

1377
00:50:51,440 --> 00:50:53,359
appropriate transparency information was

1378
00:50:53,359 --> 00:50:55,599
posted onto the public bulletin board

1379
00:50:55,599 --> 00:50:58,000
and these two things together um would

1380
00:50:58,000 --> 00:51:00,160
allow law enforcement to access uh the

1381
00:51:00,160 --> 00:51:01,040
message

1382
00:51:01,040 --> 00:51:02,720
it's worth noting here that um

1383
00:51:02,720 --> 00:51:04,319
extractable witness encryption is not

1384
00:51:04,319 --> 00:51:05,760
something that i expect that we'll be

1385
00:51:05,760 --> 00:51:07,520
building anytime soon and in general is

1386
00:51:07,520 --> 00:51:09,760
considered impossible

1387
00:51:09,760 --> 00:51:11,520
um so just to quickly uh quickly review

1388
00:51:11,520 --> 00:51:13,599
so we give this socially minded socially

1389
00:51:13,599 --> 00:51:15,359
motivated simulation based definition of

1390
00:51:15,359 --> 00:51:16,880
abuse resistant law enforcement access

1391
00:51:16,880 --> 00:51:18,640
systems that we think is a good minimum

1392
00:51:18,640 --> 00:51:20,839
starting place um for

1393
00:51:20,839 --> 00:51:23,040
uh conversations about law enforcement

1394
00:51:23,040 --> 00:51:25,599
access we split into two flavors

1395
00:51:25,599 --> 00:51:27,680
prospective which is relatively easy

1396
00:51:27,680 --> 00:51:29,920
retrospective which is quite difficult

1397
00:51:29,920 --> 00:51:31,280
i'm gonna give constructions and i

1398
00:51:31,280 --> 00:51:32,640
didn't have time here to talk about this

1399
00:51:32,640 --> 00:51:34,480
uh this lower bound but we actually give

1400
00:51:34,480 --> 00:51:36,400
a show that retrospective earliest

1401
00:51:36,400 --> 00:51:37,520
implies an extracurricular witness

1402
00:51:37,520 --> 00:51:38,960
encryption scheme for a non-trivial

1403
00:51:38,960 --> 00:51:40,000
language

1404
00:51:40,000 --> 00:51:41,520
um and with that thanks very much the

1405
00:51:41,520 --> 00:51:42,940
paper is up on eprint

1406
00:51:42,940 --> 00:51:46,409
[Applause]

1407
00:51:49,200 --> 00:51:51,359
thank you for the talk so uh we have

1408
00:51:51,359 --> 00:51:54,480
time for some questions please

1409
00:51:54,480 --> 00:51:57,119
uh hi thanks for the talk uh i don't

1410
00:51:57,119 --> 00:51:59,440
really see how this would be used in the

1411
00:51:59,440 --> 00:52:01,440
in practice because even if you build

1412
00:52:01,440 --> 00:52:03,520
this type of magic backdoor that cannot

1413
00:52:03,520 --> 00:52:06,160
be abused i guess you would have to

1414
00:52:06,160 --> 00:52:07,280
outlaw

1415
00:52:07,280 --> 00:52:08,800
the other type of cryptography that

1416
00:52:08,800 --> 00:52:11,839
already exists because

1417
00:52:11,839 --> 00:52:13,680
if you create this system the bad guy

1418
00:52:13,680 --> 00:52:15,920
can just use signal or pgp or any open

1419
00:52:15,920 --> 00:52:17,599
source software that already exists so

1420
00:52:17,599 --> 00:52:18,800
what is your

1421
00:52:18,800 --> 00:52:20,720
your your end goal basically yeah

1422
00:52:20,720 --> 00:52:22,640
absolutely no it's a great question um

1423
00:52:22,640 --> 00:52:24,000
and in some sense that is currently

1424
00:52:24,000 --> 00:52:26,000
unavoidable i i we don't really know how

1425
00:52:26,000 --> 00:52:28,000
to outlaw math that's probably a good

1426
00:52:28,000 --> 00:52:30,640
thing um and so you know what we're

1427
00:52:30,640 --> 00:52:31,599
trying to do here is say we're going to

1428
00:52:31,599 --> 00:52:33,599
build a system that is actually what law

1429
00:52:33,599 --> 00:52:35,599
enforcement is asking for right law

1430
00:52:35,599 --> 00:52:37,359
enforcement is not saying everybody stop

1431
00:52:37,359 --> 00:52:39,520
using aes forever rather they're trying

1432
00:52:39,520 --> 00:52:41,520
to force the service providers to build

1433
00:52:41,520 --> 00:52:43,040
back doors into their systems under the

1434
00:52:43,040 --> 00:52:44,640
idea that most people are not going to

1435
00:52:44,640 --> 00:52:46,559
roll their own version of signal and

1436
00:52:46,559 --> 00:52:48,400
distribute it you know but among their

1437
00:52:48,400 --> 00:52:49,760
friends most people will just use

1438
00:52:49,760 --> 00:52:51,359
whatever messaging system is available

1439
00:52:51,359 --> 00:52:52,880
to them and that's really what they want

1440
00:52:52,880 --> 00:52:55,119
access to um so in some sense i totally

1441
00:52:55,119 --> 00:52:56,960
agree with you and we kind of are very

1442
00:52:56,960 --> 00:52:58,720
self-aware that um you know you can

1443
00:52:58,720 --> 00:53:00,559
deploy the system all you want and aes

1444
00:53:00,559 --> 00:53:02,640
isn't going anywhere uh but at the same

1445
00:53:02,640 --> 00:53:04,559
time uh i think it's really critical to

1446
00:53:04,559 --> 00:53:05,760
remember that if we don't start having

1447
00:53:05,760 --> 00:53:07,280
this conversation about what definition

1448
00:53:07,280 --> 00:53:09,520
should look like then we'll get like

1449
00:53:09,520 --> 00:53:11,520
something totally wrong like bonkers

1450
00:53:11,520 --> 00:53:13,040
broken right so that's kind of why we're

1451
00:53:13,040 --> 00:53:14,160
writing this paper is to push the

1452
00:53:14,160 --> 00:53:15,760
conversation forward not because we

1453
00:53:15,760 --> 00:53:17,680
think that we should be deploying nimpc

1454
00:53:17,680 --> 00:53:21,440
for every single message that you send

1455
00:53:29,760 --> 00:53:31,599
hi so uh this is another question not

1456
00:53:31,599 --> 00:53:33,280
really related to the actual

1457
00:53:33,280 --> 00:53:35,280
cryptography but the use case but

1458
00:53:35,280 --> 00:53:36,720
so you say yeah most people are going to

1459
00:53:36,720 --> 00:53:39,040
use the messaging apps that's available

1460
00:53:39,040 --> 00:53:40,880
to them but

1461
00:53:40,880 --> 00:53:42,800
i mean law enforcement and warrants are

1462
00:53:42,800 --> 00:53:45,119
not going to target most people actually

1463
00:53:45,119 --> 00:53:46,240
but

1464
00:53:46,240 --> 00:53:47,119
in the

1465
00:53:47,119 --> 00:53:48,720
hopeful case

1466
00:53:48,720 --> 00:53:50,559
but the people who actually commit

1467
00:53:50,559 --> 00:53:53,200
crimes and those are not most people so

1468
00:53:53,200 --> 00:53:54,960
is there any way to actually

1469
00:53:54,960 --> 00:53:57,119
force every service provider and every

1470
00:53:57,119 --> 00:53:59,040
messaging apps to just

1471
00:53:59,040 --> 00:54:01,119
use this kind of i mean i agree that

1472
00:54:01,119 --> 00:54:02,800
it's a conversation that needs to be had

1473
00:54:02,800 --> 00:54:04,160
but

1474
00:54:04,160 --> 00:54:06,480
has this been taken into consideration

1475
00:54:06,480 --> 00:54:08,160
yeah i mean we actually saw right there

1476
00:54:08,160 --> 00:54:09,359
was uh i can't remember the name of this

1477
00:54:09,359 --> 00:54:11,119
system right now but there was like a

1478
00:54:11,119 --> 00:54:12,880
end-to-end encrypted messaging app that

1479
00:54:12,880 --> 00:54:13,920
was run

1480
00:54:13,920 --> 00:54:16,480
exclusively for criminal organizations

1481
00:54:16,480 --> 00:54:18,640
that the fbi recently i can't remember

1482
00:54:18,640 --> 00:54:20,160
the whole story right but the fbi did

1483
00:54:20,160 --> 00:54:21,599
actually get into it and everybody was

1484
00:54:21,599 --> 00:54:22,960
just sending their messages directly to

1485
00:54:22,960 --> 00:54:24,640
the fbi right which is a great example

1486
00:54:24,640 --> 00:54:26,319
of people yeah are not going to always

1487
00:54:26,319 --> 00:54:28,880
just use uh you know whatever it is um

1488
00:54:28,880 --> 00:54:30,800
that said this is what in some sense law

1489
00:54:30,800 --> 00:54:32,319
enforcement is asking for right now

1490
00:54:32,319 --> 00:54:34,960
right so i i i agree with you i don't

1491
00:54:34,960 --> 00:54:37,040
really you know believe that we're gonna

1492
00:54:37,040 --> 00:54:39,280
ban math

1493
00:54:39,280 --> 00:54:41,760
it could get worse right and and and i

1494
00:54:41,760 --> 00:54:43,760
think that um you know it's a well-taken

1495
00:54:43,760 --> 00:54:45,440
point and i think we should try to hold

1496
00:54:45,440 --> 00:54:48,240
both at the same time

1497
00:54:50,400 --> 00:54:53,280
um if you so if the bulletin board has a

1498
00:54:53,280 --> 00:54:55,119
limited size does this give you a hard

1499
00:54:55,119 --> 00:54:57,520
limit on the number of uh the number of

1500
00:54:57,520 --> 00:54:59,440
warrants that could be out

1501
00:54:59,440 --> 00:55:01,760
uh yeah so we kind of consider the more

1502
00:55:01,760 --> 00:55:03,839
blockchain notion of the bulletin board

1503
00:55:03,839 --> 00:55:05,280
that is kind of constantly growing and

1504
00:55:05,280 --> 00:55:07,760
doesn't really have a bounded size um

1505
00:55:07,760 --> 00:55:09,200
you probably can do some kind of

1506
00:55:09,200 --> 00:55:10,480
compressiveness but yeah if you had a

1507
00:55:10,480 --> 00:55:11,839
limited size bulletin board i imagine

1508
00:55:11,839 --> 00:55:13,599
there would ultimately be some kind of

1509
00:55:13,599 --> 00:55:15,680
some kind of limit there um but you know

1510
00:55:15,680 --> 00:55:17,040
it's upper bound by hopefully at least

1511
00:55:17,040 --> 00:55:18,240
the number of human beings on earth

1512
00:55:18,240 --> 00:55:19,920
which is probably enough storage uh for

1513
00:55:19,920 --> 00:55:21,520
a couple terabytes so hopefully it would

1514
00:55:21,520 --> 00:55:23,920
be okay

1515
00:55:24,720 --> 00:55:25,839
okay so

1516
00:55:25,839 --> 00:55:27,280
one more question do you think congress

1517
00:55:27,280 --> 00:55:28,960
will be satisfied with a solution that

1518
00:55:28,960 --> 00:55:32,599
uses witness encryption

1519
00:55:34,319 --> 00:55:36,480
uh if only it were so um

1520
00:55:36,480 --> 00:55:39,680
i think that

1521
00:55:40,720 --> 00:55:43,359
i i don't know if we're really trying to

1522
00:55:43,359 --> 00:55:45,760
satisfy anybody immediately i think

1523
00:55:45,760 --> 00:55:47,440
ultimately what this paper we hope will

1524
00:55:47,440 --> 00:55:48,720
do is make everybody a little bit

1525
00:55:48,720 --> 00:55:50,559
unsatisfied so that they have to at

1526
00:55:50,559 --> 00:55:53,200
least reckon with the problem um

1527
00:55:53,200 --> 00:55:55,119
i i don't i don't think it'll it'll

1528
00:55:55,119 --> 00:55:57,119
it'll do that but i do think one of the

1529
00:55:57,119 --> 00:55:58,400
really important implications the work

1530
00:55:58,400 --> 00:56:00,160
is showing that there is a difference in

1531
00:56:00,160 --> 00:56:01,680
notion between surveillance that can

1532
00:56:01,680 --> 00:56:03,440
only be done on future messages and

1533
00:56:03,440 --> 00:56:04,640
surveillance that somehow gives you this

1534
00:56:04,640 --> 00:56:06,000
magical notion where you can get past

1535
00:56:06,000 --> 00:56:07,280
messages and future messages and

1536
00:56:07,280 --> 00:56:09,520
everything um and i hope that you know

1537
00:56:09,520 --> 00:56:11,119
if any part of this does actually kind

1538
00:56:11,119 --> 00:56:12,960
of reach lawmakers in a meaningful way

1539
00:56:12,960 --> 00:56:14,240
it's hopefully to divide these two

1540
00:56:14,240 --> 00:56:15,680
things and say one of these problems is

1541
00:56:15,680 --> 00:56:18,000
really really hard the other one well

1542
00:56:18,000 --> 00:56:19,280
let's have a conversation about and i

1543
00:56:19,280 --> 00:56:21,520
hope that that will make its way okay

1544
00:56:21,520 --> 00:56:25,960
that makes sense so thank you very much

1545
00:56:57,359 --> 00:56:58,960
i i think this concludes the session

1546
00:56:58,960 --> 00:57:02,000
because the speaker is not online uh so

1547
00:57:02,000 --> 00:57:05,440
elaine is i didn't see her

1548
00:57:06,319 --> 00:57:08,400
yes i sent an email to her and i don't

1549
00:57:08,400 --> 00:57:12,040
believe she's present

1550
00:57:12,160 --> 00:57:13,760
so thank you again let's thank all the

1551
00:57:13,760 --> 00:57:17,319
speakers again please

