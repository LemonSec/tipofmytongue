1
00:00:04,480 --> 00:00:05,680
will be

2
00:00:05,680 --> 00:00:08,080
giving the talk

3
00:00:08,080 --> 00:00:10,080
it's your stage

4
00:00:10,080 --> 00:00:12,639
okay um thanks dominique so i'm going to

5
00:00:12,639 --> 00:00:13,679
talk about

6
00:00:13,679 --> 00:00:16,320
secured software leasing and

7
00:00:16,320 --> 00:00:18,160
this is enjoying to work with roland de

8
00:00:18,160 --> 00:00:20,640
la placa

9
00:00:20,640 --> 00:00:21,840
oops

10
00:00:21,840 --> 00:00:24,480
so the starting point of our work is the

11
00:00:24,480 --> 00:00:26,960
no cloning theorem of quantum mechanics

12
00:00:26,960 --> 00:00:28,720
which says the following

13
00:00:28,720 --> 00:00:30,560
there does not exist any universal

14
00:00:30,560 --> 00:00:33,840
cloner that given a state uh produces

15
00:00:33,840 --> 00:00:36,559
two copies of the state

16
00:00:36,559 --> 00:00:38,480
while no cloning theorem might come

17
00:00:38,480 --> 00:00:40,160
across as a disadvantage of quantum

18
00:00:40,160 --> 00:00:43,600
mechanics it is quite useful to build

19
00:00:43,600 --> 00:00:45,120
many interesting cryptographic

20
00:00:45,120 --> 00:00:47,599
perimeters

21
00:00:48,480 --> 00:00:50,879
one such popular example is quantum

22
00:00:50,879 --> 00:00:54,559
money which says that you can associate

23
00:00:54,559 --> 00:00:56,879
digital money with some quantum state

24
00:00:56,879 --> 00:00:59,600
such that you cannot produce many copies

25
00:00:59,600 --> 00:01:01,199
of this state

26
00:01:01,199 --> 00:01:02,800
so this is useful for preventing

27
00:01:02,800 --> 00:01:06,400
production of counterfeit digital money

28
00:01:06,400 --> 00:01:09,840
so the snow cloning principle is also

29
00:01:09,840 --> 00:01:11,840
employed in the context of unclonable

30
00:01:11,840 --> 00:01:13,600
encryption

31
00:01:13,600 --> 00:01:16,560
and and one short signatures

32
00:01:16,560 --> 00:01:19,200
and digital signatures

33
00:01:19,200 --> 00:01:21,840
so the topic of this talk is going to be

34
00:01:21,840 --> 00:01:24,320
using this snow cloning theorem

35
00:01:24,320 --> 00:01:25,119
to

36
00:01:25,119 --> 00:01:27,759
prevent illegal distribution of software

37
00:01:27,759 --> 00:01:29,759
um in other words you know we are going

38
00:01:29,759 --> 00:01:31,680
to talk about the notion of quantum copy

39
00:01:31,680 --> 00:01:34,079
protection

40
00:01:34,799 --> 00:01:37,920
um so here is a problem uh

41
00:01:37,920 --> 00:01:40,320
a software vendor you know what is

42
00:01:40,320 --> 00:01:42,399
selling software to the users

43
00:01:42,399 --> 00:01:44,399
and software vendor wants to make sure

44
00:01:44,399 --> 00:01:46,640
that the users don't illegally

45
00:01:46,640 --> 00:01:48,079
distribute

46
00:01:48,079 --> 00:01:51,439
the software to other users

47
00:01:52,159 --> 00:01:53,680
um and

48
00:01:53,680 --> 00:01:55,280
you know if you just want to use

49
00:01:55,280 --> 00:01:56,640
classical technology to solve this

50
00:01:56,640 --> 00:01:58,159
problem it's not going to be possible

51
00:01:58,159 --> 00:01:59,119
because

52
00:01:59,119 --> 00:02:01,200
if the software is represented as a

53
00:02:01,200 --> 00:02:03,759
binary string it can always be copied

54
00:02:03,759 --> 00:02:06,159
um so natural question is whether we can

55
00:02:06,159 --> 00:02:08,479
use the no cloning principle to solve

56
00:02:08,479 --> 00:02:10,959
this problem

57
00:02:11,038 --> 00:02:14,080
and um addinson came up with the notion

58
00:02:14,080 --> 00:02:16,319
of quantum copy protection precisely to

59
00:02:16,319 --> 00:02:19,120
address this problem

60
00:02:19,120 --> 00:02:20,800
so let me explain this notion with an

61
00:02:20,800 --> 00:02:23,120
example so suppose let's say

62
00:02:23,120 --> 00:02:25,440
microsoft wants to

63
00:02:25,440 --> 00:02:27,520
copy protect some software so what it

64
00:02:27,520 --> 00:02:30,560
does is it starts with some

65
00:02:30,560 --> 00:02:33,040
circuit that represents the software it

66
00:02:33,040 --> 00:02:34,720
compiles the circuit into a quantum

67
00:02:34,720 --> 00:02:37,200
state denoted by rho c

68
00:02:37,200 --> 00:02:40,080
and along with this row c it also sends

69
00:02:40,080 --> 00:02:42,720
some evaluation algorithm to the user

70
00:02:42,720 --> 00:02:47,360
so the user can compute c of x on any x

71
00:02:47,360 --> 00:02:50,400
by using the evaluation algorithm eval

72
00:02:50,400 --> 00:02:53,200
and and row z

73
00:02:54,239 --> 00:02:56,000
so this is the functionality of

74
00:02:56,000 --> 00:02:59,040
copy protection in terms of security

75
00:02:59,040 --> 00:03:01,200
what we want is that a user should not

76
00:03:01,200 --> 00:03:02,560
be

77
00:03:02,560 --> 00:03:05,760
able to produce two different copies

78
00:03:05,760 --> 00:03:08,800
such that both these copies uh have the

79
00:03:08,800 --> 00:03:11,519
same functionality as c

80
00:03:11,519 --> 00:03:13,280
so here i'm considering the case where

81
00:03:13,280 --> 00:03:15,760
uh the two states the user

82
00:03:15,760 --> 00:03:18,560
uh produces are unentangled

83
00:03:18,560 --> 00:03:19,360
but

84
00:03:19,360 --> 00:03:21,200
you can suitably formalize the notion

85
00:03:21,200 --> 00:03:22,159
where

86
00:03:22,159 --> 00:03:25,120
the output states are entangled

87
00:03:25,120 --> 00:03:27,120
so we want the user

88
00:03:27,120 --> 00:03:29,040
uh the success probability of the user

89
00:03:29,040 --> 00:03:30,720
to produce two states is that both of

90
00:03:30,720 --> 00:03:33,200
them compute the original circuit

91
00:03:33,200 --> 00:03:34,720
this success probability should be

92
00:03:34,720 --> 00:03:37,280
negligible

93
00:03:38,080 --> 00:03:39,040
okay

94
00:03:39,040 --> 00:03:40,400
and

95
00:03:40,400 --> 00:03:42,560
you can think about many unclonable

96
00:03:42,560 --> 00:03:44,080
primitives like controllable encryption

97
00:03:44,080 --> 00:03:46,239
one time signatures and so on so all of

98
00:03:46,239 --> 00:03:47,599
them can be thought of as copy

99
00:03:47,599 --> 00:03:51,518
protecting very specific functionalities

100
00:03:52,879 --> 00:03:54,720
okay so what what do we know about copy

101
00:03:54,720 --> 00:03:57,599
protection um so so far

102
00:03:57,599 --> 00:03:59,200
we know how to construct copy protection

103
00:03:59,200 --> 00:04:01,040
for unlearnable functions in the oracle

104
00:04:01,040 --> 00:04:03,280
model quantum oracle model recently it

105
00:04:03,280 --> 00:04:06,319
was improved to classical oracle model

106
00:04:06,319 --> 00:04:09,200
and we also know how to construct copy

107
00:04:09,200 --> 00:04:11,120
protection for

108
00:04:11,120 --> 00:04:12,560
very very specific class of functions

109
00:04:12,560 --> 00:04:14,879
like point functions in the play model

110
00:04:14,879 --> 00:04:17,839
and however this construction was also

111
00:04:17,839 --> 00:04:20,560
um just heuristically proven to be um it

112
00:04:20,560 --> 00:04:23,360
was heuristic meaning that

113
00:04:23,360 --> 00:04:24,080
he

114
00:04:24,080 --> 00:04:25,759
it was not known how to base it on a

115
00:04:25,759 --> 00:04:29,680
concrete cryptographic assumption

116
00:04:29,680 --> 00:04:31,360
um so natural question to ask is whether

117
00:04:31,360 --> 00:04:32,960
you can construct copy protection for

118
00:04:32,960 --> 00:04:34,639
all vulnerable functions and this was

119
00:04:34,639 --> 00:04:37,440
open since aaronson's work

120
00:04:37,440 --> 00:04:39,759
and in this work we show that

121
00:04:39,759 --> 00:04:41,199
the answer is no

122
00:04:41,199 --> 00:04:43,040
and this is a conditional result because

123
00:04:43,040 --> 00:04:44,400
we are going to base it on some

124
00:04:44,400 --> 00:04:47,440
cryptographic assumptions

125
00:04:47,680 --> 00:04:49,919
so we show that copy protection does not

126
00:04:49,919 --> 00:04:51,759
exist for all available functions

127
00:04:51,759 --> 00:04:54,479
assuming uh fully morphic encryption for

128
00:04:54,479 --> 00:04:58,160
quantum computations and also lw is hard

129
00:04:58,160 --> 00:05:02,560
against quantum polynomial algorithms

130
00:05:03,680 --> 00:05:05,600
so specifically we identify a class of

131
00:05:05,600 --> 00:05:08,320
functions that is quantum and learnable

132
00:05:08,320 --> 00:05:11,120
and then we show that if i give you a

133
00:05:11,120 --> 00:05:13,520
state that computes this function then

134
00:05:13,520 --> 00:05:15,039
you can create multiple copies of this

135
00:05:15,039 --> 00:05:17,360
function

136
00:05:18,400 --> 00:05:20,880
okay so we showed that for all interval

137
00:05:20,880 --> 00:05:22,720
functions it's

138
00:05:22,720 --> 00:05:25,680
it's impossible so a natural question to

139
00:05:25,680 --> 00:05:27,600
ask is whether you can identify maybe

140
00:05:27,600 --> 00:05:29,520
simpler class of functions and try to

141
00:05:29,520 --> 00:05:32,160
construct copy protection for them

142
00:05:32,160 --> 00:05:34,240
uh for example we can focus on evasiv

143
00:05:34,240 --> 00:05:36,400
functions

144
00:05:36,400 --> 00:05:38,560
and this seems like a very hard problem

145
00:05:38,560 --> 00:05:39,759
we don't know how to construct copy

146
00:05:39,759 --> 00:05:41,680
protection for evasiv functions

147
00:05:41,680 --> 00:05:44,240
so instead what we are going to identify

148
00:05:44,240 --> 00:05:45,280
is that

149
00:05:45,280 --> 00:05:46,800
there are settings where you don't need

150
00:05:46,800 --> 00:05:49,199
the full power of copy protection

151
00:05:49,199 --> 00:05:52,479
and you can settle with weaker notions

152
00:05:52,479 --> 00:05:54,160
specifically you can consider a weaker

153
00:05:54,160 --> 00:05:56,000
setting where the evaluation algorithm

154
00:05:56,000 --> 00:05:59,840
is fixed right and and the adversary

155
00:05:59,840 --> 00:06:01,840
has to output a state with respect to

156
00:06:01,840 --> 00:06:03,440
that that works with the same evaluation

157
00:06:03,440 --> 00:06:05,520
algorithm as dictated by the software

158
00:06:05,520 --> 00:06:07,840
vendor

159
00:06:08,080 --> 00:06:09,440
so towards this we are going to

160
00:06:09,440 --> 00:06:11,360
introduce the notion of secure software

161
00:06:11,360 --> 00:06:12,560
leasing

162
00:06:12,560 --> 00:06:13,680
um

163
00:06:13,680 --> 00:06:16,880
so there are two security uh notions

164
00:06:16,880 --> 00:06:19,120
associated with secure software leasing

165
00:06:19,120 --> 00:06:20,560
in terms of functionality by the way

166
00:06:20,560 --> 00:06:21,919
system software listing is the same as

167
00:06:21,919 --> 00:06:23,919
copy protection so what is different is

168
00:06:23,919 --> 00:06:25,919
in the security notions which i'm which

169
00:06:25,919 --> 00:06:27,759
i'm going to talk about now

170
00:06:27,759 --> 00:06:29,360
uh so there are two security notions you

171
00:06:29,360 --> 00:06:31,440
can consider one is infinite term lesser

172
00:06:31,440 --> 00:06:33,440
security which says that the adversary

173
00:06:33,440 --> 00:06:35,520
cannot produce two copies that both

174
00:06:35,520 --> 00:06:38,479
compute c with respect to eval

175
00:06:38,479 --> 00:06:40,560
and the second one is finite term listed

176
00:06:40,560 --> 00:06:42,240
security which says that

177
00:06:42,240 --> 00:06:44,800
uh after the adversary returns back the

178
00:06:44,800 --> 00:06:46,240
copy he had

179
00:06:46,240 --> 00:06:48,479
um that was given to him by the software

180
00:06:48,479 --> 00:06:49,919
vendor

181
00:06:49,919 --> 00:06:51,520
he should not be able to produce another

182
00:06:51,520 --> 00:06:54,000
copy that still computes the same

183
00:06:54,000 --> 00:06:57,280
circuit c as before

184
00:07:00,400 --> 00:07:02,479
and what we show is that even finite

185
00:07:02,479 --> 00:07:04,319
term ssl

186
00:07:04,319 --> 00:07:06,160
doesn't exist for all available

187
00:07:06,160 --> 00:07:08,080
functions and this is based on the same

188
00:07:08,080 --> 00:07:10,479
assumptions as before

189
00:07:10,479 --> 00:07:12,639
and we show that in terms of positive

190
00:07:12,639 --> 00:07:14,800
result we show that infinite term ssl

191
00:07:14,800 --> 00:07:17,680
axis for evasive functions

192
00:07:17,680 --> 00:07:20,160
um and this is based on

193
00:07:20,160 --> 00:07:21,520
uh

194
00:07:21,520 --> 00:07:24,880
subexponential hardness of qlw

195
00:07:24,880 --> 00:07:26,880
post quantum and distribution of fiscal

196
00:07:26,880 --> 00:07:28,400
and post quantum input hiding

197
00:07:28,400 --> 00:07:30,960
infrastructures so these two are

198
00:07:30,960 --> 00:07:32,720
some notions of program specification

199
00:07:32,720 --> 00:07:36,400
that i'm not going to talk about now

200
00:07:37,039 --> 00:07:40,080
okay so in the remaining um

201
00:07:40,080 --> 00:07:44,280
i don't know how much time i have

202
00:07:45,520 --> 00:07:46,560
okay

203
00:07:46,560 --> 00:07:48,319
um so in the remaining time i have i'm

204
00:07:48,319 --> 00:07:49,599
going to just quickly highlight the

205
00:07:49,599 --> 00:07:51,280
challenges in the impossibility result

206
00:07:51,280 --> 00:07:53,360
and also the positive result

207
00:07:53,360 --> 00:07:54,800
um

208
00:07:54,800 --> 00:07:56,240
so

209
00:07:56,240 --> 00:07:58,319
the main insight that we are going to

210
00:07:58,319 --> 00:07:59,120
draw

211
00:07:59,120 --> 00:08:01,759
uh from in the impossibility result is

212
00:08:01,759 --> 00:08:04,639
from the similar result of barack at all

213
00:08:04,639 --> 00:08:07,360
who showed that um there exists a class

214
00:08:07,360 --> 00:08:08,800
of functions there exists a class of

215
00:08:08,800 --> 00:08:11,120
circuits such that if i give a class if

216
00:08:11,120 --> 00:08:13,199
i give a physical description of

217
00:08:13,199 --> 00:08:14,160
this

218
00:08:14,160 --> 00:08:16,800
of any

219
00:08:16,800 --> 00:08:18,240
physical description that computes a

220
00:08:18,240 --> 00:08:20,560
circuit then you can extract some secret

221
00:08:20,560 --> 00:08:22,400
s out of it

222
00:08:22,400 --> 00:08:24,319
on the other hand if i give black box

223
00:08:24,319 --> 00:08:26,720
access to the circuit c then you'll not

224
00:08:26,720 --> 00:08:30,160
be able to recover the secret s

225
00:08:33,120 --> 00:08:36,399
and why are these two useful for ruling

226
00:08:36,399 --> 00:08:37,839
out copy protection

227
00:08:37,839 --> 00:08:38,640
so

228
00:08:38,640 --> 00:08:40,399
you can look at bullet one

229
00:08:40,399 --> 00:08:41,360
and

230
00:08:41,360 --> 00:08:43,039
maybe we can use the ideas there to

231
00:08:43,039 --> 00:08:45,279
recover another implementation of c

232
00:08:45,279 --> 00:08:48,000
right so instead of recording a secret

233
00:08:48,000 --> 00:08:49,519
maybe if you can tweak the techniques

234
00:08:49,519 --> 00:08:51,600
and get another implementation of c we

235
00:08:51,600 --> 00:08:52,720
are done

236
00:08:52,720 --> 00:08:54,560
right and from bullet to maybe we can

237
00:08:54,560 --> 00:08:56,399
use it to prove unknown ability of the

238
00:08:56,399 --> 00:08:58,560
circuit right so it seems like these two

239
00:08:58,560 --> 00:09:00,560
um

240
00:09:00,560 --> 00:09:02,800
bullet points uh given to us by barack

241
00:09:02,800 --> 00:09:05,760
at all seems useful

242
00:09:06,480 --> 00:09:08,480
okay but there are some challenges to

243
00:09:08,480 --> 00:09:10,800
sort of make this work in the quantum

244
00:09:10,800 --> 00:09:13,360
setting um there are two challenges the

245
00:09:13,360 --> 00:09:15,040
first challenge is that

246
00:09:15,040 --> 00:09:18,240
uh in order to rule out copy protection

247
00:09:18,240 --> 00:09:20,560
uh can you

248
00:09:20,560 --> 00:09:22,959
try to can you please try to write wrap

249
00:09:22,959 --> 00:09:24,399
up yeah yeah i'm

250
00:09:24,399 --> 00:09:26,560
this this will be my last slide

251
00:09:26,560 --> 00:09:29,600
um so the the main challenge is that you

252
00:09:29,600 --> 00:09:30,800
know given an

253
00:09:30,800 --> 00:09:32,320
implementation of c

254
00:09:32,320 --> 00:09:33,839
you you need to recover not just a

255
00:09:33,839 --> 00:09:35,120
secret but

256
00:09:35,120 --> 00:09:36,959
another implementation of c right so

257
00:09:36,959 --> 00:09:38,959
that's that's the first challenge the

258
00:09:38,959 --> 00:09:40,640
second challenge is that

259
00:09:40,640 --> 00:09:41,600
um

260
00:09:41,600 --> 00:09:43,360
implicitly in the baroque at all

261
00:09:43,360 --> 00:09:45,760
argument you're using the fact that

262
00:09:45,760 --> 00:09:48,560
uh the evaluator can make many copies of

263
00:09:48,560 --> 00:09:50,320
the software

264
00:09:50,320 --> 00:09:52,080
and in the quantum setting this is sort

265
00:09:52,080 --> 00:09:53,519
of hard to do because of the no cloning

266
00:09:53,519 --> 00:09:55,120
theorem

267
00:09:55,120 --> 00:09:58,640
so with this i'll conclude

268
00:10:05,440 --> 00:10:06,320
okay

269
00:10:06,320 --> 00:10:08,880
thank you thank you for the talk

270
00:10:08,880 --> 00:10:11,040
um i think we have to proceed to the

271
00:10:11,040 --> 00:10:12,720
next speaker right away because we are

272
00:10:12,720 --> 00:10:14,959
slightly behind time

273
00:10:14,959 --> 00:10:16,240
um so

274
00:10:16,240 --> 00:10:19,519
alex is um do you have your slides yeah

275
00:10:19,519 --> 00:10:21,519
already there okay thank you for your

276
00:10:21,519 --> 00:10:23,600
talk

277
00:10:23,600 --> 00:10:25,519
so the next

278
00:10:25,519 --> 00:10:28,959
the next talk will be given in uh in

279
00:10:28,959 --> 00:10:30,000
person

280
00:10:30,000 --> 00:10:33,279
by alex grillo it is about oblivious

281
00:10:33,279 --> 00:10:38,240
transfer is in mini q crypt by alex

282
00:10:39,440 --> 00:10:42,600
we know

283
00:10:46,480 --> 00:10:48,880
okay

284
00:10:52,640 --> 00:10:55,959
oh where's

285
00:11:01,600 --> 00:11:02,800
um

286
00:11:02,800 --> 00:11:04,399
okay thanks for uh for an introduction

287
00:11:04,399 --> 00:11:07,440
dominique so yeah as the title says that

288
00:11:07,440 --> 00:11:09,440
we are interested in having quantum

289
00:11:09,440 --> 00:11:11,920
particles for uh obliques transfer

290
00:11:11,920 --> 00:11:13,760
and let me just quickly recall what our

291
00:11:13,760 --> 00:11:15,920
oblivious transfer primitive is so we

292
00:11:15,920 --> 00:11:17,360
have two parties the sender and the

293
00:11:17,360 --> 00:11:19,839
receiver the sender chooses two messages

294
00:11:19,839 --> 00:11:21,360
and zero enemy one

295
00:11:21,360 --> 00:11:23,360
while the receiver chooses a bit b

296
00:11:23,360 --> 00:11:25,360
and learns the message mb and nothing

297
00:11:25,360 --> 00:11:27,279
else

298
00:11:27,279 --> 00:11:29,600
and it is well known that ot is a

299
00:11:29,600 --> 00:11:31,760
fundamental in cryptography and in

300
00:11:31,760 --> 00:11:33,360
particular it uh

301
00:11:33,360 --> 00:11:35,200
implies general multiparty quantum

302
00:11:35,200 --> 00:11:36,720
computation or general multi-party

303
00:11:36,720 --> 00:11:39,279
computation

304
00:11:40,560 --> 00:11:43,040
we know that classically ot can be built

305
00:11:43,040 --> 00:11:44,800
from public encryption

306
00:11:44,800 --> 00:11:46,720
in general but uh

307
00:11:46,720 --> 00:11:48,800
the result of imperialism heritage tells

308
00:11:48,800 --> 00:11:51,360
us that ot can we don't expect ot to be

309
00:11:51,360 --> 00:11:52,880
built from warning functions in the

310
00:11:52,880 --> 00:11:54,959
classical world

311
00:11:54,959 --> 00:11:57,440
but currently around 30 years ago crepe

312
00:11:57,440 --> 00:11:59,760
and kilian and then bbcs they proposed

313
00:11:59,760 --> 00:12:02,000
protocols uh for ot quantum products for

314
00:12:02,000 --> 00:12:02,800
rt

315
00:12:02,800 --> 00:12:05,360
uh which are based on commitment schemes

316
00:12:05,360 --> 00:12:08,079
so this gave us hope that they would be

317
00:12:08,079 --> 00:12:10,720
that would be able to have a quantum ot

318
00:12:10,720 --> 00:12:12,320
from any functions

319
00:12:12,320 --> 00:12:14,079
but later results that prove the

320
00:12:14,079 --> 00:12:15,839
rigorous security of these protocols

321
00:12:15,839 --> 00:12:17,920
actually show that we require a strong

322
00:12:17,920 --> 00:12:19,680
security notion for the commitment

323
00:12:19,680 --> 00:12:20,639
schemes

324
00:12:20,639 --> 00:12:22,720
and this uh commitment skills with

325
00:12:22,720 --> 00:12:25,680
strong security guarantees

326
00:12:25,680 --> 00:12:27,120
we don't know how to construct them

327
00:12:27,120 --> 00:12:31,279
classically only from running functions

328
00:12:32,160 --> 00:12:34,320
the main technical result

329
00:12:34,320 --> 00:12:35,920
of our paper is to show that these

330
00:12:35,920 --> 00:12:37,680
commitment schemes with strong security

331
00:12:37,680 --> 00:12:40,000
guarantees they can build quantumly from

332
00:12:40,000 --> 00:12:42,399
online functions and in particular this

333
00:12:42,399 --> 00:12:44,880
tells us that

334
00:12:46,399 --> 00:12:47,200
that

335
00:12:47,200 --> 00:12:49,519
oops

336
00:12:50,800 --> 00:12:53,040
you

337
00:13:00,399 --> 00:13:02,880
oh perfect okay great so in particular

338
00:13:02,880 --> 00:13:06,079
this shows that ot and in general uh npc

339
00:13:06,079 --> 00:13:08,079
uh there are mini q crypt which is uh

340
00:13:08,079 --> 00:13:09,839
like in parallel to in pagliazzo's five

341
00:13:09,839 --> 00:13:13,200
world is the world where you have uh

342
00:13:13,200 --> 00:13:14,959
access to quantum resources and water

343
00:13:14,959 --> 00:13:17,439
functions

344
00:13:18,839 --> 00:13:22,000
and uh i'll try to give an overview of

345
00:13:22,000 --> 00:13:23,519
how we can achieve these strong

346
00:13:23,519 --> 00:13:26,000
commitment schemes and in particular ot

347
00:13:26,000 --> 00:13:27,920
from quantum 1 a functions

348
00:13:27,920 --> 00:13:30,560
and to start with we have used the

349
00:13:30,560 --> 00:13:32,079
narwhals commitment skin for example

350
00:13:32,079 --> 00:13:34,480
with zero knowledge proofs and we show

351
00:13:34,480 --> 00:13:36,079
that we can build the echovocal

352
00:13:36,079 --> 00:13:38,399
commitments

353
00:13:38,399 --> 00:13:40,560
and then using these vocal commitments

354
00:13:40,560 --> 00:13:42,639
in in this particular this quantum

355
00:13:42,639 --> 00:13:45,120
products for ot already gives us some

356
00:13:45,120 --> 00:13:47,519
weak notion of ot where it's ot with

357
00:13:47,519 --> 00:13:50,639
unbounded simulation

358
00:13:51,440 --> 00:13:54,160
then we can use this mother simulated

359
00:13:54,160 --> 00:13:56,160
simulator ot together with garbo

360
00:13:56,160 --> 00:13:58,639
circuits to construct what we call

361
00:13:58,639 --> 00:14:00,399
unbounded simulator verifiable

362
00:14:00,399 --> 00:14:03,279
conditional disclosure of secrets

363
00:14:03,279 --> 00:14:04,880
and finally from this amanda simulator

364
00:14:04,880 --> 00:14:07,680
vcds we can show that we can construct

365
00:14:07,680 --> 00:14:09,760
extra commitments and therefore ot and

366
00:14:09,760 --> 00:14:11,440
mpc

367
00:14:11,440 --> 00:14:13,360
and the main i think that the main

368
00:14:13,360 --> 00:14:15,839
part of our result is uh having this

369
00:14:15,839 --> 00:14:17,920
verifiable cds and that's what i focus

370
00:14:17,920 --> 00:14:20,240
right now and uh yeah i'll leave the

371
00:14:20,240 --> 00:14:22,079
other parts for for the long talk or the

372
00:14:22,079 --> 00:14:24,399
paper

373
00:14:25,199 --> 00:14:27,279
so what's the conditional disclosure of

374
00:14:27,279 --> 00:14:29,440
secrets uh primitive again it's a

375
00:14:29,440 --> 00:14:31,279
two-party primitive where we have a

376
00:14:31,279 --> 00:14:33,920
sender who chooses an input to an np

377
00:14:33,920 --> 00:14:35,199
relation

378
00:14:35,199 --> 00:14:37,920
and a message m

379
00:14:37,920 --> 00:14:41,519
the receiver then uh chooses a witness

380
00:14:41,519 --> 00:14:43,600
from a candidate witness for this np

381
00:14:43,600 --> 00:14:44,399
relation

382
00:14:44,399 --> 00:14:46,000
and then receives back some message m

383
00:14:46,000 --> 00:14:46,959
prime

384
00:14:46,959 --> 00:14:48,720
and what we want is that m prime is

385
00:14:48,720 --> 00:14:50,399
equal to the message m chosen by the

386
00:14:50,399 --> 00:14:52,560
sender if and only if

387
00:14:52,560 --> 00:14:56,320
x and w belongs to this np relation

388
00:14:56,320 --> 00:14:58,959
or the the receiver receives a bart

389
00:14:58,959 --> 00:15:02,000
otherwise or burp

390
00:15:02,560 --> 00:15:05,279
uh we need an extra property from these

391
00:15:05,279 --> 00:15:07,839
uh cds protocols uh in particular we

392
00:15:07,839 --> 00:15:10,000
need it to be verifiable

393
00:15:10,000 --> 00:15:10,959
so

394
00:15:10,959 --> 00:15:12,240
uh we say that the protocol is

395
00:15:12,240 --> 00:15:14,160
verifiable first if it implements this

396
00:15:14,160 --> 00:15:14,959
uh

397
00:15:14,959 --> 00:15:18,240
ideal cds functionality

398
00:15:18,240 --> 00:15:21,120
and on top of that we want that the

399
00:15:21,120 --> 00:15:23,360
classical transcript of the protocol

400
00:15:23,360 --> 00:15:25,680
somehow binds the message m chosen by

401
00:15:25,680 --> 00:15:28,719
the by the server

402
00:15:29,440 --> 00:15:31,040
so in more details what we want is that

403
00:15:31,040 --> 00:15:33,040
there exists a verification algorithm

404
00:15:33,040 --> 00:15:35,440
verb such that the proof

405
00:15:35,440 --> 00:15:38,480
sorry the sender can output a proof pi

406
00:15:38,480 --> 00:15:40,560
such that in the honest case uh this

407
00:15:40,560 --> 00:15:42,160
verification procedure passes on the

408
00:15:42,160 --> 00:15:44,399
classical transcript of the protocol the

409
00:15:44,399 --> 00:15:46,480
the input and input relation the message

410
00:15:46,480 --> 00:15:48,639
chosen by the by the sender and is proof

411
00:15:48,639 --> 00:15:51,440
by output by the sender as well

412
00:15:51,440 --> 00:15:52,480
and

413
00:15:52,480 --> 00:15:54,320
what like the stronger requirement that

414
00:15:54,320 --> 00:15:56,160
we want is that uh this is binding

415
00:15:56,160 --> 00:15:57,839
showing that uh for every malicious

416
00:15:57,839 --> 00:15:58,720
sender

417
00:15:58,720 --> 00:16:00,720
they cannot choose uh a message and a

418
00:16:00,720 --> 00:16:02,959
proof that pass the verification

419
00:16:02,959 --> 00:16:05,519
algorithm if this message wouldn't be

420
00:16:05,519 --> 00:16:07,920
the one that would be open for for for

421
00:16:07,920 --> 00:16:10,000
the verifier

422
00:16:10,000 --> 00:16:13,920
sorry for the uh receiver

423
00:16:14,800 --> 00:16:16,000
and uh

424
00:16:16,000 --> 00:16:18,720
this is just a quick overview of how we

425
00:16:18,720 --> 00:16:21,680
use this uh abandoned simulator vcds for

426
00:16:21,680 --> 00:16:24,000
extra extractable commitments

427
00:16:24,000 --> 00:16:26,079
and the main point is that we can uh

428
00:16:26,079 --> 00:16:29,279
like that we can set up a uh we can use

429
00:16:29,279 --> 00:16:30,800
a

430
00:16:30,800 --> 00:16:32,800
chapter setup phase where the receiver

431
00:16:32,800 --> 00:16:35,199
commits to zero and then proves uh proof

432
00:16:35,199 --> 00:16:38,480
that it uh she committed to zero

433
00:16:38,480 --> 00:16:40,160
and then the committer and the receiver

434
00:16:40,160 --> 00:16:42,639
they run this vcds protocol for the

435
00:16:42,639 --> 00:16:44,240
language where you have commitments of

436
00:16:44,240 --> 00:16:45,199
one

437
00:16:45,199 --> 00:16:46,639
and the randomness used to the

438
00:16:46,639 --> 00:16:48,560
commitment of one

439
00:16:48,560 --> 00:16:50,959
and in this here the the idea is that

440
00:16:50,959 --> 00:16:52,959
the committer will choose the message m

441
00:16:52,959 --> 00:16:54,480
that will be committed later in the

442
00:16:54,480 --> 00:16:55,519
protocol

443
00:16:55,519 --> 00:16:57,040
and the receiver

444
00:16:57,040 --> 00:16:58,800
should give the randomness for the

445
00:16:58,800 --> 00:17:00,320
commitment of zero that she sent in the

446
00:17:00,320 --> 00:17:02,240
first message

447
00:17:02,240 --> 00:17:04,319
but uh as you see like in the real

448
00:17:04,319 --> 00:17:06,640
protocol the receiver committed to zero

449
00:17:06,640 --> 00:17:10,240
so she cannot give a uh run on sr that

450
00:17:10,240 --> 00:17:11,439
uh

451
00:17:11,439 --> 00:17:13,599
is a valid witness for his for this

452
00:17:13,599 --> 00:17:14,959
language

453
00:17:14,959 --> 00:17:17,119
uh and therefore in the real protocol

454
00:17:17,119 --> 00:17:19,280
the receiver won't learn the message m

455
00:17:19,280 --> 00:17:21,839
and we have the binding sorry the hiding

456
00:17:21,839 --> 00:17:25,359
property of the component scheme

457
00:17:25,760 --> 00:17:27,280
on the other hand when you consider the

458
00:17:27,280 --> 00:17:30,799
extractor uh we this extractor can then

459
00:17:30,799 --> 00:17:32,799
rewind so we can use the zero now

460
00:17:32,799 --> 00:17:33,919
simulation

461
00:17:33,919 --> 00:17:36,400
and change the commitment one

462
00:17:36,400 --> 00:17:38,080
and in this case

463
00:17:38,080 --> 00:17:40,640
running the vcds protocol the extractor

464
00:17:40,640 --> 00:17:42,880
will be able to learn the message

465
00:17:42,880 --> 00:17:47,840
from the honest run of the vcds protocol

466
00:17:50,080 --> 00:17:52,400
just to conclude so what we show the

467
00:17:52,400 --> 00:17:55,120
main uh the main message of our result

468
00:17:55,120 --> 00:17:57,360
is that we can have a secure multiplier

469
00:17:57,360 --> 00:18:00,559
computation uh in eq crypt so in the

470
00:18:00,559 --> 00:18:03,520
world with quantum and warning functions

471
00:18:03,520 --> 00:18:04,640
and uh

472
00:18:04,640 --> 00:18:07,039
moreover we can show that if you have a

473
00:18:07,039 --> 00:18:09,440
access to a crs then we can achieve this

474
00:18:09,440 --> 00:18:11,200
particle in constant rounds and that

475
00:18:11,200 --> 00:18:14,919
it's usually secure

476
00:18:15,440 --> 00:18:17,760
uh i think the main open problems that

477
00:18:17,760 --> 00:18:19,280
are left is okay what else can we do

478
00:18:19,280 --> 00:18:21,200
with mini q crips so what else can we do

479
00:18:21,200 --> 00:18:23,360
for money functions in the quantum world

480
00:18:23,360 --> 00:18:25,679
or we can go a step further can you do

481
00:18:25,679 --> 00:18:27,280
more things with access to public

482
00:18:27,280 --> 00:18:29,360
encryption in the content world

483
00:18:29,360 --> 00:18:30,480
or on the other hand can improve

484
00:18:30,480 --> 00:18:32,000
separations can you show that some

485
00:18:32,000 --> 00:18:34,720
primitives cannot be implemented uh in

486
00:18:34,720 --> 00:18:36,799
either of these worlds

487
00:18:36,799 --> 00:18:38,000
and with that i'd like to thank your

488
00:18:38,000 --> 00:18:41,000
attention

489
00:18:44,559 --> 00:18:46,080
thank you very much

490
00:18:46,080 --> 00:18:48,799
any questions

491
00:18:53,679 --> 00:18:55,520
a bit early in the morning i guess i

492
00:18:55,520 --> 00:18:56,960
have one question

493
00:18:56,960 --> 00:19:00,080
um do you have any uh conjectures about

494
00:19:00,080 --> 00:19:01,919
separations

495
00:19:01,919 --> 00:19:03,760
like any candidates that you think might

496
00:19:03,760 --> 00:19:07,600
not be one way functionable

497
00:19:07,600 --> 00:19:09,039
uh

498
00:19:09,039 --> 00:19:11,919
okay one conjecture for example is a

499
00:19:11,919 --> 00:19:13,200
quantum distribution of classical

500
00:19:13,200 --> 00:19:15,600
communication

501
00:19:15,600 --> 00:19:17,440
so this is a conjecture that it does not

502
00:19:17,440 --> 00:19:19,679
in mini grip for example

503
00:19:19,679 --> 00:19:20,960
and you can also think about i don't

504
00:19:20,960 --> 00:19:23,679
know this very strong crypto like a

505
00:19:23,679 --> 00:19:25,200
fuscation or everything it should not be

506
00:19:25,200 --> 00:19:27,039
able to done with uh be able to be

507
00:19:27,039 --> 00:19:29,440
implemented quantum even with a weaker

508
00:19:29,440 --> 00:19:32,320
you know classical crypto primitives

509
00:19:32,320 --> 00:19:36,600
okay cool thank you very much

510
00:19:44,640 --> 00:19:48,320
and uh now we can come to the next talk

511
00:19:48,320 --> 00:19:50,799
i guess i need to

512
00:19:50,799 --> 00:19:55,720
hide the slides first

513
00:20:08,240 --> 00:20:11,760
where is it where is the artist

514
00:20:12,080 --> 00:20:14,159
oh down there yeah okay

515
00:20:14,159 --> 00:20:15,760
thank you

516
00:20:15,760 --> 00:20:18,640
okay so uh on our side we seem to be

517
00:20:18,640 --> 00:20:20,960
ready now for

518
00:20:20,960 --> 00:20:23,760
the next talk so the next talk is a

519
00:20:23,760 --> 00:20:26,720
security analysis of quantum lightning

520
00:20:26,720 --> 00:20:29,280
by bhaskar roberts

521
00:20:29,280 --> 00:20:33,000
are you online

522
00:20:34,880 --> 00:20:37,919
i did not see them

523
00:20:41,440 --> 00:20:45,280
okay um so i guess that we then switch

524
00:20:45,280 --> 00:20:46,720
the

525
00:20:46,720 --> 00:20:49,120
talks around maybe if we can

526
00:20:49,120 --> 00:20:51,200
and see whether bhaskar will

527
00:20:51,200 --> 00:20:52,320
um

528
00:20:52,320 --> 00:20:54,080
appear again

529
00:20:54,080 --> 00:20:57,039
um so how about uh

530
00:20:57,039 --> 00:20:58,720
takashi are you

531
00:20:58,720 --> 00:21:02,799
online and ready

532
00:21:02,799 --> 00:21:05,760
yeah sure then can i start

533
00:21:05,760 --> 00:21:07,679
yeah so i will i will announce uh

534
00:21:07,679 --> 00:21:09,760
announce the talk and then you can start

535
00:21:09,760 --> 00:21:11,280
okay

536
00:21:11,280 --> 00:21:14,640
so um the next talk will be by

537
00:21:14,640 --> 00:21:17,840
uh will be on classical versus quantum

538
00:21:17,840 --> 00:21:19,840
random oracles

539
00:21:19,840 --> 00:21:23,200
by takashi yamakawa and mark zhandri and

540
00:21:23,200 --> 00:21:25,440
takashi will be giving the talk

541
00:21:25,440 --> 00:21:27,760
it's your stage please

542
00:21:27,760 --> 00:21:29,679
and thank you for the introduction

543
00:21:29,679 --> 00:21:31,919
so i'm takashi and i will talk about

544
00:21:31,919 --> 00:21:34,799
classical versus quantum realm oracles

545
00:21:34,799 --> 00:21:37,679
and the random organ model rom is a

546
00:21:37,679 --> 00:21:39,280
widely used

547
00:21:39,280 --> 00:21:42,080
model of cryptographic hash functions or

548
00:21:42,080 --> 00:21:44,159
in the model some random function is

549
00:21:44,159 --> 00:21:45,919
chosen at random at the beginning of

550
00:21:45,919 --> 00:21:48,240
some security game and other battery is

551
00:21:48,240 --> 00:21:51,280
allowed to make uh queries to the random

552
00:21:51,280 --> 00:21:53,760
function in a black box manner and this

553
00:21:53,760 --> 00:21:55,840
model is widely used for analyzing

554
00:21:55,840 --> 00:21:57,520
various kind of

555
00:21:57,520 --> 00:22:00,320
practical cryptographic schemes

556
00:22:00,320 --> 00:22:02,799
and the quantum random model qram is the

557
00:22:02,799 --> 00:22:05,120
quantum version of the rom uh the

558
00:22:05,120 --> 00:22:07,280
difference is that adversary is allowed

559
00:22:07,280 --> 00:22:09,280
to make quantum courage to the random

560
00:22:09,280 --> 00:22:11,280
oracle and the reason why we should

561
00:22:11,280 --> 00:22:13,840
consider such a model is that uh in the

562
00:22:13,840 --> 00:22:16,480
real world we replace random oracle with

563
00:22:16,480 --> 00:22:19,919
real hash functions and if adversary has

564
00:22:19,919 --> 00:22:22,400
a quantum computer then he can use

565
00:22:22,400 --> 00:22:24,960
the quantum computer to evaluate uh the

566
00:22:24,960 --> 00:22:27,200
run other hash function and this

567
00:22:27,200 --> 00:22:29,120
corresponds to

568
00:22:29,120 --> 00:22:31,440
quantum access to the random oracle and

569
00:22:31,440 --> 00:22:33,679
so we should configure q rom for

570
00:22:33,679 --> 00:22:37,200
ensuring positive insecurity

571
00:22:37,200 --> 00:22:39,760
and after the introduction of the qram

572
00:22:39,760 --> 00:22:42,559
in 2011 there have been a lot of study

573
00:22:42,559 --> 00:22:45,280
about the qram and now we know that

574
00:22:45,280 --> 00:22:47,919
almost all major protocols in the rom

575
00:22:47,919 --> 00:22:49,919
are actually also proven secure in the

576
00:22:49,919 --> 00:22:51,039
queue run

577
00:22:51,039 --> 00:22:53,600
and now there is no known scheme that is

578
00:22:53,600 --> 00:22:55,600
secure in the wrong but insecure in the

579
00:22:55,600 --> 00:22:58,320
queue rom before this work so it is

580
00:22:58,320 --> 00:23:00,880
natural to ask the foreign question does

581
00:23:00,880 --> 00:23:03,120
security in the rom imply security in

582
00:23:03,120 --> 00:23:04,400
the queue rom

583
00:23:04,400 --> 00:23:06,559
and if this is true this is very nice

584
00:23:06,559 --> 00:23:08,159
because

585
00:23:08,159 --> 00:23:09,760
this means that we do not need to

586
00:23:09,760 --> 00:23:11,840
consider qram and we can just focus in

587
00:23:11,840 --> 00:23:13,679
the rom which is much simpler than the

588
00:23:13,679 --> 00:23:16,240
qram

589
00:23:16,480 --> 00:23:19,360
and this is our results so

590
00:23:19,360 --> 00:23:21,840
we give both positive and negative

591
00:23:21,840 --> 00:23:24,000
results negative answers to the question

592
00:23:24,000 --> 00:23:26,080
the first is the negative answer which

593
00:23:26,080 --> 00:23:28,240
says that which gives the first

594
00:23:28,240 --> 00:23:30,960
separation between the rom and the q rom

595
00:23:30,960 --> 00:23:33,440
and especially we give contractions of

596
00:23:33,440 --> 00:23:35,760
pke and signature schemes that are

597
00:23:35,760 --> 00:23:38,080
secure in the wrong but insecure in the

598
00:23:38,080 --> 00:23:39,200
queue rom

599
00:23:39,200 --> 00:23:41,520
and i remarked that a similar result was

600
00:23:41,520 --> 00:23:43,440
also shown in a concurrent work by john

601
00:23:43,440 --> 00:23:44,720
ether

602
00:23:44,720 --> 00:23:47,520
and our second result is a positive

603
00:23:47,520 --> 00:23:48,559
result

604
00:23:48,559 --> 00:23:50,720
we give some rom to q rom lifting

605
00:23:50,720 --> 00:23:54,480
theorems under some conditions

606
00:23:54,720 --> 00:23:56,480
so let me explain more about our

607
00:23:56,480 --> 00:23:59,200
separation results uh so forgiving the

608
00:23:59,200 --> 00:24:01,600
separation we introduce a new primitive

609
00:24:01,600 --> 00:24:04,000
which we call proof of quantum access to

610
00:24:04,000 --> 00:24:06,400
random oracle poqro

611
00:24:06,400 --> 00:24:08,480
so this is an interactive protocol

612
00:24:08,480 --> 00:24:10,960
between quantum improver and classical

613
00:24:10,960 --> 00:24:15,039
verifier where the prover uh proves that

614
00:24:15,039 --> 00:24:16,880
it has their quantum access to the

615
00:24:16,880 --> 00:24:19,200
random oracle and one may think that

616
00:24:19,200 --> 00:24:21,679
this is similar to the notion of proof

617
00:24:21,679 --> 00:24:23,840
of contentness introduced by brackets

618
00:24:23,840 --> 00:24:26,640
guitar but the difference is that

619
00:24:26,640 --> 00:24:29,520
we require soundness against even

620
00:24:29,520 --> 00:24:31,600
quantum cheating

621
00:24:31,600 --> 00:24:34,240
long as it only has classical oracle

622
00:24:34,240 --> 00:24:35,200
access

623
00:24:35,200 --> 00:24:36,000
and

624
00:24:36,000 --> 00:24:37,679
on the other hand in the poq the

625
00:24:37,679 --> 00:24:40,000
hardness is only required to hold

626
00:24:40,000 --> 00:24:41,039
against

627
00:24:41,039 --> 00:24:42,880
completely classical cheat improvement

628
00:24:42,880 --> 00:24:46,000
so this is the difference

629
00:24:46,000 --> 00:24:49,120
and we give two constructions of poqro

630
00:24:49,120 --> 00:24:51,440
the first is privately verifiable

631
00:24:51,440 --> 00:24:54,559
construction from awe and actually this

632
00:24:54,559 --> 00:24:56,960
is exactly the same construction as the

633
00:24:56,960 --> 00:24:59,679
proof of contaminants by blockade

634
00:24:59,679 --> 00:25:00,960
so our

635
00:25:00,960 --> 00:25:03,760
uh contribution here is the observation

636
00:25:03,760 --> 00:25:05,520
that the protocol actually also

637
00:25:05,520 --> 00:25:08,559
satisfies soundness as poqro

638
00:25:08,559 --> 00:25:10,880
and by using such a private review via

639
00:25:10,880 --> 00:25:13,760
poqro we can get separations

640
00:25:13,760 --> 00:25:17,600
for uf cma signatures and in cc pke

641
00:25:17,600 --> 00:25:19,760
by just embedding the verification of

642
00:25:19,760 --> 00:25:21,840
poqro into

643
00:25:21,840 --> 00:25:24,960
a signing or decryption algorithm of

644
00:25:24,960 --> 00:25:26,000
these

645
00:25:26,000 --> 00:25:27,200
primitives

646
00:25:27,200 --> 00:25:31,039
and our second construction of poqro is

647
00:25:31,039 --> 00:25:33,600
relative to some artificial graphical

648
00:25:33,600 --> 00:25:36,000
oracle inspired by the recent work on

649
00:25:36,000 --> 00:25:38,720
one shot signature by almost itar

650
00:25:38,720 --> 00:25:40,159
and the nice feature of this

651
00:25:40,159 --> 00:25:43,679
construction is its public verifiability

652
00:25:43,679 --> 00:25:44,960
and by using

653
00:25:44,960 --> 00:25:46,720
public verifiability we can get

654
00:25:46,720 --> 00:25:49,919
separations uh for weaker security

655
00:25:49,919 --> 00:25:53,600
notions for signatures and pke

656
00:25:53,600 --> 00:25:55,760
and finally let me explain our listing

657
00:25:55,760 --> 00:25:58,799
theorem so for our listing term we

658
00:25:58,799 --> 00:26:00,080
consider

659
00:26:00,080 --> 00:26:01,200
the foreign

660
00:26:01,200 --> 00:26:04,159
type of games so that in this game

661
00:26:04,159 --> 00:26:06,159
we consider interaction between quantum

662
00:26:06,159 --> 00:26:08,799
advisory and classical challenges

663
00:26:08,799 --> 00:26:11,279
and uh suppose that uh

664
00:26:11,279 --> 00:26:14,480
challenger makes at most k queries

665
00:26:14,480 --> 00:26:16,720
then our listing theorem states the

666
00:26:16,720 --> 00:26:20,400
following so for any a making q quantum

667
00:26:20,400 --> 00:26:23,200
queries there exists b making k

668
00:26:23,200 --> 00:26:25,440
classical queries such that this

669
00:26:25,440 --> 00:26:28,720
inequality holds and especially when k

670
00:26:28,720 --> 00:26:32,240
is constant this factor is polynomial

671
00:26:32,240 --> 00:26:36,240
therefore we can say this so if b the

672
00:26:36,240 --> 00:26:38,640
winning probability is negligible

673
00:26:38,640 --> 00:26:41,440
then uh aid winning probability is also

674
00:26:41,440 --> 00:26:44,320
negligible and in particular b only

675
00:26:44,320 --> 00:26:46,799
makes classical queries so this can be

676
00:26:46,799 --> 00:26:49,520
seen as a security in the rom and this

677
00:26:49,520 --> 00:26:51,279
can be seen as the security in the queue

678
00:26:51,279 --> 00:26:54,480
rom so this is why we call this term as

679
00:26:54,480 --> 00:26:57,840
a lifting theorem from rom to rom

680
00:26:57,840 --> 00:27:00,799
and let me remark that this theorem is

681
00:27:00,799 --> 00:27:03,039
meaningful only for such type games

682
00:27:03,039 --> 00:27:05,520
because for indistinguishability based

683
00:27:05,520 --> 00:27:09,039
applications uh adversary's advantage is

684
00:27:09,039 --> 00:27:11,520
this probability minus one half rather

685
00:27:11,520 --> 00:27:14,240
than this probability itself and so this

686
00:27:14,240 --> 00:27:16,080
theorem is not meaningful for

687
00:27:16,080 --> 00:27:16,760
uh

688
00:27:16,760 --> 00:27:18,480
indistinguishability-based application

689
00:27:18,480 --> 00:27:20,960
and this is why we focus on such type

690
00:27:20,960 --> 00:27:23,360
games through this theorem

691
00:27:23,360 --> 00:27:25,200
and that's it thank you for your

692
00:27:25,200 --> 00:27:27,600
attention

693
00:27:33,600 --> 00:27:35,279
thank you for your talk are there any

694
00:27:35,279 --> 00:27:38,320
questions from the audience

695
00:27:42,320 --> 00:27:45,360
um i have one question could you um just

696
00:27:45,360 --> 00:27:48,159
for um kind of clearly give an example

697
00:27:48,159 --> 00:27:50,480
of a search tape game like a normal a

698
00:27:50,480 --> 00:27:53,360
natural cryptographic um

699
00:27:53,360 --> 00:27:56,240
uh security notion for example

700
00:27:56,240 --> 00:27:58,080
that could be lifted

701
00:27:58,080 --> 00:28:01,520
uh for example the soundness of

702
00:28:01,520 --> 00:28:05,039
their marriage can be captured

703
00:28:05,039 --> 00:28:08,840
okay thank you very much

704
00:28:16,960 --> 00:28:19,760
so quickly checking whether busker robot

705
00:28:19,760 --> 00:28:20,960
has shown up

706
00:28:20,960 --> 00:28:23,520
in the meantime

707
00:28:23,520 --> 00:28:26,080
i do not see him and i sent him an email

708
00:28:26,080 --> 00:28:27,919
i believe that he's at uc berkeley so

709
00:28:27,919 --> 00:28:30,399
it's after midnight he may have

710
00:28:30,399 --> 00:28:32,320
fallen asleep

711
00:28:32,320 --> 00:28:34,159
yeah or it could be technical connection

712
00:28:34,159 --> 00:28:36,480
problems so let's honor them they would

713
00:28:36,480 --> 00:28:38,159
probably look at the email well let's

714
00:28:38,159 --> 00:28:39,760
check at the very end of the session

715
00:28:39,760 --> 00:28:40,960
again

716
00:28:40,960 --> 00:28:43,200
so

717
00:28:47,039 --> 00:28:49,600
yes i'm here can you hear me

718
00:28:49,600 --> 00:28:51,200
yes i can hear you i will announce your

719
00:28:51,200 --> 00:28:52,080
talk

720
00:28:52,080 --> 00:28:53,919
so okay um

721
00:28:53,919 --> 00:28:55,200
maybe i'll

722
00:28:55,200 --> 00:28:57,679
share my screen

723
00:28:57,679 --> 00:29:00,559
yes please do so the next talk will be

724
00:29:00,559 --> 00:29:02,720
on the compressed oracle technique and

725
00:29:02,720 --> 00:29:05,520
post quantum security of proofs of

726
00:29:05,520 --> 00:29:07,760
sequential work by climbing

727
00:29:07,760 --> 00:29:08,880
chang

728
00:29:08,880 --> 00:29:10,559
search fair

729
00:29:10,559 --> 00:29:13,559
houston

730
00:29:17,039 --> 00:29:18,720
it's your stage please

731
00:29:18,720 --> 00:29:20,880
thanks for the introduction uh can you

732
00:29:20,880 --> 00:29:23,679
see my slides

733
00:29:24,320 --> 00:29:25,440
yes

734
00:29:25,440 --> 00:29:26,480
okay

735
00:29:26,480 --> 00:29:29,200
um hi everyone i'm i'm yo

736
00:29:29,200 --> 00:29:31,039
today i'm talking about work on the

737
00:29:31,039 --> 00:29:32,720
compressed circle technique and

738
00:29:32,720 --> 00:29:34,159
post-content security of proof of

739
00:29:34,159 --> 00:29:35,919
sequential work

740
00:29:35,919 --> 00:29:37,600
and as mentioned earlier this is a joint

741
00:29:37,600 --> 00:29:39,600
work with kaimy jones that fear myself

742
00:29:39,600 --> 00:29:41,919
and tightening up

743
00:29:41,919 --> 00:29:43,039
so first we're going to talk about the

744
00:29:43,039 --> 00:29:45,039
content random oracle model

745
00:29:45,039 --> 00:29:46,799
the renault model is a common way to

746
00:29:46,799 --> 00:29:48,720
analyze classical cryptography scheme

747
00:29:48,720 --> 00:29:50,480
they use a hash function

748
00:29:50,480 --> 00:29:52,640
here hash functions are idealized into

749
00:29:52,640 --> 00:29:54,880
uniformly simple function that everyone

750
00:29:54,880 --> 00:29:57,200
has access to

751
00:29:57,200 --> 00:29:59,039
we are also putting this into the

752
00:29:59,039 --> 00:30:00,640
content settings where now we can make

753
00:30:00,640 --> 00:30:03,840
the query in superposition

754
00:30:03,840 --> 00:30:05,760
also we understand of parallel queries

755
00:30:05,760 --> 00:30:07,600
in which multiple data points can be

756
00:30:07,600 --> 00:30:11,039
asked for a single query round

757
00:30:11,039 --> 00:30:12,480
a typical example problem in the

758
00:30:12,480 --> 00:30:14,080
rendering model is a zero premium

759
00:30:14,080 --> 00:30:16,240
problem which asks to find the input

760
00:30:16,240 --> 00:30:18,320
that is mapped to zero and it is well

761
00:30:18,320 --> 00:30:20,080
studied in both classical content

762
00:30:20,080 --> 00:30:23,039
settings

763
00:30:23,039 --> 00:30:24,240
so

764
00:30:24,240 --> 00:30:26,559
what have we done we offer a useful

765
00:30:26,559 --> 00:30:29,440
framework for analyzing such problems

766
00:30:29,440 --> 00:30:31,039
in parallel query container analytical

767
00:30:31,039 --> 00:30:32,159
model

768
00:30:32,159 --> 00:30:34,000
using our framework one can prove

769
00:30:34,000 --> 00:30:36,159
content hardness of these problems using

770
00:30:36,159 --> 00:30:38,320
classical reasoning

771
00:30:38,320 --> 00:30:41,039
and this works by recycling probability

772
00:30:41,039 --> 00:30:42,880
bound from classical proof and lifting

773
00:30:42,880 --> 00:30:45,120
then into quantum proof if in suitable

774
00:30:45,120 --> 00:30:47,439
form

775
00:30:47,520 --> 00:30:49,919
in pendant and concurrent work blocky at

776
00:30:49,919 --> 00:30:52,399
l also managed to

777
00:30:52,399 --> 00:30:54,480
tackle one of our application the

778
00:30:54,480 --> 00:30:57,440
post-content security of psw scheme or

779
00:30:57,440 --> 00:30:59,679
proof of sequential work scheme proposed

780
00:30:59,679 --> 00:31:04,039
by cohen and biatra in 2018

781
00:31:04,159 --> 00:31:06,480
um however their proof is tailored to

782
00:31:06,480 --> 00:31:08,320
the specific problem whereas our

783
00:31:08,320 --> 00:31:10,320
framework is generally more applicable

784
00:31:10,320 --> 00:31:13,440
into solving various example problems

785
00:31:13,440 --> 00:31:14,960
and also to understand their proof a

786
00:31:14,960 --> 00:31:16,880
certain amount of content content

787
00:31:16,880 --> 00:31:18,960
information science is required well

788
00:31:18,960 --> 00:31:21,440
assuming our framework is correct

789
00:31:21,440 --> 00:31:23,120
verifying our proof is just a matter of

790
00:31:23,120 --> 00:31:26,320
purely classical reasoning

791
00:31:26,880 --> 00:31:28,640
so next let's talk about the lazy

792
00:31:28,640 --> 00:31:29,679
sampling

793
00:31:29,679 --> 00:31:32,640
which is useful in analyzing

794
00:31:32,640 --> 00:31:35,279
heart problems in the random model

795
00:31:35,279 --> 00:31:37,440
instead of sampling the entire random

796
00:31:37,440 --> 00:31:39,360
oracle in in the beginning

797
00:31:39,360 --> 00:31:41,200
we can simulate the rendering using a

798
00:31:41,200 --> 00:31:42,960
database that is initially empty and

799
00:31:42,960 --> 00:31:45,360
whenever an entry being queried we

800
00:31:45,360 --> 00:31:46,880
sample the fresh randomness for that

801
00:31:46,880 --> 00:31:49,200
entry

802
00:31:49,279 --> 00:31:51,519
for analyzing the zero principle problem

803
00:31:51,519 --> 00:31:54,080
we observe that if after

804
00:31:54,080 --> 00:31:56,000
like two queries the obtained database

805
00:31:56,000 --> 00:31:58,000
contain no zero within the

806
00:31:58,000 --> 00:32:00,399
sum of its entry then the adversary is

807
00:32:00,399 --> 00:32:01,919
unlikely to output

808
00:32:01,919 --> 00:32:03,679
one zero primes neither

809
00:32:03,679 --> 00:32:05,440
and this can be formally written down as

810
00:32:05,440 --> 00:32:08,480
infinitely formal bound

811
00:32:08,960 --> 00:32:12,399
bring this into the constant settings

812
00:32:13,279 --> 00:32:15,360
now the database are in the contents

813
00:32:15,360 --> 00:32:17,360
represent state and we have similar

814
00:32:17,360 --> 00:32:19,919
observation except with different

815
00:32:19,919 --> 00:32:22,720
formal bound here

816
00:32:22,720 --> 00:32:25,200
so next let's uh see the classical

817
00:32:25,200 --> 00:32:27,679
analysis of the zero point problem and

818
00:32:27,679 --> 00:32:29,279
keep in mind that our goal is to

819
00:32:29,279 --> 00:32:31,279
eventually lift them into content proof

820
00:32:31,279 --> 00:32:33,360
using our framework

821
00:32:33,360 --> 00:32:34,799
so how do we

822
00:32:34,799 --> 00:32:37,440
for example show that

823
00:32:37,440 --> 00:32:39,120
to bound the probability of database

824
00:32:39,120 --> 00:32:40,640
having a zero

825
00:32:40,640 --> 00:32:43,360
first we observe that if after q queries

826
00:32:43,360 --> 00:32:44,880
could scratch queries the database

827
00:32:44,880 --> 00:32:47,600
acquires a zero within some of its entry

828
00:32:47,600 --> 00:32:49,919
then the zero must occur within one of

829
00:32:49,919 --> 00:32:50,640
the

830
00:32:50,640 --> 00:32:52,559
sequential queries we can therefore

831
00:32:52,559 --> 00:32:54,240
bound the desired probability by summing

832
00:32:54,240 --> 00:32:56,559
together this bracket notation we called

833
00:32:56,559 --> 00:32:59,600
the transition capacities

834
00:32:59,600 --> 00:33:01,440
and second we observed that if after one

835
00:33:01,440 --> 00:33:03,760
pair of queries the database acquired a

836
00:33:03,760 --> 00:33:06,000
zero within some of its entry

837
00:33:06,000 --> 00:33:08,320
then that zero must occur one of the

838
00:33:08,320 --> 00:33:10,559
credit entries

839
00:33:10,559 --> 00:33:12,000
print things together we can now bound

840
00:33:12,000 --> 00:33:15,039
the desired probability

841
00:33:15,039 --> 00:33:16,720
and for the second observation we are

842
00:33:16,720 --> 00:33:18,480
using the technology that the transition

843
00:33:18,480 --> 00:33:20,880
the transition of database shifting from

844
00:33:20,880 --> 00:33:22,640
not having a zero within some of its

845
00:33:22,640 --> 00:33:25,039
entry to having a zero is recognizable

846
00:33:25,039 --> 00:33:27,360
by local properties zero and we refer to

847
00:33:27,360 --> 00:33:29,360
this property zero being local because

848
00:33:29,360 --> 00:33:30,960
it only depends on one entry of the

849
00:33:30,960 --> 00:33:33,200
database

850
00:33:33,200 --> 00:33:35,360
and bringing this into higher level

851
00:33:35,360 --> 00:33:37,679
we have the font recipe which first we

852
00:33:37,679 --> 00:33:39,279
decompose the probability and the sum of

853
00:33:39,279 --> 00:33:41,279
transition capacities and second

854
00:33:41,279 --> 00:33:42,640
and we bound the changing capacities

855
00:33:42,640 --> 00:33:44,480
using probability of local properties

856
00:33:44,480 --> 00:33:46,640
that recognize the transition

857
00:33:46,640 --> 00:33:48,720
and yeah in our framework we have pretty

858
00:33:48,720 --> 00:33:50,399
much the same recipe except now we're in

859
00:33:50,399 --> 00:33:51,679
the quantum settings it's a different

860
00:33:51,679 --> 00:33:53,840
definition of the transient capacities

861
00:33:53,840 --> 00:33:56,480
and corresponding adjusted formulas

862
00:33:56,480 --> 00:33:58,159
but the point here is it's just a matter

863
00:33:58,159 --> 00:33:59,760
of recycling probability bound from

864
00:33:59,760 --> 00:34:01,600
classical proof and plug into our

865
00:34:01,600 --> 00:34:04,720
formulas to obtain quantum bound

866
00:34:04,720 --> 00:34:06,399
and we can finally

867
00:34:06,399 --> 00:34:08,320
lift the classical analysis into content

868
00:34:08,320 --> 00:34:09,760
analysis

869
00:34:09,760 --> 00:34:11,199
and the pattern here is we don't need to

870
00:34:11,199 --> 00:34:13,359
understand the definition of capacities

871
00:34:13,359 --> 00:34:15,599
we can simply lift them into

872
00:34:15,599 --> 00:34:17,599
uh content proof

873
00:34:17,599 --> 00:34:19,199
by using the same recipe we obtain

874
00:34:19,199 --> 00:34:20,639
several additional results including

875
00:34:20,639 --> 00:34:22,480
hardness for creation finding problems

876
00:34:22,480 --> 00:34:25,760
and for teaching finding problems

877
00:34:25,760 --> 00:34:27,440
as a main application we also give the

878
00:34:27,440 --> 00:34:28,879
post quantum security proof of the

879
00:34:28,879 --> 00:34:30,879
non-interactive variant of psf steam

880
00:34:30,879 --> 00:34:34,800
proposed by culinary truck in 2018.

881
00:34:34,800 --> 00:34:36,960
so

882
00:34:36,960 --> 00:34:40,079
the ps3 scheme is a useful cryptographic

883
00:34:40,079 --> 00:34:42,719
primitive in the context of blockchain

884
00:34:42,719 --> 00:34:44,239
in which prover tries to convince the

885
00:34:44,239 --> 00:34:46,159
verifier that a certain amount of

886
00:34:46,159 --> 00:34:47,679
sequential computation work has been

887
00:34:47,679 --> 00:34:49,760
done by prover and

888
00:34:49,760 --> 00:34:51,679
but here the situation is more

889
00:34:51,679 --> 00:34:53,599
complicated because we need to consider

890
00:34:53,599 --> 00:34:55,760
intertwined core problems within the ps4

891
00:34:55,760 --> 00:34:57,200
scheme

892
00:34:57,200 --> 00:34:59,359
so we need tools to decompose these

893
00:34:59,359 --> 00:35:01,119
complicated transient capacities into

894
00:35:01,119 --> 00:35:02,480
simpler forms

895
00:35:02,480 --> 00:35:04,079
that's why we are given the calculus for

896
00:35:04,079 --> 00:35:05,920
transient capacities and these allow us

897
00:35:05,920 --> 00:35:07,839
to work with these capacities on an

898
00:35:07,839 --> 00:35:09,280
abstract level without understanding the

899
00:35:09,280 --> 00:35:12,400
definition and from which we can have a

900
00:35:12,400 --> 00:35:14,320
simpler form of transition capacities

901
00:35:14,320 --> 00:35:15,520
and use of

902
00:35:15,520 --> 00:35:19,599
our previously mentioned recipe

903
00:35:19,599 --> 00:35:22,000
for the rest of the analysis

904
00:35:22,000 --> 00:35:23,599
so finally let's recap on our

905
00:35:23,599 --> 00:35:26,480
contribution we offer a useful framework

906
00:35:26,480 --> 00:35:28,800
that whenever applicable help us prove

907
00:35:28,800 --> 00:35:31,240
very complexity bound in the

908
00:35:31,240 --> 00:35:34,240
parallelogram model and this works by

909
00:35:34,240 --> 00:35:37,200
um pretty classical reasoning that lived

910
00:35:37,200 --> 00:35:39,040
uh classical proof in the quantum proof

911
00:35:39,040 --> 00:35:41,920
if in simple form

912
00:35:41,920 --> 00:35:43,760
yeah and finally we

913
00:35:43,760 --> 00:35:45,920
encouraged the audience to refer to our

914
00:35:45,920 --> 00:35:47,599
paper for more detail

915
00:35:47,599 --> 00:35:50,720
and we thanks for listening

916
00:35:53,359 --> 00:35:55,440
thank you very much for your talk

917
00:35:55,440 --> 00:35:57,599
are there any questions in the audience

918
00:35:57,599 --> 00:36:00,160
yes we have a question um

919
00:36:00,160 --> 00:36:03,118
please find a microphone

920
00:36:04,400 --> 00:36:06,640
so are these techniques also applicable

921
00:36:06,640 --> 00:36:09,200
when a protocol is using multiple

922
00:36:09,200 --> 00:36:10,800
qrams

923
00:36:10,800 --> 00:36:13,760
so let's say there are two qrams um in a

924
00:36:13,760 --> 00:36:16,880
protocol so

925
00:36:17,760 --> 00:36:20,560
um we are in the setting of

926
00:36:20,560 --> 00:36:22,880
where we only have one kilogram but if

927
00:36:22,880 --> 00:36:24,720
you want to have

928
00:36:24,720 --> 00:36:27,760
i believe you can simply sample

929
00:36:27,760 --> 00:36:29,599
different prefixes in the rendering

930
00:36:29,599 --> 00:36:31,359
model

931
00:36:31,359 --> 00:36:33,040
does that make sense

932
00:36:33,040 --> 00:36:35,359
right right and is there like a

933
00:36:35,359 --> 00:36:37,280
composition theorem between multiple

934
00:36:37,280 --> 00:36:38,480
neurons

935
00:36:38,480 --> 00:36:41,440
that um we can use

936
00:36:41,440 --> 00:36:42,960
um the

937
00:36:42,960 --> 00:36:46,240
the original formulation of zendry

938
00:36:46,240 --> 00:36:49,520
does not i believe does not include

939
00:36:49,520 --> 00:36:52,720
multiple random code maybe

940
00:36:52,720 --> 00:36:55,280
so but potentially i think it could be

941
00:36:55,280 --> 00:36:57,680
because

942
00:36:57,680 --> 00:37:00,160
yeah since it's just a matter of

943
00:37:00,160 --> 00:37:01,520
uh

944
00:37:01,520 --> 00:37:03,680
sampling different prefixes

945
00:37:03,680 --> 00:37:06,079
for the renault

946
00:37:06,079 --> 00:37:07,440
does that make sense

947
00:37:07,440 --> 00:37:11,040
yeah okay yeah thanks

948
00:37:11,520 --> 00:37:14,880
okay any other questions

949
00:37:15,040 --> 00:37:16,640
uh i just noticed that i never checked

950
00:37:16,640 --> 00:37:19,440
whether there are questions uh online is

951
00:37:19,440 --> 00:37:21,680
there someone who would remind me of

952
00:37:21,680 --> 00:37:22,960
that

953
00:37:22,960 --> 00:37:24,720
is there someone checking online

954
00:37:24,720 --> 00:37:26,400
questions

955
00:37:26,400 --> 00:37:29,920
because i don't have access to them

956
00:37:30,320 --> 00:37:32,240
i have looked there are no questions in

957
00:37:32,240 --> 00:37:35,520
the zulu chat and none on the zoom chat

958
00:37:35,520 --> 00:37:37,440
okay will you let me know if there are

959
00:37:37,440 --> 00:37:40,640
questions yes i will okay thank you

960
00:37:40,640 --> 00:37:42,000
good um

961
00:37:42,000 --> 00:37:43,119
then

962
00:37:43,119 --> 00:37:43,920
uh

963
00:37:43,920 --> 00:37:45,860
let's thank the speaker again

964
00:37:45,860 --> 00:37:48,979
[Applause]

965
00:37:49,200 --> 00:37:51,839
thank you

966
00:37:53,119 --> 00:37:56,960
and um now uh tina song are you

967
00:37:56,960 --> 00:37:59,960
available

968
00:38:06,240 --> 00:38:08,240
sorry yes hello

969
00:38:08,240 --> 00:38:10,720
okay perfect so then we can uh you're

970
00:38:10,720 --> 00:38:12,320
ready for your talk

971
00:38:12,320 --> 00:38:14,560
yeah early but

972
00:38:14,560 --> 00:38:17,359
okay so the next talk will be classical

973
00:38:17,359 --> 00:38:19,599
proofs of quantum knowledge

974
00:38:19,599 --> 00:38:23,200
by tina chang and thomas vidig

975
00:38:23,200 --> 00:38:25,440
and tina will give the talk and it's

976
00:38:25,440 --> 00:38:27,280
your stage please

977
00:38:27,280 --> 00:38:30,680
share your slides

978
00:38:41,200 --> 00:38:43,839
uh okay

979
00:38:44,800 --> 00:38:46,960
okay thank you

980
00:38:46,960 --> 00:38:49,680
uh thanks for the introduction um

981
00:38:49,680 --> 00:38:50,880
so

982
00:38:50,880 --> 00:38:52,720
i'm going to tell you briefly about

983
00:38:52,720 --> 00:38:54,240
classical proofs of quantum knowledge

984
00:38:54,240 --> 00:38:56,160
which were the subject of this joint

985
00:38:56,160 --> 00:38:59,680
paper with thomas at caltech

986
00:38:59,680 --> 00:39:00,960
so there were

987
00:39:00,960 --> 00:39:02,640
three main points which we wanted to

988
00:39:02,640 --> 00:39:04,480
address in this paper

989
00:39:04,480 --> 00:39:05,839
we were interested in proofs of

990
00:39:05,839 --> 00:39:08,560
knowledge where the prover is quantum

991
00:39:08,560 --> 00:39:10,720
but the verifier is classical and the

992
00:39:10,720 --> 00:39:13,040
witness is a quantum state instead of

993
00:39:13,040 --> 00:39:14,800
classical string so

994
00:39:14,800 --> 00:39:16,880
briefly a classical proof of knowledge

995
00:39:16,880 --> 00:39:19,440
protocol is a protocol

996
00:39:19,440 --> 00:39:21,520
that informally speaking lets approve a

997
00:39:21,520 --> 00:39:23,359
prove to a verifier

998
00:39:23,359 --> 00:39:25,520
that it knows

999
00:39:25,520 --> 00:39:27,920
some witness for some mp instance so for

1000
00:39:27,920 --> 00:39:29,599
example that it knows a three coloring

1001
00:39:29,599 --> 00:39:32,000
for some particular graph

1002
00:39:32,000 --> 00:39:33,440
we're interested in defining these

1003
00:39:33,440 --> 00:39:35,680
objects in the setting where the prover

1004
00:39:35,680 --> 00:39:37,280
wants to prove that it knows a quantum

1005
00:39:37,280 --> 00:39:38,400
state

1006
00:39:38,400 --> 00:39:40,640
instead of a classical witness

1007
00:39:40,640 --> 00:39:42,880
and after we define these objects where

1008
00:39:42,880 --> 00:39:44,640
uh we prove some

1009
00:39:44,640 --> 00:39:45,920
interesting properties of that

1010
00:39:45,920 --> 00:39:48,160
definition that have relatively simple

1011
00:39:48,160 --> 00:39:49,839
proofs and then

1012
00:39:49,839 --> 00:39:51,839
we provide some examples that

1013
00:39:51,839 --> 00:39:53,839
instantiate the definition and

1014
00:39:53,839 --> 00:39:55,520
in so doing introduce some techniques

1015
00:39:55,520 --> 00:39:57,760
that might be useful for uh generally

1016
00:39:57,760 --> 00:40:00,800
analyzing protocols like this

1017
00:40:00,800 --> 00:40:01,920
um

1018
00:40:01,920 --> 00:40:03,760
so what's the

1019
00:40:03,760 --> 00:40:06,400
difficulty in defining classical proofs

1020
00:40:06,400 --> 00:40:07,920
of quantum knowledge you know why can't

1021
00:40:07,920 --> 00:40:09,839
we just translate the classical

1022
00:40:09,839 --> 00:40:11,920
definition to the quantum setting

1023
00:40:11,920 --> 00:40:13,760
um

1024
00:40:13,760 --> 00:40:15,920
there are two hiccups

1025
00:40:15,920 --> 00:40:17,760
the first is that

1026
00:40:17,760 --> 00:40:20,640
so uniquely quantum applications such as

1027
00:40:20,640 --> 00:40:22,480
quantum money which is one application

1028
00:40:22,480 --> 00:40:24,720
we consider don't always fit well into a

1029
00:40:24,720 --> 00:40:27,200
formalism that was originally designed

1030
00:40:27,200 --> 00:40:29,599
with sort of classical applications such

1031
00:40:29,599 --> 00:40:31,520
as classical public key encryption in

1032
00:40:31,520 --> 00:40:32,720
mind

1033
00:40:32,720 --> 00:40:34,079
um so

1034
00:40:34,079 --> 00:40:36,160
the classical definition is kind of

1035
00:40:36,160 --> 00:40:38,800
motivated by this imaginary scenario

1036
00:40:38,800 --> 00:40:40,480
where you have approval

1037
00:40:40,480 --> 00:40:42,720
uh who wants to prove to a verifier that

1038
00:40:42,720 --> 00:40:45,680
it knows a secret key for example for

1039
00:40:45,680 --> 00:40:47,760
some publicly known pk

1040
00:40:47,760 --> 00:40:49,359
publicly

1041
00:40:49,359 --> 00:40:50,400
um

1042
00:40:50,400 --> 00:40:53,119
and that's formalized by encoding the

1043
00:40:53,119 --> 00:40:56,800
public key as an instance of um

1044
00:40:56,800 --> 00:40:58,880
an empty complete problem

1045
00:40:58,880 --> 00:41:01,599
and you encode then the secret key as a

1046
00:41:01,599 --> 00:41:04,079
witness to that instance and you have

1047
00:41:04,079 --> 00:41:06,640
some public relation r so just a

1048
00:41:06,640 --> 00:41:08,079
function which determines whether

1049
00:41:08,079 --> 00:41:10,640
instance witness pairs are valued

1050
00:41:10,640 --> 00:41:12,880
um so that makes sense for classical

1051
00:41:12,880 --> 00:41:15,119
public key encryption schemes so this is

1052
00:41:15,119 --> 00:41:16,800
an example with diffie-hellman of how

1053
00:41:16,800 --> 00:41:18,400
you would set it up

1054
00:41:18,400 --> 00:41:19,920
it makes less sense for something like

1055
00:41:19,920 --> 00:41:21,599
quantum money um

1056
00:41:21,599 --> 00:41:23,920
where you like it's also a setting where

1057
00:41:23,920 --> 00:41:26,400
you intuitively have approver wanting to

1058
00:41:26,400 --> 00:41:28,400
prove to the verifier that it knows or

1059
00:41:28,400 --> 00:41:29,359
has

1060
00:41:29,359 --> 00:41:31,119
something so in this case it's a quantum

1061
00:41:31,119 --> 00:41:32,560
money state

1062
00:41:32,560 --> 00:41:35,200
um but that situation doesn't fit too

1063
00:41:35,200 --> 00:41:36,880
well into this formalism which was

1064
00:41:36,880 --> 00:41:38,800
developed for classical purposes even if

1065
00:41:38,800 --> 00:41:41,359
you replace all of the classical mp

1066
00:41:41,359 --> 00:41:44,319
things with the quantum so qma

1067
00:41:44,319 --> 00:41:45,760
equivalents

1068
00:41:45,760 --> 00:41:47,680
so that's one difficulty in settling the

1069
00:41:47,680 --> 00:41:49,680
definition

1070
00:41:49,680 --> 00:41:51,599
there's also the question what does

1071
00:41:51,599 --> 00:41:53,760
black box access mean when you have a

1072
00:41:53,760 --> 00:41:55,359
quant improver who only outputs

1073
00:41:55,359 --> 00:41:57,440
classical strings so usually the

1074
00:41:57,440 --> 00:42:00,960
security property of truths of knowledge

1075
00:42:00,960 --> 00:42:02,720
which intuitively should be should say

1076
00:42:02,720 --> 00:42:03,920
something like you know the prover only

1077
00:42:03,920 --> 00:42:06,319
passes in this protocol if they actually

1078
00:42:06,319 --> 00:42:08,800
know the witness in some sense

1079
00:42:08,800 --> 00:42:11,119
uh usually this intuition is formalized

1080
00:42:11,119 --> 00:42:12,480
by saying that there should be an

1081
00:42:12,480 --> 00:42:14,800
efficient extractor

1082
00:42:14,800 --> 00:42:15,599
uh

1083
00:42:15,599 --> 00:42:17,599
that can output the witness after

1084
00:42:17,599 --> 00:42:19,599
looking only at the input output

1085
00:42:19,599 --> 00:42:21,440
behavior of approver

1086
00:42:21,440 --> 00:42:23,280
so the intuition is that the prover must

1087
00:42:23,280 --> 00:42:25,119
have really known the witness if it's

1088
00:42:25,119 --> 00:42:27,040
possible to pull it out of them by

1089
00:42:27,040 --> 00:42:29,200
interacting with it in this black box

1090
00:42:29,200 --> 00:42:31,200
fashion um

1091
00:42:31,200 --> 00:42:33,359
but generating some quantum witness by

1092
00:42:33,359 --> 00:42:37,040
only looking at classical messages um

1093
00:42:37,040 --> 00:42:38,640
uh remember we're interested in the

1094
00:42:38,640 --> 00:42:40,079
classical verify settings so the

1095
00:42:40,079 --> 00:42:41,920
messages must be classical

1096
00:42:41,920 --> 00:42:42,800
um

1097
00:42:42,800 --> 00:42:44,480
that seems as hard as quantum state

1098
00:42:44,480 --> 00:42:47,839
tomography so black box access if an

1099
00:42:47,839 --> 00:42:49,440
efficient extractor is going to do

1100
00:42:49,440 --> 00:42:50,640
anything useful

1101
00:42:50,640 --> 00:42:52,880
um needs to be a little bit different uh

1102
00:42:52,880 --> 00:42:54,720
in the quantum world

1103
00:42:54,720 --> 00:42:57,040
so i cover how we overcome these hiccups

1104
00:42:57,040 --> 00:42:59,599
in the full talk um

1105
00:42:59,599 --> 00:43:01,599
and

1106
00:43:01,599 --> 00:43:04,880
we also proved these so once we

1107
00:43:04,880 --> 00:43:07,119
once we settled the definition we proved

1108
00:43:07,119 --> 00:43:09,119
these properties

1109
00:43:09,119 --> 00:43:11,280
of which there are informative some

1110
00:43:11,280 --> 00:43:12,960
informal statements here

1111
00:43:12,960 --> 00:43:15,839
um so the first one is that a

1112
00:43:15,839 --> 00:43:18,480
non-destructive proof of knowledge um so

1113
00:43:18,480 --> 00:43:20,079
one that does not destroy the witness

1114
00:43:20,079 --> 00:43:22,160
date that the approver is using so that

1115
00:43:22,160 --> 00:43:24,240
the prover can repeat the protocol as

1116
00:43:24,240 --> 00:43:26,319
often as it likes

1117
00:43:26,319 --> 00:43:27,760
such a proof of knowledge for some

1118
00:43:27,760 --> 00:43:29,359
witness state implies that the state can

1119
00:43:29,359 --> 00:43:33,200
be cloned by an unbounded adversary

1120
00:43:33,200 --> 00:43:35,520
so that has consequences in the quantum

1121
00:43:35,520 --> 00:43:37,920
money setting because often quantum

1122
00:43:37,920 --> 00:43:39,440
money schemes are information

1123
00:43:39,440 --> 00:43:41,760
theoretically secure

1124
00:43:41,760 --> 00:43:43,920
and the second property is that truths

1125
00:43:43,920 --> 00:43:45,520
of quantum knowledge can be used as

1126
00:43:45,520 --> 00:43:48,160
quantum money verification protocols and

1127
00:43:48,160 --> 00:43:50,160
we formalize what that means

1128
00:43:50,160 --> 00:43:52,240
and once you see the formalization it is

1129
00:43:52,240 --> 00:43:55,839
rather an intuitive thing to expect

1130
00:43:56,400 --> 00:43:58,480
and once we have

1131
00:43:58,480 --> 00:44:00,480
a definition and we have some properties

1132
00:44:00,480 --> 00:44:01,599
of it

1133
00:44:01,599 --> 00:44:03,359
we also want some examples to show that

1134
00:44:03,359 --> 00:44:05,040
there really are protocols that

1135
00:44:05,040 --> 00:44:06,800
instantiate the definition and also to

1136
00:44:06,800 --> 00:44:08,720
come up with some techniques that might

1137
00:44:08,720 --> 00:44:12,319
be useful in analyzing that protocol so

1138
00:44:12,319 --> 00:44:14,079
um

1139
00:44:14,079 --> 00:44:15,599
the most

1140
00:44:15,599 --> 00:44:18,240
uh well we do three examples in the

1141
00:44:18,240 --> 00:44:19,599
paper two of them are kind of similar

1142
00:44:19,599 --> 00:44:21,839
they're both both based on

1143
00:44:21,839 --> 00:44:23,599
information theoretically secure quantum

1144
00:44:23,599 --> 00:44:25,200
money schemes that have classical

1145
00:44:25,200 --> 00:44:26,720
verification

1146
00:44:26,720 --> 00:44:27,520
um

1147
00:44:27,520 --> 00:44:30,319
and one is computational um it's based

1148
00:44:30,319 --> 00:44:33,040
on the mahadev 2018 verification

1149
00:44:33,040 --> 00:44:35,359
protocol for bqp

1150
00:44:35,359 --> 00:44:37,839
um and so i think the most interesting

1151
00:44:37,839 --> 00:44:39,680
technique here is

1152
00:44:39,680 --> 00:44:41,760
this one which we use for the

1153
00:44:41,760 --> 00:44:43,119
information theoretic quantum money

1154
00:44:43,119 --> 00:44:44,560
schemes

1155
00:44:44,560 --> 00:44:46,240
where we actually borrow from the

1156
00:44:46,240 --> 00:44:48,319
self-testing literature

1157
00:44:48,319 --> 00:44:49,280
and

1158
00:44:49,280 --> 00:44:51,040
in order to be able to apply it we

1159
00:44:51,040 --> 00:44:53,359
interpret a quantum money verification

1160
00:44:53,359 --> 00:44:55,280
protocol um so it happens to have

1161
00:44:55,280 --> 00:44:57,280
classical communication so you know the

1162
00:44:57,280 --> 00:44:58,640
approver

1163
00:44:58,640 --> 00:45:01,040
is challenged by the bank and

1164
00:45:01,040 --> 00:45:04,079
replies with classical messages to prove

1165
00:45:04,079 --> 00:45:07,440
that it had a quantum money stake

1166
00:45:07,440 --> 00:45:09,599
um we consider such a protocol we

1167
00:45:09,599 --> 00:45:11,839
interpret it as a non-local gain so that

1168
00:45:11,839 --> 00:45:14,480
then we can apply a rigidity theorem um

1169
00:45:14,480 --> 00:45:16,720
in order to completely characterize the

1170
00:45:16,720 --> 00:45:18,720
prover based on its classical input

1171
00:45:18,720 --> 00:45:20,160
output behavior

1172
00:45:20,160 --> 00:45:22,400
and that characterization

1173
00:45:22,400 --> 00:45:23,839
kind of lets us know what the proverb is

1174
00:45:23,839 --> 00:45:25,839
doing and allows us to find the state

1175
00:45:25,839 --> 00:45:27,359
the witness state the money stage we're

1176
00:45:27,359 --> 00:45:28,720
interested in

1177
00:45:28,720 --> 00:45:30,640
inside the previous registers given the

1178
00:45:30,640 --> 00:45:32,240
sort of black box access that we're

1179
00:45:32,240 --> 00:45:34,319
allowed in the quantum setting

1180
00:45:34,319 --> 00:45:35,200
um

1181
00:45:35,200 --> 00:45:37,680
you know a priori the internal registers

1182
00:45:37,680 --> 00:45:40,079
with prover don't have any particular

1183
00:45:40,079 --> 00:45:42,880
structure that we can exploit but the

1184
00:45:42,880 --> 00:45:44,640
self-testing theorem is powerful enough

1185
00:45:44,640 --> 00:45:46,560
to give us enough structure to find

1186
00:45:46,560 --> 00:45:48,160
actually recover the money state from

1187
00:45:48,160 --> 00:45:50,079
the approval if it passes with higher

1188
00:45:50,079 --> 00:45:51,599
probability in the protocol so that's

1189
00:45:51,599 --> 00:45:53,119
probably the most interesting technique

1190
00:45:53,119 --> 00:45:54,800
here

1191
00:45:54,800 --> 00:45:56,079
the mahadev

1192
00:45:56,079 --> 00:45:58,160
proof actually goes forward pretty

1193
00:45:58,160 --> 00:46:00,640
straightforwardly because most of the

1194
00:46:00,640 --> 00:46:02,400
technical ingredients that we require

1195
00:46:02,400 --> 00:46:04,720
were already in her paper and we just

1196
00:46:04,720 --> 00:46:05,680
make the

1197
00:46:05,680 --> 00:46:08,720
claims explicit in order to

1198
00:46:08,720 --> 00:46:11,440
show that they satisfy our definition

1199
00:46:11,440 --> 00:46:14,000
so that's basically all i wanted to say

1200
00:46:14,000 --> 00:46:16,000
thank you for your attention and i'm

1201
00:46:16,000 --> 00:46:17,599
happy to take any questions if there are

1202
00:46:17,599 --> 00:46:19,839
any

1203
00:46:25,119 --> 00:46:26,800
thank you for your talk any questions

1204
00:46:26,800 --> 00:46:28,560
from the audience

1205
00:46:28,560 --> 00:46:31,520
yes we have one question

1206
00:46:32,960 --> 00:46:34,000
um

1207
00:46:34,000 --> 00:46:36,240
hi so the extractor in this proof of

1208
00:46:36,240 --> 00:46:38,160
knowledge uh does it also preserve the

1209
00:46:38,160 --> 00:46:40,160
final state of the prover along with

1210
00:46:40,160 --> 00:46:42,960
extracting the witness

1211
00:46:42,960 --> 00:46:44,160
um does it

1212
00:46:44,160 --> 00:46:46,400
preserve the final state of the prover

1213
00:46:46,400 --> 00:46:48,079
yeah for example if this proof of

1214
00:46:48,079 --> 00:46:50,240
knowledge has to be used in a larger

1215
00:46:50,240 --> 00:46:52,720
protocol then the extractor in the proof

1216
00:46:52,720 --> 00:46:54,319
would have to preserve the final state

1217
00:46:54,319 --> 00:46:55,440
of the approval in order for the

1218
00:46:55,440 --> 00:46:57,119
reduction to go through

1219
00:46:57,119 --> 00:46:59,280
so

1220
00:46:59,280 --> 00:47:00,960
um

1221
00:47:00,960 --> 00:47:03,359
i guess you're uh referring to which

1222
00:47:03,359 --> 00:47:05,839
which protocol the market or the um

1223
00:47:05,839 --> 00:47:07,599
self-testing

1224
00:47:07,599 --> 00:47:10,000
um anyone i mean

1225
00:47:10,000 --> 00:47:12,160
like

1226
00:47:12,400 --> 00:47:14,240
is the like

1227
00:47:14,240 --> 00:47:16,160
what i'm trying to ask is uh when we run

1228
00:47:16,160 --> 00:47:18,800
the extractor the final state uh that

1229
00:47:18,800 --> 00:47:20,880
the prover ends up with is is the joint

1230
00:47:20,880 --> 00:47:22,240
distribution of that state and the

1231
00:47:22,240 --> 00:47:24,240
witness indistinguishable from the

1232
00:47:24,240 --> 00:47:25,280
actual

1233
00:47:25,280 --> 00:47:26,880
uh real world

1234
00:47:26,880 --> 00:47:28,319
final state of the prover and the

1235
00:47:28,319 --> 00:47:29,440
witness

1236
00:47:29,440 --> 00:47:30,960
i see

1237
00:47:30,960 --> 00:47:32,640
um

1238
00:47:32,640 --> 00:47:35,920
the so the extractor is in the quantum

1239
00:47:35,920 --> 00:47:37,920
sorry in the self-testing case at least

1240
00:47:37,920 --> 00:47:39,920
extracted as an isometry

1241
00:47:39,920 --> 00:47:42,559
um so whatever you did you could

1242
00:47:42,559 --> 00:47:45,200
undo it um presumably

1243
00:47:45,200 --> 00:47:49,440
uh in the market case i am not sure

1244
00:47:49,440 --> 00:47:51,760
yeah i'm not sure i would have to check

1245
00:47:51,760 --> 00:47:54,079
okay

1246
00:47:55,119 --> 00:47:58,880
thank you any other questions

1247
00:48:02,400 --> 00:48:06,640
okay then let's thank the speaker again

1248
00:48:06,640 --> 00:48:08,960
thank you

1249
00:48:12,400 --> 00:48:14,640
and this is the last call for boarding

1250
00:48:14,640 --> 00:48:16,400
for the quantum session passenger

1251
00:48:16,400 --> 00:48:18,400
bhaskar roberts please report to the

1252
00:48:18,400 --> 00:48:21,200
gate

1253
00:48:21,200 --> 00:48:23,280
i do not see him online and i have not

1254
00:48:23,280 --> 00:48:26,319
received a response to email

1255
00:48:26,319 --> 00:48:28,000
okay so then we need to unload the

1256
00:48:28,000 --> 00:48:28,990
luggage um

1257
00:48:28,990 --> 00:48:30,400
[Music]

1258
00:48:30,400 --> 00:48:32,480
so let's thank all the speakers from

1259
00:48:32,480 --> 00:48:34,000
this session again

1260
00:48:34,000 --> 00:48:37,349
[Applause]

1261
00:48:38,480 --> 00:48:41,280
and i wish everyone a happy coffee break

1262
00:48:41,280 --> 00:48:44,319
and the remote participants

1263
00:48:44,319 --> 00:48:46,400
something like it

1264
00:48:46,400 --> 00:48:49,400
goodbye

1265
00:48:52,880 --> 00:48:55,200
we shall

