1
00:00:01,620 --> 00:00:05,180
[Music]

2
00:00:08,189 --> 00:00:11,278
[Music]

3
00:00:15,519 --> 00:00:18,560
ladies and gentlemen welcome back to the

4
00:00:18,560 --> 00:00:19,680
auction

5
00:00:19,680 --> 00:00:22,240
please everyone give a warm welcome to

6
00:00:22,240 --> 00:00:25,439
our two bidders from web3 foundation

7
00:00:25,439 --> 00:00:28,480
switzerland jeff

8
00:00:28,480 --> 00:00:31,599
and from ibm research also switzerland

9
00:00:31,599 --> 00:00:33,840
lucca

10
00:00:33,840 --> 00:00:36,079
and now let's discover today's auction

11
00:00:36,079 --> 00:00:39,280
item please admire this rare piece of

12
00:00:39,280 --> 00:00:42,480
beauty this unique totally non-fungible

13
00:00:42,480 --> 00:00:45,360
piece of art a picture of a dog

14
00:00:45,360 --> 00:00:48,320
expressing profound statements on life

15
00:00:48,320 --> 00:00:50,239
love and death

16
00:00:50,239 --> 00:00:53,360
well actually just a url the points to a

17
00:00:53,360 --> 00:00:54,800
place on the internet were someone's

18
00:00:54,800 --> 00:00:56,320
story in the jpeg

19
00:00:56,320 --> 00:00:57,840
marvelous

20
00:00:57,840 --> 00:01:00,800
luca jeff are you excited to be on this

21
00:01:00,800 --> 00:01:03,199
fantastic masterpiece

22
00:01:03,199 --> 00:01:05,600
yes

23
00:01:05,600 --> 00:01:08,159
let me recall the rules this is a seal

24
00:01:08,159 --> 00:01:10,960
bid auction and thanks to crypto you

25
00:01:10,960 --> 00:01:12,960
will not have to trust anyone but

26
00:01:12,960 --> 00:01:14,400
yourself

27
00:01:14,400 --> 00:01:15,759
each one of you is going to

28
00:01:15,759 --> 00:01:18,400
cryptographically commit to his bid

29
00:01:18,400 --> 00:01:21,119
later when i tell you you are going to

30
00:01:21,119 --> 00:01:23,119
open the commitments and we will learn

31
00:01:23,119 --> 00:01:24,960
who wins the item

32
00:01:24,960 --> 00:01:26,799
all right

33
00:01:26,799 --> 00:01:29,040
to start gently this is a second price

34
00:01:29,040 --> 00:01:31,439
auction the highest bidder wins the item

35
00:01:31,439 --> 00:01:33,040
but he only plays the price of the

36
00:01:33,040 --> 00:01:34,799
second highest bid

37
00:01:34,799 --> 00:01:36,720
do you understand

38
00:01:36,720 --> 00:01:38,320
marvelous

39
00:01:38,320 --> 00:01:41,439
jeff luca are you ready

40
00:01:41,439 --> 00:01:44,720
please show your commitments

41
00:01:44,720 --> 00:01:48,240
ladies and gentlemen a round of applause

42
00:01:48,240 --> 00:01:51,119
and now let's open the commitments luca

43
00:01:51,119 --> 00:01:55,399
will you please reveal your

44
00:01:55,510 --> 00:01:57,439
[Music]

45
00:01:57,439 --> 00:02:00,799
one million iucr coins

46
00:02:00,799 --> 00:02:01,920
wow

47
00:02:01,920 --> 00:02:05,040
that's some bid great job luca and now

48
00:02:05,040 --> 00:02:08,560
you jeff will you please reveal your bid

49
00:02:08,560 --> 00:02:10,080
jeff

50
00:02:10,080 --> 00:02:12,080
may we see your bit

51
00:02:12,080 --> 00:02:13,680
no

52
00:02:13,680 --> 00:02:16,560
ladies and gentlemen what a shocker

53
00:02:16,560 --> 00:02:19,920
we are the winner congratulations luca

54
00:02:19,920 --> 00:02:22,319
the pictures is yours please do not

55
00:02:22,319 --> 00:02:24,879
forget to pay the million isrs before

56
00:02:24,879 --> 00:02:27,280
you leave

57
00:02:27,599 --> 00:02:30,879
what do you mean you don't have them

58
00:02:30,879 --> 00:02:33,440
the auction is invalid i don't think so

59
00:02:33,440 --> 00:02:37,360
luca we also you bid 1 million iscr's

60
00:02:37,360 --> 00:02:39,920
congratulations

61
00:02:39,920 --> 00:02:41,360
jeff

62
00:02:41,360 --> 00:02:43,200
who's jeff

63
00:02:43,200 --> 00:02:44,640
second prize

64
00:02:44,640 --> 00:02:46,879
i don't see any other prize you're so

65
00:02:46,879 --> 00:02:49,440
funny luca thanks for participating but

66
00:02:49,440 --> 00:02:51,920
now we must go on with the show please

67
00:02:51,920 --> 00:02:53,680
do not forget to pay the million when

68
00:02:53,680 --> 00:02:57,879
you go bye bye

69
00:03:03,230 --> 00:03:08,019
[Music]

70
00:03:08,640 --> 00:03:10,400
and that my friends is what happens when

71
00:03:10,400 --> 00:03:12,159
you try and run auctions without a

72
00:03:12,159 --> 00:03:13,599
trusted party

73
00:03:13,599 --> 00:03:15,519
now this seems to be a difficult problem

74
00:03:15,519 --> 00:03:16,480
jeff

75
00:03:16,480 --> 00:03:18,560
how do you run a

76
00:03:18,560 --> 00:03:19,680
auction

77
00:03:19,680 --> 00:03:21,599
if you cannot force the parties to open

78
00:03:21,599 --> 00:03:23,360
their commitments

79
00:03:23,360 --> 00:03:24,879
this seems like a problem that may be

80
00:03:24,879 --> 00:03:27,519
solved by npc maybe

81
00:03:27,519 --> 00:03:30,400
yeah nbc sounds hard maybe instead of

82
00:03:30,400 --> 00:03:32,080
some kind of timed commitment and

83
00:03:32,080 --> 00:03:33,760
perhaps instantiated with the timelock

84
00:03:33,760 --> 00:03:34,959
puzzle

85
00:03:34,959 --> 00:03:37,920
uh-huh time commitment but this i guess

86
00:03:37,920 --> 00:03:40,000
you mean something like a commitment

87
00:03:40,000 --> 00:03:43,440
which after some time it opens itself

88
00:03:43,440 --> 00:03:48,400
yeah yeah um except that the you

89
00:03:48,400 --> 00:03:49,920
the commitment isn't just going to open

90
00:03:49,920 --> 00:03:51,360
itself somebody will have to do the

91
00:03:51,360 --> 00:03:53,599
opening oh and so this is where you use

92
00:03:53,599 --> 00:03:55,599
the timelock puzzles can you see a

93
00:03:55,599 --> 00:03:56,799
little bit more how you want to

94
00:03:56,799 --> 00:03:58,799
construct this yeah so the the timelock

95
00:03:58,799 --> 00:04:01,120
puzzle it's a you someone constructs a

96
00:04:01,120 --> 00:04:02,480
puzzle that they're a cryptographic

97
00:04:02,480 --> 00:04:03,920
puzzle that they

98
00:04:03,920 --> 00:04:05,840
have they believe they have a good idea

99
00:04:05,840 --> 00:04:07,920
how long it takes somebody to solve and

100
00:04:07,920 --> 00:04:09,360
also where

101
00:04:09,360 --> 00:04:11,200
as a process of the construction they

102
00:04:11,200 --> 00:04:12,959
understand what the result will be and

103
00:04:12,959 --> 00:04:15,200
then they can encrypt to that

104
00:04:15,200 --> 00:04:18,639
oh i see so that would give you a way to

105
00:04:18,639 --> 00:04:20,560
encrypt your bit using the solution to

106
00:04:20,560 --> 00:04:22,800
the puzzle and then

107
00:04:22,800 --> 00:04:25,199
the other participants will need to

108
00:04:25,199 --> 00:04:26,720
solve the puzzle in order to decrypt

109
00:04:26,720 --> 00:04:30,320
your bit that sounds very smart but

110
00:04:30,320 --> 00:04:32,160
is this going to scale too many

111
00:04:32,160 --> 00:04:33,520
participants

112
00:04:33,520 --> 00:04:35,520
no not really because they'll it's the

113
00:04:35,520 --> 00:04:37,759
same amount it means all this work for

114
00:04:37,759 --> 00:04:39,680
each participant

115
00:04:39,680 --> 00:04:41,759
well that's that's a bit crazy if we

116
00:04:41,759 --> 00:04:43,120
need to run options with thousands of

117
00:04:43,120 --> 00:04:44,479
participants

118
00:04:44,479 --> 00:04:45,360
um

119
00:04:45,360 --> 00:04:48,240
so what other solutions do we have there

120
00:04:48,240 --> 00:04:50,800
um ideally if we want this thing to be

121
00:04:50,800 --> 00:04:53,840
scalable we have just one new puzzle for

122
00:04:53,840 --> 00:04:56,160
everybody

123
00:04:56,160 --> 00:04:58,240
ah that's interesting

124
00:04:58,240 --> 00:05:00,639
i recently heard about homomorphic time

125
00:05:00,639 --> 00:05:04,880
lock puzzles or you have this idea where

126
00:05:04,880 --> 00:05:06,960
you have many puzzles and you can

127
00:05:06,960 --> 00:05:08,840
without solving them combine them

128
00:05:08,840 --> 00:05:11,440
homomorphically to a new puzzle

129
00:05:11,440 --> 00:05:13,199
uh which encodes the solution to the

130
00:05:13,199 --> 00:05:15,360
homomorphic circuit so for example here

131
00:05:15,360 --> 00:05:17,520
we could have everyone

132
00:05:17,520 --> 00:05:20,479
encrypt the bit uh inside the puzzle and

133
00:05:20,479 --> 00:05:23,120
then we run the maximum circuit on the

134
00:05:23,120 --> 00:05:25,600
puzzles homomorphically what we get in

135
00:05:25,600 --> 00:05:28,479
the end is a puzzle which contains the

136
00:05:28,479 --> 00:05:30,479
solution to who's the winner of the

137
00:05:30,479 --> 00:05:33,039
option so maybe this could be a solution

138
00:05:33,039 --> 00:05:35,759
so um yeah maybe

139
00:05:35,759 --> 00:05:38,479
computing the maximum in the in a

140
00:05:38,479 --> 00:05:40,960
circuit sounds quite expensive well what

141
00:05:40,960 --> 00:05:43,440
you maybe there's some other way that we

142
00:05:43,440 --> 00:05:47,120
can have how you know create a puzzle

143
00:05:47,120 --> 00:05:49,919
and and have the

144
00:05:49,919 --> 00:05:53,840
and then extract the key from it later

145
00:05:54,320 --> 00:05:57,680
so you're suggesting something like we

146
00:05:57,680 --> 00:05:59,919
want to encrypt to a public key

147
00:05:59,919 --> 00:06:02,240
now and extract the secret key

148
00:06:02,240 --> 00:06:03,120
later

149
00:06:03,120 --> 00:06:04,720
yeah

150
00:06:04,720 --> 00:06:06,400
so this is something that sounds a

151
00:06:06,400 --> 00:06:08,240
little bit like identity-based

152
00:06:08,240 --> 00:06:09,360
encryption right because in

153
00:06:09,360 --> 00:06:10,960
identity-based encryption what you do is

154
00:06:10,960 --> 00:06:14,160
that you can encrypt to an identity

155
00:06:14,160 --> 00:06:16,000
and even if the secret key is not there

156
00:06:16,000 --> 00:06:20,000
yet uh eventually the master

157
00:06:20,000 --> 00:06:23,039
the the truck the master authority will

158
00:06:23,039 --> 00:06:24,880
produce the secret key associated to the

159
00:06:24,880 --> 00:06:26,880
identity yeah let's go over what

160
00:06:26,880 --> 00:06:29,039
identity-based encryption looks like so

161
00:06:29,039 --> 00:06:30,319
in identity-based encryption you have

162
00:06:30,319 --> 00:06:32,639
these four algorithms

163
00:06:32,639 --> 00:06:34,400
you have keygen which

164
00:06:34,400 --> 00:06:36,960
generates the master public and secret

165
00:06:36,960 --> 00:06:38,560
keypair

166
00:06:38,560 --> 00:06:40,960
and then you have encryption which runs

167
00:06:40,960 --> 00:06:43,680
kinda like normal encryption but where

168
00:06:43,680 --> 00:06:45,039
you will encrypt

169
00:06:45,039 --> 00:06:47,840
using the master public key pair and the

170
00:06:47,840 --> 00:06:50,080
identity you want to encrypt to

171
00:06:50,080 --> 00:06:51,360
and now

172
00:06:51,360 --> 00:06:52,800
to

173
00:06:52,800 --> 00:06:54,800
in order to decrypt you first need to

174
00:06:54,800 --> 00:06:56,960
extract the secret key from the identity

175
00:06:56,960 --> 00:06:58,720
so this is the operation that is called

176
00:06:58,720 --> 00:07:00,240
extraction and that can only be

177
00:07:00,240 --> 00:07:03,919
performed if you know the master secrets

178
00:07:03,919 --> 00:07:06,479
and then once you have the the extracted

179
00:07:06,479 --> 00:07:09,199
secret key you can take a cipher text

180
00:07:09,199 --> 00:07:11,840
the public master key and the extracted

181
00:07:11,840 --> 00:07:13,599
secret key and you can get back the

182
00:07:13,599 --> 00:07:18,080
message so if this so if we can do it if

183
00:07:18,080 --> 00:07:20,319
this extract operation

184
00:07:20,319 --> 00:07:24,560
is slow and doesn't require any secrets

185
00:07:24,560 --> 00:07:27,039
huh that's interesting so yeah we would

186
00:07:27,039 --> 00:07:29,759
just need a slow extraction and then

187
00:07:29,759 --> 00:07:32,080
maybe everything can be public

188
00:07:32,080 --> 00:07:36,159
cute we could call this delay encryption

189
00:07:36,240 --> 00:07:37,919
all right well let's dig into bona

190
00:07:37,919 --> 00:07:39,520
franklin ibe because that's one of the

191
00:07:39,520 --> 00:07:41,120
simplest ones

192
00:07:41,120 --> 00:07:43,440
yup that's a good starting point indeed

193
00:07:43,440 --> 00:07:46,240
so let me recall bonnie franklin needs

194
00:07:46,240 --> 00:07:49,039
sending a pairing based scheme

195
00:07:49,039 --> 00:07:50,560
and so you have these two bearing groups

196
00:07:50,560 --> 00:07:53,280
generated by say g1 and g2

197
00:07:53,280 --> 00:07:54,160
your

198
00:07:54,160 --> 00:07:57,680
master key is your is a usual elite

199
00:07:57,680 --> 00:07:59,919
curve key pair so you have a secret

200
00:07:59,919 --> 00:08:02,479
scaler call it m and a public key which

201
00:08:02,479 --> 00:08:05,520
is m times g2

202
00:08:05,520 --> 00:08:07,360
and now when you want to encrypt what

203
00:08:07,360 --> 00:08:08,479
you are going to do is you are going to

204
00:08:08,479 --> 00:08:11,440
play it like a key encapsulation method

205
00:08:11,440 --> 00:08:12,479
so

206
00:08:12,479 --> 00:08:15,280
the pairing will produce some

207
00:08:15,280 --> 00:08:18,000
secret which are then going to use to do

208
00:08:18,000 --> 00:08:20,479
a symmetric encryption

209
00:08:20,479 --> 00:08:21,840
and so what you want to put in the

210
00:08:21,840 --> 00:08:23,840
pairing is on the one side the master

211
00:08:23,840 --> 00:08:26,479
public key so m times g2

212
00:08:26,479 --> 00:08:28,319
and on the other side you want to put

213
00:08:28,319 --> 00:08:30,639
something that's related to the identity

214
00:08:30,639 --> 00:08:32,000
so what you will do is that you will

215
00:08:32,000 --> 00:08:33,839
encode the identity to analytic curve

216
00:08:33,839 --> 00:08:34,719
point

217
00:08:34,719 --> 00:08:37,519
and then apply a secret

218
00:08:37,519 --> 00:08:39,839
random scalar which is going to be an

219
00:08:39,839 --> 00:08:42,240
ephemeral sequence and so call this u

220
00:08:42,240 --> 00:08:43,599
for example

221
00:08:43,599 --> 00:08:45,440
and then this gives you the symmetric

222
00:08:45,440 --> 00:08:46,800
key to use

223
00:08:46,800 --> 00:08:49,360
and then you also produce a ciphertext

224
00:08:49,360 --> 00:08:51,920
which is going to be the ephemeral u

225
00:08:51,920 --> 00:08:53,920
times g2 and this is you are going to

226
00:08:53,920 --> 00:08:56,080
send to the decrypter

227
00:08:56,080 --> 00:08:58,320
and now for decryption you just swap the

228
00:08:58,320 --> 00:09:01,519
rules of the secret u and the secret 10

229
00:09:01,519 --> 00:09:03,279
inside the pairing equation

230
00:09:03,279 --> 00:09:05,519
so on one side of the pairing you will

231
00:09:05,519 --> 00:09:08,399
put the ciphertext u times g2

232
00:09:08,399 --> 00:09:09,920
and the on the other side you need to

233
00:09:09,920 --> 00:09:13,120
put m times the identity

234
00:09:13,120 --> 00:09:15,120
so this is something that can only be

235
00:09:15,120 --> 00:09:16,640
done by

236
00:09:16,640 --> 00:09:18,800
the one who knows the master secret and

237
00:09:18,800 --> 00:09:20,800
so the extraction will consist in

238
00:09:20,800 --> 00:09:23,279
computing just a scalar multiplication

239
00:09:23,279 --> 00:09:26,080
master secret times the identity so this

240
00:09:26,080 --> 00:09:28,480
extraction operation is very very fast

241
00:09:28,480 --> 00:09:32,640
which isn't what we want but there's a

242
00:09:32,640 --> 00:09:35,120
there's an isogeny based verifiable

243
00:09:35,120 --> 00:09:36,560
delay function

244
00:09:36,560 --> 00:09:38,480
that

245
00:09:38,480 --> 00:09:40,080
where the verification equation looks

246
00:09:40,080 --> 00:09:41,920
like bls except

247
00:09:41,920 --> 00:09:43,600
that the the

248
00:09:43,600 --> 00:09:46,160
the actual

249
00:09:46,240 --> 00:09:49,040
you know delayed compu the slow delay

250
00:09:49,040 --> 00:09:50,399
computation

251
00:09:50,399 --> 00:09:54,640
is evaluating a long sequence of uh of

252
00:09:54,640 --> 00:09:57,519
isogenes and this replaces the scalar

253
00:09:57,519 --> 00:09:59,279
multiplication

254
00:09:59,279 --> 00:10:01,040
huh that's uh

255
00:10:01,040 --> 00:10:03,920
that's a very cute idea indeed so you're

256
00:10:03,920 --> 00:10:05,120
using the fact that scalar

257
00:10:05,120 --> 00:10:07,519
multiplication are very fast but

258
00:10:07,519 --> 00:10:09,920
isogenous you can make very long chains

259
00:10:09,920 --> 00:10:12,240
of isogenys which can be as low as you

260
00:10:12,240 --> 00:10:14,079
want and which

261
00:10:14,079 --> 00:10:15,600
essentially behave a little bit like

262
00:10:15,600 --> 00:10:17,440
scalar multiplications particularly are

263
00:10:17,440 --> 00:10:20,720
compatible with elliptic curve pairings

264
00:10:20,720 --> 00:10:22,959
so let's see if we put in the ebony and

265
00:10:22,959 --> 00:10:25,120
franklin the esogen here instead of the

266
00:10:25,120 --> 00:10:28,320
extraction will

267
00:10:28,320 --> 00:10:30,160
our secret instead of being a skater

268
00:10:30,160 --> 00:10:32,880
will be a nisogeny a long chain of

269
00:10:32,880 --> 00:10:35,120
esogenics which is going to be slow

270
00:10:35,120 --> 00:10:37,680
so to derive the master

271
00:10:37,680 --> 00:10:39,839
public key you will you will apply this

272
00:10:39,839 --> 00:10:41,600
long sequence of exogenous and then

273
00:10:41,600 --> 00:10:43,760
extraction will be again applying the

274
00:10:43,760 --> 00:10:46,240
long sequence of hexogenesis to the

275
00:10:46,240 --> 00:10:48,000
identity

276
00:10:48,000 --> 00:10:49,600
encryption will still be fast because

277
00:10:49,600 --> 00:10:51,040
you don't need to apply the esogenic you

278
00:10:51,040 --> 00:10:52,480
just use something that was completely

279
00:10:52,480 --> 00:10:54,800
the key generation and now all you need

280
00:10:54,800 --> 00:10:57,680
to do to make this work is that you just

281
00:10:57,680 --> 00:10:59,360
don't make anything secret like the

282
00:10:59,360 --> 00:11:01,360
esony can be public because

283
00:11:01,360 --> 00:11:03,279
you need to just

284
00:11:03,279 --> 00:11:04,959
run the evaluation there is one thing

285
00:11:04,959 --> 00:11:07,440
that is somewhat secret the the identity

286
00:11:07,440 --> 00:11:08,800
of the auction

287
00:11:08,800 --> 00:11:12,079
has to be uh has to be secret our house

288
00:11:12,079 --> 00:11:14,720
has to come into existence be discovered

289
00:11:14,720 --> 00:11:16,720
when the auction starts so

290
00:11:16,720 --> 00:11:19,279
there there's the the timing of this

291
00:11:19,279 --> 00:11:22,399
randomness is important

292
00:11:23,200 --> 00:11:24,720
hey these guys apparently just

293
00:11:24,720 --> 00:11:26,800
discovered a new primitive uh and they

294
00:11:26,800 --> 00:11:29,279
seem poised to put us auctioneers out of

295
00:11:29,279 --> 00:11:30,320
work

296
00:11:30,320 --> 00:11:32,480
but so what exactly is this delay

297
00:11:32,480 --> 00:11:34,240
encryption primitive

298
00:11:34,240 --> 00:11:36,480
the analogy with ib runs even deeper

299
00:11:36,480 --> 00:11:39,920
than it may seem at first sight

300
00:11:39,920 --> 00:11:42,560
in ibe you have this extraction function

301
00:11:42,560 --> 00:11:44,880
which extracts the secret key from an

302
00:11:44,880 --> 00:11:46,000
identity

303
00:11:46,000 --> 00:11:48,399
and here in delay encryption what you do

304
00:11:48,399 --> 00:11:50,079
is just that ask this extraction

305
00:11:50,079 --> 00:11:53,920
functionality to be sequentially slow

306
00:11:53,920 --> 00:11:55,920
then all the rest runs exactly like in

307
00:11:55,920 --> 00:11:59,680
ib and um you will just have no secrets

308
00:11:59,680 --> 00:12:01,680
everyone is capable of running the

309
00:12:01,680 --> 00:12:04,480
extraction you don't need any master

310
00:12:04,480 --> 00:12:07,760
authority to do this

311
00:12:07,839 --> 00:12:09,680
but now if we look deeper into this

312
00:12:09,680 --> 00:12:12,800
analogy something interesting appears

313
00:12:12,800 --> 00:12:15,279
ibe is known to of course imply public

314
00:12:15,279 --> 00:12:17,040
key encryption but also in an

315
00:12:17,040 --> 00:12:19,680
interesting way it does imply signatures

316
00:12:19,680 --> 00:12:22,720
the way you sign with ib is that you

317
00:12:22,720 --> 00:12:25,040
encode the message to an identity

318
00:12:25,040 --> 00:12:27,440
and then you extract the secret key from

319
00:12:27,440 --> 00:12:29,440
this identity and this secret key will

320
00:12:29,440 --> 00:12:32,320
be the signature and then to verify you

321
00:12:32,320 --> 00:12:34,560
just encrypt and decrypt to this

322
00:12:34,560 --> 00:12:36,480
identity

323
00:12:36,480 --> 00:12:38,240
now you can try and play the same trick

324
00:12:38,240 --> 00:12:39,760
with delay encryption

325
00:12:39,760 --> 00:12:42,800
um and so first of all of course

326
00:12:42,800 --> 00:12:44,480
from delay encryption you will get some

327
00:12:44,480 --> 00:12:46,560
variance of time lock puzzles the same

328
00:12:46,560 --> 00:12:48,240
way that you get publicly encryption

329
00:12:48,240 --> 00:12:51,600
from ib but more interestingly

330
00:12:51,600 --> 00:12:55,120
you can obtain proof of work from uh

331
00:12:55,120 --> 00:12:57,440
from delay encryption the extraction

332
00:12:57,440 --> 00:12:58,880
will be the work

333
00:12:58,880 --> 00:13:00,480
and the way you verify that work has

334
00:13:00,480 --> 00:13:02,240
been done is exactly the same you will

335
00:13:02,240 --> 00:13:04,320
run encryption and decryption to the

336
00:13:04,320 --> 00:13:06,720
output of the proof of work and now if

337
00:13:06,720 --> 00:13:08,800
you add one more requirement if you ask

338
00:13:08,800 --> 00:13:11,040
the output of extraction to be uniquely

339
00:13:11,040 --> 00:13:13,120
determined by the input

340
00:13:13,120 --> 00:13:15,360
then in this case what you will get is

341
00:13:15,360 --> 00:13:18,079
exactly verifiable delay functions

342
00:13:18,079 --> 00:13:20,880
and so if you um apply this

343
00:13:20,880 --> 00:13:23,279
transformation to bony and franklin ibe

344
00:13:23,279 --> 00:13:26,079
what you will get are bls signatures

345
00:13:26,079 --> 00:13:29,120
and in analogous way if you apply this

346
00:13:29,120 --> 00:13:30,800
transformation to the delay encryption

347
00:13:30,800 --> 00:13:32,880
that these guys just discovered what you

348
00:13:32,880 --> 00:13:34,399
will get is

349
00:13:34,399 --> 00:13:37,120
the defeo masson petite en sanso

350
00:13:37,120 --> 00:13:40,480
verifiable delay function

351
00:13:40,639 --> 00:13:43,120
so this seems all very nice from a

352
00:13:43,120 --> 00:13:44,880
theoretical point of view

353
00:13:44,880 --> 00:13:48,000
the pieces seem to fit well together but

354
00:13:48,000 --> 00:13:49,279
in practice

355
00:13:49,279 --> 00:13:51,199
there is this sequentiality assumption

356
00:13:51,199 --> 00:13:53,760
on chains long chains of small degree

357
00:13:53,760 --> 00:13:55,680
isogenys and

358
00:13:55,680 --> 00:13:57,279
how do we know that this operation

359
00:13:57,279 --> 00:13:58,880
really is sequential

360
00:13:58,880 --> 00:14:00,720
jeff what's your take on this

361
00:14:00,720 --> 00:14:03,040
ah so um

362
00:14:03,040 --> 00:14:04,959
it's uh

363
00:14:04,959 --> 00:14:06,399
so so

364
00:14:06,399 --> 00:14:08,320
evaluating one of these degree two

365
00:14:08,320 --> 00:14:12,000
isogenys in this in this sequence is um

366
00:14:12,000 --> 00:14:12,959
is

367
00:14:12,959 --> 00:14:15,360
uh it means evaluating two degree two

368
00:14:15,360 --> 00:14:17,440
polynomials this is you know these

369
00:14:17,440 --> 00:14:20,160
things can be optimized in relatively

370
00:14:20,160 --> 00:14:21,920
well understood ways

371
00:14:21,920 --> 00:14:24,480
um there's uh

372
00:14:24,480 --> 00:14:27,440
there's also optimizing the finite field

373
00:14:27,440 --> 00:14:30,160
um this is also reasonably well

374
00:14:30,160 --> 00:14:33,279
understood uh so so any

375
00:14:33,279 --> 00:14:36,160
massive shifts it's it's believable that

376
00:14:36,160 --> 00:14:38,320
this could would would come from some

377
00:14:38,320 --> 00:14:39,680
kind of uh

378
00:14:39,680 --> 00:14:43,040
you know fairly major breakthrough and

379
00:14:43,040 --> 00:14:45,120
um you know of course we actually have

380
00:14:45,120 --> 00:14:47,440
to see what people can do in specialized

381
00:14:47,440 --> 00:14:49,519
hardware

382
00:14:49,519 --> 00:14:50,880
yeah and so since you spoke of

383
00:14:50,880 --> 00:14:53,360
specialized hardware um the first thing

384
00:14:53,360 --> 00:14:56,079
that comes to my mind is fpgas of course

385
00:14:56,079 --> 00:14:58,399
how fast do you think it would be in

386
00:14:58,399 --> 00:15:01,920
fpga to run one exogenous evaluation

387
00:15:01,920 --> 00:15:03,120
so the most similar thing that's

388
00:15:03,120 --> 00:15:05,839
happened so far is the if there is the

389
00:15:05,839 --> 00:15:07,120
ethereum's

390
00:15:07,120 --> 00:15:08,639
effort to do

391
00:15:08,639 --> 00:15:09,600
rsa

392
00:15:09,600 --> 00:15:10,959
squarings in an

393
00:15:10,959 --> 00:15:12,720
rsa group of unknown order which is

394
00:15:12,720 --> 00:15:14,639
different from what we're talking about

395
00:15:14,639 --> 00:15:17,199
those they get on fpgas they get down to

396
00:15:17,199 --> 00:15:18,959
25 nanoseconds

397
00:15:18,959 --> 00:15:19,760
um

398
00:15:19,760 --> 00:15:21,920
ours of course will with all lots of

399
00:15:21,920 --> 00:15:23,920
field optimizations and whatever else

400
00:15:23,920 --> 00:15:26,079
you know it will be cons

401
00:15:26,079 --> 00:15:27,760
each multiplication will be much faster

402
00:15:27,760 --> 00:15:30,480
than that but maybe 50 nanoseconds we

403
00:15:30,480 --> 00:15:32,399
will have to see but my understanding is

404
00:15:32,399 --> 00:15:34,639
the field sizes are like the ring sizes

405
00:15:34,639 --> 00:15:37,120
are more or less comparable between rsc

406
00:15:37,120 --> 00:15:40,000
and this yeah this is the the the field

407
00:15:40,000 --> 00:15:43,360
here is is is somewhat smaller but uh is

408
00:15:43,360 --> 00:15:46,000
1500 bits but yeah

409
00:15:46,000 --> 00:15:48,000
that's very interesting and so

410
00:15:48,000 --> 00:15:48,880
how

411
00:15:48,880 --> 00:15:49,839
um

412
00:15:49,839 --> 00:15:53,120
many like if you are thinking about the

413
00:15:53,120 --> 00:15:56,240
10 10 nanoseconds something like that

414
00:15:56,240 --> 00:15:57,680
how many

415
00:15:57,680 --> 00:16:00,160
isogenics you would need to run through

416
00:16:00,160 --> 00:16:02,000
in order to get a delay of i don't know

417
00:16:02,000 --> 00:16:03,920
one hour for example

418
00:16:03,920 --> 00:16:07,040
so with uh with these kind of

419
00:16:07,040 --> 00:16:08,800
guesstimated numbers so far it looks

420
00:16:08,800 --> 00:16:11,360
like we're we're talking 70 billion

421
00:16:11,360 --> 00:16:14,079
but remember there's a um

422
00:16:14,079 --> 00:16:17,680
each each of these degree 2 esogenies

423
00:16:17,680 --> 00:16:20,240
it has a has a field has a curve

424
00:16:20,240 --> 00:16:21,680
parameter that shows up and each of

425
00:16:21,680 --> 00:16:23,440
these curves is different

426
00:16:23,440 --> 00:16:27,680
and um and this this curve parameter uh

427
00:16:27,680 --> 00:16:29,120
so we're talking something like 12

428
00:16:29,120 --> 00:16:30,720
terabytes to store all of these curve

429
00:16:30,720 --> 00:16:33,360
parameters so there's a there's another

430
00:16:33,360 --> 00:16:36,480
feature of this of this vdf and of the

431
00:16:36,480 --> 00:16:38,720
delay encryption instantiated this way

432
00:16:38,720 --> 00:16:41,519
which is that you need to be pulling

433
00:16:41,519 --> 00:16:43,040
these uh

434
00:16:43,040 --> 00:16:45,199
these curve parameters from memory

435
00:16:45,199 --> 00:16:48,079
and that memory bandwidth

436
00:16:48,079 --> 00:16:50,320
it could either it it could either be

437
00:16:50,320 --> 00:16:52,880
good or bad but if it matches with your

438
00:16:52,880 --> 00:16:55,519
computation speed once both have been

439
00:16:55,519 --> 00:16:58,240
well optimized this is probably good for

440
00:16:58,240 --> 00:16:59,920
the for the vdf because it means an

441
00:16:59,920 --> 00:17:01,839
adversary has to break two things

442
00:17:01,839 --> 00:17:03,600
instead of just one

443
00:17:03,600 --> 00:17:04,480
wow

444
00:17:04,480 --> 00:17:06,880
12 terabytes of storage that's that's

445
00:17:06,880 --> 00:17:09,439
insane so you mean that

446
00:17:09,439 --> 00:17:12,959
maybe not the verifier but the evaluator

447
00:17:12,959 --> 00:17:15,839
needs to store all these data

448
00:17:15,839 --> 00:17:18,480
and every 20 nanoseconds he needs to

449
00:17:18,480 --> 00:17:20,959
take out of the memory one field element

450
00:17:20,959 --> 00:17:22,400
and bring it to the cpu to do the

451
00:17:22,400 --> 00:17:23,520
computation

452
00:17:23,520 --> 00:17:25,520
uh this is an insane amount of bandwidth

453
00:17:25,520 --> 00:17:28,079
this is like gigabytes per gigabytes per

454
00:17:28,079 --> 00:17:29,280
second

455
00:17:29,280 --> 00:17:30,160
um

456
00:17:30,160 --> 00:17:31,039
and

457
00:17:31,039 --> 00:17:32,880
i mean these are not the speeds that you

458
00:17:32,880 --> 00:17:34,880
can reach with just common hardware so

459
00:17:34,880 --> 00:17:36,640
this is a very interesting technological

460
00:17:36,640 --> 00:17:37,600
challenge

461
00:17:37,600 --> 00:17:39,600
um but so

462
00:17:39,600 --> 00:17:41,440
we may try and build the best hardware

463
00:17:41,440 --> 00:17:43,200
for this but how do we know that nsc

464
00:17:43,200 --> 00:17:45,600
doesn't go a hundred times faster

465
00:17:45,600 --> 00:17:48,559
so um any of any sort of delay primitive

466
00:17:48,559 --> 00:17:51,280
whether it's time lock puzzles or vdf or

467
00:17:51,280 --> 00:17:53,200
whatever

468
00:17:53,200 --> 00:17:57,039
should have um a safety margin security

469
00:17:57,039 --> 00:17:58,080
margin

470
00:17:58,080 --> 00:18:00,400
and and this is often ignored

471
00:18:00,400 --> 00:18:02,160
in a lot of papers which is a real

472
00:18:02,160 --> 00:18:06,080
mistake but um the you know if if

473
00:18:06,080 --> 00:18:08,720
if you if you know the evaluator runs at

474
00:18:08,720 --> 00:18:11,679
one speed you you should assume the if

475
00:18:11,679 --> 00:18:13,120
you know the honest evaluator runs at

476
00:18:13,120 --> 00:18:14,799
one speed or sorry the honest prover

477
00:18:14,799 --> 00:18:18,240
runs at one speed then you expect the

478
00:18:18,240 --> 00:18:21,919
um the dishonest prover can possibly run

479
00:18:21,919 --> 00:18:23,919
considerably faster ten times faster

480
00:18:23,919 --> 00:18:26,240
maybe a hundred times faster and this

481
00:18:26,240 --> 00:18:28,080
just needs to be so you have two speeds

482
00:18:28,080 --> 00:18:30,240
you have this this big t speed of the

483
00:18:30,240 --> 00:18:32,160
honest evaluator and this little t speed

484
00:18:32,160 --> 00:18:33,039
of the

485
00:18:33,039 --> 00:18:35,440
of the of the malicious evaluator and

486
00:18:35,440 --> 00:18:37,120
there and and

487
00:18:37,120 --> 00:18:38,960
their ratio is just a thing you need to

488
00:18:38,960 --> 00:18:41,200
bake into the design of the protocol

489
00:18:41,200 --> 00:18:42,559
and

490
00:18:42,559 --> 00:18:45,120
and how confident you are in that ratio

491
00:18:45,120 --> 00:18:46,559
really comes out of how you build the

492
00:18:46,559 --> 00:18:48,240
hardware

493
00:18:48,240 --> 00:18:50,400
okay so if we get back to the auction

494
00:18:50,400 --> 00:18:53,120
example this means that

495
00:18:53,120 --> 00:18:54,400
if you

496
00:18:54,400 --> 00:18:57,600
think that little t is the best the

497
00:18:57,600 --> 00:19:00,400
anyone on earth can do like nsa can do

498
00:19:00,400 --> 00:19:02,240
uh you will need to receive the bids

499
00:19:02,240 --> 00:19:04,559
before this little tea time yeah but

500
00:19:04,559 --> 00:19:06,400
then you will need to wait a much longer

501
00:19:06,400 --> 00:19:07,919
time big t

502
00:19:07,919 --> 00:19:10,559
to know who was the uh yeah little t has

503
00:19:10,559 --> 00:19:13,200
to be a little yeah so um you have

504
00:19:13,200 --> 00:19:15,520
whatever your little t over your your

505
00:19:15,520 --> 00:19:17,360
your ratio of little t and big t is and

506
00:19:17,360 --> 00:19:19,280
then you have to choose little t

507
00:19:19,280 --> 00:19:21,120
large enough for the various network

508
00:19:21,120 --> 00:19:22,400
back and forth messages that your

509
00:19:22,400 --> 00:19:24,640
protocol needs well this is an

510
00:19:24,640 --> 00:19:26,720
interesting technological challenge

511
00:19:26,720 --> 00:19:27,520
but

512
00:19:27,520 --> 00:19:29,280
here there is another technological

513
00:19:29,280 --> 00:19:31,600
challenge these

514
00:19:31,600 --> 00:19:33,760
isogeny based delay functions beat them

515
00:19:33,760 --> 00:19:35,840
delay encryption or verifiable delay

516
00:19:35,840 --> 00:19:36,799
functions

517
00:19:36,799 --> 00:19:39,520
they all seem to need a sort of trusted

518
00:19:39,520 --> 00:19:41,039
setup don't they

519
00:19:41,039 --> 00:19:43,840
uh yes so you

520
00:19:43,840 --> 00:19:44,799
um

521
00:19:44,799 --> 00:19:47,919
we have this one curve uh

522
00:19:47,919 --> 00:19:49,520
super singular curve with j and variant

523
00:19:49,520 --> 00:19:51,039
1728

524
00:19:51,039 --> 00:19:53,760
which we know about and we you know we

525
00:19:53,760 --> 00:19:55,760
we we don't want this to be one of the

526
00:19:55,760 --> 00:19:58,960
endpoints of our vd vdf because

527
00:19:58,960 --> 00:20:01,520
then someone could find uh

528
00:20:01,520 --> 00:20:04,400
could find could compute other isogenes

529
00:20:04,400 --> 00:20:06,000
between different curves that would that

530
00:20:06,000 --> 00:20:08,640
would provide shortcuts um instead what

531
00:20:08,640 --> 00:20:12,400
we need to do is to be is before setting

532
00:20:12,400 --> 00:20:14,640
up the vdf we need to

533
00:20:14,640 --> 00:20:17,600
uh do a random walk in the isogeny graph

534
00:20:17,600 --> 00:20:19,120
and find a

535
00:20:19,120 --> 00:20:20,400
and find a curve

536
00:20:20,400 --> 00:20:21,760
um

537
00:20:21,760 --> 00:20:22,880
uh

538
00:20:22,880 --> 00:20:24,880
and find some other random curve and

539
00:20:24,880 --> 00:20:27,280
then forget the walk so that this curve

540
00:20:27,280 --> 00:20:29,919
has no known connection to the super

541
00:20:29,919 --> 00:20:32,720
singular curve of j in variant 1728.

542
00:20:32,720 --> 00:20:35,600
okay i see so um the problem is really

543
00:20:35,600 --> 00:20:37,760
with this special j environment 1720 a

544
00:20:37,760 --> 00:20:39,440
curve and maybe with other special gene

545
00:20:39,440 --> 00:20:42,080
variants but if i take a random curve um

546
00:20:42,080 --> 00:20:43,840
then it's fine i can run these protocols

547
00:20:43,840 --> 00:20:45,840
and they are assumed to be safe and so

548
00:20:45,840 --> 00:20:48,559
really the only difficulty is that the

549
00:20:48,559 --> 00:20:50,320
random walk between this special

550
00:20:50,320 --> 00:20:52,159
starting point and

551
00:20:52,159 --> 00:20:54,799
the random super singularity curve must

552
00:20:54,799 --> 00:20:56,960
be kept secret and so this is where the

553
00:20:56,960 --> 00:20:58,159
trust lies

554
00:20:58,159 --> 00:20:59,200
so

555
00:20:59,200 --> 00:21:00,640
maybe we can

556
00:21:00,640 --> 00:21:02,320
reduce the amount of trust needed by

557
00:21:02,320 --> 00:21:05,120
doing this in mpc maybe like for example

558
00:21:05,120 --> 00:21:07,600
when you think of of this

559
00:21:07,600 --> 00:21:10,159
like you have n participants and so the

560
00:21:10,159 --> 00:21:12,960
first participant starts from 17 28 and

561
00:21:12,960 --> 00:21:14,960
then walks to some new curve

562
00:21:14,960 --> 00:21:16,720
then the second participant starts from

563
00:21:16,720 --> 00:21:18,799
this new arrival point and does his own

564
00:21:18,799 --> 00:21:21,039
random walk and gets to some renewality

565
00:21:21,039 --> 00:21:23,440
curve and then so on so on so in the end

566
00:21:23,440 --> 00:21:26,080
if at least one of the participants has

567
00:21:26,080 --> 00:21:27,760
been honest and thrown away the

568
00:21:27,760 --> 00:21:29,679
information on the random walk no one

569
00:21:29,679 --> 00:21:31,840
should know the path to the beginning

570
00:21:31,840 --> 00:21:34,799
right yes so the the only caveat here is

571
00:21:34,799 --> 00:21:36,400
you don't want any of these participants

572
00:21:36,400 --> 00:21:39,120
to sort of reset the path back to the

573
00:21:39,120 --> 00:21:41,760
super singular group of jam dragon 1728

574
00:21:41,760 --> 00:21:43,520
so they all need to provide a zero

575
00:21:43,520 --> 00:21:44,880
knowledge proof that they actually

576
00:21:44,880 --> 00:21:47,520
started with the previous guy's curve

577
00:21:47,520 --> 00:21:49,039
uh-huh yeah that's right that's right

578
00:21:49,039 --> 00:21:52,000
that's interesting um and so uh yeah

579
00:21:52,000 --> 00:21:54,720
what what what happens what options do

580
00:21:54,720 --> 00:21:56,559
we have for zero knowledge proofs let me

581
00:21:56,559 --> 00:21:58,159
think

582
00:21:58,159 --> 00:22:01,200
so we have sidh kind of proof of

583
00:22:01,200 --> 00:22:02,320
knowledge

584
00:22:02,320 --> 00:22:04,080
but that first of all i don't think they

585
00:22:04,080 --> 00:22:06,640
apply to this case because sidh curves

586
00:22:06,640 --> 00:22:08,159
are not really set up the same way they

587
00:22:08,159 --> 00:22:09,440
know that the same base field they are

588
00:22:09,440 --> 00:22:11,280
very special

589
00:22:11,280 --> 00:22:12,640
so they're probably not going to be

590
00:22:12,640 --> 00:22:13,600
useful

591
00:22:13,600 --> 00:22:15,039
then we have

592
00:22:15,039 --> 00:22:16,240
seaside

593
00:22:16,240 --> 00:22:19,200
style of proofs like sea sign seafish

594
00:22:19,200 --> 00:22:21,679
style of proofs but also those they are

595
00:22:21,679 --> 00:22:24,000
just limited to curves over the prime

596
00:22:24,000 --> 00:22:26,000
field which is not going to be the case

597
00:22:26,000 --> 00:22:27,919
here so these things are trying to be

598
00:22:27,919 --> 00:22:29,760
post quantum and we don't need post

599
00:22:29,760 --> 00:22:31,360
quantum here

600
00:22:31,360 --> 00:22:33,039
you're right you're right about this so

601
00:22:33,039 --> 00:22:34,720
maybe we can exploit the pairing

602
00:22:34,720 --> 00:22:36,880
equation which are already exploiting

603
00:22:36,880 --> 00:22:38,480
for the delay function and the

604
00:22:38,480 --> 00:22:40,880
verifiable delay uh

605
00:22:40,880 --> 00:22:42,559
for the daily encryption excuse me and

606
00:22:42,559 --> 00:22:44,640
the verifiable delay function so maybe

607
00:22:44,640 --> 00:22:46,480
we can exploit the pairing equation to

608
00:22:46,480 --> 00:22:47,679
prove

609
00:22:47,679 --> 00:22:49,919
knowledge of a secret work

610
00:22:49,919 --> 00:22:52,000
um that seems to be

611
00:22:52,000 --> 00:22:54,240
the way to go actually that's uh that

612
00:22:54,240 --> 00:22:56,559
can be much more efficient than than

613
00:22:56,559 --> 00:22:58,799
every other proofs we have of course it

614
00:22:58,799 --> 00:23:00,400
won't be post quantum but none of this

615
00:23:00,400 --> 00:23:02,000
is quantum

616
00:23:02,000 --> 00:23:03,520
okay that's

617
00:23:03,520 --> 00:23:04,960
that seems to be

618
00:23:04,960 --> 00:23:06,080
a

619
00:23:06,080 --> 00:23:07,919
kind of complete solution to the problem

620
00:23:07,919 --> 00:23:08,720
so

621
00:23:08,720 --> 00:23:10,320
we may really have a new interesting

622
00:23:10,320 --> 00:23:12,000
primitive to explore what do you think

623
00:23:12,000 --> 00:23:13,039
yeah

624
00:23:13,039 --> 00:23:15,919
okay that's um that's a nice and

625
00:23:15,919 --> 00:23:18,240
complete solution it seems so we really

626
00:23:18,240 --> 00:23:20,799
have a new protocol to explore and it

627
00:23:20,799 --> 00:23:22,799
seems that as an auctioneer i'm out of

628
00:23:22,799 --> 00:23:27,280
work so i may become a cryptographer now

629
00:23:27,280 --> 00:23:29,760
well thanks everyone for being with us

630
00:23:29,760 --> 00:23:32,880
today and see you at the next delay

631
00:23:32,880 --> 00:23:33,880
conference

632
00:23:33,880 --> 00:23:37,069
[Music]

633
00:23:40,060 --> 00:23:47,580
[Music]

634
00:23:48,720 --> 00:23:50,799
you

