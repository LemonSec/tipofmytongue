1
00:00:02,000 --> 00:00:04,240
hello everyone i'll present my joint

2
00:00:04,240 --> 00:00:06,480
work with ho jaleen fang song and then

3
00:00:06,480 --> 00:00:08,880
by contacting uh where we show that

4
00:00:08,880 --> 00:00:12,080
oblivious transfer is immunical crypt

5
00:00:12,080 --> 00:00:12,880
so

6
00:00:12,880 --> 00:00:15,440
the main object of our result is uh

7
00:00:15,440 --> 00:00:18,080
is implementing the ot functionality so

8
00:00:18,080 --> 00:00:20,160
here we have two parties a sender and a

9
00:00:20,160 --> 00:00:21,199
receiver

10
00:00:21,199 --> 00:00:23,760
and the sender sends a message to

11
00:00:23,760 --> 00:00:27,119
messages m0n1 to the id of functionality

12
00:00:27,119 --> 00:00:30,560
while the the receiver receives a bit b

13
00:00:30,560 --> 00:00:32,719
and the idea functionality just repasses

14
00:00:32,719 --> 00:00:35,280
the message mb to the receiver so notice

15
00:00:35,280 --> 00:00:37,520
that this the the sender didn't learn

16
00:00:37,520 --> 00:00:40,079
which bit b was learned like mb was

17
00:00:40,079 --> 00:00:42,399
learned by the receiver and the receiver

18
00:00:42,399 --> 00:00:44,000
didn't learn the

19
00:00:44,000 --> 00:00:46,239
the second bit that like the second

20
00:00:46,239 --> 00:00:48,239
message chosen by the server by the

21
00:00:48,239 --> 00:00:50,640
sender

22
00:00:50,640 --> 00:00:52,399
and uh you might

23
00:00:52,399 --> 00:00:55,039
already know that uh ot is a fundamental

24
00:00:55,039 --> 00:00:58,160
cryptographic primitive so in particular

25
00:00:58,160 --> 00:01:02,320
it implies multi-party computation

26
00:01:02,320 --> 00:01:04,559
so let me talk a bit about uh protocols

27
00:01:04,559 --> 00:01:05,760
for ot

28
00:01:05,760 --> 00:01:07,680
so it is well known that with only

29
00:01:07,680 --> 00:01:10,400
classical resources ot can be built from

30
00:01:10,400 --> 00:01:12,880
public encryption but we have no good

31
00:01:12,880 --> 00:01:15,439
results to build ot from 1a functions so

32
00:01:15,439 --> 00:01:17,119
in particular impact liaison ridge they

33
00:01:17,119 --> 00:01:18,080
prove that

34
00:01:18,080 --> 00:01:20,320
ot cannot be built from 1i functions in

35
00:01:20,320 --> 00:01:23,279
a black box way

36
00:01:23,360 --> 00:01:26,320
in the quantum setting

37
00:01:27,200 --> 00:01:29,759
and later bbcs they proposed a protocol

38
00:01:29,759 --> 00:01:30,720
where

39
00:01:30,720 --> 00:01:32,560
ot could be built from commitment

40
00:01:32,560 --> 00:01:35,119
schemes so this would like they didn't

41
00:01:35,119 --> 00:01:37,600
formally prove that but this would imply

42
00:01:37,600 --> 00:01:40,320
that uh ot could be built from um

43
00:01:40,320 --> 00:01:43,119
from 1a functions because com vanilla

44
00:01:43,119 --> 00:01:45,119
community and schemes can be built from

45
00:01:45,119 --> 00:01:46,960
many functions

46
00:01:46,960 --> 00:01:50,720
but later uh uh on on on several results

47
00:01:50,720 --> 00:01:52,240
that actually prove the security the

48
00:01:52,240 --> 00:01:55,200
rigor security of ck and bbcs

49
00:01:55,200 --> 00:01:56,960
they showed that uh for

50
00:01:56,960 --> 00:01:58,640
for implementing this commitment scheme

51
00:01:58,640 --> 00:02:00,240
we need actually and improve the

52
00:02:00,240 --> 00:02:02,880
security of our team we need that uh

53
00:02:02,880 --> 00:02:04,159
that the committee on schemes are

54
00:02:04,159 --> 00:02:06,960
extractable and equivocal and so far we

55
00:02:06,960 --> 00:02:09,440
don't know any uh equivocal and

56
00:02:09,440 --> 00:02:12,239
extractable commitment from um from

57
00:02:12,239 --> 00:02:13,840
monarch functions with only classical

58
00:02:13,840 --> 00:02:15,760
resources

59
00:02:15,760 --> 00:02:17,440
and our result is actually showing that

60
00:02:17,440 --> 00:02:18,959
in the quantum case

61
00:02:18,959 --> 00:02:21,040
we we can build extractable and

62
00:02:21,040 --> 00:02:23,040
equivocal coverage and schemes

63
00:02:23,040 --> 00:02:24,800
front-running functions and of course

64
00:02:24,800 --> 00:02:26,959
quantum resources

65
00:02:26,959 --> 00:02:29,120
and in particular this implies that ot

66
00:02:29,120 --> 00:02:31,200
and generally more generally multi-party

67
00:02:31,200 --> 00:02:33,440
computation is in mini-q crypt that's

68
00:02:33,440 --> 00:02:36,080
the parallel of impaliazo's five worlds

69
00:02:36,080 --> 00:02:37,519
where we have one eye functions and

70
00:02:37,519 --> 00:02:40,160
quantum resources

71
00:02:40,160 --> 00:02:42,560
as a remark uh

72
00:02:42,560 --> 00:02:44,319
there is a concurrent independent work

73
00:02:44,319 --> 00:02:46,720
by bartusekola angel quran and ma that

74
00:02:46,720 --> 00:02:49,440
shows a

75
00:02:49,760 --> 00:02:52,160
unextractable inexplicable commitment

76
00:02:52,160 --> 00:02:55,519
but using a very uh a different route

77
00:02:55,519 --> 00:02:58,160
technically

78
00:02:59,280 --> 00:03:01,280
so let me give more details what do you

79
00:03:01,280 --> 00:03:03,120
mean by a vocal and extractable

80
00:03:03,120 --> 00:03:05,840
commitment so as you might know a

81
00:03:05,840 --> 00:03:07,440
commitment scheme is a protocol between

82
00:03:07,440 --> 00:03:08,800
two parties the committer and the

83
00:03:08,800 --> 00:03:10,720
receiver and the committer has a message

84
00:03:10,720 --> 00:03:12,159
m

85
00:03:12,159 --> 00:03:13,040
and

86
00:03:13,040 --> 00:03:15,040
this protocol has two phases a

87
00:03:15,040 --> 00:03:18,319
commitment phase where the the committer

88
00:03:18,319 --> 00:03:19,200
uh

89
00:03:19,200 --> 00:03:21,200
provides a commitment of m to the

90
00:03:21,200 --> 00:03:22,959
receiver and an opening where the

91
00:03:22,959 --> 00:03:25,200
committer reveals the message m to the

92
00:03:25,200 --> 00:03:27,200
receiver

93
00:03:27,200 --> 00:03:29,280
and we want to prove two properties for

94
00:03:29,280 --> 00:03:31,599
this commitment committing scheme

95
00:03:31,599 --> 00:03:32,720
protocols

96
00:03:32,720 --> 00:03:34,480
first is hiding

97
00:03:34,480 --> 00:03:35,920
meaning that

98
00:03:35,920 --> 00:03:37,519
the the receiver cannot learn the

99
00:03:37,519 --> 00:03:39,519
message just from the uh in the

100
00:03:39,519 --> 00:03:41,360
commitment phase

101
00:03:41,360 --> 00:03:43,040
and but here interested in a stronger

102
00:03:43,040 --> 00:03:44,959
security notion that's the focality the

103
00:03:44,959 --> 00:03:47,440
simulation version of hiding

104
00:03:47,440 --> 00:03:48,159
and

105
00:03:48,159 --> 00:03:49,760
to show it vocality we have to show an

106
00:03:49,760 --> 00:03:51,440
algorithmic vocator

107
00:03:51,440 --> 00:03:55,360
who is able to to open the message m to

108
00:03:55,360 --> 00:03:57,280
a different value n prime

109
00:03:57,280 --> 00:03:59,920
and a malicious receiver who might do an

110
00:03:59,920 --> 00:04:02,319
arbitrary polynomial time quantum

111
00:04:02,319 --> 00:04:04,000
quantum computation and output some

112
00:04:04,000 --> 00:04:06,720
quantum state raw we won't distinguish

113
00:04:06,720 --> 00:04:07,599
uh

114
00:04:07,599 --> 00:04:09,760
when the locator open to one to the

115
00:04:09,760 --> 00:04:13,040
right message and to a different one

116
00:04:13,040 --> 00:04:15,760
uh and here this is uh

117
00:04:15,760 --> 00:04:18,160
made more concrete by saying that the

118
00:04:18,160 --> 00:04:20,639
output of the malicious receiver on the

119
00:04:20,639 --> 00:04:23,120
honest case and in this uh equocation

120
00:04:23,120 --> 00:04:25,600
case uh the these two states that the

121
00:04:25,600 --> 00:04:28,240
the receiver output

122
00:04:28,240 --> 00:04:29,280
they are computationally

123
00:04:29,280 --> 00:04:31,360
indistinguishable

124
00:04:31,360 --> 00:04:33,360
and of course you might you might

125
00:04:33,360 --> 00:04:36,000
ask how the cuvocator would be able to

126
00:04:36,000 --> 00:04:38,320
open to different values but uh not

127
00:04:38,320 --> 00:04:40,000
breaking the binding property that i'll

128
00:04:40,000 --> 00:04:42,639
mention later to two of the protocol is

129
00:04:42,639 --> 00:04:44,880
that the equivocator has more resources

130
00:04:44,880 --> 00:04:47,040
or more power than the original

131
00:04:47,040 --> 00:04:48,880
committee for example it is able to

132
00:04:48,880 --> 00:04:51,360
rewind

133
00:04:52,080 --> 00:04:53,840
so the second security property that you

134
00:04:53,840 --> 00:04:55,199
want from this commitment scheme is

135
00:04:55,199 --> 00:04:56,639
extractability and this is the

136
00:04:56,639 --> 00:04:58,720
simulation version of a binding

137
00:04:58,720 --> 00:05:01,680
and here we want the like two we have

138
00:05:01,680 --> 00:05:03,199
two scenarios so in the first scenario

139
00:05:03,199 --> 00:05:05,039
we have like this algorithm called the

140
00:05:05,039 --> 00:05:07,759
extractor that just outputs the message

141
00:05:07,759 --> 00:05:09,520
m that the the

142
00:05:09,520 --> 00:05:11,360
possibly malicious committer open in the

143
00:05:11,360 --> 00:05:12,960
second phase

144
00:05:12,960 --> 00:05:14,720
and on top of that we also assume that

145
00:05:14,720 --> 00:05:18,320
the committer outputs some quantum zero

146
00:05:18,320 --> 00:05:20,479
in the second scenario the extractor is

147
00:05:20,479 --> 00:05:21,600
able to

148
00:05:21,600 --> 00:05:23,840
output some message m prime just in

149
00:05:23,840 --> 00:05:26,320
already in the fir in the first phase

150
00:05:26,320 --> 00:05:28,479
and again after the protocol finishes

151
00:05:28,479 --> 00:05:30,560
the committer sitilda output some

152
00:05:30,560 --> 00:05:34,080
message uh some quantum state sigma

153
00:05:34,080 --> 00:05:36,800
and uh the security here is that uh the

154
00:05:36,800 --> 00:05:38,479
states row and sigma they're

155
00:05:38,479 --> 00:05:40,639
computationally distinguishable and m is

156
00:05:40,639 --> 00:05:43,280
equal to m prime

157
00:05:43,280 --> 00:05:45,280
and again the extractor here would be

158
00:05:45,280 --> 00:05:47,680
able to to to do this without breaking

159
00:05:47,680 --> 00:05:50,639
hanging hiding because

160
00:05:50,639 --> 00:05:53,039
she would have access to extra resources

161
00:05:53,039 --> 00:05:56,479
for example rewinding again

162
00:05:56,800 --> 00:06:00,000
so as i said we want to build uh extract

163
00:06:00,000 --> 00:06:01,360
commitments and in particular this

164
00:06:01,360 --> 00:06:04,160
implies ot from ronnie functions

165
00:06:04,160 --> 00:06:06,560
and quantum resources so let me tell you

166
00:06:06,560 --> 00:06:08,160
a bit uh

167
00:06:08,160 --> 00:06:10,560
how we do this

168
00:06:10,560 --> 00:06:13,039
so the first thing is building equivocal

169
00:06:13,039 --> 00:06:15,120
commitments and this can be done

170
00:06:15,120 --> 00:06:17,280
actually only only classically

171
00:06:17,280 --> 00:06:18,479
and

172
00:06:18,479 --> 00:06:19,199
what

173
00:06:19,199 --> 00:06:20,560
it can be seen is that using these

174
00:06:20,560 --> 00:06:22,639
equivocal commitments and implementing

175
00:06:22,639 --> 00:06:25,919
this bbcs or ck protocols with equivocal

176
00:06:25,919 --> 00:06:27,840
comedians this already gives some weak

177
00:06:27,840 --> 00:06:29,919
notion of faulty meaning about the

178
00:06:29,919 --> 00:06:32,799
simulator t

179
00:06:33,280 --> 00:06:34,880
then what to show is that using a

180
00:06:34,880 --> 00:06:37,440
garbled circuits we can uh use ombado

181
00:06:37,440 --> 00:06:39,039
simulator ortiz to have ambaldo

182
00:06:39,039 --> 00:06:40,720
simulator verifiable disclosure of

183
00:06:40,720 --> 00:06:42,240
secrets

184
00:06:42,240 --> 00:06:43,759
and then we show that from these

185
00:06:43,759 --> 00:06:46,560
verifiable cds we were able to to

186
00:06:46,560 --> 00:06:48,479
implement extractor commitments

187
00:06:48,479 --> 00:06:50,479
and now i'll explain each of these steps

188
00:06:50,479 --> 00:06:53,199
independently

189
00:06:53,520 --> 00:06:55,599
so as i said the first thing is showing

190
00:06:55,599 --> 00:06:57,440
equivocal commitments only classically

191
00:06:57,440 --> 00:06:59,520
so we start from a base commitment where

192
00:06:59,520 --> 00:07:00,880
the committer and the receiver they

193
00:07:00,880 --> 00:07:03,199
share some public parameters and then

194
00:07:03,199 --> 00:07:05,360
the committer uh sends the commitment of

195
00:07:05,360 --> 00:07:08,240
m and using someone as r

196
00:07:08,240 --> 00:07:09,840
and in this base commitment uh the the

197
00:07:09,840 --> 00:07:11,520
committer just sends m and r to the

198
00:07:11,520 --> 00:07:14,160
receiver who then checks if c is indeed

199
00:07:14,160 --> 00:07:17,919
the committee of m using randomness r

200
00:07:18,080 --> 00:07:19,120
and uh

201
00:07:19,120 --> 00:07:21,520
in order to make this protocol vocal we

202
00:07:21,520 --> 00:07:23,440
just

203
00:07:23,440 --> 00:07:25,759
change the the opening phase and instead

204
00:07:25,759 --> 00:07:28,000
of sending them they run on sr

205
00:07:28,000 --> 00:07:30,319
the the committer

206
00:07:30,319 --> 00:07:32,800
proves that there exists sub-r such that

207
00:07:32,800 --> 00:07:34,720
m is the commitment uh

208
00:07:34,720 --> 00:07:37,280
c is the commitment of m using one on sr

209
00:07:37,280 --> 00:07:38,720
and if you implement use this basic

210
00:07:38,720 --> 00:07:40,639
commitment uh for example with an hour's

211
00:07:40,639 --> 00:07:44,400
commitment scheme uh this binding is uh

212
00:07:44,400 --> 00:07:46,160
statistical so there is a single wire

213
00:07:46,160 --> 00:07:48,000
with overarm probability and then we

214
00:07:48,000 --> 00:07:50,160
have the security guarantees for

215
00:07:50,160 --> 00:07:53,599
for for this new protocol

216
00:07:54,240 --> 00:07:56,800
uh to show you vocal uh

217
00:07:56,800 --> 00:07:58,240
locality we need to to show the

218
00:07:58,240 --> 00:08:00,319
equivocator and this invocator just

219
00:08:00,319 --> 00:08:01,919
performs the honestly in the the

220
00:08:01,919 --> 00:08:03,919
original case and the index are in the

221
00:08:03,919 --> 00:08:06,240
uh commitment phase

222
00:08:06,240 --> 00:08:09,039
but then in the opening uh the avocator

223
00:08:09,039 --> 00:08:11,360
chooses a message in prime and then uses

224
00:08:11,360 --> 00:08:13,120
the zero knowledge simulator to convince

225
00:08:13,120 --> 00:08:14,960
that uh c is a cumulation of m prime

226
00:08:14,960 --> 00:08:16,800
using randomness r

227
00:08:16,800 --> 00:08:18,479
and by the zero knowledge property and

228
00:08:18,479 --> 00:08:19,759
by the hiding property of the base

229
00:08:19,759 --> 00:08:22,080
commitment scheme uh we can show that

230
00:08:22,080 --> 00:08:24,240
the the the output of the

231
00:08:24,240 --> 00:08:25,199
of

232
00:08:25,199 --> 00:08:27,280
the equivocator is a distinction from

233
00:08:27,280 --> 00:08:30,960
the output of the original protocol

234
00:08:30,960 --> 00:08:33,440
so with that we have this eq focal

235
00:08:33,440 --> 00:08:35,279
commitments and using this previous

236
00:08:35,279 --> 00:08:37,440
result this already gives us this ambala

237
00:08:37,440 --> 00:08:38,839
simulator

238
00:08:38,839 --> 00:08:42,159
okay now my goal is to explain uh like

239
00:08:42,159 --> 00:08:44,240
these verifiable cds protocols and

240
00:08:44,240 --> 00:08:46,640
explain how to use it to finally achieve

241
00:08:46,640 --> 00:08:50,000
extractable commitment schemes

242
00:08:50,160 --> 00:08:51,680
so

243
00:08:51,680 --> 00:08:53,920
we do a conditional disclosure of secret

244
00:08:53,920 --> 00:08:56,800
for some np relations so it's just a set

245
00:08:56,800 --> 00:08:59,839
of uh pairs of input and weaknesses such

246
00:08:59,839 --> 00:09:01,920
that for for for which there is a now

247
00:09:01,920 --> 00:09:04,399
polynomial time algorithm v such that v

248
00:09:04,399 --> 00:09:05,839
on xws

249
00:09:05,839 --> 00:09:08,399
outputs one so it accepts if and only if

250
00:09:08,399 --> 00:09:12,320
x and w belongs to this relation

251
00:09:12,720 --> 00:09:14,720
and a cds for the resolution is this

252
00:09:14,720 --> 00:09:16,959
ideal protocol where the sender chooses

253
00:09:16,959 --> 00:09:20,640
some input x and some message m

254
00:09:20,640 --> 00:09:22,959
the receiver chooses some

255
00:09:22,959 --> 00:09:24,720
witness w

256
00:09:24,720 --> 00:09:27,360
and finally the this verifiable cds

257
00:09:27,360 --> 00:09:29,600
sends a message m prime to the receiver

258
00:09:29,600 --> 00:09:32,399
such that m prime is equal to m if x w

259
00:09:32,399 --> 00:09:34,560
belongs to this relation

260
00:09:34,560 --> 00:09:38,000
or it outputs purp otherwise so uh the

261
00:09:38,000 --> 00:09:40,320
the the main idea here is that the the

262
00:09:40,320 --> 00:09:41,120
the

263
00:09:41,120 --> 00:09:43,120
the receiver will learn the message

264
00:09:43,120 --> 00:09:45,200
chosen by the sender if and only if it

265
00:09:45,200 --> 00:09:47,360
has the witness to the corresponding

266
00:09:47,360 --> 00:09:50,360
input

267
00:09:50,399 --> 00:09:52,720
uh in this setting we want an extra

268
00:09:52,720 --> 00:09:54,640
property from cds protocols we want it

269
00:09:54,640 --> 00:09:56,640
to be verifiable so

270
00:09:56,640 --> 00:09:58,240
we want to have a protocol where the

271
00:09:58,240 --> 00:10:01,519
sender and the receiver they extend

272
00:10:01,519 --> 00:10:03,440
exchange messages back and forth and

273
00:10:03,440 --> 00:10:05,360
since we want the quantum protocols this

274
00:10:05,360 --> 00:10:08,399
message could be class or quantum

275
00:10:08,399 --> 00:10:10,560
but here we can

276
00:10:10,560 --> 00:10:12,720
fix for for the classical messages a

277
00:10:12,720 --> 00:10:14,560
classical transcript tau so this is not

278
00:10:14,560 --> 00:10:15,920
possible for quantum message but you can

279
00:10:15,920 --> 00:10:17,680
fix them for the classical one so when

280
00:10:17,680 --> 00:10:21,279
you call this class code transcript

281
00:10:21,279 --> 00:10:22,640
and we say that this protocol is a

282
00:10:22,640 --> 00:10:24,800
verifiable cds protocol first it

283
00:10:24,800 --> 00:10:26,800
implements fcds so if it implements the

284
00:10:26,800 --> 00:10:29,600
cds idea functionality

285
00:10:29,600 --> 00:10:31,760
and if on top of that

286
00:10:31,760 --> 00:10:33,600
the product the protocol is binding

287
00:10:33,600 --> 00:10:35,120
meaning that the

288
00:10:35,120 --> 00:10:36,720
there exists a

289
00:10:36,720 --> 00:10:38,399
unique message that the malicious sender

290
00:10:38,399 --> 00:10:40,640
could use uh and

291
00:10:40,640 --> 00:10:44,560
and we can verify that this is the case

292
00:10:44,560 --> 00:10:45,440
so

293
00:10:45,440 --> 00:10:47,519
in in order to show that it's verifiable

294
00:10:47,519 --> 00:10:49,279
what we want is that the sender is able

295
00:10:49,279 --> 00:10:51,360
to output some proof time

296
00:10:51,360 --> 00:10:53,040
and there exists some algorithm that

297
00:10:53,040 --> 00:10:54,800
receives as input the classical

298
00:10:54,800 --> 00:10:57,440
transcript tau the input x the message m

299
00:10:57,440 --> 00:10:59,200
and the proof pi

300
00:10:59,200 --> 00:11:00,399
and if

301
00:11:00,399 --> 00:11:02,320
the center and the receiver honest this

302
00:11:02,320 --> 00:11:05,200
algorithm outputs one if these values

303
00:11:05,200 --> 00:11:08,320
are provided honestly

304
00:11:08,560 --> 00:11:09,440
and

305
00:11:09,440 --> 00:11:12,160
we want also binding such that and says

306
00:11:12,160 --> 00:11:13,760
it for

307
00:11:13,760 --> 00:11:16,560
every malicious

308
00:11:16,560 --> 00:11:18,480
sender as tilde

309
00:11:18,480 --> 00:11:21,279
that outputs some message m tilde and

310
00:11:21,279 --> 00:11:24,640
some proof by tilde

311
00:11:24,640 --> 00:11:25,680
we have that

312
00:11:25,680 --> 00:11:26,959
the following

313
00:11:26,959 --> 00:11:29,200
event happens with uh over with

314
00:11:29,200 --> 00:11:30,959
negligible probability

315
00:11:30,959 --> 00:11:33,200
so the event that we want to happen with

316
00:11:33,200 --> 00:11:34,640
language verbal is the following so we

317
00:11:34,640 --> 00:11:36,480
want that the verification passes within

318
00:11:36,480 --> 00:11:38,240
tilde and by tilde

319
00:11:38,240 --> 00:11:40,399
and the message

320
00:11:40,399 --> 00:11:42,399
provided by the receiver

321
00:11:42,399 --> 00:11:45,680
is not until the if x and w belongs to

322
00:11:45,680 --> 00:11:47,839
the relation so we don't want that the

323
00:11:47,839 --> 00:11:50,480
verification passes with m tilde and m

324
00:11:50,480 --> 00:11:52,720
tilde uh was not the message that would

325
00:11:52,720 --> 00:11:55,360
be given to the receiver

326
00:11:55,360 --> 00:11:56,399
okay

327
00:11:56,399 --> 00:11:58,959
so let me tell you how to build these uh

328
00:11:58,959 --> 00:12:01,360
community extract bowen equivocation

329
00:12:01,360 --> 00:12:04,320
schemes from cds

330
00:12:04,320 --> 00:12:07,040
uh and the protocol has four phases so

331
00:12:07,040 --> 00:12:09,279
the first phase is the trap set chapter

332
00:12:09,279 --> 00:12:11,839
setup where the receiver just sends a

333
00:12:11,839 --> 00:12:13,839
commitment of zero and proves your

334
00:12:13,839 --> 00:12:15,200
knowledge that it is indeed the

335
00:12:15,200 --> 00:12:18,160
commitment of zero

336
00:12:18,800 --> 00:12:20,160
secondly

337
00:12:20,160 --> 00:12:22,720
they run a vcds protocol for the

338
00:12:22,720 --> 00:12:23,920
relation

339
00:12:23,920 --> 00:12:26,880
of inputs that are commitments of one

340
00:12:26,880 --> 00:12:29,360
and the and the witnesses are the

341
00:12:29,360 --> 00:12:32,560
corresponding randomness uh for for for

342
00:12:32,560 --> 00:12:34,959
the commitment okay the runners used to

343
00:12:34,959 --> 00:12:37,200
commit to one

344
00:12:37,200 --> 00:12:39,600
and the input chosen to the

345
00:12:39,600 --> 00:12:41,920
uh by the committer is the commitment

346
00:12:41,920 --> 00:12:43,839
sent by the receiver in the very first

347
00:12:43,839 --> 00:12:44,800
message

348
00:12:44,800 --> 00:12:47,120
and the message will be m that will be

349
00:12:47,120 --> 00:12:49,440
used to like this is the message that

350
00:12:49,440 --> 00:12:52,240
the committee wants to

351
00:12:52,240 --> 00:12:53,519
uh

352
00:12:53,519 --> 00:12:55,120
this is the message that the committee

353
00:12:55,120 --> 00:12:56,639
wants to commit in the in the later

354
00:12:56,639 --> 00:12:57,680
phase

355
00:12:57,680 --> 00:13:00,240
okay and uh the receiver on their side

356
00:13:00,240 --> 00:13:02,800
the the user's witness they run on sr

357
00:13:02,800 --> 00:13:04,639
and then the verifier cds outputs the

358
00:13:04,639 --> 00:13:05,760
output of

359
00:13:05,760 --> 00:13:09,279
vcds to both parties

360
00:13:09,760 --> 00:13:11,760
finally in the commitment phase the

361
00:13:11,760 --> 00:13:14,079
committee just sends a commitment c star

362
00:13:14,079 --> 00:13:17,360
of m using random as our star and proves

363
00:13:17,360 --> 00:13:18,639
this is your knowledge there exists some

364
00:13:18,639 --> 00:13:20,399
value of m and r star

365
00:13:20,399 --> 00:13:22,480
such that this commitment is well formed

366
00:13:22,480 --> 00:13:25,360
and the message is is correct like

367
00:13:25,360 --> 00:13:27,920
that this message allows us to pass uh

368
00:13:27,920 --> 00:13:30,240
the the verification of the verifiable

369
00:13:30,240 --> 00:13:33,720
cds protocol

370
00:13:34,000 --> 00:13:36,639
finally in the opening phase uh the

371
00:13:36,639 --> 00:13:38,240
prover sorry the committer just sends

372
00:13:38,240 --> 00:13:40,160
the message m and does your knowledge

373
00:13:40,160 --> 00:13:41,760
prove that the uh

374
00:13:41,760 --> 00:13:44,160
c star is indeed a commitment of m of

375
00:13:44,160 --> 00:13:47,360
using someone else or star

376
00:13:47,360 --> 00:13:49,199
and we have that this protocol is

377
00:13:49,199 --> 00:13:52,240
binding because uh if no chapter are set

378
00:13:52,240 --> 00:13:54,320
up then the information of m is not

379
00:13:54,320 --> 00:13:56,800
reviewed by the vcds

380
00:13:56,800 --> 00:13:59,040
and we also have the binding of the of

381
00:13:59,040 --> 00:13:59,920
the

382
00:13:59,920 --> 00:14:02,000
of the base protocol and the desired

383
00:14:02,000 --> 00:14:04,160
knowledge particle so this implies that

384
00:14:04,160 --> 00:14:05,760
no information about m is leaked to the

385
00:14:05,760 --> 00:14:08,240
receiver

386
00:14:08,240 --> 00:14:09,920
we also have hiding

387
00:14:09,920 --> 00:14:12,560
and the hiding also comes from uh from

388
00:14:12,560 --> 00:14:14,719
the

389
00:14:14,959 --> 00:14:17,120
the uh of

390
00:14:17,120 --> 00:14:21,199
there's no chapter and all the all the

391
00:14:21,920 --> 00:14:24,399
um

392
00:14:25,440 --> 00:14:27,120
all the properties of the vcds and the

393
00:14:27,120 --> 00:14:28,839
commitments given as your knowledge

394
00:14:28,839 --> 00:14:31,440
protocol and now we can show

395
00:14:31,440 --> 00:14:34,720
extractability so for extractability we

396
00:14:34,720 --> 00:14:36,000
we

397
00:14:36,000 --> 00:14:37,839
the extractor can first replace this

398
00:14:37,839 --> 00:14:39,279
zero knowledge proof by zero knowledge

399
00:14:39,279 --> 00:14:40,720
simulation

400
00:14:40,720 --> 00:14:42,839
uh and here

401
00:14:42,839 --> 00:14:44,720
um uh

402
00:14:44,720 --> 00:14:46,560
like these two scenarios like these two

403
00:14:46,560 --> 00:14:48,240
experiments are distinguishable because

404
00:14:48,240 --> 00:14:49,519
of the general knowledge property of the

405
00:14:49,519 --> 00:14:51,920
protocol

406
00:14:51,920 --> 00:14:53,680
then the extractor can just replace the

407
00:14:53,680 --> 00:14:56,240
commit of zero by commitment of one and

408
00:14:56,240 --> 00:14:57,760
by the hiding property of the base

409
00:14:57,760 --> 00:14:59,519
protocol these experiments are

410
00:14:59,519 --> 00:15:02,160
indistinguishable as well

411
00:15:02,160 --> 00:15:04,800
so once the extractor has replaced the

412
00:15:04,800 --> 00:15:06,240
committed by one

413
00:15:06,240 --> 00:15:07,519
then uh

414
00:15:07,519 --> 00:15:10,720
she can just input the redness r used to

415
00:15:10,720 --> 00:15:12,880
to perform this commitment and she

416
00:15:12,880 --> 00:15:14,480
received the message in prime that's

417
00:15:14,480 --> 00:15:16,800
supposed to be m uh

418
00:15:16,800 --> 00:15:19,519
that that that is committed by the

419
00:15:19,519 --> 00:15:21,040
uh by the approver sorry by the

420
00:15:21,040 --> 00:15:22,800
committee and

421
00:15:22,800 --> 00:15:24,240
by the government by the soundness of

422
00:15:24,240 --> 00:15:25,760
the zero-knowledge proof we have this

423
00:15:25,760 --> 00:15:27,920
indeed the case like this the m that is

424
00:15:27,920 --> 00:15:29,839
sent by the vcds

425
00:15:29,839 --> 00:15:31,680
in the second phase is the same m that's

426
00:15:31,680 --> 00:15:33,279
committed by the committer in the second

427
00:15:33,279 --> 00:15:34,639
phase

428
00:15:34,639 --> 00:15:37,440
okay so we have extractability

429
00:15:37,440 --> 00:15:40,000
and finally equivocality use the same

430
00:15:40,000 --> 00:15:42,079
trick that you use in in the in the

431
00:15:42,079 --> 00:15:45,600
first uh in the first uh part of this uh

432
00:15:45,600 --> 00:15:46,720
like

433
00:15:46,720 --> 00:15:48,560
index in the first vocal commitment

434
00:15:48,560 --> 00:15:50,959
scheme is that uh there's zero knowledge

435
00:15:50,959 --> 00:15:54,399
proof so the the expocator can just

436
00:15:54,399 --> 00:15:57,040
run a simulation of send m prime and she

437
00:15:57,040 --> 00:15:59,440
run a simulation that

438
00:15:59,440 --> 00:16:00,480
that

439
00:16:00,480 --> 00:16:02,639
star is a commitment of m prime under

440
00:16:02,639 --> 00:16:05,839
runner's earth star

441
00:16:06,160 --> 00:16:07,440
so

442
00:16:07,440 --> 00:16:09,360
we have what i just showed is that from

443
00:16:09,360 --> 00:16:11,279
this amount of simulator verifiable cds

444
00:16:11,279 --> 00:16:13,199
we can have extractable commitments and

445
00:16:13,199 --> 00:16:14,800
the only missing step now is showing

446
00:16:14,800 --> 00:16:17,040
that from about the simulation of t we

447
00:16:17,040 --> 00:16:20,320
have this uh about the simulator vcds

448
00:16:20,320 --> 00:16:22,240
and for that we use garbage circuits and

449
00:16:22,240 --> 00:16:23,839
these are composed by three algorithms

450
00:16:23,839 --> 00:16:26,720
the garbler the encryptor and evaluator

451
00:16:26,720 --> 00:16:28,560
and the garber receives as input some

452
00:16:28,560 --> 00:16:30,160
circuit that

453
00:16:30,160 --> 00:16:33,279
maps n-bit input to a k-bit output and

454
00:16:33,279 --> 00:16:35,199
it outputs some garbo version of the

455
00:16:35,199 --> 00:16:38,079
frequency head and pairs of labels one

456
00:16:38,079 --> 00:16:41,680
pair for each input bit

457
00:16:41,839 --> 00:16:43,279
these labels are then

458
00:16:43,279 --> 00:16:44,880
the input to an encryptor that also

459
00:16:44,880 --> 00:16:46,800
receives some input x

460
00:16:46,800 --> 00:16:48,959
and using this input x it just

461
00:16:48,959 --> 00:16:50,880
chooses the right label like for each

462
00:16:50,880 --> 00:16:54,320
pair of labels it chooses the right one

463
00:16:54,320 --> 00:16:57,120
and this is what we call the the carbon

464
00:16:57,120 --> 00:16:58,320
input

465
00:16:58,320 --> 00:16:59,680
and then from the garble circuit in a

466
00:16:59,680 --> 00:17:01,440
garbage input the evaluator output some

467
00:17:01,440 --> 00:17:02,639
value y

468
00:17:02,639 --> 00:17:04,640
and we want that uh for correctness that

469
00:17:04,640 --> 00:17:07,199
y is indeed the value of c when the

470
00:17:07,199 --> 00:17:08,799
input is x

471
00:17:08,799 --> 00:17:10,480
and for security we want there exists

472
00:17:10,480 --> 00:17:12,959
some simulator guard sim such that the

473
00:17:12,959 --> 00:17:13,679
uh

474
00:17:13,679 --> 00:17:15,919
only from y so from the output of the

475
00:17:15,919 --> 00:17:17,839
evaluator the gerbil simulator can

476
00:17:17,839 --> 00:17:20,160
output pairs of circuits and

477
00:17:20,160 --> 00:17:22,079
and inputs that are indistinguishable

478
00:17:22,079 --> 00:17:23,760
from the garbled circuits and carbon

479
00:17:23,760 --> 00:17:26,079
inputs

480
00:17:26,480 --> 00:17:28,640
moreover we know that from yao's result

481
00:17:28,640 --> 00:17:30,480
in 86 that

482
00:17:30,480 --> 00:17:33,360
there are coupled schemes for

483
00:17:33,360 --> 00:17:37,039
based only on 1a functions

484
00:17:37,440 --> 00:17:40,880
so our goal now is to build uh you use

485
00:17:40,880 --> 00:17:43,039
the garbage circuits to to build these

486
00:17:43,039 --> 00:17:46,240
verifiable cds protocols

487
00:17:46,240 --> 00:17:47,919
and in this protocol again we have the

488
00:17:47,919 --> 00:17:49,760
sender receiver and let's have a first

489
00:17:49,760 --> 00:17:52,320
attempt where the sender sends the input

490
00:17:52,320 --> 00:17:53,679
to the receiver

491
00:17:53,679 --> 00:17:56,880
and then computes the the garbot circuit

492
00:17:56,880 --> 00:17:58,160
that uh

493
00:17:58,160 --> 00:17:59,919
for the secret where uh

494
00:17:59,919 --> 00:18:02,880
on input w outputs m if x w is in the

495
00:18:02,880 --> 00:18:05,360
relation or it outputs prep otherwise so

496
00:18:05,360 --> 00:18:06,000
it

497
00:18:06,000 --> 00:18:07,919
can create a gravel circuit and send it

498
00:18:07,919 --> 00:18:10,160
to the receiver and also computes the

499
00:18:10,160 --> 00:18:13,600
labels that are given as input to a no t

500
00:18:13,600 --> 00:18:15,600
functionality

501
00:18:15,600 --> 00:18:18,160
and the receiver would be able to choose

502
00:18:18,160 --> 00:18:19,600
from using the

503
00:18:19,600 --> 00:18:21,280
the witness that she has

504
00:18:21,280 --> 00:18:22,960
pick the right labels and then compute

505
00:18:22,960 --> 00:18:24,960
the grab version of the circuit

506
00:18:24,960 --> 00:18:26,880
using the evaluator

507
00:18:26,880 --> 00:18:28,799
but this is problematic because we don't

508
00:18:28,799 --> 00:18:30,960
have any guarantee that the

509
00:18:30,960 --> 00:18:32,640
the labels and the garbage circuit are

510
00:18:32,640 --> 00:18:33,919
performed correctly like they're

511
00:18:33,919 --> 00:18:35,520
implemented correctly and this could

512
00:18:35,520 --> 00:18:38,799
leak information to the receptor

513
00:18:38,799 --> 00:18:41,280
so instead of what we want is that like

514
00:18:41,280 --> 00:18:44,000
the sender will not create one version

515
00:18:44,000 --> 00:18:45,440
of the garbles or written labels but you

516
00:18:45,440 --> 00:18:47,200
do create two lambda of them or lambda

517
00:18:47,200 --> 00:18:49,360
is a security parameter

518
00:18:49,360 --> 00:18:51,520
and we send all of these garbo circuits

519
00:18:51,520 --> 00:18:52,960
together with the commitment of the

520
00:18:52,960 --> 00:18:55,440
message that was used to like the the

521
00:18:55,440 --> 00:18:58,720
the message chosen by the sender

522
00:18:58,720 --> 00:19:00,720
and the commitments of each one of the

523
00:19:00,720 --> 00:19:01,840
labels

524
00:19:01,840 --> 00:19:03,679
and on top of that it proves that all of

525
00:19:03,679 --> 00:19:05,760
these values they are consistent meaning

526
00:19:05,760 --> 00:19:07,840
m is the message used in all the garbled

527
00:19:07,840 --> 00:19:10,240
circuits and the all the commitment

528
00:19:10,240 --> 00:19:13,760
schemes they are well-formed

529
00:19:14,720 --> 00:19:16,160
then uh

530
00:19:16,160 --> 00:19:19,679
the the sender chooses a pair the labels

531
00:19:19,679 --> 00:19:21,679
in the renault is used as labels as the

532
00:19:21,679 --> 00:19:24,640
input to the old team

533
00:19:24,640 --> 00:19:26,799
and uh instead of using all of them to

534
00:19:26,799 --> 00:19:27,919
compute

535
00:19:27,919 --> 00:19:30,160
the message m the the receiver will pick

536
00:19:30,160 --> 00:19:32,080
half of them to test if the commitments

537
00:19:32,080 --> 00:19:33,440
are correct

538
00:19:33,440 --> 00:19:36,160
to to indeed uh yeah that they all

539
00:19:36,160 --> 00:19:38,320
they're all formed and half of them will

540
00:19:38,320 --> 00:19:41,039
be used for for the computation

541
00:19:41,039 --> 00:19:43,039
and for the test so for the computation

542
00:19:43,039 --> 00:19:46,240
rounds the this receiver uses the the

543
00:19:46,240 --> 00:19:49,360
actual witness uh as the input to the lt

544
00:19:49,360 --> 00:19:52,880
but for the test rounds the the the

545
00:19:52,880 --> 00:19:54,880
the receiver will pick just random bits

546
00:19:54,880 --> 00:19:57,600
as inputs to other

547
00:19:57,600 --> 00:20:00,240
and after running the ot protocol the

548
00:20:00,240 --> 00:20:02,240
the receiver aparts if the zero

549
00:20:02,240 --> 00:20:04,000
knowledge fails or if one of the sets

550
00:20:04,000 --> 00:20:06,480
round fails otherwise she can use one of

551
00:20:06,480 --> 00:20:08,720
these computation rounds to extract

552
00:20:08,720 --> 00:20:11,280
the right message

553
00:20:11,280 --> 00:20:12,320
and

554
00:20:12,320 --> 00:20:14,400
we can show that this is a cds because

555
00:20:14,400 --> 00:20:15,679
the like

556
00:20:15,679 --> 00:20:17,520
if the receiver does not have the

557
00:20:17,520 --> 00:20:18,480
witness

558
00:20:18,480 --> 00:20:20,480
then the grappled secret won't always

559
00:20:20,480 --> 00:20:22,960
output perp and then

560
00:20:22,960 --> 00:20:24,240
she cannot learn it from the garbage

561
00:20:24,240 --> 00:20:25,600
circuit

562
00:20:25,600 --> 00:20:27,280
and it's also verifiable because the

563
00:20:27,280 --> 00:20:29,679
server the sender can just output our

564
00:20:29,679 --> 00:20:31,520
star and

565
00:20:31,520 --> 00:20:33,200
the verification algorithm just checks

566
00:20:33,200 --> 00:20:35,280
that if c star is equal to this

567
00:20:35,280 --> 00:20:37,520
commitment of m sent by the

568
00:20:37,520 --> 00:20:40,159
sender in the second message

569
00:20:40,159 --> 00:20:41,679
and for that we can show correctness and

570
00:20:41,679 --> 00:20:42,799
binding

571
00:20:42,799 --> 00:20:46,159
so this finishes our uh

572
00:20:46,159 --> 00:20:49,120
um like our proof by by showing that

573
00:20:49,120 --> 00:20:50,880
from only functions in quantum we can

574
00:20:50,880 --> 00:20:54,559
build extraction commitments and ot

575
00:20:55,280 --> 00:20:56,400
uh

576
00:20:56,400 --> 00:20:58,880
so in this result we showed that the

577
00:20:58,880 --> 00:21:00,960
in general secure multiplier computation

578
00:21:00,960 --> 00:21:03,039
is mini-q crypt so we can build it from

579
00:21:03,039 --> 00:21:05,200
one a functions and quantum

580
00:21:05,200 --> 00:21:07,039
and i think the main question is what

581
00:21:07,039 --> 00:21:08,400
else can we do from only functions in

582
00:21:08,400 --> 00:21:10,080
the quantum realm so can you have that

583
00:21:10,080 --> 00:21:11,840
other functionalities that we don't know

584
00:21:11,840 --> 00:21:14,320
how to do it classically

585
00:21:14,320 --> 00:21:15,200
and

586
00:21:15,200 --> 00:21:16,559
to conclude i'd like to thank you for

587
00:21:16,559 --> 00:21:19,559
attention

