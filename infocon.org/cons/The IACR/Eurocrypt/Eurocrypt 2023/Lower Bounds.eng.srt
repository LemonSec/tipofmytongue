1
00:00:01,140 --> 00:00:02,399
okay

2
00:00:02,399 --> 00:00:04,860
um welcome to this first regular session

3
00:00:04,860 --> 00:00:07,980
of eurocrypt 2023 you know happy to see

4
00:00:07,980 --> 00:00:09,480
so many people in this room on this

5
00:00:09,480 --> 00:00:11,460
session on Lower bounds so this is like

6
00:00:11,460 --> 00:00:13,019
a double feature there's going to be two

7
00:00:13,019 --> 00:00:15,000
two consecutive sessions on Lower bounds

8
00:00:15,000 --> 00:00:16,859
and we opened this session with the

9
00:00:16,859 --> 00:00:18,480
paper that got the early career best

10
00:00:18,480 --> 00:00:21,180
paper award for Akin unal so Applause

11
00:00:21,180 --> 00:00:23,060
yeah

12
00:00:23,060 --> 00:00:26,810
[Applause]

13
00:00:27,300 --> 00:00:29,699
and the title of this talk is worse his

14
00:00:29,699 --> 00:00:31,019
sub-exponential attack on Sudan

15
00:00:31,019 --> 00:00:32,940
regenerators of constant degree or

16
00:00:32,940 --> 00:00:35,340
constant locality

17
00:00:35,340 --> 00:00:37,320
um so the stage is yours and you know

18
00:00:37,320 --> 00:00:39,140
the talk is going to be like 17 minutes

19
00:00:39,140 --> 00:00:41,460
after that if you have questions please

20
00:00:41,460 --> 00:00:43,200
come forward to the microphones and ask

21
00:00:43,200 --> 00:00:47,000
them there and you

22
00:00:47,460 --> 00:00:51,260
does anyone have a laser pointer

23
00:00:51,840 --> 00:00:54,360
yeah maybe we find one for the next

24
00:00:54,360 --> 00:00:58,379
speaker I I didn't realize okay

25
00:00:58,379 --> 00:00:59,940
um hello everybody I hope you can

26
00:00:59,940 --> 00:01:01,500
understand me

27
00:01:01,500 --> 00:01:04,260
um let's get right to a meta yeah I

28
00:01:04,260 --> 00:01:06,360
would solve the personal motivation

29
00:01:06,360 --> 00:01:08,700
um why do I think ASAP exponential

30
00:01:08,700 --> 00:01:11,880
attacks on PhD is even interesting

31
00:01:11,880 --> 00:01:14,460
um yeah the reasons uh my personal

32
00:01:14,460 --> 00:01:16,799
motivations there are two in my eyes

33
00:01:16,799 --> 00:01:18,900
interesting uh office location

34
00:01:18,900 --> 00:01:21,479
candidates ah thank you

35
00:01:21,479 --> 00:01:24,600
two uh interesting candidates um one

36
00:01:24,600 --> 00:01:26,939
from Game Pass and one phone drained in

37
00:01:26,939 --> 00:01:29,700
the high and Jane is a high need besides

38
00:01:29,700 --> 00:01:32,880
other stuff local phds of poly switch

39
00:01:32,880 --> 00:01:35,159
but here's the thing

40
00:01:35,159 --> 00:01:39,140
both uh candidates need something

41
00:01:39,140 --> 00:01:42,240
exponential security so both assume that

42
00:01:42,240 --> 00:01:46,680
their Primitives are secure uh or that

43
00:01:46,680 --> 00:01:49,560
each official necessary has advantages

44
00:01:49,560 --> 00:01:52,079
lower Bound by example subx

45
00:01:52,079 --> 00:01:55,320
exponentially small function

46
00:01:55,320 --> 00:01:58,979
so um my Isis justifies why sub

47
00:01:58,979 --> 00:02:01,320
exponential time attacks are interesting

48
00:02:01,320 --> 00:02:03,840
even if they are

49
00:02:03,840 --> 00:02:05,640
need more time than efficient normal

50
00:02:05,640 --> 00:02:07,439
attacks

51
00:02:07,439 --> 00:02:10,258
okay um to make them come ground

52
00:02:10,258 --> 00:02:12,660
um I will usually talk about are we a

53
00:02:12,660 --> 00:02:15,420
bit General uh generalize our bits or

54
00:02:15,420 --> 00:02:18,660
arithmetize a bit to an ocean of PhD

55
00:02:18,660 --> 00:02:21,660
so your phds I will talk about here they

56
00:02:21,660 --> 00:02:24,540
um go from Prime field elements to Prime

57
00:02:24,540 --> 00:02:27,000
field elements and they have pulley

58
00:02:27,000 --> 00:02:27,900
switch

59
00:02:27,900 --> 00:02:31,400
so the number of output elements always

60
00:02:31,400 --> 00:02:35,280
a number of input elements

61
00:02:35,280 --> 00:02:38,580
and and Tech distinguishers so we only

62
00:02:38,580 --> 00:02:40,920
attack with two Realms and Tech has to

63
00:02:40,920 --> 00:02:43,500
distinguish the output of a PhD for some

64
00:02:43,500 --> 00:02:46,440
random seed or some random input from a

65
00:02:46,440 --> 00:02:49,379
uniform uh Randomness uh from this

66
00:02:49,379 --> 00:02:52,019
codomain of a PhD

67
00:02:52,019 --> 00:02:55,920
and um for if our modulus or curses

68
00:02:55,920 --> 00:02:58,319
equals two then we just have normal

69
00:02:58,319 --> 00:03:03,120
binary pngs from uh zero one to zero one

70
00:03:03,120 --> 00:03:05,540
and I'm going to make a convention here

71
00:03:05,540 --> 00:03:08,819
but if I have always denote the function

72
00:03:08,819 --> 00:03:13,280
that computes the I've output of our PhD

73
00:03:13,319 --> 00:03:14,700
exactly

74
00:03:14,700 --> 00:03:16,500
okay then I'm going to introduce two

75
00:03:16,500 --> 00:03:19,379
definitions um so when I talk about

76
00:03:19,379 --> 00:03:23,280
local phds I mean binary phds where each

77
00:03:23,280 --> 00:03:25,680
output bit only depends on a constant

78
00:03:25,680 --> 00:03:28,500
number of input bits so each fi X is a

79
00:03:28,500 --> 00:03:30,920
local function

80
00:03:30,920 --> 00:03:33,599
PhD always on Prime field has a

81
00:03:33,599 --> 00:03:36,000
algebraic with d that I mean that each

82
00:03:36,000 --> 00:03:38,760
function fi which is which computes its

83
00:03:38,760 --> 00:03:40,920
eye output value is a polynomial

84
00:03:40,920 --> 00:03:44,819
oversight model P of total degree d

85
00:03:44,819 --> 00:03:47,940
okay so uh there are basic two results

86
00:03:47,940 --> 00:03:50,819
uh first results is uh not entirely in

87
00:03:50,819 --> 00:03:53,280
use of extension attack on arithmetic

88
00:03:53,280 --> 00:03:57,140
phds or phds of constant degree

89
00:03:57,260 --> 00:04:00,299
however attack only works well when we

90
00:04:00,299 --> 00:04:02,819
uh our modulus p is high enough

91
00:04:02,819 --> 00:04:06,180
if our modulus p is too low then we uh

92
00:04:06,180 --> 00:04:08,519
cannot guarantee High Advantage anymore

93
00:04:08,519 --> 00:04:10,319
and this introduced with the second

94
00:04:10,319 --> 00:04:13,080
technique or second idea we um if you

95
00:04:13,080 --> 00:04:15,900
have let's say a binary PhD we hash it

96
00:04:15,900 --> 00:04:18,238
to a larger field so we make a reduction

97
00:04:18,238 --> 00:04:20,639
and then we can apply this base

98
00:04:20,639 --> 00:04:23,280
algebraic attack again and then you get

99
00:04:23,280 --> 00:04:26,880
an attack for local phds over binaries

100
00:04:26,880 --> 00:04:28,620
which always has a guaranteed High

101
00:04:28,620 --> 00:04:31,100
advantage

102
00:04:31,320 --> 00:04:33,720
okay so let's start off with a basic

103
00:04:33,720 --> 00:04:37,380
algebraic attack so we have a phdf ozone

104
00:04:37,380 --> 00:04:40,139
Prime field of constant degree d

105
00:04:40,139 --> 00:04:42,540
uh how can we distinguish image points

106
00:04:42,540 --> 00:04:44,580
from random points

107
00:04:44,580 --> 00:04:46,199
and our first 30 years we start very

108
00:04:46,199 --> 00:04:47,639
simple we assume we have a linear

109
00:04:47,639 --> 00:04:48,860
relationship

110
00:04:48,860 --> 00:04:51,180
between those functions Computing the

111
00:04:51,180 --> 00:04:53,520
outputs of our PhD

112
00:04:53,520 --> 00:04:56,040
so a linear relationship is

113
00:04:56,040 --> 00:04:59,460
such a vector y non-zero such as this

114
00:04:59,460 --> 00:05:01,440
equality here

115
00:05:01,440 --> 00:05:03,900
does hold on polynomial level

116
00:05:03,900 --> 00:05:06,780
so this thing here is really the 0.9 all

117
00:05:06,780 --> 00:05:09,600
of X variables

118
00:05:09,600 --> 00:05:11,040
um and now

119
00:05:11,040 --> 00:05:13,440
really easy how to distinguish image

120
00:05:13,440 --> 00:05:15,840
points from random points

121
00:05:15,840 --> 00:05:18,600
um if we get are given some point Y we

122
00:05:18,600 --> 00:05:20,400
can compute the scale product of Y with

123
00:05:20,400 --> 00:05:23,220
this linear relationship V

124
00:05:23,220 --> 00:05:25,759
and if this thing vanishes

125
00:05:25,759 --> 00:05:29,400
then we judge that we were given our in

126
00:05:29,400 --> 00:05:33,720
image points because whenever y has this

127
00:05:33,720 --> 00:05:37,320
shape here those comes from f x then

128
00:05:37,320 --> 00:05:39,960
then about this scalar product here must

129
00:05:39,960 --> 00:05:40,800
vanish

130
00:05:40,800 --> 00:05:42,780
but if Y is random and probability of

131
00:05:42,780 --> 00:05:44,759
this scalar product vanishes is exactly

132
00:05:44,759 --> 00:05:46,800
one over p

133
00:05:46,800 --> 00:05:48,660
yeah so um

134
00:05:48,660 --> 00:05:50,220
or

135
00:05:50,220 --> 00:05:52,320
probability to make a mistake is at most

136
00:05:52,320 --> 00:05:53,520
one over p

137
00:05:53,520 --> 00:05:56,759
by using this linear ratio of y v

138
00:05:56,759 --> 00:05:59,039
so this is the advantage of one minus

139
00:05:59,039 --> 00:06:01,680
one over p

140
00:06:01,680 --> 00:06:03,240
um how does a problem this is a nice

141
00:06:03,240 --> 00:06:05,699
nice talk about the most likely not uh

142
00:06:05,699 --> 00:06:07,800
be applicable because in most cases or

143
00:06:07,800 --> 00:06:11,160
in general those uh Computing output of

144
00:06:11,160 --> 00:06:13,800
FF there will not be a linear dependent

145
00:06:13,800 --> 00:06:15,180
because otherwise it will be a very bad

146
00:06:15,180 --> 00:06:18,479
PhD so uh we're gonna generalize this

147
00:06:18,479 --> 00:06:19,979
concept of a linear relationship and

148
00:06:19,979 --> 00:06:22,139
this idea dates back to uh the mass

149
00:06:22,139 --> 00:06:25,259
piece of Leo secon uh Warrior head side

150
00:06:25,259 --> 00:06:26,699
here

151
00:06:26,699 --> 00:06:27,840
um

152
00:06:27,840 --> 00:06:29,940
uh so I'm going to call it doesn't

153
00:06:29,940 --> 00:06:32,160
algebraic relationship that's uh it's a

154
00:06:32,160 --> 00:06:33,720
new normal age

155
00:06:33,720 --> 00:06:37,080
in M new variables y1 up to y m such

156
00:06:37,080 --> 00:06:38,819
that H or that's not the zero polynomial

157
00:06:38,819 --> 00:06:40,860
that's important but if you plug in

158
00:06:40,860 --> 00:06:43,620
those F polynomials into H then you get

159
00:06:43,620 --> 00:06:44,940
to the zero polynomial over the X

160
00:06:44,940 --> 00:06:46,080
variables

161
00:06:46,080 --> 00:06:48,060
that's how we generalize the concept of

162
00:06:48,060 --> 00:06:50,340
our linear relationship

163
00:06:50,340 --> 00:06:51,720
and now we can use H again to

164
00:06:51,720 --> 00:06:53,280
distinguish image points from random

165
00:06:53,280 --> 00:06:54,300
points because

166
00:06:54,300 --> 00:06:58,199
um for each potential seed X when we uh

167
00:06:58,199 --> 00:07:01,139
put X into F and then put this image

168
00:07:01,139 --> 00:07:02,539
Point into age

169
00:07:02,539 --> 00:07:06,060
this thing must vanish because H after F

170
00:07:06,060 --> 00:07:08,460
must be zero polynomial it must manage

171
00:07:08,460 --> 00:07:10,319
for each possible z d x

172
00:07:10,319 --> 00:07:11,940
but if you take a if you take a random

173
00:07:11,940 --> 00:07:13,860
point Y then I claim it to the

174
00:07:13,860 --> 00:07:16,199
probability that H dimensions on Y is a

175
00:07:16,199 --> 00:07:18,479
lower Point by degree of H over modulus

176
00:07:18,479 --> 00:07:20,819
p and it's because of a famous schwarzip

177
00:07:20,819 --> 00:07:22,919
dilemma

178
00:07:22,919 --> 00:07:25,919
exactly so we make a mistake with

179
00:07:25,919 --> 00:07:28,139
probably at most degree of H over p is

180
00:07:28,139 --> 00:07:31,259
our advantages uh one mycp of hrp

181
00:07:31,259 --> 00:07:33,960
um there are two problems uh how can we

182
00:07:33,960 --> 00:07:35,819
compute H and actually more important

183
00:07:35,819 --> 00:07:37,860
what's Never Bound for with this degree

184
00:07:37,860 --> 00:07:39,479
of age

185
00:07:39,479 --> 00:07:41,819
uh and we are going to solve both

186
00:07:41,819 --> 00:07:42,900
problems

187
00:07:42,900 --> 00:07:45,300
um about hand wavy

188
00:07:45,300 --> 00:07:48,360
so now uh Ultra comes into play

189
00:07:48,360 --> 00:07:50,280
um this may seem a bit random but we're

190
00:07:50,280 --> 00:07:51,479
going to consider this ring home office

191
00:07:51,479 --> 00:07:54,479
from here so five Maps pronouns over y

192
00:07:54,479 --> 00:07:57,240
to polynomials over X by substituting

193
00:07:57,240 --> 00:07:58,860
each variable with its corresponding F

194
00:07:58,860 --> 00:08:01,860
polynomial and first thing files are

195
00:08:01,860 --> 00:08:05,060
ring home officer

196
00:08:06,560 --> 00:08:08,819
contains all algebraic relationships so

197
00:08:08,819 --> 00:08:10,560
all opponents a lot of interest for us

198
00:08:10,560 --> 00:08:13,740
are contained this kernel of Phi

199
00:08:13,740 --> 00:08:16,500
the problem is the domain of Pi has

200
00:08:16,500 --> 00:08:18,479
infinite Dimensions Vector space that's

201
00:08:18,479 --> 00:08:20,539
bad for us so we're going to restrict it

202
00:08:20,539 --> 00:08:23,099
so we are now looking at this

203
00:08:23,099 --> 00:08:24,740
Subspace here

204
00:08:24,740 --> 00:08:28,680
065 to its domain to the Subspace here

205
00:08:28,680 --> 00:08:31,020
another space of all polynomials G of

206
00:08:31,020 --> 00:08:32,700
degree at most l

207
00:08:32,700 --> 00:08:35,339
and why we actually are also restricted

208
00:08:35,339 --> 00:08:38,159
co-domain of Phi uh to another Subspace

209
00:08:38,159 --> 00:08:40,979
of polynomials of bound degree and

210
00:08:40,979 --> 00:08:44,580
that's good now because now uh so maybe

211
00:08:44,580 --> 00:08:47,459
1.5 the square of Pi L an output is all

212
00:08:47,459 --> 00:08:49,200
algebra relationships which have some

213
00:08:49,200 --> 00:08:50,640
boundary degree

214
00:08:50,640 --> 00:08:54,360
and now we can bound uh or we can give a

215
00:08:54,360 --> 00:08:56,760
bounce for dimension of this kernel file

216
00:08:56,760 --> 00:08:59,040
because of this of a dimension formula

217
00:08:59,040 --> 00:09:01,380
for linear Maps you know that the kernel

218
00:09:01,380 --> 00:09:03,779
Phile is Dimensions that these two

219
00:09:03,779 --> 00:09:05,459
dimension of its domain minus the

220
00:09:05,459 --> 00:09:07,080
dimension of this codomain

221
00:09:07,080 --> 00:09:09,180
uh and it's good because

222
00:09:09,180 --> 00:09:11,040
um its domain codomain are simple

223
00:09:11,040 --> 00:09:13,380
Subspace of polynomials of bound degree

224
00:09:13,380 --> 00:09:15,720
we can compute the data management we

225
00:09:15,720 --> 00:09:17,339
know uh monomial base for those

226
00:09:17,339 --> 00:09:18,899
subspaces so we can compute the

227
00:09:18,899 --> 00:09:20,880
dimensions

228
00:09:20,880 --> 00:09:23,160
and those are the dimensions

229
00:09:23,160 --> 00:09:26,470
and what we have now shown is basically

230
00:09:26,470 --> 00:09:27,560
[Music]

231
00:09:27,560 --> 00:09:30,180
implications we know that such an

232
00:09:30,180 --> 00:09:32,459
algebraic later of degree at most L must

233
00:09:32,459 --> 00:09:33,540
exists

234
00:09:33,540 --> 00:09:35,640
whenever this inequality is fulfilled

235
00:09:35,640 --> 00:09:37,440
and this is a simple artificial

236
00:09:37,440 --> 00:09:38,940
inequality we can

237
00:09:38,940 --> 00:09:40,260
um

238
00:09:40,260 --> 00:09:42,360
you can wrap this and by doing a bit of

239
00:09:42,360 --> 00:09:44,940
math you can show this inequality so

240
00:09:44,940 --> 00:09:46,440
full whenever this inequality here

241
00:09:46,440 --> 00:09:48,180
results

242
00:09:48,180 --> 00:09:51,540
and this is all about uh for degree of H

243
00:09:51,540 --> 00:09:53,940
uh and this is something a function so

244
00:09:53,940 --> 00:09:57,000
our algebraic relationship age has if

245
00:09:57,000 --> 00:10:00,019
you have a polynomial many polynomials

246
00:10:00,019 --> 00:10:05,360
uh a sub linear linearly boundary degree

247
00:10:05,519 --> 00:10:08,339
okay uh so may one last thing how do we

248
00:10:08,339 --> 00:10:10,940
compute h

249
00:10:11,100 --> 00:10:12,839
uh we know that this current here must

250
00:10:12,839 --> 00:10:15,959
contain H with L is large enough so how

251
00:10:15,959 --> 00:10:17,940
do we compute this kernel file or

252
00:10:17,940 --> 00:10:20,160
compute sum 11 out of it it's actually

253
00:10:20,160 --> 00:10:22,920
quite simple the computer major is

254
00:10:22,920 --> 00:10:25,680
representational file so the reasons we

255
00:10:25,680 --> 00:10:30,000
know how to evaluate file we know base a

256
00:10:30,000 --> 00:10:31,980
base for this Subspace a base for this

257
00:10:31,980 --> 00:10:34,200
Subspace so you can compute The Matrix

258
00:10:34,200 --> 00:10:35,700
the presentation of file

259
00:10:35,700 --> 00:10:37,980
and then we solve for the kernel file we

260
00:10:37,980 --> 00:10:40,940
are gaussian elimination

261
00:10:41,040 --> 00:10:43,640
okay

262
00:10:43,800 --> 00:10:45,959
so discussed also following algebraic

263
00:10:45,959 --> 00:10:48,000
attack which dates back to sequence

264
00:10:48,000 --> 00:10:50,399
Master thesis

265
00:10:50,399 --> 00:10:54,180
if you have some uh constantly PhD uh we

266
00:10:54,180 --> 00:10:57,060
want and you're giving some point why uh

267
00:10:57,060 --> 00:10:58,560
we wanted to design this while it's an

268
00:10:58,560 --> 00:11:01,320
image point a random point we do a

269
00:11:01,320 --> 00:11:03,300
following first compute is bound l or

270
00:11:03,300 --> 00:11:05,100
some high enough bound l

271
00:11:05,100 --> 00:11:06,839
your computer's ultimate relationship

272
00:11:06,839 --> 00:11:09,540
age of degree L and then we just

273
00:11:09,540 --> 00:11:12,140
evaluate h

274
00:11:12,360 --> 00:11:15,060
values we say yes that was an image

275
00:11:15,060 --> 00:11:17,279
Point otherwise they know that was a

276
00:11:17,279 --> 00:11:19,760
random point

277
00:11:20,339 --> 00:11:22,560
uh in the time complexity of this

278
00:11:22,560 --> 00:11:24,660
so here's the thing I didn't really go

279
00:11:24,660 --> 00:11:26,459
into details uh

280
00:11:26,459 --> 00:11:28,380
so what we're going to the type of ways

281
00:11:28,380 --> 00:11:31,339
of this step here but I'm telling you

282
00:11:31,339 --> 00:11:34,800
finding H is basically as complicated as

283
00:11:34,800 --> 00:11:36,660
As Time consumers evaluating Edge

284
00:11:36,660 --> 00:11:38,760
because the degree of H is that high so

285
00:11:38,760 --> 00:11:40,579
time complex is based dominated by

286
00:11:40,579 --> 00:11:43,980
evaluating age which is basically uh

287
00:11:43,980 --> 00:11:45,660
obviously which is dominated by a number

288
00:11:45,660 --> 00:11:48,660
of variables M to power over degree of

289
00:11:48,660 --> 00:11:51,600
age and if you unwrap 12 then you get

290
00:11:51,600 --> 00:11:54,300
this complexity class here so that's the

291
00:11:54,300 --> 00:11:56,100
basically time and very complexity of

292
00:11:56,100 --> 00:11:57,959
our algorithm

293
00:11:57,959 --> 00:11:59,579
an advantage

294
00:11:59,579 --> 00:12:01,380
um well probably if you make a mistake

295
00:12:01,380 --> 00:12:03,839
as a degree of H over P because of short

296
00:12:03,839 --> 00:12:06,839
simple so Advantage is basically this

297
00:12:06,839 --> 00:12:08,450
term here

298
00:12:08,450 --> 00:12:09,779
[Music]

299
00:12:09,779 --> 00:12:12,540
in order to cases

300
00:12:12,540 --> 00:12:14,640
this is a high Advantage if our modulus

301
00:12:14,640 --> 00:12:16,800
p is large enough and this is a very bad

302
00:12:16,800 --> 00:12:18,839
uh we cannot really give guarantees

303
00:12:18,839 --> 00:12:21,000
anymore with our modulus p is uh too

304
00:12:21,000 --> 00:12:23,100
small

305
00:12:23,100 --> 00:12:24,899
um so the next step you want to solve

306
00:12:24,899 --> 00:12:27,360
this problem for at least the case that

307
00:12:27,360 --> 00:12:29,940
we have that P equals to

308
00:12:29,940 --> 00:12:32,100
and our idea to solve this problems uh

309
00:12:32,100 --> 00:12:33,660
we're gonna do something which I call

310
00:12:33,660 --> 00:12:36,480
hashing pfgs and hashing the outputs

311
00:12:36,480 --> 00:12:39,120
you're going to take a local PhD and

312
00:12:39,120 --> 00:12:41,399
turn it to a constant degree plg whose

313
00:12:41,399 --> 00:12:44,399
code domain is over a larger fields

314
00:12:44,399 --> 00:12:47,040
for a large enough modulus P Prime modus

315
00:12:47,040 --> 00:12:48,720
p in one of the number of output

316
00:12:48,720 --> 00:12:49,920
elements is

317
00:12:49,920 --> 00:12:52,260
close to number and primes close to

318
00:12:52,260 --> 00:12:56,760
number of output MSM of our form of phdf

319
00:12:56,760 --> 00:12:59,279
uh I mean proceed as follows uh so I'm

320
00:12:59,279 --> 00:13:01,860
just going to write all down here we

321
00:13:01,860 --> 00:13:05,040
choose a prime P large enough then set M

322
00:13:05,040 --> 00:13:08,940
Prime to M over Phi log P so M Prime is

323
00:13:08,940 --> 00:13:10,260
close to M

324
00:13:10,260 --> 00:13:12,839
um up to some logography Factor then we

325
00:13:12,839 --> 00:13:16,019
draw a random Matrix a for hashing and

326
00:13:16,019 --> 00:13:18,480
then we compute a new pre-image a new

327
00:13:18,480 --> 00:13:21,120
image on a new potential image y Prime

328
00:13:21,120 --> 00:13:23,700
as a times Y and this makes sense

329
00:13:23,700 --> 00:13:26,279
because according to a hash law then y

330
00:13:26,279 --> 00:13:27,959
was truly random

331
00:13:27,959 --> 00:13:30,060
then y Prime will be very close to be

332
00:13:30,060 --> 00:13:31,500
truly random

333
00:13:31,500 --> 00:13:35,399
so that makes sense there and then um I

334
00:13:35,399 --> 00:13:38,040
call this compute g equals a times F

335
00:13:38,040 --> 00:13:40,620
that's a very handwriting what I mean

336
00:13:40,620 --> 00:13:43,260
just repeat a g g

337
00:13:43,260 --> 00:13:46,260
every first average F and then computes

338
00:13:46,260 --> 00:13:49,260
the output of f with Matrix a that's

339
00:13:49,260 --> 00:13:51,600
what this PhD G does

340
00:13:51,600 --> 00:13:52,380
um

341
00:13:52,380 --> 00:13:54,180
and now we can ask okay

342
00:13:54,180 --> 00:13:56,579
um for algebraic attack we need that PM

343
00:13:56,579 --> 00:13:58,860
with G is some is computed by constant

344
00:13:58,860 --> 00:14:01,019
degree polynomials y should that be the

345
00:14:01,019 --> 00:14:01,940
case

346
00:14:01,940 --> 00:14:04,260
I'm not going to detail here but you can

347
00:14:04,260 --> 00:14:07,560
it's kind of easy to to show that g is

348
00:14:07,560 --> 00:14:09,120
um is configured by constantly

349
00:14:09,120 --> 00:14:11,279
polynomials imagery of those polynomials

350
00:14:11,279 --> 00:14:12,620
equals the

351
00:14:12,620 --> 00:14:14,579
locality of f

352
00:14:14,579 --> 00:14:16,920
so basically gets some kind of

353
00:14:16,920 --> 00:14:18,660
um conversional trade-off here if you

354
00:14:18,660 --> 00:14:21,420
start a local PNG return to a constant

355
00:14:21,420 --> 00:14:24,660
vplg and the degree of a new plg equals

356
00:14:24,660 --> 00:14:27,920
the locality of the all PNG

357
00:14:28,139 --> 00:14:29,519
yeah

358
00:14:29,519 --> 00:14:30,420
um

359
00:14:30,420 --> 00:14:32,700
and this now be specifying our algorithm

360
00:14:32,700 --> 00:14:34,320
I was going to just put it down here

361
00:14:34,320 --> 00:14:36,720
it's just a combination of it both

362
00:14:36,720 --> 00:14:37,620
things

363
00:14:37,620 --> 00:14:39,779
um we again draw this random Matrix a

364
00:14:39,779 --> 00:14:44,940
here uh B Hash Hash or PNG we hash our

365
00:14:44,940 --> 00:14:47,000
output y or

366
00:14:47,000 --> 00:14:49,800
potential random point Y

367
00:14:49,800 --> 00:14:52,199
then you are going to use this base

368
00:14:52,199 --> 00:14:54,120
algebraic algorithm again this will

369
00:14:54,120 --> 00:14:57,360
compute this algebra relationship h of

370
00:14:57,360 --> 00:15:00,600
sublinear degree so here's the thing um

371
00:15:00,600 --> 00:15:03,420
our degree got a bit larger

372
00:15:03,420 --> 00:15:04,920
the reason is

373
00:15:04,920 --> 00:15:05,880
um

374
00:15:05,880 --> 00:15:08,820
the reasons uh this output of uh G note

375
00:15:08,820 --> 00:15:10,320
got a bit smaller we got small

376
00:15:10,320 --> 00:15:12,959
biolographic factor so the output of a

377
00:15:12,959 --> 00:15:15,779
degree of this pressure H has got a

378
00:15:15,779 --> 00:15:18,720
large by a small logarithmic Factor

379
00:15:18,720 --> 00:15:20,040
yeah

380
00:15:20,040 --> 00:15:22,500
um and then after you have computed H we

381
00:15:22,500 --> 00:15:24,600
apply to this potential output image

382
00:15:24,600 --> 00:15:27,000
point Y Prime of g g

383
00:15:27,000 --> 00:15:29,880
and if a Adventures is over D Prime was

384
00:15:29,880 --> 00:15:32,519
an image point of G so Y Must Be A

385
00:15:32,519 --> 00:15:34,560
damage point of f

386
00:15:34,560 --> 00:15:36,720
if it doesn't manage we know for sure

387
00:15:36,720 --> 00:15:39,600
that y Prime was an image point for G is

388
00:15:39,600 --> 00:15:43,220
all y cannot be an image one plus

389
00:15:43,800 --> 00:15:45,240
yeah and the time complex against

390
00:15:45,240 --> 00:15:48,120
dominated by every aging age which is n

391
00:15:48,120 --> 00:15:51,000
to the slightly larger term here so we

392
00:15:51,000 --> 00:15:53,760
get a small algorithmic factor here in

393
00:15:53,760 --> 00:15:55,620
exponents

394
00:15:55,620 --> 00:15:57,600
an advantage channel is always high

395
00:15:57,600 --> 00:15:59,519
because the advantage is one minus

396
00:15:59,519 --> 00:16:01,680
degree of H or this new modulus P which

397
00:16:01,680 --> 00:16:03,660
is at least n

398
00:16:03,660 --> 00:16:06,540
so it's 1 minus a term which will

399
00:16:06,540 --> 00:16:09,480
converge towards zero

400
00:16:09,480 --> 00:16:11,339
exactly

401
00:16:11,339 --> 00:16:12,120
um

402
00:16:12,120 --> 00:16:14,760
okay I hope this wasn't too fast uh I

403
00:16:14,760 --> 00:16:17,220
want to close with an overview of uh

404
00:16:17,220 --> 00:16:20,639
some relevant attacks on phds

405
00:16:20,639 --> 00:16:22,920
um important things this accency doesn't

406
00:16:22,920 --> 00:16:24,839
show the runtime shows the logarithm of

407
00:16:24,839 --> 00:16:27,180
the runtime so for example this term

408
00:16:27,180 --> 00:16:28,620
here means um

409
00:16:28,620 --> 00:16:31,079
time complex here complexity to a power

410
00:16:31,079 --> 00:16:34,980
tool all this term here

411
00:16:34,980 --> 00:16:37,320
yeah and if you have two power of n you

412
00:16:37,320 --> 00:16:39,540
get Brute Force attacks earned for 212

413
00:16:39,540 --> 00:16:41,519
login some constantly get efficient

414
00:16:41,519 --> 00:16:43,639
attacks

415
00:16:43,639 --> 00:16:45,959
let's first start with attacks on

416
00:16:45,959 --> 00:16:49,740
constant vplgs up to minor knowledge we

417
00:16:49,740 --> 00:16:51,779
only have basically have two for those

418
00:16:51,779 --> 00:16:54,720
of our phds which required by arithmetic

419
00:16:54,720 --> 00:16:57,920
polynomials of constant green

420
00:16:58,199 --> 00:17:01,980
the global space attacks so f45 and RXL

421
00:17:01,980 --> 00:17:02,839
text

422
00:17:02,839 --> 00:17:06,059
which here you see the outputs if you

423
00:17:06,059 --> 00:17:08,640
think of a breaking rainbow for example

424
00:17:08,640 --> 00:17:12,260
on a weekend uh bullens Houston uh

425
00:17:12,260 --> 00:17:14,939
parallel so in previously they are

426
00:17:14,939 --> 00:17:17,099
bounded by you can bounded runtime by a

427
00:17:17,099 --> 00:17:19,199
degree of regularity

428
00:17:19,199 --> 00:17:19,799
um

429
00:17:19,799 --> 00:17:21,480
formally we cannot really give good

430
00:17:21,480 --> 00:17:22,799
guarantees for those kind of attacks

431
00:17:22,799 --> 00:17:23,939
because Computing web base is

432
00:17:23,939 --> 00:17:27,000
complicated it's has a bad worst case

433
00:17:27,000 --> 00:17:27,959
run time

434
00:17:27,959 --> 00:17:30,240
because I thought there was this attack

435
00:17:30,240 --> 00:17:32,340
from sequence Master fuses and we showed

436
00:17:32,340 --> 00:17:33,720
you this this affects three years of

437
00:17:33,720 --> 00:17:35,039
exponential attack so it has high

438
00:17:35,039 --> 00:17:39,020
advantage and this runtime here

439
00:17:39,380 --> 00:17:41,640
for local phds it's a bit more

440
00:17:41,640 --> 00:17:43,700
complicated we only have 15 seconds

441
00:17:43,700 --> 00:17:46,559
there are a lot of attacks here

442
00:17:46,559 --> 00:17:48,720
this base algebraic has too low

443
00:17:48,720 --> 00:17:51,539
Advantage but the the second

444
00:17:51,539 --> 00:17:52,860
contribution of this pair will be kind

445
00:17:52,860 --> 00:17:55,140
of save it by hashing it

446
00:17:55,140 --> 00:17:57,000
unfortunately not faster than the

447
00:17:57,000 --> 00:17:59,820
fastest algorithm for local plg so first

448
00:17:59,820 --> 00:18:01,620
algorithm is given by shrinking setback

449
00:18:01,620 --> 00:18:04,740
text which is by our log factor and

450
00:18:04,740 --> 00:18:06,419
exponent faster than this attack here in

451
00:18:06,419 --> 00:18:08,720
this paper

452
00:18:08,760 --> 00:18:11,520
okay I would close here

453
00:18:11,520 --> 00:18:14,660
um thank you for your attention

454
00:18:18,539 --> 00:18:20,600
thank you

455
00:18:22,460 --> 00:18:25,020
thanks for that excellent talk

456
00:18:25,020 --> 00:18:26,460
um so if you have questions please come

457
00:18:26,460 --> 00:18:29,059
forward and

458
00:18:34,260 --> 00:18:36,480
and I thank you for the nice talk and

459
00:18:36,480 --> 00:18:39,059
the brilliant results uh are there any

460
00:18:39,059 --> 00:18:40,980
generalization or is it interesting to

461
00:18:40,980 --> 00:18:43,020
consider General finite Fields rather

462
00:18:43,020 --> 00:18:45,840
than just Prime finite fields

463
00:18:45,840 --> 00:18:47,940
yeah

464
00:18:47,940 --> 00:18:49,919
um thanks for this question we are just

465
00:18:49,919 --> 00:18:51,179
listening to something

466
00:18:51,179 --> 00:18:54,179
else a new paper

467
00:18:54,179 --> 00:18:56,160
um because this hashing technique I used

468
00:18:56,160 --> 00:18:58,679
here is sub-optimal is it's not it's not

469
00:18:58,679 --> 00:19:00,600
good you can improve this substantially

470
00:19:00,600 --> 00:19:03,240
when you instead of offset model two to

471
00:19:03,240 --> 00:19:05,100
segment P you go from set mode 2 to an

472
00:19:05,100 --> 00:19:07,260
extension field in this preserves degree

473
00:19:07,260 --> 00:19:10,140
and then you get a new paper which I

474
00:19:10,140 --> 00:19:11,940
uploaded last week on ePrint still not

475
00:19:11,940 --> 00:19:14,460
online on rcy which has a way faster

476
00:19:14,460 --> 00:19:16,679
runtime more important to run off this

477
00:19:16,679 --> 00:19:18,480
iPhone only personal degree of the PHD

478
00:19:18,480 --> 00:19:21,059
so it's applicable to non-local phds

479
00:19:21,059 --> 00:19:23,640
however binaries it always has a high

480
00:19:23,640 --> 00:19:27,360
advantage and yeah it's faster all those

481
00:19:27,360 --> 00:19:28,679
attacks because it just depends on

482
00:19:28,679 --> 00:19:30,539
really not on locality anymore

483
00:19:30,539 --> 00:19:32,160
so yeah there are good reasons to

484
00:19:32,160 --> 00:19:33,980
consider non

485
00:19:33,980 --> 00:19:36,480
non-prime fields which are large like

486
00:19:36,480 --> 00:19:39,120
exchange of set model 2.

487
00:19:39,120 --> 00:19:41,160
I was not paid for this question I

488
00:19:41,160 --> 00:19:43,520
promise

489
00:19:46,080 --> 00:19:48,120
the other short question you look at

490
00:19:48,120 --> 00:19:50,280
prgs but if you look at prfs which you

491
00:19:50,280 --> 00:19:52,020
can think of as prgs with very long

492
00:19:52,020 --> 00:19:53,940
stretch in some sense so maybe it's even

493
00:19:53,940 --> 00:19:56,580
more applicable in that context

494
00:19:56,580 --> 00:20:00,620
uh oh I never thought about you

495
00:20:11,400 --> 00:20:14,760
right does um so there was a another

496
00:20:14,760 --> 00:20:18,000
paper uh vrf paper from me Dennis Julia

497
00:20:18,000 --> 00:20:21,240
and Nico and we looked at peer vrfs

498
00:20:21,240 --> 00:20:24,000
where five random functions um with uh

499
00:20:24,000 --> 00:20:25,919
where your your computer honest and put

500
00:20:25,919 --> 00:20:27,539
an exponent group elements and even that

501
00:20:27,539 --> 00:20:30,200
does not work

502
00:20:34,740 --> 00:20:37,840
the next speaker could set up so

503
00:20:37,840 --> 00:20:41,840
[Applause]

504
00:20:41,840 --> 00:20:45,080
here we go

505
00:20:46,320 --> 00:20:47,820
leave on nothing but you can just leave

506
00:20:47,820 --> 00:20:50,240
it under

507
00:20:51,360 --> 00:20:54,799
maybe reset the timer

508
00:20:56,039 --> 00:20:59,580
I have to have a problem too sorry I'm

509
00:20:59,580 --> 00:21:04,080
just gonna okay so the second talk in

510
00:21:04,080 --> 00:21:06,179
this session is on fine green

511
00:21:06,179 --> 00:21:07,440
non-interactive key exchange

512
00:21:07,440 --> 00:21:10,260
constructions in lower bounds by Upton

513
00:21:10,260 --> 00:21:12,740
absw

514
00:21:15,980 --> 00:21:19,400
and he's giving the talk

515
00:21:19,400 --> 00:21:22,320
uh thank you for the introduction and so

516
00:21:22,320 --> 00:21:24,179
hi everyone I'm Ella here and I'm gonna

517
00:21:24,179 --> 00:21:25,980
talk about fine-grained non-attractive

518
00:21:25,980 --> 00:21:28,260
key exchange this is a joint work with

519
00:21:28,260 --> 00:21:31,440
option after Java Couture and Muhammad

520
00:21:31,440 --> 00:21:33,659
uh I want to first start with some

521
00:21:33,659 --> 00:21:35,340
definition overview

522
00:21:35,340 --> 00:21:37,980
uh and I'm gonna first review what

523
00:21:37,980 --> 00:21:39,840
non-interactive key exchange Protocols

524
00:21:39,840 --> 00:21:40,559
are

525
00:21:40,559 --> 00:21:43,140
so AK party non-interactive key exchange

526
00:21:43,140 --> 00:21:47,880
protocol has K parties P1 to PK and each

527
00:21:47,880 --> 00:21:51,299
party has its own private Randomness uh

528
00:21:51,299 --> 00:21:54,000
run to RK and each party is gonna

529
00:21:54,000 --> 00:21:56,760
generate a single message and sends it

530
00:21:56,760 --> 00:21:59,580
to all the other parties recall all the

531
00:21:59,580 --> 00:22:01,140
messages in the protocol the transcript

532
00:22:01,140 --> 00:22:03,659
of the protocol and each party having

533
00:22:03,659 --> 00:22:05,580
the transcript of the protocol is gonna

534
00:22:05,580 --> 00:22:08,820
compute and output the queue

535
00:22:08,820 --> 00:22:10,260
the completeness of the protocol

536
00:22:10,260 --> 00:22:12,780
requires that with high probability all

537
00:22:12,780 --> 00:22:15,059
of the keys in the protocol should be

538
00:22:15,059 --> 00:22:17,539
the same key which is the shared key

539
00:22:17,539 --> 00:22:20,700
among the parties in the protocol and

540
00:22:20,700 --> 00:22:22,919
the soundness property requires that any

541
00:22:22,919 --> 00:22:25,460
polynomial time adversary

542
00:22:25,460 --> 00:22:28,740
should guess the key with only seeing

543
00:22:28,740 --> 00:22:30,480
the transcripts only with negligible

544
00:22:30,480 --> 00:22:33,720
probability in the security parameter

545
00:22:33,720 --> 00:22:36,659
uh I want to emphasize that the protocol

546
00:22:36,659 --> 00:22:38,820
is non-attractive because all of the

547
00:22:38,820 --> 00:22:41,880
parties are generating a single message

548
00:22:41,880 --> 00:22:43,860
and send it to the other parties

549
00:22:43,860 --> 00:22:46,460
simultaneously

550
00:22:46,460 --> 00:22:49,620
then I'm going to review but

551
00:22:49,620 --> 00:22:51,419
fine-grained means

552
00:22:51,419 --> 00:22:53,340
So In traditional cryptography we

553
00:22:53,340 --> 00:22:55,260
require the hardness of cryptographic

554
00:22:55,260 --> 00:22:58,020
Primitives to hold against arbitrary

555
00:22:58,020 --> 00:23:01,080
polynomial time adversaries however in

556
00:23:01,080 --> 00:23:03,419
finder and cryptography we study the

557
00:23:03,419 --> 00:23:05,460
feasibility of cryptographic Primitives

558
00:23:05,460 --> 00:23:07,320
when the other serial power is

559
00:23:07,320 --> 00:23:09,000
restricted so for example it's

560
00:23:09,000 --> 00:23:11,580
restricted to a fixed polynomial bound

561
00:23:11,580 --> 00:23:13,860
and the motivation behind research in

562
00:23:13,860 --> 00:23:16,620
finder and cryptography is the hope of

563
00:23:16,620 --> 00:23:18,840
basing the existence of fine-grained

564
00:23:18,840 --> 00:23:21,179
Primitives on weaker assumptions by

565
00:23:21,179 --> 00:23:24,600
relaxing the security to only hold

566
00:23:24,600 --> 00:23:28,919
against a less powerful adversaries

567
00:23:28,919 --> 00:23:31,260
there has been a lot of Works in these

568
00:23:31,260 --> 00:23:34,679
areas starting with the work of Miracle

569
00:23:34,679 --> 00:23:37,140
on true Nike from idealized hash

570
00:23:37,140 --> 00:23:39,480
functions and after that there has been

571
00:23:39,480 --> 00:23:41,880
constructions of two-party 90s from

572
00:23:41,880 --> 00:23:43,860
different assumptions such as the

573
00:23:43,860 --> 00:23:46,080
diffie-hellman Assumption the hardness

574
00:23:46,080 --> 00:23:49,679
of factoring and the LW assumption and

575
00:23:49,679 --> 00:23:52,440
there has been also a few works on

576
00:23:52,440 --> 00:23:54,419
multi-party non-interactive key exchange

577
00:23:54,419 --> 00:23:57,659
protocols such as the 390 from pairings

578
00:23:57,659 --> 00:24:00,140
and the k9q farm

579
00:24:00,140 --> 00:24:02,880
indistinguishability obfuscation there

580
00:24:02,880 --> 00:24:04,440
also has been a lot of work you find

581
00:24:04,440 --> 00:24:06,720
during cryptography again starting with

582
00:24:06,720 --> 00:24:09,120
the work of Merkel in two nighties which

583
00:24:09,120 --> 00:24:10,980
led to a lot of constructions and lower

584
00:24:10,980 --> 00:24:13,520
bounds after that

585
00:24:13,520 --> 00:24:17,760
now one question that we can ask is that

586
00:24:17,760 --> 00:24:20,159
can we get a k-party non-interactive key

587
00:24:20,159 --> 00:24:22,020
exchange protocols from simpler

588
00:24:22,020 --> 00:24:24,720
assumptions outside of office Sofia for

589
00:24:24,720 --> 00:24:26,880
more than two parties

590
00:24:26,880 --> 00:24:29,940
so we have three results our first

591
00:24:29,940 --> 00:24:32,580
result is a construction of a four-party

592
00:24:32,580 --> 00:24:34,380
non-interactive key exchange protocols

593
00:24:34,380 --> 00:24:37,320
with security against quadratic time

594
00:24:37,320 --> 00:24:39,480
adversaries in troops generic group

595
00:24:39,480 --> 00:24:42,960
model which can be generalized to a 2K

596
00:24:42,960 --> 00:24:44,520
party a non-interactive key exchange

597
00:24:44,520 --> 00:24:48,120
protocols against a quadratic quadratic

598
00:24:48,120 --> 00:24:50,880
time adversaries in January K-1 linear

599
00:24:50,880 --> 00:24:52,159
group model

600
00:24:52,159 --> 00:24:54,900
our second result is to break any

601
00:24:54,900 --> 00:24:57,480
inquiry 390 in Maurice generic group

602
00:24:57,480 --> 00:24:59,720
model by a

603
00:24:59,720 --> 00:25:02,880
quadratic query adversary which gives us

604
00:25:02,880 --> 00:25:05,580
a limitation on fine-grained security of

605
00:25:05,580 --> 00:25:08,640
k-party Nikes with more than two parties

606
00:25:08,640 --> 00:25:10,919
over generic groups

607
00:25:10,919 --> 00:25:13,860
our third result is a construction of a

608
00:25:13,860 --> 00:25:16,980
fine-grained 390 protocol with security

609
00:25:16,980 --> 00:25:19,200
against n to the power of 1.5 time

610
00:25:19,200 --> 00:25:21,720
adversaries in random Oracle model which

611
00:25:21,720 --> 00:25:24,900
can be generalized to a k9 key against n

612
00:25:24,900 --> 00:25:26,760
to the power of one plus one over K

613
00:25:26,760 --> 00:25:28,799
minus one time addresses

614
00:25:28,799 --> 00:25:31,140
I'm going to first talk about our first

615
00:25:31,140 --> 00:25:32,520
result

616
00:25:32,520 --> 00:25:35,880
and to start I wanna first give a high

617
00:25:35,880 --> 00:25:38,100
level overview of how the shoots General

618
00:25:38,100 --> 00:25:39,779
group model works

619
00:25:39,779 --> 00:25:42,240
so in troops generic group model we

620
00:25:42,240 --> 00:25:45,240
worked on some additive groups zpim

621
00:25:45,240 --> 00:25:48,000
and parties have access to an oracle

622
00:25:48,000 --> 00:25:50,700
with these following operations so we

623
00:25:50,700 --> 00:25:54,120
have an encoding which takes an input

624
00:25:54,120 --> 00:25:56,159
from the group element and outputs a

625
00:25:56,159 --> 00:25:59,580
label and we have an ad query which

626
00:25:59,580 --> 00:26:02,159
takes an input as input some

627
00:26:02,159 --> 00:26:04,320
coefficients and the encoding of some

628
00:26:04,320 --> 00:26:07,320
values and outputs the encoding of the

629
00:26:07,320 --> 00:26:09,360
linear combination

630
00:26:09,360 --> 00:26:12,419
and we can consider this encoding as a

631
00:26:12,419 --> 00:26:15,179
random encoding function

632
00:26:15,179 --> 00:26:18,120
for example due to the power of X is the

633
00:26:18,120 --> 00:26:19,679
random encoding function in different

634
00:26:19,679 --> 00:26:21,360
element

635
00:26:21,360 --> 00:26:24,240
now in order to build a 419 troops

636
00:26:24,240 --> 00:26:27,179
generic group model we first show how to

637
00:26:27,179 --> 00:26:29,039
get a generic construction of fine

638
00:26:29,039 --> 00:26:32,100
grained for Nike from an idealized 290

639
00:26:32,100 --> 00:26:34,200
which I'm gonna introduce later

640
00:26:34,200 --> 00:26:37,500
and then we show how to use this idea in

641
00:26:37,500 --> 00:26:41,120
order to get a fine grain foreign

642
00:26:41,640 --> 00:26:44,279
uh so let's first see how our

643
00:26:44,279 --> 00:26:47,100
construction of 490 farm and ideas to

644
00:26:47,100 --> 00:26:48,559
Nike works

645
00:26:48,559 --> 00:26:51,360
so what is an idealist true Nike an

646
00:26:51,360 --> 00:26:53,940
idealist 2 Nike has two functions the

647
00:26:53,940 --> 00:26:56,880
message function which takes as input

648
00:26:56,880 --> 00:26:59,640
Randomness are and outputs a message M

649
00:26:59,640 --> 00:27:02,159
and it has a key function which takes as

650
00:27:02,159 --> 00:27:04,620
input a Randomness R and the transcript

651
00:27:04,620 --> 00:27:06,779
of the protocol and outputs a shirt key

652
00:27:06,779 --> 00:27:08,460
and it has the completeness and

653
00:27:08,460 --> 00:27:10,620
soundness properties of Nike protocols

654
00:27:10,620 --> 00:27:13,020
and we assume the optimal security of

655
00:27:13,020 --> 00:27:16,679
the 20K here now using this idealized 29

656
00:27:16,679 --> 00:27:20,340
key let's see how we can construct a

657
00:27:20,340 --> 00:27:22,919
fine grain for an IQ so we have our

658
00:27:22,919 --> 00:27:25,559
parties P1 to P4 each having their own

659
00:27:25,559 --> 00:27:28,500
set of Randomness and they're gonna

660
00:27:28,500 --> 00:27:31,080
compute them their message with just

661
00:27:31,080 --> 00:27:33,600
simply calling the message function of

662
00:27:33,600 --> 00:27:36,120
this idealized Trinity on the randomness

663
00:27:36,120 --> 00:27:38,820
now having these messages purchase P1

664
00:27:38,820 --> 00:27:41,820
and P2 can find a shared Randomness

665
00:27:41,820 --> 00:27:44,220
among uh

666
00:27:44,220 --> 00:27:46,740
based on the messages that they get and

667
00:27:46,740 --> 00:27:49,520
parties P3 and P4 can do the same

668
00:27:49,520 --> 00:27:52,919
and having these shared randomnesses uh

669
00:27:52,919 --> 00:27:56,340
one can view parties P1 and P2 as one

670
00:27:56,340 --> 00:27:58,500
party with their shared Randomness and

671
00:27:58,500 --> 00:28:01,679
its Associated message and can view P3

672
00:28:01,679 --> 00:28:05,480
and P4 as another party and then

673
00:28:05,480 --> 00:28:09,720
both pairs of parties can now find the

674
00:28:09,720 --> 00:28:12,480
shirt key with just calling the key

675
00:28:12,480 --> 00:28:14,220
function and key function of this

676
00:28:14,220 --> 00:28:16,200
idealized through Nike under Randomness

677
00:28:16,200 --> 00:28:18,059
and the transcript

678
00:28:18,059 --> 00:28:21,960
now having this idea in mind uh we're

679
00:28:21,960 --> 00:28:24,000
gonna we're gonna see how we can get a

680
00:28:24,000 --> 00:28:26,100
fine Grant 490 in troops generic group

681
00:28:26,100 --> 00:28:27,120
model

682
00:28:27,120 --> 00:28:30,120
so our first try is to replace the 290

683
00:28:30,120 --> 00:28:33,140
with a simple man key exchange

684
00:28:33,140 --> 00:28:37,320
so we have a four parties P1 to P4 and

685
00:28:37,320 --> 00:28:40,200
we are in a group of size and N squared

686
00:28:40,200 --> 00:28:42,480
parties have their own set of private

687
00:28:42,480 --> 00:28:46,320
Randomness and they're gonna output a

688
00:28:46,320 --> 00:28:49,740
message with raising the generator of

689
00:28:49,740 --> 00:28:53,760
the group to the power of the randomness

690
00:28:53,760 --> 00:28:56,520
then parties P1 and P2 are gonna find

691
00:28:56,520 --> 00:28:58,679
the Collision in the randomness based on

692
00:28:58,679 --> 00:29:01,260
the messages they see and parties P3 and

693
00:29:01,260 --> 00:29:03,840
P4 we'll find the condition Collision in

694
00:29:03,840 --> 00:29:06,120
their Randomness as well and then

695
00:29:06,120 --> 00:29:08,580
they're gonna find their shared key as

696
00:29:08,580 --> 00:29:11,340
in the different element protocol

697
00:29:11,340 --> 00:29:14,460
so at the first glance this protocol

698
00:29:14,460 --> 00:29:17,100
seems to work fine however it turns out

699
00:29:17,100 --> 00:29:18,779
that it's completely broken and the

700
00:29:18,779 --> 00:29:20,820
reason behind it is that an adversary

701
00:29:20,820 --> 00:29:23,039
can actually compute the discrete like

702
00:29:23,039 --> 00:29:25,799
of any group element here in linear time

703
00:29:25,799 --> 00:29:28,320
using a shank sweeping step jointer step

704
00:29:28,320 --> 00:29:31,200
or a larger algorithm and for those who

705
00:29:31,200 --> 00:29:33,000
are not familiar with these algorithms

706
00:29:33,000 --> 00:29:35,039
these are algorithms that's been

707
00:29:35,039 --> 00:29:37,200
designed to compute discrete log with

708
00:29:37,200 --> 00:29:39,240
running time a square root of t for an

709
00:29:39,240 --> 00:29:41,880
interval of size 2.

710
00:29:41,880 --> 00:29:43,860
so our challenge here is that our

711
00:29:43,860 --> 00:29:47,658
initial idea of getting a foreign

712
00:29:50,480 --> 00:29:53,100
which fails in cryptography groups

713
00:29:53,100 --> 00:29:55,880
because we don't have such security

714
00:29:55,880 --> 00:29:58,500
one simple solution that comes to mind

715
00:29:58,500 --> 00:30:00,960
is to increase the group size for

716
00:30:00,960 --> 00:30:03,299
example increasing it to n to the power

717
00:30:03,299 --> 00:30:06,480
four in order for dimensioned algorithms

718
00:30:06,480 --> 00:30:08,940
to take more than linear time to compute

719
00:30:08,940 --> 00:30:11,760
the discrete Loop this solution however

720
00:30:11,760 --> 00:30:14,159
comes with its challenge of reducing the

721
00:30:14,159 --> 00:30:16,320
probability of finding the collision and

722
00:30:16,320 --> 00:30:17,700
therefore the shared key for those

723
00:30:17,700 --> 00:30:18,720
parties

724
00:30:18,720 --> 00:30:20,880
our solution to this challenge is to

725
00:30:20,880 --> 00:30:22,860
combine this idea with the idea of

726
00:30:22,860 --> 00:30:25,200
miracle in its true Nike from idealized

727
00:30:25,200 --> 00:30:29,220
hash functions so for Nike is going to

728
00:30:29,220 --> 00:30:32,340
work as follows uh we have a group of

729
00:30:32,340 --> 00:30:36,020
size n to the power of four our party P1

730
00:30:36,020 --> 00:30:39,480
is going to sample its set of Randomness

731
00:30:39,480 --> 00:30:41,399
and it's gonna split each of these

732
00:30:41,399 --> 00:30:44,820
Randomness uh to two halves here for

733
00:30:44,820 --> 00:30:46,919
example for a Randomness AI we denote

734
00:30:46,919 --> 00:30:50,520
the first half of a i as a i l and the

735
00:30:50,520 --> 00:30:52,159
second half as air

736
00:30:52,159 --> 00:30:56,220
and the protein p1's message will

737
00:30:56,220 --> 00:30:58,020
contain two components the first

738
00:30:58,020 --> 00:31:00,120
component would be similar to difficult

739
00:31:00,120 --> 00:31:01,559
and protocol which is the generator

740
00:31:01,559 --> 00:31:03,419
raised to the power of the randomness

741
00:31:03,419 --> 00:31:05,399
and the second component of its message

742
00:31:05,399 --> 00:31:07,919
would be the hash of the first F of its

743
00:31:07,919 --> 00:31:10,340
randomness

744
00:31:10,340 --> 00:31:13,200
will do the same except that its message

745
00:31:13,200 --> 00:31:15,419
only contains the hashes of the first

746
00:31:15,419 --> 00:31:17,039
half of its randomness

747
00:31:17,039 --> 00:31:19,679
and then having these messages protease

748
00:31:19,679 --> 00:31:23,460
P1 and P2 can find the Collision in the

749
00:31:23,460 --> 00:31:25,919
hashes of in the first half of the

750
00:31:25,919 --> 00:31:28,740
randomness which here we call it a half

751
00:31:28,740 --> 00:31:31,500
Collision or star and having this half

752
00:31:31,500 --> 00:31:34,980
Collision party P2 can recover the rest

753
00:31:34,980 --> 00:31:37,500
of the party p1's Randomness in linear

754
00:31:37,500 --> 00:31:40,080
time using babysception test lab or

755
00:31:40,080 --> 00:31:41,640
polar trial version

756
00:31:41,640 --> 00:31:45,299
and therefore both parties is gonna find

757
00:31:45,299 --> 00:31:47,520
a shared Randomness which in this

758
00:31:47,520 --> 00:31:50,220
example would be AI with its

759
00:31:50,220 --> 00:31:51,899
corresponding group elements due to the

760
00:31:51,899 --> 00:31:53,480
power of AI

761
00:31:53,480 --> 00:31:56,640
parties P3 and P4 would do the same

762
00:31:56,640 --> 00:31:58,740
thing simultaneously and they're gonna

763
00:31:58,740 --> 00:32:00,779
reach a shared Randomness which is

764
00:32:00,779 --> 00:32:03,840
associated group element and then both

765
00:32:03,840 --> 00:32:05,820
pairs of parties are able to find the

766
00:32:05,820 --> 00:32:09,679
shirt key as in the DV headline protocol

767
00:32:09,679 --> 00:32:13,020
in order to give a high level idea of

768
00:32:13,020 --> 00:32:15,960
why this protocol works I wanna note

769
00:32:15,960 --> 00:32:18,419
that when we're splitting the

770
00:32:18,419 --> 00:32:20,340
randomnesses into two halves we are

771
00:32:20,340 --> 00:32:22,980
using the isomorphism between the groups

772
00:32:22,980 --> 00:32:25,620
of size and to the above four and N

773
00:32:25,620 --> 00:32:27,659
Square Times N squared

774
00:32:27,659 --> 00:32:30,840
and therefore each half would be of size

775
00:32:30,840 --> 00:32:33,480
N squared which means that with constant

776
00:32:33,480 --> 00:32:35,640
probability there would be a collision

777
00:32:35,640 --> 00:32:37,799
in the first half of randomnesses of

778
00:32:37,799 --> 00:32:40,919
parties P1 and P2 and also P3 and P4

779
00:32:40,919 --> 00:32:43,940
which is the similar idea of Miracles

780
00:32:43,940 --> 00:32:48,600
and again since each half is of size and

781
00:32:48,600 --> 00:32:51,480
N squared the polarizer algorithm of

782
00:32:51,480 --> 00:32:53,279
baby step giant is the algorithm would

783
00:32:53,279 --> 00:32:56,159
only take linear time in order to find

784
00:32:56,159 --> 00:32:58,320
the second half

785
00:32:58,320 --> 00:33:01,620
and from an adversarial point of view we

786
00:33:01,620 --> 00:33:03,720
need at least quadratic time in order to

787
00:33:03,720 --> 00:33:05,899
find this half collision and therefore

788
00:33:05,899 --> 00:33:08,340
the key

789
00:33:08,340 --> 00:33:10,620
uh then I'm gonna talk a little bit

790
00:33:10,620 --> 00:33:13,019
about our second result of breaking any

791
00:33:13,019 --> 00:33:15,120
inquiry three Nike in marriage General

792
00:33:15,120 --> 00:33:20,220
group model and I wanna first give again

793
00:33:20,220 --> 00:33:22,559
a high level idea of how marriage

794
00:33:22,559 --> 00:33:25,140
generate a good model work so marriage

795
00:33:25,140 --> 00:33:26,880
generate group model is similar to

796
00:33:26,880 --> 00:33:29,880
troops model that we saw earlier but

797
00:33:29,880 --> 00:33:32,519
instead of an encoding function here we

798
00:33:32,519 --> 00:33:34,799
have a stateful Oracle that maintains

799
00:33:34,799 --> 00:33:38,820
the elements and therefore one can view

800
00:33:38,820 --> 00:33:41,760
the encodings in Shoop's model as a

801
00:33:41,760 --> 00:33:44,220
black box of the values in Mouse model

802
00:33:44,220 --> 00:33:46,860
uh oops

803
00:33:46,860 --> 00:33:49,559
so we can consider marriage generic

804
00:33:49,559 --> 00:33:52,500
group model as a set of black boxes with

805
00:33:52,500 --> 00:33:54,600
the following operations we have the

806
00:33:54,600 --> 00:33:57,120
average query which puts a value in a

807
00:33:57,120 --> 00:33:59,580
black box we have the copy query which

808
00:33:59,580 --> 00:34:02,880
sends a black box to another party we

809
00:34:02,880 --> 00:34:04,919
have the ad query which given the black

810
00:34:04,919 --> 00:34:07,919
boxes of the values X and Y it will

811
00:34:07,919 --> 00:34:11,339
obtain a black box of the value X Plus Y

812
00:34:11,339 --> 00:34:13,260
and we have the equality query which

813
00:34:13,260 --> 00:34:14,719
checks the equality

814
00:34:14,719 --> 00:34:19,139
between the values X and Y given the

815
00:34:19,139 --> 00:34:21,119
black boxes of those values and again

816
00:34:21,119 --> 00:34:23,040
all of these operations are going to be

817
00:34:23,040 --> 00:34:24,780
over some additive group

818
00:34:24,780 --> 00:34:27,659
and I want to note here that given a

819
00:34:27,659 --> 00:34:30,179
black box one cannot read the value of

820
00:34:30,179 --> 00:34:32,099
each and that Black Ops

821
00:34:32,099 --> 00:34:34,679
now in order to breaking a 39 key in

822
00:34:34,679 --> 00:34:35,960
this model

823
00:34:35,960 --> 00:34:38,879
we first show how an adversary can find

824
00:34:38,879 --> 00:34:41,940
the key in the model without no equality

825
00:34:41,940 --> 00:34:44,219
query and then we're gonna reduce

826
00:34:44,219 --> 00:34:46,560
breaking 390 and marriage generic group

827
00:34:46,560 --> 00:34:48,300
model to that

828
00:34:48,300 --> 00:34:52,440
so let's first see how the attack Works

829
00:34:52,440 --> 00:34:55,859
in a model without any equality query

830
00:34:55,859 --> 00:34:58,619
so to Model A 390 in marriage generic

831
00:34:58,619 --> 00:35:01,500
group model we have three parties Alice

832
00:35:01,500 --> 00:35:03,599
Bob and Charlie each having their own

833
00:35:03,599 --> 00:35:06,180
Randomness and they're gonna send to

834
00:35:06,180 --> 00:35:08,580
each other messages and black boxes and

835
00:35:08,580 --> 00:35:10,560
they want to eventually find a shared

836
00:35:10,560 --> 00:35:12,900
key a return in the black box

837
00:35:12,900 --> 00:35:16,320
so our attack works as follows we fix

838
00:35:16,320 --> 00:35:18,960
Bob and we consider the following four

839
00:35:18,960 --> 00:35:22,200
executions of the protocol we have Alice

840
00:35:22,200 --> 00:35:24,900
and Charlie and each of them has their

841
00:35:24,900 --> 00:35:27,060
own Randomness which here we call them

842
00:35:27,060 --> 00:35:30,060
real Randomness and we also assign a

843
00:35:30,060 --> 00:35:32,339
fake Randomness to each of them chosen

844
00:35:32,339 --> 00:35:34,099
by the adversary

845
00:35:34,099 --> 00:35:37,099
and we're

846
00:35:37,099 --> 00:35:39,900
denoting the each of the executions here

847
00:35:39,900 --> 00:35:42,359
with a color based on which randomnesses

848
00:35:42,359 --> 00:35:44,400
are going to be used in that execution

849
00:35:44,400 --> 00:35:47,280
our claim here is that the keys computed

850
00:35:47,280 --> 00:35:50,700
in the red and purple execution would be

851
00:35:50,700 --> 00:35:53,760
equal to the sum of the keys of blue and

852
00:35:53,760 --> 00:35:55,859
green execution

853
00:35:55,859 --> 00:35:58,680
and in order to prove this we're using

854
00:35:58,680 --> 00:36:01,320
the fact that fixing the randomness all

855
00:36:01,320 --> 00:36:03,660
the operations on black boxes in the

856
00:36:03,660 --> 00:36:05,339
marriage generic group model would be

857
00:36:05,339 --> 00:36:07,800
linear and this means that's the keys

858
00:36:07,800 --> 00:36:10,680
that each party is going to compute is

859
00:36:10,680 --> 00:36:13,140
going to be a linear combination of the

860
00:36:13,140 --> 00:36:15,500
black boxes they received previously

861
00:36:15,500 --> 00:36:18,960
so rewriting each of these Keys as those

862
00:36:18,960 --> 00:36:21,180
linear combinations you're going to see

863
00:36:21,180 --> 00:36:22,980
that all of the terms would cancel out

864
00:36:22,980 --> 00:36:24,900
and this will conclude the proof of the

865
00:36:24,900 --> 00:36:28,280
claim now having this equality between

866
00:36:28,280 --> 00:36:31,079
these keys of different executions of

867
00:36:31,079 --> 00:36:34,020
the protocol it's not hard to see that

868
00:36:34,020 --> 00:36:36,660
an adversary can actually find three of

869
00:36:36,660 --> 00:36:38,700
these keys because they're using face

870
00:36:38,700 --> 00:36:41,400
randomnesses and this implies that an

871
00:36:41,400 --> 00:36:43,800
adversary can actually find the shared

872
00:36:43,800 --> 00:36:45,780
key from the real execution with the

873
00:36:45,780 --> 00:36:48,960
real randomness of Ali Centralia

874
00:36:48,960 --> 00:36:52,680
then in order to reduce the braking of a

875
00:36:52,680 --> 00:36:54,359
three Nike in marriage generic group

876
00:36:54,359 --> 00:36:57,599
model to this attack we're gonna extend

877
00:36:57,599 --> 00:36:59,520
the definition of heavy Learner in the

878
00:36:59,520 --> 00:37:01,560
vendor molecule in the vendor molecule

879
00:37:01,560 --> 00:37:04,740
to marriage generic model and I'm not I

880
00:37:04,740 --> 00:37:06,359
don't think that I have time to go into

881
00:37:06,359 --> 00:37:08,060
the details of that

882
00:37:08,060 --> 00:37:10,920
uh I want to also talk a little bit

883
00:37:10,920 --> 00:37:13,020
about our third result of 390 protocol

884
00:37:13,020 --> 00:37:15,240
with security against n to the power of

885
00:37:15,240 --> 00:37:18,420
1.5 time adversaries in a random Oracle

886
00:37:18,420 --> 00:37:19,380
model

887
00:37:19,380 --> 00:37:23,460
so I have 390 would work as follows it's

888
00:37:23,460 --> 00:37:25,560
pretty similar to Miracles 2 Nike

889
00:37:25,560 --> 00:37:28,560
protocol where parties choose their own

890
00:37:28,560 --> 00:37:30,839
set of private Randomness and they're

891
00:37:30,839 --> 00:37:33,420
gonna compute and outputs the output of

892
00:37:33,420 --> 00:37:35,280
a random function on their Randomness

893
00:37:35,280 --> 00:37:37,500
and they're going to look for a

894
00:37:37,500 --> 00:37:39,480
three-way Collision based on the

895
00:37:39,480 --> 00:37:41,970
messages that they get

896
00:37:41,970 --> 00:37:43,520
[Music]

897
00:37:43,520 --> 00:37:47,160
we had quadratic security Gap and it was

898
00:37:47,160 --> 00:37:49,619
because of the difference between the

899
00:37:49,619 --> 00:37:51,780
adverse adversaries running time and

900
00:37:51,780 --> 00:37:53,220
parties running time which was coming

901
00:37:53,220 --> 00:37:54,660
from the completeness and soundness

902
00:37:54,660 --> 00:37:57,180
property of the protocol and in our

903
00:37:57,180 --> 00:38:00,660
three Nike we have into the power of 1.5

904
00:38:00,660 --> 00:38:03,660
security cap using the same trick of

905
00:38:03,660 --> 00:38:07,140
miracle and this Gap again com comes

906
00:38:07,140 --> 00:38:08,640
from the difference between the

907
00:38:08,640 --> 00:38:11,700
adversarial and parties running time

908
00:38:11,700 --> 00:38:14,520
uh this generation has not been found

909
00:38:14,520 --> 00:38:16,260
before based to the best of our

910
00:38:16,260 --> 00:38:17,400
knowledge

911
00:38:17,400 --> 00:38:20,280
so to conclude we introduced the

912
00:38:20,280 --> 00:38:22,619
construction of a 490 in troops generic

913
00:38:22,619 --> 00:38:24,359
group model with a standard assumptions

914
00:38:24,359 --> 00:38:26,940
which combining the idea of Miracle with

915
00:38:26,940 --> 00:38:28,980
the idea of getting a 49q from an

916
00:38:28,980 --> 00:38:31,560
ideology which gives us quadratic

917
00:38:31,560 --> 00:38:33,780
security Gap in troops generic group

918
00:38:33,780 --> 00:38:34,859
model

919
00:38:34,859 --> 00:38:37,140
uh we also

920
00:38:37,140 --> 00:38:39,119
said that in maori's general group model

921
00:38:39,119 --> 00:38:41,520
one cannot achieve more than security

922
00:38:41,520 --> 00:38:45,119
Gap and we also show the fine-grained

923
00:38:45,119 --> 00:38:47,579
390 protocol with security against n to

924
00:38:47,579 --> 00:38:49,800
the power of 1.5 time adversaries in

925
00:38:49,800 --> 00:38:52,140
random Oracle model which was a natural

926
00:38:52,140 --> 00:38:54,359
generalization of the seminal work of

927
00:38:54,359 --> 00:38:55,920
miracle

928
00:38:55,920 --> 00:38:58,140
we still have some open problems in our

929
00:38:58,140 --> 00:38:59,640
world

930
00:38:59,640 --> 00:39:01,920
for example can one close the gap

931
00:39:01,920 --> 00:39:03,839
between our negative and positive result

932
00:39:03,839 --> 00:39:07,200
by either building a four Nike

933
00:39:07,200 --> 00:39:09,540
construction with quadratic security Gap

934
00:39:09,540 --> 00:39:11,579
in marriage generic group model or by

935
00:39:11,579 --> 00:39:14,760
extending our impossibility result to

936
00:39:14,760 --> 00:39:17,579
shoots generic group model or is it

937
00:39:17,579 --> 00:39:20,400
possible to paste a foreign construction

938
00:39:20,400 --> 00:39:22,859
on simpler assumptions

939
00:39:22,859 --> 00:39:25,619
and with this I'll conclude my talk and

940
00:39:25,619 --> 00:39:27,300
I'm happy to answer any questions thank

941
00:39:27,300 --> 00:39:29,420
you

942
00:39:33,839 --> 00:39:36,359
thanks for this excellent talk and any

943
00:39:36,359 --> 00:39:39,380
questions from the audience

944
00:39:42,420 --> 00:39:45,420
so the 1.5 exponent in the random local

945
00:39:45,420 --> 00:39:48,660
model do you know if it's optimal

946
00:39:48,660 --> 00:39:49,560
um

947
00:39:49,560 --> 00:39:52,560
I believe so

948
00:39:52,560 --> 00:39:56,900
but I'm not isn't sure

949
00:39:57,000 --> 00:39:59,420
okay

950
00:40:09,300 --> 00:40:12,920
okay any more questions

951
00:40:18,300 --> 00:40:20,460
okay so what what is the difference

952
00:40:20,460 --> 00:40:24,720
between uh Nike in this in this scenario

953
00:40:24,720 --> 00:40:27,060
compared with interactive key algorithms

954
00:40:27,060 --> 00:40:29,839
so parties can talk about multiple rods

955
00:40:29,839 --> 00:40:33,259
so I guess the point

956
00:40:35,579 --> 00:40:38,940
so the point of this non-attractive case

957
00:40:38,940 --> 00:40:41,099
search protocols is that all of the

958
00:40:41,099 --> 00:40:42,960
parties are just sending a single

959
00:40:42,960 --> 00:40:46,260
message simultaneously and then having

960
00:40:46,260 --> 00:40:48,480
those messages they can compute the

961
00:40:48,480 --> 00:40:50,339
shirt key without any further

962
00:40:50,339 --> 00:40:51,660
interaction

963
00:40:51,660 --> 00:40:54,119
uh did I answer the question okay yeah

964
00:40:54,119 --> 00:40:57,000
perfect so so it could be we could be do

965
00:40:57,000 --> 00:40:59,099
better if we have multiple round of

966
00:40:59,099 --> 00:41:00,480
communication

967
00:41:00,480 --> 00:41:04,800
uh you mean in terms of the security Gap

968
00:41:04,800 --> 00:41:06,480
for example we have two run

969
00:41:06,480 --> 00:41:10,680
s we can talk two rounds uh I guess

970
00:41:10,680 --> 00:41:13,640
thank you

971
00:41:16,859 --> 00:41:19,800
okay if there are no more questions then

972
00:41:19,800 --> 00:41:22,680
we come to the third talk of this

973
00:41:22,680 --> 00:41:24,919
session

974
00:41:29,640 --> 00:41:32,339
so the title of this talk is speak much

975
00:41:32,339 --> 00:41:34,380
remember little cryptography the bounded

976
00:41:34,380 --> 00:41:36,960
storage model Revisited by evgenidottis

977
00:41:36,960 --> 00:41:40,980
and Daniel weeks and Willie is

978
00:41:40,980 --> 00:41:44,720
giving the presentation

979
00:41:54,680 --> 00:41:58,819
uh yeah Mike working good

980
00:41:59,640 --> 00:42:03,119
um yeah so I'm ready I'm going to talk

981
00:42:03,119 --> 00:42:05,760
about a model of for cryptography that's

982
00:42:05,760 --> 00:42:07,140
called the bonded search model I'll

983
00:42:07,140 --> 00:42:08,880
different that you know introduce that a

984
00:42:08,880 --> 00:42:10,740
little bit but yeah decision work with

985
00:42:10,740 --> 00:42:14,040
uh you can do this in the networks

986
00:42:14,040 --> 00:42:16,440
uh so the context of this manner is um

987
00:42:16,440 --> 00:42:18,780
so suppose we have some standard uh

988
00:42:18,780 --> 00:42:20,760
cryptography test that you might want to

989
00:42:20,760 --> 00:42:22,440
achieve say Alice and Bob wants to

990
00:42:22,440 --> 00:42:24,480
communicate over some Channel and

991
00:42:24,480 --> 00:42:25,680
maintain some security against an

992
00:42:25,680 --> 00:42:27,300
observer Eve

993
00:42:27,300 --> 00:42:29,160
it turns out that it's pretty important

994
00:42:29,160 --> 00:42:33,300
to model the adversaries properly in

995
00:42:33,300 --> 00:42:36,180
particular even if they are given a

996
00:42:36,180 --> 00:42:38,720
secret key that they share in advance

997
00:42:38,720 --> 00:42:41,880
if the adversaries are not restricted in

998
00:42:41,880 --> 00:42:45,420
any way then there's not much you can do

999
00:42:45,420 --> 00:42:48,480
so cryptography in the standard terms

1000
00:42:48,480 --> 00:42:50,700
will usually add some restriction on the

1001
00:42:50,700 --> 00:42:52,200
power of the adversary and the standard

1002
00:42:52,200 --> 00:42:54,240
restriction that we have is that the

1003
00:42:54,240 --> 00:42:55,859
adversary is running polynomial time so

1004
00:42:55,859 --> 00:42:58,020
we believe that feasible computations or

1005
00:42:58,020 --> 00:42:59,280
competitions that are done in polymer

1006
00:42:59,280 --> 00:43:01,260
time this is our model

1007
00:43:01,260 --> 00:43:03,839
however one consequence is that all

1008
00:43:03,839 --> 00:43:05,940
secretes property that we might consider

1009
00:43:05,940 --> 00:43:08,339
say for for encryption

1010
00:43:08,339 --> 00:43:11,579
will be proven only conditionally so you

1011
00:43:11,579 --> 00:43:14,579
will need computational assumptions in

1012
00:43:14,579 --> 00:43:16,440
particular you will at least need that

1013
00:43:16,440 --> 00:43:17,940
piece different from NP if you want any

1014
00:43:17,940 --> 00:43:20,280
kind of to prove any kind of Secrets so

1015
00:43:20,280 --> 00:43:22,980
that's kind of what we're starting from

1016
00:43:22,980 --> 00:43:27,060
in particular yeah if

1017
00:43:27,060 --> 00:43:29,520
if you are if you have like some kind of

1018
00:43:29,520 --> 00:43:31,020
existential crisis over like whether

1019
00:43:31,020 --> 00:43:32,760
those assumptions hold you might turn

1020
00:43:32,760 --> 00:43:35,339
into other ways to model the adversaries

1021
00:43:35,339 --> 00:43:37,260
so that's what the bonded stretch model

1022
00:43:37,260 --> 00:43:38,579
does

1023
00:43:38,579 --> 00:43:41,339
and the Bonnet search model we will

1024
00:43:41,339 --> 00:43:43,260
restrict the capacity of the adversary

1025
00:43:43,260 --> 00:43:45,060
in a different way so instead of

1026
00:43:45,060 --> 00:43:46,740
limiting the runtime should be

1027
00:43:46,740 --> 00:43:48,140
polynomial

1028
00:43:48,140 --> 00:43:51,720
we impose that the storage of Shear

1029
00:43:51,720 --> 00:43:55,140
functions on the encryption setting of

1030
00:43:55,140 --> 00:43:57,720
The if dropper would be of limited

1031
00:43:57,720 --> 00:44:00,680
storage capacity

1032
00:44:00,900 --> 00:44:03,599
so in more details it will have a

1033
00:44:03,599 --> 00:44:05,460
protocol that involves some Alison bulb

1034
00:44:05,460 --> 00:44:08,099
and Alison bulb might run in using very

1035
00:44:08,099 --> 00:44:10,319
small storage and you want to ensure

1036
00:44:10,319 --> 00:44:12,119
security against an adversary that has

1037
00:44:12,119 --> 00:44:15,060
potentially more storage

1038
00:44:15,060 --> 00:44:18,359
and really the kind of what makes this

1039
00:44:18,359 --> 00:44:19,980
model pretty amazing at the cinemations

1040
00:44:19,980 --> 00:44:22,440
is that then we can actually obtain say

1041
00:44:22,440 --> 00:44:26,280
encryption uh obtain unconditionally SQL

1042
00:44:26,280 --> 00:44:28,380
encryption for instance

1043
00:44:28,380 --> 00:44:29,460
yep

1044
00:44:29,460 --> 00:44:33,480
so the intuition of why this alternative

1045
00:44:33,480 --> 00:44:35,579
model of like attentive restriction of

1046
00:44:35,579 --> 00:44:37,560
the adversaries might be more powerful

1047
00:44:37,560 --> 00:44:39,420
than like a restricting the polynomial

1048
00:44:39,420 --> 00:44:41,880
time is that this actually

1049
00:44:41,880 --> 00:44:44,040
uh allows for the kind of the following

1050
00:44:44,040 --> 00:44:46,079
setting so suppose at least to transmit

1051
00:44:46,079 --> 00:44:47,119
the message

1052
00:44:47,119 --> 00:44:50,460
sends some message and kind of floods

1053
00:44:50,460 --> 00:44:52,560
the Channel with random drunk the point

1054
00:44:52,560 --> 00:44:54,480
is that a decent verb May potentially

1055
00:44:54,480 --> 00:44:56,339
send more messages than what the

1056
00:44:56,339 --> 00:44:58,619
adversary can actually remember

1057
00:44:58,619 --> 00:45:01,200
and because of that you made argue

1058
00:45:01,200 --> 00:45:02,460
information theoretically that the

1059
00:45:02,460 --> 00:45:04,079
adversary has not enough information to

1060
00:45:04,079 --> 00:45:07,160
figure out what the message is

1061
00:45:07,440 --> 00:45:08,880
okay

1062
00:45:08,880 --> 00:45:11,760
so now I want to be slightly more

1063
00:45:11,760 --> 00:45:13,740
precise about what I mean by algorithms

1064
00:45:13,740 --> 00:45:15,599
that might communicate way more than

1065
00:45:15,599 --> 00:45:17,640
what they remember

1066
00:45:17,640 --> 00:45:20,339
and a natural setting to consider

1067
00:45:20,339 --> 00:45:22,380
algorithms that treat way more data than

1068
00:45:22,380 --> 00:45:24,359
than what they can like process or

1069
00:45:24,359 --> 00:45:26,760
generate is a streaming City

1070
00:45:26,760 --> 00:45:29,000
so through this talk I'll consider

1071
00:45:29,000 --> 00:45:33,000
algorithms that treat all the data that

1072
00:45:33,000 --> 00:45:34,560
they receive and also transmit data as

1073
00:45:34,560 --> 00:45:37,040
streams

1074
00:45:37,040 --> 00:45:39,420
we'll have some memory through the talk

1075
00:45:39,420 --> 00:45:41,760
I'll referred through this memory as n

1076
00:45:41,760 --> 00:45:42,900
in

1077
00:45:42,900 --> 00:45:45,300
and then they will send some some

1078
00:45:45,300 --> 00:45:47,099
message in a streaming Manner and also

1079
00:45:47,099 --> 00:45:49,560
process the administering manner

1080
00:45:49,560 --> 00:45:53,280
and the adversary will process also the

1081
00:45:53,280 --> 00:45:55,440
stream using a larger memory so that's

1082
00:45:55,440 --> 00:45:57,420
kind of standard setting in cryptography

1083
00:45:57,420 --> 00:45:59,660
we want to provide security against

1084
00:45:59,660 --> 00:46:01,619
adversaries that are potentially more

1085
00:46:01,619 --> 00:46:04,800
powerful than potentially more powerful

1086
00:46:04,800 --> 00:46:08,099
than the honest parties

1087
00:46:08,099 --> 00:46:09,839
so in our setting we

1088
00:46:09,839 --> 00:46:11,700
do the setting that makes sense is to

1089
00:46:11,700 --> 00:46:13,859
consider the storage of the address much

1090
00:46:13,859 --> 00:46:17,040
uh uh larger than than the storage of

1091
00:46:17,040 --> 00:46:19,500
Johannes parties and again the the point

1092
00:46:19,500 --> 00:46:21,480
the the way the bonded storage model is

1093
00:46:21,480 --> 00:46:22,680
useful and will allow unconditional

1094
00:46:22,680 --> 00:46:24,839
security is that the total Communication

1095
00:46:24,839 --> 00:46:27,060
in our protocol might be larger than the

1096
00:46:27,060 --> 00:46:30,200
memory of the adversary

1097
00:46:30,420 --> 00:46:32,700
Okay so

1098
00:46:32,700 --> 00:46:35,040
the way we kind of measure security is

1099
00:46:35,040 --> 00:46:38,400
how powerful we allow advisors to be and

1100
00:46:38,400 --> 00:46:40,500
so kind of the central question here to

1101
00:46:40,500 --> 00:46:43,200
argue what kind of secret is possible

1102
00:46:43,200 --> 00:46:47,460
is to study how much uh like how

1103
00:46:47,460 --> 00:46:48,960
powerful of an anniversary like a

1104
00:46:48,960 --> 00:46:50,880
protocol I can handle and hereby

1105
00:46:50,880 --> 00:46:53,460
powerful I mean how much storage we

1106
00:46:53,460 --> 00:46:55,380
allow that research to have

1107
00:46:55,380 --> 00:46:58,380
so in particular the yeah the security

1108
00:46:58,380 --> 00:47:01,200
uh like quantitative security notion

1109
00:47:01,200 --> 00:47:02,460
that we want to optimize for is kind of

1110
00:47:02,460 --> 00:47:05,339
the gap between the storage of the violo

1111
00:47:05,339 --> 00:47:08,280
adversaries to have versus the storage

1112
00:47:08,280 --> 00:47:10,140
that honest users need to run the

1113
00:47:10,140 --> 00:47:12,379
protocol

1114
00:47:14,040 --> 00:47:17,819
um yeah so again uh if we uh I I'll call

1115
00:47:17,819 --> 00:47:19,859
M the storage the large storage of the

1116
00:47:19,859 --> 00:47:21,960
adversary and the storage of the honest

1117
00:47:21,960 --> 00:47:22,859
users

1118
00:47:22,859 --> 00:47:25,079
and there's actually a lot of Prior work

1119
00:47:25,079 --> 00:47:28,020
in the bundled search model so it's all

1120
00:47:28,020 --> 00:47:29,640
the results will be unconditional and

1121
00:47:29,640 --> 00:47:31,740
that's kind of the theoretical point of

1122
00:47:31,740 --> 00:47:33,300
considering this model

1123
00:47:33,300 --> 00:47:36,060
and for symmetric encryption kind of a

1124
00:47:36,060 --> 00:47:39,240
very surprisingly a distribution we can

1125
00:47:39,240 --> 00:47:41,099
handle up to exponential gaps

1126
00:47:41,099 --> 00:47:43,619
so even if the adversary has memory

1127
00:47:43,619 --> 00:47:45,599
that's exponentially larger than uhness

1128
00:47:45,599 --> 00:47:48,380
parties then we can still enter security

1129
00:47:48,380 --> 00:47:52,319
but again this is only possible if the

1130
00:47:52,319 --> 00:47:54,480
total communication of the the protocol

1131
00:47:54,480 --> 00:47:57,780
exceeds the storage of the adversary and

1132
00:47:57,780 --> 00:47:59,579
in that in that sense if we want our

1133
00:47:59,579 --> 00:48:01,380
streaming algorithms to be efficient or

1134
00:48:01,380 --> 00:48:03,240
an in polynomial time then we need to

1135
00:48:03,240 --> 00:48:05,420
restrict ourselves to consider any

1136
00:48:05,420 --> 00:48:10,200
polynomially bonded space adversaries

1137
00:48:10,200 --> 00:48:12,599
so that's uh what happens in the

1138
00:48:12,599 --> 00:48:15,060
Symmetry case for encryption

1139
00:48:15,060 --> 00:48:16,380
and

1140
00:48:16,380 --> 00:48:18,599
even more surprisingly we actually have

1141
00:48:18,599 --> 00:48:21,780
unconditional results for constructions

1142
00:48:21,780 --> 00:48:23,819
in the in the public key cryptographic

1143
00:48:23,819 --> 00:48:25,500
era so we can actually be on public

1144
00:48:25,500 --> 00:48:28,380
crypto OT MPC in the bonded storage

1145
00:48:28,380 --> 00:48:29,940
model unconditionally

1146
00:48:29,940 --> 00:48:32,400
but the results seem to be quite weaker

1147
00:48:32,400 --> 00:48:35,220
that in a symmetric case so here we can

1148
00:48:35,220 --> 00:48:38,400
only handle a prior Workshop that only

1149
00:48:38,400 --> 00:48:40,140
shown how to run the adversaries that

1150
00:48:40,140 --> 00:48:42,599
have kind of a quadratically more uh

1151
00:48:42,599 --> 00:48:46,619
storage than uh than the harness parties

1152
00:48:46,619 --> 00:48:47,760
yeah

1153
00:48:47,760 --> 00:48:50,040
so a question is whether we can hope for

1154
00:48:50,040 --> 00:48:51,900
more in the public training and

1155
00:48:51,900 --> 00:48:53,700
unfortunately it doesn't seem to be the

1156
00:48:53,700 --> 00:48:55,380
case because there's a low bound

1157
00:48:55,380 --> 00:48:57,000
and there's a low amount that says that

1158
00:48:57,000 --> 00:49:00,000
those those works are taxed

1159
00:49:00,000 --> 00:49:01,980
so that's a word by zombossian more and

1160
00:49:01,980 --> 00:49:03,480
we'll get back back to it later

1161
00:49:03,480 --> 00:49:06,500
so are we done

1162
00:49:06,720 --> 00:49:09,839
um well our main kind of core

1163
00:49:09,839 --> 00:49:12,420
observation in this work is actually not

1164
00:49:12,420 --> 00:49:14,520
to prove it on is to get around another

1165
00:49:14,520 --> 00:49:16,500
lower bound to get positive results

1166
00:49:16,500 --> 00:49:19,920
and the main idea is that this lower

1167
00:49:19,920 --> 00:49:21,140
Bound by James

1168
00:49:21,140 --> 00:49:23,819
does not hold for the general setting

1169
00:49:23,819 --> 00:49:25,440
that I just described

1170
00:49:25,440 --> 00:49:28,800
in particular it crucially uses the

1171
00:49:28,800 --> 00:49:31,500
technical level like the clinical

1172
00:49:31,500 --> 00:49:33,780
statements crucially uses the fact that

1173
00:49:33,780 --> 00:49:36,540
there's a single long message that are

1174
00:49:36,540 --> 00:49:39,380
transmitted between the parties

1175
00:49:39,380 --> 00:49:43,319
is whether this is kind of a technical

1176
00:49:43,319 --> 00:49:46,500
barrier or can we do more and so we

1177
00:49:46,500 --> 00:49:48,060
asked the general question of whether we

1178
00:49:48,060 --> 00:49:50,660
can have publicly crypto say foreign

1179
00:49:50,660 --> 00:49:53,940
agreements that supports much larger gap

1180
00:49:53,940 --> 00:49:55,859
between the storage of the adversary and

1181
00:49:55,859 --> 00:49:58,020
the storage of the Holiness users

1182
00:49:58,020 --> 00:50:00,180
and we show that this is possible so

1183
00:50:00,180 --> 00:50:02,579
what we obtain is key agreement of this

1184
00:50:02,579 --> 00:50:04,680
transfer MPC in the bonded search model

1185
00:50:04,680 --> 00:50:06,839
where the gaps can be up to exponential

1186
00:50:06,839 --> 00:50:10,560
so it matches what we have in the in the

1187
00:50:10,560 --> 00:50:12,359
in the symmetric ecd

1188
00:50:12,359 --> 00:50:14,400
so so again if we want the streaming

1189
00:50:14,400 --> 00:50:15,900
algorithms in the protocol to run in

1190
00:50:15,900 --> 00:50:18,420
polynomial time then uh you will

1191
00:50:18,420 --> 00:50:21,240
restrict the bound on the adversary

1192
00:50:21,240 --> 00:50:24,540
storage to a fixed fixed polynomial in

1193
00:50:24,540 --> 00:50:26,660
advance

1194
00:50:27,119 --> 00:50:29,700
okay so so kind of what happens here is

1195
00:50:29,700 --> 00:50:33,000
kind of a mismatch between what uh lower

1196
00:50:33,000 --> 00:50:35,400
bonds and prior protocols worked so it's

1197
00:50:35,400 --> 00:50:37,319
kind of the bonded stretch model that

1198
00:50:37,319 --> 00:50:39,180
was considered before on the bounded

1199
00:50:39,180 --> 00:50:41,400
storage model that I just introduced so

1200
00:50:41,400 --> 00:50:43,380
let me uh try to be a bit a little bit

1201
00:50:43,380 --> 00:50:45,440
more precise

1202
00:50:45,440 --> 00:50:48,720
so what I just talked about was a kind

1203
00:50:48,720 --> 00:50:51,300
of a setting where all the algorithms

1204
00:50:51,300 --> 00:50:54,119
were streaming algorithms and like the

1205
00:50:54,119 --> 00:50:55,339
um

1206
00:50:55,339 --> 00:50:57,660
all the messages were generated by

1207
00:50:57,660 --> 00:50:59,579
Honest parties

1208
00:50:59,579 --> 00:51:01,680
in terms of that this is not quite what

1209
00:51:01,680 --> 00:51:03,720
was considered when the Bernard storage

1210
00:51:03,720 --> 00:51:05,240
model was

1211
00:51:05,240 --> 00:51:08,240
was introduced so if you think about

1212
00:51:08,240 --> 00:51:11,339
bonded storage model kind of protocols

1213
00:51:11,339 --> 00:51:13,140
that existed like in the 90s and the

1214
00:51:13,140 --> 00:51:14,579
2000s roughly

1215
00:51:14,579 --> 00:51:17,000
uh there's kind of a crucial

1216
00:51:17,000 --> 00:51:19,559
crucial restriction in terms of model

1217
00:51:19,559 --> 00:51:21,780
that there's like a single long message

1218
00:51:21,780 --> 00:51:23,280
and that the long message is generated

1219
00:51:23,280 --> 00:51:25,319
by The Trusted third party so that was

1220
00:51:25,319 --> 00:51:28,140
kind of baking the model and then there

1221
00:51:28,140 --> 00:51:30,119
was also several additional restrictions

1222
00:51:30,119 --> 00:51:31,859
on the model that

1223
00:51:31,859 --> 00:51:34,619
talked say about how honest parties

1224
00:51:34,619 --> 00:51:37,020
would access to the stream maybe the do

1225
00:51:37,020 --> 00:51:39,480
not they don't need to have access to

1226
00:51:39,480 --> 00:51:41,460
the home message but only through some

1227
00:51:41,460 --> 00:51:42,740
local parts

1228
00:51:42,740 --> 00:51:45,359
and maybe the adversary can have a

1229
00:51:45,359 --> 00:51:46,859
processor stream using unbounded local

1230
00:51:46,859 --> 00:51:47,940
memory

1231
00:51:47,940 --> 00:51:50,839
so there are additional constraints

1232
00:51:50,839 --> 00:51:54,300
that make the result more powerful but

1233
00:51:54,300 --> 00:51:56,220
even those constraints are not

1234
00:51:56,220 --> 00:51:57,660
necessarily even

1235
00:51:57,660 --> 00:52:00,059
when not even followed in all the works

1236
00:52:00,059 --> 00:52:02,460
in design on functions Works actually on

1237
00:52:02,460 --> 00:52:04,740
obvious transfer or NPC actually use

1238
00:52:04,740 --> 00:52:06,420
several long runs already

1239
00:52:06,420 --> 00:52:09,200
so there's kind of like

1240
00:52:09,200 --> 00:52:12,839
not so clear it was not so clear what

1241
00:52:12,839 --> 00:52:14,040
was exactly the model that we were

1242
00:52:14,040 --> 00:52:16,680
considering in that setting

1243
00:52:16,680 --> 00:52:18,839
uh so what we propose here is that the

1244
00:52:18,839 --> 00:52:20,520
streaming algorithm the streaming

1245
00:52:20,520 --> 00:52:21,839
setting should be kind of the more

1246
00:52:21,839 --> 00:52:25,020
General and the more uh like fundamental

1247
00:52:25,020 --> 00:52:27,540
kind of model and then on top of it if

1248
00:52:27,540 --> 00:52:29,460
you if you want more lens you can add

1249
00:52:29,460 --> 00:52:30,540
more elements and consider more

1250
00:52:30,540 --> 00:52:31,619
properties that make the property

1251
00:52:31,619 --> 00:52:32,819
stronger

1252
00:52:32,819 --> 00:52:36,660
so foreign setting

1253
00:52:43,859 --> 00:52:46,380
nonsense yeah so the original bonded so

1254
00:52:46,380 --> 00:52:47,880
are selling uh considered all these

1255
00:52:47,880 --> 00:52:48,839
add-ons

1256
00:52:48,839 --> 00:52:50,579
but from some more instantly there's

1257
00:52:50,579 --> 00:52:53,880
another line of work building a bonded

1258
00:52:53,880 --> 00:52:56,099
storage uh cryptography

1259
00:52:56,099 --> 00:52:59,280
and using the the harness of parities by

1260
00:52:59,280 --> 00:53:03,960
beras that only satisfies the addon a

1261
00:53:03,960 --> 00:53:05,760
in that sense the limitation that we

1262
00:53:05,760 --> 00:53:07,680
have in terms of publicity crypto is

1263
00:53:07,680 --> 00:53:09,359
really tied into type of add-ons that we

1264
00:53:09,359 --> 00:53:10,140
have

1265
00:53:10,140 --> 00:53:11,819
so the lower bound that I talked about

1266
00:53:11,819 --> 00:53:13,380
the limited account of public

1267
00:53:13,380 --> 00:53:15,660
cryptography that we can get is really

1268
00:53:15,660 --> 00:53:18,800
tied to the fact that the protocols are

1269
00:53:18,800 --> 00:53:23,059
restricted to satisfy constraint a

1270
00:53:23,220 --> 00:53:25,559
so uh what we do in this work is we

1271
00:53:25,559 --> 00:53:27,480
sacrifice this constraint we introduce

1272
00:53:27,480 --> 00:53:30,119
interaction but quite maybe quite

1273
00:53:30,119 --> 00:53:33,059
surprisingly we actually managed to uh

1274
00:53:33,059 --> 00:53:35,819
to satisfy audios or constructions

1275
00:53:35,819 --> 00:53:38,640
but more generally the takeaway of this

1276
00:53:38,640 --> 00:53:41,400
like streaming bondage storage model uh

1277
00:53:41,400 --> 00:53:43,920
kind of abstraction is that add-ons are

1278
00:53:43,920 --> 00:53:45,660
nice but there are add-ons and in terms

1279
00:53:45,660 --> 00:53:47,640
of building fecibility results and

1280
00:53:47,640 --> 00:53:50,280
understanding the model uh any like

1281
00:53:50,280 --> 00:53:52,619
removing audio add-ons okay I can still

1282
00:53:52,619 --> 00:53:54,180
be fine it's so interesting in terms of

1283
00:53:54,180 --> 00:53:56,099
understanding what can be what can be

1284
00:53:56,099 --> 00:53:58,339
possible

1285
00:53:58,740 --> 00:54:00,300
okay so getting back to our main

1286
00:54:00,300 --> 00:54:01,619
question our main question is how to

1287
00:54:01,619 --> 00:54:02,940
build public cryptography

1288
00:54:02,940 --> 00:54:04,980
unconditionally independent search model

1289
00:54:04,980 --> 00:54:07,440
where the adversary can be allowed to be

1290
00:54:07,440 --> 00:54:09,420
much more powerful than quadratically in

1291
00:54:09,420 --> 00:54:12,540
the in the honest user storage

1292
00:54:12,540 --> 00:54:15,119
so first we show that we can build a key

1293
00:54:15,119 --> 00:54:16,800
agreement

1294
00:54:16,800 --> 00:54:17,460
um

1295
00:54:17,460 --> 00:54:19,559
handling again any exponential gap

1296
00:54:19,559 --> 00:54:21,720
between the the adversary storage and

1297
00:54:21,720 --> 00:54:24,780
the honest user's memory

1298
00:54:24,780 --> 00:54:26,579
but the number of rounds and the total

1299
00:54:26,579 --> 00:54:28,079
communication of the protocol will scale

1300
00:54:28,079 --> 00:54:30,480
pretty badly they will grow polynomially

1301
00:54:30,480 --> 00:54:32,700
with the with the the memory of the

1302
00:54:32,700 --> 00:54:35,180
adversary

1303
00:54:35,900 --> 00:54:38,339
then we also show that we can kind of

1304
00:54:38,339 --> 00:54:40,559
extend those techniques to handle more

1305
00:54:40,559 --> 00:54:44,099
fancy functionalities like OTC or MPC

1306
00:54:44,099 --> 00:54:46,980
and similarly the the Run complexity on

1307
00:54:46,980 --> 00:54:49,380
the total communication of our protocols

1308
00:54:49,380 --> 00:54:53,400
will scale with the with the

1309
00:54:53,400 --> 00:54:55,740
the memory of the adversary

1310
00:54:55,740 --> 00:54:58,619
and kind of as you said result like

1311
00:54:58,619 --> 00:55:00,540
something that is quite notable is that

1312
00:55:00,540 --> 00:55:02,880
we actually prove that our otn MPC are

1313
00:55:02,880 --> 00:55:05,520
simulation secure that was like at least

1314
00:55:05,520 --> 00:55:07,020
already was the simulation secure that

1315
00:55:07,020 --> 00:55:08,880
was not the case in Prior work that

1316
00:55:08,880 --> 00:55:10,559
considerability so that's kind of a side

1317
00:55:10,559 --> 00:55:14,780
a nice feature for of our Construction

1318
00:55:15,540 --> 00:55:18,660
um yeah so the the dependency here of

1319
00:55:18,660 --> 00:55:20,280
our ROMs and like the interaction that

1320
00:55:20,280 --> 00:55:23,280
we add is seems pretty bad and scares

1321
00:55:23,280 --> 00:55:25,440
pretty badly with the with the with the

1322
00:55:25,440 --> 00:55:28,319
gap between the strength of the adversar

1323
00:55:28,319 --> 00:55:29,940
and the strength of the Holiness users

1324
00:55:29,940 --> 00:55:32,880
whereas the uh the rubber band just said

1325
00:55:32,880 --> 00:55:35,099
that we need some interaction so our

1326
00:55:35,099 --> 00:55:36,480
natural question is how much interaction

1327
00:55:36,480 --> 00:55:38,099
do we need do we need as much as new

1328
00:55:38,099 --> 00:55:40,200
attraction as we use here

1329
00:55:40,200 --> 00:55:42,240
and we show a lot about that a lot of

1330
00:55:42,240 --> 00:55:43,920
interaction is needed

1331
00:55:43,920 --> 00:55:47,700
so we cannot quite uh we cannot we don't

1332
00:55:47,700 --> 00:55:50,220
quite prove a tight result but we show

1333
00:55:50,220 --> 00:55:53,160
that kind of this dependency over M over

1334
00:55:53,160 --> 00:55:57,059
and square is kind of inherent so I have

1335
00:55:57,059 --> 00:55:59,040
to be like this romance is like kind of

1336
00:55:59,040 --> 00:56:00,420
precise in terms of like what protocol

1337
00:56:00,420 --> 00:56:02,640
is talking about so I'm leaving a star

1338
00:56:02,640 --> 00:56:03,420
here

1339
00:56:03,420 --> 00:56:06,300
but essentially it is that if you want

1340
00:56:06,300 --> 00:56:08,880
security against very powerful adversary

1341
00:56:08,880 --> 00:56:10,980
you will need your both your own

1342
00:56:10,980 --> 00:56:13,079
complexity on your communication to grow

1343
00:56:13,079 --> 00:56:16,380
with the complexity of the of the of the

1344
00:56:16,380 --> 00:56:18,800
adversary

1345
00:56:19,680 --> 00:56:22,500
okay so let me give a very brief sketch

1346
00:56:22,500 --> 00:56:24,240
I won't go too much into the details and

1347
00:56:24,240 --> 00:56:27,480
how how we prove the theorem so it turns

1348
00:56:27,480 --> 00:56:29,280
out okay so I'll start with key

1349
00:56:29,280 --> 00:56:31,200
agreement where you have Alison berm

1350
00:56:31,200 --> 00:56:33,240
with memory n that wants to agreement

1351
00:56:33,240 --> 00:56:35,760
they don't share anything in advance and

1352
00:56:35,760 --> 00:56:38,280
one security against uh needs Opera that

1353
00:56:38,280 --> 00:56:40,680
has a larger memory

1354
00:56:40,680 --> 00:56:42,300
uh in terms of that the protocol is

1355
00:56:42,300 --> 00:56:43,859
pretty simple and actually follows a

1356
00:56:43,859 --> 00:56:45,359
kind of the same template a similar

1357
00:56:45,359 --> 00:56:47,640
template as prior work except that we

1358
00:56:47,640 --> 00:56:49,200
add the interaction

1359
00:56:49,200 --> 00:56:52,319
where Addison Bob so Alice will just

1360
00:56:52,319 --> 00:56:54,660
send a long stream of random mids to

1361
00:56:54,660 --> 00:56:55,800
burn

1362
00:56:55,800 --> 00:56:57,599
on what Alison Bob will do is very

1363
00:56:57,599 --> 00:56:59,700
simple they will just pick your random

1364
00:56:59,700 --> 00:57:01,980
application in this long random string

1365
00:57:01,980 --> 00:57:04,500
and remember random index

1366
00:57:04,500 --> 00:57:06,180
so web does the same

1367
00:57:06,180 --> 00:57:08,640
and after the stream is gone they tell

1368
00:57:08,640 --> 00:57:10,680
each other what index they got

1369
00:57:10,680 --> 00:57:13,140
and if they agree they get a key cool

1370
00:57:13,140 --> 00:57:17,118
and otherwise they repeat

1371
00:57:17,220 --> 00:57:19,140
so they are grounded in the end and the

1372
00:57:19,140 --> 00:57:22,400
the claim is that this is secure

1373
00:57:22,500 --> 00:57:24,960
so why is that secure so we prove kind

1374
00:57:24,960 --> 00:57:26,940
of a general information theoretically

1375
00:57:26,940 --> 00:57:27,839
now

1376
00:57:27,839 --> 00:57:31,319
that shows that if a string has a lot of

1377
00:57:31,319 --> 00:57:32,579
entropy

1378
00:57:32,579 --> 00:57:35,940
then if you take a random bit there are

1379
00:57:35,940 --> 00:57:38,099
any randomly that's kind of in the

1380
00:57:38,099 --> 00:57:40,440
sample independently of the string will

1381
00:57:40,440 --> 00:57:44,220
have a lot of entropy so you have a kind

1382
00:57:44,220 --> 00:57:46,020
of we have we proved kind of a test

1383
00:57:46,020 --> 00:57:47,520
statement on how much an entropy of a

1384
00:57:47,520 --> 00:57:49,800
big can have

1385
00:57:49,800 --> 00:57:51,780
so in our context if you consider my

1386
00:57:51,780 --> 00:57:53,880
random variable it should be the long

1387
00:57:53,880 --> 00:57:56,339
stream conditions on what the adversary

1388
00:57:56,339 --> 00:57:58,740
remembers about this long stream what we

1389
00:57:58,740 --> 00:58:01,260
obtain is that the bits that both Alice

1390
00:58:01,260 --> 00:58:04,319
and Bob remember about have constant

1391
00:58:04,319 --> 00:58:06,420
entropy and that you can amplify using

1392
00:58:06,420 --> 00:58:09,480
using the standard things

1393
00:58:09,480 --> 00:58:11,339
so we can both amplify and make that

1394
00:58:11,339 --> 00:58:13,800
more efficient

1395
00:58:13,800 --> 00:58:17,400
okay so that's 4K agreements uh I won't

1396
00:58:17,400 --> 00:58:19,859
talk too much about obvious transfer so

1397
00:58:19,859 --> 00:58:22,920
this is the protocol for Revenue T which

1398
00:58:22,920 --> 00:58:23,940
is kind of a

1399
00:58:23,940 --> 00:58:25,859
building block towards building our team

1400
00:58:25,859 --> 00:58:28,380
so it builds on the profession but adds

1401
00:58:28,380 --> 00:58:30,000
another layer and this layer is

1402
00:58:30,000 --> 00:58:31,559
interactive hashing so the interactive

1403
00:58:31,559 --> 00:58:33,300
hashing protocol of Novi we use that in

1404
00:58:33,300 --> 00:58:35,280
a pretty crucial way I won't talk too

1405
00:58:35,280 --> 00:58:37,140
much about it

1406
00:58:37,140 --> 00:58:39,299
um but

1407
00:58:39,299 --> 00:58:41,520
um maybe I I just want to highlight that

1408
00:58:41,520 --> 00:58:43,740
in terms of security what we obtain is

1409
00:58:43,740 --> 00:58:46,980
that we obtain a secret uh

1410
00:58:46,980 --> 00:58:49,980
sender security a kind of in the bonded

1411
00:58:49,980 --> 00:58:52,380
search model but receiver security is

1412
00:58:52,380 --> 00:58:53,760
obtained kind of unconditionally there's

1413
00:58:53,760 --> 00:58:55,980
no restrictions whatsoever under

1414
00:58:55,980 --> 00:58:58,380
management centers and yeah again we get

1415
00:58:58,380 --> 00:59:02,099
as a bonus simulation security which uh

1416
00:59:02,099 --> 00:59:05,280
prior work fair to achieve

1417
00:59:05,280 --> 00:59:07,020
so there are more technical details but

1418
00:59:07,020 --> 00:59:11,059
a refer to paper for foreign

1419
00:59:11,900 --> 00:59:14,460
overview of how the how we prove the

1420
00:59:14,460 --> 00:59:16,079
lower Bond we actually start with the

1421
00:59:16,079 --> 00:59:18,420
lower bound 40 agreements in the single

1422
00:59:18,420 --> 00:59:20,040
long message setting

1423
00:59:20,040 --> 00:59:24,000
so how does the door open work uh very

1424
00:59:24,000 --> 00:59:26,400
very briefly it supposes that like Alice

1425
00:59:26,400 --> 00:59:28,920
and boom sang a single long message and

1426
00:59:28,920 --> 00:59:30,660
what you look at is the states that

1427
00:59:30,660 --> 00:59:33,000
Alice and Bob have after after this one

1428
00:59:33,000 --> 00:59:34,619
message

1429
00:59:34,619 --> 00:59:37,020
so a zombossians show is that there

1430
00:59:37,020 --> 00:59:39,240
exists a kind of a random variable y

1431
00:59:39,240 --> 00:59:42,059
that decorates the states of Edison

1432
00:59:42,059 --> 00:59:43,680
Group

1433
00:59:43,680 --> 00:59:45,780
and that's kind of conditioned on this

1434
00:59:45,780 --> 00:59:48,960
random random variable way then at least

1435
00:59:48,960 --> 00:59:50,579
and Bob share almost new information so

1436
00:59:50,579 --> 00:59:52,260
they cannot agreement key

1437
00:59:52,260 --> 00:59:54,059
but a really crucial to use the fact

1438
00:59:54,059 --> 00:59:55,680
that Alison Bob share new information to

1439
00:59:55,680 --> 00:59:57,480
begin with so it seems to scale pretty

1440
00:59:57,480 --> 00:59:59,400
badly with introduction that's kind of

1441
00:59:59,400 --> 01:00:02,640
where it starts but we showed that we

1442
01:00:02,640 --> 01:00:04,260
consume

1443
01:00:04,260 --> 01:00:04,920
um

1444
01:00:04,920 --> 01:00:08,359
recycle this analysis and to turn this

1445
01:00:08,359 --> 01:00:11,099
technical Lemma into a round reduction

1446
01:00:11,099 --> 01:00:13,380
compiler to prove some kind of lower

1447
01:00:13,380 --> 01:00:16,559
bounds about interaction

1448
01:00:16,559 --> 01:00:18,420
uh yeah

1449
01:00:18,420 --> 01:00:20,220
so yeah to summarize

1450
01:00:20,220 --> 01:00:23,160
um so what I talked about is is a

1451
01:00:23,160 --> 01:00:26,700
balanced search model where which is of

1452
01:00:26,700 --> 01:00:28,079
theoretical interest because it allows

1453
01:00:28,079 --> 01:00:29,819
you prove security unconditionally and

1454
01:00:29,819 --> 01:00:31,859
that's kind of not what happens with

1455
01:00:31,859 --> 01:00:34,680
standard models of adversaries

1456
01:00:34,680 --> 01:00:37,079
and first conceptual contribution is

1457
01:00:37,079 --> 01:00:38,819
that the streaming bonded storage model

1458
01:00:38,819 --> 01:00:41,339
should be kind of the right base notion

1459
01:00:41,339 --> 01:00:43,260
and then on top of it if you want items

1460
01:00:43,260 --> 01:00:46,740
you can you can add on top of it

1461
01:00:46,740 --> 01:00:49,020
and then we also show how to get public

1462
01:00:49,020 --> 01:00:51,480
encryption on a public cryptography so

1463
01:00:51,480 --> 01:00:53,640
key agreement and so on and so forth in

1464
01:00:53,640 --> 01:00:55,920
the bonded search model uh breaking some

1465
01:00:55,920 --> 01:00:57,660
lower bounds uh start converting some

1466
01:00:57,660 --> 01:01:01,260
lower bounds that were proven before and

1467
01:01:01,260 --> 01:01:04,200
we show that this can be done up to

1468
01:01:04,200 --> 01:01:05,940
handling adversaries that are

1469
01:01:05,940 --> 01:01:07,799
potentially exponentially more powerful

1470
01:01:07,799 --> 01:01:09,839
than honest users

1471
01:01:09,839 --> 01:01:11,940
and this is at the cost of very heavy

1472
01:01:11,940 --> 01:01:13,319
interaction on communication and we show

1473
01:01:13,319 --> 01:01:15,660
that this is necessary

1474
01:01:15,660 --> 01:01:18,350
uh yeah thanks for the attention

1475
01:01:18,350 --> 01:01:21,469
[Applause]

1476
01:01:24,720 --> 01:01:27,420
okay thanks for this excellent talk do

1477
01:01:27,420 --> 01:01:31,460
you have questions from the audience

1478
01:01:33,900 --> 01:01:36,480
uh can you move to the slide for the Kia

1479
01:01:36,480 --> 01:01:38,160
green protocol

1480
01:01:38,160 --> 01:01:41,160
before I ask the question

1481
01:01:41,160 --> 01:01:42,240
yeah

1482
01:01:42,240 --> 01:01:45,180
so basically you say that Alice and Bob

1483
01:01:45,180 --> 01:01:48,020
will choose a random historian random

1484
01:01:48,020 --> 01:01:50,940
index and the probability that they

1485
01:01:50,940 --> 01:01:55,440
match is 1 over 2m so we expect 2 m

1486
01:01:55,440 --> 01:02:00,240
rounds before it succeeds and with the

1487
01:02:00,240 --> 01:02:02,339
um corresponding to terabytes or

1488
01:02:02,339 --> 01:02:06,780
petabytes of storage this might be very

1489
01:02:06,780 --> 01:02:09,839
long and how do you

1490
01:02:09,839 --> 01:02:13,680
do you have any comments or any counter

1491
01:02:13,680 --> 01:02:16,859
measures to avoid such very wrong so so

1492
01:02:16,859 --> 01:02:18,599
we uh

1493
01:02:18,599 --> 01:02:19,680
yeah so

1494
01:02:19,680 --> 01:02:22,380
this agreement will use very heavily

1495
01:02:22,380 --> 01:02:25,319
interaction and communication but with

1496
01:02:25,319 --> 01:02:26,700
the lower bound we prove that this is

1497
01:02:26,700 --> 01:02:28,920
necessary so this is kind of a drawback

1498
01:02:28,920 --> 01:02:30,359
uh

1499
01:02:30,359 --> 01:02:32,339
this is a necessary drawback and again

1500
01:02:32,339 --> 01:02:34,319
the point is to have feasibility without

1501
01:02:34,319 --> 01:02:37,680
of key agreements in a unconditionally

1502
01:02:37,680 --> 01:02:39,359
so the point is Not Practical efficiency

1503
01:02:39,359 --> 01:02:43,020
by it means it's more about uh yeah

1504
01:02:43,020 --> 01:02:45,119
feasibility but uh but yeah this is this

1505
01:02:45,119 --> 01:02:46,799
is in the round this is a better bag but

1506
01:02:46,799 --> 01:02:50,720
it's inherent you know thank you

1507
01:02:54,059 --> 01:02:55,980
yeah so I find this indeed very

1508
01:02:55,980 --> 01:02:58,200
unintuitive that you basically just you

1509
01:02:58,200 --> 01:02:59,339
would have expected some kind of

1510
01:02:59,339 --> 01:03:01,680
amplification you know they agree maybe

1511
01:03:01,680 --> 01:03:03,839
on one slightly correlated bit and then

1512
01:03:03,839 --> 01:03:05,099
it gets stronger and stronger but you

1513
01:03:05,099 --> 01:03:07,440
see no the basically the protocols you

1514
01:03:07,440 --> 01:03:09,540
throw away everything and you just uh

1515
01:03:09,540 --> 01:03:11,880
roll until you win that's something yes

1516
01:03:11,880 --> 01:03:13,559
until you could just reuse the same X

1517
01:03:13,559 --> 01:03:15,839
all the time right

1518
01:03:15,839 --> 01:03:18,799
um in every round

1519
01:03:18,900 --> 01:03:22,140
I'm not sure we don't you know in our

1520
01:03:22,140 --> 01:03:24,240
protocol we don't but I don't have on

1521
01:03:24,240 --> 01:03:26,160
top of my head say an attack if you use

1522
01:03:26,160 --> 01:03:28,940
this MX or anything

1523
01:03:30,839 --> 01:03:32,880
yeah but for the protocol not really we

1524
01:03:32,880 --> 01:03:36,079
want if you would use the same

1525
01:03:38,220 --> 01:03:42,180
also like I guess reusing the Cemex is

1526
01:03:42,180 --> 01:03:44,040
also tricky in our modern because the

1527
01:03:44,040 --> 01:03:46,200
the the parties cannot remember actually

1528
01:03:46,200 --> 01:03:47,579
it could be a proof or something right

1529
01:03:47,579 --> 01:03:49,440
that you have a lot of like a physically

1530
01:03:49,440 --> 01:03:51,420
unplannable function some big thing that

1531
01:03:51,420 --> 01:03:53,280
you can learn oh yeah maybe using like

1532
01:03:53,280 --> 01:03:55,680
physical assumptions

1533
01:03:55,680 --> 01:03:59,000
okay all right

1534
01:04:00,319 --> 01:04:03,180
so is there some sort of amortization if

1535
01:04:03,180 --> 01:04:04,980
you want to agree on many bits then you

1536
01:04:04,980 --> 01:04:06,720
probably don't have to pay that much

1537
01:04:06,720 --> 01:04:08,339
like the communication does not scale

1538
01:04:08,339 --> 01:04:09,540
with the number of bits and what you

1539
01:04:09,540 --> 01:04:12,359
want to go yes yes no collection and

1540
01:04:12,359 --> 01:04:14,160
once you have a correlation then yes

1541
01:04:14,160 --> 01:04:15,720
then you can amplify and for instance

1542
01:04:15,720 --> 01:04:18,540
like symmetrically uh like the fact that

1543
01:04:18,540 --> 01:04:20,760
we have symmetry uh crypto independent

1544
01:04:20,760 --> 01:04:22,440
search models right it says that you can

1545
01:04:22,440 --> 01:04:24,299
amplify like very early because they're

1546
01:04:24,299 --> 01:04:27,079
exponential Gap

1547
01:04:28,559 --> 01:04:30,480
okay then you know let's thank the

1548
01:04:30,480 --> 01:04:32,460
speakers again and we have a track

1549
01:04:32,460 --> 01:04:34,559
switch break which goes on for four more

1550
01:04:34,559 --> 01:04:36,180
minutes so you have four minutes to get

1551
01:04:36,180 --> 01:04:37,260
to the you know

1552
01:04:37,260 --> 01:04:40,400
in case you don't know

1553
01:06:56,460 --> 01:06:59,460
foreign

1554
01:07:24,000 --> 01:07:26,240
foreign

1555
01:08:25,979 --> 01:08:28,519
okay

1556
01:08:41,460 --> 01:08:44,460
cases

1557
01:09:07,560 --> 01:09:10,520
so please

1558
01:09:14,399 --> 01:09:16,939
um please

1559
01:09:20,819 --> 01:09:23,939
please please take your seats we're

1560
01:09:23,939 --> 01:09:26,719
continuing in a second

1561
01:09:30,839 --> 01:09:32,698
okay welcome to the second part of the

1562
01:09:32,698 --> 01:09:34,920
lower bound sessions

1563
01:09:34,920 --> 01:09:37,140
and so this part is about Quantum lower

1564
01:09:37,140 --> 01:09:39,238
bounds the first talk in this session is

1565
01:09:39,238 --> 01:09:41,100
non-uniformity and Quantum advice in the

1566
01:09:41,100 --> 01:09:42,960
quantum random Oracle model by Queen

1567
01:09:42,960 --> 01:09:45,540
Peng Liu unfortunately equipping cannot

1568
01:09:45,540 --> 01:09:48,359
be here so takayashi yamakawa is going

1569
01:09:48,359 --> 01:09:52,920
to give the talk on his behalf enjoy

1570
01:09:53,880 --> 01:09:56,160
so thank you for introduction so I'm

1571
01:09:56,160 --> 01:09:58,320
Takashi and I will give a talk about

1572
01:09:58,320 --> 01:10:00,600
non-informity Quantum advice and Quantum

1573
01:10:00,600 --> 01:10:04,520
landmark by GP and Leo

1574
01:10:04,560 --> 01:10:07,199
so let me start by conveying the main

1575
01:10:07,199 --> 01:10:08,760
message of the work

1576
01:10:08,760 --> 01:10:11,940
first Global thoughts cannot be sped up

1577
01:10:11,940 --> 01:10:14,600
even with content advice and second

1578
01:10:14,600 --> 01:10:17,520
sorting defeats non-usual attacks even

1579
01:10:17,520 --> 01:10:20,159
with Quantum advice and either the main

1580
01:10:20,159 --> 01:10:23,880
messages of the work so let me start

1581
01:10:23,880 --> 01:10:27,300
so this work is about analyzing the

1582
01:10:27,300 --> 01:10:30,420
security of cryptographic hash so a hash

1583
01:10:30,420 --> 01:10:34,800
function is some function that uh takes

1584
01:10:34,800 --> 01:10:37,560
a long relatively long input and has it

1585
01:10:37,560 --> 01:10:40,800
is to relatively short digest and it is

1586
01:10:40,800 --> 01:10:42,900
publicly known function that is known to

1587
01:10:42,900 --> 01:10:43,739
everyone

1588
01:10:43,739 --> 01:10:46,500
and we expect hash functions to satisfy

1589
01:10:46,500 --> 01:10:48,840
several desired cryptographic properties

1590
01:10:48,840 --> 01:10:51,480
such as Collision resistance one witness

1591
01:10:51,480 --> 01:10:54,000
proof of work or some other ideal

1592
01:10:54,000 --> 01:10:55,640
properties for

1593
01:10:55,640 --> 01:10:58,320
cryptographic purposes

1594
01:10:58,320 --> 01:11:01,500
and when we analyze security of hash

1595
01:11:01,500 --> 01:11:05,219
functions we often rely on model what is

1596
01:11:05,219 --> 01:11:07,380
called random org model introduced by

1597
01:11:07,380 --> 01:11:09,120
Bilal and the rugabe

1598
01:11:09,120 --> 01:11:12,540
so in this model we model a real world

1599
01:11:12,540 --> 01:11:15,600
hash function at the black box that

1600
01:11:15,600 --> 01:11:17,880
computes the random function and we

1601
01:11:17,880 --> 01:11:21,000
analyze the security in touch model and

1602
01:11:21,000 --> 01:11:23,460
when in instantiate the random Oracle

1603
01:11:23,460 --> 01:11:25,920
with some real hash function

1604
01:11:25,920 --> 01:11:28,980
we heuristically assume that this

1605
01:11:28,980 --> 01:11:31,320
instantiation is as secure as the

1606
01:11:31,320 --> 01:11:35,100
security in the random organ model

1607
01:11:35,100 --> 01:11:37,199
and another thing about the random work

1608
01:11:37,199 --> 01:11:40,260
model is that we can give many simple

1609
01:11:40,260 --> 01:11:42,659
proofs and also we can get tight Bound

1610
01:11:42,659 --> 01:11:47,000
in many cases like foreign

1611
01:11:51,140 --> 01:11:53,880
function prg then Collision hash

1612
01:11:53,880 --> 01:11:57,659
functions and these we can get this this

1613
01:11:57,659 --> 01:12:00,980
type bounds very easily

1614
01:12:01,020 --> 01:12:03,780
however there are cracked in the random

1615
01:12:03,780 --> 01:12:04,880
work model

1616
01:12:04,880 --> 01:12:08,219
it is that there is a mismatch between

1617
01:12:08,219 --> 01:12:09,960
the security in the random Market model

1618
01:12:09,960 --> 01:12:12,480
and the Practical attacks in the

1619
01:12:12,480 --> 01:12:15,480
presence of pre-processing for example

1620
01:12:15,480 --> 01:12:18,659
for Collision resistant hash function uh

1621
01:12:18,659 --> 01:12:20,820
the security Bound in the random work

1622
01:12:20,820 --> 01:12:23,699
model is to squared over n where T is

1623
01:12:23,699 --> 01:12:25,679
the number of queries random worker and

1624
01:12:25,679 --> 01:12:27,780
N is the side of the output space of the

1625
01:12:27,780 --> 01:12:30,780
random function and for one function or

1626
01:12:30,780 --> 01:12:33,300
we have the bound of T over n

1627
01:12:33,300 --> 01:12:36,540
however if we are allowed to do some

1628
01:12:36,540 --> 01:12:38,460
preprocessing that depends on hash

1629
01:12:38,460 --> 01:12:43,260
function we can overcome this Bound for

1630
01:12:43,260 --> 01:12:47,820
example if if we first find your uh

1631
01:12:47,820 --> 01:12:50,040
collision and how to code the Collision

1632
01:12:50,040 --> 01:12:53,760
then we can just trivially break the

1633
01:12:53,760 --> 01:12:55,320
Collision resistance with probability

1634
01:12:55,320 --> 01:12:56,520
one

1635
01:12:56,520 --> 01:12:59,040
and this sounds like a kind of cheating

1636
01:12:59,040 --> 01:13:01,500
but for one witness that is more

1637
01:13:01,500 --> 01:13:04,260
interesting and there is a very

1638
01:13:04,260 --> 01:13:05,900
beautiful

1639
01:13:05,900 --> 01:13:09,360
algorithm called rainbow table and by

1640
01:13:09,360 --> 01:13:12,440
using rainbow terror attack or we can

1641
01:13:12,440 --> 01:13:14,940
break the one winning with this

1642
01:13:14,940 --> 01:13:19,020
probability where s is the number of

1643
01:13:19,020 --> 01:13:21,480
otherwise or that is generated in the

1644
01:13:21,480 --> 01:13:24,379
preprocessing phase

1645
01:13:24,600 --> 01:13:26,159
so

1646
01:13:26,159 --> 01:13:30,719
as you see here we have a mismatch in

1647
01:13:30,719 --> 01:13:32,699
the lower bound upper bound

1648
01:13:32,699 --> 01:13:35,520
so oh sorry but can we say this build

1649
01:13:35,520 --> 01:13:37,380
for random work model from non-informed

1650
01:13:37,380 --> 01:13:40,020
tax and the people answered this

1651
01:13:40,020 --> 01:13:43,280
question by EF

1652
01:13:43,560 --> 01:13:47,460
and uh so I'll explain what they did

1653
01:13:47,460 --> 01:13:51,120
so they formalized or extension of

1654
01:13:51,120 --> 01:13:53,159
random organ model that captures such a

1655
01:13:53,159 --> 01:13:55,020
knowledge from attacks that's performed

1656
01:13:55,020 --> 01:13:58,080
some purple processing in this model we

1657
01:13:58,080 --> 01:14:00,840
can model non-informed attacker as a

1658
01:14:00,840 --> 01:14:04,440
pair of two algorithm A1 and A2 and A1

1659
01:14:04,440 --> 01:14:07,800
is unbounded algorithm that that

1660
01:14:07,800 --> 01:14:09,840
generates the bounded side out by the

1661
01:14:09,840 --> 01:14:12,060
sigma and then in the Third Kind of

1662
01:14:12,060 --> 01:14:15,719
stage A2 takes this otherwise as input

1663
01:14:15,719 --> 01:14:18,659
and makes queries to the random work to

1664
01:14:18,659 --> 01:14:21,900
solve some problem like one unit or

1665
01:14:21,900 --> 01:14:23,580
Collision resistance

1666
01:14:23,580 --> 01:14:27,420
and uh we give two parameters for the

1667
01:14:27,420 --> 01:14:31,140
algorithm f is the number of bits for

1668
01:14:31,140 --> 01:14:32,820
the otherwise and T the number of

1669
01:14:32,820 --> 01:14:34,860
queries in the second phase and by

1670
01:14:34,860 --> 01:14:36,900
parameterizing these two parameters or

1671
01:14:36,900 --> 01:14:38,520
we can give some security bounds

1672
01:14:38,520 --> 01:14:41,760
depending on smt and we can now fix the

1673
01:14:41,760 --> 01:14:43,320
cracks

1674
01:14:43,320 --> 01:14:45,800
and as you can see

1675
01:14:45,800 --> 01:14:48,900
in such a model we can show a bound

1676
01:14:48,900 --> 01:14:50,100
record generating hash function

1677
01:14:50,100 --> 01:14:52,620
environment function or most that

1678
01:14:52,620 --> 01:14:55,679
matches their practical attacks and uh

1679
01:14:55,679 --> 01:14:57,960
as you can see for Collision resistance

1680
01:14:57,960 --> 01:14:59,880
if you you're allowed to do

1681
01:14:59,880 --> 01:15:02,159
preprocessing you can trivially break

1682
01:15:02,159 --> 01:15:04,679
the Collision register so for getting

1683
01:15:04,679 --> 01:15:06,900
the meaning group bound or you need to

1684
01:15:06,900 --> 01:15:09,000
do some Authority technique called

1685
01:15:09,000 --> 01:15:12,540
sorting and known Technique No existing

1686
01:15:12,540 --> 01:15:14,640
paper shows that sorting generic already

1687
01:15:14,640 --> 01:15:17,580
fit processing attacks and for one

1688
01:15:17,580 --> 01:15:19,620
function you can see that here is a

1689
01:15:19,620 --> 01:15:23,460
small Gap here but this it is known that

1690
01:15:23,460 --> 01:15:26,159
filling this Gap there is a barrier for

1691
01:15:26,159 --> 01:15:28,800
filling this Gap and that is related to

1692
01:15:28,800 --> 01:15:30,300
some circuit lower bound and

1693
01:15:30,300 --> 01:15:32,699
communication comparativity and freeing

1694
01:15:32,699 --> 01:15:35,699
this Gap is uh important open problem

1695
01:15:35,699 --> 01:15:38,159
even in the classical setting and the

1696
01:15:38,159 --> 01:15:40,020
filling this Gap is not the scope of

1697
01:15:40,020 --> 01:15:42,239
this work

1698
01:15:42,239 --> 01:15:45,360
and uh everything I mentioned so far is

1699
01:15:45,360 --> 01:15:48,600
just in the classical setting and uh but

1700
01:15:48,600 --> 01:15:49,500
uh

1701
01:15:49,500 --> 01:15:53,219
so if we consider Quantum attackers of

1702
01:15:53,219 --> 01:15:54,840
course we have to do something similar

1703
01:15:54,840 --> 01:15:57,060
in the quantum setting and this is what

1704
01:15:57,060 --> 01:16:00,600
the these workers do

1705
01:16:00,600 --> 01:16:03,120
and uh their favorite work already

1706
01:16:03,120 --> 01:16:05,280
several works that configure non-uniform

1707
01:16:05,280 --> 01:16:06,840
Quantum attacks in the quantum random

1708
01:16:06,840 --> 01:16:11,280
model so this works Define similar model

1709
01:16:11,280 --> 01:16:13,920
that captures content at the battery

1710
01:16:13,920 --> 01:16:17,640
with proper setting and so this is

1711
01:16:17,640 --> 01:16:19,800
similar Define similarly to the

1712
01:16:19,800 --> 01:16:22,620
classical setting so we Define the

1713
01:16:22,620 --> 01:16:25,199
non-inform algorithm as a pair of A1 and

1714
01:16:25,199 --> 01:16:27,600
A2 where A1 is unbounded time that

1715
01:16:27,600 --> 01:16:30,060
generates some bounded side otherwise

1716
01:16:30,060 --> 01:16:32,520
and A2 is online algorithm that makes

1717
01:16:32,520 --> 01:16:34,860
content queries to solve some problem

1718
01:16:34,860 --> 01:16:39,000
and here there are two choices of the

1719
01:16:39,000 --> 01:16:42,560
definition of the model so one is

1720
01:16:42,560 --> 01:16:45,900
to restrict the otherwise to be

1721
01:16:45,900 --> 01:16:48,239
classical and the other is to allow the

1722
01:16:48,239 --> 01:16:50,400
advice to be condemned and so there are

1723
01:16:50,400 --> 01:16:53,460
two possible models

1724
01:16:53,460 --> 01:16:56,820
and uh so let's think about what we can

1725
01:16:56,820 --> 01:16:58,100
do

1726
01:16:58,100 --> 01:17:01,500
for breaking one-way functions by using

1727
01:17:01,500 --> 01:17:04,260
classical content otherwise and Quantum

1728
01:17:04,260 --> 01:17:06,360
access to random Oracle

1729
01:17:06,360 --> 01:17:09,000
so as I mentioned there is a attack

1730
01:17:09,000 --> 01:17:11,820
called rainbow table attack that uses

1731
01:17:11,820 --> 01:17:13,679
eight bits of advice

1732
01:17:13,679 --> 01:17:16,620
and making a classical query in online

1733
01:17:16,620 --> 01:17:20,940
to involve some bombing function

1734
01:17:20,940 --> 01:17:24,060
or if we are given Quantum access to the

1735
01:17:24,060 --> 01:17:26,880
random Oracle we can also simply run the

1736
01:17:26,880 --> 01:17:29,699
global touch algorithm without using any

1737
01:17:29,699 --> 01:17:32,460
otherwise to break the one witness

1738
01:17:32,460 --> 01:17:35,219
the based on this observation in this

1739
01:17:35,219 --> 01:17:39,239
model we have the uh algorithm that had

1740
01:17:39,239 --> 01:17:41,880
Advantage like this the first time comes

1741
01:17:41,880 --> 01:17:43,739
from the rainbow table attack which is

1742
01:17:43,739 --> 01:17:45,900
totally classical and the third time

1743
01:17:45,900 --> 01:17:48,719
comes from a global attack or which is

1744
01:17:48,719 --> 01:17:51,780
content but doesn't use any otherwise

1745
01:17:51,780 --> 01:17:56,040
and uh but this algorithm doesn't use it

1746
01:17:56,040 --> 01:17:59,640
doesn't combined otherwise and Quantum

1747
01:17:59,640 --> 01:18:01,860
algorithm so natural Christian is that

1748
01:18:01,860 --> 01:18:05,599
otherwise have content algorithms

1749
01:18:06,000 --> 01:18:07,560
and uh

1750
01:18:07,560 --> 01:18:11,880
for that question the existing work by

1751
01:18:11,880 --> 01:18:14,699
CG airq already a password answered

1752
01:18:14,699 --> 01:18:15,659
question

1753
01:18:15,659 --> 01:18:19,739
so they gave a Bound for

1754
01:18:19,739 --> 01:18:22,440
both the classical advice and Quantum

1755
01:18:22,440 --> 01:18:25,199
other setting and the classical advice

1756
01:18:25,199 --> 01:18:28,260
setting for example performing functions

1757
01:18:28,260 --> 01:18:31,620
they give a bound of Ft plus t squared

1758
01:18:31,620 --> 01:18:36,060
over n and the first time is T Over N

1759
01:18:36,060 --> 01:18:39,420
comes from the capture the rainbow table

1760
01:18:39,420 --> 01:18:41,340
attack and the second attemptive career

1761
01:18:41,340 --> 01:18:44,400
over n capture the global attack and so

1762
01:18:44,400 --> 01:18:46,800
this essentially means that there is no

1763
01:18:46,800 --> 01:18:49,860
way to speed up global global algorithm

1764
01:18:49,860 --> 01:18:52,860
by using otherwise and uh yeah and

1765
01:18:52,860 --> 01:18:55,140
similarly for PSG they give a tight

1766
01:18:55,140 --> 01:18:58,739
bound and the author they all they also

1767
01:18:58,739 --> 01:19:01,500
show that if we use sufficiently large

1768
01:19:01,500 --> 01:19:04,500
salt then this basically generally

1769
01:19:04,500 --> 01:19:09,000
defeat any purposing attack and so cdaq

1770
01:19:09,000 --> 01:19:11,400
20 result is very good for classical

1771
01:19:11,400 --> 01:19:14,100
advice setting on the other hand for

1772
01:19:14,100 --> 01:19:17,280
Quantum other setting the bound is a

1773
01:19:17,280 --> 01:19:19,560
little bit worth for example for one

1774
01:19:19,560 --> 01:19:22,080
with functions uh there is some

1775
01:19:22,080 --> 01:19:25,199
one-third power of one-third and for prg

1776
01:19:25,199 --> 01:19:27,480
this is even worse so there is some

1777
01:19:27,480 --> 01:19:30,780
power 1 over 90.

1778
01:19:30,780 --> 01:19:34,199
and the author for thoughting they could

1779
01:19:34,199 --> 01:19:38,820
only give a limited result about the the

1780
01:19:38,820 --> 01:19:40,440
Sorting

1781
01:19:40,440 --> 01:19:44,460
and but this mismatch when the Bound in

1782
01:19:44,460 --> 01:19:46,020
the classical advice and Quantum are

1783
01:19:46,020 --> 01:19:47,820
setting a little bit a little bit weird

1784
01:19:47,820 --> 01:19:50,460
because there is no known algorithm that

1785
01:19:50,460 --> 01:19:53,100
makes use of quantum otherwise and speed

1786
01:19:53,100 --> 01:19:55,140
up the algorithm compared to the one

1787
01:19:55,140 --> 01:19:58,199
based in classical advice

1788
01:19:58,199 --> 01:20:01,739
so the natural question is for this that

1789
01:20:01,739 --> 01:20:04,199
content advisory rehab

1790
01:20:04,199 --> 01:20:07,260
and this is the question this work uh

1791
01:20:07,260 --> 01:20:10,020
configured and this is the result of

1792
01:20:10,020 --> 01:20:12,840
this work basically this work shows that

1793
01:20:12,840 --> 01:20:16,679
even using content otherwise the bound

1794
01:20:16,679 --> 01:20:20,280
is the same as the Bound in the

1795
01:20:20,280 --> 01:20:22,380
classical advert setting shown in CDL

1796
01:20:22,380 --> 01:20:26,100
q20 so this means that Quantum advice is

1797
01:20:26,100 --> 01:20:27,540
not more powerful than classical

1798
01:20:27,540 --> 01:20:31,020
otherwise for these problems and also

1799
01:20:31,020 --> 01:20:33,780
this work shows that sorting defeats

1800
01:20:33,780 --> 01:20:37,099
proprocessing generally

1801
01:20:37,980 --> 01:20:41,820
and uh so let me explain the main idea

1802
01:20:41,820 --> 01:20:45,980
for obtaining the result

1803
01:20:46,020 --> 01:20:50,219
and in the previous work of cglq20 they

1804
01:20:50,219 --> 01:20:53,100
reduce the

1805
01:20:53,100 --> 01:20:56,520
abound with advice to some something

1806
01:20:56,520 --> 01:20:58,980
called multi-instance game in the

1807
01:20:58,980 --> 01:21:01,920
multi-insert game we configure

1808
01:21:01,920 --> 01:21:05,580
interactive game where challenges sends

1809
01:21:05,580 --> 01:21:09,420
some instance and adversary return the

1810
01:21:09,420 --> 01:21:11,880
answer and these two parties repeat this

1811
01:21:11,880 --> 01:21:13,560
procedure many times

1812
01:21:13,560 --> 01:21:16,800
and in this game suppose that there

1813
01:21:16,800 --> 01:21:20,580
isn't no uniform adversary that uses

1814
01:21:20,580 --> 01:21:24,300
some classical advice figma

1815
01:21:24,300 --> 01:21:27,780
and solve the single instance game with

1816
01:21:27,780 --> 01:21:31,560
probability Delta then if we repeat this

1817
01:21:31,560 --> 01:21:35,840
algorithm G times then this algorithm

1818
01:21:35,840 --> 01:21:38,760
solves all the instances with

1819
01:21:38,760 --> 01:21:42,239
probability Delta to the power of G

1820
01:21:42,239 --> 01:21:45,540
and in the previous work in in the

1821
01:21:45,540 --> 01:21:47,159
previous Bound in the classical

1822
01:21:47,159 --> 01:21:51,300
otherwise setting this observation plays

1823
01:21:51,300 --> 01:21:53,040
the important role

1824
01:21:53,040 --> 01:21:54,420
however

1825
01:21:54,420 --> 01:21:57,480
this argument doesn't work when the

1826
01:21:57,480 --> 01:22:01,500
adverse is content this is because if

1827
01:22:01,500 --> 01:22:03,960
you run the algorithm with Quantum

1828
01:22:03,960 --> 01:22:06,659
alphabet once then the otherwise May

1829
01:22:06,659 --> 01:22:09,360
collapse and when you run this algorithm

1830
01:22:09,360 --> 01:22:12,360
second time the success probability may

1831
01:22:12,360 --> 01:22:14,460
be different and this is the problem and

1832
01:22:14,460 --> 01:22:16,320
this is why the previous work couldn't

1833
01:22:16,320 --> 01:22:19,980
get a good Bound for Content as by

1834
01:22:19,980 --> 01:22:21,719
setting

1835
01:22:21,719 --> 01:22:23,840
and this work

1836
01:22:23,840 --> 01:22:26,640
resolved this problem by considering

1837
01:22:26,640 --> 01:22:30,739
another type of game which they call

1838
01:22:30,739 --> 01:22:33,179
alternating measurement again

1839
01:22:33,179 --> 01:22:37,140
and very roughly speaking uh

1840
01:22:37,140 --> 01:22:39,719
the problem in the multi-inchant game is

1841
01:22:39,719 --> 01:22:42,739
that because we measure the

1842
01:22:42,739 --> 01:22:46,380
adversaries answer X Prime I as a

1843
01:22:46,380 --> 01:22:48,360
classical string and this is the source

1844
01:22:48,360 --> 01:22:50,640
of the unnecessary collapsing of the

1845
01:22:50,640 --> 01:22:54,120
other waters otherwise so in the

1846
01:22:54,120 --> 01:22:56,820
alternating measurement game instead of

1847
01:22:56,820 --> 01:22:58,980
measuring the answer as a classical

1848
01:22:58,980 --> 01:23:02,940
string uh the game only measures one bit

1849
01:23:02,940 --> 01:23:06,659
information if the adversary succeeds in

1850
01:23:06,659 --> 01:23:10,380
solving the problem and because of this

1851
01:23:10,380 --> 01:23:13,560
we can avoid a necessary collapse of the

1852
01:23:13,560 --> 01:23:17,280
other advice and they can achieve the

1853
01:23:17,280 --> 01:23:19,860
similar bound as this and if you're

1854
01:23:19,860 --> 01:23:23,159
familiar with the content complexity

1855
01:23:23,159 --> 01:23:26,880
Theory this is very similar to the work

1856
01:23:26,880 --> 01:23:30,199
of Mario odd and Waters which give the

1857
01:23:30,199 --> 01:23:33,540
weakness preserving amplification for

1858
01:23:33,540 --> 01:23:36,440
qma languages

1859
01:23:37,320 --> 01:23:41,100
yeah and so the take away message of

1860
01:23:41,100 --> 01:23:43,440
this work is the following for many

1861
01:23:43,440 --> 01:23:46,640
security games based on hash functions

1862
01:23:46,640 --> 01:23:49,560
content otherwise is not more powerful

1863
01:23:49,560 --> 01:23:51,540
than classical otherwise

1864
01:23:51,540 --> 01:23:54,000
and author sorting defeats any

1865
01:23:54,000 --> 01:23:57,060
professional attacks and here I

1866
01:23:57,060 --> 01:23:59,340
mentioned many natural security games

1867
01:23:59,340 --> 01:24:03,000
and this work actually also shows some

1868
01:24:03,000 --> 01:24:05,400
contrite the game that give the

1869
01:24:05,400 --> 01:24:07,920
exponential uh separation between

1870
01:24:07,920 --> 01:24:10,679
classical advice and Quantum otherwise

1871
01:24:10,679 --> 01:24:14,100
in their very limited setting where

1872
01:24:14,100 --> 01:24:16,199
there is no online query which is

1873
01:24:16,199 --> 01:24:19,820
written as T equals zero and this

1874
01:24:19,820 --> 01:24:23,460
separation is obtained by Bitcoin the

1875
01:24:23,460 --> 01:24:27,000
recent work by yamakawa and chandri

1876
01:24:27,000 --> 01:24:29,100
and finally let me mention some

1877
01:24:29,100 --> 01:24:31,860
subsequent work and this significant

1878
01:24:31,860 --> 01:24:34,440
work is related to the following open

1879
01:24:34,440 --> 01:24:35,699
problem

1880
01:24:35,699 --> 01:24:38,040
that content advice have more power than

1881
01:24:38,040 --> 01:24:40,440
classical otherwise or in other words

1882
01:24:40,440 --> 01:24:45,480
pqp slash poly equal Big B poly and uh

1883
01:24:45,480 --> 01:24:47,880
Aronson and cooperberg gave her

1884
01:24:47,880 --> 01:24:49,679
separation between these classes

1885
01:24:49,679 --> 01:24:53,460
relative to Quantum Oracle however after

1886
01:24:53,460 --> 01:24:57,000
their work it is an open problem to give

1887
01:24:57,000 --> 01:24:59,219
a separation relative to a classical

1888
01:24:59,219 --> 01:25:01,440
overgrowth and when I say classical

1889
01:25:01,440 --> 01:25:04,380
Oracle this means some work that

1890
01:25:04,380 --> 01:25:07,620
computes classical function but that can

1891
01:25:07,620 --> 01:25:11,520
be active quantumly by Quantum algorithm

1892
01:25:11,520 --> 01:25:14,940
and in a recent work by chip and myself

1893
01:25:14,940 --> 01:25:16,860
and others

1894
01:25:16,860 --> 01:25:19,739
we show separation between these two

1895
01:25:19,739 --> 01:25:22,140
classes relative to classically

1896
01:25:22,140 --> 01:25:24,780
accessible classical Oracle which is the

1897
01:25:24,780 --> 01:25:26,520
Oracle that computes a classical

1898
01:25:26,520 --> 01:25:30,239
function but and that can be acted only

1899
01:25:30,239 --> 01:25:33,780
classically even by Quantum algorithms

1900
01:25:33,780 --> 01:25:37,080
and we also separate similar uh we also

1901
01:25:37,080 --> 01:25:39,060
give similar separations for qma and

1902
01:25:39,060 --> 01:25:43,199
qcma and this result is obtained by

1903
01:25:43,199 --> 01:25:45,840
extending the contrived separation given

1904
01:25:45,840 --> 01:25:48,600
in this work where that work only worked

1905
01:25:48,600 --> 01:25:52,199
in the setting in t equals zero

1906
01:25:52,199 --> 01:25:54,540
and this is in my talk if you have any

1907
01:25:54,540 --> 01:25:56,940
question please have to chipping or with

1908
01:25:56,940 --> 01:26:00,080
the author and thank you

1909
01:26:00,080 --> 01:26:03,060
[Applause]

1910
01:26:03,060 --> 01:26:05,480
okay

1911
01:26:06,480 --> 01:26:08,040
thanks for the stock so are you taking

1912
01:26:08,040 --> 01:26:10,340
questions

1913
01:26:15,139 --> 01:26:18,120
not to this talk but is there like a you

1914
01:26:18,120 --> 01:26:20,520
said okay classical advice is as used as

1915
01:26:20,520 --> 01:26:21,900
Quantum advice but is there some

1916
01:26:21,900 --> 01:26:23,699
advantage in using quantum computers to

1917
01:26:23,699 --> 01:26:25,380
compute classical advice can you get

1918
01:26:25,380 --> 01:26:27,420
like these rainbow tables faster if you

1919
01:26:27,420 --> 01:26:28,739
have the quantum computer do you know

1920
01:26:28,739 --> 01:26:30,060
anything about

1921
01:26:30,060 --> 01:26:32,219
because Computing the classical advice

1922
01:26:32,219 --> 01:26:33,960
is usually that's the most the hardest

1923
01:26:33,960 --> 01:26:36,360
part uh so I'm not sure about this but

1924
01:26:36,360 --> 01:26:38,639
but at least in this work he definitely

1925
01:26:38,639 --> 01:26:40,860
configured the efficiency of generating

1926
01:26:40,860 --> 01:26:42,780
otherwise yeah it was ignored completely

1927
01:26:42,780 --> 01:26:44,040
yeah yeah

1928
01:26:44,040 --> 01:26:44,659
okay

1929
01:26:44,659 --> 01:26:48,600
thanks then I think we move right away

1930
01:26:48,600 --> 01:26:51,620
to the second top

1931
01:26:53,040 --> 01:26:54,780
which is on Black Box separations for

1932
01:26:54,780 --> 01:26:56,340
non-interactive commitments in the

1933
01:26:56,340 --> 01:27:00,020
quantum World by coming soon

1934
01:27:02,960 --> 01:27:06,620
is giving the talk

1935
01:27:26,420 --> 01:27:30,060
yeah so thanks for the introduction I'm

1936
01:27:30,060 --> 01:27:32,820
yatin Ling from UCSB and I'm going to

1937
01:27:32,820 --> 01:27:34,860
talk about Black Box separations for

1938
01:27:34,860 --> 01:27:36,659
non-interative commitments in a Quantum

1939
01:27:36,659 --> 01:27:37,380
world

1940
01:27:37,380 --> 01:27:39,420
this is a joint work with kamin Zhong

1941
01:27:39,420 --> 01:27:41,639
from Academia cynica and the Mohamed

1942
01:27:41,639 --> 01:27:45,199
mamuti from University of Virginia

1943
01:27:45,420 --> 01:27:48,239
so a commitment scheme is basically a

1944
01:27:48,239 --> 01:27:50,699
digital version of a Secure Vault there

1945
01:27:50,699 --> 01:27:52,920
will be a sender and a receiver

1946
01:27:52,920 --> 01:27:55,260
and the sender can put the secret input

1947
01:27:55,260 --> 01:27:56,639
in the vote

1948
01:27:56,639 --> 01:27:59,040
and then send it to a receiver as a

1949
01:27:59,040 --> 01:28:00,420
commitment

1950
01:28:00,420 --> 01:28:03,000
and then in the reveal phase the sender

1951
01:28:03,000 --> 01:28:05,760
will send the password to a receiver to

1952
01:28:05,760 --> 01:28:07,739
let it open the vote

1953
01:28:07,739 --> 01:28:09,360
and the commitment scheme needs to be

1954
01:28:09,360 --> 01:28:11,340
hiding and binding

1955
01:28:11,340 --> 01:28:14,460
for hiding if a receiver doesn't know

1956
01:28:14,460 --> 01:28:16,800
the password then he cannot predict the

1957
01:28:16,800 --> 01:28:17,820
input

1958
01:28:17,820 --> 01:28:19,320
for binding

1959
01:28:19,320 --> 01:28:23,100
once the sender commit to the input then

1960
01:28:23,100 --> 01:28:25,199
he can now change his mind

1961
01:28:25,199 --> 01:28:28,040
in particular our work focused on

1962
01:28:28,040 --> 01:28:30,540
non-interactive commitments

1963
01:28:30,540 --> 01:28:32,400
so as in this figure

1964
01:28:32,400 --> 01:28:35,280
there's not much interaction going on

1965
01:28:35,280 --> 01:28:37,020
in these two phases

1966
01:28:37,020 --> 01:28:39,480
only the sender sends the messages to

1967
01:28:39,480 --> 01:28:41,959
the receiver

1968
01:28:44,280 --> 01:28:47,340
is one of the most fundamental primitive

1969
01:28:47,340 --> 01:28:49,739
In classical cryptography

1970
01:28:49,739 --> 01:28:52,320
it is equivalent to the existence of

1971
01:28:52,320 --> 01:28:54,360
vulnerable functions

1972
01:28:54,360 --> 01:28:57,060
to be more precise we know how to

1973
01:28:57,060 --> 01:28:59,760
construct interactive commitments by

1974
01:28:59,760 --> 01:29:03,780
using one-way functions as a black box

1975
01:29:03,780 --> 01:29:06,179
and many Construction in cryptography

1976
01:29:06,179 --> 01:29:07,860
are black box

1977
01:29:07,860 --> 01:29:09,420
so for example

1978
01:29:09,420 --> 01:29:12,120
the construction of the commitments only

1979
01:29:12,120 --> 01:29:14,340
care about the input output behavior of

1980
01:29:14,340 --> 01:29:15,659
the one-way function

1981
01:29:15,659 --> 01:29:18,780
it doesn't look into its code or Gates

1982
01:29:18,780 --> 01:29:23,100
so we basically treated as an oracle

1983
01:29:23,100 --> 01:29:25,560
on the other hand for non-interactive

1984
01:29:25,560 --> 01:29:27,840
commitments we only know how to build

1985
01:29:27,840 --> 01:29:30,239
them by using injective only functions

1986
01:29:30,239 --> 01:29:33,559
or one-way permutations

1987
01:29:33,659 --> 01:29:35,760
but one-way functions and the injective

1988
01:29:35,760 --> 01:29:38,699
one function or one representation are

1989
01:29:38,699 --> 01:29:40,560
qualitatively different

1990
01:29:40,560 --> 01:29:42,179
since there's a black box separation

1991
01:29:42,179 --> 01:29:44,580
between them

1992
01:29:44,580 --> 01:29:48,600
in cryptography we want to weaken or

1993
01:29:48,600 --> 01:29:51,239
minimize the commutation assumptions

1994
01:29:51,239 --> 01:29:53,880
so a very natural question is that can

1995
01:29:53,880 --> 01:29:56,580
we construct 9 non-interactive

1996
01:29:56,580 --> 01:30:00,480
commitments from one-way functions only

1997
01:30:00,480 --> 01:30:03,000
in this question was answered negatively

1998
01:30:03,000 --> 01:30:06,620
by pass in mamundi

1999
01:30:07,020 --> 01:30:10,139
and recently with the rise of quantum

2000
01:30:10,139 --> 01:30:11,520
cryptography

2001
01:30:11,520 --> 01:30:15,000
many Primitives have been Revisited

2002
01:30:15,000 --> 01:30:17,400
so if we allow the communication to be

2003
01:30:17,400 --> 01:30:18,480
quantum

2004
01:30:18,480 --> 01:30:21,420
then interestingly one-way functions are

2005
01:30:21,420 --> 01:30:23,580
sufficient for a long non-interactive

2006
01:30:23,580 --> 01:30:25,920
commitments

2007
01:30:25,920 --> 01:30:28,080
and perhaps more interestingly

2008
01:30:28,080 --> 01:30:30,420
one-way functions are not the minimal

2009
01:30:30,420 --> 01:30:33,000
assumption in Quantum cryptography

2010
01:30:33,000 --> 01:30:34,679
since there is a playback separation

2011
01:30:34,679 --> 01:30:36,960
between pseudo-random states and one-way

2012
01:30:36,960 --> 01:30:39,380
functions

2013
01:30:39,780 --> 01:30:41,520
so it turns out that

2014
01:30:41,520 --> 01:30:43,560
if the communication is allowed to be

2015
01:30:43,560 --> 01:30:44,639
quantum

2016
01:30:44,639 --> 01:30:46,199
then we don't even need one-way

2017
01:30:46,199 --> 01:30:47,400
functions

2018
01:30:47,400 --> 01:30:49,080
should a random states are already

2019
01:30:49,080 --> 01:30:51,120
sufficient for constructing

2020
01:30:51,120 --> 01:30:54,600
non-interactive commitments

2021
01:30:54,600 --> 01:30:57,060
but all of this Construction

2022
01:30:57,060 --> 01:31:00,120
requires Quantum communication

2023
01:31:00,120 --> 01:31:02,760
so one may ask if quantum communication

2024
01:31:02,760 --> 01:31:05,219
is really necessary

2025
01:31:05,219 --> 01:31:08,400
and it leads to our main question

2026
01:31:08,400 --> 01:31:10,980
does classical communication along with

2027
01:31:10,980 --> 01:31:13,260
post Quantum Huawei function imply

2028
01:31:13,260 --> 01:31:16,560
non-interactive commitments

2029
01:31:16,560 --> 01:31:19,320
and our result gives an conditional

2030
01:31:19,320 --> 01:31:21,780
answer to this question

2031
01:31:21,780 --> 01:31:25,020
so we show that assuming the polynomial

2032
01:31:25,020 --> 01:31:26,820
compatibility Constructor

2033
01:31:26,820 --> 01:31:29,100
which was proposed by Australian it l

2034
01:31:29,100 --> 01:31:32,300
very recently

2035
01:31:32,460 --> 01:31:34,560
we can prove that there is a playback

2036
01:31:34,560 --> 01:31:37,560
separation for this setting

2037
01:31:37,560 --> 01:31:40,440
and our result even holds when a cup

2038
01:31:40,440 --> 01:31:44,419
when the commitment message is quantum

2039
01:31:45,239 --> 01:31:48,719
and our result has these two immediate

2040
01:31:48,719 --> 01:31:50,880
correlates

2041
01:31:50,880 --> 01:31:53,300
so swimming the polynomial compatibility

2042
01:31:53,300 --> 01:31:56,639
conjecture first

2043
01:31:56,639 --> 01:31:58,980
since injective one-way function imply

2044
01:31:58,980 --> 01:32:01,020
non-interactive commitment

2045
01:32:01,020 --> 01:32:03,900
so our result would imply a separation

2046
01:32:03,900 --> 01:32:06,060
between post Quantum one-way functions

2047
01:32:06,060 --> 01:32:08,219
and post content injective only

2048
01:32:08,219 --> 01:32:09,540
functions

2049
01:32:09,540 --> 01:32:11,880
and this improves the result of Tau and

2050
01:32:11,880 --> 01:32:14,760
Shea this is because

2051
01:32:14,760 --> 01:32:16,860
they only allow the security reduction

2052
01:32:16,860 --> 01:32:18,179
to be quantum

2053
01:32:18,179 --> 01:32:21,000
the construction is still classical

2054
01:32:21,000 --> 01:32:22,620
next

2055
01:32:22,620 --> 01:32:25,440
a result would also imply the separation

2056
01:32:25,440 --> 01:32:27,420
between each other random States and

2057
01:32:27,420 --> 01:32:29,520
non-interactive Commandments when the

2058
01:32:29,520 --> 01:32:31,800
communication is classical

2059
01:32:31,800 --> 01:32:33,719
and it's worth

2060
01:32:33,719 --> 01:32:36,960
mentioning that it is possible to

2061
01:32:36,960 --> 01:32:39,420
construct non-interactive commitments

2062
01:32:39,420 --> 01:32:42,060
with Quantum commitment but only

2063
01:32:42,060 --> 01:32:44,820
classical the commitment

2064
01:32:44,820 --> 01:32:48,300
so our negative result complements

2065
01:32:48,300 --> 01:32:51,440
this positive result

2066
01:32:53,639 --> 01:32:55,620
and here's the model that we are

2067
01:32:55,620 --> 01:32:57,540
considering

2068
01:32:57,540 --> 01:33:00,840
we call it the quantum computation

2069
01:33:00,840 --> 01:33:03,540
classical communication model

2070
01:33:03,540 --> 01:33:06,420
and the commitment scheme needs to have

2071
01:33:06,420 --> 01:33:11,219
companies and satisfy hiding and binding

2072
01:33:11,219 --> 01:33:14,040
so by completing swimming for the honest

2073
01:33:14,040 --> 01:33:15,300
parties

2074
01:33:15,300 --> 01:33:17,460
the receiver can always use the

2075
01:33:17,460 --> 01:33:20,520
commitment to open the commitment back

2076
01:33:20,520 --> 01:33:22,560
to the original input

2077
01:33:22,560 --> 01:33:26,280
and here hiding and biting are defined

2078
01:33:26,280 --> 01:33:30,199
against Quantum adversaries

2079
01:33:30,900 --> 01:33:32,639
and for reconstruction

2080
01:33:32,639 --> 01:33:34,800
the sender and the receiver can both

2081
01:33:34,800 --> 01:33:36,780
make Quantum queries to the one-way

2082
01:33:36,780 --> 01:33:39,500
function Oracle

2083
01:33:39,719 --> 01:33:42,179
but the communication is restricted to

2084
01:33:42,179 --> 01:33:44,600
be classical

2085
01:33:45,659 --> 01:33:48,719
and as we mentioned earlier our result

2086
01:33:48,719 --> 01:33:52,820
holds even for a Quantum the commitment

2087
01:33:54,420 --> 01:33:56,880
and there is a general way to separate

2088
01:33:56,880 --> 01:33:59,400
Primitives from one-way functions

2089
01:33:59,400 --> 01:34:02,219
it was first used by impagliazo and

2090
01:34:02,219 --> 01:34:03,540
rudic

2091
01:34:03,540 --> 01:34:05,580
so suppose we want to separate some

2092
01:34:05,580 --> 01:34:08,400
primitive Q from one-way functions

2093
01:34:08,400 --> 01:34:10,440
is it sufficient to break the security

2094
01:34:10,440 --> 01:34:13,139
of every construction of the Primitive

2095
01:34:13,139 --> 01:34:16,320
queue in the random Oracle model

2096
01:34:16,320 --> 01:34:18,659
then it will imply the separation

2097
01:34:18,659 --> 01:34:21,600
between the Primitive q and the one-way

2098
01:34:21,600 --> 01:34:23,880
function

2099
01:34:23,880 --> 01:34:25,860
but now

2100
01:34:25,860 --> 01:34:28,679
if the Primitive Q is non-interactive

2101
01:34:28,679 --> 01:34:30,300
commitment

2102
01:34:30,300 --> 01:34:33,719
then this method does not work

2103
01:34:33,719 --> 01:34:36,380
directly

2104
01:34:36,420 --> 01:34:38,340
because by properly choosing the input

2105
01:34:38,340 --> 01:34:40,500
of length of the random Oracle

2106
01:34:40,500 --> 01:34:42,600
it is injective with overwhelming

2107
01:34:42,600 --> 01:34:44,219
probability

2108
01:34:44,219 --> 01:34:46,260
and the injective one-way function would

2109
01:34:46,260 --> 01:34:50,000
imply non-interactive commitments

2110
01:34:50,340 --> 01:34:52,920
so we will follow the idea of passing

2111
01:34:52,920 --> 01:34:55,440
mamudi

2112
01:34:55,440 --> 01:34:57,900
so at a very high level

2113
01:34:57,900 --> 01:35:00,120
they use the heavy query learning

2114
01:35:00,120 --> 01:35:01,139
technique

2115
01:35:01,139 --> 01:35:04,080
to get the following result

2116
01:35:04,080 --> 01:35:06,060
so for every non-interactive commitment

2117
01:35:06,060 --> 01:35:09,659
based on a one-way function Oracle

2118
01:35:09,659 --> 01:35:11,400
either one of the two

2119
01:35:11,400 --> 01:35:14,280
cases will hold

2120
01:35:14,280 --> 01:35:15,600
so first

2121
01:35:15,600 --> 01:35:18,780
if the Oracle is a random Oracle

2122
01:35:18,780 --> 01:35:20,880
then there is a cheating receiver that

2123
01:35:20,880 --> 01:35:22,920
breaks hiding

2124
01:35:22,920 --> 01:35:24,719
and this cheating receiver

2125
01:35:24,719 --> 01:35:27,360
just simply learns all these senders

2126
01:35:27,360 --> 01:35:28,800
heavy queries

2127
01:35:28,800 --> 01:35:32,040
that is the receiver will learn all the

2128
01:35:32,040 --> 01:35:34,620
queries that are likely to be asked by

2129
01:35:34,620 --> 01:35:36,000
the sender

2130
01:35:36,000 --> 01:35:39,540
and the number of them is polynomial

2131
01:35:39,540 --> 01:35:41,159
and when there is no more heavy query

2132
01:35:41,159 --> 01:35:42,179
left

2133
01:35:42,179 --> 01:35:44,760
the receiver will output the more likely

2134
01:35:44,760 --> 01:35:46,040
input bit

2135
01:35:46,040 --> 01:35:49,260
but suppose until this point the input

2136
01:35:49,260 --> 01:35:52,260
bit is still 50 50.

2137
01:35:52,260 --> 01:35:55,500
then there is always a way then there is

2138
01:35:55,500 --> 01:35:58,440
always a way to find two consistent

2139
01:35:58,440 --> 01:36:01,739
standards views v0 and the V1

2140
01:36:01,739 --> 01:36:04,860
where each of them corresponds to input

2141
01:36:04,860 --> 01:36:08,280
being 0 and 1.

2142
01:36:08,280 --> 01:36:12,360
so then we can define a partially fixed

2143
01:36:12,360 --> 01:36:13,679
render Oracle

2144
01:36:13,679 --> 01:36:16,920
that is fixed over the query sets of

2145
01:36:16,920 --> 01:36:19,620
these two views together with a list

2146
01:36:19,620 --> 01:36:23,480
learned by the cheating receiver

2147
01:36:24,000 --> 01:36:26,699
and then relative relative to this

2148
01:36:26,699 --> 01:36:28,560
partially fixed Oracle

2149
01:36:28,560 --> 01:36:32,400
we can define a simple cheating sender

2150
01:36:32,400 --> 01:36:34,860
so whenever the sender want to open a

2151
01:36:34,860 --> 01:36:38,219
commitment into a bit B

2152
01:36:38,219 --> 01:36:40,679
you can use the commitment in the view

2153
01:36:40,679 --> 01:36:43,159
VB

2154
01:36:43,560 --> 01:36:45,900
and because of the companies or the

2155
01:36:45,900 --> 01:36:49,080
commitment scheme the receiver

2156
01:36:49,080 --> 01:36:52,940
will always accept both of them

2157
01:36:53,340 --> 01:36:55,020
moreover

2158
01:36:55,020 --> 01:36:58,139
a random function that is fixed over

2159
01:36:58,139 --> 01:37:02,340
only polynomial points is one way

2160
01:37:02,340 --> 01:37:05,040
so that's the idea of this of this

2161
01:37:05,040 --> 01:37:07,519
approach

2162
01:37:08,159 --> 01:37:10,980
but if we want to extend this method

2163
01:37:10,980 --> 01:37:12,840
into the quantum setting

2164
01:37:12,840 --> 01:37:14,940
there are some challenges

2165
01:37:14,940 --> 01:37:16,260
so first

2166
01:37:16,260 --> 01:37:18,900
Quantum queries cannot be recorded in

2167
01:37:18,900 --> 01:37:20,100
general

2168
01:37:20,100 --> 01:37:21,360
so now

2169
01:37:21,360 --> 01:37:23,280
when the audio sender can make Quantum

2170
01:37:23,280 --> 01:37:24,239
queries

2171
01:37:24,239 --> 01:37:28,459
how do we Define the cheating receiver

2172
01:37:28,500 --> 01:37:30,719
and resulting from this issue

2173
01:37:30,719 --> 01:37:34,260
is unclear how to adversarially

2174
01:37:34,260 --> 01:37:37,380
construct an oracle such that the

2175
01:37:37,380 --> 01:37:40,080
cheating Center can always break binding

2176
01:37:40,080 --> 01:37:42,300
relative to this Oracle

2177
01:37:42,300 --> 01:37:45,179
and at the same time this Oracle needs

2178
01:37:45,179 --> 01:37:47,780
to be one way

2179
01:37:49,620 --> 01:37:50,699
and

2180
01:37:50,699 --> 01:37:53,820
for the first issue

2181
01:37:53,820 --> 01:37:55,920
this was already tackled by Australian

2182
01:37:55,920 --> 01:37:57,600
ital

2183
01:37:57,600 --> 01:38:00,120
they extended the heavy query learning

2184
01:38:00,120 --> 01:38:02,100
technique to the quantum setting by

2185
01:38:02,100 --> 01:38:03,900
using genders compressed Oracle

2186
01:38:03,900 --> 01:38:06,259
technique

2187
01:38:06,960 --> 01:38:09,239
so in particular

2188
01:38:09,239 --> 01:38:11,340
they have a query learner well as

2189
01:38:11,340 --> 01:38:14,460
classical queries that are heavy for the

2190
01:38:14,460 --> 01:38:17,300
quantum algorithm

2191
01:38:18,360 --> 01:38:21,360
so following this idea we can Define the

2192
01:38:21,360 --> 01:38:22,739
treating receiver

2193
01:38:22,739 --> 01:38:25,679
to learn all the senders quantity heavy

2194
01:38:25,679 --> 01:38:27,980
queries

2195
01:38:28,380 --> 01:38:30,780
and suppose

2196
01:38:30,780 --> 01:38:33,659
the bit is still unbiased when there is

2197
01:38:33,659 --> 01:38:36,679
no more quantity heavy query

2198
01:38:36,679 --> 01:38:39,719
then invoking the polynomial

2199
01:38:39,719 --> 01:38:42,179
compatibility Constructor would imply

2200
01:38:42,179 --> 01:38:45,719
the existence of the com compatible

2201
01:38:45,719 --> 01:38:47,280
Oracle

2202
01:38:47,280 --> 01:38:50,040
but only the existence

2203
01:38:50,040 --> 01:38:54,060
is not enough for being one way

2204
01:38:54,060 --> 01:38:56,699
so we observe that the set of compatible

2205
01:38:56,699 --> 01:39:00,239
oracles is the support of a poly degree

2206
01:39:00,239 --> 01:39:03,500
multilinear polynomial

2207
01:39:03,800 --> 01:39:07,440
and since it has low degree

2208
01:39:07,440 --> 01:39:11,040
we can use a version of schwazi polymer

2209
01:39:11,040 --> 01:39:14,460
to show the abundance of the compatible

2210
01:39:14,460 --> 01:39:17,000
oracles

2211
01:39:18,659 --> 01:39:21,060
so to sum up

2212
01:39:21,060 --> 01:39:24,360
here is the implication of our attack

2213
01:39:24,360 --> 01:39:25,920
we show that

2214
01:39:25,920 --> 01:39:27,860
for every non-interactive commitment

2215
01:39:27,860 --> 01:39:30,000
based on the post content one-way

2216
01:39:30,000 --> 01:39:31,560
function Oracle

2217
01:39:31,560 --> 01:39:33,540
either one of the two following cases

2218
01:39:33,540 --> 01:39:35,580
would hold

2219
01:39:35,580 --> 01:39:37,739
so first

2220
01:39:37,739 --> 01:39:41,580
when Oracle is a render Oracle

2221
01:39:41,580 --> 01:39:43,620
there is a polyquiry treating receiver

2222
01:39:43,620 --> 01:39:46,500
that breaks hiding

2223
01:39:46,500 --> 01:39:51,300
or when the Oracle is uniform over a set

2224
01:39:51,300 --> 01:39:54,840
of functions from m-bits to MBH such

2225
01:39:54,840 --> 01:39:58,760
that the size of of the set is at least

2226
01:39:58,760 --> 01:40:02,000
this value

2227
01:40:02,040 --> 01:40:04,080
and relative to it

2228
01:40:04,080 --> 01:40:06,600
there's a cheating center with poly

2229
01:40:06,600 --> 01:40:09,540
qubit Oracle dependent advice that

2230
01:40:09,540 --> 01:40:12,380
breaks binding

2231
01:40:13,980 --> 01:40:17,159
so it remains to prove that the Oracle

2232
01:40:17,159 --> 01:40:22,460
is one way in such a non-uniform setting

2233
01:40:23,760 --> 01:40:25,560
so now

2234
01:40:25,560 --> 01:40:28,679
the question is to prove that one way is

2235
01:40:28,679 --> 01:40:31,560
in the following setting

2236
01:40:31,560 --> 01:40:34,739
the Oracle now is uniform over a large

2237
01:40:34,739 --> 01:40:37,199
set of functions

2238
01:40:37,199 --> 01:40:39,300
if we look at the right hand side of

2239
01:40:39,300 --> 01:40:41,280
this inequality

2240
01:40:41,280 --> 01:40:44,219
it is equal to the number of random

2241
01:40:44,219 --> 01:40:46,260
functions that is fixed over

2242
01:40:46,260 --> 01:40:48,179
polynomially many points

2243
01:40:48,179 --> 01:40:49,679
but now

2244
01:40:49,679 --> 01:40:51,420
we don't have any

2245
01:40:51,420 --> 01:40:54,239
guarantee of the structure of the

2246
01:40:54,239 --> 01:40:56,540
function

2247
01:40:56,760 --> 01:40:59,699
in the adversary now is given poly qubit

2248
01:40:59,699 --> 01:41:02,520
advice and is able to make poly Quantum

2249
01:41:02,520 --> 01:41:05,960
queries to the oracle

2250
01:41:06,780 --> 01:41:09,480
and we observe that

2251
01:41:09,480 --> 01:41:11,040
this

2252
01:41:11,040 --> 01:41:13,800
this question can be solved by simply

2253
01:41:13,800 --> 01:41:17,159
tweaking the proof of Zhong guo Liu and

2254
01:41:17,159 --> 01:41:19,519
the chin

2255
01:41:20,219 --> 01:41:21,600
yep

2256
01:41:21,600 --> 01:41:22,860
so

2257
01:41:22,860 --> 01:41:26,400
here are some open questions

2258
01:41:26,400 --> 01:41:28,199
so first

2259
01:41:28,199 --> 01:41:31,080
of course you will be good to up to get

2260
01:41:31,080 --> 01:41:35,179
separations without any conjecture

2261
01:41:35,580 --> 01:41:37,199
and next

2262
01:41:37,199 --> 01:41:41,100
perhaps in a another Direction

2263
01:41:41,100 --> 01:41:43,560
can we get a better result to erinson

2264
01:41:43,560 --> 01:41:45,600
and Bernie's conjecture

2265
01:41:45,600 --> 01:41:48,060
because our cheating receiver only makes

2266
01:41:48,060 --> 01:41:51,000
classical queries

2267
01:41:51,000 --> 01:41:53,280
and more generally

2268
01:41:53,280 --> 01:41:56,400
can we extend our technique to other bed

2269
01:41:56,400 --> 01:41:58,800
bug separation result in the quantum

2270
01:41:58,800 --> 01:42:00,960
compute content computation and

2271
01:42:00,960 --> 01:42:04,760
classical communication model

2272
01:42:06,420 --> 01:42:08,340
and that's all for my talk thanks for

2273
01:42:08,340 --> 01:42:10,760
your attention

2274
01:42:10,900 --> 01:42:15,960
[Applause]

2275
01:42:15,960 --> 01:42:18,739
if any questions

2276
01:42:20,880 --> 01:42:21,960
okay

2277
01:42:21,960 --> 01:42:24,420
maybe just a technicality because you

2278
01:42:24,420 --> 01:42:26,699
said at some point that your result that

2279
01:42:26,699 --> 01:42:28,380
post Quantum one-way functions do not

2280
01:42:28,380 --> 01:42:29,940
imply post Quantum injective one-way

2281
01:42:29,940 --> 01:42:31,679
functions strengthens the previous

2282
01:42:31,679 --> 01:42:33,360
result which was one of the functions

2283
01:42:33,360 --> 01:42:34,560
that do not imply injective only

2284
01:42:34,560 --> 01:42:38,100
functions but your conclusion and the

2285
01:42:38,100 --> 01:42:39,780
starting you know the Assumption and the

2286
01:42:39,780 --> 01:42:41,340
conclusion are both stronger so it seems

2287
01:42:41,340 --> 01:42:43,199
to be incomparable no

2288
01:42:43,199 --> 01:42:44,540
you

2289
01:42:44,540 --> 01:42:47,940
in the first item you said that this

2290
01:42:47,940 --> 01:42:49,260
strengthens the result that one-way

2291
01:42:49,260 --> 01:42:50,820
functions do not imply injective only

2292
01:42:50,820 --> 01:42:54,780
functions oh yeah so I mean uh

2293
01:42:54,780 --> 01:42:58,860
our result improves the result of of the

2294
01:42:58,860 --> 01:43:01,920
work by ciao industry because they

2295
01:43:01,920 --> 01:43:05,219
consider a more restrict a more

2296
01:43:05,219 --> 01:43:08,300
restricted model

2297
01:43:19,679 --> 01:43:22,280
okay okay

2298
01:43:22,280 --> 01:43:25,020
thanks okay if there's no more questions

2299
01:43:25,020 --> 01:43:26,400
then let's thank the speakers of this

2300
01:43:26,400 --> 01:43:29,219
session again and

2301
01:43:29,219 --> 01:43:31,400
thank you

2302
01:43:33,000 --> 01:43:35,940
what is next in the agenda

2303
01:43:35,940 --> 01:43:38,599
it's lunch

