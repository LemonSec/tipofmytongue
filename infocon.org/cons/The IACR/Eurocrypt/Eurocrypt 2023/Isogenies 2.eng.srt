1
00:00:02,340 --> 00:00:04,980
good afternoon welcome to the last

2
00:00:04,980 --> 00:00:06,960
session of today congratulations on

3
00:00:06,960 --> 00:00:08,460
picking an amazing Track by the way

4
00:00:08,460 --> 00:00:11,160
isogenes too uh so the first talk is

5
00:00:11,160 --> 00:00:13,679
going to be by Boris and tomoki I think

6
00:00:13,679 --> 00:00:15,839
Boris is starting and they're going to

7
00:00:15,839 --> 00:00:16,980
talk about their joint work with

8
00:00:16,980 --> 00:00:18,840
Christoph Pati which is countering the

9
00:00:18,840 --> 00:00:22,939
sidh attacks by masking information

10
00:00:32,098 --> 00:00:35,399
so we are going to talk about uh M side

11
00:00:35,399 --> 00:00:37,980
and decide countering attacks by masking

12
00:00:37,980 --> 00:00:40,079
information which is a joint work with

13
00:00:40,079 --> 00:00:43,140
tomoki and Christoph and in this work we

14
00:00:43,140 --> 00:00:45,840
explore like eventual countermeasures to

15
00:00:45,840 --> 00:00:48,059
the recent attacks on sidh

16
00:00:48,059 --> 00:00:50,879
so you have got a lot of enough talks

17
00:00:50,879 --> 00:00:52,800
about the attacks but just for

18
00:00:52,800 --> 00:00:55,020
completeness there's

19
00:00:55,020 --> 00:00:57,420
try to see what so in this talk we have

20
00:00:57,420 --> 00:00:59,399
a sidh and the attacks you will still

21
00:00:59,399 --> 00:01:01,680
have to listen to them again it will

22
00:01:01,680 --> 00:01:03,840
give an idea about the countermeasures

23
00:01:03,840 --> 00:01:05,820
we will present an analysis of the

24
00:01:05,820 --> 00:01:07,380
countermeasure ideas and then we'll give

25
00:01:07,380 --> 00:01:10,740
a summary so please suffer with me to go

26
00:01:10,740 --> 00:01:12,360
to sidh again

27
00:01:12,360 --> 00:01:15,900
so sidh is this little square where you

28
00:01:15,900 --> 00:01:18,659
do a sort of DVM on key exchange with

29
00:01:18,659 --> 00:01:21,420
isogenes it's just that in this detail

30
00:01:21,420 --> 00:01:22,619
man you don't just replace the

31
00:01:22,619 --> 00:01:24,659
exponentiation by isogenes but you also

32
00:01:24,659 --> 00:01:26,640
need to publish some torsion Point

33
00:01:26,640 --> 00:01:28,380
information to have a commutative

34
00:01:28,380 --> 00:01:31,979
diagram so in sidh you use this very

35
00:01:31,979 --> 00:01:34,080
special primes that are of the form

36
00:01:34,080 --> 00:01:36,360
three two to the a times 3 to the B

37
00:01:36,360 --> 00:01:40,259
minus one for sake of efficiency and you

38
00:01:40,259 --> 00:01:41,759
publish some torsion Point information

39
00:01:41,759 --> 00:01:44,820
through your secret isogenes

40
00:01:44,820 --> 00:01:47,340
so

41
00:01:47,340 --> 00:01:49,619
what happened with sidh what is the

42
00:01:49,619 --> 00:01:52,200
lifespan of sidh sieh was invented in

43
00:01:52,200 --> 00:01:56,040
2011 and in 2016 you have the Adaptive

44
00:01:56,040 --> 00:01:59,340
attack that obliged the Autos to have to

45
00:01:59,340 --> 00:02:02,159
sort of use an N4 transform to obtain

46
00:02:02,159 --> 00:02:06,360
psych then in 2017 you had the first the

47
00:02:06,360 --> 00:02:07,799
very first ocean points attack that

48
00:02:07,799 --> 00:02:09,899
didn't apply to sidh they were later

49
00:02:09,899 --> 00:02:12,180
improved and did not still apply to sidh

50
00:02:12,180 --> 00:02:14,640
in 2022 you have an Adaptive attack that

51
00:02:14,640 --> 00:02:17,760
applied that could affect sidh but not

52
00:02:17,760 --> 00:02:21,319
psych but then in

53
00:02:21,379 --> 00:02:24,900
uh summer 2022 again then you had the

54
00:02:24,900 --> 00:02:28,020
full shot by the killer who is sitting

55
00:02:28,020 --> 00:02:31,220
down yeah I think so

56
00:02:31,220 --> 00:02:34,920
why all of these all these attacks they

57
00:02:34,920 --> 00:02:36,900
use torsion Point information so the

58
00:02:36,900 --> 00:02:39,300
problem is not that isolation is the

59
00:02:39,300 --> 00:02:40,739
isolation problem is broken by the

60
00:02:40,739 --> 00:02:42,900
problem in sidh is the torsion Point

61
00:02:42,900 --> 00:02:43,800
information

62
00:02:43,800 --> 00:02:47,160
so how do these attacks work

63
00:02:47,160 --> 00:02:49,260
well you have this problem where you

64
00:02:49,260 --> 00:02:50,760
have you are given analysis and you're

65
00:02:50,760 --> 00:02:53,400
also given the image of some torsion

66
00:02:53,400 --> 00:02:55,260
points so

67
00:02:55,260 --> 00:02:57,360
the general idea of the attack which is

68
00:02:57,360 --> 00:03:00,200
what Damian Robert called yesterday

69
00:03:00,200 --> 00:03:02,459
interpolation so yeah I gave a different

70
00:03:02,459 --> 00:03:03,959
name but it's just a different

71
00:03:03,959 --> 00:03:06,599
interpretation of the thing so the

72
00:03:06,599 --> 00:03:08,400
general idea is to like you have a

73
00:03:08,400 --> 00:03:10,080
secret I usually that you don't know but

74
00:03:10,080 --> 00:03:12,239
you try to find a transformation that

75
00:03:12,239 --> 00:03:14,159
you can apply to this secret I just need

76
00:03:14,159 --> 00:03:16,019
to get something that you can't evaluate

77
00:03:16,019 --> 00:03:17,760
on some point and this is something that

78
00:03:17,760 --> 00:03:20,099
you get which we call to here is such

79
00:03:20,099 --> 00:03:22,200
that you can evaluate it on some torsion

80
00:03:22,200 --> 00:03:23,640
points that we call the eight ocean and

81
00:03:23,640 --> 00:03:25,620
such that evaluating it on Distortion

82
00:03:25,620 --> 00:03:27,659
points helps you to recover too and the

83
00:03:27,659 --> 00:03:29,580
transformation gamma which is the degree

84
00:03:29,580 --> 00:03:30,900
transformation should be sort of

85
00:03:30,900 --> 00:03:33,659
invertible so that if you know Tau then

86
00:03:33,659 --> 00:03:37,200
you can recover your secret is fine so

87
00:03:37,200 --> 00:03:39,239
if you can come up with this nice

88
00:03:39,239 --> 00:03:41,099
transformation that satisfies these

89
00:03:41,099 --> 00:03:42,900
three conditions then in fact you can

90
00:03:42,900 --> 00:03:44,340
run the attack so all the attack

91
00:03:44,340 --> 00:03:46,260
consists in coming up with this Knight

92
00:03:46,260 --> 00:03:48,420
transformation all the attacks from 2017

93
00:03:48,420 --> 00:03:51,480
were just different instantiation of

94
00:03:51,480 --> 00:03:53,940
this of this transformation

95
00:03:53,940 --> 00:03:58,440
so in the 2022 attacks how do you do how

96
00:03:58,440 --> 00:04:00,659
do you build this Tau

97
00:04:00,659 --> 00:04:03,000
so it is where you go into higher

98
00:04:03,000 --> 00:04:04,140
dimension

99
00:04:04,140 --> 00:04:05,640
I will just give an overview here

100
00:04:05,640 --> 00:04:06,900
because there have been three talks

101
00:04:06,900 --> 00:04:08,940
about this already this is just

102
00:04:08,940 --> 00:04:10,560
I'm just presenting this because we

103
00:04:10,560 --> 00:04:13,080
needed to like understand the

104
00:04:13,080 --> 00:04:14,459
countermissions

105
00:04:14,459 --> 00:04:17,220
so you have an isolation if I from e0 to

106
00:04:17,220 --> 00:04:19,918
EB and you have some torsion Point

107
00:04:19,918 --> 00:04:22,500
information of degree a what you do is

108
00:04:22,500 --> 00:04:24,419
that you use this as Damian said

109
00:04:24,419 --> 00:04:26,639
yesterday you can in general you know

110
00:04:26,639 --> 00:04:28,320
that you can multiply the degree of

111
00:04:28,320 --> 00:04:30,419
hydrogeny by compute by composing them

112
00:04:30,419 --> 00:04:32,400
but here we have some sort of addition

113
00:04:32,400 --> 00:04:34,800
of degrees just by so you can now have

114
00:04:34,800 --> 00:04:37,020
an isolation whose degree is the sum of

115
00:04:37,020 --> 00:04:39,360
the degree of two isotones so what you

116
00:04:39,360 --> 00:04:41,280
do is that you go from your AI is

117
00:04:41,280 --> 00:04:42,900
originally from your B is originally and

118
00:04:42,900 --> 00:04:44,580
the eight transition points you build an

119
00:04:44,580 --> 00:04:46,680
isolation of degree

120
00:04:46,680 --> 00:04:50,040
a that you can compute where a is B plus

121
00:04:50,040 --> 00:04:51,660
a minus B

122
00:04:51,660 --> 00:04:53,880
and to do that you go into higher

123
00:04:53,880 --> 00:04:56,460
Dimension you consider this Matrix that

124
00:04:56,460 --> 00:04:58,259
you have that helps you to recover the

125
00:04:58,259 --> 00:05:00,660
to Define your transformation and this

126
00:05:00,660 --> 00:05:04,320
Tau has degree exactly a and since you

127
00:05:04,320 --> 00:05:06,479
have the torsion Point information of

128
00:05:06,479 --> 00:05:09,060
Tau on the eighth option because you

129
00:05:09,060 --> 00:05:11,580
have the torsion Point information of uh

130
00:05:11,580 --> 00:05:14,940
Phi this fear you know the torsion Point

131
00:05:14,940 --> 00:05:17,160
information and this Alpha is just this

132
00:05:17,160 --> 00:05:19,500
Matrix which is also made up of integers

133
00:05:19,500 --> 00:05:21,900
so you can always evaluate it on

134
00:05:21,900 --> 00:05:24,120
anything you you want so you can

135
00:05:24,120 --> 00:05:25,740
evaluate this Tau on the eighth version

136
00:05:25,740 --> 00:05:28,740
and since style has degree a it is known

137
00:05:28,740 --> 00:05:31,860
in the isogenic base theory that if you

138
00:05:31,860 --> 00:05:34,500
know the action organization of degree a

139
00:05:34,500 --> 00:05:35,880
on the eighth option then you can

140
00:05:35,880 --> 00:05:37,380
recover this is usually efficiently

141
00:05:37,380 --> 00:05:40,020
modulo that the order of the the degree

142
00:05:40,020 --> 00:05:42,660
of the isolation is smooth

143
00:05:42,660 --> 00:05:45,840
so with this you recover Tau and then

144
00:05:45,840 --> 00:05:48,000
the rest is just to notice that in fact

145
00:05:48,000 --> 00:05:49,680
this style when you know Tau you can

146
00:05:49,680 --> 00:05:50,780
recover

147
00:05:50,780 --> 00:05:53,820
fee or federal just by evaluating it on

148
00:05:53,820 --> 00:05:55,500
some specific points

149
00:05:55,500 --> 00:05:57,900
so this is what is mainly done in

150
00:05:57,900 --> 00:06:00,960
Damian's paper and with this you prove

151
00:06:00,960 --> 00:06:04,500
that this transformation gamma

152
00:06:04,500 --> 00:06:06,960
satisfies the properties that we said

153
00:06:06,960 --> 00:06:08,460
before and that it can be used

154
00:06:08,460 --> 00:06:11,940
efficiently to recover this Equalization

155
00:06:11,940 --> 00:06:14,220
so it means you can invert it you can

156
00:06:14,220 --> 00:06:15,720
evaluate it on the correct version and

157
00:06:15,720 --> 00:06:17,699
evaluating it on the correct ocean can

158
00:06:17,699 --> 00:06:19,680
help you in fact to recover to recover

159
00:06:19,680 --> 00:06:21,180
Tau

160
00:06:21,180 --> 00:06:24,479
so the attack in fact when you look at

161
00:06:24,479 --> 00:06:27,600
it here you feel like a needs to be

162
00:06:27,600 --> 00:06:29,580
greater than b but in fact there is a

163
00:06:29,580 --> 00:06:31,740
trick that can be used to make to not

164
00:06:31,740 --> 00:06:33,780
require a to be greater than b by just a

165
00:06:33,780 --> 00:06:37,758
x square greater than b so

166
00:06:37,800 --> 00:06:39,539
what does it mean it means if you have a

167
00:06:39,539 --> 00:06:40,919
secret isolation and torsion Point

168
00:06:40,919 --> 00:06:45,240
information such that the square of the

169
00:06:45,240 --> 00:06:47,280
order of the torsion points is greater

170
00:06:47,280 --> 00:06:49,080
than the degree of the isogeny then you

171
00:06:49,080 --> 00:06:51,479
can break you can recover the

172
00:06:51,479 --> 00:06:53,400
secretization assuming that everything

173
00:06:53,400 --> 00:06:56,220
has smooth order here

174
00:06:56,220 --> 00:06:58,139
so

175
00:06:58,139 --> 00:07:00,900
with this oops

176
00:07:00,900 --> 00:07:04,560
let's see how we try to make counter to

177
00:07:04,560 --> 00:07:07,139
counter the attack in practice so one

178
00:07:07,139 --> 00:07:08,819
thing to notice is that the attack uses

179
00:07:08,819 --> 00:07:10,919
the degree of the isolation because you

180
00:07:10,919 --> 00:07:12,300
are really exploiting the fact that you

181
00:07:12,300 --> 00:07:15,360
know A and B so you you know the degree

182
00:07:15,360 --> 00:07:17,280
of the isogeny but one other thing is

183
00:07:17,280 --> 00:07:18,840
that you know the images of the torsion

184
00:07:18,840 --> 00:07:20,759
points so

185
00:07:20,759 --> 00:07:23,039
the idea of the counter measures are to

186
00:07:23,039 --> 00:07:26,520
just remove each of these each time so

187
00:07:26,520 --> 00:07:29,340
the first thing is to hide the degree of

188
00:07:29,340 --> 00:07:31,380
the isogeny and then the second thing is

189
00:07:31,380 --> 00:07:33,840
to hide the

190
00:07:33,840 --> 00:07:36,840
the torsion point images

191
00:07:36,840 --> 00:07:39,060
so when you hide the degree if you want

192
00:07:39,060 --> 00:07:40,800
to hide the degree of the isogeny how do

193
00:07:40,800 --> 00:07:43,740
you do that so you had sidh which was

194
00:07:43,740 --> 00:07:45,900
like this and the degree of Phi a was a

195
00:07:45,900 --> 00:07:48,419
power of two the degree of PSI B was a

196
00:07:48,419 --> 00:07:50,940
power of 3.

197
00:07:50,940 --> 00:07:53,099
so if you want to hide the degree you

198
00:07:53,099 --> 00:07:54,599
can no more use powers of 2 and powers

199
00:07:54,599 --> 00:07:56,940
of 3 because they don't have that many

200
00:07:56,940 --> 00:07:59,340
devices so what you need first of all is

201
00:07:59,340 --> 00:08:03,419
to change your Prime characteristic to

202
00:08:03,419 --> 00:08:05,280
through a prime of this form where

203
00:08:05,280 --> 00:08:07,740
degree of a will be a divisor of this

204
00:08:07,740 --> 00:08:09,419
first part and degree of B will be a

205
00:08:09,419 --> 00:08:12,000
divisor of this second part so degree of

206
00:08:12,000 --> 00:08:14,819
Phi a will be some a prime that divides

207
00:08:14,819 --> 00:08:17,160
a and degree of Phi B will be some

208
00:08:17,160 --> 00:08:19,919
A-frame that some B Prime that divides B

209
00:08:19,919 --> 00:08:22,620
and read these you can still reveal the

210
00:08:22,620 --> 00:08:24,360
torsion Point information and then you

211
00:08:24,360 --> 00:08:27,180
do your sidh but there is what we call

212
00:08:27,180 --> 00:08:28,680
pairings if you have torsion Point

213
00:08:28,680 --> 00:08:30,240
information then you can sort of recover

214
00:08:30,240 --> 00:08:31,979
the degree of your secret identity to

215
00:08:31,979 --> 00:08:34,500
pairings So to avoid that you need to

216
00:08:34,500 --> 00:08:36,419
still scale the international Point by

217
00:08:36,419 --> 00:08:38,880
some Scala so that the the pairing will

218
00:08:38,880 --> 00:08:41,159
not reveal any information about the

219
00:08:41,159 --> 00:08:43,260
degree of your isolation so you hide the

220
00:08:43,260 --> 00:08:44,940
degree sorry

221
00:08:44,940 --> 00:08:47,580
so you hide the degree using a scalar

222
00:08:47,580 --> 00:08:49,080
that you choose which so that this

223
00:08:49,080 --> 00:08:51,180
scalar is invertible and at least we use

224
00:08:51,180 --> 00:08:53,040
a scalar Alpha and both we use a scalar

225
00:08:53,040 --> 00:08:55,860
beta so in the max degree version you

226
00:08:55,860 --> 00:08:57,779
have this isolation which is computed

227
00:08:57,779 --> 00:08:59,339
and then the torsion points are scaled

228
00:08:59,339 --> 00:09:01,740
by a scalar then the authorization is

229
00:09:01,740 --> 00:09:03,240
also computed at Russian points are

230
00:09:03,240 --> 00:09:06,720
scaled by another another scalar so you

231
00:09:06,720 --> 00:09:10,380
need to choose your Prime such that the

232
00:09:10,380 --> 00:09:12,300
the number of degrees of possible

233
00:09:12,300 --> 00:09:15,180
degrees is exponential

234
00:09:15,180 --> 00:09:18,180
okay so this is the max degree version

235
00:09:18,180 --> 00:09:21,060
and note that uh what what you have here

236
00:09:21,060 --> 00:09:23,160
which is different from sidh is that you

237
00:09:23,160 --> 00:09:24,660
have an exponential number of degrees so

238
00:09:24,660 --> 00:09:26,760
the degree is not provided

239
00:09:26,760 --> 00:09:28,980
so in the second version where you try

240
00:09:28,980 --> 00:09:31,620
to hide the torsion Point information

241
00:09:31,620 --> 00:09:33,240
how do you do that

242
00:09:33,240 --> 00:09:36,300
so usually you have these schemes where

243
00:09:36,300 --> 00:09:38,700
you have a degree which is not fixed and

244
00:09:38,700 --> 00:09:41,700
in general for sidh it's really like not

245
00:09:41,700 --> 00:09:44,040
what we really have in this in this idea

246
00:09:44,040 --> 00:09:45,600
you have fixed degree so when you move

247
00:09:45,600 --> 00:09:47,640
to non-fixed degree you are like moving

248
00:09:47,640 --> 00:09:49,920
away from SIDS and maybe getting a bit

249
00:09:49,920 --> 00:09:52,320
closer to Seaside and sometimes you may

250
00:09:52,320 --> 00:09:54,120
not have constant time it may be

251
00:09:54,120 --> 00:09:56,040
difficult so sometimes you really want

252
00:09:56,040 --> 00:09:58,260
to keep the degrees fixed and then see

253
00:09:58,260 --> 00:09:59,940
if you can still do something out of it

254
00:09:59,940 --> 00:10:03,480
so here the idea of Max torsion point is

255
00:10:03,480 --> 00:10:05,820
to keep the degree fixed and to only

256
00:10:05,820 --> 00:10:07,440
hide the torsion Point information you

257
00:10:07,440 --> 00:10:09,000
don't need to

258
00:10:09,000 --> 00:10:10,920
have isolation of different degree but

259
00:10:10,920 --> 00:10:12,360
you keep the degree fixed and you hide

260
00:10:12,360 --> 00:10:14,820
only the torsion Point information so

261
00:10:14,820 --> 00:10:16,080
hiding only the direction for

262
00:10:16,080 --> 00:10:17,700
information means you only scale the

263
00:10:17,700 --> 00:10:19,980
tuition points and

264
00:10:19,980 --> 00:10:21,600
as I said before you can still use

265
00:10:21,600 --> 00:10:24,240
pairings to recover The Scholar so what

266
00:10:24,240 --> 00:10:28,200
you do is like you take the scalars here

267
00:10:28,200 --> 00:10:30,300
to be the root of unity such that the

268
00:10:30,300 --> 00:10:31,740
square root of unity such that if you

269
00:10:31,740 --> 00:10:33,000
use pairings you wouldn't get any

270
00:10:33,000 --> 00:10:35,700
information about the Scala but if one

271
00:10:35,700 --> 00:10:37,200
can recover the square root of unity

272
00:10:37,200 --> 00:10:40,920
then one can just erase it and the half

273
00:10:40,920 --> 00:10:43,080
exact version Point information so you

274
00:10:43,080 --> 00:10:44,579
still need the print to have a lot of

275
00:10:44,579 --> 00:10:46,560
prime devices such that the number of

276
00:10:46,560 --> 00:10:50,160
square roots of unity is exponential

277
00:10:50,160 --> 00:10:51,839
and then that will like Define the

278
00:10:51,839 --> 00:10:53,519
security of your scheme the number of

279
00:10:53,519 --> 00:10:56,880
square roots of unity and with this

280
00:10:56,880 --> 00:10:59,579
you hope that this should be secure

281
00:10:59,579 --> 00:11:02,519
so why don't you expect the general

282
00:11:02,519 --> 00:11:05,640
attack to work in this case

283
00:11:05,640 --> 00:11:07,380
so

284
00:11:07,380 --> 00:11:10,019
you name me something oh okay this was

285
00:11:10,019 --> 00:11:13,019
just the choosing the scalars to be a

286
00:11:13,019 --> 00:11:15,480
square a quadratic root of unity modulo

287
00:11:15,480 --> 00:11:18,420
the order of the torsion points so why

288
00:11:18,420 --> 00:11:21,899
do you expect this to work in fact so uh

289
00:11:21,899 --> 00:11:23,220
in the attack what you were doing is

290
00:11:23,220 --> 00:11:24,720
that you were using you were

291
00:11:24,720 --> 00:11:26,220
transforming your secret isolation into

292
00:11:26,220 --> 00:11:28,200
another for which you know the degree

293
00:11:28,200 --> 00:11:30,240
now what we have done is that we have

294
00:11:30,240 --> 00:11:33,180
added a scalar here

295
00:11:33,180 --> 00:11:35,640
such that Computing pairings on torsion

296
00:11:35,640 --> 00:11:38,100
Point does not give you any information

297
00:11:38,100 --> 00:11:40,500
on the scalar that was that was added so

298
00:11:40,500 --> 00:11:42,180
it doesn't give you any information

299
00:11:42,180 --> 00:11:44,760
because the torsion points has they have

300
00:11:44,760 --> 00:11:46,320
some order and you are Computing

301
00:11:46,320 --> 00:11:48,660
everything mode to load this order so if

302
00:11:48,660 --> 00:11:50,880
you really want to know the degree of

303
00:11:50,880 --> 00:11:52,800
this thing which means you are no more

304
00:11:52,800 --> 00:11:55,380
considering only the points of order B

305
00:11:55,380 --> 00:11:57,660
then what you do is that if you compute

306
00:11:57,660 --> 00:11:59,940
the determinant of this Matrix it should

307
00:11:59,940 --> 00:12:01,860
give you something like a plus Alpha

308
00:12:01,860 --> 00:12:05,399
square B which is this quantity which is

309
00:12:05,399 --> 00:12:08,339
roughly B times a square

310
00:12:08,339 --> 00:12:10,800
so the degree of this new high damage

311
00:12:10,800 --> 00:12:12,959
higher Dimension hydrogen is B times a

312
00:12:12,959 --> 00:12:14,640
squared so if you really want to break

313
00:12:14,640 --> 00:12:16,500
it with the gastric the pro attack then

314
00:12:16,500 --> 00:12:19,560
you need about square root of this

315
00:12:19,560 --> 00:12:21,480
amount of torsion points which means you

316
00:12:21,480 --> 00:12:23,700
need about the square root of B times

317
00:12:23,700 --> 00:12:25,200
eight thousand Point information which

318
00:12:25,200 --> 00:12:28,320
is something that is not provided

319
00:12:28,320 --> 00:12:30,600
so with this I think I will leave the

320
00:12:30,600 --> 00:12:32,700
floor to my colleague we will now talk

321
00:12:32,700 --> 00:12:35,700
about the analysis of the schemes that

322
00:12:35,700 --> 00:12:38,779
were here constructed

323
00:12:39,959 --> 00:12:43,019
thank you the next I explain the

324
00:12:43,019 --> 00:12:45,060
security analysis of these counting

325
00:12:45,060 --> 00:12:48,000
measures and first I explained the

326
00:12:48,000 --> 00:12:51,240
general case of msidh as you already

327
00:12:51,240 --> 00:12:55,920
know Sid attacks works when H squared is

328
00:12:55,920 --> 00:12:57,480
larger than b

329
00:12:57,480 --> 00:13:01,139
so uh the goal of this analysis is find

330
00:13:01,139 --> 00:13:06,120
four point PA Prime QA Prime and 5B PA

331
00:13:06,120 --> 00:13:09,300
Prime 5 b to a prime satisfies uh order

332
00:13:09,300 --> 00:13:12,060
of these four points squared allergic to

333
00:13:12,060 --> 00:13:13,920
B

334
00:13:13,920 --> 00:13:18,180
and in sidh setting b and a are similar

335
00:13:18,180 --> 00:13:21,720
size so we can use less torsion instead

336
00:13:21,720 --> 00:13:22,860
of a

337
00:13:22,860 --> 00:13:25,860
then now we Define a prime as a product

338
00:13:25,860 --> 00:13:29,399
of else from T Prime to T and here T

339
00:13:29,399 --> 00:13:32,700
Prime is a maximum integer 35 a prime

340
00:13:32,700 --> 00:13:35,519
larger than square root of a

341
00:13:35,519 --> 00:13:38,700
then we can Define PA Prime and K Prime

342
00:13:38,700 --> 00:13:41,339
like this

343
00:13:41,339 --> 00:13:44,220
and the solution the number of solutions

344
00:13:44,220 --> 00:13:48,480
of the secret scalar and in this case is

345
00:13:48,480 --> 00:13:52,320
2 2 T minus t Prime so we need to take

346
00:13:52,320 --> 00:13:55,339
this value large enough

347
00:13:55,339 --> 00:13:59,760
and at least T Prime is larger than T

348
00:13:59,760 --> 00:14:01,620
over 2 by definition

349
00:14:01,620 --> 00:14:05,519
so A and B must have at least two Lambda

350
00:14:05,519 --> 00:14:08,579
distinct prime factors respectively this

351
00:14:08,579 --> 00:14:13,920
is a general case of msata ms3h

352
00:14:13,920 --> 00:14:18,620
and next I explained a special case

353
00:14:18,620 --> 00:14:21,779
We Now set the certain curve e0 has a

354
00:14:21,779 --> 00:14:25,380
small degree and more prism so uh we

355
00:14:25,380 --> 00:14:28,079
think of the curve of J variant 1728 or

356
00:14:28,079 --> 00:14:29,760
some other famous Cubs

357
00:14:29,760 --> 00:14:32,639
and the result of this thread is when we

358
00:14:32,639 --> 00:14:36,959
use this kind of Curves Ms ADH is broken

359
00:14:36,959 --> 00:14:40,139
and we first defined the lollipop

360
00:14:40,139 --> 00:14:43,440
anamorphism it is a composed of Phi B

361
00:14:43,440 --> 00:14:46,920
and Theta and hat Pi d and the key of

362
00:14:46,920 --> 00:14:50,220
this attack is we can compute the image

363
00:14:50,220 --> 00:14:53,459
point of a beta of ibpa under this

364
00:14:53,459 --> 00:14:55,920
lollipop and morphism without knowing

365
00:14:55,920 --> 00:14:59,399
secret scalable beta

366
00:14:59,399 --> 00:15:01,980
and here's the reason why we can compute

367
00:15:01,980 --> 00:15:03,839
the image point

368
00:15:03,839 --> 00:15:07,199
and by definition a beta beta square is

369
00:15:07,199 --> 00:15:08,220
a

370
00:15:08,220 --> 00:15:11,220
uh equivalent one module a so we have

371
00:15:11,220 --> 00:15:14,880
this equivalent module a and

372
00:15:14,880 --> 00:15:17,880
at this uh we can compute the image

373
00:15:17,880 --> 00:15:20,279
Point under this left hand side and

374
00:15:20,279 --> 00:15:22,500
morphism by definition so we can also

375
00:15:22,500 --> 00:15:25,740
compute the image point on the uh the

376
00:15:25,740 --> 00:15:28,199
light side and the morphism Tau

377
00:15:28,199 --> 00:15:31,920
and the degree of tau is the B is B

378
00:15:31,920 --> 00:15:34,500
squared degree Theta and Theta is very

379
00:15:34,500 --> 00:15:37,139
small it's so it's about B squared so we

380
00:15:37,139 --> 00:15:41,399
can adapt sidh attacks to Tau

381
00:15:41,399 --> 00:15:45,540
by using B torsions then um Tau has the

382
00:15:45,540 --> 00:15:47,100
information if I B so we can attack

383
00:15:47,100 --> 00:15:49,199
msadh

384
00:15:49,199 --> 00:15:53,220
so um when we want to make MSG secure we

385
00:15:53,220 --> 00:15:58,199
do not use uh certain Cub with small

386
00:15:58,199 --> 00:16:00,300
degree in the morphism as a certain

387
00:16:00,300 --> 00:16:03,899
curve or if possible we should take the

388
00:16:03,899 --> 00:16:05,940
curve without information of its

389
00:16:05,940 --> 00:16:08,100
anamorphism link

390
00:16:08,100 --> 00:16:11,220
okay and it is a security analysis of

391
00:16:11,220 --> 00:16:12,899
msadh

392
00:16:12,899 --> 00:16:14,699
and next I explained the security

393
00:16:14,699 --> 00:16:17,160
analysis of mdsadh

394
00:16:17,160 --> 00:16:18,920
and you may think

395
00:16:18,920 --> 00:16:22,079
mdsidh is more secure than msadh because

396
00:16:22,079 --> 00:16:25,320
it hides information of degree but from

397
00:16:25,320 --> 00:16:28,980
our result the security of Ms ADH can

398
00:16:28,980 --> 00:16:32,699
introduce to that of msidh and the sidh

399
00:16:32,699 --> 00:16:36,839
attacks then I explain the uh the reason

400
00:16:36,839 --> 00:16:39,720
the key of this reduction is Sid's

401
00:16:39,720 --> 00:16:43,800
attacks also work on non-cyclic isogenes

402
00:16:43,800 --> 00:16:46,800
then first I'll record some settings uh

403
00:16:46,800 --> 00:16:49,800
the degree of IB is B Prime and this is

404
00:16:49,800 --> 00:16:53,940
a secret and social Point are scaled by

405
00:16:53,940 --> 00:16:55,860
Beta

406
00:16:55,860 --> 00:16:58,680
and and now we denote the square free

407
00:16:58,680 --> 00:17:02,459
part of B Prime by B1 Prime

408
00:17:02,459 --> 00:17:05,880
then next we defined this Maps Divine

409
00:17:05,880 --> 00:17:08,099
sorry and it's not so much time so I

410
00:17:08,099 --> 00:17:10,740
didn't explain this map but there's two

411
00:17:10,740 --> 00:17:15,480
cranes a first image of the map Pi is

412
00:17:15,480 --> 00:17:17,939
with the information the B1 Prime leaked

413
00:17:17,939 --> 00:17:19,520
by value pairing

414
00:17:19,520 --> 00:17:24,240
and this file is almost injective so it

415
00:17:24,240 --> 00:17:26,760
means we can recover B1 Prime by using

416
00:17:26,760 --> 00:17:29,460
value pairing

417
00:17:29,460 --> 00:17:32,640
then now I explain the reduction then I

418
00:17:32,640 --> 00:17:35,160
assume that we already know B1 Prime and

419
00:17:35,160 --> 00:17:37,919
we said uh b0 as maximum integer

420
00:17:37,919 --> 00:17:41,880
satisfying this property

421
00:17:41,880 --> 00:17:45,780
and there here's a uh in Sorry by the

422
00:17:45,780 --> 00:17:49,260
page zero and it satisfies uh pieces

423
00:17:49,260 --> 00:17:52,100
squared B1 Prime is equal to Pages

424
00:17:52,100 --> 00:17:55,559
squares P Prime and then we set this

425
00:17:55,559 --> 00:17:59,220
value as NB and we don't know b0 but we

426
00:17:59,220 --> 00:18:01,799
know and B because we know b0 and Beyond

427
00:18:01,799 --> 00:18:03,240
Prime

428
00:18:03,240 --> 00:18:06,660
and set the integer uh sorry not the

429
00:18:06,660 --> 00:18:10,020
integer at isogeny Phi 0 as a composer

430
00:18:10,020 --> 00:18:12,059
of the page 0 and pi b

431
00:18:12,059 --> 00:18:15,179
and the date degree is in V so we know

432
00:18:15,179 --> 00:18:18,539
the degree of the Phi 0 and here uh by

433
00:18:18,539 --> 00:18:21,660
direct completion we know Beta Phi p is

434
00:18:21,660 --> 00:18:25,740
equal to the beta beta0 inverse Phi 0p

435
00:18:25,740 --> 00:18:28,020
and it is also the same happened to the

436
00:18:28,020 --> 00:18:28,919
Q

437
00:18:28,919 --> 00:18:31,679
and we in a set beta Prime is equal to

438
00:18:31,679 --> 00:18:34,799
the beta beta during burst module a

439
00:18:34,799 --> 00:18:38,580
and we know these two cases are same the

440
00:18:38,580 --> 00:18:42,419
first case is cases msadh and and we

441
00:18:42,419 --> 00:18:45,419
know the square free part of the Prime

442
00:18:45,419 --> 00:18:48,900
and second case is the case of Ms ADH

443
00:18:48,900 --> 00:18:52,559
then we know the degree of ysras and B

444
00:18:52,559 --> 00:18:54,419
so we can transform

445
00:18:54,419 --> 00:18:57,059
um Ms ADH instance into an MS edit

446
00:18:57,059 --> 00:18:59,220
instance so we can apply the previous

447
00:18:59,220 --> 00:19:00,840
attacks

448
00:19:00,840 --> 00:19:03,360
then finally I show the parameter size

449
00:19:03,360 --> 00:19:04,860
of a

450
00:19:04,860 --> 00:19:08,880
schemes and we need to set the parameter

451
00:19:08,880 --> 00:19:12,600
such point is to properties and for the

452
00:19:12,600 --> 00:19:15,900
next level security we need about 6000

453
00:19:15,900 --> 00:19:21,539
bits and foreign we need about uh 13 000

454
00:19:21,539 --> 00:19:23,280
bit

455
00:19:23,280 --> 00:19:25,799
okay and here's some Ali and there's a

456
00:19:25,799 --> 00:19:30,120
point where uh make SIDS work but due to

457
00:19:30,120 --> 00:19:32,400
the tuition Point as it is broken

458
00:19:32,400 --> 00:19:35,340
then we think uh to count the measures

459
00:19:35,340 --> 00:19:39,059
and Ms ADH and then the sadh and we

460
00:19:39,059 --> 00:19:41,100
analyze the security

461
00:19:41,100 --> 00:19:44,940
and from other analysis uh it must be at

462
00:19:44,940 --> 00:19:48,200
least uh six about six thousand bit

463
00:19:48,200 --> 00:19:52,190
thank you for receiving any questions

464
00:19:52,190 --> 00:19:57,480
[Applause]

465
00:19:57,480 --> 00:20:02,240
maybe time for one quick question yeah

466
00:20:06,059 --> 00:20:09,360
thank you for the presentation uh how do

467
00:20:09,360 --> 00:20:12,360
you compare your counter measures of

468
00:20:12,360 --> 00:20:16,979
sidh against foreign options

469
00:20:17,960 --> 00:20:21,360
inefficiency and efficiency

470
00:20:21,360 --> 00:20:24,059
you remember the number

471
00:20:24,059 --> 00:20:26,820
we didn't we didn't implement it but

472
00:20:26,820 --> 00:20:29,400
it's very ISRO so

473
00:20:29,400 --> 00:20:31,400
um

474
00:20:36,380 --> 00:20:38,880
it's slow but

475
00:20:38,880 --> 00:20:41,700
yes you like what Seaside will you

476
00:20:41,700 --> 00:20:43,980
compare with in general like 512 no

477
00:20:43,980 --> 00:20:45,360
because

478
00:20:45,360 --> 00:20:47,880
no one's know the security level of 512

479
00:20:47,880 --> 00:20:49,320
maybe

480
00:20:49,320 --> 00:20:51,360
um but if you want to compare with like

481
00:20:51,360 --> 00:20:55,200
we see size Seaside of 4 000 bits or 2

482
00:20:55,200 --> 00:20:57,539
000 I think you can have something that

483
00:20:57,539 --> 00:20:58,620
competes

484
00:20:58,620 --> 00:21:01,320
but I believe this one should still be a

485
00:21:01,320 --> 00:21:03,539
little bit slow I think but at least

486
00:21:03,539 --> 00:21:05,160
this will prove that if you want to

487
00:21:05,160 --> 00:21:08,640
counter the attack this way then

488
00:21:08,640 --> 00:21:13,080
it may be a bit you may lose a lot yeah

489
00:21:13,080 --> 00:21:15,600
but we hope that maybe uh this may find

490
00:21:15,600 --> 00:21:18,260
some applications

491
00:21:18,480 --> 00:21:21,960
okay let us thank the speakers again

492
00:21:21,960 --> 00:21:26,960
[Applause]

493
00:21:26,960 --> 00:21:30,240
Next Step will be Antonio who will be

494
00:21:30,240 --> 00:21:31,860
talking about new algorithms for the

495
00:21:31,860 --> 00:21:33,720
during correspondence towards practical

496
00:21:33,720 --> 00:21:36,480
and scarce key signatures which is joint

497
00:21:36,480 --> 00:21:39,179
work with Luca de Phil Patrick longa and

498
00:21:39,179 --> 00:21:42,679
Benjamin wieselowski

499
00:21:45,900 --> 00:21:50,280
okay thanks for the introduction so yeah

500
00:21:50,280 --> 00:21:53,820
so today we are going to learn to ski a

501
00:21:53,820 --> 00:21:56,039
little bit if you were paying attention

502
00:21:56,039 --> 00:21:58,440
yesterday you know that that is why the

503
00:21:58,440 --> 00:22:01,860
cool crypto kids do these days and uh

504
00:22:01,860 --> 00:22:05,460
that's why I'm going to uh to explain to

505
00:22:05,460 --> 00:22:06,780
you

506
00:22:06,780 --> 00:22:09,240
um today

507
00:22:09,240 --> 00:22:13,140
so this paper is really a story about

508
00:22:13,140 --> 00:22:16,020
The Diary correspondence and so this

509
00:22:16,020 --> 00:22:17,940
daring correspondence is a very

510
00:22:17,940 --> 00:22:19,860
fascinating link between two

511
00:22:19,860 --> 00:22:23,100
mathematical worlds which are seemingly

512
00:22:23,100 --> 00:22:25,500
at least at first glance have nothing in

513
00:22:25,500 --> 00:22:27,659
common but in fact they do so on the one

514
00:22:27,659 --> 00:22:29,940
side we have the world of elliptic

515
00:22:29,940 --> 00:22:32,520
curves so this is an algebraic world so

516
00:22:32,520 --> 00:22:35,340
think about equations and polynomials

517
00:22:35,340 --> 00:22:37,080
I'm not going to give precise definition

518
00:22:37,080 --> 00:22:40,080
as it will not really be helpful but

519
00:22:40,080 --> 00:22:43,080
well I think you've already saw some

520
00:22:43,080 --> 00:22:45,539
other talks that introduce the relevant

521
00:22:45,539 --> 00:22:46,559
Notions

522
00:22:46,559 --> 00:22:48,600
and then we have another world which is

523
00:22:48,600 --> 00:22:50,580
really different and that is the world

524
00:22:50,580 --> 00:22:53,340
of quantum and algebras and for that you

525
00:22:53,340 --> 00:22:56,039
can think about matrices latencies

526
00:22:56,039 --> 00:22:58,760
Vector space and this kind of thing

527
00:22:58,760 --> 00:23:01,620
and it turns out that if you take the

528
00:23:01,620 --> 00:23:04,440
right parameters you can get the exact

529
00:23:04,440 --> 00:23:07,080
same graph in these two worlds so just

530
00:23:07,080 --> 00:23:08,280
like here

531
00:23:08,280 --> 00:23:11,220
and uh well this is not like a

532
00:23:11,220 --> 00:23:13,440
coincidence it's like actually a really

533
00:23:13,440 --> 00:23:16,919
nice mathematical result and well the

534
00:23:16,919 --> 00:23:18,539
goal of this uh

535
00:23:18,539 --> 00:23:21,539
paper of our paper basically is to study

536
00:23:21,539 --> 00:23:22,799
these correspondence and in particular

537
00:23:22,799 --> 00:23:25,500
to look at a specific task of

538
00:23:25,500 --> 00:23:29,460
translating One path from

539
00:23:29,460 --> 00:23:33,299
uh something in the quaternal graph to a

540
00:23:33,299 --> 00:23:38,059
path in the super singular isotony graph

541
00:23:38,340 --> 00:23:41,340
a little bit more precisely my during

542
00:23:41,340 --> 00:23:43,559
correspondence can be summarized with

543
00:23:43,559 --> 00:23:46,320
this small table here so on the first

544
00:23:46,320 --> 00:23:49,799
slide I have the nodes of My Graph so

545
00:23:49,799 --> 00:23:51,539
super singular ellipticals on one hand

546
00:23:51,539 --> 00:23:55,260
and maximal orders inside a quaternal

547
00:23:55,260 --> 00:23:56,880
algebra so for this of course I have to

548
00:23:56,880 --> 00:23:59,220
fix a prime characteristic p and then

549
00:23:59,220 --> 00:24:01,679
the quadrant Algebra I obtain is also

550
00:24:01,679 --> 00:24:04,080
only depending on P and I can actually

551
00:24:04,080 --> 00:24:06,299
realize these correspondence by looking

552
00:24:06,299 --> 00:24:08,820
at the endomorphism Ring of the curve

553
00:24:08,820 --> 00:24:12,000
then I have the edges of my graph which

554
00:24:12,000 --> 00:24:15,179
are isogenes and ideals

555
00:24:15,179 --> 00:24:18,659
and finally I have some kind of notion

556
00:24:18,659 --> 00:24:21,240
that allow me to quantify like the

557
00:24:21,240 --> 00:24:22,980
complexity of my objects which in the

558
00:24:22,980 --> 00:24:25,559
case of isogenes are degree so this

559
00:24:25,559 --> 00:24:27,659
really is about the size of the object

560
00:24:27,659 --> 00:24:29,640
that we manipulate and on the other side

561
00:24:29,640 --> 00:24:32,820
we have the norm and once again they

562
00:24:32,820 --> 00:24:34,740
agree so everything behaves quite well

563
00:24:34,740 --> 00:24:36,840
and maybe a small example would be a

564
00:24:36,840 --> 00:24:38,640
little bit easier so if I take P equal

565
00:24:38,640 --> 00:24:42,120
to 3 mod 4 then my Quantum algebra is

566
00:24:42,120 --> 00:24:44,340
this Q Vector space of Dimension four

567
00:24:44,340 --> 00:24:47,159
generated by this basis element where I

568
00:24:47,159 --> 00:24:49,140
squared is equal to -1 J squared is

569
00:24:49,140 --> 00:24:50,640
equal to minus p

570
00:24:50,640 --> 00:24:53,220
and if I take this curve is zero it's

571
00:24:53,220 --> 00:24:55,320
always super singular and I actually

572
00:24:55,320 --> 00:24:58,620
have a very nice equation and way of

573
00:24:58,620 --> 00:25:00,659
representing its anomorphism ring using

574
00:25:00,659 --> 00:25:04,860
two maps pi and Yota with very simple

575
00:25:04,860 --> 00:25:08,340
nice rational expressions and actually I

576
00:25:08,340 --> 00:25:10,500
can identify this Yota and this part to

577
00:25:10,500 --> 00:25:12,419
this group of minus p and the square

578
00:25:12,419 --> 00:25:14,640
root of -1 and this is how I get a

579
00:25:14,640 --> 00:25:17,520
really explicit isomorphism between the

580
00:25:17,520 --> 00:25:20,400
onomorphism ring and a maximal order

581
00:25:20,400 --> 00:25:22,260
Inside macquatinum Algebra which is

582
00:25:22,260 --> 00:25:25,860
simply a lattice of rank 4.

583
00:25:25,860 --> 00:25:28,260
so the original motivation to study

584
00:25:28,260 --> 00:25:30,179
these kind of things was really to

585
00:25:30,179 --> 00:25:31,620
understand the hard problems that we

586
00:25:31,620 --> 00:25:34,799
have so on the top of the slide you can

587
00:25:34,799 --> 00:25:37,320
see the usual hard isotonin problem

588
00:25:37,320 --> 00:25:39,419
which is the one of given two curves I

589
00:25:39,419 --> 00:25:41,400
want to find a path between then in my

590
00:25:41,400 --> 00:25:42,779
isotony graph

591
00:25:42,779 --> 00:25:44,760
and of course this problem is believed

592
00:25:44,760 --> 00:25:46,740
to be hard this is one of the

593
00:25:46,740 --> 00:25:48,240
foundations of a searching basic

594
00:25:48,240 --> 00:25:50,700
cryptography on the bottom we have the

595
00:25:50,700 --> 00:25:52,260
translation of this problem under the

596
00:25:52,260 --> 00:25:54,720
daring correspondence so I've just taken

597
00:25:54,720 --> 00:25:56,700
the the elements and then replaced them

598
00:25:56,700 --> 00:25:59,520
with their counterparts in the quaternal

599
00:25:59,520 --> 00:26:00,600
world

600
00:26:00,600 --> 00:26:02,760
and it turns out that this new problem

601
00:26:02,760 --> 00:26:05,159
is actually easy as it will show it it

602
00:26:05,159 --> 00:26:08,580
was shown in a paper of 2014 with a

603
00:26:08,580 --> 00:26:10,679
polynomial time algorithm to solve this

604
00:26:10,679 --> 00:26:13,380
quaternion path problem

605
00:26:13,380 --> 00:26:16,799
and fortunately this does not break the

606
00:26:16,799 --> 00:26:18,480
first problem otherwise I wouldn't be

607
00:26:18,480 --> 00:26:19,740
here today to talk to you but I

608
00:26:19,740 --> 00:26:21,720
searching based cryptography and this is

609
00:26:21,720 --> 00:26:23,100
because there is some kind of

610
00:26:23,100 --> 00:26:26,039
fundamental gap between the two and this

611
00:26:26,039 --> 00:26:27,900
Gap is actually the the translation

612
00:26:27,900 --> 00:26:30,720
problem of taking one curve and

613
00:26:30,720 --> 00:26:32,520
Computing its onomorphism ring and this

614
00:26:32,520 --> 00:26:33,900
is what we call the endomorphism problem

615
00:26:33,900 --> 00:26:35,940
if I can do that I can transform an

616
00:26:35,940 --> 00:26:38,039
instance if I'm of my first problem into

617
00:26:38,039 --> 00:26:40,380
an instance of my second problem and

618
00:26:40,380 --> 00:26:41,820
then everything is broken

619
00:26:41,820 --> 00:26:44,520
so this is the second really fundamental

620
00:26:44,520 --> 00:26:47,940
uh problem in isotony-based cryptography

621
00:26:47,940 --> 00:26:50,880
and so this little uh picture is

622
00:26:50,880 --> 00:26:53,520
actually what underlies the idea of this

623
00:26:53,520 --> 00:26:55,679
key sign identification scheme so this

624
00:26:55,679 --> 00:26:57,720
scheme is was introduced uh two years

625
00:26:57,720 --> 00:26:58,679
ago

626
00:26:58,679 --> 00:27:01,440
and the idea is the following so I'm

627
00:27:01,440 --> 00:27:03,179
going to use a curved super singular

628
00:27:03,179 --> 00:27:06,059
curve as a public key and then the

629
00:27:06,059 --> 00:27:07,140
secret key is going to be the

630
00:27:07,140 --> 00:27:09,900
endomorphism Ring of the curve these

631
00:27:09,900 --> 00:27:12,659
exact notion that I that I supposed to

632
00:27:12,659 --> 00:27:14,820
be difficult to find

633
00:27:14,820 --> 00:27:16,860
and I want to prove that I know the

634
00:27:16,860 --> 00:27:19,980
knowledge of this object by solving an

635
00:27:19,980 --> 00:27:21,900
instance of the isogony problem and by

636
00:27:21,900 --> 00:27:24,059
the the small picture that I showed you

637
00:27:24,059 --> 00:27:26,760
uh in the previous slide I should be

638
00:27:26,760 --> 00:27:28,500
able to do that only if I can translate

639
00:27:28,500 --> 00:27:30,960
and so only if I know the secret so

640
00:27:30,960 --> 00:27:33,659
that's a bit morally the idea behind the

641
00:27:33,659 --> 00:27:35,700
identification scheme so the this

642
00:27:35,700 --> 00:27:38,460
protocol is all about building a nice

643
00:27:38,460 --> 00:27:40,860
instance of the isogeny problem that the

644
00:27:40,860 --> 00:27:43,620
prover will solve so to make things a

645
00:27:43,620 --> 00:27:46,020
little more visual I just represented my

646
00:27:46,020 --> 00:27:48,360
secret he has a nisogyny from the

647
00:27:48,360 --> 00:27:51,120
spatial curve e0 so the one I presented

648
00:27:51,120 --> 00:27:53,520
uh earlier so one of the nice few

649
00:27:53,520 --> 00:27:54,960
examples where I actually know the on

650
00:27:54,960 --> 00:27:57,840
the morphine ring of the curve e0 and

651
00:27:57,840 --> 00:27:59,520
yeah knowing the number of the Ring of

652
00:27:59,520 --> 00:28:00,779
the curve EA is actually kind of

653
00:28:00,779 --> 00:28:03,720
equivalent to knowing this isogeneto

654
00:28:03,720 --> 00:28:06,720
uh then the first part of my protocol is

655
00:28:06,720 --> 00:28:09,240
a commitment phase performed by the

656
00:28:09,240 --> 00:28:12,240
prover and with that you get a curve E1

657
00:28:12,240 --> 00:28:14,100
that is sent to the verifier then the

658
00:28:14,100 --> 00:28:17,220
verifier chooses a nisogyny Phi and this

659
00:28:17,220 --> 00:28:19,620
leads to a curve E2 and then probably

660
00:28:19,620 --> 00:28:21,960
you can see it coming the goal of the

661
00:28:21,960 --> 00:28:23,880
prover is to solve an isogen instance

662
00:28:23,880 --> 00:28:26,520
between EA and E2 so compute this Sigma

663
00:28:26,520 --> 00:28:28,620
a certain

664
00:28:28,620 --> 00:28:32,100
so how does he do that exactly so the

665
00:28:32,100 --> 00:28:34,320
first step is to compute the onomorphism

666
00:28:34,320 --> 00:28:36,779
Ring of E2 so once again you can use a

667
00:28:36,779 --> 00:28:39,179
path from e0 to E2 I'm not going to

668
00:28:39,179 --> 00:28:40,919
explain how this works but you can trust

669
00:28:40,919 --> 00:28:42,900
me you can make it work quite

670
00:28:42,900 --> 00:28:45,779
efficiently then once we know the two on

671
00:28:45,779 --> 00:28:47,640
the morphism Rings we are in this very

672
00:28:47,640 --> 00:28:49,440
nice case where we can apply this

673
00:28:49,440 --> 00:28:52,080
question algorithm and with that we

674
00:28:52,080 --> 00:28:55,260
found an ideal connecting these two and

675
00:28:55,260 --> 00:28:56,580
then finally I can translate this

676
00:28:56,580 --> 00:28:58,679
knowledge into a nisogyny which is going

677
00:28:58,679 --> 00:29:00,240
to be my response

678
00:29:00,240 --> 00:29:02,460
and this last part is actually the

679
00:29:02,460 --> 00:29:04,919
critical step and this is for this last

680
00:29:04,919 --> 00:29:07,260
step that we need an efficient ideal to

681
00:29:07,260 --> 00:29:09,360
a certainly translation so this is

682
00:29:09,360 --> 00:29:10,919
really the goal of the paper improving

683
00:29:10,919 --> 00:29:15,000
this part and you might wonder why it is

684
00:29:15,000 --> 00:29:17,880
the hardest part and it really comes

685
00:29:17,880 --> 00:29:21,179
from the fact that this is Sigma is

686
00:29:21,179 --> 00:29:23,520
really long okay because our algorithm

687
00:29:23,520 --> 00:29:25,620
of other quaternions it works quite

688
00:29:25,620 --> 00:29:28,440
efficiently so it's it's nice but the

689
00:29:28,440 --> 00:29:30,840
the path that it finds is really long

690
00:29:30,840 --> 00:29:32,640
compared to what you could expect

691
00:29:32,640 --> 00:29:35,460
and this is really the length of this

692
00:29:35,460 --> 00:29:39,960
Sigma is the the problem here okay

693
00:29:39,960 --> 00:29:42,899
so a little more precisely uh here is

694
00:29:42,899 --> 00:29:45,179
what I want to do so in input I have a

695
00:29:45,179 --> 00:29:46,860
super singular curve e it's on the

696
00:29:46,860 --> 00:29:49,860
morphism ring and an ideal of Norm D so

697
00:29:49,860 --> 00:29:52,260
it's given us 16 coefficients of size

698
00:29:52,260 --> 00:29:55,740
bounded by P and D and my goal is to

699
00:29:55,740 --> 00:29:57,720
compute this isogeny corresponding to

700
00:29:57,720 --> 00:29:59,039
the ideal under the domain

701
00:29:59,039 --> 00:30:00,059
correspondence

702
00:30:00,059 --> 00:30:03,000
and we know an algorithm to do that

703
00:30:03,000 --> 00:30:06,840
which was introduced in a 2016 paper by

704
00:30:06,840 --> 00:30:10,380
galbarev PT and Silva to

705
00:30:10,380 --> 00:30:11,520
um

706
00:30:11,520 --> 00:30:13,500
to introduce a signature scheme which

707
00:30:13,500 --> 00:30:15,000
can actually be seen as some kind of

708
00:30:15,000 --> 00:30:18,899
ancestor for a ski sign and roughly this

709
00:30:18,899 --> 00:30:21,240
algorithm has a complexity which is

710
00:30:21,240 --> 00:30:22,919
essentially polynomial in the biggest

711
00:30:22,919 --> 00:30:26,100
prime factor of the degree D and it

712
00:30:26,100 --> 00:30:28,980
requires to do some operations over FP

713
00:30:28,980 --> 00:30:33,080
to Decay where uh the

714
00:30:33,080 --> 00:30:35,940
fptdk is the field of definition of the

715
00:30:35,940 --> 00:30:38,340
kernel of the isogeny so the kernel are

716
00:30:38,340 --> 00:30:40,559
simply the points that are sent to Zero

717
00:30:40,559 --> 00:30:43,799
by the isogeny map and they're actually

718
00:30:43,799 --> 00:30:45,659
the objects that we are going to use

719
00:30:45,659 --> 00:30:47,880
concretely to compute the isogeny so

720
00:30:47,880 --> 00:30:49,679
basically the algorithm uses a bunch of

721
00:30:49,679 --> 00:30:52,020
operations on these elliptic curve

722
00:30:52,020 --> 00:30:54,539
points and if they are represented in a

723
00:30:54,539 --> 00:30:57,120
extension of big degree then these

724
00:30:57,120 --> 00:30:58,260
operations are going to be very

725
00:30:58,260 --> 00:31:00,600
inefficient so this is why we have a

726
00:31:00,600 --> 00:31:03,779
constraint on the field of definition

727
00:31:03,779 --> 00:31:07,080
uh uh so this means two things first we

728
00:31:07,080 --> 00:31:09,659
need to take D to be smooth so that we

729
00:31:09,659 --> 00:31:11,340
have a small number of operations to do

730
00:31:11,340 --> 00:31:14,700
and then we need d uh not to be too big

731
00:31:14,700 --> 00:31:17,340
so that K is not too big either and that

732
00:31:17,340 --> 00:31:21,120
we are or the operations that we did do

733
00:31:21,120 --> 00:31:25,080
sorry are on a nice field which is not

734
00:31:25,080 --> 00:31:28,020
too big because generically the size of

735
00:31:28,020 --> 00:31:30,899
the extension can be uh like in O of d

736
00:31:30,899 --> 00:31:34,500
one so the when D is polynomial sorry

737
00:31:34,500 --> 00:31:36,480
exponentially big then this is

738
00:31:36,480 --> 00:31:38,760
completely infeasible

739
00:31:38,760 --> 00:31:42,059
so in ski sign you take D to be a power

740
00:31:42,059 --> 00:31:43,799
of 2 because that's basically the best

741
00:31:43,799 --> 00:31:46,620
case to have an efficient isotony

742
00:31:46,620 --> 00:31:50,039
translation and the idea which was

743
00:31:50,039 --> 00:31:51,659
introduced in the original ski sign

744
00:31:51,659 --> 00:31:55,580
paper is based which is actually not a

745
00:31:55,580 --> 00:31:59,700
new to the ski sign paper but this paper

746
00:31:59,700 --> 00:32:02,279
was the first one to make it to use it

747
00:32:02,279 --> 00:32:05,039
effectively to make a concrete algorithm

748
00:32:05,039 --> 00:32:07,140
so yeah so the idea is to cut the

749
00:32:07,140 --> 00:32:09,120
isogeny in small pieces of degree 2 to

750
00:32:09,120 --> 00:32:12,600
the E where the kernels uh of these two

751
00:32:12,600 --> 00:32:15,000
to the E isogenes will be defined over a

752
00:32:15,000 --> 00:32:17,460
small field extension

753
00:32:17,460 --> 00:32:19,440
and so in that case we can make the

754
00:32:19,440 --> 00:32:21,299
translation for isogenes of degree 2 to

755
00:32:21,299 --> 00:32:22,140
the e

756
00:32:22,140 --> 00:32:25,620
and the idea is to repeat this uh

757
00:32:25,620 --> 00:32:28,440
procedure a bunch of times until we have

758
00:32:28,440 --> 00:32:31,740
translated the whole uh 2 to the F

759
00:32:31,740 --> 00:32:35,159
isotony the program of course is that I

760
00:32:35,159 --> 00:32:37,260
kind of need to refresh my two to the

761
00:32:37,260 --> 00:32:39,559
eat ocean after each step okay because

762
00:32:39,559 --> 00:32:43,500
basically I consume the points that I

763
00:32:43,500 --> 00:32:46,020
had when I do one step and then if I

764
00:32:46,020 --> 00:32:48,480
want to do another one yeah I I kind of

765
00:32:48,480 --> 00:32:50,460
need some kind of refresh okay so I'm

766
00:32:50,460 --> 00:32:52,080
not going to explain how this refresh

767
00:32:52,080 --> 00:32:56,220
thing works exactly but uh yeah just

768
00:32:56,220 --> 00:32:57,960
know that we need to do something in

769
00:32:57,960 --> 00:33:00,299
order to continue our path

770
00:33:00,299 --> 00:33:03,120
and the so the idea introducing ski sign

771
00:33:03,120 --> 00:33:05,279
was to use some kind of alternate path

772
00:33:05,279 --> 00:33:08,039
of smooth odd degree so it needs to be

773
00:33:08,039 --> 00:33:10,140
odd basically because we want T to be

774
00:33:10,140 --> 00:33:12,960
co-prime with 2 to the E okay and then

775
00:33:12,960 --> 00:33:15,480
the smooth part comes from the fact that

776
00:33:15,480 --> 00:33:18,659
this is a nisogyny and we need it to be

777
00:33:18,659 --> 00:33:20,159
smooth so that it can be computed

778
00:33:20,159 --> 00:33:22,760
efficiently

779
00:33:23,880 --> 00:33:27,659
so in the end I'm going to need uh so

780
00:33:27,659 --> 00:33:31,679
points of order 2 to the E and times T

781
00:33:31,679 --> 00:33:34,799
okay to do this alternate path and to

782
00:33:34,799 --> 00:33:36,539
make it as efficient as possible I want

783
00:33:36,539 --> 00:33:38,159
those points to be defined over FP

784
00:33:38,159 --> 00:33:40,140
squared and this condition translates

785
00:33:40,140 --> 00:33:42,919
into I want that 2 to the E times T

786
00:33:42,919 --> 00:33:46,559
divides P Square minus 1. okay which in

787
00:33:46,559 --> 00:33:49,260
principle should be fine but here the

788
00:33:49,260 --> 00:33:51,000
problem is that I actually have a

789
00:33:51,000 --> 00:33:53,519
constraint on the size of T because this

790
00:33:53,519 --> 00:33:57,539
alternate path is not we find it using

791
00:33:57,539 --> 00:33:59,460
once again some techniques about the

792
00:33:59,460 --> 00:34:01,620
quaternions so I'm not going to explain

793
00:34:01,620 --> 00:34:03,899
how this works but once again we find

794
00:34:03,899 --> 00:34:06,019
something which is quite huge

795
00:34:06,019 --> 00:34:09,480
fortunately it's not too big and in

796
00:34:09,480 --> 00:34:11,099
particular it's smaller than P Square

797
00:34:11,099 --> 00:34:12,899
because otherwise I wouldn't have any

798
00:34:12,899 --> 00:34:15,000
hope to to solve this but it's still

799
00:34:15,000 --> 00:34:16,440
very big and in particular it's bigger

800
00:34:16,440 --> 00:34:18,780
than P which will make the task of

801
00:34:18,780 --> 00:34:21,960
finding such a nice Prime P very

802
00:34:21,960 --> 00:34:23,040
complicated

803
00:34:23,040 --> 00:34:26,520
and then the the efficiency of the final

804
00:34:26,520 --> 00:34:29,219
scheme will really depend on the value

805
00:34:29,219 --> 00:34:34,339
of e and then the smoothness bound of t

806
00:34:35,159 --> 00:34:37,739
so um the main idea of the Improvement

807
00:34:37,739 --> 00:34:40,379
actually is well basically to relax the

808
00:34:40,379 --> 00:34:42,839
constraints on this T and if we can do

809
00:34:42,839 --> 00:34:45,119
that we are going to find uh better

810
00:34:45,119 --> 00:34:48,119
primes and this will mean a better

811
00:34:48,119 --> 00:34:51,719
algorithm more efficient scheme okay so

812
00:34:51,719 --> 00:34:54,239
the main new idea is that this refresh

813
00:34:54,239 --> 00:34:56,820
phase that previously required some kind

814
00:34:56,820 --> 00:34:59,660
of alternate path can actually be

815
00:34:59,660 --> 00:35:02,660
performed using some smooth odd degree

816
00:35:02,660 --> 00:35:06,420
onomorphisms okay so there is several

817
00:35:06,420 --> 00:35:09,300
technical details uh behind that and why

818
00:35:09,300 --> 00:35:12,420
it works but I invite you to look at the

819
00:35:12,420 --> 00:35:14,040
paper and go read the paper if you want

820
00:35:14,040 --> 00:35:16,099
to see how this works but it can be done

821
00:35:16,099 --> 00:35:18,960
and the nice thing is that onomorphisms

822
00:35:18,960 --> 00:35:20,579
are actually easier to find that than

823
00:35:20,579 --> 00:35:23,220
isotonies and so I got the relaxation of

824
00:35:23,220 --> 00:35:26,040
my constraint on T and for this new

825
00:35:26,040 --> 00:35:28,560
method to work efficiently I only need T

826
00:35:28,560 --> 00:35:31,079
to be roughly equal to P to D5 divided

827
00:35:31,079 --> 00:35:35,820
by 4. so this is uh already again and in

828
00:35:35,820 --> 00:35:38,099
practice it will allow us to find a

829
00:35:38,099 --> 00:35:39,540
nicer Prime

830
00:35:39,540 --> 00:35:42,480
okay so here are two primes the first

831
00:35:42,480 --> 00:35:46,500
one was for the initial uh ski sign uh

832
00:35:46,500 --> 00:35:49,260
and so we have two to the 33 torsion and

833
00:35:49,260 --> 00:35:50,940
the biggest prime factor that we use is

834
00:35:50,940 --> 00:35:54,000
roughly 7000 and for this new Prime we

835
00:35:54,000 --> 00:35:57,420
have uh twice as much uh even torsion

836
00:35:57,420 --> 00:36:00,660
because we can go up to two to 65 and

837
00:36:00,660 --> 00:36:02,579
the biggest prime factor is four

838
00:36:02,579 --> 00:36:05,099
thousand and the size of these big prime

839
00:36:05,099 --> 00:36:08,700
factors is uh has a huge impact on the

840
00:36:08,700 --> 00:36:11,280
on the scheme so going down from seven

841
00:36:11,280 --> 00:36:13,320
thousand to four thousand uh it's

842
00:36:13,320 --> 00:36:16,940
already a good Improvement

843
00:36:19,020 --> 00:36:21,240
okay so let's now let's talk a little

844
00:36:21,240 --> 00:36:23,400
bit about performances and before

845
00:36:23,400 --> 00:36:25,079
talking about our implementation I just

846
00:36:25,079 --> 00:36:27,300
wanted to remind you why are we

847
00:36:27,300 --> 00:36:31,200
interested into this skis on scheme well

848
00:36:31,200 --> 00:36:33,359
uh the nice thing about it is that it's

849
00:36:33,359 --> 00:36:35,280
the most compact post Quantum signature

850
00:36:35,280 --> 00:36:36,839
scheme if you look at public key and

851
00:36:36,839 --> 00:36:39,000
signature combined so I gave here some

852
00:36:39,000 --> 00:36:41,400
example for nist level one and you have

853
00:36:41,400 --> 00:36:44,040
the comparison with Latin schemes Falcon

854
00:36:44,040 --> 00:36:47,220
and the lithium

855
00:36:47,220 --> 00:36:50,220
so then we made a c implementation which

856
00:36:50,220 --> 00:36:53,040
includes the new algorithm and several

857
00:36:53,040 --> 00:36:56,579
other improvements

858
00:36:56,579 --> 00:36:59,820
um and this uh this implementation is

859
00:36:59,820 --> 00:37:02,579
based on the originals key sign code so

860
00:37:02,579 --> 00:37:04,859
we we could really compare uh easily the

861
00:37:04,859 --> 00:37:07,859
two methods and uh we actually uh see

862
00:37:07,859 --> 00:37:11,160
that the new algorithm accounts for uh

863
00:37:11,160 --> 00:37:13,740
two-time uh speed up basically and then

864
00:37:13,740 --> 00:37:16,140
there is a bunch of additional

865
00:37:16,140 --> 00:37:18,480
um improvements that we included as well

866
00:37:18,480 --> 00:37:22,140
and so overall the verification is now

867
00:37:22,140 --> 00:37:23,359
like

868
00:37:23,359 --> 00:37:26,160
more than four times faster than before

869
00:37:26,160 --> 00:37:30,240
and signing is like roughly 3.5 times

870
00:37:30,240 --> 00:37:32,280
faster and the kitchen also is much

871
00:37:32,280 --> 00:37:33,859
faster

872
00:37:33,859 --> 00:37:38,520
and so uh concretely we obtained a

873
00:37:38,520 --> 00:37:41,280
signature scheme which is now signing in

874
00:37:41,280 --> 00:37:44,400
like roughly 400 milliseconds one before

875
00:37:44,400 --> 00:37:46,320
it was like around one second one second

876
00:37:46,320 --> 00:37:48,359
and a half maybe maybe and the

877
00:37:48,359 --> 00:37:51,960
verification uh is around six

878
00:37:51,960 --> 00:37:55,260
milliseconds well before it was like 20

879
00:37:55,260 --> 00:37:57,920
milliseconds or something like that

880
00:37:57,920 --> 00:37:59,520
so

881
00:37:59,520 --> 00:38:02,220
um yeah so I'm going to stop there and I

882
00:38:02,220 --> 00:38:04,260
hope with this talk I convinced you that

883
00:38:04,260 --> 00:38:07,740
uh ski sign is uh on the way of getting

884
00:38:07,740 --> 00:38:10,740
uh to nice time so of course it's

885
00:38:10,740 --> 00:38:13,560
several others of magnitudes uh slower

886
00:38:13,560 --> 00:38:15,420
than lattice based scheme and to be

887
00:38:15,420 --> 00:38:17,460
honest I don't think it will ever be as

888
00:38:17,460 --> 00:38:19,619
fast as falcon or D lithium but at least

889
00:38:19,619 --> 00:38:21,300
we are getting down two times which

890
00:38:21,300 --> 00:38:22,920
seems reasonable in particular for the

891
00:38:22,920 --> 00:38:24,960
verification a few milliseconds doesn't

892
00:38:24,960 --> 00:38:26,579
seem like something which is really

893
00:38:26,579 --> 00:38:28,260
prohibitive

894
00:38:28,260 --> 00:38:32,280
and uh yeah so this is a very uh active

895
00:38:32,280 --> 00:38:36,240
area of research and I hope uh I

896
00:38:36,240 --> 00:38:39,359
convinced you that it's very interesting

897
00:38:39,359 --> 00:38:41,400
and exciting to work still on isotony

898
00:38:41,400 --> 00:38:45,320
based photography these days thank you

899
00:38:49,619 --> 00:38:52,200
thank you Anthony any questions from the

900
00:38:52,200 --> 00:38:54,500
audience

901
00:39:00,540 --> 00:39:03,240
hello thank you for a very nice talk so

902
00:39:03,240 --> 00:39:05,119
I'm just curious this anamorphism

903
00:39:05,119 --> 00:39:07,560
problem can this be used to construct

904
00:39:07,560 --> 00:39:09,780
other Primitives like chems or is it

905
00:39:09,780 --> 00:39:12,060
just signatures

906
00:39:12,060 --> 00:39:12,859
um

907
00:39:12,859 --> 00:39:16,260
so uh yeah so usually in I search

908
00:39:16,260 --> 00:39:19,200
Gmail's cryptography uh we need to add

909
00:39:19,200 --> 00:39:22,560
more things uh to to build uh protocols

910
00:39:22,560 --> 00:39:25,020
uh this was why for instance sidh was

911
00:39:25,020 --> 00:39:26,940
relying on some kind of uh extended

912
00:39:26,940 --> 00:39:29,640
problem where you you have to add these

913
00:39:29,640 --> 00:39:31,619
additional information which was uh

914
00:39:31,619 --> 00:39:33,420
which were actually used to break the

915
00:39:33,420 --> 00:39:36,180
scheme so uh there is no scheme that is

916
00:39:36,180 --> 00:39:38,339
based only on this pure onomorphism ring

917
00:39:38,339 --> 00:39:42,320
problem unfortunately thank you

918
00:39:42,480 --> 00:39:44,700
okay I have one more question myself

919
00:39:44,700 --> 00:39:47,579
maybe how close to Optimal do you think

920
00:39:47,579 --> 00:39:49,680
this Prime is that you have found now

921
00:39:49,680 --> 00:39:51,300
how much more Improvement can we expect

922
00:39:51,300 --> 00:39:52,280
there

923
00:39:52,280 --> 00:39:56,220
uh that's a good question uh so we are

924
00:39:56,220 --> 00:40:00,839
actually looking for better primes uh

925
00:40:00,839 --> 00:40:04,020
uh honestly I have no idea

926
00:40:04,020 --> 00:40:05,880
I think we can go a bit better than that

927
00:40:05,880 --> 00:40:09,119
but I'm not sure it's going to be like

928
00:40:09,119 --> 00:40:12,660
incredibly much better than that

929
00:40:12,660 --> 00:40:15,119
like yeah if you look if you you can

930
00:40:15,119 --> 00:40:16,920
have some probabilities to try to

931
00:40:16,920 --> 00:40:18,540
estimate like the smoothness that you

932
00:40:18,540 --> 00:40:21,000
can expect and so on and it doesn't seem

933
00:40:21,000 --> 00:40:23,400
like there is uh at least it's not not

934
00:40:23,400 --> 00:40:25,260
very likely that there is a miracle

935
00:40:25,260 --> 00:40:28,079
Prime with like a biggest smoothness

936
00:40:28,079 --> 00:40:30,060
burn of like 100 or something like that

937
00:40:30,060 --> 00:40:32,040
that we could use but

938
00:40:32,040 --> 00:40:34,140
okay thank you let's thank the speaker

939
00:40:34,140 --> 00:40:34,800
again

940
00:40:34,800 --> 00:40:40,980
[Applause]

941
00:40:40,980 --> 00:40:43,339
so the final talk is about

942
00:40:43,339 --> 00:40:46,140
disorientation faults in Seaside and it

943
00:40:46,140 --> 00:40:48,320
will be given by crane renders

944
00:40:48,320 --> 00:40:51,060
and it has the second most authors of

945
00:40:51,060 --> 00:40:52,920
the papers of this conference the other

946
00:40:52,920 --> 00:40:55,380
authors are Gustavo banegas Julian

947
00:40:55,380 --> 00:40:56,839
Kramer

948
00:40:56,839 --> 00:41:00,420
Michael Mayer lorenzpanic Craner English

949
00:41:00,420 --> 00:41:03,060
himself of course Jonas sudakova and

950
00:41:03,060 --> 00:41:06,180
Monica trimoska

951
00:41:06,180 --> 00:41:08,579
thank you Thomas yeah my name is Karen

952
00:41:08,579 --> 00:41:10,260
reinders I'm not going to repeat the

953
00:41:10,260 --> 00:41:12,060
list of author names again because it

954
00:41:12,060 --> 00:41:14,579
was quite a long list and I just learned

955
00:41:14,579 --> 00:41:16,320
we're actually not the cool captive kids

956
00:41:16,320 --> 00:41:18,119
because we're still at the beach but

957
00:41:18,119 --> 00:41:19,200
that doesn't matter we can still do a

958
00:41:19,200 --> 00:41:20,460
lot of fun stuff namely you can shoot

959
00:41:20,460 --> 00:41:22,680
lasers at Seaside and that gives us this

960
00:41:22,680 --> 00:41:26,160
result on this orientation faults

961
00:41:26,160 --> 00:41:28,320
um I want to start actually by doing two

962
00:41:28,320 --> 00:41:30,359
things today first I'm going to explain

963
00:41:30,359 --> 00:41:32,820
on a very Elementary level what Seaside

964
00:41:32,820 --> 00:41:36,300
is again how it works and hopefully I

965
00:41:36,300 --> 00:41:37,980
don't have to use the word isogeny even

966
00:41:37,980 --> 00:41:40,740
to keep it late uh it could be keep it a

967
00:41:40,740 --> 00:41:43,440
bit light so late on the day and then

968
00:41:43,440 --> 00:41:45,240
I'll switch to how you can do a fault

969
00:41:45,240 --> 00:41:48,960
injection on this Seaside to get a key

970
00:41:48,960 --> 00:41:51,420
recovery

971
00:41:51,420 --> 00:41:54,420
um so Seaside is a post Quantum a

972
00:41:54,420 --> 00:41:56,099
non-interactive key exchange which is

973
00:41:56,099 --> 00:41:57,420
very useful because it's really the only

974
00:41:57,420 --> 00:42:01,020
efficient uh post Quantum Nike that we

975
00:42:01,020 --> 00:42:03,540
have and I'll do a short C side for

976
00:42:03,540 --> 00:42:05,520
beginners here uh if you're in the

977
00:42:05,520 --> 00:42:06,839
audience and you do know Seaside this

978
00:42:06,839 --> 00:42:09,240
system I want to take a nap

979
00:42:09,240 --> 00:42:10,800
how do we start a Seaside well we

980
00:42:10,800 --> 00:42:13,320
usually pick some field uh finite field

981
00:42:13,320 --> 00:42:16,079
FP and we want many primes to have L

982
00:42:16,079 --> 00:42:18,720
dividing P plus one and on the right

983
00:42:18,720 --> 00:42:20,820
I'll do a small toy example and for the

984
00:42:20,820 --> 00:42:23,640
toy example I picked the prime 419

985
00:42:23,640 --> 00:42:26,700
because 420 is a very nice number namely

986
00:42:26,700 --> 00:42:30,720
it's 4 times 3 times 5 times 7. and the

987
00:42:30,720 --> 00:42:32,040
four we need for technical reasons but

988
00:42:32,040 --> 00:42:33,540
the three five and seven divide are

989
00:42:33,540 --> 00:42:35,339
these primes Ally dividing P plus one

990
00:42:35,339 --> 00:42:37,440
that we're going to use

991
00:42:37,440 --> 00:42:39,119
and now if you pick such a finite field

992
00:42:39,119 --> 00:42:42,480
and you look at Super singular curves

993
00:42:42,480 --> 00:42:44,339
over this finite field that means that

994
00:42:44,339 --> 00:42:47,099
you pick a curve of the form y squared

995
00:42:47,099 --> 00:42:50,460
is X cubed plus ax squared plus x with

996
00:42:50,460 --> 00:42:52,440
this a in your finite field and you want

997
00:42:52,440 --> 00:42:55,440
to have exactly P plus one point on your

998
00:42:55,440 --> 00:42:57,119
curve then we call it a Super Singer

999
00:42:57,119 --> 00:42:59,520
curve so if you would do this for 419

1000
00:42:59,520 --> 00:43:02,640
you would get 27 of these special values

1001
00:43:02,640 --> 00:43:05,099
in your field that give you such a curve

1002
00:43:05,099 --> 00:43:08,400
and they are these values

1003
00:43:08,400 --> 00:43:10,260
and then what we want to do in Seaside

1004
00:43:10,260 --> 00:43:12,660
and there's some magic involved here is

1005
00:43:12,660 --> 00:43:16,260
that per L that divides P plus one so

1006
00:43:16,260 --> 00:43:18,660
such as three five and seven we will be

1007
00:43:18,660 --> 00:43:21,060
able to take steps in this graph that we

1008
00:43:21,060 --> 00:43:22,680
were going to get we can either take a

1009
00:43:22,680 --> 00:43:24,420
positive step such as plus three or

1010
00:43:24,420 --> 00:43:26,880
minus three uh so or negative step so

1011
00:43:26,880 --> 00:43:28,680
plus three minus three plus five minus

1012
00:43:28,680 --> 00:43:31,500
five plus seven minus seven

1013
00:43:31,500 --> 00:43:34,140
and then we can start taking walks in

1014
00:43:34,140 --> 00:43:36,180
this path in this graph so let's say we

1015
00:43:36,180 --> 00:43:38,099
picked plus three is the first step then

1016
00:43:38,099 --> 00:43:39,920
we'll go from zero to

1017
00:43:39,920 --> 00:43:43,560
158 and there we get them again to these

1018
00:43:43,560 --> 00:43:45,660
six options parallel we get two options

1019
00:43:45,660 --> 00:43:47,579
okay let's say for the Second Step we'll

1020
00:43:47,579 --> 00:43:50,640
take minus seven to get to 15. and then

1021
00:43:50,640 --> 00:43:53,099
for the first for the third option maybe

1022
00:43:53,099 --> 00:43:54,960
we'll take a plus five and we'll end up

1023
00:43:54,960 --> 00:43:55,819
at

1024
00:43:55,819 --> 00:43:59,460
174. and now Seaside is a commutative

1025
00:43:59,460 --> 00:44:01,619
has this commutative structure that is

1026
00:44:01,619 --> 00:44:03,119
very cool where if we would have taken

1027
00:44:03,119 --> 00:44:04,920
these steps in a different order so if

1028
00:44:04,920 --> 00:44:07,020
we would have done minus seven plus five

1029
00:44:07,020 --> 00:44:08,819
and plus three then we would have

1030
00:44:08,819 --> 00:44:10,980
reached different notes in between but

1031
00:44:10,980 --> 00:44:13,260
we end up at the same node on the end

1032
00:44:13,260 --> 00:44:16,319
this 174 and this is some kind of magic

1033
00:44:16,319 --> 00:44:18,119
that's that's working on the background

1034
00:44:18,119 --> 00:44:21,540
of these these graphs

1035
00:44:21,540 --> 00:44:24,119
now that means actually we also can

1036
00:44:24,119 --> 00:44:26,099
denote this path quite efficiently

1037
00:44:26,099 --> 00:44:29,579
namely we only need to remember uh of

1038
00:44:29,579 --> 00:44:31,859
which degree how many steps we did so

1039
00:44:31,859 --> 00:44:34,200
for example in this toy example we did

1040
00:44:34,200 --> 00:44:36,480
one positive step in degree three one

1041
00:44:36,480 --> 00:44:38,700
positive step in degree five and one

1042
00:44:38,700 --> 00:44:40,200
negative step in degree seven and then

1043
00:44:40,200 --> 00:44:41,880
you can denote it as plus one plus one

1044
00:44:41,880 --> 00:44:44,099
minus one and for Seaside essentially we

1045
00:44:44,099 --> 00:44:46,140
do this but then for a much larger Prime

1046
00:44:46,140 --> 00:44:49,260
where we have 74 allies and we take a

1047
00:44:49,260 --> 00:44:52,319
bit of a longer a bit more options per

1048
00:44:52,319 --> 00:44:53,760
degree so we can do maybe even five

1049
00:44:53,760 --> 00:44:56,000
steps of plus three and I don't know

1050
00:44:56,000 --> 00:44:59,640
minus three steps of degree five

1051
00:44:59,640 --> 00:45:01,440
and then we get quite easily also a key

1052
00:45:01,440 --> 00:45:03,119
exchange it's very easy to explain now

1053
00:45:03,119 --> 00:45:05,099
let's say we we decide on some starting

1054
00:45:05,099 --> 00:45:06,599
curve and zero is a very good starting

1055
00:45:06,599 --> 00:45:09,480
curve for this then Alice can just take

1056
00:45:09,480 --> 00:45:12,000
some sort of uh secret path there as we

1057
00:45:12,000 --> 00:45:14,220
just explained with these degrees and

1058
00:45:14,220 --> 00:45:17,839
she ends up at some uh curve for example

1059
00:45:17,839 --> 00:45:20,460
191 and she can make that into her

1060
00:45:20,460 --> 00:45:22,859
public key and Bob can do the same thing

1061
00:45:22,859 --> 00:45:25,500
and end up at 51. and now by this

1062
00:45:25,500 --> 00:45:27,060
commutativity that I just explained to

1063
00:45:27,060 --> 00:45:27,960
you

1064
00:45:27,960 --> 00:45:30,660
if Bob would apply his secret key to

1065
00:45:30,660 --> 00:45:32,819
Alice's public key he would end up at

1066
00:45:32,819 --> 00:45:36,119
368 and so also for Alice if she applies

1067
00:45:36,119 --> 00:45:38,520
her secret key to Bob's public key well

1068
00:45:38,520 --> 00:45:40,079
they get the shared secret and that's

1069
00:45:40,079 --> 00:45:42,119
all they really need in this example it

1070
00:45:42,119 --> 00:45:44,099
may look rather trivial but you can

1071
00:45:44,099 --> 00:45:46,740
imagine if you have a prime of 500 bits

1072
00:45:46,740 --> 00:45:48,780
that this graph is going to be insanely

1073
00:45:48,780 --> 00:45:51,359
big and then if you would only have this

1074
00:45:51,359 --> 00:45:53,579
information so to start the public keys

1075
00:45:53,579 --> 00:45:55,440
and the shared secret it should be

1076
00:45:55,440 --> 00:45:58,079
impossible for an attacker to uh to

1077
00:45:58,079 --> 00:46:00,720
retrieve the secrets how do we formalize

1078
00:46:00,720 --> 00:46:02,940
that a bit more well we can Define two

1079
00:46:02,940 --> 00:46:04,520
hard problems actually the first one is

1080
00:46:04,520 --> 00:46:07,140
factorization which is if you would just

1081
00:46:07,140 --> 00:46:09,119
have this start and the public key for

1082
00:46:09,119 --> 00:46:12,060
example 0 and 191 would you be able to

1083
00:46:12,060 --> 00:46:14,760
get this secret path of Alice and the

1084
00:46:14,760 --> 00:46:16,740
second one is the is the parallelization

1085
00:46:16,740 --> 00:46:18,839
which says let's say you have the start

1086
00:46:18,839 --> 00:46:20,700
and the two public Keys which will be

1087
00:46:20,700 --> 00:46:24,020
able to derive this shared Secret

1088
00:46:24,359 --> 00:46:26,280
now how do you actually do this how do

1089
00:46:26,280 --> 00:46:27,900
you do this walk in the graph because

1090
00:46:27,900 --> 00:46:28,980
that's really where we're going to

1091
00:46:28,980 --> 00:46:31,740
attack later on with this laser

1092
00:46:31,740 --> 00:46:34,380
so let's say we want to compute this

1093
00:46:34,380 --> 00:46:36,660
path from E to e Prime and it's going to

1094
00:46:36,660 --> 00:46:39,720
go through the graph in such a way that

1095
00:46:39,720 --> 00:46:41,220
it corresponds to the coefficients I

1096
00:46:41,220 --> 00:46:43,260
give you the Arab of so plus two means

1097
00:46:43,260 --> 00:46:44,819
that we're going to do two positive

1098
00:46:44,819 --> 00:46:46,800
steps in degree three and here this

1099
00:46:46,800 --> 00:46:48,420
minus two means we're going to take two

1100
00:46:48,420 --> 00:46:51,960
negative steps for the third Ally

1101
00:46:51,960 --> 00:46:53,760
and in general this works with three

1102
00:46:53,760 --> 00:46:56,220
steps namely we need to get a point on

1103
00:46:56,220 --> 00:46:58,380
the curve where we are at we check if it

1104
00:46:58,380 --> 00:47:00,599
is positive or negative and this means

1105
00:47:00,599 --> 00:47:01,859
that we would be able to do either the

1106
00:47:01,859 --> 00:47:03,420
positive steps with it or the negative

1107
00:47:03,420 --> 00:47:05,880
steps and then with each point we can

1108
00:47:05,880 --> 00:47:07,740
actually only do one most of steps of

1109
00:47:07,740 --> 00:47:09,839
those allies and we repeat this until

1110
00:47:09,839 --> 00:47:12,000
the path is performed so if we would

1111
00:47:12,000 --> 00:47:14,040
want to perform this path what we would

1112
00:47:14,040 --> 00:47:15,960
do is we would get a point on the first

1113
00:47:15,960 --> 00:47:16,920
curve

1114
00:47:16,920 --> 00:47:19,079
we would check ah it's positive okay

1115
00:47:19,079 --> 00:47:20,640
that means that we will be able to do

1116
00:47:20,640 --> 00:47:22,980
this first Ally the second Ally and the

1117
00:47:22,980 --> 00:47:25,200
fourth Ally and so we can do the first

1118
00:47:25,200 --> 00:47:27,540
li and we can sort of push this point

1119
00:47:27,540 --> 00:47:30,180
through this step to use it also on the

1120
00:47:30,180 --> 00:47:33,300
second curve for the second uh Li and

1121
00:47:33,300 --> 00:47:35,520
for the fourth and now at this point

1122
00:47:35,520 --> 00:47:37,680
we've performed all that we can do with

1123
00:47:37,680 --> 00:47:39,000
it right we only have negative

1124
00:47:39,000 --> 00:47:40,920
coefficients left for the other Ally and

1125
00:47:40,920 --> 00:47:42,420
this is a positive point

1126
00:47:42,420 --> 00:47:44,099
so what we need to do is we get a new

1127
00:47:44,099 --> 00:47:45,300
point

1128
00:47:45,300 --> 00:47:47,940
ah this one is negative let's do then L3

1129
00:47:47,940 --> 00:47:50,819
and L6 and L7

1130
00:47:50,819 --> 00:47:52,920
again here at the end the point is sort

1131
00:47:52,920 --> 00:47:55,140
of empty for our purposes we need to get

1132
00:47:55,140 --> 00:47:58,020
a new point and we do two steps L3 and

1133
00:47:58,020 --> 00:48:00,839
L7 and then at the end we need to sort

1134
00:48:00,839 --> 00:48:02,760
of keep on sampling until we get a

1135
00:48:02,760 --> 00:48:04,619
positive point which we can use to do

1136
00:48:04,619 --> 00:48:08,220
these last two steps L1 and L4 and then

1137
00:48:08,220 --> 00:48:10,500
we completed our path and if you look at

1138
00:48:10,500 --> 00:48:12,540
it slightly differently we use the first

1139
00:48:12,540 --> 00:48:14,940
positive point

1140
00:48:14,940 --> 00:48:16,260
um to perform

1141
00:48:16,260 --> 00:48:18,900
these allies where the coefficient eui

1142
00:48:18,900 --> 00:48:21,359
was larger than one we used the second

1143
00:48:21,359 --> 00:48:23,640
the first negative point to perform the

1144
00:48:23,640 --> 00:48:27,359
Allies where the EI was less than -1 the

1145
00:48:27,359 --> 00:48:29,160
second negative point less less than or

1146
00:48:29,160 --> 00:48:30,900
equal to -2 in the second positive point

1147
00:48:30,900 --> 00:48:35,220
for the Eis that were larger than two

1148
00:48:35,220 --> 00:48:36,900
then we get to fault injections and

1149
00:48:36,900 --> 00:48:38,460
fault injects what I mean here is that

1150
00:48:38,460 --> 00:48:41,280
we that in in real life you would do you

1151
00:48:41,280 --> 00:48:44,040
would use a laser to shoot at your uh I

1152
00:48:44,040 --> 00:48:45,839
don't know embedded device running this

1153
00:48:45,839 --> 00:48:48,060
computation and it would screw up some

1154
00:48:48,060 --> 00:48:50,040
of the computations and this can really

1155
00:48:50,040 --> 00:48:51,359
affect how such an algorithm is

1156
00:48:51,359 --> 00:48:53,339
performed now in our work we do this

1157
00:48:53,339 --> 00:48:55,619
theoretically and we just sort of

1158
00:48:55,619 --> 00:48:57,839
simulate how that would um

1159
00:48:57,839 --> 00:49:00,480
effect and what what what what kind of

1160
00:49:00,480 --> 00:49:02,220
results you can get from there but in

1161
00:49:02,220 --> 00:49:04,140
you can also do this in practice and

1162
00:49:04,140 --> 00:49:05,880
people in Labs actually shoot lasers at

1163
00:49:05,880 --> 00:49:08,339
these chips which is very cool

1164
00:49:08,339 --> 00:49:10,800
okay back to our toy example we were

1165
00:49:10,800 --> 00:49:12,960
Computing a path from say e to e Prime

1166
00:49:12,960 --> 00:49:15,420
let's say the path is now two positive

1167
00:49:15,420 --> 00:49:17,400
steps L1 and L2 and two negative steps

1168
00:49:17,400 --> 00:49:20,520
L3 and L4 in a normal computation now in

1169
00:49:20,520 --> 00:49:22,560
our paper we describe some ways that you

1170
00:49:22,560 --> 00:49:25,079
can inject here it is sampling on the

1171
00:49:25,079 --> 00:49:29,040
second on of the second Point

1172
00:49:29,040 --> 00:49:31,020
um where maybe if we actually sampled a

1173
00:49:31,020 --> 00:49:33,599
positive point uh even though we needed

1174
00:49:33,599 --> 00:49:35,400
negative one to do these steps we can

1175
00:49:35,400 --> 00:49:36,300
inject

1176
00:49:36,300 --> 00:49:38,880
the the calculation of this point in

1177
00:49:38,880 --> 00:49:40,260
such a way that the computer will think

1178
00:49:40,260 --> 00:49:42,300
it's actually a negative point

1179
00:49:42,300 --> 00:49:44,520
but in reality it's a positive point and

1180
00:49:44,520 --> 00:49:45,960
so when we are going to compute these

1181
00:49:45,960 --> 00:49:48,720
steps L3 and L4 we're going to do them

1182
00:49:48,720 --> 00:49:50,220
in the wrong direction and we would end

1183
00:49:50,220 --> 00:49:52,560
up at this other curve key instead of

1184
00:49:52,560 --> 00:49:53,760
that e Prime

1185
00:49:53,760 --> 00:49:56,280
and then we get back as uh

1186
00:49:56,280 --> 00:49:58,440
this under curve e if we would be able

1187
00:49:58,440 --> 00:50:01,260
to connect this again with e Prime well

1188
00:50:01,260 --> 00:50:03,480
we need we would need to do L4 and L3

1189
00:50:03,480 --> 00:50:06,000
backwards and then the proper L3 and L4

1190
00:50:06,000 --> 00:50:08,220
but this would actually reveal exactly

1191
00:50:08,220 --> 00:50:11,160
those Eis that had a coefficient smaller

1192
00:50:11,160 --> 00:50:13,380
than or equal to minus one and this is

1193
00:50:13,380 --> 00:50:15,900
going to be our idea here if we fault

1194
00:50:15,900 --> 00:50:17,460
the injection and we get this sample and

1195
00:50:17,460 --> 00:50:19,140
we are able to connect the sample back

1196
00:50:19,140 --> 00:50:21,839
to the E Prime that we actually were

1197
00:50:21,839 --> 00:50:24,180
supposed to compute then we get a lot of

1198
00:50:24,180 --> 00:50:27,618
information on the secret key

1199
00:50:27,839 --> 00:50:30,119
to show this more properly I need a bit

1200
00:50:30,119 --> 00:50:32,099
more curve so I added some on the right

1201
00:50:32,099 --> 00:50:34,619
here and we go back to the story example

1202
00:50:34,619 --> 00:50:36,180
that we discussed before right we have

1203
00:50:36,180 --> 00:50:38,880
four points that we needed to do this uh

1204
00:50:38,880 --> 00:50:40,680
coefficients over there

1205
00:50:40,680 --> 00:50:42,060
and then we're going to look at what

1206
00:50:42,060 --> 00:50:43,560
happens if we inject one of those points

1207
00:50:43,560 --> 00:50:45,980
so let's say we inject this Force point

1208
00:50:45,980 --> 00:50:48,599
we're assuming it's actually we're

1209
00:50:48,599 --> 00:50:50,160
actually going to get a negative point

1210
00:50:50,160 --> 00:50:51,960
and we're going to inject it and the

1211
00:50:51,960 --> 00:50:53,940
computer will think it's positive well

1212
00:50:53,940 --> 00:50:55,500
then the first three steps these first

1213
00:50:55,500 --> 00:50:57,599
three allies are going to be done in a

1214
00:50:57,599 --> 00:50:58,800
different direction and from that point

1215
00:50:58,800 --> 00:51:00,900
on the correction the computation is

1216
00:51:00,900 --> 00:51:02,760
going to be all right but I mean we're

1217
00:51:02,760 --> 00:51:04,380
already in a different point in the

1218
00:51:04,380 --> 00:51:06,240
graph and so the endpoint is going to be

1219
00:51:06,240 --> 00:51:09,119
some curve that we call E1 Plus

1220
00:51:09,119 --> 00:51:10,800
and now there's a tricky technicality

1221
00:51:10,800 --> 00:51:14,400
actually that if you sample a point and

1222
00:51:14,400 --> 00:51:16,260
we want to do all of these allies that

1223
00:51:16,260 --> 00:51:18,920
have for example a positive coefficient

1224
00:51:18,920 --> 00:51:22,500
by just by random randomness sometimes

1225
00:51:22,500 --> 00:51:24,720
this point will not be able to perform

1226
00:51:24,720 --> 00:51:26,940
this step actually and this happens in

1227
00:51:26,940 --> 00:51:29,640
one over Li cases so for example if we

1228
00:51:29,640 --> 00:51:31,680
want to do a degree 3 isotony and you

1229
00:51:31,680 --> 00:51:33,540
write a sample a random Point well in

1230
00:51:33,540 --> 00:51:34,920
one in three cases this point will

1231
00:51:34,920 --> 00:51:36,839
actually not be able to perform this for

1232
00:51:36,839 --> 00:51:38,220
you but for us this is actually quite

1233
00:51:38,220 --> 00:51:41,040
good because what we can do now is if we

1234
00:51:41,040 --> 00:51:43,200
inject a number of different rounds and

1235
00:51:43,200 --> 00:51:44,760
we just hope to exploit this probability

1236
00:51:44,760 --> 00:51:46,980
it means that we'll maybe slightly end

1237
00:51:46,980 --> 00:51:50,880
up next to our curve E1 Plus

1238
00:51:50,880 --> 00:51:52,859
and this gives us a sort of nice graph

1239
00:51:52,859 --> 00:51:54,540
structure over there on the right so

1240
00:51:54,540 --> 00:51:56,520
let's say we we had like a couple of

1241
00:51:56,520 --> 00:51:58,680
what is this I don't think a 20 or so

1242
00:51:58,680 --> 00:52:00,960
injections then the results that you'll

1243
00:52:00,960 --> 00:52:02,460
get back are actually probably going to

1244
00:52:02,460 --> 00:52:05,160
have uh E1 plus the most like six times

1245
00:52:05,160 --> 00:52:07,020
or so and then these curves that are

1246
00:52:07,020 --> 00:52:09,599
pretty close to A1 Plus that make a sort

1247
00:52:09,599 --> 00:52:11,460
of small graph and these really are

1248
00:52:11,460 --> 00:52:13,800
closed because the only uh step that

1249
00:52:13,800 --> 00:52:14,700
you're missing here is this

1250
00:52:14,700 --> 00:52:16,800
probabilistic element that it might skip

1251
00:52:16,800 --> 00:52:17,819
An Li

1252
00:52:17,819 --> 00:52:20,339
but the Ally that show up over there are

1253
00:52:20,339 --> 00:52:21,720
the ones that you were going to perform

1254
00:52:21,720 --> 00:52:23,760
with a positive point and so you can

1255
00:52:23,760 --> 00:52:25,559
actually deduce them that the Allies

1256
00:52:25,559 --> 00:52:27,540
that show up in this graph will have a

1257
00:52:27,540 --> 00:52:29,099
coefficients that's larger than or equal

1258
00:52:29,099 --> 00:52:30,839
to one which is already also nice

1259
00:52:30,839 --> 00:52:32,280
information on the secret key that we're

1260
00:52:32,280 --> 00:52:33,839
going to try to recover

1261
00:52:33,839 --> 00:52:36,000
okay now let's also start injecting this

1262
00:52:36,000 --> 00:52:37,980
second Point well I would go in a

1263
00:52:37,980 --> 00:52:39,180
completely different direction probably

1264
00:52:39,180 --> 00:52:41,160
and you would end up maybe at a curve

1265
00:52:41,160 --> 00:52:43,079
that we would call E1 minus because it's

1266
00:52:43,079 --> 00:52:45,420
actually the first negative point that

1267
00:52:45,420 --> 00:52:47,700
we're injecting uh we do this a couple

1268
00:52:47,700 --> 00:52:49,140
of times and we get a graph and also

1269
00:52:49,140 --> 00:52:50,880
there we would find these allies

1270
00:52:50,880 --> 00:52:53,040
appearing that give us information on

1271
00:52:53,040 --> 00:52:54,720
which coefficients are smaller than or

1272
00:52:54,720 --> 00:52:56,460
equal to negative one

1273
00:52:56,460 --> 00:52:58,260
let's say we've done this for all of

1274
00:52:58,260 --> 00:53:00,000
these points we've for each point we do

1275
00:53:00,000 --> 00:53:01,619
a computation and into the computation

1276
00:53:01,619 --> 00:53:04,140
we inject one fault into let's say the

1277
00:53:04,140 --> 00:53:06,900
third point that was the second negative

1278
00:53:06,900 --> 00:53:09,359
point we would end up over there and if

1279
00:53:09,359 --> 00:53:10,859
we would inject the second positive

1280
00:53:10,859 --> 00:53:12,660
point you end up over there

1281
00:53:12,660 --> 00:53:14,339
now what's pretty cool about this graph

1282
00:53:14,339 --> 00:53:15,420
structure

1283
00:53:15,420 --> 00:53:17,819
is that there you will also get even

1284
00:53:17,819 --> 00:53:20,520
more information on the coefficients

1285
00:53:20,520 --> 00:53:22,440
but what I told you before was that if

1286
00:53:22,440 --> 00:53:24,839
we would we're able to connect one of

1287
00:53:24,839 --> 00:53:27,420
these samples such as E1 plus with e

1288
00:53:27,420 --> 00:53:30,059
Prime then we would recover all the LI

1289
00:53:30,059 --> 00:53:32,040
with the coefficient that is larger than

1290
00:53:32,040 --> 00:53:34,319
or equal to one but if we do it for E2

1291
00:53:34,319 --> 00:53:36,119
Plus for example we would get all

1292
00:53:36,119 --> 00:53:38,099
coefficients larger than or equal to 2

1293
00:53:38,099 --> 00:53:40,440
which means that if we connect E1 plus

1294
00:53:40,440 --> 00:53:42,540
and E2 plus we're going to get exactly

1295
00:53:42,540 --> 00:53:44,819
those coefficients with the I equal to

1296
00:53:44,819 --> 00:53:46,680
one and this is a secret we're trying to

1297
00:53:46,680 --> 00:53:47,640
recover

1298
00:53:47,640 --> 00:53:50,040
so to recover the secret key all that we

1299
00:53:50,040 --> 00:53:52,200
need to do is to recover the path from

1300
00:53:52,200 --> 00:53:55,020
E1 plus to E2 plus from E2 plus 2 e

1301
00:53:55,020 --> 00:53:56,400
Prime will give us all of the

1302
00:53:56,400 --> 00:53:58,319
coefficients that are equal to two

1303
00:53:58,319 --> 00:54:00,720
from E Prime to E2 minus will give us

1304
00:54:00,720 --> 00:54:02,819
the coefficients that are equal to -2

1305
00:54:02,819 --> 00:54:05,700
and from E2 minus to E1 minus will give

1306
00:54:05,700 --> 00:54:09,000
us those of degree of coefficients with

1307
00:54:09,000 --> 00:54:11,040
-1 and that's all that we actually

1308
00:54:11,040 --> 00:54:13,680
really need to do here so we're going to

1309
00:54:13,680 --> 00:54:14,579
um

1310
00:54:14,579 --> 00:54:17,220
look at a real world example now Seaside

1311
00:54:17,220 --> 00:54:20,339
512 uses 74 of these allies and the

1312
00:54:20,339 --> 00:54:22,079
coefficients that you can pick will go

1313
00:54:22,079 --> 00:54:24,960
from -5 to 5 and then you can get this

1314
00:54:24,960 --> 00:54:26,819
sort of uh your secret key will be these

1315
00:54:26,819 --> 00:54:29,400
74 coefficients

1316
00:54:29,400 --> 00:54:31,859
so we need 10 points five positive

1317
00:54:31,859 --> 00:54:33,720
points and five negative points to

1318
00:54:33,720 --> 00:54:36,660
perform a computation as before and

1319
00:54:36,660 --> 00:54:37,920
these ten points are the ones that we're

1320
00:54:37,920 --> 00:54:39,780
going to inject so we're going to do I

1321
00:54:39,780 --> 00:54:41,460
think in this example we did 100 runs

1322
00:54:41,460 --> 00:54:45,420
and we inject it for example 10 times

1323
00:54:45,420 --> 00:54:46,980
the first point and ten times the second

1324
00:54:46,980 --> 00:54:50,220
Point uh and we got it in the end we got

1325
00:54:50,220 --> 00:54:52,200
this sort of graph structure and then in

1326
00:54:52,200 --> 00:54:53,280
this graph structure if you start

1327
00:54:53,280 --> 00:54:55,200
connecting everything then you can see

1328
00:54:55,200 --> 00:54:57,660
that at the left you will recover this

1329
00:54:57,660 --> 00:55:00,780
E1 plus and then a bit closer you get E2

1330
00:55:00,780 --> 00:55:03,660
plus E3 plus E4 plus and E5 plus and in

1331
00:55:03,660 --> 00:55:04,980
the middle there is the public key that

1332
00:55:04,980 --> 00:55:06,660
you were actually trying to compute this

1333
00:55:06,660 --> 00:55:07,680
e Prime

1334
00:55:07,680 --> 00:55:09,660
and if you continue on the right you get

1335
00:55:09,660 --> 00:55:13,200
E5 minus E4 minus E3 minus E2 minus and

1336
00:55:13,200 --> 00:55:15,420
E1 minus okay then how do you get

1337
00:55:15,420 --> 00:55:17,400
actually the secret key from this graph

1338
00:55:17,400 --> 00:55:19,319
well here it's not actually obvious so

1339
00:55:19,319 --> 00:55:22,020
we made a smaller example but the idea

1340
00:55:22,020 --> 00:55:24,180
would be that you would get E1 plus as

1341
00:55:24,180 --> 00:55:25,980
exactly those degrees that you start

1342
00:55:25,980 --> 00:55:28,559
seeing appearing between uh E1 plus and

1343
00:55:28,559 --> 00:55:30,660
E2 plus there you get e the Eis that are

1344
00:55:30,660 --> 00:55:32,880
equal to one and so on for all of the

1345
00:55:32,880 --> 00:55:33,960
other ones

1346
00:55:33,960 --> 00:55:35,579
so for example in the smaller more

1347
00:55:35,579 --> 00:55:38,400
readable Seaside 103 if you were using

1348
00:55:38,400 --> 00:55:40,980
21 allies and the Eis are coming from

1349
00:55:40,980 --> 00:55:43,079
minus three to three well we're going to

1350
00:55:43,079 --> 00:55:45,660
need to inject six points and you will

1351
00:55:45,660 --> 00:55:48,359
get to see these six sort of graphs E1

1352
00:55:48,359 --> 00:55:51,599
plus up to E1 minus on the end

1353
00:55:51,599 --> 00:55:53,940
and these degrees that you see appearing

1354
00:55:53,940 --> 00:55:55,800
there for example between E1 plus and E2

1355
00:55:55,800 --> 00:55:58,440
plus will be degree 99 and 2 and you can

1356
00:55:58,440 --> 00:56:01,020
actually see then in the secret key that

1357
00:56:01,020 --> 00:56:04,260
the second coefficient is plus one and

1358
00:56:04,260 --> 00:56:06,260
the ninth one is also plus one and the

1359
00:56:06,260 --> 00:56:09,720
1920 is also plus one and then the minus

1360
00:56:09,720 --> 00:56:11,579
three at the 20th position for example

1361
00:56:11,579 --> 00:56:13,800
well you see is also appearing between e

1362
00:56:13,800 --> 00:56:16,740
Prime and E3 minus and that's how you

1363
00:56:16,740 --> 00:56:19,020
recover this secret key

1364
00:56:19,020 --> 00:56:21,480
now in summary this means that fault

1365
00:56:21,480 --> 00:56:23,339
injections will allow us to break C side

1366
00:56:23,339 --> 00:56:26,040
512 and we really only need 100 samples

1367
00:56:26,040 --> 00:56:28,980
or so for there and here a sample is one

1368
00:56:28,980 --> 00:56:30,300
of such a computation of this group

1369
00:56:30,300 --> 00:56:32,160
action with a single fault injection

1370
00:56:32,160 --> 00:56:34,920
into an into a certain point

1371
00:56:34,920 --> 00:56:37,260
now you might wonder about c c tight 512

1372
00:56:37,260 --> 00:56:39,540
is it a much faster primitive that's a

1373
00:56:39,540 --> 00:56:41,460
slight variant of Seaside and this

1374
00:56:41,460 --> 00:56:43,380
similar strategy immediately applies as

1375
00:56:43,380 --> 00:56:45,660
well to C type 512 and you should check

1376
00:56:45,660 --> 00:56:47,579
the details in the paper for if you want

1377
00:56:47,579 --> 00:56:49,079
to find out how that works but you only

1378
00:56:49,079 --> 00:56:51,660
need 40 samples which is even better and

1379
00:56:51,660 --> 00:56:52,980
then there are some more advanced tricks

1380
00:56:52,980 --> 00:56:54,359
history where you're using the twist

1381
00:56:54,359 --> 00:56:56,520
which is a very nice trick by Anna that

1382
00:56:56,520 --> 00:56:58,619
was great where you can actually move

1383
00:56:58,619 --> 00:57:00,660
most of this computational effort that

1384
00:57:00,660 --> 00:57:02,220
you are doing in this end to connect

1385
00:57:02,220 --> 00:57:04,140
these sort of sub graphs to each other

1386
00:57:04,140 --> 00:57:06,020
you can move that all to a

1387
00:57:06,020 --> 00:57:07,980
pre-computation that is one off and then

1388
00:57:07,980 --> 00:57:09,720
you really are getting very fast at

1389
00:57:09,720 --> 00:57:13,319
breaking C type 512. now luckily we can

1390
00:57:13,319 --> 00:57:14,819
also provide a countermeasure and we've

1391
00:57:14,819 --> 00:57:16,260
called it allegrator because it's a

1392
00:57:16,260 --> 00:57:18,420
variant on the Alligator Point sampling

1393
00:57:18,420 --> 00:57:20,400
so you see here that we're injecting

1394
00:57:20,400 --> 00:57:21,839
this point sampling and so we need to

1395
00:57:21,839 --> 00:57:24,180
sort of make this more secure

1396
00:57:24,180 --> 00:57:24,900
um

1397
00:57:24,900 --> 00:57:29,220
and we do this by by allegrator it takes

1398
00:57:29,220 --> 00:57:31,200
like five percent extra cost for C type

1399
00:57:31,200 --> 00:57:33,599
512 but it completely makes sure that

1400
00:57:33,599 --> 00:57:35,339
the attack is unavoidable because you go

1401
00:57:35,339 --> 00:57:37,920
from a probability of one and two to get

1402
00:57:37,920 --> 00:57:39,900
a successful fault injection to one over

1403
00:57:39,900 --> 00:57:43,800
p and p is a 512-bit prime

1404
00:57:43,800 --> 00:57:45,839
last but not least there is also uh

1405
00:57:45,839 --> 00:57:47,520
actually would make sense to have a

1406
00:57:47,520 --> 00:57:49,380
hashed version right in reality maybe

1407
00:57:49,380 --> 00:57:51,780
the the device will not give you back

1408
00:57:51,780 --> 00:57:53,280
the coefficient that you were looking

1409
00:57:53,280 --> 00:57:54,839
that you were hoping to get this public

1410
00:57:54,839 --> 00:57:56,880
key but actually a hashed version of

1411
00:57:56,880 --> 00:57:58,680
this and then you are able to do less of

1412
00:57:58,680 --> 00:58:00,960
these tricks in the graph but we also

1413
00:58:00,960 --> 00:58:03,059
Analyze This in our paper and we think

1414
00:58:03,059 --> 00:58:05,099
that for C type five Seaside 512 and C

1415
00:58:05,099 --> 00:58:06,839
type 512 it should still be very

1416
00:58:06,839 --> 00:58:08,339
feasible to do this to run this attack

1417
00:58:08,339 --> 00:58:10,200
it does require more samples and more

1418
00:58:10,200 --> 00:58:12,839
computation power but it is feasible and

1419
00:58:12,839 --> 00:58:13,859
that's all that I wanted to tell you

1420
00:58:13,859 --> 00:58:15,839
today so if you have any questions I'm

1421
00:58:15,839 --> 00:58:17,150
very happy to take them

1422
00:58:17,150 --> 00:58:24,119
[Applause]

1423
00:58:24,119 --> 00:58:27,559
so are there any questions

1424
00:58:28,559 --> 00:58:30,599
okay my first question that you actually

1425
00:58:30,599 --> 00:58:32,880
get oh I'll quickly ask a question

1426
00:58:32,880 --> 00:58:34,680
anyway did you get to shoot with lasers

1427
00:58:34,680 --> 00:58:37,920
yourself sorry did you get to shoot with

1428
00:58:37,920 --> 00:58:41,520
lasers yourself no we didn't we did get

1429
00:58:41,520 --> 00:58:43,980
to simulate the lasers okay

1430
00:58:43,980 --> 00:58:45,059
done

1431
00:58:45,059 --> 00:58:46,319
thank you for the nice presentation

1432
00:58:46,319 --> 00:58:49,200
crane uh can you comment a bit about the

1433
00:58:49,200 --> 00:58:51,240
different versions of Seaside how they

1434
00:58:51,240 --> 00:58:54,119
are more resistant or not to this attack

1435
00:58:54,119 --> 00:58:57,780
yeah so I think what you um

1436
00:58:57,780 --> 00:58:59,760
so as you see here Seaside 512 would

1437
00:58:59,760 --> 00:59:01,980
need about 100 samples and then C type

1438
00:59:01,980 --> 00:59:04,559
512 only 40 but then you also have a

1439
00:59:04,559 --> 00:59:06,660
variant such as skill and in skill

1440
00:59:06,660 --> 00:59:09,059
because of very technical reasons you

1441
00:59:09,059 --> 00:59:10,799
would you would need many more samples

1442
00:59:10,799 --> 00:59:12,000
actually because you also go through

1443
00:59:12,000 --> 00:59:14,099
much larger primes but I think in

1444
00:59:14,099 --> 00:59:16,200
reality if you were going to do

1445
00:59:16,200 --> 00:59:19,079
uh Seaside in very large primes I would

1446
00:59:19,079 --> 00:59:21,420
I would recommend to use C tight and

1447
00:59:21,420 --> 00:59:22,920
with C type you will always get this

1448
00:59:22,920 --> 00:59:24,960
batching approach and this bracketing

1449
00:59:24,960 --> 00:59:26,280
approach is really what helps us in this

1450
00:59:26,280 --> 00:59:27,480
attack here which really helps us to

1451
00:59:27,480 --> 00:59:29,880
reduce it to 40 samples and I think even

1452
00:59:29,880 --> 00:59:31,940
in Sea type for very large parameters

1453
00:59:31,940 --> 00:59:34,680
the batching will actually cause you to

1454
00:59:34,680 --> 00:59:37,280
be a bit vulnerable to do as a textile

1455
00:59:37,280 --> 00:59:40,020
the the best way to counter it would

1456
00:59:40,020 --> 00:59:43,280
just be to use allegrator

1457
00:59:44,040 --> 00:59:46,260
but

1458
00:59:46,260 --> 00:59:47,700
um I was wondering

1459
00:59:47,700 --> 00:59:49,260
um you use the same starting graph I

1460
00:59:49,260 --> 00:59:49,920
guess

1461
00:59:49,920 --> 00:59:52,799
sorry do you use the same starting curve

1462
00:59:52,799 --> 00:59:54,540
every time

1463
00:59:54,540 --> 00:59:57,660
yeah you you want to you don't have to

1464
00:59:57,660 --> 00:59:59,819
all right that was my question because I

1465
00:59:59,819 --> 01:00:02,099
guess it's unlikely that you perform the

1466
01:00:02,099 --> 01:00:05,040
same key exchange 100 times but maybe

1467
01:00:05,040 --> 01:00:06,839
it's more likely that you perform the

1468
01:00:06,839 --> 01:00:08,220
key exchange with different starting

1469
01:00:08,220 --> 01:00:09,420
curves

1470
01:00:09,420 --> 01:00:12,240
with like say Bob and Charlie so how

1471
01:00:12,240 --> 01:00:15,020
does this work

1472
01:00:15,119 --> 01:00:16,079
um

1473
01:00:16,079 --> 01:00:17,880
well that yeah it depends a lot on the

1474
01:00:17,880 --> 01:00:19,319
situation in which you are I think for

1475
01:00:19,319 --> 01:00:21,140
for these examples we we

1476
01:00:21,140 --> 01:00:22,920
assume that you have to sort of control

1477
01:00:22,920 --> 01:00:24,420
over which starting curve you have or

1478
01:00:24,420 --> 01:00:26,099
over which group you have control over

1479
01:00:26,099 --> 01:00:28,559
which uh curve that Bob is going to do

1480
01:00:28,559 --> 01:00:31,859
the computation and even then uh if you

1481
01:00:31,859 --> 01:00:33,480
well if you have this and you can use

1482
01:00:33,480 --> 01:00:34,920
different curves by sort of masking

1483
01:00:34,920 --> 01:00:36,480
because you would know the mask and you

1484
01:00:36,480 --> 01:00:37,740
can

1485
01:00:37,740 --> 01:00:39,359
undo the mask at the end when you get

1486
01:00:39,359 --> 01:00:40,319
the result

1487
01:00:40,319 --> 01:00:43,279
all right thank you

1488
01:00:44,040 --> 01:00:46,260
okay if there's no other questions let's

1489
01:00:46,260 --> 01:00:48,070
thank Crane and all the speakers again

1490
01:00:48,070 --> 01:00:54,420
[Applause]

1491
01:00:54,420 --> 01:00:56,640
so now there's a track switching break

1492
01:00:56,640 --> 01:00:58,740
so in nine minutes this room will be

1493
01:00:58,740 --> 01:01:00,240
filled with other people as well I'm

1494
01:01:00,240 --> 01:01:01,859
guessing so you can all stay seated or

1495
01:01:01,859 --> 01:01:03,299
go have a walk if you want and after

1496
01:01:03,299 --> 01:01:07,819
that there's the iscr membership meeting

