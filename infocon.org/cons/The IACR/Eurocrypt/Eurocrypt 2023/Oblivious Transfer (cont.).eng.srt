1
00:00:01,020 --> 00:00:02,639
yeah

2
00:00:02,639 --> 00:00:06,000
um so the next talk is endemic or babies

3
00:00:06,000 --> 00:00:08,820
transfer we are random oracles Revisited

4
00:00:08,820 --> 00:00:13,679
it's by uh July Joe uh bing Chang Jiang

5
00:00:13,679 --> 00:00:14,540
um

6
00:00:14,540 --> 00:00:16,760
and

7
00:00:16,760 --> 00:00:19,619
jelly Joe is going to give the talk

8
00:00:19,619 --> 00:00:22,560
okay thank you hi everyone this is

9
00:00:22,560 --> 00:00:25,080
Juliet so a PhD student from University

10
00:00:25,080 --> 00:00:27,720
and the topic I want to share today is

11
00:00:27,720 --> 00:00:29,640
the damage oblivious transfer via

12
00:00:29,640 --> 00:00:32,700
Renault Revisited it is a general work

13
00:00:32,700 --> 00:00:35,100
with being shenzhang Hong Zhou and the

14
00:00:35,100 --> 00:00:36,920
Korean

15
00:00:36,920 --> 00:00:39,420
oblivious transfer is a fundamental

16
00:00:39,420 --> 00:00:41,820
cryptographic primitive and it is widely

17
00:00:41,820 --> 00:00:44,760
used in the MPC areas such as the famous

18
00:00:44,760 --> 00:00:46,800
yacht Capital circuit and the gmw

19
00:00:46,800 --> 00:00:49,739
protocol in the standard one of the two

20
00:00:49,739 --> 00:00:52,320
OT that is the sender and a receiver the

21
00:00:52,320 --> 00:00:56,340
sender will input two messages m0 and M1

22
00:00:56,340 --> 00:00:58,680
and the receiver will input his choice

23
00:00:58,680 --> 00:01:01,620
speed and at the end of the protocol the

24
00:01:01,620 --> 00:01:04,440
receiver will obtain MB without knowing

25
00:01:04,440 --> 00:01:07,020
the other message and the sender cannot

26
00:01:07,020 --> 00:01:09,600
tell which message was received by the

27
00:01:09,600 --> 00:01:11,220
receiver

28
00:01:11,220 --> 00:01:14,939
recently messy and ringdo proposed a new

29
00:01:14,939 --> 00:01:17,460
OT notion called the academic OT short

30
00:01:17,460 --> 00:01:21,360
for eot in eot the sender has no inputs

31
00:01:21,360 --> 00:01:23,640
and at the end of the protocol the

32
00:01:23,640 --> 00:01:26,400
center will receive two messages m0 and

33
00:01:26,400 --> 00:01:29,340
M1 in the case where both send and

34
00:01:29,340 --> 00:01:31,799
receiver are honest this ultimate

35
00:01:31,799 --> 00:01:33,780
messages should be uniformly random

36
00:01:33,780 --> 00:01:36,299
however the situation is different while

37
00:01:36,299 --> 00:01:38,820
in dominations case in the case where

38
00:01:38,820 --> 00:01:41,400
the center gets corrupted at first the

39
00:01:41,400 --> 00:01:44,479
malicious Center can specify its output

40
00:01:44,479 --> 00:01:47,159
similarly when the receiver gets

41
00:01:47,159 --> 00:01:49,140
corrupted the malicious receiver can

42
00:01:49,140 --> 00:01:51,479
also specify how to put them so in a

43
00:01:51,479 --> 00:01:53,880
word eot can be viewed as a weaker

44
00:01:53,880 --> 00:01:56,340
version of OT where the adversary can

45
00:01:56,340 --> 00:01:59,579
fix its output actually and some of you

46
00:01:59,579 --> 00:02:02,040
may Wonder Why YouTube is so interesting

47
00:02:02,040 --> 00:02:04,439
for us to study and here I give you a

48
00:02:04,439 --> 00:02:07,020
concrete iot example which was proposed

49
00:02:07,020 --> 00:02:10,500
in mr19 as you can see in in the future

50
00:02:10,500 --> 00:02:13,440
above the messages between the there is

51
00:02:13,440 --> 00:02:15,959
no dependency between the messages the

52
00:02:15,959 --> 00:02:18,180
sender's message and the receiver's

53
00:02:18,180 --> 00:02:19,760
messages

54
00:02:19,760 --> 00:02:22,500
therefore these messages can be sent

55
00:02:22,500 --> 00:02:24,959
simultaneously together in other words

56
00:02:24,959 --> 00:02:27,480
the word in which message is sent first

57
00:02:27,480 --> 00:02:30,420
is not important as you can see in the

58
00:02:30,420 --> 00:02:32,819
future above well in this protocol We'll

59
00:02:32,819 --> 00:02:34,680
add the sentence and the message first

60
00:02:34,680 --> 00:02:37,980
actually this particle would be also be

61
00:02:37,980 --> 00:02:40,440
secure if we let the receiver synergize

62
00:02:40,440 --> 00:02:43,980
messages first so that's why only one

63
00:02:43,980 --> 00:02:46,860
round communication is required another

64
00:02:46,860 --> 00:02:49,920
opinion advantage of eot is that it can

65
00:02:49,920 --> 00:02:51,840
be made truly practical in bonds

66
00:02:51,840 --> 00:02:54,720
computation and communication aspects so

67
00:02:54,720 --> 00:02:57,720
that's why we study eot and in this work

68
00:02:57,720 --> 00:03:00,599
we mainly focus on eot Via Global random

69
00:03:00,599 --> 00:03:03,060
oracles so I will first introduce you

70
00:03:03,060 --> 00:03:05,640
some background knowledge about local

71
00:03:05,640 --> 00:03:08,280
and Oracle in the UC framework and the

72
00:03:08,280 --> 00:03:11,159
global rhinorical in the guc framework

73
00:03:11,159 --> 00:03:13,440
next I will show you our new UT

74
00:03:13,440 --> 00:03:16,140
constructions and in this talk I will

75
00:03:16,140 --> 00:03:18,420
only give you one constructions and

76
00:03:18,420 --> 00:03:21,180
others can be found in our paper

77
00:03:21,180 --> 00:03:23,819
and finally I will introduce you some

78
00:03:23,819 --> 00:03:26,640
relations to export in this work okay

79
00:03:26,640 --> 00:03:28,800
now let us first enter part one

80
00:03:28,800 --> 00:03:30,060
background knowledge about the

81
00:03:30,060 --> 00:03:31,620
rhinorical

82
00:03:31,620 --> 00:03:34,739
Renault is a popular idealized setup

83
00:03:34,739 --> 00:03:37,019
which enables truly practical UT

84
00:03:37,019 --> 00:03:39,480
particles and in the UC framework

85
00:03:39,480 --> 00:03:41,879
proposed by rank energy the render

86
00:03:41,879 --> 00:03:43,739
Oracle is only local to the protocol

87
00:03:43,739 --> 00:03:46,080
instance and therefore the random Oracle

88
00:03:46,080 --> 00:03:48,780
can be simulated by the simulator and

89
00:03:48,780 --> 00:03:51,360
this grants the simulator two advantages

90
00:03:51,360 --> 00:03:54,500
namely observability and programmability

91
00:03:54,500 --> 00:03:56,760
observability means that the simulator

92
00:03:56,760 --> 00:03:59,760
can see the queries by anyone and the

93
00:03:59,760 --> 00:04:01,799
programmability means that the simulator

94
00:04:01,799 --> 00:04:04,080
can determine determine the answers of

95
00:04:04,080 --> 00:04:06,420
the query sent by anywhere so in a word

96
00:04:06,420 --> 00:04:09,659
Rhino Oracle serves as a local setup in

97
00:04:09,659 --> 00:04:12,720
the use of America and the situation is

98
00:04:12,720 --> 00:04:14,819
different when we turn to generalize the

99
00:04:14,819 --> 00:04:17,760
usage should 4G UC framework as you can

100
00:04:17,760 --> 00:04:21,298
see in the guc framework the render

101
00:04:21,298 --> 00:04:24,120
Oracle now external to the simulator and

102
00:04:24,120 --> 00:04:26,280
the rhetorical serves as the shared

103
00:04:26,280 --> 00:04:28,979
setup that can cross multiple protocol

104
00:04:28,979 --> 00:04:31,199
sessions and can be assessed by the

105
00:04:31,199 --> 00:04:33,740
environment enter directly and therefore

106
00:04:33,740 --> 00:04:36,960
render Oracle becomes Global and cannot

107
00:04:36,960 --> 00:04:38,639
be similarly be simulated by the

108
00:04:38,639 --> 00:04:41,160
simulator anymore and in this work we

109
00:04:41,160 --> 00:04:43,320
will mainly focus on the global an

110
00:04:43,320 --> 00:04:45,780
oracle since it is a more realistic

111
00:04:45,780 --> 00:04:47,940
setup assumption compared to local

112
00:04:47,940 --> 00:04:50,940
random Oracle and more presently we will

113
00:04:50,940 --> 00:04:53,280
focus on two Global random Oracles in

114
00:04:53,280 --> 00:04:55,620
the literature namely the global

115
00:04:55,620 --> 00:04:59,040
restricted observable IO should for tro

116
00:04:59,040 --> 00:05:01,560
which allows the simulator to see the

117
00:05:01,560 --> 00:05:04,080
diversary currency and the global

118
00:05:04,080 --> 00:05:07,139
restricted programmable IO should force

119
00:05:07,139 --> 00:05:09,540
the RPL which allows the simulator to

120
00:05:09,540 --> 00:05:11,520
program the uncovered points without

121
00:05:11,520 --> 00:05:13,800
being detected

122
00:05:13,800 --> 00:05:16,380
and it is known that when simultaneous

123
00:05:16,380 --> 00:05:18,720
communication model is loaded it is

124
00:05:18,720 --> 00:05:20,820
possible to give one round the eot

125
00:05:20,820 --> 00:05:23,820
constructions and here release at least

126
00:05:23,820 --> 00:05:26,340
three sets of three seats of the art iot

127
00:05:26,340 --> 00:05:28,800
particles in the literature and they are

128
00:05:28,800 --> 00:05:30,660
all built on the local setups

129
00:05:30,660 --> 00:05:33,300
particularly I want to point out the

130
00:05:33,300 --> 00:05:36,120
protocol purpose in mr19 was established

131
00:05:36,120 --> 00:05:37,820
on the non-standard assumptions

132
00:05:37,820 --> 00:05:41,280
therefore it is natural for us to ask is

133
00:05:41,280 --> 00:05:43,820
it possible to give one round the TUC

134
00:05:43,820 --> 00:05:45,600
constructions on the standard

135
00:05:45,600 --> 00:05:47,580
assumptions in the global and Oracle

136
00:05:47,580 --> 00:05:50,639
models and we answer these questions by

137
00:05:50,639 --> 00:05:53,160
showing that one around the construction

138
00:05:53,160 --> 00:05:56,880
is possible in the CR model and to run

139
00:05:56,880 --> 00:05:58,860
the eot construction is possible in the

140
00:05:58,860 --> 00:06:02,340
crpr model and in our paper we showed

141
00:06:02,340 --> 00:06:06,000
that one runs uses secure iot particles

142
00:06:06,000 --> 00:06:08,160
impossible in the CRP house model

143
00:06:08,160 --> 00:06:10,500
therefore both of our constructions are

144
00:06:10,500 --> 00:06:12,000
run overtimo

145
00:06:12,000 --> 00:06:14,460
besides constructing eot in the global

146
00:06:14,460 --> 00:06:17,100
an oracles we are also interested in the

147
00:06:17,100 --> 00:06:19,380
complexity including the power and the

148
00:06:19,380 --> 00:06:21,900
limits of the iot itself namely we

149
00:06:21,900 --> 00:06:23,460
wonder what's the relation between the

150
00:06:23,460 --> 00:06:25,620
eot and other cryptographic Primitives

151
00:06:25,620 --> 00:06:28,199
and we are also interested in the global

152
00:06:28,199 --> 00:06:30,600
analytical we're used in this work and

153
00:06:30,600 --> 00:06:32,100
we wonder what's the relation between

154
00:06:32,100 --> 00:06:34,740
these two Global and oracles and in this

155
00:06:34,740 --> 00:06:37,020
talk I will first answer our first

156
00:06:37,020 --> 00:06:39,180
research questions in part two and

157
00:06:39,180 --> 00:06:40,560
answer the rest of the research

158
00:06:40,560 --> 00:06:42,660
questions in part three

159
00:06:42,660 --> 00:06:45,060
now let us enter part two new

160
00:06:45,060 --> 00:06:48,000
constructions and in this talk in this

161
00:06:48,000 --> 00:06:50,699
part I will give you our one round eot

162
00:06:50,699 --> 00:06:53,699
concessions in the Dr model and we start

163
00:06:53,699 --> 00:06:56,100
with the two run Standalone UT protocol

164
00:06:56,100 --> 00:06:58,199
in the local hour model which was

165
00:06:58,199 --> 00:07:01,380
proposed in co15 and in such two round

166
00:07:01,380 --> 00:07:04,080
protocol the center will first compute a

167
00:07:04,080 --> 00:07:07,020
random group element H and send this

168
00:07:07,020 --> 00:07:09,360
group element H to the receiver after

169
00:07:09,360 --> 00:07:11,880
receiving H the receiver will use it

170
00:07:11,880 --> 00:07:14,819
along with the common group element G as

171
00:07:14,819 --> 00:07:17,580
the commitment key to compute a Paterson

172
00:07:17,580 --> 00:07:20,039
commitment instance to its Choice speed

173
00:07:20,039 --> 00:07:22,020
and sends the Paterson commission back

174
00:07:22,020 --> 00:07:24,780
to the sender finally both the sender

175
00:07:24,780 --> 00:07:27,060
and the receiver will perform some local

176
00:07:27,060 --> 00:07:29,340
computation to obtain their locality

177
00:07:29,340 --> 00:07:31,139
messages

178
00:07:31,139 --> 00:07:34,080
and our girls are to reduce the round

179
00:07:34,080 --> 00:07:36,539
complexity of this particle to one round

180
00:07:36,539 --> 00:07:40,319
and the first uses secure in the trr

181
00:07:40,319 --> 00:07:41,639
model

182
00:07:41,639 --> 00:07:45,360
so to achieve our first goal we let the

183
00:07:45,360 --> 00:07:47,400
receive the locally generated

184
00:07:47,400 --> 00:07:50,280
documentation Key by invoking the random

185
00:07:50,280 --> 00:07:52,560
Oracle on the randomly selected string

186
00:07:52,560 --> 00:07:55,979
and in this way the receiver can locally

187
00:07:55,979 --> 00:07:59,300
compute the partisan Community

188
00:07:59,300 --> 00:08:01,979
without relying on the sender's messages

189
00:08:01,979 --> 00:08:04,440
and in this way one run the

190
00:08:04,440 --> 00:08:06,720
communication can be achieved and this

191
00:08:06,720 --> 00:08:09,780
technique was inspired by csw20

192
00:08:09,780 --> 00:08:12,680
and a nest how to achieve guc security

193
00:08:12,680 --> 00:08:15,599
and in order to achieve this goal we

194
00:08:15,599 --> 00:08:19,800
observe that it requires both Center and

195
00:08:19,800 --> 00:08:22,139
receive additionally generating the

196
00:08:22,139 --> 00:08:23,960
straight line stretchable

197
00:08:23,960 --> 00:08:26,520
non-interactive witness hiding arguments

198
00:08:26,520 --> 00:08:29,280
and this underlying arguments provides

199
00:08:29,280 --> 00:08:31,979
extractability for both sender and the

200
00:08:31,979 --> 00:08:35,339
receiver and therefore provides the QC

201
00:08:35,339 --> 00:08:38,039
security and these underlying arguments

202
00:08:38,039 --> 00:08:41,279
can be obtained from Sigma protocols and

203
00:08:41,279 --> 00:08:43,979
that's how we construct our uot protocol

204
00:08:43,979 --> 00:08:46,920
and next I will provide you an informal

205
00:08:46,920 --> 00:08:49,260
security analyst about why this

206
00:08:49,260 --> 00:08:52,080
construction is secure so let us first

207
00:08:52,080 --> 00:08:54,480
consider the case where the sender gets

208
00:08:54,480 --> 00:08:57,300
corrupted first and in this case the

209
00:08:57,300 --> 00:08:59,220
simulator has two simulate the honest

210
00:08:59,220 --> 00:09:01,580
receiver and has to exchange the

211
00:09:01,580 --> 00:09:05,040
randomness from sender's messages and we

212
00:09:05,040 --> 00:09:07,260
observe that this can be done by making

213
00:09:07,260 --> 00:09:09,060
use of the straight line accessibility

214
00:09:09,060 --> 00:09:11,940
of the aligning arguments and the

215
00:09:11,940 --> 00:09:13,980
straight line accessibility relies on

216
00:09:13,980 --> 00:09:16,980
the restricted obserability of the Xiao

217
00:09:16,980 --> 00:09:19,740
model and so in a world the simulator

218
00:09:19,740 --> 00:09:22,279
can

219
00:09:23,540 --> 00:09:27,060
since it is allowed to see the malicious

220
00:09:27,060 --> 00:09:30,060
senders queries to the Rhino Oracle

221
00:09:30,060 --> 00:09:32,820
and when we change the case where the

222
00:09:32,820 --> 00:09:36,060
receiver gets crafted uh decision is the

223
00:09:36,060 --> 00:09:38,459
situation is quite similar and in this

224
00:09:38,459 --> 00:09:41,339
case the simulator has to simulate the

225
00:09:41,339 --> 00:09:44,100
honest standard and has to exchange the

226
00:09:44,100 --> 00:09:45,899
receiver's Choice speed from the

227
00:09:45,899 --> 00:09:49,620
receiver's messages and the security

228
00:09:49,620 --> 00:09:52,320
analysis was quite similar to the

229
00:09:52,320 --> 00:09:54,300
previous case and that's how we

230
00:09:54,300 --> 00:09:57,240
accomplish the security analysis of this

231
00:09:57,240 --> 00:09:59,399
Earth's protocol

232
00:09:59,399 --> 00:10:02,880
and finally we're arriving at the pass

233
00:10:02,880 --> 00:10:05,040
through a new series recall that

234
00:10:05,040 --> 00:10:07,620
previously we won't ask what's the

235
00:10:07,620 --> 00:10:09,720
relation between the eot and other

236
00:10:09,720 --> 00:10:13,140
cryptographic Primitives and actually in

237
00:10:13,140 --> 00:10:15,779
mr19 measly and the window have already

238
00:10:15,779 --> 00:10:18,480
initialized the investigation of these

239
00:10:18,480 --> 00:10:20,820
research questions more personally it's

240
00:10:20,820 --> 00:10:23,160
a proposed a new OT notion called

241
00:10:23,160 --> 00:10:26,880
uniform multitude for uot uot looks very

242
00:10:26,880 --> 00:10:30,660
similar to eot except that in uot the

243
00:10:30,660 --> 00:10:33,600
diversary cannot have any influence on

244
00:10:33,600 --> 00:10:36,180
the Otis messages in other words this

245
00:10:36,180 --> 00:10:39,060
old messages should always be uniformly

246
00:10:39,060 --> 00:10:42,720
random so obviously uot provides

247
00:10:42,720 --> 00:10:45,180
stronger security guarantees than eot

248
00:10:45,180 --> 00:10:48,180
and they also discovered that uot

249
00:10:48,180 --> 00:10:51,240
implies eot and the uot can be built

250
00:10:51,240 --> 00:10:53,000
from eot and

251
00:10:53,000 --> 00:10:55,800
Philippines unconditionally however

252
00:10:55,800 --> 00:11:00,000
where the eot implies uot remains on and

253
00:11:00,000 --> 00:11:03,180
in this work we will show you that eot

254
00:11:03,180 --> 00:11:05,820
actually implies coin flipping so

255
00:11:05,820 --> 00:11:08,820
therefore eotin plus your team

256
00:11:08,820 --> 00:11:12,240
and we start by showing that eot implies

257
00:11:12,240 --> 00:11:15,320
bit commitment and our construction was

258
00:11:15,320 --> 00:11:19,620
inspired by bfsk 11 because that in bfsk

259
00:11:19,620 --> 00:11:22,320
11 the authors showed that what the

260
00:11:22,320 --> 00:11:24,959
standard one of the o2ot implied speed

261
00:11:24,959 --> 00:11:27,600
commitment and in this work we observe

262
00:11:27,600 --> 00:11:30,899
that the 102 OT can be replaced with the

263
00:11:30,899 --> 00:11:33,540
eot and we present our constructions in

264
00:11:33,540 --> 00:11:35,940
the future above as you can see in the

265
00:11:35,940 --> 00:11:37,800
committing phase the committer will

266
00:11:37,800 --> 00:11:40,800
place a role of the eot receiver and the

267
00:11:40,800 --> 00:11:43,380
receiver will play the role of the eot

268
00:11:43,380 --> 00:11:45,959
sender and at the end of the committing

269
00:11:45,959 --> 00:11:49,980
phase the commuter will receive his

270
00:11:49,980 --> 00:11:53,100
OT messages MB which will be used as the

271
00:11:53,100 --> 00:11:55,560
open opening messages later in the

272
00:11:55,560 --> 00:11:58,079
opening phase and this construction is

273
00:11:58,079 --> 00:12:00,420
quite simple but it is secure and I will

274
00:12:00,420 --> 00:12:02,519
provide assure you why this is here

275
00:12:02,519 --> 00:12:06,240
typically a commitment protocol requests

276
00:12:06,240 --> 00:12:08,579
to properties namely high in probability

277
00:12:08,579 --> 00:12:09,500
and

278
00:12:09,500 --> 00:12:13,260
and I will observe that if the malicious

279
00:12:13,260 --> 00:12:15,540
receiver can break the hiding property

280
00:12:15,540 --> 00:12:18,120
which means the malicious receiver can

281
00:12:18,120 --> 00:12:20,880
tell which OT messages was received by

282
00:12:20,880 --> 00:12:23,100
the commuter then we can build a

283
00:12:23,100 --> 00:12:25,740
reduction to break the eot receiver's

284
00:12:25,740 --> 00:12:29,220
security similarly if the malicious

285
00:12:29,220 --> 00:12:31,800
commuter can find a way to break the

286
00:12:31,800 --> 00:12:34,380
binding poverty which means the

287
00:12:34,380 --> 00:12:36,480
malicious receiver can find a way to

288
00:12:36,480 --> 00:12:39,120
obtain both OT messages then we can

289
00:12:39,120 --> 00:12:40,920
build a reduction to break the eot

290
00:12:40,920 --> 00:12:43,260
Standard Security and that's how we

291
00:12:43,260 --> 00:12:45,300
improve our commitment protocol is

292
00:12:45,300 --> 00:12:46,680
secure

293
00:12:46,680 --> 00:12:49,079
so we have already showed that your team

294
00:12:49,079 --> 00:12:51,540
plays commitment and it is well known

295
00:12:51,540 --> 00:12:53,760
that the commitment in place conflicting

296
00:12:53,760 --> 00:12:56,339
and combine these results together will

297
00:12:56,339 --> 00:12:59,160
show that UT Plus uot

298
00:12:59,160 --> 00:13:01,380
and that there is also a set of product

299
00:13:01,380 --> 00:13:04,320
here and in this talk I have already

300
00:13:04,320 --> 00:13:07,260
showed you a one round it's using secure

301
00:13:07,260 --> 00:13:10,740
eot constructions in the TR model and by

302
00:13:10,740 --> 00:13:13,200
our bitum commitment constructions will

303
00:13:13,200 --> 00:13:15,839
immediately obtain a two round uses

304
00:13:15,839 --> 00:13:20,220
commitment in the TRL model and here I

305
00:13:20,220 --> 00:13:22,019
compare the our commitment and

306
00:13:22,019 --> 00:13:24,360
construction with other sales artists

307
00:13:24,360 --> 00:13:27,180
using secure commitment in the TR model

308
00:13:27,180 --> 00:13:30,079
and as you can see even if the previous

309
00:13:30,079 --> 00:13:32,579
constructions requires a vehicle

310
00:13:32,579 --> 00:13:34,500
compensation or assumption stands this

311
00:13:34,500 --> 00:13:36,660
worker this work is the only one that

312
00:13:36,660 --> 00:13:38,940
can shift to run the communication by

313
00:13:38,940 --> 00:13:40,560
assuming simultaneous communication

314
00:13:40,560 --> 00:13:42,860
model

315
00:13:42,860 --> 00:13:46,200
let us explore the relation between the

316
00:13:46,200 --> 00:13:49,920
CR model and the crpr modem in this talk

317
00:13:49,920 --> 00:13:52,380
I have already showed you that one round

318
00:13:52,380 --> 00:13:55,500
using static skill UT is possible in the

319
00:13:55,500 --> 00:14:00,240
TR model and in our paper we discovered

320
00:14:00,240 --> 00:14:03,540
that one runs using static skill UT is

321
00:14:03,540 --> 00:14:06,420
impossible in the grpr module and

322
00:14:06,420 --> 00:14:09,480
therefore we show that grpio does not

323
00:14:09,480 --> 00:14:13,139
imply TRL and however whether they are

324
00:14:13,139 --> 00:14:16,620
implies crpr remains unknown

325
00:14:16,620 --> 00:14:18,779
okay finally we are arriving at the

326
00:14:18,779 --> 00:14:21,839
conclusion part and in this talk we

327
00:14:21,839 --> 00:14:24,959
first constructed the Run optimal eotes

328
00:14:24,959 --> 00:14:27,600
in the global render articles and in

329
00:14:27,600 --> 00:14:30,839
this talk I only give you our TR based

330
00:14:30,839 --> 00:14:33,660
constructions and our tip our based

331
00:14:33,660 --> 00:14:36,060
constructions can be found in our papers

332
00:14:36,060 --> 00:14:39,420
and here I compare the efficiency of our

333
00:14:39,420 --> 00:14:42,360
eot protocols with other students art

334
00:14:42,360 --> 00:14:44,880
protocols as you can see the efficiency

335
00:14:44,880 --> 00:14:47,339
of our PR based constructions is

336
00:14:47,339 --> 00:14:49,980
competitive meanwhile the efficiency of

337
00:14:49,980 --> 00:14:52,380
our CR based construction is not so

338
00:14:52,380 --> 00:14:55,320
competitive but if you requires vehicle

339
00:14:55,320 --> 00:14:57,240
computational assumptions than others

340
00:14:57,240 --> 00:14:59,639
and I have to also to point out that

341
00:14:59,639 --> 00:15:01,800
both of our constructions are chooses

342
00:15:01,800 --> 00:15:04,920
here where others are only using secure

343
00:15:04,920 --> 00:15:06,720
and the in this work will also

344
00:15:06,720 --> 00:15:09,300
investigate the relation between eot and

345
00:15:09,300 --> 00:15:13,199
others we discovered that eot implies

346
00:15:13,199 --> 00:15:17,220
commitment and eot implies uot combined

347
00:15:17,220 --> 00:15:21,060
with the result in mr19 which shows that

348
00:15:21,060 --> 00:15:23,940
eot and uoti information theoretically

349
00:15:23,940 --> 00:15:26,639
equivalent and finally we investigate

350
00:15:26,639 --> 00:15:29,579
the relation between TR or model and

351
00:15:29,579 --> 00:15:32,820
crpr model which shows that crpr does

352
00:15:32,820 --> 00:15:36,420
not Implement however whether TRL

353
00:15:36,420 --> 00:15:38,959
implies crpo remains an open questions

354
00:15:38,959 --> 00:15:42,180
and that's all thanks for listening

355
00:15:42,180 --> 00:15:44,300
okay

356
00:15:48,180 --> 00:15:51,380
any questions

357
00:15:54,560 --> 00:15:57,120
you said that you also had some results

358
00:15:57,120 --> 00:16:00,240
in the local random molecule model yeah

359
00:16:00,240 --> 00:16:03,360
yes how does that compare with the

360
00:16:03,360 --> 00:16:06,779
constructions in the yes uh in this talk

361
00:16:06,779 --> 00:16:09,779
I didn't give our local all

362
00:16:09,779 --> 00:16:11,459
constructions in the local enormous

363
00:16:11,459 --> 00:16:14,699
Oracle models this can be found in our

364
00:16:14,699 --> 00:16:18,000
papers and the efficiency of our local

365
00:16:18,000 --> 00:16:20,220
our based constructions is not still

366
00:16:20,220 --> 00:16:25,620
competitive to Mi 19 honestly however as

367
00:16:25,620 --> 00:16:28,139
I mentioned before the particle in m19

368
00:16:28,139 --> 00:16:29,820
was established on the announcement

369
00:16:29,820 --> 00:16:32,339
submissions where our local based

370
00:16:32,339 --> 00:16:34,139
constructions was on the standard

371
00:16:34,139 --> 00:16:37,079
submissions namely the ddh Assumption so

372
00:16:37,079 --> 00:16:40,079
I think this is our the advantage of our

373
00:16:40,079 --> 00:16:42,779
local based constructions

374
00:16:42,779 --> 00:16:44,880
okay

375
00:16:44,880 --> 00:16:47,360
um well if there are no more questions

376
00:16:47,360 --> 00:16:50,190
let's thank the speaker again

377
00:16:50,190 --> 00:16:56,569
[Applause]

378
00:17:17,280 --> 00:17:20,939
yeah the next talk will be a new

379
00:17:20,939 --> 00:17:22,679
framework for Quantum Mobility with

380
00:17:22,679 --> 00:17:27,419
transfer as a work by Amit Agarwal James

381
00:17:27,419 --> 00:17:31,020
bartusek dakshita kurlana and Nishant

382
00:17:31,020 --> 00:17:35,280
Kumar and James bartusek will give the

383
00:17:35,280 --> 00:17:37,020
talk

384
00:17:37,020 --> 00:17:39,000
okay thank you yeah so this is a new

385
00:17:39,000 --> 00:17:41,160
framing for Quantum oblivious transfer

386
00:17:41,160 --> 00:17:43,679
um joint work with him at dakshita and

387
00:17:43,679 --> 00:17:45,059
Nishant

388
00:17:45,059 --> 00:17:46,080
um

389
00:17:46,080 --> 00:17:48,720
so tragically uh Nishant has since

390
00:17:48,720 --> 00:17:50,220
passed away

391
00:17:50,220 --> 00:17:52,919
um Nishant was a wonderful collaborator

392
00:17:52,919 --> 00:17:56,220
and friend and our work in this talk is

393
00:17:56,220 --> 00:17:59,360
is dedicated to him

394
00:18:00,960 --> 00:18:03,740
so let me begin

395
00:18:03,740 --> 00:18:05,940
with some background

396
00:18:05,940 --> 00:18:08,400
so and I'll start with uh kind of where

397
00:18:08,400 --> 00:18:11,100
it all begins uh with Stephen weisner's

398
00:18:11,100 --> 00:18:14,520
paper from 1968 that basically started

399
00:18:14,520 --> 00:18:18,120
the area of quantum cryptography

400
00:18:18,120 --> 00:18:21,620
and in this paper he promises to study a

401
00:18:21,620 --> 00:18:25,260
a method of encoding or a type of coding

402
00:18:25,260 --> 00:18:26,880
scheme that's only made possible by the

403
00:18:26,880 --> 00:18:28,440
uncertainty principle and has no

404
00:18:28,440 --> 00:18:30,000
classical analog

405
00:18:30,000 --> 00:18:32,220
and the first example he gives for its

406
00:18:32,220 --> 00:18:35,100
usefulness is a means of transmitting

407
00:18:35,100 --> 00:18:36,960
two messages either but not both of

408
00:18:36,960 --> 00:18:39,720
which may be received and so these days

409
00:18:39,720 --> 00:18:43,520
we know this as oblivious transfer

410
00:18:44,220 --> 00:18:47,220
um and so he basically in this paper

411
00:18:47,220 --> 00:18:48,600
introduced this notion that he called

412
00:18:48,600 --> 00:18:50,700
conjugate coding and the basic idea is

413
00:18:50,700 --> 00:18:53,220
that if a sender has has two messages

414
00:18:53,220 --> 00:18:55,140
you can maybe think of these as just two

415
00:18:55,140 --> 00:18:59,460
bits m0 and M1 they can transmit one in

416
00:18:59,460 --> 00:19:01,440
the standard basis and another one in

417
00:19:01,440 --> 00:19:03,360
the hadamard basis

418
00:19:03,360 --> 00:19:04,799
and the point is that if the receiver

419
00:19:04,799 --> 00:19:07,620
has their measurement device set to kind

420
00:19:07,620 --> 00:19:09,179
of measuring in the standard basis then

421
00:19:09,179 --> 00:19:12,360
they will learn m0 but nothing about M1

422
00:19:12,360 --> 00:19:13,860
their measurement will kind of destroy

423
00:19:13,860 --> 00:19:15,720
all the information about M1

424
00:19:15,720 --> 00:19:17,160
on the other hand if they have their

425
00:19:17,160 --> 00:19:18,660
measurement device set to measuring in

426
00:19:18,660 --> 00:19:20,580
the hadamard basis they'll learn M1 and

427
00:19:20,580 --> 00:19:22,200
nothing about m0

428
00:19:22,200 --> 00:19:24,900
right so this is the basic idea clearly

429
00:19:24,900 --> 00:19:28,200
it's uh insecure against uh general or

430
00:19:28,200 --> 00:19:30,059
like malicious receivers that may decide

431
00:19:30,059 --> 00:19:31,620
to measure different qubits in different

432
00:19:31,620 --> 00:19:33,059
bases

433
00:19:33,059 --> 00:19:35,039
um you know Wisner talks about uh kind

434
00:19:35,039 --> 00:19:37,020
of promoting these qubits around uh to

435
00:19:37,020 --> 00:19:38,700
try to block this attack but he also

436
00:19:38,700 --> 00:19:40,440
acknowledges that they are there are

437
00:19:40,440 --> 00:19:42,840
probably more General attacks okay

438
00:19:42,840 --> 00:19:44,940
which there are but this idea

439
00:19:44,940 --> 00:19:48,299
nonetheless was extremely influential

440
00:19:48,299 --> 00:19:49,020
um

441
00:19:49,020 --> 00:19:52,559
and the first work after Weisner to

442
00:19:52,559 --> 00:19:55,980
really study the use of quantum

443
00:19:55,980 --> 00:19:58,740
Communication in OT was crepo and

444
00:19:58,740 --> 00:20:01,760
Killian in 88. and they added two

445
00:20:01,760 --> 00:20:04,559
components to weisner's proposal namely

446
00:20:04,559 --> 00:20:07,140
interaction and cryptographic bit

447
00:20:07,140 --> 00:20:10,620
commitments to obtain a protocol that is

448
00:20:10,620 --> 00:20:13,200
possibly secure okay although they did

449
00:20:13,200 --> 00:20:15,919
not prove its security

450
00:20:16,500 --> 00:20:18,299
um on in fact it wasn't until many years

451
00:20:18,299 --> 00:20:19,100
later

452
00:20:19,100 --> 00:20:22,620
these Works made some real progress in

453
00:20:22,620 --> 00:20:24,240
the in the security of the scheme by

454
00:20:24,240 --> 00:20:25,620
showing that this template is secure

455
00:20:25,620 --> 00:20:28,020
when the commitment that is used is

456
00:20:28,020 --> 00:20:30,360
ideal and by ideal commitment I mean one

457
00:20:30,360 --> 00:20:32,280
that satisfies both equivocality and

458
00:20:32,280 --> 00:20:33,539
extractability

459
00:20:33,539 --> 00:20:36,600
okay and then a couple concurrent Works

460
00:20:36,600 --> 00:20:38,820
recent concurrent works one of uh so

461
00:20:38,820 --> 00:20:41,299
Grillo Lin song and Vikings Nathan

462
00:20:41,299 --> 00:20:43,500
constructed a post Quantum ideal

463
00:20:43,500 --> 00:20:45,059
commitments from just one-way functions

464
00:20:45,059 --> 00:20:47,039
with that which then establishes OT from

465
00:20:47,039 --> 00:20:48,480
one-way functions

466
00:20:48,480 --> 00:20:51,660
plus Quantum communication a current a

467
00:20:51,660 --> 00:20:53,640
current or concurrent work of myself

468
00:20:53,640 --> 00:20:56,760
called Angelo Carana and Ma constructed

469
00:20:56,760 --> 00:20:58,620
post Quantum ideal commitments just from

470
00:20:58,620 --> 00:20:59,940
the Black Box use of standard

471
00:20:59,940 --> 00:21:01,919
commitments by which I mean just

472
00:21:01,919 --> 00:21:03,179
commitments that are statistically

473
00:21:03,179 --> 00:21:05,640
binding and computationally hiding

474
00:21:05,640 --> 00:21:07,440
right so if we go back to this uh

475
00:21:07,440 --> 00:21:09,240
krapokilian template

476
00:21:09,240 --> 00:21:11,820
um and look at their this component of a

477
00:21:11,820 --> 00:21:13,980
commitment right by now we uh fairly we

478
00:21:13,980 --> 00:21:16,340
we really understand

479
00:21:16,340 --> 00:21:20,340
uh this part of it so we know that some

480
00:21:20,340 --> 00:21:22,320
cryptography is necessary and this was

481
00:21:22,320 --> 00:21:24,480
proven uh in the 90s at least so some

482
00:21:24,480 --> 00:21:26,820
cryptography is necessary for OT right

483
00:21:26,820 --> 00:21:29,159
even if we use quantum communication and

484
00:21:29,159 --> 00:21:30,659
by now we know that standard commitments

485
00:21:30,659 --> 00:21:32,220
are sufficient kind of one of the

486
00:21:32,220 --> 00:21:34,620
weakest uh cryptographic Primitives you

487
00:21:34,620 --> 00:21:37,260
you can imagine right

488
00:21:37,260 --> 00:21:39,840
um so the focus of this talk is going to

489
00:21:39,840 --> 00:21:40,919
be on this other component of

490
00:21:40,919 --> 00:21:43,860
interaction I think we know less about

491
00:21:43,860 --> 00:21:46,080
this is it necessary if so how much

492
00:21:46,080 --> 00:21:48,240
interaction is necessary for for Quantum

493
00:21:48,240 --> 00:21:50,240
OT

494
00:21:51,900 --> 00:21:53,340
um so what's known about interaction

495
00:21:53,340 --> 00:21:55,799
well uh like I said Wisner proposed a

496
00:21:55,799 --> 00:21:57,179
non-interactive protocol just one

497
00:21:57,179 --> 00:21:59,460
message from sender to receiver but it's

498
00:21:59,460 --> 00:22:01,320
insecure

499
00:22:01,320 --> 00:22:03,059
um if you write down uh the template

500
00:22:03,059 --> 00:22:05,159
proposed by ck88 you'll probably see

501
00:22:05,159 --> 00:22:07,380
that it's seven messages

502
00:22:07,380 --> 00:22:09,179
um assuming the ideal commitment that

503
00:22:09,179 --> 00:22:11,820
they're using is is non-interactive okay

504
00:22:11,820 --> 00:22:13,799
although these works that uh kind of

505
00:22:13,799 --> 00:22:15,720
construct not these ideal commitments

506
00:22:15,720 --> 00:22:17,940
are in general polynomial rounds in the

507
00:22:17,940 --> 00:22:20,520
plane model glsv also gives a constant

508
00:22:20,520 --> 00:22:22,620
round protocol in the common random

509
00:22:22,620 --> 00:22:25,020
string model but they leave the number

510
00:22:25,020 --> 00:22:26,880
of rounds unspecified it's going to be

511
00:22:26,880 --> 00:22:29,400
definitely at least seven

512
00:22:29,400 --> 00:22:31,020
um so this is what was kind of known

513
00:22:31,020 --> 00:22:33,179
prior to our work

514
00:22:33,179 --> 00:22:35,100
okay so this is a question we asked how

515
00:22:35,100 --> 00:22:37,080
that we ask how much interaction is

516
00:22:37,080 --> 00:22:38,940
really required for Quantum oblivious

517
00:22:38,940 --> 00:22:41,640
transfer and what exactly do I mean by

518
00:22:41,640 --> 00:22:44,159
Quantum oblivious transfer the name I

519
00:22:44,159 --> 00:22:46,080
find fairly confusing but it's become

520
00:22:46,080 --> 00:22:48,539
standard it's an OT protocol that so

521
00:22:48,539 --> 00:22:49,799
it's a standard

522
00:22:49,799 --> 00:22:51,659
OT protocol right but it makes use of

523
00:22:51,659 --> 00:22:54,299
quantum communication but no public key

524
00:22:54,299 --> 00:22:56,880
cryptography right and so why do we

525
00:22:56,880 --> 00:22:58,380
study this object because without

526
00:22:58,380 --> 00:23:00,179
Quantum communication it's widely

527
00:23:00,179 --> 00:23:01,559
believed and there's evidence for the

528
00:23:01,559 --> 00:23:03,600
fact that public key crypto is necessary

529
00:23:03,600 --> 00:23:05,640
for OT so if we want to relax the use of

530
00:23:05,640 --> 00:23:06,960
public key crypto we're going to have to

531
00:23:06,960 --> 00:23:10,080
add in some Quantum communication

532
00:23:10,080 --> 00:23:11,340
right

533
00:23:11,340 --> 00:23:14,640
uh so our results are stated as follows

534
00:23:14,640 --> 00:23:16,799
we're going to capture the notion of

535
00:23:16,799 --> 00:23:18,659
symmetrical crypto or non-public key

536
00:23:18,659 --> 00:23:21,059
crypto in by designing protocols that

537
00:23:21,059 --> 00:23:22,320
are in the quantum random Oracle model

538
00:23:22,320 --> 00:23:25,799
and use no other assumptions right so we

539
00:23:25,799 --> 00:23:28,140
just want to assume some idealized usage

540
00:23:28,140 --> 00:23:31,260
of a hash function and nothing else

541
00:23:31,260 --> 00:23:33,559
and our first result is a three message

542
00:23:33,559 --> 00:23:36,240
uh kind of standard chosen input string

543
00:23:36,240 --> 00:23:38,760
OT protocol right so sender has messages

544
00:23:38,760 --> 00:23:42,419
m0 M1 a receiver has a choice bit B the

545
00:23:42,419 --> 00:23:43,799
interact in three messages and the

546
00:23:43,799 --> 00:23:46,860
receiver obtains message M sub B

547
00:23:46,860 --> 00:23:48,419
okay

548
00:23:48,419 --> 00:23:52,380
and then our second result we we study a

549
00:23:52,380 --> 00:23:54,659
fair a bit of a different setting okay

550
00:23:54,659 --> 00:23:56,820
where we assume the sender and receiver

551
00:23:56,820 --> 00:23:58,919
start the protocol with some pre-shared

552
00:23:58,919 --> 00:24:01,020
entanglement in particular we just

553
00:24:01,020 --> 00:24:02,280
assume that they share some number of

554
00:24:02,280 --> 00:24:05,460
epr pairs okay and in this setting we

555
00:24:05,460 --> 00:24:06,860
can actually get a one message protocol

556
00:24:06,860 --> 00:24:10,760
fulfilling uh wisner's original Vision

557
00:24:10,760 --> 00:24:12,720
at least when the sender is just

558
00:24:12,720 --> 00:24:14,700
transmitting bits so if m0 and M1 are

559
00:24:14,700 --> 00:24:16,380
just bits they can send one of these two

560
00:24:16,380 --> 00:24:17,700
bits to the receiver and the receiver

561
00:24:17,700 --> 00:24:20,760
will obtain a MB for a uniformly random

562
00:24:20,760 --> 00:24:24,740
chosen B okay

563
00:24:25,740 --> 00:24:28,919
good so let me talk about uh a little

564
00:24:28,919 --> 00:24:31,200
bit about the the techniques we use to

565
00:24:31,200 --> 00:24:33,740
get these results

566
00:24:33,900 --> 00:24:35,159
um

567
00:24:35,159 --> 00:24:36,900
and our starting point is actually we go

568
00:24:36,900 --> 00:24:39,780
back to to wisner's original protocol

569
00:24:39,780 --> 00:24:41,880
um which recall is basically having the

570
00:24:41,880 --> 00:24:44,460
sender transmit one of their messages in

571
00:24:44,460 --> 00:24:46,679
the standard basis and the other message

572
00:24:46,679 --> 00:24:49,500
in the hadamard basis okay and the issue

573
00:24:49,500 --> 00:24:50,880
here and kind of what we need to

574
00:24:50,880 --> 00:24:54,419
overcome is uh you know how can we

575
00:24:54,419 --> 00:24:55,860
guarantee that the receiver measures

576
00:24:55,860 --> 00:24:57,900
both of these states in the same basis

577
00:24:57,900 --> 00:24:59,460
right

578
00:24:59,460 --> 00:25:00,000
um

579
00:25:00,000 --> 00:25:01,559
it doesn't matter which basis right like

580
00:25:01,559 --> 00:25:03,360
if they measure both in the standard

581
00:25:03,360 --> 00:25:05,580
basis then they'll necessarily be losing

582
00:25:05,580 --> 00:25:07,559
information about M1 if they measure

583
00:25:07,559 --> 00:25:08,880
both in the hadamard basis they'll

584
00:25:08,880 --> 00:25:10,500
necessarily be losing information about

585
00:25:10,500 --> 00:25:13,020
m0 so what's really important for us is

586
00:25:13,020 --> 00:25:14,539
to guarantee that they

587
00:25:14,539 --> 00:25:16,679
pick one of these two bases and measure

588
00:25:16,679 --> 00:25:19,679
both qubits in that basis right

589
00:25:19,679 --> 00:25:23,280
so roughly how we accomplish this

590
00:25:23,280 --> 00:25:24,960
is as follows so I'll give like a high

591
00:25:24,960 --> 00:25:26,760
level picture of what the three messages

592
00:25:26,760 --> 00:25:29,580
of our protocol look like

593
00:25:29,580 --> 00:25:30,299
um

594
00:25:30,299 --> 00:25:32,279
our first message is basically just to

595
00:25:32,279 --> 00:25:34,260
parallel repetition of of wisner's

596
00:25:34,260 --> 00:25:36,419
proposal using just like random encoding

597
00:25:36,419 --> 00:25:38,820
random bits okay so like in each column

598
00:25:38,820 --> 00:25:40,500
you can see or most of these columns you

599
00:25:40,500 --> 00:25:42,419
can see that one bit is encoded in the

600
00:25:42,419 --> 00:25:44,159
standard basis and one bit is encoded in

601
00:25:44,159 --> 00:25:47,159
the hadamard basis except for a couple

602
00:25:47,159 --> 00:25:49,559
of positions that we call trap positions

603
00:25:49,559 --> 00:25:51,179
right where the sender is actually just

604
00:25:51,179 --> 00:25:53,039
going to sample uniformly random basis

605
00:25:53,039 --> 00:25:55,799
one of these two bases and encode bits

606
00:25:55,799 --> 00:25:58,140
in the same basis okay and we call these

607
00:25:58,140 --> 00:25:59,940
positions as just trap positions because

608
00:25:59,940 --> 00:26:03,240
they're going to be used to make sure

609
00:26:03,240 --> 00:26:04,740
that the receiver is indeed measuring

610
00:26:04,740 --> 00:26:07,080
each of these columns in in the same

611
00:26:07,080 --> 00:26:08,159
basis

612
00:26:08,159 --> 00:26:09,299
okay

613
00:26:09,299 --> 00:26:10,980
and our second message

614
00:26:10,980 --> 00:26:14,600
is uh basically the receiver

615
00:26:14,600 --> 00:26:17,220
accomplishes a proof that the receiver

616
00:26:17,220 --> 00:26:18,779
has done this at least for most of the

617
00:26:18,779 --> 00:26:20,580
columns right so they measure each pair

618
00:26:20,580 --> 00:26:22,919
of states in a basis of their choice

619
00:26:22,919 --> 00:26:25,320
using and then prove this fact using

620
00:26:25,320 --> 00:26:26,460
what we call a non-attractive

621
00:26:26,460 --> 00:26:28,679
measurement check subprotocol

622
00:26:28,679 --> 00:26:30,600
okay and then the third message the

623
00:26:30,600 --> 00:26:32,880
sender will use the random bits in The

624
00:26:32,880 --> 00:26:34,980
non-trap Columns to actually mask their

625
00:26:34,980 --> 00:26:37,260
their messages m0 and M1 and transmit

626
00:26:37,260 --> 00:26:40,020
this to the receiver

627
00:26:40,020 --> 00:26:41,880
so this is the very like high level of

628
00:26:41,880 --> 00:26:44,640
what the protocol looks like we call

629
00:26:44,640 --> 00:26:46,820
this the fixed basis framework for OT

630
00:26:46,820 --> 00:26:49,460
because our first message consists of

631
00:26:49,460 --> 00:26:51,960
pairs of states in these fixed bases

632
00:26:51,960 --> 00:26:53,640
right everyone knows that like the the

633
00:26:53,640 --> 00:26:55,020
top state is going to be in the standard

634
00:26:55,020 --> 00:26:56,340
basis the bottom States going to be in

635
00:26:56,340 --> 00:26:58,200
the hadamer basis of course except for

636
00:26:58,200 --> 00:27:01,020
these interspersed trap positions and we

637
00:27:01,020 --> 00:27:03,179
call this to differentiate it from ck88

638
00:27:03,179 --> 00:27:04,799
template and all the follow-ups that

639
00:27:04,799 --> 00:27:06,779
basically begin with the first message

640
00:27:06,779 --> 00:27:08,460
that encodes a bunch of random bits in

641
00:27:08,460 --> 00:27:10,620
random bases okay and it turns out that

642
00:27:10,620 --> 00:27:12,299
during this necessitates some extra

643
00:27:12,299 --> 00:27:13,980
interaction which we're able to remove

644
00:27:13,980 --> 00:27:17,720
using this framework

645
00:27:18,480 --> 00:27:20,400
okay and let me say a few more words

646
00:27:20,400 --> 00:27:22,220
about this

647
00:27:22,220 --> 00:27:23,700
non-attractive measurement check

648
00:27:23,700 --> 00:27:25,559
subprotocol or at least the building

649
00:27:25,559 --> 00:27:27,720
blocks that we need to use to construct

650
00:27:27,720 --> 00:27:29,400
it

651
00:27:29,400 --> 00:27:30,059
um

652
00:27:30,059 --> 00:27:32,880
so the first component of it is a

653
00:27:32,880 --> 00:27:34,919
commitment scheme where the basically

654
00:27:34,919 --> 00:27:36,539
the receiver like measures all these

655
00:27:36,539 --> 00:27:37,679
states and commits to all their

656
00:27:37,679 --> 00:27:39,900
measurement results and we need to use

657
00:27:39,900 --> 00:27:42,900
an ideal commitment and so we need to

658
00:27:42,900 --> 00:27:46,140
formalize uh an ideal commitment in the

659
00:27:46,140 --> 00:27:49,860
quantum random Oracle model okay and

660
00:27:49,860 --> 00:27:51,720
um you know the construction is

661
00:27:51,720 --> 00:27:53,159
basically what you'd expect just like in

662
00:27:53,159 --> 00:27:54,480
the classical random Oracle model you

663
00:27:54,480 --> 00:27:55,919
basically hash the bit you're committing

664
00:27:55,919 --> 00:27:57,480
to along with some Randomness but

665
00:27:57,480 --> 00:27:59,400
formalizing that this is extractable uh

666
00:27:59,400 --> 00:28:02,220
Builds on some recent work uh by zandri

667
00:28:02,220 --> 00:28:03,960
and then Don ferramayans and Schaffner

668
00:28:03,960 --> 00:28:06,419
on online extractability in the quantum

669
00:28:06,419 --> 00:28:08,100
random Oracle model

670
00:28:08,100 --> 00:28:09,840
okay

671
00:28:09,840 --> 00:28:11,760
um and to make this measurement checks

672
00:28:11,760 --> 00:28:13,620
our protocol non-interactive we're going

673
00:28:13,620 --> 00:28:15,240
to apply basically a fiatrimir step

674
00:28:15,240 --> 00:28:17,120
where we like hash all these commitments

675
00:28:17,120 --> 00:28:21,960
uh to uh to give us a subset that the

676
00:28:21,960 --> 00:28:24,179
receiver is supposed to open and send to

677
00:28:24,179 --> 00:28:26,880
the send back to the sender and so to

678
00:28:26,880 --> 00:28:28,320
argue the security of this we're going

679
00:28:28,320 --> 00:28:30,059
to combine some recent work on the post

680
00:28:30,059 --> 00:28:33,240
Quantum security of Fiat Shamir with

681
00:28:33,240 --> 00:28:36,240
bf10 kind of uh

682
00:28:36,240 --> 00:28:38,880
OT proof techniques okay and so I

683
00:28:38,880 --> 00:28:40,080
encourage you to see the paper for

684
00:28:40,080 --> 00:28:43,220
further details about that

685
00:28:43,620 --> 00:28:45,240
um and then moving on to our next main

686
00:28:45,240 --> 00:28:46,679
result right I'll just say a few words

687
00:28:46,679 --> 00:28:48,000
about this we take our three message

688
00:28:48,000 --> 00:28:50,100
protocol and essentially compile it to a

689
00:28:50,100 --> 00:28:52,140
one message protocol on the shared epr

690
00:28:52,140 --> 00:28:54,240
pairs model by replacing that first

691
00:28:54,240 --> 00:28:56,720
Quantum message with shared epr pairs

692
00:28:56,720 --> 00:28:59,520
removing the third message which

693
00:28:59,520 --> 00:29:01,080
basically switches the roles of the

694
00:29:01,080 --> 00:29:02,460
sender and receiver and makes one of

695
00:29:02,460 --> 00:29:04,620
their inputs random and then to kind of

696
00:29:04,620 --> 00:29:06,059
switch these back we're going to apply a

697
00:29:06,059 --> 00:29:08,640
non-attractive OT reversal protocol due

698
00:29:08,640 --> 00:29:13,100
to a shyakilian Nissan Patrol okay

699
00:29:13,260 --> 00:29:15,840
and uh let me say

700
00:29:15,840 --> 00:29:18,059
uh some words about one like kind of

701
00:29:18,059 --> 00:29:19,919
Crucial Technical tool we need when we

702
00:29:19,919 --> 00:29:21,539
compile it to just a one message

703
00:29:21,539 --> 00:29:23,520
protocol it turns out that like all

704
00:29:23,520 --> 00:29:26,100
prior work on OT uh uses some Randomness

705
00:29:26,100 --> 00:29:27,659
extraction

706
00:29:27,659 --> 00:29:29,580
um to basically hide the sender messages

707
00:29:29,580 --> 00:29:31,740
right and they use a seated extractor

708
00:29:31,740 --> 00:29:36,179
okay but when we move to one message we

709
00:29:36,179 --> 00:29:37,740
can no longer use a seated extractor we

710
00:29:37,740 --> 00:29:39,840
just don't have enough interaction uh to

711
00:29:39,840 --> 00:29:42,120
to enable that and so we need to we need

712
00:29:42,120 --> 00:29:44,100
a unseated extractor and it turns out

713
00:29:44,100 --> 00:29:47,100
that just xor works

714
00:29:47,100 --> 00:29:48,960
um at least for this Quantum source of

715
00:29:48,960 --> 00:29:51,059
entropy that we need and so the Lemma

716
00:29:51,059 --> 00:29:52,799
that we prove is we say well consider

717
00:29:52,799 --> 00:29:55,559
any two register Quantum system on a and

718
00:29:55,559 --> 00:29:58,380
b uh with the that satisfies the

719
00:29:58,380 --> 00:30:00,179
property that uh this the state on

720
00:30:00,179 --> 00:30:02,399
system B is only supported on standard

721
00:30:02,399 --> 00:30:04,020
basis states with low Hamming weight

722
00:30:04,020 --> 00:30:06,779
okay and what we want to do is measure

723
00:30:06,779 --> 00:30:08,760
this system all these qubits in the

724
00:30:08,760 --> 00:30:11,700
hadamard basis uh and X are the

725
00:30:11,700 --> 00:30:13,200
resulting bits together to get a single

726
00:30:13,200 --> 00:30:16,260
bit a little B okay so intuitively

727
00:30:16,260 --> 00:30:18,659
little B should have a lot of entropy

728
00:30:18,659 --> 00:30:20,340
and what we can show is that even

729
00:30:20,340 --> 00:30:23,220
conditioned on some arbitrary system a

730
00:30:23,220 --> 00:30:24,899
that might be arbitrarily entangled with

731
00:30:24,899 --> 00:30:28,020
B uh system B that the the bit little B

732
00:30:28,020 --> 00:30:30,240
is actually uniformly random uh even

733
00:30:30,240 --> 00:30:32,340
given knowledge of that system

734
00:30:32,340 --> 00:30:34,380
okay so that's kind of the xor

735
00:30:34,380 --> 00:30:36,779
randomness extractor claim that we need

736
00:30:36,779 --> 00:30:38,760
and

737
00:30:38,760 --> 00:30:40,320
um this has actually also been used in

738
00:30:40,320 --> 00:30:42,899
follow-up work in a related uh context

739
00:30:42,899 --> 00:30:45,120
of of certified deletion

740
00:30:45,120 --> 00:30:47,539
okay

741
00:30:48,059 --> 00:30:52,020
good so uh speaking of follow-up work

742
00:30:52,020 --> 00:30:53,039
um

743
00:30:53,039 --> 00:30:55,440
we left a bunch of questions open in the

744
00:30:55,440 --> 00:30:58,200
paper some of which have uh already been

745
00:30:58,200 --> 00:31:01,740
answered okay so one of the most natural

746
00:31:01,740 --> 00:31:03,720
ones right is is recall that we give

747
00:31:03,720 --> 00:31:06,539
this three message protocol and we we

748
00:31:06,539 --> 00:31:09,000
left basically two message Quantum OT

749
00:31:09,000 --> 00:31:11,220
open right which would be OT without

750
00:31:11,220 --> 00:31:14,640
public key crypto and this has been

751
00:31:14,640 --> 00:31:15,659
answered in this really beautiful

752
00:31:15,659 --> 00:31:18,240
protocol of Collison muguruza and

753
00:31:18,240 --> 00:31:19,320
Spielman

754
00:31:19,320 --> 00:31:21,899
right so they they exactly answer this

755
00:31:21,899 --> 00:31:24,419
question uh they assume like a nizzic

756
00:31:24,419 --> 00:31:26,159
and some other hash function assumption

757
00:31:26,159 --> 00:31:28,080
but they have an instantiation right in

758
00:31:28,080 --> 00:31:30,360
in the key ROM

759
00:31:30,360 --> 00:31:32,039
although they need to make non-blackbox

760
00:31:32,039 --> 00:31:33,840
use of a hash function so they need to

761
00:31:33,840 --> 00:31:35,940
uh kind of assume uh something else in

762
00:31:35,940 --> 00:31:38,279
the Q ROM okay but the point is that

763
00:31:38,279 --> 00:31:40,559
this is the first proposal for a two

764
00:31:40,559 --> 00:31:42,120
message a kind of a round optimal OT

765
00:31:42,120 --> 00:31:44,159
protocol

766
00:31:44,159 --> 00:31:46,200
um with no public key crypto

767
00:31:46,200 --> 00:31:47,940
okay

768
00:31:47,940 --> 00:31:49,799
and the other work I want to mention is

769
00:31:49,799 --> 00:31:51,720
a work of mine with Karana and

770
00:31:51,720 --> 00:31:53,279
srinivasan

771
00:31:53,279 --> 00:31:53,940
um

772
00:31:53,940 --> 00:31:56,279
where recall in our shared epr pairs

773
00:31:56,279 --> 00:31:58,440
model we were only able to achieve OT

774
00:31:58,440 --> 00:32:01,140
like bit OT or the sender transmits one

775
00:32:01,140 --> 00:32:02,899
of two bits

776
00:32:02,899 --> 00:32:05,940
and so in this work we improve this to

777
00:32:05,940 --> 00:32:07,559
string OT where the the sender can

778
00:32:07,559 --> 00:32:09,720
transmit one of two strings and this is

779
00:32:09,720 --> 00:32:11,520
uh particularly important because in the

780
00:32:11,520 --> 00:32:13,080
setting bit OT is not complete for

781
00:32:13,080 --> 00:32:15,480
secure computation but string OT is

782
00:32:15,480 --> 00:32:18,419
right so we have a corollary that shows

783
00:32:18,419 --> 00:32:19,740
that you can do one message secure

784
00:32:19,740 --> 00:32:21,120
computation of any at least

785
00:32:21,120 --> 00:32:22,919
unidirectional classical or Quantum

786
00:32:22,919 --> 00:32:25,260
computation in this model right so if we

787
00:32:25,260 --> 00:32:27,059
share APR pairs you can just send a

788
00:32:27,059 --> 00:32:28,620
single message and compute any

789
00:32:28,620 --> 00:32:31,919
functionality in one message okay

790
00:32:31,919 --> 00:32:35,159
and then also in this work we show uh

791
00:32:35,159 --> 00:32:37,380
how to do two round MPC without public

792
00:32:37,380 --> 00:32:39,840
key crypto in the shared epr pairs model

793
00:32:39,840 --> 00:32:41,460
where every where every party starts

794
00:32:41,460 --> 00:32:44,520
with some charity peer repairs

795
00:32:44,520 --> 00:32:45,240
um

796
00:32:45,240 --> 00:32:46,980
and there's still a couple interesting

797
00:32:46,980 --> 00:32:48,179
questions that are open in this

798
00:32:48,179 --> 00:32:50,760
direction and probably more but two that

799
00:32:50,760 --> 00:32:52,279
I want to mention are

800
00:32:52,279 --> 00:32:54,659
you know can we get two message OT

801
00:32:54,659 --> 00:32:57,240
unconditionally secure in the Q ROM uh

802
00:32:57,240 --> 00:33:00,000
that is can we can we um you know can we

803
00:33:00,000 --> 00:33:01,679
obtain two matches OT from the Black Box

804
00:33:01,679 --> 00:33:03,840
use of a hash function okay so this is

805
00:33:03,840 --> 00:33:05,159
still open

806
00:33:05,159 --> 00:33:06,600
and then

807
00:33:06,600 --> 00:33:08,700
um you know in this prior in this recent

808
00:33:08,700 --> 00:33:10,980
work we do uh two round OT in the shared

809
00:33:10,980 --> 00:33:12,899
epr pairs model but it's not necessarily

810
00:33:12,899 --> 00:33:14,700
you know impossible just in the CRS

811
00:33:14,700 --> 00:33:16,380
model so this is still open can we do

812
00:33:16,380 --> 00:33:18,720
two round NPC without public key crypto

813
00:33:18,720 --> 00:33:21,000
just in the CRS model so these are some

814
00:33:21,000 --> 00:33:22,980
nice open questions I think uh to

815
00:33:22,980 --> 00:33:26,460
continue this study and so thank you for

816
00:33:26,460 --> 00:33:28,060
listening and I'll take questions

817
00:33:28,060 --> 00:33:34,200
[Applause]

818
00:33:34,200 --> 00:33:37,220
are there any questions

819
00:33:40,980 --> 00:33:43,140
um what is the communication complexity

820
00:33:43,140 --> 00:33:45,679
of your protocols

821
00:33:45,679 --> 00:33:49,380
yeah we so we actually analyzed this

822
00:33:49,380 --> 00:33:51,899
um in the paper and we have some like we

823
00:33:51,899 --> 00:33:54,120
have a table of like various we have a

824
00:33:54,120 --> 00:33:55,620
few protocols and

825
00:33:55,620 --> 00:33:57,240
um kind of the

826
00:33:57,240 --> 00:33:59,760
asymptotic complexity or actually the

827
00:33:59,760 --> 00:34:02,399
the con the concrete complexity as best

828
00:34:02,399 --> 00:34:05,700
as we could um determine and

829
00:34:05,700 --> 00:34:08,099
for our three message protocol you know

830
00:34:08,099 --> 00:34:09,659
it's something I forget what it is you

831
00:34:09,659 --> 00:34:11,099
can see the table and the paper but it's

832
00:34:11,099 --> 00:34:13,619
some uh thousands Timeless security

833
00:34:13,619 --> 00:34:15,418
parameter so it's fairly inefficient

834
00:34:15,418 --> 00:34:17,280
yeah

835
00:34:17,280 --> 00:34:20,580
is that like uh is there is that the

836
00:34:20,580 --> 00:34:22,320
overhead or so so you have like a

837
00:34:22,320 --> 00:34:24,119
message of a certain length you need to

838
00:34:24,119 --> 00:34:28,020
send say um uh like a number of states

839
00:34:28,020 --> 00:34:30,480
that is uh yeah that's that's the

840
00:34:30,480 --> 00:34:31,980
overhead right so even if you're just

841
00:34:31,980 --> 00:34:34,260
say for a bit OT you want to do a bit OT

842
00:34:34,260 --> 00:34:36,239
I mean it's linear in the security

843
00:34:36,239 --> 00:34:38,639
parameter but at some some thousands

844
00:34:38,639 --> 00:34:39,780
time the security parameter because

845
00:34:39,780 --> 00:34:41,040
we're doing this like cut and choose

846
00:34:41,040 --> 00:34:42,899
thing and you need to kind of uh do this

847
00:34:42,899 --> 00:34:44,460
many times in order to get a good

848
00:34:44,460 --> 00:34:48,199
security bound okay yeah

849
00:34:48,480 --> 00:34:51,379
um more questions

850
00:34:53,339 --> 00:34:55,500
okay then let's uh Thanks James again

851
00:34:55,500 --> 00:34:59,119
and all the speakers in the session

852
00:35:00,370 --> 00:35:03,569
[Applause]

