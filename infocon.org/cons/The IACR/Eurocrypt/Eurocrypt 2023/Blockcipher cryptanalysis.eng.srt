1
00:00:00,000 --> 00:00:01,940
analysis

2
00:00:01,940 --> 00:00:06,500
we will have five talks with a 10 minute

3
00:00:06,500 --> 00:00:11,719
breaks break after the third talk

4
00:00:11,719 --> 00:00:16,800
the first talk of the session is titled

5
00:00:16,800 --> 00:00:18,840
truncate Boomerang attacks and

6
00:00:18,840 --> 00:00:21,900
application to AES based ciphers

7
00:00:21,900 --> 00:00:25,800
by Augusta Barrio and Guyton and the

8
00:00:25,800 --> 00:00:28,439
talk is given by gator

9
00:00:28,439 --> 00:00:30,660
thank you for the introduction so it's a

10
00:00:30,660 --> 00:00:32,640
joint work with Augusta who is a PhD

11
00:00:32,640 --> 00:00:34,440
student working with me

12
00:00:34,440 --> 00:00:36,540
and so I will talk about truncated

13
00:00:36,540 --> 00:00:38,940
Boomerang attacks and application to AES

14
00:00:38,940 --> 00:00:40,320
like ciphers

15
00:00:40,320 --> 00:00:42,540
so you probably know that the as is the

16
00:00:42,540 --> 00:00:45,180
most widely used block Cipher today so

17
00:00:45,180 --> 00:00:46,800
it's really important to understand its

18
00:00:46,800 --> 00:00:49,559
security and not only the AES itself but

19
00:00:49,559 --> 00:00:51,300
also components of the AES because

20
00:00:51,300 --> 00:00:52,500
they're reused in many different

21
00:00:52,500 --> 00:00:53,940
contexts because they're now very

22
00:00:53,940 --> 00:00:55,739
efficient in Hardware

23
00:00:55,739 --> 00:00:58,260
so we need to do cryptanalysis in order

24
00:00:58,260 --> 00:01:00,300
to understand the security

25
00:01:00,300 --> 00:01:02,160
because that's how we study the security

26
00:01:02,160 --> 00:01:04,680
in in symmetry cryptography

27
00:01:04,680 --> 00:01:06,420
so there are many different crypto

28
00:01:06,420 --> 00:01:08,220
analysis technique and in this talk I'm

29
00:01:08,220 --> 00:01:09,680
going to to

30
00:01:09,680 --> 00:01:12,600
talk about the boomerang attack

31
00:01:12,600 --> 00:01:14,820
which is a technique that was proposed

32
00:01:14,820 --> 00:01:18,180
in 1999 by Wagner and the idea is that

33
00:01:18,180 --> 00:01:20,700
instead of analyzing the full Cipher you

34
00:01:20,700 --> 00:01:24,060
split it in two halves e0 E1 and you

35
00:01:24,060 --> 00:01:27,000
look at two differentials so you have a

36
00:01:27,000 --> 00:01:29,460
differential Delta into Delta outs

37
00:01:29,460 --> 00:01:33,060
through e0 and another differential into

38
00:01:33,060 --> 00:01:36,960
nabla outs through E1 and we will denote

39
00:01:36,960 --> 00:01:39,540
the probability of the first one as p on

40
00:01:39,540 --> 00:01:41,159
the second one as Q

41
00:01:41,159 --> 00:01:43,259
so you assume you have this

42
00:01:43,259 --> 00:01:45,659
decomposition of your Cipher

43
00:01:45,659 --> 00:01:48,479
and the idea in the boomerang is to use

44
00:01:48,479 --> 00:01:49,979
those two differentials that have been

45
00:01:49,979 --> 00:01:52,079
built independently and for this we're

46
00:01:52,079 --> 00:01:53,460
going to use both an encryption or

47
00:01:53,460 --> 00:01:55,259
recall and a decryption or recall so

48
00:01:55,259 --> 00:01:57,060
it's an Adaptive attack and we're going

49
00:01:57,060 --> 00:01:59,340
to build quartets so let me try to

50
00:01:59,340 --> 00:02:02,460
explain a little bit more how it works

51
00:02:02,460 --> 00:02:04,740
so you start with a pair of plain text

52
00:02:04,740 --> 00:02:07,860
PVP Prime with a difference Delta in you

53
00:02:07,860 --> 00:02:11,580
encrypt them you get two Cipher texts

54
00:02:11,580 --> 00:02:13,080
but you don't look at the difference

55
00:02:13,080 --> 00:02:14,700
between those two Cipher tags because

56
00:02:14,700 --> 00:02:16,560
you cannot say anything useful about

57
00:02:16,560 --> 00:02:17,760
them because you don't have a

58
00:02:17,760 --> 00:02:20,040
differential proven whole Cipher so

59
00:02:20,040 --> 00:02:21,420
instead what you do is that you're going

60
00:02:21,420 --> 00:02:23,640
to shift your ciphertext into new

61
00:02:23,640 --> 00:02:26,940
ciphertext c bar and C bar Prime by

62
00:02:26,940 --> 00:02:29,340
applying the different snap layouts and

63
00:02:29,340 --> 00:02:31,920
then you decipher those new ciphertext

64
00:02:31,920 --> 00:02:34,739
and you get P bar and P bar Prime now

65
00:02:34,739 --> 00:02:36,000
you're going to look at the difference

66
00:02:36,000 --> 00:02:38,520
between P bar and P bar Prime and you

67
00:02:38,520 --> 00:02:41,099
check whether it is Delta in or not and

68
00:02:41,099 --> 00:02:42,480
if it's Delta n we say that the

69
00:02:42,480 --> 00:02:44,519
boomerang returns because you start with

70
00:02:44,519 --> 00:02:46,680
your pair of plain texts you throw them

71
00:02:46,680 --> 00:02:48,900
inside the cipher they come back and you

72
00:02:48,900 --> 00:02:51,180
get the same difference

73
00:02:51,180 --> 00:02:52,920
and this is interesting because there's

74
00:02:52,920 --> 00:02:54,420
a good probability that it actually

75
00:02:54,420 --> 00:02:56,700
returns and you can estimate the

76
00:02:56,700 --> 00:03:00,000
probability as P Square Q square and you

77
00:03:00,000 --> 00:03:02,400
get this just by looking at the four

78
00:03:02,400 --> 00:03:05,459
different parts of the cipher

79
00:03:05,459 --> 00:03:06,900
and in fact this gives you a

80
00:03:06,900 --> 00:03:08,340
distinguisher because if this

81
00:03:08,340 --> 00:03:10,440
probability is high enough if it's

82
00:03:10,440 --> 00:03:12,599
higher than 2 to the minus n then you

83
00:03:12,599 --> 00:03:14,159
can just repeat this with many different

84
00:03:14,159 --> 00:03:15,959
pairs and if you see one pair that

85
00:03:15,959 --> 00:03:17,700
returns it means you have your block

86
00:03:17,700 --> 00:03:21,239
Cipher and not a random permutation

87
00:03:21,239 --> 00:03:23,640
so in this talk I'm going to look at the

88
00:03:23,640 --> 00:03:26,340
boomerang crypto analysis but in the

89
00:03:26,340 --> 00:03:28,140
context of truncated differentials so

90
00:03:28,140 --> 00:03:29,940
it's slightly different it's actually

91
00:03:29,940 --> 00:03:32,159
not a new idea it's already in the paper

92
00:03:32,159 --> 00:03:34,980
by Wagner in 1999 but we're going to do

93
00:03:34,980 --> 00:03:37,080
it in a more systematic way and we're

94
00:03:37,080 --> 00:03:39,000
going to look at how to use structures

95
00:03:39,000 --> 00:03:40,980
on the plain text and ciphertext site

96
00:03:40,980 --> 00:03:43,620
and how to do distinguishers and also

97
00:03:43,620 --> 00:03:46,140
key recovery and the goal is to obtain

98
00:03:46,140 --> 00:03:48,480
generic formulas and then when we have a

99
00:03:48,480 --> 00:03:50,159
nice formula we can apply it to many

100
00:03:50,159 --> 00:03:51,900
different attacks but we're going to

101
00:03:51,900 --> 00:03:53,760
revisit a previous attack on six round

102
00:03:53,760 --> 00:03:55,920
AES and we we will improve the

103
00:03:55,920 --> 00:03:59,280
complexity from 2 to 71 to 2 to the 61

104
00:03:59,280 --> 00:04:02,340
and we can also apply you a framework to

105
00:04:02,340 --> 00:04:05,459
various constructions kiazu TNT on

106
00:04:05,459 --> 00:04:06,959
Deoxys and we're going to obtain the

107
00:04:06,959 --> 00:04:09,840
best attacks on those ciphers

108
00:04:09,840 --> 00:04:11,400
so let's start with the truncated

109
00:04:11,400 --> 00:04:13,500
boomerang distinguisher

110
00:04:13,500 --> 00:04:16,500
so first what is truncated differential

111
00:04:16,500 --> 00:04:18,779
clip analysis it's basically a

112
00:04:18,779 --> 00:04:20,639
generalization of differential crypto

113
00:04:20,639 --> 00:04:23,639
analysis but instead of looking at the

114
00:04:23,639 --> 00:04:25,500
full difference in the state which

115
00:04:25,500 --> 00:04:27,720
truncate this information and we only

116
00:04:27,720 --> 00:04:30,060
look at some partial information for

117
00:04:30,060 --> 00:04:31,800
instance we only look at what bytes are

118
00:04:31,800 --> 00:04:34,440
active or inactive so we only know

119
00:04:34,440 --> 00:04:36,060
whether the difference is zero or

120
00:04:36,060 --> 00:04:38,520
non-zero and then we can follow track

121
00:04:38,520 --> 00:04:40,199
this information through the cipher

122
00:04:40,199 --> 00:04:42,720
after each round we look at each byte

123
00:04:42,720 --> 00:04:44,880
whether it's active or not and we can

124
00:04:44,880 --> 00:04:46,620
build a tray like this and compute the

125
00:04:46,620 --> 00:04:48,060
probability

126
00:04:48,060 --> 00:04:50,100
so in this talk I'm going to use a

127
00:04:50,100 --> 00:04:53,160
slightly different view I will only look

128
00:04:53,160 --> 00:04:55,560
at sets of differences so we have a set

129
00:04:55,560 --> 00:04:58,800
D in and the set D out for the output

130
00:04:58,800 --> 00:05:01,020
and we look at the probability if you

131
00:05:01,020 --> 00:05:02,639
take a random difference in the input

132
00:05:02,639 --> 00:05:03,720
set

133
00:05:03,720 --> 00:05:05,820
that after the cipher you get a

134
00:05:05,820 --> 00:05:08,400
difference that is in the output sets so

135
00:05:08,400 --> 00:05:10,680
we denote this probability P forward and

136
00:05:10,680 --> 00:05:13,500
it's the probability for a random Delta

137
00:05:13,500 --> 00:05:16,020
in inside the set but encryption of p

138
00:05:16,020 --> 00:05:19,139
plus encryption of p plus Delta n is in

139
00:05:19,139 --> 00:05:20,820
the set D out

140
00:05:20,820 --> 00:05:22,800
and you can also Define the probability

141
00:05:22,800 --> 00:05:25,860
in the backward Direction and in general

142
00:05:25,860 --> 00:05:27,900
it's not the same when you have a

143
00:05:27,900 --> 00:05:29,400
truncated Trail you can have two

144
00:05:29,400 --> 00:05:31,500
different probabilities

145
00:05:31,500 --> 00:05:33,840
so to give you an example we can look at

146
00:05:33,840 --> 00:05:35,639
the AES because this will be an

147
00:05:35,639 --> 00:05:38,160
important example in this work and

148
00:05:38,160 --> 00:05:40,259
there's a very well known three-round

149
00:05:40,259 --> 00:05:41,940
truncated Trail

150
00:05:41,940 --> 00:05:44,400
and the idea is that you start with a

151
00:05:44,400 --> 00:05:47,639
difference in one diagonal

152
00:05:47,639 --> 00:05:49,680
so you have 2 to the 32 possible

153
00:05:49,680 --> 00:05:51,240
differences that are active in this

154
00:05:51,240 --> 00:05:53,220
diagonal so the set of input difference

155
00:05:53,220 --> 00:05:55,800
is of size 2 to the 32.

156
00:05:55,800 --> 00:05:58,020
and you look at what happens when you go

157
00:05:58,020 --> 00:06:00,120
through the cipher and so after sub byte

158
00:06:00,120 --> 00:06:01,560
you still have the same cells that are

159
00:06:01,560 --> 00:06:04,080
active after shift row your diagonal

160
00:06:04,080 --> 00:06:06,479
moves to a column and then you have a

161
00:06:06,479 --> 00:06:08,280
mixed column operation and with some

162
00:06:08,280 --> 00:06:10,440
probability you will have only one

163
00:06:10,440 --> 00:06:12,960
active cell after mixed colon and this

164
00:06:12,960 --> 00:06:14,699
happens with probability 2 to the minus

165
00:06:14,699 --> 00:06:17,639
24. and if this happens then with

166
00:06:17,639 --> 00:06:19,800
probability 1 you can track how this

167
00:06:19,800 --> 00:06:22,380
evolves in the next round and after one

168
00:06:22,380 --> 00:06:25,199
round you get an active column and after

169
00:06:25,199 --> 00:06:29,100
an third round you get a state that is

170
00:06:29,100 --> 00:06:31,680
active in all cells

171
00:06:31,680 --> 00:06:35,039
but not with a random difference

172
00:06:35,039 --> 00:06:37,080
these difference must be in a set of

173
00:06:37,080 --> 00:06:39,300
size 2 to the 32 because before the

174
00:06:39,300 --> 00:06:41,639
Final Mix column you only have four

175
00:06:41,639 --> 00:06:43,380
active cells

176
00:06:43,380 --> 00:06:45,539
so you have this Trail you start from a

177
00:06:45,539 --> 00:06:47,639
set of 2 to the 32 difference and you

178
00:06:47,639 --> 00:06:49,199
end with a set of 2 to the 32

179
00:06:49,199 --> 00:06:51,180
differences and you have probability 2

180
00:06:51,180 --> 00:06:53,280
to the minus 24 and if you take it

181
00:06:53,280 --> 00:06:55,319
backwards you have something similar

182
00:06:55,319 --> 00:06:56,880
where you have a probability 2 to the

183
00:06:56,880 --> 00:06:59,220
minus 24 to collapse inside a mixed

184
00:06:59,220 --> 00:07:00,660
column

185
00:07:00,660 --> 00:07:03,060
so this will be the basis of our attacks

186
00:07:03,060 --> 00:07:04,860
and interesting it's interesting to see

187
00:07:04,860 --> 00:07:06,600
that looking at truncated trade you get

188
00:07:06,600 --> 00:07:09,120
a probability that is better that if you

189
00:07:09,120 --> 00:07:11,220
would try to fix all the differences in

190
00:07:11,220 --> 00:07:13,199
the middle

191
00:07:13,199 --> 00:07:15,240
so how can you use this in a boomerang

192
00:07:15,240 --> 00:07:16,199
attack

193
00:07:16,199 --> 00:07:18,360
well it's very similar to the boomerang

194
00:07:18,360 --> 00:07:21,599
with normal differentials but now

195
00:07:21,599 --> 00:07:23,639
everything is truncated differentials so

196
00:07:23,639 --> 00:07:25,740
you start with a pair of plain text with

197
00:07:25,740 --> 00:07:27,660
a difference Delta in but we don't fix

198
00:07:27,660 --> 00:07:30,539
this difference Delta in we can pick any

199
00:07:30,539 --> 00:07:31,979
difference in the set of good

200
00:07:31,979 --> 00:07:33,120
differences

201
00:07:33,120 --> 00:07:35,460
then we encrypt them we shift the

202
00:07:35,460 --> 00:07:38,039
ciphertext and again we don't shift by a

203
00:07:38,039 --> 00:07:40,800
fixed value we can pick any value in the

204
00:07:40,800 --> 00:07:43,199
set of good output differences and in

205
00:07:43,199 --> 00:07:45,419
particular we can pick different values

206
00:07:45,419 --> 00:07:48,419
from nabla out and nabla out Prime

207
00:07:48,419 --> 00:07:50,940
and then we decrypt this and when we get

208
00:07:50,940 --> 00:07:52,979
the new plain text instead of looking

209
00:07:52,979 --> 00:07:55,979
for a fixed difference for the returning

210
00:07:55,979 --> 00:07:58,979
values we allow any difference in this

211
00:07:58,979 --> 00:08:01,740
set Delta in

212
00:08:01,740 --> 00:08:03,300
and now when we Analyze This

213
00:08:03,300 --> 00:08:04,500
Construction

214
00:08:04,500 --> 00:08:06,660
we can compute the probability that the

215
00:08:06,660 --> 00:08:09,780
boomerang returns and we get a formula

216
00:08:09,780 --> 00:08:12,120
like this the probability will be P

217
00:08:12,120 --> 00:08:14,819
forward times P backwards time Q

218
00:08:14,819 --> 00:08:18,180
backwards Square time R so it's similar

219
00:08:18,180 --> 00:08:21,599
to the the basic case with normal

220
00:08:21,599 --> 00:08:24,000
differentials but it's slightly

221
00:08:24,000 --> 00:08:24,960
different

222
00:08:24,960 --> 00:08:27,840
because you have this R terms that comes

223
00:08:27,840 --> 00:08:30,539
as an additional factor and also you

224
00:08:30,539 --> 00:08:32,339
have to look at which direction you use

225
00:08:32,339 --> 00:08:33,599
for each trade

226
00:08:33,599 --> 00:08:36,179
so why do we get this formula well we

227
00:08:36,179 --> 00:08:38,219
start with a pair PP Prime

228
00:08:38,219 --> 00:08:40,679
and with some probability when you

229
00:08:40,679 --> 00:08:42,958
encrypt them through e0 you get x x

230
00:08:42,958 --> 00:08:44,940
Prime with a good difference Delta out

231
00:08:44,940 --> 00:08:46,740
that is in the set that you want to

232
00:08:46,740 --> 00:08:48,300
reach and this happens with probability

233
00:08:48,300 --> 00:08:50,959
P forward

234
00:08:51,060 --> 00:08:53,100
then you shift your ciphertext you

235
00:08:53,100 --> 00:08:54,660
decrypt and then we can look at what

236
00:08:54,660 --> 00:08:57,180
happens in the bottom parts and with

237
00:08:57,180 --> 00:08:59,100
some probability uh your difference

238
00:08:59,100 --> 00:09:01,740
nebula out will go to a different snabla

239
00:09:01,740 --> 00:09:03,660
in that is in the set following the

240
00:09:03,660 --> 00:09:05,220
trail and this happens with probability

241
00:09:05,220 --> 00:09:08,399
Q backwards it's the same thing on the

242
00:09:08,399 --> 00:09:10,200
other side of a boomerang

243
00:09:10,200 --> 00:09:11,820
and then if you have those three

244
00:09:11,820 --> 00:09:14,580
conditions so Delta out is in the set

245
00:09:14,580 --> 00:09:17,399
nabla in is in the set blah blah Prime

246
00:09:17,399 --> 00:09:19,860
in is in the set and then with some

247
00:09:19,860 --> 00:09:22,560
probability the fourth side of this

248
00:09:22,560 --> 00:09:25,440
Square will also be in the good set and

249
00:09:25,440 --> 00:09:27,959
we denote this probability R and in

250
00:09:27,959 --> 00:09:30,959
general you can compute it if you have

251
00:09:30,959 --> 00:09:32,640
if you have Vector spaces you can

252
00:09:32,640 --> 00:09:34,380
compute it as the intersection of some

253
00:09:34,380 --> 00:09:37,080
Vector spaces but in fact in all our

254
00:09:37,080 --> 00:09:39,060
application we found out that the only

255
00:09:39,060 --> 00:09:42,060
case where this works is if nabla in is

256
00:09:42,060 --> 00:09:44,279
actually equal to nabla Prime in

257
00:09:44,279 --> 00:09:46,560
because then you just have Delta Prime

258
00:09:46,560 --> 00:09:48,540
out equal to Delta out and then of

259
00:09:48,540 --> 00:09:50,220
course it's in the set because Delta

260
00:09:50,220 --> 00:09:52,800
Delta out was in the set

261
00:09:52,800 --> 00:09:54,600
and then finally you look at the last

262
00:09:54,600 --> 00:09:56,940
part when you start from X bar X Prime

263
00:09:56,940 --> 00:09:58,560
Bar you decrypt then and with some

264
00:09:58,560 --> 00:10:01,200
probability you end up in the set and so

265
00:10:01,200 --> 00:10:03,300
you have those five events and if

266
00:10:03,300 --> 00:10:05,100
everything is satisfied and if we assume

267
00:10:05,100 --> 00:10:07,080
that everything is Independence then we

268
00:10:07,080 --> 00:10:10,440
obtain the probability of returning

269
00:10:10,440 --> 00:10:13,320
so that's uh that's a very important

270
00:10:13,320 --> 00:10:15,720
formula and it will be used in all the

271
00:10:15,720 --> 00:10:18,140
remaining

272
00:10:18,839 --> 00:10:21,660
so uh now to build a distinguisher from

273
00:10:21,660 --> 00:10:23,339
this probability we're going to use

274
00:10:23,339 --> 00:10:25,019
structures because that's something we

275
00:10:25,019 --> 00:10:26,220
do every time we have truncated

276
00:10:26,220 --> 00:10:28,740
differentials and the idea is that if

277
00:10:28,740 --> 00:10:30,720
you start from one plain text

278
00:10:30,720 --> 00:10:32,820
you build all the plaintext with

279
00:10:32,820 --> 00:10:35,040
differences in the set and we assume

280
00:10:35,040 --> 00:10:37,080
that the set is a vector space and then

281
00:10:37,080 --> 00:10:39,300
you can take any two values any two

282
00:10:39,300 --> 00:10:41,399
plane text in this set and their

283
00:10:41,399 --> 00:10:43,260
differences will also be in your good

284
00:10:43,260 --> 00:10:44,399
sets

285
00:10:44,399 --> 00:10:48,360
so you build a set of some size and then

286
00:10:48,360 --> 00:10:50,220
you get the quadratic numbers of pairs

287
00:10:50,220 --> 00:10:52,140
that you can use for your attack so you

288
00:10:52,140 --> 00:10:54,540
you gain a lot thanks to to this

289
00:10:54,540 --> 00:10:56,880
property and we can actually do the same

290
00:10:56,880 --> 00:10:58,800
thing for the ciphertext so you start

291
00:10:58,800 --> 00:11:00,420
from one plain text you build a

292
00:11:00,420 --> 00:11:03,000
structure you encrypt the structure and

293
00:11:03,000 --> 00:11:04,860
then each ciphertext in your structure

294
00:11:04,860 --> 00:11:08,000
you can shift it by many different

295
00:11:08,000 --> 00:11:11,220
values on the ciphertext size

296
00:11:11,220 --> 00:11:13,560
and then you take all those values and

297
00:11:13,560 --> 00:11:15,480
you decrypt them so in the end you get

298
00:11:15,480 --> 00:11:17,360
the structure of size

299
00:11:17,360 --> 00:11:20,339
of the input difference times the size

300
00:11:20,339 --> 00:11:22,500
of the output different set

301
00:11:22,500 --> 00:11:24,240
and you have a number of quartets that

302
00:11:24,240 --> 00:11:26,100
you can use which is the square office

303
00:11:26,100 --> 00:11:27,540
so you really have a very strong

304
00:11:27,540 --> 00:11:29,940
structure effect in this attack and this

305
00:11:29,940 --> 00:11:31,920
is something that wasn't really done

306
00:11:31,920 --> 00:11:34,380
properly in previous works

307
00:11:34,380 --> 00:11:36,000
and so to give you an example we can

308
00:11:36,000 --> 00:11:38,100
apply this to build a six round attack

309
00:11:38,100 --> 00:11:40,740
on vas so we start from the trail that

310
00:11:40,740 --> 00:11:43,320
we've already seen and we have first

311
00:11:43,320 --> 00:11:45,420
parameters that we can just compute from

312
00:11:45,420 --> 00:11:47,279
the trail

313
00:11:47,279 --> 00:11:49,740
and so in one structure we have 2 to the

314
00:11:49,740 --> 00:11:53,279
64 values because we have two 32 choices

315
00:11:53,279 --> 00:11:55,079
on the plain text and then each

316
00:11:55,079 --> 00:11:56,279
ciphertext

317
00:11:56,279 --> 00:11:59,279
is shifted in 2 to the 32 different ways

318
00:11:59,279 --> 00:12:01,200
and then we decrypt everything

319
00:12:01,200 --> 00:12:03,000
so this means in one structures we have

320
00:12:03,000 --> 00:12:06,899
two to the one 27 possible pairs to look

321
00:12:06,899 --> 00:12:08,459
at and those will be candidates for

322
00:12:08,459 --> 00:12:10,260
quartets

323
00:12:10,260 --> 00:12:12,540
and the probability of returning when

324
00:12:12,540 --> 00:12:14,220
you compute it with a formula you get 2

325
00:12:14,220 --> 00:12:17,160
to the 128 and this means on average you

326
00:12:17,160 --> 00:12:19,740
expect one half good quartets in a

327
00:12:19,740 --> 00:12:20,880
structure

328
00:12:20,880 --> 00:12:23,040
so it's not too bad

329
00:12:23,040 --> 00:12:26,100
what's slightly annoying is that in fact

330
00:12:26,100 --> 00:12:28,260
you have many wrong quartets because the

331
00:12:28,260 --> 00:12:31,440
filtering you get is only 96 bits of

332
00:12:31,440 --> 00:12:33,800
filtering because any difference

333
00:12:33,800 --> 00:12:36,779
on the returning side that is on one

334
00:12:36,779 --> 00:12:38,519
diagonal would be considered as a good

335
00:12:38,519 --> 00:12:39,959
difference so you actually have many

336
00:12:39,959 --> 00:12:43,260
false positive you have 2 to the 31 in

337
00:12:43,260 --> 00:12:45,600
each structure

338
00:12:45,600 --> 00:12:47,160
so that's a little bit annoying because

339
00:12:47,160 --> 00:12:49,500
you know if you have the AES you expect

340
00:12:49,500 --> 00:12:52,560
2 to the 31 plus one half quartet that's

341
00:12:52,560 --> 00:12:54,480
return and for random permutation you

342
00:12:54,480 --> 00:12:56,279
have 2 to the 31 so that's very close

343
00:12:56,279 --> 00:12:58,620
but you can distinguish them if you

344
00:12:58,620 --> 00:13:00,480
repeat enough time if you do a

345
00:13:00,480 --> 00:13:02,160
statistical analysis you see that you

346
00:13:02,160 --> 00:13:04,079
have to repeat about two to the 32 times

347
00:13:04,079 --> 00:13:06,480
and then you can distinguish and this

348
00:13:06,480 --> 00:13:07,620
means you have a distinguisherable

349
00:13:07,620 --> 00:13:10,860
complexity around 2 to the 96 of two

350
00:13:10,860 --> 00:13:12,480
small factors depending on the success

351
00:13:12,480 --> 00:13:14,160
rate that you want

352
00:13:14,160 --> 00:13:15,720
but that's really nice because we can

353
00:13:15,720 --> 00:13:17,760
use this property for a six round

354
00:13:17,760 --> 00:13:20,220
distinguisher on vas and it's a really

355
00:13:20,220 --> 00:13:22,920
simple distinguisher

356
00:13:22,920 --> 00:13:25,560
more generally you can do the analysis

357
00:13:25,560 --> 00:13:27,360
based on the parameters

358
00:13:27,360 --> 00:13:29,459
and what's important is the signal to

359
00:13:29,459 --> 00:13:31,440
noise ratio which is the ratio between

360
00:13:31,440 --> 00:13:33,839
the probability of a boomerang and the

361
00:13:33,839 --> 00:13:36,540
random probability of returning and if

362
00:13:36,540 --> 00:13:38,760
the signal to noise ratio is high then

363
00:13:38,760 --> 00:13:40,380
the attack is easy because all the

364
00:13:40,380 --> 00:13:42,600
quartets are good and if the ratio is

365
00:13:42,600 --> 00:13:45,660
low then you have to repeat uh the

366
00:13:45,660 --> 00:13:48,360
attack with a factor one over Sigma

367
00:13:48,360 --> 00:13:50,420
but we have a generic formula and we can

368
00:13:50,420 --> 00:13:53,399
compute the complexity and we can deduce

369
00:13:53,399 --> 00:13:55,800
the data complexity based on the size of

370
00:13:55,800 --> 00:13:57,660
the structures

371
00:13:57,660 --> 00:13:59,639
so now let's see how we turn this into a

372
00:13:59,639 --> 00:14:01,019
key recovery

373
00:14:01,019 --> 00:14:02,820
so usually if a way you build a key

374
00:14:02,820 --> 00:14:05,279
recovery is you add some rounds at the

375
00:14:05,279 --> 00:14:07,680
top of your distinguisher

376
00:14:07,680 --> 00:14:10,680
and the complexity usually goes up and

377
00:14:10,680 --> 00:14:12,540
what we do here is different we keep the

378
00:14:12,540 --> 00:14:14,220
same number of rounds but we try to

379
00:14:14,220 --> 00:14:16,920
extract information from the quartets

380
00:14:16,920 --> 00:14:20,160
that seem to follow the boomerang

381
00:14:20,160 --> 00:14:21,839
so the number of rounds will be the same

382
00:14:21,839 --> 00:14:26,040
but the complexity will go down so

383
00:14:26,040 --> 00:14:29,519
so the idea is we collect many quartets

384
00:14:29,519 --> 00:14:31,380
we assume they follow the trail and then

385
00:14:31,380 --> 00:14:33,600
we extract information about the key so

386
00:14:33,600 --> 00:14:35,279
if we are in the case where all quartets

387
00:14:35,279 --> 00:14:37,260
are good that's easy you just get the

388
00:14:37,260 --> 00:14:39,360
key if we are in the case we have a

389
00:14:39,360 --> 00:14:41,880
signal to noise ratio is low you have to

390
00:14:41,880 --> 00:14:43,980
collect many quartets most of them will

391
00:14:43,980 --> 00:14:45,000
be wrong

392
00:14:45,000 --> 00:14:47,220
but if you build counters for each key

393
00:14:47,220 --> 00:14:49,440
candidate you will still get a signal on

394
00:14:49,440 --> 00:14:51,180
the right key will come up after some

395
00:14:51,180 --> 00:14:52,560
time

396
00:14:52,560 --> 00:14:54,600
so looking at the the sixth round

397
00:14:54,600 --> 00:14:56,160
example again

398
00:14:56,160 --> 00:14:58,920
how do we extract key information well

399
00:14:58,920 --> 00:15:01,019
we can look at the first round and when

400
00:15:01,019 --> 00:15:04,079
we have a quartet we have a value PP

401
00:15:04,079 --> 00:15:06,420
Prime that we assume follow the trail

402
00:15:06,420 --> 00:15:09,120
and based on this value PP Prime we can

403
00:15:09,120 --> 00:15:11,880
get information from the diagonal of the

404
00:15:11,880 --> 00:15:13,320
first key

405
00:15:13,320 --> 00:15:15,480
because we know that after one round we

406
00:15:15,480 --> 00:15:17,579
want the difference to collapse to just

407
00:15:17,579 --> 00:15:19,260
one active State and this is determined

408
00:15:19,260 --> 00:15:22,079
by just the first diagonal of the key

409
00:15:22,079 --> 00:15:24,240
and on average we expect that 2 to the

410
00:15:24,240 --> 00:15:26,880
eight key candidates out of 2 to the 32

411
00:15:26,880 --> 00:15:29,639
will satisfy this property and we can do

412
00:15:29,639 --> 00:15:32,160
this for PP Prime and because we have a

413
00:15:32,160 --> 00:15:33,839
quartet we also have another pair that

414
00:15:33,839 --> 00:15:35,399
can be used to extract key information

415
00:15:35,399 --> 00:15:38,100
let's prepare P bar P bar Prime so we

416
00:15:38,100 --> 00:15:40,139
get a different set of 22 V8 candidates

417
00:15:40,139 --> 00:15:42,839
and we when we intersect them on average

418
00:15:42,839 --> 00:15:46,740
we expect 2 to the minus 16 candidates

419
00:15:46,740 --> 00:15:48,360
you can do the same on the last round

420
00:15:48,360 --> 00:15:51,420
and in total you get 2 to the minus 32

421
00:15:51,420 --> 00:15:54,180
candidates for 64 bits of the key so

422
00:15:54,180 --> 00:15:55,260
this means when you have the wrong

423
00:15:55,260 --> 00:15:58,079
candidates usually you get no key

424
00:15:58,079 --> 00:15:59,880
candidate so you you can actually

425
00:15:59,880 --> 00:16:02,760
recognize that it's a false quartet and

426
00:16:02,760 --> 00:16:04,260
it fits the right one of course you will

427
00:16:04,260 --> 00:16:06,600
get the correct key that comes up

428
00:16:06,600 --> 00:16:09,779
so starting from s structures we have

429
00:16:09,779 --> 00:16:12,240
seen already that we have S times 2 to

430
00:16:12,240 --> 00:16:14,880
the 31 returning quartets

431
00:16:14,880 --> 00:16:17,339
most of most of them are fake positives

432
00:16:17,339 --> 00:16:19,740
but they actually only suggest a small

433
00:16:19,740 --> 00:16:21,720
number of wrong keys because most of

434
00:16:21,720 --> 00:16:24,180
them don't suggest any key so we have S

435
00:16:24,180 --> 00:16:27,240
over two suggestions for wrong keys

436
00:16:27,240 --> 00:16:29,820
and we have S over two right quartets

437
00:16:29,820 --> 00:16:32,220
and this gives s over two suggestions

438
00:16:32,220 --> 00:16:34,139
for the correct key so it's actually

439
00:16:34,139 --> 00:16:35,880
very easy to recognize the correct key

440
00:16:35,880 --> 00:16:38,579
because most half of the suggestions are

441
00:16:38,579 --> 00:16:39,839
correct

442
00:16:39,839 --> 00:16:42,180
so we get a key recovery attack with

443
00:16:42,180 --> 00:16:45,060
complexity around 2 to the 64 with small

444
00:16:45,060 --> 00:16:48,060
factors depending on your success rate

445
00:16:48,060 --> 00:16:50,579
so we can also do the analysis uh in a

446
00:16:50,579 --> 00:16:52,019
generic way and we have a generic

447
00:16:52,019 --> 00:16:55,079
formula for the key recovery parts

448
00:16:55,079 --> 00:16:56,820
and what's important here is that the

449
00:16:56,820 --> 00:16:59,160
signal to noise ratio gets better and

450
00:16:59,160 --> 00:17:01,139
you have an extra factor to the Kappa

451
00:17:01,139 --> 00:17:03,120
over L which comes from the parameters

452
00:17:03,120 --> 00:17:06,419
of the the key recovery phase and again

453
00:17:06,419 --> 00:17:08,280
if your signal to noise ratio is high

454
00:17:08,280 --> 00:17:10,740
the attack is easy if it's slow you have

455
00:17:10,740 --> 00:17:12,780
to repeat a bit more but in all cases we

456
00:17:12,780 --> 00:17:14,099
get something that's better than the

457
00:17:14,099 --> 00:17:16,319
distinguisher

458
00:17:16,319 --> 00:17:19,439
and then to summarize we can do this on

459
00:17:19,439 --> 00:17:21,839
six round AES and we

460
00:17:21,839 --> 00:17:24,179
we get actually some really nice results

461
00:17:24,179 --> 00:17:25,740
because there's been a lot of work

462
00:17:25,740 --> 00:17:28,500
recently on six round AES

463
00:17:28,500 --> 00:17:30,480
there's been many recent papers on

464
00:17:30,480 --> 00:17:32,040
distinguishers

465
00:17:32,040 --> 00:17:34,740
and we can see now that the truncated

466
00:17:34,740 --> 00:17:36,720
Boomerang gives a very nice

467
00:17:36,720 --> 00:17:39,059
distinguisher that's competitive with a

468
00:17:39,059 --> 00:17:40,260
previous work even though that's

469
00:17:40,260 --> 00:17:42,720
actually a very old technique

470
00:17:42,720 --> 00:17:45,179
when we do key recovery we also get a

471
00:17:45,179 --> 00:17:46,919
really interesting result it's not the

472
00:17:46,919 --> 00:17:48,780
best result because the partial sum

473
00:17:48,780 --> 00:17:51,539
technique is still the best attack on

474
00:17:51,539 --> 00:17:54,179
six round AES but it's still competitive

475
00:17:54,179 --> 00:17:56,400
with recent work but we can also use it

476
00:17:56,400 --> 00:17:58,500
in the context with a secret s box which

477
00:17:58,500 --> 00:18:00,840
is a nice context where very few attacks

478
00:18:00,840 --> 00:18:02,340
can be applied but the boomerang

479
00:18:02,340 --> 00:18:04,559
actually works

480
00:18:04,559 --> 00:18:06,960
so I will quickly talk about other

481
00:18:06,960 --> 00:18:08,820
applications

482
00:18:08,820 --> 00:18:10,919
so the first one which is quite nice is

483
00:18:10,919 --> 00:18:12,960
on kiazu so kiazu is a tweakable black

484
00:18:12,960 --> 00:18:15,960
Cipher based on the As and because it's

485
00:18:15,960 --> 00:18:17,520
a tweakable block Cipher you can have

486
00:18:17,520 --> 00:18:19,440
differences in The Tweak that will be

487
00:18:19,440 --> 00:18:22,080
introduced inside your state and because

488
00:18:22,080 --> 00:18:23,760
of this you can have a four round

489
00:18:23,760 --> 00:18:26,700
truncated trail with one extra round in

490
00:18:26,700 --> 00:18:28,380
the middle that is completely inactive

491
00:18:28,380 --> 00:18:29,880
because the difference in the states

492
00:18:29,880 --> 00:18:31,919
cancels with a difference from The Tweak

493
00:18:31,919 --> 00:18:34,380
and this gives you one round for free

494
00:18:34,380 --> 00:18:36,179
so this Trail has probability 2 to the

495
00:18:36,179 --> 00:18:38,520
minus 32 you can compute all the

496
00:18:38,520 --> 00:18:40,740
parameters and actually you just have to

497
00:18:40,740 --> 00:18:42,840
take the generic formula that we get and

498
00:18:42,840 --> 00:18:44,460
you obtain the complexity of the attack

499
00:18:44,460 --> 00:18:47,460
and it's about to be 80 with some small

500
00:18:47,460 --> 00:18:49,559
factors so maybe two to be 83 if you

501
00:18:49,559 --> 00:18:51,900
want actually a good success probability

502
00:18:51,900 --> 00:18:54,299
and that's much better than the previous

503
00:18:54,299 --> 00:18:56,580
attack which was also using the same

504
00:18:56,580 --> 00:18:57,960
type of techniques boom wrong with

505
00:18:57,960 --> 00:19:00,240
truncated Trace but by doing this

506
00:19:00,240 --> 00:19:02,580
systematic analysis we actually get much

507
00:19:02,580 --> 00:19:04,020
better results because now we can

508
00:19:04,020 --> 00:19:07,380
integrate a lot of tricks inside and we

509
00:19:07,380 --> 00:19:10,440
get a nice Improvement

510
00:19:10,440 --> 00:19:12,660
so another application is Deoxys which

511
00:19:12,660 --> 00:19:14,640
is another tweakable block Cipher based

512
00:19:14,640 --> 00:19:15,960
on AES

513
00:19:15,960 --> 00:19:18,840
in this case the trails are quite messy

514
00:19:18,840 --> 00:19:21,480
so I will not show them and in fact in

515
00:19:21,480 --> 00:19:23,340
previous Works they've been obtained

516
00:19:23,340 --> 00:19:26,039
with a milp model and we're going to do

517
00:19:26,039 --> 00:19:28,080
the same we have built a milk model that

518
00:19:28,080 --> 00:19:31,740
integrates truncated characteristics

519
00:19:31,740 --> 00:19:34,200
and what we do is that we put all the

520
00:19:34,200 --> 00:19:36,120
parameters for the key recovery inside

521
00:19:36,120 --> 00:19:37,980
the model because now we have a nice

522
00:19:37,980 --> 00:19:40,320
formula on all the parameters are given

523
00:19:40,320 --> 00:19:42,480
directly by the trail so we can get the

524
00:19:42,480 --> 00:19:45,000
data complexity of a key recovery and we

525
00:19:45,000 --> 00:19:46,620
can give this as an objective for the

526
00:19:46,620 --> 00:19:48,960
milk and we guessed we get the tag that

527
00:19:48,960 --> 00:19:52,919
are better than previous works

528
00:19:52,919 --> 00:19:55,500
and finally we also looked at tntas

529
00:19:55,500 --> 00:19:57,419
which is another construction where you

530
00:19:57,419 --> 00:19:59,460
do just six round AES then you

531
00:19:59,460 --> 00:20:02,100
accelerate tweak sixth round and yes uxr

532
00:20:02,100 --> 00:20:04,200
the same tweak and again six round AES

533
00:20:04,200 --> 00:20:07,320
so it's a very simple Construction

534
00:20:07,320 --> 00:20:09,539
and it it's interesting because it's

535
00:20:09,539 --> 00:20:12,960
basically using six round AES as a

536
00:20:12,960 --> 00:20:13,980
building block

537
00:20:13,980 --> 00:20:15,600
and I've shown that we have a

538
00:20:15,600 --> 00:20:17,700
distinguisher on six round AES so it's

539
00:20:17,700 --> 00:20:19,440
interesting to see whether we can apply

540
00:20:19,440 --> 00:20:22,500
it in this context and actually we can

541
00:20:22,500 --> 00:20:24,660
because we can build boomerangs for the

542
00:20:24,660 --> 00:20:27,360
middle part using the tweak and we get

543
00:20:27,360 --> 00:20:29,640
something that's not exactly an attack

544
00:20:29,640 --> 00:20:31,320
because you can see it's actually a

545
00:20:31,320 --> 00:20:33,179
distinguisher with complexity two to the

546
00:20:33,179 --> 00:20:36,059
127.8

547
00:20:36,059 --> 00:20:38,640
so I wouldn't call it an attack but it's

548
00:20:38,640 --> 00:20:40,860
uh still a nice result showing that the

549
00:20:40,860 --> 00:20:42,600
distinguisher can be applied and does

550
00:20:42,600 --> 00:20:45,000
something

551
00:20:45,000 --> 00:20:47,880
and I think I'm out of time so I will

552
00:20:47,880 --> 00:20:50,640
stop here but thank you for listening

553
00:20:50,640 --> 00:20:53,120
thank you

554
00:20:55,260 --> 00:20:56,660
um

555
00:20:56,660 --> 00:21:00,179
I'm not sure we are have a well time for

556
00:21:00,179 --> 00:21:04,160
questions except if one knows a very

557
00:21:04,160 --> 00:21:06,900
short question uh calling for a very

558
00:21:06,900 --> 00:21:09,860
short answer

559
00:21:11,220 --> 00:21:13,220
um

560
00:21:16,260 --> 00:21:18,660
just one very good question for example

561
00:21:18,660 --> 00:21:20,460
for the sixth round is I understand that

562
00:21:20,460 --> 00:21:22,260
you start from six round distinguisher

563
00:21:22,260 --> 00:21:23,580
and then try to integrate the key

564
00:21:23,580 --> 00:21:25,679
recovery inside to reduce so did you

565
00:21:25,679 --> 00:21:27,360
compare with trying to get like three

566
00:21:27,360 --> 00:21:29,760
rounds and two rounds uh Boomerang and

567
00:21:29,760 --> 00:21:31,380
then putting a classical kind of

568
00:21:31,380 --> 00:21:34,440
recovery on top of this and how this

569
00:21:34,440 --> 00:21:36,419
will fare compared to okay yeah that's a

570
00:21:36,419 --> 00:21:38,159
very good question so uh actually if you

571
00:21:38,159 --> 00:21:39,659
do it in a more classical way you get

572
00:21:39,659 --> 00:21:42,000
essentially the same results

573
00:21:42,000 --> 00:21:44,940
but uh integrating everything gives us a

574
00:21:44,940 --> 00:21:46,919
nicer formula and it's easier to to

575
00:21:46,919 --> 00:21:48,900
analyze it in general in particular to

576
00:21:48,900 --> 00:21:50,940
build the milk it's much easier to use

577
00:21:50,940 --> 00:21:52,980
this formula directly but you can also

578
00:21:52,980 --> 00:21:54,900
see it as a more classical key recovery

579
00:21:54,900 --> 00:21:56,640
and if you do it properly you get

580
00:21:56,640 --> 00:21:59,720
essentially the same result

581
00:22:00,299 --> 00:22:03,770
thank you let's uh thank you yeah

582
00:22:03,770 --> 00:22:09,639
[Applause]

583
00:22:22,080 --> 00:22:24,260
foreign

584
00:22:33,730 --> 00:22:36,809
[Music]

585
00:22:39,620 --> 00:22:42,770
[Music]

586
00:22:49,020 --> 00:22:51,179
thank you for the introduction so today

587
00:22:51,179 --> 00:22:54,240
in this talk I will present you a full

588
00:22:54,240 --> 00:22:56,220
break on the

589
00:22:56,220 --> 00:23:00,240
the main version of Speedy so this this

590
00:23:00,240 --> 00:23:01,940
attack actually is a differential

591
00:23:01,940 --> 00:23:03,780
differential attacks so the first thing

592
00:23:03,780 --> 00:23:05,520
that we'll do is I will introduce some

593
00:23:05,520 --> 00:23:07,020
basic concepts about differential

594
00:23:07,020 --> 00:23:09,299
hypnosis to set up notations

595
00:23:09,299 --> 00:23:11,940
then I will introduce you the

596
00:23:11,940 --> 00:23:14,760
specification of Speedy and finally we

597
00:23:14,760 --> 00:23:16,980
will get into the details of our attack

598
00:23:16,980 --> 00:23:18,120
so

599
00:23:18,120 --> 00:23:20,220
different track analysis

600
00:23:20,220 --> 00:23:21,900
so let's assume we have an acquisition

601
00:23:21,900 --> 00:23:24,600
function in EK that can encrypt P

602
00:23:24,600 --> 00:23:27,539
plaintix being to saf vertex C and what

603
00:23:27,539 --> 00:23:30,120
we can do is add some input difference

604
00:23:30,120 --> 00:23:34,200
and in p and get some other plain text P

605
00:23:34,200 --> 00:23:36,720
plus Delta in and one and we can try and

606
00:23:36,720 --> 00:23:38,940
then to witness whether we get a data

607
00:23:38,940 --> 00:23:40,860
data output

608
00:23:40,860 --> 00:23:43,860
and if we can witness like this

609
00:23:43,860 --> 00:23:46,080
propagation of difference very often

610
00:23:46,080 --> 00:23:47,820
let's say more often than what we would

611
00:23:47,820 --> 00:23:49,020
obtain for

612
00:23:49,020 --> 00:23:52,020
a random permutation then we can use

613
00:23:52,020 --> 00:23:53,820
this to build a differential

614
00:23:53,820 --> 00:23:55,559
distinguisher

615
00:23:55,559 --> 00:23:57,960
so now let's assume we have a

616
00:23:57,960 --> 00:23:59,520
differential distinguisher for some

617
00:23:59,520 --> 00:24:01,559
rounds of the block Cipher with the

618
00:24:01,559 --> 00:24:03,240
underlying probability to the minus P

619
00:24:03,240 --> 00:24:06,600
what we can do is extend it both at

620
00:24:06,600 --> 00:24:09,120
input and output into a key recovery

621
00:24:09,120 --> 00:24:11,159
with clear color rounds

622
00:24:11,159 --> 00:24:13,980
and what we would obtain is two sets D

623
00:24:13,980 --> 00:24:16,559
in and D out that are the propagation of

624
00:24:16,559 --> 00:24:19,039
Delta n and it are out respectively

625
00:24:19,039 --> 00:24:22,380
so we not to the in the size of the in

626
00:24:22,380 --> 00:24:24,900
and to do the out the Sovereign to the N

627
00:24:24,900 --> 00:24:27,539
is the side of the internal state

628
00:24:27,539 --> 00:24:30,659
so with this we can build a differential

629
00:24:30,659 --> 00:24:32,940
differential attack that splits into

630
00:24:32,940 --> 00:24:34,980
three uh three main parts so the first

631
00:24:34,980 --> 00:24:36,659
part is data generation so what we do

632
00:24:36,659 --> 00:24:39,900
here is we just do a call to the

633
00:24:39,900 --> 00:24:42,539
encryption Oracle to get some data so

634
00:24:42,539 --> 00:24:44,880
the complexity of this step is directly

635
00:24:44,880 --> 00:24:47,340
related to the underlying probability of

636
00:24:47,340 --> 00:24:49,440
the of the distinguisher so it's two to

637
00:24:49,440 --> 00:24:50,520
P plus one

638
00:24:50,520 --> 00:24:53,400
then once we have a get off data what we

639
00:24:53,400 --> 00:24:55,919
want to build is pairs that satisfies

640
00:24:55,919 --> 00:24:59,520
the input and output set so that falls

641
00:24:59,520 --> 00:25:01,620
the difference in the in input and

642
00:25:01,620 --> 00:25:04,200
difference in the out in output

643
00:25:04,200 --> 00:25:06,960
and so this step is called perceiving

644
00:25:06,960 --> 00:25:09,000
and the complexity here is both related

645
00:25:09,000 --> 00:25:10,380
to the

646
00:25:10,380 --> 00:25:12,600
to the to the probability and also to

647
00:25:12,600 --> 00:25:14,760
the size of the the sets uh the in and

648
00:25:14,760 --> 00:25:16,140
the out

649
00:25:16,140 --> 00:25:18,240
and finally uh once we have these

650
00:25:18,240 --> 00:25:21,059
differential pairs we can perform T

651
00:25:21,059 --> 00:25:23,880
recovery and recover actually the

652
00:25:23,880 --> 00:25:25,799
encryption key and the complexity of the

653
00:25:25,799 --> 00:25:28,320
last step is related to the amount of

654
00:25:28,320 --> 00:25:29,880
pairs with the other in the previous

655
00:25:29,880 --> 00:25:32,179
step

656
00:25:32,700 --> 00:25:34,799
and what we want to do if we want to

657
00:25:34,799 --> 00:25:36,419
have an efficient attack is to minimize

658
00:25:36,419 --> 00:25:38,340
the overall cost which is the sum of the

659
00:25:38,340 --> 00:25:41,580
complexity of the three terms

660
00:25:41,580 --> 00:25:44,340
so that's it for the main main part

661
00:25:44,340 --> 00:25:46,679
difference academies and now we'll get

662
00:25:46,679 --> 00:25:49,980
into the specification of SPD

663
00:25:49,980 --> 00:25:52,980
so SPD is a block structure that was

664
00:25:52,980 --> 00:25:55,700
designed by Leonard most

665
00:25:55,700 --> 00:25:58,500
and was introduced in a chest when you

666
00:25:58,500 --> 00:26:00,299
uh to 2021

667
00:26:00,299 --> 00:26:03,299
so the internal State and the key can be

668
00:26:03,299 --> 00:26:07,740
represented by an array of 192 bits that

669
00:26:07,740 --> 00:26:10,260
is a 6 10 32 bits

670
00:26:10,260 --> 00:26:12,539
regarding the key schedule it's just a

671
00:26:12,539 --> 00:26:14,340
bit permutation of

672
00:26:14,340 --> 00:26:17,340
all the all the bits and for the round

673
00:26:17,340 --> 00:26:19,320
operation there are three main one

674
00:26:19,320 --> 00:26:22,080
operations so the third one is SB for

675
00:26:22,080 --> 00:26:25,020
Xbox which is an export that is applied

676
00:26:25,020 --> 00:26:29,400
on every row so it's a 6bps box

677
00:26:29,400 --> 00:26:32,700
then there is SC that stands for shift

678
00:26:32,700 --> 00:26:35,820
column that rotates the column by a

679
00:26:35,820 --> 00:26:38,039
different outset depending on the number

680
00:26:38,039 --> 00:26:41,039
of the the index of the column

681
00:26:41,039 --> 00:26:43,020
and the last one is Miss colon which is

682
00:26:43,020 --> 00:26:45,419
a linear operation that is applied to

683
00:26:45,419 --> 00:26:48,080
every column

684
00:26:48,240 --> 00:26:51,299
so the the Run function of a SPD

685
00:26:51,299 --> 00:26:53,340
displays as follow and as you can see

686
00:26:53,340 --> 00:26:55,440
there are two exports layer per round so

687
00:26:55,440 --> 00:26:57,480
it's pretty heavy

688
00:26:57,480 --> 00:26:59,220
heavier run function

689
00:26:59,220 --> 00:27:01,620
and note that for the last round the two

690
00:27:01,620 --> 00:27:04,679
last linear operations or scmmcr omitted

691
00:27:04,679 --> 00:27:06,900
then there is a an extra whitening T

692
00:27:06,900 --> 00:27:09,679
addition edit

693
00:27:09,960 --> 00:27:12,659
so there are different versions of PD

694
00:27:12,659 --> 00:27:15,059
depending on the number of rounds so

695
00:27:15,059 --> 00:27:17,340
it's very Speedy five spd6 and speed

696
00:27:17,340 --> 00:27:18,840
seven and there are different security

697
00:27:18,840 --> 00:27:22,080
cams depending on the versions so in our

698
00:27:22,080 --> 00:27:25,799
work we managed to improve the crypto

699
00:27:25,799 --> 00:27:29,100
analysis on every single versions but

700
00:27:29,100 --> 00:27:31,380
what I want uh what I want to focus

701
00:27:31,380 --> 00:27:33,840
today is on the our attack on pd7

702
00:27:33,840 --> 00:27:35,520
because it's when we managed to actually

703
00:27:35,520 --> 00:27:37,980
break the search to security claims both

704
00:27:37,980 --> 00:27:40,200
for timing data and also another

705
00:27:40,200 --> 00:27:42,240
security claims that the hotels made in

706
00:27:42,240 --> 00:27:44,460
the original paper which said that the

707
00:27:44,460 --> 00:27:46,679
attacker cannot add more than one run to

708
00:27:46,679 --> 00:27:48,539
extend the distinguisher because

709
00:27:48,539 --> 00:27:50,520
actually in our work we managed to add

710
00:27:50,520 --> 00:27:55,158
1.5 runs for check over

711
00:27:55,740 --> 00:27:58,200
so now let's get into the details of our

712
00:27:58,200 --> 00:28:00,600
attack so on the versions pd7 so seven

713
00:28:00,600 --> 00:28:03,299
round of Expedia

714
00:28:03,299 --> 00:28:04,919
so the first things I want to discuss

715
00:28:04,919 --> 00:28:07,080
about is how we build the differential

716
00:28:07,080 --> 00:28:10,080
tray and the starting point of that is

717
00:28:10,080 --> 00:28:12,840
by looking at the differential table of

718
00:28:12,840 --> 00:28:14,820
the Xbox and more precisely what we want

719
00:28:14,820 --> 00:28:16,159
to look at is

720
00:28:16,159 --> 00:28:19,200
the propagation of one bit input to one

721
00:28:19,200 --> 00:28:20,580
bit output difference

722
00:28:20,580 --> 00:28:22,799
and what we can see is that we have a

723
00:28:22,799 --> 00:28:24,779
high probability for

724
00:28:24,779 --> 00:28:26,820
lots of them so it's a maximum quality

725
00:28:26,820 --> 00:28:28,320
when we see a four here is four times

726
00:28:28,320 --> 00:28:31,740
two to the minus five so that's uh yes

727
00:28:31,740 --> 00:28:33,240
so that's the starting point we can

728
00:28:33,240 --> 00:28:34,860
actually try to build our distinguisher

729
00:28:34,860 --> 00:28:38,479
using this kind of transitions

730
00:28:38,520 --> 00:28:41,159
and so with this now we can try to

731
00:28:41,159 --> 00:28:43,500
actually compute some good trails

732
00:28:43,500 --> 00:28:46,260
and the approach would be to pre-compute

733
00:28:46,260 --> 00:28:49,380
one run trails and not change them

734
00:28:49,380 --> 00:28:52,380
and the very first step will be to build

735
00:28:52,380 --> 00:28:55,080
the table around the mixed colon

736
00:28:55,080 --> 00:28:58,500
operation so we uh we we get a pair xmx

737
00:28:58,500 --> 00:29:01,020
so that's the there is Atmos seven

738
00:29:01,020 --> 00:29:03,840
active bits so we store this this into a

739
00:29:03,840 --> 00:29:05,100
table

740
00:29:05,100 --> 00:29:07,200
and then uh

741
00:29:07,200 --> 00:29:09,179
what we want to do is look at trails

742
00:29:09,179 --> 00:29:11,460
that have some

743
00:29:11,460 --> 00:29:14,340
has that follow some condition so the

744
00:29:14,340 --> 00:29:17,220
first so what we want is that we have a

745
00:29:17,220 --> 00:29:19,500
single active column at the beginning

746
00:29:19,500 --> 00:29:23,100
and at the end of the the round and that

747
00:29:23,100 --> 00:29:24,600
also that

748
00:29:24,600 --> 00:29:28,260
after the Xbox there are at most two

749
00:29:28,260 --> 00:29:29,700
active bits per row so that the

750
00:29:29,700 --> 00:29:32,640
complexity doesn't explode

751
00:29:32,640 --> 00:29:38,159
and yeah so chaining all these uh

752
00:29:38,159 --> 00:29:40,679
by Computing all these one one Trail we

753
00:29:40,679 --> 00:29:43,520
managed to build uh 5.5

754
00:29:43,520 --> 00:29:45,960
round differential distinguisher

755
00:29:45,960 --> 00:29:49,919
probability to minus 183 and this is it

756
00:29:49,919 --> 00:29:50,820
here

757
00:29:50,820 --> 00:29:53,760
so I want to stress something that

758
00:29:53,760 --> 00:29:57,960
happens in the the very end here so note

759
00:29:57,960 --> 00:29:59,820
that the

760
00:29:59,820 --> 00:30:03,240
we have here some bit star in Gray it's

761
00:30:03,240 --> 00:30:05,520
because we allowed the

762
00:30:05,520 --> 00:30:08,399
some we could have asked for a hobby for

763
00:30:08,399 --> 00:30:09,899
a transition from one bit to one bit

764
00:30:09,899 --> 00:30:12,779
here but we we allowed some trade-off uh

765
00:30:12,779 --> 00:30:14,460
in the probability so we allowed some

766
00:30:14,460 --> 00:30:18,179
Liberty so that some Freedom so

767
00:30:18,179 --> 00:30:21,059
um so that in the output we uh we touch

768
00:30:21,059 --> 00:30:23,520
like only seven uh

769
00:30:23,520 --> 00:30:26,580
it it makes only seven active uh active

770
00:30:26,580 --> 00:30:29,220
columns active rows sorry

771
00:30:29,220 --> 00:30:31,620
and uh yeah this is a trade-off that we

772
00:30:31,620 --> 00:30:33,360
use here to reduce the complexity of

773
00:30:33,360 --> 00:30:34,580
other community

774
00:30:34,580 --> 00:30:38,580
to have a better quality sir

775
00:30:38,580 --> 00:30:40,799
so with this distinguisher we have

776
00:30:40,799 --> 00:30:43,500
another in probability to minus uh

777
00:30:43,500 --> 00:30:46,860
183 we can add some check over around so

778
00:30:46,860 --> 00:30:48,779
we add a half a run in the output and

779
00:30:48,779 --> 00:30:50,820
one word in the input

780
00:30:50,820 --> 00:30:53,100
and this is what we get so at that point

781
00:30:53,100 --> 00:30:55,080
since we uh we have the probability of

782
00:30:55,080 --> 00:30:56,580
the distinguisher we already know the

783
00:30:56,580 --> 00:30:58,080
probably the complexity of the first

784
00:30:58,080 --> 00:30:58,799
step

785
00:30:58,799 --> 00:31:00,419
because it only depends on the

786
00:31:00,419 --> 00:31:02,460
probability and now I want to discuss

787
00:31:02,460 --> 00:31:04,380
about the Second Step which is of the

788
00:31:04,380 --> 00:31:06,659
differential attack which is pursuing

789
00:31:06,659 --> 00:31:10,140
so one thing that we can do right now is

790
00:31:10,140 --> 00:31:13,559
just focus on row 24 in the input

791
00:31:13,559 --> 00:31:16,260
so what we can see is that there is a

792
00:31:16,260 --> 00:31:19,260
transition like this uh representing the

793
00:31:19,260 --> 00:31:23,220
you know when our work to recovery run

794
00:31:23,220 --> 00:31:26,220
and uh the question we can Wonder is uh

795
00:31:26,220 --> 00:31:27,779
which input difference can follow such

796
00:31:27,779 --> 00:31:30,779
transition because some difference cans

797
00:31:30,779 --> 00:31:33,240
actually uh cannot actually verify this

798
00:31:33,240 --> 00:31:35,520
transition so what we can do is compute

799
00:31:35,520 --> 00:31:37,440
the set of difference that follow this

800
00:31:37,440 --> 00:31:40,919
and then when we would build we can

801
00:31:40,919 --> 00:31:44,059
restrict if if you want into a

802
00:31:44,059 --> 00:31:46,799
uh a bit so that we discard all the

803
00:31:46,799 --> 00:31:48,480
pairs that do not follow our

804
00:31:48,480 --> 00:31:51,179
this transition and this result is in

805
00:31:51,179 --> 00:31:52,860
deceiving and if we do it for all the

806
00:31:52,860 --> 00:31:55,140
the line we opt we would obtain a total

807
00:31:55,140 --> 00:31:57,720
saving of total minus 11.

808
00:31:57,720 --> 00:31:58,679
so

809
00:31:58,679 --> 00:32:00,179
but now we can take a look at the

810
00:32:00,179 --> 00:32:02,460
complexity we got so far so

811
00:32:02,460 --> 00:32:04,200
the complicity for the first step data

812
00:32:04,200 --> 00:32:07,740
generation is fine is to 284 however

813
00:32:07,740 --> 00:32:09,899
the complexity for a second step is a

814
00:32:09,899 --> 00:32:11,340
bit too expensive

815
00:32:11,340 --> 00:32:14,460
so what we need to do some now is to

816
00:32:14,460 --> 00:32:16,260
find a way to reduce the second step and

817
00:32:16,260 --> 00:32:18,539
we will do it uh by finding complexity

818
00:32:18,539 --> 00:32:20,159
trade-off that will increase the value

819
00:32:20,159 --> 00:32:22,320
of P since we have some room but

820
00:32:22,320 --> 00:32:26,640
drastically reduce the value of T in

821
00:32:26,640 --> 00:32:29,220
so I want right now to take once again a

822
00:32:29,220 --> 00:32:32,100
look at our takeover around

823
00:32:32,100 --> 00:32:37,200
and as you can see here all the these

824
00:32:37,200 --> 00:32:39,960
three active bits here are activating

825
00:32:39,960 --> 00:32:43,500
actually a lot of

826
00:32:43,500 --> 00:32:46,620
line rows in input or the the pink the

827
00:32:46,620 --> 00:32:49,020
pink rose and what we want to do now is

828
00:32:49,020 --> 00:32:51,360
actually have some kind of control on

829
00:32:51,360 --> 00:32:54,360
this propagation here to reduce the

830
00:32:54,360 --> 00:32:56,760
the amount of the roses that are

831
00:32:56,760 --> 00:32:59,360
attached

832
00:33:00,260 --> 00:33:03,419
so what we want to consider now for uh

833
00:33:03,419 --> 00:33:06,059
input our input set of difference is to

834
00:33:06,059 --> 00:33:08,340
have the differences that will activate

835
00:33:08,340 --> 00:33:10,500
at most three rows

836
00:33:10,500 --> 00:33:13,620
and so at the consequence We'll add to

837
00:33:13,620 --> 00:33:16,140
the minus 69 to factor to our

838
00:33:16,140 --> 00:33:18,000
probability but it's with drastically

839
00:33:18,000 --> 00:33:21,000
reduce the size of the input set

840
00:33:21,000 --> 00:33:23,279
so once once we do this transformation

841
00:33:23,279 --> 00:33:25,460
here we obtain

842
00:33:25,460 --> 00:33:29,519
a data complexity of 287 and the

843
00:33:29,519 --> 00:33:32,279
perceiving complexity to 286 so now we

844
00:33:32,279 --> 00:33:33,600
are happy because we have two terms that

845
00:33:33,600 --> 00:33:35,340
are somehow balanced so that's pretty

846
00:33:35,340 --> 00:33:40,260
good for our to minimize our complexity

847
00:33:40,260 --> 00:33:43,380
okay so now that we discussed the two

848
00:33:43,380 --> 00:33:45,080
first step of the

849
00:33:45,080 --> 00:33:48,240
differential uh capacities we want to

850
00:33:48,240 --> 00:33:50,460
look into the the very last step which

851
00:33:50,460 --> 00:33:52,440
is key recovery

852
00:33:52,440 --> 00:33:54,240
so the first thing we can see is that

853
00:33:54,240 --> 00:33:56,279
there are some bits that we can recover

854
00:33:56,279 --> 00:33:59,940
for free looking at the output

855
00:33:59,940 --> 00:34:02,700
since we know all the

856
00:34:02,700 --> 00:34:04,260
we know the difference in the plain text

857
00:34:04,260 --> 00:34:06,480
and the output then there is some kick

858
00:34:06,480 --> 00:34:11,000
which is added and we know that this uh

859
00:34:11,000 --> 00:34:14,780
that the Xbox the very last Xbox

860
00:34:14,780 --> 00:34:17,399
we have a precise difference so we can

861
00:34:17,399 --> 00:34:20,219
recover the key because it would be the

862
00:34:20,219 --> 00:34:21,418
the plaintext that would allow the

863
00:34:21,418 --> 00:34:24,000
transition so first we have already some

864
00:34:24,000 --> 00:34:26,879
free bits regarding the output however

865
00:34:26,879 --> 00:34:29,099
it does not give us the whole key

866
00:34:29,099 --> 00:34:32,580
so we need to to perform some technique

867
00:34:32,580 --> 00:34:34,800
to recover the key for the uh for the

868
00:34:34,800 --> 00:34:36,780
visit we don't have

869
00:34:36,780 --> 00:34:38,760
and we will use technical the earlier

870
00:34:38,760 --> 00:34:41,580
about so it consists as follows so first

871
00:34:41,580 --> 00:34:44,699
we consider a propagation condition

872
00:34:44,699 --> 00:34:47,699
then we guess the needed two bits that

873
00:34:47,699 --> 00:34:50,639
we don't know yet so it costs us to the

874
00:34:50,639 --> 00:34:52,320
GI to guess

875
00:34:52,320 --> 00:34:54,839
and then we discount all the the pair

876
00:34:54,839 --> 00:34:56,940
per key that do not follow the condition

877
00:34:56,940 --> 00:35:00,480
so that's a filter to minus fi and then

878
00:35:00,480 --> 00:35:02,220
we repeat the process until we know the

879
00:35:02,220 --> 00:35:03,480
whole key

880
00:35:03,480 --> 00:35:06,300
so the complexity for this uh will look

881
00:35:06,300 --> 00:35:07,800
something like that

882
00:35:07,800 --> 00:35:09,660
and since we if you look at the

883
00:35:09,660 --> 00:35:12,300
complexity we see that all the terms g d

884
00:35:12,300 --> 00:35:14,760
i minus F5 will multiply themselves

885
00:35:14,760 --> 00:35:16,440
it's important if you want to minimize

886
00:35:16,440 --> 00:35:19,560
this complexity I mean this term that to

887
00:35:19,560 --> 00:35:22,980
receive as soon as possible

888
00:35:22,980 --> 00:35:25,020
so that's the

889
00:35:25,020 --> 00:35:27,599
the yeah the technique we will follow

890
00:35:27,599 --> 00:35:29,460
and something else that we will use to

891
00:35:29,460 --> 00:35:31,920
to have efficient recovery is a

892
00:35:31,920 --> 00:35:33,300
technique called parallel machine that

893
00:35:33,300 --> 00:35:34,980
was introduced

894
00:35:34,980 --> 00:35:38,000
in crypto 2011 by uh

895
00:35:38,000 --> 00:35:41,579
so I won't discuss exactly the the exact

896
00:35:41,579 --> 00:35:44,760
algorithm but basically if you have some

897
00:35:44,760 --> 00:35:46,980
data which is stored in into two lists

898
00:35:46,980 --> 00:35:49,940
and you want to find the

899
00:35:49,940 --> 00:35:52,140
some elements that satisfy your relation

900
00:35:52,140 --> 00:35:55,680
on the the Cartesian product of the list

901
00:35:55,680 --> 00:35:57,660
you can you can actually prepare for

902
00:35:57,660 --> 00:35:59,280
something which is pretty efficient if

903
00:35:59,280 --> 00:36:02,820
you can split your relation into a

904
00:36:02,820 --> 00:36:04,980
smaller collection

905
00:36:04,980 --> 00:36:07,020
and this is something that we used and

906
00:36:07,020 --> 00:36:08,460
you will see an example I will present

907
00:36:08,460 --> 00:36:11,040
an example of that just after

908
00:36:11,040 --> 00:36:13,460
so

909
00:36:13,740 --> 00:36:15,960
let's so now we take a look again at our

910
00:36:15,960 --> 00:36:19,320
takeover Iran for the input and uh what

911
00:36:19,320 --> 00:36:22,800
we what we see is that the condition

912
00:36:22,800 --> 00:36:24,960
that will filter the most of the

913
00:36:24,960 --> 00:36:26,579
condition around the second Xbox because

914
00:36:26,579 --> 00:36:28,619
I present six big filter

915
00:36:28,619 --> 00:36:30,660
and so we want to take a look at a demo

916
00:36:30,660 --> 00:36:33,900
to which we can use this condition as

917
00:36:33,900 --> 00:36:36,119
early as possible we will have a check

918
00:36:36,119 --> 00:36:40,460
over here that is as very cheap

919
00:36:41,230 --> 00:36:44,289
[Music]

920
00:36:44,780 --> 00:36:47,220
look like that

921
00:36:47,220 --> 00:36:49,920
and what we can do here

922
00:36:49,920 --> 00:36:54,000
is uh actually pre-compute the state

923
00:36:54,000 --> 00:36:55,800
before the second Xbox so on the left

924
00:36:55,800 --> 00:36:56,820
side

925
00:36:56,820 --> 00:37:01,619
by Computing s minus one yeah like using

926
00:37:01,619 --> 00:37:04,440
the Xbox so we would get some pairs like

927
00:37:04,440 --> 00:37:05,820
this

928
00:37:05,820 --> 00:37:08,820
and then instead of trying to make a

929
00:37:08,820 --> 00:37:10,500
match on the difference after this box

930
00:37:10,500 --> 00:37:12,599
we're going to do is make a match on the

931
00:37:12,599 --> 00:37:16,460
pairs before the Xbox by looking at uh

932
00:37:16,460 --> 00:37:19,500
like this inside the table

933
00:37:19,500 --> 00:37:20,780
so

934
00:37:20,780 --> 00:37:24,420
let's uh now take an example regarding

935
00:37:24,420 --> 00:37:28,800
the row 17 18 and 18. so

936
00:37:28,800 --> 00:37:31,440
for now let's assume we know uh before

937
00:37:31,440 --> 00:37:34,320
the shift column operation

938
00:37:34,320 --> 00:37:37,680
um the whole 18 19 21 223

939
00:37:37,680 --> 00:37:39,839
as we can see we would have some some

940
00:37:39,839 --> 00:37:43,020
partial knowledge for round 17 18 19

941
00:37:43,020 --> 00:37:46,079
after shift shift colon operation

942
00:37:46,079 --> 00:37:48,800
and since we are Marching on pairs

943
00:37:48,800 --> 00:37:52,859
for row 17 for example we will know

944
00:37:52,859 --> 00:37:55,160
an amount of

945
00:37:55,160 --> 00:37:57,980
to the fourth of the earth we know for

946
00:37:57,980 --> 00:38:00,599
four bits but since it's pair so it's

947
00:38:00,599 --> 00:38:03,540
time we it's time to so

948
00:38:03,540 --> 00:38:06,480
for us for 17 in the end we have two to

949
00:38:06,480 --> 00:38:09,540
the six possibilities but

950
00:38:09,540 --> 00:38:11,880
we are we are trying with the to the

951
00:38:11,880 --> 00:38:14,339
four times two so we it resulted it will

952
00:38:14,339 --> 00:38:16,680
result in our filter of two to minus two

953
00:38:16,680 --> 00:38:19,140
and we can do this for all the all the

954
00:38:19,140 --> 00:38:22,020
three roses 17 18 and 18. it results in

955
00:38:22,020 --> 00:38:24,780
an overall Twitter to two minus eight

956
00:38:24,780 --> 00:38:27,599
so this is typically a relation when you

957
00:38:27,599 --> 00:38:28,980
look at the three rows at the same time

958
00:38:28,980 --> 00:38:32,520
that splits into three so it for each of

959
00:38:32,520 --> 00:38:35,520
the row for row 17 is one uh annulation

960
00:38:35,520 --> 00:38:37,920
for 18 years relation Etc so this is

961
00:38:37,920 --> 00:38:39,540
typically uh somewhere where we can use

962
00:38:39,540 --> 00:38:41,460
a palette machine

963
00:38:41,460 --> 00:38:43,140
that's something I want to stress here

964
00:38:43,140 --> 00:38:46,200
is that we manage by using like by

965
00:38:46,200 --> 00:38:48,660
pre-computing the pairs we managed to

966
00:38:48,660 --> 00:38:50,640
see here without knowing the whole row

967
00:38:50,640 --> 00:38:52,440
for any of these rows and this means

968
00:38:52,440 --> 00:38:54,240
that we need to yes few arches to

969
00:38:54,240 --> 00:38:57,319
actually to start Theory

970
00:38:57,720 --> 00:39:00,420
and now so I assume before that we know

971
00:39:00,420 --> 00:39:05,460
uh some some rules of 18 19 21 22 23 Etc

972
00:39:05,460 --> 00:39:09,060
and to to encoder them actually we uh we

973
00:39:09,060 --> 00:39:11,640
built this table this table here that uh

974
00:39:11,640 --> 00:39:13,619
just summarized the knowledge we already

975
00:39:13,619 --> 00:39:16,619
have from the output and the amount of

976
00:39:16,619 --> 00:39:20,460
keywords we are left to um to guess and

977
00:39:20,460 --> 00:39:22,820
this we can actually

978
00:39:22,820 --> 00:39:26,339
write down the the cost we are left to

979
00:39:26,339 --> 00:39:27,540
pay

980
00:39:27,540 --> 00:39:30,300
and by by optimizing this we can see

981
00:39:30,300 --> 00:39:32,220
that like an efficient way to actually

982
00:39:32,220 --> 00:39:34,079
perform the the match here is to guess

983
00:39:34,079 --> 00:39:36,900
19 21 in one side and on the other side

984
00:39:36,900 --> 00:39:39,900
18 to 20c and perform a parallel

985
00:39:39,900 --> 00:39:43,079
matching so this uh help us and gain

986
00:39:43,079 --> 00:39:46,140
some some complexity

987
00:39:46,140 --> 00:39:48,540
and for the remaining rows we just do a

988
00:39:48,540 --> 00:39:51,900
second from bottom to uh so formula row

989
00:39:51,900 --> 00:39:54,960
24 to row 2.

990
00:39:54,960 --> 00:39:57,540
so as a conclusion uh I would say that

991
00:39:57,540 --> 00:39:59,880
even though uh differential attack is

992
00:39:59,880 --> 00:40:02,040
some pretty well known

993
00:40:02,040 --> 00:40:04,440
type of hypnosis if you are very careful

994
00:40:04,440 --> 00:40:06,780
at every step you can actually build a

995
00:40:06,780 --> 00:40:10,079
very efficient attack so here we use a

996
00:40:10,079 --> 00:40:12,960
one to one to one Xbox transition so we

997
00:40:12,960 --> 00:40:15,359
have a high quality Trail we used some

998
00:40:15,359 --> 00:40:17,520
civilian techniques and trade-offs

999
00:40:17,520 --> 00:40:19,980
and use the user Refinery properties so

1000
00:40:19,980 --> 00:40:22,700
we managed to write the

1001
00:40:22,700 --> 00:40:24,359
claims

1002
00:40:24,359 --> 00:40:26,140
and thank you for your attention

1003
00:40:26,140 --> 00:40:33,300
[Applause]

1004
00:40:33,300 --> 00:40:36,300
thank you so we have time for one

1005
00:40:36,300 --> 00:40:38,599
question

1006
00:40:40,700 --> 00:40:44,000
in question

1007
00:40:47,720 --> 00:40:51,839
a very small question I I had the

1008
00:40:51,839 --> 00:40:54,780
impression that it's like probably 18

1009
00:40:54,780 --> 00:40:55,820
that

1010
00:40:55,820 --> 00:41:01,400
the it's a chosen Cipher text

1011
00:41:07,220 --> 00:41:09,900
the performance have been very different

1012
00:41:09,900 --> 00:41:13,380
in the setting where plantex are um okay

1013
00:41:13,380 --> 00:41:16,260
so yeah actually it's more efficient to

1014
00:41:16,260 --> 00:41:17,940
perform on the attack here in the

1015
00:41:17,940 --> 00:41:19,740
decryption way that's that question yes

1016
00:41:19,740 --> 00:41:21,359
yeah and the reason for that is that

1017
00:41:21,359 --> 00:41:22,920
when we

1018
00:41:22,920 --> 00:41:26,240
use okay this trade-off here

1019
00:41:26,240 --> 00:41:29,579
by it's better to do it the decryption

1020
00:41:29,579 --> 00:41:32,760
way because if we want to use this we

1021
00:41:32,760 --> 00:41:35,160
cannot build our data using structures

1022
00:41:35,160 --> 00:41:38,820
and that's uh it's a bit annoying so

1023
00:41:38,820 --> 00:41:41,280
that's why we use it the decryption way

1024
00:41:41,280 --> 00:41:42,839
yeah

1025
00:41:42,839 --> 00:41:45,710
so thank you again

1026
00:41:45,710 --> 00:41:52,599
[Applause]

1027
00:42:12,660 --> 00:42:15,500
person

1028
00:42:17,579 --> 00:42:19,579
s

1029
00:42:20,640 --> 00:42:24,859
who are synchronized with the other room

1030
00:42:25,140 --> 00:42:27,060
so

1031
00:42:27,060 --> 00:42:31,079
uh so next talk is entitled exploiting

1032
00:42:31,079 --> 00:42:35,099
none full uh additions full-fledged

1033
00:42:35,099 --> 00:42:37,920
automatic the Mirchi cells we meet in

1034
00:42:37,920 --> 00:42:41,700
the middle could analysis of skinny by a

1035
00:42:41,700 --> 00:42:48,540
dumping sea sea ray soon link song uh

1036
00:42:51,079 --> 00:42:54,619
sorry for the

1037
00:42:58,819 --> 00:43:01,920
thanks for the introduction hello

1038
00:43:01,920 --> 00:43:05,220
everyone and thank you this is a joint

1039
00:43:05,220 --> 00:43:08,880
work with surveilling lay and change

1040
00:43:08,880 --> 00:43:12,260
this talk will consists of three parts

1041
00:43:12,260 --> 00:43:15,599
first I'd like to give a brief

1042
00:43:15,599 --> 00:43:18,720
description of the the mercies Circa

1043
00:43:18,720 --> 00:43:21,119
Committee in the middle attack

1044
00:43:21,119 --> 00:43:25,400
this attack was first introduced in

1045
00:43:25,400 --> 00:43:29,000
2008. since then many Improvement

1046
00:43:29,000 --> 00:43:33,540
techniques are introduced to find this

1047
00:43:33,540 --> 00:43:36,960
attack efficiently a dedicated this

1048
00:43:36,960 --> 00:43:40,260
search air condition and constraints

1049
00:43:40,260 --> 00:43:45,599
programming based approach are produced

1050
00:43:45,599 --> 00:43:49,319
to construct a distinguisher two

1051
00:43:49,319 --> 00:43:52,619
sequences of positions should to be

1052
00:43:52,619 --> 00:43:55,980
found assume a is a sequence of

1053
00:43:55,980 --> 00:43:58,040
positions

1054
00:43:58,040 --> 00:44:01,980
construct a data asset of several plain

1055
00:44:01,980 --> 00:44:03,060
texts

1056
00:44:03,060 --> 00:44:05,940
this blend texts are all different

1057
00:44:05,940 --> 00:44:09,960
changing positions specified by a and or

1058
00:44:09,960 --> 00:44:13,400
equal in other positions

1059
00:44:13,400 --> 00:44:16,980
assume p is a sequence of the output

1060
00:44:16,980 --> 00:44:19,740
positions

1061
00:44:19,740 --> 00:44:22,440
consider the ordered sequence of

1062
00:44:22,440 --> 00:44:26,460
differences between all ciphertexts CI

1063
00:44:26,460 --> 00:44:31,859
and c0 in positions specified by B

1064
00:44:31,859 --> 00:44:35,060
for us block Cipher the sequence is

1065
00:44:35,060 --> 00:44:36,800
usually

1066
00:44:36,800 --> 00:44:40,079
uniquely determined by several internal

1067
00:44:40,079 --> 00:44:41,579
parameters

1068
00:44:41,579 --> 00:44:45,599
so if the size of the values space of

1069
00:44:45,599 --> 00:44:49,380
the internal parameters is less than

1070
00:44:49,380 --> 00:44:52,140
that for a random sequence

1071
00:44:52,140 --> 00:44:55,200
the construct the distinguisher is a

1072
00:44:55,200 --> 00:44:59,520
Constructor for the pair of A and B

1073
00:44:59,520 --> 00:45:03,060
then an attack can be mounted the based

1074
00:45:03,060 --> 00:45:04,980
on the distinguisher

1075
00:45:04,980 --> 00:45:08,339
a cipher can be filtered into three

1076
00:45:08,339 --> 00:45:09,839
parts

1077
00:45:09,839 --> 00:45:13,740
the pre-computation phase will construct

1078
00:45:13,740 --> 00:45:17,339
the distinguisher on the second part and

1079
00:45:17,339 --> 00:45:20,460
look up a table will be built to save

1080
00:45:20,460 --> 00:45:23,400
all the values that the sequence may

1081
00:45:23,400 --> 00:45:24,420
take

1082
00:45:24,420 --> 00:45:28,619
the online phase is to get involved

1083
00:45:28,619 --> 00:45:31,619
around the keys to identify a Delta

1084
00:45:31,619 --> 00:45:34,680
asset for the distinguisher and the

1085
00:45:34,680 --> 00:45:37,920
compute the value of the sequence

1086
00:45:37,920 --> 00:45:41,339
check with whether the value user lookup

1087
00:45:41,339 --> 00:45:44,940
table obtains the candidate

1088
00:45:44,940 --> 00:45:48,060
in the following I'd like to give

1089
00:45:48,060 --> 00:45:52,560
examples of Concepts on a toy Cipher the

1090
00:45:52,560 --> 00:45:57,599
toy Cipher has four bytes block size and

1091
00:45:57,599 --> 00:46:00,720
the linear layer is to update to the

1092
00:46:00,720 --> 00:46:04,500
states by left multiplying a binary

1093
00:46:04,500 --> 00:46:07,020
Matrix air

1094
00:46:07,020 --> 00:46:11,880
a has the position s03 B has the

1095
00:46:11,880 --> 00:46:15,300
position as a three one

1096
00:46:15,300 --> 00:46:20,040
there's a sequence at at 3 1 can be

1097
00:46:20,040 --> 00:46:24,000
uniquely determined by seven internal

1098
00:46:24,000 --> 00:46:25,859
parameters

1099
00:46:25,859 --> 00:46:29,940
for each pair pi and P0 the difference

1100
00:46:29,940 --> 00:46:34,020
is active at s03

1101
00:46:34,020 --> 00:46:39,720
so with the value of P0 at s03

1102
00:46:39,720 --> 00:46:42,800
through the one round encryptions

1103
00:46:42,800 --> 00:46:44,359
[Music]

1104
00:46:44,359 --> 00:46:48,359
important difference of round one can be

1105
00:46:48,359 --> 00:46:51,960
deduced and the difference is inactive

1106
00:46:51,960 --> 00:46:56,720
at one three so iterate this process

1107
00:46:56,720 --> 00:47:00,300
with the six remaining internal

1108
00:47:00,300 --> 00:47:02,700
parameters the sequence can be

1109
00:47:02,700 --> 00:47:04,680
determined

1110
00:47:04,680 --> 00:47:08,160
so the sequencer can take at most two to

1111
00:47:08,160 --> 00:47:14,160
the 56 possible values where it has two

1112
00:47:14,160 --> 00:47:16,220
to the two

1113
00:47:16,220 --> 00:47:21,420
1740 possibilities for a random sequence

1114
00:47:21,420 --> 00:47:25,140
the main bottleneck improve Improvement

1115
00:47:25,140 --> 00:47:27,480
technique is the differential

1116
00:47:27,480 --> 00:47:30,020
enumeration technique

1117
00:47:30,020 --> 00:47:33,900
assume P0 P Prime conforms to a

1118
00:47:33,900 --> 00:47:37,079
truncated differentiator on the left

1119
00:47:37,079 --> 00:47:38,940
figure

1120
00:47:38,940 --> 00:47:42,500
then construct a Delta asset from P0

1121
00:47:42,500 --> 00:47:46,140
many values of the internal parameters

1122
00:47:46,140 --> 00:47:49,099
are not original

1123
00:47:49,099 --> 00:47:53,099
for its differences in the

1124
00:47:53,099 --> 00:47:57,000
for each input and output difference of

1125
00:47:57,000 --> 00:48:01,079
the s-box in the red box can be

1126
00:48:01,079 --> 00:48:05,400
determined by the difference at s03 the

1127
00:48:05,400 --> 00:48:10,079
output difference at S31 and

1128
00:48:10,079 --> 00:48:15,180
the value of P0 at the four active bytes

1129
00:48:15,180 --> 00:48:19,260
so the seven internal parameters

1130
00:48:19,260 --> 00:48:23,540
are reduced by one byte based on the

1131
00:48:23,540 --> 00:48:27,300
differential enumeration technique

1132
00:48:27,300 --> 00:48:30,900
some random keys can be deduced from

1133
00:48:30,900 --> 00:48:34,200
this internal parameters the key

1134
00:48:34,200 --> 00:48:36,420
dependent receive technique is to

1135
00:48:36,420 --> 00:48:39,780
utilize the relations on these round

1136
00:48:39,780 --> 00:48:43,619
Keys wire keep writing technique is to

1137
00:48:43,619 --> 00:48:47,040
utilize the relations on

1138
00:48:47,040 --> 00:48:50,520
on the case involved in the key recovery

1139
00:48:50,520 --> 00:48:51,839
phase

1140
00:48:51,839 --> 00:48:55,619
the trigger difference cancellation will

1141
00:48:55,619 --> 00:48:58,619
can control the trick difference to

1142
00:48:58,619 --> 00:49:02,240
cancel a state difference

1143
00:49:03,000 --> 00:49:06,780
as our framework is developed from the

1144
00:49:06,780 --> 00:49:10,920
CP based approach for the basic attack I

1145
00:49:10,920 --> 00:49:14,880
will describe this basic these three

1146
00:49:14,880 --> 00:49:18,180
people's CP best approach

1147
00:49:18,180 --> 00:49:21,660
three type of variables are introduced

1148
00:49:21,660 --> 00:49:24,359
for the basic attack

1149
00:49:24,359 --> 00:49:29,280
X from a forwarder differential chair

1150
00:49:29,280 --> 00:49:33,500
for each p and p Prime if their

1151
00:49:33,500 --> 00:49:38,220
difference at the positions among a bar

1152
00:49:38,220 --> 00:49:41,880
I equals zero their difference at

1153
00:49:41,880 --> 00:49:46,740
positions among a by I plus 1 equals

1154
00:49:46,740 --> 00:49:51,540
should be zero informally the Type X

1155
00:49:51,540 --> 00:49:54,119
follows the differential propagation

1156
00:49:54,119 --> 00:49:57,359
rule with probability one

1157
00:49:57,359 --> 00:50:00,599
type of Y form a backward determination

1158
00:50:00,599 --> 00:50:01,740
chair

1159
00:50:01,740 --> 00:50:05,520
for each pair p and p Prime the

1160
00:50:05,520 --> 00:50:06,839
difference

1161
00:50:06,839 --> 00:50:09,680
their difference at the positions

1162
00:50:09,680 --> 00:50:13,079
among b i plus one can be uniquely

1163
00:50:13,079 --> 00:50:16,980
determined by the knowledge of the

1164
00:50:16,980 --> 00:50:19,920
positions among pi

1165
00:50:19,920 --> 00:50:21,480
informally

1166
00:50:21,480 --> 00:50:25,260
type of Y describes the positions that

1167
00:50:25,260 --> 00:50:29,579
have effects on the output sequence

1168
00:50:29,579 --> 00:50:33,660
wire Type X describe describes the

1169
00:50:33,660 --> 00:50:35,839
activity of the

1170
00:50:35,839 --> 00:50:39,720
of the difference for each pair in the

1171
00:50:39,720 --> 00:50:41,400
Delta asset

1172
00:50:41,400 --> 00:50:45,000
so for us specify the Delta asset

1173
00:50:45,000 --> 00:50:48,660
the output difference can be uniquely

1174
00:50:48,660 --> 00:50:52,200
determined by the positions where type x

1175
00:50:52,200 --> 00:50:56,540
equals 1 and table y equals one

1176
00:50:56,660 --> 00:51:00,900
I introduced to describe these internal

1177
00:51:00,900 --> 00:51:03,720
parameters

1178
00:51:03,720 --> 00:51:06,839
the CP best approach

1179
00:51:06,839 --> 00:51:09,900
for basically only capture on the basic

1180
00:51:09,900 --> 00:51:14,460
attack some improvement techniques still

1181
00:51:14,460 --> 00:51:18,720
rely on manual work in this paper we

1182
00:51:18,720 --> 00:51:21,599
will give a fourth largest automatic

1183
00:51:21,599 --> 00:51:23,579
framework

1184
00:51:23,579 --> 00:51:27,540
this is a high level overview three type

1185
00:51:27,540 --> 00:51:29,700
of variables for the

1186
00:51:29,700 --> 00:51:32,400
basic distinguisher

1187
00:51:32,400 --> 00:51:36,119
and to describe the differential in

1188
00:51:36,119 --> 00:51:38,760
Immigration technique three type of

1189
00:51:38,760 --> 00:51:42,420
variables are introduced one describe

1190
00:51:42,420 --> 00:51:45,180
the traditional truncated differential

1191
00:51:45,180 --> 00:51:48,420
chair and the other two were describe

1192
00:51:48,420 --> 00:51:51,599
the internal parameters based on the

1193
00:51:51,599 --> 00:51:55,160
differential enumeration technique

1194
00:51:55,160 --> 00:51:59,460
the key two new type of variables are

1195
00:51:59,460 --> 00:52:03,240
also introduced to describe as a key

1196
00:52:03,240 --> 00:52:06,300
dependentative technique

1197
00:52:06,300 --> 00:52:09,859
these internal parameters

1198
00:52:09,859 --> 00:52:13,800
described by the two type of variables

1199
00:52:13,800 --> 00:52:15,859
introduced in in

1200
00:52:15,859 --> 00:52:18,720
differential enumeration technique will

1201
00:52:18,720 --> 00:52:21,720
be unified by a new type of variables

1202
00:52:21,720 --> 00:52:25,920
and the other one I introduced to

1203
00:52:25,920 --> 00:52:30,599
describers the deduced around the keys

1204
00:52:30,599 --> 00:52:33,839
as tab X variables describe the

1205
00:52:33,839 --> 00:52:36,300
differential propagation so

1206
00:52:36,300 --> 00:52:37,940
the tablet

1207
00:52:37,940 --> 00:52:41,339
variables are also introduced for each

1208
00:52:41,339 --> 00:52:43,920
ticks there

1209
00:52:43,920 --> 00:52:46,559
the methods for modeling the key

1210
00:52:46,559 --> 00:52:49,859
recovery phase is similar is similar to

1211
00:52:49,859 --> 00:52:53,119
can it's similar to previous

1212
00:52:53,119 --> 00:52:55,380
cp-based approach

1213
00:52:55,380 --> 00:52:58,380
in this paper we just needed to model

1214
00:52:58,380 --> 00:53:01,319
the face of obtaining a pair conforming

1215
00:53:01,319 --> 00:53:06,140
to the truncated differential chair

1216
00:53:06,200 --> 00:53:09,480
to murder to murder the differential

1217
00:53:09,480 --> 00:53:11,760
enumeration technique

1218
00:53:11,760 --> 00:53:15,900
pep GT variables are introduced

1219
00:53:15,900 --> 00:53:19,740
and typically follow a type T based

1220
00:53:19,740 --> 00:53:23,339
backward determination chair it is a

1221
00:53:23,339 --> 00:53:25,740
little different from a backward

1222
00:53:25,740 --> 00:53:27,780
determination chair

1223
00:53:27,780 --> 00:53:30,900
because in this case p and p Prime

1224
00:53:30,900 --> 00:53:34,380
conforms to a truncated differential

1225
00:53:34,380 --> 00:53:35,880
chair

1226
00:53:35,880 --> 00:53:41,040
for example the the difference at this

1227
00:53:41,040 --> 00:53:44,579
three bytes should be effect should be

1228
00:53:44,579 --> 00:53:48,720
affected by orbites or input bytes but

1229
00:53:48,720 --> 00:53:52,020
in the truncated differentiator the

1230
00:53:52,020 --> 00:53:54,240
difference at the three bytes are

1231
00:53:54,240 --> 00:53:56,779
inactive

1232
00:53:57,920 --> 00:54:02,780
0 0 equals 1.

1233
00:54:02,780 --> 00:54:06,119
attempty based forward determinator is

1234
00:54:06,119 --> 00:54:09,780
also presented in the opposite term

1235
00:54:09,780 --> 00:54:12,380
Direction

1236
00:54:14,900 --> 00:54:18,000
where the two chairs meet

1237
00:54:18,000 --> 00:54:21,660
there are the differences at this red

1238
00:54:21,660 --> 00:54:27,059
side at this at this red bytes can be

1239
00:54:27,059 --> 00:54:30,420
unique can be determined by several

1240
00:54:30,420 --> 00:54:33,540
internal parameters and these internal

1241
00:54:33,540 --> 00:54:35,220
parameters

1242
00:54:35,220 --> 00:54:40,819
can be described by type DT variables

1243
00:54:40,980 --> 00:54:43,520
with the differential probability

1244
00:54:43,520 --> 00:54:47,640
property of s-box the value of P0 at

1245
00:54:47,640 --> 00:54:52,800
this red X can also be deduced

1246
00:54:52,800 --> 00:54:58,400
so to combine with the basic attack type

1247
00:54:58,400 --> 00:55:03,480
DC in round RM will be initialized by

1248
00:55:03,480 --> 00:55:06,740
tap t and tap Z

1249
00:55:06,740 --> 00:55:11,099
among all the internal parameters that

1250
00:55:11,099 --> 00:55:15,240
are described by type Z some are bonded

1251
00:55:15,240 --> 00:55:19,680
by the type GT variables so we

1252
00:55:19,680 --> 00:55:23,160
so in order to describe the remaining

1253
00:55:23,160 --> 00:55:26,579
internal parameters new text easy

1254
00:55:26,579 --> 00:55:29,760
variables are introduced and the other

1255
00:55:29,760 --> 00:55:33,300
internal parameters are described by

1256
00:55:33,300 --> 00:55:38,059
type Duty and type DC variables now

1257
00:55:38,280 --> 00:55:41,940
some run the keys can be deduced from

1258
00:55:41,940 --> 00:55:46,160
these internal parameters in order to

1259
00:55:46,160 --> 00:55:49,260
uniformly describe the internal

1260
00:55:49,260 --> 00:55:52,260
parameters

1261
00:55:52,500 --> 00:55:55,859
the type TZ and type DT variables are

1262
00:55:55,859 --> 00:56:00,660
unified by a new type of variables

1263
00:56:00,660 --> 00:56:04,760
and we should introduce type K variables

1264
00:56:04,760 --> 00:56:08,599
to describe the deduced around the keys

1265
00:56:08,599 --> 00:56:12,119
and the type key variables should be

1266
00:56:12,119 --> 00:56:14,339
constrained by type B variables

1267
00:56:14,339 --> 00:56:17,880
according to the key editing operation

1268
00:56:17,880 --> 00:56:22,500
then then the relations of the of the

1269
00:56:22,500 --> 00:56:25,319
round keys for a specified Cipher can be

1270
00:56:25,319 --> 00:56:29,819
included in the model dynamically

1271
00:56:29,819 --> 00:56:33,119
for a typical Blossom Cipher the Delta

1272
00:56:33,119 --> 00:56:36,839
asset is a plain text to combat

1273
00:56:36,839 --> 00:56:40,020
combinations now the ticket difference

1274
00:56:40,020 --> 00:56:42,020
can be

1275
00:56:42,020 --> 00:56:44,700
controlled to cancel the state

1276
00:56:44,700 --> 00:56:46,140
difference

1277
00:56:46,140 --> 00:56:47,940
so the

1278
00:56:47,940 --> 00:56:52,260
so the so the propagation rules through

1279
00:56:52,260 --> 00:56:56,819
the key through the tricky sticky tick

1280
00:56:56,819 --> 00:56:58,680
addition

1281
00:56:58,680 --> 00:57:01,980
through the thicker adhesive it's a

1282
00:57:01,980 --> 00:57:04,800
different further round with two

1283
00:57:04,800 --> 00:57:07,319
different cancellation from the forward

1284
00:57:07,319 --> 00:57:09,960
differential propagation

1285
00:57:09,960 --> 00:57:14,819
and the constraints for this round for

1286
00:57:14,819 --> 00:57:18,660
this round it can be seen in this left

1287
00:57:18,660 --> 00:57:21,500
equations

1288
00:57:21,960 --> 00:57:27,960
and the framework applied on skinny

1289
00:57:27,960 --> 00:57:30,960
typically skinny consists the wrong

1290
00:57:30,960 --> 00:57:34,500
function of skinny consists of five

1291
00:57:34,500 --> 00:57:35,819
operations

1292
00:57:35,819 --> 00:57:37,559
not that

1293
00:57:37,559 --> 00:57:41,660
partial States of each round are

1294
00:57:41,660 --> 00:57:45,420
updated by the turkeys

1295
00:57:45,420 --> 00:57:48,300
so does the states between two

1296
00:57:48,300 --> 00:57:51,180
consecutive rocks are not totally

1297
00:57:51,180 --> 00:57:54,000
independent

1298
00:57:54,000 --> 00:57:58,319
and the linear layer with the so we

1299
00:57:58,319 --> 00:58:01,619
introduced so we introduced the number

1300
00:58:01,619 --> 00:58:03,720
four key Edition technique

1301
00:58:03,720 --> 00:58:07,200
it's a linear layer it's a linear layer

1302
00:58:07,200 --> 00:58:11,280
with not working addition can be it can

1303
00:58:11,280 --> 00:58:15,180
be simply expressed by this equation

1304
00:58:15,180 --> 00:58:19,740
and the internal parameters where type

1305
00:58:19,740 --> 00:58:24,119
of b equals one should be considered

1306
00:58:24,119 --> 00:58:27,960
for each variable in the subset

1307
00:58:27,960 --> 00:58:32,099
the variable can be expressed in the

1308
00:58:32,099 --> 00:58:33,260
form of

1309
00:58:33,260 --> 00:58:35,940
X4 to X7

1310
00:58:35,940 --> 00:58:39,720
then the rank of the coefficient term

1311
00:58:39,720 --> 00:58:41,579
metrics

1312
00:58:41,579 --> 00:58:44,339
is the degree of freedom

1313
00:58:44,339 --> 00:58:48,960
of this subset so we can also obtain the

1314
00:58:48,960 --> 00:58:51,720
reduced device

1315
00:58:51,720 --> 00:58:55,140
or techniques are integrated for the

1316
00:58:55,140 --> 00:58:59,000
search for the best attack on skin

1317
00:58:59,000 --> 00:59:03,960
the results are summarized in this table

1318
00:59:03,960 --> 00:59:05,760
all the

1319
00:59:05,760 --> 00:59:08,400
10 years is their committed you the

1320
00:59:08,400 --> 00:59:12,960
middle attack results are improved

1321
00:59:12,960 --> 00:59:15,920
thanks for your attention

1322
00:59:15,920 --> 00:59:23,220
[Applause]

1323
00:59:23,220 --> 00:59:27,059
we have time for questions are there

1324
00:59:27,059 --> 00:59:28,380
questions

1325
00:59:28,380 --> 00:59:31,339
from the audience

1326
00:59:44,900 --> 00:59:49,819
I have a very small question

1327
00:59:49,980 --> 00:59:56,599
in the table of slide 20

1328
00:59:56,700 --> 00:59:59,240
one

1329
00:59:59,819 --> 01:00:03,780
it seems that some to me that sometimes

1330
01:00:03,780 --> 01:00:09,059
the memory complexity is slightly above

1331
01:00:09,059 --> 01:00:12,960
the time complexity of the best

1332
01:00:12,960 --> 01:00:16,140
attack yeah does it come from the fact

1333
01:00:16,140 --> 01:00:19,500
that memory is not well counted as a

1334
01:00:19,500 --> 01:00:22,619
part of the the time it's

1335
01:00:22,619 --> 01:00:26,339
it's considered a smaller operation than

1336
01:00:26,339 --> 01:00:30,380
yeah we consider that time at the term

1337
01:00:30,380 --> 01:00:32,720
complexity most

1338
01:00:32,720 --> 01:00:36,599
okay of course time is it yeah okay

1339
01:00:36,599 --> 01:00:39,980
thank you thank you

1340
01:00:48,839 --> 01:00:52,400
okay so thank you let's uh

1341
01:00:52,400 --> 01:00:58,140
[Applause]

1342
01:00:58,140 --> 01:01:02,819
and I think that we have something like

1343
01:01:02,819 --> 01:01:04,440
five minutes

1344
01:01:04,440 --> 01:01:06,260
for

1345
01:01:06,260 --> 01:01:09,540
swapping it's not a real break it's just

1346
01:01:09,540 --> 01:01:13,619
to give people I think an opportunity to

1347
01:01:13,619 --> 01:01:17,299
to swap from tracks

1348
01:01:24,720 --> 01:01:27,720
foreign

1349
01:01:32,220 --> 01:01:35,180
wait for you

