1
00:00:04,080 --> 00:00:05,220
business

2
00:00:05,220 --> 00:00:07,500
okay hello everybody Welcome to the

3
00:00:07,500 --> 00:00:09,360
session on cinematic design the first

4
00:00:09,360 --> 00:00:10,019
one

5
00:00:10,019 --> 00:00:11,700
so my name is Kristen reichberger and I

6
00:00:11,700 --> 00:00:13,440
will be chairing this session you can

7
00:00:13,440 --> 00:00:15,420
have free talks in this session the

8
00:00:15,420 --> 00:00:17,400
first one is titled from fafale to

9
00:00:17,400 --> 00:00:19,800
megaphone via siminion the prf hutura

10
00:00:19,800 --> 00:00:22,080
and for NPC applications

11
00:00:22,080 --> 00:00:25,260
it's authored by Lorenzo grazi modern

12
00:00:25,260 --> 00:00:27,960
Garden Michael schwarfmaker and Roman

13
00:00:27,960 --> 00:00:28,740
Valley

14
00:00:28,740 --> 00:00:31,920
and Roman is going to give to talk thank

15
00:00:31,920 --> 00:00:33,600
you for the introduction so welcome from

16
00:00:33,600 --> 00:00:37,140
my side as well so let's write the let's

17
00:00:37,140 --> 00:00:39,660
start right away so any reason Becca so

18
00:00:39,660 --> 00:00:41,879
a new area of cryptography has become

19
00:00:41,879 --> 00:00:43,860
increasingly more important namely the

20
00:00:43,860 --> 00:00:45,899
area where we can compute on encrypted

21
00:00:45,899 --> 00:00:47,879
or unknown data so for example we have

22
00:00:47,879 --> 00:00:49,320
homographic encryption where we can

23
00:00:49,320 --> 00:00:51,360
directly compute on ciphertext we have

24
00:00:51,360 --> 00:00:53,460
multi-party computation where a set of

25
00:00:53,460 --> 00:00:55,260
parties compute the function on their

26
00:00:55,260 --> 00:00:57,059
combined input without leaking anything

27
00:00:57,059 --> 00:00:58,800
about the private inputs to other

28
00:00:58,800 --> 00:01:00,660
parties and we also have zero knowledge

29
00:01:00,660 --> 00:01:02,579
proof where you can improve stability

30
00:01:02,579 --> 00:01:04,260
validity of some statements without

31
00:01:04,260 --> 00:01:06,840
leaking any Witnesses and it turns out

32
00:01:06,840 --> 00:01:09,060
that for all of these new protocols and

33
00:01:09,060 --> 00:01:11,040
Primitives where we can construct use

34
00:01:11,040 --> 00:01:12,360
cases where we can actually use

35
00:01:12,360 --> 00:01:14,220
symmetric Primitives in there

36
00:01:14,220 --> 00:01:16,560
however we cannot really use traditional

37
00:01:16,560 --> 00:01:19,020
symmetric Primitives like a yes or short

38
00:01:19,020 --> 00:01:21,479
free because they were usually designed

39
00:01:21,479 --> 00:01:23,280
to be efficient data in software and

40
00:01:23,280 --> 00:01:25,320
hardware and for these protocols we have

41
00:01:25,320 --> 00:01:27,659
a completely different cost metrics so

42
00:01:27,659 --> 00:01:29,880
one on one hand in this protocols we

43
00:01:29,880 --> 00:01:31,560
usually work over some larger Prime

44
00:01:31,560 --> 00:01:34,979
fields and symmetric designs should then

45
00:01:34,979 --> 00:01:37,439
also be defined over larger Prime field

46
00:01:37,439 --> 00:01:40,140
to be efficient in this protocols and

47
00:01:40,140 --> 00:01:42,000
also the costing this protocol size

48
00:01:42,000 --> 00:01:43,619
usually related to the the

49
00:01:43,619 --> 00:01:45,479
multiplications in the design and this

50
00:01:45,479 --> 00:01:47,880
is something for which the traditional

51
00:01:47,880 --> 00:01:51,680
symmetric designs were not optimized for

52
00:01:51,680 --> 00:01:54,840
had a new area where they could design

53
00:01:54,840 --> 00:01:57,540
Primitives for so in this talk I will

54
00:01:57,540 --> 00:01:59,820
mainly focus on Multi party computation

55
00:01:59,820 --> 00:02:02,280
and more specifically on use cases where

56
00:02:02,280 --> 00:02:04,079
we have potentially large amounts of

57
00:02:04,079 --> 00:02:06,780
data and we want to encrypt them in MPC

58
00:02:06,780 --> 00:02:08,940
with a secret chat key so we have a set

59
00:02:08,940 --> 00:02:12,480
of computing parties and no MPC part on

60
00:02:12,480 --> 00:02:14,819
its own knows the the symmetric key but

61
00:02:14,819 --> 00:02:16,860
you have a share on the key but they

62
00:02:16,860 --> 00:02:19,260
still can use NPC protocols to encrypt

63
00:02:19,260 --> 00:02:21,360
large amounts of data so for example

64
00:02:21,360 --> 00:02:24,239
this can be useful in when the data

65
00:02:24,239 --> 00:02:27,360
provider is not a Computing party and

66
00:02:27,360 --> 00:02:29,099
you can use symmetric Primitives and

67
00:02:29,099 --> 00:02:30,540
symmetric encryption to efficiently

68
00:02:30,540 --> 00:02:32,520
transport this data into the MPC

69
00:02:32,520 --> 00:02:35,040
protocol another example for use case

70
00:02:35,040 --> 00:02:36,900
would be if we have a large NPC

71
00:02:36,900 --> 00:02:40,200
computation you can use encryption to

72
00:02:40,200 --> 00:02:42,000
efficiently hold the computation and

73
00:02:42,000 --> 00:02:44,819
continue at the later point or also you

74
00:02:44,819 --> 00:02:47,640
can use this for for Key Management for

75
00:02:47,640 --> 00:02:49,920
example you can split your encryption

76
00:02:49,920 --> 00:02:53,280
key into shares and use MPC to encrypt

77
00:02:53,280 --> 00:02:56,160
your data to to make it harder for for a

78
00:02:56,160 --> 00:02:57,599
because they actually steal your key

79
00:02:57,599 --> 00:03:00,060
since uh on each individual machine you

80
00:03:00,060 --> 00:03:01,860
are only operating on the share of the

81
00:03:01,860 --> 00:03:04,560
key so these are the the main use cases

82
00:03:04,560 --> 00:03:06,540
we are focusing on in this paper and

83
00:03:06,540 --> 00:03:08,040
there have been many symmetric

84
00:03:08,040 --> 00:03:09,720
Primitives already designed in the

85
00:03:09,720 --> 00:03:11,580
literature which try to be efficient in

86
00:03:11,580 --> 00:03:13,800
these or similar use cases for example

87
00:03:13,800 --> 00:03:16,739
we have Mimsy jimmc hardest Mimsy rescue

88
00:03:16,739 --> 00:03:19,440
and C minion and the cost metric for

89
00:03:19,440 --> 00:03:21,599
which these symmetric Primitives were

90
00:03:21,599 --> 00:03:24,360
optimized for is usually minimizing an

91
00:03:24,360 --> 00:03:26,159
um total number of multiplications in a

92
00:03:26,159 --> 00:03:27,000
design

93
00:03:27,000 --> 00:03:29,599
so let's have a look at the C minion

94
00:03:29,599 --> 00:03:32,400
symmetric side for this was published

95
00:03:32,400 --> 00:03:34,800
two years ago here at eurocrypt and you

96
00:03:34,800 --> 00:03:36,360
can see it here on the slides on the

97
00:03:36,360 --> 00:03:37,260
right side

98
00:03:37,260 --> 00:03:40,140
and how it uh so similar is based on the

99
00:03:40,140 --> 00:03:41,940
modified version of the file design

100
00:03:41,940 --> 00:03:44,700
strategy and it is characterized by two

101
00:03:44,700 --> 00:03:47,400
different permutations so on one hand

102
00:03:47,400 --> 00:03:49,379
you have the permutation here on the

103
00:03:49,379 --> 00:03:53,519
left which is a basically applied to the

104
00:03:53,519 --> 00:03:56,220
input of the of the cipher and this is a

105
00:03:56,220 --> 00:03:58,080
more expensive permutation and the

106
00:03:58,080 --> 00:03:59,940
output of this permutation is then fed

107
00:03:59,940 --> 00:04:00,900
into

108
00:04:00,900 --> 00:04:01,819
um

109
00:04:01,819 --> 00:04:03,720
significantly cheaper permutations

110
00:04:03,720 --> 00:04:06,720
called PE here and the these cheaper

111
00:04:06,720 --> 00:04:08,940
permutation produce a key stream which

112
00:04:08,940 --> 00:04:10,680
is then used to encrypt the actual plain

113
00:04:10,680 --> 00:04:11,400
text

114
00:04:11,400 --> 00:04:14,459
and what is so uh nice about immunity is

115
00:04:14,459 --> 00:04:17,339
that since we only applied this more

116
00:04:17,339 --> 00:04:19,500
expensive permutation once and then for

117
00:04:19,500 --> 00:04:21,720
for producing the key stream we use the

118
00:04:21,720 --> 00:04:24,120
output of this permutation in a cheaper

119
00:04:24,120 --> 00:04:25,680
permutations

120
00:04:25,680 --> 00:04:27,479
um that means that the more data we

121
00:04:27,479 --> 00:04:28,919
actually encrypt in MPC the more

122
00:04:28,919 --> 00:04:30,960
efficiency median gets so the cost of

123
00:04:30,960 --> 00:04:32,580
this more expensive permutation is

124
00:04:32,580 --> 00:04:35,160
amortized over a large amount of

125
00:04:35,160 --> 00:04:36,600
encrypted data

126
00:04:36,600 --> 00:04:39,240
however C minion also has a slight

127
00:04:39,240 --> 00:04:41,280
problem and that is that its security

128
00:04:41,280 --> 00:04:43,560
analysis relies on that that the round

129
00:04:43,560 --> 00:04:45,660
Keys which are added before each of

130
00:04:45,660 --> 00:04:48,060
these more cheaper permutations so that

131
00:04:48,060 --> 00:04:49,680
these round keys are actually produced

132
00:04:49,680 --> 00:04:52,500
by a very expensive hash function and

133
00:04:52,500 --> 00:04:54,600
that also means that when we have a

134
00:04:54,600 --> 00:04:57,060
symmetric key that is shared in NPC and

135
00:04:57,060 --> 00:04:58,860
we want to encrypt some large amounts of

136
00:04:58,860 --> 00:05:01,320
data we also have to compute these more

137
00:05:01,320 --> 00:05:03,600
expensive key schedule in NPC so AC

138
00:05:03,600 --> 00:05:05,280
Milan is only efficient in use cases

139
00:05:05,280 --> 00:05:07,259
where we don't have to compute this key

140
00:05:07,259 --> 00:05:08,160
schedule

141
00:05:08,160 --> 00:05:10,020
so this brings us directly to the goal

142
00:05:10,020 --> 00:05:12,180
of our work we want to design an MPC

143
00:05:12,180 --> 00:05:14,040
friendly symmetric Cipher that is

144
00:05:14,040 --> 00:05:16,500
sufficient as efficient as Dominion but

145
00:05:16,500 --> 00:05:18,900
without this expensive ski schedule and

146
00:05:18,900 --> 00:05:20,460
what we came up with is a new design

147
00:05:20,460 --> 00:05:22,860
strategy which we call megaphono and we

148
00:05:22,860 --> 00:05:26,160
instantiated with uh to get the prf

149
00:05:26,160 --> 00:05:28,320
Hydra and we're similar to Simian we use

150
00:05:28,320 --> 00:05:30,780
it as a stream Cipher to encrypt the

151
00:05:30,780 --> 00:05:34,680
data in NPC so let's dive directly into

152
00:05:34,680 --> 00:05:36,300
the design itself

153
00:05:36,300 --> 00:05:38,220
so here on the slide so you can now see

154
00:05:38,220 --> 00:05:41,039
the brf Hydra so it is looks

155
00:05:41,039 --> 00:05:43,500
intimidating at first but I will go over

156
00:05:43,500 --> 00:05:45,300
the its parts in more detail in the next

157
00:05:45,300 --> 00:05:47,220
slide so to explain the contribution of

158
00:05:47,220 --> 00:05:49,380
these parts on this slide I just want to

159
00:05:49,380 --> 00:05:51,060
point out some similarities to sim

160
00:05:51,060 --> 00:05:53,340
minion namely here on the top we have

161
00:05:53,340 --> 00:05:56,580
the the more expensive permutation which

162
00:05:56,580 --> 00:05:58,919
we call the body of the Hydra and the

163
00:05:58,919 --> 00:06:01,220
output here Y and set is then fed into

164
00:06:01,220 --> 00:06:04,020
cheaper permutations which we call the

165
00:06:04,020 --> 00:06:06,539
heads of the Hydra and similar to Simian

166
00:06:06,539 --> 00:06:07,979
the outputs of these cheaper

167
00:06:07,979 --> 00:06:09,539
permutations are then used as a key

168
00:06:09,539 --> 00:06:13,500
stream to encrypt the actual plain text

169
00:06:13,500 --> 00:06:16,440
so how is the the body constructed so

170
00:06:16,440 --> 00:06:19,020
you can see in the on the top left the

171
00:06:19,020 --> 00:06:20,820
input of the body is a nonsense and an

172
00:06:20,820 --> 00:06:23,720
IV it which is uh which are um four

173
00:06:23,720 --> 00:06:27,120
final field elements it is first we have

174
00:06:27,120 --> 00:06:29,699
a key addition here and then we they

175
00:06:29,699 --> 00:06:32,639
have an expensive permutation which we

176
00:06:32,639 --> 00:06:34,139
call the body and the output of the

177
00:06:34,139 --> 00:06:35,639
permutation we also have a key addition

178
00:06:35,639 --> 00:06:37,740
there so since we have a key Edition

179
00:06:37,740 --> 00:06:40,560
before and after the body this whole

180
00:06:40,560 --> 00:06:42,539
structure becomes an even mature

181
00:06:42,539 --> 00:06:45,660
construction and that gives us the the

182
00:06:45,660 --> 00:06:47,940
property that as long as we Design This

183
00:06:47,940 --> 00:06:49,620
permutation as a pseudo random

184
00:06:49,620 --> 00:06:52,440
permutation the output is provably

185
00:06:52,440 --> 00:06:55,199
secure until the birthday bound so in

186
00:06:55,199 --> 00:06:57,479
other words what that means is that from

187
00:06:57,479 --> 00:06:59,400
the point of view of an attacker this

188
00:06:59,400 --> 00:07:01,979
output y here is neither a known nor is

189
00:07:01,979 --> 00:07:03,139
it controllable

190
00:07:03,139 --> 00:07:06,419
and this already limits the the number

191
00:07:06,419 --> 00:07:09,960
the potential highly limits the

192
00:07:09,960 --> 00:07:12,000
potential attacks that in a Decker can

193
00:07:12,000 --> 00:07:14,220
apply on the heads of the height so

194
00:07:14,220 --> 00:07:16,560
similar to siminian that allows us to

195
00:07:16,560 --> 00:07:19,020
instantiate the heads of the Hydra in a

196
00:07:19,020 --> 00:07:20,940
more efficient way and we get the same

197
00:07:20,940 --> 00:07:23,819
property that the more data we actually

198
00:07:23,819 --> 00:07:27,300
encrypt with Hydra the more efficient

199
00:07:27,300 --> 00:07:29,580
encryption gets and the expensive

200
00:07:29,580 --> 00:07:31,680
permutation in the body is amortized

201
00:07:31,680 --> 00:07:34,740
over a large number of encryption

202
00:07:34,740 --> 00:07:37,259
so when we now transition to the heads

203
00:07:37,259 --> 00:07:39,180
as I said before since we are using an

204
00:07:39,180 --> 00:07:40,979
even manager construction the attack

205
00:07:40,979 --> 00:07:43,800
cannot control the output of the of the

206
00:07:43,800 --> 00:07:47,280
of the body and uh this already limits

207
00:07:47,280 --> 00:07:49,139
um the the attacks that we can apply on

208
00:07:49,139 --> 00:07:52,139
the heads so um the main uh focus on the

209
00:07:52,139 --> 00:07:53,759
security analysis on the heads will be

210
00:07:53,759 --> 00:07:56,039
of algebraic nature and in our analysis

211
00:07:56,039 --> 00:07:57,599
we find that the criminal basis attack

212
00:07:57,599 --> 00:08:00,240
will be the strongest attack factor and

213
00:08:00,240 --> 00:08:02,699
uh simplified spoken equipment basis

214
00:08:02,699 --> 00:08:05,099
attack gets prevented if we have a high

215
00:08:05,099 --> 00:08:06,660
degree in the representation of the

216
00:08:06,660 --> 00:08:08,580
heads and if you have a lot of unknown

217
00:08:08,580 --> 00:08:09,900
variables there

218
00:08:09,900 --> 00:08:11,940
so in C minion they have a very nice

219
00:08:11,940 --> 00:08:13,560
trick to increase the number of unknown

220
00:08:13,560 --> 00:08:15,539
variables for the at the academic day

221
00:08:15,539 --> 00:08:19,259
they had even more cheaper even more

222
00:08:19,259 --> 00:08:20,940
efficient and that is where this

223
00:08:20,940 --> 00:08:23,280
expensive key scale comes into place so

224
00:08:23,280 --> 00:08:25,919
since the the round keys are extracted

225
00:08:25,919 --> 00:08:27,900
from the from the master key by a very

226
00:08:27,900 --> 00:08:29,759
expensive hash function

227
00:08:29,759 --> 00:08:31,979
um the attacker cannot really model the

228
00:08:31,979 --> 00:08:33,539
relation between the round keys and the

229
00:08:33,539 --> 00:08:35,760
master keys in its equation system and

230
00:08:35,760 --> 00:08:38,039
is forced to treat each round key as an

231
00:08:38,039 --> 00:08:40,500
independent variable that increases the

232
00:08:40,500 --> 00:08:42,539
number of variables in the in the

233
00:08:42,539 --> 00:08:46,160
equation system and the heads

234
00:08:46,160 --> 00:08:48,360
basically are stronger against the

235
00:08:48,360 --> 00:08:50,240
criminal basis attack and you need a

236
00:08:50,240 --> 00:08:52,500
less number of rounds or a cheaper

237
00:08:52,500 --> 00:08:54,180
permutation to prevent discriminal basis

238
00:08:54,180 --> 00:08:55,380
attack

239
00:08:55,380 --> 00:08:57,800
so in megaphone we want to do something

240
00:08:57,800 --> 00:09:00,240
different so we want to achieve

241
00:09:00,240 --> 00:09:01,980
basically the same but without this

242
00:09:01,980 --> 00:09:04,019
expensive key scatter and what we came

243
00:09:04,019 --> 00:09:06,260
up with was that we in the body here

244
00:09:06,260 --> 00:09:09,000
after each round in the permutation we

245
00:09:09,000 --> 00:09:11,459
want to reuse the state of this round to

246
00:09:11,459 --> 00:09:13,260
construct the new variable at the output

247
00:09:13,260 --> 00:09:16,260
so what we do here is we take the state

248
00:09:16,260 --> 00:09:18,779
after each round of the permutation sum

249
00:09:18,779 --> 00:09:21,240
up these states and come up with a new

250
00:09:21,240 --> 00:09:23,640
area which we call set here on the

251
00:09:23,640 --> 00:09:26,339
output and since we designed this body

252
00:09:26,339 --> 00:09:28,320
as a pseudorandom permutation the

253
00:09:28,320 --> 00:09:31,080
relationship between y k and set is

254
00:09:31,080 --> 00:09:33,480
highly expensive and the attack can also

255
00:09:33,480 --> 00:09:35,459
not use this to to reduce the number of

256
00:09:35,459 --> 00:09:37,200
variables in the equation system so

257
00:09:37,200 --> 00:09:39,420
again the attacker is forced to treat

258
00:09:39,420 --> 00:09:41,459
the output set as independent variables

259
00:09:41,459 --> 00:09:44,760
so um the heads are have now more

260
00:09:44,760 --> 00:09:48,240
variables and they are better protected

261
00:09:48,240 --> 00:09:50,339
against the criminal basis attack so

262
00:09:50,339 --> 00:09:52,260
basically we get the same thing as in

263
00:09:52,260 --> 00:09:54,180
semenion but without this highly

264
00:09:54,180 --> 00:09:57,019
expensive key schedule and the sum here

265
00:09:57,019 --> 00:09:59,519
since in the MPC protocols that we

266
00:09:59,519 --> 00:10:01,620
target the main cost is related to the

267
00:10:01,620 --> 00:10:04,200
number of multiplication and the sum is

268
00:10:04,200 --> 00:10:06,060
basically free here we get these

269
00:10:06,060 --> 00:10:07,920
additional variables for free without

270
00:10:07,920 --> 00:10:10,380
increasing the cost metric

271
00:10:10,380 --> 00:10:12,779
so now let's look at the heads of the

272
00:10:12,779 --> 00:10:15,480
Hydra so here we have the outputs of the

273
00:10:15,480 --> 00:10:17,339
body which are the variables by and set

274
00:10:17,339 --> 00:10:19,620
and they are now fed into multiple heads

275
00:10:19,620 --> 00:10:22,740
here and as I said before the main goal

276
00:10:22,740 --> 00:10:24,360
that we have here in the the heads is

277
00:10:24,360 --> 00:10:27,420
preventing algebraic attacks so um and

278
00:10:27,420 --> 00:10:29,339
we also want to to have as many

279
00:10:29,339 --> 00:10:31,380
variables as possible in this equation

280
00:10:31,380 --> 00:10:33,540
system so on one hand to get the key

281
00:10:33,540 --> 00:10:36,180
into the equation systems back we

282
00:10:36,180 --> 00:10:40,200
instantiate the permutation P hat here

283
00:10:40,200 --> 00:10:42,420
as a heat band rotation so basically we

284
00:10:42,420 --> 00:10:44,519
add the the master key after each round

285
00:10:44,519 --> 00:10:46,740
of the permutation so the attacker has

286
00:10:46,740 --> 00:10:48,660
to consider the key as well here in the

287
00:10:48,660 --> 00:10:50,820
equation systems of the head and on the

288
00:10:50,820 --> 00:10:53,279
other hand one valid strategy for an

289
00:10:53,279 --> 00:10:55,440
attacker could be just attacking the

290
00:10:55,440 --> 00:10:58,140
heads and discarding the body completely

291
00:10:58,140 --> 00:11:01,500
so he could for example take the output

292
00:11:01,500 --> 00:11:04,740
from one hand ahead and go via the two

293
00:11:04,740 --> 00:11:06,540
heads to the output of another one and

294
00:11:06,540 --> 00:11:08,220
we are by constructing this equation

295
00:11:08,220 --> 00:11:10,140
system he could actually cancel out the

296
00:11:10,140 --> 00:11:12,180
country distribution of Y and set here

297
00:11:12,180 --> 00:11:15,060
in these equations so what we do here to

298
00:11:15,060 --> 00:11:17,220
prevent this is by actually having this

299
00:11:17,220 --> 00:11:20,640
feed forward Edition around this uh head

300
00:11:20,640 --> 00:11:23,040
permutation and with that we prevent any

301
00:11:23,040 --> 00:11:25,220
attacker can cancel out why and said

302
00:11:25,220 --> 00:11:27,720
probably produce cheaper equation

303
00:11:27,720 --> 00:11:29,700
systems

304
00:11:29,700 --> 00:11:31,860
um another thing that we usually have to

305
00:11:31,860 --> 00:11:34,880
consider here so um we obviously want to

306
00:11:34,880 --> 00:11:37,500
make it impossible to prevent the the

307
00:11:37,500 --> 00:11:40,079
permutations in the prevent inverting

308
00:11:40,079 --> 00:11:41,880
the permutations in the head so in Sim

309
00:11:41,880 --> 00:11:43,620
million this is done by truncating the

310
00:11:43,620 --> 00:11:46,440
output here in uh Hydra since we already

311
00:11:46,440 --> 00:11:48,899
have a key permutation in the head and

312
00:11:48,899 --> 00:11:50,760
this feed forward addition inverting the

313
00:11:50,760 --> 00:11:52,740
permutation is already prevented and

314
00:11:52,740 --> 00:11:54,959
that without the truncation so overall

315
00:11:54,959 --> 00:11:57,120
compared to some Minion since we do not

316
00:11:57,120 --> 00:12:00,120
discard any valuable keystream elements

317
00:12:00,120 --> 00:12:01,740
here on the output we get a higher

318
00:12:01,740 --> 00:12:03,420
throughput here as well

319
00:12:03,420 --> 00:12:05,459
and another thing I want to mention here

320
00:12:05,459 --> 00:12:08,880
is before the the head permutation we

321
00:12:08,880 --> 00:12:11,220
have this rolling function here ri and

322
00:12:11,220 --> 00:12:13,740
this is basically to to modify the

323
00:12:13,740 --> 00:12:15,720
inputs to the head so that we get a

324
00:12:15,720 --> 00:12:18,959
different key stream in the end and we

325
00:12:18,959 --> 00:12:21,420
instantiate it also as a non-linear

326
00:12:21,420 --> 00:12:23,579
function here to frustrate this mid in

327
00:12:23,579 --> 00:12:25,260
the middle attacks among multiple heads

328
00:12:25,260 --> 00:12:27,240
even further

329
00:12:27,240 --> 00:12:29,700
okay so far about the construction now I

330
00:12:29,700 --> 00:12:31,800
want to talk a little bit about how we

331
00:12:31,800 --> 00:12:33,420
instantiate this megaphone or this

332
00:12:33,420 --> 00:12:36,480
design switch to get the prf Hydra

333
00:12:36,480 --> 00:12:39,779
so um for the body permutation we

334
00:12:39,779 --> 00:12:41,760
basically instantiate it with the Hades

335
00:12:41,760 --> 00:12:44,399
design strategy so here we have two

336
00:12:44,399 --> 00:12:46,920
different round functions uh with the

337
00:12:46,920 --> 00:12:49,260
two different purposes here the X

338
00:12:49,260 --> 00:12:51,000
so-called external rounds are there to

339
00:12:51,000 --> 00:12:52,980
prevent um statistical attacks in the

340
00:12:52,980 --> 00:12:55,500
head and here we basically use the same

341
00:12:55,500 --> 00:12:58,079
thing as in Hades Mimsy namely we have a

342
00:12:58,079 --> 00:13:01,860
cheap MDS Matrix and use a simple power

343
00:13:01,860 --> 00:13:03,779
Maps as a non-linear layer so this was

344
00:13:03,779 --> 00:13:06,959
already done before in hedes Mimsy for

345
00:13:06,959 --> 00:13:10,019
the internal rounds here we only want to

346
00:13:10,019 --> 00:13:12,240
protect against algebraic attacks and in

347
00:13:12,240 --> 00:13:14,220
Hades memes there they use also a

348
00:13:14,220 --> 00:13:17,160
version of the of the power map in Hydra

349
00:13:17,160 --> 00:13:18,920
we use something different name reviews

350
00:13:18,920 --> 00:13:21,779
a generalized version of delay Messi

351
00:13:21,779 --> 00:13:23,820
construction and you see one variant

352
00:13:23,820 --> 00:13:26,100
here on the slides so the limited

353
00:13:26,100 --> 00:13:27,959
construction is very cheap so here with

354
00:13:27,959 --> 00:13:30,600
this version you can see for the input

355
00:13:30,600 --> 00:13:33,120
State we take a weighted sum produce one

356
00:13:33,120 --> 00:13:35,100
square and add it to the whole input to

357
00:13:35,100 --> 00:13:37,380
get the output state so overall one

358
00:13:37,380 --> 00:13:40,320
non-linear layer is only only requires

359
00:13:40,320 --> 00:13:42,959
one multiplication here and as we show

360
00:13:42,959 --> 00:13:45,240
in the paper it's significantly more

361
00:13:45,240 --> 00:13:47,420
efficient than the power map to reach uh

362
00:13:47,420 --> 00:13:50,279
sufficiently High algebraic degree for

363
00:13:50,279 --> 00:13:54,060
the security of the cipher and since the

364
00:13:54,060 --> 00:13:56,220
generously message construction is known

365
00:13:56,220 --> 00:13:59,100
to be susceptible to invariant Subspace

366
00:13:59,100 --> 00:14:01,440
Trails we have a linear layer in this

367
00:14:01,440 --> 00:14:03,240
internal rounds that prevents the

368
00:14:03,240 --> 00:14:05,399
Subspace trace and in the paper we show

369
00:14:05,399 --> 00:14:07,560
how we can construct a very cheap Matrix

370
00:14:07,560 --> 00:14:10,440
that fulfills these goals the goal

371
00:14:10,440 --> 00:14:12,660
so in the head of the Hydra since we

372
00:14:12,660 --> 00:14:14,360
basically also only care about

373
00:14:14,360 --> 00:14:16,920
algebraicatrack attacks we instantiate

374
00:14:16,920 --> 00:14:18,480
it with something very similar to the

375
00:14:18,480 --> 00:14:20,519
internal rounds of the body so it is

376
00:14:20,519 --> 00:14:23,100
also instantiated with a version of the

377
00:14:23,100 --> 00:14:25,620
generously messy and the same Matrix to

378
00:14:25,620 --> 00:14:27,779
prevent the Subspace trails and also in

379
00:14:27,779 --> 00:14:30,000
the rolling function we we do something

380
00:14:30,000 --> 00:14:31,620
very similar here

381
00:14:31,620 --> 00:14:33,600
so that gives us with our security

382
00:14:33,600 --> 00:14:36,779
analysis for the um for the external

383
00:14:36,779 --> 00:14:38,639
rounds in the body we basically need six

384
00:14:38,639 --> 00:14:41,040
rounds that is the same as in Hades

385
00:14:41,040 --> 00:14:43,560
Mimsy for the internal rounds so they're

386
00:14:43,560 --> 00:14:45,060
generously messy

387
00:14:45,060 --> 00:14:47,940
function we need 42 in turn arounds and

388
00:14:47,940 --> 00:14:49,560
compare when we compare this to Hades

389
00:14:49,560 --> 00:14:51,240
memes which has power Maps which

390
00:14:51,240 --> 00:14:52,980
basically needs the same number of

391
00:14:52,980 --> 00:14:55,139
multiplication in our layer we can see

392
00:14:55,139 --> 00:14:57,779
that we have a significantly smaller

393
00:14:57,779 --> 00:15:00,779
number of rounds and for the heads here

394
00:15:00,779 --> 00:15:04,019
we have the uh we get 39 rounds for

395
00:15:04,019 --> 00:15:05,880
security here

396
00:15:05,880 --> 00:15:08,279
so when we have a look at the total

397
00:15:08,279 --> 00:15:09,899
number of multiplications in our design

398
00:15:09,899 --> 00:15:12,899
for encrypting a specific number of

399
00:15:12,899 --> 00:15:14,940
plain text words so these plain text

400
00:15:14,940 --> 00:15:17,100
words are final field elements you can

401
00:15:17,100 --> 00:15:19,980
see when we consider key schedules uh in

402
00:15:19,980 --> 00:15:21,959
the other designs then we can see that

403
00:15:21,959 --> 00:15:24,360
the Hydra is by far the most efficient

404
00:15:24,360 --> 00:15:27,360
brf in the MPC setting and you can see

405
00:15:27,360 --> 00:15:30,000
that the Gap is really big to do other

406
00:15:30,000 --> 00:15:31,740
symmetric designs here as well only

407
00:15:31,740 --> 00:15:33,920
Hades Mimsy is

408
00:15:33,920 --> 00:15:36,300
kind of competitive here

409
00:15:36,300 --> 00:15:39,000
so when we have a look at the total

410
00:15:39,000 --> 00:15:40,440
number of multiplications when we

411
00:15:40,440 --> 00:15:42,540
discard the key scatter so we don't

412
00:15:42,540 --> 00:15:44,760
compute it in NPC so this is basically

413
00:15:44,760 --> 00:15:47,760
the setting where C minion was designed

414
00:15:47,760 --> 00:15:50,100
for and then you can see that the Simian

415
00:15:50,100 --> 00:15:52,500
is now significant significantly more

416
00:15:52,500 --> 00:15:55,320
competitive than the the remaining brfs

417
00:15:55,320 --> 00:15:57,959
and you can see that for a small number

418
00:15:57,959 --> 00:16:00,240
of plain text words similar is actually

419
00:16:00,240 --> 00:16:02,760
a little bit more efficient than Hydra

420
00:16:02,760 --> 00:16:04,800
but the Hydra scale is significantly

421
00:16:04,800 --> 00:16:07,260
better and the more we encrypt the more

422
00:16:07,260 --> 00:16:09,779
efficient Hydra gets and the gaps widens

423
00:16:09,779 --> 00:16:12,480
here at the end and hydrated and again

424
00:16:12,480 --> 00:16:14,100
the most efficient beer ref in this

425
00:16:14,100 --> 00:16:16,320
setting so in the paper we also

426
00:16:16,320 --> 00:16:18,360
performed some benchmarks in a real NPC

427
00:16:18,360 --> 00:16:20,220
Library so we were using the MP speed

428
00:16:20,220 --> 00:16:23,220
slavery for that but I refer you to the

429
00:16:23,220 --> 00:16:25,079
paper for the concrete benchmarks

430
00:16:25,079 --> 00:16:28,980
basically to summarize it gives us

431
00:16:28,980 --> 00:16:30,720
exactly what we expect from the previous

432
00:16:30,720 --> 00:16:32,880
slide so when we have the compute Keys

433
00:16:32,880 --> 00:16:35,579
carriers no other prf comes close to the

434
00:16:35,579 --> 00:16:37,560
performance of Hydra and when we don't

435
00:16:37,560 --> 00:16:40,320
compute key schedules then uh C minion

436
00:16:40,320 --> 00:16:42,660
is uh slightly more efficient for small

437
00:16:42,660 --> 00:16:45,660
states F of small plain text Isis but

438
00:16:45,660 --> 00:16:47,880
Hydra becomes more efficiently larger

439
00:16:47,880 --> 00:16:49,680
the number of plain text gets and if

440
00:16:49,680 --> 00:16:51,959
you're interested in it here we have

441
00:16:51,959 --> 00:16:54,720
published our implementation framework

442
00:16:54,720 --> 00:16:56,399
so if you're interested in it just have

443
00:16:56,399 --> 00:16:59,399
a look at the at this Repository

444
00:16:59,399 --> 00:17:01,980
so to summarize in this talk we came up

445
00:17:01,980 --> 00:17:03,959
with a new design strategy which we call

446
00:17:03,959 --> 00:17:06,140
megano it's a

447
00:17:06,140 --> 00:17:08,699
based on if a file a design strategy and

448
00:17:08,699 --> 00:17:11,819
it is modified to to be more efficient

449
00:17:11,819 --> 00:17:13,859
in NPC without key schedules we've

450
00:17:13,859 --> 00:17:16,380
instantiated it to create the prf Hydra

451
00:17:16,380 --> 00:17:18,480
and it's basically an efficient and

452
00:17:18,480 --> 00:17:20,640
secure variant of C minion without the

453
00:17:20,640 --> 00:17:22,559
need of an expensive key schedulers so

454
00:17:22,559 --> 00:17:24,240
we have minimized a multiplicative

455
00:17:24,240 --> 00:17:26,540
complexity and we have shown that the

456
00:17:26,540 --> 00:17:29,640
right now that the most efficient prf in

457
00:17:29,640 --> 00:17:32,580
this MPC setting so for more details

458
00:17:32,580 --> 00:17:34,260
about the security analysis and also

459
00:17:34,260 --> 00:17:35,940
about the benchmarks I would refer you

460
00:17:35,940 --> 00:17:37,440
to the paper which you can find on

461
00:17:37,440 --> 00:17:39,240
imprint with this link

462
00:17:39,240 --> 00:17:41,760
and as for any new symmetric design I

463
00:17:41,760 --> 00:17:43,740
highly welcome the community to to try

464
00:17:43,740 --> 00:17:45,240
to find some attacks that we did not

465
00:17:45,240 --> 00:17:46,320
consider

466
00:17:46,320 --> 00:17:48,179
thank you for your attention and if you

467
00:17:48,179 --> 00:17:49,740
have any questions feel free to ask them

468
00:17:49,740 --> 00:17:52,700
more thanks everyone

469
00:17:55,980 --> 00:17:57,780
any questions for everyone I'll see you

470
00:17:57,780 --> 00:18:00,500
later coming down already

471
00:18:01,020 --> 00:18:03,299
that's dramatic uh could you go back to

472
00:18:03,299 --> 00:18:05,720
slide 12.

473
00:18:05,720 --> 00:18:08,520
sorry yes yeah

474
00:18:08,520 --> 00:18:10,440
could you elaborate on what's been

475
00:18:10,440 --> 00:18:13,320
compared here so uh basically on the

476
00:18:13,320 --> 00:18:14,700
y-axis we have the number of

477
00:18:14,700 --> 00:18:17,400
multiplications that we have to compute

478
00:18:17,400 --> 00:18:19,320
an encryption with these encryption

479
00:18:19,320 --> 00:18:21,720
schemes here and on the x-axis we have

480
00:18:21,720 --> 00:18:23,280
the number of plain Decks that we want

481
00:18:23,280 --> 00:18:24,240
to encrypt

482
00:18:24,240 --> 00:18:29,280
and so here um for example on then plain

483
00:18:29,280 --> 00:18:31,919
text words we see that the hydro SL is

484
00:18:31,919 --> 00:18:33,539
slightly more efficient in Hades Mimsy

485
00:18:33,539 --> 00:18:37,080
and uh yeah for the Yeah so basically

486
00:18:37,080 --> 00:18:39,000
number of multiplications yeah

487
00:18:39,000 --> 00:18:41,520
comparing prf with the block ciphers is

488
00:18:41,520 --> 00:18:42,960
it like a block Cipher with a huge block

489
00:18:42,960 --> 00:18:46,380
size or is it a block ciphering yeah so

490
00:18:46,380 --> 00:18:50,280
for Hades Mimsy rescue GMC Etc we just

491
00:18:50,280 --> 00:18:52,260
increase the block size so you can see

492
00:18:52,260 --> 00:18:54,600
in in Hades memes it just leads to more

493
00:18:54,600 --> 00:18:56,400
efficient constructions because the

494
00:18:56,400 --> 00:18:58,200
round number doesn't change when you

495
00:18:58,200 --> 00:19:00,900
increase the block size but you have

496
00:19:00,900 --> 00:19:02,760
less multiplications in the internal

497
00:19:02,760 --> 00:19:04,640
rounds so this is actually for example

498
00:19:04,640 --> 00:19:07,380
if they're the best setting

499
00:19:07,380 --> 00:19:09,059
but that's not how you would construct a

500
00:19:09,059 --> 00:19:11,640
prf from a block Cipher however how

501
00:19:11,640 --> 00:19:13,500
would you do it

502
00:19:13,500 --> 00:19:15,179
I'm not just increasing the blocks well

503
00:19:15,179 --> 00:19:16,860
anyway we can probably take it offline

504
00:19:16,860 --> 00:19:21,500
yeah so so yeah yeah

505
00:19:21,840 --> 00:19:26,059
all right any more questions for common

506
00:19:26,280 --> 00:19:29,100
let me ask you another question um so

507
00:19:29,100 --> 00:19:31,380
nist is considering to start a process

508
00:19:31,380 --> 00:19:33,900
to standardize threshold MPC friendly

509
00:19:33,900 --> 00:19:36,539
crypto including Semitic encryption

510
00:19:36,539 --> 00:19:39,000
so would you consider submitting Hydra

511
00:19:39,000 --> 00:19:41,220
there do you think there's big

512
00:19:41,220 --> 00:19:44,280
Improvement still possible so um in

513
00:19:44,280 --> 00:19:46,020
general I think it would make sense to

514
00:19:46,020 --> 00:19:47,640
submit it there if there's a call for

515
00:19:47,640 --> 00:19:50,700
encrypting with uh in NPC for

516
00:19:50,700 --> 00:19:53,340
potentially large amounts of data so in

517
00:19:53,340 --> 00:19:55,260
that sense I would say it makes sense

518
00:19:55,260 --> 00:19:56,580
yeah

519
00:19:56,580 --> 00:19:59,280
so potential improvements so

520
00:19:59,280 --> 00:20:02,100
um the main focus we we had here when we

521
00:20:02,100 --> 00:20:04,140
did the security analysis was on the

522
00:20:04,140 --> 00:20:06,960
heads of the Hydra so potentially one

523
00:20:06,960 --> 00:20:08,280
can come up with some efficient

524
00:20:08,280 --> 00:20:10,500
constructions in the body so here we

525
00:20:10,500 --> 00:20:12,600
mainly relied on what was done in Hades

526
00:20:12,600 --> 00:20:14,520
Mimsy before but if you have some

527
00:20:14,520 --> 00:20:16,740
improvements there

528
00:20:16,740 --> 00:20:19,980
but uh if there's a call which directly

529
00:20:19,980 --> 00:20:21,360
calls for encrypting large amounts of

530
00:20:21,360 --> 00:20:22,559
data then

531
00:20:22,559 --> 00:20:26,340
sure we can consider that there

532
00:20:26,340 --> 00:20:29,220
okay I see no more questions so join me

533
00:20:29,220 --> 00:20:31,550
in thanking Oman again

534
00:20:31,550 --> 00:20:36,120
[Applause]

535
00:20:36,120 --> 00:20:38,640
okay so next up on Deck we have the

536
00:20:38,640 --> 00:20:41,220
paper coefficient grouping breaking

537
00:20:41,220 --> 00:20:43,679
jaggery and more the authors are fukun

538
00:20:43,679 --> 00:20:44,460
Louis

539
00:20:44,460 --> 00:20:47,400
Ravi Anand libu Bank Billy Mayer and

540
00:20:47,400 --> 00:20:49,140
take

541
00:20:49,140 --> 00:20:53,000
and fukang is going to give the talk

542
00:20:58,980 --> 00:21:01,140
I think

543
00:21:01,140 --> 00:21:03,539
thanks for introduction in this talk I

544
00:21:03,539 --> 00:21:05,700
will describe our work on how to break

545
00:21:05,700 --> 00:21:08,160
chocolate the fhe friendly Cipher

546
00:21:08,160 --> 00:21:10,559
chocolate and how to rescue it with our

547
00:21:10,559 --> 00:21:13,140
technique called coefficient grouping

548
00:21:13,140 --> 00:21:16,020
so this the outer line of this talk let

549
00:21:16,020 --> 00:21:19,200
us start so checklist and FHA friendly

550
00:21:19,200 --> 00:21:22,200
block Cipher proposed recently at acmcc

551
00:21:22,200 --> 00:21:26,600
2022 is defined over a large final feed

552
00:21:26,600 --> 00:21:30,059
f263 so although it's not a large Prime

553
00:21:30,059 --> 00:21:32,700
feed it's a extension feed of

554
00:21:32,700 --> 00:21:34,980
characteristic too so it generally

555
00:21:34,980 --> 00:21:38,940
follows the xpn structure and the input

556
00:21:38,940 --> 00:21:42,299
is composed of three state words where

557
00:21:42,299 --> 00:21:45,360
each state word is an element in the

558
00:21:45,360 --> 00:21:50,220
field F2 to 63. the Xbox is Sim it's a

559
00:21:50,220 --> 00:21:52,919
simple power map and the exponent is 2

560
00:21:52,919 --> 00:21:57,059
to the 32 plus one and then there is a

561
00:21:57,059 --> 00:22:01,020
fine transform uh defined by the F2

562
00:22:01,020 --> 00:22:04,919
linearized polynomial fbx and then there

563
00:22:04,919 --> 00:22:08,159
is a MDS Matrix and then key addition

564
00:22:08,159 --> 00:22:10,740
and constant addition the designers did

565
00:22:10,740 --> 00:22:13,380
not specify the concrete choice of M but

566
00:22:13,380 --> 00:22:15,360
our attack the time complexity of our

567
00:22:15,360 --> 00:22:16,799
text also

568
00:22:16,799 --> 00:22:19,740
it's not affected by the concrete chalks

569
00:22:19,740 --> 00:22:22,200
of M so it works for any choice of M

570
00:22:22,200 --> 00:22:25,740
so we indeed broke Charlie in less than

571
00:22:25,740 --> 00:22:27,780
three weeks after its publication only

572
00:22:27,780 --> 00:22:30,780
print and our technique is the high

573
00:22:30,780 --> 00:22:32,760
order differential attack so what we

574
00:22:32,760 --> 00:22:34,799
need to do is to outbound the LGBT

575
00:22:34,799 --> 00:22:36,780
degree we tried three different words

576
00:22:36,780 --> 00:22:38,880
although in this paper we only describe

577
00:22:38,880 --> 00:22:41,460
the general method called coefficient

578
00:22:41,460 --> 00:22:44,640
grouping and this technique is highly

579
00:22:44,640 --> 00:22:48,480
related to our method method two and you

580
00:22:48,480 --> 00:22:51,419
will see it later because because the

581
00:22:51,419 --> 00:22:53,280
first two methods are too dedicated for

582
00:22:53,280 --> 00:22:55,620
Charlie we want it's not elegant enough

583
00:22:55,620 --> 00:23:00,480
so we want to do more so and uh based on

584
00:23:00,480 --> 00:23:02,100
our understanding of the coefficient

585
00:23:02,100 --> 00:23:04,140
grouping Technique we finally figured

586
00:23:04,140 --> 00:23:06,600
out where the problem is and the

587
00:23:06,600 --> 00:23:08,940
proposed the contaminer and the

588
00:23:08,940 --> 00:23:11,520
designers also use this condom area the

589
00:23:11,520 --> 00:23:15,720
problem is the B is two spots so we

590
00:23:15,720 --> 00:23:18,059
propose to use a denser one

591
00:23:18,059 --> 00:23:20,400
so to understand our technique is

592
00:23:20,400 --> 00:23:22,260
necessary to First have some basic

593
00:23:22,260 --> 00:23:25,679
knowledge for the final fit if

594
00:23:25,679 --> 00:23:28,559
P to the N will p is a prime number and

595
00:23:28,559 --> 00:23:30,080
a is an

596
00:23:30,080 --> 00:23:34,140
operative integer so for the elements

597
00:23:34,140 --> 00:23:36,299
you know finally there are some

598
00:23:36,299 --> 00:23:39,440
different representations we use the

599
00:23:39,440 --> 00:23:42,380
representation based on polynomial basis

600
00:23:42,380 --> 00:23:45,900
uh specifically for with with a

601
00:23:45,900 --> 00:23:48,059
polynomial basis each element in the

602
00:23:48,059 --> 00:23:51,240
field can be uniquely represented by a

603
00:23:51,240 --> 00:23:55,500
vector of length n and each element in

604
00:23:55,500 --> 00:23:59,100
the vector is a negative integer modular

605
00:23:59,100 --> 00:24:01,559
pin modular p

606
00:24:01,559 --> 00:24:04,799
and we also have some random properties

607
00:24:04,799 --> 00:24:06,900
for the final feed and you can really

608
00:24:06,900 --> 00:24:10,260
find all of them in many textbooks yeah

609
00:24:10,260 --> 00:24:13,980
so our attack our technique is the how

610
00:24:13,980 --> 00:24:17,400
all the differential attack over f2dm so

611
00:24:17,400 --> 00:24:21,840
but maybe this attack is mostly done for

612
00:24:21,840 --> 00:24:25,620
ciphers of2 maybe so yeah so we need to

613
00:24:25,620 --> 00:24:29,940
First briefly introduce it so the most

614
00:24:29,940 --> 00:24:32,220
important part is how to define the

615
00:24:32,220 --> 00:24:35,280
algebra degree of univariate polynomial

616
00:24:35,280 --> 00:24:38,220
in the polynomial ring F2 to the m

617
00:24:38,220 --> 00:24:41,159
in word we can say the degree the

618
00:24:41,159 --> 00:24:43,740
algebraic degree of the of such a

619
00:24:43,740 --> 00:24:47,159
polynomial is the maximum harming weight

620
00:24:47,159 --> 00:24:50,059
of the exponents in all

621
00:24:50,059 --> 00:24:52,980
non-zero monomers I mean so for example

622
00:24:52,980 --> 00:24:54,840
if we check this

623
00:24:54,840 --> 00:24:58,559
uh polynomial F then we can say it's

624
00:24:58,559 --> 00:25:01,320
algebra degree is three because for the

625
00:25:01,320 --> 00:25:03,419
first monomial the coming rate of the

626
00:25:03,419 --> 00:25:05,940
exponent is 2 for the second monomer the

627
00:25:05,940 --> 00:25:08,159
harming weight of the exponent is three

628
00:25:08,159 --> 00:25:10,440
so the maximum Y is three

629
00:25:10,440 --> 00:25:15,179
and after we have this definition we can

630
00:25:15,179 --> 00:25:18,659
yeah if we know the algebra degree of

631
00:25:18,659 --> 00:25:22,500
the polynomial then we can easily Mount

632
00:25:22,500 --> 00:25:24,840
how all the differential attack we only

633
00:25:24,840 --> 00:25:29,760
need to have uh choose a Subspace whose

634
00:25:29,760 --> 00:25:31,980
Dimension is larger than DF plus one and

635
00:25:31,980 --> 00:25:34,980
then we yeah we we evaluate the eighth

636
00:25:34,980 --> 00:25:37,620
over this set of inputs and the sum will

637
00:25:37,620 --> 00:25:39,299
be zero

638
00:25:39,299 --> 00:25:42,059
indeed this is the although these are

639
00:25:42,059 --> 00:25:44,720
well known in mathematics it was only

640
00:25:44,720 --> 00:25:47,100
recently used for crypto analysis

641
00:25:47,100 --> 00:25:51,000
especially this was first down uh or

642
00:25:51,000 --> 00:25:55,260
mimic and the attack the attack

643
00:25:55,260 --> 00:25:58,620
the attack is very efficient because it

644
00:25:58,620 --> 00:26:03,419
mimic the they use a very uh I mean the

645
00:26:03,419 --> 00:26:05,640
the power map the degree is very small

646
00:26:05,640 --> 00:26:08,820
is only three so they showed that the

647
00:26:08,820 --> 00:26:11,880
algebraic degree increased linearly and

648
00:26:11,880 --> 00:26:15,120
you can see uh it indeed increase very

649
00:26:15,120 --> 00:26:18,900
in very slow way but if we use a more

650
00:26:18,900 --> 00:26:22,440
general power map whose exponent is 2 to

651
00:26:22,440 --> 00:26:25,740
D plus one if we again use this a

652
00:26:25,740 --> 00:26:29,400
similar idea we can see the bound is not

653
00:26:29,400 --> 00:26:32,880
not accurate at all especially in

654
00:26:32,880 --> 00:26:36,779
Charlie D is 32 and we cannot even break

655
00:26:36,779 --> 00:26:39,480
two rounds of chocolate with this simple

656
00:26:39,480 --> 00:26:40,919
method

657
00:26:40,919 --> 00:26:43,740
so that's why we developed our technique

658
00:26:43,740 --> 00:26:46,740
so as I said we have three methods but I

659
00:26:46,740 --> 00:26:49,140
will skip message one because it's not

660
00:26:49,140 --> 00:26:51,840
so relevant to our discovery of the

661
00:26:51,840 --> 00:26:54,059
coefficient grouping technique so but

662
00:26:54,059 --> 00:26:57,480
the method two is very important so let

663
00:26:57,480 --> 00:27:00,600
us record this is the definition of the

664
00:27:00,600 --> 00:27:03,980
Xbox and the fun polynomial in chocolate

665
00:27:03,980 --> 00:27:07,740
and for convenience we denote the

666
00:27:07,740 --> 00:27:12,320
three input State words of Charlie by

667
00:27:12,320 --> 00:27:15,779
z010203 and we denote the state after

668
00:27:15,779 --> 00:27:20,580
our runs by Z are one ZR2 the R3 so

669
00:27:20,580 --> 00:27:24,120
our this is our very naive idea so first

670
00:27:24,120 --> 00:27:26,940
we set the improved univariant

671
00:27:26,940 --> 00:27:30,240
polynomial in the variable X so you can

672
00:27:30,240 --> 00:27:33,240
see this is a linear polynomial or

673
00:27:33,240 --> 00:27:35,880
linear polynomial and then we can know

674
00:27:35,880 --> 00:27:38,640
after any number of runs each each

675
00:27:38,640 --> 00:27:40,919
statework will be a universal polynomial

676
00:27:40,919 --> 00:27:43,260
in X because we only have one variable X

677
00:27:43,260 --> 00:27:46,860
then what we need to do is to trace how

678
00:27:46,860 --> 00:27:49,559
the polynomial representing the internal

679
00:27:49,559 --> 00:27:51,600
State evolves through that one function

680
00:27:51,600 --> 00:27:54,480
and then step three yeah

681
00:27:54,480 --> 00:27:56,760
very naively we compute all possible

682
00:27:56,760 --> 00:27:58,980
exponents of this part in this

683
00:27:58,980 --> 00:28:01,679
polynomial and according to the

684
00:28:01,679 --> 00:28:04,500
definition of the LG Bridge we what we

685
00:28:04,500 --> 00:28:07,279
need to do is to find the exponent

686
00:28:07,279 --> 00:28:10,679
from this set with the maximal Heming

687
00:28:10,679 --> 00:28:13,020
weight of course you should know

688
00:28:13,020 --> 00:28:15,720
immediately steps we cannot work for

689
00:28:15,720 --> 00:28:18,419
large R because yeah too many monomers

690
00:28:18,419 --> 00:28:22,080
that are increases and to do this to

691
00:28:22,080 --> 00:28:24,000
trace the evolution of the polynomials

692
00:28:24,000 --> 00:28:26,779
we need to have a more General

693
00:28:26,779 --> 00:28:29,700
representation of the univariant

694
00:28:29,700 --> 00:28:32,580
polynomial for for the internal state

695
00:28:32,580 --> 00:28:35,880
are the our the ri specifically we can

696
00:28:35,880 --> 00:28:41,820
introduce a set WR and it denotes the it

697
00:28:41,820 --> 00:28:44,700
knows all possible exponents that will

698
00:28:44,700 --> 00:28:46,620
appear in the polynomial representation

699
00:28:46,620 --> 00:28:50,880
in r in the r1zr2 the R3 in this way so

700
00:28:50,880 --> 00:28:54,360
Z i102 DSP can can be represented in the

701
00:28:54,360 --> 00:28:55,980
same way

702
00:28:55,980 --> 00:28:59,100
and then we can trace how this

703
00:28:59,100 --> 00:29:02,039
representation evolves through the s-box

704
00:29:02,039 --> 00:29:05,159
and the fine transform BX first the S

705
00:29:05,159 --> 00:29:08,640
Works according to uh what I say is the

706
00:29:08,640 --> 00:29:10,799
Vietnam property for the final feed we

707
00:29:10,799 --> 00:29:13,620
can easily compute this how it evolves

708
00:29:13,620 --> 00:29:16,559
through S and we can get again so this

709
00:29:16,559 --> 00:29:19,260
is very beautiful so very simple the

710
00:29:19,260 --> 00:29:21,419
exponent yeah it's very beautiful and

711
00:29:21,419 --> 00:29:23,820
again through BX yeah very simple

712
00:29:23,820 --> 00:29:26,820
mathematics here and we will get again

713
00:29:26,820 --> 00:29:29,220
very structured polynomial

714
00:29:29,220 --> 00:29:32,399
representation for the uh for the

715
00:29:32,399 --> 00:29:35,340
internal State and for the matrix

716
00:29:35,340 --> 00:29:38,240
multiplication it only affects the

717
00:29:38,240 --> 00:29:41,820
coefficients of the polynomials it will

718
00:29:41,820 --> 00:29:43,980
not introduce additional

719
00:29:43,980 --> 00:29:46,440
I mean it will not introduce new

720
00:29:46,440 --> 00:29:48,960
monomers in the

721
00:29:48,960 --> 00:29:53,100
in the yeah in the original polynomial

722
00:29:53,100 --> 00:29:57,240
so so we can say so we can see we can

723
00:29:57,240 --> 00:30:00,659
say uh the state after one round

724
00:30:00,659 --> 00:30:04,200
permutation uh I mean the the polynomial

725
00:30:04,200 --> 00:30:06,539
implantation of the state of one round

726
00:30:06,539 --> 00:30:09,779
will be in this way so it's identity is

727
00:30:09,779 --> 00:30:11,399
identical to this representation because

728
00:30:11,399 --> 00:30:15,179
Matrix M does not affect it so

729
00:30:15,179 --> 00:30:18,840
So based on this uh representation we

730
00:30:18,840 --> 00:30:21,779
can know the relation between the set WR

731
00:30:21,779 --> 00:30:25,200
and W R plus one and since we are

732
00:30:25,200 --> 00:30:27,840
working on the polynomial ring we have

733
00:30:27,840 --> 00:30:31,500
to consider the exponent modular 2 to

734
00:30:31,500 --> 00:30:34,380
the m 2 to the 63 minus one this is

735
00:30:34,380 --> 00:30:36,779
because and of course if the exponent is

736
00:30:36,779 --> 00:30:40,559
exactly 2 to the 33 minus y it should be

737
00:30:40,559 --> 00:30:42,659
uh we should not do the modular addition

738
00:30:42,659 --> 00:30:45,419
this is based on these two properties

739
00:30:45,419 --> 00:30:47,640
and this is why we Define the function

740
00:30:47,640 --> 00:30:49,440
mm

741
00:30:49,440 --> 00:30:52,320
so now we have know the relation between

742
00:30:52,320 --> 00:30:56,039
our W and W R plus one in other words we

743
00:30:56,039 --> 00:30:57,720
can uh

744
00:30:57,720 --> 00:31:03,960
represent w r uh wi in terms of the uh

745
00:31:03,960 --> 00:31:08,940
in terms of variables in the set WR

746
00:31:08,940 --> 00:31:12,659
and why we consider w r plus 2 because

747
00:31:12,659 --> 00:31:14,039
yeah

748
00:31:14,039 --> 00:31:16,380
in charge of leaders the designers trade

749
00:31:16,380 --> 00:31:19,559
two runs as one big round so that's why

750
00:31:19,559 --> 00:31:22,260
we consider w r plus two and you will

751
00:31:22,260 --> 00:31:24,419
find later this is very important for

752
00:31:24,419 --> 00:31:26,760
our coefficient grouping technique so

753
00:31:26,760 --> 00:31:29,460
for we can because we know the relation

754
00:31:29,460 --> 00:31:32,460
between WR and a WR plus one we we also

755
00:31:32,460 --> 00:31:35,460
know the relation between WR plus 2 and

756
00:31:35,460 --> 00:31:38,100
the WR plus one and then we further

757
00:31:38,100 --> 00:31:43,559
replace the WR plus one uh in WR so it's

758
00:31:43,559 --> 00:31:44,820
just like this

759
00:31:44,820 --> 00:31:47,460
also here and here and then we can get

760
00:31:47,460 --> 00:31:50,159
the relation between the set WR

761
00:31:50,159 --> 00:31:53,880
plus 2 and the set of WR

762
00:31:53,880 --> 00:31:57,720
and we know note that our initial input

763
00:31:57,720 --> 00:32:01,740
polynomial is ax plus b so this the set

764
00:32:01,740 --> 00:32:04,980
of exponents is only only zero and one

765
00:32:04,980 --> 00:32:07,880
and so we can we also know the relation

766
00:32:07,880 --> 00:32:12,179
of W R and W UPS 2. so we can we can

767
00:32:12,179 --> 00:32:17,159
simply compute W 2 W 4 W 6 W 8 by yeah

768
00:32:17,159 --> 00:32:19,559
naive enumeration of course it will

769
00:32:19,559 --> 00:32:21,600
become impractical

770
00:32:21,600 --> 00:32:24,299
even for small r yeah

771
00:32:24,299 --> 00:32:25,679
so

772
00:32:25,679 --> 00:32:29,100
this is in our method two we observed

773
00:32:29,100 --> 00:32:31,460
that for the concrete choice of the Xbox

774
00:32:31,460 --> 00:32:34,140
of the polynomial s and the fine

775
00:32:34,140 --> 00:32:36,419
polynomial B and the

776
00:32:36,419 --> 00:32:41,279
the size of final field F 2263 we indeed

777
00:32:41,279 --> 00:32:43,919
can split we can indeed can use two

778
00:32:43,919 --> 00:32:47,039
smaller sets to describe the set WR and

779
00:32:47,039 --> 00:32:50,460
the two smaller cells can be computed

780
00:32:50,460 --> 00:32:52,500
independent but this is highly related

781
00:32:52,500 --> 00:32:55,020
uh related to the concrete choice of S

782
00:32:55,020 --> 00:32:58,080
and B so it's not General but mainly we

783
00:32:58,080 --> 00:33:01,260
can do this for up to 16 rounds so and

784
00:33:01,260 --> 00:33:02,399
we know

785
00:33:02,399 --> 00:33:05,520
a chocolate has only 16 rounds so we can

786
00:33:05,520 --> 00:33:07,919
break it with method two and we get the

787
00:33:07,919 --> 00:33:11,399
up round is 37 and so with the time

788
00:33:11,399 --> 00:33:13,200
complexity to construct the

789
00:33:13,200 --> 00:33:17,299
distinguisher is 2 to the 38 but yeah

790
00:33:17,299 --> 00:33:20,820
not elegant enough because why

791
00:33:20,820 --> 00:33:24,500
because it's too dedicated for Charlie

792
00:33:24,500 --> 00:33:27,659
so we are motivated so we developed the

793
00:33:27,659 --> 00:33:29,460
coefficient grouping Technique we are

794
00:33:29,460 --> 00:33:31,740
mainly motivated by the three problems

795
00:33:31,740 --> 00:33:34,380
first do we really need to compute the

796
00:33:34,380 --> 00:33:36,840
standard WR round by round

797
00:33:36,840 --> 00:33:40,980
and second the method is not beautiful I

798
00:33:40,980 --> 00:33:44,940
mean a little ugly I mean so uh so we

799
00:33:44,940 --> 00:33:46,200
want to have

800
00:33:46,200 --> 00:33:49,740
a more elegant and general method for a

801
00:33:49,740 --> 00:33:52,500
more General construction where the s

802
00:33:52,500 --> 00:33:55,740
box is in this way and the B is in this

803
00:33:55,740 --> 00:33:59,279
in this form and we also work for a

804
00:33:59,279 --> 00:34:02,820
general final field F2 to the n

805
00:34:02,820 --> 00:34:05,880
so indeed the idea is the same we set

806
00:34:05,880 --> 00:34:09,659
the input polynomial as ax plus b and

807
00:34:09,659 --> 00:34:13,580
then we Trace we introduce the set WR to

808
00:34:13,580 --> 00:34:18,119
represent uh all possible exponents uh

809
00:34:18,119 --> 00:34:20,460
that will appear in the polynomial

810
00:34:20,460 --> 00:34:23,580
representation of the internal State the

811
00:34:23,580 --> 00:34:27,719
R1 zr2dr3 and then we Trace how the set

812
00:34:27,719 --> 00:34:30,119
evolves through the Run function that's

813
00:34:30,119 --> 00:34:32,580
how we get the relation between the Set

814
00:34:32,580 --> 00:34:36,839
uh for WR plus 1 and W R uh it's indeed

815
00:34:36,839 --> 00:34:40,139
the same we only so only the changes

816
00:34:40,139 --> 00:34:44,119
here we replace the original k0 K1 K2

817
00:34:44,119 --> 00:34:49,560
because in chocolate k0 I think is 32 K1

818
00:34:49,560 --> 00:34:53,460
is 0 k 2 is 3 so now we only treat them

819
00:34:53,460 --> 00:34:55,440
as a variables

820
00:34:55,440 --> 00:34:57,839
so and similarly we can get the

821
00:34:57,839 --> 00:35:00,599
representation of w r plus 2 in terms of

822
00:35:00,599 --> 00:35:01,920
WR

823
00:35:01,920 --> 00:35:05,160
and if you do this for w r plus three

824
00:35:05,160 --> 00:35:08,940
again we can also uh represent w r plus

825
00:35:08,940 --> 00:35:11,940
three in terms of WR and they have a

826
00:35:11,940 --> 00:35:14,700
very beautiful uh

827
00:35:14,700 --> 00:35:17,940
I mean a structure specifically if you

828
00:35:17,940 --> 00:35:20,400
do this for WR plus three WR plus four

829
00:35:20,400 --> 00:35:22,859
you will see they all have the same form

830
00:35:22,859 --> 00:35:25,380
where there is a number

831
00:35:25,380 --> 00:35:28,440
uh the number is 2 to the power 2 to the

832
00:35:28,440 --> 00:35:32,160
I and then it's followed it will be

833
00:35:32,160 --> 00:35:34,500
multiplied by a certain number of

834
00:35:34,500 --> 00:35:38,520
variables belowing to the set WR

835
00:35:38,520 --> 00:35:41,420
and and we can

836
00:35:41,420 --> 00:35:45,420
specify the concrete number of variables

837
00:35:45,420 --> 00:35:50,099
for each such uh number and we we can

838
00:35:50,099 --> 00:35:53,940
for convenience we can say uh because we

839
00:35:53,940 --> 00:35:55,920
are considering the polynomial in the

840
00:35:55,920 --> 00:36:00,800
polynomial Ray F2 to the m uh so I mean

841
00:36:00,800 --> 00:36:03,839
so this I mean

842
00:36:03,839 --> 00:36:07,680
uh these numbers can only be two to zero

843
00:36:07,680 --> 00:36:09,359
two to the one two three until two to

844
00:36:09,359 --> 00:36:14,579
the N minus 1. and we can we can so we

845
00:36:14,579 --> 00:36:16,560
can for this representation we can see

846
00:36:16,560 --> 00:36:18,900
uh there are

847
00:36:18,900 --> 00:36:20,420
NJ

848
00:36:20,420 --> 00:36:23,460
variables or that will be multiplied

849
00:36:23,460 --> 00:36:26,280
with the number due to the

850
00:36:26,280 --> 00:36:29,160
power J and we say we group these

851
00:36:29,160 --> 00:36:31,680
variables this is why we name this

852
00:36:31,680 --> 00:36:33,060
technique

853
00:36:33,060 --> 00:36:37,320
and in this way WR plus L can be fully

854
00:36:37,320 --> 00:36:40,560
described with a set of a vector of

855
00:36:40,560 --> 00:36:44,880
integers in under the sets WR I mean n

856
00:36:44,880 --> 00:36:47,099
exactly means the number of variables

857
00:36:47,099 --> 00:36:49,980
for each term 2 to the J

858
00:36:49,980 --> 00:36:54,359
and uh for for w0 we know it is zero one

859
00:36:54,359 --> 00:36:56,579
if we represent it with our new

860
00:36:56,579 --> 00:36:59,400
representation then the this Vector of

861
00:36:59,400 --> 00:37:01,500
integers will be zero zero to zero one

862
00:37:01,500 --> 00:37:05,040
because yeah in this representation on

863
00:37:05,040 --> 00:37:06,599
we only

864
00:37:06,599 --> 00:37:09,900
for the X for the integer two to the

865
00:37:09,900 --> 00:37:12,000
power zero there is one variable so this

866
00:37:12,000 --> 00:37:14,099
is one but for the remaining two to the

867
00:37:14,099 --> 00:37:17,040
power one no variable so it's zero and

868
00:37:17,040 --> 00:37:19,560
according to the relation between W R

869
00:37:19,560 --> 00:37:24,119
and W R plus one we can get a very we

870
00:37:24,119 --> 00:37:27,240
can note we can easily check how the

871
00:37:27,240 --> 00:37:30,240
number of variables I mean uh

872
00:37:30,240 --> 00:37:34,560
yeah I mean how to how the how we can I

873
00:37:34,560 --> 00:37:36,660
mean how the vector of integers

874
00:37:36,660 --> 00:37:39,780
used to describe the set w i evolves I

875
00:37:39,780 --> 00:37:42,200
mean we can get we can compute the

876
00:37:42,200 --> 00:37:45,960
vector integers in linear time to uh to

877
00:37:45,960 --> 00:37:48,240
describe WR based on this simple

878
00:37:48,240 --> 00:37:50,820
recursive relation

879
00:37:50,820 --> 00:37:54,480
so now we know that we can compute the

880
00:37:54,480 --> 00:37:59,280
vector used to represent uh WR in linear

881
00:37:59,280 --> 00:38:02,880
time and we can set uh we we can relate

882
00:38:02,880 --> 00:38:03,900
WR

883
00:38:03,900 --> 00:38:08,099
uh with w0 and the the number of in the

884
00:38:08,099 --> 00:38:11,460
the vector of integers can be computed

885
00:38:11,460 --> 00:38:12,960
in linear time so we get this

886
00:38:12,960 --> 00:38:16,440
representation but it's not

887
00:38:16,440 --> 00:38:18,839
it's still not over because yeah it's

888
00:38:18,839 --> 00:38:21,720
still not uh intuitive so what we do is

889
00:38:21,720 --> 00:38:25,680
we can see that for each such term for E

890
00:38:25,680 --> 00:38:28,800
for each for each such part we can see

891
00:38:28,800 --> 00:38:32,099
that it's it's in its value is indeed in

892
00:38:32,099 --> 00:38:33,839
this set

893
00:38:33,839 --> 00:38:36,599
so what we've So based on this

894
00:38:36,599 --> 00:38:38,940
observation we can use another

895
00:38:38,940 --> 00:38:42,000
representation of the set WR and it's

896
00:38:42,000 --> 00:38:44,700
very beautiful so it's just like this so

897
00:38:44,700 --> 00:38:46,859
what we need to do is to so note that

898
00:38:46,859 --> 00:38:49,680
our goal is to find the maximal harming

899
00:38:49,680 --> 00:38:50,700
weights

900
00:38:50,700 --> 00:38:53,760
of the element in the cell WR so we can

901
00:38:53,760 --> 00:38:56,700
further reduce this into a optimization

902
00:38:56,700 --> 00:39:00,420
problem so this is our uh what do we

903
00:39:00,420 --> 00:39:02,339
need to maximize and they have and these

904
00:39:02,339 --> 00:39:04,140
variables should certify these

905
00:39:04,140 --> 00:39:05,339
constraints

906
00:39:05,339 --> 00:39:07,920
of in this paper we solve this

907
00:39:07,920 --> 00:39:10,260
optimization problem with Blackboard

908
00:39:10,260 --> 00:39:12,900
storage but intuitive I have the

909
00:39:12,900 --> 00:39:15,480
intuition I have and this should be an

910
00:39:15,480 --> 00:39:17,579
efficient algorithm for this real

911
00:39:17,579 --> 00:39:20,099
structure of optimization problem and I

912
00:39:20,099 --> 00:39:22,320
did find it and proved the crackliness

913
00:39:22,320 --> 00:39:24,359
of it and it works in linear time so now

914
00:39:24,359 --> 00:39:26,700
everything works in linear time it means

915
00:39:26,700 --> 00:39:29,520
we can upper bound the algebra degree in

916
00:39:29,520 --> 00:39:33,720
linear time for this special uh Cipher

917
00:39:33,720 --> 00:39:37,260
and we can see the for Charlie the LGBT

918
00:39:37,260 --> 00:39:40,079
degree increased linearly and we can

919
00:39:40,079 --> 00:39:41,460
yeah attack

920
00:39:41,460 --> 00:39:43,500
for 20

921
00:39:43,500 --> 00:39:48,119
6 runs and yeah if we know carefully

922
00:39:48,119 --> 00:39:49,800
look into the coefficient grouping

923
00:39:49,800 --> 00:39:52,500
Technique we can see the main problem is

924
00:39:52,500 --> 00:39:56,940
caused by the sparsity of B so yeah it's

925
00:39:56,940 --> 00:39:58,980
more of course this requires significant

926
00:39:58,980 --> 00:40:01,020
additional work you can check it

927
00:40:01,020 --> 00:40:04,859
in our paper and indeed we did made some

928
00:40:04,859 --> 00:40:07,020
new progress for the coefficient

929
00:40:07,020 --> 00:40:10,380
grouping technique for complexity

930
00:40:10,380 --> 00:40:12,960
so in concluding we developed an

931
00:40:12,960 --> 00:40:15,540
efficient degree evaluation technique in

932
00:40:15,540 --> 00:40:17,880
linear time for a special experience

933
00:40:17,880 --> 00:40:20,700
ciphers over F2 to the m and it

934
00:40:20,700 --> 00:40:22,619
indicates that we should be careful of

935
00:40:22,619 --> 00:40:25,079
such designs over a large final feeds

936
00:40:25,079 --> 00:40:27,720
and there's always an open problem so

937
00:40:27,720 --> 00:40:30,780
many of course I mean Christine opened a

938
00:40:30,780 --> 00:40:33,960
new Direction so in this field and we

939
00:40:33,960 --> 00:40:36,480
have many such ciphers and the mem the

940
00:40:36,480 --> 00:40:38,700
open problem is how to develop other

941
00:40:38,700 --> 00:40:41,040
crypto analytic techniques for these

942
00:40:41,040 --> 00:40:42,900
types of servers over a large final fit

943
00:40:42,900 --> 00:40:44,460
so that's all thank you

944
00:40:44,460 --> 00:40:45,580
thank you

945
00:40:45,580 --> 00:40:50,520
[Applause]

946
00:40:50,520 --> 00:40:52,500
all right we have time for a quick

947
00:40:52,500 --> 00:40:53,579
question

948
00:40:53,579 --> 00:40:57,200
it seems a question is running

949
00:40:57,720 --> 00:41:00,300
thank you for the nice talk

950
00:41:00,300 --> 00:41:03,000
um you propose to change from a

951
00:41:03,000 --> 00:41:05,460
polynomial that is passed with only one

952
00:41:05,460 --> 00:41:07,800
coefficient that takes X that is in fact

953
00:41:07,800 --> 00:41:09,480
equivalent to

954
00:41:09,480 --> 00:41:12,240
some just Alpha X plus c

955
00:41:12,240 --> 00:41:14,160
actually if you apply the probabilities

956
00:41:14,160 --> 00:41:17,099
and then what you propose is to have

957
00:41:17,099 --> 00:41:19,520
four terms in the polynomial

958
00:41:19,520 --> 00:41:23,940
as a control for the degree expansion do

959
00:41:23,940 --> 00:41:27,900
you think if you only have two terms uh

960
00:41:27,900 --> 00:41:30,780
that contains X in the linear polynomial

961
00:41:30,780 --> 00:41:32,940
it already frustrates the increasing of

962
00:41:32,940 --> 00:41:34,740
the degree although you have something

963
00:41:34,740 --> 00:41:38,040
if it's sparse I mean you go from one to

964
00:41:38,040 --> 00:41:40,560
four is there something in between you

965
00:41:40,560 --> 00:41:43,520
mean the spasticity of B yes

966
00:41:43,520 --> 00:41:46,800
and I think you will find it later we'll

967
00:41:46,800 --> 00:41:48,300
probably see that later yeah okay you

968
00:41:48,300 --> 00:41:52,500
need to find something okay thanks yeah

969
00:41:52,500 --> 00:41:57,740
okay thanks a lot then let's thank again

970
00:42:00,599 --> 00:42:02,940
and last but not least

971
00:42:02,940 --> 00:42:05,160
the third paper is pit force and

972
00:42:05,160 --> 00:42:06,839
shortcomings for decompositions and

973
00:42:06,839 --> 00:42:08,280
alignment

974
00:42:08,280 --> 00:42:11,900
and the authors are that this

975
00:42:11,900 --> 00:42:15,060
and Patrick Neumann

976
00:42:15,060 --> 00:42:18,980
and Patrick is going to give the talk

977
00:42:19,260 --> 00:42:21,119
yeah thank you very much for the

978
00:42:21,119 --> 00:42:24,359
introduction and let me directly start

979
00:42:24,359 --> 00:42:27,000
with explaining what I mean if I talk

980
00:42:27,000 --> 00:42:29,400
about decomposition

981
00:42:29,400 --> 00:42:32,579
um yeah I mean that we decompose a

982
00:42:32,579 --> 00:42:35,820
function into a linear layer L1 a

983
00:42:35,820 --> 00:42:38,220
parallel application of multiple Xboxes

984
00:42:38,220 --> 00:42:44,280
SI and another linear al2 and SEO might

985
00:42:44,280 --> 00:42:47,160
know we are actually quite used to this

986
00:42:47,160 --> 00:42:50,040
description of a round function as Alpha

987
00:42:50,040 --> 00:42:52,440
Cipher so many of our ciphers are

988
00:42:52,440 --> 00:42:54,480
actually described in this way

989
00:42:54,480 --> 00:42:58,400
and then we may actually base security

990
00:42:58,400 --> 00:43:02,220
arguments on such a decomposition for

991
00:43:02,220 --> 00:43:05,220
example let's say we want to count the

992
00:43:05,220 --> 00:43:08,700
number of active exportses to bond the

993
00:43:08,700 --> 00:43:11,160
probability of a differential

994
00:43:11,160 --> 00:43:14,460
characteristic so in this example let's

995
00:43:14,460 --> 00:43:17,339
just say that we have two active s boxes

996
00:43:17,339 --> 00:43:20,460
S1 and S2

997
00:43:20,460 --> 00:43:22,800
um but then the question is what happens

998
00:43:22,800 --> 00:43:25,500
if we actually have another

999
00:43:25,500 --> 00:43:26,819
decomposition

1000
00:43:26,819 --> 00:43:30,060
so what potentially can happen is

1001
00:43:30,060 --> 00:43:31,560
that we just get a different result

1002
00:43:31,560 --> 00:43:34,920
right so let's say in this example we

1003
00:43:34,920 --> 00:43:37,619
only would get one active s box and

1004
00:43:37,619 --> 00:43:40,260
therefore we would underestimate the

1005
00:43:40,260 --> 00:43:43,380
probability of our differential

1006
00:43:43,380 --> 00:43:45,900
so the question we asked ourselves is

1007
00:43:45,900 --> 00:43:47,880
when can this happen when can we

1008
00:43:47,880 --> 00:43:51,420
actually get multiple decompositions

1009
00:43:51,420 --> 00:43:54,119
or put slightly differently

1010
00:43:54,119 --> 00:43:55,680
um our question is when the

1011
00:43:55,680 --> 00:43:58,140
decomposition unique and of course they

1012
00:43:58,140 --> 00:44:01,260
are well known limitations limitations

1013
00:44:01,260 --> 00:44:04,319
to the uniqueness of a decomposition the

1014
00:44:04,319 --> 00:44:07,560
first one is that you can always reorder

1015
00:44:07,560 --> 00:44:10,200
us boxes so in this example and we

1016
00:44:10,200 --> 00:44:14,280
change the position of S2 and S1 but you

1017
00:44:14,280 --> 00:44:17,060
can easily adjust for this by

1018
00:44:17,060 --> 00:44:20,400
changing the linear layer so in this

1019
00:44:20,400 --> 00:44:22,200
example the new linear layer would be

1020
00:44:22,200 --> 00:44:26,220
what's indicated by the blue boxes

1021
00:44:26,220 --> 00:44:28,680
and another thing you can always do is

1022
00:44:28,680 --> 00:44:30,599
you can look at linear equivalent as

1023
00:44:30,599 --> 00:44:33,960
boxes so you take linear Transformations

1024
00:44:33,960 --> 00:44:37,680
a i and bi and then your new Xboxes

1025
00:44:37,680 --> 00:44:39,900
become what's indicated by the queen

1026
00:44:39,900 --> 00:44:43,260
boxes and again you can account for this

1027
00:44:43,260 --> 00:44:46,920
by adjusting your linear layer and again

1028
00:44:46,920 --> 00:44:49,680
the blue boxes give you the new linear

1029
00:44:49,680 --> 00:44:51,000
layers

1030
00:44:51,000 --> 00:44:53,400
and the last thing you can also always

1031
00:44:53,400 --> 00:44:57,119
do is just combining s boxes so here I

1032
00:44:57,119 --> 00:45:00,180
have combined S2 and S3 into one big s

1033
00:45:00,180 --> 00:45:03,359
box that's also always possible so um

1034
00:45:03,359 --> 00:45:05,520
our question actually becomes when is

1035
00:45:05,520 --> 00:45:07,500
the decomposition unique up to those

1036
00:45:07,500 --> 00:45:10,440
limitations

1037
00:45:10,440 --> 00:45:12,900
and before I give you the result I need

1038
00:45:12,900 --> 00:45:15,180
two short definitions the first one is

1039
00:45:15,180 --> 00:45:17,520
about maximal differential uniformity

1040
00:45:17,520 --> 00:45:20,220
and says that a function has maximal

1041
00:45:20,220 --> 00:45:23,760
differential uniformity if we can find a

1042
00:45:23,760 --> 00:45:27,300
non-zero Alpha and beta such that this

1043
00:45:27,300 --> 00:45:30,240
equation here holds for all X

1044
00:45:30,240 --> 00:45:33,119
and similarly we need a definition of

1045
00:45:33,119 --> 00:45:36,000
Maximum linearity and this just states

1046
00:45:36,000 --> 00:45:38,300
that the function has maximal linearity

1047
00:45:38,300 --> 00:45:41,760
and if we can find a non-zero Alpha such

1048
00:45:41,760 --> 00:45:45,359
that the inner product of Alpha and F is

1049
00:45:45,359 --> 00:45:47,460
in a fine function

1050
00:45:47,460 --> 00:45:50,760
and with that our main result becomes

1051
00:45:50,760 --> 00:45:54,000
that a decomposition is not unique if

1052
00:45:54,000 --> 00:45:56,579
and only if one of the S boxes has

1053
00:45:56,579 --> 00:45:58,920
maximal differential uniformity and

1054
00:45:58,920 --> 00:46:01,500
another one is maximum linearity

1055
00:46:01,500 --> 00:46:04,740
that's actually quite nice because for

1056
00:46:04,740 --> 00:46:06,900
all cryptocurrency strong as boxes we

1057
00:46:06,900 --> 00:46:09,180
now know that such a decomposition is

1058
00:46:09,180 --> 00:46:11,280
actually unique of course again up to

1059
00:46:11,280 --> 00:46:15,240
those limitations I showed you and as a

1060
00:46:15,240 --> 00:46:18,359
side note this also shows that if we are

1061
00:46:18,359 --> 00:46:20,880
giving if we are given one decomposition

1062
00:46:20,880 --> 00:46:23,040
then we can easily check if it's

1063
00:46:23,040 --> 00:46:24,839
actually unique by

1064
00:46:24,839 --> 00:46:27,140
um just Computing the maximum

1065
00:46:27,140 --> 00:46:29,819
differential uniformity and linearity of

1066
00:46:29,819 --> 00:46:31,619
the S boxes and

1067
00:46:31,619 --> 00:46:34,140
um where we are Computing the uniformity

1068
00:46:34,140 --> 00:46:36,180
and the linearity and if they are both

1069
00:46:36,180 --> 00:46:38,599
not maximal then we know that the

1070
00:46:38,599 --> 00:46:41,819
decomposition is actually unique

1071
00:46:41,819 --> 00:46:45,119
okay so let uh we actually show what can

1072
00:46:45,119 --> 00:46:47,040
go wrong why we could actually end up

1073
00:46:47,040 --> 00:46:49,740
with multiple decompositions in case

1074
00:46:49,740 --> 00:46:52,140
that one Xbox has maximal differential

1075
00:46:52,140 --> 00:46:54,660
uniformity and another one has maximum

1076
00:46:54,660 --> 00:46:58,140
linearity and for this we need to limit

1077
00:46:58,140 --> 00:47:01,740
our the first one being that functions

1078
00:47:01,740 --> 00:47:05,339
with maximal differential uniformity are

1079
00:47:05,339 --> 00:47:07,500
linear equivalent to functions of this

1080
00:47:07,500 --> 00:47:08,520
form

1081
00:47:08,520 --> 00:47:11,520
and I think it's actually already easy

1082
00:47:11,520 --> 00:47:14,940
to see that this function has maximal

1083
00:47:14,940 --> 00:47:17,460
differential uniformity with the course

1084
00:47:17,460 --> 00:47:20,099
you can just add a difference in y and

1085
00:47:20,099 --> 00:47:22,920
get the same difference at the output no

1086
00:47:22,920 --> 00:47:25,200
no matter if the input

1087
00:47:25,200 --> 00:47:28,680
and for the other direction

1088
00:47:28,680 --> 00:47:30,599
um I want to at least give you the idea

1089
00:47:30,599 --> 00:47:34,140
how it works we just remember that if

1090
00:47:34,140 --> 00:47:35,640
having maximal differential unit

1091
00:47:35,640 --> 00:47:38,099
uniformity means that we can find

1092
00:47:38,099 --> 00:47:41,400
non-zero Alpha and beta such that this

1093
00:47:41,400 --> 00:47:44,160
equation holds and then

1094
00:47:44,160 --> 00:47:46,740
all we have to do is linearly transform

1095
00:47:46,740 --> 00:47:50,640
F into G such that Alpha and beta are

1096
00:47:50,640 --> 00:47:52,380
both correspond to the last bit and we

1097
00:47:52,380 --> 00:47:55,319
call the last bit y

1098
00:47:55,319 --> 00:47:58,260
okay now the second claimer we need is

1099
00:47:58,260 --> 00:48:00,800
that functions with maximum linearity

1100
00:48:00,800 --> 00:48:03,540
are a fine equivalent to functions of

1101
00:48:03,540 --> 00:48:04,680
this form

1102
00:48:04,680 --> 00:48:08,520
and again here we we can just use the or

1103
00:48:08,520 --> 00:48:10,440
look at the first coordinate function

1104
00:48:10,440 --> 00:48:13,200
and see that this function

1105
00:48:13,200 --> 00:48:13,920
um

1106
00:48:13,920 --> 00:48:16,680
would indeed have maximal linearity and

1107
00:48:16,680 --> 00:48:18,780
again for the other direction

1108
00:48:18,780 --> 00:48:22,920
we use a quite similar approach

1109
00:48:22,920 --> 00:48:25,940
so again we call that F has maximum

1110
00:48:25,940 --> 00:48:29,940
linearity if we can find non-zero Alpha

1111
00:48:29,940 --> 00:48:33,540
Beta and the constant C such that this

1112
00:48:33,540 --> 00:48:36,720
equation here holds and then first we

1113
00:48:36,720 --> 00:48:39,060
get rid of the constancy

1114
00:48:39,060 --> 00:48:43,079
by adding F of co2f so now the function

1115
00:48:43,079 --> 00:48:45,180
is just linear

1116
00:48:45,180 --> 00:48:48,619
and then again we linearly transform

1117
00:48:48,619 --> 00:48:52,619
this function into H in such a way that

1118
00:48:52,619 --> 00:48:54,960
Alpha and beta now both become the

1119
00:48:54,960 --> 00:48:56,819
vector that is one and first coordinate

1120
00:48:56,819 --> 00:49:00,300
and the zero otherwise

1121
00:49:00,300 --> 00:49:02,339
okay with those two lameter we can

1122
00:49:02,339 --> 00:49:05,160
actually restate our main result

1123
00:49:05,160 --> 00:49:07,800
um in functions without

1124
00:49:07,800 --> 00:49:10,920
a unique decomposition are exactly those

1125
00:49:10,920 --> 00:49:13,140
that are a fine equivalent to functions

1126
00:49:13,140 --> 00:49:16,380
of such a form and here the first part

1127
00:49:16,380 --> 00:49:18,300
corresponds to the s box with maximum

1128
00:49:18,300 --> 00:49:20,940
differential uniformity and the second

1129
00:49:20,940 --> 00:49:22,859
part to the one with maximal linearity

1130
00:49:22,859 --> 00:49:25,380
and in case we have more than two s

1131
00:49:25,380 --> 00:49:28,140
boxes than we just now see them as part

1132
00:49:28,140 --> 00:49:29,640
of one of

1133
00:49:29,640 --> 00:49:31,740
those two s boxes

1134
00:49:31,740 --> 00:49:35,760
and what now can happen is that we can

1135
00:49:35,760 --> 00:49:41,099
at the input side at X3 to X2

1136
00:49:41,099 --> 00:49:44,579
but we also know X weird output so you

1137
00:49:44,579 --> 00:49:48,140
can basically revert this operation and

1138
00:49:48,140 --> 00:49:51,000
effectively do not change anything

1139
00:49:51,000 --> 00:49:53,460
and into in terms of linear

1140
00:49:53,460 --> 00:49:55,140
Transformations that would actually look

1141
00:49:55,140 --> 00:49:56,280
like this

1142
00:49:56,280 --> 00:49:59,819
so effectively we started with two

1143
00:49:59,819 --> 00:50:01,560
linear layers that are basically the

1144
00:50:01,560 --> 00:50:03,359
identity that's why they are not really

1145
00:50:03,359 --> 00:50:06,000
shown here and we ended up with two

1146
00:50:06,000 --> 00:50:08,880
different linear layers so the flows are

1147
00:50:08,880 --> 00:50:10,400
there that we actually have two

1148
00:50:10,400 --> 00:50:13,380
decompositions so the decomposition

1149
00:50:13,380 --> 00:50:15,300
cannot be unique

1150
00:50:15,300 --> 00:50:17,880
and for the other direction I would have

1151
00:50:17,880 --> 00:50:20,400
liked to to show it to you in this

1152
00:50:20,400 --> 00:50:22,200
presentation but unfortunately I don't

1153
00:50:22,200 --> 00:50:26,040
have enough time for this so um if you

1154
00:50:26,040 --> 00:50:28,260
are interested then please go ahead go

1155
00:50:28,260 --> 00:50:31,859
ahead and have a look at the paper

1156
00:50:31,859 --> 00:50:35,040
okay then some remarks on the uniqueness

1157
00:50:35,040 --> 00:50:37,380
of the compositions there's actually an

1158
00:50:37,380 --> 00:50:39,839
example in literature without a unique

1159
00:50:39,839 --> 00:50:43,380
decomposition that's decipher default

1160
00:50:43,380 --> 00:50:46,319
and another remark is that we now know

1161
00:50:46,319 --> 00:50:48,900
that we have to be careful if s boxes

1162
00:50:48,900 --> 00:50:51,839
with maximal differential uniformity and

1163
00:50:51,839 --> 00:50:54,300
linearity are used or even if they just

1164
00:50:54,300 --> 00:50:57,180
can be used and um

1165
00:50:57,180 --> 00:50:59,640
to see where this is or why this is

1166
00:50:59,640 --> 00:51:03,240
important let's have a look at alignment

1167
00:51:03,240 --> 00:51:05,700
alignment is this mysterious property

1168
00:51:05,700 --> 00:51:08,579
that has both positive and negative

1169
00:51:08,579 --> 00:51:10,260
connotations

1170
00:51:10,260 --> 00:51:14,119
and until recently was not even formally

1171
00:51:14,119 --> 00:51:18,059
defined that just changed very recently

1172
00:51:18,059 --> 00:51:20,339
at crypto 21.

1173
00:51:20,339 --> 00:51:23,460
and informally speaking

1174
00:51:23,460 --> 00:51:26,160
um alignment just means that two owns

1175
00:51:26,160 --> 00:51:30,000
decompose with at least two s boxes and

1176
00:51:30,000 --> 00:51:33,059
to avoid confusion I will call this

1177
00:51:33,059 --> 00:51:35,819
Xbox's super boxes as this is quite

1178
00:51:35,819 --> 00:51:37,680
commonly done

1179
00:51:37,680 --> 00:51:39,599
okay so now

1180
00:51:39,599 --> 00:51:42,720
let's look at first the definition of

1181
00:51:42,720 --> 00:51:45,660
alignment and after that the impact of

1182
00:51:45,660 --> 00:51:47,280
alignment

1183
00:51:47,280 --> 00:51:52,200
so here I depicted two rounds and I left

1184
00:51:52,200 --> 00:51:54,960
out the linear layer before for the

1185
00:51:54,960 --> 00:51:57,480
first export layer and the linear layer

1186
00:51:57,480 --> 00:51:59,400
after the second Xbox layers they are

1187
00:51:59,400 --> 00:52:01,980
just not important for alignment

1188
00:52:01,980 --> 00:52:04,680
and as you can see we have four S boxes

1189
00:52:04,680 --> 00:52:07,140
and the input and output of these

1190
00:52:07,140 --> 00:52:09,559
s-boxes is split into two parts that's

1191
00:52:09,559 --> 00:52:13,859
just to depict the linear layer

1192
00:52:13,859 --> 00:52:16,200
and as indicated by the colors

1193
00:52:16,200 --> 00:52:18,300
everything that's colored in blue only

1194
00:52:18,300 --> 00:52:20,040
depends on things that are colored in

1195
00:52:20,040 --> 00:52:22,440
blue and everything that's colored in

1196
00:52:22,440 --> 00:52:24,059
green only depends on things that are

1197
00:52:24,059 --> 00:52:27,119
colored in green so actually you see we

1198
00:52:27,119 --> 00:52:28,740
have two independent parts or two

1199
00:52:28,740 --> 00:52:31,559
Independents two super boxes and

1200
00:52:31,559 --> 00:52:34,500
therefore this structure is aligned

1201
00:52:34,500 --> 00:52:37,559
but then what happens if we actually mix

1202
00:52:37,559 --> 00:52:40,319
those colors so we add this addition

1203
00:52:40,319 --> 00:52:41,400
here

1204
00:52:41,400 --> 00:52:43,140
um it's highlighted in red

1205
00:52:43,140 --> 00:52:45,780
then actually if we were to look at the

1206
00:52:45,780 --> 00:52:48,119
definition of alignment we would find

1207
00:52:48,119 --> 00:52:50,700
out that this mixing of colors actually

1208
00:52:50,700 --> 00:52:53,280
makes the structure underlined

1209
00:52:53,280 --> 00:52:55,800
well but then what's happened what

1210
00:52:55,800 --> 00:52:58,099
happens if we look at a more specific

1211
00:52:58,099 --> 00:53:02,339
s-box so basically some five students

1212
00:53:02,339 --> 00:53:03,900
buy at Xbox

1213
00:53:03,900 --> 00:53:07,200
well then we see that um this addition

1214
00:53:07,200 --> 00:53:08,339
we added

1215
00:53:08,339 --> 00:53:11,700
actually commutes with the last s-box

1216
00:53:11,700 --> 00:53:14,760
layer so we can move it out of there and

1217
00:53:14,760 --> 00:53:16,319
as I already

1218
00:53:16,319 --> 00:53:19,740
said for alignment we are not interested

1219
00:53:19,740 --> 00:53:21,839
in any linear transformation after the

1220
00:53:21,839 --> 00:53:24,480
second Xbox layer so we can remove it

1221
00:53:24,480 --> 00:53:28,440
and we are where we started at so this

1222
00:53:28,440 --> 00:53:30,180
function would actually be aligned and

1223
00:53:30,180 --> 00:53:31,980
underlined at the same time

1224
00:53:31,980 --> 00:53:36,720
and the reason why this happens is that

1225
00:53:36,720 --> 00:53:39,660
the round function or the decomposition

1226
00:53:39,660 --> 00:53:41,640
of demand function is actually not

1227
00:53:41,640 --> 00:53:45,140
unique and that's why we are able to

1228
00:53:45,140 --> 00:53:48,720
commute the um this edge with the sbox

1229
00:53:48,720 --> 00:53:49,740
layer

1230
00:53:49,740 --> 00:53:53,400
and um how to fix this would actually be

1231
00:53:53,400 --> 00:53:56,280
to just use the definition I gave you

1232
00:53:56,280 --> 00:53:58,619
informally as the real definition of

1233
00:53:58,619 --> 00:54:01,980
alignment so just checking if two rounds

1234
00:54:01,980 --> 00:54:06,240
decompose into at least two super boxes

1235
00:54:06,240 --> 00:54:09,059
okay so let's also look at the impact of

1236
00:54:09,059 --> 00:54:13,020
alignment at the crypto 21 work the

1237
00:54:13,020 --> 00:54:16,020
authors also looked at aligned and

1238
00:54:16,020 --> 00:54:18,240
underlined ciphers

1239
00:54:18,240 --> 00:54:21,960
and they influided alignment might lead

1240
00:54:21,960 --> 00:54:24,660
to a bigger clustering effects

1241
00:54:24,660 --> 00:54:27,619
so as an example here's the cumulative

1242
00:54:27,619 --> 00:54:30,839
histogram of the number of differentials

1243
00:54:30,839 --> 00:54:33,960
of a given weight over two rounds

1244
00:54:33,960 --> 00:54:36,960
and the important things to note here is

1245
00:54:36,960 --> 00:54:40,020
that zuru is the only primitive that is

1246
00:54:40,020 --> 00:54:43,319
unaligned the other two are aligned and

1247
00:54:43,319 --> 00:54:47,940
also the results look very differently

1248
00:54:47,940 --> 00:54:50,520
um but then we ask ourselves is this

1249
00:54:50,520 --> 00:54:53,640
really an effect of alignment or is this

1250
00:54:53,640 --> 00:54:55,859
maybe due to other properties of the

1251
00:54:55,859 --> 00:54:57,180
ciphers

1252
00:54:57,180 --> 00:55:00,180
so what we did is we took present and

1253
00:55:00,180 --> 00:55:03,119
changed a bit permutation of present

1254
00:55:03,119 --> 00:55:03,800
um

1255
00:55:03,800 --> 00:55:07,640
as by doing so we can nicely produce

1256
00:55:07,640 --> 00:55:09,960
aligned versions of prison but also

1257
00:55:09,960 --> 00:55:13,440
analyzed versions of present while

1258
00:55:13,440 --> 00:55:15,900
preserving things like full diffusion

1259
00:55:15,900 --> 00:55:17,460
after three rounds

1260
00:55:17,460 --> 00:55:21,420
but also all weight one two weight one

1261
00:55:21,420 --> 00:55:25,440
um linear Trails as this should pretty

1262
00:55:25,440 --> 00:55:28,440
much keep the properties with respect to

1263
00:55:28,440 --> 00:55:30,839
a linear equipped analysis oh yeah

1264
00:55:30,839 --> 00:55:33,119
around the same

1265
00:55:33,119 --> 00:55:37,319
so let's look at the same graph but for

1266
00:55:37,319 --> 00:55:39,599
present or the different variants of

1267
00:55:39,599 --> 00:55:42,599
present year colored in red is the

1268
00:55:42,599 --> 00:55:44,700
original version of person that is

1269
00:55:44,700 --> 00:55:47,880
actually aligned and then in blue there

1270
00:55:47,880 --> 00:55:50,460
are multiple underlined versions of

1271
00:55:50,460 --> 00:55:53,700
present and again the important thing to

1272
00:55:53,700 --> 00:55:56,940
note here is that now the versions

1273
00:55:56,940 --> 00:55:58,339
actually

1274
00:55:58,339 --> 00:56:01,680
behave pretty much the same and that's a

1275
00:56:01,680 --> 00:56:05,119
clear over all result of our experiments

1276
00:56:05,119 --> 00:56:10,559
in all experiments we we did we founded

1277
00:56:10,559 --> 00:56:12,599
all variants behave

1278
00:56:12,599 --> 00:56:15,000
disablement all aspects or nearly the

1279
00:56:15,000 --> 00:56:16,859
same

1280
00:56:16,859 --> 00:56:19,980
so to conclude we have found that under

1281
00:56:19,980 --> 00:56:23,460
some by conditions a decomposition is

1282
00:56:23,460 --> 00:56:25,380
actually unique

1283
00:56:25,380 --> 00:56:27,900
that's actually nice because then we can

1284
00:56:27,900 --> 00:56:31,140
base security arguments on this unique

1285
00:56:31,140 --> 00:56:33,720
decomposition but still we have to be

1286
00:56:33,720 --> 00:56:35,520
careful that those conditions are not

1287
00:56:35,520 --> 00:56:38,819
met as we have seen the definition of

1288
00:56:38,819 --> 00:56:40,380
alignment

1289
00:56:40,380 --> 00:56:42,540
and refers back to alignment we have

1290
00:56:42,540 --> 00:56:45,480
seen that the impact of alignment to

1291
00:56:45,480 --> 00:56:48,480
clustering may be overestimated and

1292
00:56:48,480 --> 00:56:50,339
therefore we think that the benefits of

1293
00:56:50,339 --> 00:56:53,819
alignment may actually outweight this

1294
00:56:53,819 --> 00:56:56,579
impact and by benefits I mean things

1295
00:56:56,579 --> 00:56:59,400
like using the right Trace strategy to

1296
00:56:59,400 --> 00:57:02,339
to bound the probability of a

1297
00:57:02,339 --> 00:57:04,380
differential characteristic as it's done

1298
00:57:04,380 --> 00:57:06,059
for the AAS

1299
00:57:06,059 --> 00:57:08,220
and yes that's my talk thank you for

1300
00:57:08,220 --> 00:57:09,910
your attention

1301
00:57:09,910 --> 00:57:15,720
[Applause]

1302
00:57:15,720 --> 00:57:18,599
all right any questions for Patrick

1303
00:57:18,599 --> 00:57:22,040
it seems chill is coming

1304
00:57:28,079 --> 00:57:32,160
thank you for this nice presentation

1305
00:57:32,160 --> 00:57:34,020
um yeah I would like to defend our

1306
00:57:34,020 --> 00:57:36,540
crypto 21 paper a little bit

1307
00:57:36,540 --> 00:57:39,660
um did you try also so you took present

1308
00:57:39,660 --> 00:57:41,339
and you made variants with and without

1309
00:57:41,339 --> 00:57:44,099
alignment did you try with the cipher

1310
00:57:44,099 --> 00:57:47,280
that has an explicit linear diffusion

1311
00:57:47,280 --> 00:57:49,740
layer unlike present because I think

1312
00:57:49,740 --> 00:57:52,140
that's where the differences between

1313
00:57:52,140 --> 00:57:56,220
aligned and underlined will will show

1314
00:57:56,220 --> 00:57:58,380
um no we actually only tried for for

1315
00:57:58,380 --> 00:58:01,079
present but I mean the the problem is

1316
00:58:01,079 --> 00:58:06,000
you you really want to change only

1317
00:58:06,000 --> 00:58:08,760
alignment or unalignment and that's

1318
00:58:08,760 --> 00:58:11,099
actually uh not that easy I think and

1319
00:58:11,099 --> 00:58:13,079
for present it was

1320
00:58:13,079 --> 00:58:17,579
I think durable quite quite nicely and

1321
00:58:17,579 --> 00:58:19,680
I'm not sure if that's actually possible

1322
00:58:19,680 --> 00:58:21,720
for for every Cipher

1323
00:58:21,720 --> 00:58:24,780
yeah I I agree it's not obvious to just

1324
00:58:24,780 --> 00:58:26,640
change alignment on your iron but yeah

1325
00:58:26,640 --> 00:58:28,980
okay thank you okay but thank you for

1326
00:58:28,980 --> 00:58:31,280
your question

1327
00:58:33,059 --> 00:58:36,500
right any more questions for Patrick

1328
00:58:39,720 --> 00:58:43,020
seems not to be the case

1329
00:58:43,020 --> 00:58:45,119
yeah then please join me in thanking

1330
00:58:45,119 --> 00:58:46,380
Patrick and all the speakers of the

1331
00:58:46,380 --> 00:58:48,559
session

1332
00:58:52,680 --> 00:58:54,780
you only have a task switch break and

1333
00:58:54,780 --> 00:58:57,680
resume in 10 minutes

