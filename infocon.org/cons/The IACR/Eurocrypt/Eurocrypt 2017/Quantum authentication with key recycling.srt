1
00:00:00,030 --> 00:00:04,140
thank you so the titles<font color="#E5E5E5"> the original</font>

2
00:00:02,639 --> 00:00:07,199
title is extremely similar to<font color="#E5E5E5"> the</font>

3
00:00:04,140 --> 00:00:09,960
<font color="#CCCCCC">previous talk so for a bit more clarity</font>

4
00:00:07,200 --> 00:00:11,790
as<font color="#CCCCCC"> I said differences here we're talking</font>

5
00:00:09,960 --> 00:00:17,340
<font color="#CCCCCC">about in</font><font color="#E5E5E5"> alternating and encrypting</font>

6
00:00:11,790 --> 00:00:19,439
<font color="#CCCCCC">quantum messages with</font><font color="#E5E5E5"> recycling and so</font>

7
00:00:17,340 --> 00:00:21,270
authentication of quantum messages was

8
00:00:19,439 --> 00:00:23,759
the first paper that<font color="#E5E5E5"> discussed it</font><font color="#CCCCCC"> was</font>

9
00:00:21,270 --> 00:00:27,300
this<font color="#E5E5E5"> paper by a bow no metal in in 2002</font>

10
00:00:23,760 --> 00:00:29,519
and it's up to<font color="#CCCCCC"> today still the most</font>

11
00:00:27,300 --> 00:00:30,570
interesting<font color="#E5E5E5"> family of protocols for</font>

12
00:00:29,519 --> 00:00:32,098
quantum authentication<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font>

13
00:00:30,570 --> 00:00:33,870
everything that<font color="#E5E5E5"> came afterwards</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> some</font>

14
00:00:32,098 --> 00:00:35,699
special<font color="#CCCCCC"> case of this family of a few</font>

15
00:00:33,870 --> 00:00:38,640
exceptions<font color="#E5E5E5"> which I might mention at the</font>

16
00:00:35,700 --> 00:00:40,829
end<font color="#E5E5E5"> if I have time</font><font color="#CCCCCC"> made it really</font>

17
00:00:38,640 --> 00:00:43,860
remains<font color="#E5E5E5"> the way of encrypting and</font>

18
00:00:40,829 --> 00:00:46,010
authenticating quantum messages so what

19
00:00:43,860 --> 00:00:48,450
we do in this work is that<font color="#E5E5E5"> we prove that</font>

20
00:00:46,010 --> 00:00:50,190
<font color="#CCCCCC">very similar to what search was doing</font>

21
00:00:48,450 --> 00:00:51,960
all the key can be<font color="#E5E5E5"> recycled upon</font>

22
00:00:50,190 --> 00:00:53,849
accepting the message<font color="#E5E5E5"> but here it's a</font>

23
00:00:51,960 --> 00:00:55,620
<font color="#E5E5E5">uniform key and we don't have the the</font>

24
00:00:53,850 --> 00:00:57,570
problems of<font color="#CCCCCC"> non-uniform keys that self</font>

25
00:00:55,620 --> 00:00:59,608
had but this actually<font color="#E5E5E5"> only works for a</font>

26
00:00:57,570 --> 00:01:01,020
subset of the original<font color="#CCCCCC"> family hence</font><font color="#E5E5E5"> the</font>

27
00:00:59,609 --> 00:01:02,399
we have the restriction and<font color="#E5E5E5"> if</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> have</font>

28
00:01:01,020 --> 00:01:04,890
time at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> end I'll explain why it</font>

29
00:01:02,399 --> 00:01:07,560
doesn't<font color="#CCCCCC"> work</font><font color="#E5E5E5"> for the entire family we</font>

30
00:01:04,890 --> 00:01:08,909
can also recycle part of the key<font color="#E5E5E5"> upon</font>

31
00:01:07,560 --> 00:01:10,170
rejecting and you can prove that<font color="#E5E5E5"> this is</font>

32
00:01:08,909 --> 00:01:12,000
<font color="#E5E5E5">optimal so all the bits which won't</font>

33
00:01:10,170 --> 00:01:16,380
<font color="#E5E5E5">recycle the address you actually can can</font>

34
00:01:12,000 --> 00:01:19,590
get them<font color="#E5E5E5"> and this work we loaded using</font>

35
00:01:16,380 --> 00:01:21,179
the<font color="#E5E5E5"> abstract and constructive framework</font>

36
00:01:19,590 --> 00:01:22,920
from<font color="#E5E5E5"> our</font><font color="#CCCCCC"> antenna so it's some kind of</font>

37
00:01:21,180 --> 00:01:25,409
composable security proof very similar

38
00:01:22,920 --> 00:01:27,240
to the more familiar<font color="#E5E5E5"> you see as just</font>

39
00:01:25,409 --> 00:01:29,700
some kind of simplification<font color="#CCCCCC"> and general</font>

40
00:01:27,240 --> 00:01:31,020
a generalization of you see<font color="#E5E5E5"> I won't go</font>

41
00:01:29,700 --> 00:01:32,369
too<font color="#E5E5E5"> much into the framework</font><font color="#CCCCCC"> just the</font>

42
00:01:31,020 --> 00:01:35,699
minimum so<font color="#CCCCCC"> that you understands what</font>

43
00:01:32,369 --> 00:01:37,560
we're<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> so Kimmy cycling is not</font>

44
00:01:35,700 --> 00:01:38,759
actually<font color="#E5E5E5"> a quantum property the thing</font>

45
00:01:37,560 --> 00:01:40,619
which is quantum is that we can recycle

46
00:01:38,759 --> 00:01:43,320
everything<font color="#CCCCCC"> but in classification already</font>

47
00:01:40,619 --> 00:01:45,360
recycle key<font color="#CCCCCC"> if</font><font color="#E5E5E5"> we look at</font><font color="#CCCCCC"> just a</font>

48
00:01:43,320 --> 00:01:47,490
standard classical authentication scheme

49
00:01:45,360 --> 00:01:49,530
with<font color="#E5E5E5"> the math we have</font><font color="#CCCCCC"> a message and say</font>

50
00:01:47,490 --> 00:01:51,509
we<font color="#CCCCCC"> regenerate the tag like this</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> apply</font>

51
00:01:49,530 --> 00:01:53,399
some hash function to the message and<font color="#E5E5E5"> we</font>

52
00:01:51,509 --> 00:01:54,750
<font color="#E5E5E5">one-time pad this and and Alice</font><font color="#CCCCCC"> sense</font>

53
00:01:53,399 --> 00:01:56,219
this<font color="#E5E5E5"> if you can modify it</font>

54
00:01:54,750 --> 00:01:59,369
<font color="#E5E5E5">Bob just has a standard check this if</font>

55
00:01:56,219 --> 00:02:01,710
you<font color="#CCCCCC"> received the</font><font color="#E5E5E5"> right thing</font><font color="#CCCCCC"> already</font>

56
00:01:59,369 --> 00:02:04,409
1981 the<font color="#E5E5E5"> granite Carter mentioned</font><font color="#CCCCCC"> this</font>

57
00:02:01,710 --> 00:02:07,320
and pointed out<font color="#E5E5E5"> that we would need</font><font color="#CCCCCC"> two</font>

58
00:02:04,409 --> 00:02:09,060
new<font color="#E5E5E5"> K to each time but we can be used</font>

59
00:02:07,320 --> 00:02:11,038
the<font color="#CCCCCC"> same k1 and the</font><font color="#E5E5E5"> equation they give</font>

60
00:02:09,060 --> 00:02:13,319
is simply as well one time padding this

61
00:02:11,038 --> 00:02:15,869
<font color="#CCCCCC">easier who observes the tag</font>

62
00:02:13,319 --> 00:02:18,510
she has no<font color="#CCCCCC"> information about k1 and</font>

63
00:02:15,870 --> 00:02:20,069
therefore can<font color="#CCCCCC"> be used that</font><font color="#E5E5E5"> argument is</font>

64
00:02:18,510 --> 00:02:22,379
actually<font color="#CCCCCC"> not completely</font><font color="#E5E5E5"> correct</font><font color="#CCCCCC"> because</font>

65
00:02:20,069 --> 00:02:24,238
<font color="#CCCCCC">when Bob accepts or rejects</font><font color="#E5E5E5"> this is a</font>

66
00:02:22,379 --> 00:02:26,370
bit of information<font color="#E5E5E5"> which Eve might</font>

67
00:02:24,239 --> 00:02:29,340
intercept<font color="#E5E5E5"> and which might</font><font color="#CCCCCC"> actually leaks</font>

68
00:02:26,370 --> 00:02:31,290
<font color="#CCCCCC">information about k1</font><font color="#E5E5E5"> so when you reuse</font>

69
00:02:29,340 --> 00:02:33,719
k1 again and again and gain each time a

70
00:02:31,290 --> 00:02:35,819
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more information about</font><font color="#E5E5E5"> k1 is</font>

71
00:02:33,719 --> 00:02:37,138
unique<font color="#E5E5E5"> but it's very little you</font><font color="#CCCCCC"> can</font>

72
00:02:35,819 --> 00:02:39,149
actually prove<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> leak</font>

73
00:02:37,139 --> 00:02:40,889
<font color="#CCCCCC">limit still remains close to uniform</font>

74
00:02:39,150 --> 00:02:43,439
sort of proportional to the number of

75
00:02:40,889 --> 00:02:45,659
times<font color="#E5E5E5"> you use the the key which is</font><font color="#CCCCCC"> some</font>

76
00:02:43,439 --> 00:02:49,290
something<font color="#CCCCCC"> I</font><font color="#E5E5E5"> I did some</font><font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> some</font>

77
00:02:45,659 --> 00:02:50,548
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> now if you look at a well an</font>

78
00:02:49,290 --> 00:02:52,918
authentic<font color="#CCCCCC"> Channel what we're trying</font><font color="#E5E5E5"> to</font>

79
00:02:50,549 --> 00:02:55,049
<font color="#CCCCCC">build is basically this</font><font color="#E5E5E5"> Alice sends a</font>

80
00:02:52,919 --> 00:02:56,669
message which goes to Bob but<font color="#E5E5E5"> Eve also</font>

81
00:02:55,049 --> 00:02:58,319
<font color="#E5E5E5">gets a copy and what's important about</font>

82
00:02:56,669 --> 00:02:59,819
this channel<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that it cannot influence</font>

83
00:02:58,319 --> 00:03:02,518
the<font color="#E5E5E5"> message you can sort of passively</font>

84
00:02:59,819 --> 00:03:04,560
read it but<font color="#E5E5E5"> you cannot change it or</font>

85
00:03:02,519 --> 00:03:05,760
insert something<font color="#E5E5E5"> to the channel now if</font>

86
00:03:04,560 --> 00:03:08,010
<font color="#E5E5E5">you think of</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> this in the quantum</font>

87
00:03:05,760 --> 00:03:11,548
case<font color="#E5E5E5"> and we change the message with</font><font color="#CCCCCC"> Rho</font>

88
00:03:08,010 --> 00:03:13,828
and<font color="#E5E5E5"> Allison's</font><font color="#CCCCCC"> row Bob gets version and</font>

89
00:03:11,549 --> 00:03:16,530
it gets a<font color="#CCCCCC"> version</font><font color="#E5E5E5"> this of course cannot</font>

90
00:03:13,829 --> 00:03:17,729
work<font color="#CCCCCC"> because there's this theorem which</font>

91
00:03:16,530 --> 00:03:19,439
is<font color="#E5E5E5"> no cloning theorem which says</font><font color="#CCCCCC"> the</font>

92
00:03:17,729 --> 00:03:21,810
quantum state can't be<font color="#CCCCCC"> copied</font><font color="#E5E5E5"> in so if</font>

93
00:03:19,439 --> 00:03:23,959
Bob actually<font color="#E5E5E5"> sees</font><font color="#CCCCCC"> Rho he knows that</font><font color="#E5E5E5"> it</font>

94
00:03:21,810 --> 00:03:26,099
doesn't have a copy<font color="#E5E5E5"> of it so you can't</font>

95
00:03:23,959 --> 00:03:27,239
<font color="#E5E5E5">there's no such thing as an authentic</font>

96
00:03:26,099 --> 00:03:29,069
<font color="#CCCCCC">channel which doesn't</font><font color="#E5E5E5"> provide</font>

97
00:03:27,239 --> 00:03:31,769
confidentiality<font color="#E5E5E5"> to in the content case</font>

98
00:03:29,069 --> 00:03:34,138
if<font color="#E5E5E5"> I when you get or authenticity</font><font color="#CCCCCC"> if</font>

99
00:03:31,769 --> 00:03:36,090
<font color="#CCCCCC">ever Bob</font><font color="#E5E5E5"> can confirm</font><font color="#CCCCCC"> really has the</font>

100
00:03:34,139 --> 00:03:37,829
<font color="#CCCCCC">message that</font><font color="#E5E5E5"> Eve sent that Alice sent</font>

101
00:03:36,090 --> 00:03:39,449
then he knows that he doesn't<font color="#E5E5E5"> have</font>

102
00:03:37,829 --> 00:03:41,069
<font color="#E5E5E5">anything so in the quantum</font><font color="#CCCCCC"> case</font>

103
00:03:39,449 --> 00:03:42,659
authentication is actually<font color="#CCCCCC"> something</font>

104
00:03:41,069 --> 00:03:44,849
<font color="#E5E5E5">strong</font><font color="#CCCCCC"> and harder to achieve than an</font>

105
00:03:42,659 --> 00:03:48,179
encryption<font color="#E5E5E5"> if you get authentication you</font>

106
00:03:44,849 --> 00:03:50,009
can't get encryption for free<font color="#CCCCCC"> now</font>

107
00:03:48,180 --> 00:03:51,419
suppose we design<font color="#E5E5E5"> a scheme in such way</font>

108
00:03:50,009 --> 00:03:53,279
that Bob actually<font color="#E5E5E5"> verifies that he</font>

109
00:03:51,419 --> 00:03:54,629
receives<font color="#E5E5E5"> the correct cipher note</font><font color="#CCCCCC"> that</font>

110
00:03:53,280 --> 00:03:55,889
this is not<font color="#E5E5E5"> the same thing as receiving</font>

111
00:03:54,629 --> 00:03:57,899
the correct<font color="#E5E5E5"> message</font><font color="#CCCCCC"> so it's some</font>

112
00:03:55,889 --> 00:03:59,340
<font color="#E5E5E5">slightly stronger requirement if Bob</font>

113
00:03:57,900 --> 00:04:01,560
receives the correct cipher so he

114
00:03:59,340 --> 00:04:03,780
receives exactly what<font color="#E5E5E5"> Alice sent when</font>

115
00:04:01,560 --> 00:04:05,430
they close to that then<font color="#E5E5E5"> Eve hasn't no</font>

116
00:04:03,780 --> 00:04:06,689
information about the cipher at all and

117
00:04:05,430 --> 00:04:09,719
in particular<font color="#E5E5E5"> she has no information</font>

118
00:04:06,689 --> 00:04:12,509
<font color="#E5E5E5">about the key because the</font><font color="#CCCCCC"> key is kind of</font>

119
00:04:09,719 --> 00:04:13,709
embedded in<font color="#E5E5E5"> the cipher so is knows</font>

120
00:04:12,509 --> 00:04:17,099
nothing about the key and<font color="#E5E5E5"> therefore the</font>

121
00:04:13,709 --> 00:04:18,599
key can<font color="#CCCCCC"> be recycled so we need to kind</font>

122
00:04:17,099 --> 00:04:20,039
of<font color="#CCCCCC"> sand all cloning going on here which</font>

123
00:04:18,599 --> 00:04:21,209
is<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> principle as quantum key</font>

124
00:04:20,039 --> 00:04:24,380
distribution so it's not really

125
00:04:21,209 --> 00:04:24,380
surprised that<font color="#E5E5E5"> we can do this</font>

126
00:04:24,650 --> 00:04:30,049
so before telling you how to do this<font color="#E5E5E5"> in</font>

127
00:04:28,010 --> 00:04:31,130
the quantum<font color="#CCCCCC"> case</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> just going to go</font>

128
00:04:30,050 --> 00:04:32,660
<font color="#CCCCCC">over the classical case because we're</font>

129
00:04:31,130 --> 00:04:34,610
trying<font color="#E5E5E5"> to construct a secure channel so</font>

130
00:04:32,660 --> 00:04:36,380
<font color="#CCCCCC">let's look</font><font color="#E5E5E5"> at how we construct</font><font color="#CCCCCC"> a secure</font>

131
00:04:34,610 --> 00:04:38,000
<font color="#CCCCCC">Channel in the classical case</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm</font>

132
00:04:36,380 --> 00:04:39,409
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do it in two parts well first</font>

133
00:04:38,000 --> 00:04:40,490
need to construct an authentic<font color="#CCCCCC"> Channel</font>

134
00:04:39,410 --> 00:04:41,810
and then give me<font color="#CCCCCC"> the authentic</font><font color="#E5E5E5"> Channel</font>

135
00:04:40,490 --> 00:04:43,400
are going to construct<font color="#CCCCCC"> a secure Channel</font>

136
00:04:41,810 --> 00:04:45,050
<font color="#E5E5E5">so I'm going to have these kind</font><font color="#CCCCCC"> of</font>

137
00:04:43,400 --> 00:04:46,489
<font color="#E5E5E5">little pictures</font><font color="#CCCCCC"> on all of my slides in</font>

138
00:04:45,050 --> 00:04:48,199
the next talk and the<font color="#E5E5E5"> way you should</font>

139
00:04:46,490 --> 00:04:49,910
think<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> it's your square</font>

140
00:04:48,199 --> 00:04:51,260
boxes represent some kind of<font color="#E5E5E5"> resources</font>

141
00:04:49,910 --> 00:04:52,940
<font color="#E5E5E5">that</font><font color="#CCCCCC"> a place</font><font color="#E5E5E5"> you need in order to run</font>

142
00:04:51,260 --> 00:04:54,380
the protocol they're going to need<font color="#E5E5E5"> a</font>

143
00:04:52,940 --> 00:04:55,520
<font color="#E5E5E5">secret key you can't do anything without</font>

144
00:04:54,380 --> 00:04:57,770
that they're looking<font color="#E5E5E5"> at information</font>

145
00:04:55,520 --> 00:04:59,090
<font color="#E5E5E5">theoretic security so you can think of</font>

146
00:04:57,770 --> 00:05:01,070
them as<font color="#CCCCCC"> having some kind of</font><font color="#E5E5E5"> box which</font>

147
00:04:59,090 --> 00:05:02,719
<font color="#CCCCCC">gives</font><font color="#E5E5E5"> a key to each player and they need</font>

148
00:05:01,070 --> 00:05:05,120
some way<font color="#CCCCCC"> of communicating so they</font><font color="#E5E5E5"> just</font>

149
00:05:02,720 --> 00:05:06,260
<font color="#CCCCCC">give them anything an insecure channel</font>

150
00:05:05,120 --> 00:05:08,360
which is<font color="#CCCCCC"> the weakest kind of channel</font>

151
00:05:06,260 --> 00:05:10,520
<font color="#CCCCCC">possible whatever</font><font color="#E5E5E5"> Alice puts in goes to</font>

152
00:05:08,360 --> 00:05:12,530
Eve<font color="#E5E5E5"> and you can completely</font><font color="#CCCCCC"> change it and</font>

153
00:05:10,520 --> 00:05:13,820
send something<font color="#E5E5E5"> else to Bob so they have</font>

154
00:05:12,530 --> 00:05:15,619
these two resources<font color="#E5E5E5"> and they're going to</font>

155
00:05:13,820 --> 00:05:18,409
run a standard<font color="#E5E5E5"> Mac authentication</font>

156
00:05:15,620 --> 00:05:20,360
protocol<font color="#E5E5E5"> so these</font><font color="#CCCCCC"> boxes with little</font>

157
00:05:18,410 --> 00:05:22,250
round corners are simply local

158
00:05:20,360 --> 00:05:24,139
operations<font color="#E5E5E5"> that Alice and Bob can do it</font>

159
00:05:22,250 --> 00:05:26,810
<font color="#E5E5E5">there they interfaces</font><font color="#CCCCCC"> so this if you</font>

160
00:05:24,139 --> 00:05:28,460
<font color="#E5E5E5">want</font><font color="#CCCCCC"> this Alice's protocol</font><font color="#E5E5E5"> she provides</font>

161
00:05:26,810 --> 00:05:30,889
it<font color="#E5E5E5"> to the message it gets a key</font><font color="#CCCCCC"> she</font>

162
00:05:28,460 --> 00:05:32,359
generates a tag you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> change the tag</font>

163
00:05:30,889 --> 00:05:34,789
<font color="#E5E5E5">and on the other side</font><font color="#CCCCCC"> Bob is going to</font>

164
00:05:32,360 --> 00:05:38,000
check if it's a valid tag and<font color="#E5E5E5"> I'd accept</font>

165
00:05:34,789 --> 00:05:40,099
<font color="#CCCCCC">ex-prime</font><font color="#E5E5E5"> or rejected so what we actually</font>

166
00:05:38,000 --> 00:05:41,389
<font color="#E5E5E5">want is to construct an authentic</font>

167
00:05:40,099 --> 00:05:43,010
<font color="#E5E5E5">Channel so what we would like is</font><font color="#CCCCCC"> to</font>

168
00:05:41,389 --> 00:05:44,810
<font color="#CCCCCC">somehow argue that what we've done is</font>

169
00:05:43,010 --> 00:05:46,820
you just build an authentic<font color="#E5E5E5"> Channel so</font>

170
00:05:44,810 --> 00:05:49,190
this is a bit more formal<font color="#CCCCCC"> version</font><font color="#E5E5E5"> of an</font>

171
00:05:46,820 --> 00:05:51,260
authentic<font color="#E5E5E5"> channel whatever Alice puts in</font>

172
00:05:49,190 --> 00:05:53,840
it gets a copy<font color="#E5E5E5"> and now</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> actually</font>

173
00:05:51,260 --> 00:05:55,310
input a bit<font color="#CCCCCC"> zero-one to decide if</font><font color="#E5E5E5"> Bob is</font>

174
00:05:53,840 --> 00:05:56,719
<font color="#CCCCCC">going to get the message or not</font><font color="#E5E5E5"> because</font>

175
00:05:55,310 --> 00:05:58,699
<font color="#E5E5E5">we</font><font color="#CCCCCC"> the orphanage Channel had a few</font>

176
00:05:56,720 --> 00:06:01,190
slides<font color="#E5E5E5"> ago it cannot be achieved because</font>

177
00:05:58,699 --> 00:06:04,310
<font color="#E5E5E5">you can always jumble a communication so</font>

178
00:06:01,190 --> 00:06:06,410
it always gets<font color="#E5E5E5"> to decide if Alice</font><font color="#CCCCCC"> if Bob</font>

179
00:06:04,310 --> 00:06:08,690
gets the<font color="#E5E5E5"> message or</font><font color="#CCCCCC"> not so in some</font><font color="#E5E5E5"> sense</font>

180
00:06:06,410 --> 00:06:11,300
this represents some<font color="#CCCCCC"> kind of bound on</font>

181
00:06:08,690 --> 00:06:12,740
<font color="#E5E5E5">what power we</font><font color="#CCCCCC"> are willing to give Eva</font>

182
00:06:11,300 --> 00:06:14,539
willing to give<font color="#CCCCCC"> eva copy of the message</font>

183
00:06:12,740 --> 00:06:16,370
<font color="#E5E5E5">and we're willing to allow her to</font><font color="#CCCCCC"> decide</font>

184
00:06:14,539 --> 00:06:18,469
<font color="#E5E5E5">who gets it on if Bob gets the message</font>

185
00:06:16,370 --> 00:06:19,970
<font color="#E5E5E5">or not now we want to argue that this</font>

186
00:06:18,470 --> 00:06:21,800
somehow constructs this and if you<font color="#E5E5E5"> look</font>

187
00:06:19,970 --> 00:06:23,660
at the<font color="#E5E5E5"> Alice's interface the same as</font>

188
00:06:21,800 --> 00:06:25,400
here<font color="#E5E5E5"> and Bob's interface at</font><font color="#CCCCCC"> the same</font>

189
00:06:23,660 --> 00:06:26,539
structure using<font color="#E5E5E5"> the facial looks</font>

190
00:06:25,400 --> 00:06:28,219
completely different<font color="#E5E5E5"> because you have</font>

191
00:06:26,539 --> 00:06:30,710
our idealized interface<font color="#CCCCCC"> in every</font>

192
00:06:28,220 --> 00:06:33,349
interface<font color="#E5E5E5"> so to argue security we need</font>

193
00:06:30,710 --> 00:06:35,599
<font color="#CCCCCC">to find some kind of simulator here</font><font color="#E5E5E5"> that</font>

194
00:06:33,349 --> 00:06:36,860
is<font color="#E5E5E5"> going to construct the real interface</font>

195
00:06:35,599 --> 00:06:39,530
given<font color="#E5E5E5"> access only to</font>

196
00:06:36,860 --> 00:06:41,150
<font color="#E5E5E5">to this idealized interface so if we</font>

197
00:06:39,530 --> 00:06:43,580
can't find<font color="#CCCCCC"> such a simulator it means</font>

198
00:06:41,150 --> 00:06:45,409
<font color="#E5E5E5">this is certainly not more powerful</font><font color="#CCCCCC"> than</font>

199
00:06:43,580 --> 00:06:47,960
<font color="#E5E5E5">giving more information</font><font color="#CCCCCC"> to Eve that</font><font color="#E5E5E5"> then</font>

200
00:06:45,409 --> 00:06:50,419
then what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> does and</font><font color="#E5E5E5"> now to argue</font>

201
00:06:47,960 --> 00:06:51,739
security<font color="#E5E5E5"> what we want to say that this</font>

202
00:06:50,419 --> 00:06:53,780
system<font color="#E5E5E5"> was constructed is</font>

203
00:06:51,740 --> 00:06:55,580
indistinguishable<font color="#CCCCCC"> from this system so</font>

204
00:06:53,780 --> 00:06:57,500
indistinguishable just means you kind<font color="#CCCCCC"> of</font>

205
00:06:55,580 --> 00:06:58,789
put a box<font color="#E5E5E5"> around it</font><font color="#CCCCCC"> and now we</font><font color="#E5E5E5"> look we</font>

206
00:06:57,500 --> 00:07:00,710
have this<font color="#E5E5E5"> sort of black</font><font color="#CCCCCC"> box which can</font>

207
00:06:58,789 --> 00:07:03,919
<font color="#E5E5E5">take an input Europe uses</font><font color="#CCCCCC"> now could take</font>

208
00:07:00,710 --> 00:07:05,659
an input produces an output<font color="#CCCCCC"> and when we</font>

209
00:07:03,919 --> 00:07:06,650
give<font color="#E5E5E5"> you one of either of these boxes to</font>

210
00:07:05,659 --> 00:07:08,180
someone<font color="#CCCCCC"> it has to guess which one</font>

211
00:07:06,650 --> 00:07:09,409
they're holding so we're going to<font color="#E5E5E5"> call</font>

212
00:07:08,180 --> 00:07:11,419
this<font color="#E5E5E5"> sort of abstract</font><font color="#CCCCCC"> payer</font>

213
00:07:09,409 --> 00:07:14,840
distinguisher<font color="#E5E5E5"> given one of the two and</font>

214
00:07:11,419 --> 00:07:16,188
has to take a guess<font color="#CCCCCC"> and</font><font color="#E5E5E5"> output a bit so</font>

215
00:07:14,840 --> 00:07:17,599
and we look at<font color="#E5E5E5"> just a difference to</font>

216
00:07:16,189 --> 00:07:19,039
public<font color="#E5E5E5"> about putting one when you're</font>

217
00:07:17,599 --> 00:07:20,029
interacting<font color="#E5E5E5"> with the first system with</font>

218
00:07:19,039 --> 00:07:22,340
the second system and<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the</font>

219
00:07:20,029 --> 00:07:23,930
<font color="#CCCCCC">advantage of the distinguisher</font><font color="#E5E5E5"> so if no</font>

220
00:07:22,340 --> 00:07:25,489
distinguish<font color="#E5E5E5"> I can guess what is holding</font>

221
00:07:23,930 --> 00:07:27,080
this or this with advantage more than

222
00:07:25,490 --> 00:07:29,840
<font color="#CCCCCC">epsilon then we</font><font color="#E5E5E5"> say the two systems</font><font color="#CCCCCC"> I</font>

223
00:07:27,080 --> 00:07:31,490
just don't close<font color="#CCCCCC"> and if these two</font>

224
00:07:29,840 --> 00:07:34,219
<font color="#E5E5E5">systems I've done closed and what we're</font>

225
00:07:31,490 --> 00:07:36,710
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say is our protocol</font><font color="#CCCCCC"> so this</font>

226
00:07:34,219 --> 00:07:39,259
part construct the authentic<font color="#E5E5E5"> channel</font>

227
00:07:36,710 --> 00:07:40,549
given these resources<font color="#CCCCCC"> so the abstract</font>

228
00:07:39,259 --> 00:07:42,110
<font color="#CCCCCC">capture framework really sees</font>

229
00:07:40,550 --> 00:07:43,460
cryptography as a resource theory<font color="#CCCCCC"> you</font>

230
00:07:42,110 --> 00:07:45,229
start off<font color="#CCCCCC"> with some</font><font color="#E5E5E5"> resources and you</font>

231
00:07:43,460 --> 00:07:47,330
construct some new<font color="#E5E5E5"> resources in this</font>

232
00:07:45,229 --> 00:07:48,680
case you started<font color="#E5E5E5"> the keen and insecure</font>

233
00:07:47,330 --> 00:07:51,979
<font color="#E5E5E5">channel you construct an authentic</font>

234
00:07:48,680 --> 00:07:53,240
<font color="#E5E5E5">channel this is</font><font color="#CCCCCC"> this sort of written</font><font color="#E5E5E5"> in</font>

235
00:07:51,979 --> 00:07:55,190
English and<font color="#CCCCCC"> this is the same</font><font color="#E5E5E5"> kind of</font>

236
00:07:53,240 --> 00:07:57,560
using some some<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of formalism there</font>

237
00:07:55,190 --> 00:07:59,539
the protocol is a map between<font color="#E5E5E5"> resources</font>

238
00:07:57,560 --> 00:08:02,539
so<font color="#CCCCCC"> uses these resources it constructs</font>

239
00:07:59,539 --> 00:08:04,370
these resources<font color="#E5E5E5"> and this is satisfied if</font>

240
00:08:02,539 --> 00:08:05,990
they existed simulator such that the two

241
00:08:04,370 --> 00:08:08,139
<font color="#CCCCCC">systems I distinguish one this is</font><font color="#E5E5E5"> just a</font>

242
00:08:05,990 --> 00:08:10,370
notation<font color="#E5E5E5"> to try and capture the</font><font color="#CCCCCC"> picture</font>

243
00:08:08,139 --> 00:08:12,080
so now<font color="#CCCCCC"> we have an authentic</font><font color="#E5E5E5"> channel</font>

244
00:08:10,370 --> 00:08:13,580
<font color="#CCCCCC">let's try and construct a secure channel</font>

245
00:08:12,080 --> 00:08:15,859
now we do the obvious thing<font color="#E5E5E5"> it's a</font>

246
00:08:13,580 --> 00:08:17,599
one-time pad<font color="#E5E5E5"> so suppose that</font><font color="#CCCCCC"> Allison Bob</font>

247
00:08:15,860 --> 00:08:19,250
shared<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> authentic</font><font color="#CCCCCC"> Channel and it's</font>

248
00:08:17,599 --> 00:08:21,069
just<font color="#E5E5E5"> one-time pads a message sends it on</font>

249
00:08:19,250 --> 00:08:23,870
the authentic channel and and Bob

250
00:08:21,069 --> 00:08:25,969
<font color="#E5E5E5">inverse is the one-time pad on his side</font>

251
00:08:23,870 --> 00:08:27,979
<font color="#CCCCCC">so we want to argue that</font><font color="#E5E5E5"> this constructs</font>

252
00:08:25,969 --> 00:08:29,120
a secure<font color="#CCCCCC"> channel which</font><font color="#E5E5E5"> is very similar</font>

253
00:08:27,979 --> 00:08:30,949
<font color="#CCCCCC">to the authentic Channel except that</font>

254
00:08:29,120 --> 00:08:32,419
here it only leaks the size of the

255
00:08:30,949 --> 00:08:33,709
message<font color="#E5E5E5"> we can never hide the message</font>

256
00:08:32,419 --> 00:08:37,519
entirely we always have to leave the

257
00:08:33,708 --> 00:08:39,109
size or at least a bound on the size<font color="#E5E5E5"> so</font>

258
00:08:37,519 --> 00:08:40,789
<font color="#E5E5E5">so</font><font color="#CCCCCC"> where again we're willing to</font><font color="#E5E5E5"> give Eve</font>

259
00:08:39,110 --> 00:08:42,440
<font color="#E5E5E5">bound on the size of the</font><font color="#CCCCCC"> message</font><font color="#E5E5E5"> and</font>

260
00:08:40,789 --> 00:08:44,899
we're willing to<font color="#E5E5E5"> allow her to decide if</font>

261
00:08:42,440 --> 00:08:46,490
the<font color="#CCCCCC"> messages</font><font color="#E5E5E5"> received or not and now to</font>

262
00:08:44,899 --> 00:08:48,410
prove that this<font color="#E5E5E5"> constructs</font><font color="#CCCCCC"> that we need</font>

263
00:08:46,490 --> 00:08:49,180
to find<font color="#E5E5E5"> a simulator which is trivial it</font>

264
00:08:48,410 --> 00:08:50,800
just as

265
00:08:49,180 --> 00:08:53,020
<font color="#CCCCCC">two completely</font><font color="#E5E5E5"> random string here and</font>

266
00:08:50,800 --> 00:08:56,319
you can show<font color="#CCCCCC"> that these</font><font color="#E5E5E5"> are they are</font>

267
00:08:53,020 --> 00:08:58,600
<font color="#E5E5E5">completely indistinguishable so now</font>

268
00:08:56,320 --> 00:09:00,880
we've constructed<font color="#E5E5E5"> an authentic</font><font color="#CCCCCC"> channel</font>

269
00:08:58,600 --> 00:09:02,410
<font color="#CCCCCC">and then in second set of constructive</font>

270
00:09:00,880 --> 00:09:04,270
<font color="#CCCCCC">super channel</font><font color="#E5E5E5"> we can combine the two</font>

271
00:09:02,410 --> 00:09:05,949
steps<font color="#E5E5E5"> so if you just take this picture</font>

272
00:09:04,270 --> 00:09:07,390
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we place the authentic channel by</font>

273
00:09:05,950 --> 00:09:09,490
<font color="#E5E5E5">the previous construction which I put</font>

274
00:09:07,390 --> 00:09:11,110
<font color="#E5E5E5">here in purple this</font><font color="#CCCCCC"> is kind of imposed</font>

275
00:09:09,490 --> 00:09:13,240
<font color="#E5E5E5">construction and then we get on the</font>

276
00:09:11,110 --> 00:09:58,600
ideal side<font color="#E5E5E5"> composed construction</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

277
00:09:13,240 --> 00:10:04,270
<font color="#CCCCCC">simulator so these two</font><font color="#E5E5E5"> parts of the okay</font>

278
00:09:58,600 --> 00:10:05,950
it's a<font color="#E5E5E5"> little better this time so these</font>

279
00:10:04,270 --> 00:10:08,410
two<font color="#E5E5E5"> parts we can view them as one</font>

280
00:10:05,950 --> 00:10:10,570
composed protocol<font color="#CCCCCC"> which now uses</font><font color="#E5E5E5"> these</font>

281
00:10:08,410 --> 00:10:12,040
two resources<font color="#E5E5E5"> it uses two keys and uses</font>

282
00:10:10,570 --> 00:10:13,660
<font color="#CCCCCC">the</font><font color="#E5E5E5"> insecure channel to construct a</font>

283
00:10:12,040 --> 00:10:16,449
secure<font color="#E5E5E5"> channel so simply in this</font>

284
00:10:13,660 --> 00:10:17,949
notation we use these<font color="#E5E5E5"> resources you</font>

285
00:10:16,450 --> 00:10:19,060
construct an authentic<font color="#E5E5E5"> channel and if we</font>

286
00:10:17,950 --> 00:10:20,620
give it an authentic channel we can

287
00:10:19,060 --> 00:10:21,699
<font color="#E5E5E5">construct a secure</font><font color="#CCCCCC"> channel just</font><font color="#E5E5E5"> the</font>

288
00:10:20,620 --> 00:10:23,620
composition<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the two means the</font>

289
00:10:21,700 --> 00:10:25,660
composition<font color="#CCCCCC"> of the two protocols uses</font>

290
00:10:23,620 --> 00:10:29,589
these resources to<font color="#E5E5E5"> construct</font><font color="#CCCCCC"> the secure</font>

291
00:10:25,660 --> 00:10:32,430
<font color="#CCCCCC">channel okay so this is one way you can</font>

292
00:10:29,589 --> 00:10:35,020
construct<font color="#E5E5E5"> a secure channel classically</font>

293
00:10:32,430 --> 00:10:36,430
it isn't<font color="#E5E5E5"> actually much help for us</font>

294
00:10:35,020 --> 00:10:37,449
because<font color="#E5E5E5"> we</font><font color="#CCCCCC"> used an authentic channel in</font>

295
00:10:36,430 --> 00:10:40,270
the middle<font color="#CCCCCC"> which you</font><font color="#E5E5E5"> can't do in</font><font color="#CCCCCC"> a</font>

296
00:10:37,450 --> 00:10:42,160
quantum way so now I'm going<font color="#E5E5E5"> to reverse</font>

297
00:10:40,270 --> 00:10:44,199
<font color="#E5E5E5">the order</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> one-time pad</font><font color="#E5E5E5"> and the</font>

298
00:10:42,160 --> 00:10:46,360
<font color="#E5E5E5">authentication so now let's</font><font color="#CCCCCC"> start</font><font color="#E5E5E5"> at the</font>

299
00:10:44,200 --> 00:10:48,399
one-time pad<font color="#CCCCCC"> we have an insecure Channel</font>

300
00:10:46,360 --> 00:10:49,899
<font color="#CCCCCC">the message comes in we want</font><font color="#E5E5E5"> I'm padded</font>

301
00:10:48,399 --> 00:10:51,579
we send it on the<font color="#E5E5E5"> insecure Channel</font><font color="#CCCCCC"> you</font>

302
00:10:49,899 --> 00:10:53,050
can change it and Bob<font color="#E5E5E5"> undoes the</font>

303
00:10:51,579 --> 00:10:55,149
one-time pad<font color="#E5E5E5"> so now what have we done</font>

304
00:10:53,050 --> 00:10:56,770
here we now<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> weak resource and on</font>

305
00:10:55,149 --> 00:10:58,630
my<font color="#E5E5E5"> previous slide</font><font color="#CCCCCC"> what you</font><font color="#E5E5E5"> actually</font>

306
00:10:56,770 --> 00:11:01,449
construct is a channel which looks like

307
00:10:58,630 --> 00:11:02,650
<font color="#E5E5E5">this it gets</font><font color="#CCCCCC"> no information about the</font>

308
00:11:01,450 --> 00:11:04,090
<font color="#E5E5E5">message except the size</font>

309
00:11:02,650 --> 00:11:06,010
because of course<font color="#E5E5E5"> it's one time padded</font>

310
00:11:04,090 --> 00:11:07,120
here<font color="#E5E5E5"> but now you can change it and</font>

311
00:11:06,010 --> 00:11:10,300
should only<font color="#CCCCCC"> change it in very specific</font>

312
00:11:07,120 --> 00:11:11,680
ways<font color="#E5E5E5"> you don't need to</font><font color="#CCCCCC"> beat flips so you</font>

313
00:11:10,300 --> 00:11:13,569
can basically<font color="#CCCCCC"> choose how the message</font>

314
00:11:11,680 --> 00:11:14,920
gets changed<font color="#E5E5E5"> so to prove</font><font color="#CCCCCC"> that this is</font>

315
00:11:13,570 --> 00:11:16,720
<font color="#E5E5E5">the case you have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find</font><font color="#CCCCCC"> a simulator</font>

316
00:11:14,920 --> 00:11:18,610
that's the<font color="#E5E5E5"> obvious thing it outputs a</font>

317
00:11:16,720 --> 00:11:20,860
completely bad sci-fi<font color="#CCCCCC"> get sassy prime</font>

318
00:11:18,610 --> 00:11:22,960
here compute<font color="#CCCCCC"> the x over 2 and these</font><font color="#E5E5E5"> are</font>

319
00:11:20,860 --> 00:11:24,280
the bit flips<font color="#E5E5E5"> if performed here so then</font>

320
00:11:22,960 --> 00:11:27,340
<font color="#E5E5E5">we do the same bit flips there</font><font color="#CCCCCC"> cos bit</font>

321
00:11:24,280 --> 00:11:30,699
flips commute<font color="#E5E5E5"> with the one-time pad</font><font color="#CCCCCC"> so</font>

322
00:11:27,340 --> 00:11:33,280
then you can show that this protocol

323
00:11:30,700 --> 00:11:35,430
<font color="#E5E5E5">either so the one-time</font><font color="#CCCCCC"> pad given these</font>

324
00:11:33,280 --> 00:11:39,280
two<font color="#CCCCCC"> E's</font><font color="#E5E5E5"> it's mapped these two resources</font>

325
00:11:35,430 --> 00:11:42,310
to a I'm calling here an<font color="#CCCCCC"> X or malleable</font>

326
00:11:39,280 --> 00:11:44,230
<font color="#CCCCCC">channel so now we have an extra manual</font>

327
00:11:42,310 --> 00:11:45,880
channel and we want to construct<font color="#E5E5E5"> a</font>

328
00:11:44,230 --> 00:11:47,710
secure<font color="#CCCCCC"> channel now an authentication</font>

329
00:11:45,880 --> 00:11:49,620
protocol won't do doesn't<font color="#E5E5E5"> do it in a</font>

330
00:11:47,710 --> 00:11:51,550
generic generic way we know that

331
00:11:49,620 --> 00:11:53,380
authenticate and encrypt is not the same

332
00:11:51,550 --> 00:11:55,329
as encrypting authenticate<font color="#E5E5E5"> so so how do</font>

333
00:11:53,380 --> 00:11:58,390
we do<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> get a secure</font><font color="#CCCCCC"> Channel</font><font color="#E5E5E5"> well</font>

334
00:11:55,330 --> 00:12:00,430
the only<font color="#CCCCCC"> thing you can do is bid fits</font><font color="#E5E5E5"> so</font>

335
00:11:58,390 --> 00:12:03,250
we need to somehow detect<font color="#E5E5E5"> bit flips</font><font color="#CCCCCC"> so</font>

336
00:12:00,430 --> 00:12:05,530
what we do is we're going<font color="#CCCCCC"> to encode</font><font color="#E5E5E5"> X</font>

337
00:12:03,250 --> 00:12:08,320
into some Y using<font color="#E5E5E5"> some code which is</font>

338
00:12:05,530 --> 00:12:09,630
<font color="#E5E5E5">going to detect bit flips so this is</font>

339
00:12:08,320 --> 00:12:13,330
<font color="#E5E5E5">just quickly</font><font color="#CCCCCC"> introduce the notation</font>

340
00:12:09,630 --> 00:12:16,540
<font color="#CCCCCC">let's take a code</font><font color="#E5E5E5"> a linear code CK and</font>

341
00:12:13,330 --> 00:12:17,950
<font color="#E5E5E5">then we we think of CK as being the</font>

342
00:12:16,540 --> 00:12:21,010
<font color="#CCCCCC">generating matrix but I'm kind of</font>

343
00:12:17,950 --> 00:12:22,930
<font color="#E5E5E5">patting it to make it square so we</font>

344
00:12:21,010 --> 00:12:24,760
basically<font color="#E5E5E5"> take your message we add what</font>

345
00:12:22,930 --> 00:12:25,989
<font color="#E5E5E5">the</font><font color="#CCCCCC"> seams</font><font color="#E5E5E5"> long is going to be which</font><font color="#CCCCCC"> is 0</font>

346
00:12:24,760 --> 00:12:29,140
if we're<font color="#E5E5E5"> just trying to generate a code</font>

347
00:12:25,990 --> 00:12:31,710
<font color="#E5E5E5">word and we just multiply to this matrix</font>

348
00:12:29,140 --> 00:12:34,720
<font color="#E5E5E5">and we're going to get a valid</font><font color="#CCCCCC"> codeword</font>

349
00:12:31,710 --> 00:12:37,360
<font color="#CCCCCC">so this is what alice is going</font><font color="#E5E5E5"> to do she</font>

350
00:12:34,720 --> 00:12:39,460
just<font color="#CCCCCC"> generates a codeword</font><font color="#E5E5E5"> and sends it</font>

351
00:12:37,360 --> 00:12:41,020
on the<font color="#E5E5E5"> channel and on Bob site is going</font>

352
00:12:39,460 --> 00:12:42,340
<font color="#E5E5E5">to decode so he</font><font color="#CCCCCC"> applies</font><font color="#E5E5E5"> inverse of the</font>

353
00:12:41,020 --> 00:12:44,770
matrix<font color="#CCCCCC"> he's</font><font color="#E5E5E5"> going to get</font><font color="#CCCCCC"> some X Prime</font>

354
00:12:42,340 --> 00:12:46,740
and<font color="#E5E5E5"> some syndrome s if the syndrome is</font><font color="#CCCCCC"> 0</font>

355
00:12:44,770 --> 00:12:48,970
<font color="#CCCCCC">you're going to</font><font color="#E5E5E5"> accept it and if the</font>

356
00:12:46,740 --> 00:12:50,500
easier to accept X Prime and<font color="#E5E5E5"> if the</font>

357
00:12:48,970 --> 00:12:52,600
<font color="#E5E5E5">syndrome is different from 0 is going</font><font color="#CCCCCC"> to</font>

358
00:12:50,500 --> 00:12:55,030
<font color="#E5E5E5">reject it so</font><font color="#CCCCCC"> now we need</font><font color="#E5E5E5"> codes which</font>

359
00:12:52,600 --> 00:12:57,460
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> certain property so every code is</font>

360
00:12:55,030 --> 00:13:00,100
<font color="#E5E5E5">going to either detect certain</font><font color="#CCCCCC"> bit flips</font>

361
00:12:57,460 --> 00:13:02,560
or not detect them so<font color="#CCCCCC"> we can I'm calling</font>

362
00:13:00,100 --> 00:13:04,720
FK the set of all the bit flips which

363
00:13:02,560 --> 00:13:06,189
are<font color="#E5E5E5"> detected by the code with index K so</font>

364
00:13:04,720 --> 00:13:08,140
this basically<font color="#E5E5E5"> means if you encode it</font>

365
00:13:06,190 --> 00:13:10,000
<font color="#CCCCCC">you do your bit flip so I'm just writing</font>

366
00:13:08,140 --> 00:13:12,550
<font color="#E5E5E5">the bit flip here as a linear operator</font>

367
00:13:10,000 --> 00:13:14,170
<font color="#CCCCCC">and then you decode</font><font color="#E5E5E5"> it you're going to</font>

368
00:13:12,550 --> 00:13:15,609
get back syndrome 0 these<font color="#CCCCCC"> are the ones</font>

369
00:13:14,170 --> 00:13:18,550
<font color="#E5E5E5">they're not</font><font color="#CCCCCC"> detected</font>

370
00:13:15,610 --> 00:13:21,310
so f of<font color="#E5E5E5"> K is the set of errors which are</font>

371
00:13:18,550 --> 00:13:22,839
not detected by code<font color="#CCCCCC"> K and we need a set</font>

372
00:13:21,310 --> 00:13:27,510
<font color="#CCCCCC">of code such that</font><font color="#E5E5E5"> with high probability</font>

373
00:13:22,840 --> 00:13:29,650
<font color="#E5E5E5">over the K or ever detected with</font>

374
00:13:27,510 --> 00:13:31,210
probability<font color="#CCCCCC"> one minus Epsilon so the</font>

375
00:13:29,650 --> 00:13:33,250
poverty of not detecting an error is at

376
00:13:31,210 --> 00:13:36,400
<font color="#E5E5E5">most Epsilon so we can construct we can</font>

377
00:13:33,250 --> 00:13:39,940
find such families of<font color="#E5E5E5"> codes and if we do</font>

378
00:13:36,400 --> 00:13:41,680
this<font color="#CCCCCC"> well we can show that</font><font color="#E5E5E5"> we just have</font>

379
00:13:39,940 --> 00:13:43,180
a small<font color="#CCCCCC"> error epsilon</font><font color="#E5E5E5"> when we're trying</font>

380
00:13:41,680 --> 00:13:44,770
<font color="#E5E5E5">to distinguish these two systems which</font>

381
00:13:43,180 --> 00:13:46,719
depends on<font color="#E5E5E5"> the on these families of</font>

382
00:13:44,770 --> 00:13:52,900
codes<font color="#E5E5E5"> this error it's just how well our</font>

383
00:13:46,720 --> 00:13:54,730
codes cover all the errors and so now we

384
00:13:52,900 --> 00:13:56,680
compose our one-time pad with these

385
00:13:54,730 --> 00:13:58,300
codes<font color="#E5E5E5"> so I'm just skipping a few steps</font>

386
00:13:56,680 --> 00:14:00,760
here this is the protocol which<font color="#CCCCCC"> as both</font>

387
00:13:58,300 --> 00:14:03,579
together<font color="#E5E5E5"> it gets gets</font><font color="#CCCCCC"> a key</font><font color="#E5E5E5"> you checking</font>

388
00:14:00,760 --> 00:14:06,580
to split<font color="#CCCCCC"> it in two parts</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> first part</font>

389
00:14:03,580 --> 00:14:08,530
we're going<font color="#E5E5E5"> to encode it using some code</font>

390
00:14:06,580 --> 00:14:10,060
chosen by<font color="#CCCCCC"> k1</font><font color="#E5E5E5"> and then we do a one-time</font>

391
00:14:08,530 --> 00:14:13,150
pad and then<font color="#E5E5E5"> the decryption</font><font color="#CCCCCC"> works in the</font>

392
00:14:10,060 --> 00:14:15,130
obvious way and if after<font color="#E5E5E5"> decryption</font><font color="#CCCCCC"> we</font>

393
00:14:13,150 --> 00:14:17,410
get a syndrome<font color="#CCCCCC"> zero we accept it and</font><font color="#E5E5E5"> if</font>

394
00:14:15,130 --> 00:14:22,060
<font color="#E5E5E5">you don't get a syndrome zero we output</font>

395
00:14:17,410 --> 00:14:23,829
an error so this<font color="#E5E5E5"> is how we construct</font><font color="#CCCCCC"> a</font>

396
00:14:22,060 --> 00:14:26,729
secure<font color="#E5E5E5"> channel from an insecure channel</font>

397
00:14:23,830 --> 00:14:28,960
by reversing<font color="#E5E5E5"> you also not doing</font>

398
00:14:26,730 --> 00:14:31,660
<font color="#CCCCCC">encrypting authenticate we're doing a</font>

399
00:14:28,960 --> 00:14:35,260
code then encrypt<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> generic way</font>

400
00:14:31,660 --> 00:14:37,540
<font color="#CCCCCC">of constructing secure channel</font><font color="#E5E5E5"> now still</font>

401
00:14:35,260 --> 00:14:39,130
<font color="#E5E5E5">in the classical case</font><font color="#CCCCCC"> we can recycle key</font>

402
00:14:37,540 --> 00:14:41,560
when you look at what<font color="#E5E5E5"> we've</font><font color="#CCCCCC"> done here</font>

403
00:14:39,130 --> 00:14:43,630
<font color="#CCCCCC">we've one-time padded our</font><font color="#E5E5E5"> cipher with</font>

404
00:14:41,560 --> 00:14:45,640
the key<font color="#E5E5E5"> k2 and F okay one is completely</font>

405
00:14:43,630 --> 00:14:50,110
unknown<font color="#E5E5E5"> so if you do this we can recycle</font>

406
00:14:45,640 --> 00:14:51,939
k1<font color="#CCCCCC"> but now the</font><font color="#E5E5E5"> question is when do you</font>

407
00:14:50,110 --> 00:14:56,230
cycle k1 and this is an important point

408
00:14:51,940 --> 00:14:58,150
<font color="#E5E5E5">if Alice recycles a key k1</font><font color="#CCCCCC"> too soon say</font>

409
00:14:56,230 --> 00:15:00,250
before Bob receives his<font color="#E5E5E5"> cipher c-prime</font>

410
00:14:58,150 --> 00:15:02,410
she recycles<font color="#E5E5E5"> k1 it might in another</font>

411
00:15:00,250 --> 00:15:04,240
<font color="#E5E5E5">application</font><font color="#CCCCCC"> leak somehow</font><font color="#E5E5E5"> to even even</font>

412
00:15:02,410 --> 00:15:06,459
get k1 and we'll know how<font color="#E5E5E5"> to change the</font>

413
00:15:04,240 --> 00:15:09,550
cipher so the key can only be<font color="#E5E5E5"> recycled</font>

414
00:15:06,460 --> 00:15:10,720
<font color="#E5E5E5">after</font><font color="#CCCCCC"> bob has received C</font><font color="#E5E5E5"> Prime so what</font>

415
00:15:09,550 --> 00:15:12,729
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> need is a backward</font>

416
00:15:10,720 --> 00:15:14,020
<font color="#CCCCCC">channel so that Bob confirms to Alice</font>

417
00:15:12,730 --> 00:15:15,730
<font color="#CCCCCC">that he has received a message this is</font>

418
00:15:14,020 --> 00:15:21,069
<font color="#E5E5E5">very similar to what</font><font color="#CCCCCC"> assertion he did</font><font color="#E5E5E5"> in</font>

419
00:15:15,730 --> 00:15:22,450
his previous protocol<font color="#E5E5E5"> so now what so we</font>

420
00:15:21,070 --> 00:15:24,070
only have to modify the protocol in a

421
00:15:22,450 --> 00:15:26,650
very simple<font color="#CCCCCC"> way when Bob get to C prime</font>

422
00:15:24,070 --> 00:15:28,600
sends this bit of backwards confirmation

423
00:15:26,650 --> 00:15:30,040
to Alice he can recycle k1

424
00:15:28,600 --> 00:15:32,560
and upon<font color="#CCCCCC"> receiving this bid at least can</font>

425
00:15:30,040 --> 00:15:34,719
recycle<font color="#CCCCCC"> k-1</font><font color="#E5E5E5"> of course Bob</font><font color="#CCCCCC"> Eve could</font>

426
00:15:32,560 --> 00:15:37,209
interrupt the authentic<font color="#CCCCCC"> Channel which</font>

427
00:15:34,720 --> 00:15:40,600
<font color="#E5E5E5">means that Alice might not get k1 she</font>

428
00:15:37,209 --> 00:15:43,000
might just abort<font color="#E5E5E5"> both like just</font><font color="#CCCCCC"> get an</font>

429
00:15:40,600 --> 00:15:44,560
error<font color="#E5E5E5"> and there's nothing we can do</font>

430
00:15:43,000 --> 00:15:46,600
about that<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> generic problem</font>

431
00:15:44,560 --> 00:15:48,699
<font color="#E5E5E5">with any key</font><font color="#CCCCCC"> distribution scheme</font><font color="#E5E5E5"> Eve can</font>

432
00:15:46,600 --> 00:15:50,139
always block one of<font color="#CCCCCC"> the message so that</font>

433
00:15:48,699 --> 00:15:54,339
one<font color="#CCCCCC"> of the case ends up with the key and</font>

434
00:15:50,139 --> 00:15:54,730
<font color="#E5E5E5">the other one doesn't so now what do we</font>

435
00:15:54,339 --> 00:15:56,440
get

436
00:15:54,730 --> 00:15:58,060
well if<font color="#CCCCCC"> we</font><font color="#E5E5E5"> look at our video for the</font>

437
00:15:56,440 --> 00:15:59,290
<font color="#E5E5E5">call we have a message coming in and</font>

438
00:15:58,060 --> 00:16:01,029
message<font color="#E5E5E5"> going out and you have a key</font>

439
00:15:59,290 --> 00:16:02,769
being produced<font color="#CCCCCC"> so what we actually</font>

440
00:16:01,029 --> 00:16:05,019
construct<font color="#E5E5E5"> are now two resources we</font>

441
00:16:02,769 --> 00:16:07,810
construct a secure<font color="#CCCCCC"> channel and we</font>

442
00:16:05,019 --> 00:16:09,250
construct a secret key which<font color="#CCCCCC"> is trying</font>

443
00:16:07,810 --> 00:16:11,380
<font color="#E5E5E5">to look a little messy but I'll try and</font>

444
00:16:09,250 --> 00:16:13,240
explain<font color="#CCCCCC"> so it's a CPU just slightly</font>

445
00:16:11,380 --> 00:16:14,560
weaker than<font color="#E5E5E5"> sweetie we</font><font color="#CCCCCC"> have here</font><font color="#E5E5E5"> because</font>

446
00:16:13,240 --> 00:16:17,110
<font color="#E5E5E5">we're giving a bit more power to Eve</font>

447
00:16:14,560 --> 00:16:20,589
<font color="#E5E5E5">first it gets to choose when they</font><font color="#CCCCCC"> get</font>

448
00:16:17,110 --> 00:16:22,720
this tricky because they can<font color="#E5E5E5"> only get</font>

449
00:16:20,589 --> 00:16:24,880
<font color="#E5E5E5">this wiki once Bob has received C Prime</font>

450
00:16:22,720 --> 00:16:26,800
and if choose when chooses when Bob gets

451
00:16:24,880 --> 00:16:28,149
C prime so if chooses when they get the

452
00:16:26,800 --> 00:16:29,889
secret key so I've<font color="#CCCCCC"> just</font><font color="#E5E5E5"> put this sort of</font>

453
00:16:28,149 --> 00:16:31,839
unary input here<font color="#CCCCCC"> and the key will only</font>

454
00:16:29,889 --> 00:16:34,000
be<font color="#CCCCCC"> generated once</font><font color="#E5E5E5"> Eve allows it the</font>

455
00:16:31,839 --> 00:16:35,079
resource to generate the key<font color="#E5E5E5"> and then of</font>

456
00:16:34,000 --> 00:16:37,660
course<font color="#CCCCCC"> you can prevent a list I'm</font>

457
00:16:35,079 --> 00:16:40,989
getting a copy of the key

458
00:16:37,660 --> 00:16:42,310
so now we can<font color="#E5E5E5"> prove that the two</font>

459
00:16:40,990 --> 00:16:45,579
indistinguishable with some error

460
00:16:42,310 --> 00:16:48,399
epsilon and basically what we have is

461
00:16:45,579 --> 00:16:50,019
<font color="#E5E5E5">this this protocol given this key a</font>

462
00:16:48,399 --> 00:16:52,860
backward authentic<font color="#CCCCCC"> Channel and insecure</font>

463
00:16:50,019 --> 00:16:56,949
<font color="#E5E5E5">channel constructs a new key resource</font>

464
00:16:52,860 --> 00:17:01,240
<font color="#E5E5E5">and a secure</font><font color="#CCCCCC"> Channel and so this new key</font>

465
00:16:56,949 --> 00:17:02,979
<font color="#E5E5E5">resource cost anyway say a uniform so</font>

466
00:17:01,240 --> 00:17:07,380
now I<font color="#E5E5E5"> nearly done we can move on</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

467
00:17:02,980 --> 00:17:11,679
quantum<font color="#E5E5E5"> case so I've just written a very</font>

468
00:17:07,380 --> 00:17:12,819
<font color="#E5E5E5">quick sort of dictionary of how we're</font>

469
00:17:11,679 --> 00:17:14,049
going<font color="#E5E5E5"> from the classical to the quantum</font>

470
00:17:12,819 --> 00:17:15,579
case<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of having messages which</font>

471
00:17:14,049 --> 00:17:18,069
are strings are<font color="#CCCCCC"> going to consider</font>

472
00:17:15,579 --> 00:17:21,039
messages to be density operators so

473
00:17:18,069 --> 00:17:23,559
basically you can<font color="#CCCCCC"> think</font><font color="#E5E5E5"> of them as yeah</font>

474
00:17:21,039 --> 00:17:25,179
big matrices<font color="#CCCCCC"> of complex numbers</font><font color="#E5E5E5"> the</font>

475
00:17:23,559 --> 00:17:26,980
<font color="#CCCCCC">one-time pad</font><font color="#E5E5E5"> in the classical</font><font color="#CCCCCC"> case we</font>

476
00:17:25,179 --> 00:17:30,159
<font color="#CCCCCC">just X so every bit</font><font color="#E5E5E5"> in the quantum</font><font color="#CCCCCC"> case</font>

477
00:17:26,980 --> 00:17:33,220
you have to do<font color="#CCCCCC"> bit flips and facelifts</font>

478
00:17:30,159 --> 00:17:35,350
so these are the power operators code in

479
00:17:33,220 --> 00:17:36,940
the classical<font color="#CCCCCC"> case we're just added with</font>

480
00:17:35,350 --> 00:17:39,129
syndrome<font color="#CCCCCC"> 0 and we multiplied with</font><font color="#E5E5E5"> our</font>

481
00:17:36,940 --> 00:17:41,310
linear<font color="#CCCCCC"> matrix to get</font><font color="#E5E5E5"> Y in the quantum</font>

482
00:17:39,130 --> 00:17:43,560
<font color="#CCCCCC">case we add a syndrome 0 we</font>

483
00:17:41,310 --> 00:17:46,530
apply our unitary which generates our

484
00:17:43,560 --> 00:17:51,270
code<font color="#CCCCCC"> in the classical case we had to</font>

485
00:17:46,530 --> 00:17:53,220
detect bit flips<font color="#CCCCCC"> so we had a set FK</font><font color="#E5E5E5"> and</font>

486
00:17:51,270 --> 00:17:55,379
we said the error is in FK if the code

487
00:17:53,220 --> 00:17:56,910
<font color="#E5E5E5">cailletet</font><font color="#CCCCCC"> failed to</font><font color="#E5E5E5"> detect this bit flip</font>

488
00:17:55,380 --> 00:17:58,770
in the<font color="#CCCCCC"> column case we're trying</font><font color="#E5E5E5"> to</font>

489
00:17:56,910 --> 00:18:00,570
detect<font color="#CCCCCC"> poly operators so we have a set</font>

490
00:17:58,770 --> 00:18:03,560
FK which contains<font color="#E5E5E5"> the power operator if</font>

491
00:18:00,570 --> 00:18:08,159
the coded text<font color="#CCCCCC"> fail</font><font color="#E5E5E5"> to detect that that</font>

492
00:18:03,560 --> 00:18:09,570
poly operator<font color="#E5E5E5"> we wanted a</font><font color="#CCCCCC"> family such</font>

493
00:18:08,160 --> 00:18:11,130
that at high poverty we detect all<font color="#E5E5E5"> the</font>

494
00:18:09,570 --> 00:18:13,409
errors we want a<font color="#E5E5E5"> family such a try</font>

495
00:18:11,130 --> 00:18:15,660
probably to be detect all<font color="#E5E5E5"> the errors the</font>

496
00:18:13,410 --> 00:18:17,280
<font color="#E5E5E5">cipher we generated by appending the</font>

497
00:18:15,660 --> 00:18:18,930
<font color="#E5E5E5">syndrome applying the code to doing a</font>

498
00:18:17,280 --> 00:18:20,430
one-time pad we append<font color="#CCCCCC"> the syndrome</font><font color="#E5E5E5"> we</font>

499
00:18:18,930 --> 00:18:23,690
apply the crowd you do the one-time<font color="#CCCCCC"> pad</font>

500
00:18:20,430 --> 00:18:27,270
so really it's basically the same thing

501
00:18:23,690 --> 00:18:29,100
<font color="#E5E5E5">but now comes the difference</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

502
00:18:27,270 --> 00:18:31,379
encrypt as I<font color="#E5E5E5"> just explained</font><font color="#CCCCCC"> we decrypt</font>

503
00:18:29,100 --> 00:18:33,330
<font color="#E5E5E5">in the obvious way we end up measuring</font>

504
00:18:31,380 --> 00:18:34,980
<font color="#CCCCCC">we get a syndrome we get an error</font><font color="#E5E5E5"> but</font>

505
00:18:33,330 --> 00:18:37,409
<font color="#E5E5E5">now if</font><font color="#CCCCCC"> the error is 0</font>

506
00:18:34,980 --> 00:18:39,450
we recycle both parts instead<font color="#E5E5E5"> of just</font>

507
00:18:37,410 --> 00:18:40,650
recycling<font color="#E5E5E5"> k1 you can recycle k1 and k2</font>

508
00:18:39,450 --> 00:18:42,930
and<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> really different to the</font>

509
00:18:40,650 --> 00:18:45,480
classical case we are we can also

510
00:18:42,930 --> 00:18:48,030
recycle k2<font color="#E5E5E5"> and in the case</font><font color="#CCCCCC"> of a reject</font>

511
00:18:45,480 --> 00:18:49,560
we can only<font color="#CCCCCC"> recycled a 1 so in the</font>

512
00:18:48,030 --> 00:18:51,720
what's different here<font color="#E5E5E5"> is what I've</font><font color="#CCCCCC"> put</font>

513
00:18:49,560 --> 00:18:54,929
in purple<font color="#E5E5E5"> in the real protocol on your</font>

514
00:18:51,720 --> 00:18:57,060
side<font color="#CCCCCC"> they are</font><font color="#E5E5E5"> either going</font><font color="#CCCCCC"> to recycle</font><font color="#E5E5E5"> so</font>

515
00:18:54,930 --> 00:18:58,830
case both k1 and k2<font color="#CCCCCC"> were</font><font color="#E5E5E5"> kind of not</font>

516
00:18:57,060 --> 00:19:02,970
<font color="#E5E5E5">enough space to like k1 and k2 so k</font><font color="#CCCCCC"> is</font>

517
00:18:58,830 --> 00:19:04,290
both<font color="#E5E5E5"> or they just recycle k1 and here at</font>

518
00:19:02,970 --> 00:19:06,180
<font color="#E5E5E5">least will either</font><font color="#CCCCCC"> recite ok</font>

519
00:19:04,290 --> 00:19:08,490
or just<font color="#E5E5E5"> k1 or she's going to get an</font>

520
00:19:06,180 --> 00:19:12,930
error if<font color="#E5E5E5"> if interrupts the back with</font>

521
00:19:08,490 --> 00:19:14,700
authentic<font color="#E5E5E5"> channel and now what we get on</font>

522
00:19:12,930 --> 00:19:16,410
the side is<font color="#CCCCCC"> if acute is</font><font color="#E5E5E5"> very similar to</font>

523
00:19:14,700 --> 00:19:18,000
<font color="#E5E5E5">the previous one except that here if can</font>

524
00:19:16,410 --> 00:19:20,100
now input a bit<font color="#E5E5E5"> which decides on the</font>

525
00:19:18,000 --> 00:19:21,390
length of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> key because if decides if</font>

526
00:19:20,100 --> 00:19:23,250
she's going<font color="#E5E5E5"> to put noise or not so she</font>

527
00:19:21,390 --> 00:19:25,440
<font color="#E5E5E5">basically decides if they're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

528
00:19:23,250 --> 00:19:31,140
get a a long key or<font color="#CCCCCC"> just a short key and</font>

529
00:19:25,440 --> 00:19:33,030
then<font color="#E5E5E5"> justice</font><font color="#CCCCCC"> add a bit for</font><font color="#E5E5E5"> form for</font>

530
00:19:31,140 --> 00:19:35,250
Alice<font color="#E5E5E5"> deciding what else gets the key so</font>

531
00:19:33,030 --> 00:19:37,550
the main theorem<font color="#CCCCCC"> basically says that</font>

532
00:19:35,250 --> 00:19:41,340
these<font color="#E5E5E5"> two systems are indistinguishable</font>

533
00:19:37,550 --> 00:19:44,010
<font color="#E5E5E5">so the errors did if we have this our</font>

534
00:19:41,340 --> 00:19:45,629
codes of this<font color="#CCCCCC"> palpable property that we</font>

535
00:19:44,010 --> 00:19:48,360
can<font color="#E5E5E5"> catch all power levels with</font>

536
00:19:45,630 --> 00:19:50,370
probability all failed<font color="#CCCCCC"> cache with</font>

537
00:19:48,360 --> 00:19:52,169
<font color="#E5E5E5">probably at most epsilon then</font><font color="#CCCCCC"> we think</font>

538
00:19:50,370 --> 00:19:53,219
the<font color="#E5E5E5"> two I distinguish with an error</font>

539
00:19:52,170 --> 00:19:55,110
which depends on episode

540
00:19:53,220 --> 00:20:03,659
which is<font color="#CCCCCC"> some square root of epsilon</font><font color="#E5E5E5"> and</font>

541
00:19:55,110 --> 00:20:05,760
<font color="#E5E5E5">ya plus epsilon</font><font color="#CCCCCC"> number two so this was</font>

542
00:20:03,659 --> 00:20:06,690
<font color="#CCCCCC">just some some parameters because the</font>

543
00:20:05,760 --> 00:20:08,370
<font color="#CCCCCC">here I've done</font><font color="#E5E5E5"> this in a very abstract</font>

544
00:20:06,690 --> 00:20:09,390
<font color="#E5E5E5">way I just</font><font color="#CCCCCC"> said we need a code now of</font>

545
00:20:08,370 --> 00:20:11,699
<font color="#E5E5E5">course they have in code which I've been</font>

546
00:20:09,390 --> 00:20:14,159
<font color="#E5E5E5">proposed in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> literature which do this</font>

547
00:20:11,700 --> 00:20:17,190
the codes<font color="#CCCCCC"> proposed by a</font><font color="#E5E5E5"> band went all in</font>

548
00:20:14,159 --> 00:20:19,140
<font color="#CCCCCC">the paper from 2002</font><font color="#E5E5E5"> achieve this</font><font color="#CCCCCC"> so we</font>

549
00:20:17,190 --> 00:20:22,350
need so our<font color="#CCCCCC"> messages length</font><font color="#E5E5E5"> M our</font>

550
00:20:19,140 --> 00:20:23,490
<font color="#E5E5E5">syndrome is length n we need n bits to</font>

551
00:20:22,350 --> 00:20:25,590
choose the code so it's actually<font color="#E5E5E5"> very</font>

552
00:20:23,490 --> 00:20:26,820
compact family of codes<font color="#CCCCCC"> and this is the</font>

553
00:20:25,590 --> 00:20:28,889
bit we're going to<font color="#E5E5E5"> need for the one-time</font>

554
00:20:26,820 --> 00:20:31,139
pad<font color="#CCCCCC"> and then we get</font><font color="#E5E5E5"> an error which is</font>

555
00:20:28,890 --> 00:20:34,260
exponentially small in in the syndrome

556
00:20:31,140 --> 00:20:36,510
<font color="#CCCCCC">so we can really just by</font><font color="#E5E5E5"> changing the</font>

557
00:20:34,260 --> 00:20:38,760
<font color="#CCCCCC">number of bits or increasing the size of</font>

558
00:20:36,510 --> 00:20:40,980
<font color="#E5E5E5">the</font><font color="#CCCCCC"> cipher which is getting</font><font color="#E5E5E5"> errors</font>

559
00:20:38,760 --> 00:20:42,690
exponentially small and then we can also

560
00:20:40,980 --> 00:20:44,730
do<font color="#E5E5E5"> the unit hairy designs which will</font>

561
00:20:42,690 --> 00:20:46,200
quote which is allow a<font color="#E5E5E5"> large</font><font color="#CCCCCC"> or a family</font>

562
00:20:44,730 --> 00:20:47,520
of code<font color="#CCCCCC"> then</font><font color="#E5E5E5"> we get an error here which</font>

563
00:20:46,200 --> 00:20:54,890
is kind of a bit<font color="#E5E5E5"> smaller and doesn't</font>

564
00:20:47,520 --> 00:20:56,879
depend on the factor M so lost<font color="#E5E5E5"> lost</font>

565
00:20:54,890 --> 00:20:58,620
<font color="#CCCCCC">comment to make is I'm</font><font color="#E5E5E5"> going back to the</font>

566
00:20:56,880 --> 00:21:00,270
<font color="#CCCCCC">original protocol</font><font color="#E5E5E5"> because I said</font><font color="#CCCCCC"> we only</font>

567
00:20:58,620 --> 00:21:02,489
<font color="#CCCCCC">prove security for subsets for their</font>

568
00:21:00,270 --> 00:21:04,408
<font color="#E5E5E5">protocols and here's the difference</font><font color="#CCCCCC"> we</font>

569
00:21:02,490 --> 00:21:05,789
<font color="#E5E5E5">require this property</font><font color="#CCCCCC"> that the poly</font>

570
00:21:04,409 --> 00:21:07,919
errors were all called accepted error

571
00:21:05,789 --> 00:21:10,408
epsilon the original protocol<font color="#E5E5E5"> has a</font>

572
00:21:07,919 --> 00:21:11,789
slightly weak requirement this<font color="#E5E5E5"> is some</font>

573
00:21:10,409 --> 00:21:13,169
<font color="#E5E5E5">property you don't have a classical code</font>

574
00:21:11,789 --> 00:21:15,000
<font color="#E5E5E5">but you have</font><font color="#CCCCCC"> for quantum codes they</font>

575
00:21:13,169 --> 00:21:16,590
exist errors which are not caught they

576
00:21:15,000 --> 00:21:17,730
do not change<font color="#E5E5E5"> the message basically</font>

577
00:21:16,590 --> 00:21:18,870
<font color="#CCCCCC">every switch to face lips on the</font>

578
00:21:17,730 --> 00:21:21,360
syndrome<font color="#E5E5E5"> for people who know what that</font>

579
00:21:18,870 --> 00:21:22,949
is so if I'm<font color="#E5E5E5"> going to call G of K these</font>

580
00:21:21,360 --> 00:21:27,000
errors which have no effect on<font color="#E5E5E5"> the</font>

581
00:21:22,950 --> 00:21:29,159
message<font color="#E5E5E5"> they did not require that</font><font color="#CCCCCC"> the</font>

582
00:21:27,000 --> 00:21:30,840
focal areas which are<font color="#E5E5E5"> not caught</font><font color="#CCCCCC"> are</font>

583
00:21:29,159 --> 00:21:32,610
<font color="#E5E5E5">small they required that the errors</font>

584
00:21:30,840 --> 00:21:33,270
which are not caught and do not change

585
00:21:32,610 --> 00:21:34,649
<font color="#E5E5E5">the message</font>

586
00:21:33,270 --> 00:21:35,879
<font color="#CCCCCC">a small which kind of makes sense</font>

587
00:21:34,650 --> 00:21:36,990
<font color="#CCCCCC">because the goal was that</font><font color="#E5E5E5"> the message</font>

588
00:21:35,880 --> 00:21:38,669
doesn't<font color="#CCCCCC"> get changed so if you ever</font>

589
00:21:36,990 --> 00:21:40,950
<font color="#CCCCCC">change doesn't</font><font color="#E5E5E5"> change the message</font><font color="#CCCCCC"> it's</font>

590
00:21:38,669 --> 00:21:44,190
<font color="#CCCCCC">okay we can</font><font color="#E5E5E5"> accept it but an error which</font>

591
00:21:40,950 --> 00:21:45,419
doesn't change<font color="#E5E5E5"> the</font><font color="#CCCCCC"> message this only</font>

592
00:21:44,190 --> 00:21:46,559
guarantees that the message<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font>

593
00:21:45,419 --> 00:21:48,120
changed it doesn't<font color="#E5E5E5"> guarantee that the</font>

594
00:21:46,559 --> 00:21:49,320
<font color="#CCCCCC">cipher is</font><font color="#E5E5E5"> not changed and we needed this</font>

595
00:21:48,120 --> 00:21:50,580
strong<font color="#CCCCCC"> requirement</font><font color="#E5E5E5"> that the cipher</font>

596
00:21:49,320 --> 00:21:52,830
should not be changed to be<font color="#CCCCCC"> able to</font>

597
00:21:50,580 --> 00:21:56,539
recycle<font color="#CCCCCC"> everything and we can</font><font color="#E5E5E5"> actually</font>

598
00:21:52,830 --> 00:21:59,428
construct<font color="#E5E5E5"> attacks on this larger set of</font>

599
00:21:56,539 --> 00:22:02,429
codes<font color="#CCCCCC"> which prevent us from reciting</font><font color="#E5E5E5"> all</font>

600
00:21:59,429 --> 00:22:04,590
the<font color="#CCCCCC"> keys for example</font><font color="#E5E5E5"> suppose there is a</font>

601
00:22:02,429 --> 00:22:05,850
code there's a scheme<font color="#E5E5E5"> and the existing</font>

602
00:22:04,590 --> 00:22:07,389
<font color="#CCCCCC">signature</font><font color="#E5E5E5"> which have been proposed to</font>

603
00:22:05,850 --> 00:22:11,500
<font color="#CCCCCC">tell this</font>

604
00:22:07,390 --> 00:22:13,570
<font color="#E5E5E5">that some error is roughly</font><font color="#CCCCCC"> in half it</font>

605
00:22:11,500 --> 00:22:15,130
has<font color="#CCCCCC"> no</font><font color="#E5E5E5"> effect</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> half of the</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> and</font>

606
00:22:13,570 --> 00:22:19,809
it gets detected by the other half of

607
00:22:15,130 --> 00:22:21,790
the<font color="#E5E5E5"> codes</font><font color="#CCCCCC"> so now</font><font color="#E5E5E5"> say if does this error</font>

608
00:22:19,809 --> 00:22:23,440
on the message<font color="#E5E5E5"> and then she looks</font>

609
00:22:21,790 --> 00:22:24,790
<font color="#CCCCCC">whether</font><font color="#E5E5E5"> Bob accepts or not the the</font>

610
00:22:23,440 --> 00:22:26,650
<font color="#CCCCCC">message that you received</font>

611
00:22:24,790 --> 00:22:27,879
just this<font color="#CCCCCC"> bit the</font><font color="#E5E5E5"> Bob either accepts or</font>

612
00:22:26,650 --> 00:22:29,320
<font color="#CCCCCC">rejects is going to leak one bit of</font>

613
00:22:27,880 --> 00:22:31,300
<font color="#E5E5E5">information</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the key which is used</font>

614
00:22:29,320 --> 00:22:33,040
<font color="#CCCCCC">because then Eve knows if it's a code</font>

615
00:22:31,300 --> 00:22:36,309
which<font color="#CCCCCC"> actually detects</font><font color="#E5E5E5"> this error or</font><font color="#CCCCCC"> and</font>

616
00:22:33,040 --> 00:22:38,830
<font color="#E5E5E5">code which fails to detect this error so</font>

617
00:22:36,309 --> 00:22:40,210
if you go<font color="#CCCCCC"> over other codes our second</font>

618
00:22:38,830 --> 00:22:41,949
authentication<font color="#E5E5E5"> codes proposed in the</font>

619
00:22:40,210 --> 00:22:43,600
literature that<font color="#E5E5E5"> I've picked out here</font>

620
00:22:41,950 --> 00:22:46,809
sort<font color="#E5E5E5"> of the most common ones</font><font color="#CCCCCC"> you have</font>

621
00:22:43,600 --> 00:22:49,570
the sine polynomial code which falls in

622
00:22:46,809 --> 00:22:51,760
this category of<font color="#E5E5E5"> the same structures</font>

623
00:22:49,570 --> 00:22:54,939
disclosed from<font color="#CCCCCC"> barnum</font><font color="#E5E5E5"> at all but it uses</font>

624
00:22:51,760 --> 00:22:56,650
<font color="#CCCCCC">q date so it</font><font color="#E5E5E5"> uses some the dimension is</font>

625
00:22:54,940 --> 00:22:59,140
<font color="#CCCCCC">not 2 to some power the dimension is</font>

626
00:22:56,650 --> 00:23:00,370
some prime power<font color="#E5E5E5"> so most likely the</font>

627
00:22:59,140 --> 00:23:02,710
proof goes through but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> haven't</font>

628
00:23:00,370 --> 00:23:04,899
<font color="#E5E5E5">actually done it</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Clifford code is a</font>

629
00:23:02,710 --> 00:23:06,460
special<font color="#CCCCCC"> case</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the code</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> bonhomie</font>

630
00:23:04,900 --> 00:23:09,550
it only goes<font color="#CCCCCC"> through there are trap</font>

631
00:23:06,460 --> 00:23:10,809
codes have this sort of weekly testing

632
00:23:09,550 --> 00:23:11,980
code property so we<font color="#CCCCCC"> actually don't</font><font color="#E5E5E5"> know</font>

633
00:23:10,809 --> 00:23:13,600
what can<font color="#E5E5E5"> be recycled and there's</font>

634
00:23:11,980 --> 00:23:15,070
actually a<font color="#E5E5E5"> very recent code recently</font>

635
00:23:13,600 --> 00:23:16,389
proposed to last year<font color="#E5E5E5"> and we have</font>

636
00:23:15,070 --> 00:23:21,419
<font color="#E5E5E5">actually no idea of the key can</font><font color="#CCCCCC"> be</font>

637
00:23:16,390 --> 00:23:21,420
recycled<font color="#E5E5E5"> or not for that one thank you</font>

