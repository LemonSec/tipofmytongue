1
00:00:00,000 --> 00:00:07,770
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so I want to talk</font><font color="#CCCCCC"> with you about</font>

2
00:00:02,790 --> 00:00:09,840
her new not the newest but<font color="#E5E5E5"> the proof of</font>

3
00:00:07,770 --> 00:00:11,340
concept<font color="#E5E5E5"> implementation to solve</font>

4
00:00:09,840 --> 00:00:14,070
computers and<font color="#E5E5E5"> integrity this</font><font color="#CCCCCC"> is the</font>

5
00:00:11,340 --> 00:00:16,650
joint<font color="#E5E5E5"> work with elements a son who is</font>

6
00:00:14,070 --> 00:00:19,080
here<font color="#E5E5E5"> with us a</font><font color="#CCCCCC"> dough bento</font><font color="#E5E5E5"> valise and</font>

7
00:00:16,650 --> 00:00:21,599
<font color="#CCCCCC">all chiesa real</font><font color="#E5E5E5"> Gabaldon daniel ganc in</font>

8
00:00:19,080 --> 00:00:23,820
<font color="#CCCCCC">matin Camillus Afghani a pilgrim and</font><font color="#E5E5E5"> met</font>

9
00:00:21,600 --> 00:00:30,420
until Boston Alan Trammell and<font color="#CCCCCC"> Madhav's</font>

10
00:00:23,820 --> 00:00:33,420
Wilson<font color="#E5E5E5"> okay so in this talk we first see</font>

11
00:00:30,420 --> 00:00:35,190
<font color="#E5E5E5">what is the goal of a research we will</font>

12
00:00:33,420 --> 00:00:39,870
see other approaches we are not the<font color="#CCCCCC"> only</font>

13
00:00:35,190 --> 00:00:42,089
one that<font color="#E5E5E5"> tried to solve such problems an</font>

14
00:00:39,870 --> 00:00:44,870
<font color="#E5E5E5">overview</font><font color="#CCCCCC"> of our solution which is a</font>

15
00:00:42,090 --> 00:00:47,340
proof of concept in implementation<font color="#E5E5E5"> and</font>

16
00:00:44,870 --> 00:00:51,360
we will finish with<font color="#CCCCCC"> some concrete</font>

17
00:00:47,340 --> 00:00:53,250
measurements<font color="#CCCCCC"> I offer implementation okay</font>

18
00:00:51,360 --> 00:00:59,090
so what first of<font color="#E5E5E5"> all what</font><font color="#CCCCCC"> is our goal</font>

19
00:00:53,250 --> 00:01:01,949
our goal<font color="#E5E5E5"> our goal is a system to</font><font color="#CCCCCC"> solve a</font>

20
00:00:59,090 --> 00:01:06,720
computational integrity and it should be

21
00:01:01,949 --> 00:01:09,679
a close to practical<font color="#CCCCCC"> ok computation</font>

22
00:01:06,720 --> 00:01:11,490
integrity or known as<font color="#CCCCCC"> well as very fine</font>

23
00:01:09,680 --> 00:01:14,670
computation or delegation<font color="#E5E5E5"> of</font>

24
00:01:11,490 --> 00:01:21,360
computations is the well studied problem

25
00:01:14,670 --> 00:01:25,290
in cryptography and many work was done

26
00:01:21,360 --> 00:01:28,320
in<font color="#CCCCCC"> that field mainly</font><font color="#E5E5E5"> in the theory side</font>

27
00:01:25,290 --> 00:01:32,100
<font color="#E5E5E5">but recently there are so some</font>

28
00:01:28,320 --> 00:01:34,020
applications as well so we<font color="#E5E5E5"> want to</font>

29
00:01:32,100 --> 00:01:37,829
produce a practical computational

30
00:01:34,020 --> 00:01:39,810
integrity system the message I would

31
00:01:37,829 --> 00:01:43,320
<font color="#E5E5E5">like you to take with you from this talk</font>

32
00:01:39,810 --> 00:01:47,909
is<font color="#CCCCCC"> that practical solution does not</font>

33
00:01:43,320 --> 00:01:49,979
<font color="#E5E5E5">require a trusted</font><font color="#CCCCCC"> setup phase ok which</font>

34
00:01:47,909 --> 00:01:53,610
<font color="#E5E5E5">is a very common solution that I</font><font color="#CCCCCC"> guess</font>

35
00:01:49,979 --> 00:01:56,850
<font color="#CCCCCC">that</font><font color="#E5E5E5"> many of you</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> of so our</font>

36
00:01:53,610 --> 00:02:00,030
result<font color="#CCCCCC"> our result is the</font><font color="#E5E5E5"> system we call</font>

37
00:01:56,850 --> 00:02:02,880
<font color="#CCCCCC">sy stands</font><font color="#E5E5E5"> for scalable computational</font>

38
00:02:00,030 --> 00:02:04,549
integrity this is the first

39
00:02:02,880 --> 00:02:07,619
<font color="#CCCCCC">implementation</font><font color="#E5E5E5"> of a theoretical</font>

40
00:02:04,549 --> 00:02:11,819
<font color="#E5E5E5">construction that achieves all the four</font>

41
00:02:07,619 --> 00:02:13,560
points<font color="#CCCCCC"> it's a publicly</font><font color="#E5E5E5"> verifiable and</font>

42
00:02:11,819 --> 00:02:16,349
does<font color="#E5E5E5"> not require a trusted</font>

43
00:02:13,560 --> 00:02:20,090
<font color="#CCCCCC">set up it is Universal Universal meaning</font>

44
00:02:16,349 --> 00:02:23,549
it we can construct<font color="#E5E5E5"> a proof for any</font>

45
00:02:20,090 --> 00:02:26,160
<font color="#E5E5E5">general program and it has 16</font>

46
00:02:23,550 --> 00:02:28,020
fortifications<font color="#E5E5E5"> its verification and</font>

47
00:02:26,160 --> 00:02:30,209
those of you who are still trying to

48
00:02:28,020 --> 00:02:35,310
fill<font color="#E5E5E5"> their bingo cards it is quantum</font>

49
00:02:30,209 --> 00:02:39,090
secure as well<font color="#CCCCCC"> okay and now will scan</font>

50
00:02:35,310 --> 00:02:45,380
some other approaches there is a great

51
00:02:39,090 --> 00:02:49,370
line of very good<font color="#E5E5E5"> work done in the field</font>

52
00:02:45,380 --> 00:02:52,410
<font color="#E5E5E5">which is based on private randomness</font>

53
00:02:49,370 --> 00:02:55,650
<font color="#CCCCCC">those are designated verifier solution</font>

54
00:02:52,410 --> 00:02:59,040
or trusted<font color="#CCCCCC"> set</font><font color="#E5E5E5"> up systems they have</font>

55
00:02:55,650 --> 00:03:03,000
<font color="#E5E5E5">great advantages</font><font color="#CCCCCC"> as a really tiny proof</font>

56
00:02:59,040 --> 00:03:05,069
<font color="#E5E5E5">or arguments technically only</font><font color="#CCCCCC"> a few</font>

57
00:03:03,000 --> 00:03:08,160
hundreds of bytes in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> length of the</font>

58
00:03:05,069 --> 00:03:09,958
argument<font color="#E5E5E5"> and the verification</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very</font>

59
00:03:08,160 --> 00:03:13,079
efficient very<font color="#CCCCCC"> fast verification</font>

60
00:03:09,959 --> 00:03:16,799
concrete for if you concrete<font color="#E5E5E5"> concretely</font>

61
00:03:13,080 --> 00:03:18,630
efficient they have an obvious

62
00:03:16,799 --> 00:03:25,049
disadvantage that<font color="#CCCCCC"> there are designated</font>

63
00:03:18,630 --> 00:03:26,760
<font color="#E5E5E5">very fair system or can can be used with</font>

64
00:03:25,049 --> 00:03:31,130
a trusted<font color="#CCCCCC"> set up instead</font><font color="#E5E5E5"> of being</font>

65
00:03:26,760 --> 00:03:33,858
<font color="#E5E5E5">designated verifier another class of</font>

66
00:03:31,130 --> 00:03:37,319
systems is their non<font color="#CCCCCC"> universal systems</font>

67
00:03:33,859 --> 00:03:40,380
systems that are applicable<font color="#E5E5E5"> only for a</font>

68
00:03:37,319 --> 00:03:44,399
restricted<font color="#E5E5E5"> class of program of problem</font>

69
00:03:40,380 --> 00:03:47,430
programs those systems<font color="#CCCCCC"> have a good</font>

70
00:03:44,400 --> 00:03:50,370
<font color="#E5E5E5">advantage that they can be implemented</font>

71
00:03:47,430 --> 00:03:52,739
<font color="#E5E5E5">without any cryptographic assumptions</font>

72
00:03:50,370 --> 00:03:55,019
<font color="#CCCCCC">okay but of course the disadvantage</font><font color="#E5E5E5"> is</font>

73
00:03:52,739 --> 00:03:59,910
that they work only with<font color="#CCCCCC"> a restricted</font>

74
00:03:55,019 --> 00:04:02,970
<font color="#CCCCCC">class of programs and last there</font><font color="#E5E5E5"> is the</font>

75
00:03:59,910 --> 00:04:07,560
class of systems that have non<font color="#CCCCCC"> 16-4</font><font color="#E5E5E5"> off'</font>

76
00:04:02,970 --> 00:04:10,470
<font color="#CCCCCC">occation those systems</font><font color="#E5E5E5"> usually</font><font color="#CCCCCC"> has the</font>

77
00:04:07,560 --> 00:04:15,090
very efficient<font color="#E5E5E5"> concretely efficient</font>

78
00:04:10,470 --> 00:04:20,350
<font color="#E5E5E5">prover but the verification time is</font>

79
00:04:15,090 --> 00:04:21,220
linear to the<font color="#E5E5E5"> length of the execution so</font>

80
00:04:20,350 --> 00:04:24,340
what

81
00:04:21,220 --> 00:04:27,669
after we seen what our system is not now

82
00:04:24,340 --> 00:04:30,750
we will see what our system is our

83
00:04:27,669 --> 00:04:34,198
system is based on<font color="#CCCCCC"> a classical theory a</font>

84
00:04:30,750 --> 00:04:38,320
theory from<font color="#CCCCCC"> the late 80s</font><font color="#E5E5E5"> the theory of</font>

85
00:04:34,199 --> 00:04:42,039
PC pills we use the more advanced

86
00:04:38,320 --> 00:04:46,360
research<font color="#E5E5E5"> both in Assam talking recent</font>

87
00:04:42,039 --> 00:04:50,520
asymptotic improvement<font color="#E5E5E5"> and more concrete</font>

88
00:04:46,360 --> 00:04:54,880
improvements<font color="#CCCCCC"> from theoretical papers and</font>

89
00:04:50,520 --> 00:04:57,789
<font color="#CCCCCC">I would like</font><font color="#E5E5E5"> to first show you what are</font>

90
00:04:54,880 --> 00:05:01,449
our cryptographic assumptions an

91
00:04:57,789 --> 00:05:04,449
important part of all the systems in

92
00:05:01,449 --> 00:05:07,810
<font color="#CCCCCC">this field</font><font color="#E5E5E5"> so first of all our internal</font>

93
00:05:04,449 --> 00:05:10,389
<font color="#E5E5E5">protocol is in the IOP model</font><font color="#CCCCCC"> interactive</font>

94
00:05:07,810 --> 00:05:14,680
<font color="#CCCCCC">oracle proof model</font><font color="#E5E5E5"> it's a model similar</font>

95
00:05:10,389 --> 00:05:18,300
to<font color="#CCCCCC"> pcp</font><font color="#E5E5E5"> but in the</font><font color="#CCCCCC"> PCP</font><font color="#E5E5E5"> the prover</font>

96
00:05:14,680 --> 00:05:22,090
generates one big proof and goes away

97
00:05:18,300 --> 00:05:23,710
<font color="#E5E5E5">and then the very far is it queries a</font>

98
00:05:22,090 --> 00:05:26,020
<font color="#E5E5E5">small fraction of information from this</font>

99
00:05:23,710 --> 00:05:28,810
proof in the interpreter<font color="#CCCCCC"> interactive</font>

100
00:05:26,020 --> 00:05:32,799
<font color="#CCCCCC">Oracle proof model the prover in</font><font color="#E5E5E5"> the</font>

101
00:05:28,810 --> 00:05:37,330
very far can interact<font color="#E5E5E5"> and the prover can</font>

102
00:05:32,800 --> 00:05:39,789
send<font color="#E5E5E5"> many many such big proof as</font>

103
00:05:37,330 --> 00:05:43,030
response to<font color="#CCCCCC"> verifiers</font>

104
00:05:39,789 --> 00:05:47,380
query queries we will see a bit later<font color="#CCCCCC"> in</font>

105
00:05:43,030 --> 00:05:50,500
this lecture how this model helps<font color="#CCCCCC"> us to</font>

106
00:05:47,380 --> 00:05:53,310
<font color="#CCCCCC">achieve more efficient systems so in</font>

107
00:05:50,500 --> 00:05:56,289
this model<font color="#E5E5E5"> our</font><font color="#CCCCCC"> system is</font><font color="#E5E5E5"> probably sound</font>

108
00:05:53,310 --> 00:05:58,419
<font color="#E5E5E5">no need in any assumptions but</font>

109
00:05:56,289 --> 00:06:00,820
unfortunately this model is not

110
00:05:58,419 --> 00:06:04,180
realistic<font color="#E5E5E5"> because the verifier can't</font>

111
00:06:00,820 --> 00:06:07,599
really receive proofs that are bigger

112
00:06:04,180 --> 00:06:11,820
than<font color="#E5E5E5"> the complexity that</font><font color="#CCCCCC"> it can run its</font>

113
00:06:07,599 --> 00:06:14,289
<font color="#E5E5E5">time</font><font color="#CCCCCC"> complexity so we compile it to</font>

114
00:06:11,820 --> 00:06:18,009
argument systems which are realistic

115
00:06:14,289 --> 00:06:21,130
<font color="#CCCCCC">systems and for that we use</font><font color="#E5E5E5"> the random</font>

116
00:06:18,009 --> 00:06:24,150
Oracle model<font color="#E5E5E5"> or if we want</font><font color="#CCCCCC"> to compile it</font>

117
00:06:21,130 --> 00:06:27,490
to a non interactive system we use the

118
00:06:24,150 --> 00:06:28,659
<font color="#CCCCCC">futuristic eventually when when we want</font>

119
00:06:27,490 --> 00:06:32,550
to implement

120
00:06:28,660 --> 00:06:35,410
the system as we did we treat

121
00:06:32,550 --> 00:06:38,230
cryptographic hash functions<font color="#E5E5E5"> as the</font>

122
00:06:35,410 --> 00:06:43,840
random<font color="#CCCCCC"> Oracle</font><font color="#E5E5E5"> specifically in our system</font>

123
00:06:38,230 --> 00:06:45,640
we use the sha-256 hash function<font color="#CCCCCC"> ok the</font>

124
00:06:43,840 --> 00:06:48,239
protocol overview the protocol overview

125
00:06:45,640 --> 00:06:51,159
is very similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the classical</font>

126
00:06:48,240 --> 00:06:54,550
protocol of<font color="#E5E5E5"> Killian from about</font><font color="#CCCCCC"> thirty</font>

127
00:06:51,160 --> 00:06:56,800
<font color="#E5E5E5">years ago the prover generates some big</font>

128
00:06:54,550 --> 00:06:59,260
proof<font color="#CCCCCC"> commits with it with</font><font color="#E5E5E5"> using the</font>

129
00:06:56,800 --> 00:07:01,480
<font color="#E5E5E5">merkel commitments the very Pharisee</font>

130
00:06:59,260 --> 00:07:03,159
--vs the commitment and queries some

131
00:07:01,480 --> 00:07:04,600
information from the proof the prover

132
00:07:03,160 --> 00:07:07,240
reveals the information and the

133
00:07:04,600 --> 00:07:11,320
<font color="#E5E5E5">commitment pads and the very</font><font color="#CCCCCC"> fair checks</font>

134
00:07:07,240 --> 00:07:15,370
that everything<font color="#CCCCCC"> is okay</font><font color="#E5E5E5"> the novelty</font>

135
00:07:11,320 --> 00:07:17,530
compared to this a Killian protocol<font color="#E5E5E5"> is</font>

136
00:07:15,370 --> 00:07:19,570
<font color="#E5E5E5">that in our protocol</font><font color="#CCCCCC"> we allow</font>

137
00:07:17,530 --> 00:07:21,849
interaction<font color="#E5E5E5"> of the very far with the</font>

138
00:07:19,570 --> 00:07:25,240
prover and this is done<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to</font>

139
00:07:21,850 --> 00:07:27,670
<font color="#CCCCCC">reduce the load of the prover we will</font>

140
00:07:25,240 --> 00:07:31,210
now see<font color="#CCCCCC"> exactly where we use this</font>

141
00:07:27,670 --> 00:07:34,990
interaction<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this interaction</font><font color="#CCCCCC"> is the</font>

142
00:07:31,210 --> 00:07:37,780
used for the<font color="#E5E5E5"> low degree testing which is</font>

143
00:07:34,990 --> 00:07:40,540
an important<font color="#E5E5E5"> component in our system I</font>

144
00:07:37,780 --> 00:07:43,659
will give now an informal definition of

145
00:07:40,540 --> 00:07:45,400
a low degree testing so in a low degree

146
00:07:43,660 --> 00:07:49,210
testing a very fair looks and some

147
00:07:45,400 --> 00:07:51,700
evaluation of a polynomial<font color="#CCCCCC"> and every</font>

148
00:07:49,210 --> 00:07:54,400
normal<font color="#E5E5E5"> human being</font><font color="#CCCCCC"> the very</font><font color="#E5E5E5"> fair wonders</font>

149
00:07:51,700 --> 00:08:00,010
whether<font color="#E5E5E5"> it's the grid bounded by some</font>

150
00:07:54,400 --> 00:08:02,280
<font color="#CCCCCC">two to the</font><font color="#E5E5E5"> N value unfortunately the</font>

151
00:08:00,010 --> 00:08:05,349
very first complexity is too low<font color="#E5E5E5"> to</font>

152
00:08:02,280 --> 00:08:10,419
<font color="#E5E5E5">verify</font><font color="#CCCCCC"> Ted deterministically okay it's</font>

153
00:08:05,350 --> 00:08:14,290
polynomial<font color="#E5E5E5"> in n then</font><font color="#CCCCCC"> prover appears and</font>

154
00:08:10,420 --> 00:08:17,080
tells her<font color="#CCCCCC"> of</font><font color="#E5E5E5"> course this polynomial is</font>

155
00:08:14,290 --> 00:08:19,810
<font color="#E5E5E5">low degree can't you see that the very</font>

156
00:08:17,080 --> 00:08:23,620
<font color="#CCCCCC">firm tells him</font><font color="#E5E5E5"> no I don't and I</font><font color="#CCCCCC"> don't</font>

157
00:08:19,810 --> 00:08:25,060
know you why would I trust you so the

158
00:08:23,620 --> 00:08:27,280
prover tells her<font color="#CCCCCC"> okay</font>

159
00:08:25,060 --> 00:08:31,270
don't trust me<font color="#E5E5E5"> verify and</font><font color="#CCCCCC"> provides her a</font>

160
00:08:27,280 --> 00:08:34,419
big proof that the very<font color="#E5E5E5"> first big proof</font>

161
00:08:31,270 --> 00:08:38,348
which<font color="#CCCCCC"> is classically</font><font color="#E5E5E5"> called a PCP of</font>

162
00:08:34,419 --> 00:08:40,059
proximity<font color="#CCCCCC"> okay so this</font><font color="#E5E5E5"> is a very</font>

163
00:08:38,349 --> 00:08:42,550
informal<font color="#E5E5E5"> definition of low degree</font>

164
00:08:40,059 --> 00:08:47,439
testing

165
00:08:42,549 --> 00:08:53,800
<font color="#E5E5E5">okay we use the</font><font color="#CCCCCC"> low degree test of</font>

166
00:08:47,440 --> 00:08:53,800
elements a stone and<font color="#CCCCCC"> Medusa Don em</font><font color="#E5E5E5"> and</font>

167
00:08:54,430 --> 00:09:02,839
we are the only known implementation

168
00:08:57,769 --> 00:09:06,949
that really implements<font color="#CCCCCC"> lo the great 1600</font>

169
00:09:02,839 --> 00:09:08,449
degree testing and even<font color="#E5E5E5"> more we're the</font>

170
00:09:06,949 --> 00:09:10,699
only implementation and<font color="#E5E5E5"> all that</font>

171
00:09:08,449 --> 00:09:13,160
implements a proof composition the low

172
00:09:10,699 --> 00:09:17,060
degree<font color="#E5E5E5"> testing of</font><font color="#CCCCCC"> mensis on</font><font color="#E5E5E5"> Sudan is the</font>

173
00:09:13,160 --> 00:09:20,259
special<font color="#E5E5E5"> case of proof composition in</font>

174
00:09:17,060 --> 00:09:23,388
contrast the very common systems that

175
00:09:20,259 --> 00:09:27,680
use the trusted<font color="#CCCCCC"> set up or very furry</font>

176
00:09:23,389 --> 00:09:29,750
designated don't<font color="#CCCCCC"> verify an evaluation</font><font color="#E5E5E5"> is</font>

177
00:09:27,680 --> 00:09:34,339
low degree<font color="#E5E5E5"> the use cryptography to</font>

178
00:09:29,750 --> 00:09:39,170
<font color="#E5E5E5">enforce the prover to to write only</font><font color="#CCCCCC"> low</font>

179
00:09:34,339 --> 00:09:42,639
<font color="#CCCCCC">degree polynomials</font><font color="#E5E5E5"> okay so this is a big</font>

180
00:09:39,170 --> 00:09:46,630
difference<font color="#E5E5E5"> between the two</font><font color="#CCCCCC"> approaches</font>

181
00:09:42,639 --> 00:09:51,459
okay so<font color="#E5E5E5"> we'll scan now the protocol of</font>

182
00:09:46,630 --> 00:09:55,189
<font color="#CCCCCC">venison and Sudan in this protocol you</font>

183
00:09:51,459 --> 00:09:57,680
they use a<font color="#E5E5E5"> mapping of univariate</font>

184
00:09:55,189 --> 00:10:01,579
polynomials<font color="#CCCCCC"> into bivariate polynomials</font>

185
00:09:57,680 --> 00:10:06,290
<font color="#CCCCCC">that reduces the degree technically the</font>

186
00:10:01,579 --> 00:10:08,810
degree of<font color="#E5E5E5"> they if the degree of the</font>

187
00:10:06,290 --> 00:10:11,449
bivariate polynomial both in its rows

188
00:10:08,810 --> 00:10:15,079
and it columns<font color="#E5E5E5"> is bounded by square root</font>

189
00:10:11,449 --> 00:10:18,050
of<font color="#CCCCCC"> D if and only if the degree of</font><font color="#E5E5E5"> the</font>

190
00:10:15,079 --> 00:10:24,399
original universe polynomial is bounded

191
00:10:18,050 --> 00:10:29,420
by D now they<font color="#E5E5E5"> continue to use this</font>

192
00:10:24,399 --> 00:10:34,480
mapping recursively<font color="#E5E5E5"> on every row</font><font color="#CCCCCC"> and</font>

193
00:10:29,420 --> 00:10:38,569
column of this<font color="#CCCCCC"> bivariate polynomial</font>

194
00:10:34,480 --> 00:10:41,600
until they get<font color="#CCCCCC"> to</font><font color="#E5E5E5"> evaluations with</font>

195
00:10:38,569 --> 00:10:44,979
degree lower small enough for<font color="#CCCCCC"> the very</font>

196
00:10:41,600 --> 00:10:48,680
fertile just verify deterministically

197
00:10:44,980 --> 00:10:52,519
this construction<font color="#E5E5E5"> results in something</font>

198
00:10:48,680 --> 00:10:54,969
that<font color="#E5E5E5"> you can think of as a tree of of</font>

199
00:10:52,519 --> 00:10:54,970
proofs

200
00:10:55,619 --> 00:11:04,629
what the very<font color="#E5E5E5"> first does is a drought</font>

201
00:11:00,220 --> 00:11:07,899
randomly some of the leaf of this tree

202
00:11:04,629 --> 00:11:09,970
<font color="#CCCCCC">of proof and remember the</font><font color="#E5E5E5"> leaves are of</font>

203
00:11:07,899 --> 00:11:13,920
<font color="#E5E5E5">very low degree low enough for</font><font color="#CCCCCC"> the very</font>

204
00:11:09,970 --> 00:11:16,389
first test deterministically and

205
00:11:13,920 --> 00:11:20,040
verifies don't<font color="#CCCCCC"> flip deterministically</font>

206
00:11:16,389 --> 00:11:22,959
and verifies<font color="#E5E5E5"> locally the consistency of</font>

207
00:11:20,040 --> 00:11:26,738
those leaves<font color="#CCCCCC"> to their parents</font><font color="#E5E5E5"> and</font>

208
00:11:22,959 --> 00:11:30,868
recursively<font color="#CCCCCC"> up</font><font color="#E5E5E5"> until the very forget</font>

209
00:11:26,739 --> 00:11:34,569
back to the root of the tree so this is

210
00:11:30,869 --> 00:11:38,290
basically the idea<font color="#CCCCCC"> behind</font><font color="#E5E5E5"> the test of</font>

211
00:11:34,569 --> 00:11:43,089
<font color="#CCCCCC">menses Anand Sidhant an</font><font color="#E5E5E5"> observation is</font>

212
00:11:38,290 --> 00:11:46,449
that<font color="#E5E5E5"> most of the sub proofs industry are</font>

213
00:11:43,089 --> 00:11:49,179
never accessed by the verifier but in

214
00:11:46,449 --> 00:11:51,819
the<font color="#E5E5E5"> pcp model because the prover does</font>

215
00:11:49,179 --> 00:11:55,720
not know in<font color="#CCCCCC"> advance</font><font color="#E5E5E5"> what would be the</font>

216
00:11:51,819 --> 00:11:59,939
queries of the verifier the prover must

217
00:11:55,720 --> 00:12:04,059
generate the full tree of those proofs

218
00:11:59,939 --> 00:12:06,819
<font color="#E5E5E5">what results in proof size of at least</font>

219
00:12:04,059 --> 00:12:11,469
<font color="#CCCCCC">two to the N times n which of course</font>

220
00:12:06,819 --> 00:12:14,199
<font color="#E5E5E5">bound the complexity of the prover as</font>

221
00:12:11,470 --> 00:12:19,179
well and the complexity<font color="#E5E5E5"> of the prover is</font>

222
00:12:14,199 --> 00:12:24,669
<font color="#E5E5E5">at least</font><font color="#CCCCCC"> two to the n times and although</font>

223
00:12:19,179 --> 00:12:27,699
this<font color="#E5E5E5"> is a quasi linear in the degree it</font>

224
00:12:24,669 --> 00:12:34,239
is<font color="#E5E5E5"> still too</font><font color="#CCCCCC"> expensive</font><font color="#E5E5E5"> for practical</font>

225
00:12:27,699 --> 00:12:38,878
implementations in Si<font color="#E5E5E5"> we use the using</font>

226
00:12:34,239 --> 00:12:42,519
interactions<font color="#E5E5E5"> to solve this problem</font><font color="#CCCCCC"> and</font>

227
00:12:38,879 --> 00:12:45,910
<font color="#CCCCCC">what</font><font color="#E5E5E5"> happens inside is that</font><font color="#CCCCCC"> every</font><font color="#E5E5E5"> the</font>

228
00:12:42,519 --> 00:12:50,619
tree is constructed layer after layer in

229
00:12:45,910 --> 00:12:53,529
every layer that that the prover is

230
00:12:50,619 --> 00:12:57,610
<font color="#E5E5E5">about to construct the prover asks the</font>

231
00:12:53,529 --> 00:12:59,589
verifier what are the sub<font color="#CCCCCC"> proofs</font><font color="#E5E5E5"> the</font>

232
00:12:57,610 --> 00:13:02,679
very<font color="#E5E5E5"> firm will</font><font color="#CCCCCC"> be interested to</font><font color="#E5E5E5"> be in</font>

233
00:12:59,589 --> 00:13:05,230
<font color="#E5E5E5">that layer and the constructs only the</font>

234
00:13:02,679 --> 00:13:05,870
sub proof that<font color="#CCCCCC"> they</font><font color="#E5E5E5"> very fair would they</font>

235
00:13:05,230 --> 00:13:11,630
really

236
00:13:05,870 --> 00:13:17,000
access<font color="#E5E5E5"> okay because eventually the tests</font>

237
00:13:11,630 --> 00:13:19,160
are local in the<font color="#CCCCCC"> Leafs and</font><font color="#E5E5E5"> and they</font>

238
00:13:17,000 --> 00:13:23,690
require only<font color="#CCCCCC"> to test the consistency to</font>

239
00:13:19,160 --> 00:13:26,990
<font color="#CCCCCC">the route</font><font color="#E5E5E5"> this this kind of construction</font>

240
00:13:23,690 --> 00:13:29,750
does not preserve the soundness of<font color="#CCCCCC"> the</font>

241
00:13:26,990 --> 00:13:32,600
system<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> route the path to the</font>

242
00:13:29,750 --> 00:13:34,460
<font color="#CCCCCC">route is constructed prior to the</font>

243
00:13:32,600 --> 00:13:38,930
<font color="#E5E5E5">question whether the next</font><font color="#CCCCCC"> sub</font><font color="#E5E5E5"> proof</font>

244
00:13:34,460 --> 00:13:44,570
should<font color="#E5E5E5"> be constructed or not okay and</font>

245
00:13:38,930 --> 00:13:49,910
this results in<font color="#CCCCCC"> a much shorter proof of</font>

246
00:13:44,570 --> 00:13:55,760
length<font color="#E5E5E5"> two to the N a formal description</font>

247
00:13:49,910 --> 00:13:57,680
<font color="#CCCCCC">of this method generalized to proof</font>

248
00:13:55,760 --> 00:13:59,870
composite<font color="#E5E5E5"> generalize to</font><font color="#CCCCCC"> the proof</font>

249
00:13:57,680 --> 00:14:03,199
composition technique can be<font color="#E5E5E5"> found in a</font>

250
00:13:59,870 --> 00:14:04,310
<font color="#E5E5E5">paper of me together with elements a son</font>

251
00:14:03,200 --> 00:14:06,950
<font color="#E5E5E5">Alessandro</font><font color="#CCCCCC"> Piazza</font>

252
00:14:04,310 --> 00:14:11,000
<font color="#CCCCCC">Arielle Gabi's on an exponent</font><font color="#E5E5E5"> and will</font>

253
00:14:06,950 --> 00:14:15,410
be presented in this cycle<font color="#CCCCCC"> I cut this</font>

254
00:14:11,000 --> 00:14:17,690
<font color="#CCCCCC">year okay</font><font color="#E5E5E5"> we will move to some concrete</font>

255
00:14:15,410 --> 00:14:24,969
measurements in order<font color="#E5E5E5"> to measure our</font>

256
00:14:17,690 --> 00:14:28,100
system we we construct proof to two

257
00:14:24,970 --> 00:14:32,630
benchmarks<font color="#CCCCCC"> two programs both</font><font color="#E5E5E5"> programs</font>

258
00:14:28,100 --> 00:14:35,080
are solving the cuenta version of the

259
00:14:32,630 --> 00:14:35,080
subset-sum problem

260
00:14:35,440 --> 00:14:42,500
technically the prover wants to prove to

261
00:14:38,990 --> 00:14:44,830
<font color="#E5E5E5">the verifier that some set of numbers</font>

262
00:14:42,500 --> 00:14:48,320
<font color="#CCCCCC">integer</font><font color="#E5E5E5"> that is known to both of them</font>

263
00:14:44,830 --> 00:14:52,459
<font color="#E5E5E5">know a non-trivial subset of this set</font>

264
00:14:48,320 --> 00:14:54,080
<font color="#CCCCCC">sums to zero and we use the two</font>

265
00:14:52,459 --> 00:14:57,109
implementations<font color="#E5E5E5"> a p-- limitation are</font>

266
00:14:54,080 --> 00:15:00,650
writen in<font color="#E5E5E5"> a tiny ROM assembly which is</font>

267
00:14:57,110 --> 00:15:02,959
the later reduced<font color="#CCCCCC"> tour proof system so</font>

268
00:15:00,650 --> 00:15:05,000
one<font color="#CCCCCC"> implementation is the trivial the</font>

269
00:15:02,959 --> 00:15:08,689
exhaustive implementation the prover

270
00:15:05,000 --> 00:15:11,000
test all possible<font color="#E5E5E5"> subsets and the time</font>

271
00:15:08,690 --> 00:15:13,730
complexity of this<font color="#CCCCCC"> implementation is two</font>

272
00:15:11,000 --> 00:15:16,610
to<font color="#E5E5E5"> the end but this implementation use</font>

273
00:15:13,730 --> 00:15:18,410
the no<font color="#E5E5E5"> Ram okay which is an advanced</font>

274
00:15:16,610 --> 00:15:21,459
advantage for our<font color="#CCCCCC"> see</font>

275
00:15:18,410 --> 00:15:25,579
stem<font color="#E5E5E5"> because in our system using</font><font color="#CCCCCC"> Graham</font>

276
00:15:21,459 --> 00:15:27,859
introduces an overhead<font color="#E5E5E5"> it's independent</font>

277
00:15:25,579 --> 00:15:32,449
of how much RAM is used but<font color="#E5E5E5"> the fact</font>

278
00:15:27,860 --> 00:15:35,810
that the<font color="#E5E5E5"> system use</font><font color="#CCCCCC"> Ram requires blow-up</font>

279
00:15:32,449 --> 00:15:38,839
in the proof size with<font color="#CCCCCC"> the</font>

280
00:15:35,810 --> 00:15:40,449
multiplicative<font color="#E5E5E5"> factor of</font><font color="#CCCCCC"> two log the</font>

281
00:15:38,839 --> 00:15:44,300
length of the execution

282
00:15:40,449 --> 00:15:49,069
so the second bench<font color="#CCCCCC"> benchmark does use</font>

283
00:15:44,300 --> 00:15:52,790
<font color="#CCCCCC">Ram and this is a solution that is based</font>

284
00:15:49,069 --> 00:15:55,189
<font color="#E5E5E5">on an</font><font color="#CCCCCC"> algorithm that</font><font color="#E5E5E5"> uses a sorting so</font>

285
00:15:52,790 --> 00:15:59,810
the time complexity of this solution is

286
00:15:55,189 --> 00:16:05,329
<font color="#E5E5E5">lower in the two to the half of n but it</font>

287
00:15:59,810 --> 00:16:09,739
uses<font color="#E5E5E5"> the spare room as well</font><font color="#CCCCCC"> okay so here</font>

288
00:16:05,329 --> 00:16:14,870
we<font color="#CCCCCC"> have some graphs that later we can</font>

289
00:16:09,740 --> 00:16:19,550
<font color="#E5E5E5">dive into that by request but what we</font>

290
00:16:14,870 --> 00:16:23,120
can learn from<font color="#E5E5E5"> this</font><font color="#CCCCCC"> plots is that those</font>

291
00:16:19,550 --> 00:16:24,949
are the plots that are<font color="#E5E5E5"> relevant to the</font>

292
00:16:23,120 --> 00:16:28,009
prover daughter the plots that are

293
00:16:24,949 --> 00:16:31,670
relevant<font color="#E5E5E5"> to the verifier and we can see</font>

294
00:16:28,009 --> 00:16:35,899
<font color="#E5E5E5">that the</font><font color="#CCCCCC"> plots</font><font color="#E5E5E5"> this is the time and the</font>

295
00:16:31,670 --> 00:16:38,380
proof sides are as expected<font color="#E5E5E5"> by theory</font>

296
00:16:35,899 --> 00:16:43,759
<font color="#E5E5E5">the asymptotic behavior is as expected</font>

297
00:16:38,380 --> 00:16:51,410
and the<font color="#CCCCCC"> verifier the behavior is as</font>

298
00:16:43,759 --> 00:16:52,939
expected as well concretely when we not

299
00:16:51,410 --> 00:16:58,219
as importantly what concretely when we

300
00:16:52,939 --> 00:17:01,579
look<font color="#E5E5E5"> at the numbers and we compare the</font>

301
00:16:58,220 --> 00:17:03,589
time that it takes<font color="#E5E5E5"> to prove a program</font>

302
00:17:01,579 --> 00:17:06,938
compared<font color="#E5E5E5"> to the time</font><font color="#CCCCCC"> that it takes just</font>

303
00:17:03,589 --> 00:17:10,449
to execute the program on the<font color="#CCCCCC"> computer</font>

304
00:17:06,939 --> 00:17:11,659
<font color="#E5E5E5">we get a slowdown of about a billion</font>

305
00:17:10,449 --> 00:17:15,110
<font color="#CCCCCC">okay</font>

306
00:17:11,659 --> 00:17:17,390
maybe it doesn't<font color="#E5E5E5"> sound so good to you</font>

307
00:17:15,109 --> 00:17:19,520
but it's pretty<font color="#CCCCCC"> good because it means</font>

308
00:17:17,390 --> 00:17:27,380
<font color="#CCCCCC">that we have a lot of more research</font><font color="#E5E5E5"> to</font>

309
00:17:19,520 --> 00:17:30,950
<font color="#E5E5E5">do in this field</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> and for the verifier</font>

310
00:17:27,380 --> 00:17:33,050
we have a similar<font color="#E5E5E5"> image</font>

311
00:17:30,950 --> 00:17:34,660
we expect<font color="#E5E5E5"> that our very fair is</font>

312
00:17:33,050 --> 00:17:37,820
asymptotically<font color="#E5E5E5"> succinct</font>

313
00:17:34,660 --> 00:17:41,900
and we expect the verification time to

314
00:17:37,820 --> 00:17:46,460
be much lower<font color="#E5E5E5"> than the execution time of</font>

315
00:17:41,900 --> 00:17:51,950
the program itself<font color="#E5E5E5"> but for those</font>

316
00:17:46,460 --> 00:17:54,440
executions<font color="#E5E5E5"> we see that we save time by</font>

317
00:17:51,950 --> 00:18:00,710
verification only for very<font color="#CCCCCC"> very long</font>

318
00:17:54,440 --> 00:18:03,280
executions in this plot we compare our

319
00:18:00,710 --> 00:18:08,950
solution<font color="#E5E5E5"> to some different to some other</font>

320
00:18:03,280 --> 00:18:08,950
approaches<font color="#CCCCCC"> that solve a similar problem</font>

321
00:18:09,670 --> 00:18:21,470
<font color="#E5E5E5">so the yellow plots are our system the</font>

322
00:18:16,010 --> 00:18:27,440
blue the blue bars<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> system that</font><font color="#CCCCCC"> has</font>

323
00:18:21,470 --> 00:18:31,460
<font color="#CCCCCC">a non xvi setup phase the red bars</font><font color="#E5E5E5"> is a</font>

324
00:18:27,440 --> 00:18:37,400
system<font color="#CCCCCC"> that</font><font color="#E5E5E5"> has a</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> phase but</font><font color="#CCCCCC"> it is</font>

325
00:18:31,460 --> 00:18:42,130
succinct<font color="#E5E5E5"> and the violet bars the system</font>

326
00:18:37,400 --> 00:18:44,870
which<font color="#E5E5E5"> has 16 computation</font><font color="#CCCCCC"> 16</font>

327
00:18:42,130 --> 00:18:48,200
<font color="#E5E5E5">communication complexity but</font><font color="#CCCCCC"> non sixteen</font>

328
00:18:44,870 --> 00:18:50,840
terrific ation<font color="#CCCCCC"> okay in the blue and the</font>

329
00:18:48,200 --> 00:18:53,360
<font color="#CCCCCC">red bars that they require a setup</font><font color="#E5E5E5"> phase</font>

330
00:18:50,840 --> 00:18:56,020
<font color="#E5E5E5">the more transparent part is the</font>

331
00:18:53,360 --> 00:19:02,719
overhead introduced by the<font color="#E5E5E5"> setup phase</font>

332
00:18:56,020 --> 00:19:03,320
so those bars show the the proper<font color="#E5E5E5"> time</font>

333
00:19:02,720 --> 00:19:05,810
<font color="#E5E5E5">in minutes</font>

334
00:19:03,320 --> 00:19:07,460
<font color="#E5E5E5">those bars show the very first time and</font>

335
00:19:05,810 --> 00:19:13,700
those show the communication complexity

336
00:19:07,460 --> 00:19:16,100
<font color="#E5E5E5">and notice the</font><font color="#CCCCCC"> y-axis is</font><font color="#E5E5E5"> a log</font><font color="#CCCCCC"> scale we</font>

337
00:19:13,700 --> 00:19:20,170
<font color="#E5E5E5">can summarize what we see in these</font>

338
00:19:16,100 --> 00:19:23,330
births by saying that our<font color="#CCCCCC"> proven</font>

339
00:19:20,170 --> 00:19:26,210
<font color="#E5E5E5">performance</font><font color="#CCCCCC"> is competitive to other</font>

340
00:19:23,330 --> 00:19:30,710
systems it's not very far the

341
00:19:26,210 --> 00:19:34,610
<font color="#E5E5E5">verification is succeed but slower than</font>

342
00:19:30,710 --> 00:19:38,840
other<font color="#CCCCCC"> sixteen trophic ation systems and</font>

343
00:19:34,610 --> 00:19:42,029
the communication<font color="#E5E5E5"> is 16th as well but it</font>

344
00:19:38,840 --> 00:19:44,620
<font color="#E5E5E5">is very high compared to other</font>

345
00:19:42,029 --> 00:19:47,080
systems with<font color="#CCCCCC"> 1/16 communication</font>

346
00:19:44,620 --> 00:19:49,629
complexity<font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to use this</font>

347
00:19:47,080 --> 00:19:52,960
opportunity<font color="#E5E5E5"> to</font><font color="#CCCCCC"> introduce you</font><font color="#E5E5E5"> to a</font>

348
00:19:49,630 --> 00:19:55,600
follow-up<font color="#E5E5E5"> work which is currently in</font>

349
00:19:52,960 --> 00:19:58,870
progress<font color="#CCCCCC"> working progress</font><font color="#E5E5E5"> together</font><font color="#CCCCCC"> with</font>

350
00:19:55,600 --> 00:19:59,428
elements a sonido bent of ending on<font color="#CCCCCC"> holy</font>

351
00:19:58,870 --> 00:20:04,268
<font color="#CCCCCC">Sh</font>

352
00:19:59,429 --> 00:20:06,820
this work<font color="#E5E5E5"> uses the same approaches</font><font color="#CCCCCC"> I the</font>

353
00:20:04,269 --> 00:20:09,640
same a classical constructions<font color="#E5E5E5"> but with</font>

354
00:20:06,820 --> 00:20:13,590
new ideas<font color="#E5E5E5"> it includes zero knowledge</font>

355
00:20:09,640 --> 00:20:18,970
<font color="#CCCCCC">sight does</font><font color="#E5E5E5"> not include zero</font><font color="#CCCCCC"> knowledge</font>

356
00:20:13,590 --> 00:20:22,330
the<font color="#E5E5E5"> it introduced new theory and we</font>

357
00:20:18,970 --> 00:20:24,820
reduce<font color="#E5E5E5"> the prover overhead drastically</font>

358
00:20:22,330 --> 00:20:29,460
to about a million from a billion<font color="#CCCCCC"> it's a</font>

359
00:20:24,820 --> 00:20:33,250
factor of<font color="#CCCCCC"> a thousand and for this system</font>

360
00:20:29,460 --> 00:20:37,269
practical<font color="#E5E5E5"> set</font><font color="#CCCCCC"> Cygnus is enriched ok we</font>

361
00:20:33,250 --> 00:20:40,450
are<font color="#E5E5E5"> much closer to to getting to the</font>

362
00:20:37,269 --> 00:20:42,789
<font color="#CCCCCC">failure verification is more efficient</font>

363
00:20:40,450 --> 00:20:45,340
than just executing the<font color="#CCCCCC"> program you can</font>

364
00:20:42,789 --> 00:20:49,080
<font color="#CCCCCC">see that the proving time here is the</font>

365
00:20:45,340 --> 00:20:53,139
<font color="#E5E5E5">lowest among</font><font color="#CCCCCC"> the other systems the</font>

366
00:20:49,080 --> 00:20:56,110
<font color="#CCCCCC">verification</font><font color="#E5E5E5"> is not as low as</font><font color="#CCCCCC"> the system</font>

367
00:20:53,139 --> 00:20:58,689
based on private randomness<font color="#E5E5E5"> but it's</font>

368
00:20:56,110 --> 00:21:02,100
<font color="#E5E5E5">really competitive it's really close and</font>

369
00:20:58,690 --> 00:21:05,080
our<font color="#CCCCCC"> argument sides are</font><font color="#E5E5E5"> proof size is</font>

370
00:21:02,100 --> 00:21:07,870
much lower than<font color="#E5E5E5"> what was inside</font>

371
00:21:05,080 --> 00:21:11,439
<font color="#CCCCCC">ok it went to hundreds</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> kilobytes</font>

372
00:21:07,870 --> 00:21:14,918
<font color="#E5E5E5">instead of tens of megabytes which is</font>

373
00:21:11,440 --> 00:21:17,799
about a thousand<font color="#E5E5E5"> times longer than the</font>

374
00:21:14,919 --> 00:21:22,990
argument<font color="#E5E5E5"> size in the systems</font><font color="#CCCCCC"> that are</font>

375
00:21:17,799 --> 00:21:26,559
based on private randomness I would like

376
00:21:22,990 --> 00:21:28,419
to knowledge as well<font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to</font>

377
00:21:26,559 --> 00:21:28,870
thank the programmers that<font color="#E5E5E5"> worked with</font>

378
00:21:28,419 --> 00:21:32,409
us

379
00:21:28,870 --> 00:21:36,090
I<font color="#CCCCCC"> had about a Leo Greenblatt</font><font color="#E5E5E5"> I shall</font>

380
00:21:32,409 --> 00:21:41,110
feel guilty not<font color="#E5E5E5"> and they are known yogev</font>

381
00:21:36,090 --> 00:21:45,189
and finally our summary<font color="#E5E5E5"> I introduced</font><font color="#CCCCCC"> you</font>

382
00:21:41,110 --> 00:21:47,519
<font color="#CCCCCC">to our systems AI and we</font><font color="#E5E5E5"> have seen some</font>

383
00:21:45,190 --> 00:21:51,340
concrete measurements of the system<font color="#E5E5E5"> and</font>

384
00:21:47,519 --> 00:21:54,070
something<font color="#CCCCCC"> just about a minute</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

385
00:21:51,340 --> 00:21:55,580
lecture<font color="#E5E5E5"> the code before the lecture the</font>

386
00:21:54,070 --> 00:21:58,419
code is public<font color="#E5E5E5"> on the</font>

387
00:21:55,580 --> 00:22:02,938
<font color="#E5E5E5">link okay thank you</font>

388
00:21:58,420 --> 00:22:02,939
[Applause]

