1
00:00:00,960 --> 00:00:05,520
I'll talk about<font color="#E5E5E5"> a simpler way to analyze</font>

2
00:00:03,389 --> 00:00:06,869
<font color="#CCCCCC">predicate encryption schemes</font><font color="#E5E5E5"> this is</font>

3
00:00:05,520 --> 00:00:21,990
joint work<font color="#CCCCCC"> with melissa</font><font color="#E5E5E5"> chase from</font>

4
00:00:06,870 --> 00:00:23,490
Microsoft<font color="#E5E5E5"> Research in a predicate</font>

5
00:00:21,990 --> 00:00:25,529
encryption scheme we have<font color="#CCCCCC"> a trusted</font>

6
00:00:23,490 --> 00:00:28,409
<font color="#CCCCCC">Authority</font><font color="#E5E5E5"> that generates a master public</font>

7
00:00:25,529 --> 00:00:30,990
<font color="#E5E5E5">key</font><font color="#CCCCCC"> and a master secret</font><font color="#E5E5E5"> key the master</font>

8
00:00:28,410 --> 00:00:35,610
public<font color="#E5E5E5"> key can be used</font><font color="#CCCCCC"> by anyone</font><font color="#E5E5E5"> to</font>

9
00:00:30,990 --> 00:00:39,089
<font color="#E5E5E5">encrypt messages under</font><font color="#CCCCCC"> some value</font><font color="#E5E5E5"> X the</font>

10
00:00:35,610 --> 00:00:43,920
master secret<font color="#E5E5E5"> key is used to</font><font color="#CCCCCC"> generate</font>

11
00:00:39,090 --> 00:00:46,620
keys for some value<font color="#E5E5E5"> Y when a</font><font color="#CCCCCC"> ciphertext</font>

12
00:00:43,920 --> 00:00:48,870
<font color="#CCCCCC">and a secret key are put together into</font>

13
00:00:46,620 --> 00:00:51,419
the<font color="#E5E5E5"> decryption algorithm then we are</font>

14
00:00:48,870 --> 00:00:55,038
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> recover the message</font><font color="#CCCCCC"> if a</font><font color="#E5E5E5"> certain</font>

15
00:00:51,420 --> 00:00:57,750
predicate evaluates to true<font color="#E5E5E5"> on x and y</font>

16
00:00:55,039 --> 00:01:00,180
<font color="#CCCCCC">but if the predicate is false then we</font>

17
00:00:57,750 --> 00:01:03,780
<font color="#E5E5E5">want to hide the</font><font color="#CCCCCC"> message here we do not</font>

18
00:01:00,180 --> 00:01:05,549
<font color="#E5E5E5">care about hiding X or Y a predicate</font>

19
00:01:03,780 --> 00:01:07,770
encryption has come a<font color="#CCCCCC"> long way</font>

20
00:01:05,549 --> 00:01:10,369
starting from<font color="#E5E5E5"> identity based encryption</font>

21
00:01:07,770 --> 00:01:13,140
<font color="#E5E5E5">which corresponds to the predicate</font>

22
00:01:10,369 --> 00:01:16,350
<font color="#E5E5E5">equality all the way up to arbitrary</font>

23
00:01:13,140 --> 00:01:18,530
circuits but by linear maps remain the

24
00:01:16,350 --> 00:01:21,270
<font color="#E5E5E5">most practical way of building</font>

25
00:01:18,530 --> 00:01:25,170
<font color="#CCCCCC">predicates encryption schemes</font><font color="#E5E5E5"> if not the</font>

26
00:01:21,270 --> 00:01:26,670
most<font color="#CCCCCC"> powerful but</font><font color="#E5E5E5"> the task of</font><font color="#CCCCCC"> building a</font>

27
00:01:25,170 --> 00:01:28,619
predicate encryption scheme from

28
00:01:26,670 --> 00:01:30,600
<font color="#E5E5E5">bilinear</font><font color="#CCCCCC"> maps is not an easy one</font>

29
00:01:28,619 --> 00:01:32,460
there are several<font color="#E5E5E5"> choices for</font><font color="#CCCCCC"> the map</font>

30
00:01:30,600 --> 00:01:34,470
<font color="#E5E5E5">there are different types of assumptions</font>

31
00:01:32,460 --> 00:01:38,399
<font color="#CCCCCC">and there are many different</font><font color="#E5E5E5"> techniques</font>

32
00:01:34,470 --> 00:01:40,110
<font color="#CCCCCC">that one needs</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> with so</font>

33
00:01:38,400 --> 00:01:43,049
the main question<font color="#E5E5E5"> we</font><font color="#CCCCCC"> ask in</font><font color="#E5E5E5"> this paper</font>

34
00:01:40,110 --> 00:01:45,000
is how can<font color="#E5E5E5"> we simplify the</font><font color="#CCCCCC"> design and</font>

35
00:01:43,049 --> 00:01:47,759
analysis<font color="#CCCCCC"> of</font><font color="#E5E5E5"> predicates encryption</font>

36
00:01:45,000 --> 00:01:50,220
schemes<font color="#E5E5E5"> can we</font><font color="#CCCCCC"> identify the key</font>

37
00:01:47,759 --> 00:01:53,810
properties that are needed<font color="#CCCCCC"> to enable the</font>

38
00:01:50,220 --> 00:01:56,460
use of<font color="#CCCCCC"> cryptography tools and techniques</font>

39
00:01:53,810 --> 00:02:00,930
this problem was<font color="#E5E5E5"> first formally studied</font>

40
00:01:56,460 --> 00:02:03,479
<font color="#E5E5E5">by V</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Atropa dong and later on by</font>

41
00:02:00,930 --> 00:02:06,930
several other papers at a high level

42
00:02:03,479 --> 00:02:10,970
these papers provide a way<font color="#E5E5E5"> to encode the</font>

43
00:02:06,930 --> 00:02:13,680
<font color="#E5E5E5">predicates</font><font color="#CCCCCC"> into some simple polynomials</font>

44
00:02:10,970 --> 00:02:15,180
<font color="#E5E5E5">then you prove a property about</font>

45
00:02:13,680 --> 00:02:17,189
these polynomials which could be either

46
00:02:15,180 --> 00:02:20,849
<font color="#E5E5E5">information-theoretic</font><font color="#CCCCCC"> or computational</font>

47
00:02:17,189 --> 00:02:24,719
<font color="#E5E5E5">as a result you get</font><font color="#CCCCCC"> a secure encoding</font>

48
00:02:20,849 --> 00:02:27,689
<font color="#E5E5E5">and then these papers provide a way to</font>

49
00:02:24,719 --> 00:02:29,909
convert any secure encoding into a

50
00:02:27,689 --> 00:02:32,280
secure encryption scheme<font color="#E5E5E5"> for the same</font>

51
00:02:29,909 --> 00:02:35,578
predicate now this is a very<font color="#CCCCCC"> useful</font>

52
00:02:32,280 --> 00:02:37,560
result<font color="#E5E5E5"> if I want to build</font><font color="#CCCCCC"> encryption</font>

53
00:02:35,579 --> 00:02:40,200
schemes<font color="#CCCCCC"> because</font><font color="#E5E5E5"> instead of doing it</font>

54
00:02:37,560 --> 00:02:42,030
<font color="#CCCCCC">directly which is a more difficult task</font>

55
00:02:40,200 --> 00:02:44,189
it requires familiarity<font color="#CCCCCC"> with</font><font color="#E5E5E5"> by linear</font>

56
00:02:42,030 --> 00:02:47,099
<font color="#CCCCCC">maps assumptions and proof techniques</font><font color="#E5E5E5"> I</font>

57
00:02:44,189 --> 00:02:52,739
can instead build<font color="#E5E5E5"> a secure encoding</font>

58
00:02:47,099 --> 00:02:55,589
which can be much<font color="#CCCCCC"> easier so this leads</font>

59
00:02:52,739 --> 00:02:57,720
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the next question</font><font color="#CCCCCC"> how easy it is to</font>

60
00:02:55,590 --> 00:03:01,609
design secure in<font color="#E5E5E5"> codings for a predicate</font>

61
00:02:57,720 --> 00:03:04,829
which<font color="#CCCCCC"> is really a</font><font color="#E5E5E5"> two-part question</font>

62
00:03:01,609 --> 00:03:06,930
does there<font color="#CCCCCC"> exist an</font><font color="#E5E5E5"> encoding for some</font>

63
00:03:04,829 --> 00:03:10,049
predicate<font color="#E5E5E5"> which satisfies the property</font>

64
00:03:06,930 --> 00:03:13,769
<font color="#E5E5E5">and how easy it is to prove</font><font color="#CCCCCC"> that</font>

65
00:03:10,049 --> 00:03:16,200
property all the<font color="#CCCCCC"> properties that we</font><font color="#E5E5E5"> know</font>

66
00:03:13,769 --> 00:03:19,799
so<font color="#CCCCCC"> far are either information</font><font color="#E5E5E5"> theoretic</font>

67
00:03:16,200 --> 00:03:22,260
<font color="#CCCCCC">or computational information theoretic</font>

68
00:03:19,799 --> 00:03:24,000
properties are very easy to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> but the</font>

69
00:03:22,260 --> 00:03:26,190
problem is that<font color="#E5E5E5"> there are many different</font>

70
00:03:24,000 --> 00:03:27,690
<font color="#E5E5E5">predicates for which we do not know of</font>

71
00:03:26,190 --> 00:03:30,150
any information information

72
00:03:27,690 --> 00:03:31,439
theoretically secure<font color="#CCCCCC"> encoding x'</font><font color="#E5E5E5"> even</font>

73
00:03:30,150 --> 00:03:34,139
though there are direct constructions

74
00:03:31,439 --> 00:03:37,138
available for them<font color="#E5E5E5"> from standard from</font>

75
00:03:34,139 --> 00:03:38,729
some assumption on by linear<font color="#E5E5E5"> maps the</font>

76
00:03:37,139 --> 00:03:41,159
computational properties can capture

77
00:03:38,729 --> 00:03:42,959
<font color="#E5E5E5">many different predicates but the</font>

78
00:03:41,159 --> 00:03:45,870
problem is they are not<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to work</font>

79
00:03:42,959 --> 00:03:47,729
with<font color="#E5E5E5"> in particular one needs to find a</font>

80
00:03:45,870 --> 00:03:51,989
suitable hardness assumption on bilinear

81
00:03:47,729 --> 00:03:54,109
maps to<font color="#CCCCCC"> make them work so the question</font>

82
00:03:51,989 --> 00:03:56,909
is can we<font color="#E5E5E5"> get the best of both worlds</font>

83
00:03:54,109 --> 00:03:59,669
<font color="#CCCCCC">can we find a property that</font><font color="#E5E5E5"> is easy to</font>

84
00:03:56,909 --> 00:04:03,810
<font color="#CCCCCC">use</font><font color="#E5E5E5"> and at the same time captures all</font>

85
00:03:59,669 --> 00:04:06,930
kinds of predicates<font color="#CCCCCC"> in this paper</font><font color="#E5E5E5"> we</font>

86
00:04:03,810 --> 00:04:09,269
<font color="#CCCCCC">propose a new</font><font color="#E5E5E5"> property for</font><font color="#CCCCCC"> encoding is</font>

87
00:04:06,930 --> 00:04:11,689
called the symbolic property<font color="#E5E5E5"> and to</font>

88
00:04:09,269 --> 00:04:14,609
prove symbolic property for an encoding

89
00:04:11,689 --> 00:04:17,279
we need to find<font color="#E5E5E5"> a mapping from the</font>

90
00:04:14,609 --> 00:04:20,478
variables in the<font color="#CCCCCC"> encoding to some</font>

91
00:04:17,279 --> 00:04:23,429
matrices<font color="#E5E5E5"> and vectors that satisfy</font>

92
00:04:20,478 --> 00:04:27,150
certain equations derived from the

93
00:04:23,430 --> 00:04:30,449
encoding<font color="#E5E5E5"> itself in particular</font>

94
00:04:27,150 --> 00:04:32,250
there is no need<font color="#CCCCCC"> to argue about any kind</font>

95
00:04:30,449 --> 00:04:34,380
of indistinguishability between some

96
00:04:32,250 --> 00:04:38,940
distributions which is usually a<font color="#CCCCCC"> subtle</font>

97
00:04:34,380 --> 00:04:41,219
task<font color="#E5E5E5"> we do</font><font color="#CCCCCC"> several cool things with this</font>

98
00:04:38,940 --> 00:04:45,750
property<font color="#CCCCCC"> most importantly we show that</font>

99
00:04:41,220 --> 00:04:47,850
for<font color="#E5E5E5"> any predicate P if there exists an</font>

100
00:04:45,750 --> 00:04:50,639
encoding<font color="#CCCCCC"> that satisfies the symbolic</font>

101
00:04:47,850 --> 00:04:53,580
property then<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can build a secure</font>

102
00:04:50,639 --> 00:04:55,770
encryption scheme for P<font color="#CCCCCC"> under a fixed q</font>

103
00:04:53,580 --> 00:04:58,440
type assumption on<font color="#CCCCCC"> Type</font><font color="#E5E5E5"> three pairings</font>

104
00:04:55,770 --> 00:05:02,130
<font color="#E5E5E5">which are the most efficient we use this</font>

105
00:04:58,440 --> 00:05:05,639
<font color="#E5E5E5">mechanism to design several encryption</font>

106
00:05:02,130 --> 00:05:08,190
schemes for<font color="#E5E5E5"> ciphertext policy and key</font>

107
00:05:05,639 --> 00:05:12,840
policy a<font color="#CCCCCC"> B with nice properties and</font><font color="#E5E5E5"> even</font>

108
00:05:08,190 --> 00:05:14,729
for regular<font color="#E5E5E5"> languages we also show</font><font color="#CCCCCC"> how</font>

109
00:05:12,840 --> 00:05:17,820
to reduce the number of<font color="#CCCCCC"> variables</font><font color="#E5E5E5"> and</font>

110
00:05:14,729 --> 00:05:20,159
polynomials<font color="#CCCCCC"> in an encoding to a constant</font>

111
00:05:17,820 --> 00:05:22,469
<font color="#E5E5E5">in a generic</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> while preserving the</font>

112
00:05:20,160 --> 00:05:26,070
symbolic property these compact

113
00:05:22,470 --> 00:05:28,139
encodings<font color="#E5E5E5"> then directly give encryption</font>

114
00:05:26,070 --> 00:05:31,800
schemes<font color="#CCCCCC"> with</font><font color="#E5E5E5"> constant size</font><font color="#CCCCCC"> ciphertext</font>

115
00:05:28,139 --> 00:05:33,990
and<font color="#E5E5E5"> keys or keys we also show</font><font color="#CCCCCC"> how to</font>

116
00:05:31,800 --> 00:05:36,660
convert<font color="#CCCCCC"> an encoding for a predicate P</font>

117
00:05:33,990 --> 00:05:38,729
into an encoding for the dual predicate

118
00:05:36,660 --> 00:05:39,960
so for example if there is an encoding

119
00:05:38,729 --> 00:05:41,969
<font color="#E5E5E5">for cpab</font>

120
00:05:39,960 --> 00:05:44,609
that satisfies the symbolic property

121
00:05:41,970 --> 00:05:46,919
then when then you can get<font color="#E5E5E5"> an encoding</font>

122
00:05:44,610 --> 00:05:48,650
for<font color="#E5E5E5"> KP a B that satisfies the symbolic</font>

123
00:05:46,919 --> 00:05:52,789
property as well

124
00:05:48,650 --> 00:05:55,169
finally we give strong evidence that<font color="#CCCCCC"> our</font>

125
00:05:52,789 --> 00:05:57,870
property is inherent to<font color="#CCCCCC"> the notion of</font>

126
00:05:55,169 --> 00:06:00,510
encoding<font color="#E5E5E5"> z' by showing</font><font color="#CCCCCC"> that if an</font>

127
00:05:57,870 --> 00:06:04,199
encoding<font color="#CCCCCC"> is not broken</font><font color="#E5E5E5"> in a trivial way</font>

128
00:06:00,510 --> 00:06:08,159
that<font color="#E5E5E5"> I'll define later the encoding</font>

129
00:06:04,199 --> 00:06:10,289
satisfy symbolic property in the rest of

130
00:06:08,160 --> 00:06:13,050
the talk<font color="#E5E5E5"> I will describe in some detail</font>

131
00:06:10,289 --> 00:06:15,840
what encoding<font color="#CCCCCC"> czar</font><font color="#E5E5E5"> what is symbolic</font>

132
00:06:13,050 --> 00:06:17,699
property and why is it<font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> I'll</font>

133
00:06:15,840 --> 00:06:19,650
also talk<font color="#E5E5E5"> about why the properties</font>

134
00:06:17,699 --> 00:06:24,240
inherent and conclude with<font color="#E5E5E5"> some open</font>

135
00:06:19,650 --> 00:06:26,370
questions<font color="#E5E5E5"> we'll use the</font><font color="#CCCCCC"> luca</font><font color="#E5E5E5"> waters</font>

136
00:06:24,240 --> 00:06:29,490
<font color="#E5E5E5">identity based</font><font color="#CCCCCC"> encryption scheme as a</font>

137
00:06:26,370 --> 00:06:32,130
running<font color="#E5E5E5"> example here cipher texts and</font>

138
00:06:29,490 --> 00:06:34,349
<font color="#E5E5E5">keys are associated with identities and</font>

139
00:06:32,130 --> 00:06:38,909
<font color="#E5E5E5">decryption works if the</font><font color="#CCCCCC"> identity is</font>

140
00:06:34,349 --> 00:06:41,280
<font color="#E5E5E5">match right note that if you are only</font>

141
00:06:38,909 --> 00:06:42,750
concerned<font color="#E5E5E5"> with identity based encrypt</font>

142
00:06:41,280 --> 00:06:45,239
we can use one of the existing

143
00:06:42,750 --> 00:06:47,610
<font color="#E5E5E5">information theoretic properties we'll</font>

144
00:06:45,240 --> 00:06:49,110
get a<font color="#E5E5E5"> very simple analysis and the</font>

145
00:06:47,610 --> 00:06:51,900
security would follow<font color="#E5E5E5"> from a standard</font>

146
00:06:49,110 --> 00:06:54,270
assumption but<font color="#E5E5E5"> symbolic property allows</font>

147
00:06:51,900 --> 00:06:55,590
you to do much more easily<font color="#E5E5E5"> something</font>

148
00:06:54,270 --> 00:07:00,750
which information<font color="#CCCCCC"> theoretic properties</font>

149
00:06:55,590 --> 00:07:03,330
cannot do so here is a somewhat

150
00:07:00,750 --> 00:07:05,040
simplified version<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Luca waters</font><font color="#E5E5E5"> IV the</font>

151
00:07:03,330 --> 00:07:07,560
exact details of<font color="#E5E5E5"> this scheme are not</font>

152
00:07:05,040 --> 00:07:11,160
important<font color="#E5E5E5"> just</font><font color="#CCCCCC"> focus</font><font color="#E5E5E5"> on the parts that</font>

153
00:07:07,560 --> 00:07:14,340
are highlighted<font color="#E5E5E5"> in red</font><font color="#CCCCCC"> in the public key</font>

154
00:07:11,160 --> 00:07:17,430
we have<font color="#CCCCCC"> u</font><font color="#E5E5E5"> H and alpha which are chosen</font>

155
00:07:14,340 --> 00:07:20,849
<font color="#CCCCCC">at random in the ciphertext we</font><font color="#E5E5E5"> have s</font>

156
00:07:17,430 --> 00:07:23,730
which is<font color="#E5E5E5"> chosen at random and ID is the</font>

157
00:07:20,850 --> 00:07:25,770
input<font color="#E5E5E5"> in the secret key we have R which</font>

158
00:07:23,730 --> 00:07:28,950
<font color="#CCCCCC">is again chosen at random and</font><font color="#E5E5E5"> ID prime</font>

159
00:07:25,770 --> 00:07:32,940
is the input<font color="#E5E5E5"> now we will rewrite</font><font color="#CCCCCC"> this</font>

160
00:07:28,950 --> 00:07:35,070
scheme in a different way because<font color="#E5E5E5"> U and</font>

161
00:07:32,940 --> 00:07:38,700
H are chosen<font color="#E5E5E5"> at random</font><font color="#CCCCCC"> I can write that</font>

162
00:07:35,070 --> 00:07:40,710
<font color="#E5E5E5">as G to the B 1 and H as G to the B 2</font>

163
00:07:38,700 --> 00:07:46,260
<font color="#E5E5E5">where</font><font color="#CCCCCC"> b1 and b2 are</font><font color="#E5E5E5"> again chosen at</font>

164
00:07:40,710 --> 00:07:47,969
random as a result the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> C one</font>

165
00:07:46,260 --> 00:07:52,500
component<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> ciphertext can be</font>

166
00:07:47,970 --> 00:07:56,760
written as G<font color="#E5E5E5"> to the ID times b1 S Plus</font>

167
00:07:52,500 --> 00:07:59,610
b2 s and the second<font color="#E5E5E5"> component of the key</font>

168
00:07:56,760 --> 00:08:04,320
<font color="#E5E5E5">can</font><font color="#CCCCCC"> be written as G to the alpha</font><font color="#E5E5E5"> plus I</font>

169
00:07:59,610 --> 00:08:07,830
D prime times<font color="#E5E5E5"> V</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> R plus B</font><font color="#CCCCCC"> 2 R now if we</font>

170
00:08:04,320 --> 00:08:10,979
pair<font color="#E5E5E5"> c1 with K 1 and C 2 with K 2 and</font>

171
00:08:07,830 --> 00:08:14,599
divide one from the other<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what</font>

172
00:08:10,979 --> 00:08:18,840
<font color="#E5E5E5">we are going to get in the exponent</font><font color="#CCCCCC"> and</font>

173
00:08:14,600 --> 00:08:21,390
if I D is equal to<font color="#CCCCCC"> I D</font><font color="#E5E5E5"> prime then the</font>

174
00:08:18,840 --> 00:08:26,099
second term disappears<font color="#E5E5E5"> and you are left</font>

175
00:08:21,390 --> 00:08:30,599
<font color="#E5E5E5">with alpha times s only now we can use</font>

176
00:08:26,100 --> 00:08:33,270
<font color="#CCCCCC">this alpha s to remove the the blinding</font>

177
00:08:30,600 --> 00:08:37,740
factor in the first<font color="#CCCCCC"> component of</font><font color="#E5E5E5"> the</font>

178
00:08:33,270 --> 00:08:40,130
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> and recover the message so we</font>

179
00:08:37,740 --> 00:08:42,479
can extract out<font color="#CCCCCC"> the main components of</font>

180
00:08:40,130 --> 00:08:44,820
<font color="#E5E5E5">the idea of the identity based</font>

181
00:08:42,479 --> 00:08:49,620
<font color="#E5E5E5">encryption scheme into an encoding</font>

182
00:08:44,820 --> 00:08:52,610
scheme this<font color="#E5E5E5"> encoding scheme has five</font>

183
00:08:49,620 --> 00:08:54,720
variables the<font color="#CCCCCC"> first two variables</font><font color="#E5E5E5"> are</font>

184
00:08:52,610 --> 00:08:57,899
common variables

185
00:08:54,720 --> 00:08:59,639
this the<font color="#E5E5E5"> variable ice is part of the</font>

186
00:08:57,899 --> 00:09:01,920
<font color="#CCCCCC">ciphertext encoding and the</font><font color="#E5E5E5"> variables</font>

187
00:08:59,639 --> 00:09:04,199
<font color="#CCCCCC">alpha and R are the part of the key</font>

188
00:09:01,920 --> 00:09:05,910
encoding<font color="#E5E5E5"> there are two polynomials one</font>

189
00:09:04,199 --> 00:09:09,959
in the<font color="#CCCCCC"> ciphertext encoding and one in</font>

190
00:09:05,910 --> 00:09:12,240
the key encoding<font color="#E5E5E5"> and for correctness we</font>

191
00:09:09,959 --> 00:09:14,339
require that when the predicate is<font color="#CCCCCC"> true</font>

192
00:09:12,240 --> 00:09:16,290
it should<font color="#CCCCCC"> be possible to combine</font><font color="#E5E5E5"> these</font>

193
00:09:14,339 --> 00:09:21,420
variables and polynomials to recover

194
00:09:16,290 --> 00:09:26,370
alpha s<font color="#CCCCCC"> so in this sense</font><font color="#E5E5E5"> alpha and s are</font>

195
00:09:21,420 --> 00:09:27,930
somewhat special variables here<font color="#E5E5E5"> so now</font>

196
00:09:26,370 --> 00:09:31,230
comes the<font color="#E5E5E5"> more interesting question</font><font color="#CCCCCC"> I</font>

197
00:09:27,930 --> 00:09:33,388
have a correct encoding scheme this

198
00:09:31,230 --> 00:09:35,009
could have come<font color="#E5E5E5"> from anywhere right I</font>

199
00:09:33,389 --> 00:09:40,199
could<font color="#E5E5E5"> have dreamed about a dreamed about</font>

200
00:09:35,009 --> 00:09:42,720
it<font color="#E5E5E5"> so now can I prove some property</font>

201
00:09:40,199 --> 00:09:45,689
<font color="#E5E5E5">about this encoding</font><font color="#CCCCCC"> when the predicate</font>

202
00:09:42,720 --> 00:09:49,459
<font color="#CCCCCC">is false that will</font><font color="#E5E5E5"> help me in</font><font color="#CCCCCC"> building a</font>

203
00:09:45,689 --> 00:09:49,459
fully secure encryption scheme<font color="#E5E5E5"> for it</font>

204
00:09:50,480 --> 00:09:57,870
symbolic property is one such property

205
00:09:52,829 --> 00:10:00,000
<font color="#E5E5E5">and like I said</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> we need to</font>

206
00:09:57,870 --> 00:10:03,769
<font color="#CCCCCC">find</font><font color="#E5E5E5"> a mapping from the variables in the</font>

207
00:10:00,000 --> 00:10:07,379
encoding to some<font color="#E5E5E5"> matrices and vectors</font>

208
00:10:03,769 --> 00:10:09,689
such that if I<font color="#CCCCCC"> substitute the variables</font>

209
00:10:07,379 --> 00:10:15,649
in the polynomials<font color="#CCCCCC"> with these matrices</font>

210
00:10:09,689 --> 00:10:15,649
<font color="#CCCCCC">and vectors</font><font color="#E5E5E5"> they should all</font><font color="#CCCCCC"> go to zero</font>

211
00:10:16,129 --> 00:10:21,720
okay now what prevents me<font color="#CCCCCC"> from setting</font>

212
00:10:19,379 --> 00:10:24,779
all the matrices and vectors<font color="#E5E5E5"> to just the</font>

213
00:10:21,720 --> 00:10:27,449
<font color="#E5E5E5">zero vector this extra constraint that</font>

214
00:10:24,779 --> 00:10:30,149
<font color="#E5E5E5">for the two special variables s and</font>

215
00:10:27,449 --> 00:10:33,620
<font color="#E5E5E5">alpha the vectors corresponding to them</font>

216
00:10:30,149 --> 00:10:33,620
should<font color="#CCCCCC"> not be orthogonal to</font><font color="#E5E5E5"> each other</font>

217
00:10:34,250 --> 00:10:39,240
so what is the mapping<font color="#CCCCCC"> in this</font>

218
00:10:36,480 --> 00:10:41,850
particular case it's actually<font color="#E5E5E5"> easy to</font>

219
00:10:39,240 --> 00:10:44,240
figure out<font color="#CCCCCC"> here is one example it</font>

220
00:10:41,850 --> 00:10:47,220
doesn't even require two dimensions<font color="#E5E5E5"> and</font>

221
00:10:44,240 --> 00:10:49,319
when we substitute<font color="#CCCCCC"> these vectors into</font>

222
00:10:47,220 --> 00:10:51,360
<font color="#E5E5E5">the first polynomial we get an</font>

223
00:10:49,319 --> 00:10:54,740
expression<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can easily</font><font color="#CCCCCC"> simplify</font>

224
00:10:51,360 --> 00:10:57,059
<font color="#E5E5E5">to get the zero vector</font><font color="#CCCCCC"> and similarly</font>

225
00:10:54,740 --> 00:10:59,600
when you substitute<font color="#E5E5E5"> these vectors into</font>

226
00:10:57,059 --> 00:11:03,149
<font color="#E5E5E5">the second polynomial you again get</font><font color="#CCCCCC"> zero</font>

227
00:10:59,600 --> 00:11:06,120
<font color="#E5E5E5">it's also easy to see that the vectors</font>

228
00:11:03,149 --> 00:11:08,490
for s and<font color="#CCCCCC"> alpha are not</font><font color="#E5E5E5"> orthogonal to</font>

229
00:11:06,120 --> 00:11:14,130
each<font color="#E5E5E5"> other if the predicate is</font><font color="#CCCCCC"> false</font>

230
00:11:08,490 --> 00:11:18,600
means<font color="#E5E5E5"> ID is not equal</font><font color="#CCCCCC"> to ID prime that's</font>

231
00:11:14,130 --> 00:11:20,399
<font color="#E5E5E5">all you need to do in fact symbolic</font>

232
00:11:18,600 --> 00:11:23,490
property allows<font color="#E5E5E5"> you an additional level</font>

233
00:11:20,399 --> 00:11:26,790
<font color="#E5E5E5">of flexibility it consists of two parts</font>

234
00:11:23,490 --> 00:11:29,160
<font color="#CCCCCC">selective and co</font><font color="#E5E5E5"> selective for the</font>

235
00:11:26,790 --> 00:11:32,730
<font color="#E5E5E5">selective property the vectors for key</font>

236
00:11:29,160 --> 00:11:33,209
encoding variables alpha<font color="#CCCCCC"> R 1 R 2 and so</font>

237
00:11:32,730 --> 00:11:36,630
<font color="#CCCCCC">forth</font>

238
00:11:33,209 --> 00:11:38,969
can depend on<font color="#E5E5E5"> both x and y and for the</font>

239
00:11:36,630 --> 00:11:41,010
co selective property<font color="#E5E5E5"> the vectors for</font>

240
00:11:38,970 --> 00:11:44,760
<font color="#E5E5E5">cipher text encoding variables can</font>

241
00:11:41,010 --> 00:11:48,750
depend on<font color="#E5E5E5"> both x and y now once we have</font>

242
00:11:44,760 --> 00:11:51,060
<font color="#E5E5E5">an encoding for any predicate P not just</font>

243
00:11:48,750 --> 00:11:54,029
equality that satisfies the symbolic

244
00:11:51,060 --> 00:11:56,489
property we can use it<font color="#E5E5E5"> to build a fully</font>

245
00:11:54,029 --> 00:11:58,529
secure encryption scheme for<font color="#CCCCCC"> P in a</font>

246
00:11:56,490 --> 00:12:00,570
<font color="#CCCCCC">symmetric</font><font color="#E5E5E5"> prime order by linear maps</font>

247
00:11:58,529 --> 00:12:02,880
this transformation<font color="#CCCCCC"> actually goes</font>

248
00:12:00,570 --> 00:12:04,589
through<font color="#CCCCCC"> several steps first</font><font color="#E5E5E5"> we extend</font>

249
00:12:02,880 --> 00:12:07,529
the encoding<font color="#E5E5E5"> with some additional</font>

250
00:12:04,589 --> 00:12:09,899
variables and polynomials<font color="#E5E5E5"> to get a more</font>

251
00:12:07,529 --> 00:12:11,880
strict form of<font color="#E5E5E5"> symbolic property which</font>

252
00:12:09,899 --> 00:12:14,459
constrains<font color="#CCCCCC"> what kind of matrices</font><font color="#E5E5E5"> and</font>

253
00:12:11,880 --> 00:12:15,810
<font color="#CCCCCC">vectors you can</font><font color="#E5E5E5"> use then we</font><font color="#CCCCCC"> build an</font>

254
00:12:14,459 --> 00:12:17,640
encryption scheme<font color="#E5E5E5"> in something called</font>

255
00:12:15,810 --> 00:12:21,119
dual<font color="#E5E5E5"> system groups which were which were</font>

256
00:12:17,640 --> 00:12:22,380
introduced by Chen and<font color="#CCCCCC"> Vee and finally</font>

257
00:12:21,120 --> 00:12:24,480
it's already known how to<font color="#E5E5E5"> instantiate</font>

258
00:12:22,380 --> 00:12:27,000
these groups in prime order by linear

259
00:12:24,480 --> 00:12:30,450
<font color="#CCCCCC">masks I'll not talk about how</font><font color="#E5E5E5"> these</font>

260
00:12:27,000 --> 00:12:32,240
transformations work in the next part of

261
00:12:30,450 --> 00:12:34,980
the talk I will discuss in some detail

262
00:12:32,240 --> 00:12:39,750
<font color="#E5E5E5">why this property is inherent to the</font>

263
00:12:34,980 --> 00:12:41,490
notion of encoding<font color="#CCCCCC"> x' so recall that for</font>

264
00:12:39,750 --> 00:12:43,620
correctness<font color="#E5E5E5"> we required that if the</font>

265
00:12:41,490 --> 00:12:47,300
predicate<font color="#E5E5E5"> is</font><font color="#CCCCCC"> true then it</font><font color="#E5E5E5"> should be</font>

266
00:12:43,620 --> 00:12:50,310
<font color="#CCCCCC">possible to recover</font><font color="#E5E5E5"> alpha times s and</font>

267
00:12:47,300 --> 00:12:53,339
why is this important<font color="#CCCCCC"> because I use</font>

268
00:12:50,310 --> 00:12:55,140
alpha s to remove the blinding factor in

269
00:12:53,339 --> 00:12:58,740
the encryption<font color="#E5E5E5"> scheme that you built</font>

270
00:12:55,140 --> 00:13:02,220
from the<font color="#CCCCCC"> encoding so when the predicate</font>

271
00:12:58,740 --> 00:13:04,110
<font color="#CCCCCC">is false at the least</font><font color="#E5E5E5"> we want that it</font>

272
00:13:02,220 --> 00:13:09,120
<font color="#E5E5E5">should not</font><font color="#CCCCCC"> be possible</font><font color="#E5E5E5"> to recover alpha</font>

273
00:13:04,110 --> 00:13:11,760
s so it makes sense<font color="#E5E5E5"> to define a scheme</font>

274
00:13:09,120 --> 00:13:15,480
<font color="#CCCCCC">an encoding scheme to be trivially</font>

275
00:13:11,760 --> 00:13:18,209
broken if there exists some x and y such

276
00:13:15,480 --> 00:13:21,079
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> predicate</font><font color="#CCCCCC"> is false</font><font color="#E5E5E5"> but alpha s</font>

277
00:13:18,209 --> 00:13:21,079
can still be recovered

278
00:13:22,040 --> 00:13:26,760
so not being trivially broken is a very

279
00:13:24,870 --> 00:13:29,910
basic<font color="#E5E5E5"> property for an encoding scheme</font>

280
00:13:26,760 --> 00:13:31,230
<font color="#E5E5E5">turns out it is sufficient</font><font color="#CCCCCC"> to because we</font>

281
00:13:29,910 --> 00:13:33,540
can show that<font color="#CCCCCC"> if</font><font color="#E5E5E5"> the scheme is not</font>

282
00:13:31,230 --> 00:13:37,350
trivially broken<font color="#E5E5E5"> it satisfies the</font>

283
00:13:33,540 --> 00:13:39,959
symbolic property so as an example<font color="#E5E5E5"> let's</font>

284
00:13:37,350 --> 00:13:43,650
go<font color="#CCCCCC"> back to the encoding</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> Equality</font>

285
00:13:39,960 --> 00:13:46,620
predicate<font color="#E5E5E5"> here</font><font color="#CCCCCC"> we saw</font><font color="#E5E5E5"> that if I</font><font color="#CCCCCC"> T prime</font>

286
00:13:43,650 --> 00:13:48,660
is<font color="#E5E5E5"> equal to</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> D then these variables and</font>

287
00:13:46,620 --> 00:13:52,290
polynomials<font color="#CCCCCC"> can be combined</font><font color="#E5E5E5"> to recover</font>

288
00:13:48,660 --> 00:13:54,360
alpha s which<font color="#CCCCCC"> is fine but if</font><font color="#E5E5E5"> I D prime</font>

289
00:13:52,290 --> 00:13:55,890
is not<font color="#CCCCCC"> equal to I D then no matter how</font>

290
00:13:54,360 --> 00:13:58,140
<font color="#E5E5E5">you combine these variables in</font>

291
00:13:55,890 --> 00:14:01,170
polynomials you cannot get<font color="#CCCCCC"> alpha times s</font>

292
00:13:58,140 --> 00:14:03,449
so as a result<font color="#E5E5E5"> this encoding scheme is</font>

293
00:14:01,170 --> 00:14:07,380
not trivially broken so it is

294
00:14:03,450 --> 00:14:10,160
symbolically<font color="#CCCCCC"> secured more generally</font><font color="#E5E5E5"> and</font>

295
00:14:07,380 --> 00:14:15,290
<font color="#CCCCCC">in coding for a</font><font color="#E5E5E5"> predicate P will have</font>

296
00:14:10,160 --> 00:14:18,270
many variables<font color="#E5E5E5"> and many polynomials and</font>

297
00:14:15,290 --> 00:14:20,339
when the predicate<font color="#CCCCCC"> is false suppose we</font>

298
00:14:18,270 --> 00:14:22,500
<font color="#E5E5E5">know</font><font color="#CCCCCC"> that these</font><font color="#E5E5E5"> variables and</font>

299
00:14:20,339 --> 00:14:26,400
polynomials cannot become mine to get

300
00:14:22,500 --> 00:14:28,529
alpha<font color="#E5E5E5"> times s so can</font><font color="#CCCCCC"> be used as fact to</font>

301
00:14:26,400 --> 00:14:31,319
find a mapping<font color="#E5E5E5"> from these variables to</font>

302
00:14:28,529 --> 00:14:36,959
<font color="#CCCCCC">some</font><font color="#E5E5E5"> matrices and vectors so that these</font>

303
00:14:31,320 --> 00:14:38,760
polynomials go to<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> will focus on only</font>

304
00:14:36,959 --> 00:14:41,910
<font color="#E5E5E5">the selective symbolic property here</font>

305
00:14:38,760 --> 00:14:42,450
where these variables<font color="#CCCCCC"> can depend on X</font>

306
00:14:41,910 --> 00:14:44,880
only

307
00:14:42,450 --> 00:14:50,339
<font color="#CCCCCC">but these variables depend on both x and</font>

308
00:14:44,880 --> 00:14:53,400
y now here is a very<font color="#CCCCCC"> high-level to slide</font>

309
00:14:50,339 --> 00:14:55,220
<font color="#CCCCCC">over view of the proof first</font><font color="#E5E5E5"> we want to</font>

310
00:14:53,400 --> 00:14:59,160
make the cipher text encoding

311
00:14:55,220 --> 00:15:01,190
<font color="#E5E5E5">polynomials go to 0</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> capture these</font>

312
00:14:59,160 --> 00:15:05,069
polynomials<font color="#E5E5E5"> in the form of a matrix</font>

313
00:15:01,190 --> 00:15:07,470
where<font color="#CCCCCC"> the rows correspond to the</font>

314
00:15:05,070 --> 00:15:11,060
polynomials<font color="#CCCCCC"> and the columns correspond</font>

315
00:15:07,470 --> 00:15:13,650
to the monomials<font color="#E5E5E5"> in these polynomials</font>

316
00:15:11,060 --> 00:15:17,189
<font color="#E5E5E5">this matrix can be defined based on the</font>

317
00:15:13,650 --> 00:15:20,189
knowledge<font color="#CCCCCC"> of X only we</font><font color="#E5E5E5"> use the kernel</font><font color="#CCCCCC"> of</font>

318
00:15:17,190 --> 00:15:24,029
this<font color="#E5E5E5"> matrix that</font><font color="#CCCCCC"> is all the vectors that</font>

319
00:15:20,190 --> 00:15:25,740
<font color="#E5E5E5">make this matrix go to 0 to define the</font>

320
00:15:24,029 --> 00:15:28,350
matrices for the common variables<font color="#E5E5E5"> and</font>

321
00:15:25,740 --> 00:15:34,230
the vectors for the<font color="#E5E5E5"> cipher text encoding</font>

322
00:15:28,350 --> 00:15:35,939
variables next we want to<font color="#E5E5E5"> make all the</font>

323
00:15:34,230 --> 00:15:39,509
key encoding polynomial

324
00:15:35,939 --> 00:15:43,379
go to<font color="#CCCCCC"> zero for</font><font color="#E5E5E5"> this we consider a much</font>

325
00:15:39,509 --> 00:15:45,779
larger<font color="#E5E5E5"> matrix where the</font><font color="#CCCCCC"> rows have all</font>

326
00:15:43,379 --> 00:15:48,239
<font color="#E5E5E5">possible combinations are all possible</font>

327
00:15:45,779 --> 00:15:51,359
products of the variables and

328
00:15:48,239 --> 00:15:54,509
polynomials<font color="#E5E5E5"> and the columns have all</font>

329
00:15:51,359 --> 00:15:56,279
<font color="#E5E5E5">possible monomials that that can be</font>

330
00:15:54,509 --> 00:15:57,959
<font color="#E5E5E5">generated through these products the</font>

331
00:15:56,279 --> 00:16:01,349
<font color="#CCCCCC">first column represents the special</font>

332
00:15:57,959 --> 00:16:04,189
monomial alpha<font color="#E5E5E5"> times s now because this</font>

333
00:16:01,349 --> 00:16:06,720
encoding scheme is not trivially broken

334
00:16:04,189 --> 00:16:13,199
the rows<font color="#CCCCCC"> of this matrix cannot be</font>

335
00:16:06,720 --> 00:16:15,720
combined<font color="#E5E5E5"> to get the vector 1 0 0</font><font color="#CCCCCC"> 0 which</font>

336
00:16:13,199 --> 00:16:17,789
means that<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> column can be</font>

337
00:16:15,720 --> 00:16:20,729
<font color="#E5E5E5">represented as a linear combination</font><font color="#CCCCCC"> of</font>

338
00:16:17,789 --> 00:16:23,549
all the<font color="#CCCCCC"> other columns now we use this</font>

339
00:16:20,729 --> 00:16:28,349
fact<font color="#CCCCCC"> together with the kernel defined</font>

340
00:16:23,549 --> 00:16:31,739
before to define the vectors for the<font color="#CCCCCC"> ki</font>

341
00:16:28,349 --> 00:16:33,329
<font color="#CCCCCC">KI</font><font color="#E5E5E5"> encoding variables so that's all I'm</font>

342
00:16:31,739 --> 00:16:37,379
going<font color="#CCCCCC"> to say about this proof you can</font>

343
00:16:33,329 --> 00:16:39,299
see the paper for full<font color="#E5E5E5"> details to</font>

344
00:16:37,379 --> 00:16:41,479
conclude there are some open<font color="#CCCCCC"> questions</font>

345
00:16:39,299 --> 00:16:45,209
which are<font color="#E5E5E5"> very</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> to look at</font>

346
00:16:41,479 --> 00:16:47,309
the<font color="#E5E5E5"> first one is about our new q type</font>

347
00:16:45,209 --> 00:16:49,529
assumption<font color="#E5E5E5"> I have not talked about this</font>

348
00:16:47,309 --> 00:16:51,209
assumption in any detail<font color="#CCCCCC"> but in the</font>

349
00:16:49,529 --> 00:16:53,849
paper we show that it follows from<font color="#E5E5E5"> some</font>

350
00:16:51,209 --> 00:16:55,799
known<font color="#CCCCCC"> q type functions now</font><font color="#E5E5E5"> the</font>

351
00:16:53,849 --> 00:16:58,829
dimensions of this<font color="#E5E5E5"> assumption that we</font>

352
00:16:55,799 --> 00:17:01,348
need in the proof<font color="#E5E5E5"> depend on the matrices</font>

353
00:16:58,829 --> 00:17:04,109
in the<font color="#E5E5E5"> mapping</font><font color="#CCCCCC"> that we saw before if the</font>

354
00:17:01,349 --> 00:17:06,629
matrices are<font color="#E5E5E5"> small then a small value</font><font color="#CCCCCC"> of</font>

355
00:17:04,109 --> 00:17:08,458
<font color="#E5E5E5">Q would work so it's interesting to</font>

356
00:17:06,628 --> 00:17:10,799
explore<font color="#E5E5E5"> how the simple cases of this</font>

357
00:17:08,459 --> 00:17:14,809
<font color="#E5E5E5">assumption are related to the standard</font>

358
00:17:10,799 --> 00:17:17,039
assumptions next is the question<font color="#E5E5E5"> about</font>

359
00:17:14,809 --> 00:17:21,869
automating the proof generation process

360
00:17:17,039 --> 00:17:23,519
itself<font color="#CCCCCC"> so</font><font color="#E5E5E5"> now if we want to build a</font>

361
00:17:21,869 --> 00:17:25,198
<font color="#E5E5E5">secure encryption scheme all that we</font>

362
00:17:23,519 --> 00:17:28,230
need to do is find a mapping<font color="#CCCCCC"> that</font>

363
00:17:25,199 --> 00:17:30,330
<font color="#E5E5E5">satisfies certain equations so it it is</font>

364
00:17:28,230 --> 00:17:33,799
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> that such mappings could be</font>

365
00:17:30,330 --> 00:17:37,860
generated through a computer<font color="#E5E5E5"> program and</font>

366
00:17:33,799 --> 00:17:39,899
finally<font color="#E5E5E5"> can we use this new framework</font>

367
00:17:37,860 --> 00:17:42,389
<font color="#E5E5E5">that we have developed to</font><font color="#CCCCCC"> push the</font>

368
00:17:39,899 --> 00:17:45,000
boundaries of what can be<font color="#CCCCCC"> done from bi</font>

369
00:17:42,389 --> 00:17:50,330
linear<font color="#CCCCCC"> maps</font><font color="#E5E5E5"> in particular can we go</font>

370
00:17:45,000 --> 00:17:50,330
beyond<font color="#CCCCCC"> nc1 thank</font>

371
00:17:53,659 --> 00:17:57,169
so any questions

372
00:18:06,990 --> 00:18:12,270
so uh I wonder<font color="#E5E5E5"> about</font><font color="#CCCCCC"> queue type</font>

373
00:18:09,720 --> 00:18:15,659
assertions<font color="#E5E5E5"> can can you reduce by using</font>

374
00:18:12,270 --> 00:18:19,520
like<font color="#E5E5E5"> deja</font><font color="#CCCCCC"> Q assumption which</font><font color="#E5E5E5"> this acute</font>

375
00:18:15,659 --> 00:18:24,120
technique which is<font color="#CCCCCC"> also done by</font><font color="#E5E5E5"> Melissa</font>

376
00:18:19,520 --> 00:18:28,679
reduce to reduce<font color="#CCCCCC"> the q type assumption</font>

377
00:18:24,120 --> 00:18:31,559
to like simple assumptions<font color="#E5E5E5"> where they</font>

378
00:18:28,679 --> 00:18:32,909
<font color="#E5E5E5">check you may thought we have not looked</font>

379
00:18:31,559 --> 00:18:33,690
at<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I mean that that</font><font color="#CCCCCC"> would be an</font>

380
00:18:32,909 --> 00:18:47,159
<font color="#E5E5E5">interesting direction</font>

381
00:18:33,690 --> 00:18:59,299
okay so<font color="#E5E5E5"> Endicott other questions we have</font>

382
00:18:47,159 --> 00:18:59,299
a lot of time<font color="#E5E5E5"> you any questions yeah</font>

383
00:19:04,700 --> 00:19:10,280
so you are<font color="#E5E5E5"> saying so</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> saying</font><font color="#CCCCCC"> that</font>

384
00:19:08,100 --> 00:19:13,199
John could<font color="#E5E5E5"> okay I'm not</font><font color="#CCCCCC"> totally</font>

385
00:19:10,280 --> 00:19:16,230
<font color="#CCCCCC">understood</font><font color="#E5E5E5"> so do the</font><font color="#CCCCCC"> encoding</font><font color="#E5E5E5"> you are</font>

386
00:19:13,200 --> 00:19:18,030
also academia<font color="#CCCCCC"> I've created not</font>

387
00:19:16,230 --> 00:19:19,950
<font color="#CCCCCC">information theoretic be</font><font color="#E5E5E5"> secure</font>

388
00:19:18,030 --> 00:19:23,370
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to the previous definition oh</font>

389
00:19:19,950 --> 00:19:25,700
yeah<font color="#E5E5E5"> but</font><font color="#CCCCCC"> computation is secure or even</font>

390
00:19:23,370 --> 00:19:27,870
the<font color="#CCCCCC"> computationally</font><font color="#E5E5E5"> secure</font><font color="#CCCCCC"> yeah</font>

391
00:19:25,700 --> 00:19:35,520
but proving them computationally secure

392
00:19:27,870 --> 00:19:42,270
may not be easy<font color="#CCCCCC"> okay any other</font><font color="#E5E5E5"> questions</font>

393
00:19:35,520 --> 00:19:43,470
<font color="#CCCCCC">no okay</font><font color="#E5E5E5"> so early in the talk you said</font>

394
00:19:42,270 --> 00:19:44,940
something about you<font color="#E5E5E5"> could do</font><font color="#CCCCCC"> something</font>

395
00:19:43,470 --> 00:19:46,170
<font color="#E5E5E5">with certain information properties and</font>

396
00:19:44,940 --> 00:19:48,210
one was symbolic<font color="#E5E5E5"> but I didn't really</font>

397
00:19:46,170 --> 00:19:50,460
catch<font color="#E5E5E5"> what the difference was or what</font>

398
00:19:48,210 --> 00:19:53,160
<font color="#E5E5E5">that meant between information theoretic</font>

399
00:19:50,460 --> 00:19:54,690
<font color="#E5E5E5">and symbolic yeah because I mean</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> know</font>

400
00:19:53,160 --> 00:19:55,890
<font color="#E5E5E5">what</font><font color="#CCCCCC"> information direct means</font><font color="#E5E5E5"> overall</font>

401
00:19:54,690 --> 00:19:57,390
<font color="#E5E5E5">but like it seemed like you could prove</font>

402
00:19:55,890 --> 00:19:59,760
<font color="#CCCCCC">IB schemes</font><font color="#E5E5E5"> with information theoretic</font>

403
00:19:57,390 --> 00:20:02,100
<font color="#E5E5E5">and exactly</font><font color="#CCCCCC"> yeah yeah I get that</font>

404
00:19:59,760 --> 00:20:03,210
so for<font color="#CCCCCC"> IV you can you can have n</font>

405
00:20:02,100 --> 00:20:05,309
coatings that are information

406
00:20:03,210 --> 00:20:08,280
theoretically<font color="#E5E5E5"> secure but if you have</font>

407
00:20:05,309 --> 00:20:10,800
more complex predicates<font color="#E5E5E5"> then you don't</font>

408
00:20:08,280 --> 00:20:13,860
you do<font color="#E5E5E5"> not know how to get information</font>

409
00:20:10,800 --> 00:20:17,250
theoretically secure encodings<font color="#CCCCCC"> for more</font>

410
00:20:13,860 --> 00:20:18,780
complex predicates<font color="#CCCCCC"> suppose I mean</font><font color="#E5E5E5"> you</font>

411
00:20:17,250 --> 00:20:21,030
have an information<font color="#E5E5E5"> theoretically secure</font>

412
00:20:18,780 --> 00:20:24,149
<font color="#CCCCCC">IB I guess that not</font><font color="#E5E5E5"> information</font>

413
00:20:21,030 --> 00:20:26,309
theoretically secure<font color="#E5E5E5"> IV the encoding for</font>

414
00:20:24,150 --> 00:20:28,320
example that<font color="#E5E5E5"> we extracted out from an IV</font>

415
00:20:26,309 --> 00:20:29,879
scheme<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a definition</font><font color="#E5E5E5"> for</font>

416
00:20:28,320 --> 00:20:33,210
information theoretic security of that

417
00:20:29,880 --> 00:20:39,059
encoding okay so yeah some terminology

418
00:20:33,210 --> 00:20:44,760
<font color="#E5E5E5">specific</font><font color="#CCCCCC"> yeah okay so no questions any</font>

419
00:20:39,059 --> 00:20:47,490
<font color="#CCCCCC">more</font><font color="#E5E5E5"> okay so for the transformation so</font>

420
00:20:44,760 --> 00:20:49,290
you didn't say<font color="#CCCCCC"> anything about so how</font>

421
00:20:47,490 --> 00:20:51,330
efficient is the transformation<font color="#E5E5E5"> so how</font>

422
00:20:49,290 --> 00:20:54,870
much do you lose in<font color="#E5E5E5"> the construction of</font>

423
00:20:51,330 --> 00:20:57,570
the final scheme so I mean how important

424
00:20:54,870 --> 00:21:00,360
it is to build a compact predicate so

425
00:20:57,570 --> 00:21:05,939
that then the construction<font color="#E5E5E5"> the final</font>

426
00:21:00,360 --> 00:21:07,709
<font color="#E5E5E5">construction is efficient so the fine I</font>

427
00:21:05,940 --> 00:21:10,200
mean<font color="#E5E5E5"> you said that the assumption</font>

428
00:21:07,710 --> 00:21:12,870
depends on the predicate<font color="#E5E5E5"> no like it the</font>

429
00:21:10,200 --> 00:21:15,960
<font color="#CCCCCC">Q rescue depends on how how</font>

430
00:21:12,870 --> 00:21:18,330
efficiently<font color="#E5E5E5"> you can map sure -</font><font color="#CCCCCC"> and then</font>

431
00:21:15,960 --> 00:21:20,940
the I guess the<font color="#E5E5E5"> efficiency of the scheme</font>

432
00:21:18,330 --> 00:21:23,129
<font color="#CCCCCC">also to a certain extent</font><font color="#E5E5E5"> the efficiency</font>

433
00:21:20,940 --> 00:21:25,380
of<font color="#E5E5E5"> this for example if we have ways</font><font color="#CCCCCC"> to</font>

434
00:21:23,130 --> 00:21:28,290
get schemes for with constant size

435
00:21:25,380 --> 00:21:30,840
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> in those</font><font color="#E5E5E5"> cases you will have</font>

436
00:21:28,290 --> 00:21:33,389
<font color="#E5E5E5">I don't know maybe like four or five</font>

437
00:21:30,840 --> 00:21:34,949
elements in<font color="#E5E5E5"> the ciphertext</font><font color="#CCCCCC"> that's all</font><font color="#E5E5E5"> it</font>

438
00:21:33,390 --> 00:21:39,210
doesn't depend on what predicate<font color="#CCCCCC"> you</font>

439
00:21:34,950 --> 00:21:46,140
have in the public<font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> public</font>

440
00:21:39,210 --> 00:21:47,700
parameters would depend on so we<font color="#E5E5E5"> don't</font>

441
00:21:46,140 --> 00:21:50,130
<font color="#E5E5E5">have a way to make the public parameters</font>

442
00:21:47,700 --> 00:21:53,120
compact<font color="#E5E5E5"> yeah but we can make the keys</font>

443
00:21:50,130 --> 00:21:53,120
and ciphertext<font color="#E5E5E5"> compact</font>

