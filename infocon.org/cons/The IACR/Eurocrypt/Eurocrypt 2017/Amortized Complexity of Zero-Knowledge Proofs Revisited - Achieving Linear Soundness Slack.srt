1
00:00:00,000 --> 00:00:04,440
yes<font color="#E5E5E5"> thanks so as protocol dictates I</font>

2
00:00:03,270 --> 00:00:05,370
have to repeat<font color="#CCCCCC"> that this is joint work</font>

3
00:00:04,440 --> 00:00:07,680
with<font color="#CCCCCC"> one framer</font>

4
00:00:05,370 --> 00:00:12,000
from<font color="#CCCCCC"> CW</font><font color="#E5E5E5"> Amsterdam and choking singing</font>

5
00:00:07,680 --> 00:00:14,219
<font color="#CCCCCC">anyone from</font><font color="#E5E5E5"> NTU</font><font color="#CCCCCC"> and Singapore so let</font><font color="#E5E5E5"> me</font>

6
00:00:12,000 --> 00:00:15,980
dive straight into<font color="#E5E5E5"> the premises that</font>

7
00:00:14,219 --> 00:00:18,150
<font color="#CCCCCC">we're using</font><font color="#E5E5E5"> all the time in this talk</font>

8
00:00:15,980 --> 00:00:19,949
<font color="#E5E5E5">something</font><font color="#CCCCCC"> we call</font><font color="#E5E5E5"> integer</font><font color="#CCCCCC"> 1 wave</font>

9
00:00:18,150 --> 00:00:22,709
function for<font color="#CCCCCC"> lack of better names</font><font color="#E5E5E5"> I</font>

10
00:00:19,949 --> 00:00:26,039
guess so<font color="#E5E5E5"> it's basically</font><font color="#CCCCCC"> Maps an integer</font>

11
00:00:22,710 --> 00:00:28,260
to a finite<font color="#E5E5E5"> group G</font><font color="#CCCCCC"> Avedon group G</font><font color="#E5E5E5"> it</font>

12
00:00:26,039 --> 00:00:30,090
must be hard to invert<font color="#E5E5E5"> and the function</font>

13
00:00:28,260 --> 00:00:33,899
must be<font color="#E5E5E5"> Alice oblique or morphix of f of</font>

14
00:00:30,090 --> 00:00:35,280
X plus<font color="#E5E5E5"> y it is f of X</font><font color="#CCCCCC"> plus F</font><font color="#E5E5E5"> of Y in the</font>

15
00:00:33,899 --> 00:00:38,250
paper we consider the general<font color="#E5E5E5"> case of</font>

16
00:00:35,280 --> 00:00:40,079
<font color="#E5E5E5">mapping vectors with integer entries</font>

17
00:00:38,250 --> 00:00:41,579
into the abelian group but for<font color="#E5E5E5"> the talk</font>

18
00:00:40,079 --> 00:00:44,910
I just<font color="#CCCCCC"> stick with its single</font><font color="#E5E5E5"> Institutes</font>

19
00:00:41,579 --> 00:00:46,739
input that's just for simplicity<font color="#E5E5E5"> there</font>

20
00:00:44,910 --> 00:00:48,089
are tons of examples<font color="#E5E5E5"> so the the reason</font>

21
00:00:46,739 --> 00:00:50,820
for this abstraction<font color="#E5E5E5"> is of course that</font>

22
00:00:48,090 --> 00:00:53,070
there's lots of stuff<font color="#CCCCCC"> it captures so for</font>

23
00:00:50,820 --> 00:00:54,329
instance<font color="#E5E5E5"> pretty much any last base that</font>

24
00:00:53,070 --> 00:00:56,430
<font color="#E5E5E5">is base</font><font color="#CCCCCC"> crypto system you'll see</font><font color="#E5E5E5"> in</font>

25
00:00:54,329 --> 00:00:58,590
<font color="#CCCCCC">literature as an encryption functions</font>

26
00:00:56,430 --> 00:01:00,870
which is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> density</font><font color="#CCCCCC"> of one wave function</font>

27
00:00:58,590 --> 00:01:03,359
and if you<font color="#E5E5E5"> consider it as a function</font>

28
00:01:00,870 --> 00:01:06,658
<font color="#E5E5E5">from both the message and the randomness</font>

29
00:01:03,359 --> 00:01:08,600
<font color="#CCCCCC">to the cipher</font><font color="#E5E5E5"> text lots of that is</font><font color="#CCCCCC"> base</font>

30
00:01:06,659 --> 00:01:11,790
<font color="#CCCCCC">times function it's not the same</font>

31
00:01:08,600 --> 00:01:15,899
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> again because you basically</font>

32
00:01:11,790 --> 00:01:17,930
<font color="#E5E5E5">take</font><font color="#CCCCCC"> some public matrix and multiply it</font>

33
00:01:15,900 --> 00:01:19,920
<font color="#CCCCCC">by a vector</font><font color="#E5E5E5"> consisting of the inputs</font>

34
00:01:17,930 --> 00:01:22,979
into the commitment scheme since another

35
00:01:19,920 --> 00:01:24,090
example<font color="#CCCCCC"> which don't have to be license</font>

36
00:01:22,979 --> 00:01:26,220
based by the way there are<font color="#E5E5E5"> also examples</font>

37
00:01:24,090 --> 00:01:27,600
<font color="#E5E5E5">based on the strong RSA assumption which</font>

38
00:01:26,220 --> 00:01:29,820
by the<font color="#E5E5E5"> way in this conference you'll see</font>

39
00:01:27,600 --> 00:01:33,059
can be<font color="#E5E5E5"> based also on just the RSA</font>

40
00:01:29,820 --> 00:01:35,309
assumption<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> very general</font><font color="#CCCCCC"> thing</font>

41
00:01:33,060 --> 00:01:36,570
<font color="#CCCCCC">and therefore it's also interesting to</font>

42
00:01:35,310 --> 00:01:38,640
<font color="#E5E5E5">be able to give soon all these proofs</font>

43
00:01:36,570 --> 00:01:40,169
for these<font color="#E5E5E5"> functions so there's approver</font>

44
00:01:38,640 --> 00:01:41,909
that claims<font color="#E5E5E5"> that he knows a small</font>

45
00:01:40,170 --> 00:01:46,649
<font color="#E5E5E5">numerical</font><font color="#CCCCCC"> is smaller in the vector</font><font color="#E5E5E5"> case</font>

46
00:01:41,909 --> 00:01:48,030
short<font color="#CCCCCC"> preimage X</font><font color="#E5E5E5"> for output value Y and</font>

47
00:01:46,649 --> 00:01:50,689
the reason why that's so important to<font color="#E5E5E5"> be</font>

48
00:01:48,030 --> 00:01:53,729
<font color="#E5E5E5">able to do efficiently it's because</font>

49
00:01:50,689 --> 00:01:54,839
there's a for instance<font color="#CCCCCC"> if the</font><font color="#E5E5E5"> internet</font>

50
00:01:53,729 --> 00:01:58,320
<font color="#CCCCCC">one</font><font color="#E5E5E5"> function is the encryption function</font>

51
00:01:54,840 --> 00:01:59,969
<font color="#E5E5E5">of a database crypto system then what</font>

52
00:01:58,320 --> 00:02:01,648
the<font color="#CCCCCC"> prove is doing really is</font><font color="#E5E5E5"> is proving</font>

53
00:01:59,969 --> 00:02:04,559
that<font color="#CCCCCC"> his</font><font color="#E5E5E5"> ciphertext is well-formed in</font>

54
00:02:01,649 --> 00:02:06,390
other words I chose<font color="#E5E5E5"> message and ran this</font>

55
00:02:04,560 --> 00:02:07,710
<font color="#E5E5E5">input that was short</font><font color="#CCCCCC"> enough so that</font>

56
00:02:06,390 --> 00:02:09,598
during<font color="#E5E5E5"> the encryption</font><font color="#CCCCCC"> process there</font><font color="#E5E5E5"> was</font>

57
00:02:07,710 --> 00:02:11,480
<font color="#E5E5E5">no overflow and therefore this either</font>

58
00:02:09,598 --> 00:02:13,799
<font color="#E5E5E5">state can be decrypted to a unique value</font>

59
00:02:11,480 --> 00:02:16,350
this is<font color="#E5E5E5"> what you need for</font><font color="#CCCCCC"> let's</font>

60
00:02:13,800 --> 00:02:18,150
<font color="#CCCCCC">the proof of plaintext</font><font color="#E5E5E5"> proof of input</font>

61
00:02:16,350 --> 00:02:20,370
<font color="#E5E5E5">knowledge and many of you see protocols</font>

62
00:02:18,150 --> 00:02:21,900
<font color="#E5E5E5">for instance and also if there was a</font>

63
00:02:20,370 --> 00:02:23,130
hash function<font color="#CCCCCC"> then what you want to</font>

64
00:02:21,900 --> 00:02:24,420
<font color="#E5E5E5">prove this is that I know it's short</font>

65
00:02:23,130 --> 00:02:28,049
enough<font color="#CCCCCC"> freedom</font><font color="#E5E5E5"> it's under the hash</font>

66
00:02:24,420 --> 00:02:29,700
function<font color="#E5E5E5"> so that nobody including me can</font>

67
00:02:28,050 --> 00:02:33,870
find<font color="#CCCCCC"> another preimage that matched</font><font color="#E5E5E5"> to</font>

68
00:02:29,700 --> 00:02:34,980
the same output<font color="#CCCCCC"> so so therefore</font><font color="#E5E5E5"> this</font>

69
00:02:33,870 --> 00:02:36,750
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of thing is</font><font color="#E5E5E5"> definitely something we</font>

70
00:02:34,980 --> 00:02:38,190
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> solve them in different contexts</font>

71
00:02:36,750 --> 00:02:41,040
so here's a<font color="#E5E5E5"> very simplistic it</font><font color="#CCCCCC"> set</font>

72
00:02:38,190 --> 00:02:43,500
approach<font color="#CCCCCC"> we have the prover on top there</font>

73
00:02:41,040 --> 00:02:45,329
who knows X both fighters know<font color="#CCCCCC"> Y which</font>

74
00:02:43,500 --> 00:02:47,040
is<font color="#E5E5E5"> f of X and the proof of claims that X</font>

75
00:02:45,330 --> 00:02:50,550
numerically is smaller<font color="#E5E5E5"> than this fixed</font>

76
00:02:47,040 --> 00:02:53,359
bound<font color="#CCCCCC"> B what</font><font color="#E5E5E5"> you do is</font><font color="#CCCCCC"> just that the the</font>

77
00:02:50,550 --> 00:02:57,210
prover chooses<font color="#CCCCCC"> let's say a smallish R</font>

78
00:02:53,360 --> 00:02:59,100
that's random applies F gets a<font color="#CCCCCC"> since</font>

79
00:02:57,210 --> 00:03:01,530
it's over the<font color="#E5E5E5"> verified challenges with</font>

80
00:02:59,100 --> 00:03:04,019
<font color="#E5E5E5">zero or one value and the prove must now</font>

81
00:03:01,530 --> 00:03:06,780
return<font color="#E5E5E5"> Z which is our plus e times X so</font>

82
00:03:04,020 --> 00:03:08,160
<font color="#CCCCCC">a</font><font color="#E5E5E5"> plus X so just</font><font color="#CCCCCC"> R itself and if you</font>

83
00:03:06,780 --> 00:03:10,860
<font color="#E5E5E5">apply F and both sides of that equation</font>

84
00:03:08,160 --> 00:03:13,620
you<font color="#E5E5E5"> get a set equals</font><font color="#CCCCCC"> f of r</font><font color="#E5E5E5"> which is a</font>

85
00:03:10,860 --> 00:03:14,790
plus e times f of X which<font color="#E5E5E5"> is y and so</font>

86
00:03:13,620 --> 00:03:17,190
that that's an equation that<font color="#E5E5E5"> the</font>

87
00:03:14,790 --> 00:03:21,600
<font color="#CCCCCC">verified can check and then in addition</font>

88
00:03:17,190 --> 00:03:23,730
because<font color="#E5E5E5"> in addition because small is</font><font color="#CCCCCC"> aw</font>

89
00:03:21,600 --> 00:03:26,070
<font color="#E5E5E5">plus perhaps small</font><font color="#CCCCCC"> XS to still be</font>

90
00:03:23,730 --> 00:03:27,810
smallish<font color="#E5E5E5"> quote-unquote then then the</font>

91
00:03:26,070 --> 00:03:29,880
verify can check that this this set is

92
00:03:27,810 --> 00:03:33,600
actually<font color="#CCCCCC"> smaller than</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> that</font>

93
00:03:29,880 --> 00:03:35,430
means precisely<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> this is fine but</font>

94
00:03:33,600 --> 00:03:37,980
there are several problems<font color="#E5E5E5"> here</font><font color="#CCCCCC"> so</font>

95
00:03:35,430 --> 00:03:40,200
<font color="#E5E5E5">problem number one is that</font><font color="#CCCCCC"> Tomatoes PCR</font>

96
00:03:37,980 --> 00:03:43,920
knowledge we need that<font color="#E5E5E5"> the distribution</font>

97
00:03:40,200 --> 00:03:47,429
of<font color="#E5E5E5"> the value</font><font color="#CCCCCC"> R</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> changed much</font><font color="#E5E5E5"> by</font>

98
00:03:43,920 --> 00:03:48,540
<font color="#E5E5E5">adding X so if we can simulate by just</font>

99
00:03:47,430 --> 00:03:51,180
choosing a random<font color="#E5E5E5"> thing in the right</font>

100
00:03:48,540 --> 00:03:52,739
interval<font color="#E5E5E5"> and this means that I must must</font>

101
00:03:51,180 --> 00:03:55,470
bigger than<font color="#CCCCCC"> be</font><font color="#E5E5E5"> by some exponentially</font>

102
00:03:52,739 --> 00:03:57,630
large factor<font color="#E5E5E5"> and in the security</font>

103
00:03:55,470 --> 00:03:59,850
parameter and and since we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> using</font>

104
00:03:57,630 --> 00:04:02,130
those responses from the proven to

105
00:03:59,850 --> 00:04:03,780
extract a valid input from the<font color="#E5E5E5"> exceeding</font>

106
00:04:02,130 --> 00:04:05,549
proven what that means is that in<font color="#E5E5E5"> the</font>

107
00:04:03,780 --> 00:04:07,709
<font color="#E5E5E5">end we'll get a much bigger</font><font color="#CCCCCC"> pretty much</font>

108
00:04:05,550 --> 00:04:10,320
possibly for<font color="#CCCCCC"> cheating prove than what</font>

109
00:04:07,709 --> 00:04:12,780
the<font color="#CCCCCC"> honors</font><font color="#E5E5E5"> prove is using and this is</font>

110
00:04:10,320 --> 00:04:14,670
annoying<font color="#E5E5E5"> because so we say that</font><font color="#CCCCCC"> the</font>

111
00:04:12,780 --> 00:04:16,709
<font color="#E5E5E5">sound and slack is in this particular</font>

112
00:04:14,670 --> 00:04:18,959
<font color="#E5E5E5">case exponential in K so it</font><font color="#CCCCCC"> that that's</font>

113
00:04:16,709 --> 00:04:20,548
<font color="#E5E5E5">the more pleasing factor between what</font>

114
00:04:18,959 --> 00:04:22,520
the<font color="#CCCCCC"> honest proved is using and what we</font>

115
00:04:20,548 --> 00:04:24,539
can force a disorders prove it to use

116
00:04:22,520 --> 00:04:27,180
the reason why this is<font color="#CCCCCC"> very annoying</font>

117
00:04:24,539 --> 00:04:28,800
<font color="#E5E5E5">that it is</font><font color="#CCCCCC"> lies it's because</font>

118
00:04:27,180 --> 00:04:31,380
if we were doing<font color="#CCCCCC"> this for an encryption</font>

119
00:04:28,800 --> 00:04:35,010
function say<font color="#E5E5E5"> then we would only</font><font color="#CCCCCC"> be able</font>

120
00:04:31,380 --> 00:04:37,020
<font color="#CCCCCC">to ensure that that the dishonest proven</font>

121
00:04:35,010 --> 00:04:38,969
<font color="#E5E5E5">those values that are much bigger than</font>

122
00:04:37,020 --> 00:04:40,020
what he should<font color="#E5E5E5"> be using and so in the</font>

123
00:04:38,970 --> 00:04:42,330
encryption<font color="#CCCCCC"> scheme we had to choose</font>

124
00:04:40,020 --> 00:04:44,070
bigger parameters to make sure that if

125
00:04:42,330 --> 00:04:45,840
we encrypt<font color="#E5E5E5"> even with those larger values</font>

126
00:04:44,070 --> 00:04:46,919
will still not get overflow<font color="#CCCCCC"> so this</font>

127
00:04:45,840 --> 00:04:48,630
<font color="#E5E5E5">means</font><font color="#CCCCCC"> everything gets bigger and</font>

128
00:04:46,919 --> 00:04:50,159
therefore<font color="#E5E5E5"> less efficient and so we'd</font>

129
00:04:48,630 --> 00:04:54,659
<font color="#E5E5E5">like to</font><font color="#CCCCCC"> avoid that so we want small</font>

130
00:04:50,160 --> 00:04:55,830
sounds like<font color="#CCCCCC"> um for number two is</font><font color="#E5E5E5"> that of</font>

131
00:04:54,660 --> 00:04:58,229
course<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to repeat</font><font color="#E5E5E5"> the protocol</font>

132
00:04:55,830 --> 00:05:00,530
key times<font color="#CCCCCC"> if I just do this to get to</font>

133
00:04:58,229 --> 00:05:02,760
get small<font color="#E5E5E5"> soundless error probability</font>

134
00:05:00,530 --> 00:05:04,380
usually in other domains you just take

135
00:05:02,760 --> 00:05:06,090
<font color="#CCCCCC">'if of a larger domain</font><font color="#E5E5E5"> and then</font>

136
00:05:04,380 --> 00:05:08,190
everything is solved that doesn't work

137
00:05:06,090 --> 00:05:10,289
here<font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you do the extraction</font>

138
00:05:08,190 --> 00:05:12,150
<font color="#E5E5E5">for the</font><font color="#CCCCCC"> sounders proof you'll find that</font>

139
00:05:10,289 --> 00:05:14,550
you have to<font color="#E5E5E5"> divide by the difference</font>

140
00:05:12,150 --> 00:05:16,590
<font color="#E5E5E5">between two challenge values in order</font><font color="#CCCCCC"> to</font>

141
00:05:14,550 --> 00:05:18,600
get the answer<font color="#CCCCCC"> you after in the</font>

142
00:05:16,590 --> 00:05:20,190
<font color="#E5E5E5">extraction procedure and of course here</font>

143
00:05:18,600 --> 00:05:21,840
we<font color="#E5E5E5"> have to deal with the integers</font><font color="#CCCCCC"> that</font>

144
00:05:20,190 --> 00:05:23,520
that's the input<font color="#E5E5E5"> domain so we</font><font color="#CCCCCC"> can only</font>

145
00:05:21,840 --> 00:05:24,719
divide by<font color="#E5E5E5"> one or minus one so that</font>

146
00:05:23,520 --> 00:05:27,419
that's that's<font color="#E5E5E5"> that I mean we can't</font>

147
00:05:24,720 --> 00:05:28,889
really<font color="#E5E5E5"> have a bigger challenge value so</font>

148
00:05:27,419 --> 00:05:30,570
<font color="#CCCCCC">the</font><font color="#E5E5E5"> overhead is lies in the simplistic</font>

149
00:05:28,889 --> 00:05:33,389
solution<font color="#E5E5E5"> that's also something we'd like</font>

150
00:05:30,570 --> 00:05:35,340
to to reduce so what do we<font color="#E5E5E5"> know about</font>

151
00:05:33,389 --> 00:05:37,530
this<font color="#CCCCCC"> problem so so if we just want to</font>

152
00:05:35,340 --> 00:05:39,570
prove knowledge of a single<font color="#CCCCCC"> preimage we</font>

153
00:05:37,530 --> 00:05:41,580
don't know how<font color="#E5E5E5"> to reduce both overhead</font>

154
00:05:39,570 --> 00:05:44,700
and sound slack at the same time using

155
00:05:41,580 --> 00:05:46,830
your<font color="#E5E5E5"> slaves</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> do Brzezinski's</font><font color="#CCCCCC"> with the</font>

156
00:05:44,700 --> 00:05:48,659
<font color="#CCCCCC">X and sampling</font><font color="#E5E5E5"> result we can reduce the</font>

157
00:05:46,830 --> 00:05:51,780
<font color="#E5E5E5">sound and slack but we can have reduce</font>

158
00:05:48,660 --> 00:05:53,250
the<font color="#E5E5E5"> overhead at the same time so what</font>

159
00:05:51,780 --> 00:05:55,409
people have<font color="#CCCCCC"> done instead is say so so</font>

160
00:05:53,250 --> 00:05:57,960
let's<font color="#E5E5E5"> consider a large number of images</font>

161
00:05:55,410 --> 00:06:00,720
y1 up to Y<font color="#E5E5E5"> n and let's consider the</font>

162
00:05:57,960 --> 00:06:02,940
amortized cost<font color="#CCCCCC"> of proving PMS noise</font><font color="#E5E5E5"> and</font>

163
00:06:00,720 --> 00:06:05,610
and that's<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> been done a few times</font>

164
00:06:02,940 --> 00:06:08,639
<font color="#E5E5E5">so there's Wi-Fi myself in law Cramer in</font>

165
00:06:05,610 --> 00:06:10,349
2009 where we get constant<font color="#E5E5E5"> overhead but</font>

166
00:06:08,639 --> 00:06:13,940
<font color="#E5E5E5">unfortunately still exponential sounds</font>

167
00:06:10,349 --> 00:06:17,729
like much later let<font color="#CCCCCC"> Lyceus crypto with</font>

168
00:06:13,940 --> 00:06:19,770
bound myself last night<font color="#E5E5E5"> Milson we got</font>

169
00:06:17,729 --> 00:06:23,099
<font color="#E5E5E5">also constant overhead but now let's say</font>

170
00:06:19,770 --> 00:06:24,539
quasi-polynomial<font color="#CCCCCC"> soundless slack and</font>

171
00:06:23,099 --> 00:06:27,060
this work we take<font color="#E5E5E5"> the final Steffen</font><font color="#CCCCCC"> we</font>

172
00:06:24,539 --> 00:06:30,479
get<font color="#E5E5E5"> constant overhead and linear</font><font color="#CCCCCC"> sound</font>

173
00:06:27,060 --> 00:06:34,580
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> like in</font><font color="#E5E5E5"> okay there's one more</font>

174
00:06:30,479 --> 00:06:38,070
parameter<font color="#E5E5E5"> actually because as with all</font>

175
00:06:34,580 --> 00:06:39,840
<font color="#CCCCCC">amortized proofs</font><font color="#E5E5E5"> a massage results you</font>

176
00:06:38,070 --> 00:06:40,990
have<font color="#CCCCCC"> to amortize</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> enough instances</font>

177
00:06:39,840 --> 00:06:43,150
before<font color="#E5E5E5"> the amortization</font>

178
00:06:40,990 --> 00:06:45,060
improvement kicks in<font color="#E5E5E5"> so what this means</font>

179
00:06:43,150 --> 00:06:47,770
<font color="#E5E5E5">here is that</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> must be large enough</font>

180
00:06:45,060 --> 00:06:50,350
<font color="#E5E5E5">compared to K and what we need here is</font>

181
00:06:47,770 --> 00:06:52,930
<font color="#E5E5E5">that in our simplest version of the</font>

182
00:06:50,350 --> 00:06:53,920
result<font color="#E5E5E5"> and must be K squared that's</font>

183
00:06:52,930 --> 00:06:55,990
<font color="#E5E5E5">actually pretty simple solution</font>

184
00:06:53,920 --> 00:06:58,630
constants are very small<font color="#E5E5E5"> so this has you</font>

185
00:06:55,990 --> 00:07:00,850
know real practical potential<font color="#E5E5E5"> we can</font>

186
00:06:58,630 --> 00:07:03,520
<font color="#E5E5E5">also do more stuff and and and reduce</font>

187
00:07:00,850 --> 00:07:05,140
this to<font color="#E5E5E5"> K to the 1.5 and the subsequent</font>

188
00:07:03,520 --> 00:07:07,840
work<font color="#CCCCCC"> to ours</font><font color="#E5E5E5"> that does even</font><font color="#CCCCCC"> better so</font>

189
00:07:05,140 --> 00:07:09,880
opportunity<font color="#E5E5E5"> close to</font><font color="#CCCCCC"> two K in fact but</font>

190
00:07:07,840 --> 00:07:11,619
the more of<font color="#CCCCCC"> this you</font><font color="#E5E5E5"> do the more</font>

191
00:07:09,880 --> 00:07:13,570
unpleasant<font color="#E5E5E5"> constants you get so it gets</font>

192
00:07:11,620 --> 00:07:14,920
less<font color="#CCCCCC"> than as practical effect</font><font color="#E5E5E5"> but as</font>

193
00:07:13,570 --> 00:07:18,790
some<font color="#CCCCCC"> tonically</font><font color="#E5E5E5"> seems you can get really</font>

194
00:07:14,920 --> 00:07:21,940
<font color="#E5E5E5">close to K ok so let's look at the</font>

195
00:07:18,790 --> 00:07:24,400
<font color="#CCCCCC">construction right so so first of all we</font>

196
00:07:21,940 --> 00:07:27,219
borrow an ingredient<font color="#E5E5E5"> from previous work</font>

197
00:07:24,400 --> 00:07:28,900
something called imperfect proof which

198
00:07:27,220 --> 00:07:31,920
<font color="#E5E5E5">is basically a</font><font color="#CCCCCC"> very simple cotton</font><font color="#E5E5E5"> to</font>

199
00:07:28,900 --> 00:07:34,719
<font color="#CCCCCC">start protocol</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> prediction sampling</font>

200
00:07:31,920 --> 00:07:36,490
and this is at first sight very very

201
00:07:34,720 --> 00:07:38,680
nice we get<font color="#E5E5E5"> constant overhead constant</font>

202
00:07:36,490 --> 00:07:39,010
<font color="#CCCCCC">sounds like what could</font><font color="#E5E5E5"> be what's not to</font>

203
00:07:38,680 --> 00:07:41,170
like

204
00:07:39,010 --> 00:07:43,810
well the problem is<font color="#E5E5E5"> that that it only</font>

205
00:07:41,170 --> 00:07:45,520
allows<font color="#CCCCCC"> us to extract from the</font><font color="#E5E5E5"> prover if</font>

206
00:07:43,810 --> 00:07:47,380
he survives<font color="#E5E5E5"> the protocol we get almost</font>

207
00:07:45,520 --> 00:07:48,640
<font color="#E5E5E5">all</font><font color="#CCCCCC"> primitives</font><font color="#E5E5E5"> that we want will be</font>

208
00:07:47,380 --> 00:07:51,280
<font color="#E5E5E5">missing up to</font><font color="#CCCCCC"> Kalos</font>

209
00:07:48,640 --> 00:07:52,630
and the further problem is that of

210
00:07:51,280 --> 00:07:54,460
course<font color="#E5E5E5"> we don't know ahead of</font><font color="#CCCCCC"> time which</font>

211
00:07:52,630 --> 00:07:57,520
<font color="#CCCCCC">kid will be that will be gonna miss</font><font color="#E5E5E5"> that</font>

212
00:07:54,460 --> 00:07:59,409
is<font color="#CCCCCC"> gonna be adversarially chosen I</font>

213
00:07:57,520 --> 00:08:01,299
should mention there<font color="#CCCCCC"> is an very recent</font>

214
00:07:59,410 --> 00:08:02,860
<font color="#E5E5E5">work by</font><font color="#CCCCCC"> Lucas F scale</font><font color="#E5E5E5"> out there is an</font>

215
00:08:01,300 --> 00:08:06,640
improved version<font color="#CCCCCC"> of this imperfect proof</font>

216
00:08:02,860 --> 00:08:08,350
where they can for a little bit<font color="#E5E5E5"> of extra</font>

217
00:08:06,640 --> 00:08:10,180
<font color="#E5E5E5">work but</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> communication complexity</font>

218
00:08:08,350 --> 00:08:11,950
<font color="#CCCCCC">they will miss even fewer</font><font color="#E5E5E5"> of these</font>

219
00:08:10,180 --> 00:08:13,570
<font color="#CCCCCC">parameters than before</font><font color="#E5E5E5"> so this can be</font>

220
00:08:11,950 --> 00:08:14,320
pretty<font color="#E5E5E5"> much plug and played into our</font>

221
00:08:13,570 --> 00:08:15,670
<font color="#CCCCCC">result here</font>

222
00:08:14,320 --> 00:08:18,250
<font color="#CCCCCC">and you'll get an</font><font color="#E5E5E5"> even more practical</font>

223
00:08:15,670 --> 00:08:20,260
<font color="#E5E5E5">protocol that's a different story though</font>

224
00:08:18,250 --> 00:08:23,710
<font color="#E5E5E5">so the main protocol is our contribution</font>

225
00:08:20,260 --> 00:08:25,599
and we use two ingredients<font color="#CCCCCC"> in perfect</font>

226
00:08:23,710 --> 00:08:27,520
proof homomorphic property of the

227
00:08:25,600 --> 00:08:29,650
<font color="#E5E5E5">function and the</font><font color="#CCCCCC"> biocide graph with</font>

228
00:08:27,520 --> 00:08:31,060
certain nice properties and<font color="#CCCCCC"> this way we</font>

229
00:08:29,650 --> 00:08:32,919
<font color="#E5E5E5">get another protocol where we extract</font>

230
00:08:31,060 --> 00:08:35,520
all<font color="#E5E5E5"> the free</font><font color="#CCCCCC"> images</font><font color="#E5E5E5"> there's a slight</font>

231
00:08:32,919 --> 00:08:39,280
cost in bigger sounds like but not much

232
00:08:35,520 --> 00:08:41,199
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> does this work well here's the</font>

233
00:08:39,280 --> 00:08:43,179
<font color="#E5E5E5">rabbit side graph there's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> n</font>

234
00:08:41,200 --> 00:08:46,180
<font color="#E5E5E5">notes on the left and notes on the right</font>

235
00:08:43,179 --> 00:08:47,920
and and and<font color="#E5E5E5"> remember was was the number</font>

236
00:08:46,180 --> 00:08:50,109
of free images to it that we want<font color="#CCCCCC"> to</font>

237
00:08:47,920 --> 00:08:52,150
prove<font color="#E5E5E5"> knowledge of so we take the images</font>

238
00:08:50,110 --> 00:08:54,290
that<font color="#E5E5E5"> we're given publicly and assign</font><font color="#CCCCCC"> one</font>

239
00:08:52,150 --> 00:08:57,649
<font color="#CCCCCC">of these to</font><font color="#E5E5E5"> each of the left side</font>

240
00:08:54,290 --> 00:08:59,990
note and then to the<font color="#CCCCCC"> right hand side</font>

241
00:08:57,649 --> 00:09:02,720
<font color="#E5E5E5">note we will to each</font><font color="#CCCCCC"> right-hand side</font><font color="#E5E5E5"> no</font>

242
00:08:59,990 --> 00:09:04,970
we will we will<font color="#E5E5E5"> assign the sum of the Y</font>

243
00:09:02,720 --> 00:09:06,620
<font color="#CCCCCC">values that come from</font><font color="#E5E5E5"> from the other</font>

244
00:09:04,970 --> 00:09:09,320
side right so this is<font color="#E5E5E5"> complete</font><font color="#CCCCCC"> as well</font>

245
00:09:06,620 --> 00:09:11,899
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the top right there gets</font><font color="#CCCCCC"> white</font>

246
00:09:09,320 --> 00:09:15,290
<font color="#CCCCCC">Y 1 plus y 3 plus</font><font color="#E5E5E5"> y and</font><font color="#CCCCCC"> assigned because</font>

247
00:09:11,899 --> 00:09:17,440
<font color="#CCCCCC">it comes</font><font color="#E5E5E5"> it's hit by by those</font><font color="#CCCCCC"> values</font>

248
00:09:15,290 --> 00:09:20,240
from from from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> left hand side</font><font color="#CCCCCC"> okay</font>

249
00:09:17,440 --> 00:09:22,310
good<font color="#E5E5E5"> so now the idea</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use the</font>

250
00:09:20,240 --> 00:09:24,680
imperfect<font color="#E5E5E5"> proof on all values on the</font>

251
00:09:22,310 --> 00:09:27,199
left and also all values on the right

252
00:09:24,680 --> 00:09:28,670
<font color="#E5E5E5">and remember</font><font color="#CCCCCC"> I told you</font><font color="#E5E5E5"> that this this</font>

253
00:09:27,199 --> 00:09:31,519
<font color="#E5E5E5">means that now if the</font><font color="#CCCCCC"> Truvia</font><font color="#E5E5E5"> survives</font>

254
00:09:28,670 --> 00:09:33,469
this we can extract from<font color="#E5E5E5"> him small</font>

255
00:09:31,519 --> 00:09:36,920
really small free images of almost<font color="#E5E5E5"> all</font>

256
00:09:33,470 --> 00:09:41,120
<font color="#E5E5E5">these feathers</font><font color="#CCCCCC"> so we'll</font><font color="#E5E5E5"> get something</font>

257
00:09:36,920 --> 00:09:43,579
<font color="#E5E5E5">like this so we can write say</font><font color="#CCCCCC"> y1 y2 y3</font>

258
00:09:41,120 --> 00:09:46,959
<font color="#E5E5E5">years</font><font color="#CCCCCC"> F of something and also similarly</font>

259
00:09:43,579 --> 00:09:49,250
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> other side and but we'll miss</font>

260
00:09:46,959 --> 00:09:52,880
some values let's let's just<font color="#CCCCCC"> say for</font>

261
00:09:49,250 --> 00:09:56,120
<font color="#CCCCCC">example we we might fail on let's say</font>

262
00:09:52,880 --> 00:09:57,410
one instance either side and this means

263
00:09:56,120 --> 00:09:59,149
we're<font color="#E5E5E5"> not done because we wanted a free</font>

264
00:09:57,410 --> 00:10:01,279
<font color="#E5E5E5">image of yn of course but the point is</font>

265
00:09:59,149 --> 00:10:04,339
<font color="#E5E5E5">that if the graph is nice enough we'll</font>

266
00:10:01,279 --> 00:10:07,279
still<font color="#E5E5E5"> be</font><font color="#CCCCCC"> in business</font><font color="#E5E5E5"> so if further the</font>

267
00:10:04,339 --> 00:10:09,440
point is here that<font color="#CCCCCC"> if since we've we</font>

268
00:10:07,279 --> 00:10:12,110
<font color="#E5E5E5">fail on</font><font color="#CCCCCC"> yn but if we can</font><font color="#E5E5E5"> find a place on</font>

269
00:10:09,440 --> 00:10:13,519
<font color="#E5E5E5">the right hand side where one we</font>

270
00:10:12,110 --> 00:10:17,480
succeeded<font color="#E5E5E5"> in getting free image on the</font>

271
00:10:13,519 --> 00:10:20,060
right hand<font color="#CCCCCC"> side and</font><font color="#E5E5E5"> secondly the target</font>

272
00:10:17,480 --> 00:10:23,389
value<font color="#E5E5E5"> Y in in this case is the only one</font>

273
00:10:20,060 --> 00:10:25,339
that<font color="#CCCCCC"> failed</font><font color="#E5E5E5"> in the neighborhood of this</font>

274
00:10:23,389 --> 00:10:26,750
guy on<font color="#E5E5E5"> the right so you see this is</font>

275
00:10:25,339 --> 00:10:30,500
<font color="#E5E5E5">exactly what happens on the right there</font>

276
00:10:26,750 --> 00:10:32,389
we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> y1 y3</font><font color="#CCCCCC"> we know P images the other</font>

277
00:10:30,500 --> 00:10:35,540
side we know we know<font color="#CCCCCC"> Priam itself of the</font>

278
00:10:32,389 --> 00:10:37,910
<font color="#E5E5E5">sum so</font><font color="#CCCCCC"> we can just solve</font><font color="#E5E5E5"> for y</font><font color="#CCCCCC"> and this</font>

279
00:10:35,540 --> 00:10:40,010
is<font color="#E5E5E5"> what we do one on the bottom here</font><font color="#CCCCCC"> so</font>

280
00:10:37,910 --> 00:10:42,319
for<font color="#CCCCCC"> yn and plug in</font><font color="#E5E5E5"> what we know about y1</font>

281
00:10:40,010 --> 00:10:44,329
<font color="#E5E5E5">y3 use homomorphic property and we've</font>

282
00:10:42,319 --> 00:10:46,189
managed<font color="#CCCCCC"> to write yn SF</font><font color="#E5E5E5"> of something so</font>

283
00:10:44,329 --> 00:10:48,560
we have a free image and furthermore

284
00:10:46,189 --> 00:10:50,269
<font color="#E5E5E5">just by triangle</font><font color="#CCCCCC"> inequality</font><font color="#E5E5E5"> since since</font>

285
00:10:48,560 --> 00:10:53,989
all those things were small to<font color="#CCCCCC"> begin</font>

286
00:10:50,269 --> 00:10:56,959
with then we can also infer a small<font color="#CCCCCC"> that</font>

287
00:10:53,990 --> 00:10:58,790
expression there so that's that's<font color="#E5E5E5"> great</font>

288
00:10:56,959 --> 00:11:01,069
and you<font color="#E5E5E5"> can probably also feel</font>

289
00:10:58,790 --> 00:11:02,540
immediately that this<font color="#CCCCCC"> this of course</font><font color="#E5E5E5"> is</font>

290
00:11:01,069 --> 00:11:03,849
going<font color="#CCCCCC"> to generalize if the graph is nice</font>

291
00:11:02,540 --> 00:11:06,319
enough<font color="#CCCCCC"> from this</font><font color="#E5E5E5"> particular sense</font>

292
00:11:03,850 --> 00:11:07,970
<font color="#E5E5E5">there's some obvious you know abstract</font>

293
00:11:06,319 --> 00:11:11,449
<font color="#E5E5E5">property we can demand from the graph</font>

294
00:11:07,970 --> 00:11:13,549
and this thing will always<font color="#E5E5E5"> work so let</font>

295
00:11:11,449 --> 00:11:15,409
me<font color="#E5E5E5"> just say what that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> so first of all</font>

296
00:11:13,549 --> 00:11:17,929
we want that the in<font color="#E5E5E5"> degree on the right</font>

297
00:11:15,409 --> 00:11:21,259
is order came and then the soundness

298
00:11:17,929 --> 00:11:22,608
like will<font color="#CCCCCC"> be or</font><font color="#E5E5E5"> okay also right because</font>

299
00:11:21,259 --> 00:11:24,109
we'll never<font color="#E5E5E5"> need to deal</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> some</font>

300
00:11:22,609 --> 00:11:24,470
<font color="#CCCCCC">of more than k things coming from</font><font color="#E5E5E5"> the</font>

301
00:11:24,109 --> 00:11:27,470
other<font color="#E5E5E5"> side</font>

302
00:11:24,470 --> 00:11:30,559
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> then we want something called a</font>

303
00:11:27,470 --> 00:11:31,909
strong unique neighbor<font color="#E5E5E5"> property this</font>

304
00:11:30,559 --> 00:11:33,108
gets a little<font color="#E5E5E5"> bit complicated but it's</font>

305
00:11:31,909 --> 00:11:34,519
<font color="#E5E5E5">not really</font><font color="#CCCCCC"> is it's just an</font><font color="#E5E5E5"> abstraction</font>

306
00:11:33,109 --> 00:11:36,979
<font color="#E5E5E5">of what</font><font color="#CCCCCC"> I what we</font><font color="#E5E5E5"> just said on</font><font color="#CCCCCC"> the</font>

307
00:11:34,519 --> 00:11:40,189
previous<font color="#E5E5E5"> slide so what we want is if we</font>

308
00:11:36,979 --> 00:11:43,129
take any set<font color="#CCCCCC"> of size K on the Left</font>

309
00:11:40,189 --> 00:11:46,939
capital a in a set of size K on the

310
00:11:43,129 --> 00:11:49,489
right<font color="#CCCCCC"> capital B then if I take in those</font>

311
00:11:46,939 --> 00:11:51,848
little a on the<font color="#CCCCCC"> right hand side</font><font color="#E5E5E5"> in that</font>

312
00:11:49,489 --> 00:11:54,859
subset<font color="#E5E5E5"> there there is a</font><font color="#CCCCCC"> node on the</font>

313
00:11:51,849 --> 00:11:57,139
<font color="#CCCCCC">right hand</font><font color="#E5E5E5"> side that saves us in the</font>

314
00:11:54,859 --> 00:11:59,720
sense that<font color="#E5E5E5"> if I take the</font><font color="#CCCCCC"> intersection of</font>

315
00:11:57,139 --> 00:12:01,789
my set<font color="#CCCCCC"> a and the neighborhood of be</font><font color="#E5E5E5"> up</font>

316
00:11:59,720 --> 00:12:04,669
there then a is the only thing<font color="#E5E5E5"> in that</font>

317
00:12:01,789 --> 00:12:06,439
<font color="#E5E5E5">intersection that's exactly what what</font>

318
00:12:04,669 --> 00:12:08,239
will save<font color="#E5E5E5"> the data because then we can</font>

319
00:12:06,439 --> 00:12:11,868
extract<font color="#E5E5E5"> the</font><font color="#CCCCCC"> preimage</font><font color="#E5E5E5"> survey when we use</font>

320
00:12:08,239 --> 00:12:13,970
this in the protocol<font color="#CCCCCC"> so so that that's</font>

321
00:12:11,869 --> 00:12:15,229
why ice traction will work the reason we

322
00:12:13,970 --> 00:12:16,639
call<font color="#CCCCCC"> it this way this</font><font color="#E5E5E5"> property is</font>

323
00:12:15,229 --> 00:12:18,529
<font color="#CCCCCC">because there</font><font color="#E5E5E5"> was already an</font><font color="#CCCCCC"> expander</font>

324
00:12:16,639 --> 00:12:20,749
<font color="#E5E5E5">graph theory and something called unique</font>

325
00:12:18,529 --> 00:12:22,789
<font color="#CCCCCC">dagger property which is kind of similar</font>

326
00:12:20,749 --> 00:12:25,220
<font color="#CCCCCC">to this but we call it</font><font color="#E5E5E5"> strong any type</font>

327
00:12:22,789 --> 00:12:27,019
of<font color="#CCCCCC"> property</font><font color="#E5E5E5"> because we we say there must</font>

328
00:12:25,220 --> 00:12:30,589
be this unique neighbor<font color="#CCCCCC"> even if we</font>

329
00:12:27,019 --> 00:12:33,229
exclude<font color="#E5E5E5"> this small subset</font><font color="#CCCCCC"> B on the right</font>

330
00:12:30,589 --> 00:12:37,309
<font color="#CCCCCC">hand side</font><font color="#E5E5E5"> you can still find a nice node</font>

331
00:12:33,229 --> 00:12:38,959
on the other side<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so now</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> course</font>

332
00:12:37,309 --> 00:12:42,319
we need to<font color="#E5E5E5"> build such graphs to make</font>

333
00:12:38,959 --> 00:12:43,459
this work<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> general related</font>

334
00:12:42,319 --> 00:12:45,738
to two graphs with with expansion

335
00:12:43,459 --> 00:12:48,018
properties but but no results don't<font color="#E5E5E5"> do</font>

336
00:12:45,739 --> 00:12:50,479
what<font color="#E5E5E5"> we want basically so so there are</font>

337
00:12:48,019 --> 00:12:52,369
various approaches to<font color="#CCCCCC"> fixing</font><font color="#E5E5E5"> this but</font>

338
00:12:50,479 --> 00:12:54,169
there<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> very direct</font><font color="#CCCCCC"> way to do this</font>

339
00:12:52,369 --> 00:12:57,470
<font color="#E5E5E5">just based on simple</font><font color="#CCCCCC"> universal hash</font>

340
00:12:54,169 --> 00:13:00,889
functions and<font color="#CCCCCC"> CEA's construction we take</font>

341
00:12:57,470 --> 00:13:05,930
we<font color="#CCCCCC"> take a prime p which is</font><font color="#E5E5E5"> bigger than</font>

342
00:13:00,889 --> 00:13:07,800
<font color="#CCCCCC">2k plus 1</font><font color="#E5E5E5"> but that much bigger hopefully</font>

343
00:13:05,930 --> 00:13:13,388
[Music]

344
00:13:07,800 --> 00:13:15,670
well<font color="#E5E5E5"> and then so we consider after the</font>

345
00:13:13,389 --> 00:13:17,620
<font color="#E5E5E5">field with P elements and a</font><font color="#CCCCCC"> member</font>

346
00:13:15,670 --> 00:13:19,300
<font color="#CCCCCC">eights in our in a member in our family</font>

347
00:13:17,620 --> 00:13:21,519
of<font color="#CCCCCC"> universalize</font><font color="#E5E5E5"> for instance is defined</font>

348
00:13:19,300 --> 00:13:24,910
by one<font color="#CCCCCC"> element one feel element and we</font>

349
00:13:21,519 --> 00:13:26,350
define H of a 0 and a 1 so the function

350
00:13:24,910 --> 00:13:27,879
<font color="#E5E5E5">Maps parents of</font><font color="#CCCCCC"> feel elements to a</font>

351
00:13:26,350 --> 00:13:30,759
single<font color="#E5E5E5"> field little bit and it's gonna</font>

352
00:13:27,879 --> 00:13:36,249
take a 0 and a 1 to<font color="#E5E5E5"> H times 0 plus a 1</font>

353
00:13:30,759 --> 00:13:38,230
<font color="#CCCCCC">ok and now the idea is</font><font color="#E5E5E5"> from this hash</font>

354
00:13:36,249 --> 00:13:40,360
function<font color="#E5E5E5"> and from the values there we</font>

355
00:13:38,230 --> 00:13:41,860
can define a set<font color="#E5E5E5"> of nodes on the left</font>

356
00:13:40,360 --> 00:13:44,860
which would simply be<font color="#E5E5E5"> pairs</font><font color="#CCCCCC"> or field</font>

357
00:13:41,860 --> 00:13:47,589
elements<font color="#E5E5E5"> and on the right we'll define</font>

358
00:13:44,860 --> 00:13:48,999
nodes by by pairs that<font color="#CCCCCC"> our hash function</font>

359
00:13:47,589 --> 00:13:50,319
and field element which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the same</font>

360
00:13:48,999 --> 00:13:52,329
thing<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course because hash functions</font>

361
00:13:50,319 --> 00:13:54,550
also<font color="#E5E5E5"> defined by single field elements so</font>

362
00:13:52,329 --> 00:13:57,248
I'm going<font color="#E5E5E5"> to get p-square notes on on</font>

363
00:13:54,550 --> 00:14:00,519
both sides right<font color="#E5E5E5"> and finally there will</font>

364
00:13:57,249 --> 00:14:03,910
<font color="#E5E5E5">be an edge from a node defined by a pair</font>

365
00:14:00,519 --> 00:14:07,439
a<font color="#E5E5E5"> C or a</font><font color="#CCCCCC"> 1/2 H comma</font><font color="#E5E5E5"> B exactly</font><font color="#CCCCCC"> if the</font>

366
00:14:03,910 --> 00:14:10,930
function H takes a 0 a 1 to<font color="#E5E5E5"> that value B</font>

367
00:14:07,439 --> 00:14:12,069
<font color="#CCCCCC">ok pretty</font><font color="#E5E5E5"> simple stuff</font><font color="#CCCCCC"> in diagrams it</font>

368
00:14:10,930 --> 00:14:15,370
looks like this<font color="#E5E5E5"> this is saying the</font><font color="#CCCCCC"> same</font>

369
00:14:12,069 --> 00:14:17,500
<font color="#E5E5E5">thing if I have this pair there on the</font>

370
00:14:15,370 --> 00:14:18,699
on the<font color="#E5E5E5"> left that's gonna that's</font><font color="#CCCCCC"> going to</font>

371
00:14:17,500 --> 00:14:22,059
be an extra bed so it's going to<font color="#E5E5E5"> be</font>

372
00:14:18,699 --> 00:14:25,599
exactly<font color="#CCCCCC"> if that equation</font><font color="#E5E5E5"> it's a 0 plus a</font>

373
00:14:22,059 --> 00:14:28,959
1 equals B is satisfied<font color="#E5E5E5"> so this way we</font>

374
00:14:25,600 --> 00:14:30,910
<font color="#CCCCCC">get a good graph where the</font><font color="#E5E5E5"> most 16 K</font>

375
00:14:28,959 --> 00:14:34,869
squared notes<font color="#E5E5E5"> it turns out on each side</font>

376
00:14:30,910 --> 00:14:36,759
<font color="#CCCCCC">an in degree is is order K so that</font>

377
00:14:34,870 --> 00:14:38,110
<font color="#E5E5E5">that's clear of course</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> immediately it</font>

378
00:14:36,759 --> 00:14:43,540
does from the<font color="#CCCCCC"> construction</font><font color="#E5E5E5"> right because</font>

379
00:14:38,110 --> 00:14:45,279
if there<font color="#CCCCCC"> is a node</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> H comma B if</font>

380
00:14:43,540 --> 00:14:48,279
there's a<font color="#E5E5E5"> node at all into that thing</font>

381
00:14:45,279 --> 00:14:51,699
<font color="#E5E5E5">that that equation</font><font color="#CCCCCC"> 8 0 a1 equals B must</font>

382
00:14:48,279 --> 00:14:53,470
be satisfied so<font color="#CCCCCC"> if I fix</font><font color="#E5E5E5"> H and B then</font>

383
00:14:51,699 --> 00:14:55,089
then that's<font color="#CCCCCC"> gonna be exactly</font><font color="#E5E5E5"> field size</font>

384
00:14:53,470 --> 00:14:58,110
solutions for that<font color="#CCCCCC"> equation</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font>

385
00:14:55,089 --> 00:15:01,839
that's gonna be<font color="#CCCCCC"> the</font><font color="#E5E5E5"> integrative course</font>

386
00:14:58,110 --> 00:15:02,920
strongly<font color="#CCCCCC"> neighbor property is is more</font>

387
00:15:01,839 --> 00:15:04,809
<font color="#E5E5E5">complicated you have to see the paper</font>

388
00:15:02,920 --> 00:15:06,610
for this but it's intuitively quite

389
00:15:04,809 --> 00:15:07,749
reasonable I think<font color="#E5E5E5"> right because it</font>

390
00:15:06,610 --> 00:15:10,449
follows of course from<font color="#E5E5E5"> the collision</font>

391
00:15:07,749 --> 00:15:13,769
<font color="#E5E5E5">probability of the hash function what's</font>

392
00:15:10,449 --> 00:15:15,878
going to<font color="#E5E5E5"> go one is that is that</font>

393
00:15:13,769 --> 00:15:18,490
basically<font color="#E5E5E5"> the hash function will take</font>

394
00:15:15,879 --> 00:15:19,910
any small subset on the<font color="#CCCCCC"> left-hand side</font>

395
00:15:18,490 --> 00:15:23,060
<font color="#E5E5E5">spread this out</font>

396
00:15:19,910 --> 00:15:25,490
most of the domain on<font color="#E5E5E5"> the other side so</font>

397
00:15:23,060 --> 00:15:27,979
it's<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> likely that you'll find in</font>

398
00:15:25,490 --> 00:15:30,440
<font color="#E5E5E5">fact quite a few notes on the</font><font color="#CCCCCC"> right-hand</font>

399
00:15:27,980 --> 00:15:33,259
<font color="#CCCCCC">side that</font><font color="#E5E5E5"> has this guy here as unique</font>

400
00:15:30,440 --> 00:15:35,569
<font color="#CCCCCC">neighbour so that means even if you</font>

401
00:15:33,259 --> 00:15:37,430
exclude a few things on the<font color="#CCCCCC"> right-hand</font>

402
00:15:35,569 --> 00:15:39,170
side<font color="#E5E5E5"> which we had to do then you'll</font>

403
00:15:37,430 --> 00:15:41,689
still find at least one<font color="#E5E5E5"> that that</font><font color="#CCCCCC"> then</font>

404
00:15:39,170 --> 00:15:43,370
<font color="#E5E5E5">will say that they in this way so so</font>

405
00:15:41,690 --> 00:15:45,680
it's basically a collision probability

406
00:15:43,370 --> 00:15:49,490
plus plus combinatoric<font color="#E5E5E5"> s-- and a few</font>

407
00:15:45,680 --> 00:15:52,489
<font color="#CCCCCC">unit about good</font>

408
00:15:49,490 --> 00:15:54,560
there is also<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> also relative</font>

409
00:15:52,490 --> 00:15:57,230
construction when we base ourselves<font color="#CCCCCC"> I</font>

410
00:15:54,560 --> 00:15:58,910
<font color="#CCCCCC">guess more on unknown results</font><font color="#E5E5E5"> so there</font>

411
00:15:57,230 --> 00:16:02,149
<font color="#E5E5E5">are certain known graphs that have very</font>

412
00:15:58,910 --> 00:16:03,920
good expansion properties<font color="#E5E5E5"> they're not</font>

413
00:16:02,149 --> 00:16:05,660
known to have excited what we need but

414
00:16:03,920 --> 00:16:08,149
<font color="#CCCCCC">we can take previous proof cilix and</font>

415
00:16:05,660 --> 00:16:09,529
adapt them<font color="#CCCCCC"> to get what we need</font><font color="#E5E5E5"> so it</font>

416
00:16:08,149 --> 00:16:11,089
turns out we<font color="#E5E5E5"> get something which doesn't</font>

417
00:16:09,529 --> 00:16:14,149
<font color="#E5E5E5">look very good at first sight at first</font>

418
00:16:11,089 --> 00:16:16,880
sight so<font color="#E5E5E5"> we get this time K cube notes</font>

419
00:16:14,149 --> 00:16:18,350
on both sides and we get<font color="#E5E5E5"> a strong you</font>

420
00:16:16,880 --> 00:16:21,800
<font color="#E5E5E5">need neighbor property the only</font><font color="#CCCCCC"> holds in</font>

421
00:16:18,350 --> 00:16:24,439
a<font color="#E5E5E5"> probabilistic sense</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> doesn't</font>

422
00:16:21,800 --> 00:16:26,329
<font color="#E5E5E5">sound very good but it turns out that</font>

423
00:16:24,439 --> 00:16:28,519
this<font color="#E5E5E5"> construction test is peculiar</font>

424
00:16:26,329 --> 00:16:30,769
property<font color="#E5E5E5"> that even if n is way too small</font>

425
00:16:28,519 --> 00:16:33,319
so it's much smaller<font color="#E5E5E5"> than K</font><font color="#CCCCCC"> cubed you</font>

426
00:16:30,769 --> 00:16:36,829
still get from it a protocol<font color="#CCCCCC"> that will</font>

427
00:16:33,319 --> 00:16:38,269
not take away<font color="#E5E5E5"> all the bad things which</font>

428
00:16:36,829 --> 00:16:40,550
we don't<font color="#E5E5E5"> know peerages but it will</font>

429
00:16:38,269 --> 00:16:42,319
reduce<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of unknown preimages</font>

430
00:16:40,550 --> 00:16:45,949
<font color="#E5E5E5">very much it's gonna be much smaller</font>

431
00:16:42,319 --> 00:16:49,160
than<font color="#CCCCCC"> before and what</font><font color="#E5E5E5"> this means again</font>

432
00:16:45,949 --> 00:16:50,990
very intuitively is that<font color="#E5E5E5"> I can start</font>

433
00:16:49,160 --> 00:16:52,759
with an<font color="#CCCCCC"> N</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> really too small</font><font color="#E5E5E5"> to</font>

434
00:16:50,990 --> 00:16:54,620
work<font color="#CCCCCC"> in the first</font><font color="#E5E5E5"> place</font><font color="#CCCCCC"> but III apply</font>

435
00:16:52,759 --> 00:16:57,019
this result first<font color="#E5E5E5"> this politic result</font>

436
00:16:54,620 --> 00:16:59,180
then I get<font color="#CCCCCC"> a much smaller number of</font>

437
00:16:57,019 --> 00:17:01,130
remaining<font color="#E5E5E5"> free images and I can apply a</font>

438
00:16:59,180 --> 00:17:02,660
<font color="#E5E5E5">scaled</font><font color="#CCCCCC"> down version of</font><font color="#E5E5E5"> the first result</font>

439
00:17:01,130 --> 00:17:05,750
<font color="#CCCCCC">to one with the hash function to get</font><font color="#E5E5E5"> rid</font>

440
00:17:02,660 --> 00:17:07,369
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> remaining things and this way but</font>

441
00:17:05,750 --> 00:17:10,069
<font color="#E5E5E5">this two-step process you can actually</font>

442
00:17:07,369 --> 00:17:12,530
<font color="#E5E5E5">get something where the overhead is over</font>

443
00:17:10,069 --> 00:17:15,020
<font color="#CCCCCC">1 and sounds like it's all ok but now it</font>

444
00:17:12,530 --> 00:17:18,349
<font color="#E5E5E5">only has to</font><font color="#CCCCCC"> be kids with</font><font color="#E5E5E5"> 1.5 to make</font>

445
00:17:15,020 --> 00:17:19,908
this work<font color="#E5E5E5"> and if you're thinking</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it</font>

446
00:17:18,349 --> 00:17:21,408
should<font color="#CCCCCC"> be possible to</font><font color="#E5E5E5"> do to do more</font>

447
00:17:19,909 --> 00:17:22,970
steps like this and maybe<font color="#E5E5E5"> you can get</font>

448
00:17:21,409 --> 00:17:25,699
<font color="#CCCCCC">the even smaller</font><font color="#E5E5E5"> and this is indeed</font><font color="#CCCCCC"> true</font>

449
00:17:22,970 --> 00:17:28,909
this<font color="#E5E5E5"> is not in this paper but but I'm</font>

450
00:17:25,699 --> 00:17:29,960
told<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Arland and and and his student</font>

451
00:17:28,909 --> 00:17:32,260
in Singapore<font color="#CCCCCC"> that this actually does</font>

452
00:17:29,960 --> 00:17:32,260
<font color="#E5E5E5">work</font>

453
00:17:32,300 --> 00:17:37,520
and I should<font color="#E5E5E5"> also say by the way that</font>

454
00:17:33,710 --> 00:17:39,110
that if<font color="#E5E5E5"> you want a graph that has</font>

455
00:17:37,520 --> 00:17:40,070
<font color="#E5E5E5">exactly those</font><font color="#CCCCCC"> prophecies</font><font color="#E5E5E5"> that I was</font>

456
00:17:39,110 --> 00:17:42,169
<font color="#E5E5E5">talking about the one</font><font color="#CCCCCC"> that was</font>

457
00:17:40,070 --> 00:17:45,770
constructed<font color="#CCCCCC"> from the hash function</font><font color="#E5E5E5"> one</font>

458
00:17:42,170 --> 00:17:48,020
can<font color="#CCCCCC"> show that you cannot get below n</font>

459
00:17:45,770 --> 00:17:50,090
square for such a graph so if you want

460
00:17:48,020 --> 00:17:52,129
to take this this this<font color="#E5E5E5"> approach and go</font>

461
00:17:50,090 --> 00:17:53,959
below<font color="#E5E5E5"> N squared you have</font><font color="#CCCCCC"> to do something</font>

462
00:17:52,130 --> 00:17:56,150
<font color="#CCCCCC">else some some probabilistic</font><font color="#E5E5E5"> things like</font>

463
00:17:53,960 --> 00:18:02,470
we did here<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> not personal</font>

464
00:17:56,150 --> 00:18:05,929
<font color="#CCCCCC">infinitely better</font><font color="#E5E5E5"> graphs there okay so</font>

465
00:18:02,470 --> 00:18:07,550
yes<font color="#E5E5E5"> that's almost it I should give all</font>

466
00:18:05,929 --> 00:18:09,500
my rank of an announcement<font color="#E5E5E5"> for an idea</font>

467
00:18:07,550 --> 00:18:11,928
that led us<font color="#CCCCCC"> to this and his</font><font color="#E5E5E5"> great result</font>

468
00:18:09,500 --> 00:18:14,160
<font color="#E5E5E5">and apart</font><font color="#CCCCCC"> from that that was what I had</font>

469
00:18:11,929 --> 00:18:17,869
<font color="#CCCCCC">to say so thank</font><font color="#E5E5E5"> you</font>

470
00:18:14,160 --> 00:18:17,869
[Applause]

