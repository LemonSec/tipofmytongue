1
00:00:00,030 --> 00:00:06,210
<font color="#E5E5E5">Thanks good morning everyone</font><font color="#CCCCCC"> my name is</font>

2
00:00:03,360 --> 00:00:08,790
<font color="#CCCCCC">Joanne</font><font color="#E5E5E5"> from University of Maryland today</font>

3
00:00:06,210 --> 00:00:10,260
<font color="#CCCCCC">I'm talking about faster security</font>

4
00:00:08,790 --> 00:00:12,450
<font color="#E5E5E5">computation in the synchro execution</font>

5
00:00:10,260 --> 00:00:16,650
<font color="#CCCCCC">setting it's a joint work with</font><font color="#E5E5E5"> Alex</font>

6
00:00:12,450 --> 00:00:19,198
<font color="#E5E5E5">Molotov and Jonathan had my</font><font color="#CCCCCC"> advisor</font>

7
00:00:16,650 --> 00:00:21,060
so let's first give have a high level

8
00:00:19,199 --> 00:00:23,340
<font color="#CCCCCC">view of two-party</font><font color="#E5E5E5"> computation</font>

9
00:00:21,060 --> 00:00:25,710
implementations so on the one hand<font color="#E5E5E5"> we</font>

10
00:00:23,340 --> 00:00:28,560
have<font color="#E5E5E5"> a lot of incantations and</font><font color="#CCCCCC"> systems</font>

11
00:00:25,710 --> 00:00:30,269
for<font color="#CCCCCC"> Tammy honest to PC</font><font color="#E5E5E5"> when and we have</font>

12
00:00:28,560 --> 00:00:32,820
developed a tons of<font color="#CCCCCC"> applications</font>

13
00:00:30,269 --> 00:00:35,160
including<font color="#CCCCCC"> privacy-preserving</font><font color="#E5E5E5"> machine</font>

14
00:00:32,820 --> 00:00:37,469
learning matrix factorization genomic

15
00:00:35,160 --> 00:00:39,510
computation and all this stuff<font color="#E5E5E5"> another</font>

16
00:00:37,469 --> 00:00:43,620
<font color="#CCCCCC">on the other</font><font color="#E5E5E5"> hand when we take a look at</font>

17
00:00:39,510 --> 00:00:47,309
the malicious to<font color="#CCCCCC"> VC we only have</font><font color="#E5E5E5"> a es</font>

18
00:00:43,620 --> 00:00:50,328
shower and<font color="#E5E5E5"> sha-256 and that's all so why</font>

19
00:00:47,309 --> 00:00:53,370
this<font color="#E5E5E5"> is the case so</font><font color="#CCCCCC"> we can summarize it</font>

20
00:00:50,329 --> 00:00:56,910
in like a complaint<font color="#CCCCCC"> so on the one hand</font>

21
00:00:53,370 --> 00:00:59,940
<font color="#E5E5E5">malicious to PC is much slower it's much</font>

22
00:00:56,910 --> 00:01:02,279
less efficient and the other hand it's

23
00:00:59,940 --> 00:01:04,649
<font color="#CCCCCC">very hard to scale to</font><font color="#E5E5E5"> a large input and</font>

24
00:01:02,280 --> 00:01:07,229
when we actually<font color="#E5E5E5"> according to our</font>

25
00:01:04,650 --> 00:01:09,049
experience<font color="#CCCCCC"> when we directly scary to a</font>

26
00:01:07,229 --> 00:01:12,060
large input it becomes much much slower

27
00:01:09,049 --> 00:01:14,460
<font color="#CCCCCC">so in this work we want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a partially</font>

28
00:01:12,060 --> 00:01:16,770
<font color="#CCCCCC">addresses</font><font color="#E5E5E5"> to point and make it better</font>

29
00:01:14,460 --> 00:01:18,960
<font color="#E5E5E5">so let me first have</font><font color="#CCCCCC"> a some</font><font color="#E5E5E5"> kind of a</font>

30
00:01:16,770 --> 00:01:22,110
<font color="#E5E5E5">high-level view</font><font color="#CCCCCC"> of the previous</font>

31
00:01:18,960 --> 00:01:25,559
paradigms for<font color="#CCCCCC"> two PC so we have circuit</font>

32
00:01:22,110 --> 00:01:27,570
level<font color="#E5E5E5"> can choose which is based on like</font>

33
00:01:25,560 --> 00:01:29,460
<font color="#CCCCCC">copper circuit we are</font><font color="#E5E5E5"> going to current</font>

34
00:01:27,570 --> 00:01:34,589
chosen circuit level<font color="#CCCCCC"> it's start with</font>

35
00:01:29,460 --> 00:01:36,720
<font color="#CCCCCC">linear Pinkas</font><font color="#E5E5E5"> at 2007 and so the most</font>

36
00:01:34,590 --> 00:01:39,689
<font color="#E5E5E5">rigorous and the line of work is able to</font>

37
00:01:36,720 --> 00:01:42,179
achieve row number of circuit with Rose

38
00:01:39,689 --> 00:01:44,449
its status codes occurred here parameter

39
00:01:42,180 --> 00:01:50,549
we also have killed level current choose

40
00:01:44,450 --> 00:01:52,470
start with and TCC o 9<font color="#CCCCCC"> so this line of</font>

41
00:01:50,549 --> 00:01:54,990
work<font color="#CCCCCC"> is also</font><font color="#E5E5E5"> known as Lego and we also</font>

42
00:01:52,470 --> 00:01:56,939
have other protocols for the amortized

43
00:01:54,990 --> 00:01:59,699
setting and the<font color="#E5E5E5"> pre-processing setting</font>

44
00:01:56,939 --> 00:02:02,100
so in this paper<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this work we focus</font>

45
00:01:59,700 --> 00:02:04,290
<font color="#E5E5E5">on the circuit circuit level</font><font color="#CCCCCC"> current</font>

46
00:02:02,100 --> 00:02:06,839
choose and we notice that<font color="#E5E5E5"> for our</font>

47
00:02:04,290 --> 00:02:08,759
previous<font color="#E5E5E5"> work we either need a large</font>

48
00:02:06,840 --> 00:02:11,489
<font color="#E5E5E5">number of public key is proportional to</font>

49
00:02:08,758 --> 00:02:13,380
<font color="#E5E5E5">the import</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> we need</font><font color="#CCCCCC"> another execution</font>

50
00:02:11,489 --> 00:02:15,150
<font color="#E5E5E5">of a two piece the portico</font>

51
00:02:13,380 --> 00:02:19,560
that is in that<font color="#E5E5E5"> is outside of the</font>

52
00:02:15,150 --> 00:02:22,260
current current<font color="#E5E5E5"> not out of this protocol</font>

53
00:02:19,560 --> 00:02:24,210
<font color="#E5E5E5">to do the imported recovery so here in</font>

54
00:02:22,260 --> 00:02:26,730
<font color="#E5E5E5">our work we</font><font color="#CCCCCC"> are able to</font><font color="#E5E5E5"> reduce</font><font color="#CCCCCC"> the</font>

55
00:02:24,210 --> 00:02:28,500
number<font color="#CCCCCC"> of public key to kappa which is</font>

56
00:02:26,730 --> 00:02:30,359
essentially what you always<font color="#E5E5E5"> need for the</font>

57
00:02:28,500 --> 00:02:33,990
base<font color="#CCCCCC"> dhoti and</font><font color="#E5E5E5"> also we don't need</font>

58
00:02:30,360 --> 00:02:38,430
additional to be the protocol so let<font color="#E5E5E5"> me</font>

59
00:02:33,990 --> 00:02:40,860
start with<font color="#CCCCCC"> a semi honest to</font><font color="#E5E5E5"> PT protocol</font>

60
00:02:38,430 --> 00:02:42,510
based on carbon<font color="#E5E5E5"> circuit so let's assume</font>

61
00:02:40,860 --> 00:02:44,160
<font color="#CCCCCC">that Alice</font><font color="#E5E5E5"> and Bob want to compute a</font>

62
00:02:42,510 --> 00:02:47,100
function with only<font color="#E5E5E5"> one input and when</font>

63
00:02:44,160 --> 00:02:49,500
our<font color="#E5E5E5"> by input from each side</font><font color="#CCCCCC"> and one</font>

64
00:02:47,100 --> 00:02:51,780
output<font color="#CCCCCC"> so the first step is to compute a</font>

65
00:02:49,500 --> 00:02:55,470
<font color="#CCCCCC">copper circuit with its related car both</font>

66
00:02:51,780 --> 00:02:58,470
keys so here the<font color="#E5E5E5"> solid lines solid parts</font>

67
00:02:55,470 --> 00:03:01,650
are for one<font color="#CCCCCC"> bit and</font><font color="#E5E5E5"> the empty parts are</font>

68
00:02:58,470 --> 00:03:05,100
for<font color="#CCCCCC"> zero bead so Alice can first tender</font>

69
00:03:01,650 --> 00:03:07,530
<font color="#CCCCCC">the Garber circuit sent the labels</font>

70
00:03:05,100 --> 00:03:10,170
corresponding to here to her<font color="#E5E5E5"> own input</font>

71
00:03:07,530 --> 00:03:13,110
and then they can do a porthole<font color="#E5E5E5"> called</font>

72
00:03:10,170 --> 00:03:14,730
<font color="#E5E5E5">oblivious transfer the</font><font color="#CCCCCC"> college Natsume</font>

73
00:03:13,110 --> 00:03:16,500
very nice<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a box they are</font>

74
00:03:14,730 --> 00:03:19,200
<font color="#E5E5E5">supposed to be a quick box around of</font>

75
00:03:16,500 --> 00:03:22,200
<font color="#E5E5E5">leaders transfer and then the the</font>

76
00:03:19,200 --> 00:03:24,750
protocol allows<font color="#E5E5E5"> Bob to learn he</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> only</font>

77
00:03:22,200 --> 00:03:27,359
<font color="#CCCCCC">Bo and without</font><font color="#E5E5E5"> letting Alice to know the</font>

78
00:03:24,750 --> 00:03:30,120
value of y and then Bob can just

79
00:03:27,360 --> 00:03:32,760
evaluate this<font color="#E5E5E5"> and get the output however</font>

80
00:03:30,120 --> 00:03:35,940
this is awful obviously not maliciously

81
00:03:32,760 --> 00:03:38,640
<font color="#CCCCCC">secure for many various reasons</font><font color="#E5E5E5"> and so</font>

82
00:03:35,940 --> 00:03:41,340
one of the<font color="#E5E5E5"> paradigm is to</font><font color="#CCCCCC"> do to use</font>

83
00:03:38,640 --> 00:03:44,059
majority<font color="#E5E5E5"> based current rules so in this</font>

84
00:03:41,340 --> 00:03:46,830
case instead<font color="#CCCCCC"> of just and in one circuit</font>

85
00:03:44,060 --> 00:03:49,350
<font color="#E5E5E5">so alice is going to send about three</font>

86
00:03:46,830 --> 00:03:51,570
times row name<font color="#E5E5E5"> of circuit and they can</font>

87
00:03:49,350 --> 00:03:55,049
still<font color="#CCCCCC"> two are believers transfer to let</font>

88
00:03:51,570 --> 00:03:57,150
Bob learn like the<font color="#CCCCCC"> input labels and the</font>

89
00:03:55,050 --> 00:03:59,370
<font color="#CCCCCC">Barbican now like her to</font><font color="#E5E5E5"> a kind of a</font>

90
00:03:57,150 --> 00:04:01,310
current<font color="#CCCCCC"> choice and kind</font><font color="#E5E5E5"> of roughly check</font>

91
00:03:59,370 --> 00:04:04,110
half of the circuit whether they are

92
00:04:01,310 --> 00:04:06,300
correctly generated or not<font color="#E5E5E5"> so if when</font>

93
00:04:04,110 --> 00:04:08,160
any<font color="#E5E5E5"> of them are not correctly generated</font>

94
00:04:06,300 --> 00:04:12,090
then Bob knows<font color="#E5E5E5"> the Alice is cheating and</font>

95
00:04:08,160 --> 00:04:15,959
<font color="#CCCCCC">if not</font><font color="#E5E5E5"> bob has a</font><font color="#CCCCCC"> high-level idea that</font>

96
00:04:12,090 --> 00:04:18,930
<font color="#CCCCCC">Alice</font><font color="#E5E5E5"> is mostly being honest and then</font>

97
00:04:15,959 --> 00:04:20,640
like like<font color="#E5E5E5"> a day I mean</font><font color="#CCCCCC"> from high level</font>

98
00:04:18,930 --> 00:04:23,880
they can Bob can evaluate all the

99
00:04:20,640 --> 00:04:27,510
circuit that<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> not checked and</font>

100
00:04:23,880 --> 00:04:29,790
so they are superb is expecting<font color="#E5E5E5"> that</font>

101
00:04:27,510 --> 00:04:32,219
actually the majority<font color="#CCCCCC"> of the output is</font>

102
00:04:29,790 --> 00:04:34,710
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be the</font><font color="#E5E5E5"> correct output and the</font>

103
00:04:32,220 --> 00:04:36,600
<font color="#E5E5E5">mess actually works out that if we</font><font color="#CCCCCC"> kind</font>

104
00:04:34,710 --> 00:04:42,330
of send trees the<font color="#CCCCCC"> mouse through Rotom of</font>

105
00:04:36,600 --> 00:04:43,830
circuit everything works out yeah<font color="#E5E5E5"> so so</font>

106
00:04:42,330 --> 00:04:45,599
more recently<font color="#E5E5E5"> there's a new paradigm</font>

107
00:04:43,830 --> 00:04:48,630
called<font color="#E5E5E5"> info recovery based current</font>

108
00:04:45,600 --> 00:04:50,220
choose<font color="#E5E5E5"> so in this case the difference in</font>

109
00:04:48,630 --> 00:04:52,409
that<font color="#E5E5E5"> we only</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> run a mob circuit</font>

110
00:04:50,220 --> 00:04:54,810
which is<font color="#E5E5E5"> kind of what the best we can</font>

111
00:04:52,410 --> 00:04:56,790
get and in this case<font color="#CCCCCC"> Bob</font><font color="#E5E5E5"> we're still</font>

112
00:04:54,810 --> 00:04:58,920
going<font color="#E5E5E5"> to evaluate</font><font color="#CCCCCC"> other circuit and some</font>

113
00:04:56,790 --> 00:05:01,730
of them is going to<font color="#E5E5E5"> give some other</font>

114
00:04:58,920 --> 00:05:04,080
result<font color="#E5E5E5"> that is the flipped so it</font>

115
00:05:01,730 --> 00:05:06,960
essentially means<font color="#E5E5E5"> that Bob is</font><font color="#CCCCCC"> able to</font>

116
00:05:04,080 --> 00:05:09,000
catch<font color="#CCCCCC"> both of the labels for one of the</font>

117
00:05:06,960 --> 00:05:12,120
wire<font color="#E5E5E5"> and then they are going to run</font><font color="#CCCCCC"> a</font>

118
00:05:09,000 --> 00:05:14,130
protocol<font color="#CCCCCC"> something that Bob can inputs</font>

119
00:05:12,120 --> 00:05:17,010
the evidence that<font color="#E5E5E5"> alice is not behaving</font>

120
00:05:14,130 --> 00:05:19,200
<font color="#E5E5E5">correctly and the protocol we</font><font color="#CCCCCC"> are</font>

121
00:05:17,010 --> 00:05:22,230
<font color="#CCCCCC">allowed this small</font><font color="#E5E5E5"> box import</font><font color="#CCCCCC"> coveri</font>

122
00:05:19,200 --> 00:05:24,870
<font color="#E5E5E5">violet and Bob to learn the</font><font color="#CCCCCC"> Alice in</font>

123
00:05:22,230 --> 00:05:28,020
products<font color="#E5E5E5"> and then pop can compute the</font>

124
00:05:24,870 --> 00:05:30,300
function directly locally so in this

125
00:05:28,020 --> 00:05:32,539
case we just<font color="#E5E5E5"> need to current in that at</font>

126
00:05:30,300 --> 00:05:34,590
least<font color="#CCCCCC"> one of the circuit is good</font>

127
00:05:32,540 --> 00:05:37,500
therefore we<font color="#E5E5E5"> need like a much less</font>

128
00:05:34,590 --> 00:05:38,940
circuit we just need<font color="#CCCCCC"> wrote circuit so</font>

129
00:05:37,500 --> 00:05:41,280
there<font color="#E5E5E5"> are more they are mostly country</font>

130
00:05:38,940 --> 00:05:44,790
common issues in<font color="#CCCCCC"> these kind of protocols</font>

131
00:05:41,280 --> 00:05:46,859
lines to how to design<font color="#E5E5E5"> efficient import</font>

132
00:05:44,790 --> 00:05:48,240
<font color="#E5E5E5">Co I just shown and also they are also</font>

133
00:05:46,860 --> 00:05:51,020
attacks that we need to address

134
00:05:48,240 --> 00:05:55,770
<font color="#E5E5E5">efficiently so I will first talk about</font>

135
00:05:51,020 --> 00:05:58,650
<font color="#CCCCCC">imported recovery yeah so input recovery</font>

136
00:05:55,770 --> 00:06:00,930
this little box again please<font color="#E5E5E5"> imagine and</font>

137
00:05:58,650 --> 00:06:02,969
there<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> creepox</font><font color="#E5E5E5"> around so private</font>

138
00:06:00,930 --> 00:06:05,460
prior works either require a large

139
00:06:02,970 --> 00:06:09,330
number<font color="#CCCCCC"> of public</font><font color="#E5E5E5"> key operations or need</font>

140
00:06:05,460 --> 00:06:11,969
another<font color="#E5E5E5"> malicious to</font><font color="#CCCCCC"> PC portico to come</font>

141
00:06:09,330 --> 00:06:14,940
<font color="#CCCCCC">through this info recovery so in this</font>

142
00:06:11,970 --> 00:06:17,190
paper we<font color="#E5E5E5"> will so we design a new</font>

143
00:06:14,940 --> 00:06:19,530
protocol that is based on<font color="#CCCCCC"> TDH and it</font>

144
00:06:17,190 --> 00:06:21,870
just<font color="#CCCCCC"> requires</font><font color="#E5E5E5"> six exponentiation per</font>

145
00:06:19,530 --> 00:06:24,869
circuit and then like four of them is

146
00:06:21,870 --> 00:06:27,660
fixed<font color="#E5E5E5"> based</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> and so from</font><font color="#CCCCCC"> the</font>

147
00:06:24,870 --> 00:06:32,370
<font color="#CCCCCC">high-level idea</font><font color="#E5E5E5"> so it's kind of follows</font>

148
00:06:27,660 --> 00:06:36,150
the<font color="#CCCCCC"> non interactive 2pz</font><font color="#E5E5E5"> portico</font><font color="#CCCCCC"> by a NPR</font>

149
00:06:32,370 --> 00:06:36,820
actually so<font color="#E5E5E5"> so first the alice is going</font>

150
00:06:36,150 --> 00:06:38,950
to<font color="#E5E5E5"> have</font>

151
00:06:36,820 --> 00:06:41,200
keys and<font color="#E5E5E5"> seed for each of the circuit</font>

152
00:06:38,950 --> 00:06:43,479
and<font color="#E5E5E5"> he's going</font><font color="#CCCCCC"> to use so all the</font>

153
00:06:41,200 --> 00:06:47,260
randomness that<font color="#CCCCCC"> I derive from the seed</font>

154
00:06:43,480 --> 00:06:49,120
and<font color="#E5E5E5"> the stuff that the that is supposed</font>

155
00:06:47,260 --> 00:06:51,909
to<font color="#E5E5E5"> be learned from the evaluation</font>

156
00:06:49,120 --> 00:06:53,680
circuit is encrypted<font color="#E5E5E5"> by the key</font><font color="#CCCCCC"> so they</font>

157
00:06:51,910 --> 00:06:56,200
are going<font color="#E5E5E5"> to rob</font><font color="#CCCCCC"> leavers transfer such</font>

158
00:06:53,680 --> 00:06:57,880
that<font color="#E5E5E5"> pop knows the key for the</font>

159
00:06:56,200 --> 00:07:03,099
evaluation circuit and knows the seed

160
00:06:57,880 --> 00:07:05,320
for the check circuit and<font color="#E5E5E5"> well I mean</font><font color="#CCCCCC"> so</font>

161
00:07:03,100 --> 00:07:08,020
very<font color="#E5E5E5"> different from other previous works</font>

162
00:07:05,320 --> 00:07:10,270
we<font color="#CCCCCC"> are going to let Alice Rob leavers</font>

163
00:07:08,020 --> 00:07:12,940
<font color="#E5E5E5">transfer where</font><font color="#CCCCCC"> Alice is</font><font color="#E5E5E5"> the receiver</font><font color="#CCCCCC"> and</font>

164
00:07:10,270 --> 00:07:16,479
<font color="#E5E5E5">Bob sends some random labels m0 and m1</font>

165
00:07:12,940 --> 00:07:19,120
<font color="#CCCCCC">and then after after after we are done</font>

166
00:07:16,480 --> 00:07:22,810
<font color="#CCCCCC">with this once</font><font color="#E5E5E5"> for each of the circuit</font>

167
00:07:19,120 --> 00:07:26,170
<font color="#CCCCCC">Alice</font><font color="#E5E5E5"> is going to kind of mask the input</font>

168
00:07:22,810 --> 00:07:27,780
mask of the random labels<font color="#CCCCCC"> she received</font>

169
00:07:26,170 --> 00:07:30,730
in the previous table<font color="#E5E5E5"> this transfer</font>

170
00:07:27,780 --> 00:07:33,669
understand the encryption of this mask

171
00:07:30,730 --> 00:07:36,160
value so in some sense this is<font color="#E5E5E5"> in</font>

172
00:07:33,670 --> 00:07:38,830
somewhere<font color="#E5E5E5"> some sense</font><font color="#CCCCCC"> came--</font><font color="#E5E5E5"> commitment</font>

173
00:07:36,160 --> 00:07:40,810
to the<font color="#CCCCCC"> axe because Alice's does</font><font color="#E5E5E5"> not know</font>

174
00:07:38,830 --> 00:07:43,060
the other label so<font color="#CCCCCC"> he/she cannot</font><font color="#E5E5E5"> really</font>

175
00:07:40,810 --> 00:07:44,950
flip the label and the power can only

176
00:07:43,060 --> 00:07:47,830
<font color="#E5E5E5">get such value for the evaluation</font>

177
00:07:44,950 --> 00:07:50,920
circuit<font color="#E5E5E5"> but not the check circuit after</font>

178
00:07:47,830 --> 00:07:52,919
<font color="#CCCCCC">that they can run a like</font><font color="#E5E5E5"> like the</font>

179
00:07:50,920 --> 00:07:56,050
remaining part of the protocol and<font color="#CCCCCC"> the</font>

180
00:07:52,920 --> 00:07:58,570
<font color="#CCCCCC">very</font><font color="#E5E5E5"> end they can run a small protocol</font>

181
00:07:56,050 --> 00:08:01,900
<font color="#E5E5E5">that is actually based on ETH such that</font>

182
00:07:58,570 --> 00:08:04,270
if if<font color="#E5E5E5"> the value of</font><font color="#CCCCCC"> Delta and</font><font color="#E5E5E5"> Omega</font><font color="#CCCCCC"> are</font>

183
00:08:01,900 --> 00:08:06,880
<font color="#E5E5E5">the same the den</font><font color="#CCCCCC"> pub can learn the see</font>

184
00:08:04,270 --> 00:08:08,830
it otherwise<font color="#CCCCCC"> probably nothing so here</font>

185
00:08:06,880 --> 00:08:12,130
so if problems the seed<font color="#E5E5E5"> I mean it means</font>

186
00:08:08,830 --> 00:08:15,099
that<font color="#CCCCCC"> Bob learns seed another another</font><font color="#E5E5E5"> key</font>

187
00:08:12,130 --> 00:08:17,170
for one of the circuit and and and at

188
00:08:15,100 --> 00:08:19,840
that point<font color="#E5E5E5"> then</font><font color="#CCCCCC"> pub can actually strip</font>

189
00:08:17,170 --> 00:08:22,180
out the<font color="#CCCCCC"> cube and</font><font color="#E5E5E5"> the stripper of the</font>

190
00:08:19,840 --> 00:08:24,909
strip of<font color="#E5E5E5"> the mask tool it to learn the</font>

191
00:08:22,180 --> 00:08:26,650
<font color="#CCCCCC">axe</font><font color="#E5E5E5"> so this is just a me honestly secure</font>

192
00:08:24,910 --> 00:08:29,650
and<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are more effort that you need</font>

193
00:08:26,650 --> 00:08:32,289
to do to make it maliciously secure

194
00:08:29,650 --> 00:08:34,870
however it turns out that everything can

195
00:08:32,289 --> 00:08:38,770
be<font color="#CCCCCC"> incorporated into the giant current</font>

196
00:08:34,870 --> 00:08:39,099
<font color="#E5E5E5">rules efficiently so MIDI</font><font color="#CCCCCC"> test see the</font>

197
00:08:38,770 --> 00:08:42,549
paper

198
00:08:39,099 --> 00:08:44,830
we're also<font color="#E5E5E5"> next issue is how to do this</font>

199
00:08:42,549 --> 00:08:47,349
<font color="#CCCCCC">selectively philia attack</font><font color="#E5E5E5"> so this is a</font>

200
00:08:44,830 --> 00:08:48,470
is<font color="#E5E5E5"> another like a new attack it's very</font>

201
00:08:47,350 --> 00:08:50,870
it's very like

202
00:08:48,470 --> 00:08:53,750
femoris and everybody know like this

203
00:08:50,870 --> 00:08:57,860
<font color="#CCCCCC">kind of attack so essentially the attack</font>

204
00:08:53,750 --> 00:09:01,550
<font color="#E5E5E5">is that the</font><font color="#CCCCCC"> cobbler can actually so when</font>

205
00:08:57,860 --> 00:09:04,610
when trying<font color="#E5E5E5"> to like let pop know the</font>

206
00:09:01,550 --> 00:09:06,949
input levels<font color="#CCCCCC"> karbala alleys can kind of</font>

207
00:09:04,610 --> 00:09:09,650
corrupt<font color="#E5E5E5"> when one side of the labels and</font>

208
00:09:06,950 --> 00:09:11,770
such that<font color="#CCCCCC"> Bob whether Bob can evaluate</font>

209
00:09:09,650 --> 00:09:14,420
the circuit depends on his own input

210
00:09:11,770 --> 00:09:17,780
because if<font color="#E5E5E5"> a lesson in this case if Y is</font>

211
00:09:14,420 --> 00:09:20,930
one<font color="#CCCCCC"> populist</font><font color="#E5E5E5"> solid line which is valid</font>

212
00:09:17,780 --> 00:09:23,240
but if<font color="#CCCCCC"> y zero</font><font color="#E5E5E5"> problems like a crab to</font>

213
00:09:20,930 --> 00:09:27,589
the red parts that are just<font color="#E5E5E5"> like a</font>

214
00:09:23,240 --> 00:09:30,140
<font color="#E5E5E5">garbage</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are so mostly the the</font>

215
00:09:27,590 --> 00:09:33,260
<font color="#E5E5E5">way to prevent</font><font color="#CCCCCC"> like the</font><font color="#E5E5E5"> philly attack is</font>

216
00:09:30,140 --> 00:09:34,819
to use<font color="#CCCCCC"> so-called probe probe matrix</font><font color="#E5E5E5"> so</font>

217
00:09:33,260 --> 00:09:37,730
you know following<font color="#CCCCCC"> i'm going to</font>

218
00:09:34,820 --> 00:09:40,490
introduce<font color="#E5E5E5"> our improved probe matrix it's</font>

219
00:09:37,730 --> 00:09:42,710
a kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> address like some heat and non</font>

220
00:09:40,490 --> 00:09:45,230
cryptographic<font color="#E5E5E5"> overhead that</font><font color="#CCCCCC"> is largely</font>

221
00:09:42,710 --> 00:09:48,410
ignored in the previous papers and for

222
00:09:45,230 --> 00:09:51,080
just like a<font color="#E5E5E5"> 64k</font><font color="#CCCCCC"> peach</font><font color="#E5E5E5"> input it actually</font>

223
00:09:48,410 --> 00:09:53,060
has a<font color="#CCCCCC"> 1000</font><font color="#E5E5E5"> times improvement in top in</font>

224
00:09:51,080 --> 00:09:56,630
terms<font color="#E5E5E5"> of the running time there are also</font>

225
00:09:53,060 --> 00:09:59,239
other<font color="#E5E5E5"> ways to to address this kind of</font>

226
00:09:56,630 --> 00:10:02,860
attack but<font color="#CCCCCC"> that requires a large number</font>

227
00:09:59,240 --> 00:10:07,130
<font color="#E5E5E5">of public keys so let me first recall</font>

228
00:10:02,860 --> 00:10:08,960
<font color="#CCCCCC">roopam matrix is a is a matrix and such</font>

229
00:10:07,130 --> 00:10:11,990
that if<font color="#CCCCCC"> you choose</font><font color="#E5E5E5"> if which was any</font>

230
00:10:08,960 --> 00:10:14,540
subset of the rows and<font color="#E5E5E5"> XOR them then</font>

231
00:10:11,990 --> 00:10:17,060
they<font color="#E5E5E5"> are at this row number of ones in</font>

232
00:10:14,540 --> 00:10:19,189
<font color="#E5E5E5">the result in the row so once we have</font>

233
00:10:17,060 --> 00:10:21,859
this<font color="#E5E5E5"> kind of road</font><font color="#CCCCCC"> from matrix</font><font color="#E5E5E5"> and the</font>

234
00:10:19,190 --> 00:10:25,070
given we have the input<font color="#CCCCCC"> why</font><font color="#E5E5E5"> we just need</font>

235
00:10:21,860 --> 00:10:28,310
to<font color="#E5E5E5"> find a random</font><font color="#CCCCCC"> y prime such that the</font>

236
00:10:25,070 --> 00:10:30,470
matrix<font color="#CCCCCC"> vector multiplication</font><font color="#E5E5E5"> holds so</font>

237
00:10:28,310 --> 00:10:32,119
once we have this this<font color="#CCCCCC"> is the old</font>

238
00:10:30,470 --> 00:10:36,050
protocol<font color="#E5E5E5"> that is not secure</font><font color="#CCCCCC"> again some</font>

239
00:10:32,120 --> 00:10:38,510
<font color="#E5E5E5">slightly attack we have y we have</font><font color="#CCCCCC"> e this</font>

240
00:10:36,050 --> 00:10:41,990
is e the public and<font color="#E5E5E5"> the y is known to</font>

241
00:10:38,510 --> 00:10:44,180
Bob so Bob can first select a random<font color="#E5E5E5"> Y</font>

242
00:10:41,990 --> 00:10:46,610
and the<font color="#E5E5E5"> field wide</font><font color="#CCCCCC"> into the oblivious</font>

243
00:10:44,180 --> 00:10:49,160
transfer and now the<font color="#CCCCCC"> carpal circuit and</font>

244
00:10:46,610 --> 00:10:51,410
instead<font color="#E5E5E5"> of computing F XY z--</font>

245
00:10:49,160 --> 00:10:53,150
it were first recover the real<font color="#E5E5E5"> input in</font>

246
00:10:51,410 --> 00:10:58,250
the circuit and then<font color="#E5E5E5"> to the current</font>

247
00:10:53,150 --> 00:11:01,920
without following computation so if the

248
00:10:58,250 --> 00:11:05,610
if the<font color="#CCCCCC"> rapport matrix</font><font color="#E5E5E5"> translate n number</font>

249
00:11:01,920 --> 00:11:08,430
<font color="#E5E5E5">into</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> input so previous works we say</font>

250
00:11:05,610 --> 00:11:10,110
that<font color="#E5E5E5"> okay so I need about M prime number</font>

251
00:11:08,430 --> 00:11:12,329
of OTS and<font color="#E5E5E5"> we are happy</font><font color="#CCCCCC"> because</font>

252
00:11:10,110 --> 00:11:15,990
computing the<font color="#CCCCCC"> Roper matrix is free</font>

253
00:11:12,329 --> 00:11:18,089
thanks to<font color="#CCCCCC"> 3xr however if you actually</font>

254
00:11:15,990 --> 00:11:20,940
<font color="#E5E5E5">calculate the right carefully actually</font>

255
00:11:18,089 --> 00:11:24,300
number of<font color="#CCCCCC"> XOR</font><font color="#E5E5E5"> it's quadratic for the</font>

256
00:11:20,940 --> 00:11:26,940
input so I mean<font color="#CCCCCC"> epsilon is free it's</font><font color="#E5E5E5"> a</font>

257
00:11:24,300 --> 00:11:30,089
writing instruction but it's still it's

258
00:11:26,940 --> 00:11:31,649
<font color="#CCCCCC">in</font><font color="#E5E5E5"> square and what's worse the roof the</font>

259
00:11:30,089 --> 00:11:34,350
size of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> open matrix</font><font color="#CCCCCC"> is also</font>

260
00:11:31,649 --> 00:11:36,209
<font color="#E5E5E5">quadratic so it means</font><font color="#CCCCCC"> that in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to</font>

261
00:11:34,350 --> 00:11:38,699
compute<font color="#E5E5E5"> the rope in order to do this</font>

262
00:11:36,209 --> 00:11:41,489
computation in<font color="#E5E5E5"> the circuit we need to</font>

263
00:11:38,699 --> 00:11:43,829
compute n square number of<font color="#CCCCCC"> X R and in</font>

264
00:11:41,490 --> 00:11:47,550
each step<font color="#CCCCCC"> we also need to look</font><font color="#E5E5E5"> up a n</font>

265
00:11:43,829 --> 00:11:51,029
square number<font color="#E5E5E5"> of size matrix to</font><font color="#CCCCCC"> find out</font>

266
00:11:47,550 --> 00:11:53,279
whether<font color="#E5E5E5"> we should the</font><font color="#CCCCCC"> extra</font><font color="#E5E5E5"> or not so</font>

267
00:11:51,029 --> 00:11:56,639
for<font color="#CCCCCC"> example if we have again</font><font color="#E5E5E5"> 64</font><font color="#CCCCCC"> K P</font>

268
00:11:53,279 --> 00:11:59,930
<font color="#E5E5E5">input it's about</font><font color="#CCCCCC"> 4 billion XOR operation</font>

269
00:11:56,639 --> 00:12:02,040
and the matrix of<font color="#E5E5E5"> 4 billion</font><font color="#CCCCCC"> peat</font>

270
00:11:59,930 --> 00:12:05,849
<font color="#E5E5E5">assuming that you have you are</font><font color="#CCCCCC"> packing</font>

271
00:12:02,040 --> 00:12:08,250
<font color="#E5E5E5">all that bit very compactly so this is</font>

272
00:12:05,850 --> 00:12:10,500
our next task<font color="#CCCCCC"> we want to reduce the</font><font color="#E5E5E5"> size</font>

273
00:12:08,250 --> 00:12:14,310
of this rope<font color="#CCCCCC"> for matrix</font><font color="#E5E5E5"> make it</font>

274
00:12:10,500 --> 00:12:17,279
efficient and still secure<font color="#E5E5E5"> so I mean</font>

275
00:12:14,310 --> 00:12:20,489
first<font color="#E5E5E5"> it's a first</font><font color="#CCCCCC"> idea is let's just</font>

276
00:12:17,279 --> 00:12:22,529
chunk off the unnecessary part so I mean

277
00:12:20,490 --> 00:12:24,120
so ordinarily it shouldn't be secure

278
00:12:22,529 --> 00:12:27,149
because<font color="#E5E5E5"> I mean we lose a lot of</font>

279
00:12:24,120 --> 00:12:28,800
<font color="#E5E5E5">randomness however so notice that if we</font>

280
00:12:27,149 --> 00:12:31,230
make<font color="#CCCCCC"> sure that each of</font><font color="#E5E5E5"> the small</font><font color="#CCCCCC"> cream</font>

281
00:12:28,800 --> 00:12:33,719
part is<font color="#CCCCCC"> due a rope from matrix</font><font color="#E5E5E5"> then the</font>

282
00:12:31,230 --> 00:12:35,399
large one we are we<font color="#E5E5E5"> just put</font><font color="#CCCCCC"> as put</font>

283
00:12:33,720 --> 00:12:38,430
aside everything<font color="#E5E5E5"> together is Stewart Rob</font>

284
00:12:35,399 --> 00:12:40,860
from matrix<font color="#E5E5E5"> this is because I mean if we</font>

285
00:12:38,430 --> 00:12:42,839
select any<font color="#E5E5E5"> number of rows it's either in</font>

286
00:12:40,860 --> 00:12:44,699
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> row for matrix which is fine or</font>

287
00:12:42,839 --> 00:12:47,579
we are they are<font color="#CCCCCC"> in different rope for</font>

288
00:12:44,699 --> 00:12:50,069
matrix which is even better because it

289
00:12:47,579 --> 00:12:52,319
won't have<font color="#CCCCCC"> any overlap</font><font color="#E5E5E5"> so now the</font>

290
00:12:50,069 --> 00:12:55,229
problem<font color="#CCCCCC"> really just reduced</font><font color="#E5E5E5"> to one</font>

291
00:12:52,319 --> 00:12:58,219
single<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> how to construct this</font>

292
00:12:55,230 --> 00:13:00,569
small<font color="#CCCCCC"> four matrix with the particulars a</font>

293
00:12:58,220 --> 00:13:02,160
particular size because we<font color="#CCCCCC"> can reduce</font>

294
00:13:00,569 --> 00:13:05,040
the same group<font color="#CCCCCC"> for matrix on this</font>

295
00:13:02,160 --> 00:13:08,819
diagonal<font color="#E5E5E5"> so now we have this small</font><font color="#CCCCCC"> root</font>

296
00:13:05,040 --> 00:13:12,660
<font color="#E5E5E5">for matrix so inspired by Linda and</font>

297
00:13:08,819 --> 00:13:14,640
River 915 we first add a identity<font color="#CCCCCC"> matrix</font>

298
00:13:12,660 --> 00:13:15,329
which<font color="#CCCCCC"> we place the first</font><font color="#E5E5E5"> part of the</font>

299
00:13:14,640 --> 00:13:18,660
random<font color="#CCCCCC"> matrix</font>

300
00:13:15,329 --> 00:13:22,799
identity matrix<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is actually very</font>

301
00:13:18,660 --> 00:13:25,410
nice in the analysis because<font color="#E5E5E5"> we now know</font>

302
00:13:22,799 --> 00:13:27,689
<font color="#CCCCCC">that if we just</font><font color="#E5E5E5"> saw like our number of</font>

303
00:13:25,410 --> 00:13:29,879
rows<font color="#E5E5E5"> we are currently that they are at</font>

304
00:13:27,689 --> 00:13:31,709
<font color="#CCCCCC">least L ones in the in the matrix</font>

305
00:13:29,879 --> 00:13:34,559
<font color="#E5E5E5">because the identity</font><font color="#CCCCCC"> matrix already</font>

306
00:13:31,709 --> 00:13:38,339
contribute you<font color="#E5E5E5"> our number of ones in</font>

307
00:13:34,559 --> 00:13:39,540
there<font color="#E5E5E5"> in the result so now the so when</font>

308
00:13:38,339 --> 00:13:42,239
we want to calculate the probability

309
00:13:39,540 --> 00:13:44,009
<font color="#CCCCCC">that this is the</font><font color="#E5E5E5"> wrote for matrix we</font>

310
00:13:42,239 --> 00:13:47,489
don't need to<font color="#E5E5E5"> consider the case where we</font>

311
00:13:44,009 --> 00:13:49,589
select more<font color="#CCCCCC"> than row number of rows row</font>

312
00:13:47,489 --> 00:13:52,920
<font color="#CCCCCC">name of rows because I mean</font><font color="#E5E5E5"> that's</font>

313
00:13:49,589 --> 00:13:54,420
<font color="#CCCCCC">current</font><font color="#E5E5E5"> in to be a true name of ones so</font>

314
00:13:52,920 --> 00:13:56,849
now we only<font color="#CCCCCC"> need to</font><font color="#E5E5E5"> consider</font><font color="#CCCCCC"> a case</font>

315
00:13:54,420 --> 00:13:58,889
<font color="#E5E5E5">where they are like smaller set where</font>

316
00:13:56,850 --> 00:14:02,399
the size of s is smaller than row<font color="#CCCCCC"> and</font>

317
00:13:58,889 --> 00:14:04,199
very nicely in even in this case the

318
00:14:02,399 --> 00:14:06,839
rope<font color="#E5E5E5"> the identity identity matrix</font>

319
00:14:04,199 --> 00:14:11,219
contribute a lot of<font color="#CCCCCC"> ones already so the</font>

320
00:14:06,839 --> 00:14:13,290
<font color="#CCCCCC">bun is</font><font color="#E5E5E5"> actually much tighter</font><font color="#CCCCCC"> so actually</font>

321
00:14:11,220 --> 00:14:15,720
after<font color="#CCCCCC"> we like</font><font color="#E5E5E5"> to find all the concrete</font>

322
00:14:13,290 --> 00:14:18,738
<font color="#E5E5E5">numbers and stuff</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is our final</font>

323
00:14:15,720 --> 00:14:22,319
construction<font color="#E5E5E5"> so we kind of chunk</font><font color="#CCCCCC"> all the</font>

324
00:14:18,739 --> 00:14:25,139
chunk of the<font color="#CCCCCC"> emphasize</font><font color="#E5E5E5"> into in two sizes</font>

325
00:14:22,319 --> 00:14:28,679
<font color="#E5E5E5">or into multiplication multiple of 220</font>

326
00:14:25,139 --> 00:14:32,249
32-bit and for each of<font color="#CCCCCC"> them we we</font><font color="#E5E5E5"> have</font>

327
00:14:28,679 --> 00:14:35,910
like we<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> blow-up of two in this</font>

328
00:14:32,249 --> 00:14:40,290
<font color="#E5E5E5">case okay so in compare compared to the</font>

329
00:14:35,910 --> 00:14:41,309
prior<font color="#CCCCCC"> past</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> we kind</font><font color="#E5E5E5"> of have a</font>

330
00:14:40,290 --> 00:14:44,939
thousand times

331
00:14:41,309 --> 00:14:48,480
<font color="#CCCCCC">giddup in terms of in terms of</font><font color="#E5E5E5"> the one</font>

332
00:14:44,939 --> 00:14:51,089
in time who is<font color="#E5E5E5"> like 65</font><font color="#CCCCCC"> k beat so notice</font>

333
00:14:48,480 --> 00:14:53,429
that<font color="#CCCCCC"> actually here so the cause of our</font>

334
00:14:51,089 --> 00:14:55,649
up for matrix is<font color="#CCCCCC"> actually much it's a</font>

335
00:14:53,429 --> 00:14:57,959
slightly higher than<font color="#E5E5E5"> the previous from</font>

336
00:14:55,649 --> 00:14:59,429
<font color="#E5E5E5">matrix but that is fine because you</font><font color="#CCCCCC"> can</font>

337
00:14:57,959 --> 00:15:02,849
see<font color="#E5E5E5"> actually the cost is dominated by</font>

338
00:14:59,429 --> 00:15:04,919
<font color="#E5E5E5">the</font><font color="#CCCCCC"> PI</font><font color="#E5E5E5"> by computing this giant probe</font>

339
00:15:02,850 --> 00:15:10,739
matrix<font color="#E5E5E5"> actually wrote some number of</font>

340
00:15:04,919 --> 00:15:13,110
times<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so the last</font><font color="#E5E5E5"> issue is to how</font>

341
00:15:10,739 --> 00:15:15,480
<font color="#E5E5E5">to enforce</font><font color="#CCCCCC"> importing consistency so</font>

342
00:15:13,110 --> 00:15:17,369
actually in the<font color="#E5E5E5"> import recovery kind of</font>

343
00:15:15,480 --> 00:15:20,279
paradigm there are two employed

344
00:15:17,369 --> 00:15:23,610
consistency<font color="#CCCCCC"> issues so why is that</font><font color="#E5E5E5"> how to</font>

345
00:15:20,279 --> 00:15:25,410
<font color="#E5E5E5">ensure that the import is we are</font><font color="#CCCCCC"> using</font>

346
00:15:23,610 --> 00:15:27,419
the same import across different circuit

347
00:15:25,410 --> 00:15:28,800
in a<font color="#E5E5E5"> cut and choose and also we want to</font>

348
00:15:27,419 --> 00:15:30,689
ensure that

349
00:15:28,800 --> 00:15:32,849
so when we do the<font color="#E5E5E5"> import recovery the</font>

350
00:15:30,690 --> 00:15:35,640
input is<font color="#CCCCCC"> the same as what we</font><font color="#E5E5E5"> embedded</font>

351
00:15:32,850 --> 00:15:41,940
<font color="#E5E5E5">into the current choose so from</font>

352
00:15:35,640 --> 00:15:44,100
<font color="#CCCCCC">high-level this</font><font color="#E5E5E5"> is the old version so</font>

353
00:15:41,940 --> 00:15:46,579
the problem that<font color="#E5E5E5"> this</font><font color="#CCCCCC"> axe can all be</font>

354
00:15:44,100 --> 00:15:51,390
<font color="#CCCCCC">different and we want</font><font color="#E5E5E5"> to ensure that</font>

355
00:15:46,579 --> 00:15:54,779
some consistency among them is true so

356
00:15:51,390 --> 00:15:57,899
<font color="#E5E5E5">so the</font><font color="#CCCCCC"> idea of prior work is to kind</font><font color="#E5E5E5"> of</font>

357
00:15:54,779 --> 00:16:00,810
construct a zero knowledge proof that

358
00:15:57,899 --> 00:16:02,610
takes on this input<font color="#E5E5E5"> as this takes this</font>

359
00:16:00,810 --> 00:16:04,500
<font color="#CCCCCC">axes input and the proof to Bob that</font>

360
00:16:02,610 --> 00:16:07,200
<font color="#CCCCCC">they are secure are not sorry they</font><font color="#E5E5E5"> are</font>

361
00:16:04,500 --> 00:16:09,899
consistent<font color="#E5E5E5"> in some</font><font color="#CCCCCC"> ways so it means that</font>

362
00:16:07,200 --> 00:16:12,089
so the intuition is<font color="#CCCCCC"> that I want</font><font color="#E5E5E5"> to</font>

363
00:16:09,899 --> 00:16:15,660
<font color="#CCCCCC">assure</font><font color="#E5E5E5"> that all these lines are</font>

364
00:16:12,089 --> 00:16:19,800
consistent so is it really is it really

365
00:16:15,660 --> 00:16:22,019
<font color="#E5E5E5">like necessary actually no so so in this</font>

366
00:16:19,800 --> 00:16:24,000
paper the<font color="#E5E5E5"> high level so the intuition is</font>

367
00:16:22,019 --> 00:16:26,279
<font color="#CCCCCC">that okay so we are</font><font color="#E5E5E5"> not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> enforce</font>

368
00:16:24,000 --> 00:16:29,399
this strong consistency<font color="#E5E5E5"> instead we just</font>

369
00:16:26,279 --> 00:16:31,320
want to enforce<font color="#CCCCCC"> that at least one</font><font color="#E5E5E5"> of the</font>

370
00:16:29,399 --> 00:16:33,660
coastal<font color="#CCCCCC"> kit</font><font color="#E5E5E5"> is consistent with the one</font>

371
00:16:31,320 --> 00:16:36,060
in<font color="#E5E5E5"> the input recovery and we want we</font>

372
00:16:33,660 --> 00:16:38,130
just<font color="#E5E5E5"> use whatever that is that</font><font color="#CCCCCC"> if we</font>

373
00:16:36,060 --> 00:16:42,270
extract from<font color="#E5E5E5"> the empirical recovery as</font>

374
00:16:38,130 --> 00:16:45,060
<font color="#CCCCCC">the import</font><font color="#E5E5E5"> that to define that as the</font>

375
00:16:42,270 --> 00:16:47,730
<font color="#E5E5E5">input of Alice and it turns out</font><font color="#CCCCCC"> that it</font>

376
00:16:45,060 --> 00:16:49,770
<font color="#CCCCCC">is much much better</font><font color="#E5E5E5"> especially when we</font>

377
00:16:47,730 --> 00:16:51,450
incorporates this<font color="#E5E5E5"> consistency with the</font>

378
00:16:49,770 --> 00:16:54,300
<font color="#E5E5E5">info recovery protocol I introduced</font>

379
00:16:51,450 --> 00:16:57,240
previously<font color="#E5E5E5"> because again this can</font><font color="#CCCCCC"> be</font>

380
00:16:54,300 --> 00:17:00,209
<font color="#E5E5E5">done</font><font color="#CCCCCC"> very efficiently in the</font><font color="#E5E5E5"> in current</font>

381
00:16:57,240 --> 00:17:05,730
<font color="#E5E5E5">choose all together with with the input</font>

382
00:17:00,209 --> 00:17:07,800
recovery<font color="#CCCCCC"> okay so I mean now we have</font>

383
00:17:05,730 --> 00:17:10,230
<font color="#CCCCCC">practical MVC of course we need</font><font color="#E5E5E5"> to</font>

384
00:17:07,800 --> 00:17:13,050
implement<font color="#CCCCCC"> the protocol so we implement a</font>

385
00:17:10,230 --> 00:17:15,870
protocol and it's as it's a part<font color="#E5E5E5"> of the</font>

386
00:17:13,050 --> 00:17:18,119
EMP toolkit and everybody is<font color="#CCCCCC"> welcome to</font>

387
00:17:15,869 --> 00:17:22,800
try<font color="#E5E5E5"> it so we try so we run the</font>

388
00:17:18,119 --> 00:17:25,469
<font color="#E5E5E5">experiment on a reasonable machine of of</font>

389
00:17:22,800 --> 00:17:27,240
this<font color="#CCCCCC"> Amazon in size but I mean however</font>

390
00:17:25,470 --> 00:17:28,950
which has<font color="#E5E5E5"> your single core so it doesn't</font>

391
00:17:27,240 --> 00:17:32,309
really<font color="#E5E5E5"> matter that much and we use AES</font>

392
00:17:28,950 --> 00:17:35,010
and I so network is about 2.3 gigabyte

393
00:17:32,309 --> 00:17:38,610
and<font color="#E5E5E5"> I mean all the</font><font color="#CCCCCC"> other experiment in</font>

394
00:17:35,010 --> 00:17:43,020
the following<font color="#E5E5E5"> assumes 40s that histogram</font>

395
00:17:38,610 --> 00:17:47,699
and<font color="#E5E5E5"> the 108 competition</font><font color="#CCCCCC"> perimeter okay</font>

396
00:17:43,020 --> 00:17:50,310
so first three examples<font color="#CCCCCC"> with various</font>

397
00:17:47,700 --> 00:17:52,710
<font color="#CCCCCC">size</font><font color="#E5E5E5"> the first month</font><font color="#CCCCCC"> every as the</font>

398
00:17:50,310 --> 00:17:56,639
circuit that everybody yours is a yes<font color="#CCCCCC"> it</font>

399
00:17:52,710 --> 00:17:58,980
sticks about<font color="#E5E5E5"> 65 minute second yeah</font>

400
00:17:56,640 --> 00:18:00,680
and for modular exponentiation of two

401
00:17:58,980 --> 00:18:03,450
thousand two thousand and beat it's a

402
00:18:00,680 --> 00:18:06,120
it's a much much much much much much

403
00:18:03,450 --> 00:18:09,180
larger circuit about with about<font color="#CCCCCC"> four</font>

404
00:18:06,120 --> 00:18:11,219
peelings<font color="#CCCCCC"> four billion and gate and I</font>

405
00:18:09,180 --> 00:18:14,010
mean we<font color="#E5E5E5"> take about five hours to run in</font>

406
00:18:11,220 --> 00:18:15,900
this case most<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> cause</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> for</font>

407
00:18:14,010 --> 00:18:18,390
the circuit is for<font color="#CCCCCC"> constant in the</font>

408
00:18:15,900 --> 00:18:21,000
circuit<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> also run another circuit</font>

409
00:18:18,390 --> 00:18:23,760
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> very wide and with</font>

410
00:18:21,000 --> 00:18:27,120
reasonable<font color="#CCCCCC"> taps for</font><font color="#E5E5E5"> this circuit it's a</font>

411
00:18:23,760 --> 00:18:30,330
so the so this<font color="#E5E5E5"> is a circuit that we can</font>

412
00:18:27,120 --> 00:18:32,550
to<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> one thousand integers each off</font>

413
00:18:30,330 --> 00:18:34,379
steady to beat so it's about the<font color="#CCCCCC"> ten</font>

414
00:18:32,550 --> 00:18:40,139
million<font color="#E5E5E5"> and gate circuit and takes</font><font color="#CCCCCC"> about</font>

415
00:18:34,380 --> 00:18:42,750
less than<font color="#CCCCCC"> a minute so</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is a kind</font>

416
00:18:40,140 --> 00:18:45,690
of some other experiment we do so in

417
00:18:42,750 --> 00:18:48,060
this case<font color="#CCCCCC"> we kind of fix the summer</font><font color="#E5E5E5"> we</font>

418
00:18:45,690 --> 00:18:50,040
<font color="#E5E5E5">fix input and output size and engage and</font>

419
00:18:48,060 --> 00:18:52,950
only change one<font color="#CCCCCC"> of the input and</font><font color="#E5E5E5"> see</font>

420
00:18:50,040 --> 00:18:56,550
like<font color="#E5E5E5"> how</font><font color="#CCCCCC"> our implement how our protocol</font>

421
00:18:52,950 --> 00:18:58,920
works along with like like in terms of

422
00:18:56,550 --> 00:19:01,620
each of the component and so and it is

423
00:18:58,920 --> 00:19:03,360
<font color="#CCCCCC">actually linear</font><font color="#E5E5E5"> for the input</font><font color="#CCCCCC"> and output</font>

424
00:19:01,620 --> 00:19:05,959
and<font color="#E5E5E5"> the circuit size you can see</font>

425
00:19:03,360 --> 00:19:08,399
<font color="#E5E5E5">actually so it takes about 20</font>

426
00:19:05,960 --> 00:19:11,820
<font color="#E5E5E5">microseconds per bit and about</font><font color="#CCCCCC"> four</font>

427
00:19:08,400 --> 00:19:15,180
<font color="#E5E5E5">microseconds and gate</font><font color="#CCCCCC"> and so it's a like</font>

428
00:19:11,820 --> 00:19:17,580
a<font color="#E5E5E5"> side-story that actually so this it is</font>

429
00:19:15,180 --> 00:19:19,740
this experiment that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> realized that</font>

430
00:19:17,580 --> 00:19:21,899
the cost of rope from a tree<font color="#E5E5E5"> is</font>

431
00:19:19,740 --> 00:19:23,880
nonlinear<font color="#CCCCCC"> its quadratic</font><font color="#E5E5E5"> because when we</font>

432
00:19:21,900 --> 00:19:26,610
run<font color="#E5E5E5"> this experiment we find that the</font>

433
00:19:23,880 --> 00:19:28,650
line when in<font color="#E5E5E5"> terms of the petrous input</font>

434
00:19:26,610 --> 00:19:32,969
is<font color="#E5E5E5"> actually it's not</font><font color="#CCCCCC"> alliance a</font>

435
00:19:28,650 --> 00:19:36,420
quadratic function okay so<font color="#E5E5E5"> compared</font><font color="#CCCCCC"> with</font>

436
00:19:32,970 --> 00:19:39,210
the prior work<font color="#E5E5E5"> because like like</font><font color="#CCCCCC"> a most</font>

437
00:19:36,420 --> 00:19:41,670
of the<font color="#CCCCCC"> work just</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do a yes</font><font color="#E5E5E5"> so we</font>

438
00:19:39,210 --> 00:19:45,270
<font color="#E5E5E5">compare against the</font><font color="#CCCCCC"> AES so in this case</font>

439
00:19:41,670 --> 00:19:47,010
we can see a trend<font color="#CCCCCC"> here that it's a it's</font>

440
00:19:45,270 --> 00:19:49,379
getting better<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> hoping that we</font><font color="#CCCCCC"> can</font>

441
00:19:47,010 --> 00:19:51,330
<font color="#CCCCCC">get we are getting even better from this</font>

442
00:19:49,380 --> 00:19:55,029
<font color="#E5E5E5">point</font>

443
00:19:51,330 --> 00:19:57,309
<font color="#E5E5E5">so so like concurrent and a subsequent</font>

444
00:19:55,029 --> 00:20:00,730
<font color="#CCCCCC">with</font><font color="#E5E5E5"> this work we</font><font color="#CCCCCC"> are we have tons of</font>

445
00:19:57,309 --> 00:20:03,340
more improvement to the<font color="#CCCCCC"> malicious to</font><font color="#E5E5E5"> PC</font>

446
00:20:00,730 --> 00:20:05,620
<font color="#E5E5E5">so we are</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> working on one of the</font>

447
00:20:03,340 --> 00:20:08,590
extension of the protocol<font color="#CCCCCC"> that support</font>

448
00:20:05,620 --> 00:20:10,120
random seed checking this<font color="#E5E5E5"> is also a</font><font color="#CCCCCC"> it</font>

449
00:20:08,590 --> 00:20:13,418
<font color="#CCCCCC">is also town</font><font color="#E5E5E5"> together</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> similar</font>

450
00:20:10,120 --> 00:20:16,449
<font color="#E5E5E5">ana-lucy and we also we are also able to</font>

451
00:20:13,419 --> 00:20:20,100
<font color="#E5E5E5">chop the chop the TTH assumption</font>

452
00:20:16,450 --> 00:20:23,259
<font color="#CCCCCC">saturday we only need a OTE</font><font color="#E5E5E5"> here and</font>

453
00:20:20,100 --> 00:20:25,240
like they are also<font color="#E5E5E5"> people like they are</font>

454
00:20:23,259 --> 00:20:27,460
also like concurrent and<font color="#CCCCCC"> they're like</font>

455
00:20:25,240 --> 00:20:29,230
more recent result<font color="#CCCCCC"> on Lego which</font>

456
00:20:27,460 --> 00:20:32,259
actually improves<font color="#E5E5E5"> the</font><font color="#CCCCCC"> functioning</font>

457
00:20:29,230 --> 00:20:35,679
function<font color="#CCCCCC"> dependent cost so for example</font>

458
00:20:32,259 --> 00:20:37,990
<font color="#CCCCCC">these</font><font color="#E5E5E5"> papers put most of the computation</font>

459
00:20:35,679 --> 00:20:39,279
to the face where the<font color="#CCCCCC"> two</font><font color="#E5E5E5"> parties does</font>

460
00:20:37,990 --> 00:20:44,460
<font color="#CCCCCC">not know what function they want to</font>

461
00:20:39,279 --> 00:20:47,350
compute and and however for this kind of

462
00:20:44,460 --> 00:20:50,830
protocols they all need a large<font color="#E5E5E5"> number</font>

463
00:20:47,350 --> 00:20:52,539
of memories because like a<font color="#CCCCCC"> lot of</font>

464
00:20:50,830 --> 00:20:55,019
memories that<font color="#CCCCCC"> is a kind of proportional</font>

465
00:20:52,539 --> 00:20:57,850
<font color="#E5E5E5">to the circuit size are even worse</font>

466
00:20:55,019 --> 00:20:59,320
however for the circuit<font color="#E5E5E5"> level</font><font color="#CCCCCC"> current</font>

467
00:20:57,850 --> 00:21:01,509
choose we don't really need a lot<font color="#E5E5E5"> of</font>

468
00:20:59,320 --> 00:21:03,820
<font color="#E5E5E5">memories it's everything can be</font>

469
00:21:01,509 --> 00:21:06,429
published and the of the memory

470
00:21:03,820 --> 00:21:08,769
footprint size is proposed is only

471
00:21:06,429 --> 00:21:11,529
proportional to the statistical security

472
00:21:08,769 --> 00:21:14,169
parameter<font color="#E5E5E5"> so for example for a pillion</font>

473
00:21:11,529 --> 00:21:16,299
<font color="#CCCCCC">size circuit the the size of the memory</font>

474
00:21:14,169 --> 00:21:18,220
you need to make<font color="#CCCCCC"> sure it is constant run</font>

475
00:21:16,299 --> 00:21:21,870
is is going<font color="#E5E5E5"> to be like hundreds of</font>

476
00:21:18,220 --> 00:21:26,200
gigabyte and<font color="#E5E5E5"> and as you want to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> disk</font>

477
00:21:21,870 --> 00:21:28,719
<font color="#CCCCCC">ok so that's all for my talk</font><font color="#E5E5E5"> and thanks</font>

478
00:21:26,200 --> 00:21:32,399
and here is the code<font color="#E5E5E5"> you can you can go</font>

479
00:21:28,720 --> 00:21:32,399
and try<font color="#E5E5E5"> and yeah</font>

480
00:21:36,590 --> 00:21:46,530
we have time for a quick<font color="#CCCCCC"> question when</font>

481
00:21:44,490 --> 00:21:49,650
<font color="#E5E5E5">you are talking about the</font><font color="#CCCCCC"> ROA parameter</font>

482
00:21:46,530 --> 00:21:51,090
matrix<font color="#E5E5E5"> - for the selected failure</font>

483
00:21:49,650 --> 00:21:54,930
attacks or against this<font color="#E5E5E5"> like a failure</font>

484
00:21:51,090 --> 00:22:01,560
<font color="#E5E5E5">attacks</font><font color="#CCCCCC"> there was this s I guess I was a</font>

485
00:21:54,930 --> 00:22:04,500
set but what<font color="#E5E5E5"> s is</font><font color="#CCCCCC"> s so it's it's kind of</font>

486
00:22:01,560 --> 00:22:08,120
<font color="#E5E5E5">between analysis you want to show that</font>

487
00:22:04,500 --> 00:22:11,280
for any subset<font color="#CCCCCC"> it's going to be fine</font>

488
00:22:08,120 --> 00:22:14,570
<font color="#CCCCCC">okay so that's</font><font color="#E5E5E5"> the set and then you need</font>

489
00:22:11,280 --> 00:22:17,310
<font color="#E5E5E5">to apply a union</font><font color="#CCCCCC"> bond across all set</font>

490
00:22:14,570 --> 00:22:19,800
yeah<font color="#E5E5E5"> and in this particular case because</font>

491
00:22:17,310 --> 00:22:21,659
we don't need<font color="#E5E5E5"> to consider like</font><font color="#CCCCCC"> said with</font>

492
00:22:19,800 --> 00:22:24,360
more than<font color="#CCCCCC"> roll</font><font color="#E5E5E5"> number more than row name</font>

493
00:22:21,660 --> 00:22:29,840
of<font color="#E5E5E5"> rose so it's like the Union</font><font color="#CCCCCC"> bond is</font>

494
00:22:24,360 --> 00:22:29,840
exponentially smaller thank you

495
00:22:32,060 --> 00:22:37,290
randomness<font color="#CCCCCC"> it comes from when which was</font>

496
00:22:34,830 --> 00:22:40,860
<font color="#CCCCCC">Y prime which was Y prime randomly</font><font color="#E5E5E5"> and</font>

497
00:22:37,290 --> 00:22:47,450
<font color="#E5E5E5">there is like a and have y equals to e</font>

498
00:22:40,860 --> 00:22:47,449
times y prime<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a public matrix yes yes</font>

499
00:22:51,920 --> 00:23:02,370
just curious you so so in<font color="#E5E5E5"> the yeah</font>

500
00:22:59,970 --> 00:23:05,190
<font color="#E5E5E5">thanks for the chance to give me to</font>

501
00:23:02,370 --> 00:23:06,989
advertise the framework so in the EMP

502
00:23:05,190 --> 00:23:11,340
<font color="#E5E5E5">talk here we also have a on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> fly</font>

503
00:23:06,990 --> 00:23:13,650
<font color="#E5E5E5">circuit compiler</font><font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> write so</font>

504
00:23:11,340 --> 00:23:15,899
it's like we have like<font color="#E5E5E5"> integers and the</font>

505
00:23:13,650 --> 00:23:18,120
<font color="#E5E5E5">floating point</font><font color="#CCCCCC"> and of all other stuff</font><font color="#E5E5E5"> so</font>

506
00:23:15,900 --> 00:23:20,330
I<font color="#E5E5E5"> build I build a small program in that</font>

507
00:23:18,120 --> 00:23:27,899
to compute modular exponentiation<font color="#E5E5E5"> and</font>

508
00:23:20,330 --> 00:23:29,370
it's directly yeah it's a<font color="#E5E5E5"> it's like</font>

509
00:23:27,900 --> 00:23:31,760
textbook version<font color="#CCCCCC"> of modular</font>

510
00:23:29,370 --> 00:23:31,760
exponentiation

