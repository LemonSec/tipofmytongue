1
00:00:00,030 --> 00:00:06,720
<font color="#E5E5E5">all right so right so I'm gonna talk</font>

2
00:00:04,680 --> 00:00:07,979
<font color="#CCCCCC">about</font><font color="#E5E5E5"> well the title the talk is</font>

3
00:00:06,720 --> 00:00:09,150
<font color="#CCCCCC">one-shot</font><font color="#E5E5E5"> verifiably encryption from</font>

4
00:00:07,980 --> 00:00:10,830
lattices if you don't care about

5
00:00:09,150 --> 00:00:12,929
verifiable encryption you're probably

6
00:00:10,830 --> 00:00:16,198
not<font color="#E5E5E5"> the only one so the talk is really</font>

7
00:00:12,929 --> 00:00:18,330
<font color="#E5E5E5">about</font><font color="#CCCCCC"> zero knowledge proves but it has</font>

8
00:00:16,199 --> 00:00:18,990
applications to verifiable encryption

9
00:00:18,330 --> 00:00:21,750
<font color="#CCCCCC">okay</font>

10
00:00:18,990 --> 00:00:24,000
so zero knowledge proof<font color="#E5E5E5"> are well they're</font>

11
00:00:21,750 --> 00:00:28,019
important<font color="#E5E5E5"> right so sort of the most</font>

12
00:00:24,000 --> 00:00:30,448
<font color="#E5E5E5">basic way to express that is you have</font>

13
00:00:28,019 --> 00:00:32,640
some relation<font color="#CCCCCC"> some</font><font color="#E5E5E5"> function f and f of s</font>

14
00:00:30,449 --> 00:00:34,410
<font color="#E5E5E5">equals</font><font color="#CCCCCC"> TS is your secret F and T are</font>

15
00:00:32,640 --> 00:00:35,790
public<font color="#E5E5E5"> and you want to prove that you</font>

16
00:00:34,410 --> 00:00:38,819
have<font color="#CCCCCC"> knowledge of s in zero knowledge</font>

17
00:00:35,790 --> 00:00:40,890
<font color="#E5E5E5">right so for example discrete log you</font>

18
00:00:38,820 --> 00:00:43,500
know<font color="#CCCCCC"> you have your generator G and your</font>

19
00:00:40,890 --> 00:00:45,360
your G to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> S</font><font color="#E5E5E5"> equals T for some secret</font>

20
00:00:43,500 --> 00:00:46,340
s you<font color="#E5E5E5"> want to prove that you</font><font color="#CCCCCC"> know s in</font>

21
00:00:45,360 --> 00:00:49,590
zero knowledge

22
00:00:46,340 --> 00:00:51,000
so<font color="#CCCCCC"> for</font><font color="#E5E5E5"> lattice problems</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> what</font>

23
00:00:49,590 --> 00:00:54,000
you know it looks like<font color="#CCCCCC"> for this</font><font color="#E5E5E5"> great</font>

24
00:00:51,000 --> 00:00:55,800
<font color="#CCCCCC">Lud exponentiations flattest problems</font>

25
00:00:54,000 --> 00:00:57,600
are like sis and<font color="#E5E5E5"> although</font><font color="#CCCCCC"> Yi what you</font>

26
00:00:55,800 --> 00:01:02,390
want to do is a is to prove knowledge<font color="#E5E5E5"> of</font>

27
00:00:57,600 --> 00:01:05,580
a short vector<font color="#E5E5E5"> s so that</font><font color="#CCCCCC"> F of</font><font color="#E5E5E5"> s equals</font><font color="#CCCCCC"> T</font>

28
00:01:02,390 --> 00:01:10,260
<font color="#CCCCCC">so here's an example alright</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font>

29
00:01:05,580 --> 00:01:13,020
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Syst problem i say yes so here the</font>

30
00:01:10,260 --> 00:01:15,810
function<font color="#E5E5E5"> f is sort of defined by this</font>

31
00:01:13,020 --> 00:01:18,990
matrix<font color="#E5E5E5"> a which around the matrix here</font>

32
00:01:15,810 --> 00:01:22,770
<font color="#E5E5E5">it's mod 17 so i'm given the matrix a</font>

33
00:01:18,990 --> 00:01:24,869
and a times s for some<font color="#E5E5E5"> secret s which is</font>

34
00:01:22,770 --> 00:01:27,479
T and I want to prove<font color="#E5E5E5"> in</font><font color="#CCCCCC"> zero-knowledge</font>

35
00:01:24,869 --> 00:01:31,829
<font color="#CCCCCC">that I know this vector with small</font>

36
00:01:27,479 --> 00:01:34,259
coefficients so that<font color="#E5E5E5"> a s equals T this</font>

37
00:01:31,829 --> 00:01:36,329
is<font color="#CCCCCC"> this problem elderly problem is you</font>

38
00:01:34,259 --> 00:01:37,229
know<font color="#E5E5E5"> very similar</font><font color="#CCCCCC"> so people</font><font color="#E5E5E5"> think</font>

39
00:01:36,329 --> 00:01:40,798
there's a difference there actually

40
00:01:37,229 --> 00:01:43,979
isn't<font color="#CCCCCC"> it's just the matrix has the ones</font>

41
00:01:40,799 --> 00:01:46,470
at<font color="#E5E5E5"> the end so you want to you're given</font>

42
00:01:43,979 --> 00:01:48,210
some matrix a which one part<font color="#E5E5E5"> of is</font>

43
00:01:46,470 --> 00:01:49,500
random one part is the<font color="#E5E5E5"> identity and you</font>

44
00:01:48,210 --> 00:01:52,679
want to prove<font color="#CCCCCC"> that you know a</font><font color="#E5E5E5"> short</font>

45
00:01:49,500 --> 00:01:54,240
vector a times s equals<font color="#E5E5E5"> some</font><font color="#CCCCCC"> team all</font>

46
00:01:52,680 --> 00:01:55,619
right so these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the kinds of things</font>

47
00:01:54,240 --> 00:01:56,699
you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to prove in zero</font><font color="#CCCCCC"> knowledge when</font>

48
00:01:55,619 --> 00:02:01,200
you're dealing<font color="#CCCCCC"> with lattice</font>

49
00:01:56,700 --> 00:02:03,719
constructions<font color="#CCCCCC"> so now I want to</font><font color="#E5E5E5"> move from</font>

50
00:02:01,200 --> 00:02:04,950
you know<font color="#E5E5E5"> now we will before the matrices</font>

51
00:02:03,719 --> 00:02:06,750
were over the integers<font color="#E5E5E5"> I want to move to</font>

52
00:02:04,950 --> 00:02:10,410
polynomial<font color="#E5E5E5"> ranks it's a little bit more</font>

53
00:02:06,750 --> 00:02:11,760
efficient and sort of our<font color="#E5E5E5"> results mostly</font>

54
00:02:10,410 --> 00:02:13,980
<font color="#E5E5E5">applied to them they are more</font>

55
00:02:11,760 --> 00:02:15,959
interesting in that framework

56
00:02:13,980 --> 00:02:18,899
so I'm gonna define a polynomial ring so

57
00:02:15,959 --> 00:02:21,420
this ring<font color="#E5E5E5"> R is just this polynomial zqx</font>

58
00:02:18,900 --> 00:02:23,340
<font color="#CCCCCC">so Z X mod X to the D</font><font color="#E5E5E5"> plus 1 it's a</font>

59
00:02:21,420 --> 00:02:25,530
polynomial<font color="#E5E5E5"> ring</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> is just</font>

60
00:02:23,340 --> 00:02:28,799
polynomials that have addition modulo Q

61
00:02:25,530 --> 00:02:30,720
but also the multiplication<font color="#E5E5E5"> you have you</font>

62
00:02:28,799 --> 00:02:33,690
reduced<font color="#E5E5E5"> things mark you and also mod X</font>

63
00:02:30,720 --> 00:02:35,910
the<font color="#E5E5E5"> D plus ones if you've you know seen</font>

64
00:02:33,690 --> 00:02:39,000
ideal<font color="#E5E5E5"> idea lattices will always work</font>

65
00:02:35,910 --> 00:02:41,430
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rings like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> so here's just</font>

66
00:02:39,000 --> 00:02:43,440
<font color="#E5E5E5">I'm just rewriting the</font><font color="#CCCCCC"> Syst problem over</font>

67
00:02:41,430 --> 00:02:45,540
the ring are now the<font color="#E5E5E5"> matrices instead of</font>

68
00:02:43,440 --> 00:02:47,099
these guys being integers they are

69
00:02:45,540 --> 00:02:48,660
elements in the<font color="#E5E5E5"> ring they're just</font>

70
00:02:47,099 --> 00:02:51,690
polynomials in<font color="#E5E5E5"> the ring so I want to</font>

71
00:02:48,660 --> 00:02:52,379
<font color="#E5E5E5">prove to you so given a and T and</font><font color="#CCCCCC"> F</font>

72
00:02:51,690 --> 00:02:54,060
<font color="#CCCCCC">a-arrest</font>

73
00:02:52,379 --> 00:02:55,980
<font color="#E5E5E5">I want to prove to you that I know small</font>

74
00:02:54,060 --> 00:03:02,280
talk<font color="#E5E5E5"> polynomials with small coefficients</font>

75
00:02:55,980 --> 00:03:04,230
so that a times s equals T<font color="#E5E5E5"> ok so now</font>

76
00:03:02,280 --> 00:03:07,079
constructing<font color="#CCCCCC"> zero knowledge proves right</font>

77
00:03:04,230 --> 00:03:09,209
so for discrete log relations<font color="#CCCCCC"> we know</font>

78
00:03:07,079 --> 00:03:11,250
how to do this this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Schnoor</font>

79
00:03:09,209 --> 00:03:12,900
protocol<font color="#E5E5E5"> right just a simple Sigma</font>

80
00:03:11,250 --> 00:03:14,459
protocol<font color="#E5E5E5"> and can be made</font><font color="#CCCCCC"> not</font>

81
00:03:12,900 --> 00:03:15,269
<font color="#E5E5E5">interactively at the theater of your</font>

82
00:03:14,459 --> 00:03:17,400
transformation

83
00:03:15,269 --> 00:03:20,010
so for lattice schemes<font color="#E5E5E5"> unfortunately</font>

84
00:03:17,400 --> 00:03:22,290
things become a<font color="#E5E5E5"> lot more complicated</font><font color="#CCCCCC"> and</font>

85
00:03:20,010 --> 00:03:23,880
<font color="#CCCCCC">the main obstacle is</font><font color="#E5E5E5"> that we don't just</font>

86
00:03:22,290 --> 00:03:25,950
<font color="#E5E5E5">have to prove</font><font color="#CCCCCC"> that this algebraic</font>

87
00:03:23,880 --> 00:03:28,410
relation<font color="#E5E5E5"> that F of a equals T we have to</font>

88
00:03:25,950 --> 00:03:30,328
<font color="#CCCCCC">F of s equals T we really have to prove</font>

89
00:03:28,410 --> 00:03:33,060
<font color="#CCCCCC">that the the secret that we know has</font>

90
00:03:30,329 --> 00:03:34,560
small<font color="#E5E5E5"> length and this causes sort of all</font>

91
00:03:33,060 --> 00:03:35,930
the problems that<font color="#E5E5E5"> we have with zero</font>

92
00:03:34,560 --> 00:03:39,269
knowledge proof that<font color="#E5E5E5"> lattices</font>

93
00:03:35,930 --> 00:03:41,250
<font color="#CCCCCC">so this is the sort of</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> some ways to</font>

94
00:03:39,269 --> 00:03:43,730
<font color="#E5E5E5">go</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> it right so this is the this</font>

95
00:03:41,250 --> 00:03:46,290
theorem<font color="#E5E5E5"> here with the board's technique</font>

96
00:03:43,730 --> 00:03:49,649
<font color="#CCCCCC">so let's say you have a relation F of s</font>

97
00:03:46,290 --> 00:03:51,150
equals<font color="#CCCCCC"> T the way you do it and</font><font color="#E5E5E5"> you</font>

98
00:03:49,650 --> 00:03:53,549
really use the<font color="#CCCCCC"> Fiat should be you use</font>

99
00:03:51,150 --> 00:03:54,870
the<font color="#E5E5E5"> Sigma protocol framework with then</font>

100
00:03:53,549 --> 00:03:56,430
<font color="#E5E5E5">use Fiat</font><font color="#CCCCCC"> ramier to make it non</font>

101
00:03:54,870 --> 00:03:59,879
interactive<font color="#E5E5E5"> but there are some</font>

102
00:03:56,430 --> 00:04:01,169
differences<font color="#CCCCCC"> so you generate this first</font>

103
00:03:59,879 --> 00:04:03,418
to generate this masking parameter

104
00:04:01,169 --> 00:04:05,069
that's the intuition why is you generate

105
00:04:03,419 --> 00:04:08,120
of masking parameter Y from<font color="#E5E5E5"> some</font>

106
00:04:05,069 --> 00:04:10,918
<font color="#CCCCCC">distribution then you compute F of</font><font color="#E5E5E5"> Y</font>

107
00:04:08,120 --> 00:04:12,480
<font color="#E5E5E5">that's your W you send that W so I'm</font>

108
00:04:10,919 --> 00:04:16,440
gonna<font color="#E5E5E5"> do an interactive protocol first</font>

109
00:04:12,480 --> 00:04:18,779
you<font color="#E5E5E5"> send your W and then the verifier</font>

110
00:04:16,440 --> 00:04:22,169
<font color="#CCCCCC">responds with a challenge C in the ring</font>

111
00:04:18,779 --> 00:04:26,820
and then<font color="#CCCCCC"> the prover computes</font><font color="#E5E5E5"> s times Z</font>

112
00:04:22,169 --> 00:04:27,859
plus<font color="#E5E5E5"> y so without this sort of last</font>

113
00:04:26,820 --> 00:04:32,300
rejection<font color="#E5E5E5"> sample</font>

114
00:04:27,860 --> 00:04:35,509
this should look exactly like<font color="#CCCCCC"> snart</font>

115
00:04:32,300 --> 00:04:37,189
protocol if you're familiar with<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so</font>

116
00:04:35,509 --> 00:04:40,189
now this<font color="#E5E5E5"> rejection sampling becomes</font>

117
00:04:37,189 --> 00:04:42,289
necessary<font color="#E5E5E5"> because you don't want Z to</font>

118
00:04:40,189 --> 00:04:45,050
leak information about s<font color="#CCCCCC"> you'd never</font>

119
00:04:42,289 --> 00:04:47,210
<font color="#E5E5E5">have this problem with with discrete</font><font color="#CCCCCC"> log</font>

120
00:04:45,050 --> 00:04:49,219
<font color="#E5E5E5">based things because your Y can just be</font>

121
00:04:47,210 --> 00:04:50,479
completely uniformly random and so Z is

122
00:04:49,219 --> 00:04:51,770
<font color="#CCCCCC">going to be uniformly random and it's</font>

123
00:04:50,479 --> 00:04:53,150
<font color="#E5E5E5">okay but we can't do the same thing for</font>

124
00:04:51,770 --> 00:04:55,698
lattices because like I said<font color="#E5E5E5"> we want to</font>

125
00:04:53,150 --> 00:04:58,310
<font color="#E5E5E5">prove knowledge of short solutions so</font>

126
00:04:55,699 --> 00:05:00,229
this better be short<font color="#E5E5E5"> so then Y should be</font>

127
00:04:58,310 --> 00:05:01,849
short<font color="#E5E5E5"> and then this you know he's gonna</font>

128
00:05:00,229 --> 00:05:03,080
leak some stuff unless<font color="#E5E5E5"> you do rejection</font>

129
00:05:01,849 --> 00:05:05,000
sampling but<font color="#E5E5E5"> this actually this is</font><font color="#CCCCCC"> not</font>

130
00:05:03,080 --> 00:05:07,490
the<font color="#E5E5E5"> the main point here but you can't do</font>

131
00:05:05,000 --> 00:05:10,400
it<font color="#CCCCCC"> and then you end up the verifier ends</font>

132
00:05:07,490 --> 00:05:12,830
up<font color="#E5E5E5"> checking that norm of Z is small and</font>

133
00:05:10,400 --> 00:05:15,198
this<font color="#E5E5E5"> F of Z equals</font><font color="#CCCCCC"> TC plus W so</font><font color="#E5E5E5"> you need</font>

134
00:05:12,830 --> 00:05:17,180
this function<font color="#CCCCCC"> f to be</font><font color="#E5E5E5"> this module</font>

135
00:05:15,199 --> 00:05:19,759
homomorphism just like you need it<font color="#E5E5E5"> for a</font>

136
00:05:17,180 --> 00:05:22,520
<font color="#E5E5E5">discrete</font><font color="#CCCCCC"> log right you should have that</font>

137
00:05:19,759 --> 00:05:25,490
<font color="#E5E5E5">it should be linear</font><font color="#CCCCCC"> so f of</font><font color="#E5E5E5"> X plus F of</font>

138
00:05:22,520 --> 00:05:29,330
Y is f of<font color="#E5E5E5"> X plus y and also for any</font>

139
00:05:25,490 --> 00:05:32,419
element<font color="#CCCCCC"> C f of X times C should be f of</font>

140
00:05:29,330 --> 00:05:34,490
<font color="#E5E5E5">X C</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so if those two</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> are</font>

141
00:05:32,419 --> 00:05:36,139
satisfied you<font color="#E5E5E5"> just get this relation and</font>

142
00:05:34,490 --> 00:05:41,180
<font color="#E5E5E5">it's everything's</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> again just like</font>

143
00:05:36,139 --> 00:05:42,889
<font color="#CCCCCC">it's good</font><font color="#E5E5E5"> so the proof the security</font>

144
00:05:41,180 --> 00:05:46,219
proof<font color="#E5E5E5"> works as follows</font><font color="#CCCCCC"> you it's just</font>

145
00:05:42,889 --> 00:05:47,990
<font color="#E5E5E5">rewinding then you the why is this</font><font color="#CCCCCC"> proof</font>

146
00:05:46,219 --> 00:05:50,629
<font color="#E5E5E5">knowledge because</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> rewind</font><font color="#CCCCCC"> you send</font>

147
00:05:47,990 --> 00:05:52,190
different<font color="#E5E5E5"> C</font><font color="#CCCCCC"> prime the the prover sends a</font>

148
00:05:50,629 --> 00:05:53,569
different<font color="#E5E5E5"> Z</font><font color="#CCCCCC"> prime you recover a</font>

149
00:05:52,190 --> 00:05:55,849
different and now you have another

150
00:05:53,569 --> 00:05:58,699
<font color="#E5E5E5">equation</font><font color="#CCCCCC"> f of Z prime is T C prime plus</font>

151
00:05:55,849 --> 00:06:00,979
W you subtract and<font color="#CCCCCC"> you end up of F of Z</font>

152
00:05:58,699 --> 00:06:02,870
<font color="#CCCCCC">minus</font><font color="#E5E5E5"> Z prime equals T</font><font color="#CCCCCC"> times u minus e</font>

153
00:06:00,979 --> 00:06:04,699
<font color="#CCCCCC">prime if you're working</font><font color="#E5E5E5"> with discrete</font>

154
00:06:02,870 --> 00:06:05,919
<font color="#E5E5E5">log you're done you</font><font color="#CCCCCC"> just divide by C</font>

155
00:06:04,699 --> 00:06:07,939
minus<font color="#CCCCCC"> C Prime</font>

156
00:06:05,919 --> 00:06:10,339
unfortunately here with lattices you

157
00:06:07,939 --> 00:06:11,900
cannot do this<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so you can make it</font>

158
00:06:10,339 --> 00:06:16,789
non interactive via the<font color="#CCCCCC"> future</font>

159
00:06:11,900 --> 00:06:18,830
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> okay so in lattices you</font>

160
00:06:16,789 --> 00:06:20,568
can't just<font color="#CCCCCC"> divide by C minus C Prime</font>

161
00:06:18,830 --> 00:06:22,250
first of<font color="#E5E5E5"> all if the inverse may not</font>

162
00:06:20,569 --> 00:06:24,740
exist we're working over some ring not a

163
00:06:22,250 --> 00:06:26,389
field<font color="#E5E5E5"> but</font><font color="#CCCCCC"> okay let's let's not worry</font>

164
00:06:24,740 --> 00:06:29,839
about<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> can make sure it exists</font>

165
00:06:26,389 --> 00:06:31,789
the bigger problem<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> quotient</font><font color="#E5E5E5"> Z</font>

166
00:06:29,839 --> 00:06:34,009
<font color="#CCCCCC">minus D prime divided by</font><font color="#E5E5E5"> C minus</font><font color="#CCCCCC"> C prime</font>

167
00:06:31,789 --> 00:06:35,810
<font color="#E5E5E5">is gonna be there's no reason</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> it</font>

168
00:06:34,009 --> 00:06:37,130
should have small coefficients<font color="#CCCCCC"> Z has</font>

169
00:06:35,810 --> 00:06:39,699
small<font color="#E5E5E5"> coefficients C has small</font>

170
00:06:37,130 --> 00:06:42,130
coefficients what the quotient<font color="#E5E5E5"> will not</font>

171
00:06:39,699 --> 00:06:45,020
so

172
00:06:42,130 --> 00:06:48,680
that's the problem<font color="#CCCCCC"> right okay so there's</font>

173
00:06:45,020 --> 00:06:51,109
two solutions<font color="#E5E5E5"> one is say okay</font><font color="#CCCCCC"> I don't</font>

174
00:06:48,680 --> 00:06:54,200
<font color="#CCCCCC">care I'm happy enough</font><font color="#E5E5E5"> with this solution</font>

175
00:06:51,110 --> 00:06:56,630
<font color="#CCCCCC">I'm happy enough with extracting some F</font>

176
00:06:54,200 --> 00:06:58,370
of something small<font color="#E5E5E5"> equals not quite</font><font color="#CCCCCC"> T</font>

177
00:06:56,630 --> 00:07:00,890
but T times<font color="#E5E5E5"> something small</font>

178
00:06:58,370 --> 00:07:02,930
maybe I'm happy enough<font color="#CCCCCC"> with that</font><font color="#E5E5E5"> okay</font>

179
00:07:00,890 --> 00:07:04,630
another possibility is say well<font color="#E5E5E5"> and</font>

180
00:07:02,930 --> 00:07:08,150
let's say I'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> with that I</font>

181
00:07:04,630 --> 00:07:09,890
actually<font color="#E5E5E5"> want</font><font color="#CCCCCC"> F of something equals F or</font>

182
00:07:08,150 --> 00:07:11,900
<font color="#E5E5E5">something small equals T well then you</font>

183
00:07:09,890 --> 00:07:14,930
say okay well then choose<font color="#CCCCCC"> your C and</font><font color="#E5E5E5"> C</font>

184
00:07:11,900 --> 00:07:17,260
<font color="#E5E5E5">prime to be</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> or 1</font><font color="#CCCCCC"> in this case C minus</font>

185
00:07:14,930 --> 00:07:19,850
C prime is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be 1 or minus 1</font><font color="#CCCCCC"> and</font>

186
00:07:17,260 --> 00:07:22,640
then<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> have the inverse of 1</font>

187
00:07:19,850 --> 00:07:24,050
minus 1 is<font color="#E5E5E5"> just 1</font><font color="#CCCCCC"> minus</font><font color="#E5E5E5"> 1 and so</font><font color="#CCCCCC"> you</font>

188
00:07:22,640 --> 00:07:26,150
actually have<font color="#E5E5E5"> F of something short</font>

189
00:07:24,050 --> 00:07:27,770
equals T<font color="#E5E5E5"> but of course the</font><font color="#CCCCCC"> problem with</font>

190
00:07:26,150 --> 00:07:29,539
this<font color="#E5E5E5"> latter one is your soundness is</font>

191
00:07:27,770 --> 00:07:32,060
only<font color="#E5E5E5"> 1/2 and you don't want to do that I</font>

192
00:07:29,540 --> 00:07:34,550
mean<font color="#E5E5E5"> you don't always want</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> ok</font>

193
00:07:32,060 --> 00:07:36,350
so that we thought<font color="#E5E5E5"> it</font><font color="#CCCCCC"> was bad</font><font color="#E5E5E5"> so</font>

194
00:07:34,550 --> 00:07:39,650
basically<font color="#E5E5E5"> right like I said there's two</font>

195
00:07:36,350 --> 00:07:41,960
ways<font color="#CCCCCC"> to do sort of zero</font><font color="#E5E5E5"> knowledge proof</font>

196
00:07:39,650 --> 00:07:44,090
<font color="#E5E5E5">for lattices right so if you care about</font>

197
00:07:41,960 --> 00:07:45,859
practice<font color="#E5E5E5"> when I say practical let's say</font>

198
00:07:44,090 --> 00:07:48,320
you know we say less than<font color="#CCCCCC"> 20 kilobytes</font>

199
00:07:45,860 --> 00:07:50,360
per proof up<font color="#E5E5E5"> you know per proof</font><font color="#CCCCCC"> but you</font>

200
00:07:48,320 --> 00:07:53,450
know some numbers<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's the</font>

201
00:07:50,360 --> 00:07:57,740
definition of practical let's define<font color="#CCCCCC"> it</font>

202
00:07:53,450 --> 00:08:00,469
from now on<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so there's two</font>

203
00:07:57,740 --> 00:08:03,350
<font color="#CCCCCC">things</font><font color="#E5E5E5"> you can try to do so</font><font color="#CCCCCC"> this is the</font>

204
00:08:00,470 --> 00:08:05,630
proof that<font color="#E5E5E5"> you get right you knew you</font>

205
00:08:03,350 --> 00:08:08,150
knew a relation F of s equals<font color="#CCCCCC"> T and what</font>

206
00:08:05,630 --> 00:08:10,130
you can prove is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> F of something</font>

207
00:08:08,150 --> 00:08:12,440
that's<font color="#E5E5E5"> not quite as you know maybe</font>

208
00:08:10,130 --> 00:08:16,909
bigger than s equals T times<font color="#E5E5E5"> this</font>

209
00:08:12,440 --> 00:08:18,500
difference of the challenges<font color="#CCCCCC"> so what if</font>

210
00:08:16,910 --> 00:08:20,210
so like I<font color="#CCCCCC"> said on the previous slide</font>

211
00:08:18,500 --> 00:08:22,820
there's two choices<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can have you</font><font color="#E5E5E5"> can</font>

212
00:08:20,210 --> 00:08:24,890
<font color="#CCCCCC">make sure that the C hat is</font><font color="#E5E5E5"> one and then</font>

213
00:08:22,820 --> 00:08:27,740
your soundness is small or<font color="#E5E5E5"> you say this</font>

214
00:08:24,890 --> 00:08:29,870
is good enough<font color="#CCCCCC"> for</font><font color="#E5E5E5"> my application</font><font color="#CCCCCC"> I'm</font>

215
00:08:27,740 --> 00:08:31,850
happy with<font color="#E5E5E5"> this so if you're happy</font><font color="#CCCCCC"> with</font>

216
00:08:29,870 --> 00:08:33,110
this then you can get<font color="#E5E5E5"> digital</font><font color="#CCCCCC"> signatures</font>

217
00:08:31,850 --> 00:08:34,849
so this is how we get efficient digital

218
00:08:33,110 --> 00:08:38,599
signatures<font color="#E5E5E5"> and actually can get zero</font>

219
00:08:34,849 --> 00:08:39,950
knowledge proof of commitments but maybe

220
00:08:38,599 --> 00:08:43,240
some others but<font color="#CCCCCC"> you don't get a lot</font><font color="#E5E5E5"> of</font>

221
00:08:39,950 --> 00:08:45,920
<font color="#E5E5E5">other stuff</font><font color="#CCCCCC"> so actually very recently</font>

222
00:08:43,240 --> 00:08:48,620
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is a really nice work by first</font>

223
00:08:45,920 --> 00:08:53,120
<font color="#CCCCCC">Batman</font><font color="#E5E5E5"> all of the Kramer at all showed</font>

224
00:08:48,620 --> 00:08:55,180
<font color="#CCCCCC">that okay</font><font color="#E5E5E5"> you know if C is</font><font color="#CCCCCC"> 0-1</font><font color="#E5E5E5"> you</font>

225
00:08:53,120 --> 00:08:58,459
can't<font color="#E5E5E5"> you know the soundness is bad</font>

226
00:08:55,180 --> 00:09:00,199
<font color="#E5E5E5">unless you do amortization so if you</font>

227
00:08:58,459 --> 00:09:02,809
have many samples you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to prove they</font>

228
00:09:00,199 --> 00:09:04,370
have a nice<font color="#E5E5E5"> technique that that allows</font>

229
00:09:02,809 --> 00:09:08,600
for fairly efficient according to this

230
00:09:04,370 --> 00:09:10,430
definition of efficient<font color="#CCCCCC"> proofs</font>

231
00:09:08,600 --> 00:09:13,069
<font color="#E5E5E5">when you can prove simultaneously many</font>

232
00:09:10,430 --> 00:09:16,160
relations<font color="#CCCCCC"> so they do this</font><font color="#E5E5E5"> if you</font>

233
00:09:13,069 --> 00:09:18,110
attribute<font color="#E5E5E5"> with the boards but they add</font>

234
00:09:16,160 --> 00:09:21,680
some stuff to it<font color="#E5E5E5"> to make sure</font><font color="#CCCCCC"> amortize</font>

235
00:09:18,110 --> 00:09:23,600
complexities is slow is low<font color="#E5E5E5"> so that's</font>

236
00:09:21,680 --> 00:09:25,459
quite good<font color="#E5E5E5"> so that I think actually</font>

237
00:09:23,600 --> 00:09:30,040
<font color="#E5E5E5">Yvonne is giving this talk in the next</font>

238
00:09:25,459 --> 00:09:33,469
<font color="#E5E5E5">session of the other room</font><font color="#CCCCCC"> it's nice and</font>

239
00:09:30,040 --> 00:09:36,079
<font color="#CCCCCC">so you can do that</font><font color="#E5E5E5"> but the problem you</font>

240
00:09:33,470 --> 00:09:39,290
<font color="#CCCCCC">know what we don't have is sort of</font><font color="#E5E5E5"> this</font>

241
00:09:36,079 --> 00:09:41,599
natural<font color="#E5E5E5"> thing is I want soundness for</font>

242
00:09:39,290 --> 00:09:43,069
one sample<font color="#E5E5E5"> right and so we don't have</font>

243
00:09:41,600 --> 00:09:46,999
<font color="#E5E5E5">this and my guess is we're not gonna</font>

244
00:09:43,069 --> 00:09:48,290
have it ever<font color="#CCCCCC"> it just seems too hard</font><font color="#E5E5E5"> so</font>

245
00:09:46,999 --> 00:09:50,059
there's also I should<font color="#CCCCCC"> mention there's</font>

246
00:09:48,290 --> 00:09:51,290
also these<font color="#CCCCCC"> Stern type lattice zero</font>

247
00:09:50,059 --> 00:09:53,800
knowledge proof so<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> their</font>

248
00:09:51,290 --> 00:09:56,509
combinatorial and based on code based

249
00:09:53,800 --> 00:09:58,008
this the code<font color="#CCCCCC"> base turn signal</font>

250
00:09:56,509 --> 00:10:00,999
<font color="#E5E5E5">identification scheme which is related</font>

251
00:09:58,009 --> 00:10:04,100
<font color="#E5E5E5">related to Shamir's reputed</font><font color="#CCCCCC"> kernels</font>

252
00:10:00,999 --> 00:10:07,189
<font color="#E5E5E5">scheme</font><font color="#CCCCCC"> and it can be adapted to lattices</font>

253
00:10:04,100 --> 00:10:08,660
<font color="#E5E5E5">but it's it's horribly impractical I</font>

254
00:10:07,189 --> 00:10:12,439
mean proofs are much<font color="#E5E5E5"> bigger than one</font>

255
00:10:08,660 --> 00:10:14,870
megabyte and I think from most practical

256
00:10:12,439 --> 00:10:17,599
applications<font color="#CCCCCC"> unless</font><font color="#E5E5E5"> this is done once in</font>

257
00:10:14,870 --> 00:10:20,179
some protocol that's already<font color="#E5E5E5"> very</font>

258
00:10:17,600 --> 00:10:21,559
inefficient<font color="#E5E5E5"> then it's sort of we</font>

259
00:10:20,179 --> 00:10:23,809
shouldn't<font color="#E5E5E5"> consider it relevant for</font>

260
00:10:21,559 --> 00:10:27,920
practical applications<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> think the</font>

261
00:10:23,809 --> 00:10:28,759
main open problems are so if the domain

262
00:10:27,920 --> 00:10:30,769
<font color="#E5E5E5">of C is large</font>

263
00:10:28,759 --> 00:10:31,699
can we have more<font color="#CCCCCC"> applications you know</font>

264
00:10:30,769 --> 00:10:32,870
right now<font color="#CCCCCC"> which you can</font><font color="#E5E5E5"> just build</font>

265
00:10:31,699 --> 00:10:35,719
<font color="#E5E5E5">digital signatures and</font><font color="#CCCCCC"> proof</font><font color="#E5E5E5"> of</font>

266
00:10:32,870 --> 00:10:37,189
commitments<font color="#CCCCCC"> oh and in this direction can</font>

267
00:10:35,720 --> 00:10:39,350
<font color="#E5E5E5">we decrease the number</font><font color="#CCCCCC"> of required</font>

268
00:10:37,189 --> 00:10:41,360
<font color="#E5E5E5">samples because I</font><font color="#CCCCCC"> think maybe</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> being</font>

269
00:10:39,350 --> 00:10:42,800
kind<font color="#E5E5E5"> of generous with the ten thousand I</font>

270
00:10:41,360 --> 00:10:44,179
think<font color="#CCCCCC"> you might you</font><font color="#E5E5E5"> know to prove a lot</font>

271
00:10:42,800 --> 00:10:46,069
more than<font color="#E5E5E5"> ten thousand samples before</font>

272
00:10:44,179 --> 00:10:48,379
<font color="#E5E5E5">amortization kicks in so I think these</font>

273
00:10:46,069 --> 00:10:50,240
are<font color="#E5E5E5"> two</font><font color="#CCCCCC"> very interesting</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

274
00:10:48,379 --> 00:10:51,620
<font color="#E5E5E5">research directions for lattice</font><font color="#CCCCCC"> Paiste</font>

275
00:10:50,240 --> 00:10:53,240
<font color="#CCCCCC">renowned screws because it would be</font>

276
00:10:51,620 --> 00:10:54,769
great if we<font color="#E5E5E5"> could get something that's</font>

277
00:10:53,240 --> 00:10:57,019
just as good<font color="#CCCCCC"> as what</font><font color="#E5E5E5"> we have in</font><font color="#CCCCCC"> the</font>

278
00:10:54,769 --> 00:11:01,579
discrete log world but I really doubt

279
00:10:57,019 --> 00:11:03,410
<font color="#CCCCCC">that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> happen</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so now</font>

280
00:11:01,579 --> 00:11:05,269
<font color="#E5E5E5">since okay verifiable encryption was in</font>

281
00:11:03,410 --> 00:11:06,949
the<font color="#E5E5E5"> title I should sort of explain a</font>

282
00:11:05,269 --> 00:11:09,950
little bit<font color="#E5E5E5"> with why why</font>

283
00:11:06,950 --> 00:11:11,420
<font color="#E5E5E5">the title so well I'm okay</font><font color="#CCCCCC"> but I won't</font>

284
00:11:09,950 --> 00:11:13,610
give the<font color="#E5E5E5"> actual definition but here's</font>

285
00:11:11,420 --> 00:11:15,380
the<font color="#CCCCCC"> scenario that we some time out for</font>

286
00:11:13,610 --> 00:11:17,630
some applications so<font color="#E5E5E5"> you have a sender</font>

287
00:11:15,380 --> 00:11:19,310
and<font color="#CCCCCC"> a receiver and then you have some</font>

288
00:11:17,630 --> 00:11:20,839
mediating<font color="#E5E5E5"> Authority so this mediating</font>

289
00:11:19,310 --> 00:11:22,699
<font color="#CCCCCC">Authority does</font><font color="#E5E5E5"> not ever want to be</font>

290
00:11:20,839 --> 00:11:25,310
<font color="#E5E5E5">bothered</font><font color="#CCCCCC"> by anyone</font><font color="#E5E5E5"> unless something</font>

291
00:11:22,700 --> 00:11:27,079
really<font color="#CCCCCC"> serious has happened</font><font color="#E5E5E5"> so what the</font>

292
00:11:25,310 --> 00:11:29,329
<font color="#E5E5E5">mediating</font><font color="#CCCCCC"> Authority does is it</font><font color="#E5E5E5"> publishes</font>

293
00:11:27,079 --> 00:11:30,859
a public key<font color="#E5E5E5"> and says look here's my</font>

294
00:11:29,329 --> 00:11:32,779
public key do not bother<font color="#E5E5E5"> me unless</font>

295
00:11:30,860 --> 00:11:35,240
<font color="#CCCCCC">something serious happen whatever you</font>

296
00:11:32,779 --> 00:11:36,439
want with my public key<font color="#CCCCCC"> okay so then the</font>

297
00:11:35,240 --> 00:11:39,350
sender and<font color="#E5E5E5"> the receiver have some</font>

298
00:11:36,440 --> 00:11:43,430
protocol that<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> sender has some</font>

299
00:11:39,350 --> 00:11:49,250
secret witness<font color="#CCCCCC"> W</font><font color="#E5E5E5"> that X is in some</font>

300
00:11:43,430 --> 00:11:51,949
language<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and what he wants</font><font color="#E5E5E5"> to do is</font>

301
00:11:49,250 --> 00:11:57,110
sent to the receiver<font color="#CCCCCC"> a proof of</font>

302
00:11:51,949 --> 00:11:59,329
knowledge<font color="#E5E5E5"> that W is a witness and also W</font>

303
00:11:57,110 --> 00:12:02,240
is a witness<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the receiver</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font>

304
00:11:59,329 --> 00:12:03,829
quite sure<font color="#E5E5E5"> that he's the sender's gonna</font>

305
00:12:02,240 --> 00:12:05,690
be<font color="#E5E5E5"> behaving properly you might do</font>

306
00:12:03,829 --> 00:12:07,339
something<font color="#E5E5E5"> bad during the protocol so</font>

307
00:12:05,690 --> 00:12:11,170
what the receiver wants<font color="#E5E5E5"> is for</font><font color="#CCCCCC"> the</font>

308
00:12:07,339 --> 00:12:13,880
sender to actually<font color="#E5E5E5"> encrypt this witness</font>

309
00:12:11,170 --> 00:12:16,130
under the median<font color="#E5E5E5"> authorities public key</font>

310
00:12:13,880 --> 00:12:20,660
and also<font color="#E5E5E5"> give the proof of knowledge</font>

311
00:12:16,130 --> 00:12:23,390
that the that<font color="#E5E5E5"> C encrypts this witness so</font>

312
00:12:20,660 --> 00:12:25,010
basically if something<font color="#E5E5E5"> bad happens if</font>

313
00:12:23,390 --> 00:12:26,540
this if the<font color="#CCCCCC"> receiver decides that the</font>

314
00:12:25,010 --> 00:12:29,660
sender did something bad during the

315
00:12:26,540 --> 00:12:33,649
protocol<font color="#E5E5E5"> he can tell the mediating</font>

316
00:12:29,660 --> 00:12:35,180
<font color="#E5E5E5">authority please reveal W for me okay so</font>

317
00:12:33,649 --> 00:12:37,010
there are<font color="#E5E5E5"> some</font><font color="#CCCCCC"> applications for</font><font color="#E5E5E5"> this but</font>

318
00:12:35,180 --> 00:12:40,579
<font color="#E5E5E5">this is sort of not the not the point of</font>

319
00:12:37,010 --> 00:12:43,310
<font color="#E5E5E5">the of the talk all right so and I don't</font>

320
00:12:40,579 --> 00:12:45,529
<font color="#E5E5E5">even care about sort of connecting you</font>

321
00:12:43,310 --> 00:12:47,779
know this this<font color="#E5E5E5"> and statement let's just</font>

322
00:12:45,529 --> 00:12:50,390
concentrate on<font color="#E5E5E5"> I give you a</font><font color="#CCCCCC"> ciphertext</font>

323
00:12:47,779 --> 00:12:56,240
<font color="#CCCCCC">and a proof</font><font color="#E5E5E5"> of knowledge that</font><font color="#CCCCCC"> this</font>

324
00:12:50,390 --> 00:12:57,769
ciphertext<font color="#E5E5E5"> encrypts some W okay so what</font>

325
00:12:56,240 --> 00:12:59,029
this<font color="#E5E5E5"> really is is</font><font color="#CCCCCC"> just the proof</font><font color="#E5E5E5"> of</font>

326
00:12:57,769 --> 00:13:00,230
<font color="#CCCCCC">plaintext knowledge so I have an</font>

327
00:12:59,029 --> 00:13:02,449
encryption<font color="#CCCCCC"> I want to prove</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> you that I</font>

328
00:13:00,230 --> 00:13:04,880
know that<font color="#E5E5E5"> I know what you will decrypt</font>

329
00:13:02,449 --> 00:13:06,949
<font color="#E5E5E5">to okay so here's the ring of the</font>

330
00:13:04,880 --> 00:13:08,630
<font color="#E5E5E5">encryption scheme put in the form or</font>

331
00:13:06,949 --> 00:13:12,859
that's sort of a manobo to the zero

332
00:13:08,630 --> 00:13:14,990
knowledge<font color="#CCCCCC"> proves so the public key</font><font color="#E5E5E5"> is</font>

333
00:13:12,860 --> 00:13:16,279
<font color="#CCCCCC">usually</font><font color="#E5E5E5"> some polynomial a and some a s</font>

334
00:13:14,990 --> 00:13:19,550
plus C<font color="#E5E5E5"> where s and E have small</font>

335
00:13:16,279 --> 00:13:20,780
coefficients the encryption of some well

336
00:13:19,550 --> 00:13:25,099
<font color="#E5E5E5">W</font>

337
00:13:20,780 --> 00:13:27,650
what's called the MW is PTI is you just

338
00:13:25,100 --> 00:13:30,350
multiply<font color="#CCCCCC"> AR plus</font><font color="#E5E5E5"> c1 and P times TR plus</font>

339
00:13:27,650 --> 00:13:32,810
<font color="#E5E5E5">c2 plus w</font><font color="#CCCCCC"> okay so in terms of</font><font color="#E5E5E5"> the</font>

340
00:13:30,350 --> 00:13:35,750
<font color="#E5E5E5">encryption in terms of matrices</font><font color="#CCCCCC"> looks</font>

341
00:13:32,810 --> 00:13:37,099
like this right you<font color="#CCCCCC"> can just stare a bit</font>

342
00:13:35,750 --> 00:13:40,030
then you convince<font color="#E5E5E5"> yourself that this</font>

343
00:13:37,100 --> 00:13:43,840
matrix<font color="#E5E5E5"> vector multiplication really does</font>

344
00:13:40,030 --> 00:13:46,730
sort of exactly<font color="#E5E5E5"> describe the encryption</font>

345
00:13:43,840 --> 00:13:47,750
and to decrypt you just<font color="#CCCCCC"> to V minus us</font>

346
00:13:46,730 --> 00:13:50,030
mark you<font color="#E5E5E5"> might be that's</font><font color="#CCCCCC"> not</font>

347
00:13:47,750 --> 00:13:52,010
particularly important but so the point

348
00:13:50,030 --> 00:13:53,569
<font color="#E5E5E5">is if we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to prove that I know the</font>

349
00:13:52,010 --> 00:13:55,520
decryption<font color="#CCCCCC"> I just have to prove to you</font>

350
00:13:53,570 --> 00:13:57,650
that I know that<font color="#E5E5E5"> this consists of small</font>

351
00:13:55,520 --> 00:13:59,750
<font color="#CCCCCC">elements I prove so you have this public</font>

352
00:13:57,650 --> 00:14:01,100
you have<font color="#E5E5E5"> this public</font><font color="#CCCCCC"> key</font><font color="#E5E5E5"> and the</font>

353
00:13:59,750 --> 00:14:02,960
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> prove to you that</font>

354
00:14:01,100 --> 00:14:05,630
this guy has the right randomness<font color="#E5E5E5"> and</font>

355
00:14:02,960 --> 00:14:08,060
messages<font color="#CCCCCC"> and they're all small</font><font color="#E5E5E5"> okay so</font>

356
00:14:05,630 --> 00:14:09,800
now what<font color="#E5E5E5"> can</font><font color="#CCCCCC"> we do</font><font color="#E5E5E5"> with approximate</font>

357
00:14:08,060 --> 00:14:12,170
proofs<font color="#E5E5E5"> of knowledge right so we have</font>

358
00:14:09,800 --> 00:14:13,640
this I<font color="#CCCCCC"> have</font><font color="#E5E5E5"> this relation and I can</font>

359
00:14:12,170 --> 00:14:16,729
prove let's say I could<font color="#CCCCCC"> prove to you</font>

360
00:14:13,640 --> 00:14:21,710
that well<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font>

361
00:14:16,730 --> 00:14:24,320
a small vector vector small elements

362
00:14:21,710 --> 00:14:27,110
such that this times<font color="#CCCCCC"> the</font><font color="#E5E5E5"> small vector is</font>

363
00:14:24,320 --> 00:14:29,839
the<font color="#CCCCCC"> cipher text</font><font color="#E5E5E5"> but what I do know is</font>

364
00:14:27,110 --> 00:14:32,510
<font color="#CCCCCC">that I know that this matrix</font><font color="#E5E5E5"> times some</font>

365
00:14:29,839 --> 00:14:35,089
small vector<font color="#E5E5E5"> is a perturbation of the</font>

366
00:14:32,510 --> 00:14:36,860
<font color="#E5E5E5">ciphertext multiplied by some C right</font>

367
00:14:35,089 --> 00:14:40,100
that's the C you get from the<font color="#E5E5E5"> extraction</font>

368
00:14:36,860 --> 00:14:43,130
of the<font color="#CCCCCC"> shinola proof of the of the</font><font color="#E5E5E5"> Sigma</font>

369
00:14:40,100 --> 00:14:45,770
protocol right<font color="#E5E5E5"> so the implication now is</font>

370
00:14:43,130 --> 00:14:48,140
like well you have<font color="#E5E5E5"> this the implication</font>

371
00:14:45,770 --> 00:14:50,420
is that if you intuitive is that it's

372
00:14:48,140 --> 00:14:52,520
not that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> prove that you V is the</font>

373
00:14:50,420 --> 00:14:55,219
right<font color="#E5E5E5"> ciphertext you prove that you V</font>

374
00:14:52,520 --> 00:14:57,050
times some C which no one<font color="#CCCCCC"> knows is the</font>

375
00:14:55,220 --> 00:14:59,089
right<font color="#E5E5E5"> ciphertext and this may</font><font color="#CCCCCC"> not be</font>

376
00:14:57,050 --> 00:15:01,040
particularly useful<font color="#E5E5E5"> right because the</font>

377
00:14:59,089 --> 00:15:04,040
Decrypter does not know C so if he's

378
00:15:01,040 --> 00:15:06,290
<font color="#E5E5E5">going to decrypt he has to somehow he</font>

379
00:15:04,040 --> 00:15:07,730
actually cannot do it right<font color="#CCCCCC"> because he</font>

380
00:15:06,290 --> 00:15:09,170
doesn't<font color="#E5E5E5"> know the C which you only get</font>

381
00:15:07,730 --> 00:15:13,130
<font color="#E5E5E5">from extraction which is never run in</font>

382
00:15:09,170 --> 00:15:15,439
the real world<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so that's so this is</font>

383
00:15:13,130 --> 00:15:17,510
<font color="#E5E5E5">just to summarize if he decrypts he may</font>

384
00:15:15,440 --> 00:15:19,490
just<font color="#E5E5E5"> get garbage</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> UV is not a</font>

385
00:15:17,510 --> 00:15:21,800
valid<font color="#E5E5E5"> ciphertext right he gets UV and a</font>

386
00:15:19,490 --> 00:15:23,930
proof<font color="#E5E5E5"> of knowledge that UV times some</font><font color="#CCCCCC"> c</font>

387
00:15:21,800 --> 00:15:25,569
is a valid ciphertext but that's not

388
00:15:23,930 --> 00:15:28,219
particularly<font color="#E5E5E5"> useful for decrypting UV</font>

389
00:15:25,570 --> 00:15:31,160
all right<font color="#E5E5E5"> so here is sort of our</font>

390
00:15:28,220 --> 00:15:33,440
solution to<font color="#CCCCCC"> this problem</font><font color="#E5E5E5"> right which may</font>

391
00:15:31,160 --> 00:15:34,150
<font color="#E5E5E5">not make too much sense like this okay</font>

392
00:15:33,440 --> 00:15:37,390
<font color="#E5E5E5">so the first</font>

393
00:15:34,150 --> 00:15:41,079
step is to guess the<font color="#CCCCCC"> sea</font><font color="#E5E5E5"> okay that's</font>

394
00:15:37,390 --> 00:15:44,890
<font color="#E5E5E5">okay whatever then you decrypt this UV</font>

395
00:15:41,080 --> 00:15:46,540
<font color="#CCCCCC">see and then you output the quotient W</font>

396
00:15:44,890 --> 00:15:49,630
divided by<font color="#E5E5E5"> C</font><font color="#CCCCCC"> at that</font><font color="#E5E5E5"> you guys</font>

397
00:15:46,540 --> 00:15:51,339
okay<font color="#E5E5E5"> so there's problems right guessing</font>

398
00:15:49,630 --> 00:15:53,410
the<font color="#CCCCCC"> sea</font><font color="#E5E5E5"> that seems unreasonable there</font>

399
00:15:51,340 --> 00:15:56,170
could be<font color="#E5E5E5"> actually challenged space</font>

400
00:15:53,410 --> 00:15:57,490
<font color="#E5E5E5">squared possibilities because this C hat</font>

401
00:15:56,170 --> 00:15:59,620
is<font color="#E5E5E5"> actually the</font><font color="#CCCCCC"> difference of two</font>

402
00:15:57,490 --> 00:16:03,460
challenges<font color="#E5E5E5"> so there's a lot</font><font color="#CCCCCC"> of</font>

403
00:15:59,620 --> 00:16:06,010
possibilities for<font color="#E5E5E5"> that secondly let's</font>

404
00:16:03,460 --> 00:16:07,480
say<font color="#E5E5E5"> you even guess the right see how can</font>

405
00:16:06,010 --> 00:16:08,980
<font color="#CCCCCC">you be sure you guessed the</font><font color="#E5E5E5"> right see</font>

406
00:16:07,480 --> 00:16:10,090
<font color="#E5E5E5">your</font><font color="#CCCCCC"> decryption will give you</font><font color="#E5E5E5"> something</font>

407
00:16:08,980 --> 00:16:12,670
you're<font color="#E5E5E5"> like okay was that</font><font color="#CCCCCC"> the right</font>

408
00:16:10,090 --> 00:16:13,930
<font color="#E5E5E5">answer</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> and you have</font><font color="#CCCCCC"> to kind of</font>

409
00:16:12,670 --> 00:16:16,030
this two and<font color="#CCCCCC"> three are the same</font><font color="#E5E5E5"> problem</font>

410
00:16:13,930 --> 00:16:20,319
<font color="#E5E5E5">is this unique having decryption should</font>

411
00:16:16,030 --> 00:16:23,560
give you a unique solution<font color="#CCCCCC"> so let me</font>

412
00:16:20,320 --> 00:16:26,130
handle the second<font color="#E5E5E5"> the last two problems</font>

413
00:16:23,560 --> 00:16:28,689
<font color="#E5E5E5">first</font>

414
00:16:26,130 --> 00:16:30,610
so actually what we do is we modify the

415
00:16:28,690 --> 00:16:34,540
parameters and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> decryption algorithm</font>

416
00:16:30,610 --> 00:16:37,480
<font color="#CCCCCC">other of the bring a lovely scheme so</font>

417
00:16:34,540 --> 00:16:40,120
that<font color="#E5E5E5"> the Decrypter now guesses the C hat</font>

418
00:16:37,480 --> 00:16:43,180
and then if he<font color="#E5E5E5"> can check something</font><font color="#CCCCCC"> he</font>

419
00:16:40,120 --> 00:16:45,810
does some check and if this check

420
00:16:43,180 --> 00:16:49,030
<font color="#E5E5E5">whatever the norm of this whatever</font>

421
00:16:45,810 --> 00:16:51,880
<font color="#E5E5E5">equation that he computes is small</font>

422
00:16:49,030 --> 00:16:54,459
enough then<font color="#E5E5E5"> he says ah that's correct</font>

423
00:16:51,880 --> 00:16:57,700
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is not garbage and I'm going to</font>

424
00:16:54,460 --> 00:16:59,320
output<font color="#CCCCCC"> W</font><font color="#E5E5E5"> divided by C W is whatever I</font>

425
00:16:57,700 --> 00:17:00,910
decrypt it divided by the C hat that I

426
00:16:59,320 --> 00:17:02,740
checked<font color="#E5E5E5"> and actually what we can prove</font>

427
00:17:00,910 --> 00:17:04,599
is<font color="#E5E5E5"> if for</font><font color="#CCCCCC"> any things that satisfy the</font>

428
00:17:02,740 --> 00:17:06,099
above condition this quotient<font color="#E5E5E5"> will</font>

429
00:17:04,599 --> 00:17:09,010
always be the<font color="#E5E5E5"> same so</font><font color="#CCCCCC"> that in some sense</font>

430
00:17:06,099 --> 00:17:11,290
is<font color="#E5E5E5"> your site is your plain text</font><font color="#CCCCCC"> so the</font>

431
00:17:09,010 --> 00:17:13,270
<font color="#CCCCCC">in turn</font><font color="#E5E5E5"> so this is one thing the</font>

432
00:17:11,290 --> 00:17:15,639
somewhat interesting part that<font color="#E5E5E5"> leads to</font>

433
00:17:13,270 --> 00:17:21,099
weird the things<font color="#CCCCCC"> is this guessing C</font>

434
00:17:15,640 --> 00:17:24,130
right the the problem<font color="#E5E5E5"> is this challenge</font>

435
00:17:21,099 --> 00:17:26,589
<font color="#E5E5E5">space is too big okay so we don't solve</font>

436
00:17:24,130 --> 00:17:28,300
it you know it's super well<font color="#CCCCCC"> but there is</font>

437
00:17:26,589 --> 00:17:29,020
a solution that<font color="#E5E5E5"> that's good</font><font color="#CCCCCC"> for many</font>

438
00:17:28,300 --> 00:17:31,180
applications

439
00:17:29,020 --> 00:17:32,800
<font color="#E5E5E5">okay so first that's the</font><font color="#CCCCCC"> first thing</font><font color="#E5E5E5"> to</font>

440
00:17:31,180 --> 00:17:34,240
notice is that it's the<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> u in</font>

441
00:17:32,800 --> 00:17:36,700
V is valid<font color="#CCCCCC"> so if the prove is completely</font>

442
00:17:34,240 --> 00:17:38,830
honest<font color="#E5E5E5"> then for any C hat in particular</font>

443
00:17:36,700 --> 00:17:41,590
for<font color="#E5E5E5"> C equals</font><font color="#CCCCCC"> one this</font><font color="#E5E5E5"> will lead to</font><font color="#CCCCCC"> a</font>

444
00:17:38,830 --> 00:17:44,409
correct decryption on the other hand if

445
00:17:41,590 --> 00:17:46,149
the<font color="#E5E5E5"> ciphertext is invalid so the prover</font>

446
00:17:44,410 --> 00:17:48,040
is trying to cheat he did some

447
00:17:46,150 --> 00:17:51,250
ciphertext which<font color="#E5E5E5"> will not be decrypted</font>

448
00:17:48,040 --> 00:17:53,860
but he<font color="#CCCCCC"> is trying to</font><font color="#E5E5E5"> cheat and he you</font>

449
00:17:51,250 --> 00:17:55,240
<font color="#CCCCCC">know has a hope of succeeding</font><font color="#E5E5E5"> this means</font>

450
00:17:53,860 --> 00:17:57,399
that there's gonna be some<font color="#E5E5E5"> subset of</font>

451
00:17:55,240 --> 00:18:00,100
challenges that<font color="#E5E5E5"> will really allow him to</font>

452
00:17:57,400 --> 00:18:01,690
<font color="#E5E5E5">come up with a valid proof right so</font>

453
00:18:00,100 --> 00:18:03,280
there's so he cannot just give<font color="#CCCCCC"> your</font>

454
00:18:01,690 --> 00:18:05,020
<font color="#CCCCCC">company completely hope to prove a</font>

455
00:18:03,280 --> 00:18:07,300
completely around<font color="#CCCCCC"> them ciphertext</font><font color="#E5E5E5"> no he</font>

456
00:18:05,020 --> 00:18:09,160
has to hope he has to pick<font color="#CCCCCC"> it in some</font>

457
00:18:07,300 --> 00:18:10,750
way that<font color="#E5E5E5"> for some challenges he actually</font>

458
00:18:09,160 --> 00:18:14,620
will be<font color="#CCCCCC"> to will be able to trick you</font>

459
00:18:10,750 --> 00:18:16,090
right so if so basically the C hat is

460
00:18:14,620 --> 00:18:18,939
the difference<font color="#E5E5E5"> of two challenges for</font>

461
00:18:16,090 --> 00:18:20,800
which he is<font color="#CCCCCC"> successful and the encrypter</font>

462
00:18:18,940 --> 00:18:22,420
actually already knows one of<font color="#CCCCCC"> these</font>

463
00:18:20,800 --> 00:18:25,060
challenges<font color="#CCCCCC"> that's the one in the proof</font>

464
00:18:22,420 --> 00:18:26,260
<font color="#E5E5E5">so the</font><font color="#CCCCCC"> Decrypter sorry it</font><font color="#E5E5E5"> already knows</font>

465
00:18:25,060 --> 00:18:27,669
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the challenges that's the one the</font>

466
00:18:26,260 --> 00:18:30,400
prover gave and the proof so now he has

467
00:18:27,670 --> 00:18:32,200
<font color="#CCCCCC">to just guess one</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> this kind</font><font color="#E5E5E5"> of</font>

468
00:18:30,400 --> 00:18:34,390
lowers the challenge space from

469
00:18:32,200 --> 00:18:36,130
<font color="#CCCCCC">childhood's possibility for C hat from</font>

470
00:18:34,390 --> 00:18:39,550
challenge space<font color="#CCCCCC"> squared to challenge</font>

471
00:18:36,130 --> 00:18:42,940
space<font color="#CCCCCC"> ok still you know</font><font color="#E5E5E5"> not great</font><font color="#CCCCCC"> okay</font>

472
00:18:39,550 --> 00:18:45,040
so<font color="#CCCCCC"> but those</font><font color="#E5E5E5"> are the result that the</font>

473
00:18:42,940 --> 00:18:47,500
thing we can prove is that<font color="#CCCCCC"> the</font>

474
00:18:45,040 --> 00:18:51,520
decryption time will actually<font color="#CCCCCC"> depend on</font>

475
00:18:47,500 --> 00:18:55,060
the time it takes an adversary to<font color="#E5E5E5"> fool</font>

476
00:18:51,520 --> 00:18:57,780
us<font color="#E5E5E5"> so basically if the adversaries</font>

477
00:18:55,060 --> 00:19:00,970
allowed<font color="#CCCCCC"> q</font><font color="#E5E5E5"> queries to</font><font color="#CCCCCC"> the random</font><font color="#E5E5E5"> Oracle</font>

478
00:18:57,780 --> 00:19:03,250
then if T is the<font color="#CCCCCC"> number of times we have</font>

479
00:19:00,970 --> 00:19:05,320
<font color="#CCCCCC">to guess C hat as the Decrypter</font><font color="#E5E5E5"> then the</font>

480
00:19:03,250 --> 00:19:07,120
probability the<font color="#E5E5E5"> T is bigger than</font><font color="#CCCCCC"> K Q is</font>

481
00:19:05,320 --> 00:19:08,590
less<font color="#CCCCCC"> than 1</font><font color="#E5E5E5"> over K so basically</font><font color="#CCCCCC"> the</font>

482
00:19:07,120 --> 00:19:10,360
<font color="#CCCCCC">probability that</font><font color="#E5E5E5"> T is bigger than you</font>

483
00:19:08,590 --> 00:19:12,909
know<font color="#CCCCCC"> two Q's</font><font color="#E5E5E5"> the probability I will need</font>

484
00:19:10,360 --> 00:19:18,820
to guess<font color="#CCCCCC"> C more than</font><font color="#E5E5E5"> 2 Q times is less</font>

485
00:19:12,910 --> 00:19:20,650
than<font color="#E5E5E5"> 1/2 um</font><font color="#CCCCCC"> so what the implication of</font>

486
00:19:18,820 --> 00:19:22,899
this<font color="#CCCCCC"> is that the expected decryption</font>

487
00:19:20,650 --> 00:19:25,450
time depends on<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of random</font>

488
00:19:22,900 --> 00:19:27,010
Oracle queries the adversary makes so

489
00:19:25,450 --> 00:19:28,750
this could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> very problematic I mean we</font>

490
00:19:27,010 --> 00:19:30,520
don't<font color="#E5E5E5"> want this you know this is not</font>

491
00:19:28,750 --> 00:19:31,660
what we always<font color="#E5E5E5"> strive for right because</font>

492
00:19:30,520 --> 00:19:33,850
if the<font color="#CCCCCC"> adversary is much more powerful</font>

493
00:19:31,660 --> 00:19:36,790
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is bad you</font><font color="#CCCCCC"> know the answer may be</font>

494
00:19:33,850 --> 00:19:39,879
able<font color="#E5E5E5"> to make a lot of queries</font><font color="#CCCCCC"> and the</font>

495
00:19:36,790 --> 00:19:41,500
Decrypter is not too powerful right<font color="#E5E5E5"> but</font>

496
00:19:39,880 --> 00:19:42,930
the thing<font color="#CCCCCC"> is in many</font><font color="#E5E5E5"> scenarios the power</font>

497
00:19:41,500 --> 00:19:47,320
of the adversary<font color="#E5E5E5"> could be</font><font color="#CCCCCC"> mitigated</font>

498
00:19:42,930 --> 00:19:49,060
right so so here's you<font color="#CCCCCC"> know some ideas</font>

499
00:19:47,320 --> 00:19:50,350
that<font color="#CCCCCC"> we had for how you can limit</font><font color="#E5E5E5"> the</font>

500
00:19:49,060 --> 00:19:53,050
number<font color="#E5E5E5"> of random Oracle cards by the</font>

501
00:19:50,350 --> 00:19:55,030
<font color="#E5E5E5">adversary so the first thing is what you</font>

502
00:19:53,050 --> 00:19:56,800
can do is make the adverse random<font color="#E5E5E5"> Oracle</font>

503
00:19:55,030 --> 00:20:00,010
very very slow<font color="#E5E5E5"> on purpose</font>

504
00:19:56,800 --> 00:20:01,480
so the ahh --mess<font color="#E5E5E5"> prove</font><font color="#CCCCCC"> err if the</font>

505
00:20:00,010 --> 00:20:01,750
prover is<font color="#E5E5E5"> honest he just needs to make</font>

506
00:20:01,480 --> 00:20:03,970
one

507
00:20:01,750 --> 00:20:05,620
query<font color="#CCCCCC"> the</font><font color="#E5E5E5"> verification only needs to</font>

508
00:20:03,970 --> 00:20:07,990
make<font color="#CCCCCC"> one query</font><font color="#E5E5E5"> decryption doesn't need</font>

509
00:20:05,620 --> 00:20:09,219
to make any queries<font color="#E5E5E5"> so the only entity</font>

510
00:20:07,990 --> 00:20:11,590
<font color="#E5E5E5">that</font><font color="#CCCCCC"> will ever</font><font color="#E5E5E5"> need to more than one</font>

511
00:20:09,220 --> 00:20:14,440
query is an adversarial one so if<font color="#E5E5E5"> you</font>

512
00:20:11,590 --> 00:20:16,389
make the random<font color="#E5E5E5"> Oracle very slow it will</font>

513
00:20:14,440 --> 00:20:18,760
<font color="#E5E5E5">cost the adversary a lot of time to make</font>

514
00:20:16,390 --> 00:20:20,230
these<font color="#CCCCCC"> random Oracle queries</font><font color="#E5E5E5"> so you know</font>

515
00:20:18,760 --> 00:20:24,900
you can<font color="#E5E5E5"> even make a random Oracle query</font>

516
00:20:20,230 --> 00:20:24,900
<font color="#CCCCCC">know five minutes low you know you want</font>

517
00:20:25,110 --> 00:20:31,929
seconds well then then you know this<font color="#E5E5E5"> is</font>

518
00:20:30,100 --> 00:20:33,250
this<font color="#E5E5E5"> could actually mitigate the</font>

519
00:20:31,930 --> 00:20:36,880
difference between<font color="#E5E5E5"> the power of the</font>

520
00:20:33,250 --> 00:20:38,530
adversary versus the<font color="#E5E5E5"> approver so another</font>

521
00:20:36,880 --> 00:20:40,360
possibility is<font color="#E5E5E5"> you have an interactive</font>

522
00:20:38,530 --> 00:20:43,720
protocol<font color="#E5E5E5"> or use public randomness</font>

523
00:20:40,360 --> 00:20:45,129
beacons<font color="#E5E5E5"> so the verifier so the idea is</font>

524
00:20:43,720 --> 00:20:46,300
the verifier just if this is an

525
00:20:45,130 --> 00:20:47,950
interactive protocol she should<font color="#E5E5E5"> just</font>

526
00:20:46,300 --> 00:20:50,020
send a random<font color="#E5E5E5"> salt to the prover</font>

527
00:20:47,950 --> 00:20:51,670
<font color="#E5E5E5">basically it's like send a random Oracle</font>

528
00:20:50,020 --> 00:20:53,980
to the prover so the prover could not do

529
00:20:51,670 --> 00:20:55,390
any<font color="#E5E5E5"> pre computation before it so you</font>

530
00:20:53,980 --> 00:20:57,760
<font color="#E5E5E5">really if there's a protocol running</font><font color="#CCCCCC"> I</font>

531
00:20:55,390 --> 00:20:59,470
tell you use this random Oracle and then

532
00:20:57,760 --> 00:21:01,570
he kind of has<font color="#CCCCCC"> TIF</font><font color="#E5E5E5"> he's gonna cheat he</font>

533
00:20:59,470 --> 00:21:03,820
really has<font color="#E5E5E5"> to do it online this cheating</font>

534
00:21:01,570 --> 00:21:04,870
<font color="#CCCCCC">um and if you know there it's not</font>

535
00:21:03,820 --> 00:21:06,760
interactive<font color="#CCCCCC"> then you can use a</font>

536
00:21:04,870 --> 00:21:08,830
randomness beacon you know by<font color="#CCCCCC"> list for</font>

537
00:21:06,760 --> 00:21:10,420
example<font color="#CCCCCC"> and you have to use the public</font>

538
00:21:08,830 --> 00:21:12,429
randomness at the time you submit<font color="#E5E5E5"> the</font>

539
00:21:10,420 --> 00:21:17,140
proof<font color="#E5E5E5"> right so that</font><font color="#CCCCCC"> also restricts the</font>

540
00:21:12,430 --> 00:21:19,150
time you can have so this this other

541
00:21:17,140 --> 00:21:20,500
suggestion<font color="#E5E5E5"> right</font><font color="#CCCCCC"> it's actually my code</font>

542
00:21:19,150 --> 00:21:22,360
<font color="#CCCCCC">Greg</font><font color="#E5E5E5"> suggests that it's like you know</font>

543
00:21:20,500 --> 00:21:23,890
what if<font color="#E5E5E5"> we just impose large fines for</font>

544
00:21:22,360 --> 00:21:25,360
cheating<font color="#E5E5E5"> and</font><font color="#CCCCCC"> AH</font><font color="#E5E5E5"> you know at</font><font color="#CCCCCC"> first of the</font>

545
00:21:23,890 --> 00:21:29,230
<font color="#E5E5E5">car you lived in Switzerland</font><font color="#CCCCCC"> too long</font>

546
00:21:25,360 --> 00:21:32,800
and that's the this is the<font color="#E5E5E5"> solution</font><font color="#CCCCCC"> to</font>

547
00:21:29,230 --> 00:21:34,060
everything there but but you know<font color="#E5E5E5"> let me</font>

548
00:21:32,800 --> 00:21:38,770
kind of think about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> actually works</font>

549
00:21:34,060 --> 00:21:40,419
right<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> you know no one is people</font>

550
00:21:38,770 --> 00:21:43,180
just don't<font color="#E5E5E5"> do</font><font color="#CCCCCC"> anything bad there because</font>

551
00:21:40,420 --> 00:21:45,190
there's large fines<font color="#E5E5E5"> and in some sense</font>

552
00:21:43,180 --> 00:21:46,630
this makes<font color="#E5E5E5"> sense because the fact that</font>

553
00:21:45,190 --> 00:21:49,840
cheating occurred can be immediately

554
00:21:46,630 --> 00:21:52,770
<font color="#E5E5E5">detected right so unless cheating</font><font color="#CCCCCC"> will</font>

555
00:21:49,840 --> 00:21:56,350
you know do something<font color="#E5E5E5"> so</font><font color="#CCCCCC"> amazing</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> you</font>

556
00:21:52,770 --> 00:21:58,980
<font color="#CCCCCC">you're going to</font><font color="#E5E5E5"> you know you're</font><font color="#CCCCCC"> going to</font>

557
00:21:56,350 --> 00:22:01,000
sort<font color="#E5E5E5"> of weigh the possibility of sort of</font>

558
00:21:58,980 --> 00:22:02,350
being<font color="#CCCCCC"> detected</font><font color="#E5E5E5"> you're detected</font>

559
00:22:01,000 --> 00:22:03,460
immediately<font color="#CCCCCC"> you immediately detected</font>

560
00:22:02,350 --> 00:22:04,810
someone's cheating<font color="#E5E5E5"> because somebody</font>

561
00:22:03,460 --> 00:22:06,550
tried to decrypt<font color="#E5E5E5"> and it didn't work so</font>

562
00:22:04,810 --> 00:22:09,280
<font color="#E5E5E5">like okay</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> have to cheat now I have</font>

563
00:22:06,550 --> 00:22:11,260
to guess the<font color="#E5E5E5"> C's and you know and once I</font>

564
00:22:09,280 --> 00:22:14,020
guess the C's<font color="#CCCCCC"> a large fine</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be you</font>

565
00:22:11,260 --> 00:22:15,340
know<font color="#E5E5E5"> imposed on you right even if I can</font>

566
00:22:14,020 --> 00:22:18,249
decrypt successfully

567
00:22:15,340 --> 00:22:19,959
and so this is definitely<font color="#E5E5E5"> in many</font>

568
00:22:18,249 --> 00:22:21,909
<font color="#E5E5E5">scenarios you know yeah unless you know</font>

569
00:22:19,960 --> 00:22:23,980
it's life and<font color="#E5E5E5"> death the situation which</font>

570
00:22:21,909 --> 00:22:27,549
you<font color="#CCCCCC"> know most the time it's not this is</font>

571
00:22:23,980 --> 00:22:31,899
a fairly<font color="#CCCCCC"> good</font><font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> way to Mitte</font><font color="#E5E5E5"> to</font>

572
00:22:27,549 --> 00:22:35,259
make sure the adversary is not cheating

573
00:22:31,899 --> 00:22:36,459
<font color="#E5E5E5">so another way</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do it</font><font color="#CCCCCC"> you know if</font>

574
00:22:35,259 --> 00:22:38,559
<font color="#E5E5E5">you're really through maybe this really</font>

575
00:22:36,460 --> 00:22:40,059
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a life</font><font color="#E5E5E5"> in that situation</font><font color="#CCCCCC"> put a bound</font>

576
00:22:38,559 --> 00:22:41,139
on<font color="#E5E5E5"> the maximum number of guests if you</font>

577
00:22:40,059 --> 00:22:44,230
want to put a bound on the maximum

578
00:22:41,139 --> 00:22:45,998
number of guesses<font color="#CCCCCC"> you can just make the</font>

579
00:22:44,230 --> 00:22:47,289
<font color="#E5E5E5">challenge space smaller but this</font>

580
00:22:45,999 --> 00:22:49,269
increases<font color="#E5E5E5"> the proof size now you have to</font>

581
00:22:47,289 --> 00:22:50,679
do repetition right<font color="#E5E5E5"> so if you want to do</font>

582
00:22:49,269 --> 00:22:53,409
<font color="#CCCCCC">to you</font><font color="#E5E5E5"> know it's the expected</font><font color="#CCCCCC"> number of</font>

583
00:22:50,679 --> 00:22:55,629
decryptions<font color="#CCCCCC"> is still the same as before</font>

584
00:22:53,409 --> 00:22:58,330
<font color="#CCCCCC">but</font><font color="#E5E5E5"> now it is</font><font color="#CCCCCC"> an upper bound</font><font color="#E5E5E5"> okay you</font>

585
00:22:55,629 --> 00:23:00,459
can do that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can also a lot of</font>

586
00:22:58,330 --> 00:23:02,350
these applications<font color="#E5E5E5"> require CCA security</font>

587
00:23:00,460 --> 00:23:03,820
and you can<font color="#CCCCCC"> easily adapt our thing</font>

588
00:23:02,350 --> 00:23:06,248
because you just<font color="#CCCCCC"> used no or Jung</font>

589
00:23:03,820 --> 00:23:08,559
approach and since we already<font color="#E5E5E5"> have we</font>

590
00:23:06,249 --> 00:23:10,539
<font color="#CCCCCC">already have one encryption</font><font color="#E5E5E5"> and a proof</font>

591
00:23:08,559 --> 00:23:12,879
you just need can add a second

592
00:23:10,539 --> 00:23:14,980
encryption for you know<font color="#E5E5E5"> just it's very</font>

593
00:23:12,879 --> 00:23:16,299
<font color="#E5E5E5">little cost</font><font color="#CCCCCC"> so it's not</font><font color="#E5E5E5"> a bad thing</font><font color="#CCCCCC"> cuz</font>

594
00:23:14,980 --> 00:23:19,059
you already<font color="#E5E5E5"> have is your knowledge proof</font>

595
00:23:16,299 --> 00:23:22,119
<font color="#CCCCCC">okay so I think the main I mean there's</font>

596
00:23:19,059 --> 00:23:23,740
a few open problems right still<font color="#CCCCCC"> the main</font>

597
00:23:22,119 --> 00:23:25,720
problem I listed before<font color="#CCCCCC"> is</font><font color="#E5E5E5"> still kind of</font>

598
00:23:23,740 --> 00:23:27,639
open right what what more can we do with

599
00:23:25,720 --> 00:23:30,369
this how can we do zero knowledge proof

600
00:23:27,639 --> 00:23:32,918
<font color="#E5E5E5">for</font><font color="#CCCCCC"> lattices better but I</font><font color="#E5E5E5"> think an</font>

601
00:23:30,369 --> 00:23:37,840
interesting<font color="#E5E5E5"> open problem is basically is</font>

602
00:23:32,919 --> 00:23:39,820
this lemma tight right<font color="#CCCCCC"> so is it</font><font color="#E5E5E5"> can you</font>

603
00:23:37,840 --> 00:23:41,379
<font color="#E5E5E5">really is this the best you could say</font>

604
00:23:39,820 --> 00:23:43,149
right<font color="#E5E5E5"> maybe you can say the problem</font>

605
00:23:41,379 --> 00:23:45,850
could<font color="#E5E5E5"> you say</font><font color="#CCCCCC"> something like probability</font>

606
00:23:43,149 --> 00:23:47,619
that<font color="#E5E5E5"> I need more than</font><font color="#CCCCCC"> KQ queries</font><font color="#E5E5E5"> is less</font>

607
00:23:45,850 --> 00:23:49,809
than maybe<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> over K</font><font color="#CCCCCC"> squared right</font>

608
00:23:47,619 --> 00:23:51,249
so our proof is very<font color="#E5E5E5"> black box we only</font>

609
00:23:49,809 --> 00:23:54,580
use<font color="#E5E5E5"> the fact that</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a zero</font>

610
00:23:51,249 --> 00:23:56,740
knowledge proof<font color="#CCCCCC"> but</font><font color="#E5E5E5"> maybe you can use</font>

611
00:23:54,580 --> 00:23:59,470
<font color="#CCCCCC">some algebra because it's not clear to</font>

612
00:23:56,740 --> 00:24:02,320
us<font color="#E5E5E5"> what</font><font color="#CCCCCC"> exactly the attack would be</font><font color="#E5E5E5"> of</font>

613
00:23:59,470 --> 00:24:04,139
an adversary or for a for any ring could

614
00:24:02,320 --> 00:24:06,970
<font color="#E5E5E5">you come up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> attack</font><font color="#E5E5E5"> that works</font>

615
00:24:04,139 --> 00:24:09,129
really well<font color="#E5E5E5"> that actually where the</font>

616
00:24:06,970 --> 00:24:12,279
adversary<font color="#CCCCCC"> can actually make this</font><font color="#E5E5E5"> this</font>

617
00:24:09,129 --> 00:24:13,360
tight<font color="#CCCCCC"> so a non black box</font><font color="#E5E5E5"> approach you</font>

618
00:24:12,279 --> 00:24:14,649
know I think<font color="#E5E5E5"> you would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to use some</font>

619
00:24:13,360 --> 00:24:16,389
algebraic properties of<font color="#E5E5E5"> iron that could</font>

620
00:24:14,649 --> 00:24:19,178
be<font color="#CCCCCC"> actually really really interesting I</font>

621
00:24:16,389 --> 00:24:21,580
think<font color="#CCCCCC"> if you could decrease this to</font>

622
00:24:19,179 --> 00:24:24,340
something<font color="#CCCCCC"> not sure you I mean it'd be</font>

623
00:24:21,580 --> 00:24:28,090
<font color="#E5E5E5">great if you</font><font color="#CCCCCC"> can get this to be to get</font>

624
00:24:24,340 --> 00:24:29,209
this to<font color="#E5E5E5"> be negligible but even getting</font>

625
00:24:28,090 --> 00:24:31,010
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> 1 over case</font>

626
00:24:29,210 --> 00:24:33,169
maybe you know<font color="#E5E5E5"> just put some constant in</font>

627
00:24:31,010 --> 00:24:34,669
there it would still be quite quite

628
00:24:33,169 --> 00:24:39,190
<font color="#E5E5E5">interesting with maybe lead</font><font color="#CCCCCC"> to some nice</font>

629
00:24:34,669 --> 00:24:39,190
algebraic results so

