1
00:00:00,329 --> 00:00:06,270
<font color="#CCCCCC">yes I want to</font><font color="#E5E5E5"> tell you how to remove</font>

2
00:00:03,120 --> 00:00:09,000
gradient coatings or<font color="#E5E5E5"> mountaineering maps</font>

3
00:00:06,270 --> 00:00:12,480
from functional encryption and this is

4
00:00:09,000 --> 00:00:18,539
joint work with rachel lynn and omar

5
00:00:12,480 --> 00:00:23,250
<font color="#E5E5E5">panis so let me start by turning on my</font>

6
00:00:18,539 --> 00:00:25,550
clicker and then recalling how what

7
00:00:23,250 --> 00:00:28,920
exactly is functional encryption so

8
00:00:25,550 --> 00:00:30,960
inflamed crip ssin<font color="#CCCCCC"> we know that anyone</font>

9
00:00:28,920 --> 00:00:33,360
that<font color="#E5E5E5"> has</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> public key can encrypt and</font>

10
00:00:30,960 --> 00:00:36,960
if you don't have the secret key you

11
00:00:33,360 --> 00:00:39,239
can't really tell an encryption of one

12
00:00:36,960 --> 00:00:43,140
plain text from an encryption of<font color="#CCCCCC"> the</font>

13
00:00:39,239 --> 00:00:45,269
other and if you have the secret<font color="#E5E5E5"> key</font>

14
00:00:43,140 --> 00:00:47,820
then of course you can fully<font color="#E5E5E5"> learn the</font>

15
00:00:45,270 --> 00:00:50,219
<font color="#CCCCCC">plaintext in</font><font color="#E5E5E5"> functional encryption you</font>

16
00:00:47,820 --> 00:00:52,850
can also<font color="#E5E5E5"> generate partial decryption</font>

17
00:00:50,219 --> 00:00:57,059
keys that<font color="#E5E5E5"> allow you to learn a specific</font>

18
00:00:52,850 --> 00:01:00,050
<font color="#E5E5E5">function of the plaintext and we still</font>

19
00:00:57,059 --> 00:01:02,430
require that indistinguishability<font color="#CCCCCC"> hold</font>

20
00:01:00,050 --> 00:01:04,048
<font color="#E5E5E5">provided that the function</font><font color="#CCCCCC"> doesn't</font>

21
00:01:02,430 --> 00:01:07,170
separate these two<font color="#E5E5E5"> plaintext the</font>

22
00:01:04,049 --> 00:01:09,210
function agrees on the two plaintext<font color="#E5E5E5"> so</font>

23
00:01:07,170 --> 00:01:13,820
this is the the notion<font color="#CCCCCC"> of functional</font>

24
00:01:09,210 --> 00:01:17,039
encryption and as it turns<font color="#E5E5E5"> out a crucial</font>

25
00:01:13,820 --> 00:01:18,720
aspect that the tremendously<font color="#CCCCCC"> affects</font><font color="#E5E5E5"> of</font>

26
00:01:17,040 --> 00:01:21,540
the power of functional encryption is

27
00:01:18,720 --> 00:01:25,470
what is exactly<font color="#E5E5E5"> the size of the</font>

28
00:01:21,540 --> 00:01:27,720
ciphertext<font color="#CCCCCC"> and how it scales was the</font>

29
00:01:25,470 --> 00:01:30,150
circuit size of the functions that you

30
00:01:27,720 --> 00:01:34,229
<font color="#E5E5E5">want to support so let me tell you what</font>

31
00:01:30,150 --> 00:01:37,380
is<font color="#E5E5E5"> the rough picture here so</font><font color="#CCCCCC"> we</font>

32
00:01:34,229 --> 00:01:40,619
<font color="#E5E5E5">basically know that if we allow the size</font>

33
00:01:37,380 --> 00:01:42,149
of ciphertext<font color="#E5E5E5"> to grow with the the</font>

34
00:01:40,619 --> 00:01:44,430
circuit side of the functions<font color="#CCCCCC"> do</font><font color="#E5E5E5"> want to</font>

35
00:01:42,150 --> 00:01:46,770
<font color="#E5E5E5">support then functional encryption is</font>

36
00:01:44,430 --> 00:01:49,439
not really more powerful than play

37
00:01:46,770 --> 00:01:51,920
encryption and in particular we<font color="#CCCCCC"> can</font>

38
00:01:49,439 --> 00:01:56,250
construct<font color="#E5E5E5"> it from standard assumptions</font>

39
00:01:51,920 --> 00:02:00,360
in contrast if we<font color="#E5E5E5"> allow the ciphertext</font>

40
00:01:56,250 --> 00:02:04,500
<font color="#CCCCCC">to</font><font color="#E5E5E5"> even mildly grow with the circuit</font>

41
00:02:00,360 --> 00:02:07,500
size were<font color="#E5E5E5"> by mild they mean that</font><font color="#CCCCCC"> they</font>

42
00:02:04,500 --> 00:02:11,610
sub linearly<font color="#E5E5E5"> in the in the circuit size</font>

43
00:02:07,500 --> 00:02:13,500
then sorry<font color="#CCCCCC"> not</font><font color="#E5E5E5"> mildly grow but mildly be</font>

44
00:02:11,610 --> 00:02:16,470
<font color="#E5E5E5">succinctly mildly</font><font color="#CCCCCC"> succeed</font>

45
00:02:13,500 --> 00:02:18,810
<font color="#CCCCCC">then there's a tremendous jump</font><font color="#E5E5E5"> in the</font>

46
00:02:16,470 --> 00:02:21,030
power<font color="#E5E5E5"> of functional encryption and we</font>

47
00:02:18,810 --> 00:02:25,650
already<font color="#CCCCCC"> get the immense</font><font color="#E5E5E5"> power of</font>

48
00:02:21,030 --> 00:02:28,740
obfuscation<font color="#CCCCCC"> okay so this is the the</font>

49
00:02:25,650 --> 00:02:30,540
power of of<font color="#CCCCCC"> sixteen</font><font color="#E5E5E5"> Ness and</font><font color="#CCCCCC"> let me also</font>

50
00:02:28,740 --> 00:02:33,090
<font color="#CCCCCC">mention that sometimes</font><font color="#E5E5E5"> there's another</font>

51
00:02:30,540 --> 00:02:35,940
measure of<font color="#E5E5E5"> 16s that we care about which</font>

52
00:02:33,090 --> 00:02:38,730
<font color="#E5E5E5">is how</font><font color="#CCCCCC"> the size of ciphertext scales was</font>

53
00:02:35,940 --> 00:02:41,400
the number of<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> everything that I'm</font>

54
00:02:38,730 --> 00:02:43,350
going<font color="#CCCCCC"> to say today applies also</font><font color="#E5E5E5"> there</font>

55
00:02:41,400 --> 00:02:45,209
<font color="#E5E5E5">for the sake of this talk we can think</font>

56
00:02:43,350 --> 00:02:47,489
about one key and<font color="#CCCCCC"> we'll really</font><font color="#E5E5E5"> care</font>

57
00:02:45,209 --> 00:02:50,300
<font color="#E5E5E5">about how the suffix scales with the</font>

58
00:02:47,489 --> 00:02:55,020
size of of<font color="#E5E5E5"> the corresponding</font><font color="#CCCCCC"> function</font>

59
00:02:50,300 --> 00:02:58,320
okay<font color="#CCCCCC"> so</font><font color="#E5E5E5"> naturally there's</font><font color="#CCCCCC"> being a lot of</font>

60
00:02:55,020 --> 00:03:00,989
work and this has become<font color="#E5E5E5"> constructing</font><font color="#CCCCCC"> 16</font>

61
00:02:58,320 --> 00:03:03,959
function encryption has become a central

62
00:03:00,989 --> 00:03:06,180
goal in cryptographic<font color="#E5E5E5"> research</font>

63
00:03:03,959 --> 00:03:08,610
I just made some impressive<font color="#E5E5E5"> progress</font>

64
00:03:06,180 --> 00:03:12,090
<font color="#E5E5E5">here so let me tell you what we we know</font>

65
00:03:08,610 --> 00:03:14,810
roughly<font color="#E5E5E5"> so the first constructions were</font>

66
00:03:12,090 --> 00:03:17,400
based on obfuscation on

67
00:03:14,810 --> 00:03:20,250
indistinguishability obfuscation<font color="#CCCCCC"> and</font>

68
00:03:17,400 --> 00:03:22,320
<font color="#CCCCCC">then following</font><font color="#E5E5E5"> that there were works</font>

69
00:03:20,250 --> 00:03:24,780
that showed that<font color="#CCCCCC"> you can actually</font>

70
00:03:22,320 --> 00:03:28,019
<font color="#E5E5E5">construct function encryption directly</font>

71
00:03:24,780 --> 00:03:30,299
from<font color="#CCCCCC"> mountaineering Maps or greater than</font>

72
00:03:28,019 --> 00:03:31,620
<font color="#CCCCCC">codings</font><font color="#E5E5E5"> today the difference</font><font color="#CCCCCC"> is not</font>

73
00:03:30,299 --> 00:03:34,470
really going to<font color="#E5E5E5"> matter all same</font>

74
00:03:31,620 --> 00:03:37,170
<font color="#E5E5E5">alternative</font><font color="#CCCCCC"> maps and even from from</font>

75
00:03:34,470 --> 00:03:39,750
pretty simple assumptions now

76
00:03:37,170 --> 00:03:41,880
<font color="#CCCCCC">multi-layer</font><font color="#E5E5E5"> maps is of course an object</font>

77
00:03:39,750 --> 00:03:46,350
that we still don't<font color="#E5E5E5"> really understand</font>

78
00:03:41,880 --> 00:03:48,329
well<font color="#CCCCCC"> and there's been a lot of effort in</font>

79
00:03:46,350 --> 00:03:51,299
trying to sort<font color="#E5E5E5"> of reduce the gap between</font>

80
00:03:48,329 --> 00:03:54,200
<font color="#CCCCCC">mountain</font><font color="#E5E5E5"> maps and standard assumptions</font>

81
00:03:51,299 --> 00:03:59,010
or objects<font color="#CCCCCC"> that we understand</font><font color="#E5E5E5"> better and</font>

82
00:03:54,200 --> 00:04:00,649
<font color="#E5E5E5">concretely by linear</font><font color="#CCCCCC"> maps and today is</font>

83
00:03:59,010 --> 00:04:04,230
sort<font color="#CCCCCC"> of the the state-of-the-art</font>

84
00:04:00,650 --> 00:04:07,860
<font color="#E5E5E5">constructions seem to come very close we</font>

85
00:04:04,230 --> 00:04:11,220
even have constructions based on<font color="#E5E5E5"> try</font>

86
00:04:07,860 --> 00:04:16,290
<font color="#E5E5E5">linear maps and some some simple</font>

87
00:04:11,220 --> 00:04:18,870
assumptions on<font color="#E5E5E5"> on local PR</font><font color="#CCCCCC"> jeez but we</font>

88
00:04:16,290 --> 00:04:20,910
haven't<font color="#CCCCCC"> quite</font><font color="#E5E5E5"> cross this line yet we're</font>

89
00:04:18,870 --> 00:04:24,930
<font color="#CCCCCC">still not in the world of standard</font>

90
00:04:20,910 --> 00:04:27,320
assumptions<font color="#E5E5E5"> certainly not we don't have</font>

91
00:04:24,930 --> 00:04:32,900
constructions are based on<font color="#CCCCCC"> bilinear map</font>

92
00:04:27,320 --> 00:04:36,620
so let<font color="#E5E5E5"> me tell you what we're</font><font color="#CCCCCC"> doing in</font>

93
00:04:32,900 --> 00:04:40,190
this work<font color="#E5E5E5"> for now at a very</font><font color="#CCCCCC"> high level</font>

94
00:04:36,620 --> 00:04:42,950
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we identify certain sufficient</font>

95
00:04:40,190 --> 00:04:46,180
conditions<font color="#CCCCCC"> that will allow us to really</font>

96
00:04:42,950 --> 00:04:49,610
cross this line and go to by linear<font color="#CCCCCC"> maps</font>

97
00:04:46,180 --> 00:04:51,800
<font color="#CCCCCC">roughly</font><font color="#E5E5E5"> speaking what we show is that</font>

98
00:04:49,610 --> 00:04:56,450
<font color="#E5E5E5">you can take any functional encryption</font>

99
00:04:51,800 --> 00:05:00,440
scheme that uses<font color="#CCCCCC"> constant degree maps</font>

100
00:04:56,450 --> 00:05:03,860
and sort of reduce the<font color="#CCCCCC"> degree 2 to 2</font><font color="#E5E5E5"> by</font>

101
00:05:00,440 --> 00:05:05,810
linear maps provided<font color="#CCCCCC"> two things</font><font color="#E5E5E5"> so first</font>

102
00:05:03,860 --> 00:05:08,720
we want the<font color="#E5E5E5"> functional encryption scheme</font>

103
00:05:05,810 --> 00:05:10,940
to be sufficiently succinct<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> say</font>

104
00:05:08,720 --> 00:05:12,860
exactly<font color="#E5E5E5"> what this</font><font color="#CCCCCC"> means in a second and</font>

105
00:05:10,940 --> 00:05:16,520
second we want the function<font color="#E5E5E5"> encryption</font>

106
00:05:12,860 --> 00:05:19,400
scheme the construction to use the<font color="#E5E5E5"> multi</font>

107
00:05:16,520 --> 00:05:23,359
<font color="#E5E5E5">linear maps in a</font><font color="#CCCCCC"> blackbox way and here</font>

108
00:05:19,400 --> 00:05:24,979
when I say<font color="#CCCCCC"> blackbox way</font><font color="#E5E5E5"> I mean that the</font>

109
00:05:23,360 --> 00:05:26,480
construction only<font color="#CCCCCC"> makes generic</font>

110
00:05:24,980 --> 00:05:28,340
operations

111
00:05:26,480 --> 00:05:30,440
it doesn't really care it's completely

112
00:05:28,340 --> 00:05:33,560
oblivious of the<font color="#CCCCCC"> actual representation</font>

113
00:05:30,440 --> 00:05:35,570
of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> bilinear</font><font color="#E5E5E5"> maps so this is very</font>

114
00:05:33,560 --> 00:05:38,840
<font color="#CCCCCC">similar to the generic growth</font><font color="#E5E5E5"> model that</font>

115
00:05:35,570 --> 00:05:42,050
that's many of you probably know<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

116
00:05:38,840 --> 00:05:44,570
let me<font color="#CCCCCC"> try</font><font color="#E5E5E5"> to be more precise here about</font>

117
00:05:42,050 --> 00:05:46,400
what we show what we<font color="#E5E5E5"> show is the</font>

118
00:05:44,570 --> 00:05:50,150
following<font color="#CCCCCC"> we</font><font color="#E5E5E5"> showed</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can take</font>

119
00:05:46,400 --> 00:05:54,919
any functional encryption scheme that

120
00:05:50,150 --> 00:05:59,570
uses<font color="#E5E5E5"> a degree D</font><font color="#CCCCCC"> multi map as a black box</font>

121
00:05:54,920 --> 00:06:01,850
<font color="#E5E5E5">and has sexiness that is better than</font><font color="#CCCCCC"> one</font>

122
00:05:59,570 --> 00:06:04,880
<font color="#E5E5E5">over</font><font color="#CCCCCC"> d namely the size of the cipher</font>

123
00:06:01,850 --> 00:06:09,530
<font color="#CCCCCC">text scales with the</font><font color="#E5E5E5"> circuit size to the</font>

124
00:06:04,880 --> 00:06:11,930
power<font color="#CCCCCC"> its most one over D</font><font color="#E5E5E5"> and if we have</font>

125
00:06:09,530 --> 00:06:17,119
<font color="#E5E5E5">that plus other standard assumptions</font>

126
00:06:11,930 --> 00:06:21,700
like<font color="#CCCCCC"> lwe then we can get a sixteen</font>

127
00:06:17,120 --> 00:06:25,640
<font color="#E5E5E5">functional encryption from bilinear</font><font color="#CCCCCC"> maps</font>

128
00:06:21,700 --> 00:06:29,479
now in terms of security<font color="#E5E5E5"> we're trying to</font>

129
00:06:25,640 --> 00:06:33,289
<font color="#E5E5E5">capture a large class of constructions</font>

130
00:06:29,480 --> 00:06:36,290
here<font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> what we want to</font><font color="#E5E5E5"> start</font>

131
00:06:33,290 --> 00:06:39,740
with is any function encryption scheme

132
00:06:36,290 --> 00:06:41,180
that can be showing secure in in an

133
00:06:39,740 --> 00:06:45,180
ideal

134
00:06:41,180 --> 00:06:47,340
generic multimap model and as a result

135
00:06:45,180 --> 00:06:50,870
<font color="#CCCCCC">also what we get is a construction that</font>

136
00:06:47,340 --> 00:06:57,330
is securing an ideal<font color="#E5E5E5"> by linear model</font>

137
00:06:50,870 --> 00:06:59,970
<font color="#E5E5E5">okay so this is the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> and exactly</font>

138
00:06:57,330 --> 00:07:03,300
how close that does it really bring<font color="#E5E5E5"> us</font>

139
00:06:59,970 --> 00:07:05,880
to to constructing<font color="#E5E5E5"> functional encryption</font>

140
00:07:03,300 --> 00:07:09,600
and<font color="#E5E5E5"> obfuscation from from standard</font>

141
00:07:05,880 --> 00:07:11,370
assumptions<font color="#E5E5E5"> so we're not quite there</font><font color="#CCCCCC"> yet</font>

142
00:07:09,600 --> 00:07:14,400
<font color="#CCCCCC">so if you look at the existing</font>

143
00:07:11,370 --> 00:07:17,760
<font color="#E5E5E5">constructions that</font><font color="#CCCCCC"> we have then first</font>

144
00:07:14,400 --> 00:07:19,650
<font color="#E5E5E5">for definitely black box in the</font>

145
00:07:17,760 --> 00:07:21,360
multilinear maps we do have<font color="#E5E5E5"> construction</font>

146
00:07:19,650 --> 00:07:23,489
of a functional encryption<font color="#E5E5E5"> that use</font>

147
00:07:21,360 --> 00:07:26,520
multi<font color="#CCCCCC"> maps</font><font color="#E5E5E5"> as a black box</font>

148
00:07:23,490 --> 00:07:30,230
<font color="#E5E5E5">but we're not quite succinct enough okay</font>

149
00:07:26,520 --> 00:07:33,479
so the<font color="#CCCCCC"> 1610 is</font><font color="#E5E5E5"> just over this</font><font color="#CCCCCC"> one over D</font>

150
00:07:30,230 --> 00:07:36,390
term and it's not sufficient<font color="#CCCCCC"> for what we</font>

151
00:07:33,480 --> 00:07:39,630
need in<font color="#E5E5E5"> order to cross this line to be</font>

152
00:07:36,390 --> 00:07:43,200
linear<font color="#CCCCCC"> maps so this sort of really draws</font>

153
00:07:39,630 --> 00:07:48,180
a<font color="#CCCCCC"> very fine line between what we want</font>

154
00:07:43,200 --> 00:07:50,340
and<font color="#CCCCCC"> what we currently</font><font color="#E5E5E5"> have and you can</font>

155
00:07:48,180 --> 00:07:52,560
view<font color="#E5E5E5"> it positively as you know there's a</font>

156
00:07:50,340 --> 00:07:54,239
specific<font color="#CCCCCC"> goal that you can try to</font>

157
00:07:52,560 --> 00:07:56,670
<font color="#CCCCCC">achieve if you</font><font color="#E5E5E5"> want to cross this line</font>

158
00:07:54,240 --> 00:07:58,860
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> make our constructions more</font>

159
00:07:56,670 --> 00:08:01,560
succinct<font color="#CCCCCC"> but of</font><font color="#E5E5E5"> course there's the flip</font>

160
00:07:58,860 --> 00:08:03,870
side<font color="#CCCCCC"> you can also view this as</font><font color="#E5E5E5"> the lower</font>

161
00:08:01,560 --> 00:08:06,630
bound perhaps<font color="#E5E5E5"> is a negative result</font><font color="#CCCCCC"> it</font>

162
00:08:03,870 --> 00:08:08,670
says what are<font color="#CCCCCC"> the limits</font><font color="#E5E5E5"> of these</font>

163
00:08:06,630 --> 00:08:11,240
functional encryption schemes<font color="#E5E5E5"> that</font><font color="#CCCCCC"> were</font>

164
00:08:08,670 --> 00:08:14,310
constructing in particular making<font color="#E5E5E5"> them</font>

165
00:08:11,240 --> 00:08:18,210
very<font color="#E5E5E5"> sick sent should be hard how hard</font>

166
00:08:14,310 --> 00:08:22,790
as hard<font color="#E5E5E5"> as constructing obfuscation from</font>

167
00:08:18,210 --> 00:08:25,890
<font color="#CCCCCC">bi linear maps so this is about the</font>

168
00:08:22,790 --> 00:08:28,110
<font color="#CCCCCC">interpretation and for the remaining</font>

169
00:08:25,890 --> 00:08:37,199
<font color="#E5E5E5">time would like to give you a taste of</font>

170
00:08:28,110 --> 00:08:41,070
<font color="#E5E5E5">the ideas involved in this result so the</font>

171
00:08:37,200 --> 00:08:44,640
the starting point is really a<font color="#E5E5E5"> result</font>

172
00:08:41,070 --> 00:08:46,640
<font color="#E5E5E5">for office keishon bypassing</font><font color="#CCCCCC"> shalat the</font>

173
00:08:44,640 --> 00:08:48,780
<font color="#E5E5E5">shows that</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case if we have</font><font color="#CCCCCC"> a</font>

174
00:08:46,640 --> 00:08:52,860
<font color="#CCCCCC">construction of</font><font color="#E5E5E5"> indistinguishability</font>

175
00:08:48,780 --> 00:08:55,079
obfuscation<font color="#CCCCCC"> io that uses constant the</font>

176
00:08:52,860 --> 00:08:59,070
<font color="#E5E5E5">green maps in a black box way</font>

177
00:08:55,080 --> 00:09:01,140
you can actually<font color="#E5E5E5"> completely remove the</font>

178
00:08:59,070 --> 00:09:06,180
<font color="#CCCCCC">multi- maps</font><font color="#E5E5E5"> we don't really add any</font>

179
00:09:01,140 --> 00:09:08,720
power<font color="#E5E5E5"> now we have this</font><font color="#CCCCCC"> result and you</font>

180
00:09:06,180 --> 00:09:11,609
know I just<font color="#CCCCCC"> mentioned that if you have</font>

181
00:09:08,720 --> 00:09:15,510
succinct functional encryption then you

182
00:09:11,610 --> 00:09:17,730
can actually<font color="#E5E5E5"> construct from it</font><font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> so it</font>

183
00:09:15,510 --> 00:09:19,890
may<font color="#E5E5E5"> be tempting</font><font color="#CCCCCC"> to think</font><font color="#E5E5E5"> that this might</font>

184
00:09:17,730 --> 00:09:22,140
even already<font color="#E5E5E5"> give us the result in the</font>

185
00:09:19,890 --> 00:09:24,620
sense that<font color="#E5E5E5"> perhaps we can take a</font>

186
00:09:22,140 --> 00:09:27,780
<font color="#E5E5E5">functional encryption scheme that</font><font color="#CCCCCC"> uses</font>

187
00:09:24,620 --> 00:09:30,410
multi new<font color="#CCCCCC"> maps</font><font color="#E5E5E5"> as a black box way use</font>

188
00:09:27,780 --> 00:09:34,290
the existing for informations<font color="#E5E5E5"> to get</font>

189
00:09:30,410 --> 00:09:37,620
corresponding i/o and then again<font color="#E5E5E5"> remove</font>

190
00:09:34,290 --> 00:09:40,199
them<font color="#E5E5E5"> using existing results</font><font color="#CCCCCC"> the reason</font>

191
00:09:37,620 --> 00:09:42,540
<font color="#E5E5E5">that this doesn't really work is that</font>

192
00:09:40,200 --> 00:09:45,540
quite interestingly the reduction

193
00:09:42,540 --> 00:09:49,380
between<font color="#CCCCCC"> IO and</font><font color="#E5E5E5"> functional encryption is</font>

194
00:09:45,540 --> 00:09:51,030
not a black box reduction so even if you

195
00:09:49,380 --> 00:09:53,730
start from a functional encryption

196
00:09:51,030 --> 00:09:57,510
scheme that uses multi new maps as a

197
00:09:53,730 --> 00:09:59,760
black box<font color="#CCCCCC"> the resulting IO scheme that</font>

198
00:09:57,510 --> 00:10:02,010
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> get will actually make use of the</font>

199
00:09:59,760 --> 00:10:06,300
explicit representation of the code of

200
00:10:02,010 --> 00:10:11,040
these multi-layer maps so we have to do

201
00:10:06,300 --> 00:10:13,020
something<font color="#E5E5E5"> else here and roughly</font><font color="#CCCCCC"> speaking</font>

202
00:10:11,040 --> 00:10:15,569
what we're going to<font color="#E5E5E5"> do is we're still</font>

203
00:10:13,020 --> 00:10:18,870
<font color="#E5E5E5">going to take a pretty similar route at</font>

204
00:10:15,570 --> 00:10:21,240
least in<font color="#CCCCCC"> spirit</font><font color="#E5E5E5"> but rather than thinking</font>

205
00:10:18,870 --> 00:10:23,970
<font color="#CCCCCC">about IO</font><font color="#E5E5E5"> we're going to think</font><font color="#CCCCCC"> about a</font>

206
00:10:21,240 --> 00:10:28,770
relaxed notion of alpha station<font color="#E5E5E5"> that is</font>

207
00:10:23,970 --> 00:10:32,820
<font color="#E5E5E5">called xio exponentially efficient</font><font color="#CCCCCC"> xio</font>

208
00:10:28,770 --> 00:10:36,750
<font color="#E5E5E5">and for this</font><font color="#CCCCCC"> notion we do actually have</font>

209
00:10:32,820 --> 00:10:38,940
there's an existent reduction<font color="#E5E5E5"> from</font><font color="#CCCCCC"> 16</font>

210
00:10:36,750 --> 00:10:41,880
function encryption to this<font color="#CCCCCC"> relaxed</font>

211
00:10:38,940 --> 00:10:44,280
notion of<font color="#CCCCCC"> xio that is completely black</font>

212
00:10:41,880 --> 00:10:46,410
box<font color="#CCCCCC"> in</font><font color="#E5E5E5"> particular its relative Isis if</font>

213
00:10:44,280 --> 00:10:49,140
we start<font color="#E5E5E5"> with functional encryption that</font>

214
00:10:46,410 --> 00:10:51,959
uses multi area<font color="#E5E5E5"> maps as a black box</font>

215
00:10:49,140 --> 00:10:55,830
<font color="#CCCCCC">we'll get xio</font><font color="#E5E5E5"> that uses nothing</font><font color="#CCCCCC"> in maps</font>

216
00:10:51,960 --> 00:10:58,910
<font color="#CCCCCC">as a black box</font><font color="#E5E5E5"> and then most of the</font>

217
00:10:55,830 --> 00:11:02,210
effort in this<font color="#E5E5E5"> work is dedicated to show</font>

218
00:10:58,910 --> 00:11:05,250
<font color="#E5E5E5">showing that if you have such exhale</font>

219
00:11:02,210 --> 00:11:08,640
<font color="#E5E5E5">then you can really reduce the</font><font color="#CCCCCC"> degree of</font>

220
00:11:05,250 --> 00:11:10,829
<font color="#E5E5E5">the multi</font><font color="#CCCCCC"> maps and go to</font><font color="#E5E5E5"> by linear maps</font>

221
00:11:08,640 --> 00:11:13,829
so we won't be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to completely remove</font>

222
00:11:10,829 --> 00:11:17,099
<font color="#E5E5E5">them as in the setting of</font><font color="#CCCCCC"> IO but we'll</font>

223
00:11:13,829 --> 00:11:18,089
reduce<font color="#E5E5E5"> them to by linear and then once</font>

224
00:11:17,100 --> 00:11:21,209
you have<font color="#CCCCCC"> xio</font>

225
00:11:18,089 --> 00:11:24,529
then again<font color="#E5E5E5"> there</font><font color="#CCCCCC"> exist reductions even</font>

226
00:11:21,209 --> 00:11:27,119
<font color="#CCCCCC">blackbox</font><font color="#E5E5E5"> reductions that will take you</font>

227
00:11:24,529 --> 00:11:29,250
<font color="#E5E5E5">back to sustain functional encryption</font>

228
00:11:27,120 --> 00:11:32,430
<font color="#E5E5E5">and everything you need in order to get</font>

229
00:11:29,250 --> 00:11:34,760
<font color="#CCCCCC">indistinguishable the office station so</font>

230
00:11:32,430 --> 00:11:38,339
this<font color="#E5E5E5"> is sort of the the blueprint</font><font color="#CCCCCC"> and</font>

231
00:11:34,760 --> 00:11:41,339
<font color="#E5E5E5">let me tell you now what exactly is</font><font color="#CCCCCC"> xio</font>

232
00:11:38,339 --> 00:11:43,430
<font color="#CCCCCC">what does it mean</font><font color="#E5E5E5"> and how can we reduce</font>

233
00:11:41,339 --> 00:11:47,519
the degree of melting<font color="#E5E5E5"> and maps in exhale</font>

234
00:11:43,430 --> 00:11:49,310
<font color="#E5E5E5">so usually when we want to obfuscate we</font>

235
00:11:47,519 --> 00:11:51,930
have a circuit<font color="#E5E5E5"> and this circuit</font>

236
00:11:49,310 --> 00:11:53,910
<font color="#E5E5E5">typically corresponds to a much larger</font>

237
00:11:51,930 --> 00:11:56,370
truth table if you write<font color="#E5E5E5"> the circuit on</font>

238
00:11:53,910 --> 00:11:58,769
each one<font color="#E5E5E5"> of the values the true flavor</font>

239
00:11:56,370 --> 00:12:02,730
<font color="#E5E5E5">the truth table will be much larger than</font>

240
00:11:58,769 --> 00:12:04,769
<font color="#E5E5E5">the circuit itself and usually when we</font>

241
00:12:02,730 --> 00:12:07,560
<font color="#E5E5E5">office gate the circuit we expect that</font>

242
00:12:04,769 --> 00:12:09,480
the resulting<font color="#CCCCCC"> alpha station is roughly</font>

243
00:12:07,560 --> 00:12:12,268
the same size<font color="#CCCCCC"> maybe after some</font>

244
00:12:09,480 --> 00:12:15,630
polynomial<font color="#E5E5E5"> blow up this notion of</font>

245
00:12:12,269 --> 00:12:19,079
exponential efficient<font color="#CCCCCC"> xio allows the</font>

246
00:12:15,630 --> 00:12:22,410
obfuscated circuit not only to grow<font color="#E5E5E5"> with</font>

247
00:12:19,079 --> 00:12:25,500
the circuit size but<font color="#CCCCCC"> also to mildly grow</font>

248
00:12:22,410 --> 00:12:30,209
with the size of the truth table<font color="#CCCCCC"> okay</font>

249
00:12:25,500 --> 00:12:34,579
<font color="#E5E5E5">say sub linearly in the truth table so</font>

250
00:12:30,209 --> 00:12:37,469
it really<font color="#E5E5E5"> seems like a much much weaker</font>

251
00:12:34,579 --> 00:12:38,760
notion particular afraid to be

252
00:12:37,470 --> 00:12:41,640
applicable we should think about

253
00:12:38,760 --> 00:12:44,279
circuits that computer<font color="#E5E5E5"> polynomially</font>

254
00:12:41,640 --> 00:12:46,860
large<font color="#E5E5E5"> truth table but perhaps this point</font>

255
00:12:44,279 --> 00:12:51,360
number could<font color="#CCCCCC"> be huge much larger than</font>

256
00:12:46,860 --> 00:12:53,370
the circuit<font color="#E5E5E5"> itself and it turns out that</font>

257
00:12:51,360 --> 00:12:56,579
<font color="#E5E5E5">it's still very</font><font color="#CCCCCC"> powerful in particular</font>

258
00:12:53,370 --> 00:12:59,490
if you<font color="#CCCCCC"> have this notion under additional</font>

259
00:12:56,579 --> 00:13:02,370
standard assumptions you<font color="#CCCCCC"> can again get</font>

260
00:12:59,490 --> 00:13:09,089
all the way to<font color="#CCCCCC"> sixteen function</font>

261
00:13:02,370 --> 00:13:11,040
encryption and in the<font color="#E5E5E5"> i/o</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so now</font>

262
00:13:09,089 --> 00:13:14,250
we're<font color="#E5E5E5"> going to try and show</font><font color="#CCCCCC"> that if we</font>

263
00:13:11,040 --> 00:13:18,560
have X i/o using multi area maps as a

264
00:13:14,250 --> 00:13:21,270
black box<font color="#E5E5E5"> we can reduce their degree and</font>

265
00:13:18,560 --> 00:13:22,229
to understand how<font color="#CCCCCC"> we do this I would</font>

266
00:13:21,270 --> 00:13:26,460
like<font color="#E5E5E5"> to</font>

267
00:13:22,230 --> 00:13:29,220
<font color="#CCCCCC">playing in a</font><font color="#E5E5E5"> very oversimplified way how</font>

268
00:13:26,460 --> 00:13:30,860
<font color="#E5E5E5">this is done in the case of I own not</font>

269
00:13:29,220 --> 00:13:34,350
<font color="#E5E5E5">the relaxed</font><font color="#CCCCCC"> version but the actual</font>

270
00:13:30,860 --> 00:13:36,390
<font color="#E5E5E5">version of</font><font color="#CCCCCC"> IO</font><font color="#E5E5E5"> and I'll say how you can</font>

271
00:13:34,350 --> 00:13:39,720
<font color="#CCCCCC">reduce they from the greedy for some</font>

272
00:13:36,390 --> 00:13:44,400
constant<font color="#CCCCCC"> D</font><font color="#E5E5E5"> to linear</font><font color="#CCCCCC"> Maps okay basically</font>

273
00:13:39,720 --> 00:13:47,820
discrete log groups<font color="#E5E5E5"> and quickly</font><font color="#CCCCCC"> I'm</font>

274
00:13:44,400 --> 00:13:51,180
<font color="#CCCCCC">going to assume that such an obfuscation</font>

275
00:13:47,820 --> 00:13:54,870
scheme has a very simple<font color="#E5E5E5"> structure it</font>

276
00:13:51,180 --> 00:13:59,069
basically consists of a bunch<font color="#E5E5E5"> of ring</font>

277
00:13:54,870 --> 00:14:02,510
elements x1 up to xn<font color="#CCCCCC"> and these elements</font>

278
00:13:59,070 --> 00:14:06,510
are encoded using the our<font color="#E5E5E5"> multi-layer</font>

279
00:14:02,510 --> 00:14:09,000
groups and all that you<font color="#E5E5E5"> can basically do</font>

280
00:14:06,510 --> 00:14:12,569
with these elements<font color="#CCCCCC"> is perform certain</font>

281
00:14:09,000 --> 00:14:14,790
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> tests given by</font><font color="#CCCCCC"> degree D polynomials</font>

282
00:14:12,570 --> 00:14:16,650
<font color="#CCCCCC">okay this is all that</font><font color="#E5E5E5"> you can do in</font>

283
00:14:14,790 --> 00:14:20,130
particular<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to evaluate the</font>

284
00:14:16,650 --> 00:14:23,550
obfuscation<font color="#CCCCCC"> on specific inputs</font><font color="#E5E5E5"> you just</font>

285
00:14:20,130 --> 00:14:27,060
compute<font color="#E5E5E5"> certain zero test point on those</font>

286
00:14:23,550 --> 00:14:30,329
<font color="#E5E5E5">tests whatever zero and this is also all</font>

287
00:14:27,060 --> 00:14:31,800
the<font color="#E5E5E5"> day attacker can do now if you have</font>

288
00:14:30,330 --> 00:14:35,760
such an obfuscation

289
00:14:31,800 --> 00:14:38,880
how would you remove the or reduce the

290
00:14:35,760 --> 00:14:41,069
degree of<font color="#E5E5E5"> the multi area map so one</font>

291
00:14:38,880 --> 00:14:42,570
thing<font color="#CCCCCC"> that you can do is rather than</font>

292
00:14:41,070 --> 00:14:45,210
<font color="#E5E5E5">actually encoding</font>

293
00:14:42,570 --> 00:14:48,300
<font color="#E5E5E5">all of these</font><font color="#CCCCCC"> ring elements you can sort</font>

294
00:14:45,210 --> 00:14:51,120
of pre compute all the nodes of<font color="#E5E5E5"> degree</font>

295
00:14:48,300 --> 00:14:53,729
at most<font color="#E5E5E5"> D right this is the only thing</font>

296
00:14:51,120 --> 00:14:55,560
<font color="#CCCCCC">that is going to be relevant</font><font color="#E5E5E5"> here and</font>

297
00:14:53,730 --> 00:15:00,420
instead<font color="#E5E5E5"> of encoding the elements just</font>

298
00:14:55,560 --> 00:15:03,300
encode these monomials<font color="#E5E5E5"> directly okay and</font>

299
00:15:00,420 --> 00:15:05,189
now we don't<font color="#E5E5E5"> really have to in</font><font color="#CCCCCC"> order to</font>

300
00:15:03,300 --> 00:15:07,469
perform<font color="#CCCCCC"> these this test you don't</font><font color="#E5E5E5"> really</font>

301
00:15:05,190 --> 00:15:08,870
<font color="#E5E5E5">have to evaluate degree D point</font><font color="#CCCCCC"> unless</font>

302
00:15:07,470 --> 00:15:13,110
you<font color="#E5E5E5"> can really evaluate linear</font>

303
00:15:08,870 --> 00:15:16,980
polynomials<font color="#CCCCCC"> in these new encoded in</font>

304
00:15:13,110 --> 00:15:19,290
these<font color="#CCCCCC"> newly coded elements now why does</font>

305
00:15:16,980 --> 00:15:22,140
this work<font color="#E5E5E5"> why is this construction even</font>

306
00:15:19,290 --> 00:15:23,790
efficient<font color="#E5E5E5"> so the reason that it's</font>

307
00:15:22,140 --> 00:15:26,130
efficient is that<font color="#CCCCCC"> there are too many</font>

308
00:15:23,790 --> 00:15:28,640
<font color="#E5E5E5">monomials</font><font color="#CCCCCC"> okay there</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> M to the D</font>

309
00:15:26,130 --> 00:15:32,850
monomials where m is the number of

310
00:15:28,640 --> 00:15:34,650
encodings and<font color="#CCCCCC"> these</font><font color="#E5E5E5"> the degree of the of</font>

311
00:15:32,850 --> 00:15:35,390
the<font color="#E5E5E5"> polynomials</font><font color="#CCCCCC"> that we're trying</font><font color="#E5E5E5"> to</font>

312
00:15:34,650 --> 00:15:38,449
<font color="#E5E5E5">head though</font>

313
00:15:35,390 --> 00:15:40,610
and overall here M<font color="#CCCCCC"> is proportional</font><font color="#E5E5E5"> to</font>

314
00:15:38,450 --> 00:15:43,250
<font color="#E5E5E5">the circuit size this</font><font color="#CCCCCC"> is an obfuscation</font>

315
00:15:40,610 --> 00:15:45,529
after all<font color="#E5E5E5"> so overall we have polynomial</font>

316
00:15:43,250 --> 00:15:50,420
<font color="#CCCCCC">Amen encoding remember that D is a</font>

317
00:15:45,529 --> 00:15:53,360
<font color="#CCCCCC">constant here</font><font color="#E5E5E5"> now say that you try to do</font>

318
00:15:50,420 --> 00:15:56,750
the same with<font color="#CCCCCC"> xio we don't have I Oh at</font>

319
00:15:53,360 --> 00:15:58,519
our disposal with the still work so<font color="#CCCCCC"> you</font>

320
00:15:56,750 --> 00:16:02,990
can still write all of these monomials

321
00:15:58,519 --> 00:16:06,829
<font color="#CCCCCC">but the problem</font><font color="#E5E5E5"> is that now this</font><font color="#CCCCCC"> is sort</font>

322
00:16:02,990 --> 00:16:08,990
<font color="#E5E5E5">of</font><font color="#CCCCCC"> trivial and the reason is that in XA</font>

323
00:16:06,829 --> 00:16:10,719
<font color="#CCCCCC">yo where</font><font color="#E5E5E5"> the size of the obfuscation in</font>

324
00:16:08,990 --> 00:16:13,160
particular the<font color="#E5E5E5"> number of encoding</font>

325
00:16:10,720 --> 00:16:16,360
doesn't<font color="#CCCCCC"> only scale</font><font color="#E5E5E5"> with the circuit size</font>

326
00:16:13,160 --> 00:16:19,339
but also<font color="#E5E5E5"> with the truth table okay and</font>

327
00:16:16,360 --> 00:16:21,529
it may be it<font color="#E5E5E5"> may very well be much</font>

328
00:16:19,339 --> 00:16:24,920
larger<font color="#E5E5E5"> than say</font><font color="#CCCCCC"> the truth table to the</font>

329
00:16:21,529 --> 00:16:26,689
<font color="#CCCCCC">one over D which</font><font color="#E5E5E5"> means that M to</font><font color="#CCCCCC"> the T</font>

330
00:16:24,920 --> 00:16:29,390
is really just too much it would

331
00:16:26,690 --> 00:16:32,149
completely trivialize this construction

332
00:16:29,390 --> 00:16:35,390
<font color="#CCCCCC">darphus</font><font color="#E5E5E5"> keishon would become as large as</font>

333
00:16:32,149 --> 00:16:38,750
the entire<font color="#E5E5E5"> truth table so we can't</font>

334
00:16:35,390 --> 00:16:42,890
<font color="#E5E5E5">really do this and what we're going to</font>

335
00:16:38,750 --> 00:16:46,940
do is instead rely on a somewhat

336
00:16:42,890 --> 00:16:49,519
<font color="#E5E5E5">stronger notion of</font><font color="#CCCCCC"> XA oh the tazón</font>

337
00:16:46,940 --> 00:16:51,380
additional decomposability feature and

338
00:16:49,519 --> 00:16:54,170
it says the<font color="#E5E5E5"> following it says that now</font>

339
00:16:51,380 --> 00:16:57,589
the<font color="#CCCCCC"> alpha station</font><font color="#E5E5E5"> basically looks as</font>

340
00:16:54,170 --> 00:17:00,410
follows just not just<font color="#CCCCCC"> a list of</font>

341
00:16:57,589 --> 00:17:04,160
<font color="#E5E5E5">encodings</font><font color="#CCCCCC"> it's it's a list but</font><font color="#E5E5E5"> now you</font>

342
00:17:00,410 --> 00:17:07,428
can be divided into<font color="#E5E5E5"> blocks into several</font>

343
00:17:04,160 --> 00:17:10,220
<font color="#E5E5E5">blocks with with two</font><font color="#CCCCCC"> properties so first</font>

344
00:17:07,429 --> 00:17:13,100
each of these blocks<font color="#E5E5E5"> is going to be very</font>

345
00:17:10,220 --> 00:17:14,839
<font color="#E5E5E5">small</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> perhaps all the encoding scale</font>

346
00:17:13,099 --> 00:17:16,250
was the truth table<font color="#CCCCCC"> but each of these</font>

347
00:17:14,839 --> 00:17:18,619
blocks is very small<font color="#E5E5E5"> for the sake of</font>

348
00:17:16,250 --> 00:17:22,369
this talk let's say polynomial in the

349
00:17:18,619 --> 00:17:24,319
circuit size and moreover<font color="#E5E5E5"> this is the</font>

350
00:17:22,369 --> 00:17:27,139
relevant<font color="#CCCCCC"> zero test</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> whenever you try</font>

351
00:17:24,319 --> 00:17:29,389
<font color="#CCCCCC">to evaluate an input</font><font color="#E5E5E5"> you only have to</font>

352
00:17:27,140 --> 00:17:32,240
evaluate polynomials that<font color="#E5E5E5"> are very local</font>

353
00:17:29,390 --> 00:17:38,740
<font color="#CCCCCC">very local in the</font><font color="#E5E5E5"> sense that they only</font>

354
00:17:32,240 --> 00:17:41,360
<font color="#E5E5E5">touch say two blocks in this list</font><font color="#CCCCCC"> now</font>

355
00:17:38,740 --> 00:17:46,100
we're<font color="#E5E5E5"> going to use this</font><font color="#CCCCCC"> decomposable xio</font>

356
00:17:41,360 --> 00:17:48,679
<font color="#E5E5E5">and fortunately you can also show that</font>

357
00:17:46,100 --> 00:17:51,290
the<font color="#E5E5E5"> existing constructions that we have</font>

358
00:17:48,680 --> 00:17:53,210
<font color="#CCCCCC">xio from functional encryption</font><font color="#E5E5E5"> those</font>

359
00:17:51,290 --> 00:17:56,450
black bar construction really do have

360
00:17:53,210 --> 00:17:58,250
this decomposability feature<font color="#CCCCCC"> and how can</font>

361
00:17:56,450 --> 00:18:01,070
<font color="#E5E5E5">you use this the</font><font color="#CCCCCC"> compressibility feature</font>

362
00:17:58,250 --> 00:18:04,010
in order<font color="#CCCCCC"> to reduce the degree now</font>

363
00:18:01,070 --> 00:18:06,350
instead<font color="#E5E5E5"> of simply encoding all the</font>

364
00:18:04,010 --> 00:18:08,420
monomials<font color="#E5E5E5"> we're going to encode the</font>

365
00:18:06,350 --> 00:18:13,639
monomials<font color="#E5E5E5"> corresponding to each block</font>

366
00:18:08,420 --> 00:18:17,840
separately<font color="#CCCCCC"> ok so the blocks are not too</font>

367
00:18:13,640 --> 00:18:20,480
big<font color="#CCCCCC"> and the point is that now if you</font>

368
00:18:17,840 --> 00:18:22,699
look at these polynomials<font color="#E5E5E5"> sense very</font>

369
00:18:20,480 --> 00:18:25,400
very local they only<font color="#E5E5E5"> touch two blocks</font>

370
00:18:22,700 --> 00:18:28,460
<font color="#E5E5E5">then we can we can really rewrite them</font>

371
00:18:25,400 --> 00:18:31,190
as by linear polynomials as degree<font color="#E5E5E5"> two</font>

372
00:18:28,460 --> 00:18:33,200
<font color="#E5E5E5">polynomials</font><font color="#CCCCCC"> in these new encoded</font>

373
00:18:31,190 --> 00:18:35,960
<font color="#E5E5E5">monomials so we managed to reduce the</font>

374
00:18:33,200 --> 00:18:39,830
<font color="#CCCCCC">degree</font><font color="#E5E5E5"> from whatever constant</font><font color="#CCCCCC"> d that we</font>

375
00:18:35,960 --> 00:18:43,430
had to<font color="#CCCCCC"> 2 and again the size since each</font>

376
00:18:39,830 --> 00:18:46,129
block is now very small<font color="#E5E5E5"> raised to some</font>

377
00:18:43,430 --> 00:18:49,010
constant<font color="#CCCCCC"> over although the</font><font color="#E5E5E5"> size is</font>

378
00:18:46,130 --> 00:18:52,270
controlled and we still get the

379
00:18:49,010 --> 00:18:56,600
<font color="#E5E5E5">compression</font><font color="#CCCCCC"> that xio has to guarantee</font>

380
00:18:52,270 --> 00:18:59,870
good<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> the rough idea</font>

381
00:18:56,600 --> 00:19:06,590
there's much more going<font color="#CCCCCC"> under the hood</font>

382
00:18:59,870 --> 00:19:09,320
<font color="#CCCCCC">this was really over simplified I want</font>

383
00:19:06,590 --> 00:19:12,310
to give<font color="#E5E5E5"> you the details</font><font color="#CCCCCC"> you can you can</font>

384
00:19:09,320 --> 00:19:15,530
read them<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> the paper</font><font color="#CCCCCC"> ask me</font>

385
00:19:12,310 --> 00:19:18,169
offline<font color="#CCCCCC"> let me just mention two</font>

386
00:19:15,530 --> 00:19:23,360
additional<font color="#E5E5E5"> results that that</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> in</font>

387
00:19:18,170 --> 00:19:27,860
<font color="#E5E5E5">the paper so what we said doesn't really</font>

388
00:19:23,360 --> 00:19:30,500
say anything about say<font color="#E5E5E5"> the generic group</font>

389
00:19:27,860 --> 00:19:32,300
<font color="#E5E5E5">model or the random Oracle model models</font>

390
00:19:30,500 --> 00:19:35,410
that are weaker<font color="#CCCCCC"> than the bilinear models</font>

391
00:19:32,300 --> 00:19:37,850
can we remove such Oracle's<font color="#E5E5E5"> from</font>

392
00:19:35,410 --> 00:19:41,480
functional encryption<font color="#E5E5E5"> and we do show</font>

393
00:19:37,850 --> 00:19:43,730
such<font color="#E5E5E5"> complimenting results both for the</font>

394
00:19:41,480 --> 00:19:45,950
generic<font color="#E5E5E5"> group model</font><font color="#CCCCCC"> and for the random</font>

395
00:19:43,730 --> 00:19:49,210
Oracle model<font color="#E5E5E5"> but here we need to assume</font>

396
00:19:45,950 --> 00:19:51,950
a slightly stronger<font color="#E5E5E5"> notion of unbounded</font>

397
00:19:49,210 --> 00:19:54,500
key function encryption and they're not

398
00:19:51,950 --> 00:19:56,690
very<font color="#E5E5E5"> quibble</font><font color="#CCCCCC"> into 216 function</font>

399
00:19:54,500 --> 00:19:58,400
encryption<font color="#CCCCCC"> in the in the world of non</font>

400
00:19:56,690 --> 00:20:00,590
blackbox reductions but in the world of

401
00:19:58,400 --> 00:20:01,320
<font color="#E5E5E5">blackbox reductions we don't really know</font>

402
00:20:00,590 --> 00:20:04,649
that<font color="#E5E5E5"> for</font>

403
00:20:01,320 --> 00:20:06,330
equivalent<font color="#E5E5E5"> okay so this is all I wanted</font>

404
00:20:04,650 --> 00:20:08,430
<font color="#CCCCCC">to say and I'll just</font><font color="#E5E5E5"> remind</font><font color="#CCCCCC"> you that</font>

405
00:20:06,330 --> 00:20:11,310
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this challenge</font><font color="#CCCCCC"> is still open</font>

406
00:20:08,430 --> 00:20:13,410
basically<font color="#E5E5E5"> still don't really</font><font color="#CCCCCC"> know how to</font>

407
00:20:11,310 --> 00:20:16,940
go<font color="#E5E5E5"> to buy linear maps from standard</font>

408
00:20:13,410 --> 00:20:21,330
assumptions<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a very</font><font color="#E5E5E5"> active area</font>

409
00:20:16,940 --> 00:20:25,370
<font color="#E5E5E5">so I'm looking forward to see what comes</font>

410
00:20:21,330 --> 00:20:25,370
next year<font color="#E5E5E5"> so</font><font color="#CCCCCC"> thanks</font>

