1
00:00:00,030 --> 00:00:06,830
<font color="#E5E5E5">okay thank you and welcome to the last</font>

2
00:00:02,760 --> 00:00:08,670
talk of<font color="#CCCCCC"> the last session of track a I</font>

3
00:00:06,830 --> 00:00:11,160
<font color="#CCCCCC">realize that there's been a bit</font><font color="#E5E5E5"> of a</font>

4
00:00:08,670 --> 00:00:13,559
competition between track and track B

5
00:00:11,160 --> 00:00:16,109
and I did notice<font color="#E5E5E5"> that cording to the</font>

6
00:00:13,559 --> 00:00:18,150
schedule we're<font color="#E5E5E5"> finishing on time</font><font color="#CCCCCC"> 25</font>

7
00:00:16,109 --> 00:00:19,980
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> before they are</font><font color="#E5E5E5"> so you're</font>

8
00:00:18,150 --> 00:00:23,939
officially<font color="#CCCCCC"> all in the winning team</font><font color="#E5E5E5"> just</font>

9
00:00:19,980 --> 00:00:29,330
want to note that so starting out<font color="#E5E5E5"> we</font>

10
00:00:23,939 --> 00:00:29,330
have good<font color="#E5E5E5"> news here we've done</font><font color="#CCCCCC"> it so</font>

11
00:00:30,830 --> 00:00:40,430
<font color="#CCCCCC">we've done it forward secrecy full</font>

12
00:00:36,090 --> 00:00:42,120
forward secrecy<font color="#CCCCCC"> 4-0 RTT key exchange</font><font color="#E5E5E5"> if</font>

13
00:00:40,430 --> 00:00:43,620
there's one thing that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> take away</font>

14
00:00:42,120 --> 00:00:45,780
<font color="#CCCCCC">from this talk</font><font color="#E5E5E5"> I want you to remember it</font>

15
00:00:43,620 --> 00:00:48,328
is possible<font color="#CCCCCC"> a lot of people said that</font>

16
00:00:45,780 --> 00:00:51,899
<font color="#CCCCCC">zero RTT cannot achieve full forward</font>

17
00:00:48,329 --> 00:00:52,890
<font color="#E5E5E5">secrecy</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it is possible now you're</font>

18
00:00:51,899 --> 00:00:55,649
sitting<font color="#E5E5E5"> there thinking what is she</font>

19
00:00:52,890 --> 00:00:57,149
<font color="#E5E5E5">talking about you are in the right place</font>

20
00:00:55,649 --> 00:00:58,980
I'm going<font color="#E5E5E5"> to talk about most of the</font>

21
00:00:57,149 --> 00:01:01,559
motivation<font color="#E5E5E5"> behind this for the</font><font color="#CCCCCC"> majority</font>

22
00:00:58,980 --> 00:01:03,328
of the talk<font color="#E5E5E5"> and then give a slight view</font>

23
00:01:01,559 --> 00:01:06,509
of what the protocol actually<font color="#E5E5E5"> looks like</font>

24
00:01:03,329 --> 00:01:09,299
in our construction<font color="#E5E5E5"> so first of all if</font>

25
00:01:06,510 --> 00:01:10,560
we're going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> tt0 RTT</font>

26
00:01:09,299 --> 00:01:13,710
key exchange you might as<font color="#E5E5E5"> well say what</font>

27
00:01:10,560 --> 00:01:16,530
<font color="#CCCCCC">RTT is</font><font color="#E5E5E5"> in the first place</font><font color="#CCCCCC"> it is round</font>

28
00:01:13,710 --> 00:01:18,030
trip time<font color="#E5E5E5"> so RT T stands for round trip</font>

29
00:01:16,530 --> 00:01:20,850
time is<font color="#E5E5E5"> essentially when we're sending</font>

30
00:01:18,030 --> 00:01:23,100
from a client or any<font color="#E5E5E5"> two parties to say</font>

31
00:01:20,850 --> 00:01:25,530
a client<font color="#CCCCCC"> to a server and then we get</font><font color="#E5E5E5"> a</font>

32
00:01:23,100 --> 00:01:29,070
<font color="#E5E5E5">response back</font><font color="#CCCCCC"> that is one full</font><font color="#E5E5E5"> round</font>

33
00:01:25,530 --> 00:01:31,229
<font color="#E5E5E5">trip</font><font color="#CCCCCC"> and we're talking about well how</font>

34
00:01:29,070 --> 00:01:33,809
long is<font color="#CCCCCC"> it particularly</font><font color="#E5E5E5"> if we're talking</font>

35
00:01:31,229 --> 00:01:38,759
key change<font color="#E5E5E5"> how long is it until</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

36
00:01:33,810 --> 00:01:41,610
<font color="#E5E5E5">actually send</font><font color="#CCCCCC"> encrypted data</font><font color="#E5E5E5"> so we can</font>

37
00:01:38,759 --> 00:01:42,810
say one round trip<font color="#CCCCCC"> or two round trips if</font>

38
00:01:41,610 --> 00:01:44,220
you're talking<font color="#E5E5E5"> about key exchange with</font>

39
00:01:42,810 --> 00:01:45,689
say six round trips well might as<font color="#E5E5E5"> well</font>

40
00:01:44,220 --> 00:01:48,720
<font color="#E5E5E5">give up</font><font color="#CCCCCC"> because track B wins and they</font>

41
00:01:45,689 --> 00:01:50,279
get done first<font color="#E5E5E5"> it takes a while</font><font color="#CCCCCC"> a round</font>

42
00:01:48,720 --> 00:01:53,399
trip takes a while<font color="#E5E5E5"> so we want to</font>

43
00:01:50,280 --> 00:01:56,610
minimize<font color="#CCCCCC"> that if possible tell us if</font>

44
00:01:53,399 --> 00:02:00,420
we're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for examples we are going</font>

45
00:01:56,610 --> 00:02:02,549
to send a client hello<font color="#CCCCCC"> with</font><font color="#E5E5E5"> probably</font>

46
00:02:00,420 --> 00:02:05,040
<font color="#E5E5E5">some other stuff server responds back</font>

47
00:02:02,549 --> 00:02:06,990
with<font color="#CCCCCC"> a finished message and now the</font>

48
00:02:05,040 --> 00:02:10,200
client can compute their own<font color="#CCCCCC"> finished</font>

49
00:02:06,990 --> 00:02:11,849
message<font color="#E5E5E5"> and can actually start</font>

50
00:02:10,199 --> 00:02:13,530
encrypting data we can actually encrypt

51
00:02:11,849 --> 00:02:16,049
<font color="#CCCCCC">let's compute</font><font color="#E5E5E5"> the session key</font>

52
00:02:13,530 --> 00:02:19,050
<font color="#E5E5E5">this green line here and send</font><font color="#CCCCCC"> encrypted</font>

53
00:02:16,050 --> 00:02:21,300
data down there<font color="#E5E5E5"> no that's one full</font>

54
00:02:19,050 --> 00:02:26,250
round-trip<font color="#E5E5E5"> if we add on TCP because</font>

55
00:02:21,300 --> 00:02:28,530
that's what it takes<font color="#E5E5E5"> we're going to have</font>

56
00:02:26,250 --> 00:02:31,470
<font color="#CCCCCC">two round trips and it</font><font color="#E5E5E5"> con begins to add</font>

57
00:02:28,530 --> 00:02:36,150
<font color="#CCCCCC">up even if we've</font><font color="#E5E5E5"> seen do TLS over UDP</font><font color="#CCCCCC"> it</font>

58
00:02:31,470 --> 00:02:38,430
still takes a while so<font color="#E5E5E5"> if we're talking</font>

59
00:02:36,150 --> 00:02:43,170
<font color="#CCCCCC">about efficiency the question becomes is</font>

60
00:02:38,430 --> 00:02:46,260
it<font color="#E5E5E5"> possible to send data immediately</font><font color="#CCCCCC"> is</font>

61
00:02:43,170 --> 00:02:50,958
it possible<font color="#E5E5E5"> to actually encrypt on the</font>

62
00:02:46,260 --> 00:02:50,959
very first flow of a key exchange

63
00:02:52,100 --> 00:02:56,549
all right that's a bit contradictory

64
00:02:54,290 --> 00:02:59,720
<font color="#E5E5E5">we're talking about sending</font><font color="#CCCCCC"> encrypted</font>

65
00:02:56,550 --> 00:03:02,220
data<font color="#E5E5E5"> before you've even negotiated a key</font>

66
00:02:59,720 --> 00:03:03,959
if you're thinking that<font color="#E5E5E5"> there could be</font>

67
00:03:02,220 --> 00:03:07,069
security<font color="#E5E5E5"> problems with this you are</font>

68
00:03:03,959 --> 00:03:09,930
<font color="#CCCCCC">thinking correctly</font><font color="#E5E5E5"> it's problematic</font>

69
00:03:07,069 --> 00:03:11,760
however<font color="#CCCCCC"> no one can argue</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> Alena see</font>

70
00:03:09,930 --> 00:03:15,150
here<font color="#E5E5E5"> that's fast that's sending</font>

71
00:03:11,760 --> 00:03:16,709
<font color="#E5E5E5">encrypted data immediately no waiting so</font>

72
00:03:15,150 --> 00:03:18,000
this is something<font color="#CCCCCC"> that a lot of industry</font>

73
00:03:16,709 --> 00:03:21,630
has been getting interested<font color="#E5E5E5"> in for</font>

74
00:03:18,000 --> 00:03:24,750
obvious reasons it is quick<font color="#E5E5E5"> ah quick no</font>

75
00:03:21,630 --> 00:03:26,340
pun intended<font color="#E5E5E5"> is by Google it was one</font><font color="#CCCCCC"> of</font>

76
00:03:24,750 --> 00:03:27,810
the<font color="#E5E5E5"> first phone Morse runners that when</font>

77
00:03:26,340 --> 00:03:30,530
we're talking about<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> RTT key</font>

78
00:03:27,810 --> 00:03:33,180
exchange running over UDP

79
00:03:30,530 --> 00:03:36,230
what<font color="#CCCCCC"> does quick look like well</font>

80
00:03:33,180 --> 00:03:40,290
<font color="#E5E5E5">essentially there is a medium-lift</font>

81
00:03:36,230 --> 00:03:42,078
key up<font color="#CCCCCC"> here this</font><font color="#E5E5E5"> SK which is going</font><font color="#CCCCCC"> to be</font>

82
00:03:40,290 --> 00:03:45,780
part of a server configuration file

83
00:03:42,079 --> 00:03:49,049
during<font color="#E5E5E5"> some prior session this</font><font color="#CCCCCC"> is sent</font>

84
00:03:45,780 --> 00:03:52,829
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> to the client and then</font>

85
00:03:49,049 --> 00:03:55,320
later when<font color="#E5E5E5"> the client wants to reconnect</font>

86
00:03:52,829 --> 00:04:01,739
<font color="#CCCCCC">it will use this to compute</font><font color="#E5E5E5"> a temporary</font>

87
00:03:55,320 --> 00:04:03,900
key a<font color="#CCCCCC"> 0 RT T key how does this is</font>

88
00:04:01,739 --> 00:04:06,540
basically<font color="#E5E5E5"> diffie-hellman with its own</font>

89
00:04:03,900 --> 00:04:08,609
choice of ephemeral value and then later

90
00:04:06,540 --> 00:04:10,858
<font color="#E5E5E5">this server can choose its own new</font>

91
00:04:08,609 --> 00:04:13,200
ephemeral and we can eventually<font color="#E5E5E5"> end up</font>

92
00:04:10,859 --> 00:04:15,150
<font color="#CCCCCC">with a solo session</font><font color="#E5E5E5"> key down</font><font color="#CCCCCC"> here but</font>

93
00:04:13,200 --> 00:04:20,548
<font color="#E5E5E5">immediate encrypted data can be sent in</font>

94
00:04:15,150 --> 00:04:23,070
<font color="#E5E5E5">these flows</font><font color="#CCCCCC"> okay back to that issue</font><font color="#E5E5E5"> if</font>

95
00:04:20,548 --> 00:04:24,359
this could<font color="#E5E5E5"> be problematic let's take a</font>

96
00:04:23,070 --> 00:04:27,060
look at one of<font color="#E5E5E5"> those problems can be</font>

97
00:04:24,360 --> 00:04:29,540
replays<font color="#E5E5E5"> replays are a big deal</font>

98
00:04:27,060 --> 00:04:32,010
when we're talking about<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> RTT data</font>

99
00:04:29,540 --> 00:04:33,120
<font color="#CCCCCC">that can either</font><font color="#E5E5E5"> be the data itself or it</font>

100
00:04:32,010 --> 00:04:34,830
could be the key exchange that's

101
00:04:33,120 --> 00:04:36,600
replayed and there's a lot of other

102
00:04:34,830 --> 00:04:38,849
<font color="#CCCCCC">issues that</font><font color="#E5E5E5"> could</font><font color="#CCCCCC"> come</font><font color="#E5E5E5"> up with replay</font>

103
00:04:36,600 --> 00:04:40,710
but here's<font color="#CCCCCC"> just one of them if we have</font>

104
00:04:38,850 --> 00:04:42,510
<font color="#CCCCCC">an adversary</font><font color="#E5E5E5"> we can replay this</font>

105
00:04:40,710 --> 00:04:45,000
ephemeral value and replay the data

106
00:04:42,510 --> 00:04:46,440
itself so if you're<font color="#CCCCCC"> thinking that the</font>

107
00:04:45,000 --> 00:04:51,360
client is purchasing<font color="#E5E5E5"> something for</font>

108
00:04:46,440 --> 00:04:53,280
example<font color="#E5E5E5"> well then that's been billed</font>

109
00:04:51,360 --> 00:04:55,169
twice essentially maybe if we replay

110
00:04:53,280 --> 00:04:57,030
<font color="#CCCCCC">this several</font><font color="#E5E5E5"> times and the server thinks</font>

111
00:04:55,169 --> 00:05:00,479
<font color="#CCCCCC">okay you might just</font><font color="#E5E5E5"> keep buying the same</font>

112
00:04:57,030 --> 00:05:03,000
item<font color="#CCCCCC"> that's not going to</font><font color="#E5E5E5"> make for a lot</font>

113
00:05:00,480 --> 00:05:05,400
of happy clients<font color="#CCCCCC"> an alternative what</font>

114
00:05:03,000 --> 00:05:06,800
happens if this<font color="#CCCCCC"> midterm</font><font color="#E5E5E5"> key gets</font>

115
00:05:05,400 --> 00:05:11,159
compromised

116
00:05:06,800 --> 00:05:14,850
well that's compromised<font color="#E5E5E5"> then it can</font>

117
00:05:11,160 --> 00:05:19,290
compute this temporary key<font color="#E5E5E5"> and the</font>

118
00:05:14,850 --> 00:05:22,740
payload<font color="#CCCCCC"> itself this is a version of</font>

119
00:05:19,290 --> 00:05:24,360
what's<font color="#E5E5E5"> known as</font><font color="#CCCCCC"> forward</font><font color="#E5E5E5"> secrecy so let's</font>

120
00:05:22,740 --> 00:05:26,250
take a closer look<font color="#E5E5E5"> at the fort secrecy</font>

121
00:05:24,360 --> 00:05:27,510
landscape since that is in the title the

122
00:05:26,250 --> 00:05:30,990
talking therefore we should<font color="#CCCCCC"> address it</font>

123
00:05:27,510 --> 00:05:34,200
<font color="#CCCCCC">right</font><font color="#E5E5E5"> for secrecy landscape says we have</font>

124
00:05:30,990 --> 00:05:36,690
<font color="#E5E5E5">some initial sessions and then sometime</font>

125
00:05:34,200 --> 00:05:40,680
later<font color="#E5E5E5"> after these session</font><font color="#CCCCCC"> keys have been</font>

126
00:05:36,690 --> 00:05:44,030
<font color="#E5E5E5">used</font><font color="#CCCCCC"> and completed and etc and now this</font>

127
00:05:40,680 --> 00:05:46,919
<font color="#E5E5E5">theory compromises the long term key</font>

128
00:05:44,030 --> 00:05:48,419
<font color="#CCCCCC">okay and now in terms</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> for secrecy</font>

129
00:05:46,919 --> 00:05:51,240
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> not too</font><font color="#CCCCCC"> concerned about what</font>

130
00:05:48,419 --> 00:05:53,909
happens after that we assume that<font color="#E5E5E5"> it's</font>

131
00:05:51,240 --> 00:05:57,210
gone downhill<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we're really concerned</font>

132
00:05:53,910 --> 00:05:59,940
<font color="#E5E5E5">about is what happens before</font><font color="#CCCCCC"> that are</font>

133
00:05:57,210 --> 00:06:03,270
those session<font color="#CCCCCC"> keys still safe and for</font>

134
00:05:59,940 --> 00:06:06,630
<font color="#E5E5E5">secrecy says if those session keys</font>

135
00:06:03,270 --> 00:06:07,590
remain safe even<font color="#E5E5E5"> when the long term key</font>

136
00:06:06,630 --> 00:06:11,550
is compromised

137
00:06:07,590 --> 00:06:12,750
then we have forward<font color="#E5E5E5"> secrecy</font><font color="#CCCCCC"> in all the</font>

138
00:06:11,550 --> 00:06:16,190
communication<font color="#E5E5E5"> that's happened in the</font>

139
00:06:12,750 --> 00:06:20,220
<font color="#E5E5E5">past is still</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> even after compromise</font>

140
00:06:16,190 --> 00:06:23,370
then we're happy<font color="#E5E5E5"> in terms of quick this</font>

141
00:06:20,220 --> 00:06:24,660
becomes problematic<font color="#E5E5E5"> now we're not</font>

142
00:06:23,370 --> 00:06:26,250
<font color="#E5E5E5">talking</font><font color="#CCCCCC"> about a long term key we're</font>

143
00:06:24,660 --> 00:06:27,690
actually talking about a medium-lift key

144
00:06:26,250 --> 00:06:33,600
because this is part<font color="#CCCCCC"> of the server</font>

145
00:06:27,690 --> 00:06:36,270
configuration<font color="#CCCCCC"> file</font><font color="#E5E5E5"> however if we</font>

146
00:06:33,600 --> 00:06:39,390
<font color="#CCCCCC">compromised it there are zero RTT data</font>

147
00:06:36,270 --> 00:06:40,419
key and all the<font color="#CCCCCC"> Associated data can</font><font color="#E5E5E5"> now</font>

148
00:06:39,390 --> 00:06:44,380
be read and

149
00:06:40,420 --> 00:06:46,780
the obvious<font color="#CCCCCC"> air he knows it's gone the</font>

150
00:06:44,380 --> 00:06:47,170
<font color="#E5E5E5">eventual session key and the capital</font>

151
00:06:46,780 --> 00:06:50,080
here

152
00:06:47,170 --> 00:06:52,750
that's<font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> but for all the</font><font color="#CCCCCC"> sessions</font>

153
00:06:50,080 --> 00:06:53,969
and now<font color="#E5E5E5"> this is any zero</font><font color="#CCCCCC"> RTT session</font>

154
00:06:52,750 --> 00:06:59,830
that the client had made to the<font color="#E5E5E5"> server</font>

155
00:06:53,970 --> 00:07:04,600
<font color="#E5E5E5">they're compromised and a lot of people</font>

156
00:06:59,830 --> 00:07:08,440
said oh well that's<font color="#E5E5E5"> all we can do that's</font>

157
00:07:04,600 --> 00:07:12,610
the life of zero<font color="#CCCCCC"> RTT and we said well</font>

158
00:07:08,440 --> 00:07:14,560
are you sure<font color="#CCCCCC"> can we take this and make</font>

159
00:07:12,610 --> 00:07:17,470
<font color="#CCCCCC">it better</font><font color="#E5E5E5"> can we actually get perfect</font>

160
00:07:14,560 --> 00:07:20,050
for a secrecy<font color="#CCCCCC"> on that initial key</font>

161
00:07:17,470 --> 00:07:25,360
exchange<font color="#CCCCCC"> and as I said the beginning the</font>

162
00:07:20,050 --> 00:07:28,780
answer is yes<font color="#E5E5E5"> okay so our construction</font>

163
00:07:25,360 --> 00:07:31,930
full<font color="#E5E5E5"> fourth secrecy check replay</font>

164
00:07:28,780 --> 00:07:33,429
protection check how we do this<font color="#CCCCCC"> well</font>

165
00:07:31,930 --> 00:07:33,940
it's based on<font color="#E5E5E5"> hierarchical identity</font>

166
00:07:33,430 --> 00:07:37,270
based

167
00:07:33,940 --> 00:07:39,280
<font color="#CCCCCC">kims</font><font color="#E5E5E5"> with selective security so it's</font>

168
00:07:37,270 --> 00:07:43,150
actually<font color="#CCCCCC"> not that</font><font color="#E5E5E5"> strong of a security</font>

169
00:07:39,280 --> 00:07:46,479
demand and<font color="#CCCCCC"> one-time signatures</font><font color="#E5E5E5"> it's also</font>

170
00:07:43,150 --> 00:07:48,989
<font color="#CCCCCC">flexible</font><font color="#E5E5E5"> so this is cool it's</font><font color="#CCCCCC"> flexible</font>

171
00:07:46,480 --> 00:07:53,680
so<font color="#E5E5E5"> you can instantiate this with any</font><font color="#CCCCCC"> Kim</font>

172
00:07:48,990 --> 00:07:56,860
<font color="#E5E5E5">that's sufficient so for example post</font>

173
00:07:53,680 --> 00:07:59,620
quantum if you have a quantum<font color="#E5E5E5"> our</font>

174
00:07:56,860 --> 00:08:05,140
<font color="#E5E5E5">pairings</font><font color="#CCCCCC"> it cetera</font><font color="#E5E5E5"> it's a generic</font>

175
00:07:59,620 --> 00:08:07,630
<font color="#CCCCCC">construction so the core idea behind</font>

176
00:08:05,140 --> 00:08:08,650
<font color="#E5E5E5">this yeah it's like well everyone said</font>

177
00:08:07,630 --> 00:08:10,659
it was impossible<font color="#E5E5E5"> how are you actually</font>

178
00:08:08,650 --> 00:08:12,750
<font color="#E5E5E5">doing it then the core idea is update</font>

179
00:08:10,660 --> 00:08:14,560
<font color="#E5E5E5">the secret key</font><font color="#CCCCCC"> it's a very simple idea</font>

180
00:08:12,750 --> 00:08:16,360
<font color="#E5E5E5">update the secret key</font>

181
00:08:14,560 --> 00:08:21,010
if the secret<font color="#E5E5E5"> key can only be used to</font>

182
00:08:16,360 --> 00:08:23,260
decrypt<font color="#E5E5E5"> the ciphertext once then even if</font>

183
00:08:21,010 --> 00:08:27,030
that secret<font color="#CCCCCC"> key</font><font color="#E5E5E5"> is compromised later it</font>

184
00:08:23,260 --> 00:08:27,030
can't decrypt that<font color="#E5E5E5"> same ciphertext again</font>

185
00:08:27,270 --> 00:08:33,520
so update the secret key a quick

186
00:08:31,510 --> 00:08:35,200
overview<font color="#E5E5E5"> of what this protocol looks</font>

187
00:08:33,520 --> 00:08:37,630
<font color="#E5E5E5">like this is a core</font><font color="#CCCCCC"> idea and leaving on</font>

188
00:08:35,200 --> 00:08:39,130
a lot of<font color="#E5E5E5"> details</font><font color="#CCCCCC"> obviously</font><font color="#E5E5E5"> core ideas</font>

189
00:08:37,630 --> 00:08:42,610
<font color="#E5E5E5">it's a key encapsulation mechanism</font>

190
00:08:39,130 --> 00:08:45,280
that's it<font color="#CCCCCC"> we have a keen capsulation</font>

191
00:08:42,610 --> 00:08:47,860
<font color="#E5E5E5">happening on the client</font><font color="#CCCCCC"> server decap</font>

192
00:08:45,280 --> 00:08:49,660
<font color="#CCCCCC">sleights it and then it updates the</font><font color="#E5E5E5"> key</font>

193
00:08:47,860 --> 00:08:52,120
it punctures it<font color="#E5E5E5"> so we've mentioned</font>

194
00:08:49,660 --> 00:08:53,579
puncturing a few times as in<font color="#E5E5E5"> a session</font>

195
00:08:52,120 --> 00:08:55,680
<font color="#E5E5E5">alone but we</font>

196
00:08:53,580 --> 00:08:59,580
<font color="#E5E5E5">puncture the secret key and then we can</font>

197
00:08:55,680 --> 00:09:01,199
no longer decrypt<font color="#CCCCCC"> cypher text again son</font>

198
00:08:59,580 --> 00:09:05,340
the hidden detail is here<font color="#E5E5E5"> we actually</font>

199
00:09:01,200 --> 00:09:08,430
<font color="#E5E5E5">have an ID buried in this the ID is</font>

200
00:09:05,340 --> 00:09:11,690
<font color="#E5E5E5">compromised if it's composed of both the</font>

201
00:09:08,430 --> 00:09:15,930
one time signature verification key and

202
00:09:11,690 --> 00:09:17,580
a time interval before<font color="#E5E5E5"> that so this is</font>

203
00:09:15,930 --> 00:09:21,359
how we're going<font color="#E5E5E5"> to basically synchronize</font>

204
00:09:17,580 --> 00:09:23,640
and track which<font color="#E5E5E5"> keys have</font><font color="#CCCCCC"> been used on a</font>

205
00:09:21,360 --> 00:09:25,800
very high<font color="#E5E5E5"> level let's take a closer look</font>

206
00:09:23,640 --> 00:09:28,140
<font color="#E5E5E5">at that key exchange itself or the key</font>

207
00:09:25,800 --> 00:09:30,810
itself how are we updating<font color="#E5E5E5"> this now</font>

208
00:09:28,140 --> 00:09:32,640
again<font color="#CCCCCC"> I said we have a time interval</font><font color="#E5E5E5"> on</font>

209
00:09:30,810 --> 00:09:36,300
<font color="#CCCCCC">the high level and</font><font color="#E5E5E5"> then we're going to</font>

210
00:09:32,640 --> 00:09:39,990
have<font color="#CCCCCC"> a verification keys of the one time</font>

211
00:09:36,300 --> 00:09:42,209
signature below and essentially<font color="#E5E5E5"> this</font>

212
00:09:39,990 --> 00:09:45,570
makes a tree that<font color="#CCCCCC"> we can follow through</font>

213
00:09:42,210 --> 00:09:48,480
<font color="#CCCCCC">so we start out with a</font><font color="#E5E5E5"> secret key shown</font>

214
00:09:45,570 --> 00:09:50,220
<font color="#E5E5E5">here in blue everything</font><font color="#CCCCCC"> else is just</font><font color="#E5E5E5"> in</font>

215
00:09:48,480 --> 00:09:55,590
your<font color="#CCCCCC"> imagination it's just this blue key</font>

216
00:09:50,220 --> 00:10:00,810
right<font color="#E5E5E5"> and then we get a</font><font color="#CCCCCC"> cypher text at</font>

217
00:09:55,590 --> 00:10:02,670
some point and<font color="#E5E5E5"> we need to decrypt it so</font>

218
00:10:00,810 --> 00:10:06,270
what do we<font color="#E5E5E5"> do well we generate all the</font>

219
00:10:02,670 --> 00:10:08,339
keys<font color="#CCCCCC"> that we can get us there and that's</font>

220
00:10:06,270 --> 00:10:10,020
<font color="#CCCCCC">our</font><font color="#E5E5E5"> pathway</font><font color="#CCCCCC"> in addition to that we</font>

221
00:10:08,340 --> 00:10:15,180
generate the sibling keys to that

222
00:10:10,020 --> 00:10:17,220
<font color="#CCCCCC">pathway and then we puncture the pathway</font>

223
00:10:15,180 --> 00:10:20,699
<font color="#E5E5E5">that gets us to this decryption in the</font>

224
00:10:17,220 --> 00:10:22,470
first place so we can no longer decrypt

225
00:10:20,700 --> 00:10:25,380
the<font color="#CCCCCC"> cipher text and we can no longer</font>

226
00:10:22,470 --> 00:10:29,790
derive that key by any means everything

227
00:10:25,380 --> 00:10:37,320
<font color="#E5E5E5">that led us to this key is gone the new</font>

228
00:10:29,790 --> 00:10:40,670
secret<font color="#E5E5E5"> key</font><font color="#CCCCCC"> is the blue shown here so the</font>

229
00:10:37,320 --> 00:10:43,440
secret key grows this is a<font color="#CCCCCC"> downside</font><font color="#E5E5E5"> is a</font>

230
00:10:40,670 --> 00:10:47,069
<font color="#CCCCCC">middle downside to this protocol secret</font>

231
00:10:43,440 --> 00:10:48,750
key<font color="#E5E5E5"> coat does grow</font><font color="#CCCCCC"> but the number of</font>

232
00:10:47,070 --> 00:10:49,830
<font color="#E5E5E5">times we puncture is precession because</font>

233
00:10:48,750 --> 00:10:53,040
we're<font color="#E5E5E5"> actually getting out the</font><font color="#CCCCCC"> session</font>

234
00:10:49,830 --> 00:10:56,940
key so it depends a lot on your<font color="#CCCCCC"> use case</font>

235
00:10:53,040 --> 00:11:00,140
scenario<font color="#CCCCCC"> of how</font><font color="#E5E5E5"> bad this is if you're</font>

236
00:10:56,940 --> 00:11:02,700
talking<font color="#CCCCCC"> about say</font><font color="#E5E5E5"> messaging protocol</font>

237
00:11:00,140 --> 00:11:04,410
where you<font color="#CCCCCC"> establish this session with a</font>

238
00:11:02,700 --> 00:11:06,019
friend<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you get you set up your</font>

239
00:11:04,410 --> 00:11:07,488
message

240
00:11:06,019 --> 00:11:09,199
then you're<font color="#E5E5E5"> probably only going to have</font>

241
00:11:07,489 --> 00:11:10,970
an initial<font color="#E5E5E5"> session to establish that and</font>

242
00:11:09,199 --> 00:11:12,859
you'll keep talking<font color="#CCCCCC"> for forever long</font>

243
00:11:10,970 --> 00:11:14,989
until<font color="#E5E5E5"> your</font><font color="#CCCCCC"> Ferren drops their phone in</font>

244
00:11:12,860 --> 00:11:16,189
the pond and<font color="#E5E5E5"> you have to get a new</font>

245
00:11:14,989 --> 00:11:19,279
<font color="#CCCCCC">session started when they buy a new</font>

246
00:11:16,189 --> 00:11:20,599
phone<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> isn't necessarily</font><font color="#CCCCCC"> that bad</font>

247
00:11:19,279 --> 00:11:22,879
<font color="#E5E5E5">but</font><font color="#CCCCCC"> it depends a lot on the use case</font>

248
00:11:20,600 --> 00:11:26,089
scenario<font color="#CCCCCC"> and something to</font><font color="#E5E5E5"> keep in mind</font>

249
00:11:22,879 --> 00:11:29,509
<font color="#E5E5E5">though however</font><font color="#CCCCCC"> we can't</font><font color="#E5E5E5"> improve this</font>

250
00:11:26,089 --> 00:11:31,519
memory issue<font color="#CCCCCC"> I mentioned before that</font>

251
00:11:29,509 --> 00:11:34,369
<font color="#E5E5E5">we're having some</font><font color="#CCCCCC"> sort of time slot</font>

252
00:11:31,519 --> 00:11:38,360
synchronization<font color="#E5E5E5"> and this is on</font><font color="#CCCCCC"> the top</font>

253
00:11:34,369 --> 00:11:40,730
part<font color="#E5E5E5"> of our tree</font><font color="#CCCCCC"> so here we're</font><font color="#E5E5E5"> going to</font>

254
00:11:38,360 --> 00:11:43,339
<font color="#CCCCCC">have</font><font color="#E5E5E5"> four times thoughts just for an</font>

255
00:11:40,730 --> 00:11:47,749
example<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> can erase these time</font>

256
00:11:43,339 --> 00:11:49,730
<font color="#CCCCCC">slots when you so when the</font><font color="#E5E5E5"> secret key</font>

257
00:11:47,749 --> 00:11:52,129
has grown a<font color="#CCCCCC"> lot because of use over here</font>

258
00:11:49,730 --> 00:11:55,699
<font color="#CCCCCC">for example</font><font color="#E5E5E5"> we can get rid of that</font><font color="#CCCCCC"> and</font>

259
00:11:52,129 --> 00:11:57,319
say well let's reduce it back<font color="#E5E5E5"> down now</font>

260
00:11:55,699 --> 00:11:59,269
this requires<font color="#E5E5E5"> only a very loose</font>

261
00:11:57,319 --> 00:12:01,189
<font color="#E5E5E5">synchronization between the client and</font>

262
00:11:59,269 --> 00:12:03,860
the<font color="#CCCCCC"> server it's on</font><font color="#E5E5E5"> a strict time</font>

263
00:12:01,189 --> 00:12:07,399
synchronization<font color="#E5E5E5"> so it's only</font><font color="#CCCCCC"> very loose</font>

264
00:12:03,860 --> 00:12:09,410
but<font color="#CCCCCC"> they can improve efficiency</font>

265
00:12:07,399 --> 00:12:13,069
<font color="#E5E5E5">essentially</font><font color="#CCCCCC"> improve</font><font color="#E5E5E5"> improve memory we'll</font>

266
00:12:09,410 --> 00:12:14,179
say other evaluations<font color="#E5E5E5"> so this doesn't</font>

267
00:12:13,069 --> 00:12:15,618
<font color="#E5E5E5">actually show up in the paper in case</font>

268
00:12:14,179 --> 00:12:17,089
you're wondering or have read it or want

269
00:12:15,619 --> 00:12:18,529
to read it but<font color="#E5E5E5"> this is just a rough</font>

270
00:12:17,089 --> 00:12:20,569
evaluation<font color="#E5E5E5"> that we've done for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very</font>

271
00:12:18,529 --> 00:12:23,470
basic implementation<font color="#CCCCCC"> to give you an idea</font>

272
00:12:20,569 --> 00:12:26,029
of<font color="#E5E5E5"> what you're looking</font><font color="#CCCCCC"> at essentially</font>

273
00:12:23,470 --> 00:12:27,529
<font color="#E5E5E5">encapsulation is ticking know seconds</font>

274
00:12:26,029 --> 00:12:29,389
<font color="#E5E5E5">that's good</font>

275
00:12:27,529 --> 00:12:30,529
<font color="#CCCCCC">D capsulation is</font><font color="#E5E5E5"> taking seconds it kinda</font>

276
00:12:29,389 --> 00:12:33,040
gets<font color="#E5E5E5"> a little bit worse for puncturing</font>

277
00:12:30,529 --> 00:12:37,490
which we're<font color="#E5E5E5"> talking seconds to minutes</font>

278
00:12:33,040 --> 00:12:41,079
<font color="#CCCCCC">however</font><font color="#E5E5E5"> as I</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> again this is only a</font>

279
00:12:37,490 --> 00:12:43,610
<font color="#E5E5E5">very basic implementation</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of a</font>

280
00:12:41,079 --> 00:12:45,618
no-brainer<font color="#CCCCCC"> I won't say no brainer</font>

281
00:12:43,610 --> 00:12:48,049
<font color="#CCCCCC">present definitely not a detailed</font>

282
00:12:45,619 --> 00:12:50,990
implementation<font color="#E5E5E5"> so and we need only</font>

283
00:12:48,049 --> 00:12:54,290
selective security on the<font color="#CCCCCC"> cam so this</font>

284
00:12:50,990 --> 00:12:55,459
could be<font color="#E5E5E5"> improved</font><font color="#CCCCCC"> we expect to speak</font><font color="#E5E5E5"> not</font>

285
00:12:54,290 --> 00:13:01,279
<font color="#E5E5E5">to mention the actual implementation</font>

286
00:12:55,459 --> 00:13:02,868
itself<font color="#E5E5E5"> other comparisons in about two</font>

287
00:13:01,279 --> 00:13:07,069
years<font color="#CCCCCC"> ago an SMP</font><font color="#E5E5E5"> Greene</font><font color="#CCCCCC"> & Meyers</font>

288
00:13:02,869 --> 00:13:08,749
discussed<font color="#CCCCCC"> puncture</font><font color="#E5E5E5"> bowl encryption so if</font>

289
00:13:07,069 --> 00:13:12,979
we want to compare what this means

290
00:13:08,749 --> 00:13:14,709
<font color="#E5E5E5">versus</font><font color="#CCCCCC"> theirs here we have a generic I</font>

291
00:13:12,980 --> 00:13:18,610
you know I said<font color="#E5E5E5"> it's a generic</font>

292
00:13:14,709 --> 00:13:21,878
<font color="#E5E5E5">hierarchical</font><font color="#CCCCCC"> identity based</font><font color="#E5E5E5"> Kim</font>

293
00:13:18,610 --> 00:13:24,459
so you can attach<font color="#CCCCCC"> it as you will</font><font color="#E5E5E5"> there</font>

294
00:13:21,879 --> 00:13:25,989
<font color="#E5E5E5">is it was specific bilinear groups so we</font>

295
00:13:24,459 --> 00:13:27,609
have a lot more flexibility<font color="#CCCCCC"> it's an</font>

296
00:13:25,989 --> 00:13:29,470
improvement<font color="#E5E5E5"> in that respect it's</font><font color="#CCCCCC"> also an</font>

297
00:13:27,610 --> 00:13:33,269
improvement<font color="#E5E5E5"> that we're doing a standard</font>

298
00:13:29,470 --> 00:13:36,939
<font color="#E5E5E5">model versus a random Oracle</font><font color="#CCCCCC"> model</font><font color="#E5E5E5"> so</font>

299
00:13:33,269 --> 00:13:40,029
this<font color="#E5E5E5"> is pretty good actually</font><font color="#CCCCCC"> if you</font>

300
00:13:36,939 --> 00:13:43,748
<font color="#E5E5E5">think back to Nigel's talk earlier in</font>

301
00:13:40,029 --> 00:13:45,939
the<font color="#E5E5E5"> week</font><font color="#CCCCCC"> as in via talked about getting</font>

302
00:13:43,749 --> 00:13:47,949
<font color="#E5E5E5">things more efficient</font><font color="#CCCCCC"> and moving</font><font color="#E5E5E5"> from</font>

303
00:13:45,939 --> 00:13:49,988
that<font color="#E5E5E5"> theory</font><font color="#CCCCCC"> to practice</font><font color="#E5E5E5"> well this is now</font>

304
00:13:47,949 --> 00:13:52,899
at<font color="#E5E5E5"> this step where someone here can take</font>

305
00:13:49,989 --> 00:13:54,549
it<font color="#E5E5E5"> from</font><font color="#CCCCCC"> that theory</font><font color="#E5E5E5"> to practice there's</font>

306
00:13:52,899 --> 00:13:58,809
room for improvement<font color="#CCCCCC"> but we expect it</font>

307
00:13:54,549 --> 00:14:00,819
could<font color="#CCCCCC"> is possible so what do we have now</font>

308
00:13:58,809 --> 00:14:04,809
what is the outcome<font color="#E5E5E5"> of all this once</font>

309
00:14:00,819 --> 00:14:07,179
<font color="#E5E5E5">again we have</font><font color="#CCCCCC"> forward secure 0 RT T key</font>

310
00:14:04,809 --> 00:14:08,949
exchange<font color="#E5E5E5"> we have a security model for</font>

311
00:14:07,179 --> 00:14:10,569
that<font color="#E5E5E5"> we have generic</font><font color="#CCCCCC"> construction and</font>

312
00:14:08,949 --> 00:14:12,339
security proof and a whole<font color="#E5E5E5"> bunch of</font>

313
00:14:10,569 --> 00:14:14,979
other<font color="#E5E5E5"> amazing details which</font><font color="#CCCCCC"> you can of</font>

314
00:14:12,339 --> 00:14:19,749
course<font color="#E5E5E5"> read in the paper</font><font color="#CCCCCC"> what we have in</font>

315
00:14:14,980 --> 00:14:21,670
the future we can optimize<font color="#CCCCCC"> a CaMKII</font>

316
00:14:19,749 --> 00:14:23,230
delegation so this is another room<font color="#CCCCCC"> for</font>

317
00:14:21,670 --> 00:14:26,019
improvement a lot of work that's been

318
00:14:23,230 --> 00:14:31,029
<font color="#CCCCCC">done on these so far been optimizing say</font>

319
00:14:26,019 --> 00:14:33,249
<font color="#CCCCCC">a decapsulation and not so much</font><font color="#E5E5E5"> the key</font>

320
00:14:31,029 --> 00:14:34,989
delegation stuff itself<font color="#E5E5E5"> for our</font>

321
00:14:33,249 --> 00:14:37,419
construction<font color="#E5E5E5"> that's the most expensive</font>

322
00:14:34,989 --> 00:14:40,269
part<font color="#E5E5E5"> so if we optimize that that in</font><font color="#CCCCCC"> the</font>

323
00:14:37,419 --> 00:14:41,489
whole scheme becomes optimized<font color="#E5E5E5"> and of</font>

324
00:14:40,269 --> 00:14:43,959
course make it practical

325
00:14:41,489 --> 00:14:47,139
so there's room for<font color="#CCCCCC"> future</font><font color="#E5E5E5"> work and I'm</font>

326
00:14:43,959 --> 00:14:49,959
once<font color="#CCCCCC"> again just when I say</font><font color="#E5E5E5"> yes it is</font>

327
00:14:47,139 --> 00:14:52,210
<font color="#CCCCCC">possible and yes we've once again one of</font>

328
00:14:49,959 --> 00:15:01,939
<font color="#E5E5E5">our track</font><font color="#CCCCCC"> being</font><font color="#E5E5E5"> so thank you very much</font>

329
00:14:52,210 --> 00:15:01,940
[Applause]

330
00:15:03,070 --> 00:15:21,850
so we have lots of time so we<font color="#CCCCCC"> are the</font>

331
00:15:07,250 --> 00:15:21,850
lots of questions<font color="#E5E5E5"> okay</font>

332
00:15:24,160 --> 00:15:31,550
so can we present<font color="#E5E5E5"> a paper in zero</font><font color="#CCCCCC"> RTT</font>

333
00:15:27,770 --> 00:15:40,160
time with respect<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reviewing</font><font color="#CCCCCC"> ah that</font>

334
00:15:31,550 --> 00:15:42,349
<font color="#E5E5E5">would be lovely wouldn't it you have</font>

335
00:15:40,160 --> 00:15:44,360
mentioned that the key<font color="#CCCCCC"> discard scheme</font>

336
00:15:42,350 --> 00:15:45,830
required some loose<font color="#CCCCCC"> synchronization</font>

337
00:15:44,360 --> 00:15:47,840
could you mention<font color="#CCCCCC"> something and how</font>

338
00:15:45,830 --> 00:15:52,580
that's done or what do you<font color="#E5E5E5"> mean by loose</font>

339
00:15:47,840 --> 00:15:57,770
<font color="#E5E5E5">yeah so if we go</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> this picture</font>

340
00:15:52,580 --> 00:16:00,410
here<font color="#CCCCCC"> so we're only talking</font><font color="#E5E5E5"> about like a</font>

341
00:15:57,770 --> 00:16:02,689
set time intervals and not learn<font color="#CCCCCC"> we're</font>

342
00:16:00,410 --> 00:16:05,030
not talking about<font color="#CCCCCC"> seconds for example</font>

343
00:16:02,690 --> 00:16:08,270
milliseconds<font color="#CCCCCC"> there so that way it's more</font>

344
00:16:05,030 --> 00:16:11,240
of a<font color="#E5E5E5"> very rough saying</font><font color="#CCCCCC"> say well</font><font color="#E5E5E5"> name</font>

345
00:16:08,270 --> 00:16:13,910
time intervals so example if I was<font color="#E5E5E5"> to do</font>

346
00:16:11,240 --> 00:16:15,800
it again this<font color="#E5E5E5"> is an example zero zero</font>

347
00:16:13,910 --> 00:16:20,329
will<font color="#E5E5E5"> be our time interval here there'll</font>

348
00:16:15,800 --> 00:16:22,339
<font color="#E5E5E5">be 0 1 1 0 1 1 etc etc</font><font color="#CCCCCC"> so we'll go up to</font>

349
00:16:20,330 --> 00:16:23,930
there<font color="#E5E5E5"> as a time interval and then to</font>

350
00:16:22,340 --> 00:16:25,850
<font color="#E5E5E5">give us the rest of the tree built we</font>

351
00:16:23,930 --> 00:16:29,780
need to use<font color="#E5E5E5"> the verification keys of the</font>

352
00:16:25,850 --> 00:16:31,490
one time signature<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> the say the</font>

353
00:16:29,780 --> 00:16:33,920
<font color="#CCCCCC">clients and</font><font color="#E5E5E5"> servers that are in</font>

354
00:16:31,490 --> 00:16:37,790
agreement<font color="#CCCCCC"> the local just say this is</font>

355
00:16:33,920 --> 00:16:41,089
<font color="#E5E5E5">time 0 which and that corresponds to</font>

356
00:16:37,790 --> 00:16:43,520
puncturing here then they can both agree

357
00:16:41,090 --> 00:16:47,030
<font color="#CCCCCC">we're just puncture times zero and this</font>

358
00:16:43,520 --> 00:16:50,050
part of the<font color="#CCCCCC"> subtree</font><font color="#E5E5E5"> is gone where we've</font>

359
00:16:47,030 --> 00:16:50,050
<font color="#E5E5E5">purchased the keys there</font>

360
00:16:58,230 --> 00:17:05,079
and you mentioned TLS at the beginning

361
00:17:01,540 --> 00:17:07,928
of your talk<font color="#CCCCCC"> yeah but this</font><font color="#E5E5E5"> sort of</font>

362
00:17:05,079 --> 00:17:10,990
expanding key seems like it would<font color="#E5E5E5"> be not</font>

363
00:17:07,929 --> 00:17:14,799
<font color="#CCCCCC">very appropriate for TLS itself as it is</font>

364
00:17:10,990 --> 00:17:17,980
<font color="#E5E5E5">no in its current form but again this is</font>

365
00:17:14,799 --> 00:17:20,230
as I said<font color="#CCCCCC"> the start</font><font color="#E5E5E5"> so to speak</font><font color="#CCCCCC"> it's</font>

366
00:17:17,980 --> 00:17:22,689
like we finally gone<font color="#E5E5E5"> forward security in</font>

367
00:17:20,230 --> 00:17:24,610
<font color="#CCCCCC">Xero RTT</font><font color="#E5E5E5"> there's some room for</font>

368
00:17:22,689 --> 00:17:27,490
improvement just<font color="#E5E5E5"> for this in</font><font color="#CCCCCC"> itself and</font>

369
00:17:24,609 --> 00:17:30,779
our actual construction<font color="#E5E5E5"> and then I mean</font>

370
00:17:27,490 --> 00:17:33,149
if you expand the idea<font color="#E5E5E5"> it could easily</font>

371
00:17:30,779 --> 00:17:36,100
relatively easily<font color="#CCCCCC"> get to the point of</font>

372
00:17:33,149 --> 00:17:39,039
usability for TLS<font color="#E5E5E5"> so</font><font color="#CCCCCC"> tier that's one</font>

373
00:17:36,100 --> 00:17:41,639
<font color="#E5E5E5">point for then unless it</font><font color="#CCCCCC"> becomes a</font><font color="#E5E5E5"> two</font>

374
00:17:39,039 --> 00:17:41,639
point for you right

375
00:17:46,080 --> 00:17:49,299
have you ever thought about the

376
00:17:47,889 --> 00:17:51,428
suitability<font color="#E5E5E5"> of applying this for like</font>

377
00:17:49,299 --> 00:17:52,840
distributed systems<font color="#CCCCCC"> so I mean often we</font>

378
00:17:51,429 --> 00:17:54,490
like<font color="#CCCCCC"> CD ends and stuff right you have</font>

379
00:17:52,840 --> 00:17:55,990
multiple servers<font color="#CCCCCC"> and you want</font><font color="#E5E5E5"> to use the</font>

380
00:17:54,490 --> 00:17:57,610
same<font color="#CCCCCC"> Q's all of them would you be able</font>

381
00:17:55,990 --> 00:17:59,769
<font color="#E5E5E5">to</font><font color="#CCCCCC"> apply</font><font color="#E5E5E5"> this or with that</font>

382
00:17:57,610 --> 00:18:01,510
synchronization it's not be<font color="#CCCCCC"> possible if</font>

383
00:17:59,769 --> 00:18:06,460
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to have the same</font><font color="#E5E5E5"> key in all the</font>

384
00:18:01,510 --> 00:18:07,870
<font color="#E5E5E5">servers yeah well obviously</font><font color="#CCCCCC"> of course</font>

385
00:18:06,460 --> 00:18:10,240
this<font color="#CCCCCC"> is a depends on</font><font color="#E5E5E5"> your security</font>

386
00:18:07,870 --> 00:18:12,428
<font color="#E5E5E5">adversarial model right</font><font color="#CCCCCC"> if you're using</font>

387
00:18:10,240 --> 00:18:16,110
the<font color="#E5E5E5"> same thing all the</font><font color="#CCCCCC"> servers there can</font>

388
00:18:12,429 --> 00:18:18,370
be complications<font color="#E5E5E5"> there and itself</font>

389
00:18:16,110 --> 00:18:20,350
<font color="#E5E5E5">certainly there's variations of this</font>

390
00:18:18,370 --> 00:18:22,649
<font color="#CCCCCC">that you could apply that that sort of</font>

391
00:18:20,350 --> 00:18:24,668
everyone<font color="#CCCCCC"> sera model is</font><font color="#E5E5E5"> quite specific</font>

392
00:18:22,649 --> 00:18:26,049
<font color="#E5E5E5">okay it's just cuz that's kind of what</font>

393
00:18:24,669 --> 00:18:27,850
quick<font color="#CCCCCC"> faced with that like strike</font><font color="#E5E5E5"> this</font>

394
00:18:26,049 --> 00:18:29,320
right is that<font color="#E5E5E5"> you can you can</font><font color="#CCCCCC"> reap a</font>

395
00:18:27,850 --> 00:18:31,269
message to<font color="#E5E5E5"> just a different</font><font color="#CCCCCC"> server still</font>

396
00:18:29,320 --> 00:18:35,980
and it'll still way through right yeah

397
00:18:31,269 --> 00:18:38,220
<font color="#E5E5E5">so this is I mean again this should only</font>

398
00:18:35,980 --> 00:18:42,000
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to be decrypted once at all</font>

399
00:18:38,220 --> 00:18:42,000
regardless of where you send it

400
00:18:49,429 --> 00:18:57,360
did you<font color="#E5E5E5"> meant to</font><font color="#CCCCCC"> be the vehicle for</font><font color="#E5E5E5"> what</font>

401
00:18:53,909 --> 00:18:59,429
<font color="#E5E5E5">to it security</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> uh yeah we saw our</font>

402
00:18:57,360 --> 00:19:01,799
basic implementation we have<font color="#CCCCCC"> a number</font><font color="#E5E5E5"> of</font>

403
00:18:59,429 --> 00:19:03,750
<font color="#E5E5E5">variations of it</font><font color="#CCCCCC"> I didn't want to</font>

404
00:19:01,799 --> 00:19:06,330
present any of<font color="#E5E5E5"> them in detail</font><font color="#CCCCCC"> because</font>

405
00:19:03,750 --> 00:19:14,809
father<font color="#E5E5E5"> for one basic and also at the</font>

406
00:19:06,330 --> 00:19:19,830
trial phase<font color="#E5E5E5"> but yes we have I think of</font>

407
00:19:14,809 --> 00:19:23,190
using<font color="#E5E5E5"> Bianca for what</font><font color="#CCCCCC"> 280 what - 8-bit</font>

408
00:19:19,830 --> 00:19:25,918
security should be careful yeah<font color="#CCCCCC"> we have</font>

409
00:19:23,190 --> 00:19:28,110
a 256 as well but that's why I didn't

410
00:19:25,919 --> 00:19:31,169
bother putting<font color="#E5E5E5"> up the actual</font><font color="#CCCCCC"> numbers is</font>

411
00:19:28,110 --> 00:19:35,729
because we had the<font color="#CCCCCC"> wrong idea</font><font color="#E5E5E5"> from</font>

412
00:19:31,169 --> 00:19:39,809
obviously<font color="#CCCCCC"> insecure</font><font color="#E5E5E5"> key size to probably</font>

413
00:19:35,730 --> 00:19:41,690
perfectly<font color="#E5E5E5"> flying key size it's all</font>

414
00:19:39,809 --> 00:19:45,049
around the same numbers of seconds

415
00:19:41,690 --> 00:19:45,049
<font color="#E5E5E5">milliseconds of minutes</font>

