1
00:00:00,000 --> 00:00:09,050
<font color="#CCCCCC">kaity</font><font color="#E5E5E5"> talk session of your</font><font color="#CCCCCC"> crypts so</font>

2
00:00:05,220 --> 00:00:15,030
today it<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> pleasure to welcome</font>

3
00:00:09,050 --> 00:00:17,820
<font color="#CCCCCC">Gilbert</font><font color="#E5E5E5"> and so who is our first invited</font>

4
00:00:15,030 --> 00:00:20,310
speaker for the<font color="#CCCCCC"> Europe conference</font>

5
00:00:17,820 --> 00:00:22,260
so Jill received his PhD<font color="#E5E5E5"> in mathematics</font>

6
00:00:20,310 --> 00:00:25,619
from<font color="#E5E5E5"> the University of Manchester in</font>

7
00:00:22,260 --> 00:00:28,470
1993<font color="#CCCCCC"> he</font><font color="#E5E5E5"> is currently professor at the</font>

8
00:00:25,619 --> 00:00:33,809
IMD a software and<font color="#CCCCCC"> stood in Spain since</font>

9
00:00:28,470 --> 00:00:35,010
2008 and since joining<font color="#CCCCCC"> aMDA he has is</font>

10
00:00:33,809 --> 00:00:37,050
<font color="#E5E5E5">research has focused on building</font>

11
00:00:35,010 --> 00:00:39,089
foundations and tools for verifying

12
00:00:37,050 --> 00:00:41,940
cryptographic instructions and

13
00:00:39,090 --> 00:00:44,879
differentially private competitions<font color="#E5E5E5"> so</font>

14
00:00:41,940 --> 00:00:48,500
today he will speak about<font color="#E5E5E5"> advances in</font>

15
00:00:44,879 --> 00:00:48,500
computer<font color="#CCCCCC"> aided cryptography</font>

16
00:00:56,320 --> 00:01:05,830
so good morning<font color="#E5E5E5"> and thanks a lot</font><font color="#CCCCCC"> for the</font>

17
00:01:00,290 --> 00:01:09,770
invitation<font color="#CCCCCC"> I'm very</font><font color="#E5E5E5"> honored to be</font><font color="#CCCCCC"> here</font>

18
00:01:05,830 --> 00:01:13,060
<font color="#CCCCCC">maybe also for</font><font color="#E5E5E5"> French people this room</font>

19
00:01:09,770 --> 00:01:15,500
is a bit<font color="#E5E5E5"> or this place is a bit special</font>

20
00:01:13,060 --> 00:01:17,840
<font color="#CCCCCC">this is actually a place which</font><font color="#E5E5E5"> is a</font>

21
00:01:15,500 --> 00:01:21,290
<font color="#CCCCCC">well-known</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> France for political</font>

22
00:01:17,840 --> 00:01:23,180
meetings<font color="#CCCCCC"> one of the candidates</font><font color="#E5E5E5"> of the</font>

23
00:01:21,290 --> 00:01:26,840
presidential election I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> hold this</font>

24
00:01:23,180 --> 00:01:29,390
meeting<font color="#E5E5E5"> here last week</font><font color="#CCCCCC"> luckily for you I</font>

25
00:01:26,840 --> 00:01:31,880
won't be talking<font color="#E5E5E5"> about politics today</font>

26
00:01:29,390 --> 00:01:38,720
<font color="#E5E5E5">but</font><font color="#CCCCCC"> it's still very</font><font color="#E5E5E5"> nice to be in this</font>

27
00:01:31,880 --> 00:01:41,030
room<font color="#CCCCCC"> and so we actually</font><font color="#E5E5E5"> came to be</font>

28
00:01:38,720 --> 00:01:44,600
<font color="#E5E5E5">interested in cryptography</font><font color="#CCCCCC"> a bit by luck</font>

29
00:01:41,030 --> 00:01:47,869
<font color="#CCCCCC">I was</font><font color="#E5E5E5"> attending a meeting in Estonia in</font>

30
00:01:44,600 --> 00:01:50,509
2000 and the presenting work on<font color="#E5E5E5"> logic</font>

31
00:01:47,869 --> 00:01:52,670
and there was a<font color="#E5E5E5"> course by a close</font>

32
00:01:50,509 --> 00:01:55,729
Peterson or about the<font color="#CCCCCC"> January</font><font color="#E5E5E5"> group</font>

33
00:01:52,670 --> 00:01:58,550
model<font color="#E5E5E5"> and I attended the course and I</font>

34
00:01:55,729 --> 00:02:02,420
found it very<font color="#E5E5E5"> exciting and started to</font>

35
00:01:58,550 --> 00:02:06,530
work<font color="#E5E5E5"> on this a</font><font color="#CCCCCC"> bit later but really what</font>

36
00:02:02,420 --> 00:02:08,209
God has started<font color="#E5E5E5"> very seriously in</font>

37
00:02:06,530 --> 00:02:12,650
looking at cryptography<font color="#E5E5E5"> and I'm very</font>

38
00:02:08,209 --> 00:02:16,670
<font color="#E5E5E5">thankful</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> authors for this</font><font color="#CCCCCC"> are two</font>

39
00:02:12,650 --> 00:02:18,620
papers<font color="#CCCCCC"> by Shai Halevi and</font><font color="#E5E5E5"> mahir Malik</font>

40
00:02:16,670 --> 00:02:20,450
and Phil<font color="#E5E5E5"> Rockaway and also to some</font>

41
00:02:18,620 --> 00:02:25,459
<font color="#CCCCCC">extent by victor soup they were all</font>

42
00:02:20,450 --> 00:02:28,268
published around 2005<font color="#CCCCCC"> and in particular</font>

43
00:02:25,459 --> 00:02:32,350
<font color="#E5E5E5">there is</font><font color="#CCCCCC"> a very beautiful</font><font color="#E5E5E5"> and insightful</font>

44
00:02:28,269 --> 00:02:36,410
<font color="#E5E5E5">paper by ash I was the kind of</font>

45
00:02:32,350 --> 00:02:40,220
suggesting how a tool for<font color="#CCCCCC"> building and</font>

46
00:02:36,410 --> 00:02:42,799
verifying cryptographic<font color="#E5E5E5"> proofs would</font>

47
00:02:40,220 --> 00:02:46,250
look like<font color="#E5E5E5"> I don't think this paper has</font>

48
00:02:42,799 --> 00:02:49,670
ever been published<font color="#E5E5E5"> but it has served as</font>

49
00:02:46,250 --> 00:02:51,709
a<font color="#E5E5E5"> source of inspiration</font><font color="#CCCCCC"> for many many</font>

50
00:02:49,670 --> 00:02:55,369
<font color="#CCCCCC">years so we are</font><font color="#E5E5E5"> very grateful for</font><font color="#CCCCCC"> this</font>

51
00:02:51,709 --> 00:02:59,840
and so as I<font color="#E5E5E5"> said we also started to do</font>

52
00:02:55,370 --> 00:03:04,299
this work around 2006<font color="#E5E5E5"> and we were kind</font>

53
00:02:59,840 --> 00:03:06,829
of<font color="#E5E5E5"> trying to understand the crypto</font><font color="#CCCCCC"> of</font>

54
00:03:04,299 --> 00:03:08,660
just in our corner<font color="#E5E5E5"> we started from very</font>

55
00:03:06,829 --> 00:03:11,650
very far<font color="#CCCCCC"> we didn't have any</font>

56
00:03:08,660 --> 00:03:14,060
<font color="#E5E5E5">ground gradually we had a lot of</font>

57
00:03:11,650 --> 00:03:16,250
cryptographers that were answering<font color="#CCCCCC"> all</font>

58
00:03:14,060 --> 00:03:19,700
<font color="#CCCCCC">our silly questions so I'm also very</font>

59
00:03:16,250 --> 00:03:23,270
<font color="#E5E5E5">thankful</font><font color="#CCCCCC"> for this but also</font><font color="#E5E5E5"> something</font>

60
00:03:19,700 --> 00:03:27,920
<font color="#CCCCCC">which was a very important for us was in</font>

61
00:03:23,270 --> 00:03:30,530
crypto 2011<font color="#CCCCCC"> actually in the</font><font color="#E5E5E5"> call for</font>

62
00:03:27,920 --> 00:03:33,260
paper which I hope you<font color="#E5E5E5"> can read here</font><font color="#CCCCCC"> but</font>

63
00:03:30,530 --> 00:03:36,170
<font color="#CCCCCC">there were some emphasis on also</font>

64
00:03:33,260 --> 00:03:39,170
<font color="#E5E5E5">welcoming topics that</font><font color="#CCCCCC"> don't routinely</font>

65
00:03:36,170 --> 00:03:41,239
<font color="#E5E5E5">appear at the crypto including</font>

66
00:03:39,170 --> 00:03:45,380
cryptographic work in the style of<font color="#E5E5E5"> the</font>

67
00:03:41,240 --> 00:03:48,140
CSF symposium so CSF is more on computer

68
00:03:45,380 --> 00:03:52,490
security<font color="#CCCCCC"> foundation and applying formal</font>

69
00:03:48,140 --> 00:03:55,910
methods<font color="#E5E5E5"> and logic</font><font color="#CCCCCC"> to security problem</font>

70
00:03:52,490 --> 00:03:59,560
<font color="#E5E5E5">and so</font><font color="#CCCCCC"> we got</font><font color="#E5E5E5"> motivated by this</font><font color="#CCCCCC"> call for</font>

71
00:03:55,910 --> 00:04:03,440
paper and<font color="#E5E5E5"> we submitted</font><font color="#CCCCCC"> a paper there</font><font color="#E5E5E5"> and</font>

72
00:03:59,560 --> 00:04:06,140
so we were very<font color="#E5E5E5"> lucky</font><font color="#CCCCCC"> to and very happy</font>

73
00:04:03,440 --> 00:04:09,230
<font color="#E5E5E5">to get in I mean we would not not</font>

74
00:04:06,140 --> 00:04:12,920
imagine if it were not for this call of

75
00:04:09,230 --> 00:04:14,690
paper would never have dared<font color="#E5E5E5"> to send our</font>

76
00:04:12,920 --> 00:04:18,409
work to a crypto conference because<font color="#E5E5E5"> we</font>

77
00:04:14,690 --> 00:04:20,540
<font color="#CCCCCC">were assuming maybe on people do serious</font>

78
00:04:18,410 --> 00:04:22,870
work there and maybe was<font color="#CCCCCC"> not for</font><font color="#E5E5E5"> us I</font>

79
00:04:20,540 --> 00:04:26,030
<font color="#E5E5E5">don't know</font><font color="#CCCCCC"> but so we were very</font><font color="#E5E5E5"> grateful</font>

80
00:04:22,870 --> 00:04:29,360
<font color="#CCCCCC">also to be given this opportunity and so</font>

81
00:04:26,030 --> 00:04:30,979
for us it<font color="#CCCCCC"> has been</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> pleasure to</font>

82
00:04:29,360 --> 00:04:33,680
interact<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> cryptic crypto</font>

83
00:04:30,980 --> 00:04:35,510
community for all this year<font color="#CCCCCC"> I'm saying</font>

84
00:04:33,680 --> 00:04:37,790
we all the time<font color="#CCCCCC"> and I haven't</font><font color="#E5E5E5"> really</font>

85
00:04:35,510 --> 00:04:41,150
given names<font color="#CCCCCC"> we've been working with a</font>

86
00:04:37,790 --> 00:04:44,300
<font color="#E5E5E5">lot of people mainly</font><font color="#CCCCCC"> in Spain France and</font>

87
00:04:41,150 --> 00:04:47,659
also<font color="#E5E5E5"> Portugal but it's also a lot of</font>

88
00:04:44,300 --> 00:04:49,310
collaborators<font color="#CCCCCC"> and I've been a bad guy I</font>

89
00:04:47,660 --> 00:04:54,460
didn't write<font color="#E5E5E5"> their names on the first</font>

90
00:04:49,310 --> 00:04:54,460
slide<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are many of them</font><font color="#CCCCCC"> ok good</font><font color="#E5E5E5"> so</font>

91
00:04:56,169 --> 00:05:02,150
the kind of<font color="#E5E5E5"> work which we had been doing</font>

92
00:04:58,940 --> 00:05:04,550
<font color="#E5E5E5">initially was more focused on what was</font>

93
00:05:02,150 --> 00:05:07,370
the initial<font color="#CCCCCC"> problem set in the paper by</font>

94
00:05:04,550 --> 00:05:10,280
Shai which was trying to come up<font color="#CCCCCC"> with</font>

95
00:05:07,370 --> 00:05:12,680
<font color="#CCCCCC">tools that helped cryptographers verify</font>

96
00:05:10,280 --> 00:05:15,469
that their proofs are correct so

97
00:05:12,680 --> 00:05:18,560
provable security proofs<font color="#E5E5E5"> but over the</font>

98
00:05:15,470 --> 00:05:20,419
<font color="#CCCCCC">years we've</font><font color="#E5E5E5"> kind of broaden the kind of</font>

99
00:05:18,560 --> 00:05:22,139
work which we have been doing trying to

100
00:05:20,419 --> 00:05:25,469
<font color="#E5E5E5">see every opportunity</font><font color="#CCCCCC"> of</font>

101
00:05:22,139 --> 00:05:27,270
<font color="#CCCCCC">- us - no I mean to apply what we know</font>

102
00:05:25,469 --> 00:05:30,259
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is like programming language and</font>

103
00:05:27,270 --> 00:05:33,448
program verification<font color="#CCCCCC"> in the setting of</font>

104
00:05:30,259 --> 00:05:35,189
<font color="#E5E5E5">cryptography and essentially if you try</font>

105
00:05:33,449 --> 00:05:37,650
to give a definition<font color="#E5E5E5"> to</font><font color="#CCCCCC"> computer-aided</font>

106
00:05:35,189 --> 00:05:39,539
<font color="#E5E5E5">cryptography you can think as a very</font>

107
00:05:37,650 --> 00:05:43,229
broad field where<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> to</font>

108
00:05:39,539 --> 00:05:46,159
develop<font color="#CCCCCC"> tool-assisted</font><font color="#E5E5E5"> methods for</font>

109
00:05:43,229 --> 00:05:48,539
designing<font color="#E5E5E5"> analyzing and implementing</font>

110
00:05:46,159 --> 00:05:52,710
<font color="#E5E5E5">cryptographic instruction and this</font>

111
00:05:48,539 --> 00:05:56,938
includes<font color="#E5E5E5"> both primitive and protocols</font>

112
00:05:52,710 --> 00:05:59,818
<font color="#E5E5E5">and essentially the methods that we</font><font color="#CCCCCC"> are</font>

113
00:05:56,939 --> 00:06:03,110
trying to<font color="#E5E5E5"> develop</font><font color="#CCCCCC"> they tend to be</font>

114
00:05:59,819 --> 00:06:06,449
principled<font color="#E5E5E5"> so they try to build on a</font>

115
00:06:03,110 --> 00:06:09,810
mathematically<font color="#E5E5E5"> rigorous approach</font><font color="#CCCCCC"> taking</font>

116
00:06:06,449 --> 00:06:16,289
inspiration from<font color="#E5E5E5"> logic which</font><font color="#CCCCCC"> is kind of</font>

117
00:06:09,810 --> 00:06:20,159
<font color="#E5E5E5">the place where I come from and there</font>

118
00:06:16,289 --> 00:06:22,680
are actually<font color="#E5E5E5"> many goals one where we</font>

119
00:06:20,159 --> 00:06:23,938
could consider<font color="#E5E5E5"> so for a long time</font><font color="#CCCCCC"> people</font>

120
00:06:22,680 --> 00:06:25,740
applying for more methods for

121
00:06:23,939 --> 00:06:29,400
<font color="#CCCCCC">cryptography that were working in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> so</font>

122
00:06:25,740 --> 00:06:32,460
<font color="#CCCCCC">called symbolic model and the symbolic</font>

123
00:06:29,400 --> 00:06:34,349
model<font color="#E5E5E5"> is a very</font><font color="#CCCCCC"> useful</font><font color="#E5E5E5"> because it</font>

124
00:06:32,460 --> 00:06:36,989
supports automated tools and these

125
00:06:34,349 --> 00:06:40,259
<font color="#E5E5E5">automated tools have been very good at</font>

126
00:06:36,990 --> 00:06:41,819
finding<font color="#E5E5E5"> very subtle flow in protocol so</font>

127
00:06:40,259 --> 00:06:46,399
this could<font color="#CCCCCC"> be or this has been</font>

128
00:06:41,819 --> 00:06:49,189
traditionally<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> main focus of</font>

129
00:06:46,399 --> 00:06:51,899
<font color="#E5E5E5">computer aided cryptography but</font>

130
00:06:49,189 --> 00:06:53,699
personally I'm also interested more than

131
00:06:51,899 --> 00:06:56,399
finding<font color="#E5E5E5"> attack trying to build proofs</font>

132
00:06:53,699 --> 00:06:58,639
and so on and there has been<font color="#CCCCCC"> a lot of</font>

133
00:06:56,399 --> 00:07:00,949
<font color="#E5E5E5">work as well in trying to build a</font>

134
00:06:58,639 --> 00:07:03,839
independently verifiable proof of

135
00:07:00,949 --> 00:07:07,770
computational security<font color="#CCCCCC"> so the basic idea</font>

136
00:07:03,839 --> 00:07:09,479
<font color="#CCCCCC">here is like if you have actually tools</font>

137
00:07:07,770 --> 00:07:12,448
<font color="#E5E5E5">who can check which can check</font>

138
00:07:09,479 --> 00:07:14,370
automatically<font color="#E5E5E5"> your proofs will be kind</font>

139
00:07:12,449 --> 00:07:16,349
of breaking the symmetry between

140
00:07:14,370 --> 00:07:19,050
<font color="#E5E5E5">building a proof and checking a proof</font>

141
00:07:16,349 --> 00:07:22,169
and so there will be less opportunities

142
00:07:19,050 --> 00:07:24,839
for<font color="#CCCCCC"> kind of having flaws in the proof</font>

143
00:07:22,169 --> 00:07:29,128
<font color="#CCCCCC">because the tool will check for</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> okay</font>

144
00:07:24,839 --> 00:07:31,589
<font color="#E5E5E5">and kind of more recent goal that we've</font>

145
00:07:29,129 --> 00:07:34,080
been looking at<font color="#E5E5E5"> our verified</font>

146
00:07:31,589 --> 00:07:35,630
implementation so you could think<font color="#E5E5E5"> that</font>

147
00:07:34,080 --> 00:07:38,210
<font color="#E5E5E5">coming from programming Lee</font>

148
00:07:35,630 --> 00:07:40,159
which verification and so on<font color="#E5E5E5"> this would</font>

149
00:07:38,210 --> 00:07:43,310
<font color="#E5E5E5">be the first thing people</font><font color="#CCCCCC"> would be</font>

150
00:07:40,160 --> 00:07:47,960
<font color="#E5E5E5">looking at but somehow ironically this</font>

151
00:07:43,310 --> 00:07:49,910
came a bit later and also maybe you<font color="#E5E5E5"> can</font>

152
00:07:47,960 --> 00:07:53,060
hope that<font color="#CCCCCC"> by using tool you</font><font color="#E5E5E5"> will not</font>

153
00:07:49,910 --> 00:07:55,820
only improve or fix what cryptographers

154
00:07:53,060 --> 00:07:59,540
have been doing but you can bring your

155
00:07:55,820 --> 00:08:01,580
own contribution<font color="#E5E5E5"> and</font><font color="#CCCCCC"> convert for</font><font color="#E5E5E5"> example</font>

156
00:07:59,540 --> 00:08:04,160
with a new cryptographic desire nor

157
00:08:01,580 --> 00:08:07,359
better implementation<font color="#E5E5E5"> and I hope I will</font>

158
00:08:04,160 --> 00:08:09,800
give you some examples where actually

159
00:08:07,360 --> 00:08:12,110
the fact of<font color="#E5E5E5"> using tools and this</font>

160
00:08:09,800 --> 00:08:16,750
<font color="#CCCCCC">principle method can actually shed some</font>

161
00:08:12,110 --> 00:08:19,400
light on problems that<font color="#E5E5E5"> were</font><font color="#CCCCCC"> not</font>

162
00:08:16,750 --> 00:08:21,650
necessarily<font color="#CCCCCC"> Wells of</font><font color="#E5E5E5"> being before so</font>

163
00:08:19,400 --> 00:08:24,349
kind of bringing forward the

164
00:08:21,650 --> 00:08:26,150
<font color="#CCCCCC">state-of-the-art cryptography and for</font>

165
00:08:24,350 --> 00:08:28,490
this<font color="#E5E5E5"> we'll be building on formal methods</font>

166
00:08:26,150 --> 00:08:31,580
which is an area which<font color="#CCCCCC"> has been very</font>

167
00:08:28,490 --> 00:08:34,490
active<font color="#CCCCCC"> for the last 40 or</font><font color="#E5E5E5"> 50 years and</font>

168
00:08:31,580 --> 00:08:40,218
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a huge field</font><font color="#E5E5E5"> and it focuses on a</font>

169
00:08:34,490 --> 00:08:42,770
<font color="#CCCCCC">lot of</font><font color="#E5E5E5"> different aspects essentially the</font>

170
00:08:40,219 --> 00:08:45,380
kind<font color="#E5E5E5"> of main goals have been to prove</font>

171
00:08:42,770 --> 00:08:48,350
that programs are correct so that<font color="#E5E5E5"> they</font>

172
00:08:45,380 --> 00:08:50,930
achieve their<font color="#E5E5E5"> stated purpose so this is</font>

173
00:08:48,350 --> 00:08:52,730
what program<font color="#CCCCCC"> verification is about but</font>

174
00:08:50,930 --> 00:08:54,530
there's also a lot of<font color="#E5E5E5"> work on program</font>

175
00:08:52,730 --> 00:08:57,980
<font color="#E5E5E5">analysis trying to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that</font>

176
00:08:54,530 --> 00:09:00,800
programs are safe<font color="#CCCCCC"> so</font><font color="#E5E5E5"> they don't have for</font>

177
00:08:57,980 --> 00:09:03,020
<font color="#CCCCCC">example a kind</font><font color="#E5E5E5"> of memory errors during</font>

178
00:09:00,800 --> 00:09:05,390
execution<font color="#CCCCCC"> which could be a serious</font>

179
00:09:03,020 --> 00:09:08,030
<font color="#CCCCCC">course of attack there's also a lot of</font>

180
00:09:05,390 --> 00:09:11,720
<font color="#E5E5E5">work on a compilation trying to optimize</font>

181
00:09:08,030 --> 00:09:14,870
the<font color="#E5E5E5"> kind of implementation</font><font color="#CCCCCC"> and come with</font>

182
00:09:11,720 --> 00:09:17,210
better implementation<font color="#E5E5E5"> there is a new</font>

183
00:09:14,870 --> 00:09:20,360
line of<font color="#CCCCCC"> work on program synthesis which</font>

184
00:09:17,210 --> 00:09:24,310
is<font color="#E5E5E5"> about generating automatically</font>

185
00:09:20,360 --> 00:09:26,630
programs that meet a certain<font color="#CCCCCC"> purpose and</font>

186
00:09:24,310 --> 00:09:28,670
for<font color="#E5E5E5"> example I'm</font><font color="#CCCCCC"> very excited about</font>

187
00:09:26,630 --> 00:09:30,500
application of program synthesis to

188
00:09:28,670 --> 00:09:33,680
cryptography<font color="#CCCCCC"> I will say a</font><font color="#E5E5E5"> few words</font>

189
00:09:30,500 --> 00:09:36,980
about<font color="#E5E5E5"> this during</font><font color="#CCCCCC"> my talk and so on so</font>

190
00:09:33,680 --> 00:09:40,880
<font color="#E5E5E5">essentially what we have is</font><font color="#CCCCCC"> like we</font><font color="#E5E5E5"> have</font>

191
00:09:36,980 --> 00:09:42,920
a huge corpus<font color="#E5E5E5"> of techniques which have</font>

192
00:09:40,880 --> 00:09:45,800
<font color="#CCCCCC">been developed</font><font color="#E5E5E5"> in a slightly different</font>

193
00:09:42,920 --> 00:09:48,650
setting but one thing which I find very

194
00:09:45,800 --> 00:09:49,130
exciting<font color="#E5E5E5"> is try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> take this corpus of</font>

195
00:09:48,650 --> 00:09:51,620
technique

196
00:09:49,130 --> 00:09:53,330
and apply them to<font color="#E5E5E5"> cryptography</font><font color="#CCCCCC"> I think</font>

197
00:09:51,620 --> 00:09:57,220
it is at<font color="#E5E5E5"> least for me it has been</font><font color="#CCCCCC"> a</font>

198
00:09:53,330 --> 00:10:00,590
great source of fun<font color="#CCCCCC"> and lots of very</font>

199
00:09:57,220 --> 00:10:05,030
exciting<font color="#CCCCCC"> problems</font><font color="#E5E5E5"> that we've been</font><font color="#CCCCCC"> able</font>

200
00:10:00,590 --> 00:10:06,830
<font color="#CCCCCC">to look at through this lens</font><font color="#E5E5E5"> okay so the</font>

201
00:10:05,030 --> 00:10:08,780
<font color="#E5E5E5">potential benefits it's actually</font>

202
00:10:06,830 --> 00:10:13,550
something which is good in both

203
00:10:08,780 --> 00:10:15,800
<font color="#CCCCCC">directions so essentially if you're able</font>

204
00:10:13,550 --> 00:10:17,719
<font color="#E5E5E5">to develop</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> formal methods for</font>

205
00:10:15,800 --> 00:10:22,640
cryptography<font color="#CCCCCC"> you can expect higher</font>

206
00:10:17,720 --> 00:10:25,130
assurance<font color="#E5E5E5"> which was originally stated in</font>

207
00:10:22,640 --> 00:10:28,460
<font color="#E5E5E5">the paper by say for example but I also</font>

208
00:10:25,130 --> 00:10:31,580
believe it will be very useful<font color="#CCCCCC"> to narrow</font>

209
00:10:28,460 --> 00:10:34,130
the gap<font color="#CCCCCC"> between a provable security and</font>

210
00:10:31,580 --> 00:10:37,940
crypto engineering<font color="#E5E5E5"> so there is some kind</font>

211
00:10:34,130 --> 00:10:41,660
of a trend<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think you can mostly coin</font>

212
00:10:37,940 --> 00:10:44,420
<font color="#CCCCCC">in under the world</font><font color="#E5E5E5"> real world the crypto</font>

213
00:10:41,660 --> 00:10:46,370
that<font color="#CCCCCC"> kami</font><font color="#E5E5E5"> and some other people have</font>

214
00:10:44,420 --> 00:10:48,620
<font color="#E5E5E5">been trying to develop come up with</font>

215
00:10:46,370 --> 00:10:51,800
<font color="#CCCCCC">security definition</font><font color="#E5E5E5"> that much more</font>

216
00:10:48,620 --> 00:10:54,380
closely<font color="#E5E5E5"> the reality</font><font color="#CCCCCC"> of implementation</font>

217
00:10:51,800 --> 00:10:56,770
<font color="#E5E5E5">and so on but as you do these things are</font>

218
00:10:54,380 --> 00:10:59,240
becoming more<font color="#CCCCCC"> and more complex</font><font color="#E5E5E5"> and</font>

219
00:10:56,770 --> 00:11:00,949
<font color="#E5E5E5">eventually so this is my belief people</font>

220
00:10:59,240 --> 00:11:03,200
might<font color="#CCCCCC"> disagree with</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> but I believe</font>

221
00:11:00,950 --> 00:11:05,270
<font color="#CCCCCC">that formal tool they give you some</font><font color="#E5E5E5"> kind</font>

222
00:11:03,200 --> 00:11:07,250
of bookkeeping and way to tame the

223
00:11:05,270 --> 00:11:10,069
complexity of proof and there will be

224
00:11:07,250 --> 00:11:12,980
<font color="#E5E5E5">really necessary if you really want to</font>

225
00:11:10,070 --> 00:11:15,010
end up<font color="#E5E5E5"> bridging the gap between security</font>

226
00:11:12,980 --> 00:11:18,530
<font color="#E5E5E5">proof and low level implementation</font>

227
00:11:15,010 --> 00:11:20,030
<font color="#E5E5E5">crypto engineering which tends</font><font color="#CCCCCC"> to worry</font>

228
00:11:18,530 --> 00:11:22,130
about let's say assembly level

229
00:11:20,030 --> 00:11:24,980
<font color="#E5E5E5">implementation and I don't</font><font color="#CCCCCC"> think you can</font>

230
00:11:22,130 --> 00:11:27,140
go the whole<font color="#E5E5E5"> way in between the two if</font>

231
00:11:24,980 --> 00:11:29,570
you<font color="#E5E5E5"> don't have tools to do this and as I</font>

232
00:11:27,140 --> 00:11:33,949
<font color="#E5E5E5">mentioned you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> also expect new proof</font>

233
00:11:29,570 --> 00:11:35,930
techniques<font color="#E5E5E5"> on the other hand so this is</font>

234
00:11:33,950 --> 00:11:37,730
the<font color="#E5E5E5"> kind of propaganda</font><font color="#CCCCCC"> saying yeah guys</font>

235
00:11:35,930 --> 00:11:39,530
I will save you and so on<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font>

236
00:11:37,730 --> 00:11:44,140
whether<font color="#E5E5E5"> I believe in this very much or</font>

237
00:11:39,530 --> 00:11:46,670
not<font color="#CCCCCC"> but also for me kind of applying</font>

238
00:11:44,140 --> 00:11:49,250
<font color="#E5E5E5">formal methods for</font><font color="#CCCCCC"> cryptography has</font><font color="#E5E5E5"> been</font>

239
00:11:46,670 --> 00:11:51,949
a<font color="#E5E5E5"> great great source of example we got</font>

240
00:11:49,250 --> 00:11:57,080
lots of very<font color="#CCCCCC"> challenging example very</font>

241
00:11:51,950 --> 00:12:00,140
nice problems to<font color="#CCCCCC"> think about and</font><font color="#E5E5E5"> also it</font>

242
00:11:57,080 --> 00:12:01,910
<font color="#E5E5E5">helped us develop kind of new</font>

243
00:12:00,140 --> 00:12:05,210
theory for programming language

244
00:12:01,910 --> 00:12:07,640
verification<font color="#E5E5E5"> and so on so we also get</font><font color="#CCCCCC"> a</font>

245
00:12:05,210 --> 00:12:10,310
lot<font color="#E5E5E5"> from this so a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> fun but</font><font color="#CCCCCC"> also</font>

246
00:12:07,640 --> 00:12:14,600
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> new interesting theoretical</font>

247
00:12:10,310 --> 00:12:17,420
challenge to look at<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and so here is</font>

248
00:12:14,600 --> 00:12:20,690
a kind of<font color="#CCCCCC"> long term goal</font><font color="#E5E5E5"> of computer</font>

249
00:12:17,420 --> 00:12:24,560
aided<font color="#E5E5E5"> cryptography so I will not make a</font>

250
00:12:20,690 --> 00:12:27,590
bet of<font color="#E5E5E5"> what I mean</font><font color="#CCCCCC"> by long term my</font>

251
00:12:24,560 --> 00:12:30,349
supervisor<font color="#E5E5E5"> was looking at a formal</font>

252
00:12:27,590 --> 00:12:33,500
verification of mathematics<font color="#E5E5E5"> made a</font><font color="#CCCCCC"> bet</font>

253
00:12:30,350 --> 00:12:35,270
to me<font color="#E5E5E5"> many many years</font><font color="#CCCCCC"> ago about when</font>

254
00:12:33,500 --> 00:12:38,000
mathematician will be using proof

255
00:12:35,270 --> 00:12:40,880
assistant to verify the theorem and I

256
00:12:38,000 --> 00:12:43,430
think he's on his<font color="#CCCCCC"> way to lose his bed</font>

257
00:12:40,880 --> 00:12:45,470
<font color="#CCCCCC">there are not 25 more years to go but I</font>

258
00:12:43,430 --> 00:12:48,260
don't<font color="#CCCCCC"> think it will make it</font><font color="#E5E5E5"> so I won't</font>

259
00:12:45,470 --> 00:12:52,220
<font color="#E5E5E5">make any bet</font><font color="#CCCCCC"> but here is a kind of</font>

260
00:12:48,260 --> 00:12:55,700
ideally where we could try<font color="#E5E5E5"> to go okay so</font>

261
00:12:52,220 --> 00:12:58,160
this is<font color="#CCCCCC"> kind of a reduction is proof and</font>

262
00:12:55,700 --> 00:13:01,840
this reduction is proof is trying to

263
00:12:58,160 --> 00:13:05,870
show<font color="#CCCCCC"> that assembly</font><font color="#E5E5E5"> level implementation</font>

264
00:13:01,840 --> 00:13:08,360
<font color="#E5E5E5">is a secure and</font><font color="#CCCCCC"> so what you're</font><font color="#E5E5E5"> going to</font>

265
00:13:05,870 --> 00:13:10,970
show is like if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have an adversary</font>

266
00:13:08,360 --> 00:13:13,610
<font color="#CCCCCC">that breaks this assembly code</font><font color="#E5E5E5"> then you</font>

267
00:13:10,970 --> 00:13:16,940
can build an adversary that<font color="#E5E5E5"> breaks the</font>

268
00:13:13,610 --> 00:13:19,250
design<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so this is kind of</font><font color="#E5E5E5"> a</font>

269
00:13:16,940 --> 00:13:21,980
reduction<font color="#E5E5E5"> statement and you expect that</font>

270
00:13:19,250 --> 00:13:23,450
with provable security<font color="#CCCCCC"> you show that</font>

271
00:13:21,980 --> 00:13:25,970
there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> no adversary that breaks the</font>

272
00:13:23,450 --> 00:13:27,920
algorithm so you would be done<font color="#E5E5E5"> except</font>

273
00:13:25,970 --> 00:13:31,160
<font color="#E5E5E5">that in the middle you have to throw in</font>

274
00:13:27,920 --> 00:13:32,870
two assumptions<font color="#E5E5E5"> that will actually be</font>

275
00:13:31,160 --> 00:13:36,829
handled<font color="#CCCCCC"> using</font><font color="#E5E5E5"> programming language</font>

276
00:13:32,870 --> 00:13:39,140
techniques one is<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

277
00:13:36,830 --> 00:13:42,110
assembly code is<font color="#E5E5E5"> kind of good quality</font>

278
00:13:39,140 --> 00:13:45,110
<font color="#E5E5E5">I'm not going to specify very much but</font>

279
00:13:42,110 --> 00:13:48,020
let's say it has to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> safe so it has to</font>

280
00:13:45,110 --> 00:13:51,590
respect some kind of programming

281
00:13:48,020 --> 00:13:53,630
discipline that doesn't make bad<font color="#CCCCCC"> things</font>

282
00:13:51,590 --> 00:13:56,780
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it has to be leakage</font>

283
00:13:53,630 --> 00:13:58,550
resistant<font color="#CCCCCC"> I will give an example of what</font>

284
00:13:56,780 --> 00:14:01,520
I mean<font color="#CCCCCC"> by</font><font color="#E5E5E5"> leakage resistant this is by</font>

285
00:13:58,550 --> 00:14:04,010
<font color="#E5E5E5">no means the only definition but this</font>

286
00:14:01,520 --> 00:14:06,650
would be<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> goal and the second</font>

287
00:14:04,010 --> 00:14:09,110
goal is that<font color="#E5E5E5"> the assembly</font><font color="#CCCCCC"> code correctly</font>

288
00:14:06,650 --> 00:14:12,770
implements the algorithm<font color="#E5E5E5"> so the assembly</font>

289
00:14:09,110 --> 00:14:13,459
called<font color="#E5E5E5"> meets its intent</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and so if</font>

290
00:14:12,770 --> 00:14:16,670
you manage<font color="#CCCCCC"> to</font>

291
00:14:13,459 --> 00:14:18,949
this<font color="#E5E5E5"> essentially this is what</font><font color="#CCCCCC"> I meant</font><font color="#E5E5E5"> by</font>

292
00:14:16,670 --> 00:14:22,339
<font color="#E5E5E5">closing the gap between provable</font>

293
00:14:18,949 --> 00:14:23,990
security and implementation<font color="#E5E5E5"> and so for</font>

294
00:14:22,339 --> 00:14:25,699
the<font color="#E5E5E5"> first thing assembly</font><font color="#CCCCCC"> called is safe</font>

295
00:14:23,990 --> 00:14:29,059
and leakage resistance you<font color="#CCCCCC"> can try to</font>

296
00:14:25,699 --> 00:14:31,969
use<font color="#E5E5E5"> program analysis which is actually</font>

297
00:14:29,059 --> 00:14:34,550
what<font color="#E5E5E5"> tries to achieve this kind of</font>

298
00:14:31,970 --> 00:14:36,769
<font color="#E5E5E5">property and for the second step</font>

299
00:14:34,550 --> 00:14:38,540
<font color="#E5E5E5">assembly code correctly implements the</font>

300
00:14:36,769 --> 00:14:42,529
algorithm<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use program</font>

301
00:14:38,540 --> 00:14:44,839
verification<font color="#CCCCCC"> and also verified</font>

302
00:14:42,529 --> 00:14:47,660
compilation so verify compilation is a

303
00:14:44,839 --> 00:14:50,929
kind of new line of research which tries

304
00:14:47,660 --> 00:14:54,679
to<font color="#CCCCCC"> show that a compiler preserves the</font>

305
00:14:50,929 --> 00:14:59,959
functionality<font color="#CCCCCC"> of programs okay</font><font color="#E5E5E5"> so that</font>

306
00:14:54,679 --> 00:15:03,019
would<font color="#E5E5E5"> be really cool to</font><font color="#CCCCCC"> get there there</font>

307
00:14:59,959 --> 00:15:06,768
are<font color="#E5E5E5"> many challenges</font><font color="#CCCCCC"> of course so it's</font>

308
00:15:03,019 --> 00:15:10,879
not for<font color="#E5E5E5"> tomorrow</font><font color="#CCCCCC"> a first</font><font color="#E5E5E5"> challenge is to</font>

309
00:15:06,769 --> 00:15:12,769
build<font color="#E5E5E5"> models so there's a first problem</font>

310
00:15:10,879 --> 00:15:17,350
which has nothing<font color="#CCCCCC"> to do with</font><font color="#E5E5E5"> crypto</font>

311
00:15:12,769 --> 00:15:20,569
<font color="#E5E5E5">which is that building models of</font>

312
00:15:17,350 --> 00:15:22,670
execution platform is actually<font color="#CCCCCC"> a very</font>

313
00:15:20,569 --> 00:15:27,319
<font color="#E5E5E5">big challenge</font><font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> really try to</font>

314
00:15:22,670 --> 00:15:30,429
give a semantics of x86 or arm and so on

315
00:15:27,319 --> 00:15:33,649
this<font color="#E5E5E5"> is kind of a big mess</font><font color="#CCCCCC"> so already</font>

316
00:15:30,429 --> 00:15:36,079
<font color="#E5E5E5">trying to specify</font><font color="#CCCCCC"> this is something</font>

317
00:15:33,649 --> 00:15:38,869
which is<font color="#CCCCCC"> very hard</font><font color="#E5E5E5"> and I'm just talking</font>

318
00:15:36,079 --> 00:15:42,410
about the functional behavior<font color="#E5E5E5"> like I</font>

319
00:15:38,869 --> 00:15:44,839
give you an x86 program for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> your</font>

320
00:15:42,410 --> 00:15:49,600
I<font color="#E5E5E5"> ran it on the platform which result do</font>

321
00:15:44,839 --> 00:15:52,579
you expect<font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> fairly</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> ok</font>

322
00:15:49,600 --> 00:15:55,309
<font color="#E5E5E5">second problem we're talking</font><font color="#CCCCCC"> about the</font>

323
00:15:52,579 --> 00:15:58,399
leakage resistance<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you really have to</font>

324
00:15:55,309 --> 00:16:00,740
<font color="#CCCCCC">build models of leakage which is</font><font color="#E5E5E5"> also</font>

325
00:15:58,399 --> 00:16:04,089
extra<font color="#CCCCCC"> hard there are some people</font><font color="#E5E5E5"> working</font>

326
00:16:00,740 --> 00:16:07,730
<font color="#E5E5E5">on this and but this is something that</font>

327
00:16:04,089 --> 00:16:10,309
needs more<font color="#E5E5E5"> research</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> other</font>

328
00:16:07,730 --> 00:16:13,069
problem<font color="#E5E5E5"> is really being able to come up</font>

329
00:16:10,309 --> 00:16:14,509
<font color="#CCCCCC">with a realistic model of adversary</font><font color="#E5E5E5"> so</font>

330
00:16:13,069 --> 00:16:17,660
as I mentioned this<font color="#E5E5E5"> is something that</font>

331
00:16:14,509 --> 00:16:20,269
<font color="#E5E5E5">the real world crypto tries</font><font color="#CCCCCC"> to do to a</font>

332
00:16:17,660 --> 00:16:20,868
<font color="#E5E5E5">certain extent but there is more work</font><font color="#CCCCCC"> to</font>

333
00:16:20,269 --> 00:16:23,929
be<font color="#CCCCCC"> done</font>

334
00:16:20,869 --> 00:16:26,179
so more both at the algorithmic<font color="#E5E5E5"> level</font>

335
00:16:23,929 --> 00:16:26,750
<font color="#E5E5E5">which is essentially where real world</font>

336
00:16:26,179 --> 00:16:29,420
crypto

337
00:16:26,750 --> 00:16:32,150
is a kind of trying<font color="#CCCCCC"> to look but also</font>

338
00:16:29,420 --> 00:16:36,589
<font color="#E5E5E5">what it does it mean to be an adversary</font>

339
00:16:32,150 --> 00:16:39,050
<font color="#E5E5E5">when you are</font><font color="#CCCCCC"> executing on the platform</font>

340
00:16:36,590 --> 00:16:40,970
<font color="#E5E5E5">so there has been some</font><font color="#CCCCCC"> work on this</font>

341
00:16:39,050 --> 00:16:43,040
direction<font color="#CCCCCC"> so let's say for example</font>

342
00:16:40,970 --> 00:16:44,840
you're considering<font color="#E5E5E5"> a virtualized</font>

343
00:16:43,040 --> 00:16:47,000
platform where the adversary<font color="#CCCCCC"> is</font>

344
00:16:44,840 --> 00:16:48,920
executing in some other partition and so

345
00:16:47,000 --> 00:16:51,610
on<font color="#E5E5E5"> so there</font><font color="#CCCCCC"> are some workers in this</font>

346
00:16:48,920 --> 00:16:56,599
<font color="#E5E5E5">direction but they are</font><font color="#CCCCCC"> very preliminary</font>

347
00:16:51,610 --> 00:17:00,230
<font color="#CCCCCC">a second problem is</font><font color="#E5E5E5"> that you know if you</font>

348
00:16:56,600 --> 00:17:04,400
want<font color="#E5E5E5"> to verify this you actually</font><font color="#CCCCCC"> need to</font>

349
00:17:00,230 --> 00:17:08,209
have candidate libraries to verify so

350
00:17:04,400 --> 00:17:10,610
you need<font color="#E5E5E5"> good efficient code that ends</font>

351
00:17:08,209 --> 00:17:14,270
<font color="#CCCCCC">up</font><font color="#E5E5E5"> being safe and leakage resistance so</font>

352
00:17:10,609 --> 00:17:20,688
this<font color="#CCCCCC"> is also</font><font color="#E5E5E5"> something that is</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> hard</font>

353
00:17:14,270 --> 00:17:23,290
<font color="#E5E5E5">to come with today I'm not aware of</font>

354
00:17:20,689 --> 00:17:26,180
everything<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is going on in a kind of</font>

355
00:17:23,290 --> 00:17:31,370
crypto libraries<font color="#E5E5E5"> but there is no</font>

356
00:17:26,180 --> 00:17:34,400
immediate candidate for verification<font color="#CCCCCC"> I</font>

357
00:17:31,370 --> 00:17:36,110
mean it<font color="#E5E5E5"> steals this libraries need to be</font>

358
00:17:34,400 --> 00:17:38,690
built<font color="#E5E5E5"> and of course this is a huge</font>

359
00:17:36,110 --> 00:17:43,070
<font color="#CCCCCC">challenge for</font><font color="#E5E5E5"> formal methods we need to</font>

360
00:17:38,690 --> 00:17:45,440
kind<font color="#E5E5E5"> of develop kind of new theory and</font>

361
00:17:43,070 --> 00:17:49,480
there's a lot<font color="#E5E5E5"> of engineering</font><font color="#CCCCCC"> to be able</font>

362
00:17:45,440 --> 00:17:52,670
<font color="#CCCCCC">to get all these pieces</font><font color="#E5E5E5"> fit together so</font>

363
00:17:49,480 --> 00:17:55,190
on the other hand the situation is not

364
00:17:52,670 --> 00:17:58,220
hopeless<font color="#E5E5E5"> because there's a lot of work</font>

365
00:17:55,190 --> 00:18:01,420
which has been<font color="#E5E5E5"> going on in this area so</font>

366
00:17:58,220 --> 00:18:04,310
as I mentioned and<font color="#CCCCCC"> maybe somewhat</font>

367
00:18:01,420 --> 00:18:08,290
ironically most<font color="#E5E5E5"> of the work has been</font>

368
00:18:04,310 --> 00:18:11,230
focusing on<font color="#E5E5E5"> kind of security rather than</font>

369
00:18:08,290 --> 00:18:13,760
areas were formal methods have been

370
00:18:11,230 --> 00:18:17,690
<font color="#CCCCCC">traditionally applied</font><font color="#E5E5E5"> to so there's a</font>

371
00:18:13,760 --> 00:18:20,180
lot<font color="#E5E5E5"> of work in trying to</font><font color="#CCCCCC"> build tools for</font>

372
00:18:17,690 --> 00:18:23,000
checking security<font color="#E5E5E5"> in the symbolic and</font>

373
00:18:20,180 --> 00:18:25,220
the computational<font color="#CCCCCC"> model</font><font color="#E5E5E5"> we've been</font>

374
00:18:23,000 --> 00:18:29,270
working on a tool called<font color="#CCCCCC"> easy crypt</font>

375
00:18:25,220 --> 00:18:31,730
which<font color="#E5E5E5"> I will be describing shortly but</font>

376
00:18:29,270 --> 00:18:33,830
there are many other tools<font color="#CCCCCC"> there's an</font>

377
00:18:31,730 --> 00:18:36,890
<font color="#E5E5E5">increasing number of tools</font><font color="#CCCCCC"> that focus on</font>

378
00:18:33,830 --> 00:18:39,620
side channel analysis I'm mentioning

379
00:18:36,890 --> 00:18:42,289
here<font color="#E5E5E5"> two kinds of tools</font>

380
00:18:39,620 --> 00:18:44,600
that are focusing on a constant time

381
00:18:42,289 --> 00:18:49,129
verification constant<font color="#E5E5E5"> time cryptography</font>

382
00:18:44,600 --> 00:18:52,399
so try to avoid<font color="#CCCCCC"> cash base the timing</font>

383
00:18:49,130 --> 00:18:55,250
side channels<font color="#E5E5E5"> and there's a second kind</font>

384
00:18:52,400 --> 00:18:58,760
of tool<font color="#CCCCCC"> which is kind</font><font color="#E5E5E5"> of more focusing</font>

385
00:18:55,250 --> 00:19:01,970
about<font color="#E5E5E5"> a</font><font color="#CCCCCC"> masked implementation kind of</font>

386
00:18:58,760 --> 00:19:04,640
protection against<font color="#E5E5E5"> EPA attacks so I will</font>

387
00:19:01,970 --> 00:19:08,900
present briefly<font color="#E5E5E5"> two of these tools as</font>

388
00:19:04,640 --> 00:19:11,450
<font color="#E5E5E5">well</font><font color="#CCCCCC"> there's also</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> work on analyzing</font>

389
00:19:08,900 --> 00:19:14,470
<font color="#E5E5E5">for safety so the</font><font color="#CCCCCC"> trust in self analyzer</font>

390
00:19:11,450 --> 00:19:17,929
which has been applied<font color="#CCCCCC"> to some TLS</font>

391
00:19:14,470 --> 00:19:19,789
implementation<font color="#CCCCCC"> there is some work on</font>

392
00:19:17,929 --> 00:19:22,029
functional correctness<font color="#E5E5E5"> so functional</font>

393
00:19:19,789 --> 00:19:25,309
correctness is also very important<font color="#E5E5E5"> for</font>

394
00:19:22,029 --> 00:19:27,830
<font color="#E5E5E5">security it's any time you have</font><font color="#CCCCCC"> a very</font>

395
00:19:25,309 --> 00:19:29,840
stupid<font color="#E5E5E5"> bug like a carry bag it can lead</font>

396
00:19:27,830 --> 00:19:32,510
to an attack so this is also<font color="#E5E5E5"> something</font>

397
00:19:29,840 --> 00:19:35,480
which is<font color="#E5E5E5"> very important and there are</font>

398
00:19:32,510 --> 00:19:37,070
<font color="#E5E5E5">some tools there so there's a crypto</font>

399
00:19:35,480 --> 00:19:39,529
which has been developed<font color="#E5E5E5"> by Galois</font>

400
00:19:37,070 --> 00:19:42,320
<font color="#E5E5E5">there's a number</font><font color="#CCCCCC"> of tools which kind of</font>

401
00:19:39,529 --> 00:19:46,370
leverage<font color="#E5E5E5"> proof assistant that</font><font color="#CCCCCC"> certify</font>

402
00:19:42,320 --> 00:19:48,500
compiler in particular<font color="#E5E5E5"> this concert VST</font>

403
00:19:46,370 --> 00:19:49,428
<font color="#E5E5E5">tool chain developer so concert is</font>

404
00:19:48,500 --> 00:19:52,820
<font color="#CCCCCC">developed in real</font>

405
00:19:49,429 --> 00:19:57,409
VST is developed at Princeton<font color="#CCCCCC"> there is</font>

406
00:19:52,820 --> 00:20:00,889
this tool called<font color="#E5E5E5"> G of the reef</font><font color="#CCCCCC"> and there</font>

407
00:19:57,409 --> 00:20:04,360
is also<font color="#E5E5E5"> a kind of parallel line of work</font>

408
00:20:00,890 --> 00:20:07,940
which tries<font color="#CCCCCC"> to kind</font><font color="#E5E5E5"> of develop principle</font>

409
00:20:04,360 --> 00:20:09,770
implementation so chasm and boring<font color="#E5E5E5"> SSL</font>

410
00:20:07,940 --> 00:20:13,940
there's a lot of work that<font color="#E5E5E5"> has taken</font>

411
00:20:09,770 --> 00:20:17,720
place<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> I think mostly</font><font color="#E5E5E5"> at John</font>

412
00:20:13,940 --> 00:20:21,200
Hopkins University<font color="#E5E5E5"> trying to mix formal</font>

413
00:20:17,720 --> 00:20:23,179
<font color="#E5E5E5">methods and cryptographic engineering so</font>

414
00:20:21,200 --> 00:20:25,370
there's a lot<font color="#E5E5E5"> of tools</font><font color="#CCCCCC"> that have been</font>

415
00:20:23,179 --> 00:20:27,860
<font color="#E5E5E5">developed</font><font color="#CCCCCC"> and published at CCS about the</font>

416
00:20:25,370 --> 00:20:32,629
<font color="#E5E5E5">years so there's a lot of work</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

417
00:20:27,860 --> 00:20:36,020
<font color="#CCCCCC">going on no I mean I think this works</font>

418
00:20:32,630 --> 00:20:38,570
<font color="#E5E5E5">have led</font><font color="#CCCCCC"> to very promising result I</font>

419
00:20:36,020 --> 00:20:41,029
<font color="#E5E5E5">would not say</font><font color="#CCCCCC"> that in</font><font color="#E5E5E5"> isolation</font><font color="#CCCCCC"> any of</font>

420
00:20:38,570 --> 00:20:42,500
the problem has<font color="#CCCCCC"> been solved</font><font color="#E5E5E5"> but we're</font>

421
00:20:41,029 --> 00:20:45,440
going<font color="#E5E5E5"> in the right direction what</font><font color="#CCCCCC"> is</font>

422
00:20:42,500 --> 00:20:49,610
slightly more new is kind of integrating

423
00:20:45,440 --> 00:20:51,890
<font color="#E5E5E5">this tool and there has</font><font color="#CCCCCC"> been a very</font><font color="#E5E5E5"> few</font>

424
00:20:49,610 --> 00:20:52,908
case study that<font color="#E5E5E5"> so that to a certain</font>

425
00:20:51,890 --> 00:20:56,960
<font color="#CCCCCC">extent you can</font>

426
00:20:52,909 --> 00:21:01,700
actually makes this direction<font color="#E5E5E5"> so last</font>

427
00:20:56,960 --> 00:21:05,749
<font color="#E5E5E5">year we did some work with my friends in</font>

428
00:21:01,700 --> 00:21:11,109
Portugal and colleague in Spain where we

429
00:21:05,749 --> 00:21:14,509
looked<font color="#E5E5E5"> at an</font><font color="#CCCCCC"> implementation of a small</font>

430
00:21:11,109 --> 00:21:17,239
component<font color="#E5E5E5"> of TLS so we built our own</font>

431
00:21:14,509 --> 00:21:19,220
implementation<font color="#E5E5E5"> stemming from the</font><font color="#CCCCCC"> fact</font>

432
00:21:17,239 --> 00:21:22,099
that<font color="#E5E5E5"> first of all it makes verification</font>

433
00:21:19,220 --> 00:21:24,609
simpler and<font color="#E5E5E5"> also it's not clear whether</font>

434
00:21:22,099 --> 00:21:28,849
there is<font color="#E5E5E5"> a kind of good implementation</font>

435
00:21:24,609 --> 00:21:31,699
<font color="#E5E5E5">available to start with and so</font><font color="#CCCCCC"> what we</font>

436
00:21:28,849 --> 00:21:35,330
did<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually looked at all</font>

437
00:21:31,700 --> 00:21:38,950
aspects so we had a security proof using

438
00:21:35,330 --> 00:21:43,189
<font color="#CCCCCC">easy crypt so standard</font><font color="#E5E5E5"> style of provable</font>

439
00:21:38,950 --> 00:21:45,549
security<font color="#E5E5E5"> and then we just had our C</font>

440
00:21:43,190 --> 00:21:48,200
<font color="#CCCCCC">implementation which we showed</font>

441
00:21:45,549 --> 00:21:52,158
functionally equivalent<font color="#CCCCCC"> our</font><font color="#E5E5E5"> easy crypt</font>

442
00:21:48,200 --> 00:21:55,429
specification<font color="#E5E5E5"> and then we compiled the C</font>

443
00:21:52,159 --> 00:21:58,249
implementation<font color="#E5E5E5"> using concert so this is</font>

444
00:21:55,429 --> 00:22:01,999
<font color="#E5E5E5">actually what gave</font><font color="#CCCCCC"> us this result which</font>

445
00:21:58,249 --> 00:22:04,340
I mentioned that the generated<font color="#E5E5E5"> assembly</font>

446
00:22:01,999 --> 00:22:08,570
code as<font color="#CCCCCC"> the same behavior as what we had</font>

447
00:22:04,340 --> 00:22:10,999
in<font color="#CCCCCC"> easy crypt and then we had a type</font>

448
00:22:08,570 --> 00:22:13,220
system for verifying<font color="#CCCCCC"> that the</font>

449
00:22:10,999 --> 00:22:18,080
implementation<font color="#E5E5E5"> is a cryptography</font>

450
00:22:13,220 --> 00:22:21,259
constant time<font color="#CCCCCC"> so this way</font><font color="#E5E5E5"> we handled the</font>

451
00:22:18,080 --> 00:22:23,899
side<font color="#E5E5E5"> channel analysis and so this is a</font>

452
00:22:21,259 --> 00:22:25,940
very small<font color="#CCCCCC"> example but</font><font color="#E5E5E5"> it shows that</font>

453
00:22:23,899 --> 00:22:27,830
<font color="#E5E5E5">everything can</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> done together</font><font color="#CCCCCC"> at least</font>

454
00:22:25,940 --> 00:22:29,869
on<font color="#CCCCCC"> the small</font><font color="#E5E5E5"> example and there are some</font>

455
00:22:27,830 --> 00:22:32,928
other example we had<font color="#CCCCCC"> previously done</font>

456
00:22:29,869 --> 00:22:34,699
some work on<font color="#CCCCCC"> KC yes people at</font><font color="#E5E5E5"> the</font>

457
00:22:32,929 --> 00:22:38,450
Princeton<font color="#CCCCCC"> and Harvard have been doing</font>

458
00:22:34,700 --> 00:22:39,619
some work<font color="#CCCCCC"> on H</font><font color="#E5E5E5"> mark although for example</font>

459
00:22:38,450 --> 00:22:42,379
in this case<font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't look at</font>

460
00:22:39,619 --> 00:22:45,769
side-channel<font color="#CCCCCC"> there is a some work on</font>

461
00:22:42,379 --> 00:22:50,029
<font color="#CCCCCC">Huckle star which is being done</font><font color="#E5E5E5"> here in</font>

462
00:22:45,769 --> 00:22:52,940
Paris at<font color="#CCCCCC"> INRIA which focuses on</font>

463
00:22:50,029 --> 00:22:56,989
functional<font color="#E5E5E5"> correctness and</font><font color="#CCCCCC"> side-channel</font>

464
00:22:52,940 --> 00:22:58,429
<font color="#CCCCCC">resistance</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> the work on</font><font color="#E5E5E5"> TLS so</font>

465
00:22:56,989 --> 00:23:01,759
there's a lot of<font color="#E5E5E5"> work that tries to</font>

466
00:22:58,429 --> 00:23:04,429
<font color="#E5E5E5">combine different of these aspects</font>

467
00:23:01,759 --> 00:23:06,260
<font color="#E5E5E5">together so in the I mean in the end</font>

468
00:23:04,429 --> 00:23:11,110
<font color="#CCCCCC">it's a</font><font color="#E5E5E5"> long term goal</font>

469
00:23:06,260 --> 00:23:14,750
but I hope<font color="#E5E5E5"> it's not a crazily long term</font>

470
00:23:11,110 --> 00:23:17,360
so the tool which we are using for<font color="#E5E5E5"> doing</font>

471
00:23:14,750 --> 00:23:21,860
this first<font color="#E5E5E5"> step of</font><font color="#CCCCCC"> the proof</font><font color="#E5E5E5"> is I call</font>

472
00:23:17,360 --> 00:23:23,389
easy<font color="#E5E5E5"> crypt and you can think about it as</font>

473
00:23:21,860 --> 00:23:25,310
a<font color="#E5E5E5"> kind of domain-specific proof</font>

474
00:23:23,390 --> 00:23:27,770
<font color="#CCCCCC">assistance so there are lots of tool for</font>

475
00:23:25,310 --> 00:23:30,620
reasoning<font color="#E5E5E5"> about mathematics reasoning</font>

476
00:23:27,770 --> 00:23:32,930
<font color="#E5E5E5">about program</font><font color="#CCCCCC"> we built our own tool and</font>

477
00:23:30,620 --> 00:23:35,540
we beat our own tool because we wanted

478
00:23:32,930 --> 00:23:37,700
our proof goals<font color="#CCCCCC"> tailored to reduction is</font>

479
00:23:35,540 --> 00:23:40,070
proof<font color="#E5E5E5"> so reduction is proof they</font><font color="#CCCCCC"> have a</font>

480
00:23:37,700 --> 00:23:41,900
kind<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> flavor from standard</font>

481
00:23:40,070 --> 00:23:44,179
program verification<font color="#CCCCCC"> because when you do</font>

482
00:23:41,900 --> 00:23:46,520
program<font color="#CCCCCC"> verification</font><font color="#E5E5E5"> you reason about</font>

483
00:23:44,180 --> 00:23:48,260
one program at the time<font color="#E5E5E5"> when you do</font>

484
00:23:46,520 --> 00:23:50,570
reduction is proof in<font color="#E5E5E5"> this game hoping</font>

485
00:23:48,260 --> 00:23:53,300
style in general<font color="#E5E5E5"> you have to</font><font color="#CCCCCC"> progress</font>

486
00:23:50,570 --> 00:23:55,429
<font color="#E5E5E5">the experiment and the goal is</font><font color="#CCCCCC"> to relate</font>

487
00:23:53,300 --> 00:23:58,159
this to probabilistic<font color="#E5E5E5"> experiments so</font>

488
00:23:55,430 --> 00:24:01,340
this is a something<font color="#CCCCCC"> which has became</font>

489
00:23:58,160 --> 00:24:02,870
known as a relational verification<font color="#E5E5E5"> you</font>

490
00:24:01,340 --> 00:24:05,780
have to<font color="#E5E5E5"> reason about two programs</font><font color="#CCCCCC"> at the</font>

491
00:24:02,870 --> 00:24:08,030
<font color="#E5E5E5">same time and these two programs are</font>

492
00:24:05,780 --> 00:24:09,379
probabilistic<font color="#E5E5E5"> which is also</font><font color="#CCCCCC"> been new</font>

493
00:24:08,030 --> 00:24:11,660
from the point of<font color="#E5E5E5"> view</font><font color="#CCCCCC"> of program</font>

494
00:24:09,380 --> 00:24:13,870
verification<font color="#CCCCCC"> so we decided it would be</font>

495
00:24:11,660 --> 00:24:18,500
better to<font color="#E5E5E5"> come up with our own tool and</font>

496
00:24:13,870 --> 00:24:20,570
so our tool<font color="#CCCCCC"> is the kind of supporting</font>

497
00:24:18,500 --> 00:24:22,880
many common proof techniques that are

498
00:24:20,570 --> 00:24:25,220
used<font color="#CCCCCC"> in crypto</font><font color="#E5E5E5"> so like especially in</font>

499
00:24:22,880 --> 00:24:27,230
this<font color="#CCCCCC"> cost based game playing approach so</font>

500
00:24:25,220 --> 00:24:29,510
we<font color="#E5E5E5"> have this</font><font color="#CCCCCC"> Britax terrorism and</font>

501
00:24:27,230 --> 00:24:32,570
hybrids argument hieger sampling and so

502
00:24:29,510 --> 00:24:35,990
on<font color="#E5E5E5"> and we have support for all</font><font color="#CCCCCC"> of those</font>

503
00:24:32,570 --> 00:24:38,570
and<font color="#CCCCCC"> the kind of key philosophy in what</font>

504
00:24:35,990 --> 00:24:40,910
we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do is like the proofs</font>

505
00:24:38,570 --> 00:24:43,909
that<font color="#E5E5E5"> you guys are doing are not</font><font color="#CCCCCC"> that</font>

506
00:24:40,910 --> 00:24:46,670
<font color="#E5E5E5">easy so</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> to think</font><font color="#E5E5E5"> that one</font>

507
00:24:43,910 --> 00:24:48,620
day<font color="#E5E5E5"> there will be one tool that</font><font color="#CCCCCC"> you push</font>

508
00:24:46,670 --> 00:24:51,770
button<font color="#CCCCCC"> and you get fully automated proof</font>

509
00:24:48,620 --> 00:24:54,379
<font color="#CCCCCC">or any kind of statement</font><font color="#E5E5E5"> you give so at</font>

510
00:24:51,770 --> 00:24:58,190
this point<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very important to have</font>

511
00:24:54,380 --> 00:25:01,550
<font color="#CCCCCC">very good control as a user on the tool</font>

512
00:24:58,190 --> 00:25:03,200
and<font color="#CCCCCC"> you will try to guide the tool to</font>

513
00:25:01,550 --> 00:25:05,750
build<font color="#E5E5E5"> a proof for you so this is</font><font color="#CCCCCC"> what we</font>

514
00:25:03,200 --> 00:25:08,420
are trying<font color="#CCCCCC"> to do and so</font><font color="#E5E5E5"> we are kind of</font>

515
00:25:05,750 --> 00:25:10,400
taking<font color="#CCCCCC"> from</font><font color="#E5E5E5"> these two mode of doing</font>

516
00:25:08,420 --> 00:25:13,280
<font color="#E5E5E5">prove the proof assistance so</font><font color="#CCCCCC"> we are</font>

517
00:25:10,400 --> 00:25:15,110
something inspired from<font color="#CCCCCC"> cork</font><font color="#E5E5E5"> and SS</font>

518
00:25:13,280 --> 00:25:16,790
reflect which is a kind of proof<font color="#CCCCCC"> of</font>

519
00:25:15,110 --> 00:25:21,168
system<font color="#E5E5E5"> that has been used</font><font color="#CCCCCC"> for</font>

520
00:25:16,790 --> 00:25:22,790
<font color="#E5E5E5">proving the biggest statements in or the</font>

521
00:25:21,169 --> 00:25:25,730
<font color="#E5E5E5">biggest example of formalized</font>

522
00:25:22,790 --> 00:25:29,090
mathematics<font color="#E5E5E5"> so for example they prove</font>

523
00:25:25,730 --> 00:25:31,580
the fight on some theorem which<font color="#CCCCCC"> is a big</font>

524
00:25:29,090 --> 00:25:34,360
chunk of mathematics<font color="#E5E5E5"> or the fall colors</font>

525
00:25:31,580 --> 00:25:38,240
theorem before and we also have

526
00:25:34,360 --> 00:25:40,370
automation<font color="#CCCCCC"> backends to SMT solvers and</font>

527
00:25:38,240 --> 00:25:46,460
<font color="#E5E5E5">computer algebra systems which are</font><font color="#CCCCCC"> very</font>

528
00:25:40,370 --> 00:25:50,479
<font color="#CCCCCC">useful and so how</font><font color="#E5E5E5"> did we</font><font color="#CCCCCC"> manage to get</font>

529
00:25:46,460 --> 00:25:53,570
these proofs<font color="#CCCCCC"> or build a tool that</font>

530
00:25:50,480 --> 00:25:57,770
actually is<font color="#CCCCCC"> able to deal with</font><font color="#E5E5E5"> this so</font>

531
00:25:53,570 --> 00:25:59,780
it's<font color="#E5E5E5"> not so</font><font color="#CCCCCC"> easy but</font><font color="#E5E5E5"> and we are we were</font>

532
00:25:57,770 --> 00:26:02,900
quite ignorant<font color="#E5E5E5"> but it turns out that</font><font color="#CCCCCC"> in</font>

533
00:25:59,780 --> 00:26:05,840
the<font color="#CCCCCC"> end what we needed is to take</font>

534
00:26:02,900 --> 00:26:09,679
<font color="#E5E5E5">inspiration from something that arises</font>

535
00:26:05,840 --> 00:26:12,080
<font color="#E5E5E5">quite frequently in the analysis of</font>

536
00:26:09,679 --> 00:26:14,780
Markov chain for<font color="#E5E5E5"> example to prove rapid</font>

537
00:26:12,080 --> 00:26:17,510
mixing<font color="#E5E5E5"> and so we use something called</font>

538
00:26:14,780 --> 00:26:19,520
progress decoupling and so the basic

539
00:26:17,510 --> 00:26:22,160
<font color="#CCCCCC">idea of</font><font color="#E5E5E5"> reverse decoupling is like you</font>

540
00:26:19,520 --> 00:26:24,559
<font color="#E5E5E5">have to predict processes and you try to</font>

541
00:26:22,160 --> 00:26:26,900
<font color="#CCCCCC">establish a</font><font color="#E5E5E5"> relationship</font><font color="#CCCCCC"> between them</font>

542
00:26:24,559 --> 00:26:29,899
<font color="#E5E5E5">and so that's exactly the situation</font>

543
00:26:26,900 --> 00:26:32,330
<font color="#E5E5E5">which</font><font color="#CCCCCC"> we are</font><font color="#E5E5E5"> interested in and how do</font>

544
00:26:29,900 --> 00:26:34,190
<font color="#E5E5E5">you do this so the basic idea</font><font color="#CCCCCC"> is like</font>

545
00:26:32,330 --> 00:26:36,260
you can take<font color="#E5E5E5"> about these two process and</font>

546
00:26:34,190 --> 00:26:37,549
they<font color="#CCCCCC"> have independent randomness</font><font color="#E5E5E5"> but if</font>

547
00:26:36,260 --> 00:26:39,440
you want to say<font color="#E5E5E5"> something</font><font color="#CCCCCC"> meaningful</font>

548
00:26:37,549 --> 00:26:41,809
<font color="#E5E5E5">about the relationship</font><font color="#CCCCCC"> between the two</font>

549
00:26:39,440 --> 00:26:44,049
<font color="#CCCCCC">processes you will</font><font color="#E5E5E5"> have to say something</font>

550
00:26:41,809 --> 00:26:49,910
<font color="#CCCCCC">about the way the randomness in the two</font>

551
00:26:44,049 --> 00:26:51,470
process<font color="#E5E5E5"> kind of ties together and that's</font>

552
00:26:49,910 --> 00:26:53,270
it's<font color="#CCCCCC"> like exactly the</font><font color="#E5E5E5"> idea of progress</font>

553
00:26:51,470 --> 00:26:55,580
decoupling instead of seeing these two

554
00:26:53,270 --> 00:26:57,799
puristic processes independently it will

555
00:26:55,580 --> 00:27:00,918
build<font color="#E5E5E5"> a single probabilistic process</font>

556
00:26:57,799 --> 00:27:03,139
<font color="#E5E5E5">that kind of emulates the behavior of</font>

557
00:27:00,919 --> 00:27:04,850
the two and so every<font color="#E5E5E5"> time you have a</font>

558
00:27:03,140 --> 00:27:07,640
random<font color="#E5E5E5"> sampling here and the random</font>

559
00:27:04,850 --> 00:27:10,209
sampling here<font color="#CCCCCC"> you're actually going</font><font color="#E5E5E5"> to</font>

560
00:27:07,640 --> 00:27:13,309
<font color="#E5E5E5">build in random sampling in the product</font>

561
00:27:10,210 --> 00:27:16,360
process<font color="#E5E5E5"> and this random sampling in a</font>

562
00:27:13,309 --> 00:27:19,340
way will tie the way<font color="#E5E5E5"> to run on sampling</font>

563
00:27:16,360 --> 00:27:21,459
<font color="#E5E5E5">behave in each process</font><font color="#CCCCCC"> okay so that's</font>

564
00:27:19,340 --> 00:27:24,230
the definition<font color="#E5E5E5"> what the definition of</font>

565
00:27:21,460 --> 00:27:27,260
coupling is actually doing<font color="#E5E5E5"> here you're</font>

566
00:27:24,230 --> 00:27:30,440
saying if you have a<font color="#E5E5E5"> to distribution</font>

567
00:27:27,260 --> 00:27:32,690
<font color="#CCCCCC">over a so we</font><font color="#E5E5E5"> are lucky to be</font>

568
00:27:30,440 --> 00:27:34,160
in crypto are at least in the style of

569
00:27:32,690 --> 00:27:36,350
crypto we're looking at we're dealing

570
00:27:34,160 --> 00:27:38,390
with<font color="#E5E5E5"> discrete distribution in fact some</font>

571
00:27:36,350 --> 00:27:40,760
<font color="#E5E5E5">distribution so things are a bit simpler</font>

572
00:27:38,390 --> 00:27:42,790
here<font color="#E5E5E5"> and essentially you have new one</font>

573
00:27:40,760 --> 00:27:45,050
and<font color="#CCCCCC"> you two and the coupling</font><font color="#E5E5E5"> is just</font>

574
00:27:42,790 --> 00:27:46,550
<font color="#E5E5E5">distribution</font><font color="#CCCCCC"> over the product space such</font>

575
00:27:45,050 --> 00:27:48,379
<font color="#CCCCCC">that when you</font><font color="#E5E5E5"> take the first</font><font color="#CCCCCC"> marginal</font>

576
00:27:46,550 --> 00:27:50,120
you get the first<font color="#CCCCCC"> distribution</font><font color="#E5E5E5"> the</font>

577
00:27:48,380 --> 00:27:52,310
second marginal you get the<font color="#E5E5E5"> second</font>

578
00:27:50,120 --> 00:27:55,219
distribution<font color="#CCCCCC"> and then there is this</font>

579
00:27:52,310 --> 00:27:56,840
notion<font color="#E5E5E5"> of our coupling so essentially</font>

580
00:27:55,220 --> 00:27:59,360
<font color="#E5E5E5">our is the relation you want to</font>

581
00:27:56,840 --> 00:28:00,949
establish<font color="#CCCCCC"> and if you want to establish</font>

582
00:27:59,360 --> 00:28:02,689
this relation<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> a further</font>

583
00:28:00,950 --> 00:28:06,050
constraint on the coupling<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

584
00:28:02,690 --> 00:28:08,510
<font color="#E5E5E5">to come up with and so this the notion</font>

585
00:28:06,050 --> 00:28:11,300
is actually very useful<font color="#E5E5E5"> for cryptography</font>

586
00:28:08,510 --> 00:28:14,740
because<font color="#CCCCCC"> for</font><font color="#E5E5E5"> different choices of the</font>

587
00:28:11,300 --> 00:28:19,850
relation<font color="#CCCCCC"> are you</font><font color="#E5E5E5"> will be able to</font>

588
00:28:14,740 --> 00:28:22,640
<font color="#CCCCCC">formalize steps in crypto so for example</font>

589
00:28:19,850 --> 00:28:24,530
for<font color="#E5E5E5"> a bridging step the relation R</font><font color="#CCCCCC"> will</font>

590
00:28:22,640 --> 00:28:26,750
be equality and then you will be able<font color="#E5E5E5"> to</font>

591
00:28:24,530 --> 00:28:29,590
<font color="#CCCCCC">show that the probability of a same</font>

592
00:28:26,750 --> 00:28:33,530
event is the same in two different<font color="#E5E5E5"> games</font>

593
00:28:29,590 --> 00:28:35,899
<font color="#CCCCCC">for a</font><font color="#E5E5E5"> failure event you will the</font>

594
00:28:33,530 --> 00:28:38,750
relationship<font color="#CCCCCC"> will say all the two</font>

595
00:28:35,900 --> 00:28:42,110
results are equal<font color="#E5E5E5"> provided some bad</font>

596
00:28:38,750 --> 00:28:45,320
<font color="#CCCCCC">heavens does not</font><font color="#E5E5E5"> happen and then you can</font>

597
00:28:42,110 --> 00:28:47,600
<font color="#CCCCCC">actually bound</font><font color="#E5E5E5"> the difference in</font>

598
00:28:45,320 --> 00:28:52,340
probability for the event<font color="#E5E5E5"> X in the two</font>

599
00:28:47,600 --> 00:28:54,919
games by<font color="#E5E5E5"> the probability of not F</font><font color="#CCCCCC"> okay</font>

600
00:28:52,340 --> 00:28:57,050
<font color="#E5E5E5">this is a slightly different statement</font>

601
00:28:54,920 --> 00:28:59,210
from what you usually see in crypto

602
00:28:57,050 --> 00:29:02,240
papers<font color="#E5E5E5"> because we're working with sub</font>

603
00:28:59,210 --> 00:29:05,540
distribution<font color="#CCCCCC"> so we are</font><font color="#E5E5E5"> just getting</font><font color="#CCCCCC"> this</font>

604
00:29:02,240 --> 00:29:08,450
<font color="#CCCCCC">maxixe instead of just one of the two</font>

605
00:29:05,540 --> 00:29:11,030
<font color="#CCCCCC">and then for reduction is just kind of</font>

606
00:29:08,450 --> 00:29:12,560
an implication<font color="#CCCCCC"> R has to be an</font>

607
00:29:11,030 --> 00:29:15,020
implication<font color="#E5E5E5"> between the two</font><font color="#CCCCCC"> winning</font>

608
00:29:12,560 --> 00:29:17,480
events<font color="#E5E5E5"> so essentially what I'm trying to</font>

609
00:29:15,020 --> 00:29:20,920
<font color="#CCCCCC">show here</font><font color="#E5E5E5"> is like these couplings are</font>

610
00:29:17,480 --> 00:29:26,570
kind<font color="#E5E5E5"> of a great tool to formalize a lot</font>

611
00:29:20,920 --> 00:29:28,880
in reasoning in crypto so is it one<font color="#CCCCCC"> of</font>

612
00:29:26,570 --> 00:29:31,399
the questions<font color="#CCCCCC"> that we had so first of</font>

613
00:29:28,880 --> 00:29:33,580
all initially we had we did not<font color="#E5E5E5"> realize</font>

614
00:29:31,400 --> 00:29:36,650
<font color="#CCCCCC">that</font><font color="#E5E5E5"> what we were</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> where couplings</font>

615
00:29:33,580 --> 00:29:39,889
<font color="#E5E5E5">we had this definition but we didn't</font>

616
00:29:36,650 --> 00:29:43,260
know<font color="#E5E5E5"> the connection and two years</font><font color="#CCCCCC"> ago I</font>

617
00:29:39,890 --> 00:29:46,980
was working<font color="#E5E5E5"> with a</font><font color="#CCCCCC"> student</font>

618
00:29:43,260 --> 00:29:50,430
<font color="#E5E5E5">University</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Pennsylvania</font><font color="#CCCCCC"> is just in</font>

619
00:29:46,980 --> 00:29:52,830
<font color="#E5E5E5">the shoe is actually more interested in</font>

620
00:29:50,430 --> 00:29:55,530
a differential privacy<font color="#E5E5E5"> but he came</font><font color="#CCCCCC"> up</font>

621
00:29:52,830 --> 00:29:57,270
with<font color="#E5E5E5"> this connection and yeah was I'm</font>

622
00:29:55,530 --> 00:30:02,060
still very<font color="#CCCCCC"> excited about</font><font color="#E5E5E5"> it</font>

623
00:29:57,270 --> 00:30:05,879
<font color="#E5E5E5">and so the question is like whether</font>

624
00:30:02,060 --> 00:30:10,550
recognizing that what we<font color="#E5E5E5"> are doing is</font>

625
00:30:05,880 --> 00:30:13,650
<font color="#E5E5E5">probably coupling is something useful so</font>

626
00:30:10,550 --> 00:30:16,860
as far<font color="#E5E5E5"> as</font><font color="#CCCCCC"> eyes I can see there has been</font>

627
00:30:13,650 --> 00:30:19,110
some prior work on using<font color="#E5E5E5"> couplings in</font>

628
00:30:16,860 --> 00:30:22,290
crypto there are a few<font color="#E5E5E5"> papers it's not</font>

629
00:30:19,110 --> 00:30:24,929
so widespread<font color="#E5E5E5"> and when they use it it</font>

630
00:30:22,290 --> 00:30:27,450
kind of different<font color="#CCCCCC"> I don't know whether</font>

631
00:30:24,930 --> 00:30:30,870
it's so I don't have the answer whether

632
00:30:27,450 --> 00:30:32,790
it's a very useful insight but one thing

633
00:30:30,870 --> 00:30:35,790
which is<font color="#E5E5E5"> sure is like for us it was the</font>

634
00:30:32,790 --> 00:30:38,760
key<font color="#CCCCCC"> to build this scalable verification</font>

635
00:30:35,790 --> 00:30:41,010
infrastructure because we don't have<font color="#E5E5E5"> to</font>

636
00:30:38,760 --> 00:30:43,230
reason<font color="#E5E5E5"> about probabilities when we do</font>

637
00:30:41,010 --> 00:30:44,730
this game<font color="#CCCCCC"> hoping</font><font color="#E5E5E5"> we just have to</font>

638
00:30:43,230 --> 00:30:46,530
<font color="#CCCCCC">establish</font><font color="#E5E5E5"> the coupling and we deal with</font>

639
00:30:44,730 --> 00:30:51,180
probability later so that<font color="#CCCCCC"> was the key to</font>

640
00:30:46,530 --> 00:30:53,480
<font color="#CCCCCC">do have something scalable and also it's</font>

641
00:30:51,180 --> 00:30:55,260
very<font color="#E5E5E5"> useful for dealing with</font>

642
00:30:53,480 --> 00:30:58,020
generalization<font color="#CCCCCC"> because when you want to</font>

643
00:30:55,260 --> 00:31:00,390
<font color="#E5E5E5">look at the more general settings this</font>

644
00:30:58,020 --> 00:31:02,400
<font color="#E5E5E5">kind of connection with coupling is very</font>

645
00:31:00,390 --> 00:31:05,540
<font color="#E5E5E5">helpful so</font><font color="#CCCCCC"> we've been doing</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of</font>

646
00:31:02,400 --> 00:31:07,560
work on differential privacy and

647
00:31:05,540 --> 00:31:11,120
observing the<font color="#CCCCCC"> relationship with</font>

648
00:31:07,560 --> 00:31:14,070
<font color="#E5E5E5">compelling we very recently came up with</font>

649
00:31:11,120 --> 00:31:15,689
the right notion of coupling for this

650
00:31:14,070 --> 00:31:18,240
particular<font color="#E5E5E5"> setting it's a notion of</font>

651
00:31:15,690 --> 00:31:20,700
approximate coupling<font color="#E5E5E5"> and we proved a</font>

652
00:31:18,240 --> 00:31:23,250
version<font color="#E5E5E5"> of a theorem</font><font color="#CCCCCC"> called Strassen</font>

653
00:31:20,700 --> 00:31:25,830
theorem which really tells<font color="#E5E5E5"> us we</font><font color="#CCCCCC"> have</font>

654
00:31:23,250 --> 00:31:29,160
the right notion and also some years ago

655
00:31:25,830 --> 00:31:33,510
with<font color="#CCCCCC"> dominique Unruh we got very excited</font>

656
00:31:29,160 --> 00:31:36,330
about extending our work to a quantum

657
00:31:33,510 --> 00:31:39,450
crypto and we thought<font color="#E5E5E5"> we had done the</font>

658
00:31:36,330 --> 00:31:41,429
<font color="#E5E5E5">hardest part of the work because we had</font>

659
00:31:39,450 --> 00:31:44,360
found a great name for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> code for the</font>

660
00:31:41,430 --> 00:31:47,340
tool it would be called<font color="#E5E5E5"> queasy crypt and</font>

661
00:31:44,360 --> 00:31:49,770
the problem is<font color="#E5E5E5"> that when</font><font color="#CCCCCC"> we try to</font>

662
00:31:47,340 --> 00:31:52,260
extend lifting to<font color="#E5E5E5"> the quantum setting it</font>

663
00:31:49,770 --> 00:31:54,120
was not so clear what the definition

664
00:31:52,260 --> 00:31:57,530
would be<font color="#E5E5E5"> but now we know there is this</font>

665
00:31:54,120 --> 00:32:00,479
<font color="#CCCCCC">connection with probability coupling</font>

666
00:31:57,530 --> 00:32:02,520
optimal transport<font color="#E5E5E5"> there is actually some</font>

667
00:32:00,480 --> 00:32:03,960
work on<font color="#CCCCCC"> quantum optimal transport and</font>

668
00:32:02,520 --> 00:32:06,240
people have been<font color="#E5E5E5"> coming up with notions</font>

669
00:32:03,960 --> 00:32:09,570
<font color="#E5E5E5">of coupling in this setting</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> can</font>

670
00:32:06,240 --> 00:32:12,720
try to see<font color="#E5E5E5"> whether this work</font><font color="#CCCCCC"> so it's for</font>

671
00:32:09,570 --> 00:32:15,960
us I think<font color="#E5E5E5"> it's very useful</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so what</font>

672
00:32:12,720 --> 00:32:17,910
we do is like<font color="#CCCCCC"> we have this code based</font>

673
00:32:15,960 --> 00:32:20,250
approach to<font color="#CCCCCC"> produce decoupling this is a</font>

674
00:32:17,910 --> 00:32:22,890
<font color="#E5E5E5">language</font><font color="#CCCCCC"> which is very</font><font color="#E5E5E5"> close</font><font color="#CCCCCC"> to what me</font>

675
00:32:20,250 --> 00:32:27,240
here and<font color="#CCCCCC"> Phil</font><font color="#E5E5E5"> have is in their 2006</font>

676
00:32:22,890 --> 00:32:27,960
papers and so we kind of deal<font color="#CCCCCC"> with these</font>

677
00:32:27,240 --> 00:32:30,000
<font color="#CCCCCC">game-playing</font>

678
00:32:27,960 --> 00:32:32,730
techniques using<font color="#E5E5E5"> this a relational whole</font>

679
00:32:30,000 --> 00:32:34,380
logic<font color="#E5E5E5"> where P and</font><font color="#CCCCCC"> Q are relational</font>

680
00:32:32,730 --> 00:32:36,059
<font color="#CCCCCC">States</font><font color="#E5E5E5"> so we don't talk about</font>

681
00:32:34,380 --> 00:32:40,130
<font color="#E5E5E5">probability so in this sense it looks</font>

682
00:32:36,059 --> 00:32:42,720
<font color="#E5E5E5">very much</font><font color="#CCCCCC"> like standard verification</font><font color="#E5E5E5"> and</font>

683
00:32:40,130 --> 00:32:45,030
then once we have<font color="#E5E5E5"> done this this gives</font>

684
00:32:42,720 --> 00:32:46,490
us by the kind of results<font color="#CCCCCC"> have showed</font>

685
00:32:45,030 --> 00:32:49,590
you later some kind of<font color="#E5E5E5"> heuristic</font>

686
00:32:46,490 --> 00:32:52,559
inequalities<font color="#E5E5E5"> and so to conclude</font><font color="#CCCCCC"> you just</font>

687
00:32:49,590 --> 00:32:54,330
have to bundle together<font color="#E5E5E5"> this</font>

688
00:32:52,559 --> 00:32:56,309
probabilistic inequality and also

689
00:32:54,330 --> 00:32:59,040
resolve some probability<font color="#CCCCCC"> bouts for some</font>

690
00:32:56,309 --> 00:33:01,980
events<font color="#CCCCCC"> and for</font><font color="#E5E5E5"> this we have</font><font color="#CCCCCC"> a logic</font><font color="#E5E5E5"> that</font>

691
00:32:59,040 --> 00:33:04,200
helps us give upper bound<font color="#CCCCCC"> for the</font>

692
00:33:01,980 --> 00:33:07,200
<font color="#E5E5E5">probability of events in again in a game</font>

693
00:33:04,200 --> 00:33:08,970
<font color="#E5E5E5">so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually traditionally where</font>

694
00:33:07,200 --> 00:33:11,400
a lot of<font color="#CCCCCC"> work in verification</font><font color="#E5E5E5"> of</font>

695
00:33:08,970 --> 00:33:13,410
heuristic program went<font color="#E5E5E5"> but there's a lot</font>

696
00:33:11,400 --> 00:33:15,360
of<font color="#CCCCCC"> limitation still so for example if</font>

697
00:33:13,410 --> 00:33:17,520
you<font color="#E5E5E5"> try to use concentration</font><font color="#CCCCCC"> doubts</font><font color="#E5E5E5"> or</font>

698
00:33:15,360 --> 00:33:21,240
reasoning about independence this<font color="#E5E5E5"> is not</font>

699
00:33:17,520 --> 00:33:24,270
something that is<font color="#E5E5E5"> handled so well</font><font color="#CCCCCC"> this</font>

700
00:33:21,240 --> 00:33:26,010
<font color="#E5E5E5">is some ongoing research area and then</font>

701
00:33:24,270 --> 00:33:28,350
of course<font color="#CCCCCC"> we need to bound the execution</font>

702
00:33:26,010 --> 00:33:30,809
time of constructed adversary and in

703
00:33:28,350 --> 00:33:32,939
principle<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is something which should</font>

704
00:33:30,809 --> 00:33:35,700
not<font color="#E5E5E5"> be too hard but we've been very lazy</font>

705
00:33:32,940 --> 00:33:37,740
<font color="#E5E5E5">and we did not really</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> at all</font>

706
00:33:35,700 --> 00:33:39,780
support there<font color="#E5E5E5"> although</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> one area</font>

707
00:33:37,740 --> 00:33:42,150
<font color="#E5E5E5">of</font><font color="#CCCCCC"> theoretical computer science called</font>

708
00:33:39,780 --> 00:33:43,860
implicit complexity theory where they

709
00:33:42,150 --> 00:33:46,200
have developed<font color="#E5E5E5"> type system and so</font><font color="#CCCCCC"> on we</font>

710
00:33:43,860 --> 00:33:50,070
could try to<font color="#CCCCCC"> use their stuff but we</font>

711
00:33:46,200 --> 00:33:51,780
never did<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> very quickly</font><font color="#CCCCCC"> I won't</font>

712
00:33:50,070 --> 00:33:53,490
go<font color="#CCCCCC"> very much</font><font color="#E5E5E5"> into detail but this is</font>

713
00:33:51,780 --> 00:33:55,590
kind of what the proof rule looks like

714
00:33:53,490 --> 00:33:58,080
<font color="#CCCCCC">so</font><font color="#E5E5E5"> essentially the way</font><font color="#CCCCCC"> it works is like</font>

715
00:33:55,590 --> 00:34:00,570
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> a big program you apply some</font>

716
00:33:58,080 --> 00:34:02,520
rules<font color="#CCCCCC"> and you get smaller</font><font color="#E5E5E5"> programs so</font>

717
00:34:00,570 --> 00:34:03,960
it's like in<font color="#CCCCCC"> ecology called program</font>

718
00:34:02,520 --> 00:34:06,600
<font color="#CCCCCC">verification you build your proof</font>

719
00:34:03,960 --> 00:34:08,940
backwards<font color="#E5E5E5"> we have a rule for random</font>

720
00:34:06,600 --> 00:34:11,069
<font color="#E5E5E5">assignment which</font><font color="#CCCCCC"> is where the magic</font><font color="#E5E5E5"> goes</font>

721
00:34:08,940 --> 00:34:14,159
but<font color="#E5E5E5"> essentially what we are</font><font color="#CCCCCC"> doing</font>

722
00:34:11,070 --> 00:34:16,050
is kind<font color="#E5E5E5"> of building coupling</font><font color="#CCCCCC"> a special</font>

723
00:34:14,159 --> 00:34:19,589
kind<font color="#E5E5E5"> of coupling which we call</font><font color="#CCCCCC"> by</font>

724
00:34:16,050 --> 00:34:22,260
<font color="#CCCCCC">jacketed coupling</font><font color="#E5E5E5"> and just with this we</font>

725
00:34:19,590 --> 00:34:25,200
can<font color="#E5E5E5"> go</font><font color="#CCCCCC"> a long way</font><font color="#E5E5E5"> so we've been doing a</font>

726
00:34:22,260 --> 00:34:28,040
<font color="#CCCCCC">lot of example</font><font color="#E5E5E5"> kind of the latest</font>

727
00:34:25,199 --> 00:34:34,139
example which we've been doing<font color="#CCCCCC"> is one</font>

728
00:34:28,040 --> 00:34:37,020
kind<font color="#E5E5E5"> of a building</font><font color="#CCCCCC"> a verified platform</font>

729
00:34:34,139 --> 00:34:40,020
for a secure two-party computation<font color="#E5E5E5"> based</font>

730
00:34:37,020 --> 00:34:42,630
on garbled circuit<font color="#CCCCCC"> we had</font><font color="#E5E5E5"> a small</font>

731
00:34:40,020 --> 00:34:44,909
project<font color="#E5E5E5"> with NIST about verifying in</font>

732
00:34:42,630 --> 00:34:48,150
differentiability from random Oracle of

733
00:34:44,909 --> 00:34:51,389
<font color="#CCCCCC">share three</font><font color="#E5E5E5"> my colleagues recently</font>

734
00:34:48,150 --> 00:34:55,380
<font color="#CCCCCC">completed a proof</font><font color="#E5E5E5"> of privacy for an</font>

735
00:34:51,389 --> 00:34:59,040
<font color="#E5E5E5">inverting system and so doing this proof</font>

736
00:34:55,380 --> 00:35:01,860
we got some kind<font color="#E5E5E5"> of recognizing them we</font>

737
00:34:59,040 --> 00:35:05,310
<font color="#E5E5E5">found some subtle points</font><font color="#CCCCCC"> so on the</font><font color="#E5E5E5"> other</font>

738
00:35:01,860 --> 00:35:08,250
hand it's true<font color="#CCCCCC"> that these interactive</font>

739
00:35:05,310 --> 00:35:12,150
tools are<font color="#E5E5E5"> time consuming and difficult</font>

740
00:35:08,250 --> 00:35:13,620
to<font color="#CCCCCC"> use so back in 2011 when we got our</font>

741
00:35:12,150 --> 00:35:16,650
paper we say for the<font color="#E5E5E5"> working</font>

742
00:35:13,620 --> 00:35:21,270
cryptographer<font color="#CCCCCC"> I think we were a bit too</font>

743
00:35:16,650 --> 00:35:23,790
optimistic I have to say<font color="#CCCCCC"> I mean if</font>

744
00:35:21,270 --> 00:35:25,860
working<font color="#E5E5E5"> cryptographer starts using our</font>

745
00:35:23,790 --> 00:35:28,259
tool at this point maybe we'll stop

746
00:35:25,860 --> 00:35:33,630
<font color="#E5E5E5">being a working ripped</font><font color="#CCCCCC"> agra</font><font color="#E5E5E5"> fairly soon</font>

747
00:35:28,260 --> 00:35:36,270
<font color="#E5E5E5">which was not our intention but actually</font>

748
00:35:33,630 --> 00:35:38,160
my friend<font color="#E5E5E5"> Manuel Barbosa is always</font>

749
00:35:36,270 --> 00:35:41,100
suggesting there could also be<font color="#CCCCCC"> this</font>

750
00:35:38,160 --> 00:35:42,629
<font color="#E5E5E5">lightweight approach where actually you</font>

751
00:35:41,100 --> 00:35:44,940
use our tool just<font color="#E5E5E5"> to write your</font>

752
00:35:42,630 --> 00:35:46,860
probabilistic experiments and the kind

753
00:35:44,940 --> 00:35:48,780
<font color="#E5E5E5">of sequence of game without doing the</font>

754
00:35:46,860 --> 00:35:51,480
proof and this would be already very

755
00:35:48,780 --> 00:35:53,550
useful because<font color="#E5E5E5"> there won't be type</font>

756
00:35:51,480 --> 00:35:55,410
checking errors in<font color="#CCCCCC"> your program and</font>

757
00:35:53,550 --> 00:36:01,400
<font color="#E5E5E5">there will be some kind of structure and</font>

758
00:35:55,410 --> 00:36:03,629
<font color="#E5E5E5">you will be able to get some early bugs</font>

759
00:36:01,400 --> 00:36:05,280
<font color="#CCCCCC">so this is something</font><font color="#E5E5E5"> which would be</font>

760
00:36:03,630 --> 00:36:06,900
valuable<font color="#E5E5E5"> but I guess in the long run</font>

761
00:36:05,280 --> 00:36:09,720
what<font color="#E5E5E5"> you want is to</font><font color="#CCCCCC"> have more</font>

762
00:36:06,900 --> 00:36:11,400
abstraction and more automation<font color="#CCCCCC"> ok the</font>

763
00:36:09,720 --> 00:36:14,970
<font color="#E5E5E5">problem with automation is like it's</font>

764
00:36:11,400 --> 00:36:18,330
somewhat<font color="#E5E5E5"> problem specific so we've been</font>

765
00:36:14,970 --> 00:36:21,180
<font color="#E5E5E5">doing a</font><font color="#CCCCCC"> number of work on a highly</font>

766
00:36:18,330 --> 00:36:23,730
<font color="#E5E5E5">automated proof and I will go quite</font>

767
00:36:21,180 --> 00:36:24,899
<font color="#CCCCCC">quickly about this but essentially the</font>

768
00:36:23,730 --> 00:36:26,460
basic idea is<font color="#E5E5E5"> like</font>

769
00:36:24,900 --> 00:36:28,109
proof which<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> doing in relational</font>

770
00:36:26,460 --> 00:36:30,569
<font color="#CCCCCC">whole logic there are at the wrong</font><font color="#E5E5E5"> level</font>

771
00:36:28,109 --> 00:36:31,589
of abstraction when cryptographers do

772
00:36:30,569 --> 00:36:33,960
prove they have this<font color="#E5E5E5"> high level</font>

773
00:36:31,589 --> 00:36:37,140
<font color="#E5E5E5">principle and this is what should be</font>

774
00:36:33,960 --> 00:36:39,089
<font color="#CCCCCC">automated because</font><font color="#E5E5E5"> otherwise people will</font>

775
00:36:37,140 --> 00:36:42,049
get lost<font color="#E5E5E5"> in trying to use our tool I</font>

776
00:36:39,089 --> 00:36:46,619
<font color="#CCCCCC">think Jonathan</font><font color="#E5E5E5"> Cutts had this kind of</font>

777
00:36:42,049 --> 00:36:48,119
very<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> saying</font><font color="#E5E5E5"> about a secret which</font>

778
00:36:46,619 --> 00:36:50,730
was there was some kind<font color="#E5E5E5"> of impedance</font>

779
00:36:48,119 --> 00:36:53,009
mismatch<font color="#E5E5E5"> when you are trying to do use</font>

780
00:36:50,730 --> 00:36:54,390
the tool so it's really<font color="#E5E5E5"> our</font><font color="#CCCCCC"> job to</font><font color="#E5E5E5"> try</font>

781
00:36:53,009 --> 00:36:56,940
to go up at<font color="#E5E5E5"> the level of abstraction</font>

782
00:36:54,390 --> 00:36:59,249
<font color="#E5E5E5">that you guys are doing and so some</font>

783
00:36:56,940 --> 00:37:01,140
basic<font color="#E5E5E5"> observation here</font><font color="#CCCCCC"> is like</font><font color="#E5E5E5"> many of</font>

784
00:36:59,249 --> 00:37:02,819
the proofs which<font color="#E5E5E5"> or many of the</font>

785
00:37:01,140 --> 00:37:04,920
<font color="#CCCCCC">principle we which are using the</font>

786
00:37:02,819 --> 00:37:07,410
consists of two<font color="#CCCCCC"> bots one is like coming</font>

787
00:37:04,920 --> 00:37:10,289
<font color="#E5E5E5">up</font><font color="#CCCCCC"> with some information and this is one</font>

788
00:37:07,410 --> 00:37:12,509
where<font color="#E5E5E5"> the small smartness</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> into</font>

789
00:37:10,289 --> 00:37:14,759
place and then once you have coming<font color="#E5E5E5"> up</font>

790
00:37:12,509 --> 00:37:16,710
with this<font color="#E5E5E5"> kind of information check that</font>

791
00:37:14,759 --> 00:37:18,450
it's the right information<font color="#E5E5E5"> so for</font>

792
00:37:16,710 --> 00:37:19,859
example if it's a<font color="#E5E5E5"> reduction it will be</font>

793
00:37:18,450 --> 00:37:21,660
<font color="#E5E5E5">you will give a</font><font color="#CCCCCC"> construed like</font><font color="#E5E5E5"> the</font>

794
00:37:19,859 --> 00:37:25,680
adversary and<font color="#CCCCCC"> then we'll have to</font><font color="#E5E5E5"> check</font>

795
00:37:21,660 --> 00:37:27,779
that<font color="#E5E5E5"> it's really simulating well and so</font>

796
00:37:25,680 --> 00:37:30,930
like the second<font color="#E5E5E5"> part could be</font><font color="#CCCCCC"> automated</font>

797
00:37:27,779 --> 00:37:32,509
and in a principled way<font color="#E5E5E5"> and then for the</font>

798
00:37:30,930 --> 00:37:35,038
first<font color="#E5E5E5"> part you have</font><font color="#CCCCCC"> to use some</font>

799
00:37:32,509 --> 00:37:37,890
heuristics<font color="#E5E5E5"> and so this is something that</font>

800
00:37:35,039 --> 00:37:41,039
<font color="#E5E5E5">works pretty well in</font><font color="#CCCCCC"> practice</font><font color="#E5E5E5"> we built a</font>

801
00:37:37,890 --> 00:37:42,930
tool for for<font color="#CCCCCC"> example DTH based</font>

802
00:37:41,039 --> 00:37:47,309
cryptography we applied it for many

803
00:37:42,930 --> 00:37:49,470
examples in pairing cryptography so one

804
00:37:47,309 --> 00:37:52,920
thing<font color="#CCCCCC"> is very</font><font color="#E5E5E5"> hard to come</font><font color="#CCCCCC"> up with a</font>

805
00:37:49,470 --> 00:37:55,230
sufficiently rich set of<font color="#CCCCCC"> hyrule and this</font>

806
00:37:52,920 --> 00:37:57,269
is<font color="#E5E5E5"> something that what could try to work</font>

807
00:37:55,230 --> 00:38:00,299
on but also something<font color="#E5E5E5"> which</font><font color="#CCCCCC"> i find very</font>

808
00:37:57,269 --> 00:38:02,549
exciting<font color="#E5E5E5"> is that sometimes instead</font><font color="#CCCCCC"> of</font>

809
00:38:00,299 --> 00:38:04,559
using heuristics people have been

810
00:38:02,549 --> 00:38:07,259
<font color="#E5E5E5">looking at</font><font color="#CCCCCC"> a building decision procedure</font>

811
00:38:04,559 --> 00:38:10,200
<font color="#E5E5E5">so this is our kind of algorithm which</font>

812
00:38:07,259 --> 00:38:12,390
you know will return the right answer if

813
00:38:10,200 --> 00:38:16,019
it exists<font color="#E5E5E5"> and so there</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> work by</font>

814
00:38:12,390 --> 00:38:19,710
utilize in 2012<font color="#E5E5E5"> but there was also a</font>

815
00:38:16,019 --> 00:38:21,988
<font color="#E5E5E5">paper at the crypto last year by camera</font>

816
00:38:19,710 --> 00:38:24,210
and<font color="#E5E5E5"> rasool</font><font color="#CCCCCC"> ik actually crypto for the</font>

817
00:38:21,989 --> 00:38:26,849
first year last year<font color="#E5E5E5"> had a special</font>

818
00:38:24,210 --> 00:38:29,099
<font color="#CCCCCC">session on automated tools</font><font color="#E5E5E5"> so there was</font>

819
00:38:26,849 --> 00:38:34,859
a person<font color="#E5E5E5"> we were not on this session but</font>

820
00:38:29,099 --> 00:38:36,869
<font color="#CCCCCC">it was a big good news ok so we also did</font>

821
00:38:34,859 --> 00:38:38,788
a lot<font color="#E5E5E5"> of work on automated proofs in the</font>

822
00:38:36,869 --> 00:38:40,799
<font color="#E5E5E5">random Oracle model</font>

823
00:38:38,789 --> 00:38:43,439
and essentially what we looked at<font color="#E5E5E5"> is</font>

824
00:38:40,799 --> 00:38:46,979
<font color="#E5E5E5">like one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the first example which we</font>

825
00:38:43,439 --> 00:38:50,038
did<font color="#E5E5E5"> was formalizing</font><font color="#CCCCCC"> OAD</font><font color="#E5E5E5"> he took us six</font>

826
00:38:46,979 --> 00:38:52,319
<font color="#E5E5E5">months and that's an enormous</font><font color="#CCCCCC"> amount of</font>

827
00:38:50,039 --> 00:38:55,739
time and then we try to understand

828
00:38:52,319 --> 00:38:58,019
whether we could<font color="#CCCCCC"> automate this</font><font color="#E5E5E5"> and we</font>

829
00:38:55,739 --> 00:39:00,630
actually<font color="#E5E5E5"> built</font><font color="#CCCCCC"> a tool called zou crypt</font>

830
00:38:58,019 --> 00:39:02,249
which was<font color="#E5E5E5"> able to do this and</font>

831
00:39:00,630 --> 00:39:04,499
<font color="#E5E5E5">essentially what we did there and</font><font color="#CCCCCC"> I</font>

832
00:39:02,249 --> 00:39:06,718
think<font color="#E5E5E5"> this is a general principle</font><font color="#CCCCCC"> it's</font>

833
00:39:04,499 --> 00:39:08,910
very good<font color="#E5E5E5"> to build two tools one which</font>

834
00:39:06,719 --> 00:39:11,130
<font color="#E5E5E5">is very good at</font><font color="#CCCCCC"> finding attacks</font><font color="#E5E5E5"> one</font>

835
00:39:08,910 --> 00:39:13,140
which is very good<font color="#CCCCCC"> at finding proofs</font><font color="#E5E5E5"> you</font>

836
00:39:11,130 --> 00:39:15,299
run the tools<font color="#E5E5E5"> so if you are just going</font>

837
00:39:13,140 --> 00:39:16,769
to<font color="#CCCCCC"> look at lots of scheme</font><font color="#E5E5E5"> you just run</font>

838
00:39:15,299 --> 00:39:18,509
the tools that<font color="#E5E5E5"> fine attacks first</font>

839
00:39:16,769 --> 00:39:20,819
<font color="#E5E5E5">because most of the stuff</font><font color="#CCCCCC"> you will come</font>

840
00:39:18,509 --> 00:39:22,829
<font color="#E5E5E5">up with this junk and then on the one</font>

841
00:39:20,819 --> 00:39:26,939
which<font color="#CCCCCC"> are left you try to run</font><font color="#E5E5E5"> the proof</font>

842
00:39:22,829 --> 00:39:29,819
<font color="#E5E5E5">and we had a very good coverage rate so</font>

843
00:39:26,939 --> 00:39:34,259
for example<font color="#E5E5E5"> for</font><font color="#CCCCCC"> CCA secure CPI</font><font color="#E5E5E5"> security</font>

844
00:39:29,819 --> 00:39:37,619
was almost full coverage<font color="#E5E5E5"> it was a less</font>

845
00:39:34,259 --> 00:39:41,609
good for CCA security and then you have

846
00:39:37,619 --> 00:39:44,880
this gray zone and so what we<font color="#E5E5E5"> did for</font>

847
00:39:41,609 --> 00:39:49,140
<font color="#E5E5E5">this gray zone is we had this nice</font>

848
00:39:44,880 --> 00:39:53,429
<font color="#E5E5E5">Oracle called David</font><font color="#CCCCCC"> xx Val and heat work</font>

849
00:39:49,140 --> 00:39:55,499
very well<font color="#CCCCCC"> he actually</font><font color="#E5E5E5"> came</font><font color="#CCCCCC"> with a new</font>

850
00:39:53,429 --> 00:39:58,469
scheme which was on our grain<font color="#E5E5E5"> list</font>

851
00:39:55,499 --> 00:40:03,149
called as<font color="#E5E5E5"> NAEP for which he could</font>

852
00:39:58,469 --> 00:40:05,759
actually prove in<font color="#CCCCCC"> CCA security for RSA</font>

853
00:40:03,150 --> 00:40:08,369
with a small exponents<font color="#E5E5E5"> so I have to say</font>

854
00:40:05,759 --> 00:40:10,829
here like the Zaap stuff the proof was

855
00:40:08,369 --> 00:40:13,880
<font color="#E5E5E5">mechanized using</font><font color="#CCCCCC"> easy crypt</font><font color="#E5E5E5"> but all the</font>

856
00:40:10,829 --> 00:40:16,499
smallness came from<font color="#CCCCCC"> David not from us</font>

857
00:40:13,880 --> 00:40:19,079
<font color="#CCCCCC">okay the last thing</font><font color="#E5E5E5"> which we did I won't</font>

858
00:40:16,499 --> 00:40:21,149
say too<font color="#CCCCCC"> much about</font><font color="#E5E5E5"> this but we also work</font>

859
00:40:19,079 --> 00:40:23,519
<font color="#E5E5E5">on the building</font><font color="#CCCCCC"> on a automated proof in</font>

860
00:40:21,150 --> 00:40:26,459
the<font color="#CCCCCC"> January group model and this</font><font color="#E5E5E5"> is</font>

861
00:40:23,519 --> 00:40:28,618
<font color="#E5E5E5">something where we get a pretty nice</font>

862
00:40:26,459 --> 00:40:31,019
result so the latest work which we are

863
00:40:28,619 --> 00:40:32,640
<font color="#E5E5E5">doing is with some people</font><font color="#CCCCCC"> our trainers</font>

864
00:40:31,019 --> 00:40:34,738
and we're trying to apply<font color="#E5E5E5"> this to</font>

865
00:40:32,640 --> 00:40:36,749
<font color="#E5E5E5">attribute based encryption so there's</font>

866
00:40:34,739 --> 00:40:39,319
lots of opportunities<font color="#CCCCCC"> to try</font><font color="#E5E5E5"> to get</font>

867
00:40:36,749 --> 00:40:45,479
automation in different models<font color="#CCCCCC"> and so on</font>

868
00:40:39,319 --> 00:40:47,519
<font color="#CCCCCC">okay so let me</font><font color="#E5E5E5"> try to</font><font color="#CCCCCC"> go now to</font><font color="#E5E5E5"> the</font>

869
00:40:45,479 --> 00:40:51,718
second part<font color="#CCCCCC"> which was about side</font>

870
00:40:47,519 --> 00:40:52,709
channels<font color="#E5E5E5"> and so essentially we've been</font>

871
00:40:51,719 --> 00:40:55,349
doing<font color="#CCCCCC"> two</font>

872
00:40:52,710 --> 00:40:56,940
lines of<font color="#E5E5E5"> work one is in</font><font color="#CCCCCC"> unconstant I'm</font>

873
00:40:55,349 --> 00:41:01,770
cryptography and one is on<font color="#CCCCCC"> masked</font>

874
00:40:56,940 --> 00:41:03,599
implementation<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> well-known fact</font>

875
00:41:01,770 --> 00:41:05,009
<font color="#CCCCCC">that when you want</font><font color="#E5E5E5"> to break crypto</font>

876
00:41:03,599 --> 00:41:06,089
you're not going to try<font color="#E5E5E5"> to break</font><font color="#CCCCCC"> the</font>

877
00:41:05,010 --> 00:41:08,700
math you're going to try the

878
00:41:06,089 --> 00:41:10,920
implementation<font color="#E5E5E5"> the plenty of</font><font color="#CCCCCC"> evidence</font>

879
00:41:08,700 --> 00:41:13,740
that<font color="#E5E5E5"> the timing attacks can be kind of a</font>

880
00:41:10,920 --> 00:41:15,930
disaster<font color="#E5E5E5"> they help you to</font><font color="#CCCCCC"> recover the</font>

881
00:41:13,740 --> 00:41:20,368
key and<font color="#E5E5E5"> more or less they work remotely</font>

882
00:41:15,930 --> 00:41:21,828
<font color="#E5E5E5">so you really better not have stupid</font>

883
00:41:20,369 --> 00:41:27,869
timing attacks in your implementation

884
00:41:21,829 --> 00:41:32,309
<font color="#CCCCCC">and kind of a gold standard for avoiding</font>

885
00:41:27,869 --> 00:41:35,010
<font color="#CCCCCC">cash-based are protecting to the best</font>

886
00:41:32,309 --> 00:41:37,619
<font color="#CCCCCC">extent against the</font><font color="#E5E5E5"> cash</font><font color="#CCCCCC"> based</font><font color="#E5E5E5"> timing</font>

887
00:41:35,010 --> 00:41:40,619
attacks<font color="#E5E5E5"> is a cryptography constant time</font>

888
00:41:37,619 --> 00:41:42,359
<font color="#E5E5E5">and essentially what</font><font color="#CCCCCC"> it suggests is like</font>

889
00:41:40,619 --> 00:41:45,119
the<font color="#E5E5E5"> control flow and the memory access</font>

890
00:41:42,359 --> 00:41:47,940
should<font color="#E5E5E5"> be independent of</font><font color="#CCCCCC"> Secrets okay</font>

891
00:41:45,119 --> 00:41:50,520
and so it looks like<font color="#CCCCCC"> a pretty</font><font color="#E5E5E5"> simple</font>

892
00:41:47,940 --> 00:41:54,290
<font color="#CCCCCC">thing to achieve</font><font color="#E5E5E5"> but it's actually very</font>

893
00:41:50,520 --> 00:41:57,630
hard<font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> and so we have a funny</font>

894
00:41:54,290 --> 00:41:59,819
story about<font color="#E5E5E5"> this because while trying to</font>

895
00:41:57,630 --> 00:42:03,270
<font color="#E5E5E5">do our work last year going</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> to</font>

896
00:41:59,819 --> 00:42:06,509
<font color="#E5E5E5">devise tools for checking constant time</font>

897
00:42:03,270 --> 00:42:13,349
<font color="#CCCCCC">we look at this</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> - an</font><font color="#E5E5E5"> implementation</font>

898
00:42:06,510 --> 00:42:16,619
of TLS by Amazon<font color="#E5E5E5"> Labs and we found</font><font color="#CCCCCC"> the</font>

899
00:42:13,349 --> 00:42:18,990
timing<font color="#E5E5E5"> attack there and they</font><font color="#CCCCCC"> actually</font>

900
00:42:16,619 --> 00:42:21,329
told<font color="#E5E5E5"> us yeah guys</font><font color="#CCCCCC"> you are too late</font>

901
00:42:18,990 --> 00:42:24,089
there are these guys in<font color="#CCCCCC"> London</font><font color="#E5E5E5"> so not</font>

902
00:42:21,329 --> 00:42:26,760
<font color="#CCCCCC">enologist and Kenny Patterson already</font>

903
00:42:24,089 --> 00:42:28,859
found and attacked and we fixed<font color="#E5E5E5"> it but</font>

904
00:42:26,760 --> 00:42:32,930
it turned out<font color="#CCCCCC"> that what we are</font><font color="#E5E5E5"> talking</font>

905
00:42:28,859 --> 00:42:36,150
was<font color="#E5E5E5"> they are fixed implementation so</font>

906
00:42:32,930 --> 00:42:39,029
really if you are<font color="#CCCCCC"> a programming language</font>

907
00:42:36,150 --> 00:42:40,410
guy and you say all constant time<font color="#CCCCCC"> did</font>

908
00:42:39,030 --> 00:42:42,210
you say oh this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not such an</font>

909
00:42:40,410 --> 00:42:44,460
interesting<font color="#E5E5E5"> property it's very easy to</font>

910
00:42:42,210 --> 00:42:48,480
achieve<font color="#CCCCCC"> it turns out that it's not so</font>

911
00:42:44,460 --> 00:42:49,980
it's a very useful to have tool and more

912
00:42:48,480 --> 00:42:54,059
or<font color="#E5E5E5"> less you can</font><font color="#CCCCCC"> have a great tool by</font>

913
00:42:49,980 --> 00:42:56,339
being extremely<font color="#E5E5E5"> lazy so we actually</font>

914
00:42:54,059 --> 00:42:58,980
<font color="#E5E5E5">realized that there is some work which</font>

915
00:42:56,339 --> 00:43:03,180
has been<font color="#CCCCCC"> done in the context of compiler</font>

916
00:42:58,980 --> 00:43:05,540
verification by Zack central in 2008 and

917
00:43:03,180 --> 00:43:09,230
it was<font color="#E5E5E5"> tailored</font>

918
00:43:05,540 --> 00:43:11,630
check that<font color="#E5E5E5"> compiler optimization is</font>

919
00:43:09,230 --> 00:43:15,250
correct<font color="#E5E5E5"> and it turns out that what they</font>

920
00:43:11,630 --> 00:43:18,200
<font color="#CCCCCC">propose is sound</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> complete for</font>

921
00:43:15,250 --> 00:43:21,260
relatively<font color="#E5E5E5"> complete for verifying</font>

922
00:43:18,200 --> 00:43:24,470
program counter security and the way it

923
00:43:21,260 --> 00:43:27,830
works is like<font color="#E5E5E5"> you start from one program</font>

924
00:43:24,470 --> 00:43:31,009
and you again actually build another

925
00:43:27,830 --> 00:43:33,200
program<font color="#CCCCCC"> that emulates two runs of this</font>

926
00:43:31,010 --> 00:43:35,930
program<font color="#CCCCCC"> okay so you just run the program</font>

927
00:43:33,200 --> 00:43:38,270
twice in<font color="#E5E5E5"> lockstep and every time you</font>

928
00:43:35,930 --> 00:43:40,940
<font color="#E5E5E5">reach a branching statement you</font><font color="#CCCCCC"> just</font>

929
00:43:38,270 --> 00:43:43,820
have to check<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the two execution</font>

930
00:43:40,940 --> 00:43:45,980
take the same<font color="#CCCCCC"> runs okay and every time</font>

931
00:43:43,820 --> 00:43:48,590
<font color="#E5E5E5">you do a memory access</font><font color="#CCCCCC"> you just have</font><font color="#E5E5E5"> to</font>

932
00:43:45,980 --> 00:43:51,710
check<font color="#E5E5E5"> that the memory access is made at</font>

933
00:43:48,590 --> 00:43:54,080
<font color="#E5E5E5">the same location okay so this is</font>

934
00:43:51,710 --> 00:43:56,450
<font color="#E5E5E5">something which</font><font color="#CCCCCC"> is beautiful</font><font color="#E5E5E5"> its sound</font>

935
00:43:54,080 --> 00:43:59,870
<font color="#E5E5E5">and relatively complete which means like</font>

936
00:43:56,450 --> 00:44:03,710
if the<font color="#CCCCCC"> transformed program</font><font color="#E5E5E5"> doesn't raise</font>

937
00:43:59,870 --> 00:44:05,810
any assertion failure then the original

938
00:44:03,710 --> 00:44:09,440
<font color="#CCCCCC">program is constant time</font><font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> even</font>

939
00:44:05,810 --> 00:44:11,600
<font color="#CCCCCC">only if it supports</font><font color="#E5E5E5"> advanced notion of</font>

940
00:44:09,440 --> 00:44:16,460
constant time<font color="#E5E5E5"> for example you can have</font>

941
00:44:11,600 --> 00:44:18,500
<font color="#E5E5E5">some public outputs and with a very thin</font>

942
00:44:16,460 --> 00:44:20,740
<font color="#E5E5E5">layer of code we've been able</font><font color="#CCCCCC"> to</font>

943
00:44:18,500 --> 00:44:23,390
implement this off on top of an existing

944
00:44:20,740 --> 00:44:26,600
<font color="#E5E5E5">verification framework for</font><font color="#CCCCCC"> LLVM called</font>

945
00:44:23,390 --> 00:44:29,690
smack<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> applied these to many</font>

946
00:44:26,600 --> 00:44:31,970
libraries<font color="#E5E5E5"> so that was really nice</font><font color="#CCCCCC"> we</font>

947
00:44:29,690 --> 00:44:35,420
have some ongoing<font color="#CCCCCC"> work trying to</font><font color="#E5E5E5"> extend</font>

948
00:44:31,970 --> 00:44:37,339
this<font color="#E5E5E5"> to a vector instruction and we also</font>

949
00:44:35,420 --> 00:44:40,760
applied this to super code but because

950
00:44:37,340 --> 00:44:43,040
in<font color="#E5E5E5"> supercops you actually don't know at</font>

951
00:44:40,760 --> 00:44:44,870
<font color="#E5E5E5">least we don't know whether this</font>

952
00:44:43,040 --> 00:44:47,300
implementation<font color="#E5E5E5"> are meant to be constant</font>

953
00:44:44,870 --> 00:44:49,880
<font color="#CCCCCC">time or</font><font color="#E5E5E5"> not it would be nice to</font><font color="#CCCCCC"> have a</font>

954
00:44:47,300 --> 00:44:51,910
counter<font color="#E5E5E5"> example generation so</font><font color="#CCCCCC"> that</font>

955
00:44:49,880 --> 00:44:54,290
actually<font color="#E5E5E5"> if there is an implementation</font>

956
00:44:51,910 --> 00:44:56,120
<font color="#CCCCCC">for which</font><font color="#E5E5E5"> our tool says</font><font color="#CCCCCC"> it's not</font>

957
00:44:54,290 --> 00:44:58,400
constant time we can<font color="#CCCCCC"> actually come up</font>

958
00:44:56,120 --> 00:45:00,170
<font color="#E5E5E5">with</font><font color="#CCCCCC"> values that we can run and so it's</font>

959
00:44:58,400 --> 00:45:07,460
<font color="#E5E5E5">not constant</font><font color="#CCCCCC"> type</font><font color="#E5E5E5"> so this is what we try</font>

960
00:45:00,170 --> 00:45:08,840
to do we also<font color="#E5E5E5"> doing a lot of work and</font>

961
00:45:07,460 --> 00:45:11,750
this<font color="#CCCCCC"> is something which</font><font color="#E5E5E5"> I got extremely</font>

962
00:45:08,840 --> 00:45:13,400
<font color="#E5E5E5">excited</font><font color="#CCCCCC"> about as well well basically</font><font color="#E5E5E5"> I</font>

963
00:45:11,750 --> 00:45:14,630
get excited<font color="#E5E5E5"> about everything so I should</font>

964
00:45:13,400 --> 00:45:17,900
stop saying<font color="#CCCCCC"> it</font>

965
00:45:14,630 --> 00:45:19,360
differential power analysis so there's a

966
00:45:17,900 --> 00:45:22,060
lot<font color="#E5E5E5"> of work this is</font>

967
00:45:19,360 --> 00:45:23,470
<font color="#CCCCCC">being done</font><font color="#E5E5E5"> sometimes in the chest</font>

968
00:45:22,060 --> 00:45:26,160
community but<font color="#E5E5E5"> you get also a lot of</font>

969
00:45:23,470 --> 00:45:29,069
<font color="#E5E5E5">paper here</font><font color="#CCCCCC"> I'm trying to a building mast</font>

970
00:45:26,160 --> 00:45:33,009
implementation to make sure that

971
00:45:29,070 --> 00:45:37,390
programs<font color="#CCCCCC"> are resistance against the</font><font color="#E5E5E5"> GPA</font>

972
00:45:33,010 --> 00:45:40,090
<font color="#CCCCCC">okay and so that</font><font color="#E5E5E5"> I said</font><font color="#CCCCCC"> two models</font><font color="#E5E5E5"> the</font>

973
00:45:37,390 --> 00:45:43,600
thresholds probing model which was

974
00:45:40,090 --> 00:45:46,230
introduced<font color="#E5E5E5"> by</font><font color="#CCCCCC"> ish is</font><font color="#E5E5E5"> high and Wagner</font>

975
00:45:43,600 --> 00:45:49,299
from<font color="#E5E5E5"> years ago</font><font color="#CCCCCC"> and which</font><font color="#E5E5E5"> is a beautiful</font>

976
00:45:46,230 --> 00:45:51,670
<font color="#E5E5E5">theoretical models for analyzing mask</font>

977
00:45:49,300 --> 00:45:54,790
implementation<font color="#E5E5E5"> and there is this a more</font>

978
00:45:51,670 --> 00:45:56,290
practical noisy leakage model<font color="#E5E5E5"> that was</font>

979
00:45:54,790 --> 00:46:00,520
introduced<font color="#E5E5E5"> later and there is this</font>

980
00:45:56,290 --> 00:46:01,930
beautiful<font color="#E5E5E5"> result at Euro</font><font color="#CCCCCC"> Crete 2014</font>

981
00:46:00,520 --> 00:46:04,509
showing that<font color="#E5E5E5"> the two models are</font>

982
00:46:01,930 --> 00:46:05,890
equivalent<font color="#E5E5E5"> so it's kind of you get the</font>

983
00:46:04,510 --> 00:46:08,580
best<font color="#E5E5E5"> of the two worlds you</font><font color="#CCCCCC"> have this</font>

984
00:46:05,890 --> 00:46:10,180
theoretical model which you can use for

985
00:46:08,580 --> 00:46:13,380
<font color="#E5E5E5">verification and then you get good</font>

986
00:46:10,180 --> 00:46:17,680
<font color="#E5E5E5">guarantees and so we decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try to</font>

987
00:46:13,380 --> 00:46:20,260
understand essentially<font color="#E5E5E5"> whether we could</font>

988
00:46:17,680 --> 00:46:23,410
apply our techniques for<font color="#E5E5E5"> mask</font>

989
00:46:20,260 --> 00:46:27,520
implementation in the<font color="#E5E5E5"> threshold probing</font>

990
00:46:23,410 --> 00:46:28,569
model and we didn't<font color="#E5E5E5"> get the</font><font color="#CCCCCC"> idea just by</font>

991
00:46:27,520 --> 00:46:30,700
ourselves

992
00:46:28,570 --> 00:46:33,540
there has been some<font color="#CCCCCC"> prior</font><font color="#E5E5E5"> work on this</font>

993
00:46:30,700 --> 00:46:37,450
there is<font color="#E5E5E5"> this a very nice paper at chess</font>

994
00:46:33,540 --> 00:46:39,790
2012<font color="#E5E5E5"> who actually</font><font color="#CCCCCC"> uses</font><font color="#E5E5E5"> language</font><font color="#CCCCCC"> based</font>

995
00:46:37,450 --> 00:46:43,509
technique to analyze mask implementation

996
00:46:39,790 --> 00:46:45,670
there was a<font color="#CCCCCC"> follow-up</font><font color="#E5E5E5"> the year after</font>

997
00:46:43,510 --> 00:46:48,880
with a tool<font color="#CCCCCC"> called slice which I also</font>

998
00:46:45,670 --> 00:46:50,290
believe was presented at chess 2013<font color="#E5E5E5"> and</font>

999
00:46:48,880 --> 00:46:56,080
then there were some formal methods

1000
00:46:50,290 --> 00:46:58,300
people<font color="#E5E5E5"> that also published at CAF 2014</font>

1001
00:46:56,080 --> 00:47:00,160
so this is this was very<font color="#E5E5E5"> exciting work</font>

1002
00:46:58,300 --> 00:47:05,380
for us because essentially we realized

1003
00:47:00,160 --> 00:47:08,770
here<font color="#E5E5E5"> that what</font><font color="#CCCCCC"> masking</font><font color="#E5E5E5"> security deliver</font>

1004
00:47:05,380 --> 00:47:11,350
is something which<font color="#E5E5E5"> is exactly an</font>

1005
00:47:08,770 --> 00:47:14,350
instance of something<font color="#E5E5E5"> that people</font><font color="#CCCCCC"> have</font>

1006
00:47:11,350 --> 00:47:16,299
been considering in our community<font color="#E5E5E5"> and so</font>

1007
00:47:14,350 --> 00:47:18,430
<font color="#CCCCCC">that work was limited to low orders and</font>

1008
00:47:16,300 --> 00:47:20,170
does<font color="#E5E5E5"> not compose well</font><font color="#CCCCCC"> so we wanted to</font>

1009
00:47:18,430 --> 00:47:22,200
<font color="#E5E5E5">try to see whether we could do better by</font>

1010
00:47:20,170 --> 00:47:27,190
just<font color="#CCCCCC"> looking at more advanced technique</font>

1011
00:47:22,200 --> 00:47:29,500
so essentially the idea<font color="#E5E5E5"> of probing</font>

1012
00:47:27,190 --> 00:47:30,670
security<font color="#CCCCCC"> I'm not going to go so</font><font color="#E5E5E5"> much</font>

1013
00:47:29,500 --> 00:47:34,680
<font color="#CCCCCC">into</font>

1014
00:47:30,670 --> 00:47:37,960
details here but very often

1015
00:47:34,680 --> 00:47:41,080
<font color="#CCCCCC">cryptographic notion of</font><font color="#E5E5E5"> security are</font>

1016
00:47:37,960 --> 00:47:44,470
stated<font color="#E5E5E5"> in a simulation</font><font color="#CCCCCC"> based tile we</font>

1017
00:47:41,080 --> 00:47:47,650
don't<font color="#E5E5E5"> state our notion in the simulation</font>

1018
00:47:44,470 --> 00:47:49,149
<font color="#CCCCCC">base tile</font><font color="#E5E5E5"> we normally state them as</font>

1019
00:47:47,650 --> 00:47:52,210
<font color="#E5E5E5">something which is called to safety</font>

1020
00:47:49,150 --> 00:47:55,480
which means we consider<font color="#CCCCCC"> to execution of</font>

1021
00:47:52,210 --> 00:47:57,430
the program<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> assume the inputs are</font>

1022
00:47:55,480 --> 00:47:59,500
related and<font color="#E5E5E5"> we look at the relationship</font>

1023
00:47:57,430 --> 00:48:02,410
between the<font color="#CCCCCC"> output and so it looks very</font>

1024
00:47:59,500 --> 00:48:04,120
<font color="#CCCCCC">different but in practice it isn't to</font>

1025
00:48:02,410 --> 00:48:06,879
convince<font color="#CCCCCC"> yourself there is</font><font color="#E5E5E5"> this very</font>

1026
00:48:04,120 --> 00:48:09,790
simplified case here where you have<font color="#CCCCCC"> a</font>

1027
00:48:06,880 --> 00:48:11,820
function<font color="#CCCCCC"> that takes</font><font color="#E5E5E5"> two argument and if</font>

1028
00:48:09,790 --> 00:48:15,610
you're a cryptographer<font color="#CCCCCC"> you will say</font><font color="#E5E5E5"> oh</font>

1029
00:48:11,820 --> 00:48:18,400
<font color="#E5E5E5">there exists a function</font><font color="#CCCCCC"> that only</font><font color="#E5E5E5"> takes</font>

1030
00:48:15,610 --> 00:48:22,000
the second argument<font color="#CCCCCC"> such that for every</font>

1031
00:48:18,400 --> 00:48:23,200
two element a1 and a2<font color="#CCCCCC"> f of a 1 a</font><font color="#E5E5E5"> 2 is</font>

1032
00:48:22,000 --> 00:48:26,080
<font color="#CCCCCC">equal to g of a 2</font>

1033
00:48:23,200 --> 00:48:28,480
<font color="#CCCCCC">ok so this is kind of the natural</font><font color="#E5E5E5"> way</font>

1034
00:48:26,080 --> 00:48:31,000
you would<font color="#E5E5E5"> think about for us we will</font>

1035
00:48:28,480 --> 00:48:35,310
think<font color="#E5E5E5"> about to run so we would say oh</font>

1036
00:48:31,000 --> 00:48:40,330
you give us a 1 a prime 1 and a 2<font color="#E5E5E5"> and</font>

1037
00:48:35,310 --> 00:48:41,430
they<font color="#E5E5E5"> have the same result ok and so</font>

1038
00:48:40,330 --> 00:48:43,120
there<font color="#E5E5E5"> are kind of two</font><font color="#CCCCCC"> different</font>

1039
00:48:41,430 --> 00:48:46,060
formulation but<font color="#E5E5E5"> they end up being</font>

1040
00:48:43,120 --> 00:48:48,970
equivalent<font color="#E5E5E5"> and this is something which</font>

1041
00:48:46,060 --> 00:48:53,830
for<font color="#E5E5E5"> us allows</font><font color="#CCCCCC"> us to take your definition</font>

1042
00:48:48,970 --> 00:48:56,700
and move them<font color="#CCCCCC"> to our</font><font color="#E5E5E5"> world and so using</font>

1043
00:48:53,830 --> 00:49:00,730
this we've<font color="#CCCCCC"> been building</font><font color="#E5E5E5"> a tool which</font>

1044
00:48:56,700 --> 00:49:02,980
uses a probabilistic non-approved

1045
00:49:00,730 --> 00:49:05,920
probabilistic non-interference<font color="#CCCCCC"> and the</font>

1046
00:49:02,980 --> 00:49:08,560
basic<font color="#CCCCCC"> idea is</font><font color="#E5E5E5"> like when you do masking</font>

1047
00:49:05,920 --> 00:49:11,140
security you have to look at every

1048
00:49:08,560 --> 00:49:14,470
possible<font color="#CCCCCC"> set of key observation</font><font color="#E5E5E5"> so this</font>

1049
00:49:11,140 --> 00:49:16,810
is something<font color="#CCCCCC"> that grows very very fast</font>

1050
00:49:14,470 --> 00:49:19,990
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so when you build a tool you just</font>

1051
00:49:16,810 --> 00:49:22,240
<font color="#E5E5E5">have to find a way to deal</font><font color="#CCCCCC"> with lots of</font>

1052
00:49:19,990 --> 00:49:24,549
these sets at the<font color="#E5E5E5"> same time so what we</font>

1053
00:49:22,240 --> 00:49:27,250
did is<font color="#E5E5E5"> like instead of looking at sets</font>

1054
00:49:24,550 --> 00:49:30,720
of T observation<font color="#E5E5E5"> we were looking at very</font>

1055
00:49:27,250 --> 00:49:32,920
large<font color="#E5E5E5"> sets</font><font color="#CCCCCC"> under a</font><font color="#E5E5E5"> certain criteria</font><font color="#CCCCCC"> and</font>

1056
00:49:30,720 --> 00:49:35,140
<font color="#CCCCCC">just making sure that we were covering</font>

1057
00:49:32,920 --> 00:49:36,460
<font color="#E5E5E5">everything so in practice there is no</font>

1058
00:49:35,140 --> 00:49:38,980
reason why<font color="#CCCCCC"> we would run</font><font color="#E5E5E5"> better than</font>

1059
00:49:36,460 --> 00:49:40,630
verifying all the<font color="#E5E5E5"> sets sorry in theory</font>

1060
00:49:38,980 --> 00:49:42,520
<font color="#E5E5E5">there is no reason why it would</font><font color="#CCCCCC"> be</font>

1061
00:49:40,630 --> 00:49:44,590
better<font color="#E5E5E5"> but in practice it worked much</font>

1062
00:49:42,520 --> 00:49:48,640
<font color="#CCCCCC">better</font><font color="#E5E5E5"> so we were able</font><font color="#CCCCCC"> to</font>

1063
00:49:44,590 --> 00:49:52,120
lies<font color="#CCCCCC"> a lot of implementation so you see</font>

1064
00:49:48,640 --> 00:49:55,480
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> if we would be looking at</font>

1065
00:49:52,120 --> 00:49:57,609
<font color="#CCCCCC">these s box</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> third autumn asking you</font>

1066
00:49:55,480 --> 00:50:00,760
will have to verify probabilistic

1067
00:49:57,610 --> 00:50:02,410
non-interference<font color="#CCCCCC"> two billion times which</font>

1068
00:50:00,760 --> 00:50:05,650
is<font color="#CCCCCC"> not a very good</font><font color="#E5E5E5"> idea</font>

1069
00:50:02,410 --> 00:50:09,430
so our technique allows us to do

1070
00:50:05,650 --> 00:50:12,850
<font color="#E5E5E5">something which is much better and then</font>

1071
00:50:09,430 --> 00:50:15,100
the last thing which we've been<font color="#E5E5E5"> doing</font>

1072
00:50:12,850 --> 00:50:17,770
and has been presented at CCS last year

1073
00:50:15,100 --> 00:50:20,799
was trying to build full implementation

1074
00:50:17,770 --> 00:50:23,259
<font color="#E5E5E5">because this first work was</font><font color="#CCCCCC"> actually</font>

1075
00:50:20,800 --> 00:50:25,450
looking<font color="#E5E5E5"> at the masking security of one</font>

1076
00:50:23,260 --> 00:50:27,310
gadget<font color="#E5E5E5"> but really what you want is</font><font color="#CCCCCC"> to</font>

1077
00:50:25,450 --> 00:50:29,919
achieve<font color="#E5E5E5"> masking security for full</font>

1078
00:50:27,310 --> 00:50:32,890
implementation<font color="#E5E5E5"> and so what we did is we</font>

1079
00:50:29,920 --> 00:50:36,280
introduced a<font color="#E5E5E5"> new security notion which</font>

1080
00:50:32,890 --> 00:50:37,750
is compositional<font color="#CCCCCC"> I will show in my next</font>

1081
00:50:36,280 --> 00:50:40,180
<font color="#E5E5E5">slides that there is a problem with</font>

1082
00:50:37,750 --> 00:50:42,730
<font color="#E5E5E5">composing</font><font color="#CCCCCC"> mask gadget so we have a new</font>

1083
00:50:40,180 --> 00:50:44,680
notion that make things<font color="#CCCCCC"> compose that</font>

1084
00:50:42,730 --> 00:50:45,760
means you can<font color="#CCCCCC"> analyze smaller components</font>

1085
00:50:44,680 --> 00:50:48,609
and then you will make<font color="#E5E5E5"> sure the full</font>

1086
00:50:45,760 --> 00:50:50,740
implementation is fine this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> something</font>

1087
00:50:48,610 --> 00:50:53,200
which is fully automated and<font color="#E5E5E5"> we have a</font>

1088
00:50:50,740 --> 00:50:55,330
type systems that make sure<font color="#E5E5E5"> that the</font>

1089
00:50:53,200 --> 00:50:56,950
implementations are secure<font color="#CCCCCC"> and one thing</font>

1090
00:50:55,330 --> 00:50:59,740
which<font color="#CCCCCC"> is nice by are having full</font>

1091
00:50:56,950 --> 00:51:01,720
<font color="#CCCCCC">automation and type system is also there</font>

1092
00:50:59,740 --> 00:51:04,959
is<font color="#CCCCCC"> something which is very</font><font color="#E5E5E5"> costly when</font>

1093
00:51:01,720 --> 00:51:07,629
you deal the mask implementation is to

1094
00:51:04,960 --> 00:51:08,890
<font color="#E5E5E5">insert refreshing gadget so refreshing</font>

1095
00:51:07,630 --> 00:51:10,450
gadget they don't change<font color="#E5E5E5"> the</font>

1096
00:51:08,890 --> 00:51:13,960
<font color="#CCCCCC">functionality but they increase security</font>

1097
00:51:10,450 --> 00:51:15,700
<font color="#CCCCCC">but this</font><font color="#E5E5E5"> has a cost and if you have a</font>

1098
00:51:13,960 --> 00:51:17,620
type system<font color="#CCCCCC"> you can't let the type</font>

1099
00:51:15,700 --> 00:51:19,779
system tell you<font color="#E5E5E5"> yeah you should put a</font>

1100
00:51:17,620 --> 00:51:21,370
refreshing gadget here or you don't<font color="#CCCCCC"> need</font>

1101
00:51:19,780 --> 00:51:25,180
to put a refreshing gadget so you get

1102
00:51:21,370 --> 00:51:28,770
much more<font color="#E5E5E5"> efficient implementation and</font>

1103
00:51:25,180 --> 00:51:31,930
we used it<font color="#CCCCCC"> to mask a lot of</font>

1104
00:51:28,770 --> 00:51:35,080
implementation<font color="#CCCCCC"> AES catch Eric Simon's</font>

1105
00:51:31,930 --> 00:51:37,089
<font color="#CCCCCC">spec and so on and we get</font><font color="#E5E5E5"> generated code</font>

1106
00:51:35,080 --> 00:51:40,120
which is a reasonably fast so for

1107
00:51:37,090 --> 00:51:44,170
example if you mask<font color="#E5E5E5"> AES at order</font><font color="#CCCCCC"> 7 it's</font>

1108
00:51:40,120 --> 00:51:45,730
about 100 times<font color="#E5E5E5"> slower than</font><font color="#CCCCCC"> a mask</font>

1109
00:51:44,170 --> 00:51:47,470
implementation<font color="#CCCCCC"> I don't know whether</font>

1110
00:51:45,730 --> 00:51:50,830
<font color="#CCCCCC">people are interested to masks at other</font>

1111
00:51:47,470 --> 00:51:52,540
<font color="#CCCCCC">seven but we have a tool we just</font><font color="#E5E5E5"> have to</font>

1112
00:51:50,830 --> 00:51:56,319
give which<font color="#E5E5E5"> other we want to mask so we</font>

1113
00:51:52,540 --> 00:51:57,960
try it<font color="#E5E5E5"> and so I don't think I still</font><font color="#CCCCCC"> have</font>

1114
00:51:56,320 --> 00:52:01,690
<font color="#CCCCCC">20 minutes</font><font color="#E5E5E5"> left</font>

1115
00:51:57,960 --> 00:52:06,070
probably much less<font color="#CCCCCC"> ten minutes okay so</font>

1116
00:52:01,690 --> 00:52:10,359
<font color="#CCCCCC">let me</font><font color="#E5E5E5"> go very quickly</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the problem</font>

1117
00:52:06,070 --> 00:52:13,770
with<font color="#E5E5E5"> composition so essentially and I'm</font>

1118
00:52:10,359 --> 00:52:16,740
going<font color="#CCCCCC"> to use this simulation-based</font>

1119
00:52:13,770 --> 00:52:20,109
<font color="#CCCCCC">notion but</font><font color="#E5E5E5"> so you have a</font><font color="#CCCCCC"> composition of</font>

1120
00:52:16,740 --> 00:52:22,990
gadgets and<font color="#E5E5E5"> the adversary is</font><font color="#CCCCCC"> going to</font>

1121
00:52:20,109 --> 00:52:27,220
make<font color="#E5E5E5"> a less</font><font color="#CCCCCC"> than T observation which are</font>

1122
00:52:22,990 --> 00:52:29,500
split across the different<font color="#E5E5E5"> gadgets and</font>

1123
00:52:27,220 --> 00:52:33,040
you would like<font color="#E5E5E5"> to so you know that each</font>

1124
00:52:29,500 --> 00:52:34,750
gadget is a<font color="#CCCCCC"> achieves probing security</font>

1125
00:52:33,040 --> 00:52:37,720
and you would like<font color="#CCCCCC"> to show</font><font color="#E5E5E5"> that the</font>

1126
00:52:34,750 --> 00:52:39,880
result achieves probing security but the

1127
00:52:37,720 --> 00:52:43,029
way it works with<font color="#E5E5E5"> the standard</font>

1128
00:52:39,880 --> 00:52:47,590
<font color="#CCCCCC">definition is like</font><font color="#E5E5E5"> essentially you have</font>

1129
00:52:43,030 --> 00:52:51,040
to carry back all<font color="#E5E5E5"> this number of</font><font color="#CCCCCC"> US</font>

1130
00:52:47,590 --> 00:52:53,230
observation<font color="#E5E5E5"> app so when you're doing</font>

1131
00:52:51,040 --> 00:52:56,170
<font color="#CCCCCC">your simulation based proof</font><font color="#E5E5E5"> so you have</font>

1132
00:52:53,230 --> 00:52:58,540
<font color="#CCCCCC">this 33 observation here so if you just</font>

1133
00:52:56,170 --> 00:53:01,359
use<font color="#CCCCCC"> the fact that the</font><font color="#E5E5E5"> first gadget is a</font>

1134
00:52:58,540 --> 00:53:04,660
kind of non interfering you will go and

1135
00:53:01,359 --> 00:53:08,410
get T 2 plus<font color="#CCCCCC"> T 3 here</font><font color="#E5E5E5"> and then when you</font>

1136
00:53:04,660 --> 00:53:13,210
arrive<font color="#CCCCCC"> at T 1</font><font color="#E5E5E5"> you get</font><font color="#CCCCCC"> G 1 plus T 2 plus</font>

1137
00:53:08,410 --> 00:53:16,868
2 T 3<font color="#CCCCCC"> okay so you already kind</font><font color="#E5E5E5"> of unable</font>

1138
00:53:13,210 --> 00:53:20,530
to proceed<font color="#CCCCCC"> okay so this is an</font>

1139
00:53:16,869 --> 00:53:22,540
observation<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> not ours but which</font>

1140
00:53:20,530 --> 00:53:25,990
says that<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> just take</font><font color="#CCCCCC"> non</font>

1141
00:53:22,540 --> 00:53:29,770
<font color="#CCCCCC">interference</font><font color="#E5E5E5"> or masking security as</font>

1142
00:53:25,990 --> 00:53:32,229
standard Lee stated composition does not

1143
00:53:29,770 --> 00:53:34,660
work well so what<font color="#E5E5E5"> we propose is</font><font color="#CCCCCC"> a notion</font>

1144
00:53:32,230 --> 00:53:37,260
<font color="#E5E5E5">of strong</font><font color="#CCCCCC"> non interference</font><font color="#E5E5E5"> and the basic</font>

1145
00:53:34,660 --> 00:53:40,060
<font color="#E5E5E5">idea here is like</font><font color="#CCCCCC"> we are</font><font color="#E5E5E5"> going to</font>

1146
00:53:37,260 --> 00:53:43,900
distinguish<font color="#E5E5E5"> between internal observation</font>

1147
00:53:40,060 --> 00:53:47,890
and external observation<font color="#CCCCCC"> ok and the</font>

1148
00:53:43,900 --> 00:53:51,820
notion of simulation so you just need as

1149
00:53:47,890 --> 00:53:54,850
many inputs<font color="#CCCCCC"> as the number of</font><font color="#E5E5E5"> internal</font>

1150
00:53:51,820 --> 00:53:56,590
observation<font color="#E5E5E5"> to do the simulation so you</font>

1151
00:53:54,850 --> 00:53:58,569
can<font color="#E5E5E5"> think about as a strong run</font>

1152
00:53:56,590 --> 00:54:01,420
interference gadget<font color="#E5E5E5"> as some kind of</font>

1153
00:53:58,570 --> 00:54:03,390
barrier and this<font color="#E5E5E5"> barrier means that</font>

1154
00:54:01,420 --> 00:54:06,790
everything which have been<font color="#E5E5E5"> observed</font>

1155
00:54:03,390 --> 00:54:10,250
<font color="#E5E5E5">observing</font><font color="#CCCCCC"> up to then is</font><font color="#E5E5E5"> going to be lost</font>

1156
00:54:06,790 --> 00:54:12,650
<font color="#CCCCCC">once</font><font color="#E5E5E5"> you cross a strong non interference</font>

1157
00:54:10,250 --> 00:54:14,690
and<font color="#E5E5E5"> fortunately enough</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not a</font>

1158
00:54:12,650 --> 00:54:17,210
<font color="#E5E5E5">completely crazy notion but because a</font>

1159
00:54:14,690 --> 00:54:18,710
lot of not all of them obviously<font color="#E5E5E5"> but</font><font color="#CCCCCC"> a</font>

1160
00:54:17,210 --> 00:54:20,300
lot<font color="#CCCCCC"> of gadgets</font><font color="#E5E5E5"> from the literature</font>

1161
00:54:18,710 --> 00:54:24,200
already<font color="#CCCCCC"> achieved this notion of strong</font>

1162
00:54:20,300 --> 00:54:26,030
non-interference<font color="#CCCCCC"> and so once you</font><font color="#E5E5E5"> have</font>

1163
00:54:24,200 --> 00:54:27,830
<font color="#E5E5E5">strong</font><font color="#CCCCCC"> non-interference again you have</font>

1164
00:54:26,030 --> 00:54:30,020
this setting<font color="#CCCCCC"> here we've put a refreshing</font>

1165
00:54:27,830 --> 00:54:31,670
gadget<font color="#E5E5E5"> this refreshing gadget is</font>

1166
00:54:30,020 --> 00:54:33,500
strongly non-interfering so you just

1167
00:54:31,670 --> 00:54:36,230
care about<font color="#E5E5E5"> the number of internal</font>

1168
00:54:33,500 --> 00:54:38,900
observation and so when you go<font color="#CCCCCC"> have</font><font color="#E5E5E5"> up</font>

1169
00:54:36,230 --> 00:54:41,570
here<font color="#CCCCCC"> this t3 observation they will go</font>

1170
00:54:38,900 --> 00:54:46,460
here<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you get T 2 plus</font><font color="#E5E5E5"> T 3</font><font color="#CCCCCC"> but then</font>

1171
00:54:41,570 --> 00:54:48,740
when you go here you<font color="#E5E5E5"> actually get TR</font>

1172
00:54:46,460 --> 00:54:50,900
because<font color="#CCCCCC"> the</font><font color="#E5E5E5"> T 3 don't count because</font><font color="#CCCCCC"> of</font>

1173
00:54:48,740 --> 00:54:54,259
<font color="#CCCCCC">the notion of strong</font><font color="#E5E5E5"> non-interference so</font>

1174
00:54:50,900 --> 00:54:58,070
when you arrive<font color="#CCCCCC"> at</font><font color="#E5E5E5"> a 1 you get T 1 plus</font>

1175
00:54:54,260 --> 00:55:01,940
T<font color="#E5E5E5"> 2 plus</font><font color="#CCCCCC"> T 3 plus</font><font color="#E5E5E5"> TR and when you go</font>

1176
00:54:58,070 --> 00:55:05,240
<font color="#E5E5E5">there at the top you get again</font><font color="#CCCCCC"> G</font><font color="#E5E5E5"> 0 plus</font>

1177
00:55:01,940 --> 00:55:07,370
<font color="#E5E5E5">T 1 plus T 2 plus</font><font color="#CCCCCC"> T 3 plus</font><font color="#E5E5E5"> G R which is</font>

1178
00:55:05,240 --> 00:55:09,080
<font color="#E5E5E5">smaller than T which</font><font color="#CCCCCC"> is what you wanted</font>

1179
00:55:07,370 --> 00:55:12,259
<font color="#CCCCCC">so you're done so this</font><font color="#E5E5E5"> is how you</font>

1180
00:55:09,080 --> 00:55:14,330
achieve compositionality with this

1181
00:55:12,260 --> 00:55:17,450
notion of strong<font color="#CCCCCC"> non-interference so</font><font color="#E5E5E5"> I</font>

1182
00:55:14,330 --> 00:55:19,490
think<font color="#E5E5E5"> this was very cool because we have</font>

1183
00:55:17,450 --> 00:55:22,669
this nice notion and this is one of<font color="#CCCCCC"> the</font>

1184
00:55:19,490 --> 00:55:25,669
example where I<font color="#E5E5E5"> think we can kind of</font>

1185
00:55:22,670 --> 00:55:27,860
beat cryptographers<font color="#E5E5E5"> like what we</font>

1186
00:55:25,670 --> 00:55:31,910
<font color="#CCCCCC">proposed is advancing</font><font color="#E5E5E5"> the state of the</font>

1187
00:55:27,860 --> 00:55:34,640
yacht<font color="#E5E5E5"> maybe I mean I hope that</font><font color="#CCCCCC"> people</font>

1188
00:55:31,910 --> 00:55:36,980
like<font color="#E5E5E5"> strong non-interference</font><font color="#CCCCCC"> and so that</font>

1189
00:55:34,640 --> 00:55:39,529
was very nice for<font color="#CCCCCC"> us like we</font><font color="#E5E5E5"> don't feel</font>

1190
00:55:36,980 --> 00:55:42,530
like<font color="#CCCCCC"> a donkey's</font><font color="#E5E5E5"> following smart</font>

1191
00:55:39,530 --> 00:55:47,060
cryptographers for 15<font color="#E5E5E5"> years maybe we</font>

1192
00:55:42,530 --> 00:55:51,410
have something<font color="#CCCCCC"> to say ok</font><font color="#E5E5E5"> so I think this</font>

1193
00:55:47,060 --> 00:55:53,299
<font color="#E5E5E5">is something very nice and so there is</font>

1194
00:55:51,410 --> 00:55:55,640
some<font color="#CCCCCC"> photo</font><font color="#E5E5E5"> work that needs to be done</font>

1195
00:55:53,300 --> 00:55:57,710
but in general<font color="#E5E5E5"> one thing that makes me</font>

1196
00:55:55,640 --> 00:55:59,960
very<font color="#CCCCCC"> excited as well is like if you're a</font>

1197
00:55:57,710 --> 00:56:01,040
programming language guy really the

1198
00:55:59,960 --> 00:56:02,750
first<font color="#E5E5E5"> thing which would have been</font>

1199
00:56:01,040 --> 00:56:04,940
<font color="#CCCCCC">looking at</font><font color="#E5E5E5"> is not this reduction is</font>

1200
00:56:02,750 --> 00:56:09,380
proof we should be have<font color="#E5E5E5"> been looking at</font>

1201
00:56:04,940 --> 00:56:10,790
kind of<font color="#CCCCCC"> information theoretic</font><font color="#E5E5E5"> security</font>

1202
00:56:09,380 --> 00:56:14,180
this<font color="#E5E5E5"> is kind of the thing which is</font>

1203
00:56:10,790 --> 00:56:16,100
<font color="#E5E5E5">closest to actually what we know how to</font>

1204
00:56:14,180 --> 00:56:18,740
do and I<font color="#E5E5E5"> actually believe there's a lot</font>

1205
00:56:16,100 --> 00:56:21,140
<font color="#CCCCCC">of opportunity to try</font><font color="#E5E5E5"> to look there and</font>

1206
00:56:18,740 --> 00:56:22,910
<font color="#E5E5E5">apply</font><font color="#CCCCCC"> our technique so for example it</font>

1207
00:56:21,140 --> 00:56:24,420
will<font color="#E5E5E5"> be interesting</font><font color="#CCCCCC"> to look</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> MPC and</font>

1208
00:56:22,910 --> 00:56:26,100
<font color="#E5E5E5">see whether</font><font color="#CCCCCC"> our techniques can</font>

1209
00:56:24,420 --> 00:56:29,190
apply<font color="#E5E5E5"> there</font><font color="#CCCCCC"> I think there's a lot</font><font color="#E5E5E5"> of</font>

1210
00:56:26,100 --> 00:56:32,040
<font color="#E5E5E5">potential here</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the other thing which</font>

1211
00:56:29,190 --> 00:56:33,990
I find a kind<font color="#CCCCCC"> of exciting is like our</font>

1212
00:56:32,040 --> 00:56:36,180
techniques<font color="#E5E5E5"> also apply to active attacks</font>

1213
00:56:33,990 --> 00:56:40,830
so<font color="#E5E5E5"> you know when you look at fault</font>

1214
00:56:36,180 --> 00:56:44,220
injection<font color="#CCCCCC"> if so in it's more in software</font>

1215
00:56:40,830 --> 00:56:45,900
engineering<font color="#CCCCCC"> but people in software</font>

1216
00:56:44,220 --> 00:56:48,660
<font color="#E5E5E5">engineering and looking at this problem</font>

1217
00:56:45,900 --> 00:56:50,700
of program<font color="#E5E5E5"> repair so you have a program</font>

1218
00:56:48,660 --> 00:56:53,009
the program<font color="#E5E5E5"> doesn't do what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want and</font>

1219
00:56:50,700 --> 00:56:55,080
you have<font color="#E5E5E5"> automated methods to fix it and</font>

1220
00:56:53,010 --> 00:56:59,220
<font color="#E5E5E5">like fault injection you</font><font color="#CCCCCC"> can think about</font>

1221
00:56:55,080 --> 00:57:00,690
<font color="#E5E5E5">it does adversarial program repair like</font>

1222
00:56:59,220 --> 00:57:02,580
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have a program</font><font color="#CCCCCC"> you cannot break it</font>

1223
00:57:00,690 --> 00:57:05,340
<font color="#CCCCCC">you inject fault so that you can break</font>

1224
00:57:02,580 --> 00:57:09,240
it<font color="#E5E5E5"> and so you can transfer</font><font color="#CCCCCC"> this program</font>

1225
00:57:05,340 --> 00:57:11,010
<font color="#CCCCCC">repair</font><font color="#E5E5E5"> stuff in the setting of crypto</font>

1226
00:57:09,240 --> 00:57:13,649
<font color="#E5E5E5">and you can come</font><font color="#CCCCCC"> up with new and</font>

1227
00:57:11,010 --> 00:57:19,920
<font color="#E5E5E5">interesting attacks</font><font color="#CCCCCC"> so this is a very</font>

1228
00:57:13,650 --> 00:57:22,680
good and so to wrap up<font color="#E5E5E5"> so I think what</font>

1229
00:57:19,920 --> 00:57:24,960
we've been doing is<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> a we hope we</font>

1230
00:57:22,680 --> 00:57:27,210
have been doing<font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of a building</font>

1231
00:57:24,960 --> 00:57:30,330
useful<font color="#E5E5E5"> foundation and tools for</font>

1232
00:57:27,210 --> 00:57:32,550
achieving<font color="#E5E5E5"> higher strength crypto</font><font color="#CCCCCC"> looking</font>

1233
00:57:30,330 --> 00:57:34,470
at provable security and practical

1234
00:57:32,550 --> 00:57:38,270
crypto<font color="#CCCCCC"> but also at reducing</font><font color="#E5E5E5"> the gaps</font>

1235
00:57:34,470 --> 00:57:43,410
between the<font color="#CCCCCC"> two and there's a lot</font><font color="#E5E5E5"> of</font>

1236
00:57:38,270 --> 00:57:47,180
very exciting<font color="#CCCCCC"> direction</font><font color="#E5E5E5"> so I hope we</font>

1237
00:57:43,410 --> 00:57:50,759
still have fun<font color="#E5E5E5"> for another 15 years</font><font color="#CCCCCC"> but</font>

1238
00:57:47,180 --> 00:57:52,890
so kind<font color="#E5E5E5"> of directions which very</font>

1239
00:57:50,760 --> 00:57:54,750
interested in<font color="#CCCCCC"> are kind of adding more</font>

1240
00:57:52,890 --> 00:57:58,770
automation<font color="#E5E5E5"> and looking at different</font>

1241
00:57:54,750 --> 00:58:01,920
application domains<font color="#E5E5E5"> we</font><font color="#CCCCCC"> also looking with</font>

1242
00:57:58,770 --> 00:58:05,250
a number<font color="#CCCCCC"> of people</font><font color="#E5E5E5"> as carrying these</font>

1243
00:58:01,920 --> 00:58:07,590
methods for<font color="#E5E5E5"> high speed implementation so</font>

1244
00:58:05,250 --> 00:58:09,090
there is<font color="#E5E5E5"> this idea of developing a</font>

1245
00:58:07,590 --> 00:58:10,860
programming<font color="#CCCCCC"> language</font><font color="#E5E5E5"> called Jasmine</font>

1246
00:58:09,090 --> 00:58:13,950
which looks<font color="#CCCCCC"> very much like</font><font color="#E5E5E5"> chasm but</font>

1247
00:58:10,860 --> 00:58:16,560
which is certified<font color="#CCCCCC"> and so on and that</font>

1248
00:58:13,950 --> 00:58:18,419
<font color="#E5E5E5">would be very interesting</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> already make</font>

1249
00:58:16,560 --> 00:58:21,360
mention<font color="#E5E5E5"> language</font><font color="#CCCCCC"> based methods for</font>

1250
00:58:18,420 --> 00:58:22,770
information theoretic security and I

1251
00:58:21,360 --> 00:58:26,520
didn't<font color="#E5E5E5"> talk too much</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I</font>

1252
00:58:22,770 --> 00:58:28,530
also think<font color="#E5E5E5"> automated synthesis</font><font color="#CCCCCC"> of crypto</font>

1253
00:58:26,520 --> 00:58:31,770
construction is something<font color="#E5E5E5"> very excited</font>

1254
00:58:28,530 --> 00:58:34,710
and exciting sorry<font color="#CCCCCC"> and there has been</font>

1255
00:58:31,770 --> 00:58:37,680
some great work on<font color="#E5E5E5"> this</font><font color="#CCCCCC"> so there was a</font>

1256
00:58:34,710 --> 00:58:38,289
<font color="#CCCCCC">CCS paper for</font><font color="#E5E5E5"> actually there was a</font>

1257
00:58:37,680 --> 00:58:40,359
previous

1258
00:58:38,289 --> 00:58:43,109
by the same group of<font color="#CCCCCC"> people at Maryland</font>

1259
00:58:40,359 --> 00:58:45,189
<font color="#E5E5E5">but they look at the kind of</font>

1260
00:58:43,109 --> 00:58:47,859
authenticated encryption and they came

1261
00:58:45,189 --> 00:58:49,839
<font color="#E5E5E5">up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> lots of great construction fully</font>

1262
00:58:47,859 --> 00:58:52,449
automatically<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that was a very</font>

1263
00:58:49,839 --> 00:58:55,359
<font color="#CCCCCC">amazing I actually</font><font color="#E5E5E5"> got the best paper</font>

1264
00:58:52,449 --> 00:58:57,219
award at CCS and there is also this

1265
00:58:55,359 --> 00:59:02,049
crypto paper this<font color="#E5E5E5"> year which I already</font>

1266
00:58:57,219 --> 00:59:03,939
<font color="#CCCCCC">mentioned</font><font color="#E5E5E5"> and I'm also very hopeful we</font>

1267
00:59:02,049 --> 00:59:05,529
<font color="#CCCCCC">can do</font><font color="#E5E5E5"> something for quantum</font>

1268
00:59:03,939 --> 00:59:07,629
cryptography<font color="#E5E5E5"> because we have a great</font>

1269
00:59:05,529 --> 00:59:10,330
name<font color="#CCCCCC"> for the tool so now we have to do</font>

1270
00:59:07,630 --> 00:59:19,849
the research<font color="#CCCCCC"> thanks for your time</font>

1271
00:59:10,330 --> 00:59:23,660
[Applause]

1272
00:59:19,849 --> 00:59:23,660
so we have time for questions

1273
00:59:43,780 --> 00:59:51,580
any question so I<font color="#E5E5E5"> I have a question so</font>

1274
00:59:48,410 --> 00:59:54,920
if I want<font color="#E5E5E5"> to verify</font><font color="#CCCCCC"> a side</font><font color="#E5E5E5"> channel</font>

1275
00:59:51,580 --> 00:59:58,160
<font color="#E5E5E5">implementation using your tool mask very</font>

1276
00:59:54,920 --> 01:00:00,230
well what would<font color="#E5E5E5"> be basically the the</font>

1277
00:59:58,160 --> 01:00:03,700
complexity for<font color="#CCCCCC"> me as a cryptographer</font><font color="#E5E5E5"> do</font>

1278
01:00:00,230 --> 01:00:05,780
we have to implement the the the

1279
01:00:03,700 --> 01:00:08,810
algorithm<font color="#E5E5E5"> and a special programming</font>

1280
01:00:05,780 --> 01:00:18,830
language or what is the the learning

1281
01:00:08,810 --> 01:00:20,450
<font color="#E5E5E5">curve</font><font color="#CCCCCC"> to refer so</font><font color="#E5E5E5"> far sorry we are right</font>

1282
01:00:18,830 --> 01:00:24,170
now I don't<font color="#CCCCCC"> know whether this is the</font>

1283
01:00:20,450 --> 01:00:30,020
<font color="#CCCCCC">best choice</font><font color="#E5E5E5"> but what we did is our tool</font>

1284
01:00:24,170 --> 01:00:31,370
works on<font color="#CCCCCC"> C programs</font><font color="#E5E5E5"> so it's probably not</font>

1285
01:00:30,020 --> 01:00:33,680
<font color="#E5E5E5">the</font><font color="#CCCCCC"> best choice if you want to do</font>

1286
01:00:31,370 --> 01:00:37,520
<font color="#E5E5E5">something kind of industrial or whatever</font>

1287
01:00:33,680 --> 01:00:42,049
<font color="#CCCCCC">but</font><font color="#E5E5E5"> so it's written in a kind of let's</font>

1288
01:00:37,520 --> 01:00:44,950
say<font color="#E5E5E5"> comfortable subset of C and so it</font>

1289
01:00:42,050 --> 01:00:49,640
should not<font color="#CCCCCC"> be too difficult</font><font color="#E5E5E5"> to write</font>

1290
01:00:44,950 --> 01:00:52,730
programs in<font color="#E5E5E5"> this fragment and we have</font>

1291
01:00:49,640 --> 01:00:53,870
kind of plans<font color="#E5E5E5"> to extend the slowly the</font>

1292
01:00:52,730 --> 01:00:57,920
language<font color="#E5E5E5"> but I don't think it's</font>

1293
01:00:53,870 --> 01:01:00,220
<font color="#E5E5E5">extremely painful</font><font color="#CCCCCC"> we have more much more</font>

1294
01:00:57,920 --> 01:01:09,440
painful tools to use if you're

1295
01:01:00,220 --> 01:01:12,259
interested when when you<font color="#CCCCCC"> talk about the</font>

1296
01:01:09,440 --> 01:01:14,480
relational decomposition<font color="#E5E5E5"> do</font><font color="#CCCCCC"> you include</font>

1297
01:01:12,260 --> 01:01:17,680
<font color="#E5E5E5">the</font><font color="#CCCCCC"> platform's tougher was that separate</font>

1298
01:01:14,480 --> 01:01:21,490
like<font color="#CCCCCC"> are more x86 you were saying the</font>

1299
01:01:17,680 --> 01:01:24,109
platform was very difficult to include

1300
01:01:21,490 --> 01:01:27,819
<font color="#CCCCCC">or you mean in</font><font color="#E5E5E5"> the verification</font><font color="#CCCCCC"> work</font>

1301
01:01:24,110 --> 01:01:34,910
that we did in<font color="#CCCCCC"> this particular example</font>

1302
01:01:27,820 --> 01:01:40,640
<font color="#E5E5E5">the</font><font color="#CCCCCC"> M ECBC we did not so we generate</font>

1303
01:01:34,910 --> 01:01:43,670
assembly level<font color="#E5E5E5"> code and our adversary is</font>

1304
01:01:40,640 --> 01:01:46,910
just an adversary that has access<font color="#CCCCCC"> let's</font>

1305
01:01:43,670 --> 01:01:49,400
say to the trace<font color="#E5E5E5"> so far as the trace is</font>

1306
01:01:46,910 --> 01:01:52,609
just<font color="#CCCCCC"> a sequence</font><font color="#E5E5E5"> of a program point and</font>

1307
01:01:49,400 --> 01:01:55,520
the memory access<font color="#E5E5E5"> in this particular</font>

1308
01:01:52,610 --> 01:01:59,270
work<font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> look</font>

1309
01:01:55,520 --> 01:02:02,720
at justifying<font color="#E5E5E5"> this adversary but we have</font>

1310
01:01:59,270 --> 01:02:04,820
an independent work with colleagues<font color="#E5E5E5"> in</font>

1311
01:02:02,720 --> 01:02:06,680
Uruguay<font color="#E5E5E5"> I forgot to mention</font><font color="#CCCCCC"> that some of</font>

1312
01:02:04,820 --> 01:02:10,490
this<font color="#E5E5E5"> work is also with people</font><font color="#CCCCCC"> in Uruguay</font>

1313
01:02:06,680 --> 01:02:13,430
<font color="#E5E5E5">where we actually saw that</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> model</font>

1314
01:02:10,490 --> 01:02:18,439
that<font color="#E5E5E5"> we have is meaningful</font><font color="#CCCCCC"> for a</font><font color="#E5E5E5"> certain</font>

1315
01:02:13,430 --> 01:02:20,120
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> virtualization platform so this</font>

1316
01:02:18,440 --> 01:02:21,980
is<font color="#E5E5E5"> something that has been formalized in</font>

1317
01:02:20,120 --> 01:02:23,720
the core proof<font color="#CCCCCC"> assistant building on top</font>

1318
01:02:21,980 --> 01:02:26,320
of concert that's quite a big

1319
01:02:23,720 --> 01:02:26,319
<font color="#E5E5E5">development</font>

