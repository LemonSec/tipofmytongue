1
00:00:00,500 --> 00:00:06,299
thank you very<font color="#CCCCCC"> much</font><font color="#E5E5E5"> for this</font><font color="#CCCCCC"> so this</font>

2
00:00:04,740 --> 00:00:09,389
<font color="#E5E5E5">talk is about public key encryption as</font>

3
00:00:06,299 --> 00:00:11,400
<font color="#CCCCCC">maybe the session</font><font color="#E5E5E5"> already suggests the</font>

4
00:00:09,389 --> 00:00:13,530
<font color="#E5E5E5">accepted security notion for public key</font>

5
00:00:11,400 --> 00:00:15,590
encryption is<font color="#E5E5E5"> indistinct ability against</font>

6
00:00:13,530 --> 00:00:19,470
chosen<font color="#E5E5E5"> ciphertext</font><font color="#CCCCCC"> text</font><font color="#E5E5E5"> so just a brief</font>

7
00:00:15,590 --> 00:00:21,750
recap what that is<font color="#E5E5E5"> so it's the same</font>

8
00:00:19,470 --> 00:00:24,060
pictures as in the as in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> RAM session</font>

9
00:00:21,750 --> 00:00:26,310
<font color="#E5E5E5">talk about fair security notions but</font>

10
00:00:24,060 --> 00:00:27,750
this time<font color="#E5E5E5"> maybe we want to take the</font>

11
00:00:26,310 --> 00:00:29,279
perspective<font color="#E5E5E5"> of the Challenger so the</font>

12
00:00:27,750 --> 00:00:32,340
good guys<font color="#E5E5E5"> the Challenger and the bad guy</font>

13
00:00:29,279 --> 00:00:34,079
is the<font color="#E5E5E5"> adversary that's exchanged</font><font color="#CCCCCC"> so the</font>

14
00:00:32,340 --> 00:00:36,239
adversary<font color="#E5E5E5"> gets a</font><font color="#CCCCCC"> public key outputs to</font>

15
00:00:34,079 --> 00:00:38,280
messages and has to decide whether he

16
00:00:36,239 --> 00:00:40,620
<font color="#E5E5E5">gets an encryption of the left one or of</font>

17
00:00:38,280 --> 00:00:44,309
the white one<font color="#E5E5E5"> and in the end the</font>

18
00:00:40,620 --> 00:00:46,680
attacker will output<font color="#E5E5E5"> this bit</font><font color="#CCCCCC"> we say</font>

19
00:00:44,309 --> 00:00:48,570
that the scheme<font color="#CCCCCC"> is secure if no attack</font>

20
00:00:46,680 --> 00:00:50,180
so if no efficient attack can do this

21
00:00:48,570 --> 00:00:53,760
better<font color="#CCCCCC"> than guessing essentially up to</font>

22
00:00:50,180 --> 00:00:56,250
<font color="#CCCCCC">non</font><font color="#E5E5E5"> up to negligible</font><font color="#CCCCCC"> differences of</font>

23
00:00:53,760 --> 00:00:58,108
<font color="#E5E5E5">course and the first observation is that</font>

24
00:00:56,250 --> 00:01:00,059
<font color="#E5E5E5">this security definition is simple and</font>

25
00:00:58,109 --> 00:01:01,199
you can<font color="#E5E5E5"> even make</font><font color="#CCCCCC"> it simpler if you if</font>

26
00:01:00,059 --> 00:01:03,449
you<font color="#CCCCCC"> consider for instance key</font>

27
00:01:01,199 --> 00:01:07,020
encapsulation mechanisms<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it also</font>

28
00:01:03,449 --> 00:01:09,360
covers<font color="#E5E5E5"> only a non practical scenario it</font>

29
00:01:07,020 --> 00:01:11,729
cover covers a one user one ciphertext

30
00:01:09,360 --> 00:01:14,850
scenario<font color="#E5E5E5"> and so it's not really a</font>

31
00:01:11,729 --> 00:01:16,170
realistic security notion in itself<font color="#CCCCCC"> you</font>

32
00:01:14,850 --> 00:01:17,640
can always say that<font color="#CCCCCC"> you know this is</font>

33
00:01:16,170 --> 00:01:19,350
like<font color="#CCCCCC"> the standard argument</font><font color="#E5E5E5"> if you're</font>

34
00:01:17,640 --> 00:01:21,119
<font color="#E5E5E5">only interested in polynomial security</font>

35
00:01:19,350 --> 00:01:25,520
then you can argue that with hybrid

36
00:01:21,119 --> 00:01:29,340
argument<font color="#E5E5E5"> security in this</font><font color="#CCCCCC"> NCCA sorry</font>

37
00:01:25,520 --> 00:01:31,140
<font color="#CCCCCC">security in this</font><font color="#E5E5E5"> NCCA sense also gives</font>

38
00:01:29,340 --> 00:01:34,470
you security in a multi-user<font color="#E5E5E5"> multi</font>

39
00:01:31,140 --> 00:01:36,000
ciphertext scenario<font color="#E5E5E5"> however it does</font><font color="#CCCCCC"> not</font>

40
00:01:34,470 --> 00:01:37,798
give you quantitatively the<font color="#E5E5E5"> same</font>

41
00:01:36,000 --> 00:01:39,150
security<font color="#E5E5E5"> guarantees you</font><font color="#CCCCCC"> will lose due to</font>

42
00:01:37,799 --> 00:01:42,240
the hybrid<font color="#E5E5E5"> argument you will lose a bit</font>

43
00:01:39,150 --> 00:01:44,100
of<font color="#E5E5E5"> concrete security so you will get</font>

44
00:01:42,240 --> 00:01:46,500
<font color="#E5E5E5">security guarantees that degrade in the</font>

45
00:01:44,100 --> 00:01:48,720
scenario size and in particular if you

46
00:01:46,500 --> 00:01:52,619
don't know<font color="#E5E5E5"> into which kind of setting</font>

47
00:01:48,720 --> 00:01:54,539
into which size<font color="#CCCCCC"> this into which in into</font>

48
00:01:52,619 --> 00:01:56,490
a setting of which size your scheme is

49
00:01:54,540 --> 00:01:59,090
<font color="#CCCCCC">going to be deployed you may have a hard</font>

50
00:01:56,490 --> 00:02:02,070
time<font color="#E5E5E5"> giving reasonable security</font>

51
00:01:59,090 --> 00:02:06,240
<font color="#E5E5E5">reasonable key length recommendations in</font>

52
00:02:02,070 --> 00:02:09,628
order to give guaranteed or to assure

53
00:02:06,240 --> 00:02:11,459
<font color="#CCCCCC">guaranteed security ok so what we're</font>

54
00:02:09,628 --> 00:02:13,280
<font color="#CCCCCC">interested in this talk</font><font color="#E5E5E5"> is tightly</font>

55
00:02:11,459 --> 00:02:15,110
secure public<font color="#CCCCCC"> key encryption and</font>

56
00:02:13,280 --> 00:02:16,670
particular for at<font color="#E5E5E5"> least for the purpose</font>

57
00:02:15,110 --> 00:02:19,580
<font color="#E5E5E5">of this talks or papers</font><font color="#CCCCCC"> of a bit</font><font color="#E5E5E5"> more</font>

58
00:02:16,670 --> 00:02:21,829
general<font color="#E5E5E5"> but for the purpose of this talk</font>

59
00:02:19,580 --> 00:02:23,870
<font color="#E5E5E5">we're interested in multi challenge</font>

60
00:02:21,830 --> 00:02:26,270
chosen ciphertext security this means

61
00:02:23,870 --> 00:02:31,550
it's the<font color="#E5E5E5"> same as before</font><font color="#CCCCCC"> but the</font>

62
00:02:26,270 --> 00:02:33,860
adversary gets<font color="#E5E5E5"> many encryptions</font><font color="#CCCCCC"> of pairs</font>

63
00:02:31,550 --> 00:02:35,360
of messages or of one message<font color="#E5E5E5"> where the</font>

64
00:02:33,860 --> 00:02:37,340
adversary selects pairs so this

65
00:02:35,360 --> 00:02:39,440
encryption<font color="#E5E5E5"> step is just repeated and he</font>

66
00:02:37,340 --> 00:02:41,060
always<font color="#E5E5E5"> gets an encryption of the left or</font>

67
00:02:39,440 --> 00:02:43,160
always<font color="#E5E5E5"> an encryption of</font><font color="#CCCCCC"> the right</font>

68
00:02:41,060 --> 00:02:45,350
message<font color="#E5E5E5"> and in the end he has to decide</font>

69
00:02:43,160 --> 00:02:47,540
<font color="#E5E5E5">which which</font><font color="#CCCCCC"> is which and this gives you</font>

70
00:02:45,350 --> 00:02:49,340
intuitively<font color="#E5E5E5"> this gives you secure</font>

71
00:02:47,540 --> 00:02:51,739
communication and setting with one user

72
00:02:49,340 --> 00:02:53,150
and many cipher texts in with the tight

73
00:02:51,739 --> 00:02:54,800
reduction so they are the security

74
00:02:53,150 --> 00:02:56,840
guarantees immediately<font color="#CCCCCC"> related to what</font>

75
00:02:54,800 --> 00:02:58,550
you would encounter in<font color="#E5E5E5"> an</font><font color="#CCCCCC"> application</font>

76
00:02:56,840 --> 00:03:01,160
with one user and many<font color="#CCCCCC"> ciphertext and</font>

77
00:02:58,550 --> 00:03:03,830
<font color="#E5E5E5">what we're</font><font color="#CCCCCC"> interested in is to get a</font>

78
00:03:01,160 --> 00:03:07,010
scheme<font color="#E5E5E5"> to get an encryption scheme with</font>

79
00:03:03,830 --> 00:03:09,530
a reduction<font color="#E5E5E5"> that</font><font color="#CCCCCC"> does not lose any that</font>

80
00:03:07,010 --> 00:03:11,810
does<font color="#E5E5E5"> not lose any factor</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> number</font>

81
00:03:09,530 --> 00:03:13,430
of<font color="#E5E5E5"> ciphertext</font><font color="#CCCCCC"> that the adversary gets</font><font color="#E5E5E5"> in</font>

82
00:03:11,810 --> 00:03:15,290
the number of<font color="#E5E5E5"> challenge ciphertext that</font>

83
00:03:13,430 --> 00:03:17,209
<font color="#CCCCCC">the adversary gets so we're</font><font color="#E5E5E5"> interested</font>

84
00:03:15,290 --> 00:03:19,340
in a reduction<font color="#CCCCCC"> to a standard assumption</font>

85
00:03:17,209 --> 00:03:21,049
for instance<font color="#CCCCCC"> DDH or any other</font><font color="#E5E5E5"> pick your</font>

86
00:03:19,340 --> 00:03:23,360
<font color="#E5E5E5">favorite computational assumption and</font>

87
00:03:21,049 --> 00:03:25,010
this reduction<font color="#E5E5E5"> should be tight</font><font color="#CCCCCC"> which</font>

88
00:03:23,360 --> 00:03:26,480
means that it does the security

89
00:03:25,010 --> 00:03:28,870
<font color="#E5E5E5">guarantees or the reduction loss does</font>

90
00:03:26,480 --> 00:03:31,190
not<font color="#E5E5E5"> depend on the</font><font color="#CCCCCC"> number of cipher texts</font>

91
00:03:28,870 --> 00:03:32,870
and in particular<font color="#E5E5E5"> this enables you to</font>

92
00:03:31,190 --> 00:03:36,680
give<font color="#E5E5E5"> security guarantees for scenarios</font>

93
00:03:32,870 --> 00:03:38,959
<font color="#E5E5E5">of a priori unknown size and the problem</font>

94
00:03:36,680 --> 00:03:40,970
with this is<font color="#CCCCCC"> that standard techniques to</font>

95
00:03:38,959 --> 00:03:43,040
prove chosen ciphertext security for

96
00:03:40,970 --> 00:03:45,140
public key<font color="#CCCCCC"> encryption</font><font color="#E5E5E5"> they do not give</font>

97
00:03:43,040 --> 00:03:47,780
you secure they do not give you a

98
00:03:45,140 --> 00:03:50,839
reduction<font color="#E5E5E5"> that</font><font color="#CCCCCC"> fulfills this property</font><font color="#E5E5E5"> I</font>

99
00:03:47,780 --> 00:03:52,609
<font color="#E5E5E5">can give you maybe a bit</font><font color="#CCCCCC"> more examples</font>

100
00:03:50,840 --> 00:03:54,200
or<font color="#CCCCCC"> humor examples for</font><font color="#E5E5E5"> that so first of</font>

101
00:03:52,609 --> 00:03:55,820
all the picture above changed a little

102
00:03:54,200 --> 00:03:57,798
bit<font color="#E5E5E5"> because now I've neglected the</font>

103
00:03:55,820 --> 00:03:59,870
decryption Oracle and I've neglected the

104
00:03:57,799 --> 00:04:03,140
public key and<font color="#E5E5E5"> the final decision I've</font>

105
00:03:59,870 --> 00:04:05,959
<font color="#E5E5E5">just focused on the encryption queries</font>

106
00:04:03,140 --> 00:04:08,000
so the adversary makes many<font color="#CCCCCC"> queries of</font>

107
00:04:05,959 --> 00:04:10,579
<font color="#E5E5E5">message pairs and then gets the</font>

108
00:04:08,000 --> 00:04:12,590
encryption<font color="#E5E5E5"> either in each case either of</font>

109
00:04:10,579 --> 00:04:16,820
the left or of the right message<font color="#E5E5E5"> and</font>

110
00:04:12,590 --> 00:04:19,130
always the<font color="#E5E5E5"> same if we want to construct</font>

111
00:04:16,820 --> 00:04:21,469
<font color="#E5E5E5">public key encryption then we have a</font>

112
00:04:19,130 --> 00:04:24,140
bunch of paradigms we could do this with

113
00:04:21,470 --> 00:04:26,560
a one<font color="#E5E5E5"> paradigm is that because it's</font>

114
00:04:24,140 --> 00:04:28,180
chosen ciphertext security<font color="#CCCCCC"> or in in that</font>

115
00:04:26,560 --> 00:04:30,010
<font color="#E5E5E5">Lema right that you need to answer</font>

116
00:04:28,180 --> 00:04:31,690
decryption queries in your security

117
00:04:30,010 --> 00:04:33,760
experiment in<font color="#E5E5E5"> your security reduction</font>

118
00:04:31,690 --> 00:04:35,830
but at the same<font color="#E5E5E5"> time you should not be</font>

119
00:04:33,760 --> 00:04:37,659
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to decrypt</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> challenge cipher</font>

120
00:04:35,830 --> 00:04:39,849
texts or you should at least<font color="#E5E5E5"> be able to</font>

121
00:04:37,660 --> 00:04:41,680
randomize<font color="#E5E5E5"> the challenge ciphertext in</font>

122
00:04:39,850 --> 00:04:43,210
some sense<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> the adversary</font><font color="#E5E5E5"> tells</font>

123
00:04:41,680 --> 00:04:46,600
you something new if the adversary tells

124
00:04:43,210 --> 00:04:48,760
you what was encrypted<font color="#E5E5E5"> so one paradigm</font>

125
00:04:46,600 --> 00:04:51,850
<font color="#E5E5E5">to do this is inspired by the identity</font>

126
00:04:48,760 --> 00:04:53,349
<font color="#CCCCCC">based encryption</font><font color="#E5E5E5"> setting is that you</font>

127
00:04:51,850 --> 00:04:55,930
have a reduction<font color="#E5E5E5"> which knows a punctured</font>

128
00:04:53,350 --> 00:04:57,940
secret key such that you can answer all

129
00:04:55,930 --> 00:04:59,680
decription queries but the secret key<font color="#CCCCCC"> is</font>

130
00:04:57,940 --> 00:05:01,120
punctured in the sense<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> the</font>

131
00:04:59,680 --> 00:05:03,130
<font color="#CCCCCC">challenged</font><font color="#E5E5E5"> ciphertext it will not work</font>

132
00:05:01,120 --> 00:05:05,200
it<font color="#E5E5E5"> will just give</font><font color="#CCCCCC"> you some division by</font>

133
00:05:03,130 --> 00:05:07,389
zero<font color="#E5E5E5"> error or something some syntax</font>

134
00:05:05,200 --> 00:05:09,159
<font color="#CCCCCC">error solely the decryption key will not</font>

135
00:05:07,389 --> 00:05:10,960
work<font color="#E5E5E5"> for one</font><font color="#CCCCCC"> particular cipher</font><font color="#E5E5E5"> text and</font>

136
00:05:09,160 --> 00:05:12,639
that's<font color="#E5E5E5"> the cipher text</font><font color="#CCCCCC"> that you can</font>

137
00:05:10,960 --> 00:05:14,530
<font color="#CCCCCC">randomize</font><font color="#E5E5E5"> in the reduction or that's the</font>

138
00:05:12,639 --> 00:05:16,150
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> that you can</font><font color="#CCCCCC"> argue that the</font>

139
00:05:14,530 --> 00:05:19,380
adversary tells you something new<font color="#CCCCCC"> if the</font>

140
00:05:16,150 --> 00:05:21,669
adversary tells tell you what's inside

141
00:05:19,380 --> 00:05:24,729
unfortunately this only<font color="#E5E5E5"> allows you to</font>

142
00:05:21,669 --> 00:05:26,169
<font color="#E5E5E5">randomize one ciphertext at a time so</font>

143
00:05:24,729 --> 00:05:27,700
the ideas and<font color="#E5E5E5"> all these experiments you</font>

144
00:05:26,169 --> 00:05:30,849
<font color="#E5E5E5">want to randomize all those</font><font color="#CCCCCC"> change</font>

145
00:05:27,700 --> 00:05:33,010
<font color="#CCCCCC">cipher text but this punctured secret</font>

146
00:05:30,850 --> 00:05:34,570
key approach only<font color="#E5E5E5"> gives you a means to</font>

147
00:05:33,010 --> 00:05:38,349
randomize one<font color="#E5E5E5"> star for text at a time</font>

148
00:05:34,570 --> 00:05:40,690
<font color="#E5E5E5">similarly if you construct your</font>

149
00:05:38,350 --> 00:05:43,180
encryption<font color="#E5E5E5"> scheme from in the hash flow</font>

150
00:05:40,690 --> 00:05:45,430
system<font color="#E5E5E5"> regime or with hash</font><font color="#CCCCCC"> two systems</font>

151
00:05:43,180 --> 00:05:46,960
then the strategy<font color="#CCCCCC"> is a bit</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> so</font>

152
00:05:45,430 --> 00:05:47,890
there the reduction always knows<font color="#CCCCCC"> the</font>

153
00:05:46,960 --> 00:05:51,099
full secret key

154
00:05:47,890 --> 00:05:53,200
but somehow<font color="#E5E5E5"> makes the challenge or one</font>

155
00:05:51,100 --> 00:05:55,720
challenge ciphertext special and then

156
00:05:53,200 --> 00:05:59,260
kind of you<font color="#E5E5E5"> you offload additional</font>

157
00:05:55,720 --> 00:06:01,360
entropy in<font color="#E5E5E5"> the secret key into</font><font color="#CCCCCC"> the</font>

158
00:05:59,260 --> 00:06:02,740
encryption of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> ciphertext so it's a</font>

159
00:06:01,360 --> 00:06:05,139
bit funny<font color="#CCCCCC"> because you use then the</font>

160
00:06:02,740 --> 00:06:07,330
<font color="#E5E5E5">secret key</font><font color="#CCCCCC"> to create encryption queries</font>

161
00:06:05,139 --> 00:06:09,729
and that<font color="#E5E5E5"> secret key</font><font color="#CCCCCC"> that secret key</font>

162
00:06:07,330 --> 00:06:11,109
<font color="#E5E5E5">makes the challenge cipher</font><font color="#CCCCCC"> that works on</font>

163
00:06:09,729 --> 00:06:13,389
<font color="#E5E5E5">the</font><font color="#CCCCCC"> challenge ciphertext in a special</font>

164
00:06:11,110 --> 00:06:15,910
way such that<font color="#E5E5E5"> additional entropy</font><font color="#CCCCCC"> and the</font>

165
00:06:13,389 --> 00:06:18,850
secret key is<font color="#E5E5E5"> kind of reflected then in</font>

166
00:06:15,910 --> 00:06:20,620
this challenge<font color="#E5E5E5"> encryption but also this</font>

167
00:06:18,850 --> 00:06:21,850
<font color="#CCCCCC">is</font><font color="#E5E5E5"> kind of an entropy argumented argues</font>

168
00:06:20,620 --> 00:06:23,440
that the secret key has more entropy

169
00:06:21,850 --> 00:06:25,300
<font color="#E5E5E5">than the public key and more than the</font>

170
00:06:23,440 --> 00:06:29,139
adversary<font color="#E5E5E5"> knows</font><font color="#CCCCCC"> I per our priori</font><font color="#E5E5E5"> and</font>

171
00:06:25,300 --> 00:06:30,789
<font color="#E5E5E5">this only gives you leverage to</font>

172
00:06:29,139 --> 00:06:33,669
randomize<font color="#E5E5E5"> a very limited number</font><font color="#CCCCCC"> of</font>

173
00:06:30,789 --> 00:06:35,320
<font color="#E5E5E5">cipher</font><font color="#CCCCCC"> texts or one at a time</font><font color="#E5E5E5"> so this</font>

174
00:06:33,669 --> 00:06:37,570
also<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> in a setting</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> you</font>

175
00:06:35,320 --> 00:06:39,740
want to where you want<font color="#E5E5E5"> to randomize many</font>

176
00:06:37,570 --> 00:06:41,599
<font color="#E5E5E5">Challenge cipher texts in in few</font>

177
00:06:39,740 --> 00:06:44,750
reduction steps with with<font color="#E5E5E5"> little</font>

178
00:06:41,599 --> 00:06:47,389
reduction loss<font color="#E5E5E5"> so then there's</font><font color="#CCCCCC"> an hour</font>

179
00:06:44,750 --> 00:06:49,759
young type double encryption<font color="#E5E5E5"> and maybe</font>

180
00:06:47,389 --> 00:06:51,800
this is a bit<font color="#E5E5E5"> already a kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a</font>

181
00:06:49,759 --> 00:06:55,490
complicated<font color="#E5E5E5"> description of the</font><font color="#CCCCCC"> gnar</font>

182
00:06:51,800 --> 00:06:57,440
<font color="#E5E5E5">young of the gnar young paradigm and</font>

183
00:06:55,490 --> 00:06:59,150
I'll go<font color="#E5E5E5"> into more details how this works</font>

184
00:06:57,440 --> 00:07:01,370
<font color="#CCCCCC">in in a few slides</font>

185
00:06:59,150 --> 00:07:04,669
so maybe<font color="#CCCCCC"> just ignore this for</font><font color="#E5E5E5"> the time</font>

186
00:07:01,370 --> 00:07:08,419
<font color="#E5E5E5">being</font><font color="#CCCCCC"> there's also something</font><font color="#E5E5E5"> with some</font>

187
00:07:04,669 --> 00:07:10,340
some very<font color="#CCCCCC"> old method</font><font color="#E5E5E5"> to to obtain chosen</font>

188
00:07:08,419 --> 00:07:11,508
ciphertext security<font color="#E5E5E5"> but it requires a</font>

189
00:07:10,340 --> 00:07:13,369
<font color="#E5E5E5">very strong zero knowledge</font>

190
00:07:11,509 --> 00:07:16,639
<font color="#CCCCCC">non-attractive</font><font color="#E5E5E5"> zero knowledge proof and</font>

191
00:07:13,370 --> 00:07:18,319
<font color="#E5E5E5">that's kind of the difficulty that</font><font color="#CCCCCC"> makes</font>

192
00:07:16,639 --> 00:07:20,900
everything very<font color="#CCCCCC"> hard when you go to the</font>

193
00:07:18,319 --> 00:07:22,759
multi<font color="#E5E5E5"> challenge setting</font><font color="#CCCCCC"> ok so what</font>

194
00:07:20,900 --> 00:07:25,940
what's what's in this work

195
00:07:22,759 --> 00:07:29,270
in<font color="#E5E5E5"> this work</font><font color="#CCCCCC"> okay so first I should</font>

196
00:07:25,940 --> 00:07:32,210
explain maybe<font color="#E5E5E5"> the table</font><font color="#CCCCCC"> so the known</font>

197
00:07:29,270 --> 00:07:33,859
schemes are in the upper part and green

198
00:07:32,210 --> 00:07:35,270
means the<font color="#E5E5E5"> green color</font><font color="#CCCCCC"> means this is</font>

199
00:07:33,860 --> 00:07:36,889
something<font color="#E5E5E5"> good</font><font color="#CCCCCC"> so of course there's</font>

200
00:07:35,270 --> 00:07:39,440
should be<font color="#E5E5E5"> several shades of green maybe</font>

201
00:07:36,889 --> 00:07:41,690
so<font color="#E5E5E5"> you have premise soup or Chris Ovid</font>

202
00:07:39,440 --> 00:07:43,639
estimate and<font color="#E5E5E5"> a</font><font color="#CCCCCC"> crucifer Desmet is one</font>

203
00:07:41,690 --> 00:07:44,750
group<font color="#E5E5E5"> elements this</font><font color="#CCCCCC"> is all in terms of</font>

204
00:07:43,639 --> 00:07:47,300
group elements in the<font color="#E5E5E5"> first two columns</font>

205
00:07:44,750 --> 00:07:48,560
here this is kind<font color="#CCCCCC"> of one</font><font color="#E5E5E5"> group element</font>

206
00:07:47,300 --> 00:07:50,240
better but it's all<font color="#E5E5E5"> gray so it's all</font>

207
00:07:48,560 --> 00:07:52,310
efficient it's all practical it's all

208
00:07:50,240 --> 00:07:54,560
something<font color="#CCCCCC"> we</font><font color="#E5E5E5"> could live with</font>

209
00:07:52,310 --> 00:07:56,479
then there's the red part which<font color="#CCCCCC"> says</font>

210
00:07:54,560 --> 00:07:58,190
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> something bad which means in a</font>

211
00:07:56,479 --> 00:07:59,240
<font color="#CCCCCC">Croma soup incur solid estimates on the</font>

212
00:07:58,190 --> 00:08:00,949
<font color="#E5E5E5">upper part these are</font><font color="#CCCCCC"> the</font>

213
00:07:59,240 --> 00:08:02,570
<font color="#CCCCCC">state-of-the-art</font><font color="#E5E5E5"> schemes</font><font color="#CCCCCC"> with a non</font>

214
00:08:00,949 --> 00:08:05,030
<font color="#CCCCCC">tight reduction you have a non tight</font>

215
00:08:02,570 --> 00:08:06,680
reduction and this<font color="#E5E5E5"> means that the</font>

216
00:08:05,030 --> 00:08:09,440
security guarantees degrade<font color="#CCCCCC"> in the</font>

217
00:08:06,680 --> 00:08:11,930
scenario size the assumptions from<font color="#CCCCCC"> which</font>

218
00:08:09,440 --> 00:08:14,000
we on which we rely<font color="#E5E5E5"> here they are very</font>

219
00:08:11,930 --> 00:08:15,800
very mild and and standard and<font color="#E5E5E5"> well</font>

220
00:08:14,000 --> 00:08:18,050
investigated so this is<font color="#E5E5E5"> already green</font>

221
00:08:15,800 --> 00:08:20,120
<font color="#E5E5E5">this is again green so then there's a</font>

222
00:08:18,050 --> 00:08:23,150
bunch of works on achieving tight

223
00:08:20,120 --> 00:08:25,099
security<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the problem with those was</font>

224
00:08:23,150 --> 00:08:25,460
that<font color="#CCCCCC"> something was</font><font color="#E5E5E5"> inefficient there all</font>

225
00:08:25,099 --> 00:08:27,740
the time

226
00:08:25,460 --> 00:08:31,520
<font color="#E5E5E5">so in the</font><font color="#CCCCCC"> beginning this</font><font color="#E5E5E5"> was sort of the</font>

227
00:08:27,740 --> 00:08:33,320
reduction<font color="#E5E5E5"> was very very tight so it just</font>

228
00:08:31,520 --> 00:08:35,809
lost a constant factor<font color="#E5E5E5"> but</font><font color="#CCCCCC"> then the</font>

229
00:08:33,320 --> 00:08:37,430
<font color="#CCCCCC">ciphertext was huge this relied on tree</font>

230
00:08:35,809 --> 00:08:39,649
<font color="#CCCCCC">based signatures</font><font color="#E5E5E5"> which were in the</font>

231
00:08:37,429 --> 00:08:41,649
<font color="#E5E5E5">ciphertext and this was this led to a</font>

232
00:08:39,649 --> 00:08:44,660
<font color="#E5E5E5">very large ciphertext this was improved</font>

233
00:08:41,649 --> 00:08:46,010
<font color="#E5E5E5">and</font><font color="#CCCCCC"> now we're in the</font><font color="#E5E5E5"> situation where you</font>

234
00:08:44,660 --> 00:08:48,949
can choose<font color="#E5E5E5"> whether you have a large</font>

235
00:08:46,010 --> 00:08:51,650
<font color="#E5E5E5">public key</font><font color="#CCCCCC"> or you have a</font><font color="#E5E5E5"> yeah still kind</font>

236
00:08:48,949 --> 00:08:52,170
of large ciphertext<font color="#E5E5E5"> and the other thing</font>

237
00:08:51,650 --> 00:08:54,329
is

238
00:08:52,170 --> 00:08:56,279
small again<font color="#CCCCCC"> and you have a you have</font>

239
00:08:54,329 --> 00:08:58,170
<font color="#E5E5E5">still a kind of a tight</font><font color="#CCCCCC"> reduction so</font>

240
00:08:56,279 --> 00:08:59,730
this is lambda<font color="#E5E5E5"> as a security parameter</font>

241
00:08:58,170 --> 00:09:01,709
so<font color="#CCCCCC"> this should</font><font color="#E5E5E5"> be something</font><font color="#CCCCCC"> like you</font>

242
00:08:59,730 --> 00:09:03,570
lose something like a hundred<font color="#E5E5E5"> or</font><font color="#CCCCCC"> so you</font>

243
00:09:01,709 --> 00:09:07,130
lose maybe like seven or eight bits in

244
00:09:03,570 --> 00:09:09,510
the of security<font color="#E5E5E5"> you do to the reduction</font>

245
00:09:07,130 --> 00:09:12,300
<font color="#CCCCCC">but</font><font color="#E5E5E5"> this is much better than losing</font><font color="#CCCCCC"> I</font>

246
00:09:09,510 --> 00:09:14,069
don't know<font color="#CCCCCC"> to then losing 30 or 40 bits</font>

247
00:09:12,300 --> 00:09:16,680
<font color="#CCCCCC">if you have a loss of Q here the</font><font color="#E5E5E5"> number</font>

248
00:09:14,070 --> 00:09:19,829
of encryption queries<font color="#CCCCCC"> okay so this work</font>

249
00:09:16,680 --> 00:09:22,410
what does this work do we<font color="#CCCCCC"> construct</font><font color="#E5E5E5"> new</font>

250
00:09:19,829 --> 00:09:23,670
schemes that<font color="#E5E5E5"> are bad in different</font>

251
00:09:22,410 --> 00:09:27,540
metrics are in a different<font color="#CCCCCC"> combination</font>

252
00:09:23,670 --> 00:09:29,760
<font color="#E5E5E5">of bad so one scheme still requires</font>

253
00:09:27,540 --> 00:09:30,990
pairings so<font color="#CCCCCC"> pfg means pairing friendly</font>

254
00:09:29,760 --> 00:09:32,670
group<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is not what we</font><font color="#E5E5E5"> would like to</font>

255
00:09:30,990 --> 00:09:34,339
<font color="#E5E5E5">have we would like I have a scheme based</font>

256
00:09:32,670 --> 00:09:36,569
on a standard assumption like<font color="#CCCCCC"> DDH</font>

257
00:09:34,339 --> 00:09:39,000
decision linear is not so bad<font color="#E5E5E5"> but it</font>

258
00:09:36,570 --> 00:09:40,529
requires you to use symmetric pairings

259
00:09:39,000 --> 00:09:42,750
this construction<font color="#E5E5E5"> and you you have a</font>

260
00:09:40,529 --> 00:09:45,329
pairing and this makes it<font color="#E5E5E5"> all pretty</font>

261
00:09:42,750 --> 00:09:46,889
inefficient<font color="#E5E5E5"> but still it's kind of six</font>

262
00:09:45,329 --> 00:09:48,569
group elements that's still<font color="#E5E5E5"> something</font>

263
00:09:46,889 --> 00:09:49,769
<font color="#CCCCCC">you could live with and the public key</font>

264
00:09:48,570 --> 00:09:53,880
<font color="#E5E5E5">is</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> kind of</font>

265
00:09:49,769 --> 00:09:56,790
<font color="#E5E5E5">somewhere between bad and good so this</font>

266
00:09:53,880 --> 00:09:59,010
<font color="#E5E5E5">is a new</font><font color="#CCCCCC"> new scheme we get in the in the</font>

267
00:09:56,790 --> 00:10:01,410
pairing regime and we also<font color="#E5E5E5"> get a new</font>

268
00:09:59,010 --> 00:10:03,660
scheme from<font color="#CCCCCC"> the DCR</font><font color="#E5E5E5"> assumption in fact</font>

269
00:10:01,410 --> 00:10:06,769
what's<font color="#E5E5E5"> interesting is</font><font color="#CCCCCC"> that the main</font>

270
00:10:03,660 --> 00:10:10,290
contribution of this work is that we

271
00:10:06,769 --> 00:10:12,180
present generic new techniques<font color="#E5E5E5"> to solve</font>

272
00:10:10,290 --> 00:10:13,709
<font color="#E5E5E5">the problem and to</font><font color="#CCCCCC"> randomize</font><font color="#E5E5E5"> challenge</font>

273
00:10:12,180 --> 00:10:14,969
ciphertext and<font color="#E5E5E5"> in particular as a</font>

274
00:10:13,709 --> 00:10:17,250
demonstration<font color="#E5E5E5"> this gives the first</font>

275
00:10:14,970 --> 00:10:18,810
tightly secure public<font color="#E5E5E5"> encryption scheme</font>

276
00:10:17,250 --> 00:10:22,019
so tightly chosen ciphertext secure

277
00:10:18,810 --> 00:10:24,810
public<font color="#CCCCCC"> encryption scheme</font><font color="#E5E5E5"> from a DC</font><font color="#CCCCCC"> R or</font>

278
00:10:22,019 --> 00:10:26,250
DC are like assumption<font color="#E5E5E5"> okay so maybe</font>

279
00:10:24,810 --> 00:10:27,689
it's conceptually very<font color="#E5E5E5"> interesting but</font>

280
00:10:26,250 --> 00:10:30,079
this<font color="#E5E5E5"> is I'm not</font><font color="#CCCCCC"> suggesting that</font><font color="#E5E5E5"> this is</font>

281
00:10:27,690 --> 00:10:33,209
practical<font color="#E5E5E5"> in the end so you still have</font>

282
00:10:30,079 --> 00:10:34,439
30 group elements<font color="#E5E5E5"> and ciphertext</font><font color="#CCCCCC"> so on</font>

283
00:10:33,209 --> 00:10:35,640
the remaining talk I<font color="#E5E5E5"> will just give</font><font color="#CCCCCC"> you</font>

284
00:10:34,440 --> 00:10:37,670
like<font color="#CCCCCC"> a hint or a glimpse at the</font>

285
00:10:35,640 --> 00:10:41,220
<font color="#E5E5E5">techniques</font>

286
00:10:37,670 --> 00:10:42,660
<font color="#E5E5E5">okay so basic strategy</font><font color="#CCCCCC"> is so the first</font>

287
00:10:41,220 --> 00:10:45,410
<font color="#CCCCCC">part</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just copied you can ignore the</font>

288
00:10:42,660 --> 00:10:45,410
first<font color="#E5E5E5"> part of the slide</font>

289
00:10:45,600 --> 00:10:51,329
it's the idea is to<font color="#E5E5E5"> start from now young</font>

290
00:10:47,850 --> 00:10:53,279
double encryption so this is<font color="#E5E5E5"> nor young</font>

291
00:10:51,329 --> 00:10:55,109
double encryption<font color="#E5E5E5"> and their ciphertext</font>

292
00:10:53,279 --> 00:10:57,720
consists of<font color="#E5E5E5"> two encryptions under a</font>

293
00:10:55,110 --> 00:10:59,010
mildly secure encryption scheme under

294
00:10:57,720 --> 00:11:01,589
chosen plaintext secure encryption

295
00:10:59,010 --> 00:11:03,819
scheme of the same<font color="#E5E5E5"> message so in an</font>

296
00:11:01,589 --> 00:11:06,190
honest encryption we have m0 m1

297
00:11:03,820 --> 00:11:08,830
different public keys<font color="#E5E5E5"> and you add a non</font>

298
00:11:06,190 --> 00:11:11,860
attractive zero knowledge proof that the

299
00:11:08,830 --> 00:11:14,080
two<font color="#CCCCCC"> M's</font><font color="#E5E5E5"> are equal</font><font color="#CCCCCC"> so that</font><font color="#E5E5E5"> m0 equals m1</font>

300
00:11:11,860 --> 00:11:16,000
<font color="#E5E5E5">and we call this a consistency proof so</font>

301
00:11:14,080 --> 00:11:18,010
consistent<font color="#CCCCCC"> cipher texts of those where</font>

302
00:11:16,000 --> 00:11:19,810
<font color="#CCCCCC">you really encrypt the same thing so</font>

303
00:11:18,010 --> 00:11:22,720
we're both<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> C 0</font><font color="#CCCCCC"> and C</font><font color="#E5E5E5"> 1</font>

304
00:11:19,810 --> 00:11:25,359
decrypt to the same message and how

305
00:11:22,720 --> 00:11:26,890
would<font color="#E5E5E5"> you go about to prove the chosen</font>

306
00:11:25,360 --> 00:11:28,870
ciphertext security of<font color="#E5E5E5"> this scheme so</font>

307
00:11:26,890 --> 00:11:30,400
this is known and this<font color="#E5E5E5"> is a known way to</font>

308
00:11:28,870 --> 00:11:32,800
prove now young secure<font color="#E5E5E5"> I don't think</font>

309
00:11:30,400 --> 00:11:33,970
it's the<font color="#E5E5E5"> first way to prove it's secure</font>

310
00:11:32,800 --> 00:11:36,640
but there have been<font color="#E5E5E5"> several</font><font color="#CCCCCC"> proofs</font>

311
00:11:33,970 --> 00:11:38,290
<font color="#E5E5E5">proofs of nor young and this is one</font><font color="#CCCCCC"> of</font>

312
00:11:36,640 --> 00:11:41,110
them which particularly meshes well with

313
00:11:38,290 --> 00:11:44,680
what<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> ok so we</font><font color="#E5E5E5"> start with</font>

314
00:11:41,110 --> 00:11:46,780
the<font color="#E5E5E5"> CCA experiment</font><font color="#CCCCCC"> and there in the</font>

315
00:11:44,680 --> 00:11:48,189
honest scheme you use the secret key 0

316
00:11:46,780 --> 00:11:50,199
to decrypt so if you want<font color="#E5E5E5"> to encrypt you</font>

317
00:11:48,190 --> 00:11:51,930
just need one<font color="#E5E5E5"> secret key right you rely</font>

318
00:11:50,200 --> 00:11:54,610
on the consistency proof that it's all

319
00:11:51,930 --> 00:11:56,199
<font color="#CCCCCC">that m0 is m1 and you would get</font><font color="#E5E5E5"> the same</font>

320
00:11:54,610 --> 00:11:58,150
<font color="#CCCCCC">thing if you use the other secret key</font>

321
00:11:56,200 --> 00:12:01,090
but actually you just<font color="#E5E5E5"> need</font><font color="#CCCCCC"> one secret</font>

322
00:11:58,150 --> 00:12:03,220
key right so then the first<font color="#E5E5E5"> thing we do</font>

323
00:12:01,090 --> 00:12:05,770
in<font color="#E5E5E5"> the security experiment so we have a</font>

324
00:12:03,220 --> 00:12:08,140
few game hops here and try<font color="#E5E5E5"> to randomize</font>

325
00:12:05,770 --> 00:12:09,819
all challenges<font color="#E5E5E5"> the first thing</font><font color="#CCCCCC"> that you</font>

326
00:12:08,140 --> 00:12:12,310
do is you simulate all proofs<font color="#E5E5E5"> that you</font>

327
00:12:09,820 --> 00:12:14,950
can do by relying on the<font color="#E5E5E5"> zero knowledge</font>

328
00:12:12,310 --> 00:12:16,750
simulation property<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> that doesn't</font>

329
00:12:14,950 --> 00:12:19,810
<font color="#CCCCCC">sound difficult</font><font color="#E5E5E5"> then what you could do</font>

330
00:12:16,750 --> 00:12:24,010
is the<font color="#E5E5E5"> next thing is that</font><font color="#CCCCCC"> you randomized</font>

331
00:12:19,810 --> 00:12:25,599
all the m1 encryptions here since you

332
00:12:24,010 --> 00:12:26,950
simulate<font color="#E5E5E5"> the proofs</font><font color="#CCCCCC"> you don't need a</font>

333
00:12:25,600 --> 00:12:28,630
witness<font color="#E5E5E5"> so you can you can mess around</font>

334
00:12:26,950 --> 00:12:29,980
<font color="#E5E5E5">you can play around with the right part</font>

335
00:12:28,630 --> 00:12:34,510
of of the ciphertext

336
00:12:29,980 --> 00:12:36,610
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> and now you can randomize all those</font>

337
00:12:34,510 --> 00:12:38,410
because<font color="#CCCCCC"> it's a mildly secure scheme like</font>

338
00:12:36,610 --> 00:12:40,690
<font color="#E5E5E5">algum I'll think of a gamma in the right</font>

339
00:12:38,410 --> 00:12:42,850
hand if<font color="#CCCCCC"> in c1 here because it's a madly</font>

340
00:12:40,690 --> 00:12:44,350
<font color="#E5E5E5">secure scheme it's very easy</font><font color="#CCCCCC"> to get</font>

341
00:12:42,850 --> 00:12:47,860
<font color="#E5E5E5">tight security there because you don't</font>

342
00:12:44,350 --> 00:12:48,910
have these decryption Oracle dilemmas

343
00:12:47,860 --> 00:12:50,680
there that you need<font color="#E5E5E5"> to be able to</font>

344
00:12:48,910 --> 00:12:52,360
<font color="#CCCCCC">decrypt but cannot decrypt the</font><font color="#E5E5E5"> challenge</font>

345
00:12:50,680 --> 00:12:53,650
ciphertext<font color="#E5E5E5"> that you don't have you you</font>

346
00:12:52,360 --> 00:12:56,230
can<font color="#CCCCCC"> just use elgamal and then it's very</font>

347
00:12:53,650 --> 00:12:58,060
<font color="#CCCCCC">easy to to replace</font><font color="#E5E5E5"> or to randomize all</font>

348
00:12:56,230 --> 00:13:00,040
the c1 parts and challenges<font color="#CCCCCC"> that the</font>

349
00:12:58,060 --> 00:13:02,050
adversary gets<font color="#E5E5E5"> at the same time without</font>

350
00:13:00,040 --> 00:13:04,839
any additional reduction<font color="#E5E5E5"> losses just</font><font color="#CCCCCC"> one</font>

351
00:13:02,050 --> 00:13:06,280
step so this<font color="#E5E5E5"> is easy the difficult</font><font color="#CCCCCC"> part</font>

352
00:13:04,840 --> 00:13:07,900
and what makes this<font color="#CCCCCC"> really challenging</font>

353
00:13:06,280 --> 00:13:10,510
is now the next<font color="#CCCCCC"> step where you say that</font>

354
00:13:07,900 --> 00:13:12,370
<font color="#E5E5E5">ok now we actually what we</font><font color="#CCCCCC"> want to do is</font>

355
00:13:10,510 --> 00:13:16,030
we want to<font color="#CCCCCC"> randomize also the left part</font>

356
00:13:12,370 --> 00:13:17,190
<font color="#E5E5E5">of encryptions but in order to do this</font>

357
00:13:16,030 --> 00:13:19,709
we<font color="#CCCCCC"> must forget</font>

358
00:13:17,190 --> 00:13:21,030
<font color="#CCCCCC">at</font><font color="#E5E5E5"> the secret key</font><font color="#CCCCCC"> sk0 because we still</font>

359
00:13:19,710 --> 00:13:24,390
use that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement the decryption</font>

360
00:13:21,030 --> 00:13:27,060
<font color="#E5E5E5">Oracle okay and in order</font><font color="#CCCCCC"> to do that we</font>

361
00:13:24,390 --> 00:13:28,380
need<font color="#CCCCCC"> to switch</font><font color="#E5E5E5"> into changing the we need</font>

362
00:13:27,060 --> 00:13:30,390
<font color="#E5E5E5">to switch</font><font color="#CCCCCC"> the decryption key that we</font>

363
00:13:28,380 --> 00:13:34,080
know to implement<font color="#E5E5E5"> the decryption Oracle</font>

364
00:13:30,390 --> 00:13:36,600
<font color="#E5E5E5">so we use SK</font><font color="#CCCCCC"> one instead in</font><font color="#E5E5E5"> order to do</font>

365
00:13:34,080 --> 00:13:38,460
that<font color="#CCCCCC"> without changing anything that the</font>

366
00:13:36,600 --> 00:13:39,900
adversary observes<font color="#E5E5E5"> we must rely on the</font>

367
00:13:38,460 --> 00:13:41,970
soundness that says<font color="#E5E5E5"> anything that the</font>

368
00:13:39,900 --> 00:13:43,319
adversary generates for us<font color="#E5E5E5"> anything that</font>

369
00:13:41,970 --> 00:13:46,590
the adversary sends to the decryption

370
00:13:43,320 --> 00:13:48,240
<font color="#E5E5E5">Oracle we can decrypt with either secret</font>

371
00:13:46,590 --> 00:13:50,250
key<font color="#CCCCCC"> and it gives you the same results so</font>

372
00:13:48,240 --> 00:13:52,020
<font color="#CCCCCC">here we will rely on the soundness of</font>

373
00:13:50,250 --> 00:13:54,570
<font color="#CCCCCC">the</font><font color="#E5E5E5"> proof system and in fact on the</font>

374
00:13:52,020 --> 00:13:56,670
simulation<font color="#CCCCCC"> sonís we've simulated</font><font color="#E5E5E5"> many</font>

375
00:13:54,570 --> 00:13:58,170
proofs for bad statements for false

376
00:13:56,670 --> 00:14:00,420
statements and<font color="#E5E5E5"> now we need to rely on</font>

377
00:13:58,170 --> 00:14:03,000
<font color="#E5E5E5">the</font><font color="#CCCCCC"> sonís</font><font color="#E5E5E5"> so this is the hard part</font><font color="#CCCCCC"> the</font>

378
00:14:00,420 --> 00:14:04,170
<font color="#CCCCCC">read but then we randomized m 0 and we</font>

379
00:14:03,000 --> 00:14:06,210
have randomized everything that the<font color="#CCCCCC"> ever</font>

380
00:14:04,170 --> 00:14:08,010
<font color="#E5E5E5">story gets we're done so the difficulty</font>

381
00:14:06,210 --> 00:14:10,110
is kind<font color="#CCCCCC"> of out sourced into this no net</font>

382
00:14:08,010 --> 00:14:11,520
<font color="#CCCCCC">active zero knowledge proof</font><font color="#E5E5E5"> it needs to</font>

383
00:14:10,110 --> 00:14:13,560
be secured with a tight security

384
00:14:11,520 --> 00:14:16,230
<font color="#E5E5E5">reduction in the managed many challenge</font>

385
00:14:13,560 --> 00:14:18,180
setting and it seems it seems hard<font color="#CCCCCC"> to</font>

386
00:14:16,230 --> 00:14:20,130
construct<font color="#E5E5E5"> those creatures so in this</font>

387
00:14:18,180 --> 00:14:22,229
<font color="#E5E5E5">work we give a slightly varied</font>

388
00:14:20,130 --> 00:14:24,120
simulation or random randomization

389
00:14:22,230 --> 00:14:25,410
strategy and a new way to prove now

390
00:14:24,120 --> 00:14:26,850
<font color="#E5E5E5">young in the multi challenge setting</font>

391
00:14:25,410 --> 00:14:30,689
specifically give towards market

392
00:14:26,850 --> 00:14:34,320
challenge<font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> challenges one</font>

393
00:14:30,690 --> 00:14:35,940
<font color="#E5E5E5">ingredient that we that</font><font color="#CCCCCC"> we use is has</font>

394
00:14:34,320 --> 00:14:37,770
<font color="#E5E5E5">proof systems and this is just a short</font>

395
00:14:35,940 --> 00:14:39,990
recap<font color="#E5E5E5"> of what - proof systems are these</font>

396
00:14:37,770 --> 00:14:41,850
are designated verifier<font color="#CCCCCC"> non-interactive</font>

397
00:14:39,990 --> 00:14:43,140
zero knowledge proof<font color="#CCCCCC"> so there's a public</font>

398
00:14:41,850 --> 00:14:44,490
key and<font color="#CCCCCC"> a secret key</font><font color="#E5E5E5"> with a public key</font>

399
00:14:43,140 --> 00:14:46,740
you can generate proofs<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> no</font>

400
00:14:44,490 --> 00:14:48,450
witness and with the secret key you can

401
00:14:46,740 --> 00:14:50,430
verify proofs how does this work how do

402
00:14:48,450 --> 00:14:53,250
you verify proofs<font color="#E5E5E5"> in the particular case</font>

403
00:14:50,430 --> 00:14:54,959
<font color="#E5E5E5">of</font><font color="#CCCCCC"> hashed proof systems there's a proof</font>

404
00:14:53,250 --> 00:14:59,640
which is<font color="#CCCCCC"> uniquely determined by the</font>

405
00:14:54,960 --> 00:15:01,470
instance and the secret key<font color="#E5E5E5"> and you can</font>

406
00:14:59,640 --> 00:15:03,300
<font color="#E5E5E5">compute</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you need proof either with</font>

407
00:15:01,470 --> 00:15:05,550
the secret key just<font color="#E5E5E5"> from X from the</font>

408
00:15:03,300 --> 00:15:08,160
instance or from public information

409
00:15:05,550 --> 00:15:11,310
using<font color="#CCCCCC"> a witness and</font><font color="#E5E5E5"> the verifier just</font>

410
00:15:08,160 --> 00:15:14,910
checks<font color="#CCCCCC"> if his proof that he computed</font>

411
00:15:11,310 --> 00:15:17,489
from the instance alone<font color="#E5E5E5"> matches the</font><font color="#CCCCCC"> the</font>

412
00:15:14,910 --> 00:15:20,579
thing that<font color="#CCCCCC"> he got</font><font color="#E5E5E5"> in as</font><font color="#CCCCCC"> a proof from</font><font color="#E5E5E5"> the</font>

413
00:15:17,490 --> 00:15:22,170
prover<font color="#CCCCCC"> it's easy to</font><font color="#E5E5E5"> see me because</font>

414
00:15:20,580 --> 00:15:23,910
<font color="#E5E5E5">because we can use</font><font color="#CCCCCC"> the secret key to</font>

415
00:15:22,170 --> 00:15:25,079
compute proofs<font color="#E5E5E5"> it's easy to simulate you</font>

416
00:15:23,910 --> 00:15:25,920
just apply the<font color="#E5E5E5"> secret key to the</font>

417
00:15:25,080 --> 00:15:28,530
instance that's it

418
00:15:25,920 --> 00:15:30,479
and we have this is the nice property of

419
00:15:28,530 --> 00:15:31,139
<font color="#E5E5E5">hash proof systems we have statistical</font>

420
00:15:30,480 --> 00:15:33,359
soundness

421
00:15:31,139 --> 00:15:35,519
in the sense that if<font color="#E5E5E5"> you know only</font>

422
00:15:33,359 --> 00:15:36,480
<font color="#E5E5E5">proofs simulator</font><font color="#CCCCCC"> I mean they're unique</font>

423
00:15:35,519 --> 00:15:38,100
right it doesn't<font color="#E5E5E5"> matter</font><font color="#CCCCCC"> if they're</font>

424
00:15:36,480 --> 00:15:40,350
simulated or honestly generated if you

425
00:15:38,100 --> 00:15:43,199
know only<font color="#E5E5E5"> proofs</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> true statements</font>

426
00:15:40,350 --> 00:15:45,509
<font color="#E5E5E5">then any proof for a false statement</font><font color="#CCCCCC"> in</font>

427
00:15:43,199 --> 00:15:47,758
the sense of proof in the sense<font color="#E5E5E5"> of the</font>

428
00:15:45,509 --> 00:15:50,069
thing that<font color="#CCCCCC"> the verifier then compares it</font>

429
00:15:47,759 --> 00:15:51,839
with is information theoretically hidden

430
00:15:50,069 --> 00:15:53,819
so<font color="#E5E5E5"> yeah the best thing</font><font color="#CCCCCC"> is you can guess</font>

431
00:15:51,839 --> 00:15:56,069
<font color="#E5E5E5">you had you have statistical security</font>

432
00:15:53,819 --> 00:15:57,868
there exponentially small error

433
00:15:56,069 --> 00:15:59,729
probabilities or<font color="#CCCCCC"> soundness</font><font color="#E5E5E5"> errors there</font>

434
00:15:57,869 --> 00:16:02,339
okay so this is the thing that<font color="#E5E5E5"> we're</font>

435
00:15:59,730 --> 00:16:04,709
going<font color="#E5E5E5"> to use and we know efficient</font><font color="#CCCCCC"> hash</font>

436
00:16:02,339 --> 00:16:07,679
proof systems<font color="#E5E5E5"> both for linear languages</font>

437
00:16:04,709 --> 00:16:10,290
<font color="#E5E5E5">so linear in the</font><font color="#CCCCCC"> exponent from crime and</font>

438
00:16:07,679 --> 00:16:12,149
<font color="#CCCCCC">Shupe already</font><font color="#E5E5E5"> and for all languages so</font>

439
00:16:10,290 --> 00:16:13,980
for<font color="#E5E5E5"> languages of disjunctions of linear</font>

440
00:16:12,149 --> 00:16:18,119
statements this<font color="#E5E5E5"> is particularly relevant</font>

441
00:16:13,980 --> 00:16:20,609
<font color="#E5E5E5">for this talk from a work of</font><font color="#CCCCCC"> Michelle</font>

442
00:16:18,119 --> 00:16:23,209
<font color="#CCCCCC">Fabrice end of it</font><font color="#E5E5E5"> so we should have</font><font color="#CCCCCC"> de</font>

443
00:16:20,609 --> 00:16:25,410
<font color="#CCCCCC">la Falaise been</font><font color="#E5E5E5"> amudha and</font><font color="#CCCCCC"> Davi possible</font>

444
00:16:23,209 --> 00:16:28,858
<font color="#CCCCCC">okay so here's the</font><font color="#E5E5E5"> idea for a proof</font>

445
00:16:25,410 --> 00:16:32,129
system<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> cipher text</font><font color="#E5E5E5"> looks just</font>

446
00:16:28,859 --> 00:16:34,139
like with<font color="#CCCCCC"> NAR young and the proofs</font><font color="#E5E5E5"> look</font>

447
00:16:32,129 --> 00:16:38,249
like this we have actually<font color="#CCCCCC"> two proofs</font>

448
00:16:34,139 --> 00:16:41,790
and hidden bit or a hidden<font color="#E5E5E5"> a hidden</font>

449
00:16:38,249 --> 00:16:43,470
value tau which is<font color="#CCCCCC"> a random bit so I'll</font>

450
00:16:41,790 --> 00:16:45,059
go and so this looks already<font color="#E5E5E5"> as it</font>

451
00:16:43,470 --> 00:16:48,779
<font color="#E5E5E5">smells a little bit like</font><font color="#CCCCCC"> cats Wang</font>

452
00:16:45,059 --> 00:16:51,868
signatures and I'll give a little<font color="#E5E5E5"> bit of</font>

453
00:16:48,779 --> 00:16:53,459
<font color="#E5E5E5">relation to this later on and the two</font>

454
00:16:51,869 --> 00:16:55,139
proofs<font color="#E5E5E5"> are simply proofs for the</font>

455
00:16:53,459 --> 00:16:58,799
<font color="#E5E5E5">statement</font><font color="#CCCCCC"> that the cipher</font><font color="#E5E5E5"> text is</font>

456
00:16:55,139 --> 00:17:01,679
consistent that m0 is m1 or that tau has

457
00:16:58,799 --> 00:17:04,349
a particular value<font color="#E5E5E5"> right so we give so</font>

458
00:17:01,679 --> 00:17:06,959
<font color="#E5E5E5">PI</font><font color="#CCCCCC"> 0 proofs that subjects are consistent</font>

459
00:17:04,349 --> 00:17:09,059
or tau equals<font color="#E5E5E5"> 0 and PI 1 proofs that</font>

460
00:17:06,959 --> 00:17:11,399
<font color="#E5E5E5">cipher texts are consistent or tau</font>

461
00:17:09,059 --> 00:17:15,059
equals 1<font color="#E5E5E5"> which means you can always get</font>

462
00:17:11,398 --> 00:17:16,408
<font color="#CCCCCC">away with simulating or with just maybe</font>

463
00:17:15,059 --> 00:17:20,099
because you've created the<font color="#CCCCCC"> ciphertext</font>

464
00:17:16,409 --> 00:17:23,909
maybe you know that<font color="#CCCCCC"> with</font><font color="#E5E5E5"> generating one</font>

465
00:17:20,099 --> 00:17:26,039
of those PI piece one<font color="#E5E5E5"> either PI 0 or PI</font>

466
00:17:23,909 --> 00:17:27,360
1 for any ciphertext<font color="#E5E5E5"> even if the</font>

467
00:17:26,039 --> 00:17:28,889
<font color="#CCCCCC">ciphertext is inconsistent because</font>

468
00:17:27,359 --> 00:17:31,709
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> kind of a simulation</font><font color="#CCCCCC"> trapdoor</font>

469
00:17:28,889 --> 00:17:33,209
here<font color="#CCCCCC"> which you can</font><font color="#E5E5E5"> select where whether</font>

470
00:17:31,710 --> 00:17:36,419
it's the left or the<font color="#CCCCCC"> right proofs of the</font>

471
00:17:33,210 --> 00:17:38,639
system that you want<font color="#E5E5E5"> to simulate</font><font color="#CCCCCC"> but you</font>

472
00:17:36,419 --> 00:17:40,559
cannot get<font color="#E5E5E5"> away with simulating both at</font>

473
00:17:38,639 --> 00:17:43,189
<font color="#E5E5E5">least then you break the soundness in</font>

474
00:17:40,559 --> 00:17:43,190
some sense right

475
00:17:43,919 --> 00:17:46,990
that's what

476
00:17:44,450 --> 00:17:50,000
<font color="#CCCCCC">the</font><font color="#E5E5E5"> simulated proof breaks the soundness</font>

477
00:17:46,990 --> 00:17:51,620
exactly for a bad<font color="#CCCCCC"> ciphertext breakfast</font>

478
00:17:50,000 --> 00:17:55,360
<font color="#CCCCCC">honors exactly for one of those hash</font>

479
00:17:51,620 --> 00:17:58,219
<font color="#CCCCCC">proof systems for the hash proof system</font>

480
00:17:55,360 --> 00:18:00,080
hsk or with the secret key HS<font color="#E5E5E5"> k1 minus</font>

481
00:17:58,220 --> 00:18:01,370
<font color="#E5E5E5">tau but the other one you can simulate</font>

482
00:18:00,080 --> 00:18:05,928
because<font color="#CCCCCC"> there is a statement is simply</font>

483
00:18:01,370 --> 00:18:07,879
<font color="#E5E5E5">true</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so before</font><font color="#CCCCCC"> going into the</font>

484
00:18:05,929 --> 00:18:09,769
actual<font color="#CCCCCC"> proof sir G how we</font><font color="#E5E5E5"> randomized</font>

485
00:18:07,880 --> 00:18:13,159
things here's a here's a picture<font color="#E5E5E5"> picture</font>

486
00:18:09,769 --> 00:18:14,630
so always good<font color="#CCCCCC"> so these are all the</font>

487
00:18:13,159 --> 00:18:16,760
cipher texts the<font color="#CCCCCC"> challenge</font><font color="#E5E5E5"> cipher</font><font color="#CCCCCC"> texts</font>

488
00:18:14,630 --> 00:18:20,929
<font color="#E5E5E5">that the adversary</font><font color="#CCCCCC"> gets the</font><font color="#E5E5E5"> C is so</font>

489
00:18:16,760 --> 00:18:24,908
because I'm lazy I just<font color="#E5E5E5"> I just wrote</font>

490
00:18:20,929 --> 00:18:27,230
<font color="#CCCCCC">five there and our goal will be to</font>

491
00:18:24,909 --> 00:18:28,880
<font color="#E5E5E5">partition the set of all cipher texts of</font>

492
00:18:27,230 --> 00:18:30,559
<font color="#E5E5E5">all Chinese architects into two parts</font>

493
00:18:28,880 --> 00:18:34,880
the<font color="#E5E5E5"> ones with tau equals zero</font><font color="#CCCCCC"> so</font>

494
00:18:30,559 --> 00:18:38,480
<font color="#CCCCCC">remember that</font><font color="#E5E5E5"> tau</font><font color="#CCCCCC"> is sorry</font><font color="#E5E5E5"> I can't</font>

495
00:18:34,880 --> 00:18:40,429
really operate this thing<font color="#CCCCCC"> half of the</font>

496
00:18:38,480 --> 00:18:41,990
cipher texts have tau equal or about

497
00:18:40,429 --> 00:18:44,840
half<font color="#CCCCCC"> of the cipher texts</font><font color="#E5E5E5"> have tau equals</font>

498
00:18:41,990 --> 00:18:46,700
0 tau is<font color="#CCCCCC"> the thing that parameterize</font>

499
00:18:44,840 --> 00:18:48,799
<font color="#CCCCCC">--is the proofs</font><font color="#E5E5E5"> and half of them have</font>

500
00:18:46,700 --> 00:18:50,450
tau equals<font color="#CCCCCC"> 1 so what we're going to do</font>

501
00:18:48,799 --> 00:18:54,490
is in each step<font color="#E5E5E5"> of the proof we're going</font>

502
00:18:50,450 --> 00:18:56,690
to randomize<font color="#CCCCCC"> one</font><font color="#E5E5E5"> half this means that</font>

503
00:18:54,490 --> 00:18:58,639
<font color="#E5E5E5">well the other one the</font><font color="#CCCCCC"> other half</font><font color="#E5E5E5"> will</font>

504
00:18:56,690 --> 00:19:01,399
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be is going</font><font color="#CCCCCC"> to be untouched</font><font color="#E5E5E5"> and</font>

505
00:18:58,639 --> 00:19:04,129
one half will be simulated<font color="#E5E5E5"> one half will</font>

506
00:19:01,399 --> 00:19:05,239
be randomized<font color="#E5E5E5"> so green means</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

507
00:19:04,130 --> 00:19:07,279
<font color="#E5E5E5">corresponding messages have been</font>

508
00:19:05,240 --> 00:19:10,070
randomized<font color="#E5E5E5"> in the next step we're going</font>

509
00:19:07,279 --> 00:19:11,990
to<font color="#E5E5E5"> create a different partitioning again</font>

510
00:19:10,070 --> 00:19:13,789
with random towels<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> challenged</font>

511
00:19:11,990 --> 00:19:16,100
cipher texts<font color="#E5E5E5"> and we're going to</font>

512
00:19:13,789 --> 00:19:19,700
randomize another half of all the<font color="#E5E5E5"> surfer</font>

513
00:19:16,100 --> 00:19:23,330
texts so until at<font color="#CCCCCC"> some point we have</font>

514
00:19:19,700 --> 00:19:24,950
<font color="#CCCCCC">partitioned a bunch of times o of all of</font>

515
00:19:23,330 --> 00:19:26,928
lambda times security parameter many

516
00:19:24,950 --> 00:19:29,389
times and then we have<font color="#CCCCCC"> partitions so</font>

517
00:19:26,929 --> 00:19:31,669
<font color="#E5E5E5">that each time</font><font color="#CCCCCC"> we have randomized half</font>

518
00:19:29,389 --> 00:19:35,090
of<font color="#CCCCCC"> cipher text</font><font color="#E5E5E5"> and after at most o of</font>

519
00:19:31,669 --> 00:19:36,830
<font color="#E5E5E5">lambda steps we will be finished at</font>

520
00:19:35,090 --> 00:19:38,209
<font color="#E5E5E5">least with high probability so that's</font>

521
00:19:36,830 --> 00:19:41,029
the strategy<font color="#E5E5E5"> but how</font><font color="#CCCCCC"> does this</font><font color="#E5E5E5"> work in</font>

522
00:19:38,210 --> 00:19:44,539
in in detail<font color="#E5E5E5"> so first of all during the</font>

523
00:19:41,029 --> 00:19:47,330
security reduction we guess<font color="#CCCCCC"> tau star tau</font>

524
00:19:44,539 --> 00:19:49,039
star is so think of this as<font color="#CCCCCC"> an</font>

525
00:19:47,330 --> 00:19:51,199
experiment<font color="#E5E5E5"> where the adversary tries to</font>

526
00:19:49,039 --> 00:19:52,908
<font color="#E5E5E5">convince you of</font><font color="#CCCCCC"> something false</font><font color="#E5E5E5"> where</font>

527
00:19:51,200 --> 00:19:54,320
the adversary tries to break the

528
00:19:52,909 --> 00:19:56,510
soundness of<font color="#CCCCCC"> the proof system where</font><font color="#E5E5E5"> he</font>

529
00:19:54,320 --> 00:19:58,399
wants<font color="#E5E5E5"> to submit</font><font color="#CCCCCC"> a decryption query where</font>

530
00:19:56,510 --> 00:20:02,840
he can<font color="#E5E5E5"> detect whether you use the</font>

531
00:19:58,400 --> 00:20:05,720
or the right secret key<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> tau</font>

532
00:20:02,840 --> 00:20:07,040
star is the tower value for this

533
00:20:05,720 --> 00:20:09,170
particular cipher<font color="#E5E5E5"> text</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> the</font>

534
00:20:07,040 --> 00:20:10,820
adversary<font color="#E5E5E5"> first tries or really refers</font>

535
00:20:09,170 --> 00:20:14,630
the adversary first successfully cheats

536
00:20:10,820 --> 00:20:16,639
<font color="#E5E5E5">so this is a bit so we can guess it and</font>

537
00:20:14,630 --> 00:20:19,340
intuitively this means that we<font color="#E5E5E5"> have just</font>

538
00:20:16,640 --> 00:20:21,380
guessed<font color="#CCCCCC"> for</font><font color="#E5E5E5"> which proof system the</font>

539
00:20:19,340 --> 00:20:26,060
adversary breaks the soundness first<font color="#E5E5E5"> it</font>

540
00:20:21,380 --> 00:20:28,310
either<font color="#CCCCCC"> h sk 0 or HS k</font><font color="#E5E5E5"> 1 and intuitively</font>

541
00:20:26,060 --> 00:20:32,389
the adversary breaks<font color="#E5E5E5"> this onus for HS k</font>

542
00:20:28,310 --> 00:20:35,840
1 minus tau star then we randomized<font color="#E5E5E5"> all</font>

543
00:20:32,390 --> 00:20:37,820
the cipher texts that that will not

544
00:20:35,840 --> 00:20:40,159
require<font color="#CCCCCC"> the</font><font color="#E5E5E5"> soundness of this proof</font>

545
00:20:37,820 --> 00:20:42,830
system<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> cipher</font><font color="#CCCCCC"> texts that</font>

546
00:20:40,160 --> 00:20:44,270
we<font color="#CCCCCC"> read</font><font color="#E5E5E5"> can randomize without breaking</font>

547
00:20:42,830 --> 00:20:46,970
that particular proof system<font color="#E5E5E5"> those are</font>

548
00:20:44,270 --> 00:20:48,740
<font color="#E5E5E5">half of the cipher texts those cipher</font>

549
00:20:46,970 --> 00:20:52,910
texts<font color="#E5E5E5"> that do not lie in the same half</font>

550
00:20:48,740 --> 00:20:56,000
as the<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> from tau star or the</font>

551
00:20:52,910 --> 00:20:57,680
<font color="#CCCCCC">cipher text with tau star</font><font color="#E5E5E5"> and then we re</font>

552
00:20:56,000 --> 00:20:59,900
randomized we<font color="#E5E5E5"> re randomized the</font>

553
00:20:57,680 --> 00:21:01,610
partitioning we partition<font color="#CCCCCC"> the cipher</font>

554
00:20:59,900 --> 00:21:06,200
<font color="#CCCCCC">text space in a different way</font><font color="#E5E5E5"> and then</font>

555
00:21:01,610 --> 00:21:08,719
we go we go back to<font color="#CCCCCC"> 1 so the difference</font>

556
00:21:06,200 --> 00:21:10,220
to<font color="#CCCCCC"> cats when signatures is that they</font>

557
00:21:08,720 --> 00:21:12,530
also<font color="#E5E5E5"> have a signature scheme where they</font>

558
00:21:10,220 --> 00:21:14,900
have a different<font color="#CCCCCC"> well it's a</font><font color="#E5E5E5"> different</font>

559
00:21:12,530 --> 00:21:18,639
it's a different<font color="#CCCCCC"> tool but they have in a</font>

560
00:21:14,900 --> 00:21:21,530
similar way they they kind<font color="#E5E5E5"> of use some</font>

561
00:21:18,640 --> 00:21:23,840
<font color="#E5E5E5">soundness of a proof</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> with a with</font>

562
00:21:21,530 --> 00:21:25,550
an additional bit<font color="#E5E5E5"> and proofs if you</font>

563
00:21:23,840 --> 00:21:27,560
consider signatures as proofs<font color="#E5E5E5"> at this</font>

564
00:21:25,550 --> 00:21:29,720
point for zero knowledge proof system

565
00:21:27,560 --> 00:21:31,190
<font color="#CCCCCC">and the difference is that this</font><font color="#E5E5E5"> work was</font>

566
00:21:29,720 --> 00:21:34,040
<font color="#E5E5E5">in the random Oracle model and there it</font>

567
00:21:31,190 --> 00:21:37,700
was easy<font color="#CCCCCC"> to have this partitioning bit</font>

568
00:21:34,040 --> 00:21:39,920
public but the simulation capabilities

569
00:21:37,700 --> 00:21:41,960
hidden meaning that it was hidden<font color="#E5E5E5"> to the</font>

570
00:21:39,920 --> 00:21:44,150
adversary<font color="#E5E5E5"> whether you can simulate the</font>

571
00:21:41,960 --> 00:21:48,350
left or the<font color="#E5E5E5"> the tau equals 0 or the</font><font color="#CCCCCC"> tau</font>

572
00:21:44,150 --> 00:21:50,840
equals<font color="#CCCCCC"> 1 case so the difference is kind</font>

573
00:21:48,350 --> 00:21:53,629
<font color="#E5E5E5">of where the simulation capabilities lie</font>

574
00:21:50,840 --> 00:21:56,810
in our case<font color="#CCCCCC"> because we're not</font><font color="#E5E5E5"> in the</font>

575
00:21:53,630 --> 00:21:58,430
random Oracle model here<font color="#E5E5E5"> we we have to</font>

576
00:21:56,810 --> 00:21:59,990
decide in advance<font color="#E5E5E5"> what we can simulate</font>

577
00:21:58,430 --> 00:22:03,500
and what we cannot simulate and this is

578
00:21:59,990 --> 00:22:05,000
what<font color="#CCCCCC"> tau dictates</font><font color="#E5E5E5"> ok so here's another</font>

579
00:22:03,500 --> 00:22:06,170
illustration the only difference to

580
00:22:05,000 --> 00:22:07,940
before was<font color="#CCCCCC"> that we are now have a</font>

581
00:22:06,170 --> 00:22:09,620
challenge<font color="#CCCCCC"> cipher</font><font color="#E5E5E5"> or we have a</font><font color="#CCCCCC"> C star key</font>

582
00:22:07,940 --> 00:22:11,900
which is actually a decryption query and

583
00:22:09,620 --> 00:22:12,299
this is the decryption query for which

584
00:22:11,900 --> 00:22:18,119
the

585
00:22:12,299 --> 00:22:19,859
<font color="#E5E5E5">brakes the proof</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> okay thanks okay</font>

586
00:22:18,119 --> 00:22:21,269
and the rest<font color="#E5E5E5"> is</font><font color="#CCCCCC"> as before so we</font>

587
00:22:19,859 --> 00:22:24,869
randomized everything but we randomized

588
00:22:21,269 --> 00:22:26,519
it kind of<font color="#CCCCCC"> around seastar okay I'm</font>

589
00:22:24,869 --> 00:22:28,738
running out of time there are some

590
00:22:26,519 --> 00:22:30,839
<font color="#E5E5E5">omitted details how does the switching</font>

591
00:22:28,739 --> 00:22:35,549
of partitioning of<font color="#E5E5E5"> partitioning really</font>

592
00:22:30,839 --> 00:22:37,289
work<font color="#CCCCCC"> so if you just if you kind of in</font><font color="#E5E5E5"> in</font>

593
00:22:35,549 --> 00:22:38,849
this picture if<font color="#CCCCCC"> you change from</font><font color="#E5E5E5"> here to</font>

594
00:22:37,289 --> 00:22:41,099
here how does<font color="#E5E5E5"> this really work how can</font>

595
00:22:38,849 --> 00:22:45,809
we<font color="#E5E5E5"> forget the</font><font color="#CCCCCC"> bit towel and</font><font color="#E5E5E5"> that really</font>

596
00:22:41,099 --> 00:22:47,309
<font color="#E5E5E5">it requires a change of the scheme such</font>

597
00:22:45,809 --> 00:22:49,799
that you<font color="#E5E5E5"> don't really randomize</font>

598
00:22:47,309 --> 00:22:52,859
initially but you<font color="#E5E5E5"> decouple</font><font color="#CCCCCC"> ciphertext so</font>

599
00:22:49,799 --> 00:22:54,839
that you kind<font color="#CCCCCC"> of replicate the proof</font>

600
00:22:52,859 --> 00:22:56,099
<font color="#E5E5E5">system so you kind of you work your way</font>

601
00:22:54,839 --> 00:22:58,339
towards<font color="#CCCCCC"> the setting</font><font color="#E5E5E5"> where you don't have</font>

602
00:22:56,099 --> 00:23:01,109
two instances<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the proof system but</font>

603
00:22:58,339 --> 00:23:03,479
exponentially many so not exponentially

604
00:23:01,109 --> 00:23:05,489
many<font color="#E5E5E5"> but as many as you</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> handle</font>

605
00:23:03,479 --> 00:23:07,379
all<font color="#E5E5E5"> ciphertexts differently</font><font color="#CCCCCC"> so but</font><font color="#E5E5E5"> this</font>

606
00:23:05,489 --> 00:23:10,529
<font color="#CCCCCC">is a very technical part</font><font color="#E5E5E5"> I won't go into</font>

607
00:23:07,379 --> 00:23:12,359
the detail for<font color="#CCCCCC"> that and the last problem</font>

608
00:23:10,529 --> 00:23:15,869
is how do we<font color="#E5E5E5"> get suitable hash proof</font>

609
00:23:12,359 --> 00:23:18,978
systems and we can<font color="#E5E5E5"> rely on the work I</font>

610
00:23:15,869 --> 00:23:21,238
already mentioned in the<font color="#E5E5E5"> pairing setting</font>

611
00:23:18,979 --> 00:23:23,009
<font color="#CCCCCC">yeah we can work in the pairing setting</font>

612
00:23:21,239 --> 00:23:25,679
with<font color="#E5E5E5"> the work I already mentioned and</font>

613
00:23:23,009 --> 00:23:28,679
then then the DCR<font color="#CCCCCC"> setting so in an RSA</font>

614
00:23:25,679 --> 00:23:30,599
type setting with composite order groups

615
00:23:28,679 --> 00:23:33,299
<font color="#E5E5E5">we simply we construct a new proof</font>

616
00:23:30,599 --> 00:23:35,639
system that uses<font color="#E5E5E5"> that where we can</font>

617
00:23:33,299 --> 00:23:37,789
compute a<font color="#CCCCCC"> DCR that we can compute</font>

618
00:23:35,639 --> 00:23:40,168
discrete logarithms in the<font color="#CCCCCC"> GCR setting</font>

619
00:23:37,789 --> 00:23:41,669
for<font color="#CCCCCC"> our disjunctions of course for</font>

620
00:23:40,169 --> 00:23:43,950
disjunctions of linear languages<font color="#E5E5E5"> okay so</font>

621
00:23:41,669 --> 00:23:45,389
that brings<font color="#E5E5E5"> me</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the summary the main</font>

622
00:23:43,950 --> 00:23:47,399
goal was a new strategy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> obtain</font>

623
00:23:45,389 --> 00:23:49,619
tightly secure public<font color="#CCCCCC"> encryption schemes</font>

624
00:23:47,399 --> 00:23:53,908
<font color="#CCCCCC">and the main difference to previous</font>

625
00:23:49,619 --> 00:23:56,639
approaches work was<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> way in</font>

626
00:23:53,909 --> 00:23:58,440
which<font color="#CCCCCC"> we randomized cipher texts in</font>

627
00:23:56,639 --> 00:24:00,208
which<font color="#E5E5E5"> we kind of randomized many cipher</font>

628
00:23:58,440 --> 00:24:01,829
texts at once many challenge<font color="#CCCCCC"> ciphertext</font>

629
00:24:00,209 --> 00:24:03,419
<font color="#CCCCCC">that the adversary gets</font><font color="#E5E5E5"> we need to</font>

630
00:24:01,829 --> 00:24:05,999
<font color="#E5E5E5">randomize very many cipher texts and</font>

631
00:24:03,419 --> 00:24:07,979
very few steps that<font color="#CCCCCC"> this is how</font><font color="#E5E5E5"> we do</font>

632
00:24:05,999 --> 00:24:10,109
this and<font color="#CCCCCC"> how we partition the set of</font>

633
00:24:07,979 --> 00:24:11,759
ciphertext is chosen adaptively<font color="#E5E5E5"> at</font>

634
00:24:10,109 --> 00:24:13,978
<font color="#E5E5E5">encryption time it's not kind of</font>

635
00:24:11,759 --> 00:24:15,599
hardwired into<font color="#E5E5E5"> the scheme it's</font><font color="#CCCCCC"> chosen in</font>

636
00:24:13,979 --> 00:24:17,579
the simulation<font color="#E5E5E5"> or in the security proof</font>

637
00:24:15,599 --> 00:24:19,950
adaptively<font color="#E5E5E5"> with this special bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> tau</font>

638
00:24:17,579 --> 00:24:21,450
which was not there before<font color="#E5E5E5"> so the main</font>

639
00:24:19,950 --> 00:24:22,859
benefit or<font color="#CCCCCC"> the demonstration where this</font>

640
00:24:21,450 --> 00:24:24,450
is a useful<font color="#E5E5E5"> thing and gives you some</font>

641
00:24:22,859 --> 00:24:25,169
benefit over previous work is that we

642
00:24:24,450 --> 00:24:27,660
have a TCR

643
00:24:25,170 --> 00:24:30,990
solution<font color="#E5E5E5"> and the technical means that we</font>

644
00:24:27,660 --> 00:24:32,990
is<font color="#CCCCCC"> that we have a new or that we require</font>

645
00:24:30,990 --> 00:24:35,130
and<font color="#CCCCCC"> we also</font><font color="#E5E5E5"> construct a new type of</font>

646
00:24:32,990 --> 00:24:38,490
disjunctions<font color="#E5E5E5"> in particular in the GCR</font>

647
00:24:35,130 --> 00:24:42,210
setting of<font color="#E5E5E5"> disjunction proofs</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

648
00:24:38,490 --> 00:24:43,650
and there's<font color="#E5E5E5"> more</font><font color="#CCCCCC"> there we have a</font>

649
00:24:42,210 --> 00:24:45,210
follow-up work that also<font color="#E5E5E5"> shows that you</font>

650
00:24:43,650 --> 00:24:46,800
can actually get<font color="#E5E5E5"> this efficient in the</font>

651
00:24:45,210 --> 00:24:50,010
and without<font color="#E5E5E5"> pairings in the cyclic group</font>

652
00:24:46,800 --> 00:24:51,990
setting so if you're in the<font color="#CCCCCC"> DDH regime</font>

653
00:24:50,010 --> 00:24:52,920
you can actually<font color="#CCCCCC"> construct a public key</font>

654
00:24:51,990 --> 00:24:58,140
encryption scheme with it

655
00:24:52,920 --> 00:25:00,120
which<font color="#E5E5E5"> is green</font><font color="#CCCCCC"> on the whole in the whole</font>

656
00:24:58,140 --> 00:25:03,900
line basically<font color="#E5E5E5"> which also has a small</font>

657
00:25:00,120 --> 00:25:06,750
public key small<font color="#CCCCCC"> cipher text and a good</font>

658
00:25:03,900 --> 00:25:08,280
reduction<font color="#E5E5E5"> from</font><font color="#CCCCCC"> DDH and we also have a</font>

659
00:25:06,750 --> 00:25:11,550
result on structure preserving

660
00:25:08,280 --> 00:25:12,870
signatures in<font color="#CCCCCC"> follow-up work where we</font>

661
00:25:11,550 --> 00:25:14,250
show that you can also get tightly

662
00:25:12,870 --> 00:25:15,479
<font color="#E5E5E5">secure structure preserving signatures</font>

663
00:25:14,250 --> 00:25:18,270
which are compact<font color="#E5E5E5"> at least</font>

664
00:25:15,480 --> 00:25:21,870
asymptotically compact using the same

665
00:25:18,270 --> 00:25:24,650
ideas okay that's all I wanted to<font color="#E5E5E5"> say</font>

666
00:25:21,870 --> 00:25:24,649
thank you<font color="#E5E5E5"> for your attention</font>

