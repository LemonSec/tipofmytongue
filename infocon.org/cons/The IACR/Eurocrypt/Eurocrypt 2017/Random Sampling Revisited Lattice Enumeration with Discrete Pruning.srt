1
00:00:00,469 --> 00:00:05,730
<font color="#CCCCCC">okay so good morning</font><font color="#E5E5E5"> everyone</font><font color="#CCCCCC"> uh I'm</font>

2
00:00:03,270 --> 00:00:08,069
<font color="#CCCCCC">Fung I</font><font color="#E5E5E5"> work for in areas in allies and</font>

3
00:00:05,730 --> 00:00:10,889
the University of<font color="#E5E5E5"> Tokyo and this is</font>

4
00:00:08,069 --> 00:00:13,320
joint work with<font color="#E5E5E5"> Yoshinori Ono from</font><font color="#CCCCCC"> n ICT</font>

5
00:00:10,889 --> 00:00:15,419
<font color="#E5E5E5">in Japan so I'm gonna tell you about</font>

6
00:00:13,320 --> 00:00:18,420
random sampling revisited<font color="#CCCCCC"> latest</font>

7
00:00:15,420 --> 00:00:21,990
enumeration with<font color="#CCCCCC"> discreet pruning</font><font color="#E5E5E5"> so</font>

8
00:00:18,420 --> 00:00:24,810
first I will try to<font color="#CCCCCC"> motivate you not to</font>

9
00:00:21,990 --> 00:00:26,848
leave this room<font color="#E5E5E5"> then I will give you</font>

10
00:00:24,810 --> 00:00:28,979
<font color="#CCCCCC">some</font><font color="#E5E5E5"> background on lettuces enumeration</font>

11
00:00:26,849 --> 00:00:30,689
and and pruning and then I will finally

12
00:00:28,980 --> 00:00:35,340
<font color="#E5E5E5">get to the title</font><font color="#CCCCCC"> of his talk which is</font>

13
00:00:30,689 --> 00:00:36,899
enumeration with<font color="#CCCCCC"> discreet</font><font color="#E5E5E5"> pruning okay</font>

14
00:00:35,340 --> 00:00:39,600
so let's relax a little<font color="#E5E5E5"> bit because</font>

15
00:00:36,899 --> 00:00:44,250
<font color="#E5E5E5">after that it'll</font><font color="#CCCCCC"> be a</font><font color="#E5E5E5"> bit more painful</font>

16
00:00:39,600 --> 00:00:46,739
so a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people right</font><font color="#CCCCCC"> now are asking</font>

17
00:00:44,250 --> 00:00:48,930
for convincing security estimate for

18
00:00:46,739 --> 00:00:51,269
<font color="#CCCCCC">ladies bass</font><font color="#E5E5E5"> cryptosystem because of the</font>

19
00:00:48,930 --> 00:00:52,890
<font color="#E5E5E5">NIST competition because of free</font>

20
00:00:51,270 --> 00:00:54,840
<font color="#CCCCCC">amorphic encryption</font><font color="#E5E5E5"> people are</font>

21
00:00:52,890 --> 00:00:57,629
<font color="#CCCCCC">interested in in concrete security</font>

22
00:00:54,840 --> 00:00:59,489
estimates for for<font color="#E5E5E5"> this system so they're</font>

23
00:00:57,629 --> 00:01:02,570
<font color="#CCCCCC">actually a lot of estimates</font><font color="#E5E5E5"> and the</font>

24
00:00:59,489 --> 00:01:05,789
problem is<font color="#E5E5E5"> how convincing are there and</font>

25
00:01:02,570 --> 00:01:08,360
a good way to check<font color="#CCCCCC"> your security</font>

26
00:01:05,790 --> 00:01:10,890
estimates is to perform a sanity check

27
00:01:08,360 --> 00:01:13,439
<font color="#E5E5E5">using latest challenges so there's a lot</font>

28
00:01:10,890 --> 00:01:15,600
<font color="#CCCCCC">of websites now but ask you to find</font>

29
00:01:13,439 --> 00:01:17,580
short vectors or<font color="#E5E5E5"> close vectors in</font>

30
00:01:15,600 --> 00:01:21,539
<font color="#CCCCCC">lattices so here are some here are a few</font>

31
00:01:17,580 --> 00:01:23,189
<font color="#E5E5E5">ones so if you want to make money the</font>

32
00:01:21,540 --> 00:01:24,630
<font color="#E5E5E5">only one is the entry challenges and</font>

33
00:01:23,189 --> 00:01:28,829
this is<font color="#E5E5E5"> just for fun</font>

34
00:01:24,630 --> 00:01:32,490
<font color="#E5E5E5">okay so when you look at the hires</font>

35
00:01:28,829 --> 00:01:35,908
record solve with these<font color="#E5E5E5"> challenges for</font>

36
00:01:32,490 --> 00:01:38,579
<font color="#E5E5E5">the first two things go as expected</font><font color="#CCCCCC"> the</font>

37
00:01:35,909 --> 00:01:40,350
<font color="#E5E5E5">best method</font><font color="#CCCCCC"> is expected to be prune</font>

38
00:01:38,579 --> 00:01:41,759
enumeration with<font color="#E5E5E5"> bkz and that's what</font>

39
00:01:40,350 --> 00:01:45,658
happened<font color="#E5E5E5"> and we know the running time</font>

40
00:01:41,759 --> 00:01:48,090
everything behaves like expected<font color="#E5E5E5"> but for</font>

41
00:01:45,659 --> 00:01:51,180
this one<font color="#E5E5E5"> something</font><font color="#CCCCCC"> strange</font><font color="#E5E5E5"> is going on</font>

42
00:01:48,090 --> 00:01:53,549
<font color="#E5E5E5">so what is going on</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> look at the</font>

43
00:01:51,180 --> 00:01:59,850
larger<font color="#E5E5E5"> size VP records first of all they</font>

44
00:01:53,549 --> 00:02:02,549
use significant power close to<font color="#E5E5E5"> errors</font>

45
00:01:59,850 --> 00:02:06,630
<font color="#CCCCCC">say 768 I think it's about</font><font color="#E5E5E5"> 1/2 of the</font>

46
00:02:02,549 --> 00:02:09,360
power of 3768 and then they use a secret

47
00:02:06,630 --> 00:02:11,790
<font color="#E5E5E5">algorithm for which you can find only a</font>

48
00:02:09,360 --> 00:02:14,010
<font color="#CCCCCC">partial description in a paper</font><font color="#E5E5E5"> published</font>

49
00:02:11,790 --> 00:02:16,709
in 2015<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is by</font>

50
00:02:14,010 --> 00:02:18,298
<font color="#CCCCCC">Fugazi</font><font color="#E5E5E5"> and kashiwabara and if you read</font>

51
00:02:16,709 --> 00:02:21,120
<font color="#E5E5E5">at the paper it seems</font><font color="#CCCCCC"> by the main tool</font>

52
00:02:18,299 --> 00:02:23,129
<font color="#CCCCCC">there's several differences</font><font color="#E5E5E5"> but the main</font>

53
00:02:21,120 --> 00:02:25,860
tool seems to be a an improved variant

54
00:02:23,129 --> 00:02:28,920
<font color="#CCCCCC">of an OL algorithm due to Schnoor call</font>

55
00:02:25,860 --> 00:02:30,989
random sampling so invented in 2003

56
00:02:28,920 --> 00:02:34,409
unfortunately this algorithm is not so

57
00:02:30,989 --> 00:02:36,629
well understood<font color="#E5E5E5"> so this is the topic of</font>

58
00:02:34,409 --> 00:02:39,390
<font color="#E5E5E5">this paper we're trying to revisit</font>

59
00:02:36,629 --> 00:02:40,530
snores<font color="#E5E5E5"> random sampling and all the</font>

60
00:02:39,390 --> 00:02:42,450
variants that have<font color="#E5E5E5"> been proposed</font>

61
00:02:40,530 --> 00:02:44,459
including the one<font color="#E5E5E5"> using these records</font>

62
00:02:42,450 --> 00:02:45,780
and the way we do it is we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

63
00:02:44,459 --> 00:02:46,680
change the description<font color="#E5E5E5"> of the algorithm</font>

64
00:02:45,780 --> 00:02:49,349
we're going to make it

65
00:02:46,680 --> 00:02:50,940
geometric<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to really generalize</font>

66
00:02:49,349 --> 00:02:52,679
it<font color="#E5E5E5"> and because of this geometric</font>

67
00:02:50,940 --> 00:02:54,810
<font color="#E5E5E5">description we</font><font color="#CCCCCC"> can give a different</font>

68
00:02:52,680 --> 00:02:57,599
analysis<font color="#E5E5E5"> and this is actually the first</font>

69
00:02:54,810 --> 00:02:59,549
sound<font color="#CCCCCC"> analogy a lot</font><font color="#E5E5E5"> of nowadays before</font>

70
00:02:57,599 --> 00:03:02,518
<font color="#E5E5E5">but before they used to be a gap</font><font color="#CCCCCC"> between</font>

71
00:02:59,549 --> 00:03:04,019
<font color="#E5E5E5">analysis and experiments</font><font color="#CCCCCC"> and because of</font>

72
00:03:02,519 --> 00:03:07,349
this<font color="#E5E5E5"> description</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> also able to</font>

73
00:03:04,019 --> 00:03:09,560
optimize<font color="#E5E5E5"> the</font><font color="#CCCCCC"> selection of parameters so</font>

74
00:03:07,349 --> 00:03:12,899
<font color="#E5E5E5">roughly what we're doing is we unifying</font>

75
00:03:09,560 --> 00:03:15,629
<font color="#CCCCCC">no</font><font color="#E5E5E5"> algorithm with no algorithm</font><font color="#CCCCCC"> so what</font>

76
00:03:12,900 --> 00:03:18,329
is it so random standing<font color="#CCCCCC"> was emitted by</font>

77
00:03:15,629 --> 00:03:21,209
snore<font color="#E5E5E5"> and ten years before it snore</font>

78
00:03:18,329 --> 00:03:22,709
invented with his students another an

79
00:03:21,209 --> 00:03:24,780
algorithm called<font color="#E5E5E5"> pruning</font><font color="#CCCCCC"> M eration which</font>

80
00:03:22,709 --> 00:03:28,500
is very known very<font color="#CCCCCC"> classical issues</font><font color="#E5E5E5"> in</font>

81
00:03:24,780 --> 00:03:30,329
many records<font color="#E5E5E5"> so that's we with unifying</font>

82
00:03:28,500 --> 00:03:34,069
proof of these algorithms<font color="#CCCCCC"> ok so that's</font>

83
00:03:30,329 --> 00:03:36,209
<font color="#E5E5E5">the that's what we're doing</font><font color="#CCCCCC"> ok so</font><font color="#E5E5E5"> we</font>

84
00:03:34,069 --> 00:03:37,918
this is not<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> study to</font><font color="#E5E5E5"> talk at</font>

85
00:03:36,209 --> 00:03:39,780
your crib so we know<font color="#CCCCCC"> that a lattice is a</font>

86
00:03:37,919 --> 00:03:42,629
<font color="#E5E5E5">discrete subgroup of</font><font color="#CCCCCC"> R to the N which</font>

87
00:03:39,780 --> 00:03:46,230
<font color="#E5E5E5">means that every point is isolated or</font>

88
00:03:42,629 --> 00:03:49,168
you can view a lattice<font color="#E5E5E5"> has all the set</font>

89
00:03:46,230 --> 00:03:50,480
of all the linear combination<font color="#E5E5E5"> of vectors</font>

90
00:03:49,169 --> 00:03:53,459
where the vectors are linearly dependent

91
00:03:50,480 --> 00:03:55,619
<font color="#E5E5E5">with integer coefficients</font><font color="#CCCCCC"> so typically</font>

92
00:03:53,459 --> 00:03:59,819
you view it<font color="#E5E5E5"> as</font><font color="#CCCCCC"> a matrix okay so we we</font>

93
00:03:55,620 --> 00:04:02,669
<font color="#E5E5E5">family with this so there's a lot of</font>

94
00:03:59,819 --> 00:04:05,250
<font color="#CCCCCC">hardly</font><font color="#E5E5E5"> these problems</font><font color="#CCCCCC"> essentially</font><font color="#E5E5E5"> it</font>

95
00:04:02,669 --> 00:04:07,590
comes down to<font color="#E5E5E5"> this generic problem</font><font color="#CCCCCC"> I</font>

96
00:04:05,250 --> 00:04:10,019
give you a lattice and<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> give</font><font color="#CCCCCC"> you</font>

97
00:04:07,590 --> 00:04:12,359
some<font color="#CCCCCC"> n-dimensional ball</font><font color="#E5E5E5"> and you want to</font>

98
00:04:10,019 --> 00:04:14,269
decide if the<font color="#E5E5E5"> intersection between the</font>

99
00:04:12,359 --> 00:04:16,709
lattice<font color="#CCCCCC"> and the ball is</font><font color="#E5E5E5"> non-trivial</font><font color="#CCCCCC"> and</font>

100
00:04:14,269 --> 00:04:19,108
if it's non-trivial you want to find our

101
00:04:16,709 --> 00:04:19,680
<font color="#CCCCCC">points ok so</font><font color="#E5E5E5"> there's</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> situate</font><font color="#CCCCCC"> two</font>

102
00:04:19,108 --> 00:04:23,549
<font color="#CCCCCC">settings</font>

103
00:04:19,680 --> 00:04:26,760
<font color="#E5E5E5">ever there's many solutions like here so</font>

104
00:04:23,550 --> 00:04:27,780
that's the<font color="#E5E5E5"> case of</font><font color="#CCCCCC"> Esaias</font><font color="#E5E5E5"> or Isis or you</font>

105
00:04:26,760 --> 00:04:29,880
and the<font color="#E5E5E5"> UNIX setting where</font>

106
00:04:27,780 --> 00:04:32,039
it's only<font color="#E5E5E5"> actually one solution a very</font>

107
00:04:29,880 --> 00:04:33,600
special one<font color="#CCCCCC"> and you want to find it so</font>

108
00:04:32,040 --> 00:04:35,310
that's<font color="#E5E5E5"> beauty bounded distance decoding</font>

109
00:04:33,600 --> 00:04:37,380
<font color="#E5E5E5">there are many other problems like</font><font color="#CCCCCC"> that</font>

110
00:04:35,310 --> 00:04:40,800
<font color="#CCCCCC">okay so these are the trainer egg this</font>

111
00:04:37,380 --> 00:04:42,270
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the generic</font><font color="#E5E5E5"> lattice problem so</font>

112
00:04:40,800 --> 00:04:44,910
enumeration what is the enumeration<font color="#CCCCCC"> an</font>

113
00:04:42,270 --> 00:04:46,680
<font color="#CCCCCC">emersion is just</font><font color="#E5E5E5"> the simplest method to</font>

114
00:04:44,910 --> 00:04:48,930
solve these hard lattice problem it<font color="#E5E5E5"> goes</font>

115
00:04:46,680 --> 00:04:50,700
back to the 70s<font color="#E5E5E5"> and if you didn't know</font>

116
00:04:48,930 --> 00:04:52,560
anything about lattices this is probably

117
00:04:50,700 --> 00:04:54,360
the the algorithm you would come<font color="#E5E5E5"> up</font><font color="#CCCCCC"> with</font>

118
00:04:52,560 --> 00:04:56,700
if<font color="#E5E5E5"> you if you think about it so what is</font>

119
00:04:54,360 --> 00:04:58,440
the<font color="#E5E5E5"> setting again you have a lattice</font><font color="#CCCCCC"> and</font>

120
00:04:56,700 --> 00:05:01,560
<font color="#E5E5E5">now we say I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> restrict to a small</font>

121
00:04:58,440 --> 00:05:03,270
<font color="#E5E5E5">ball okay</font><font color="#CCCCCC"> and I want the number</font><font color="#E5E5E5"> of</font>

122
00:05:01,560 --> 00:05:05,340
points<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the intersection to be small</font>

123
00:05:03,270 --> 00:05:07,620
<font color="#E5E5E5">and</font><font color="#CCCCCC"> what I want is</font><font color="#E5E5E5"> with this enumeration</font>

124
00:05:05,340 --> 00:05:09,900
I'm gonna find all the<font color="#CCCCCC"> points</font><font color="#E5E5E5"> in the</font>

125
00:05:07,620 --> 00:05:12,180
dissection<font color="#CCCCCC"> so the good thing is it's</font>

126
00:05:09,900 --> 00:05:13,859
very simple<font color="#E5E5E5"> it's widely used</font><font color="#CCCCCC"> the problem</font>

127
00:05:12,180 --> 00:05:15,690
is that it's very<font color="#E5E5E5"> expensive</font><font color="#CCCCCC"> it's super</font>

128
00:05:13,860 --> 00:05:18,150
exponential so in small<font color="#E5E5E5"> dimension it's</font>

129
00:05:15,690 --> 00:05:20,160
okay<font color="#E5E5E5"> but in high dimension you you you</font>

130
00:05:18,150 --> 00:05:22,109
see it and what is<font color="#E5E5E5"> interesting it's</font>

131
00:05:20,160 --> 00:05:26,220
actually<font color="#E5E5E5"> much</font><font color="#CCCCCC"> larger than the number of</font>

132
00:05:22,110 --> 00:05:27,479
solutions<font color="#E5E5E5"> okay so how does it work I'm</font>

133
00:05:26,220 --> 00:05:29,430
<font color="#CCCCCC">not going to scram</font><font color="#E5E5E5"> just gonna say the</font>

134
00:05:27,479 --> 00:05:31,979
<font color="#E5E5E5">the key idea behind enumeration is to</font>

135
00:05:29,430 --> 00:05:33,890
project<font color="#E5E5E5"> so when you project of course</font>

136
00:05:31,979 --> 00:05:35,969
<font color="#E5E5E5">you don't you never increase the norms</font>

137
00:05:33,890 --> 00:05:38,430
unfortunately when you project lattice

138
00:05:35,970 --> 00:05:41,760
it may not be a lattice<font color="#CCCCCC"> anymore however</font>

139
00:05:38,430 --> 00:05:44,700
<font color="#E5E5E5">if you project</font><font color="#CCCCCC"> onto nice subspaces</font><font color="#E5E5E5"> it's</font>

140
00:05:41,760 --> 00:05:46,530
still a lattice and it particularly<font color="#E5E5E5"> has</font>

141
00:05:44,700 --> 00:05:48,240
<font color="#E5E5E5">a lower dimension</font><font color="#CCCCCC"> so if you project</font><font color="#E5E5E5"> well</font>

142
00:05:46,530 --> 00:05:50,940
you come back to one dimensional lattice

143
00:05:48,240 --> 00:05:53,789
<font color="#E5E5E5">and then enumeration is very easy so</font>

144
00:05:50,940 --> 00:05:56,100
that's<font color="#CCCCCC"> what you do you do a depth first</font>

145
00:05:53,789 --> 00:05:57,960
search of a<font color="#CCCCCC"> Jagan's entry and at the</font>

146
00:05:56,100 --> 00:06:00,840
lower level you<font color="#E5E5E5"> have a one dimensional</font>

147
00:05:57,960 --> 00:06:01,229
<font color="#E5E5E5">lattice and when you lift it step by</font>

148
00:06:00,840 --> 00:06:06,929
<font color="#E5E5E5">step</font>

149
00:06:01,229 --> 00:06:09,240
<font color="#E5E5E5">okay so what is pruning so praying is as</font>

150
00:06:06,930 --> 00:06:10,979
we see I mean enumeration is super

151
00:06:09,240 --> 00:06:13,830
exponential so we want to speed<font color="#CCCCCC"> things</font>

152
00:06:10,979 --> 00:06:16,469
up so what is the main<font color="#CCCCCC"> idea suppose that</font>

153
00:06:13,830 --> 00:06:18,060
we don't need all the points<font color="#E5E5E5"> in the</font>

154
00:06:16,470 --> 00:06:25,710
dissection<font color="#E5E5E5"> suppose that we only need one</font>

155
00:06:18,060 --> 00:06:27,900
<font color="#CCCCCC">vector</font><font color="#E5E5E5"> can we make enumeration faster so</font>

156
00:06:25,710 --> 00:06:30,359
the first the<font color="#CCCCCC"> first algorithm to do this</font>

157
00:06:27,900 --> 00:06:33,299
goes back<font color="#E5E5E5"> to the to the 90s with a work</font>

158
00:06:30,360 --> 00:06:35,010
of snoring and<font color="#CCCCCC"> Ochsner and horner so</font>

159
00:06:33,300 --> 00:06:36,960
<font color="#E5E5E5">here's</font><font color="#CCCCCC"> the setting you have a</font><font color="#E5E5E5"> lattice</font>

160
00:06:35,010 --> 00:06:39,900
<font color="#CCCCCC">you</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> have your bowl but this time</font>

161
00:06:36,960 --> 00:06:41,700
you're given a third parameter<font color="#CCCCCC"> a pruning</font>

162
00:06:39,900 --> 00:06:43,679
set and this time what<font color="#E5E5E5"> you</font><font color="#CCCCCC"> going</font>

163
00:06:41,700 --> 00:06:47,310
<font color="#CCCCCC">do</font><font color="#E5E5E5"> is going to intersect gonna numerator</font>

164
00:06:43,680 --> 00:06:48,960
smaller set so you<font color="#E5E5E5"> can intersect your</font>

165
00:06:47,310 --> 00:06:51,090
initial set that we've<font color="#E5E5E5"> this pruning set</font>

166
00:06:48,960 --> 00:06:53,849
so what<font color="#E5E5E5"> you do actually is you integrate</font>

167
00:06:51,090 --> 00:06:57,210
<font color="#E5E5E5">V set and</font><font color="#CCCCCC"> then you filter</font><font color="#E5E5E5"> the points</font>

168
00:06:53,850 --> 00:06:59,100
which are inside<font color="#CCCCCC"> the ball okay so why</font>

169
00:06:57,210 --> 00:07:01,859
would<font color="#CCCCCC"> you do that did you do</font><font color="#E5E5E5"> that</font>

170
00:06:59,100 --> 00:07:04,620
because with a special<font color="#E5E5E5"> choice of set</font>

171
00:07:01,860 --> 00:07:07,440
this is going to be<font color="#E5E5E5"> much faster but the</font>

172
00:07:04,620 --> 00:07:09,180
initial<font color="#E5E5E5"> enumeration the downside of</font>

173
00:07:07,440 --> 00:07:09,690
<font color="#CCCCCC">course is maybe you're going</font><font color="#E5E5E5"> to find</font>

174
00:07:09,180 --> 00:07:12,600
nothing

175
00:07:09,690 --> 00:07:14,400
maybe this<font color="#E5E5E5"> intersection is now too small</font>

176
00:07:12,600 --> 00:07:15,900
<font color="#E5E5E5">it's going to give you maybe an empty</font>

177
00:07:14,400 --> 00:07:20,789
set or<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and then you found</font>

178
00:07:15,900 --> 00:07:22,530
absolutely nothing<font color="#CCCCCC"> okay so how do you</font>

179
00:07:20,790 --> 00:07:25,110
<font color="#E5E5E5">analyze</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> so you want to make</font><font color="#CCCCCC"> sure</font>

180
00:07:22,530 --> 00:07:26,880
that you're finding<font color="#E5E5E5"> something so one of</font>

181
00:07:25,110 --> 00:07:28,740
<font color="#E5E5E5">the big problem before in the</font><font color="#CCCCCC"> early and</font>

182
00:07:26,880 --> 00:07:30,870
<font color="#E5E5E5">all of this is that the generation</font>

183
00:07:28,740 --> 00:07:32,670
algorithm actually<font color="#E5E5E5"> is deterministic so</font>

184
00:07:30,870 --> 00:07:34,620
when you want to talk<font color="#E5E5E5"> about probably</font>

185
00:07:32,670 --> 00:07:37,680
success probability you<font color="#E5E5E5"> have to be very</font>

186
00:07:34,620 --> 00:07:39,180
careful<font color="#CCCCCC"> so the magic</font><font color="#E5E5E5"> is that these</font>

187
00:07:37,680 --> 00:07:41,220
<font color="#E5E5E5">prunings that is actually randomized</font>

188
00:07:39,180 --> 00:07:43,590
<font color="#E5E5E5">it's a random variable</font><font color="#CCCCCC"> so it actually</font>

189
00:07:41,220 --> 00:07:46,290
depends<font color="#E5E5E5"> on a on your choice of</font><font color="#CCCCCC"> regis</font>

190
00:07:43,590 --> 00:07:48,000
basis<font color="#E5E5E5"> okay and now we can talk about</font>

191
00:07:46,290 --> 00:07:50,040
<font color="#CCCCCC">successor abilities so we're</font><font color="#E5E5E5"> going to</font>

192
00:07:48,000 --> 00:07:52,860
say<font color="#CCCCCC"> that get</font><font color="#E5E5E5"> something in this</font>

193
00:07:50,040 --> 00:07:54,330
<font color="#CCCCCC">intersection is non-trivial okay</font><font color="#E5E5E5"> so of</font>

194
00:07:52,860 --> 00:07:55,800
course you could<font color="#E5E5E5"> say</font><font color="#CCCCCC"> i mean</font><font color="#E5E5E5"> how do you</font>

195
00:07:54,330 --> 00:08:00,539
compute this probability looks very

196
00:07:55,800 --> 00:08:02,970
difficult<font color="#E5E5E5"> so thanks to gauss we know how</font>

197
00:08:00,540 --> 00:08:04,500
to use declic ount<font color="#E5E5E5"> lattice point in set</font>

198
00:08:02,970 --> 00:08:07,680
so<font color="#E5E5E5"> we know that when we have an</font>

199
00:08:04,500 --> 00:08:09,870
intersection<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a lattice we can you</font>

200
00:08:07,680 --> 00:08:11,880
to estimate<font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> points by</font>

201
00:08:09,870 --> 00:08:16,230
dividing volumes<font color="#CCCCCC"> okay so that's what</font>

202
00:08:11,880 --> 00:08:17,670
gauss did a long<font color="#E5E5E5"> time ago okay</font><font color="#CCCCCC"> so we're</font>

203
00:08:16,230 --> 00:08:19,860
<font color="#E5E5E5">going to do the same thing so we it</font>

204
00:08:17,670 --> 00:08:22,160
comes<font color="#E5E5E5"> back to it comes down to computing</font>

205
00:08:19,860 --> 00:08:24,450
volumes of sets<font color="#E5E5E5"> okay</font>

206
00:08:22,160 --> 00:08:27,060
so if you do this we have a<font color="#E5E5E5"> very natural</font>

207
00:08:24,450 --> 00:08:29,580
<font color="#E5E5E5">go so that goes back</font><font color="#CCCCCC"> to 2010 you you</font>

208
00:08:27,060 --> 00:08:31,650
repeat<font color="#E5E5E5"> by generating this pruning set</font>

209
00:08:29,580 --> 00:08:34,010
with random pruning set I've had you in

210
00:08:31,650 --> 00:08:36,659
the<font color="#E5E5E5"> marais tree small intersection and</font>

211
00:08:34,010 --> 00:08:39,569
even if the<font color="#E5E5E5"> property</font><font color="#CCCCCC"> of success did tiny</font>

212
00:08:36,659 --> 00:08:41,100
maybe this is still much faster than the

213
00:08:39,570 --> 00:08:45,810
initial enumeration<font color="#E5E5E5"> and actually that</font>

214
00:08:41,100 --> 00:08:48,030
<font color="#E5E5E5">was shown in in 2010</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> okay so now we</font>

215
00:08:45,810 --> 00:08:51,060
set is just<font color="#CCCCCC"> now the matter</font><font color="#E5E5E5"> is how do we</font>

216
00:08:48,030 --> 00:08:53,250
select<font color="#E5E5E5"> this set okay so until now I mean</font>

217
00:08:51,060 --> 00:08:54,979
<font color="#E5E5E5">we only knew one choice of set it was to</font>

218
00:08:53,250 --> 00:08:57,830
use the<font color="#E5E5E5"> warm-up snore</font>

219
00:08:54,980 --> 00:08:59,510
and it's<font color="#E5E5E5"> actually a cylinder</font>

220
00:08:57,830 --> 00:09:01,640
<font color="#E5E5E5">intersection so if you see this picture</font>

221
00:08:59,510 --> 00:09:02,720
<font color="#E5E5E5">this picture is not a ball you can see</font>

222
00:09:01,640 --> 00:09:05,060
that<font color="#CCCCCC"> in intersection of several</font>

223
00:09:02,720 --> 00:09:07,730
<font color="#E5E5E5">cylinders</font><font color="#CCCCCC"> okay so that was the initial</font>

224
00:09:05,060 --> 00:09:09,530
<font color="#E5E5E5">why do we</font><font color="#CCCCCC"> choose reset is because of the</font>

225
00:09:07,730 --> 00:09:11,690
way enumeration<font color="#CCCCCC"> works so that's a very</font>

226
00:09:09,530 --> 00:09:14,000
natural choice<font color="#E5E5E5"> so today I'm going to</font>

227
00:09:11,690 --> 00:09:16,190
describe another<font color="#E5E5E5"> choice so that though</font>

228
00:09:14,000 --> 00:09:17,930
what I call<font color="#CCCCCC"> this creep printing and here</font>

229
00:09:16,190 --> 00:09:19,220
<font color="#CCCCCC">they</font><font color="#E5E5E5"> say will be completely</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> it</font>

230
00:09:17,930 --> 00:09:21,620
will not be a cylinder intersection

231
00:09:19,220 --> 00:09:23,420
<font color="#E5E5E5">instead it's going to be a union of cell</font>

232
00:09:21,620 --> 00:09:27,830
and<font color="#E5E5E5"> it particularly</font><font color="#CCCCCC"> cherry it's going to</font>

233
00:09:23,420 --> 00:09:32,000
be a union of many boxes<font color="#E5E5E5"> okay so what is</font>

234
00:09:27,830 --> 00:09:33,710
this<font color="#E5E5E5"> animation with description so I'm</font>

235
00:09:32,000 --> 00:09:35,840
not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> describe the early description</font>

236
00:09:33,710 --> 00:09:37,700
of random sampling what I'm going to say

237
00:09:35,840 --> 00:09:40,000
that the problem with this<font color="#E5E5E5"> analysis is</font>

238
00:09:37,700 --> 00:09:42,680
they try to analyze the distribution<font color="#E5E5E5"> of</font>

239
00:09:40,000 --> 00:09:44,870
certain lattice points<font color="#CCCCCC"> okay and that was</font>

240
00:09:42,680 --> 00:09:46,489
very tricky<font color="#E5E5E5"> I mean it brings you to</font><font color="#CCCCCC"> a</font>

241
00:09:44,870 --> 00:09:48,020
funny assumption and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> they're not</font>

242
00:09:46,490 --> 00:09:49,490
<font color="#CCCCCC">satisfied in practice so that's why</font>

243
00:09:48,020 --> 00:09:51,140
there was<font color="#CCCCCC"> a gap between experiments</font>

244
00:09:49,490 --> 00:09:52,190
analysis<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> change off</font>

245
00:09:51,140 --> 00:09:54,350
one of<font color="#CCCCCC"> you we're going to adopt</font><font color="#E5E5E5"> a</font>

246
00:09:52,190 --> 00:09:56,420
geometric point<font color="#E5E5E5"> of view I'm going to see</font>

247
00:09:54,350 --> 00:10:00,860
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it it's all</font><font color="#E5E5E5"> about petitioning the</font>

248
00:09:56,420 --> 00:10:03,680
the space<font color="#E5E5E5"> okay so how do we do that so</font>

249
00:10:00,860 --> 00:10:05,960
I'm going<font color="#E5E5E5"> to find I'm gonna consider a</font>

250
00:10:03,680 --> 00:10:08,479
partition<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the space in such a way</font>

251
00:10:05,960 --> 00:10:11,360
that the cells<font color="#E5E5E5"> are disjoint of course</font>

252
00:10:08,480 --> 00:10:13,190
and each cell can be open what does it

253
00:10:11,360 --> 00:10:16,040
mean it means that<font color="#E5E5E5"> each cell only</font>

254
00:10:13,190 --> 00:10:18,530
contain one and only one lattice point

255
00:10:16,040 --> 00:10:21,319
<font color="#E5E5E5">and I</font><font color="#CCCCCC"> can find it in point of all time</font>

256
00:10:18,530 --> 00:10:22,459
so given any tag<font color="#E5E5E5"> I can compute this</font>

257
00:10:21,320 --> 00:10:27,080
intersection

258
00:10:22,460 --> 00:10:30,290
<font color="#E5E5E5">okay so intuitively</font><font color="#CCCCCC"> Majan when I was a</font>

259
00:10:27,080 --> 00:10:32,660
kid<font color="#E5E5E5"> I</font><font color="#CCCCCC"> love these</font><font color="#E5E5E5"> these chocolate eggs so</font>

260
00:10:30,290 --> 00:10:35,689
<font color="#E5E5E5">imagine you feel the space with with</font>

261
00:10:32,660 --> 00:10:38,150
these eggs<font color="#E5E5E5"> and every time you you can</font>

262
00:10:35,690 --> 00:10:40,880
you<font color="#E5E5E5"> can take an egg and inside</font><font color="#CCCCCC"> as the</font>

263
00:10:38,150 --> 00:10:42,290
lattice points<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> find it</font>

264
00:10:40,880 --> 00:10:44,630
<font color="#E5E5E5">the</font><font color="#CCCCCC"> problems</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you don't know</font>

265
00:10:42,290 --> 00:10:48,939
beforehand how short is going to be so I

266
00:10:44,630 --> 00:10:48,939
mean you<font color="#E5E5E5"> have to be lucky</font>

267
00:10:49,270 --> 00:10:52,670
so how do we do this<font color="#E5E5E5"> keep rooting now</font>

268
00:10:51,470 --> 00:10:54,410
it's very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> you have these</font>

269
00:10:52,670 --> 00:10:57,500
partitions so<font color="#E5E5E5"> the most natural things to</font>

270
00:10:54,410 --> 00:11:01,459
<font color="#E5E5E5">do is just</font><font color="#CCCCCC"> to take a finite number of</font>

271
00:10:57,500 --> 00:11:04,220
cell<font color="#CCCCCC"> so let's fix some cells finite set</font>

272
00:11:01,460 --> 00:11:05,780
and in which each<font color="#CCCCCC"> of the cell and filter</font>

273
00:11:04,220 --> 00:11:08,300
the one which<font color="#E5E5E5"> is which are inside</font><font color="#CCCCCC"> the</font>

274
00:11:05,780 --> 00:11:09,020
<font color="#CCCCCC">bowl</font><font color="#E5E5E5"> then it's obvious but when you do</font>

275
00:11:08,300 --> 00:11:12,260
<font color="#E5E5E5">this</font>

276
00:11:09,020 --> 00:11:14,810
the running<font color="#E5E5E5"> time</font><font color="#CCCCCC"> of one pass is just</font><font color="#E5E5E5"> the</font>

277
00:11:12,260 --> 00:11:17,150
number<font color="#CCCCCC"> of tags that you took up to a</font>

278
00:11:14,810 --> 00:11:19,189
<font color="#E5E5E5">point of all time unit and each</font>

279
00:11:17,150 --> 00:11:22,250
iteration is<font color="#CCCCCC"> going to succeed with the</font>

280
00:11:19,190 --> 00:11:23,990
previous probability<font color="#E5E5E5"> okay so if I want</font>

281
00:11:22,250 --> 00:11:26,150
to<font color="#CCCCCC"> estimate with probability I just need</font>

282
00:11:23,990 --> 00:11:28,460
to compute<font color="#E5E5E5"> this volume but because I</font>

283
00:11:26,150 --> 00:11:29,870
took<font color="#E5E5E5"> a partition the volume is very easy</font>

284
00:11:28,460 --> 00:11:32,779
if the sum<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the volume because they</font>

285
00:11:29,870 --> 00:11:34,190
<font color="#E5E5E5">they they disjoint right so if I want to</font>

286
00:11:32,779 --> 00:11:36,500
compute<font color="#E5E5E5"> a success probability I just</font>

287
00:11:34,190 --> 00:11:38,420
need to be able<font color="#CCCCCC"> to compute</font><font color="#E5E5E5"> this volume</font>

288
00:11:36,500 --> 00:11:41,420
<font color="#CCCCCC">be cell intersection</font><font color="#E5E5E5"> volume with a ball</font>

289
00:11:38,420 --> 00:11:43,430
<font color="#E5E5E5">okay and or is something</font><font color="#CCCCCC"> now the running</font>

290
00:11:41,420 --> 00:11:45,949
time of generation<font color="#E5E5E5"> is linear in the</font>

291
00:11:43,430 --> 00:11:48,290
number of points<font color="#CCCCCC"> okay if</font><font color="#E5E5E5"> if you don't</font>

292
00:11:45,950 --> 00:11:53,660
consider the ball<font color="#E5E5E5"> okay so it's in</font><font color="#CCCCCC"> some</font>

293
00:11:48,290 --> 00:11:55,099
sense<font color="#CCCCCC"> it's optimal here so there</font><font color="#E5E5E5"> are</font>

294
00:11:53,660 --> 00:11:57,199
many<font color="#E5E5E5"> issues I mean now the algorithm is</font>

295
00:11:55,100 --> 00:11:59,240
very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> but how do</font><font color="#E5E5E5"> we choose the</font>

296
00:11:57,200 --> 00:12:01,760
parameters<font color="#E5E5E5"> so first of all how do we</font>

297
00:11:59,240 --> 00:12:05,390
choose the<font color="#E5E5E5"> lattice partition how do we</font>

298
00:12:01,760 --> 00:12:08,630
compute this intersection volumes and

299
00:12:05,390 --> 00:12:09,860
how do<font color="#E5E5E5"> we select</font><font color="#CCCCCC"> the cells</font><font color="#E5E5E5"> right so</font>

300
00:12:08,630 --> 00:12:11,330
we're going<font color="#E5E5E5"> to do something different</font>

301
00:12:09,860 --> 00:12:13,880
from<font color="#E5E5E5"> what was done</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> going to</font>

302
00:12:11,330 --> 00:12:17,380
<font color="#E5E5E5">choose the one maximizing the volume but</font>

303
00:12:13,880 --> 00:12:19,970
how can we<font color="#E5E5E5"> really do it efficiently</font>

304
00:12:17,380 --> 00:12:22,100
so first is which lattice partition so

305
00:12:19,970 --> 00:12:24,530
if your family of lattices<font color="#E5E5E5"> you easily</font>

306
00:12:22,100 --> 00:12:25,970
<font color="#CCCCCC">easily come up with partition coming</font>

307
00:12:24,530 --> 00:12:28,250
from fundamental<font color="#CCCCCC"> domain and we'll see</font>

308
00:12:25,970 --> 00:12:31,690
that<font color="#E5E5E5"> in a minute and that</font><font color="#CCCCCC"> corresponds</font><font color="#E5E5E5"> to</font>

309
00:12:28,250 --> 00:12:35,210
the natural<font color="#E5E5E5"> to do integers okay</font>

310
00:12:31,690 --> 00:12:38,210
n-dimensional integer vectors you<font color="#E5E5E5"> can do</font>

311
00:12:35,210 --> 00:12:40,250
it with<font color="#E5E5E5"> bye-byes algorithm and</font><font color="#CCCCCC"> you can</font>

312
00:12:38,210 --> 00:12:43,040
also do it now with positive integers

313
00:12:40,250 --> 00:12:44,540
<font color="#E5E5E5">and that's quite a funny and both of its</font>

314
00:12:43,040 --> 00:12:46,069
<font color="#E5E5E5">partitions were implicit in early work</font>

315
00:12:44,540 --> 00:12:49,189
they didn't mention partition<font color="#E5E5E5"> but this</font>

316
00:12:46,070 --> 00:12:51,410
is really what's happening first is the

317
00:12:49,190 --> 00:12:53,060
trivial partition so when you have the

318
00:12:51,410 --> 00:12:54,949
<font color="#E5E5E5">definition of lattice you really want to</font>

319
00:12:53,060 --> 00:12:57,979
split the most natural way<font color="#CCCCCC"> to partition</font>

320
00:12:54,950 --> 00:13:00,680
<font color="#E5E5E5">the spaces to do this so you can tag</font>

321
00:12:57,980 --> 00:13:03,020
<font color="#CCCCCC">again</font><font color="#E5E5E5"> you can tag any lattice point</font>

322
00:13:00,680 --> 00:13:04,729
<font color="#E5E5E5">value by integer vector and the cell</font>

323
00:13:03,020 --> 00:13:06,079
opening is<font color="#CCCCCC"> just a matrix vector product</font>

324
00:13:04,730 --> 00:13:08,600
unfortunately it's completely useless

325
00:13:06,080 --> 00:13:11,650
<font color="#CCCCCC">because</font><font color="#E5E5E5"> you don't learn anything by</font>

326
00:13:08,600 --> 00:13:13,779
<font color="#CCCCCC">doing this so we</font><font color="#E5E5E5"> want something</font>

327
00:13:11,650 --> 00:13:17,089
<font color="#E5E5E5">interesting so how do we do</font><font color="#CCCCCC"> it</font>

328
00:13:13,779 --> 00:13:18,890
first consider<font color="#E5E5E5"> dimension</font><font color="#CCCCCC"> one so in</font>

329
00:13:17,089 --> 00:13:20,839
dimension<font color="#CCCCCC"> one a</font><font color="#E5E5E5"> lattice is just a</font>

330
00:13:18,890 --> 00:13:22,310
multiple of<font color="#E5E5E5"> some vector so let's say</font>

331
00:13:20,839 --> 00:13:27,079
it's one here<font color="#CCCCCC"> too</font>

332
00:13:22,310 --> 00:13:28,310
so how do we partition the the line<font color="#E5E5E5"> in</font>

333
00:13:27,079 --> 00:13:29,839
such a way that<font color="#CCCCCC"> there's only</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> lattice</font>

334
00:13:28,310 --> 00:13:31,609
<font color="#CCCCCC">point so</font><font color="#E5E5E5"> the most natural thing is</font>

335
00:13:29,839 --> 00:13:33,740
<font color="#E5E5E5">around here</font><font color="#CCCCCC"> so that would be the zero</font>

336
00:13:31,610 --> 00:13:35,240
cell<font color="#E5E5E5"> this will be the one cell this</font>

337
00:13:33,740 --> 00:13:37,459
would be the minus<font color="#CCCCCC"> one cell you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see</font>

338
00:13:35,240 --> 00:13:39,470
there's only one lattice<font color="#CCCCCC"> point here okay</font>

339
00:13:37,459 --> 00:13:42,529
so that's correspond to the one

340
00:13:39,470 --> 00:13:44,180
dimensional<font color="#CCCCCC"> buh-byes partition but you</font>

341
00:13:42,529 --> 00:13:49,610
can also do it<font color="#CCCCCC"> with integers like this</font>

342
00:13:44,180 --> 00:13:50,508
this is<font color="#CCCCCC"> 0 1 2 3</font><font color="#E5E5E5"> and you see it's not</font>

343
00:13:49,610 --> 00:13:52,670
<font color="#CCCCCC">connects anymore</font>

344
00:13:50,509 --> 00:13:54,680
the<font color="#E5E5E5"> only thing you have</font><font color="#CCCCCC"> to break ties</font>

345
00:13:52,670 --> 00:13:56,660
you have to be careful<font color="#E5E5E5"> -1 only belong</font>

346
00:13:54,680 --> 00:14:00,378
say to the green one and<font color="#E5E5E5"> one belongs to</font>

347
00:13:56,660 --> 00:14:03,949
the yellow one<font color="#CCCCCC"> okay okay so that is in</font>

348
00:14:00,379 --> 00:14:05,839
dimension<font color="#E5E5E5"> 1 how do we do it</font><font color="#CCCCCC"> in higher</font>

349
00:14:03,949 --> 00:14:08,660
dimension you generalize using

350
00:14:05,839 --> 00:14:10,509
projection so the formal<font color="#E5E5E5"> way to do it is</font>

351
00:14:08,660 --> 00:14:12,589
<font color="#E5E5E5">you is a gram-schmidt orthogonalization</font>

352
00:14:10,509 --> 00:14:16,519
<font color="#E5E5E5">but you can see the picture you just</font>

353
00:14:12,589 --> 00:14:18,740
<font color="#E5E5E5">have to project nicely the lattice so</font>

354
00:14:16,519 --> 00:14:21,050
when you do<font color="#E5E5E5"> that the most natural</font><font color="#CCCCCC"> thing</font>

355
00:14:18,740 --> 00:14:23,749
to do is<font color="#CCCCCC"> bye-byes partition and you get</font>

356
00:14:21,050 --> 00:14:25,758
this<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so you see</font><font color="#CCCCCC"> I'm can</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> can</font>

357
00:14:23,749 --> 00:14:27,889
<font color="#CCCCCC">tile the space with</font><font color="#E5E5E5"> these boxes and</font>

358
00:14:25,759 --> 00:14:29,839
there's only<font color="#E5E5E5"> one lattice point inside</font>

359
00:14:27,889 --> 00:14:31,850
each box<font color="#E5E5E5"> it correspond</font><font color="#CCCCCC"> to my one</font>

360
00:14:29,839 --> 00:14:34,639
dimensional example<font color="#E5E5E5"> how do I find</font>

361
00:14:31,850 --> 00:14:37,189
<font color="#E5E5E5">mysteries</font><font color="#CCCCCC"> points well fortunately a long</font>

362
00:14:34,639 --> 00:14:39,230
time ago<font color="#E5E5E5"> Bob I invented now</font><font color="#CCCCCC"> go room to</font>

363
00:14:37,189 --> 00:14:40,879
do this it's actually<font color="#CCCCCC"> a subroutine</font><font color="#E5E5E5"> of</font>

364
00:14:39,230 --> 00:14:42,920
<font color="#CCCCCC">lll</font><font color="#E5E5E5"> so if you're familiar with by</font>

365
00:14:40,879 --> 00:14:46,699
algorithm you<font color="#E5E5E5"> you know what I'm talking</font>

366
00:14:42,920 --> 00:14:48,469
about<font color="#E5E5E5"> so let's see it more with color so</font>

367
00:14:46,699 --> 00:14:51,529
what happens if<font color="#E5E5E5"> I take now the the</font>

368
00:14:48,470 --> 00:14:53,809
natural<font color="#E5E5E5"> partition this is how it looks</font>

369
00:14:51,529 --> 00:14:57,620
like<font color="#CCCCCC"> so when I was projecting I was</font>

370
00:14:53,809 --> 00:14:59,149
getting this<font color="#E5E5E5"> non connects cell and</font>

371
00:14:57,620 --> 00:15:01,009
here's what happening in dimension in

372
00:14:59,149 --> 00:15:04,850
higher dimension<font color="#E5E5E5"> so you see here it's a</font>

373
00:15:01,009 --> 00:15:06,500
union<font color="#E5E5E5"> of four boxes</font><font color="#CCCCCC"> ok and he's the</font>

374
00:15:04,850 --> 00:15:09,350
formal definition using<font color="#E5E5E5"> the gram-schmidt</font>

375
00:15:06,500 --> 00:15:13,990
<font color="#CCCCCC">and you do the opening this the same way</font>

376
00:15:09,350 --> 00:15:16,189
as before<font color="#CCCCCC"> okay so now we have a problem</font>

377
00:15:13,990 --> 00:15:19,179
we have<font color="#E5E5E5"> chose the partition we</font><font color="#CCCCCC"> need to</font>

378
00:15:16,189 --> 00:15:22,099
compute this<font color="#E5E5E5"> intersection of volumes</font>

379
00:15:19,179 --> 00:15:25,069
<font color="#E5E5E5">where one is a ball and the</font><font color="#CCCCCC"> other one is</font>

380
00:15:22,100 --> 00:15:27,470
<font color="#CCCCCC">a box or union of symmetric box</font><font color="#E5E5E5"> like in</font>

381
00:15:25,069 --> 00:15:28,878
the natural partition so the<font color="#E5E5E5"> for the</font>

382
00:15:27,470 --> 00:15:30,889
good thing is we<font color="#CCCCCC"> can do it it's a nice</font>

383
00:15:28,879 --> 00:15:33,769
<font color="#CCCCCC">exercise</font><font color="#E5E5E5"> will give us analytic formulas</font>

384
00:15:30,889 --> 00:15:35,880
we get<font color="#CCCCCC"> infinite</font><font color="#E5E5E5"> array formulas and in</font>

385
00:15:33,769 --> 00:15:38,820
practice we use a fast inverse

386
00:15:35,880 --> 00:15:41,250
<font color="#E5E5E5">that press transform so computing the</font>

387
00:15:38,820 --> 00:15:43,290
volume of a ball with with the box<font color="#E5E5E5"> okay</font>

388
00:15:41,250 --> 00:15:47,310
<font color="#E5E5E5">so it's an application</font><font color="#CCCCCC"> now we understand</font>

389
00:15:43,290 --> 00:15:48,870
why the<font color="#CCCCCC"> FK</font><font color="#E5E5E5"> 15 algorithm was better than</font>

390
00:15:47,310 --> 00:15:52,770
<font color="#CCCCCC">no</font><font color="#E5E5E5"> algorithm they had much bigger</font>

391
00:15:48,870 --> 00:15:55,080
volumes so that's why<font color="#E5E5E5"> these in the</font>

392
00:15:52,770 --> 00:15:57,780
Japanese record<font color="#E5E5E5"> saying it was faster</font>

393
00:15:55,080 --> 00:16:00,450
<font color="#E5E5E5">eventual algorithm</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> let's</font>

394
00:15:57,780 --> 00:16:02,610
using this computation how can we

395
00:16:00,450 --> 00:16:06,060
<font color="#E5E5E5">compute the best self unfortunately we</font>

396
00:16:02,610 --> 00:16:07,710
cannot do it with our competition<font color="#CCCCCC"> which</font>

397
00:16:06,060 --> 00:16:10,530
is too slow<font color="#E5E5E5"> but that's the good</font>

398
00:16:07,710 --> 00:16:12,030
heuristics<font color="#E5E5E5"> we can use it by determining</font>

399
00:16:10,530 --> 00:16:13,290
<font color="#CCCCCC">the cell minimizing</font><font color="#E5E5E5"> this expectation</font>

400
00:16:12,030 --> 00:16:14,430
<font color="#E5E5E5">because it's</font><font color="#CCCCCC"> a box</font>

401
00:16:13,290 --> 00:16:16,740
when<font color="#E5E5E5"> is the box it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> easy to</font>

402
00:16:14,430 --> 00:16:18,989
<font color="#E5E5E5">compute this expectation</font><font color="#CCCCCC"> and it turns</font>

403
00:16:16,740 --> 00:16:21,780
out<font color="#E5E5E5"> way it's possible</font><font color="#CCCCCC"> to find all the</font>

404
00:16:18,990 --> 00:16:23,430
<font color="#CCCCCC">cell's minimizing this value it turns</font>

405
00:16:21,780 --> 00:16:25,500
out<font color="#CCCCCC"> that they're almost the same cell as</font>

406
00:16:23,430 --> 00:16:27,660
the<font color="#E5E5E5"> one with largest</font><font color="#CCCCCC"> volumes</font><font color="#E5E5E5"> so here it</font>

407
00:16:25,500 --> 00:16:29,580
is<font color="#E5E5E5"> curve</font><font color="#CCCCCC"> I take the largest</font><font color="#E5E5E5"> volume</font><font color="#CCCCCC"> cell</font>

408
00:16:27,660 --> 00:16:31,890
and you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> apart from a few one</font>

409
00:16:29,580 --> 00:16:36,750
these are<font color="#CCCCCC"> the one with minimal</font>

410
00:16:31,890 --> 00:16:39,270
expectation<font color="#E5E5E5"> so that's very useful</font><font color="#CCCCCC"> how do</font>

411
00:16:36,750 --> 00:16:41,760
we guess the<font color="#CCCCCC"> success probability</font><font color="#E5E5E5"> and</font>

412
00:16:39,270 --> 00:16:43,079
then we can do the<font color="#E5E5E5"> same thing so I was</font>

413
00:16:41,760 --> 00:16:44,910
watching<font color="#CCCCCC"> the</font><font color="#E5E5E5"> u.s. election like many</font>

414
00:16:43,080 --> 00:16:47,010
<font color="#E5E5E5">people and I realized we don't need to</font>

415
00:16:44,910 --> 00:16:49,469
<font color="#E5E5E5">compute each term</font><font color="#CCCCCC"> to approximate the</font><font color="#E5E5E5"> Sun</font>

416
00:16:47,010 --> 00:16:51,330
we<font color="#E5E5E5"> can just do them like in</font><font color="#CCCCCC"> Pauling we</font>

417
00:16:49,470 --> 00:16:53,790
<font color="#E5E5E5">select a few thousand cell and then we</font>

418
00:16:51,330 --> 00:16:56,310
extrapolate<font color="#E5E5E5"> and we get one person margin</font>

419
00:16:53,790 --> 00:16:58,890
and it's not as important<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> u.s.</font>

420
00:16:56,310 --> 00:17:00,329
election obviously<font color="#CCCCCC"> so if I make an</font><font color="#E5E5E5"> error</font>

421
00:16:58,890 --> 00:17:01,860
it's not it's not a<font color="#E5E5E5"> big deal</font>

422
00:17:00,330 --> 00:17:04,199
one person<font color="#E5E5E5"> error I can tolerate it and</font>

423
00:17:01,860 --> 00:17:05,880
that's how<font color="#E5E5E5"> I</font><font color="#CCCCCC"> obtained we obtained sound</font>

424
00:17:04,199 --> 00:17:07,560
<font color="#E5E5E5">successful bilities for description you</font>

425
00:17:05,880 --> 00:17:10,470
can really<font color="#E5E5E5"> estimate the number of points</font>

426
00:17:07,560 --> 00:17:17,040
<font color="#E5E5E5">found in practice so it matches for the</font>

427
00:17:10,470 --> 00:17:19,949
<font color="#E5E5E5">first time the the</font><font color="#CCCCCC"> experiments ok so now</font>

428
00:17:17,040 --> 00:17:23,399
you're asking<font color="#CCCCCC"> is it better than the old</font>

429
00:17:19,949 --> 00:17:24,300
pruning so it turns out<font color="#E5E5E5"> that it's not an</font>

430
00:17:23,400 --> 00:17:26,699
easier question

431
00:17:24,300 --> 00:17:29,070
so sometimes it's faster<font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> is</font>

432
00:17:26,699 --> 00:17:30,930
<font color="#E5E5E5">slower so we it turns out it's faster</font>

433
00:17:29,070 --> 00:17:33,000
when the number<font color="#E5E5E5"> of tag is small when a</font>

434
00:17:30,930 --> 00:17:34,950
dimension is high and the basis is<font color="#CCCCCC"> not</font>

435
00:17:33,000 --> 00:17:36,510
too strongly reduced<font color="#E5E5E5"> there are some</font>

436
00:17:34,950 --> 00:17:38,250
benefits to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> discreet pruning</font><font color="#E5E5E5"> it's</font>

437
00:17:36,510 --> 00:17:41,280
<font color="#E5E5E5">very easy to paralyze it means it's very</font>

438
00:17:38,250 --> 00:17:43,260
<font color="#CCCCCC">easy to implement</font><font color="#E5E5E5"> in GPU it can very</font>

439
00:17:41,280 --> 00:17:47,040
easily generate parameters with respect

440
00:17:43,260 --> 00:17:49,680
to cellular pruning if you want to

441
00:17:47,040 --> 00:17:51,570
optimize<font color="#E5E5E5"> the basis you would like</font>

442
00:17:49,680 --> 00:17:54,030
intuitively to<font color="#E5E5E5"> minimize the sum</font><font color="#CCCCCC"> of the</font>

443
00:17:51,570 --> 00:17:55,950
gram-schmidt norms<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I don't want to</font>

444
00:17:54,030 --> 00:17:58,320
<font color="#CCCCCC">say that</font><font color="#E5E5E5"> the best basis for this pruning</font>

445
00:17:55,950 --> 00:18:01,530
may not be the best basis for the

446
00:17:58,320 --> 00:18:04,740
<font color="#E5E5E5">opening and that brings me</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

447
00:18:01,530 --> 00:18:08,280
conclusion so what we did is we unify

448
00:18:04,740 --> 00:18:10,680
<font color="#CCCCCC">tional or algorithms</font><font color="#E5E5E5"> one in the 90s one</font>

449
00:18:08,280 --> 00:18:13,410
in the 2000s so if you random sampling

450
00:18:10,680 --> 00:18:15,750
as really an enumeration<font color="#E5E5E5"> so the name is</font>

451
00:18:13,410 --> 00:18:18,240
actually<font color="#CCCCCC"> not good</font><font color="#E5E5E5"> it should be</font><font color="#CCCCCC"> readier</font>

452
00:18:15,750 --> 00:18:20,970
<font color="#CCCCCC">and enumeration and</font><font color="#E5E5E5"> we announced</font><font color="#CCCCCC"> it in</font>

453
00:18:18,240 --> 00:18:22,710
the same<font color="#E5E5E5"> way as a 2010 under only the</font>

454
00:18:20,970 --> 00:18:24,929
gosh turistic so we would get<font color="#E5E5E5"> rid of</font>

455
00:18:22,710 --> 00:18:26,730
these funny assumptions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> only</font>

456
00:18:24,929 --> 00:18:31,590
differences but instead of cylinders we

457
00:18:26,730 --> 00:18:33,179
have to deal with boxes<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> we get</font>

458
00:18:31,590 --> 00:18:34,889
<font color="#CCCCCC">introduced new tools how</font><font color="#E5E5E5"> to compute</font>

459
00:18:33,179 --> 00:18:37,800
volume of<font color="#CCCCCC"> both box intersection how to</font>

460
00:18:34,890 --> 00:18:40,890
<font color="#E5E5E5">approximate</font><font color="#CCCCCC"> the sum of</font><font color="#E5E5E5"> many volumes and</font>

461
00:18:37,800 --> 00:18:43,649
we show how to generate nearly optimal

462
00:18:40,890 --> 00:18:47,580
parameters<font color="#E5E5E5"> so we find we</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> the best</font>

463
00:18:43,650 --> 00:18:48,990
<font color="#E5E5E5">cells better there's a lot of</font>

464
00:18:47,580 --> 00:18:51,178
interesting<font color="#CCCCCC"> open problem</font><font color="#E5E5E5"> so I'm totally</font>

465
00:18:48,990 --> 00:18:53,490
you could ask what<font color="#E5E5E5"> is the best form of</font>

466
00:18:51,179 --> 00:18:55,830
of pruning so now we can do<font color="#E5E5E5"> concrete</font>

467
00:18:53,490 --> 00:18:58,470
comparison for fixed parameters but

468
00:18:55,830 --> 00:18:59,820
asymptotically what is going on is<font color="#CCCCCC"> its</font>

469
00:18:58,470 --> 00:19:01,380
<font color="#CCCCCC">cylinder pruning is the disk root</font>

470
00:18:59,820 --> 00:19:05,129
pruning<font color="#E5E5E5"> is it something different</font>

471
00:19:01,380 --> 00:19:07,200
is it a mixed now it's clear that we

472
00:19:05,130 --> 00:19:09,330
need<font color="#CCCCCC"> to adapt</font><font color="#E5E5E5"> block rise reduction to</font>

473
00:19:07,200 --> 00:19:11,610
description because<font color="#CCCCCC"> discreet pruning</font>

474
00:19:09,330 --> 00:19:13,290
allows you as opposed to<font color="#CCCCCC"> sign and</font>

475
00:19:11,610 --> 00:19:16,469
<font color="#E5E5E5">reporting to tackle and very large</font>

476
00:19:13,290 --> 00:19:19,050
blocks and so the big question<font color="#CCCCCC"> is what</font>

477
00:19:16,470 --> 00:19:21,780
is the<font color="#E5E5E5"> best reduction algorithm for</font>

478
00:19:19,050 --> 00:19:24,340
<font color="#E5E5E5">discreet pruning</font><font color="#CCCCCC"> and that's all I wanted</font>

479
00:19:21,780 --> 00:19:27,859
to say thank you for your attention

480
00:19:24,340 --> 00:19:27,859
[Applause]

