1
00:00:03,280 --> 00:00:04,640
hello everyone

2
00:00:04,640 --> 00:00:06,560
i am very happy to present you the paper

3
00:00:06,560 --> 00:00:09,360
trojan resilience without cryptography

4
00:00:09,360 --> 00:00:11,920
written by shufrae deep chakraborty

5
00:00:11,920 --> 00:00:15,200
stefan jimbowski thomas lisuray

6
00:00:15,200 --> 00:00:17,920
pietrack michelle yell and me mogojo

7
00:00:17,920 --> 00:00:20,640
tagawanska

8
00:00:20,960 --> 00:00:22,160
so hello

9
00:00:22,160 --> 00:00:24,240
and what is this paper about from the

10
00:00:24,240 --> 00:00:26,640
most general perspective i would say

11
00:00:26,640 --> 00:00:29,439
that we investigate the countermeasures

12
00:00:29,439 --> 00:00:31,760
against digital trojans and existing

13
00:00:31,760 --> 00:00:34,320
cryptographic solutions against digital

14
00:00:34,320 --> 00:00:37,440
hardware trojans mostly often use some

15
00:00:37,440 --> 00:00:41,120
heavy cryptographic tools in our case we

16
00:00:41,120 --> 00:00:43,920
focus on extremely simple constructions

17
00:00:43,920 --> 00:00:46,960
and still we achieve some meaningful

18
00:00:46,960 --> 00:00:49,360
security notion so the contemporary

19
00:00:49,360 --> 00:00:52,079
context of using cryptographic devices

20
00:00:52,079 --> 00:00:53,840
looks like that

21
00:00:53,840 --> 00:00:55,920
there exists a user

22
00:00:55,920 --> 00:00:56,719
who

23
00:00:56,719 --> 00:00:58,719
needs needs some device realizing

24
00:00:58,719 --> 00:01:00,960
functionality f he may even possess the

25
00:01:00,960 --> 00:01:04,640
circuit description but it she's not a

26
00:01:04,640 --> 00:01:08,080
manufacturer by herself so she simply

27
00:01:08,080 --> 00:01:10,320
sends this circuit description to some

28
00:01:10,320 --> 00:01:12,479
untrusted factory

29
00:01:12,479 --> 00:01:13,280
and

30
00:01:13,280 --> 00:01:15,119
receives a circuit

31
00:01:15,119 --> 00:01:16,080
which is

32
00:01:16,080 --> 00:01:18,080
hopefully

33
00:01:18,080 --> 00:01:20,320
produced according to the specification

34
00:01:20,320 --> 00:01:22,880
unfortunately such naivety may be

35
00:01:22,880 --> 00:01:26,320
explored by some bad people i mean we

36
00:01:26,320 --> 00:01:28,400
can easily imagine the opportunities

37
00:01:28,400 --> 00:01:30,479
given to the adversary

38
00:01:30,479 --> 00:01:32,720
if he can simply produce the

39
00:01:32,720 --> 00:01:35,040
cryptographic device and here you see

40
00:01:35,040 --> 00:01:38,159
some headlines from popular newspapers

41
00:01:38,159 --> 00:01:39,439
describing

42
00:01:39,439 --> 00:01:41,600
successful attacks

43
00:01:41,600 --> 00:01:43,920
which were exploiting digital hardware

44
00:01:43,920 --> 00:01:46,000
trojans some of them probably are still

45
00:01:46,000 --> 00:01:47,119
uncovered

46
00:01:47,119 --> 00:01:50,479
so it's a real life problem and as such

47
00:01:50,479 --> 00:01:51,200
it

48
00:01:51,200 --> 00:01:55,520
of course have some has its own place in

49
00:01:55,520 --> 00:01:57,759
the world of physical attacks on the

50
00:01:57,759 --> 00:01:59,600
crypto systems

51
00:01:59,600 --> 00:02:01,600
and now i'll tell you a bit more about

52
00:02:01,600 --> 00:02:02,880
this

53
00:02:02,880 --> 00:02:06,560
so where the hardware trojan horses live

54
00:02:06,560 --> 00:02:08,560
we know that the black box model of

55
00:02:08,560 --> 00:02:10,639
cryptographic or even

56
00:02:10,639 --> 00:02:12,239
computing device

57
00:02:12,239 --> 00:02:15,040
was challenged in the middle of the 90s

58
00:02:15,040 --> 00:02:16,959
some of us that would say that even

59
00:02:16,959 --> 00:02:19,200
before but anyway

60
00:02:19,200 --> 00:02:20,879
in the middle of the 90s there were

61
00:02:20,879 --> 00:02:22,959
published many papers

62
00:02:22,959 --> 00:02:25,200
which were describing successful attacks

63
00:02:25,200 --> 00:02:27,680
on cryptographic protocols

64
00:02:27,680 --> 00:02:30,080
exploiting the fact that the

65
00:02:30,080 --> 00:02:32,080
cryptographic device is a physical

66
00:02:32,080 --> 00:02:34,319
object according to the type of the

67
00:02:34,319 --> 00:02:36,480
interaction between the adversary and

68
00:02:36,480 --> 00:02:38,000
the device

69
00:02:38,000 --> 00:02:39,599
i think we can

70
00:02:39,599 --> 00:02:41,760
divide these attacks into three main

71
00:02:41,760 --> 00:02:43,760
groups the first one

72
00:02:43,760 --> 00:02:46,000
are liquid attacks

73
00:02:46,000 --> 00:02:47,440
i would say that in this case the

74
00:02:47,440 --> 00:02:50,720
adversary is the most passive it simply

75
00:02:50,720 --> 00:02:53,519
observes and measures the cryptographic

76
00:02:53,519 --> 00:02:56,160
device sometimes this device is modeled

77
00:02:56,160 --> 00:02:58,400
as a logical circuit and then the

78
00:02:58,400 --> 00:03:01,760
adversary can simply get to know some

79
00:03:01,760 --> 00:03:03,440
values on the wires during the

80
00:03:03,440 --> 00:03:05,200
computation

81
00:03:05,200 --> 00:03:06,560
sometimes

82
00:03:06,560 --> 00:03:08,640
it is not modeled this way

83
00:03:08,640 --> 00:03:11,519
then the leakage is some function

84
00:03:11,519 --> 00:03:15,680
some bounded in the output function on

85
00:03:15,680 --> 00:03:19,040
the internal private state and the input

86
00:03:19,040 --> 00:03:20,400
and so on

87
00:03:20,400 --> 00:03:22,959
the second type are tampering attacks

88
00:03:22,959 --> 00:03:25,840
where the adversary is a bit more

89
00:03:25,840 --> 00:03:30,080
active she can influence the behavior of

90
00:03:30,080 --> 00:03:31,360
the circuit

91
00:03:31,360 --> 00:03:33,680
she can modify it and the third type i

92
00:03:33,680 --> 00:03:36,080
had were trojans

93
00:03:36,080 --> 00:03:39,120
and here the adversary simply produces

94
00:03:39,120 --> 00:03:40,000
the

95
00:03:40,000 --> 00:03:41,760
cryptographic device there are some

96
00:03:41,760 --> 00:03:42,799
papers

97
00:03:42,799 --> 00:03:44,000
which

98
00:03:44,000 --> 00:03:46,720
investigate this problem in a very

99
00:03:46,720 --> 00:03:49,519
systematic way just to mention for the

100
00:03:49,519 --> 00:03:52,959
leakage there is a paper private circuit

101
00:03:52,959 --> 00:03:55,439
or the tampering private circus2 and for

102
00:03:55,439 --> 00:03:57,599
the drawdowns there are also some papers

103
00:03:57,599 --> 00:04:00,080
and yes there is a paper private circus

104
00:04:00,080 --> 00:04:02,560
tree so as this problem is very

105
00:04:02,560 --> 00:04:05,040
practical very common of course exist

106
00:04:05,040 --> 00:04:06,720
different solutions and the first group

107
00:04:06,720 --> 00:04:08,000
of the solutions are physical

108
00:04:08,000 --> 00:04:09,920
countermeasures this approach consists

109
00:04:09,920 --> 00:04:12,560
of many different methods

110
00:04:12,560 --> 00:04:14,400
such as physical scanning optical

111
00:04:14,400 --> 00:04:16,798
inspection electromagnetic analysis

112
00:04:16,798 --> 00:04:19,358
input output analyzers and many other

113
00:04:19,358 --> 00:04:23,120
unfortunately they are quite costly

114
00:04:23,120 --> 00:04:25,680
i mean we need to check every single

115
00:04:25,680 --> 00:04:27,040
circuit

116
00:04:27,040 --> 00:04:29,840
and secondly even if the circuit pass

117
00:04:29,840 --> 00:04:31,120
all the tests

118
00:04:31,120 --> 00:04:33,919
we are not sure if we uncovered the

119
00:04:33,919 --> 00:04:35,680
malicious behavior of the circuit

120
00:04:35,680 --> 00:04:37,840
there's another group of solutions

121
00:04:37,840 --> 00:04:38,960
i call them cryptographic

122
00:04:38,960 --> 00:04:41,199
countermeasures since they

123
00:04:41,199 --> 00:04:43,840
make use of some cryptographic tools to

124
00:04:43,840 --> 00:04:47,280
make the circuit more secure they work

125
00:04:47,280 --> 00:04:48,720
as follows

126
00:04:48,720 --> 00:04:51,040
there is a user who

127
00:04:51,040 --> 00:04:54,479
has in mind some functionality f puts

128
00:04:54,479 --> 00:04:57,759
this f into a kind of compiler and this

129
00:04:57,759 --> 00:04:59,280
compiler

130
00:04:59,280 --> 00:05:00,720
outputs

131
00:05:00,720 --> 00:05:02,560
a description

132
00:05:02,560 --> 00:05:05,039
of the device which would realize the

133
00:05:05,039 --> 00:05:10,240
functionality f and be secure

134
00:05:10,240 --> 00:05:11,039
and

135
00:05:11,039 --> 00:05:14,080
as we can see this

136
00:05:14,080 --> 00:05:16,960
device consists of two main parts the

137
00:05:16,960 --> 00:05:18,639
one in the center

138
00:05:18,639 --> 00:05:20,880
is a trusted part

139
00:05:20,880 --> 00:05:24,320
and the other ones are untrusted ones

140
00:05:24,320 --> 00:05:26,639
and there can be only one entrance that

141
00:05:26,639 --> 00:05:29,759
or many of them it depends then the user

142
00:05:29,759 --> 00:05:31,759
sends this specification

143
00:05:31,759 --> 00:05:34,880
to two manufacturers the honest one

144
00:05:34,880 --> 00:05:37,280
which produces the honest honest

145
00:05:37,280 --> 00:05:38,639
component

146
00:05:38,639 --> 00:05:39,680
and to

147
00:05:39,680 --> 00:05:42,000
untrusted one

148
00:05:42,000 --> 00:05:44,960
which produces potentially malicious

149
00:05:44,960 --> 00:05:47,520
circuits after receiving

150
00:05:47,520 --> 00:05:50,080
both components the user

151
00:05:50,080 --> 00:05:53,360
make a device from both of them in a

152
00:05:53,360 --> 00:05:54,960
trusted manner

153
00:05:54,960 --> 00:05:56,800
and then you can use it

154
00:05:56,800 --> 00:06:00,240
sometimes the testing phase is added

155
00:06:00,240 --> 00:06:03,120
by the testing phase i mean the input

156
00:06:03,120 --> 00:06:05,360
output testing i will tell you more

157
00:06:05,360 --> 00:06:07,919
about it later and what's important here

158
00:06:07,919 --> 00:06:10,080
that we really need this threat

159
00:06:10,080 --> 00:06:12,160
distresses component we can ask

160
00:06:12,160 --> 00:06:13,600
ourselves

161
00:06:13,600 --> 00:06:16,080
if it makes any sense to make such a

162
00:06:16,080 --> 00:06:19,919
complicated procedure if the user has

163
00:06:19,919 --> 00:06:23,120
access to the trusted manufacturer and

164
00:06:23,120 --> 00:06:25,600
the answer is of course it depends

165
00:06:25,600 --> 00:06:28,479
obviously the size of the trusted module

166
00:06:28,479 --> 00:06:30,639
must be much smaller

167
00:06:30,639 --> 00:06:32,960
than the size of the circuit which would

168
00:06:32,960 --> 00:06:35,680
simply realize the functionality f

169
00:06:35,680 --> 00:06:37,039
sometimes

170
00:06:37,039 --> 00:06:40,240
the user and the trusted manufacturer

171
00:06:40,240 --> 00:06:42,880
are the same entity we can imagine if

172
00:06:42,880 --> 00:06:45,199
the trusted component is very simple we

173
00:06:45,199 --> 00:06:46,080
can

174
00:06:46,080 --> 00:06:48,960
make it simply at home okay so now now i

175
00:06:48,960 --> 00:06:50,639
will present you the existing

176
00:06:50,639 --> 00:06:52,960
cryptographic solution

177
00:06:52,960 --> 00:06:55,599
against hardware trojans i think this

178
00:06:55,599 --> 00:06:58,800
solution is quite natural the device

179
00:06:58,800 --> 00:07:01,280
which would realize the functionality f

180
00:07:01,280 --> 00:07:02,479
consists of

181
00:07:02,479 --> 00:07:04,240
two parts

182
00:07:04,240 --> 00:07:06,800
two components the trusted one is a

183
00:07:06,800 --> 00:07:09,199
verifier and the untrusted one is

184
00:07:09,199 --> 00:07:12,319
approver i would call it

185
00:07:12,319 --> 00:07:15,039
verifiable computation approach

186
00:07:15,039 --> 00:07:19,280
and it works as false the user sends

187
00:07:19,280 --> 00:07:22,319
input x to the verifier

188
00:07:22,319 --> 00:07:25,520
the verifier sends it to the approver

189
00:07:25,520 --> 00:07:29,120
the approver computes f from x and

190
00:07:29,120 --> 00:07:31,440
approved sends the result and the proof

191
00:07:31,440 --> 00:07:32,960
to the verifier

192
00:07:32,960 --> 00:07:35,360
the verifier verifies

193
00:07:35,360 --> 00:07:38,160
and if the verification was done

194
00:07:38,160 --> 00:07:40,560
correctly then it sends white to the

195
00:07:40,560 --> 00:07:43,680
user otherwise it sends that there is no

196
00:07:43,680 --> 00:07:44,479
error

197
00:07:44,479 --> 00:07:47,440
from now we will live only in the

198
00:07:47,440 --> 00:07:50,479
world of digital hardware trojans

199
00:07:50,479 --> 00:07:53,599
and the digital hardware trojans is the

200
00:07:53,599 --> 00:07:57,120
supplements of hardware trojans

201
00:07:57,120 --> 00:07:59,840
with some restrictions so first of them

202
00:07:59,840 --> 00:08:01,280
is that

203
00:08:01,280 --> 00:08:04,800
the digital hardware trojan have no

204
00:08:04,800 --> 00:08:08,160
auxiliary input output channels

205
00:08:08,160 --> 00:08:10,879
and the second restriction is that

206
00:08:10,879 --> 00:08:13,120
they have no

207
00:08:13,120 --> 00:08:17,199
physical blocks antennas sensors etc

208
00:08:17,199 --> 00:08:19,360
just to give you the flavor of it

209
00:08:19,360 --> 00:08:22,240
we say that digital hardware trojans

210
00:08:22,240 --> 00:08:23,120
they

211
00:08:23,120 --> 00:08:25,199
behave maliciously

212
00:08:25,199 --> 00:08:28,080
only internally by which i mean we can

213
00:08:28,080 --> 00:08:30,960
treat them as a black boxes which have

214
00:08:30,960 --> 00:08:32,000
no

215
00:08:32,000 --> 00:08:34,320
communication with the environment other

216
00:08:34,320 --> 00:08:35,360
than

217
00:08:35,360 --> 00:08:38,559
the provided one by the specification

218
00:08:38,559 --> 00:08:40,399
and here i would like to emphasize that

219
00:08:40,399 --> 00:08:43,200
even if the specification is stateless

220
00:08:43,200 --> 00:08:43,919
the

221
00:08:43,919 --> 00:08:47,680
digital hardware trojans can be stateful

222
00:08:47,680 --> 00:08:51,120
so there exists some research on

223
00:08:51,120 --> 00:08:55,360
the topic of status trojans

224
00:08:55,360 --> 00:08:57,279
now i have in mind

225
00:08:57,279 --> 00:08:58,480
the

226
00:08:58,480 --> 00:09:00,560
countermeasures against

227
00:09:00,560 --> 00:09:03,600
algorithm substitution attacks

228
00:09:03,600 --> 00:09:06,560
but they are not very interesting for us

229
00:09:06,560 --> 00:09:08,880
since the communication of the digital

230
00:09:08,880 --> 00:09:10,399
hardware trojans

231
00:09:10,399 --> 00:09:12,080
is honest

232
00:09:12,080 --> 00:09:13,200
the

233
00:09:13,200 --> 00:09:15,200
input output testing

234
00:09:15,200 --> 00:09:17,920
countermeasure seems very promising so

235
00:09:17,920 --> 00:09:21,200
now i'll tell you more about the testing

236
00:09:21,200 --> 00:09:22,959
okay so if the

237
00:09:22,959 --> 00:09:26,880
device is tested before releasing it we

238
00:09:26,880 --> 00:09:29,680
can say that the cycle of its life

239
00:09:29,680 --> 00:09:31,440
has two faces

240
00:09:31,440 --> 00:09:33,680
and the first is the lap face

241
00:09:33,680 --> 00:09:36,880
and in the lab phase here this blue one

242
00:09:36,880 --> 00:09:39,360
is the device and here is the trusted

243
00:09:39,360 --> 00:09:42,320
implementation of functionality f

244
00:09:42,320 --> 00:09:46,320
and the input x is given to both of them

245
00:09:46,320 --> 00:09:48,880
and then we check the equality

246
00:09:48,880 --> 00:09:51,680
if the device and the trusted

247
00:09:51,680 --> 00:09:54,959
functionality outposts the same value it

248
00:09:54,959 --> 00:09:57,680
is done for some number of times mostly

249
00:09:57,680 --> 00:10:00,080
often we bound the length of the lab

250
00:10:00,080 --> 00:10:01,519
phase by

251
00:10:01,519 --> 00:10:03,680
some constant and then there is the

252
00:10:03,680 --> 00:10:07,519
white face where the device is released

253
00:10:07,519 --> 00:10:08,880
and used

254
00:10:08,880 --> 00:10:11,920
and it is very simple then it just

255
00:10:11,920 --> 00:10:14,959
receives some input x and outputs

256
00:10:14,959 --> 00:10:18,199
some y

257
00:10:18,240 --> 00:10:20,959
so i've called this simple testing we

258
00:10:20,959 --> 00:10:22,959
can take a look

259
00:10:22,959 --> 00:10:25,279
how we can attach the two protocol so

260
00:10:25,279 --> 00:10:26,480
first of all

261
00:10:26,480 --> 00:10:29,200
in the word the adversary can influence

262
00:10:29,200 --> 00:10:30,959
the given

263
00:10:30,959 --> 00:10:34,000
inputs and the device can deviate

264
00:10:34,000 --> 00:10:36,000
whenever it gets some

265
00:10:36,000 --> 00:10:39,360
very rare subset of the inputs then it

266
00:10:39,360 --> 00:10:43,120
will be not revealed in the log phase

267
00:10:43,120 --> 00:10:45,120
but in the white face

268
00:10:45,120 --> 00:10:47,839
the device can start deviating we call

269
00:10:47,839 --> 00:10:50,880
such type of attacks two codes and the

270
00:10:50,880 --> 00:10:53,600
second type

271
00:10:53,600 --> 00:10:56,880
take advantage from the fact that

272
00:10:56,880 --> 00:10:59,279
the number of tests is found that here

273
00:10:59,279 --> 00:11:01,680
is this

274
00:11:01,680 --> 00:11:03,120
red time

275
00:11:03,120 --> 00:11:05,360
where the adversary can deviate and it

276
00:11:05,360 --> 00:11:08,399
will not be called for sure

277
00:11:08,399 --> 00:11:10,320
and we call such type of attacks time

278
00:11:10,320 --> 00:11:12,800
bombs okay so now we have some intuition

279
00:11:12,800 --> 00:11:16,720
what can go wrong when we test

280
00:11:16,720 --> 00:11:17,839
and we can

281
00:11:17,839 --> 00:11:20,959
have a look at some other paper which is

282
00:11:20,959 --> 00:11:23,519
the promised private circus tree

283
00:11:23,519 --> 00:11:26,079
and how it works against them

284
00:11:26,079 --> 00:11:27,839
so in this paper the following

285
00:11:27,839 --> 00:11:31,040
construction was proposed

286
00:11:31,040 --> 00:11:32,959
the devices are

287
00:11:32,959 --> 00:11:36,560
tested in the lab phase independently

288
00:11:36,560 --> 00:11:39,680
for some random number of times and then

289
00:11:39,680 --> 00:11:41,680
in the wire the following construction

290
00:11:41,680 --> 00:11:44,640
will work the untrusted parts

291
00:11:44,640 --> 00:11:45,920
are

292
00:11:45,920 --> 00:11:49,040
arranged in the triples the master in

293
00:11:49,040 --> 00:11:51,680
every step receives some empathics this

294
00:11:51,680 --> 00:11:55,360
input is secretly shared to

295
00:11:55,360 --> 00:11:56,880
to the triples

296
00:11:56,880 --> 00:11:58,639
they follow the protocol compute the

297
00:11:58,639 --> 00:12:00,959
value f1 from x

298
00:12:00,959 --> 00:12:02,160
and then

299
00:12:02,160 --> 00:12:03,120
the

300
00:12:03,120 --> 00:12:04,720
master circuit

301
00:12:04,720 --> 00:12:06,959
compute the majority of the outputs and

302
00:12:06,959 --> 00:12:09,200
output the majority

303
00:12:09,200 --> 00:12:11,279
during the wild phase

304
00:12:11,279 --> 00:12:14,720
some of the triples may start deviating

305
00:12:14,720 --> 00:12:17,440
but the probability that

306
00:12:17,440 --> 00:12:18,800
more than

307
00:12:18,800 --> 00:12:21,279
half of the triples start deviating

308
00:12:21,279 --> 00:12:23,120
through the white face

309
00:12:23,120 --> 00:12:24,959
is negligible

310
00:12:24,959 --> 00:12:26,079
so

311
00:12:26,079 --> 00:12:30,079
the master always output the right value

312
00:12:30,079 --> 00:12:32,639
here i think this

313
00:12:32,639 --> 00:12:34,160
picture is a bit

314
00:12:34,160 --> 00:12:36,320
misleading since

315
00:12:36,320 --> 00:12:38,320
the lab phase must be much longer than

316
00:12:38,320 --> 00:12:39,680
the white face

317
00:12:39,680 --> 00:12:42,480
but now we can see how it works against

318
00:12:42,480 --> 00:12:43,920
these two types of attacks which i

319
00:12:43,920 --> 00:12:45,200
mentioned before

320
00:12:45,200 --> 00:12:47,360
i mean i'm in cheat codes so against

321
00:12:47,360 --> 00:12:51,279
cheat codes works the secret sharing

322
00:12:51,279 --> 00:12:53,839
um even if the adversary can influence

323
00:12:53,839 --> 00:12:55,440
the inputs

324
00:12:55,440 --> 00:12:58,240
in the wild

325
00:12:58,399 --> 00:13:00,560
from the perspective of a single circuit

326
00:13:00,560 --> 00:13:01,920
it receives

327
00:13:01,920 --> 00:13:05,440
just random values

328
00:13:05,440 --> 00:13:08,399
and this this synchronization by this i

329
00:13:08,399 --> 00:13:10,720
mean that the lab face

330
00:13:10,720 --> 00:13:12,720
can be very long and very short

331
00:13:12,720 --> 00:13:14,959
comparing to the white face

332
00:13:14,959 --> 00:13:17,360
and that the length of the lab phase

333
00:13:17,360 --> 00:13:18,959
differs for

334
00:13:18,959 --> 00:13:21,440
every single circuit

335
00:13:21,440 --> 00:13:24,639
we have the countermeasure against the

336
00:13:24,639 --> 00:13:27,519
time bombs so now we can move to our

337
00:13:27,519 --> 00:13:29,120
construction

338
00:13:29,120 --> 00:13:30,959
to our research

339
00:13:30,959 --> 00:13:34,000
we were investigating the very simple

340
00:13:34,000 --> 00:13:36,000
constructions and

341
00:13:36,000 --> 00:13:38,399
now i can i will tell you more about the

342
00:13:38,399 --> 00:13:41,199
circuits in this constructions

343
00:13:41,199 --> 00:13:43,519
so first of all

344
00:13:43,519 --> 00:13:45,760
the master in

345
00:13:45,760 --> 00:13:48,399
simple constructions are very very

346
00:13:48,399 --> 00:13:49,760
simple

347
00:13:49,760 --> 00:13:52,160
by this i mean that

348
00:13:52,160 --> 00:13:54,800
they can contain only a few equality

349
00:13:54,800 --> 00:13:57,519
multiplexer and repetition gates

350
00:13:57,519 --> 00:13:59,839
and secondly

351
00:13:59,839 --> 00:14:01,120
there are no changes in the

352
00:14:01,120 --> 00:14:02,399
specification

353
00:14:02,399 --> 00:14:03,760
of

354
00:14:03,760 --> 00:14:06,079
the untrusted circuits

355
00:14:06,079 --> 00:14:09,600
by this i mean that if we have some

356
00:14:09,600 --> 00:14:12,160
circuit which would realize the

357
00:14:12,160 --> 00:14:13,920
functionality f

358
00:14:13,920 --> 00:14:16,160
then we can simply use it in our

359
00:14:16,160 --> 00:14:18,800
construction and

360
00:14:18,800 --> 00:14:19,839
this

361
00:14:19,839 --> 00:14:23,519
has two big advantages

362
00:14:23,519 --> 00:14:24,959
first of all

363
00:14:24,959 --> 00:14:28,800
we have no overhead in size cost of time

364
00:14:28,800 --> 00:14:31,040
and secondly we can simply reduce

365
00:14:31,040 --> 00:14:33,199
already produced circuits

366
00:14:33,199 --> 00:14:35,120
so i think that this

367
00:14:35,120 --> 00:14:37,279
without cryptography part in the title

368
00:14:37,279 --> 00:14:40,560
of our paper comes from this yes we have

369
00:14:40,560 --> 00:14:42,880
no heavy crypto here how does the

370
00:14:42,880 --> 00:14:45,360
security game looks like for the simple

371
00:14:45,360 --> 00:14:47,360
constructions

372
00:14:47,360 --> 00:14:50,320
again we have the lab face

373
00:14:50,320 --> 00:14:52,480
which lasts for some

374
00:14:52,480 --> 00:14:55,920
time where by time i of course mean the

375
00:14:55,920 --> 00:14:57,760
number of tests

376
00:14:57,760 --> 00:15:00,000
and the total number of tests performed

377
00:15:00,000 --> 00:15:00,800
or

378
00:15:00,800 --> 00:15:01,680
on

379
00:15:01,680 --> 00:15:04,240
all of the devices is bounded by some

380
00:15:04,240 --> 00:15:06,800
number t

381
00:15:07,120 --> 00:15:09,519
and then we go to the wild

382
00:15:09,519 --> 00:15:10,959
and in the way the following

383
00:15:10,959 --> 00:15:12,639
construction will

384
00:15:12,639 --> 00:15:14,560
work

385
00:15:14,560 --> 00:15:17,120
the master is

386
00:15:17,120 --> 00:15:19,120
joined with every

387
00:15:19,120 --> 00:15:21,360
circuit separately

388
00:15:21,360 --> 00:15:24,480
it receives some inputs and auxiliary

389
00:15:24,480 --> 00:15:27,120
randomness and then

390
00:15:27,120 --> 00:15:30,079
outputs a value

391
00:15:30,240 --> 00:15:32,720
and what are the goals of the adversary

392
00:15:32,720 --> 00:15:34,480
in this game

393
00:15:34,480 --> 00:15:36,880
so first of all

394
00:15:36,880 --> 00:15:39,519
she needs to survive the lab

395
00:15:39,519 --> 00:15:41,440
as you remember in the lab phase we are

396
00:15:41,440 --> 00:15:43,360
checking the outputs of the circuits

397
00:15:43,360 --> 00:15:46,240
with the trusted implementation

398
00:15:46,240 --> 00:15:49,120
so surviving the lab face means that

399
00:15:49,120 --> 00:15:51,040
no misbehaving

400
00:15:51,040 --> 00:15:54,399
is detected in the lab phase

401
00:15:54,399 --> 00:15:55,920
secondly

402
00:15:55,920 --> 00:15:58,480
the adversary wants to survive the wild

403
00:15:58,480 --> 00:15:59,600
face

404
00:15:59,600 --> 00:16:01,040
what does it mean

405
00:16:01,040 --> 00:16:03,519
as you remember the master circuit may

406
00:16:03,519 --> 00:16:05,759
contain the quality gates

407
00:16:05,759 --> 00:16:06,480
so

408
00:16:06,480 --> 00:16:10,639
if it receives some inputs and

409
00:16:10,639 --> 00:16:11,839
gives

410
00:16:11,839 --> 00:16:14,880
one input to two different circuits and

411
00:16:14,880 --> 00:16:18,320
would receive two different outputs

412
00:16:18,320 --> 00:16:19,360
then

413
00:16:19,360 --> 00:16:21,839
the game stop immediately and the

414
00:16:21,839 --> 00:16:24,240
adversary just loses

415
00:16:24,240 --> 00:16:26,880
okay after now it's very easy i mean

416
00:16:26,880 --> 00:16:29,519
that virtually can simply produce the

417
00:16:29,519 --> 00:16:32,480
honest circuits we have this third goal

418
00:16:32,480 --> 00:16:33,519
which is

419
00:16:33,519 --> 00:16:36,160
make the master to output many wrong

420
00:16:36,160 --> 00:16:38,800
outputs so what is the main problem with

421
00:16:38,800 --> 00:16:41,519
simple constructions when we already

422
00:16:41,519 --> 00:16:44,160
know the circuits and

423
00:16:44,160 --> 00:16:46,639
the game the security game so first of

424
00:16:46,639 --> 00:16:50,240
all it's vulnerable to cheat codes i

425
00:16:50,240 --> 00:16:52,639
mean we have no counter measure again

426
00:16:52,639 --> 00:16:56,079
this against the typicals here because

427
00:16:56,079 --> 00:16:56,880
the

428
00:16:56,880 --> 00:16:59,680
master receives simply the inputs and

429
00:16:59,680 --> 00:17:00,720
with

430
00:17:00,720 --> 00:17:02,240
a few gates

431
00:17:02,240 --> 00:17:06,400
cannot do anything with them

432
00:17:06,640 --> 00:17:08,799
so to get rid of it

433
00:17:08,799 --> 00:17:11,199
we assume also that the inputs in the

434
00:17:11,199 --> 00:17:14,559
wired face are our iid so now we are

435
00:17:14,559 --> 00:17:17,199
ready to give a bit more

436
00:17:17,199 --> 00:17:20,640
formal definition of the security game

437
00:17:20,640 --> 00:17:21,599
so

438
00:17:21,599 --> 00:17:24,559
the trojan game has three parameters the

439
00:17:24,559 --> 00:17:26,880
first one is the

440
00:17:26,880 --> 00:17:28,319
construction p

441
00:17:28,319 --> 00:17:30,640
the second one is the bound

442
00:17:30,640 --> 00:17:33,520
t on the length of the lap face

443
00:17:33,520 --> 00:17:35,039
and the third one is the length of the

444
00:17:35,039 --> 00:17:37,440
white phase q

445
00:17:37,440 --> 00:17:40,559
and the game has

446
00:17:40,559 --> 00:17:41,520
three

447
00:17:41,520 --> 00:17:42,880
following steps

448
00:17:42,880 --> 00:17:44,640
the first step is that the adversary

449
00:17:44,640 --> 00:17:46,400
chooses the functionality f and the

450
00:17:46,400 --> 00:17:48,480
trojan circuits

451
00:17:48,480 --> 00:17:50,799
the second step is the lab phase is

452
00:17:50,799 --> 00:17:52,720
performed

453
00:17:52,720 --> 00:17:56,000
and the lag faces perform on iid inputs

454
00:17:56,000 --> 00:17:58,720
and the outputs are very fired by the

455
00:17:58,720 --> 00:18:00,480
trusted implementation

456
00:18:00,480 --> 00:18:03,520
and the length of the lab face is

457
00:18:03,520 --> 00:18:05,120
a random variable

458
00:18:05,120 --> 00:18:09,200
a uniform random variable from 0 to t

459
00:18:09,200 --> 00:18:13,200
and the third step is the wild face

460
00:18:13,200 --> 00:18:15,200
which is performed on iid impulse as

461
00:18:15,200 --> 00:18:17,280
well which is verified only by the

462
00:18:17,280 --> 00:18:19,919
crosstalks i mean the

463
00:18:19,919 --> 00:18:23,679
equality gate by the master

464
00:18:24,080 --> 00:18:26,320
okay and again the goal of the game is

465
00:18:26,320 --> 00:18:28,880
not being caught in the lap and white

466
00:18:28,880 --> 00:18:30,160
phases

467
00:18:30,160 --> 00:18:32,400
and to make master output many wrong

468
00:18:32,400 --> 00:18:33,520
outputs

469
00:18:33,520 --> 00:18:36,559
and the adversary has to achieve both of

470
00:18:36,559 --> 00:18:38,880
these goals simultaneously so if there

471
00:18:38,880 --> 00:18:40,960
is any error during the lag phase of the

472
00:18:40,960 --> 00:18:42,559
light face the

473
00:18:42,559 --> 00:18:45,280
game immediately stops

474
00:18:45,280 --> 00:18:47,520
now i can tell you something about the

475
00:18:47,520 --> 00:18:49,840
limitations of simple constructions

476
00:18:49,840 --> 00:18:51,840
because there exists some

477
00:18:51,840 --> 00:18:53,520
consider the following adversarial

478
00:18:53,520 --> 00:18:56,160
strategy

479
00:18:56,160 --> 00:18:58,480
let's say that she produces the circuits

480
00:18:58,480 --> 00:19:01,280
which deviate on the one over t fraction

481
00:19:01,280 --> 00:19:02,640
of the inputs

482
00:19:02,640 --> 00:19:04,320
and what's important

483
00:19:04,320 --> 00:19:08,640
all of them deviate on the same inputs

484
00:19:08,640 --> 00:19:11,360
and for such a strategy

485
00:19:11,360 --> 00:19:13,679
the adversary survives the lab phase

486
00:19:13,679 --> 00:19:15,760
with probability one over e

487
00:19:15,760 --> 00:19:17,600
it's very easy enough here

488
00:19:17,600 --> 00:19:18,400
and

489
00:19:18,400 --> 00:19:20,480
and she survives the white face with

490
00:19:20,480 --> 00:19:22,880
probability equal to one

491
00:19:22,880 --> 00:19:27,200
why because of the circuit all always

492
00:19:27,200 --> 00:19:29,679
answer in the same way

493
00:19:29,679 --> 00:19:31,679
for the same input

494
00:19:31,679 --> 00:19:33,679
and the master can only check the

495
00:19:33,679 --> 00:19:36,720
quality of the outputs

496
00:19:37,200 --> 00:19:38,799
and moreover

497
00:19:38,799 --> 00:19:41,360
the the master produces one over t

498
00:19:41,360 --> 00:19:43,760
fraction of wrong outputs in the white

499
00:19:43,760 --> 00:19:46,559
to go to our result we need two more

500
00:19:46,559 --> 00:19:48,320
definitions

501
00:19:48,320 --> 00:19:51,200
so the first one is winning the game

502
00:19:51,200 --> 00:19:53,919
and we say that an adversary

503
00:19:53,919 --> 00:19:57,600
ring wrong wins in trojan game

504
00:19:57,600 --> 00:20:00,799
if the master outputs more than a wrong

505
00:20:00,799 --> 00:20:03,440
fraction of wrong values without the

506
00:20:03,440 --> 00:20:06,320
trojans being detected with probability

507
00:20:06,320 --> 00:20:09,200
greater than win

508
00:20:14,559 --> 00:20:16,960
okay so this is the winning game and the

509
00:20:16,960 --> 00:20:18,799
security definition

510
00:20:18,799 --> 00:20:21,679
we say that p is win

511
00:20:21,679 --> 00:20:24,159
wrong trojan resilient if for

512
00:20:24,159 --> 00:20:26,720
sufficiently large q and q

513
00:20:26,720 --> 00:20:29,120
no adversary win from t wrong from t

514
00:20:29,120 --> 00:20:34,600
wins in the trojan game p t q

515
00:20:34,799 --> 00:20:38,879
okay maybe we need some time to parse it

516
00:20:43,600 --> 00:20:46,000
now i have some

517
00:20:46,000 --> 00:20:49,600
good news and bad news for you for us

518
00:20:49,600 --> 00:20:51,440
actually so

519
00:20:51,440 --> 00:20:54,799
as always bad news first

520
00:20:54,799 --> 00:20:56,400
so for any c

521
00:20:56,400 --> 00:20:58,159
greater than zero there exists a

522
00:20:58,159 --> 00:21:00,159
constant c prime

523
00:21:00,159 --> 00:21:02,640
greater than zero such that no simple

524
00:21:02,640 --> 00:21:04,960
skin p is c comma c prime over theta

525
00:21:04,960 --> 00:21:06,559
original resilience

526
00:21:06,559 --> 00:21:09,280
it comes from the previous strategy

527
00:21:09,280 --> 00:21:10,559
which

528
00:21:10,559 --> 00:21:13,120
was presented two slides ago and the

529
00:21:13,120 --> 00:21:14,400
goodness are

530
00:21:14,400 --> 00:21:16,720
that nothing worse can happen

531
00:21:16,720 --> 00:21:19,360
and what does it mean until you in a few

532
00:21:19,360 --> 00:21:20,880
minutes just to give you the intuition

533
00:21:20,880 --> 00:21:24,000
why a reconstruction which consists of

534
00:21:24,000 --> 00:21:25,679
12

535
00:21:25,679 --> 00:21:29,600
potentially malicious circuits works

536
00:21:29,600 --> 00:21:31,760
we will go through

537
00:21:31,760 --> 00:21:35,120
some a bit simpler constructions

538
00:21:35,120 --> 00:21:38,159
so the first one is the construction for

539
00:21:38,159 --> 00:21:40,080
stateless trojans here the number of

540
00:21:40,080 --> 00:21:42,000
this is the random variable

541
00:21:42,000 --> 00:21:46,559
uniform random variable downloaded by t

542
00:21:47,200 --> 00:21:49,840
there's no need to have any trusted

543
00:21:49,840 --> 00:21:52,240
model here

544
00:21:52,240 --> 00:21:54,000
and this construction meets the optimal

545
00:21:54,000 --> 00:21:56,000
security parameters okay i was

546
00:21:56,000 --> 00:21:57,919
presenting it before when i was talking

547
00:21:57,919 --> 00:21:59,360
about the testing

548
00:21:59,360 --> 00:22:00,880
and there were two problems the first

549
00:22:00,880 --> 00:22:04,159
one was the cheat codes and

550
00:22:04,159 --> 00:22:06,400
there are no cheat codes since the

551
00:22:06,400 --> 00:22:09,440
inputs in the white are iid

552
00:22:09,440 --> 00:22:12,080
and time bombs and we have no time bombs

553
00:22:12,080 --> 00:22:14,320
since the trojan is stateless and it

554
00:22:14,320 --> 00:22:15,360
cannot

555
00:22:15,360 --> 00:22:18,159
remember how many times it was used

556
00:22:18,159 --> 00:22:21,280
yes and as i said adding the counter

557
00:22:21,280 --> 00:22:23,918
make it fail

558
00:22:24,320 --> 00:22:26,080
the second construction works for

559
00:22:26,080 --> 00:22:28,240
history independent trojans

560
00:22:28,240 --> 00:22:31,760
in other words the counter trojans by

561
00:22:31,760 --> 00:22:34,159
which i mean they have the internal

562
00:22:34,159 --> 00:22:36,320
states only indicates how many times it

563
00:22:36,320 --> 00:22:38,159
was used in the

564
00:22:38,159 --> 00:22:40,640
in total

565
00:22:40,640 --> 00:22:42,799
so circuits have counters

566
00:22:42,799 --> 00:22:45,280
only one circuit is tested as

567
00:22:45,280 --> 00:22:47,200
before for some

568
00:22:47,200 --> 00:22:50,000
uniform random number of times

569
00:22:50,000 --> 00:22:51,760
and in the y they are cross checked in

570
00:22:51,760 --> 00:22:53,360
every single step

571
00:22:53,360 --> 00:22:55,840
so

572
00:22:56,559 --> 00:22:59,440
in the lab phase this circuit was

573
00:22:59,440 --> 00:23:02,080
crosstracked with trusted implementation

574
00:23:02,080 --> 00:23:03,919
in the white

575
00:23:03,919 --> 00:23:08,080
their construct with themselves

576
00:23:08,080 --> 00:23:09,520
and this cross instruction meets the

577
00:23:09,520 --> 00:23:12,720
optimal security parameter as well

578
00:23:12,720 --> 00:23:15,280
it's not very interesting by itself but

579
00:23:15,280 --> 00:23:17,919
we use it in our proof for reduction i

580
00:23:17,919 --> 00:23:20,080
showed you later where

581
00:23:20,080 --> 00:23:23,039
maybe not how exactly but where

582
00:23:23,039 --> 00:23:25,200
and the proof that this is secure is not

583
00:23:25,200 --> 00:23:26,640
free well

584
00:23:26,640 --> 00:23:28,400
so i'd like to emphasize that this

585
00:23:28,400 --> 00:23:31,039
construction is not secure against

586
00:23:31,039 --> 00:23:33,200
general stateful

587
00:23:33,200 --> 00:23:35,520
digital hardware trojans

588
00:23:35,520 --> 00:23:37,200
the circles are crosstracked in the

589
00:23:37,200 --> 00:23:39,360
white in every single step

590
00:23:39,360 --> 00:23:42,559
so the following strategy would work

591
00:23:42,559 --> 00:23:44,960
very well i mean

592
00:23:44,960 --> 00:23:48,320
deviated once deviate four always

593
00:23:48,320 --> 00:23:49,279
why

594
00:23:49,279 --> 00:23:52,480
because from the perspective of f1 for

595
00:23:52,480 --> 00:23:55,360
instance if i deviated there are two

596
00:23:55,360 --> 00:23:57,840
possibilities the first one i was

597
00:23:57,840 --> 00:23:59,600
crosstracked with f2

598
00:23:59,600 --> 00:24:01,760
which also

599
00:24:01,760 --> 00:24:04,320
misbehaved and then f2 has the same

600
00:24:04,320 --> 00:24:07,840
strategy so we can deviate from from now

601
00:24:07,840 --> 00:24:11,279
and the second possibility is that

602
00:24:11,279 --> 00:24:14,559
i was cross-checked with f2

603
00:24:14,559 --> 00:24:16,720
which did not deviate

604
00:24:16,720 --> 00:24:19,200
and then game is over anyway

605
00:24:19,200 --> 00:24:22,159
and now i can show you the construction

606
00:24:22,159 --> 00:24:23,919
which we believe

607
00:24:23,919 --> 00:24:26,240
is secure against stateful digital

608
00:24:26,240 --> 00:24:28,559
trojans

609
00:24:28,559 --> 00:24:29,520
and

610
00:24:29,520 --> 00:24:32,720
it's very similar to the previous one

611
00:24:32,720 --> 00:24:34,799
the only difference in is in the white

612
00:24:34,799 --> 00:24:36,720
and the crosstalks

613
00:24:36,720 --> 00:24:37,440
the

614
00:24:37,440 --> 00:24:41,520
circles f1 and f2 are cross-checked only

615
00:24:41,520 --> 00:24:44,400
with quite small probability

616
00:24:44,400 --> 00:24:47,760
and in other cases only one of them

617
00:24:47,760 --> 00:24:50,159
receives the input

618
00:24:50,159 --> 00:24:53,520
and then if f1 deviated

619
00:24:53,520 --> 00:24:55,840
there are three possibilities

620
00:24:55,840 --> 00:24:58,480
the dup 2 which i mentioned before and

621
00:24:58,480 --> 00:25:00,640
the third one that

622
00:25:00,640 --> 00:25:03,679
it deviated but wasn't cross-checked

623
00:25:03,679 --> 00:25:05,600
with f2 and the

624
00:25:05,600 --> 00:25:07,760
game is still not over

625
00:25:07,760 --> 00:25:09,679
so yeah i just have said omitting

626
00:25:09,679 --> 00:25:12,559
circuits allows this the synchronization

627
00:25:12,559 --> 00:25:14,400
okay so now i'll tell you about first

628
00:25:14,400 --> 00:25:16,960
circuit construction which is a building

629
00:25:16,960 --> 00:25:19,520
block for

630
00:25:19,520 --> 00:25:22,080
our 12th circuit construction and it

631
00:25:22,080 --> 00:25:24,720
works as follows only circuits one and

632
00:25:24,720 --> 00:25:28,120
three are tested

633
00:25:28,159 --> 00:25:30,080
the master in the white gets

634
00:25:30,080 --> 00:25:33,520
two inputs and the random with b

635
00:25:33,520 --> 00:25:35,679
and according to the value of the bit b

636
00:25:35,679 --> 00:25:39,039
the inputs are distributed

637
00:25:39,039 --> 00:25:41,200
and after the distribution and receiving

638
00:25:41,200 --> 00:25:42,799
the outputs the master performs the

639
00:25:42,799 --> 00:25:44,720
crosstalks

640
00:25:44,720 --> 00:25:46,880
if the crosstalks are correct the master

641
00:25:46,880 --> 00:25:49,279
outputs the output of the first circuit

642
00:25:49,279 --> 00:25:51,840
it's here

643
00:25:52,000 --> 00:25:54,720
if they are not the game stops

644
00:25:54,720 --> 00:25:55,440
so

645
00:25:55,440 --> 00:25:58,240
here's the example how it works uh how

646
00:25:58,240 --> 00:26:01,120
are the cross text in the case of

647
00:26:01,120 --> 00:26:03,760
bit b equal to zero

648
00:26:03,760 --> 00:26:05,840
and how it works if

649
00:26:05,840 --> 00:26:08,240
b is equal to one

650
00:26:08,240 --> 00:26:11,120
um okay so i think we are ready to

651
00:26:11,120 --> 00:26:13,039
present our technical result and the

652
00:26:13,039 --> 00:26:15,520
construction which means it so

653
00:26:15,520 --> 00:26:18,000
for any constant c greater than zero

654
00:26:18,000 --> 00:26:20,320
there exists a constant c prime such

655
00:26:20,320 --> 00:26:22,159
that a single construction between which

656
00:26:22,159 --> 00:26:24,559
will be presented in the next slide

657
00:26:24,559 --> 00:26:27,520
is c comma c prime over t

658
00:26:27,520 --> 00:26:30,480
trojan resilience

659
00:26:31,440 --> 00:26:33,039
and this is how the construction looks

660
00:26:33,039 --> 00:26:34,240
like

661
00:26:34,240 --> 00:26:36,480
so this picture was on the previous

662
00:26:36,480 --> 00:26:37,440
slide

663
00:26:37,440 --> 00:26:39,679
yeah the construction consists of

664
00:26:39,679 --> 00:26:43,279
three four circuits submodules

665
00:26:43,279 --> 00:26:46,320
and the master in every step receives

666
00:26:46,320 --> 00:26:48,240
three inputs

667
00:26:48,240 --> 00:26:50,480
and distributes them according to the

668
00:26:50,480 --> 00:26:54,480
value of the bit b just as written here

669
00:26:54,480 --> 00:26:56,640
what's important all of three outputs

670
00:26:56,640 --> 00:26:58,159
can be used

671
00:26:58,159 --> 00:27:00,080
as i told you

672
00:27:00,080 --> 00:27:02,720
for history independent trojans

673
00:27:02,720 --> 00:27:05,440
we need only two circuits

674
00:27:05,440 --> 00:27:09,840
to make a construction which is secure

675
00:27:09,840 --> 00:27:11,919
and i told you that it's not very

676
00:27:11,919 --> 00:27:15,760
interesting but we use it in our proof

677
00:27:15,760 --> 00:27:19,200
so here this yellow part of the picture

678
00:27:19,200 --> 00:27:20,399
shows

679
00:27:20,399 --> 00:27:24,399
so here this yellow part shows

680
00:27:24,399 --> 00:27:26,080
the part which is reduced to the

681
00:27:26,080 --> 00:27:28,000
security of

682
00:27:28,000 --> 00:27:30,399
of the circuit constructions for history

683
00:27:30,399 --> 00:27:32,240
independent trojans

684
00:27:32,240 --> 00:27:35,520
okay so one more sentence why we do all

685
00:27:35,520 --> 00:27:38,159
of this stuff

686
00:27:38,159 --> 00:27:39,120
um

687
00:27:39,120 --> 00:27:39,919
so

688
00:27:39,919 --> 00:27:42,399
as i told you when was i was describing

689
00:27:42,399 --> 00:27:44,720
our conjecture about the two-circuit

690
00:27:44,720 --> 00:27:46,720
construction

691
00:27:46,720 --> 00:27:48,640
secure against

692
00:27:48,640 --> 00:27:50,799
general stateful digital hardware

693
00:27:50,799 --> 00:27:52,640
trojans

694
00:27:52,640 --> 00:27:54,559
i told you something like

695
00:27:54,559 --> 00:27:56,559
if the two circuits

696
00:27:56,559 --> 00:27:58,799
share the same history they can benefit

697
00:27:58,799 --> 00:28:01,120
from

698
00:28:01,360 --> 00:28:04,240
it was the wait for always strategy

699
00:28:04,240 --> 00:28:06,320
and in this conjecture they don't share

700
00:28:06,320 --> 00:28:08,720
the same history and they cannot benefit

701
00:28:08,720 --> 00:28:10,080
from anymore

702
00:28:10,080 --> 00:28:13,840
and here is this similar situation that

703
00:28:13,840 --> 00:28:17,120
f1 is cross-checked with f2 and f3 but

704
00:28:17,120 --> 00:28:18,320
they

705
00:28:18,320 --> 00:28:20,640
do not share the same history of scene

706
00:28:20,640 --> 00:28:22,640
inputs

707
00:28:22,640 --> 00:28:25,440
these histories are dependent but not

708
00:28:25,440 --> 00:28:27,360
the same

709
00:28:27,360 --> 00:28:30,000
so this is the general reason why it

710
00:28:30,000 --> 00:28:31,200
works

711
00:28:31,200 --> 00:28:33,120
i really encourage you to read the paper

712
00:28:33,120 --> 00:28:35,919
because i think this proof is very nice

713
00:28:35,919 --> 00:28:38,960
but of course you can ask yourself why i

714
00:28:38,960 --> 00:28:39,919
mean

715
00:28:39,919 --> 00:28:43,360
this security notion which i mentioned

716
00:28:43,360 --> 00:28:46,000
is not great by this i mean

717
00:28:46,000 --> 00:28:47,200
that

718
00:28:47,200 --> 00:28:49,679
it is meaningful

719
00:28:49,679 --> 00:28:52,720
but at the same time

720
00:28:52,720 --> 00:28:54,480
it doesn't

721
00:28:54,480 --> 00:28:57,120
fit to every application

722
00:28:57,120 --> 00:28:59,200
so what are the possible applications of

723
00:28:59,200 --> 00:29:01,520
our constructions

724
00:29:01,520 --> 00:29:02,960
and

725
00:29:02,960 --> 00:29:05,600
i'd like to say that only that

726
00:29:05,600 --> 00:29:07,760
there are two main restrictions the

727
00:29:07,760 --> 00:29:10,480
first one is there is a non-negligible

728
00:29:10,480 --> 00:29:12,159
fraction of wrong outputs with

729
00:29:12,159 --> 00:29:15,600
non-negligible probability

730
00:29:16,080 --> 00:29:19,360
this is the important one so we

731
00:29:19,360 --> 00:29:22,799
we have to tolerate some fraction of

732
00:29:22,799 --> 00:29:24,799
wrong outputs

733
00:29:24,799 --> 00:29:27,200
as long as there are not very many of

734
00:29:27,200 --> 00:29:29,039
them

735
00:29:29,039 --> 00:29:33,120
just to remind you there was one over t

736
00:29:33,120 --> 00:29:35,039
fraction of wrong outputs with constant

737
00:29:35,039 --> 00:29:37,440
probability

738
00:29:37,440 --> 00:29:41,840
okay so for instance for prds

739
00:29:41,919 --> 00:29:45,600
we are actually not very interested in

740
00:29:45,600 --> 00:29:48,559
the outputs to be correct

741
00:29:48,559 --> 00:29:50,880
but to be

742
00:29:50,880 --> 00:29:53,279
indistinguishable from random so this is

743
00:29:53,279 --> 00:29:55,039
a possible direction of the further

744
00:29:55,039 --> 00:29:56,159
research

745
00:29:56,159 --> 00:29:58,320
and the second restriction is that the

746
00:29:58,320 --> 00:30:00,399
inputs must be iid

747
00:30:00,399 --> 00:30:02,640
it can be relaxed but still they cannot

748
00:30:02,640 --> 00:30:05,360
be controlled by the adversary

749
00:30:05,360 --> 00:30:07,279
so we currently work on the stream

750
00:30:07,279 --> 00:30:09,919
ciphers and we use

751
00:30:09,919 --> 00:30:13,039
this construction as a building block

752
00:30:13,039 --> 00:30:15,039
so just to compare

753
00:30:15,039 --> 00:30:17,200
our

754
00:30:17,200 --> 00:30:20,799
paper with the existing

755
00:30:20,799 --> 00:30:23,120
solutions

756
00:30:23,120 --> 00:30:26,240
and here are these three methods which i

757
00:30:26,240 --> 00:30:28,640
mentioned in my presentation

758
00:30:28,640 --> 00:30:30,960
the first one is the mpc from private

759
00:30:30,960 --> 00:30:33,120
circus three the second one verifiable

760
00:30:33,120 --> 00:30:35,600
computation from very favorite essex

761
00:30:35,600 --> 00:30:38,000
and yeah and this paper

762
00:30:38,000 --> 00:30:39,440
in npc

763
00:30:39,440 --> 00:30:42,000
solution and the lab phase is much

764
00:30:42,000 --> 00:30:44,000
longer than the white face

765
00:30:44,000 --> 00:30:45,840
and the specification is very

766
00:30:45,840 --> 00:30:47,679
complicated

767
00:30:47,679 --> 00:30:49,679
for the very fiber computation we have

768
00:30:49,679 --> 00:30:51,600
no liveness guarantee and the master

769
00:30:51,600 --> 00:30:54,640
circuit is very expensive

770
00:30:54,640 --> 00:30:57,440
and in our paper we have no weakness

771
00:30:57,440 --> 00:30:59,919
blindness guarantee and have

772
00:30:59,919 --> 00:31:03,120
weaker security parameters

773
00:31:03,120 --> 00:31:04,960
but what are the

774
00:31:04,960 --> 00:31:07,440
advantages of this construction and the

775
00:31:07,440 --> 00:31:09,919
advantage of the npc is of course litmus

776
00:31:09,919 --> 00:31:13,279
guarantee for verifiable computation

777
00:31:13,279 --> 00:31:15,600
the wi-fi the length of the white face

778
00:31:15,600 --> 00:31:18,840
is unbounded

779
00:31:18,960 --> 00:31:21,279
and the outputs are always correct when

780
00:31:21,279 --> 00:31:22,399
provided

781
00:31:22,399 --> 00:31:24,240
of course almost

782
00:31:24,240 --> 00:31:25,200
and

783
00:31:25,200 --> 00:31:27,679
in this paper we have also unbounded

784
00:31:27,679 --> 00:31:28,880
whiteface

785
00:31:28,880 --> 00:31:31,440
the master circuit is very cheap

786
00:31:31,440 --> 00:31:33,840
and what's important also that we have a

787
00:31:33,840 --> 00:31:37,918
blog box access to the functionality

788
00:31:38,559 --> 00:31:40,480
we'd be very happy to answer any other

789
00:31:40,480 --> 00:31:42,399
questions

790
00:31:42,399 --> 00:31:44,480
probably i won't be

791
00:31:44,480 --> 00:31:47,120
and this is in person i'll be available

792
00:31:47,120 --> 00:31:49,360
online on the session

793
00:31:49,360 --> 00:31:51,039
thank you very much for your attention

794
00:31:51,039 --> 00:31:54,039
bye

