1
00:00:00,799 --> 00:00:03,040
and the first talk is uh

2
00:00:03,040 --> 00:00:05,279
by uh on on the topic information

3
00:00:05,279 --> 00:00:07,440
theatrically secure mpc against mixed

4
00:00:07,440 --> 00:00:09,760
dynamic adversaries the paper is by ivan

5
00:00:09,760 --> 00:00:12,639
damgard daniel escadero and the vera the

6
00:00:12,639 --> 00:00:14,320
virabhi and the via is going to give the

7
00:00:14,320 --> 00:00:16,239
dog

8
00:00:16,239 --> 00:00:18,240
thank you uh so this work is about

9
00:00:18,240 --> 00:00:20,000
information theoretically secure npc

10
00:00:20,000 --> 00:00:22,240
against makes dynamic adversary based on

11
00:00:22,240 --> 00:00:25,439
a joint work with ivan dangard and dan

12
00:00:25,439 --> 00:00:27,039
so let me begin with a quick

13
00:00:27,039 --> 00:00:29,679
introduction to what mpc means suppose

14
00:00:29,679 --> 00:00:31,760
you have n mutually distrusting parties

15
00:00:31,760 --> 00:00:33,520
out of which t

16
00:00:33,520 --> 00:00:35,280
and they want to compute some combined

17
00:00:35,280 --> 00:00:37,920
function on their private inputs and mpc

18
00:00:37,920 --> 00:00:40,079
gives them a way to do so while ensuring

19
00:00:40,079 --> 00:00:42,320
that everyone gets the correct output

20
00:00:42,320 --> 00:00:43,840
and that nothing beyond the function

21
00:00:43,840 --> 00:00:45,520
output is revealed

22
00:00:45,520 --> 00:00:47,600
now in this work we focus on information

23
00:00:47,600 --> 00:00:49,520
theoretic mpc where we assume the

24
00:00:49,520 --> 00:00:51,199
adversary to be computationally

25
00:00:51,199 --> 00:00:53,920
unbounded and this includes perfectly

26
00:00:53,920 --> 00:00:55,760
secure protocols where no error is

27
00:00:55,760 --> 00:00:57,520
allowed and statistically secure

28
00:00:57,520 --> 00:00:59,520
protocols where negligible error is

29
00:00:59,520 --> 00:01:01,039
allowed

30
00:01:01,039 --> 00:01:02,719
now let's look at classifications of

31
00:01:02,719 --> 00:01:04,559
adversary based on the kind of

32
00:01:04,559 --> 00:01:06,720
misbehavior that they are allowed so the

33
00:01:06,720 --> 00:01:09,040
weakest one is the passive or the semi

34
00:01:09,040 --> 00:01:11,200
honest adversary and here the kara

35
00:01:11,200 --> 00:01:13,520
parties are honest but curious that is

36
00:01:13,520 --> 00:01:15,360
they follow the protocol steps but the

37
00:01:15,360 --> 00:01:18,080
adversary can see their internal state

38
00:01:18,080 --> 00:01:19,840
now in such a model information

39
00:01:19,840 --> 00:01:21,360
theoretic security is known to be

40
00:01:21,360 --> 00:01:23,439
possible if the number of passive

41
00:01:23,439 --> 00:01:26,159
corruptions is less than n by two a

42
00:01:26,159 --> 00:01:28,080
stronger model is the active or

43
00:01:28,080 --> 00:01:30,000
malicious adversary where the corrupt

44
00:01:30,000 --> 00:01:31,840
parties can deviate from the protocol

45
00:01:31,840 --> 00:01:34,400
arbitrarily and in this model

46
00:01:34,400 --> 00:01:36,560
statistical security is known to be

47
00:01:36,560 --> 00:01:39,200
possible if two ta is less than n but

48
00:01:39,200 --> 00:01:41,200
for perfect security you require three

49
00:01:41,200 --> 00:01:43,439
ta to be less than n

50
00:01:43,439 --> 00:01:45,520
the third model is that of the mixed

51
00:01:45,520 --> 00:01:47,920
adversary where the adversary is allowed

52
00:01:47,920 --> 00:01:50,159
to make different types of corruption

53
00:01:50,159 --> 00:01:52,640
simultaneously so this adversary is

54
00:01:52,640 --> 00:01:55,040
allowed to make tp passive corruptions

55
00:01:55,040 --> 00:01:57,680
ta active corruptions and tf fail stop

56
00:01:57,680 --> 00:01:59,840
corruptions where he can instruct these

57
00:01:59,840 --> 00:02:02,240
failstop parties to abort but he cannot

58
00:02:02,240 --> 00:02:03,920
see their internal state

59
00:02:03,920 --> 00:02:05,759
so in this model it's known that

60
00:02:05,759 --> 00:02:08,399
statistical security is possible if two

61
00:02:08,399 --> 00:02:11,440
t a plus two t p plus t f is less than n

62
00:02:11,440 --> 00:02:13,760
and there is a similar inequality for

63
00:02:13,760 --> 00:02:16,080
the case of perfect security uh which

64
00:02:16,080 --> 00:02:18,000
has three ta instead

65
00:02:18,000 --> 00:02:19,840
so if you look closely this actually

66
00:02:19,840 --> 00:02:21,440
generalizes the bounds that we saw

67
00:02:21,440 --> 00:02:23,200
earlier for the passive and the active

68
00:02:23,200 --> 00:02:25,280
case and these were presented in the

69
00:02:25,280 --> 00:02:28,239
work of fitsy and others and they showed

70
00:02:28,239 --> 00:02:30,879
that these bounds are also sufficient so

71
00:02:30,879 --> 00:02:32,959
in particular they showed that if you

72
00:02:32,959 --> 00:02:35,519
take a fixed tuple t atp and t f

73
00:02:35,519 --> 00:02:38,400
satisfying such an inequality then there

74
00:02:38,400 --> 00:02:40,160
exists a protocol

75
00:02:40,160 --> 00:02:42,319
now an important point is that if you

76
00:02:42,319 --> 00:02:43,920
take say two different couples

77
00:02:43,920 --> 00:02:46,080
satisfying this inequality then what

78
00:02:46,080 --> 00:02:48,080
their result says is that there exists

79
00:02:48,080 --> 00:02:50,640
two different protocols but what we are

80
00:02:50,640 --> 00:02:52,959
interested in is having a single

81
00:02:52,959 --> 00:02:55,760
protocol that works for any tuple that

82
00:02:55,760 --> 00:02:57,920
satisfies this inequality

83
00:02:57,920 --> 00:02:59,360
and this is exactly what the dynamic

84
00:02:59,360 --> 00:03:01,599
anniversary model is and we want to

85
00:03:01,599 --> 00:03:03,840
understand that under what conditions is

86
00:03:03,840 --> 00:03:06,080
it possible to get information theoretic

87
00:03:06,080 --> 00:03:08,239
security against such a dynamic

88
00:03:08,239 --> 00:03:09,360
adversary

89
00:03:09,360 --> 00:03:11,920
and this was introduced by the work of

90
00:03:11,920 --> 00:03:14,560
hurt and others in 2013 this model of

91
00:03:14,560 --> 00:03:17,280
dynamic adversary and both in their work

92
00:03:17,280 --> 00:03:19,599
and a subsequent work by patra at all

93
00:03:19,599 --> 00:03:20,800
they focused on the case of

94
00:03:20,800 --> 00:03:23,120
computational security and we are

95
00:03:23,120 --> 00:03:24,640
focusing on information theoretic

96
00:03:24,640 --> 00:03:27,280
security uh but even information

97
00:03:27,280 --> 00:03:29,200
theoretic or dynamic adversary has

98
00:03:29,200 --> 00:03:31,519
indirectly been studied by these works

99
00:03:31,519 --> 00:03:34,159
in 2008 because they consider a general

100
00:03:34,159 --> 00:03:36,560
mixed adversary model and you can think

101
00:03:36,560 --> 00:03:38,480
of dynamic adversary as being a

102
00:03:38,480 --> 00:03:40,879
threshold version of this one

103
00:03:40,879 --> 00:03:42,959
i refer to the paper for further detail

104
00:03:42,959 --> 00:03:44,799
comparison on this

105
00:03:44,799 --> 00:03:47,599
now let me list our contributions first

106
00:03:47,599 --> 00:03:49,200
we explored the case of statistical

107
00:03:49,200 --> 00:03:51,280
security where we begin with the

108
00:03:51,280 --> 00:03:53,439
assumption that the adversary respects

109
00:03:53,439 --> 00:03:55,920
this inequality so this is needed even

110
00:03:55,920 --> 00:03:57,680
in the non-dynamic case so it would be

111
00:03:57,680 --> 00:04:00,080
needed in the dynamic case as well so

112
00:04:00,080 --> 00:04:02,480
for this we showed that for sfe

113
00:04:02,480 --> 00:04:04,720
protocols even the strongest guarantee

114
00:04:04,720 --> 00:04:06,400
of guaranteed output delivery is

115
00:04:06,400 --> 00:04:08,959
possible but this comes at the cost of

116
00:04:08,959 --> 00:04:11,280
increased round complexity so we showed

117
00:04:11,280 --> 00:04:13,680
that even if you just need fairness you

118
00:04:13,680 --> 00:04:15,920
still need to incur round complexity

119
00:04:15,920 --> 00:04:18,000
that grows linearly in the number of

120
00:04:18,000 --> 00:04:20,000
parties so this actually shows a

121
00:04:20,000 --> 00:04:21,759
separation between the dynamic and the

122
00:04:21,759 --> 00:04:23,440
non-dynamic case because in the

123
00:04:23,440 --> 00:04:25,680
non-dynamic case you can get constant on

124
00:04:25,680 --> 00:04:27,919
protocols at least for some restricted

125
00:04:27,919 --> 00:04:30,080
trusses or functions

126
00:04:30,080 --> 00:04:31,919
next for reactive mpc we showed that

127
00:04:31,919 --> 00:04:34,639
fairness is possible but it turns out

128
00:04:34,639 --> 00:04:36,560
that god additionally would require this

129
00:04:36,560 --> 00:04:39,600
constraint of r plus f being less than n

130
00:04:39,600 --> 00:04:41,919
where r is the maximum number of states

131
00:04:41,919 --> 00:04:43,840
that the adversary can read so this

132
00:04:43,840 --> 00:04:45,360
would include the active and the passive

133
00:04:45,360 --> 00:04:48,000
corruptions and f is the maximum number

134
00:04:48,000 --> 00:04:50,240
of players that the adversary can crash

135
00:04:50,240 --> 00:04:52,000
so this would include the active and the

136
00:04:52,000 --> 00:04:54,160
fail stop corruptions

137
00:04:54,160 --> 00:04:55,840
next we explore the case of perfect

138
00:04:55,840 --> 00:04:58,160
security and again we begin with the

139
00:04:58,160 --> 00:04:59,680
inequality needed even in the

140
00:04:59,680 --> 00:05:02,240
non-dynamic case so for this the picture

141
00:05:02,240 --> 00:05:04,800
was more on the negative side and

142
00:05:04,800 --> 00:05:06,880
particularly for sfe we showed that it's

143
00:05:06,880 --> 00:05:08,720
impossible and continues to be

144
00:05:08,720 --> 00:05:10,960
impossible even if you just want the

145
00:05:10,960 --> 00:05:12,639
weakest notion of security with the

146
00:05:12,639 --> 00:05:14,320
board and you don't even allow the

147
00:05:14,320 --> 00:05:17,280
adversary to use fail stop corruptions

148
00:05:17,280 --> 00:05:18,000
but

149
00:05:18,000 --> 00:05:19,680
posit on the positive side it's still

150
00:05:19,680 --> 00:05:22,000
possible in some cases for example when

151
00:05:22,000 --> 00:05:24,400
either you restrict pa to be 0 or you

152
00:05:24,400 --> 00:05:27,280
extract tp to be 0.

153
00:05:27,280 --> 00:05:30,080
next we explore the specific reactive

154
00:05:30,080 --> 00:05:33,280
functionality of vss uh so note that the

155
00:05:33,280 --> 00:05:35,039
negative results for sfe generally don't

156
00:05:35,039 --> 00:05:37,680
extend to vss and for this we showed

157
00:05:37,680 --> 00:05:40,080
that geod is impossible even if tf is

158
00:05:40,080 --> 00:05:43,840
zero uh but fair vss is possible and

159
00:05:43,840 --> 00:05:46,639
even geode is possible in some cases so

160
00:05:46,639 --> 00:05:49,199
here we chose to explore the cases when

161
00:05:49,199 --> 00:05:53,039
either ta is 0 or 0 and for each of them

162
00:05:53,039 --> 00:05:55,120
we showed what the optimal bounds would

163
00:05:55,120 --> 00:05:57,680
be but there can also be different other

164
00:05:57,680 --> 00:06:00,800
kinds of tradeoffs when each of tatp and

165
00:06:00,800 --> 00:06:03,919
tf 1 0 so that is something that we are

166
00:06:03,919 --> 00:06:06,479
left to explore in future work so with

167
00:06:06,479 --> 00:06:09,120
this i conclude my talk and refer to our

168
00:06:09,120 --> 00:06:13,039
paper for further details thank you

169
00:06:16,400 --> 00:06:18,720
thank you for the great job so any

170
00:06:18,720 --> 00:06:20,639
questions from the room or

171
00:06:20,639 --> 00:06:23,600
i don't think there any questions

172
00:06:24,880 --> 00:06:26,560
but a quick question so in the case of

173
00:06:26,560 --> 00:06:27,360
uh

174
00:06:27,360 --> 00:06:29,600
computational security you had like uh

175
00:06:29,600 --> 00:06:30,800
the lower bound for information

176
00:06:30,800 --> 00:06:32,080
theoretic security as far as perfect

177
00:06:32,080 --> 00:06:33,919
security or statistical and perfect

178
00:06:33,919 --> 00:06:35,680
security but computational security

179
00:06:35,680 --> 00:06:37,199
what's the what's the what are the

180
00:06:37,199 --> 00:06:38,639
equations i need to satisfy in terms of

181
00:06:38,639 --> 00:06:40,319
datp and fdr

182
00:06:40,319 --> 00:06:42,560
uh so uh in the computational one they

183
00:06:42,560 --> 00:06:44,080
did not consider fail stop corruption

184
00:06:44,080 --> 00:06:45,520
they just consider the active and the

185
00:06:45,520 --> 00:06:47,680
passive one and it was

186
00:06:47,680 --> 00:06:50,400
it was 2 t a plus t p is less than n

187
00:06:50,400 --> 00:06:52,720
that that was what the uh what the

188
00:06:52,720 --> 00:06:54,319
condition turned out to be for the case

189
00:06:54,319 --> 00:06:56,800
of um

190
00:06:57,280 --> 00:06:59,759
yes yes it is also tight yeah so even

191
00:06:59,759 --> 00:07:01,680
for the dynamic case so the first work

192
00:07:01,680 --> 00:07:03,759
had explored they had both the upper and

193
00:07:03,759 --> 00:07:05,360
the lower bounds and the second work

194
00:07:05,360 --> 00:07:07,360
they explored the round complexity of

195
00:07:07,360 --> 00:07:08,880
such protocols

196
00:07:08,880 --> 00:07:10,240
and uh um

197
00:07:10,240 --> 00:07:12,800
any questions or just one more follow-up

198
00:07:12,800 --> 00:07:14,080
so you also talked about trying to have

199
00:07:14,080 --> 00:07:16,000
like a one general protocol that sort of

200
00:07:16,000 --> 00:07:17,360
fits all

201
00:07:17,360 --> 00:07:21,039
df parameters so uh suppose if i ask you

202
00:07:21,039 --> 00:07:23,039
that okay hey you still want to compile

203
00:07:23,039 --> 00:07:24,639
this all these different protocols for

204
00:07:24,639 --> 00:07:26,560
different uh perfect or statistical

205
00:07:26,560 --> 00:07:28,240
security but maybe i give you some sort

206
00:07:28,240 --> 00:07:30,160
of computational tool i give you like a

207
00:07:30,160 --> 00:07:31,680
encryption system then can you sort of

208
00:07:31,680 --> 00:07:33,039
compress all these different protocols

209
00:07:33,039 --> 00:07:34,400
into a single protocol using

210
00:07:34,400 --> 00:07:35,599
computational assumptions i'm not sure

211
00:07:35,599 --> 00:07:36,960
if that question makes sense but i'm

212
00:07:36,960 --> 00:07:38,479
just trying to come up with a generic

213
00:07:38,479 --> 00:07:39,840
compiler for aggregating all these

214
00:07:39,840 --> 00:07:41,280
different templates into one using a

215
00:07:41,280 --> 00:07:43,199
computational assumption

216
00:07:43,199 --> 00:07:46,479
uh so i think that um like maybe some of

217
00:07:46,479 --> 00:07:48,720
the sub protocols you can try to have it

218
00:07:48,720 --> 00:07:51,360
in a hybrid model like in a hotel hybrid

219
00:07:51,360 --> 00:07:54,720
model or something but uh yeah i mean

220
00:07:54,720 --> 00:07:56,720
i think the conditions may change in

221
00:07:56,720 --> 00:07:59,599
that case like i that's actually

222
00:07:59,599 --> 00:08:01,039
interesting but i need to think a bit

223
00:08:01,039 --> 00:08:02,800
more but if i just think of our upper

224
00:08:02,800 --> 00:08:05,280
bounds i think that some of the uh like

225
00:08:05,280 --> 00:08:07,039
the one some of the limitations were

226
00:08:07,039 --> 00:08:10,080
because we don't have the uh

227
00:08:10,080 --> 00:08:11,520
corresponding information theoretic tool

228
00:08:11,520 --> 00:08:13,840
but if we had an ideal uh

229
00:08:13,840 --> 00:08:16,160
call to such a ot hybrid or something

230
00:08:16,160 --> 00:08:18,720
then maybe uh maybe we can get something

231
00:08:18,720 --> 00:08:21,280
or better feasibility yeah interestingly

232
00:08:21,280 --> 00:08:23,280
interesting okay that's great thanks a

233
00:08:23,280 --> 00:08:24,080
lot

234
00:08:24,080 --> 00:08:26,080
so there are no further questions yeah

235
00:08:26,080 --> 00:08:27,759
let's just move on to the second talk

236
00:08:27,759 --> 00:08:29,919
which will be an in-person talk too so

237
00:08:29,919 --> 00:08:33,478
that that's great

238
00:08:46,959 --> 00:08:48,720
okay

239
00:08:48,720 --> 00:08:52,120
i'll do this

240
00:09:06,959 --> 00:09:09,600
okay it's uh great to have an in-person

241
00:09:09,600 --> 00:09:11,279
talk in the online session supposedly

242
00:09:11,279 --> 00:09:13,600
online session with yeah uh so the next

243
00:09:13,600 --> 00:09:15,360
talk will be on actively secure

244
00:09:15,360 --> 00:09:17,279
elementary and pc reductions and the

245
00:09:17,279 --> 00:09:19,360
paper is by benny applebaum and arushi

246
00:09:19,360 --> 00:09:23,640
goyal and arushi is going to give a talk

247
00:09:24,320 --> 00:09:26,640
thanks for the introduction um yeah so

248
00:09:26,640 --> 00:09:31,000
this is joint work with benny applebaum

249
00:09:32,490 --> 00:09:35,610
[Music]

250
00:09:40,399 --> 00:09:42,720
um so this is this is my quintessential

251
00:09:42,720 --> 00:09:44,480
slide on the definition of npc which i'm

252
00:09:44,480 --> 00:09:45,920
going to skip because they already

253
00:09:45,920 --> 00:09:47,320
covered this

254
00:09:47,320 --> 00:09:50,080
[Music]

255
00:09:50,080 --> 00:09:51,600
um okay

256
00:09:51,600 --> 00:09:54,080
so let's start so since its inception uh

257
00:09:54,080 --> 00:09:57,120
the design of npc protocols have quite

258
00:09:57,120 --> 00:09:59,279
heavily relied uh on the notion of

259
00:09:59,279 --> 00:10:01,600
secure reductions and we see that the

260
00:10:01,600 --> 00:10:03,760
task of securely computing a particular

261
00:10:03,760 --> 00:10:05,200
function

262
00:10:05,200 --> 00:10:07,120
securely reduces to the task of

263
00:10:07,120 --> 00:10:09,360
computing a different and a simpler

264
00:10:09,360 --> 00:10:12,000
function g if there exists a protocol

265
00:10:12,000 --> 00:10:14,240
that computes f where the parties have

266
00:10:14,240 --> 00:10:16,880
oracle access to the simpler function g

267
00:10:16,880 --> 00:10:18,959
and given this kind of protocol

268
00:10:18,959 --> 00:10:21,600
uh all we need now is to design secure

269
00:10:21,600 --> 00:10:23,519
protocol for the simple

270
00:10:23,519 --> 00:10:26,000
functionality

271
00:10:26,000 --> 00:10:28,640
uh many classical protocols for example

272
00:10:28,640 --> 00:10:31,600
that by yao and goldright on

273
00:10:31,600 --> 00:10:33,440
essentially construct protocols that can

274
00:10:33,440 --> 00:10:35,760
be viewed as secure reductions to the

275
00:10:35,760 --> 00:10:38,480
two party ot functionality

276
00:10:38,480 --> 00:10:40,240
going the step ahead we say that the

277
00:10:40,240 --> 00:10:43,000
task of securely computing a function f

278
00:10:43,000 --> 00:10:45,440
non-interactively reduces to the task of

279
00:10:45,440 --> 00:10:47,360
completing a function g

280
00:10:47,360 --> 00:10:49,040
if in this particular protocol the

281
00:10:49,040 --> 00:10:51,279
parties only make single queries to this

282
00:10:51,279 --> 00:10:53,760
oracle g and don't interact with each

283
00:10:53,760 --> 00:10:56,480
other at all

284
00:10:56,800 --> 00:10:58,800
in our work we consider the notion of

285
00:10:58,800 --> 00:11:00,880
elementary reductions these are

286
00:11:00,880 --> 00:11:03,040
non-interactive reductions

287
00:11:03,040 --> 00:11:05,040
where the function g is that of a

288
00:11:05,040 --> 00:11:07,360
constant degree and moreover the

289
00:11:07,360 --> 00:11:08,959
reduction is

290
00:11:08,959 --> 00:11:11,839
makes use of a prg in a black box way

291
00:11:11,839 --> 00:11:13,920
this additionally requires that the

292
00:11:13,920 --> 00:11:16,160
function g is entirely independent of

293
00:11:16,160 --> 00:11:17,279
the prg

294
00:11:17,279 --> 00:11:19,360
such black box restrictions typically

295
00:11:19,360 --> 00:11:21,760
make things much faster

296
00:11:21,760 --> 00:11:24,000
and also many classical reductions

297
00:11:24,000 --> 00:11:25,519
already capture this notion of

298
00:11:25,519 --> 00:11:27,360
elementary reductions

299
00:11:27,360 --> 00:11:29,279
which i will go over in a couple of

300
00:11:29,279 --> 00:11:31,680
slides

301
00:11:31,760 --> 00:11:34,079
okay so like to summarize a little bit

302
00:11:34,079 --> 00:11:36,640
about uh how elementary reductions look

303
00:11:36,640 --> 00:11:39,040
like we have these set of parties who

304
00:11:39,040 --> 00:11:41,200
run some local pre-processing functions

305
00:11:41,200 --> 00:11:43,600
in their respective inputs

306
00:11:43,600 --> 00:11:45,839
these be processing functions can make

307
00:11:45,839 --> 00:11:48,800
oracle queries to the prg

308
00:11:48,800 --> 00:11:50,880
the output of these pre-processing

309
00:11:50,880 --> 00:11:52,639
functions are sent by the parties to the

310
00:11:52,639 --> 00:11:53,839
oracle g

311
00:11:53,839 --> 00:11:56,560
and finally the output of this oracle g

312
00:11:56,560 --> 00:11:57,519
is

313
00:11:57,519 --> 00:11:59,839
post processed by the parties using some

314
00:11:59,839 --> 00:12:01,839
post processing function to compute the

315
00:12:01,839 --> 00:12:04,240
final output

316
00:12:04,240 --> 00:12:06,480
note that here both the preprocessing

317
00:12:06,480 --> 00:12:08,240
and post processing functions are

318
00:12:08,240 --> 00:12:09,920
allowed to make oracle queries to the

319
00:12:09,920 --> 00:12:11,200
prg

320
00:12:11,200 --> 00:12:12,959
but the function g is entirely

321
00:12:12,959 --> 00:12:15,040
independent of it and the parties do not

322
00:12:15,040 --> 00:12:18,639
interact with each other whatsoever

323
00:12:18,639 --> 00:12:20,560
okay so like i said many classical

324
00:12:20,560 --> 00:12:23,200
reductions are in fact elementary for

325
00:12:23,200 --> 00:12:26,079
instance the two-party protocol by yao

326
00:12:26,079 --> 00:12:27,920
and the multi-party protocol of beaver

327
00:12:27,920 --> 00:12:29,760
megali and rogue

328
00:12:29,760 --> 00:12:31,600
in the semi-honest setting can be viewed

329
00:12:31,600 --> 00:12:33,360
as an elementary reduction from all

330
00:12:33,360 --> 00:12:35,519
efficiently computable functions

331
00:12:35,519 --> 00:12:38,720
uh in the dishonest majority setting

332
00:12:38,720 --> 00:12:40,880
bieber mcauley and rogue way also had a

333
00:12:40,880 --> 00:12:42,959
maliciously secure variant based on zero

334
00:12:42,959 --> 00:12:45,200
knowledge but that protocol was

335
00:12:45,200 --> 00:12:47,360
interactive i'm sorry that reduction was

336
00:12:47,360 --> 00:12:49,920
interactive and the oracle g in that

337
00:12:49,920 --> 00:12:52,399
case depended on the prg in the

338
00:12:52,399 --> 00:12:54,639
malicious setting however we either know

339
00:12:54,639 --> 00:12:57,120
of elementary reductions only in the

340
00:12:57,120 --> 00:13:00,079
honest majority setting or only for low

341
00:13:00,079 --> 00:13:02,480
depth circuits or only ones that achieve

342
00:13:02,480 --> 00:13:04,720
the weaker notion of security for the

343
00:13:04,720 --> 00:13:05,680
what

344
00:13:05,680 --> 00:13:07,360
unfortunately we don't know of any

345
00:13:07,360 --> 00:13:09,839
elementary reduction uh that is fully

346
00:13:09,839 --> 00:13:12,160
maliciously secure that is it achieves

347
00:13:12,160 --> 00:13:13,920
guaranteed output delivery for all

348
00:13:13,920 --> 00:13:16,560
efficiently computable functions

349
00:13:16,560 --> 00:13:17,760
um

350
00:13:17,760 --> 00:13:19,360
apple bomb at all present a

351
00:13:19,360 --> 00:13:21,440
non-elementary non-interactive reduction

352
00:13:21,440 --> 00:13:23,519
in this setting but the function g in

353
00:13:23,519 --> 00:13:25,839
their case depends on the prg

354
00:13:25,839 --> 00:13:27,680
so naturally the question that we

355
00:13:27,680 --> 00:13:29,519
address in this work is whether an

356
00:13:29,519 --> 00:13:31,360
elementary reduction exists in this

357
00:13:31,360 --> 00:13:32,720
setting

358
00:13:32,720 --> 00:13:34,880
and we show that uh an elementary

359
00:13:34,880 --> 00:13:36,800
reduction that achieves full security in

360
00:13:36,800 --> 00:13:39,279
the setting is unlikely to exist

361
00:13:39,279 --> 00:13:41,199
uh but one that achieves identifiable

362
00:13:41,199 --> 00:13:44,560
abort does indeed exist

363
00:13:44,560 --> 00:13:47,199
uh let me now elaborate on these

364
00:13:47,199 --> 00:13:49,120
contributions a little bit so to

365
00:13:49,120 --> 00:13:51,519
establish our lower bound we show that

366
00:13:51,519 --> 00:13:53,680
uh for two parties existence of such an

367
00:13:53,680 --> 00:13:55,279
elementary reduction

368
00:13:55,279 --> 00:13:57,839
that achieves partial penance that is

369
00:13:57,839 --> 00:13:59,920
where fairness is only guaranteed when

370
00:13:59,920 --> 00:14:02,399
one of the parties is corrupt implies

371
00:14:02,399 --> 00:14:04,399
existence of an information theoretic

372
00:14:04,399 --> 00:14:06,880
elementary reduction for all efficiently

373
00:14:06,880 --> 00:14:09,920
computable functions um in the crs model

374
00:14:09,920 --> 00:14:11,920
with inverse polynomial average based

375
00:14:11,920 --> 00:14:14,800
privacy against passive adversaries

376
00:14:14,800 --> 00:14:16,800
ah and here by information theoretic

377
00:14:16,800 --> 00:14:18,560
reduction i mean that the parties are

378
00:14:18,560 --> 00:14:20,399
not even allowed to make black box calls

379
00:14:20,399 --> 00:14:22,000
to the prg

380
00:14:22,000 --> 00:14:23,760
and while we don't achieve an

381
00:14:23,760 --> 00:14:25,760
unconditional impossibility the

382
00:14:25,760 --> 00:14:27,440
implications of this particular result

383
00:14:27,440 --> 00:14:29,839
statement are quite non-trivial

384
00:14:29,839 --> 00:14:31,920
because they imply existence of constant

385
00:14:31,920 --> 00:14:34,000
round protocols that are far

386
00:14:34,000 --> 00:14:36,399
beyond the current state of the art for

387
00:14:36,399 --> 00:14:38,160
instance existence of this kind of

388
00:14:38,160 --> 00:14:40,240
information theoretic reduction would

389
00:14:40,240 --> 00:14:42,079
imply a two-party constant round

390
00:14:42,079 --> 00:14:44,000
protocol for all efficiently computable

391
00:14:44,000 --> 00:14:45,920
functions that achieves inverse

392
00:14:45,920 --> 00:14:47,680
polynomial average case information

393
00:14:47,680 --> 00:14:49,519
theoretic security in the ot hybrid

394
00:14:49,519 --> 00:14:50,399
model

395
00:14:50,399 --> 00:14:52,320
which in turn would imply a constant

396
00:14:52,320 --> 00:14:54,800
round protocol for three parties

397
00:14:54,800 --> 00:14:57,600
um with inverse polynomial average case

398
00:14:57,600 --> 00:14:59,440
information theoretic security for all

399
00:14:59,440 --> 00:15:01,519
efficiently computable functions

400
00:15:01,519 --> 00:15:02,880
and this is a well-known

401
00:15:02,880 --> 00:15:05,680
three-decade-old problem um although the

402
00:15:05,680 --> 00:15:07,680
original problem was stated for the

403
00:15:07,680 --> 00:15:10,079
standard notion of security

404
00:15:10,079 --> 00:15:12,639
it doesn't seem like this relaxation of

405
00:15:12,639 --> 00:15:15,440
security uh gives us any more advantage

406
00:15:15,440 --> 00:15:18,880
or makes the problem any more attractive

407
00:15:18,880 --> 00:15:21,440
for our positive result we uh

408
00:15:21,440 --> 00:15:24,480
i'm sorry we show that uh an elementary

409
00:15:24,480 --> 00:15:26,320
reduction that achieves identifiable

410
00:15:26,320 --> 00:15:29,040
abort for dishonest majority for all

411
00:15:29,040 --> 00:15:30,720
efficiently computable functions does

412
00:15:30,720 --> 00:15:31,839
exist

413
00:15:31,839 --> 00:15:34,639
and a similar reduction was in fact also

414
00:15:34,639 --> 00:15:37,120
implicit in a recent work

415
00:15:37,120 --> 00:15:38,880
of vomit on

416
00:15:38,880 --> 00:15:40,720
we also show that if the parties are

417
00:15:40,720 --> 00:15:42,720
allowed to interact with the oracle g

418
00:15:42,720 --> 00:15:45,279
more than once um then it's possible to

419
00:15:45,279 --> 00:15:47,440
achieve fairness and finally it's

420
00:15:47,440 --> 00:15:49,680
possible to achieve full security if the

421
00:15:49,680 --> 00:15:51,519
function g is allowed to depend on the

422
00:15:51,519 --> 00:15:52,959
prg

423
00:15:52,959 --> 00:15:55,120
in fact any passively secure elementary

424
00:15:55,120 --> 00:15:57,199
reduction can be transformed into an

425
00:15:57,199 --> 00:15:59,839
actively secure one if the if the

426
00:15:59,839 --> 00:16:03,120
function g is allowed to depend

427
00:16:03,360 --> 00:16:06,519
thank you

428
00:16:14,890 --> 00:16:18,769
[Music]

429
00:16:21,839 --> 00:16:23,839
okay so maybe just a quick question just

430
00:16:23,839 --> 00:16:26,240
to understand you said that you uh get

431
00:16:26,240 --> 00:16:27,600
this three down protocol with inverse

432
00:16:27,600 --> 00:16:29,680
permanent security in with these uh

433
00:16:29,680 --> 00:16:31,440
implications

434
00:16:31,440 --> 00:16:34,160
three particularly protocols so in

435
00:16:34,160 --> 00:16:35,600
encryption and other primitives we know

436
00:16:35,600 --> 00:16:37,199
that inverse performance security can be

437
00:16:37,199 --> 00:16:39,040
amplified to full security by sort of

438
00:16:39,040 --> 00:16:41,120
using secret sharing tricks can you sort

439
00:16:41,120 --> 00:16:42,399
of hope to have like a similar theorem

440
00:16:42,399 --> 00:16:44,240
here that sort of any protocol with

441
00:16:44,240 --> 00:16:45,920
universal name security can be amplified

442
00:16:45,920 --> 00:16:48,160
to a protocol with security independent

443
00:16:48,160 --> 00:16:49,519
of the

444
00:16:49,519 --> 00:16:51,839
that's a good question i'm i'm not sure

445
00:16:51,839 --> 00:16:54,800
so so the only reason we say that this

446
00:16:54,800 --> 00:16:56,399
yeah yeah the reason that we say that

447
00:16:56,399 --> 00:16:58,720
this sort of there is this implication

448
00:16:58,720 --> 00:17:00,240
is that the rest of the reduction

449
00:17:00,240 --> 00:17:02,320
remains the same it's just how you

450
00:17:02,320 --> 00:17:04,799
implement of uh the function g right

451
00:17:04,799 --> 00:17:06,480
using the function j is simple enough

452
00:17:06,480 --> 00:17:08,559
then the function g is a constant is a

453
00:17:08,559 --> 00:17:10,400
constant degree function so that that

454
00:17:10,400 --> 00:17:12,400
can be implemented whatever like we know

455
00:17:12,400 --> 00:17:14,079
how to implement that

456
00:17:14,079 --> 00:17:16,240
but i'm not sure how we can get rid of

457
00:17:16,240 --> 00:17:18,160
like the inverse polynomial uh

458
00:17:18,160 --> 00:17:21,760
dependence uh sorry security that uh

459
00:17:21,760 --> 00:17:23,919
arrives whatever as part of your

460
00:17:23,919 --> 00:17:26,319
reduction

461
00:17:26,319 --> 00:17:28,480
any further questions from the audience

462
00:17:28,480 --> 00:17:30,080
or the chat

463
00:17:30,080 --> 00:17:32,799
i don't think so it's okay so yeah once

464
00:17:32,799 --> 00:17:33,880
again

465
00:17:33,880 --> 00:17:37,009
[Music]

466
00:17:37,440 --> 00:17:41,480
let's just move on to the next

467
00:17:58,640 --> 00:18:01,280
so the next talk is by uh is on

468
00:18:01,280 --> 00:18:03,520
environmentally friendly composable mpc

469
00:18:03,520 --> 00:18:05,520
the brain model from standard time

470
00:18:05,520 --> 00:18:06,720
resumptions

471
00:18:06,720 --> 00:18:09,440
and the result is by brandon rodner uh

472
00:18:09,440 --> 00:18:10,559
jeremiah

473
00:18:10,559 --> 00:18:13,520
measure john muller god and jeremiah is

474
00:18:13,520 --> 00:18:16,160
going to give the talk

475
00:18:16,160 --> 00:18:18,559
thanks for the introduction

476
00:18:18,559 --> 00:18:20,880
so secure multi-party computation allows

477
00:18:20,880 --> 00:18:22,320
material distressing parties to run the

478
00:18:22,320 --> 00:18:24,400
pm to try to perform tasks like secure

479
00:18:24,400 --> 00:18:26,480
function evaluation other parts evaluate

480
00:18:26,480 --> 00:18:28,640
a function of the private inputs to host

481
00:18:28,640 --> 00:18:30,400
the first price bit auction where only

482
00:18:30,400 --> 00:18:32,320
the highest bid and the winner revealed

483
00:18:32,320 --> 00:18:33,919
the intersection of sets but nothing but

484
00:18:33,919 --> 00:18:35,840
the intersection was there sorry but do

485
00:18:35,840 --> 00:18:37,120
you think you can speak a little bit

486
00:18:37,120 --> 00:18:38,400
louder it's

487
00:18:38,400 --> 00:18:40,880
uh difficult to hear you in the room

488
00:18:40,880 --> 00:18:42,960
maybe a little more yes

489
00:18:42,960 --> 00:18:44,720
okay this will be better

490
00:18:44,720 --> 00:18:47,440
of course okay thank you

491
00:18:47,440 --> 00:18:50,000
so much mpc can be used from arbitrary

492
00:18:50,000 --> 00:18:52,480
computations in a secure way and for mpc

493
00:18:52,480 --> 00:18:54,320
protocols we usually require properties

494
00:18:54,320 --> 00:18:56,080
like correctness secrecy or the

495
00:18:56,080 --> 00:18:58,960
independence of inputs

496
00:18:58,960 --> 00:19:00,880
and in reality protocols are seldom

497
00:19:00,880 --> 00:19:03,280
executed in isolation and we thus want

498
00:19:03,280 --> 00:19:05,039
these properties to hold even if the mpc

499
00:19:05,039 --> 00:19:07,200
protocols executed along arbitrary other

500
00:19:07,200 --> 00:19:08,480
protocols

501
00:19:08,480 --> 00:19:10,080
set it differently we want the security

502
00:19:10,080 --> 00:19:13,679
to hold under protocol composition

503
00:19:13,679 --> 00:19:15,280
a suitable notion for the security of

504
00:19:15,280 --> 00:19:16,640
protocols in a setting where other

505
00:19:16,640 --> 00:19:18,160
arbitrary particles may be executed

506
00:19:18,160 --> 00:19:20,240
concurrently is universally composed of

507
00:19:20,240 --> 00:19:22,640
security introduced by kennedy

508
00:19:22,640 --> 00:19:23,840
it can be shown that this strong

509
00:19:23,840 --> 00:19:25,360
security notion cannot be fulfilled in

510
00:19:25,360 --> 00:19:27,039
the plane model where only authenticated

511
00:19:27,039 --> 00:19:28,640
communication and complexity assumptions

512
00:19:28,640 --> 00:19:29,919
are available

513
00:19:29,919 --> 00:19:31,840
instead across the setup such as common

514
00:19:31,840 --> 00:19:33,120
reference string

515
00:19:33,120 --> 00:19:34,799
about the key infrastructure or random

516
00:19:34,799 --> 00:19:36,640
oracle is necessary

517
00:19:36,640 --> 00:19:38,160
as reliance on the setup might be

518
00:19:38,160 --> 00:19:39,679
undesirable there's a long list of

519
00:19:39,679 --> 00:19:41,440
security notions and protocols featuring

520
00:19:41,440 --> 00:19:43,280
compostable mpc in the plane model

521
00:19:43,280 --> 00:19:45,760
without a setup

522
00:19:45,760 --> 00:19:47,039
common to all the approaches listed

523
00:19:47,039 --> 00:19:48,720
above is that the simulation is achieved

524
00:19:48,720 --> 00:19:50,720
by giving the simulator a complexity

525
00:19:50,720 --> 00:19:52,720
advantage over the environment

526
00:19:52,720 --> 00:19:54,559
as a consequence the simulation is not

527
00:19:54,559 --> 00:19:56,320
efficient and cannot be out cannot be

528
00:19:56,320 --> 00:20:00,240
carried out in uniform polynomial time

529
00:20:00,480 --> 00:20:02,640
and this non-polynomial time simulation

530
00:20:02,640 --> 00:20:04,799
leads to a number of drawbacks the first

531
00:20:04,799 --> 00:20:06,559
is limited environmental friendliness

532
00:20:06,559 --> 00:20:09,520
which was introduced by kinetic impulse

533
00:20:09,520 --> 00:20:11,360
very informally

534
00:20:11,360 --> 00:20:13,679
environmental friendliest means that the

535
00:20:13,679 --> 00:20:16,000
non-polynomial time simulation as can be

536
00:20:16,000 --> 00:20:18,080
seen on the right side may affect the

537
00:20:18,080 --> 00:20:19,840
security of other protocols that are

538
00:20:19,840 --> 00:20:21,840
executed concurrently

539
00:20:21,840 --> 00:20:23,520
as an example think of the superpower

540
00:20:23,520 --> 00:20:25,039
normal time simulator creating a

541
00:20:25,039 --> 00:20:27,039
commitment that may have an adversary in

542
00:20:27,039 --> 00:20:28,880
another protocol if the considered

543
00:20:28,880 --> 00:20:30,960
commitment scheme is not malleable

544
00:20:30,960 --> 00:20:32,720
because to see security this does not

545
00:20:32,720 --> 00:20:33,840
happen as the simulator runs in

546
00:20:33,840 --> 00:20:36,080
polynomial time

547
00:20:36,080 --> 00:20:37,840
but there are also there are different

548
00:20:37,840 --> 00:20:40,080
disadvantages for example in the

549
00:20:40,080 --> 00:20:42,240
simulator things for polynomial advice

550
00:20:42,240 --> 00:20:43,919
this advice may contain secrets of

551
00:20:43,919 --> 00:20:46,240
protocols that have started previously

552
00:20:46,240 --> 00:20:48,000
this is true even if these protocols are

553
00:20:48,000 --> 00:20:49,919
secure against non-uniform adversaries

554
00:20:49,919 --> 00:20:52,159
like in the case of uc security

555
00:20:52,159 --> 00:20:54,559
a such non-if non-uniform simulation can

556
00:20:54,559 --> 00:20:56,240
also negatively affect the security of

557
00:20:56,240 --> 00:20:59,679
other protocols which is undesirable

558
00:20:59,679 --> 00:21:00,960
yet another drawback of previous

559
00:21:00,960 --> 00:21:03,679
approaches with limited user usability

560
00:21:03,679 --> 00:21:05,120
support that we construct commercial

561
00:21:05,120 --> 00:21:06,799
commitment scheme that is for example

562
00:21:06,799 --> 00:21:08,240
spseq

563
00:21:08,240 --> 00:21:10,080
because the super polynomial simulation

564
00:21:10,080 --> 00:21:11,760
we can not lock this commitment scheme

565
00:21:11,760 --> 00:21:13,760
into arbitrary uc secure mpc protocols

566
00:21:13,760 --> 00:21:15,520
in the fcom hybrid model because the

567
00:21:15,520 --> 00:21:17,120
simulation can negatively affect

568
00:21:17,120 --> 00:21:18,640
complexity assumptions made inside the

569
00:21:18,640 --> 00:21:20,159
embassy protocol

570
00:21:20,159 --> 00:21:22,480
so the reusability of your z protocols

571
00:21:22,480 --> 00:21:24,159
is limited under

572
00:21:24,159 --> 00:21:25,840
notions that allow mpc in the plane

573
00:21:25,840 --> 00:21:28,158
model

574
00:21:28,320 --> 00:21:30,400
in order to prevent this drawbacks we

575
00:21:30,400 --> 00:21:32,400
use timed assumptions in addition to

576
00:21:32,400 --> 00:21:34,480
polynomial polynomial time hardness

577
00:21:34,480 --> 00:21:36,640
assumptions these timed assumptions can

578
00:21:36,640 --> 00:21:38,320
be broken by a simulator in polynomial

579
00:21:38,320 --> 00:21:39,360
time

580
00:21:39,360 --> 00:21:40,720
as the environment also runs in

581
00:21:40,720 --> 00:21:42,720
polynomial time we can only hope for a

582
00:21:42,720 --> 00:21:44,960
temporary advantage for the simulator in

583
00:21:44,960 --> 00:21:47,200
such a setting

584
00:21:47,200 --> 00:21:49,360
to give you an idea we will use timed

585
00:21:49,360 --> 00:21:51,200
commitments that are extractable for the

586
00:21:51,200 --> 00:21:52,960
simulator at a time and they are still

587
00:21:52,960 --> 00:21:54,559
hiding for the environment

588
00:21:54,559 --> 00:21:56,080
the small advantage is sufficient to

589
00:21:56,080 --> 00:21:56,840
achieve

590
00:21:56,840 --> 00:21:58,960
composibility later on the environment

591
00:21:58,960 --> 00:22:00,880
will also be able to extract such time

592
00:22:00,880 --> 00:22:02,640
commitments

593
00:22:02,640 --> 00:22:04,240
the environment having the same power as

594
00:22:04,240 --> 00:22:05,760
the simulator doesn't have its previous

595
00:22:05,760 --> 00:22:07,360
solutions and has to be account for the

596
00:22:07,360 --> 00:22:08,960
protocol design by transforming a

597
00:22:08,960 --> 00:22:10,640
short-term trapdoor into a long-time

598
00:22:10,640 --> 00:22:13,360
trapdoor

599
00:22:13,360 --> 00:22:14,880
polynomial time simulation doesn't

600
00:22:14,880 --> 00:22:16,159
affect polynomial time hardness

601
00:22:16,159 --> 00:22:18,240
assumptions anymore this leads to full

602
00:22:18,240 --> 00:22:20,080
environmental friendliness currently has

603
00:22:20,080 --> 00:22:21,919
previously started protocols and to use

604
00:22:21,919 --> 00:22:23,520
irreusability

605
00:22:23,520 --> 00:22:25,200
unfortunately we do not achieve full

606
00:22:25,200 --> 00:22:27,840
composibility

607
00:22:28,559 --> 00:22:30,159
by using timed assumptions in addition

608
00:22:30,159 --> 00:22:32,080
to polynomial time hardness assumptions

609
00:22:32,080 --> 00:22:33,600
you can achieve composite embassy in the

610
00:22:33,600 --> 00:22:35,200
plane model with properties that go

611
00:22:35,200 --> 00:22:36,960
beyond the state of the art

612
00:22:36,960 --> 00:22:38,320
our first result is a compositional

613
00:22:38,320 --> 00:22:40,400
commitment scheme in the play model it's

614
00:22:40,400 --> 00:22:42,320
fully environmentally friendly constant

615
00:22:42,320 --> 00:22:43,919
round makes black boxes towards building

616
00:22:43,919 --> 00:22:45,919
blocks only and can be constructed from

617
00:22:45,919 --> 00:22:47,280
standard and center times hardness

618
00:22:47,280 --> 00:22:48,320
assumptions

619
00:22:48,320 --> 00:22:51,600
also the simulation is uniform

620
00:22:51,600 --> 00:22:53,200
within this commitment scheme we

621
00:22:53,200 --> 00:22:54,880
construct a composable general embassy

622
00:22:54,880 --> 00:22:56,320
protocol in the plane model with the

623
00:22:56,320 --> 00:22:58,159
same properties

624
00:22:58,159 --> 00:23:00,080
and by using time targets assumptions we

625
00:23:00,080 --> 00:23:01,039
are the first to achieve these

626
00:23:01,039 --> 00:23:04,080
properties in the plane model

627
00:23:04,080 --> 00:23:05,520
last but not least we also propose

628
00:23:05,520 --> 00:23:07,520
variant of uc security to analyze the

629
00:23:07,520 --> 00:23:09,520
security of all constructions this

630
00:23:09,520 --> 00:23:11,120
notion is called t-lock it's a short for

631
00:23:11,120 --> 00:23:12,400
time lock you see

632
00:23:12,400 --> 00:23:14,559
in contrast to uc security this allows

633
00:23:14,559 --> 00:23:15,840
the use of time parameters like time

634
00:23:15,840 --> 00:23:17,360
commitment schemes

635
00:23:17,360 --> 00:23:18,960
as t-lock is mathematically a special

636
00:23:18,960 --> 00:23:21,200
case of uc security no changes to the

637
00:23:21,200 --> 00:23:22,640
framework are required

638
00:23:22,640 --> 00:23:24,240
t-lock security is fully environmentally

639
00:23:24,240 --> 00:23:26,480
friendly fully use compatible features

640
00:23:26,480 --> 00:23:28,559
for user usability and the single

641
00:23:28,559 --> 00:23:31,039
instance combination theorem

642
00:23:31,039 --> 00:23:33,120
this concludes my talk and thanks for

643
00:23:33,120 --> 00:23:36,199
your attention

644
00:23:42,310 --> 00:23:46,149
[Music]

645
00:23:48,960 --> 00:23:51,200
so maybe a quick question is that or

646
00:23:51,200 --> 00:23:52,559
you can miss the first part of the talk

647
00:23:52,559 --> 00:23:54,080
but what's the purpose of using just

648
00:23:54,080 --> 00:23:56,159
relying on timed assumptions here

649
00:23:56,159 --> 00:23:59,039
can you sort of uh repeat the question

650
00:23:59,039 --> 00:24:00,880
so what's the purpose of just relying on

651
00:24:00,880 --> 00:24:02,480
time assumptions here it's like is the

652
00:24:02,480 --> 00:24:04,640
notion time that i mean because time

653
00:24:04,640 --> 00:24:06,159
assumptions are only known from us very

654
00:24:06,159 --> 00:24:07,919
specific set of computational hardness

655
00:24:07,919 --> 00:24:09,520
assumptions right

656
00:24:09,520 --> 00:24:10,880
um i'm just trying to understand whether

657
00:24:10,880 --> 00:24:12,400
it's like the notion of time assumptions

658
00:24:12,400 --> 00:24:15,120
is necessary to try to rely on other

659
00:24:15,120 --> 00:24:17,520
more general functions um

660
00:24:17,520 --> 00:24:18,880
the use of timeless samples is very

661
00:24:18,880 --> 00:24:20,480
crucial here so we have seen that

662
00:24:20,480 --> 00:24:22,640
disadvantages of previous results for

663
00:24:22,640 --> 00:24:24,080
compostable mpc

664
00:24:24,080 --> 00:24:26,240
are because the simulator runs in super

665
00:24:26,240 --> 00:24:27,760
polynomial

666
00:24:27,760 --> 00:24:30,400
time so to say and this can affect the

667
00:24:30,400 --> 00:24:32,400
security of other protocols but when

668
00:24:32,400 --> 00:24:35,520
using timed assumptions we can have a

669
00:24:35,520 --> 00:24:37,679
polynomial time simulation and we cannot

670
00:24:37,679 --> 00:24:40,400
achieve this using a polynomial time

671
00:24:40,400 --> 00:24:42,400
hardness assumptions so we have to use

672
00:24:42,400 --> 00:24:44,640
something new like a timed commitment

673
00:24:44,640 --> 00:24:47,679
scheme so this is crucial the reliance

674
00:24:47,679 --> 00:24:49,440
on timed assumptions which can be broken

675
00:24:49,440 --> 00:24:51,679
in polynomial time

676
00:24:51,679 --> 00:24:52,799
so basically to get around the

677
00:24:52,799 --> 00:24:55,360
complexity leveraging issue and actually

678
00:24:55,360 --> 00:24:56,559
you don't have to sort of uh break

679
00:24:56,559 --> 00:24:57,840
things into a moment and that's why you

680
00:24:57,840 --> 00:24:59,760
want to sort of rely on assumptions

681
00:24:59,760 --> 00:25:01,200
yes

682
00:25:01,200 --> 00:25:03,120
could there be any other could you sort

683
00:25:03,120 --> 00:25:04,799
of guess that maybe you could rely on

684
00:25:04,799 --> 00:25:06,080
some other sort of type of hardness

685
00:25:06,080 --> 00:25:07,440
because time thing is like one type of

686
00:25:07,440 --> 00:25:08,960
hardness maybe some other source of

687
00:25:08,960 --> 00:25:11,120
hardness like space risk constraints

688
00:25:11,120 --> 00:25:13,200
issues or some other type of hardness

689
00:25:13,200 --> 00:25:14,320
assumptions where you can sort of rely

690
00:25:14,320 --> 00:25:15,760
on some type of other because basically

691
00:25:15,760 --> 00:25:17,200
you're trying to rely on there should be

692
00:25:17,200 --> 00:25:18,320
a difference between what the adversary

693
00:25:18,320 --> 00:25:20,080
can do and what the reduction can do and

694
00:25:20,080 --> 00:25:22,159
that dichotomy can either be well not

695
00:25:22,159 --> 00:25:24,559
superconducting based or in their case

696
00:25:24,559 --> 00:25:26,159
timed assumptions maybe something else

697
00:25:26,159 --> 00:25:28,559
could be sort part of trying to get the

698
00:25:28,559 --> 00:25:31,120
same things uh yes i think this is very

699
00:25:31,120 --> 00:25:32,799
general approach and of course has been

700
00:25:32,799 --> 00:25:35,840
used for many years so you could

701
00:25:35,840 --> 00:25:37,760
of course explore space hardness

702
00:25:37,760 --> 00:25:39,360
assumptions or something

703
00:25:39,360 --> 00:25:41,600
like that whatever you want but i think

704
00:25:41,600 --> 00:25:43,279
timed assumptions have

705
00:25:43,279 --> 00:25:46,159
seen some use in practice for example in

706
00:25:46,159 --> 00:25:48,320
blockchain so there's at least some

707
00:25:48,320 --> 00:25:51,279
practical evidence like people are

708
00:25:51,279 --> 00:25:53,600
betting money on this literally

709
00:25:53,600 --> 00:25:55,600
but timed assumptions seem to work right

710
00:25:55,600 --> 00:25:59,120
now so i think they are interesting uh

711
00:25:59,120 --> 00:26:02,000
an interesting avenue to pursue and in

712
00:26:02,000 --> 00:26:04,400
our protocols what is nice property is

713
00:26:04,400 --> 00:26:06,080
even if those timed assumptions turn out

714
00:26:06,080 --> 00:26:08,320
to be wrong later after the protocol the

715
00:26:08,320 --> 00:26:09,440
security of our construction is

716
00:26:09,440 --> 00:26:11,440
unaffected so the time the sentence also

717
00:26:11,440 --> 00:26:12,880
need to hold

718
00:26:12,880 --> 00:26:14,640
during the particle execution during a

719
00:26:14,640 --> 00:26:16,159
very short

720
00:26:16,159 --> 00:26:18,640
time frame and later on they may break

721
00:26:18,640 --> 00:26:20,960
down and the protocol will remain secure

722
00:26:20,960 --> 00:26:23,120
as long as your standard polynomial

723
00:26:23,120 --> 00:26:25,120
hardness assumptions which you use later

724
00:26:25,120 --> 00:26:27,600
on the protocol remains secure

725
00:26:27,600 --> 00:26:29,200
okay that's very interesting thanks a

726
00:26:29,200 --> 00:26:30,320
lot gentlemen

727
00:26:30,320 --> 00:26:31,919
so if there are no further questions

728
00:26:31,919 --> 00:26:34,720
let's just move to the second or

729
00:26:34,720 --> 00:26:36,480
the next talk of the session

730
00:26:36,480 --> 00:26:38,480
yeah so

731
00:26:38,480 --> 00:26:40,640
um i think um martin is going to give

732
00:26:40,640 --> 00:26:42,480
the talk martin could you share your

733
00:26:42,480 --> 00:26:45,120
slides please

734
00:26:47,120 --> 00:26:49,600
jeremiah

735
00:26:51,679 --> 00:26:52,640
okay

736
00:26:52,640 --> 00:26:54,640
so the next stop is the mixture of the

737
00:26:54,640 --> 00:26:58,120
zone on community

738
00:27:06,640 --> 00:27:08,320
okay so the next thought is on

739
00:27:08,320 --> 00:27:10,240
communication efficient asynchronous npc

740
00:27:10,240 --> 00:27:12,159
with adaptive security

741
00:27:12,159 --> 00:27:14,640
the result is by annex chopard uh martin

742
00:27:14,640 --> 00:27:17,840
hurd and chen dalm and martin is going

743
00:27:17,840 --> 00:27:18,840
to give the

744
00:27:18,840 --> 00:27:22,559
book um hi everybody

745
00:27:22,559 --> 00:27:24,399
so also this is a multi-party

746
00:27:24,399 --> 00:27:26,559
computation we have the usual setting

747
00:27:26,559 --> 00:27:27,480
and

748
00:27:27,480 --> 00:27:30,880
participate parties are pairwise

749
00:27:30,880 --> 00:27:32,840
previously connected with communication

750
00:27:32,840 --> 00:27:35,120
channels and they want to evaluate some

751
00:27:35,120 --> 00:27:37,279
circuit each input is given by one of

752
00:27:37,279 --> 00:27:39,440
the parties and the outputs are given to

753
00:27:39,440 --> 00:27:42,000
the entitled parties

754
00:27:42,000 --> 00:27:44,000
now the setting we are interested in is

755
00:27:44,000 --> 00:27:46,000
the asynchronous setting which means

756
00:27:46,000 --> 00:27:48,960
that messages on the channels can be

757
00:27:48,960 --> 00:27:51,200
delayed arbitrarily the adversary can

758
00:27:51,200 --> 00:27:53,200
control that but you are interested in

759
00:27:53,200 --> 00:27:55,440
adaptive corruption which means that the

760
00:27:55,440 --> 00:27:57,520
adversary corrupts parties during the

761
00:27:57,520 --> 00:27:59,520
protocol executions

762
00:27:59,520 --> 00:28:02,080
and depending of course depending on on

763
00:28:02,080 --> 00:28:04,399
the information gathered so far and the

764
00:28:04,399 --> 00:28:06,320
security level we're going to achieve is

765
00:28:06,320 --> 00:28:08,559
computational security and in this

766
00:28:08,559 --> 00:28:10,159
setting asynchronous channels and

767
00:28:10,159 --> 00:28:11,840
adaptive products are actually just

768
00:28:11,840 --> 00:28:14,080
asynchronous channels the best possible

769
00:28:14,080 --> 00:28:15,919
corruption threshold is t smaller and

770
00:28:15,919 --> 00:28:18,000
over three

771
00:28:18,000 --> 00:28:19,760
so a lot of work has been done in the

772
00:28:19,760 --> 00:28:21,520
a-string chronosetting it all started

773
00:28:21,520 --> 00:28:24,960
with bernoclem arabian in 1994

774
00:28:24,960 --> 00:28:27,039
and lots of protocols have been

775
00:28:27,039 --> 00:28:28,960
published since then however many of

776
00:28:28,960 --> 00:28:30,640
these protocols only achieve static

777
00:28:30,640 --> 00:28:32,720
security whereas we are interested in

778
00:28:32,720 --> 00:28:35,279
adaptive security until you can see that

779
00:28:35,279 --> 00:28:37,760
in the adaptive setting the best uh

780
00:28:37,760 --> 00:28:40,080
achieved communication complexity so far

781
00:28:40,080 --> 00:28:42,720
is n to the four which means end to the

782
00:28:42,720 --> 00:28:44,559
four messages need to be communicated

783
00:28:44,559 --> 00:28:48,399
per multiplication in the circuit

784
00:28:49,120 --> 00:28:51,360
now so far adaptive security and

785
00:28:51,360 --> 00:28:53,200
information theoretic security was the

786
00:28:53,200 --> 00:28:55,279
same that is all the adaptively secure

787
00:28:55,279 --> 00:28:57,360
protocols actually achieve information

788
00:28:57,360 --> 00:29:00,240
theoretic security and the cryptographic

789
00:29:00,240 --> 00:29:03,279
protocols achieve static security and

790
00:29:03,279 --> 00:29:05,679
what we we ask the question whether we

791
00:29:05,679 --> 00:29:09,440
can do more efficient adaptive security

792
00:29:09,440 --> 00:29:11,679
potentially at the price of

793
00:29:11,679 --> 00:29:14,399
cryptographic security only

794
00:29:14,399 --> 00:29:16,880
our results are the following we provide

795
00:29:16,880 --> 00:29:19,200
two protocols the first protocol

796
00:29:19,200 --> 00:29:20,960
tolerates t smaller and over three

797
00:29:20,960 --> 00:29:23,120
corruptions which is optimal and it

798
00:29:23,120 --> 00:29:24,960
communicates n squared per

799
00:29:24,960 --> 00:29:26,960
multiplication this is the same

800
00:29:26,960 --> 00:29:29,039
communication complexity that was

801
00:29:29,039 --> 00:29:32,159
achieved so far in the static setting if

802
00:29:32,159 --> 00:29:34,960
we do not uh consider some automorphic

803
00:29:34,960 --> 00:29:36,480
encryption or fully homomorphic

804
00:29:36,480 --> 00:29:38,640
encryption and then we have a second

805
00:29:38,640 --> 00:29:40,480
protocol which achieves linear

806
00:29:40,480 --> 00:29:42,480
communication complexity

807
00:29:42,480 --> 00:29:44,960
of n per multiplication however this

808
00:29:44,960 --> 00:29:47,200
protocol has a slightly

809
00:29:47,200 --> 00:29:48,880
lower corruption threshold slightly

810
00:29:48,880 --> 00:29:50,720
below and over 3

811
00:29:50,720 --> 00:29:53,039
and it also has lots of assumptions it

812
00:29:53,039 --> 00:29:55,200
assumes securities non-interactive

813
00:29:55,200 --> 00:29:57,200
serial knowledge proofs and it also

814
00:29:57,200 --> 00:30:00,399
assumes atomics and atomic sent means

815
00:30:00,399 --> 00:30:02,880
that the party can send a message to all

816
00:30:02,880 --> 00:30:06,320
parties it wants at once atomically that

817
00:30:06,320 --> 00:30:09,120
is the party cannot be corrupted during

818
00:30:09,120 --> 00:30:11,039
sending the operation during the send

819
00:30:11,039 --> 00:30:12,960
operation it can be corrupted before or

820
00:30:12,960 --> 00:30:17,039
afterwards but not during the sending

821
00:30:17,120 --> 00:30:20,000
how does our protocol work well we

822
00:30:20,000 --> 00:30:22,399
follow the cdn approach which means that

823
00:30:22,399 --> 00:30:24,080
we assume a homomorphic threshold

824
00:30:24,080 --> 00:30:26,320
encryption scheme for example by a

825
00:30:26,320 --> 00:30:28,080
that's homomorphic only with respect to

826
00:30:28,080 --> 00:30:29,600
addition not with respect to

827
00:30:29,600 --> 00:30:31,760
multiplication and we assume that the

828
00:30:31,760 --> 00:30:32,640
secant

829
00:30:32,640 --> 00:30:35,120
key is shared among the parties

830
00:30:35,120 --> 00:30:36,799
and then we use beaver circuit

831
00:30:36,799 --> 00:30:39,279
randomization technique that is in a

832
00:30:39,279 --> 00:30:41,039
preparation phase we click bear

833
00:30:41,039 --> 00:30:44,080
multiplication triples abc where in our

834
00:30:44,080 --> 00:30:46,559
case as we work with encryptions a b and

835
00:30:46,559 --> 00:30:48,640
c will be encryptions and the plaintext

836
00:30:48,640 --> 00:30:51,440
of a and b multiplied to the plaintext

837
00:30:51,440 --> 00:30:53,279
of c

838
00:30:53,279 --> 00:30:55,279
now how do we do the preparation phase

839
00:30:55,279 --> 00:30:57,360
so in the first protocol we just follow

840
00:30:57,360 --> 00:31:00,159
the standard cdn approach meaning first

841
00:31:00,159 --> 00:31:03,120
each party contributes a value for a and

842
00:31:03,120 --> 00:31:04,960
then the sum of these values will be the

843
00:31:04,960 --> 00:31:07,120
relay and then the parties contribute

844
00:31:07,120 --> 00:31:09,679
values for b and for b and c and the sum

845
00:31:09,679 --> 00:31:11,919
of those values will be the actual b and

846
00:31:11,919 --> 00:31:14,640
c and in each step we do a course hit

847
00:31:14,640 --> 00:31:17,360
agreement that is we choose we choose a

848
00:31:17,360 --> 00:31:19,840
subset of the parties who actually uh

849
00:31:19,840 --> 00:31:21,840
correctly provided their contributions

850
00:31:21,840 --> 00:31:24,240
and we only considered those properties

851
00:31:24,240 --> 00:31:26,640
this protocol has complexity n squared

852
00:31:26,640 --> 00:31:29,039
by multiplication and then in order to

853
00:31:29,039 --> 00:31:32,000
bring this down to o of n we use secret

854
00:31:32,000 --> 00:31:33,840
committees the secret committee is kind

855
00:31:33,840 --> 00:31:38,000
of a setup assumption that means uh that

856
00:31:38,000 --> 00:31:40,159
a party knows that it is in the in a

857
00:31:40,159 --> 00:31:42,640
committee it also can prove so but other

858
00:31:42,640 --> 00:31:44,159
parties do not know who is in the

859
00:31:44,159 --> 00:31:46,480
committee and then only parties in the

860
00:31:46,480 --> 00:31:48,159
first respectively in the second

861
00:31:48,159 --> 00:31:50,399
committee would provide contributions

862
00:31:50,399 --> 00:31:53,279
for a respectively for bc

863
00:31:53,279 --> 00:31:55,440
and in the computation phase we used the

864
00:31:55,440 --> 00:31:57,679
multiplication track of uh the public

865
00:31:57,679 --> 00:31:59,360
reconstruction of dunkirk nielsen for

866
00:31:59,360 --> 00:32:01,039
the multiplication

867
00:32:01,039 --> 00:32:03,279
and now how do we achieve adaptive

868
00:32:03,279 --> 00:32:05,919
security so far i didn't talk at all

869
00:32:05,919 --> 00:32:07,919
about adaptive security in the

870
00:32:07,919 --> 00:32:10,159
preparation phase adaptive security is

871
00:32:10,159 --> 00:32:12,240
for free because we only have random

872
00:32:12,240 --> 00:32:15,200
triples the simulator will actually not

873
00:32:15,200 --> 00:32:17,519
cheat the simulator will execute the

874
00:32:17,519 --> 00:32:19,919
standard protocol so there is no issue

875
00:32:19,919 --> 00:32:22,000
with adaptive security

876
00:32:22,000 --> 00:32:24,159
in the computation phase we use the dm

877
00:32:24,159 --> 00:32:26,880
trig that is we assume there is a k

878
00:32:26,880 --> 00:32:28,399
which is an encryption of one in the

879
00:32:28,399 --> 00:32:30,720
real world and and an encryption of

880
00:32:30,720 --> 00:32:33,279
serial in the simulation and this makes

881
00:32:33,279 --> 00:32:35,200
that all the real encryptions in the

882
00:32:35,200 --> 00:32:38,880
simulation will be encryptions of zero

883
00:32:38,880 --> 00:32:41,760
now we need to talk about how to extract

884
00:32:41,760 --> 00:32:44,080
uh inputs from the corrupted parties we

885
00:32:44,080 --> 00:32:46,720
need to talk about how the simulator can

886
00:32:46,720 --> 00:32:48,799
adjust the output to whatever it needs

887
00:32:48,799 --> 00:32:50,480
to be but this

888
00:32:50,480 --> 00:32:54,960
is just standard technique from dno3

889
00:32:54,960 --> 00:32:57,360
so summarizing we have we provide two

890
00:32:57,360 --> 00:32:59,840
protocols in the paper the first one is

891
00:32:59,840 --> 00:33:02,320
n square complexity the second one with

892
00:33:02,320 --> 00:33:04,720
linear complexity where the second one

893
00:33:04,720 --> 00:33:07,039
has a little bit lower corruption

894
00:33:07,039 --> 00:33:09,440
threshold and has a bunch of assumptions

895
00:33:09,440 --> 00:33:11,279
and it's an open problem to achieve

896
00:33:11,279 --> 00:33:13,360
linear communication complexity in the

897
00:33:13,360 --> 00:33:15,039
asynchronous model with adaptive

898
00:33:15,039 --> 00:33:17,519
security in the standard model

899
00:33:17,519 --> 00:33:21,320
thank you for your attention

900
00:33:28,510 --> 00:33:33,600
[Music]

901
00:33:33,600 --> 00:33:35,919
is how can the secret committees be set

902
00:33:35,919 --> 00:33:38,919
up

903
00:33:39,120 --> 00:33:39,919
well

904
00:33:39,919 --> 00:33:42,559
the easiest way is just uh to assume

905
00:33:42,559 --> 00:33:44,799
this as a setup assumption we have set

906
00:33:44,799 --> 00:33:46,640
up anyway right we need a sharing of the

907
00:33:46,640 --> 00:33:48,240
secret key for the homomorphic

908
00:33:48,240 --> 00:33:50,480
encryption scheme so we we just assumed

909
00:33:50,480 --> 00:33:53,840
this as a setup

910
00:33:55,360 --> 00:33:56,720
are there any follow-up questions to

911
00:33:56,720 --> 00:33:59,120
that or is that uh

912
00:33:59,120 --> 00:34:01,440
that answers the questions okay

913
00:34:01,440 --> 00:34:03,519
so one just to understand what do you

914
00:34:03,519 --> 00:34:04,799
think is the uh

915
00:34:04,799 --> 00:34:06,480
what tricks do you need to sort of get

916
00:34:06,480 --> 00:34:08,480
to this open question

917
00:34:08,480 --> 00:34:09,918
uh what are the barriers to sort of this

918
00:34:09,918 --> 00:34:13,599
quadratic blow up with respect to n

919
00:34:13,599 --> 00:34:15,918
how to bring it down well

920
00:34:15,918 --> 00:34:17,760
i mean what do you feel it's like maybe

921
00:34:17,760 --> 00:34:19,040
it's like this is these are the tricks

922
00:34:19,040 --> 00:34:20,399
that one might need to come up with

923
00:34:20,399 --> 00:34:22,560
what's the value

924
00:34:22,560 --> 00:34:25,759
what is i mean

925
00:34:26,719 --> 00:34:29,440
the computation stage we have is linear

926
00:34:29,440 --> 00:34:30,800
time right it's only about the

927
00:34:30,800 --> 00:34:32,800
preparation what we need in the

928
00:34:32,800 --> 00:34:34,960
preparation phase is that the party can

929
00:34:34,960 --> 00:34:37,760
kind of provide the b and c together

930
00:34:37,760 --> 00:34:39,918
with the proofs and

931
00:34:39,918 --> 00:34:41,440
if you just do this

932
00:34:41,440 --> 00:34:44,320
naturally i mean one one could amortize

933
00:34:44,320 --> 00:34:45,918
there this this would be the standard

934
00:34:45,918 --> 00:34:47,440
approach that people in the swim kind of

935
00:34:47,440 --> 00:34:49,599
setting are doing but if you want to

936
00:34:49,599 --> 00:34:51,440
amortize in the asynchronous setting the

937
00:34:51,440 --> 00:34:53,440
problem is that you will have to uh try

938
00:34:53,440 --> 00:34:55,839
two corset agreements in a row which

939
00:34:55,839 --> 00:34:57,599
means in the first crosshit agreement

940
00:34:57,599 --> 00:34:59,440
you go to a subset of n minus three

941
00:34:59,440 --> 00:35:01,680
parties but then you need a second

942
00:35:01,680 --> 00:35:03,599
concept agreement where you have only n

943
00:35:03,599 --> 00:35:05,680
minus two t parties and in the worst

944
00:35:05,680 --> 00:35:08,400
case this n minus two t parties only con

945
00:35:08,400 --> 00:35:10,880
uh contains one honest party and then we

946
00:35:10,880 --> 00:35:12,640
lose amortization

947
00:35:12,640 --> 00:35:14,800
so it might be that for

948
00:35:14,800 --> 00:35:16,800
slower threshold but probably not

949
00:35:16,800 --> 00:35:18,880
negligibly close to hanover street but

950
00:35:18,880 --> 00:35:20,960
the victoria way one could do linear

951
00:35:20,960 --> 00:35:22,320
complexity

952
00:35:22,320 --> 00:35:23,839
we tried

953
00:35:23,839 --> 00:35:26,079
several attempts but

954
00:35:26,079 --> 00:35:28,240
i mean as you can see we could not

955
00:35:28,240 --> 00:35:31,680
achieve without the committee trick

956
00:35:31,680 --> 00:35:33,920
and maybe like uh this might be a stupid

957
00:35:33,920 --> 00:35:35,599
question but can you advertise against

958
00:35:35,599 --> 00:35:37,760
different runs of the protocol can you

959
00:35:37,760 --> 00:35:40,320
sort of just reuse this uh this sense of

960
00:35:40,320 --> 00:35:41,920
preparation phase right can you sort of

961
00:35:41,920 --> 00:35:43,440
make sure that for different runs of the

962
00:35:43,440 --> 00:35:45,200
protocol you can analyze uh you don't

963
00:35:45,200 --> 00:35:47,359
have to just do the preparation once for

964
00:35:47,359 --> 00:35:50,240
multiple different runs

965
00:35:50,400 --> 00:35:52,800
sorry can you repeat the question so uh

966
00:35:52,800 --> 00:35:55,119
i'm just trying to understand so it's in

967
00:35:55,119 --> 00:35:56,400
the preparation phase that you have to

968
00:35:56,400 --> 00:35:57,839
sort of have this

969
00:35:57,839 --> 00:35:59,520
lower priority can this be reused across

970
00:35:59,520 --> 00:36:02,960
different runs of the protocol

971
00:36:06,000 --> 00:36:07,920
we have to in the preparation phase in

972
00:36:07,920 --> 00:36:10,000
our case it's just

973
00:36:10,000 --> 00:36:12,320
once you produce as many triplets as you

974
00:36:12,320 --> 00:36:15,200
need right it's it's it's just once

975
00:36:15,200 --> 00:36:17,280
you cannot reuse but the preparation

976
00:36:17,280 --> 00:36:19,440
phase actually it's it's not it's not in

977
00:36:19,440 --> 00:36:21,200
blocks we don't have segmentation or

978
00:36:21,200 --> 00:36:23,680
something like that it's not needed in

979
00:36:23,680 --> 00:36:26,480
in this case here

980
00:36:26,480 --> 00:36:28,160
i mean in the synchronous setting when

981
00:36:28,160 --> 00:36:31,040
you look at protocols like dh08 or or

982
00:36:31,040 --> 00:36:33,599
these linear time protocols usually they

983
00:36:33,599 --> 00:36:36,560
would work they would work in blocks and

984
00:36:36,560 --> 00:36:38,560
then they do player elimination dispute

985
00:36:38,560 --> 00:36:41,440
control whatever and then in each block

986
00:36:41,440 --> 00:36:44,160
they have potentially less corruptions

987
00:36:44,160 --> 00:36:46,560
so a block succeeds either or if it

988
00:36:46,560 --> 00:36:48,400
fails then next time we have less

989
00:36:48,400 --> 00:36:50,560
corruptions and things like that we did

990
00:36:50,560 --> 00:36:52,160
not achieve to make it work in the

991
00:36:52,160 --> 00:36:54,480
asynchronous setting

992
00:36:54,480 --> 00:36:56,720
okay yeah thanks a lot

993
00:36:56,720 --> 00:37:00,240
so thanks for the great talk

994
00:37:03,040 --> 00:37:05,839
so i think next stop is also online and

995
00:37:05,839 --> 00:37:09,839
uh can you share your sites please

996
00:37:34,720 --> 00:37:36,320
on efficient perfectly secure

997
00:37:36,320 --> 00:37:38,720
computation with optimal resistance and

998
00:37:38,720 --> 00:37:41,200
this is a joint work between uh

999
00:37:41,200 --> 00:37:42,720
abraham

1000
00:37:42,720 --> 00:37:43,920
and abhishe

1001
00:37:43,920 --> 00:37:46,640
and gilad is going to give the talk

1002
00:37:46,640 --> 00:37:48,720
thank you so um i'm going to talk about

1003
00:37:48,720 --> 00:37:50,320
efficient perfectly secure computation

1004
00:37:50,320 --> 00:37:52,240
with optimal resilience

1005
00:37:52,240 --> 00:37:53,920
uh i'm gillard ashraf from babylon

1006
00:37:53,920 --> 00:37:55,680
university and this is a joint work with

1007
00:37:55,680 --> 00:37:58,160
italia brown and abhishayana

1008
00:37:58,160 --> 00:38:00,240
so uh in the setting of secure community

1009
00:38:00,240 --> 00:38:02,400
party communication we have some set of

1010
00:38:02,400 --> 00:38:05,200
parties which has some private inputs

1011
00:38:05,200 --> 00:38:07,119
and the parties want to compute some

1012
00:38:07,119 --> 00:38:08,960
joint function of their inputs while

1013
00:38:08,960 --> 00:38:11,520
preserving some security properties

1014
00:38:11,520 --> 00:38:14,240
such as privacy correctness and so on

1015
00:38:14,240 --> 00:38:16,079
um

1016
00:38:16,079 --> 00:38:18,640
we know that any function can be secure

1017
00:38:18,640 --> 00:38:20,640
securely computed and one of the similar

1018
00:38:20,640 --> 00:38:22,800
results in secure computation

1019
00:38:22,800 --> 00:38:27,200
is that of bgw from 88 which shows that

1020
00:38:27,200 --> 00:38:29,920
in the perfect settings

1021
00:38:29,920 --> 00:38:32,480
semi honest is possible with perfect

1022
00:38:32,480 --> 00:38:34,640
security assuming that at most half of

1023
00:38:34,640 --> 00:38:36,400
the parties are corrupted

1024
00:38:36,400 --> 00:38:38,720
and in the malicious settings we need at

1025
00:38:38,720 --> 00:38:41,920
most one third of the parties on crop

1026
00:38:41,920 --> 00:38:44,160
what is the communication

1027
00:38:44,160 --> 00:38:46,000
um

1028
00:38:46,000 --> 00:38:48,160
both of the results are tight and and

1029
00:38:48,160 --> 00:38:50,079
perfect security means also that that

1030
00:38:50,079 --> 00:38:53,119
vessel can be computationally unbounded

1031
00:38:53,119 --> 00:38:54,560
and protocols and descendings are

1032
00:38:54,560 --> 00:38:56,240
usually also adaptively secure and

1033
00:38:56,240 --> 00:38:57,599
secure under

1034
00:38:57,599 --> 00:38:59,839
concurrent compressions once they

1035
00:38:59,839 --> 00:39:03,119
satisfy some natural requirements

1036
00:39:03,119 --> 00:39:04,640
what's the communication complexity of

1037
00:39:04,640 --> 00:39:07,680
the protocol so if you want to compute a

1038
00:39:07,680 --> 00:39:10,400
function f we first describe it as an

1039
00:39:10,400 --> 00:39:12,320
arithmetic circuit c

1040
00:39:12,320 --> 00:39:15,520
and then uh the semi-honest case we have

1041
00:39:15,520 --> 00:39:17,520
to pay uh the total communication

1042
00:39:17,520 --> 00:39:19,680
complexity of the

1043
00:39:19,680 --> 00:39:22,400
the old channels the n squared time

1044
00:39:22,400 --> 00:39:24,480
uh the size of the circuit in the

1045
00:39:24,480 --> 00:39:25,920
militia's case

1046
00:39:25,920 --> 00:39:28,240
it entered the form in the optimistic

1047
00:39:28,240 --> 00:39:30,240
case and then to the sixth uh time of

1048
00:39:30,240 --> 00:39:32,960
the focus in the pessimistic case and we

1049
00:39:32,960 --> 00:39:35,599
have two cases because adversary can

1050
00:39:35,599 --> 00:39:38,240
slow down the protocol but cannot um

1051
00:39:38,240 --> 00:39:41,040
harm security so optimal is when it

1052
00:39:41,040 --> 00:39:42,720
doesn't slow down the protocol and

1053
00:39:42,720 --> 00:39:44,079
pessimistic

1054
00:39:44,079 --> 00:39:46,640
optimistic has mentalism slow down and

1055
00:39:46,640 --> 00:39:48,800
pessimistic is in the case it does

1056
00:39:48,800 --> 00:39:50,960
succeed to slow down the protocol

1057
00:39:50,960 --> 00:39:54,480
our result so we show how to improve uh

1058
00:39:54,480 --> 00:39:56,800
the malicious uh cakes

1059
00:39:56,800 --> 00:39:58,720
and we reduce the communication

1060
00:39:58,720 --> 00:40:01,280
complexity to enter the three times this

1061
00:40:01,280 --> 00:40:03,680
has on the salgado optimistic case and

1062
00:40:03,680 --> 00:40:05,359
enter the form time seeing the

1063
00:40:05,359 --> 00:40:06,640
pessimistic

1064
00:40:06,640 --> 00:40:08,560
so we improve both the optimistic

1065
00:40:08,560 --> 00:40:11,839
emphasis semester case

1066
00:40:12,000 --> 00:40:14,800
if we want to look at another view of

1067
00:40:14,800 --> 00:40:17,119
our improvement is as follows so in the

1068
00:40:17,119 --> 00:40:19,520
bgw semi honest

1069
00:40:19,520 --> 00:40:22,000
the number of secrets people that the

1070
00:40:22,000 --> 00:40:25,359
parties have a shell

1071
00:40:25,359 --> 00:40:28,240
is n pair each multiplication

1072
00:40:28,240 --> 00:40:30,640
so in total we have n times the

1073
00:40:30,640 --> 00:40:32,960
communication complexity of secret of

1074
00:40:32,960 --> 00:40:34,480
the sql sharing

1075
00:40:34,480 --> 00:40:36,000
per multiplication

1076
00:40:36,000 --> 00:40:38,720
in the malicious case we have n square

1077
00:40:38,720 --> 00:40:40,880
times the communication complexity of a

1078
00:40:40,880 --> 00:40:42,480
stronger signal sharing scheme of

1079
00:40:42,480 --> 00:40:44,880
verifiable signature when the dealer can

1080
00:40:44,880 --> 00:40:46,800
be malicious and partisans can be

1081
00:40:46,800 --> 00:40:48,079
malicious

1082
00:40:48,079 --> 00:40:50,240
uh in our case

1083
00:40:50,240 --> 00:40:53,280
in our results we show our to improve

1084
00:40:53,280 --> 00:40:55,920
and the number of secrets

1085
00:40:55,920 --> 00:40:58,000
or values that we have the secret shell

1086
00:40:58,000 --> 00:41:00,640
during the malicious case goes down to n

1087
00:41:00,640 --> 00:41:04,000
to linear till each multiplication

1088
00:41:04,000 --> 00:41:06,319
we also have some bonus and this is an

1089
00:41:06,319 --> 00:41:08,960
interesting part of the paper so we show

1090
00:41:08,960 --> 00:41:10,640
that um

1091
00:41:10,640 --> 00:41:14,000
if we have a circuit g that has n inputs

1092
00:41:14,000 --> 00:41:16,720
and m outputs outputs of multiplication

1093
00:41:16,720 --> 00:41:18,160
depth one

1094
00:41:18,160 --> 00:41:19,920
uh in other words we have some

1095
00:41:19,920 --> 00:41:22,319
polynomial of degree two

1096
00:41:22,319 --> 00:41:24,400
i want you to think about g as very

1097
00:41:24,400 --> 00:41:28,079
large why l and m are relatively small

1098
00:41:28,079 --> 00:41:30,319
uh to compute such a circuit vgw

1099
00:41:30,319 --> 00:41:32,880
requires the amount of vss that is

1100
00:41:32,880 --> 00:41:36,079
proportional to the size of the input

1101
00:41:36,079 --> 00:41:38,560
plus the number of multiplications in

1102
00:41:38,560 --> 00:41:40,319
the cell kg

1103
00:41:40,319 --> 00:41:44,160
we show our um a way to do it the way to

1104
00:41:44,160 --> 00:41:46,480
compute it product equal achieves

1105
00:41:46,480 --> 00:41:48,560
just the amount of vss that is

1106
00:41:48,560 --> 00:41:50,319
proportional to the

1107
00:41:50,319 --> 00:41:52,640
size of the input and size of the output

1108
00:41:52,640 --> 00:41:54,160
and is independent of number of

1109
00:41:54,160 --> 00:41:56,480
multiplications in g

1110
00:41:56,480 --> 00:41:59,040
uh another this means in particular the

1111
00:41:59,040 --> 00:42:02,000
communication complexity is sublinear in

1112
00:42:02,000 --> 00:42:04,240
the circuit size

1113
00:42:04,240 --> 00:42:06,480
the the technique for that is somewhat

1114
00:42:06,480 --> 00:42:09,440
similar to the r1cs in zero knowledge

1115
00:42:09,440 --> 00:42:11,119
and for the best of our knowledge this

1116
00:42:11,119 --> 00:42:14,000
is the first time that uh this happens

1117
00:42:14,000 --> 00:42:16,720
in the perfect security setting

1118
00:42:16,720 --> 00:42:19,440
as an example this is useful

1119
00:42:19,440 --> 00:42:21,520
look at consider the task of matrix

1120
00:42:21,520 --> 00:42:22,880
multiplication

1121
00:42:22,880 --> 00:42:24,640
so this is a task where

1122
00:42:24,640 --> 00:42:26,880
let's say i have some matrix a you have

1123
00:42:26,880 --> 00:42:29,359
some matrix b and we want to compute the

1124
00:42:29,359 --> 00:42:32,560
multiplication of on the two matrices

1125
00:42:32,560 --> 00:42:35,440
so if we implement this circuit at least

1126
00:42:35,440 --> 00:42:36,880
naively

1127
00:42:36,880 --> 00:42:39,520
um the size of the input is m squared

1128
00:42:39,520 --> 00:42:41,520
for both of us also the size of the

1129
00:42:41,520 --> 00:42:42,560
output

1130
00:42:42,560 --> 00:42:45,359
but the circuit itself requires m to the

1131
00:42:45,359 --> 00:42:46,240
three

1132
00:42:46,240 --> 00:42:48,560
and q multiplications

1133
00:42:48,560 --> 00:42:50,240
um

1134
00:42:50,240 --> 00:42:53,440
so bgw will require n squared times m

1135
00:42:53,440 --> 00:42:56,000
cube the communication complexity of the

1136
00:42:56,000 --> 00:42:59,920
ss while our protocol is just n times m

1137
00:42:59,920 --> 00:43:02,160
square so we both improve n

1138
00:43:02,160 --> 00:43:04,480
and this will work for any circuit

1139
00:43:04,480 --> 00:43:06,800
and for some circuits we can apply this

1140
00:43:06,800 --> 00:43:08,880
technique where when the circuits are

1141
00:43:08,880 --> 00:43:10,240
wide enough

1142
00:43:10,240 --> 00:43:12,319
where we can actually also be uh

1143
00:43:12,319 --> 00:43:13,920
independent of the number of

1144
00:43:13,920 --> 00:43:16,480
multiplications and just look at the

1145
00:43:16,480 --> 00:43:19,200
number of wires that we have

1146
00:43:19,200 --> 00:43:22,160
some related work so selling is the case

1147
00:43:22,160 --> 00:43:24,079
of constant run per multiplication with

1148
00:43:24,079 --> 00:43:26,640
perfect security malicious security and

1149
00:43:26,640 --> 00:43:28,560
optimal resilience

1150
00:43:28,560 --> 00:43:30,480
optimal resilience we mean

1151
00:43:30,480 --> 00:43:33,040
in the number of corrupted parties in

1152
00:43:33,040 --> 00:43:34,240
number three

1153
00:43:34,240 --> 00:43:36,319
in that case we achieve this

1154
00:43:36,319 --> 00:43:38,240
communication complexity and to the

1155
00:43:38,240 --> 00:43:40,160
three optimistic and to develop

1156
00:43:40,160 --> 00:43:41,760
pessimistic

1157
00:43:41,760 --> 00:43:45,280
and the one complexity is the depth of

1158
00:43:45,280 --> 00:43:47,760
the circuit

1159
00:43:47,760 --> 00:43:49,440
there are more efficient protocols if

1160
00:43:49,440 --> 00:43:50,560
you look just the communication

1161
00:43:50,560 --> 00:43:52,160
complexity

1162
00:43:52,160 --> 00:43:56,000
but those are the protocols that are uh

1163
00:43:56,000 --> 00:43:58,240
based on the player elimination

1164
00:43:58,240 --> 00:44:00,319
they come up with a prize

1165
00:44:00,319 --> 00:44:03,280
where uh now the round complexity

1166
00:44:03,280 --> 00:44:06,000
is also depends on the number of parties

1167
00:44:06,000 --> 00:44:09,440
which essentially means that um

1168
00:44:09,440 --> 00:44:11,359
for large circuits

1169
00:44:11,359 --> 00:44:13,440
large depth circuits

1170
00:44:13,440 --> 00:44:16,400
uh this can be a bit pricey

1171
00:44:16,400 --> 00:44:18,560
moreover uh for circuits with

1172
00:44:18,560 --> 00:44:20,880
multiplication depth one which is the

1173
00:44:20,880 --> 00:44:23,760
task which we are focused on

1174
00:44:23,760 --> 00:44:25,359
uh we can obtain communication

1175
00:44:25,359 --> 00:44:27,920
complexity that depends only on the size

1176
00:44:27,920 --> 00:44:30,240
of the input and output and is

1177
00:44:30,240 --> 00:44:31,680
independent of the number of

1178
00:44:31,680 --> 00:44:34,079
multiplications and it is unclear if we

1179
00:44:34,079 --> 00:44:37,520
can act on those techniques uh

1180
00:44:37,520 --> 00:44:40,480
those to this line of protocols

1181
00:44:40,480 --> 00:44:43,520
uh so formally i would say if you have

1182
00:44:43,520 --> 00:44:46,560
this kind of cell kit

1183
00:44:46,560 --> 00:44:48,720
our protocol can be

1184
00:44:48,720 --> 00:44:51,200
more efficient if you have large depth

1185
00:44:51,200 --> 00:44:52,720
circuit then there's no question that

1186
00:44:52,720 --> 00:44:55,119
you need to go on this

1187
00:44:55,119 --> 00:44:57,359
on this line of protocols

1188
00:44:57,359 --> 00:44:58,640
and that's it

1189
00:44:58,640 --> 00:45:02,359
for this talk thanks

1190
00:45:11,440 --> 00:45:14,440
um

1191
00:45:18,079 --> 00:45:20,319
just a quick question do you think uh

1192
00:45:20,319 --> 00:45:22,480
is there a way to combine

1193
00:45:22,480 --> 00:45:24,880
your protocol and these other protocols

1194
00:45:24,880 --> 00:45:26,560
which has the highest long complexity

1195
00:45:26,560 --> 00:45:28,960
just get it get the best of both worlds

1196
00:45:28,960 --> 00:45:31,440
i i believe you can you can do things

1197
00:45:31,440 --> 00:45:33,440
that um

1198
00:45:33,440 --> 00:45:36,079
when you get like a large depth

1199
00:45:36,079 --> 00:45:38,160
um

1200
00:45:38,160 --> 00:45:39,680
you will use the player elimination

1201
00:45:39,680 --> 00:45:42,720
technique um

1202
00:45:42,720 --> 00:45:44,560
is it as simple as sort of just a black

1203
00:45:44,560 --> 00:45:46,240
box combination of the protocol so it's

1204
00:45:46,240 --> 00:45:48,880
like you have to know

1205
00:45:48,880 --> 00:45:50,880
no this is uh

1206
00:45:50,880 --> 00:45:52,800
it should be a future walk i mean it

1207
00:45:52,800 --> 00:45:55,359
could be if you actually walk off yeah

1208
00:45:55,359 --> 00:45:57,440
to work on the details and

1209
00:45:57,440 --> 00:46:00,960
there should be some kind of a shell

1210
00:46:07,450 --> 00:46:09,680
[Music]

1211
00:46:09,680 --> 00:46:12,880
so any further questions

1212
00:46:12,880 --> 00:46:15,760
now let's start the speaker again

1213
00:46:15,760 --> 00:46:18,160
thank you

1214
00:46:18,720 --> 00:46:23,480
the next thought is in person talk again

1215
00:46:23,890 --> 00:46:27,069
[Music]

1216
00:47:03,599 --> 00:47:04,960
so

1217
00:47:04,960 --> 00:47:07,680
sixth talk of this session is uh

1218
00:47:07,680 --> 00:47:10,160
on the topic of communication models and

1219
00:47:10,160 --> 00:47:12,480
best achievable security into around nbc

1220
00:47:12,480 --> 00:47:14,319
the talk is the paper is by arushi

1221
00:47:14,319 --> 00:47:16,560
kuwait

1222
00:47:17,040 --> 00:47:18,160
and rajeev

1223
00:47:18,160 --> 00:47:22,200
and how is the talk

1224
00:47:24,880 --> 00:47:26,960
uh thanks for the introduction uh hi

1225
00:47:26,960 --> 00:47:29,599
again um so this is joint work with

1226
00:47:29,599 --> 00:47:30,250
abhishek

1227
00:47:30,250 --> 00:47:31,359
[Music]

1228
00:47:31,359 --> 00:47:32,030
and rajeev

1229
00:47:32,030 --> 00:47:33,599
[Music]

1230
00:47:33,599 --> 00:47:36,079
um so the two main communication models

1231
00:47:36,079 --> 00:47:37,920
that are used in the design most

1232
00:47:37,920 --> 00:47:40,160
interactive broadcasts

1233
00:47:40,160 --> 00:47:43,040
are broadcast

1234
00:47:43,040 --> 00:47:45,520
uh our is a broadcast channel that

1235
00:47:45,520 --> 00:47:47,119
allows the sender to send the same

1236
00:47:47,119 --> 00:47:49,359
message to multiple parties and

1237
00:47:49,359 --> 00:47:51,040
point-to-point channels that allow

1238
00:47:51,040 --> 00:47:53,040
parties to exchange private messages

1239
00:47:53,040 --> 00:47:55,119
with each other

1240
00:47:55,119 --> 00:47:56,880
these communication models play a

1241
00:47:56,880 --> 00:47:59,040
fundamental role in helping decide what

1242
00:47:59,040 --> 00:48:02,000
kind of security is achievable and what

1243
00:48:02,000 --> 00:48:03,599
assumptions are needed to achieve those

1244
00:48:03,599 --> 00:48:06,079
securities

1245
00:48:06,079 --> 00:48:08,559
in the setting we explore the role of

1246
00:48:08,559 --> 00:48:10,160
these communication models in the

1247
00:48:10,160 --> 00:48:12,000
two-round episode setting

1248
00:48:12,000 --> 00:48:14,240
two rounds are considered minimal

1249
00:48:14,240 --> 00:48:16,319
for npc since one round is known to be

1250
00:48:16,319 --> 00:48:17,599
impossible

1251
00:48:17,599 --> 00:48:19,440
and in the two-round setting

1252
00:48:19,440 --> 00:48:21,040
a lot of recent works have made

1253
00:48:21,040 --> 00:48:23,359
significant advancements in particular

1254
00:48:23,359 --> 00:48:24,640
these works

1255
00:48:24,640 --> 00:48:26,400
establish feasibility of general

1256
00:48:26,400 --> 00:48:28,720
computation in two rounds

1257
00:48:28,720 --> 00:48:30,720
while relying essentially on minimal

1258
00:48:30,720 --> 00:48:32,640
assumptions

1259
00:48:32,640 --> 00:48:34,160
in particular the question that we

1260
00:48:34,160 --> 00:48:36,319
consider is the following so in two

1261
00:48:36,319 --> 00:48:38,720
round npc in the honest majority setting

1262
00:48:38,720 --> 00:48:40,559
where the adversary is only allowed to

1263
00:48:40,559 --> 00:48:42,960
corrupt the minority of the parties

1264
00:48:42,960 --> 00:48:46,480
what security notions are achievable

1265
00:48:46,480 --> 00:48:48,559
in the different communication models

1266
00:48:48,559 --> 00:48:50,960
and what assumptions are needed uh for

1267
00:48:50,960 --> 00:48:52,960
achieving them

1268
00:48:52,960 --> 00:48:54,880
in this work we primarily focus on the

1269
00:48:54,880 --> 00:48:57,119
plane model that is without any trusted

1270
00:48:57,119 --> 00:48:59,680
setup but sometimes we're going to open

1271
00:48:59,680 --> 00:49:01,599
this plane model with an untrusted

1272
00:49:01,599 --> 00:49:03,440
public key infrastructure also known as

1273
00:49:03,440 --> 00:49:05,920
a peripheral

1274
00:49:05,920 --> 00:49:08,160
okay so before diving into the main

1275
00:49:08,160 --> 00:49:10,400
results let me quickly recall some

1276
00:49:10,400 --> 00:49:12,800
standard security notions that are used

1277
00:49:12,800 --> 00:49:15,599
in npc so the most basic one

1278
00:49:15,599 --> 00:49:17,760
is of course just privacy against semi

1279
00:49:17,760 --> 00:49:20,880
honest or honest but curious adversaries

1280
00:49:20,880 --> 00:49:23,440
um for malicious security we have a

1281
00:49:23,440 --> 00:49:25,440
range of different uh notions starting

1282
00:49:25,440 --> 00:49:28,240
with security with the bot that in which

1283
00:49:28,240 --> 00:49:30,559
the adversary might prevent the honest

1284
00:49:30,559 --> 00:49:32,319
parties from learning the output by

1285
00:49:32,319 --> 00:49:34,000
prematurely avoiding

1286
00:49:34,000 --> 00:49:38,079
and this notion itself consists of three

1287
00:49:38,079 --> 00:49:40,079
increasingly strong variants

1288
00:49:40,079 --> 00:49:41,760
uh the weakest of which is selective

1289
00:49:41,760 --> 00:49:43,920
about whether it was might selectively

1290
00:49:43,920 --> 00:49:46,240
force some of the parties to abort in

1291
00:49:46,240 --> 00:49:48,559
unanimous abode the party is all either

1292
00:49:48,559 --> 00:49:51,920
abort or they all agree on the correct

1293
00:49:51,920 --> 00:49:53,599
identifiable abort is similar to

1294
00:49:53,599 --> 00:49:55,520
unanimous amount with the added

1295
00:49:55,520 --> 00:49:57,520
advantage that if the honest parties are

1296
00:49:57,520 --> 00:50:00,240
forced to output bond they're also able

1297
00:50:00,240 --> 00:50:02,480
to identify at least one corrupt party

1298
00:50:02,480 --> 00:50:04,079
that costs the bond

1299
00:50:04,079 --> 00:50:06,319
and finally the strongest notion of all

1300
00:50:06,319 --> 00:50:08,640
is that of guaranteed output delivery

1301
00:50:08,640 --> 00:50:10,720
which ensures that irrespective of the

1302
00:50:10,720 --> 00:50:13,040
adversarial strategy the honest parties

1303
00:50:13,040 --> 00:50:16,079
are always going to be able to compute

1304
00:50:16,079 --> 00:50:17,839
we can also consider a variant of

1305
00:50:17,839 --> 00:50:19,920
guaranteed operatively that's against

1306
00:50:19,920 --> 00:50:21,760
just field stock adversaries as opposed

1307
00:50:21,760 --> 00:50:24,240
to fully malicious according where fail

1308
00:50:24,240 --> 00:50:26,240
stock adversaries are ones that behave

1309
00:50:26,240 --> 00:50:28,720
like semi-honest adversaries but might

1310
00:50:28,720 --> 00:50:30,480
pretty much earlier

1311
00:50:30,480 --> 00:50:32,319
and so collectively

1312
00:50:32,319 --> 00:50:33,440
we get

1313
00:50:33,440 --> 00:50:36,000
these two hierarchies of security

1314
00:50:36,000 --> 00:50:38,400
notions

1315
00:50:38,400 --> 00:50:40,720
going back to the two-round npc and what

1316
00:50:40,720 --> 00:50:42,319
is known about existing protocol so

1317
00:50:42,319 --> 00:50:43,599
we're going to consider all of the

1318
00:50:43,599 --> 00:50:45,359
security notions that i mentioned on the

1319
00:50:45,359 --> 00:50:47,520
previous slide and for communication

1320
00:50:47,520 --> 00:50:49,440
models we'll look at the broadcast only

1321
00:50:49,440 --> 00:50:51,839
setting the point-to-point only setting

1322
00:50:51,839 --> 00:50:53,200
a combination of the two and the

1323
00:50:53,200 --> 00:50:55,040
broadcast only setting augmented with

1324
00:50:55,040 --> 00:50:57,520
the bare bki

1325
00:50:57,520 --> 00:51:01,040
um okay so for semi-honest security uh

1326
00:51:01,040 --> 00:51:03,920
we have results uh a feasibility results

1327
00:51:03,920 --> 00:51:06,319
in all of these communication models

1328
00:51:06,319 --> 00:51:08,559
for fail stop guided output delivery we

1329
00:51:08,559 --> 00:51:10,079
have an impossibility result in the

1330
00:51:10,079 --> 00:51:12,480
broadcast only setting but do have a

1331
00:51:12,480 --> 00:51:14,079
feasibility result in all of the

1332
00:51:14,079 --> 00:51:16,000
remaining communication models

1333
00:51:16,000 --> 00:51:17,680
similarly for selective abort we have

1334
00:51:17,680 --> 00:51:19,920
feasibility results in all communication

1335
00:51:19,920 --> 00:51:21,280
models except

1336
00:51:21,280 --> 00:51:23,520
the broadcasting resetting

1337
00:51:23,520 --> 00:51:25,920
and for unanimous about identifiable

1338
00:51:25,920 --> 00:51:27,200
aborting malicious guaranteed

1339
00:51:27,200 --> 00:51:29,359
operatively uh we again have

1340
00:51:29,359 --> 00:51:32,480
impossibilities in some communications

1341
00:51:32,480 --> 00:51:33,599
um

1342
00:51:33,599 --> 00:51:35,359
and finally for unanimous support we

1343
00:51:35,359 --> 00:51:37,359
have a feasibility result in the

1344
00:51:37,359 --> 00:51:40,240
broadcast plus b2b and broadcast plus

1345
00:51:40,240 --> 00:51:41,680
pki setting

1346
00:51:41,680 --> 00:51:43,920
now together all of these results leave

1347
00:51:43,920 --> 00:51:45,520
the question of

1348
00:51:45,520 --> 00:51:47,440
feasibility of two-round npc in these

1349
00:51:47,440 --> 00:51:48,800
remaining

1350
00:51:48,800 --> 00:51:50,960
settings unresolved

1351
00:51:50,960 --> 00:51:53,359
and in this work we

1352
00:51:53,359 --> 00:51:54,960
provide answers to all of these

1353
00:51:54,960 --> 00:51:56,240
questions

1354
00:51:56,240 --> 00:51:59,359
thereby completing this picture

1355
00:51:59,359 --> 00:52:01,920
in particular we show that

1356
00:52:01,920 --> 00:52:04,079
any kind of security with the board in

1357
00:52:04,079 --> 00:52:05,839
two rounds is impossible over just

1358
00:52:05,839 --> 00:52:08,640
broadcast channels and for this we start

1359
00:52:08,640 --> 00:52:11,040
by showing that any two round honest

1360
00:52:11,040 --> 00:52:13,280
majority abc over just broadcast

1361
00:52:13,280 --> 00:52:15,359
channels in the plane model implies a

1362
00:52:15,359 --> 00:52:18,160
two message of libya's transfer protocol

1363
00:52:18,160 --> 00:52:19,599
uh if you start with the seminar on this

1364
00:52:19,599 --> 00:52:22,160
protocol we end up with a semi-honest

1365
00:52:22,160 --> 00:52:23,920
oblivious transfer protocol and if we

1366
00:52:23,920 --> 00:52:25,520
start with a malicious one we end up

1367
00:52:25,520 --> 00:52:27,760
with a malicious photo

1368
00:52:27,760 --> 00:52:29,440
and this complication holds both in the

1369
00:52:29,440 --> 00:52:32,319
plane model and in the crs model also

1370
00:52:32,319 --> 00:52:34,480
this implication helps justify the use

1371
00:52:34,480 --> 00:52:36,480
of ot in the work of carcatol and

1372
00:52:36,480 --> 00:52:39,119
venomoud oil in their design of a

1373
00:52:39,119 --> 00:52:41,359
semanas protocol in the broadcast only

1374
00:52:41,359 --> 00:52:43,359
setting

1375
00:52:43,359 --> 00:52:44,319
um

1376
00:52:44,319 --> 00:52:46,160
next we prove that a two message

1377
00:52:46,160 --> 00:52:48,319
maliciously secure ot is impossible in

1378
00:52:48,319 --> 00:52:50,240
the play model and these two results

1379
00:52:50,240 --> 00:52:52,480
combined show that any kind of militia

1380
00:52:52,480 --> 00:52:54,640
security in the broadcast only setting

1381
00:52:54,640 --> 00:52:57,920
is essentially impossible

1382
00:52:58,160 --> 00:53:00,880
um in the broadcast and p2p setting we

1383
00:53:00,880 --> 00:53:03,680
show that even identifiable abort uh is

1384
00:53:03,680 --> 00:53:04,960
impossible

1385
00:53:04,960 --> 00:53:07,359
and on the positive side we show that

1386
00:53:07,359 --> 00:53:09,599
guaranteed opportunity and hence

1387
00:53:09,599 --> 00:53:11,599
identifiable abort are both

1388
00:53:11,599 --> 00:53:15,920
uh achievable in the broadcast spki7

1389
00:53:15,920 --> 00:53:18,240
and so now together these results help

1390
00:53:18,240 --> 00:53:20,480
us establish the following hierarchy of

1391
00:53:20,480 --> 00:53:22,240
communication models in the two-round

1392
00:53:22,240 --> 00:53:23,359
setting

1393
00:53:23,359 --> 00:53:25,280
starting with the broadcast plus pki

1394
00:53:25,280 --> 00:53:28,079
setting which allows us to uh achieve

1395
00:53:28,079 --> 00:53:29,839
the strongest notion that is guaranteed

1396
00:53:29,839 --> 00:53:32,400
up ability uh slightly weaker than that

1397
00:53:32,400 --> 00:53:34,960
is broadcast plus point to point uh then

1398
00:53:34,960 --> 00:53:36,880
point to point and the weakest of them

1399
00:53:36,880 --> 00:53:38,800
is the broadcast only setting that only

1400
00:53:38,800 --> 00:53:40,240
allows us to achieve the amount of

1401
00:53:40,240 --> 00:53:42,240
security

1402
00:53:42,240 --> 00:53:44,558
thank you

1403
00:53:51,200 --> 00:53:54,520
any questions

1404
00:53:54,600 --> 00:53:59,119
[Music]

1405
00:53:59,119 --> 00:54:00,800
so maybe if i can ask a quick question

1406
00:54:00,800 --> 00:54:02,480
so uh

1407
00:54:02,480 --> 00:54:04,160
do you know about the model where

1408
00:54:04,160 --> 00:54:06,640
potentially you use the first round yeah

1409
00:54:06,640 --> 00:54:08,800
and so what happens to the picture when

1410
00:54:08,800 --> 00:54:10,480
you can sort of uh work in these

1411
00:54:10,480 --> 00:54:12,160
non-attractive secure computations where

1412
00:54:12,160 --> 00:54:13,200
you can dream

1413
00:54:13,200 --> 00:54:14,880
does the picture stay the same or does

1414
00:54:14,880 --> 00:54:16,559
it mean uh i don't

1415
00:54:16,559 --> 00:54:18,160
know

1416
00:54:18,160 --> 00:54:20,000
about the i don't think we know enough

1417
00:54:20,000 --> 00:54:20,880
about the

1418
00:54:20,880 --> 00:54:22,480
the reusable

1419
00:54:22,480 --> 00:54:25,520
especially in the two-round setting um i

1420
00:54:25,520 --> 00:54:27,280
uh i mean i could be wrong but i don't

1421
00:54:27,280 --> 00:54:28,960
think you even know of a just a simple

1422
00:54:28,960 --> 00:54:31,280
malicious basic or protocol in any

1423
00:54:31,280 --> 00:54:33,920
communication model

1424
00:54:33,920 --> 00:54:35,520
i think that requires some sort of setup

1425
00:54:35,520 --> 00:54:38,920
in the play mode

1426
00:54:56,559 --> 00:54:59,520
any further questions

1427
00:54:59,520 --> 00:55:03,480
okay so thanks again

1428
00:55:08,810 --> 00:55:11,909
[Music]

1429
00:55:18,480 --> 00:55:21,839
can you share your slides

1430
00:55:27,440 --> 00:55:29,200
are you can you can you speak up a

1431
00:55:29,200 --> 00:55:30,799
little bit

1432
00:55:30,799 --> 00:55:33,040
can you can you see the slides yes yeah

1433
00:55:33,040 --> 00:55:34,799
we can see the slides okay

1434
00:55:34,799 --> 00:55:37,200
so the last stop of this the the npc

1435
00:55:37,200 --> 00:55:38,880
session the first piece of the session

1436
00:55:38,880 --> 00:55:41,040
is on generalized pseudo-random secret

1437
00:55:41,040 --> 00:55:42,000
sharing

1438
00:55:42,000 --> 00:55:44,720
and efficient strategies uh resilient uh

1439
00:55:44,720 --> 00:55:46,880
secure computation the work is by

1440
00:55:46,880 --> 00:55:48,880
febreze

1441
00:55:48,880 --> 00:55:52,000
uh need gilbert levy

1442
00:55:52,000 --> 00:55:55,200
and uh

1443
00:55:55,200 --> 00:55:56,880
thank you thank you very much for the

1444
00:55:56,880 --> 00:55:58,559
introduction

1445
00:55:58,559 --> 00:56:01,880
so uh

1446
00:56:02,799 --> 00:56:05,839
so this talk is just uh yet another walk

1447
00:56:05,839 --> 00:56:06,640
on

1448
00:56:06,640 --> 00:56:08,559
on the very popular setting of

1449
00:56:08,559 --> 00:56:10,319
multiparty computation with an honest

1450
00:56:10,319 --> 00:56:11,760
majority

1451
00:56:11,760 --> 00:56:13,280
so in this setting we have n parties who

1452
00:56:13,280 --> 00:56:14,559
wish to compute jointly some

1453
00:56:14,559 --> 00:56:17,200
functionality over their private inputs

1454
00:56:17,200 --> 00:56:18,799
in the presence of t corrupted

1455
00:56:18,799 --> 00:56:19,839
properties

1456
00:56:19,839 --> 00:56:22,319
and n must be equal or larger than two t

1457
00:56:22,319 --> 00:56:23,760
plus one

1458
00:56:23,760 --> 00:56:25,599
and the reason why this setting is so

1459
00:56:25,599 --> 00:56:27,920
popular because in this setting we can

1460
00:56:27,920 --> 00:56:29,680
achieve highly efficient protocols that

1461
00:56:29,680 --> 00:56:31,760
are either information theoretic or only

1462
00:56:31,760 --> 00:56:34,079
make a black box use of cheap symmetric

1463
00:56:34,079 --> 00:56:35,839
crypt

1464
00:56:35,839 --> 00:56:37,760
which is what we are interested in this

1465
00:56:37,760 --> 00:56:38,880
work

1466
00:56:38,880 --> 00:56:40,960
now within the

1467
00:56:40,960 --> 00:56:42,319
the owner's majority setting we can

1468
00:56:42,319 --> 00:56:44,559
distinguish between two sub settings the

1469
00:56:44,559 --> 00:56:46,319
weak honest majority setting where n is

1470
00:56:46,319 --> 00:56:48,480
exactly two t plus one which is the

1471
00:56:48,480 --> 00:56:50,240
minimum number of parties required to

1472
00:56:50,240 --> 00:56:52,559
maintain honest majority and strong

1473
00:56:52,559 --> 00:56:54,559
honest modality where n is strictly

1474
00:56:54,559 --> 00:56:56,880
larger than two t plus one

1475
00:56:56,880 --> 00:56:58,799
and the main question that we ask in

1476
00:56:58,799 --> 00:57:00,640
this work is what can we gain in terms

1477
00:57:00,640 --> 00:57:03,040
of concrete efficiency from allowing

1478
00:57:03,040 --> 00:57:05,200
strong honest majority

1479
00:57:05,200 --> 00:57:06,880
now this question may sound a bit

1480
00:57:06,880 --> 00:57:08,720
strange at first glance because we are

1481
00:57:08,720 --> 00:57:10,559
used to think that in cryptographic

1482
00:57:10,559 --> 00:57:12,400
protocols will have a trade-off between

1483
00:57:12,400 --> 00:57:14,240
security and efficiency

1484
00:57:14,240 --> 00:57:16,480
right and so if we reduce the security

1485
00:57:16,480 --> 00:57:18,319
threshold we can achieve we can improve

1486
00:57:18,319 --> 00:57:19,599
the efficiency

1487
00:57:19,599 --> 00:57:21,760
however this is uh this is not true for

1488
00:57:21,760 --> 00:57:23,520
the honest majority setting

1489
00:57:23,520 --> 00:57:25,119
and the cities consider the task of

1490
00:57:25,119 --> 00:57:27,520
evaluating an arithmetic circuit over

1491
00:57:27,520 --> 00:57:29,280
secret shared inputs so the best

1492
00:57:29,280 --> 00:57:31,280
seminars protocol that we have in this

1493
00:57:31,280 --> 00:57:33,200
in the honors project setting

1494
00:57:33,200 --> 00:57:35,119
is the damn gonisol protocol with the

1495
00:57:35,119 --> 00:57:37,920
communication cost that is that is

1496
00:57:37,920 --> 00:57:39,359
shown here

1497
00:57:39,359 --> 00:57:41,839
and over the years it was easier to

1498
00:57:41,839 --> 00:57:44,640
achieve militia security uh as we reduce

1499
00:57:44,640 --> 00:57:46,880
the threat the threshold but recent

1500
00:57:46,880 --> 00:57:49,280
works have closed the gap completely

1501
00:57:49,280 --> 00:57:50,640
between semi-honest and malicious

1502
00:57:50,640 --> 00:57:53,200
security for both the strong and the

1503
00:57:53,200 --> 00:57:55,440
weak honest majority setting

1504
00:57:55,440 --> 00:57:56,799
so now the

1505
00:57:56,799 --> 00:57:59,040
the cost with malaysian security is

1506
00:57:59,040 --> 00:58:00,720
is the same or at least at least in the

1507
00:58:00,720 --> 00:58:02,880
amortized sense as as for semi on the

1508
00:58:02,880 --> 00:58:04,160
security

1509
00:58:04,160 --> 00:58:06,640
so now let's assume that you want to uh

1510
00:58:06,640 --> 00:58:08,559
to run a maliciously secure protocol in

1511
00:58:08,559 --> 00:58:10,079
the strong ones for those descending so

1512
00:58:10,079 --> 00:58:11,760
now we have two options one is to run a

1513
00:58:11,760 --> 00:58:13,040
protocol in the stormwater majority

1514
00:58:13,040 --> 00:58:15,119
setting but the second will be to let

1515
00:58:15,119 --> 00:58:17,839
the parties share their inputs to two t

1516
00:58:17,839 --> 00:58:19,920
plus one parties and let them run the

1517
00:58:19,920 --> 00:58:22,079
protocol through them and it is almost

1518
00:58:22,079 --> 00:58:24,079
straight forward to see that if we if we

1519
00:58:24,079 --> 00:58:26,400
will use the second option then this

1520
00:58:26,400 --> 00:58:27,599
will yield

1521
00:58:27,599 --> 00:58:29,520
uh less communication so it is not clear

1522
00:58:29,520 --> 00:58:32,000
what do we gain from running uh from war

1523
00:58:32,000 --> 00:58:33,200
from running a protocol in the

1524
00:58:33,200 --> 00:58:35,760
stronghold is setting

1525
00:58:35,760 --> 00:58:37,359
different direction that has been

1526
00:58:37,359 --> 00:58:39,760
considered in this in the setting is to

1527
00:58:39,760 --> 00:58:42,079
evaluate multiple gates together at the

1528
00:58:42,079 --> 00:58:44,240
same cost of a single gate

1529
00:58:44,240 --> 00:58:45,839
and this is done

1530
00:58:45,839 --> 00:58:48,319
using pac shamil sql sharing where you

1531
00:58:48,319 --> 00:58:51,920
store l secrets on the same polynomial

1532
00:58:51,920 --> 00:58:53,200
so now

1533
00:58:53,200 --> 00:58:55,839
the degree of the polynomial that we use

1534
00:58:55,839 --> 00:58:59,119
throughout the computation is t plus l

1535
00:58:59,119 --> 00:59:00,960
and which we denote by dn the number of

1536
00:59:00,960 --> 00:59:02,880
parties must be equal or larger than 2d

1537
00:59:02,880 --> 00:59:04,400
plus 1.

1538
00:59:04,400 --> 00:59:07,200
now if we evaluate smd circuits where

1539
00:59:07,200 --> 00:59:09,359
you have a many copies of the same

1540
00:59:09,359 --> 00:59:11,599
circuit in parallel then this gives an

1541
00:59:11,599 --> 00:59:13,680
immediate improvement by a factor of l

1542
00:59:13,680 --> 00:59:15,359
for both communication and computation

1543
00:59:15,359 --> 00:59:17,280
which is of course significant

1544
00:59:17,280 --> 00:59:20,000
rather for evaluating general circuits

1545
00:59:20,000 --> 00:59:22,720
or non-smd circuits previous rows could

1546
00:59:22,720 --> 00:59:24,480
only achieve asymptotic efficiency but

1547
00:59:24,480 --> 00:59:26,319
with high concrete costs for routing

1548
00:59:26,319 --> 00:59:28,640
sequence between blocks when moving from

1549
00:59:28,640 --> 00:59:30,240
one layer of the circuit to the next

1550
00:59:30,240 --> 00:59:31,520
layer

1551
00:59:31,520 --> 00:59:33,839
so a question remains still what quick

1552
00:59:33,839 --> 00:59:35,760
what can what can we gain in terms of

1553
00:59:35,760 --> 00:59:37,280
compute efficiency

1554
00:59:37,280 --> 00:59:39,280
when we want to evaluate

1555
00:59:39,280 --> 00:59:43,599
in a general arithmetic circuit

1556
00:59:43,599 --> 00:59:45,040
and in this talk

1557
00:59:45,040 --> 00:59:47,040
we present in this work we present

1558
00:59:47,040 --> 00:59:48,319
several techniques for the strong

1559
00:59:48,319 --> 00:59:49,920
management setting where we improve

1560
00:59:49,920 --> 00:59:52,559
communication computational cost storage

1561
00:59:52,559 --> 00:59:54,079
and latency

1562
00:59:54,079 --> 00:59:56,480
all of our constructions are based on

1563
00:59:56,480 --> 00:59:59,200
zero the random sql shelling prss

1564
00:59:59,200 --> 01:00:01,839
which allows us to generate

1565
01:00:01,839 --> 01:00:04,240
cellular random chemical secret sharing

1566
01:00:04,240 --> 01:00:05,839
without interruption from a set of

1567
01:00:05,839 --> 01:00:07,680
replicated seeds that is distributed

1568
01:00:07,680 --> 01:00:09,599
across the parties

1569
01:00:09,599 --> 01:00:11,040
now while this

1570
01:00:11,040 --> 01:00:12,240
method does not require any

1571
01:00:12,240 --> 01:00:14,160
communication the computational cost

1572
01:00:14,160 --> 01:00:15,920
scales very fast with the number of

1573
01:00:15,920 --> 01:00:18,079
parties and therefore it is efficient

1574
01:00:18,079 --> 01:00:20,400
only for small values of t

1575
01:00:20,400 --> 01:00:21,520
on the other hand it has many

1576
01:00:21,520 --> 01:00:23,119
applications beyond the context of

1577
01:00:23,119 --> 01:00:25,760
multiparty computation

1578
01:00:25,760 --> 01:00:28,319
so um so we have several technical

1579
01:00:28,319 --> 01:00:30,319
contributions so the first technical

1580
01:00:30,319 --> 01:00:31,520
contribution

1581
01:00:31,520 --> 01:00:33,680
uh is um

1582
01:00:33,680 --> 01:00:36,160
here we show how to to generate linear

1583
01:00:36,160 --> 01:00:37,839
correlations that can support

1584
01:00:37,839 --> 01:00:39,200
computation

1585
01:00:39,200 --> 01:00:41,839
of uh non-smd circuits over pac-secret

1586
01:00:41,839 --> 01:00:42,880
shelling

1587
01:00:42,880 --> 01:00:45,520
which is which are generated using prss

1588
01:00:45,520 --> 01:00:47,280
and here we

1589
01:00:47,280 --> 01:00:48,880
we are cheap to avoid the routing

1590
01:00:48,880 --> 01:00:51,040
mechanism overhead from previous works

1591
01:00:51,040 --> 01:00:53,119
completely

1592
01:00:53,119 --> 01:00:54,960
our second contribution

1593
01:00:54,960 --> 01:00:57,839
is a new general prss construction with

1594
01:00:57,839 --> 01:00:59,520
reduced number of seats and reduced

1595
01:00:59,520 --> 01:01:01,200
computational cost

1596
01:01:01,200 --> 01:01:04,079
uh if the polynomial degree that we are

1597
01:01:04,079 --> 01:01:07,280
using is larger than what is required by

1598
01:01:07,280 --> 01:01:10,079
the security threshold and the packing

1599
01:01:10,079 --> 01:01:11,440
parameter

1600
01:01:11,440 --> 01:01:14,400
which we denote by by d so in this case

1601
01:01:14,400 --> 01:01:16,000
we are able to reduce the storage and

1602
01:01:16,000 --> 01:01:18,079
the computational cost and by achieving

1603
01:01:18,079 --> 01:01:20,319
this we are able to extend the number of

1604
01:01:20,319 --> 01:01:24,160
parties for which the prss technique is

1605
01:01:24,160 --> 01:01:26,160
it can be used

1606
01:01:26,160 --> 01:01:27,760
and our third and last technical

1607
01:01:27,760 --> 01:01:29,040
contribution is cheap struggle

1608
01:01:29,040 --> 01:01:31,680
resilience and here we show that if the

1609
01:01:31,680 --> 01:01:33,760
number of parties is larger than what is

1610
01:01:33,760 --> 01:01:36,000
required by the polynomial degree namely

1611
01:01:36,000 --> 01:01:39,440
that n is strictly larger than 2d plus 1

1612
01:01:39,440 --> 01:01:41,040
then we can allow the protocol to

1613
01:01:41,040 --> 01:01:43,599
proceed even if not all messages have

1614
01:01:43,599 --> 01:01:46,720
arrived in each round of the execution

1615
01:01:46,720 --> 01:01:48,720
now this is a straightforward to achieve

1616
01:01:48,720 --> 01:01:50,960
with similar security but with malicious

1617
01:01:50,960 --> 01:01:53,599
security the this is actually uh

1618
01:01:53,599 --> 01:01:55,359
challenging and this requires us

1619
01:01:55,359 --> 01:01:57,119
required us to deal with the subject

1620
01:01:57,119 --> 01:01:59,440
attack due to ital which we call the

1621
01:01:59,440 --> 01:02:02,559
double dipping attack and we

1622
01:02:02,559 --> 01:02:04,640
and we present some some new techniques

1623
01:02:04,640 --> 01:02:06,480
to deal with it

1624
01:02:06,480 --> 01:02:07,359
so

1625
01:02:07,359 --> 01:02:09,440
combining these three technical

1626
01:02:09,440 --> 01:02:11,119
contributions we achieved

1627
01:02:11,119 --> 01:02:13,119
the following two results so the first

1628
01:02:13,119 --> 01:02:15,359
of those is appearance prss scheme for

1629
01:02:15,359 --> 01:02:17,119
sharing degree d polynomials between n

1630
01:02:17,119 --> 01:02:20,000
parties with a security threshold t

1631
01:02:20,000 --> 01:02:22,319
where we make a reduction from a problem

1632
01:02:22,319 --> 01:02:24,240
called coupling designs

1633
01:02:24,240 --> 01:02:26,400
and show that given a solution to that

1634
01:02:26,400 --> 01:02:28,319
problem of size k

1635
01:02:28,319 --> 01:02:30,640
then our plc scheme requires k times d

1636
01:02:30,640 --> 01:02:33,000
plus 1 times n minus t divided by n

1637
01:02:33,000 --> 01:02:36,400
pls seeds per party

1638
01:02:36,400 --> 01:02:38,319
and this improves dramatically over the

1639
01:02:38,319 --> 01:02:40,960
classical construction of primordial

1640
01:02:40,960 --> 01:02:43,839
when d is strictly larger than

1641
01:02:43,839 --> 01:02:46,160
and in this table you can see

1642
01:02:46,160 --> 01:02:46,960
the

1643
01:02:46,960 --> 01:02:48,880
the storage cost the comparison between

1644
01:02:48,880 --> 01:02:51,200
the uh our work and the claim of our

1645
01:02:51,200 --> 01:02:52,160
work

1646
01:02:52,160 --> 01:02:53,760
uh for two special cases but in the

1647
01:02:53,760 --> 01:02:55,440
paper we give many more data points and

1648
01:02:55,440 --> 01:02:57,039
show that we can improve dramatically

1649
01:02:57,039 --> 01:02:58,559
over the work

1650
01:02:58,559 --> 01:03:01,280
when d is when there is a gap between b

1651
01:03:01,280 --> 01:03:02,960
and d

1652
01:03:02,960 --> 01:03:05,839
and as i said before uh this result has

1653
01:03:05,839 --> 01:03:07,520
many applications beyond the context of

1654
01:03:07,520 --> 01:03:09,839
general npc for example threshold

1655
01:03:09,839 --> 01:03:12,160
cryptography or secure aggregation which

1656
01:03:12,160 --> 01:03:14,559
is important for federated learning for

1657
01:03:14,559 --> 01:03:17,680
example or even the simple task of

1658
01:03:17,680 --> 01:03:19,280
secure distributed storage where a

1659
01:03:19,280 --> 01:03:21,359
dealer wants to signature

1660
01:03:21,359 --> 01:03:23,760
a secret across multiple servers and

1661
01:03:23,760 --> 01:03:26,079
using pls the dealer only needs to

1662
01:03:26,079 --> 01:03:28,839
broker to broadcast the offset between

1663
01:03:28,839 --> 01:03:30,160
the um

1664
01:03:30,160 --> 01:03:32,319
the secret that was generated using krss

1665
01:03:32,319 --> 01:03:35,039
and the actual secret

1666
01:03:35,039 --> 01:03:37,039
so so using our

1667
01:03:37,039 --> 01:03:40,240
technique we we can do it with the

1668
01:03:40,240 --> 01:03:44,160
with less storage and computational cost

1669
01:03:44,160 --> 01:03:46,079
and our second result

1670
01:03:46,079 --> 01:03:49,200
is an npc protocol so given

1671
01:03:49,200 --> 01:03:51,440
a security threshold t tagging parameter

1672
01:03:51,440 --> 01:03:53,680
l and number of parties n

1673
01:03:53,680 --> 01:03:56,000
we can we share we present a new

1674
01:03:56,000 --> 01:03:57,920
protocol to compute any arithmetic

1675
01:03:57,920 --> 01:04:00,480
circuit c over a final field f with the

1676
01:04:00,480 --> 01:04:02,720
s multiplication gates with the

1677
01:04:02,720 --> 01:04:04,400
following features

1678
01:04:04,400 --> 01:04:06,880
so first the protocol makes only a black

1679
01:04:06,880 --> 01:04:09,760
box use of any pseudo-random function

1680
01:04:09,760 --> 01:04:11,280
besides that it is the information

1681
01:04:11,280 --> 01:04:12,640
theoretic

1682
01:04:12,640 --> 01:04:14,400
the protocol achieves malicious security

1683
01:04:14,400 --> 01:04:17,119
against key corrupted parties and tau

1684
01:04:17,119 --> 01:04:19,440
lost messages in each epoch where an

1685
01:04:19,440 --> 01:04:22,960
epoch is defined by two rounds where p1

1686
01:04:22,960 --> 01:04:25,119
or any other designated party sends a

1687
01:04:25,119 --> 01:04:27,440
message to each other party and receives

1688
01:04:27,440 --> 01:04:30,799
back a message from them

1689
01:04:31,039 --> 01:04:32,640
the third property is that if the

1690
01:04:32,640 --> 01:04:34,000
parties follow the protocol then it

1691
01:04:34,000 --> 01:04:35,760
terminates successfully even if tau

1692
01:04:35,760 --> 01:04:36,960
messages

1693
01:04:36,960 --> 01:04:39,119
chosen adaptively by the adversary

1694
01:04:39,119 --> 01:04:41,280
dropped in each epoch and finally the

1695
01:04:41,280 --> 01:04:44,480
communication cost is given uh in this

1696
01:04:44,480 --> 01:04:46,240
in this expression

1697
01:04:46,240 --> 01:04:49,919
and as you can see it

1698
01:04:50,799 --> 01:04:51,760
it is

1699
01:04:51,760 --> 01:04:54,240
used as l is increased and in the paper

1700
01:04:54,240 --> 01:04:56,000
we put in the comparison where we show

1701
01:04:56,000 --> 01:04:57,920
that as we increase

1702
01:04:57,920 --> 01:04:59,920
l and and t

1703
01:04:59,920 --> 01:05:01,920
then we can beat the best previous

1704
01:05:01,920 --> 01:05:03,119
protocols

1705
01:05:03,119 --> 01:05:07,039
while achieving struggler resilience

1706
01:05:07,039 --> 01:05:08,319
and with this i would like my talk thank

1707
01:05:08,319 --> 01:05:10,960
you very much

1708
01:05:15,599 --> 01:05:17,440
thank you for the wonderful talk i guess

1709
01:05:17,440 --> 01:05:19,359
we're just running a little bit over

1710
01:05:19,359 --> 01:05:21,039
time but i think that's okay

1711
01:05:21,039 --> 01:05:23,039
so any questions from the room or the

1712
01:05:23,039 --> 01:05:25,680
zealot chat

1713
01:05:26,559 --> 01:05:28,880
questions

1714
01:05:34,960 --> 01:05:36,559
so i guess everybody's eager for

1715
01:05:36,559 --> 01:05:38,319
breakfast so thanks

1716
01:05:38,319 --> 01:05:40,319
again for the talk and thanks everyone

1717
01:05:40,319 --> 01:05:42,160
in the session so feel free to connect

1718
01:05:42,160 --> 01:05:43,599
the virtual participants should use

1719
01:05:43,599 --> 01:05:45,200
europe to connect and sort of ask more

1720
01:05:45,200 --> 01:05:46,880
questions the in-person participants can

1721
01:05:46,880 --> 01:05:49,440
sort of this year yeah just talk to each

1722
01:05:49,440 --> 01:05:51,520
other over here and let's we will

1723
01:05:51,520 --> 01:05:54,400
reconvene in about 22 minutes for the

1724
01:05:54,400 --> 01:05:55,680
next session that will be on function

1725
01:05:55,680 --> 01:05:58,078
encryption and

