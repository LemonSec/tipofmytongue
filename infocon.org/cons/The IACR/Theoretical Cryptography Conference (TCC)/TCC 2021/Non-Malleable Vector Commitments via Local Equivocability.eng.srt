1
00:00:00,640 --> 00:00:03,439
hi i'm lior this is a talk about

2
00:00:03,439 --> 00:00:05,200
non-malleable vector commitments via

3
00:00:05,200 --> 00:00:07,600
local equivocability and this is joint

4
00:00:07,600 --> 00:00:09,360
work with gil segev

5
00:00:09,360 --> 00:00:11,920
vector commitments or vcs for short

6
00:00:11,920 --> 00:00:13,679
enable a user to non-interactively

7
00:00:13,679 --> 00:00:16,640
commit to a long vector of elements and

8
00:00:16,640 --> 00:00:19,199
then at a later stage to locally open

9
00:00:19,199 --> 00:00:21,520
any of the committed vectors entries

10
00:00:21,520 --> 00:00:23,840
by revealing its contents

11
00:00:23,840 --> 00:00:25,840
and providing a short proof asserting

12
00:00:25,840 --> 00:00:27,359
its correctness with respect to the

13
00:00:27,359 --> 00:00:28,880
commitment

14
00:00:28,880 --> 00:00:30,480
the security requirement of such

15
00:00:30,480 --> 00:00:33,360
commitments is position binding

16
00:00:33,360 --> 00:00:35,040
an adversary shouldn't be able to

17
00:00:35,040 --> 00:00:38,000
produce a commitment and then open one

18
00:00:38,000 --> 00:00:40,559
of its entries to two different values

19
00:00:40,559 --> 00:00:42,559
without any further requirements a

20
00:00:42,559 --> 00:00:44,640
trivial solution is to simply have the

21
00:00:44,640 --> 00:00:46,559
commuter commit to each entry of the

22
00:00:46,559 --> 00:00:48,239
vector independently

23
00:00:48,239 --> 00:00:50,160
using some standard non-interactive

24
00:00:50,160 --> 00:00:51,760
commitment scheme

25
00:00:51,760 --> 00:00:54,399
so in addition vcs should also be

26
00:00:54,399 --> 00:00:56,399
non-trivially succinct

27
00:00:56,399 --> 00:00:57,520
that is

28
00:00:57,520 --> 00:00:59,920
both the commitment string and the local

29
00:00:59,920 --> 00:01:03,039
openings should be of size sublinear in

30
00:01:03,039 --> 00:01:05,119
the number q of entries in the committed

31
00:01:05,119 --> 00:01:06,960
vector

32
00:01:06,960 --> 00:01:08,640
perhaps the earliest construction of

33
00:01:08,640 --> 00:01:10,880
this seas is merkle trees suggested by

34
00:01:10,880 --> 00:01:13,439
merkel back in the late 80s

35
00:01:13,439 --> 00:01:15,439
merkel trees produce commitments of

36
00:01:15,439 --> 00:01:17,119
length which is independent of the size

37
00:01:17,119 --> 00:01:19,360
q of the underlying vector

38
00:01:19,360 --> 00:01:21,200
the length of the local openings is the

39
00:01:21,200 --> 00:01:23,119
depth of the tree which is logarithmic

40
00:01:23,119 --> 00:01:24,799
in q

41
00:01:24,799 --> 00:01:26,560
more recent constructions that are based

42
00:01:26,560 --> 00:01:28,560
on specific algebraic or lattice-based

43
00:01:28,560 --> 00:01:30,960
assumptions have both constant size

44
00:01:30,960 --> 00:01:34,320
commitments and constant size openings

45
00:01:34,320 --> 00:01:36,159
furthermore they offer various

46
00:01:36,159 --> 00:01:38,479
functionality improvements including

47
00:01:38,479 --> 00:01:40,079
updatability of entries in the

48
00:01:40,079 --> 00:01:41,520
underlying vector

49
00:01:41,520 --> 00:01:43,600
the ability to simultaneously open

50
00:01:43,600 --> 00:01:45,759
multiple entries more efficiently and

51
00:01:45,759 --> 00:01:47,280
more

52
00:01:47,280 --> 00:01:49,439
another long line of research regarding

53
00:01:49,439 --> 00:01:50,960
commitment schemes deals with

54
00:01:50,960 --> 00:01:52,880
non-valuable commitments introduced in

55
00:01:52,880 --> 00:01:55,920
the seminal work of the leveed welcome o

56
00:01:55,920 --> 00:01:57,439
in this talk we'll restrict our

57
00:01:57,439 --> 00:01:59,360
attention to non-interactive non-malabar

58
00:01:59,360 --> 00:02:00,560
commitments

59
00:02:00,560 --> 00:02:03,360
informally speaking such schemes ensure

60
00:02:03,360 --> 00:02:04,880
that an adversary that observes a

61
00:02:04,880 --> 00:02:06,880
commitment to some value v

62
00:02:06,880 --> 00:02:09,199
cannot produce a commitment to a value v

63
00:02:09,199 --> 00:02:11,599
prime which is non-trivially related to

64
00:02:11,599 --> 00:02:12,800
v

65
00:02:12,800 --> 00:02:14,160
over the years there have been many

66
00:02:14,160 --> 00:02:15,920
constructions of non-valuable commitment

67
00:02:15,920 --> 00:02:18,000
schemes from different assumptions

68
00:02:18,000 --> 00:02:20,000
satisfying different security notions

69
00:02:20,000 --> 00:02:22,640
and different efficiency trade-offs

70
00:02:22,640 --> 00:02:24,640
in this work we study non-malleable

71
00:02:24,640 --> 00:02:27,200
vector commitments or vcs

72
00:02:27,200 --> 00:02:29,200
though the two above mentioned notions

73
00:02:29,200 --> 00:02:31,120
have been thoroughly studied

74
00:02:31,120 --> 00:02:33,519
the notion of non-malleable vcs has not

75
00:02:33,519 --> 00:02:35,040
been explored

76
00:02:35,040 --> 00:02:36,400
as we will see

77
00:02:36,400 --> 00:02:38,560
the main reason why existing frameworks

78
00:02:38,560 --> 00:02:39,920
for standard non-malleable

79
00:02:39,920 --> 00:02:41,680
non-interactive commitments are

80
00:02:41,680 --> 00:02:43,360
insufficient to deal with vector

81
00:02:43,360 --> 00:02:44,640
commitments

82
00:02:44,640 --> 00:02:46,080
is that they do not consider the

83
00:02:46,080 --> 00:02:48,720
security implications of an adversary

84
00:02:48,720 --> 00:02:50,879
that is exposed to local openings of

85
00:02:50,879 --> 00:02:53,519
some of the vectors entries

86
00:02:53,519 --> 00:02:56,160
a related notion that has been explored

87
00:02:56,160 --> 00:02:58,720
is non-malleable or independent zero

88
00:02:58,720 --> 00:03:00,480
knowledge sets

89
00:03:00,480 --> 00:03:03,519
roughly this can be seen as vcs that

90
00:03:03,519 --> 00:03:05,920
allow for non-membership proofs

91
00:03:05,920 --> 00:03:08,319
that is one can prove that a certain

92
00:03:08,319 --> 00:03:11,680
element is not in the underlying vector

93
00:03:11,680 --> 00:03:13,120
such schemes were defined and

94
00:03:13,120 --> 00:03:15,680
constructed by gennaro and mikali

95
00:03:15,680 --> 00:03:17,599
but their construction as well as

96
00:03:17,599 --> 00:03:20,000
subsequent constructions rely on the

97
00:03:20,000 --> 00:03:22,159
notion of multi-trap door mercurial

98
00:03:22,159 --> 00:03:23,840
craft road commitments as a building

99
00:03:23,840 --> 00:03:25,360
block

100
00:03:25,360 --> 00:03:27,360
just to specify these commitments

101
00:03:27,360 --> 00:03:30,560
requires no less than 11 algorithms

102
00:03:30,560 --> 00:03:32,879
this high level of intricacy is tailored

103
00:03:32,879 --> 00:03:35,519
at least in part specifically to support

104
00:03:35,519 --> 00:03:37,280
non-membership proofs of non-malleable

105
00:03:37,280 --> 00:03:38,959
zero-knowledge sets

106
00:03:38,959 --> 00:03:41,599
so this leaves open the question of can

107
00:03:41,599 --> 00:03:43,920
non-malleable vcs that do not require

108
00:03:43,920 --> 00:03:46,400
non-membership proofs be constructed

109
00:03:46,400 --> 00:03:48,879
within a simplified framework both from

110
00:03:48,879 --> 00:03:50,799
a conceptual point of view and from a

111
00:03:50,799 --> 00:03:53,360
technical standpoint

112
00:03:53,360 --> 00:03:54,879
with this question in mind our

113
00:03:54,879 --> 00:03:57,280
contributions are the following

114
00:03:57,280 --> 00:03:59,200
first we put forth the notion of normal

115
00:03:59,200 --> 00:04:01,519
ability for vcs

116
00:04:01,519 --> 00:04:03,599
our notion strikes a balance between the

117
00:04:03,599 --> 00:04:05,760
weaker notion of standard non-malleable

118
00:04:05,760 --> 00:04:07,840
non-interactive commitments which does

119
00:04:07,840 --> 00:04:10,080
not account for local openings

120
00:04:10,080 --> 00:04:11,920
and the stronger notion of non-valuable

121
00:04:11,920 --> 00:04:14,239
zero-knowledge sets

122
00:04:14,239 --> 00:04:16,238
we then present a general framework for

123
00:04:16,238 --> 00:04:18,720
constructing non-malleable vcs

124
00:04:18,720 --> 00:04:20,959
concretely we show how to transform any

125
00:04:20,959 --> 00:04:23,759
vc into a non-malleable vc

126
00:04:23,759 --> 00:04:25,919
using a new intermediate notion that we

127
00:04:25,919 --> 00:04:28,720
present which we call locally quevocable

128
00:04:28,720 --> 00:04:31,600
commitments with all but one binding

129
00:04:31,600 --> 00:04:33,600
this notion is simpler and admits

130
00:04:33,600 --> 00:04:36,080
somewhat more efficient instantiations

131
00:04:36,080 --> 00:04:38,000
than the more intricate notion of

132
00:04:38,000 --> 00:04:39,919
multi-trap door mercurial trapdoor

133
00:04:39,919 --> 00:04:41,840
commitments

134
00:04:41,840 --> 00:04:43,840
non-malleable vcs that are obtained

135
00:04:43,840 --> 00:04:46,320
using our framework essentially preserve

136
00:04:46,320 --> 00:04:49,440
the efficiency of the underlying vc

137
00:04:49,440 --> 00:04:51,840
additionally in the paper we show how to

138
00:04:51,840 --> 00:04:54,160
extend our notion of normaliability and

139
00:04:54,160 --> 00:04:56,880
our construction of non-malleable vcs to

140
00:04:56,880 --> 00:04:58,639
the dynamic setting

141
00:04:58,639 --> 00:05:00,320
allowing for private updates to the

142
00:05:00,320 --> 00:05:02,000
committed vector

143
00:05:02,000 --> 00:05:04,960
we also show that merkle trees satisfy a

144
00:05:04,960 --> 00:05:06,720
notion of normal ability in the random

145
00:05:06,720 --> 00:05:08,240
oracle model

146
00:05:08,240 --> 00:05:10,000
which is not necessarily the case in the

147
00:05:10,000 --> 00:05:11,680
standard model

148
00:05:11,680 --> 00:05:13,520
and finally we discuss possible

149
00:05:13,520 --> 00:05:16,320
applications of non-valuable vcs to

150
00:05:16,320 --> 00:05:18,160
provide cross-transaction independence

151
00:05:18,160 --> 00:05:20,639
in blockchains and for the integrity of

152
00:05:20,639 --> 00:05:23,520
simultaneous multi-round auctions

153
00:05:23,520 --> 00:05:25,280
unfortunately we will not be able to

154
00:05:25,280 --> 00:05:27,199
cover these contributions in this talk

155
00:05:27,199 --> 00:05:28,720
and you can see the paper for more

156
00:05:28,720 --> 00:05:30,080
details

157
00:05:30,080 --> 00:05:31,680
so the remainder of this talk will be

158
00:05:31,680 --> 00:05:33,759
organized as follows

159
00:05:33,759 --> 00:05:35,199
first we'll review our notion of

160
00:05:35,199 --> 00:05:37,520
non-malleable vcs

161
00:05:37,520 --> 00:05:39,759
then we'll present our formal definition

162
00:05:39,759 --> 00:05:41,759
for locally equivocable commitment with

163
00:05:41,759 --> 00:05:44,000
all but one binding

164
00:05:44,000 --> 00:05:45,600
then we'll see a construction of

165
00:05:45,600 --> 00:05:48,720
non-malleable vcs from any vc

166
00:05:48,720 --> 00:05:50,400
and finally we will conclude with some

167
00:05:50,400 --> 00:05:53,120
closing remarks so let's start by

168
00:05:53,120 --> 00:05:55,759
defining non-valuable visas

169
00:05:55,759 --> 00:05:57,199
intuitively

170
00:05:57,199 --> 00:05:59,520
at the most basic level our notion of

171
00:05:59,520 --> 00:06:01,840
normal ability asks that an efficient

172
00:06:01,840 --> 00:06:04,400
adversary receiving a vc to a vector x

173
00:06:04,400 --> 00:06:06,800
of elements should not be able to

174
00:06:06,800 --> 00:06:09,280
produce a vc to a non-trivially related

175
00:06:09,280 --> 00:06:11,280
vector x prime

176
00:06:11,280 --> 00:06:13,600
in this sense our notion is based on the

177
00:06:13,600 --> 00:06:15,520
standard notion of normal ability for

178
00:06:15,520 --> 00:06:17,840
non-interactive commitments

179
00:06:17,840 --> 00:06:19,600
but we extend it to accommodate

180
00:06:19,600 --> 00:06:21,919
adversaries that observe local openings

181
00:06:21,919 --> 00:06:24,000
of the vector commitment to x for

182
00:06:24,000 --> 00:06:26,479
entries of their choice before having to

183
00:06:26,479 --> 00:06:29,039
produce their vector commitments to x

184
00:06:29,039 --> 00:06:30,400
prime

185
00:06:30,400 --> 00:06:32,319
in more detail our notion of normal

186
00:06:32,319 --> 00:06:34,319
ability relies on a simulation based

187
00:06:34,319 --> 00:06:35,600
definition

188
00:06:35,600 --> 00:06:38,560
we define two experiments a real one and

189
00:06:38,560 --> 00:06:41,680
an ideal one and we require that for any

190
00:06:41,680 --> 00:06:43,039
adversary a

191
00:06:43,039 --> 00:06:45,360
any length q of vectors

192
00:06:45,360 --> 00:06:48,560
and any distribution d over such vectors

193
00:06:48,560 --> 00:06:50,479
there is a simulator s

194
00:06:50,479 --> 00:06:52,160
such that the output of the real

195
00:06:52,160 --> 00:06:54,560
experiment with the adversary a

196
00:06:54,560 --> 00:06:56,880
is indistinguishable from the output of

197
00:06:56,880 --> 00:06:58,960
the ideal experiment with the simulator

198
00:06:58,960 --> 00:07:00,479
s

199
00:07:00,479 --> 00:07:02,560
before we define the experiments two

200
00:07:02,560 --> 00:07:04,880
technical details are in order

201
00:07:04,880 --> 00:07:07,599
first as is the case for standard vcs

202
00:07:07,599 --> 00:07:09,199
and for standard non-interactive

203
00:07:09,199 --> 00:07:11,599
non-malleable commitments our definition

204
00:07:11,599 --> 00:07:13,840
is in the crs model

205
00:07:13,840 --> 00:07:14,960
secondly

206
00:07:14,960 --> 00:07:16,720
in our formal definition we have a

207
00:07:16,720 --> 00:07:18,560
technical requirement that the

208
00:07:18,560 --> 00:07:21,840
distribution d over vectors must satisfy

209
00:07:21,840 --> 00:07:23,680
for ease of presentation we will ignore

210
00:07:23,680 --> 00:07:26,160
both of these facts for now

211
00:07:26,160 --> 00:07:28,080
so the real experiment is defined as

212
00:07:28,080 --> 00:07:29,360
follows

213
00:07:29,360 --> 00:07:32,400
first a vector x1 to xq of values is

214
00:07:32,400 --> 00:07:35,199
sampled according to the distribution d

215
00:07:35,199 --> 00:07:36,720
and the adversary is given the

216
00:07:36,720 --> 00:07:38,720
commitment to this vector using the

217
00:07:38,720 --> 00:07:40,800
vector commitment scheme

218
00:07:40,800 --> 00:07:42,960
then the adversary outputs a subset i of

219
00:07:42,960 --> 00:07:45,120
indices between 1 and q

220
00:07:45,120 --> 00:07:48,080
and receives local openings to all the x

221
00:07:48,080 --> 00:07:51,360
i's that correspond to this subset i

222
00:07:51,360 --> 00:07:53,280
the adversary then outputs a vector

223
00:07:53,280 --> 00:07:56,319
commitment vc prime and specifies a

224
00:07:56,319 --> 00:07:59,840
subset j this subset specifies the

225
00:07:59,840 --> 00:08:01,840
locations which the adversary will later

226
00:08:01,840 --> 00:08:04,800
open with respect to vc prime

227
00:08:04,800 --> 00:08:07,199
finally the adversary receives all

228
00:08:07,199 --> 00:08:09,360
remaining local openings with respect to

229
00:08:09,360 --> 00:08:11,520
the vector commitment it received

230
00:08:11,520 --> 00:08:13,599
and replies with local openings with

231
00:08:13,599 --> 00:08:16,800
respect to vc prime to all the indices

232
00:08:16,800 --> 00:08:20,240
in the subset j outputted before

233
00:08:20,240 --> 00:08:22,160
we denote each value opened by the

234
00:08:22,160 --> 00:08:25,520
adversary by x i prime where x i prime

235
00:08:25,520 --> 00:08:27,039
is simply bought

236
00:08:27,039 --> 00:08:30,319
if the index i is not in the subset j

237
00:08:30,319 --> 00:08:32,958
moreover if the adversary simply copies

238
00:08:32,958 --> 00:08:35,519
the vector commitment it received or if

239
00:08:35,519 --> 00:08:38,159
any of its openings is invalid

240
00:08:38,159 --> 00:08:40,799
then we replace all of the x i primes

241
00:08:40,799 --> 00:08:42,559
with bot

242
00:08:42,559 --> 00:08:45,519
the output of the experiment is composed

243
00:08:45,519 --> 00:08:48,560
of the vector x1 to xq

244
00:08:48,560 --> 00:08:52,000
the vector x1 prime to xq prime of the

245
00:08:52,000 --> 00:08:54,399
values opened by the adversary

246
00:08:54,399 --> 00:08:58,320
and the subset i chosen by the adversary

247
00:08:58,320 --> 00:09:00,640
the ideal experiment also begins with

248
00:09:00,640 --> 00:09:03,279
sampling a vector x1 to xq of values

249
00:09:03,279 --> 00:09:05,440
according to the distribution d

250
00:09:05,440 --> 00:09:07,680
but there are no commitments involved

251
00:09:07,680 --> 00:09:10,800
instead the simulator s outputs a subset

252
00:09:10,800 --> 00:09:13,760
i and simply receives the values x i in

253
00:09:13,760 --> 00:09:15,680
the clear for every little i in the

254
00:09:15,680 --> 00:09:17,440
subset i

255
00:09:17,440 --> 00:09:19,200
the simulator also outputs no

256
00:09:19,200 --> 00:09:22,480
commitments and instead it specifies a

257
00:09:22,480 --> 00:09:23,839
subset j

258
00:09:23,839 --> 00:09:27,440
and immediately outputs values x i prime

259
00:09:27,440 --> 00:09:30,399
for every i in the subset j

260
00:09:30,399 --> 00:09:33,440
as before for every i not in j

261
00:09:33,440 --> 00:09:36,880
we set x i prime to be bought and the

262
00:09:36,880 --> 00:09:39,600
output of the experiment is the vector

263
00:09:39,600 --> 00:09:41,519
x1 to xq

264
00:09:41,519 --> 00:09:43,519
the vector of values outputted by the

265
00:09:43,519 --> 00:09:47,279
simulator x1 prime to xq prime

266
00:09:47,279 --> 00:09:51,040
and the subset i chosen by the simulator

267
00:09:51,040 --> 00:09:53,440
again our normal ability definition

268
00:09:53,440 --> 00:09:55,600
requires that this output is

269
00:09:55,600 --> 00:09:57,600
indistinguishable from the output of the

270
00:09:57,600 --> 00:09:59,839
real experiment described in the

271
00:09:59,839 --> 00:10:02,240
previous slide

272
00:10:02,240 --> 00:10:05,120
note that existing vcs do not satisfy

273
00:10:05,120 --> 00:10:07,680
our notion of normalizability

274
00:10:07,680 --> 00:10:09,920
first merkel trees in the standard model

275
00:10:09,920 --> 00:10:11,519
may be malleable

276
00:10:11,519 --> 00:10:14,160
informally this is due to the fact

277
00:10:14,160 --> 00:10:16,720
that potentially the underlying hash

278
00:10:16,720 --> 00:10:19,120
function used to construct the tree can

279
00:10:19,120 --> 00:10:22,000
be malleable in and of itself

280
00:10:22,000 --> 00:10:24,000
second more recent algebraic

281
00:10:24,000 --> 00:10:26,720
constructions are also malleable due to

282
00:10:26,720 --> 00:10:29,040
the homomorphic properties

283
00:10:29,040 --> 00:10:31,360
this is often by design as to allow for

284
00:10:31,360 --> 00:10:34,079
public updates to the committed vector

285
00:10:34,079 --> 00:10:35,440
you can see the paper for a more

286
00:10:35,440 --> 00:10:37,519
in-depth discussion of the malleability

287
00:10:37,519 --> 00:10:39,760
of existing vcs

288
00:10:39,760 --> 00:10:41,760
before describing our construction of

289
00:10:41,760 --> 00:10:43,519
non-malleable vcs

290
00:10:43,519 --> 00:10:45,680
we observed that simple approaches fail

291
00:10:45,680 --> 00:10:48,320
to satisfy our security notion

292
00:10:48,320 --> 00:10:50,000
first consider the approach of

293
00:10:50,000 --> 00:10:52,320
committing to each entry using some

294
00:10:52,320 --> 00:10:54,320
non-malleable commitment scheme

295
00:10:54,320 --> 00:10:56,560
and then committing to the vector of all

296
00:10:56,560 --> 00:10:58,720
commitments using the vector commitment

297
00:10:58,720 --> 00:11:01,680
scheme this approach fails due to the

298
00:11:01,680 --> 00:11:03,200
potential malleability of the vector

299
00:11:03,200 --> 00:11:04,480
commitment scheme

300
00:11:04,480 --> 00:11:06,880
for example it might be the case that

301
00:11:06,880 --> 00:11:09,279
given a vc to some vector it's easy to

302
00:11:09,279 --> 00:11:10,959
commit to the same vector while

303
00:11:10,959 --> 00:11:14,399
replacing only its first entry

304
00:11:14,399 --> 00:11:16,079
another approach might be to first

305
00:11:16,079 --> 00:11:18,160
commit to the entire vector using the

306
00:11:18,160 --> 00:11:19,760
vector commitment scheme

307
00:11:19,760 --> 00:11:21,839
and then to commit to the resulting

308
00:11:21,839 --> 00:11:24,000
commitment using the non-malleable

309
00:11:24,000 --> 00:11:25,279
commitment scheme

310
00:11:25,279 --> 00:11:27,200
so this works if you only consider the

311
00:11:27,200 --> 00:11:28,880
standard normal ability notion of

312
00:11:28,880 --> 00:11:31,120
non-interactive commitments but fails

313
00:11:31,120 --> 00:11:33,360
when considering our definition that

314
00:11:33,360 --> 00:11:35,360
takes into account adversaries that

315
00:11:35,360 --> 00:11:37,360
observe local openings

316
00:11:37,360 --> 00:11:39,760
the reason is that after observing a

317
00:11:39,760 --> 00:11:42,160
single local opening the adversary

318
00:11:42,160 --> 00:11:44,560
learns the potentially malleable vector

319
00:11:44,560 --> 00:11:47,040
commitment to the underlying vector

320
00:11:47,040 --> 00:11:49,839
and then we're back to square one

321
00:11:49,839 --> 00:11:51,920
okay so now let's define our notion of

322
00:11:51,920 --> 00:11:53,680
locally equivocal commitments with all

323
00:11:53,680 --> 00:11:54,839
but one

324
00:11:54,839 --> 00:11:57,760
binding our notion augments the standard

325
00:11:57,760 --> 00:12:00,480
notion of tag-based commitments with two

326
00:12:00,480 --> 00:12:02,000
additional properties local

327
00:12:02,000 --> 00:12:05,760
equivocability and all but one binding

328
00:12:05,760 --> 00:12:07,760
it should also be mentioned that it's

329
00:12:07,760 --> 00:12:10,320
related but different from the notion of

330
00:12:10,320 --> 00:12:12,800
identity-based scrap door commitments

331
00:12:12,800 --> 00:12:14,399
and you can see the paper for a complete

332
00:12:14,399 --> 00:12:17,279
comparison of the two notions

333
00:12:17,279 --> 00:12:19,760
so let's start by defining the syntax of

334
00:12:19,760 --> 00:12:22,720
our locally equivocable commitments

335
00:12:22,720 --> 00:12:24,560
the setup algorithm

336
00:12:24,560 --> 00:12:27,279
takes in an integer queue and outputs a

337
00:12:27,279 --> 00:12:28,959
crs

338
00:12:28,959 --> 00:12:30,959
the commit algorithm

339
00:12:30,959 --> 00:12:33,920
takes the crs

340
00:12:34,240 --> 00:12:36,959
and index i from 1 to q

341
00:12:36,959 --> 00:12:38,800
and the tag tau

342
00:12:38,800 --> 00:12:41,519
and outputs a commitment string c

343
00:12:41,519 --> 00:12:44,880
together with a d commitment d

344
00:12:44,880 --> 00:12:48,240
the d commit algorithm takes in the crs

345
00:12:48,240 --> 00:12:51,360
a commitment c a d commitment d

346
00:12:51,360 --> 00:12:54,000
and index i and the tag tau

347
00:12:54,000 --> 00:12:57,360
and outputs either an element x or the

348
00:12:57,360 --> 00:13:00,160
rejection symbol bot

349
00:13:00,160 --> 00:13:01,920
so everything until now is pretty

350
00:13:01,920 --> 00:13:03,120
standard

351
00:13:03,120 --> 00:13:05,440
maybe except the fact that the setup

352
00:13:05,440 --> 00:13:08,079
algorithm takes in the integer q

353
00:13:08,079 --> 00:13:10,000
and the commitment and the commitment

354
00:13:10,000 --> 00:13:13,279
algorithms taking the index i

355
00:13:13,279 --> 00:13:14,959
so this is a good point to talk about

356
00:13:14,959 --> 00:13:16,560
instantiations

357
00:13:16,560 --> 00:13:18,240
in the paper we show that existing

358
00:13:18,240 --> 00:13:20,320
approaches for constructing revocable

359
00:13:20,320 --> 00:13:21,920
commitment schemes from algebraic

360
00:13:21,920 --> 00:13:25,120
assumptions satisfy our notion as well

361
00:13:25,120 --> 00:13:27,200
and we also show a generic construction

362
00:13:27,200 --> 00:13:29,200
from any one-way function which is of

363
00:13:29,200 --> 00:13:31,440
theoretical interest

364
00:13:31,440 --> 00:13:33,600
now the dependency of the setup

365
00:13:33,600 --> 00:13:36,000
commitment and decommitment algorithms

366
00:13:36,000 --> 00:13:37,760
on q and on i

367
00:13:37,760 --> 00:13:39,519
only comes into play in the generic

368
00:13:39,519 --> 00:13:41,920
construction from any one-way function

369
00:13:41,920 --> 00:13:43,920
and doesn't come into play in the more

370
00:13:43,920 --> 00:13:47,880
efficient algebraic constructions

371
00:13:48,240 --> 00:13:50,560
to the first three algorithms we add

372
00:13:50,560 --> 00:13:53,040
three covocation algorithms

373
00:13:53,040 --> 00:13:56,000
alt setup takes in queue and outputs

374
00:13:56,000 --> 00:13:59,279
some state st0 equiv1

375
00:13:59,279 --> 00:14:02,000
takes the state and the tag tau and

376
00:14:02,000 --> 00:14:05,120
outputs a common reference string crs

377
00:14:05,120 --> 00:14:06,240
hat

378
00:14:06,240 --> 00:14:09,279
commitments c1 to cq

379
00:14:09,279 --> 00:14:13,120
and an updated state st1

380
00:14:13,120 --> 00:14:17,279
equiv2 takes an element x and index i

381
00:14:17,279 --> 00:14:20,639
the state st1 and the tag tau

382
00:14:20,639 --> 00:14:24,480
and outputs an opening d-hat

383
00:14:24,480 --> 00:14:27,440
the requirement is that the hat indeed

384
00:14:27,440 --> 00:14:30,560
opens ci to the element x with respect

385
00:14:30,560 --> 00:14:32,240
to the tag tau

386
00:14:32,240 --> 00:14:35,600
more specifically for every q tau i and

387
00:14:35,600 --> 00:14:38,000
x the following should hold

388
00:14:38,000 --> 00:14:41,360
so if we first sample a state st0 using

389
00:14:41,360 --> 00:14:43,360
alt setup on q

390
00:14:43,360 --> 00:14:47,440
and then we invoke equiv1 on st0 and tau

391
00:14:47,440 --> 00:14:51,600
to receive a crs crs hat commitment c1

392
00:14:51,600 --> 00:14:52,720
to cq

393
00:14:52,720 --> 00:14:54,959
and the state st1

394
00:14:54,959 --> 00:14:59,600
and finally invoke equiv2 on the x i st1

395
00:14:59,600 --> 00:15:04,160
and tau to receive a decommitment d-hat

396
00:15:04,160 --> 00:15:08,800
then decommitting with crs hat ci d-hat

397
00:15:08,800 --> 00:15:10,399
i and tau

398
00:15:10,399 --> 00:15:12,880
we should get back the element x that we

399
00:15:12,880 --> 00:15:15,920
used to generate d-hat

400
00:15:15,920 --> 00:15:18,639
in addition we ask that the parameters

401
00:15:18,639 --> 00:15:20,639
and commitments generated by the

402
00:15:20,639 --> 00:15:22,720
equivocation algorithms are

403
00:15:22,720 --> 00:15:24,560
indistinguishable from honestly

404
00:15:24,560 --> 00:15:27,680
generated parameters and commitments

405
00:15:27,680 --> 00:15:30,720
so on the one hand we generate crs hat

406
00:15:30,720 --> 00:15:34,399
and commitments c1 hat to cq hat

407
00:15:34,399 --> 00:15:38,240
and using some specific values x1 to xq

408
00:15:38,240 --> 00:15:42,000
we generate d commitments d1 hat to dq

409
00:15:42,000 --> 00:15:43,519
hat

410
00:15:43,519 --> 00:15:45,199
all of that is done using the

411
00:15:45,199 --> 00:15:47,759
equivocation algorithms

412
00:15:47,759 --> 00:15:50,000
on the other hand we have an honestly

413
00:15:50,000 --> 00:15:51,839
generated crs

414
00:15:51,839 --> 00:15:54,240
and honestly generated commitments and

415
00:15:54,240 --> 00:15:58,399
the commitment c1 to cq and d1 to dq

416
00:15:58,399 --> 00:16:00,639
generated using the honest commitment

417
00:16:00,639 --> 00:16:04,320
algorithm and the values x1 to xq

418
00:16:04,320 --> 00:16:06,480
which are the same values that we use to

419
00:16:06,480 --> 00:16:08,480
generate the commitments on the left

420
00:16:08,480 --> 00:16:11,040
side of the slide

421
00:16:11,040 --> 00:16:14,160
now we ask that the crs commitments and

422
00:16:14,160 --> 00:16:16,959
the commitments generated using these

423
00:16:16,959 --> 00:16:20,160
two processes are indistinguishable even

424
00:16:20,160 --> 00:16:22,880
for adversarially chosen tag tau and

425
00:16:22,880 --> 00:16:26,000
values x1 to xq

426
00:16:26,000 --> 00:16:28,240
the second property that we require is

427
00:16:28,240 --> 00:16:30,079
all but one binding

428
00:16:30,079 --> 00:16:33,279
intuitively this property requires that

429
00:16:33,279 --> 00:16:34,959
even an adversary that produces

430
00:16:34,959 --> 00:16:37,519
equivocable commitments with respect to

431
00:16:37,519 --> 00:16:40,079
some tag tao shouldn't be able to open

432
00:16:40,079 --> 00:16:42,160
these commitments to more than a single

433
00:16:42,160 --> 00:16:44,079
value with respect to a different

434
00:16:44,079 --> 00:16:47,680
commitment tag tau prime

435
00:16:47,680 --> 00:16:49,759
so this is defined using the following

436
00:16:49,759 --> 00:16:51,120
experiment

437
00:16:51,120 --> 00:16:53,199
first we let the adversary a output

438
00:16:53,199 --> 00:16:54,800
attack tau

439
00:16:54,800 --> 00:16:57,440
then we sample a state st0 using gal

440
00:16:57,440 --> 00:16:58,720
setup

441
00:16:58,720 --> 00:17:02,720
we invoke equiv1 on st0 and the tag tau

442
00:17:02,720 --> 00:17:04,640
outputted by the adversary

443
00:17:04,640 --> 00:17:06,720
using some honestly generated randomness

444
00:17:06,720 --> 00:17:07,599
row

445
00:17:07,599 --> 00:17:10,640
and this gives us a montgomery things a

446
00:17:10,640 --> 00:17:13,679
common reference string crs hat

447
00:17:13,679 --> 00:17:16,480
we give st0 and the randomness row we

448
00:17:16,480 --> 00:17:19,280
used in equiv1 to the adversary

449
00:17:19,280 --> 00:17:21,520
and then the adversary needs to output a

450
00:17:21,520 --> 00:17:22,880
commitment c

451
00:17:22,880 --> 00:17:26,160
two d commitments d and d prime and

452
00:17:26,160 --> 00:17:29,679
index i and a tag tau prime

453
00:17:29,679 --> 00:17:32,240
the adversary wins if d and d prime are

454
00:17:32,240 --> 00:17:34,320
valid the commitments of c with respect

455
00:17:34,320 --> 00:17:36,880
to the tactile prime to different values

456
00:17:36,880 --> 00:17:38,480
x and x prime

457
00:17:38,480 --> 00:17:41,280
and in addition the tag tau prime is

458
00:17:41,280 --> 00:17:43,360
different than the tag tau used to

459
00:17:43,360 --> 00:17:45,679
generate the crs

460
00:17:45,679 --> 00:17:47,760
and we require that the probability that

461
00:17:47,760 --> 00:17:49,840
the adversary wins is negligible in the

462
00:17:49,840 --> 00:17:52,640
security parameter lambda

463
00:17:52,640 --> 00:17:54,880
okay so equipped with this notion we can

464
00:17:54,880 --> 00:17:56,400
now present our construction of

465
00:17:56,400 --> 00:17:58,640
non-malleable vcs

466
00:17:58,640 --> 00:18:00,160
the construction that we will see in

467
00:18:00,160 --> 00:18:02,080
this talk relies on three building

468
00:18:02,080 --> 00:18:03,120
blocks

469
00:18:03,120 --> 00:18:05,840
a vector commitment scheme vc

470
00:18:05,840 --> 00:18:07,919
a locally equivocable commitment scheme

471
00:18:07,919 --> 00:18:10,480
le with all but one binding

472
00:18:10,480 --> 00:18:12,559
and the one-time strongly unforgeable

473
00:18:12,559 --> 00:18:14,960
signature sig

474
00:18:14,960 --> 00:18:16,240
in this talk we will make the

475
00:18:16,240 --> 00:18:18,320
simplifying assumption that the text

476
00:18:18,320 --> 00:18:20,559
space of le and the verification key

477
00:18:20,559 --> 00:18:22,960
space of sig are the same

478
00:18:22,960 --> 00:18:24,240
this is just for simplicity of

479
00:18:24,240 --> 00:18:26,160
presentation and in the full fledged

480
00:18:26,160 --> 00:18:28,320
construction we apply a universal

481
00:18:28,320 --> 00:18:29,760
one-way hash function to map

482
00:18:29,760 --> 00:18:32,160
verification keys to tags following

483
00:18:32,160 --> 00:18:33,840
standard techniques when constructing

484
00:18:33,840 --> 00:18:37,120
non-valuable non-interactive commitments

485
00:18:37,120 --> 00:18:39,520
so the crs of our non-malleable vector

486
00:18:39,520 --> 00:18:41,039
commitment scheme is simply the

487
00:18:41,039 --> 00:18:44,400
concatenation of the crs says of vc and

488
00:18:44,400 --> 00:18:46,160
le

489
00:18:46,160 --> 00:18:50,000
then to commit to a vector x1 to xq

490
00:18:50,000 --> 00:18:52,400
we sample the sign-in key sk and the

491
00:18:52,400 --> 00:18:55,039
verification key vk

492
00:18:55,039 --> 00:18:57,280
commit to each element of the vector

493
00:18:57,280 --> 00:18:59,360
using the locally equivocal commitment

494
00:18:59,360 --> 00:19:02,640
scheme le where the verification key vk

495
00:19:02,640 --> 00:19:06,320
is used as the tag for the commitments

496
00:19:06,320 --> 00:19:07,760
then we commit to all of these

497
00:19:07,760 --> 00:19:09,840
commitments using the vector commitment

498
00:19:09,840 --> 00:19:11,280
scheme vc

499
00:19:11,280 --> 00:19:13,039
and finally we sign the resulting

500
00:19:13,039 --> 00:19:15,600
commitment v-com using the sign-in key

501
00:19:15,600 --> 00:19:17,200
as k

502
00:19:17,200 --> 00:19:19,360
the final commitment is then composed of

503
00:19:19,360 --> 00:19:21,679
the vector commitment vcom

504
00:19:21,679 --> 00:19:24,400
the verification key vk

505
00:19:24,400 --> 00:19:26,240
and the signature sigma

506
00:19:26,240 --> 00:19:28,000
to locally open this commitment at

507
00:19:28,000 --> 00:19:30,320
position i one simply outputs the

508
00:19:30,320 --> 00:19:32,080
corresponding locally equivocable

509
00:19:32,080 --> 00:19:33,679
commitment ci

510
00:19:33,679 --> 00:19:36,400
together with its opening di and the

511
00:19:36,400 --> 00:19:39,679
proof pi i that ci is indeed the entry i

512
00:19:39,679 --> 00:19:42,559
of the vector underlying vcom

513
00:19:42,559 --> 00:19:44,400
so we won't see a complete proof for the

514
00:19:44,400 --> 00:19:46,000
normal ability of this construction in

515
00:19:46,000 --> 00:19:47,919
this talk but we'll see a high level

516
00:19:47,919 --> 00:19:50,000
sketch of the main idea

517
00:19:50,000 --> 00:19:52,240
this idea extends the classic template

518
00:19:52,240 --> 00:19:54,080
of how to prove the normal ability of

519
00:19:54,080 --> 00:19:56,240
non-interactive commitments to the

520
00:19:56,240 --> 00:19:58,559
setting of vcs and locally equivocal

521
00:19:58,559 --> 00:20:01,280
commitments for the sake of simplicity

522
00:20:01,280 --> 00:20:02,960
in this sketch we'll ignore the fact

523
00:20:02,960 --> 00:20:04,480
that the adversary observes local

524
00:20:04,480 --> 00:20:06,559
openings before outputting their vector

525
00:20:06,559 --> 00:20:07,679
commitment

526
00:20:07,679 --> 00:20:09,440
and we'll assume that the adversary

527
00:20:09,440 --> 00:20:11,280
opens all of the entries of the vector

528
00:20:11,280 --> 00:20:13,120
commitment that it issues in the

529
00:20:13,120 --> 00:20:15,280
security experiment

530
00:20:15,280 --> 00:20:17,039
so the adversary receives a vector

531
00:20:17,039 --> 00:20:19,440
commitment according to our construction

532
00:20:19,440 --> 00:20:21,600
so it includes a vector commitment vcom

533
00:20:21,600 --> 00:20:24,240
a verification key vk and the signature

534
00:20:24,240 --> 00:20:25,600
sigma

535
00:20:25,600 --> 00:20:27,520
it then outputs a different vector

536
00:20:27,520 --> 00:20:29,760
commitment which includes a vector

537
00:20:29,760 --> 00:20:32,640
commitment vcom hat a verification key

538
00:20:32,640 --> 00:20:36,320
vk hat and the signature sigma hat

539
00:20:36,320 --> 00:20:37,919
the adversary now receives local

540
00:20:37,919 --> 00:20:39,840
openings to all of the entries of the

541
00:20:39,840 --> 00:20:42,000
vector underlined v com

542
00:20:42,000 --> 00:20:44,960
and outputs local openings to all of the

543
00:20:44,960 --> 00:20:47,280
entries of the vector underlying vcom

544
00:20:47,280 --> 00:20:48,400
hat

545
00:20:48,400 --> 00:20:50,400
we'll consider two cases

546
00:20:50,400 --> 00:20:52,960
the first is the easy one and in this

547
00:20:52,960 --> 00:20:55,520
case the verification key vk hat that

548
00:20:55,520 --> 00:20:58,080
the adversary outputs is the same as the

549
00:20:58,080 --> 00:21:00,720
verification qvk it receives

550
00:21:00,720 --> 00:21:02,480
in this case in order to have a

551
00:21:02,480 --> 00:21:04,799
non-trivial advantage it must be the

552
00:21:04,799 --> 00:21:06,960
case that vcom hat is different from

553
00:21:06,960 --> 00:21:09,520
vcom or sigma hat is different from

554
00:21:09,520 --> 00:21:10,640
sigma

555
00:21:10,640 --> 00:21:12,559
otherwise the commitment outputted by

556
00:21:12,559 --> 00:21:14,559
the adversary is exactly the same as the

557
00:21:14,559 --> 00:21:16,880
commitment it receives which informally

558
00:21:16,880 --> 00:21:18,720
speaking gives no advantage in the

559
00:21:18,720 --> 00:21:20,320
security definition

560
00:21:20,320 --> 00:21:22,480
but this can only be the case if the

561
00:21:22,480 --> 00:21:24,480
adversary successfully breaks the strong

562
00:21:24,480 --> 00:21:26,559
conforgibility of the underlying

563
00:21:26,559 --> 00:21:29,120
signature scheme sig

564
00:21:29,120 --> 00:21:31,360
the second case in which vk hat is

565
00:21:31,360 --> 00:21:33,120
different from vk is the more

566
00:21:33,120 --> 00:21:34,960
technically involved one

567
00:21:34,960 --> 00:21:37,360
the main observation here is that any

568
00:21:37,360 --> 00:21:39,840
advantage that the adversary might have

569
00:21:39,840 --> 00:21:41,840
must come from their ability to choose

570
00:21:41,840 --> 00:21:43,840
the values to which it provides local

571
00:21:43,840 --> 00:21:46,559
openings after already outputting its

572
00:21:46,559 --> 00:21:49,200
vector commitment vcom hat

573
00:21:49,200 --> 00:21:51,120
the reason for that is that the

574
00:21:51,120 --> 00:21:53,200
commitment vcom that the adversary

575
00:21:53,200 --> 00:21:54,320
receives at the beginning of the

576
00:21:54,320 --> 00:21:56,799
experiment is indistinguishable from a

577
00:21:56,799 --> 00:21:59,440
vector commitment to a vector of locally

578
00:21:59,440 --> 00:22:01,840
equivocable commitments

579
00:22:01,840 --> 00:22:03,919
such a commitment holds no information

580
00:22:03,919 --> 00:22:07,280
about the underlying vector x1 to xq and

581
00:22:07,280 --> 00:22:09,679
so intuitively speaking any information

582
00:22:09,679 --> 00:22:11,280
that the adversary learns about this

583
00:22:11,280 --> 00:22:14,000
vector must come from the local openings

584
00:22:14,000 --> 00:22:15,679
that it receives

585
00:22:15,679 --> 00:22:17,760
recall that a non-trivial advantage of

586
00:22:17,760 --> 00:22:20,480
the adversary means that it can open v

587
00:22:20,480 --> 00:22:22,880
com hat to values that are non-trivially

588
00:22:22,880 --> 00:22:27,200
related to x1 to xq this means that if

589
00:22:27,200 --> 00:22:29,039
we provide the adversary with different

590
00:22:29,039 --> 00:22:31,760
local openings to independent values

591
00:22:31,760 --> 00:22:34,480
x1 prime to xq prime

592
00:22:34,480 --> 00:22:36,400
it should be able to open its vector

593
00:22:36,400 --> 00:22:38,799
commitment to different values as well

594
00:22:38,799 --> 00:22:41,679
at least in one coordinate i

595
00:22:41,679 --> 00:22:44,000
but this means that the adversary can

596
00:22:44,000 --> 00:22:47,039
either open v com hat at position i to

597
00:22:47,039 --> 00:22:49,120
two different values which breaks the

598
00:22:49,120 --> 00:22:52,080
position binding of vc

599
00:22:52,080 --> 00:22:54,480
or it can open some locally equivocable

600
00:22:54,480 --> 00:22:57,520
commitment c i hat to two different

601
00:22:57,520 --> 00:23:01,840
values x i hat and x i hat prime

602
00:23:01,840 --> 00:23:04,159
recall that we are in the case where v k

603
00:23:04,159 --> 00:23:06,400
hat is different from v k

604
00:23:06,400 --> 00:23:08,400
and so the adversary in fact breaks

605
00:23:08,400 --> 00:23:11,200
binding with respect to a tag which is

606
00:23:11,200 --> 00:23:13,280
different than the tag used to generate

607
00:23:13,280 --> 00:23:14,720
vcom

608
00:23:14,720 --> 00:23:17,280
hence even though in the proof we switch

609
00:23:17,280 --> 00:23:20,080
to equivocable parameters the adversary

610
00:23:20,080 --> 00:23:22,400
should still not be able to do so since

611
00:23:22,400 --> 00:23:24,320
it breaks the all but one binding of the

612
00:23:24,320 --> 00:23:27,919
locally equivocal commitment scheme le

613
00:23:27,919 --> 00:23:29,840
okay so let's conclude

614
00:23:29,840 --> 00:23:31,760
what we saw in this talk is a notion of

615
00:23:31,760 --> 00:23:33,919
normal ability for vcs

616
00:23:33,919 --> 00:23:35,520
and the framework for constructing

617
00:23:35,520 --> 00:23:37,600
non-malleable visas

618
00:23:37,600 --> 00:23:39,440
we presented the new primitive called

619
00:23:39,440 --> 00:23:41,279
locally equivocable commitments with all

620
00:23:41,279 --> 00:23:42,880
but one binding

621
00:23:42,880 --> 00:23:45,279
and presented the generic construction

622
00:23:45,279 --> 00:23:48,240
that uses such commitments to transform

623
00:23:48,240 --> 00:23:51,440
any vc into a normalizable one

624
00:23:51,440 --> 00:23:53,039
in the paper we also consider

625
00:23:53,039 --> 00:23:55,440
non-malleable dynamic vcs

626
00:23:55,440 --> 00:23:57,600
the inaudibility of random oracle model

627
00:23:57,600 --> 00:23:59,520
miracle trees and we discuss some

628
00:23:59,520 --> 00:24:02,880
applications of non-malleable vcs

629
00:24:02,880 --> 00:24:04,799
an interesting open problem which is not

630
00:24:04,799 --> 00:24:06,880
addressed by our construction is to

631
00:24:06,880 --> 00:24:08,640
construct non-malleable sub-vector

632
00:24:08,640 --> 00:24:11,120
commitments which are vector commitments

633
00:24:11,120 --> 00:24:13,600
that allow for sub-vector openings which

634
00:24:13,600 --> 00:24:15,679
are more efficient than simply opening

635
00:24:15,679 --> 00:24:16,840
each entry

636
00:24:16,840 --> 00:24:19,039
independently okay so with that i will

637
00:24:19,039 --> 00:24:20,480
conclude the talk and thank you for

638
00:24:20,480 --> 00:24:23,440
listening

