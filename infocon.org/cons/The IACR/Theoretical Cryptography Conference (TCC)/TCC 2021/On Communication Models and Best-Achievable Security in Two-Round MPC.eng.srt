1
00:00:01,040 --> 00:00:03,840
hi i'm arushi i'm going to present this

2
00:00:03,840 --> 00:00:06,480
joint work with abhishek jain manoj

3
00:00:06,480 --> 00:00:08,880
prabhakaran and rajiv raghunath on

4
00:00:08,880 --> 00:00:11,200
communication models in best achievable

5
00:00:11,200 --> 00:00:14,719
security in two round mpc

6
00:00:14,719 --> 00:00:17,840
secure multiparty computation or npc is

7
00:00:17,840 --> 00:00:20,080
an interactive protocol that allows a

8
00:00:20,080 --> 00:00:22,720
group of mutually distrusting parties to

9
00:00:22,720 --> 00:00:24,560
jointly compute a function on their

10
00:00:24,560 --> 00:00:26,320
private inputs

11
00:00:26,320 --> 00:00:28,960
the security of mpc guarantees that an

12
00:00:28,960 --> 00:00:30,880
adversary who corrupts a subset of the

13
00:00:30,880 --> 00:00:33,520
parties should not learn anything beyond

14
00:00:33,520 --> 00:00:36,640
the output of the function

15
00:00:36,719 --> 00:00:38,800
most npc protocols considered in

16
00:00:38,800 --> 00:00:41,280
literature are designed over two kinds

17
00:00:41,280 --> 00:00:43,520
of communication channels namely

18
00:00:43,520 --> 00:00:46,160
broadcast and point to point

19
00:00:46,160 --> 00:00:48,800
a broadcast channel allows the sender to

20
00:00:48,800 --> 00:00:50,640
send the same message to multiple

21
00:00:50,640 --> 00:00:51,840
receivers

22
00:00:51,840 --> 00:00:53,840
while point to point channels enable

23
00:00:53,840 --> 00:00:56,320
parties to exchange private messages

24
00:00:56,320 --> 00:00:58,559
amongst each other

25
00:00:58,559 --> 00:01:00,640
these communication models play a

26
00:01:00,640 --> 00:01:03,600
fundamental role in deciding what kind

27
00:01:03,600 --> 00:01:06,240
of security can be achieved by the mpc

28
00:01:06,240 --> 00:01:09,600
protocol and under what assumptions

29
00:01:09,600 --> 00:01:12,080
for instance a broadcast channel is

30
00:01:12,080 --> 00:01:14,880
necessary for achieving security when

31
00:01:14,880 --> 00:01:16,799
the number of corrupt parties are

32
00:01:16,799 --> 00:01:19,119
greater than one-third

33
00:01:19,119 --> 00:01:21,439
fraction of the total parties

34
00:01:21,439 --> 00:01:23,119
while point-to-point channels are

35
00:01:23,119 --> 00:01:24,960
necessary for achieving information

36
00:01:24,960 --> 00:01:27,840
theoretic security

37
00:01:27,840 --> 00:01:30,240
in this work our goal is to examine the

38
00:01:30,240 --> 00:01:33,360
role of these communication models

39
00:01:33,360 --> 00:01:35,920
in two round mpc

40
00:01:35,920 --> 00:01:38,079
two rounds in the mpc setting are

41
00:01:38,079 --> 00:01:41,360
clearly minimal since one round npc is

42
00:01:41,360 --> 00:01:43,680
known to be impossible

43
00:01:43,680 --> 00:01:46,159
in recent years a series of works have

44
00:01:46,159 --> 00:01:48,159
made significant advances in the

45
00:01:48,159 --> 00:01:50,320
two-round mpc setting

46
00:01:50,320 --> 00:01:52,560
these works have managed to establish

47
00:01:52,560 --> 00:01:55,360
feasibility of general computation in

48
00:01:55,360 --> 00:01:57,040
two round mpc

49
00:01:57,040 --> 00:01:59,119
relying essentially on minimal

50
00:01:59,119 --> 00:02:02,479
computational assumptions

51
00:02:03,759 --> 00:02:05,920
in this work we consider the honest

52
00:02:05,920 --> 00:02:08,479
majority setting where the adversary is

53
00:02:08,479 --> 00:02:10,479
allowed to corrupt a minority of the

54
00:02:10,479 --> 00:02:12,000
parties

55
00:02:12,000 --> 00:02:14,239
there are numerous advantages of working

56
00:02:14,239 --> 00:02:15,599
in the setting

57
00:02:15,599 --> 00:02:17,120
for instance

58
00:02:17,120 --> 00:02:19,599
or the honest majority setting enables

59
00:02:19,599 --> 00:02:22,000
protocols with stronger security

60
00:02:22,000 --> 00:02:23,599
guarantees

61
00:02:23,599 --> 00:02:26,160
secondly unlike the dishonest majority

62
00:02:26,160 --> 00:02:27,040
setting

63
00:02:27,040 --> 00:02:29,280
protocols in the honest majority setting

64
00:02:29,280 --> 00:02:31,840
can be designed only based on symmetric

65
00:02:31,840 --> 00:02:32,959
primitives

66
00:02:32,959 --> 00:02:35,440
which in general are more efficient than

67
00:02:35,440 --> 00:02:37,840
public key primitives

68
00:02:37,840 --> 00:02:40,319
moreover it is possible to design

69
00:02:40,319 --> 00:02:42,239
protocols with fewer rounds in the

70
00:02:42,239 --> 00:02:43,760
setting

71
00:02:43,760 --> 00:02:46,239
and finally working in this setting is

72
00:02:46,239 --> 00:02:49,040
truly justified because it often holds

73
00:02:49,040 --> 00:02:51,680
up in practical applications where these

74
00:02:51,680 --> 00:02:56,319
protocols are expected to be deployed

75
00:02:57,280 --> 00:02:59,840
as i mentioned earlier in this work we

76
00:02:59,840 --> 00:03:02,159
consider the two-round honest majority

77
00:03:02,159 --> 00:03:04,640
setting and investigate in different

78
00:03:04,640 --> 00:03:06,879
communication models

79
00:03:06,879 --> 00:03:09,360
involving broadcast and point-to-point

80
00:03:09,360 --> 00:03:10,560
channels

81
00:03:10,560 --> 00:03:13,519
what levels of security are achievable

82
00:03:13,519 --> 00:03:15,760
and under what assumptions

83
00:03:15,760 --> 00:03:18,800
we primarily focus on the plane model

84
00:03:18,800 --> 00:03:21,280
that is without any trusted

85
00:03:21,280 --> 00:03:23,040
setup assumptions

86
00:03:23,040 --> 00:03:25,280
but sometimes we augment this plane

87
00:03:25,280 --> 00:03:28,159
model with an untrusted or bare public

88
00:03:28,159 --> 00:03:30,799
key infrastructure setup where the

89
00:03:30,799 --> 00:03:32,879
parties are allowed to choose their own

90
00:03:32,879 --> 00:03:35,200
public keys and post them on a public

91
00:03:35,200 --> 00:03:37,920
bulletin board

92
00:03:38,480 --> 00:03:40,640
let me first quickly recall all the

93
00:03:40,640 --> 00:03:44,480
commonly used security notions in mpc

94
00:03:44,480 --> 00:03:46,799
the simplest one of course is privacy

95
00:03:46,799 --> 00:03:49,519
against a semi honest or an honest but

96
00:03:49,519 --> 00:03:52,080
curious adversary

97
00:03:52,080 --> 00:03:54,080
the case of malicious adversaries is

98
00:03:54,080 --> 00:03:56,400
slightly more complex and a variety of

99
00:03:56,400 --> 00:03:58,560
security notions have been considered in

100
00:03:58,560 --> 00:04:00,319
the setting

101
00:04:00,319 --> 00:04:01,360
the most

102
00:04:01,360 --> 00:04:03,920
common one being security with abort

103
00:04:03,920 --> 00:04:05,920
where the adversary can prevent the

104
00:04:05,920 --> 00:04:08,000
honest parties from learning the output

105
00:04:08,000 --> 00:04:11,920
by prematurely aborting the protocol

106
00:04:11,920 --> 00:04:14,080
three variants of security with the bot

107
00:04:14,080 --> 00:04:15,840
are often considered in existing

108
00:04:15,840 --> 00:04:17,358
literature

109
00:04:17,358 --> 00:04:19,680
the first one is security with selective

110
00:04:19,680 --> 00:04:21,600
abort where the adversary may

111
00:04:21,600 --> 00:04:24,240
selectively force a subset of the honest

112
00:04:24,240 --> 00:04:26,720
parties to abort

113
00:04:26,720 --> 00:04:29,440
the next one is security with unanimous

114
00:04:29,440 --> 00:04:31,600
abort where the adversary may still

115
00:04:31,600 --> 00:04:33,520
prevent the honest parties from learning

116
00:04:33,520 --> 00:04:36,240
the output but the honest parties all

117
00:04:36,240 --> 00:04:40,240
agree on whether or not to abort

118
00:04:40,400 --> 00:04:42,080
finally in the security with

119
00:04:42,080 --> 00:04:44,720
identifiable abort the honest parties

120
00:04:44,720 --> 00:04:47,040
not only agree on whether or not to

121
00:04:47,040 --> 00:04:49,759
abort but in the in case they abort they

122
00:04:49,759 --> 00:04:52,720
are also able to identify at least one

123
00:04:52,720 --> 00:04:57,840
corrupt party that caused the abort

124
00:04:57,840 --> 00:05:00,240
finally the strongest notion is that of

125
00:05:00,240 --> 00:05:02,479
guaranteed output delivery

126
00:05:02,479 --> 00:05:04,639
where the honest parties are guaranteed

127
00:05:04,639 --> 00:05:07,280
to learn the output no matter what even

128
00:05:07,280 --> 00:05:09,440
if the adversary misbehaves

129
00:05:09,440 --> 00:05:11,600
this notion can be considered against

130
00:05:11,600 --> 00:05:14,240
full-on malicious adversaries or against

131
00:05:14,240 --> 00:05:16,880
just fail-stop adversaries who behave

132
00:05:16,880 --> 00:05:19,440
like semi-honest adversaries except that

133
00:05:19,440 --> 00:05:24,120
they may prematurely abort the protocol

134
00:05:24,240 --> 00:05:26,720
overall we have the following hierarchy

135
00:05:26,720 --> 00:05:28,479
of security notions

136
00:05:28,479 --> 00:05:29,919
starting with security against

137
00:05:29,919 --> 00:05:31,919
semi-honest adversaries

138
00:05:31,919 --> 00:05:33,840
then we have security with selective

139
00:05:33,840 --> 00:05:35,199
award

140
00:05:35,199 --> 00:05:38,639
then security with unanimous abort then

141
00:05:38,639 --> 00:05:40,880
identify a bill abort and finally the

142
00:05:40,880 --> 00:05:42,880
strongest one is guaranteed output

143
00:05:42,880 --> 00:05:45,840
delivery against malicious adversaries

144
00:05:45,840 --> 00:05:47,919
and similarly we can have another set of

145
00:05:47,919 --> 00:05:49,520
hierarchy

146
00:05:49,520 --> 00:05:51,919
starting with security against semi

147
00:05:51,919 --> 00:05:53,600
honest adversaries

148
00:05:53,600 --> 00:05:55,440
followed by guaranteed output delivery

149
00:05:55,440 --> 00:05:57,600
against field stop adversaries

150
00:05:57,600 --> 00:05:59,520
and finally guaranteed output delivery

151
00:05:59,520 --> 00:06:02,880
against malicious adversaries

152
00:06:02,880 --> 00:06:05,280
let's now get an idea of what is already

153
00:06:05,280 --> 00:06:08,080
known in the two-round npc setting

154
00:06:08,080 --> 00:06:10,400
for semi-honest security

155
00:06:10,400 --> 00:06:12,960
gargatol and benomoditol designed

156
00:06:12,960 --> 00:06:15,919
protocols in the broadcast only setting

157
00:06:15,919 --> 00:06:18,240
but since broadcast can very easily be

158
00:06:18,240 --> 00:06:20,960
emulated over point-to-point channels in

159
00:06:20,960 --> 00:06:23,360
the semi-honest setting this result

160
00:06:23,360 --> 00:06:25,600
establishes feasibility in all the

161
00:06:25,600 --> 00:06:27,840
models

162
00:06:27,840 --> 00:06:30,000
gordon at all showed that field stop

163
00:06:30,000 --> 00:06:32,319
guaranteed output delivery protocol is

164
00:06:32,319 --> 00:06:35,440
impossible in the broadcast only setting

165
00:06:35,440 --> 00:06:37,280
while anantha doll established

166
00:06:37,280 --> 00:06:39,520
feasibility in all other communication

167
00:06:39,520 --> 00:06:41,440
models

168
00:06:41,440 --> 00:06:43,919
for selective abort ananth at all

169
00:06:43,919 --> 00:06:46,240
established feasibility in all

170
00:06:46,240 --> 00:06:48,160
communication models except the

171
00:06:48,160 --> 00:06:50,639
broadcast only setting

172
00:06:50,639 --> 00:06:53,360
gankin at all and pathraidol established

173
00:06:53,360 --> 00:06:55,440
impossibility of unanimous abort

174
00:06:55,440 --> 00:06:57,280
identifiable abort and malicious

175
00:06:57,280 --> 00:06:59,199
guaranteed output delivery in the

176
00:06:59,199 --> 00:07:00,840
following communication

177
00:07:00,840 --> 00:07:04,240
models and finally ananthetol and apple

178
00:07:04,240 --> 00:07:06,800
vomit on established feasibility of

179
00:07:06,800 --> 00:07:09,440
unanimous abort in the broadcast plus

180
00:07:09,440 --> 00:07:14,000
b2p and broadcast plus pki models

181
00:07:14,000 --> 00:07:16,319
given these results the question about

182
00:07:16,319 --> 00:07:19,039
feasibility of two-round mpc in the

183
00:07:19,039 --> 00:07:24,159
following scenarios remains unresolved

184
00:07:25,520 --> 00:07:27,919
in this work we provide answers to all

185
00:07:27,919 --> 00:07:30,479
of these questions thereby completing

186
00:07:30,479 --> 00:07:31,919
this picture

187
00:07:31,919 --> 00:07:34,240
we show that security with abort is

188
00:07:34,240 --> 00:07:37,280
impossible in the broadcast only setting

189
00:07:37,280 --> 00:07:39,840
moreover identifiable abort is also

190
00:07:39,840 --> 00:07:42,160
impossible in the broadcast plus p2p

191
00:07:42,160 --> 00:07:43,360
setting

192
00:07:43,360 --> 00:07:45,360
but on the positive side we show that

193
00:07:45,360 --> 00:07:48,000
malicious guaranteed output delivery and

194
00:07:48,000 --> 00:07:50,800
hence identifiable abort are achievable

195
00:07:50,800 --> 00:07:54,800
in the broadcast plus pki setting

196
00:07:55,199 --> 00:07:57,199
overall these results collectively

197
00:07:57,199 --> 00:07:59,919
establish the following hierarchy

198
00:07:59,919 --> 00:08:03,039
between different communication channels

199
00:08:03,039 --> 00:08:05,599
since broadcast plus pki is the only

200
00:08:05,599 --> 00:08:08,080
setting where the strongest security

201
00:08:08,080 --> 00:08:10,240
notion of malicious guaranteed output

202
00:08:10,240 --> 00:08:13,120
delivery is achievable this is clearly

203
00:08:13,120 --> 00:08:15,840
the strongest communication model

204
00:08:15,840 --> 00:08:18,560
then we have broadcast plus p2p which

205
00:08:18,560 --> 00:08:20,879
are necessary for both unanimous and

206
00:08:20,879 --> 00:08:22,639
identifiable abort

207
00:08:22,639 --> 00:08:24,879
then comes point to point channels which

208
00:08:24,879 --> 00:08:27,280
are required for selective abort and

209
00:08:27,280 --> 00:08:29,440
finally the weakest

210
00:08:29,440 --> 00:08:31,599
communication model is the broadcast

211
00:08:31,599 --> 00:08:34,240
only setting

212
00:08:34,640 --> 00:08:37,039
let me now elaborate

213
00:08:37,039 --> 00:08:40,760
on some of our contributions

214
00:08:40,799 --> 00:08:43,120
we first show that two round honest

215
00:08:43,120 --> 00:08:46,080
majority mpc over broadcast channels

216
00:08:46,080 --> 00:08:48,720
implies a two message oblivious transfer

217
00:08:48,720 --> 00:08:49,839
protocol

218
00:08:49,839 --> 00:08:52,160
in the semi-honest setting the two-round

219
00:08:52,160 --> 00:08:54,720
honest majority npc implies a semi

220
00:08:54,720 --> 00:08:57,120
honest ot while in the malicious setting

221
00:08:57,120 --> 00:09:00,800
it implies a maliciously secure ot

222
00:09:00,800 --> 00:09:03,279
moreover this implication holds both in

223
00:09:03,279 --> 00:09:06,560
the plain model and in the crs model

224
00:09:06,560 --> 00:09:09,200
also this implication justifies the use

225
00:09:09,200 --> 00:09:10,880
of ot

226
00:09:10,880 --> 00:09:13,360
in the semi honest protocols designed by

227
00:09:13,360 --> 00:09:16,560
gargital and venomou diatol

228
00:09:16,560 --> 00:09:18,560
we further show that to message

229
00:09:18,560 --> 00:09:21,600
maliciously secure ot is impossible in

230
00:09:21,600 --> 00:09:23,839
the plane model

231
00:09:23,839 --> 00:09:26,080
these two results combined establish

232
00:09:26,080 --> 00:09:28,880
impossibility of security with a board

233
00:09:28,880 --> 00:09:31,120
in the broadcast only setting in the

234
00:09:31,120 --> 00:09:34,560
honest majority setting

235
00:09:35,680 --> 00:09:37,519
this also shows that the use of

236
00:09:37,519 --> 00:09:40,320
point-to-point channels in the work of

237
00:09:40,320 --> 00:09:43,120
uh anantitol and apple vomit or was

238
00:09:43,120 --> 00:09:44,800
indeed necessary

239
00:09:44,800 --> 00:09:47,120
and establishes equivalence between the

240
00:09:47,120 --> 00:09:50,080
honest majority and dishonest majority

241
00:09:50,080 --> 00:09:53,360
in this particular scenario

242
00:09:53,519 --> 00:09:56,080
in the broadcast plus pki setting we

243
00:09:56,080 --> 00:09:58,320
design a two-round protocol

244
00:09:58,320 --> 00:10:00,160
using public key encryption and

245
00:10:00,160 --> 00:10:03,279
multi-crs non-interactive zero knowledge

246
00:10:03,279 --> 00:10:05,839
that achieves guaranteed output delivery

247
00:10:05,839 --> 00:10:07,839
this protocol also establishes

248
00:10:07,839 --> 00:10:10,240
feasibility of identifiable abort in

249
00:10:10,240 --> 00:10:13,360
this communication model

250
00:10:13,360 --> 00:10:15,760
finally we show that identifiable abort

251
00:10:15,760 --> 00:10:19,279
is impossible over broadcast and p2p

252
00:10:19,279 --> 00:10:22,880
channels in the plane model

253
00:10:23,200 --> 00:10:25,440
additionally we also show that a field

254
00:10:25,440 --> 00:10:28,160
stop guaranteed output delivery protocol

255
00:10:28,160 --> 00:10:30,640
that is secure against the corruption of

256
00:10:30,640 --> 00:10:32,959
more than n over three and fewer than n

257
00:10:32,959 --> 00:10:35,279
over two corrupt parties

258
00:10:35,279 --> 00:10:38,800
also implies a two message ot protocol

259
00:10:38,800 --> 00:10:41,920
this justifies the use of ot in the

260
00:10:41,920 --> 00:10:45,360
protocol designed by anathedol

261
00:10:45,360 --> 00:10:47,760
but for this talk i'm only going to

262
00:10:47,760 --> 00:10:51,600
focus on these three results

263
00:10:52,959 --> 00:10:55,360
moving on to the main ideas that help us

264
00:10:55,360 --> 00:10:58,000
achieve these three results

265
00:10:58,000 --> 00:11:00,240
the rest of this talk will be organized

266
00:11:00,240 --> 00:11:02,880
as follows i will start by discussing

267
00:11:02,880 --> 00:11:04,640
our impossibility result in the

268
00:11:04,640 --> 00:11:06,800
broadcast only model

269
00:11:06,800 --> 00:11:08,560
then i will talk about the guaranteed

270
00:11:08,560 --> 00:11:10,079
output delivery protocol in the

271
00:11:10,079 --> 00:11:12,399
broadcast plus pki model

272
00:11:12,399 --> 00:11:14,000
and finally conclude with the

273
00:11:14,000 --> 00:11:16,640
impossibility of identifiable abort in

274
00:11:16,640 --> 00:11:20,480
the broadcast plus p2p model

275
00:11:23,760 --> 00:11:25,920
okay so to quickly recall the oblivious

276
00:11:25,920 --> 00:11:28,000
transfer functionality this is a two

277
00:11:28,000 --> 00:11:30,160
party functionality where the sender

278
00:11:30,160 --> 00:11:33,839
provides two inputs m0 and m1 and the

279
00:11:33,839 --> 00:11:36,800
receiver provides a single bit b as

280
00:11:36,800 --> 00:11:37,680
input

281
00:11:37,680 --> 00:11:39,519
at the end of the protocol the receiver

282
00:11:39,519 --> 00:11:42,399
receives mb as the output

283
00:11:42,399 --> 00:11:44,480
for security we want that the sender

284
00:11:44,480 --> 00:11:46,160
should not learn anything about the

285
00:11:46,160 --> 00:11:48,320
receiver's input

286
00:11:48,320 --> 00:11:50,079
while the receiver should not learn

287
00:11:50,079 --> 00:11:52,480
anything about the sender's other input

288
00:11:52,480 --> 00:11:54,240
that was not revealed as part of the

289
00:11:54,240 --> 00:11:57,279
output of the protocol

290
00:11:57,279 --> 00:11:59,440
we now show that two round maliciously

291
00:11:59,440 --> 00:12:02,160
secure honest majority mpc in the

292
00:12:02,160 --> 00:12:04,560
broadcast only setting implies a two

293
00:12:04,560 --> 00:12:07,760
message oblivious transfer protocol

294
00:12:07,760 --> 00:12:09,839
let's consider the simplest case of

295
00:12:09,839 --> 00:12:12,000
three parties where one party is allowed

296
00:12:12,000 --> 00:12:13,360
to be corrupt

297
00:12:13,360 --> 00:12:15,680
these arguments easily generalize to any

298
00:12:15,680 --> 00:12:17,519
number of parties

299
00:12:17,519 --> 00:12:19,360
in the broadcast only

300
00:12:19,360 --> 00:12:22,560
protocol all parties broadcast a message

301
00:12:22,560 --> 00:12:25,440
in both rounds of the protocol

302
00:12:25,440 --> 00:12:26,959
let's assume that the function that

303
00:12:26,959 --> 00:12:29,040
these parties are computing is the

304
00:12:29,040 --> 00:12:31,839
following multi-party variant of ota

305
00:12:31,839 --> 00:12:34,639
where alice access the receiver bob acts

306
00:12:34,639 --> 00:12:37,040
as the sender while charlie does not

307
00:12:37,040 --> 00:12:39,279
have any input and simply acts as a

308
00:12:39,279 --> 00:12:40,959
helper party

309
00:12:40,959 --> 00:12:45,279
at the end only alice gets an output

310
00:12:45,279 --> 00:12:48,399
since alice is the only output party it

311
00:12:48,399 --> 00:12:50,399
does not need to broadcast its second

312
00:12:50,399 --> 00:12:53,200
round message it can simply compute this

313
00:12:53,200 --> 00:12:55,040
message locally during the output

314
00:12:55,040 --> 00:12:58,000
computation phase

315
00:12:58,800 --> 00:13:01,120
let's now consider a modified protocol

316
00:13:01,120 --> 00:13:03,360
where bob and charlie operate as a

317
00:13:03,360 --> 00:13:06,320
single entity

318
00:13:06,320 --> 00:13:08,720
now if bob and charlie are indeed a

319
00:13:08,720 --> 00:13:11,360
single entity they can broadcast all

320
00:13:11,360 --> 00:13:13,360
their messages together in the second

321
00:13:13,360 --> 00:13:14,399
round

322
00:13:14,399 --> 00:13:16,880
this gives us a two message protocol for

323
00:13:16,880 --> 00:13:19,360
the ot functionality that in the first

324
00:13:19,360 --> 00:13:22,000
round only alice who acts as the

325
00:13:22,000 --> 00:13:24,399
receiver sends a message and in the

326
00:13:24,399 --> 00:13:26,160
second round

327
00:13:26,160 --> 00:13:28,480
bob and charlie who together act as the

328
00:13:28,480 --> 00:13:30,399
sender send a message

329
00:13:30,399 --> 00:13:32,959
finally alice locally computes the

330
00:13:32,959 --> 00:13:34,800
output of the protocol in the output

331
00:13:34,800 --> 00:13:37,040
computation phase

332
00:13:37,040 --> 00:13:39,040
but now we need to show that this

333
00:13:39,040 --> 00:13:41,360
protocol does indeed implement the ot

334
00:13:41,360 --> 00:13:45,279
functionality in a secure manner

335
00:13:46,480 --> 00:13:48,800
so alice's view pretty much remains

336
00:13:48,800 --> 00:13:51,120
unaffected in this modified protocol

337
00:13:51,120 --> 00:13:53,440
vis-a-vis the original protocol

338
00:13:53,440 --> 00:13:56,480
security against a receiver therefore

339
00:13:56,480 --> 00:13:58,560
follows from the security of the

340
00:13:58,560 --> 00:14:01,600
original two-round mpc protocol

341
00:14:01,600 --> 00:14:03,680
this means that if the original protocol

342
00:14:03,680 --> 00:14:05,279
was semi honest

343
00:14:05,279 --> 00:14:06,320
secure

344
00:14:06,320 --> 00:14:08,079
then we get security against a

345
00:14:08,079 --> 00:14:10,480
semi-honest receiver and if the original

346
00:14:10,480 --> 00:14:13,040
protocol was maliciously secure then we

347
00:14:13,040 --> 00:14:14,880
get security against a malicious

348
00:14:14,880 --> 00:14:17,600
receiver

349
00:14:17,600 --> 00:14:20,720
to argue security against the sender we

350
00:14:20,720 --> 00:14:23,040
observe that charlie did not have any

351
00:14:23,040 --> 00:14:25,440
input in the original protocol

352
00:14:25,440 --> 00:14:28,240
if the adversary now only corrupts bob

353
00:14:28,240 --> 00:14:30,720
in the original protocol it can obtain

354
00:14:30,720 --> 00:14:33,199
the same view as in this transformed

355
00:14:33,199 --> 00:14:35,600
two-party protocol by internally

356
00:14:35,600 --> 00:14:37,600
simulating charlie

357
00:14:37,600 --> 00:14:39,680
therefore we get security against a

358
00:14:39,680 --> 00:14:42,240
semi-honest sender

359
00:14:42,240 --> 00:14:44,320
we know that in this case even if the

360
00:14:44,320 --> 00:14:47,120
original protocol was maliciously secure

361
00:14:47,120 --> 00:14:49,839
we only get semi-honest security against

362
00:14:49,839 --> 00:14:52,399
the sender

363
00:14:53,440 --> 00:14:56,000
hence we have successfully shown that a

364
00:14:56,000 --> 00:14:58,480
maliciously secure broadcast only

365
00:14:58,480 --> 00:15:00,240
two-round mpc

366
00:15:00,240 --> 00:15:03,360
implies a two-message malicious receiver

367
00:15:03,360 --> 00:15:05,440
ot

368
00:15:05,440 --> 00:15:08,000
we additionally show in our paper that a

369
00:15:08,000 --> 00:15:10,639
two-message malicious receiver ot is in

370
00:15:10,639 --> 00:15:13,519
fact impossible thereby establishing

371
00:15:13,519 --> 00:15:16,160
impossibility of a maliciously secured

372
00:15:16,160 --> 00:15:19,120
broadcast only two round npc

373
00:15:19,120 --> 00:15:21,279
unfortunately due to time constraints i

374
00:15:21,279 --> 00:15:23,040
won't be able to discuss

375
00:15:23,040 --> 00:15:25,519
the impossibility of two round malicious

376
00:15:25,519 --> 00:15:29,120
receiver ot in the stock

377
00:15:29,600 --> 00:15:31,279
let's now move on to the setting where

378
00:15:31,279 --> 00:15:33,199
the parties still operate over a

379
00:15:33,199 --> 00:15:35,040
broadcast channel

380
00:15:35,040 --> 00:15:37,440
but in addition to that they have access

381
00:15:37,440 --> 00:15:39,440
to a bare public key infrastructure

382
00:15:39,440 --> 00:15:40,639
setup

383
00:15:40,639 --> 00:15:42,160
in this setting

384
00:15:42,160 --> 00:15:44,639
we show existence of a guaranteed output

385
00:15:44,639 --> 00:15:47,759
delivery protocol

386
00:15:49,519 --> 00:15:52,480
okay so all existing maliciously secure

387
00:15:52,480 --> 00:15:54,800
guaranteed output delivery protocols in

388
00:15:54,800 --> 00:15:57,839
the broadcast plus pki setting

389
00:15:57,839 --> 00:16:01,519
crucially rely on a trusted crs setup

390
00:16:01,519 --> 00:16:03,279
which means that the structure of these

391
00:16:03,279 --> 00:16:05,680
protocol looks like the following

392
00:16:05,680 --> 00:16:08,639
there is a crs setup and a bare pki

393
00:16:08,639 --> 00:16:10,320
setup at the beginning

394
00:16:10,320 --> 00:16:12,720
followed by two rounds of interaction

395
00:16:12,720 --> 00:16:15,360
over a broadcast channel

396
00:16:15,360 --> 00:16:18,160
we observe that in these protocols the

397
00:16:18,160 --> 00:16:21,680
crs is only used for nether nethernizik

398
00:16:21,680 --> 00:16:24,079
proofs

399
00:16:24,079 --> 00:16:26,480
in the honest majority setting however

400
00:16:26,480 --> 00:16:29,279
these music proofs can very easily be

401
00:16:29,279 --> 00:16:32,399
replaced by multi-crs nesix

402
00:16:32,399 --> 00:16:35,279
in multi-crs nesix the setup consists of

403
00:16:35,279 --> 00:16:37,759
multiple crs strings as opposed to a

404
00:16:37,759 --> 00:16:39,279
single crs

405
00:16:39,279 --> 00:16:41,199
and soundness holds as long as a

406
00:16:41,199 --> 00:16:44,160
majority of the crss were honestly

407
00:16:44,160 --> 00:16:46,719
generated

408
00:16:47,040 --> 00:16:49,600
these crss generated by the individual

409
00:16:49,600 --> 00:16:50,560
parties

410
00:16:50,560 --> 00:16:53,120
can now be embedded inside the bare pki

411
00:16:53,120 --> 00:16:54,399
setup

412
00:16:54,399 --> 00:16:56,560
in particular the public keys of the new

413
00:16:56,560 --> 00:17:00,560
bare pki setup will include these crss

414
00:17:00,560 --> 00:17:02,959
and the public keys of the original pki

415
00:17:02,959 --> 00:17:05,760
setup and since the adversary in

416
00:17:05,760 --> 00:17:08,559
multi-crs nesix is allowed to choose its

417
00:17:08,559 --> 00:17:11,439
crss adaptively after looking at the

418
00:17:11,439 --> 00:17:15,599
crss chosen by the honest parties

419
00:17:15,599 --> 00:17:19,839
this is a valid bare pki center

420
00:17:20,079 --> 00:17:22,319
as a result this gives us a two round

421
00:17:22,319 --> 00:17:24,640
guaranteed output delivery protocol in

422
00:17:24,640 --> 00:17:27,760
the broadcast plus pki setting without

423
00:17:27,760 --> 00:17:30,640
relying on a crs

424
00:17:30,640 --> 00:17:32,880
while this protocol also implies a

425
00:17:32,880 --> 00:17:35,360
protocol with identifiable abort

426
00:17:35,360 --> 00:17:38,240
note that in this protocol we rely on a

427
00:17:38,240 --> 00:17:39,360
special

428
00:17:39,360 --> 00:17:42,479
bare pki setup

429
00:17:42,559 --> 00:17:44,720
in our paper we present a separate

430
00:17:44,720 --> 00:17:46,960
protocol for identifiable abort where

431
00:17:46,960 --> 00:17:50,000
the pki can be instantiated using any

432
00:17:50,000 --> 00:17:53,360
generic public key encryption scheme

433
00:17:53,360 --> 00:17:56,160
designing a similar guaranteed output

434
00:17:56,160 --> 00:17:58,799
delivery protocol where the pki can be

435
00:17:58,799 --> 00:18:01,039
instantiated using any public key

436
00:18:01,039 --> 00:18:02,880
encryption scheme is still an

437
00:18:02,880 --> 00:18:06,080
interesting open question

438
00:18:07,919 --> 00:18:09,919
okay so let's now finally look at the

439
00:18:09,919 --> 00:18:12,559
impossibility result for identifiable

440
00:18:12,559 --> 00:18:17,440
abort in the broadcast plus p2p setting

441
00:18:18,720 --> 00:18:20,000
let's assume for the sake of

442
00:18:20,000 --> 00:18:22,240
contradiction that such a protocol

443
00:18:22,240 --> 00:18:25,280
exists in the broadcast plus pki setting

444
00:18:25,280 --> 00:18:27,760
and every party both broadcasts a

445
00:18:27,760 --> 00:18:30,400
message and sends private messages to

446
00:18:30,400 --> 00:18:32,240
all parties in both rounds of the

447
00:18:32,240 --> 00:18:33,600
protocol

448
00:18:33,600 --> 00:18:36,240
the function that we consider is this od

449
00:18:36,240 --> 00:18:38,640
like functionality where alice has a

450
00:18:38,640 --> 00:18:39,840
single

451
00:18:39,840 --> 00:18:41,280
bit b

452
00:18:41,280 --> 00:18:43,039
as input bob

453
00:18:43,039 --> 00:18:45,919
provides two inputs m0 and m1 and

454
00:18:45,919 --> 00:18:48,559
charlie does not provide any input and

455
00:18:48,559 --> 00:18:50,640
at the end of the protocol only charlie

456
00:18:50,640 --> 00:18:53,760
receives an output

457
00:18:54,000 --> 00:18:55,919
let us now consider a scenario where the

458
00:18:55,919 --> 00:18:58,960
adversary corrupts alice

459
00:18:58,960 --> 00:19:00,960
the and the adversarial strategy that

460
00:19:00,960 --> 00:19:04,320
alice adopts is to honestly behave

461
00:19:04,320 --> 00:19:06,720
throughout the protocol except that it

462
00:19:06,720 --> 00:19:09,039
does not send a private channel message

463
00:19:09,039 --> 00:19:10,880
to charlie in the first round of the

464
00:19:10,880 --> 00:19:13,360
protocol

465
00:19:13,760 --> 00:19:16,000
in this attack scenario the honest

466
00:19:16,000 --> 00:19:18,320
parties should either be able to

467
00:19:18,320 --> 00:19:21,440
identify the bad party and output bot or

468
00:19:21,440 --> 00:19:24,720
obtain a non-board output let's consider

469
00:19:24,720 --> 00:19:28,160
each of these scenarios separately

470
00:19:28,160 --> 00:19:30,320
if the parties abort they must also

471
00:19:30,320 --> 00:19:32,400
identify the corrupt party

472
00:19:32,400 --> 00:19:34,799
now while charlie knows that alice is

473
00:19:34,799 --> 00:19:35,840
corrupt

474
00:19:35,840 --> 00:19:37,760
from bob's point of view he has no

475
00:19:37,760 --> 00:19:40,000
reason to believe why alice would be

476
00:19:40,000 --> 00:19:41,360
corrupt

477
00:19:41,360 --> 00:19:43,679
bob in fact cannot distinguish between a

478
00:19:43,679 --> 00:19:46,400
scenario where alice is indeed corrupt

479
00:19:46,400 --> 00:19:48,799
and does not send a private message to

480
00:19:48,799 --> 00:19:49,919
charlie

481
00:19:49,919 --> 00:19:52,960
and a different scenario where

482
00:19:52,960 --> 00:19:55,520
charlie is corrupt and falsely accuses

483
00:19:55,520 --> 00:19:57,760
alice of not sending him a message in

484
00:19:57,760 --> 00:19:59,919
the first round

485
00:19:59,919 --> 00:20:04,240
therefore this case clearly cannot hold

486
00:20:04,240 --> 00:20:05,760
how about if the parties obtain a

487
00:20:05,760 --> 00:20:07,919
non-bought output in this particular

488
00:20:07,919 --> 00:20:09,360
attack scenario

489
00:20:09,360 --> 00:20:11,840
in this case since the honest parties

490
00:20:11,840 --> 00:20:14,720
compute an on-board output the simulator

491
00:20:14,720 --> 00:20:17,360
must be able to extract some input from

492
00:20:17,360 --> 00:20:18,320
alice

493
00:20:18,320 --> 00:20:20,960
this could either be alice's real input

494
00:20:20,960 --> 00:20:22,000
bit b

495
00:20:22,000 --> 00:20:25,280
or one minus b

496
00:20:25,679 --> 00:20:28,080
in case the simulator extracts alice's

497
00:20:28,080 --> 00:20:31,200
real input b we can argue that in an

498
00:20:31,200 --> 00:20:33,520
alternate scenario where bob is corrupt

499
00:20:33,520 --> 00:20:36,080
and alice is honest

500
00:20:36,080 --> 00:20:38,640
bob can run the same simulator algorithm

501
00:20:38,640 --> 00:20:40,000
to extract

502
00:20:40,000 --> 00:20:42,159
honest alice's input

503
00:20:42,159 --> 00:20:44,480
this is because the messages that are

504
00:20:44,480 --> 00:20:47,120
used by the simulator which are

505
00:20:47,120 --> 00:20:50,000
encircled in green here are all part of

506
00:20:50,000 --> 00:20:51,600
bob's view

507
00:20:51,600 --> 00:20:54,159
since this would clearly violate ils's

508
00:20:54,159 --> 00:20:58,400
privacy this particular case cannot hold

509
00:20:58,400 --> 00:21:02,000
now if the simulator extracts 1 minus b

510
00:21:02,000 --> 00:21:04,000
then we can show that in an alternate

511
00:21:04,000 --> 00:21:06,240
scenario where alice is honest and

512
00:21:06,240 --> 00:21:07,840
charlie is corrupt

513
00:21:07,840 --> 00:21:10,240
it can first participate in the protocol

514
00:21:10,240 --> 00:21:13,360
honestly to learn the correct output and

515
00:21:13,360 --> 00:21:15,840
then recompute its second round messages

516
00:21:15,840 --> 00:21:18,799
while completely ignoring alice's first

517
00:21:18,799 --> 00:21:21,039
round private channel message

518
00:21:21,039 --> 00:21:23,679
this allows a corrupt charlie to obtain

519
00:21:23,679 --> 00:21:25,840
both m0 and m1

520
00:21:25,840 --> 00:21:29,120
thereby violating bob's privacy

521
00:21:29,120 --> 00:21:33,520
as a result this case cannot hold either

522
00:21:33,520 --> 00:21:35,280
overall we have succeeded in

523
00:21:35,280 --> 00:21:37,679
demonstrating that in this particular

524
00:21:37,679 --> 00:21:39,919
attack scenario where alice does not

525
00:21:39,919 --> 00:21:41,600
send a private channel message to

526
00:21:41,600 --> 00:21:44,559
charlie in the first round the parties

527
00:21:44,559 --> 00:21:47,600
can neither compute a non-board output

528
00:21:47,600 --> 00:21:50,640
nor identify a corrupt party

529
00:21:50,640 --> 00:21:53,120
therefore no such identifiable about

530
00:21:53,120 --> 00:21:56,239
protocol exists

531
00:21:56,799 --> 00:21:59,120
to conclude we complete the feasibility

532
00:21:59,120 --> 00:22:01,919
landscape of two-round mbc in different

533
00:22:01,919 --> 00:22:04,240
communication models with varying

534
00:22:04,240 --> 00:22:06,080
security guarantees

535
00:22:06,080 --> 00:22:08,320
as a result of this we establish the

536
00:22:08,320 --> 00:22:10,840
following hierarchy of communication

537
00:22:10,840 --> 00:22:14,159
models our results also explain the use

538
00:22:14,159 --> 00:22:16,880
of specific communication channels and

539
00:22:16,880 --> 00:22:19,200
computational assumptions in existing

540
00:22:19,200 --> 00:22:22,720
two-round npc protocols

541
00:22:22,720 --> 00:22:25,880
thank you

