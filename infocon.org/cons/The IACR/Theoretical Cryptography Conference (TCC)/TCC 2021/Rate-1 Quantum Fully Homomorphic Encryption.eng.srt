1
00:00:03,679 --> 00:00:06,799
uh hello my name is

2
00:00:06,799 --> 00:00:08,480
and i'm really happy to be presenting

3
00:00:08,480 --> 00:00:11,360
this joint work with nicodemus

4
00:00:11,360 --> 00:00:13,679
titled rate one quantum full homomorphic

5
00:00:13,679 --> 00:00:16,679
encryption

6
00:00:16,720 --> 00:00:18,400
uh first off i'm gonna start with some

7
00:00:18,400 --> 00:00:20,560
introduction about everything i just

8
00:00:20,560 --> 00:00:23,039
mentioned in the title

9
00:00:23,039 --> 00:00:24,880
starting with

10
00:00:24,880 --> 00:00:27,039
foreign homework encryption or fhc

11
00:00:27,039 --> 00:00:28,240
scheme

12
00:00:28,240 --> 00:00:30,400
which is basically an encryption scheme

13
00:00:30,400 --> 00:00:33,360
that allows analysts to encrypt some sm

14
00:00:33,360 --> 00:00:35,680
such that later bob holding an arbitrary

15
00:00:35,680 --> 00:00:37,840
function f can compute the encryption of

16
00:00:37,840 --> 00:00:38,800
f5

17
00:00:38,800 --> 00:00:42,000
in other words uh we want for bob to be

18
00:00:42,000 --> 00:00:43,440
able to perform computations over

19
00:00:43,440 --> 00:00:46,000
encrypted data without first having to

20
00:00:46,000 --> 00:00:48,719
put the original message

21
00:00:48,719 --> 00:00:50,320
now this is very interesting in the

22
00:00:50,320 --> 00:00:52,079
setting where

23
00:00:52,079 --> 00:00:54,079
we have a weaker client that wants to

24
00:00:54,079 --> 00:00:55,680
outsource computations to a more

25
00:00:55,680 --> 00:00:57,600
powerful server and that's why the

26
00:00:57,600 --> 00:00:59,359
figure we have for ken we're supposed to

27
00:00:59,359 --> 00:01:01,600
be the client and superman who's the

28
00:01:01,600 --> 00:01:04,559
more perfect circle

29
00:01:05,040 --> 00:01:08,159
um of course in the same like this we

30
00:01:08,159 --> 00:01:10,400
want to achieve security

31
00:01:10,400 --> 00:01:11,439
and

32
00:01:11,439 --> 00:01:13,680
first of all we want semantic security

33
00:01:13,680 --> 00:01:16,159
which means that we want for alice's uh

34
00:01:16,159 --> 00:01:18,960
message m to be hidden at all times

35
00:01:18,960 --> 00:01:21,200
or in other words we want bob or the

36
00:01:21,200 --> 00:01:24,080
server to not be able to tell apart

37
00:01:24,080 --> 00:01:26,640
encryption of of two different methods

38
00:01:26,640 --> 00:01:29,920
m0 and m1

39
00:01:30,079 --> 00:01:32,799
now apart from security for analysts or

40
00:01:32,799 --> 00:01:35,119
client also you want security football

41
00:01:35,119 --> 00:01:38,320
which comes in the form of circuit price

42
00:01:38,320 --> 00:01:41,280
that means that we want for

43
00:01:41,280 --> 00:01:44,000
the client or alice to not get any

44
00:01:44,000 --> 00:01:45,439
information about the circuit or

45
00:01:45,439 --> 00:01:46,479
fraction

46
00:01:46,479 --> 00:01:47,920
used

47
00:01:47,920 --> 00:01:50,560
for the computation

48
00:01:50,560 --> 00:01:53,280
uh now when talking about triple privacy

49
00:01:53,280 --> 00:01:55,200
can refer either to the weaker notion of

50
00:01:55,200 --> 00:01:57,520
semi-underserved privacy

51
00:01:57,520 --> 00:01:59,600
where cerebral palace holds only for

52
00:01:59,600 --> 00:02:02,159
well-formed message from alice

53
00:02:02,159 --> 00:02:04,240
or we can refer to the stronger notion

54
00:02:04,240 --> 00:02:06,960
of molecular privacy where it holds for

55
00:02:06,960 --> 00:02:10,399
any arbitrary message from alice

56
00:02:10,399 --> 00:02:13,680
now in this paper from most of schedule

57
00:02:13,680 --> 00:02:15,120
they actually

58
00:02:15,120 --> 00:02:17,360
showed a way to compile any classical

59
00:02:17,360 --> 00:02:18,720
f8c

60
00:02:18,720 --> 00:02:21,360
which is semi-underserved private into a

61
00:02:21,360 --> 00:02:24,720
malicious required one

62
00:02:29,440 --> 00:02:30,480
now

63
00:02:30,480 --> 00:02:32,239
apart from security we also want to

64
00:02:32,239 --> 00:02:34,400
achieve efficiency especially if we opt

65
00:02:34,400 --> 00:02:35,760
to use this

66
00:02:35,760 --> 00:02:39,360
schemes in real life systems

67
00:02:39,360 --> 00:02:41,680
and what happens is because of security

68
00:02:41,680 --> 00:02:42,959
reasons

69
00:02:42,959 --> 00:02:44,480
the message from the server to the

70
00:02:44,480 --> 00:02:46,879
client

71
00:02:47,200 --> 00:02:48,879
is bigger so there's a communication

72
00:02:48,879 --> 00:02:50,800
overhead introduced

73
00:02:50,800 --> 00:02:52,879
and we want that to not be

74
00:02:52,879 --> 00:02:55,280
not be too big so as to nullify the

75
00:02:55,280 --> 00:02:56,560
efficiency of outsourcing the

76
00:02:56,560 --> 00:02:59,920
computations in the first place

77
00:02:59,920 --> 00:03:01,120
and that's why

78
00:03:01,120 --> 00:03:02,560
communicates complexities are very high

79
00:03:02,560 --> 00:03:04,560
interest and we want for communication

80
00:03:04,560 --> 00:03:06,480
complexity to be compact and that means

81
00:03:06,480 --> 00:03:07,840
to be independent of the size of the

82
00:03:07,840 --> 00:03:09,840
circuit used for the

83
00:03:09,840 --> 00:03:12,400
computation

84
00:03:12,560 --> 00:03:14,720
and if that's true

85
00:03:14,720 --> 00:03:15,840
then

86
00:03:15,840 --> 00:03:17,360
the communication overhead is not too

87
00:03:17,360 --> 00:03:19,040
big and we can use it in our

88
00:03:19,040 --> 00:03:21,200
applications such as security by using

89
00:03:21,200 --> 00:03:24,400
function or an encrypted databases

90
00:03:24,400 --> 00:03:26,400
such as in private information retrieval

91
00:03:26,400 --> 00:03:27,920
where we retrieve an item from a

92
00:03:27,920 --> 00:03:31,599
database without really which one

93
00:03:31,599 --> 00:03:33,599
and yeah

94
00:03:33,599 --> 00:03:36,400
so uh the best communication complexity

95
00:03:36,400 --> 00:03:38,239
of an f18

96
00:03:38,239 --> 00:03:40,319
was introduced in this paper by a broken

97
00:03:40,319 --> 00:03:41,760
scandal

98
00:03:41,760 --> 00:03:44,239
where it approaches that of the insecure

99
00:03:44,239 --> 00:03:46,080
protocol where alice would just stand

100
00:03:46,080 --> 00:03:47,840
her message in plane

101
00:03:47,840 --> 00:03:49,840
so we have an asymptotically optimal

102
00:03:49,840 --> 00:03:52,560
efficiency here

103
00:03:53,680 --> 00:03:55,760
now as a metric for communication

104
00:03:55,760 --> 00:03:58,400
complexity we're going to use rate

105
00:03:58,400 --> 00:04:00,239
which is basically the message to

106
00:04:00,239 --> 00:04:01,760
ciphertext ratio

107
00:04:01,760 --> 00:04:03,040
but if you want to get a bit more

108
00:04:03,040 --> 00:04:04,560
technical

109
00:04:04,560 --> 00:04:06,720
it's the size of the

110
00:04:06,720 --> 00:04:08,319
encrypted

111
00:04:08,319 --> 00:04:10,319
data in plain

112
00:04:10,319 --> 00:04:12,000
over the size of the homographically

113
00:04:12,000 --> 00:04:15,840
evaluated data under encryption

114
00:04:16,798 --> 00:04:19,120
now we want the rate to be as big as

115
00:04:19,120 --> 00:04:21,358
possible because we want the homework

116
00:04:21,358 --> 00:04:22,960
value data to be

117
00:04:22,960 --> 00:04:24,880
as small as possible

118
00:04:24,880 --> 00:04:27,440
and when we refer to rate 1 schemes we

119
00:04:27,440 --> 00:04:29,840
refer to schemes that asymptotically

120
00:04:29,840 --> 00:04:31,040
approach

121
00:04:31,040 --> 00:04:34,479
rate equal to 1.

122
00:04:36,400 --> 00:04:38,720
such as the one i talked about from

123
00:04:38,720 --> 00:04:41,520
broker schedule

124
00:04:41,759 --> 00:04:43,120
now what happens if we move to the

125
00:04:43,120 --> 00:04:45,120
quantum setting of course we also have

126
00:04:45,120 --> 00:04:47,520
quantum fulfillment encryption schemes

127
00:04:47,520 --> 00:04:50,080
and it's basically the same notion but

128
00:04:50,080 --> 00:04:51,680
here we have instead of a classical

129
00:04:51,680 --> 00:04:54,479
message we have a quantum state sign

130
00:04:54,479 --> 00:04:56,800
and for the client and the server can be

131
00:04:56,800 --> 00:04:58,240
quantum

132
00:04:58,240 --> 00:04:59,680
and of course instead of the function we

133
00:04:59,680 --> 00:05:01,600
have a unitary matrix because

134
00:05:01,600 --> 00:05:03,360
in order to perform quantum computations

135
00:05:03,360 --> 00:05:05,039
you have to do that with a unitary

136
00:05:05,039 --> 00:05:07,360
matrix

137
00:05:07,840 --> 00:05:10,000
now masterless is known for the quantum

138
00:05:10,000 --> 00:05:12,240
setting but in our opinion it's even

139
00:05:12,240 --> 00:05:14,479
more important to do the large gap

140
00:05:14,479 --> 00:05:16,000
between quantum

141
00:05:16,000 --> 00:05:18,160
capabilities of regular users and

142
00:05:18,160 --> 00:05:21,680
servers on the cloud in the future

143
00:05:23,280 --> 00:05:26,960
and the more important um

144
00:05:26,960 --> 00:05:29,440
the more interesting case here is

145
00:05:29,440 --> 00:05:31,840
why we have a quantum output because the

146
00:05:31,840 --> 00:05:33,600
classical output maybe we can use

147
00:05:33,600 --> 00:05:35,680
classical techniques to

148
00:05:35,680 --> 00:05:37,600
um

149
00:05:37,600 --> 00:05:40,880
to store it uh optimally and get a great

150
00:05:40,880 --> 00:05:42,800
one but

151
00:05:42,800 --> 00:05:45,680
if we have a quantum output again

152
00:05:45,680 --> 00:05:48,960
massless is not required to say

153
00:05:48,960 --> 00:05:50,400
so

154
00:05:50,400 --> 00:05:52,880
this is exactly the question we pose

155
00:05:52,880 --> 00:05:55,680
and if we can get a rate one

156
00:05:55,680 --> 00:05:58,479
secure quantum effect and the result is

157
00:05:58,479 --> 00:06:02,000
yes that's exactly what we construct

158
00:06:02,000 --> 00:06:03,440
so we're getting quantum availability in

159
00:06:03,440 --> 00:06:05,120
the malicious setting with

160
00:06:05,120 --> 00:06:08,080
optimal communication complexity

161
00:06:08,080 --> 00:06:10,240
and in order to do that we

162
00:06:10,240 --> 00:06:12,160
do it with a combination of two main

163
00:06:12,160 --> 00:06:13,520
technical steps

164
00:06:13,520 --> 00:06:15,600
first we construct them unless we start

165
00:06:15,600 --> 00:06:17,840
with private quantum mechan

166
00:06:17,840 --> 00:06:19,280
and then

167
00:06:19,280 --> 00:06:22,800
we construct the rate one quadrant easy

168
00:06:22,800 --> 00:06:25,840
now uh these results they can be they're

169
00:06:25,840 --> 00:06:27,600
of independent interest but they're also

170
00:06:27,600 --> 00:06:29,039
compatible with each other so we can

171
00:06:29,039 --> 00:06:30,720
combine them and get

172
00:06:30,720 --> 00:06:34,120
our main results

173
00:06:34,800 --> 00:06:36,160
now um

174
00:06:36,160 --> 00:06:37,759
before getting into any actual

175
00:06:37,759 --> 00:06:39,759
construction or paper

176
00:06:39,759 --> 00:06:41,360
i need to talk about some existing

177
00:06:41,360 --> 00:06:43,280
quantum frequency encryption scheme and

178
00:06:43,280 --> 00:06:47,318
techniques that we're going to use

179
00:06:49,280 --> 00:06:51,120
and i want to start with some intuition

180
00:06:51,120 --> 00:06:53,280
about

181
00:06:53,280 --> 00:06:54,639
why we can

182
00:06:54,639 --> 00:06:56,800
use classical methods

183
00:06:56,800 --> 00:06:58,560
and the methods of classical encryption

184
00:06:58,560 --> 00:07:00,160
schemes and just extend them into the

185
00:07:00,160 --> 00:07:02,720
quantum setting and why this is not

186
00:07:02,720 --> 00:07:04,080
trivial

187
00:07:04,080 --> 00:07:06,400
and one of the reasons is interference

188
00:07:06,400 --> 00:07:08,400
so in quantum computations interference

189
00:07:08,400 --> 00:07:10,080
is very important

190
00:07:10,080 --> 00:07:12,319
and what it means is that elements of

191
00:07:12,319 --> 00:07:14,240
the superposition representing the same

192
00:07:14,240 --> 00:07:18,000
big string but with opposite amplitudes

193
00:07:18,000 --> 00:07:19,759
they cancel out

194
00:07:19,759 --> 00:07:21,199
and to make this more evident i'm going

195
00:07:21,199 --> 00:07:23,440
to use an example

196
00:07:23,440 --> 00:07:24,639
and i'm going to focus on the high

197
00:07:24,639 --> 00:07:26,960
number transformation now this is a

198
00:07:26,960 --> 00:07:28,319
quantum so based on the quantum

199
00:07:28,319 --> 00:07:30,479
computation

200
00:07:30,479 --> 00:07:31,840
and here you can see the hadamard

201
00:07:31,840 --> 00:07:33,680
transformation with input kit 0 and here

202
00:07:33,680 --> 00:07:35,280
with kit 1

203
00:07:35,280 --> 00:07:38,319
with the symbol kit we symbolize qubits

204
00:07:38,319 --> 00:07:40,560
and the actual result is not

205
00:07:40,560 --> 00:07:42,319
too important but what i want to focus

206
00:07:42,319 --> 00:07:44,479
on is that if we apply the hadamard

207
00:07:44,479 --> 00:07:48,160
transformation onto this superposition

208
00:07:48,160 --> 00:07:49,599
and we replace

209
00:07:49,599 --> 00:07:51,599
the number of zero zero and how to work

210
00:07:51,599 --> 00:07:54,960
it one we get this result

211
00:07:55,120 --> 00:07:57,759
and here we have get one and we have

212
00:07:57,759 --> 00:07:59,919
minus gate one where

213
00:07:59,919 --> 00:08:01,599
these are qubits with the same bit

214
00:08:01,599 --> 00:08:03,599
string but opposite altitude so they

215
00:08:03,599 --> 00:08:06,639
cancel out and the result is get zero

216
00:08:06,639 --> 00:08:09,199
and that thing is really important for

217
00:08:09,199 --> 00:08:11,680
quantification

218
00:08:11,680 --> 00:08:13,520
now what happens if we had encryptions

219
00:08:13,520 --> 00:08:14,720
and we use

220
00:08:14,720 --> 00:08:16,560
classical methods for this

221
00:08:16,560 --> 00:08:18,720
uh the result would look kind of like

222
00:08:18,720 --> 00:08:19,840
this

223
00:08:19,840 --> 00:08:21,440
but what happens is that in classical

224
00:08:21,440 --> 00:08:22,960
encryptions we have

225
00:08:22,960 --> 00:08:25,039
probabilistic encryptions which means

226
00:08:25,039 --> 00:08:27,199
that its beat has many different can

227
00:08:27,199 --> 00:08:30,160
have many different encryptions so this

228
00:08:30,160 --> 00:08:32,799
k the encryption of one in this case of

229
00:08:32,799 --> 00:08:35,519
encryption one

230
00:08:36,000 --> 00:08:37,679
they're not the same

231
00:08:37,679 --> 00:08:40,240
and thus they cannot cancel each other

232
00:08:40,240 --> 00:08:43,679
so interferes with work

233
00:08:43,679 --> 00:08:46,000
so that's why connections use classical

234
00:08:46,000 --> 00:08:47,120
techniques

235
00:08:47,120 --> 00:08:50,320
now in order to circumvent that problem

236
00:08:50,320 --> 00:08:52,640
we use the quantum one template

237
00:08:52,640 --> 00:08:54,720
now the quantum must apply the singular

238
00:08:54,720 --> 00:08:56,320
similar notion to the classical one they

239
00:08:56,320 --> 00:08:58,720
had but instead of using a string

240
00:08:58,720 --> 00:09:01,600
and extroverting it with our message

241
00:09:01,600 --> 00:09:03,839
we use these parallely operators

242
00:09:03,839 --> 00:09:06,240
we started unitary matrices

243
00:09:06,240 --> 00:09:08,880
and we have x instead

244
00:09:08,880 --> 00:09:11,920
now x if applied on the cubic

245
00:09:11,920 --> 00:09:14,959
performs a little bit

246
00:09:15,279 --> 00:09:16,800
uh

247
00:09:16,800 --> 00:09:19,040
a b field just like

248
00:09:19,040 --> 00:09:22,560
the classical uh

249
00:09:22,880 --> 00:09:25,360
and the set operator performs a phase

250
00:09:25,360 --> 00:09:27,680
shift

251
00:09:28,160 --> 00:09:29,040
ah

252
00:09:29,040 --> 00:09:30,160
yeah

253
00:09:30,160 --> 00:09:32,240
so now if we want to apply a quantum on

254
00:09:32,240 --> 00:09:34,320
ipad what we do

255
00:09:34,320 --> 00:09:36,399
is we sample at one time key

256
00:09:36,399 --> 00:09:39,200
lowercase x and lowercase set so we

257
00:09:39,200 --> 00:09:41,440
sample two bits

258
00:09:41,440 --> 00:09:42,800
and let's say we apply the quantum

259
00:09:42,800 --> 00:09:44,240
antipath into this arbitrary

260
00:09:44,240 --> 00:09:46,080
superposition

261
00:09:46,080 --> 00:09:48,160
uh what we do is apply x to the power of

262
00:09:48,160 --> 00:09:50,399
x and z to the power of z

263
00:09:50,399 --> 00:09:52,240
so what happens here is that if x equals

264
00:09:52,240 --> 00:09:54,640
zero nothing happens a

265
00:09:54,640 --> 00:09:57,279
the poly operator x is not applied but

266
00:09:57,279 --> 00:10:00,480
if x lowercase x equals one

267
00:10:00,480 --> 00:10:03,120
then we apply the operator x and we

268
00:10:03,120 --> 00:10:05,839
perform a bit flip

269
00:10:05,839 --> 00:10:08,000
the same thing for z if it's zero at the

270
00:10:08,000 --> 00:10:09,360
campus if it's fine we'll perform the

271
00:10:09,360 --> 00:10:11,440
phase shift

272
00:10:11,440 --> 00:10:15,279
and it is proven that the result of this

273
00:10:15,279 --> 00:10:18,160
uh

274
00:10:18,160 --> 00:10:19,440
computation

275
00:10:19,440 --> 00:10:21,839
is a completely hidden quantum state

276
00:10:21,839 --> 00:10:23,360
statistical here

277
00:10:23,360 --> 00:10:25,040
and of course you can only convert back

278
00:10:25,040 --> 00:10:27,440
if you know the 110 keys if you know x

279
00:10:27,440 --> 00:10:29,760
and z

280
00:10:30,320 --> 00:10:34,880
now uh using this quantum ipad

281
00:10:34,880 --> 00:10:36,560
uh

282
00:10:36,560 --> 00:10:38,000
there have been some constructions of

283
00:10:38,000 --> 00:10:39,839
quantum media team now there was also

284
00:10:39,839 --> 00:10:41,600
one from brookes in the same year but

285
00:10:41,600 --> 00:10:43,839
i'm going to focus on the one from hadid

286
00:10:43,839 --> 00:10:45,680
uh because this is the one we're also

287
00:10:45,680 --> 00:10:47,360
going to use

288
00:10:47,360 --> 00:10:49,839
and the main idea here is that

289
00:10:49,839 --> 00:10:51,839
you can use a hybrid ciphertext the

290
00:10:51,839 --> 00:10:54,640
ciphertext hybrid form that has both the

291
00:10:54,640 --> 00:10:57,920
quantum part and the classical part

292
00:10:57,920 --> 00:11:00,880
so if we have a message sign

293
00:11:00,880 --> 00:11:03,920
the client sends the quantum one time

294
00:11:03,920 --> 00:11:05,440
padded state

295
00:11:05,440 --> 00:11:07,200
of the message

296
00:11:07,200 --> 00:11:09,680
along with the encryption

297
00:11:09,680 --> 00:11:12,160
of the one-time keys using a fulcrum of

298
00:11:12,160 --> 00:11:15,200
encryption key and then

299
00:11:15,200 --> 00:11:17,519
she shows a way on how to apply

300
00:11:17,519 --> 00:11:19,279
quantum computations on the one-time

301
00:11:19,279 --> 00:11:21,839
band states so here we apply the

302
00:11:21,839 --> 00:11:24,160
interview

303
00:11:24,160 --> 00:11:25,839
that are dependent on the classical

304
00:11:25,839 --> 00:11:28,959
homework computations of the keys so

305
00:11:28,959 --> 00:11:31,120
we say we

306
00:11:31,120 --> 00:11:32,560
send this

307
00:11:32,560 --> 00:11:34,079
hybrid ciphertext

308
00:11:34,079 --> 00:11:36,320
that has the quantum attempted state

309
00:11:36,320 --> 00:11:38,320
along with the encryption of the keys

310
00:11:38,320 --> 00:11:39,440
and then

311
00:11:39,440 --> 00:11:40,800
the

312
00:11:40,800 --> 00:11:43,839
server performs two computations now the

313
00:11:43,839 --> 00:11:45,360
keys change

314
00:11:45,360 --> 00:11:46,560
but

315
00:11:46,560 --> 00:11:50,479
he also updates the keys

316
00:11:51,200 --> 00:11:53,120
i'm going to repeat this again one more

317
00:11:53,120 --> 00:11:54,480
time in the slide

318
00:11:54,480 --> 00:11:56,079
so what we do is perform classical

319
00:11:56,079 --> 00:11:57,760
homework computations

320
00:11:57,760 --> 00:11:58,720
on the

321
00:11:58,720 --> 00:12:01,279
a classical keys

322
00:12:01,279 --> 00:12:02,720
along with dependent quantum

323
00:12:02,720 --> 00:12:04,800
computations so let's say we're playing

324
00:12:04,800 --> 00:12:06,160
integer u

325
00:12:06,160 --> 00:12:08,560
and this is our original methods

326
00:12:08,560 --> 00:12:10,560
now the quantum magnified state is still

327
00:12:10,560 --> 00:12:12,160
a quantum matter by the state of the

328
00:12:12,160 --> 00:12:13,839
evaluated message

329
00:12:13,839 --> 00:12:15,600
but the keys are different

330
00:12:15,600 --> 00:12:17,120
but they're

331
00:12:17,120 --> 00:12:19,920
uh simultaneously updated under

332
00:12:19,920 --> 00:12:22,399
encryption

333
00:12:22,720 --> 00:12:25,200
and thus uh in the end when we get the

334
00:12:25,200 --> 00:12:27,440
last message we can decrypts use

335
00:12:27,440 --> 00:12:29,040
classical encryption get the classical

336
00:12:29,040 --> 00:12:32,160
keys one time keys and use it to get our

337
00:12:32,160 --> 00:12:35,199
evaluated lessons

338
00:12:35,519 --> 00:12:39,760
now uh just to get um a bit of intuition

339
00:12:39,760 --> 00:12:42,560
in order to do this transformation

340
00:12:42,560 --> 00:12:44,160
and have a full homework encryption

341
00:12:44,160 --> 00:12:45,760
scheme we want the universal set of

342
00:12:45,760 --> 00:12:47,760
gates

343
00:12:47,760 --> 00:12:48,800
and

344
00:12:48,800 --> 00:12:51,040
one universal set is

345
00:12:51,040 --> 00:12:54,079
clifford gates along with the toefl gate

346
00:12:54,079 --> 00:12:56,240
now the clifford gates are the easy case

347
00:12:56,240 --> 00:12:58,639
because the clifford gates and they

348
00:12:58,639 --> 00:13:00,079
preserve the probably mattresses by

349
00:13:00,079 --> 00:13:02,160
conjugation so if we apply clifford gate

350
00:13:02,160 --> 00:13:05,360
if this unit is a clever gate then the

351
00:13:05,360 --> 00:13:08,720
the structure looks the same

352
00:13:08,720 --> 00:13:10,880
uh

353
00:13:10,880 --> 00:13:14,240
after like from implementation and

354
00:13:14,240 --> 00:13:16,639
just the keys are different but you it's

355
00:13:16,639 --> 00:13:19,120
trivial to also create the keys

356
00:13:19,120 --> 00:13:22,320
now the problem is with the toefl gift

357
00:13:22,320 --> 00:13:23,839
where

358
00:13:23,839 --> 00:13:25,760
the case is not the same

359
00:13:25,760 --> 00:13:26,639
and

360
00:13:26,639 --> 00:13:28,160
at some point

361
00:13:28,160 --> 00:13:29,680
we would have to perform a quantum

362
00:13:29,680 --> 00:13:31,839
operation dependent on the classical

363
00:13:31,839 --> 00:13:33,279
keys

364
00:13:33,279 --> 00:13:35,600
of course this is not trivial at all and

365
00:13:35,600 --> 00:13:37,279
the results are interesting but but i'm

366
00:13:37,279 --> 00:13:38,959
not going to get into details what i'm

367
00:13:38,959 --> 00:13:41,440
going to say is that mahadev showed that

368
00:13:41,440 --> 00:13:42,720
if you have a classical efficiency

369
00:13:42,720 --> 00:13:45,680
scheme with certain properties specific

370
00:13:45,680 --> 00:13:46,800
properties

371
00:13:46,800 --> 00:13:48,079
then you can use that to do this

372
00:13:48,079 --> 00:13:49,920
computation here

373
00:13:49,920 --> 00:13:51,600
and plus you can use it to evaluate

374
00:13:51,600 --> 00:13:53,199
quantum circuits

375
00:13:53,199 --> 00:13:55,199
and the class calculation with set

376
00:13:55,199 --> 00:13:57,279
properties is called the quantum capable

377
00:13:57,279 --> 00:14:00,079
efficiency scheme

378
00:14:01,360 --> 00:14:04,160
now um

379
00:14:04,880 --> 00:14:06,480
so uh

380
00:14:06,480 --> 00:14:08,399
in our constructions

381
00:14:08,399 --> 00:14:10,720
uh what we need and the properties of

382
00:14:10,720 --> 00:14:13,600
interest to us are

383
00:14:13,600 --> 00:14:15,040
that the scheme has this hybrid

384
00:14:15,040 --> 00:14:17,440
ciphertext consisting of the quantum

385
00:14:17,440 --> 00:14:19,440
part which is our quantum antenna padded

386
00:14:19,440 --> 00:14:21,839
message and the classical part which is

387
00:14:21,839 --> 00:14:24,560
a classical encryption of the classical

388
00:14:24,560 --> 00:14:26,560
again quantum keys of the quantum

389
00:14:26,560 --> 00:14:28,079
antibiotic state

390
00:14:28,079 --> 00:14:30,560
and we also uh use that the classical

391
00:14:30,560 --> 00:14:32,880
component of the ciphertext so the

392
00:14:32,880 --> 00:14:35,519
classical at satisfies the semi honest

393
00:14:35,519 --> 00:14:38,160
tribute premise

394
00:14:38,160 --> 00:14:40,160
and by using these properties and

395
00:14:40,160 --> 00:14:42,000
actually for any quantum effect with

396
00:14:42,000 --> 00:14:43,440
these properties

397
00:14:43,440 --> 00:14:45,440
we have a result

398
00:14:45,440 --> 00:14:49,519
that i also mentioned earlier so

399
00:14:49,920 --> 00:14:51,279
we

400
00:14:51,279 --> 00:14:53,360
leave the protocol from semi on security

401
00:14:53,360 --> 00:14:57,440
to my list to specific private security

402
00:14:57,440 --> 00:14:59,120
and we also

403
00:14:59,120 --> 00:15:03,600
construct a rate one control bit

404
00:15:08,560 --> 00:15:10,800
now in this presentation

405
00:15:10,800 --> 00:15:12,399
i'm just going to focus on the rate one

406
00:15:12,399 --> 00:15:14,639
part

407
00:15:15,040 --> 00:15:16,880
and uh

408
00:15:16,880 --> 00:15:18,560
to begin with i'm gonna

409
00:15:18,560 --> 00:15:20,399
let's take a look at

410
00:15:20,399 --> 00:15:22,240
the rate of existing quantum efficiency

411
00:15:22,240 --> 00:15:24,720
variables for example in the mahdi

412
00:15:24,720 --> 00:15:25,600
scheme

413
00:15:25,600 --> 00:15:27,519
if you remember the rate was

414
00:15:27,519 --> 00:15:30,959
the message ciphertext or the

415
00:15:30,959 --> 00:15:32,800
the evaluated

416
00:15:32,800 --> 00:15:34,560
messaging plane over

417
00:15:34,560 --> 00:15:37,519
the homomorphic evaluated methods

418
00:15:37,519 --> 00:15:39,279
now

419
00:15:39,279 --> 00:15:42,720
the actual message is just called qubits

420
00:15:42,720 --> 00:15:44,639
uh but homomorphically evaluate methods

421
00:15:44,639 --> 00:15:46,320
if you remember we have the quantum part

422
00:15:46,320 --> 00:15:47,839
which is still a cubits because the

423
00:15:47,839 --> 00:15:49,920
quantum montanpa doesn't introduce any

424
00:15:49,920 --> 00:15:51,040
more size

425
00:15:51,040 --> 00:15:53,759
plus the size of the classical keys of

426
00:15:53,759 --> 00:15:56,959
the homework evaluated class concludes

427
00:15:56,959 --> 00:15:58,240
and now

428
00:15:58,240 --> 00:16:00,079
this definition of rate looks looks a

429
00:16:00,079 --> 00:16:02,160
bit weird because

430
00:16:02,160 --> 00:16:02,959
we

431
00:16:02,959 --> 00:16:06,639
combine both qubits and bits but

432
00:16:06,639 --> 00:16:08,560
this is fine because basically both

433
00:16:08,560 --> 00:16:10,880
qubits and bits are the most basic unit

434
00:16:10,880 --> 00:16:14,720
of info in their corresponding setting

435
00:16:14,880 --> 00:16:17,360
and yeah so this is array of a quantum

436
00:16:17,360 --> 00:16:19,279
method system right now

437
00:16:19,279 --> 00:16:20,480
um

438
00:16:20,480 --> 00:16:22,240
but the classical efficacy that we use

439
00:16:22,240 --> 00:16:24,079
it's not raid 1 actually it closes up

440
00:16:24,079 --> 00:16:25,440
the ciphertext

441
00:16:25,440 --> 00:16:28,560
by polynomial factor

442
00:16:28,560 --> 00:16:30,480
and thus

443
00:16:30,480 --> 00:16:31,199
the

444
00:16:31,199 --> 00:16:32,720
overall rate

445
00:16:32,720 --> 00:16:34,800
is very low we have inverse polynomial

446
00:16:34,800 --> 00:16:40,240
grade and we aim to uh increase it

447
00:16:40,560 --> 00:16:42,399
uh before getting into the construction

448
00:16:42,399 --> 00:16:44,639
again um i want to focus on the failed

449
00:16:44,639 --> 00:16:48,800
approach to get some more intuition

450
00:16:48,880 --> 00:16:52,480
uh so the quantum

451
00:16:52,480 --> 00:16:54,639
the quantum part we cannot make them

452
00:16:54,639 --> 00:16:56,720
smaller it's already optimal so we we

453
00:16:56,720 --> 00:16:59,600
have to shrink the class confirmation

454
00:16:59,600 --> 00:17:02,320
and one idea is to use a pseudo-random

455
00:17:02,320 --> 00:17:05,320
generator

456
00:17:07,280 --> 00:17:09,839
now as the random generator is well it's

457
00:17:09,839 --> 00:17:12,160
generator well if you put a small swing

458
00:17:12,160 --> 00:17:14,000
which is called the seed

459
00:17:14,000 --> 00:17:17,039
you get a seemingly

460
00:17:17,280 --> 00:17:18,640
random

461
00:17:18,640 --> 00:17:20,559
string bigger string

462
00:17:20,559 --> 00:17:22,319
and the idea here is that instead of

463
00:17:22,319 --> 00:17:23,839
storing the whole mountain key you just

464
00:17:23,839 --> 00:17:26,079
hold the c that if you input it to the

465
00:17:26,079 --> 00:17:30,080
wrong generator you get the one time key

466
00:17:30,080 --> 00:17:33,039
which is the one time t for many qubits

467
00:17:33,039 --> 00:17:35,120
right

468
00:17:35,120 --> 00:17:37,039
and that seems like a great idea at

469
00:17:37,039 --> 00:17:38,720
first because this is how it would look

470
00:17:38,720 --> 00:17:41,520
and instead of here storing the

471
00:17:41,520 --> 00:17:43,039
like the one time key would be this

472
00:17:43,039 --> 00:17:45,360
drums at the right of the seed and here

473
00:17:45,360 --> 00:17:47,679
you would just start sick

474
00:17:47,679 --> 00:17:49,600
but the problem is that

475
00:17:49,600 --> 00:17:52,320
even after one homework valuation if you

476
00:17:52,320 --> 00:17:54,640
remember we want empty chains so we have

477
00:17:54,640 --> 00:17:57,120
a new 110 key and this new entire key

478
00:17:57,120 --> 00:17:59,039
might exist outside the support of the

479
00:17:59,039 --> 00:18:01,200
random generator or even if it was in

480
00:18:01,200 --> 00:18:03,280
the support of the generator

481
00:18:03,280 --> 00:18:05,120
we're not sure how to be able to update

482
00:18:05,120 --> 00:18:08,559
the seed and then still store the scene

483
00:18:08,559 --> 00:18:10,320
so this fails and it seems like we're

484
00:18:10,320 --> 00:18:12,880
stuck with an encryption of classical

485
00:18:12,880 --> 00:18:14,720
encryption wanted key that looks like

486
00:18:14,720 --> 00:18:16,000
this

487
00:18:16,000 --> 00:18:18,640
and if you think about it we need two

488
00:18:18,640 --> 00:18:21,360
classical bits to encrypt one qb

489
00:18:21,360 --> 00:18:25,120
so it seems like we're really stuck

490
00:18:26,240 --> 00:18:30,480
now the solution is um

491
00:18:30,559 --> 00:18:33,039
uh for the solution we have to consider

492
00:18:33,039 --> 00:18:35,840
these spooky interactions

493
00:18:35,840 --> 00:18:37,200
and so

494
00:18:37,200 --> 00:18:40,480
there are some fat schemes that pack k

495
00:18:40,480 --> 00:18:43,520
classical bits into ciphertext of these

496
00:18:43,520 --> 00:18:46,480
four so we have the ciphertext that has

497
00:18:46,480 --> 00:18:48,720
a vector c0

498
00:18:48,720 --> 00:18:50,240
and then

499
00:18:50,240 --> 00:18:52,720
one bit for its

500
00:18:52,720 --> 00:18:58,160
uh classical uh bits the from plain text

501
00:18:58,480 --> 00:19:01,120
and now

502
00:19:01,200 --> 00:19:04,080
the interesting thing here is that

503
00:19:04,080 --> 00:19:06,720
these last key bits are not locally

504
00:19:06,720 --> 00:19:08,559
correlated with the secret key

505
00:19:08,559 --> 00:19:11,120
and that means that we can use some

506
00:19:11,120 --> 00:19:13,679
spooky decryption that's how it's cool

507
00:19:13,679 --> 00:19:15,679
uh

508
00:19:15,679 --> 00:19:16,480
that

509
00:19:16,480 --> 00:19:18,640
by using a function f that's really my

510
00:19:18,640 --> 00:19:20,640
first name right now we think with this

511
00:19:20,640 --> 00:19:22,320
first part of the ciphertext is zero

512
00:19:22,320 --> 00:19:23,840
which is first small part of the

513
00:19:23,840 --> 00:19:26,559
ciphertext if we extort that with the

514
00:19:26,559 --> 00:19:28,400
last key bits

515
00:19:28,400 --> 00:19:29,440
we get

516
00:19:29,440 --> 00:19:32,799
the actual descript decryption

517
00:19:34,559 --> 00:19:35,280
and

518
00:19:35,280 --> 00:19:36,720
in this paper

519
00:19:36,720 --> 00:19:39,440
by using spook interactions they were

520
00:19:39,440 --> 00:19:41,120
able to

521
00:19:41,120 --> 00:19:43,280
uh construct this rate one efficiency

522
00:19:43,280 --> 00:19:46,160
that i mentioned earlier

523
00:19:46,480 --> 00:19:49,600
now in our construction what we do

524
00:19:49,600 --> 00:19:52,000
is we use this book encryption scheme to

525
00:19:52,000 --> 00:19:54,160
get a rate one form and how do we do

526
00:19:54,160 --> 00:19:55,039
that

527
00:19:55,039 --> 00:19:57,679
so in the original protocol we have we

528
00:19:57,679 --> 00:20:00,240
have to have a quantum capability

529
00:20:00,240 --> 00:20:02,480
and when we want to store information

530
00:20:02,480 --> 00:20:06,159
with t suites to the rate one if it's c

531
00:20:06,159 --> 00:20:07,760
and i'm going to show you exactly how we

532
00:20:07,760 --> 00:20:10,400
get this red platform and then if we

533
00:20:10,400 --> 00:20:11,760
want to

534
00:20:11,760 --> 00:20:13,360
uh continue doing com for more

535
00:20:13,360 --> 00:20:15,039
violations we can

536
00:20:15,039 --> 00:20:16,799
switch back

537
00:20:16,799 --> 00:20:21,799
so basically we use both of these keys

538
00:20:22,000 --> 00:20:24,559
now here's the main idea

539
00:20:24,559 --> 00:20:27,760
so the first thing we do is convert from

540
00:20:27,760 --> 00:20:29,919
the classical uh from the quantum

541
00:20:29,919 --> 00:20:32,000
capable ft scheme

542
00:20:32,000 --> 00:20:34,960
to this spooky

543
00:20:34,960 --> 00:20:36,960
scheme that looks like this if you

544
00:20:36,960 --> 00:20:39,039
remember we have a vector c0 and then we

545
00:20:39,039 --> 00:20:40,159
have

546
00:20:40,159 --> 00:20:42,640
one bit for its

547
00:20:42,640 --> 00:20:44,559
one time key bits

548
00:20:44,559 --> 00:20:46,320
right

549
00:20:46,320 --> 00:20:49,039
and then the main idea is that

550
00:20:49,039 --> 00:20:50,720
we take

551
00:20:50,720 --> 00:20:53,120
we say store the first part of the

552
00:20:53,120 --> 00:20:55,760
ciphertext this vector c0 and then we

553
00:20:55,760 --> 00:20:58,480
incorporate all of these

554
00:20:58,480 --> 00:21:01,840
bits into the quantum

555
00:21:01,840 --> 00:21:04,720
so by doing this what happens

556
00:21:04,720 --> 00:21:06,159
is that

557
00:21:06,159 --> 00:21:07,679
by cooperating them into the quantum of

558
00:21:07,679 --> 00:21:10,960
the path we change the 110 key so if you

559
00:21:10,960 --> 00:21:13,120
consider one qubit a

560
00:21:13,120 --> 00:21:14,720
that has

561
00:21:14,720 --> 00:21:16,480
one time key x and z

562
00:21:16,480 --> 00:21:17,600
now

563
00:21:17,600 --> 00:21:19,840
the one ten keys although we have x x

564
00:21:19,840 --> 00:21:24,480
short with c x and z extrude with c z

565
00:21:26,159 --> 00:21:28,480
but uh that's not a problem because if

566
00:21:28,480 --> 00:21:31,200
you remember the spooky decryption equal

567
00:21:31,200 --> 00:21:34,320
to this function f xor with

568
00:21:34,320 --> 00:21:37,120
the last bits of ciphertext

569
00:21:37,120 --> 00:21:40,240
now if we solve for the function f

570
00:21:40,240 --> 00:21:42,720
we get the decryption xor again with the

571
00:21:42,720 --> 00:21:44,640
last bit of ciphertext but the

572
00:21:44,640 --> 00:21:48,799
decryption is the original one-time key

573
00:21:48,880 --> 00:21:50,799
and then xor with the last bit of the

574
00:21:50,799 --> 00:21:53,200
ciphertext we have this exactly the

575
00:21:53,200 --> 00:21:56,320
updated one-time key that we created by

576
00:21:56,320 --> 00:21:58,480
incorporating these beads

577
00:21:58,480 --> 00:22:00,799
into the original quantum mounted by the

578
00:22:00,799 --> 00:22:02,159
state

579
00:22:02,159 --> 00:22:03,679
so i don't know if this got a bit too

580
00:22:03,679 --> 00:22:06,159
technical but the main ideas here is

581
00:22:06,159 --> 00:22:08,000
that we get this

582
00:22:08,000 --> 00:22:09,600
spooky form

583
00:22:09,600 --> 00:22:12,080
and we have the ciphertext that's in two

584
00:22:12,080 --> 00:22:15,039
parts we just store this first part

585
00:22:15,039 --> 00:22:17,440
this vector c0 which is very small and

586
00:22:17,440 --> 00:22:18,960
then

587
00:22:18,960 --> 00:22:20,960
the rest of the bits we incorporate them

588
00:22:20,960 --> 00:22:23,280
into the quantum methane pad

589
00:22:23,280 --> 00:22:25,760
and then by just using function f

590
00:22:25,760 --> 00:22:28,320
we can get the new updated keys

591
00:22:28,320 --> 00:22:30,400
this is by storing this small part of

592
00:22:30,400 --> 00:22:33,120
the ciphertext

593
00:22:34,240 --> 00:22:35,039
now

594
00:22:35,039 --> 00:22:38,799
if we take a look at the rate of this

595
00:22:38,840 --> 00:22:41,039
construction of course

596
00:22:41,039 --> 00:22:43,200
the message was l cube it's let's say we

597
00:22:43,200 --> 00:22:45,600
have an old cubic state

598
00:22:45,600 --> 00:22:46,320
now

599
00:22:46,320 --> 00:22:48,720
in the compressed evaluated ciphertext

600
00:22:48,720 --> 00:22:51,280
the quantum information is still qubits

601
00:22:51,280 --> 00:22:53,600
but the class confirmation is just this

602
00:22:53,600 --> 00:22:55,520
vector c0

603
00:22:55,520 --> 00:22:58,000
so calculate the rate it looks a bit

604
00:22:58,000 --> 00:22:59,520
like this

605
00:22:59,520 --> 00:23:03,919
and if we set the parameters accordingly

606
00:23:03,919 --> 00:23:06,080
and we have l that's

607
00:23:06,080 --> 00:23:08,080
big enough we can get rate

608
00:23:08,080 --> 00:23:10,240
asymptotically equal to one just by

609
00:23:10,240 --> 00:23:12,799
assuming polynomial module noise rate so

610
00:23:12,799 --> 00:23:15,440
lwb

611
00:23:17,039 --> 00:23:18,720
uh great

612
00:23:18,720 --> 00:23:21,440
so now this is uh the main construction

613
00:23:21,440 --> 00:23:24,150
of our protocol

614
00:23:24,150 --> 00:23:25,360
[Music]

615
00:23:25,360 --> 00:23:27,120
and it is a generic approach because it

616
00:23:27,120 --> 00:23:28,799
works for any quantum mechanics with

617
00:23:28,799 --> 00:23:30,640
these properties that i

618
00:23:30,640 --> 00:23:33,120
talked about and what we do again to sum

619
00:23:33,120 --> 00:23:35,039
it up is we have

620
00:23:35,039 --> 00:23:38,000
a quantum capability and we also have

621
00:23:38,000 --> 00:23:40,159
the rate one f8c and we key switch from

622
00:23:40,159 --> 00:23:41,440
one to the other

623
00:23:41,440 --> 00:23:43,919
to store it and then we can switch back

624
00:23:43,919 --> 00:23:47,360
to perform more computations

625
00:23:47,360 --> 00:23:49,760
so in the full version of the paper we

626
00:23:49,760 --> 00:23:51,039
also have another approach in

627
00:23:51,039 --> 00:23:52,720
non-generic approach

628
00:23:52,720 --> 00:23:53,760
which

629
00:23:53,760 --> 00:23:54,799
was built

630
00:23:54,799 --> 00:23:58,320
specifically on the mahadev scheme

631
00:23:58,320 --> 00:24:00,400
in which instead of

632
00:24:00,400 --> 00:24:02,559
having two fhc and

633
00:24:02,559 --> 00:24:04,880
key switching from one to the other

634
00:24:04,880 --> 00:24:07,520
we construct a different classical fx

635
00:24:07,520 --> 00:24:08,480
scheme

636
00:24:08,480 --> 00:24:10,400
as it's both quantum capable and rate

637
00:24:10,400 --> 00:24:12,000
one

638
00:24:12,000 --> 00:24:15,039
so this game again uses these spooky

639
00:24:15,039 --> 00:24:16,880
properties and we have to prove that

640
00:24:16,880 --> 00:24:18,480
it's both quantum capable

641
00:24:18,480 --> 00:24:20,720
and we also have to prove that

642
00:24:20,720 --> 00:24:23,279
it is rate one but uh

643
00:24:23,279 --> 00:24:24,880
the idea is essentially the same but

644
00:24:24,880 --> 00:24:26,400
instead of kissing from one scheme to

645
00:24:26,400 --> 00:24:27,520
the other

646
00:24:27,520 --> 00:24:29,200
we combine the best of both worlds and

647
00:24:29,200 --> 00:24:33,159
get one scheme that does both

648
00:24:33,760 --> 00:24:37,279
and that's basically it

649
00:24:37,279 --> 00:24:39,039
i'm going to sum up the results one last

650
00:24:39,039 --> 00:24:40,799
time

651
00:24:40,799 --> 00:24:42,480
so again

652
00:24:42,480 --> 00:24:44,400
what we constructed this paper is a

653
00:24:44,400 --> 00:24:46,480
maliciously circled private rape on

654
00:24:46,480 --> 00:24:48,400
quantum f18

655
00:24:48,400 --> 00:24:50,640
so by assuming a quantum effect c with

656
00:24:50,640 --> 00:24:52,720
this hybrid ciphertext form

657
00:24:52,720 --> 00:24:55,840
we first leave the protocol to

658
00:24:55,840 --> 00:24:58,159
malicious circuit privacy

659
00:24:58,159 --> 00:25:00,000
and then we also get optimal

660
00:25:00,000 --> 00:25:01,679
communication complexity construct the

661
00:25:01,679 --> 00:25:04,480
rate one quantity

662
00:25:04,480 --> 00:25:05,360
uh

663
00:25:05,360 --> 00:25:07,760
here we have the link to

664
00:25:07,760 --> 00:25:09,679
the full version of the paper if you

665
00:25:09,679 --> 00:25:11,600
want to check it out for more details

666
00:25:11,600 --> 00:25:12,799
and um

667
00:25:12,799 --> 00:25:14,880
that's that's pretty much it

668
00:25:14,880 --> 00:25:19,080
thank you and bye

