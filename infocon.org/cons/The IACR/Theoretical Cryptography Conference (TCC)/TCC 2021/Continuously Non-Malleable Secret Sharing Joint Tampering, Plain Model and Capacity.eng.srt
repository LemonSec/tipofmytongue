1
00:00:00,719 --> 00:00:02,800
hi everyone i'm januka priyan and now

2
00:00:02,800 --> 00:00:04,720
i'll present our work continuously on

3
00:00:04,720 --> 00:00:06,560
malleable secret sharing joint tampering

4
00:00:06,560 --> 00:00:08,639
playing model and capacity

5
00:00:08,639 --> 00:00:10,480
this is joint work with antonio founder

6
00:00:10,480 --> 00:00:12,880
and daniel eventuri

7
00:00:12,880 --> 00:00:14,559
secret sharing is a cryptographic

8
00:00:14,559 --> 00:00:16,320
primitive in which a player called the

9
00:00:16,320 --> 00:00:18,560
dealer has a secret message and shares

10
00:00:18,560 --> 00:00:21,039
it among several other players called

11
00:00:21,039 --> 00:00:23,600
parties such that only certain subsets

12
00:00:23,600 --> 00:00:25,760
of parties are able to fully reconstruct

13
00:00:25,760 --> 00:00:28,000
the message this is formalized through

14
00:00:28,000 --> 00:00:29,840
the notion of access structure which

15
00:00:29,840 --> 00:00:32,479
defines the authorized subsets which are

16
00:00:32,479 --> 00:00:34,880
able to reconstruct the secret formally

17
00:00:34,880 --> 00:00:37,040
there are two main properties the first

18
00:00:37,040 --> 00:00:39,280
one is correctness which says that every

19
00:00:39,280 --> 00:00:40,399
authorized

20
00:00:40,399 --> 00:00:42,640
subset of parties should be able to

21
00:00:42,640 --> 00:00:44,399
fully reconstruct the secret and the

22
00:00:44,399 --> 00:00:46,640
second one is privacy which says that no

23
00:00:46,640 --> 00:00:48,879
unauthorized subset of colluding parties

24
00:00:48,879 --> 00:00:50,719
should be able to learn any information

25
00:00:50,719 --> 00:00:53,199
about the secret

26
00:00:53,199 --> 00:00:55,520
clearly an attacker could try to break

27
00:00:55,520 --> 00:00:57,600
the scheme and learn the secret in other

28
00:00:57,600 --> 00:00:58,480
ways

29
00:00:58,480 --> 00:01:00,480
for example he could try to tamper with

30
00:01:00,480 --> 00:01:02,480
the shares so that the modified message

31
00:01:02,480 --> 00:01:04,640
is related to the original one when

32
00:01:04,640 --> 00:01:06,640
single sharing is used to achieve for

33
00:01:06,640 --> 00:01:08,720
instance threshold cryptography this

34
00:01:08,720 --> 00:01:10,799
could lead to related attacks which

35
00:01:10,799 --> 00:01:13,200
could be devastating to prevent this

36
00:01:13,200 --> 00:01:14,320
non-valuable cigarette sharing

37
00:01:14,320 --> 00:01:16,400
guarantees that after the modifications

38
00:01:16,400 --> 00:01:18,400
the reconstructed message is either the

39
00:01:18,400 --> 00:01:21,200
original one or an unrelated one

40
00:01:21,200 --> 00:01:23,119
another example is that the adversary

41
00:01:23,119 --> 00:01:24,400
could leak some information from

42
00:01:24,400 --> 00:01:26,720
possibly all the shares thus learning

43
00:01:26,720 --> 00:01:29,040
for instance some bits of the secret

44
00:01:29,040 --> 00:01:30,720
as before they get your resilient

45
00:01:30,720 --> 00:01:32,240
cigarette sharing prevents this by

46
00:01:32,240 --> 00:01:33,920
revealing no information about the

47
00:01:33,920 --> 00:01:36,240
secret even in the case of leakage

48
00:01:36,240 --> 00:01:39,040
usually these two flowers of security

49
00:01:39,040 --> 00:01:40,720
are considered together in what is

50
00:01:40,720 --> 00:01:42,399
called ligature resilient non-malleable

51
00:01:42,399 --> 00:01:44,640
cigarette sharing

52
00:01:44,640 --> 00:01:47,280
however some limitations are necessary

53
00:01:47,280 --> 00:01:49,200
for instance it is impossible to protect

54
00:01:49,200 --> 00:01:50,799
against attacks which are able to

55
00:01:50,799 --> 00:01:53,040
jointly leak from or tamper with all the

56
00:01:53,040 --> 00:01:55,040
shares because the adversary could

57
00:01:55,040 --> 00:01:56,079
simply

58
00:01:56,079 --> 00:01:57,920
for instance reconstruct the secret and

59
00:01:57,920 --> 00:02:00,960
output distinguishing bit or in the case

60
00:02:00,960 --> 00:02:02,799
of dampering after reconstructing the

61
00:02:02,799 --> 00:02:04,799
secret the adversary could flip one bit

62
00:02:04,799 --> 00:02:06,880
and then share the secret again

63
00:02:06,880 --> 00:02:09,520
for this reason liquid resilience and

64
00:02:09,520 --> 00:02:11,599
normal ability are defined with respect

65
00:02:11,599 --> 00:02:14,080
to a family of functions in our work we

66
00:02:14,080 --> 00:02:15,840
consider the family of joint tampering

67
00:02:15,840 --> 00:02:17,440
in which the adversary is able to

68
00:02:17,440 --> 00:02:19,599
partition all the shares in unauthorized

69
00:02:19,599 --> 00:02:22,239
disjoint subsets and then he is able to

70
00:02:22,239 --> 00:02:24,239
jointly damper with all the shares in

71
00:02:24,239 --> 00:02:25,760
each subset

72
00:02:25,760 --> 00:02:28,080
the same strategy applies for leakage in

73
00:02:28,080 --> 00:02:29,920
which case the output of the leakage

74
00:02:29,920 --> 00:02:32,000
function is computed jointly on all the

75
00:02:32,000 --> 00:02:34,720
shares within each subset

76
00:02:34,720 --> 00:02:36,720
finally we consider the stronger notion

77
00:02:36,720 --> 00:02:38,959
of continuous nominal ability in which

78
00:02:38,959 --> 00:02:41,040
after fixing a reconstruction set the

79
00:02:41,040 --> 00:02:42,800
adversary is able to tamper with the

80
00:02:42,800 --> 00:02:44,319
shares and then see the result of the

81
00:02:44,319 --> 00:02:46,959
reconstruction as many times he wants as

82
00:02:46,959 --> 00:02:49,920
long as the constructed message is valid

83
00:02:49,920 --> 00:02:51,680
again also in this case we consider

84
00:02:51,680 --> 00:02:53,760
leakage attacks obtaining what is called

85
00:02:53,760 --> 00:02:55,040
leakage resilient continuous

86
00:02:55,040 --> 00:02:56,400
non-malleability

87
00:02:56,400 --> 00:02:58,879
however this model comes with some

88
00:02:58,879 --> 00:03:01,200
further limitations the first one is

89
00:03:01,200 --> 00:03:02,319
that achieving continuous

90
00:03:02,319 --> 00:03:04,239
non-malleability in the information that

91
00:03:04,239 --> 00:03:06,800
accepting is proven to be impossible and

92
00:03:06,800 --> 00:03:08,239
therefore we can only achieve

93
00:03:08,239 --> 00:03:10,080
computational security

94
00:03:10,080 --> 00:03:12,239
the second limitation as i said before

95
00:03:12,239 --> 00:03:14,400
is the self-destruct trigger whenever

96
00:03:14,400 --> 00:03:15,920
the result of a tampering query is

97
00:03:15,920 --> 00:03:18,480
invalid the oracle self-destructs and no

98
00:03:18,480 --> 00:03:20,800
more queries are allowed again this is a

99
00:03:20,800 --> 00:03:22,480
limitation which is inherent to

100
00:03:22,480 --> 00:03:24,159
continuous noun malleability and it is

101
00:03:24,159 --> 00:03:27,760
easy to show that this is necessary

102
00:03:27,760 --> 00:03:29,440
in this setting let me show our

103
00:03:29,440 --> 00:03:30,799
construction which is a slight

104
00:03:30,799 --> 00:03:32,720
modification of a recent construction of

105
00:03:32,720 --> 00:03:35,120
goyal cerinivasan and zhu

106
00:03:35,120 --> 00:03:37,599
upon input a message m the first step is

107
00:03:37,599 --> 00:03:39,280
to share it using shamir's signal

108
00:03:39,280 --> 00:03:42,560
sharing obtaining shares s1 up to sn

109
00:03:42,560 --> 00:03:45,360
then for sure we compute the split state

110
00:03:45,360 --> 00:03:47,200
leakage resilient one time statistically

111
00:03:47,200 --> 00:03:49,040
in a malleable code of it

112
00:03:49,040 --> 00:03:51,120
and finally we apply again xiamir

113
00:03:51,120 --> 00:03:52,560
cigarette sharing to the right part of

114
00:03:52,560 --> 00:03:53,920
each code word

115
00:03:53,920 --> 00:03:56,799
the new shares are defined as follows

116
00:03:56,799 --> 00:03:58,879
the first share is the left part of the

117
00:03:58,879 --> 00:04:01,200
first code word and all the first shares

118
00:04:01,200 --> 00:04:02,720
of the right parts

119
00:04:02,720 --> 00:04:05,040
similarly the second share is the left

120
00:04:05,040 --> 00:04:07,120
part of the second code word and all the

121
00:04:07,120 --> 00:04:09,439
second shares of the right parts and so

122
00:04:09,439 --> 00:04:10,720
on

123
00:04:10,720 --> 00:04:12,879
until here this is the construction of

124
00:04:12,879 --> 00:04:15,599
goyala srinivasan and zhu without

125
00:04:15,599 --> 00:04:18,079
significant modifications which we also

126
00:04:18,079 --> 00:04:20,160
proved to be literature resilient other

127
00:04:20,160 --> 00:04:21,839
than non-malleable

128
00:04:21,839 --> 00:04:24,000
then we make our modification consisting

129
00:04:24,000 --> 00:04:25,919
of computing a perfectly binding a

130
00:04:25,919 --> 00:04:27,680
computationally hidden commitment to the

131
00:04:27,680 --> 00:04:29,919
message and sharing the randomness along

132
00:04:29,919 --> 00:04:31,520
with the message

133
00:04:31,520 --> 00:04:33,040
in our work we proved that this

134
00:04:33,040 --> 00:04:34,800
modification suffices to obtain the

135
00:04:34,800 --> 00:04:36,639
first legacy resilient continuously on

136
00:04:36,639 --> 00:04:38,720
malleable secret sharing scheme against

137
00:04:38,720 --> 00:04:41,120
joint tampering in the brain model

138
00:04:41,120 --> 00:04:43,600
indeed almost all the other continuously

139
00:04:43,600 --> 00:04:45,360
and malleable secret sharing schemes are

140
00:04:45,360 --> 00:04:46,960
only secure against independent

141
00:04:46,960 --> 00:04:48,479
tampering and the only one which is

142
00:04:48,479 --> 00:04:50,479
secured against joint tampering actually

143
00:04:50,479 --> 00:04:53,599
needs a trusted setup

144
00:04:53,759 --> 00:04:55,600
the proof of normal ability is quite

145
00:04:55,600 --> 00:04:58,240
long but i'll show you the main ideas

146
00:04:58,240 --> 00:05:00,400
consider the first two steps of the

147
00:05:00,400 --> 00:05:02,639
scheme consisting of computing shamir

148
00:05:02,639 --> 00:05:04,639
cigarette sharing of the pair message

149
00:05:04,639 --> 00:05:07,199
randomness and then computing a normal

150
00:05:07,199 --> 00:05:09,199
encoding of each share

151
00:05:09,199 --> 00:05:11,039
the first fact we want to prove is that

152
00:05:11,039 --> 00:05:13,280
not bursary is able to distinguish with

153
00:05:13,280 --> 00:05:15,520
more than negligible advantage between

154
00:05:15,520 --> 00:05:17,680
the original security game and annabelle

155
00:05:17,680 --> 00:05:19,520
game in which we replace the first share

156
00:05:19,520 --> 00:05:21,840
with a completely random share

157
00:05:21,840 --> 00:05:24,080
here we proceed by induction is the

158
00:05:24,080 --> 00:05:26,080
adversary is able to distinguish between

159
00:05:26,080 --> 00:05:28,080
the two gains by only performing one

160
00:05:28,080 --> 00:05:30,479
query then it is possible to construct a

161
00:05:30,479 --> 00:05:32,720
reduction which breaks statistical

162
00:05:32,720 --> 00:05:34,880
one-time nomiability of the nominable

163
00:05:34,880 --> 00:05:35,840
code

164
00:05:35,840 --> 00:05:37,759
for the inductive step suppose that the

165
00:05:37,759 --> 00:05:39,919
adversary is only allowed to perform p

166
00:05:39,919 --> 00:05:42,400
tampering queries but not bursary is

167
00:05:42,400 --> 00:05:43,919
able to distinguish between the two

168
00:05:43,919 --> 00:05:47,120
games by performing less than p queries

169
00:05:47,120 --> 00:05:49,680
then the decisive query is the last one

170
00:05:49,680 --> 00:05:51,759
and all the other ones can be simulated

171
00:05:51,759 --> 00:05:53,680
by the reduction

172
00:05:53,680 --> 00:05:56,160
how well first the reduction leaks the

173
00:05:56,160 --> 00:05:57,840
decessor information to correctly

174
00:05:57,840 --> 00:06:00,080
compute the tampering and then obtains

175
00:06:00,080 --> 00:06:02,240
the tempered commitment

176
00:06:02,240 --> 00:06:03,039
then

177
00:06:03,039 --> 00:06:04,880
since the reduction is unbounded it is

178
00:06:04,880 --> 00:06:06,720
able to open the commitment by brute

179
00:06:06,720 --> 00:06:08,720
force and since this is perfectly

180
00:06:08,720 --> 00:06:10,720
binding it allows to obtain the tempered

181
00:06:10,720 --> 00:06:11,680
message

182
00:06:11,680 --> 00:06:13,360
finally the reduction checks that the

183
00:06:13,360 --> 00:06:15,520
simulation has no errors by performing a

184
00:06:15,520 --> 00:06:17,440
leakage query just before the last

185
00:06:17,440 --> 00:06:19,440
tempering query

186
00:06:19,440 --> 00:06:21,520
now it only remains to discuss one

187
00:06:21,520 --> 00:06:23,440
detail which is how does the reduction

188
00:06:23,440 --> 00:06:25,039
simulate the leakage queries and the

189
00:06:25,039 --> 00:06:26,639
last numbering query

190
00:06:26,639 --> 00:06:28,720
this is the reason for the third step of

191
00:06:28,720 --> 00:06:30,960
the scheme in particular the reduction

192
00:06:30,960 --> 00:06:32,639
generates all the information which is

193
00:06:32,639 --> 00:06:34,880
not related to the first code word as

194
00:06:34,880 --> 00:06:37,039
well as some shares for the right part

195
00:06:37,039 --> 00:06:38,880
of the first code word

196
00:06:38,880 --> 00:06:40,960
then the reduction constructs the left

197
00:06:40,960 --> 00:06:43,039
leakage or tampering function which

198
00:06:43,039 --> 00:06:45,120
takes as input the left part or the

199
00:06:45,120 --> 00:06:46,720
first code word and computes the

200
00:06:46,720 --> 00:06:49,120
corresponding joint leakage or hampering

201
00:06:49,120 --> 00:06:51,039
and the right leakage or tampering

202
00:06:51,039 --> 00:06:53,440
function which takes as input the right

203
00:06:53,440 --> 00:06:54,960
part of the first code word

204
00:06:54,960 --> 00:06:56,479
deterministically completes the

205
00:06:56,479 --> 00:06:58,720
corresponding shamir cigarette sharing

206
00:06:58,720 --> 00:07:00,639
and finally computes the corresponding

207
00:07:00,639 --> 00:07:03,520
joint leakage or tampering

208
00:07:03,520 --> 00:07:05,680
this concludes the proof of the original

209
00:07:05,680 --> 00:07:07,680
game being statistically close to the

210
00:07:07,680 --> 00:07:10,880
hybrid one however the exact same proof

211
00:07:10,880 --> 00:07:12,880
can be used to step to another hybrid

212
00:07:12,880 --> 00:07:14,960
game in which the first two shares are

213
00:07:14,960 --> 00:07:17,520
completely random then the first three

214
00:07:17,520 --> 00:07:20,000
and so on until all the shares are

215
00:07:20,000 --> 00:07:22,560
completely random at this point the only

216
00:07:22,560 --> 00:07:24,319
information related to the original

217
00:07:24,319 --> 00:07:27,199
message is the commitment but by the

218
00:07:27,199 --> 00:07:29,039
computational hiding property we can

219
00:07:29,039 --> 00:07:31,039
finally replace it with a commitment of

220
00:07:31,039 --> 00:07:33,520
a completely unrelated message therefore

221
00:07:33,520 --> 00:07:35,680
concluding the proof

222
00:07:35,680 --> 00:07:38,080
the next result of our paper involves

223
00:07:38,080 --> 00:07:39,520
studying the rate of the cigarette

224
00:07:39,520 --> 00:07:40,800
sharing schemes

225
00:07:40,800 --> 00:07:42,720
which is the ratio between the length of

226
00:07:42,720 --> 00:07:44,240
the message and the length of the

227
00:07:44,240 --> 00:07:46,000
largest share

228
00:07:46,000 --> 00:07:47,840
in this setting we achieve a negative

229
00:07:47,840 --> 00:07:50,160
result which informally says that any

230
00:07:50,160 --> 00:07:51,599
silver sharing scheme which is

231
00:07:51,599 --> 00:07:53,680
continuously unmalleable against jointly

232
00:07:53,680 --> 00:07:55,759
dampering with more than t over two

233
00:07:55,759 --> 00:07:59,360
shares cannot have shares too small

234
00:07:59,360 --> 00:08:01,440
the proof is quite simple and the main

235
00:08:01,440 --> 00:08:03,199
idea is to construct a commitment scheme

236
00:08:03,199 --> 00:08:04,639
from the non-malleable serial sharing

237
00:08:04,639 --> 00:08:07,520
scheme in particular we consider the

238
00:08:07,520 --> 00:08:09,520
commitment scheme which upon input the

239
00:08:09,520 --> 00:08:12,960
message m and random coins are computes

240
00:08:12,960 --> 00:08:15,120
at t out of n continuously on malleable

241
00:08:15,120 --> 00:08:17,599
secret sharing of m with random coins r

242
00:08:17,599 --> 00:08:20,639
and outputs the first t minus k shares

243
00:08:20,639 --> 00:08:23,440
where k is the maximum number of shares

244
00:08:23,440 --> 00:08:25,280
the adversary is allowed to jointly

245
00:08:25,280 --> 00:08:26,479
tamper with

246
00:08:26,479 --> 00:08:28,639
is this commitment scheme perfectly

247
00:08:28,639 --> 00:08:31,120
binding well suppose not

248
00:08:31,120 --> 00:08:32,880
then the commitment has at least two

249
00:08:32,880 --> 00:08:34,640
different openings which are the

250
00:08:34,640 --> 00:08:36,640
original one and another one with a

251
00:08:36,640 --> 00:08:38,839
message m prime which is different from

252
00:08:38,839 --> 00:08:42,240
n this means that there exists a signal

253
00:08:42,240 --> 00:08:44,240
sharing of m prime which is different

254
00:08:44,240 --> 00:08:46,240
from a single sharing of m

255
00:08:46,240 --> 00:08:48,800
but as the first d minus k shares in

256
00:08:48,800 --> 00:08:50,160
common with it

257
00:08:50,160 --> 00:08:52,080
therefore it is possible to construct an

258
00:08:52,080 --> 00:08:54,320
adversary which learns the value of k

259
00:08:54,320 --> 00:08:55,839
shares of m

260
00:08:55,839 --> 00:08:58,240
one bit at a time and in particular by

261
00:08:58,240 --> 00:08:59,920
replacing them with the corresponding

262
00:08:59,920 --> 00:09:02,000
shares of a prime if the bit to be

263
00:09:02,000 --> 00:09:04,320
leaked is one and applying the identity

264
00:09:04,320 --> 00:09:06,880
function otherwise finally after

265
00:09:06,880 --> 00:09:09,040
learning the case shares the adversary

266
00:09:09,040 --> 00:09:11,120
could query one last tampering function

267
00:09:11,120 --> 00:09:12,880
in which he is able to reconstruct the

268
00:09:12,880 --> 00:09:15,360
message and learn one bit by possibly

269
00:09:15,360 --> 00:09:18,080
producing an invalid code word

270
00:09:18,080 --> 00:09:19,600
since the attack

271
00:09:19,600 --> 00:09:21,839
breaks continuous normal ability then

272
00:09:21,839 --> 00:09:23,760
the commitment scheme must be perfectly

273
00:09:23,760 --> 00:09:25,519
binding to avoid it

274
00:09:25,519 --> 00:09:27,760
but this also implies that the size of

275
00:09:27,760 --> 00:09:30,480
the commitment must be at least the size

276
00:09:30,480 --> 00:09:32,640
of the message which implies that the

277
00:09:32,640 --> 00:09:34,399
size of a share must be at least the

278
00:09:34,399 --> 00:09:36,480
size of a message divided by the number

279
00:09:36,480 --> 00:09:38,800
of shares inside the commitment

280
00:09:38,800 --> 00:09:40,880
therefore the capacity which is the

281
00:09:40,880 --> 00:09:42,800
maximum achievable rate of any

282
00:09:42,800 --> 00:09:44,160
continuously unmalleable cigarette

283
00:09:44,160 --> 00:09:45,839
sharing scheme against joint campaigning

284
00:09:45,839 --> 00:09:47,920
with more than half of the shares in the

285
00:09:47,920 --> 00:09:50,800
reconstruction threshold is bounded by t

286
00:09:50,800 --> 00:09:53,040
minus k

287
00:09:53,040 --> 00:09:55,200
we show now a compiler to achieve such

288
00:09:55,200 --> 00:09:56,480
optimal rate

289
00:09:56,480 --> 00:09:58,640
first we start from our normal level

290
00:09:58,640 --> 00:10:00,240
segregation scheme

291
00:10:00,240 --> 00:10:02,320
then we apply the following modification

292
00:10:02,320 --> 00:10:04,480
we replace the message with a random key

293
00:10:04,480 --> 00:10:06,640
for an encryption scheme and we encrypt

294
00:10:06,640 --> 00:10:07,920
the message

295
00:10:07,920 --> 00:10:09,760
if we append the encrypted message to

296
00:10:09,760 --> 00:10:11,839
each share we would obtain a rate of one

297
00:10:11,839 --> 00:10:14,320
which is good but not optimal

298
00:10:14,320 --> 00:10:16,320
instead we use an information dispersal

299
00:10:16,320 --> 00:10:18,399
scheme which is almost the same of a

300
00:10:18,399 --> 00:10:20,079
secret sharing scheme but without the

301
00:10:20,079 --> 00:10:23,200
privacy property to share the ciphertext

302
00:10:23,200 --> 00:10:25,279
and we append one share of the

303
00:10:25,279 --> 00:10:28,079
ciphertext to each share of the key

304
00:10:28,079 --> 00:10:29,920
the advantage in using an information

305
00:10:29,920 --> 00:10:32,000
dispersal scheme is that it is easy to

306
00:10:32,000 --> 00:10:34,480
achieve one with raid t-star where

307
00:10:34,480 --> 00:10:37,279
t-star is its threshold

308
00:10:37,279 --> 00:10:39,279
by applying this compiler to our

309
00:10:39,279 --> 00:10:41,120
previous result we obtain a leakage

310
00:10:41,120 --> 00:10:42,800
resilient continuously on malleable

311
00:10:42,800 --> 00:10:44,399
secret sharing scheme against joint

312
00:10:44,399 --> 00:10:46,959
tampering in the plane model with raid t

313
00:10:46,959 --> 00:10:49,680
star which is a free parameter

314
00:10:49,680 --> 00:10:51,920
however we only achieved this result

315
00:10:51,920 --> 00:10:53,760
with the following restriction when

316
00:10:53,760 --> 00:10:55,920
tampering with the shares the adversary

317
00:10:55,920 --> 00:10:58,399
is forced to choose either zero or at

318
00:10:58,399 --> 00:11:00,640
least the disturb shares from each

319
00:11:00,640 --> 00:11:02,240
subset of the partition for the

320
00:11:02,240 --> 00:11:04,320
reconstruction procedure

321
00:11:04,320 --> 00:11:05,680
here is

322
00:11:05,680 --> 00:11:07,440
the idea of the proof

323
00:11:07,440 --> 00:11:09,680
first we define a hybrid game in which

324
00:11:09,680 --> 00:11:12,320
the shared key is a random key unrelated

325
00:11:12,320 --> 00:11:14,880
to the one used for decryption

326
00:11:14,880 --> 00:11:16,560
and we proved that this is

327
00:11:16,560 --> 00:11:18,240
computationally close to the region

328
00:11:18,240 --> 00:11:20,560
original experiment by reduction

329
00:11:20,560 --> 00:11:22,640
in particular the reduction reconstructs

330
00:11:22,640 --> 00:11:24,480
the modified cipher text inside the

331
00:11:24,480 --> 00:11:26,800
tempering oracle and then outputs a

332
00:11:26,800 --> 00:11:29,360
secret sharing of 0 or a 1 depending on

333
00:11:29,360 --> 00:11:32,560
the first bit of the ciphertext

334
00:11:32,560 --> 00:11:33,279
then

335
00:11:33,279 --> 00:11:35,200
the reduction does the same for the

336
00:11:35,200 --> 00:11:36,959
second and all the other bits of the

337
00:11:36,959 --> 00:11:38,959
ciphertext therefore leaking all the

338
00:11:38,959 --> 00:11:41,120
tampered ciphertext by only using

339
00:11:41,120 --> 00:11:42,640
tampering queries

340
00:11:42,640 --> 00:11:44,399
this works because the reconstructed

341
00:11:44,399 --> 00:11:45,600
ciphertext

342
00:11:45,600 --> 00:11:47,920
must be always the same in each template

343
00:11:47,920 --> 00:11:49,680
subset otherwise the code word is

344
00:11:49,680 --> 00:11:51,360
invalid and the oracle

345
00:11:51,360 --> 00:11:54,399
self-destructs however this is also the

346
00:11:54,399 --> 00:11:56,160
reason for the restriction on the

347
00:11:56,160 --> 00:11:57,680
adversary model

348
00:11:57,680 --> 00:11:59,440
indeed the reconstruction procedure

349
00:11:59,440 --> 00:12:01,839
needs to see at least the star shares of

350
00:12:01,839 --> 00:12:04,240
the ciphertext in order to reconstruct

351
00:12:04,240 --> 00:12:05,440
it

352
00:12:05,440 --> 00:12:06,560
finally

353
00:12:06,560 --> 00:12:08,639
when the shared key is unrelated to the

354
00:12:08,639 --> 00:12:10,800
encryption key a simple reduction to the

355
00:12:10,800 --> 00:12:12,160
security of the encryption scheme

356
00:12:12,160 --> 00:12:14,240
against chosen ciphertext attacks

357
00:12:14,240 --> 00:12:17,120
completes the proof

358
00:12:17,120 --> 00:12:19,440
in this slide i copied the theorem and

359
00:12:19,440 --> 00:12:21,760
the restriction for reference

360
00:12:21,760 --> 00:12:23,519
the main consequence of our raid

361
00:12:23,519 --> 00:12:25,360
compiler is that we obtain the first

362
00:12:25,360 --> 00:12:27,200
continuously unmalleable secret sharing

363
00:12:27,200 --> 00:12:29,519
scheme against independent tampering

364
00:12:29,519 --> 00:12:32,480
breaking the rate 1 barrier notice that

365
00:12:32,480 --> 00:12:34,800
the independent tampering is a subset of

366
00:12:34,800 --> 00:12:36,880
joint tampering in which the attacker is

367
00:12:36,880 --> 00:12:38,880
only allowed to tamper with each share

368
00:12:38,880 --> 00:12:40,560
independently

369
00:12:40,560 --> 00:12:42,959
in this case the restriction says that

370
00:12:42,959 --> 00:12:45,200
the adversary is forced to choose either

371
00:12:45,200 --> 00:12:47,680
zero or at least one share from each

372
00:12:47,680 --> 00:12:50,480
subset making this statement always true

373
00:12:50,480 --> 00:12:53,440
for the case of independent tampering

374
00:12:53,440 --> 00:12:55,360
moreover the corollary follows by

375
00:12:55,360 --> 00:12:57,120
considering our continuously malleable

376
00:12:57,120 --> 00:12:58,959
secret sharing scheme against jointly

377
00:12:58,959 --> 00:13:01,600
tampering with t over two shares for

378
00:13:01,600 --> 00:13:04,800
which d star equals t over two

379
00:13:04,800 --> 00:13:06,880
indeed since the independent tampering

380
00:13:06,880 --> 00:13:09,200
queries can be viewed as k join

381
00:13:09,200 --> 00:13:11,680
tampering queries for any key

382
00:13:11,680 --> 00:13:12,480
the

383
00:13:12,480 --> 00:13:14,240
scheme is also secure against

384
00:13:14,240 --> 00:13:16,240
independent tampering thus proving the

385
00:13:16,240 --> 00:13:17,920
corollary

386
00:13:17,920 --> 00:13:20,079
in this setting we also study how to

387
00:13:20,079 --> 00:13:21,760
achieve optimal rate in the random

388
00:13:21,760 --> 00:13:23,839
oracle model and in the algebraic group

389
00:13:23,839 --> 00:13:25,200
model

390
00:13:25,200 --> 00:13:27,360
in this case we slightly modify our

391
00:13:27,360 --> 00:13:30,480
construction so that t star equals t and

392
00:13:30,480 --> 00:13:32,959
each share also contains the hash of the

393
00:13:32,959 --> 00:13:35,360
ciphertext this is not a problem because

394
00:13:35,360 --> 00:13:36,959
now the reduction can extract the

395
00:13:36,959 --> 00:13:39,279
ciphertext from the hash and does not

396
00:13:39,279 --> 00:13:40,800
need to reconstruct it inside the

397
00:13:40,800 --> 00:13:43,600
tampering oracle anymore therefore

398
00:13:43,600 --> 00:13:45,680
in both the random oracle model and the

399
00:13:45,680 --> 00:13:48,000
algebraic group model we achieve optimal

400
00:13:48,000 --> 00:13:49,519
rate t

401
00:13:49,519 --> 00:13:52,399
notice that this does not contradict our

402
00:13:52,399 --> 00:13:54,639
negative result about the red upper

403
00:13:54,639 --> 00:13:56,560
bound because our result only applies in

404
00:13:56,560 --> 00:13:59,279
the brain model

405
00:13:59,279 --> 00:14:01,680
so in conclusion here is a summary of

406
00:14:01,680 --> 00:14:04,079
our results followed by some problems we

407
00:14:04,079 --> 00:14:05,279
leave open

408
00:14:05,279 --> 00:14:07,360
first we construct the first secret

409
00:14:07,360 --> 00:14:08,880
sharing scheme achieving continuous

410
00:14:08,880 --> 00:14:10,959
normal ability against joint leakage and

411
00:14:10,959 --> 00:14:12,959
tampering in the plane model

412
00:14:12,959 --> 00:14:14,880
then we prove a negative result on

413
00:14:14,880 --> 00:14:16,720
continuously on malleable secret sharing

414
00:14:16,720 --> 00:14:19,040
schemes by finding an upper bound on the

415
00:14:19,040 --> 00:14:21,920
rate of such schemes in the plain model

416
00:14:21,920 --> 00:14:24,000
finally we show how to achieve such

417
00:14:24,000 --> 00:14:26,160
optimal rate by adding a constraint to

418
00:14:26,160 --> 00:14:28,880
the tampering bodies of the adversary we

419
00:14:28,880 --> 00:14:30,959
also applied this result to achieve the

420
00:14:30,959 --> 00:14:32,720
first continuously unmalleable secret

421
00:14:32,720 --> 00:14:34,720
sharing scheme against independent

422
00:14:34,720 --> 00:14:36,959
tampering in the plane model with rate

423
00:14:36,959 --> 00:14:39,360
strictly greater than one

424
00:14:39,360 --> 00:14:41,760
a first natural open problem is to find

425
00:14:41,760 --> 00:14:43,760
out whether it is possible to achieve

426
00:14:43,760 --> 00:14:46,240
optimality in a more general setting

427
00:14:46,240 --> 00:14:48,560
without the need to add restrictions to

428
00:14:48,560 --> 00:14:51,440
the behavior of the adversary

429
00:14:51,440 --> 00:14:54,000
then we leave open to improve the

430
00:14:54,000 --> 00:14:56,399
overall efficiency of our construction

431
00:14:56,399 --> 00:14:58,560
so that the rate optimality also holds

432
00:14:58,560 --> 00:15:01,440
in the case of small messages

433
00:15:01,440 --> 00:15:03,519
another open problem is to extend our

434
00:15:03,519 --> 00:15:05,760
results to more general cases for

435
00:15:05,760 --> 00:15:07,839
instance by removing restrictions on the

436
00:15:07,839 --> 00:15:10,079
threshold or even better for general

437
00:15:10,079 --> 00:15:12,639
access structures we also want to stress

438
00:15:12,639 --> 00:15:14,720
that our results on the rate hold

439
00:15:14,720 --> 00:15:16,800
without restrictions on the threshold

440
00:15:16,800 --> 00:15:18,800
but for now the only continuously

441
00:15:18,800 --> 00:15:20,639
malleable scheme against joint tampering

442
00:15:20,639 --> 00:15:22,560
in the plane model is the one in our

443
00:15:22,560 --> 00:15:25,519
work which has the satisfaction

444
00:15:25,519 --> 00:15:27,360
well that's all thank you for your

445
00:15:27,360 --> 00:15:30,360
attention

