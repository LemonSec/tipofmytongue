1
00:00:02,240 --> 00:00:04,720
hello everyone welcome to my talk

2
00:00:04,720 --> 00:00:07,040
i am jigar from university of virginia

3
00:00:07,040 --> 00:00:09,120
today i will present our paper

4
00:00:09,120 --> 00:00:11,440
polynomial time targeted attack on coin

5
00:00:11,440 --> 00:00:13,840
tossing for any number of corruptions

6
00:00:13,840 --> 00:00:16,640
this is a joint work with ahmed at sami

7
00:00:16,640 --> 00:00:19,119
said mahalo jifar and the muhammad

8
00:00:19,119 --> 00:00:21,759
mahamudi

9
00:00:22,720 --> 00:00:25,119
let's start a collective coin tossing

10
00:00:25,119 --> 00:00:27,199
protocol is a protocol when several

11
00:00:27,199 --> 00:00:29,119
parties try to decide a bit by each

12
00:00:29,119 --> 00:00:30,720
sending out the message

13
00:00:30,720 --> 00:00:33,120
in the figure we show that there are n

14
00:00:33,120 --> 00:00:36,000
parties each of them send out a message

15
00:00:36,000 --> 00:00:38,879
omega 1 omega 2 to omega n

16
00:00:38,879 --> 00:00:40,800
and the protocol takes all these n

17
00:00:40,800 --> 00:00:43,920
messages and returns the output bit b

18
00:00:43,920 --> 00:00:47,280
the output bit b is either 0 or 1 and it

19
00:00:47,280 --> 00:00:48,719
can be biased

20
00:00:48,719 --> 00:00:49,680
that is

21
00:00:49,680 --> 00:00:52,239
it is not always 50 50 but can be any

22
00:00:52,239 --> 00:00:54,000
probability mu

23
00:00:54,000 --> 00:00:56,239
note that there is also a more general

24
00:00:56,239 --> 00:00:57,039
case

25
00:00:57,039 --> 00:00:58,960
when the parties can send more than one

26
00:00:58,960 --> 00:01:01,840
message but in our research we focus on

27
00:01:01,840 --> 00:01:04,159
the simple case which we will see is

28
00:01:04,159 --> 00:01:06,560
already very general and have a lot of

29
00:01:06,560 --> 00:01:08,880
applications

30
00:01:08,880 --> 00:01:11,119
now imagine an adversary want to bias

31
00:01:11,119 --> 00:01:13,520
the output to the result it desires in

32
00:01:13,520 --> 00:01:16,320
the figure b equals 1 the adversary is

33
00:01:16,320 --> 00:01:18,960
allowed to make k replacement

34
00:01:18,960 --> 00:01:21,200
the budget k is the parameter of the

35
00:01:21,200 --> 00:01:22,479
adversary

36
00:01:22,479 --> 00:01:24,240
the adversary in the figure chose to

37
00:01:24,240 --> 00:01:28,080
modify the messages omega 1 and omega n

38
00:01:28,080 --> 00:01:30,240
and with such modification the address

39
00:01:30,240 --> 00:01:31,520
will successfully increase the

40
00:01:31,520 --> 00:01:34,000
probability that output b equals 1 to mu

41
00:01:34,000 --> 00:01:35,840
prime

42
00:01:35,840 --> 00:01:38,000
we call this type of attack as targeted

43
00:01:38,000 --> 00:01:40,320
attack because it targets to increase a

44
00:01:40,320 --> 00:01:42,479
specific output b equals one

45
00:01:42,479 --> 00:01:44,479
on the other hand on target heat attack

46
00:01:44,479 --> 00:01:46,399
just won't mess up with the output but

47
00:01:46,399 --> 00:01:48,880
doesn't care which direction it goes so

48
00:01:48,880 --> 00:01:52,960
clearly targeted attack is more powerful

49
00:01:53,200 --> 00:01:55,200
here we give a formal definition of our

50
00:01:55,200 --> 00:01:57,920
setting in our protocol pi we have n

51
00:01:57,920 --> 00:02:02,240
parties p1 to pn and at rom i the party

52
00:02:02,240 --> 00:02:05,119
pi sends out a single message of mega i

53
00:02:05,119 --> 00:02:08,160
that can depend on previous messages

54
00:02:08,160 --> 00:02:10,800
the protocol returns a bit b which is a

55
00:02:10,800 --> 00:02:13,520
function over all the messages

56
00:02:13,520 --> 00:02:16,319
for our adversary we consider a targeted

57
00:02:16,319 --> 00:02:18,239
k replacing adversary that aims to

58
00:02:18,239 --> 00:02:20,640
increase the probability that b equals

59
00:02:20,640 --> 00:02:21,760
1.

60
00:02:21,760 --> 00:02:24,319
which of course is symmetric to increase

61
00:02:24,319 --> 00:02:26,800
the probability b equals zero

62
00:02:26,800 --> 00:02:29,360
the address rate at each round system

63
00:02:29,360 --> 00:02:31,440
all the previous messages omega one two

64
00:02:31,440 --> 00:02:33,840
omega n minus one and also the current

65
00:02:33,840 --> 00:02:35,440
message omega i

66
00:02:35,440 --> 00:02:37,599
the adversary can then replace omega i

67
00:02:37,599 --> 00:02:40,319
with omega i prime which is why we call

68
00:02:40,319 --> 00:02:42,640
this replacing anniversary such

69
00:02:42,640 --> 00:02:45,040
adversary is also called strong adaptive

70
00:02:45,040 --> 00:02:47,760
anniversary by goldman sachs at all

71
00:02:47,760 --> 00:02:49,840
the adversary has a budget k which is

72
00:02:49,840 --> 00:02:52,800
the total number of replacements allowed

73
00:02:52,800 --> 00:02:55,200
as a illustration our k replacing

74
00:02:55,200 --> 00:02:57,440
adversary act like the following the

75
00:02:57,440 --> 00:03:01,360
address we want to pass the output one

76
00:03:01,360 --> 00:03:03,760
so at round one party once another

77
00:03:03,760 --> 00:03:06,239
message omega1 and adversary decide

78
00:03:06,239 --> 00:03:08,480
whether to replace it or not

79
00:03:08,480 --> 00:03:10,480
in this case i'd rather choose to

80
00:03:10,480 --> 00:03:13,280
replace the message to omega one prime

81
00:03:13,280 --> 00:03:15,519
at round two party two center message

82
00:03:15,519 --> 00:03:18,560
omega two which will depend on omega 1

83
00:03:18,560 --> 00:03:20,800
and adversary choose whether to replace

84
00:03:20,800 --> 00:03:22,159
it

85
00:03:22,159 --> 00:03:24,159
in this case electricity does not make

86
00:03:24,159 --> 00:03:25,760
replacement

87
00:03:25,760 --> 00:03:28,480
and finally at run n

88
00:03:28,480 --> 00:03:30,480
party and sends out the message which

89
00:03:30,480 --> 00:03:32,080
could depend on all the previous

90
00:03:32,080 --> 00:03:33,360
messages

91
00:03:33,360 --> 00:03:35,360
that there is business successfully bias

92
00:03:35,360 --> 00:03:38,000
the output b21

93
00:03:38,000 --> 00:03:40,400
this is an online adversary which is the

94
00:03:40,400 --> 00:03:42,080
focus of this work

95
00:03:42,080 --> 00:03:43,840
on the contrary

96
00:03:43,840 --> 00:03:45,599
an offline adversary since all the

97
00:03:45,599 --> 00:03:49,680
messages at first and then big changes

98
00:03:49,680 --> 00:03:51,920
so recall that b prime is the output

99
00:03:51,920 --> 00:03:53,599
after adversary

100
00:03:53,599 --> 00:03:55,920
let mu prime be the probability b prime

101
00:03:55,920 --> 00:03:58,159
equals 1 and mu b the probability of b

102
00:03:58,159 --> 00:03:59,439
equals 1

103
00:03:59,439 --> 00:04:01,439
we define our address scheme to be mu

104
00:04:01,439 --> 00:04:02,879
prime minus mu

105
00:04:02,879 --> 00:04:04,879
that is how much address will increase

106
00:04:04,879 --> 00:04:06,959
the probability that the output becomes

107
00:04:06,959 --> 00:04:08,239
one

108
00:04:08,239 --> 00:04:10,159
we can now ask the question

109
00:04:10,159 --> 00:04:12,799
assuming we have an mu product of pi

110
00:04:12,799 --> 00:04:15,120
where the number of particles is n and

111
00:04:15,120 --> 00:04:17,199
the original probability of b equals one

112
00:04:17,199 --> 00:04:19,358
before adversary is mu

113
00:04:19,358 --> 00:04:22,079
then with a fixed value k how much gain

114
00:04:22,079 --> 00:04:24,560
can that really achieve

115
00:04:24,560 --> 00:04:26,960
we consider two cases

116
00:04:26,960 --> 00:04:29,360
in the first case message is uniform

117
00:04:29,360 --> 00:04:32,320
binary for each omega i probability of

118
00:04:32,320 --> 00:04:34,960
omega i equals zero and omega i equals

119
00:04:34,960 --> 00:04:37,759
one are both fifty percent

120
00:04:37,759 --> 00:04:39,440
on the second case

121
00:04:39,440 --> 00:04:42,560
the message is arbitrarily long clearly

122
00:04:42,560 --> 00:04:44,320
the first one is a special case of the

123
00:04:44,320 --> 00:04:46,639
second one these two cases are connected

124
00:04:46,639 --> 00:04:49,120
but also very different

125
00:04:49,120 --> 00:04:51,759
now let's see what our question means by

126
00:04:51,759 --> 00:04:53,759
going over a simple protocol that is

127
00:04:53,759 --> 00:04:55,680
threshold protocol

128
00:04:55,680 --> 00:04:58,000
the output bit of the particle follows

129
00:04:58,000 --> 00:05:00,720
the threshold majority function that is

130
00:05:00,720 --> 00:05:03,520
the output of the protocol equals 1 if

131
00:05:03,520 --> 00:05:05,680
and only if the summation of all the

132
00:05:05,680 --> 00:05:09,120
messages omega i is larger than t

133
00:05:09,120 --> 00:05:11,919
we suppose it takes only uniform binary

134
00:05:11,919 --> 00:05:14,320
messages and the number of other inputs

135
00:05:14,320 --> 00:05:16,720
whose summation of omega i larger than t

136
00:05:16,720 --> 00:05:19,520
is the size of a hummingbird

137
00:05:19,520 --> 00:05:23,039
now this simple protocol is robust why

138
00:05:23,039 --> 00:05:25,680
because with budget k the summation can

139
00:05:25,680 --> 00:05:27,280
only change by k

140
00:05:27,280 --> 00:05:30,880
so adversary can succeed if

141
00:05:30,880 --> 00:05:33,199
if the summation is larger than t minus

142
00:05:33,199 --> 00:05:33,919
k

143
00:05:33,919 --> 00:05:36,400
which is the bigger hamming ball

144
00:05:36,400 --> 00:05:38,720
this code even if the address is offline

145
00:05:38,720 --> 00:05:42,479
and can do the changes at the end

146
00:05:42,639 --> 00:05:44,800
we will come back to it later now our

147
00:05:44,800 --> 00:05:46,880
goal is to answer the question that

148
00:05:46,880 --> 00:05:48,720
whether the stress code protocol is

149
00:05:48,720 --> 00:05:51,759
optimal and can adversely run online in

150
00:05:51,759 --> 00:05:54,560
polynomial time

151
00:05:57,680 --> 00:05:59,520
in this paper we showed that in the case

152
00:05:59,520 --> 00:06:02,479
of uniform binary messages

153
00:06:02,479 --> 00:06:05,360
the threshold protocol is indeed optimal

154
00:06:05,360 --> 00:06:07,919
to show that let beta tm be the

155
00:06:07,919 --> 00:06:09,840
probability of b equals 1 for the stress

156
00:06:09,840 --> 00:06:12,080
of t on the empathy setting

157
00:06:12,080 --> 00:06:14,720
for mu equals to beta t n

158
00:06:14,720 --> 00:06:16,720
a polynomial time online attack can

159
00:06:16,720 --> 00:06:19,280
achieve mu prime equals to beta t minus

160
00:06:19,280 --> 00:06:22,639
k n on any protocol which matches the

161
00:06:22,639 --> 00:06:24,800
majority's upper bound even for offline

162
00:06:24,800 --> 00:06:26,560
attacks

163
00:06:26,560 --> 00:06:29,120
and then for the case with any message

164
00:06:29,120 --> 00:06:30,319
length

165
00:06:30,319 --> 00:06:32,319
the threshold is optimal up to a

166
00:06:32,319 --> 00:06:33,360
constant

167
00:06:33,360 --> 00:06:36,639
for mu equals to omega one

168
00:06:36,639 --> 00:06:38,560
we have a polynomial time attack that

169
00:06:38,560 --> 00:06:41,120
achieves mu prime equals to mu plus

170
00:06:41,120 --> 00:06:45,759
omega mu k over square root of n

171
00:06:46,720 --> 00:06:48,560
here is an outline about this talk

172
00:06:48,560 --> 00:06:50,160
before we go to the details of our

173
00:06:50,160 --> 00:06:51,840
method let me introduce some relative

174
00:06:51,840 --> 00:06:56,080
work and also applications of our method

175
00:06:57,759 --> 00:07:00,160
on the uniform binary messages niche

176
00:07:00,160 --> 00:07:03,199
testing until 1989 shows that resource

177
00:07:03,199 --> 00:07:05,759
functions are optimal that an attack can

178
00:07:05,759 --> 00:07:08,560
achieve probability beta t minus k and

179
00:07:08,560 --> 00:07:10,880
minus k on the weaker adversary model

180
00:07:10,880 --> 00:07:12,639
that cannot see the message before

181
00:07:12,639 --> 00:07:14,800
making changes

182
00:07:14,800 --> 00:07:16,960
our attack on the other hand can see the

183
00:07:16,960 --> 00:07:18,319
current message before making

184
00:07:18,319 --> 00:07:21,919
replacements which is much stronger also

185
00:07:21,919 --> 00:07:24,960
we achieve the bound beta t minus k n

186
00:07:24,960 --> 00:07:26,639
which is larger compared to least

187
00:07:26,639 --> 00:07:28,400
testing paper

188
00:07:28,400 --> 00:07:32,000
on the same adversary kalai at all 2018

189
00:07:32,000 --> 00:07:34,240
proposed a polynomial time

190
00:07:34,240 --> 00:07:37,680
attack that works for large k

191
00:07:37,680 --> 00:07:40,000
which is a bigger root n

192
00:07:40,000 --> 00:07:44,520
and it's optimal up to a constant

193
00:07:50,960 --> 00:07:52,800
proposed for normal time adversary then

194
00:07:52,800 --> 00:07:55,840
with budget k equals to omega root n can

195
00:07:55,840 --> 00:07:57,599
increase from which to approach mainly

196
00:07:57,599 --> 00:07:58,479
one

197
00:07:58,479 --> 00:08:00,800
however their result only works for

198
00:08:00,800 --> 00:08:02,319
large k

199
00:08:02,319 --> 00:08:05,039
where what we want is to have universal

200
00:08:05,039 --> 00:08:08,159
solution on every k

201
00:08:08,319 --> 00:08:10,639
interestingly first work has built a

202
00:08:10,639 --> 00:08:12,960
connection between the targeted attacks

203
00:08:12,960 --> 00:08:15,199
on coin tossing protocols and targeted

204
00:08:15,199 --> 00:08:16,960
poisoning attack on machine learning

205
00:08:16,960 --> 00:08:17,919
model

206
00:08:17,919 --> 00:08:20,639
in the two figures below i will show why

207
00:08:20,639 --> 00:08:22,400
the targeted poisoning attack can be

208
00:08:22,400 --> 00:08:24,240
reduced to an attack defined on coin

209
00:08:24,240 --> 00:08:25,440
tossing

210
00:08:25,440 --> 00:08:27,280
the left figure is the same thing as the

211
00:08:27,280 --> 00:08:28,879
attack on the current housing and the

212
00:08:28,879 --> 00:08:31,039
right figure also looks similar is a

213
00:08:31,039 --> 00:08:33,200
learning problem a machine learner takes

214
00:08:33,200 --> 00:08:35,120
the data set as inputs and returns a

215
00:08:35,120 --> 00:08:37,760
model suppose the data set has n

216
00:08:37,760 --> 00:08:40,479
examples and adversaries inspected and

217
00:08:40,479 --> 00:08:42,640
make some modifications and make the

218
00:08:42,640 --> 00:08:46,000
learner produce a bad model

219
00:08:46,000 --> 00:08:48,080
we can then use that have defined on the

220
00:08:48,080 --> 00:08:51,040
left scenario to write by defining a

221
00:08:51,040 --> 00:08:52,880
collective quantizing protocol based on

222
00:08:52,880 --> 00:08:55,519
the learner and let b equals 1 if the

223
00:08:55,519 --> 00:08:58,720
learner outputs a bad model

224
00:08:58,720 --> 00:09:00,800
attack defined on the left figure can be

225
00:09:00,800 --> 00:09:03,120
directly applied to the right figure

226
00:09:03,120 --> 00:09:05,279
our attack of the coin tossing with any

227
00:09:05,279 --> 00:09:07,760
budget can translate to targeting the

228
00:09:07,760 --> 00:09:09,600
points and attack on machinery models of

229
00:09:09,600 --> 00:09:12,320
the same badges

230
00:09:12,560 --> 00:09:14,640
now we briefly talk about the connection

231
00:09:14,640 --> 00:09:17,360
to the isoparametric problem in product

232
00:09:17,360 --> 00:09:19,519
space on the hamming distance in the

233
00:09:19,519 --> 00:09:21,920
isoparametric problem what we want is to

234
00:09:21,920 --> 00:09:24,320
find a set with fixed size that has

235
00:09:24,320 --> 00:09:25,920
minimum boundary

236
00:09:25,920 --> 00:09:28,240
see the figure on the right side suppose

237
00:09:28,240 --> 00:09:31,120
we have a set markers red that is subset

238
00:09:31,120 --> 00:09:33,440
of this green set i define the boundary

239
00:09:33,440 --> 00:09:35,360
as a set of all the elements that has

240
00:09:35,360 --> 00:09:37,760
hamming distance at most k with elements

241
00:09:37,760 --> 00:09:40,160
in the red set

242
00:09:40,160 --> 00:09:41,200
then the

243
00:09:41,200 --> 00:09:43,120
as a parametric problem asks the

244
00:09:43,120 --> 00:09:45,519
question what shape of the red set has

245
00:09:45,519 --> 00:09:47,519
the minimum boundary boundary is shown

246
00:09:47,519 --> 00:09:50,560
as the brown region in the figure we now

247
00:09:50,560 --> 00:09:52,080
connect the coin tossing with the

248
00:09:52,080 --> 00:09:54,480
isoparametric problem on the left side

249
00:09:54,480 --> 00:09:56,720
we see the quantizing protocol sometimes

250
00:09:56,720 --> 00:09:59,200
returns one and sometimes returns zero

251
00:09:59,200 --> 00:10:01,519
on the right side we define our element

252
00:10:01,519 --> 00:10:03,600
as the input which is a combination of

253
00:10:03,600 --> 00:10:04,880
messages

254
00:10:04,880 --> 00:10:06,800
roughly speaking we can think there are

255
00:10:06,800 --> 00:10:09,120
three type of the inputs there are good

256
00:10:09,120 --> 00:10:11,920
ones that lead to b equals to zero which

257
00:10:11,920 --> 00:10:14,560
is showing the large green circle

258
00:10:14,560 --> 00:10:16,399
and there are also inputs that lead to

259
00:10:16,399 --> 00:10:17,600
output one

260
00:10:17,600 --> 00:10:20,240
represented in the red circle

261
00:10:20,240 --> 00:10:22,240
there are wordable ones that originally

262
00:10:22,240 --> 00:10:24,800
output 0 but they are too close to the

263
00:10:24,800 --> 00:10:27,600
case output 1 so an adversary can make

264
00:10:27,600 --> 00:10:30,800
them bad with at most k replacements in

265
00:10:30,800 --> 00:10:33,040
the figure the brown circle is the set

266
00:10:33,040 --> 00:10:36,000
of vulnerable ones

267
00:10:36,320 --> 00:10:38,640
i should be clear from the picture we

268
00:10:38,640 --> 00:10:40,880
are asking what is the probability being

269
00:10:40,880 --> 00:10:43,040
red or wrong given we already have the

270
00:10:43,040 --> 00:10:44,640
probability being red is the given

271
00:10:44,640 --> 00:10:47,279
property mu proving lower bound of the

272
00:10:47,279 --> 00:10:49,839
probability measure of the brown set is

273
00:10:49,839 --> 00:10:51,839
exactly what we want proving a lower

274
00:10:51,839 --> 00:10:54,480
bound on our risky scheme

275
00:10:54,480 --> 00:10:56,560
now in the case of previous methods from

276
00:10:56,560 --> 00:10:59,760
two papers the budget is large and the

277
00:10:59,760 --> 00:11:01,760
probability of vulnerable brown circle

278
00:11:01,760 --> 00:11:04,399
becomes close to one essentially they

279
00:11:04,399 --> 00:11:06,480
are asking how much inputs are not close

280
00:11:06,480 --> 00:11:08,399
to the bad inputs then by the

281
00:11:08,399 --> 00:11:10,160
concentration of measure the whole

282
00:11:10,160 --> 00:11:12,640
measured space is concentrated that is

283
00:11:12,640 --> 00:11:14,800
close to the bad inputs

284
00:11:14,800 --> 00:11:17,279
therefore only a negligible fraction of

285
00:11:17,279 --> 00:11:19,760
the space are still far away from the

286
00:11:19,760 --> 00:11:21,760
bad inputs then the polynomial time

287
00:11:21,760 --> 00:11:24,160
attacks proposed by those works provide

288
00:11:24,160 --> 00:11:25,760
a computational version of the

289
00:11:25,760 --> 00:11:28,160
concentration of measure so we can cause

290
00:11:28,160 --> 00:11:31,040
their result computational concentration

291
00:11:31,040 --> 00:11:32,399
on the other hand

292
00:11:32,399 --> 00:11:34,640
for the scenario we work on the budget

293
00:11:34,640 --> 00:11:36,480
can be small and the probability of the

294
00:11:36,480 --> 00:11:38,240
vulnerable brown circle can also be

295
00:11:38,240 --> 00:11:39,279
small

296
00:11:39,279 --> 00:11:41,040
in the offline setting

297
00:11:41,040 --> 00:11:42,959
when the adversary gets to see all the

298
00:11:42,959 --> 00:11:45,680
messages our problem becomes exactly the

299
00:11:45,680 --> 00:11:48,480
same with the isoparametric problem

300
00:11:48,480 --> 00:11:50,320
but we want to pursue an online

301
00:11:50,320 --> 00:11:52,399
algorithm which is for normal time and

302
00:11:52,399 --> 00:11:54,079
achieve the same bound

303
00:11:54,079 --> 00:11:55,920
which filter gives a computational

304
00:11:55,920 --> 00:11:58,639
version of the isoparametric inequality

305
00:11:58,639 --> 00:12:00,800
so we can call our goal computational

306
00:12:00,800 --> 00:12:03,279
isoparametric so this is the major

307
00:12:03,279 --> 00:12:05,040
difference between our work and previous

308
00:12:05,040 --> 00:12:07,360
works

309
00:12:08,320 --> 00:12:10,320
in the next part we will talk about the

310
00:12:10,320 --> 00:12:13,040
attack on any message list

311
00:12:13,040 --> 00:12:14,880
we first give a high level description

312
00:12:14,880 --> 00:12:16,560
of our attack

313
00:12:16,560 --> 00:12:18,959
suppose address 3 is defined with a

314
00:12:18,959 --> 00:12:21,279
parameter lambda which we will explain

315
00:12:21,279 --> 00:12:24,480
later and also a budget cake

316
00:12:24,480 --> 00:12:26,639
adversary's strategy is to make a

317
00:12:26,639 --> 00:12:29,680
replacement if first have not make

318
00:12:29,680 --> 00:12:30,639
already

319
00:12:30,639 --> 00:12:32,959
k replacements and the second the gain

320
00:12:32,959 --> 00:12:34,800
is large

321
00:12:34,800 --> 00:12:38,079
namely at run i plus one let alpha be

322
00:12:38,079 --> 00:12:41,120
the probability b equals 1

323
00:12:41,120 --> 00:12:44,000
that is defined over all the sequences

324
00:12:44,000 --> 00:12:46,480
follow this omega 1 to the omega i plus

325
00:12:46,480 --> 00:12:48,720
1

326
00:12:49,120 --> 00:12:51,519
and we let alpha prime be the maximum

327
00:12:51,519 --> 00:12:53,279
possible probability among other

328
00:12:53,279 --> 00:12:56,399
possible messages at this step omega

329
00:12:56,399 --> 00:12:58,560
star i plus 1

330
00:12:58,560 --> 00:13:00,320
which is also defined over all the

331
00:13:00,320 --> 00:13:02,800
sequences follow that

332
00:13:02,800 --> 00:13:06,240
so if alpha prime minus alpha larger or

333
00:13:06,240 --> 00:13:07,680
equal to lambda

334
00:13:07,680 --> 00:13:09,920
and then our adversary has not made k

335
00:13:09,920 --> 00:13:11,360
replacements yet

336
00:13:11,360 --> 00:13:13,600
the others we will replace omega i plus

337
00:13:13,600 --> 00:13:17,519
1 to omega start at placement

338
00:13:18,399 --> 00:13:20,079
at the high level the attack is similar

339
00:13:20,079 --> 00:13:22,399
to the attack in mahalo g5 muhammadi are

340
00:13:22,399 --> 00:13:25,040
19 and semi at all soda 2020 but also

341
00:13:25,040 --> 00:13:27,360
with key differences the main difference

342
00:13:27,360 --> 00:13:29,600
is that these two papers use analysis

343
00:13:29,600 --> 00:13:32,000
that only applies to large k which is

344
00:13:32,000 --> 00:13:34,399
omega root n what we want is to find

345
00:13:34,399 --> 00:13:36,079
universal solution especially for

346
00:13:36,079 --> 00:13:38,880
smoking there are also in in the

347
00:13:38,880 --> 00:13:41,600
mathematics of mohammadi r19 paper they

348
00:13:41,600 --> 00:13:43,760
suppose alpha bar is the probability b

349
00:13:43,760 --> 00:13:46,240
equals one before the current step then

350
00:13:46,240 --> 00:13:48,320
if alpha bar minus alpha larger or equal

351
00:13:48,320 --> 00:13:50,720
to lambda it will reset the input

352
00:13:50,720 --> 00:13:53,360
message otherwise if alpha prime minus

353
00:13:53,360 --> 00:13:56,320
r1 is larger or equal to lambda it will

354
00:13:56,320 --> 00:13:58,320
do the replacement

355
00:13:58,320 --> 00:14:00,560
so our attack has one fewer case and

356
00:14:00,560 --> 00:14:04,880
leads to a sharper bond even for large k

357
00:14:04,880 --> 00:14:07,680
for the sme at all paper they use the

358
00:14:07,680 --> 00:14:10,000
ratio alpha prime over alpha instead of

359
00:14:10,000 --> 00:14:12,480
over prime minus alpha which leads to a

360
00:14:12,480 --> 00:14:13,839
sharper bond

361
00:14:13,839 --> 00:14:17,279
but it only works for large k omega root

362
00:14:17,279 --> 00:14:19,040
n

363
00:14:19,040 --> 00:14:21,680
so why all these people of choose large

364
00:14:21,680 --> 00:14:24,079
k there's a reason behind that these

365
00:14:24,079 --> 00:14:26,320
three papers share a similar core which

366
00:14:26,320 --> 00:14:28,800
makes them all rely on this omega root

367
00:14:28,800 --> 00:14:30,399
and budget

368
00:14:30,399 --> 00:14:31,920
their analysis goes through the

369
00:14:31,920 --> 00:14:34,240
following two steps first they show a

370
00:14:34,240 --> 00:14:36,399
specific attack with unlimited budget

371
00:14:36,399 --> 00:14:39,920
can fix output one second by relying the

372
00:14:39,920 --> 00:14:42,560
first step they show that this attacks

373
00:14:42,560 --> 00:14:45,760
budget is indeed theta root n

374
00:14:45,760 --> 00:14:47,680
so it can be shown that fixing the

375
00:14:47,680 --> 00:14:50,560
output one could require this budget

376
00:14:50,560 --> 00:14:53,040
root end so you cannot improve with the

377
00:14:53,040 --> 00:14:56,800
sim analysis we need a new analysis

378
00:14:56,800 --> 00:14:59,600
to show how our attack works we start on

379
00:14:59,600 --> 00:15:01,920
the case when k equals one note that

380
00:15:01,920 --> 00:15:04,160
even k equals one is previously an open

381
00:15:04,160 --> 00:15:05,440
question

382
00:15:05,440 --> 00:15:07,440
we can then separate all those inputs

383
00:15:07,440 --> 00:15:10,079
into two cases the first one is the case

384
00:15:10,079 --> 00:15:12,320
when the adversary is budget one make

385
00:15:12,320 --> 00:15:14,800
replacements and the second

386
00:15:14,800 --> 00:15:15,760
is the

387
00:15:15,760 --> 00:15:17,760
adversary with special one doesn't make

388
00:15:17,760 --> 00:15:19,199
a replacement

389
00:15:19,199 --> 00:15:21,199
we can show that in both cases

390
00:15:21,199 --> 00:15:22,880
essentially the adversary will have

391
00:15:22,880 --> 00:15:24,959
large gain

392
00:15:24,959 --> 00:15:27,199
we first show that each replacement made

393
00:15:27,199 --> 00:15:29,759
by this one replacing attack immediately

394
00:15:29,759 --> 00:15:32,160
achieves this lambda game

395
00:15:32,160 --> 00:15:34,160
see the path marked by orange which is

396
00:15:34,160 --> 00:15:36,399
originally getting out to zero

397
00:15:36,399 --> 00:15:38,399
but adversely make a replacement to

398
00:15:38,399 --> 00:15:40,480
divert it to this new parts market with

399
00:15:40,480 --> 00:15:42,720
red we know that adversary only make

400
00:15:42,720 --> 00:15:44,160
replacement when the probability of

401
00:15:44,160 --> 00:15:46,639
alternating one is increased by lambda

402
00:15:46,639 --> 00:15:48,639
so suppose the probability of going on

403
00:15:48,639 --> 00:15:51,360
the original path is p the adversary has

404
00:15:51,360 --> 00:15:55,040
at least gains p times lambda namely

405
00:15:55,040 --> 00:15:58,000
if let p1 be the probability of this one

406
00:15:58,000 --> 00:16:00,480
replacing attack happens and the mu1 be

407
00:16:00,480 --> 00:16:03,120
the expectation of b equals one after

408
00:16:03,120 --> 00:16:04,959
one replacing attack

409
00:16:04,959 --> 00:16:07,519
we then have mu1 larger or equal to mu

410
00:16:07,519 --> 00:16:10,560
plus p1 times lambda so we only need to

411
00:16:10,560 --> 00:16:13,199
lower bound this p1 here

412
00:16:13,199 --> 00:16:14,480
however

413
00:16:14,480 --> 00:16:16,880
now we see that when p1 is small the

414
00:16:16,880 --> 00:16:19,120
adversary still gets large probability

415
00:16:19,120 --> 00:16:22,160
that p prime equals 1. now say this

416
00:16:22,160 --> 00:16:25,040
example the green parts does not change

417
00:16:25,040 --> 00:16:27,279
so k equal to 1 doesn't change and

418
00:16:27,279 --> 00:16:29,440
because k equals to infinity is based on

419
00:16:29,440 --> 00:16:32,079
this k equals 1 attack it already have

420
00:16:32,079 --> 00:16:34,399
the same result and it doesn't make any

421
00:16:34,399 --> 00:16:35,680
change

422
00:16:35,680 --> 00:16:38,000
from a previous literature we know that

423
00:16:38,000 --> 00:16:39,920
when k equals infinity the probability

424
00:16:39,920 --> 00:16:41,680
should go close to 1

425
00:16:41,680 --> 00:16:43,759
which means for this part when k equals

426
00:16:43,759 --> 00:16:46,639
1 it already closed one

427
00:16:46,639 --> 00:16:49,759
namely let this er function be the arrow

428
00:16:49,759 --> 00:16:52,720
of the infinity replacing attack then we

429
00:16:52,720 --> 00:16:55,120
have p1 larger or equal to 1 minus mu

430
00:16:55,120 --> 00:16:57,759
minus this error function then combining

431
00:16:57,759 --> 00:17:00,560
with the case 1 we have mu 1 larger or

432
00:17:00,560 --> 00:17:03,279
equal to mu plus lambda times the y

433
00:17:03,279 --> 00:17:05,439
minus mu mass is the error term

434
00:17:05,439 --> 00:17:06,720
and finally

435
00:17:06,720 --> 00:17:08,079
when let lamb

436
00:17:08,079 --> 00:17:11,760
lambda be the c tan mu over root n

437
00:17:11,760 --> 00:17:16,480
we get this bias omega mu over root n

438
00:17:16,880 --> 00:17:18,959
now we want to extend our k equals 1

439
00:17:18,959 --> 00:17:21,439
result to any k the first approach is to

440
00:17:21,439 --> 00:17:23,599
recursively apply the analysis that we

441
00:17:23,599 --> 00:17:25,599
can apply the one replacing attack for k

442
00:17:25,599 --> 00:17:28,319
times however it is only polynomial time

443
00:17:28,319 --> 00:17:30,640
when k equals to one

444
00:17:30,640 --> 00:17:32,799
now there's approach two that achieves

445
00:17:32,799 --> 00:17:34,559
slightly weaker but for lower time

446
00:17:34,559 --> 00:17:36,480
boundaries to carefully applying

447
00:17:36,480 --> 00:17:37,600
induction

448
00:17:37,600 --> 00:17:39,679
let's attack be the infinity replacing

449
00:17:39,679 --> 00:17:42,160
attack that is cut after k replacements

450
00:17:42,160 --> 00:17:44,160
a generalization of the idea of one

451
00:17:44,160 --> 00:17:46,720
replacing attack show that mu k is

452
00:17:46,720 --> 00:17:49,520
larger or equal to mu k minus one plus

453
00:17:49,520 --> 00:17:51,919
lambda times one minus mu k minus one

454
00:17:51,919 --> 00:17:53,520
times this error term

455
00:17:53,520 --> 00:17:56,080
so solving this recursion above gives

456
00:17:56,080 --> 00:17:58,400
this desired bound and the attack can be

457
00:17:58,400 --> 00:18:00,240
made polynomial time using the same

458
00:18:00,240 --> 00:18:03,120
trick as the mathematician muhammadi r19

459
00:18:03,120 --> 00:18:05,439
paper

460
00:18:06,160 --> 00:18:07,600
that concludes the first case on

461
00:18:07,600 --> 00:18:10,080
arbitrary length messages we now turn on

462
00:18:10,080 --> 00:18:12,000
to the second case when the attack is

463
00:18:12,000 --> 00:18:14,960
applied to uniform binary messages

464
00:18:14,960 --> 00:18:16,799
we start by recording the result on the

465
00:18:16,799 --> 00:18:19,200
threshold functions assume each message

466
00:18:19,200 --> 00:18:21,919
on mega is uniform binary the output bit

467
00:18:21,919 --> 00:18:23,520
of the protocol follows the threshold

468
00:18:23,520 --> 00:18:25,760
majority function that is the output of

469
00:18:25,760 --> 00:18:27,840
particle equals 1 if and only if the

470
00:18:27,840 --> 00:18:29,840
summation of all the messages omega is

471
00:18:29,840 --> 00:18:31,600
larger than t

472
00:18:31,600 --> 00:18:32,480
now

473
00:18:32,480 --> 00:18:34,480
let beta t be the probability of that

474
00:18:34,480 --> 00:18:36,160
summation larger than t

475
00:18:36,160 --> 00:18:38,400
a k replacing offline adversary which by

476
00:18:38,400 --> 00:18:39,679
offline will mean that the address

477
00:18:39,679 --> 00:18:41,600
receives all the messages and then make

478
00:18:41,600 --> 00:18:44,559
replacements can only achieve beta t

479
00:18:44,559 --> 00:18:46,320
minus k which is the size of larger

480
00:18:46,320 --> 00:18:48,799
hummingbird

481
00:18:48,799 --> 00:18:50,960
we ask a question how much gain can

482
00:18:50,960 --> 00:18:54,320
online adversity achieve

483
00:18:54,640 --> 00:18:56,400
what we carry is the online expansion

484
00:18:56,400 --> 00:18:58,160
function which is the optimal gain under

485
00:18:58,160 --> 00:19:00,400
the best possible k replacing attack

486
00:19:00,400 --> 00:19:02,080
similarly we can define an offline

487
00:19:02,080 --> 00:19:03,840
expansion function which is the optimal

488
00:19:03,840 --> 00:19:06,480
gain of the offline adversary

489
00:19:06,480 --> 00:19:08,559
the online expansion function can be

490
00:19:08,559 --> 00:19:10,799
computed by induction and

491
00:19:10,799 --> 00:19:12,720
and the corresponding optimal attack can

492
00:19:12,720 --> 00:19:14,799
also be implemented in polynomial time

493
00:19:14,799 --> 00:19:16,880
if y is given oracle access to the

494
00:19:16,880 --> 00:19:19,360
values of online expansion function but

495
00:19:19,360 --> 00:19:21,200
we do not have it it is because the

496
00:19:21,200 --> 00:19:22,880
online expanded function is in general

497
00:19:22,880 --> 00:19:24,799
very hard to compute

498
00:19:24,799 --> 00:19:26,640
so we propose a piecewise linear

499
00:19:26,640 --> 00:19:28,080
function l

500
00:19:28,080 --> 00:19:30,720
the l function is equals to the offline

501
00:19:30,720 --> 00:19:33,120
expansion function at each having both

502
00:19:33,120 --> 00:19:35,440
sizes beta t

503
00:19:35,440 --> 00:19:38,559
and otherwise it is linearly extended on

504
00:19:38,559 --> 00:19:40,880
all the other points

505
00:19:40,880 --> 00:19:42,559
this piecewise linear function is

506
00:19:42,559 --> 00:19:44,720
inspired by a similar function from for

507
00:19:44,720 --> 00:19:48,240
scania or 2021 paper but the induction

508
00:19:48,240 --> 00:19:49,600
proving the lower bound is quite

509
00:19:49,600 --> 00:19:50,840
different in our

510
00:19:50,840 --> 00:19:53,360
setting here is a figure of the three

511
00:19:53,360 --> 00:19:55,679
functions we described in the figure

512
00:19:55,679 --> 00:19:58,160
x-axis is the mu value ranges from zero

513
00:19:58,160 --> 00:20:00,640
to one the y-axis is the atresia's

514
00:20:00,640 --> 00:20:03,120
maximum gain the blue curve is online

515
00:20:03,120 --> 00:20:05,520
expansion which we want to bound and the

516
00:20:05,520 --> 00:20:07,919
red curve is the online expression which

517
00:20:07,919 --> 00:20:09,679
is easy to solve

518
00:20:09,679 --> 00:20:11,360
because we know that threshold is

519
00:20:11,360 --> 00:20:12,480
optimal

520
00:20:12,480 --> 00:20:14,640
now we define this l function

521
00:20:14,640 --> 00:20:16,240
as the green curve here which is the

522
00:20:16,240 --> 00:20:18,880
lower bound of the red curve

523
00:20:18,880 --> 00:20:21,360
at a high level there exists a recursive

524
00:20:21,360 --> 00:20:23,520
relation of both online expansion and l

525
00:20:23,520 --> 00:20:26,000
function and because of concavity we

526
00:20:26,000 --> 00:20:28,159
then show that air is also a lower bound

527
00:20:28,159 --> 00:20:30,720
for the blue curve online expansion

528
00:20:30,720 --> 00:20:32,400
and because the air function achieves

529
00:20:32,400 --> 00:20:34,159
the same result on each having both

530
00:20:34,159 --> 00:20:36,720
sizes with red curve

531
00:20:36,720 --> 00:20:38,480
the online expansion function also

532
00:20:38,480 --> 00:20:40,480
achieved this game

533
00:20:40,480 --> 00:20:42,799
this leads to conclusion that both l and

534
00:20:42,799 --> 00:20:45,039
online expansion is off by at most one

535
00:20:45,039 --> 00:20:47,039
step compared to the online offline

536
00:20:47,039 --> 00:20:50,320
expansion that is the online adversary

537
00:20:50,320 --> 00:20:52,080
with one more budget

538
00:20:52,080 --> 00:20:54,640
can achieve at least same result as the

539
00:20:54,640 --> 00:20:57,440
offline adversary with the same budget

540
00:20:57,440 --> 00:21:00,000
then we conclude that the threshold is

541
00:21:00,000 --> 00:21:03,840
optimal in this case

542
00:21:04,159 --> 00:21:06,080
recall that the optimal attack can be

543
00:21:06,080 --> 00:21:08,400
implemented in the polynomial time if

544
00:21:08,400 --> 00:21:10,559
one is given oracle access to the values

545
00:21:10,559 --> 00:21:12,640
of online expansion but we do not have

546
00:21:12,640 --> 00:21:13,919
access to that

547
00:21:13,919 --> 00:21:16,080
to achieve upon normal time attack we

548
00:21:16,080 --> 00:21:17,520
define an anniversary that approach

549
00:21:17,520 --> 00:21:19,520
means and uses l instead of online

550
00:21:19,520 --> 00:21:20,880
expansion mu

551
00:21:20,880 --> 00:21:23,200
the induction proof still shows that

552
00:21:23,200 --> 00:21:25,919
using l instead of online expansion

553
00:21:25,919 --> 00:21:27,760
works

554
00:21:27,760 --> 00:21:30,559
let's finish our second result finally

555
00:21:30,559 --> 00:21:33,120
we summarize our findings in conclusion

556
00:21:33,120 --> 00:21:35,919
for uniform binary protocols threshold

557
00:21:35,919 --> 00:21:38,000
majority protocol is optimal for online

558
00:21:38,000 --> 00:21:39,919
offline key replacing attacks and for

559
00:21:39,919 --> 00:21:40,960
any case

560
00:21:40,960 --> 00:21:42,640
and this result can be viewed as a

561
00:21:42,640 --> 00:21:44,240
computational version of hypers

562
00:21:44,240 --> 00:21:46,640
isoparametric inequality

563
00:21:46,640 --> 00:21:48,960
for protocols with any message length

564
00:21:48,960 --> 00:21:50,880
the majority protocol is still optimal

565
00:21:50,880 --> 00:21:53,360
up to a constant factor this result can

566
00:21:53,360 --> 00:21:55,360
be used to obtain generic targeted

567
00:21:55,360 --> 00:21:57,760
poisoning attacks on learners with small

568
00:21:57,760 --> 00:21:59,200
budget kit

569
00:21:59,200 --> 00:22:02,159
where any success of training set

570
00:22:02,159 --> 00:22:05,120
thank you i appreciate any questions and

571
00:22:05,120 --> 00:22:08,479
comments from you

