1
00:00:00,640 --> 00:00:02,480
hello everyone today i would like to

2
00:00:02,480 --> 00:00:05,120
talk about my work on two round sps mpc

3
00:00:05,120 --> 00:00:07,120
where sps stands for super polynomial

4
00:00:07,120 --> 00:00:09,360
simulation and this is joint work with

5
00:00:09,360 --> 00:00:11,599
james bartosek vipul goel dakshita

6
00:00:11,599 --> 00:00:14,639
kurana and julio malavolta

7
00:00:14,639 --> 00:00:16,239
let me start by describing the setting

8
00:00:16,239 --> 00:00:17,520
of mpc

9
00:00:17,520 --> 00:00:19,840
so here we have a bunch of parties each

10
00:00:19,840 --> 00:00:22,320
with their private inputs and their goal

11
00:00:22,320 --> 00:00:23,760
is to compute some

12
00:00:23,760 --> 00:00:25,680
function c on their private inputs by

13
00:00:25,680 --> 00:00:27,519
interacting with each other and the

14
00:00:27,519 --> 00:00:29,199
adversary might corrupt some subset of

15
00:00:29,199 --> 00:00:30,480
these parties

16
00:00:30,480 --> 00:00:32,079
and we want the security guarantee that

17
00:00:32,079 --> 00:00:34,160
the adversary should not learn anything

18
00:00:34,160 --> 00:00:35,360
apart

19
00:00:35,360 --> 00:00:37,280
about the honest party's inputs apart

20
00:00:37,280 --> 00:00:38,879
from what it can learn from the output

21
00:00:38,879 --> 00:00:41,200
of the functionality

22
00:00:41,200 --> 00:00:43,120
and the type of adversary that we are

23
00:00:43,120 --> 00:00:44,719
interested in is polynomial time

24
00:00:44,719 --> 00:00:46,559
adversary with arbitrary static

25
00:00:46,559 --> 00:00:49,280
corruptions malicious behavior

26
00:00:49,280 --> 00:00:51,600
and dishonest majority

27
00:00:51,600 --> 00:00:53,280
and there is a long line of work

28
00:00:53,280 --> 00:00:56,000
targeting this kind of setting

29
00:00:56,000 --> 00:00:57,600
in this paper we are

30
00:00:57,600 --> 00:00:59,520
mainly focused on the round complexity

31
00:00:59,520 --> 00:01:00,879
of mpc

32
00:01:00,879 --> 00:01:01,920
uh

33
00:01:01,920 --> 00:01:04,959
and in the mpc setting around is defined

34
00:01:04,959 --> 00:01:07,040
uh in the simultaneous exchange message

35
00:01:07,040 --> 00:01:09,600
model where every party can

36
00:01:09,600 --> 00:01:11,439
simultaneously send their next round

37
00:01:11,439 --> 00:01:13,360
message to all other parties in every

38
00:01:13,360 --> 00:01:15,600
round

39
00:01:16,000 --> 00:01:17,920
and the reason why we should study

40
00:01:17,920 --> 00:01:19,600
around complexity

41
00:01:19,600 --> 00:01:22,640
is because from a quantitative aspect

42
00:01:22,640 --> 00:01:25,200
rounds correspond to network latency in

43
00:01:25,200 --> 00:01:27,680
real-world distributed protocols

44
00:01:27,680 --> 00:01:30,000
and from a qualitative aspect it

45
00:01:30,000 --> 00:01:31,920
studying ground complexity helps us

46
00:01:31,920 --> 00:01:33,840
understand relationships between

47
00:01:33,840 --> 00:01:36,000
different aspects of protocol design

48
00:01:36,000 --> 00:01:37,600
like hardness assumptions and the

49
00:01:37,600 --> 00:01:41,119
respect of security guarantees

50
00:01:41,119 --> 00:01:43,040
so let me now give you a brief timeline

51
00:01:43,040 --> 00:01:44,640
of the progress that has been made in

52
00:01:44,640 --> 00:01:47,200
the round complexity of mpc

53
00:01:47,200 --> 00:01:49,439
so first we have in the 80s uh the

54
00:01:49,439 --> 00:01:51,600
two-party karbal circuits protocol by

55
00:01:51,600 --> 00:01:54,399
yao and the polynomial round protocol

56
00:01:54,399 --> 00:01:57,280
in the mpc setting by goodrich mengali

57
00:01:57,280 --> 00:01:59,040
and wildson

58
00:01:59,040 --> 00:02:01,360
then in 96 code reich and orange showed

59
00:02:01,360 --> 00:02:04,000
the impossibility of simulation security

60
00:02:04,000 --> 00:02:08,039
in two round protocols

61
00:02:08,399 --> 00:02:10,560
then there was a line of works by pass

62
00:02:10,560 --> 00:02:13,040
smith cards or swarovski smith b and

63
00:02:13,040 --> 00:02:15,280
grower that showed how to do constant

64
00:02:15,280 --> 00:02:18,080
round npc

65
00:02:18,160 --> 00:02:20,000
in 2016

66
00:02:20,000 --> 00:02:23,360
there was an impossibility result by

67
00:02:23,360 --> 00:02:26,000
garg mukherjee parley apande and pauli

68
00:02:26,000 --> 00:02:27,920
kronadu building on the earlier

69
00:02:27,920 --> 00:02:30,160
impossibility result back cats on

70
00:02:30,160 --> 00:02:31,440
ostrowski

71
00:02:31,440 --> 00:02:34,000
which showed that a

72
00:02:34,000 --> 00:02:37,760
three-round black box simulation for uh

73
00:02:37,760 --> 00:02:41,040
mpc is impossible

74
00:02:42,000 --> 00:02:45,040
then recently uh there was this work by

75
00:02:45,040 --> 00:02:48,640
chaudhary kampi goel chan and arstrosky

76
00:02:48,640 --> 00:02:49,519
which

77
00:02:49,519 --> 00:02:52,720
showed a four round mbc protocol

78
00:02:52,720 --> 00:02:55,760
based on the minimal assumption of ot

79
00:02:55,760 --> 00:02:58,720
so given these works it's natural to ask

80
00:02:58,720 --> 00:03:01,040
can we go below four rounds

81
00:03:01,040 --> 00:03:03,680
but as you might notice because of these

82
00:03:03,680 --> 00:03:05,760
two impossibility results

83
00:03:05,760 --> 00:03:09,280
we cannot do so without relaxing

84
00:03:09,280 --> 00:03:11,680
something

85
00:03:12,640 --> 00:03:13,440
so

86
00:03:13,440 --> 00:03:16,400
there have been some works in 2017

87
00:03:16,400 --> 00:03:19,440
especially these works by narayan

88
00:03:19,440 --> 00:03:22,800
ishai sahi and wadia and then by

89
00:03:22,800 --> 00:03:25,440
jain kalai kurana and ranv which showed

90
00:03:25,440 --> 00:03:28,239
how to do two round mauritius mpc using

91
00:03:28,239 --> 00:03:30,319
super polynomial sensation

92
00:03:30,319 --> 00:03:33,280
but with one-sided output

93
00:03:33,280 --> 00:03:35,360
one-sided meaning that only one of the

94
00:03:35,360 --> 00:03:37,599
parties can receive the output

95
00:03:37,599 --> 00:03:40,000
after two rounds

96
00:03:40,000 --> 00:03:43,200
then in 2018 there were these works by

97
00:03:43,200 --> 00:03:45,840
garg and srinivasan and ben amudha and

98
00:03:45,840 --> 00:03:48,480
lin which showed how to do two round mpc

99
00:03:48,480 --> 00:03:50,560
using just ot

100
00:03:50,560 --> 00:03:53,040
but this their protocol is only secure

101
00:03:53,040 --> 00:03:54,959
against semi honest or semi-malicious

102
00:03:54,959 --> 00:03:57,599
adversaries

103
00:03:57,840 --> 00:04:00,239
in our work we show how to do two round

104
00:04:00,239 --> 00:04:02,879
maliciously secure mpc protocol

105
00:04:02,879 --> 00:04:05,760
using sps simulation where all parties

106
00:04:05,760 --> 00:04:07,040
can receive

107
00:04:07,040 --> 00:04:10,640
the output at the end of round two

108
00:04:12,959 --> 00:04:15,920
and uh to motivate uh what super

109
00:04:15,920 --> 00:04:17,759
polynomial simulation is let me first

110
00:04:17,759 --> 00:04:19,680
describe the standard simulation in the

111
00:04:19,680 --> 00:04:21,918
real ideal paradigm so we

112
00:04:21,918 --> 00:04:24,960
say that a protocol in the real world

113
00:04:24,960 --> 00:04:27,600
is secure if

114
00:04:27,600 --> 00:04:30,240
the adversary's view can be simulated by

115
00:04:30,240 --> 00:04:32,160
an ideal world simulator

116
00:04:32,160 --> 00:04:33,840
which only has access to the ideal

117
00:04:33,840 --> 00:04:37,599
functionality and the addressing

118
00:04:37,759 --> 00:04:39,759
and we want the guarantee that the real

119
00:04:39,759 --> 00:04:41,120
view should be computationally

120
00:04:41,120 --> 00:04:43,600
indistinguishable from a simulated ideal

121
00:04:43,600 --> 00:04:44,720
world view

122
00:04:44,720 --> 00:04:46,400
and the restriction here that we place

123
00:04:46,400 --> 00:04:48,080
on the simulator is that it should run

124
00:04:48,080 --> 00:04:50,240
polynomial time

125
00:04:50,240 --> 00:04:51,840
so this is the standard simulation

126
00:04:51,840 --> 00:04:53,120
pattern

127
00:04:53,120 --> 00:04:55,759
in sps simulation

128
00:04:55,759 --> 00:04:56,720
we

129
00:04:56,720 --> 00:04:58,960
allow we have the same real ideal

130
00:04:58,960 --> 00:05:00,960
paradigm but we allow the simulator to

131
00:05:00,960 --> 00:05:05,198
run in super polynomial time

132
00:05:05,440 --> 00:05:07,680
and

133
00:05:08,160 --> 00:05:10,320
the reason why this is meaningful is

134
00:05:10,320 --> 00:05:11,520
because

135
00:05:11,520 --> 00:05:13,919
in some cases the ideal functionality

136
00:05:13,919 --> 00:05:15,520
itself is secure against super

137
00:05:15,520 --> 00:05:18,799
polynomial adversaries

138
00:05:19,360 --> 00:05:21,520
and here we still want the security

139
00:05:21,520 --> 00:05:23,759
guarantee that the real view should be

140
00:05:23,759 --> 00:05:25,280
computationally indistinguishable from

141
00:05:25,280 --> 00:05:27,120
the ideal world view where the ideal

142
00:05:27,120 --> 00:05:29,199
world view is being simulated by a super

143
00:05:29,199 --> 00:05:30,400
polynomial

144
00:05:30,400 --> 00:05:32,960
simulator

145
00:05:34,560 --> 00:05:36,080
so

146
00:05:36,080 --> 00:05:38,160
note that our goal is to construct two

147
00:05:38,160 --> 00:05:40,479
round maliciously secure mpc protocol in

148
00:05:40,479 --> 00:05:41,840
the plane model

149
00:05:41,840 --> 00:05:44,479
so we will begin by making some useful

150
00:05:44,479 --> 00:05:46,479
observations about any to run mpc

151
00:05:46,479 --> 00:05:48,240
protocol in general

152
00:05:48,240 --> 00:05:49,440
so

153
00:05:49,440 --> 00:05:52,080
first of all in a syntax for a two round

154
00:05:52,080 --> 00:05:54,560
mpc protocol looks like the following so

155
00:05:54,560 --> 00:05:56,080
alice and bob

156
00:05:56,080 --> 00:05:58,720
have their private inputs and here i'm

157
00:05:58,720 --> 00:06:00,960
just illustrating it for two parties

158
00:06:00,960 --> 00:06:02,720
everything that i say also extends for

159
00:06:02,720 --> 00:06:04,720
multiple parties

160
00:06:04,720 --> 00:06:05,520
so

161
00:06:05,520 --> 00:06:06,639
in the first

162
00:06:06,639 --> 00:06:08,720
round they simultaneously exchange their

163
00:06:08,720 --> 00:06:10,240
first round message

164
00:06:10,240 --> 00:06:11,840
with each other

165
00:06:11,840 --> 00:06:14,080
and the second round they exchange their

166
00:06:14,080 --> 00:06:17,120
second round messages

167
00:06:17,120 --> 00:06:19,360
and uh note that

168
00:06:19,360 --> 00:06:21,360
and after this

169
00:06:21,360 --> 00:06:24,880
both parties can reconstruct can

170
00:06:24,880 --> 00:06:26,400
output the

171
00:06:26,400 --> 00:06:28,240
output of the function on their private

172
00:06:28,240 --> 00:06:30,720
inputs

173
00:06:31,680 --> 00:06:34,880
and note that in this model we allow the

174
00:06:34,880 --> 00:06:38,479
adversary to be rushing so in any round

175
00:06:38,479 --> 00:06:40,400
the adversary can

176
00:06:40,400 --> 00:06:41,759
hear the

177
00:06:41,759 --> 00:06:44,080
uh honest party's messages first and

178
00:06:44,080 --> 00:06:47,719
then reply back

179
00:06:49,919 --> 00:06:54,240
so first of all uh note that if uh bob

180
00:06:54,240 --> 00:06:57,039
sends a malformed first round message

181
00:06:57,039 --> 00:06:58,960
then uh

182
00:06:58,960 --> 00:07:01,280
and if alice continues to run the

183
00:07:01,280 --> 00:07:03,840
protocol then it might so happen

184
00:07:03,840 --> 00:07:05,199
that

185
00:07:05,199 --> 00:07:08,319
bob can not only output the

186
00:07:08,319 --> 00:07:11,440
result of the function but also gain

187
00:07:11,440 --> 00:07:13,280
some extra information about alice's

188
00:07:13,280 --> 00:07:16,679
private input

189
00:07:18,560 --> 00:07:19,520
and

190
00:07:19,520 --> 00:07:20,880
the

191
00:07:20,880 --> 00:07:22,800
basic observation here is that alice

192
00:07:22,800 --> 00:07:25,520
should validate the round one message of

193
00:07:25,520 --> 00:07:29,759
bob before sending her round to message

194
00:07:29,759 --> 00:07:32,080
so one straightforward solution is that

195
00:07:32,080 --> 00:07:33,599
in addition to sending the around one

196
00:07:33,599 --> 00:07:36,560
message we also ask the parties to send

197
00:07:36,560 --> 00:07:38,800
a zero knowledge proof attesting to the

198
00:07:38,800 --> 00:07:41,680
correctness of the first round message

199
00:07:41,680 --> 00:07:45,840
and by correctness here mean i mean that

200
00:07:45,840 --> 00:07:48,000
the

201
00:07:48,000 --> 00:07:50,319
messages should be in the support of

202
00:07:50,319 --> 00:07:54,080
honest parties distribution

203
00:07:56,160 --> 00:07:58,720
and then we can require parties to first

204
00:07:58,720 --> 00:08:01,199
validate each other's proofs before

205
00:08:01,199 --> 00:08:02,879
sending over their second round message

206
00:08:02,879 --> 00:08:04,720
to each other

207
00:08:04,720 --> 00:08:06,319
and this will ensure that the parties

208
00:08:06,319 --> 00:08:08,240
only learn the output of the function on

209
00:08:08,240 --> 00:08:09,680
their private techniques and nothing

210
00:08:09,680 --> 00:08:12,160
else

211
00:08:12,160 --> 00:08:14,400
but the problem is that such one round

212
00:08:14,400 --> 00:08:15,759
zero knowledge proofs also called

213
00:08:15,759 --> 00:08:18,000
non-interactive zero knowledge proofs

214
00:08:18,000 --> 00:08:20,400
require a crs or a common reference

215
00:08:20,400 --> 00:08:22,319
string

216
00:08:22,319 --> 00:08:23,919
which is a

217
00:08:23,919 --> 00:08:24,720
a

218
00:08:24,720 --> 00:08:26,800
long

219
00:08:26,800 --> 00:08:28,639
string

220
00:08:28,639 --> 00:08:30,720
that everyone has public access to in

221
00:08:30,720 --> 00:08:33,039
the sky

222
00:08:33,039 --> 00:08:34,080
the

223
00:08:34,080 --> 00:08:37,599
the bad part is that uh generating such

224
00:08:37,599 --> 00:08:40,719
crs requires some kind of trusted set of

225
00:08:40,719 --> 00:08:41,919
assumption

226
00:08:41,919 --> 00:08:44,320
for example you might have heard of crs

227
00:08:44,320 --> 00:08:46,080
ceremonies being conducted in

228
00:08:46,080 --> 00:08:48,720
cryptocurrency domains to

229
00:08:48,720 --> 00:08:53,120
boost traps such crs based protocols

230
00:08:53,519 --> 00:08:56,240
ideally we would like to reque uh i

231
00:08:56,240 --> 00:08:58,160
ideally we would uh

232
00:08:58,160 --> 00:09:00,959
want to remove the need for such a crs

233
00:09:00,959 --> 00:09:04,000
because uh and the natural question to

234
00:09:04,000 --> 00:09:06,800
ask is can we still do two round mpc

235
00:09:06,800 --> 00:09:09,040
protocols in the plane model which

236
00:09:09,040 --> 00:09:11,760
doesn't require any trusted setup phase

237
00:09:11,760 --> 00:09:15,839
for generating a such a crs

238
00:09:16,640 --> 00:09:18,560
and that

239
00:09:18,560 --> 00:09:20,880
requires us to ask can we

240
00:09:20,880 --> 00:09:23,120
have an alternative to zero knowledge

241
00:09:23,120 --> 00:09:24,080
proofs

242
00:09:24,080 --> 00:09:27,600
which do not require setup

243
00:09:27,920 --> 00:09:29,920
so for example

244
00:09:29,920 --> 00:09:31,040
suppose

245
00:09:31,040 --> 00:09:32,800
alice and bob exchange their first one

246
00:09:32,800 --> 00:09:34,959
message

247
00:09:34,959 --> 00:09:38,160
we are asking is it possible for alice

248
00:09:38,160 --> 00:09:40,560
to lock her second round message in a

249
00:09:40,560 --> 00:09:41,920
box

250
00:09:41,920 --> 00:09:44,640
in such a way that the box can be opened

251
00:09:44,640 --> 00:09:47,360
by bob only if

252
00:09:47,360 --> 00:09:51,839
bob's first-round message was valid

253
00:09:52,000 --> 00:09:54,240
if we have such a magical box

254
00:09:54,240 --> 00:09:57,920
then alice can send over this

255
00:09:57,920 --> 00:10:00,320
box over to bob

256
00:10:00,320 --> 00:10:03,600
and if bob was indeed behaving honestly

257
00:10:03,600 --> 00:10:05,200
in his first round

258
00:10:05,200 --> 00:10:07,440
then he would be able to open this box

259
00:10:07,440 --> 00:10:09,360
up and retrieve alice's second round

260
00:10:09,360 --> 00:10:10,880
message

261
00:10:10,880 --> 00:10:12,000
however

262
00:10:12,000 --> 00:10:14,959
if bob's first round message was invalid

263
00:10:14,959 --> 00:10:16,640
or malformed

264
00:10:16,640 --> 00:10:18,800
then bob won't be able to open the

265
00:10:18,800 --> 00:10:20,399
second round message

266
00:10:20,399 --> 00:10:23,040
of alice

267
00:10:25,279 --> 00:10:27,120
with that we observe that there is an

268
00:10:27,120 --> 00:10:29,760
existing uh primitive in the literature

269
00:10:29,760 --> 00:10:32,000
called conditional disclosure of secret

270
00:10:32,000 --> 00:10:34,399
which does precisely this

271
00:10:34,399 --> 00:10:37,200
so in this setting we have

272
00:10:37,200 --> 00:10:40,560
a sender having a secret message and

273
00:10:40,560 --> 00:10:43,680
some public np instance x prime and a

274
00:10:43,680 --> 00:10:46,000
receiver having a potential witness w

275
00:10:46,000 --> 00:10:47,279
prime

276
00:10:47,279 --> 00:10:49,600
and an np relation captures the valid

277
00:10:49,600 --> 00:10:50,560
pairs

278
00:10:50,560 --> 00:10:53,360
of instance and witnesses

279
00:10:53,360 --> 00:10:56,079
now the functionality that cds achieves

280
00:10:56,079 --> 00:10:59,120
is that it allows the sender to transfer

281
00:10:59,120 --> 00:11:01,200
m to the receiver

282
00:11:01,200 --> 00:11:02,000
if

283
00:11:02,000 --> 00:11:04,000
the instance and the witness pair is

284
00:11:04,000 --> 00:11:06,399
valid

285
00:11:08,160 --> 00:11:09,600
and typically

286
00:11:09,600 --> 00:11:10,480
the

287
00:11:10,480 --> 00:11:12,640
cds is a two round protocol between the

288
00:11:12,640 --> 00:11:14,480
receiver and the sender

289
00:11:14,480 --> 00:11:17,040
which guarantees the following

290
00:11:17,040 --> 00:11:18,880
so correctness ensures that if the

291
00:11:18,880 --> 00:11:21,279
witness

292
00:11:21,279 --> 00:11:23,279
is correct then the receiver retrieves

293
00:11:23,279 --> 00:11:25,600
the message

294
00:11:25,600 --> 00:11:27,600
sender security says that if the

295
00:11:27,600 --> 00:11:30,079
instance is not in the language

296
00:11:30,079 --> 00:11:33,040
then the sender's message is hidden

297
00:11:33,040 --> 00:11:35,040
and receiver security says that the

298
00:11:35,040 --> 00:11:37,600
sender cannot distinguish between two

299
00:11:37,600 --> 00:11:39,600
possible choices of fitness that might

300
00:11:39,600 --> 00:11:41,839
have been used by the receiver

301
00:11:41,839 --> 00:11:43,920
and this is a sort of witness

302
00:11:43,920 --> 00:11:45,760
indistinguishability kind of hiding on

303
00:11:45,760 --> 00:11:48,399
the receiver

304
00:11:48,959 --> 00:11:50,320
now

305
00:11:50,320 --> 00:11:52,079
there is a challenge though of using

306
00:11:52,079 --> 00:11:55,519
such two-party cds protocols in the mpc

307
00:11:55,519 --> 00:11:57,519
and let me illustrate that

308
00:11:57,519 --> 00:11:59,600
so imagine that there are three parties

309
00:11:59,600 --> 00:12:01,760
alice bob and charlie

310
00:12:01,760 --> 00:12:05,040
and they are trying to do an mpc

311
00:12:05,040 --> 00:12:06,160
so

312
00:12:06,160 --> 00:12:09,279
uh also note that in such a setting all

313
00:12:09,279 --> 00:12:12,320
the messages that are being exchanged

314
00:12:12,320 --> 00:12:15,839
are identical so alice's uh

315
00:12:15,839 --> 00:12:17,600
messages to all other parties are

316
00:12:17,600 --> 00:12:19,279
identical and so is the case for all

317
00:12:19,279 --> 00:12:21,680
other parties

318
00:12:21,680 --> 00:12:24,880
so in their first round alice

319
00:12:24,880 --> 00:12:27,920
exchanges a first round message

320
00:12:27,920 --> 00:12:30,000
and here i am omitting the communication

321
00:12:30,000 --> 00:12:31,920
between bob and charlie for just

322
00:12:31,920 --> 00:12:34,959
illustration purpose

323
00:12:34,959 --> 00:12:36,000
so

324
00:12:36,000 --> 00:12:38,240
so alice exchanged her first one message

325
00:12:38,240 --> 00:12:41,040
with bob and charlie and then sends over

326
00:12:41,040 --> 00:12:43,200
her second round message locked up on in

327
00:12:43,200 --> 00:12:46,959
these special cds boxes

328
00:12:47,040 --> 00:12:50,160
now if bob and charlie both are corrupt

329
00:12:50,160 --> 00:12:52,399
what can happen is the following

330
00:12:52,399 --> 00:12:55,120
so chandi sends a malformed first-round

331
00:12:55,120 --> 00:12:56,959
message

332
00:12:56,959 --> 00:12:59,360
and bob sends a valid first-round

333
00:12:59,360 --> 00:13:00,720
message

334
00:13:00,720 --> 00:13:03,600
if that happens then

335
00:13:03,600 --> 00:13:04,959
although charlie won't be able to

336
00:13:04,959 --> 00:13:08,000
retrieve alice's message by unlocking

337
00:13:08,000 --> 00:13:09,279
this box

338
00:13:09,279 --> 00:13:12,160
bob would be able to do so because bob's

339
00:13:12,160 --> 00:13:14,480
first round message was valid

340
00:13:14,480 --> 00:13:16,320
so he would be able to open the box and

341
00:13:16,320 --> 00:13:17,680
retrieve alice

342
00:13:17,680 --> 00:13:21,360
says second round message

343
00:13:21,360 --> 00:13:23,760
but if bob and charlie are colluding

344
00:13:23,760 --> 00:13:26,560
with each other they together

345
00:13:26,560 --> 00:13:28,399
in collusion have

346
00:13:28,399 --> 00:13:31,839
retrieved alice's second round message

347
00:13:31,839 --> 00:13:34,800
and this is bad in in a setting where

348
00:13:34,800 --> 00:13:36,800
the adversary might uh corrupt a

349
00:13:36,800 --> 00:13:38,410
dishonest majority

350
00:13:38,410 --> 00:13:39,839
[Music]

351
00:13:39,839 --> 00:13:41,920
of the players

352
00:13:41,920 --> 00:13:44,720
and in such mpc setting we

353
00:13:44,720 --> 00:13:47,279
want that alice's second round message

354
00:13:47,279 --> 00:13:49,519
should be transferred

355
00:13:49,519 --> 00:13:52,160
to all other players only if the round

356
00:13:52,160 --> 00:13:55,279
one message of all other players

357
00:13:55,279 --> 00:13:58,959
were valid at the same time

358
00:14:00,480 --> 00:14:03,279
so with that uh we formalize the notion

359
00:14:03,279 --> 00:14:05,199
of multiparty conditional disclosure of

360
00:14:05,199 --> 00:14:07,199
secret in this paper

361
00:14:07,199 --> 00:14:10,240
with ah which we indicate with mcts for

362
00:14:10,240 --> 00:14:12,560
short

363
00:14:12,720 --> 00:14:14,880
so here we have a center with a message

364
00:14:14,880 --> 00:14:15,680
m

365
00:14:15,680 --> 00:14:18,000
and multiple receivers

366
00:14:18,000 --> 00:14:19,600
each with their

367
00:14:19,600 --> 00:14:20,800
witnesses

368
00:14:20,800 --> 00:14:23,040
and instances

369
00:14:23,040 --> 00:14:25,680
and an np relation captures the valid

370
00:14:25,680 --> 00:14:27,600
set of valid pairs of instance and

371
00:14:27,600 --> 00:14:29,760
witnesses

372
00:14:29,760 --> 00:14:31,760
and the guarantees that

373
00:14:31,760 --> 00:14:33,440
and the functionality that we want to

374
00:14:33,440 --> 00:14:36,079
achieve is the following we want that

375
00:14:36,079 --> 00:14:38,480
the sender's message m should be

376
00:14:38,480 --> 00:14:42,000
transferred to all the receivers

377
00:14:42,000 --> 00:14:43,440
if

378
00:14:43,440 --> 00:14:46,240
all the instance and witness pairs

379
00:14:46,240 --> 00:14:48,800
were valid

380
00:14:52,079 --> 00:14:53,199
now

381
00:14:53,199 --> 00:14:55,680
in our paper we provide an approach for

382
00:14:55,680 --> 00:14:56,959
constructing

383
00:14:56,959 --> 00:14:59,440
such mcds primitive

384
00:14:59,440 --> 00:15:01,040
in the following way

385
00:15:01,040 --> 00:15:01,839
so

386
00:15:01,839 --> 00:15:03,519
this is just a high level approach and

387
00:15:03,519 --> 00:15:05,680
i'll go into the details later

388
00:15:05,680 --> 00:15:07,839
so we first start off with this

389
00:15:07,839 --> 00:15:09,760
primitive called witness encryption for

390
00:15:09,760 --> 00:15:12,480
music of commitments in the crs model

391
00:15:12,480 --> 00:15:14,639
given in this paper by pamuda and lin

392
00:15:14,639 --> 00:15:17,279
from 2020

393
00:15:17,279 --> 00:15:19,519
and this is based on the sxth assumption

394
00:15:19,519 --> 00:15:22,560
on bilinear groups

395
00:15:22,639 --> 00:15:25,519
so we take that and we remove the crs in

396
00:15:25,519 --> 00:15:27,839
their

397
00:15:28,240 --> 00:15:29,920
protocol

398
00:15:29,920 --> 00:15:31,519
by using

399
00:15:31,519 --> 00:15:34,320
new ease from doth austroski and snap in

400
00:15:34,320 --> 00:15:36,880
2006

401
00:15:36,880 --> 00:15:39,920
and therefore we get two parties cds

402
00:15:39,920 --> 00:15:42,160
with public reconstruction property in

403
00:15:42,160 --> 00:15:44,880
the plain model

404
00:15:45,279 --> 00:15:47,360
and here we also inherit the deal in

405
00:15:47,360 --> 00:15:50,480
assumption on bilinear groups

406
00:15:50,480 --> 00:15:52,639
and once we have this two party cds with

407
00:15:52,639 --> 00:15:54,560
public reconstruction property we

408
00:15:54,560 --> 00:15:56,399
leverage this public reconstruction

409
00:15:56,399 --> 00:15:59,040
property to get multi-party cds in the

410
00:15:59,040 --> 00:16:01,440
plane model by the secret sharing the

411
00:16:01,440 --> 00:16:03,120
sender's message among different

412
00:16:03,120 --> 00:16:07,079
two-party cds sessions

413
00:16:09,040 --> 00:16:10,160
and uh

414
00:16:10,160 --> 00:16:13,440
let me now start by describing uh what

415
00:16:13,440 --> 00:16:15,120
this primitive witness encryption

416
00:16:15,120 --> 00:16:17,680
forensic of commitments is

417
00:16:17,680 --> 00:16:20,320
so in this paper by pamela and lin

418
00:16:20,320 --> 00:16:22,000
they

419
00:16:22,000 --> 00:16:24,079
show how

420
00:16:24,079 --> 00:16:26,560
commitments and proofs can be generated

421
00:16:26,560 --> 00:16:30,240
in a google mode crs setting where crs

422
00:16:30,240 --> 00:16:31,920
can have two different computational

423
00:16:31,920 --> 00:16:34,399
indistinguishable modes

424
00:16:34,399 --> 00:16:36,639
one is the binding mode and in this mode

425
00:16:36,639 --> 00:16:38,800
the commitments are perfectly binding

426
00:16:38,800 --> 00:16:40,480
and

427
00:16:40,480 --> 00:16:42,160
zero knowledge proofs are perfectly

428
00:16:42,160 --> 00:16:43,600
sound

429
00:16:43,600 --> 00:16:45,519
in the hiding mode

430
00:16:45,519 --> 00:16:47,440
uh the commitments are perfectly hiding

431
00:16:47,440 --> 00:16:50,800
an eq vocal using some trapdoor tau

432
00:16:50,800 --> 00:16:53,839
underlying the crs

433
00:16:53,839 --> 00:16:55,120
and

434
00:16:55,120 --> 00:16:58,880
we have computational zero knowledge

435
00:17:00,079 --> 00:17:01,199
and

436
00:17:01,199 --> 00:17:03,519
in their scheme they support the

437
00:17:03,519 --> 00:17:06,160
generation of music proofs of statements

438
00:17:06,160 --> 00:17:08,160
of the following form

439
00:17:08,160 --> 00:17:10,000
asserting that c

440
00:17:10,000 --> 00:17:12,720
some commitment string c commits to some

441
00:17:12,720 --> 00:17:15,359
value v such that

442
00:17:15,359 --> 00:17:17,839
some circuit when applied to the value v

443
00:17:17,839 --> 00:17:21,119
results in an output y

444
00:17:21,119 --> 00:17:24,079
so they show how to generate

445
00:17:24,079 --> 00:17:26,319
zero knowledge proofs

446
00:17:26,319 --> 00:17:30,000
validating such assertions

447
00:17:30,160 --> 00:17:31,039
now

448
00:17:31,039 --> 00:17:33,520
in their paper they

449
00:17:33,520 --> 00:17:36,000
add a witness encryption property on top

450
00:17:36,000 --> 00:17:40,559
of these commitment and proof scheme

451
00:17:40,640 --> 00:17:41,440
and

452
00:17:41,440 --> 00:17:44,400
witness encryption is nothing but a

453
00:17:44,400 --> 00:17:46,799
form of one round cds protocol where the

454
00:17:46,799 --> 00:17:49,200
sender can encrypt his message m with

455
00:17:49,200 --> 00:17:51,360
respect to some np statement

456
00:17:51,360 --> 00:17:54,320
to create a ciphertext c such that c is

457
00:17:54,320 --> 00:17:57,120
decryptable by the receiver only using a

458
00:17:57,120 --> 00:18:01,320
valid np witness w

459
00:18:02,400 --> 00:18:04,720
now in their paper they construct a

460
00:18:04,720 --> 00:18:06,320
special kind of fitness encryption

461
00:18:06,320 --> 00:18:08,960
scheme where the cipher text c

462
00:18:08,960 --> 00:18:11,840
can be decrypted using any valid music

463
00:18:11,840 --> 00:18:14,480
proof pie instead of the standard

464
00:18:14,480 --> 00:18:16,880
setting where we decrypt it using a

465
00:18:16,880 --> 00:18:19,679
witness w

466
00:18:21,520 --> 00:18:22,240
and

467
00:18:22,240 --> 00:18:24,640
this uh special property where the

468
00:18:24,640 --> 00:18:27,039
cipher texts are decryptable using the

469
00:18:27,039 --> 00:18:28,320
proof pi

470
00:18:28,320 --> 00:18:31,600
will enable public reconstruction and

471
00:18:31,600 --> 00:18:34,160
will be crucial in creating the mcds

472
00:18:34,160 --> 00:18:37,600
parameter in our paper

473
00:18:38,240 --> 00:18:40,400
so now let me give an illustration of

474
00:18:40,400 --> 00:18:42,960
what their

475
00:18:42,960 --> 00:18:44,880
primitive looks like so we have a sender

476
00:18:44,880 --> 00:18:47,280
with a secret message m and a receiver

477
00:18:47,280 --> 00:18:50,799
with the potential witness w prime

478
00:18:50,799 --> 00:18:53,679
and in the real world the crs will be in

479
00:18:53,679 --> 00:18:55,120
binding mode

480
00:18:55,120 --> 00:18:57,039
the receiver as a first step will

481
00:18:57,039 --> 00:19:00,320
generate commitment to its witness using

482
00:19:00,320 --> 00:19:04,400
the crs and send it over to the sender

483
00:19:04,400 --> 00:19:07,039
then at a later phase the receiver puts

484
00:19:07,039 --> 00:19:10,960
up a claim saying that hey sender

485
00:19:10,960 --> 00:19:12,799
the witness that i committed to when

486
00:19:12,799 --> 00:19:15,440
applied to the circuit public circuit c

487
00:19:15,440 --> 00:19:19,039
will result in this output y

488
00:19:20,000 --> 00:19:23,520
the sender can now say okay

489
00:19:23,520 --> 00:19:26,400
i will encrypt my message m with respect

490
00:19:26,400 --> 00:19:30,160
to the circuit and your commitment

491
00:19:30,160 --> 00:19:32,799
and create the ciphertext c and send it

492
00:19:32,799 --> 00:19:35,679
over to the receiver

493
00:19:35,679 --> 00:19:37,840
receiver can now

494
00:19:37,840 --> 00:19:41,440
derive a nazi proof by

495
00:19:41,440 --> 00:19:45,679
validating his earlier claim

496
00:19:45,679 --> 00:19:48,799
and then use this proof pi to decrypt

497
00:19:48,799 --> 00:19:50,799
the ciphertext c and retrieve the

498
00:19:50,799 --> 00:19:53,440
message m

499
00:19:53,440 --> 00:19:56,160
now the crucial property here is that

500
00:19:56,160 --> 00:19:56,960
these

501
00:19:56,960 --> 00:20:00,080
ciphertexts can be decrypted just using

502
00:20:00,080 --> 00:20:03,039
a valid proof pi

503
00:20:03,039 --> 00:20:05,120
and crucially it doesn't need any

504
00:20:05,120 --> 00:20:08,640
private state so although the receiver

505
00:20:08,640 --> 00:20:11,200
needs some private state to derive this

506
00:20:11,200 --> 00:20:12,159
proof

507
00:20:12,159 --> 00:20:14,240
but once the proof is derived

508
00:20:14,240 --> 00:20:16,240
the decryption can be done

509
00:20:16,240 --> 00:20:18,840
using just the public proof y

510
00:20:18,840 --> 00:20:22,080
so uh looking ahead

511
00:20:22,080 --> 00:20:23,919
a receiver might

512
00:20:23,919 --> 00:20:26,480
uh even send his proofs over to other

513
00:20:26,480 --> 00:20:29,360
receivers and help them recon uh decrypt

514
00:20:29,360 --> 00:20:32,080
the ciphertex c without compromising his

515
00:20:32,080 --> 00:20:35,840
own security of the witness

516
00:20:39,919 --> 00:20:42,799
now our approach

517
00:20:42,799 --> 00:20:45,520
is the following we create two-party cds

518
00:20:45,520 --> 00:20:47,280
with public reconstruction property in

519
00:20:47,280 --> 00:20:48,559
the plane model

520
00:20:48,559 --> 00:20:51,600
by removing the need for an offline crs

521
00:20:51,600 --> 00:20:55,760
in the bahamut fitness encryption scheme

522
00:20:55,760 --> 00:20:58,720
and the high level idea is as follows

523
00:20:58,720 --> 00:21:00,400
we allow the prover

524
00:21:00,400 --> 00:21:03,120
to sell sample two crs strings

525
00:21:03,120 --> 00:21:04,960
in a way so that one of them is

526
00:21:04,960 --> 00:21:08,480
guaranteed to be in binding one

527
00:21:08,559 --> 00:21:10,159
and the prover then is required to

528
00:21:10,159 --> 00:21:12,559
provide valid music proofs under both

529
00:21:12,559 --> 00:21:15,440
crs strings

530
00:21:15,440 --> 00:21:18,080
and the security inclusion here is that

531
00:21:18,080 --> 00:21:20,240
since one of the crs is guaranteed to be

532
00:21:20,240 --> 00:21:21,760
in binding mode

533
00:21:21,760 --> 00:21:23,600
the soundness of the binding crs will

534
00:21:23,600 --> 00:21:26,159
ensure the overall soundness of the

535
00:21:26,159 --> 00:21:28,640
protocol

536
00:21:28,640 --> 00:21:31,120
and the receiver security uh

537
00:21:31,120 --> 00:21:34,159
holds because in the security proof

538
00:21:34,159 --> 00:21:36,960
we can switch from one we can switch one

539
00:21:36,960 --> 00:21:39,120
of the crs from binding mode to hiding

540
00:21:39,120 --> 00:21:41,679
mode and then switch from one witness to

541
00:21:41,679 --> 00:21:42,960
the other

542
00:21:42,960 --> 00:21:45,120
and this will ensure witness and

543
00:21:45,120 --> 00:21:47,440
distinguishability style of hiding on

544
00:21:47,440 --> 00:21:50,400
the receive version

545
00:21:52,640 --> 00:21:55,280
now let me give an illustration of

546
00:21:55,280 --> 00:21:56,320
how

547
00:21:56,320 --> 00:21:58,400
our compiler looks like

548
00:21:58,400 --> 00:21:59,520
so

549
00:21:59,520 --> 00:22:01,840
as a first step receiver self samples

550
00:22:01,840 --> 00:22:05,280
two crs strings in the binding mode

551
00:22:05,280 --> 00:22:07,760
and generates commitments to his witness

552
00:22:07,760 --> 00:22:12,240
under both of these crs individually

553
00:22:12,240 --> 00:22:13,039
then

554
00:22:13,039 --> 00:22:15,600
it generates a navy proof

555
00:22:15,600 --> 00:22:18,000
stating um validating the following

556
00:22:18,000 --> 00:22:20,480
claim saying that one of the crs is in

557
00:22:20,480 --> 00:22:22,559
binding mode and the respective

558
00:22:22,559 --> 00:22:25,600
commitment is valid

559
00:22:25,600 --> 00:22:28,000
then it sends over the crs strings and

560
00:22:28,000 --> 00:22:30,960
commitments and the proof to the sender

561
00:22:30,960 --> 00:22:33,200
later when there is a claim stating that

562
00:22:33,200 --> 00:22:36,159
the circuit c applied on witness w prime

563
00:22:36,159 --> 00:22:39,360
results in the output y

564
00:22:39,360 --> 00:22:41,360
sender will first check whether the new

565
00:22:41,360 --> 00:22:42,720
group was valid

566
00:22:42,720 --> 00:22:45,039
if the navy proof was valid sender will

567
00:22:45,039 --> 00:22:48,559
split his message m into two shares m1

568
00:22:48,559 --> 00:22:50,320
and m2

569
00:22:50,320 --> 00:22:53,039
individually witness encrypt both

570
00:22:53,039 --> 00:22:54,640
these shares

571
00:22:54,640 --> 00:22:55,600
under

572
00:22:55,600 --> 00:22:59,440
the crs and commitment

573
00:22:59,440 --> 00:23:01,919
and send over these two ciphertexts to

574
00:23:01,919 --> 00:23:04,640
the receiver

575
00:23:05,679 --> 00:23:09,039
the receiver can now

576
00:23:09,039 --> 00:23:11,600
generate proofs

577
00:23:11,600 --> 00:23:12,480
or

578
00:23:12,480 --> 00:23:15,200
under both these crs strings

579
00:23:15,200 --> 00:23:17,360
and then using these proofs witness

580
00:23:17,360 --> 00:23:19,600
decrypt each of

581
00:23:19,600 --> 00:23:22,960
the two shares

582
00:23:22,960 --> 00:23:24,080
and then

583
00:23:24,080 --> 00:23:26,720
by exhausting together the shares it can

584
00:23:26,720 --> 00:23:30,559
retrieve the message of the center

585
00:23:32,240 --> 00:23:34,799
so once we have this two party cds with

586
00:23:34,799 --> 00:23:37,120
public reconstruction property

587
00:23:37,120 --> 00:23:39,280
we can

588
00:23:39,280 --> 00:23:41,840
derive an mcds protocol in the following

589
00:23:41,840 --> 00:23:43,279
wave

590
00:23:43,279 --> 00:23:45,440
so the main idea is for the sender to

591
00:23:45,440 --> 00:23:48,480
split his message m into two shares m1

592
00:23:48,480 --> 00:23:51,520
and m2 and then

593
00:23:51,520 --> 00:23:52,880
use to

594
00:23:52,880 --> 00:23:56,960
seek uh two two-party cts

595
00:23:56,960 --> 00:23:59,120
protocols in a black box way

596
00:23:59,120 --> 00:24:01,120
so the sender

597
00:24:01,120 --> 00:24:03,520
locks up his each of the shares in

598
00:24:03,520 --> 00:24:07,279
two-party cds boxes

599
00:24:07,360 --> 00:24:09,600
and at the same time receivers can

600
00:24:09,600 --> 00:24:10,720
derive

601
00:24:10,720 --> 00:24:15,279
proofs from their private witnesses

602
00:24:15,600 --> 00:24:19,279
now the sender can send over these

603
00:24:19,279 --> 00:24:22,640
cds boxes to both the receivers and at

604
00:24:22,640 --> 00:24:25,039
the same time receivers can exchange the

605
00:24:25,039 --> 00:24:28,879
pro their proofs with each other

606
00:24:30,240 --> 00:24:31,360
now

607
00:24:31,360 --> 00:24:34,320
in the end the receivers have uh

608
00:24:34,320 --> 00:24:36,880
received the two-party cds boxes from

609
00:24:36,880 --> 00:24:38,320
the sender

610
00:24:38,320 --> 00:24:39,440
and also

611
00:24:39,440 --> 00:24:41,679
have

612
00:24:42,000 --> 00:24:43,360
exchanged

613
00:24:43,360 --> 00:24:46,640
their proof spy with each other

614
00:24:46,640 --> 00:24:49,120
now they can use these proofs to locally

615
00:24:49,120 --> 00:24:52,000
decrypt each of the two party cds boxes

616
00:24:52,000 --> 00:24:53,760
to retrieve the

617
00:24:53,760 --> 00:24:55,440
shares of the message

618
00:24:55,440 --> 00:24:59,440
and then xor it together to retrieve the

619
00:24:59,440 --> 00:25:02,559
send a secret message

620
00:25:03,919 --> 00:25:05,520
so with that we

621
00:25:05,520 --> 00:25:06,799
uh

622
00:25:06,799 --> 00:25:09,360
finally construct the following mcds

623
00:25:09,360 --> 00:25:11,679
primitive which has

624
00:25:11,679 --> 00:25:13,600
the following guarantees

625
00:25:13,600 --> 00:25:16,799
so correctness ensures that if

626
00:25:16,799 --> 00:25:20,000
receivers if all the receivers

627
00:25:20,000 --> 00:25:20,799
have

628
00:25:20,799 --> 00:25:22,400
valid witnesses

629
00:25:22,400 --> 00:25:24,159
then all the receivers retrieve the

630
00:25:24,159 --> 00:25:26,720
message m from the sender at the end of

631
00:25:26,720 --> 00:25:29,840
round two

632
00:25:31,039 --> 00:25:33,679
sender security says that if there is at

633
00:25:33,679 --> 00:25:36,559
one if at even if one of the instances

634
00:25:36,559 --> 00:25:38,720
is not in the language then the senders

635
00:25:38,720 --> 00:25:43,320
message m is hidden from all receivers

636
00:25:44,080 --> 00:25:45,840
and receiver security says that the

637
00:25:45,840 --> 00:25:47,279
sender's view

638
00:25:47,279 --> 00:25:49,039
is computationally indistinguishable

639
00:25:49,039 --> 00:25:50,880
between two possible choices of

640
00:25:50,880 --> 00:25:55,120
witnesses used by the receiver

641
00:25:55,120 --> 00:25:57,039
and i emphasize that

642
00:25:57,039 --> 00:25:59,039
the sender security here

643
00:25:59,039 --> 00:26:01,120
should hold even if some subset of

644
00:26:01,120 --> 00:26:03,520
receivers are colliding

645
00:26:03,520 --> 00:26:05,919
and the receiver security should hold

646
00:26:05,919 --> 00:26:08,080
even if

647
00:26:08,080 --> 00:26:11,760
the sender along with some receivers

648
00:26:11,760 --> 00:26:14,879
are colluding together

649
00:26:17,039 --> 00:26:19,039
so now i will show how we go from two

650
00:26:19,039 --> 00:26:22,000
round semi-malicious secure mpc protocol

651
00:26:22,000 --> 00:26:23,679
to two around maliciously secure

652
00:26:23,679 --> 00:26:24,880
protocol

653
00:26:24,880 --> 00:26:28,480
by using this mcds perimeter

654
00:26:28,480 --> 00:26:31,120
so recall that the basic structure of a

655
00:26:31,120 --> 00:26:33,799
two-round any two-round semi-malicious

656
00:26:33,799 --> 00:26:36,559
seriously secure mpc protocol looks like

657
00:26:36,559 --> 00:26:37,679
the following

658
00:26:37,679 --> 00:26:39,840
so

659
00:26:39,919 --> 00:26:41,600
uh in the first round party is

660
00:26:41,600 --> 00:26:43,440
exchanging the first round mpc message

661
00:26:43,440 --> 00:26:45,039
and in the second round they exchange

662
00:26:45,039 --> 00:26:48,640
the second round and pc messages

663
00:26:50,880 --> 00:26:53,400
so now we take such two-round

664
00:26:53,400 --> 00:26:56,480
semi-maliciously secure mpc protocol

665
00:26:56,480 --> 00:26:57,440
and

666
00:26:57,440 --> 00:27:00,640
we just condition the transfer of second

667
00:27:00,640 --> 00:27:02,159
round of

668
00:27:02,159 --> 00:27:04,000
such uh

669
00:27:04,000 --> 00:27:07,440
second round messages of mpc

670
00:27:07,440 --> 00:27:10,960
using the mcds box

671
00:27:10,960 --> 00:27:12,880
condition on the

672
00:27:12,880 --> 00:27:15,279
fact that the first round message of the

673
00:27:15,279 --> 00:27:19,039
other party was valid

674
00:27:19,679 --> 00:27:21,840
so this almost works

675
00:27:21,840 --> 00:27:22,720
but

676
00:27:22,720 --> 00:27:25,120
it's unclear how to simulate this kind

677
00:27:25,120 --> 00:27:26,799
of protocol because

678
00:27:26,799 --> 00:27:29,039
the mcds that we construct

679
00:27:29,039 --> 00:27:30,760
only provides a witness

680
00:27:30,760 --> 00:27:35,240
indistinguishability style of hiding

681
00:27:36,159 --> 00:27:39,679
so to get a simulation security

682
00:27:39,679 --> 00:27:43,279
we have to do a bit more work

683
00:27:43,279 --> 00:27:44,080
so

684
00:27:44,080 --> 00:27:46,960
what we do is we use the

685
00:27:46,960 --> 00:27:49,200
year semi trap door kind of paradigm

686
00:27:49,200 --> 00:27:52,159
where we add

687
00:27:52,799 --> 00:27:56,240
a trap door phase in the round one of

688
00:27:56,240 --> 00:27:59,200
mpc so each party samples a trapdoor

689
00:27:59,200 --> 00:28:00,960
which is

690
00:28:00,960 --> 00:28:03,600
just a uniformly random string

691
00:28:03,600 --> 00:28:06,320
and then sends a commitment to it to the

692
00:28:06,320 --> 00:28:08,960
other party

693
00:28:09,679 --> 00:28:12,320
at the same time

694
00:28:12,320 --> 00:28:15,360
each party takes a guess

695
00:28:15,360 --> 00:28:17,919
at what the other party's trapdoor might

696
00:28:17,919 --> 00:28:20,080
be so for example

697
00:28:20,080 --> 00:28:23,039
bob here in his

698
00:28:23,039 --> 00:28:24,720
blue commitment

699
00:28:24,720 --> 00:28:27,760
is taking a guess

700
00:28:27,760 --> 00:28:30,880
at what the value underlying alice's

701
00:28:30,880 --> 00:28:32,960
yellow commitment is

702
00:28:32,960 --> 00:28:34,720
so i'll refer to the yellow commitment

703
00:28:34,720 --> 00:28:35,440
as

704
00:28:35,440 --> 00:28:37,120
commitment containing trapdoor

705
00:28:37,120 --> 00:28:39,600
information and blue commitment service

706
00:28:39,600 --> 00:28:41,840
commitment containing guest

707
00:28:41,840 --> 00:28:44,840
information

708
00:28:46,000 --> 00:28:48,399
now we modify the second round in the

709
00:28:48,399 --> 00:28:50,000
following way

710
00:28:50,000 --> 00:28:52,080
we condition this

711
00:28:52,080 --> 00:28:55,520
transfer of second round mpc message

712
00:28:55,520 --> 00:28:58,720
on the fact that either the first round

713
00:28:58,720 --> 00:29:00,559
mpc message was valid

714
00:29:00,559 --> 00:29:02,320
or

715
00:29:02,320 --> 00:29:04,880
the guess commitment

716
00:29:04,880 --> 00:29:08,480
contained a value which is identical

717
00:29:08,480 --> 00:29:11,039
to the value underlying the commitment

718
00:29:11,039 --> 00:29:13,200
containing the travel information it is

719
00:29:13,200 --> 00:29:15,840
the yellow one

720
00:29:19,279 --> 00:29:21,600
so note that in the on

721
00:29:21,600 --> 00:29:25,120
real world parties cannot

722
00:29:25,120 --> 00:29:27,840
and we also require

723
00:29:27,840 --> 00:29:30,159
a special form of non-malleability

724
00:29:30,159 --> 00:29:32,080
between these yellow and blue

725
00:29:32,080 --> 00:29:34,640
commitments for the security proof to go

726
00:29:34,640 --> 00:29:36,480
through

727
00:29:36,480 --> 00:29:38,559
uh at a very high level

728
00:29:38,559 --> 00:29:40,960
in the real world parties won't be able

729
00:29:40,960 --> 00:29:41,840
to

730
00:29:41,840 --> 00:29:43,440
uh

731
00:29:43,440 --> 00:29:45,440
guess what the other

732
00:29:45,440 --> 00:29:47,679
party's trapdoor is and so they will be

733
00:29:47,679 --> 00:29:50,880
required to stick to the honest protocol

734
00:29:50,880 --> 00:29:52,960
but in the

735
00:29:52,960 --> 00:29:55,440
in the security proof the simulator can

736
00:29:55,440 --> 00:29:56,399
take

737
00:29:56,399 --> 00:29:59,440
correct guesses in super polynomial time

738
00:29:59,440 --> 00:30:02,480
at what the adversaries trapdoor values

739
00:30:02,480 --> 00:30:03,440
are

740
00:30:03,440 --> 00:30:05,360
and then take a different branch in the

741
00:30:05,360 --> 00:30:08,360
mcds

742
00:30:09,600 --> 00:30:11,520
uh uh

743
00:30:11,520 --> 00:30:14,480
a brief note on non-malleability so

744
00:30:14,480 --> 00:30:16,399
as i said we have these two kind of

745
00:30:16,399 --> 00:30:19,039
commitments yellow and the blue one

746
00:30:19,039 --> 00:30:21,440
and what we require is that it should

747
00:30:21,440 --> 00:30:23,840
not be possible to transfer any implicit

748
00:30:23,840 --> 00:30:25,279
information inside the yellow

749
00:30:25,279 --> 00:30:26,640
commitments

750
00:30:26,640 --> 00:30:27,760
to the

751
00:30:27,760 --> 00:30:31,039
values inside blue commitments

752
00:30:31,039 --> 00:30:33,200
and this is needed in order to avoid an

753
00:30:33,200 --> 00:30:35,600
adversary from making correct implicit

754
00:30:35,600 --> 00:30:38,480
guesses about honest parties trapdoor

755
00:30:38,480 --> 00:30:40,880
values

756
00:30:41,600 --> 00:30:43,360
we also required that the blue

757
00:30:43,360 --> 00:30:45,600
commitments should be non-malleable with

758
00:30:45,600 --> 00:30:48,159
respect to themselves

759
00:30:48,159 --> 00:30:50,960
and this is required in order for the

760
00:30:50,960 --> 00:30:53,200
security proof to go through so enough

761
00:30:53,200 --> 00:30:55,120
one of the hybrids will

762
00:30:55,120 --> 00:30:56,000
uh

763
00:30:56,000 --> 00:30:56,880
we

764
00:30:56,880 --> 00:30:58,720
switch the simulator from taking wrong

765
00:30:58,720 --> 00:31:01,279
guesses to taking correct guesses about

766
00:31:01,279 --> 00:31:03,039
adversary's trap door

767
00:31:03,039 --> 00:31:04,799
and we don't want the adversary to

768
00:31:04,799 --> 00:31:07,840
notice this change

769
00:31:08,640 --> 00:31:10,720
so with that a fireman two round mpc

770
00:31:10,720 --> 00:31:13,039
compiler looks like the following so we

771
00:31:13,039 --> 00:31:15,399
start with existing two run semi

772
00:31:15,399 --> 00:31:18,159
managedly secure mpc protocols in the

773
00:31:18,159 --> 00:31:20,320
plane model

774
00:31:20,320 --> 00:31:23,919
and the mcts primitive that we construct

775
00:31:23,919 --> 00:31:25,679
in this paper

776
00:31:25,679 --> 00:31:28,159
we combine these two by conditioning the

777
00:31:28,159 --> 00:31:30,480
transfer of second round mpc message on

778
00:31:30,480 --> 00:31:32,480
an np relation which captures the

779
00:31:32,480 --> 00:31:34,720
correctness of first round

780
00:31:34,720 --> 00:31:37,600
and pc message

781
00:31:38,960 --> 00:31:41,519
then we add a trapdoor witness in the np

782
00:31:41,519 --> 00:31:44,640
relation to upgrade from the wi style of

783
00:31:44,640 --> 00:31:48,559
hiding to zero knowledge style of hiding

784
00:31:50,399 --> 00:31:51,760
and

785
00:31:51,760 --> 00:31:54,159
at the end we

786
00:31:54,159 --> 00:31:56,159
finally achieved two round maliciously

787
00:31:56,159 --> 00:31:58,480
secure mpc protocol in the plane model

788
00:31:58,480 --> 00:32:01,840
with sps simulation

789
00:32:02,159 --> 00:32:04,320
and

790
00:32:04,320 --> 00:32:05,919
this

791
00:32:05,919 --> 00:32:08,399
trapdoor part requires super polynomial

792
00:32:08,399 --> 00:32:10,159
assumption because

793
00:32:10,159 --> 00:32:12,480
the simulator and the security group

794
00:32:12,480 --> 00:32:16,399
needs to guess the adversary's trap door

795
00:32:16,399 --> 00:32:19,439
before round one

796
00:32:20,720 --> 00:32:23,919
so with that a final result looks

797
00:32:23,919 --> 00:32:26,480
as follows

798
00:32:26,480 --> 00:32:28,720
so we show that there exists a two-round

799
00:32:28,720 --> 00:32:30,960
maliciously secure mpc protocol in the

800
00:32:30,960 --> 00:32:33,039
plane model with super polynomial

801
00:32:33,039 --> 00:32:36,159
simulation assuming

802
00:32:36,159 --> 00:32:39,440
bilinear group in which d-lin and x-ts

803
00:32:39,440 --> 00:32:43,200
are sub-exponentially hard and we use

804
00:32:43,200 --> 00:32:45,120
this assumption in order to instantiate

805
00:32:45,120 --> 00:32:47,440
the sub exponentially secure versions of

806
00:32:47,440 --> 00:32:50,000
gauth ostrovsky's immediate

807
00:32:50,000 --> 00:32:52,720
and bl 20 pemu the limb

808
00:32:52,720 --> 00:32:56,679
fitness encryption scheme

809
00:32:56,960 --> 00:32:58,720
we also rely on two rounds of

810
00:32:58,720 --> 00:33:00,640
exponentially secure mpc against

811
00:33:00,640 --> 00:33:03,440
semi-malicious adversaries

812
00:33:03,440 --> 00:33:06,320
and this follows from instantiating

813
00:33:06,320 --> 00:33:08,480
known uh

814
00:33:08,480 --> 00:33:10,399
protocols like

815
00:33:10,399 --> 00:33:13,360
gs18 and vl18 with sub exponential

816
00:33:13,360 --> 00:33:16,719
secure two round od

817
00:33:18,559 --> 00:33:20,720
third assumption that we rely on is are

818
00:33:20,720 --> 00:33:22,399
these special non-interactive non

819
00:33:22,399 --> 00:33:24,720
malleable commitments

820
00:33:24,720 --> 00:33:26,880
and in the paper we show two different

821
00:33:26,880 --> 00:33:29,200
possible instantiations for it

822
00:33:29,200 --> 00:33:31,039
for constant parties

823
00:33:31,039 --> 00:33:32,960
it follows from sub exponential secure

824
00:33:32,960 --> 00:33:36,080
time of puzzle and some exponential

825
00:33:36,080 --> 00:33:38,880
quantum hardness of lw

826
00:33:38,880 --> 00:33:42,000
for bounded polynomial number of parties

827
00:33:42,000 --> 00:33:44,080
it follows from sub exponential quantum

828
00:33:44,080 --> 00:33:46,640
hardness amplifiability of lw

829
00:33:46,640 --> 00:33:49,200
sub exponential hardness amplifiability

830
00:33:49,200 --> 00:33:50,960
of tth

831
00:33:50,960 --> 00:33:53,760
and sub exponentially secure one message

832
00:33:53,760 --> 00:33:56,080
big c

833
00:33:57,360 --> 00:33:59,760
and with that i conclude meta thanks for

834
00:33:59,760 --> 00:34:02,760
listening

