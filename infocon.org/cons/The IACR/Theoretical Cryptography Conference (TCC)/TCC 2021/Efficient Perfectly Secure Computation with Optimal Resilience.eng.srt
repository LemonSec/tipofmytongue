1
00:00:01,920 --> 00:00:03,360
welcome

2
00:00:03,360 --> 00:00:04,880
i'm going to talk about efficient

3
00:00:04,880 --> 00:00:06,720
perfectly secure computation with

4
00:00:06,720 --> 00:00:08,960
optimal resilience i'm gilad ashwaram

5
00:00:08,960 --> 00:00:11,200
from barilan university and this is a

6
00:00:11,200 --> 00:00:13,120
joint work with itai abraham and

7
00:00:13,120 --> 00:00:15,360
abhishayanai

8
00:00:15,360 --> 00:00:17,039
so in the setting of secure multi-party

9
00:00:17,039 --> 00:00:18,960
computation we have some set of mutually

10
00:00:18,960 --> 00:00:20,560
distrustful parties each has some

11
00:00:20,560 --> 00:00:22,640
private input and the parties wish to

12
00:00:22,640 --> 00:00:24,320
compute some joint function of their

13
00:00:24,320 --> 00:00:26,480
inputs are preserving some security

14
00:00:26,480 --> 00:00:28,480
properties such as privacy correctness

15
00:00:28,480 --> 00:00:31,760
and so on one of the seminal results in

16
00:00:31,760 --> 00:00:33,840
secure computation is that of bernoull

17
00:00:33,840 --> 00:00:37,120
goldwasser and with gilson in 1988

18
00:00:37,120 --> 00:00:39,360
it says that secure computation is

19
00:00:39,360 --> 00:00:42,160
possible in the semi-honors settings

20
00:00:42,160 --> 00:00:44,879
with perfect security assuming that that

21
00:00:44,879 --> 00:00:46,879
wesley corrupted most one half of the

22
00:00:46,879 --> 00:00:49,520
parties in the malicious settings that

23
00:00:49,520 --> 00:00:51,760
wesleyan corrupted most one third of the

24
00:00:51,760 --> 00:00:54,480
parties both results are attacked

25
00:00:54,480 --> 00:00:55,920
perfect security means that the

26
00:00:55,920 --> 00:00:57,600
adversary can be computationally

27
00:00:57,600 --> 00:00:59,680
unbounded and protocols in these

28
00:00:59,680 --> 00:01:01,600
settings are usually also adaptively

29
00:01:01,600 --> 00:01:03,680
secure and secure under concurrent

30
00:01:03,680 --> 00:01:04,879
composition

31
00:01:04,879 --> 00:01:07,600
once once they satisfy some natural

32
00:01:07,600 --> 00:01:09,439
requirements

33
00:01:09,439 --> 00:01:11,200
what is the communication complexity of

34
00:01:11,200 --> 00:01:13,920
the protocol for computing a function f

35
00:01:13,920 --> 00:01:16,240
we first represent it as an arithmetic

36
00:01:16,240 --> 00:01:17,600
circuit c

37
00:01:17,600 --> 00:01:19,680
then the communication complexity of the

38
00:01:19,680 --> 00:01:22,960
protocol is n square time

39
00:01:22,960 --> 00:01:24,880
times the size of the circuit in the

40
00:01:24,880 --> 00:01:27,600
semi-honest setting and in the malicious

41
00:01:27,600 --> 00:01:30,159
settings we have the adversary can slow

42
00:01:30,159 --> 00:01:32,560
down the protocol but it cannot break

43
00:01:32,560 --> 00:01:34,320
security

44
00:01:34,320 --> 00:01:36,720
does we have both optimistic case and

45
00:01:36,720 --> 00:01:40,079
pessimistic case where the adversary uh

46
00:01:40,079 --> 00:01:42,720
in the optimistic case but adversary

47
00:01:42,720 --> 00:01:46,159
does not slow down the protocol

48
00:01:46,159 --> 00:01:48,399
the communication complexity is n to the

49
00:01:48,399 --> 00:01:50,720
four times the size of the circuit in a

50
00:01:50,720 --> 00:01:52,640
pessimistic case what adversary does

51
00:01:52,640 --> 00:01:54,880
successfully slow down the protocol we

52
00:01:54,880 --> 00:01:57,119
have entered the six times

53
00:01:57,119 --> 00:01:59,520
the size of the circuit

54
00:01:59,520 --> 00:02:01,520
our result we're going to show a

55
00:02:01,520 --> 00:02:02,799
protocol

56
00:02:02,799 --> 00:02:05,040
where we improve both the optimistic and

57
00:02:05,040 --> 00:02:06,960
the pessimistic cases

58
00:02:06,960 --> 00:02:10,239
and we show a protocol where um

59
00:02:10,239 --> 00:02:12,959
the optimistic case it is n cube times

60
00:02:12,959 --> 00:02:14,959
the size of the cell get

61
00:02:14,959 --> 00:02:17,040
and in the pestimistic case it's into

62
00:02:17,040 --> 00:02:20,560
the phone times the size of the circuit

63
00:02:20,560 --> 00:02:22,560
another way to view our improvement is

64
00:02:22,560 --> 00:02:25,120
as follows so in bgw and the semi-honest

65
00:02:25,120 --> 00:02:26,720
settings the total communication

66
00:02:26,720 --> 00:02:29,200
complexity for each multiplication in

67
00:02:29,200 --> 00:02:30,959
the circuit is the communication

68
00:02:30,959 --> 00:02:33,519
complexity of secret sharing times the

69
00:02:33,519 --> 00:02:37,120
number of parties n in a malicious case

70
00:02:37,120 --> 00:02:39,840
we have to use verifiable secret sharing

71
00:02:39,840 --> 00:02:42,480
instead of just sequence sharing

72
00:02:42,480 --> 00:02:44,800
but now we need much more secrets to

73
00:02:44,800 --> 00:02:45,920
share

74
00:02:45,920 --> 00:02:48,560
in the bjw protocol this requires

75
00:02:48,560 --> 00:02:51,599
sharing of n squared elements per

76
00:02:51,599 --> 00:02:53,519
multiplication

77
00:02:53,519 --> 00:02:54,959
our result

78
00:02:54,959 --> 00:02:57,519
we show how to match the same amount of

79
00:02:57,519 --> 00:03:00,159
secrets as in the semions case and have

80
00:03:00,159 --> 00:03:01,280
only

81
00:03:01,280 --> 00:03:05,040
linear number of vss

82
00:03:05,040 --> 00:03:07,280
in addition we have some bonus consider

83
00:03:07,280 --> 00:03:10,560
a circuit g that has l inputs and m

84
00:03:10,560 --> 00:03:13,760
outputs of multiplication depth 1.

85
00:03:13,760 --> 00:03:15,760
in other words this is a polynomial of

86
00:03:15,760 --> 00:03:17,120
degree 2.

87
00:03:17,120 --> 00:03:20,879
think that g is large y l and while l

88
00:03:20,879 --> 00:03:23,599
and m are relatively small

89
00:03:23,599 --> 00:03:25,920
to compute such as circuits pg double

90
00:03:25,920 --> 00:03:28,080
requires the amount of vss that are

91
00:03:28,080 --> 00:03:30,879
proportional to the size of the inputs

92
00:03:30,879 --> 00:03:32,640
and outputs of g

93
00:03:32,640 --> 00:03:34,959
plus also something that depends on the

94
00:03:34,959 --> 00:03:37,440
size of the circuit

95
00:03:37,440 --> 00:03:40,080
in our protocol we can securely compute

96
00:03:40,080 --> 00:03:42,959
such circuit with the number of vss that

97
00:03:42,959 --> 00:03:45,519
is proportional only to the input and

98
00:03:45,519 --> 00:03:48,000
output size of the circuit and it is

99
00:03:48,000 --> 00:03:49,519
completely

100
00:03:49,519 --> 00:03:51,560
independent of the number of

101
00:03:51,560 --> 00:03:54,879
multiplications in g

102
00:03:54,879 --> 00:03:56,560
this can also be generalized to

103
00:03:56,560 --> 00:03:58,560
multiplication to circuits with

104
00:03:58,560 --> 00:04:02,319
multiplication depth greater than 1

105
00:04:02,319 --> 00:04:04,640
while we only need to pay the amount of

106
00:04:04,640 --> 00:04:08,080
wires that exist between the layers

107
00:04:08,080 --> 00:04:10,239
and we are independent of the number of

108
00:04:10,239 --> 00:04:12,720
multiplications in each one of the

109
00:04:12,720 --> 00:04:13,840
layers

110
00:04:13,840 --> 00:04:15,280
note that this means that the

111
00:04:15,280 --> 00:04:18,079
communication complexity

112
00:04:18,079 --> 00:04:21,120
is sublinear in the circuit size

113
00:04:21,120 --> 00:04:24,240
this is similar to r1cs and zero

114
00:04:24,240 --> 00:04:25,919
knowledge and for the best of our

115
00:04:25,919 --> 00:04:28,160
knowledge this is the first time that

116
00:04:28,160 --> 00:04:30,160
this appears in purpose in the perfect

117
00:04:30,160 --> 00:04:31,360
setting

118
00:04:31,360 --> 00:04:33,440
as an example consider the task of

119
00:04:33,440 --> 00:04:35,680
matrix multiplication

120
00:04:35,680 --> 00:04:37,759
this is the circuits which

121
00:04:37,759 --> 00:04:39,440
in which the number of inputs and

122
00:04:39,440 --> 00:04:41,759
outputs is relatively small something

123
00:04:41,759 --> 00:04:42,960
like m

124
00:04:42,960 --> 00:04:44,800
squared while the number of

125
00:04:44,800 --> 00:04:47,600
multiplications at each at least when we

126
00:04:47,600 --> 00:04:49,840
implement this circuit naively

127
00:04:49,840 --> 00:04:51,600
is mq

128
00:04:51,600 --> 00:04:54,560
this means that vgw will require this

129
00:04:54,560 --> 00:04:58,560
amount of vss it's n square time m times

130
00:04:58,560 --> 00:05:00,160
m cube

131
00:05:00,160 --> 00:05:02,639
well our protocol we improve first of

132
00:05:02,639 --> 00:05:05,919
all uh n square to n

133
00:05:05,919 --> 00:05:08,600
uh for any circuit and for this

134
00:05:08,600 --> 00:05:11,039
particular circuit we can also compute

135
00:05:11,039 --> 00:05:16,240
it from in m square instead of mq

136
00:05:16,560 --> 00:05:18,160
some related works

137
00:05:18,160 --> 00:05:20,320
so setting is the case of constant

138
00:05:20,320 --> 00:05:22,639
around per multiplication

139
00:05:22,639 --> 00:05:25,680
with perfect security malicious security

140
00:05:25,680 --> 00:05:27,680
and optimal resilience

141
00:05:27,680 --> 00:05:29,759
this means that at most

142
00:05:29,759 --> 00:05:32,639
one third of the parties are corrupted

143
00:05:32,639 --> 00:05:34,479
in that case we achieve the following

144
00:05:34,479 --> 00:05:36,560
communication complexity we have end to

145
00:05:36,560 --> 00:05:39,600
the cube in the optimistic case into the

146
00:05:39,600 --> 00:05:41,520
form in the pessimistic

147
00:05:41,520 --> 00:05:43,840
and the round complexity is proportional

148
00:05:43,840 --> 00:05:45,199
to the depth

149
00:05:45,199 --> 00:05:47,680
to the multiplication multiplicative

150
00:05:47,680 --> 00:05:50,000
depth of c

151
00:05:50,000 --> 00:05:52,160
there are more efficient uh protocols in

152
00:05:52,160 --> 00:05:53,919
terms of communication complexity in the

153
00:05:53,919 --> 00:05:55,680
perfect setting

154
00:05:55,680 --> 00:05:58,160
that are based on player elimination

155
00:05:58,160 --> 00:05:59,280
technique

156
00:05:59,280 --> 00:06:01,039
which uh

157
00:06:01,039 --> 00:06:02,960
the best protocol here even achieves

158
00:06:02,960 --> 00:06:05,680
linear dependency on n the number of

159
00:06:05,680 --> 00:06:06,880
parties

160
00:06:06,880 --> 00:06:08,720
in that techniques players that are

161
00:06:08,720 --> 00:06:09,919
detected

162
00:06:09,919 --> 00:06:12,800
cheating during the protocol are removed

163
00:06:12,800 --> 00:06:14,400
from the protocol

164
00:06:14,400 --> 00:06:16,400
and then we need to repeat some part of

165
00:06:16,400 --> 00:06:17,840
the computation

166
00:06:17,840 --> 00:06:20,080
this increases the run complexity of the

167
00:06:20,080 --> 00:06:24,560
protocol for shallow circuits

168
00:06:24,720 --> 00:06:27,039
moreover for seconds with multiplication

169
00:06:27,039 --> 00:06:29,600
depth 1 our protocol can also obtain

170
00:06:29,600 --> 00:06:31,919
communication complexity that depends

171
00:06:31,919 --> 00:06:33,919
only on the input and output size of the

172
00:06:33,919 --> 00:06:36,479
circuit and is independent of the size

173
00:06:36,479 --> 00:06:37,759
of the circuit

174
00:06:37,759 --> 00:06:40,160
and it is unclear if a similar technique

175
00:06:40,160 --> 00:06:42,400
can be implemented in the other line of

176
00:06:42,400 --> 00:06:44,400
works that are based on player

177
00:06:44,400 --> 00:06:45,919
elimination

178
00:06:45,919 --> 00:06:48,400
as such those kinds of protocols are

179
00:06:48,400 --> 00:06:50,880
formally incomparable well it seems that

180
00:06:50,880 --> 00:06:52,240
for shallow

181
00:06:52,240 --> 00:06:53,919
white circuits

182
00:06:53,919 --> 00:06:56,560
our protocol is more preferable

183
00:06:56,560 --> 00:06:59,440
while for large depth circuits

184
00:06:59,440 --> 00:07:01,680
it is kind of clear that this approach

185
00:07:01,680 --> 00:07:04,880
is is better

186
00:07:05,919 --> 00:07:07,840
before proceeding to the technical part

187
00:07:07,840 --> 00:07:10,319
of the talk i am going to assume some

188
00:07:10,319 --> 00:07:12,800
familiarity with the semi-honest version

189
00:07:12,800 --> 00:07:16,319
of bgw with simplification of geranium

190
00:07:16,319 --> 00:07:17,919
or robin and robin

191
00:07:17,919 --> 00:07:20,080
i will also assume some familiarity with

192
00:07:20,080 --> 00:07:22,000
the verifiable secret sharing or

193
00:07:22,000 --> 00:07:26,080
protocol of bgw or that of feldman

194
00:07:26,080 --> 00:07:27,919
uh those who want to review those

195
00:07:27,919 --> 00:07:30,319
protocols are welcome to follow those

196
00:07:30,319 --> 00:07:34,240
two links that appear now on the screen

197
00:07:34,800 --> 00:07:37,039
so starting point is the protocol for

198
00:07:37,039 --> 00:07:39,840
computing multiplication gates in bgw

199
00:07:39,840 --> 00:07:42,479
just take a step back the bgw protocol

200
00:07:42,479 --> 00:07:45,120
follows the paradigm of secure

201
00:07:45,120 --> 00:07:47,840
computation based on secret sharing in

202
00:07:47,840 --> 00:07:50,560
which the parties evaluate or emulate

203
00:07:50,560 --> 00:07:52,319
the execution

204
00:07:52,319 --> 00:07:54,639
of a circuit that implements the

205
00:07:54,639 --> 00:07:57,440
functions that they wish to compute

206
00:07:57,440 --> 00:08:00,720
while hiding each value the value in

207
00:08:00,720 --> 00:08:03,360
each wire in the circuit

208
00:08:03,360 --> 00:08:05,599
using a secret sharing scheme

209
00:08:05,599 --> 00:08:07,599
the parties emulate the computation of

210
00:08:07,599 --> 00:08:09,759
the protocol gate by gate

211
00:08:09,759 --> 00:08:11,919
while the parties run a secure protocol

212
00:08:11,919 --> 00:08:13,280
for computing

213
00:08:13,280 --> 00:08:15,680
value of an output wire of each one of

214
00:08:15,680 --> 00:08:16,800
the gates

215
00:08:16,800 --> 00:08:19,520
using those shares on the input wires so

216
00:08:19,520 --> 00:08:21,599
now we are looking at

217
00:08:21,599 --> 00:08:23,680
the protocol for

218
00:08:23,680 --> 00:08:26,319
multiplication gate the parties hold

219
00:08:26,319 --> 00:08:29,680
shares on the two input r wires so this

220
00:08:29,680 --> 00:08:32,479
is what we have over here each party pi

221
00:08:32,479 --> 00:08:35,279
holds a alpha i b alpha i for some

222
00:08:35,279 --> 00:08:37,120
degree t polynomial

223
00:08:37,120 --> 00:08:38,799
a x and b x

224
00:08:38,799 --> 00:08:41,679
respect respectively

225
00:08:41,679 --> 00:08:44,399
and the goal is that each party needs to

226
00:08:44,399 --> 00:08:47,760
hold a shell on the output wire

227
00:08:47,760 --> 00:08:50,640
some c alpha i for some degree t

228
00:08:50,640 --> 00:08:53,440
polynomial satisfying that the constant

229
00:08:53,440 --> 00:08:56,560
term is the multiplication of the two

230
00:08:56,560 --> 00:08:59,040
constant terms over here

231
00:08:59,040 --> 00:09:03,040
the btw protocol shows how to do it or

232
00:09:03,040 --> 00:09:05,279
essentially shows how to do it and how

233
00:09:05,279 --> 00:09:07,760
to reduce this multiplication with no

234
00:09:07,760 --> 00:09:11,760
dealer where nobody knows a b and c

235
00:09:11,760 --> 00:09:12,880
to n

236
00:09:12,880 --> 00:09:16,320
executions and building blocks of

237
00:09:16,320 --> 00:09:18,720
execution of the same building block of

238
00:09:18,720 --> 00:09:21,200
multiplication with the dealer

239
00:09:21,200 --> 00:09:24,080
where there is a party that knows a b

240
00:09:24,080 --> 00:09:25,200
and c

241
00:09:25,200 --> 00:09:27,440
so multiplication with a dealer is the

242
00:09:27,440 --> 00:09:31,440
following functionality each party pi

243
00:09:31,440 --> 00:09:34,800
holds some share on some polynomial

244
00:09:34,800 --> 00:09:37,279
where there is a dealer p k

245
00:09:37,279 --> 00:09:40,640
that also knows the two polynomials a k

246
00:09:40,640 --> 00:09:44,160
x and b b k x

247
00:09:44,160 --> 00:09:46,560
and the goal is that

248
00:09:46,560 --> 00:09:50,560
p i will hold a shell c k on alpha i for

249
00:09:50,560 --> 00:09:52,720
some degree t polynomial

250
00:09:52,720 --> 00:09:54,800
in which the constant term is the

251
00:09:54,800 --> 00:09:57,360
multiplication of those two polynomials

252
00:09:57,360 --> 00:09:59,440
and again there is a dealer that knows

253
00:09:59,440 --> 00:10:02,720
now ck of x

254
00:10:03,680 --> 00:10:05,760
if the dealer fails then the party

255
00:10:05,760 --> 00:10:10,399
simply recover the constant term of um

256
00:10:10,399 --> 00:10:12,959
of the two polynomials that will show

257
00:10:12,959 --> 00:10:16,240
now let's remove um i'm removing the

258
00:10:16,240 --> 00:10:20,160
subscript a k for gravity and let's take

259
00:10:20,160 --> 00:10:22,959
a look how bgw implemented

260
00:10:22,959 --> 00:10:26,240
this functionality

261
00:10:26,240 --> 00:10:28,880
so the protocol in that protocol the

262
00:10:28,880 --> 00:10:32,399
dealer holds two polynomials a and b

263
00:10:32,399 --> 00:10:35,040
and the goal is to actually

264
00:10:35,040 --> 00:10:38,000
share a polynomial c satisfying that the

265
00:10:38,000 --> 00:10:40,560
constant term is the multiplication

266
00:10:40,560 --> 00:10:43,200
of those two polynomials of the constant

267
00:10:43,200 --> 00:10:46,920
term of those two polynomials

268
00:10:48,959 --> 00:10:50,959
now what he's going to do is going to

269
00:10:50,959 --> 00:10:53,519
choose such polynomial c of x

270
00:10:53,519 --> 00:10:55,600
and share it using a verifiable signal

271
00:10:55,600 --> 00:10:58,240
shelling so now at this point each other

272
00:10:58,240 --> 00:11:00,880
party which is not a dealer holds one

273
00:11:00,880 --> 00:11:03,760
share on the polynomial a one shell only

274
00:11:03,760 --> 00:11:05,200
polynomial b

275
00:11:05,200 --> 00:11:07,920
and one share on the polynomial c

276
00:11:07,920 --> 00:11:10,079
the dealer wants to prove that this

277
00:11:10,079 --> 00:11:12,480
relationship holds

278
00:11:12,480 --> 00:11:15,120
and to do that it's it's going to define

279
00:11:15,120 --> 00:11:18,959
d additional polynomials d1 to dt

280
00:11:18,959 --> 00:11:20,720
such that this

281
00:11:20,720 --> 00:11:23,519
this equation holds

282
00:11:23,519 --> 00:11:25,440
okay now let's take a look what we have

283
00:11:25,440 --> 00:11:28,480
over here so we have a times b

284
00:11:28,480 --> 00:11:30,399
this is going to bring to give us a

285
00:11:30,399 --> 00:11:33,040
polynomial of degree 2t

286
00:11:33,040 --> 00:11:35,519
and then we are going to have a

287
00:11:35,519 --> 00:11:38,079
dependent t polynomials

288
00:11:38,079 --> 00:11:41,040
where our goal is essentially to reduce

289
00:11:41,040 --> 00:11:42,480
or to remove

290
00:11:42,480 --> 00:11:45,279
all the t leading coefficients of the

291
00:11:45,279 --> 00:11:48,720
polynomial a times b

292
00:11:48,720 --> 00:11:52,079
this requires nvss in total to prove

293
00:11:52,079 --> 00:11:53,120
this

294
00:11:53,120 --> 00:11:55,600
now the way the protocols work is that

295
00:11:55,600 --> 00:11:57,120
each party

296
00:11:57,120 --> 00:12:00,160
gets all the shares so after the dealer

297
00:12:00,160 --> 00:12:02,720
shares those polynomials each party

298
00:12:02,720 --> 00:12:04,079
holds

299
00:12:04,079 --> 00:12:07,279
a alpha i b alpha i and also has d1

300
00:12:07,279 --> 00:12:11,760
alpha i to do t to dt alpha i

301
00:12:11,760 --> 00:12:15,040
and um it can verify

302
00:12:15,040 --> 00:12:17,279
that these relationships are actually

303
00:12:17,279 --> 00:12:20,160
works now if this works for all the

304
00:12:20,160 --> 00:12:23,120
honest parties where we have 2t plus 1

305
00:12:23,120 --> 00:12:24,880
on its bodies

306
00:12:24,880 --> 00:12:27,120
this is going to define a unique

307
00:12:27,120 --> 00:12:29,440
polynomial

308
00:12:29,440 --> 00:12:33,360
and this guarantees that actually c

309
00:12:33,360 --> 00:12:34,959
on 0

310
00:12:34,959 --> 00:12:36,320
actually

311
00:12:36,320 --> 00:12:38,320
is a times zero

312
00:12:38,320 --> 00:12:40,079
b times zero

313
00:12:40,079 --> 00:12:45,359
minus something that uh all of those

314
00:12:45,600 --> 00:12:48,720
uh because we multiply by x

315
00:12:48,720 --> 00:12:49,839
to l

316
00:12:49,839 --> 00:12:53,120
those do not affect the constant term

317
00:12:53,120 --> 00:12:55,200
so this guarantees that actually c on

318
00:12:55,200 --> 00:12:58,240
zero equals a on zero b and zero

319
00:12:58,240 --> 00:13:00,160
now the dealer shares those polynomials

320
00:13:00,160 --> 00:13:02,800
each party verifies that uh this

321
00:13:02,800 --> 00:13:05,440
relationship holds and if not it's going

322
00:13:05,440 --> 00:13:07,519
to broadcast a complaint

323
00:13:07,519 --> 00:13:10,240
and then the parties can reconstruct its

324
00:13:10,240 --> 00:13:13,279
share because all the polynomials out of

325
00:13:13,279 --> 00:13:14,480
degree t

326
00:13:14,480 --> 00:13:17,040
we can reconstruct and check publicly

327
00:13:17,040 --> 00:13:20,560
that this relationship solved

328
00:13:20,560 --> 00:13:21,519
now

329
00:13:21,519 --> 00:13:24,800
this requires linear amount of vss in

330
00:13:24,800 --> 00:13:26,560
the number of parties

331
00:13:26,560 --> 00:13:29,680
and this seems uh even essential because

332
00:13:29,680 --> 00:13:31,440
to remove

333
00:13:31,440 --> 00:13:32,839
one

334
00:13:32,839 --> 00:13:34,399
uh

335
00:13:34,399 --> 00:13:37,200
once we um share a polynomial of degree

336
00:13:37,200 --> 00:13:38,880
t

337
00:13:38,880 --> 00:13:41,360
uh because the adversary controls t

338
00:13:41,360 --> 00:13:43,279
corrupted parties

339
00:13:43,279 --> 00:13:45,920
um this doesn't give us a lot of uh

340
00:13:45,920 --> 00:13:48,000
degree of freedoms we get we also we

341
00:13:48,000 --> 00:13:49,600
only write

342
00:13:49,600 --> 00:13:52,720
one coefficient in that polynomial

343
00:13:52,720 --> 00:13:54,560
in signature and usually we put the

344
00:13:54,560 --> 00:13:56,399
secret as a constant term here we're

345
00:13:56,399 --> 00:13:58,240
going to put the secret

346
00:13:58,240 --> 00:14:00,240
in the leading coefficient and

347
00:14:00,240 --> 00:14:04,079
essentially we only hide one coefficient

348
00:14:04,079 --> 00:14:07,040
now to remove t coefficients it seems

349
00:14:07,040 --> 00:14:08,560
necessary

350
00:14:08,560 --> 00:14:09,519
to

351
00:14:09,519 --> 00:14:10,480
share

352
00:14:10,480 --> 00:14:13,600
t polynomials

353
00:14:13,600 --> 00:14:15,440
what we're going to do in this work we

354
00:14:15,440 --> 00:14:18,320
are going to show how to do this exact

355
00:14:18,320 --> 00:14:20,000
functionality how to implement this

356
00:14:20,000 --> 00:14:23,760
protocol with just one single vss

357
00:14:23,760 --> 00:14:27,440
instead of having linear amount of vss

358
00:14:27,440 --> 00:14:30,880
and the key idea is that maybe we can do

359
00:14:30,880 --> 00:14:34,880
sql sharing of a polynomial of degree 2t

360
00:14:34,880 --> 00:14:38,399
instead of a polynomial of degree t

361
00:14:38,399 --> 00:14:40,399
how can we do that

362
00:14:40,399 --> 00:14:43,360
so before we actually proceed let's just

363
00:14:43,360 --> 00:14:45,360
take one step back

364
00:14:45,360 --> 00:14:47,839
so um

365
00:14:47,839 --> 00:14:51,600
essentially we are going to um

366
00:14:51,600 --> 00:14:53,120
we're going to follow a different

367
00:14:53,120 --> 00:14:56,480
invariant than that of bgw we assume

368
00:14:56,480 --> 00:14:58,880
that each wire is hidden using a

369
00:14:58,880 --> 00:15:01,839
bivariate polynomial of degree t in both

370
00:15:01,839 --> 00:15:03,920
variables and not just the univariate

371
00:15:03,920 --> 00:15:07,279
polynomial as in bgw this makes the

372
00:15:07,279 --> 00:15:09,920
following changes that we see over here

373
00:15:09,920 --> 00:15:13,240
in the functionality

374
00:15:14,320 --> 00:15:17,360
and the goal is uh to get two

375
00:15:17,360 --> 00:15:19,519
univariate polynomial shells on the

376
00:15:19,519 --> 00:15:22,399
output wires like we have over here

377
00:15:22,399 --> 00:15:24,240
we know that this uh

378
00:15:24,240 --> 00:15:26,880
invariant removes another building block

379
00:15:26,880 --> 00:15:30,000
from bgw and without it our current

380
00:15:30,000 --> 00:15:31,759
improvement is not going to actually

381
00:15:31,759 --> 00:15:34,480
reduce the communication complexity so

382
00:15:34,480 --> 00:15:36,720
we need to take also this technique in

383
00:15:36,720 --> 00:15:38,880
order to actually get the improvement

384
00:15:38,880 --> 00:15:41,519
over lbgw

385
00:15:41,519 --> 00:15:43,759
okay so how do we share a polynomial of

386
00:15:43,759 --> 00:15:45,920
degree two t

387
00:15:45,920 --> 00:15:47,759
uh or what happens if we take the

388
00:15:47,759 --> 00:15:49,680
verifiable signal sharing protocol of

389
00:15:49,680 --> 00:15:53,120
bgw and try to use it for sharing a

390
00:15:53,120 --> 00:15:55,839
degree 2t polynomial so again i'm going

391
00:15:55,839 --> 00:15:58,399
to assume you some familiarity with the

392
00:15:58,399 --> 00:16:00,959
protocol for verifiable secret sharing

393
00:16:00,959 --> 00:16:03,680
there is a link over here that you can

394
00:16:03,680 --> 00:16:05,199
you can scan

395
00:16:05,199 --> 00:16:07,120
and see the protocol

396
00:16:07,120 --> 00:16:08,560
in detail

397
00:16:08,560 --> 00:16:12,000
so in our case the dealer is going to

398
00:16:12,000 --> 00:16:14,880
distribute a bivariate polynomial in

399
00:16:14,880 --> 00:16:17,040
degree 2t in x

400
00:16:17,040 --> 00:16:20,240
and degree t in y

401
00:16:20,240 --> 00:16:22,560
in the first one the dealer is going to

402
00:16:22,560 --> 00:16:25,040
send it's going to define the share of

403
00:16:25,040 --> 00:16:27,519
party pi as the evaluation of the

404
00:16:27,519 --> 00:16:29,519
polynomial where we fix

405
00:16:29,519 --> 00:16:31,199
the y

406
00:16:31,199 --> 00:16:32,720
with a wipeout

407
00:16:32,720 --> 00:16:36,160
and also going to define a giy

408
00:16:36,160 --> 00:16:39,680
where we going to fix the expat in in

409
00:16:39,680 --> 00:16:43,040
the polynomial in the valid polynomial

410
00:16:43,040 --> 00:16:45,040
in the first round of the protocol the

411
00:16:45,040 --> 00:16:47,519
dealer sends to each party it's two

412
00:16:47,519 --> 00:16:49,759
univariate shells two univariate

413
00:16:49,759 --> 00:16:52,560
polynomials

414
00:16:52,720 --> 00:16:55,839
note that f is of polynomial is a

415
00:16:55,839 --> 00:16:58,560
univariate polynomial of degree two t

416
00:16:58,560 --> 00:17:00,800
well g is a univariate polynomial of

417
00:17:00,800 --> 00:17:03,360
degree t

418
00:17:03,360 --> 00:17:04,880
then

419
00:17:04,880 --> 00:17:07,599
exactly as in bgw we're going to extend

420
00:17:07,599 --> 00:17:09,919
subshells i'm going to evaluate

421
00:17:09,919 --> 00:17:13,199
impi i'm going to evaluate f i and gi on

422
00:17:13,199 --> 00:17:15,839
the point j i'm going to send that to

423
00:17:15,839 --> 00:17:16,839
party

424
00:17:16,839 --> 00:17:20,000
pj each party checks that whatever it

425
00:17:20,000 --> 00:17:22,799
receives that's the third round or the

426
00:17:22,799 --> 00:17:24,959
end of the second one each party is

427
00:17:24,959 --> 00:17:27,199
going to

428
00:17:27,199 --> 00:17:29,280
see all the all the values that it

429
00:17:29,280 --> 00:17:30,640
received

430
00:17:30,640 --> 00:17:32,080
and then it's going to check that it's

431
00:17:32,080 --> 00:17:34,960
the same as the one that expected as we

432
00:17:34,960 --> 00:17:37,840
said were sent by the dealer

433
00:17:37,840 --> 00:17:39,760
if not it's going to complain

434
00:17:39,760 --> 00:17:42,160
the dealer will have to open

435
00:17:42,160 --> 00:17:43,039
uh

436
00:17:43,039 --> 00:17:44,880
those that have

437
00:17:44,880 --> 00:17:46,880
false complaints

438
00:17:46,880 --> 00:17:48,559
and at the end we're going to have a

439
00:17:48,559 --> 00:17:51,120
complete resolution phase where each

440
00:17:51,120 --> 00:17:52,720
party checks that whatever was

441
00:17:52,720 --> 00:17:55,600
broadcasted fit to the view fit to the

442
00:17:55,600 --> 00:17:57,120
shares that they have

443
00:17:57,120 --> 00:17:59,039
and if so they are going to broadcast

444
00:17:59,039 --> 00:18:02,160
good we're going to accept

445
00:18:02,160 --> 00:18:03,760
the dealer

446
00:18:03,760 --> 00:18:05,520
the shares of the dealer

447
00:18:05,520 --> 00:18:10,320
once we have 2t plus 1 good votes

448
00:18:10,320 --> 00:18:11,840
now to have

449
00:18:11,840 --> 00:18:14,720
recall that we have three t plus one

450
00:18:14,720 --> 00:18:17,919
parties in total so we we want that two

451
00:18:17,919 --> 00:18:21,280
t plus one parties are going to be happy

452
00:18:21,280 --> 00:18:25,360
with their shares and whatever they saw

453
00:18:25,840 --> 00:18:29,280
um so what happened when two t plus one

454
00:18:29,280 --> 00:18:31,280
parties uh

455
00:18:31,280 --> 00:18:33,280
vote voted good

456
00:18:33,280 --> 00:18:35,440
it means that only t plus one honest

457
00:18:35,440 --> 00:18:37,840
parties are actually happy with what

458
00:18:37,840 --> 00:18:40,080
they see because we might have t

459
00:18:40,080 --> 00:18:43,679
corrupted parties that

460
00:18:43,679 --> 00:18:46,320
that vote uh on something which is

461
00:18:46,320 --> 00:18:49,280
incorrect or the dealer is malicious

462
00:18:49,280 --> 00:18:52,160
and t parties just vote good even though

463
00:18:52,160 --> 00:18:54,400
nothing is actually good so what does it

464
00:18:54,400 --> 00:18:56,480
mean that we have only t plus one honest

465
00:18:56,480 --> 00:18:59,760
parties it means that when the dealer

466
00:18:59,760 --> 00:19:01,919
broadcast and make publicly public

467
00:19:01,919 --> 00:19:05,120
reveal a share of some party so it needs

468
00:19:05,120 --> 00:19:07,120
to reveal both the f shell and the

469
00:19:07,120 --> 00:19:08,400
g-share

470
00:19:08,400 --> 00:19:11,280
however the f share is of degree two t

471
00:19:11,280 --> 00:19:13,679
plus two it's of degree two t

472
00:19:13,679 --> 00:19:15,840
so we need two t plus one points to

473
00:19:15,840 --> 00:19:18,640
actually fix that polynomial

474
00:19:18,640 --> 00:19:21,280
however we have only t plus one honest

475
00:19:21,280 --> 00:19:24,799
parties that see that polynomial so this

476
00:19:24,799 --> 00:19:27,280
is uh

477
00:19:27,280 --> 00:19:29,039
so if we have only t plus one on his

478
00:19:29,039 --> 00:19:31,679
parties that broadcast good and say okay

479
00:19:31,679 --> 00:19:33,760
i'm happy with this public reveal

480
00:19:33,760 --> 00:19:36,480
polynomial it doesn't mean that this f

481
00:19:36,480 --> 00:19:39,760
polynomial is actually correct because

482
00:19:39,760 --> 00:19:42,080
it is a polynomial of degree two t and

483
00:19:42,080 --> 00:19:44,480
we just know the t plus one t plus one

484
00:19:44,480 --> 00:19:45,440
points

485
00:19:45,440 --> 00:19:47,280
are actually consistent with something

486
00:19:47,280 --> 00:19:48,400
that uh

487
00:19:48,400 --> 00:19:50,640
the core of the honest part is

488
00:19:50,640 --> 00:19:53,280
the defined by valid polynomial

489
00:19:53,280 --> 00:19:56,799
uh is actually correct so in other words

490
00:19:56,799 --> 00:19:58,720
at the end of the protocol we might have

491
00:19:58,720 --> 00:20:01,200
the case that someone's parties

492
00:20:01,200 --> 00:20:02,159
uh

493
00:20:02,159 --> 00:20:04,559
that someone is partying that was his

494
00:20:04,559 --> 00:20:06,480
share was publicly revealed

495
00:20:06,480 --> 00:20:10,320
doesn't hold the correct f polynomial

496
00:20:10,320 --> 00:20:12,320
because it doesn't really agree with all

497
00:20:12,320 --> 00:20:14,799
the other ones parties or it agrees with

498
00:20:14,799 --> 00:20:17,600
t plus one on his parties but it doesn't

499
00:20:17,600 --> 00:20:21,600
uniquely define the polynomial

500
00:20:21,600 --> 00:20:24,159
so to avoid this problem we simply give

501
00:20:24,159 --> 00:20:27,360
up and we ask the dealer to reveal only

502
00:20:27,360 --> 00:20:29,760
the g's polynomials whenever it is to

503
00:20:29,760 --> 00:20:31,840
publicly reveal a polynomial because the

504
00:20:31,840 --> 00:20:34,720
gs are of degree t

505
00:20:34,720 --> 00:20:36,799
what does it mean it means that at the

506
00:20:36,799 --> 00:20:38,960
end of the protocol of this sharing

507
00:20:38,960 --> 00:20:42,159
phase of of polynomial of degree two t

508
00:20:42,159 --> 00:20:44,640
uh there are going to be parties

509
00:20:44,640 --> 00:20:47,600
homeless parties that don't have an

510
00:20:47,600 --> 00:20:49,679
they don't really have a shell

511
00:20:49,679 --> 00:20:52,000
on the polynomial

512
00:20:52,000 --> 00:20:53,600
we are going uh

513
00:20:53,600 --> 00:20:55,360
in the reconstruction

514
00:20:55,360 --> 00:20:57,520
we are going to ignore those parties and

515
00:20:57,520 --> 00:21:00,320
only those that voted good are going to

516
00:21:00,320 --> 00:21:02,400
contribute to contributes in the

517
00:21:02,400 --> 00:21:05,120
reconstruction

518
00:21:05,120 --> 00:21:07,280
so what do we have so far so if the

519
00:21:07,280 --> 00:21:09,360
dealer is honest

520
00:21:09,360 --> 00:21:11,440
then we know that the party's been going

521
00:21:11,440 --> 00:21:14,000
to extend sub shells everything is going

522
00:21:14,000 --> 00:21:15,440
to be correct

523
00:21:15,440 --> 00:21:17,600
and the dealer will never have

524
00:21:17,600 --> 00:21:19,679
to reveal a polynomial of an honest

525
00:21:19,679 --> 00:21:21,919
party this means that at the end of the

526
00:21:21,919 --> 00:21:23,840
protocol there are going to be 2 t plus

527
00:21:23,840 --> 00:21:26,320
1 on this bodies that have both the f

528
00:21:26,320 --> 00:21:28,840
polynomial and the g

529
00:21:28,840 --> 00:21:32,640
polynomial when the dealer is corrupted

530
00:21:32,640 --> 00:21:35,440
if that part is actually accepted in the

531
00:21:35,440 --> 00:21:38,080
shares it means that we have only t plus

532
00:21:38,080 --> 00:21:40,320
one honest parties that have both f and

533
00:21:40,320 --> 00:21:41,679
g

534
00:21:41,679 --> 00:21:44,000
it means that during the reconstruction

535
00:21:44,000 --> 00:21:46,000
we will need the help of the adversary

536
00:21:46,000 --> 00:21:47,840
in order to reconstruct

537
00:21:47,840 --> 00:21:49,679
let's see the reconstruction

538
00:21:49,679 --> 00:21:51,520
so the reconstruction is going to be as

539
00:21:51,520 --> 00:21:53,200
follows we're going the dealer is going

540
00:21:53,200 --> 00:21:55,760
to broadcast this polynomial this is a

541
00:21:55,760 --> 00:21:59,200
polynomial of degree t and each party

542
00:21:59,200 --> 00:22:01,120
that has an f

543
00:22:01,120 --> 00:22:02,159
share

544
00:22:02,159 --> 00:22:04,400
is going to check the point the

545
00:22:04,400 --> 00:22:06,799
intersection of those two polynomials

546
00:22:06,799 --> 00:22:08,720
and if it's actually okay

547
00:22:08,720 --> 00:22:11,280
and this is the correct value then it's

548
00:22:11,280 --> 00:22:12,400
going to say

549
00:22:12,400 --> 00:22:14,400
good or okay

550
00:22:14,400 --> 00:22:17,120
and if two t plus one parties are going

551
00:22:17,120 --> 00:22:18,559
to say good

552
00:22:18,559 --> 00:22:20,000
then we're going to accept this

553
00:22:20,000 --> 00:22:22,480
polynomial that was broadcasted

554
00:22:22,480 --> 00:22:27,000
and reconstruct the constant term

555
00:22:27,200 --> 00:22:28,400
so

556
00:22:28,400 --> 00:22:31,679
however we have only t plus one honest

557
00:22:31,679 --> 00:22:35,280
parties that have correct f polynomial

558
00:22:35,280 --> 00:22:36,799
this means that in actually to

559
00:22:36,799 --> 00:22:39,360
reconstruct we must have

560
00:22:39,360 --> 00:22:41,919
the help we must need the help in the

561
00:22:41,919 --> 00:22:43,919
case of a corrupted dealer

562
00:22:43,919 --> 00:22:45,919
of the corrupted parties in order to

563
00:22:45,919 --> 00:22:48,000
reconstruct the secret

564
00:22:48,000 --> 00:22:50,640
however we do have binding

565
00:22:50,640 --> 00:22:52,320
what do you mean by that is that the

566
00:22:52,320 --> 00:22:55,760
dealer cannot now

567
00:22:55,760 --> 00:22:58,480
if the parties accepted the shares in in

568
00:22:58,480 --> 00:23:00,400
the sharing phase

569
00:23:00,400 --> 00:23:03,600
the dealer cannot give a polynomial

570
00:23:03,600 --> 00:23:05,520
that is different than the polynomial

571
00:23:05,520 --> 00:23:07,280
that

572
00:23:07,280 --> 00:23:09,600
is defined by the shares of the t plus

573
00:23:09,600 --> 00:23:12,000
one honest parties

574
00:23:12,000 --> 00:23:14,400
so during the reconstruction either we

575
00:23:14,400 --> 00:23:16,720
are going to reconstruct the right con

576
00:23:16,720 --> 00:23:19,120
the correct constant term

577
00:23:19,120 --> 00:23:22,480
or we are going to reconstruct button

578
00:23:22,480 --> 00:23:25,600
namely we know that something failed

579
00:23:25,600 --> 00:23:27,280
this is in other words what with

580
00:23:27,280 --> 00:23:30,159
so-called weak secret sharing

581
00:23:30,159 --> 00:23:31,760
there is binding

582
00:23:31,760 --> 00:23:34,840
but reconstruction is not

583
00:23:34,840 --> 00:23:37,360
guaranteed so our multiplication with

584
00:23:37,360 --> 00:23:39,520
the dealer looks like the following so

585
00:23:39,520 --> 00:23:42,159
the dealer holds polynomials a and b and

586
00:23:42,159 --> 00:23:45,200
the dealer shares a bivariate polynomial

587
00:23:45,200 --> 00:23:47,279
satisfying this relationship so its

588
00:23:47,279 --> 00:23:49,600
constant term is the multiplication of

589
00:23:49,600 --> 00:23:51,679
these two polynomials

590
00:23:51,679 --> 00:23:54,159
each part is going to have a share on a

591
00:23:54,159 --> 00:23:55,279
and b

592
00:23:55,279 --> 00:23:56,080
and

593
00:23:56,080 --> 00:23:59,679
a share on the bivariate polynomial c

594
00:23:59,679 --> 00:24:02,240
the dealer is going to define a single

595
00:24:02,240 --> 00:24:06,000
one polynomial d x y which has degree

596
00:24:06,000 --> 00:24:07,440
two t and x

597
00:24:07,440 --> 00:24:09,679
and degree t in y

598
00:24:09,679 --> 00:24:11,679
such that the following relationship

599
00:24:11,679 --> 00:24:16,000
holds so this is d x zero equals a x

600
00:24:16,000 --> 00:24:19,600
times p x minus c x 0.

601
00:24:19,600 --> 00:24:21,919
note that on 0

602
00:24:21,919 --> 00:24:23,679
if indeed a

603
00:24:23,679 --> 00:24:26,080
c 0 0 equals

604
00:24:26,080 --> 00:24:28,799
a 0 times b 0

605
00:24:28,799 --> 00:24:31,279
then the constant term of d

606
00:24:31,279 --> 00:24:33,919
is supposed to be zero

607
00:24:33,919 --> 00:24:36,400
each part is going to verify that this

608
00:24:36,400 --> 00:24:38,640
relationship actually holds so

609
00:24:38,640 --> 00:24:41,039
we look at this polynomial and this

610
00:24:41,039 --> 00:24:43,200
polynomial and we're trying to find is

611
00:24:43,200 --> 00:24:44,960
those two polynomials are actually the

612
00:24:44,960 --> 00:24:47,279
same if they are not the same

613
00:24:47,279 --> 00:24:48,960
broadcasting complaint we are going to

614
00:24:48,960 --> 00:24:52,240
reconstruct see that

615
00:24:52,720 --> 00:24:54,559
if something

616
00:24:54,559 --> 00:24:56,960
we can publicly reveal the shares of a

617
00:24:56,960 --> 00:24:58,880
party that

618
00:24:58,880 --> 00:25:00,640
that broadcasted the complaint and we

619
00:25:00,640 --> 00:25:02,480
can publicly reveal

620
00:25:02,480 --> 00:25:05,760
if the complaint is true or not

621
00:25:05,760 --> 00:25:07,840
and then after we did all of that and we

622
00:25:07,840 --> 00:25:09,840
actually see that those two polynomials

623
00:25:09,840 --> 00:25:11,360
are the same

624
00:25:11,360 --> 00:25:12,720
the dealer

625
00:25:12,720 --> 00:25:14,480
is going to publicly reveal this

626
00:25:14,480 --> 00:25:17,120
polynomial t 0 and y

627
00:25:17,120 --> 00:25:20,320
and all the parties can publicly verify

628
00:25:20,320 --> 00:25:22,720
that the constant term is 0.

629
00:25:22,720 --> 00:25:24,960
now recall this is just a weak secret

630
00:25:24,960 --> 00:25:26,240
chain

631
00:25:26,240 --> 00:25:28,559
so it might be that this reconstruction

632
00:25:28,559 --> 00:25:30,799
is not going to work

633
00:25:30,799 --> 00:25:32,799
but if it doesn't work we don't care we

634
00:25:32,799 --> 00:25:34,400
don't this means that the dealer is

635
00:25:34,400 --> 00:25:35,679
corrupted

636
00:25:35,679 --> 00:25:37,840
and we can reconstruct

637
00:25:37,840 --> 00:25:39,200
a and b

638
00:25:39,200 --> 00:25:41,279
and learn the constant term so

639
00:25:41,279 --> 00:25:42,480
essentially

640
00:25:42,480 --> 00:25:44,559
we just need to share here

641
00:25:44,559 --> 00:25:45,440
one

642
00:25:45,440 --> 00:25:47,520
secret sharing we need to do only one

643
00:25:47,520 --> 00:25:48,720
vss

644
00:25:48,720 --> 00:25:51,440
of a degree to t polynomial but instead

645
00:25:51,440 --> 00:25:53,440
of having verifiable secret chain just

646
00:25:53,440 --> 00:25:57,840
have weak secret sharing

647
00:26:00,159 --> 00:26:03,039
let's just uh see it in a picture so the

648
00:26:03,039 --> 00:26:05,600
dealer is going to define a univariate

649
00:26:05,600 --> 00:26:08,000
polynomial this one is going to satisfy

650
00:26:08,000 --> 00:26:12,640
dx of 0 equals ax times bx minus cx0

651
00:26:12,640 --> 00:26:14,320
okay so it's going to show the

652
00:26:14,320 --> 00:26:16,799
polynomial c that its constant term is

653
00:26:16,799 --> 00:26:19,840
supposed to be a times b

654
00:26:19,840 --> 00:26:21,200
and then it's going to choose a

655
00:26:21,200 --> 00:26:23,840
polynomial d that satisfies this relay

656
00:26:23,840 --> 00:26:24,960
this

657
00:26:24,960 --> 00:26:27,520
equation

658
00:26:28,559 --> 00:26:31,039
so it's going to choose just

659
00:26:31,039 --> 00:26:34,320
this univariate polynomial in degree 20

660
00:26:34,320 --> 00:26:37,200
and build a bivariate polynomial on top

661
00:26:37,200 --> 00:26:38,400
of it

662
00:26:38,400 --> 00:26:39,760
it's going to do

663
00:26:39,760 --> 00:26:42,240
a secret sharing of that

664
00:26:42,240 --> 00:26:44,640
on weak secret sharing of that degree

665
00:26:44,640 --> 00:26:46,720
two t polynomial

666
00:26:46,720 --> 00:26:48,640
and during the reconstructions the

667
00:26:48,640 --> 00:26:50,880
parties are going to reveal the deal is

668
00:26:50,880 --> 00:26:53,279
going to reveal this polynomial

669
00:26:53,279 --> 00:26:55,600
but this the polynomial reveals nothing

670
00:26:55,600 --> 00:26:57,200
because

671
00:26:57,200 --> 00:26:58,640
the dealer

672
00:26:58,640 --> 00:27:00,720
the corrupted part is already this is a

673
00:27:00,720 --> 00:27:03,120
polynomial of degree t

674
00:27:03,120 --> 00:27:05,679
the co-opted part is already hold t

675
00:27:05,679 --> 00:27:07,919
shares on this polynomial

676
00:27:07,919 --> 00:27:10,080
and they already know supposed to know

677
00:27:10,080 --> 00:27:13,279
that d of zero zero is equal zero i mean

678
00:27:13,279 --> 00:27:14,640
otherwise

679
00:27:14,640 --> 00:27:18,159
we have a problem and we need to reject

680
00:27:18,159 --> 00:27:21,840
the sharing of the dealer anyway

681
00:27:21,919 --> 00:27:24,080
what about the bonus so

682
00:27:24,080 --> 00:27:26,640
so far we looked at how to do one single

683
00:27:26,640 --> 00:27:28,000
multiplication

684
00:27:28,000 --> 00:27:30,240
we can also look at more complicated

685
00:27:30,240 --> 00:27:31,679
gadgets

686
00:27:31,679 --> 00:27:33,760
in fact any sub-circuit with

687
00:27:33,760 --> 00:27:37,440
multiplication depth 1 or any

688
00:27:37,440 --> 00:27:40,080
layer in our entire circuit

689
00:27:40,080 --> 00:27:42,559
each party can compute this

690
00:27:42,559 --> 00:27:45,760
sub-circuit on all the shares

691
00:27:45,760 --> 00:27:49,360
of the inputs that it has and this and

692
00:27:49,360 --> 00:27:52,320
then prove using one single vss

693
00:27:52,320 --> 00:27:55,039
per output wire that this was actually

694
00:27:55,039 --> 00:27:57,600
computed correctly

695
00:27:57,600 --> 00:28:00,320
so for conclusion we show improvement of

696
00:28:00,320 --> 00:28:01,919
a classical protocol for secure

697
00:28:01,919 --> 00:28:04,320
computation which also significantly

698
00:28:04,320 --> 00:28:06,399
simplifies the protocol

699
00:28:06,399 --> 00:28:08,399
the pro protocol also beats the

700
00:28:08,399 --> 00:28:10,320
state-of-the-art protocols for some

701
00:28:10,320 --> 00:28:12,799
applications as we said for shallow

702
00:28:12,799 --> 00:28:14,399
white circuits

703
00:28:14,399 --> 00:28:16,399
and for some applications our protocol

704
00:28:16,399 --> 00:28:18,320
also achieves sub-linear

705
00:28:18,320 --> 00:28:20,640
communication complexity this is the

706
00:28:20,640 --> 00:28:22,640
first time that from the best of our

707
00:28:22,640 --> 00:28:25,039
knowledge this is the first time that

708
00:28:25,039 --> 00:28:27,120
happens in the perfect setting

709
00:28:27,120 --> 00:28:31,479
so thank you so much for listening

