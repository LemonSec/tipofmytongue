1
00:00:00,320 --> 00:00:02,560
i'm chipping leo from samus institute

2
00:00:02,560 --> 00:00:03,840
today i will talk about the work

3
00:00:03,840 --> 00:00:06,160
unifying principling via concentration

4
00:00:06,160 --> 00:00:08,800
bonds this is a joint work with cialgo

5
00:00:08,800 --> 00:00:12,080
chainli and japan jump

6
00:00:14,400 --> 00:00:16,079
let's start by looking at a famous

7
00:00:16,079 --> 00:00:18,000
example of practical hash function chart

8
00:00:18,000 --> 00:00:19,920
three the key building block is a

9
00:00:19,920 --> 00:00:21,920
function in the picture

10
00:00:21,920 --> 00:00:23,680
the function seems very random and

11
00:00:23,680 --> 00:00:25,359
achieves pretty good performance in

12
00:00:25,359 --> 00:00:27,760
practice however it is very hard to

13
00:00:27,760 --> 00:00:29,760
analyze even for the most fundamental

14
00:00:29,760 --> 00:00:32,000
properties like collision resistance and

15
00:00:32,000 --> 00:00:34,559
well awareness

16
00:00:34,559 --> 00:00:36,559
to deal with the difficulty in analyzing

17
00:00:36,559 --> 00:00:39,040
security belair and roger will observe

18
00:00:39,040 --> 00:00:41,760
that the random oracle model captures

19
00:00:41,760 --> 00:00:44,320
the most railroad attacks many of the

20
00:00:44,320 --> 00:00:46,960
most efficient schemes including those

21
00:00:46,960 --> 00:00:49,039
that are currently being standalized

22
00:00:49,039 --> 00:00:51,680
only have random oracle proofs

23
00:00:51,680 --> 00:00:53,680
random oracle model assumes the best way

24
00:00:53,680 --> 00:00:55,920
you can use an ideal flash function is

25
00:00:55,920 --> 00:00:57,840
by looking at its input and output

26
00:00:57,840 --> 00:01:00,320
behaviors nothing about its code and

27
00:01:00,320 --> 00:01:02,960
structure and the input output behaviors

28
00:01:02,960 --> 00:01:04,879
are kind of random

29
00:01:04,879 --> 00:01:06,799
random oracle model has many important

30
00:01:06,799 --> 00:01:09,040
cryptographic properties including

31
00:01:09,040 --> 00:01:13,159
loneliness and collision resistance

32
00:01:14,400 --> 00:01:16,799
security bonds in idealized models

33
00:01:16,799 --> 00:01:18,479
provide essential and heuristic

34
00:01:18,479 --> 00:01:20,720
justification and guidelines for their

35
00:01:20,720 --> 00:01:23,439
security in the standard model

36
00:01:23,439 --> 00:01:25,040
however

37
00:01:25,040 --> 00:01:27,119
traditional idealized models fail to

38
00:01:27,119 --> 00:01:29,280
capture pre-processing attacks the

39
00:01:29,280 --> 00:01:31,280
obtained bonds in idealized models are

40
00:01:31,280 --> 00:01:33,840
inaccurate are not applicable at all

41
00:01:33,840 --> 00:01:36,079
once pre-processing is allowed one

42
00:01:36,079 --> 00:01:38,400
famous example is pre-image finding when

43
00:01:38,400 --> 00:01:40,560
no pre-processing is allowed it is easy

44
00:01:40,560 --> 00:01:43,520
to see that it requires roughly um zeta

45
00:01:43,520 --> 00:01:46,720
n queries to invert the image

46
00:01:46,720 --> 00:01:48,880
but when preprocessing is allowed the

47
00:01:48,880 --> 00:01:51,520
queries go down to end to the two thirds

48
00:01:51,520 --> 00:01:53,520
let's look at the formal definition of

49
00:01:53,520 --> 00:01:57,920
idealized models with preprocessing

50
00:01:59,040 --> 00:02:01,360
for this talk let us focus on a random

51
00:02:01,360 --> 00:02:03,520
oracle model

52
00:02:03,520 --> 00:02:05,119
when adversary in the random oracle

53
00:02:05,119 --> 00:02:07,439
model is allowed to do pre-processing we

54
00:02:07,439 --> 00:02:09,840
call such model aux input random oracle

55
00:02:09,840 --> 00:02:12,560
model or ai rom

56
00:02:12,560 --> 00:02:14,400
there are two phases in the model the

57
00:02:14,400 --> 00:02:16,640
first one is called offline phase an

58
00:02:16,640 --> 00:02:18,800
unbounded adversary can arbitrarily

59
00:02:18,800 --> 00:02:21,040
interact with a random oracle making

60
00:02:21,040 --> 00:02:23,120
unbounded queries

61
00:02:23,120 --> 00:02:25,680
but at the end of the day it produces a

62
00:02:25,680 --> 00:02:29,360
piece of advice of lens s

63
00:02:29,360 --> 00:02:31,519
then in the online phase another

64
00:02:31,519 --> 00:02:35,200
algorithm tries to win a security game

65
00:02:35,200 --> 00:02:38,080
it gets a device from the offline phase

66
00:02:38,080 --> 00:02:40,000
and the challenge

67
00:02:40,000 --> 00:02:42,959
then it makes atmos t queries and the

68
00:02:42,959 --> 00:02:46,800
goal is to output a valid answer

69
00:02:46,800 --> 00:02:48,800
the reason to think about this offline

70
00:02:48,800 --> 00:02:51,200
procedure is because it captures the

71
00:02:51,200 --> 00:02:54,160
more realistic attacks or in other words

72
00:02:54,160 --> 00:02:55,920
non-uniform attacks

73
00:02:55,920 --> 00:02:58,239
when where you can think of the device

74
00:02:58,239 --> 00:03:01,760
is generated in a non-uniform way

75
00:03:01,760 --> 00:03:04,080
another reason is that usually it is

76
00:03:04,080 --> 00:03:06,080
crucial to answer online queries

77
00:03:06,080 --> 00:03:08,640
efficiently for example a hacker needs

78
00:03:08,640 --> 00:03:11,200
to respond to a server in a short period

79
00:03:11,200 --> 00:03:12,640
of time

80
00:03:12,640 --> 00:03:14,560
the offline phase is allowed to take a

81
00:03:14,560 --> 00:03:17,360
while as the hash function is public and

82
00:03:17,360 --> 00:03:18,959
everyone could spend a lot of time

83
00:03:18,959 --> 00:03:22,239
analyzing that function

84
00:03:22,560 --> 00:03:25,040
we then define security in the ai rom

85
00:03:25,040 --> 00:03:26,959
which is simply the security against

86
00:03:26,959 --> 00:03:30,560
aspects of a device and t queries

87
00:03:30,560 --> 00:03:32,319
although this model captures the more

88
00:03:32,319 --> 00:03:34,560
realistic attacks it is usually more

89
00:03:34,560 --> 00:03:37,040
difficult to work with especially to

90
00:03:37,040 --> 00:03:40,560
prove its st security

91
00:03:42,879 --> 00:03:44,640
there are a couple of techniques for

92
00:03:44,640 --> 00:03:47,120
analyzing security in the ai rom

93
00:03:47,120 --> 00:03:49,519
as you may tell from the title in this

94
00:03:49,519 --> 00:03:52,080
work we will focus on pre-sampling it

95
00:03:52,080 --> 00:03:54,640
gives simple and intuitive analysis

96
00:03:54,640 --> 00:03:58,159
comparing to other techniques

97
00:03:59,360 --> 00:04:01,200
the intuition behind the pre-sampling

98
00:04:01,200 --> 00:04:04,560
technique is as follows

99
00:04:04,879 --> 00:04:06,879
although the device can be an arbitrary

100
00:04:06,879 --> 00:04:08,879
function of the random oracle for

101
00:04:08,879 --> 00:04:12,000
example it may be an xor of all outputs

102
00:04:12,000 --> 00:04:14,000
for now let's assume it is well

103
00:04:14,000 --> 00:04:16,720
structured in other words it only stores

104
00:04:16,720 --> 00:04:19,040
as input and output pairs of the random

105
00:04:19,040 --> 00:04:20,399
oracle

106
00:04:20,399 --> 00:04:22,960
therefore for an online adversary it

107
00:04:22,960 --> 00:04:24,960
only knows these fixed coordinates but

108
00:04:24,960 --> 00:04:27,520
nothing else

109
00:04:27,520 --> 00:04:30,080
thus the security is easy to analyze as

110
00:04:30,080 --> 00:04:31,759
long as the challenge avoids these

111
00:04:31,759 --> 00:04:34,479
coordinates

112
00:04:34,560 --> 00:04:36,639
and informally pre-sampling techniques

113
00:04:36,639 --> 00:04:39,199
says that advantage of any complicated

114
00:04:39,199 --> 00:04:42,560
advice is at most advantage of some

115
00:04:42,560 --> 00:04:45,280
longer and well-structured advice

116
00:04:45,280 --> 00:04:47,919
and let's look at the statement more

117
00:04:47,919 --> 00:04:50,479
formally

118
00:04:50,639 --> 00:04:53,040
we first define big fixing model an

119
00:04:53,040 --> 00:04:54,720
oracle is arbitrarily fixed on

120
00:04:54,720 --> 00:04:56,800
atmospheric coordinates which is

121
00:04:56,800 --> 00:04:58,720
children by the attacker in the offline

122
00:04:58,720 --> 00:04:59,759
phase

123
00:04:59,759 --> 00:05:01,600
and the remaining coordinates are chosen

124
00:05:01,600 --> 00:05:03,759
at random and independently of the fixed

125
00:05:03,759 --> 00:05:05,199
coordinates

126
00:05:05,199 --> 00:05:07,759
this is also easy to define security in

127
00:05:07,759 --> 00:05:10,400
the bit fixing model

128
00:05:10,400 --> 00:05:12,560
in other words

129
00:05:12,560 --> 00:05:15,120
an oracle is sampled as follows first

130
00:05:15,120 --> 00:05:17,039
the output are arbitrarily fixed on p

131
00:05:17,039 --> 00:05:19,440
coordinates by the attacker

132
00:05:19,440 --> 00:05:21,840
and then the remaining coordinates are

133
00:05:21,840 --> 00:05:25,479
sampled by the challenger

134
00:05:27,360 --> 00:05:29,759
the pre-sampling theorem says that

135
00:05:29,759 --> 00:05:32,240
let epsilon prime be the maximum success

136
00:05:32,240 --> 00:05:34,720
probability of breaking an application

137
00:05:34,720 --> 00:05:36,080
in the ai rom

138
00:05:36,080 --> 00:05:38,160
and it will be at most epsilon prime

139
00:05:38,160 --> 00:05:39,919
plus st over p

140
00:05:39,919 --> 00:05:42,240
well this epsilon prime is the maximum

141
00:05:42,240 --> 00:05:44,800
success probability in the corresponding

142
00:05:44,800 --> 00:05:49,600
p bit fixing uh random oracle model

143
00:05:49,840 --> 00:05:53,360
and when p is roughly s times t then

144
00:05:53,360 --> 00:05:55,360
epsilon is at most two times epsilon

145
00:05:55,360 --> 00:05:57,440
prime

146
00:05:57,440 --> 00:05:59,440
note that the first bond is additive and

147
00:05:59,440 --> 00:06:00,840
therefore works better with

148
00:06:00,840 --> 00:06:03,440
indistinguishability game

149
00:06:03,440 --> 00:06:05,520
the second bond is multiplicative which

150
00:06:05,520 --> 00:06:09,359
works better with unpredictable games

151
00:06:10,000 --> 00:06:11,680
here we show an example that using

152
00:06:11,680 --> 00:06:13,759
pre-sampling theorem to argue security

153
00:06:13,759 --> 00:06:16,720
in the ai rom we consider a pre-image

154
00:06:16,720 --> 00:06:19,280
finding to prove the security epsilon in

155
00:06:19,280 --> 00:06:21,520
the ai rom we only need to care about

156
00:06:21,520 --> 00:06:25,759
its security in the p bit fixing row

157
00:06:25,759 --> 00:06:28,160
if the challenge y which is the image to

158
00:06:28,160 --> 00:06:29,440
be inverted

159
00:06:29,440 --> 00:06:32,319
is in these fixed coordinates then the

160
00:06:32,319 --> 00:06:34,639
problem is easy to solve

161
00:06:34,639 --> 00:06:36,800
because that only happens

162
00:06:36,800 --> 00:06:38,319
because there are at most prefix

163
00:06:38,319 --> 00:06:40,880
coordinates this would only happen with

164
00:06:40,880 --> 00:06:44,800
probability at most p over n

165
00:06:46,319 --> 00:06:48,880
and otherwise these prefix coordinates

166
00:06:48,880 --> 00:06:51,199
do not help invert per image y

167
00:06:51,199 --> 00:06:53,919
and by making at most t queries the

168
00:06:53,919 --> 00:06:58,080
advantage will be at most t over n

169
00:06:58,800 --> 00:07:01,599
and therefore the security in the p bit

170
00:07:01,599 --> 00:07:06,400
fixing rom is at most p plus t over n

171
00:07:07,360 --> 00:07:09,120
with the multiplicative free sampling

172
00:07:09,120 --> 00:07:12,400
theorem by setting p equals to s times t

173
00:07:12,400 --> 00:07:15,440
we have epsilon is roughly st over n

174
00:07:15,440 --> 00:07:17,280
this is the best known lower bound for

175
00:07:17,280 --> 00:07:21,119
pre-image finding in ai raw

176
00:07:23,360 --> 00:07:25,199
and now let's switch to the quantum

177
00:07:25,199 --> 00:07:27,599
world

178
00:07:29,199 --> 00:07:31,360
in the quantum world random oracles are

179
00:07:31,360 --> 00:07:33,680
the same which is a random function draw

180
00:07:33,680 --> 00:07:36,240
at the very beginning of the game the

181
00:07:36,240 --> 00:07:38,240
only difference is that the interaction

182
00:07:38,240 --> 00:07:41,280
between algorithms and random oracles

183
00:07:41,280 --> 00:07:42,800
since the quantum algorithm can

184
00:07:42,800 --> 00:07:45,440
implement a practical hash function for

185
00:07:45,440 --> 00:07:46,720
example

186
00:07:46,720 --> 00:07:49,680
charge 3 on its own quantum device

187
00:07:49,680 --> 00:07:52,000
it is very natural to assume it can make

188
00:07:52,000 --> 00:07:53,759
superposition queries to the random

189
00:07:53,759 --> 00:07:56,759
oracle

190
00:08:00,400 --> 00:08:02,720
it is also natural to define aux input

191
00:08:02,720 --> 00:08:04,960
quantum random oracle model

192
00:08:04,960 --> 00:08:06,960
well both the offline and online

193
00:08:06,960 --> 00:08:10,000
algorithms can be quantum and a device

194
00:08:10,000 --> 00:08:13,840
can be either classical or quantum

195
00:08:14,160 --> 00:08:16,000
in this work we're particularly

196
00:08:16,000 --> 00:08:18,160
interested in the case where the advice

197
00:08:18,160 --> 00:08:20,720
is classical and the algorithms is

198
00:08:20,720 --> 00:08:23,720
quantum

199
00:08:26,319 --> 00:08:28,080
as we have seen the simplicity and

200
00:08:28,080 --> 00:08:30,080
tightness of pre-sampling techniques in

201
00:08:30,080 --> 00:08:32,320
a classical setting we ask the following

202
00:08:32,320 --> 00:08:33,279
question

203
00:08:33,279 --> 00:08:35,279
can we leverage pre-sampling techniques

204
00:08:35,279 --> 00:08:38,240
to the quantum setting

205
00:08:39,760 --> 00:08:41,760
in this work we answer the question in

206
00:08:41,760 --> 00:08:44,959
three different aspects

207
00:08:45,040 --> 00:08:47,440
first we realize that direct leveraging

208
00:08:47,440 --> 00:08:49,760
is difficult we show that if a direct

209
00:08:49,760 --> 00:08:52,399
leveraging would work then it applies

210
00:08:52,399 --> 00:08:54,720
implies the famous aerosol and varnish

211
00:08:54,720 --> 00:08:56,240
conjecture is true

212
00:08:56,240 --> 00:08:58,640
the conjecture asserts that any quantum

213
00:08:58,640 --> 00:09:01,440
algorithm or unstructured inputs can be

214
00:09:01,440 --> 00:09:03,920
approximated on most inputs by an

215
00:09:03,920 --> 00:09:06,080
efficient classical algorithm

216
00:09:06,080 --> 00:09:10,000
this open problem dating back to 1999 or

217
00:09:10,000 --> 00:09:12,160
earlier was included twice ever since

218
00:09:12,160 --> 00:09:14,160
list of 10 semi-grand challenges for

219
00:09:14,160 --> 00:09:16,560
quantum computing theory

220
00:09:16,560 --> 00:09:18,560
the conjecture is still quite open and

221
00:09:18,560 --> 00:09:20,880
the best known bond is exponentially far

222
00:09:20,880 --> 00:09:23,839
from conjecture

223
00:09:24,560 --> 00:09:26,959
fixed with this barrier we revisit the

224
00:09:26,959 --> 00:09:28,800
pre-sampling techniques in the classical

225
00:09:28,800 --> 00:09:29,760
setting

226
00:09:29,760 --> 00:09:31,680
we find there is a much simpler proof

227
00:09:31,680 --> 00:09:34,800
for the previous pre-sampling theorem

228
00:09:34,800 --> 00:09:37,440
we redefine bit fixing random oracle

229
00:09:37,440 --> 00:09:40,000
model and work out a simpler and unified

230
00:09:40,000 --> 00:09:41,279
proof

231
00:09:41,279 --> 00:09:44,880
with only standard concentration bonds

232
00:09:44,880 --> 00:09:46,640
the proof gives tight theorems of

233
00:09:46,640 --> 00:09:49,360
previous works for both ai random oracle

234
00:09:49,360 --> 00:09:53,680
model and a random permutation model

235
00:09:55,200 --> 00:09:57,360
and finally with the new definition of

236
00:09:57,360 --> 00:09:59,519
bit fixing model we adapt it to the

237
00:09:59,519 --> 00:10:02,160
quantum bit fixing model we show that

238
00:10:02,160 --> 00:10:04,240
with the new definition we can prove a

239
00:10:04,240 --> 00:10:05,920
quantum version of the pre-sampling

240
00:10:05,920 --> 00:10:07,120
theorem

241
00:10:07,120 --> 00:10:09,600
and furthermore it is optimum in the

242
00:10:09,600 --> 00:10:11,760
sense that it matches the optimum

243
00:10:11,760 --> 00:10:14,640
classical bond

244
00:10:15,360 --> 00:10:17,600
and finally we show the simplicity and

245
00:10:17,600 --> 00:10:19,920
generality of our theorem

246
00:10:19,920 --> 00:10:22,240
we reproved previous results on now

247
00:10:22,240 --> 00:10:24,399
uniform security and gave the first

248
00:10:24,399 --> 00:10:26,800
non-trivial post-quantum non-uniform

249
00:10:26,800 --> 00:10:28,880
security of merkel dam got hash

250
00:10:28,880 --> 00:10:31,880
functions

251
00:10:35,120 --> 00:10:39,040
next we overview these results

252
00:10:40,079 --> 00:10:42,079
let us record the classical definition

253
00:10:42,079 --> 00:10:45,360
of bit fixing random oracle model well

254
00:10:45,360 --> 00:10:47,440
an oracle is fixed on atmos p

255
00:10:47,440 --> 00:10:49,519
coordinates and then the remaining

256
00:10:49,519 --> 00:10:53,440
coordinates are chosen at random

257
00:10:55,279 --> 00:10:57,279
it is natural to adapt the definition

258
00:10:57,279 --> 00:10:59,200
and propose the bit fixing quantum

259
00:10:59,200 --> 00:11:02,320
random oracle model well p coordinates

260
00:11:02,320 --> 00:11:05,120
are fixed classically then the game is

261
00:11:05,120 --> 00:11:06,640
played with the quantum online

262
00:11:06,640 --> 00:11:10,560
algorithms and the oracle

263
00:11:11,200 --> 00:11:13,839
with this proposed definition we want to

264
00:11:13,839 --> 00:11:15,760
prove the following theorem which we

265
00:11:15,760 --> 00:11:17,440
call our direct leveraging of the

266
00:11:17,440 --> 00:11:20,160
classical pre-sampling theorem

267
00:11:20,160 --> 00:11:22,160
the theorem says the advantage in the

268
00:11:22,160 --> 00:11:24,959
acq rom is bounded by the advantage in

269
00:11:24,959 --> 00:11:28,160
the pbfq rom plus an additive term which

270
00:11:28,160 --> 00:11:30,560
is st over p

271
00:11:30,560 --> 00:11:32,720
if the theorem could be proved

272
00:11:32,720 --> 00:11:34,880
we would have an intuitive and easy way

273
00:11:34,880 --> 00:11:36,800
to analyze post quantum non-uniform

274
00:11:36,800 --> 00:11:39,680
security in the random oracle model just

275
00:11:39,680 --> 00:11:41,600
like what we did for the classical

276
00:11:41,600 --> 00:11:43,839
setting

277
00:11:45,120 --> 00:11:48,240
however as our first result point out we

278
00:11:48,240 --> 00:11:50,320
showed that such a theorem would imply

279
00:11:50,320 --> 00:11:51,839
the famous errors

280
00:11:51,839 --> 00:11:54,160
and binaries conjecture thus we believe

281
00:11:54,160 --> 00:11:58,240
such a direct level region has a barrier

282
00:11:58,880 --> 00:12:01,279
faced with this barrier we revisit the

283
00:12:01,279 --> 00:12:04,079
definition of pbf rom and pre-sampling

284
00:12:04,079 --> 00:12:05,839
theorem

285
00:12:05,839 --> 00:12:07,440
we show the following definition is

286
00:12:07,440 --> 00:12:10,000
equivalent

287
00:12:10,000 --> 00:12:12,079
well an oracle is sampled through the

288
00:12:12,079 --> 00:12:15,360
following rejection sampling procedure

289
00:12:15,360 --> 00:12:16,320
let

290
00:12:16,320 --> 00:12:19,519
f be a p query classical algorithm

291
00:12:19,519 --> 00:12:21,279
then the challenger keeps sampling a

292
00:12:21,279 --> 00:12:23,839
uniformly random hash function h and

293
00:12:23,839 --> 00:12:27,839
tell the function f on h outputs one

294
00:12:27,839 --> 00:12:28,720
then the

295
00:12:28,720 --> 00:12:31,279
game is played with an online adversary

296
00:12:31,279 --> 00:12:35,560
and this hash function h

297
00:12:38,720 --> 00:12:40,800
with this definition we can easily

298
00:12:40,800 --> 00:12:42,880
generalize to other idealized models

299
00:12:42,880 --> 00:12:45,200
like random permutation model

300
00:12:45,200 --> 00:12:47,680
it is simply a rejection sampling of a

301
00:12:47,680 --> 00:12:50,399
random permutation conditioned on some p

302
00:12:50,399 --> 00:12:53,839
query function output 1.

303
00:12:56,079 --> 00:12:58,240
with this definition we give a unified

304
00:12:58,240 --> 00:13:00,639
and simpler proof for both pre-sampling

305
00:13:00,639 --> 00:13:02,560
of random oracles and random

306
00:13:02,560 --> 00:13:04,560
permutations using only standard

307
00:13:04,560 --> 00:13:07,200
concentration bonds this is the second

308
00:13:07,200 --> 00:13:10,320
result of our work

309
00:13:13,600 --> 00:13:15,839
now let us look at the road map for the

310
00:13:15,839 --> 00:13:18,079
proofs of pre-sampling theorem

311
00:13:18,079 --> 00:13:20,639
in a previous work the first define of

312
00:13:20,639 --> 00:13:22,399
if they first showed the security in the

313
00:13:22,399 --> 00:13:24,959
am model can be bonded by the security

314
00:13:24,959 --> 00:13:26,959
in the dense oracle model

315
00:13:26,959 --> 00:13:28,880
then they argue this oracle model are

316
00:13:28,880 --> 00:13:32,399
very close to bit fixing model

317
00:13:32,399 --> 00:13:34,560
in this work we show that by proposing

318
00:13:34,560 --> 00:13:37,360
an equivalent definition we can prove it

319
00:13:37,360 --> 00:13:39,760
directly and only rely on standard

320
00:13:39,760 --> 00:13:42,079
concentration bonds without decomposing

321
00:13:42,079 --> 00:13:43,920
the distribution and working in the

322
00:13:43,920 --> 00:13:47,639
dense oracle model

323
00:13:51,519 --> 00:13:53,600
we can even generalize to the quantum

324
00:13:53,600 --> 00:13:55,680
setting the quantum bit fixing random

325
00:13:55,680 --> 00:13:58,160
oracle model is defined as a rejection

326
00:13:58,160 --> 00:14:00,160
sampling of a random function

327
00:14:00,160 --> 00:14:02,160
conditioned on some p query quantum

328
00:14:02,160 --> 00:14:05,600
algorithm outputs 1.

329
00:14:06,160 --> 00:14:08,160
we can think about it in the classical

330
00:14:08,160 --> 00:14:10,720
bit fixing model both f and online

331
00:14:10,720 --> 00:14:12,880
adversaries are classical

332
00:14:12,880 --> 00:14:15,920
in the attempt quantum bit fixing model

333
00:14:15,920 --> 00:14:18,399
f is still classical and only

334
00:14:18,399 --> 00:14:21,760
adversaries are quantum and in our

335
00:14:21,760 --> 00:14:24,079
real bit fixing quantum random oracle

336
00:14:24,079 --> 00:14:26,639
model both f and online adversaries are

337
00:14:26,639 --> 00:14:29,639
quantum

338
00:14:30,320 --> 00:14:32,720
with this definition we show our quantum

339
00:14:32,720 --> 00:14:34,800
pre-sampling theorem which simply

340
00:14:34,800 --> 00:14:38,959
follows from our classical proof

341
00:14:39,120 --> 00:14:41,519
the bond is optimum in the sense that it

342
00:14:41,519 --> 00:14:44,480
matches the optimum classical bond and

343
00:14:44,480 --> 00:14:48,000
this is our third result

344
00:14:50,480 --> 00:14:52,720
finally we give several applications

345
00:14:52,720 --> 00:14:54,959
that show the simplicity and generality

346
00:14:54,959 --> 00:14:57,680
of our quantum pre-sampling theorem

347
00:14:57,680 --> 00:14:59,600
we first reprove the best known bonds

348
00:14:59,600 --> 00:15:03,920
for pre-image finding in the aiq rom

349
00:15:04,800 --> 00:15:06,720
second we show the first non-trivial

350
00:15:06,720 --> 00:15:08,800
bond for the non-uniform security of the

351
00:15:08,800 --> 00:15:11,680
famous merkle dam guard hash functions

352
00:15:11,680 --> 00:15:14,959
we show its st security in the ai q rom

353
00:15:14,959 --> 00:15:18,240
is st cubed over n

354
00:15:18,240 --> 00:15:20,560
the best known attack achieves s t

355
00:15:20,560 --> 00:15:22,959
square plus t cubed over n

356
00:15:22,959 --> 00:15:25,199
we believe further closing the gap is an

357
00:15:25,199 --> 00:15:28,160
intriguing question

358
00:15:29,120 --> 00:15:31,040
that's everything i want to talk about

359
00:15:31,040 --> 00:15:34,040
thanks

