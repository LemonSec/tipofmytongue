1
00:00:00,160 --> 00:00:02,639
the last day of pcc

2
00:00:02,639 --> 00:00:04,160
uh the first

3
00:00:04,160 --> 00:00:06,319
today we start with the foundation

4
00:00:06,319 --> 00:00:08,800
session and the first talk is on

5
00:00:08,800 --> 00:00:10,800
de-randomizing yao's quick to strong

6
00:00:10,800 --> 00:00:12,639
one-way functions

7
00:00:12,639 --> 00:00:14,960
and uh this is a joy work uh please

8
00:00:14,960 --> 00:00:18,640
boost camp uh joffrey pila and felix and

9
00:00:18,640 --> 00:00:21,279
peter will give the talk

10
00:00:21,279 --> 00:00:23,119
thank you for the introduction

11
00:00:23,119 --> 00:00:25,439
so i'm

12
00:00:25,439 --> 00:00:26,960
and i'm going to talk about the

13
00:00:26,960 --> 00:00:28,960
randomizing yellow suites strong one-way

14
00:00:28,960 --> 00:00:30,720
function construction

15
00:00:30,720 --> 00:00:32,960
and

16
00:00:33,200 --> 00:00:35,680
as we were presented uh this was a joint

17
00:00:35,680 --> 00:00:40,200
work with chris bruce's casual foreign

18
00:00:40,320 --> 00:00:42,239
at least chris is also here in the zoo

19
00:00:42,239 --> 00:00:44,239
so he can help me if you ask difficult

20
00:00:44,239 --> 00:00:46,559
questions in the end

21
00:00:46,559 --> 00:00:48,480
uh all right

22
00:00:48,480 --> 00:00:51,920
so we say that if is a weak one-way

23
00:00:51,920 --> 00:00:53,120
function

24
00:00:53,120 --> 00:00:53,920
if

25
00:00:53,920 --> 00:00:56,640
it can be inverted with probability at

26
00:00:56,640 --> 00:01:00,239
most 1 minus 1 over p of n for some

27
00:01:00,239 --> 00:01:02,960
polynomial p

28
00:01:02,960 --> 00:01:05,519
and we say that g is a strong one-way

29
00:01:05,519 --> 00:01:07,600
function if the inverse and probability

30
00:01:07,600 --> 00:01:10,320
is negligible so this is the usual

31
00:01:10,320 --> 00:01:13,600
definition of one way function

32
00:01:13,600 --> 00:01:16,960
now the theorem by yao says that if f is

33
00:01:16,960 --> 00:01:19,920
a weak one-way function then this g that

34
00:01:19,920 --> 00:01:23,520
takes some long input x one to x n times

35
00:01:23,520 --> 00:01:24,560
p of n

36
00:01:24,560 --> 00:01:26,880
where this p

37
00:01:26,880 --> 00:01:28,720
is from the weak one-way function

38
00:01:28,720 --> 00:01:30,400
definition

39
00:01:30,400 --> 00:01:33,200
then this g feeds these x's into the

40
00:01:33,200 --> 00:01:35,600
weak one-way function and outputs the

41
00:01:35,600 --> 00:01:36,799
results

42
00:01:36,799 --> 00:01:41,040
this g is a strong one-way function

43
00:01:41,040 --> 00:01:43,360
now we are interested in whether we

44
00:01:43,360 --> 00:01:46,399
could have shorter input to g

45
00:01:46,399 --> 00:01:47,520
that is

46
00:01:47,520 --> 00:01:51,040
if you have the yaw construction here

47
00:01:51,040 --> 00:01:53,040
could you add some pre-processing

48
00:01:53,040 --> 00:01:56,000
function such that it makes the input to

49
00:01:56,000 --> 00:01:57,840
g shorter

50
00:01:57,840 --> 00:01:59,360
in particular

51
00:01:59,360 --> 00:02:01,119
if the input to the weak one-way

52
00:02:01,119 --> 00:02:03,439
function is of length m

53
00:02:03,439 --> 00:02:06,159
and this x is of length n

54
00:02:06,159 --> 00:02:07,520
could we have

55
00:02:07,520 --> 00:02:11,599
n equal to some constant times n

56
00:02:11,599 --> 00:02:15,440
now the result of our paper is negative

57
00:02:15,440 --> 00:02:16,480
that is

58
00:02:16,480 --> 00:02:18,720
there is no preprocessing

59
00:02:18,720 --> 00:02:21,120
with input length less than some

60
00:02:21,120 --> 00:02:24,080
constant times p of m

61
00:02:24,080 --> 00:02:27,440
so the input here must be at least

62
00:02:27,440 --> 00:02:30,319
order of this polynomial

63
00:02:30,319 --> 00:02:31,920
more precisely

64
00:02:31,920 --> 00:02:34,879
we show that you cannot prove that such

65
00:02:34,879 --> 00:02:37,440
a short input g is a strong one-way

66
00:02:37,440 --> 00:02:38,959
function

67
00:02:38,959 --> 00:02:42,080
and what proves we rule out exactly

68
00:02:42,080 --> 00:02:45,120
we rule out a big class of relativising

69
00:02:45,120 --> 00:02:47,519
black box proofs

70
00:02:47,519 --> 00:02:50,400
and our proof

71
00:02:50,400 --> 00:02:53,680
is by oracle separation

72
00:02:53,680 --> 00:02:55,120
so first

73
00:02:55,120 --> 00:02:57,519
we have a piece based oracle to get rid

74
00:02:57,519 --> 00:02:59,680
of all possibly already existing

75
00:02:59,680 --> 00:03:01,920
randomness

76
00:03:01,920 --> 00:03:02,840
existing

77
00:03:02,840 --> 00:03:05,760
hardness and then as the weak one-way

78
00:03:05,760 --> 00:03:06,720
function

79
00:03:06,720 --> 00:03:09,519
we have a special random oracle

80
00:03:09,519 --> 00:03:10,400
that

81
00:03:10,400 --> 00:03:14,640
can be inverted on one minus one over p

82
00:03:14,640 --> 00:03:18,000
fraction of random outputs

83
00:03:18,000 --> 00:03:22,400
and then we show that this kind of

84
00:03:22,400 --> 00:03:25,200
short input g can be inverted with

85
00:03:25,200 --> 00:03:28,159
non-negligible probability

86
00:03:28,159 --> 00:03:31,519
the adversary against this g works as

87
00:03:31,519 --> 00:03:32,799
follows

88
00:03:32,799 --> 00:03:36,480
so it inverts each of these y's one by

89
00:03:36,480 --> 00:03:37,519
one

90
00:03:37,519 --> 00:03:40,560
and it is successful in roughly this

91
00:03:40,560 --> 00:03:44,080
fraction of the f calls

92
00:03:44,080 --> 00:03:46,879
so the adversary learns all

93
00:03:46,879 --> 00:03:49,360
but uh this

94
00:03:49,360 --> 00:03:53,519
polynomial fraction of the excise

95
00:03:53,519 --> 00:03:55,280
and now the interesting part of our

96
00:03:55,280 --> 00:03:58,879
proof is to show that when you know

97
00:03:58,879 --> 00:04:01,040
almost all of these

98
00:04:01,040 --> 00:04:01,920
then

99
00:04:01,920 --> 00:04:03,680
no matter what this preprocessing

100
00:04:03,680 --> 00:04:06,159
function is

101
00:04:06,159 --> 00:04:07,439
uh

102
00:04:07,439 --> 00:04:10,400
this x is easy to guess with the b space

103
00:04:10,400 --> 00:04:12,400
oracle

104
00:04:12,400 --> 00:04:13,360
now

105
00:04:13,360 --> 00:04:14,959
this looks a little bit like secret

106
00:04:14,959 --> 00:04:16,320
sharing

107
00:04:16,320 --> 00:04:18,639
you know many shares and you want to

108
00:04:18,639 --> 00:04:20,478
learn the secret

109
00:04:20,478 --> 00:04:22,320
of course in secret sharing instead of

110
00:04:22,320 --> 00:04:25,600
this x we would have some secret and the

111
00:04:25,600 --> 00:04:28,080
dealer's randomness

112
00:04:28,080 --> 00:04:30,000
however there is a result in secret

113
00:04:30,000 --> 00:04:32,720
sharing that says that the randomness

114
00:04:32,720 --> 00:04:36,080
and the secret together need to be long

115
00:04:36,080 --> 00:04:37,759
so we were hopeful that you could prove

116
00:04:37,759 --> 00:04:40,800
an upper bound in our case as well

117
00:04:40,800 --> 00:04:43,840
and indeed we managed to prove that on

118
00:04:43,840 --> 00:04:48,080
average average the hard x-i's

119
00:04:48,080 --> 00:04:50,720
have little entropy conditioned

120
00:04:50,720 --> 00:04:53,199
that you know all the easy exercise

121
00:04:53,199 --> 00:04:55,280
regardless of what this pre-processing

122
00:04:55,280 --> 00:04:57,040
is

123
00:04:57,040 --> 00:04:58,479
this is because

124
00:04:58,479 --> 00:05:00,000
every x i

125
00:05:00,000 --> 00:05:02,800
cannot have a fresh bit of entropy from

126
00:05:02,800 --> 00:05:04,800
a short x

127
00:05:04,800 --> 00:05:07,440
so when we choose a random subset of x

128
00:05:07,440 --> 00:05:10,000
i's then the entropy is gone with high

129
00:05:10,000 --> 00:05:12,479
probability over the choice of the

130
00:05:12,479 --> 00:05:14,560
random subset

131
00:05:14,560 --> 00:05:15,840
and then

132
00:05:15,840 --> 00:05:18,400
uh when you know all of these

133
00:05:18,400 --> 00:05:21,199
uh it is very easy to get this x using

134
00:05:21,199 --> 00:05:22,840
the plus base

135
00:05:22,840 --> 00:05:26,240
oracle i give the details of that proof

136
00:05:26,240 --> 00:05:27,680
in the long talk

137
00:05:27,680 --> 00:05:30,080
and in the long video i also discussed

138
00:05:30,080 --> 00:05:33,440
how this relates to other works

139
00:05:33,440 --> 00:05:35,120
thank you for listening

140
00:05:35,120 --> 00:05:38,520
any questions

141
00:05:41,039 --> 00:05:44,639
okay any question for pila

142
00:05:46,000 --> 00:05:47,199
let's see if there are questions from

143
00:05:47,199 --> 00:05:49,600
the chat

144
00:05:49,600 --> 00:05:51,520
okay so looks like there are no

145
00:05:51,520 --> 00:05:53,120
questions thank you peter this was a

146
00:05:53,120 --> 00:05:54,880
really great talk it was really

147
00:05:54,880 --> 00:05:56,479
enjoyable

148
00:05:56,479 --> 00:05:58,000
all right so

149
00:05:58,000 --> 00:06:01,600
so then let's move on to the next talk

150
00:06:01,600 --> 00:06:04,319
next talk is um

151
00:06:04,319 --> 00:06:06,639
actually do we have children

152
00:06:06,639 --> 00:06:07,600
oh good

153
00:06:07,600 --> 00:06:10,960
um on three with separators and young's

154
00:06:10,960 --> 00:06:13,280
garbly this is a joint work by chitan

155
00:06:13,280 --> 00:06:16,319
karen klein and christoph pietrock

156
00:06:16,319 --> 00:06:20,520
and chetan is gonna give the talk

157
00:06:23,900 --> 00:06:27,060
[Music]

158
00:06:32,840 --> 00:06:35,520
um now we can

159
00:06:35,520 --> 00:06:36,240
yes

160
00:06:36,240 --> 00:06:38,479
yes now we can you'll have to speak

161
00:06:38,479 --> 00:06:39,600
louder

162
00:06:39,600 --> 00:06:41,600
okay

163
00:06:41,600 --> 00:06:43,919
um

164
00:06:44,960 --> 00:06:47,919
uh sorry for the technical difficulties

165
00:06:47,919 --> 00:06:49,199
i'm jaitan

166
00:06:49,199 --> 00:06:51,360
and i'll present the paper entry with uh

167
00:06:51,360 --> 00:06:53,280
separators and yahoo scarbling this is

168
00:06:53,280 --> 00:06:55,759
john wood with current line and chris uh

169
00:06:55,759 --> 00:06:57,440
chuck

170
00:06:57,440 --> 00:06:58,720
um

171
00:06:58,720 --> 00:07:01,680
our main uh result states that for for

172
00:07:01,680 --> 00:07:03,840
the class of boolean circuits of size s

173
00:07:03,840 --> 00:07:04,479
and

174
00:07:04,479 --> 00:07:05,919
tree with w

175
00:07:05,919 --> 00:07:07,599
yar scarbling which we denote by gamma

176
00:07:07,599 --> 00:07:09,840
is adaptively indistinguishable uh with

177
00:07:09,840 --> 00:07:11,280
the loss of security which is

178
00:07:11,280 --> 00:07:14,080
exponential in the tree with uh as to

179
00:07:14,080 --> 00:07:16,720
the of w to be precise

180
00:07:16,720 --> 00:07:19,360
uh so for concreteness if one considers

181
00:07:19,360 --> 00:07:21,520
uh boolean circuits uh that have

182
00:07:21,520 --> 00:07:23,680
constant true width

183
00:07:23,680 --> 00:07:26,000
uh we get uh

184
00:07:26,000 --> 00:07:26,720
uh

185
00:07:26,720 --> 00:07:29,039
adaptive indistinguishability with only

186
00:07:29,039 --> 00:07:31,039
polynomial loss

187
00:07:31,039 --> 00:07:34,479
um a couple of remarks are due here so

188
00:07:34,479 --> 00:07:36,880
uh what is true with uh it's a notion

189
00:07:36,880 --> 00:07:39,360
from algorithmic graph theory

190
00:07:39,360 --> 00:07:42,000
which is uh informally a measure of how

191
00:07:42,000 --> 00:07:46,560
far a circuit is from a formula

192
00:07:46,560 --> 00:07:48,960
and we will come to the the details a

193
00:07:48,960 --> 00:07:50,160
bit later

194
00:07:50,160 --> 00:07:52,639
and uh secondly the notion of security

195
00:07:52,639 --> 00:07:54,560
we consider here is called adaptive

196
00:07:54,560 --> 00:07:56,319
indistinguishability

197
00:07:56,319 --> 00:07:58,160
uh this is weaker than the standard

198
00:07:58,160 --> 00:07:59,840
national security which is adaptive

199
00:07:59,840 --> 00:08:01,520
simulatability

200
00:08:01,520 --> 00:08:03,520
and we will see soon why this is the

201
00:08:03,520 --> 00:08:05,919
case so adaptivity here refers to the

202
00:08:05,919 --> 00:08:08,240
fact that uh the adversary

203
00:08:08,240 --> 00:08:10,960
uh it can uh

204
00:08:10,960 --> 00:08:12,960
select its input

205
00:08:12,960 --> 00:08:14,720
after the fact that it uh it has

206
00:08:14,720 --> 00:08:17,919
obtained the garbled circuit

207
00:08:17,919 --> 00:08:20,240
uh so what was known about uh security

208
00:08:20,240 --> 00:08:21,840
of eos garbling

209
00:08:21,840 --> 00:08:22,879
um

210
00:08:22,879 --> 00:08:24,479
the selective security was established

211
00:08:24,479 --> 00:08:26,960
by link lindell and pinkas

212
00:08:26,960 --> 00:08:28,160
and

213
00:08:28,160 --> 00:08:30,319
this was that they showed that yao is

214
00:08:30,319 --> 00:08:32,958
selectively simulatable and this

215
00:08:32,958 --> 00:08:36,880
implies selective indistinguishability

216
00:08:36,880 --> 00:08:38,080
and

217
00:08:38,080 --> 00:08:40,399
uh this was followed by the work of

218
00:08:40,399 --> 00:08:42,399
obama tall uh who proved a negative

219
00:08:42,399 --> 00:08:44,240
result they ruled out

220
00:08:44,240 --> 00:08:46,959
uh adaptive simulatability of of yao

221
00:08:46,959 --> 00:08:48,720
scarbling

222
00:08:48,720 --> 00:08:52,640
and so this was a a corollary of a more

223
00:08:52,640 --> 00:08:54,720
resol more general result of that which

224
00:08:54,720 --> 00:08:55,839
showed that

225
00:08:55,839 --> 00:08:56,560
if

226
00:08:56,560 --> 00:08:59,279
for randomizing coatings uh which is

227
00:08:59,279 --> 00:09:01,360
adaptively simulatable

228
00:09:01,360 --> 00:09:03,120
uh your

229
00:09:03,120 --> 00:09:05,920
online complexity needs to exceed the

230
00:09:05,920 --> 00:09:08,560
output length this is not the case for

231
00:09:08,560 --> 00:09:10,399
uh yao scarbling

232
00:09:10,399 --> 00:09:11,279
but

233
00:09:11,279 --> 00:09:13,760
uh jaffa golian makes um

234
00:09:13,760 --> 00:09:16,480
so that you can bypass this negative

235
00:09:16,480 --> 00:09:19,200
result by modifying yao's construction a

236
00:09:19,200 --> 00:09:20,880
bit

237
00:09:20,880 --> 00:09:22,640
that is by deferring the

238
00:09:22,640 --> 00:09:24,080
output map to

239
00:09:24,080 --> 00:09:26,320
uh to the online phase

240
00:09:26,320 --> 00:09:27,760
so uh

241
00:09:27,760 --> 00:09:31,040
the the the the state of adaptive uh

242
00:09:31,040 --> 00:09:33,600
distinguishability had remained open and

243
00:09:33,600 --> 00:09:34,720
we

244
00:09:34,720 --> 00:09:37,839
uh partially resolve this um in in our

245
00:09:37,839 --> 00:09:39,839
work we show that it is indeed possible

246
00:09:39,839 --> 00:09:42,800
in some cases

247
00:09:43,120 --> 00:09:46,320
uh uh so i'll briefly describe our the

248
00:09:46,320 --> 00:09:49,120
overview of our proof so we

249
00:09:49,120 --> 00:09:50,959
like in previous works we do a hybrid

250
00:09:50,959 --> 00:09:53,760
argument and we to get adaptivity we use

251
00:09:53,760 --> 00:09:57,279
something called piecewise guessing

252
00:09:57,279 --> 00:10:00,160
and in order to do this formally we uh

253
00:10:00,160 --> 00:10:02,480
uh abstract out the hybrids using

254
00:10:02,480 --> 00:10:05,600
a game so our people game is a bit

255
00:10:05,600 --> 00:10:07,760
different from the previous works

256
00:10:07,760 --> 00:10:09,040
and

257
00:10:09,040 --> 00:10:10,399
this is one of our technical

258
00:10:10,399 --> 00:10:12,480
contributions

259
00:10:12,480 --> 00:10:14,320
and the main technical configuration is

260
00:10:14,320 --> 00:10:16,959
coming up with um efficient doubling

261
00:10:16,959 --> 00:10:19,360
strategies and for this we use

262
00:10:19,360 --> 00:10:20,959
uh trade the notion of three with our

263
00:10:20,959 --> 00:10:22,880
separators so so what does this

264
00:10:22,880 --> 00:10:25,279
translate to so uh uh

265
00:10:25,279 --> 00:10:27,760
doubling strategies are are

266
00:10:27,760 --> 00:10:29,600
by the the second step

267
00:10:29,600 --> 00:10:31,440
they are kind of tightly related to the

268
00:10:31,440 --> 00:10:33,920
hybrids the hybrid argument and and

269
00:10:33,920 --> 00:10:35,760
coming up with more efficient terminal

270
00:10:35,760 --> 00:10:37,440
strategies for some measure of

271
00:10:37,440 --> 00:10:39,440
efficiency they translate into better

272
00:10:39,440 --> 00:10:43,640
hybrids for foreign

273
00:10:44,079 --> 00:10:45,519
uh so

274
00:10:45,519 --> 00:10:48,000
so this is what i would like you to uh

275
00:10:48,000 --> 00:10:50,000
take away from from this talk like the

276
00:10:50,000 --> 00:10:52,160
notion of separator and through it so

277
00:10:52,160 --> 00:10:54,079
this is a very general

278
00:10:54,079 --> 00:10:56,880
uh notion and it is uh it's a it's a

279
00:10:56,880 --> 00:10:59,920
useful uh tool to have and once reporter

280
00:10:59,920 --> 00:11:03,200
uh as to attribute this as as already

281
00:11:03,200 --> 00:11:04,560
mentioned it's a measure of how far a

282
00:11:04,560 --> 00:11:06,079
circuit is from a

283
00:11:06,079 --> 00:11:08,000
from a formula for example boolean

284
00:11:08,000 --> 00:11:11,440
formula by definition have tree with one

285
00:11:11,440 --> 00:11:14,079
and what is a separator a

286
00:11:14,079 --> 00:11:17,680
separator s for circuit c is a subset of

287
00:11:17,680 --> 00:11:18,880
its gates

288
00:11:18,880 --> 00:11:22,320
such that removing this subset s

289
00:11:22,320 --> 00:11:25,760
and the incident wires it decomposes uh

290
00:11:25,760 --> 00:11:27,920
the circuit c into

291
00:11:27,920 --> 00:11:29,680
sub-circuits which are of comparable

292
00:11:29,680 --> 00:11:32,160
size so for example in this figure on

293
00:11:32,160 --> 00:11:34,800
the left you see a circuit c and a

294
00:11:34,800 --> 00:11:37,519
separator for it is shown in between the

295
00:11:37,519 --> 00:11:39,760
dashed lines and when one removes the

296
00:11:39,760 --> 00:11:40,720
gates

297
00:11:40,720 --> 00:11:43,279
uh the the circuit neatly decomposes

298
00:11:43,279 --> 00:11:45,839
into two sub-circuits c1 and c2 which

299
00:11:45,839 --> 00:11:49,440
don't have uh connections between them

300
00:11:49,440 --> 00:11:51,440
uh how are circuits uh how are

301
00:11:51,440 --> 00:11:53,519
separators connected uh connected to

302
00:11:53,519 --> 00:11:55,600
attribute this is why a classical

303
00:11:55,600 --> 00:11:57,839
theorem of robertson and cmr they showed

304
00:11:57,839 --> 00:11:58,959
that

305
00:11:58,959 --> 00:12:01,360
any circuit which is uh which has a tree

306
00:12:01,360 --> 00:12:02,480
with w

307
00:12:02,480 --> 00:12:04,880
has a separator of size

308
00:12:04,880 --> 00:12:08,240
uh which is upper bounded by w therefore

309
00:12:08,240 --> 00:12:11,680
uh this is an existence theorem

310
00:12:11,680 --> 00:12:14,480
and how what does one apply this uh

311
00:12:14,480 --> 00:12:16,320
existence theorem so

312
00:12:16,320 --> 00:12:18,639
so on a very high level what this allows

313
00:12:18,639 --> 00:12:19,279
is

314
00:12:19,279 --> 00:12:21,360
to do divide and conquer uh this is the

315
00:12:21,360 --> 00:12:23,839
main reason is because uh the notion of

316
00:12:23,839 --> 00:12:25,279
qubit is a

317
00:12:25,279 --> 00:12:27,760
is a monotonous property so if you if

318
00:12:27,760 --> 00:12:30,079
you look at the sub circuit of a circ

319
00:12:30,079 --> 00:12:32,560
circuit the tree width can only decrease

320
00:12:32,560 --> 00:12:34,480
from its parent circuit so what it

321
00:12:34,480 --> 00:12:36,000
allows you to do is

322
00:12:36,000 --> 00:12:37,680
you take the circuit c you decompose it

323
00:12:37,680 --> 00:12:40,560
using a separator s then you can keep on

324
00:12:40,560 --> 00:12:43,040
doing this process until you end up with

325
00:12:43,040 --> 00:12:45,600
small enough sub circuits

326
00:12:45,600 --> 00:12:48,079
so if you are if you are trying to carry

327
00:12:48,079 --> 00:12:50,720
out some uh thing for the whole circuit

328
00:12:50,720 --> 00:12:54,399
c you can uh divide the task into

329
00:12:54,399 --> 00:12:55,920
carrying it out

330
00:12:55,920 --> 00:12:58,480
for the sub circuits uh given you pay

331
00:12:58,480 --> 00:13:00,639
for the separator s

332
00:13:00,639 --> 00:13:02,560
uh since

333
00:13:02,560 --> 00:13:05,760
uh so the so since the the the sub

334
00:13:05,760 --> 00:13:08,959
circus that we get is not too olympic

335
00:13:08,959 --> 00:13:11,600
uh the depth of this this recursion is

336
00:13:11,600 --> 00:13:15,680
is also is bounded by log of s

337
00:13:15,680 --> 00:13:18,240
and moreover the amount of resource one

338
00:13:18,240 --> 00:13:22,000
uses per step it's also bounded by the

339
00:13:22,000 --> 00:13:24,160
uh size of the separator therefore if

340
00:13:24,160 --> 00:13:26,560
the separator is not too big one ends up

341
00:13:26,560 --> 00:13:28,399
with a nice divide and conquer strategy

342
00:13:28,399 --> 00:13:29,680
which helps

343
00:13:29,680 --> 00:13:33,600
uh carry out whatever task one wants to

344
00:13:33,600 --> 00:13:34,480
and

345
00:13:34,480 --> 00:13:35,760
that's all

346
00:13:35,760 --> 00:13:36,080
um

347
00:13:36,080 --> 00:13:37,760
[Music]

348
00:13:37,760 --> 00:13:41,360
you can find more details about the talk

349
00:13:41,360 --> 00:13:42,800
on the paper or

350
00:13:42,800 --> 00:13:45,600
you can look at the the full video thank

351
00:13:45,600 --> 00:13:48,600
you

352
00:13:51,279 --> 00:13:52,399
thank you

353
00:13:52,399 --> 00:13:55,199
are there any questions for children

354
00:13:55,199 --> 00:13:57,920
we have one question

355
00:13:57,920 --> 00:14:00,320
from the audience and if you cannot hear

356
00:14:00,320 --> 00:14:02,720
you can speak from that oh you can come

357
00:14:02,720 --> 00:14:05,760
here to watch me okay

358
00:14:06,320 --> 00:14:08,160
uh all right this is uh just a simple

359
00:14:08,160 --> 00:14:10,079
question do both parties need to know

360
00:14:10,079 --> 00:14:12,480
the tree decomposition

361
00:14:12,480 --> 00:14:14,639
um

362
00:14:15,440 --> 00:14:18,560
no no one just needs uh if one has an

363
00:14:18,560 --> 00:14:20,480
upper bound on the trivets

364
00:14:20,480 --> 00:14:21,760
uh if you look at the details of the

365
00:14:21,760 --> 00:14:22,560
paper

366
00:14:22,560 --> 00:14:25,519
it suffices if one we guess like uh the

367
00:14:25,519 --> 00:14:28,000
trivets that the separator and then

368
00:14:28,000 --> 00:14:29,519
one can carry on one doesn't need to

369
00:14:29,519 --> 00:14:31,360
compute the three decomposition

370
00:14:31,360 --> 00:14:32,240
okay

371
00:14:32,240 --> 00:14:33,760
and then uh one more question since

372
00:14:33,760 --> 00:14:35,680
we're already starting with circuits so

373
00:14:35,680 --> 00:14:38,399
they're already um you know dags does

374
00:14:38,399 --> 00:14:39,760
that mean like in general like the tree

375
00:14:39,760 --> 00:14:41,519
width tends to not be

376
00:14:41,519 --> 00:14:43,839
that big for most kinds of problems

377
00:14:43,839 --> 00:14:46,079
people would wanted to do

378
00:14:46,079 --> 00:14:47,040
um

379
00:14:47,040 --> 00:14:49,920
not necessarily so so uh i burst some

380
00:14:49,920 --> 00:14:51,519
things under the hood here trevit is

381
00:14:51,519 --> 00:14:53,920
actually defined for undirected graphs

382
00:14:53,920 --> 00:14:56,160
originally but we use like a definition

383
00:14:56,160 --> 00:14:58,880
which is for directed graphs

384
00:14:58,880 --> 00:14:59,680
um

385
00:14:59,680 --> 00:15:01,519
i don't think so one could come up with

386
00:15:01,519 --> 00:15:04,000
uh with circuits for which like the the

387
00:15:04,000 --> 00:15:06,720
tree width is um large enough there

388
00:15:06,720 --> 00:15:08,800
might be like a small gap between the

389
00:15:08,800 --> 00:15:10,959
the triplets for directing and directed

390
00:15:10,959 --> 00:15:13,920
but it's probably not significant

391
00:15:13,920 --> 00:15:16,319
thank you

392
00:15:17,519 --> 00:15:20,720
other questions for chetan

393
00:15:20,720 --> 00:15:22,480
so i don't see anything from the top

394
00:15:22,480 --> 00:15:26,120
thank you chetan again

395
00:15:27,920 --> 00:15:30,639
all right next talk is um obvious

396
00:15:30,639 --> 00:15:33,199
transfer from chapter permutations in

397
00:15:33,199 --> 00:15:35,120
minimum round

398
00:15:35,120 --> 00:15:35,920
by

399
00:15:35,920 --> 00:15:38,079
arca nicole champ

400
00:15:38,079 --> 00:15:41,040
ripo goyal

401
00:15:44,480 --> 00:15:45,759
hello hi

402
00:15:45,759 --> 00:15:47,360
can you hear me

403
00:15:47,360 --> 00:15:48,480
yes

404
00:15:48,480 --> 00:15:49,279
okay

405
00:15:49,279 --> 00:15:51,680
so thanks a lot alessandra for the

406
00:15:51,680 --> 00:15:52,959
introduction

407
00:15:52,959 --> 00:15:55,519
um yeah so the first thing we start in

408
00:15:55,519 --> 00:15:57,600
this favor is the notion about videos

409
00:15:57,600 --> 00:16:00,399
transfer so i hope all you know all of

410
00:16:00,399 --> 00:16:02,320
you know what is it what it is so

411
00:16:02,320 --> 00:16:03,680
basically we have a sender with two

412
00:16:03,680 --> 00:16:05,680
inputs and a receiver with

413
00:16:05,680 --> 00:16:08,480
with one bit as input and the aim of the

414
00:16:08,480 --> 00:16:10,160
receiver is to get

415
00:16:10,160 --> 00:16:12,399
a cb

416
00:16:12,399 --> 00:16:15,279
in such a way that the sender doesn't

417
00:16:15,279 --> 00:16:17,040
learn what is the input of the receiver

418
00:16:17,040 --> 00:16:18,639
and the receiver doesn't learn what's

419
00:16:18,639 --> 00:16:21,040
the other input of the sender

420
00:16:21,040 --> 00:16:22,959
and unfortunately we know that we cannot

421
00:16:22,959 --> 00:16:25,360
realize this functionality information

422
00:16:25,360 --> 00:16:27,759
theoretically and so what we can do is

423
00:16:27,759 --> 00:16:30,079
to rely on some assumptions in this case

424
00:16:30,079 --> 00:16:31,680
we want to consider the

425
00:16:31,680 --> 00:16:34,240
the setting of computational

426
00:16:34,240 --> 00:16:36,880
hardness assumptions in particular

427
00:16:36,880 --> 00:16:38,240
we um

428
00:16:38,240 --> 00:16:40,320
consider the uh the notion of one-way

429
00:16:40,320 --> 00:16:41,839
chapter permutation

430
00:16:41,839 --> 00:16:42,959
so

431
00:16:42,959 --> 00:16:46,000
one way to describe uh what these are

432
00:16:46,000 --> 00:16:48,959
the is through a set of algorithm so the

433
00:16:48,959 --> 00:16:50,480
first algorithm is the generation

434
00:16:50,480 --> 00:16:53,040
algorithm that gives you um the

435
00:16:53,040 --> 00:16:55,759
description of chapter permutation and

436
00:16:55,759 --> 00:16:57,440
subtractor

437
00:16:57,440 --> 00:16:59,440
uh then we have an evaluational grid

438
00:16:59,440 --> 00:17:01,600
that basically we can use to take any

439
00:17:01,600 --> 00:17:04,240
value x and evaluate g over over x and

440
00:17:04,240 --> 00:17:05,599
we get the

441
00:17:05,599 --> 00:17:08,079
uh the output and this is easy to do on

442
00:17:08,079 --> 00:17:10,799
the other hand uh if we just take a

443
00:17:10,799 --> 00:17:12,480
random element from the codomain and we

444
00:17:12,480 --> 00:17:15,520
want to compute the inverse this is hard

445
00:17:15,520 --> 00:17:18,160
it's hard as unless we have the tractor

446
00:17:18,160 --> 00:17:19,520
if you have the trapdoor we can do that

447
00:17:19,520 --> 00:17:21,039
in sleep

448
00:17:21,039 --> 00:17:23,760
so one property that you might want to

449
00:17:23,760 --> 00:17:26,000
add on top of your one with raptor

450
00:17:26,000 --> 00:17:27,520
permutation is the property of

451
00:17:27,520 --> 00:17:29,840
certifiability where certifiability

452
00:17:29,840 --> 00:17:32,480
means basically that anybody by just

453
00:17:32,480 --> 00:17:34,640
looking at the description of the

454
00:17:34,640 --> 00:17:37,840
function can claim efficiently

455
00:17:37,840 --> 00:17:39,600
whether g is

456
00:17:39,600 --> 00:17:43,120
a primition or not

457
00:17:43,280 --> 00:17:44,080
so

458
00:17:44,080 --> 00:17:46,160
what is the relation between ws transfer

459
00:17:46,160 --> 00:17:48,960
and uh capture permutations so we know

460
00:17:48,960 --> 00:17:51,520
that uh uh in three rounds if the

461
00:17:51,520 --> 00:17:53,360
receiver is seminars and the sender is

462
00:17:53,360 --> 00:17:55,760
corrupted uh we can use structure

463
00:17:55,760 --> 00:17:57,840
permutations to to realize the blues

464
00:17:57,840 --> 00:18:00,640
transfer functionality however as we

465
00:18:00,640 --> 00:18:03,200
will see later

466
00:18:03,200 --> 00:18:05,679
it is required for the traptor

467
00:18:05,679 --> 00:18:07,760
permutation to be certifiable in order

468
00:18:07,760 --> 00:18:09,919
for the proof to go through

469
00:18:09,919 --> 00:18:11,120
and

470
00:18:11,120 --> 00:18:14,480
in a little work of casastroski of 2004

471
00:18:14,480 --> 00:18:16,320
the others show that you can actually

472
00:18:16,320 --> 00:18:19,520
realize any functionality but again you

473
00:18:19,520 --> 00:18:22,160
need to rely on uh certifiability of the

474
00:18:22,160 --> 00:18:24,320
chapter permutations and this result is

475
00:18:24,320 --> 00:18:27,200
in the pre-plane model and requires just

476
00:18:27,200 --> 00:18:28,960
five rounds which is the minimum number

477
00:18:28,960 --> 00:18:30,799
of rounds that you can hope for

478
00:18:30,799 --> 00:18:32,960
this result was later improved by

479
00:18:32,960 --> 00:18:36,080
ostrowski richardson and scafulo where

480
00:18:36,080 --> 00:18:38,960
they showed that the same result holds

481
00:18:38,960 --> 00:18:41,679
by requiring only black box access to

482
00:18:41,679 --> 00:18:44,799
the underlying raptor permutation

483
00:18:44,799 --> 00:18:47,760
and now what we ask in this in this work

484
00:18:47,760 --> 00:18:49,440
is whether we can remove this uh

485
00:18:49,440 --> 00:18:52,240
requirement on the certifiability right

486
00:18:52,240 --> 00:18:54,400
and this is kind of another question if

487
00:18:54,400 --> 00:18:56,799
you look for example in other in other

488
00:18:56,799 --> 00:18:58,400
contexts for example

489
00:18:58,400 --> 00:19:00,000
um we know that to realize

490
00:19:00,000 --> 00:19:02,960
non-interactive uh zero knowledge uh

491
00:19:02,960 --> 00:19:04,720
we just need chapter permutation so a

492
00:19:04,720 --> 00:19:06,960
bellaryum in 1993 show that you don't

493
00:19:06,960 --> 00:19:09,200
need the certifiable property and this

494
00:19:09,200 --> 00:19:12,480
result was also improved later on by um

495
00:19:12,480 --> 00:19:14,720
by connecticut so we asked whether the

496
00:19:14,720 --> 00:19:16,240
same holds in the case of probably

497
00:19:16,240 --> 00:19:18,480
transfer more in general in the case of

498
00:19:18,480 --> 00:19:20,640
two-party competition to realize any any

499
00:19:20,640 --> 00:19:22,240
functionality

500
00:19:22,240 --> 00:19:24,640
so before diving into it

501
00:19:24,640 --> 00:19:26,880
uh i just want to recall how the egl

502
00:19:26,880 --> 00:19:28,720
construction works to realize obvious

503
00:19:28,720 --> 00:19:30,559
transfer so for simplicity let's say

504
00:19:30,559 --> 00:19:33,200
that the receiver here has a fixed input

505
00:19:33,200 --> 00:19:34,160
one

506
00:19:34,160 --> 00:19:36,160
and the idea here is that the sender uh

507
00:19:36,160 --> 00:19:38,640
generates the trapdoor permutation

508
00:19:38,640 --> 00:19:40,160
it provides the description of this

509
00:19:40,160 --> 00:19:42,000
function to the receiver

510
00:19:42,000 --> 00:19:44,640
and now the receiver for the input he

511
00:19:44,640 --> 00:19:47,440
knows he samples a random x one

512
00:19:47,440 --> 00:19:50,240
evaluates the function over x one

513
00:19:50,240 --> 00:19:51,840
and for the input it doesn't know it

514
00:19:51,840 --> 00:19:54,000
just picks the random y okay so the idea

515
00:19:54,000 --> 00:19:56,000
is that he will compute these two values

516
00:19:56,000 --> 00:19:57,760
in such a way that the receiver knows

517
00:19:57,760 --> 00:20:01,280
only the pre-image of one of those

518
00:20:01,280 --> 00:20:03,200
now the receiver the the sender has a

519
00:20:03,200 --> 00:20:05,280
tractor so he can invert

520
00:20:05,280 --> 00:20:07,360
both y 0 and by 1

521
00:20:07,360 --> 00:20:09,440
and so he will use the

522
00:20:09,440 --> 00:20:12,960
inverse of y 0 as a one time key to

523
00:20:12,960 --> 00:20:14,480
encrypt

524
00:20:14,480 --> 00:20:16,880
his first secret c 0

525
00:20:16,880 --> 00:20:18,559
and he will do the same

526
00:20:18,559 --> 00:20:20,960
for the second secret c1 and he will

527
00:20:20,960 --> 00:20:23,039
send uh those encryptions over to the

528
00:20:23,039 --> 00:20:24,400
receiver

529
00:20:24,400 --> 00:20:26,320
well now the receiver if the receiver is

530
00:20:26,320 --> 00:20:29,039
a semi-honest then he can only get

531
00:20:29,039 --> 00:20:31,760
uh one of these uh secret and he is

532
00:20:31,760 --> 00:20:33,840
happy

533
00:20:33,840 --> 00:20:35,600
but what happens when the the sender is

534
00:20:35,600 --> 00:20:36,799
corrupted

535
00:20:36,799 --> 00:20:39,520
so if the function g is a permutation

536
00:20:39,520 --> 00:20:41,280
and the receiver has a way to certify

537
00:20:41,280 --> 00:20:43,760
that then well the receiver will

538
00:20:43,760 --> 00:20:45,840
be happy and he will engage in this

539
00:20:45,840 --> 00:20:48,320
protocol and as you can see if the g is

540
00:20:48,320 --> 00:20:50,720
a permutation you can actually claim

541
00:20:50,720 --> 00:20:51,600
that

542
00:20:51,600 --> 00:20:53,440
the input of the of the receiver is

543
00:20:53,440 --> 00:20:55,280
information theoretically hidden because

544
00:20:55,280 --> 00:20:57,120
the distribution of y 0 and y 1

545
00:20:57,120 --> 00:20:58,240
basically

546
00:20:58,240 --> 00:21:01,280
they are distributed identically

547
00:21:01,280 --> 00:21:02,559
on the other hand

548
00:21:02,559 --> 00:21:05,039
if you consider a function that is not a

549
00:21:05,039 --> 00:21:06,960
permutation and that it's not

550
00:21:06,960 --> 00:21:08,960
certifiable so the receiver cannot just

551
00:21:08,960 --> 00:21:13,120
support um by uh understanding that the

552
00:21:13,120 --> 00:21:14,720
function is not a permutation then you

553
00:21:14,720 --> 00:21:17,840
have a problem and the problem is that

554
00:21:17,840 --> 00:21:19,760
you have some collisions in the sense

555
00:21:19,760 --> 00:21:23,120
that two values for example the

556
00:21:23,120 --> 00:21:25,280
the the function evaluated on two values

557
00:21:25,280 --> 00:21:27,120
gives you the same value

558
00:21:27,120 --> 00:21:29,440
this means that for example

559
00:21:29,440 --> 00:21:32,400
the value y1 which is computed by uh by

560
00:21:32,400 --> 00:21:34,559
the receiver can never will never be

561
00:21:34,559 --> 00:21:36,960
equal to for example b1 or b4 right

562
00:21:36,960 --> 00:21:39,440
because there is no value that is mapped

563
00:21:39,440 --> 00:21:45,200
to from x1 to uh to the domain b1 a b4

564
00:21:45,200 --> 00:21:47,039
and on the other hand

565
00:21:47,039 --> 00:21:49,280
y0 is randomly sampled from the domain

566
00:21:49,280 --> 00:21:50,799
so i mean

567
00:21:50,799 --> 00:21:53,440
b1 might be equal to any of those values

568
00:21:53,440 --> 00:21:55,280
right so and this might give an

569
00:21:55,280 --> 00:21:56,400
advantage

570
00:21:56,400 --> 00:21:59,679
to uh to the adversary

571
00:21:59,679 --> 00:22:02,480
so what do we do to solve this issue

572
00:22:02,480 --> 00:22:03,760
uh we

573
00:22:03,760 --> 00:22:06,559
define and extract an encryption scheme

574
00:22:06,559 --> 00:22:08,240
that takes a simple description of the

575
00:22:08,240 --> 00:22:11,360
one-way permutation and a message m and

576
00:22:11,360 --> 00:22:13,679
it returns a ciphertext

577
00:22:13,679 --> 00:22:14,640
now

578
00:22:14,640 --> 00:22:16,880
if the function g is indeed a

579
00:22:16,880 --> 00:22:18,240
permutation

580
00:22:18,240 --> 00:22:19,440
then any

581
00:22:19,440 --> 00:22:22,159
any any descriptor that has the chapter

582
00:22:22,159 --> 00:22:24,080
of g can decrypt

583
00:22:24,080 --> 00:22:26,240
on the other hand if g is not a

584
00:22:26,240 --> 00:22:28,320
permutation and it has a lot of

585
00:22:28,320 --> 00:22:30,799
collisions then the message remains

586
00:22:30,799 --> 00:22:32,080
hidden

587
00:22:32,080 --> 00:22:33,919
so that's how we modify the protocol so

588
00:22:33,919 --> 00:22:35,360
basically the second round is now

589
00:22:35,360 --> 00:22:37,520
encrypted using this encryption scheme

590
00:22:37,520 --> 00:22:39,600
in such a way that we are in a win-win

591
00:22:39,600 --> 00:22:42,240
situation so if the function is not it's

592
00:22:42,240 --> 00:22:44,880
very bad uh it's very badly not a

593
00:22:44,880 --> 00:22:47,039
permutation the the sender cannot

594
00:22:47,039 --> 00:22:49,039
decrypt but if the function is a

595
00:22:49,039 --> 00:22:50,960
primition then the sender can't decrypt

596
00:22:50,960 --> 00:22:52,880
then we are happy because i mean it's

597
00:22:52,880 --> 00:22:54,559
fine that the sender

598
00:22:54,559 --> 00:22:56,640
sees y0 and y1 because they don't leak

599
00:22:56,640 --> 00:22:59,760
anything about the input of the receiver

600
00:22:59,760 --> 00:23:00,720
uh

601
00:23:00,720 --> 00:23:03,520
as you might have noticed this is not

602
00:23:03,520 --> 00:23:05,840
this is not sufficient to to prove the

603
00:23:05,840 --> 00:23:08,080
security of this because there might be

604
00:23:08,080 --> 00:23:10,240
less than exponentially many collisions

605
00:23:10,240 --> 00:23:11,520
right so

606
00:23:11,520 --> 00:23:13,120
but we show in the

607
00:23:13,120 --> 00:23:15,360
uh and we discussed this also in the

608
00:23:15,360 --> 00:23:17,200
extended talk how to amplify the

609
00:23:17,200 --> 00:23:19,120
security of this problem

610
00:23:19,120 --> 00:23:21,440
uh by using an approach similar to

611
00:23:21,440 --> 00:23:22,480
oblivious

612
00:23:22,480 --> 00:23:24,799
transfer combined combiners

613
00:23:24,799 --> 00:23:27,440
and so we use a similar approach to

614
00:23:27,440 --> 00:23:29,360
realize an optimal

615
00:23:29,360 --> 00:23:31,200
around the two-part competition that

616
00:23:31,200 --> 00:23:34,080
realizes any functionality

617
00:23:34,080 --> 00:23:36,559
in the optimal number of rounds and that

618
00:23:36,559 --> 00:23:39,440
requires only the black box access to

619
00:23:39,440 --> 00:23:42,799
the underlying um chapter permutation

620
00:23:42,799 --> 00:23:43,760
and

621
00:23:43,760 --> 00:23:46,400
this uh this is the end of the talk

622
00:23:46,400 --> 00:23:49,880
thank you very much

623
00:23:52,240 --> 00:23:53,760
thank you we get it do you have any

624
00:23:53,760 --> 00:23:57,760
questions from your audience

625
00:23:58,400 --> 00:23:59,320
and questions

626
00:23:59,320 --> 00:24:01,279
[Music]

627
00:24:01,279 --> 00:24:03,120
okay so maybe i'll have a quick question

628
00:24:03,120 --> 00:24:06,240
um this in this encryption scheme is a

629
00:24:06,240 --> 00:24:08,000
special one

630
00:24:08,000 --> 00:24:09,840
and

631
00:24:09,840 --> 00:24:11,919
and what's the idea

632
00:24:11,919 --> 00:24:13,360
yes so

633
00:24:13,360 --> 00:24:15,039
what's the idea of the encryption scheme

634
00:24:15,039 --> 00:24:16,720
or what city of the

635
00:24:16,720 --> 00:24:18,480
i guess um how do you use the

636
00:24:18,480 --> 00:24:20,720
information about the chapter to decrypt

637
00:24:20,720 --> 00:24:22,080
or not decrypt

638
00:24:22,080 --> 00:24:23,200
because i

639
00:24:23,200 --> 00:24:26,159
if you understand this should be a

640
00:24:26,159 --> 00:24:28,080
yeah so your construction is non-black

641
00:24:28,080 --> 00:24:29,520
books than in the

642
00:24:29,520 --> 00:24:31,520
chapter permutation

643
00:24:31,520 --> 00:24:33,120
no no the construction is black box on

644
00:24:33,120 --> 00:24:36,480
the tractor permutation so the idea is

645
00:24:36,480 --> 00:24:38,880
is that basically to encrypt you just uh

646
00:24:38,880 --> 00:24:39,919
use the

647
00:24:39,919 --> 00:24:40,880
um

648
00:24:40,880 --> 00:24:43,600
you take a value x and you use

649
00:24:43,600 --> 00:24:45,919
you know you evaluate x over g and you

650
00:24:45,919 --> 00:24:48,159
get the hardcore beat of x actually to

651
00:24:48,159 --> 00:24:49,760
be precise right and then you can use it

652
00:24:49,760 --> 00:24:52,240
to encrypt one bit for example okay so

653
00:24:52,240 --> 00:24:54,400
your cyber cybertex is like the arc or

654
00:24:54,400 --> 00:24:55,679
bit of uh

655
00:24:55,679 --> 00:24:58,960
of this value right x and uh you also

656
00:24:58,960 --> 00:25:00,400
send um

657
00:25:00,400 --> 00:25:03,039
you also send one y right and then the

658
00:25:03,039 --> 00:25:04,559
point is that if you have the trapdoor

659
00:25:04,559 --> 00:25:06,159
you can decrypt because

660
00:25:06,159 --> 00:25:08,000
you can right but if the function is not

661
00:25:08,000 --> 00:25:09,520
a permutation

662
00:25:09,520 --> 00:25:11,679
it's ambiguous like how to decrypt it

663
00:25:11,679 --> 00:25:13,760
because you have the value y

664
00:25:13,760 --> 00:25:15,279
and then you try to invert it and you

665
00:25:15,279 --> 00:25:16,640
get two values and then you don't know

666
00:25:16,640 --> 00:25:18,640
what is the right value

667
00:25:18,640 --> 00:25:20,240
that's more or less how it works yeah

668
00:25:20,240 --> 00:25:22,080
but it's fully black boxes and the use

669
00:25:22,080 --> 00:25:22,960
of the

670
00:25:22,960 --> 00:25:24,880
of the permutation yeah

671
00:25:24,880 --> 00:25:27,279
nice nice thank you

672
00:25:27,279 --> 00:25:30,799
all right let's thank michelle

673
00:25:32,799 --> 00:25:36,240
our next um paper is the cost of

674
00:25:36,240 --> 00:25:39,760
objectivity in security games on graphs

675
00:25:39,760 --> 00:25:43,360
and it's a joint work by treeton

676
00:25:43,360 --> 00:25:45,919
karen christoph and michael

677
00:25:45,919 --> 00:25:48,880
and karen will give the talk

678
00:25:48,880 --> 00:25:49,679
yes

679
00:25:49,679 --> 00:25:51,919
can you hear me well yes

680
00:25:51,919 --> 00:25:52,720
okay

681
00:25:52,720 --> 00:25:55,840
thank you for the introduction

682
00:25:55,840 --> 00:25:57,679
cryptography we often define security of

683
00:25:57,679 --> 00:25:59,279
a scheme by game between an adversary

684
00:25:59,279 --> 00:26:00,720
and the challenger

685
00:26:00,720 --> 00:26:02,400
and the current can you speak a bit

686
00:26:02,400 --> 00:26:05,600
louder a bit louder okay or maybe

687
00:26:05,600 --> 00:26:07,360
yeah

688
00:26:07,360 --> 00:26:09,760
so what i said in cryptography we often

689
00:26:09,760 --> 00:26:11,760
define security of a scheme by a game

690
00:26:11,760 --> 00:26:13,760
between an adversary and a challenger

691
00:26:13,760 --> 00:26:15,679
and to prove security of this scheme we

692
00:26:15,679 --> 00:26:17,120
then construct a reduction that

693
00:26:17,120 --> 00:26:18,480
simulates the challenger to the

694
00:26:18,480 --> 00:26:20,720
adversary and tries to extract some

695
00:26:20,720 --> 00:26:22,240
information from this interaction that

696
00:26:22,240 --> 00:26:23,520
helps it

697
00:26:23,520 --> 00:26:26,320
to break some heart problem pi

698
00:26:26,320 --> 00:26:28,320
and such a hard problem pi is very often

699
00:26:28,320 --> 00:26:29,600
defined

700
00:26:29,600 --> 00:26:31,120
through the security of some simple

701
00:26:31,120 --> 00:26:32,880
cryptographic primitive on which the

702
00:26:32,880 --> 00:26:35,600
scheme is built

703
00:26:35,840 --> 00:26:37,520
we then prove that if the adversary

704
00:26:37,520 --> 00:26:39,120
breaks the scheme with advantage of

705
00:26:39,120 --> 00:26:41,840
xylem that the reduction breaks

706
00:26:41,840 --> 00:26:43,360
the underlying heart problem with the

707
00:26:43,360 --> 00:26:45,360
advantage of xylem over loss and clearly

708
00:26:45,360 --> 00:26:47,120
the smaller these losses

709
00:26:47,120 --> 00:26:48,880
the stronger the security guarantees we

710
00:26:48,880 --> 00:26:51,440
obtain for our scheme

711
00:26:51,440 --> 00:26:53,039
in this talk we only consider fully

712
00:26:53,039 --> 00:26:56,080
black box reductions

713
00:26:56,320 --> 00:26:58,000
in many cases it is significantly

714
00:26:58,000 --> 00:27:00,159
simpler to construct such a reduction if

715
00:27:00,159 --> 00:27:01,760
the adversary's choices were known ahead

716
00:27:01,760 --> 00:27:03,279
of time

717
00:27:03,279 --> 00:27:05,120
we call such adversary selective or

718
00:27:05,120 --> 00:27:07,919
static adversaries

719
00:27:07,919 --> 00:27:09,760
in practice however we usually require

720
00:27:09,760 --> 00:27:11,520
strong adaptive

721
00:27:11,520 --> 00:27:13,679
security where the adversary can make

722
00:27:13,679 --> 00:27:15,760
all its choices adaptively depending on

723
00:27:15,760 --> 00:27:19,440
what it learned during the game so far

724
00:27:19,600 --> 00:27:21,919
in this talk we will discuss lower

725
00:27:21,919 --> 00:27:23,840
bounds on the security laws against such

726
00:27:23,840 --> 00:27:25,919
adaptive adversaries

727
00:27:25,919 --> 00:27:27,919
for schemes for which selective security

728
00:27:27,919 --> 00:27:32,000
could be proven only polynomial loss

729
00:27:32,480 --> 00:27:34,399
the games we consider are multi-round

730
00:27:34,399 --> 00:27:36,480
games that capture several existing

731
00:27:36,480 --> 00:27:37,919
constructions where the adversaries

732
00:27:37,919 --> 00:27:40,480
queries can be considered as edges of a

733
00:27:40,480 --> 00:27:42,320
graph

734
00:27:42,320 --> 00:27:43,919
one such game is called generalized

735
00:27:43,919 --> 00:27:45,520
selective decryption and it was

736
00:27:45,520 --> 00:27:47,440
introduced by panjuani in the setting of

737
00:27:47,440 --> 00:27:50,320
multicast encryption protocols

738
00:27:50,320 --> 00:27:52,320
this is in a secret key setting nodes

739
00:27:52,320 --> 00:27:54,480
represent keys and edges represent

740
00:27:54,480 --> 00:27:56,720
encryptions of secret keys under other

741
00:27:56,720 --> 00:27:59,520
secret keys

742
00:27:59,520 --> 00:28:00,960
while this game makes sense for

743
00:28:00,960 --> 00:28:04,000
arbitrary acyclic graphs

744
00:28:04,000 --> 00:28:06,480
in many applications or specific

745
00:28:06,480 --> 00:28:08,640
constructions the adversary would be

746
00:28:08,640 --> 00:28:10,240
restricted to query added paths or

747
00:28:10,240 --> 00:28:13,039
binary trees

748
00:28:13,200 --> 00:28:14,559
the next game we consider is the

749
00:28:14,559 --> 00:28:16,559
security of tricam which is a continuous

750
00:28:16,559 --> 00:28:19,520
group key agreement protocol

751
00:28:19,520 --> 00:28:21,120
that is currently discussed by the mls

752
00:28:21,120 --> 00:28:22,320
working group

753
00:28:22,320 --> 00:28:24,240
this is very similar to gst however in

754
00:28:24,240 --> 00:28:27,279
the public key setting

755
00:28:27,679 --> 00:28:29,919
and furthermore the adversary's queries

756
00:28:29,919 --> 00:28:34,240
are somewhat structured to form a tree

757
00:28:35,039 --> 00:28:36,480
the next game we consider is the

758
00:28:36,480 --> 00:28:38,240
security of the pure random function

759
00:28:38,240 --> 00:28:40,159
based on pseudorandom generators due to

760
00:28:40,159 --> 00:28:43,200
code right called was in micalli

761
00:28:43,200 --> 00:28:45,120
as a prefix constraint to the random

762
00:28:45,120 --> 00:28:47,039
function

763
00:28:47,039 --> 00:28:49,120
here nodes represent seeds and edges

764
00:28:49,120 --> 00:28:52,080
represent prg evaluations

765
00:28:52,080 --> 00:28:53,679
and the underlying graph structure is an

766
00:28:53,679 --> 00:28:58,120
exponential sized binary tree

767
00:28:58,240 --> 00:28:59,840
the last game we consider is the

768
00:28:59,840 --> 00:29:01,679
security of unidirectional proxy

769
00:29:01,679 --> 00:29:03,200
encryption schemes

770
00:29:03,200 --> 00:29:05,840
the nodes represent public key pairs

771
00:29:05,840 --> 00:29:07,760
and edges represent re-encryption keys

772
00:29:07,760 --> 00:29:10,799
issued during the game

773
00:29:10,880 --> 00:29:12,799
similar to the case of gsd the graph

774
00:29:12,799 --> 00:29:14,720
structure is not fixed but in most

775
00:29:14,720 --> 00:29:16,240
applications the adversary would be

776
00:29:16,240 --> 00:29:18,000
restricted to paths or binary trees so

777
00:29:18,000 --> 00:29:19,279
these settings are especially

778
00:29:19,279 --> 00:29:21,760
interesting

779
00:29:22,320 --> 00:29:24,000
for all these four games and various

780
00:29:24,000 --> 00:29:26,159
underlying graph structures we obtain

781
00:29:26,159 --> 00:29:28,159
lower bounds that almost match the best

782
00:29:28,159 --> 00:29:30,640
known upper bounds

783
00:29:30,640 --> 00:29:32,320
unfortunately however in the case of

784
00:29:32,320 --> 00:29:34,480
paths and binary trees

785
00:29:34,480 --> 00:29:36,640
our lower bounds only hold for so-called

786
00:29:36,640 --> 00:29:38,399
oblivious reductions

787
00:29:38,399 --> 00:29:40,880
where we call a reduction oblivious

788
00:29:40,880 --> 00:29:42,720
if it ignores

789
00:29:42,720 --> 00:29:44,159
what it learns about the adversarial

790
00:29:44,159 --> 00:29:46,399
structure

791
00:29:46,399 --> 00:29:48,320
about the adversary strategy and ignores

792
00:29:48,320 --> 00:29:49,760
this partial graph structure that it

793
00:29:49,760 --> 00:29:51,279
learns during the game so it behaves

794
00:29:51,279 --> 00:29:54,559
selective in some sense

795
00:29:54,559 --> 00:29:55,760
in the case where the underlying graph

796
00:29:55,760 --> 00:29:57,600
structure is a tree we do not have to

797
00:29:57,600 --> 00:29:59,200
make this restriction but we obtain

798
00:29:59,200 --> 00:30:01,039
lower bounds for arbitrary straight line

799
00:30:01,039 --> 00:30:02,640
reductions

800
00:30:02,640 --> 00:30:04,880
and our final result for proxy

801
00:30:04,880 --> 00:30:07,120
encryption on arbitrary acyclic graphs

802
00:30:07,120 --> 00:30:09,600
holds for arbitrary fully black box

803
00:30:09,600 --> 00:30:12,158
reductions

804
00:30:13,919 --> 00:30:16,159
while obliviousness is a rather strong

805
00:30:16,159 --> 00:30:18,000
restriction on the reduction let me

806
00:30:18,000 --> 00:30:20,240
mention that all known upper bounds have

807
00:30:20,240 --> 00:30:21,840
been derived through such oblivious

808
00:30:21,840 --> 00:30:24,399
reductions

809
00:30:25,039 --> 00:30:27,120
our main conceptual idea

810
00:30:27,120 --> 00:30:28,799
to derive our lower bounds is to

811
00:30:28,799 --> 00:30:30,320
introduce a builder pablo game that

812
00:30:30,320 --> 00:30:32,000
abstracts out all the combinatorics

813
00:30:32,000 --> 00:30:34,559
behind our proofs

814
00:30:34,559 --> 00:30:36,399
here the builder represents the

815
00:30:36,399 --> 00:30:38,000
adversary and the pablo plays the role

816
00:30:38,000 --> 00:30:40,159
of the reduction

817
00:30:40,159 --> 00:30:41,919
we then translate upper bounds on the

818
00:30:41,919 --> 00:30:43,760
pebbler's success probability into lower

819
00:30:43,760 --> 00:30:45,760
bounds on the security laws using oracle

820
00:30:45,760 --> 00:30:48,399
separation techniques

821
00:30:48,399 --> 00:30:50,080
so we construct an ideal basic

822
00:30:50,080 --> 00:30:51,679
cryptographic primitive in the case of

823
00:30:51,679 --> 00:30:54,320
gsd this would be an ideal ncbi secure

824
00:30:54,320 --> 00:30:57,039
security encryption scheme

825
00:30:57,039 --> 00:30:58,399
and we construct an inefficient

826
00:30:58,399 --> 00:31:00,799
adversary that simulates some builder

827
00:31:00,799 --> 00:31:03,840
strategy within the game

828
00:31:03,840 --> 00:31:05,519
breaks the scheme by brute force

829
00:31:05,519 --> 00:31:06,880
breaking the underlying cryptographic

830
00:31:06,880 --> 00:31:08,880
primitive

831
00:31:08,880 --> 00:31:10,640
recall we consider black box reduct

832
00:31:10,640 --> 00:31:12,480
fully black box reductions so we can

833
00:31:12,480 --> 00:31:16,159
consider inefficient adversaries

834
00:31:16,159 --> 00:31:18,159
and this fact that it can break the

835
00:31:18,159 --> 00:31:20,159
underlying primitive allows the

836
00:31:20,159 --> 00:31:21,519
adversary

837
00:31:21,519 --> 00:31:23,760
to map any pebbles any reduction

838
00:31:23,760 --> 00:31:25,440
strategy into a pebbler strategy in the

839
00:31:25,440 --> 00:31:28,240
buildup publicly

840
00:31:28,880 --> 00:31:32,000
let me conclude with some open problems

841
00:31:32,000 --> 00:31:33,840
first can we strengthen our lower bounds

842
00:31:33,840 --> 00:31:35,360
to hold also for rewinding or

843
00:31:35,360 --> 00:31:37,279
non-oblivious reductions or can we use

844
00:31:37,279 --> 00:31:38,960
these techniques to overcome our lower

845
00:31:38,960 --> 00:31:40,320
bounds

846
00:31:40,320 --> 00:31:41,679
recall that only in the setting of

847
00:31:41,679 --> 00:31:44,000
proxier encryption on complete tags we

848
00:31:44,000 --> 00:31:45,279
have a complete answer to these

849
00:31:45,279 --> 00:31:47,840
questions

850
00:31:47,919 --> 00:31:50,000
second of course it would be interesting

851
00:31:50,000 --> 00:31:52,000
to see which other multiround games can

852
00:31:52,000 --> 00:31:55,519
be captured by our builder pebbler game

853
00:31:55,519 --> 00:31:57,200
and finally

854
00:31:57,200 --> 00:31:58,880
whether one can use our

855
00:31:58,880 --> 00:32:00,960
idea of translating pebbling lower

856
00:32:00,960 --> 00:32:02,159
bounds

857
00:32:02,159 --> 00:32:04,640
into lower bounds and loss in adaptive

858
00:32:04,640 --> 00:32:05,840
security

859
00:32:05,840 --> 00:32:07,679
also in other settings

860
00:32:07,679 --> 00:32:10,000
such as constant run games like abe or

861
00:32:10,000 --> 00:32:11,600
garbling where the entire graph

862
00:32:11,600 --> 00:32:15,840
structure is known in the first round

863
00:32:16,159 --> 00:32:18,720
in the setting of yao's specific

864
00:32:18,720 --> 00:32:20,880
construction for grappling we know the

865
00:32:20,880 --> 00:32:22,480
answer is yes as we showed it crypto

866
00:32:22,480 --> 00:32:24,640
this year however we required very

867
00:32:24,640 --> 00:32:27,279
different techniques there

868
00:32:27,279 --> 00:32:28,640
please let me thank you for your

869
00:32:28,640 --> 00:32:30,240
attention and i would be happy to answer

870
00:32:30,240 --> 00:32:32,880
any questions

871
00:32:37,519 --> 00:32:41,559
any questions for karen

872
00:32:46,480 --> 00:32:47,919
all right looks like there are no

873
00:32:47,919 --> 00:32:49,360
questions in the chat

874
00:32:49,360 --> 00:32:51,360
thank you karen

875
00:32:51,360 --> 00:32:54,600
thank you

876
00:32:58,240 --> 00:32:59,360
all right so

877
00:32:59,360 --> 00:33:02,559
next talk is on concurrent composition

878
00:33:02,559 --> 00:33:05,279
of differential privacy by saliva dan in

879
00:33:05,279 --> 00:33:06,640
taiwan

880
00:33:06,640 --> 00:33:07,600
and

881
00:33:07,600 --> 00:33:10,720
chiang hao is going to give the talk

882
00:33:10,720 --> 00:33:12,799
uh okay um

883
00:33:12,799 --> 00:33:15,600
uh hi i'm tian hao i'm a phd student at

884
00:33:15,600 --> 00:33:17,600
princeton um today i'll talk about our

885
00:33:17,600 --> 00:33:19,440
work on the concurrent composition of

886
00:33:19,440 --> 00:33:22,399
differential privacy

887
00:33:22,640 --> 00:33:24,559
so differential privacy is uh dominates

888
00:33:24,559 --> 00:33:27,039
privacy notion nowadays um the main idea

889
00:33:27,039 --> 00:33:28,880
of differential privacy is to carefully

890
00:33:28,880 --> 00:33:31,360
randomize the algorithm um so that its

891
00:33:31,360 --> 00:33:33,279
output does not depend too much on any

892
00:33:33,279 --> 00:33:36,480
single individual in the data set um

893
00:33:36,480 --> 00:33:39,279
that is um and for for differentially

894
00:33:39,279 --> 00:33:41,679
private magnesium um the probability

895
00:33:41,679 --> 00:33:43,840
distribution of the the magnesium's

896
00:33:43,840 --> 00:33:46,000
output of the dataset should be nearly

897
00:33:46,000 --> 00:33:48,720
identical to the distribution of these

898
00:33:48,720 --> 00:33:51,440
outputs on the same set with any single

899
00:33:51,440 --> 00:33:53,440
individual's data being replaced

900
00:33:53,440 --> 00:33:55,279
and the distribution closeness is

901
00:33:55,279 --> 00:33:57,440
characterized by parameters epsilon and

902
00:33:57,440 --> 00:33:59,840
delta

903
00:34:00,559 --> 00:34:02,399
one of the most important properties of

904
00:34:02,399 --> 00:34:04,320
differential privacy is that it permits

905
00:34:04,320 --> 00:34:07,120
the analysis of cumulative privacy loss

906
00:34:07,120 --> 00:34:08,879
under the composition of multiple

907
00:34:08,879 --> 00:34:11,839
mechanisms if we run multiple distinct

908
00:34:11,839 --> 00:34:13,679
different private algorithms on the same

909
00:34:13,679 --> 00:34:15,760
data set the resulting composed

910
00:34:15,760 --> 00:34:18,159
algorithm is also differentially private

911
00:34:18,159 --> 00:34:20,960
with sound degradation in the parameters

912
00:34:20,960 --> 00:34:23,679
epsilon delta for privacy guarantee

913
00:34:23,679 --> 00:34:25,760
this property is especially important

914
00:34:25,760 --> 00:34:27,918
and useful since in practice we rarely

915
00:34:27,918 --> 00:34:29,918
want to release only one single

916
00:34:29,918 --> 00:34:31,918
statistic about dataset

917
00:34:31,918 --> 00:34:34,079
releasing many statistics may require

918
00:34:34,079 --> 00:34:35,839
running multiple and the different kinds

919
00:34:35,839 --> 00:34:37,599
of differentially private algorithms on

920
00:34:37,599 --> 00:34:39,679
the same database

921
00:34:39,679 --> 00:34:41,359
there are already many composition

922
00:34:41,359 --> 00:34:43,760
theorems exist in the literature and it

923
00:34:43,760 --> 00:34:45,440
has been shown how to compute the

924
00:34:45,440 --> 00:34:47,599
optimal bound for composing

925
00:34:47,599 --> 00:34:49,918
magnesiums

926
00:34:49,918 --> 00:34:51,839
of the existing composition theorems

927
00:34:51,839 --> 00:34:54,399
however focus on or implicitly assume

928
00:34:54,399 --> 00:34:57,119
that the underlying dp mechanisms are

929
00:34:57,119 --> 00:34:59,440
one-shot algorithms that only output one

930
00:34:59,440 --> 00:35:00,480
answer

931
00:35:00,480 --> 00:35:02,720
however many of the useful differential

932
00:35:02,720 --> 00:35:04,960
privacy primitives such as sparse vector

933
00:35:04,960 --> 00:35:06,800
technique are actually interactive

934
00:35:06,800 --> 00:35:09,280
mechanisms which allow one to ask an

935
00:35:09,280 --> 00:35:11,760
adaptive sequence of queries

936
00:35:11,760 --> 00:35:14,320
about the data set

937
00:35:14,320 --> 00:35:16,000
for instance sparse factor technique

938
00:35:16,000 --> 00:35:18,240
could potentially accept infinite amount

939
00:35:18,240 --> 00:35:20,400
of quarries while paying privacy cost

940
00:35:20,400 --> 00:35:22,320
only for quarries that are greater than

941
00:35:22,320 --> 00:35:24,320
the noises threshold

942
00:35:24,320 --> 00:35:25,440
um

943
00:35:25,440 --> 00:35:27,520
so we first formally defined the

944
00:35:27,520 --> 00:35:29,280
interactive differential privacy is a

945
00:35:29,280 --> 00:35:31,200
type of interactive protocol between the

946
00:35:31,200 --> 00:35:32,720
adversary and

947
00:35:32,720 --> 00:35:35,520
interactive magnets

948
00:35:35,520 --> 00:35:37,520
a natural question regarding interactive

949
00:35:37,520 --> 00:35:39,920
vp magnesium is whether the differential

950
00:35:39,920 --> 00:35:41,599
privacy is also preserved under

951
00:35:41,599 --> 00:35:43,760
composition however there could be more

952
00:35:43,760 --> 00:35:45,839
than one composition operations for

953
00:35:45,839 --> 00:35:48,320
interactive magnesiums

954
00:35:48,320 --> 00:35:50,320
the most the most straightforward one is

955
00:35:50,320 --> 00:35:52,240
sequential composition where the

956
00:35:52,240 --> 00:35:54,320
adversary's interactive session with one

957
00:35:54,320 --> 00:35:56,480
mechanism must be halted before it

958
00:35:56,480 --> 00:35:58,000
starts an interactive session with

959
00:35:58,000 --> 00:36:00,640
another mechanism in this case all of

960
00:36:00,640 --> 00:36:02,640
the composition theorems we discussed

961
00:36:02,640 --> 00:36:04,800
earlier still applies

962
00:36:04,800 --> 00:36:06,480
however

963
00:36:06,480 --> 00:36:08,720
a reality strike is that a single

964
00:36:08,720 --> 00:36:10,800
anniversary could interact with multiple

965
00:36:10,800 --> 00:36:12,880
mechanisms concurrently

966
00:36:12,880 --> 00:36:14,880
where different threads of the

967
00:36:14,880 --> 00:36:16,880
interactive sessions can be arbitrarily

968
00:36:16,880 --> 00:36:19,599
interleaved with each other that is

969
00:36:19,599 --> 00:36:21,839
although the response outputs by

970
00:36:21,839 --> 00:36:23,760
different magnets are generated

971
00:36:23,760 --> 00:36:27,119
independently and the adversary however

972
00:36:27,119 --> 00:36:29,839
may coordinate its actions it takes in

973
00:36:29,839 --> 00:36:32,320
various executions of interactive

974
00:36:32,320 --> 00:36:34,800
sessions and in particular its actions

975
00:36:34,800 --> 00:36:36,960
in one execution may also depend on

976
00:36:36,960 --> 00:36:41,040
messages it received in other executions

977
00:36:41,040 --> 00:36:42,960
unfortunately none of the existing

978
00:36:42,960 --> 00:36:44,079
composition

979
00:36:44,079 --> 00:36:46,880
theorems for non-interactive dp can be

980
00:36:46,880 --> 00:36:48,880
directly applied to the setting of

981
00:36:48,880 --> 00:36:52,000
concurrent compositions

982
00:36:52,240 --> 00:36:54,079
to the best of our knowledge this work

983
00:36:54,079 --> 00:36:56,720
is the first to tackle the problem of

984
00:36:56,720 --> 00:36:58,320
the concurrent composition of

985
00:36:58,320 --> 00:37:00,640
interactive differential privacy um here

986
00:37:00,640 --> 00:37:02,320
are our main results

987
00:37:02,320 --> 00:37:03,119
um

988
00:37:03,119 --> 00:37:05,119
we derive a bond that is similar to

989
00:37:05,119 --> 00:37:06,880
group privacy for the computer

990
00:37:06,880 --> 00:37:09,599
composition of pure interactive dp the

991
00:37:09,599 --> 00:37:11,760
privacy degrades at most linearly with

992
00:37:11,760 --> 00:37:13,680
the number of mechanisms concurrently

993
00:37:13,680 --> 00:37:16,320
executed which is same as non-interrupt

994
00:37:16,320 --> 00:37:18,480
dp the proof is based on a hybrid

995
00:37:18,480 --> 00:37:19,599
argument

996
00:37:19,599 --> 00:37:21,680
however for the concurrent composition

997
00:37:21,680 --> 00:37:24,160
of approximate interactive dp

998
00:37:24,160 --> 00:37:25,599
it is worse than even the basic

999
00:37:25,599 --> 00:37:28,320
composition theorem of non-interrupt dp

1000
00:37:28,320 --> 00:37:31,200
in the delta term

1001
00:37:31,359 --> 00:37:33,920
we then characterize a pure interactive

1002
00:37:33,920 --> 00:37:36,160
dp mechanism as a post-processing of

1003
00:37:36,160 --> 00:37:37,760
randomized response

1004
00:37:37,760 --> 00:37:40,240
which is a non-interactive mechanism and

1005
00:37:40,240 --> 00:37:42,560
obtains the optimal privacy bound for

1006
00:37:42,560 --> 00:37:45,119
the composition of pure interrupt dp by

1007
00:37:45,119 --> 00:37:47,040
taking the optimal composition of

1008
00:37:47,040 --> 00:37:49,040
non-interactive differential privacy

1009
00:37:49,040 --> 00:37:51,280
since we know that dp is closed under

1010
00:37:51,280 --> 00:37:53,920
post-processing

1011
00:37:53,920 --> 00:37:56,160
um unfortunately we still don't know

1012
00:37:56,160 --> 00:37:58,240
much about the the computer composition

1013
00:37:58,240 --> 00:38:00,640
of approximate interactive dp

1014
00:38:00,640 --> 00:38:02,720
we believe the bond we got are far from

1015
00:38:02,720 --> 00:38:05,200
the correct answer based on computer

1016
00:38:05,200 --> 00:38:07,359
simulation we conjuncture that optimal

1017
00:38:07,359 --> 00:38:08,880
composition bound

1018
00:38:08,880 --> 00:38:12,880
may may also hold for approximate dp

1019
00:38:12,880 --> 00:38:16,359
yeah thank you

1020
00:38:21,119 --> 00:38:22,480
you can help

1021
00:38:22,480 --> 00:38:25,359
is there any questions

1022
00:38:30,240 --> 00:38:32,320
okay so we have no questions from the

1023
00:38:32,320 --> 00:38:34,079
chat

1024
00:38:34,079 --> 00:38:37,359
but i think you can now again

1025
00:38:41,040 --> 00:38:42,839
next talk is on the

1026
00:38:42,839 --> 00:38:45,599
irreplaceability of global setups

1027
00:38:45,599 --> 00:38:48,960
or how not to use a global ledger by

1028
00:38:48,960 --> 00:38:50,800
christian baderster

1029
00:38:50,800 --> 00:38:54,480
sorry julia jesse in basilicas and julia

1030
00:38:54,480 --> 00:38:57,440
is going to give the talk

1031
00:38:58,320 --> 00:39:01,800
thanks everybody

1032
00:39:05,280 --> 00:39:08,240
okay can you see the

1033
00:39:08,320 --> 00:39:10,960
you'll actually need to um under display

1034
00:39:10,960 --> 00:39:13,680
settings up at the top you will need to

1035
00:39:13,680 --> 00:39:17,440
i think it says reverse display

1036
00:39:24,720 --> 00:39:27,440
swap swap presenter sorry

1037
00:39:27,440 --> 00:39:29,040
ah

1038
00:39:29,040 --> 00:39:30,720
yes how does this look

1039
00:39:30,720 --> 00:39:32,640
that looks good for us

1040
00:39:32,640 --> 00:39:37,680
okay so now my mouse is a bit gone but

1041
00:39:37,680 --> 00:39:39,440
ah okay

1042
00:39:39,440 --> 00:39:40,839
can you see the laser

1043
00:39:40,839 --> 00:39:42,640
pointer yes

1044
00:39:42,640 --> 00:39:45,119
okay awesome sorry

1045
00:39:45,119 --> 00:39:47,760
okay so hey everybody um this paper is

1046
00:39:47,760 --> 00:39:50,480
about uh pitfalls in analyzing the

1047
00:39:50,480 --> 00:39:52,640
security of protocols that run in

1048
00:39:52,640 --> 00:39:54,640
concurrent systems

1049
00:39:54,640 --> 00:39:56,720
so let's assume we want to capture the

1050
00:39:56,720 --> 00:39:59,440
security of a protocol run between

1051
00:39:59,440 --> 00:40:01,839
uh alice and carol that requires some

1052
00:40:01,839 --> 00:40:03,359
sort of

1053
00:40:03,359 --> 00:40:04,880
protocol setup

1054
00:40:04,880 --> 00:40:06,400
for example such as a public key

1055
00:40:06,400 --> 00:40:08,160
infrastructure

1056
00:40:08,160 --> 00:40:10,400
in our work we focus on setups that are

1057
00:40:10,400 --> 00:40:12,720
modeled as global meaning that these

1058
00:40:12,720 --> 00:40:15,520
setups are not exclusively available to

1059
00:40:15,520 --> 00:40:18,400
um this one protocol instance but it can

1060
00:40:18,400 --> 00:40:19,839
be they can be accessed by other

1061
00:40:19,839 --> 00:40:22,079
protocols as well

1062
00:40:22,079 --> 00:40:24,960
once a um setup is deployed in practice

1063
00:40:24,960 --> 00:40:27,119
actually it is not well we don't really

1064
00:40:27,119 --> 00:40:29,680
have any control over how users use it

1065
00:40:29,680 --> 00:40:32,000
for example um

1066
00:40:32,000 --> 00:40:34,240
a user might use a private key obtained

1067
00:40:34,240 --> 00:40:36,880
from this pki for more than just let's

1068
00:40:36,880 --> 00:40:39,680
say ecdsa signing

1069
00:40:39,680 --> 00:40:41,520
so to summarize global setups are in

1070
00:40:41,520 --> 00:40:44,640
many cases a way more realistic modeling

1071
00:40:44,640 --> 00:40:48,240
than than local ones

1072
00:40:48,480 --> 00:40:49,680
okay so in

1073
00:40:49,680 --> 00:40:52,560
in recent years blockchains have arised

1074
00:40:52,560 --> 00:40:55,359
providing us with publicly

1075
00:40:55,359 --> 00:40:57,040
accessible or privately accessible

1076
00:40:57,040 --> 00:40:59,520
immutable transaction ledgers there are

1077
00:40:59,520 --> 00:41:01,440
many applications for this new type of

1078
00:41:01,440 --> 00:41:03,599
data structure some more serious some

1079
00:41:03,599 --> 00:41:04,800
less serious

1080
00:41:04,800 --> 00:41:06,480
and if you check the literature many of

1081
00:41:06,480 --> 00:41:08,720
these applications have a

1082
00:41:08,720 --> 00:41:11,440
security analysis in a simulation based

1083
00:41:11,440 --> 00:41:13,920
framework carried out with respect to a

1084
00:41:13,920 --> 00:41:16,960
global ideal ledger functionality

1085
00:41:16,960 --> 00:41:18,319
now the whole point of the blockchain

1086
00:41:18,319 --> 00:41:22,240
era is to not implement such an ideal

1087
00:41:22,240 --> 00:41:23,920
ledger functionality by a trusted

1088
00:41:23,920 --> 00:41:27,280
authority but by a decentralized and

1089
00:41:27,280 --> 00:41:29,200
interactive

1090
00:41:29,200 --> 00:41:31,440
blockchain protocol emulating the

1091
00:41:31,440 --> 00:41:33,280
trusted authority right

1092
00:41:33,280 --> 00:41:36,240
so if we want to

1093
00:41:36,240 --> 00:41:38,079
want these proven security guarantees in

1094
00:41:38,079 --> 00:41:39,760
the literature to be meaningful in

1095
00:41:39,760 --> 00:41:42,319
practice we need to be able to replace

1096
00:41:42,319 --> 00:41:44,240
the global ideal ledger functionality in

1097
00:41:44,240 --> 00:41:45,839
these statements by one of these

1098
00:41:45,839 --> 00:41:48,560
protocols

1099
00:41:48,560 --> 00:41:51,119
so in this paper we uh investigate

1100
00:41:51,119 --> 00:41:53,520
whether we can replace a global setup

1101
00:41:53,520 --> 00:41:54,880
such as

1102
00:41:54,880 --> 00:41:55,680
a

1103
00:41:55,680 --> 00:41:58,160
transaction ledger with another protocol

1104
00:41:58,160 --> 00:41:59,760
while maintaining

1105
00:41:59,760 --> 00:42:03,599
the already proven security guarantees

1106
00:42:03,599 --> 00:42:05,280
okay so let's look at

1107
00:42:05,280 --> 00:42:06,800
what happens

1108
00:42:06,800 --> 00:42:09,200
if we attempt to replace a global setup

1109
00:42:09,200 --> 00:42:12,400
let's say we designed a protocol row

1110
00:42:12,400 --> 00:42:14,400
for online poker and we have proven that

1111
00:42:14,400 --> 00:42:16,319
it securely realizes some ideal

1112
00:42:16,319 --> 00:42:18,640
functionality of poker

1113
00:42:18,640 --> 00:42:20,000
i'm assuming that the parties have

1114
00:42:20,000 --> 00:42:22,400
access to a global ideal legendary

1115
00:42:22,400 --> 00:42:25,040
letter here

1116
00:42:25,119 --> 00:42:27,359
if we now replace the ideal ledger by

1117
00:42:27,359 --> 00:42:29,200
the bitcoin blockchain

1118
00:42:29,200 --> 00:42:31,119
for example in our security statement

1119
00:42:31,119 --> 00:42:32,880
the following nasty thing happens i want

1120
00:42:32,880 --> 00:42:35,520
you to look at the the interface of the

1121
00:42:35,520 --> 00:42:39,200
simulator here in the ideal world

1122
00:42:39,359 --> 00:42:41,280
we see that the interface

1123
00:42:41,280 --> 00:42:43,920
changes from the one at the g ledger

1124
00:42:43,920 --> 00:42:45,520
functionality to the one at the bitcoin

1125
00:42:45,520 --> 00:42:47,359
protocol right

1126
00:42:47,359 --> 00:42:49,280
now the bitcoin blockchain is known to

1127
00:42:49,280 --> 00:42:51,440
securely realize an ideal ledger

1128
00:42:51,440 --> 00:42:53,280
functionality meaning that there are

1129
00:42:53,280 --> 00:42:56,160
less attacks on the bitcoin protocol

1130
00:42:56,160 --> 00:42:57,680
than on g ledger

1131
00:42:57,680 --> 00:42:59,680
the interface of the simulator under

1132
00:42:59,680 --> 00:43:02,480
replacement simply shrinks shrinks here

1133
00:43:02,480 --> 00:43:04,560
and the simulator actually might run

1134
00:43:04,560 --> 00:43:07,200
into failure

1135
00:43:08,079 --> 00:43:10,800
okay so failure of the simulator under

1136
00:43:10,800 --> 00:43:13,440
replacement is clearly not a nice thing

1137
00:43:13,440 --> 00:43:16,000
right it means essentially that um our

1138
00:43:16,000 --> 00:43:17,839
security proof does not carry over to

1139
00:43:17,839 --> 00:43:20,319
the poker protocol as we would deploy it

1140
00:43:20,319 --> 00:43:21,920
in practice in practice right so

1141
00:43:21,920 --> 00:43:25,800
accessing the bitcoin blockchain

1142
00:43:26,560 --> 00:43:29,119
okay so this is a problem uh in 2014

1143
00:43:29,119 --> 00:43:31,920
canadian uh demonstrated that um

1144
00:43:31,920 --> 00:43:33,839
that such simulation failure can

1145
00:43:33,839 --> 00:43:36,319
essentially be avoided if the replaced

1146
00:43:36,319 --> 00:43:37,839
protocol

1147
00:43:37,839 --> 00:43:40,000
is essentially equivalent to the ideal

1148
00:43:40,000 --> 00:43:41,280
functionality in particular the

1149
00:43:41,280 --> 00:43:43,280
adversarial interface

1150
00:43:43,280 --> 00:43:45,119
but of course this has quite limited

1151
00:43:45,119 --> 00:43:47,440
applications and for example it does not

1152
00:43:47,440 --> 00:43:50,560
work to replace a non-equivalent

1153
00:43:50,560 --> 00:43:53,200
um by a non-equivalent uh

1154
00:43:53,200 --> 00:43:55,200
sorry the ledger by a non-equivalent

1155
00:43:55,200 --> 00:43:57,200
blockchain protocol

1156
00:43:57,200 --> 00:43:59,599
so in our work we find essentially more

1157
00:43:59,599 --> 00:44:02,079
ways than equivalency to keep security

1158
00:44:02,079 --> 00:44:04,000
statements valid under replacement of

1159
00:44:04,000 --> 00:44:05,839
the global setup and the intuition

1160
00:44:05,839 --> 00:44:08,079
should be quite clear from the from the

1161
00:44:08,079 --> 00:44:09,440
kind of animation that i showed in the

1162
00:44:09,440 --> 00:44:10,640
last slide

1163
00:44:10,640 --> 00:44:12,720
um the intuition is that we can replace

1164
00:44:12,720 --> 00:44:14,720
whenever the simulation is not disturbed

1165
00:44:14,720 --> 00:44:17,599
by the replacement

1166
00:44:17,599 --> 00:44:19,760
okay so our first composition theorem

1167
00:44:19,760 --> 00:44:21,760
for replacing global setups works for

1168
00:44:21,760 --> 00:44:24,319
what we call agnostic simulations this

1169
00:44:24,319 --> 00:44:26,319
is a simulator who

1170
00:44:26,319 --> 00:44:27,839
essentially only

1171
00:44:27,839 --> 00:44:30,319
accesses the ledger as an honest party

1172
00:44:30,319 --> 00:44:32,000
would do right so this means the

1173
00:44:32,000 --> 00:44:34,240
simulator of the security proof

1174
00:44:34,240 --> 00:44:38,640
for our poker protocol here so this guy

1175
00:44:38,640 --> 00:44:41,119
it essentially just transmits um submits

1176
00:44:41,119 --> 00:44:43,359
transactions um on behalf of alice and

1177
00:44:43,359 --> 00:44:46,000
carol to the ledger right so for global

1178
00:44:46,000 --> 00:44:47,920
setups which do not even provide an

1179
00:44:47,920 --> 00:44:50,560
extra adversarial interface this theorem

1180
00:44:50,560 --> 00:44:52,800
essentially yields black box composition

1181
00:44:52,800 --> 00:44:54,319
meaning that we do not even have to look

1182
00:44:54,319 --> 00:44:56,000
into the simulator and can directly

1183
00:44:56,000 --> 00:44:58,800
replace the global setup with any

1184
00:44:58,800 --> 00:45:02,400
blockchain protocol realizing it

1185
00:45:02,560 --> 00:45:04,319
um the second composite composition

1186
00:45:04,319 --> 00:45:06,400
theorem uh for replacing global setups

1187
00:45:06,400 --> 00:45:09,599
that we came up with can capture um an

1188
00:45:09,599 --> 00:45:10,880
even broader setting but its

1189
00:45:10,880 --> 00:45:13,520
preconditions are more tedious to check

1190
00:45:13,520 --> 00:45:15,760
we define a set of so-called admissible

1191
00:45:15,760 --> 00:45:17,920
attacks which are attacks that are

1192
00:45:17,920 --> 00:45:21,280
allowed on both the global ledger

1193
00:45:21,280 --> 00:45:23,599
functionality and on bitcoin

1194
00:45:23,599 --> 00:45:26,160
so for example it might be possible for

1195
00:45:26,160 --> 00:45:28,400
a network adversary to postpone

1196
00:45:28,400 --> 00:45:30,079
publishing of an honest transaction in

1197
00:45:30,079 --> 00:45:32,800
bitcoin by one block right

1198
00:45:32,800 --> 00:45:34,800
and hence we can unlock this kind of

1199
00:45:34,800 --> 00:45:39,119
attack also for our poker simulator

1200
00:45:40,000 --> 00:45:41,839
okay so the flip side of our work is

1201
00:45:41,839 --> 00:45:45,119
that these theorems these two

1202
00:45:45,119 --> 00:45:46,400
already make it quite clear that

1203
00:45:46,400 --> 00:45:48,880
replacement of a um

1204
00:45:48,880 --> 00:45:51,680
of a global setup in security statements

1205
00:45:51,680 --> 00:45:54,240
really hinges on

1206
00:45:54,240 --> 00:45:56,560
well on the optimality of the simulation

1207
00:45:56,560 --> 00:45:58,960
so to say it very clear a security proof

1208
00:45:58,960 --> 00:46:02,240
with a simulator who overly exploits the

1209
00:46:02,240 --> 00:46:03,920
adversarial interface of the global

1210
00:46:03,920 --> 00:46:06,640
setup will most likely not survive

1211
00:46:06,640 --> 00:46:10,078
replacement of the global setup

1212
00:46:10,560 --> 00:46:11,760
okay so i hope i could get you

1213
00:46:11,760 --> 00:46:13,040
interested in having a look at the

1214
00:46:13,040 --> 00:46:14,960
extended talk and also please check out

1215
00:46:14,960 --> 00:46:17,520
the paper which is equipped with lots of

1216
00:46:17,520 --> 00:46:20,319
fun examples on how to use and how to

1217
00:46:20,319 --> 00:46:22,640
not use global setups that you still

1218
00:46:22,640 --> 00:46:24,800
have to replace

1219
00:46:24,800 --> 00:46:27,800
thanks

1220
00:46:31,760 --> 00:46:33,440
um

1221
00:46:33,440 --> 00:46:37,680
thank you julia do we have any question

1222
00:46:40,079 --> 00:46:43,560
here's some questions

1223
00:46:43,599 --> 00:46:46,160
maybe i have a quick question

1224
00:46:46,160 --> 00:46:47,920
so

1225
00:46:47,920 --> 00:46:49,520
so would you say there is a way to

1226
00:46:49,520 --> 00:46:54,319
define the global ledger that is um

1227
00:46:54,319 --> 00:46:56,560
safe so that will work for any that

1228
00:46:56,560 --> 00:46:58,720
touch of the simulator cannot exploit it

1229
00:46:58,720 --> 00:47:00,400
whatever that means

1230
00:47:00,400 --> 00:47:02,319
that's that's a very good question and i

1231
00:47:02,319 --> 00:47:03,599
mean that's a question that we asked

1232
00:47:03,599 --> 00:47:05,760
ourselves um the thing is that you have

1233
00:47:05,760 --> 00:47:09,119
there's another side to

1234
00:47:09,119 --> 00:47:10,800
to what i just said because you also

1235
00:47:10,800 --> 00:47:13,200
need to prove that the bitcoin protocol

1236
00:47:13,200 --> 00:47:16,079
realizes that ledger right and you don't

1237
00:47:16,079 --> 00:47:16,960
want

1238
00:47:16,960 --> 00:47:19,440
this uh ideal ledger functionality to be

1239
00:47:19,440 --> 00:47:20,960
really close to the bitcoin protocol

1240
00:47:20,960 --> 00:47:22,319
because otherwise it will get like

1241
00:47:22,319 --> 00:47:24,400
extremely long right

1242
00:47:24,400 --> 00:47:25,920
so you want this ideological

1243
00:47:25,920 --> 00:47:28,720
functionality to be some abstraction

1244
00:47:28,720 --> 00:47:30,800
of the bitcoin protocol meaning that you

1245
00:47:30,800 --> 00:47:32,800
need to allow the adversary for example

1246
00:47:32,800 --> 00:47:35,119
to do some reordering right so it's

1247
00:47:35,119 --> 00:47:36,720
always there's always these two sides so

1248
00:47:36,720 --> 00:47:38,960
on the one hand we want to simplify the

1249
00:47:38,960 --> 00:47:41,440
proof of secure realization of the ideal

1250
00:47:41,440 --> 00:47:44,000
letter on the other hand if we allow too

1251
00:47:44,000 --> 00:47:46,559
much and this is exploited too much

1252
00:47:46,559 --> 00:47:47,680
in the

1253
00:47:47,680 --> 00:47:49,119
in the simulation of the application

1254
00:47:49,119 --> 00:47:52,000
protocol then i mean replacement does

1255
00:47:52,000 --> 00:47:53,599
not go through right

1256
00:47:53,599 --> 00:47:56,400
and so yeah what you say is is very

1257
00:47:56,400 --> 00:47:58,400
valid for the letter i cannot i mean we

1258
00:47:58,400 --> 00:48:00,240
cannot really really answer this

1259
00:48:00,240 --> 00:48:01,680
question in a nice way because there's

1260
00:48:01,680 --> 00:48:03,839
really these two sides

1261
00:48:03,839 --> 00:48:06,480
and from from what we um so we checked a

1262
00:48:06,480 --> 00:48:09,520
lot of uh um a lot of literature

1263
00:48:09,520 --> 00:48:11,920
um and it seems that most of the

1264
00:48:11,920 --> 00:48:14,559
most of the application um

1265
00:48:14,559 --> 00:48:17,520
applications do not overly exploit um

1266
00:48:17,520 --> 00:48:19,200
these adversarial interfaces with only

1267
00:48:19,200 --> 00:48:22,240
very few exceptions

1268
00:48:22,640 --> 00:48:23,760
okay

1269
00:48:23,760 --> 00:48:26,559
thank you thank you thank you again

1270
00:48:26,559 --> 00:48:28,960
thank you

1271
00:48:30,559 --> 00:48:33,680
my last talk of the session

1272
00:48:33,680 --> 00:48:36,160
a polynomial time targeted attacks on

1273
00:48:36,160 --> 00:48:38,480
coin tossing for any number of

1274
00:48:38,480 --> 00:48:39,920
corruptions

1275
00:48:39,920 --> 00:48:42,640
this is a joint work by omit

1276
00:48:42,640 --> 00:48:44,559
saeed muhammad

1277
00:48:44,559 --> 00:48:46,480
and g is gonna

1278
00:48:46,480 --> 00:48:48,640
give the talk

1279
00:48:48,640 --> 00:48:50,000
yeah

1280
00:48:50,000 --> 00:48:51,440
thank you

1281
00:48:51,440 --> 00:48:53,280
so um

1282
00:48:53,280 --> 00:48:55,520
hello everyone welcome to the talk uh i

1283
00:48:55,520 --> 00:48:58,400
am from university virginia today can

1284
00:48:58,400 --> 00:49:01,119
you speak louder or closer to the mic

1285
00:49:01,119 --> 00:49:03,200
okay

1286
00:49:03,200 --> 00:49:04,720
is that better

1287
00:49:04,720 --> 00:49:07,359
slightly better

1288
00:49:07,359 --> 00:49:09,598
okay

1289
00:49:12,400 --> 00:49:15,520
i mean actually maybe i can increase the

1290
00:49:15,520 --> 00:49:18,079
the speakers here

1291
00:49:18,079 --> 00:49:19,839
okay try now

1292
00:49:19,839 --> 00:49:23,279
okay uh hello everyone

1293
00:49:24,240 --> 00:49:27,680
okay let's let's continue like this

1294
00:49:27,680 --> 00:49:29,839
so hello everyone welcome to my talk i

1295
00:49:29,839 --> 00:49:31,839
am gigon from university of virginia

1296
00:49:31,839 --> 00:49:33,119
today i will present our paper

1297
00:49:33,119 --> 00:49:35,119
polynomial time privacy attack on coin

1298
00:49:35,119 --> 00:49:37,359
tossing for any number of corruptions

1299
00:49:37,359 --> 00:49:39,040
and this is drawing work with amir

1300
00:49:39,040 --> 00:49:41,359
saying

1301
00:49:42,839 --> 00:49:45,280
muhammad this talk is about collective

1302
00:49:45,280 --> 00:49:47,359
coin tossing so let's see this example

1303
00:49:47,359 --> 00:49:49,680
of for such protocol now here are n

1304
00:49:49,680 --> 00:49:51,520
parties and each of them sends out a

1305
00:49:51,520 --> 00:49:53,040
single message

1306
00:49:53,040 --> 00:49:55,280
and eventually the protocol takes all

1307
00:49:55,280 --> 00:49:57,280
these messages and returns the output

1308
00:49:57,280 --> 00:50:00,640
bit b which equals one with probably mu

1309
00:50:00,640 --> 00:50:02,640
note that although in general parties

1310
00:50:02,640 --> 00:50:04,640
can send more than one messages in this

1311
00:50:04,640 --> 00:50:06,400
work we focus on attacking this single

1312
00:50:06,400 --> 00:50:08,559
message protocol as we will see is

1313
00:50:08,559 --> 00:50:10,559
already very general and leads to

1314
00:50:10,559 --> 00:50:13,200
interesting applications

1315
00:50:13,200 --> 00:50:15,520
here we define the attack model we focus

1316
00:50:15,520 --> 00:50:17,520
on what we call targeted k replacing

1317
00:50:17,520 --> 00:50:18,480
attacks

1318
00:50:18,480 --> 00:50:20,240
targeted means the addresser prefers

1319
00:50:20,240 --> 00:50:22,880
output 1 and k replacing means that it

1320
00:50:22,880 --> 00:50:25,359
can corrupt and replace up to k messages

1321
00:50:25,359 --> 00:50:27,920
within choices after seeing the original

1322
00:50:27,920 --> 00:50:30,160
values chosen by these parties so for

1323
00:50:30,160 --> 00:50:33,200
example in this protocol at round one

1324
00:50:33,200 --> 00:50:35,440
party one gives this message omega one

1325
00:50:35,440 --> 00:50:37,359
but adversary after seeing this omega

1326
00:50:37,359 --> 00:50:39,520
one decided to replace it to omega 1

1327
00:50:39,520 --> 00:50:42,720
prime and add round 2 part 2 prepares

1328
00:50:42,720 --> 00:50:44,880
this omega 2 and

1329
00:50:44,880 --> 00:50:47,200
it can depend on the previous omega 1

1330
00:50:47,200 --> 00:50:48,960
prime but this time the address will

1331
00:50:48,960 --> 00:50:51,040
decide not to replace this message and

1332
00:50:51,040 --> 00:50:53,599
finally at round n after

1333
00:50:53,599 --> 00:50:55,680
party end prepare to send this omega

1334
00:50:55,680 --> 00:50:56,559
message

1335
00:50:56,559 --> 00:50:58,240
it could depend on all the previous

1336
00:50:58,240 --> 00:51:00,480
broadcast messages and the adversary

1337
00:51:00,480 --> 00:51:02,960
changes the message to omega n prime the

1338
00:51:02,960 --> 00:51:04,880
success of this address is measured by

1339
00:51:04,880 --> 00:51:06,400
how much it can increase the probability

1340
00:51:06,400 --> 00:51:07,680
of putting one

1341
00:51:07,680 --> 00:51:10,400
and more formally

1342
00:51:10,400 --> 00:51:12,240
the gain is

1343
00:51:12,240 --> 00:51:14,240
mu prime minus mu where mu prime is the

1344
00:51:14,240 --> 00:51:15,920
probability of b equals one after the

1345
00:51:15,920 --> 00:51:17,599
attack and mu is the probability of b

1346
00:51:17,599 --> 00:51:20,880
equals one without the attack

1347
00:51:21,440 --> 00:51:23,359
assume we have a probable pie between n

1348
00:51:23,359 --> 00:51:26,079
parties and product of b equals one

1349
00:51:26,079 --> 00:51:28,160
is mu we now ask the following question

1350
00:51:28,160 --> 00:51:30,319
with a fixed budget k how much gain can

1351
00:51:30,319 --> 00:51:32,480
already achieve we studied the question

1352
00:51:32,480 --> 00:51:35,040
for two classes of particles on the

1353
00:51:35,040 --> 00:51:36,400
first class

1354
00:51:36,400 --> 00:51:38,640
message are uniform binary and on the

1355
00:51:38,640 --> 00:51:40,800
second class messages are arbitrarily

1356
00:51:40,800 --> 00:51:42,880
long the first class is clearly a

1357
00:51:42,880 --> 00:51:45,839
special case of the second class

1358
00:51:45,839 --> 00:51:47,839
now suppose beta tn is the probability

1359
00:51:47,839 --> 00:51:49,520
of hamming ball which is simply the

1360
00:51:49,520 --> 00:51:51,280
probability of the summation of uniform

1361
00:51:51,280 --> 00:51:53,359
binary bits

1362
00:51:53,359 --> 00:51:56,960
omega 1 or 2 omega n

1363
00:51:58,000 --> 00:52:00,079
for the case of uniform binary messages

1364
00:52:00,079 --> 00:52:01,359
make sure that for the original

1365
00:52:01,359 --> 00:52:04,079
probability mu equals to beta tn even

1366
00:52:04,079 --> 00:52:06,240
polynomial time online attacks can

1367
00:52:06,240 --> 00:52:08,240
achieve probability mu prime which is

1368
00:52:08,240 --> 00:52:11,040
equals to the beta t minus kl a bigger

1369
00:52:11,040 --> 00:52:13,520
hummingbird this implies the threshold

1370
00:52:13,520 --> 00:52:15,280
protocol is optimal for hamming ball

1371
00:52:15,280 --> 00:52:17,920
probabilities and as a result we obtain

1372
00:52:17,920 --> 00:52:20,559
this computational and online variant of

1373
00:52:20,559 --> 00:52:22,800
harper's vertex as a parametric

1374
00:52:22,800 --> 00:52:24,240
inequality

1375
00:52:24,240 --> 00:52:26,319
and for the case of arbitrary message

1376
00:52:26,319 --> 00:52:28,079
length we show that polynomial time

1377
00:52:28,079 --> 00:52:29,760
online attacks can achieve this gain

1378
00:52:29,760 --> 00:52:32,720
omega mu times k over root n and this

1379
00:52:32,720 --> 00:52:34,640
implies that this threshold protocol is

1380
00:52:34,640 --> 00:52:37,200
optimal up to a constant for constant mu

1381
00:52:37,200 --> 00:52:39,520
for large messages as well

1382
00:52:39,520 --> 00:52:41,599
and because of allowing these large

1383
00:52:41,599 --> 00:52:43,760
messages as a application this result

1384
00:52:43,760 --> 00:52:45,680
allows one to obtain this targeted

1385
00:52:45,680 --> 00:52:47,040
poisoning attack on deterministic

1386
00:52:47,040 --> 00:52:49,040
machine learning learners

1387
00:52:49,040 --> 00:52:51,440
with the small budget kick when

1388
00:52:51,440 --> 00:52:53,839
that is small end when any size or

1389
00:52:53,839 --> 00:52:56,319
training data set

1390
00:52:56,319 --> 00:52:58,160
and for the case of uniform binary

1391
00:52:58,160 --> 00:52:59,280
messages

1392
00:52:59,280 --> 00:53:01,760
as a related work this lead testing at

1393
00:53:01,760 --> 00:53:04,400
all 1989 paper showed that the stress

1394
00:53:04,400 --> 00:53:06,240
hold functions are optimal for a weaker

1395
00:53:06,240 --> 00:53:08,079
addressing model in which the addresses

1396
00:53:08,079 --> 00:53:09,920
cannot see the message before

1397
00:53:09,920 --> 00:53:12,160
deciding to make these changes

1398
00:53:12,160 --> 00:53:14,800
and their attack is not for normal time

1399
00:53:14,800 --> 00:53:16,800
for arbitrary messages a series of work

1400
00:53:16,800 --> 00:53:19,599
starting with a client or show that uh

1401
00:53:19,599 --> 00:53:22,000
how to obtain for normal time attacks

1402
00:53:22,000 --> 00:53:24,240
using larger budget which were by large

1403
00:53:24,240 --> 00:53:26,480
will mean that this k equals to omega

1404
00:53:26,480 --> 00:53:29,520
root n instead uh there are there are

1405
00:53:29,520 --> 00:53:32,319
analysis use this works uh lead to no

1406
00:53:32,319 --> 00:53:34,960
gain when k is a small or

1407
00:53:34,960 --> 00:53:36,000
root n

1408
00:53:36,000 --> 00:53:38,640
however know that uh

1409
00:53:38,640 --> 00:53:40,240
here we want to understand ultimate

1410
00:53:40,240 --> 00:53:43,680
attacks for every part possible k

1411
00:53:43,680 --> 00:53:46,400
we now describe some ideas between

1412
00:53:46,400 --> 00:53:49,119
sorry we know describe some idea behind

1413
00:53:49,119 --> 00:53:51,119
the proofs of our two results starting

1414
00:53:51,119 --> 00:53:54,079
with the case of uniform binary messages

1415
00:53:54,079 --> 00:53:56,720
now with this describe our first result

1416
00:53:56,720 --> 00:53:57,920
in more

1417
00:53:57,920 --> 00:54:00,640
details uh suppose the messages are all

1418
00:54:00,640 --> 00:54:02,880
uniformly memory

1419
00:54:02,880 --> 00:54:05,200
consider this t threshold particle in

1420
00:54:05,200 --> 00:54:07,839
which parties let this output be b to be

1421
00:54:07,839 --> 00:54:09,920
1 if the sum of the bits is larger than

1422
00:54:09,920 --> 00:54:11,119
t

1423
00:54:11,119 --> 00:54:13,440
consider a more powerful attack which we

1424
00:54:13,440 --> 00:54:16,079
call offline so it will to say all the

1425
00:54:16,079 --> 00:54:18,800
messages and then make replacement

1426
00:54:18,800 --> 00:54:20,800
it is easy to see such attacks can

1427
00:54:20,800 --> 00:54:22,319
increase the probability of the output

1428
00:54:22,319 --> 00:54:24,880
one to a larger hummingbird and harper's

1429
00:54:24,880 --> 00:54:26,880
vertex as a parametric inequality shows

1430
00:54:26,880 --> 00:54:28,480
that one can always achieve the same

1431
00:54:28,480 --> 00:54:30,160
gain when the probability b equals one

1432
00:54:30,160 --> 00:54:32,160
is the probability of having both

1433
00:54:32,160 --> 00:54:34,640
our first result is to improve this

1434
00:54:34,640 --> 00:54:36,880
classical result to show that the same

1435
00:54:36,880 --> 00:54:38,720
can be achieved even if the attack is

1436
00:54:38,720 --> 00:54:41,040
limited to be online so it cannot see

1437
00:54:41,040 --> 00:54:42,799
the future bits and runs in the

1438
00:54:42,799 --> 00:54:45,520
polynomial time

1439
00:54:46,240 --> 00:54:48,480
to gather uh some more details of this

1440
00:54:48,480 --> 00:54:50,720
proof here's a figure of the different

1441
00:54:50,720 --> 00:54:53,119
adversaries scheme for n equals to 10.

1442
00:54:53,119 --> 00:54:56,240
in this figure x axis is a mu value that

1443
00:54:56,240 --> 00:54:58,480
ranges from zero to one and the y axis

1444
00:54:58,480 --> 00:55:01,440
is maximum gain that it can achieve for

1445
00:55:01,440 --> 00:55:03,680
every protocol for given mu

1446
00:55:03,680 --> 00:55:05,599
the blue curve is the maximum gain for

1447
00:55:05,599 --> 00:55:07,839
the online adversary which we want to

1448
00:55:07,839 --> 00:55:09,920
bound the red curve is the maximum gain

1449
00:55:09,920 --> 00:55:11,520
of the offline address which is

1450
00:55:11,520 --> 00:55:13,599
basically the isoparametric bond we know

1451
00:55:13,599 --> 00:55:15,280
that the blue curve is always below the

1452
00:55:15,280 --> 00:55:17,440
red curve but we don't know how much

1453
00:55:17,440 --> 00:55:19,680
observe that somehow magically at this

1454
00:55:19,680 --> 00:55:21,839
exact hammering ball probability what we

1455
00:55:21,839 --> 00:55:24,400
prove is always the case

1456
00:55:24,400 --> 00:55:26,559
to do so we connect these points on this

1457
00:55:26,559 --> 00:55:29,119
red curve that correspond to the exact

1458
00:55:29,119 --> 00:55:30,799
hummingbird probabilities using these

1459
00:55:30,799 --> 00:55:33,200
straight lines this gives a piecewise

1460
00:55:33,200 --> 00:55:34,799
linear function l

1461
00:55:34,799 --> 00:55:36,480
which will prove to be a lower bound on

1462
00:55:36,480 --> 00:55:38,559
the blue curve as well doing so mean

1463
00:55:38,559 --> 00:55:40,400
that this red and blue curve will have

1464
00:55:40,400 --> 00:55:41,280
the same

1465
00:55:41,280 --> 00:55:44,000
result on this hummingbird probabilities

1466
00:55:44,000 --> 00:55:46,319
and to prove that this alpha curve is

1467
00:55:46,319 --> 00:55:48,400
indeed a lower bounce which uses

1468
00:55:48,400 --> 00:55:50,640
induction and and the

1469
00:55:50,640 --> 00:55:52,319
induction crucially relies on the

1470
00:55:52,319 --> 00:55:54,319
concavity of this l function

1471
00:55:54,319 --> 00:55:56,480
our high level approach here is inspired

1472
00:55:56,480 --> 00:55:58,480
by reason work for scanning at all but

1473
00:55:58,480 --> 00:56:00,240
the actual induction step is quite

1474
00:56:00,240 --> 00:56:01,680
different

1475
00:56:01,680 --> 00:56:04,000
now we go over ideas behind our

1476
00:56:04,000 --> 00:56:05,680
attacking for the case for arbitrary

1477
00:56:05,680 --> 00:56:06,960
length messages

1478
00:56:06,960 --> 00:56:09,680
suppose as wrong i every adversary is

1479
00:56:09,680 --> 00:56:12,799
given this message of omega 1

1480
00:56:12,799 --> 00:56:14,880
and current message omega i and the

1481
00:56:14,880 --> 00:56:16,799
address we want to decide whether to

1482
00:56:16,799 --> 00:56:19,200
replace this or mika i or not basically

1483
00:56:19,200 --> 00:56:21,760
we use this additive game adversary that

1484
00:56:21,760 --> 00:56:24,480
is similar to this attack in mm out

1485
00:56:24,480 --> 00:56:26,400
making paper which makes this

1486
00:56:26,400 --> 00:56:28,000
replacement when the current additive

1487
00:56:28,000 --> 00:56:30,720
gain is large not namely at this message

1488
00:56:30,720 --> 00:56:32,640
omega i let alpha be the probability

1489
00:56:32,640 --> 00:56:34,400
before the attack of

1490
00:56:34,400 --> 00:56:37,119
b equals 1 and r prime b the maximum

1491
00:56:37,119 --> 00:56:39,599
possible probability of b 1 by replacing

1492
00:56:39,599 --> 00:56:41,839
this omega i to any other message omega

1493
00:56:41,839 --> 00:56:43,359
s star at this step

1494
00:56:43,359 --> 00:56:45,200
so if this alpha prime minus alpha

1495
00:56:45,200 --> 00:56:47,119
larger or equal to lambda the others

1496
00:56:47,119 --> 00:56:50,160
will replace this omega nito omega star

1497
00:56:50,160 --> 00:56:52,160
this paper has proved that the attack

1498
00:56:52,160 --> 00:56:54,480
starts to gain when k is large

1499
00:56:54,480 --> 00:56:56,480
there is also a multiplicative

1500
00:56:56,480 --> 00:56:58,720
multiplicative gain adversary from ad

1501
00:56:58,720 --> 00:57:01,280
summing at also that paper that gives

1502
00:57:01,280 --> 00:57:03,440
this even shorter bond using this

1503
00:57:03,440 --> 00:57:05,920
multiplicative looking adversary however

1504
00:57:05,920 --> 00:57:07,920
what we want is to have a tag works for

1505
00:57:07,920 --> 00:57:10,160
any k and that's not provided by these

1506
00:57:10,160 --> 00:57:12,319
two papers here we show that this

1507
00:57:12,319 --> 00:57:14,720
additive gain adversary as opposed to

1508
00:57:14,720 --> 00:57:16,480
this multiplicative warrant of this

1509
00:57:16,480 --> 00:57:19,119
attack can lead to a good gain

1510
00:57:19,119 --> 00:57:21,119
even if we cut this attack for any

1511
00:57:21,119 --> 00:57:22,799
number k

1512
00:57:22,799 --> 00:57:25,119
we prove this result by using this

1513
00:57:25,119 --> 00:57:27,280
reduction induction on this

1514
00:57:27,280 --> 00:57:30,000
okay all we need to do is to gain the

1515
00:57:30,000 --> 00:57:30,880
pain

1516
00:57:30,880 --> 00:57:33,119
case replacement in summary we show that

1517
00:57:33,119 --> 00:57:35,119
either this happened or something is

1518
00:57:35,119 --> 00:57:36,640
even better happens

1519
00:57:36,640 --> 00:57:38,720
so if the case replacement happens

1520
00:57:38,720 --> 00:57:40,640
allergies against lambda

1521
00:57:40,640 --> 00:57:42,400
so this is only true for additive

1522
00:57:42,400 --> 00:57:43,680
attacks with

1523
00:57:43,680 --> 00:57:46,079
if the case replaces does not happen it

1524
00:57:46,079 --> 00:57:47,760
means the budget of addition is not

1525
00:57:47,760 --> 00:57:49,040
fully used

1526
00:57:49,040 --> 00:57:50,240
then the output will be

1527
00:57:50,240 --> 00:57:52,160
indistinguishable for another attack

1528
00:57:52,160 --> 00:57:54,799
which has even better even larger budget

1529
00:57:54,799 --> 00:57:57,359
maybe infinity budget and of course it's

1530
00:57:57,359 --> 00:58:00,319
a extremely strong one so it's a win-win

1531
00:58:00,319 --> 00:58:03,200
situation for the adversary

1532
00:58:03,200 --> 00:58:04,079
so we

1533
00:58:04,079 --> 00:58:06,480
summarize our findings in the conclusion

1534
00:58:06,480 --> 00:58:08,799
for the uniform binary protocols

1535
00:58:08,799 --> 00:58:11,119
threshold particle is optimal for online

1536
00:58:11,119 --> 00:58:13,280
offline k replacing attacks and for any

1537
00:58:13,280 --> 00:58:15,200
k and this result can be viewed as a

1538
00:58:15,200 --> 00:58:17,200
computational version of hyper's vertex

1539
00:58:17,200 --> 00:58:19,440
as a parametric inequality

1540
00:58:19,440 --> 00:58:21,760
and for particles with any message lens

1541
00:58:21,760 --> 00:58:23,520
the majority protocol is still optimal

1542
00:58:23,520 --> 00:58:25,760
up to a constant factor this result can

1543
00:58:25,760 --> 00:58:27,680
be applied to obtain generic targeted

1544
00:58:27,680 --> 00:58:29,680
poisoning attacks on machine learners

1545
00:58:29,680 --> 00:58:32,480
with small budget

1546
00:58:33,280 --> 00:58:35,200
thank you i appreciate any questions and

1547
00:58:35,200 --> 00:58:35,930
comments from you

1548
00:58:35,930 --> 00:58:40,390
[Music]

1549
00:58:42,799 --> 00:58:44,480
thank you

1550
00:58:44,480 --> 00:58:47,440
do we have any question for d

1551
00:58:47,440 --> 00:58:48,960
by the way am i

1552
00:58:48,960 --> 00:58:50,880
pronouncing your name correctly

1553
00:58:50,880 --> 00:58:51,839
yes

1554
00:58:51,839 --> 00:58:53,839
okay perfect

1555
00:58:53,839 --> 00:58:58,319
okay so no questions from the audience

1556
00:58:58,400 --> 00:59:00,640
and no questions from the chat

1557
00:59:00,640 --> 00:59:03,040
all right so let's thank every speaker

1558
00:59:03,040 --> 00:59:04,480
of this session

1559
00:59:04,480 --> 00:59:06,640
we

