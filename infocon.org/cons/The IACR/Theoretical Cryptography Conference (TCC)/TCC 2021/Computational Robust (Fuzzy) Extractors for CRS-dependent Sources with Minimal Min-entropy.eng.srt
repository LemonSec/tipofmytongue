1
00:00:00,719 --> 00:00:02,960
hello everyone i'm heaven i'm going to

2
00:00:02,960 --> 00:00:05,440
present our work computational robust

3
00:00:05,440 --> 00:00:08,080
father extractors for cis dependent

4
00:00:08,080 --> 00:00:10,400
sources this is joint work with chiang

5
00:00:10,400 --> 00:00:12,559
tang

6
00:00:12,559 --> 00:00:14,799
a basic goal of cryptography is to

7
00:00:14,799 --> 00:00:17,279
enable two parties alice and bob to

8
00:00:17,279 --> 00:00:19,359
securely communicate over an untrust

9
00:00:19,359 --> 00:00:21,279
channel that might be controlled by

10
00:00:21,279 --> 00:00:23,039
active attackers

11
00:00:23,039 --> 00:00:25,840
as everybody knows if alice and bob

12
00:00:25,840 --> 00:00:28,400
already share a perfect secret we have a

13
00:00:28,400 --> 00:00:30,640
bunch of tools to enable them to

14
00:00:30,640 --> 00:00:33,920
establish a secure channel

15
00:00:33,920 --> 00:00:35,760
but in many scenarios

16
00:00:35,760 --> 00:00:38,239
they may just share a weak secret were

17
00:00:38,239 --> 00:00:40,480
just a pair of clothes but long island

18
00:00:40,480 --> 00:00:42,239
decorated series

19
00:00:42,239 --> 00:00:44,960
here weak secret is a private but not

20
00:00:44,960 --> 00:00:47,920
uniform string it could be password or

21
00:00:47,920 --> 00:00:50,800
biometric information like fingerprints

22
00:00:50,800 --> 00:00:52,640
it might also be generated by some

23
00:00:52,640 --> 00:00:55,440
physic means or crossed by leakage

24
00:00:55,440 --> 00:00:56,879
in such a case

25
00:00:56,879 --> 00:00:59,760
alice and bob have to run a primitive

26
00:00:59,760 --> 00:01:02,079
called an authenticated k exchange

27
00:01:02,079 --> 00:01:06,720
protocol to agree upon a perfect secret

28
00:01:06,720 --> 00:01:08,720
in the history this fundamental

29
00:01:08,720 --> 00:01:11,200
primitive have been studied under

30
00:01:11,200 --> 00:01:13,520
different links

31
00:01:13,520 --> 00:01:16,479
among them the robust extractor actually

32
00:01:16,479 --> 00:01:19,680
defines the one message ake and if it

33
00:01:19,680 --> 00:01:22,320
also works for a pair of close weak

34
00:01:22,320 --> 00:01:25,360
secrets we can call it a robust filing

35
00:01:25,360 --> 00:01:26,400
tracker

36
00:01:26,400 --> 00:01:28,880
in general it can be described by a

37
00:01:28,880 --> 00:01:31,280
generation algorithm and a reproduction

38
00:01:31,280 --> 00:01:33,360
algorithm analysts can use this

39
00:01:33,360 --> 00:01:35,520
generation algorithm to produce a

40
00:01:35,520 --> 00:01:37,200
perfect secret along with the

41
00:01:37,200 --> 00:01:39,680
hyperstring and after receiving this

42
00:01:39,680 --> 00:01:42,640
hyperstring bob can reproduce the same

43
00:01:42,640 --> 00:01:45,840
perfect secret as any stars

44
00:01:45,840 --> 00:01:48,399
it has two security requirements

45
00:01:48,399 --> 00:01:51,759
the immediate one is the privacy it says

46
00:01:51,759 --> 00:01:53,680
this producer secret should be

47
00:01:53,680 --> 00:01:55,520
indistinguishable with uniform

48
00:01:55,520 --> 00:01:57,759
randomness even conditioned on the

49
00:01:57,759 --> 00:02:00,000
public health string p

50
00:02:00,000 --> 00:02:02,000
this is also why we consider this

51
00:02:02,000 --> 00:02:03,920
primitive and the variant of a

52
00:02:03,920 --> 00:02:06,399
randomness extractor because this

53
00:02:06,399 --> 00:02:09,038
generation algorithm actually extracts

54
00:02:09,038 --> 00:02:11,360
a nearly uniform string from a long

55
00:02:11,360 --> 00:02:13,280
uniform string

56
00:02:13,280 --> 00:02:16,080
the second requirement is robustness an

57
00:02:16,080 --> 00:02:18,319
active attacker might change the half

58
00:02:18,319 --> 00:02:21,040
string to another the robustness ensures

59
00:02:21,040 --> 00:02:24,239
that any manipulation will be detected

60
00:02:24,239 --> 00:02:26,400
and rejected by the reproduction

61
00:02:26,400 --> 00:02:28,480
algorithm

62
00:02:28,480 --> 00:02:30,239
there is a stronger notion called

63
00:02:30,239 --> 00:02:33,120
post-replication robustness it considers

64
00:02:33,120 --> 00:02:35,519
a stronger adversary than accounting the

65
00:02:35,519 --> 00:02:38,319
extracted remnants from other applicable

66
00:02:38,319 --> 00:02:39,680
applications

67
00:02:39,680 --> 00:02:42,319
this property ensures this adversary

68
00:02:42,319 --> 00:02:45,599
still cannot manipulate the have string

69
00:02:45,599 --> 00:02:48,080
without being detected

70
00:02:48,080 --> 00:02:50,319
to distinguish it we call the original

71
00:02:50,319 --> 00:02:54,239
robustness pre-application robustness

72
00:02:54,239 --> 00:02:56,480
the message feature is of course

73
00:02:56,480 --> 00:02:59,680
appealing and useful but it's also very

74
00:02:59,680 --> 00:03:01,040
expensive

75
00:03:01,040 --> 00:03:03,440
here consider the setting of information

76
00:03:03,440 --> 00:03:05,440
theoretical security and the player

77
00:03:05,440 --> 00:03:07,519
model where the attacker can have

78
00:03:07,519 --> 00:03:09,920
unlimited computation power and there is

79
00:03:09,920 --> 00:03:11,680
no trust in the setup

80
00:03:11,680 --> 00:03:14,319
this is the most desirable city however

81
00:03:14,319 --> 00:03:17,360
for robust extractors doniz and wix have

82
00:03:17,360 --> 00:03:19,760
given a tight bond and the admissible

83
00:03:19,760 --> 00:03:21,200
security source

84
00:03:21,200 --> 00:03:24,480
that is if there is a robust character

85
00:03:24,480 --> 00:03:27,519
for all for all sql services with

86
00:03:27,519 --> 00:03:30,159
unbeaten length and k-mean entropy

87
00:03:30,159 --> 00:03:33,040
the entropy rate k over n must be larger

88
00:03:33,040 --> 00:03:34,400
than half

89
00:03:34,400 --> 00:03:36,959
this requirement directly includes many

90
00:03:36,959 --> 00:03:39,599
natural sources like fingerprints

91
00:03:39,599 --> 00:03:42,400
in contrast many interactive ake

92
00:03:42,400 --> 00:03:45,200
protocols could work for sources with

93
00:03:45,200 --> 00:03:47,200
the super log miniature

94
00:03:47,200 --> 00:03:49,680
or if we don't require robustness but

95
00:03:49,680 --> 00:03:51,760
ask for one massive feature the

96
00:03:51,760 --> 00:03:54,000
conventional randomized tracker can also

97
00:03:54,000 --> 00:03:54,959
work for

98
00:03:54,959 --> 00:03:57,599
work for sources with only super low

99
00:03:57,599 --> 00:03:59,680
domain entropy

100
00:03:59,680 --> 00:04:01,280
on the other hand there are triple

101
00:04:01,280 --> 00:04:04,000
solutions in relaxing models

102
00:04:04,000 --> 00:04:06,239
for example in the random rock model

103
00:04:06,239 --> 00:04:08,560
alice and bob can directly query the red

104
00:04:08,560 --> 00:04:10,879
miracle to get with the weak secret to

105
00:04:10,879 --> 00:04:12,560
get a perfect secret

106
00:04:12,560 --> 00:04:14,720
and in this case the half string is just

107
00:04:14,720 --> 00:04:18,160
empty so it's surely a robust structure

108
00:04:18,160 --> 00:04:20,560
but the problem is remarkable clearly

109
00:04:20,560 --> 00:04:22,880
does not exist so it's just a heuristic

110
00:04:22,880 --> 00:04:25,680
approach that we wish to avoid

111
00:04:25,680 --> 00:04:28,560
we can also put the seed of a randomness

112
00:04:28,560 --> 00:04:30,560
detractor into the common reference

113
00:04:30,560 --> 00:04:33,759
string and alice and bob can extract the

114
00:04:33,759 --> 00:04:36,880
same perfect secret using this scene

115
00:04:36,880 --> 00:04:39,600
this also gives a robust tractor in the

116
00:04:39,600 --> 00:04:42,479
crs model but the problem is

117
00:04:42,479 --> 00:04:44,479
the same resources have to be

118
00:04:44,479 --> 00:04:47,199
independent of the crs since the state

119
00:04:47,199 --> 00:04:48,800
of around this tractor should be

120
00:04:48,800 --> 00:04:50,560
independent of the sources being

121
00:04:50,560 --> 00:04:53,040
extracted

122
00:04:53,040 --> 00:04:55,120
we found the crs independence

123
00:04:55,120 --> 00:04:58,560
requirement is hard is hard to justify

124
00:04:58,560 --> 00:05:01,600
crs is fixed and public and everybody

125
00:05:01,600 --> 00:05:02,960
can see it

126
00:05:02,960 --> 00:05:05,919
it's hard to ensure a source source

127
00:05:05,919 --> 00:05:08,800
produced after seeing the crs is not

128
00:05:08,800 --> 00:05:11,039
affected by these stars

129
00:05:11,039 --> 00:05:13,600
for example if the source is from a

130
00:05:13,600 --> 00:05:16,479
maliciously manufactured device that

131
00:05:16,479 --> 00:05:19,120
contains the crs it should be cs

132
00:05:19,120 --> 00:05:20,320
dependent

133
00:05:20,320 --> 00:05:23,440
and more generally for any sources once

134
00:05:23,440 --> 00:05:25,840
the cis dependent information is linked

135
00:05:25,840 --> 00:05:29,280
to adversary the remaining secret is cis

136
00:05:29,280 --> 00:05:30,560
dependent

137
00:05:30,560 --> 00:05:33,120
so we are curious about that

138
00:05:33,120 --> 00:05:35,919
can we have a robust extractor for crs

139
00:05:35,919 --> 00:05:38,800
dependent sources without raising extra

140
00:05:38,800 --> 00:05:41,759
entropy requirement

141
00:05:41,759 --> 00:05:44,479
to have a clear picture let's recall the

142
00:05:44,479 --> 00:05:45,680
landscape

143
00:05:45,680 --> 00:05:48,160
an information theory to secure robust

144
00:05:48,160 --> 00:05:50,400
tractor in the plane model or network

145
00:05:50,400 --> 00:05:52,479
for sources with entropy greater than

146
00:05:52,479 --> 00:05:53,840
half

147
00:05:53,840 --> 00:05:56,960
on the other hand we know how to

148
00:05:56,960 --> 00:05:59,680
get around this pro this lower bank by

149
00:05:59,680 --> 00:06:02,160
using a random oracle we're introducing

150
00:06:02,160 --> 00:06:05,520
a crs but require the sources to be

151
00:06:05,520 --> 00:06:08,560
independent of this crs

152
00:06:08,560 --> 00:06:09,600
however

153
00:06:09,600 --> 00:06:12,160
for the crs dependent model that we

154
00:06:12,160 --> 00:06:14,800
think is stronger than the print model

155
00:06:14,800 --> 00:06:17,520
but more much more standard than the crs

156
00:06:17,520 --> 00:06:20,720
dependent model and the ram local model

157
00:06:20,720 --> 00:06:23,199
there is neither positive result nor

158
00:06:23,199 --> 00:06:25,280
negative result yet

159
00:06:25,280 --> 00:06:27,759
and relaxing to computational security

160
00:06:27,759 --> 00:06:31,280
was not so helpful as well

161
00:06:31,280 --> 00:06:33,600
in this work we first formally proved

162
00:06:33,600 --> 00:06:36,400
that the lower bound for player model

163
00:06:36,400 --> 00:06:39,039
and information theoretical construction

164
00:06:39,039 --> 00:06:42,240
still holds for cis dependent and

165
00:06:42,240 --> 00:06:44,880
information theoretical constructions

166
00:06:44,880 --> 00:06:48,400
so to bypass this lower bound we have to

167
00:06:48,400 --> 00:06:50,960
look at computational settings

168
00:06:50,960 --> 00:06:54,000
fortunately we really solve this problem

169
00:06:54,000 --> 00:06:55,280
we propose

170
00:06:55,280 --> 00:06:57,919
a computationally secure robust

171
00:06:57,919 --> 00:07:00,160
robust tractor for

172
00:07:00,160 --> 00:07:02,800
general ci's dependent resources with

173
00:07:02,800 --> 00:07:05,120
minimal entropy requirement

174
00:07:05,120 --> 00:07:07,520
we also extended our solution to the

175
00:07:07,520 --> 00:07:10,639
file case and gave the first

176
00:07:10,639 --> 00:07:13,599
computational robust filing extractors

177
00:07:13,599 --> 00:07:16,080
for crs dependent sources without

178
00:07:16,080 --> 00:07:19,919
requiring the half interval rate

179
00:07:20,319 --> 00:07:22,800
now let's present our first result in

180
00:07:22,800 --> 00:07:24,720
more detail

181
00:07:24,720 --> 00:07:27,759
to begin ways a crs model robust

182
00:07:27,759 --> 00:07:30,960
extractor can be described by a crs

183
00:07:30,960 --> 00:07:32,479
setup algorithm

184
00:07:32,479 --> 00:07:34,319
a generation algorithm and a

185
00:07:34,319 --> 00:07:36,160
reproduction algorithm

186
00:07:36,160 --> 00:07:38,479
is equal to view this construction and

187
00:07:38,479 --> 00:07:41,280
the family of player model instances and

188
00:07:41,280 --> 00:07:44,000
the distribution over this family here

189
00:07:44,000 --> 00:07:45,840
each instance is the generation

190
00:07:45,840 --> 00:07:48,400
algorithm and the reproduction algorithm

191
00:07:48,400 --> 00:07:50,800
with the fixed cis

192
00:07:50,800 --> 00:07:53,599
a natural security is like this

193
00:07:53,599 --> 00:07:56,800
for a new adversary and and any crs

194
00:07:56,800 --> 00:07:59,520
dependent on k-source w a randomly

195
00:07:59,520 --> 00:08:03,039
chosen source instance is good that is

196
00:08:03,039 --> 00:08:05,199
this anniversary only has very small

197
00:08:05,199 --> 00:08:09,599
advantage to win the security game

198
00:08:09,919 --> 00:08:12,879
we obtain our result by proving that the

199
00:08:12,879 --> 00:08:14,879
quantifiers can be swapped in this

200
00:08:14,879 --> 00:08:16,800
setting that is

201
00:08:16,800 --> 00:08:19,680
there must be an instance that is good

202
00:08:19,680 --> 00:08:22,720
for any adversity and learning source so

203
00:08:22,720 --> 00:08:25,199
this is this instance is already a

204
00:08:25,199 --> 00:08:27,680
secure plane model construction

205
00:08:27,680 --> 00:08:29,599
in other words

206
00:08:29,599 --> 00:08:31,759
an information theoretical status

207
00:08:31,759 --> 00:08:35,519
dependent robotic tractor implies a

208
00:08:35,519 --> 00:08:37,760
implies an information theoretical

209
00:08:37,760 --> 00:08:40,479
secure play model construction

210
00:08:40,479 --> 00:08:44,880
so the same similar bound applies here

211
00:08:44,880 --> 00:08:47,040
we proceed this proof by swiping the

212
00:08:47,040 --> 00:08:48,959
quantifiers one by one the security

213
00:08:48,959 --> 00:08:51,040
definition for single property already

214
00:08:51,040 --> 00:08:53,839
guarantees and for each adversary and

215
00:08:53,839 --> 00:08:55,279
each source

216
00:08:55,279 --> 00:08:58,480
a random choosing instance is good

217
00:08:58,480 --> 00:09:00,959
we first apply standard techniques like

218
00:09:00,959 --> 00:09:02,800
a markov for equality

219
00:09:02,800 --> 00:09:05,279
inequality to show that for each

220
00:09:05,279 --> 00:09:08,160
adversary a and each source w there is a

221
00:09:08,160 --> 00:09:11,680
set acw of instances of instances that

222
00:09:11,680 --> 00:09:13,760
are good for them

223
00:09:13,760 --> 00:09:16,560
and the weight of scw should be larger

224
00:09:16,560 --> 00:09:18,959
than our parameter data

225
00:09:18,959 --> 00:09:20,240
we then

226
00:09:20,240 --> 00:09:22,800
swap the connector between the source

227
00:09:22,800 --> 00:09:25,279
between the set and the source

228
00:09:25,279 --> 00:09:28,160
we prove that for each adversary there

229
00:09:28,160 --> 00:09:30,880
should be a set sa

230
00:09:30,880 --> 00:09:32,959
of instances that are good for this

231
00:09:32,959 --> 00:09:37,440
adversary a and any source w

232
00:09:37,440 --> 00:09:39,120
particularly

233
00:09:39,120 --> 00:09:42,240
the weight of the sa should still be

234
00:09:42,240 --> 00:09:43,839
larger than dirt

235
00:09:43,839 --> 00:09:45,680
this therefore heavily relies on the

236
00:09:45,680 --> 00:09:48,160
fractions and sources can be

237
00:09:48,160 --> 00:09:51,200
dependent on the crs

238
00:09:51,200 --> 00:09:52,959
most specifically

239
00:09:52,959 --> 00:09:55,600
we define the set sa and the

240
00:09:55,600 --> 00:09:59,839
intersection of all saw for all sources

241
00:09:59,839 --> 00:10:01,680
w

242
00:10:01,680 --> 00:10:02,800
and then

243
00:10:02,800 --> 00:10:04,000
as say

244
00:10:04,000 --> 00:10:06,399
the weight of say should be larger than

245
00:10:06,399 --> 00:10:08,959
the parameter data otherwise its

246
00:10:08,959 --> 00:10:11,519
complementary set should with weight

247
00:10:11,519 --> 00:10:14,079
larger than one minus theta

248
00:10:14,079 --> 00:10:16,160
then by definition

249
00:10:16,160 --> 00:10:18,640
the by definition of the complementary

250
00:10:18,640 --> 00:10:19,519
set

251
00:10:19,519 --> 00:10:22,079
each instance in the complementary set

252
00:10:22,079 --> 00:10:24,800
should be should be bad for at least one

253
00:10:24,800 --> 00:10:26,880
sources should should be better for

254
00:10:26,880 --> 00:10:29,440
entities one source

255
00:10:29,440 --> 00:10:32,480
then we can define a new sources its

256
00:10:32,480 --> 00:10:35,120
conditional distribution on

257
00:10:35,120 --> 00:10:39,040
each cis in the complementary is is is

258
00:10:39,040 --> 00:10:41,200
the is the binary source we just

259
00:10:41,200 --> 00:10:42,800
mentioned

260
00:10:42,800 --> 00:10:44,560
then by definition

261
00:10:44,560 --> 00:10:47,040
for the for the adversary a

262
00:10:47,040 --> 00:10:47,760
and

263
00:10:47,760 --> 00:10:49,440
the new source

264
00:10:49,440 --> 00:10:52,880
w star we just constructed there is no

265
00:10:52,880 --> 00:10:56,480
set acw star with sufficient the weight

266
00:10:56,480 --> 00:11:00,000
larger than the parameter data

267
00:11:00,000 --> 00:11:02,720
the last in the last in the next step

268
00:11:02,720 --> 00:11:05,519
we swap the quantifier between the set

269
00:11:05,519 --> 00:11:08,240
and the anniversary we prove that there

270
00:11:08,240 --> 00:11:10,160
should be a set as

271
00:11:10,160 --> 00:11:13,040
we of instances that is good then how

272
00:11:13,040 --> 00:11:17,200
good for any source w and any word any

273
00:11:17,200 --> 00:11:18,640
adversary a

274
00:11:18,640 --> 00:11:21,360
this step is similar to

275
00:11:21,360 --> 00:11:24,320
the last the last step we described and

276
00:11:24,320 --> 00:11:26,880
relies on the fact that the virtually

277
00:11:26,880 --> 00:11:30,320
information is theoretical and has

278
00:11:30,320 --> 00:11:32,480
it means it has a

279
00:11:32,480 --> 00:11:36,079
unlimited computational power

280
00:11:36,160 --> 00:11:37,600
and

281
00:11:37,600 --> 00:11:41,680
at this stage we already have a good set

282
00:11:41,680 --> 00:11:44,320
a good set with respect to a single

283
00:11:44,320 --> 00:11:45,360
property

284
00:11:45,360 --> 00:11:48,000
we finally prove that the good sets for

285
00:11:48,000 --> 00:11:49,680
different properties have an

286
00:11:49,680 --> 00:11:50,880
intersection

287
00:11:50,880 --> 00:11:54,399
and then instance in this intersection

288
00:11:54,399 --> 00:11:56,560
is a secure plane model construction

289
00:11:56,560 --> 00:11:59,120
that we need

290
00:11:59,120 --> 00:12:01,680
our second result is a computational

291
00:12:01,680 --> 00:12:04,320
robust extractor for cis dependent

292
00:12:04,320 --> 00:12:07,440
sources with minimal entropy requirement

293
00:12:07,440 --> 00:12:09,279
to make it modular and easy to

294
00:12:09,279 --> 00:12:11,920
understand we abstract a new mac

295
00:12:11,920 --> 00:12:14,240
primitive which we call copy mac and

296
00:12:14,240 --> 00:12:18,800
show how to use it to reach our result

297
00:12:18,959 --> 00:12:20,959
our intrusion is very natural as i

298
00:12:20,959 --> 00:12:22,880
mentioned before around this attractor

299
00:12:22,880 --> 00:12:25,600
can be used as a k-1 message key

300
00:12:25,600 --> 00:12:28,240
exchange protocol against possible

301
00:12:28,240 --> 00:12:31,279
adversaries so if we can somehow

302
00:12:31,279 --> 00:12:34,240
authenticate the public seed such that

303
00:12:34,240 --> 00:12:37,600
even active addresses cannot change it

304
00:12:37,600 --> 00:12:40,480
then we already opening a robust

305
00:12:40,480 --> 00:12:42,480
extractor

306
00:12:42,480 --> 00:12:45,920
let's see our framework in more detail

307
00:12:45,920 --> 00:12:48,160
since both alice and bob already share a

308
00:12:48,160 --> 00:12:49,600
weak secret

309
00:12:49,600 --> 00:12:52,240
it's natural to use this with secret as

310
00:12:52,240 --> 00:12:53,440
the mackey

311
00:12:53,440 --> 00:12:56,240
then the helper string will contain a

312
00:12:56,240 --> 00:12:59,040
public seat for random subtraction and

313
00:12:59,040 --> 00:13:01,120
the mag tab that authenticates its

314
00:13:01,120 --> 00:13:02,320
public seat

315
00:13:02,320 --> 00:13:04,560
in reproduction algorithm it first

316
00:13:04,560 --> 00:13:07,839
checks whether the method is is valid if

317
00:13:07,839 --> 00:13:10,880
invalid the reproduction algorithm just

318
00:13:10,880 --> 00:13:11,839
aborts

319
00:13:11,839 --> 00:13:14,560
otherwise it uses the public seed to

320
00:13:14,560 --> 00:13:17,680
reproduce the same perfect secret

321
00:13:17,680 --> 00:13:20,240
one tricky part here is that we actually

322
00:13:20,240 --> 00:13:22,399
use the weak secret for both random

323
00:13:22,399 --> 00:13:26,000
extraction and back target generation

324
00:13:26,000 --> 00:13:29,360
so to ensure the final construction is

325
00:13:29,360 --> 00:13:30,320
secure

326
00:13:30,320 --> 00:13:33,440
the component must provide some level of

327
00:13:33,440 --> 00:13:35,920
composition security

328
00:13:35,920 --> 00:13:38,320
most specifically is easy to say loan

329
00:13:38,320 --> 00:13:40,800
max are insufficient for random

330
00:13:40,800 --> 00:13:42,959
subtraction since the heavy string

331
00:13:42,959 --> 00:13:46,320
already contains a mac tag this method

332
00:13:46,320 --> 00:13:48,160
must contain sufficient amount of

333
00:13:48,160 --> 00:13:50,480
information about the weak secret

334
00:13:50,480 --> 00:13:52,000
so we cannot

335
00:13:52,000 --> 00:13:54,720
ensure the extracted randomness is used

336
00:13:54,720 --> 00:13:57,120
to random and for math

337
00:13:57,120 --> 00:13:58,720
and since we want to

338
00:13:58,720 --> 00:14:01,040
post application robustness

339
00:14:01,040 --> 00:14:03,120
the public seat and the extracted

340
00:14:03,120 --> 00:14:06,000
remnants will be leaked to the adversary

341
00:14:06,000 --> 00:14:09,600
so we cannot ensure in this case the map

342
00:14:09,600 --> 00:14:12,800
is still unfoldable

343
00:14:13,040 --> 00:14:15,440
so we need additional properties to

344
00:14:15,440 --> 00:14:19,199
ensure the composition security needed

345
00:14:19,199 --> 00:14:20,720
more specifically

346
00:14:20,720 --> 00:14:23,600
to ensure the randomized traction is not

347
00:14:23,600 --> 00:14:26,320
affected by the mac we require key

348
00:14:26,320 --> 00:14:29,839
privacy that is the mac tag does not

349
00:14:29,839 --> 00:14:32,959
depart information about the secret

350
00:14:32,959 --> 00:14:35,920
and in the other way to prevent the mac

351
00:14:35,920 --> 00:14:36,800
be

352
00:14:36,800 --> 00:14:37,680
being

353
00:14:37,680 --> 00:14:40,399
affected by the randomness extraction we

354
00:14:40,399 --> 00:14:41,920
require the mac

355
00:14:41,920 --> 00:14:44,079
to be secure against

356
00:14:44,079 --> 00:14:46,399
auxiliary input leakages

357
00:14:46,399 --> 00:14:49,519
another implicit requirement is that the

358
00:14:49,519 --> 00:14:50,959
key should be

359
00:14:50,959 --> 00:14:53,839
structureless such that we can directly

360
00:14:53,839 --> 00:14:57,440
use a weak secret and the mac key

361
00:14:57,440 --> 00:14:59,760
putting all requirements together we

362
00:14:59,760 --> 00:15:02,160
define copper mac

363
00:15:02,160 --> 00:15:04,480
a certainty in our definition is to

364
00:15:04,480 --> 00:15:06,720
identify the largest admissible

365
00:15:06,720 --> 00:15:08,399
auxiliary input class

366
00:15:08,399 --> 00:15:09,920
on the one hand it should be

367
00:15:09,920 --> 00:15:12,320
computational how to invert on the other

368
00:15:12,320 --> 00:15:13,279
hand

369
00:15:13,279 --> 00:15:15,519
it should not contain authenticating

370
00:15:15,519 --> 00:15:17,519
tags otherwise

371
00:15:17,519 --> 00:15:20,399
otherwise adversaries can leverage the

372
00:15:20,399 --> 00:15:22,880
tag to break the feasibility

373
00:15:22,880 --> 00:15:26,399
we refer you guys to our full paper for

374
00:15:26,399 --> 00:15:29,440
the detailed treatment

375
00:15:29,600 --> 00:15:32,079
now i will show you how to construct cup

376
00:15:32,079 --> 00:15:34,240
mac in the cs model from real study

377
00:15:34,240 --> 00:15:36,880
assumptions

378
00:15:37,680 --> 00:15:40,800
our starting point is using an auxiliary

379
00:15:40,800 --> 00:15:43,519
input signature as a mac

380
00:15:43,519 --> 00:15:45,920
this this is the digital signature

381
00:15:45,920 --> 00:15:48,480
allows the adversary to say some

382
00:15:48,480 --> 00:15:52,560
verification k dependent leakage

383
00:15:52,560 --> 00:15:55,120
and the most standard way to use it on

384
00:15:55,120 --> 00:15:58,880
map is to enable the verifier also have

385
00:15:58,880 --> 00:16:01,440
the signing key

386
00:16:01,440 --> 00:16:03,600
but a problem here is that in the

387
00:16:03,600 --> 00:16:06,480
setting of mac we cannot directly assume

388
00:16:06,480 --> 00:16:09,040
a trusted verification key

389
00:16:09,040 --> 00:16:11,279
so we may put it

390
00:16:11,279 --> 00:16:14,079
as a part of the machine but for cover

391
00:16:14,079 --> 00:16:17,120
mac we need the machine to be structured

392
00:16:17,120 --> 00:16:20,560
nice so we cannot put it here

393
00:16:20,560 --> 00:16:23,680
the orange choice is to let it be a part

394
00:16:23,680 --> 00:16:25,600
of a mac attack

395
00:16:25,600 --> 00:16:29,120
but now the adversary may have a actual

396
00:16:29,120 --> 00:16:32,399
advantage by modifying this verification

397
00:16:32,399 --> 00:16:34,480
key

398
00:16:34,480 --> 00:16:36,560
to address this problem we first

399
00:16:36,560 --> 00:16:39,440
directly leverage our cis model

400
00:16:39,440 --> 00:16:41,279
most specifically we split the

401
00:16:41,279 --> 00:16:43,839
verification key into a user specific

402
00:16:43,839 --> 00:16:47,040
part by key and a common part

403
00:16:47,040 --> 00:16:49,759
and put the com part into the crs such

404
00:16:49,759 --> 00:16:52,720
that a rotary can now modify it

405
00:16:52,720 --> 00:16:55,040
the remaining challenge is to ensure

406
00:16:55,040 --> 00:16:59,920
magnification on yk is still useless

407
00:17:00,320 --> 00:17:01,519
lenses

408
00:17:01,519 --> 00:17:03,920
even the attacker changes yk the

409
00:17:03,920 --> 00:17:06,799
signature and the message together

410
00:17:06,799 --> 00:17:10,240
the verifier bob can still find its uh

411
00:17:10,240 --> 00:17:13,599
is invalid mac tag

412
00:17:13,599 --> 00:17:16,319
another challenge is to ensure yk cannot

413
00:17:16,319 --> 00:17:18,559
departure information of sk

414
00:17:18,559 --> 00:17:20,880
this is necessary for the k privacy

415
00:17:20,880 --> 00:17:23,199
property

416
00:17:23,199 --> 00:17:25,439
to address these challenges

417
00:17:25,439 --> 00:17:28,000
we choose to strengthen an auxillary

418
00:17:28,000 --> 00:17:30,559
input secure signature scheme proposed

419
00:17:30,559 --> 00:17:33,280
by a class and the vicontalazan in their

420
00:17:33,280 --> 00:17:35,919
scheme it contains two building blocks a

421
00:17:35,919 --> 00:17:38,240
leakage resident heart relation and the

422
00:17:38,240 --> 00:17:40,720
true simulation extractable disk in our

423
00:17:40,720 --> 00:17:43,200
copper map we propose the so-called

424
00:17:43,200 --> 00:17:45,039
strengthened leakage reason to heart

425
00:17:45,039 --> 00:17:48,640
relation which simultaneously guarantees

426
00:17:48,640 --> 00:17:51,600
that the manipulation on by k is units

427
00:17:51,600 --> 00:17:54,240
is useless and y key has partial

428
00:17:54,240 --> 00:17:57,760
information of sk

429
00:17:58,640 --> 00:18:00,799
let's recall the cause of a controller

430
00:18:00,799 --> 00:18:02,480
than signification

431
00:18:02,480 --> 00:18:04,720
it's building block decay reason

432
00:18:04,720 --> 00:18:07,280
correlation is an empty relation with

433
00:18:07,280 --> 00:18:10,080
the generator such that given the system

434
00:18:10,080 --> 00:18:12,720
the y and the leakage and y and the

435
00:18:12,720 --> 00:18:15,840
weakness k finding a value which is k

436
00:18:15,840 --> 00:18:18,000
prime for y is hard

437
00:18:18,000 --> 00:18:20,799
when using it to construct a signature

438
00:18:20,799 --> 00:18:23,520
the reason is k will be the sun k

439
00:18:23,520 --> 00:18:27,039
y and this crs will be the verification

440
00:18:27,039 --> 00:18:29,520
k and the signature is the proof of

441
00:18:29,520 --> 00:18:31,039
knowledge of k

442
00:18:31,039 --> 00:18:33,280
from the property of a true simulation

443
00:18:33,280 --> 00:18:36,559
travel nisk we can extract a valid k

444
00:18:36,559 --> 00:18:38,960
prime from a value signature which

445
00:18:38,960 --> 00:18:41,120
contradicts the leaky reason how

446
00:18:41,120 --> 00:18:42,559
relation definition

447
00:18:42,559 --> 00:18:45,280
so this signature scheme is unforgivable

448
00:18:45,280 --> 00:18:47,200
with respect to

449
00:18:47,200 --> 00:18:50,720
auxiliary input leakages

450
00:18:51,280 --> 00:18:53,120
we strengthen the leakage within the

451
00:18:53,120 --> 00:18:56,880
hydration in multiple places first we

452
00:18:56,880 --> 00:19:00,559
split the generator to pg and sg

453
00:19:00,559 --> 00:19:04,559
pg is independent of weakness so it can

454
00:19:04,559 --> 00:19:07,600
be put into crs to leverage the

455
00:19:07,600 --> 00:19:11,600
flexibility provided by rcs model

456
00:19:11,600 --> 00:19:14,320
the weakness is just sampled from a

457
00:19:14,320 --> 00:19:16,720
secret key source and the ykk is

458
00:19:16,720 --> 00:19:20,559
generated according to pb and k using sg

459
00:19:20,559 --> 00:19:23,039
so we can ensure the map look for

460
00:19:23,039 --> 00:19:25,039
structurally smart case

461
00:19:25,039 --> 00:19:27,039
pp and ykt together

462
00:19:27,039 --> 00:19:29,760
as a statement

463
00:19:29,760 --> 00:19:32,400
regarding the leakage here is just a

464
00:19:32,400 --> 00:19:35,440
function of k and pp

465
00:19:35,440 --> 00:19:37,919
by k is not the input of the liquid

466
00:19:37,919 --> 00:19:41,200
leakage function because it's now a part

467
00:19:41,200 --> 00:19:44,080
of an authentic authentication tag and

468
00:19:44,080 --> 00:19:47,039
only needed to consider priority leakage

469
00:19:47,039 --> 00:19:49,120
this is something we can never use to

470
00:19:49,120 --> 00:19:51,360
improve our construction

471
00:19:51,360 --> 00:19:54,000
then the rosary needs to find which is k

472
00:19:54,000 --> 00:19:57,440
prime for y k prime specific specified

473
00:19:57,440 --> 00:19:58,720
by himself

474
00:19:58,720 --> 00:20:01,919
instead of finding k prime for the

475
00:20:01,919 --> 00:20:04,400
honestly generated y k

476
00:20:04,400 --> 00:20:07,120
this is because the key is in the

477
00:20:07,120 --> 00:20:10,320
authentic authentication tag that can be

478
00:20:10,320 --> 00:20:13,200
modified by the r3

479
00:20:13,200 --> 00:20:15,360
but the wacky primes

480
00:20:15,360 --> 00:20:18,400
with pp should still be a very valid

481
00:20:18,400 --> 00:20:21,440
statement with respect to the key since

482
00:20:21,440 --> 00:20:24,559
the verifier has the original k to check

483
00:20:24,559 --> 00:20:28,399
whether yk prime is valid

484
00:20:29,280 --> 00:20:32,080
finally yk and pp should hide the

485
00:20:32,080 --> 00:20:34,480
information about the ke

486
00:20:34,480 --> 00:20:37,760
since we need k privacy

487
00:20:37,760 --> 00:20:39,760
with this strength and leakage written

488
00:20:39,760 --> 00:20:42,480
hard releasing we can build a copyright

489
00:20:42,480 --> 00:20:44,960
by following the framework of cause and

490
00:20:44,960 --> 00:20:47,200
record another signature

491
00:20:47,200 --> 00:20:50,480
the mac consists of a y k generated from

492
00:20:50,480 --> 00:20:52,000
the weak kkk

493
00:20:52,000 --> 00:20:54,799
and a music proof demonstrating the

494
00:20:54,799 --> 00:20:59,840
knowledge of k with respect to pp and yk

495
00:20:59,840 --> 00:21:03,760
the verification checks both whether yk

496
00:21:03,760 --> 00:21:07,039
ppk belongs to the relation r and

497
00:21:07,039 --> 00:21:10,159
whether the nisk proof is valid

498
00:21:10,159 --> 00:21:13,039
here the message can also be bound to

499
00:21:13,039 --> 00:21:17,520
the proof using standard techniques

500
00:21:17,520 --> 00:21:20,960
then we construct this slrh relation

501
00:21:20,960 --> 00:21:25,039
recall that an slr edge relation ensures

502
00:21:25,039 --> 00:21:28,159
ppyk height k which is necessary for

503
00:21:28,159 --> 00:21:29,360
privacy

504
00:21:29,360 --> 00:21:32,480
and it prevents adversaries from finding

505
00:21:32,480 --> 00:21:35,679
y k prime k prime and such that both p p

506
00:21:35,679 --> 00:21:39,280
y k prime k prime and p v y k prime k

507
00:21:39,280 --> 00:21:41,360
belong to the relation

508
00:21:41,360 --> 00:21:42,960
we observe that

509
00:21:42,960 --> 00:21:45,120
privacy recruitment already prevents

510
00:21:45,120 --> 00:21:48,960
from fighting the sim k from pp and yk

511
00:21:48,960 --> 00:21:51,440
so if we can further provide collision

512
00:21:51,440 --> 00:21:54,880
resistance which means the rotary cannot

513
00:21:54,880 --> 00:21:57,120
find a different k prime

514
00:21:57,120 --> 00:22:00,360
to the k we can have a

515
00:22:00,360 --> 00:22:03,918
srrrh relation

516
00:22:05,039 --> 00:22:07,600
following this observation we first

517
00:22:07,600 --> 00:22:10,480
construct a private relation from

518
00:22:10,480 --> 00:22:13,440
deterministic public key encryption

519
00:22:13,440 --> 00:22:17,360
here we just encrypted the weak kk

520
00:22:17,360 --> 00:22:20,559
and a fresh public key and the letter

521
00:22:20,559 --> 00:22:23,120
the self-test and public key

522
00:22:23,120 --> 00:22:25,120
business statement

523
00:22:25,120 --> 00:22:28,159
it's an empty relation since it can be

524
00:22:28,159 --> 00:22:30,559
efficiently checked by just

525
00:22:30,559 --> 00:22:34,320
re-encrypting without using any remnants

526
00:22:34,320 --> 00:22:36,320
it's also private

527
00:22:36,320 --> 00:22:39,200
given the author input security of the

528
00:22:39,200 --> 00:22:41,840
underlying dpk scheme

529
00:22:41,840 --> 00:22:45,120
but it's not collision resistant

530
00:22:45,120 --> 00:22:48,559
because if the adversary changes the pk

531
00:22:48,559 --> 00:22:50,159
to a band pk

532
00:22:50,159 --> 00:22:52,480
there might be multiple messages with

533
00:22:52,480 --> 00:22:55,679
respect to the same self-test under the

534
00:22:55,679 --> 00:22:58,480
spam pk

535
00:22:59,280 --> 00:23:02,720
the last step is to leverage the risk to

536
00:23:02,720 --> 00:23:05,120
enforce the goodness of the chosen

537
00:23:05,120 --> 00:23:06,320
publicly

538
00:23:06,320 --> 00:23:09,360
that is the y case should contain a

539
00:23:09,360 --> 00:23:10,640
valid proof

540
00:23:10,640 --> 00:23:13,440
that demonstrates the chosen public key

541
00:23:13,440 --> 00:23:15,679
determines an injection

542
00:23:15,679 --> 00:23:17,600
in this case

543
00:23:17,600 --> 00:23:20,400
advertiser c and the public key can

544
00:23:20,400 --> 00:23:22,640
uniquely determines the underlying

545
00:23:22,640 --> 00:23:23,840
message k

546
00:23:23,840 --> 00:23:26,480
so the whole relation is the collision

547
00:23:26,480 --> 00:23:28,400
resistant

548
00:23:28,400 --> 00:23:30,880
from our primary

549
00:23:30,880 --> 00:23:31,919
result

550
00:23:31,919 --> 00:23:34,080
if a relation is both private and the

551
00:23:34,080 --> 00:23:37,679
collision resistant is already a slrh

552
00:23:37,679 --> 00:23:39,200
relation

553
00:23:39,200 --> 00:23:41,679
surface for our need

554
00:23:41,679 --> 00:23:44,400
as a conclusion we first construct a

555
00:23:44,400 --> 00:23:47,520
robust tractor using copper mac and

556
00:23:47,520 --> 00:23:48,840
conventional ram

557
00:23:48,840 --> 00:23:52,400
extractors to make the robust extractor

558
00:23:52,400 --> 00:23:55,039
work for only size dependent sources

559
00:23:55,039 --> 00:23:58,000
with minimal entropy this cutback should

560
00:23:58,000 --> 00:24:00,880
also be secure against any unpredictable

561
00:24:00,880 --> 00:24:02,559
auxiliary inputs

562
00:24:02,559 --> 00:24:04,960
then we constructed the copper map from

563
00:24:04,960 --> 00:24:08,240
a true simulation travel disk and an

564
00:24:08,240 --> 00:24:10,960
slrh relation

565
00:24:10,960 --> 00:24:15,039
and this slrh relation can be

566
00:24:15,039 --> 00:24:19,600
constructed from nisk and a dpke scheme

567
00:24:19,600 --> 00:24:21,679
and the dpke scheme should also be

568
00:24:21,679 --> 00:24:24,159
secure against any unpredictable angular

569
00:24:24,159 --> 00:24:27,039
inputs as well

570
00:24:27,200 --> 00:24:29,919
let's check the assumptions needed for

571
00:24:29,919 --> 00:24:32,960
the new for the primitives

572
00:24:32,960 --> 00:24:35,760
and the leaf nodes

573
00:24:35,760 --> 00:24:39,039
for ram extractor we have information

574
00:24:39,039 --> 00:24:41,600
theoretical skill reconstructions

575
00:24:41,600 --> 00:24:42,960
for nisk

576
00:24:42,960 --> 00:24:46,080
including true simulation trap risk it

577
00:24:46,080 --> 00:24:49,440
can be constructed from rsa something

578
00:24:49,440 --> 00:24:52,400
or powering your pairings

579
00:24:52,400 --> 00:24:55,840
or more recently from the lrv substring

580
00:24:55,840 --> 00:24:58,159
or the ddi transaction

581
00:24:58,159 --> 00:25:01,039
for gpe against any unpredictable

582
00:25:01,039 --> 00:25:03,840
argument inputs we have constructions

583
00:25:03,840 --> 00:25:06,400
from exponentially hard

584
00:25:06,400 --> 00:25:08,640
dds options

585
00:25:08,640 --> 00:25:11,919
so our robust extractor can be built

586
00:25:11,919 --> 00:25:16,159
upon we will study assumptions

587
00:25:16,159 --> 00:25:18,799
our third result is an extension to the

588
00:25:18,799 --> 00:25:20,320
father case

589
00:25:20,320 --> 00:25:23,200
we show that with a stronger cup map

590
00:25:23,200 --> 00:25:25,919
we have robust physics trackers for crs

591
00:25:25,919 --> 00:25:28,080
dependent sources without the half

592
00:25:28,080 --> 00:25:30,240
interpretation requirement

593
00:25:30,240 --> 00:25:31,919
and more interestingly

594
00:25:31,919 --> 00:25:34,000
archive map construction really

595
00:25:34,000 --> 00:25:37,200
satisfies the stronger definition so we

596
00:25:37,200 --> 00:25:40,400
can have the robust physique extractors

597
00:25:40,400 --> 00:25:43,039
from the same assumption as the robust

598
00:25:43,039 --> 00:25:46,320
extractors we give above

599
00:25:46,320 --> 00:25:49,440
let's start from a standard construction

600
00:25:49,440 --> 00:25:52,720
of firelight filters it uses a secure

601
00:25:52,720 --> 00:25:53,679
sketch

602
00:25:53,679 --> 00:25:56,559
which is an error correction code

603
00:25:56,559 --> 00:25:58,880
where the code dynamic much information

604
00:25:58,880 --> 00:26:00,400
about message

605
00:26:00,400 --> 00:26:02,720
the help string now contains a sketch

606
00:26:02,720 --> 00:26:05,760
information with which the per re the

607
00:26:05,760 --> 00:26:08,400
reproduction algorithm can convert the

608
00:26:08,400 --> 00:26:11,520
weak secret into another closed secret

609
00:26:11,520 --> 00:26:15,039
that was used to generate this sketch

610
00:26:15,039 --> 00:26:16,240
and then

611
00:26:16,240 --> 00:26:19,120
this weak secret can be used to produce

612
00:26:19,120 --> 00:26:21,120
the same perfect secret as the

613
00:26:21,120 --> 00:26:22,840
generation algorithm

614
00:26:22,840 --> 00:26:26,480
does as before we can we consider using

615
00:26:26,480 --> 00:26:28,880
cutback to authenticate the helper

616
00:26:28,880 --> 00:26:31,360
string such that the rosary cannot

617
00:26:31,360 --> 00:26:33,600
manifest the have string without being

618
00:26:33,600 --> 00:26:35,120
detected

619
00:26:35,120 --> 00:26:36,240
however

620
00:26:36,240 --> 00:26:39,039
the standard copy mac is installation

621
00:26:39,039 --> 00:26:40,000
here

622
00:26:40,000 --> 00:26:42,480
this is because we cannot ensure the

623
00:26:42,480 --> 00:26:45,120
weak secret key recovered from the

624
00:26:45,120 --> 00:26:48,000
secure sketch is identical to that one

625
00:26:48,000 --> 00:26:50,400
used in the generation algorithm

626
00:26:50,400 --> 00:26:51,440
and the

627
00:26:51,440 --> 00:26:54,080
rosary can manipulate this secret sketch

628
00:26:54,080 --> 00:26:55,200
as well

629
00:26:55,200 --> 00:26:57,360
by the definition of the secure sketch

630
00:26:57,360 --> 00:27:00,400
we can only ensure that this weak secret

631
00:27:00,400 --> 00:27:03,039
is close to the input security of the

632
00:27:03,039 --> 00:27:04,799
reproduction algorithm

633
00:27:04,799 --> 00:27:07,760
so we need a stronger copper map which

634
00:27:07,760 --> 00:27:10,240
prevents adversaries from forging an

635
00:27:10,240 --> 00:27:13,279
authentication tab being accepted by a

636
00:27:13,279 --> 00:27:14,720
closed secret

637
00:27:14,720 --> 00:27:17,279
we call this property of requires

638
00:27:17,279 --> 00:27:18,320
property

639
00:27:18,320 --> 00:27:21,360
fuzzy on flexibility

640
00:27:21,360 --> 00:27:23,919
fortunately although standard comeback

641
00:27:23,919 --> 00:27:27,039
is insufficient our compact construction

642
00:27:27,039 --> 00:27:29,360
actually satisfies this stronger

643
00:27:29,360 --> 00:27:30,720
definition

644
00:27:30,720 --> 00:27:33,360
and just said we construct robust valid

645
00:27:33,360 --> 00:27:36,320
character with using copy mac with fuzzy

646
00:27:36,320 --> 00:27:37,600
unforgetability

647
00:27:37,600 --> 00:27:40,880
we then construct this comeback from a

648
00:27:40,880 --> 00:27:42,399
fuzzy

649
00:27:42,399 --> 00:27:46,000
srs releasing which requires the reverse

650
00:27:46,000 --> 00:27:49,039
we cannot find k prime and y k prime

651
00:27:49,039 --> 00:27:51,679
such as y k prime and pp is a valid

652
00:27:51,679 --> 00:27:54,799
statement with respect to some k star

653
00:27:54,799 --> 00:27:56,720
which is cl which is near to the

654
00:27:56,720 --> 00:27:59,760
original witness key

655
00:27:59,760 --> 00:28:03,360
for this fuzzy slr releasing we don't

656
00:28:03,360 --> 00:28:06,880
need other fuzzy fuzzy building blocks

657
00:28:06,880 --> 00:28:08,000
instead

658
00:28:08,000 --> 00:28:11,200
we prove a private relation plus a

659
00:28:11,200 --> 00:28:14,000
creation resistance relation implies

660
00:28:14,000 --> 00:28:16,640
this fuzzy primitive

661
00:28:16,640 --> 00:28:19,120
the key idea is to show that the privacy

662
00:28:19,120 --> 00:28:21,440
already ensures that one cannot find a

663
00:28:21,440 --> 00:28:24,799
closed secret from yk while we already

664
00:28:24,799 --> 00:28:27,279
prove that the exact secret cannot be

665
00:28:27,279 --> 00:28:28,960
recovered from market

666
00:28:28,960 --> 00:28:32,480
we argue this in two cases first is easy

667
00:28:32,480 --> 00:28:34,559
to show the invisibility of finding a

668
00:28:34,559 --> 00:28:37,600
very close secret otherwise one can

669
00:28:37,600 --> 00:28:39,360
guess the exact one with high

670
00:28:39,360 --> 00:28:40,799
probability

671
00:28:40,799 --> 00:28:44,000
we also prove it also is still invisible

672
00:28:44,000 --> 00:28:46,480
to find a not very close one

673
00:28:46,480 --> 00:28:48,880
this is because one can always recover

674
00:28:48,880 --> 00:28:51,520
the exact one with the help of a

675
00:28:51,520 --> 00:28:54,480
secure sketch if it can find a not very

676
00:28:54,480 --> 00:28:55,840
close one

677
00:28:55,840 --> 00:28:58,880
note that our privacy definition is

678
00:28:58,880 --> 00:29:00,559
secure against

679
00:29:00,559 --> 00:29:03,120
auxiliary inputs we can treat the secure

680
00:29:03,120 --> 00:29:04,159
sketch

681
00:29:04,159 --> 00:29:07,039
as a as an auxiliary input and give it

682
00:29:07,039 --> 00:29:08,720
to the authority

683
00:29:08,720 --> 00:29:10,840
so we have this

684
00:29:10,840 --> 00:29:14,080
result now let's have a summary on the

685
00:29:14,080 --> 00:29:16,720
negative side we prove the lower bound

686
00:29:16,720 --> 00:29:19,120
and the interpretation requirement that

687
00:29:19,120 --> 00:29:21,600
was established for information

688
00:29:21,600 --> 00:29:24,480
theoretical and plain model robust

689
00:29:24,480 --> 00:29:27,360
extractors studio holds even when we

690
00:29:27,360 --> 00:29:30,080
introduce the crs and consider cis

691
00:29:30,080 --> 00:29:31,840
dependent sources

692
00:29:31,840 --> 00:29:34,480
on the compute on the positive side we

693
00:29:34,480 --> 00:29:36,240
beat the bound in the computational

694
00:29:36,240 --> 00:29:38,640
setting by giving a

695
00:29:38,640 --> 00:29:41,600
concrete computationally secure robust

696
00:29:41,600 --> 00:29:44,480
extractors for cis dependent sources

697
00:29:44,480 --> 00:29:46,880
with minimal entropy requirement

698
00:29:46,880 --> 00:29:49,600
we also extend our solution to the file

699
00:29:49,600 --> 00:29:50,799
case

700
00:29:50,799 --> 00:29:53,919
along this way we present a new mac

701
00:29:53,919 --> 00:29:56,480
primitive called copper mac that

702
00:29:56,480 --> 00:29:57,840
satisfies

703
00:29:57,840 --> 00:30:01,200
key privacy and auxiliary input security

704
00:30:01,200 --> 00:30:04,640
which might be of independent interest

705
00:30:04,640 --> 00:30:06,640
that's my presentation thanks for

706
00:30:06,640 --> 00:30:09,640
listening

