1
00:00:02,159 --> 00:00:05,520
um hello my name is and i'm really happy

2
00:00:05,520 --> 00:00:07,759
to be presenting this joint work with

3
00:00:07,759 --> 00:00:09,760
dreamwallavolta titled the round

4
00:00:09,760 --> 00:00:13,519
complexity of quantum zero knowledge

5
00:00:13,920 --> 00:00:15,440
to begin with i'm gonna start with some

6
00:00:15,440 --> 00:00:16,960
introduction about

7
00:00:16,960 --> 00:00:18,800
what is your knowledge and our

8
00:00:18,800 --> 00:00:21,840
contribution to its run complexity

9
00:00:21,840 --> 00:00:23,199
so

10
00:00:23,199 --> 00:00:25,279
as your knowledge protocol

11
00:00:25,279 --> 00:00:27,519
probably needs an introduction but

12
00:00:27,519 --> 00:00:29,279
it's basically an interactive protocol

13
00:00:29,279 --> 00:00:30,640
where

14
00:00:30,640 --> 00:00:33,040
someone approver

15
00:00:33,040 --> 00:00:36,079
can prove the rest of the statement

16
00:00:36,079 --> 00:00:38,079
to the verifier while revealing nothing

17
00:00:38,079 --> 00:00:39,920
beyond that so let's say we have a

18
00:00:39,920 --> 00:00:41,760
prover that wants to prove that x is in

19
00:00:41,760 --> 00:00:44,160
the language

20
00:00:44,160 --> 00:00:46,719
if we assume he has a witness w we want

21
00:00:46,719 --> 00:00:49,120
for the verifier to learn nothing

22
00:00:49,120 --> 00:00:51,919
about the weakness

23
00:00:52,399 --> 00:00:54,079
now a very well studied problem

24
00:00:54,079 --> 00:00:56,000
concerning zero knowledge is the number

25
00:00:56,000 --> 00:00:58,879
of messages extends in the protocol or

26
00:00:58,879 --> 00:01:00,640
in other words the round complexity of

27
00:01:00,640 --> 00:01:02,320
the protocol

28
00:01:02,320 --> 00:01:03,600
this is a very high interest in the

29
00:01:03,600 --> 00:01:05,438
cryptographic community

30
00:01:05,438 --> 00:01:07,760
and actually it has been shown that any

31
00:01:07,760 --> 00:01:10,400
statement can be proven even as us4 runs

32
00:01:10,400 --> 00:01:12,640
interaction

33
00:01:12,640 --> 00:01:14,159
for completeness i also want to mention

34
00:01:14,159 --> 00:01:16,320
this recent result that that's it's zero

35
00:01:16,320 --> 00:01:18,240
knowledge in just three rounds

36
00:01:18,240 --> 00:01:20,240
although it was not post quantum secure

37
00:01:20,240 --> 00:01:21,600
and this is gonna be

38
00:01:21,600 --> 00:01:24,399
relevant later

39
00:01:24,880 --> 00:01:26,960
now um

40
00:01:26,960 --> 00:01:28,560
i've been talking about zero knowledge

41
00:01:28,560 --> 00:01:30,799
were in b statements

42
00:01:30,799 --> 00:01:33,840
and what np is is a complexity class

43
00:01:33,840 --> 00:01:35,600
where it contains all the decision

44
00:01:35,600 --> 00:01:38,400
problems that if the answer is yes

45
00:01:38,400 --> 00:01:40,400
we have proofs that are verifiable in

46
00:01:40,400 --> 00:01:43,280
polynomial time by using a deterministic

47
00:01:43,280 --> 00:01:44,159
um

48
00:01:44,159 --> 00:01:46,640
a turing machine

49
00:01:46,640 --> 00:01:48,479
but if we take a look at this

50
00:01:48,479 --> 00:01:51,040
complex tissue figure we also notice

51
00:01:51,040 --> 00:01:53,439
that there are complexity classes and we

52
00:01:53,439 --> 00:01:56,320
can consider the quantum monologue of np

53
00:01:56,320 --> 00:01:58,159
which is qma or quantum birthday

54
00:01:58,159 --> 00:02:00,799
narrator which is the complexity class

55
00:02:00,799 --> 00:02:02,960
which contains all the decision problems

56
00:02:02,960 --> 00:02:05,040
that if the answer is yes

57
00:02:05,040 --> 00:02:06,240
now we have a

58
00:02:06,240 --> 00:02:08,639
polynomial time quantum proof that can

59
00:02:08,639 --> 00:02:11,038
still convince a quantum verifier with

60
00:02:11,038 --> 00:02:14,879
very high probability in polynomial time

61
00:02:14,879 --> 00:02:15,680
so

62
00:02:15,680 --> 00:02:18,959
an immediate uh question we have is

63
00:02:18,959 --> 00:02:20,640
do we have certain knowledge for qma

64
00:02:20,640 --> 00:02:25,120
statements and the answer is yes we do

65
00:02:25,120 --> 00:02:27,840
so quantum zero knowledge it's pretty

66
00:02:27,840 --> 00:02:29,680
much the same notion but now again we

67
00:02:29,680 --> 00:02:33,360
have a quantum statement so x is quantum

68
00:02:33,360 --> 00:02:35,840
and the prover verb can also be quantum

69
00:02:35,840 --> 00:02:38,640
the messages also can be quantum

70
00:02:38,640 --> 00:02:41,200
now uh in the quantum setting

71
00:02:41,200 --> 00:02:43,040
uh the best known results we have for

72
00:02:43,040 --> 00:02:45,440
round complexity is in constant rounds

73
00:02:45,440 --> 00:02:47,840
introduced in 2020 by this paper from

74
00:02:47,840 --> 00:02:50,160
vitas skins made

75
00:02:50,160 --> 00:02:52,800
and what we wondered is

76
00:02:52,800 --> 00:02:55,599
whether qma statements inherently

77
00:02:55,599 --> 00:02:56,800
introduce additional rounds of

78
00:02:56,800 --> 00:02:58,640
interaction and that's what we focused

79
00:02:58,640 --> 00:03:00,959
on this paper and we showed that this is

80
00:03:00,959 --> 00:03:03,599
not the case

81
00:03:03,680 --> 00:03:04,400
so

82
00:03:04,400 --> 00:03:06,319
for our results uh first of all we

83
00:03:06,319 --> 00:03:08,720
constructed a two-round statistical

84
00:03:08,720 --> 00:03:11,840
witnessing disability argument for gma

85
00:03:11,840 --> 00:03:14,319
which i'm gonna define later

86
00:03:14,319 --> 00:03:16,080
but then using this

87
00:03:16,080 --> 00:03:18,560
we were able to compile it into a full

88
00:03:18,560 --> 00:03:20,720
fledge through knowledge argument

89
00:03:20,720 --> 00:03:22,480
in just four rounds at certain

90
00:03:22,480 --> 00:03:25,440
statistical knowledge

91
00:03:25,440 --> 00:03:26,560
finally

92
00:03:26,560 --> 00:03:27,920
we also moved

93
00:03:27,920 --> 00:03:30,000
our research into the timing bundle the

94
00:03:30,000 --> 00:03:32,959
time model is just assuming that parties

95
00:03:32,959 --> 00:03:34,640
can measure the lapse of time and use

96
00:03:34,640 --> 00:03:36,080
this in the protocol

97
00:03:36,080 --> 00:03:37,680
and we construct two rounds during

98
00:03:37,680 --> 00:03:39,760
knowledge arguments

99
00:03:39,760 --> 00:03:40,799
both

100
00:03:40,799 --> 00:03:42,799
computational and statistical depending

101
00:03:42,799 --> 00:03:45,680
on the assumptions

102
00:03:45,680 --> 00:03:46,400
and

103
00:03:46,400 --> 00:03:48,000
in this talk i'm going to focus on this

104
00:03:48,000 --> 00:03:50,879
first two results

105
00:03:52,080 --> 00:03:53,760
uh but before getting into any

106
00:03:53,760 --> 00:03:57,599
constructions i do want to

107
00:03:57,599 --> 00:04:00,640
focus and define sbst's commitments

108
00:04:00,640 --> 00:04:02,239
because it's a tool that we use a lot in

109
00:04:02,239 --> 00:04:04,720
this paper

110
00:04:04,799 --> 00:04:05,920
now

111
00:04:05,920 --> 00:04:07,519
most of you are familiar with commitment

112
00:04:07,519 --> 00:04:09,680
schemes in a commitment scheme we have a

113
00:04:09,680 --> 00:04:12,000
sender and a receiver and a server

114
00:04:12,000 --> 00:04:14,640
command to a specific value

115
00:04:14,640 --> 00:04:16,320
m in the comment phase

116
00:04:16,320 --> 00:04:18,238
that he can later

117
00:04:18,238 --> 00:04:19,839
reveal

118
00:04:19,839 --> 00:04:21,600
to the receiver

119
00:04:21,600 --> 00:04:23,199
now what we want from a commitment

120
00:04:23,199 --> 00:04:26,000
scheme is for it to be hiding

121
00:04:26,000 --> 00:04:28,000
which means that the message m remains

122
00:04:28,000 --> 00:04:30,080
hidden from the receiver

123
00:04:30,080 --> 00:04:32,160
during the commit phase

124
00:04:32,160 --> 00:04:34,800
or in other words uh if we have

125
00:04:34,800 --> 00:04:37,280
commitments of two different messages

126
00:04:37,280 --> 00:04:39,199
they are indistinguishable from the

127
00:04:39,199 --> 00:04:41,600
receiver

128
00:04:41,600 --> 00:04:43,680
now uh we also want for the commitment

129
00:04:43,680 --> 00:04:46,000
skin to be binding which means after the

130
00:04:46,000 --> 00:04:49,360
sender commits to the message m

131
00:04:49,360 --> 00:04:50,800
she can only

132
00:04:50,800 --> 00:04:53,199
open the commitment to this message m

133
00:04:53,199 --> 00:04:55,199
and not be able to trick the receiver by

134
00:04:55,199 --> 00:04:57,840
switching the message

135
00:04:57,840 --> 00:04:59,600
usually most commitment schemes can be

136
00:04:59,600 --> 00:05:01,360
either

137
00:05:01,360 --> 00:05:03,520
statistically hiding in computational

138
00:05:03,520 --> 00:05:05,360
binding or computationally hiding and

139
00:05:05,360 --> 00:05:07,600
statistically binding

140
00:05:07,600 --> 00:05:10,800
but what we use is sometimes binding

141
00:05:10,800 --> 00:05:13,280
statistically hiding or spsh commitments

142
00:05:13,280 --> 00:05:14,320
introduced

143
00:05:14,320 --> 00:05:16,160
in this paper here

144
00:05:16,160 --> 00:05:18,320
where you can see that the commitment

145
00:05:18,320 --> 00:05:22,080
phase takes three rounds of interaction

146
00:05:22,080 --> 00:05:23,680
and

147
00:05:23,680 --> 00:05:25,120
well as their name suggests their

148
00:05:25,120 --> 00:05:27,280
commitment schemes that they are

149
00:05:27,280 --> 00:05:30,240
statistically hiding which means that uh

150
00:05:30,240 --> 00:05:32,320
the commitment of two different messages

151
00:05:32,320 --> 00:05:34,400
m0 and m1 are statistically

152
00:05:34,400 --> 00:05:37,680
indistinguishable from the receiver

153
00:05:37,680 --> 00:05:40,320
but they are so all are sometimes

154
00:05:40,320 --> 00:05:41,440
binding

155
00:05:41,440 --> 00:05:43,280
what does that mean it means that

156
00:05:43,280 --> 00:05:45,039
there's a very small and negligibly

157
00:05:45,039 --> 00:05:47,360
small probability for the commitment to

158
00:05:47,360 --> 00:05:49,680
be perfectly binding

159
00:05:49,680 --> 00:05:51,680
and if that's the case with very small

160
00:05:51,680 --> 00:05:53,759
probability that they're

161
00:05:53,759 --> 00:05:56,319
binding then we can extract the message

162
00:05:56,319 --> 00:05:58,160
n

163
00:05:58,160 --> 00:06:01,039
with a straight line instruction

164
00:06:01,039 --> 00:06:02,880
so that's pretty much it

165
00:06:02,880 --> 00:06:04,880
and we're going to see how we use them

166
00:06:04,880 --> 00:06:06,880
getting into our first instruction

167
00:06:06,880 --> 00:06:08,880
of witnessing this in disgusability

168
00:06:08,880 --> 00:06:11,360
arguments

169
00:06:12,639 --> 00:06:14,560
now what is

170
00:06:14,560 --> 00:06:16,720
witnessing this ability well it's a

171
00:06:16,720 --> 00:06:19,039
weaker notion of your knowledge

172
00:06:19,039 --> 00:06:20,639
again we have the same setting we have

173
00:06:20,639 --> 00:06:22,000
approver and the verifier and the

174
00:06:22,000 --> 00:06:24,000
proofer wants to prove

175
00:06:24,000 --> 00:06:26,720
some statement x is in the language

176
00:06:26,720 --> 00:06:29,360
uh but instead of trying to achieve zero

177
00:06:29,360 --> 00:06:31,120
knowledge

178
00:06:31,120 --> 00:06:32,560
what we're trying to

179
00:06:32,560 --> 00:06:35,039
achieve is for the verifier to not be

180
00:06:35,039 --> 00:06:37,039
able to tell the difference between two

181
00:06:37,039 --> 00:06:40,960
valid witnesses used by prover

182
00:06:41,360 --> 00:06:43,360
and this is exactly what we construct

183
00:06:43,360 --> 00:06:45,440
for pma but before getting to the

184
00:06:45,440 --> 00:06:47,360
construction i also have to introduce

185
00:06:47,360 --> 00:06:48,800
another

186
00:06:48,800 --> 00:06:50,880
weaker notion of genomics or maybe a

187
00:06:50,880 --> 00:06:53,440
relaxation of your knowledge which is

188
00:06:53,440 --> 00:06:55,840
sigma protocols

189
00:06:55,840 --> 00:06:57,919
now sigma protocols it's just like zero

190
00:06:57,919 --> 00:06:59,039
knowledge but we have to assume

191
00:06:59,039 --> 00:07:01,360
anonymous verifier

192
00:07:01,360 --> 00:07:03,120
so a sigma protocol usually looks like

193
00:07:03,120 --> 00:07:05,520
this we have three messages

194
00:07:05,520 --> 00:07:06,639
first of all the prover sends a

195
00:07:06,639 --> 00:07:08,800
commitment alpha then the second message

196
00:07:08,800 --> 00:07:11,360
is the challenge beta by the verifier

197
00:07:11,360 --> 00:07:12,960
and then the prover sends his last

198
00:07:12,960 --> 00:07:14,319
message

199
00:07:14,319 --> 00:07:16,880
gamma which is a response to the talent

200
00:07:16,880 --> 00:07:18,560
and uh

201
00:07:18,560 --> 00:07:22,160
thus persuading the verifier

202
00:07:22,160 --> 00:07:24,240
and now this instance here that we see

203
00:07:24,240 --> 00:07:26,560
is a quantum sigma protocol which was

204
00:07:26,560 --> 00:07:28,639
introduced in this paper by broadband

205
00:07:28,639 --> 00:07:31,039
and grillo and the very important

206
00:07:31,039 --> 00:07:32,400
property that we're going to use is that

207
00:07:32,400 --> 00:07:35,280
the computation of beta and gamma

208
00:07:35,280 --> 00:07:37,039
is completely classical

209
00:07:37,039 --> 00:07:40,159
so it's just the first message

210
00:07:41,840 --> 00:07:43,120
now

211
00:07:43,120 --> 00:07:44,879
in their paper

212
00:07:44,879 --> 00:07:46,560
they prove computations are knowledge

213
00:07:46,560 --> 00:07:48,560
and statistical soundness but if you

214
00:07:48,560 --> 00:07:50,000
remember uh

215
00:07:50,000 --> 00:07:51,360
when i introduced the results i'd be

216
00:07:51,360 --> 00:07:52,639
talking about the

217
00:07:52,639 --> 00:07:54,879
statistical wi and this cultural

218
00:07:54,879 --> 00:07:57,199
knowledge

219
00:07:57,280 --> 00:07:59,199
so in order to do that we have to extend

220
00:07:59,199 --> 00:08:01,520
this to statistical knowledge the sigma

221
00:08:01,520 --> 00:08:03,199
purple as well

222
00:08:03,199 --> 00:08:03,919
and

223
00:08:03,919 --> 00:08:06,160
of course computational soundness

224
00:08:06,160 --> 00:08:08,720
uh now this is not a

225
00:08:08,720 --> 00:08:10,479
trivial how to do it and i don't want to

226
00:08:10,479 --> 00:08:13,440
get into too much details but

227
00:08:13,440 --> 00:08:16,800
so in their protocol they use

228
00:08:16,800 --> 00:08:19,599
statistically binding commitments

229
00:08:19,599 --> 00:08:20,639
and

230
00:08:20,639 --> 00:08:22,800
these commitments they cannot be used in

231
00:08:22,800 --> 00:08:24,840
order to prove statistical

232
00:08:24,840 --> 00:08:28,479
knowledge so uh what we do is we replace

233
00:08:28,479 --> 00:08:31,680
our commitments with sbsa's commitments

234
00:08:31,680 --> 00:08:33,279
now these commitments are statistically

235
00:08:33,279 --> 00:08:35,519
hiding so we're able to get statistical

236
00:08:35,519 --> 00:08:37,039
knowledge

237
00:08:37,039 --> 00:08:37,919
uh

238
00:08:37,919 --> 00:08:40,640
and they're also sometimes binding

239
00:08:40,640 --> 00:08:42,399
now since they're sometimes binding in

240
00:08:42,399 --> 00:08:44,720
the soundness proof we have to uh set

241
00:08:44,720 --> 00:08:46,560
the parameter of further privileges

242
00:08:46,560 --> 00:08:48,480
accordingly

243
00:08:48,480 --> 00:08:51,519
to uh still make it secure

244
00:08:51,519 --> 00:08:52,959
and in order to get computational

245
00:08:52,959 --> 00:08:55,200
soundness since we have almost refreshed

246
00:08:55,200 --> 00:08:56,720
your knowledge we can perform a

247
00:08:56,720 --> 00:08:59,200
particular repetition of the protocol

248
00:08:59,200 --> 00:09:00,080
and

249
00:09:00,080 --> 00:09:02,480
still

250
00:09:02,480 --> 00:09:04,080
make it secure and have the consumer

251
00:09:04,080 --> 00:09:06,480
science

252
00:09:07,600 --> 00:09:10,480
now having that i also need to introduce

253
00:09:10,480 --> 00:09:12,720
some additional tools and then get into

254
00:09:12,720 --> 00:09:14,959
the actual construction

255
00:09:14,959 --> 00:09:18,160
so first of all we also need a

256
00:09:18,160 --> 00:09:19,680
pseudo-random function now should the

257
00:09:19,680 --> 00:09:21,440
random function

258
00:09:21,440 --> 00:09:24,959
is a protocol where

259
00:09:25,040 --> 00:09:26,720
there's a generator that produces a key

260
00:09:26,720 --> 00:09:29,279
and then given the key we can input it

261
00:09:29,279 --> 00:09:30,959
into a function that produces a

262
00:09:30,959 --> 00:09:34,479
seemingly random string

263
00:09:34,640 --> 00:09:36,640
we also use a navbaitsy or fully

264
00:09:36,640 --> 00:09:38,959
homomorphic encryption scheme and in

265
00:09:38,959 --> 00:09:41,000
this scheme we're able to perform

266
00:09:41,000 --> 00:09:44,880
computations under encrypted uh data so

267
00:09:44,880 --> 00:09:46,399
let's say we have two parties alice and

268
00:09:46,399 --> 00:09:47,279
bob

269
00:09:47,279 --> 00:09:48,880
alice can send an encrypted message and

270
00:09:48,880 --> 00:09:50,480
then bob can compute

271
00:09:50,480 --> 00:09:52,000
evaluations of the message under

272
00:09:52,000 --> 00:09:53,680
encryption without having to first

273
00:09:53,680 --> 00:09:55,920
decrypt the message

274
00:09:55,920 --> 00:09:58,160
and then finally we also use a witness

275
00:09:58,160 --> 00:10:01,040
in this usability argument 4 and p

276
00:10:01,040 --> 00:10:03,519
which is non-interactive so

277
00:10:03,519 --> 00:10:06,000
we can just do it in one round and for

278
00:10:06,000 --> 00:10:07,760
mp this exists then here are some

279
00:10:07,760 --> 00:10:10,160
constructions

280
00:10:10,160 --> 00:10:12,079
now using all this and using the sigma

281
00:10:12,079 --> 00:10:15,360
protocol with statistical knowledge

282
00:10:15,360 --> 00:10:17,680
we finally arrived a reconstruction

283
00:10:17,680 --> 00:10:19,839
where the main idea is that

284
00:10:19,839 --> 00:10:21,600
we use the free home morph encryption

285
00:10:21,600 --> 00:10:23,200
scheme to round collapse the sigma

286
00:10:23,200 --> 00:10:25,200
protocol

287
00:10:25,200 --> 00:10:27,200
so here as you can see to the three

288
00:10:27,200 --> 00:10:29,120
messages we have two

289
00:10:29,120 --> 00:10:31,120
and in the first message the very first

290
00:10:31,120 --> 00:10:33,360
sends and encrypted to the random

291
00:10:33,360 --> 00:10:34,880
function key

292
00:10:34,880 --> 00:10:36,399
and the prover

293
00:10:36,399 --> 00:10:38,240
sends both of his messages at the same

294
00:10:38,240 --> 00:10:40,079
time so

295
00:10:40,079 --> 00:10:44,560
given this key he can sample

296
00:10:44,560 --> 00:10:47,760
a challenge using the prf

297
00:10:47,760 --> 00:10:49,360
but of course he has to do that under

298
00:10:49,360 --> 00:10:51,519
encryption homomorphically

299
00:10:51,519 --> 00:10:53,040
because he cannot know the talents and

300
00:10:53,040 --> 00:10:55,839
then after he has done that

301
00:10:55,839 --> 00:10:58,640
he can compute his service message alpha

302
00:10:58,640 --> 00:11:00,399
and also he can compute his response

303
00:11:00,399 --> 00:11:01,360
gamma

304
00:11:01,360 --> 00:11:02,959
using the talent but of course in order

305
00:11:02,959 --> 00:11:03,839
to do that he has to do it

306
00:11:03,839 --> 00:11:06,079
homomorphically under encryption that's

307
00:11:06,079 --> 00:11:07,839
why i use the f18

308
00:11:07,839 --> 00:11:09,760
and then after he

309
00:11:09,760 --> 00:11:12,160
computes both of his messages he sends

310
00:11:12,160 --> 00:11:14,079
them back to the verifier now the

311
00:11:14,079 --> 00:11:17,120
verifier has the secret key of the

312
00:11:17,120 --> 00:11:18,800
encryption scheme so he can't decrypt it

313
00:11:18,800 --> 00:11:19,760
and get

314
00:11:19,760 --> 00:11:21,360
uh gamma

315
00:11:21,360 --> 00:11:23,279
but he can also recompute beta and then

316
00:11:23,279 --> 00:11:24,720
he has the whole transcript and he can

317
00:11:24,720 --> 00:11:27,600
check if the sigma protocol is valid

318
00:11:27,600 --> 00:11:30,079
in this protocol we repeat this messages

319
00:11:30,079 --> 00:11:32,000
twice

320
00:11:32,000 --> 00:11:34,480
and the prover sent a wi proof that

321
00:11:34,480 --> 00:11:36,480
shows that at least one of the two

322
00:11:36,480 --> 00:11:38,880
instances was computed correctly

323
00:11:38,880 --> 00:11:42,720
now a wi foreign p is sufficient because

324
00:11:42,720 --> 00:11:44,560
beta and gamma the last two messages of

325
00:11:44,560 --> 00:11:46,240
the sigma protocol are both completely

326
00:11:46,240 --> 00:11:47,600
classical

327
00:11:47,600 --> 00:11:49,760
so this is enough

328
00:11:49,760 --> 00:11:53,120
and that's pretty much it

329
00:11:53,120 --> 00:11:55,279
we also here include nsb state

330
00:11:55,279 --> 00:11:57,600
commitments of the randomness using

331
00:11:57,600 --> 00:11:59,360
homework valuation

332
00:11:59,360 --> 00:12:02,800
which is necessary for the soundness

333
00:12:02,800 --> 00:12:04,160
for the soundness proof i'm not going to

334
00:12:04,160 --> 00:12:06,560
get into too much different detail but

335
00:12:06,560 --> 00:12:08,399
again

336
00:12:08,399 --> 00:12:10,959
since we're using nsbs commitment

337
00:12:10,959 --> 00:12:14,800
still we can um achieve statistical wi

338
00:12:14,800 --> 00:12:16,399
but of course we get computational

339
00:12:16,399 --> 00:12:18,560
soundness and uh i do want to point out

340
00:12:18,560 --> 00:12:19,680
that since we have computational

341
00:12:19,680 --> 00:12:22,000
soundness this is a wi argument not the

342
00:12:22,000 --> 00:12:22,959
proof

343
00:12:22,959 --> 00:12:24,720
and this is a main building block in all

344
00:12:24,720 --> 00:12:26,480
of our following construction so we have

345
00:12:26,480 --> 00:12:29,279
journalists arguments and not proofs

346
00:12:29,279 --> 00:12:31,440
uh but also since we use spss

347
00:12:31,440 --> 00:12:34,480
commitments if you remember i said that

348
00:12:34,480 --> 00:12:36,720
there's uh some exponential loss because

349
00:12:36,720 --> 00:12:39,279
we have sometimes binding commitments

350
00:12:39,279 --> 00:12:41,760
and we have to

351
00:12:41,760 --> 00:12:43,200
account for it

352
00:12:43,200 --> 00:12:44,720
in the other primitives by setting the

353
00:12:44,720 --> 00:12:47,200
parameters accordingly so in order to

354
00:12:47,200 --> 00:12:49,040
still have secure

355
00:12:49,040 --> 00:12:50,639
protocols we have to assume quite a

356
00:12:50,639 --> 00:12:53,360
polynomial hardness of the we

357
00:12:53,360 --> 00:12:55,519
now again since we use this protocol as

358
00:12:55,519 --> 00:12:57,600
a building block for all our next

359
00:12:57,600 --> 00:13:00,160
constructions all of our consumptions

360
00:13:00,160 --> 00:13:01,440
have to

361
00:13:01,440 --> 00:13:03,200
assume quite a polynomial hardness over

362
00:13:03,200 --> 00:13:06,200
lw

363
00:13:06,720 --> 00:13:08,639
um

364
00:13:08,639 --> 00:13:10,399
now i'm gonna move to zero knowledge

365
00:13:10,399 --> 00:13:12,399
protocols and before going to any

366
00:13:12,399 --> 00:13:14,480
constructions i'm i want to focus on

367
00:13:14,480 --> 00:13:16,399
existing techniques both classical and

368
00:13:16,399 --> 00:13:17,680
quantum

369
00:13:17,680 --> 00:13:20,399
and see what we have to use some of the

370
00:13:20,399 --> 00:13:22,160
techniques how we use them for our

371
00:13:22,160 --> 00:13:24,719
protocols

372
00:13:28,000 --> 00:13:29,519
so

373
00:13:29,519 --> 00:13:31,440
first of all i'm gonna go over the

374
00:13:31,440 --> 00:13:33,040
classical setting

375
00:13:33,040 --> 00:13:35,920
in a bit more details now this is how as

376
00:13:35,920 --> 00:13:37,279
your knowledge protocol loops in the

377
00:13:37,279 --> 00:13:39,279
classical setting usually

378
00:13:39,279 --> 00:13:41,920
it's pretty similar to a sigma protocol

379
00:13:41,920 --> 00:13:43,920
uh where the prover sends a commitment

380
00:13:43,920 --> 00:13:46,560
alpha that contains the proof

381
00:13:46,560 --> 00:13:48,560
then the very first talents challenging

382
00:13:48,560 --> 00:13:50,480
the approver and the approver partially

383
00:13:50,480 --> 00:13:52,639
opened his commitment revealing the part

384
00:13:52,639 --> 00:13:54,399
of the proof and thus persuading the

385
00:13:54,399 --> 00:13:55,600
verifier

386
00:13:55,600 --> 00:13:57,440
of course unlike the sigma protocol the

387
00:13:57,440 --> 00:13:59,600
very fire is not always honest

388
00:13:59,600 --> 00:14:01,199
so we have another message in the

389
00:14:01,199 --> 00:14:02,639
beginning where they refer commits to

390
00:14:02,639 --> 00:14:04,639
the silence so as not to be able to

391
00:14:04,639 --> 00:14:06,399
change things after seeing the progress

392
00:14:06,399 --> 00:14:08,880
commitment

393
00:14:09,600 --> 00:14:11,360
now um

394
00:14:11,360 --> 00:14:13,120
since approver cannot see the talents

395
00:14:13,120 --> 00:14:14,800
beforehand

396
00:14:14,800 --> 00:14:17,440
uh he should really know the proof and

397
00:14:17,440 --> 00:14:20,079
that's how we usually

398
00:14:20,079 --> 00:14:21,920
achieve soundness

399
00:14:21,920 --> 00:14:24,240
but how do we produce your knowledge

400
00:14:24,240 --> 00:14:26,240
and you know to do that we have to use a

401
00:14:26,240 --> 00:14:27,680
simulator

402
00:14:27,680 --> 00:14:29,760
now a simulator is someone who doesn't

403
00:14:29,760 --> 00:14:31,839
know the proof

404
00:14:31,839 --> 00:14:33,920
and we show that the output of the

405
00:14:33,920 --> 00:14:35,279
simulated interaction is

406
00:14:35,279 --> 00:14:37,120
indistinguishable from

407
00:14:37,120 --> 00:14:39,279
the real interaction

408
00:14:39,279 --> 00:14:40,959
so

409
00:14:40,959 --> 00:14:42,800
we show that the simulator can still

410
00:14:42,800 --> 00:14:44,320
persuade the very fire without knowing

411
00:14:44,320 --> 00:14:46,000
the truth and thus we have zero

412
00:14:46,000 --> 00:14:47,519
knowledge

413
00:14:47,519 --> 00:14:49,680
a very common way of

414
00:14:49,680 --> 00:14:52,399
proving zero knowledge is rewinding

415
00:14:52,399 --> 00:14:54,800
so how rewinding works is

416
00:14:54,800 --> 00:14:56,399
the very fire

417
00:14:56,399 --> 00:14:58,000
in the first message of course since the

418
00:14:58,000 --> 00:14:59,279
commitment to the silence and the

419
00:14:59,279 --> 00:15:01,360
simulator well he doesn't know the

420
00:15:01,360 --> 00:15:03,920
proofs so he has to send a commitment to

421
00:15:03,920 --> 00:15:07,120
some carpets to some string zero

422
00:15:07,120 --> 00:15:09,839
but the important thing here is that

423
00:15:09,839 --> 00:15:11,920
uh the simulator knows the inner state

424
00:15:11,920 --> 00:15:14,240
of the verifier so he can take a

425
00:15:14,240 --> 00:15:17,040
snapshot of the interstate here

426
00:15:17,040 --> 00:15:18,079
and then

427
00:15:18,079 --> 00:15:19,760
after the very first commits to the

428
00:15:19,760 --> 00:15:21,600
talents now the simulator knows the

429
00:15:21,600 --> 00:15:23,440
talents of course it's a little bit late

430
00:15:23,440 --> 00:15:26,000
but since he took a snapshot here he can

431
00:15:26,000 --> 00:15:29,759
rewind back to when he took the snapshot

432
00:15:29,759 --> 00:15:31,519
and then he can repeat the protocol by

433
00:15:31,519 --> 00:15:34,160
knowing the very first silence and now

434
00:15:34,160 --> 00:15:35,680
he doesn't have to commit to some

435
00:15:35,680 --> 00:15:36,880
carpets

436
00:15:36,880 --> 00:15:38,560
string with zero

437
00:15:38,560 --> 00:15:40,560
but he can commit to a value that

438
00:15:40,560 --> 00:15:43,120
pursues a verifier and tricks him

439
00:15:43,120 --> 00:15:44,880
and thus achieving a transcript that's

440
00:15:44,880 --> 00:15:48,399
indistinguishable from the early one

441
00:15:48,959 --> 00:15:49,920
now

442
00:15:49,920 --> 00:15:52,000
what happens in the quantum setting that

443
00:15:52,000 --> 00:15:53,920
we talked about and in the quantum

444
00:15:53,920 --> 00:15:56,880
setting the most well-known theorem

445
00:15:56,880 --> 00:15:58,959
is the no cloning theory

446
00:15:58,959 --> 00:16:00,639
which says that there is no quantum

447
00:16:00,639 --> 00:16:03,759
procedure that transforms

448
00:16:03,759 --> 00:16:06,320
like even one quantum state

449
00:16:06,320 --> 00:16:09,199
copies it and outputs to uh identical

450
00:16:09,199 --> 00:16:10,560
quantum states

451
00:16:10,560 --> 00:16:12,160
so in the classical setting the most

452
00:16:12,160 --> 00:16:13,680
basic thing you can do is have a string

453
00:16:13,680 --> 00:16:15,199
copied and you can perform computations

454
00:16:15,199 --> 00:16:17,120
of the string and still have

455
00:16:17,120 --> 00:16:19,519
an original copy intact here you cannot

456
00:16:19,519 --> 00:16:20,800
do that

457
00:16:20,800 --> 00:16:22,959
and then the quantum procedure

458
00:16:22,959 --> 00:16:25,279
uh changes

459
00:16:25,279 --> 00:16:27,199
the quantum state

460
00:16:27,199 --> 00:16:30,560
so why is that important for us well

461
00:16:30,560 --> 00:16:32,160
if we try to do the same thing as a

462
00:16:32,160 --> 00:16:34,399
classical setting now we have a quantum

463
00:16:34,399 --> 00:16:36,320
verifier so the inner state of the fire

464
00:16:36,320 --> 00:16:39,519
is also quantum so the simulator cannot

465
00:16:39,519 --> 00:16:41,600
take a snapshot

466
00:16:41,600 --> 00:16:43,440
so even after the very far rebuilt

467
00:16:43,440 --> 00:16:46,079
challenge he cannot rewind so it seems

468
00:16:46,079 --> 00:16:48,320
like his stuff

469
00:16:48,320 --> 00:16:49,920
now of course there are simulation

470
00:16:49,920 --> 00:16:52,320
techniques that don't use rewinding

471
00:16:52,320 --> 00:16:54,880
but they still directly directly rely on

472
00:16:54,880 --> 00:16:56,320
cloning

473
00:16:56,320 --> 00:16:57,839
and

474
00:16:57,839 --> 00:16:59,920
we cannot just extend it to the quantum

475
00:16:59,920 --> 00:17:01,519
set

476
00:17:01,519 --> 00:17:04,319
so we need another solution and one

477
00:17:04,319 --> 00:17:06,480
solution was given by these two papers

478
00:17:06,480 --> 00:17:09,199
anatomy plaque and potassium smelly

479
00:17:09,199 --> 00:17:11,280
where they achieve and they construct a

480
00:17:11,280 --> 00:17:14,400
linear extraction technique

481
00:17:14,400 --> 00:17:16,319
this exercise technique is

482
00:17:16,319 --> 00:17:17,599
the one we're also going to use the

483
00:17:17,599 --> 00:17:20,480
protocol so i'm going to present it now

484
00:17:20,480 --> 00:17:22,319
but before being able to present it i

485
00:17:22,319 --> 00:17:24,400
need to uh introduce some necessary

486
00:17:24,400 --> 00:17:26,000
tools

487
00:17:26,000 --> 00:17:27,439
the first one is a quantum free

488
00:17:27,439 --> 00:17:29,360
homomorphic encryption scheme i already

489
00:17:29,360 --> 00:17:30,480
talked about the free homework

490
00:17:30,480 --> 00:17:33,440
encryption scheme and this is just the

491
00:17:33,440 --> 00:17:35,520
quantum analog of it where it's pretty

492
00:17:35,520 --> 00:17:37,120
much the same notion but instead of a

493
00:17:37,120 --> 00:17:39,039
classical message we have a quantum

494
00:17:39,039 --> 00:17:42,000
state as our method and of course both

495
00:17:42,000 --> 00:17:43,760
parties can be quantum

496
00:17:43,760 --> 00:17:44,720
and

497
00:17:44,720 --> 00:17:47,200
bob can perform again

498
00:17:47,200 --> 00:17:49,679
homework computations

499
00:17:49,679 --> 00:17:50,559
uh

500
00:17:50,559 --> 00:17:53,360
for any arbitrary unitary u q during

501
00:17:53,360 --> 00:17:54,640
vertices

502
00:17:54,640 --> 00:17:57,280
are what we use in the quantum setting

503
00:17:57,280 --> 00:17:59,600
to perform computations

504
00:17:59,600 --> 00:18:02,160
so we have a quantum of ac scheme

505
00:18:02,160 --> 00:18:04,000
and we also use a compute and compare

506
00:18:04,000 --> 00:18:05,679
fiscal problem

507
00:18:05,679 --> 00:18:07,840
now a computer compare program or a csm

508
00:18:07,840 --> 00:18:10,480
program is parameterized by a function f

509
00:18:10,480 --> 00:18:14,640
a string s and the message said

510
00:18:14,640 --> 00:18:17,679
and given an input x this program checks

511
00:18:17,679 --> 00:18:21,120
if f of x equals the string s and if it

512
00:18:21,120 --> 00:18:23,120
does it returns

513
00:18:23,120 --> 00:18:27,600
the message z otherwise we get nothing

514
00:18:27,760 --> 00:18:30,320
now by using an obfuscator we can

515
00:18:30,320 --> 00:18:32,640
obfuscate this program

516
00:18:32,640 --> 00:18:34,559
uh into the office cases program where

517
00:18:34,559 --> 00:18:36,400
the implementation is hidden to any

518
00:18:36,400 --> 00:18:39,039
adversary

519
00:18:40,080 --> 00:18:42,559
now finally we also use a cds or a

520
00:18:42,559 --> 00:18:44,000
conditional disclosure of sequence

521
00:18:44,000 --> 00:18:45,440
protocol

522
00:18:45,440 --> 00:18:46,240
where

523
00:18:46,240 --> 00:18:49,039
in this case boom book can set a message

524
00:18:49,039 --> 00:18:51,360
to alice only if a certain statement is

525
00:18:51,360 --> 00:18:52,640
correct

526
00:18:52,640 --> 00:18:55,600
so let's say we have the statement here

527
00:18:55,600 --> 00:18:58,400
conditioned on the witness w that alice

528
00:18:58,400 --> 00:18:59,360
has

529
00:18:59,360 --> 00:19:02,000
so alice first must send a message that

530
00:19:02,000 --> 00:19:04,559
contains his witness and then bob

531
00:19:04,559 --> 00:19:07,200
sends his message m

532
00:19:07,200 --> 00:19:10,640
that alice can only get if this

533
00:19:10,640 --> 00:19:13,440
statement is correct

534
00:19:13,440 --> 00:19:15,120
now all of these tools i think are going

535
00:19:15,120 --> 00:19:16,720
to make more sense

536
00:19:16,720 --> 00:19:18,640
when i present you the protocol which we

537
00:19:18,640 --> 00:19:22,799
call the homomorphic trapdoor technique

538
00:19:23,679 --> 00:19:25,840
and this is the main idea we we have a

539
00:19:25,840 --> 00:19:28,000
sender and the receiver and the sender

540
00:19:28,000 --> 00:19:29,360
in this journal's protocol is going to

541
00:19:29,360 --> 00:19:30,720
be the very fire that you stick with the

542
00:19:30,720 --> 00:19:34,400
proverb just to not have any confusion

543
00:19:34,400 --> 00:19:36,160
so here's how it works

544
00:19:36,160 --> 00:19:38,480
the sender first of all sends sends an

545
00:19:38,480 --> 00:19:40,880
encryption to some trapdoor which is an

546
00:19:40,880 --> 00:19:42,880
arbitrary string

547
00:19:42,880 --> 00:19:45,039
and also sends a computer compare for

548
00:19:45,039 --> 00:19:47,600
scada's program that on input the

549
00:19:47,600 --> 00:19:49,600
encryption of some string s

550
00:19:49,600 --> 00:19:51,280
it returns the message along with the

551
00:19:51,280 --> 00:19:52,480
secret key

552
00:19:52,480 --> 00:19:53,520
so we have the encryption of some

553
00:19:53,520 --> 00:19:55,200
trapdoor and the csc that given the

554
00:19:55,200 --> 00:19:58,640
right input returns a message

555
00:19:58,640 --> 00:20:01,280
then the receiver sends a guess why

556
00:20:01,280 --> 00:20:03,280
guessing the tractor that was encrypted

557
00:20:03,280 --> 00:20:04,880
here

558
00:20:04,880 --> 00:20:07,039
finally the sender

559
00:20:07,039 --> 00:20:08,320
sends a conditional disclosure of

560
00:20:08,320 --> 00:20:10,880
secrets uh protocol

561
00:20:10,880 --> 00:20:13,440
such that if the receiver gets correctly

562
00:20:13,440 --> 00:20:14,640
he gets s

563
00:20:14,640 --> 00:20:17,039
otherwise he gets nothing

564
00:20:17,039 --> 00:20:19,600
and if he gets says he can encrypt it

565
00:20:19,600 --> 00:20:21,679
put it on the cnc for scheduled program

566
00:20:21,679 --> 00:20:24,320
and get the message

567
00:20:24,320 --> 00:20:25,600
of course

568
00:20:25,600 --> 00:20:27,840
uh

569
00:20:27,840 --> 00:20:29,440
this protocol is hiding because the

570
00:20:29,440 --> 00:20:30,799
receiver is not going to be able to

571
00:20:30,799 --> 00:20:32,640
guess the tractor because it's encrypted

572
00:20:32,640 --> 00:20:34,400
and due to the

573
00:20:34,400 --> 00:20:36,799
security of the encryption scheme which

574
00:20:36,799 --> 00:20:39,120
is three homework crimson scheme

575
00:20:39,120 --> 00:20:41,120
he cannot guess correctly

576
00:20:41,120 --> 00:20:43,440
but what happens is that

577
00:20:43,440 --> 00:20:45,840
if we use an extractor

578
00:20:45,840 --> 00:20:48,559
extractor again has inner access to

579
00:20:48,559 --> 00:20:51,039
access to the inner state of the center

580
00:20:51,039 --> 00:20:53,280
and thus he can perform this message

581
00:20:53,280 --> 00:20:54,880
homomorphically

582
00:20:54,880 --> 00:20:56,640
which means instead of guessing the

583
00:20:56,640 --> 00:20:58,480
tractor he's going to have to guess the

584
00:20:58,480 --> 00:21:00,320
encryption of the tractor

585
00:21:00,320 --> 00:21:01,440
because everything is going to be under

586
00:21:01,440 --> 00:21:02,400
encryption

587
00:21:02,400 --> 00:21:03,919
and he does have the encryption of the

588
00:21:03,919 --> 00:21:05,600
chapter because that's what the first

589
00:21:05,600 --> 00:21:07,280
message of the sender was

590
00:21:07,280 --> 00:21:08,880
so he's going to get correctly guessed

591
00:21:08,880 --> 00:21:11,600
correctly and then the sender

592
00:21:11,600 --> 00:21:13,440
is going to send this yes that it's

593
00:21:13,440 --> 00:21:15,360
going to be satisfied

594
00:21:15,360 --> 00:21:17,440
so he's gonna get x

595
00:21:17,440 --> 00:21:18,720
now as i said everything is under

596
00:21:18,720 --> 00:21:20,000
encryption so

597
00:21:20,000 --> 00:21:21,679
he's really gonna get the encryption of

598
00:21:21,679 --> 00:21:23,760
s but that's exactly what he needs for

599
00:21:23,760 --> 00:21:26,000
the cnc program here

600
00:21:26,000 --> 00:21:27,760
so he's gonna give the christian base

601
00:21:27,760 --> 00:21:29,280
and gonna get the message and the secret

602
00:21:29,280 --> 00:21:31,840
key

603
00:21:32,159 --> 00:21:35,360
and that's that's the main idea of

604
00:21:35,360 --> 00:21:38,080
spirit technique

605
00:21:42,400 --> 00:21:43,200
now

606
00:21:43,200 --> 00:21:44,799
um

607
00:21:44,799 --> 00:21:46,480
with asking smelly in their paper they

608
00:21:46,480 --> 00:21:48,320
use this no cloning extraction and by

609
00:21:48,320 --> 00:21:50,559
combining it with a classical journalist

610
00:21:50,559 --> 00:21:52,480
argument and the quantum sigma protocol

611
00:21:52,480 --> 00:21:54,240
that we saw before

612
00:21:54,240 --> 00:21:55,120
they

613
00:21:55,120 --> 00:21:56,720
achieved concept around computational

614
00:21:56,720 --> 00:21:59,360
zero knowledge for qma

615
00:21:59,360 --> 00:22:02,080
what we do in our construction is

616
00:22:02,080 --> 00:22:05,280
we use our statistical wi argument

617
00:22:05,280 --> 00:22:07,360
and combining it with

618
00:22:07,360 --> 00:22:09,840
the no cloning extraction we get zero

619
00:22:09,840 --> 00:22:11,280
knowledge from qma

620
00:22:11,280 --> 00:22:13,600
but in just four rounds and as a bonus

621
00:22:13,600 --> 00:22:15,120
will also assist at this cultural

622
00:22:15,120 --> 00:22:17,520
knowledge

623
00:22:17,760 --> 00:22:19,520
and now we have all the necessary

624
00:22:19,520 --> 00:22:21,360
building blocks and i can get to the

625
00:22:21,360 --> 00:22:24,240
actual construction

626
00:22:24,960 --> 00:22:27,039
now in our protocol we have approver and

627
00:22:27,039 --> 00:22:29,120
the verifier and in the first message

628
00:22:29,120 --> 00:22:31,360
the very first sends a commitment to

629
00:22:31,360 --> 00:22:35,600
some string zero using randomness r

630
00:22:36,159 --> 00:22:38,400
and then the two parties perform uh the

631
00:22:38,400 --> 00:22:40,799
homomorphic chapter uh technique that we

632
00:22:40,799 --> 00:22:45,200
saw before for r as the message m

633
00:22:45,200 --> 00:22:47,600
and now uh in that technique remember

634
00:22:47,600 --> 00:22:49,039
the very far would be the center and the

635
00:22:49,039 --> 00:22:51,200
proof of the receiver so this takes

636
00:22:51,200 --> 00:22:53,039
three rounds of interaction and in the

637
00:22:53,039 --> 00:22:55,280
final round in the fourth round the

638
00:22:55,280 --> 00:22:57,919
proofer uses our wi argument to prove

639
00:22:57,919 --> 00:23:00,080
that either he knows r

640
00:23:00,080 --> 00:23:03,039
or that excellent language

641
00:23:03,039 --> 00:23:05,039
of course the prover wouldn't be able to

642
00:23:05,039 --> 00:23:06,640
know her because in the homomorphic

643
00:23:06,640 --> 00:23:10,320
chapter technique r was hidden

644
00:23:10,320 --> 00:23:12,480
so he has proved that x language and

645
00:23:12,480 --> 00:23:14,159
thus he cannot see it

646
00:23:14,159 --> 00:23:16,320
on the other hand the simulator can use

647
00:23:16,320 --> 00:23:17,679
the extractor

648
00:23:17,679 --> 00:23:19,280
and extract r

649
00:23:19,280 --> 00:23:20,720
here

650
00:23:20,720 --> 00:23:22,640
and then prove the first clause

651
00:23:22,640 --> 00:23:25,120
from the wi argument

652
00:23:25,120 --> 00:23:26,880
uh you can see that we also include an

653
00:23:26,880 --> 00:23:29,440
sbs commitment of the guess why of the

654
00:23:29,440 --> 00:23:30,720
prover

655
00:23:30,720 --> 00:23:32,799
to rule out molecular attacks

656
00:23:32,799 --> 00:23:34,559
because it can be extracted with

657
00:23:34,559 --> 00:23:36,799
merciful probability

658
00:23:36,799 --> 00:23:38,240
it's a bit more technical but the main

659
00:23:38,240 --> 00:23:40,400
reason i'm referring to this is to point

660
00:23:40,400 --> 00:23:42,000
out that again we're using spss

661
00:23:42,000 --> 00:23:43,200
commitment

662
00:23:43,200 --> 00:23:45,279
and still we're able to in order to be

663
00:23:45,279 --> 00:23:48,480
able to access these collision knowledge

664
00:23:48,480 --> 00:23:49,520
now

665
00:23:49,520 --> 00:23:52,080
this protocol works great for normal

666
00:23:52,080 --> 00:23:54,799
stratifiers which means it works for

667
00:23:54,799 --> 00:23:56,799
verifiers that are non-aborting and

668
00:23:56,799 --> 00:23:59,120
explainable

669
00:23:59,120 --> 00:24:00,880
and non-avoiding verifier is a very fire

670
00:24:00,880 --> 00:24:02,480
that doesn't just

671
00:24:02,480 --> 00:24:05,600
randomly a port during the protocol an

672
00:24:05,600 --> 00:24:07,919
explainable verifier is a verifier whose

673
00:24:07,919 --> 00:24:10,320
messages can always be explained

674
00:24:10,320 --> 00:24:11,919
that doesn't mean that the verifier is

675
00:24:11,919 --> 00:24:13,760
always honest but it means that his

676
00:24:13,760 --> 00:24:15,039
messages

677
00:24:15,039 --> 00:24:17,120
are computed in support of honest

678
00:24:17,120 --> 00:24:19,039
algorithms

679
00:24:19,039 --> 00:24:20,720
now what we need to do is to extend this

680
00:24:20,720 --> 00:24:24,000
protocol to also molecularly fires

681
00:24:24,000 --> 00:24:25,440
and i'm going to start with the boarding

682
00:24:25,440 --> 00:24:28,240
verifiers so just for a bit of intuition

683
00:24:28,240 --> 00:24:30,640
the reason our simulator fails

684
00:24:30,640 --> 00:24:33,200
is that in the um

685
00:24:33,200 --> 00:24:35,760
homomorphic chapter technique

686
00:24:35,760 --> 00:24:37,360
if you remember everything runs

687
00:24:37,360 --> 00:24:39,679
homomorphically and in the end

688
00:24:39,679 --> 00:24:40,640
uh

689
00:24:40,640 --> 00:24:43,679
when the uh center got the message he

690
00:24:43,679 --> 00:24:45,600
also got the secret key because

691
00:24:45,600 --> 00:24:47,520
in the end he had the encrypted inner

692
00:24:47,520 --> 00:24:49,279
state

693
00:24:49,279 --> 00:24:52,159
of the receiver and had to decrypt it in

694
00:24:52,159 --> 00:24:53,679
order to get a transcript that's

695
00:24:53,679 --> 00:24:55,679
indistinguishable from the real

696
00:24:55,679 --> 00:24:57,279
interaction

697
00:24:57,279 --> 00:24:58,720
so

698
00:24:58,720 --> 00:25:01,440
the main point here is that

699
00:25:01,440 --> 00:25:02,320
uh

700
00:25:02,320 --> 00:25:03,840
since everything is homomorphically he

701
00:25:03,840 --> 00:25:05,919
gets stuck under the encryption

702
00:25:05,919 --> 00:25:07,440
of course if he if he knew from the

703
00:25:07,440 --> 00:25:08,559
beginning

704
00:25:08,559 --> 00:25:10,400
that uh

705
00:25:10,400 --> 00:25:14,159
the sender would abort then he wouldn't

706
00:25:14,159 --> 00:25:16,480
do any homework valuations and

707
00:25:16,480 --> 00:25:17,919
would still be able to persuade the

708
00:25:17,919 --> 00:25:18,960
center

709
00:25:18,960 --> 00:25:20,880
so what we do for our protocol is we

710
00:25:20,880 --> 00:25:23,919
follow the template of ps20 and we

711
00:25:23,919 --> 00:25:26,080
construct two simulators one that's a

712
00:25:26,080 --> 00:25:28,799
boarding and one that's non-abortive

713
00:25:28,799 --> 00:25:31,840
and finally a combined simulator guesses

714
00:25:31,840 --> 00:25:33,600
which one of these two

715
00:25:33,600 --> 00:25:36,240
should be used using quartus's quantum

716
00:25:36,240 --> 00:25:38,559
rewinding dilemma now this is basically

717
00:25:38,559 --> 00:25:41,120
rewinding for the quantum setting

718
00:25:41,120 --> 00:25:43,039
of course it isn't sufficient for

719
00:25:43,039 --> 00:25:44,559
negligible soundness error and that's

720
00:25:44,559 --> 00:25:46,960
why i wouldn't have used it

721
00:25:46,960 --> 00:25:48,159
uh

722
00:25:48,159 --> 00:25:50,240
just like in the classical setting where

723
00:25:50,240 --> 00:25:52,799
we use rewinding but for this case it is

724
00:25:52,799 --> 00:25:54,000
sufficient

725
00:25:54,000 --> 00:25:55,360
and that's how we extend to abort

726
00:25:55,360 --> 00:25:57,279
verifiers

727
00:25:57,279 --> 00:25:59,520
now for non-explainable verifiers a very

728
00:25:59,520 --> 00:26:02,159
standard way is to add a proof from the

729
00:26:02,159 --> 00:26:04,640
verifier to the prover that the messages

730
00:26:04,640 --> 00:26:07,120
are computed honestly

731
00:26:07,120 --> 00:26:09,679
and uh if you notice all of the very

732
00:26:09,679 --> 00:26:11,520
first messages so far have been

733
00:26:11,520 --> 00:26:14,240
classical so zero knowledge for mp is

734
00:26:14,240 --> 00:26:16,320
enough

735
00:26:16,320 --> 00:26:17,120
but

736
00:26:17,120 --> 00:26:19,360
in order to still have four rounds we

737
00:26:19,360 --> 00:26:21,360
need the three round

738
00:26:21,360 --> 00:26:23,279
zero knowledge protocol and in order to

739
00:26:23,279 --> 00:26:25,279
have statistical zero knowledge we need

740
00:26:25,279 --> 00:26:27,039
the zero knowledge proof

741
00:26:27,039 --> 00:26:30,080
from uh the verifier to the receiver

742
00:26:30,080 --> 00:26:32,080
and if we add the proof then we also

743
00:26:32,080 --> 00:26:34,960
extend to non-explainable verifiers

744
00:26:34,960 --> 00:26:37,520
and then we're done

745
00:26:37,520 --> 00:26:39,679
now with everything i've said so far

746
00:26:39,679 --> 00:26:41,360
there are two uh there's a couple of

747
00:26:41,360 --> 00:26:43,120
problems a couple of pop-star calls the

748
00:26:43,120 --> 00:26:45,919
first one is uh pretty obvious is that

749
00:26:45,919 --> 00:26:47,840
uh i said that we need a three-round

750
00:26:47,840 --> 00:26:50,000
post-quantum zero knowledge proof which

751
00:26:50,000 --> 00:26:51,440
doesn't exist

752
00:26:51,440 --> 00:26:53,120
uh i didn't mention in the beginning if

753
00:26:53,120 --> 00:26:55,279
you remember that there does exist a

754
00:26:55,279 --> 00:26:56,799
three bronzer and knowledge proof but it

755
00:26:56,799 --> 00:26:59,279
was not post quantum which means that it

756
00:26:59,279 --> 00:27:00,720
was not secure against quantum

757
00:27:00,720 --> 00:27:02,880
adversaries and of course we cannot use

758
00:27:02,880 --> 00:27:04,840
something like this in the quantum

759
00:27:04,840 --> 00:27:07,440
protocol another problem

760
00:27:07,440 --> 00:27:09,200
is that if you remember with the

761
00:27:09,200 --> 00:27:11,840
homophobic technique we used as ds

762
00:27:11,840 --> 00:27:13,039
protocols

763
00:27:13,039 --> 00:27:14,880
but these only provide computational

764
00:27:14,880 --> 00:27:17,120
security for the receiver and if we want

765
00:27:17,120 --> 00:27:20,559
statistical as it's we want statistical

766
00:27:20,559 --> 00:27:22,559
suit for the receiver

767
00:27:22,559 --> 00:27:24,640
now both of these obstacles can be

768
00:27:24,640 --> 00:27:26,080
circumvented

769
00:27:26,080 --> 00:27:27,039
by

770
00:27:27,039 --> 00:27:28,399
um

771
00:27:28,399 --> 00:27:30,720
constructing a three rounds sometimes

772
00:27:30,720 --> 00:27:32,320
extractable statistically receiver

773
00:27:32,320 --> 00:27:34,399
private oblivious transfer protocol and

774
00:27:34,399 --> 00:27:35,919
that's exactly what we do i'm not going

775
00:27:35,919 --> 00:27:38,240
to get into details about

776
00:27:38,240 --> 00:27:40,480
construction but by constructing this

777
00:27:40,480 --> 00:27:43,919
oblivious transfer protocol

778
00:27:44,320 --> 00:27:45,679
we get solutions for both of these

779
00:27:45,679 --> 00:27:47,440
problems

780
00:27:47,440 --> 00:27:48,960
the only thing i want to say is that

781
00:27:48,960 --> 00:27:51,279
this is sometimes extractable uh

782
00:27:51,279 --> 00:27:53,360
protocol which is kind of the same

783
00:27:53,360 --> 00:27:56,799
notions as the sometimes binding

784
00:27:56,799 --> 00:27:58,720
property of sbsa's commitments and of

785
00:27:58,720 --> 00:28:00,799
course we use this business commitment

786
00:28:00,799 --> 00:28:03,039
to build this

787
00:28:03,039 --> 00:28:05,120
and yeah after building this we can use

788
00:28:05,120 --> 00:28:07,520
it to get the to run post quantum cts

789
00:28:07,520 --> 00:28:08,799
protocol

790
00:28:08,799 --> 00:28:10,480
achieving statistical security for the

791
00:28:10,480 --> 00:28:12,080
receiver

792
00:28:12,080 --> 00:28:13,600
but it's still

793
00:28:13,600 --> 00:28:15,120
not clear at all how we can get the

794
00:28:15,120 --> 00:28:17,120
three rounds through knowledge proof and

795
00:28:17,120 --> 00:28:20,000
the answer is that we don't

796
00:28:20,000 --> 00:28:22,960
uh but what we do is settle for a weaker

797
00:28:22,960 --> 00:28:25,919
notion of visual knowledge that suffices

798
00:28:25,919 --> 00:28:27,360
for our protocol

799
00:28:27,360 --> 00:28:30,000
and we define this as sometimes

800
00:28:30,000 --> 00:28:33,279
simulatable zero knowledge

801
00:28:33,279 --> 00:28:36,640
now uh sometimes inaudible knowledge is

802
00:28:36,640 --> 00:28:39,840
again the same ideas the sometimes

803
00:28:39,840 --> 00:28:42,080
binding property of https commitments

804
00:28:42,080 --> 00:28:45,039
because simulation is possible with some

805
00:28:45,039 --> 00:28:48,320
very small probability

806
00:28:48,640 --> 00:28:50,799
so the simulator with a straight line

807
00:28:50,799 --> 00:28:53,360
can run in polynomial time but just have

808
00:28:53,360 --> 00:28:55,360
an extraneously small success

809
00:28:55,360 --> 00:28:58,000
probability

810
00:28:58,000 --> 00:29:01,120
and just like a spss commitment there is

811
00:29:01,120 --> 00:29:02,480
an exponential loss that we have to

812
00:29:02,480 --> 00:29:03,840
account for so when using these

813
00:29:03,840 --> 00:29:04,960
protocols

814
00:29:04,960 --> 00:29:07,039
we have to uh set the security

815
00:29:07,039 --> 00:29:08,880
parameters of the other parameters

816
00:29:08,880 --> 00:29:11,440
accordingly so we need twice polynomial

817
00:29:11,440 --> 00:29:13,919
hardness of wpe but we already assumed

818
00:29:13,919 --> 00:29:14,960
that so

819
00:29:14,960 --> 00:29:16,799
uh it's fine for us

820
00:29:16,799 --> 00:29:18,480
again uh if you want more details about

821
00:29:18,480 --> 00:29:20,559
the constructions you can get

822
00:29:20,559 --> 00:29:24,559
check out the full version of the paper

823
00:29:24,799 --> 00:29:27,600
and that's uh pretty much it

824
00:29:27,600 --> 00:29:28,720
to

825
00:29:28,720 --> 00:29:31,440
conclude i'm going to sum up our results

826
00:29:31,440 --> 00:29:33,679
so assuming quite vulnerable hardness of

827
00:29:33,679 --> 00:29:36,000
lwe and using

828
00:29:36,000 --> 00:29:38,880
uh sbsa's commitments as a tool we are

829
00:29:38,880 --> 00:29:40,960
able to first of all

830
00:29:40,960 --> 00:29:42,720
construct a two-round statistical

831
00:29:42,720 --> 00:29:44,559
weakness and disusability argument for

832
00:29:44,559 --> 00:29:45,919
pma

833
00:29:45,919 --> 00:29:48,960
then using that we're able to construct

834
00:29:48,960 --> 00:29:51,360
a foreign statistical knowledge argument

835
00:29:51,360 --> 00:29:53,279
for gma

836
00:29:53,279 --> 00:29:55,760
and finally even though i didn't mention

837
00:29:55,760 --> 00:29:57,919
the constructions in this uh

838
00:29:57,919 --> 00:29:59,360
presentation

839
00:29:59,360 --> 00:30:01,440
we get two round journals arguments in

840
00:30:01,440 --> 00:30:02,880
the timing model

841
00:30:02,880 --> 00:30:04,960
both the computational and statistics

842
00:30:04,960 --> 00:30:08,399
concerning the assumptions

843
00:30:08,399 --> 00:30:11,520
and we also do that without any trusted

844
00:30:11,520 --> 00:30:13,918
setup

845
00:30:14,399 --> 00:30:16,399
i've also included the

846
00:30:16,399 --> 00:30:18,559
link to the full version of the paper if

847
00:30:18,559 --> 00:30:20,720
anyone's interested in

848
00:30:20,720 --> 00:30:23,600
taking the constructions in more details

849
00:30:23,600 --> 00:30:25,120
and uh thank you very much for your

850
00:30:25,120 --> 00:30:26,640
attention

851
00:30:26,640 --> 00:30:28,720
and that's pretty much it

852
00:30:28,720 --> 00:30:31,720
bye

