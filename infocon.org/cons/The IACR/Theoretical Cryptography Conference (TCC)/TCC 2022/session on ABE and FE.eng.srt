1
00:00:00,060 --> 00:00:02,159
so our first session will be on

2
00:00:02,159 --> 00:00:03,840
attribute-based encryption and

3
00:00:03,840 --> 00:00:05,759
functional encryption

4
00:00:05,759 --> 00:00:07,859
and there will be three talks in this

5
00:00:07,859 --> 00:00:09,840
session our first two talks will be

6
00:00:09,840 --> 00:00:13,259
virtual talks so without further Ado uh

7
00:00:13,259 --> 00:00:14,940
the first talk will be a multi-input

8
00:00:14,940 --> 00:00:16,980
quadratic functional encryption stronger

9
00:00:16,980 --> 00:00:18,900
security and broader functionality by

10
00:00:18,900 --> 00:00:20,900
shweta agrawal Richard

11
00:00:20,900 --> 00:00:23,340
comida and unichi will be giving a talk

12
00:00:23,340 --> 00:00:25,619
over Zoom

13
00:00:25,619 --> 00:00:28,920
okay well thank you for introduction

14
00:00:28,920 --> 00:00:30,960
um and this issuing to work with SRI

15
00:00:30,960 --> 00:00:33,960
tagore and Richard Goyo

16
00:00:33,960 --> 00:00:36,180
um so

17
00:00:36,180 --> 00:00:39,620
so it starts with functional encryption

18
00:00:39,620 --> 00:00:42,660
and a functional encryption is a

19
00:00:42,660 --> 00:00:45,120
advanced cryptographic notion and

20
00:00:45,120 --> 00:00:49,020
typically uh in the FB system uh and

21
00:00:49,020 --> 00:00:50,879
Authority generates a public key and

22
00:00:50,879 --> 00:00:54,180
master secret key and using the master

23
00:00:54,180 --> 00:00:57,000
secret key the The Authority can

24
00:00:57,000 --> 00:00:58,739
generate a secret key for some function

25
00:00:58,739 --> 00:01:03,840
f and an user can publicly encrypt a

26
00:01:03,840 --> 00:01:07,400
message and the decrypter

27
00:01:07,400 --> 00:01:10,080
will take a ciphert external secret key

28
00:01:10,080 --> 00:01:13,380
and decryption reviews uh only f of x

29
00:01:13,380 --> 00:01:16,220
and nothing various about X

30
00:01:16,220 --> 00:01:19,140
and multi-input functional encryption is

31
00:01:19,140 --> 00:01:21,180
a generalization of function of

32
00:01:21,180 --> 00:01:23,880
functional encryption and which can

33
00:01:23,880 --> 00:01:26,520
handle a multiple input function

34
00:01:26,520 --> 00:01:30,119
multiple input functions and in this

35
00:01:30,119 --> 00:01:34,080
talk uh I will use two variants of mif

36
00:01:34,080 --> 00:01:37,079
and first is a secret key in my v and

37
00:01:37,079 --> 00:01:39,780
the second is the standard mif and

38
00:01:39,780 --> 00:01:43,680
basically a secret key MIP is a recall

39
00:01:43,680 --> 00:01:47,880
primitive than a standard MIP

40
00:01:47,880 --> 00:01:51,540
so first I will explain secret key in my

41
00:01:51,540 --> 00:01:54,180
feed and the setup and the key

42
00:01:54,180 --> 00:01:56,340
generation algorithm is uh are the same

43
00:01:56,340 --> 00:02:00,720
as the single input Fe but in this case

44
00:02:00,720 --> 00:02:03,799
the this function if it can be a

45
00:02:03,799 --> 00:02:07,799
multiple input functions and

46
00:02:07,799 --> 00:02:10,139
the encryption encryption algorithm

47
00:02:10,139 --> 00:02:12,780
takes a mass the master secret key under

48
00:02:12,780 --> 00:02:17,040
the index of the sort and it outputs uh

49
00:02:17,040 --> 00:02:19,140
the ciphertext for the corresponding

50
00:02:19,140 --> 00:02:20,160
thread

51
00:02:20,160 --> 00:02:23,700
and the crypto takes uh the Sci-Fi text

52
00:02:23,700 --> 00:02:27,120
for slot 1 to 0 to n and the secret key

53
00:02:27,120 --> 00:02:31,379
and decryption reveals only F of X1 to

54
00:02:31,379 --> 00:02:32,819
xn

55
00:02:32,819 --> 00:02:37,620
and nothing else about uh X1 to XM

56
00:02:37,620 --> 00:02:38,959
but the

57
00:02:38,959 --> 00:02:43,080
problem of the escape in my V model is

58
00:02:43,080 --> 00:02:45,959
that the security of the system is

59
00:02:45,959 --> 00:02:49,739
broken if the one of the encrypters is

60
00:02:49,739 --> 00:02:52,620
corrupted because it leaks the master

61
00:02:52,620 --> 00:02:55,379
secret key and the other person can

62
00:02:55,379 --> 00:02:58,560
completely degrift or ciphertext

63
00:02:58,560 --> 00:03:01,800
So to avoid the problem we can Define

64
00:03:01,800 --> 00:03:03,959
the standard multiple functional

65
00:03:03,959 --> 00:03:07,140
encryption and in which an encryptor

66
00:03:07,140 --> 00:03:11,220
uses a distinct distinct encryption keys

67
00:03:11,220 --> 00:03:14,879
for each sort so in this setting we can

68
00:03:14,879 --> 00:03:18,599
consider a meaningful uh confidentiality

69
00:03:18,599 --> 00:03:22,140
for cyphaticists in the uncorrupted

70
00:03:22,140 --> 00:03:24,720
slots even if the adversary can craft

71
00:03:24,720 --> 00:03:28,980
some throttle some encryptors

72
00:03:30,300 --> 00:03:35,099
so uh okay so right so so the this model

73
00:03:35,099 --> 00:03:37,920
can capture the more realistic thread

74
00:03:37,920 --> 00:03:39,900
and it is a more desirable and

75
00:03:39,900 --> 00:03:43,379
challenging to achieve our myp scheme

76
00:03:43,379 --> 00:03:46,200
than achieving the secret game Life in

77
00:03:46,200 --> 00:03:47,760
my every scheme

78
00:03:47,760 --> 00:03:51,060
and so Rita's records a previous works

79
00:03:51,060 --> 00:03:53,580
for Market input functional encryption

80
00:03:53,580 --> 00:03:57,019
the rdworks uh focus on

81
00:03:57,019 --> 00:04:00,599
the function class of General functions

82
00:04:00,599 --> 00:04:03,540
such as or sockets or Turing machines

83
00:04:03,540 --> 00:04:06,540
and they consider a stronger MIT model

84
00:04:06,540 --> 00:04:11,000
but the the disadvantage of

85
00:04:11,000 --> 00:04:16,500
these works is uh jgiom of Association

86
00:04:16,500 --> 00:04:19,079
so this is a non-standard strong

87
00:04:19,079 --> 00:04:20,940
assumption

88
00:04:20,940 --> 00:04:23,180
and uh

89
00:04:23,180 --> 00:04:27,960
uh the first uh mif scheme based on

90
00:04:27,960 --> 00:04:31,560
standard assumptions is uh constructed

91
00:04:31,560 --> 00:04:33,680
for a simple inner product functionality

92
00:04:33,680 --> 00:04:37,380
and uh in the weaker secret key mifa

93
00:04:37,380 --> 00:04:38,580
model

94
00:04:38,580 --> 00:04:43,500
Rita these works are improved and they

95
00:04:43,500 --> 00:04:46,500
obtained the more stronger a stronger

96
00:04:46,500 --> 00:04:49,440
MIP model and they also achieve a

97
00:04:49,440 --> 00:04:51,900
rivaling functionality and the reading

98
00:04:51,900 --> 00:04:55,979
functionality arrows use us to attach

99
00:04:55,979 --> 00:04:59,100
our label to each ciphertext and a

100
00:04:59,100 --> 00:05:01,500
decryption is Possible only thing the

101
00:05:01,500 --> 00:05:05,699
all reviews has a same for all results

102
00:05:05,699 --> 00:05:09,240
and standard of my fee these are the

103
00:05:09,240 --> 00:05:12,419
raving functionality is also known as a

104
00:05:12,419 --> 00:05:14,820
multi-client functional encryption or

105
00:05:14,820 --> 00:05:17,280
macfe for short

106
00:05:17,280 --> 00:05:21,900
and just here we proposed a secret key

107
00:05:21,900 --> 00:05:26,100
mfp for more more strong so stronger

108
00:05:26,100 --> 00:05:28,199
functionality that is a quadratic

109
00:05:28,199 --> 00:05:32,039
functions from uh mddh assumption in the

110
00:05:32,039 --> 00:05:36,120
pairing groups and we we call this

111
00:05:36,120 --> 00:05:41,460
scheme AGT scheme uh written

112
00:05:41,460 --> 00:05:43,979
so natural question is whether we can

113
00:05:43,979 --> 00:05:47,400
obtain the quadratic function as a

114
00:05:47,400 --> 00:05:49,740
multi-client functional encryption for

115
00:05:49,740 --> 00:05:51,960
quadratic functions from the same

116
00:05:51,960 --> 00:05:53,160
assumption

117
00:05:53,160 --> 00:05:56,699
but uh we try to achieve this but we

118
00:05:56,699 --> 00:06:00,060
couldn't but instead in this work we

119
00:06:00,060 --> 00:06:03,479
achieved this uh function functionality

120
00:06:03,479 --> 00:06:06,780
or security separately so our first

121
00:06:06,780 --> 00:06:10,080
contribution is uh the standard stronger

122
00:06:10,080 --> 00:06:11,699
mif

123
00:06:11,699 --> 00:06:15,060
um scheme for quadratic functions and

124
00:06:15,060 --> 00:06:17,699
the second our contribution is the

125
00:06:17,699 --> 00:06:20,759
construction for skmy V4 quadratic

126
00:06:20,759 --> 00:06:25,319
functions plus raving uh like uh merge

127
00:06:25,319 --> 00:06:27,360
current functionary encryption

128
00:06:27,360 --> 00:06:30,900
but achieving this this uh properties

129
00:06:30,900 --> 00:06:35,659
simultaneously is uh still open problem

130
00:06:36,720 --> 00:06:39,660
so due to the time constraint I will

131
00:06:39,660 --> 00:06:42,180
focus on the first contribution in this

132
00:06:42,180 --> 00:06:43,979
talk

133
00:06:43,979 --> 00:06:46,380
so high value overview of how to achieve

134
00:06:46,380 --> 00:06:48,479
the standard in my fifo Quality Function

135
00:06:48,479 --> 00:06:49,919
is as follows

136
00:06:49,919 --> 00:06:53,580
so we've observed that a schemeif is a

137
00:06:53,580 --> 00:06:55,680
special homework property P can be

138
00:06:55,680 --> 00:06:57,720
genetically converted to the standard

139
00:06:57,720 --> 00:07:00,300
image for the same cross

140
00:07:00,300 --> 00:07:04,400
and that we found that the age disks

141
00:07:04,400 --> 00:07:07,560
Skype scheme does not satisfy the

142
00:07:07,560 --> 00:07:11,759
property P so we modify the AGT scheme

143
00:07:11,759 --> 00:07:14,460
to satisfy p and uprise a conversion to

144
00:07:14,460 --> 00:07:16,680
the modifier scheme think it's resulting

145
00:07:16,680 --> 00:07:19,139
in the as standard in my V scheme for

146
00:07:19,139 --> 00:07:21,720
quadratic functions

147
00:07:21,720 --> 00:07:25,860
so what is a property P for skmiv so it

148
00:07:25,860 --> 00:07:30,479
states that uh for all sort I the exists

149
00:07:30,479 --> 00:07:33,539
Elementary message is E1 to e sub D and

150
00:07:33,539 --> 00:07:36,660
an efficient algorithm interda such that

151
00:07:36,660 --> 00:07:40,919
for all messages uh the following two

152
00:07:40,919 --> 00:07:44,539
distributions are the equivalent and

153
00:07:44,539 --> 00:07:46,620
statistically cross

154
00:07:46,620 --> 00:07:50,880
and this indistinguishability says that

155
00:07:50,880 --> 00:07:54,479
um like the output output of encryption

156
00:07:54,479 --> 00:07:57,979
algorithm can be simulated by the

157
00:07:57,979 --> 00:08:02,280
ciphertext for uh Elementary messages

158
00:08:02,280 --> 00:08:03,380
so

159
00:08:03,380 --> 00:08:07,500
uh I think if we have the Escape life is

160
00:08:07,500 --> 00:08:10,620
scheme with property P then we can

161
00:08:10,620 --> 00:08:13,919
convert it to the standard mrf scheme by

162
00:08:13,919 --> 00:08:16,919
setting this interior to other

163
00:08:16,919 --> 00:08:19,860
encryption algorithm and the set of

164
00:08:19,860 --> 00:08:22,560
elements the set of five activists of

165
00:08:22,560 --> 00:08:25,800
Elementary messages as a encryption key

166
00:08:25,800 --> 00:08:28,500
in in my the resulting in my field

167
00:08:28,500 --> 00:08:32,219
scheme and intuitively the ciphertext

168
00:08:32,219 --> 00:08:35,580
can be revealed to the adversary even in

169
00:08:35,580 --> 00:08:40,740
the skm Ife setting so if uh the other

170
00:08:40,740 --> 00:08:43,140
parts are corrupt encryption key in the

171
00:08:43,140 --> 00:08:48,120
mif model still the uh so it does not

172
00:08:48,120 --> 00:08:51,360
harm the security of Escape wifey so we

173
00:08:51,360 --> 00:08:56,580
can reduce the security of uh mif is the

174
00:08:56,580 --> 00:08:59,760
resulting mif scheme to the undering

175
00:08:59,760 --> 00:09:03,320
secret key in my field scheme

176
00:09:03,320 --> 00:09:07,339
and the the thing I will explain how to

177
00:09:07,339 --> 00:09:10,620
achieve the property p in the in the AGT

178
00:09:10,620 --> 00:09:14,279
scheme and if AGT scheme satisfies uh

179
00:09:14,279 --> 00:09:16,320
following uh

180
00:09:16,320 --> 00:09:19,800
homomorphism and this denotes the

181
00:09:19,800 --> 00:09:22,740
cyphatics to 4 Vector X1

182
00:09:22,740 --> 00:09:24,420
and then we we can set Elementary

183
00:09:24,420 --> 00:09:28,399
messages to Via the vectors of the

184
00:09:28,399 --> 00:09:32,880
canonical basis and interior works as

185
00:09:32,880 --> 00:09:36,120
just adding the ciphatics for elementary

186
00:09:36,120 --> 00:09:40,680
message messages in a coordinate wise

187
00:09:40,680 --> 00:09:45,060
manner but uh the Indie is in the AGT

188
00:09:45,060 --> 00:09:48,180
scheme uh this is not the case

189
00:09:48,180 --> 00:09:52,800
to see this to see why I I will explain

190
00:09:52,800 --> 00:09:56,700
the structure of HTT scheme and uh

191
00:09:56,700 --> 00:10:00,420
ciphertext for Vector x i of the AGT

192
00:10:00,420 --> 00:10:03,720
scheme can be written like this and this

193
00:10:03,720 --> 00:10:06,180
bracket notation denotes the element

194
00:10:06,180 --> 00:10:09,540
device exponentiation to uh some group

195
00:10:09,540 --> 00:10:11,580
in the pairing groups

196
00:10:11,580 --> 00:10:16,680
and here Mr is the common Matrix for all

197
00:10:16,680 --> 00:10:20,700
ciphatists insert I but a where ba

198
00:10:20,700 --> 00:10:24,779
consists of the following elements one

199
00:10:24,779 --> 00:10:28,500
or entry of x i or a random element in

200
00:10:28,500 --> 00:10:34,019
CP or an element of the top of this form

201
00:10:34,019 --> 00:10:36,779
and uh

202
00:10:36,779 --> 00:10:39,959
we do not go go into the detail but we

203
00:10:39,959 --> 00:10:44,519
found that the elements in item 4 is a

204
00:10:44,519 --> 00:10:47,339
problem problematic in the that for

205
00:10:47,339 --> 00:10:51,540
homomorphic uh computation but uh we

206
00:10:51,540 --> 00:10:53,940
show that the element of item 4 can be

207
00:10:53,940 --> 00:10:58,200
removed from the the AGT scheme so if we

208
00:10:58,200 --> 00:11:03,120
can remove them then the list of uh

209
00:11:03,120 --> 00:11:05,640
elements are made up to the homomorphism

210
00:11:05,640 --> 00:11:07,200
like this

211
00:11:07,200 --> 00:11:11,100
so it turns out that the ciphertext for

212
00:11:11,100 --> 00:11:15,300
X1 plus X2 minus zero is equal to psi

213
00:11:15,300 --> 00:11:18,060
Vertex 4 x 1 plus X 2. and the

214
00:11:18,060 --> 00:11:19,980
subterrupting this the ciphatics to

215
00:11:19,980 --> 00:11:23,360
folder is important because

216
00:11:23,360 --> 00:11:28,019
otherwise the errancing item one becomes

217
00:11:28,019 --> 00:11:29,579
two

218
00:11:29,579 --> 00:11:33,959
so to to maintain the uh elements in

219
00:11:33,959 --> 00:11:38,760
item 1 to B1 we need to subtract this

220
00:11:38,760 --> 00:11:41,000
term

221
00:11:41,339 --> 00:11:42,899
and

222
00:11:42,899 --> 00:11:45,240
at this point it seems that we can

223
00:11:45,240 --> 00:11:49,019
achieve the amoric property P but but

224
00:11:49,019 --> 00:11:52,380
this is not the case so this is not true

225
00:11:52,380 --> 00:11:56,519
because uh the random element in item

226
00:11:56,519 --> 00:12:00,600
three is not uh freshly random after the

227
00:12:00,600 --> 00:12:02,940
homework computation because they depend

228
00:12:02,940 --> 00:12:06,420
on the uh elements in item three in in

229
00:12:06,420 --> 00:12:08,880
these cyber texts

230
00:12:08,880 --> 00:12:13,140
so to randomize the item uh elements in

231
00:12:13,140 --> 00:12:14,760
item three after the homomorphic

232
00:12:14,760 --> 00:12:17,940
competition we need to add things in

233
00:12:17,940 --> 00:12:20,040
this term

234
00:12:20,040 --> 00:12:24,120
and the point is that the elements for

235
00:12:24,120 --> 00:12:27,540
item one and item two in this red part

236
00:12:27,540 --> 00:12:30,060
is r0

237
00:12:30,060 --> 00:12:34,440
but uh the random uh so so elementing

238
00:12:34,440 --> 00:12:36,360
Random three is still some random

239
00:12:36,360 --> 00:12:38,160
elements

240
00:12:38,160 --> 00:12:42,240
this ciphertext so by multiplying fresh

241
00:12:42,240 --> 00:12:46,620
random random element RJ I think we can

242
00:12:46,620 --> 00:12:50,339
randomize the only elements for item

243
00:12:50,339 --> 00:12:53,779
three so adding this term to the

244
00:12:53,779 --> 00:12:56,700
homophobic computed ciphatics we can

245
00:12:56,700 --> 00:12:59,339
randomize uh

246
00:12:59,339 --> 00:13:04,079
elements in item three I think uh the

247
00:13:04,079 --> 00:13:06,360
at this point we can achieve uh the

248
00:13:06,360 --> 00:13:08,940
homomorphic property p

249
00:13:08,940 --> 00:13:13,139
so let us summarize uh our talk so in

250
00:13:13,139 --> 00:13:16,500
this work uh we obtain a standard mif

251
00:13:16,500 --> 00:13:19,200
for quadratic functions and the secret

252
00:13:19,200 --> 00:13:21,480
key in my fee for quadratic functions

253
00:13:21,480 --> 00:13:24,060
with wavering functionality but we

254
00:13:24,060 --> 00:13:27,180
couldn't achieve them simultaneously

255
00:13:27,180 --> 00:13:31,500
so open question is of filter we can

256
00:13:31,500 --> 00:13:34,079
obtain in my vehicle quadratic function

257
00:13:34,079 --> 00:13:36,360
with the raving functionality from your

258
00:13:36,360 --> 00:13:38,940
standard assumption so this is also

259
00:13:38,940 --> 00:13:40,680
known as a multi-cream functional

260
00:13:40,680 --> 00:13:43,260
encryption for quadratic functions so it

261
00:13:43,260 --> 00:13:46,579
is interesting open foreign

262
00:13:46,579 --> 00:13:50,220
assumptions and that's it thank you very

263
00:13:50,220 --> 00:13:52,399
much

264
00:13:55,620 --> 00:13:59,360
so we have time for one question

265
00:14:01,800 --> 00:14:03,959
so can you comment briefly on why your

266
00:14:03,959 --> 00:14:06,000
techniques does not suffice to get

267
00:14:06,000 --> 00:14:08,700
multi-inpoint Fe with labeling

268
00:14:08,700 --> 00:14:11,700
uh

269
00:14:12,959 --> 00:14:15,320
uh so uh so I think

270
00:14:15,320 --> 00:14:17,940
achieving the revering functionality is

271
00:14:17,940 --> 00:14:21,480
we use a random function and this is

272
00:14:21,480 --> 00:14:23,760
around one function works in the secret

273
00:14:23,760 --> 00:14:26,940
key setting but if adversary can craft

274
00:14:26,940 --> 00:14:31,079
some throttling the prf key prf key is

275
00:14:31,079 --> 00:14:34,980
revealed and some security issue comes

276
00:14:34,980 --> 00:14:37,500
in in that setting

277
00:14:37,500 --> 00:14:40,440
okay cool thanks are there any other

278
00:14:40,440 --> 00:14:43,160
questions

279
00:14:43,320 --> 00:14:44,820
if not then let's thank the speaker

280
00:14:44,820 --> 00:14:46,740
again

281
00:14:46,740 --> 00:14:49,820
thank you very much

282
00:14:53,220 --> 00:14:56,100
so I think our next talk is also remote

283
00:14:56,100 --> 00:15:00,860
so do we need to switch the Z

284
00:15:07,260 --> 00:15:09,860
instead

285
00:15:13,019 --> 00:15:16,079
okay so our next talk in this session

286
00:15:16,079 --> 00:15:18,300
will be on bounded functional encryption

287
00:15:18,300 --> 00:15:20,339
for Terry machines adaptive security

288
00:15:20,339 --> 00:15:22,800
from General assumptions this is how to

289
00:15:22,800 --> 00:15:25,019
work by schweda agrawal for Yuki

290
00:15:25,019 --> 00:15:29,040
kiragawa Anuja Modi rionishimaki yoshoda

291
00:15:29,040 --> 00:15:31,980
Yamada and Takashi yamakawa and Anuja

292
00:15:31,980 --> 00:15:34,820
will be giving a talk

293
00:15:34,980 --> 00:15:38,480
thank you for the introduction

294
00:15:40,680 --> 00:15:42,720
so let us start by defining what

295
00:15:42,720 --> 00:15:44,820
ciphertext policy function encryption

296
00:15:44,820 --> 00:15:47,760
here the setup algorithm takes the

297
00:15:47,760 --> 00:15:49,800
security parameter the size of the

298
00:15:49,800 --> 00:15:52,260
policy F and the collusion bound Q as

299
00:15:52,260 --> 00:15:54,060
the input and outputs the master public

300
00:15:54,060 --> 00:15:56,579
Key Master secret key here Q is the

301
00:15:56,579 --> 00:15:59,100
bounded polynomial solution bound the

302
00:15:59,100 --> 00:16:00,600
encrypt algorithm takes the master

303
00:16:00,600 --> 00:16:03,420
public key and the policy f as input and

304
00:16:03,420 --> 00:16:06,439
output ciphertext

305
00:16:07,699 --> 00:16:10,620
the input and outputs the secret key and

306
00:16:10,620 --> 00:16:12,899
the decrypt on input the security and

307
00:16:12,899 --> 00:16:16,820
ciphertext output F of M

308
00:16:19,760 --> 00:16:22,740
generated using the encrypt algorithm

309
00:16:22,740 --> 00:16:24,540
outputs F of M

310
00:16:24,540 --> 00:16:26,820
the simulation security says that

311
00:16:26,820 --> 00:16:28,920
whether we generate the ciphertext using

312
00:16:28,920 --> 00:16:31,320
the honest encryption are operator or we

313
00:16:31,320 --> 00:16:32,880
generate the ciphertext using the

314
00:16:32,880 --> 00:16:35,100
simulation encryption algorithm it is

315
00:16:35,100 --> 00:16:37,740
indistinguishable

316
00:16:37,740 --> 00:16:40,199
in key policy functional encryption the

317
00:16:40,199 --> 00:16:42,839
role of F and M a swap that is encrypt

318
00:16:42,839 --> 00:16:45,540
takes as input L and kgn takes as input

319
00:16:45,540 --> 00:16:47,779
f

320
00:16:52,579 --> 00:16:55,380
and the setup and key chain algorithm

321
00:16:55,380 --> 00:16:57,779
are independent of the collusion bound

322
00:16:57,779 --> 00:17:00,360
queue and the ciphertext size grows

323
00:17:00,360 --> 00:17:02,880
linearly with Q so the encrypt and

324
00:17:02,880 --> 00:17:04,919
equipped algorithm takes one additional

325
00:17:04,919 --> 00:17:07,319
parameter that is consumes and bound as

326
00:17:07,319 --> 00:17:09,240
the input

327
00:17:09,240 --> 00:17:10,919
now let us see what the simulation

328
00:17:10,919 --> 00:17:13,919
security for cpfe is in adaptive

329
00:17:13,919 --> 00:17:16,079
simulation security there are two worlds

330
00:17:16,079 --> 00:17:19,020
real and ideal world in real world the

331
00:17:19,020 --> 00:17:21,119
cyphatics is generated using the honest

332
00:17:21,119 --> 00:17:24,119
encryption algorithm that is encrypt in

333
00:17:24,119 --> 00:17:26,220
Ideal World the ciphertext is generated

334
00:17:26,220 --> 00:17:28,199
using a simulator that is same Ang

335
00:17:28,199 --> 00:17:31,140
algorithm and both this world should be

336
00:17:31,140 --> 00:17:33,660
in distinguishable note that in adaptive

337
00:17:33,660 --> 00:17:36,299
simulation security the adversary can

338
00:17:36,299 --> 00:17:39,120
have prevent post challenge key query

339
00:17:39,120 --> 00:17:41,940
in non-adaptive simulation security the

340
00:17:41,940 --> 00:17:44,039
adversary cannot have post challenge key

341
00:17:44,039 --> 00:17:46,679
query and here also the real and Ideal

342
00:17:46,679 --> 00:17:49,020
World should be indistinguishable

343
00:17:49,020 --> 00:17:51,840
in selected simulation security the

344
00:17:51,840 --> 00:17:54,419
adversary outputs the function at the

345
00:17:54,419 --> 00:17:56,760
start of the game

346
00:17:56,760 --> 00:17:59,700
the non-native look into the related

347
00:17:59,700 --> 00:18:02,160
work basically we would be looking

348
00:18:02,160 --> 00:18:05,160
towards the work which is in Dynamic

349
00:18:05,160 --> 00:18:08,039
bounded collusion model agrawal at all

350
00:18:08,039 --> 00:18:10,080
constructed functional encryption for

351
00:18:10,080 --> 00:18:12,240
turing machine which is non-adaptive

352
00:18:12,240 --> 00:18:15,780
simulation secure which is the from the

353
00:18:15,780 --> 00:18:18,059
Assumption of that is sub exponential

354
00:18:18,059 --> 00:18:21,140
hardness of LW with some exponential

355
00:18:21,140 --> 00:18:24,120
approximation Factor they also

356
00:18:24,120 --> 00:18:26,820
constructed a fe for turing machine Fe

357
00:18:26,820 --> 00:18:29,940
for adaptively simulation secure FP but

358
00:18:29,940 --> 00:18:31,860
at the cost of supporting lower class

359
00:18:31,860 --> 00:18:33,480
that is NL

360
00:18:33,480 --> 00:18:36,600
going at all constructed a B for turing

361
00:18:36,600 --> 00:18:37,980
machine which is adaptively

362
00:18:37,980 --> 00:18:40,559
indistinguishable figure from ibe but it

363
00:18:40,559 --> 00:18:43,020
is secure in random Oracle model

364
00:18:43,020 --> 00:18:45,720
note that in these work the encryption

365
00:18:45,720 --> 00:18:47,580
timer turing machine depends on the

366
00:18:47,580 --> 00:18:49,799
running time of the computation

367
00:18:49,799 --> 00:18:52,620
in our work we construct Fe for turing

368
00:18:52,620 --> 00:18:54,299
machine which is adaptively simulation

369
00:18:54,299 --> 00:18:58,440
secure from lot Abe for nc1 and PIR

370
00:18:58,440 --> 00:19:01,860
since lot a B for nc1 and PIR can be

371
00:19:01,860 --> 00:19:03,960
based on different other assumption we

372
00:19:03,960 --> 00:19:06,840
get fa for turing machine from polymer

373
00:19:06,840 --> 00:19:09,179
hotness of LW with quasi polynomial

374
00:19:09,179 --> 00:19:11,100
approximation Factor

375
00:19:11,100 --> 00:19:15,299
dth and tbdh and QR and dpth

376
00:19:15,299 --> 00:19:19,620
we also obtained uh we also obtain Fe

377
00:19:19,620 --> 00:19:22,200
for turing machine which is adaptively

378
00:19:22,200 --> 00:19:26,100
indistinguishable secure from iblot

379
00:19:26,100 --> 00:19:29,760
we also construct a simpler version that

380
00:19:29,760 --> 00:19:31,679
is the construct adaptive simulation

381
00:19:31,679 --> 00:19:32,900
security

382
00:19:32,900 --> 00:19:36,179
which is of unbounded site center from

383
00:19:36,179 --> 00:19:38,940
IBN lot and this may be of independent

384
00:19:38,940 --> 00:19:40,919
interest

385
00:19:40,919 --> 00:19:43,080
so now let us see the roadmap of high

386
00:19:43,080 --> 00:19:46,760
level roadmap of our Construction

387
00:19:58,220 --> 00:20:00,960
then using the ideas of agrawal at all

388
00:20:00,960 --> 00:20:04,140
we get tmfe with fixed machine size and

389
00:20:04,140 --> 00:20:06,419
then we get adaptively simulation secure

390
00:20:06,419 --> 00:20:07,740
tmop

391
00:20:07,740 --> 00:20:10,440
in the second research we get Fe for

392
00:20:10,440 --> 00:20:13,799
electronic oblivious transfer from IB a

393
00:20:13,799 --> 00:20:16,320
b and PIR this fever electronic

394
00:20:16,320 --> 00:20:18,240
oblivious transfer is non-adaptive

395
00:20:18,240 --> 00:20:21,900
simulation to Q you think ethical iconic

396
00:20:21,900 --> 00:20:24,660
OT we construct the ppfe for Ram using

397
00:20:24,660 --> 00:20:27,240
cpic for example we construct TMA with

398
00:20:27,240 --> 00:20:30,179
fixed input term and then combining the

399
00:20:30,179 --> 00:20:33,000
bounded kpfe and tmfa with fixed input

400
00:20:33,000 --> 00:20:34,679
length which is non-adaptive simulation

401
00:20:34,679 --> 00:20:37,320
secure we get adaptively simulation

402
00:20:37,320 --> 00:20:40,559
secure TMF with fixed input lens

403
00:20:40,559 --> 00:20:42,900
in this stock I would be presenting the

404
00:20:42,900 --> 00:20:45,480
second present

405
00:20:45,480 --> 00:20:48,440
the letters Begin by recapping the ideas

406
00:20:48,440 --> 00:20:52,679
uh of construction of tmfe by agrawal at

407
00:20:52,679 --> 00:20:55,580
all to construct Fe for turing machine

408
00:20:55,580 --> 00:20:58,200
agrawal at all Loops the compiler which

409
00:20:58,200 --> 00:21:02,100
was developed by agrawal at all where to

410
00:21:02,100 --> 00:21:03,840
construct fa for turing machine we

411
00:21:03,840 --> 00:21:06,419
divide it into two categories one where

412
00:21:06,419 --> 00:21:09,360
the machine size is unbounded and one

413
00:21:09,360 --> 00:21:12,900
where the machine size is bounded so in

414
00:21:12,900 --> 00:21:15,000
to construct Fe for turing machine where

415
00:21:15,000 --> 00:21:17,299
the machine size is bounded with

416
00:21:17,299 --> 00:21:19,620
deconstructed non-adaptive simulation

417
00:21:19,620 --> 00:21:23,340
secures a pfp for unbounded circuit and

418
00:21:23,340 --> 00:21:26,220
one where the machine size is unbounded

419
00:21:26,220 --> 00:21:29,039
they constructed a FIFA turing machine

420
00:21:29,039 --> 00:21:31,320
in that case by constructing adaptively

421
00:21:31,320 --> 00:21:34,260
simulation secure kpfp for unbounded

422
00:21:34,260 --> 00:21:36,840
circuit this adaptable simulation secure

423
00:21:36,840 --> 00:21:39,780
kpfp was constructed by upgrading the

424
00:21:39,780 --> 00:21:42,780
succinct single key Kpop of coal parser

425
00:21:42,780 --> 00:21:45,780
at all from sub exponential lwe

426
00:21:45,780 --> 00:21:48,360
our goal is to construct the adaptively

427
00:21:48,360 --> 00:21:50,220
combination secure function encryption

428
00:21:50,220 --> 00:21:54,679
without relying on succinct KPLC

429
00:21:54,720 --> 00:21:57,960
so before diving it in let us see what

430
00:21:57,960 --> 00:22:01,140
the model of computation is there is a

431
00:22:01,140 --> 00:22:04,200
program P which takes as input x and t

432
00:22:04,200 --> 00:22:06,419
and there is a database m

433
00:22:06,419 --> 00:22:09,299
the ram program takes us input the rate

434
00:22:09,299 --> 00:22:11,760
location I interacts with the database

435
00:22:11,760 --> 00:22:14,100
and outputs D of I

436
00:22:14,100 --> 00:22:17,159
the oblivious Ram is a compiler which

437
00:22:17,159 --> 00:22:19,220
takes if input the rate location I

438
00:22:19,220 --> 00:22:21,659
converts this read command into some

439
00:22:21,659 --> 00:22:23,700
read and write command and interacts

440
00:22:23,700 --> 00:22:27,120
with the database and outputs D of I the

441
00:22:27,120 --> 00:22:29,580
security says that this or M hides the

442
00:22:29,580 --> 00:22:32,159
excess location I

443
00:22:32,159 --> 00:22:34,380
for the motivation for Ram model of

444
00:22:34,380 --> 00:22:36,960
computation is that we have to construct

445
00:22:36,960 --> 00:22:39,600
fa for turing machine for the case where

446
00:22:39,600 --> 00:22:42,539
the machine size is unbounded so we can

447
00:22:42,539 --> 00:22:46,260
think of M as a large database X as a

448
00:22:46,260 --> 00:22:48,900
short input and T as a bounded running

449
00:22:48,900 --> 00:22:51,600
type so this naturally suggests the idea

450
00:22:51,600 --> 00:22:55,020
of ram model of computation

451
00:22:55,020 --> 00:22:58,380
so when we run M on X we will have

452
00:22:58,380 --> 00:23:00,480
bounded number of lookups in the

453
00:23:00,480 --> 00:23:03,000
translation table and the bounded number

454
00:23:03,000 --> 00:23:05,880
of steps because here T is bounded no

455
00:23:05,880 --> 00:23:09,799
matter what the size of the database is

456
00:23:09,840 --> 00:23:12,780
so we have a program P which has a ram

457
00:23:12,780 --> 00:23:15,240
access to a database M and this program

458
00:23:15,240 --> 00:23:18,799
p executes a map

459
00:23:21,679 --> 00:23:25,559
where the encrypt encrypts the program p

460
00:23:25,559 --> 00:23:27,539
age will provide the key for the

461
00:23:27,539 --> 00:23:30,960
database pen the decrypt executes this

462
00:23:30,960 --> 00:23:35,640
program p on X to give to give M of x

463
00:23:35,640 --> 00:23:38,640
so to construct CPAP for read-on data we

464
00:23:38,640 --> 00:23:40,860
build upon the ideas that were developed

465
00:23:40,860 --> 00:23:43,620
in the context of Ram Construction of

466
00:23:43,620 --> 00:23:45,059
low at all

467
00:23:45,059 --> 00:23:47,400
here there is a gobbled Ram program

468
00:23:47,400 --> 00:23:50,760
which consists of tea carbon T garble

469
00:23:50,760 --> 00:23:53,940
copies of augmented step circuit here

470
00:23:53,940 --> 00:23:57,299
each copy I takes as input current CPU

471
00:23:57,299 --> 00:24:00,600
State last red bit and outputs updated

472
00:24:00,600 --> 00:24:03,299
State and the next rate location

473
00:24:03,299 --> 00:24:06,240
the copy for garbled in such a manner

474
00:24:06,240 --> 00:24:09,179
that the labels of the output of copy I

475
00:24:09,179 --> 00:24:11,820
matches with the labels of input of copy

476
00:24:11,820 --> 00:24:14,039
I Plus 1.

477
00:24:14,039 --> 00:24:16,980
these copy these copies interact with

478
00:24:16,980 --> 00:24:19,260
the memory to incorporate data into the

479
00:24:19,260 --> 00:24:22,440
computation and previous Works used ibe

480
00:24:22,440 --> 00:24:25,679
and oblivious RAM for this incorporation

481
00:24:25,679 --> 00:24:29,340
of data IB chooses correct label for the

482
00:24:29,340 --> 00:24:31,620
garbage circuit an oblivious Ram is used

483
00:24:31,620 --> 00:24:33,840
to hide the position rate

484
00:24:33,840 --> 00:24:36,419
but the problem with oblivious Ram is

485
00:24:36,419 --> 00:24:39,600
that we have a program and a server and

486
00:24:39,600 --> 00:24:41,880
they needs to agree on a secret

487
00:24:41,880 --> 00:24:44,820
in our setting it means that the program

488
00:24:44,820 --> 00:24:47,580
P corresponds to the encryptor and the

489
00:24:47,580 --> 00:24:49,020
server corresponds to the creation

490
00:24:49,020 --> 00:24:50,280
router

491
00:24:50,280 --> 00:24:52,799
so it means that the encrypter and key

492
00:24:52,799 --> 00:24:54,720
generator should agree on a secret key

493
00:24:54,720 --> 00:24:57,240
but this is not possible because we are

494
00:24:57,240 --> 00:25:00,000
in public we are in a public key setting

495
00:25:00,000 --> 00:25:02,580
so to overcome this problem we introduce

496
00:25:02,580 --> 00:25:04,500
functional encryption for electronic

497
00:25:04,500 --> 00:25:06,840
oblivious star

498
00:25:06,840 --> 00:25:10,020
in functional encryption for lot the

499
00:25:10,020 --> 00:25:12,240
encryptor has two messages nuclei

500
00:25:12,240 --> 00:25:15,059
newborn and a database location I

501
00:25:15,059 --> 00:25:18,240
the key chain has input the database the

502
00:25:18,240 --> 00:25:20,760
decrypter allows to recover mu of d i

503
00:25:20,760 --> 00:25:25,440
but mu of 1 minus t i and I are hidden

504
00:25:25,440 --> 00:25:26,820
so

505
00:25:26,820 --> 00:25:29,640
to construct Fe for electronic OT we

506
00:25:29,640 --> 00:25:31,020
need to support table lookup

507
00:25:31,020 --> 00:25:35,100
functionality we can replace fhe of fhe

508
00:25:35,100 --> 00:25:37,080
which was used in the construction of

509
00:25:37,080 --> 00:25:40,260
success kpft or gold poster At All by

510
00:25:40,260 --> 00:25:43,380
much weaker PIR and we can also replace

511
00:25:43,380 --> 00:25:46,860
a B for Circuit by much weaker a B for

512
00:25:46,860 --> 00:25:48,480
nc1

513
00:25:48,480 --> 00:25:50,460
so if we have adaptively

514
00:25:50,460 --> 00:25:52,980
inter-singuishable secure IDE

515
00:25:52,980 --> 00:25:56,360
Le distinguishable secure a B for mt1

516
00:25:56,360 --> 00:25:59,460
selectively secure gobble circuit and a

517
00:25:59,460 --> 00:26:02,580
private PIR then we can construct one

518
00:26:02,580 --> 00:26:06,720
and if in one n a simulation secures or

519
00:26:06,720 --> 00:26:09,840
FP for electronic portal

520
00:26:09,840 --> 00:26:12,240
so we constructed Fe for electronic OT

521
00:26:12,240 --> 00:26:16,559
using ibe Abe and PIR using this fa for

522
00:26:16,559 --> 00:26:19,020
electronic OT we constructed cpfa

523
00:26:19,020 --> 00:26:20,039
program

524
00:26:20,039 --> 00:26:22,740
and you think safety program we

525
00:26:22,740 --> 00:26:24,360
constructed ta might be with fixed

526
00:26:24,360 --> 00:26:26,100
inputland note that all this

527
00:26:26,100 --> 00:26:28,140
construction are non-adaptive simulation

528
00:26:28,140 --> 00:26:31,500
secure and uh to make it adaptable

529
00:26:31,500 --> 00:26:34,740
simulation secure we we combine this

530
00:26:34,740 --> 00:26:36,840
bounded cpfp which is adaptively

531
00:26:36,840 --> 00:26:39,659
simulation secure and non-adaptive tmfe

532
00:26:39,659 --> 00:26:42,179
with fixed input length to get pmfe with

533
00:26:42,179 --> 00:26:44,159
fixed input link within the ideas of

534
00:26:44,159 --> 00:26:45,720
agrawal time

535
00:26:45,720 --> 00:26:48,559
thank you

536
00:26:52,400 --> 00:26:54,539
great so we have time for a couple

537
00:26:54,539 --> 00:26:57,900
questions Muhammad

538
00:27:03,120 --> 00:27:06,960
so for your definition for Fe for

539
00:27:06,960 --> 00:27:08,940
laconic OT where the encryption

540
00:27:08,940 --> 00:27:10,919
algorithm takes us input a pair of

541
00:27:10,919 --> 00:27:14,640
messages and an index I does the

542
00:27:14,640 --> 00:27:17,700
resulting ciphertext hide the index I

543
00:27:17,700 --> 00:27:21,299
because for laconic OT uh the second

544
00:27:21,299 --> 00:27:24,240
message of the OT protocol doesn't hide

545
00:27:24,240 --> 00:27:28,140
the index doesn't hide the index I uh

546
00:27:28,140 --> 00:27:32,299
that is uh kept by the sender

547
00:27:33,059 --> 00:27:35,658
thank you

548
00:27:46,620 --> 00:27:49,980
yeah so I'm wondering uh the ciphertext

549
00:27:49,980 --> 00:27:52,980
that is generated by the encrypter does

550
00:27:52,980 --> 00:27:55,440
it hide the location I because in

551
00:27:55,440 --> 00:27:57,600
general under laconic OT the

552
00:27:57,600 --> 00:28:00,539
constructions that we have uh the index

553
00:28:00,539 --> 00:28:02,120
I is not

554
00:28:02,120 --> 00:28:06,480
kept hidden uh by the second round uh OT

555
00:28:06,480 --> 00:28:09,380
protocol message

556
00:28:28,200 --> 00:28:32,299
yeah were you able to share the question

557
00:28:32,760 --> 00:28:37,140
yeah I'm able to hear the question uh

558
00:28:37,140 --> 00:28:39,620
sorry

559
00:28:40,520 --> 00:28:42,900
so maybe in the interest of time we can

560
00:28:42,900 --> 00:28:44,940
take this offline and move on to that

561
00:28:44,940 --> 00:28:47,419
third speaker

562
00:28:48,900 --> 00:28:51,659
yes it does hide the index

563
00:28:51,659 --> 00:28:54,919
if I may jump in

564
00:28:56,159 --> 00:28:59,840
oh so let's thank the speaker again

565
00:29:01,500 --> 00:29:04,220
thank you

566
00:29:12,600 --> 00:29:15,199
okay

567
00:29:20,700 --> 00:29:22,700
okay

568
00:29:46,399 --> 00:29:50,039
all right so our final talk for this

569
00:29:50,039 --> 00:29:52,260
session will be on Abe for circuits with

570
00:29:52,260 --> 00:29:54,299
constant size secret keys and adaptive

571
00:29:54,299 --> 00:29:56,520
security this is work by hanjun Lee

572
00:29:56,520 --> 00:29:59,340
weijelin and gilo and Henry will be

573
00:29:59,340 --> 00:30:01,820
giving a talk

574
00:30:06,899 --> 00:30:09,360
uh is to go into work with virtual on

575
00:30:09,360 --> 00:30:12,659
Jeep uh so the attribute is the

576
00:30:12,659 --> 00:30:14,760
encryption AV for short has the

577
00:30:14,760 --> 00:30:17,340
following syntax where an administrator

578
00:30:17,340 --> 00:30:19,919
first runs the setup to produce the

579
00:30:19,919 --> 00:30:21,960
master keys and send the master public

580
00:30:21,960 --> 00:30:24,899
key to an encrypter who encrypts uh

581
00:30:24,899 --> 00:30:27,899
messages and I each with an attribute x

582
00:30:27,899 --> 00:30:31,500
i are associated with it for someone if

583
00:30:31,500 --> 00:30:33,659
someone later wants to have partial

584
00:30:33,659 --> 00:30:36,419
access to the messages the administrator

585
00:30:36,419 --> 00:30:39,000
will use the master secret key to run

586
00:30:39,000 --> 00:30:41,340
Keygen produce a secret key associated

587
00:30:41,340 --> 00:30:44,039
with some policy FJ and the correctness

588
00:30:44,039 --> 00:30:48,600
requires that if a secret key for FJ the

589
00:30:48,600 --> 00:30:50,640
security of J can decrypt a separate

590
00:30:50,640 --> 00:30:54,299
text for attribute x i if FJ of x i

591
00:30:54,299 --> 00:30:57,419
equals zero the scheme is secure against

592
00:30:57,419 --> 00:31:00,000
colluding adversaries who hold multiple

593
00:31:00,000 --> 00:31:03,380
secret keys with different policies uh

594
00:31:03,380 --> 00:31:07,200
if none of if if any of the if each of

595
00:31:07,200 --> 00:31:09,779
the key separately cannot decrypt the

596
00:31:09,779 --> 00:31:12,960
separate text with attribute X star then

597
00:31:12,960 --> 00:31:14,940
the message and start should remain

598
00:31:14,940 --> 00:31:17,940
hidden in the form of security gain the

599
00:31:17,940 --> 00:31:20,880
adversary is allowed to choose the uh

600
00:31:20,880 --> 00:31:24,360
the the challenge attribute XLR as well

601
00:31:24,360 --> 00:31:28,200
as the policies of themselves and that

602
00:31:28,200 --> 00:31:31,260
adaptive adversary through this x star

603
00:31:31,260 --> 00:31:33,600
and FJ after seeing the master public

604
00:31:33,600 --> 00:31:34,500
key

605
00:31:34,500 --> 00:31:37,440
uh weaker selective security through

606
00:31:37,440 --> 00:31:39,480
this x-star before seeing the master

607
00:31:39,480 --> 00:31:41,760
public key

608
00:31:41,760 --> 00:31:45,779
so the other CP variant is similar but

609
00:31:45,779 --> 00:31:47,399
the role of the policy and the

610
00:31:47,399 --> 00:31:49,740
attributes are flipped and correctness

611
00:31:49,740 --> 00:31:52,620
and securities are are defined analogous

612
00:31:52,620 --> 00:31:53,880
study

613
00:31:53,880 --> 00:31:56,640
so an important aspect of the efficiency

614
00:31:56,640 --> 00:31:59,700
of Abe is the size of the separate text

615
00:31:59,700 --> 00:32:02,279
and secret key we measure those against

616
00:32:02,279 --> 00:32:05,760
the length of the attribute X and the

617
00:32:05,760 --> 00:32:08,460
description of the policy f

618
00:32:08,460 --> 00:32:11,960
so a natural requirement is to have

619
00:32:11,960 --> 00:32:14,820
several text and secret Keys polynomial

620
00:32:14,820 --> 00:32:18,419
in the size of X and F respectively

621
00:32:18,419 --> 00:32:21,059
a stronger requirement is to have linear

622
00:32:21,059 --> 00:32:23,940
size fabrics and secret Keys uh in X and

623
00:32:23,940 --> 00:32:27,299
S which is also called compact means and

624
00:32:27,299 --> 00:32:30,539
its compactness the best best efficiency

625
00:32:30,539 --> 00:32:33,480
we can hope for it seems so because the

626
00:32:33,480 --> 00:32:35,820
decryption algorithm needs access to X

627
00:32:35,820 --> 00:32:38,039
and F which needs to be transmitted

628
00:32:38,039 --> 00:32:40,620
through the software tech security

629
00:32:40,620 --> 00:32:43,500
uh but we realized that X and F are not

630
00:32:43,500 --> 00:32:45,840
hidden in this scheme so we can transmit

631
00:32:45,840 --> 00:32:48,899
those in the clear uh and that is in the

632
00:32:48,899 --> 00:32:51,659
in the modified syntax the decryption

633
00:32:51,659 --> 00:32:54,360
algorithm takes X and F in the clear in

634
00:32:54,360 --> 00:32:55,740
addition to the secret key and the

635
00:32:55,740 --> 00:32:58,620
separate text since we can have several

636
00:32:58,620 --> 00:33:01,140
types and super keys outside smaller

637
00:33:01,140 --> 00:33:02,820
than x and that

638
00:33:02,820 --> 00:33:06,240
so if a secret key or software type has

639
00:33:06,240 --> 00:33:09,659
such sublinear in X or F with it's a

640
00:33:09,659 --> 00:33:13,440
succinct and if if an AB scheme has both

641
00:33:13,440 --> 00:33:16,679
then we say it's doubly succinct uh

642
00:33:16,679 --> 00:33:18,960
finally the dream efficiency is to have

643
00:33:18,960 --> 00:33:20,940
constant sized separate text and secret

644
00:33:20,940 --> 00:33:24,659
Keys independent of X or F

645
00:33:24,659 --> 00:33:27,720
and among known constructions of aves

646
00:33:27,720 --> 00:33:31,140
are mainly two approaches one based on

647
00:33:31,140 --> 00:33:33,960
pairing and one based on lattices

648
00:33:33,960 --> 00:33:36,899
so and they each have advantages and

649
00:33:36,899 --> 00:33:39,299
some limitations so parent-based

650
00:33:39,299 --> 00:33:42,600
constructions achieve Abe for low depth

651
00:33:42,600 --> 00:33:45,980
policies only and uh and and the the

652
00:33:45,980 --> 00:33:48,059
constructions achieve different

653
00:33:48,059 --> 00:33:49,799
trade-offs between the size of the

654
00:33:49,799 --> 00:33:51,539
server attacks and this and the secret

655
00:33:51,539 --> 00:33:54,240
key but their product happens to always

656
00:33:54,240 --> 00:33:58,320
be at least the size of f times x

657
00:33:58,320 --> 00:34:00,600
the parent-based constructions can

658
00:34:00,600 --> 00:34:03,120
achieve constant size CPT or separate

659
00:34:03,120 --> 00:34:05,279
tax although not both at the same time

660
00:34:05,279 --> 00:34:08,339
and uh and they they can achieve the

661
00:34:08,339 --> 00:34:10,500
stronger adaptive security

662
00:34:10,500 --> 00:34:12,599
on the other hand the latter is based

663
00:34:12,599 --> 00:34:15,599
constructions uh achieve a b with

664
00:34:15,599 --> 00:34:19,080
policies in p and the set of RX schemes

665
00:34:19,080 --> 00:34:21,599
can achieve suffered secretly and

666
00:34:21,599 --> 00:34:24,659
separate text with such poly in D and x

667
00:34:24,659 --> 00:34:27,540
times poly in B where D is the depth of

668
00:34:27,540 --> 00:34:29,540
x

669
00:34:29,540 --> 00:34:33,780
uh however those constructions uh have

670
00:34:33,780 --> 00:34:35,580
the limitation that they only achieve

671
00:34:35,580 --> 00:34:38,159
selective security and there's a it's a

672
00:34:38,159 --> 00:34:40,080
fascinating technical barrier to achieve

673
00:34:40,080 --> 00:34:42,359
adaptive security without relying on

674
00:34:42,359 --> 00:34:45,000
complexity

675
00:34:45,000 --> 00:34:48,179
uh now I'll talk to the known construct

676
00:34:48,179 --> 00:34:50,339
efficiency of the known constructions in

677
00:34:50,339 --> 00:34:54,480
the in this graph the state of art art

678
00:34:54,480 --> 00:34:58,440
life schemes have science uh poly in D

679
00:34:58,440 --> 00:35:01,020
and x times probably in b the

680
00:35:01,020 --> 00:35:02,940
parent-based constructions achieve

681
00:35:02,940 --> 00:35:04,800
different trade-offs but their product

682
00:35:04,800 --> 00:35:07,800
is is at least x times f

683
00:35:07,800 --> 00:35:10,920
and uh given this current state of fair

684
00:35:10,920 --> 00:35:13,020
we ask if we can move closer to the

685
00:35:13,020 --> 00:35:14,420
dream efficiency

686
00:35:14,420 --> 00:35:18,720
lies in the left bottom command

687
00:35:18,720 --> 00:35:22,140
and as mentioned before uh the the two

688
00:35:22,140 --> 00:35:24,900
approaches have have their advantages

689
00:35:24,900 --> 00:35:27,839
and limitations so we also ask if we can

690
00:35:27,839 --> 00:35:30,540
combine hiring and letters techniques to

691
00:35:30,540 --> 00:35:33,420
help overcome those limitations

692
00:35:33,420 --> 00:35:36,420
and a recent beautiful work of ay and

693
00:35:36,420 --> 00:35:40,440
awy is such an example combining letters

694
00:35:40,440 --> 00:35:43,920
and pairing to to construct the cpav for

695
00:35:43,920 --> 00:35:47,400
nc1 and they improve the size efficiency

696
00:35:47,400 --> 00:35:50,640
to achieve succinct Securities with size

697
00:35:50,640 --> 00:35:54,300
linear in X instead of F and the the the

698
00:35:54,300 --> 00:35:57,000
construction inverts The Selective

699
00:35:57,000 --> 00:36:00,000
security from the latitis above

700
00:36:00,000 --> 00:36:02,820
and now I will show our result and where

701
00:36:02,820 --> 00:36:06,240
they they learn in the efficiency plot

702
00:36:06,240 --> 00:36:10,140
so uh first of all assuming lwe and in

703
00:36:10,140 --> 00:36:12,240
the generic parent group model we

704
00:36:12,240 --> 00:36:16,339
construct a kpab skin core P the first

705
00:36:16,339 --> 00:36:19,200
kpav4p that have constant sized secret

706
00:36:19,200 --> 00:36:23,160
keys and previous such schemes have

707
00:36:23,160 --> 00:36:25,140
secret key size at least polynomial

708
00:36:25,140 --> 00:36:26,640
indeed

709
00:36:26,640 --> 00:36:30,540
we also construct the cpab for nc1 also

710
00:36:30,540 --> 00:36:33,119
having constant site secret keys and at

711
00:36:33,119 --> 00:36:35,339
the same time the software text encoding

712
00:36:35,339 --> 00:36:38,339
a policy F also has size independent of

713
00:36:38,339 --> 00:36:39,240
f

714
00:36:39,240 --> 00:36:43,079
hence is a w16 scheme and if we replace

715
00:36:43,079 --> 00:36:45,359
the lwe Assumption with the Adaptive

716
00:36:45,359 --> 00:36:49,020
outer V introduced in qww then both

717
00:36:49,020 --> 00:36:52,520
scheme achieve adaptive security

718
00:36:52,520 --> 00:36:56,460
our constructions at a high level starts

719
00:36:56,460 --> 00:36:58,020
from the lattice space the secure

720
00:36:58,020 --> 00:37:00,780
function evaluation protocol introducing

721
00:37:00,780 --> 00:37:04,260
qww which is the which is similar to but

722
00:37:04,260 --> 00:37:07,560
weaker than one key use of pure Ade and

723
00:37:07,560 --> 00:37:09,900
we use the pairing to lift it into a

724
00:37:09,900 --> 00:37:12,359
multi-key security scheme

725
00:37:12,359 --> 00:37:17,040
uh so known uh note to that the known

726
00:37:17,040 --> 00:37:20,220
kpab scheme for p they use the

727
00:37:20,220 --> 00:37:22,260
celebrated lattice trapdoor technique

728
00:37:22,260 --> 00:37:24,660
but this also creates a bottleneck

729
00:37:24,660 --> 00:37:27,119
because of the Troubadours usually lives

730
00:37:27,119 --> 00:37:30,180
in the secret key have a size polynomial

731
00:37:30,180 --> 00:37:33,240
indeed so the keys are large and we only

732
00:37:33,240 --> 00:37:37,020
know how to show selective security

733
00:37:37,020 --> 00:37:39,780
um when the trapdoors are involved

734
00:37:39,780 --> 00:37:42,900
this SIV protocol avoids that his

735
00:37:42,900 --> 00:37:46,200
Travelers and it's also either in the

736
00:37:46,200 --> 00:37:48,359
avoids the factors in its construction

737
00:37:48,359 --> 00:37:52,260
and also in the security group and it's

738
00:37:52,260 --> 00:37:55,680
it's adaptively secure from adaptive lwe

739
00:37:55,680 --> 00:37:58,320
assumption this gives us a new way

740
00:37:58,320 --> 00:38:01,440
towards adaptiveness of your Abe

741
00:38:01,440 --> 00:38:04,200
and uh the difficulty we will face when

742
00:38:04,200 --> 00:38:07,619
combining lattices and pairing is uh

743
00:38:07,619 --> 00:38:09,720
comes from the fact that in the lattice

744
00:38:09,720 --> 00:38:12,359
world will generate large noises from

745
00:38:12,359 --> 00:38:15,300
homomorphic evaluation and the use of

746
00:38:15,300 --> 00:38:16,800
noise flooding

747
00:38:16,800 --> 00:38:19,380
well in the pairing world we hide

748
00:38:19,380 --> 00:38:21,420
information in the exponents of the

749
00:38:21,420 --> 00:38:24,000
parent groups which currently tolerate

750
00:38:24,000 --> 00:38:25,619
small volumes

751
00:38:25,619 --> 00:38:27,960
and uh next I will give a quick overview

752
00:38:27,960 --> 00:38:29,940
of the Sip protocol

753
00:38:29,940 --> 00:38:32,460
which involves a sender and the receiver

754
00:38:32,460 --> 00:38:36,119
holding each holding a attribute x a

755
00:38:36,119 --> 00:38:39,960
massive M and the a policy f the goal is

756
00:38:39,960 --> 00:38:42,359
for the receiver to learn the message

757
00:38:42,359 --> 00:38:46,859
and if and only if f of x equals 0.

758
00:38:46,859 --> 00:38:49,980
and the the protocol uses two uh

759
00:38:49,980 --> 00:38:52,560
homomorphic evaluation procedure firstly

760
00:38:52,560 --> 00:38:55,380
introduced in the celebrated work of ddg

761
00:38:55,380 --> 00:38:58,380
Plus 14. so the receiver first runs

762
00:38:58,380 --> 00:39:01,500
evolve PP over the public matrices to

763
00:39:01,500 --> 00:39:03,660
computer digest as

764
00:39:03,660 --> 00:39:06,540
and then the sender encodes its

765
00:39:06,540 --> 00:39:08,880
attribute in the following format where

766
00:39:08,880 --> 00:39:12,359
s is LW Secrets G is a gadget Matrix

767
00:39:12,359 --> 00:39:15,660
with a public chapter G inverse

768
00:39:15,660 --> 00:39:17,520
and using the second evaluation

769
00:39:17,520 --> 00:39:20,820
procedure on the attribute encodings the

770
00:39:20,820 --> 00:39:24,300
receiver can get S times AF Plus f of x

771
00:39:24,300 --> 00:39:28,619
times G when f of x equals zero this

772
00:39:28,619 --> 00:39:31,680
term becomes s times AF which multiplied

773
00:39:31,680 --> 00:39:33,960
with G inverse of U we got this term in

774
00:39:33,960 --> 00:39:35,220
the blue box

775
00:39:35,220 --> 00:39:37,920
and the sender uses computer message

776
00:39:37,920 --> 00:39:41,579
encoding using exactly this blue box

777
00:39:41,579 --> 00:39:44,520
term to hide the message so the receiver

778
00:39:44,520 --> 00:39:46,980
can subtract those two to recover the

779
00:39:46,980 --> 00:39:48,359
message

780
00:39:48,359 --> 00:39:53,099
and and attempt to cast sfe to a kpav is

781
00:39:53,099 --> 00:39:57,000
to set the master public key as to be

782
00:39:57,000 --> 00:39:59,099
the public parameters and also the

783
00:39:59,099 --> 00:40:03,480
server text to be CTX and ctm but the

784
00:40:03,480 --> 00:40:07,560
issue is this ctm term is dependent on

785
00:40:07,560 --> 00:40:10,500
the policy F which is unknown to the AV

786
00:40:10,500 --> 00:40:13,200
encryption encryption algorithm and

787
00:40:13,200 --> 00:40:15,599
there's also not clear what the the

788
00:40:15,599 --> 00:40:17,520
secret key should be

789
00:40:17,520 --> 00:40:21,060
uh our we use a pairing based ipfe

790
00:40:21,060 --> 00:40:23,760
scheme which allows us to break an inner

791
00:40:23,760 --> 00:40:27,720
product between u and v into IP ipfe

792
00:40:27,720 --> 00:40:29,940
server text or View and the secret key

793
00:40:29,940 --> 00:40:31,320
of V

794
00:40:31,320 --> 00:40:34,680
the security hides you and reviews V and

795
00:40:34,680 --> 00:40:37,380
the inner product in the exponent

796
00:40:37,380 --> 00:40:40,460
so now we can break the problematic term

797
00:40:40,460 --> 00:40:46,140
ctm uh into an ipfe subrotect of S and M

798
00:40:46,140 --> 00:40:49,020
and ipfe secret key of the rest of the

799
00:40:49,020 --> 00:40:52,140
term which may depend on as and note

800
00:40:52,140 --> 00:40:54,900
that the decryption result of this ipfe

801
00:40:54,900 --> 00:40:57,359
lives in the exponent of the target

802
00:40:57,359 --> 00:41:00,359
current group instead of in the clear

803
00:41:00,359 --> 00:41:03,180
and now to verify correctness we follow

804
00:41:03,180 --> 00:41:06,420
the previous procedure first we run eval

805
00:41:06,420 --> 00:41:09,240
City to get the blue box the term and

806
00:41:09,240 --> 00:41:12,660
then subtract it from the ctm term

807
00:41:12,660 --> 00:41:15,780
but the difference is that now the ctm

808
00:41:15,780 --> 00:41:18,780
term enhance the recovered message leave

809
00:41:18,780 --> 00:41:21,540
in the exponent of the target group and

810
00:41:21,540 --> 00:41:24,119
to recover it in the clear we need to be

811
00:41:24,119 --> 00:41:26,700
able to compute the script algorithm

812
00:41:26,700 --> 00:41:29,880
and whenever we are dealing with the

813
00:41:29,880 --> 00:41:32,400
lattices uh we need to be careful about

814
00:41:32,400 --> 00:41:35,579
the noises because the uh attribute

815
00:41:35,579 --> 00:41:38,880
encoding uh each have some noise what we

816
00:41:38,880 --> 00:41:41,400
this will give generate a homomorphic

817
00:41:41,400 --> 00:41:44,339
evaluation noise uh in the blue box term

818
00:41:44,339 --> 00:41:48,900
or EAD and what we recover actually is

819
00:41:48,900 --> 00:41:51,060
um plus EF in the exponent

820
00:41:51,060 --> 00:41:54,300
and the this first correctness problem

821
00:41:54,300 --> 00:41:57,720
is that this ear noise is huge it's it's

822
00:41:57,720 --> 00:42:00,300
exponential in D since we cannot do uh

823
00:42:00,300 --> 00:42:02,820
discrete log equation 3. another

824
00:42:02,820 --> 00:42:05,820
efficiency problem is that the modulus Q

825
00:42:05,820 --> 00:42:08,760
because of the large noise is also huge

826
00:42:08,760 --> 00:42:11,640
giving us a large separate text size of

827
00:42:11,640 --> 00:42:13,800
a polynomial in b

828
00:42:13,800 --> 00:42:16,920
and our solution is to apply rounding to

829
00:42:16,920 --> 00:42:19,320
the blue box term and we round it down

830
00:42:19,320 --> 00:42:22,140
to a much smaller modulus P that's

831
00:42:22,140 --> 00:42:25,740
independent of D and this rounded term

832
00:42:25,740 --> 00:42:29,940
roughly equals s times AF G inverse uh

833
00:42:29,940 --> 00:42:32,520
rounded down to P plus some small error

834
00:42:32,520 --> 00:42:35,700
terms and now we also apply rounding to

835
00:42:35,700 --> 00:42:38,640
the secret key and what we get is M

836
00:42:38,640 --> 00:42:40,800
minus the small error terms in the

837
00:42:40,800 --> 00:42:43,440
exponent instead since error terms have

838
00:42:43,440 --> 00:42:46,320
small magnitude we can now compute the

839
00:42:46,320 --> 00:42:49,079
discrete algorithm efficiently and this

840
00:42:49,079 --> 00:42:53,160
gives us a correct AB scheme and note

841
00:42:53,160 --> 00:42:56,280
that the rounded modulus p is also small

842
00:42:56,280 --> 00:42:58,440
since we have a constant size secret

843
00:42:58,440 --> 00:43:00,119
keys

844
00:43:00,119 --> 00:43:03,000
other challenges involves first proof

845
00:43:03,000 --> 00:43:06,359
one key security the original sfe scheme

846
00:43:06,359 --> 00:43:09,540
relies on noise flooding particularly in

847
00:43:09,540 --> 00:43:12,119
the term ctm which we cannot afford to

848
00:43:12,119 --> 00:43:14,880
do because ctm lives in the Target

849
00:43:14,880 --> 00:43:16,380
parent group

850
00:43:16,380 --> 00:43:20,220
the exponent of the the group uh what we

851
00:43:20,220 --> 00:43:22,200
do is to just remove the filing noise

852
00:43:22,200 --> 00:43:24,599
and we are able to still show that the

853
00:43:24,599 --> 00:43:27,720
term is entropic uh and although not

854
00:43:27,720 --> 00:43:30,000
pseudo-random but this is already enough

855
00:43:30,000 --> 00:43:32,700
for security in GGI

856
00:43:32,700 --> 00:43:35,220
and uh to to obtain multi-key security

857
00:43:35,220 --> 00:43:39,480
we borrow ideas from ay and AWI we chose

858
00:43:39,480 --> 00:43:41,480
to relax on gdm

859
00:43:41,480 --> 00:43:44,400
and further detail you can find in our

860
00:43:44,400 --> 00:43:47,400
paper which is on on reprint

861
00:43:47,400 --> 00:43:50,180
thank you

862
00:43:54,480 --> 00:43:56,339
so we have time for maybe one question

863
00:43:56,339 --> 00:43:58,940
so

864
00:44:07,400 --> 00:44:09,720
so maybe I missed it but can you say

865
00:44:09,720 --> 00:44:11,700
where the quadratic dependence comes

866
00:44:11,700 --> 00:44:14,400
from in your second theorem

867
00:44:14,400 --> 00:44:18,540
oh where the oh X star that's right oh

868
00:44:18,540 --> 00:44:20,640
yeah I didn't mention the cpav

869
00:44:20,640 --> 00:44:23,940
construction at all uh it's because in

870
00:44:23,940 --> 00:44:27,540
the CP construction we uh

871
00:44:27,540 --> 00:44:32,220
in the icrp uh

872
00:44:32,220 --> 00:44:36,900
in the City Construction we are encoding

873
00:44:36,900 --> 00:44:39,000
uh

874
00:44:39,000 --> 00:44:41,640
or including the

875
00:44:41,640 --> 00:44:45,420
can I say uh sometimes

876
00:44:45,420 --> 00:44:47,880
we can take it offline yeah yeah sorry

877
00:44:47,880 --> 00:44:49,099
guys

878
00:44:49,099 --> 00:44:52,560
okay any other questions

879
00:44:52,560 --> 00:44:54,900
so I have one really quick one so do you

880
00:44:54,900 --> 00:44:57,540
see any hope of replacing the gdm with a

881
00:44:57,540 --> 00:44:59,579
concrete assumption so I think awy was

882
00:44:59,579 --> 00:45:01,200
able to show it from this new knowledge

883
00:45:01,200 --> 00:45:03,780
based assumption over parent groups can

884
00:45:03,780 --> 00:45:06,300
you see something similar here

885
00:45:06,300 --> 00:45:08,460
um we tried it for a while to formulate

886
00:45:08,460 --> 00:45:13,319
uh some knowledge assumptions uh but not

887
00:45:13,319 --> 00:45:15,240
very successful

888
00:45:15,240 --> 00:45:17,339
okay great so let's thank the speaker

889
00:45:17,339 --> 00:45:18,900
and all of the other speakers in the

890
00:45:18,900 --> 00:45:21,020
session

891
00:45:23,460 --> 00:45:26,780
and now we have a coffee break

