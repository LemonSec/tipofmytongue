1
00:00:00,000 --> 00:00:01,860
we go

2
00:00:01,860 --> 00:00:04,319
okay

3
00:00:04,319 --> 00:00:07,379
let's get started

4
00:00:07,379 --> 00:00:10,380
let's get started okay welcome to TCC

5
00:00:10,380 --> 00:00:13,679
2022 everybody my name is David cash I

6
00:00:13,679 --> 00:00:15,480
am your general chair I'm a professor

7
00:00:15,480 --> 00:00:17,880
here at the University of Chicago

8
00:00:17,880 --> 00:00:20,460
um which is where you are today

9
00:00:20,460 --> 00:00:21,660
um I'll start with the most important

10
00:00:21,660 --> 00:00:24,240
thing uh the Wi-Fi password is study

11
00:00:24,240 --> 00:00:26,699
hotels okay with a capital estimate

12
00:00:26,699 --> 00:00:28,560
Capital H it's written on the signs of

13
00:00:28,560 --> 00:00:31,140
the back tables and at various places uh

14
00:00:31,140 --> 00:00:32,640
use the meetings and events one that

15
00:00:32,640 --> 00:00:34,800
one's stronger down here I'll start with

16
00:00:34,800 --> 00:00:36,660
the second most important thing which is

17
00:00:36,660 --> 00:00:39,420
where are the bathrooms uh we have a

18
00:00:39,420 --> 00:00:41,219
small bathroom right outside next to the

19
00:00:41,219 --> 00:00:43,739
stairs uh you could see with my fancy

20
00:00:43,739 --> 00:00:45,120
diagram here if you just exit the

21
00:00:45,120 --> 00:00:46,379
lecture hall on the way to the stairs

22
00:00:46,379 --> 00:00:48,120
you'll see the bathroom there is a

23
00:00:48,120 --> 00:00:49,739
secret bathroom much further away that

24
00:00:49,739 --> 00:00:51,239
if you're frustrated with lines you can

25
00:00:51,239 --> 00:00:54,059
go to it involves going up the stairs

26
00:00:54,059 --> 00:00:56,280
going past here by the way lunch is

27
00:00:56,280 --> 00:00:58,079
right up the stairs each day you'll walk

28
00:00:58,079 --> 00:00:59,100
past this room with a bunch of round

29
00:00:59,100 --> 00:01:00,960
tables going to the other side of the

30
00:01:00,960 --> 00:01:02,579
hotel down this hall and then there's a

31
00:01:02,579 --> 00:01:04,559
bathroom in that corner of the hotel

32
00:01:04,559 --> 00:01:08,220
okay so yes take a picture uh Wi-Fi and

33
00:01:08,220 --> 00:01:10,260
backwards we're set to uh to get to the

34
00:01:10,260 --> 00:01:11,939
less important stuff now

35
00:01:11,939 --> 00:01:14,700
so um welcome to Hyde Park Chicago

36
00:01:14,700 --> 00:01:16,680
you're on the south side of Chicago in

37
00:01:16,680 --> 00:01:18,180
the historic neighborhood of Hyde Park

38
00:01:18,180 --> 00:01:21,000
this is what it looks like in the summer

39
00:01:21,000 --> 00:01:23,220
um it's it's a it's a beautiful sort of

40
00:01:23,220 --> 00:01:24,900
residential neighborhood I encourage you

41
00:01:24,900 --> 00:01:26,520
to explore it a little bit uh in your

42
00:01:26,520 --> 00:01:28,259
off time here

43
00:01:28,259 --> 00:01:29,640
um and you picked a great week to be

44
00:01:29,640 --> 00:01:31,619
here uh the weather is not always like

45
00:01:31,619 --> 00:01:33,720
this in November in Chicago it is often

46
00:01:33,720 --> 00:01:37,500
uh snowy by now so uh we're quite lucky

47
00:01:37,500 --> 00:01:40,560
to be enjoying the the weather this year

48
00:01:40,560 --> 00:01:42,119
um if you look in your your bag the

49
00:01:42,119 --> 00:01:44,040
backpack we handed out I made a

50
00:01:44,040 --> 00:01:45,420
neighborhood guide to sort of encourage

51
00:01:45,420 --> 00:01:47,220
you to get out of the hotel a little bit

52
00:01:47,220 --> 00:01:48,960
and explore the neighborhood especially

53
00:01:48,960 --> 00:01:51,000
since a lot of the uh things to do are

54
00:01:51,000 --> 00:01:53,399
not visible from you know the hotel uh

55
00:01:53,399 --> 00:01:55,020
in general you want to exit the hotel

56
00:01:55,020 --> 00:01:57,180
and cross this park that's in front of

57
00:01:57,180 --> 00:01:58,740
us called the Midway so this way is

58
00:01:58,740 --> 00:02:00,060
north

59
00:02:00,060 --> 00:02:02,280
um I've circled the places where uh

60
00:02:02,280 --> 00:02:04,560
there tend to be restaurants

61
00:02:04,560 --> 00:02:06,119
um around here is this really beautiful

62
00:02:06,119 --> 00:02:08,758
uh historic part of Campus uh the gothic

63
00:02:08,758 --> 00:02:10,258
buildings and everything and if you have

64
00:02:10,258 --> 00:02:11,879
a minute to go for a walk it's really

65
00:02:11,879 --> 00:02:13,800
nice if you want to go for a longer walk

66
00:02:13,800 --> 00:02:16,140
I recommend sort of going through the

67
00:02:16,140 --> 00:02:17,640
neighborhood up here to this place

68
00:02:17,640 --> 00:02:19,319
called Promontory point which looks like

69
00:02:19,319 --> 00:02:21,180
this you can get a view of the loop uh

70
00:02:21,180 --> 00:02:22,500
it's one of the most beautiful places in

71
00:02:22,500 --> 00:02:25,680
Chicago especially this time of year

72
00:02:25,680 --> 00:02:27,180
so next

73
00:02:27,180 --> 00:02:29,160
um so the conference program is online

74
00:02:29,160 --> 00:02:30,720
with all of the talks as you'd usually

75
00:02:30,720 --> 00:02:34,020
expect uh coffee breaks and lunches

76
00:02:34,020 --> 00:02:35,879
um in the evenings uh tonight is our

77
00:02:35,879 --> 00:02:39,000
free evening we at the last minute added

78
00:02:39,000 --> 00:02:40,920
a business meeting today at five o'clock

79
00:02:40,920 --> 00:02:43,440
so immediately after the last session in

80
00:02:43,440 --> 00:02:45,480
here uh we're gonna have a half hour to

81
00:02:45,480 --> 00:02:48,300
discuss sort of the future of TCC uh how

82
00:02:48,300 --> 00:02:49,500
we might arrange and change the

83
00:02:49,500 --> 00:02:50,760
conference over time if you have

84
00:02:50,760 --> 00:02:52,860
opinions or you want to hear uh opinions

85
00:02:52,860 --> 00:02:54,300
please stay for that

86
00:02:54,300 --> 00:02:56,280
on Tuesday we're going to have a

87
00:02:56,280 --> 00:02:58,860
conference dinner uh in this room uh

88
00:02:58,860 --> 00:03:00,599
drinks will be served at 6 30 outside

89
00:03:00,599 --> 00:03:03,180
the food will be served at seven

90
00:03:03,180 --> 00:03:05,280
um uh we do need to exit this room for

91
00:03:05,280 --> 00:03:07,019
an hour and a half uh tomorrow afternoon

92
00:03:07,019 --> 00:03:09,060
so they can put in tables and rearrange

93
00:03:09,060 --> 00:03:10,800
it for the dinner

94
00:03:10,800 --> 00:03:12,120
um and then Wednesday we have a social

95
00:03:12,120 --> 00:03:13,560
event which I will talk about on the

96
00:03:13,560 --> 00:03:15,540
next slide and Thursday uh we'll

97
00:03:15,540 --> 00:03:17,400
conclude I believe at 4 pm unless the

98
00:03:17,400 --> 00:03:20,400
program got changed but of course it is

99
00:03:20,400 --> 00:03:22,260
all online and also print it out in your

100
00:03:22,260 --> 00:03:23,159
bag

101
00:03:23,159 --> 00:03:26,099
so um Wednesday evening I really hope

102
00:03:26,099 --> 00:03:28,440
all of you can come to a boat tour that

103
00:03:28,440 --> 00:03:31,379
we've ranched so um the bus we will take

104
00:03:31,379 --> 00:03:34,200
buses from uh outside the hotel to

105
00:03:34,200 --> 00:03:36,120
downtown Chicago

106
00:03:36,120 --> 00:03:39,360
um uh and the buses depart at 5 30. so

107
00:03:39,360 --> 00:03:41,159
uh please try to get on those buses it's

108
00:03:41,159 --> 00:03:42,900
kind of difficult if you miss it to sort

109
00:03:42,900 --> 00:03:44,879
of catch up and get on the boat

110
00:03:44,879 --> 00:03:46,680
um the boat tour itself will be from 6

111
00:03:46,680 --> 00:03:49,319
30 to 8 30. uh this is my favorite sort

112
00:03:49,319 --> 00:03:52,560
of tourist activity to do in Chicago

113
00:03:52,560 --> 00:03:54,239
um we're going to there's going to be uh

114
00:03:54,239 --> 00:03:56,220
food and drinks and for the initial part

115
00:03:56,220 --> 00:03:58,319
of it some architecture commentary as we

116
00:03:58,319 --> 00:03:59,819
ride around this beautiful river that

117
00:03:59,819 --> 00:04:00,980
cuts through the center of Chicago

118
00:04:00,980 --> 00:04:03,060
weather permitting we'll take the boat

119
00:04:03,060 --> 00:04:04,680
out into the lake and get a view of the

120
00:04:04,680 --> 00:04:07,440
city and it should be a really nice time

121
00:04:07,440 --> 00:04:08,819
um you know don't miss the boat

122
00:04:08,819 --> 00:04:10,860
obviously if the boat leaves you know

123
00:04:10,860 --> 00:04:12,060
you miss the whole thing you can't get

124
00:04:12,060 --> 00:04:13,260
on late

125
00:04:13,260 --> 00:04:15,299
um and also I've tried to arrange so

126
00:04:15,299 --> 00:04:16,620
that vegetarian and vegan food is

127
00:04:16,620 --> 00:04:17,820
available for everybody registered the

128
00:04:17,820 --> 00:04:19,500
boat had its some odd Arrangement that

129
00:04:19,500 --> 00:04:21,238
the vegan food is only available if you

130
00:04:21,238 --> 00:04:23,100
go and ask them for it so please only

131
00:04:23,100 --> 00:04:24,840
ask for the vegan food if you registered

132
00:04:24,840 --> 00:04:26,699
as a you know you required vegan food

133
00:04:26,699 --> 00:04:28,259
when you register for the conference

134
00:04:28,259 --> 00:04:32,220
don't just pill for the vegan food

135
00:04:32,220 --> 00:04:34,919
um great so uh other highlights of the

136
00:04:34,919 --> 00:04:36,419
conference include two invited speakers

137
00:04:36,419 --> 00:04:39,240
Rahul santanam uh today at 11 o'clock

138
00:04:39,240 --> 00:04:41,100
and Aaron Tremor uh tomorrow or

139
00:04:41,100 --> 00:04:43,380
Wednesday at 11 o'clock uh their talk

140
00:04:43,380 --> 00:04:45,600
titles and information are are in the

141
00:04:45,600 --> 00:04:47,699
program which everybody to attend those

142
00:04:47,699 --> 00:04:49,259
they're very uh generous with their time

143
00:04:49,259 --> 00:04:50,580
and effort to travel all the way here to

144
00:04:50,580 --> 00:04:52,380
give those talks

145
00:04:52,380 --> 00:04:54,180
um we also have a test of time award

146
00:04:54,180 --> 00:04:57,360
talk given by Jesper uh tomorrow at four

147
00:04:57,360 --> 00:04:59,040
o'clock so we'll have this this talk

148
00:04:59,040 --> 00:05:01,080
sort of to cap off the day then there'll

149
00:05:01,080 --> 00:05:03,240
be a break before the dinner so uh this

150
00:05:03,240 --> 00:05:04,620
award has already been announced for

151
00:05:04,620 --> 00:05:07,919
their work from TCC 2011 uh with Yvonne

152
00:05:07,919 --> 00:05:11,160
uh domgaard sigurd melguard and of

153
00:05:11,160 --> 00:05:13,139
course on perfectly secure oblivious Ram

154
00:05:13,139 --> 00:05:15,600
without random oracles

155
00:05:15,600 --> 00:05:19,020
okay uh finally uh I want to stress two

156
00:05:19,020 --> 00:05:22,139
uh close with two other uh things that

157
00:05:22,139 --> 00:05:23,520
um I just want to mention before we move

158
00:05:23,520 --> 00:05:25,680
on to the talks first is the icrs

159
00:05:25,680 --> 00:05:27,240
adopted a code of conduct at all of its

160
00:05:27,240 --> 00:05:28,860
events I encourage you to read this if

161
00:05:28,860 --> 00:05:30,240
you haven't this is a screenshot from

162
00:05:30,240 --> 00:05:32,160
the conference website

163
00:05:32,160 --> 00:05:33,840
um uh our statement basically says that

164
00:05:33,840 --> 00:05:35,100
everyone is entitled to be here without

165
00:05:35,100 --> 00:05:37,740
any sort of harassment or discrimination

166
00:05:37,740 --> 00:05:39,180
um and with full you know respect we're

167
00:05:39,180 --> 00:05:40,860
going to respect the the Dignity of

168
00:05:40,860 --> 00:05:42,240
every participant if you see anything

169
00:05:42,240 --> 00:05:44,699
concerning uh at all you're encouraged

170
00:05:44,699 --> 00:05:45,960
to intervene

171
00:05:45,960 --> 00:05:48,120
um you can contact me or you can uh

172
00:05:48,120 --> 00:05:50,340
contact uh Shai who's here part of the

173
00:05:50,340 --> 00:05:52,320
Ethics Committee or the other people

174
00:05:52,320 --> 00:05:55,080
here remotely uh listed there

175
00:05:55,080 --> 00:05:58,320
and I want to close by saying um I've

176
00:05:58,320 --> 00:05:59,940
attended conferences for a long time

177
00:05:59,940 --> 00:06:02,520
almost 20 years I never really thought

178
00:06:02,520 --> 00:06:04,259
about how much work goes into these

179
00:06:04,259 --> 00:06:06,360
conferences uh now I know

180
00:06:06,360 --> 00:06:08,460
um and it's not just me uh it's a

181
00:06:08,460 --> 00:06:10,199
tremendous amount of work by volunteers

182
00:06:10,199 --> 00:06:12,660
including Sandy uh Carlos who's with you

183
00:06:12,660 --> 00:06:14,400
Chicago CS you may have met on your way

184
00:06:14,400 --> 00:06:15,240
in

185
00:06:15,240 --> 00:06:16,860
um who has done a tremendous amount of

186
00:06:16,860 --> 00:06:18,479
work with me for what feels like years

187
00:06:18,479 --> 00:06:20,280
given all of the pandemic delays and

188
00:06:20,280 --> 00:06:22,199
everything getting started but we also

189
00:06:22,199 --> 00:06:23,819
have four student volunteers who you'll

190
00:06:23,819 --> 00:06:25,800
meet uh Alex who's here who will be

191
00:06:25,800 --> 00:06:27,660
putting the mic on you if you're uh

192
00:06:27,660 --> 00:06:29,759
speaking uh Jesse who will be running a

193
00:06:29,759 --> 00:06:32,759
mic to you if you uh ask a question and

194
00:06:32,759 --> 00:06:34,919
uh JN and Sam who will be doing various

195
00:06:34,919 --> 00:06:36,840
things involving registration and AV so

196
00:06:36,840 --> 00:06:38,280
I think they deserve a round of applause

197
00:06:38,280 --> 00:06:40,020
while we get set up for the uh the rest

198
00:06:40,020 --> 00:06:42,500
of the conference

199
00:06:44,460 --> 00:06:47,340
okay and uh with that we'll get started

200
00:06:47,340 --> 00:06:50,419
with our first technical session

201
00:07:00,919 --> 00:07:04,940
let me turn this off

202
00:07:38,360 --> 00:07:42,180
uh okay is everything good to go yes it

203
00:07:42,180 --> 00:07:44,220
sounds great okay we have our speaker

204
00:07:44,220 --> 00:07:45,539
ready to go we're just one more minute

205
00:07:45,539 --> 00:07:47,520
uh and then uh fermi's gonna start the

206
00:07:47,520 --> 00:07:49,818
introduction

207
00:08:11,940 --> 00:08:14,460
um hi everyone my name is Fermi I'll be

208
00:08:14,460 --> 00:08:15,660
chairing the first session on post

209
00:08:15,660 --> 00:08:17,699
Quantum photography we have four

210
00:08:17,699 --> 00:08:19,800
fantastic talks coming up and starting

211
00:08:19,800 --> 00:08:21,720
us off is Ethan Mook who's going to tell

212
00:08:21,720 --> 00:08:23,400
us about post Quantum insecurity from

213
00:08:23,400 --> 00:08:26,120
lwe

214
00:08:27,720 --> 00:08:29,520
this is

215
00:08:29,520 --> 00:08:32,399
uh okay hello uh my name is Ethan Mark

216
00:08:32,399 --> 00:08:33,839
I'm gonna be talking about host getting

217
00:08:33,839 --> 00:08:36,599
post Quantum in security from lwe uh

218
00:08:36,599 --> 00:08:38,219
this is Joint work with Alex Lombardi

219
00:08:38,219 --> 00:08:41,159
Willie quash and uh Daniel wicks

220
00:08:41,159 --> 00:08:43,440
the central question of this work is

221
00:08:43,440 --> 00:08:46,260
whether proving security under lwe

222
00:08:46,260 --> 00:08:49,019
always necessarily gives us Post Quantum

223
00:08:49,019 --> 00:08:50,279
security

224
00:08:50,279 --> 00:08:51,959
and it's been known for quite some time

225
00:08:51,959 --> 00:08:53,279
that the answer for at least for

226
00:08:53,279 --> 00:08:55,860
interactive protocols is no and there is

227
00:08:55,860 --> 00:08:58,200
extensive prior work showing that the

228
00:08:58,200 --> 00:09:00,800
security approves for various different

229
00:09:00,800 --> 00:09:03,000
uh security properties you might want

230
00:09:03,000 --> 00:09:06,360
for an interactive protocol breakdown uh

231
00:09:06,360 --> 00:09:07,740
when you move to the post Quantum

232
00:09:07,740 --> 00:09:10,260
setting and kind of the main issue here

233
00:09:10,260 --> 00:09:12,540
is with rewinding which I'll get to in a

234
00:09:12,540 --> 00:09:14,279
little bit but I also want to comment

235
00:09:14,279 --> 00:09:16,260
that this is not just a failure of the

236
00:09:16,260 --> 00:09:17,459
proof techniques we actually have like

237
00:09:17,459 --> 00:09:19,320
explicit examples of things where

238
00:09:19,320 --> 00:09:20,519
there's some security property that

239
00:09:20,519 --> 00:09:22,740
holds classically but not uh in a post

240
00:09:22,740 --> 00:09:24,120
Quantum setting

241
00:09:24,120 --> 00:09:25,620
but we can ask the question how about

242
00:09:25,620 --> 00:09:27,660
what about uh non-interactive Primitives

243
00:09:27,660 --> 00:09:28,920
like many of the most fundamental

244
00:09:28,920 --> 00:09:30,600
Primitives we consider in cryptography

245
00:09:30,600 --> 00:09:33,420
are Primitives that are modeled as you

246
00:09:33,420 --> 00:09:36,600
know stateless functions uh where uh

247
00:09:36,600 --> 00:09:37,740
nothing like nothing about the

248
00:09:37,740 --> 00:09:39,899
functionality is really Interactive

249
00:09:39,899 --> 00:09:41,220
and so you could have this reasonable

250
00:09:41,220 --> 00:09:43,260
hope that since rewinding doesn't show

251
00:09:43,260 --> 00:09:45,240
up here uh

252
00:09:45,240 --> 00:09:47,880
uh event security from lwe will

253
00:09:47,880 --> 00:09:50,040
necessarily imply postpartum security

254
00:09:50,040 --> 00:09:51,899
the main result of this paper is that

255
00:09:51,899 --> 00:09:54,180
this is not the case and we give

256
00:09:54,180 --> 00:09:56,820
examples of some explicit yet contrived

257
00:09:56,820 --> 00:09:58,560
counter examples for non-interactive

258
00:09:58,560 --> 00:10:00,180
Primitives these listed in red like

259
00:10:00,180 --> 00:10:02,399
pseudo random functions Max signatures

260
00:10:02,399 --> 00:10:06,300
uh CPA secure symmetric key and CCA

261
00:10:06,300 --> 00:10:09,300
public key security encryption uh that

262
00:10:09,300 --> 00:10:11,940
are classically secure under lwe but

263
00:10:11,940 --> 00:10:13,620
quantumly broken

264
00:10:13,620 --> 00:10:15,720
uh the core technique like that we have

265
00:10:15,720 --> 00:10:17,519
uh the core observation that we have is

266
00:10:17,519 --> 00:10:19,440
that many of these primitive the many

267
00:10:19,440 --> 00:10:21,240
non-anarthic Primitives actually have an

268
00:10:21,240 --> 00:10:22,920
interactive security game and so

269
00:10:22,920 --> 00:10:24,779
therefore you could see how rewinding

270
00:10:24,779 --> 00:10:26,880
could be an issue and so like our kind

271
00:10:26,880 --> 00:10:28,620
of uh intuitive goal is that we're going

272
00:10:28,620 --> 00:10:31,200
to force the reduction to rewind the

273
00:10:31,200 --> 00:10:34,080
adversary somehow and the main technique

274
00:10:34,080 --> 00:10:35,700
is that we're going to embed a so-called

275
00:10:35,700 --> 00:10:37,560
interactive proof of quantumness into

276
00:10:37,560 --> 00:10:39,779
the Primitive that will and will

277
00:10:39,779 --> 00:10:43,080
catastrophically fail when the adversary

278
00:10:43,080 --> 00:10:44,959
is one

279
00:10:44,959 --> 00:10:47,339
and so backing up a little bit I just

280
00:10:47,339 --> 00:10:49,560
want to comment about uh like what what

281
00:10:49,560 --> 00:10:51,060
like why is this surprising and like

282
00:10:51,060 --> 00:10:53,339
what does go wrong so typically we model

283
00:10:53,339 --> 00:10:55,380
like we prove security by giving a black

284
00:10:55,380 --> 00:10:58,260
box reduction and it doesn't seem you

285
00:10:58,260 --> 00:11:00,360
know like on a superficial level you

286
00:11:00,360 --> 00:11:02,459
might think that since this is a black

287
00:11:02,459 --> 00:11:03,899
box it shouldn't matter matter whether

288
00:11:03,899 --> 00:11:05,760
the adversary is classical or Quantum

289
00:11:05,760 --> 00:11:07,560
however there's like this fundamental

290
00:11:07,560 --> 00:11:09,720
mismatch in the interface the reduction

291
00:11:09,720 --> 00:11:13,260
gives when it is uh uh between a

292
00:11:13,260 --> 00:11:14,880
classical and the quantum setting and so

293
00:11:14,880 --> 00:11:17,399
this comes up with rewinding and kind of

294
00:11:17,399 --> 00:11:18,720
the idea is that a classical reduction

295
00:11:18,720 --> 00:11:20,339
it's like a common technique that a

296
00:11:20,339 --> 00:11:22,680
classical adapter may want to uh run the

297
00:11:22,680 --> 00:11:25,200
adversary many times and it may like uh

298
00:11:25,200 --> 00:11:27,360
revert to an earlier execution and

299
00:11:27,360 --> 00:11:28,740
restore the previous state before

300
00:11:28,740 --> 00:11:30,300
running it again

301
00:11:30,300 --> 00:11:32,820
uh however in the quantum setting this

302
00:11:32,820 --> 00:11:34,740
doesn't work because

303
00:11:34,740 --> 00:11:36,540
if the adversary or if the production

304
00:11:36,540 --> 00:11:39,300
tries to rewind the adversary the like

305
00:11:39,300 --> 00:11:41,040
the quantum adversary may make some

306
00:11:41,040 --> 00:11:42,899
measurement that collapses its Quantum

307
00:11:42,899 --> 00:11:45,779
State and uh prevents any consistency

308
00:11:45,779 --> 00:11:47,339
between these different rewindings

309
00:11:47,339 --> 00:11:51,079
causing the proven security to fail

310
00:11:51,360 --> 00:11:53,640
and indeed this is something that can

311
00:11:53,640 --> 00:11:56,579
like that can be explicitly realized uh

312
00:11:56,579 --> 00:11:59,000
and this is introduced in the work of

313
00:11:59,000 --> 00:12:02,820
Cristiano mojado uh meserano and vidic

314
00:12:02,820 --> 00:12:04,920
uh where they introduced this notion of

315
00:12:04,920 --> 00:12:06,720
interactive proofs of quantumness where

316
00:12:06,720 --> 00:12:08,399
the setup here is that there's a prover

317
00:12:08,399 --> 00:12:10,440
and a verifier and the verifier is

318
00:12:10,440 --> 00:12:11,640
purely classical and they send classical

319
00:12:11,640 --> 00:12:13,740
messages back and forth and the proofer

320
00:12:13,740 --> 00:12:15,300
is trying to convince the verifier that

321
00:12:15,300 --> 00:12:16,980
he is quantum

322
00:12:16,980 --> 00:12:19,320
and we want completeness that a Quantum

323
00:12:19,320 --> 00:12:23,040
approver can convince the verifier but a

324
00:12:23,040 --> 00:12:24,300
classical approver cannot convince the

325
00:12:24,300 --> 00:12:25,620
verifier but but with negligible

326
00:12:25,620 --> 00:12:26,880
probability

327
00:12:26,880 --> 00:12:28,920
and you know from a slightly different

328
00:12:28,920 --> 00:12:30,480
perspective we can think of soundness as

329
00:12:30,480 --> 00:12:32,880
being a security property that holds in

330
00:12:32,880 --> 00:12:34,680
the classical setting but completeness

331
00:12:34,680 --> 00:12:37,380
gives an explicit attack uh an explicit

332
00:12:37,380 --> 00:12:39,120
Quantum attack

333
00:12:39,120 --> 00:12:41,339
and so we can kind of think of an

334
00:12:41,339 --> 00:12:42,660
interactive proof of quantumness as like

335
00:12:42,660 --> 00:12:44,639
a primitive where like rewinding or at

336
00:12:44,639 --> 00:12:47,459
least some notion of uh like the

337
00:12:47,459 --> 00:12:48,660
reduction failing for Quantum

338
00:12:48,660 --> 00:12:50,820
adversaries is inherent and so any

339
00:12:50,820 --> 00:12:52,380
reduction will fail when you give it a

340
00:12:52,380 --> 00:12:53,760
Quantum adversary

341
00:12:53,760 --> 00:12:55,860
and the worker for Christy it all gives

342
00:12:55,860 --> 00:12:58,200
a four round uh interactive proof of

343
00:12:58,200 --> 00:13:02,100
quantum Miss uh from lwe

344
00:13:02,100 --> 00:13:04,380
and so what we do with this uh

345
00:13:04,380 --> 00:13:07,200
interactive proof of quantumness is we

346
00:13:07,200 --> 00:13:09,779
uh like so given here is like a specific

347
00:13:09,779 --> 00:13:12,720
example for signatures uh we essentially

348
00:13:12,720 --> 00:13:14,160
we're just going to like embed it into

349
00:13:14,160 --> 00:13:16,920
this protocol and so for instance so the

350
00:13:16,920 --> 00:13:19,019
the verification key will contain like

351
00:13:19,019 --> 00:13:20,639
the first interaction proof of quantum

352
00:13:20,639 --> 00:13:22,560
Miss verifier message and then kind of

353
00:13:22,560 --> 00:13:25,200
each signing query that the adversary

354
00:13:25,200 --> 00:13:26,339
sends

355
00:13:26,339 --> 00:13:29,100
In This Very uh in this like the signing

356
00:13:29,100 --> 00:13:31,740
security game will be parsed as the next

357
00:13:31,740 --> 00:13:34,620
Krueger message in the ipq and the

358
00:13:34,620 --> 00:13:36,480
signing Oracle responds with the next

359
00:13:36,480 --> 00:13:38,639
verifier message concatenated with you

360
00:13:38,639 --> 00:13:40,800
know some normal signature

361
00:13:40,800 --> 00:13:42,660
and we continue this process until we

362
00:13:42,660 --> 00:13:44,880
reach the end and at the end the signing

363
00:13:44,880 --> 00:13:47,160
Oracle will check if the ipq verifier

364
00:13:47,160 --> 00:13:49,800
accepts and then if it does it says like

365
00:13:49,800 --> 00:13:52,019
oh the signing uh like the signature of

366
00:13:52,019 --> 00:13:54,660
an accepting uh prover message is just

367
00:13:54,660 --> 00:13:56,700
the Supreme and so

368
00:13:56,700 --> 00:13:58,620
kind of the idea is that I pick you

369
00:13:58,620 --> 00:14:00,300
sadness implies that this doesn't affect

370
00:14:00,300 --> 00:14:01,500
classical security we still have

371
00:14:01,500 --> 00:14:03,060
classical security but completeness

372
00:14:03,060 --> 00:14:04,260
implies that there is an explicit

373
00:14:04,260 --> 00:14:06,980
Quantum membrane

374
00:14:07,079 --> 00:14:08,820
however there's a problem here is that

375
00:14:08,820 --> 00:14:10,800
we've now introduced some State into the

376
00:14:10,800 --> 00:14:12,959
signing Oracle because the ipq is a

377
00:14:12,959 --> 00:14:15,660
stateful interactive protocol

378
00:14:15,660 --> 00:14:18,720
and we want to fix this uh because

379
00:14:18,720 --> 00:14:20,459
normally we don't think of signatures as

380
00:14:20,459 --> 00:14:21,839
being stateful

381
00:14:21,839 --> 00:14:23,579
and so our observation is that the ipq

382
00:14:23,579 --> 00:14:26,339
from vocrisy at all uh is public coin

383
00:14:26,339 --> 00:14:28,560
after the first verifier message so it

384
00:14:28,560 --> 00:14:30,540
satisfies some notion of it's hidden

385
00:14:30,540 --> 00:14:33,060
there but uh resettable soundness

386
00:14:33,060 --> 00:14:34,860
and so the idea is that we kind of hard

387
00:14:34,860 --> 00:14:37,079
code some Randomness into signing Oracle

388
00:14:37,079 --> 00:14:40,380
and this the all the signing uh all the

389
00:14:40,380 --> 00:14:42,060
verifier messages in the interactive

390
00:14:42,060 --> 00:14:44,399
proof equanimous are just computed as a

391
00:14:44,399 --> 00:14:47,699
prf of the the message and we interpret

392
00:14:47,699 --> 00:14:50,160
each message now as an entire like

393
00:14:50,160 --> 00:14:54,000
partial transcript of an ipq uh run

394
00:14:54,000 --> 00:14:55,380
and then at the end we can still just

395
00:14:55,380 --> 00:14:57,480
check if this entire transcript is uh

396
00:14:57,480 --> 00:15:01,139
like is satisfied and uh send the

397
00:15:01,139 --> 00:15:03,720
security or the secret key over as as a

398
00:15:03,720 --> 00:15:04,920
signature

399
00:15:04,920 --> 00:15:06,839
uh we also gave a couple other results

400
00:15:06,839 --> 00:15:09,480
is in like the like kind of the main

401
00:15:09,480 --> 00:15:12,060
ideas that we give this uh we give this

402
00:15:12,060 --> 00:15:15,000
like kind of uh way to compress the

403
00:15:15,000 --> 00:15:17,160
number of rounds that and get an object

404
00:15:17,160 --> 00:15:18,839
like a protocol that has

405
00:15:18,839 --> 00:15:20,639
reroute like that takes only three

406
00:15:20,639 --> 00:15:22,079
rounds but get gives some Quantum

407
00:15:22,079 --> 00:15:24,300
Advantage by the end of it and we use

408
00:15:24,300 --> 00:15:26,519
that to construct uh counter examples

409
00:15:26,519 --> 00:15:27,660
for

410
00:15:27,660 --> 00:15:30,540
um you know one-time versions of these

411
00:15:30,540 --> 00:15:33,000
same Primitives uh that are quantumly

412
00:15:33,000 --> 00:15:35,040
broken in in fewer queries but we only

413
00:15:35,040 --> 00:15:36,660
get like one time security because we've

414
00:15:36,660 --> 00:15:39,480
lost this notion of resettable soundness

415
00:15:39,480 --> 00:15:41,760
I just want to uh close with a couple of

416
00:15:41,760 --> 00:15:43,800
open problems is you may have noticed at

417
00:15:43,800 --> 00:15:44,880
the beginning of the talk that we don't

418
00:15:44,880 --> 00:15:47,399
get an encounter example for CPA public

419
00:15:47,399 --> 00:15:49,320
key encryption and kind of the idea is

420
00:15:49,320 --> 00:15:52,560
that our techniques fail uh because the

421
00:15:52,560 --> 00:15:54,300
the final like the the condition of

422
00:15:54,300 --> 00:15:56,940
whether the adversary wins is publicly

423
00:15:56,940 --> 00:16:00,480
verifiable in uh in this in the CPA

424
00:16:00,480 --> 00:16:04,199
security game and our you know our three

425
00:16:04,199 --> 00:16:06,540
round protocol doesn't allow this uh

426
00:16:06,540 --> 00:16:08,339
this to work

427
00:16:08,339 --> 00:16:11,040
and the second uh open problem is what

428
00:16:11,040 --> 00:16:12,720
about like truly non-aractive Primitives

429
00:16:12,720 --> 00:16:13,980
so for instance one-way functions in

430
00:16:13,980 --> 00:16:16,440
prgs their security games don't have any

431
00:16:16,440 --> 00:16:17,880
interaction in them

432
00:16:17,880 --> 00:16:20,699
and so therefore you know there's no

433
00:16:20,699 --> 00:16:22,500
real way to see how rewinding could have

434
00:16:22,500 --> 00:16:23,880
an effect and like seemingly we would

435
00:16:23,880 --> 00:16:25,560
require some non-black box techniques

436
00:16:25,560 --> 00:16:27,180
because that's the only other place

437
00:16:27,180 --> 00:16:29,760
where we see that uh a Quant like

438
00:16:29,760 --> 00:16:31,500
reductions fail going from classical to

439
00:16:31,500 --> 00:16:35,040
Quantum and uh the recent work of

440
00:16:35,040 --> 00:16:37,980
yamakawa and zandri uh shows that there

441
00:16:37,980 --> 00:16:38,940
are counter examples for one-way

442
00:16:38,940 --> 00:16:40,500
functions in the random Oracle model but

443
00:16:40,500 --> 00:16:42,240
this is uh somehow you know

444
00:16:42,240 --> 00:16:44,040
fundamentally different

445
00:16:44,040 --> 00:16:46,620
and so here's just a summary of

446
00:16:46,620 --> 00:16:48,480
everything I've talked about but I think

447
00:16:48,480 --> 00:16:50,880
kind of the key takeaway here is that we

448
00:16:50,880 --> 00:16:52,800
just kind of this work adds more

449
00:16:52,800 --> 00:16:57,439
evidence to the claim that reduction

450
00:17:40,740 --> 00:17:44,240
the podium is muted

451
00:17:45,299 --> 00:17:49,280
yes we cannot hear you on Zoom

452
00:18:19,080 --> 00:18:21,900
we still can't hear on Zoom my apologies

453
00:18:21,900 --> 00:18:24,679
for interrupting

454
00:18:33,559 --> 00:18:37,919
how did that what okay

455
00:18:37,919 --> 00:18:38,640
um

456
00:18:38,640 --> 00:18:40,559
okay so the question was uh whether

457
00:18:40,559 --> 00:18:42,179
there's like some positive notion that

458
00:18:42,179 --> 00:18:44,160
we can think of that you know uh some

459
00:18:44,160 --> 00:18:46,440
some way to tell whether a reduction is

460
00:18:46,440 --> 00:18:48,240
post Quantum like say for sure that a

461
00:18:48,240 --> 00:18:49,620
reduction is po is like Quantum

462
00:18:49,620 --> 00:18:50,760
compatible

463
00:18:50,760 --> 00:18:53,880
and um I think there are some Notions

464
00:18:53,880 --> 00:18:56,100
that give at least like a limited class

465
00:18:56,100 --> 00:18:57,299
of reductions that we can tell they're

466
00:18:57,299 --> 00:18:59,220
post Quantum compatible

467
00:18:59,220 --> 00:19:00,840
um I don't have them off the top of my

468
00:19:00,840 --> 00:19:02,880
head but uh like in our work we don't

469
00:19:02,880 --> 00:19:05,160
like explicitly give any of these uh

470
00:19:05,160 --> 00:19:08,059
positive results

471
00:19:14,100 --> 00:19:15,960
all right so maybe I'll ask a question

472
00:19:15,960 --> 00:19:17,160
um could you say a little bit more about

473
00:19:17,160 --> 00:19:19,679
the barrier for CPA like what is the big

474
00:19:19,679 --> 00:19:22,799
deal with public clarifiability yeah so

475
00:19:22,799 --> 00:19:23,520
um

476
00:19:23,520 --> 00:19:26,400
so the idea is that like uh you know to

477
00:19:26,400 --> 00:19:29,160
tell whether

478
00:19:29,160 --> 00:19:31,280
um

479
00:19:31,380 --> 00:19:33,480
let's okay so

480
00:19:33,480 --> 00:19:35,539
um

481
00:19:37,080 --> 00:19:39,539
like there's the the Challenger in the

482
00:19:39,539 --> 00:19:41,520
CPA security game doesn't have like some

483
00:19:41,520 --> 00:19:43,080
secret state that it uses to determine

484
00:19:43,080 --> 00:19:45,780
whether the verifier has one or not and

485
00:19:45,780 --> 00:19:47,700
so and and so like it's like it's really

486
00:19:47,700 --> 00:19:49,559
like two things it's it's both the fact

487
00:19:49,559 --> 00:19:51,539
that the security game has very little

488
00:19:51,539 --> 00:19:53,460
interaction like the verifier just gets

489
00:19:53,460 --> 00:19:55,980
a a public key sends a challenge query

490
00:19:55,980 --> 00:19:59,340
and then gets back uh the the encrypted

491
00:19:59,340 --> 00:20:02,700
query like one of the two uh and so it's

492
00:20:02,700 --> 00:20:04,020
like it's like this three round protocol

493
00:20:04,020 --> 00:20:06,120
and so we need to use this uh this three

494
00:20:06,120 --> 00:20:07,080
our own construction that we have

495
00:20:07,080 --> 00:20:08,880
however

496
00:20:08,880 --> 00:20:09,960
um

497
00:20:09,960 --> 00:20:12,660
that three aren't like

498
00:20:12,660 --> 00:20:14,640
in the case of

499
00:20:14,640 --> 00:20:16,700
um

500
00:20:18,840 --> 00:20:20,039
like

501
00:20:20,039 --> 00:20:21,960
like whether the adversary has won or

502
00:20:21,960 --> 00:20:24,179
not is can be like can be verified

503
00:20:24,179 --> 00:20:26,760
simply with the public key

504
00:20:26,760 --> 00:20:29,600
and

505
00:20:29,640 --> 00:20:33,000
it's true this is true yeah and uh and

506
00:20:33,000 --> 00:20:34,559
so like and and this is not something

507
00:20:34,559 --> 00:20:36,900
that our three-round protocol is is

508
00:20:36,900 --> 00:20:40,200
capable of achieving

509
00:20:40,200 --> 00:20:42,120
so maybe it's just a quick follow-up on

510
00:20:42,120 --> 00:20:43,620
that is uh

511
00:20:43,620 --> 00:20:45,840
I guess are you saying that anytime you

512
00:20:45,840 --> 00:20:47,460
have a separation like this this gives

513
00:20:47,460 --> 00:20:49,140
you also like if you have a primitive

514
00:20:49,140 --> 00:20:51,299
security game or if you have a primitive

515
00:20:51,299 --> 00:20:53,280
with an interactive security game and um

516
00:20:53,280 --> 00:20:55,260
you have a Quantum attack and a

517
00:20:55,260 --> 00:20:57,360
classical security proof is that is that

518
00:20:57,360 --> 00:20:58,440
just an example of a proof of

519
00:20:58,440 --> 00:21:00,480
quantumness and are you saying that uh

520
00:21:00,480 --> 00:21:01,919
maybe here you'd get a new group of

521
00:21:01,919 --> 00:21:03,179
quantums that we don't know and that's

522
00:21:03,179 --> 00:21:05,220
sort of a barrier or is it just a

523
00:21:05,220 --> 00:21:08,960
barrier for for your techniques

524
00:21:09,299 --> 00:21:12,000
um sorry just um separations imply

525
00:21:12,000 --> 00:21:13,799
proofs of quantumness

526
00:21:13,799 --> 00:21:15,860
um

527
00:21:17,039 --> 00:21:19,200
yeah I think it's um

528
00:21:19,200 --> 00:21:23,580
week sense yeah at least uh and yeah and

529
00:21:23,580 --> 00:21:26,460
so so like the we only know how to get

530
00:21:26,460 --> 00:21:28,200
like these four round proof of

531
00:21:28,200 --> 00:21:30,419
continents we don't know a lower uh

532
00:21:30,419 --> 00:21:33,000
level of interaction and so the CPA

533
00:21:33,000 --> 00:21:35,100
security game is only three rounds and

534
00:21:35,100 --> 00:21:37,559
and just like the the tricks that we use

535
00:21:37,559 --> 00:21:39,900
to get into like to handle three-round

536
00:21:39,900 --> 00:21:41,880
things don't don't happen to work for a

537
00:21:41,880 --> 00:21:43,919
CPA and so it wouldn't

538
00:21:43,919 --> 00:21:47,960
yeah I would imply a stronger component

539
00:21:49,260 --> 00:21:51,059
any other questions I think we have

540
00:21:51,059 --> 00:21:53,840
another minute

541
00:22:01,400 --> 00:22:04,440
is your feeling that the the there is a

542
00:22:04,440 --> 00:22:06,000
counter example for CPA security or

543
00:22:06,000 --> 00:22:08,220
could it be possible that every you know

544
00:22:08,220 --> 00:22:12,240
CPA secure encryption scheme from lwe is

545
00:22:12,240 --> 00:22:14,159
postcarded secure

546
00:22:14,159 --> 00:22:15,539
um

547
00:22:15,539 --> 00:22:18,600
I would find it somewhat surprising if

548
00:22:18,600 --> 00:22:21,780
every uh CPA like if there wasn't a

549
00:22:21,780 --> 00:22:24,360
counter example I think but

550
00:22:24,360 --> 00:22:27,480
uh yeah that's really kind of just into

551
00:22:27,480 --> 00:22:28,620
it I mean

552
00:22:28,620 --> 00:22:30,360
yeah that's really just

553
00:22:30,360 --> 00:22:34,860
not based on much okay thanks

554
00:22:48,020 --> 00:22:51,299
does using multi-challenge CPA make any

555
00:22:51,299 --> 00:22:53,280
difference you you get more rounds there

556
00:22:53,280 --> 00:22:54,960
right

557
00:22:54,960 --> 00:22:56,340
um

558
00:22:56,340 --> 00:23:00,000
I'm not super familiar with the security

559
00:23:00,000 --> 00:23:03,419
game there and like how it works

560
00:23:03,419 --> 00:23:06,260
um but I guess like

561
00:23:06,559 --> 00:23:09,419
conceivably if just like

562
00:23:09,419 --> 00:23:11,100
uh if you have more rounds of

563
00:23:11,100 --> 00:23:12,600
interaction like we actually only need

564
00:23:12,600 --> 00:23:14,760
you know just to embed this four round

565
00:23:14,760 --> 00:23:16,799
perfect monitors and so if you have at

566
00:23:16,799 --> 00:23:18,960
least four rounds of interaction I think

567
00:23:18,960 --> 00:23:22,140
should be okay but I don't I don't know

568
00:23:22,140 --> 00:23:24,980
that's super thanks

569
00:23:27,360 --> 00:23:28,559
all right thank you let's thank the

570
00:23:28,559 --> 00:23:30,980
speaker again

571
00:23:32,460 --> 00:23:34,640
thank you

572
00:25:16,740 --> 00:25:19,740
hello hello yeah um all right so up next

573
00:25:19,740 --> 00:25:21,960
we have a usual and Huang who tells us

574
00:25:21,960 --> 00:25:23,220
about adaptive versus static

575
00:25:23,220 --> 00:25:24,960
multi-oracle algorithms and Quantum

576
00:25:24,960 --> 00:25:27,720
security of a split key prf uh thanks

577
00:25:27,720 --> 00:25:29,279
for the introduction

578
00:25:29,279 --> 00:25:34,279
uh this is don't work with sir uh

579
00:25:36,600 --> 00:25:38,760
first I'm going to introduce the notion

580
00:25:38,760 --> 00:25:40,860
of adaptive and static multi-oracle

581
00:25:40,860 --> 00:25:42,179
algorithm

582
00:25:42,179 --> 00:25:44,100
and Oracle algorithm is an algorithm

583
00:25:44,100 --> 00:25:46,440
occurring a possibly randomized function

584
00:25:46,440 --> 00:25:48,799
for free and here we are having a

585
00:25:48,799 --> 00:25:50,880
additional assumption that there is a

586
00:25:50,880 --> 00:25:52,740
fixed upper bound Q of the number of

587
00:25:52,740 --> 00:25:54,600
queries at our post

588
00:25:54,600 --> 00:25:57,000
you can extend this to the multi-alco

589
00:25:57,000 --> 00:25:59,460
algorithm where an algorithm can make

590
00:25:59,460 --> 00:26:01,620
query to multiple functions

591
00:26:01,620 --> 00:26:04,740
and likewise we have assumption on

592
00:26:04,740 --> 00:26:07,500
having a fixed upper Bound for each

593
00:26:07,500 --> 00:26:09,539
respected number of queries to every

594
00:26:09,539 --> 00:26:11,820
oracles

595
00:26:11,820 --> 00:26:14,400
within those multi Oracle algories and

596
00:26:14,400 --> 00:26:16,980
we also consider a restricted class

597
00:26:16,980 --> 00:26:17,880
called

598
00:26:17,880 --> 00:26:20,760
static multi-oracle algorithm which are

599
00:26:20,760 --> 00:26:25,279
those with predetermined querying order

600
00:26:26,600 --> 00:26:29,159
so we consider both classical and

601
00:26:29,159 --> 00:26:32,419
content algorithm in the content case

602
00:26:32,419 --> 00:26:35,039
the query may be performed in

603
00:26:35,039 --> 00:26:37,140
superposition

604
00:26:37,140 --> 00:26:39,900
in contrast an Adaptive algorithm can

605
00:26:39,900 --> 00:26:43,140
make a query decide which Oracle to

606
00:26:43,140 --> 00:26:44,880
query depending on its previous querying

607
00:26:44,880 --> 00:26:47,179
output

608
00:26:47,880 --> 00:26:51,240
so why do we care about static algorithm

609
00:26:51,240 --> 00:26:53,520
first it is easier for analysis and

610
00:26:53,520 --> 00:26:55,799
sometimes it gives better bound

611
00:26:55,799 --> 00:26:58,020
but we stress also that in general one

612
00:26:58,020 --> 00:27:00,179
cannot assume that algorithm is a static

613
00:27:00,179 --> 00:27:02,659
algorithm

614
00:27:03,539 --> 00:27:07,760
so here are some situation cryptographic

615
00:27:07,760 --> 00:27:10,799
setting where multi-oracle algorithms

616
00:27:10,799 --> 00:27:13,760
are in presence

617
00:27:14,279 --> 00:27:16,740
so our results consists of two parts in

618
00:27:16,740 --> 00:27:18,600
the first part we give a generic

619
00:27:18,600 --> 00:27:21,480
compiler transforming any adaptive

620
00:27:21,480 --> 00:27:22,940
algorithm

621
00:27:22,940 --> 00:27:25,799
builded classical Quantum to a static

622
00:27:25,799 --> 00:27:28,500
one and with only a mile blow up on its

623
00:27:28,500 --> 00:27:30,840
query complexity

624
00:27:30,840 --> 00:27:33,539
and more concretely if an Adaptive

625
00:27:33,539 --> 00:27:36,240
algorithm makes q1 to q and respective

626
00:27:36,240 --> 00:27:38,100
queries to the workers

627
00:27:38,100 --> 00:27:41,220
then after compilation it makes n times

628
00:27:41,220 --> 00:27:43,919
q1 to n times q and reset respective

629
00:27:43,919 --> 00:27:46,520
queries only

630
00:27:46,679 --> 00:27:49,980
uh with this we can simplify existing

631
00:27:49,980 --> 00:27:54,919
result but also enhanced bounds

632
00:27:56,100 --> 00:27:59,220
in the second part we show the content

633
00:27:59,220 --> 00:28:01,440
security of a particularly efficient

634
00:28:01,440 --> 00:28:03,360
pre-suring function constructed by

635
00:28:03,360 --> 00:28:06,779
glycon plural and pattern in 2018

636
00:28:06,779 --> 00:28:09,120
where the security is analyzed in the

637
00:28:09,120 --> 00:28:11,220
so-called contouring Oracle model

638
00:28:11,220 --> 00:28:13,740
consequently an efficient cam combiner

639
00:28:13,740 --> 00:28:15,600
is content secure

640
00:28:15,600 --> 00:28:18,179
and since our analysis crucial relies on

641
00:28:18,179 --> 00:28:20,820
the compiler it can also be regarded as

642
00:28:20,820 --> 00:28:24,240
the main application of our compiler

643
00:28:24,240 --> 00:28:26,460
so moving on to the compiler

644
00:28:26,460 --> 00:28:29,880
uh our compiler works by running an

645
00:28:29,880 --> 00:28:32,940
interactive algorithm B between the

646
00:28:32,940 --> 00:28:35,159
Adaptive algorithm a and the oracles by

647
00:28:35,159 --> 00:28:39,020
sort of rerouting the queries of a

648
00:28:39,480 --> 00:28:42,059
let's consider a naive compiler where

649
00:28:42,059 --> 00:28:44,960
when there are only two oracles

650
00:28:44,960 --> 00:28:47,820
which basically just interleaving the

651
00:28:47,820 --> 00:28:50,940
queries to o1 and O2 for q1 plus Q2

652
00:28:50,940 --> 00:28:53,039
times

653
00:28:53,039 --> 00:28:56,820
this naive compiled algorithm makes q1

654
00:28:56,820 --> 00:28:59,640
plus Q two queries to both oracles

655
00:28:59,640 --> 00:29:02,580
where q1 Q2 are the queries to o102

656
00:29:02,580 --> 00:29:05,480
originally

657
00:29:06,120 --> 00:29:08,880
but what if q1 is Q2 Square then in this

658
00:29:08,880 --> 00:29:11,340
case it makes roughly q1 queries to both

659
00:29:11,340 --> 00:29:15,059
oracles which are a lot bigger than Q2

660
00:29:15,059 --> 00:29:17,880
this is a undesirable blow up on the

661
00:29:17,880 --> 00:29:19,740
query complexity because we actually

662
00:29:19,740 --> 00:29:21,960
want to have roughly q1 queries to o1

663
00:29:21,960 --> 00:29:25,940
and roughly Q2 queries to O2

664
00:29:26,159 --> 00:29:29,159
I can put this situation into a more

665
00:29:29,159 --> 00:29:32,640
abstract formulation namely the querying

666
00:29:32,640 --> 00:29:36,960
order after compilation string s one two

667
00:29:36,960 --> 00:29:40,140
one two one two etc for q1 plus Q2 times

668
00:29:40,140 --> 00:29:42,600
is a super sequence of every string S

669
00:29:42,600 --> 00:29:44,340
Prime having the so-called

670
00:29:44,340 --> 00:29:47,700
characteristic q1 Q2 where we are using

671
00:29:47,700 --> 00:29:49,559
the terminology that the string S Prime

672
00:29:49,559 --> 00:29:52,500
having characteristic q1 Q2 if every

673
00:29:52,500 --> 00:29:56,340
symbol Sigma occurs in s prime or at

674
00:29:56,340 --> 00:29:59,399
most Q Sigma times

675
00:29:59,399 --> 00:30:02,100
the problem of naive construction is

676
00:30:02,100 --> 00:30:04,080
then the string s is now having

677
00:30:04,080 --> 00:30:06,419
characteristic q1 plus Q2 for both

678
00:30:06,419 --> 00:30:08,880
symbols

679
00:30:08,880 --> 00:30:12,440
Now goal is to find uh such as string s

680
00:30:12,440 --> 00:30:15,480
in say characteristic 2 times q1 and 2

681
00:30:15,480 --> 00:30:17,340
times Q2

682
00:30:17,340 --> 00:30:20,460
looking at some example when q1 Q2 R1

683
00:30:20,460 --> 00:30:24,600
and 3 then we can choose this S as shown

684
00:30:24,600 --> 00:30:25,679
here

685
00:30:25,679 --> 00:30:28,500
indeed it is having characteristics no

686
00:30:28,500 --> 00:30:32,039
more than 2 times q1 and 2 times Q2

687
00:30:32,039 --> 00:30:35,700
and indeed it contains every such uh

688
00:30:35,700 --> 00:30:39,179
string as Prime as a subsequence

689
00:30:39,179 --> 00:30:42,000
we also know that the string S Prime may

690
00:30:42,000 --> 00:30:44,100
be non-consecutively contained in string

691
00:30:44,100 --> 00:30:47,760
as as a subsequence

692
00:30:47,760 --> 00:30:50,399
yeah more generally we can show that

693
00:30:50,399 --> 00:30:52,440
there is a strain s having

694
00:30:52,440 --> 00:30:54,840
characteristic n times q1 to n times q n

695
00:30:54,840 --> 00:30:57,779
such that every string S Prime having

696
00:30:57,779 --> 00:31:00,899
this characteristic q1 to qn is the

697
00:31:00,899 --> 00:31:02,820
subsequence of s

698
00:31:02,820 --> 00:31:05,940
and furthermore uh this training s is

699
00:31:05,940 --> 00:31:08,700
sufficient to compute

700
00:31:08,700 --> 00:31:11,159
so how do we construct this s the idea

701
00:31:11,159 --> 00:31:13,620
is quite simple we distribute the symbol

702
00:31:13,620 --> 00:31:15,960
every single Sigma evenly within the

703
00:31:15,960 --> 00:31:18,240
interval 0 to n and collect them from

704
00:31:18,240 --> 00:31:19,440
left to right

705
00:31:19,440 --> 00:31:22,260
for this simple Sigma we

706
00:31:22,260 --> 00:31:25,380
distribute them with frequency Q Sigma

707
00:31:25,380 --> 00:31:29,399
so we put one at places one over Q one

708
00:31:29,399 --> 00:31:32,340
to over Q one Etc and do the same thing

709
00:31:32,340 --> 00:31:33,419
for two

710
00:31:33,419 --> 00:31:35,820
and then we collect those one by one

711
00:31:35,820 --> 00:31:38,460
from left to right in case there are two

712
00:31:38,460 --> 00:31:40,919
symbols located at the same place we

713
00:31:40,919 --> 00:31:44,480
just collect them at arbitrary order

714
00:31:44,520 --> 00:31:45,960
and we do so

715
00:31:45,960 --> 00:31:49,260
until reaching the time and

716
00:31:49,260 --> 00:31:52,020
and that's our construction for s

717
00:31:52,020 --> 00:31:54,360
but because of the time limit uh please

718
00:31:54,360 --> 00:31:57,000
look at our whole paper to see why this

719
00:31:57,000 --> 00:31:59,220
s works but this is a very simple

720
00:31:59,220 --> 00:32:01,820
argument

721
00:32:02,159 --> 00:32:05,460
moving on to the next we are going to

722
00:32:05,460 --> 00:32:07,080
show content security of a species

723
00:32:07,080 --> 00:32:10,020
learning function but what is a streaky

724
00:32:10,020 --> 00:32:12,179
student function it is a function with

725
00:32:12,179 --> 00:32:14,580
many keys and the inputs such that for

726
00:32:14,580 --> 00:32:17,760
every tki it is it it is a pseudo random

727
00:32:17,760 --> 00:32:18,720
function

728
00:32:18,720 --> 00:32:20,940
subject to some minor technical

729
00:32:20,940 --> 00:32:22,140
constraint

730
00:32:22,140 --> 00:32:23,760
and we care about this three piece

731
00:32:23,760 --> 00:32:25,620
learning function because it gives rise

732
00:32:25,620 --> 00:32:27,779
to a cam combiner which combines

733
00:32:27,779 --> 00:32:30,539
multiple games into one that is secure

734
00:32:30,539 --> 00:32:33,299
as long as at least one of the component

735
00:32:33,299 --> 00:32:36,200
came is secure

736
00:32:36,960 --> 00:32:40,679
an efficient hash based instantiation by

737
00:32:40,679 --> 00:32:43,919
uh gaikon Guru and pattern

738
00:32:43,919 --> 00:32:46,740
is already proven classically secure but

739
00:32:46,740 --> 00:32:50,940
content security is previously unknown

740
00:32:50,940 --> 00:32:54,480
and as our compiler as our main

741
00:32:54,480 --> 00:32:56,820
application of compiler we show content

742
00:32:56,820 --> 00:33:00,179
security of this instantiation

743
00:33:00,179 --> 00:33:02,760
The Proven strategy is sort of a hybrid

744
00:33:02,760 --> 00:33:04,919
argument where we start with an initial

745
00:33:04,919 --> 00:33:08,460
querying pattern involving the oracles H

746
00:33:08,460 --> 00:33:11,039
Prime and auxiliary Oracle H Prime and

747
00:33:11,039 --> 00:33:13,559
also evaluation Oracle F and from left

748
00:33:13,559 --> 00:33:16,200
to right we replace every H Prime to H

749
00:33:16,200 --> 00:33:19,260
and every F to R where R is a random

750
00:33:19,260 --> 00:33:20,880
function

751
00:33:20,880 --> 00:33:24,179
let's look at the loss for replacing H

752
00:33:24,179 --> 00:33:26,220
Prime to H

753
00:33:26,220 --> 00:33:27,320
okay

754
00:33:27,320 --> 00:33:30,600
we're replacing a block of H Prime to H

755
00:33:30,600 --> 00:33:33,659
there the security loss is kind of

756
00:33:33,659 --> 00:33:37,980
proportional to the block size qhi

757
00:33:38,820 --> 00:33:41,820
and summing up those we get a security

758
00:33:41,820 --> 00:33:44,039
laws presented here

759
00:33:44,039 --> 00:33:47,220
without any compilation the best we can

760
00:33:47,220 --> 00:33:49,140
say is the block size is no bigger than

761
00:33:49,140 --> 00:33:52,620
qh but there are roughly two F such

762
00:33:52,620 --> 00:33:55,620
blocks so we are having a qf linear blow

763
00:33:55,620 --> 00:33:58,260
up on the security loss

764
00:33:58,260 --> 00:34:01,019
with naive compiler as mentioned earlier

765
00:34:01,019 --> 00:34:04,019
we are having the sum of the block size

766
00:34:04,019 --> 00:34:07,200
no bigger than qh plus qf and the same

767
00:34:07,200 --> 00:34:09,980
sort of blow up on qf

768
00:34:09,980 --> 00:34:13,800
in typical cases in typical cases uh qh

769
00:34:13,800 --> 00:34:16,379
is a lot bigger than qf so this is

770
00:34:16,379 --> 00:34:20,219
actually also an unwanted uh blow up on

771
00:34:20,219 --> 00:34:22,320
the security loss

772
00:34:22,320 --> 00:34:24,540
but finally if you use our compiler then

773
00:34:24,540 --> 00:34:27,239
we can say that the sum of the box sizes

774
00:34:27,239 --> 00:34:30,000
is no bigger than 2 times q h likewise

775
00:34:30,000 --> 00:34:32,520
we only have a vector to blow up

776
00:34:32,520 --> 00:34:36,119
and on qf

777
00:34:36,119 --> 00:34:38,159
this gives only a constant blow up on

778
00:34:38,159 --> 00:34:39,839
the security loss

779
00:34:39,839 --> 00:34:42,179
and so indeed our proof crucially relies

780
00:34:42,179 --> 00:34:45,418
relies on the compiler

781
00:34:45,418 --> 00:34:48,239
finally let's give a brief summary

782
00:34:48,239 --> 00:34:50,639
our results consist of two parts in the

783
00:34:50,639 --> 00:34:52,800
first part we give a generic compiler

784
00:34:52,800 --> 00:34:55,918
transforming any adaptive algorithm to a

785
00:34:55,918 --> 00:34:58,920
static one with only like end times flow

786
00:34:58,920 --> 00:35:02,339
up on each respective queries

787
00:35:02,339 --> 00:35:04,500
and this allows us to simplify existing

788
00:35:04,500 --> 00:35:07,140
results but also obtaining enhanced

789
00:35:07,140 --> 00:35:08,339
grounds

790
00:35:08,339 --> 00:35:10,800
people in the second part we give the

791
00:35:10,800 --> 00:35:13,980
content security of the hash based split

792
00:35:13,980 --> 00:35:16,380
instrument function and consequently

793
00:35:16,380 --> 00:35:20,040
this the resulting cam combiner using

794
00:35:20,040 --> 00:35:22,380
this F this link is random function is

795
00:35:22,380 --> 00:35:25,040
content secure

796
00:35:25,500 --> 00:35:27,720
and the takeaway is if

797
00:35:27,720 --> 00:35:29,700
for the future you are dealing with

798
00:35:29,700 --> 00:35:31,920
adaptive adversary just use our compiler

799
00:35:31,920 --> 00:35:34,260
to make your life easier

800
00:35:34,260 --> 00:35:36,599
that's it uh please look at our paper

801
00:35:36,599 --> 00:35:39,320
for more detail

802
00:35:45,780 --> 00:35:47,220
so we have time for probably two

803
00:35:47,220 --> 00:35:49,459
questions

804
00:35:55,920 --> 00:35:58,579
foreign

805
00:36:00,920 --> 00:36:04,320
do you have any like a lower Bound for

806
00:36:04,320 --> 00:36:07,320
the number of queries you need in the

807
00:36:07,320 --> 00:36:10,560
compiler like is your compiler optimal

808
00:36:10,560 --> 00:36:14,099
or how far from it okay uh so the

809
00:36:14,099 --> 00:36:16,859
question is about optimality of our

810
00:36:16,859 --> 00:36:19,740
compiler uh that's a good question

811
00:36:19,740 --> 00:36:23,820
indeed it's not optimal because one can

812
00:36:23,820 --> 00:36:24,780
always

813
00:36:24,780 --> 00:36:29,339
uh but removing one symbol uh one less

814
00:36:29,339 --> 00:36:32,579
symbol from the compile string but we

815
00:36:32,579 --> 00:36:35,720
also expect this compiler to be rather

816
00:36:35,720 --> 00:36:39,240
optimal whatever that means but also

817
00:36:39,240 --> 00:36:41,760
like we don't have a lower bound so that

818
00:36:41,760 --> 00:36:44,839
would be an open problem

819
00:36:54,720 --> 00:36:56,640
so maybe I'll ask a question

820
00:36:56,640 --> 00:36:59,220
um is it meaningful to consider uh

821
00:36:59,220 --> 00:37:03,119
Quantum algorithms where they um they

822
00:37:03,119 --> 00:37:04,560
they like query multiple oracles into

823
00:37:04,560 --> 00:37:06,300
positions and if you have an index that

824
00:37:06,300 --> 00:37:09,240
like a Quantum Index right that uh

825
00:37:09,240 --> 00:37:10,740
controlled on which they query a

826
00:37:10,740 --> 00:37:12,240
particular Oracle like is that something

827
00:37:12,240 --> 00:37:14,460
that is Meaningful to consider and do

828
00:37:14,460 --> 00:37:15,599
you think your results might extend to

829
00:37:15,599 --> 00:37:18,660
that setting uh yeah we we also think

830
00:37:18,660 --> 00:37:22,619
about this question earlier um but sort

831
00:37:22,619 --> 00:37:24,900
of one immediate question we encounter

832
00:37:24,900 --> 00:37:27,780
is that we cannot even Define what's the

833
00:37:27,780 --> 00:37:30,980
current complexity for each individual

834
00:37:30,980 --> 00:37:34,380
Oracle because now we sort of care uh

835
00:37:34,380 --> 00:37:36,960
different Oracle with different

836
00:37:36,960 --> 00:37:38,640
number of queries

837
00:37:38,640 --> 00:37:41,820
yes so if you query this Oracle but then

838
00:37:41,820 --> 00:37:43,980
with the second Oracle in superposition

839
00:37:43,980 --> 00:37:48,240
then uh it will be an immediate first

840
00:37:48,240 --> 00:37:53,118
question what we actually mean so

841
00:37:57,359 --> 00:37:58,440
yeah all right let's take this video

842
00:37:58,440 --> 00:38:00,660
again

843
00:38:00,660 --> 00:38:03,440
foreign

844
00:38:43,500 --> 00:38:45,920
support

845
00:38:56,700 --> 00:38:58,740
all right so up next we have sungun Lee

846
00:38:58,740 --> 00:38:59,760
who's going to tell us about the

847
00:38:59,760 --> 00:39:01,619
parallel reverse pebbling game analyzing

848
00:39:01,619 --> 00:39:04,619
the post Quantum security of imhfs

849
00:39:04,619 --> 00:39:06,300
all right uh thanks for the introduction

850
00:39:06,300 --> 00:39:07,800
I'm excited to tell you about the

851
00:39:07,800 --> 00:39:10,020
reversible uh building game this is a

852
00:39:10,020 --> 00:39:12,060
joint work with Jeremiah blocky and

853
00:39:12,060 --> 00:39:14,099
Blake Coleman

854
00:39:14,099 --> 00:39:16,200
so in this talk we'll be going to

855
00:39:16,200 --> 00:39:18,180
consider the problem of quantum

856
00:39:18,180 --> 00:39:20,460
pre-image attacks so in this attack we

857
00:39:20,460 --> 00:39:22,500
are given a function f and our Target up

858
00:39:22,500 --> 00:39:25,260
Y and we want to find an input X such

859
00:39:25,260 --> 00:39:27,480
that Y is equal to f x

860
00:39:27,480 --> 00:39:29,579
and we're going to consider the setting

861
00:39:29,579 --> 00:39:31,619
where we only have a black box access to

862
00:39:31,619 --> 00:39:33,300
the function app

863
00:39:33,300 --> 00:39:35,820
so classically we need only two to the

864
00:39:35,820 --> 00:39:37,859
end we need at least to the end Black

865
00:39:37,859 --> 00:39:39,780
Box queries to the function f to solve

866
00:39:39,780 --> 00:39:40,800
this problem

867
00:39:40,800 --> 00:39:43,320
uh but in Quantum Computing we have a

868
00:39:43,320 --> 00:39:45,060
famous algorithm called Gerber's

869
00:39:45,060 --> 00:39:47,880
algorithm which only requires uh at most

870
00:39:47,880 --> 00:39:49,140
two to the universe two black box

871
00:39:49,140 --> 00:39:50,820
queries to the function f which is a

872
00:39:50,820 --> 00:39:53,099
substantial speed up and actually this

873
00:39:53,099 --> 00:39:54,780
is typed

874
00:39:54,780 --> 00:39:56,579
um so we want to characterize the full

875
00:39:56,579 --> 00:40:00,000
cost of a Quantum premature tag so I

876
00:40:00,000 --> 00:40:02,640
mean by the full cost uh by uh it is

877
00:40:02,640 --> 00:40:04,920
defined as the space-time cost of a

878
00:40:04,920 --> 00:40:07,859
Quantum circuit C uh that uh mine is a

879
00:40:07,859 --> 00:40:09,780
pretty image of the functional so this

880
00:40:09,780 --> 00:40:11,640
is defined as the the width of the

881
00:40:11,640 --> 00:40:13,619
circuit multiplied by the depth of the

882
00:40:13,619 --> 00:40:14,700
circuit

883
00:40:14,700 --> 00:40:17,700
so given a full like a Grover circuit uh

884
00:40:17,700 --> 00:40:21,180
we take as input Quantum circuit CF

885
00:40:21,180 --> 00:40:24,780
which evaluates the function f so

886
00:40:24,780 --> 00:40:26,599
and then it calls the function

887
00:40:26,599 --> 00:40:29,640
sequentially roughly to the N over two

888
00:40:29,640 --> 00:40:33,000
times so the full space time cost of the

889
00:40:33,000 --> 00:40:36,000
attack is going to be W Times D times 2

890
00:40:36,000 --> 00:40:38,400
to the universe 2.

891
00:40:38,400 --> 00:40:41,040
so we can ask another question so how do

892
00:40:41,040 --> 00:40:43,140
we characterize the space-time cost of a

893
00:40:43,140 --> 00:40:45,480
Quantum pre and visual attack and to do

894
00:40:45,480 --> 00:40:47,880
so we need to find the space-time cost

895
00:40:47,880 --> 00:40:50,460
of a Quantum circuit CF so the next

896
00:40:50,460 --> 00:40:52,440
question is uh can we build the function

897
00:40:52,440 --> 00:40:55,140
f with high SpaceTime cost to resist

898
00:40:55,140 --> 00:40:57,480
Quantum pre-image attacks a natural

899
00:40:57,480 --> 00:41:00,480
candidate here is a something called the

900
00:41:00,480 --> 00:41:02,940
memberhead functions which is used in uh

901
00:41:02,940 --> 00:41:05,460
password hashing

902
00:41:05,460 --> 00:41:08,460
so basically uh memory card function is

903
00:41:08,460 --> 00:41:10,320
a function that requires a large amount

904
00:41:10,320 --> 00:41:13,320
of space to compute and here we will

905
00:41:13,320 --> 00:41:14,880
consider the special type of member head

906
00:41:14,880 --> 00:41:16,320
functions called the data independent

907
00:41:16,320 --> 00:41:19,079
memory functions which is useful in uh

908
00:41:19,079 --> 00:41:23,520
to because it is a resistant in to a

909
00:41:23,520 --> 00:41:26,040
side Channel attacks so a memory

910
00:41:26,040 --> 00:41:29,579
function is defined by graph G which

911
00:41:29,579 --> 00:41:33,180
encodes data dependencies and a hash

912
00:41:33,180 --> 00:41:35,099
function H which is uh usually modeled

913
00:41:35,099 --> 00:41:37,380
as a random Oracle and the function is

914
00:41:37,380 --> 00:41:40,920
computed by um evaluating labels uh

915
00:41:40,920 --> 00:41:44,579
where each node here is um telling you

916
00:41:44,579 --> 00:41:47,040
the intermediate data labels which is

917
00:41:47,040 --> 00:41:49,680
produced but during the computation

918
00:41:49,680 --> 00:41:52,859
so classically to evaluate an imagef we

919
00:41:52,859 --> 00:41:54,540
use oftentimes use the language of the

920
00:41:54,540 --> 00:41:56,640
black bubbling game we have two Simple

921
00:41:56,640 --> 00:41:59,820
Rules we want to place a node at the end

922
00:41:59,820 --> 00:42:02,099
of the target note and then we can only

923
00:42:02,099 --> 00:42:04,440
place a new Pebble if all of the parents

924
00:42:04,440 --> 00:42:07,740
are previously pebbled so for example we

925
00:42:07,740 --> 00:42:09,960
can start placing a pebble on node one

926
00:42:09,960 --> 00:42:12,720
and node2 and now we have all the

927
00:42:12,720 --> 00:42:15,480
dependent data values to evaluate node

928
00:42:15,480 --> 00:42:17,280
three so we can place a pebble in node

929
00:42:17,280 --> 00:42:19,740
three and we can just discard a couple

930
00:42:19,740 --> 00:42:21,060
from node one

931
00:42:21,060 --> 00:42:23,640
to free up space and then finally we can

932
00:42:23,640 --> 00:42:25,800
place a pebbler note 4 and we can

933
00:42:25,800 --> 00:42:27,480
discard Pebbles from node two and three

934
00:42:27,480 --> 00:42:30,180
to save space

935
00:42:30,180 --> 00:42:32,520
so the space-time complexity is defined

936
00:42:32,520 --> 00:42:35,940
similarly so for above example we never

937
00:42:35,940 --> 00:42:38,520
used more than two Pebbles um

938
00:42:38,520 --> 00:42:41,339
during the computation we have total

939
00:42:41,339 --> 00:42:43,380
four pebbling rounds so the space time

940
00:42:43,380 --> 00:42:45,900
cost is four times two which is eight

941
00:42:45,900 --> 00:42:48,300
so back to our first question we can ask

942
00:42:48,300 --> 00:42:50,579
uh so we have a black pebbling game this

943
00:42:50,579 --> 00:42:53,040
is a useful metric so can we use this

944
00:42:53,040 --> 00:42:55,440
black pebbling to analyze the space-time

945
00:42:55,440 --> 00:42:57,540
cost of a Quantum circuit so

946
00:42:57,540 --> 00:42:59,700
unfortunately the answer is uh not so

947
00:42:59,700 --> 00:43:01,740
simple and the reason is that the

948
00:43:01,740 --> 00:43:04,500
quantum circuits must be reversible but

949
00:43:04,500 --> 00:43:06,240
this considering this particular

950
00:43:06,240 --> 00:43:08,940
transition from two three to four this

951
00:43:08,940 --> 00:43:10,800
is not a reversible transition because

952
00:43:10,800 --> 00:43:13,079
uh deleting things into Quantum in the

953
00:43:13,079 --> 00:43:15,839
market model is not that simple so we

954
00:43:15,839 --> 00:43:17,460
can delete things in the quantum random

955
00:43:17,460 --> 00:43:20,280
work model by using on computation like

956
00:43:20,280 --> 00:43:24,480
this so this is a useful um two but one

957
00:43:24,480 --> 00:43:26,220
thing to keep in mind is that to remove

958
00:43:26,220 --> 00:43:28,500
a pebble from Note 3 using on

959
00:43:28,500 --> 00:43:31,440
computation we need to have the parents

960
00:43:31,440 --> 00:43:34,700
of the node in memory

961
00:43:35,040 --> 00:43:37,980
so um so the prior worker introduced a

962
00:43:37,980 --> 00:43:40,920
sequential reversible computation and

963
00:43:40,920 --> 00:43:44,280
reversible pebbling game to remedy this

964
00:43:44,280 --> 00:43:46,440
issue and they analyze the space-time

965
00:43:46,440 --> 00:43:49,079
trade-offs in Quantum computing so one

966
00:43:49,079 --> 00:43:51,300
might uh Wonder can we just use this

967
00:43:51,300 --> 00:43:53,700
sequential reversible pebbling game

968
00:43:53,700 --> 00:43:55,380
um to characterize the space-time cost

969
00:43:55,380 --> 00:43:58,200
of our Quantum attack but unfortunately

970
00:43:58,200 --> 00:44:00,900
the answer is still not suitable due to

971
00:44:00,900 --> 00:44:03,180
the word sequential because the circuit

972
00:44:03,180 --> 00:44:05,400
can evaluate the hash function H in

973
00:44:05,400 --> 00:44:08,040
parallel so for example we have this

974
00:44:08,040 --> 00:44:10,980
graph and this is the our sequential

975
00:44:10,980 --> 00:44:13,680
pebbling and we can notice that the

976
00:44:13,680 --> 00:44:16,560
number of steps is uh number of steps is

977
00:44:16,560 --> 00:44:19,020
a linear to the size of this graph so

978
00:44:19,020 --> 00:44:21,960
the space time cost is relatively High

979
00:44:21,960 --> 00:44:24,240
but in the parallel coupling uh we can

980
00:44:24,240 --> 00:44:26,940
finish by really a short step only using

981
00:44:26,940 --> 00:44:29,940
login steps so the space-time costs can

982
00:44:29,940 --> 00:44:32,520
be decreased because the time cost is

983
00:44:32,520 --> 00:44:36,119
decreased from N2 log n

984
00:44:36,119 --> 00:44:38,339
so uh coming back to our first question

985
00:44:38,339 --> 00:44:40,560
how to characterize the space-time cost

986
00:44:40,560 --> 00:44:42,540
of a Quantum previous pre-image attack

987
00:44:42,540 --> 00:44:46,079
against the imhfs and we give the

988
00:44:46,079 --> 00:44:48,300
partial answer by introducing the

989
00:44:48,300 --> 00:44:50,640
parallel reversible pebbling game and by

990
00:44:50,640 --> 00:44:53,339
studying some attacks against imhfs in

991
00:44:53,339 --> 00:44:55,319
this heavily model

992
00:44:55,319 --> 00:44:58,140
so a parallel reversible pedaling is

993
00:44:58,140 --> 00:45:00,780
very similar to a classical uh bubbling

994
00:45:00,780 --> 00:45:04,260
with two additional rules the first rule

995
00:45:04,260 --> 00:45:06,780
is Pebble can be deleted only if all of

996
00:45:06,780 --> 00:45:09,359
its parents were previously pebbled and

997
00:45:09,359 --> 00:45:12,060
then if we if a pebble was used to

998
00:45:12,060 --> 00:45:14,460
generate the new Pebbles uh we have to

999
00:45:14,460 --> 00:45:17,460
chip the pebble so this second rule is

1000
00:45:17,460 --> 00:45:19,140
to ensure that the circuit is actually

1001
00:45:19,140 --> 00:45:21,240
uh reversible

1002
00:45:21,240 --> 00:45:24,119
so we want to compare between the

1003
00:45:24,119 --> 00:45:25,980
classical and reversible pebbling so

1004
00:45:25,980 --> 00:45:28,260
here's an example of a classical publing

1005
00:45:28,260 --> 00:45:30,420
this is a legal classical publing but if

1006
00:45:30,420 --> 00:45:32,640
we look at carefully there are a number

1007
00:45:32,640 --> 00:45:34,680
of rounds which are violated our

1008
00:45:34,680 --> 00:45:36,960
reversible coupling rules

1009
00:45:36,960 --> 00:45:40,380
for example um nose in the red boxes are

1010
00:45:40,380 --> 00:45:42,180
this is illegal in a reversible coupling

1011
00:45:42,180 --> 00:45:45,060
because we cannot remove Pebbles um

1012
00:45:45,060 --> 00:45:47,579
while the while its parents were not all

1013
00:45:47,579 --> 00:45:50,220
pebbled and um

1014
00:45:50,220 --> 00:45:52,680
this nodes in the blue box uh they're

1015
00:45:52,680 --> 00:45:54,839
they're illegal in a reversible coupling

1016
00:45:54,839 --> 00:45:57,720
because they were actively used to place

1017
00:45:57,720 --> 00:46:00,000
a new Pebble on the three and five

1018
00:46:00,000 --> 00:46:03,240
respectively so this is our reversible

1019
00:46:03,240 --> 00:46:04,560
pebbling

1020
00:46:04,560 --> 00:46:06,960
so we can observe that we need to

1021
00:46:06,960 --> 00:46:08,760
actually keep those extra pebbles in

1022
00:46:08,760 --> 00:46:10,940
round

1023
00:46:10,980 --> 00:46:13,859
so we study uh several reversible

1024
00:46:13,859 --> 00:46:16,079
pampling attacks the first attack is on

1025
00:46:16,079 --> 00:46:19,140
a line graph and uh one reason why we

1026
00:46:19,140 --> 00:46:21,359
care about land graph is because we have

1027
00:46:21,359 --> 00:46:23,339
several widely deployed hash functions

1028
00:46:23,339 --> 00:46:25,920
which can be characterized as a line

1029
00:46:25,920 --> 00:46:26,940
graph

1030
00:46:26,940 --> 00:46:29,579
so we can ask if a line graph is

1031
00:46:29,579 --> 00:46:32,640
resistant to Quantum premature attacks

1032
00:46:32,640 --> 00:46:35,040
classically this is Trivial because we

1033
00:46:35,040 --> 00:46:37,020
have a really simple coupling which is

1034
00:46:37,020 --> 00:46:40,079
space time costs only n so it's not

1035
00:46:40,079 --> 00:46:42,960
resistant but when it comes to Quantum

1036
00:46:42,960 --> 00:46:45,660
Computing it is not very trivial because

1037
00:46:45,660 --> 00:46:48,000
we cannot delete just Pebbles wherever

1038
00:46:48,000 --> 00:46:51,420
we want so we can come up with a naive

1039
00:46:51,420 --> 00:46:53,520
reversible coupling which is just walk a

1040
00:46:53,520 --> 00:46:56,220
pebble and no no deletion which is

1041
00:46:56,220 --> 00:46:59,160
space-time close to N square but it is

1042
00:46:59,160 --> 00:47:01,020
not trivial uh if we can come up with

1043
00:47:01,020 --> 00:47:02,579
much a better attack

1044
00:47:02,579 --> 00:47:05,819
so here we give our parallel reversible

1045
00:47:05,819 --> 00:47:08,819
polling um which has a space time caused

1046
00:47:08,819 --> 00:47:11,940
a little slightly larger than n

1047
00:47:11,940 --> 00:47:13,260
um and um

1048
00:47:13,260 --> 00:47:14,640
and then you know we note that we

1049
00:47:14,640 --> 00:47:17,160
modified a prior worker but we just

1050
00:47:17,160 --> 00:47:20,339
formalize it in the language of uh our

1051
00:47:20,339 --> 00:47:22,260
pebbling

1052
00:47:22,260 --> 00:47:24,540
and this is the second attack and uh

1053
00:47:24,540 --> 00:47:26,460
actually due to the time limit I will

1054
00:47:26,460 --> 00:47:29,220
just skip this attack and I will just

1055
00:47:29,220 --> 00:47:32,339
revisit later with our result

1056
00:47:32,339 --> 00:47:34,859
and I will just focus on our last attack

1057
00:47:34,859 --> 00:47:37,859
which is using an induced line graph so

1058
00:47:37,859 --> 00:47:41,040
uh given a graph G we can split into

1059
00:47:41,040 --> 00:47:44,940
blocks of size B and we can create a

1060
00:47:44,940 --> 00:47:47,520
line graph of a size n over B and then

1061
00:47:47,520 --> 00:47:50,160
after we find our uh pebbling on a line

1062
00:47:50,160 --> 00:47:52,380
graph we can transform the reversible

1063
00:47:52,380 --> 00:47:54,599
pebbling of the line graph back to the

1064
00:47:54,599 --> 00:47:56,220
original graph Gene

1065
00:47:56,220 --> 00:47:59,220
to do so we need to Define one notion

1066
00:47:59,220 --> 00:48:02,160
which is which is called a skip node so

1067
00:48:02,160 --> 00:48:04,380
here the red node above is called a skip

1068
00:48:04,380 --> 00:48:07,380
node because the the red Edge skips over

1069
00:48:07,380 --> 00:48:09,480
the next block

1070
00:48:09,480 --> 00:48:11,400
and the key intuition of our attack is

1071
00:48:11,400 --> 00:48:14,400
if we keep those skip nodes around then

1072
00:48:14,400 --> 00:48:16,380
we can easily transform a reversible

1073
00:48:16,380 --> 00:48:19,040
coupling of the line graph back to our

1074
00:48:19,040 --> 00:48:20,819
graph G

1075
00:48:20,819 --> 00:48:24,060
so for example consider this following

1076
00:48:24,060 --> 00:48:26,339
um reversible public transition so

1077
00:48:26,339 --> 00:48:28,260
suppose that we have a pebble on this

1078
00:48:28,260 --> 00:48:31,079
note then this is this corresponds to

1079
00:48:31,079 --> 00:48:35,819
having Pebbles uh in the block above and

1080
00:48:35,819 --> 00:48:37,800
this is a legal reversible coupling

1081
00:48:37,800 --> 00:48:40,680
transition and to do so we want to place

1082
00:48:40,680 --> 00:48:44,160
the Pebbles on the Block above but which

1083
00:48:44,160 --> 00:48:47,400
is impossible because of this um

1084
00:48:47,400 --> 00:48:50,280
because of this red Edge so we actually

1085
00:48:50,280 --> 00:48:53,220
need to keep a skip Pebble on the skip

1086
00:48:53,220 --> 00:48:56,579
note to place a pebble here then we can

1087
00:48:56,579 --> 00:48:57,420
um

1088
00:48:57,420 --> 00:49:00,540
people like this block and this uh this

1089
00:49:00,540 --> 00:49:02,579
property also holds when we delete uh

1090
00:49:02,579 --> 00:49:04,859
Pebble from the graph we want to delete

1091
00:49:04,859 --> 00:49:07,440
Pebbles From the Block above but to

1092
00:49:07,440 --> 00:49:10,680
delete this uh Pebble uh from this node

1093
00:49:10,680 --> 00:49:13,380
we actually need to keep a node on the

1094
00:49:13,380 --> 00:49:15,780
skip node

1095
00:49:15,780 --> 00:49:18,480
so this is an example so given a graph G

1096
00:49:18,480 --> 00:49:20,579
we can make a

1097
00:49:20,579 --> 00:49:23,700
line graph and then we can transform our

1098
00:49:23,700 --> 00:49:25,800
reversible pebbling to the original

1099
00:49:25,800 --> 00:49:28,380
graph so um

1100
00:49:28,380 --> 00:49:31,140
we can prove that the space-time cost of

1101
00:49:31,140 --> 00:49:34,800
our original graph G is s times n plus b

1102
00:49:34,800 --> 00:49:36,780
squared times the space time cost of the

1103
00:49:36,780 --> 00:49:39,060
line graph where s is the number of skip

1104
00:49:39,060 --> 00:49:42,060
nodes and B is the block size

1105
00:49:42,060 --> 00:49:44,819
so we consider an imagef image candidate

1106
00:49:44,819 --> 00:49:48,660
called their sample which classically uh

1107
00:49:48,660 --> 00:49:50,160
is known to have stronger memory

1108
00:49:50,160 --> 00:49:52,500
hardness than argument to I so for Dr

1109
00:49:52,500 --> 00:49:54,780
sample we showed that

1110
00:49:54,780 --> 00:49:57,420
the spaceland cost of their sample is as

1111
00:49:57,420 --> 00:50:00,300
follows and um

1112
00:50:00,300 --> 00:50:02,819
and we we uh there's one thing to note

1113
00:50:02,819 --> 00:50:05,220
uh Dr sample actually has a more

1114
00:50:05,220 --> 00:50:06,720
efficient reversible coupling attack

1115
00:50:06,720 --> 00:50:09,960
than another image imhf candidate called

1116
00:50:09,960 --> 00:50:11,700
Urban 2i

1117
00:50:11,700 --> 00:50:14,640
um but uh we we only show the upper

1118
00:50:14,640 --> 00:50:17,040
boundary we didn't show our lower bounds

1119
00:50:17,040 --> 00:50:19,980
so it is an open question uh if which

1120
00:50:19,980 --> 00:50:23,579
one truly has a higher um

1121
00:50:23,579 --> 00:50:26,099
SpaceTime complexity

1122
00:50:26,099 --> 00:50:28,800
and so far we only considered

1123
00:50:28,800 --> 00:50:32,099
uh like in in we only considered like in

1124
00:50:32,099 --> 00:50:34,319
inverting a function f on a single

1125
00:50:34,319 --> 00:50:37,140
Target output y uh but uh we can

1126
00:50:37,140 --> 00:50:39,540
consider the same problem with uh

1127
00:50:39,540 --> 00:50:41,460
inverting a function on multiple uh

1128
00:50:41,460 --> 00:50:43,619
Target outputs then the attacker can

1129
00:50:43,619 --> 00:50:46,859
amortize the space-time complexity using

1130
00:50:46,859 --> 00:50:50,400
a over uh running error in parallel so

1131
00:50:50,400 --> 00:50:52,859
we introduced a notion of a amortized

1132
00:50:52,859 --> 00:50:55,500
based on complexity uh for a parallel

1133
00:50:55,500 --> 00:50:59,059
universes of pebblings and then we gave

1134
00:50:59,059 --> 00:51:03,660
some result um by extending uh non

1135
00:51:03,660 --> 00:51:05,700
non-reversible attack of Owen and black

1136
00:51:05,700 --> 00:51:08,400
key and we have the much efficient

1137
00:51:08,400 --> 00:51:13,040
attack than a naiveling for urban dry

1138
00:51:13,920 --> 00:51:16,079
um so there's a conclusion and we have

1139
00:51:16,079 --> 00:51:18,599
several open questions uh but due to the

1140
00:51:18,599 --> 00:51:20,160
time limit I'll just mention the last

1141
00:51:20,160 --> 00:51:23,220
one so here we only give the upper bound

1142
00:51:23,220 --> 00:51:25,619
of our attacks so

1143
00:51:25,619 --> 00:51:27,180
a proper amount of the space-time cost

1144
00:51:27,180 --> 00:51:30,359
so we are interested in come up with a

1145
00:51:30,359 --> 00:51:32,280
lower bound of a space-time cost as well

1146
00:51:32,280 --> 00:51:35,760
and then if we have a lower bound uh can

1147
00:51:35,760 --> 00:51:37,559
we come up with a reversible powering

1148
00:51:37,559 --> 00:51:40,020
reduction in uh so that the lower bounds

1149
00:51:40,020 --> 00:51:42,480
carries over in the parallel Quantum and

1150
00:51:42,480 --> 00:51:43,980
the marker model

1151
00:51:43,980 --> 00:51:45,300
right

1152
00:51:45,300 --> 00:51:47,220
thank you and I'm happy to take

1153
00:51:47,220 --> 00:51:49,700
questions

1154
00:51:53,880 --> 00:51:55,319
so I think we have time for one question

1155
00:51:55,319 --> 00:51:57,980
from the audience

1156
00:52:02,180 --> 00:52:05,040
so just to make sure so your your paper

1157
00:52:05,040 --> 00:52:06,839
is an attack paper right you introduce

1158
00:52:06,839 --> 00:52:08,520
the notion of pebbling such that under

1159
00:52:08,520 --> 00:52:10,559
you know when you understand this notion

1160
00:52:10,559 --> 00:52:11,819
of babbling for a particular

1161
00:52:11,819 --> 00:52:13,980
construction it gives you an attack but

1162
00:52:13,980 --> 00:52:16,500
it doesn't give you a security proof

1163
00:52:16,500 --> 00:52:19,260
right exactly in maybe like a very quick

1164
00:52:19,260 --> 00:52:21,720
follow-up and so what's your kind of

1165
00:52:21,720 --> 00:52:23,280
kill there do we have something where

1166
00:52:23,280 --> 00:52:24,660
you can probably like one of the

1167
00:52:24,660 --> 00:52:27,119
functions which probably has a good

1168
00:52:27,119 --> 00:52:29,220
resistance to Quantum parallel attacks

1169
00:52:29,220 --> 00:52:31,079
do we have any positive results like

1170
00:52:31,079 --> 00:52:33,359
this is a function to use

1171
00:52:33,359 --> 00:52:37,980
um so we we haven't uh sorry uh if so uh

1172
00:52:37,980 --> 00:52:39,420
can you repeat the question uh well

1173
00:52:39,420 --> 00:52:41,099
essentially so you have some attacks

1174
00:52:41,099 --> 00:52:42,359
which don't have shapes like small

1175
00:52:42,359 --> 00:52:44,400
factors do you have something where you

1176
00:52:44,400 --> 00:52:45,780
will actually recommend okay this is a

1177
00:52:45,780 --> 00:52:47,280
functions that I recommend to use

1178
00:52:47,280 --> 00:52:49,380
because we actually have a proof of

1179
00:52:49,380 --> 00:52:51,359
security which is uh the best possible

1180
00:52:51,359 --> 00:52:55,759
or something no no we we haven't yeah

1181
00:52:58,260 --> 00:53:00,000
would you conjecture that your model

1182
00:53:00,000 --> 00:53:02,099
accurately captures Quantum complexity

1183
00:53:02,099 --> 00:53:03,300
or do you think that there might be a

1184
00:53:03,300 --> 00:53:06,020
better model out there

1185
00:53:14,819 --> 00:53:18,079
all right let's hang the speaker again

1186
00:54:42,540 --> 00:54:44,700
all right so next up next winner will

1187
00:54:44,700 --> 00:54:46,140
tell us about Quantum rewinding for many

1188
00:54:46,140 --> 00:54:47,579
of my own protocols

1189
00:54:47,579 --> 00:54:49,980
thanks for me uh yeah so this is during

1190
00:54:49,980 --> 00:54:51,720
work with Russell lye and uh Julian

1191
00:54:51,720 --> 00:54:53,220
malabolta

1192
00:54:53,220 --> 00:54:54,420
um apparently this is a PowerPoint

1193
00:54:54,420 --> 00:54:56,160
running in keynote so if anything goes

1194
00:54:56,160 --> 00:54:59,160
uh really wrong that is why

1195
00:54:59,160 --> 00:55:02,819
um so uh okay so

1196
00:55:02,819 --> 00:55:05,400
um this paper is about

1197
00:55:05,400 --> 00:55:08,940
um a particular sort of family of of uh

1198
00:55:08,940 --> 00:55:11,220
many round protocols which are

1199
00:55:11,220 --> 00:55:13,800
informally called lattice bulletproofs

1200
00:55:13,800 --> 00:55:17,660
um so this was introduced only by um

1201
00:55:17,660 --> 00:55:21,420
and xyla and then uh sort of the

1202
00:55:21,420 --> 00:55:23,460
variance that this protocol appeared in

1203
00:55:23,460 --> 00:55:26,700
albrechten Lai and uh atom Kramer and

1204
00:55:26,700 --> 00:55:27,900
Cole

1205
00:55:27,900 --> 00:55:28,619
um

1206
00:55:28,619 --> 00:55:31,140
and there's also a similar a similar

1207
00:55:31,140 --> 00:55:32,460
concept

1208
00:55:32,460 --> 00:55:37,200
um so you have some white Matrix uh a

1209
00:55:37,200 --> 00:55:40,440
which is uh is a random Matrix uh drawn

1210
00:55:40,440 --> 00:55:43,500
from from uh the H by n matrices of the

1211
00:55:43,500 --> 00:55:45,300
ring so think about H as being the

1212
00:55:45,300 --> 00:55:47,640
security parameter and N being some some

1213
00:55:47,640 --> 00:55:50,280
large largest thing

1214
00:55:50,280 --> 00:55:52,140
um and what you want is a succinct proof

1215
00:55:52,140 --> 00:55:53,940
of knowledge of an SIS primitive short

1216
00:55:53,940 --> 00:55:55,680
entity solution pre-image so this is

1217
00:55:55,680 --> 00:55:58,140
like a short X such that Y is equal to a

1218
00:55:58,140 --> 00:55:59,640
times x

1219
00:55:59,640 --> 00:56:02,460
um where uh short by short I mean sort

1220
00:56:02,460 --> 00:56:04,440
of in the in the infinity Norm

1221
00:56:04,440 --> 00:56:06,480
um over this over this ring but don't

1222
00:56:06,480 --> 00:56:08,400
worry too much about that

1223
00:56:08,400 --> 00:56:10,980
um so the proof goes as follows uh this

1224
00:56:10,980 --> 00:56:13,380
is the proof of knowledge uh so what the

1225
00:56:13,380 --> 00:56:14,760
verifier is going to do he's he's going

1226
00:56:14,760 --> 00:56:18,480
to choose a challenge a random challenge

1227
00:56:18,480 --> 00:56:22,559
um which uh he's the proverb

1228
00:56:22,559 --> 00:56:25,020
um and this induces the sort of folding

1229
00:56:25,020 --> 00:56:26,880
of this Matrix a okay so we're gonna

1230
00:56:26,880 --> 00:56:29,280
we're gonna Matrix a up into two halves

1231
00:56:29,280 --> 00:56:30,720
um and we fold it sort of over the

1232
00:56:30,720 --> 00:56:32,880
challenge Alpha so we see a combination

1233
00:56:32,880 --> 00:56:34,920
of the the left top of the Matrix plus

1234
00:56:34,920 --> 00:56:37,020
Alpha the right of the Matrix gives you

1235
00:56:37,020 --> 00:56:39,720
a mix uh which has the same the same

1236
00:56:39,720 --> 00:56:44,160
height but uh is is half the width okay

1237
00:56:44,160 --> 00:56:47,520
um and the having the the pre-image x is

1238
00:56:47,520 --> 00:56:50,040
going to do the same thing to X right so

1239
00:56:50,040 --> 00:56:52,020
uh he's gonna fold X but notice that

1240
00:56:52,020 --> 00:56:54,000
he's folding now with Alpha on the left

1241
00:56:54,000 --> 00:56:55,680
half

1242
00:56:55,680 --> 00:56:57,480
um and uh and nothing on the right half

1243
00:56:57,480 --> 00:56:59,160
and this gives him a vector of length

1244
00:56:59,160 --> 00:57:00,660
then huh

1245
00:57:00,660 --> 00:57:01,500
um

1246
00:57:01,500 --> 00:57:04,619
and then uh what what happens here is

1247
00:57:04,619 --> 00:57:07,260
that uh so if you look at like a prime

1248
00:57:07,260 --> 00:57:09,000
times x Prime this is a quadratic

1249
00:57:09,000 --> 00:57:11,460
equivalent an alpha

1250
00:57:11,460 --> 00:57:14,040
um and notice that like the way that we

1251
00:57:14,040 --> 00:57:17,099
sort of set things up uh the original y

1252
00:57:17,099 --> 00:57:21,300
so a times x appears as uh as the the

1253
00:57:21,300 --> 00:57:23,940
first term in this so uh so this is this

1254
00:57:23,940 --> 00:57:26,640
is this like for linear term Alpha times

1255
00:57:26,640 --> 00:57:27,839
y

1256
00:57:27,839 --> 00:57:29,520
um and then we have some cross terms so

1257
00:57:29,520 --> 00:57:31,380
some some junk

1258
00:57:31,380 --> 00:57:32,339
um

1259
00:57:32,339 --> 00:57:34,559
and uh and so what we're going to need

1260
00:57:34,559 --> 00:57:36,240
to do basically we want to we want to

1261
00:57:36,240 --> 00:57:38,819
reduce to checking this equation and so

1262
00:57:38,819 --> 00:57:39,839
the prover is going to have to send

1263
00:57:39,839 --> 00:57:41,819
these cross terms um and I apologize

1264
00:57:41,819 --> 00:57:43,260
I've made a mistake here so this these

1265
00:57:43,260 --> 00:57:45,660
cross terms should actually be uh enough

1266
00:57:45,660 --> 00:57:47,099
in the first message this is a three

1267
00:57:47,099 --> 00:57:49,559
message protocol so the alxr and arxl

1268
00:57:49,559 --> 00:57:51,059
are things that the previous ends at the

1269
00:57:51,059 --> 00:57:53,339
at the beginning before he sees Alpha uh

1270
00:57:53,339 --> 00:57:54,839
and then the final message is called as

1271
00:57:54,839 --> 00:57:56,760
X Prime

1272
00:57:56,760 --> 00:57:58,380
um so the verify can then like given

1273
00:57:58,380 --> 00:57:59,640
this information he can check this

1274
00:57:59,640 --> 00:58:01,859
equation at the end and this in this way

1275
00:58:01,859 --> 00:58:03,960
he's uh convinced of the existence of

1276
00:58:03,960 --> 00:58:05,880
this of this pre-image

1277
00:58:05,880 --> 00:58:06,680
um

1278
00:58:06,680 --> 00:58:09,720
uh with the with only like N Harmony

1279
00:58:09,720 --> 00:58:11,640
communication right so we've like saved

1280
00:58:11,640 --> 00:58:12,780
a lot of communication right the

1281
00:58:12,780 --> 00:58:15,839
original images is n uh ring elements

1282
00:58:15,839 --> 00:58:17,220
and now we're running like roughly and

1283
00:58:17,220 --> 00:58:19,319
offering elements

1284
00:58:19,319 --> 00:58:22,319
um now uh you know and I said it's

1285
00:58:22,319 --> 00:58:24,059
extinct and half is not really succinct

1286
00:58:24,059 --> 00:58:25,680
but what you can do is notice that this

1287
00:58:25,680 --> 00:58:28,500
a prime X Prime equals y Prime is itself

1288
00:58:28,500 --> 00:58:30,839
distance of this uh CIS previous problem

1289
00:58:30,839 --> 00:58:33,960
right for the for X Prime uh and so we

1290
00:58:33,960 --> 00:58:35,760
can just recurse so rather than this x

1291
00:58:35,760 --> 00:58:37,440
Prime which is large we just uh we we

1292
00:58:37,440 --> 00:58:39,960
prove the existence

1293
00:58:39,960 --> 00:58:41,760
um we did this uh log many times and so

1294
00:58:41,760 --> 00:58:45,680
the total communication is auto log n

1295
00:58:47,040 --> 00:58:49,200
um so what do we do in this paper

1296
00:58:49,200 --> 00:58:52,200
basically we proved that uh this proof

1297
00:58:52,200 --> 00:58:55,740
system with like this recursive log menu

1298
00:58:55,740 --> 00:58:57,299
um is quantum group of knowledge

1299
00:58:57,299 --> 00:58:58,440
obviously it's pretty much assuming

1300
00:58:58,440 --> 00:59:00,660
Quantum partners that are already

1301
00:59:00,660 --> 00:59:02,579
um so you know you might be wondering

1302
00:59:02,579 --> 00:59:04,859
well actually I guess with uh Ethan's

1303
00:59:04,859 --> 00:59:06,359
talk you're probably not wondering why

1304
00:59:06,359 --> 00:59:08,220
this wasn't done before basically it's

1305
00:59:08,220 --> 00:59:09,960
because the classical reduction the the

1306
00:59:09,960 --> 00:59:11,520
the original reduction is only for

1307
00:59:11,520 --> 00:59:12,780
classical adversaries it's a classical

1308
00:59:12,780 --> 00:59:15,780
reduction to lwe right

1309
00:59:15,780 --> 00:59:17,760
um but it doesn't work for Quantum

1310
00:59:17,760 --> 00:59:18,839
adversaries

1311
00:59:18,839 --> 00:59:19,559
um

1312
00:59:19,559 --> 00:59:21,839
and so the way that we we proved this

1313
00:59:21,839 --> 00:59:23,700
result is in three steps so we come up

1314
00:59:23,700 --> 00:59:25,319
with these new soundness Notions for

1315
00:59:25,319 --> 00:59:27,119
multirun protocols

1316
00:59:27,119 --> 00:59:28,500
um which I'll give you a little bit so

1317
00:59:28,500 --> 00:59:30,180
recursive special soundness and last

1318
00:59:30,180 --> 00:59:31,500
round collapsing requested special

1319
00:59:31,500 --> 00:59:33,420
soundness is kind of a

1320
00:59:33,420 --> 00:59:35,640
um more refined notion of tree special

1321
00:59:35,640 --> 00:59:36,839
soundness so if you've seen that before

1322
00:59:36,839 --> 00:59:39,420
and last round collapsing is uh an

1323
00:59:39,420 --> 00:59:41,339
adaptation of the collapsing property to

1324
00:59:41,339 --> 00:59:43,619
multi-round protocols

1325
00:59:43,619 --> 00:59:46,020
um and we give a novel rewinding

1326
00:59:46,020 --> 00:59:47,280
algorithm for any protocol that

1327
00:59:47,280 --> 00:59:49,260
satisfies both properties

1328
00:59:49,260 --> 00:59:50,700
um finally we showed that the lattice

1329
00:59:50,700 --> 00:59:52,260
bulletproof's sort of family of

1330
00:59:52,260 --> 00:59:54,000
protocols satisfied but he's assuming

1331
00:59:54,000 --> 00:59:57,780
qrw the quantum hardness

1332
00:59:57,780 --> 00:59:59,180
and

1333
00:59:59,180 --> 01:00:02,640
so let's get into a little bit uh so I

1334
01:00:02,640 --> 01:00:04,260
want to just like take a quick look at

1335
01:00:04,260 --> 01:00:07,020
the classical uh proof that this

1336
01:00:07,020 --> 01:00:09,480
protocol is secure is basically tree

1337
01:00:09,480 --> 01:00:11,940
special sound okay so

1338
01:00:11,940 --> 01:00:14,400
um what I do is I kind of start from my

1339
01:00:14,400 --> 01:00:16,440
original sorry Alan R should be at the

1340
01:00:16,440 --> 01:00:17,940
top here as well

1341
01:00:17,940 --> 01:00:21,059
um so uh let's let's just think about

1342
01:00:21,059 --> 01:00:24,540
the three message protocol right so I I

1343
01:00:24,540 --> 01:00:25,200
um

1344
01:00:25,200 --> 01:00:27,000
I imagine running the proof on the three

1345
01:00:27,000 --> 01:00:28,799
measures protocol for like a challenge

1346
01:00:28,799 --> 01:00:31,200
Alpha One and I get out some some X

1347
01:00:31,200 --> 01:00:33,180
prime one right

1348
01:00:33,180 --> 01:00:34,319
um and then I do the same thing but

1349
01:00:34,319 --> 01:00:36,720
Alpha two and I get some X Prime 2 and I

1350
01:00:36,720 --> 01:00:38,339
do the thing for Alpha 3 and I get some

1351
01:00:38,339 --> 01:00:40,440
X Prime 3. here like these these L and

1352
01:00:40,440 --> 01:00:42,059
R's these these should be all the same

1353
01:00:42,059 --> 01:00:44,220
LR and it should be at the top

1354
01:00:44,220 --> 01:00:47,880
um okay so uh so then I I get these go

1355
01:00:47,880 --> 01:00:49,920
to three three primages x Prime One X

1356
01:00:49,920 --> 01:00:51,780
Prime two x Prime three

1357
01:00:51,780 --> 01:00:53,940
um uh with the second message and the

1358
01:00:53,940 --> 01:00:55,680
three message protocol and they can

1359
01:00:55,680 --> 01:00:57,299
combine them together in some basically

1360
01:00:57,299 --> 01:00:59,700
by solving a linear equation uh so long

1361
01:00:59,700 --> 01:01:01,260
as Alpha One Alpha two and Alpha three

1362
01:01:01,260 --> 01:01:02,520
are all different

1363
01:01:02,520 --> 01:01:04,500
um and all of the and and the verifier

1364
01:01:04,500 --> 01:01:06,359
accepts all of these uh all of these

1365
01:01:06,359 --> 01:01:08,160
transcripts I can combine them to get

1366
01:01:08,160 --> 01:01:10,380
back in X that is that that uh is a

1367
01:01:10,380 --> 01:01:11,700
solution be a short solution to the

1368
01:01:11,700 --> 01:01:14,160
original equation

1369
01:01:14,160 --> 01:01:15,660
um now of course whoops sorry now of

1370
01:01:15,660 --> 01:01:17,520
course we have a

1371
01:01:17,520 --> 01:01:20,040
we have like we're not using this uh

1372
01:01:20,040 --> 01:01:21,480
this three message protocol but we're

1373
01:01:21,480 --> 01:01:23,880
using the the uh recursive version so

1374
01:01:23,880 --> 01:01:25,920
with log many rounds so what we do is we

1375
01:01:25,920 --> 01:01:27,240
say well okay the proof is not going to

1376
01:01:27,240 --> 01:01:29,520
give us X Prime One X Prime 2 x Prime 3

1377
01:01:29,520 --> 01:01:31,440
and the clear he's going to uh prove to

1378
01:01:31,440 --> 01:01:32,760
us that they exist and so we're going to

1379
01:01:32,760 --> 01:01:35,520
run the extractor in order to get these

1380
01:01:35,520 --> 01:01:38,280
um and we do so recursively so we just

1381
01:01:38,280 --> 01:01:40,619
um in the end we end up with a with a

1382
01:01:40,619 --> 01:01:42,299
ternary a complete ternary tree of

1383
01:01:42,299 --> 01:01:43,920
accepting transcription from that we can

1384
01:01:43,920 --> 01:01:45,660
extract NX this is where it's called

1385
01:01:45,660 --> 01:01:47,880
pre-special samples

1386
01:01:47,880 --> 01:01:52,319
um okay uh so how do we get this tree uh

1387
01:01:52,319 --> 01:01:54,299
it's sort of by a kind of simple depth

1388
01:01:54,299 --> 01:01:55,920
first search algorithm

1389
01:01:55,920 --> 01:01:58,680
um so I'm going to sort of just just

1390
01:01:58,680 --> 01:02:00,420
write it down imagine that we're at some

1391
01:02:00,420 --> 01:02:02,520
some point in the tree uh like indexed

1392
01:02:02,520 --> 01:02:04,980
by a list of challenges Alpha One up uh

1393
01:02:04,980 --> 01:02:07,619
Alpha One up to Alpha I minus one

1394
01:02:07,619 --> 01:02:09,299
um and we want to extract these three

1395
01:02:09,299 --> 01:02:11,760
challenges here Alpha One uh Alpha One I

1396
01:02:11,760 --> 01:02:14,220
Alpha two I Alpha three

1397
01:02:14,220 --> 01:02:17,700
um so what we do uh is we just kind of

1398
01:02:17,700 --> 01:02:20,520
request we explore the the prouba tree

1399
01:02:20,520 --> 01:02:22,440
so this P tilde is uh is on malicious

1400
01:02:22,440 --> 01:02:23,940
program

1401
01:02:23,940 --> 01:02:25,380
um and

1402
01:02:25,380 --> 01:02:28,260
so we we obtained the the L and all the

1403
01:02:28,260 --> 01:02:30,000
junk terms from the malicious Brewer and

1404
01:02:30,000 --> 01:02:31,200
then we're going to recurse down the

1405
01:02:31,200 --> 01:02:32,220
tree

1406
01:02:32,220 --> 01:02:35,040
um and we're going to ask uh the the

1407
01:02:35,040 --> 01:02:38,160
um the the tree extractor to produce

1408
01:02:38,160 --> 01:02:41,040
um the pre-image x i x i one that we

1409
01:02:41,040 --> 01:02:41,880
need

1410
01:02:41,880 --> 01:02:44,520
um for the eye level of the tree

1411
01:02:44,520 --> 01:02:46,920
um and uh if this fails then we're gonna

1412
01:02:46,920 --> 01:02:48,480
output fail

1413
01:02:48,480 --> 01:02:50,220
um and otherwise uh we're going to

1414
01:02:50,220 --> 01:02:51,900
repeat this the star step until we get

1415
01:02:51,900 --> 01:02:53,099
two more successes so we're going to get

1416
01:02:53,099 --> 01:02:57,059
three three different uh choices of x i

1417
01:02:57,059 --> 01:03:00,059
um and then I'm going to return uh this

1418
01:03:00,059 --> 01:03:03,240
x i minus 1 uh which is uh some some

1419
01:03:03,240 --> 01:03:05,220
combination of L and R and all of these

1420
01:03:05,220 --> 01:03:07,559
excites okay so this is like the the the

1421
01:03:07,559 --> 01:03:09,000
sort of uh

1422
01:03:09,000 --> 01:03:11,819
Atomic step if you like

1423
01:03:11,819 --> 01:03:14,040
um so this is like just some depth first

1424
01:03:14,040 --> 01:03:16,680
explanation of the tree basically

1425
01:03:16,680 --> 01:03:20,640
um and uh okay yeah this is a keynote

1426
01:03:20,640 --> 01:03:22,280
um so

1427
01:03:22,280 --> 01:03:25,319
uh so this is something but this is some

1428
01:03:25,319 --> 01:03:28,940
depth exploration of the tree and um

1429
01:03:28,940 --> 01:03:31,500
uh and so you know there should be a

1430
01:03:31,500 --> 01:03:32,819
base case of what happens at the leaves

1431
01:03:32,819 --> 01:03:33,839
of the tree and what happens to the

1432
01:03:33,839 --> 01:03:35,099
leaves of the tree is we get actually

1433
01:03:35,099 --> 01:03:38,460
that uh like an actual uh pre-image for

1434
01:03:38,460 --> 01:03:41,339
the the hash function of that leaf

1435
01:03:41,339 --> 01:03:43,140
um which is the sex Prime

1436
01:03:43,140 --> 01:03:45,299
um and basically what I do is if this is

1437
01:03:45,299 --> 01:03:47,579
this thing is an exception trip so like

1438
01:03:47,579 --> 01:03:49,260
everything was correct all the way down

1439
01:03:49,260 --> 01:03:50,579
to the bottom

1440
01:03:50,579 --> 01:03:53,520
um then I'm going to return X Prime LR

1441
01:03:53,520 --> 01:03:55,079
otherwise I output fail so this is where

1442
01:03:55,079 --> 01:03:56,520
the fail comes from basically the prover

1443
01:03:56,520 --> 01:03:58,319
can just like not succeed in convincing

1444
01:03:58,319 --> 01:03:59,280
me

1445
01:03:59,280 --> 01:04:00,780
um on some sequence of challenges and so

1446
01:04:00,780 --> 01:04:03,059
I should output fail here

1447
01:04:03,059 --> 01:04:07,799
um okay so a quick analysis of this so

1448
01:04:07,799 --> 01:04:08,640
um

1449
01:04:08,640 --> 01:04:10,680
let's say that the the probability that

1450
01:04:10,680 --> 01:04:14,220
the military group of wins is is mute

1451
01:04:14,220 --> 01:04:17,099
um and so I can Define like the residual

1452
01:04:17,099 --> 01:04:19,140
probability at any node as the

1453
01:04:19,140 --> 01:04:20,760
probability of a continuations from that

1454
01:04:20,760 --> 01:04:22,619
node of the of the probability the the

1455
01:04:22,619 --> 01:04:24,720
the the prudence

1456
01:04:24,720 --> 01:04:26,819
um and so you can see like it's not too

1457
01:04:26,819 --> 01:04:28,760
hard to show recumbently the probability

1458
01:04:28,760 --> 01:04:31,859
that fail so like the the ti plus one

1459
01:04:31,859 --> 01:04:34,680
upwards failure and um is just the

1460
01:04:34,680 --> 01:04:38,099
probability uh that it's just like new

1461
01:04:38,099 --> 01:04:41,339
uh that particular note and so the

1462
01:04:41,339 --> 01:04:43,079
overall probability that you succeed in

1463
01:04:43,079 --> 01:04:45,119
extracting is Mu which is great because

1464
01:04:45,119 --> 01:04:46,559
that's the probability that the proof

1465
01:04:46,559 --> 01:04:49,020
does anything interesting at all

1466
01:04:49,020 --> 01:04:52,079
um and uh the expected running time is a

1467
01:04:52,079 --> 01:04:53,460
little more interesting

1468
01:04:53,460 --> 01:04:55,200
um so this is where we use this fact

1469
01:04:55,200 --> 01:04:56,099
that you have this like early

1470
01:04:56,099 --> 01:04:58,500
termination so basically if TI plus one

1471
01:04:58,500 --> 01:04:59,880
outputs fail the first time then you

1472
01:04:59,880 --> 01:05:03,420
just give up right and so uh the you

1473
01:05:03,420 --> 01:05:05,520
always run TI plus one once and then

1474
01:05:05,520 --> 01:05:09,000
with probability mu uh of this node you

1475
01:05:09,000 --> 01:05:10,680
run it two over mu times to get two more

1476
01:05:10,680 --> 01:05:12,839
successes and so the overall expected

1477
01:05:12,839 --> 01:05:15,299
running time is uh is three times the

1478
01:05:15,299 --> 01:05:18,180
time for the next uh for TI plus one and

1479
01:05:18,180 --> 01:05:20,099
so if you solve the recursion then the

1480
01:05:20,099 --> 01:05:22,200
the time for for T1 for actually

1481
01:05:22,200 --> 01:05:25,079
extracting the thing uh is just uh poly

1482
01:05:25,079 --> 01:05:26,400
Lambda times like three to the login

1483
01:05:26,400 --> 01:05:29,420
which is uh

1484
01:05:30,000 --> 01:05:32,640
um great okay so why does this fail in

1485
01:05:32,640 --> 01:05:34,559
the quantum setting well it's because of

1486
01:05:34,559 --> 01:05:36,720
this uh competing star until two more

1487
01:05:36,720 --> 01:05:38,040
successful you'll know the quantum

1488
01:05:38,040 --> 01:05:39,960
hopefully by now we all know the quantum

1489
01:05:39,960 --> 01:05:41,819
rewinding is really hard

1490
01:05:41,819 --> 01:05:44,940
um and so uh you know so so like this

1491
01:05:44,940 --> 01:05:47,400
repetition is uh is what causes the

1492
01:05:47,400 --> 01:05:49,020
problem

1493
01:05:49,020 --> 01:05:51,720
um but you know by now we know how uh to

1494
01:05:51,720 --> 01:05:53,040
do Quantum rending right we have some

1495
01:05:53,040 --> 01:05:54,480
powerful techniques this this should be

1496
01:05:54,480 --> 01:05:56,460
CCL y22

1497
01:05:56,460 --> 01:05:57,059
um

1498
01:05:57,059 --> 01:05:59,040
and uh so the question you know why

1499
01:05:59,040 --> 01:06:01,859
aren't we why aren't we already done

1500
01:06:01,859 --> 01:06:03,599
um and you could say well you know why

1501
01:06:03,599 --> 01:06:05,099
don't I just like apply my Quantum

1502
01:06:05,099 --> 01:06:07,559
reubenonics and in place of this like

1503
01:06:07,559 --> 01:06:09,720
repetition

1504
01:06:09,720 --> 01:06:12,480
um and the problem is basically that uh

1505
01:06:12,480 --> 01:06:14,520
known Quantum rewinding techniques

1506
01:06:14,520 --> 01:06:16,380
require this ta plus one to be projected

1507
01:06:16,380 --> 01:06:18,299
this is kind of a technical Quantum me

1508
01:06:18,299 --> 01:06:20,460
condition uh and usually this is

1509
01:06:20,460 --> 01:06:22,200
achieved by running TI plus one in a

1510
01:06:22,200 --> 01:06:23,940
unitary fashion also medical quantity

1511
01:06:23,940 --> 01:06:25,140
condition

1512
01:06:25,140 --> 01:06:27,839
um the upshot is is that uh this doesn't

1513
01:06:27,839 --> 01:06:30,359
really play well with the like expected

1514
01:06:30,359 --> 01:06:33,119
polynomial time extraction

1515
01:06:33,119 --> 01:06:36,299
um and so uh because basically if you if

1516
01:06:36,299 --> 01:06:37,799
you run something in a unitary fashion

1517
01:06:37,799 --> 01:06:38,819
you need to know how long you're going

1518
01:06:38,819 --> 01:06:40,500
to run it for and is it like not

1519
01:06:40,500 --> 01:06:42,660
possible to run something in a unitary

1520
01:06:42,660 --> 01:06:45,240
fashion if you don't know uh it's an

1521
01:06:45,240 --> 01:06:48,299
appriory bound on its running time

1522
01:06:48,299 --> 01:06:51,480
um and so this causes a huge headache

1523
01:06:51,480 --> 01:06:53,880
um and uh the way to fix it is basically

1524
01:06:53,880 --> 01:06:56,520
by going to the classical extraction I

1525
01:06:56,520 --> 01:06:57,780
don't really have time to go over this

1526
01:06:57,780 --> 01:06:59,339
plea but to go back to the classical

1527
01:06:59,339 --> 01:07:02,160
extractor and like work in fixed

1528
01:07:02,160 --> 01:07:03,900
polynomial time

1529
01:07:03,900 --> 01:07:05,579
um the idea is basically you want to

1530
01:07:05,579 --> 01:07:08,760
just uh kind of predict when the

1531
01:07:08,760 --> 01:07:10,260
director is going to succeed so you're

1532
01:07:10,260 --> 01:07:12,480
going to like try and uh like before you

1533
01:07:12,480 --> 01:07:13,619
recurse we're going to try and figure

1534
01:07:13,619 --> 01:07:15,000
out if the extractor is going to succeed

1535
01:07:15,000 --> 01:07:18,299
already and therefore not this time

1536
01:07:18,299 --> 01:07:20,940
um I'm happy to discuss that offline if

1537
01:07:20,940 --> 01:07:22,859
anyone wants to know about

1538
01:07:22,859 --> 01:07:25,140
um and so

1539
01:07:25,140 --> 01:07:28,319
uh okay yeah so basically we use the uh

1540
01:07:28,319 --> 01:07:31,319
the cmse measuring repair technique to

1541
01:07:31,319 --> 01:07:33,539
achieve this in the quantum setting

1542
01:07:33,539 --> 01:07:35,520
um so what you do is you just perform a

1543
01:07:35,520 --> 01:07:38,819
measurement of whether the uh like using

1544
01:07:38,819 --> 01:07:42,119
uh sort of quantum uh probability

1545
01:07:42,119 --> 01:07:44,579
estimation type text you perform a

1546
01:07:44,579 --> 01:07:46,319
measurement of whether the thing is

1547
01:07:46,319 --> 01:07:48,960
going to accept uh whether the proofer

1548
01:07:48,960 --> 01:07:50,579
is going to convince you on on some

1549
01:07:50,579 --> 01:07:53,280
particular transcript sorry

1550
01:07:53,280 --> 01:07:56,099
um with with reasonably high probability

1551
01:07:56,099 --> 01:07:57,720
some particular prefix with high

1552
01:07:57,720 --> 01:08:00,480
probability and if yes then I'm gonna

1553
01:08:00,480 --> 01:08:02,940
like continue the extraction otherwise

1554
01:08:02,940 --> 01:08:04,859
I'm not going to do it

1555
01:08:04,859 --> 01:08:06,660
um and then I use this repair technique

1556
01:08:06,660 --> 01:08:08,220
to basically repair the residual

1557
01:08:08,220 --> 01:08:10,020
probability uh after doing this

1558
01:08:10,020 --> 01:08:11,520
measurement

1559
01:08:11,520 --> 01:08:14,039
um yeah uh so the proof idea basically

1560
01:08:14,039 --> 01:08:17,698
the this second step here is kind of the

1561
01:08:17,698 --> 01:08:19,738
step with da is computationally

1562
01:08:19,738 --> 01:08:21,420
indistinguishable from the first step

1563
01:08:21,420 --> 01:08:24,120
and so like it's like I'm doing the same

1564
01:08:24,120 --> 01:08:25,259
thing twice

1565
01:08:25,259 --> 01:08:26,640
um and because things are projective

1566
01:08:26,640 --> 01:08:28,679
it's it looks like I didn't do anything

1567
01:08:28,679 --> 01:08:31,080
as well I can kind of remove it

1568
01:08:31,080 --> 01:08:33,359
um and then an appeal to the measure and

1569
01:08:33,359 --> 01:08:35,939
repair analysis from cmnc

1570
01:08:35,939 --> 01:08:37,979
um okay so it was uh very quick but I

1571
01:08:37,979 --> 01:08:40,380
hope that uh you know that it was uh

1572
01:08:40,380 --> 01:08:42,238
somewhat Illuminating

1573
01:08:42,238 --> 01:08:44,580
um and uh this is sort of where we use

1574
01:08:44,580 --> 01:08:46,979
the learn collapsing sorry so so if you

1575
01:08:46,979 --> 01:08:48,899
want to get this x i you actually need

1576
01:08:48,899 --> 01:08:50,399
it to be you need some collapsing

1577
01:08:50,399 --> 01:08:52,259
property on it

1578
01:08:52,259 --> 01:08:54,899
um okay so that is all thank you very

1579
01:08:54,899 --> 01:08:57,019
much

1580
01:09:01,140 --> 01:09:03,179
uh so we have time for maybe one very

1581
01:09:03,179 --> 01:09:05,660
quick question

1582
01:09:09,000 --> 01:09:13,439
uh so it is oh yeah sorry so uh the

1583
01:09:13,439 --> 01:09:15,060
question was is there any slackness in

1584
01:09:15,060 --> 01:09:17,460
the solution so these last bulletproof

1585
01:09:17,460 --> 01:09:18,839
protocols these kinds of kinds of

1586
01:09:18,839 --> 01:09:21,299
lattice based proofs of knowledge they

1587
01:09:21,299 --> 01:09:24,600
exhibit a property where the solution

1588
01:09:24,600 --> 01:09:26,399
you extract is like worse than the one

1589
01:09:26,399 --> 01:09:27,719
you would get if you were the honest

1590
01:09:27,719 --> 01:09:29,580
proverb to begin with

1591
01:09:29,580 --> 01:09:31,560
um so this is also the case here but

1592
01:09:31,560 --> 01:09:33,420
it's not made any worse by the quantum

1593
01:09:33,420 --> 01:09:34,979
analysis like it's just a property the

1594
01:09:34,979 --> 01:09:38,000
classical analysis yeah

1595
01:09:38,939 --> 01:09:40,679
all right let's thank the speaker again

1596
01:09:40,679 --> 01:09:43,339
thank you

1597
01:09:47,219 --> 01:09:49,020
uh so we'll have a break now and I think

1598
01:09:49,020 --> 01:09:52,219
we're back here in 30 minutes

