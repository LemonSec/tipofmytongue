1
00:00:00,030 --> 00:00:04,620
I'm gonna give the dog okay thank you

2
00:00:03,000 --> 00:00:07,470
for the introduction so my name is

3
00:00:04,620 --> 00:00:11,099
Daniel and I said this is childish oh

4
00:00:07,470 --> 00:00:12,960
yeah and I'm going to talking I'm going

5
00:00:11,099 --> 00:00:15,809
to be talking about this clustering of

6
00:00:12,960 --> 00:00:19,080
related tweaked characteristics and its

7
00:00:15,809 --> 00:00:21,270
application to mantis six so first a

8
00:00:19,080 --> 00:00:23,250
short overview of this presentation I'm

9
00:00:21,270 --> 00:00:26,910
going to give you some context and

10
00:00:23,250 --> 00:00:28,680
present this target Sipho mantis then

11
00:00:26,910 --> 00:00:30,689
i'm going to talk about the differential

12
00:00:28,680 --> 00:00:34,290
attack strategy that we are employing

13
00:00:30,689 --> 00:00:36,420
and then I'm going a little bit deeper

14
00:00:34,290 --> 00:00:39,480
into the probability calculation for

15
00:00:36,420 --> 00:00:40,800
this clustered differentials and at the

16
00:00:39,480 --> 00:00:42,390
end I'm going to show you some

17
00:00:40,800 --> 00:00:46,849
experiments and the results of those

18
00:00:42,390 --> 00:00:50,219
experiments verifying our claims

19
00:00:46,850 --> 00:00:52,860
so first mantis is a tweak of a block

20
00:00:50,219 --> 00:00:55,440
cipher and in contrast to this normal

21
00:00:52,860 --> 00:00:57,600
block ciphers which have a message in

22
00:00:55,440 --> 00:01:00,180
key input and produces ciphertext like a

23
00:00:57,600 --> 00:01:02,460
yes and yes the tweak of block ciphers

24
00:01:00,180 --> 00:01:04,830
also have this additional tweak inputs

25
00:01:02,460 --> 00:01:07,140
and this tweak input can be used for

26
00:01:04,830 --> 00:01:10,560
example to give some context to this

27
00:01:07,140 --> 00:01:12,450
encryption and the very well-known use

28
00:01:10,560 --> 00:01:14,760
cases for example memory encryption

29
00:01:12,450 --> 00:01:19,860
where the tweak can be essentially set

30
00:01:14,760 --> 00:01:22,850
to the address of this memory and so it

31
00:01:19,860 --> 00:01:25,020
can help us for example break that

32
00:01:22,850 --> 00:01:28,080
determinism during the encryption

33
00:01:25,020 --> 00:01:32,250
process and we can also use this tweak

34
00:01:28,080 --> 00:01:32,939
to then build more advanced modes of

35
00:01:32,250 --> 00:01:34,740
encryption

36
00:01:32,939 --> 00:01:37,020
whereas with traditional block ciphers

37
00:01:34,740 --> 00:01:39,929
we always have to build some kind of

38
00:01:37,020 --> 00:01:43,679
mode of operation around it to for

39
00:01:39,930 --> 00:01:45,329
example get rid of this determinism so

40
00:01:43,680 --> 00:01:46,950
for examples of this to occur block

41
00:01:45,329 --> 00:01:51,419
ciphers includes skinny

42
00:01:46,950 --> 00:01:53,399
Monte's and comma and one way to

43
00:01:51,420 --> 00:01:55,799
construct such tweakable block ciphers

44
00:01:53,399 --> 00:02:01,829
is actually called the twiki framework

45
00:01:55,799 --> 00:02:04,619
and this 3d framework essentially an

46
00:02:01,829 --> 00:02:06,419
Espeon network at the bottom where we

47
00:02:04,619 --> 00:02:10,318
have this run function that gets

48
00:02:06,420 --> 00:02:12,500
iterated many times and we additionally

49
00:02:10,318 --> 00:02:14,500
have this twiki schedule which

50
00:02:12,500 --> 00:02:17,510
takes the tweak input and the key and

51
00:02:14,500 --> 00:02:21,110
then has some linear functions that

52
00:02:17,510 --> 00:02:23,959
produce at a tweaked key around TWiki

53
00:02:21,110 --> 00:02:25,940
for each round which then gets added to

54
00:02:23,960 --> 00:02:27,980
the current state in the encryption and

55
00:02:25,940 --> 00:02:30,640
this framework has some very interesting

56
00:02:27,980 --> 00:02:33,760
properties so most of the time this

57
00:02:30,640 --> 00:02:37,309
tweak schedule is actually linear and

58
00:02:33,760 --> 00:02:39,709
the attacker which is useful for our

59
00:02:37,310 --> 00:02:43,730
attacks can actually control the tweak

60
00:02:39,709 --> 00:02:48,020
and in use some and use these properties

61
00:02:43,730 --> 00:02:49,429
for related tweak attacks so this gives

62
00:02:48,020 --> 00:02:53,150
the attack essentially much more freedom

63
00:02:49,430 --> 00:02:55,670
and can improve existing attacks and we

64
00:02:53,150 --> 00:02:57,830
are going to focus on differential

65
00:02:55,670 --> 00:03:00,649
cryptanalysis so differential

66
00:02:57,830 --> 00:03:02,780
cryptanalysis we are looking at the

67
00:03:00,650 --> 00:03:05,600
differential trail where we are looking

68
00:03:02,780 --> 00:03:09,880
at an input difference between two

69
00:03:05,600 --> 00:03:12,260
message pairs in the message input and

70
00:03:09,880 --> 00:03:14,799
differential trail which with some

71
00:03:12,260 --> 00:03:17,720
probability results in an output

72
00:03:14,800 --> 00:03:21,130
difference in some states and that we

73
00:03:17,720 --> 00:03:25,150
can for example guess the last run key

74
00:03:21,130 --> 00:03:27,829
calculate back and verify that our

75
00:03:25,150 --> 00:03:31,519
reciting state actually corresponds with

76
00:03:27,830 --> 00:03:33,890
this trial with using this probability

77
00:03:31,519 --> 00:03:36,890
calculation we can then eliminate wrong

78
00:03:33,890 --> 00:03:40,059
key guesses and we can also do this in

79
00:03:36,890 --> 00:03:43,458
the context of tweakable block ciphers

80
00:03:40,060 --> 00:03:46,970
where we then can also use this freedom

81
00:03:43,459 --> 00:03:48,680
that we have in the tweak to introduce

82
00:03:46,970 --> 00:03:51,500
more differences and cancel out

83
00:03:48,680 --> 00:03:55,730
differences during this differential

84
00:03:51,500 --> 00:04:00,049
trade so let's talk about mantissa

85
00:03:55,730 --> 00:04:03,429
mantis was introduced at crypto 2016 and

86
00:04:00,049 --> 00:04:05,750
it's a tweakable block cipher that also

87
00:04:03,430 --> 00:04:09,920
tries to have the gold have a very low

88
00:04:05,750 --> 00:04:12,680
latency and the two official round at

89
00:04:09,920 --> 00:04:13,750
two official barons minus five with try

90
00:04:12,680 --> 00:04:17,260
France and mint

91
00:04:13,750 --> 00:04:21,329
with 16 rounds and in addition to also

92
00:04:17,260 --> 00:04:25,330
using this TWiki framework they also

93
00:04:21,329 --> 00:04:27,250
mantis is also a reflector cipher where

94
00:04:25,330 --> 00:04:30,070
we have this eye for reflection property

95
00:04:27,250 --> 00:04:33,400
that we can use the same circuit for

96
00:04:30,070 --> 00:04:37,270
encryption and decryption and this also

97
00:04:33,400 --> 00:04:41,320
has some very sub properties that we can

98
00:04:37,270 --> 00:04:45,210
use that induce symmetry on both sides

99
00:04:41,320 --> 00:04:45,210
of essentially this encryption process

100
00:04:45,720 --> 00:04:53,970
so mantis the run function of mantis has

101
00:04:49,120 --> 00:04:56,530
this very lightweight operations the

102
00:04:53,970 --> 00:05:00,880
4-bit evolutive sbox

103
00:04:56,530 --> 00:05:04,030
which is taken from Midori we have ads

104
00:05:00,880 --> 00:05:06,040
key and at constant steps we have a very

105
00:05:04,030 --> 00:05:09,369
fast permutation of the state cells and

106
00:05:06,040 --> 00:05:13,750
we also have a very lightweight BMDs

107
00:05:09,370 --> 00:05:15,640
matrix for the mix count step and we

108
00:05:13,750 --> 00:05:19,120
also have this tweak schedule which is

109
00:05:15,640 --> 00:05:21,130
used in the tweak in the twiki schedule

110
00:05:19,120 --> 00:05:25,690
to permute the current state of the

111
00:05:21,130 --> 00:05:29,860
tweak so now I'm going to present this

112
00:05:25,690 --> 00:05:32,410
attack strategy where we allow input

113
00:05:29,860 --> 00:05:35,410
difference in the message and in the

114
00:05:32,410 --> 00:05:38,590
tweak and essentially use the freedom

115
00:05:35,410 --> 00:05:40,750
that we get by also allowing differences

116
00:05:38,590 --> 00:05:45,060
in the tweak state to improve the

117
00:05:40,750 --> 00:05:48,669
differential characteristics and this

118
00:05:45,060 --> 00:05:53,140
strategy was already applied to mantis 5

119
00:05:48,669 --> 00:05:57,310
at FSE 2017 so if we look at this

120
00:05:53,140 --> 00:06:02,110
picture of mantis it has the whole

121
00:05:57,310 --> 00:06:05,470
mattes 5 it's has to hold essentially 14

122
00:06:02,110 --> 00:06:08,460
rounds and here we can see a

123
00:06:05,470 --> 00:06:10,350
differential train where we fix a

124
00:06:08,460 --> 00:06:14,200
specific difference

125
00:06:10,350 --> 00:06:18,510
States L so this each of those states s

126
00:06:14,200 --> 00:06:20,740
represents a neighbor and this red color

127
00:06:18,510 --> 00:06:22,990
essentially means that we allow a single

128
00:06:20,740 --> 00:06:26,650
fixed state difference

129
00:06:22,990 --> 00:06:29,650
for this differential trail here and if

130
00:06:26,650 --> 00:06:31,750
we look at this concrete tray this has a

131
00:06:29,650 --> 00:06:35,549
differential characteristic with a

132
00:06:31,750 --> 00:06:40,450
probability of 2 to the minus 72 and

133
00:06:35,550 --> 00:06:45,940
that's essentially almost optimal for

134
00:06:40,450 --> 00:06:48,909
Mance's 5 but still not that good so we

135
00:06:45,940 --> 00:06:53,469
can't use this tray directly to with a

136
00:06:48,910 --> 00:06:56,380
differential attack so if we go to the

137
00:06:53,470 --> 00:06:59,830
other direction and allow every possible

138
00:06:56,380 --> 00:07:01,570
tweak every possible difference we

139
00:06:59,830 --> 00:07:03,760
arrive at essentially a truncated

140
00:07:01,570 --> 00:07:06,280
differential characteristic where we

141
00:07:03,760 --> 00:07:08,020
only care about if the state cell is

142
00:07:06,280 --> 00:07:11,950
active or not so if there is a

143
00:07:08,020 --> 00:07:18,099
difference or if both cells are the same

144
00:07:11,950 --> 00:07:20,530
in each message so this of course means

145
00:07:18,100 --> 00:07:22,390
that the sbox transition works with

146
00:07:20,530 --> 00:07:25,840
probability 1 but then we have some

147
00:07:22,390 --> 00:07:28,530
other constraints like in for example in

148
00:07:25,840 --> 00:07:31,989
the mixed column step and overall the

149
00:07:28,530 --> 00:07:34,419
probability that a given message pair

150
00:07:31,990 --> 00:07:36,460
with this truncated input difference

151
00:07:34,420 --> 00:07:38,920
follows this truncated differential

152
00:07:36,460 --> 00:07:41,200
characteristics is also about 2 to the

153
00:07:38,920 --> 00:07:46,810
minus 100 so or something not that great

154
00:07:41,200 --> 00:07:50,530
so one of the ideas was to kind of mix

155
00:07:46,810 --> 00:07:53,410
this process and restrict first of all

156
00:07:50,530 --> 00:07:55,869
the input difference by the difference

157
00:07:53,410 --> 00:07:59,050
in the tweak which we as an attacker can

158
00:07:55,870 --> 00:08:02,380
freely choose and if we fix this in this

159
00:07:59,050 --> 00:08:07,300
tweak difference to a very to a single

160
00:08:02,380 --> 00:08:09,670
value we can propagate these constraints

161
00:08:07,300 --> 00:08:11,770
induced by this single difference to

162
00:08:09,670 --> 00:08:15,340
other state cells and this looks

163
00:08:11,770 --> 00:08:16,900
somewhat like this so we have much more

164
00:08:15,340 --> 00:08:22,169
colors and these colors as I said

165
00:08:16,900 --> 00:08:25,450
essentially represent how many different

166
00:08:22,170 --> 00:08:28,600
differences are allowed in this state

167
00:08:25,450 --> 00:08:31,510
cell and as we can see this cluster of

168
00:08:28,600 --> 00:08:34,600
differentials as we call it is has a

169
00:08:31,510 --> 00:08:35,990
much higher probability than both the

170
00:08:34,600 --> 00:08:39,469
single differential character

171
00:08:35,990 --> 00:08:42,919
stakes and whole evaluation of this

172
00:08:39,469 --> 00:08:44,870
truncated different truncated

173
00:08:42,919 --> 00:08:46,399
differential characteristics where we

174
00:08:44,870 --> 00:08:48,560
see this cluster actually has a

175
00:08:46,399 --> 00:08:54,160
probability of about two to the minus

176
00:08:48,560 --> 00:08:57,410
thirteen nine and then using some clever

177
00:08:54,160 --> 00:09:01,160
matching of message pairs at the input

178
00:08:57,410 --> 00:09:04,250
phase which we can actually generate

179
00:09:01,160 --> 00:09:07,790
enough message pairs that we expect one

180
00:09:04,250 --> 00:09:09,740
of this one of these pairs to follow

181
00:09:07,790 --> 00:09:12,199
this characteristic and we can do that

182
00:09:09,740 --> 00:09:16,310
with essentially much lower data

183
00:09:12,200 --> 00:09:19,820
complexity so for to generate the single

184
00:09:16,310 --> 00:09:24,739
pair following this cluster we need

185
00:09:19,820 --> 00:09:29,600
about two to the 25 chosen message PS so

186
00:09:24,740 --> 00:09:32,600
this attack strategy from -5 is very

187
00:09:29,600 --> 00:09:36,050
practical and was even concretely

188
00:09:32,600 --> 00:09:38,990
implemented and took a whole one single

189
00:09:36,050 --> 00:09:46,130
hour on a standard laptop to recover the

190
00:09:38,990 --> 00:09:49,850
secret key for Montes 5 so most of the

191
00:09:46,130 --> 00:09:53,270
work for this previous strategy format

192
00:09:49,850 --> 00:09:55,220
is 5 so calculating the probability of

193
00:09:53,270 --> 00:09:56,899
this differential cluster and finding

194
00:09:55,220 --> 00:10:01,209
this differential cluster was actually

195
00:09:56,899 --> 00:10:04,250
done by hand and this is one of the

196
00:10:01,209 --> 00:10:06,739
areas we are trying to improve so how

197
00:10:04,250 --> 00:10:08,450
can we find these clusters more

198
00:10:06,740 --> 00:10:10,279
automatically and how can we then

199
00:10:08,450 --> 00:10:13,730
evaluate the probability of this

200
00:10:10,279 --> 00:10:17,360
differential clusters so if we look as a

201
00:10:13,730 --> 00:10:20,120
short example so if we have a single

202
00:10:17,360 --> 00:10:21,980
differential characteristics it's very

203
00:10:20,120 --> 00:10:23,570
easy to calculate the success

204
00:10:21,980 --> 00:10:26,240
probability of this single

205
00:10:23,570 --> 00:10:28,910
characteristic because we just go to the

206
00:10:26,240 --> 00:10:32,420
difference distribution table and look

207
00:10:28,910 --> 00:10:34,670
at the possible transition probabilities

208
00:10:32,420 --> 00:10:37,390
from for example this S box step to the

209
00:10:34,670 --> 00:10:40,069
next s box step and also can verify that

210
00:10:37,390 --> 00:10:42,199
based on the properties of this

211
00:10:40,070 --> 00:10:45,020
mixcolumns layer the distance ition

212
00:10:42,200 --> 00:10:47,750
holds with probability one and that the

213
00:10:45,020 --> 00:10:49,819
S box transitions here in our case

214
00:10:47,750 --> 00:10:54,230
with probability two to the minus four

215
00:10:49,820 --> 00:10:58,160
each but if we now allow more than a

216
00:10:54,230 --> 00:11:01,160
single difference per cell this picture

217
00:10:58,160 --> 00:11:03,290
gets a little bit different so here the

218
00:11:01,160 --> 00:11:07,670
green set essentially denotes all of the

219
00:11:03,290 --> 00:11:09,770
differences that are reachable in one

220
00:11:07,670 --> 00:11:14,089
evaluation of the sbox from this

221
00:11:09,770 --> 00:11:15,680
starting input difference a and from

222
00:11:14,090 --> 00:11:19,550
this difference of a we can actually

223
00:11:15,680 --> 00:11:23,120
reach for other difference in the day

224
00:11:19,550 --> 00:11:25,400
and these are AF D and v and if we allow

225
00:11:23,120 --> 00:11:27,140
all of those of course this transition

226
00:11:25,400 --> 00:11:32,180
probability for the first S box step

227
00:11:27,140 --> 00:11:34,730
actually becomes one but then because we

228
00:11:32,180 --> 00:11:37,550
now have multiple allowed differences in

229
00:11:34,730 --> 00:11:39,140
the green cells we actually lose some

230
00:11:37,550 --> 00:11:41,540
probability in the mix column step so

231
00:11:39,140 --> 00:11:44,300
just so that this transition actually

232
00:11:41,540 --> 00:11:46,370
works again so for this specific

233
00:11:44,300 --> 00:11:48,349
transitions in the mix column step to

234
00:11:46,370 --> 00:11:50,870
work this probability needs to be at

235
00:11:48,350 --> 00:11:53,240
this works with probability of 2 to the

236
00:11:50,870 --> 00:11:55,820
minus 2 and we have this constraint that

237
00:11:53,240 --> 00:11:58,250
actually these two input cells need to

238
00:11:55,820 --> 00:12:01,580
have the same input difference for this

239
00:11:58,250 --> 00:12:03,710
transition to work and then later we

240
00:12:01,580 --> 00:12:07,130
have this case where we want to go back

241
00:12:03,710 --> 00:12:09,290
from essentially a state where we have

242
00:12:07,130 --> 00:12:11,060
multiple difference to a single

243
00:12:09,290 --> 00:12:12,560
difference and then there's this

244
00:12:11,060 --> 00:12:16,390
question okay how do we actually

245
00:12:12,560 --> 00:12:21,469
calculate this probability and if we

246
00:12:16,390 --> 00:12:24,020
allow more than one state difference in

247
00:12:21,470 --> 00:12:29,780
this last state here how do we calculate

248
00:12:24,020 --> 00:12:32,000
such a probability and the the previous

249
00:12:29,780 --> 00:12:34,280
approach was to compute this transition

250
00:12:32,000 --> 00:12:37,880
probability based on the DDT and the

251
00:12:34,280 --> 00:12:42,050
actual sets that I allowed here so as I

252
00:12:37,880 --> 00:12:43,820
said for a single input difference

253
00:12:42,050 --> 00:12:45,319
mapping to all its possible output

254
00:12:43,820 --> 00:12:50,330
difference this probability is of course

255
00:12:45,320 --> 00:12:53,120
1 but then for mapping this set of AF d5

256
00:12:50,330 --> 00:12:57,740
to another set of 55 we essentially go

257
00:12:53,120 --> 00:12:59,290
to DDT and sum up and multiply the

258
00:12:57,740 --> 00:13:01,270
probabilities for

259
00:12:59,290 --> 00:13:03,430
each possible transition so we look at

260
00:13:01,270 --> 00:13:07,270
the probability that a transitions today

261
00:13:03,430 --> 00:13:10,109
and A to F and a to D and so on and we

262
00:13:07,270 --> 00:13:12,970
essentially account for all of these

263
00:13:10,110 --> 00:13:17,530
probability transitions so here we can

264
00:13:12,970 --> 00:13:20,500
see that in the case of where we go from

265
00:13:17,530 --> 00:13:22,120
this step of eft five a lot of

266
00:13:20,500 --> 00:13:24,340
differences to the same set this

267
00:13:22,120 --> 00:13:27,510
probabilities actually 2 to the minus 1

268
00:13:24,340 --> 00:13:29,620
and if we allow these differences and

269
00:13:27,510 --> 00:13:31,450
these multiple states

270
00:13:29,620 --> 00:13:33,430
this essentially improves the overall

271
00:13:31,450 --> 00:13:37,420
probability of this differential trail

272
00:13:33,430 --> 00:13:41,979
by a lot and so this was the way this

273
00:13:37,420 --> 00:13:45,400
was computed they back in the FSC 2017

274
00:13:41,980 --> 00:13:47,290
paper and then during the experiments

275
00:13:45,400 --> 00:13:51,449
and during the actual implementation of

276
00:13:47,290 --> 00:13:53,199
this detect them we notice that this the

277
00:13:51,450 --> 00:13:56,110
concrete probability of these

278
00:13:53,200 --> 00:14:00,520
experiments actually doesn't correspond

279
00:13:56,110 --> 00:14:03,730
that well to this to this probability

280
00:14:00,520 --> 00:14:07,079
and in practice it was actually more

281
00:14:03,730 --> 00:14:10,060
successful the attacks it was even more

282
00:14:07,080 --> 00:14:12,000
even more pious than expected that

283
00:14:10,060 --> 00:14:14,709
followed our differential cluster and

284
00:14:12,000 --> 00:14:19,420
this was actually by more than a factor

285
00:14:14,710 --> 00:14:22,240
of two and so one thing that we assumed

286
00:14:19,420 --> 00:14:24,250
here was that we always have a uniform

287
00:14:22,240 --> 00:14:27,370
distribution of these allowed

288
00:14:24,250 --> 00:14:30,670
differences and of course if we take

289
00:14:27,370 --> 00:14:33,160
care and actually try to verify this

290
00:14:30,670 --> 00:14:37,390
that this is actually not the case for

291
00:14:33,160 --> 00:14:39,790
most of our states so what we did was we

292
00:14:37,390 --> 00:14:41,860
extended this calculation with some

293
00:14:39,790 --> 00:14:45,310
probability distribution vectors and

294
00:14:41,860 --> 00:14:47,860
here we can see for example that if we

295
00:14:45,310 --> 00:14:50,319
start with a uniform distribution of

296
00:14:47,860 --> 00:14:52,450
okay all of our possible differences are

297
00:14:50,320 --> 00:14:53,950
a and then based on the different

298
00:14:52,450 --> 00:14:56,170
distribution table we move to a state

299
00:14:53,950 --> 00:14:57,490
where we have also a uniform

300
00:14:56,170 --> 00:15:00,370
distribution of these four differences

301
00:14:57,490 --> 00:15:02,950
but then the next step we actually see

302
00:15:00,370 --> 00:15:04,450
that a is much more likely to map to

303
00:15:02,950 --> 00:15:06,310
these four differences than the other

304
00:15:04,450 --> 00:15:09,730
three and so we get a skewed

305
00:15:06,310 --> 00:15:11,599
distribution and this continues

306
00:15:09,730 --> 00:15:14,810
throughout this

307
00:15:11,600 --> 00:15:16,730
sbox layers and actually then we can try

308
00:15:14,810 --> 00:15:18,529
to more accurately calculate this

309
00:15:16,730 --> 00:15:21,529
probability and see that we're actually

310
00:15:18,529 --> 00:15:23,269
in the second part here get a much

311
00:15:21,529 --> 00:15:26,449
better probability for our cluster

312
00:15:23,269 --> 00:15:29,440
because this transition probability is

313
00:15:26,449 --> 00:15:31,459
now much higher because of this weighted

314
00:15:29,440 --> 00:15:36,740
vector where we have much more

315
00:15:31,459 --> 00:15:39,529
appearances of the difference a so we

316
00:15:36,740 --> 00:15:43,069
then took this one at this improved

317
00:15:39,529 --> 00:15:46,339
probability calculation and automated

318
00:15:43,069 --> 00:15:48,560
the whole process by a tow chain so

319
00:15:46,339 --> 00:15:51,470
first of all we search for a promising

320
00:15:48,560 --> 00:15:53,719
truncated characteristic and we do that

321
00:15:51,470 --> 00:15:57,079
by our model but you can also do that

322
00:15:53,720 --> 00:15:58,880
using for example a Sat solver and then

323
00:15:57,079 --> 00:16:01,099
we fix a promising quick difference and

324
00:15:58,880 --> 00:16:03,170
then we propagate our constraints

325
00:16:01,100 --> 00:16:05,569
throughout the cipher and we do that

326
00:16:03,170 --> 00:16:08,060
service for the sbox step the key

327
00:16:05,569 --> 00:16:10,099
addition at the permeate sales layer and

328
00:16:08,060 --> 00:16:13,790
we do that column voice for the mix

329
00:16:10,100 --> 00:16:15,829
columns and then we at the end calculate

330
00:16:13,790 --> 00:16:19,099
the probability and the data complexity

331
00:16:15,829 --> 00:16:20,839
automatically and because it's automated

332
00:16:19,100 --> 00:16:23,120
by a tool chain we can now look at much

333
00:16:20,839 --> 00:16:27,560
more of these differential clusters and

334
00:16:23,120 --> 00:16:29,630
we have a whole bunch of them and then

335
00:16:27,560 --> 00:16:33,040
we found a promising one that actually

336
00:16:29,630 --> 00:16:38,569
allowed us to attack more runs of mantas

337
00:16:33,040 --> 00:16:40,849
and this tool is actually public so if

338
00:16:38,569 --> 00:16:44,870
you want you can go to github and play

339
00:16:40,850 --> 00:16:47,660
around with it if you feel the need so

340
00:16:44,870 --> 00:16:51,699
as I said we had a look at a whole bunch

341
00:16:47,660 --> 00:16:53,930
of clusters and then we found one 496

342
00:16:51,699 --> 00:16:58,130
which allowed us to mount the key

343
00:16:53,930 --> 00:17:03,620
recovery attack on 96 and here you can

344
00:16:58,130 --> 00:17:05,419
see some part of this cluster and one

345
00:17:03,620 --> 00:17:07,369
nice feature of this tool is it actually

346
00:17:05,419 --> 00:17:10,730
also produces these pretty pictures for

347
00:17:07,369 --> 00:17:13,520
you so the average probability of this

348
00:17:10,730 --> 00:17:15,380
cluster so the probability that a

349
00:17:13,520 --> 00:17:19,209
message pair that conforms to this input

350
00:17:15,380 --> 00:17:21,700
differences follows this cluster and

351
00:17:19,209 --> 00:17:26,010
conforms to the output difference

352
00:17:21,700 --> 00:17:33,070
it's about 2 to the minus 70 at 30 -

353
00:17:26,010 --> 00:17:34,720
67.7 and again using this matching of it

354
00:17:33,070 --> 00:17:36,929
is careful matching of chosen input

355
00:17:34,720 --> 00:17:41,230
messages we can get the data complexity

356
00:17:36,930 --> 00:17:45,480
again down to about 2 to the 64 a - to

357
00:17:41,230 --> 00:17:48,700
the 46.7 person

358
00:17:45,480 --> 00:17:54,670
so the overall tech complexity for this

359
00:17:48,700 --> 00:17:58,540
akira camera attack uses 2/3 55.1 data

360
00:17:54,670 --> 00:18:02,080
complexity and about 2 to the 55.5 time

361
00:17:58,540 --> 00:18:05,710
complexity and which gives us a data

362
00:18:02,080 --> 00:18:08,169
time product of 2 to the 110 and this is

363
00:18:05,710 --> 00:18:11,500
this is much lower than the general data

364
00:18:08,170 --> 00:18:16,630
time product for an attack of about 2 to

365
00:18:11,500 --> 00:18:19,570
the 126 so this key recovery attack is

366
00:18:16,630 --> 00:18:22,240
actually not that trigger because we

367
00:18:19,570 --> 00:18:24,760
have to do this in my teeth multiple

368
00:18:22,240 --> 00:18:26,860
phases where we first guess some parts

369
00:18:24,760 --> 00:18:29,170
of this first round key the place and

370
00:18:26,860 --> 00:18:31,840
filter gets passed the last round key

371
00:18:29,170 --> 00:18:34,720
and apply some filter and takes this

372
00:18:31,840 --> 00:18:36,939
combined information and guess some bits

373
00:18:34,720 --> 00:18:39,910
of combined round keys 2 and 11 and

374
00:18:36,940 --> 00:18:41,700
apply another filter and then we store

375
00:18:39,910 --> 00:18:44,910
all of these key guesses and intersect

376
00:18:41,700 --> 00:18:47,500
key guesses from multiple iterations and

377
00:18:44,910 --> 00:18:52,030
detailed process for this Caracara tech

378
00:18:47,500 --> 00:18:53,500
can be found in the paper so and another

379
00:18:52,030 --> 00:18:56,560
nice feature is that we actually use

380
00:18:53,500 --> 00:18:59,170
this probability calculation also to

381
00:18:56,560 --> 00:19:02,350
calculate the probability of our filter

382
00:18:59,170 --> 00:19:04,210
so that we can more accurately predict

383
00:19:02,350 --> 00:19:09,100
how many wrong key guesses will be

384
00:19:04,210 --> 00:19:12,220
filtered by this during the scary camera

385
00:19:09,100 --> 00:19:14,590
attack and we do that by essentially

386
00:19:12,220 --> 00:19:19,500
using the same methodology and computing

387
00:19:14,590 --> 00:19:23,649
backward starting from the ciphertext so

388
00:19:19,500 --> 00:19:26,170
we actually did a lot of experiments on

389
00:19:23,650 --> 00:19:28,950
this to verify that this attack is

390
00:19:26,170 --> 00:19:31,740
actually practical this attack

391
00:19:28,950 --> 00:19:35,400
actually works with this complexity and

392
00:19:31,740 --> 00:19:36,900
that the probability that we calculated

393
00:19:35,400 --> 00:19:41,490
for this differential cluster is

394
00:19:36,900 --> 00:19:44,760
actually pretty accurate so as we can

395
00:19:41,490 --> 00:19:47,220
see here this is some experiments that

396
00:19:44,760 --> 00:19:49,860
try to verify this probability of this

397
00:19:47,220 --> 00:19:53,130
characteristics and we did that for

398
00:19:49,860 --> 00:19:56,100
random keys and fixed keys and we can

399
00:19:53,130 --> 00:19:58,230
see that essentially our experiments

400
00:19:56,100 --> 00:20:00,480
followed a theoretical estimate very

401
00:19:58,230 --> 00:20:01,260
closely so off reliance essentially on

402
00:20:00,480 --> 00:20:06,300
top of each other

403
00:20:01,260 --> 00:20:09,750
and at the end we are getting into in a

404
00:20:06,300 --> 00:20:12,300
very low sample space because this

405
00:20:09,750 --> 00:20:16,440
probabilities of course get very small

406
00:20:12,300 --> 00:20:18,780
so we had to do a lot of iterations to

407
00:20:16,440 --> 00:20:26,070
get pairs that follow this trail event

408
00:20:18,780 --> 00:20:29,660
at this point and we essentially verify

409
00:20:26,070 --> 00:20:33,240
this using an equivalent of 2 to 255

410
00:20:29,660 --> 00:20:35,700
message pairs in a set and equivalent

411
00:20:33,240 --> 00:20:38,460
because of course to 255 message pairs

412
00:20:35,700 --> 00:20:39,980
is quite a lot but in the paper we

413
00:20:38,460 --> 00:20:42,570
described a method where we can

414
00:20:39,980 --> 00:20:45,480
deterministically subtly skipped the

415
00:20:42,570 --> 00:20:48,899
first s box layer and save a factor of

416
00:20:45,480 --> 00:20:52,200
about 2 to the 10 so we only needed to

417
00:20:48,900 --> 00:20:55,950
produce 2 to the 45 message pairs which

418
00:20:52,200 --> 00:20:58,940
was actually doable and we verified this

419
00:20:55,950 --> 00:21:02,310
characteristic up until about round 10

420
00:20:58,940 --> 00:21:04,740
where the number of solutions following

421
00:21:02,310 --> 00:21:08,040
this characteristic was actually quite

422
00:21:04,740 --> 00:21:11,780
low about 6 these are these empty points

423
00:21:08,040 --> 00:21:14,909
at the end and we also verified that our

424
00:21:11,780 --> 00:21:17,270
attack method described in the paper has

425
00:21:14,910 --> 00:21:23,100
a good success probability and

426
00:21:17,270 --> 00:21:25,430
essentially one important property for

427
00:21:23,100 --> 00:21:27,780
our attack is that each of our

428
00:21:25,430 --> 00:21:29,430
iterations has actually at least one

429
00:21:27,780 --> 00:21:33,899
message appear that follows this

430
00:21:29,430 --> 00:21:35,600
characteristic and we also verified that

431
00:21:33,900 --> 00:21:39,889
this happens

432
00:21:35,600 --> 00:21:42,859
and we can see that that we verify this

433
00:21:39,889 --> 00:21:45,139
at the mixed comments layer front nine

434
00:21:42,859 --> 00:21:48,769
we can see the green line actually

435
00:21:45,139 --> 00:21:51,168
follows the expected distribution which

436
00:21:48,769 --> 00:21:54,470
would be a binomial distribution very

437
00:21:51,169 --> 00:21:56,659
closely for the inner runs for example

438
00:21:54,470 --> 00:21:57,769
if we go back to round five this is

439
00:21:56,659 --> 00:22:00,320
actually not the case

440
00:21:57,769 --> 00:22:03,009
that each of these iterations would have

441
00:22:00,320 --> 00:22:07,309
at least one conforming message p.m.

442
00:22:03,009 --> 00:22:10,669
because at this point the solutions are

443
00:22:07,309 --> 00:22:12,830
very essentially clustered together so

444
00:22:10,669 --> 00:22:14,330
we have several iterations where we have

445
00:22:12,830 --> 00:22:16,639
lots of solutions that we have several

446
00:22:14,330 --> 00:22:19,449
iterations where we don't have any

447
00:22:16,639 --> 00:22:22,758
solutions but this essentially gives out

448
00:22:19,450 --> 00:22:25,580
over the whole Sipho so for the later

449
00:22:22,759 --> 00:22:28,039
rounds we can see that this approaches

450
00:22:25,580 --> 00:22:32,658
the binomial distribution quite nicely

451
00:22:28,039 --> 00:22:35,239
so we were pretty sure that our approach

452
00:22:32,659 --> 00:22:36,799
does actually work and based on this we

453
00:22:35,239 --> 00:22:39,889
then calculated the success probability

454
00:22:36,799 --> 00:22:42,019
of the attack and therefore then the

455
00:22:39,889 --> 00:22:48,158
concrete parameters for the data

456
00:22:42,019 --> 00:22:50,960
complexity and time complexity okay so

457
00:22:48,159 --> 00:22:53,539
let's come to a conclusion so we're

458
00:22:50,960 --> 00:22:55,970
presented again this clustered related

459
00:22:53,539 --> 00:22:58,070
tweaked differentials and the general

460
00:22:55,970 --> 00:23:00,979
methods to find and evaluate these

461
00:22:58,070 --> 00:23:03,109
clusters of differentials and we also

462
00:23:00,979 --> 00:23:04,820
presented this improved probability

463
00:23:03,109 --> 00:23:05,739
calculation for these clusters of

464
00:23:04,820 --> 00:23:08,629
differentials

465
00:23:05,739 --> 00:23:11,679
using this and the automatic tool chain

466
00:23:08,629 --> 00:23:15,019
we found in a cluster for Manta six and

467
00:23:11,679 --> 00:23:17,899
essentially used it to Monte kirikiriroa

468
00:23:15,019 --> 00:23:20,149
attack and we also did extensive

469
00:23:17,899 --> 00:23:24,379
experiments to verify the validity of

470
00:23:20,149 --> 00:23:26,330
this attack and methods thank you for

471
00:23:24,379 --> 00:23:29,469
your attention and if there are any

472
00:23:26,330 --> 00:23:29,470
questions I will be happy to answer

473
00:23:33,330 --> 00:23:41,980
so do you have any question so do you

474
00:23:40,870 --> 00:23:46,750
have an idea

475
00:23:41,980 --> 00:23:49,810
well this how this method works but not

476
00:23:46,750 --> 00:23:51,940
how wise this method works especially at

477
00:23:49,810 --> 00:23:55,240
mantis-like what has a crit is so that

478
00:23:51,940 --> 00:23:57,670
it's working yeah so this we also try to

479
00:23:55,240 --> 00:23:59,620
apply it on other ciphers and it works

480
00:23:57,670 --> 00:24:01,710
essentially very well for Mundt is

481
00:23:59,620 --> 00:24:05,320
because of this interplay between the

482
00:24:01,710 --> 00:24:09,940
the concrete s box and the linear layer

483
00:24:05,320 --> 00:24:14,230
so essentially the the S box has this

484
00:24:09,940 --> 00:24:17,170
property where we have high probability

485
00:24:14,230 --> 00:24:20,050
sets that map to each other and the

486
00:24:17,170 --> 00:24:23,200
linear layer is actually so lightweight

487
00:24:20,050 --> 00:24:25,149
that we can more easily propagate these

488
00:24:23,200 --> 00:24:28,510
sets without actually changing them

489
00:24:25,150 --> 00:24:30,790
throughout this throughout the cipher so

490
00:24:28,510 --> 00:24:32,200
essentially in an interplay between the

491
00:24:30,790 --> 00:24:35,320
linear layer the concrete linear layer

492
00:24:32,200 --> 00:24:38,080
and the concrete s box that is used in

493
00:24:35,320 --> 00:24:45,939
Ventus which work very well together for

494
00:24:38,080 --> 00:24:47,110
this attack okay especially in regard to

495
00:24:45,940 --> 00:24:50,140
the remarks you just made about

496
00:24:47,110 --> 00:24:51,760
interaction of his box layer and linear

497
00:24:50,140 --> 00:24:53,980
layer have you tried to apply these

498
00:24:51,760 --> 00:24:56,050
results to Karma yeah we have actually

499
00:24:53,980 --> 00:24:58,660
tried to apply these results of karma

500
00:24:56,050 --> 00:25:01,060
and we've also observed some clustering

501
00:24:58,660 --> 00:25:05,770
from some clustering effects for comma

502
00:25:01,060 --> 00:25:09,700
but they are not as severe as for Montes

503
00:25:05,770 --> 00:25:12,580
and we have found some trails but not

504
00:25:09,700 --> 00:25:14,710
some clusters but not high probability

505
00:25:12,580 --> 00:25:17,159
clusters that allow a key recovery

506
00:25:14,710 --> 00:25:17,160
attack

507
00:25:18,320 --> 00:25:26,300
so comma 4 is easily possible yes if you

508
00:25:24,170 --> 00:25:29,750
allow it for data and time complexity

509
00:25:26,300 --> 00:25:31,520
and 4 comma 5 its we didn't manage to

510
00:25:29,750 --> 00:25:35,210
monitor the tech move to full data and

511
00:25:31,520 --> 00:25:37,910
time complexity so we have some we have

512
00:25:35,210 --> 00:25:39,260
a differential cluster but it's the

513
00:25:37,910 --> 00:25:48,980
probability is not high enough to mount

514
00:25:39,260 --> 00:25:51,650
this attacks thank you thanks for the

515
00:25:48,980 --> 00:25:53,990
nice talk you mentioned that the

516
00:25:51,650 --> 00:25:57,140
practical evaluation of the Monty's file

517
00:25:53,990 --> 00:25:59,360
for tech it turns out that the attack is

518
00:25:57,140 --> 00:26:01,400
actually better than expected yes so

519
00:25:59,360 --> 00:26:05,740
what it's essentially better than

520
00:26:01,400 --> 00:26:07,730
expected because in the 2017 paper the

521
00:26:05,740 --> 00:26:09,890
previous method for this probability

522
00:26:07,730 --> 00:26:12,590
calculation was used so essentially the

523
00:26:09,890 --> 00:26:14,180
probability of the cluster was estimated

524
00:26:12,590 --> 00:26:15,620
to be lower than it actually is in

525
00:26:14,180 --> 00:26:17,510
practice so if we apply this new

526
00:26:15,620 --> 00:26:19,580
probability calculation to the old

527
00:26:17,510 --> 00:26:21,650
cluster we get essentially this factor

528
00:26:19,580 --> 00:26:23,030
of 2 that we observed in a practical

529
00:26:21,650 --> 00:26:25,910
attack back-ended

530
00:26:23,030 --> 00:26:29,149
more closely corresponds to the concrete

531
00:26:25,910 --> 00:26:32,270
attack because in the old paper I

532
00:26:29,150 --> 00:26:35,960
remember that the the data complexity

533
00:26:32,270 --> 00:26:38,780
was more slightly higher then yeah we

534
00:26:35,960 --> 00:26:41,120
also in the earlier tag we also changed

535
00:26:38,780 --> 00:26:44,750
way we generate this initial structures

536
00:26:41,120 --> 00:26:48,350
to also combat these clustering effects

537
00:26:44,750 --> 00:26:52,550
that we observed in the final picture

538
00:26:48,350 --> 00:26:54,770
because for less rounds we then often

539
00:26:52,550 --> 00:26:57,669
have iterations where we have multiple

540
00:26:54,770 --> 00:27:00,560
pairs following the characteristic and

541
00:26:57,670 --> 00:27:02,650
more interations where no pair will

542
00:27:00,560 --> 00:27:04,730
follow the characteristics so it's not

543
00:27:02,650 --> 00:27:07,340
essentially not that uniformly

544
00:27:04,730 --> 00:27:10,850
distributed over all possible overall

545
00:27:07,340 --> 00:27:15,040
iterations so for this mantis 5 attack

546
00:27:10,850 --> 00:27:17,419
we tried to combat that by essentially

547
00:27:15,040 --> 00:27:19,010
taking different starting points as

548
00:27:17,420 --> 00:27:21,350
taking more different starting points

549
00:27:19,010 --> 00:27:25,629
for this initial message generation

550
00:27:21,350 --> 00:27:25,629
phase okay thank you

551
00:27:26,070 --> 00:27:34,909
so let's thanks it's bigger again

552
00:27:29,070 --> 00:27:34,909
[Applause]

