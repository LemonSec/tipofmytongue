1
00:00:00,120 --> 00:00:05,430
next talk is about zero correlation

2
00:00:02,070 --> 00:00:07,680
attacks on tweakable block ciphers with

3
00:00:05,430 --> 00:00:11,040
linear tweekly expansion authored by

4
00:00:07,680 --> 00:00:14,759
Ralph and Kelly Christophe the Roenick

5
00:00:11,040 --> 00:00:15,599
django random boy Gregory enter and

6
00:00:14,759 --> 00:00:25,730
Yosuke toto

7
00:00:15,599 --> 00:00:32,269
and Ralph is going to bring a quick

8
00:00:25,730 --> 00:00:35,760
expansion and let me start with a quick

9
00:00:32,270 --> 00:00:38,579
introduction so take your block cyphers

10
00:00:35,760 --> 00:00:40,559
as we all know compared to normal

11
00:00:38,579 --> 00:00:44,550
regular block ciphers at an additional

12
00:00:40,559 --> 00:00:46,760
tweak value and the tweak weather

13
00:00:44,550 --> 00:00:50,300
doesn't have to be secure so it's a

14
00:00:46,760 --> 00:00:53,280
publicly available value and it also

15
00:00:50,300 --> 00:00:56,069
gives them a techadon the freedom to

16
00:00:53,280 --> 00:01:00,059
choose the value and use it in an attack

17
00:00:56,070 --> 00:01:02,670
and the goal is to move the

18
00:01:00,059 --> 00:01:06,739
randomization from particle level to

19
00:01:02,670 --> 00:01:06,739
block cipher level using this tweak so

20
00:01:06,799 --> 00:01:11,850
how can we construct tweakable block

21
00:01:09,150 --> 00:01:13,799
ciphers so we can construct reroute drop

22
00:01:11,850 --> 00:01:16,559
surface by using modes for example

23
00:01:13,799 --> 00:01:19,470
yes GCM but there are also some

24
00:01:16,560 --> 00:01:21,979
dedicated to equal block ciphers like

25
00:01:19,470 --> 00:01:25,530
skinny Mantis camera and talk axis and

26
00:01:21,979 --> 00:01:29,780
most of them are built with this twiki

27
00:01:25,530 --> 00:01:34,799
framework introduced in 2014 and

28
00:01:29,780 --> 00:01:38,250
basically it's Kyoto netting block stuff

29
00:01:34,799 --> 00:01:41,430
like this down there but we also have a

30
00:01:38,250 --> 00:01:47,189
tweak schedule where we update the

31
00:01:41,430 --> 00:01:51,170
tweaks so our contributions so we

32
00:01:47,189 --> 00:01:55,258
analyze several tricky of block ciphers

33
00:01:51,170 --> 00:01:58,110
for Carmen Montes becomes instead of

34
00:01:55,259 --> 00:02:02,280
continuance we count the number of S

35
00:01:58,110 --> 00:02:06,149
boxes that we kinetic so we have an

36
00:02:02,280 --> 00:02:08,240
attack for camera 412 S box applications

37
00:02:06,149 --> 00:02:12,710
for Marcus or

38
00:02:08,240 --> 00:02:18,200
4:12 and for skinny we can take 20 runs

39
00:02:12,710 --> 00:02:22,970
for skinny 64 128 and for skinny 64 192

40
00:02:18,200 --> 00:02:26,049
we kinetic 23 runs and for example it's

41
00:02:22,970 --> 00:02:28,660
also interesting that comparing it to

42
00:02:26,050 --> 00:02:31,850
impossibility for initial attacks with a

43
00:02:28,660 --> 00:02:35,930
bigger attack actually improves about

44
00:02:31,850 --> 00:02:38,750
impossibility financial ethics so this

45
00:02:35,930 --> 00:02:41,180
is my overview of the talk so we give

46
00:02:38,750 --> 00:02:42,920
some preliminaries and I will explain

47
00:02:41,180 --> 00:02:45,170
the zero correlation attacks on Twitter

48
00:02:42,920 --> 00:02:48,309
blocks ahead and then I will show some

49
00:02:45,170 --> 00:02:52,510
applications to come mantis and skinny

50
00:02:48,310 --> 00:02:54,350
so first a short reminder but how

51
00:02:52,510 --> 00:02:57,290
differences in linear masks are

52
00:02:54,350 --> 00:03:01,940
propagated in a side in a cipher so of

53
00:02:57,290 --> 00:03:04,489
an XOR the differences a and P just sum

54
00:03:01,940 --> 00:03:07,670
up but an interesting part for tweakable

55
00:03:04,490 --> 00:03:09,500
block surface is when the difference is

56
00:03:07,670 --> 00:03:11,480
that the same because tandoc cancel out

57
00:03:09,500 --> 00:03:14,030
of an

58
00:03:11,480 --> 00:03:16,940
punching point they are the same and

59
00:03:14,030 --> 00:03:19,070
over an icebox which just can computed

60
00:03:16,940 --> 00:03:20,870
differences of distribution table and

61
00:03:19,070 --> 00:03:23,840
then it words with a certain probability

62
00:03:20,870 --> 00:03:26,960
and for linear masks is slightly

63
00:03:23,840 --> 00:03:32,690
different so when X or the masks are the

64
00:03:26,960 --> 00:03:37,520
same time branching point the again sum

65
00:03:32,690 --> 00:03:41,900
sum up and the sbox we can compute

66
00:03:37,520 --> 00:03:44,420
linear distribution table so when we

67
00:03:41,900 --> 00:03:47,420
ever evaluate the security of tweakable

68
00:03:44,420 --> 00:03:48,440
block ciphers and for differential

69
00:03:47,420 --> 00:03:52,040
cryptanalysis

70
00:03:48,440 --> 00:03:54,109
what we can do is basically we can add a

71
00:03:52,040 --> 00:03:56,690
difference in the tweak tweak and the

72
00:03:54,110 --> 00:03:58,700
difference in the state and then we can

73
00:03:56,690 --> 00:04:01,520
cancel the difference in the first one

74
00:03:58,700 --> 00:04:05,119
if they are the same and basically we

75
00:04:01,520 --> 00:04:07,540
get one runs for free and if we look at

76
00:04:05,120 --> 00:04:12,620
the same thing in linear cryptanalysis

77
00:04:07,540 --> 00:04:13,970
it was shown in FSC 2017 the tweak

78
00:04:12,620 --> 00:04:15,860
doesn't introduce new linear

79
00:04:13,970 --> 00:04:19,250
characteristics so that trick doesn't

80
00:04:15,860 --> 00:04:21,600
work but what was also hinted in that

81
00:04:19,250 --> 00:04:23,850
paper already was that the tweak

82
00:04:21,600 --> 00:04:25,380
it's additional restrictions which can

83
00:04:23,850 --> 00:04:31,680
then be used in serial correlation

84
00:04:25,380 --> 00:04:33,300
attacks so zero correlation attacks were

85
00:04:31,680 --> 00:04:36,050
first introduced by bottom of

86
00:04:33,300 --> 00:04:40,530
environment and basically it says that

87
00:04:36,050 --> 00:04:44,670
for two given masks alpha and beta it

88
00:04:40,530 --> 00:04:46,590
exploits correlation of exactly zero one

89
00:04:44,670 --> 00:04:49,290
of the drawbacks of serial correlation

90
00:04:46,590 --> 00:04:51,810
attacks is that memory requires a huge

91
00:04:49,290 --> 00:04:54,840
data complexity and what you can see

92
00:04:51,810 --> 00:04:57,660
down there is basically the zero

93
00:04:54,840 --> 00:05:00,630
correlation attack on foreign TS so what

94
00:04:57,660 --> 00:05:02,720
we do is we have some active masks in

95
00:05:00,630 --> 00:05:05,250
the in the beginning we incur with

96
00:05:02,720 --> 00:05:08,730
probability one we do the same phone

97
00:05:05,250 --> 00:05:10,860
from the bottom and we see that it

98
00:05:08,730 --> 00:05:16,860
doesn't match in the middle and it has a

99
00:05:10,860 --> 00:05:20,340
serial correlation so then how can we do

100
00:05:16,860 --> 00:05:22,590
that for tweak of a block ciphers so for

101
00:05:20,340 --> 00:05:25,229
tweaking prop surface let's start with a

102
00:05:22,590 --> 00:05:28,560
very basic to round to key word block

103
00:05:25,230 --> 00:05:31,590
cipher so what we can do against over

104
00:05:28,560 --> 00:05:35,400
the first excerpt must have to be the

105
00:05:31,590 --> 00:05:39,690
same and also from from the from the

106
00:05:35,400 --> 00:05:42,900
other side and when we can shift the

107
00:05:39,690 --> 00:05:44,820
masks into the internet wiki schedule we

108
00:05:42,900 --> 00:05:50,099
see that or a branching points they all

109
00:05:44,820 --> 00:05:53,310
have to sum up and they just give some

110
00:05:50,100 --> 00:05:57,390
additional restrictions in in the tikis

111
00:05:53,310 --> 00:05:59,610
curve and what we do in our text we also

112
00:05:57,390 --> 00:06:02,340
link the serial correlation attacks

113
00:05:59,610 --> 00:06:07,980
later to integrate X to reduce the data

114
00:06:02,340 --> 00:06:10,440
complexity so in our I think we

115
00:06:07,980 --> 00:06:11,940
basically take a lot of sizes from the

116
00:06:10,440 --> 00:06:15,660
Twinkie framework so the tricky

117
00:06:11,940 --> 00:06:18,480
framework is the rational was to treat

118
00:06:15,660 --> 00:06:21,870
the tweak in Taketa same way therefore

119
00:06:18,480 --> 00:06:24,990
it's quite tricky and it's basically

120
00:06:21,870 --> 00:06:27,440
completely linear and and each analyzes

121
00:06:24,990 --> 00:06:30,360
the class of key alternating ciphers and

122
00:06:27,440 --> 00:06:33,680
it's a framework that can be used to

123
00:06:30,360 --> 00:06:33,680
design to achieve a block ciphers

124
00:06:33,720 --> 00:06:41,830
some association of that is to sdk

125
00:06:37,150 --> 00:06:44,109
construction so instead of just one line

126
00:06:41,830 --> 00:06:49,810
with the Twinkie you can have several

127
00:06:44,110 --> 00:06:51,940
Twinkie lines and so the it uses a state

128
00:06:49,810 --> 00:06:54,220
update function H which is an

129
00:06:51,940 --> 00:06:58,270
permutation which is applied to each of

130
00:06:54,220 --> 00:07:01,120
the three keywords and Valadez was a

131
00:06:58,270 --> 00:07:04,479
multiplet multiplication that is

132
00:07:01,120 --> 00:07:06,760
different for each tricky word and then

133
00:07:04,479 --> 00:07:10,419
we have a sub Twinkie extraction

134
00:07:06,760 --> 00:07:12,699
function G which just exhausts the twig

135
00:07:10,419 --> 00:07:16,060
keywords together and there are also

136
00:07:12,699 --> 00:07:19,419
some runs dependent constants edit for

137
00:07:16,060 --> 00:07:22,930
slider tags and the G function basically

138
00:07:19,419 --> 00:07:24,580
reduces metric key words to one and the

139
00:07:22,930 --> 00:07:26,889
over call was to reduce the

140
00:07:24,580 --> 00:07:30,479
implementation overhead and also to

141
00:07:26,889 --> 00:07:30,479
simplify the security analysis

142
00:07:30,930 --> 00:07:37,510
so let me shortly introduce a small toy

143
00:07:34,720 --> 00:07:40,240
cipher to explain the attacks better so

144
00:07:37,510 --> 00:07:42,909
the rant function is the same as a s so

145
00:07:40,240 --> 00:07:46,030
it just has ADD kid and s box

146
00:07:42,910 --> 00:07:49,419
application then shift rows and then a

147
00:07:46,030 --> 00:07:52,630
mix column application and for the tweak

148
00:07:49,419 --> 00:07:55,330
schedule we simply just used permutation

149
00:07:52,630 --> 00:07:57,460
of skinny and nothing else and also

150
00:07:55,330 --> 00:08:02,440
compared to skinny we extracted the

151
00:07:57,460 --> 00:08:04,719
whole key and not just first two rows so

152
00:08:02,440 --> 00:08:07,690
if we look now on siri correlation

153
00:08:04,720 --> 00:08:10,810
attacks of the sdk construction with

154
00:08:07,690 --> 00:08:15,120
just one tweak keyword but we can do is

155
00:08:10,810 --> 00:08:19,090
we fix an input mask and an output mask

156
00:08:15,120 --> 00:08:21,570
and then we can compute something what

157
00:08:19,090 --> 00:08:27,510
we call the common sequence which is

158
00:08:21,570 --> 00:08:29,919
just the mask in the tweak schedule and

159
00:08:27,510 --> 00:08:32,770
we do that by forward and backward

160
00:08:29,919 --> 00:08:36,218
propagation of the input mask and output

161
00:08:32,770 --> 00:08:39,980
mask with probability 1 and what we can

162
00:08:36,219 --> 00:08:44,400
observe then is if we have

163
00:08:39,980 --> 00:08:46,950
at least one most one linear active

164
00:08:44,400 --> 00:08:51,420
value in this in this mask in this

165
00:08:46,950 --> 00:08:56,550
sequence and to fix the twig mass closer

166
00:08:51,420 --> 00:08:59,670
to 0 we get a 0 condition how does this

167
00:08:56,550 --> 00:09:02,790
look like so in processor that I showed

168
00:08:59,670 --> 00:09:07,589
previously so compared to the forint

169
00:09:02,790 --> 00:09:09,719
attack on yes if we have the same run

170
00:09:07,590 --> 00:09:14,460
function but now with a tweak schedule

171
00:09:09,720 --> 00:09:17,540
and we do that the tech we can get 5

172
00:09:14,460 --> 00:09:19,890
front attack and basically if we shift

173
00:09:17,540 --> 00:09:22,410
property of the serial correlation from

174
00:09:19,890 --> 00:09:25,770
the state into the tweak schedule and

175
00:09:22,410 --> 00:09:30,180
what we can see is that on the left here

176
00:09:25,770 --> 00:09:32,640
right here there is just one active

177
00:09:30,180 --> 00:09:34,530
value and all of the other ones are 0

178
00:09:32,640 --> 00:09:39,120
and if we force to twig mask to be 0

179
00:09:34,530 --> 00:09:41,790
then we get the serial correlation if we

180
00:09:39,120 --> 00:09:45,810
want to apply that to some cycles with

181
00:09:41,790 --> 00:09:49,110
mott weak key lines and we can basically

182
00:09:45,810 --> 00:09:52,020
do a similar thing and what we do is we

183
00:09:49,110 --> 00:09:53,700
just have to compute gamma sequence for

184
00:09:52,020 --> 00:09:58,710
all of orifices

185
00:09:53,700 --> 00:10:01,350
twiki lines and then we get the serial

186
00:09:58,710 --> 00:10:05,900
code I can fix the input a lot must we

187
00:10:01,350 --> 00:10:09,150
calculate everything and then we can

188
00:10:05,900 --> 00:10:14,100
obtain a serial correlation when at most

189
00:10:09,150 --> 00:10:16,560
be linear active values in there and to

190
00:10:14,100 --> 00:10:19,260
be is the number of off lines we have in

191
00:10:16,560 --> 00:10:24,030
the Twinkie so if it's decayed to then

192
00:10:19,260 --> 00:10:27,810
we have two active and and so so how

193
00:10:24,030 --> 00:10:31,079
does that look again twice alpha so we

194
00:10:27,810 --> 00:10:35,339
have not two Twinkie lines and we can

195
00:10:31,080 --> 00:10:37,740
have two active values in there and we

196
00:10:35,340 --> 00:10:42,840
can extend the attack to six front

197
00:10:37,740 --> 00:10:46,830
attack so our first application then is

198
00:10:42,840 --> 00:10:50,670
karma and it was already introduced

199
00:10:46,830 --> 00:10:52,080
first so karma looks like this it's a

200
00:10:50,670 --> 00:10:52,620
tweakable block cipher based on the

201
00:10:52,080 --> 00:10:56,970
Twinkie

202
00:10:52,620 --> 00:11:00,330
I'm back it's a reflection like Sipho so

203
00:10:56,970 --> 00:11:03,540
the the the middle part is this

204
00:11:00,330 --> 00:11:06,470
reflector it has some extra run center

205
00:11:03,540 --> 00:11:10,380
that just kid but not the Twinkies edit

206
00:11:06,470 --> 00:11:13,320
and then it just it'll reach the same

207
00:11:10,380 --> 00:11:18,930
run functions in the beginning and to

208
00:11:13,320 --> 00:11:21,270
the front and so it uses a very light

209
00:11:18,930 --> 00:11:23,640
with involuntary 4-bit sbox

210
00:11:21,270 --> 00:11:29,150
it uses the cell fermentation of Midori

211
00:11:23,640 --> 00:11:30,720
and mix column matrix look like this

212
00:11:29,150 --> 00:11:34,880
it's basically

213
00:11:30,720 --> 00:11:38,220
circulant matrix that just repeated and

214
00:11:34,880 --> 00:11:40,950
the Twinkie schedule consists of a

215
00:11:38,220 --> 00:11:46,380
permutation age and the pit paste Allah

216
00:11:40,950 --> 00:11:49,980
so far and so if we construct and

217
00:11:46,380 --> 00:11:54,120
distinguish of for karma and what we can

218
00:11:49,980 --> 00:11:57,960
see so we basically just fix some input

219
00:11:54,120 --> 00:12:00,390
masks into an output mask we iterated as

220
00:11:57,960 --> 00:12:03,600
many runs as we can get and then we look

221
00:12:00,390 --> 00:12:07,830
in the tweak schedule and what we can

222
00:12:03,600 --> 00:12:12,800
see is there's just one active value in

223
00:12:07,830 --> 00:12:14,670
here and yeah we can then what we do is

224
00:12:12,800 --> 00:12:17,370
we later

225
00:12:14,670 --> 00:12:18,750
translate this serial correlation this

226
00:12:17,370 --> 00:12:21,060
thing we shot to an integral

227
00:12:18,750 --> 00:12:23,240
distinguishes to reduce it at the

228
00:12:21,060 --> 00:12:29,069
complexity and also move it and to

229
00:12:23,240 --> 00:12:32,960
relate it to attack in our key recovery

230
00:12:29,070 --> 00:12:36,600
we basically can prevent war rot and

231
00:12:32,960 --> 00:12:41,040
happened three runs and what we can see

232
00:12:36,600 --> 00:12:46,970
is that in the run after distinguish we

233
00:12:41,040 --> 00:12:52,290
have two balanced parts and within use

234
00:12:46,970 --> 00:12:55,170
so we prevent 100 MSV runs we have this

235
00:12:52,290 --> 00:12:56,810
X 0 and X 8 balanced at the same time

236
00:12:55,170 --> 00:13:02,150
and

237
00:12:56,810 --> 00:13:03,500
to calculate both values we used meet in

238
00:13:02,150 --> 00:13:07,220
the middle technique for integral

239
00:13:03,500 --> 00:13:11,600
attacks so we can evaluate the various

240
00:13:07,220 --> 00:13:16,310
independently and for the attack we used

241
00:13:11,600 --> 00:13:19,850
FFT key recovery technique and the time

242
00:13:16,310 --> 00:13:23,839
complexity is ten about two to the 66

243
00:13:19,850 --> 00:13:29,270
where we recover 56 bits of the other

244
00:13:23,840 --> 00:13:31,730
keys and 38 bits of of the inner key the

245
00:13:29,270 --> 00:13:33,650
data complexity is some stand up to two

246
00:13:31,730 --> 00:13:35,630
thirty forty eight point four and the

247
00:13:33,650 --> 00:13:38,360
memory complex is to three fifty three

248
00:13:35,630 --> 00:13:43,040
so for more details please check in the

249
00:13:38,360 --> 00:13:47,690
paper so then we also applied the same

250
00:13:43,040 --> 00:13:50,959
attack for mantis Mantis is quite

251
00:13:47,690 --> 00:13:52,760
similar to Karma it's also tweakable

252
00:13:50,960 --> 00:13:56,240
block cipher based on the three key

253
00:13:52,760 --> 00:14:00,350
framework and it uses its reflection

254
00:13:56,240 --> 00:14:03,260
cipher so as a comparison between mantis

255
00:14:00,350 --> 00:14:04,850
in karma so the run function looks

256
00:14:03,260 --> 00:14:07,540
slightly different so the S box in

257
00:14:04,850 --> 00:14:11,180
mantis is applied first in ten days

258
00:14:07,540 --> 00:14:14,390
the keys edit and for karma the key is

259
00:14:11,180 --> 00:14:18,560
added first and the S box is at the end

260
00:14:14,390 --> 00:14:22,730
and also the S boxes are the different

261
00:14:18,560 --> 00:14:25,609
and the linear layers are different but

262
00:14:22,730 --> 00:14:28,160
they have the same structure and because

263
00:14:25,610 --> 00:14:33,950
our deck is generic enough so it doesn't

264
00:14:28,160 --> 00:14:36,680
exploit the S box we can reiterate the

265
00:14:33,950 --> 00:14:38,450
round function and basically apply the

266
00:14:36,680 --> 00:14:40,609
same attack so the same attack that

267
00:14:38,450 --> 00:14:48,260
holds for karma is then also valid for

268
00:14:40,610 --> 00:14:51,320
this then we should attack the skinny so

269
00:14:48,260 --> 00:14:55,760
skinny is also a tweeker proxy from the

270
00:14:51,320 --> 00:14:58,339
wiki framework it's similar round

271
00:14:55,760 --> 00:15:02,689
functions to a s so it has a s box

272
00:14:58,339 --> 00:15:05,690
application and tweak is added just to

273
00:15:02,690 --> 00:15:07,360
the first two rows so just the first two

274
00:15:05,690 --> 00:15:10,380
rows of the tweak

275
00:15:07,360 --> 00:15:15,459
extracted and then edit to the state and

276
00:15:10,380 --> 00:15:17,830
the shift rose similar sin in yes and

277
00:15:15,459 --> 00:15:22,589
for the mix columns it uses a primary

278
00:15:17,830 --> 00:15:26,380
matrix and in a tricky schedule there's

279
00:15:22,589 --> 00:15:31,899
application of the permutation and then

280
00:15:26,380 --> 00:15:35,170
an lfsr on the top two rows again it

281
00:15:31,899 --> 00:15:38,200
uses a very lightweight forbid s box it

282
00:15:35,170 --> 00:15:41,680
uses yes like shift plus but it shifts

283
00:15:38,200 --> 00:15:45,430
right instead of left and the binary

284
00:15:41,680 --> 00:15:48,910
matrix like this is applied to forming

285
00:15:45,430 --> 00:15:51,699
columns for the tricky schedule the

286
00:15:48,910 --> 00:15:55,569
permutation is used like this one here

287
00:15:51,700 --> 00:15:58,899
and then pit paste Allah so far that is

288
00:15:55,570 --> 00:16:02,050
added to the top two rows but only in a

289
00:15:58,899 --> 00:16:06,120
setting for TK 2 + TK 3 so with just one

290
00:16:02,050 --> 00:16:10,810
tricky line that is no less average it

291
00:16:06,120 --> 00:16:16,089
so for a text we can attack 20 rounds of

292
00:16:10,810 --> 00:16:18,660
skinny 64 128 in the TK 2 setting where

293
00:16:16,089 --> 00:16:22,450
we use and certain round distinguish ax

294
00:16:18,660 --> 00:16:26,529
which has a complex data complexity of

295
00:16:22,450 --> 00:16:31,060
to 256 plaintext and to use two today it

296
00:16:26,529 --> 00:16:35,230
related tweaks and the larger version of

297
00:16:31,060 --> 00:16:38,410
skinny netic his resetting we use again

298
00:16:35,230 --> 00:16:43,329
to 356 protects and then 2 to the 12

299
00:16:38,410 --> 00:16:48,430
related Twinkies so that's the key

300
00:16:43,329 --> 00:16:52,540
recovery for skinny 64 128 so basically

301
00:16:48,430 --> 00:16:58,630
we can repent one round and opened six

302
00:16:52,540 --> 00:17:03,990
rounds and again well just set 14 in the

303
00:16:58,630 --> 00:17:09,040
40 rounds at the eleventh position is

304
00:17:03,990 --> 00:17:12,030
unbalanced and what we do is we just see

305
00:17:09,040 --> 00:17:13,909
how many seconds week values are

306
00:17:12,030 --> 00:17:18,770
included and

307
00:17:13,910 --> 00:17:23,120
and we can recover parts of the and one

308
00:17:18,770 --> 00:17:26,750
interesting observation is that the FFT

309
00:17:23,119 --> 00:17:30,409
key recovery method is not as sufficient

310
00:17:26,750 --> 00:17:33,160
and the reason for that is that just two

311
00:17:30,410 --> 00:17:36,410
topmost rows of the TWiki eyelid so

312
00:17:33,160 --> 00:17:38,890
therefore we saw that partial sum

313
00:17:36,410 --> 00:17:43,880
technique is actually more efficient and

314
00:17:38,890 --> 00:17:46,340
we can get more runs for attic and the

315
00:17:43,880 --> 00:17:50,300
data comp time complexity is around two

316
00:17:46,340 --> 00:17:55,899
to the 1997 data complexity is to go to

317
00:17:50,300 --> 00:18:01,550
68 and the memory complex is to today 82

318
00:17:55,900 --> 00:18:04,880
so for the attack on TK 3 what we do is

319
00:18:01,550 --> 00:18:09,680
we can prevent one rat again and this

320
00:18:04,880 --> 00:18:12,470
time opened eight runs and this time two

321
00:18:09,680 --> 00:18:15,230
values in the state are balanced at the

322
00:18:12,470 --> 00:18:17,360
same time and again we used meet in the

323
00:18:15,230 --> 00:18:20,810
middle technique for integral ethics to

324
00:18:17,360 --> 00:18:24,320
ever independently similars for karma

325
00:18:20,810 --> 00:18:28,760
and yeah it can partial sum technique is

326
00:18:24,320 --> 00:18:31,850
more efficient and FF take you if a key

327
00:18:28,760 --> 00:18:36,470
recovery technique and the time

328
00:18:31,850 --> 00:18:39,409
complexity is two to the 155 and rotate

329
00:18:36,470 --> 00:18:43,970
the complexities to 273 and with a

330
00:18:39,410 --> 00:18:47,180
memory complexity of one third 8 so in

331
00:18:43,970 --> 00:18:50,060
conclusions but we show is a new attack

332
00:18:47,180 --> 00:18:53,270
technique for analyzing to equal block

333
00:18:50,060 --> 00:18:56,960
ciphers and we have currently recurrent

334
00:18:53,270 --> 00:18:58,280
the best attack for karma in compression

335
00:18:56,960 --> 00:19:02,690
of number of fronts so I spoke to

336
00:18:58,280 --> 00:19:04,700
applications so an interesting thing is

337
00:19:02,690 --> 00:19:05,690
that the attack is independent of the

338
00:19:04,700 --> 00:19:09,410
kid middle runs

339
00:19:05,690 --> 00:19:11,720
so if come up with that even more a kid

340
00:19:09,410 --> 00:19:16,280
runs in the middle we could just simply

341
00:19:11,720 --> 00:19:19,810
ignore them and for Monte sent for

342
00:19:16,280 --> 00:19:22,930
skinny we add some further insights

343
00:19:19,810 --> 00:19:22,929
thank you

344
00:19:26,270 --> 00:19:32,960
we have a lot of time for questions yes

345
00:19:31,290 --> 00:19:35,430
we have no time

346
00:19:32,960 --> 00:19:37,560
so first I want to give credit to my

347
00:19:35,430 --> 00:19:40,620
colleagues it's karma that looks like

348
00:19:37,560 --> 00:19:43,830
Montes and automatically karma

349
00:19:40,620 --> 00:19:46,350
second you just mentioned that the

350
00:19:43,830 --> 00:19:48,060
complexity on Montes is the same but

351
00:19:46,350 --> 00:19:50,399
they are there any optimizations that

352
00:19:48,060 --> 00:19:52,919
actually used the the simpler linear

353
00:19:50,400 --> 00:19:56,430
layer or really disappear truncated

354
00:19:52,920 --> 00:20:00,840
approach the rotation do play and no

355
00:19:56,430 --> 00:20:04,590
role at all and so I think it's quite

356
00:20:00,840 --> 00:20:07,560
generic so we don't use something from

357
00:20:04,590 --> 00:20:09,959
the S box so it can't be just any 4p

358
00:20:07,560 --> 00:20:16,320
test box and we also don't really

359
00:20:09,960 --> 00:20:22,710
exploit linear layer so and the linear

360
00:20:16,320 --> 00:20:27,330
layers basically basically the same from

361
00:20:22,710 --> 00:20:31,980
the number of ones and zeros in in the

362
00:20:27,330 --> 00:20:35,340
matrix so the tag the only thing we had

363
00:20:31,980 --> 00:20:39,630
to do is reshuffle the round function

364
00:20:35,340 --> 00:20:43,740
but that I can results in the same thing

365
00:20:39,630 --> 00:20:48,300
and yeah attack just simply applies

366
00:20:43,740 --> 00:20:52,460
resume so just our most probably other

367
00:20:48,300 --> 00:20:52,460
it takes a completely different

368
00:20:55,720 --> 00:21:05,840
any more questions if not I'm just

369
00:21:02,030 --> 00:21:08,480
curious that can you actually apply two

370
00:21:05,840 --> 00:21:10,750
nonlinear tricky scheduling or is any

371
00:21:08,480 --> 00:21:14,050
reason that you chose only the linear

372
00:21:10,750 --> 00:21:14,050
key expansion

373
00:21:15,550 --> 00:21:25,250
Yama's / you can and the calculating of

374
00:21:23,180 --> 00:21:29,080
the mask is probably a lot more

375
00:21:25,250 --> 00:21:33,200
difficult so the issue is only the

376
00:21:29,080 --> 00:21:39,379
complexity part so most probably just

377
00:21:33,200 --> 00:21:41,300
had a common sequence is calculated most

378
00:21:39,380 --> 00:21:46,580
probably slightly different but we

379
00:21:41,300 --> 00:21:48,030
haven't we have to check Thanks let's

380
00:21:46,580 --> 00:21:53,809
take the speaker again

381
00:21:48,030 --> 00:21:53,809
[Applause]

