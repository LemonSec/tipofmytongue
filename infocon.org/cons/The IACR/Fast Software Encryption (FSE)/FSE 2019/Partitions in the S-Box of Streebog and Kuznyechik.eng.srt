1
00:00:00,770 --> 00:00:04,910
teamworks yes it does thank you for the

2
00:00:03,870 --> 00:00:11,820
introduction

3
00:00:04,910 --> 00:00:13,920
so in fiction in the 1960s there was a

4
00:00:11,820 --> 00:00:16,650
James Bond episode called From Russia

5
00:00:13,920 --> 00:00:21,180
With Love a very appropriate title and

6
00:00:16,650 --> 00:00:24,090
even better in the the core of the

7
00:00:21,180 --> 00:00:27,119
scenario was about trying to recover a

8
00:00:24,090 --> 00:00:29,789
lector a Lecter was a well Soviet chick

9
00:00:27,119 --> 00:00:33,149
at the time not Russian a Krypton device

10
00:00:29,789 --> 00:00:36,180
so there is a scene where you have James

11
00:00:33,149 --> 00:00:37,649
Bond who is listening to a description

12
00:00:36,180 --> 00:00:39,390
of this device

13
00:00:37,649 --> 00:00:42,239
each of these routers and everything all

14
00:00:39,390 --> 00:00:45,870
this old-fashioned stuff and you have

15
00:00:42,239 --> 00:00:48,180
these guys cryptographers from mi5 or

16
00:00:45,870 --> 00:00:50,339
six i never remember and they are trying

17
00:00:48,180 --> 00:00:54,000
to use this information to recover how

18
00:00:50,340 --> 00:00:56,460
this lecture works reality is a bit less

19
00:00:54,000 --> 00:00:58,769
impressive instead of sending guys

20
00:00:56,460 --> 00:01:03,960
overseas and have them listen to pretty

21
00:00:58,770 --> 00:01:06,600
KGB agents you look at PDF file and on

22
00:01:03,960 --> 00:01:08,369
this PDF file you have this kind of

23
00:01:06,600 --> 00:01:10,589
stuff so you just look at them and you

24
00:01:08,369 --> 00:01:13,650
squint for several months and eventually

25
00:01:10,590 --> 00:01:16,740
hopefully you get some results this is

26
00:01:13,650 --> 00:01:18,150
PI the sbox of the last two Russian

27
00:01:16,740 --> 00:01:19,949
standards so you have a block cipher

28
00:01:18,150 --> 00:01:22,409
called quiz new chick which means

29
00:01:19,950 --> 00:01:26,340
grasshopper and a hash function called

30
00:01:22,409 --> 00:01:28,350
tree bug both use the same s box it

31
00:01:26,340 --> 00:01:30,229
operates on 8-bit it's a permutation is

32
00:01:28,350 --> 00:01:32,520
differentially a linear properties are

33
00:01:30,229 --> 00:01:33,630
fine they're a bit better than what you

34
00:01:32,520 --> 00:01:36,289
would expect from a random permutation

35
00:01:33,630 --> 00:01:39,240
on eight bits but what we don't know is

36
00:01:36,290 --> 00:01:40,710
how it was made the only thing you need

37
00:01:39,240 --> 00:01:42,240
to implement an S box is its lookup

38
00:01:40,710 --> 00:01:46,770
table and that's the only information

39
00:01:42,240 --> 00:01:49,259
these designers provided this obviously

40
00:01:46,770 --> 00:01:53,369
begs the question of how did they design

41
00:01:49,259 --> 00:01:55,290
it so first I'm going to give a brief

42
00:01:53,369 --> 00:01:59,610
reminder about the things we knew about

43
00:01:55,290 --> 00:02:02,759
this S box up to that point so some

44
00:01:59,610 --> 00:02:05,159
results which I have established with my

45
00:02:02,759 --> 00:02:07,170
then colleagues from Luxembourg and also

46
00:02:05,159 --> 00:02:09,569
the tiny bits of information provided by

47
00:02:07,170 --> 00:02:11,760
the designers and then I'm going to

48
00:02:09,568 --> 00:02:12,869
present what I claim to be its actual

49
00:02:11,760 --> 00:02:15,739
structure so the

50
00:02:12,870 --> 00:02:18,060
which its designers used on purpose and

51
00:02:15,739 --> 00:02:24,200
finally I would explain why I don't like

52
00:02:18,060 --> 00:02:26,819
that structure so in the first place we

53
00:02:24,200 --> 00:02:28,200
found this decomposition of Pi so that's

54
00:02:26,819 --> 00:02:29,940
when I was in Luxembourg I worked on

55
00:02:28,200 --> 00:02:33,750
this without expiry off and Alexey you

56
00:02:29,940 --> 00:02:36,450
do venko and we managed using techniques

57
00:02:33,750 --> 00:02:40,459
I'm not going to go into to rewrite this

58
00:02:36,450 --> 00:02:42,899
permutation in this way it's ugly

59
00:02:40,459 --> 00:02:44,879
let's not beat around the bush it is

60
00:02:42,900 --> 00:02:46,739
very ugly but it helps with a harder

61
00:02:44,879 --> 00:02:49,560
implementation so when we ended up with

62
00:02:46,739 --> 00:02:54,780
this first decomposition we were mostly

63
00:02:49,560 --> 00:02:56,640
puzzled also because this component has

64
00:02:54,780 --> 00:03:05,370
the worst differential uniformity you

65
00:02:56,640 --> 00:03:07,409
could imagine this yeah this part I call

66
00:03:05,370 --> 00:03:08,819
it t this part I call it u so in the

67
00:03:07,409 --> 00:03:13,078
following when I talk about the TU

68
00:03:08,819 --> 00:03:14,069
decomposition it's this decomposition we

69
00:03:13,079 --> 00:03:17,400
were not very happy with this

70
00:03:14,069 --> 00:03:19,048
decomposition so we made a bit of detour

71
00:03:17,400 --> 00:03:20,220
we had to look at an S box from Belarus

72
00:03:19,049 --> 00:03:21,780
and realised it was built like a

73
00:03:20,220 --> 00:03:23,760
logarithm and that it actually looked a

74
00:03:21,780 --> 00:03:25,230
lot like the Russian one and we also

75
00:03:23,760 --> 00:03:26,910
established that the Russian one could

76
00:03:25,230 --> 00:03:29,280
actually be written like a kind of

77
00:03:26,910 --> 00:03:33,090
logarithm a discrete logarithm composed

78
00:03:29,280 --> 00:03:35,190
with a weird function a weird

79
00:03:33,090 --> 00:03:36,750
permutation which is extremely weak from

80
00:03:35,190 --> 00:03:38,489
a cryptographic standpoint so it's not

81
00:03:36,750 --> 00:03:42,060
something you would expect from a random

82
00:03:38,489 --> 00:03:43,799
permutation but its renown satisfactory

83
00:03:42,060 --> 00:03:47,280
we knew there was something to be found

84
00:03:43,799 --> 00:03:51,180
but we couldn't find it so this we

85
00:03:47,280 --> 00:03:54,299
published at tusk also and in this task

86
00:03:51,180 --> 00:03:56,549
paper we wrote this in our conclusion so

87
00:03:54,299 --> 00:03:57,840
the important parts are in red we think

88
00:03:56,549 --> 00:04:00,150
it's more likely that each of these

89
00:03:57,840 --> 00:04:03,419
decompositions so that tu decomposition

90
00:04:00,150 --> 00:04:05,910
and the log based one is a consequence

91
00:04:03,419 --> 00:04:08,250
of a strong algebraic structure still

92
00:04:05,910 --> 00:04:09,900
this master decomposition from which the

93
00:04:08,250 --> 00:04:12,150
other would be consequences remains

94
00:04:09,900 --> 00:04:14,609
elusive and at that time we thought the

95
00:04:12,150 --> 00:04:17,220
only way we could actually recover this

96
00:04:14,609 --> 00:04:19,410
decomposition would be if the designers

97
00:04:17,220 --> 00:04:22,969
of these algorithms so basically the

98
00:04:19,410 --> 00:04:22,969
Russian Secret Service would tell us

99
00:04:23,930 --> 00:04:29,360
they're little information they did

100
00:04:25,639 --> 00:04:30,740
provide because they are trying to

101
00:04:29,360 --> 00:04:32,660
convince people to standardize these

102
00:04:30,740 --> 00:04:36,380
algorithms so a stray bug is already an

103
00:04:32,660 --> 00:04:38,750
ISO standard quiz Nicci k-- is being

104
00:04:36,380 --> 00:04:41,719
considered for standardization by ISO

105
00:04:38,750 --> 00:04:43,850
both both of them are rfcs so there are

106
00:04:41,720 --> 00:04:46,970
designers do try to advertise them and

107
00:04:43,850 --> 00:04:49,180
in one of such talk you have one of the

108
00:04:46,970 --> 00:04:52,009
designers of quiz need cheek which

109
00:04:49,180 --> 00:04:54,590
explained how they build the rest box so

110
00:04:52,009 --> 00:04:56,419
here we have two successive slides it's

111
00:04:54,590 --> 00:04:58,969
the same except the second box is in red

112
00:04:56,419 --> 00:05:01,729
which i think means that it's the

113
00:04:58,970 --> 00:05:05,810
important part it's about how they built

114
00:05:01,729 --> 00:05:09,229
the rest box the first box here and here

115
00:05:05,810 --> 00:05:11,030
is about a possible way of pinnacle S

116
00:05:09,229 --> 00:05:12,680
boxes by selecting them from knowing

117
00:05:11,030 --> 00:05:14,989
classes this gives you the best

118
00:05:12,680 --> 00:05:17,210
cryptographic properties to differential

119
00:05:14,990 --> 00:05:19,370
deformity linearity it has an obvious

120
00:05:17,210 --> 00:05:21,049
analytical structure and you can use for

121
00:05:19,370 --> 00:05:23,240
instance a finite field inversion which

122
00:05:21,050 --> 00:05:24,740
is indeed a perfectly valid way of

123
00:05:23,240 --> 00:05:27,889
building your ice boxes that's how they

124
00:05:24,740 --> 00:05:31,820
are made in the in the AES the second

125
00:05:27,889 --> 00:05:34,130
box which is which turns into red it's

126
00:05:31,820 --> 00:05:36,320
about a random search with a given limit

127
00:05:34,130 --> 00:05:38,389
on the parameters it's not clear to me

128
00:05:36,320 --> 00:05:40,130
what this limit might be and such as

129
00:05:38,389 --> 00:05:41,750
boxes do not have optimal properties

130
00:05:40,130 --> 00:05:43,550
they don't have the best differential in

131
00:05:41,750 --> 00:05:45,139
your properties but they also do not

132
00:05:43,550 --> 00:05:48,349
have a pronounced analytical structure

133
00:05:45,139 --> 00:05:50,690
which again is true and people do use

134
00:05:48,349 --> 00:05:54,110
such as boxes for such reasons so there

135
00:05:50,690 --> 00:05:56,680
is nothing wrong here the part which I

136
00:05:54,110 --> 00:05:59,270
personally find quite fun is that they

137
00:05:56,680 --> 00:06:00,919
left out the first option because it has

138
00:05:59,270 --> 00:06:02,930
it has an obvious analytical structure

139
00:06:00,919 --> 00:06:04,340
and preferred the second one because it

140
00:06:02,930 --> 00:06:06,770
does not have a pronounced analogical

141
00:06:04,340 --> 00:06:08,359
structure well actually what I'm going

142
00:06:06,770 --> 00:06:11,120
to show it is that it has an extremely

143
00:06:08,360 --> 00:06:15,380
pronounced an analogical analytical

144
00:06:11,120 --> 00:06:17,090
structure cryptographers have tried to

145
00:06:15,380 --> 00:06:20,360
discuss with the designers because they

146
00:06:17,090 --> 00:06:24,710
go to conferences sometimes so mark who

147
00:06:20,360 --> 00:06:27,260
Johanna sorry nan he and his Cotter for

148
00:06:24,710 --> 00:06:30,469
a whirl Bob which was a teaser candidate

149
00:06:27,260 --> 00:06:32,180
based on three bug they had a short

150
00:06:30,470 --> 00:06:35,330
discussion with the designers of his

151
00:06:32,180 --> 00:06:37,219
algorithms and the designers said that

152
00:06:35,330 --> 00:06:37,639
they had used some randomization using

153
00:06:37,219 --> 00:06:40,129
various

154
00:06:37,639 --> 00:06:41,629
building blocks and that this was seen

155
00:06:40,129 --> 00:06:44,060
as an effective countermeasure against

156
00:06:41,629 --> 00:06:45,409
yet unknown attacks which is coherent

157
00:06:44,060 --> 00:06:50,900
with the content of the previous slide

158
00:06:45,409 --> 00:06:52,550
but I saw what they say is that they did

159
00:06:50,900 --> 00:06:54,289
not use the 2d composition to design

160
00:06:52,550 --> 00:06:57,229
their algorithm the res box which i

161
00:06:54,289 --> 00:06:59,449
think is true the aim was to have the

162
00:06:57,229 --> 00:07:01,188
best possible in linear the best

163
00:06:59,449 --> 00:07:03,319
possible differential and in your

164
00:07:01,189 --> 00:07:05,770
properties obtained from some random

165
00:07:03,319 --> 00:07:08,659
search which they do not explain and

166
00:07:05,770 --> 00:07:10,878
they also say that before the shot three

167
00:07:08,659 --> 00:07:12,889
competition we didn't really care about

168
00:07:10,879 --> 00:07:14,779
the origin of parameters and so the

169
00:07:12,889 --> 00:07:17,900
three bug designers didn't care either

170
00:07:14,779 --> 00:07:19,849
and so they don't feel too bad about the

171
00:07:17,900 --> 00:07:22,460
too bad about the fact that they lost

172
00:07:19,849 --> 00:07:23,688
the generation algorithm so at that

173
00:07:22,460 --> 00:07:25,310
point they claim to have lost the

174
00:07:23,689 --> 00:07:27,860
generation algorithm and that they don't

175
00:07:25,310 --> 00:07:29,150
really mind because at the time when

176
00:07:27,860 --> 00:07:31,909
they designed it people didn't really

177
00:07:29,150 --> 00:07:37,159
care about the origin of parameters this

178
00:07:31,909 --> 00:07:38,930
is true even in 1985 people were already

179
00:07:37,159 --> 00:07:40,129
design in block ciphers with very

180
00:07:38,930 --> 00:07:43,069
careful explanations about their

181
00:07:40,129 --> 00:07:44,029
generation process for their S boxes so

182
00:07:43,069 --> 00:07:47,539
I'm a bit puzzled by this

183
00:07:44,029 --> 00:07:49,789
ready statement and then at a small

184
00:07:47,539 --> 00:07:51,259
workshop called crossfire there was a

185
00:07:49,789 --> 00:07:53,779
Russian cryptographer that presented

186
00:07:51,259 --> 00:07:56,000
kwitny cheek unfortunately for them

187
00:07:53,779 --> 00:07:57,259
Maria with the session chair and could

188
00:07:56,000 --> 00:07:59,659
ask them some questions about their

189
00:07:57,259 --> 00:08:01,699
design process and they avoided the

190
00:07:59,659 --> 00:08:04,129
question and eventually said that they

191
00:08:01,699 --> 00:08:08,349
had used the two decomposition to design

192
00:08:04,129 --> 00:08:11,270
their s box which no they didn't I think

193
00:08:08,349 --> 00:08:13,460
so at that point we have to

194
00:08:11,270 --> 00:08:14,960
decompositions which we are not really

195
00:08:13,460 --> 00:08:16,250
happy with and we have some

196
00:08:14,960 --> 00:08:19,279
contradictory statements by the

197
00:08:16,250 --> 00:08:21,949
designers and also some really wild

198
00:08:19,279 --> 00:08:26,180
statement by the designers like this is

199
00:08:21,949 --> 00:08:28,819
well I'm suppose to be polite so now I'm

200
00:08:26,180 --> 00:08:31,399
going to present what I found and with

201
00:08:28,819 --> 00:08:33,380
what I described in ended in this tossed

202
00:08:31,399 --> 00:08:36,229
paper which is what I think is the

203
00:08:33,380 --> 00:08:39,529
actual structure so before I go into how

204
00:08:36,229 --> 00:08:42,589
I found it just a bit of math and a

205
00:08:39,529 --> 00:08:44,630
final field with two to the 2mm elements

206
00:08:42,589 --> 00:08:47,870
so there should be only one M but a2

207
00:08:44,630 --> 00:08:50,300
before can be written in this way except

208
00:08:47,870 --> 00:08:51,260
for zero so that's just the final fit

209
00:08:50,300 --> 00:08:53,449
logarithm

210
00:08:51,260 --> 00:08:55,760
and because of this you can partition

211
00:08:53,450 --> 00:08:58,340
the state in this way so you take a

212
00:08:55,760 --> 00:09:00,290
union for all eyes of alpha to the power

213
00:08:58,340 --> 00:09:03,830
I or alpha is a generator of

214
00:09:00,290 --> 00:09:07,219
multiplicative subgroup this is the

215
00:09:03,830 --> 00:09:09,830
multiplication and then if you put aside

216
00:09:07,220 --> 00:09:12,340
the case I equal to zero which is just

217
00:09:09,830 --> 00:09:16,130
the subfield then you get this

218
00:09:12,340 --> 00:09:19,910
description of the of the final feed as

219
00:09:16,130 --> 00:09:21,650
a union of vector spaces but not quite

220
00:09:19,910 --> 00:09:25,760
vector spaces because this non contain

221
00:09:21,650 --> 00:09:28,010
zero but almost Lecter spaces since the

222
00:09:25,760 --> 00:09:32,689
subfield is a vector space of dimension

223
00:09:28,010 --> 00:09:35,020
M in a final field of dimension to M you

224
00:09:32,690 --> 00:09:38,210
can also find another another subspace

225
00:09:35,020 --> 00:09:39,920
of the same dimension such that the

226
00:09:38,210 --> 00:09:42,200
union of the two will span the whole

227
00:09:39,920 --> 00:09:44,449
state so you can also write the final

228
00:09:42,200 --> 00:09:47,020
field in this way so it is going to be

229
00:09:44,450 --> 00:09:50,660
the union for all these double use of

230
00:09:47,020 --> 00:09:53,360
the additive code set of the field of

231
00:09:50,660 --> 00:09:55,520
the subfield and then if you put aside

232
00:09:53,360 --> 00:09:58,160
the case where you have the element zero

233
00:09:55,520 --> 00:10:01,880
here you end up with this partition of

234
00:09:58,160 --> 00:10:03,829
the state of the final field what's

235
00:10:01,880 --> 00:10:06,920
important is that in both cases you have

236
00:10:03,830 --> 00:10:11,900
partitions with an element with a set of

237
00:10:06,920 --> 00:10:14,689
size 2 to the M and 2 to the M sets of

238
00:10:11,900 --> 00:10:19,100
size 2 to the M minus 1 and everything

239
00:10:14,690 --> 00:10:22,160
is linear it's important because that

240
00:10:19,100 --> 00:10:24,530
the PI interacts with this partition

241
00:10:22,160 --> 00:10:28,370
first some words about how I actually

242
00:10:24,530 --> 00:10:30,260
found this structure so for reasons that

243
00:10:28,370 --> 00:10:34,160
are completely unrelated to any of this

244
00:10:30,260 --> 00:10:36,160
I worked on an L and an algorithm which

245
00:10:34,160 --> 00:10:39,319
looks for vector spaces in a set of

246
00:10:36,160 --> 00:10:41,060
elements and one nice application of

247
00:10:39,320 --> 00:10:46,310
this algorithm is that it can allow you

248
00:10:41,060 --> 00:10:49,459
to look for spaces of a given dimension

249
00:10:46,310 --> 00:10:51,260
that go through a permutation and are

250
00:10:49,460 --> 00:10:53,840
mapped to other spaces so you have an

251
00:10:51,260 --> 00:10:55,370
affine space in the input and when you

252
00:10:53,840 --> 00:10:57,080
apply the permutation you have an affine

253
00:10:55,370 --> 00:10:59,240
space in the output and you can look for

254
00:10:57,080 --> 00:11:01,550
all of those so I was very happy because

255
00:10:59,240 --> 00:11:04,340
I thought I had a nice way to test this

256
00:11:01,550 --> 00:11:05,120
algorithm because I knew that in PI

257
00:11:04,340 --> 00:11:07,880
there was one

258
00:11:05,120 --> 00:11:11,120
such transition if you set this branch

259
00:11:07,880 --> 00:11:12,770
to zero this is a multiplexer which

260
00:11:11,120 --> 00:11:14,930
selects the output of this component

261
00:11:12,770 --> 00:11:17,930
when this 1 is equal to 0 and this one

262
00:11:14,930 --> 00:11:19,729
otherwise so basically you have that

263
00:11:17,930 --> 00:11:22,160
when this guy takes all possible values

264
00:11:19,730 --> 00:11:24,970
here you get a vector space of dimension

265
00:11:22,160 --> 00:11:28,150
4 and here a vector space of dimension 4

266
00:11:24,970 --> 00:11:32,900
so I was expecting to find one such

267
00:11:28,150 --> 00:11:34,760
transition but actually I found 2 so I

268
00:11:32,900 --> 00:11:36,410
had completely forgotten about this S

269
00:11:34,760 --> 00:11:38,480
box and I had moved on with my life but

270
00:11:36,410 --> 00:11:42,319
I shouldn't have and now I was back

271
00:11:38,480 --> 00:11:44,630
working on PI again and so what I

272
00:11:42,320 --> 00:11:47,660
realized is that this second pattern was

273
00:11:44,630 --> 00:11:51,560
could be generalized to look not that

274
00:11:47,660 --> 00:11:53,839
really vector spaces but almost spaces

275
00:11:51,560 --> 00:11:56,900
where you have removed the 0 so if you

276
00:11:53,839 --> 00:11:59,420
fix a value here when this guy takes all

277
00:11:56,900 --> 00:12:01,279
possible values except 0 you get a

278
00:11:59,420 --> 00:12:02,839
vector space at the top because the

279
00:12:01,279 --> 00:12:05,240
multiplication by a constant is linear

280
00:12:02,839 --> 00:12:07,460
and a vector space at the bottom but an

281
00:12:05,240 --> 00:12:11,930
affine space at the bottom and you have

282
00:12:07,460 --> 00:12:14,660
16 such weird transitions so this is the

283
00:12:11,930 --> 00:12:15,890
situation we have the finite field the

284
00:12:14,660 --> 00:12:17,719
image of the final field which is the

285
00:12:15,890 --> 00:12:19,880
final field itself and you have one

286
00:12:17,720 --> 00:12:22,520
vector space which is sent to some

287
00:12:19,880 --> 00:12:24,920
affine space and another vector space

288
00:12:22,520 --> 00:12:25,880
which is sent to another affine space so

289
00:12:24,920 --> 00:12:29,329
that's what I had found with my

290
00:12:25,880 --> 00:12:31,570
algorithm and the combination of these

291
00:12:29,330 --> 00:12:35,410
two space together they span the whole

292
00:12:31,570 --> 00:12:38,209
finite field and you have the same here

293
00:12:35,410 --> 00:12:41,209
when I realize this I felt really stupid

294
00:12:38,209 --> 00:12:43,189
because I had been looking at PI for 3

295
00:12:41,209 --> 00:12:46,279
years at that point and I knew about

296
00:12:43,190 --> 00:12:48,410
like this set and this set that they

297
00:12:46,279 --> 00:12:50,450
existed and interacted with the sbox and

298
00:12:48,410 --> 00:12:53,209
I never realized that they were the

299
00:12:50,450 --> 00:12:55,420
subfield so when I realized that I like

300
00:12:53,209 --> 00:12:59,029
thank my head on the wall and then

301
00:12:55,420 --> 00:13:00,949
worked further and then I realized that

302
00:12:59,029 --> 00:13:02,930
this other vector space in the input was

303
00:13:00,950 --> 00:13:04,339
a multiplicative co set of the subfield

304
00:13:02,930 --> 00:13:07,069
and in the output you had something

305
00:13:04,339 --> 00:13:09,380
which was in direct 'some with the sub

306
00:13:07,070 --> 00:13:12,830
field and when you look at the other

307
00:13:09,380 --> 00:13:14,540
multiplicative subsets of the the other

308
00:13:12,830 --> 00:13:17,300
multiplicative code sets of the sub

309
00:13:14,540 --> 00:13:18,769
field and the additive Co sets of the

310
00:13:17,300 --> 00:13:22,550
sub fields in the output

311
00:13:18,769 --> 00:13:25,369
pie maps one to the other so pie maps

312
00:13:22,550 --> 00:13:29,089
the partition of the field into its

313
00:13:25,369 --> 00:13:31,309
multiplicative cosets of the subfield to

314
00:13:29,089 --> 00:13:35,540
its partition into additive cosets of

315
00:13:31,309 --> 00:13:39,319
the subfield the random sbox pie does

316
00:13:35,540 --> 00:13:41,209
this actually you can write it in this

317
00:13:39,319 --> 00:13:44,179
way so that's what I call the TK log

318
00:13:41,209 --> 00:13:46,819
because the designers of quiz neat chick

319
00:13:44,179 --> 00:13:49,549
are the TK 26 and it's kind of a

320
00:13:46,819 --> 00:13:52,759
logarithm so you need an affine function

321
00:13:49,549 --> 00:13:54,559
and a small permutation of the exponents

322
00:13:52,759 --> 00:13:56,749
of the subfield and the generator and

323
00:13:54,559 --> 00:13:58,999
then it works like this I'm not going to

324
00:13:56,749 --> 00:14:01,699
go into too much details it map it

325
00:13:58,999 --> 00:14:03,889
always so such permutations and pie in

326
00:14:01,699 --> 00:14:07,429
particular always satisfy some set

327
00:14:03,889 --> 00:14:09,350
equalities namely DS but what is

328
00:14:07,429 --> 00:14:12,319
important is that it has a kind of

329
00:14:09,350 --> 00:14:14,769
separation property so if you have that

330
00:14:12,319 --> 00:14:17,959
your input is in a given multiplicative

331
00:14:14,769 --> 00:14:20,449
coset it will always be in the same

332
00:14:17,959 --> 00:14:24,199
additive coset because when you change J

333
00:14:20,449 --> 00:14:25,998
here you change the J here and so where

334
00:14:24,199 --> 00:14:29,410
it only changes where you are in this

335
00:14:25,999 --> 00:14:33,589
set the additive Cosette doesn't change

336
00:14:29,410 --> 00:14:35,420
at the same time if you fix a J and you

337
00:14:33,589 --> 00:14:37,040
change the multiplicative code set you

338
00:14:35,420 --> 00:14:38,569
will be at the same spot in the additive

339
00:14:37,040 --> 00:14:40,329
color set we just change the additive

340
00:14:38,569 --> 00:14:44,540
Cosette

341
00:14:40,329 --> 00:14:46,040
if as depended on I somehow you would

342
00:14:44,540 --> 00:14:49,969
still have this co set to Cosette

343
00:14:46,040 --> 00:14:52,519
property it's not the case so pi does

344
00:14:49,970 --> 00:14:53,449
not just map these modulated code sets

345
00:14:52,519 --> 00:14:57,439
to additive Co sets

346
00:14:53,449 --> 00:15:02,689
it's even simpler it could do this in a

347
00:14:57,439 --> 00:15:03,949
more complicated way it doesn't also we

348
00:15:02,689 --> 00:15:07,730
can prove and I'm not going to go over

349
00:15:03,949 --> 00:15:10,549
that that this TK log structure explains

350
00:15:07,730 --> 00:15:11,540
both of the previous decompositions the

351
00:15:10,549 --> 00:15:12,860
relationship between the two

352
00:15:11,540 --> 00:15:14,719
decomposition and this log base

353
00:15:12,860 --> 00:15:17,319
decomposition was extremely unclear to

354
00:15:14,720 --> 00:15:22,369
us we were really puzzled by this thing

355
00:15:17,319 --> 00:15:24,769
this decomposition explains it now why

356
00:15:22,369 --> 00:15:26,660
don't I like this I'm going to have to

357
00:15:24,769 --> 00:15:30,040
tell you about the work of someone else

358
00:15:26,660 --> 00:15:30,040
namely anu b'nei

359
00:15:30,540 --> 00:15:37,480
my apologies so in his PhD thesis he

360
00:15:34,840 --> 00:15:39,370
introduced a way to introduce backdoors

361
00:15:37,480 --> 00:15:41,080
in a block cipher which was a

362
00:15:39,370 --> 00:15:45,040
generalization of previous works by

363
00:15:41,080 --> 00:15:47,800
Jenny Patterson on these in primitive s

364
00:15:45,040 --> 00:15:52,270
boxes on the des that you could put in

365
00:15:47,800 --> 00:15:54,609
the DES and what he proved is that if

366
00:15:52,270 --> 00:15:56,560
you want to have a backdoor where you

367
00:15:54,610 --> 00:16:00,280
have have a partition of the input space

368
00:15:56,560 --> 00:16:03,849
into affine spaces and a partition of

369
00:16:00,280 --> 00:16:05,530
the output into affine spaces if you

370
00:16:03,850 --> 00:16:08,170
want this partition to be preserved so

371
00:16:05,530 --> 00:16:12,640
that two elements in the same VI end up

372
00:16:08,170 --> 00:16:14,410
in the same WI all the time then you had

373
00:16:12,640 --> 00:16:18,069
to have this kind of property at the

374
00:16:14,410 --> 00:16:21,160
sbox level so the S box has to map a

375
00:16:18,070 --> 00:16:22,660
partition of the space into affine

376
00:16:21,160 --> 00:16:25,300
spaces subspaces

377
00:16:22,660 --> 00:16:29,020
to a partition of the space into a find

378
00:16:25,300 --> 00:16:32,050
subspaces and if you write it with boxes

379
00:16:29,020 --> 00:16:34,720
like I always do and always with a G and

380
00:16:32,050 --> 00:16:36,490
you this is what you need so if you want

381
00:16:34,720 --> 00:16:38,620
to build a back door of the specific

382
00:16:36,490 --> 00:16:43,090
type then you deny this box which looks

383
00:16:38,620 --> 00:16:45,160
like this and in particular if you write

384
00:16:43,090 --> 00:16:46,510
it formally what it means is that you

385
00:16:45,160 --> 00:16:50,319
need to have a nest box which Maps

386
00:16:46,510 --> 00:16:53,710
additive cosets of a subspace to

387
00:16:50,320 --> 00:16:57,310
additive cosets of a subspace so that's

388
00:16:53,710 --> 00:16:59,200
what he established so yeah what he

389
00:16:57,310 --> 00:17:02,339
established is that the S box has to map

390
00:16:59,200 --> 00:17:05,350
additive Co sets to additive Co sets

391
00:17:02,340 --> 00:17:07,720
that's not what we have here PI Maps

392
00:17:05,349 --> 00:17:11,669
multiplicative Co sets to additive Co

393
00:17:07,720 --> 00:17:13,720
sets but it's not that simple either

394
00:17:11,670 --> 00:17:16,390
because when you look specifically at

395
00:17:13,720 --> 00:17:18,730
three bug the linear layer interact with

396
00:17:16,390 --> 00:17:22,120
both additive Co sets and multiplicative

397
00:17:18,730 --> 00:17:23,349
Co sets of the subfield so that's

398
00:17:22,119 --> 00:17:25,659
something else the designers did not

399
00:17:23,349 --> 00:17:27,429
explain when they designed three bugs

400
00:17:25,660 --> 00:17:28,990
they have a small internal block cipher

401
00:17:27,430 --> 00:17:31,570
and this internal block cipher uses a

402
00:17:28,990 --> 00:17:34,510
mix column like operation and it

403
00:17:31,570 --> 00:17:38,020
specified by its binary matrix so matrix

404
00:17:34,510 --> 00:17:39,940
so this is the specification if you

405
00:17:38,020 --> 00:17:41,740
write the binary matrix as a picture

406
00:17:39,940 --> 00:17:43,540
this is what you get and there are some

407
00:17:41,740 --> 00:17:46,180
obvious patterns here

408
00:17:43,540 --> 00:17:49,870
it's actually just an 8x8 matrix of the

409
00:17:46,180 --> 00:17:51,460
subfield why they didn't say so I don't

410
00:17:49,870 --> 00:17:54,429
know because there is nothing wrong with

411
00:17:51,460 --> 00:17:55,990
that what's funnier is that it's defined

412
00:17:54,430 --> 00:18:00,700
in the same field with the same

413
00:17:55,990 --> 00:18:02,620
polynomial as pi so if you take a vector

414
00:18:00,700 --> 00:18:04,480
of this shape you just have one element

415
00:18:02,620 --> 00:18:07,449
X which is in the sub field and

416
00:18:04,480 --> 00:18:11,530
everything else is equal to zero when

417
00:18:07,450 --> 00:18:14,770
you apply this binary matrix to the

418
00:18:11,530 --> 00:18:17,230
vector you get elements that are going

419
00:18:14,770 --> 00:18:20,680
to iterate through added multiplicative

420
00:18:17,230 --> 00:18:22,990
Co sets of the subfield so if X is in

421
00:18:20,680 --> 00:18:25,780
the subfield and is going looping over

422
00:18:22,990 --> 00:18:27,400
the sub field each cell of the output

423
00:18:25,780 --> 00:18:31,050
vector after multiplication by this

424
00:18:27,400 --> 00:18:37,600
matrix are going to iterate over

425
00:18:31,050 --> 00:18:39,490
multiplicative cosets of the subfield so

426
00:18:37,600 --> 00:18:42,969
to open problems pretty obvious ones

427
00:18:39,490 --> 00:18:44,950
first how was L built its MDS but what

428
00:18:42,970 --> 00:18:46,540
else can we say I mean like this guy is

429
00:18:44,950 --> 00:18:48,880
equal to this guy and this guy is equal

430
00:18:46,540 --> 00:18:50,580
to this this guy can this tell us how

431
00:18:48,880 --> 00:18:52,480
what kind of structure it has and

432
00:18:50,580 --> 00:18:56,610
obviously can we leverage these

433
00:18:52,480 --> 00:19:00,790
properties to actually attack three bug

434
00:18:56,610 --> 00:19:02,260
sorry or indicate or also kinetic so in

435
00:19:00,790 --> 00:19:05,500
the case of kwitny cheeked you also have

436
00:19:02,260 --> 00:19:07,210
a similar situation except there were

437
00:19:05,500 --> 00:19:09,640
kind enough to actually provide the

438
00:19:07,210 --> 00:19:12,280
matrix in this case and it's a different

439
00:19:09,640 --> 00:19:14,770
polynomial that defines the field so you

440
00:19:12,280 --> 00:19:17,590
don't have this kind of stuff in quiz

441
00:19:14,770 --> 00:19:20,260
neat chick but you still have the same s

442
00:19:17,590 --> 00:19:21,879
box with the same very strong Adric

443
00:19:20,260 --> 00:19:25,150
structure which is supposed to be random

444
00:19:21,880 --> 00:19:28,810
so some natural questions that you may

445
00:19:25,150 --> 00:19:30,370
ask yourselves after seeing this that's

446
00:19:28,810 --> 00:19:32,110
when I get asked a lot actually isn't if

447
00:19:30,370 --> 00:19:33,879
always possible to find a decomposition

448
00:19:32,110 --> 00:19:35,889
of a permutation well the answer is

449
00:19:33,880 --> 00:19:37,360
simple it's no if you generate a

450
00:19:35,890 --> 00:19:39,070
permutation at random and you give it to

451
00:19:37,360 --> 00:19:41,770
me I won't be able to say anything other

452
00:19:39,070 --> 00:19:43,210
than that it looks random if we can

453
00:19:41,770 --> 00:19:44,889
actually find a structure it's real

454
00:19:43,210 --> 00:19:49,090
strong indication that the design

455
00:19:44,890 --> 00:19:52,030
process was not random is there anything

456
00:19:49,090 --> 00:19:54,280
wrong with log base test boxes because

457
00:19:52,030 --> 00:19:55,810
other people use them there's nothing

458
00:19:54,280 --> 00:19:56,920
wrong with using the logarithm but it's

459
00:19:55,810 --> 00:19:57,549
not what's happening here

460
00:19:56,920 --> 00:19:59,769
it's not just

461
00:19:57,549 --> 00:20:03,549
logarithm is a logarithm which Maps the

462
00:19:59,769 --> 00:20:05,710
field to itself not to the integers it

463
00:20:03,549 --> 00:20:07,690
can be seen as the composition of a

464
00:20:05,710 --> 00:20:10,239
logarithm and then something which sends

465
00:20:07,690 --> 00:20:12,940
back the integrals over the finite field

466
00:20:10,239 --> 00:20:15,039
and also in the case of three Bogut

467
00:20:12,940 --> 00:20:16,659
interacts in a very non-trivial way with

468
00:20:15,039 --> 00:20:17,139
a linear layer so that's why I don't

469
00:20:16,659 --> 00:20:20,289
like it

470
00:20:17,139 --> 00:20:22,209
and why would I mean this is the third

471
00:20:20,289 --> 00:20:24,039
decomposition we have like why won't

472
00:20:22,210 --> 00:20:25,899
there be a fourth or a fifth one at some

473
00:20:24,039 --> 00:20:28,629
point to answer this one I need to do

474
00:20:25,899 --> 00:20:34,359
some combinatorics so you have two to

475
00:20:28,629 --> 00:20:37,988
the 1684 roughly 8-bit permutations you

476
00:20:34,359 --> 00:20:39,489
have to to the 80 3tk logs and to put

477
00:20:37,989 --> 00:20:41,980
this number into perspective you have

478
00:20:39,489 --> 00:20:45,580
about two to the seventy of fine

479
00:20:41,980 --> 00:20:48,789
permutations so if someone were to give

480
00:20:45,580 --> 00:20:50,379
you an affine permutation and tell you

481
00:20:48,789 --> 00:20:52,899
that they had generated it using a

482
00:20:50,379 --> 00:20:54,519
random permutation generator you would

483
00:20:52,899 --> 00:20:56,590
probably not believe them and believe

484
00:20:54,519 --> 00:20:59,859
that there is some sort of bias in to

485
00:20:56,590 --> 00:21:03,519
their generation algorithm it's the same

486
00:20:59,859 --> 00:21:05,139
here that's why I claim that the

487
00:21:03,519 --> 00:21:06,609
presence of the structure was deliberate

488
00:21:05,139 --> 00:21:10,209
and that's what the designer is actually

489
00:21:06,609 --> 00:21:11,678
intended if you want to design an sbox

490
00:21:10,210 --> 00:21:13,840
with properties that are really similar

491
00:21:11,679 --> 00:21:16,450
to pi the generation algorithm is very

492
00:21:13,840 --> 00:21:19,090
simple you just pick a TK log at random

493
00:21:16,450 --> 00:21:21,009
you check if it's linearity and

494
00:21:19,090 --> 00:21:23,049
differential uniformity are the best

495
00:21:21,009 --> 00:21:24,639
possible for a TK log if it's the case

496
00:21:23,049 --> 00:21:26,739
then you output it and you're happy if

497
00:21:24,639 --> 00:21:28,359
not you generate another it finishes

498
00:21:26,739 --> 00:21:32,440
pretty quickly you just need to generate

499
00:21:28,359 --> 00:21:36,759
about 2 to the power 11 random TK logs

500
00:21:32,440 --> 00:21:38,350
and you will find one however so while

501
00:21:36,759 --> 00:21:40,019
the results so the result of such an

502
00:21:38,350 --> 00:21:42,850
algorithm will really look like pi

503
00:21:40,019 --> 00:21:46,749
however is never better than a regular

504
00:21:42,850 --> 00:21:49,059
logarithm so if you just take a plain

505
00:21:46,749 --> 00:21:50,889
discrete log the differential

506
00:21:49,059 --> 00:21:53,168
informative and linearity will be the

507
00:21:50,889 --> 00:21:55,389
same and you will actually have fewer of

508
00:21:53,169 --> 00:21:59,559
these coefficients in the etiology so

509
00:21:55,389 --> 00:22:02,738
it's a an epsilon better pi is an

510
00:21:59,559 --> 00:22:05,529
epsilon worse than the discrete log so

511
00:22:02,739 --> 00:22:07,419
the reason to use a TK log instead of a

512
00:22:05,529 --> 00:22:09,790
logarithm is not an improvement of the

513
00:22:07,419 --> 00:22:12,850
cryptographic properties

514
00:22:09,790 --> 00:22:16,840
and so in conclusion so if you want to

515
00:22:12,850 --> 00:22:19,149
convince your friends that I mean if you

516
00:22:16,840 --> 00:22:20,709
want to talk about the decomposition of

517
00:22:19,150 --> 00:22:22,510
this S box with your friends who might

518
00:22:20,710 --> 00:22:25,570
not be cryptographers I have written a

519
00:22:22,510 --> 00:22:29,250
note where I intended to vulgarize this

520
00:22:25,570 --> 00:22:29,250
result so it's at a disadvantage

521
00:22:30,030 --> 00:22:34,120
structure in PI and I hope I have

522
00:22:32,110 --> 00:22:35,830
convinced you was a deliberate choice by

523
00:22:34,120 --> 00:22:38,800
its designers that's what they intended

524
00:22:35,830 --> 00:22:40,720
to do why I don't know but that's what

525
00:22:38,800 --> 00:22:42,520
they intended to do and it really looks

526
00:22:40,720 --> 00:22:46,120
like a structure which is known to yield

527
00:22:42,520 --> 00:22:48,300
a back door I have not found an attack

528
00:22:46,120 --> 00:22:50,860
against three ball using this property

529
00:22:48,300 --> 00:22:52,480
to be clear I have not found such an

530
00:22:50,860 --> 00:22:56,350
attack I'm not saying there is none I

531
00:22:52,480 --> 00:22:57,760
have not found it however until the

532
00:22:56,350 --> 00:22:59,980
designers of three began Kunichika

533
00:22:57,760 --> 00:23:02,470
explained properly how their random

534
00:22:59,980 --> 00:23:04,480
generation process could output an sbox

535
00:23:02,470 --> 00:23:07,150
mapped in cosets of the subfields to

536
00:23:04,480 --> 00:23:09,400
cosets of the subfield in the same field

537
00:23:07,150 --> 00:23:12,250
as the one used to build the linear

538
00:23:09,400 --> 00:23:15,190
layer of their hash function and why

539
00:23:12,250 --> 00:23:18,010
that might be a good thing I don't think

540
00:23:15,190 --> 00:23:19,480
we should use these algorithms and I

541
00:23:18,010 --> 00:23:21,580
don't think we should standardized them

542
00:23:19,480 --> 00:23:25,090
I'm looking at I saw when I'm saying

543
00:23:21,580 --> 00:23:26,590
this but representatives of ISO I know

544
00:23:25,090 --> 00:23:28,570
that next week they are going to discuss

545
00:23:26,590 --> 00:23:29,580
standardize on quiz knee cheek I think

546
00:23:28,570 --> 00:23:32,700
it's a horrible idea

547
00:23:29,580 --> 00:23:32,699
thank you

548
00:23:33,110 --> 00:23:37,479
[Music]

549
00:23:34,090 --> 00:23:37,480
[Applause]

550
00:23:38,210 --> 00:23:50,910
questions or comments

551
00:23:40,080 --> 00:23:53,040
yeah here yeah do you think there's

552
00:23:50,910 --> 00:23:55,490
something to learn about invariance more

553
00:23:53,040 --> 00:23:58,320
variants of invariant subspace attacks

554
00:23:55,490 --> 00:24:00,540
exploiting these kind of properties if I

555
00:23:58,320 --> 00:24:02,850
were to try to exploit these properties

556
00:24:00,540 --> 00:24:05,220
that's the way we'd go yes it's really

557
00:24:02,850 --> 00:24:07,399
reminiscent of this invariant properties

558
00:24:05,220 --> 00:24:09,450
but but this kind of partition is

559
00:24:07,400 --> 00:24:11,040
typically I mean it doesn't remind me of

560
00:24:09,450 --> 00:24:13,740
any of the four in some of the attacks

561
00:24:11,040 --> 00:24:16,530
that Gregor presented on Monday so that

562
00:24:13,740 --> 00:24:20,300
it might be a new variant or yes okay

563
00:24:16,530 --> 00:24:20,300
that's a ways it agree

564
00:24:27,110 --> 00:24:30,110
yeah

565
00:24:36,920 --> 00:24:42,960
thank you for your talk you indicated

566
00:24:40,740 --> 00:24:45,210
that it's easy to find the one with the

567
00:24:42,960 --> 00:24:47,100
best differential in your properties in

568
00:24:45,210 --> 00:24:50,100
this space how did you find the bound

569
00:24:47,100 --> 00:24:52,649
for this experimentally maybe there is a

570
00:24:50,100 --> 00:24:54,510
way to really obtain them with proper

571
00:24:52,650 --> 00:24:57,150
pencil paper argument I didn't do that I

572
00:24:54,510 --> 00:25:01,140
generated a lot and I saw that they

573
00:24:57,150 --> 00:25:05,250
could not improve the bounds actually

574
00:25:01,140 --> 00:25:07,679
have my experimental results here so

575
00:25:05,250 --> 00:25:09,210
this is not just the differential

576
00:25:07,679 --> 00:25:12,679
uniformity and linearity it's a bit

577
00:25:09,210 --> 00:25:15,929
finer grained so the higher you get on

578
00:25:12,679 --> 00:25:18,990
on this axis the higher you go the least

579
00:25:15,929 --> 00:25:22,470
likely your linear properties are and in

580
00:25:18,990 --> 00:25:25,890
particular the lower you're in the lower

581
00:25:22,470 --> 00:25:27,390
your linearity is the higher you go it's

582
00:25:25,890 --> 00:25:29,190
a bit finer grained because it also

583
00:25:27,390 --> 00:25:31,980
counts the number of occurrences of this

584
00:25:29,190 --> 00:25:34,500
maximum coefficient and here is the same

585
00:25:31,980 --> 00:25:36,630
for the differential uniformity so when

586
00:25:34,500 --> 00:25:41,460
you generate TK logs you usually end up

587
00:25:36,630 --> 00:25:46,080
in here under my pointer here and you

588
00:25:41,460 --> 00:25:48,900
have some cases where which correspond

589
00:25:46,080 --> 00:25:52,199
to about one thousandth of them which

590
00:25:48,900 --> 00:25:54,840
end up around this spot but you would

591
00:25:52,200 --> 00:25:57,270
need to go much higher than this to get

592
00:25:54,840 --> 00:26:00,209
something with a lower nonlinear with a

593
00:25:57,270 --> 00:26:02,429
lower linearity and much further to get

594
00:26:00,210 --> 00:26:06,090
something with a lower differential

595
00:26:02,429 --> 00:26:09,450
uniformity so maybe there is like one

596
00:26:06,090 --> 00:26:11,580
specific combination of these two

597
00:26:09,450 --> 00:26:12,990
components so the s and the Coppa that

598
00:26:11,580 --> 00:26:14,699
you need to define the TK dog maybe

599
00:26:12,990 --> 00:26:18,300
there is one specific instance which we

600
00:26:14,700 --> 00:26:21,360
lower these quantities but using just

601
00:26:18,300 --> 00:26:24,260
random algorithm a randomized search

602
00:26:21,360 --> 00:26:24,260
cannot even find them

603
00:26:26,059 --> 00:26:34,899
and you have a question or comment okay

604
00:26:32,100 --> 00:26:41,178
if not let's thanks Leo again

605
00:26:34,900 --> 00:26:41,179
[Applause]

