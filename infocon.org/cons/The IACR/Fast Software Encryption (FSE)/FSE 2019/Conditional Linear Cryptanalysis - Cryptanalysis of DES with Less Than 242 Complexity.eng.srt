1
00:00:04,580 --> 00:00:09,440
you know personalities are two major

2
00:00:07,220 --> 00:00:12,200
engineering techniques for assessing the

3
00:00:09,440 --> 00:00:14,480
strange of long cycles this techniques

4
00:00:12,200 --> 00:00:17,330
Safari extensions which can prove the

5
00:00:14,480 --> 00:00:19,369
success in Paris tension along which

6
00:00:17,330 --> 00:00:21,380
they miss the back they form all the

7
00:00:19,369 --> 00:00:24,890
known shortcut attacks against the data

8
00:00:21,380 --> 00:00:27,650
encryption standard today

9
00:00:24,890 --> 00:00:29,960
i'm luciene an extension that reduces

10
00:00:27,650 --> 00:00:33,970
the complexity of the best attack of

11
00:00:29,960 --> 00:00:33,970
death to less than two to forty two

12
00:00:34,060 --> 00:00:39,980
deaths consists of sixteen rounds and

13
00:00:37,010 --> 00:00:41,120
permutations in arithmetic operation the

14
00:00:39,980 --> 00:00:44,209
size of death

15
00:00:41,120 --> 00:00:47,538
this is sixty forty in the keep silence

16
00:00:44,210 --> 00:00:50,780
is fifty-six be the main part of the run

17
00:00:47,539 --> 00:00:53,690
function in the F function the F

18
00:00:50,780 --> 00:00:56,960
function works on the right half of the

19
00:00:53,690 --> 00:00:59,420
data then the output of the F function

20
00:00:56,960 --> 00:01:02,329
is soft with the left half of the data

21
00:00:59,420 --> 00:01:03,909
in the two parts and so before the next

22
00:01:02,329 --> 00:01:06,530
round

23
00:01:03,909 --> 00:01:12,650
let's take a deeper look into the F

24
00:01:06,530 --> 00:01:14,020
function the F function expanded 32

25
00:01:12,650 --> 00:01:17,810
input bits

26
00:01:14,020 --> 00:01:19,940
240hp start them with the stop key in

27
00:01:17,810 --> 00:01:22,670
terms of the result methods I ate a

28
00:01:19,940 --> 00:01:25,280
success each of the a ten-percent

29
00:01:22,670 --> 00:01:28,030
transform its english-based to follow up

30
00:01:25,280 --> 00:01:31,430
with using a nonlinear transformation

31
00:01:28,030 --> 00:01:33,800
then the order of the resulting 32 feet

32
00:01:31,430 --> 00:01:36,770
is the muted to become inserted to

33
00:01:33,800 --> 00:01:38,360
output bits of the F function since the

34
00:01:36,770 --> 00:01:40,280
S box is not the only nonlinear

35
00:01:38,360 --> 00:01:42,170
component they attacking based on

36
00:01:40,280 --> 00:01:46,970
statistical inner relations of the

37
00:01:42,170 --> 00:01:49,340
exporter for example the best we have

38
00:01:46,970 --> 00:01:51,770
proclamation of best time approximate

39
00:01:49,340 --> 00:01:54,740
the second bit of input to be late for

40
00:01:51,770 --> 00:01:57,440
before output pieces the probability of

41
00:01:54,740 --> 00:02:00,399
this linear approximation is 12 divided

42
00:01:57,440 --> 00:02:02,620
by 64 and in 12 cases of the

43
00:02:00,400 --> 00:02:05,860
impossible equals infinity of these

44
00:02:02,620 --> 00:02:11,740
bitches devout well in 52 the parenting

45
00:02:05,860 --> 00:02:14,200
is one linear cryptanalysis uses

46
00:02:11,740 --> 00:02:16,060
statistical proximation that approximate

47
00:02:14,200 --> 00:02:20,560
parity of subsets of bits of the

48
00:02:16,060 --> 00:02:22,990
greatest detective in idiot diaper

49
00:02:20,560 --> 00:02:25,870
any linear equations involving plain

50
00:02:22,990 --> 00:02:28,090
liquids such as XP in keeping with whole

51
00:02:25,870 --> 00:02:29,740
bit probability close to health when

52
00:02:28,090 --> 00:02:31,450
we're considering all the plaintiffs in

53
00:02:29,740 --> 00:02:32,550
a place explained in the corresponding

54
00:02:31,450 --> 00:02:35,649
type of thing

55
00:02:32,550 --> 00:02:37,780
Lina took the nasties that invented up

56
00:02:35,650 --> 00:02:40,320
in fact the domain of course dimensions

57
00:02:37,780 --> 00:02:43,570
have probabilities different in hats

58
00:02:40,320 --> 00:02:45,519
each of oxygenation fit the probability

59
00:02:43,570 --> 00:02:47,650
to ball which is the fraction of that

60
00:02:45,520 --> 00:02:51,490
text whose encryptions that is Firefox

61
00:02:47,650 --> 00:02:54,370
dementia the ability to distinguish

62
00:02:51,490 --> 00:02:55,780
whether an approximation halt highly

63
00:02:54,370 --> 00:02:58,120
depends on the distance of the

64
00:02:55,780 --> 00:03:02,430
probability one-half require these

65
00:02:58,120 --> 00:03:02,430
distance diversity approximation a

66
00:03:02,490 --> 00:03:10,540
linear approximation is comparable in

67
00:03:07,360 --> 00:03:13,120
lambda K when lambda P is subsets of

68
00:03:10,540 --> 00:03:15,160
beats afflicted the plaintext lambda C

69
00:03:13,120 --> 00:03:17,830
is a subset of bits of the ciphertext

70
00:03:15,160 --> 00:03:19,810
and lambda key is the subsets of bits of

71
00:03:17,830 --> 00:03:22,030
the key the probability of the

72
00:03:19,810 --> 00:03:24,370
approximation is the probability that

73
00:03:22,030 --> 00:03:28,060
the parity of these subsets of bits is

74
00:03:24,370 --> 00:03:31,660
equal to 0 the bias of the approximation

75
00:03:28,060 --> 00:03:33,580
is equal to the probability - self we

76
00:03:31,660 --> 00:03:35,230
are usually interested in approximation

77
00:03:33,580 --> 00:03:41,140
with the highest absolute value of the

78
00:03:35,230 --> 00:03:42,518
ballas algorithm one finds the parity

79
00:03:41,140 --> 00:03:43,440
bits of the key involving the

80
00:03:42,519 --> 00:03:45,820
approximation

81
00:03:43,440 --> 00:03:48,340
given that the approximation holds with

82
00:03:45,820 --> 00:03:49,810
probability 1/2 plus epsilon and end

83
00:03:48,340 --> 00:03:50,530
plain text in the corresponding

84
00:03:49,810 --> 00:03:52,750
ciphertext

85
00:03:50,530 --> 00:03:54,790
the algorithm counts the number M of

86
00:03:52,750 --> 00:03:58,510
plaintext satisfying P lambda P

87
00:03:54,790 --> 00:04:00,400
exosphere on the C equal to 0 the

88
00:03:58,510 --> 00:04:02,649
algorithm guesses the parity of the key

89
00:04:00,400 --> 00:04:06,370
bit involving the approximation for

90
00:04:02,650 --> 00:04:09,400
example if epsilon is greater than 0 and

91
00:04:06,370 --> 00:04:11,170
M is greater than n half the algorithm

92
00:04:09,400 --> 00:04:13,470
guesses that the parity of the qubits is

93
00:04:11,170 --> 00:04:13,470
0

94
00:04:13,660 --> 00:04:18,310
this algorithm finds only one parity bit

95
00:04:16,089 --> 00:04:20,320
of the King the success rate of the

96
00:04:18,310 --> 00:04:23,410
algorithm grows as the absolute value of

97
00:04:20,320 --> 00:04:25,210
the bias increases in particular the

98
00:04:23,410 --> 00:04:27,580
amount of plaintext required for this

99
00:04:25,210 --> 00:04:32,979
attack is proportional to one over the

100
00:04:27,580 --> 00:04:35,320
bias squared in order to attack the full

101
00:04:32,980 --> 00:04:37,660
sixteen round s mutsu uses the best 14

102
00:04:35,320 --> 00:04:38,400
round approximation as we can see in

103
00:04:37,660 --> 00:04:41,260
this slide

104
00:04:38,400 --> 00:04:43,030
Metsu use this algorithm to to find the

105
00:04:41,260 --> 00:04:45,250
parity bits of the key involving the

106
00:04:43,030 --> 00:04:47,500
approximation same is in algorithm 1 as

107
00:04:45,250 --> 00:04:50,410
well as bits of the first and last sub

108
00:04:47,500 --> 00:04:51,940
G's the attack required about 2 to 43

109
00:04:50,410 --> 00:04:56,590
known plaintext and also time of

110
00:04:51,940 --> 00:04:59,380
analysis we develop an extension of

111
00:04:56,590 --> 00:05:01,359
linear cryptanalysis that conditions

112
00:04:59,380 --> 00:05:03,880
linear approximations on other linear

113
00:05:01,360 --> 00:05:06,340
approximations we use conditions to

114
00:05:03,880 --> 00:05:08,140
discard some of the data so the best of

115
00:05:06,340 --> 00:05:10,450
the remaining data increase or decrease

116
00:05:08,140 --> 00:05:12,610
is the number of required known

117
00:05:10,450 --> 00:05:15,430
plaintext is proportional to 1 over the

118
00:05:12,610 --> 00:05:17,470
bias squared discarding some of the data

119
00:05:15,430 --> 00:05:20,620
may improve the number of needed known

120
00:05:17,470 --> 00:05:23,110
plaintext conditions can be defined by

121
00:05:20,620 --> 00:05:25,600
any observable information plaintext

122
00:05:23,110 --> 00:05:29,710
bits ciphertext bits and from around

123
00:05:25,600 --> 00:05:31,930
them in the case of facial ciphers we

124
00:05:29,710 --> 00:05:33,430
found a specific type of conditions that

125
00:05:31,930 --> 00:05:36,490
is highly based on the specific

126
00:05:33,430 --> 00:05:38,560
structure in particular will refer to

127
00:05:36,490 --> 00:05:40,990
bit that are the XOR of the outputs of

128
00:05:38,560 --> 00:05:42,610
the F function of the odd rounds which

129
00:05:40,990 --> 00:05:45,370
are computable from the plaintext and

130
00:05:42,610 --> 00:05:46,960
ciphertext in this example we can see

131
00:05:45,370 --> 00:05:49,660
that PL the left

132
00:05:46,960 --> 00:05:52,120
let the left half of the plaintext x or

133
00:05:49,660 --> 00:05:54,910
y 1 the output of the F function in the

134
00:05:52,120 --> 00:05:57,520
first round X or Y 3 the output of the F

135
00:05:54,910 --> 00:05:59,880
fraction in the third round is equal to

136
00:05:57,520 --> 00:06:02,169
CR the left half of the ciphertext

137
00:05:59,880 --> 00:06:04,570
therefore we can calculate the output

138
00:06:02,170 --> 00:06:06,820
the XOR of the output of the F function

139
00:06:04,570 --> 00:06:08,380
in all the odd ones from the left half

140
00:06:06,820 --> 00:06:10,930
of the plaintext and the right half of

141
00:06:08,380 --> 00:06:13,540
the ciphertext it is important to

142
00:06:10,930 --> 00:06:16,270
emphasize the disinformation on the XOR

143
00:06:13,540 --> 00:06:17,980
values is not probabilistic unlike the

144
00:06:16,270 --> 00:06:21,159
situation in a general linear

145
00:06:17,980 --> 00:06:22,560
approximation such extra bits when

146
00:06:21,160 --> 00:06:25,900
viewed as linear approximations

147
00:06:22,560 --> 00:06:27,420
typically have biased 0 but they are

148
00:06:25,900 --> 00:06:32,520
very useful

149
00:06:27,420 --> 00:06:34,140
conditions to other proximation i start

150
00:06:32,520 --> 00:06:36,330
with an example of such a linear

151
00:06:34,140 --> 00:06:38,880
dependency with a single active sbox

152
00:06:36,330 --> 00:06:41,609
as mentioned in earlier this is the best

153
00:06:38,880 --> 00:06:43,770
non-trivial in approximation and the

154
00:06:41,610 --> 00:06:46,470
bias of this linear approximation is 12

155
00:06:43,770 --> 00:06:48,359
divided by 64 in the case of single

156
00:06:46,470 --> 00:06:50,130
round we can compute the output of the F

157
00:06:48,360 --> 00:06:52,950
function from the plaintext and

158
00:06:50,130 --> 00:06:54,630
ciphertext the output of the F function

159
00:06:52,950 --> 00:06:56,400
is equal to the left half of the

160
00:06:54,630 --> 00:07:00,630
plaintext XOR the left half of the

161
00:06:56,400 --> 00:07:02,330
ciphertext in this table will calculate

162
00:07:00,630 --> 00:07:04,560
the bias of the linear approximation

163
00:07:02,330 --> 00:07:08,039
conditioning on all the four output bits

164
00:07:04,560 --> 00:07:10,380
of S 5 it is an important and unexpected

165
00:07:08,040 --> 00:07:13,860
observation that only one of the 12

166
00:07:10,380 --> 00:07:15,750
parity zero cases satisfies n s be equal

167
00:07:13,860 --> 00:07:19,200
one these are the right cases in this

168
00:07:15,750 --> 00:07:23,190
table while the other 11 satisfied LSB

169
00:07:19,200 --> 00:07:26,520
equal zero the bias of the approximation

170
00:07:23,190 --> 00:07:29,969
without any condition is minus 20

171
00:07:26,520 --> 00:07:33,330
divided by 64 in 12 cases the parity is

172
00:07:29,970 --> 00:07:35,720
0 and 52 the parity is one when

173
00:07:33,330 --> 00:07:40,919
conditioning on LSB equals zero in

174
00:07:35,720 --> 00:07:43,440
eleven cases the parrot is 0 and in 21

175
00:07:40,920 --> 00:07:48,000
the parity is 1 and when we conditioning

176
00:07:43,440 --> 00:07:51,390
on LSB equal 1 the red case in one case

177
00:07:48,000 --> 00:07:54,990
the parity is 0 and in 31 the parity is

178
00:07:51,390 --> 00:07:57,750
1 so consider only encryptions in which

179
00:07:54,990 --> 00:08:00,930
the LSB is 1 in this half of the data

180
00:07:57,750 --> 00:08:04,680
the bias grows from minus 20 divided by

181
00:08:00,930 --> 00:08:07,200
64 to minus 30 divided by 64 while the

182
00:08:04,680 --> 00:08:10,160
bias of the rest of the data reduces to

183
00:08:07,200 --> 00:08:13,050
minus 10 divided by 64

184
00:08:10,160 --> 00:08:15,720
we will exemplify this with a scan from

185
00:08:13,050 --> 00:08:17,970
Adi Shamir script of paper on the left

186
00:08:15,720 --> 00:08:20,220
side of the vertical line appear all the

187
00:08:17,970 --> 00:08:23,190
outputs which the second bit of input is

188
00:08:20,220 --> 00:08:24,990
0 and on the right side of the line all

189
00:08:23,190 --> 00:08:26,600
the outputs which the second bit of

190
00:08:24,990 --> 00:08:29,580
input is 1

191
00:08:26,600 --> 00:08:32,370
shamil circle the values with an even

192
00:08:29,580 --> 00:08:34,919
parity of the four output bits therefore

193
00:08:32,370 --> 00:08:37,200
in the left side he circled the outputs

194
00:08:34,919 --> 00:08:39,270
which satisfy the parity approximation

195
00:08:37,200 --> 00:08:40,919
and in the right side he circled the

196
00:08:39,270 --> 00:08:43,588
outputs which do not set

197
00:08:40,919 --> 00:08:45,269
by the parity approximation and the blue

198
00:08:43,589 --> 00:08:48,029
cases are the cases that satisfy the

199
00:08:45,269 --> 00:08:52,589
approximation and we can see that only

200
00:08:48,029 --> 00:08:54,930
one of the blue cases is odd therefore

201
00:08:52,589 --> 00:08:58,470
we see that when we condition on the odd

202
00:08:54,930 --> 00:09:05,310
cases in which LS be equal to one we get

203
00:08:58,470 --> 00:09:07,320
one value against 31 it is not only that

204
00:09:05,310 --> 00:09:09,599
we can do it for a single round we can

205
00:09:07,320 --> 00:09:11,970
extend conditional approximations to

206
00:09:09,600 --> 00:09:15,029
more than one round in this case we show

207
00:09:11,970 --> 00:09:17,670
it on four so consider four successive

208
00:09:15,029 --> 00:09:20,490
rounds taken from Matsui is best linear

209
00:09:17,670 --> 00:09:23,069
approximation this approximation uses

210
00:09:20,490 --> 00:09:25,649
three active s-boxes as five on the

211
00:09:23,070 --> 00:09:28,620
first and third round and s 1 on the

212
00:09:25,649 --> 00:09:31,170
first round notice that both or drugs

213
00:09:28,620 --> 00:09:33,510
have the same active s box and that we

214
00:09:31,170 --> 00:09:35,490
can calculate the x of the outputs of s

215
00:09:33,510 --> 00:09:38,430
5 in all the odd rounds from the

216
00:09:35,490 --> 00:09:39,930
plaintext and ciphertext so what we are

217
00:09:38,430 --> 00:09:42,000
going to do is we're going to condition

218
00:09:39,930 --> 00:09:47,550
the bias of the linear approximation on

219
00:09:42,000 --> 00:09:49,260
these extra values in this table we

220
00:09:47,550 --> 00:09:51,060
calculated the bias of the linear

221
00:09:49,260 --> 00:09:54,149
approximation conditioning on all the

222
00:09:51,060 --> 00:09:56,310
Forks or output bits of s 5 we can see

223
00:09:54,149 --> 00:09:59,070
that in the case that the X or of the

224
00:09:56,310 --> 00:10:01,709
LSB of the output of s 5 is equal to 1

225
00:09:59,070 --> 00:10:04,230
the bias of the linear approximation is

226
00:10:01,709 --> 00:10:07,290
0 these are the right cases in the table

227
00:10:04,230 --> 00:10:10,380
so using only the plaintext in which the

228
00:10:07,290 --> 00:10:15,480
X of the LSB is equal to 0 increase the

229
00:10:10,380 --> 00:10:17,130
bias by a factor of 2 so we need a

230
00:10:15,480 --> 00:10:18,990
quarter of the data compared to the

231
00:10:17,130 --> 00:10:21,750
regular linear attack with the same

232
00:10:18,990 --> 00:10:23,899
approximation but this is the amount of

233
00:10:21,750 --> 00:10:27,000
data that remains after we discard half

234
00:10:23,899 --> 00:10:30,029
so in total we need half of the original

235
00:10:27,000 --> 00:10:33,899
data we discard a plaintext in which the

236
00:10:30,029 --> 00:10:37,290
X or the LSB is equal to 1 and then we

237
00:10:33,899 --> 00:10:40,019
get the required quarter the same factor

238
00:10:37,290 --> 00:10:43,170
of saving holds for an eighth round

239
00:10:40,019 --> 00:10:45,839
reduced this the same factor of saving

240
00:10:43,170 --> 00:10:48,479
holds for 12th round reduce deaths in

241
00:10:45,839 --> 00:10:51,000
the same factor of saving odds for the

242
00:10:48,480 --> 00:10:54,180
full 16 round deaths but this is not the

243
00:10:51,000 --> 00:10:57,970
best attack on the full list

244
00:10:54,180 --> 00:11:00,099
as mentioned earlier in order to attack

245
00:10:57,970 --> 00:11:02,350
the 416 around dismissals is the best

246
00:11:00,100 --> 00:11:05,340
routine around approximation denoted

247
00:11:02,350 --> 00:11:09,130
here by lambda 1 in this approximation

248
00:11:05,340 --> 00:11:12,340
s5 is active in all the odd rounds so we

249
00:11:09,130 --> 00:11:14,340
can do here the same in this table we

250
00:11:12,340 --> 00:11:16,450
calculated the bias of lambda 1

251
00:11:14,340 --> 00:11:19,630
conditioning on all the four works or

252
00:11:16,450 --> 00:11:22,960
output bits of s5 the Baths of lambda 1

253
00:11:19,630 --> 00:11:25,270
went conditioned on LSB equal 1 the red

254
00:11:22,960 --> 00:11:28,420
cases in the table is improved by a

255
00:11:25,270 --> 00:11:31,420
small factor so using this conditional

256
00:11:28,420 --> 00:11:35,860
linear approximation we can save 12% of

257
00:11:31,420 --> 00:11:39,490
them at Swiss attack but we want to save

258
00:11:35,860 --> 00:11:42,160
more so our attack is based on 214 round

259
00:11:39,490 --> 00:11:44,650
linear approximations lambda 1 is the

260
00:11:42,160 --> 00:11:47,980
best 14 round linear approximation same

261
00:11:44,650 --> 00:11:49,890
as Matsu uses and lambda 2 defense form

262
00:11:47,980 --> 00:11:54,280
lambda 1 in the first round

263
00:11:49,890 --> 00:11:58,720
notice that s5 is active in all the odd

264
00:11:54,280 --> 00:12:01,150
runs in both linear approximations in

265
00:11:58,720 --> 00:12:04,150
these tables we calculated the bias of

266
00:12:01,150 --> 00:12:08,319
lambda 1 and lambda 2 conditioning on

267
00:12:04,150 --> 00:12:11,260
all the 4x or output bits of s5 in the

268
00:12:08,320 --> 00:12:14,440
case of lambda 1 the average bias of the

269
00:12:11,260 --> 00:12:16,660
red entries with X or LSB equal to 1 is

270
00:12:14,440 --> 00:12:19,450
greater than the average bias of the

271
00:12:16,660 --> 00:12:23,079
entries with X or else be equal to 0

272
00:12:19,450 --> 00:12:26,230
in the case of lambda 2 the average bias

273
00:12:23,080 --> 00:12:29,170
of the red entries with X or LSB equal

274
00:12:26,230 --> 00:12:32,520
to 0 is greater than the average bias of

275
00:12:29,170 --> 00:12:35,949
the entries with X or else be equal to 1

276
00:12:32,520 --> 00:12:38,439
so the bias of lambda 1 when conditioned

277
00:12:35,950 --> 00:12:41,800
on LSB equal to 1 is improved by a

278
00:12:38,440 --> 00:12:44,170
factor of 2 to the 0.6 the bias of

279
00:12:41,800 --> 00:12:46,449
lambda 2 which was much worse than the

280
00:12:44,170 --> 00:12:50,290
best of lambda 1 is improved by a higher

281
00:12:46,450 --> 00:12:52,390
factor of 2 to the zero point 8 so the

282
00:12:50,290 --> 00:12:55,780
biases are almost similar after the

283
00:12:52,390 --> 00:12:57,520
improvement in practice in our attack we

284
00:12:55,780 --> 00:13:00,520
use these two conditional linear

285
00:12:57,520 --> 00:13:02,319
approximations in a complex way so in

286
00:13:00,520 --> 00:13:07,050
total we can improve the complexity of

287
00:13:02,320 --> 00:13:07,050
the attack by a factor of about 2

288
00:13:07,180 --> 00:13:12,459
we tasted most techniques with our in a

289
00:13:09,610 --> 00:13:14,230
test program and we can see in this

290
00:13:12,460 --> 00:13:18,220
graphs all the attacks against the data

291
00:13:14,230 --> 00:13:20,140
encryption standard this is the success

292
00:13:18,220 --> 00:13:22,510
rate of the attack and this is the

293
00:13:20,140 --> 00:13:24,220
complexity of the attack I mean the

294
00:13:22,510 --> 00:13:28,120
maximum between the number of needed

295
00:13:24,220 --> 00:13:30,390
plaintext and the time of analysis the

296
00:13:28,120 --> 00:13:32,710
brown care is differential cryptanalysis

297
00:13:30,390 --> 00:13:35,650
the orange one is linear cryptanalysis

298
00:13:32,710 --> 00:13:38,110
and the red one is conditional in our

299
00:13:35,650 --> 00:13:41,620
crypt analysis between the orange and

300
00:13:38,110 --> 00:13:51,220
the red curve we can see extensions of

301
00:13:41,620 --> 00:13:52,750
linear cryptanalysis to summarize in

302
00:13:51,220 --> 00:13:55,210
this talk we showed the cleaner

303
00:13:52,750 --> 00:13:56,529
approximations have highly affected by

304
00:13:55,210 --> 00:13:59,260
conditioning them on other

305
00:13:56,529 --> 00:14:01,210
approximations we showed how to use such

306
00:13:59,260 --> 00:14:03,310
conditioner approximations for attacks

307
00:14:01,210 --> 00:14:05,980
leading to the best current attack

308
00:14:03,310 --> 00:14:08,229
against the data encryption standard the

309
00:14:05,980 --> 00:14:10,720
simplest case is conditioning linear

310
00:14:08,230 --> 00:14:12,670
approximations on the XOR of the output

311
00:14:10,720 --> 00:14:15,339
of the F function in all the odd rounds

312
00:14:12,670 --> 00:14:17,709
we show that even using single

313
00:14:15,339 --> 00:14:20,800
conditional inner proximation we can

314
00:14:17,709 --> 00:14:22,510
save 12% over met Swiss attack using

315
00:14:20,800 --> 00:14:24,459
both conditional linear approximations

316
00:14:22,510 --> 00:14:30,750
lead to attack against des with

317
00:14:24,459 --> 00:14:30,750
complexity less than to 242 thank you

318
00:14:34,660 --> 00:14:52,010
any question foster thank you for the

319
00:14:46,640 --> 00:15:01,000
talk so I just wonder if your method can

320
00:14:52,010 --> 00:15:02,810
be applied to other ciphers okay

321
00:15:01,000 --> 00:15:05,390
cybersyn okay

322
00:15:02,810 --> 00:15:08,329
in the case of Espeon ciphers we can

323
00:15:05,390 --> 00:15:10,100
condition linear approximations on any

324
00:15:08,330 --> 00:15:13,300
other linear approximations and we can

325
00:15:10,100 --> 00:15:18,160
gain improving the bias in some cases

326
00:15:13,300 --> 00:15:18,160
okay any kind of linear approximation

327
00:15:20,860 --> 00:15:24,340
more question

328
00:15:24,790 --> 00:15:38,180
actually I have one yeah so did you try

329
00:15:31,880 --> 00:15:39,260
to do a experimental verification of

330
00:15:38,180 --> 00:15:42,229
your attack

331
00:15:39,260 --> 00:15:44,630
of course the graph we saw yeah it was

332
00:15:42,230 --> 00:15:51,380
experimentally try oh that's weird data

333
00:15:44,630 --> 00:15:54,730
yes okay thank you more question if no

334
00:15:51,380 --> 00:15:54,730
let's hang stuff again

335
00:15:56,740 --> 00:15:59,879
[Applause]

