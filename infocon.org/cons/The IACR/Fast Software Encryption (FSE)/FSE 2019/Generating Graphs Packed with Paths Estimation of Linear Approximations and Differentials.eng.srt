1
00:00:00,030 --> 00:00:07,049
generating graphs back to his pass he's

2
00:00:03,210 --> 00:00:09,240
joined between Philip varna and Matthias

3
00:00:07,049 --> 00:00:11,370
hor Anderson and Matias will give the

4
00:00:09,240 --> 00:00:13,980
top thank you thank you for the

5
00:00:11,370 --> 00:00:16,470
introduction so the talk is divided into

6
00:00:13,980 --> 00:00:17,940
five sections so first we're gonna have

7
00:00:16,470 --> 00:00:20,698
some motivation about what we're trying

8
00:00:17,940 --> 00:00:22,640
to do and some of the simple folk law

9
00:00:20,699 --> 00:00:25,080
about linear cryptanalysis

10
00:00:22,640 --> 00:00:27,119
then we're going to rephrase linear

11
00:00:25,080 --> 00:00:28,380
cryptanalysis as a set of graph problems

12
00:00:27,119 --> 00:00:30,448
and then we're going to look at some

13
00:00:28,380 --> 00:00:32,430
heuristics for finding good sub graphs

14
00:00:30,449 --> 00:00:34,649
and why this is of interest for his

15
00:00:32,430 --> 00:00:36,630
paeans and then we're gonna look at some

16
00:00:34,649 --> 00:00:39,960
plots and results and then lastly some

17
00:00:36,630 --> 00:00:42,660
computer work so first some motivation

18
00:00:39,960 --> 00:00:44,340
so since the since the 90s we have been

19
00:00:42,660 --> 00:00:45,839
knowing about linear differential

20
00:00:44,340 --> 00:00:49,110
distinguishes and generally when you

21
00:00:45,840 --> 00:00:50,460
when you suggest a new design one of the

22
00:00:49,110 --> 00:00:52,640
things that you have to argue about is

23
00:00:50,460 --> 00:00:54,870
is provide some sort of argument against

24
00:00:52,640 --> 00:00:57,870
your resilience to linear and

25
00:00:54,870 --> 00:00:59,280
differential cryptanalysis and of course

26
00:00:57,870 --> 00:01:01,019
what is what is of interest is to

27
00:00:59,280 --> 00:01:03,480
determine the optimal parameters of

28
00:01:01,020 --> 00:01:08,330
these distinguishers as well as the

29
00:01:03,480 --> 00:01:08,330
expected power of our distinguished errs

30
00:01:08,450 --> 00:01:13,520
so in this this presentation will will

31
00:01:11,729 --> 00:01:16,408
primarily focus on linear cryptanalysis

32
00:01:13,520 --> 00:01:18,090
both because of the session and also

33
00:01:16,409 --> 00:01:21,530
because the differential case is largely

34
00:01:18,090 --> 00:01:26,220
analogous for the word percentage okay

35
00:01:21,530 --> 00:01:29,759
so for for an hour round for an hour

36
00:01:26,220 --> 00:01:31,920
round cipher iterated cipher we have

37
00:01:29,759 --> 00:01:34,290
this notion of a trail which defines

38
00:01:31,920 --> 00:01:36,689
approximations over every round function

39
00:01:34,290 --> 00:01:39,720
and the idea is that we can calculate

40
00:01:36,689 --> 00:01:41,158
the correlation of the of the

41
00:01:39,720 --> 00:01:42,869
approximation over every round function

42
00:01:41,159 --> 00:01:45,299
efficiently because it decomposes into

43
00:01:42,869 --> 00:01:46,590
relatively small and simple nonlinear

44
00:01:45,299 --> 00:01:50,070
components for which we can enumerate

45
00:01:46,590 --> 00:01:52,979
the full domain and then we have this

46
00:01:50,070 --> 00:01:55,770
notion of a correlation contribution for

47
00:01:52,979 --> 00:01:57,060
portrayal which is simply the product of

48
00:01:55,770 --> 00:02:00,630
the correlations over the approximations

49
00:01:57,060 --> 00:02:03,119
over all the rounds and then we can

50
00:02:00,630 --> 00:02:04,408
describe the approximation for an

51
00:02:03,119 --> 00:02:06,659
approximation between alpha and beta

52
00:02:04,409 --> 00:02:09,119
over the entire over the entire cipher

53
00:02:06,659 --> 00:02:12,390
simply as the sum of correlation

54
00:02:09,119 --> 00:02:14,850
contributions over over over

55
00:02:12,390 --> 00:02:18,059
traits under under suitable assumptions

56
00:02:14,850 --> 00:02:20,940
and then for four key alternating

57
00:02:18,060 --> 00:02:23,850
ciphers we generally assume that that so

58
00:02:20,940 --> 00:02:26,310
if you if that that the analysis becomes

59
00:02:23,850 --> 00:02:28,950
the you consider the square square

60
00:02:26,310 --> 00:02:32,750
correlation then it becomes independent

61
00:02:28,950 --> 00:02:35,760
of the key it essentially becomes a sign

62
00:02:32,750 --> 00:02:39,090
and then we have this notion of an of an

63
00:02:35,760 --> 00:02:43,019
LP which will denote which will be the

64
00:02:39,090 --> 00:02:45,360
expected correlation amplitude over for

65
00:02:43,020 --> 00:02:47,690
our distinguished ur and when we can

66
00:02:45,360 --> 00:02:50,220
estimate against suitable assumptions

67
00:02:47,690 --> 00:02:52,440
this is the sum of the square

68
00:02:50,220 --> 00:02:54,390
correlations of trails and then what

69
00:02:52,440 --> 00:02:56,280
what happens in practice is that we sum

70
00:02:54,390 --> 00:03:00,980
over some smaller subsets calligraphic

71
00:02:56,280 --> 00:03:03,239
you often this calligraphic you is is

72
00:03:00,980 --> 00:03:05,280
merely a single tone in which case

73
00:03:03,239 --> 00:03:07,500
you're assuming that there is a single

74
00:03:05,280 --> 00:03:10,530
dominant trail so the idea is that we

75
00:03:07,500 --> 00:03:12,030
will sum over the the dominant terms we

76
00:03:10,530 --> 00:03:14,610
will consider the dominant terms of the

77
00:03:12,030 --> 00:03:18,140
of the summation and and they will give

78
00:03:14,610 --> 00:03:18,140
us a good estimate for voluntarism

79
00:03:18,230 --> 00:03:23,640
but of course the the performance of a

80
00:03:20,730 --> 00:03:25,109
single trail and any particularly even

81
00:03:23,640 --> 00:03:28,768
any small set of trails is not

82
00:03:25,110 --> 00:03:31,440
necessarily a good indication about your

83
00:03:28,769 --> 00:03:32,910
designs susceptibility to linear in

84
00:03:31,440 --> 00:03:35,340
linear and differential crypt analysis

85
00:03:32,910 --> 00:03:36,840
and this is the problem that we're

86
00:03:35,340 --> 00:03:39,959
trying to mitigate and current the

87
00:03:36,840 --> 00:03:41,940
current methods for generally current

88
00:03:39,959 --> 00:03:44,579
methods for considering multiple trails

89
00:03:41,940 --> 00:03:47,519
of a whole are linear in the number of

90
00:03:44,579 --> 00:03:48,959
trails and then for for the signs which

91
00:03:47,519 --> 00:03:51,810
have a very large number of good trails

92
00:03:48,959 --> 00:03:53,549
this stuff up tomorrow so we would like

93
00:03:51,810 --> 00:03:56,820
to get something need something arity

94
00:03:53,549 --> 00:03:58,860
which is the goal of this work and to

95
00:03:56,820 --> 00:04:01,380
get into this frame of mind we are going

96
00:03:58,860 --> 00:04:04,680
to rephrase linear crypt analysis as a

97
00:04:01,380 --> 00:04:07,320
graph problem so the graph is going to

98
00:04:04,680 --> 00:04:09,060
be what we call a multi-stage graph so

99
00:04:07,320 --> 00:04:12,660
in this case we have a we have a cipher

100
00:04:09,060 --> 00:04:14,160
of three rounds and it's it's a directed

101
00:04:12,660 --> 00:04:16,880
graph here going from left to right that

102
00:04:14,160 --> 00:04:20,459
I am amid the edges there are arrows and

103
00:04:16,880 --> 00:04:22,500
the vertices are our parodies for linear

104
00:04:20,459 --> 00:04:24,510
cryptanalysis and similarly for

105
00:04:22,500 --> 00:04:27,120
differential and

106
00:04:24,510 --> 00:04:29,599
the edges then naturally become the

107
00:04:27,120 --> 00:04:31,920
approximations over the round functions

108
00:04:29,600 --> 00:04:33,600
and the length of the edge is the

109
00:04:31,920 --> 00:04:35,820
squared correlation of the approximation

110
00:04:33,600 --> 00:04:39,990
of the round function between the source

111
00:04:35,820 --> 00:04:42,240
and the destination of the edge then if

112
00:04:39,990 --> 00:04:44,190
we consider with this with this notation

113
00:04:42,240 --> 00:04:48,120
then if we consider the length

114
00:04:44,190 --> 00:04:51,600
multiplicatively then then paths through

115
00:04:48,120 --> 00:04:53,640
the graph becomes trails and the length

116
00:04:51,600 --> 00:04:55,530
of a path becomes the squared

117
00:04:53,640 --> 00:05:00,419
correlation contribution of a particular

118
00:04:55,530 --> 00:05:02,250
trail and with this we have we define

119
00:05:00,420 --> 00:05:04,590
the notion of a weight of the graph

120
00:05:02,250 --> 00:05:07,740
between an alpha and a beta as the input

121
00:05:04,590 --> 00:05:11,310
and output nodes and this corresponds to

122
00:05:07,740 --> 00:05:13,560
the the hull which is the sum over over

123
00:05:11,310 --> 00:05:16,560
the lengths of every path between alpha

124
00:05:13,560 --> 00:05:18,150
and beta one one one observation here is

125
00:05:16,560 --> 00:05:21,960
if one very simple observation here is

126
00:05:18,150 --> 00:05:24,870
that you can calculate this in linear

127
00:05:21,960 --> 00:05:27,479
time over the number of edges basically

128
00:05:24,870 --> 00:05:28,860
using bottom-up memorization so you

129
00:05:27,480 --> 00:05:31,080
start by calculating the hall between

130
00:05:28,860 --> 00:05:33,210
any alpha and any you note which is

131
00:05:31,080 --> 00:05:35,280
trivial in this case and then we can

132
00:05:33,210 --> 00:05:38,489
calculate the hall between any Alpha and

133
00:05:35,280 --> 00:05:42,119
any V node buy at any V node calculating

134
00:05:38,490 --> 00:05:45,630
a weighted sum of the halls between the

135
00:05:42,120 --> 00:05:48,690
Alpha and the you notes and then we

136
00:05:45,630 --> 00:05:51,000
progress similarly for the beta notes

137
00:05:48,690 --> 00:05:52,860
again calculating a weighted sum over

138
00:05:51,000 --> 00:05:58,200
the halls between the Alpha nodes and

139
00:05:52,860 --> 00:06:01,500
the V nodes also note that we can we can

140
00:05:58,200 --> 00:06:05,190
calculate we get for free the weight

141
00:06:01,500 --> 00:06:09,270
between alpha and any beta node so we

142
00:06:05,190 --> 00:06:12,600
don't need to consider any pair but of

143
00:06:09,270 --> 00:06:14,609
course this is all nice and fine but the

144
00:06:12,600 --> 00:06:16,410
problem here is that the graph is partly

145
00:06:14,610 --> 00:06:19,200
large right so if we didn't I evenly

146
00:06:16,410 --> 00:06:20,820
defined the graph is this sure the the

147
00:06:19,200 --> 00:06:24,840
algorithm runs in linear time but the

148
00:06:20,820 --> 00:06:26,730
graph is exponential size so I use so

149
00:06:24,840 --> 00:06:29,969
the question is can we find some some

150
00:06:26,730 --> 00:06:33,360
suitable soft graphs that contain in a

151
00:06:29,970 --> 00:06:34,770
sense most of the good trails and of

152
00:06:33,360 --> 00:06:36,840
course the the observation here is that

153
00:06:34,770 --> 00:06:37,799
we are not looking for good trails

154
00:06:36,840 --> 00:06:40,198
necessary

155
00:06:37,800 --> 00:06:44,250
we're looking at the more general

156
00:06:40,199 --> 00:06:46,530
problem of finding these good graphs ie

157
00:06:44,250 --> 00:06:49,849
we want the maximization of the weight

158
00:06:46,530 --> 00:06:53,159
between any alpha beta pair to be large

159
00:06:49,849 --> 00:06:56,128
and for this we have devised some

160
00:06:53,159 --> 00:06:57,870
heuristics we have and in this case

161
00:06:56,129 --> 00:06:59,879
we're going to be focusing primarily on

162
00:06:57,870 --> 00:07:03,860
SPMS which we have done the best

163
00:06:59,879 --> 00:07:07,169
heuristics so the overall the overall

164
00:07:03,860 --> 00:07:09,629
method will be that we'll pick some sort

165
00:07:07,169 --> 00:07:12,330
of disjoint families of edges which we

166
00:07:09,629 --> 00:07:14,819
described and then we'll prune the

167
00:07:12,330 --> 00:07:16,770
families using an approximation of the

168
00:07:14,819 --> 00:07:19,770
of the graph to find with these edges

169
00:07:16,770 --> 00:07:22,520
and then finally we will expand these

170
00:07:19,770 --> 00:07:24,659
families to two to to a full graph and

171
00:07:22,520 --> 00:07:29,008
then at the end we'll do some cleanup

172
00:07:24,659 --> 00:07:30,659
work on the graph oh so one immediate

173
00:07:29,009 --> 00:07:33,180
and easy observation is that if we have

174
00:07:30,659 --> 00:07:35,819
any edge of length 0 you just remove it

175
00:07:33,180 --> 00:07:37,729
this corresponds to a trail with length

176
00:07:35,819 --> 00:07:41,610
0 and it doesn't contribute to fault and

177
00:07:37,729 --> 00:07:43,289
then once we've removed it we can we can

178
00:07:41,610 --> 00:07:44,849
remove any any vertex that doesn't have

179
00:07:43,289 --> 00:07:49,259
a predecessor or successor because no

180
00:07:44,849 --> 00:07:51,090
path can traverse it but this still

181
00:07:49,259 --> 00:07:53,639
doesn't get us far enough so now

182
00:07:51,090 --> 00:07:56,250
describing the these families of edges

183
00:07:53,639 --> 00:07:59,909
so is probably best described by given

184
00:07:56,250 --> 00:08:03,029
an example so consider a 16-bit SPN a

185
00:07:59,909 --> 00:08:06,750
small toy cipher with four identical s

186
00:08:03,029 --> 00:08:09,029
boxes then if we where we have the

187
00:08:06,750 --> 00:08:11,849
following two approximations over the S

188
00:08:09,029 --> 00:08:13,919
box with a followings great correlations

189
00:08:11,849 --> 00:08:16,830
of 3 goes to 2d with correlation Tuzla

190
00:08:13,919 --> 00:08:20,940
-2 and 7 goes to 4 with the square into

191
00:08:16,830 --> 00:08:22,948
2 minus 2 then if we have the S box

192
00:08:20,940 --> 00:08:26,460
patent which we call it this will be a

193
00:08:22,949 --> 00:08:30,150
family you want to one of the families s

194
00:08:26,460 --> 00:08:33,299
1 to 1 point 2 to the -2 1 point 2 to

195
00:08:30,150 --> 00:08:35,968
the -2 this corresponds to every

196
00:08:33,299 --> 00:08:38,939
approximation over the S boxes which

197
00:08:35,969 --> 00:08:41,940
have this particular pattern of squared

198
00:08:38,940 --> 00:08:46,220
correlations so in particular the first

199
00:08:41,940 --> 00:08:49,410
and the third S box must be inactive and

200
00:08:46,220 --> 00:08:51,270
the second and the last S box is

201
00:08:49,410 --> 00:08:56,430
basically any combination

202
00:08:51,270 --> 00:08:58,410
of the approximations above and then we

203
00:08:56,430 --> 00:09:00,599
also naturally have we also have the

204
00:08:58,410 --> 00:09:02,130
projection onto the first and the second

205
00:09:00,600 --> 00:09:03,990
coordinate which corresponds to the

206
00:09:02,130 --> 00:09:06,930
input pair on the set of all inputs at

207
00:09:03,990 --> 00:09:11,280
ease instead of kelabra parities for for

208
00:09:06,930 --> 00:09:13,319
the family okay then if we have some

209
00:09:11,280 --> 00:09:15,510
some set of family so we have some set

210
00:09:13,320 --> 00:09:18,360
of s box patterns then we can consider

211
00:09:15,510 --> 00:09:19,080
the graph defined by by this set in in a

212
00:09:18,360 --> 00:09:21,390
natural way

213
00:09:19,080 --> 00:09:24,540
by simply just expanding every member of

214
00:09:21,390 --> 00:09:27,390
the set at this these forms are edges

215
00:09:24,540 --> 00:09:33,510
and then our vertices is just the union

216
00:09:27,390 --> 00:09:35,760
of the projections so if let so suppose

217
00:09:33,510 --> 00:09:38,010
we have some some set of s box patents

218
00:09:35,760 --> 00:09:41,160
defining this soft craft is of our

219
00:09:38,010 --> 00:09:43,200
interest then we can immediately observe

220
00:09:41,160 --> 00:09:44,760
that for any intermediate stage in the

221
00:09:43,200 --> 00:09:47,580
graph so anymore note that it's not an

222
00:09:44,760 --> 00:09:50,490
input on an output node if if we does

223
00:09:47,580 --> 00:09:52,440
not lie in the in the set of both if we

224
00:09:50,490 --> 00:09:55,050
does not like both in the set of input

225
00:09:52,440 --> 00:09:57,540
and output parities of the expansion of

226
00:09:55,050 --> 00:09:58,709
all families then it's it's immediately

227
00:09:57,540 --> 00:10:03,120
pruned because it can't have a

228
00:09:58,710 --> 00:10:05,460
predecessor or successor a problem now

229
00:10:03,120 --> 00:10:07,410
is that so we've defined these families

230
00:10:05,460 --> 00:10:11,190
we can keep the description of the

231
00:10:07,410 --> 00:10:15,959
families in memory but the expansion we

232
00:10:11,190 --> 00:10:17,520
cannot possibly keep in memory so the

233
00:10:15,960 --> 00:10:19,800
idea will be the kemon can be somehow

234
00:10:17,520 --> 00:10:21,420
prune on these families before expanding

235
00:10:19,800 --> 00:10:24,260
them so that we have less families to

236
00:10:21,420 --> 00:10:27,120
expand and we can manage the graph and

237
00:10:24,260 --> 00:10:29,340
the overall approach and the more

238
00:10:27,120 --> 00:10:31,590
details in the paper is that we generate

239
00:10:29,340 --> 00:10:34,140
an approximation of the graph by

240
00:10:31,590 --> 00:10:37,650
applying a compression function very

241
00:10:34,140 --> 00:10:40,470
very like differential truncated

242
00:10:37,650 --> 00:10:43,620
differentials in such a way that if

243
00:10:40,470 --> 00:10:46,890
there is a an edge in the original graph

244
00:10:43,620 --> 00:10:49,170
and it's a path between two nodes in the

245
00:10:46,890 --> 00:10:51,449
original graph then there is also an

246
00:10:49,170 --> 00:10:56,459
edge in the truncated graph but not

247
00:10:51,450 --> 00:10:59,700
necessarily the converse and then then

248
00:10:56,460 --> 00:11:01,470
our algorithm is mainly like iterative

249
00:10:59,700 --> 00:11:04,590
the refining the compression until you

250
00:11:01,470 --> 00:11:05,190
reach the trivial case so we start by

251
00:11:04,590 --> 00:11:09,120
generating

252
00:11:05,190 --> 00:11:10,530
instead of patterns using a heuristic we

253
00:11:09,120 --> 00:11:12,750
have a generic turistic but if you have

254
00:11:10,530 --> 00:11:14,300
some side for specifically knowledge you

255
00:11:12,750 --> 00:11:17,550
could you could you could apply this and

256
00:11:14,300 --> 00:11:19,290
then we pick a compression factor then

257
00:11:17,550 --> 00:11:21,800
we generate this truncated graph by

258
00:11:19,290 --> 00:11:24,420
applying the compression on every vertex

259
00:11:21,800 --> 00:11:27,630
when we expand the the members of the

260
00:11:24,420 --> 00:11:31,469
other set and then prune on the

261
00:11:27,630 --> 00:11:35,240
truncated graph then we remove any any

262
00:11:31,470 --> 00:11:38,910
family any s box set any X Box pattern

263
00:11:35,240 --> 00:11:41,310
for which all members of the expanded s

264
00:11:38,910 --> 00:11:43,500
box pattern are not in the truncated

265
00:11:41,310 --> 00:11:45,839
graph because if it if a member is not

266
00:11:43,500 --> 00:11:48,060
in the truncated graph it cannot be in

267
00:11:45,840 --> 00:11:50,180
the full graph either the truncated

268
00:11:48,060 --> 00:11:56,099
graph is sort of strictly more connected

269
00:11:50,180 --> 00:11:58,800
and then we refine the compression until

270
00:11:56,100 --> 00:12:03,120
we get to the trivial case and then we

271
00:11:58,800 --> 00:12:06,630
expand the graph ok notice here that in

272
00:12:03,120 --> 00:12:08,640
a sense this this this this procedure is

273
00:12:06,630 --> 00:12:09,990
is lossless right so you're not you're

274
00:12:08,640 --> 00:12:13,370
not removing something that could

275
00:12:09,990 --> 00:12:16,200
otherwise have created additional

276
00:12:13,370 --> 00:12:18,750
additional paths like once your fixture

277
00:12:16,200 --> 00:12:20,490
your set of patterns the graph that you

278
00:12:18,750 --> 00:12:22,380
weakened out in the end will have the

279
00:12:20,490 --> 00:12:27,570
same will have the same set of paths

280
00:12:22,380 --> 00:12:32,280
through the cipher so I suppose we have

281
00:12:27,570 --> 00:12:34,230
this following graph at the end then we

282
00:12:32,280 --> 00:12:36,420
have we observe the problem and this is

283
00:12:34,230 --> 00:12:38,640
basically that if we apply now pruning

284
00:12:36,420 --> 00:12:41,400
to the intermediate rounds after at the

285
00:12:38,640 --> 00:12:43,800
end after expansion then we will lose a

286
00:12:41,400 --> 00:12:45,600
large part of a search base and the way

287
00:12:43,800 --> 00:12:48,630
that we heuristic aliy avoid this for

288
00:12:45,600 --> 00:12:53,550
ESPN's is that we add some vertices that

289
00:12:48,630 --> 00:12:57,110
are not in the set of of the expanded

290
00:12:53,550 --> 00:12:59,160
families that are optimal for for the

291
00:12:57,110 --> 00:13:01,770
vertices that would otherwise be pruned

292
00:12:59,160 --> 00:13:04,199
so their input and output vertices do

293
00:13:01,770 --> 00:13:05,490
this here and here here and here that

294
00:13:04,200 --> 00:13:10,170
but otherwise we prune them you add

295
00:13:05,490 --> 00:13:14,170
optimal input or output vertices to

296
00:13:10,170 --> 00:13:17,020
ensure that they're not ok

297
00:13:14,170 --> 00:13:19,360
then we can take a look at some plots

298
00:13:17,020 --> 00:13:21,970
and results so we've implemented this

299
00:13:19,360 --> 00:13:25,390
dis eristic in a publicly available to

300
00:13:21,970 --> 00:13:26,890
trip the graph and for SP ends it's it's

301
00:13:25,390 --> 00:13:29,260
very simple to use it's essentially fine

302
00:13:26,890 --> 00:13:32,439
for kit you give it a linear layer get

303
00:13:29,260 --> 00:13:35,950
that nonlinear layer and it you start

304
00:13:32,440 --> 00:13:38,410
giving you analysis so of course one

305
00:13:35,950 --> 00:13:39,940
thing you can do once you've found this

306
00:13:38,410 --> 00:13:42,130
crop graph is that you can you can plot

307
00:13:39,940 --> 00:13:44,410
it at least for small parameters so that

308
00:13:42,130 --> 00:13:47,110
you can actually look at it with your

309
00:13:44,410 --> 00:13:49,270
eyes and we hope that this will be of

310
00:13:47,110 --> 00:13:52,990
use to decipher designers who can then

311
00:13:49,270 --> 00:13:55,870
visualize how the hall looks so here's

312
00:13:52,990 --> 00:13:58,030
his a pret here's a plot for present so

313
00:13:55,870 --> 00:14:00,040
you immediately see basically the

314
00:13:58,030 --> 00:14:02,319
Okumura observation that you have this

315
00:14:00,040 --> 00:14:04,990
this huge amount of trails because you

316
00:14:02,320 --> 00:14:06,910
have this level of freedom in your

317
00:14:04,990 --> 00:14:12,610
choice of approximations over the over

318
00:14:06,910 --> 00:14:14,199
the round functions in contrast here's a

319
00:14:12,610 --> 00:14:16,990
here's a plot for gift which has this

320
00:14:14,200 --> 00:14:20,110
spec which is essentially a prison-like

321
00:14:16,990 --> 00:14:23,880
cipher with this specially crafted bogey

322
00:14:20,110 --> 00:14:26,110
permutation that is designed to to avoid

323
00:14:23,880 --> 00:14:30,189
exactly this observation that was found

324
00:14:26,110 --> 00:14:32,500
in Okuma that you have this very large

325
00:14:30,190 --> 00:14:34,720
number of Hemingway one trails that are

326
00:14:32,500 --> 00:14:36,280
all roughly equally good right so in

327
00:14:34,720 --> 00:14:39,250
particular if it's rate per percent you

328
00:14:36,280 --> 00:14:40,750
cannot you cannot really upper bound you

329
00:14:39,250 --> 00:14:42,220
cannot simply upper bound the squared

330
00:14:40,750 --> 00:14:43,450
correlation of any particular trail and

331
00:14:42,220 --> 00:14:45,610
take that as an indicative of your

332
00:14:43,450 --> 00:14:47,680
cipher susceptibility to linear

333
00:14:45,610 --> 00:14:50,740
cryptanalysis because there is this very

334
00:14:47,680 --> 00:14:52,449
strong hold effect so we have applied

335
00:14:50,740 --> 00:14:54,850
the the technique to 17 different

336
00:14:52,450 --> 00:14:57,880
ciphers for both linear and differential

337
00:14:54,850 --> 00:15:01,480
cryptanalysis and I want to highlight

338
00:14:57,880 --> 00:15:04,060
the the following results so we have for

339
00:15:01,480 --> 00:15:05,380
for Preston like designs and for the

340
00:15:04,060 --> 00:15:08,189
present like the science we generally

341
00:15:05,380 --> 00:15:12,160
find a very very large number of trails

342
00:15:08,190 --> 00:15:15,250
so just as an extreme example for puffin

343
00:15:12,160 --> 00:15:16,569
we find actually the the hall that we

344
00:15:15,250 --> 00:15:20,230
end up considering between our

345
00:15:16,570 --> 00:15:24,490
approximations contains two to the 112

346
00:15:20,230 --> 00:15:27,010
trails and and for president like

347
00:15:24,490 --> 00:15:27,790
designs to be we generally see about two

348
00:15:27,010 --> 00:15:30,160
to the sixty

349
00:15:27,790 --> 00:15:31,900
right over present we also see two tooth

350
00:15:30,160 --> 00:15:34,140
of the sixty which is also not feasible

351
00:15:31,900 --> 00:15:38,430
to do if you would have to win linearly

352
00:15:34,140 --> 00:15:42,040
will enumerate them wouldn't any time

353
00:15:38,430 --> 00:15:44,920
so we improve the analysis of President

354
00:15:42,040 --> 00:15:47,199
Biden century considering a vast number

355
00:15:44,920 --> 00:15:49,449
of trails I'd really no additional time

356
00:15:47,200 --> 00:15:51,220
and then for rectangle we also improved

357
00:15:49,450 --> 00:15:54,220
the howl analysis that is found found

358
00:15:51,220 --> 00:15:55,660
network in the original design work by

359
00:15:54,220 --> 00:15:59,830
considering a few hundred thousand

360
00:15:55,660 --> 00:16:02,800
trails and lastly some some points of

361
00:15:59,830 --> 00:16:05,230
future work so we would like to add

362
00:16:02,800 --> 00:16:07,630
support for Eric ciphers we need some

363
00:16:05,230 --> 00:16:09,430
good heuristics for a rxi purse the

364
00:16:07,630 --> 00:16:12,760
characteristics obviously don't don't

365
00:16:09,430 --> 00:16:15,400
don't port and it's not immediately

366
00:16:12,760 --> 00:16:16,750
obvious how to do this and we would also

367
00:16:15,400 --> 00:16:18,220
like to have some better heuristics for

368
00:16:16,750 --> 00:16:19,660
fast Network we do have support for fast

369
00:16:18,220 --> 00:16:22,780
networks but we would like to have some

370
00:16:19,660 --> 00:16:35,850
less generic heuristics

371
00:16:22,780 --> 00:16:35,850
yes question format yes

372
00:16:43,350 --> 00:16:49,330
thanks for the talk you said that for

373
00:16:46,270 --> 00:16:51,850
the tool you intended to be actual for

374
00:16:49,330 --> 00:16:55,270
designer so if I am now designing a new

375
00:16:51,850 --> 00:16:58,870
SP n yes cypher what do I have to do to

376
00:16:55,270 --> 00:17:01,240
apply this tool to my new design so for

377
00:16:58,870 --> 00:17:03,820
for Espeon it's really really simple you

378
00:17:01,240 --> 00:17:05,290
can supply the you simply supply the S

379
00:17:03,820 --> 00:17:06,550
boxes so you can have different aspects

380
00:17:05,290 --> 00:17:08,800
it's in the same right but we got

381
00:17:06,550 --> 00:17:10,569
currently only for technical reasons

382
00:17:08,800 --> 00:17:12,669
don't support it different s parts in

383
00:17:10,569 --> 00:17:14,980
different runs but you give you give it

384
00:17:12,670 --> 00:17:16,900
the S boxes you give it a linear layer

385
00:17:14,980 --> 00:17:20,349
you implement this in a rust function

386
00:17:16,900 --> 00:17:25,270
and then then even if you if you give

387
00:17:20,349 --> 00:17:27,099
you also give us the key schedule we can

388
00:17:25,270 --> 00:17:29,139
also generate an approximation of the

389
00:17:27,099 --> 00:17:32,379
correlation distribution over the key

390
00:17:29,140 --> 00:17:35,530
space because this this method also

391
00:17:32,380 --> 00:17:37,870
gives easily rise to to a way to quickly

392
00:17:35,530 --> 00:17:39,280
enumerate the correlation over the over

393
00:17:37,870 --> 00:17:41,290
the key space you're basically just we

394
00:17:39,280 --> 00:17:43,570
wait the graph according to the

395
00:17:41,290 --> 00:17:46,480
particular expanded key that you get

396
00:17:43,570 --> 00:17:48,370
from running the key schedule so for his

397
00:17:46,480 --> 00:17:53,110
paeans it's really simple to apply okay

398
00:17:48,370 --> 00:17:55,959
nice things for him so does your tools

399
00:17:53,110 --> 00:18:00,879
also support the partial s box layers

400
00:17:55,960 --> 00:18:02,860
like low and C I think we do I am not

401
00:18:00,880 --> 00:18:05,280
particularly I'm not super sure about

402
00:18:02,860 --> 00:18:05,280
that actually

403
00:18:11,350 --> 00:18:19,120
I don't the question is whether we have

404
00:18:16,780 --> 00:18:26,170
added that subsequently to this because

405
00:18:19,120 --> 00:18:29,620
we kept kept working on the tool I also

406
00:18:26,170 --> 00:18:32,320
have a question so maybe I missed a

407
00:18:29,620 --> 00:18:35,620
depart but said do you have a bound of

408
00:18:32,320 --> 00:18:40,139
the results and that the actual

409
00:18:35,620 --> 00:18:43,719
situation could you or do so

410
00:18:40,140 --> 00:18:48,550
do you have a bound between the result

411
00:18:43,720 --> 00:18:52,480
you find and the actual situation so

412
00:18:48,550 --> 00:18:54,629
what worries that area so so the results

413
00:18:52,480 --> 00:18:58,350
that we find right so if you give me

414
00:18:54,630 --> 00:19:01,630
these sbox families then I will consider

415
00:18:58,350 --> 00:19:04,179
every trail that lies in this expansion

416
00:19:01,630 --> 00:19:06,070
so if you can you if you give me say all

417
00:19:04,180 --> 00:19:10,450
the having having away one

418
00:19:06,070 --> 00:19:12,310
approximations over over the the all the

419
00:19:10,450 --> 00:19:14,950
Hemingway one parodies over the over the

420
00:19:12,310 --> 00:19:18,250
a sports safer present then I can give

421
00:19:14,950 --> 00:19:21,070
you the result for the whole over every

422
00:19:18,250 --> 00:19:22,720
trail that that license right so in a

423
00:19:21,070 --> 00:19:25,899
sense it's it's more it's more robust

424
00:19:22,720 --> 00:19:28,390
it's actually so so the heuristic step

425
00:19:25,900 --> 00:19:31,960
is choosing this this calligraphic p set

426
00:19:28,390 --> 00:19:36,910
of patents I don't know if this is did I

427
00:19:31,960 --> 00:19:39,240
answer your question yeah okay any more

428
00:19:36,910 --> 00:19:39,240
question

429
00:19:39,530 --> 00:19:44,060
if no less sank Matthias and other

430
00:19:42,450 --> 00:19:47,660
speakers in the circle

431
00:19:44,060 --> 00:19:47,659
[Applause]

