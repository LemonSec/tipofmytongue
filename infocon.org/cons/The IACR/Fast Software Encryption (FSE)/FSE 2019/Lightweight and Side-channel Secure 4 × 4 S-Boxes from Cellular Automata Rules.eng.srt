1
00:00:00,030 --> 00:00:05,609
the next talk is on lightweight and

2
00:00:02,550 --> 00:00:09,420
side-channel secure for bit/s boxes from

3
00:00:05,609 --> 00:00:13,080
cellular automata rules the paper is by

4
00:00:09,420 --> 00:00:16,970
a Jacuzzi Gaussian Rosetta said you can

5
00:00:13,080 --> 00:00:20,880
see carpet hanabi's millions of data

6
00:00:16,970 --> 00:00:25,669
step NP check and dep dip Mukhopadhyay

7
00:00:20,880 --> 00:00:25,669
on and Rajat will gives a toke

8
00:00:38,989 --> 00:00:45,300
thanks for the introduction so in this

9
00:00:43,199 --> 00:00:48,479
talk we are going to discuss on

10
00:00:45,300 --> 00:00:53,370
lightweight side channel secure for

11
00:00:48,479 --> 00:00:58,439
cross for is box design used from

12
00:00:53,370 --> 00:01:01,828
cellular automata rules so the first

13
00:00:58,439 --> 00:01:05,009
thing that motivated us to for this work

14
00:01:01,829 --> 00:01:08,100
is the NIST lightweight competition

15
00:01:05,009 --> 00:01:09,539
requirement and the resource and to

16
00:01:08,100 --> 00:01:13,380
provide a solution for the resource

17
00:01:09,539 --> 00:01:17,729
constrained devices for IOT s so for

18
00:01:13,380 --> 00:01:19,860
lightweight block ciphers the common

19
00:01:17,729 --> 00:01:23,130
matrices that we use from cost

20
00:01:19,860 --> 00:01:25,530
perspective our area memory or energy

21
00:01:23,130 --> 00:01:27,509
consumption and from performance

22
00:01:25,530 --> 00:01:30,420
perspective is throughput and power

23
00:01:27,509 --> 00:01:32,840
consumption now most of these matrices

24
00:01:30,420 --> 00:01:35,429
are orthogonal to each other

25
00:01:32,840 --> 00:01:39,720
suppose if you increase area then your

26
00:01:35,429 --> 00:01:41,970
throughput will be better but if you if

27
00:01:39,720 --> 00:01:47,759
you make a better throughput your area

28
00:01:41,970 --> 00:01:51,030
might degrade so for our work we focused

29
00:01:47,759 --> 00:01:53,369
on area as the lightweight competition

30
00:01:51,030 --> 00:01:56,399
requires that it has to be a low cost

31
00:01:53,369 --> 00:02:01,940
and uncertain resistance is a necessary

32
00:01:56,399 --> 00:02:05,250
of further application so coming to some

33
00:02:01,940 --> 00:02:07,050
lightweight block ciphers we have a

34
00:02:05,250 --> 00:02:10,050
present or gift or midori

35
00:02:07,050 --> 00:02:12,300
where bit pump which follows linear

36
00:02:10,050 --> 00:02:16,170
layer which is very lightweight that

37
00:02:12,300 --> 00:02:19,709
follows the permutation or almost MDS

38
00:02:16,170 --> 00:02:20,909
and shuffle cells for a c-major

39
00:02:19,709 --> 00:02:24,209
countermeasures

40
00:02:20,909 --> 00:02:26,519
linear layer it is much more cheaper but

41
00:02:24,209 --> 00:02:29,340
while it comes to nonlinear layer for

42
00:02:26,519 --> 00:02:31,500
his boxes it becomes heavy for

43
00:02:29,340 --> 00:02:34,680
especially for making its side channel

44
00:02:31,500 --> 00:02:38,640
resistant so sites and countermeasures

45
00:02:34,680 --> 00:02:41,489
requires a dedicated design where we we

46
00:02:38,640 --> 00:02:45,298
try to address this issue in our in our

47
00:02:41,489 --> 00:02:47,100
work so our goal is to design this for

48
00:02:45,299 --> 00:02:49,350
cross for his boxes with side channel

49
00:02:47,100 --> 00:02:51,299
resistance using cellular automata

50
00:02:49,350 --> 00:02:54,480
routes

51
00:02:51,300 --> 00:02:58,350
so what we have done is we have used a

52
00:02:54,480 --> 00:03:02,459
cellular automata rule with focus on

53
00:02:58,350 --> 00:03:05,670
area and with those rules we try to

54
00:03:02,460 --> 00:03:09,740
classify based on the number of cubic

55
00:03:05,670 --> 00:03:12,890
quadratic or linear terms in the ANF and

56
00:03:09,740 --> 00:03:16,670
using that we have seen that we have

57
00:03:12,890 --> 00:03:20,459
smaller area footprint with those boxes

58
00:03:16,670 --> 00:03:22,920
49 percent and 35 percent and it

59
00:03:20,460 --> 00:03:27,750
consumes lesser power compared to

60
00:03:22,920 --> 00:03:31,040
present or gift rest boxes now following

61
00:03:27,750 --> 00:03:34,650
this we we designed to design paradigms

62
00:03:31,040 --> 00:03:37,679
with this s boxes one with bit

63
00:03:34,650 --> 00:03:40,320
permutation and another with almost MDS

64
00:03:37,680 --> 00:03:43,620
matrices at the end we will show those

65
00:03:40,320 --> 00:03:46,170
results as well so before going to the

66
00:03:43,620 --> 00:03:48,840
details let me give you some background

67
00:03:46,170 --> 00:03:51,929
so first thing is we call an S box

68
00:03:48,840 --> 00:03:54,090
optimal which follows by active property

69
00:03:51,930 --> 00:03:59,250
with non-linearity for and differential

70
00:03:54,090 --> 00:04:02,370
uniformity for then for such sites and

71
00:03:59,250 --> 00:04:05,850
countermeasures we randomize the

72
00:04:02,370 --> 00:04:07,470
intermediate values and using secret

73
00:04:05,850 --> 00:04:10,560
sharing scheme so we follow the

74
00:04:07,470 --> 00:04:13,940
threshold implementation scheme for for

75
00:04:10,560 --> 00:04:16,500
our is box side channel resistant design

76
00:04:13,940 --> 00:04:19,019
so proposed by nick ova

77
00:04:16,500 --> 00:04:22,770
so this is a countermeasure against the

78
00:04:19,019 --> 00:04:24,270
differential power attack so this is

79
00:04:22,770 --> 00:04:28,169
also based on a secret sharing scheme

80
00:04:24,270 --> 00:04:30,930
and secure multi-party computation which

81
00:04:28,170 --> 00:04:34,680
has correctness non completeness and

82
00:04:30,930 --> 00:04:37,110
uniformity property so let's take an

83
00:04:34,680 --> 00:04:41,000
example so I have taken an example of a

84
00:04:37,110 --> 00:04:45,060
NAND gate which has two inputs so we are

85
00:04:41,000 --> 00:04:48,810
sharing the X Y input into four shares

86
00:04:45,060 --> 00:04:51,270
and we will get output also as four

87
00:04:48,810 --> 00:04:54,060
shares and we have four output functions

88
00:04:51,270 --> 00:04:59,099
to be implemented in different modules

89
00:04:54,060 --> 00:05:01,380
to get the final output so this this

90
00:04:59,100 --> 00:05:03,060
particular example follows all these

91
00:05:01,380 --> 00:05:04,889
three properties so correctness non

92
00:05:03,060 --> 00:05:08,669
completeness and uniformity so

93
00:05:04,889 --> 00:05:10,979
of use if you do an exam of all outputs

94
00:05:08,669 --> 00:05:16,378
you will get you will fulfill these

95
00:05:10,979 --> 00:05:18,949
three properties okay next is cellular

96
00:05:16,379 --> 00:05:22,289
automata now cellular automata is a

97
00:05:18,949 --> 00:05:25,289
local rule is a function which consists

98
00:05:22,289 --> 00:05:28,680
of regular I mean grid of cells where

99
00:05:25,289 --> 00:05:31,560
each cell has some finite set of states

100
00:05:28,680 --> 00:05:33,419
and the state of each cell is dependent

101
00:05:31,560 --> 00:05:37,050
on some neighborhood opposite of its

102
00:05:33,419 --> 00:05:40,938
cells so for our function we for our s

103
00:05:37,050 --> 00:05:44,129
box design we use a rule a function

104
00:05:40,939 --> 00:05:47,669
iterated over flow four clock cycles to

105
00:05:44,129 --> 00:05:50,759
get four outputs so every cell like for

106
00:05:47,669 --> 00:05:54,299
example if if our function is x1 to xn

107
00:05:50,759 --> 00:05:57,330
every cell you consider that n there are

108
00:05:54,300 --> 00:06:00,509
n cells in the inner function and each

109
00:05:57,330 --> 00:06:03,089
function and if the DI and if it depends

110
00:06:00,509 --> 00:06:05,129
on for suppose for example D number of

111
00:06:03,089 --> 00:06:06,810
neighborhood neighboring cells so x1

112
00:06:05,129 --> 00:06:09,080
will be depending on the D number of

113
00:06:06,810 --> 00:06:11,129
neighboring cells similarly all the

114
00:06:09,080 --> 00:06:14,729
cells will be dependent on its

115
00:06:11,129 --> 00:06:17,699
neighboring cells so this is an example

116
00:06:14,729 --> 00:06:20,188
where we have taken any s in s6 and we

117
00:06:17,699 --> 00:06:26,819
have taken Diaz 3 so if you see the

118
00:06:20,189 --> 00:06:30,360
first output like the one in the first

119
00:06:26,819 --> 00:06:38,479
output this one is dependent on this one

120
00:06:30,360 --> 00:06:41,909
0 0 to give the output as 1 so now comes

121
00:06:38,479 --> 00:06:48,779
designing how you how we use this to

122
00:06:41,909 --> 00:06:51,750
design our s boxes so so if we take for

123
00:06:48,779 --> 00:06:54,259
four variable rules we will get around 2

124
00:06:51,750 --> 00:06:57,689
to the power 2 to the power 4 total

125
00:06:54,259 --> 00:06:59,159
rules and we check the optimality the

126
00:06:57,689 --> 00:07:03,930
optimality definition is according to

127
00:06:59,159 --> 00:07:07,319
the slide that I have discussed before

128
00:07:03,930 --> 00:07:10,800
so according to that there are 512 rules

129
00:07:07,319 --> 00:07:14,899
which are optimal I mean which which has

130
00:07:10,800 --> 00:07:18,330
boxes are optimal so using that we have

131
00:07:14,899 --> 00:07:21,100
we have we are

132
00:07:18,330 --> 00:07:23,770
cycling I mean we are permitting the

133
00:07:21,100 --> 00:07:29,350
input bits and we are getting in four

134
00:07:23,770 --> 00:07:32,169
clock cycles the four output bits so so

135
00:07:29,350 --> 00:07:36,490
and we have observed we have observed

136
00:07:32,170 --> 00:07:38,290
that for so if we classify those rules

137
00:07:36,490 --> 00:07:39,040
according to their a in a free

138
00:07:38,290 --> 00:07:41,230
presentation

139
00:07:39,040 --> 00:07:43,090
first of all those rules has a degree

140
00:07:41,230 --> 00:07:46,240
algebraic degree three and if we

141
00:07:43,090 --> 00:07:48,669
classify those rules according to the to

142
00:07:46,240 --> 00:07:52,630
their NF representations we see we

143
00:07:48,670 --> 00:07:56,830
observe that the funk since the

144
00:07:52,630 --> 00:07:59,590
algebraic structure of so suppose if f1

145
00:07:56,830 --> 00:08:01,390
and f2 are two functions with same

146
00:07:59,590 --> 00:08:04,030
number of cubic quadratic and linear

147
00:08:01,390 --> 00:08:06,520
terms so those two functions will have

148
00:08:04,030 --> 00:08:08,440
since they they are algebra structure is

149
00:08:06,520 --> 00:08:13,450
same so they have same area footprint

150
00:08:08,440 --> 00:08:14,680
and same identical TI structure so if so

151
00:08:13,450 --> 00:08:18,849
these are the classes that we have

152
00:08:14,680 --> 00:08:23,050
obtained like 1 2 2 meaning 1 is the

153
00:08:18,850 --> 00:08:24,940
number of cubic terms 2 is the number of

154
00:08:23,050 --> 00:08:27,040
quadratic terms and 2 is the number of

155
00:08:24,940 --> 00:08:29,920
linear terms so we are we have obtained

156
00:08:27,040 --> 00:08:33,480
for the in this 512 s boxes we have

157
00:08:29,920 --> 00:08:33,480
obtained these are the different classes

158
00:08:34,080 --> 00:08:41,820
and this is the 3 TI implementation of

159
00:08:37,380 --> 00:08:44,830
algebraic degree 3 function where we are

160
00:08:41,820 --> 00:08:48,940
so these are the 4 inputs of an Xbox

161
00:08:44,830 --> 00:08:51,190
sbox x1 y1 z1 w 1 and we have this

162
00:08:48,940 --> 00:08:55,060
threshold implementation and followed by

163
00:08:51,190 --> 00:08:58,330
Adam ax circuit we are using a shift

164
00:08:55,060 --> 00:09:00,609
cyclic register to rotate the bits in

165
00:08:58,330 --> 00:09:03,370
every clock cycle and we are obtaining 1

166
00:09:00,610 --> 00:09:05,760
1 bit in every clock cycle so we are so

167
00:09:03,370 --> 00:09:07,780
we require 4 clock cycles to obtain the

168
00:09:05,760 --> 00:09:14,460
threshold implementation output of this

169
00:09:07,780 --> 00:09:16,839
box so if we we have for all these boxes

170
00:09:14,460 --> 00:09:20,980
represent reverse box from each classes

171
00:09:16,840 --> 00:09:24,430
we have taken and we have used 180

172
00:09:20,980 --> 00:09:26,980
nanometer technology to synthesize our

173
00:09:24,430 --> 00:09:28,900
design and we have computed the dynamic

174
00:09:26,980 --> 00:09:31,630
power as well and we have observed that

175
00:09:28,900 --> 00:09:34,240
for class 1 to 2 and class 1 3 3

176
00:09:31,630 --> 00:09:38,560
the area requirement and dynamic power

177
00:09:34,240 --> 00:09:41,110
requirement is the least so one

178
00:09:38,560 --> 00:09:42,880
observation though we don't have a proof

179
00:09:41,110 --> 00:09:47,069
for this but we have observed from all

180
00:09:42,880 --> 00:09:50,949
these classes that if if the number of

181
00:09:47,069 --> 00:09:52,990
cubic terms is less first priorities on

182
00:09:50,949 --> 00:09:57,250
cubic terms so if the number of cubic

183
00:09:52,990 --> 00:09:59,079
term is less so the area the the des box

184
00:09:57,250 --> 00:10:01,060
class becomes more area and power

185
00:09:59,079 --> 00:10:04,170
efficient and suppose if the number of

186
00:10:01,060 --> 00:10:08,589
cubic terms are same then the sum of

187
00:10:04,170 --> 00:10:10,509
linear terms and the quadratic terms has

188
00:10:08,589 --> 00:10:14,670
to be less to make it more area

189
00:10:10,509 --> 00:10:19,000
efficient AE and power efficient so then

190
00:10:14,670 --> 00:10:21,370
we went further and we optimized the

191
00:10:19,000 --> 00:10:25,060
function that Rho local rule having

192
00:10:21,370 --> 00:10:26,889
algebraic degree three to make it we

193
00:10:25,060 --> 00:10:28,719
decompose that function into two

194
00:10:26,889 --> 00:10:32,079
functions with algebraic degree two and

195
00:10:28,720 --> 00:10:34,449
we obtained a more optimized area

196
00:10:32,079 --> 00:10:37,420
efficient TI that is we call is that we

197
00:10:34,449 --> 00:10:39,399
call it as a composite TI where in the

198
00:10:37,420 --> 00:10:43,360
first clock cycles from each classes we

199
00:10:39,399 --> 00:10:46,870
have taken and we have used 180

200
00:10:43,360 --> 00:10:49,389
nanometer technology to synthesize our

201
00:10:46,870 --> 00:10:51,339
design and we have computed the dynamic

202
00:10:49,389 --> 00:10:54,490
power as well and we have observed that

203
00:10:51,339 --> 00:10:56,649
for class 1 to 2 and class 1 3 3 the

204
00:10:54,490 --> 00:11:00,970
area requirement and dynamic power

205
00:10:56,649 --> 00:11:03,519
requirement is the least so one

206
00:11:00,970 --> 00:11:05,259
observation though we don't have a proof

207
00:11:03,519 --> 00:11:09,420
for this but we have observed from all

208
00:11:05,259 --> 00:11:13,360
these classes that if if the number of

209
00:11:09,420 --> 00:11:15,399
cubic terms is less first priorities on

210
00:11:13,360 --> 00:11:19,660
cubic terms so if the number of cubic

211
00:11:15,399 --> 00:11:21,459
term is less so the area the the des box

212
00:11:19,660 --> 00:11:23,469
class becomes more area and power

213
00:11:21,459 --> 00:11:26,550
efficient and suppose if the number of

214
00:11:23,470 --> 00:11:30,970
cubic terms are same then the sum of

215
00:11:26,550 --> 00:11:32,920
linear terms and the quadratic terms has

216
00:11:30,970 --> 00:11:37,060
to be less to make it more area

217
00:11:32,920 --> 00:11:41,410
efficient AE and power efficient so then

218
00:11:37,060 --> 00:11:43,779
we went further and we optimized the

219
00:11:41,410 --> 00:11:45,730
function that Rho local rule having

220
00:11:43,779 --> 00:11:48,460
algebraic degree three

221
00:11:45,730 --> 00:11:50,650
to make it we decompose that function

222
00:11:48,460 --> 00:11:53,860
into two functions with algebraic degree

223
00:11:50,650 --> 00:11:56,290
two and we obtained a more optimized

224
00:11:53,860 --> 00:11:58,990
area efficient TI that is we call is

225
00:11:56,290 --> 00:12:01,990
that we call it as a composite TI where

226
00:11:58,990 --> 00:12:03,610
in the first clock cycle we obtain the

227
00:12:01,990 --> 00:12:06,520
intermediate values in the next clock

228
00:12:03,610 --> 00:12:11,140
cycle we obtain the final values for the

229
00:12:06,520 --> 00:12:13,360
S boxes so using that if you if you see

230
00:12:11,140 --> 00:12:16,780
we we have still reduced the area

231
00:12:13,360 --> 00:12:19,600
further and for class one three one we

232
00:12:16,780 --> 00:12:21,310
noticed like we have almost reduced

233
00:12:19,600 --> 00:12:22,960
eighty percent from the from our

234
00:12:21,310 --> 00:12:25,000
previous implementation from algebraic

235
00:12:22,960 --> 00:12:28,480
degree three to algebraic degree two

236
00:12:25,000 --> 00:12:32,590
decomposing that function and then

237
00:12:28,480 --> 00:12:36,010
followed we have evaluated our design

238
00:12:32,590 --> 00:12:38,380
using fixed versus random text vector

239
00:12:36,010 --> 00:12:40,750
least liquid assessment and we have

240
00:12:38,380 --> 00:12:45,850
collected 1 million trace for that and

241
00:12:40,750 --> 00:12:49,510
we obtained a value of minus four minus

242
00:12:45,850 --> 00:12:54,340
0.42 plus 0.3 and the permissible range

243
00:12:49,510 --> 00:12:56,860
is minus 0.4 0.5 to plus 4.5 so we can

244
00:12:54,340 --> 00:13:01,270
conclude that this our design is also

245
00:12:56,860 --> 00:13:03,780
side-channel seek or design so now we

246
00:13:01,270 --> 00:13:08,439
have we have designed two applications

247
00:13:03,780 --> 00:13:11,530
based on this S box first one is can't

248
00:13:08,440 --> 00:13:16,360
completely focusing on the area now what

249
00:13:11,530 --> 00:13:21,160
we observe is so if we I mean if if we

250
00:13:16,360 --> 00:13:24,130
use if I mean for if the diffusion layer

251
00:13:21,160 --> 00:13:27,510
is less then we need more rounds and

252
00:13:24,130 --> 00:13:30,010
that will degrade our throughput so for

253
00:13:27,510 --> 00:13:33,100
present we have a branch number three

254
00:13:30,010 --> 00:13:36,670
and four gift you have branch number two

255
00:13:33,100 --> 00:13:39,880
and but if this box pauses be ogi

256
00:13:36,670 --> 00:13:42,250
property which which they utilize and

257
00:13:39,880 --> 00:13:46,420
mate and reduce the number of rounds to

258
00:13:42,250 --> 00:13:49,180
28 but we use our s box with the bit

259
00:13:46,420 --> 00:13:51,490
permutation we get more number of rounds

260
00:13:49,180 --> 00:13:54,849
because we do not have the bo GI

261
00:13:51,490 --> 00:13:58,080
property but it will but our is this

262
00:13:54,850 --> 00:13:59,770
this paradigm has the least area because

263
00:13:58,080 --> 00:14:03,010
permutation does not

264
00:13:59,770 --> 00:14:05,529
consume area so for using this paradigm

265
00:14:03,010 --> 00:14:08,830
we are able to hit I mean we are able to

266
00:14:05,529 --> 00:14:13,870
show that our design is optimized in

267
00:14:08,830 --> 00:14:16,450
terms of area next in next is design

268
00:14:13,870 --> 00:14:19,990
paradigm to where we are using almost

269
00:14:16,450 --> 00:14:23,020
MDS almost MDS has better diffusion so

270
00:14:19,990 --> 00:14:25,270
we get a better higher throughput so

271
00:14:23,020 --> 00:14:30,819
since we the number of rounds or less in

272
00:14:25,270 --> 00:14:32,350
that so with that we you with that we we

273
00:14:30,820 --> 00:14:35,040
could reduce the number of rounds from

274
00:14:32,350 --> 00:14:38,020
40 to 16 but the problem with this

275
00:14:35,040 --> 00:14:40,029
design paradigm is the area would be a

276
00:14:38,020 --> 00:14:46,000
bit more because of the MDS lay almost

277
00:14:40,029 --> 00:14:50,350
MDS layer so this is this is the table

278
00:14:46,000 --> 00:14:53,980
where we compared the other block

279
00:14:50,350 --> 00:14:57,220
cyphers along with our CA based one so

280
00:14:53,980 --> 00:15:01,510
we have I mean with this class we have

281
00:14:57,220 --> 00:15:04,750
seen that with 16s boxes and diffusion

282
00:15:01,510 --> 00:15:09,880
layer we we obtained an area of two to

283
00:15:04,750 --> 00:15:13,660
five three with with one three one class

284
00:15:09,880 --> 00:15:17,350
of CSS works with this is the G in 180

285
00:15:13,660 --> 00:15:18,850
nanometer and this is this is the

286
00:15:17,350 --> 00:15:22,330
support that we have obtained with

287
00:15:18,850 --> 00:15:26,200
almost MD so with almost MDS throughput

288
00:15:22,330 --> 00:15:26,710
increases but area through pull through

289
00:15:26,200 --> 00:15:29,740
put better

290
00:15:26,710 --> 00:15:32,620
I mean throughput is good but the area

291
00:15:29,740 --> 00:15:35,020
degrades but with bit permutation area

292
00:15:32,620 --> 00:15:37,170
reduces but true throughput becomes much

293
00:15:35,020 --> 00:15:37,170
better

294
00:15:37,320 --> 00:15:43,660
we have also explored the non optimal s

295
00:15:40,450 --> 00:15:45,610
boxes like for example we there are

296
00:15:43,660 --> 00:15:48,130
other is box since the other rules which

297
00:15:45,610 --> 00:15:49,900
does not follow the non of I mean it

298
00:15:48,130 --> 00:15:53,170
does not follow the optimal property we

299
00:15:49,900 --> 00:15:55,569
have explored all this non optimal CSS

300
00:15:53,170 --> 00:15:58,719
boxes also but we found that those s

301
00:15:55,570 --> 00:16:00,490
boxes are not suitable I mean those C

302
00:15:58,720 --> 00:16:04,180
rules are not suitable to construct a

303
00:16:00,490 --> 00:16:07,089
CSS box as they do not have BOJ property

304
00:16:04,180 --> 00:16:14,410
and even the non-linearity is also not

305
00:16:07,089 --> 00:16:17,259
good so you know future work we will

306
00:16:14,410 --> 00:16:20,019
extend this to eight cross eights here

307
00:16:17,259 --> 00:16:23,079
baseless boxes and we are considering

308
00:16:20,019 --> 00:16:27,329
this as a design for the list submission

309
00:16:23,079 --> 00:16:32,910
which would like for this design as a

310
00:16:27,329 --> 00:16:32,910
team for the new submission thank you

311
00:16:33,860 --> 00:16:45,759
[Applause]

312
00:16:38,220 --> 00:16:48,519
questions yes thank you thank you for

313
00:16:45,759 --> 00:16:51,190
the talk can you go to a slot number 18

314
00:16:48,519 --> 00:16:58,029
please where you showed the construction

315
00:16:51,190 --> 00:17:00,579
that you have yeah I have actually two

316
00:16:58,029 --> 00:17:03,279
or three questions one is what is the

317
00:17:00,579 --> 00:17:05,740
latency of your design here means that

318
00:17:03,279 --> 00:17:07,449
for just given one input to this box you

319
00:17:05,740 --> 00:17:09,669
need a couple of clock cycles if I have

320
00:17:07,449 --> 00:17:11,470
understood correctly yeah how many clock

321
00:17:09,669 --> 00:17:13,809
cycles you need for graphs vacant for

322
00:17:11,470 --> 00:17:16,030
clocks and then you are switching them

323
00:17:13,809 --> 00:17:19,119
shared input to be given to the same

324
00:17:16,030 --> 00:17:21,730
circuit yes and then these changing

325
00:17:19,119 --> 00:17:23,979
between the shared input is already

326
00:17:21,730 --> 00:17:26,799
known that is leaky you cannot easily

327
00:17:23,980 --> 00:17:29,230
just share change the input of this box

328
00:17:26,799 --> 00:17:32,200
which is shared to the one circuit it

329
00:17:29,230 --> 00:17:35,559
should have some pre charging a stadium

330
00:17:32,200 --> 00:17:38,169
between otherwise does their shares that

331
00:17:35,559 --> 00:17:39,610
you have they will be overwritten on

332
00:17:38,169 --> 00:17:42,580
each other at least under under under

333
00:17:39,610 --> 00:17:46,090
signals and then you may already violate

334
00:17:42,580 --> 00:17:50,320
the non completeness property but if we

335
00:17:46,090 --> 00:17:55,918
if we implement this in different

336
00:17:50,320 --> 00:17:58,629
modules then it won't violate the this I

337
00:17:55,919 --> 00:18:01,480
mean it won't leaking in that case in I

338
00:17:58,630 --> 00:18:03,100
mean if we implement in them them with

339
00:18:01,480 --> 00:18:05,350
the higher keep hierarchy on option

340
00:18:03,100 --> 00:18:07,899
within different modules they do then it

341
00:18:05,350 --> 00:18:10,059
won't be then why do you need for clock

342
00:18:07,900 --> 00:18:12,460
circles if you dot for different modules

343
00:18:10,059 --> 00:18:14,620
yeah but fourth clock cycles is required

344
00:18:12,460 --> 00:18:17,400
because in each crop cycle we are

345
00:18:14,620 --> 00:18:19,959
obtaining one bit of output of days box

346
00:18:17,400 --> 00:18:21,640
but then you use the same circuit the

347
00:18:19,960 --> 00:18:25,150
same soft circuit to make the other

348
00:18:21,640 --> 00:18:27,160
let's say bits of the box output or

349
00:18:25,150 --> 00:18:30,340
share of the US box outputs

350
00:18:27,160 --> 00:18:32,440
share this box output yeah then then as

351
00:18:30,340 --> 00:18:34,720
I said you know you have shared input to

352
00:18:32,440 --> 00:18:36,700
the circuit and you just change the in

353
00:18:34,720 --> 00:18:38,860
the input to this box which is shared

354
00:18:36,700 --> 00:18:41,290
again you mean you swap some shares to

355
00:18:38,860 --> 00:18:44,699
this box probably we need to discuss

356
00:18:41,290 --> 00:18:48,280
about this in an offline now okay

357
00:18:44,700 --> 00:18:50,140
because it probably takes longer my

358
00:18:48,280 --> 00:18:56,639
second question is how do you achieve

359
00:18:50,140 --> 00:18:56,640
here our guarantee uniformity yeah so

360
00:18:59,280 --> 00:19:06,040
uniformity is the like we have the

361
00:19:03,790 --> 00:19:08,680
expressions like when we decompose a

362
00:19:06,040 --> 00:19:10,870
boolean expression expression into the

363
00:19:08,680 --> 00:19:13,840
number of shares we check the uniformity

364
00:19:10,870 --> 00:19:17,379
using the uniformity table like if if

365
00:19:13,840 --> 00:19:19,959
the values comes zero or a specific

366
00:19:17,380 --> 00:19:24,400
single value then it's a uniform so

367
00:19:19,960 --> 00:19:28,510
whatever for this class 1 3 1 and 1 2 so

368
00:19:24,400 --> 00:19:35,590
we have I think we have expressions I

369
00:19:28,510 --> 00:19:38,200
think oh I think that slide I don't have

370
00:19:35,590 --> 00:19:40,840
but we have it in our paper that when we

371
00:19:38,200 --> 00:19:44,500
decompose this expression like class 1

372
00:19:40,840 --> 00:19:48,159
to 2 or 1 3 3 using 3 share we have all

373
00:19:44,500 --> 00:19:49,750
those expressions checked with our it is

374
00:19:48,160 --> 00:19:52,450
meeting the uniform it but it considered

375
00:19:49,750 --> 00:19:55,900
the uniformity only for one one single

376
00:19:52,450 --> 00:19:58,510
bit of this box output or just for all

377
00:19:55,900 --> 00:20:00,940
of the outputs because you cannot just

378
00:19:58,510 --> 00:20:03,040
consider one part of this box output and

379
00:20:00,940 --> 00:20:05,530
say this is uniform and then if I can't

380
00:20:03,040 --> 00:20:07,899
concatenate the other uniform output the

381
00:20:05,530 --> 00:20:11,530
result will be uniform no we are

382
00:20:07,900 --> 00:20:15,220
considering all the outputs all the

383
00:20:11,530 --> 00:20:18,160
outputs uniform because if we divide if

384
00:20:15,220 --> 00:20:22,540
we divide this expression into three

385
00:20:18,160 --> 00:20:25,090
output shares then those three functions

386
00:20:22,540 --> 00:20:27,399
are all uniform it will it will follow

387
00:20:25,090 --> 00:20:30,129
the uniform uniformity property now

388
00:20:27,400 --> 00:20:32,050
since we are using the same function so

389
00:20:30,130 --> 00:20:37,140
it will follow the uniformity property

390
00:20:32,050 --> 00:20:37,139
overall okay thank you

391
00:20:38,559 --> 00:20:50,450
and yeah yeah thank you for the talk

392
00:20:46,149 --> 00:20:53,779
the you compared your your s boxes with

393
00:20:50,450 --> 00:20:55,730
other s boxes but the cost mostly

394
00:20:53,779 --> 00:20:56,779
depends on the implementation not that

395
00:20:55,730 --> 00:20:59,029
much on the S box

396
00:20:56,779 --> 00:21:05,450
so what implementations did you use for

397
00:20:59,029 --> 00:21:08,899
these existing s boxes we used the what

398
00:21:05,450 --> 00:21:12,440
implementation the function like like

399
00:21:08,899 --> 00:21:16,629
differ I mean lut based optimization for

400
00:21:12,440 --> 00:21:16,629
other s boxes and for our function based

401
00:21:18,970 --> 00:21:26,900
and you have a question okay if not

402
00:21:24,590 --> 00:21:32,069
let's find Sasha together thank you

403
00:21:26,900 --> 00:21:32,069
[Applause]

