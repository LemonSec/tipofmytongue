1
00:00:01,760 --> 00:00:04,000
hi everyone thank you for tuning in to

2
00:00:04,000 --> 00:00:06,960
this presentation the title of this talk

3
00:00:06,960 --> 00:00:08,880
is exploring differential based

4
00:00:08,880 --> 00:00:11,840
distinguishes and forgeries for escond

5
00:00:11,840 --> 00:00:14,160
this is a joint work by david jarrod

6
00:00:14,160 --> 00:00:18,000
tommen perrin and myself tren transdun

7
00:00:18,000 --> 00:00:20,560
this is the outline of this talk

8
00:00:20,560 --> 00:00:21,760
we will start off with some

9
00:00:21,760 --> 00:00:23,920
preliminaries followed by the

10
00:00:23,920 --> 00:00:25,840
introduction of constraint programming

11
00:00:25,840 --> 00:00:28,160
and the parameters that we have used so

12
00:00:28,160 --> 00:00:29,519
that we can find good differential

13
00:00:29,519 --> 00:00:30,400
characteristics

14
00:00:30,400 --> 00:00:32,800
for the ascon permutation

15
00:00:32,800 --> 00:00:34,719
then these differential characteristics

16
00:00:34,719 --> 00:00:36,800
are used to obtain distinguishes

17
00:00:36,800 --> 00:00:38,960
forgeries and collision results for

18
00:00:38,960 --> 00:00:41,120
ascon

19
00:00:41,120 --> 00:00:42,719
we will start off with a brief

20
00:00:42,719 --> 00:00:44,960
description of s-con

21
00:00:44,960 --> 00:00:46,879
s-con is a family of authenticated

22
00:00:46,879 --> 00:00:48,320
encryption scheme

23
00:00:48,320 --> 00:00:50,320
in the current lease lightweight cipher

24
00:00:50,320 --> 00:00:53,280
competition two instances of the family

25
00:00:53,280 --> 00:00:56,559
nascon128 and s128a are among the

26
00:00:56,559 --> 00:00:57,760
finalists

27
00:00:57,760 --> 00:00:59,920
the encryption process as well as the

28
00:00:59,920 --> 00:01:02,399
various parameters of s-con are shown

29
00:01:02,399 --> 00:01:04,640
here

30
00:01:08,000 --> 00:01:10,240
as our work focus more on finding the

31
00:01:10,240 --> 00:01:12,080
differential characteristics for the s1

32
00:01:12,080 --> 00:01:13,439
permutation

33
00:01:13,439 --> 00:01:15,360
we will now take a closer look at the

34
00:01:15,360 --> 00:01:17,119
wrong function of the sql permutation

35
00:01:17,119 --> 00:01:18,400
itself

36
00:01:18,400 --> 00:01:21,920
the state size of s-con is 3-0 bits

37
00:01:21,920 --> 00:01:24,640
it can be visualized as a 5 by 64-bit

38
00:01:24,640 --> 00:01:26,320
array

39
00:01:26,320 --> 00:01:28,159
there are three sub-functions in the

40
00:01:28,159 --> 00:01:29,680
permutation

41
00:01:29,680 --> 00:01:32,560
pc refers to the addition of constants

42
00:01:32,560 --> 00:01:34,960
which we will largely ignore here

43
00:01:34,960 --> 00:01:36,880
since the difference is not affected by

44
00:01:36,880 --> 00:01:39,200
this sub-function

45
00:01:39,200 --> 00:01:42,159
ps is the substitution layer which

46
00:01:42,159 --> 00:01:46,000
consists of 64 parallel 5 bit s boxes

47
00:01:46,000 --> 00:01:48,799
acting on each column of the state

48
00:01:48,799 --> 00:01:52,399
the s box is shown over here

49
00:01:52,399 --> 00:01:54,399
p l is the linear layer

50
00:01:54,399 --> 00:01:57,920
given by the equations over here each wi

51
00:01:57,920 --> 00:02:00,159
corresponds to the if row

52
00:02:00,159 --> 00:02:03,600
of the state which has 64 bits

53
00:02:03,600 --> 00:02:06,079
in a previous world dope running at all

54
00:02:06,079 --> 00:02:08,560
introduced a 2 in their paper titled

55
00:02:08,560 --> 00:02:11,200
heuristic tool for linear cryptanalysis

56
00:02:11,200 --> 00:02:13,840
with applications to scissor candidates

57
00:02:13,840 --> 00:02:16,160
the idea is to first choose a linear

58
00:02:16,160 --> 00:02:18,480
characteristic with some variables

59
00:02:18,480 --> 00:02:20,480
already fixed

60
00:02:20,480 --> 00:02:22,560
then from the remaining unfixed

61
00:02:22,560 --> 00:02:25,440
variables they would guess one of them

62
00:02:25,440 --> 00:02:26,800
and add them into the linear

63
00:02:26,800 --> 00:02:28,879
characteristic

64
00:02:28,879 --> 00:02:30,000
now

65
00:02:30,000 --> 00:02:31,200
we will propagate what are the

66
00:02:31,200 --> 00:02:32,720
additional constraints that were caused

67
00:02:32,720 --> 00:02:34,239
by this move

68
00:02:34,239 --> 00:02:36,319
suppose that there is a contradiction

69
00:02:36,319 --> 00:02:38,000
between the new constraints and the one

70
00:02:38,000 --> 00:02:40,000
that we already had so far

71
00:02:40,000 --> 00:02:42,319
we simply backtrack and choose another

72
00:02:42,319 --> 00:02:43,920
variable

73
00:02:43,920 --> 00:02:45,760
if there is no contradiction caused by

74
00:02:45,760 --> 00:02:49,200
this move we continue guessing

75
00:02:49,200 --> 00:02:51,360
now we can actually draw parallels

76
00:02:51,360 --> 00:02:53,519
between this dedicated heuristic and

77
00:02:53,519 --> 00:02:55,920
what constraint programming is doing

78
00:02:55,920 --> 00:02:58,800
this is also why we think that using cp

79
00:02:58,800 --> 00:03:01,599
can help in the case for ascon as well

80
00:03:01,599 --> 00:03:04,720
so here is a short introduction to cp

81
00:03:04,720 --> 00:03:07,440
cp is a form of automated method that is

82
00:03:07,440 --> 00:03:09,120
used to solve a wide range of

83
00:03:09,120 --> 00:03:11,920
combinatorial problems

84
00:03:11,920 --> 00:03:14,319
in the case of cryptography it has been

85
00:03:14,319 --> 00:03:16,400
used mostly to find differential

86
00:03:16,400 --> 00:03:19,040
characteristics on word-oriented block

87
00:03:19,040 --> 00:03:20,800
cycles

88
00:03:20,800 --> 00:03:23,200
in addition to that there are a range of

89
00:03:23,200 --> 00:03:25,840
solvers along with their own search

90
00:03:25,840 --> 00:03:28,319
techniques and strategies available that

91
00:03:28,319 --> 00:03:30,720
can be used to get the best one for each

92
00:03:30,720 --> 00:03:32,799
use case

93
00:03:32,799 --> 00:03:34,799
we will now move on to the search for

94
00:03:34,799 --> 00:03:36,400
the differential characteristics of

95
00:03:36,400 --> 00:03:38,560
score

96
00:03:38,560 --> 00:03:40,640
in this world we are using the mini zinc

97
00:03:40,640 --> 00:03:43,280
language and shelf solver for our cp

98
00:03:43,280 --> 00:03:44,799
program

99
00:03:44,799 --> 00:03:46,879
and the objective function

100
00:03:46,879 --> 00:03:49,360
is to minimize the minus log two

101
00:03:49,360 --> 00:03:51,599
probabilities

102
00:03:51,599 --> 00:03:54,080
to represent the individual s boxes in

103
00:03:54,080 --> 00:03:56,640
the substitution layer we employ a table

104
00:03:56,640 --> 00:03:59,120
constraint for each of them

105
00:03:59,120 --> 00:04:00,959
the table in this case

106
00:04:00,959 --> 00:04:03,519
ddt contains all the possible

107
00:04:03,519 --> 00:04:06,640
transitions from every input difference

108
00:04:06,640 --> 00:04:09,040
the first parameter in this case will

109
00:04:09,040 --> 00:04:11,200
have to choose from one of the possible

110
00:04:11,200 --> 00:04:13,680
transitions in ddt

111
00:04:13,680 --> 00:04:15,120
the input difference and output

112
00:04:15,120 --> 00:04:17,759
difference bs and es

113
00:04:17,759 --> 00:04:21,279
are written as 5 bit arrays instead of

114
00:04:21,279 --> 00:04:24,400
the integer values

115
00:04:26,320 --> 00:04:28,960
to represent the linear layer which made

116
00:04:28,960 --> 00:04:31,360
up of rotations and xors

117
00:04:31,360 --> 00:04:34,080
we simply write functions for them

118
00:04:34,080 --> 00:04:37,600
rotations are just a renaming process

119
00:04:37,600 --> 00:04:41,600
and for xors we use a sum with modulo 2

120
00:04:41,600 --> 00:04:44,000
to simulate

121
00:04:44,000 --> 00:04:46,240
now the state interacts in the following

122
00:04:46,240 --> 00:04:47,120
manner

123
00:04:47,120 --> 00:04:49,440
we start off with bs0

124
00:04:49,440 --> 00:04:51,520
the initial input difference

125
00:04:51,520 --> 00:04:54,320
then we apply the ps layer

126
00:04:54,320 --> 00:04:56,479
to the s0

127
00:04:56,479 --> 00:05:00,240
then a pl layer will bring it to bs1 and

128
00:05:00,240 --> 00:05:03,039
so on and so forth until we reach the

129
00:05:03,039 --> 00:05:05,919
end round input difference

130
00:05:05,919 --> 00:05:08,960
note that in cp we do not necessarily

131
00:05:08,960 --> 00:05:11,759
have to propagate from round zero first

132
00:05:11,759 --> 00:05:13,759
we can easily start in the middle and

133
00:05:13,759 --> 00:05:16,320
propagate in both ways for example

134
00:05:16,320 --> 00:05:18,080
this is usually controlled by the third

135
00:05:18,080 --> 00:05:20,240
strategy

136
00:05:20,240 --> 00:05:22,479
in our case these are the parameters

137
00:05:22,479 --> 00:05:25,600
that we use in our search strategy

138
00:05:25,600 --> 00:05:27,039
in search for the best differential

139
00:05:27,039 --> 00:05:28,639
characteristics for four rounds for

140
00:05:28,639 --> 00:05:29,840
example

141
00:05:29,840 --> 00:05:33,360
we fix the s boxes at round two first

142
00:05:33,360 --> 00:05:36,320
followed by that of in round one

143
00:05:36,320 --> 00:05:38,639
zero and then 3.

144
00:05:38,639 --> 00:05:40,639
this means that we force the search to

145
00:05:40,639 --> 00:05:43,280
start looking at variables at round 2

146
00:05:43,280 --> 00:05:45,840
first before deciding the variables to

147
00:05:45,840 --> 00:05:48,720
fix at the other rounds

148
00:05:48,720 --> 00:05:51,120
for the variable choice we set it to be

149
00:05:51,120 --> 00:05:52,479
random order

150
00:05:52,479 --> 00:05:54,800
this means that within the xboxes in the

151
00:05:54,800 --> 00:05:57,360
same round we don't follow a specific

152
00:05:57,360 --> 00:05:59,680
sequence of say fixing the first xbox

153
00:05:59,680 --> 00:06:01,680
first followed by the second one and

154
00:06:01,680 --> 00:06:02,880
then the third

155
00:06:02,880 --> 00:06:05,120
but instead it will just be in a random

156
00:06:05,120 --> 00:06:06,720
order

157
00:06:06,720 --> 00:06:08,479
for the constraint choice

158
00:06:08,479 --> 00:06:11,759
we set it to be in domain min

159
00:06:11,759 --> 00:06:14,160
in this case we are telling the program

160
00:06:14,160 --> 00:06:16,240
to search for the smallest value in the

161
00:06:16,240 --> 00:06:17,600
domain first

162
00:06:17,600 --> 00:06:18,639
since

163
00:06:18,639 --> 00:06:21,199
1 represents an active s-box and a zero

164
00:06:21,199 --> 00:06:24,080
represents an inactive s-box the solver

165
00:06:24,080 --> 00:06:27,759
will try to set it to be inactive first

166
00:06:27,759 --> 00:06:29,600
to further restrict the space of the

167
00:06:29,600 --> 00:06:32,560
search we have a two-step procedure

168
00:06:32,560 --> 00:06:34,880
the first step is to just use a single

169
00:06:34,880 --> 00:06:37,759
linear layer of the s-con permutation in

170
00:06:37,759 --> 00:06:38,960
cp

171
00:06:38,960 --> 00:06:40,960
and find out all the possible active

172
00:06:40,960 --> 00:06:42,240
positions

173
00:06:42,240 --> 00:06:45,120
of x-boxes in a single round

174
00:06:45,120 --> 00:06:47,120
we then restrict the number of hdfx

175
00:06:47,120 --> 00:06:52,000
boxes in the output to be exactly k

176
00:06:52,639 --> 00:06:54,319
next we will hard code this

177
00:06:54,319 --> 00:06:57,919
characteristic found in round 1 and 2.

178
00:06:57,919 --> 00:06:59,680
note that since we will have a lot of

179
00:06:59,680 --> 00:07:01,120
characteristics

180
00:07:01,120 --> 00:07:04,400
we will have to run them all

181
00:07:04,400 --> 00:07:06,160
these are the results that we have

182
00:07:06,160 --> 00:07:09,039
obtained using cp we are able to match

183
00:07:09,039 --> 00:07:10,960
the probabilities compared to the best

184
00:07:10,960 --> 00:07:13,120
differential characteristics found using

185
00:07:13,120 --> 00:07:15,599
a dedicated heuristic as we can see for

186
00:07:15,599 --> 00:07:17,520
round four and five and k equals to

187
00:07:17,520 --> 00:07:19,840
three

188
00:07:21,039 --> 00:07:23,759
now with an automated method available

189
00:07:23,759 --> 00:07:26,160
we proceed to generate distinguishes for

190
00:07:26,160 --> 00:07:28,479
the xcom permutation

191
00:07:28,479 --> 00:07:30,400
first of all we would like to propose a

192
00:07:30,400 --> 00:07:33,599
categorization for distinguishes

193
00:07:33,599 --> 00:07:35,440
they will be the key permutation and

194
00:07:35,440 --> 00:07:37,280
unkit permutation

195
00:07:37,280 --> 00:07:38,880
for key permutation

196
00:07:38,880 --> 00:07:41,440
we can assume that the key is added in

197
00:07:41,440 --> 00:07:42,560
every rung

198
00:07:42,560 --> 00:07:44,800
without the key we will not be able to

199
00:07:44,800 --> 00:07:46,879
know the information as we propagate

200
00:07:46,879 --> 00:07:48,319
through the rounds

201
00:07:48,319 --> 00:07:50,960
this is similar to an analysis of a

202
00:07:50,960 --> 00:07:52,479
block cipher

203
00:07:52,479 --> 00:07:55,280
for the unkit scenario there is no key

204
00:07:55,280 --> 00:07:57,440
involved this means that we can actually

205
00:07:57,440 --> 00:07:59,440
start in the middle and propagate

206
00:07:59,440 --> 00:08:00,639
outwards

207
00:08:00,639 --> 00:08:03,199
we can view them as a black box and a

208
00:08:03,199 --> 00:08:05,680
non-black box respectively

209
00:08:05,680 --> 00:08:08,240
this is important as in the case of an

210
00:08:08,240 --> 00:08:10,720
ankit permutation we will be able to

211
00:08:10,720 --> 00:08:12,960
utilize the degree of freedom to fix

212
00:08:12,960 --> 00:08:14,400
some constraints

213
00:08:14,400 --> 00:08:16,400
and reducing the overall complexities of

214
00:08:16,400 --> 00:08:18,080
the distinguishes

215
00:08:18,080 --> 00:08:20,240
however we could we cannot do it for the

216
00:08:20,240 --> 00:08:23,039
key permutation

217
00:08:23,520 --> 00:08:25,840
here we will explain what we meant by

218
00:08:25,840 --> 00:08:28,000
utilizing the degree of freedom in more

219
00:08:28,000 --> 00:08:29,199
detail

220
00:08:29,199 --> 00:08:30,800
as the probabilities or the

221
00:08:30,800 --> 00:08:32,479
uncertainties for differential

222
00:08:32,479 --> 00:08:35,519
characteristics come from the s-boxes

223
00:08:35,519 --> 00:08:37,039
this means that there are certain

224
00:08:37,039 --> 00:08:40,320
restrictions or constraints on the input

225
00:08:40,320 --> 00:08:42,958
and output values for the xbox

226
00:08:42,958 --> 00:08:44,399
if we can start

227
00:08:44,399 --> 00:08:47,360
say at the output of a certain s box or

228
00:08:47,360 --> 00:08:50,000
some middle points we are able to fix

229
00:08:50,000 --> 00:08:51,920
some of the bits that satisfy these

230
00:08:51,920 --> 00:08:54,800
constraints in advance this can ensure

231
00:08:54,800 --> 00:08:56,640
that the required difference will always

232
00:08:56,640 --> 00:08:58,399
propagate through

233
00:08:58,399 --> 00:09:00,000
this will then

234
00:09:00,000 --> 00:09:02,080
reduce the overall cost of the

235
00:09:02,080 --> 00:09:04,720
distinguisher

236
00:09:05,200 --> 00:09:07,040
here is a background of the limited

237
00:09:07,040 --> 00:09:08,640
birthday problem

238
00:09:08,640 --> 00:09:10,640
in the limited birthday problem we ask

239
00:09:10,640 --> 00:09:12,160
the following question

240
00:09:12,160 --> 00:09:15,040
what is the probability of a difference

241
00:09:15,040 --> 00:09:16,399
in d in

242
00:09:16,399 --> 00:09:20,320
that can be met to a difference in dr

243
00:09:20,320 --> 00:09:22,800
in this case d in and dl are both

244
00:09:22,800 --> 00:09:25,760
subsets in the possible input and output

245
00:09:25,760 --> 00:09:27,760
difference space

246
00:09:27,760 --> 00:09:30,399
for an ideal permutation the course is

247
00:09:30,399 --> 00:09:32,160
given here

248
00:09:32,160 --> 00:09:34,000
to find a distinguisher

249
00:09:34,000 --> 00:09:35,920
we will have to achieve a cost that is

250
00:09:35,920 --> 00:09:38,719
lower than this

251
00:09:39,200 --> 00:09:41,360
now we will try to build a limited

252
00:09:41,360 --> 00:09:43,440
birthday distinguisher for the ascon

253
00:09:43,440 --> 00:09:45,440
permutation

254
00:09:45,440 --> 00:09:47,200
first we choose a differential

255
00:09:47,200 --> 00:09:49,040
characteristic

256
00:09:49,040 --> 00:09:50,959
we pick one differential characteristic

257
00:09:50,959 --> 00:09:53,519
that has the most number of active s

258
00:09:53,519 --> 00:09:56,240
boxes like in the same round this is so

259
00:09:56,240 --> 00:09:58,000
that we can maximize our degree of

260
00:09:58,000 --> 00:10:00,560
freedom to fix most of these active

261
00:10:00,560 --> 00:10:02,240
xboxes

262
00:10:02,240 --> 00:10:04,959
so that we can actually reduce the cost

263
00:10:04,959 --> 00:10:07,760
of these distinguishes

264
00:10:07,760 --> 00:10:10,000
then we extend the characteristic

265
00:10:10,000 --> 00:10:12,399
forward and backward with probability

266
00:10:12,399 --> 00:10:15,040
one by allowing it to be truncated to

267
00:10:15,040 --> 00:10:17,920
form d in and d out which corresponds to

268
00:10:17,920 --> 00:10:21,760
the input and output differences

269
00:10:21,760 --> 00:10:23,279
note that d in

270
00:10:23,279 --> 00:10:26,320
and dr are only used for the computation

271
00:10:26,320 --> 00:10:28,160
of the complexities

272
00:10:28,160 --> 00:10:31,200
so only their size matters

273
00:10:31,200 --> 00:10:34,800
therefore if d in or dl are too large or

274
00:10:34,800 --> 00:10:37,519
too complex to compute we can opt to

275
00:10:37,519 --> 00:10:40,320
compute a lower bound for the size of

276
00:10:40,320 --> 00:10:42,800
their respective complements

277
00:10:42,800 --> 00:10:44,959
forming an upper bound for the size of

278
00:10:44,959 --> 00:10:48,000
dn or dl

279
00:10:48,480 --> 00:10:50,480
these are the results of our limited

280
00:10:50,480 --> 00:10:52,720
birthday distinguishes on scone

281
00:10:52,720 --> 00:10:55,360
permutation

282
00:10:59,040 --> 00:11:01,440
next we move on to the boomerang

283
00:11:01,440 --> 00:11:02,880
distinguishes

284
00:11:02,880 --> 00:11:04,959
once again when we are dealing with an

285
00:11:04,959 --> 00:11:07,680
unkid permutation we can start from the

286
00:11:07,680 --> 00:11:09,040
middle

287
00:11:09,040 --> 00:11:11,600
in the case of four rounds we start at

288
00:11:11,600 --> 00:11:15,360
sp4 given over here in the diagram

289
00:11:15,360 --> 00:11:18,480
in the case of 5 rounds we chose to

290
00:11:18,480 --> 00:11:20,959
start at sp5 as there are more

291
00:11:20,959 --> 00:11:25,439
constraints in the r4

292
00:11:27,120 --> 00:11:29,680
here is a summary of all the key

293
00:11:29,680 --> 00:11:32,560
permutation results for ascon

294
00:11:32,560 --> 00:11:34,399
in the next slide we will have the

295
00:11:34,399 --> 00:11:39,160
summary for all the unkit permutations

296
00:11:48,720 --> 00:11:52,560
now we will talk about the forgery

297
00:11:54,000 --> 00:11:57,120
for a forgery in an iteration phase of

298
00:11:57,120 --> 00:11:58,560
s-con ae

299
00:11:58,560 --> 00:12:01,360
we focus on just a single block of a

300
00:12:01,360 --> 00:12:04,639
reduced round pb

301
00:12:04,639 --> 00:12:06,320
the idea is to generate good

302
00:12:06,320 --> 00:12:09,120
differential characteristics that have

303
00:12:09,120 --> 00:12:11,360
input and output difference only in the

304
00:12:11,360 --> 00:12:12,639
red part

305
00:12:12,639 --> 00:12:15,600
for ascon 128 it corresponds to the

306
00:12:15,600 --> 00:12:18,800
first 64 bits or the first row

307
00:12:18,800 --> 00:12:21,519
for sql 128a it corresponds to the first

308
00:12:21,519 --> 00:12:25,839
128 bits or the first two rows

309
00:12:26,079 --> 00:12:28,480
for the finalization phase we want to

310
00:12:28,480 --> 00:12:30,800
have a differential characteristic that

311
00:12:30,800 --> 00:12:33,279
has an input difference only in the red

312
00:12:33,279 --> 00:12:34,480
part

313
00:12:34,480 --> 00:12:37,279
and for the output difference only in

314
00:12:37,279 --> 00:12:38,959
the first three rows

315
00:12:38,959 --> 00:12:41,279
as the last two rows are used to produce

316
00:12:41,279 --> 00:12:43,839
the tag t

317
00:12:44,720 --> 00:12:46,560
to achieve all this

318
00:12:46,560 --> 00:12:49,120
we added additional constraints to our

319
00:12:49,120 --> 00:12:52,240
cp model and try out multiple other such

320
00:12:52,240 --> 00:12:54,240
strategies as well

321
00:12:54,240 --> 00:12:56,639
in particular for the finalization phase

322
00:12:56,639 --> 00:12:58,800
we also combined the probabilities from

323
00:12:58,800 --> 00:13:01,360
various differential throws as for the

324
00:13:01,360 --> 00:13:03,760
very last round we only cared about the

325
00:13:03,760 --> 00:13:04,880
difference

326
00:13:04,880 --> 00:13:07,839
at the last two rows

327
00:13:09,839 --> 00:13:11,760
the results here show the best

328
00:13:11,760 --> 00:13:13,279
differential characteristics that we

329
00:13:13,279 --> 00:13:14,959
have found with the required

330
00:13:14,959 --> 00:13:16,480
restrictions

331
00:13:16,480 --> 00:13:19,040
the ones highlighted in orange are the

332
00:13:19,040 --> 00:13:21,120
best results that we eventually use to

333
00:13:21,120 --> 00:13:23,120
construct the forgery as well as the

334
00:13:23,120 --> 00:13:25,600
collisions

335
00:13:27,519 --> 00:13:29,600
this slide shows the forgery results

336
00:13:29,600 --> 00:13:33,079
that we have obtained

337
00:13:36,560 --> 00:13:40,800
next we will move on to the collisions

338
00:13:41,920 --> 00:13:44,240
for collisions if you reduce the number

339
00:13:44,240 --> 00:13:45,920
of rongs to 2

340
00:13:45,920 --> 00:13:48,320
we managed to find one with a complexity

341
00:13:48,320 --> 00:13:50,880
of to the power of minus one zero three

342
00:13:50,880 --> 00:13:52,880
this is in comparison with the previous

343
00:13:52,880 --> 00:13:55,120
best result of to the power of minus one

344
00:13:55,120 --> 00:13:57,600
two five

345
00:13:59,760 --> 00:14:01,600
the idea is this

346
00:14:01,600 --> 00:14:03,760
for the two round characteristic that we

347
00:14:03,760 --> 00:14:06,720
are using we have 54 constraints in the

348
00:14:06,720 --> 00:14:07,760
first round

349
00:14:07,760 --> 00:14:10,000
and one zero two constraints in the

350
00:14:10,000 --> 00:14:12,000
second round so this is the total

351
00:14:12,000 --> 00:14:13,920
probability of the characteristic that

352
00:14:13,920 --> 00:14:16,320
we are using

353
00:14:16,320 --> 00:14:19,279
as we can only control the messages in

354
00:14:19,279 --> 00:14:20,720
the red part

355
00:14:20,720 --> 00:14:23,120
the first 54 constraints

356
00:14:23,120 --> 00:14:26,240
have to be addressed using m0 and m1

357
00:14:26,240 --> 00:14:27,839
only

358
00:14:27,839 --> 00:14:30,639
for the nyx 102 constraints

359
00:14:30,639 --> 00:14:34,720
this can be addressed by either m0 m1 or

360
00:14:34,720 --> 00:14:38,000
m2 over here

361
00:14:39,199 --> 00:14:42,079
the procedure is as follows

362
00:14:42,079 --> 00:14:45,199
first using m0 and m1

363
00:14:45,199 --> 00:14:49,199
which in total have 128 bits of freedom

364
00:14:49,199 --> 00:14:51,600
we can easily construct to the power of

365
00:14:51,600 --> 00:14:54,720
92 possible pairs of messages

366
00:14:54,720 --> 00:14:58,560
out of this to the 92 pairs of messages

367
00:14:58,560 --> 00:15:00,880
two on average to the power of 38 of

368
00:15:00,880 --> 00:15:03,279
them will actually pass the 54

369
00:15:03,279 --> 00:15:04,560
constraints

370
00:15:04,560 --> 00:15:07,279
in the first round

371
00:15:08,160 --> 00:15:10,959
next for the remaining to the above 38

372
00:15:10,959 --> 00:15:12,639
pairs of messages

373
00:15:12,639 --> 00:15:15,040
for each of them we can apply 2 to the

374
00:15:15,040 --> 00:15:17,839
power of 64 pairs of messages

375
00:15:17,839 --> 00:15:21,360
with this particular delta in

376
00:15:21,360 --> 00:15:24,880
so in total we have 2 above 38 times 2

377
00:15:24,880 --> 00:15:26,880
of 64 which will give you to the power

378
00:15:26,880 --> 00:15:28,399
of one zero two

379
00:15:28,399 --> 00:15:31,360
pairs of messages over here

380
00:15:31,360 --> 00:15:33,519
now this to the power of one zero two

381
00:15:33,519 --> 00:15:36,160
pairs of messages on average

382
00:15:36,160 --> 00:15:38,000
will there be one

383
00:15:38,000 --> 00:15:40,399
pair of message that will actually

384
00:15:40,399 --> 00:15:42,720
satisfy the second round

385
00:15:42,720 --> 00:15:44,720
of constraints

386
00:15:44,720 --> 00:15:45,839
therefore

387
00:15:45,839 --> 00:15:48,240
on average we will obtain a pair of

388
00:15:48,240 --> 00:15:51,519
message that has the desired data out

389
00:15:51,519 --> 00:15:54,000
over here

390
00:15:54,000 --> 00:15:56,240
therefore if we add delta out to this

391
00:15:56,240 --> 00:15:58,720
pair of messages we will eliminate the

392
00:15:58,720 --> 00:16:01,120
difference and therefore will construct

393
00:16:01,120 --> 00:16:03,759
a collision

394
00:16:05,519 --> 00:16:08,399
now we'll move on to the summary

395
00:16:08,399 --> 00:16:11,600
in this world we use an automated method

396
00:16:11,600 --> 00:16:14,240
cp to actually model the ascon

397
00:16:14,240 --> 00:16:15,440
permutation

398
00:16:15,440 --> 00:16:17,920
and it actually performs as well as the

399
00:16:17,920 --> 00:16:20,480
dedicated heuristics methods

400
00:16:20,480 --> 00:16:23,279
it can also also be easily tweaked to

401
00:16:23,279 --> 00:16:25,360
find characteristics for various

402
00:16:25,360 --> 00:16:28,000
scenarios

403
00:16:28,240 --> 00:16:30,240
the advantage of cp is that the

404
00:16:30,240 --> 00:16:32,959
formulation is intuitive and therefore

405
00:16:32,959 --> 00:16:35,440
it's actually less prone to errors this

406
00:16:35,440 --> 00:16:38,160
is in comparison to mlp where we are

407
00:16:38,160 --> 00:16:40,800
only restricted to using only integers

408
00:16:40,800 --> 00:16:43,680
and inequalities

409
00:16:46,079 --> 00:16:48,480
we have also found new distinguishers

410
00:16:48,480 --> 00:16:50,480
for the sql permutation

411
00:16:50,480 --> 00:16:51,680
and finally

412
00:16:51,680 --> 00:16:54,079
improve some of the forgery and

413
00:16:54,079 --> 00:16:56,959
collision results

414
00:16:58,320 --> 00:17:00,880
this sums up my presentation and i would

415
00:17:00,880 --> 00:17:03,279
like to thank you for your attention

416
00:17:03,279 --> 00:17:05,280
if you are interested in our work you

417
00:17:05,280 --> 00:17:07,280
may wish to take a look at out at the

418
00:17:07,280 --> 00:17:10,480
full paper that is published in toss

419
00:17:10,480 --> 00:17:13,280
2022

420
00:17:14,000 --> 00:17:16,480
these are the references for this

421
00:17:16,480 --> 00:17:19,480
presentation

