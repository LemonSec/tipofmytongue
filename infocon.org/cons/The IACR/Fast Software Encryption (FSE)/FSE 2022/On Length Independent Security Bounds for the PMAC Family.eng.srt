1
00:00:02,399 --> 00:00:03,840
hello everyone

2
00:00:03,840 --> 00:00:05,759
i am

3
00:00:05,759 --> 00:00:08,480
today i will speak uh

4
00:00:08,480 --> 00:00:10,400
the on the paper

5
00:00:10,400 --> 00:00:12,400
on length independence security bounds

6
00:00:12,400 --> 00:00:15,200
for the pmac family

7
00:00:15,200 --> 00:00:17,359
this paper has been co-authored with uh

8
00:00:17,359 --> 00:00:21,039
vishuddhi chakraborty ocean

9
00:00:22,080 --> 00:00:23,600
so

10
00:00:23,600 --> 00:00:25,439
this is the list

11
00:00:25,439 --> 00:00:28,080
what we have done in this paper

12
00:00:28,080 --> 00:00:30,880
first of all we have identified in uh

13
00:00:30,880 --> 00:00:35,200
flaw in nato's paper uh which he

14
00:00:35,200 --> 00:00:39,760
submitted and which was accepted in 2ac

15
00:00:39,760 --> 00:00:42,000
in 2019

16
00:00:42,000 --> 00:00:44,000
and

17
00:00:44,000 --> 00:00:45,920
he proposed a

18
00:00:45,920 --> 00:00:47,920
construction of

19
00:00:47,920 --> 00:00:50,079
a variant of pimac

20
00:00:50,079 --> 00:00:51,120
and

21
00:00:51,120 --> 00:00:54,239
we identified a flaw in the proof

22
00:00:54,239 --> 00:00:56,719
security proof of the construction

23
00:00:56,719 --> 00:00:59,440
and we also posed an equivalent

24
00:00:59,440 --> 00:01:00,480
problem

25
00:01:00,480 --> 00:01:03,920
ah which is to be solved in order to ah

26
00:01:03,920 --> 00:01:05,438
solve the

27
00:01:05,438 --> 00:01:07,439
claim

28
00:01:07,439 --> 00:01:08,880
in the paper

29
00:01:08,880 --> 00:01:12,400
ah secondly uh we

30
00:01:12,400 --> 00:01:15,200
we have shown uh length independent

31
00:01:15,200 --> 00:01:18,720
security bound for simplified p mac or

32
00:01:18,720 --> 00:01:19,920
sp mac

33
00:01:19,920 --> 00:01:22,000
with a weaker notion of

34
00:01:22,000 --> 00:01:25,280
security for the hash function

35
00:01:25,280 --> 00:01:27,200
and thirdly

36
00:01:27,200 --> 00:01:28,720
we have

37
00:01:28,720 --> 00:01:31,119
proposed a

38
00:01:31,119 --> 00:01:33,439
variant of p mach 1

39
00:01:33,439 --> 00:01:37,119
we name it as p mach 2 and we show that

40
00:01:37,119 --> 00:01:41,840
it achieves a length free security

41
00:01:43,040 --> 00:01:44,240
so

42
00:01:44,240 --> 00:01:47,600
to begin with let us see

43
00:01:47,600 --> 00:01:49,920
the comparison table the comparative

44
00:01:49,920 --> 00:01:52,240
table

45
00:01:53,439 --> 00:01:56,240
here we we can see that there is

46
00:01:56,240 --> 00:01:58,079
something called pmac3 there is

47
00:01:58,079 --> 00:02:00,719
something called np mac npmac is nothing

48
00:02:00,719 --> 00:02:01,680
but

49
00:02:01,680 --> 00:02:03,840
the

50
00:02:04,640 --> 00:02:06,719
variant of p mac which we have just

51
00:02:06,719 --> 00:02:08,800
mentioned

52
00:02:08,800 --> 00:02:12,879
it is called npmac and pmf3 is the

53
00:02:12,879 --> 00:02:15,440
new variant of pima which after we

54
00:02:15,440 --> 00:02:18,160
pointed out the flaw in the npmec and i

55
00:02:18,160 --> 00:02:19,040
though

56
00:02:19,040 --> 00:02:21,760
proposed another construction called p 3

57
00:02:21,760 --> 00:02:23,360
but if we

58
00:02:23,360 --> 00:02:27,520
consider the number of masking keys

59
00:02:28,720 --> 00:02:31,040
sorry if we consider the number of

60
00:02:31,040 --> 00:02:33,360
masking keys we see that our

61
00:02:33,360 --> 00:02:35,360
construction p mac 2

62
00:02:35,360 --> 00:02:39,280
in this paper it is an improvement over

63
00:02:39,280 --> 00:02:40,790
p mach 3

64
00:02:40,790 --> 00:02:42,080
[Music]

65
00:02:42,080 --> 00:02:45,599
or p mach 1 also because it achieves a

66
00:02:45,599 --> 00:02:49,040
length free security bound as well as

67
00:02:49,040 --> 00:02:52,560
the number of masking keys is minimal

68
00:02:52,560 --> 00:02:53,360
here

69
00:02:53,360 --> 00:02:54,160
so

70
00:02:54,160 --> 00:02:58,239
this this is the table of comparison

71
00:02:58,400 --> 00:03:00,080
now

72
00:03:00,080 --> 00:03:01,920
uh

73
00:03:01,920 --> 00:03:04,319
this is the pictorial view of the

74
00:03:04,319 --> 00:03:07,120
simplified p mac or xp mac

75
00:03:07,120 --> 00:03:09,840
here the message blocks are absorbed

76
00:03:09,840 --> 00:03:12,080
with

77
00:03:12,800 --> 00:03:14,480
the

78
00:03:14,480 --> 00:03:18,080
tau in the tau output so tower outputs

79
00:03:18,080 --> 00:03:20,480
are adjust the masking values

80
00:03:20,480 --> 00:03:21,280
so

81
00:03:21,280 --> 00:03:24,480
mi it message block is

82
00:03:24,480 --> 00:03:26,799
stored with the height masking values

83
00:03:26,799 --> 00:03:30,159
and it is fed in the

84
00:03:30,159 --> 00:03:33,519
block cipher here uh

85
00:03:33,519 --> 00:03:39,200
pi the permutation pi and after uh

86
00:03:39,200 --> 00:03:41,840
we collect all the output

87
00:03:41,840 --> 00:03:43,840
outputs of the

88
00:03:43,840 --> 00:03:46,799
of these block ciphers we just sort them

89
00:03:46,799 --> 00:03:50,080
and the last block is also solved here

90
00:03:50,080 --> 00:03:53,280
and this is just

91
00:03:53,280 --> 00:03:57,040
fade into the last block cipher pi prime

92
00:03:57,040 --> 00:03:58,799
and we get

93
00:03:58,799 --> 00:04:01,280
the tag output

94
00:04:01,280 --> 00:04:02,159
so

95
00:04:02,159 --> 00:04:03,920
pipe and pi prime are random

96
00:04:03,920 --> 00:04:06,239
permutations here and

97
00:04:06,239 --> 00:04:09,920
tau is the masking function

98
00:04:10,560 --> 00:04:12,080
so uh

99
00:04:12,080 --> 00:04:14,879
let us see what what are the popular p

100
00:04:14,879 --> 00:04:16,320
mac variants

101
00:04:16,320 --> 00:04:18,959
that we get from spmak first of all the

102
00:04:18,959 --> 00:04:20,798
original p mac is

103
00:04:20,798 --> 00:04:22,960
where the grey code based masking is

104
00:04:22,960 --> 00:04:23,919
used

105
00:04:23,919 --> 00:04:26,800
uh next p mac one where

106
00:04:26,800 --> 00:04:28,400
the power of two

107
00:04:28,400 --> 00:04:32,880
is used as masking and in case of npmec

108
00:04:32,880 --> 00:04:35,360
or the pima construction

109
00:04:35,360 --> 00:04:38,080
that's knighto proposed here

110
00:04:38,080 --> 00:04:40,720
something called two powering up masking

111
00:04:40,720 --> 00:04:43,199
is used as the mask

112
00:04:43,199 --> 00:04:46,080
masking function

113
00:04:47,120 --> 00:04:52,000
so precisely mathematically this is the

114
00:04:52,240 --> 00:04:54,639
expression of the masking values the tau

115
00:04:54,639 --> 00:04:57,120
y is just

116
00:04:57,120 --> 00:05:00,320
2 to the power i times

117
00:05:00,320 --> 00:05:02,240
pi of 0

118
00:05:02,240 --> 00:05:04,880
and this is the masking for p mach 1 and

119
00:05:04,880 --> 00:05:08,400
for n p mac this is the 2 powering up

120
00:05:08,400 --> 00:05:09,440
masking

121
00:05:09,440 --> 00:05:11,680
and why we see

122
00:05:11,680 --> 00:05:14,400
the reason behind the name this is 1

123
00:05:14,400 --> 00:05:16,639
power of 2 and this is another power of

124
00:05:16,639 --> 00:05:17,440
2

125
00:05:17,440 --> 00:05:18,479
and this

126
00:05:18,479 --> 00:05:21,440
2 powers are

127
00:05:21,840 --> 00:05:24,479
first multiplied with l 1 and l to 2

128
00:05:24,479 --> 00:05:27,600
fixed values and then they are solved to

129
00:05:27,600 --> 00:05:29,039
get the

130
00:05:29,039 --> 00:05:30,960
masking

131
00:05:30,960 --> 00:05:33,520
value final masking value

132
00:05:33,520 --> 00:05:35,759
so

133
00:05:35,759 --> 00:05:37,440
let us

134
00:05:37,440 --> 00:05:40,479
come to the analysis of npmec

135
00:05:40,479 --> 00:05:42,080
here the

136
00:05:42,080 --> 00:05:46,400
most important claim that naito has used

137
00:05:46,400 --> 00:05:48,800
in the paper is this claim

138
00:05:48,800 --> 00:05:50,080
he

139
00:05:50,080 --> 00:05:53,120
claims that uh these

140
00:05:53,120 --> 00:05:55,440
this system of equations

141
00:05:55,440 --> 00:05:56,800
uh are

142
00:05:56,800 --> 00:05:57,759
this

143
00:05:57,759 --> 00:06:00,960
or the these two equations are

144
00:06:00,960 --> 00:06:05,120
linearly independent given ah

145
00:06:05,120 --> 00:06:08,560
this a comma b this set is not equal to

146
00:06:08,560 --> 00:06:11,680
c comma d this set what is uh alpha beta

147
00:06:11,680 --> 00:06:14,000
gamma delta alpha is just 2 to the power

148
00:06:14,000 --> 00:06:16,800
a beta is 2 to the power b

149
00:06:16,800 --> 00:06:18,720
gamma is 2 to the power c n

150
00:06:18,720 --> 00:06:20,639
delta s 2 to the power d

151
00:06:20,639 --> 00:06:23,199
so if we consider these two equations

152
00:06:23,199 --> 00:06:25,039
the these are indeed linearly

153
00:06:25,039 --> 00:06:26,800
independent as

154
00:06:26,800 --> 00:06:28,720
neither claims but

155
00:06:28,720 --> 00:06:33,039
we show that this claim is wrong by

156
00:06:33,360 --> 00:06:36,800
this slide explains it

157
00:06:36,800 --> 00:06:39,600
the condition of linear dependence it is

158
00:06:39,600 --> 00:06:41,120
equivalent to

159
00:06:41,120 --> 00:06:44,319
this condition as stated in the green

160
00:06:44,319 --> 00:06:45,440
box

161
00:06:45,440 --> 00:06:49,520
but according to naito uh he

162
00:06:49,520 --> 00:06:51,599
says that this is

163
00:06:51,599 --> 00:06:52,400
the

164
00:06:52,400 --> 00:06:55,840
fact stated in the red box this is the

165
00:06:55,840 --> 00:06:57,360
equivalent condition of linear

166
00:06:57,360 --> 00:06:58,560
dependence

167
00:06:58,560 --> 00:07:00,960
but this is not true

168
00:07:00,960 --> 00:07:02,400
okay for

169
00:07:02,400 --> 00:07:04,319
it is true if

170
00:07:04,319 --> 00:07:06,080
only

171
00:07:06,080 --> 00:07:10,080
c2 is equal to c1 what is c2 let us just

172
00:07:10,080 --> 00:07:13,039
see this is c1 and this is c2

173
00:07:13,039 --> 00:07:16,560
okay so if c2 is equal to c on this

174
00:07:16,560 --> 00:07:18,720
knight then knighto's claim is okay

175
00:07:18,720 --> 00:07:21,440
otherwise it is wrong

176
00:07:21,440 --> 00:07:22,240
so

177
00:07:22,240 --> 00:07:24,960
uh now

178
00:07:25,360 --> 00:07:26,720
we see that

179
00:07:26,720 --> 00:07:30,319
uh from the green box we get

180
00:07:30,319 --> 00:07:31,120
this

181
00:07:31,120 --> 00:07:32,400
this

182
00:07:32,400 --> 00:07:34,080
equation also

183
00:07:34,080 --> 00:07:34,880
so

184
00:07:34,880 --> 00:07:36,720
let us just see

185
00:07:36,720 --> 00:07:39,759
one more time this green box

186
00:07:39,759 --> 00:07:42,240
from here we can

187
00:07:42,240 --> 00:07:44,160
arrive

188
00:07:44,160 --> 00:07:46,960
from the condition of linear dependence

189
00:07:46,960 --> 00:07:50,479
uh we can arrive at this equation

190
00:07:50,479 --> 00:07:52,240
so

191
00:07:52,240 --> 00:07:53,039
we

192
00:07:53,039 --> 00:07:56,080
show a counter example here

193
00:07:56,080 --> 00:07:59,039
for the gallery field of

194
00:07:59,039 --> 00:08:00,720
order 16

195
00:08:00,720 --> 00:08:03,680
we first define the multiplication by

196
00:08:03,680 --> 00:08:04,800
this

197
00:08:04,800 --> 00:08:06,000
polynomial

198
00:08:06,000 --> 00:08:07,120
and

199
00:08:07,120 --> 00:08:08,560
if we take

200
00:08:08,560 --> 00:08:11,680
a b c d as these values

201
00:08:11,680 --> 00:08:14,080
we see that this satisfies

202
00:08:14,080 --> 00:08:16,720
this equation that that means

203
00:08:16,720 --> 00:08:18,479
uh

204
00:08:18,479 --> 00:08:20,160
these two

205
00:08:20,160 --> 00:08:24,000
equations generated by abcd

206
00:08:24,000 --> 00:08:27,000
are

207
00:08:28,000 --> 00:08:29,680
linearly dependent

208
00:08:29,680 --> 00:08:30,720
but

209
00:08:30,720 --> 00:08:34,799
if we calculate the c2 value and the c1

210
00:08:34,799 --> 00:08:37,839
value we see that c2 is not equal to c1

211
00:08:37,839 --> 00:08:39,760
so

212
00:08:39,760 --> 00:08:41,679
this

213
00:08:41,679 --> 00:08:44,320
this is this does not happen

214
00:08:44,320 --> 00:08:46,399
a equal to b old is equal to d we can

215
00:08:46,399 --> 00:08:48,720
see just directly from here that u is

216
00:08:48,720 --> 00:08:52,320
not equal to b or b is not equal to c

217
00:08:52,320 --> 00:08:54,720
okay so uh

218
00:08:54,720 --> 00:08:57,839
this is the counter example to the claim

219
00:08:57,839 --> 00:08:59,600
in the paper

220
00:08:59,600 --> 00:09:01,680
in nato's paper

221
00:09:01,680 --> 00:09:06,160
for of npmac uh as we name it in pmac

222
00:09:06,160 --> 00:09:07,360
so

223
00:09:07,360 --> 00:09:08,640
now

224
00:09:08,640 --> 00:09:10,480
uh what is the equivalent problem that

225
00:09:10,480 --> 00:09:12,399
we

226
00:09:12,399 --> 00:09:15,360
pose here we pose that

227
00:09:15,360 --> 00:09:16,480
to

228
00:09:16,480 --> 00:09:17,519
uh

229
00:09:17,519 --> 00:09:20,320
solve the difficulty or

230
00:09:20,320 --> 00:09:22,399
uh what do we

231
00:09:22,399 --> 00:09:24,800
need to solve in order to fix the error

232
00:09:24,800 --> 00:09:26,000
in the proof

233
00:09:26,000 --> 00:09:28,880
we have to bound this uh

234
00:09:28,880 --> 00:09:31,760
abcd number of abcds such that this

235
00:09:31,760 --> 00:09:32,959
happens

236
00:09:32,959 --> 00:09:34,959
just recall that alpha is nothing but 2

237
00:09:34,959 --> 00:09:37,040
to the power a beta is not nothing but

238
00:09:37,040 --> 00:09:39,279
two to got b gamma is nothing but 2 plus

239
00:09:39,279 --> 00:09:40,160
c

240
00:09:40,160 --> 00:09:41,839
and delta is nothing but 2 to the power

241
00:09:41,839 --> 00:09:42,640
d

242
00:09:42,640 --> 00:09:44,320
so

243
00:09:44,320 --> 00:09:47,279
we have to bound the number of abcd such

244
00:09:47,279 --> 00:09:48,800
that this happens

245
00:09:48,800 --> 00:09:50,800
and this is the

246
00:09:50,800 --> 00:09:51,760
crux

247
00:09:51,760 --> 00:09:54,560
problem of the

248
00:09:54,720 --> 00:09:58,800
paper uh if we want to show the security

249
00:09:58,800 --> 00:09:59,519
uh

250
00:09:59,519 --> 00:10:01,440
by the bound security

251
00:10:01,440 --> 00:10:04,240
of the construction this is the cracks

252
00:10:04,240 --> 00:10:06,560
problem this is the equivalent form of

253
00:10:06,560 --> 00:10:08,399
the

254
00:10:08,399 --> 00:10:10,079
cracks problem

255
00:10:10,079 --> 00:10:11,040
uh

256
00:10:11,040 --> 00:10:12,640
so

257
00:10:12,640 --> 00:10:16,959
now let uh let us come to sp mac

258
00:10:16,959 --> 00:10:21,200
here we define a concept of two eyes

259
00:10:21,200 --> 00:10:23,200
almost or universal

260
00:10:23,200 --> 00:10:24,880
hash function

261
00:10:24,880 --> 00:10:27,360
how is it defined uh

262
00:10:27,360 --> 00:10:29,440
first we define uh

263
00:10:29,440 --> 00:10:30,880
an event

264
00:10:30,880 --> 00:10:34,880
called a is just this this event and

265
00:10:34,880 --> 00:10:36,640
then we

266
00:10:36,640 --> 00:10:38,480
define another event b

267
00:10:38,480 --> 00:10:41,680
this this row is just used for uh

268
00:10:41,680 --> 00:10:44,240
defining the events and this is the

269
00:10:44,240 --> 00:10:48,079
actual definition of 2 y is x u

270
00:10:48,079 --> 00:10:50,399
so what it means it means that

271
00:10:50,399 --> 00:10:53,279
probability of a the probability is

272
00:10:53,279 --> 00:10:54,880
considered

273
00:10:54,880 --> 00:10:55,839
for

274
00:10:55,839 --> 00:10:57,760
probability is calculated

275
00:10:57,760 --> 00:11:01,040
for the number of keys over the

276
00:11:01,040 --> 00:11:02,079
key

277
00:11:02,079 --> 00:11:03,279
over k

278
00:11:03,279 --> 00:11:05,360
so probability of a

279
00:11:05,360 --> 00:11:07,519
uh

280
00:11:07,839 --> 00:11:10,079
is less than equal to epsilon and

281
00:11:10,079 --> 00:11:11,920
probability of a and b is less than

282
00:11:11,920 --> 00:11:14,399
equal to epsilon square

283
00:11:14,399 --> 00:11:17,279
so is this b is this probability of a is

284
00:11:17,279 --> 00:11:18,640
less than equal to epsilon the

285
00:11:18,640 --> 00:11:21,600
probability of a and b this joint event

286
00:11:21,600 --> 00:11:23,839
is less than equal to epsilon square

287
00:11:23,839 --> 00:11:26,160
priority is considered over

288
00:11:26,160 --> 00:11:27,440
k

289
00:11:27,440 --> 00:11:28,959
so

290
00:11:28,959 --> 00:11:30,720
this is uh if

291
00:11:30,720 --> 00:11:32,640
the hash function satisfies this

292
00:11:32,640 --> 00:11:34,880
equation then the hash is called

293
00:11:34,880 --> 00:11:37,600
epsilon two wise axu

294
00:11:37,600 --> 00:11:39,920
hash

295
00:11:40,079 --> 00:11:41,600
so

296
00:11:41,600 --> 00:11:44,160
this is an interesting observation about

297
00:11:44,160 --> 00:11:45,040
the

298
00:11:45,040 --> 00:11:47,600
security notion we have just defined

299
00:11:47,600 --> 00:11:51,839
ah we see that uh first of all this is a

300
00:11:51,839 --> 00:11:54,000
weaker definition

301
00:11:54,000 --> 00:11:55,200
than

302
00:11:55,200 --> 00:11:57,600
uh the four wise

303
00:11:57,600 --> 00:12:00,160
independence of hash independent hash

304
00:12:00,160 --> 00:12:01,120
function

305
00:12:01,120 --> 00:12:02,000
as

306
00:12:02,000 --> 00:12:03,279
gassy

307
00:12:03,279 --> 00:12:07,279
it will defined in their paper

308
00:12:07,519 --> 00:12:09,200
we easily

309
00:12:09,200 --> 00:12:11,760
see that uh any forward-wise independent

310
00:12:11,760 --> 00:12:14,720
hash function is epsilon 2 x u where

311
00:12:14,720 --> 00:12:17,760
epsilon is 1 over 2 to the power n

312
00:12:17,760 --> 00:12:20,639
so the this notion

313
00:12:20,639 --> 00:12:23,839
of two y's a x u is weaker than 4y is

314
00:12:23,839 --> 00:12:25,120
independent

315
00:12:25,120 --> 00:12:26,639
but next we

316
00:12:26,639 --> 00:12:28,880
show that the converse is not true that

317
00:12:28,880 --> 00:12:31,519
means that there is some function for

318
00:12:31,519 --> 00:12:32,480
example

319
00:12:32,480 --> 00:12:34,079
this tau y

320
00:12:34,079 --> 00:12:36,079
where

321
00:12:36,079 --> 00:12:38,560
3 power of twos

322
00:12:38,560 --> 00:12:42,399
uh three powers of two are used and this

323
00:12:42,399 --> 00:12:44,480
is actually called called three powering

324
00:12:44,480 --> 00:12:47,200
up mask and it is used

325
00:12:47,200 --> 00:12:50,720
in pimac two paper by nine night though

326
00:12:50,720 --> 00:12:55,680
so for this masking function this is uh

327
00:12:55,680 --> 00:12:58,800
two wise uh axu but not photo as

328
00:12:58,800 --> 00:13:01,839
independent so the concept of two wise

329
00:13:01,839 --> 00:13:05,120
axu is strictly weaker than four is

330
00:13:05,120 --> 00:13:06,560
independent

331
00:13:06,560 --> 00:13:07,839
so

332
00:13:07,839 --> 00:13:08,560
uh

333
00:13:08,560 --> 00:13:11,839
what it means we'll see later we

334
00:13:11,839 --> 00:13:13,839
we

335
00:13:13,839 --> 00:13:17,360
in the end we'll show what what it means

336
00:13:17,360 --> 00:13:18,880
actually that we

337
00:13:18,880 --> 00:13:21,680
we gain

338
00:13:21,680 --> 00:13:24,160
we just we there there was previously a

339
00:13:24,160 --> 00:13:26,560
result for four wise independence

340
00:13:26,560 --> 00:13:28,959
independent hash function that s p mac

341
00:13:28,959 --> 00:13:31,519
achieves uh

342
00:13:31,519 --> 00:13:33,920
length free birthday bound security here

343
00:13:33,920 --> 00:13:36,480
we show that for two ways x you also

344
00:13:36,480 --> 00:13:39,120
that is for a strictly weaker

345
00:13:39,120 --> 00:13:42,639
version or weaker notion of

346
00:13:42,639 --> 00:13:44,000
than the

347
00:13:44,000 --> 00:13:46,560
forward independent hash function we get

348
00:13:46,560 --> 00:13:48,880
the similar bound so this is an

349
00:13:48,880 --> 00:13:51,120
improvement uh

350
00:13:51,120 --> 00:13:52,880
over the result

351
00:13:52,880 --> 00:13:53,600
so

352
00:13:53,600 --> 00:13:55,440
the what is the

353
00:13:55,440 --> 00:13:57,040
here is a schema

354
00:13:57,040 --> 00:14:00,480
a brief schema of the proof for sp mac

355
00:14:00,480 --> 00:14:02,480
first of all we define an input

356
00:14:02,480 --> 00:14:03,920
collision graph

357
00:14:03,920 --> 00:14:04,639
for

358
00:14:04,639 --> 00:14:07,519
any two messages m and m prime

359
00:14:07,519 --> 00:14:08,320
uh

360
00:14:08,320 --> 00:14:11,199
and after defining the set of vertices

361
00:14:11,199 --> 00:14:13,440
the set of vertices is just

362
00:14:13,440 --> 00:14:14,160
the

363
00:14:14,160 --> 00:14:15,680
m comma 1

364
00:14:15,680 --> 00:14:17,760
to m comma l m

365
00:14:17,760 --> 00:14:18,720
and

366
00:14:18,720 --> 00:14:21,199
together with the

367
00:14:21,199 --> 00:14:22,079
m

368
00:14:22,079 --> 00:14:24,880
elements m m prime comma 1

369
00:14:24,880 --> 00:14:27,920
to m prime comma l m prime

370
00:14:27,920 --> 00:14:29,519
and the age

371
00:14:29,519 --> 00:14:31,360
are from a

372
00:14:31,360 --> 00:14:35,360
age is formed between m comma a and m

373
00:14:35,360 --> 00:14:38,880
prime comma a prime if this happens that

374
00:14:38,880 --> 00:14:40,320
if the

375
00:14:40,320 --> 00:14:42,399
ah

376
00:14:42,399 --> 00:14:45,360
block cipher input in this position if

377
00:14:45,360 --> 00:14:48,240
the block cipher input collides then an

378
00:14:48,240 --> 00:14:51,279
edge is found between these two

379
00:14:51,279 --> 00:14:52,320
uh

380
00:14:52,320 --> 00:14:53,680
vertices

381
00:14:53,680 --> 00:14:56,320
so this is the definition

382
00:14:56,320 --> 00:14:59,199
of the age and the vertices of the graph

383
00:14:59,199 --> 00:15:01,600
and after that we define

384
00:15:01,600 --> 00:15:04,240
uh cross cancelling masking

385
00:15:04,240 --> 00:15:06,480
when the induced graph is evenly

386
00:15:06,480 --> 00:15:08,639
partitioned it is called

387
00:15:08,639 --> 00:15:10,320
the masking

388
00:15:10,320 --> 00:15:12,959
for which it happens it calls it is

389
00:15:12,959 --> 00:15:15,839
called the cross canceling masking

390
00:15:15,839 --> 00:15:16,639
ah

391
00:15:16,639 --> 00:15:19,839
evenly partitioned bin means uh the the

392
00:15:19,839 --> 00:15:21,199
components if you consider the

393
00:15:21,199 --> 00:15:24,160
components the every component

394
00:15:24,160 --> 00:15:26,560
has size even size

395
00:15:26,560 --> 00:15:27,519
so

396
00:15:27,519 --> 00:15:29,360
then we call that

397
00:15:29,360 --> 00:15:31,680
the graph is evenly partitioned

398
00:15:31,680 --> 00:15:34,079
ok after that we define a covering

399
00:15:34,079 --> 00:15:36,480
collection of edges and it is defined

400
00:15:36,480 --> 00:15:37,279
for

401
00:15:37,279 --> 00:15:39,440
evenly partitioned graphs

402
00:15:39,440 --> 00:15:40,880
and the main

403
00:15:40,880 --> 00:15:42,880
lemma that we prove here

404
00:15:42,880 --> 00:15:44,079
is

405
00:15:44,079 --> 00:15:46,639
actually gives a relation between the

406
00:15:46,639 --> 00:15:48,399
cross counseling

407
00:15:48,399 --> 00:15:51,040
masking and the covering edges

408
00:15:51,040 --> 00:15:52,800
actually it

409
00:15:52,800 --> 00:15:53,759
bounds

410
00:15:53,759 --> 00:15:55,199
the

411
00:15:55,199 --> 00:15:57,360
cross cancellation probability

412
00:15:57,360 --> 00:15:58,639
by the

413
00:15:58,639 --> 00:16:01,600
probability of forming covering edges

414
00:16:01,600 --> 00:16:04,959
and we show that the final you show that

415
00:16:04,959 --> 00:16:07,120
the advantage is this

416
00:16:07,120 --> 00:16:10,639
and this is uh l free bound if we

417
00:16:10,639 --> 00:16:12,399
just

418
00:16:12,399 --> 00:16:16,800
look a bit deeper and calculate uh

419
00:16:16,800 --> 00:16:20,240
a bit you see that this is a this is an

420
00:16:20,240 --> 00:16:22,480
l free bound

421
00:16:22,480 --> 00:16:25,040
security amount okay

422
00:16:25,040 --> 00:16:26,399
so

423
00:16:26,399 --> 00:16:29,519
now for p mac 2 this is the pictorial

424
00:16:29,519 --> 00:16:31,440
view of p mach 2

425
00:16:31,440 --> 00:16:34,240
uh first we

426
00:16:34,240 --> 00:16:39,279
get l l is just a pi output of 0 and

427
00:16:39,279 --> 00:16:41,440
l is used as a

428
00:16:41,440 --> 00:16:44,240
this in the masking

429
00:16:44,240 --> 00:16:46,480
and alpha

430
00:16:46,480 --> 00:16:49,759
this alpha value a alpha is just a

431
00:16:49,759 --> 00:16:51,600
primitive element

432
00:16:51,600 --> 00:16:55,440
of the field alpha is ah

433
00:16:55,440 --> 00:16:58,480
multiplied here

434
00:16:58,480 --> 00:17:00,880
in these places in the construction and

435
00:17:00,880 --> 00:17:03,519
we after

436
00:17:03,519 --> 00:17:05,119
getting all these

437
00:17:05,119 --> 00:17:06,240
all these

438
00:17:06,240 --> 00:17:09,439
things done we get the

439
00:17:09,439 --> 00:17:11,520
tag output

440
00:17:11,520 --> 00:17:13,679
t

441
00:17:14,720 --> 00:17:15,679
so

442
00:17:15,679 --> 00:17:18,480
we see that p 2 is actually less than

443
00:17:18,480 --> 00:17:19,760
prp

444
00:17:19,760 --> 00:17:21,599
why because

445
00:17:21,599 --> 00:17:24,720
this part can be seen as an

446
00:17:24,720 --> 00:17:26,079
as a hash

447
00:17:26,079 --> 00:17:28,079
part and this is a

448
00:17:28,079 --> 00:17:30,240
prp so

449
00:17:30,240 --> 00:17:32,480
the aim is

450
00:17:32,480 --> 00:17:35,520
fed in the hash part and then the output

451
00:17:35,520 --> 00:17:37,919
of hash part is fed

452
00:17:37,919 --> 00:17:40,320
uh in the prp and we get

453
00:17:40,320 --> 00:17:42,960
the final tag or the t

454
00:17:42,960 --> 00:17:43,840
so

455
00:17:43,840 --> 00:17:47,120
p make two the problem

456
00:17:47,120 --> 00:17:48,640
is

457
00:17:48,640 --> 00:17:51,679
becomes simpler because p mach 2 here

458
00:17:51,679 --> 00:17:53,520
can be

459
00:17:53,520 --> 00:17:55,120
dealt with

460
00:17:55,120 --> 00:17:59,639
in the hash then prp paradigm

461
00:18:00,000 --> 00:18:02,880
so the proof idea of p mac2

462
00:18:02,880 --> 00:18:06,720
if we look at the proof idea first we

463
00:18:06,720 --> 00:18:08,400
define a generalization of the cross

464
00:18:08,400 --> 00:18:09,520
canceling

465
00:18:09,520 --> 00:18:11,200
cancellation probability for more than

466
00:18:11,200 --> 00:18:13,840
two messages the generation is defined

467
00:18:13,840 --> 00:18:15,760
as theta prime

468
00:18:15,760 --> 00:18:16,720
and

469
00:18:16,720 --> 00:18:18,320
for

470
00:18:18,320 --> 00:18:19,679
similarly for

471
00:18:19,679 --> 00:18:21,440
probability of collision

472
00:18:21,440 --> 00:18:22,880
for more than two

473
00:18:22,880 --> 00:18:25,039
hash outputs it defined as the call

474
00:18:25,039 --> 00:18:26,000
function

475
00:18:26,000 --> 00:18:29,360
call of m one to mq

476
00:18:29,360 --> 00:18:32,080
and here we see the most important

477
00:18:32,080 --> 00:18:33,360
result

478
00:18:33,360 --> 00:18:35,440
here the call

479
00:18:35,440 --> 00:18:38,080
value is less than equal to theta prime

480
00:18:38,080 --> 00:18:39,760
value plus something

481
00:18:39,760 --> 00:18:40,840
ah

482
00:18:40,840 --> 00:18:44,480
where and also the advantage from the

483
00:18:44,480 --> 00:18:47,440
hashtag prp result we can

484
00:18:47,440 --> 00:18:50,799
state that the advantage uh of the pmac

485
00:18:50,799 --> 00:18:53,600
2 is less than equal to call plus

486
00:18:53,600 --> 00:18:57,200
something so here the advantage

487
00:18:57,200 --> 00:18:58,240
the

488
00:18:58,240 --> 00:19:01,280
together if we consider these two in

489
00:19:01,280 --> 00:19:03,679
equation inequalities together we can

490
00:19:03,679 --> 00:19:06,240
see that advantage is dependent

491
00:19:06,240 --> 00:19:08,400
only on the theta prime so the main task

492
00:19:08,400 --> 00:19:12,640
is to bound the theta prime part okay

493
00:19:12,640 --> 00:19:15,120
so um

494
00:19:15,120 --> 00:19:17,360
here

495
00:19:21,200 --> 00:19:24,799
okay so finally we get the collision

496
00:19:24,799 --> 00:19:27,440
probability is less than equal to q

497
00:19:27,440 --> 00:19:31,840
square plus sigma by 2 over n

498
00:19:32,400 --> 00:19:34,240
by 2 to the power n

499
00:19:34,240 --> 00:19:36,640
plus mu where

500
00:19:36,640 --> 00:19:40,000
mu is something which depends on the

501
00:19:40,000 --> 00:19:42,000
range of l

502
00:19:42,000 --> 00:19:44,559
we see here that mu is q

503
00:19:44,559 --> 00:19:45,520
over

504
00:19:45,520 --> 00:19:48,960
2 to the power n by 2 if l is less than

505
00:19:48,960 --> 00:19:52,400
equal to 2 to the power n by 4 and mu is

506
00:19:52,400 --> 00:19:55,679
sigma to the power 1.5 by

507
00:19:55,679 --> 00:19:57,600
2 to the power n if

508
00:19:57,600 --> 00:20:00,320
uh l is greater than 2 to the power

509
00:20:00,320 --> 00:20:02,240
n by 4 and less than equal to 2 to the

510
00:20:02,240 --> 00:20:04,640
power n minus 2

511
00:20:04,640 --> 00:20:08,080
and if we simplify this we

512
00:20:08,080 --> 00:20:10,320
see that the main gist

513
00:20:10,320 --> 00:20:11,120
uh

514
00:20:11,120 --> 00:20:12,320
of this

515
00:20:12,320 --> 00:20:15,280
inequality is that we get a length free

516
00:20:15,280 --> 00:20:16,559
bound for

517
00:20:16,559 --> 00:20:18,960
l get less than equal to the power n by

518
00:20:18,960 --> 00:20:23,840
4 and we also get a

519
00:20:23,840 --> 00:20:25,600
then free bound for

520
00:20:25,600 --> 00:20:27,600
l greater than 2 to the power n by 4 and

521
00:20:27,600 --> 00:20:30,080
less than 2 to the power n minus 2

522
00:20:30,080 --> 00:20:33,039
when sigma is less than 2 to the power

523
00:20:33,039 --> 00:20:34,480
two n by three

524
00:20:34,480 --> 00:20:36,080
so

525
00:20:36,080 --> 00:20:39,120
with this extra condition we

526
00:20:39,120 --> 00:20:40,000
uh

527
00:20:40,000 --> 00:20:42,799
uh maintain we retain the length

528
00:20:42,799 --> 00:20:45,520
freeness of the security bound for more

529
00:20:45,520 --> 00:20:46,720
than

530
00:20:46,720 --> 00:20:49,039
in two different by four

531
00:20:49,039 --> 00:20:51,520
length of messages

532
00:20:51,520 --> 00:20:54,799
so this is the final result for pmac2

533
00:20:54,799 --> 00:20:55,919
so

534
00:20:55,919 --> 00:20:59,360
this is a summary or conclusion

535
00:20:59,360 --> 00:21:00,480
of

536
00:21:00,480 --> 00:21:02,559
all the results that we have

537
00:21:02,559 --> 00:21:04,720
uh done in the paper

538
00:21:04,720 --> 00:21:07,120
first of all we have

539
00:21:07,120 --> 00:21:09,760
shown that the proof is wrong

540
00:21:09,760 --> 00:21:11,919
in nato's paper but we don't know

541
00:21:11,919 --> 00:21:14,640
whether there exists any proof or not so

542
00:21:14,640 --> 00:21:18,159
it's an open problem still now

543
00:21:18,159 --> 00:21:20,480
to prove or disprove the security bound

544
00:21:20,480 --> 00:21:25,360
as claimed in nato's paper in tosc 2019

545
00:21:25,360 --> 00:21:27,200
and secondly

546
00:21:27,200 --> 00:21:32,320
for sp mac uh it had a

547
00:21:32,320 --> 00:21:34,640
length free but the bound security for

548
00:21:34,640 --> 00:21:37,520
four wise independent hash function

549
00:21:37,520 --> 00:21:39,679
but in this paper we show

550
00:21:39,679 --> 00:21:43,520
a similar result for a weaker notion of

551
00:21:43,520 --> 00:21:45,200
security

552
00:21:45,200 --> 00:21:48,400
for hash function this is called epsilon

553
00:21:48,400 --> 00:21:50,320
2x u hash function

554
00:21:50,320 --> 00:21:51,120
so

555
00:21:51,120 --> 00:21:53,360
this is an improvement

556
00:21:53,360 --> 00:21:54,960
in terms of the

557
00:21:54,960 --> 00:21:56,559
security bound

558
00:21:56,559 --> 00:21:58,559
the security notion

559
00:21:58,559 --> 00:22:02,159
of the hash function and

560
00:22:02,159 --> 00:22:03,280
lastly

561
00:22:03,280 --> 00:22:05,039
we propose a

562
00:22:05,039 --> 00:22:07,039
variant of p mac 1

563
00:22:07,039 --> 00:22:10,559
we name it as p mach 2 and we show that

564
00:22:10,559 --> 00:22:12,480
it achieves the length free security

565
00:22:12,480 --> 00:22:13,520
bound

566
00:22:13,520 --> 00:22:15,600
whenever l is less than equal to two

567
00:22:15,600 --> 00:22:18,720
super the l is the length of the

568
00:22:18,720 --> 00:22:19,760
higher

569
00:22:19,760 --> 00:22:22,559
highest length of the message

570
00:22:22,559 --> 00:22:23,760
messages

571
00:22:23,760 --> 00:22:25,360
whenever the highest length of the

572
00:22:25,360 --> 00:22:27,360
messages is less than equal to the power

573
00:22:27,360 --> 00:22:28,880
n by four

574
00:22:28,880 --> 00:22:29,840
so

575
00:22:29,840 --> 00:22:33,039
uh these are all that we have done in

576
00:22:33,039 --> 00:22:34,159
the paper

577
00:22:34,159 --> 00:22:38,320
uh and thank we thank everyone for

578
00:22:38,320 --> 00:22:40,720
listening and watching the

579
00:22:40,720 --> 00:22:42,000
presentation

580
00:22:42,000 --> 00:22:45,640
thank you very much

