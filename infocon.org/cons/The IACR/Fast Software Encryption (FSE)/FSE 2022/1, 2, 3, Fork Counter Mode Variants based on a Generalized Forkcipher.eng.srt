1
00:00:02,399 --> 00:00:05,600
hello everyone this is amit i am a phd

2
00:00:05,600 --> 00:00:07,440
researcher in the classic group of cable

3
00:00:07,440 --> 00:00:08,960
level

4
00:00:08,960 --> 00:00:11,200
in this video i will be presenting our

5
00:00:11,200 --> 00:00:12,240
work

6
00:00:12,240 --> 00:00:15,679
of fsc 22 entitled one two three fork

7
00:00:15,679 --> 00:00:17,279
counter mode variants based on the

8
00:00:17,279 --> 00:00:19,760
generalized work cipher

9
00:00:19,760 --> 00:00:22,000
it is a joint work with elena andrewa

10
00:00:22,000 --> 00:00:24,960
diamond wizard and part pernil

11
00:00:24,960 --> 00:00:27,039
the overview of this presentation is as

12
00:00:27,039 --> 00:00:30,000
follows i will first briefly define and

13
00:00:30,000 --> 00:00:32,320
discuss about frog cipher and its

14
00:00:32,320 --> 00:00:34,719
generalization multi-folk cipher dubbed

15
00:00:34,719 --> 00:00:36,320
as mfc

16
00:00:36,320 --> 00:00:38,160
then we will do a recap of encryption

17
00:00:38,160 --> 00:00:41,280
modes specifically counter mode as we

18
00:00:41,280 --> 00:00:43,040
all know that counter mode is used in

19
00:00:43,040 --> 00:00:44,800
many applications

20
00:00:44,800 --> 00:00:46,800
ranging from random number generation

21
00:00:46,800 --> 00:00:49,039
a80 schemes to network security

22
00:00:49,039 --> 00:00:52,000
protocols like tls or ipsec

23
00:00:52,000 --> 00:00:53,680
clearly then it is a good target of

24
00:00:53,680 --> 00:00:55,760
research for further improvements in

25
00:00:55,760 --> 00:00:59,039
terms of both security and efficiency

26
00:00:59,039 --> 00:01:00,719
i will then define the generalization of

27
00:01:00,719 --> 00:01:03,760
counter mode dropped as gctr

28
00:01:03,760 --> 00:01:05,119
and will drive you through our

29
00:01:05,119 --> 00:01:07,280
exhaustive study of all possible simple

30
00:01:07,280 --> 00:01:09,600
gctr variants

31
00:01:09,600 --> 00:01:11,360
this includes existing counter like

32
00:01:11,360 --> 00:01:14,080
variants or counter like modes

33
00:01:14,080 --> 00:01:16,640
like counter in tweak counter dollar or

34
00:01:16,640 --> 00:01:19,920
the traditional counter mode itself

35
00:01:19,920 --> 00:01:22,080
later we will see an implication of this

36
00:01:22,080 --> 00:01:24,640
study in particular we will revisit the

37
00:01:24,640 --> 00:01:26,320
tweakable and ciphering scheme called

38
00:01:26,320 --> 00:01:28,720
thctr and we'll see the impact of

39
00:01:28,720 --> 00:01:31,040
poverty study on the claimed security of

40
00:01:31,040 --> 00:01:33,680
tctl

41
00:01:34,320 --> 00:01:36,320
i will then conclude the presentation

42
00:01:36,320 --> 00:01:39,040
with describing some use cases of gctr

43
00:01:39,040 --> 00:01:41,280
in practice and some open problems or

44
00:01:41,280 --> 00:01:45,280
possible directions for future research

45
00:01:45,520 --> 00:01:48,079
let's start

46
00:01:48,880 --> 00:01:50,720
so yeah foxhappen is a trick cable

47
00:01:50,720 --> 00:01:53,439
cipher that takes an input block m tweak

48
00:01:53,439 --> 00:01:56,960
t and key k as input and returns two

49
00:01:56,960 --> 00:01:59,360
output blocks c0 and c1 from the same

50
00:01:59,360 --> 00:02:02,560
space as the input m as output

51
00:02:02,560 --> 00:02:04,320
for cipher was introduced in a second

52
00:02:04,320 --> 00:02:08,399
2019 by andrew by the all and was also

53
00:02:08,399 --> 00:02:10,720
a second-round candidate of tesla with

54
00:02:10,720 --> 00:02:13,280
competition

55
00:02:13,920 --> 00:02:15,680
the security of folk cipher is defined

56
00:02:15,680 --> 00:02:17,840
by its indistinguishability from a pair

57
00:02:17,840 --> 00:02:19,760
of random permutations under chosen

58
00:02:19,760 --> 00:02:21,280
separate text attack

59
00:02:21,280 --> 00:02:24,160
this notion is interrupted as prtfp and

60
00:02:24,160 --> 00:02:26,720
the adversary advantage is informally

61
00:02:26,720 --> 00:02:29,520
defined here

62
00:02:30,080 --> 00:02:32,319
now a multiplex cipher can be seen as a

63
00:02:32,319 --> 00:02:34,319
generalization of work cipher in terms

64
00:02:34,319 --> 00:02:37,440
of number of outputs so instead of

65
00:02:37,440 --> 00:02:40,000
returning two output blocks a multiplex

66
00:02:40,000 --> 00:02:41,680
cipher will return

67
00:02:41,680 --> 00:02:44,239
as many output blocks where s is an

68
00:02:44,239 --> 00:02:46,560
external parameter that

69
00:02:46,560 --> 00:02:48,720
corresponds to the number of branches of

70
00:02:48,720 --> 00:02:51,680
multiplex cipher

71
00:02:51,680 --> 00:02:53,920
similarly the security of a multifox

72
00:02:53,920 --> 00:02:54,959
cipher

73
00:02:54,959 --> 00:02:56,879
is analogously defined by its

74
00:02:56,879 --> 00:02:58,480
indistinguishability

75
00:02:58,480 --> 00:03:01,120
from an s-tuple of random permutations

76
00:03:01,120 --> 00:03:03,360
under children's hypertext attack

77
00:03:03,360 --> 00:03:06,640
and the nursing is determined as prt mfp

78
00:03:06,640 --> 00:03:08,879
within the informal adverse advantage

79
00:03:08,879 --> 00:03:11,840
defined as here

80
00:03:12,000 --> 00:03:14,159
let us now talk about counter mode and

81
00:03:14,159 --> 00:03:16,560
its generalization dctr

82
00:03:16,560 --> 00:03:18,000
the traditional counter mode was

83
00:03:18,000 --> 00:03:20,720
introduced more than four decades ago

84
00:03:20,720 --> 00:03:22,080
it is a block cipher-based mode of

85
00:03:22,080 --> 00:03:24,319
operation and is also part of nis

86
00:03:24,319 --> 00:03:26,159
standards for block cipher encryption

87
00:03:26,159 --> 00:03:27,599
modes

88
00:03:27,599 --> 00:03:29,200
counter mode has quite many properties

89
00:03:29,200 --> 00:03:31,200
that makes it important or better your

90
00:03:31,200 --> 00:03:34,000
choice over other standards like cbc

91
00:03:34,000 --> 00:03:35,280
mode for example

92
00:03:35,280 --> 00:03:37,040
in certain settings

93
00:03:37,040 --> 00:03:39,360
so to exemplify let's have a look at the

94
00:03:39,360 --> 00:03:40,959
table

95
00:03:40,959 --> 00:03:43,120
if you see in this table you will find

96
00:03:43,120 --> 00:03:44,879
that counter mode can provide many

97
00:03:44,879 --> 00:03:46,879
additional properties like

98
00:03:46,879 --> 00:03:49,599
full parallel eligibility support

99
00:03:49,599 --> 00:03:52,319
or primitive industry decryption

100
00:03:52,319 --> 00:03:54,319
properties like pre-processing support

101
00:03:54,319 --> 00:03:56,159
or padding free encryption

102
00:03:56,159 --> 00:03:58,720
and many more

103
00:03:58,720 --> 00:04:00,879
this makes a counter mode a really good

104
00:04:00,879 --> 00:04:04,319
choice for encryption

105
00:04:04,720 --> 00:04:07,200
however i would like to point this out

106
00:04:07,200 --> 00:04:08,080
that

107
00:04:08,080 --> 00:04:10,480
although it provides so many

108
00:04:10,480 --> 00:04:11,760
good properties

109
00:04:11,760 --> 00:04:14,159
it can only provide birthday security

110
00:04:14,159 --> 00:04:16,798
which if put in a simple words means

111
00:04:16,798 --> 00:04:19,680
that for a block cipher like as128 one

112
00:04:19,680 --> 00:04:22,400
can only get a security of 64 bits and

113
00:04:22,400 --> 00:04:23,360
that is

114
00:04:23,360 --> 00:04:25,759
that is quite low and also that too only

115
00:04:25,759 --> 00:04:27,680
in non-suspecting setting that means

116
00:04:27,680 --> 00:04:29,360
when

117
00:04:29,360 --> 00:04:30,880
the non

118
00:04:30,880 --> 00:04:33,360
input of the counter mode is unique

119
00:04:33,360 --> 00:04:34,960
every time

120
00:04:34,960 --> 00:04:37,120
but 64 bit is not enough

121
00:04:37,120 --> 00:04:39,120
in our days in many applications and

122
00:04:39,120 --> 00:04:41,360
forcing or ensuring non-repetition is

123
00:04:41,360 --> 00:04:43,199
also not difficult

124
00:04:43,199 --> 00:04:45,840
in devices that are mobile or cheap or

125
00:04:45,840 --> 00:04:48,000
not well maintained for example iot

126
00:04:48,000 --> 00:04:51,280
devices small iot devices

127
00:04:51,280 --> 00:04:53,040
so the first question that comes in mind

128
00:04:53,040 --> 00:04:55,199
is can we come up with a

129
00:04:55,199 --> 00:04:57,520
with or some counter like modes that

130
00:04:57,520 --> 00:04:58,479
provide

131
00:04:58,479 --> 00:05:00,240
all these desired properties of counter

132
00:05:00,240 --> 00:05:02,400
but also add more in terms of both

133
00:05:02,400 --> 00:05:04,720
security and efficiency

134
00:05:04,720 --> 00:05:06,960
when an existing work of uh parents

135
00:05:06,960 --> 00:05:07,919
urine

136
00:05:07,919 --> 00:05:10,800
uh from crypto gives partial answer to

137
00:05:10,800 --> 00:05:12,639
this question by providing a counter

138
00:05:12,639 --> 00:05:15,039
like mode called countering tweak that

139
00:05:15,039 --> 00:05:17,440
is based on a treatable block cipher

140
00:05:17,440 --> 00:05:19,199
and improves the security of counter in

141
00:05:19,199 --> 00:05:20,400
some cases

142
00:05:20,400 --> 00:05:22,960
but in this work we target to fully

143
00:05:22,960 --> 00:05:25,360
answer this question by defining a

144
00:05:25,360 --> 00:05:27,199
generic counter mode based on multifox

145
00:05:27,199 --> 00:05:28,160
cipher

146
00:05:28,160 --> 00:05:29,680
and then performing an exhaustive

147
00:05:29,680 --> 00:05:32,240
analysis to filter out best counter-like

148
00:05:32,240 --> 00:05:33,199
modes

149
00:05:33,199 --> 00:05:34,880
that excel in both security and

150
00:05:34,880 --> 00:05:36,639
efficiency

151
00:05:36,639 --> 00:05:39,360
so in this slide i'll define gctr and

152
00:05:39,360 --> 00:05:41,680
simplify it to make it easier to

153
00:05:41,680 --> 00:05:44,000
understand or to compare it with counter

154
00:05:44,000 --> 00:05:45,440
mode

155
00:05:45,440 --> 00:05:47,759
so in this slide as you can see

156
00:05:47,759 --> 00:05:50,160
gctr can clearly be seen as a

157
00:05:50,160 --> 00:05:52,400
generalization of counter mode

158
00:05:52,400 --> 00:05:55,120
where the key stream is generated using

159
00:05:55,120 --> 00:05:58,319
a framework called tctr two cable ctr

160
00:05:58,319 --> 00:06:01,039
framework that takes two sequences one

161
00:06:01,039 --> 00:06:03,039
is the tweak sequence and other is a

162
00:06:03,039 --> 00:06:05,919
input sequence as input and gives a key

163
00:06:05,919 --> 00:06:08,720
stream v as output this key stream just

164
00:06:08,720 --> 00:06:10,880
like counter mode is then exerted the

165
00:06:10,880 --> 00:06:14,319
message to generate cipher text

166
00:06:14,319 --> 00:06:17,360
so if we zoom into the tctr framework

167
00:06:17,360 --> 00:06:19,039
this is how the digital server will look

168
00:06:19,039 --> 00:06:21,919
like it consists of multiple multi-folk

169
00:06:21,919 --> 00:06:23,440
cipher calls

170
00:06:23,440 --> 00:06:25,840
and the input to the tcg framework which

171
00:06:25,840 --> 00:06:29,120
is two sequences of inputs x and inputs

172
00:06:29,120 --> 00:06:31,520
to 2xt

173
00:06:31,520 --> 00:06:33,280
are separated and

174
00:06:33,280 --> 00:06:35,680
a block by block are used here

175
00:06:35,680 --> 00:06:38,240
for each multi-fold cipher call as their

176
00:06:38,240 --> 00:06:41,199
input and the tweak argument

177
00:06:41,199 --> 00:06:42,000
and

178
00:06:42,000 --> 00:06:43,520
are used to generate the corresponding

179
00:06:43,520 --> 00:06:46,240
outputs which are concatenated to

180
00:06:46,240 --> 00:06:48,720
generate the final key stream

181
00:06:48,720 --> 00:06:51,360
so going back to the main gtr mode we

182
00:06:51,360 --> 00:06:55,280
can simplify the mode like this

183
00:06:55,840 --> 00:06:57,759
so as you can see here

184
00:06:57,759 --> 00:07:00,560
it takes tweak sequence t and x gives an

185
00:07:00,560 --> 00:07:02,639
key stream v exert with methods m and

186
00:07:02,639 --> 00:07:04,240
gives cipher text c

187
00:07:04,240 --> 00:07:05,919
if you put in a box a message goes

188
00:07:05,919 --> 00:07:08,639
inside and ciphertext comes out here are

189
00:07:08,639 --> 00:07:10,800
the additional inputs and additional

190
00:07:10,800 --> 00:07:12,720
outputs so if there is a nonce used that

191
00:07:12,720 --> 00:07:15,120
goes with the input and if the internal

192
00:07:15,120 --> 00:07:17,120
randomness that is used to generate the

193
00:07:17,120 --> 00:07:18,639
ciphertext or to randomize the

194
00:07:18,639 --> 00:07:20,400
ciphertext let's say then that

195
00:07:20,400 --> 00:07:22,880
randomness is also required to

196
00:07:22,880 --> 00:07:25,599
be put as output so we have r here as

197
00:07:25,599 --> 00:07:28,720
the output so clearly these functions t

198
00:07:28,720 --> 00:07:30,720
uh the tweak function and the function

199
00:07:30,720 --> 00:07:32,160
for x

200
00:07:32,160 --> 00:07:34,880
the input function f x and f t

201
00:07:34,880 --> 00:07:36,080
are

202
00:07:36,080 --> 00:07:38,080
in in the simple cases

203
00:07:38,080 --> 00:07:40,639
will be generated using the remaining

204
00:07:40,639 --> 00:07:43,680
argument the remaining inputs like n or

205
00:07:43,680 --> 00:07:45,599
the internal elements r

206
00:07:45,599 --> 00:07:48,319
or some counter j

207
00:07:48,319 --> 00:07:50,680
we now define some rules to

208
00:07:50,680 --> 00:07:52,319
[Music]

209
00:07:52,319 --> 00:07:54,639
define these functions f x and f t

210
00:07:54,639 --> 00:07:56,240
efficiently

211
00:07:56,240 --> 00:07:59,120
we call them uh

212
00:08:00,000 --> 00:08:02,720
efficient gtr variants and these rules

213
00:08:02,720 --> 00:08:04,160
are basically just

214
00:08:04,160 --> 00:08:06,319
uh by saying that out of these three

215
00:08:06,319 --> 00:08:09,520
inputs as you can see n r and j

216
00:08:09,520 --> 00:08:12,160
uh this f t or f x can only be either a

217
00:08:12,160 --> 00:08:13,840
concatenation of any of these two

218
00:08:13,840 --> 00:08:15,039
arguments

219
00:08:15,039 --> 00:08:17,840
or an xor of them any of two arguments

220
00:08:17,840 --> 00:08:19,120
or

221
00:08:19,120 --> 00:08:21,039
a copy of either of those three

222
00:08:21,039 --> 00:08:23,360
arguments or just a constant functions

223
00:08:23,360 --> 00:08:25,520
could be zero or any constant which is

224
00:08:25,520 --> 00:08:28,960
independent of these three variables

225
00:08:28,960 --> 00:08:31,199
and the second rule is that if ft

226
00:08:31,199 --> 00:08:33,279
already has one of these three inputs f

227
00:08:33,279 --> 00:08:34,880
x is not allowed to have the same

228
00:08:34,880 --> 00:08:37,120
because that makes no sense it will not

229
00:08:37,120 --> 00:08:39,279
add anything in terms of security and

230
00:08:39,279 --> 00:08:42,640
either in efficiency so these two simple

231
00:08:42,640 --> 00:08:45,200
rules are good

232
00:08:45,200 --> 00:08:46,880
to

233
00:08:46,880 --> 00:08:49,360
filter out simple gctr variants or say

234
00:08:49,360 --> 00:08:51,839
efficient cti variants

235
00:08:51,839 --> 00:08:54,399
and if one calculate them we can see

236
00:08:54,399 --> 00:08:56,320
easily that there are total 36 possible

237
00:08:56,320 --> 00:08:59,920
variants that follows these two rules

238
00:08:59,920 --> 00:09:01,920
i would also like to note that

239
00:09:01,920 --> 00:09:04,560
these 36 variants the simple gcti

240
00:09:04,560 --> 00:09:06,000
variants also include the traditional

241
00:09:06,000 --> 00:09:08,160
encounter mode the counter dollar mode

242
00:09:08,160 --> 00:09:10,480
and also the counter in tweak mode

243
00:09:10,480 --> 00:09:13,200
from the work of parents urine

244
00:09:13,200 --> 00:09:15,920
let us now recall the security notion

245
00:09:15,920 --> 00:09:18,160
called knife security for encryption

246
00:09:18,160 --> 00:09:20,000
schemes that follow the syntax of

247
00:09:20,000 --> 00:09:22,800
nonsense iv based encryption this notion

248
00:09:22,800 --> 00:09:24,880
was introduced by parent and syrian

249
00:09:24,880 --> 00:09:27,200
crypto 2016 and it's the same notion

250
00:09:27,200 --> 00:09:28,640
that has been used

251
00:09:28,640 --> 00:09:32,000
for the analysis of content weak mode

252
00:09:32,000 --> 00:09:34,320
informally this notion says that

253
00:09:34,320 --> 00:09:36,560
an encryption scheme a naive encryption

254
00:09:36,560 --> 00:09:38,399
scheme that is announced an ib based

255
00:09:38,399 --> 00:09:40,880
ancestral scheme is

256
00:09:40,880 --> 00:09:42,800
nice secure if it is indistinguishable

257
00:09:42,800 --> 00:09:44,560
from a random function

258
00:09:44,560 --> 00:09:47,279
where the render function's output is uh

259
00:09:47,279 --> 00:09:48,880
variable and depends on the input

260
00:09:48,880 --> 00:09:51,120
message length

261
00:09:51,120 --> 00:09:52,240
here

262
00:09:52,240 --> 00:09:54,959
in the naive as you can see

263
00:09:54,959 --> 00:09:57,440
knives stands for non-respecting setting

264
00:09:57,440 --> 00:10:00,160
and i've stands for non-reusing so to

265
00:10:00,160 --> 00:10:02,240
combine them we use the bracket

266
00:10:02,240 --> 00:10:04,800
abbreviation

267
00:10:04,800 --> 00:10:06,720
in this work we have performed an

268
00:10:06,720 --> 00:10:10,160
exhaustive security analysis of all 36

269
00:10:10,160 --> 00:10:12,240
simple gctr variants

270
00:10:12,240 --> 00:10:14,880
under the knife security notion

271
00:10:14,880 --> 00:10:16,560
we have performed this security analysis

272
00:10:16,560 --> 00:10:19,440
using the tctr abstraction of the tctr

273
00:10:19,440 --> 00:10:22,000
framework app section and since the tctr

274
00:10:22,000 --> 00:10:24,000
framework is a generic framework that

275
00:10:24,000 --> 00:10:26,320
does not specify or say anything about

276
00:10:26,320 --> 00:10:28,240
the particular variant

277
00:10:28,240 --> 00:10:30,880
the proof is also generic and

278
00:10:30,880 --> 00:10:32,480
a complex so in a generic and compact

279
00:10:32,480 --> 00:10:33,680
proof we

280
00:10:33,680 --> 00:10:37,040
try to analyze all 36 modes

281
00:10:37,040 --> 00:10:39,120
our proof is based on pattern's edge

282
00:10:39,120 --> 00:10:40,800
coefficient technique

283
00:10:40,800 --> 00:10:42,160
and our results

284
00:10:42,160 --> 00:10:44,000
in a summary

285
00:10:44,000 --> 00:10:44,880
source

286
00:10:44,880 --> 00:10:46,959
as you can see here so that

287
00:10:46,959 --> 00:10:49,279
18 out of 36 modes are insecure under

288
00:10:49,279 --> 00:10:50,959
nice security nurses

289
00:10:50,959 --> 00:10:53,279
the remaining 18 are at least pretty

290
00:10:53,279 --> 00:10:55,600
secure which bounce better than counter

291
00:10:55,600 --> 00:10:57,040
mode so when i say better than counter

292
00:10:57,040 --> 00:10:59,120
mode their bounce has

293
00:10:59,120 --> 00:11:00,800
a terms that are

294
00:11:00,800 --> 00:11:05,920
that grows slower uh or are

295
00:11:05,920 --> 00:11:07,920
limitedly controlled by the adversary

296
00:11:07,920 --> 00:11:10,160
than the original counter mode

297
00:11:10,160 --> 00:11:11,680
and this origin counter mode is not

298
00:11:11,680 --> 00:11:13,680
included in these 18

299
00:11:13,680 --> 00:11:15,279
secure

300
00:11:15,279 --> 00:11:16,399
variants

301
00:11:16,399 --> 00:11:18,160
because counter mode does not provide uh

302
00:11:18,160 --> 00:11:19,760
security in

303
00:11:19,760 --> 00:11:21,839
non-serious settings so when i say 18

304
00:11:21,839 --> 00:11:26,560
secure modes they are secure under both

305
00:11:26,720 --> 00:11:28,959
non-suspecting and non-misusing setting

306
00:11:28,959 --> 00:11:30,720
with uh different degradations different

307
00:11:30,720 --> 00:11:32,959
security degrees

308
00:11:32,959 --> 00:11:34,800
and out of these 18

309
00:11:34,800 --> 00:11:36,560
secure variants there are three that are

310
00:11:36,560 --> 00:11:38,320
beyond birthday secure that means they

311
00:11:38,320 --> 00:11:39,680
provide security beyond the birthday

312
00:11:39,680 --> 00:11:40,880
bound

313
00:11:40,880 --> 00:11:42,720
they are namely ggchair one three and

314
00:11:42,720 --> 00:11:44,160
seven

315
00:11:44,160 --> 00:11:47,120
so for the following few slides let me

316
00:11:47,120 --> 00:11:49,839
uh get a bit more technical

317
00:11:49,839 --> 00:11:52,320
or so to say more formal to build up the

318
00:11:52,320 --> 00:11:54,079
stage for our

319
00:11:54,079 --> 00:11:57,040
uh found results and don't worry after

320
00:11:57,040 --> 00:11:58,959
describing the formal results i will

321
00:11:58,959 --> 00:12:00,880
briefly also explain what they actually

322
00:12:00,880 --> 00:12:01,839
mean

323
00:12:01,839 --> 00:12:04,320
in practice

324
00:12:04,320 --> 00:12:06,240
so you can see here um the first

325
00:12:06,240 --> 00:12:07,519
expression here

326
00:12:07,519 --> 00:12:08,480
shows

327
00:12:08,480 --> 00:12:11,040
the adversary advances an addressee that

328
00:12:11,040 --> 00:12:12,560
is uh

329
00:12:12,560 --> 00:12:14,720
trying to break the knife security of

330
00:12:14,720 --> 00:12:17,680
gcti variant let's call it gctrz where z

331
00:12:17,680 --> 00:12:18,959
is the name of the variant and the

332
00:12:18,959 --> 00:12:20,720
number of the variant

333
00:12:20,720 --> 00:12:21,519
and

334
00:12:21,519 --> 00:12:23,440
for the adversary we are trying to upper

335
00:12:23,440 --> 00:12:25,760
bound this address advantage

336
00:12:25,760 --> 00:12:27,360
of breaking the knife security of that

337
00:12:27,360 --> 00:12:29,440
variant and the advantage is upper

338
00:12:29,440 --> 00:12:33,120
bounded by two terms the first is the

339
00:12:33,120 --> 00:12:35,040
term that refers to the pseudo-random

340
00:12:35,040 --> 00:12:36,880
two cable multi-fold permutation

341
00:12:36,880 --> 00:12:38,959
security of the underlying multifrog

342
00:12:38,959 --> 00:12:40,160
cipher

343
00:12:40,160 --> 00:12:42,959
uh and an additional degradation that

344
00:12:42,959 --> 00:12:45,279
comes from the mode the gctr mode itself

345
00:12:45,279 --> 00:12:47,440
so this degree doesn't very varied by

346
00:12:47,440 --> 00:12:48,720
variant

347
00:12:48,720 --> 00:12:50,639
so now in the small table below you can

348
00:12:50,639 --> 00:12:53,360
see the beyond birthday bound security

349
00:12:53,360 --> 00:12:55,920
cetera variants with their corresponding

350
00:12:55,920 --> 00:12:58,160
functions ft like how the tweaks are

351
00:12:58,160 --> 00:13:00,079
defined for the underlying tctr

352
00:13:00,079 --> 00:13:03,040
framework function fx the input sequence

353
00:13:03,040 --> 00:13:05,360
are defined for the underlying tweakable

354
00:13:05,360 --> 00:13:08,240
ctr framework the degradation when x is

355
00:13:08,240 --> 00:13:11,040
one that is when non is uh

356
00:13:11,040 --> 00:13:13,040
always unique that is not respecting

357
00:13:13,040 --> 00:13:14,480
setting

358
00:13:14,480 --> 00:13:16,880
for example applications where nonce is

359
00:13:16,880 --> 00:13:18,880
defined as the state which is maintained

360
00:13:18,880 --> 00:13:22,399
and ncr is unique every time or

361
00:13:22,399 --> 00:13:24,880
announce is somehow ensured to be unique

362
00:13:24,880 --> 00:13:27,040
and the last column is for cases where

363
00:13:27,040 --> 00:13:29,760
nonce is misused or

364
00:13:29,760 --> 00:13:34,000
um reused or forced to be reused and the

365
00:13:34,000 --> 00:13:35,920
degradation corresponds to the

366
00:13:35,920 --> 00:13:37,200
security of

367
00:13:37,200 --> 00:13:38,720
that corresponding variant under

368
00:13:38,720 --> 00:13:41,760
non-smith setting

369
00:13:41,760 --> 00:13:43,199
clearly the security in the

370
00:13:43,199 --> 00:13:46,000
non-respecting setting is better

371
00:13:46,000 --> 00:13:48,800
than non-misuse setting for energy

372
00:13:48,800 --> 00:13:51,040
detail variants or to put it in the

373
00:13:51,040 --> 00:13:52,079
other way

374
00:13:52,079 --> 00:13:54,160
the adversarial advantage of breaking

375
00:13:54,160 --> 00:13:55,920
the knife security of energy state

376
00:13:55,920 --> 00:13:58,959
variant is lower in non-respecting

377
00:13:58,959 --> 00:14:02,920
setting than in non-smith-setting

378
00:14:02,959 --> 00:14:06,800
but more concretely if you see here

379
00:14:06,800 --> 00:14:08,480
yeah if you see here

380
00:14:08,480 --> 00:14:10,720
the highlighted column shows that when

381
00:14:10,720 --> 00:14:12,720
nonce is misused even when nonce is

382
00:14:12,720 --> 00:14:16,160
misused gctr3 can provide security which

383
00:14:16,160 --> 00:14:18,480
is higher than birthday bound if you see

384
00:14:18,480 --> 00:14:20,880
it's uh that the bounce shows that the

385
00:14:20,880 --> 00:14:23,839
security is in birthday of n plus t and

386
00:14:23,839 --> 00:14:26,560
if t is quite large or non zero let's

387
00:14:26,560 --> 00:14:29,360
say then the security could be uh

388
00:14:29,360 --> 00:14:31,360
birthday n

389
00:14:31,360 --> 00:14:34,399
and uh on the other hand when the nonce

390
00:14:34,399 --> 00:14:36,480
is uh respected by that you see that is

391
00:14:36,480 --> 00:14:38,639
the nonsense unique every time

392
00:14:38,639 --> 00:14:41,440
uh gta 7 gives information theoretic

393
00:14:41,440 --> 00:14:46,079
security for for general counter mode

394
00:14:46,079 --> 00:14:48,399
which means uh that is which means that

395
00:14:48,399 --> 00:14:51,360
the dj7 has no additional degradation

396
00:14:51,360 --> 00:14:52,720
then whatever that comes from the

397
00:14:52,720 --> 00:14:54,320
underlying primitive

398
00:14:54,320 --> 00:14:57,440
primitives prtmf security

399
00:14:57,440 --> 00:15:00,560
it additionally if you see to the last

400
00:15:00,560 --> 00:15:03,839
row in this slide that's gctr20

401
00:15:03,839 --> 00:15:06,160
uh a person who knows counter mode can

402
00:15:06,160 --> 00:15:07,680
easily see that this is just the counter

403
00:15:07,680 --> 00:15:09,920
mode with when s is equal to one that is

404
00:15:09,920 --> 00:15:11,279
when

405
00:15:11,279 --> 00:15:12,720
the underlying

406
00:15:12,720 --> 00:15:16,399
multi-folk cipher is

407
00:15:16,800 --> 00:15:18,560
associated with s equal to one that is

408
00:15:18,560 --> 00:15:20,560
kind of a two cable block cipher with

409
00:15:20,560 --> 00:15:23,040
tweak fixed to gamma gamma could be any

410
00:15:23,040 --> 00:15:25,440
constant let's fix it to zero then we

411
00:15:25,440 --> 00:15:27,440
get the counter mode

412
00:15:27,440 --> 00:15:29,440
and counter mode is insecure in

413
00:15:29,440 --> 00:15:31,680
announcement setting but gives you about

414
00:15:31,680 --> 00:15:34,000
the security in non-suspecting setting

415
00:15:34,000 --> 00:15:36,000
and clearly the other variants are

416
00:15:36,000 --> 00:15:38,000
better than counter mode although that

417
00:15:38,000 --> 00:15:39,680
is just but the security they have

418
00:15:39,680 --> 00:15:41,040
bounds that are

419
00:15:41,040 --> 00:15:44,639
not as uh they don't grow as fast as a

420
00:15:44,639 --> 00:15:46,800
counter mode

421
00:15:46,800 --> 00:15:48,639
these plots shows the adversarial

422
00:15:48,639 --> 00:15:51,519
advantage as functions of the number of

423
00:15:51,519 --> 00:15:53,519
block wires made by the adversary or the

424
00:15:53,519 --> 00:15:56,240
number of maximum non-reputations

425
00:15:56,240 --> 00:15:58,800
used by the adversary

426
00:15:58,800 --> 00:16:01,600
you can see this plot as a visualization

427
00:16:01,600 --> 00:16:03,360
of the data that i showed before in

428
00:16:03,360 --> 00:16:05,120
tables

429
00:16:05,120 --> 00:16:07,360
so the first plot here the plot a

430
00:16:07,360 --> 00:16:10,639
basically uh shows that when uh the

431
00:16:10,639 --> 00:16:13,360
setting is not suspecting x equal to one

432
00:16:13,360 --> 00:16:14,800
that is when addressing is not allowed

433
00:16:14,800 --> 00:16:17,199
to repeat the nouns gta 7 has no

434
00:16:17,199 --> 00:16:18,720
additional degradation

435
00:16:18,720 --> 00:16:22,320
as you can see here the the ctr 7 a

436
00:16:22,320 --> 00:16:23,680
curve is

437
00:16:23,680 --> 00:16:25,680
a straight line parallel to x axis never

438
00:16:25,680 --> 00:16:27,519
meets the x axis

439
00:16:27,519 --> 00:16:29,680
so whatever number of

440
00:16:29,680 --> 00:16:31,600
block quality makes

441
00:16:31,600 --> 00:16:34,160
it can never get any

442
00:16:34,160 --> 00:16:35,680
high advantage

443
00:16:35,680 --> 00:16:37,680
however for this counter mode and zeta 3

444
00:16:37,680 --> 00:16:39,600
this is not the case and they are an

445
00:16:39,600 --> 00:16:41,519
upper bound on number of queries after

446
00:16:41,519 --> 00:16:44,240
which the adversary can break the scheme

447
00:16:44,240 --> 00:16:47,120
but we can note that for digital 3 this

448
00:16:47,120 --> 00:16:49,360
number of queries this number of block

449
00:16:49,360 --> 00:16:51,839
qualities is very high

450
00:16:51,839 --> 00:16:55,040
and that explains that in non-suspecting

451
00:16:55,040 --> 00:16:57,920
setting uh gctr3 gives you higher

452
00:16:57,920 --> 00:17:00,399
security than this counter mode and and

453
00:17:00,399 --> 00:17:02,560
and to be concrete it's a beyond but the

454
00:17:02,560 --> 00:17:05,760
security even up to uh

455
00:17:05,760 --> 00:17:07,919
full and bit security

456
00:17:07,919 --> 00:17:09,679
and depending on the tweak size

457
00:17:09,679 --> 00:17:12,799
if you see plot b where uh we set x eq

458
00:17:12,799 --> 00:17:14,400
to not equal to one to be something

459
00:17:14,400 --> 00:17:16,240
larger than one that is when the nonce

460
00:17:16,240 --> 00:17:18,079
can be misused this is a moderate case

461
00:17:18,079 --> 00:17:20,720
where nonc is misused to true sigma many

462
00:17:20,720 --> 00:17:22,720
times where sigma is the number of block

463
00:17:22,720 --> 00:17:23,760
queries

464
00:17:23,760 --> 00:17:26,400
then you can see even if nonce is

465
00:17:26,400 --> 00:17:29,360
misused for one more time like like x is

466
00:17:29,360 --> 00:17:30,880
equal to two

467
00:17:30,880 --> 00:17:32,960
the security degradation uh the

468
00:17:32,960 --> 00:17:34,880
additional degradation for for digital

469
00:17:34,880 --> 00:17:35,840
seven

470
00:17:35,840 --> 00:17:37,039
is uh

471
00:17:37,039 --> 00:17:39,360
is high and the share seven security

472
00:17:39,360 --> 00:17:41,760
comes down to birthday in n you can see

473
00:17:41,760 --> 00:17:43,200
here and that's the same case for

474
00:17:43,200 --> 00:17:44,880
digital three as well when the tweak

475
00:17:44,880 --> 00:17:46,000
size is

476
00:17:46,000 --> 00:17:47,440
up to n bits

477
00:17:47,440 --> 00:17:49,360
but for for larger tweaks we can still

478
00:17:49,360 --> 00:17:51,840
get higher security with gctr3

479
00:17:51,840 --> 00:17:54,559
the last plot plot c here shows the

480
00:17:54,559 --> 00:17:56,799
address advantage as a function of

481
00:17:56,799 --> 00:17:59,039
maximum number of noise repetitions

482
00:17:59,039 --> 00:18:01,280
used by the adversary and we can see for

483
00:18:01,280 --> 00:18:03,120
a higher number of precipitations the

484
00:18:03,120 --> 00:18:04,480
security degrades

485
00:18:04,480 --> 00:18:07,760
uh faster and

486
00:18:07,760 --> 00:18:10,880
even with even with that the g603 with

487
00:18:10,880 --> 00:18:14,000
higher tweak with larger tweak size we

488
00:18:14,000 --> 00:18:16,320
get uh a better uh

489
00:18:16,320 --> 00:18:17,600
security

490
00:18:17,600 --> 00:18:20,400
degradation security degree is slower

491
00:18:20,400 --> 00:18:23,520
than the other variants

492
00:18:23,679 --> 00:18:27,039
so to summarize we can say that gctr7 is

493
00:18:27,039 --> 00:18:29,760
the best gctr variant best simple gctr

494
00:18:29,760 --> 00:18:30,720
variant

495
00:18:30,720 --> 00:18:32,880
in terms of security

496
00:18:32,880 --> 00:18:34,880
for non-stress spectrum setting despite

497
00:18:34,880 --> 00:18:37,360
of whatever the tweak size is and also

498
00:18:37,360 --> 00:18:39,679
for non-smith setting but when the tweak

499
00:18:39,679 --> 00:18:42,080
side is either upper bounded by n or if

500
00:18:42,080 --> 00:18:44,799
it's beyond n then the number of maximum

501
00:18:44,799 --> 00:18:46,640
nonce repetitions allowed for the

502
00:18:46,640 --> 00:18:48,400
adversary is upper bounded by this term

503
00:18:48,400 --> 00:18:50,640
here where sigma is the number of block

504
00:18:50,640 --> 00:18:52,640
wise the number of multifunctional

505
00:18:52,640 --> 00:18:54,400
requires and the q is the number of

506
00:18:54,400 --> 00:18:55,600
message squared queries made by the

507
00:18:55,600 --> 00:18:57,120
address very

508
00:18:57,120 --> 00:18:59,840
and otherwise gtr 3 is the best gctr

509
00:18:59,840 --> 00:19:02,799
variant in terms of security

510
00:19:02,799 --> 00:19:04,880
i would also like to point out that ctr

511
00:19:04,880 --> 00:19:07,919
3 when instantiated with s equal to 1

512
00:19:07,919 --> 00:19:10,080
that is the underlying mfc instantiated

513
00:19:10,080 --> 00:19:12,640
with a two cable block cipher reduces to

514
00:19:12,640 --> 00:19:14,480
counter in tweak mode

515
00:19:14,480 --> 00:19:16,559
however our generic proof provides

516
00:19:16,559 --> 00:19:18,720
security bound that improves upon the

517
00:19:18,720 --> 00:19:20,799
original counterintuit bound

518
00:19:20,799 --> 00:19:23,200
and in particular it improves the

519
00:19:23,200 --> 00:19:25,440
original bound from

520
00:19:25,440 --> 00:19:28,160
being in order of sigma square to an

521
00:19:28,160 --> 00:19:30,240
order of q sigma

522
00:19:30,240 --> 00:19:32,240
which says that counterintuit provides

523
00:19:32,240 --> 00:19:34,080
stronger security guarantees than what

524
00:19:34,080 --> 00:19:35,840
has been cleared in original

525
00:19:35,840 --> 00:19:37,440
paper

526
00:19:37,440 --> 00:19:39,520
more concretely it says when average

527
00:19:39,520 --> 00:19:41,440
message length is longer counter entry

528
00:19:41,440 --> 00:19:44,640
can provide higher security guarantee

529
00:19:44,640 --> 00:19:46,640
let us now look at an implication of

530
00:19:46,640 --> 00:19:47,919
this work

531
00:19:47,919 --> 00:19:50,160
also to say an observation as an

532
00:19:50,160 --> 00:19:53,360
consequence of this gctr work and the

533
00:19:53,360 --> 00:19:55,280
generic security analysis

534
00:19:55,280 --> 00:19:57,120
to applications that use the counter

535
00:19:57,120 --> 00:19:58,880
like component inside to achieve

536
00:19:58,880 --> 00:20:00,799
something greater

537
00:20:00,799 --> 00:20:03,600
in particular we target this enciphering

538
00:20:03,600 --> 00:20:06,960
scheme called two cable sctr thctr

539
00:20:06,960 --> 00:20:09,120
which claims to be a beyond birthday

540
00:20:09,120 --> 00:20:12,000
bond secure tsprp

541
00:20:12,000 --> 00:20:13,280
scheme

542
00:20:13,280 --> 00:20:14,720
however uh

543
00:20:14,720 --> 00:20:17,840
after a careful look we realized that uh

544
00:20:17,840 --> 00:20:21,760
it uses a counter like component that

545
00:20:21,760 --> 00:20:24,880
looks like the gctr4 variant from the 36

546
00:20:24,880 --> 00:20:25,919
uh

547
00:20:25,919 --> 00:20:27,360
simple variance

548
00:20:27,360 --> 00:20:29,520
that has been analyzed in our work and

549
00:20:29,520 --> 00:20:32,799
gctr4 as you know are has been only been

550
00:20:32,799 --> 00:20:36,159
shown but secure

551
00:20:36,159 --> 00:20:38,559
we investigated this inconsistency and

552
00:20:38,559 --> 00:20:40,559
realized that the sctr's beyond words

553
00:20:40,559 --> 00:20:43,360
about security claims are incorrect

554
00:20:43,360 --> 00:20:45,440
more specifically the bottleneck of the

555
00:20:45,440 --> 00:20:47,919
security degradation is the gctr4 like

556
00:20:47,919 --> 00:20:50,400
component that is used internally by the

557
00:20:50,400 --> 00:20:51,679
ctr

558
00:20:51,679 --> 00:20:53,440
we also provide a birthday bond attack

559
00:20:53,440 --> 00:20:56,159
to invalidate the current pound of tsctr

560
00:20:56,159 --> 00:20:58,320
and point to the exact flaw the exit pad

561
00:20:58,320 --> 00:21:00,320
kit analysis in the security proof of

562
00:21:00,320 --> 00:21:02,640
tia ctr

563
00:21:02,640 --> 00:21:05,760
an easy fix to uh this

564
00:21:05,760 --> 00:21:08,880
gap could be replacing the gsctr gctr4

565
00:21:08,880 --> 00:21:12,960
like component by gctr3 or gctr7 to get

566
00:21:12,960 --> 00:21:16,240
the beyond birthday bond security

567
00:21:16,240 --> 00:21:18,559
as i described earlier that security was

568
00:21:18,559 --> 00:21:20,960
the not only concern and security and

569
00:21:20,960 --> 00:21:23,840
efficiency both were together targeted

570
00:21:23,840 --> 00:21:26,240
uh with mmc in mind

571
00:21:26,240 --> 00:21:29,280
mmc itself due to its expanding nature

572
00:21:29,280 --> 00:21:30,400
will bring

573
00:21:30,400 --> 00:21:32,720
speed up to the

574
00:21:32,720 --> 00:21:35,200
cipher evaluation and hence could also

575
00:21:35,200 --> 00:21:37,200
bring speed up to the whole mode

576
00:21:37,200 --> 00:21:38,720
evaluation

577
00:21:38,720 --> 00:21:40,799
in this slide we provide the efficiency

578
00:21:40,799 --> 00:21:43,760
comparison of gctr mode with the other

579
00:21:43,760 --> 00:21:45,760
counter alike modes like counter mode

580
00:21:45,760 --> 00:21:48,640
itself or the counter in tweak mode

581
00:21:48,640 --> 00:21:52,159
for gctr we instantiated it s equal to 2

582
00:21:52,159 --> 00:21:55,200
because the only mfc in statism is fork

583
00:21:55,200 --> 00:21:56,240
cipher

584
00:21:56,240 --> 00:21:59,280
with two outputs and the first level we

585
00:21:59,280 --> 00:22:02,159
instantiate with fork skinny

586
00:22:02,159 --> 00:22:04,320
and you can see in this plot

587
00:22:04,320 --> 00:22:05,120
that

588
00:22:05,120 --> 00:22:07,120
the for the y-axis where the number of

589
00:22:07,120 --> 00:22:09,440
rounds required are shown to process the

590
00:22:09,440 --> 00:22:12,000
number of queried bytes on x-axis this

591
00:22:12,000 --> 00:22:14,480
dct-r mode performs quite better than

592
00:22:14,480 --> 00:22:15,760
the other two

593
00:22:15,760 --> 00:22:17,360
where the other two counter and counter

594
00:22:17,360 --> 00:22:19,280
and tweak mode are associated with

595
00:22:19,280 --> 00:22:21,200
skinny

596
00:22:21,200 --> 00:22:22,559
and

597
00:22:22,559 --> 00:22:24,480
more specifically

598
00:22:24,480 --> 00:22:26,159
the red line shows that the ctr mode

599
00:22:26,159 --> 00:22:28,640
requires fewer number of rounds to

600
00:22:28,640 --> 00:22:30,240
process a particular number of queried

601
00:22:30,240 --> 00:22:33,919
bytes than the other two and in numbers

602
00:22:33,919 --> 00:22:36,799
gctr is provides at least 20 percent of

603
00:22:36,799 --> 00:22:38,159
speed up

604
00:22:38,159 --> 00:22:41,360
than the other two i'd like to point out

605
00:22:41,360 --> 00:22:43,840
that this speed up of 20

606
00:22:43,840 --> 00:22:46,240
or in general the speed up is uh

607
00:22:46,240 --> 00:22:47,120
uh

608
00:22:47,120 --> 00:22:49,280
not specific to a gcti variant it's the

609
00:22:49,280 --> 00:22:51,039
same for all cta variant and because

610
00:22:51,039 --> 00:22:54,720
they all follow the same tctr framework

611
00:22:54,720 --> 00:22:57,280
so to summarize in this work we have

612
00:22:57,280 --> 00:22:59,280
represented a generic counter mode over

613
00:22:59,280 --> 00:23:01,039
the abstraction of multi-folk cipher

614
00:23:01,039 --> 00:23:03,280
that provides all desirable properties

615
00:23:03,280 --> 00:23:06,559
of counter mode but with some extra

616
00:23:06,559 --> 00:23:08,320
that in terms of both security and

617
00:23:08,320 --> 00:23:10,640
efficiency to enumerate in terms of

618
00:23:10,640 --> 00:23:12,880
security we get the security against

619
00:23:12,880 --> 00:23:16,080
non-misuse misusing adversaries or a

620
00:23:16,080 --> 00:23:17,760
security bounds beyond the birthday

621
00:23:17,760 --> 00:23:19,600
barrier or

622
00:23:19,600 --> 00:23:22,159
sometimes the full ambit security and in

623
00:23:22,159 --> 00:23:25,200
terms of efficiency particular to

624
00:23:25,200 --> 00:23:28,799
gcdr associated with mfc s equal to two

625
00:23:28,799 --> 00:23:31,840
fork cipher with fork skinny we get

626
00:23:31,840 --> 00:23:35,360
a efficiency gain of at least 20

627
00:23:35,360 --> 00:23:36,960
when compared with counter or counter

628
00:23:36,960 --> 00:23:39,200
and tweak mode instantiated with uh two

629
00:23:39,200 --> 00:23:42,400
cable blocks after screening

630
00:23:42,480 --> 00:23:44,960
let us now talk about uh some use cases

631
00:23:44,960 --> 00:23:47,279
of generic counter mode in practice

632
00:23:47,279 --> 00:23:48,559
there are various ways the general

633
00:23:48,559 --> 00:23:50,720
counter mode can be used and the two of

634
00:23:50,720 --> 00:23:52,720
two important of them are

635
00:23:52,720 --> 00:23:56,000
as follows the first one is when

636
00:23:56,000 --> 00:23:58,880
an application requires only encryption

637
00:23:58,880 --> 00:24:00,720
and announced misused resistance is

638
00:24:00,720 --> 00:24:02,159
desirable there

639
00:24:02,159 --> 00:24:04,720
to exemplify consider microcontrollers

640
00:24:04,720 --> 00:24:07,120
that are embedded with two random number

641
00:24:07,120 --> 00:24:10,240
generators but with constrained rams and

642
00:24:10,240 --> 00:24:12,080
they want to stream sensor data and they

643
00:24:12,080 --> 00:24:15,360
have a disposability of nonce repetition

644
00:24:15,360 --> 00:24:16,799
and there we need

645
00:24:16,799 --> 00:24:18,559
an encryption scheme that can provide

646
00:24:18,559 --> 00:24:20,880
non-special resistance so gctl can fit

647
00:24:20,880 --> 00:24:21,760
there

648
00:24:21,760 --> 00:24:23,520
and this data can also be used as

649
00:24:23,520 --> 00:24:25,760
building blocks to large crypto systems

650
00:24:25,760 --> 00:24:28,480
as we already saw uh in the example of

651
00:24:28,480 --> 00:24:30,480
the enciphering scheme tsctr and also

652
00:24:30,480 --> 00:24:33,760
there are 80 schemes that are based on

653
00:24:33,760 --> 00:24:35,600
either the composition paradigm of

654
00:24:35,600 --> 00:24:38,080
encrypt then mac or the synthetic io

655
00:24:38,080 --> 00:24:39,679
setting like sct

656
00:24:39,679 --> 00:24:42,080
that uses an encryption scheme inside so

657
00:24:42,080 --> 00:24:44,000
tc check can be a useful

658
00:24:44,000 --> 00:24:45,919
component there that provides beyond

659
00:24:45,919 --> 00:24:48,960
broadband security

660
00:24:49,520 --> 00:24:51,600
i would also like to point out that as

661
00:24:51,600 --> 00:24:54,159
we know gctr gives better security and

662
00:24:54,159 --> 00:24:55,840
efficiency when compared with counter

663
00:24:55,840 --> 00:24:58,799
mode but it requires slightly larger

664
00:24:58,799 --> 00:25:00,559
bandwidth and and

665
00:25:00,559 --> 00:25:02,000
that is because

666
00:25:02,000 --> 00:25:03,200
of uh

667
00:25:03,200 --> 00:25:05,760
processing both nonce and iv

668
00:25:05,760 --> 00:25:08,720
but in applications uh where the counter

669
00:25:08,720 --> 00:25:11,440
like mode is used as a building block

670
00:25:11,440 --> 00:25:14,320
and the iv part is sometimes generated

671
00:25:14,320 --> 00:25:16,559
internally using the input

672
00:25:16,559 --> 00:25:18,640
we call it a synthetic iv

673
00:25:18,640 --> 00:25:20,720
this extra bandwidth and randomness cost

674
00:25:20,720 --> 00:25:23,200
of gtr can be avoided easily and we can

675
00:25:23,200 --> 00:25:24,720
get

676
00:25:24,720 --> 00:25:26,640
the security and efficiency advantage of

677
00:25:26,640 --> 00:25:28,640
zgtr without paying this cost of extra

678
00:25:28,640 --> 00:25:31,039
bandwidth

679
00:25:31,039 --> 00:25:32,720
i would now like to point out some

680
00:25:32,720 --> 00:25:34,960
possible future research directions and

681
00:25:34,960 --> 00:25:36,320
open problems

682
00:25:36,320 --> 00:25:38,000
that are raised

683
00:25:38,000 --> 00:25:41,279
and are left open by this research work

684
00:25:41,279 --> 00:25:43,840
the first one would be to design new

685
00:25:43,840 --> 00:25:45,919
secure and efficient fork ciphers and

686
00:25:45,919 --> 00:25:48,400
multi-fold ciphers with branches at

687
00:25:48,400 --> 00:25:50,240
least two

688
00:25:50,240 --> 00:25:52,400
this could be considered as a as a good

689
00:25:52,400 --> 00:25:53,760
opportunity

690
00:25:53,760 --> 00:25:57,600
in crypto community after seeing

691
00:25:57,600 --> 00:25:59,279
the versatile structure or nature of

692
00:25:59,279 --> 00:26:01,840
multiflox cipher as it can be used to

693
00:26:01,840 --> 00:26:04,400
improve security and efficiency both in

694
00:26:04,400 --> 00:26:07,039
certain symmetric modes

695
00:26:07,039 --> 00:26:09,279
and with that being said the second

696
00:26:09,279 --> 00:26:11,520
possible recent direction could be

697
00:26:11,520 --> 00:26:13,679
designing novel multifox cipher-based

698
00:26:13,679 --> 00:26:16,880
modes that are not limited to the use

699
00:26:16,880 --> 00:26:18,640
cases of encryption or authenticary

700
00:26:18,640 --> 00:26:20,799
encryption but can also be used in

701
00:26:20,799 --> 00:26:23,360
various other security settings

702
00:26:23,360 --> 00:26:24,960
there are certain preliminary results

703
00:26:24,960 --> 00:26:29,200
that shows that multifox ciphers can be

704
00:26:29,200 --> 00:26:32,559
good to be used in max or used for

705
00:26:32,559 --> 00:26:35,360
randomness extraction as well as for

706
00:26:35,360 --> 00:26:37,520
some privacy preserving applications

707
00:26:37,520 --> 00:26:39,360
with such good open problems being

708
00:26:39,360 --> 00:26:41,120
stated we are at the end of this

709
00:26:41,120 --> 00:26:42,720
presentation

710
00:26:42,720 --> 00:26:45,039
thank you for listening to this video of

711
00:26:45,039 --> 00:26:48,159
our work may the fork be with you all

712
00:26:48,159 --> 00:26:51,159
bye

