1
00:00:00,640 --> 00:00:02,159
welcome to our presentation of highly

2
00:00:02,159 --> 00:00:04,400
secure non-spaced max from the sum of

3
00:00:04,400 --> 00:00:06,480
tweakable block ciphers this is a joint

4
00:00:06,480 --> 00:00:09,040
work by once choi pyeong hakli and jo

5
00:00:09,040 --> 00:00:11,679
yong li from the south korean kaist

6
00:00:11,679 --> 00:00:14,639
akiku inua and kasuku minamatsu from nec

7
00:00:14,639 --> 00:00:18,080
and yusuknito from mitsubishi electric

8
00:00:18,080 --> 00:00:19,439
message authentication codes are

9
00:00:19,439 --> 00:00:21,279
symmetric key algorithms to provide

10
00:00:21,279 --> 00:00:23,519
authenticity for messages for this

11
00:00:23,519 --> 00:00:26,560
purpose high efficiency high security

12
00:00:26,560 --> 00:00:28,840
and non-misuse resistance are

13
00:00:28,840 --> 00:00:31,359
desirable high efficiency of course

14
00:00:31,359 --> 00:00:33,520
helps reduce the computational effort

15
00:00:33,520 --> 00:00:35,840
high security guarantees allow designers

16
00:00:35,840 --> 00:00:37,600
to lower the primitive size

17
00:00:37,600 --> 00:00:40,000
moreover if nances are present they're

18
00:00:40,000 --> 00:00:42,000
an easy and effective means to extend

19
00:00:42,000 --> 00:00:43,760
the security guarantees

20
00:00:43,760 --> 00:00:46,800
however nonsense may repeat accidentally

21
00:00:46,800 --> 00:00:49,120
during the use then the study of the

22
00:00:49,120 --> 00:00:51,120
security degradation when nonsense

23
00:00:51,120 --> 00:00:54,239
repeat becomes important

24
00:00:54,239 --> 00:00:56,000
the combination of universal hashing

25
00:00:56,000 --> 00:00:57,920
with a few calls to a block cipher for

26
00:00:57,920 --> 00:00:59,760
producing a pseudorandom output is well

27
00:00:59,760 --> 00:01:02,160
known for its high efficiency

28
00:01:02,160 --> 00:01:04,319
these construction includes for example

29
00:01:04,319 --> 00:01:07,439
a well-known hashden prf construction or

30
00:01:07,439 --> 00:01:10,640
the wegman carter shoop

31
00:01:10,640 --> 00:01:12,960
trigger block ciphers are also well

32
00:01:12,960 --> 00:01:15,840
suited for achieving these goals

33
00:01:15,840 --> 00:01:17,600
even small tweaks can already help

34
00:01:17,600 --> 00:01:19,520
designers to achieve that independent

35
00:01:19,520 --> 00:01:22,000
calls to different permutations even

36
00:01:22,000 --> 00:01:24,560
small tweaks already help to achieve

37
00:01:24,560 --> 00:01:26,560
independency of the different

38
00:01:26,560 --> 00:01:28,960
permutations that are used in a scheme

39
00:01:28,960 --> 00:01:31,439
this can provide clean designs with easy

40
00:01:31,439 --> 00:01:33,360
domain separation

41
00:01:33,360 --> 00:01:35,360
larger tweaks can be used additionally

42
00:01:35,360 --> 00:01:37,759
to possess either more message input or

43
00:01:37,759 --> 00:01:40,960
to take the nons for higher security

44
00:01:40,960 --> 00:01:44,479
at fse 2017 koyati at al presented four

45
00:01:44,479 --> 00:01:46,880
elegant non-spaced macs from universal

46
00:01:46,880 --> 00:01:49,360
hashing and a single block cipher call

47
00:01:49,360 --> 00:01:51,040
two constructions possessed high

48
00:01:51,040 --> 00:01:52,960
security and employed a tweakable block

49
00:01:52,960 --> 00:01:55,040
cipher with an n-bit tweak

50
00:01:55,040 --> 00:01:56,799
those were called nonsense tweak and

51
00:01:56,799 --> 00:01:58,560
hashes tweak

52
00:01:58,560 --> 00:02:01,119
nat nonsense tweak simply used the

53
00:02:01,119 --> 00:02:03,119
message hash as an input to the block

54
00:02:03,119 --> 00:02:06,000
cipher call and the nones as a tweak

55
00:02:06,000 --> 00:02:08,318
therefore it achieved optimal security

56
00:02:08,318 --> 00:02:10,318
if no nonsense repeated

57
00:02:10,318 --> 00:02:13,120
however its security degenerated to n

58
00:02:13,120 --> 00:02:15,120
half bits when nonsense repeat up to 2

59
00:02:15,120 --> 00:02:17,120
and a half times

60
00:02:17,120 --> 00:02:19,040
on the other hand hash's tweak was

61
00:02:19,040 --> 00:02:20,720
stateless deterministic

62
00:02:20,720 --> 00:02:22,160
it replaced the nons by a second

63
00:02:22,160 --> 00:02:23,920
independent hash of the message and

64
00:02:23,920 --> 00:02:25,760
therefore provided n plus d half's bit

65
00:02:25,760 --> 00:02:27,920
security independent of nonsense

66
00:02:27,920 --> 00:02:30,080
nevertheless it also did not have any

67
00:02:30,080 --> 00:02:31,920
security benefit from the use of

68
00:02:31,920 --> 00:02:34,399
nonsense

69
00:02:35,120 --> 00:02:38,000
nat and ajt pose interesting research

70
00:02:38,000 --> 00:02:39,920
questions of how one could strengthen

71
00:02:39,920 --> 00:02:42,400
them with minimal changes

72
00:02:42,400 --> 00:02:44,400
our goal would have been optimal

73
00:02:44,400 --> 00:02:46,720
security for non-respecting adversaries

74
00:02:46,720 --> 00:02:48,720
and as high as possible security if

75
00:02:48,720 --> 00:02:50,800
nonsense would repeat

76
00:02:50,800 --> 00:02:52,319
we wanted to extend the security of

77
00:02:52,319 --> 00:02:54,560
nonsense tweak when nonsense ignored for

78
00:02:54,560 --> 00:02:57,120
hashes tweak our goals were

79
00:02:57,120 --> 00:02:59,440
higher security guarantees when nonces

80
00:02:59,440 --> 00:03:02,159
are respected

81
00:03:03,120 --> 00:03:05,599
we identify a few design principles that

82
00:03:05,599 --> 00:03:08,480
helped us on our way to achieve our goal

83
00:03:08,480 --> 00:03:11,120
in general ambit tags limit the security

84
00:03:11,120 --> 00:03:13,360
of max to n bits since the adversary can

85
00:03:13,360 --> 00:03:16,000
always simply guess the tag

86
00:03:16,000 --> 00:03:17,920
moreover the sum of independent

87
00:03:17,920 --> 00:03:19,840
permutations is well known for providing

88
00:03:19,840 --> 00:03:22,080
up to n bits so this construction would

89
00:03:22,080 --> 00:03:24,799
help us on our way

90
00:03:24,799 --> 00:03:26,959
when nonces are respected using the nons

91
00:03:26,959 --> 00:03:30,159
as a tweak in a tpc helps us since it

92
00:03:30,159 --> 00:03:32,400
transforms a trigger block cipher into a

93
00:03:32,400 --> 00:03:34,400
prf

94
00:03:34,400 --> 00:03:36,640
when nonsense repeat on the other hand

95
00:03:36,640 --> 00:03:38,560
there will be hash collisions

96
00:03:38,560 --> 00:03:41,599
after two and half queries for an ideal

97
00:03:41,599 --> 00:03:43,120
single hash

98
00:03:43,120 --> 00:03:45,440
moreover given two parameters the nonce

99
00:03:45,440 --> 00:03:46,480
and the message

100
00:03:46,480 --> 00:03:48,560
both of them must be input to the hash

101
00:03:48,560 --> 00:03:50,080
function

102
00:03:50,080 --> 00:03:52,480
finally in many cases the tweak size

103
00:03:52,480 --> 00:03:54,640
will not be larger than the block size

104
00:03:54,640 --> 00:03:57,200
since we will need two hashes

105
00:03:57,200 --> 00:03:58,959
to overcome the birthday bound from the

106
00:03:58,959 --> 00:04:00,879
collision of a single hash we will also

107
00:04:00,879 --> 00:04:02,640
need two trivial block cipher calls to

108
00:04:02,640 --> 00:04:06,559
possess the hash and the nouns

109
00:04:06,799 --> 00:04:08,560
in conclusion we propose two

110
00:04:08,560 --> 00:04:10,959
constructions for our purpose

111
00:04:10,959 --> 00:04:14,560
nut 2 and extended hashes tweak both

112
00:04:14,560 --> 00:04:16,079
will be variants of the double block

113
00:04:16,079 --> 00:04:18,320
hashed and sum construction however we

114
00:04:18,320 --> 00:04:20,160
will have a nonce that can be used to

115
00:04:20,160 --> 00:04:23,120
extend the security

116
00:04:23,440 --> 00:04:25,680
our first instance will be nonsense

117
00:04:25,680 --> 00:04:27,280
tweak two

118
00:04:27,280 --> 00:04:29,919
it sums two instances of nunza's tweak

119
00:04:29,919 --> 00:04:31,840
under independent keys

120
00:04:31,840 --> 00:04:34,720
the nuns is therefore used as a tweak

121
00:04:34,720 --> 00:04:37,520
input to both tweak the processor calls

122
00:04:37,520 --> 00:04:38,960
as a result

123
00:04:38,960 --> 00:04:41,120
nuns streak 2 preserves the optimal

124
00:04:41,120 --> 00:04:43,360
security of nat when nunses are

125
00:04:43,360 --> 00:04:45,520
respected

126
00:04:45,520 --> 00:04:47,759
we can illustrate this as follows

127
00:04:47,759 --> 00:04:49,520
here the light graphs represent the

128
00:04:49,520 --> 00:04:51,840
security of nat and the bold craft stat

129
00:04:51,840 --> 00:04:53,440
of our construction

130
00:04:53,440 --> 00:04:55,280
for simplicity we assume ideal

131
00:04:55,280 --> 00:04:57,680
primitives here and that the tweak size

132
00:04:57,680 --> 00:05:00,479
is equal to the block size and n is 64

133
00:05:00,479 --> 00:05:02,800
just for an example

134
00:05:02,800 --> 00:05:04,960
when respecting nonsense the security of

135
00:05:04,960 --> 00:05:07,680
both construction is roughly identical

136
00:05:07,680 --> 00:05:08,960
and limited by the number of

137
00:05:08,960 --> 00:05:11,360
verification queries

138
00:05:11,360 --> 00:05:13,039
in the middle there are a few

139
00:05:13,039 --> 00:05:14,800
non-repeating queries in the order of

140
00:05:14,800 --> 00:05:16,960
square root of the number of total

141
00:05:16,960 --> 00:05:18,880
authentication queries

142
00:05:18,880 --> 00:05:19,840
then

143
00:05:19,840 --> 00:05:22,320
our construction provides n

144
00:05:22,320 --> 00:05:23,680
instead of

145
00:05:23,680 --> 00:05:26,560
2n by 3 bit security and

146
00:05:26,560 --> 00:05:29,120
even higher security for fewer

147
00:05:29,120 --> 00:05:31,520
verification queries

148
00:05:31,520 --> 00:05:33,680
when all mac queries finally use the

149
00:05:33,680 --> 00:05:36,240
same nonce our construction still

150
00:05:36,240 --> 00:05:38,880
provides 2n by 3 bit security compared

151
00:05:38,880 --> 00:05:41,039
to n-half for nat

152
00:05:41,039 --> 00:05:44,000
moreover given at most 2.5 verification

153
00:05:44,000 --> 00:05:46,560
queries we showed even a bound of 3n by

154
00:05:46,560 --> 00:05:49,440
4-bit security

155
00:05:49,759 --> 00:05:52,479
our second proposal is called extended

156
00:05:52,479 --> 00:05:54,240
hash as tweak

157
00:05:54,240 --> 00:05:56,000
it adds the result of processing the

158
00:05:56,000 --> 00:05:58,000
nuns with an independent tweakable block

159
00:05:58,000 --> 00:06:00,639
cipher call to hash as tweak

160
00:06:00,639 --> 00:06:02,720
furthermore it concatenates and hashes

161
00:06:02,720 --> 00:06:04,479
the nonce and the message instead of

162
00:06:04,479 --> 00:06:06,880
only the message for generalized tweak

163
00:06:06,880 --> 00:06:08,720
length our construction will be stronger

164
00:06:08,720 --> 00:06:11,120
than hit when nuances are not always

165
00:06:11,120 --> 00:06:16,400
misused so whenever mu is smaller than q

166
00:06:16,800 --> 00:06:19,199
for hash's tweak the bound is limited by

167
00:06:19,199 --> 00:06:19,919
two

168
00:06:19,919 --> 00:06:21,680
n plus t half queries and does not

169
00:06:21,680 --> 00:06:23,520
profit from nonsense at all

170
00:06:23,520 --> 00:06:26,880
the security of extended h80 depends on

171
00:06:26,880 --> 00:06:28,560
the number of non-repeating mech queries

172
00:06:28,560 --> 00:06:29,919
and on the number of verification

173
00:06:29,919 --> 00:06:31,440
queries

174
00:06:31,440 --> 00:06:33,840
for two-to-nine verification queries it

175
00:06:33,840 --> 00:06:36,400
provides also end with security

176
00:06:36,400 --> 00:06:38,160
for fewer verification queries its

177
00:06:38,160 --> 00:06:40,720
security exceeds that of the original

178
00:06:40,720 --> 00:06:42,639
stweak construction

179
00:06:42,639 --> 00:06:44,560
when non's repeating macquarie's read

180
00:06:44,560 --> 00:06:46,880
quicker more our construction slowly

181
00:06:46,880 --> 00:06:48,960
approaches the original hashes tweet

182
00:06:48,960 --> 00:06:50,400
construction

183
00:06:50,400 --> 00:06:52,000
this means it still preserves its

184
00:06:52,000 --> 00:06:54,400
original security but has benefits if

185
00:06:54,400 --> 00:06:56,720
the nonce doesn't repeat too often

186
00:06:56,720 --> 00:06:58,960
our constructions both need more

187
00:06:58,960 --> 00:07:01,039
operations than the original non-systec

188
00:07:01,039 --> 00:07:02,800
and hash has tweaked designs

189
00:07:02,800 --> 00:07:04,880
both need two to block cypher calls

190
00:07:04,880 --> 00:07:07,360
instead of one note that this call may

191
00:07:07,360 --> 00:07:08,720
be performed in parallel to the first

192
00:07:08,720 --> 00:07:10,720
trigger blocks of a call

193
00:07:10,720 --> 00:07:12,960
nuns's tweak 2 needs twice the number of

194
00:07:12,960 --> 00:07:14,960
operations in addition in the hash

195
00:07:14,960 --> 00:07:18,479
functions compared to the original nat

196
00:07:18,479 --> 00:07:20,240
extended hit

197
00:07:20,240 --> 00:07:22,240
needs to additionally process the nons

198
00:07:22,240 --> 00:07:24,080
in the hash functions

199
00:07:24,080 --> 00:07:26,479
nevertheless as we showed before we

200
00:07:26,479 --> 00:07:28,160
believe our constructions are close to

201
00:07:28,160 --> 00:07:29,520
the minimum number of computations

202
00:07:29,520 --> 00:07:34,000
necessary to achieve our design goals

203
00:07:34,720 --> 00:07:36,479
in the following we provide a few

204
00:07:36,479 --> 00:07:38,240
preliminaries for our later security

205
00:07:38,240 --> 00:07:40,000
analysis

206
00:07:40,000 --> 00:07:41,680
we use mac security as the

207
00:07:41,680 --> 00:07:43,520
distinguishing advantage of telling a

208
00:07:43,520 --> 00:07:45,360
part two worlds

209
00:07:45,360 --> 00:07:47,680
the real world consists of two oracles

210
00:07:47,680 --> 00:07:49,360
that wrap the real authentication and

211
00:07:49,360 --> 00:07:52,319
verification algorithms

212
00:07:52,319 --> 00:07:54,319
the oracles of the ideal world always

213
00:07:54,319 --> 00:07:57,440
return random tags or always return the

214
00:07:57,440 --> 00:07:59,520
inbuilt symbol

215
00:07:59,520 --> 00:08:01,680
the adversary can ask at most queue nuns

216
00:08:01,680 --> 00:08:03,919
respecting and view non-repeating

217
00:08:03,919 --> 00:08:06,000
queries to the authentication oracle and

218
00:08:06,000 --> 00:08:07,840
at most weak queries to the verification

219
00:08:07,840 --> 00:08:10,318
oracle

220
00:08:10,720 --> 00:08:13,120
the proof of nat2 builds on pateran's

221
00:08:13,120 --> 00:08:14,879
mirror theory

222
00:08:14,879 --> 00:08:16,639
we build also upon the extensions of

223
00:08:16,639 --> 00:08:19,120
mirror theory by kim and al whose work

224
00:08:19,120 --> 00:08:21,199
had added inequalities to patagon's

225
00:08:21,199 --> 00:08:23,039
theory

226
00:08:23,039 --> 00:08:25,520
this work extends theirs to show a three

227
00:08:25,520 --> 00:08:27,440
and by four bit security bound instead

228
00:08:27,440 --> 00:08:29,120
of two n by three

229
00:08:29,120 --> 00:08:30,960
moreover we employ the expectation

230
00:08:30,960 --> 00:08:33,599
method a generalization of patterns h

231
00:08:33,599 --> 00:08:36,560
coefficient technique

232
00:08:36,880 --> 00:08:38,958
mirror theory tries to derive a bound

233
00:08:38,958 --> 00:08:40,559
for the minimum number of solutions for

234
00:08:40,559 --> 00:08:42,080
an equation system

235
00:08:42,080 --> 00:08:44,240
such a system models all outputs from

236
00:08:44,240 --> 00:08:46,800
the sum of independent permutations

237
00:08:46,800 --> 00:08:48,800
here the equalities represent the

238
00:08:48,800 --> 00:08:50,800
authentication queries

239
00:08:50,800 --> 00:08:52,480
given that an adversary shall also not

240
00:08:52,480 --> 00:08:54,640
be able to forge the inequalities of

241
00:08:54,640 --> 00:08:56,480
such a system represent the relations

242
00:08:56,480 --> 00:08:58,320
that must not hold so that the words

243
00:08:58,320 --> 00:09:00,959
remain indistinguishable

244
00:09:00,959 --> 00:09:02,959
those relations of values can also be

245
00:09:02,959 --> 00:09:05,200
represented as a transcript graph

246
00:09:05,200 --> 00:09:06,880
the nodes are the outputs of the two

247
00:09:06,880 --> 00:09:09,120
independent permutations collected in

248
00:09:09,120 --> 00:09:10,880
two sets

249
00:09:10,880 --> 00:09:13,360
the edges are connections of outputs and

250
00:09:13,360 --> 00:09:16,640
a trail is then a sequence of edges

251
00:09:16,640 --> 00:09:18,880
labels are tuples where the first values

252
00:09:18,880 --> 00:09:21,519
map two subsequent values and sign

253
00:09:21,519 --> 00:09:23,440
indicates if it's an equality or

254
00:09:23,440 --> 00:09:25,120
inequality mapping

255
00:09:25,120 --> 00:09:27,279
the sum of all edge label values of a

256
00:09:27,279 --> 00:09:29,200
trail is then defined as the label of

257
00:09:29,200 --> 00:09:31,360
the tree

258
00:09:31,360 --> 00:09:33,040
nice graphs will later represent a good

259
00:09:33,040 --> 00:09:35,279
transcript without bad events

260
00:09:35,279 --> 00:09:36,800
we call a transcript graph of k

261
00:09:36,800 --> 00:09:39,120
components nice if it is cycle free

262
00:09:39,120 --> 00:09:41,360
non-degenerate that is the sum of labels

263
00:09:41,360 --> 00:09:44,399
in a trail is not zero and if edges are

264
00:09:44,399 --> 00:09:46,880
connected by an inequality they are not

265
00:09:46,880 --> 00:09:50,080
simultaneously connected by inequality

266
00:09:50,080 --> 00:09:52,480
given a nice graph the extended mirror

267
00:09:52,480 --> 00:09:54,880
theory allows us to lower bound the

268
00:09:54,880 --> 00:09:56,560
number of solutions for a random choice

269
00:09:56,560 --> 00:09:58,399
of variable assignments

270
00:09:58,399 --> 00:10:00,640
in detail the graph will be decomposed

271
00:10:00,640 --> 00:10:02,640
into such components of at least two

272
00:10:02,640 --> 00:10:05,279
images of single edge trails and of

273
00:10:05,279 --> 00:10:07,440
isolated vertices

274
00:10:07,440 --> 00:10:09,680
in conclusion the paper will arrive at a

275
00:10:09,680 --> 00:10:12,959
bound in the order of q by 4 by 2 to the

276
00:10:12,959 --> 00:10:14,000
3n

277
00:10:14,000 --> 00:10:16,480
the details of the proof of that theorem

278
00:10:16,480 --> 00:10:20,160
can then be found in our paper

279
00:10:21,040 --> 00:10:22,720
let's come to the security analysis of

280
00:10:22,720 --> 00:10:24,320
nat2

281
00:10:24,320 --> 00:10:26,480
for both constructions we use the edge

282
00:10:26,480 --> 00:10:28,399
coefficient method and here in

283
00:10:28,399 --> 00:10:30,560
particular the expectation method

284
00:10:30,560 --> 00:10:32,880
this means we introduce a number of bad

285
00:10:32,880 --> 00:10:34,959
events and upper bound the probabilities

286
00:10:34,959 --> 00:10:36,399
to occur

287
00:10:36,399 --> 00:10:37,200
then

288
00:10:37,200 --> 00:10:39,360
we consider the expectation of the ratio

289
00:10:39,360 --> 00:10:41,040
between real and ideal world

290
00:10:41,040 --> 00:10:42,800
probabilities of

291
00:10:42,800 --> 00:10:46,560
transcripts that have no bad events

292
00:10:46,560 --> 00:10:48,240
in the following we study bad events

293
00:10:48,240 --> 00:10:49,839
where the distinguisher wins whenever

294
00:10:49,839 --> 00:10:51,600
these occur

295
00:10:51,600 --> 00:10:53,760
for the bound of good transcripts we

296
00:10:53,760 --> 00:10:57,120
will make use of nice transcript graphs

297
00:10:57,120 --> 00:11:00,000
the graph is used to model the outputs

298
00:11:00,000 --> 00:11:02,320
of the permutations and their relations

299
00:11:02,320 --> 00:11:04,800
in particular the edges model the

300
00:11:04,800 --> 00:11:08,800
solutions under a fixed nonce value w

301
00:11:08,800 --> 00:11:11,279
we consider four sets of bad events

302
00:11:11,279 --> 00:11:13,519
first collisions between non-repeating

303
00:11:13,519 --> 00:11:14,880
macquaries

304
00:11:14,880 --> 00:11:16,560
there for example simultaneous

305
00:11:16,560 --> 00:11:20,320
collisions between both hash outputs or

306
00:11:20,320 --> 00:11:23,120
so called alternating hash collisions in

307
00:11:23,120 --> 00:11:25,440
sum we arrive at the following bounds

308
00:11:25,440 --> 00:11:26,880
for those events

309
00:11:26,880 --> 00:11:29,760
where we make use of a lemma by

310
00:11:29,760 --> 00:11:31,920
nandi at al for alternating hash

311
00:11:31,920 --> 00:11:33,440
collisions

312
00:11:33,440 --> 00:11:36,640
moreover we consider partial collisions

313
00:11:36,640 --> 00:11:38,800
between nun's repeating macquaries where

314
00:11:38,800 --> 00:11:40,720
the tag is involved

315
00:11:40,720 --> 00:11:41,600
and

316
00:11:41,600 --> 00:11:43,680
get a second bound on those

317
00:11:43,680 --> 00:11:44,800
where

318
00:11:44,800 --> 00:11:47,279
the two to n results since we are in the

319
00:11:47,279 --> 00:11:49,600
ideal world and there is probability of

320
00:11:49,600 --> 00:11:53,760
total minus n to collide in the tag

321
00:11:53,920 --> 00:11:56,000
third we consider collisions between

322
00:11:56,000 --> 00:11:57,600
non-repeating macquaries and

323
00:11:57,600 --> 00:11:59,839
verification queries

324
00:11:59,839 --> 00:12:02,720
and finally we introduce a parameter l

325
00:12:02,720 --> 00:12:04,800
and upper bound the probability that we

326
00:12:04,800 --> 00:12:07,200
arrive at too many partial collisions in

327
00:12:07,200 --> 00:12:12,000
either u or v that is in the hash values

328
00:12:12,240 --> 00:12:14,800
for good transcripts we can now use

329
00:12:14,800 --> 00:12:16,480
theorem 1 on the ratio of the

330
00:12:16,480 --> 00:12:19,200
probability to idealize transcript

331
00:12:19,200 --> 00:12:21,360
graphs

332
00:12:21,360 --> 00:12:23,519
the proof details are a little involved

333
00:12:23,519 --> 00:12:26,000
and we refer the interested reader to

334
00:12:26,000 --> 00:12:29,279
the details in our paper

335
00:12:29,680 --> 00:12:31,519
finally choosing an appropriate

336
00:12:31,519 --> 00:12:34,560
parameter of l we arrive at a useful

337
00:12:34,560 --> 00:12:36,800
bound that we have seen already in the

338
00:12:36,800 --> 00:12:39,839
diagrams before

339
00:12:40,320 --> 00:12:42,399
quickly also a few notes on the analysis

340
00:12:42,399 --> 00:12:44,399
of extended hash's tweak

341
00:12:44,399 --> 00:12:46,160
this analysis was a little easier than

342
00:12:46,160 --> 00:12:48,800
that of nat2 but still needed careful

343
00:12:48,800 --> 00:12:50,160
attention

344
00:12:50,160 --> 00:12:52,800
we follow a similar strategy by applying

345
00:12:52,800 --> 00:12:54,720
the age coefficient technique

346
00:12:54,720 --> 00:12:57,760
though we could use two proofs once if

347
00:12:57,760 --> 00:13:00,480
nones are respected all the time and

348
00:13:00,480 --> 00:13:02,560
approve if they are not

349
00:13:02,560 --> 00:13:04,880
for the former we could apply a simpler

350
00:13:04,880 --> 00:13:06,720
proof for the wickman-carter-shoop

351
00:13:06,720 --> 00:13:09,120
construction and arrived at the bounce

352
00:13:09,120 --> 00:13:10,959
that upper-bounded the probability that

353
00:13:10,959 --> 00:13:13,600
a fortress and the probability

354
00:13:13,600 --> 00:13:15,600
of a simultaneous collision in both

355
00:13:15,600 --> 00:13:18,079
hashes

356
00:13:18,079 --> 00:13:20,639
under non-misuse we considered six bad

357
00:13:20,639 --> 00:13:22,000
events in total

358
00:13:22,000 --> 00:13:24,959
that were collisions between macquaries

359
00:13:24,959 --> 00:13:27,040
collisions between a mac and

360
00:13:27,040 --> 00:13:29,440
verification queries in hashes or the

361
00:13:29,440 --> 00:13:30,720
tag

362
00:13:30,720 --> 00:13:31,519
and

363
00:13:31,519 --> 00:13:34,639
an upper bound that too many values we

364
00:13:34,639 --> 00:13:36,160
occurred

365
00:13:36,160 --> 00:13:37,200
therefore

366
00:13:37,200 --> 00:13:38,720
we arrived at the following bound that

367
00:13:38,720 --> 00:13:40,959
is in the order of n-bit security

368
00:13:40,959 --> 00:13:43,279
depending on ideal hashing and ideal

369
00:13:43,279 --> 00:13:46,160
primitives of course

370
00:13:46,399 --> 00:13:48,079
the good transcripts could then be

371
00:13:48,079 --> 00:13:50,800
bounded by taking mostly the number of

372
00:13:50,800 --> 00:13:54,000
verification queries into account and

373
00:13:54,000 --> 00:13:56,079
adding this to our previously

374
00:13:56,079 --> 00:13:58,240
known bound for bad transcripts

375
00:13:58,240 --> 00:13:59,839
in total

376
00:13:59,839 --> 00:14:01,199
instantiating

377
00:14:01,199 --> 00:14:03,360
the maximum number of collisions for

378
00:14:03,360 --> 00:14:04,639
value v

379
00:14:04,639 --> 00:14:06,800
with a practical and appropriate value

380
00:14:06,800 --> 00:14:09,680
we arrive at the following bound

381
00:14:09,680 --> 00:14:11,120
in summary

382
00:14:11,120 --> 00:14:13,199
we proposed two highly secure non-spaced

383
00:14:13,199 --> 00:14:14,320
macs

384
00:14:14,320 --> 00:14:16,800
those took nancy's tweak and hashes

385
00:14:16,800 --> 00:14:19,040
tweaked by koyati at al as a baseline

386
00:14:19,040 --> 00:14:20,800
and introduced conceptually simple

387
00:14:20,800 --> 00:14:22,160
changes

388
00:14:22,160 --> 00:14:24,000
they possess almost full security in the

389
00:14:24,000 --> 00:14:26,399
non-respecting and beyond birthday bound

390
00:14:26,399 --> 00:14:29,760
security in a nun's repeating model

391
00:14:29,760 --> 00:14:32,399
neither nancy's tweak non-hashes tweak

392
00:14:32,399 --> 00:14:33,519
could achieve both properties

393
00:14:33,519 --> 00:14:35,680
simultaneously

394
00:14:35,680 --> 00:14:37,519
when nonsense are guaranteed the

395
00:14:37,519 --> 00:14:39,279
security levels of our constructions are

396
00:14:39,279 --> 00:14:41,440
comparable to those for nonsense tweak

397
00:14:41,440 --> 00:14:42,839
and hashes tweak

398
00:14:42,839 --> 00:14:44,880
respectively moreover

399
00:14:44,880 --> 00:14:47,040
for repeated nonsense the bounds of our

400
00:14:47,040 --> 00:14:50,560
constructions can be strictly stronger

401
00:14:50,560 --> 00:14:53,600
nat2 improves it from n half to two n by

402
00:14:53,600 --> 00:14:55,360
three bits and even two three and by

403
00:14:55,360 --> 00:14:57,360
four bits if not too many verification

404
00:14:57,360 --> 00:14:59,199
queries are asked

405
00:14:59,199 --> 00:15:01,279
extended hashes tweak can extend the

406
00:15:01,279 --> 00:15:04,720
security from n plus t half to n bits

407
00:15:04,720 --> 00:15:07,120
future work can be to study the security

408
00:15:07,120 --> 00:15:08,880
of the constructions in the idea cipher

409
00:15:08,880 --> 00:15:10,560
model the search for matching

410
00:15:10,560 --> 00:15:12,720
distinguishes or to consider further

411
00:15:12,720 --> 00:15:15,760
mixed constructions

412
00:15:16,000 --> 00:15:18,639
that was it we thank you and are looking

413
00:15:18,639 --> 00:15:22,199
forward to your questions

