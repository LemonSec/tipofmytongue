1
00:00:01,199 --> 00:00:04,080
hello everyone i'm jose sakamoto from

2
00:00:04,080 --> 00:00:06,640
university of hyogo

3
00:00:06,640 --> 00:00:08,080
in this video

4
00:00:08,080 --> 00:00:11,519
i'd like to talk about our paper loka an

5
00:00:11,519 --> 00:00:14,160
efficient aed based encryption scheme

6
00:00:14,160 --> 00:00:16,880
for beyond 5g

7
00:00:16,880 --> 00:00:19,279
this is joint work with who call you

8
00:00:19,279 --> 00:00:22,320
yuto nakano shinsaki moto and technology

9
00:00:22,320 --> 00:00:24,640
sobe

10
00:00:26,560 --> 00:00:29,279
first let me give the background of our

11
00:00:29,279 --> 00:00:30,880
work

12
00:00:30,880 --> 00:00:32,000
as you know

13
00:00:32,000 --> 00:00:33,520
the fifth generation mobile

14
00:00:33,520 --> 00:00:36,239
communication system of 5g has been

15
00:00:36,239 --> 00:00:38,719
launched around the world

16
00:00:38,719 --> 00:00:40,160
in the field of symmetric key

17
00:00:40,160 --> 00:00:42,960
cryptography we have three specified

18
00:00:42,960 --> 00:00:46,239
cryptographic algorithms for 5g

19
00:00:46,239 --> 00:00:49,840
any a1 which is based on snow 3g

20
00:00:49,840 --> 00:00:53,440
nu2 which is based on aes

21
00:00:53,440 --> 00:00:57,360
any e3 which is based on zuk

22
00:00:57,360 --> 00:00:59,760
these three core algorithms are the same

23
00:00:59,760 --> 00:01:03,440
as the algorithms used in the 4g system

24
00:01:03,440 --> 00:01:06,799
besides recently several new algorithms

25
00:01:06,799 --> 00:01:09,200
targeting 5g were proposed

26
00:01:09,200 --> 00:01:15,600
such as zuk 256 snow b and snow bi

27
00:01:15,600 --> 00:01:17,759
these new algorithms are designed to

28
00:01:17,759 --> 00:01:21,040
satisfy the requirement for 5g namely

29
00:01:21,040 --> 00:01:24,320
supporting 256 speed key ranks

30
00:01:24,320 --> 00:01:26,560
and achieving encryption speed of more

31
00:01:26,560 --> 00:01:28,080
than

32
00:01:28,080 --> 00:01:31,439
20 gigabs

33
00:01:33,600 --> 00:01:36,159
when we look at beyond 5g

34
00:01:36,159 --> 00:01:38,119
regarding the key lengths

35
00:01:38,119 --> 00:01:41,520
256 key rooks already sufficient even

36
00:01:41,520 --> 00:01:44,640
for beyond 5g system

37
00:01:44,640 --> 00:01:46,000
on the other hand

38
00:01:46,000 --> 00:01:48,640
of rearing performance we have to

39
00:01:48,640 --> 00:01:50,960
increase encryption speed

40
00:01:50,960 --> 00:01:52,079
actually

41
00:01:52,079 --> 00:01:54,240
there are some white papers for beyond

42
00:01:54,240 --> 00:01:56,640
5g issued by some research instruction

43
00:01:56,640 --> 00:01:59,600
institutes around the world and it is

44
00:01:59,600 --> 00:02:01,759
said that the data transmission speed

45
00:02:01,759 --> 00:02:05,520
reaches more than 100 lbps in beyond 5g

46
00:02:05,520 --> 00:02:07,840
system

47
00:02:07,840 --> 00:02:10,080
this means that we need to increase

48
00:02:10,080 --> 00:02:12,959
encryption speed more than 100 year bps

49
00:02:12,959 --> 00:02:15,200
to avoid encryption algorithms being the

50
00:02:15,200 --> 00:02:19,519
bottleneck on the beyond 5g system

51
00:02:19,920 --> 00:02:22,720
this can be a big matter because when we

52
00:02:22,720 --> 00:02:24,080
take snow b

53
00:02:24,080 --> 00:02:25,360
for example

54
00:02:25,360 --> 00:02:28,720
snow b achieves around 40 gbps in aead

55
00:02:28,720 --> 00:02:30,560
mode

56
00:02:30,560 --> 00:02:33,760
it is it is sufficient for 5g but for

57
00:02:33,760 --> 00:02:35,120
beyond 5g

58
00:02:35,120 --> 00:02:37,200
it does not satisfy the requirement for

59
00:02:37,200 --> 00:02:39,839
performance

60
00:02:41,519 --> 00:02:43,920
when we look for other candidates we

61
00:02:43,920 --> 00:02:47,040
find that several dedicated aeds such as

62
00:02:47,040 --> 00:02:50,239
aegis family and children 346 can be a

63
00:02:50,239 --> 00:02:53,360
good choice for beyond 5g

64
00:02:53,360 --> 00:02:54,879
as you know

65
00:02:54,879 --> 00:02:56,560
as128

66
00:02:56,560 --> 00:02:58,400
is one of the winners for the aea

67
00:02:58,400 --> 00:03:00,400
decompression scissor for high

68
00:03:00,400 --> 00:03:02,000
performance application

69
00:03:02,000 --> 00:03:05,280
and charging 346 is a surround candidate

70
00:03:05,280 --> 00:03:07,840
of caesar

71
00:03:08,640 --> 00:03:10,560
both of which are designed for high

72
00:03:10,560 --> 00:03:13,200
performance application

73
00:03:13,200 --> 00:03:16,480
however even with these algorithms

74
00:03:16,480 --> 00:03:18,720
we cannot meet both requirements for

75
00:03:18,720 --> 00:03:22,400
beyond 5g at the same time

76
00:03:24,159 --> 00:03:25,920
for these reasons

77
00:03:25,920 --> 00:03:28,239
it is obvious that we need to design a

78
00:03:28,239 --> 00:03:31,120
new algorithm for beyond 5g

79
00:03:31,120 --> 00:03:34,959
this is our motivation for this work

80
00:03:36,720 --> 00:03:39,360
before we go to the details of this work

81
00:03:39,360 --> 00:03:42,959
i will show an overview of this work

82
00:03:42,959 --> 00:03:44,239
in this work

83
00:03:44,239 --> 00:03:47,120
we propose a new aes based aed named

84
00:03:47,120 --> 00:03:49,200
rocca

85
00:03:49,200 --> 00:03:50,959
the design locker is based on

86
00:03:50,959 --> 00:03:53,120
sponge-based construction like aegis

87
00:03:53,120 --> 00:03:57,120
family and charging 346.

88
00:03:58,560 --> 00:04:01,599
the performance of rocket is pretty good

89
00:04:01,599 --> 00:04:06,239
the encryption speed reaches 2015 gigabs

90
00:04:06,239 --> 00:04:08,560
in encryption only mode

91
00:04:08,560 --> 00:04:10,799
and in an aead mode

92
00:04:10,799 --> 00:04:13,680
it reaches 178gbs

93
00:04:13,680 --> 00:04:15,680
which is almost 5 times faster than

94
00:04:15,680 --> 00:04:18,239
snobby

95
00:04:19,839 --> 00:04:21,519
regarding security

96
00:04:21,519 --> 00:04:25,199
we claim 256 speed security against key

97
00:04:25,199 --> 00:04:26,639
recovery attacks

98
00:04:26,639 --> 00:04:29,759
and 128-bit security against

99
00:04:29,759 --> 00:04:32,400
distinguished and fuzzily attacks each

100
00:04:32,400 --> 00:04:34,400
of which are in the non-respecting

101
00:04:34,400 --> 00:04:36,799
setting

102
00:04:38,560 --> 00:04:40,960
to the best of our knowledge rokai is

103
00:04:40,960 --> 00:04:42,800
the first dedicated cryptographic

104
00:04:42,800 --> 00:04:47,120
algorithms targeting for beyond 5g

105
00:04:48,720 --> 00:04:50,320
in this section

106
00:04:50,320 --> 00:04:54,000
i will give the specification of locker

107
00:04:54,000 --> 00:04:57,360
here is around function blocker

108
00:04:57,360 --> 00:04:59,680
the round function is based on the aes

109
00:04:59,680 --> 00:05:02,639
learn function and xor

110
00:05:02,639 --> 00:05:06,479
therefore the size of each one is 128

111
00:05:06,479 --> 00:05:08,800
bit

112
00:05:09,280 --> 00:05:12,160
the number of internal state is eight so

113
00:05:12,160 --> 00:05:14,160
the total bit ranks of the internal

114
00:05:14,160 --> 00:05:15,479
state is

115
00:05:15,479 --> 00:05:18,800
124 bits

116
00:05:19,120 --> 00:05:20,800
as said before

117
00:05:20,800 --> 00:05:23,120
loka is based on the spongebob based

118
00:05:23,120 --> 00:05:25,840
construction so we can see this round

119
00:05:25,840 --> 00:05:29,280
function as a sponge function

120
00:05:29,520 --> 00:05:32,880
x0 and x1 are the positions inserted

121
00:05:32,880 --> 00:05:37,000
around the constant or message

122
00:05:38,000 --> 00:05:40,080
this slide is about the initialization

123
00:05:40,080 --> 00:05:42,400
phase

124
00:05:42,400 --> 00:05:44,360
local first rolls the

125
00:05:44,360 --> 00:05:49,440
128 bit nouns and 256 bit key to the

126
00:05:49,440 --> 00:05:50,840
eight internal

127
00:05:50,840 --> 00:05:54,720
state zl and z1 denote the round

128
00:05:54,720 --> 00:05:56,960
constant

129
00:05:56,960 --> 00:05:59,039
you can see the specific round constant

130
00:05:59,039 --> 00:06:01,840
in our paper

131
00:06:02,160 --> 00:06:04,080
in the initialization phase

132
00:06:04,080 --> 00:06:08,639
we update the learn function 20 times

133
00:06:11,039 --> 00:06:13,680
in the processing's associated data

134
00:06:13,680 --> 00:06:17,199
associated data ad is first studied

135
00:06:17,199 --> 00:06:21,440
and then absorbed into run function

136
00:06:21,440 --> 00:06:24,240
if associated data is empty

137
00:06:24,240 --> 00:06:27,759
this procedure will be skipped

138
00:06:28,960 --> 00:06:30,960
in the encryption phase

139
00:06:30,960 --> 00:06:33,840
message m is fast padded and then

140
00:06:33,840 --> 00:06:37,440
absorbed into the round function

141
00:06:37,600 --> 00:06:41,199
two 128-bit ciphertexts are generated at

142
00:06:41,199 --> 00:06:44,319
each run function update

143
00:06:44,319 --> 00:06:46,240
if the message is empty

144
00:06:46,240 --> 00:06:49,840
this procedure will be skipped

145
00:06:51,440 --> 00:06:53,120
in the finalization

146
00:06:53,120 --> 00:06:55,680
we update the round function 20 times

147
00:06:55,680 --> 00:06:59,120
and then a tag is calculated

148
00:06:59,120 --> 00:07:01,680
for more details of specification

149
00:07:01,680 --> 00:07:04,960
please see our paper

150
00:07:06,400 --> 00:07:07,680
in this section

151
00:07:07,680 --> 00:07:10,080
i will introduce previous works and some

152
00:07:10,080 --> 00:07:12,639
important terms

153
00:07:12,639 --> 00:07:17,120
first i will introduce aes and i

154
00:07:17,120 --> 00:07:20,240
aes new instruction set or aesni was

155
00:07:20,240 --> 00:07:24,639
proposed by intel in 2008.

156
00:07:24,639 --> 00:07:29,680
asni aims to conduct aes very fast

157
00:07:29,680 --> 00:07:31,919
with this asni

158
00:07:31,919 --> 00:07:34,880
we can conduct aes 10 times faster than

159
00:07:34,880 --> 00:07:37,759
aes or tbox implementation in

160
00:07:37,759 --> 00:07:41,919
parallelizable modes such as ctr

161
00:07:43,039 --> 00:07:45,840
the population of aesni is large

162
00:07:45,840 --> 00:07:49,599
actually almost all cpus have a sni in

163
00:07:49,599 --> 00:07:50,479
them

164
00:07:50,479 --> 00:07:53,199
and many arms architectures also have

165
00:07:53,199 --> 00:07:57,639
similar instruction as a sni

166
00:07:58,319 --> 00:08:01,520
the most important feature of asl ny is

167
00:08:01,520 --> 00:08:03,599
that it is the strongest

168
00:08:03,599 --> 00:08:05,680
instructions in shimoda

169
00:08:05,680 --> 00:08:09,360
in terms of security

170
00:08:09,360 --> 00:08:12,639
since when aes ni was proposed many

171
00:08:12,639 --> 00:08:15,280
algorithms based on aes and i have been

172
00:08:15,280 --> 00:08:17,840
proposed

173
00:08:17,840 --> 00:08:21,360
in this work we only use aes inc which

174
00:08:21,360 --> 00:08:24,080
conducts one round of aes namely

175
00:08:24,080 --> 00:08:27,520
sub-byte shift row mix gram and a ground

176
00:08:27,520 --> 00:08:29,758
key

177
00:08:31,599 --> 00:08:33,039
in this slide

178
00:08:33,039 --> 00:08:35,200
i will introduce some works about

179
00:08:35,200 --> 00:08:37,760
dedicated aeds based on the spawn

180
00:08:37,760 --> 00:08:40,080
function

181
00:08:40,080 --> 00:08:42,479
as the dedicated aeds

182
00:08:42,479 --> 00:08:45,680
there are edge family and charging 346

183
00:08:45,680 --> 00:08:48,080
both of which are based on the aes run

184
00:08:48,080 --> 00:08:50,560
function

185
00:08:50,640 --> 00:08:53,120
the feature of these schemes is that the

186
00:08:53,120 --> 00:08:55,279
whole speed depends on the speed of the

187
00:08:55,279 --> 00:08:57,519
run function as you can see in this

188
00:08:57,519 --> 00:08:59,440
figure

189
00:08:59,440 --> 00:09:02,800
and achieving very fast encryption speed

190
00:09:02,800 --> 00:09:05,839
with a sni

191
00:09:06,959 --> 00:09:08,640
in other works

192
00:09:08,640 --> 00:09:10,880
jane and nickwick studied a method to

193
00:09:10,880 --> 00:09:13,200
design the efficient sponge-based round

194
00:09:13,200 --> 00:09:17,440
function based on the aes run function

195
00:09:17,680 --> 00:09:20,000
they also generalized the edges and

196
00:09:20,000 --> 00:09:22,640
searching typeland function and

197
00:09:22,640 --> 00:09:24,560
presented a more efficient round

198
00:09:24,560 --> 00:09:28,800
function than edges and exhaustion

199
00:09:30,399 --> 00:09:34,240
let's look at more details of their work

200
00:09:34,240 --> 00:09:37,360
gene and nickwick introduce an important

201
00:09:37,360 --> 00:09:39,839
metric rate

202
00:09:39,839 --> 00:09:42,080
the rate is defined by the required

203
00:09:42,080 --> 00:09:44,640
number of the aes run function to

204
00:09:44,640 --> 00:09:49,120
encrypt a 128-bit message

205
00:09:49,360 --> 00:09:52,240
the rate is very useful useful when we

206
00:09:52,240 --> 00:09:56,240
estimate the speed of the run function

207
00:09:56,240 --> 00:09:58,880
then they show the requirement of the

208
00:09:58,880 --> 00:10:02,320
efficient round function

209
00:10:02,720 --> 00:10:04,959
the first requirement is that a round

210
00:10:04,959 --> 00:10:09,199
function has the lowest rate as possible

211
00:10:09,920 --> 00:10:12,480
the second requirement is that we need

212
00:10:12,480 --> 00:10:15,120
to call the aes run function more than

213
00:10:15,120 --> 00:10:18,640
the latency of a aes inc per throughput

214
00:10:18,640 --> 00:10:21,920
of aes inc in one round which maximizes

215
00:10:21,920 --> 00:10:26,160
the efficiency of the aes and codes

216
00:10:27,279 --> 00:10:29,839
and the third requirement is that the

217
00:10:29,839 --> 00:10:31,560
round function has

218
00:10:31,560 --> 00:10:36,640
128 bit security to the 4g attack

219
00:10:36,959 --> 00:10:38,880
at the end of their work

220
00:10:38,880 --> 00:10:40,959
they presented the round function with

221
00:10:40,959 --> 00:10:43,599
late 2.

222
00:10:45,360 --> 00:10:48,399
this round function is more efficient

223
00:10:48,399 --> 00:10:50,640
than the round function of edges and

224
00:10:50,640 --> 00:10:53,920
charging because of the rate

225
00:10:53,920 --> 00:10:55,680
besides they

226
00:10:55,680 --> 00:10:57,920
they implemented these round functions

227
00:10:57,920 --> 00:10:59,200
to confirm

228
00:10:59,200 --> 00:11:01,920
that the around function is faster

229
00:11:01,920 --> 00:11:04,880
a fastest one

230
00:11:06,640 --> 00:11:08,880
in this section i will explain the

231
00:11:08,880 --> 00:11:12,079
design rationale of locker

232
00:11:12,079 --> 00:11:15,120
our approach to design the efficient aed

233
00:11:15,120 --> 00:11:17,519
is that we first design a fast run

234
00:11:17,519 --> 00:11:18,560
function

235
00:11:18,560 --> 00:11:21,600
and then construct aeid based on the run

236
00:11:21,600 --> 00:11:24,800
function we designed

237
00:11:24,800 --> 00:11:27,279
to design a fast run function

238
00:11:27,279 --> 00:11:29,600
we improve the construction by g and

239
00:11:29,600 --> 00:11:32,079
nucleic

240
00:11:32,560 --> 00:11:35,200
then we try to design the fastest round

241
00:11:35,200 --> 00:11:39,360
function among sponge-based leds

242
00:11:39,680 --> 00:11:41,839
the security requirement of our run

243
00:11:41,839 --> 00:11:43,760
function is the same as gene and

244
00:11:43,760 --> 00:11:46,240
liquidic

245
00:11:46,560 --> 00:11:48,000
after that

246
00:11:48,000 --> 00:11:51,279
we construct aed with more than 100 gear

247
00:11:51,279 --> 00:11:53,440
bps encryption speed

248
00:11:53,440 --> 00:11:57,040
and 256 bit key security to key recovery

249
00:11:57,040 --> 00:11:59,439
attacks

250
00:12:00,399 --> 00:12:02,240
this is our general construction of the

251
00:12:02,240 --> 00:12:04,959
round function

252
00:12:05,120 --> 00:12:07,279
we improved two points from the

253
00:12:07,279 --> 00:12:11,120
construction by gene and nick rick

254
00:12:11,120 --> 00:12:13,600
the first point is to apply one shuffle

255
00:12:13,600 --> 00:12:18,000
before applying asm or xor

256
00:12:18,160 --> 00:12:20,160
this contributes to increasing the

257
00:12:20,160 --> 00:12:21,920
number of candidates

258
00:12:21,920 --> 00:12:24,240
and we can apply it cost free because

259
00:12:24,240 --> 00:12:26,639
worldwide shuffle does not require any

260
00:12:26,639 --> 00:12:29,600
shield operations

261
00:12:32,000 --> 00:12:34,639
the second point is that we apply either

262
00:12:34,639 --> 00:12:38,800
as inc or xor not both of them

263
00:12:38,800 --> 00:12:41,120
this merit is very clear that we can

264
00:12:41,120 --> 00:12:43,279
minimize the critical path to update the

265
00:12:43,279 --> 00:12:45,680
run function

266
00:12:45,680 --> 00:12:48,240
both points were not considered by g and

267
00:12:48,240 --> 00:12:51,240
nucleic

268
00:12:52,399 --> 00:12:55,120
next i show the requirement of our round

269
00:12:55,120 --> 00:12:57,120
function

270
00:12:57,120 --> 00:12:59,600
first i'd like to clear our target

271
00:12:59,600 --> 00:13:02,079
environment

272
00:13:02,079 --> 00:13:06,160
our target environment is interesting

273
00:13:06,160 --> 00:13:08,560
this is reasonable because that iceland

274
00:13:08,560 --> 00:13:11,200
supports the fastest aes inc in terms of

275
00:13:11,200 --> 00:13:13,920
both latency and throughput

276
00:13:13,920 --> 00:13:15,760
and architecture's released after

277
00:13:15,760 --> 00:13:18,480
iceland supports the same aes inc in

278
00:13:18,480 --> 00:13:22,399
terms of latency and throughput

279
00:13:24,000 --> 00:13:26,320
regarding the requirement

280
00:13:26,320 --> 00:13:28,000
we follow the gene and nucleus

281
00:13:28,000 --> 00:13:30,720
requirement

282
00:13:30,959 --> 00:13:33,279
the first requirement is the lowest rate

283
00:13:33,279 --> 00:13:35,839
as possible

284
00:13:35,839 --> 00:13:37,760
the second requirement is that the

285
00:13:37,760 --> 00:13:42,720
number of asn goals is close to six

286
00:13:44,160 --> 00:13:46,560
the third requirement is a smaller

287
00:13:46,560 --> 00:13:50,880
number of a internal state blocks

288
00:13:51,519 --> 00:13:54,160
our target is about 7 which refers to

289
00:13:54,160 --> 00:13:58,399
the number of internal states of snobby

290
00:13:58,959 --> 00:14:02,079
the last requirement is about security

291
00:14:02,079 --> 00:14:03,880
that the land function has

292
00:14:03,880 --> 00:14:09,360
128-bit security against forgery attacks

293
00:14:10,480 --> 00:14:12,800
then we decide parameters of the number

294
00:14:12,800 --> 00:14:16,079
of asms the internal states and message

295
00:14:16,079 --> 00:14:18,479
blocks

296
00:14:18,560 --> 00:14:21,600
regarding the number of asms we apply as

297
00:14:21,600 --> 00:14:24,079
ink when generating ciphertext blocks

298
00:14:24,079 --> 00:14:27,680
and the update the run function

299
00:14:27,920 --> 00:14:30,639
anticipates block generation we apply

300
00:14:30,639 --> 00:14:34,480
one asm to each key stream

301
00:14:34,480 --> 00:14:36,000
this operation strengthens the

302
00:14:36,000 --> 00:14:38,160
resistance to linear bias which is the

303
00:14:38,160 --> 00:14:41,920
most powerful attack to ages

304
00:14:43,040 --> 00:14:45,440
from the number of asms applied to

305
00:14:45,440 --> 00:14:47,440
ciphertext block generation

306
00:14:47,440 --> 00:14:49,839
we call six minus in number of inserted

307
00:14:49,839 --> 00:14:52,560
message blocks in the update of the run

308
00:14:52,560 --> 00:14:54,959
function

309
00:14:56,160 --> 00:14:58,240
we choose the candidates of the earned

310
00:14:58,240 --> 00:15:00,320
function according to the affirmation

311
00:15:00,320 --> 00:15:02,959
requirement

312
00:15:03,760 --> 00:15:05,920
our six candidates are shown in this

313
00:15:05,920 --> 00:15:08,319
table

314
00:15:08,959 --> 00:15:11,600
we evaluate security of these candidates

315
00:15:11,600 --> 00:15:13,600
against 4gb attacks by internal

316
00:15:13,600 --> 00:15:16,320
collisions namely a research around

317
00:15:16,320 --> 00:15:19,519
function that achieves more than 23

318
00:15:19,519 --> 00:15:23,760
active x-boxes by an mlp

319
00:15:23,760 --> 00:15:25,040
as a result

320
00:15:25,040 --> 00:15:27,839
we found 100 out of about 2 to the power

321
00:15:27,839 --> 00:15:30,880
20 round functions in candidate 3 which

322
00:15:30,880 --> 00:15:34,639
are resistance to the internal collision

323
00:15:34,639 --> 00:15:36,959
to further narrow the candidates we

324
00:15:36,959 --> 00:15:40,720
evaluated the diffusion property

325
00:15:40,720 --> 00:15:44,399
as a result we found 22 out of 100 round

326
00:15:44,399 --> 00:15:46,639
functions that achieves the same round

327
00:15:46,639 --> 00:15:49,279
redifusion

328
00:15:49,680 --> 00:15:51,680
after these operations

329
00:15:51,680 --> 00:15:54,160
we choose the run function that achieves

330
00:15:54,160 --> 00:15:56,959
the maximum number of activex boxes in

331
00:15:56,959 --> 00:15:59,120
class of the seven round three diffusion

332
00:15:59,120 --> 00:16:01,600
in the end

333
00:16:01,680 --> 00:16:05,839
so this is a run function blocker

334
00:16:06,000 --> 00:16:07,839
it achieves the 7 round through

335
00:16:07,839 --> 00:16:11,120
diffusion and has 24 activist boxes as

336
00:16:11,120 --> 00:16:13,920
the lower bound

337
00:16:15,680 --> 00:16:17,040
in this slide

338
00:16:17,040 --> 00:16:19,279
i compare the speed of our run function

339
00:16:19,279 --> 00:16:22,399
with other round functions

340
00:16:22,399 --> 00:16:24,399
as you can see in this table

341
00:16:24,399 --> 00:16:26,639
the run function of roka is the fastest

342
00:16:26,639 --> 00:16:29,920
one on ice lake

343
00:16:32,000 --> 00:16:34,480
in this slide i briefly explain the

344
00:16:34,480 --> 00:16:37,759
security of loka

345
00:16:37,759 --> 00:16:40,079
as an initial security operation

346
00:16:40,079 --> 00:16:42,240
we abravated the security against

347
00:16:42,240 --> 00:16:44,639
differential attack a huxley attack

348
00:16:44,639 --> 00:16:46,880
integral attack state recovery attack

349
00:16:46,880 --> 00:16:49,920
and linear bias

350
00:16:49,920 --> 00:16:52,160
you can see more details of our security

351
00:16:52,160 --> 00:16:55,680
aberration in our paper

352
00:16:56,079 --> 00:16:59,440
we claim 256-bit security against skill

353
00:16:59,440 --> 00:17:00,800
recovery attack

354
00:17:00,800 --> 00:17:04,160
and a 128-bit security against

355
00:17:04,160 --> 00:17:06,079
distinction distinguishing attack and

356
00:17:06,079 --> 00:17:08,959
project attacks

357
00:17:09,599 --> 00:17:11,439
we do not claim

358
00:17:11,439 --> 00:17:14,480
any security in the non-misuse setting

359
00:17:14,480 --> 00:17:19,480
on the rated key and non-key settings

360
00:17:20,240 --> 00:17:21,520
in this slide

361
00:17:21,520 --> 00:17:23,280
i provide a performance evaluation

362
00:17:23,280 --> 00:17:27,520
result of roka on opencsl

363
00:17:27,520 --> 00:17:30,080
this table shows comparison of local

364
00:17:30,080 --> 00:17:33,200
with other schemes

365
00:17:33,200 --> 00:17:35,120
as shown in this table

366
00:17:35,120 --> 00:17:36,960
rocker achieves really impressive

367
00:17:36,960 --> 00:17:39,600
performance

368
00:17:39,679 --> 00:17:43,880
locatives more than 200 gear bps and

369
00:17:43,880 --> 00:17:47,600
178 year bps in the encryption only and

370
00:17:47,600 --> 00:17:51,199
aud mode respectively

371
00:17:52,000 --> 00:17:54,559
on the mobile a local achieves more than

372
00:17:54,559 --> 00:17:57,080
100 gbps and

373
00:17:57,080 --> 00:18:00,640
92gbs in the encryption only and aad

374
00:18:00,640 --> 00:18:03,360
mode respectively

375
00:18:03,360 --> 00:18:05,520
this result shows that roka is the

376
00:18:05,520 --> 00:18:09,520
fastest encryption scheme among them

377
00:18:09,520 --> 00:18:12,240
and an important point is that rokka is

378
00:18:12,240 --> 00:18:16,160
still the fastest compared to ages 128

379
00:18:16,160 --> 00:18:17,679
128

380
00:18:17,679 --> 00:18:21,200
air and xiaoshi 3.6 even though these

381
00:18:21,200 --> 00:18:24,720
schemes support 128-bit key while roka

382
00:18:24,720 --> 00:18:25,640
supports

383
00:18:25,640 --> 00:18:29,200
256-bit key

384
00:18:29,200 --> 00:18:33,200
lastly i conclude this presentation

385
00:18:33,200 --> 00:18:36,080
in this work we presented a new aes

386
00:18:36,080 --> 00:18:39,919
based aed scheme named loca

387
00:18:39,919 --> 00:18:42,160
loca is the first dedicated encryption

388
00:18:42,160 --> 00:18:46,080
scheme targeting beyond 5g system

389
00:18:46,080 --> 00:18:48,080
the encryption speed of loka reaches

390
00:18:48,080 --> 00:18:51,440
more than 100 year bps

391
00:18:51,440 --> 00:18:56,559
and rocker supports a 256 bit key

392
00:18:56,559 --> 00:18:58,960
this is the end of my presentation thank

393
00:18:58,960 --> 00:19:02,280
you for your attention

