1
00:00:00,210 --> 00:00:00,719
[Music]

2
00:00:00,719 --> 00:00:03,199
hello everyone my name is jin yang

3
00:00:03,199 --> 00:00:05,279
in this video i will present our work

4
00:00:05,279 --> 00:00:07,680
about improved case standard attorney

5
00:00:07,680 --> 00:00:10,240
and distinguished attacks on snow way

6
00:00:10,240 --> 00:00:12,559
this was one work finished when i was a

7
00:00:12,559 --> 00:00:15,360
phd student at luandu university and it

8
00:00:15,360 --> 00:00:17,680
was a joint work with thomas johansen

9
00:00:17,680 --> 00:00:20,320
from doing the university and alexander

10
00:00:20,320 --> 00:00:24,000
maximov from erickson research

11
00:00:24,000 --> 00:00:26,080
so my presentation would follow this

12
00:00:26,080 --> 00:00:28,320
outline i would first

13
00:00:28,320 --> 00:00:30,400
give a short introduction to the

14
00:00:30,400 --> 00:00:32,719
confidentiality and the integrity

15
00:00:32,719 --> 00:00:34,719
protection 5g

16
00:00:34,719 --> 00:00:36,880
and the stream sign for snowy we have

17
00:00:36,880 --> 00:00:38,719
designed for that

18
00:00:38,719 --> 00:00:41,680
then i will present our two guests under

19
00:00:41,680 --> 00:00:44,480
determine attacks against norway and our

20
00:00:44,480 --> 00:00:46,960
linear narcissist results of it

21
00:00:46,960 --> 00:00:48,559
and finally i will give a short

22
00:00:48,559 --> 00:00:50,320
conclusion

23
00:00:50,320 --> 00:00:54,480
so let's start with the introduction

24
00:00:54,480 --> 00:00:56,640
the confidentiality and integrity

25
00:00:56,640 --> 00:00:59,520
protection in central networks protects

26
00:00:59,520 --> 00:01:01,840
the data transmission between users and

27
00:01:01,840 --> 00:01:05,119
base stations by encrypting the data and

28
00:01:05,119 --> 00:01:07,840
adding authentication text

29
00:01:07,840 --> 00:01:10,320
this is like adding some security tunnel

30
00:01:10,320 --> 00:01:12,880
over the wireless channel as shown in

31
00:01:12,880 --> 00:01:15,439
the figure so each user and the base

32
00:01:15,439 --> 00:01:18,080
station will share a secret key and if

33
00:01:18,080 --> 00:01:20,240
they have some data to be transmitted

34
00:01:20,240 --> 00:01:22,880
they will use this secret key as one

35
00:01:22,880 --> 00:01:27,040
input to a 3gbp standardized algorithm

36
00:01:27,040 --> 00:01:31,119
to encrypt and authenticate the data

37
00:01:31,119 --> 00:01:33,759
so in 4g there are three such

38
00:01:33,759 --> 00:01:37,360
ciphers which are 3g suk and as

39
00:01:37,360 --> 00:01:40,040
so they are all used to provide a

40
00:01:40,040 --> 00:01:42,960
128-bit security level and are usually

41
00:01:42,960 --> 00:01:45,840
implemented in hardware because that can

42
00:01:45,840 --> 00:01:48,079
provide high speeds

43
00:01:48,079 --> 00:01:50,560
so they work very well in

44
00:01:50,560 --> 00:01:54,960
4g but how about 5g

45
00:01:54,960 --> 00:01:57,119
when we come to 5g there are some new

46
00:01:57,119 --> 00:01:59,040
requirements on the confidentiality and

47
00:01:59,040 --> 00:02:01,119
integrity algorithms the first

48
00:02:01,119 --> 00:02:04,000
requirement is about the speed so they

49
00:02:04,000 --> 00:02:06,960
should be able to provide a speed of not

50
00:02:06,960 --> 00:02:08,639
less than 20 gigabits per second in

51
00:02:08,639 --> 00:02:09,840
software

52
00:02:09,840 --> 00:02:12,239
the reason why we consider software is

53
00:02:12,239 --> 00:02:14,239
that

54
00:02:14,239 --> 00:02:16,640
this the confidentiality and integrity

55
00:02:16,640 --> 00:02:18,560
protection in 5g

56
00:02:18,560 --> 00:02:21,200
is likely moved to the cloud and

57
00:02:21,200 --> 00:02:23,520
implement it in software

58
00:02:23,520 --> 00:02:26,800
besides the 5g downlink big data rate is

59
00:02:26,800 --> 00:02:29,440
20 gigabits per second

60
00:02:29,440 --> 00:02:31,440
the second requirement is about the

61
00:02:31,440 --> 00:02:33,599
security so they should be able to

62
00:02:33,599 --> 00:02:37,040
provide a 256 meter sector level to

63
00:02:37,040 --> 00:02:41,760
resist against content equip nurses

64
00:02:42,000 --> 00:02:45,040
for the 4g algorithms snook 3g and sukuc

65
00:02:45,040 --> 00:02:47,680
might not be the best candidates for 5g

66
00:02:47,680 --> 00:02:50,319
the first reason is that there exists

67
00:02:50,319 --> 00:02:52,959
academic attacks against them that are

68
00:02:52,959 --> 00:02:55,599
faster than exhaustive case search

69
00:02:55,599 --> 00:02:57,440
and the second reason is that their

70
00:02:57,440 --> 00:03:00,159
speeds in software are mostly below 10

71
00:03:00,159 --> 00:03:03,760
gigabits per second while 5g requires 20

72
00:03:03,760 --> 00:03:06,560
gigabits per second

73
00:03:06,560 --> 00:03:11,000
so uh based on the refresh motivation in

74
00:03:11,000 --> 00:03:15,040
2019 we designed a successor cipher of

75
00:03:15,040 --> 00:03:20,959
sun3g called snowbay intended for 5g use

76
00:03:21,280 --> 00:03:24,080
the picture shows the structure of snowy

77
00:03:24,080 --> 00:03:26,480
and we can say it follows the design

78
00:03:26,480 --> 00:03:29,200
rationale of sonos 3g with a linear part

79
00:03:29,200 --> 00:03:31,599
and a laning part

80
00:03:31,599 --> 00:03:34,720
the linear part consists of two afters

81
00:03:34,720 --> 00:03:37,599
we call them f a and f b

82
00:03:37,599 --> 00:03:39,920
they are all defined over the finite

83
00:03:39,920 --> 00:03:43,280
fields of size to the power of 16.

84
00:03:43,280 --> 00:03:46,720
each f has 16 stages

85
00:03:46,720 --> 00:03:47,599
and

86
00:03:47,599 --> 00:03:51,599
so this gives the after 512 bits in

87
00:03:51,599 --> 00:03:55,200
total we can regard the f just a state

88
00:03:55,200 --> 00:03:58,239
as for 128 bit

89
00:03:58,239 --> 00:04:01,280
registers that is for example the lower

90
00:04:01,280 --> 00:04:04,879
part of after a is regarded as a zero

91
00:04:04,879 --> 00:04:07,439
while the higher part of airsoft left a

92
00:04:07,439 --> 00:04:10,720
is denoted as a1

93
00:04:10,720 --> 00:04:12,480
so these two electrons

94
00:04:12,480 --> 00:04:14,799
fade into each other for example a0 is

95
00:04:14,799 --> 00:04:19,120
fading to b15 and b0 is faded into a50

96
00:04:19,120 --> 00:04:21,040
so we have carefully choosing the

97
00:04:21,040 --> 00:04:23,280
feedback polynomial such that such a

98
00:04:23,280 --> 00:04:25,759
construction can provide the maximum

99
00:04:25,759 --> 00:04:27,840
pure

100
00:04:27,840 --> 00:04:30,320
we also consider the implementation

101
00:04:30,320 --> 00:04:33,440
efficiency and the cryptography

102
00:04:33,440 --> 00:04:34,960
properties

103
00:04:34,960 --> 00:04:38,000
so each time for updating uh the after

104
00:04:38,000 --> 00:04:42,240
cracks eight times and after that to 110

105
00:04:42,240 --> 00:04:43,199
bit

106
00:04:43,199 --> 00:04:48,720
tabs t1 and t2 are sent to the fsm

107
00:04:49,040 --> 00:04:52,560
for the fsm it takes t1 and t2 and the

108
00:04:52,560 --> 00:04:53,600
inputs

109
00:04:53,600 --> 00:04:56,000
then outputs or keys in word which is

110
00:04:56,000 --> 00:04:58,880
also 128 bit

111
00:04:58,880 --> 00:05:02,720
it also has three registers r1 r2 and r3

112
00:05:02,720 --> 00:05:05,520
they are all 128 bit

113
00:05:05,520 --> 00:05:09,280
then we use two aes encryption runs as

114
00:05:09,280 --> 00:05:12,400
large s-boxes to update the registers

115
00:05:12,400 --> 00:05:15,199
for example r2 is updated from r1

116
00:05:15,199 --> 00:05:17,600
through one aes encryption

117
00:05:17,600 --> 00:05:20,720
and also r3 is updated from r2 so

118
00:05:20,720 --> 00:05:24,639
another as encryption

119
00:05:24,639 --> 00:05:28,240
while r1 is updated from r2 r3 and t2

120
00:05:28,240 --> 00:05:31,680
through operations like xor addition

121
00:05:31,680 --> 00:05:33,440
and a permutation

122
00:05:33,440 --> 00:05:36,800
sigma and here should say the expression

123
00:05:36,800 --> 00:05:38,479
of sigma for example

124
00:05:38,479 --> 00:05:41,199
the first byte the fourth byte is moved

125
00:05:41,199 --> 00:05:44,240
to the first position

126
00:05:44,240 --> 00:05:47,360
while the first byte is moved to the

127
00:05:47,360 --> 00:05:51,960
fourth position and so on

128
00:05:52,240 --> 00:05:54,560
when we use norway

129
00:05:54,560 --> 00:05:57,919
to encrypt data we need to first perform

130
00:05:57,919 --> 00:05:59,919
the initialization phase

131
00:05:59,919 --> 00:06:03,280
during this phase the cipher loads the k

132
00:06:03,280 --> 00:06:05,919
and iv to the f charge then runs the

133
00:06:05,919 --> 00:06:08,560
cipher for 16 watts without gaining

134
00:06:08,560 --> 00:06:10,479
giving any output

135
00:06:10,479 --> 00:06:12,880
after that the cipher starts to produce

136
00:06:12,880 --> 00:06:16,240
k swim words so in each iteration it

137
00:06:16,240 --> 00:06:20,160
first outputs a 128 bit casement works

138
00:06:20,160 --> 00:06:23,440
then it updates the fsm part and then

139
00:06:23,440 --> 00:06:25,440
updates the after part

140
00:06:25,440 --> 00:06:26,479
after

141
00:06:26,479 --> 00:06:29,919
that it enters the next iteration until

142
00:06:29,919 --> 00:06:32,840
all the data is

143
00:06:32,840 --> 00:06:36,479
encrypted we also proposed an aed mode

144
00:06:36,479 --> 00:06:37,759
to also

145
00:06:37,759 --> 00:06:41,680
provide authentication for the data

146
00:06:42,720 --> 00:06:45,680
since no way has been published

147
00:06:45,680 --> 00:06:47,600
there appeared

148
00:06:47,600 --> 00:06:49,120
some

149
00:06:49,120 --> 00:06:51,520
crypto nurses results

150
00:06:51,520 --> 00:06:53,280
which include gasoline return meal

151
00:06:53,280 --> 00:06:56,080
attacks new nuclear nurses integral

152
00:06:56,080 --> 00:06:58,720
attacks differential attacks and so on

153
00:06:58,720 --> 00:07:01,280
so in our paper we proposed two guest

154
00:07:01,280 --> 00:07:03,680
and return attacks of complexity to the

155
00:07:03,680 --> 00:07:08,560
power of 384 and to the power of 378

156
00:07:08,560 --> 00:07:11,919
which are lower than existing results

157
00:07:11,919 --> 00:07:14,800
we also proposed a distinguishing attack

158
00:07:14,800 --> 00:07:17,520
but against a simplified version of

159
00:07:17,520 --> 00:07:19,840
snowy with complexity to the power of

160
00:07:19,840 --> 00:07:21,759
303

161
00:07:21,759 --> 00:07:24,080
one advantage of our distinguishing

162
00:07:24,080 --> 00:07:25,919
attack is that it

163
00:07:25,919 --> 00:07:27,120
does

164
00:07:27,120 --> 00:07:29,840
not need the long key streams but only

165
00:07:29,840 --> 00:07:30,639
need

166
00:07:30,639 --> 00:07:33,840
many shortcut streams

167
00:07:34,319 --> 00:07:36,720
so next i will present more details of

168
00:07:36,720 --> 00:07:40,800
the two guest under determiner attacks

169
00:07:40,880 --> 00:07:44,080
the basic idea of a guest to

170
00:07:44,080 --> 00:07:46,080
determine attack is to guess some

171
00:07:46,080 --> 00:07:48,879
variables determine others based on

172
00:07:48,879 --> 00:07:53,440
perhaps some publicly lower relations

173
00:07:53,440 --> 00:07:56,319
in an external evaluation report of snow

174
00:07:56,319 --> 00:07:58,800
wave the authors proposed a gas under

175
00:07:58,800 --> 00:08:00,240
determine attack

176
00:08:00,240 --> 00:08:02,080
so regard the

177
00:08:02,080 --> 00:08:05,840
internal state of snow b as 7 128 bit

178
00:08:05,840 --> 00:08:07,440
variables

179
00:08:07,440 --> 00:08:10,960
then the first guess 3 variables r1 r2

180
00:08:10,960 --> 00:08:14,479
and r3 and based on the guest values

181
00:08:14,479 --> 00:08:16,879
they can determine the values of b0 and

182
00:08:16,879 --> 00:08:17,840
b1

183
00:08:17,840 --> 00:08:20,879
and a0 and in the end they need to guess

184
00:08:20,879 --> 00:08:24,000
the final variable a1

185
00:08:24,000 --> 00:08:26,879
so the guess and the determining process

186
00:08:26,879 --> 00:08:30,639
it can be illustrated as a tree and each

187
00:08:30,639 --> 00:08:32,320
branch is the

188
00:08:32,320 --> 00:08:35,680
guest under determining path

189
00:08:35,760 --> 00:08:38,240
since the gaussian basis involves four

190
00:08:38,240 --> 00:08:40,320
variables so the complexity is 2 to the

191
00:08:40,320 --> 00:08:43,800
power of 512.

192
00:08:44,480 --> 00:08:48,080
so in our paper we have one observation

193
00:08:48,080 --> 00:08:51,680
that if a variable appears twice in an

194
00:08:51,680 --> 00:08:54,000
equation with some nonlinear operations

195
00:08:54,000 --> 00:08:56,399
in between then this variable may have

196
00:08:56,399 --> 00:08:58,480
zero solutions

197
00:08:58,480 --> 00:09:00,880
then for these guess under determine

198
00:09:00,880 --> 00:09:03,200
paths we should just truncate them

199
00:09:03,200 --> 00:09:07,120
instead of going to the end

200
00:09:07,279 --> 00:09:10,320
so in our first guest android determine

201
00:09:10,320 --> 00:09:12,560
attack in the first step

202
00:09:12,560 --> 00:09:16,959
we need to guess uh r1 r2 and r3 uh with

203
00:09:16,959 --> 00:09:20,000
complexity to the power of 384 and this

204
00:09:20,000 --> 00:09:22,640
step is similar to the existing

205
00:09:22,640 --> 00:09:24,800
gas energy terminal attack

206
00:09:24,800 --> 00:09:26,880
then we can determine the values of b0

207
00:09:26,880 --> 00:09:31,519
and b1 and a0 and a1 remain unknown

208
00:09:31,519 --> 00:09:33,360
the second step is to determine the

209
00:09:33,360 --> 00:09:35,760
values of a0

210
00:09:35,760 --> 00:09:38,640
we found a conflicting equation for a0

211
00:09:38,640 --> 00:09:40,160
which is showing

212
00:09:40,160 --> 00:09:41,279
in the block

213
00:09:41,279 --> 00:09:44,240
so we can see a0 appears twice in the

214
00:09:44,240 --> 00:09:45,360
equation

215
00:09:45,360 --> 00:09:48,640
and there are some longing operations in

216
00:09:48,640 --> 00:09:52,959
between like modular additions

217
00:09:52,959 --> 00:09:54,880
so the question becomes how to

218
00:09:54,880 --> 00:09:57,920
efficiently get the solutions of a0 and

219
00:09:57,920 --> 00:10:00,399
we don't want to loop it because that

220
00:10:00,399 --> 00:10:03,680
requires high complexity

221
00:10:03,680 --> 00:10:06,160
in our paper we proposed a 10-step

222
00:10:06,160 --> 00:10:09,040
algorithm to get the solutions of a0 the

223
00:10:09,040 --> 00:10:12,640
basic idea is to divide a0 into bites

224
00:10:12,640 --> 00:10:15,519
and then categorize them into 10 groups

225
00:10:15,519 --> 00:10:18,640
of equations and get the solutions

226
00:10:18,640 --> 00:10:21,839
recursively with considering carries for

227
00:10:21,839 --> 00:10:23,680
example

228
00:10:23,680 --> 00:10:26,640
the figure shows how we compute the

229
00:10:26,640 --> 00:10:28,959
solutions of each groups

230
00:10:28,959 --> 00:10:31,120
we compute the solutions from right to

231
00:10:31,120 --> 00:10:32,399
the left

232
00:10:32,399 --> 00:10:34,800
when we compute the solution when we get

233
00:10:34,800 --> 00:10:36,880
the solutions of the equations on the

234
00:10:36,880 --> 00:10:40,000
right we can automatically get the

235
00:10:40,000 --> 00:10:42,399
values of the carries and this values of

236
00:10:42,399 --> 00:10:44,640
carries will be used to solve the

237
00:10:44,640 --> 00:10:48,640
equations on the left

238
00:10:49,279 --> 00:10:52,079
for each group of equations we can use

239
00:10:52,079 --> 00:10:54,880
lookup tables to get the to quickly get

240
00:10:54,880 --> 00:10:57,839
the solutions and the maximum size of

241
00:10:57,839 --> 00:11:00,399
table is 2 to the power of 68

242
00:11:00,399 --> 00:11:04,640
to 256 times 20.

243
00:11:04,640 --> 00:11:07,200
we experimentally computed the value the

244
00:11:07,200 --> 00:11:09,680
uh the probability of finite solutions

245
00:11:09,680 --> 00:11:13,200
which is 2 to the power of minus 3.91

246
00:11:13,200 --> 00:11:16,000
and the average number of guests

247
00:11:16,000 --> 00:11:18,000
valued guess than the determining pass

248
00:11:18,000 --> 00:11:19,920
is one

249
00:11:19,920 --> 00:11:23,440
so till now we have uh on average true

250
00:11:23,440 --> 00:11:26,000
to the power of 384

251
00:11:26,000 --> 00:11:31,120
solutions and a1 still remains unknown

252
00:11:31,120 --> 00:11:34,480
so our last step is to determine the

253
00:11:34,480 --> 00:11:36,560
value of a1

254
00:11:36,560 --> 00:11:38,160
and luckily we can

255
00:11:38,160 --> 00:11:42,079
find another conflicting equation for a1

256
00:11:42,079 --> 00:11:44,320
as shown in the block and we can see it

257
00:11:44,320 --> 00:11:47,680
has quite similar form to the equation

258
00:11:47,680 --> 00:11:50,560
for a0 and we can use the same way to

259
00:11:50,560 --> 00:11:53,040
derive the solutions of a1

260
00:11:53,040 --> 00:11:55,279
the results are the same so that is

261
00:11:55,279 --> 00:11:56,560
there is

262
00:11:56,560 --> 00:11:59,360
on average one vanity gas and determine

263
00:11:59,360 --> 00:12:01,680
pass

264
00:12:02,959 --> 00:12:03,920
so

265
00:12:03,920 --> 00:12:05,360
you are first to get some determine

266
00:12:05,360 --> 00:12:08,399
attack we guess the values of r1 r2 and

267
00:12:08,399 --> 00:12:12,079
r3 determine the values of b0 and b1 and

268
00:12:12,079 --> 00:12:15,279
solve the a0 and a1 using the 10-step

269
00:12:15,279 --> 00:12:18,000
algorithm with little complexity

270
00:12:18,000 --> 00:12:19,760
so the total complexity is 2 to the

271
00:12:19,760 --> 00:12:22,079
power of

272
00:12:22,839 --> 00:12:26,000
384 we were wondering if we can exploit

273
00:12:26,000 --> 00:12:29,040
more k-swing symbols to further reduce

274
00:12:29,040 --> 00:12:31,920
the complexity and in our second gate

275
00:12:31,920 --> 00:12:34,079
standard deuteronomy attack we

276
00:12:34,079 --> 00:12:37,519
also used the k-spin word z at clock t

277
00:12:37,519 --> 00:12:40,079
minus 2.

278
00:12:40,079 --> 00:12:43,360
so we found another conflicting equation

279
00:12:43,360 --> 00:12:47,440
for another intermediate variable b0 at

280
00:12:47,440 --> 00:12:49,120
t minus 1.

281
00:12:49,120 --> 00:12:51,519
we computed the probability of finding

282
00:12:51,519 --> 00:12:53,519
the solutions of b zero at

283
00:12:53,519 --> 00:12:56,480
t minus one which is two to the power of

284
00:12:56,480 --> 00:12:59,760
minus five point eight four

285
00:12:59,760 --> 00:13:03,200
so on only a one b zero at clock t minus

286
00:13:03,200 --> 00:13:07,040
one has solutions we will proceed with

287
00:13:07,040 --> 00:13:10,000
guessing the three variables r1 r2 and

288
00:13:10,000 --> 00:13:11,839
r3 so the

289
00:13:11,839 --> 00:13:14,800
complexity is computed as pz times to

290
00:13:14,800 --> 00:13:16,880
the power of 384

291
00:13:16,880 --> 00:13:18,399
and which is

292
00:13:18,399 --> 00:13:21,360
2 to the power of 378

293
00:13:21,360 --> 00:13:23,920
but uh but this attack uh leaves a table

294
00:13:23,920 --> 00:13:25,040
of size

295
00:13:25,040 --> 00:13:26,720
two to the power of one hundred and

296
00:13:26,720 --> 00:13:29,200
twenty eight

297
00:13:29,600 --> 00:13:32,480
so uh to summarize our guest under

298
00:13:32,480 --> 00:13:35,040
determine text we found three

299
00:13:35,040 --> 00:13:38,560
conflicting equations for a0 a1 and

300
00:13:38,560 --> 00:13:41,360
another intermediate variable

301
00:13:41,360 --> 00:13:44,240
and if we found there are no solutions

302
00:13:44,240 --> 00:13:46,720
for these area variables we don't need

303
00:13:46,720 --> 00:13:49,920
to go go deeper but it's just a twist

304
00:13:49,920 --> 00:13:52,560
bike to get some other values for

305
00:13:52,560 --> 00:13:53,680
example

306
00:13:53,680 --> 00:13:56,240
at this question determine

307
00:13:56,240 --> 00:13:58,800
pause we found that a0 does not have any

308
00:13:58,800 --> 00:14:01,920
solutions then we don't need to go to a1

309
00:14:01,920 --> 00:14:04,480
we just twist bike and go to another gas

310
00:14:04,480 --> 00:14:06,720
under determining path

311
00:14:06,720 --> 00:14:08,560
by doing this we can reduce the

312
00:14:08,560 --> 00:14:10,720
complexity from two to the power of five

313
00:14:10,720 --> 00:14:12,880
hundred twelve to two to the power of

314
00:14:12,880 --> 00:14:17,000
three hundred and seventy eight

315
00:14:17,040 --> 00:14:19,279
next i will show our

316
00:14:19,279 --> 00:14:23,040
linear cryptanosis of snow way

317
00:14:23,040 --> 00:14:24,959
actually we were considering a

318
00:14:24,959 --> 00:14:27,120
simplified version of snowing in which

319
00:14:27,120 --> 00:14:30,240
the 32-bit adders are replaced with the

320
00:14:30,240 --> 00:14:33,279
x or operations then the only

321
00:14:33,279 --> 00:14:35,360
longing operations in

322
00:14:35,360 --> 00:14:37,519
in this version is

323
00:14:37,519 --> 00:14:39,920
xbox

324
00:14:39,920 --> 00:14:41,839
so we consider three consecutive

325
00:14:41,839 --> 00:14:44,560
casement words and the expressions are

326
00:14:44,560 --> 00:14:45,839
shown here

327
00:14:45,839 --> 00:14:48,639
b 0 b 1 a 0

328
00:14:48,639 --> 00:14:50,800
are the contribution from the f sharp

329
00:14:50,800 --> 00:14:54,160
and we want to cancel them out

330
00:14:54,160 --> 00:14:57,279
so to cancel out a b 0 and b 1 we only

331
00:14:57,279 --> 00:15:01,760
need to apply two linear uh masks to the

332
00:15:01,760 --> 00:15:04,160
t minus one and they team specifically

333
00:15:04,160 --> 00:15:08,000
or apply the mask l beta and edge beta

334
00:15:08,000 --> 00:15:08,800
so

335
00:15:08,800 --> 00:15:11,199
when we add the three key spin words

336
00:15:11,199 --> 00:15:15,360
the ao beta b0 and h beta b1 will be

337
00:15:15,360 --> 00:15:17,920
cancelled

338
00:15:17,920 --> 00:15:20,959
then we need to cancel a0 remember that

339
00:15:20,959 --> 00:15:24,320
the expression of sigma is shown here

340
00:15:24,320 --> 00:15:27,279
we can introduce term by space to um

341
00:15:27,279 --> 00:15:30,480
the based on sigma for example the

342
00:15:30,480 --> 00:15:32,000
um

343
00:15:32,000 --> 00:15:36,880
the byte e1 is uh computed as w1 uh xor

344
00:15:36,880 --> 00:15:40,639
w4 this is because uh the the fourth

345
00:15:40,639 --> 00:15:44,000
byte is moved to position one while the

346
00:15:44,000 --> 00:15:46,959
first byte is moved to position four so

347
00:15:46,959 --> 00:15:49,360
if we add these two

348
00:15:49,360 --> 00:15:50,240
bytes

349
00:15:50,240 --> 00:15:54,240
uh sigma a0 plus a0 at this position

350
00:15:54,240 --> 00:15:55,839
with these two positions will be

351
00:15:55,839 --> 00:15:58,240
cancelled cancel out

352
00:15:58,240 --> 00:15:59,279
so through

353
00:15:59,279 --> 00:16:02,399
this term bytes the after contribution

354
00:16:02,399 --> 00:16:03,199
uh

355
00:16:03,199 --> 00:16:06,399
after contribution is cancelled

356
00:16:06,399 --> 00:16:09,839
so now each ei byte only contains bytes

357
00:16:09,839 --> 00:16:13,279
from r1 r2 r3 and their s boxes or

358
00:16:13,279 --> 00:16:16,240
inverse x boxes and now it is possible

359
00:16:16,240 --> 00:16:18,720
to explore or buyers locally that means

360
00:16:18,720 --> 00:16:22,000
we only need very short key streams so

361
00:16:22,000 --> 00:16:24,639
we can introduce our noise and which is

362
00:16:24,639 --> 00:16:27,360
the linear combination of the 10 bytes

363
00:16:27,360 --> 00:16:30,160
and the ci's are linear masking matrices

364
00:16:30,160 --> 00:16:33,920
that we want to explore

365
00:16:34,000 --> 00:16:37,199
so we can expand the expression of the

366
00:16:37,199 --> 00:16:40,800
noise n and a and b coefficient

367
00:16:40,800 --> 00:16:44,240
matrices are the coefficient matrices

368
00:16:44,240 --> 00:16:47,360
so each row of the two vectors

369
00:16:47,360 --> 00:16:51,360
did not actually denote to one xbox app

370
00:16:51,360 --> 00:16:54,880
summation for example the first

371
00:16:54,880 --> 00:16:56,079
row

372
00:16:56,079 --> 00:16:57,600
the r1

373
00:16:57,600 --> 00:17:03,600
at byte 0 and s r1 at bat 0 denotes the

374
00:17:03,600 --> 00:17:06,720
denote denotes one x-box approximation

375
00:17:06,720 --> 00:17:10,160
and the uh coefficients of the x-box

376
00:17:10,160 --> 00:17:13,760
approximation is determined by a b and

377
00:17:13,760 --> 00:17:16,319
also c

378
00:17:17,119 --> 00:17:20,160
in this case there are in total up to uh

379
00:17:20,160 --> 00:17:23,199
48 s applications

380
00:17:23,199 --> 00:17:26,959
and if a same column of say a and

381
00:17:26,959 --> 00:17:30,160
say b here are zero this

382
00:17:30,160 --> 00:17:33,120
as corresponding xbox app summation will

383
00:17:33,120 --> 00:17:35,440
be cancelled

384
00:17:35,440 --> 00:17:38,640
so now our goal is to choose a linear

385
00:17:38,640 --> 00:17:40,799
masking matrix say to cancel as many

386
00:17:40,799 --> 00:17:44,160
xboxes as possible

387
00:17:44,320 --> 00:17:47,120
note that if t s box approximations are

388
00:17:47,120 --> 00:17:50,160
can be cancelled then c a and c b at

389
00:17:50,160 --> 00:17:53,600
these two columns should be zero

390
00:17:53,600 --> 00:17:56,080
so we can choose different k columns of

391
00:17:56,080 --> 00:17:59,840
c a and c b and construct a matrix

392
00:17:59,840 --> 00:18:02,320
and we want to find a non-zero matrix c

393
00:18:02,320 --> 00:18:05,600
such that 3 times k equals to 0 that

394
00:18:05,600 --> 00:18:09,120
means the x boxes are cancelled

395
00:18:09,120 --> 00:18:11,120
so what we need to do is to perform

396
00:18:11,120 --> 00:18:13,600
gaussian elimination on k and at the

397
00:18:13,600 --> 00:18:16,960
same time perform the same operations on

398
00:18:16,960 --> 00:18:17,919
the

399
00:18:17,919 --> 00:18:19,840
identity matrix i

400
00:18:19,840 --> 00:18:23,600
so if the last w rows of k are 0 the

401
00:18:23,600 --> 00:18:26,840
last w of i becomes the

402
00:18:26,840 --> 00:18:29,360
same mask

403
00:18:29,360 --> 00:18:32,000
so then the value of w is also

404
00:18:32,000 --> 00:18:34,640
determined

405
00:18:34,960 --> 00:18:37,520
in our attack we can cancel

406
00:18:37,520 --> 00:18:41,520
nine x-boxes and w equals sixteen

407
00:18:41,520 --> 00:18:43,760
we have computed the bias is true to the

408
00:18:43,760 --> 00:18:48,559
power of 300 minus 303 and also then we

409
00:18:48,559 --> 00:18:50,559
can have a distinguishing attack

410
00:18:50,559 --> 00:18:52,320
of complexity to the power of three

411
00:18:52,320 --> 00:18:55,960
hundred minus three

412
00:18:56,000 --> 00:18:58,559
i mentioned our distinguishing attack

413
00:18:58,559 --> 00:19:01,679
does not need any uh long key streams

414
00:19:01,679 --> 00:19:03,440
and this is because the after

415
00:19:03,440 --> 00:19:07,360
contribution a0 b0 b1 appears twice uh

416
00:19:07,360 --> 00:19:08,559
in the

417
00:19:08,559 --> 00:19:10,720
in the expression of three key string

418
00:19:10,720 --> 00:19:13,200
words and then we can just cancel them

419
00:19:13,200 --> 00:19:14,799
locally

420
00:19:14,799 --> 00:19:17,600
then it becomes possible to explore a

421
00:19:17,600 --> 00:19:20,640
biased combination between the three

422
00:19:20,640 --> 00:19:23,360
registers in the fsm

423
00:19:23,360 --> 00:19:27,919
on other hand the last lfc variable a1

424
00:19:27,919 --> 00:19:30,640
does not appear at all

425
00:19:30,640 --> 00:19:32,720
in the express in the expression of the

426
00:19:32,720 --> 00:19:35,280
three key spin words

427
00:19:35,280 --> 00:19:38,160
so in our proposed snowy very

428
00:19:38,160 --> 00:19:39,840
interesting vi

429
00:19:39,840 --> 00:19:42,799
based on this observation we made

430
00:19:42,799 --> 00:19:45,840
one modification

431
00:19:45,840 --> 00:19:47,919
the two figures shows uh

432
00:19:47,919 --> 00:19:50,320
modifications in the after part of of

433
00:19:50,320 --> 00:19:52,320
snowy

434
00:19:52,320 --> 00:19:53,679
and the

435
00:19:53,679 --> 00:19:54,799
the

436
00:19:54,799 --> 00:19:58,720
medications are called uh colored

437
00:19:58,720 --> 00:20:01,520
uh the red one denotes some medication

438
00:20:01,520 --> 00:20:04,000
which is relevant to our distinguishing

439
00:20:04,000 --> 00:20:06,880
attack so specifically we have moved the

440
00:20:06,880 --> 00:20:09,840
tap position of t2 from the lower part

441
00:20:09,840 --> 00:20:11,360
that is a0

442
00:20:11,360 --> 00:20:15,679
to the higher part of left a that is a1

443
00:20:15,679 --> 00:20:18,480
and in this case the value of a1 will be

444
00:20:18,480 --> 00:20:21,200
sent to the fsm

445
00:20:21,200 --> 00:20:22,960
quickly and

446
00:20:22,960 --> 00:20:26,880
then will appear in the key stream word

447
00:20:26,880 --> 00:20:28,559
and

448
00:20:28,559 --> 00:20:32,159
it only appears once in the expression

449
00:20:32,159 --> 00:20:35,200
and this means that the company linear

450
00:20:35,200 --> 00:20:36,880
combination of the three key stream

451
00:20:36,880 --> 00:20:40,320
worlds will become balanced and then it

452
00:20:40,320 --> 00:20:41,600
we cannot

453
00:20:41,600 --> 00:20:45,360
explore our buyers anymore

454
00:20:45,679 --> 00:20:46,400
so

455
00:20:46,400 --> 00:20:48,240
finally i would like to give a

456
00:20:48,240 --> 00:20:49,919
conclusion

457
00:20:49,919 --> 00:20:52,720
snow whey is the cipher designed for 5g

458
00:20:52,720 --> 00:20:55,039
and it is currently under evaluation in

459
00:20:55,039 --> 00:20:56,640
the sage group

460
00:20:56,640 --> 00:20:58,880
in our paper we propose to two gas and

461
00:20:58,880 --> 00:21:01,120
determine attacks against snow bin with

462
00:21:01,120 --> 00:21:04,559
complexity to the power of 384 and to

463
00:21:04,559 --> 00:21:07,280
the power of 378.

464
00:21:07,280 --> 00:21:09,039
we pointed out

465
00:21:09,039 --> 00:21:11,360
in our paper that the complexity of the

466
00:21:11,360 --> 00:21:13,200
guest and determine attacks

467
00:21:13,200 --> 00:21:15,039
should be determined by the number of

468
00:21:15,039 --> 00:21:17,360
the full guest under determining path

469
00:21:17,360 --> 00:21:19,840
and based on this we designed

470
00:21:19,840 --> 00:21:20,720
guests

471
00:21:20,720 --> 00:21:23,280
and determined strategies to explore

472
00:21:23,280 --> 00:21:26,080
conflicts and truncate some guests and

473
00:21:26,080 --> 00:21:28,720
determine paths

474
00:21:28,720 --> 00:21:31,520
our linear hypnosis results into a

475
00:21:31,520 --> 00:21:34,080
distinguishing attack of of a variant of

476
00:21:34,080 --> 00:21:36,559
snow bay with complexity to the power of

477
00:21:36,559 --> 00:21:38,400
303

478
00:21:38,400 --> 00:21:40,960
and this attack results in one

479
00:21:40,960 --> 00:21:45,360
modification in snow weight eye

480
00:21:45,360 --> 00:21:48,000
in the end i would like to mention our

481
00:21:48,000 --> 00:21:49,919
latest attack

482
00:21:49,919 --> 00:21:51,760
against novi

483
00:21:51,760 --> 00:21:55,200
this work uh was published

484
00:21:55,200 --> 00:21:57,760
in the europe conference this year it

485
00:21:57,760 --> 00:21:59,679
was a correctional attack and the

486
00:21:59,679 --> 00:22:04,440
complexity is to the power of 240.

487
00:22:05,200 --> 00:22:08,240
this attack does not uh pose a direct

488
00:22:08,240 --> 00:22:10,559
rate to the practic practical use of

489
00:22:10,559 --> 00:22:13,600
snow way because the length of the k

490
00:22:13,600 --> 00:22:16,559
swim key streams in snow bay is limited

491
00:22:16,559 --> 00:22:19,280
to to the power of 64.

492
00:22:19,280 --> 00:22:22,240
but it still indicates that snowy can be

493
00:22:22,240 --> 00:22:24,720
improved

494
00:22:25,200 --> 00:22:29,919
so in the um in a 3gb document draft

495
00:22:29,919 --> 00:22:32,000
about uh

496
00:22:32,000 --> 00:22:34,799
ang snos reggie and snobby

497
00:22:34,799 --> 00:22:39,280
uh it writes sa3 kindly asks sage to

498
00:22:39,280 --> 00:22:41,280
assess the research paper mentioned

499
00:22:41,280 --> 00:22:44,159
above and determine any implications as

500
00:22:44,159 --> 00:22:45,840
norway

501
00:22:45,840 --> 00:22:47,760
and subjected to the outcome of the

502
00:22:47,760 --> 00:22:51,760
previous action sa3 kindly asks sage to

503
00:22:51,760 --> 00:22:55,280
proceed with the development of 256 feet

504
00:22:55,280 --> 00:22:58,000
of encryption and integrate

505
00:22:58,000 --> 00:23:01,200
algorithm specifications based on snowy

506
00:23:01,200 --> 00:23:03,840
so this means this indicates that snow

507
00:23:03,840 --> 00:23:05,919
they might need some further

508
00:23:05,919 --> 00:23:07,679
modifications

509
00:23:07,679 --> 00:23:11,600
and als and also it still indicates that

510
00:23:11,600 --> 00:23:14,400
snow way can still be promising for five

511
00:23:14,400 --> 00:23:16,240
to use

512
00:23:16,240 --> 00:23:18,640
so with that i would end my presentation

513
00:23:18,640 --> 00:23:22,760
thank you very much for the listening

