1
00:00:00,240 --> 00:00:01,599
hello everyone

2
00:00:01,599 --> 00:00:04,000
my name is raghvindra rohit

3
00:00:04,000 --> 00:00:07,680
today i am going to present our work

4
00:00:07,680 --> 00:00:09,519
misuse free key recovery and

5
00:00:09,519 --> 00:00:11,599
distinguishing attacks on seven round

6
00:00:11,599 --> 00:00:13,120
desk

7
00:00:13,120 --> 00:00:15,040
this is a joint work with

8
00:00:15,040 --> 00:00:20,480
kaihu sumathu sarkar and siwaisan

9
00:00:22,240 --> 00:00:25,920
here is the outline for the today's talk

10
00:00:25,920 --> 00:00:28,640
first i will give an overview of the

11
00:00:28,640 --> 00:00:30,720
ascon algorithm

12
00:00:30,720 --> 00:00:31,599
next

13
00:00:31,599 --> 00:00:34,800
i will present what we mean by misuse

14
00:00:34,800 --> 00:00:36,480
free attacks

15
00:00:36,480 --> 00:00:38,960
then i will present

16
00:00:38,960 --> 00:00:41,200
some key recovery attacks on seven round

17
00:00:41,200 --> 00:00:42,160
s con

18
00:00:42,160 --> 00:00:46,078
and some new distinguishers

19
00:00:48,160 --> 00:00:50,239
let's start with the

20
00:00:50,239 --> 00:00:52,800
description of algorithm description of

21
00:00:52,800 --> 00:00:55,199
ascon

22
00:00:55,760 --> 00:00:57,360
so ascot was

23
00:00:57,360 --> 00:00:59,840
designed by dorfried

24
00:00:59,840 --> 00:01:04,319
excellent mandel and saffer in 2014

25
00:01:04,319 --> 00:01:06,880
initially it was submitted to the

26
00:01:06,880 --> 00:01:09,520
caesar competition and

27
00:01:09,520 --> 00:01:10,960
it is

28
00:01:10,960 --> 00:01:12,960
one of the winner of the same

29
00:01:12,960 --> 00:01:14,880
competition in the lightweight

30
00:01:14,880 --> 00:01:17,360
applications category

31
00:01:17,360 --> 00:01:18,720
also

32
00:01:18,720 --> 00:01:21,759
right now it is a finalist uh finalist

33
00:01:21,759 --> 00:01:24,720
out of the 10 candidates of the ongoing

34
00:01:24,720 --> 00:01:26,320
ministry lightweight cryptography

35
00:01:26,320 --> 00:01:28,720
project

36
00:01:29,360 --> 00:01:32,479
so at a very high level if we look into

37
00:01:32,479 --> 00:01:33,759
the s com

38
00:01:33,759 --> 00:01:37,439
then it takes as input the secret key

39
00:01:37,439 --> 00:01:38,799
nonce and

40
00:01:38,799 --> 00:01:41,680
associate data a message m

41
00:01:41,680 --> 00:01:44,880
and then it outputs a ciphertext c

42
00:01:44,880 --> 00:01:46,799
whose length equals the length of the

43
00:01:46,799 --> 00:01:48,240
message m

44
00:01:48,240 --> 00:01:51,119
and an authentication type d

45
00:01:51,119 --> 00:01:54,960
here uh the tag t provides the integrity

46
00:01:54,960 --> 00:01:57,439
and authenticity for the nonce

47
00:01:57,439 --> 00:02:01,360
associate data and message

48
00:02:02,000 --> 00:02:05,680
now if we look into how ascon works

49
00:02:05,680 --> 00:02:06,640
then

50
00:02:06,640 --> 00:02:08,720
it is based on the

51
00:02:08,720 --> 00:02:10,239
well-known

52
00:02:10,239 --> 00:02:13,599
uh sponge duplex mode of operation

53
00:02:13,599 --> 00:02:15,520
so there are four pieces there are four

54
00:02:15,520 --> 00:02:16,959
phases

55
00:02:16,959 --> 00:02:20,239
uh the first phase is initialization

56
00:02:20,239 --> 00:02:22,800
where the state and where the secret key

57
00:02:22,800 --> 00:02:24,959
and the nouns are processed by the

58
00:02:24,959 --> 00:02:26,319
permutation

59
00:02:26,319 --> 00:02:27,840
p a

60
00:02:27,840 --> 00:02:30,480
then we have the sqc data processing

61
00:02:30,480 --> 00:02:32,800
plain text processing

62
00:02:32,800 --> 00:02:35,120
uh where we generate the ciphertext and

63
00:02:35,120 --> 00:02:37,040
in the end we have the finalizing phase

64
00:02:37,040 --> 00:02:38,640
where we generate the

65
00:02:38,640 --> 00:02:41,599
authentication tag t

66
00:02:41,599 --> 00:02:45,519
so uh here the if you note that uh

67
00:02:45,519 --> 00:02:47,360
during the initialization and the

68
00:02:47,360 --> 00:02:50,239
finalizing phases the number of rounds

69
00:02:50,239 --> 00:02:53,360
of the s count permutations are a

70
00:02:53,360 --> 00:02:55,760
while for the other two phases

71
00:02:55,760 --> 00:02:58,480
the number of rounds is v

72
00:02:58,480 --> 00:03:02,640
now uh based on the amount of data

73
00:03:02,640 --> 00:03:04,879
the s-con processes

74
00:03:04,879 --> 00:03:07,680
which is actually our bits per call of

75
00:03:07,680 --> 00:03:10,480
the permutation and the number of rounds

76
00:03:10,480 --> 00:03:12,720
there are two variants of s-com which

77
00:03:12,720 --> 00:03:14,560
are s-con 128

78
00:03:14,560 --> 00:03:17,360
and s-con 128

79
00:03:17,360 --> 00:03:20,159
the only difference is in the rate r

80
00:03:20,159 --> 00:03:22,239
and the number of rounds of

81
00:03:22,239 --> 00:03:24,560
bb

82
00:03:26,000 --> 00:03:28,319
now if we look into the wrong function

83
00:03:28,319 --> 00:03:29,599
of s con

84
00:03:29,599 --> 00:03:33,760
then it consists of three uh operations

85
00:03:33,760 --> 00:03:36,159
the first one is pc

86
00:03:36,159 --> 00:03:38,400
where the round constraint where the

87
00:03:38,400 --> 00:03:40,319
eight bit round constraint

88
00:03:40,319 --> 00:03:43,680
is added to the second 64

89
00:03:43,680 --> 00:03:47,519
bit word of the state then we have the

90
00:03:47,519 --> 00:03:49,599
substitution layer where the

91
00:03:49,599 --> 00:03:50,720
s box

92
00:03:50,720 --> 00:03:52,159
is applied

93
00:03:52,159 --> 00:03:55,599
on each of the 64 columns

94
00:03:55,599 --> 00:03:57,519
after that uh

95
00:03:57,519 --> 00:03:59,599
this is a diffusion layer where

96
00:03:59,599 --> 00:04:02,400
the rows are where each rose is mixed

97
00:04:02,400 --> 00:04:05,200
among themselves

98
00:04:05,360 --> 00:04:06,879
so

99
00:04:06,879 --> 00:04:11,200
if we look into the s-box then the

100
00:04:11,200 --> 00:04:14,879
s-cone s-box has algebraic degree 2

101
00:04:14,879 --> 00:04:17,279
which is given here and then

102
00:04:17,279 --> 00:04:19,759
we have then the linear layer

103
00:04:19,759 --> 00:04:20,959
consists

104
00:04:20,959 --> 00:04:23,199
simply consists of the

105
00:04:23,199 --> 00:04:25,840
bitwise xor operations and right cycle

106
00:04:25,840 --> 00:04:27,680
except

107
00:04:27,680 --> 00:04:28,400
so

108
00:04:28,400 --> 00:04:29,520
if you see

109
00:04:29,520 --> 00:04:31,440
here each word

110
00:04:31,440 --> 00:04:32,240
uh

111
00:04:32,240 --> 00:04:34,000
is mixed

112
00:04:34,000 --> 00:04:35,600
with its

113
00:04:35,600 --> 00:04:38,000
rotated version so for example

114
00:04:38,000 --> 00:04:39,120
y 0

115
00:04:39,120 --> 00:04:42,960
is y 0 x or with y 0 right separated by

116
00:04:42,960 --> 00:04:46,400
19 and then again x or it's shifted

117
00:04:46,400 --> 00:04:47,680
coffee by

118
00:04:47,680 --> 00:04:49,680
28 bits

119
00:04:49,680 --> 00:04:52,240
so the only difference here is uh for

120
00:04:52,240 --> 00:04:54,479
the other words the rotation constants

121
00:04:54,479 --> 00:04:57,800
are different

122
00:04:58,080 --> 00:05:00,560
okay so now

123
00:05:00,560 --> 00:05:02,880
let's look into uh

124
00:05:02,880 --> 00:05:04,080
what we

125
00:05:04,080 --> 00:05:07,840
mean by misuse free attacks

126
00:05:07,840 --> 00:05:10,400
so before going into that

127
00:05:10,400 --> 00:05:12,960
let's uh see what are the security

128
00:05:12,960 --> 00:05:16,800
claims of the ascon designers

129
00:05:16,800 --> 00:05:18,639
so

130
00:05:18,639 --> 00:05:22,800
they mentioned that for 128-bit security

131
00:05:22,800 --> 00:05:24,800
the number of uh

132
00:05:24,800 --> 00:05:28,000
plain text and associated blocks that

133
00:05:28,000 --> 00:05:31,440
can be processed by a single key

134
00:05:31,440 --> 00:05:33,039
is limited to

135
00:05:33,039 --> 00:05:35,759
a total of total power 64

136
00:05:35,759 --> 00:05:37,600
blocks

137
00:05:37,600 --> 00:05:39,840
and

138
00:05:39,919 --> 00:05:44,400
the second uh condition was uh

139
00:05:44,479 --> 00:05:47,600
to ensure that uh the public

140
00:05:47,600 --> 00:05:48,960
uh nonce

141
00:05:48,960 --> 00:05:51,680
should not be repeated for the two

142
00:05:51,680 --> 00:05:53,919
encryptions otherwise you know the

143
00:05:53,919 --> 00:05:55,680
difference of the key streams and then

144
00:05:55,680 --> 00:05:57,840
they will be attacked so not should not

145
00:05:57,840 --> 00:05:59,759
be repeated

146
00:05:59,759 --> 00:06:01,360
now uh

147
00:06:01,360 --> 00:06:03,520
given these uh

148
00:06:03,520 --> 00:06:05,120
two conditions

149
00:06:05,120 --> 00:06:08,560
uh we see like what is the

150
00:06:08,560 --> 00:06:12,000
attack target in this world

151
00:06:12,000 --> 00:06:14,240
so our attack basically

152
00:06:14,240 --> 00:06:16,160
focuses on the initialization phase of

153
00:06:16,160 --> 00:06:17,360
the s code

154
00:06:17,360 --> 00:06:19,759
where we

155
00:06:20,080 --> 00:06:20,800
we

156
00:06:20,800 --> 00:06:22,880
take the associated length as zero and

157
00:06:22,880 --> 00:06:24,960
we'll just work with one block of the

158
00:06:24,960 --> 00:06:27,360
plain text block

159
00:06:27,360 --> 00:06:29,039
so

160
00:06:29,039 --> 00:06:32,479
the question here is like uh

161
00:06:32,479 --> 00:06:34,800
since there are 12 rounds in in the

162
00:06:34,800 --> 00:06:37,280
initialization phase so

163
00:06:37,280 --> 00:06:39,440
given the

164
00:06:39,440 --> 00:06:41,840
outputs which are cipher text how many

165
00:06:41,840 --> 00:06:45,199
rounds out of toy we can attack

166
00:06:45,199 --> 00:06:46,160
and

167
00:06:46,160 --> 00:06:47,840
attack in the noise respecting setting

168
00:06:47,840 --> 00:06:49,599
so we don't uh

169
00:06:49,599 --> 00:06:52,560
so the question here is the noise value

170
00:06:52,560 --> 00:06:55,039
should not be repeated

171
00:06:55,039 --> 00:06:56,160
then the

172
00:06:56,160 --> 00:06:58,720
second question is are we targeting the

173
00:06:58,720 --> 00:07:00,720
key recovery attacks

174
00:07:00,720 --> 00:07:03,039
so that means you are recovering the

175
00:07:03,039 --> 00:07:06,560
key inwards k 0 and k 1 or just simply

176
00:07:06,560 --> 00:07:08,639
distinguishing the outputs

177
00:07:08,639 --> 00:07:09,520
uh

178
00:07:09,520 --> 00:07:13,120
which are given by the ciphertext c

179
00:07:13,120 --> 00:07:14,319
so now

180
00:07:14,319 --> 00:07:16,560
now we look into what mean mean by

181
00:07:16,560 --> 00:07:18,080
misuse free

182
00:07:18,080 --> 00:07:21,120
so if the data complexity

183
00:07:21,120 --> 00:07:23,919
of the entire attack is less than 2 to

184
00:07:23,919 --> 00:07:26,000
the 64. basically

185
00:07:26,000 --> 00:07:28,479
it fulfills the designers requirements

186
00:07:28,479 --> 00:07:31,120
then we call it as misuse free

187
00:07:31,120 --> 00:07:35,599
otherwise there could be an attacks on

188
00:07:35,599 --> 00:07:37,520
s call which requires more than 2 to the

189
00:07:37,520 --> 00:07:40,319
power 64 although they could be generic

190
00:07:40,319 --> 00:07:42,240
but the data complexity is more than 2

191
00:07:42,240 --> 00:07:44,639
to the power 64. for uh

192
00:07:44,639 --> 00:07:46,800
so basically they are not satisfying one

193
00:07:46,800 --> 00:07:49,360
of the requirement of the designers but

194
00:07:49,360 --> 00:07:52,240
still they are generic

195
00:07:52,240 --> 00:07:54,960
okay so now we look into the existing

196
00:07:54,960 --> 00:07:57,599
results existing key recovery attacks on

197
00:07:57,599 --> 00:07:58,879
s con

198
00:07:58,879 --> 00:08:00,639
then

199
00:08:00,639 --> 00:08:02,080
if we

200
00:08:02,080 --> 00:08:04,080
so we basically divide the existing

201
00:08:04,080 --> 00:08:06,240
results into two categories in the valid

202
00:08:06,240 --> 00:08:08,000
and some of them are valid

203
00:08:08,000 --> 00:08:10,479
where the data complexity is less than

204
00:08:10,479 --> 00:08:12,479
two to the power 64

205
00:08:12,479 --> 00:08:14,319
and the other

206
00:08:14,319 --> 00:08:16,639
where the data complexity is more than 2

207
00:08:16,639 --> 00:08:18,479
to the power 64.

208
00:08:18,479 --> 00:08:21,280
so if you see the best attack and

209
00:08:21,280 --> 00:08:23,039
the cover

210
00:08:23,039 --> 00:08:26,000
till 6 rounds and it requires data and

211
00:08:26,000 --> 00:08:28,160
time due to power 64.

212
00:08:28,160 --> 00:08:29,599
although there is an attack on seven

213
00:08:29,599 --> 00:08:30,879
rounds with

214
00:08:30,879 --> 00:08:32,320
uh time

215
00:08:32,320 --> 00:08:34,479
two to two power one zero three

216
00:08:34,479 --> 00:08:36,880
but the data complexity of this attacks

217
00:08:36,880 --> 00:08:38,000
is

218
00:08:38,000 --> 00:08:40,880
more than two to the power sixty 64.

219
00:08:40,880 --> 00:08:42,159
so

220
00:08:42,159 --> 00:08:46,640
we ask ourselves another uh there is

221
00:08:46,640 --> 00:08:49,120
whether there is an attack on seven

222
00:08:49,120 --> 00:08:52,240
rounds where the designers requirements

223
00:08:52,240 --> 00:08:54,560
are not violated

224
00:08:54,560 --> 00:08:55,440
so

225
00:08:55,440 --> 00:08:57,200
that's what uh

226
00:08:57,200 --> 00:08:59,120
we

227
00:08:59,120 --> 00:09:00,320
they give here

228
00:09:00,320 --> 00:09:02,320
we present an attack on seven round

229
00:09:02,320 --> 00:09:03,600
discount

230
00:09:03,600 --> 00:09:05,680
which requires student abortion to three

231
00:09:05,680 --> 00:09:09,519
data sorry uh two to about 23 time and

232
00:09:09,519 --> 00:09:11,920
the data is 2 to the power 64 and it's

233
00:09:11,920 --> 00:09:15,600
based on the idea of uh kubertex

234
00:09:15,600 --> 00:09:18,560
in terms of distinguishers so till now

235
00:09:18,560 --> 00:09:21,440
the best distinguishers can

236
00:09:21,440 --> 00:09:23,360
reach up to six rounds

237
00:09:23,360 --> 00:09:27,680
and they require two to about 33 data

238
00:09:27,680 --> 00:09:28,959
so

239
00:09:28,959 --> 00:09:29,920
we

240
00:09:29,920 --> 00:09:32,399
present new distinguishes here uh

241
00:09:32,399 --> 00:09:35,680
starting round four to round seven

242
00:09:35,680 --> 00:09:36,560
and

243
00:09:36,560 --> 00:09:40,240
all the all our distinguishers uh

244
00:09:40,240 --> 00:09:42,800
required data which is

245
00:09:42,800 --> 00:09:45,279
much less than two to the power 64. so

246
00:09:45,279 --> 00:09:47,680
all these distinguishers we found using

247
00:09:47,680 --> 00:09:51,560
the division property

248
00:09:52,480 --> 00:09:55,600
okay now let's look into

249
00:09:55,600 --> 00:09:59,680
the key recovery attacks on seven round

250
00:09:59,680 --> 00:10:03,360
okay so the basic idea for

251
00:10:03,360 --> 00:10:05,519
attack is based on the principles of

252
00:10:05,519 --> 00:10:06,959
cuba tech

253
00:10:06,959 --> 00:10:09,040
so for example consider a boolean

254
00:10:09,040 --> 00:10:11,120
function in six variables so three

255
00:10:11,120 --> 00:10:13,120
secret variables and three public

256
00:10:13,120 --> 00:10:14,480
variables

257
00:10:14,480 --> 00:10:15,360
now

258
00:10:15,360 --> 00:10:17,279
here if we take uh

259
00:10:17,279 --> 00:10:20,000
the second order derivative with respect

260
00:10:20,000 --> 00:10:23,120
to public variables v 0 and v 1 so that

261
00:10:23,120 --> 00:10:24,720
means

262
00:10:24,720 --> 00:10:26,720
you are evaluating the boolean function

263
00:10:26,720 --> 00:10:27,920
f

264
00:10:27,920 --> 00:10:30,160
over all possible values of v 0 and v 1

265
00:10:30,160 --> 00:10:33,040
and v 2 is constant and then you xor

266
00:10:33,040 --> 00:10:36,880
their values so this basically gives you

267
00:10:36,880 --> 00:10:38,160
the

268
00:10:38,160 --> 00:10:39,680
uh another

269
00:10:39,680 --> 00:10:42,720
expression which is k 0 plus q 2 plus 1

270
00:10:42,720 --> 00:10:46,160
which is known as the super poly uh of

271
00:10:46,160 --> 00:10:48,959
the queue v0 and v1

272
00:10:48,959 --> 00:10:52,320
so in terms of uh q attack notices uh v0

273
00:10:52,320 --> 00:10:53,519
v1

274
00:10:53,519 --> 00:10:56,240
is known as the cube and here since we

275
00:10:56,240 --> 00:10:58,079
are working on two dimensions so this is

276
00:10:58,079 --> 00:10:58,800
a

277
00:10:58,800 --> 00:11:02,640
two dimensional q and v two is fixed

278
00:11:02,640 --> 00:11:05,760
so this is our non given variable

279
00:11:05,760 --> 00:11:08,800
and k zero plus k two plus k one

280
00:11:08,800 --> 00:11:12,240
is uh called as uh super poly of q

281
00:11:12,240 --> 00:11:15,040
v zero and v1

282
00:11:15,040 --> 00:11:16,640
so now uh

283
00:11:16,640 --> 00:11:19,360
till now uh

284
00:11:19,360 --> 00:11:22,000
there are many methods which can recover

285
00:11:22,000 --> 00:11:24,640
this uh super quality

286
00:11:24,640 --> 00:11:26,480
and these methods are based on the

287
00:11:26,480 --> 00:11:28,959
automated tools like groovy question

288
00:11:28,959 --> 00:11:30,079
programming

289
00:11:30,079 --> 00:11:31,519
set smd

290
00:11:31,519 --> 00:11:33,760
but the issue here is uh

291
00:11:33,760 --> 00:11:36,160
once the dimension of the queue is uh

292
00:11:36,160 --> 00:11:37,040
large

293
00:11:37,040 --> 00:11:39,360
then we don't know any information about

294
00:11:39,360 --> 00:11:41,519
the super poly

295
00:11:41,519 --> 00:11:43,839
so in this work what we do

296
00:11:43,839 --> 00:11:46,480
we try to recover this superpoly without

297
00:11:46,480 --> 00:11:49,120
the aid of any

298
00:11:49,120 --> 00:11:52,399
automated tools or at least we give

299
00:11:52,399 --> 00:11:54,800
some theoretical answers for recovering

300
00:11:54,800 --> 00:11:57,519
this properly

301
00:11:57,519 --> 00:11:59,600
so uh

302
00:11:59,600 --> 00:12:02,399
let's start with the uh initial state of

303
00:12:02,399 --> 00:12:05,200
the s code so if you remember the

304
00:12:05,200 --> 00:12:08,079
the q variables they are loaded in the

305
00:12:08,079 --> 00:12:10,480
word three and word four

306
00:12:10,480 --> 00:12:12,880
so we uh

307
00:12:12,880 --> 00:12:14,240
work with this uh straight

308
00:12:14,240 --> 00:12:16,079
configurations where the

309
00:12:16,079 --> 00:12:18,240
where we take the q variables in word

310
00:12:18,240 --> 00:12:20,480
three and then

311
00:12:20,480 --> 00:12:21,440
in

312
00:12:21,440 --> 00:12:24,959
word four we fix all of them to be zero

313
00:12:24,959 --> 00:12:26,079
now uh

314
00:12:26,079 --> 00:12:28,639
for this state configuration uh we have

315
00:12:28,639 --> 00:12:30,959
the following observation

316
00:12:30,959 --> 00:12:31,839
so

317
00:12:31,839 --> 00:12:33,839
for round r

318
00:12:33,839 --> 00:12:37,040
if we select uh 2 to the power r minus 2

319
00:12:37,040 --> 00:12:39,920
to the power r indices i

320
00:12:39,920 --> 00:12:42,639
from the set 0 to 63

321
00:12:42,639 --> 00:12:43,839
and

322
00:12:43,839 --> 00:12:46,880
corresponding to this indexes if we look

323
00:12:46,880 --> 00:12:49,279
the q monomial

324
00:12:49,279 --> 00:12:52,800
and it's superb only uh of each state

325
00:12:52,800 --> 00:12:55,040
bit after our rounds

326
00:12:55,040 --> 00:12:56,959
then uh

327
00:12:56,959 --> 00:12:59,839
then we can show that the super poly is

328
00:12:59,839 --> 00:13:01,920
entirely determined by

329
00:13:01,920 --> 00:13:02,720
uh

330
00:13:02,720 --> 00:13:05,760
these two or our equivalent key bits

331
00:13:05,760 --> 00:13:08,079
which is basically uh

332
00:13:08,079 --> 00:13:09,839
ki ki

333
00:13:09,839 --> 00:13:13,040
0 plus k 0 plus 64

334
00:13:13,040 --> 00:13:14,720
or

335
00:13:14,720 --> 00:13:16,720
so basically it's like uh if you look

336
00:13:16,720 --> 00:13:18,560
into one column

337
00:13:18,560 --> 00:13:20,800
then the super poly depends on this

338
00:13:20,800 --> 00:13:24,320
equivalent keyboards with k0 plus k64 or

339
00:13:24,320 --> 00:13:27,680
k1 plus 65 or k2 plus 65 it's like this

340
00:13:27,680 --> 00:13:29,680
so or is

341
00:13:29,680 --> 00:13:31,760
totally two to the power are equivalent

342
00:13:31,760 --> 00:13:33,440
keywords rather than the original key

343
00:13:33,440 --> 00:13:35,279
bits

344
00:13:35,279 --> 00:13:37,760
so a similar observation was

345
00:13:37,760 --> 00:13:39,120
used for

346
00:13:39,120 --> 00:13:42,240
in the ms-15 to attack up to second

347
00:13:42,240 --> 00:13:46,000
rounds up to six rounds of s-com

348
00:13:46,000 --> 00:13:48,720
so in this work we use the similar

349
00:13:48,720 --> 00:13:50,000
observation but with a different

350
00:13:50,000 --> 00:13:54,399
technique to attack our seven rounds

351
00:13:55,360 --> 00:13:58,880
okay so what's our goal here so the goal

352
00:13:58,880 --> 00:14:01,279
is to uh recover the super poly of the

353
00:14:01,279 --> 00:14:04,000
64 dimension cube

354
00:14:04,000 --> 00:14:05,519
uh which

355
00:14:05,519 --> 00:14:09,199
v zero times v one time will be 63 after

356
00:14:09,199 --> 00:14:11,360
seven rounds

357
00:14:11,360 --> 00:14:13,680
and the number of

358
00:14:13,680 --> 00:14:16,079
the time complex is p less than two to

359
00:14:16,079 --> 00:14:17,360
the power one twenty eight seven round

360
00:14:17,360 --> 00:14:18,800
this concludes

361
00:14:18,800 --> 00:14:21,600
so now this co uh this

362
00:14:21,600 --> 00:14:24,000
is equivalent to recover the superpower

363
00:14:24,000 --> 00:14:25,680
of the queue

364
00:14:25,680 --> 00:14:28,000
after the six round xbox layer this is

365
00:14:28,000 --> 00:14:30,160
because uh we can invert the last

366
00:14:30,160 --> 00:14:32,719
linearly

367
00:14:34,000 --> 00:14:36,079
okay so for uh

368
00:14:36,079 --> 00:14:38,959
recovering this super police object

369
00:14:38,959 --> 00:14:41,920
technique which is uh partial polynomial

370
00:14:41,920 --> 00:14:44,720
multiplication

371
00:14:44,720 --> 00:14:47,360
so to give a high level idea for

372
00:14:47,360 --> 00:14:48,320
technique

373
00:14:48,320 --> 00:14:49,600
uh

374
00:14:49,600 --> 00:14:51,680
we can uh consider this following

375
00:14:51,680 --> 00:14:53,040
example

376
00:14:53,040 --> 00:14:54,800
so

377
00:14:54,800 --> 00:14:56,720
let's say uh we have the algebraic

378
00:14:56,720 --> 00:14:59,360
normal form of the first column after

379
00:14:59,360 --> 00:15:03,600
round one so we have the five bits and

380
00:15:03,680 --> 00:15:04,959
so

381
00:15:04,959 --> 00:15:06,720
so five bits are basically corresponding

382
00:15:06,720 --> 00:15:08,639
to five columns and this is the

383
00:15:08,639 --> 00:15:10,320
algebraic normal form

384
00:15:10,320 --> 00:15:14,320
now let's say we are interested in the

385
00:15:14,320 --> 00:15:15,040
the

386
00:15:15,040 --> 00:15:18,560
q monomials of degree two

387
00:15:18,560 --> 00:15:20,800
by multiplying some

388
00:15:20,800 --> 00:15:22,240
some of these columns

389
00:15:22,240 --> 00:15:24,959
so for example if we multiply

390
00:15:24,959 --> 00:15:26,880
the second column

391
00:15:26,880 --> 00:15:28,880
with the first column

392
00:15:28,880 --> 00:15:32,320
and since k is constant here

393
00:15:32,320 --> 00:15:34,079
and we multiply

394
00:15:34,079 --> 00:15:36,880
x to 1 0 with x 1 1 0

395
00:15:36,880 --> 00:15:39,279
then this will never give the degree two

396
00:15:39,279 --> 00:15:40,959
terms

397
00:15:40,959 --> 00:15:43,199
so we can simply eliminate

398
00:15:43,199 --> 00:15:44,959
x to 1 0

399
00:15:44,959 --> 00:15:47,040
while multiplying

400
00:15:47,040 --> 00:15:49,440
also note that if we

401
00:15:49,440 --> 00:15:52,480
multiply this v 0

402
00:15:52,480 --> 00:15:54,240
with this uh

403
00:15:54,240 --> 00:15:55,600
this expression

404
00:15:55,600 --> 00:15:57,920
then here also the degree

405
00:15:57,920 --> 00:16:00,800
is still one because v0 is same so the

406
00:16:00,800 --> 00:16:04,319
degree does not increase

407
00:16:06,240 --> 00:16:09,360
or if you have a more uh close look then

408
00:16:09,360 --> 00:16:11,920
basically we are interested in these

409
00:16:11,920 --> 00:16:14,639
reduced terms

410
00:16:14,639 --> 00:16:15,759
so

411
00:16:15,759 --> 00:16:17,680
basically uh

412
00:16:17,680 --> 00:16:18,959
a product of

413
00:16:18,959 --> 00:16:21,040
only specific terms will give our two

414
00:16:21,040 --> 00:16:23,600
dimensional cubes and not all

415
00:16:23,600 --> 00:16:25,199
so like this

416
00:16:25,199 --> 00:16:26,880
we don't need any terms from here

417
00:16:26,880 --> 00:16:28,560
because they will never contribute to

418
00:16:28,560 --> 00:16:30,720
the degree

419
00:16:30,720 --> 00:16:31,519
so

420
00:16:31,519 --> 00:16:33,680
we apply this uh

421
00:16:33,680 --> 00:16:35,920
simple idea on seven round has gone in

422
00:16:35,920 --> 00:16:37,920
two steps to recover the key

423
00:16:37,920 --> 00:16:38,959
so

424
00:16:38,959 --> 00:16:41,199
in for step one

425
00:16:41,199 --> 00:16:45,120
we enumerate all 32 dimensional cubes

426
00:16:45,120 --> 00:16:46,959
and their corresponding super poly is

427
00:16:46,959 --> 00:16:48,720
after six rounds

428
00:16:48,720 --> 00:16:50,560
now once we have all these

429
00:16:50,560 --> 00:16:52,639
cubes and super polis

430
00:16:52,639 --> 00:16:54,959
then we multiply them using this

431
00:16:54,959 --> 00:16:57,199
particular polynomial techniques

432
00:16:57,199 --> 00:16:58,639
partial polynomial multiplication

433
00:16:58,639 --> 00:17:01,519
techniques and then we recover the super

434
00:17:01,519 --> 00:17:04,720
poly or 64 dimensional cube after seven

435
00:17:04,720 --> 00:17:07,039
rounds

436
00:17:08,799 --> 00:17:11,520
okay so now we have 64 output bits in

437
00:17:11,520 --> 00:17:12,319
the

438
00:17:12,319 --> 00:17:14,000
after seven rounds

439
00:17:14,000 --> 00:17:15,119
so

440
00:17:15,119 --> 00:17:16,799
we can recover

441
00:17:16,799 --> 00:17:18,559
all one by one

442
00:17:18,559 --> 00:17:20,319
so the entire the procedure for

443
00:17:20,319 --> 00:17:22,480
recovering super polish for all 64 bits

444
00:17:22,480 --> 00:17:24,319
is exactly same so you just saw the

445
00:17:24,319 --> 00:17:26,959
procedure for the g procedure for the

446
00:17:26,959 --> 00:17:29,839
g-root bit here

447
00:17:30,320 --> 00:17:32,559
okay so now we write a

448
00:17:32,559 --> 00:17:34,000
zeroth bit

449
00:17:34,000 --> 00:17:36,080
in algebraic normal form

450
00:17:36,080 --> 00:17:37,520
then

451
00:17:37,520 --> 00:17:40,400
the quadratic terms are shown in red so

452
00:17:40,400 --> 00:17:42,080
we are only interested in the quadratic

453
00:17:42,080 --> 00:17:43,200
terms here

454
00:17:43,200 --> 00:17:44,880
because uh

455
00:17:44,880 --> 00:17:49,280
the other terms can only have degree uh

456
00:17:49,280 --> 00:17:52,160
16 so if we multiply with another 30

457
00:17:52,160 --> 00:17:54,559
terms then the degree could be 48 and

458
00:17:54,559 --> 00:17:56,320
they will never contribute to

459
00:17:56,320 --> 00:17:58,720
a 64 dimensional cube

460
00:17:58,720 --> 00:18:00,960
so we are all interested in the terms as

461
00:18:00,960 --> 00:18:02,400
soon as

462
00:18:02,400 --> 00:18:04,880
so which is equal uh equivalent we need

463
00:18:04,880 --> 00:18:06,160
to compute

464
00:18:06,160 --> 00:18:09,840
the super poly for this term

465
00:18:10,640 --> 00:18:11,840
so now

466
00:18:11,840 --> 00:18:14,400
let's see how we compute this

467
00:18:14,400 --> 00:18:16,720
so first uh

468
00:18:16,720 --> 00:18:18,559
we give an example of the data structure

469
00:18:18,559 --> 00:18:20,400
like how we are using the super police

470
00:18:20,400 --> 00:18:23,360
and they are in the cubes

471
00:18:23,360 --> 00:18:25,919
so let's say we look into

472
00:18:25,919 --> 00:18:27,120
this bit

473
00:18:27,120 --> 00:18:29,760
then this basically denotes the 32

474
00:18:29,760 --> 00:18:31,679
dimensional queue the positions of the

475
00:18:31,679 --> 00:18:34,640
32 dimensional cubes and in this array

476
00:18:34,640 --> 00:18:36,720
we have the corresponding superpoly

477
00:18:36,720 --> 00:18:38,720
so now we have all the

478
00:18:38,720 --> 00:18:39,440
uh

479
00:18:39,440 --> 00:18:41,600
32 dimensional cubes as well as their

480
00:18:41,600 --> 00:18:44,799
corresponding superpolice for x16

481
00:18:44,799 --> 00:18:46,400
similarly we have

482
00:18:46,400 --> 00:18:48,400
all the possible 32 dimensional cubes

483
00:18:48,400 --> 00:18:50,480
for this expression

484
00:18:50,480 --> 00:18:52,160
for this express and their corresponding

485
00:18:52,160 --> 00:18:53,440
silver police

486
00:18:53,440 --> 00:18:55,520
so basically uh

487
00:18:55,520 --> 00:18:57,520
how much memory is needed here because

488
00:18:57,520 --> 00:19:00,799
we have 64 choose 32 cubes

489
00:19:00,799 --> 00:19:01,760
and

490
00:19:01,760 --> 00:19:04,080
for each of the cubes we have we can

491
00:19:04,080 --> 00:19:07,039
have at most 2 to the power 32 monomials

492
00:19:07,039 --> 00:19:09,679
and we have 3 ton distributes so overall

493
00:19:09,679 --> 00:19:11,360
you need around 2 to the power 1 0 1

494
00:19:11,360 --> 00:19:13,600
memory so this is the worst case you

495
00:19:13,600 --> 00:19:16,640
know it's just an example

496
00:19:16,640 --> 00:19:19,840
now uh how we compute the super polis

497
00:19:19,840 --> 00:19:21,679
for

498
00:19:21,679 --> 00:19:22,840
for the seven

499
00:19:22,840 --> 00:19:25,280
rounds so

500
00:19:25,280 --> 00:19:27,760
in step one

501
00:19:27,760 --> 00:19:30,559
we find the cubes at super police of six

502
00:19:30,559 --> 00:19:32,240
round

503
00:19:32,240 --> 00:19:35,760
so what we have we have our 64 choose 32

504
00:19:35,760 --> 00:19:37,120
cubes

505
00:19:37,120 --> 00:19:38,960
and this is the uh the dimension of the

506
00:19:38,960 --> 00:19:41,600
queue due to the power because statute

507
00:19:41,600 --> 00:19:42,960
is the dimension of the queue so we

508
00:19:42,960 --> 00:19:46,160
evaluate over all possible

509
00:19:46,160 --> 00:19:47,679
uh

510
00:19:47,679 --> 00:19:50,720
all possible values of the queue

511
00:19:50,720 --> 00:19:52,640
and then uh

512
00:19:52,640 --> 00:19:55,039
now uh we also

513
00:19:55,039 --> 00:19:56,320
can find out

514
00:19:56,320 --> 00:20:00,000
the degree of the super volume is

515
00:20:00,000 --> 00:20:01,440
at most 15

516
00:20:01,440 --> 00:20:02,559
in uh

517
00:20:02,559 --> 00:20:03,520
so

518
00:20:03,520 --> 00:20:04,400
now

519
00:20:04,400 --> 00:20:07,039
in one super poly we can have at most uh

520
00:20:07,039 --> 00:20:09,440
this many monomials

521
00:20:09,440 --> 00:20:10,559
so

522
00:20:10,559 --> 00:20:12,720
this means uh

523
00:20:12,720 --> 00:20:14,720
the total time which is needed to

524
00:20:14,720 --> 00:20:17,360
compute all these superpolis for sixth

525
00:20:17,360 --> 00:20:19,840
round and for all these two bits

526
00:20:19,840 --> 00:20:23,520
is 2 to the power 123.48

527
00:20:23,520 --> 00:20:25,840
now once we have this super police

528
00:20:25,840 --> 00:20:28,640
we only need to multiply

529
00:20:28,640 --> 00:20:30,799
our very specific polynomials

530
00:20:30,799 --> 00:20:32,720
so for example

531
00:20:32,720 --> 00:20:36,559
this is the 32 dimensional cube now

532
00:20:36,559 --> 00:20:38,559
this cube

533
00:20:38,559 --> 00:20:40,480
corresponding to this q

534
00:20:40,480 --> 00:20:44,799
uh we can get a 64 dimensional cube only

535
00:20:44,799 --> 00:20:46,480
by multiplying

536
00:20:46,480 --> 00:20:48,960
uh this cube

537
00:20:48,960 --> 00:20:50,400
for the other gives the degree is at

538
00:20:50,400 --> 00:20:51,760
most uh

539
00:20:51,760 --> 00:20:53,280
less than 63 because there will be some

540
00:20:53,280 --> 00:20:56,080
common variables

541
00:20:56,080 --> 00:20:57,919
so

542
00:20:57,919 --> 00:21:01,280
now we multiply all of them

543
00:21:01,280 --> 00:21:03,039
and we know uh

544
00:21:03,039 --> 00:21:04,480
for each of them

545
00:21:04,480 --> 00:21:06,880
the number of monomials is at most this

546
00:21:06,880 --> 00:21:08,400
one

547
00:21:08,400 --> 00:21:09,760
so

548
00:21:09,760 --> 00:21:13,919
for that we need to access memory so

549
00:21:13,919 --> 00:21:16,480
corresponding to each of the queue we

550
00:21:16,480 --> 00:21:19,520
have around 2 to the power 122

551
00:21:19,520 --> 00:21:21,760
memory access now this is just for one

552
00:21:21,760 --> 00:21:23,679
bit so basically we can

553
00:21:23,679 --> 00:21:25,840
do this in parallel fashion so this will

554
00:21:25,840 --> 00:21:29,439
require the same amount of time

555
00:21:29,600 --> 00:21:31,840
so now uh once we have the super police

556
00:21:31,840 --> 00:21:34,880
and we know that this depends on the

557
00:21:34,880 --> 00:21:36,640
equivalent key bits

558
00:21:36,640 --> 00:21:38,159
so

559
00:21:38,159 --> 00:21:40,559
for each of the equivalence

560
00:21:40,559 --> 00:21:41,760
key bits

561
00:21:41,760 --> 00:21:44,400
we compute the super bowling and store

562
00:21:44,400 --> 00:21:47,120
in the hash table

563
00:21:47,120 --> 00:21:49,520
so this requires around 2 to power 70

564
00:21:49,520 --> 00:21:52,400
bits of memory

565
00:21:52,400 --> 00:21:55,300
now in the online phase corresponding to

566
00:21:55,300 --> 00:21:56,480
[Music]

567
00:21:56,480 --> 00:21:59,120
each queue we compute the cube sum and

568
00:21:59,120 --> 00:22:01,120
if it matches with one of the entry in

569
00:22:01,120 --> 00:22:03,840
the hash table then this is uh basically

570
00:22:03,840 --> 00:22:05,840
one of the key candidate

571
00:22:05,840 --> 00:22:08,400
one of the right key candidate

572
00:22:08,400 --> 00:22:10,880
now once we opt in this

573
00:22:10,880 --> 00:22:12,559
then we do an excessive search on the

574
00:22:12,559 --> 00:22:15,200
remaining 64 key bits because we know

575
00:22:15,200 --> 00:22:18,000
the keys are equivalent so

576
00:22:18,000 --> 00:22:20,480
from the equivalent keys we get

577
00:22:20,480 --> 00:22:23,360
generate we compute the original key and

578
00:22:23,360 --> 00:22:26,400
then do an exhaustive uh key search and

579
00:22:26,400 --> 00:22:28,559
this requires around two to five sixty

580
00:22:28,559 --> 00:22:32,559
four seven round squad calls

581
00:22:33,600 --> 00:22:35,679
so in terms of overall attack

582
00:22:35,679 --> 00:22:39,600
complexities we require tutor 64 data

583
00:22:39,600 --> 00:22:41,200
is around two to the power one zero one

584
00:22:41,200 --> 00:22:44,080
plus two for seventy now uh this memory

585
00:22:44,080 --> 00:22:46,240
we just do for computing super volumes

586
00:22:46,240 --> 00:22:48,480
once this is done we can discard

587
00:22:48,480 --> 00:22:49,200
the

588
00:22:49,200 --> 00:22:51,280
once we know the super policy we will

589
00:22:51,280 --> 00:22:53,280
discard this

590
00:22:53,280 --> 00:22:55,840
so and also in terms of total time we

591
00:22:55,840 --> 00:22:59,039
only need you to power 1237 round s on

592
00:22:59,039 --> 00:23:01,360
calls

593
00:23:01,840 --> 00:23:04,080
now some remarks on the ski recovery

594
00:23:04,080 --> 00:23:06,799
text so we know like all these

595
00:23:06,799 --> 00:23:09,679
uh we know that uh this offline phase is

596
00:23:09,679 --> 00:23:11,440
done only for once

597
00:23:11,440 --> 00:23:13,200
and there are some other

598
00:23:13,200 --> 00:23:16,159
state configurations and there are

599
00:23:16,159 --> 00:23:17,919
some optimizations which are given in

600
00:23:17,919 --> 00:23:19,600
the paper where we can reduce the time

601
00:23:19,600 --> 00:23:21,120
complexities

602
00:23:21,120 --> 00:23:24,720
and here are all the all our assumptions

603
00:23:24,720 --> 00:23:25,919
are the worst

604
00:23:25,919 --> 00:23:28,159
in worst case so for example then the

605
00:23:28,159 --> 00:23:30,080
total number of the two dimensional

606
00:23:30,080 --> 00:23:32,720
cubes the total number of monomials for

607
00:23:32,720 --> 00:23:35,360
poly and the number of partial

608
00:23:35,360 --> 00:23:37,760
multiplications

609
00:23:37,760 --> 00:23:39,679
so there is a high chance that

610
00:23:39,679 --> 00:23:43,679
these complexities can be improved

611
00:23:43,679 --> 00:23:44,480
now

612
00:23:44,480 --> 00:23:48,240
let's look into the new distributions

613
00:23:48,240 --> 00:23:50,559
okay so the idea of new distribution is

614
00:23:50,559 --> 00:23:52,320
very uh

615
00:23:52,320 --> 00:23:54,000
basic the only thing is like how we

616
00:23:54,000 --> 00:23:55,679
construct them

617
00:23:55,679 --> 00:23:58,000
so here again uh

618
00:23:58,000 --> 00:23:59,919
so basically what we are trying to find

619
00:23:59,919 --> 00:24:01,039
is uh

620
00:24:01,039 --> 00:24:03,679
for a given uh initial state we are

621
00:24:03,679 --> 00:24:05,600
trying to find some conditions on the

622
00:24:05,600 --> 00:24:08,799
non-slips so that the algebraic degree

623
00:24:08,799 --> 00:24:11,279
of the output bits in

624
00:24:11,279 --> 00:24:15,760
cube variables is at most 63

625
00:24:16,000 --> 00:24:17,600
so now if you look into the existing

626
00:24:17,600 --> 00:24:19,600
distinguished uh existing listing

627
00:24:19,600 --> 00:24:22,000
resource so

628
00:24:22,000 --> 00:24:26,559
in all the former distributions the idea

629
00:24:26,559 --> 00:24:27,600
was

630
00:24:27,600 --> 00:24:28,400
uh

631
00:24:28,400 --> 00:24:31,120
to linearize uh the first round

632
00:24:31,120 --> 00:24:34,559
because if you look the s box output of

633
00:24:34,559 --> 00:24:35,679
a wrong word

634
00:24:35,679 --> 00:24:37,520
then only

635
00:24:37,520 --> 00:24:40,320
the bits in word two are quadratic in q

636
00:24:40,320 --> 00:24:41,679
variables

637
00:24:41,679 --> 00:24:44,799
so if you set one of them as constant

638
00:24:44,799 --> 00:24:47,279
then the round one becomes linear and

639
00:24:47,279 --> 00:24:50,159
after that there is a quadratic uh

640
00:24:50,159 --> 00:24:52,960
growth in the algebra degree

641
00:24:52,960 --> 00:24:56,480
so basically uh if the after round one

642
00:24:56,480 --> 00:24:59,120
the degree is one then after round two

643
00:24:59,120 --> 00:25:02,000
it's two and then four eight like this

644
00:25:02,000 --> 00:25:03,760
so that's why uh

645
00:25:03,760 --> 00:25:06,400
the previous distinguishers can reach up

646
00:25:06,400 --> 00:25:09,919
to six rounds and the degree is 32

647
00:25:09,919 --> 00:25:11,120
because for seven knots the degree

648
00:25:11,120 --> 00:25:14,480
becomes 64 and you for that you need to

649
00:25:14,480 --> 00:25:17,679
power 65 data

650
00:25:18,000 --> 00:25:20,559
so what uh what we

651
00:25:20,559 --> 00:25:22,240
uh observe here

652
00:25:22,240 --> 00:25:23,279
so

653
00:25:23,279 --> 00:25:26,480
if we set uh the cube variables in word

654
00:25:26,480 --> 00:25:29,120
3 and word 4 is equal

655
00:25:29,120 --> 00:25:31,760
so that means

656
00:25:31,919 --> 00:25:34,240
this

657
00:25:34,960 --> 00:25:36,880
that means after setting

658
00:25:36,880 --> 00:25:38,240
cube variables

659
00:25:38,240 --> 00:25:41,360
v 0 equals v 0 in

660
00:25:41,360 --> 00:25:44,000
word three and four

661
00:25:44,000 --> 00:25:45,919
so if you see here the all the the green

662
00:25:45,919 --> 00:25:48,880
that last two green rows are equal then

663
00:25:48,880 --> 00:25:51,520
we can note that uh

664
00:25:51,520 --> 00:25:53,039
the first two

665
00:25:53,039 --> 00:25:54,559
and word three

666
00:25:54,559 --> 00:25:56,080
they becomes independent of the nonce

667
00:25:56,080 --> 00:25:58,080
variables

668
00:25:58,080 --> 00:26:01,520
now using this observation

669
00:26:01,520 --> 00:26:03,039
we compute the upper bounds and the

670
00:26:03,039 --> 00:26:06,880
algebraic degree by uh giving a

671
00:26:06,880 --> 00:26:09,600
improved uh model for the three subset

672
00:26:09,600 --> 00:26:11,840
of bit waste division property

673
00:26:11,840 --> 00:26:13,520
so we found that uh

674
00:26:13,520 --> 00:26:15,760
after seven rounds

675
00:26:15,760 --> 00:26:17,200
the degree is

676
00:26:17,200 --> 00:26:19,760
uh at most 59 so that means we can have

677
00:26:19,760 --> 00:26:22,080
a 60 dimensional queue

678
00:26:22,080 --> 00:26:25,440
all super police are always zero

679
00:26:25,440 --> 00:26:26,400
also

680
00:26:26,400 --> 00:26:29,440
we found another observation that uh

681
00:26:29,440 --> 00:26:30,720
if

682
00:26:30,720 --> 00:26:33,279
we choose a five dimensional cube

683
00:26:33,279 --> 00:26:36,840
like v i v i plus 8 v i plus 16 v i plus

684
00:26:36,840 --> 00:26:41,440
17 v i plus 24 and v i plus 63

685
00:26:41,440 --> 00:26:43,279
then you found that these q variables do

686
00:26:43,279 --> 00:26:44,799
not multiply

687
00:26:44,799 --> 00:26:46,720
with each other after round two so

688
00:26:46,720 --> 00:26:48,640
basically if you choose any five out of

689
00:26:48,640 --> 00:26:49,440
six

690
00:26:49,440 --> 00:26:51,600
then we can have a distinct server for

691
00:26:51,600 --> 00:26:53,120
four rounds with

692
00:26:53,120 --> 00:26:55,760
32 nonsense so the previous year was

693
00:26:55,760 --> 00:26:56,559
with

694
00:26:56,559 --> 00:26:58,720
uh two thousand

695
00:26:58,720 --> 00:27:02,640
nonsense so this is also an improvement

696
00:27:03,440 --> 00:27:04,320
okay

697
00:27:04,320 --> 00:27:06,480
so now uh

698
00:27:06,480 --> 00:27:08,640
to conclude

699
00:27:08,640 --> 00:27:11,919
so in this work uh we have given the

700
00:27:11,919 --> 00:27:14,240
first key recovery attack on second uh

701
00:27:14,240 --> 00:27:16,320
seven round discount and

702
00:27:16,320 --> 00:27:18,480
we did not violate

703
00:27:18,480 --> 00:27:19,200
the

704
00:27:19,200 --> 00:27:20,960
data limit as well as the noise

705
00:27:20,960 --> 00:27:23,279
respecting setting of the design

706
00:27:23,279 --> 00:27:25,360
we also gave the first seven round

707
00:27:25,360 --> 00:27:28,000
distributor in the aed setting which was

708
00:27:28,000 --> 00:27:29,440
not known before

709
00:27:29,440 --> 00:27:32,240
and improved the existing uh

710
00:27:32,240 --> 00:27:34,559
distinguishes for four five

711
00:27:34,559 --> 00:27:36,480
and six rounds

712
00:27:36,480 --> 00:27:38,000
and we have like uh

713
00:27:38,000 --> 00:27:42,080
uh since uh our attacks are based on

714
00:27:42,080 --> 00:27:44,640
the first case scenarios so we believe

715
00:27:44,640 --> 00:27:46,240
that there are a lot of room for

716
00:27:46,240 --> 00:27:50,240
improvements in the attack complexities

717
00:27:51,120 --> 00:27:54,320
yeah uh that's all uh for the talk

718
00:27:54,320 --> 00:27:56,559
and all the source codes for our

719
00:27:56,559 --> 00:27:59,200
distinguishes are available here

720
00:27:59,200 --> 00:28:00,240
uh

721
00:28:00,240 --> 00:28:02,960
on in our github page so if you are

722
00:28:02,960 --> 00:28:04,880
interested you can have a look

723
00:28:04,880 --> 00:28:07,919
thank you

