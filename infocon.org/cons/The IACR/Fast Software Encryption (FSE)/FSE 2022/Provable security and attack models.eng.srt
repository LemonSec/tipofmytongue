1
00:00:05,520 --> 00:00:07,919
so is my screen visible

2
00:00:07,919 --> 00:00:10,400
great great great yeah we can see it

3
00:00:10,400 --> 00:00:12,559
here

4
00:00:12,559 --> 00:00:13,840
okay

5
00:00:13,840 --> 00:00:16,400
hello and good morning everybody um i'm

6
00:00:16,400 --> 00:00:18,160
so welcome to the sessional approval

7
00:00:18,160 --> 00:00:20,000
security and attack models i'm so happy

8
00:00:20,000 --> 00:00:22,320
to see so many people here usually for

9
00:00:22,320 --> 00:00:25,119
conferences before the pandemic um the

10
00:00:25,119 --> 00:00:27,039
first day everybody comes the first

11
00:00:27,039 --> 00:00:28,720
night everybody stays late drinking the

12
00:00:28,720 --> 00:00:30,560
next morning it's empty so i see you

13
00:00:30,560 --> 00:00:32,159
guys are really excited to go back and

14
00:00:32,159 --> 00:00:34,320
i'm excited to be here as well we have

15
00:00:34,320 --> 00:00:37,600
uh six talks lined up and the first talk

16
00:00:37,600 --> 00:00:39,920
without further ado is uh entitled

17
00:00:39,920 --> 00:00:43,120
permutation based edm and in verse 3

18
00:00:43,120 --> 00:00:45,760
beyond birthday bound secure prf and

19
00:00:45,760 --> 00:00:48,079
it's avg duda has been going to give the

20
00:00:48,079 --> 00:00:51,520
talk avijjit the floor is yours

21
00:00:51,520 --> 00:00:53,600
sure thank you

22
00:00:53,600 --> 00:00:56,719
so hi uh this is a talk based on

23
00:00:56,719 --> 00:00:58,399
computation based edm it's an inverse

24
00:00:58,399 --> 00:01:00,640
free bbb secure pre and it's a joint

25
00:01:00,640 --> 00:01:02,879
work with medulla and stupid

26
00:01:02,879 --> 00:01:05,680
so in crypto 19 uh chen aton have shown

27
00:01:05,680 --> 00:01:07,439
that how to construct uh secures beyond

28
00:01:07,439 --> 00:01:08,720
what the ban secures the random

29
00:01:08,720 --> 00:01:11,040
functions out of public permutations so

30
00:01:11,040 --> 00:01:12,560
they have proposed two constructions

31
00:01:12,560 --> 00:01:14,000
their first construction was sum of

32
00:01:14,000 --> 00:01:15,200
event mansu

33
00:01:15,200 --> 00:01:17,280
where two independent instances of even

34
00:01:17,280 --> 00:01:18,159
one-to-one different muscle

35
00:01:18,159 --> 00:01:19,920
constructions were solved together to

36
00:01:19,920 --> 00:01:21,920
produce output and they have shown that

37
00:01:21,920 --> 00:01:23,840
this construction achieves a tight twin

38
00:01:23,840 --> 00:01:26,159
by three security power and the

39
00:01:26,159 --> 00:01:28,080
construction is minimal in the sense

40
00:01:28,080 --> 00:01:29,840
that if uh

41
00:01:29,840 --> 00:01:32,000
if the two permutations become identical

42
00:01:32,000 --> 00:01:33,520
or if the underlying round keys have

43
00:01:33,520 --> 00:01:35,520
become identical then the resulting

44
00:01:35,520 --> 00:01:36,799
construction the security of the

45
00:01:36,799 --> 00:01:38,400
resulting construction will drop down to

46
00:01:38,400 --> 00:01:41,040
the budget about their next construction

47
00:01:41,040 --> 00:01:43,600
was some of key alternating ciphers

48
00:01:43,600 --> 00:01:45,680
and when the underlying permutations are

49
00:01:45,680 --> 00:01:47,439
identical then the construction was

50
00:01:47,439 --> 00:01:50,560
dubbed as sokc1 and when the underlying

51
00:01:50,560 --> 00:01:52,399
ground keys were identical then the

52
00:01:52,399 --> 00:01:55,200
construction is dubbed as sokc21

53
00:01:55,200 --> 00:01:56,799
in an earlier version of the paper it

54
00:01:56,799 --> 00:01:59,439
was shown that sokc21 achieves uh type

55
00:01:59,439 --> 00:02:01,600
two n by statement security bound and in

56
00:02:01,600 --> 00:02:03,520
the paper uh the authors have shown a

57
00:02:03,520 --> 00:02:06,000
buddha bound attack on acer kc1

58
00:02:06,000 --> 00:02:08,959
however in uh euro crypt 20 nandi has

59
00:02:08,959 --> 00:02:10,399
shown a butter bound distinguishing

60
00:02:10,399 --> 00:02:12,879
attack on sokc 2 1

61
00:02:12,879 --> 00:02:16,000
and later in fec 2020 chakravarti atar

62
00:02:16,000 --> 00:02:17,200
has shown

63
00:02:17,200 --> 00:02:20,000
a distinguishing attack on iso kc1 with

64
00:02:20,000 --> 00:02:21,680
the clarity complexity 2 raised to 2 n

65
00:02:21,680 --> 00:02:23,120
by 3.

66
00:02:23,120 --> 00:02:25,680
so uh the question arises that can we

67
00:02:25,680 --> 00:02:27,840
design a permutation based prf with a

68
00:02:27,840 --> 00:02:29,040
single key

69
00:02:29,040 --> 00:02:30,319
and here is the construction that

70
00:02:30,319 --> 00:02:32,800
chakrabarty it all came up with and fsc

71
00:02:32,800 --> 00:02:34,879
2020 and they have shown that their

72
00:02:34,879 --> 00:02:36,800
construction uh which is known as the

73
00:02:36,800 --> 00:02:39,440
pdf map that construction achieves uh

74
00:02:39,440 --> 00:02:41,120
twin by distributes liquidity bound and

75
00:02:41,120 --> 00:02:42,959
the bound is essentially tight

76
00:02:42,959 --> 00:02:45,040
and they have shown that how to tweak

77
00:02:45,040 --> 00:02:47,120
the construction to convert it to a

78
00:02:47,120 --> 00:02:48,879
non-based mag which is called the pdm

79
00:02:48,879 --> 00:02:50,160
star map with the similar secret

80
00:02:50,160 --> 00:02:52,160
development however one inherent

81
00:02:52,160 --> 00:02:53,760
drawback of this construction is that

82
00:02:53,760 --> 00:02:55,120
this construction employs the

83
00:02:55,120 --> 00:02:56,720
permutation called both in the both

84
00:02:56,720 --> 00:02:58,080
direction that means in the forward

85
00:02:58,080 --> 00:03:00,319
direction and in the inverse direction

86
00:03:00,319 --> 00:03:02,159
and they have posed an open problem that

87
00:03:02,159 --> 00:03:03,519
whether it is possible to design a

88
00:03:03,519 --> 00:03:05,519
beyond vertebrate secured prf

89
00:03:05,519 --> 00:03:07,599
with the two forward calls

90
00:03:07,599 --> 00:03:09,360
using the same permutation

91
00:03:09,360 --> 00:03:11,200
uh to answer this question uh we have

92
00:03:11,200 --> 00:03:12,959
proposed our construction which we call

93
00:03:12,959 --> 00:03:14,400
this permutation based encrypted

94
00:03:14,400 --> 00:03:16,159
terminal construction so this is

95
00:03:16,159 --> 00:03:18,080
basically a divisional construction

96
00:03:18,080 --> 00:03:19,840
where the block cipher is instantiated

97
00:03:19,840 --> 00:03:21,840
with the public permutation with the

98
00:03:21,840 --> 00:03:24,080
adding of suitable ground keys and this

99
00:03:24,080 --> 00:03:26,000
construction required two independent

100
00:03:26,000 --> 00:03:28,159
nvidia keys and indeed public random

101
00:03:28,159 --> 00:03:30,239
computation and we have shown that this

102
00:03:30,239 --> 00:03:32,879
construction is uh tight uh achieves the

103
00:03:32,879 --> 00:03:35,120
tight twin by three bit security pound

104
00:03:35,120 --> 00:03:37,120
uh it does not require the inverse of

105
00:03:37,120 --> 00:03:39,599
the permutation and we believe that this

106
00:03:39,599 --> 00:03:42,480
construction can be made that uh if you

107
00:03:42,480 --> 00:03:44,480
even if you uh

108
00:03:44,480 --> 00:03:46,879
replace i mean even if you uh

109
00:03:46,879 --> 00:03:49,280
make the keys identical then also the

110
00:03:49,280 --> 00:03:51,519
similar security bound should hold but

111
00:03:51,519 --> 00:03:53,439
that may require some uh you know the

112
00:03:53,439 --> 00:03:54,879
some advanced variance of the some

113
00:03:54,879 --> 00:03:57,120
capture layer

114
00:03:57,120 --> 00:03:58,959
so to briefly go through the rationale

115
00:03:58,959 --> 00:04:01,680
of the attack on our construction uh

116
00:04:01,680 --> 00:04:03,680
we first check that for each value of

117
00:04:03,680 --> 00:04:06,799
the key k1 whether this x plus u will

118
00:04:06,799 --> 00:04:08,879
use the input of some primitive query

119
00:04:08,879 --> 00:04:11,040
equals to i plus v where v is the output

120
00:04:11,040 --> 00:04:12,480
of the corresponding primitive query and

121
00:04:12,480 --> 00:04:14,080
x and y is the input and output of the

122
00:04:14,080 --> 00:04:16,079
construction value respectively that

123
00:04:16,079 --> 00:04:18,399
equals to k 1 or not and for each such k

124
00:04:18,399 --> 00:04:20,880
1 we will construct a set s k 1 that

125
00:04:20,880 --> 00:04:23,440
will collect all the triplets say i j k

126
00:04:23,440 --> 00:04:26,320
such that x i plus u j equals to k 1 and

127
00:04:26,320 --> 00:04:28,720
y i plus v j equals to k 1 this equation

128
00:04:28,720 --> 00:04:30,320
should hold

129
00:04:30,320 --> 00:04:32,320
for each such k1 we will check whether

130
00:04:32,320 --> 00:04:33,919
the cardinality of the corresponding set

131
00:04:33,919 --> 00:04:37,040
say sk1 is at least two or none if it is

132
00:04:37,040 --> 00:04:39,840
then we will check for each such pairs i

133
00:04:39,840 --> 00:04:42,080
j k and i prime j plus k prime whether

134
00:04:42,080 --> 00:04:43,759
this equation holds or not if this

135
00:04:43,759 --> 00:04:46,400
equation holds then we say that the k 1

136
00:04:46,400 --> 00:04:48,960
is the potential candidate true t

137
00:04:48,960 --> 00:04:51,120
and in the paper we have claimed and we

138
00:04:51,120 --> 00:04:53,120
have also proved that that if k 1 star

139
00:04:53,120 --> 00:04:55,040
and k 2 star is a pair of true keys then

140
00:04:55,040 --> 00:04:57,040
the probability that k 1 star belongs to

141
00:04:57,040 --> 00:04:59,120
the set of candidate keys with a very

142
00:04:59,120 --> 00:05:02,400
high probability it's md 0.687 and the

143
00:05:02,400 --> 00:05:04,639
probability that the cardinality of the

144
00:05:04,639 --> 00:05:09,759
set k is at least 128 is at most half

145
00:05:09,759 --> 00:05:11,759
the time complexity of our attack is

146
00:05:11,759 --> 00:05:14,400
roughly the power 4m and

147
00:05:14,400 --> 00:05:16,000
the number of construction queries and

148
00:05:16,000 --> 00:05:17,360
the number of limited values that we

149
00:05:17,360 --> 00:05:18,960
required for this attack is roughly

150
00:05:18,960 --> 00:05:21,520
order of 2 raised to 2n by 3. so this

151
00:05:21,520 --> 00:05:23,199
this attack is basically an information

152
00:05:23,199 --> 00:05:25,840
theoretic attack so uh it remains open

153
00:05:25,840 --> 00:05:27,360
that how to improve the time complexity

154
00:05:27,360 --> 00:05:29,360
of this attack

155
00:05:29,360 --> 00:05:30,560
we have proved the security of the

156
00:05:30,560 --> 00:05:32,000
construction using the popular

157
00:05:32,000 --> 00:05:33,280
coefficient technique where we have to

158
00:05:33,280 --> 00:05:36,800
identify the bad events and uh so so we

159
00:05:36,800 --> 00:05:38,560
have identified the couple of bad events

160
00:05:38,560 --> 00:05:40,960
in this talk so the first bad event says

161
00:05:40,960 --> 00:05:42,400
that if there is a construction query

162
00:05:42,400 --> 00:05:44,960
and the primitive query such that the

163
00:05:44,960 --> 00:05:46,880
input to the uh first permutation call

164
00:05:46,880 --> 00:05:48,320
of the construction query collides with

165
00:05:48,320 --> 00:05:50,560
the input of some primitive query and

166
00:05:50,560 --> 00:05:52,000
the output of the second permutation

167
00:05:52,000 --> 00:05:53,600
call of the same construction query

168
00:05:53,600 --> 00:05:55,039
collides with the outputs of some other

169
00:05:55,039 --> 00:05:56,960
primitive square

170
00:05:56,960 --> 00:05:58,639
so that two says that we have a pair of

171
00:05:58,639 --> 00:06:01,039
construction queries where the input of

172
00:06:01,039 --> 00:06:02,560
the one of the construction input to the

173
00:06:02,560 --> 00:06:03,759
first permutation call of one of the

174
00:06:03,759 --> 00:06:05,600
construction query collides with the

175
00:06:05,600 --> 00:06:07,440
input of some primitive query

176
00:06:07,440 --> 00:06:09,520
and the output of the same construction

177
00:06:09,520 --> 00:06:11,199
query that means y

178
00:06:11,199 --> 00:06:12,960
it collides with the output of the other

179
00:06:12,960 --> 00:06:15,360
construction query

180
00:06:15,360 --> 00:06:17,039
so battery says that we have a

181
00:06:17,039 --> 00:06:18,960
construction queries which

182
00:06:18,960 --> 00:06:21,039
where you know this the input to the

183
00:06:21,039 --> 00:06:22,319
first permutation call collides with

184
00:06:22,319 --> 00:06:24,880
some primitive query and therefore the

185
00:06:24,880 --> 00:06:26,160
input to the second permutation call of

186
00:06:26,160 --> 00:06:27,840
the second cons of the same construction

187
00:06:27,840 --> 00:06:29,840
query is determined and if that happens

188
00:06:29,840 --> 00:06:31,680
to collide with the input of some other

189
00:06:31,680 --> 00:06:33,680
query then we will say that it is bad

190
00:06:33,680 --> 00:06:35,039
and that four is the symmetric

191
00:06:35,039 --> 00:06:37,039
counterpart of this event

192
00:06:37,039 --> 00:06:39,199
similarly we have the bad five that the

193
00:06:39,199 --> 00:06:40,479
input to the first permutation call

194
00:06:40,479 --> 00:06:42,319
collides with the primitive query and

195
00:06:42,319 --> 00:06:43,919
the input to the second permutation call

196
00:06:43,919 --> 00:06:46,080
collides with the input to the

197
00:06:46,080 --> 00:06:48,560
for some other construction query that's

198
00:06:48,560 --> 00:06:50,080
again the symmetry counter part of this

199
00:06:50,080 --> 00:06:51,199
event

200
00:06:51,199 --> 00:06:53,440
so that seven it says that

201
00:06:53,440 --> 00:06:56,240
we have a collision between the input of

202
00:06:56,240 --> 00:06:58,080
the first construction uh collision to

203
00:06:58,080 --> 00:06:59,120
the first permutation call of some

204
00:06:59,120 --> 00:07:00,960
construction query with the input of

205
00:07:00,960 --> 00:07:03,520
some primitive query and then the output

206
00:07:03,520 --> 00:07:04,800
that just input to the second

207
00:07:04,800 --> 00:07:06,560
permutation call collides with the

208
00:07:06,560 --> 00:07:08,080
second permutation call of the other

209
00:07:08,080 --> 00:07:10,560
construction query and here also the

210
00:07:10,560 --> 00:07:11,840
input to the first permutation call of

211
00:07:11,840 --> 00:07:13,599
the other construction query collides

212
00:07:13,599 --> 00:07:15,520
with the input of those of input of some

213
00:07:15,520 --> 00:07:16,960
probability square

214
00:07:16,960 --> 00:07:18,400
similarly we have the symmetric

215
00:07:18,400 --> 00:07:20,479
counterpart of patch seven

216
00:07:20,479 --> 00:07:22,240
bad nine says that we should not expect

217
00:07:22,240 --> 00:07:24,560
too much of collision between the uh

218
00:07:24,560 --> 00:07:26,479
input to the first formulation call and

219
00:07:26,479 --> 00:07:28,639
input input of some primitive query that

220
00:07:28,639 --> 00:07:30,479
then is the symmetry counterpart of that

221
00:07:30,479 --> 00:07:33,039
9 and bad 11 says that we should not

222
00:07:33,039 --> 00:07:35,360
allow too much of collision between the

223
00:07:35,360 --> 00:07:37,360
outputs of the construction that means y

224
00:07:37,360 --> 00:07:38,800
and y prime the condition between y and

225
00:07:38,800 --> 00:07:40,800
y time and we have some couple of bad

226
00:07:40,800 --> 00:07:43,520
events uh so for example this bad event

227
00:07:43,520 --> 00:07:45,280
is basically basically required for the

228
00:07:45,280 --> 00:07:47,360
sub capture lemma and the second bad

229
00:07:47,360 --> 00:07:49,599
event says that we should not allow too

230
00:07:49,599 --> 00:07:51,759
much of collision uh between the sum of

231
00:07:51,759 --> 00:07:54,319
u and v

232
00:07:54,560 --> 00:07:56,720
uh so we briefly go through the sketch

233
00:07:56,720 --> 00:07:59,280
of the analysis for uh good transcript

234
00:07:59,280 --> 00:08:01,520
reliability so here we partition the set

235
00:08:01,520 --> 00:08:03,280
of transcript into three sets and the

236
00:08:03,280 --> 00:08:05,039
first set we will classify those

237
00:08:05,039 --> 00:08:06,960
transcripts whose input collides with

238
00:08:06,960 --> 00:08:08,800
the input of some primitive query in the

239
00:08:08,800 --> 00:08:10,720
second set we classify those transcripts

240
00:08:10,720 --> 00:08:11,919
where the output collides with the

241
00:08:11,919 --> 00:08:13,599
output of some primitive query and in

242
00:08:13,599 --> 00:08:15,440
the third case where the input and

243
00:08:15,440 --> 00:08:16,800
output of the permutation calls are

244
00:08:16,800 --> 00:08:19,440
fresh so the first two are easy to

245
00:08:19,440 --> 00:08:21,840
analyze but the remaining the last one

246
00:08:21,840 --> 00:08:23,919
is the most difficult case to analyze

247
00:08:23,919 --> 00:08:26,000
so we again subdivided this case into

248
00:08:26,000 --> 00:08:28,400
two to two cases the case and case a and

249
00:08:28,400 --> 00:08:31,919
case b so in case a we will uh

250
00:08:31,919 --> 00:08:33,360
we will we will uh

251
00:08:33,360 --> 00:08:35,039
say that the set of transcripts where

252
00:08:35,039 --> 00:08:36,640
the input to the second permutation call

253
00:08:36,640 --> 00:08:37,839
collides with the input to the first

254
00:08:37,839 --> 00:08:40,159
permutation curve that means that we

255
00:08:40,159 --> 00:08:41,760
have a pair of construction query x y

256
00:08:41,760 --> 00:08:45,040
and x y prime such that this thing p of

257
00:08:45,040 --> 00:08:47,279
x one plus k x plus k one plus x plus k

258
00:08:47,279 --> 00:08:50,000
one plus k two which happens to be the

259
00:08:50,000 --> 00:08:51,680
input to the second permutation call for

260
00:08:51,680 --> 00:08:53,760
the construction query x y that happens

261
00:08:53,760 --> 00:08:55,839
to collide with the input to the first

262
00:08:55,839 --> 00:08:56,800
permutation called for the second

263
00:08:56,800 --> 00:08:58,320
construction by the namely x plan plus

264
00:08:58,320 --> 00:08:59,360
k1

265
00:08:59,360 --> 00:09:01,839
and ksp is the remaining set of transfer

266
00:09:01,839 --> 00:09:03,680
to analyze case one we will count the

267
00:09:03,680 --> 00:09:05,200
number of transcript that will satisfy

268
00:09:05,200 --> 00:09:07,519
this case a and for to to count this

269
00:09:07,519 --> 00:09:10,399
number we require the sum capture lemma

270
00:09:10,399 --> 00:09:12,320
and say suppose we have fixed such t

271
00:09:12,320 --> 00:09:14,720
input output pairs for the permutation p

272
00:09:14,720 --> 00:09:16,800
and for analyzing case b we will

273
00:09:16,800 --> 00:09:19,680
identify the number of good z so z is

274
00:09:19,680 --> 00:09:21,279
basically an intermediate variable to

275
00:09:21,279 --> 00:09:23,360
the permutation permutation called p we

276
00:09:23,360 --> 00:09:24,800
will identify and count the number of

277
00:09:24,800 --> 00:09:25,600
goods

278
00:09:25,600 --> 00:09:26,800
and then we will count the number of

279
00:09:26,800 --> 00:09:28,320
permutation calls that realizes the

280
00:09:28,320 --> 00:09:31,120
given transcript for such a good set

281
00:09:31,120 --> 00:09:33,839
so uh the analysis for case a and case b

282
00:09:33,839 --> 00:09:35,440
is involved and

283
00:09:35,440 --> 00:09:37,839
i have not explicitly given it in the in

284
00:09:37,839 --> 00:09:39,920
this presentation and for for more

285
00:09:39,920 --> 00:09:41,600
detailed analysis you can just go

286
00:09:41,600 --> 00:09:45,279
through the paper and yeah that's it

287
00:09:45,279 --> 00:09:48,439
thank you

288
00:09:50,880 --> 00:09:52,160
okay

289
00:09:52,160 --> 00:09:54,480
thank you abhijit uh please stay on the

290
00:09:54,480 --> 00:09:56,240
call because you have done a lot of work

291
00:09:56,240 --> 00:09:59,120
with the second talk in the same session

292
00:09:59,120 --> 00:10:00,959
um are there any questions from the

293
00:10:00,959 --> 00:10:02,480
audience a quick question

294
00:10:02,480 --> 00:10:04,720
yeah damien

295
00:10:04,720 --> 00:10:08,160
so i need to find a mic for uh

296
00:10:16,800 --> 00:10:19,360
all right thanks for a nice thought

297
00:10:19,360 --> 00:10:21,200
i just have a quick question

298
00:10:21,200 --> 00:10:22,320
um

299
00:10:22,320 --> 00:10:23,360
uh so

300
00:10:23,360 --> 00:10:25,120
from your results it seems like the

301
00:10:25,120 --> 00:10:27,519
construction is tight yes it is so if

302
00:10:27,519 --> 00:10:29,120
you wanted to increase the security

303
00:10:29,120 --> 00:10:30,399
level you would probably have to use

304
00:10:30,399 --> 00:10:31,519
more

305
00:10:31,519 --> 00:10:33,920
do you have any insights in

306
00:10:33,920 --> 00:10:36,320
the relation between how many calls you

307
00:10:36,320 --> 00:10:38,160
use versus how

308
00:10:38,160 --> 00:10:41,519
what's the security level you get

309
00:10:42,399 --> 00:10:44,640
so uh damian your voice is not so clear

310
00:10:44,640 --> 00:10:47,519
so could you uh help me nikki for what

311
00:10:47,519 --> 00:10:49,200
daniel is asking

312
00:10:49,200 --> 00:10:51,600
yeah so um

313
00:10:51,600 --> 00:10:54,880
to quickly summarize the the um idea

314
00:10:54,880 --> 00:10:56,560
it's like okay if if you you have a

315
00:10:56,560 --> 00:10:58,480
boundless tight if you want to extend

316
00:10:58,480 --> 00:11:00,640
this to to get um

317
00:11:00,640 --> 00:11:02,959
a higher a higher security balance you

318
00:11:02,959 --> 00:11:04,959
would add extra permutations of what

319
00:11:04,959 --> 00:11:06,640
would you do like it's it's seeing how

320
00:11:06,640 --> 00:11:08,240
to extend the construction more or less

321
00:11:08,240 --> 00:11:09,360
right

322
00:11:09,360 --> 00:11:12,240
okay so you mean to say that sorry the

323
00:11:12,240 --> 00:11:14,399
question is if you have any insights in

324
00:11:14,399 --> 00:11:16,160
the relationship between how many

325
00:11:16,160 --> 00:11:18,000
permutation calls you use and what's the

326
00:11:18,000 --> 00:11:20,160
security level you get so if you add one

327
00:11:20,160 --> 00:11:22,480
permutation call what's the security you

328
00:11:22,480 --> 00:11:25,200
can get etc

329
00:11:25,200 --> 00:11:28,000
well uh i think uh for the sequential

330
00:11:28,000 --> 00:11:29,519
mode of operation that is still not

331
00:11:29,519 --> 00:11:31,040
clear but if you have the sum of even

332
00:11:31,040 --> 00:11:33,440
muscle construction uh i believe that if

333
00:11:33,440 --> 00:11:35,360
you add one more computation calls then

334
00:11:35,360 --> 00:11:37,600
uh the security will get to power two

335
00:11:37,600 --> 00:11:40,240
raised to three and by four for the this

336
00:11:40,240 --> 00:11:43,839
this part so for

337
00:11:43,839 --> 00:11:46,000
say

338
00:11:46,000 --> 00:11:47,760
for this construction if you add one

339
00:11:47,760 --> 00:11:50,079
more permutation then i believe that the

340
00:11:50,079 --> 00:11:51,839
security can be uplifted to two days to

341
00:11:51,839 --> 00:11:53,920
chain by four but for sequential base

342
00:11:53,920 --> 00:11:56,560
construction like p edm or pdm mac

343
00:11:56,560 --> 00:11:59,839
it's still not clear so i i do not know

344
00:11:59,839 --> 00:12:02,000
the results like or what will be the

345
00:12:02,000 --> 00:12:02,959
relation

346
00:12:02,959 --> 00:12:04,720
something like that thank you

347
00:12:04,720 --> 00:12:06,240
but yes but uh

348
00:12:06,240 --> 00:12:08,399
for this uh this uh parallel mode of

349
00:12:08,399 --> 00:12:09,839
construction for this sum of events

350
00:12:09,839 --> 00:12:12,000
construction it can be done and in fact

351
00:12:12,000 --> 00:12:14,800
we are we are really working on it

352
00:12:14,800 --> 00:12:16,880
okay thanks let's uh thank the speaker

353
00:12:16,880 --> 00:12:18,399
again

354
00:12:18,399 --> 00:12:21,040
yeah thank you

355
00:12:22,480 --> 00:12:23,839
let's move on to the second target of

356
00:12:23,839 --> 00:12:26,320
the session provable security of sp

357
00:12:26,320 --> 00:12:29,200
networks with partial non-linear layers

358
00:12:29,200 --> 00:12:32,000
and it is a chun gua that will give the

359
00:12:32,000 --> 00:12:35,000
top

360
00:12:39,760 --> 00:12:42,639
the floor is yours

361
00:12:48,000 --> 00:12:49,680
i think you have to unmute yourself and

362
00:12:49,680 --> 00:12:51,440
start again

363
00:12:51,440 --> 00:12:55,760
i'm seeing the screen or just a window

364
00:12:56,959 --> 00:12:58,480
we see yourself

365
00:12:58,480 --> 00:13:00,880
yeah it looks fine here you can start

366
00:13:00,880 --> 00:13:03,440
okay so thanks for the introduction the

367
00:13:03,440 --> 00:13:05,600
work has cooperated with francois we

368
00:13:05,600 --> 00:13:07,680
just show and

369
00:13:07,680 --> 00:13:10,000
we study a blockchain for paradigm that

370
00:13:10,000 --> 00:13:11,920
deviates from the popular factual

371
00:13:11,920 --> 00:13:14,639
network and the normal spn network

372
00:13:14,639 --> 00:13:16,639
the motivation is to design block

373
00:13:16,639 --> 00:13:19,440
ciphers with less and gates

374
00:13:19,440 --> 00:13:22,320
because the ana gates is more expensive

375
00:13:22,320 --> 00:13:24,800
for side channel masking and for mpc

376
00:13:24,800 --> 00:13:26,240
implementations

377
00:13:26,240 --> 00:13:28,639
existing attempts include the zorro

378
00:13:28,639 --> 00:13:29,760
cipher

379
00:13:29,760 --> 00:13:32,320
low mc the highlights and the magazine

380
00:13:32,320 --> 00:13:35,440
frameworks so the central idea is to

381
00:13:35,440 --> 00:13:38,880
rephrase the popular sp spm paradigm

382
00:13:38,880 --> 00:13:40,399
concretely

383
00:13:40,399 --> 00:13:43,519
in the spn the subsequent layer

384
00:13:43,519 --> 00:13:46,560
divides the input into w chunks and all

385
00:13:46,560 --> 00:13:48,480
the tanks are then mapped to the

386
00:13:48,480 --> 00:13:51,920
corresponding outputs via an s-box

387
00:13:51,920 --> 00:13:54,399
but the partial sp networks removes a

388
00:13:54,399 --> 00:13:56,560
number of x-boxes and reduces

389
00:13:56,560 --> 00:13:59,600
non-linearity in every round so we call

390
00:13:59,600 --> 00:14:02,560
the number of remaining x-boxes divided

391
00:14:02,560 --> 00:14:07,839
by w the rate are of their structure

392
00:14:07,839 --> 00:14:09,600
the thumbnails of this partial sp

393
00:14:09,600 --> 00:14:12,240
networks have been open for years so to

394
00:14:12,240 --> 00:14:14,399
satellites we provide the first

395
00:14:14,399 --> 00:14:16,800
systematic probable security treatments

396
00:14:16,800 --> 00:14:18,639
and provide results

397
00:14:18,639 --> 00:14:20,639
for three settings

398
00:14:20,639 --> 00:14:23,440
first we use these assumptions for cca

399
00:14:23,440 --> 00:14:25,199
probable security

400
00:14:25,199 --> 00:14:26,639
they include

401
00:14:26,639 --> 00:14:29,199
all the s-boxes are the same which is an

402
00:14:29,199 --> 00:14:31,680
nb the public random communication the

403
00:14:31,680 --> 00:14:34,079
five rungs are using the same linear

404
00:14:34,079 --> 00:14:36,639
layer t and the t is slightly stronger

405
00:14:36,639 --> 00:14:38,399
than mds

406
00:14:38,399 --> 00:14:41,120
and the first and final run key

407
00:14:41,120 --> 00:14:43,199
are uniformly distributed

408
00:14:43,199 --> 00:14:45,199
further we assume the distinguisher

409
00:14:45,199 --> 00:14:47,600
makes q oracle queries and then we can

410
00:14:47,600 --> 00:14:50,240
prove this common versus bond security q

411
00:14:50,240 --> 00:14:53,199
square divided by two n

412
00:14:53,199 --> 00:14:56,560
the cca bound has severe limitations

413
00:14:56,560 --> 00:14:57,760
because it's in the information

414
00:14:57,760 --> 00:14:59,440
theoretical setting and limited by the

415
00:14:59,440 --> 00:15:02,160
domain of the xbox but we believe the

416
00:15:02,160 --> 00:15:04,000
most interesting point is a fair

417
00:15:04,000 --> 00:15:06,160
comparison regarding the wrongs needed

418
00:15:06,160 --> 00:15:09,360
for security so for cca security a

419
00:15:09,360 --> 00:15:13,040
normal spn needs three ws boxes while

420
00:15:13,040 --> 00:15:16,480
the rate one divided by two pspn it

421
00:15:16,480 --> 00:15:20,160
needs five w divided by two s boxes

422
00:15:20,160 --> 00:15:22,959
so we confirm psp and consume less

423
00:15:22,959 --> 00:15:27,479
nonlinearity in a formal model

424
00:15:28,320 --> 00:15:30,639
so facing the limitation on information

425
00:15:30,639 --> 00:15:32,399
theoretical probable security we also

426
00:15:32,399 --> 00:15:34,160
consider security against the impossible

427
00:15:34,160 --> 00:15:36,639
differential attacks and we consider the

428
00:15:36,639 --> 00:15:39,600
model of string io it assumes uh any

429
00:15:39,600 --> 00:15:42,320
differential with none zero input and

430
00:15:42,320 --> 00:15:43,920
output differences

431
00:15:43,920 --> 00:15:47,040
is possible on the xbox so it's an ideal

432
00:15:47,040 --> 00:15:48,959
assumption on that box

433
00:15:48,959 --> 00:15:51,199
so in this setting we consider foreign

434
00:15:51,199 --> 00:15:53,440
pspn and the prove that

435
00:15:53,440 --> 00:15:56,800
as long as they rate is at least three

436
00:15:56,800 --> 00:15:58,560
divided three quarters

437
00:15:58,560 --> 00:16:01,920
and the linear layer uses an mds

438
00:16:01,920 --> 00:16:04,320
transformation then there is no fall on

439
00:16:04,320 --> 00:16:05,279
the impossible differential

440
00:16:05,279 --> 00:16:07,680
distinguishes

441
00:16:07,680 --> 00:16:09,920
as interpretation of the second result

442
00:16:09,920 --> 00:16:11,759
there is no fall on the impossible

443
00:16:11,759 --> 00:16:14,320
differential distinguisher when the read

444
00:16:14,320 --> 00:16:16,880
winners rate of the pstn exceeds

445
00:16:16,880 --> 00:16:18,720
3 divided by 4

446
00:16:18,720 --> 00:16:20,399
in some sense it is dense

447
00:16:20,399 --> 00:16:23,040
unless the details of the components are

448
00:16:23,040 --> 00:16:25,360
considered this positive result is

449
00:16:25,360 --> 00:16:29,199
better than the 8-s a-s live spn so it

450
00:16:29,199 --> 00:16:30,079
means

451
00:16:30,079 --> 00:16:32,320
it makes sense to trade the stronger

452
00:16:32,320 --> 00:16:34,639
linear layers with x-boxes and the

453
00:16:34,639 --> 00:16:36,800
structure structural security may be

454
00:16:36,800 --> 00:16:39,759
improved by this trading

455
00:16:39,759 --> 00:16:42,880
for our last result we consider sparse

456
00:16:42,880 --> 00:16:45,839
pspns with very small rate as in low emc

457
00:16:45,839 --> 00:16:47,519
and hadis

458
00:16:47,519 --> 00:16:49,279
later drove the

459
00:16:49,279 --> 00:16:52,160
reciprocal reciprocal of the rate and

460
00:16:52,160 --> 00:16:55,199
see this figure for example

461
00:16:55,199 --> 00:16:57,600
here a forklift result is that

462
00:16:57,600 --> 00:16:59,680
there always exists a row minus one

463
00:16:59,680 --> 00:17:01,120
wrong differential

464
00:17:01,120 --> 00:17:03,680
trails with no active xbox as well at

465
00:17:03,680 --> 00:17:04,880
all

466
00:17:04,880 --> 00:17:06,880
then the question is how to design the

467
00:17:06,880 --> 00:17:09,280
linear layers to ensure a security lower

468
00:17:09,280 --> 00:17:11,199
bound regarding the number of activist

469
00:17:11,199 --> 00:17:12,319
boxes

470
00:17:12,319 --> 00:17:15,359
there were was no obvious answer and so

471
00:17:15,359 --> 00:17:17,839
low emc uses distinct pursuit of random

472
00:17:17,839 --> 00:17:21,280
linear permutations

473
00:17:21,280 --> 00:17:23,280
to this question our idea just

474
00:17:23,280 --> 00:17:25,839
generalizes the existing idea of using

475
00:17:25,839 --> 00:17:28,240
mdf transformations to ensure optimal

476
00:17:28,240 --> 00:17:32,160
differential security in two round spn's

477
00:17:32,160 --> 00:17:33,840
the linear transformation key in the

478
00:17:33,840 --> 00:17:35,520
tool on scn is

479
00:17:35,520 --> 00:17:38,080
designed such that every one round

480
00:17:38,080 --> 00:17:39,360
differential

481
00:17:39,360 --> 00:17:42,559
data one to data two years a code word

482
00:17:42,559 --> 00:17:44,320
of an mds code

483
00:17:44,320 --> 00:17:46,160
then the mds property will use for a

484
00:17:46,160 --> 00:17:48,320
lower bound on the number of additives

485
00:17:48,320 --> 00:17:50,240
boxes on this differential

486
00:17:50,240 --> 00:17:53,360
so we generalized this idea to the pspn

487
00:17:53,360 --> 00:17:55,200
with very small rate

488
00:17:55,200 --> 00:17:58,799
we designed the linear layers such that

489
00:17:58,799 --> 00:18:00,799
roles run the differential trail could

490
00:18:00,799 --> 00:18:03,840
have zero activates box but then in this

491
00:18:03,840 --> 00:18:04,640
case

492
00:18:04,640 --> 00:18:06,720
the road differences

493
00:18:06,720 --> 00:18:08,720
the low round differences data one

494
00:18:08,720 --> 00:18:11,679
product rule will yield a code word of

495
00:18:11,679 --> 00:18:14,880
mds code with very long code words then

496
00:18:14,880 --> 00:18:16,640
guess the property of

497
00:18:16,640 --> 00:18:18,960
the code of the initial lower bound on

498
00:18:18,960 --> 00:18:21,120
the number of active responses in raw

499
00:18:21,120 --> 00:18:24,400
drawings and then by an analysis

500
00:18:24,400 --> 00:18:26,480
this ensures at least one active

501
00:18:26,480 --> 00:18:30,799
response in every row wrong differential

502
00:18:30,799 --> 00:18:33,120
with this idea we could construct an mds

503
00:18:33,120 --> 00:18:35,760
code and use the generation matrix to

504
00:18:35,760 --> 00:18:38,160
have rho minus one distinct linear

505
00:18:38,160 --> 00:18:41,760
transformations for the psg this joins a

506
00:18:41,760 --> 00:18:45,200
clear underlying mathematical principle

507
00:18:45,200 --> 00:18:47,679
as a triple extension by composing this

508
00:18:47,679 --> 00:18:50,320
result our linear layers ensure at least

509
00:18:50,320 --> 00:18:51,200
a

510
00:18:51,200 --> 00:18:54,799
t-active x-boxes in every zero runs

511
00:18:54,799 --> 00:18:57,360
this may be while it is triple this may

512
00:18:57,360 --> 00:18:59,600
be a useful starting point for mpc

513
00:18:59,600 --> 00:19:01,600
oriented long cyphers

514
00:19:01,600 --> 00:19:03,360
for example one could begin with an

515
00:19:03,360 --> 00:19:06,080
instantiation of this construction and

516
00:19:06,080 --> 00:19:07,919
then seek for more fine-grain the

517
00:19:07,919 --> 00:19:10,400
security analysis and refinements and

518
00:19:10,400 --> 00:19:13,679
this may give rise to indian elegant and

519
00:19:13,679 --> 00:19:16,240
secure psp and cyphers please see our

520
00:19:16,240 --> 00:19:19,679
full video for more discussion

521
00:19:19,679 --> 00:19:21,679
thank you for listening and welcome for

522
00:19:21,679 --> 00:19:24,679
comments

523
00:19:36,720 --> 00:19:39,200
so um in your result if i understand it

524
00:19:39,200 --> 00:19:42,400
correctly you are looking only at bit at

525
00:19:42,400 --> 00:19:44,480
uh s box activity patterns in the

526
00:19:44,480 --> 00:19:46,240
truncated differentials

527
00:19:46,240 --> 00:19:48,400
so how do you see the impact of actually

528
00:19:48,400 --> 00:19:51,280
looking at the s box itself instead of

529
00:19:51,280 --> 00:19:54,879
just is it active or not active

530
00:19:57,919 --> 00:19:59,360
i'm sorry

531
00:19:59,360 --> 00:20:02,400
okay i'll repeat the question so um is

532
00:20:02,400 --> 00:20:04,559
it correct to say that you're looking at

533
00:20:04,559 --> 00:20:06,640
truncated differentials

534
00:20:06,640 --> 00:20:09,679
by activity pattern so you're looking at

535
00:20:09,679 --> 00:20:12,240
whether an s-box is active

536
00:20:12,240 --> 00:20:14,400
difference or not active no difference

537
00:20:14,400 --> 00:20:16,240
is that correct

538
00:20:16,240 --> 00:20:17,200
yes

539
00:20:17,200 --> 00:20:21,039
yeah so if you want to look inside the s

540
00:20:21,039 --> 00:20:21,919
box

541
00:20:21,919 --> 00:20:23,600
how would it impact your result do you

542
00:20:23,600 --> 00:20:26,480
have any thoughts on this

543
00:20:26,480 --> 00:20:28,000
uh thanks for the question i think if

544
00:20:28,000 --> 00:20:28,960
you

545
00:20:28,960 --> 00:20:31,280
if you if we look into the details of

546
00:20:31,280 --> 00:20:32,559
flashbacks

547
00:20:32,559 --> 00:20:35,280
this assumption may affect the

548
00:20:35,280 --> 00:20:37,520
conclusion of the second result for

549
00:20:37,520 --> 00:20:39,520
impossible differential

550
00:20:39,520 --> 00:20:41,360
um i think uh

551
00:20:41,360 --> 00:20:44,559
taking the details of the stocks and the

552
00:20:44,559 --> 00:20:47,840
linear layers into that result to refine

553
00:20:47,840 --> 00:20:50,080
security or insecurity against the

554
00:20:50,080 --> 00:20:51,600
involvement eventually the

555
00:20:51,600 --> 00:20:55,120
interesting future work of course

556
00:20:55,760 --> 00:20:58,000
yeah thanks let's maybe move on to the

557
00:20:58,000 --> 00:21:02,679
next talk but thank the speaker again

558
00:21:04,640 --> 00:21:07,840
let's talk is uh algorithm substitution

559
00:21:07,840 --> 00:21:11,679
attacks and uh state reset detection and

560
00:21:11,679 --> 00:21:13,520
asymmetric unifications

561
00:21:13,520 --> 00:21:16,080
and it's philip hutch that will give the

562
00:21:16,080 --> 00:21:16,960
talk

563
00:21:16,960 --> 00:21:19,039
phillip the floor is yours thanks for

564
00:21:19,039 --> 00:21:20,400
the introduction can you see my slides

565
00:21:20,400 --> 00:21:22,720
all right

566
00:21:23,600 --> 00:21:27,200
yeah perfect go ahead awesome okay yes

567
00:21:27,200 --> 00:21:29,760
uh so there were two main contributions

568
00:21:29,760 --> 00:21:31,679
of our work to algorithm substitution

569
00:21:31,679 --> 00:21:33,679
attacks uh one was a formalism on

570
00:21:33,679 --> 00:21:38,000
detecting algorithm substitution attacks

571
00:21:38,000 --> 00:21:40,400
with uh state resets and the other one

572
00:21:40,400 --> 00:21:43,400
was

573
00:21:45,600 --> 00:21:47,200
sorry i'm getting some interruptions

574
00:21:47,200 --> 00:21:49,440
here

575
00:21:50,240 --> 00:21:53,039
uh the second area was state uh

576
00:21:53,039 --> 00:21:55,039
asymmetric methods for subverting uh

577
00:21:55,039 --> 00:21:57,760
symmetric encryption

578
00:21:57,760 --> 00:22:00,240
an algorithm substitution attack is a or

579
00:22:00,240 --> 00:22:02,880
an asa as i'll refer to it is an attack

580
00:22:02,880 --> 00:22:05,039
on a cryptographic scheme where an

581
00:22:05,039 --> 00:22:06,799
attacker substitutes a component of the

582
00:22:06,799 --> 00:22:09,039
scheme for a malicious version in our

583
00:22:09,039 --> 00:22:10,640
case we're mostly going to consider

584
00:22:10,640 --> 00:22:12,880
symmetric encryption specifically the

585
00:22:12,880 --> 00:22:15,360
encryption function se.inc from the

586
00:22:15,360 --> 00:22:17,360
symmetric encryption scheme se is being

587
00:22:17,360 --> 00:22:19,600
substituted with an algorithm sub dot

588
00:22:19,600 --> 00:22:21,520
inc which will run instead on every

589
00:22:21,520 --> 00:22:23,520
invocation of encryption

590
00:22:23,520 --> 00:22:25,600
we call sub dot inc the subverted

591
00:22:25,600 --> 00:22:27,600
algorithm

592
00:22:27,600 --> 00:22:29,760
so the attacker on this model has two

593
00:22:29,760 --> 00:22:32,159
goals the first is to recover the secret

594
00:22:32,159 --> 00:22:33,600
key of the users of the symmetric

595
00:22:33,600 --> 00:22:36,000
encryption scheme the second is to

596
00:22:36,000 --> 00:22:37,919
remain completely undetected by said

597
00:22:37,919 --> 00:22:38,960
users

598
00:22:38,960 --> 00:22:41,200
the first goal is fairly straightforward

599
00:22:41,200 --> 00:22:42,559
but we'll be a bit more precise about

600
00:22:42,559 --> 00:22:44,400
the second goal so what does it mean to

601
00:22:44,400 --> 00:22:46,640
be undetected

602
00:22:46,640 --> 00:22:47,760
to define what it means to be

603
00:22:47,760 --> 00:22:49,840
undetectable we will use a detectability

604
00:22:49,840 --> 00:22:51,880
game this is a simple simple

605
00:22:51,880 --> 00:22:54,159
distinguishability game where the user u

606
00:22:54,159 --> 00:22:56,320
plays the role of the adversary tasked

607
00:22:56,320 --> 00:22:57,919
with determining whether the oracle they

608
00:22:57,919 --> 00:23:00,480
are given access to is the subverted or

609
00:23:00,480 --> 00:23:02,320
the unsubverted algorithm

610
00:23:02,320 --> 00:23:04,640
if u has a strong advantage at this game

611
00:23:04,640 --> 00:23:06,960
then we say that the asa is detectable

612
00:23:06,960 --> 00:23:09,360
if not it is undetectable

613
00:23:09,360 --> 00:23:11,280
note that we use a subversion key k bar

614
00:23:11,280 --> 00:23:13,039
to parametrize a subverted encryption

615
00:23:13,039 --> 00:23:14,000
function

616
00:23:14,000 --> 00:23:15,840
k bar is a secret value known only to

617
00:23:15,840 --> 00:23:18,000
the attacker

618
00:23:18,000 --> 00:23:20,880
in 2014 belary patterson and rogoway

619
00:23:20,880 --> 00:23:23,280
renewed interest in this area and coined

620
00:23:23,280 --> 00:23:25,760
the term asa they proved this theorem

621
00:23:25,760 --> 00:23:28,159
showing that a widely applicable asa is

622
00:23:28,159 --> 00:23:29,360
possible

623
00:23:29,360 --> 00:23:32,080
in 2015 belaria jaeger and kane improved

624
00:23:32,080 --> 00:23:34,880
the asa of bpr by removing dependence on

625
00:23:34,880 --> 00:23:37,039
state and improved the analysis of the

626
00:23:37,039 --> 00:23:38,799
detectability as well

627
00:23:38,799 --> 00:23:41,200
the main idea between behind these asas

628
00:23:41,200 --> 00:23:43,840
was to resample the ciphertext c until

629
00:23:43,840 --> 00:23:46,799
the result of a prf applied to c and k

630
00:23:46,799 --> 00:23:49,279
bar corresponds to correct information

631
00:23:49,279 --> 00:23:52,240
about a single bit of the of the key k

632
00:23:52,240 --> 00:23:54,240
in this way the attacker could recover k

633
00:23:54,240 --> 00:23:55,760
after observing some number of

634
00:23:55,760 --> 00:23:57,279
ciphertexts and recovering that

635
00:23:57,279 --> 00:23:58,640
information

636
00:23:58,640 --> 00:24:00,400
undetectability follows from the

637
00:24:00,400 --> 00:24:02,080
unpredictability of the outputs of the

638
00:24:02,080 --> 00:24:04,159
prf making the distribution of

639
00:24:04,159 --> 00:24:06,240
ciphertexts indistinguishable from

640
00:24:06,240 --> 00:24:08,880
normal encryption

641
00:24:08,880 --> 00:24:10,000
so there are two research directions

642
00:24:10,000 --> 00:24:11,520
that we make contributions to philip

643
00:24:11,520 --> 00:24:13,679
could you hold on for a second

644
00:24:13,679 --> 00:24:15,279
yeah

645
00:24:15,279 --> 00:24:17,760
so the computer is suddenly rebooting do

646
00:24:17,760 --> 00:24:18,880
you hear me

647
00:24:18,880 --> 00:24:20,480
yes

648
00:24:20,480 --> 00:24:21,919
i can hear you please hold on for a

649
00:24:21,919 --> 00:24:24,159
second

650
00:24:31,360 --> 00:24:33,679
i don't see any problem

651
00:24:33,679 --> 00:24:35,360
so kevin we have a problem here so the

652
00:24:35,360 --> 00:24:37,840
computer started to reboot or what

653
00:24:37,840 --> 00:24:39,760
happened

654
00:24:39,760 --> 00:24:42,000
so we'll be back in a second

655
00:24:42,000 --> 00:24:45,080
all right

656
00:24:56,080 --> 00:24:57,760
i suppose we should ask what operating

657
00:24:57,760 --> 00:25:01,158
system it was

658
00:25:06,320 --> 00:25:08,640
probably frantically trying to

659
00:25:08,640 --> 00:25:11,200
figure out what happened so

660
00:25:11,200 --> 00:25:14,679
this is a first

661
00:25:15,919 --> 00:25:17,200
hello

662
00:25:17,200 --> 00:25:19,440
hello

663
00:25:25,120 --> 00:25:26,640
hello

664
00:25:26,640 --> 00:25:29,640
hello

665
00:25:32,320 --> 00:25:35,039
oh be careful

666
00:25:36,640 --> 00:25:38,720
hello philip do you still hear me yes i

667
00:25:38,720 --> 00:25:40,640
can hear you can you hear me

668
00:25:40,640 --> 00:25:42,400
we don't hear you yet so we're still

669
00:25:42,400 --> 00:25:45,919
working on the sound right

670
00:25:46,000 --> 00:25:47,760
i think the online participants can hear

671
00:25:47,760 --> 00:25:49,360
you but you're a bit faint in the room

672
00:25:49,360 --> 00:25:52,080
so uh yeah

673
00:25:52,080 --> 00:25:56,678
one second still i'm sorry philip yes

674
00:25:57,180 --> 00:26:02,569
[Music]

675
00:26:05,039 --> 00:26:07,039
test test do you hear me in the back

676
00:26:07,039 --> 00:26:10,480
hello yes we can hear you

677
00:26:20,559 --> 00:26:24,039
i'll just go

678
00:26:27,200 --> 00:26:29,279
so the zoom is not connected to the room

679
00:26:29,279 --> 00:26:31,520
right

680
00:26:32,000 --> 00:26:35,120
i don't know but uh i think it's

681
00:26:35,120 --> 00:26:38,159
the microphone should get in right so i

682
00:26:38,159 --> 00:26:40,799
think this is the speaker going out that

683
00:26:40,799 --> 00:26:42,400
might be connected to internal speakers

684
00:26:42,400 --> 00:26:44,240
and not to uh

685
00:26:44,240 --> 00:26:47,360
where does the microphone

686
00:26:47,360 --> 00:26:49,679
things on the microphone i think it's uh

687
00:26:49,679 --> 00:26:50,840
like this

688
00:26:50,840 --> 00:26:54,240
cable um

689
00:26:59,279 --> 00:27:01,440
yeah

690
00:27:01,600 --> 00:27:03,919
can people on the zoom hear me

691
00:27:03,919 --> 00:27:06,470
yeah yeah we can hear you

692
00:27:06,470 --> 00:27:09,360
[Music]

693
00:27:09,360 --> 00:27:13,639
yeah so how do we do that

694
00:27:19,670 --> 00:27:21,440
[Music]

695
00:27:21,440 --> 00:27:23,039
you just need

696
00:27:23,039 --> 00:27:24,000
yeah

697
00:27:24,000 --> 00:27:27,480
this thing here

698
00:27:42,720 --> 00:27:45,520
yeah okay can you say something phil

699
00:27:45,520 --> 00:27:46,399
hello

700
00:27:46,399 --> 00:27:47,360
hello

701
00:27:47,360 --> 00:27:49,039
can you hear that test

702
00:27:49,039 --> 00:27:51,440
how was it

703
00:27:52,080 --> 00:27:53,679
no i think i think

704
00:27:53,679 --> 00:27:55,360
the mic is fine right let's just begin

705
00:27:55,360 --> 00:27:56,480
here

706
00:27:56,480 --> 00:27:58,799
test this is zoom

707
00:27:58,799 --> 00:28:02,240
yes we can hear it

708
00:28:02,240 --> 00:28:03,600
yeah

709
00:28:03,600 --> 00:28:05,760
that would make sense

710
00:28:05,760 --> 00:28:07,440
i can hear everybody else on the on the

711
00:28:07,440 --> 00:28:10,399
zoom channel but i guess

712
00:28:13,760 --> 00:28:15,470
tests tests

713
00:28:15,470 --> 00:28:18,399
[Music]

714
00:28:18,399 --> 00:28:21,279
can you say something test test

715
00:28:21,279 --> 00:28:23,600
okay two cryptographers walk into a bar

716
00:28:23,600 --> 00:28:24,960
right

717
00:28:24,960 --> 00:28:26,480
yeah

718
00:28:26,480 --> 00:28:27,520
yeah

719
00:28:27,520 --> 00:28:31,200
you already did that all right

720
00:28:31,200 --> 00:28:33,039
so that is connected

721
00:28:33,039 --> 00:28:35,600
to something the same as system oh what

722
00:28:35,600 --> 00:28:38,959
was the message that came up

723
00:28:41,120 --> 00:28:44,639
your default speaker has changed

724
00:28:46,320 --> 00:28:48,240
so maybe phil you can say something

725
00:28:48,240 --> 00:28:51,440
hello hello test test

726
00:28:51,440 --> 00:28:53,520
no

727
00:28:54,480 --> 00:28:56,080
yeah we don't hear it in the room right

728
00:28:56,080 --> 00:28:58,000
we don't hear it yeah i think something

729
00:28:58,000 --> 00:28:59,670
changed from the audio yesterday

730
00:28:59,670 --> 00:29:02,809
[Music]

731
00:29:04,080 --> 00:29:05,840
and that experiment may not be working

732
00:29:05,840 --> 00:29:08,959
oh it's just before but

733
00:29:09,120 --> 00:29:10,840
how do you get

734
00:29:10,840 --> 00:29:15,678
it is it from zoom or uh

735
00:29:15,840 --> 00:29:17,840
here maybe i think you have to set the

736
00:29:17,840 --> 00:29:19,600
output for you

737
00:29:19,600 --> 00:29:21,440
i think it's okay not now but now we

738
00:29:21,440 --> 00:29:22,880
hear it right

739
00:29:22,880 --> 00:29:25,360
can you say something fella hello

740
00:29:25,360 --> 00:29:26,960
oh perfect hear me

741
00:29:26,960 --> 00:29:28,799
oh there we go

742
00:29:28,799 --> 00:29:32,159
thanks luckily some people are here

743
00:29:32,159 --> 00:29:34,240
yeah go up go along uh go ahead please

744
00:29:34,240 --> 00:29:35,440
in fairness i think we should allow

745
00:29:35,440 --> 00:29:37,200
philip to back up

746
00:29:37,200 --> 00:29:39,039
yeah so i i don't want to go all the way

747
00:29:39,039 --> 00:29:42,320
back to the beginning but uh but um

748
00:29:42,320 --> 00:29:44,240
any case so i talked about a lot of the

749
00:29:44,240 --> 00:29:45,760
background i think i just finished the

750
00:29:45,760 --> 00:29:46,960
like everything i was going to say about

751
00:29:46,960 --> 00:29:48,399
the background about how we how we

752
00:29:48,399 --> 00:29:51,360
define undetectability of asymmetric uh

753
00:29:51,360 --> 00:29:53,919
our algorithm substitution attacks and

754
00:29:53,919 --> 00:29:55,919
then a little bit about some previous

755
00:29:55,919 --> 00:29:57,600
results that came early on in the

756
00:29:57,600 --> 00:29:59,919
research area um

757
00:29:59,919 --> 00:30:01,440
and so

758
00:30:01,440 --> 00:30:02,880
we had these couple of theorems that

759
00:30:02,880 --> 00:30:05,120
were similar in a lot of ways one an

760
00:30:05,120 --> 00:30:07,120
improvement on the other but basically

761
00:30:07,120 --> 00:30:09,919
uh asas on symmetric encryption

762
00:30:09,919 --> 00:30:13,600
are can can be generally produced like

763
00:30:13,600 --> 00:30:15,039
and

764
00:30:15,039 --> 00:30:17,039
and we have these two results uh but i

765
00:30:17,039 --> 00:30:18,480
think i'll move forward from there if

766
00:30:18,480 --> 00:30:20,000
that's all right um

767
00:30:20,000 --> 00:30:22,240
and and talk about some of the results

768
00:30:22,240 --> 00:30:25,440
that we contributed

769
00:30:25,440 --> 00:30:26,880
so there

770
00:30:26,880 --> 00:30:28,320
as i said before there are two research

771
00:30:28,320 --> 00:30:30,080
directions that we make contributions to

772
00:30:30,080 --> 00:30:32,159
uh the first one was that we developed a

773
00:30:32,159 --> 00:30:35,200
comprehensive formal model for analyzing

774
00:30:35,200 --> 00:30:38,240
the detectability of stateful asas which

775
00:30:38,240 --> 00:30:40,960
incorporates state resets and second we

776
00:30:40,960 --> 00:30:42,799
developed asymmetric asas against

777
00:30:42,799 --> 00:30:44,720
symmetric encryption where the attacker

778
00:30:44,720 --> 00:30:46,559
has additional guarantees that they are

779
00:30:46,559 --> 00:30:51,039
the only ones who can recover the key k

780
00:30:51,039 --> 00:30:54,480
so on the topic of state resets so far

781
00:30:54,480 --> 00:30:56,320
treatment of state has been inconsistent

782
00:30:56,320 --> 00:30:58,240
in the literature on asas

783
00:30:58,240 --> 00:31:00,720
bpr stated in their paper that a reset

784
00:31:00,720 --> 00:31:02,320
of the state will lead to increased

785
00:31:02,320 --> 00:31:04,799
detection ability but this increase does

786
00:31:04,799 --> 00:31:07,360
not lead to actual detection

787
00:31:07,360 --> 00:31:09,760
on the other hand djk claimed that a

788
00:31:09,760 --> 00:31:11,840
state reset as can happen with a reboot

789
00:31:11,840 --> 00:31:13,760
or cloning to create a virtual machine

790
00:31:13,760 --> 00:31:16,799
leads in their attack to detection

791
00:31:16,799 --> 00:31:18,880
this seems contradictory so which is

792
00:31:18,880 --> 00:31:21,120
actually the case does state reset lead

793
00:31:21,120 --> 00:31:23,120
to detection or not

794
00:31:23,120 --> 00:31:25,440
so bjk and their paper

795
00:31:25,440 --> 00:31:27,840
disallowed state entirely defining all

796
00:31:27,840 --> 00:31:31,360
stateful asas to be detectable

797
00:31:31,360 --> 00:31:32,960
other papers have gone either way

798
00:31:32,960 --> 00:31:34,720
excluding analysis of state from their

799
00:31:34,720 --> 00:31:36,559
formalism or including some version of

800
00:31:36,559 --> 00:31:39,440
state reset and whether a nasa will be

801
00:31:39,440 --> 00:31:40,960
detectable

802
00:31:40,960 --> 00:31:42,640
so we define the following state reset

803
00:31:42,640 --> 00:31:44,559
detectability game this game

804
00:31:44,559 --> 00:31:46,159
incorporates the most sophisticated

805
00:31:46,159 --> 00:31:47,440
version of state reset that we can

806
00:31:47,440 --> 00:31:49,519
imagine a user having access to the

807
00:31:49,519 --> 00:31:52,159
ability to reset state to any previous

808
00:31:52,159 --> 00:31:54,320
state in the game so that's this reset

809
00:31:54,320 --> 00:31:56,480
oracle here

810
00:31:56,480 --> 00:31:57,919
aside from the reset oracle and the

811
00:31:57,919 --> 00:32:01,679
state values that are being recorded

812
00:32:01,679 --> 00:32:03,200
this game is the same as the previous

813
00:32:03,200 --> 00:32:05,279
detectability game that i showed but

814
00:32:05,279 --> 00:32:06,880
this is more comprehensive than any

815
00:32:06,880 --> 00:32:08,559
other treatment of state reset in the

816
00:32:08,559 --> 00:32:09,919
literature and it leads to different

817
00:32:09,919 --> 00:32:11,919
conclusions about whether or not certain

818
00:32:11,919 --> 00:32:15,600
other published assays are detectable

819
00:32:15,600 --> 00:32:17,120
so in our paper we argue that this

820
00:32:17,120 --> 00:32:19,120
notion of detectability is the most

821
00:32:19,120 --> 00:32:20,559
reasonable way to approach the question

822
00:32:20,559 --> 00:32:23,120
of state in asas we concluded that the

823
00:32:23,120 --> 00:32:24,559
following two points should be heated

824
00:32:24,559 --> 00:32:26,480
for future research in the area for

825
00:32:26,480 --> 00:32:28,240
researchers who avoid or discount

826
00:32:28,240 --> 00:32:30,399
stateful asas it should be made clear

827
00:32:30,399 --> 00:32:32,080
what detection threat model they are

828
00:32:32,080 --> 00:32:34,640
working in and why state is unrealistic

829
00:32:34,640 --> 00:32:36,480
for the asa

830
00:32:36,480 --> 00:32:38,000
for researchers who develop stateful

831
00:32:38,000 --> 00:32:40,480
asas undetectability should be proven in

832
00:32:40,480 --> 00:32:42,559
a formal model including some version of

833
00:32:42,559 --> 00:32:44,880
state reset or detection methods in such

834
00:32:44,880 --> 00:32:47,679
a framework should be acknowledged

835
00:32:47,679 --> 00:32:49,440
our second contribution is to asymmetric

836
00:32:49,440 --> 00:32:52,159
asas in an asymmetric asa the attacker

837
00:32:52,159 --> 00:32:54,399
wishes to have guarantees that their asa

838
00:32:54,399 --> 00:32:56,880
is not exploitable by anybody else

839
00:32:56,880 --> 00:32:58,559
consider the fact that the subversion

840
00:32:58,559 --> 00:33:00,559
key k bar that i talked about is

841
00:33:00,559 --> 00:33:03,360
embedded in the asa itself and is not

842
00:33:03,360 --> 00:33:05,519
securely held by the attacker

843
00:33:05,519 --> 00:33:07,760
if a powerful third party were able to

844
00:33:07,760 --> 00:33:09,840
recover this key say by reverse

845
00:33:09,840 --> 00:33:12,159
engineering then they would be able to

846
00:33:12,159 --> 00:33:13,600
obtain the same capabilities as the

847
00:33:13,600 --> 00:33:15,440
attacker which is

848
00:33:15,440 --> 00:33:17,279
not what the attacker would want

849
00:33:17,279 --> 00:33:18,799
the solution here is really to replace

850
00:33:18,799 --> 00:33:21,519
the subversion key k bar by a pair of

851
00:33:21,519 --> 00:33:23,120
asymmetric keys

852
00:33:23,120 --> 00:33:25,760
if only ek is embedded in the asa then

853
00:33:25,760 --> 00:33:27,679
this is the only value recoverable by

854
00:33:27,679 --> 00:33:29,120
reverse engineering

855
00:33:29,120 --> 00:33:31,519
if xk is required for exploitation then

856
00:33:31,519 --> 00:33:33,360
our imagined third party cannot exploit

857
00:33:33,360 --> 00:33:34,720
the asa

858
00:33:34,720 --> 00:33:36,480
we call asas that use two keys in this

859
00:33:36,480 --> 00:33:39,279
manner asymmetric asas asymmetric ksas

860
00:33:39,279 --> 00:33:40,720
on symmetric encryption were first

861
00:33:40,720 --> 00:33:43,600
suggested by bpr in their seminal paper

862
00:33:43,600 --> 00:33:46,799
but they did not provide a construction

863
00:33:46,799 --> 00:33:48,720
so we created two asymmetric ksas on

864
00:33:48,720 --> 00:33:50,320
symmetric encryption that used the

865
00:33:50,320 --> 00:33:52,880
techniques from the asas of bpr and bjk

866
00:33:52,880 --> 00:33:54,480
that i talked about

867
00:33:54,480 --> 00:33:56,559
the first is completely undetectable to

868
00:33:56,559 --> 00:33:59,840
a detector who knows ek the embedded key

869
00:33:59,840 --> 00:34:01,279
the second one satisfies a slightly

870
00:34:01,279 --> 00:34:04,320
relaxed condition being undetectable to

871
00:34:04,320 --> 00:34:06,480
undetectable to a detector who does not

872
00:34:06,480 --> 00:34:09,359
know ek and secure against an adversary

873
00:34:09,359 --> 00:34:11,199
who does know ek

874
00:34:11,199 --> 00:34:12,800
so there are many additional details and

875
00:34:12,800 --> 00:34:14,480
several other subtopics covered in the

876
00:34:14,480 --> 00:34:16,399
paper including how our new notion of

877
00:34:16,399 --> 00:34:18,399
detectability applies to other published

878
00:34:18,399 --> 00:34:21,199
asas besides the one i talked about uh

879
00:34:21,199 --> 00:34:22,320
in-depth analysis on how many

880
00:34:22,320 --> 00:34:23,839
ciphertexts are required for key

881
00:34:23,839 --> 00:34:26,159
recovery and and a framework for

882
00:34:26,159 --> 00:34:28,399
generalizing modifications to symmetric

883
00:34:28,399 --> 00:34:30,480
asas to make them asymmetric

884
00:34:30,480 --> 00:34:32,480
but i'll leave it at that for now and uh

885
00:34:32,480 --> 00:34:35,280
and welcome any questions

886
00:34:35,280 --> 00:34:36,560
let's thank the speaker thank you

887
00:34:36,560 --> 00:34:38,879
phillip

888
00:34:41,520 --> 00:34:43,199
thanks phillip for really interesting

889
00:34:43,199 --> 00:34:45,760
talk on algorithm substitution attacks

890
00:34:45,760 --> 00:34:47,199
mass surveillance but of course if you

891
00:34:47,199 --> 00:34:49,359
give a talk on this subject intelligence

892
00:34:49,359 --> 00:34:52,320
agencies might sabotage the system so uh

893
00:34:52,320 --> 00:34:55,520
sorry for the interruption

894
00:34:55,679 --> 00:34:56,719
yeah

895
00:34:56,719 --> 00:34:58,000
yeah if there are questions from the

896
00:34:58,000 --> 00:35:02,119
audience that we have to take them

897
00:35:05,920 --> 00:35:07,440
no actually i have a

898
00:35:07,440 --> 00:35:08,800
quick question with like more of a

899
00:35:08,800 --> 00:35:10,560
philosophical question so what you

900
00:35:10,560 --> 00:35:13,359
explain in your paper is that um while

901
00:35:13,359 --> 00:35:15,680
we assume in this model that the target

902
00:35:15,680 --> 00:35:18,160
themselves will not scrutinize the the

903
00:35:18,160 --> 00:35:20,160
code that they are using some third

904
00:35:20,160 --> 00:35:21,440
party might find out about the

905
00:35:21,440 --> 00:35:23,920
subversion and reverse engineer to learn

906
00:35:23,920 --> 00:35:25,359
the embedded key

907
00:35:25,359 --> 00:35:27,760
owners reading this um it seemed to me

908
00:35:27,760 --> 00:35:29,760
that there might be a link

909
00:35:29,760 --> 00:35:31,839
potentially with uh white box

910
00:35:31,839 --> 00:35:34,240
cryptography where the target themselves

911
00:35:34,240 --> 00:35:36,079
can scrutinize the code but should not

912
00:35:36,079 --> 00:35:38,160
be able to extract the key so i'm

913
00:35:38,160 --> 00:35:40,240
wondering if you see some links between

914
00:35:40,240 --> 00:35:41,599
these fields or what your thoughts are

915
00:35:41,599 --> 00:35:43,680
on this

916
00:35:43,680 --> 00:35:45,520
yeah so uh and not really my

917
00:35:45,520 --> 00:35:47,200
observations but uh

918
00:35:47,200 --> 00:35:50,800
before um before these were called asas

919
00:35:50,800 --> 00:35:52,880
necessarily and and the the the scope

920
00:35:52,880 --> 00:35:56,079
narrowed a bit uh in in velary uh

921
00:35:56,079 --> 00:35:58,160
patterson roadways original paper most

922
00:35:58,160 --> 00:36:00,160
of the research that they were citing uh

923
00:36:00,160 --> 00:36:03,680
was um from yang and young on uh black

924
00:36:03,680 --> 00:36:05,839
box cryptography and the dangers of it

925
00:36:05,839 --> 00:36:07,440
so there was an original paper i think

926
00:36:07,440 --> 00:36:09,359
as far back as

927
00:36:09,359 --> 00:36:12,160
late 80s on why we should not be doing

928
00:36:12,160 --> 00:36:14,640
black box cryptography uh and

929
00:36:14,640 --> 00:36:17,760
essentially this this sort of model uh

930
00:36:17,760 --> 00:36:20,240
assumes that the user has black box

931
00:36:20,240 --> 00:36:22,000
access to their cryptography and can't

932
00:36:22,000 --> 00:36:23,839
actually read the code because obviously

933
00:36:23,839 --> 00:36:25,440
that's a way to detect that there's an

934
00:36:25,440 --> 00:36:27,040
asa

935
00:36:27,040 --> 00:36:28,720
so yeah that is really the connection

936
00:36:28,720 --> 00:36:29,760
there that we should be doing

937
00:36:29,760 --> 00:36:32,000
cryptography in the clear in general but

938
00:36:32,000 --> 00:36:33,760
you know it's it's an interesting model

939
00:36:33,760 --> 00:36:36,160
to look at even if even if theoretically

940
00:36:36,160 --> 00:36:37,680
we're doing white box cryptography

941
00:36:37,680 --> 00:36:38,640
because

942
00:36:38,640 --> 00:36:40,160
just because everybody can scrutinize

943
00:36:40,160 --> 00:36:42,000
their code doesn't mean that they are

944
00:36:42,000 --> 00:36:43,440
so um

945
00:36:43,440 --> 00:36:45,920
yeah there's definitely titans there

946
00:36:45,920 --> 00:36:46,880
yeah thank you that's a really

947
00:36:46,880 --> 00:36:48,960
interesting observation is maybe another

948
00:36:48,960 --> 00:36:50,800
quick question from the room

949
00:36:50,800 --> 00:36:52,800
or

950
00:36:52,800 --> 00:36:54,320
no in that case like thank the speaker

951
00:36:54,320 --> 00:36:56,800
again thank you phillip

952
00:36:56,800 --> 00:36:59,040
thanks

953
00:37:00,079 --> 00:37:01,680
okay now the next talk is given in

954
00:37:01,680 --> 00:37:05,599
person by uh yoga master damian vizar

955
00:37:05,599 --> 00:37:07,920
presenting power yoga variable stretch

956
00:37:07,920 --> 00:37:10,560
security of ccm for energy efficient

957
00:37:10,560 --> 00:37:12,160
lightweight iot

958
00:37:12,160 --> 00:37:15,480
yes i mean

959
00:37:31,280 --> 00:37:35,720
i have to close this one actually

960
00:37:38,079 --> 00:37:41,079
yes

961
00:37:59,839 --> 00:38:02,078
up

962
00:38:02,839 --> 00:38:07,200
here that's okay yes

963
00:38:09,599 --> 00:38:11,200
all right thank you very much for the

964
00:38:11,200 --> 00:38:13,680
introduction this uh

965
00:38:13,680 --> 00:38:15,599
it has been a joint work with emiliano

966
00:38:15,599 --> 00:38:18,720
giovidi and reza rihanna

967
00:38:18,720 --> 00:38:21,280
so i'll start with a

968
00:38:21,280 --> 00:38:22,800
nist lightweight crypto call for

969
00:38:22,800 --> 00:38:24,720
submissions no better start on that

970
00:38:24,720 --> 00:38:27,440
there's a lot of requirements there but

971
00:38:27,440 --> 00:38:29,680
what i'm interested in today is that

972
00:38:29,680 --> 00:38:31,440
nist is looking for authenticated

973
00:38:31,440 --> 00:38:33,760
encryption which would be optimized for

974
00:38:33,760 --> 00:38:37,119
processing of short messages

975
00:38:37,119 --> 00:38:39,119
and to cut the long story short i'll

976
00:38:39,119 --> 00:38:41,520
just say there is indeed a lot of

977
00:38:41,520 --> 00:38:44,560
applications we do treat encrypt and

978
00:38:44,560 --> 00:38:47,520
transmit very short messages

979
00:38:47,520 --> 00:38:49,440
the kind of encryption we want to apply

980
00:38:49,440 --> 00:38:51,599
in this case

981
00:38:51,599 --> 00:38:53,760
is authenticated encryption with

982
00:38:53,760 --> 00:38:55,359
associated data

983
00:38:55,359 --> 00:38:57,359
i'll just flash this here as a reminder

984
00:38:57,359 --> 00:38:58,800
for a few seconds

985
00:38:58,800 --> 00:38:59,680
and

986
00:38:59,680 --> 00:39:01,200
maybe the only thing i would like to

987
00:39:01,200 --> 00:39:03,599
point out is that we want the decryption

988
00:39:03,599 --> 00:39:06,160
to to detect forgery attempts so that

989
00:39:06,160 --> 00:39:09,119
when someone tries to modify n a or c we

990
00:39:09,119 --> 00:39:11,119
want this to be detected

991
00:39:11,119 --> 00:39:13,760
and to do this um the encryption

992
00:39:13,760 --> 00:39:16,880
algorithm must grow the ciphertext so we

993
00:39:16,880 --> 00:39:19,200
must add some non-trivially redundant

994
00:39:19,200 --> 00:39:22,800
bits and the more bits we add the more

995
00:39:22,800 --> 00:39:26,000
security against forgeries we expect

996
00:39:26,000 --> 00:39:28,560
the problem when we plug this back in

997
00:39:28,560 --> 00:39:30,560
into the context of short messages is

998
00:39:30,560 --> 00:39:32,800
that if we have a system with wireless

999
00:39:32,800 --> 00:39:34,000
communication

1000
00:39:34,000 --> 00:39:36,400
and the messages are indeed very short

1001
00:39:36,400 --> 00:39:38,640
our authentication tags may become a

1002
00:39:38,640 --> 00:39:40,560
major source of overhead in terms of

1003
00:39:40,560 --> 00:39:43,760
energy consumption so much so

1004
00:39:43,760 --> 00:39:47,359
that if we weigh the impact or cost of a

1005
00:39:47,359 --> 00:39:50,160
potential forgery against the cost of

1006
00:39:50,160 --> 00:39:52,800
defending against the forgery we may

1007
00:39:52,800 --> 00:39:55,359
find out that it would be optimal to

1008
00:39:55,359 --> 00:39:58,160
actually vary the amount of ciphertext

1009
00:39:58,160 --> 00:40:00,560
expansion depending on the criticality

1010
00:40:00,560 --> 00:40:02,160
of the messages so if i have some

1011
00:40:02,160 --> 00:40:04,240
messages which are not that critical and

1012
00:40:04,240 --> 00:40:06,960
i may tolerate one forgery or two every

1013
00:40:06,960 --> 00:40:09,359
now and then i would use shorter attacks

1014
00:40:09,359 --> 00:40:11,040
and then for messages which are very

1015
00:40:11,040 --> 00:40:13,760
critical i would grow them

1016
00:40:13,760 --> 00:40:15,599
so now you should be asking but damian

1017
00:40:15,599 --> 00:40:17,280
what does it even mean for authentic

1018
00:40:17,280 --> 00:40:19,200
hidden encryption to be secure when i'm

1019
00:40:19,200 --> 00:40:20,960
changing the tag length for every

1020
00:40:20,960 --> 00:40:23,520
message so fortunately this has been

1021
00:40:23,520 --> 00:40:25,760
formalized in a previous work

1022
00:40:25,760 --> 00:40:28,400
uh in this indistinguishability notion

1023
00:40:28,400 --> 00:40:31,119
and without going into details out what

1024
00:40:31,119 --> 00:40:33,040
i'll just say is that the intuition that

1025
00:40:33,040 --> 00:40:34,800
this notion captures

1026
00:40:34,800 --> 00:40:36,839
is

1027
00:40:36,839 --> 00:40:39,440
um is that

1028
00:40:39,440 --> 00:40:42,240
whenever i trade some message with

1029
00:40:42,240 --> 00:40:43,680
a certain amount of stretch let's say

1030
00:40:43,680 --> 00:40:46,720
tau c bits the security for the cipher

1031
00:40:46,720 --> 00:40:49,599
text i get is tousy bits of a security

1032
00:40:49,599 --> 00:40:51,119
no matter what happens with the other

1033
00:40:51,119 --> 00:40:53,440
taglines even though they use the same

1034
00:40:53,440 --> 00:40:54,960
key

1035
00:40:54,960 --> 00:40:57,440
all right so now that we have a security

1036
00:40:57,440 --> 00:40:59,839
target and motivation how do we go about

1037
00:40:59,839 --> 00:41:02,560
building an a scheme that would have

1038
00:41:02,560 --> 00:41:04,480
this kind of security and the maximum

1039
00:41:04,480 --> 00:41:05,520
impact

1040
00:41:05,520 --> 00:41:08,000
in a nutshell what we need to do is to

1041
00:41:08,000 --> 00:41:10,160
take something that is already used

1042
00:41:10,160 --> 00:41:12,800
massively widespread and try to find a

1043
00:41:12,800 --> 00:41:14,640
way to transform it such that we don't

1044
00:41:14,640 --> 00:41:17,760
touch the internals of the algorithm

1045
00:41:17,760 --> 00:41:19,760
is there such an opportunity is there

1046
00:41:19,760 --> 00:41:22,000
such a scheme you have guessed it it's

1047
00:41:22,000 --> 00:41:24,240
ccm

1048
00:41:24,240 --> 00:41:27,040
and it turns out it doesn't really take

1049
00:41:27,040 --> 00:41:29,760
a lot to transform ccm to make it secure

1050
00:41:29,760 --> 00:41:31,920
in variable tag length all you need to

1051
00:41:31,920 --> 00:41:34,319
do is just sacrifice one byte of the

1052
00:41:34,319 --> 00:41:37,520
nonce and encode the tag length

1053
00:41:37,520 --> 00:41:39,680
and put it in this byte and that's it

1054
00:41:39,680 --> 00:41:41,520
this is all you need to do and the

1055
00:41:41,520 --> 00:41:44,480
result is secure to be used with

1056
00:41:44,480 --> 00:41:46,880
variable tag length it's even provably

1057
00:41:46,880 --> 00:41:48,640
secure so this is what we did in the

1058
00:41:48,640 --> 00:41:51,599
paper and the important outtake from

1059
00:41:51,599 --> 00:41:54,480
this ugly slide is that um

1060
00:41:54,480 --> 00:41:56,800
the bound doesn't really depart too far

1061
00:41:56,800 --> 00:41:59,200
from the bound of the original ccm so

1062
00:41:59,200 --> 00:42:01,520
we're getting a nice new property

1063
00:42:01,520 --> 00:42:03,599
without having to pay with a

1064
00:42:03,599 --> 00:42:06,720
quantitative security degradation

1065
00:42:06,720 --> 00:42:09,359
very quickly on the proof uh what we

1066
00:42:09,359 --> 00:42:11,920
used is a previous theorem which says

1067
00:42:11,920 --> 00:42:14,319
that variable stretch a security is

1068
00:42:14,319 --> 00:42:16,400
obtained if you have already the regular

1069
00:42:16,400 --> 00:42:19,200
a security plus a strange property which

1070
00:42:19,200 --> 00:42:20,960
essentially says if i change the tag

1071
00:42:20,960 --> 00:42:21,839
length

1072
00:42:21,839 --> 00:42:24,480
it's uh almost the same as if i re-keyed

1073
00:42:24,480 --> 00:42:25,920
the construction

1074
00:42:25,920 --> 00:42:28,240
so a security of ccm has been

1075
00:42:28,240 --> 00:42:30,319
established a long time ago of course

1076
00:42:30,319 --> 00:42:32,880
and we have proven the other property in

1077
00:42:32,880 --> 00:42:34,960
the paper based on the observation that

1078
00:42:34,960 --> 00:42:36,960
every block cipher call under direct

1079
00:42:36,960 --> 00:42:39,200
control of the attacker also has the

1080
00:42:39,200 --> 00:42:41,680
nonce and also the tag length as part of

1081
00:42:41,680 --> 00:42:43,280
the input so we do get this nice

1082
00:42:43,280 --> 00:42:44,560
separation

1083
00:42:44,560 --> 00:42:47,520
and then at this point we wondered so

1084
00:42:47,520 --> 00:42:49,280
what is the actual

1085
00:42:49,280 --> 00:42:51,760
energy economy we can achieve with this

1086
00:42:51,760 --> 00:42:54,400
uh well so we set up a small experiment

1087
00:42:54,400 --> 00:42:56,720
where we use the real low power wireless

1088
00:42:56,720 --> 00:42:59,359
sensor node and we implemented the

1089
00:42:59,359 --> 00:43:01,440
scenario i talked about so we had some

1090
00:43:01,440 --> 00:43:03,839
more frequent less secure less critical

1091
00:43:03,839 --> 00:43:05,520
messages and then less frequent more

1092
00:43:05,520 --> 00:43:07,040
critical messages

1093
00:43:07,040 --> 00:43:08,960
and in one case we treated

1094
00:43:08,960 --> 00:43:12,079
all of the messages with regular ccm

1095
00:43:12,079 --> 00:43:14,480
using the longer of the two tag lengths

1096
00:43:14,480 --> 00:43:16,240
you know in theory i have to take the

1097
00:43:16,240 --> 00:43:18,000
max of my security requirements if i

1098
00:43:18,000 --> 00:43:19,280
have to stick to one tag length

1099
00:43:19,280 --> 00:43:22,079
everywhere and in other case we used the

1100
00:43:22,079 --> 00:43:24,800
variable stretch variant of ccm and

1101
00:43:24,800 --> 00:43:26,480
change the tagline depending on the

1102
00:43:26,480 --> 00:43:28,160
message criticality

1103
00:43:28,160 --> 00:43:29,760
and what the experiments show is that

1104
00:43:29,760 --> 00:43:32,560
with this very simple modification in

1105
00:43:32,560 --> 00:43:34,880
certain cases you can save up to 20

1106
00:43:34,880 --> 00:43:37,200
total energy consumption which is a lot

1107
00:43:37,200 --> 00:43:40,160
given that what we did is very simple so

1108
00:43:40,160 --> 00:43:42,319
this includes the device sleep device

1109
00:43:42,319 --> 00:43:45,839
wake up operating system everything

1110
00:43:45,839 --> 00:43:48,800
so this is where i stop uh and my

1111
00:43:48,800 --> 00:43:50,400
conclusion is that

1112
00:43:50,400 --> 00:43:54,160
with a relatively simple modification we

1113
00:43:54,160 --> 00:43:56,800
can achieve a pretty good

1114
00:43:56,800 --> 00:43:58,880
energy savings

1115
00:43:58,880 --> 00:44:02,000
and uh we can also start doing this

1116
00:44:02,000 --> 00:44:04,079
tomorrow in here you can take any device

1117
00:44:04,079 --> 00:44:05,920
which implements ccm and you can reuse

1118
00:44:05,920 --> 00:44:08,079
this the implementation you can reuse

1119
00:44:08,079 --> 00:44:09,680
the hardware acceleration if it's

1120
00:44:09,680 --> 00:44:10,800
present

1121
00:44:10,800 --> 00:44:13,280
and we also have some protocols but

1122
00:44:13,280 --> 00:44:15,280
where this would be a very natural match

1123
00:44:15,280 --> 00:44:16,880
and in fact in zigbee this is already

1124
00:44:16,880 --> 00:44:18,240
specified

1125
00:44:18,240 --> 00:44:20,400
so that's everything from me thank you

1126
00:44:20,400 --> 00:44:23,839
very much for your attention

1127
00:44:28,319 --> 00:44:29,440
thank you damian for a really

1128
00:44:29,440 --> 00:44:31,119
interesting talk it's always nice to see

1129
00:44:31,119 --> 00:44:33,920
a few practically oriented papers uh and

1130
00:44:33,920 --> 00:44:35,520
i have a practical question as well and

1131
00:44:35,520 --> 00:44:36,560
then maybe they'll follow a question

1132
00:44:36,560 --> 00:44:39,280
from the audience so as many of you may

1133
00:44:39,280 --> 00:44:42,400
know nist is now reviewing its modes of

1134
00:44:42,400 --> 00:44:44,480
operation and in the public comments

1135
00:44:44,480 --> 00:44:46,640
received so far there are quite a few uh

1136
00:44:46,640 --> 00:44:48,640
related to tag lengths possibly

1137
00:44:48,640 --> 00:44:50,960
increasing the minimum tag length so

1138
00:44:50,960 --> 00:44:52,720
what what's your opinion about this

1139
00:44:52,720 --> 00:44:54,800
damion what should the minimum tax size

1140
00:44:54,800 --> 00:44:57,280
be or should there be a minimum for

1141
00:44:57,280 --> 00:44:58,880
general applications or specific

1142
00:44:58,880 --> 00:45:01,520
applications

1143
00:45:01,520 --> 00:45:03,440
yeah thanks nikki that's i think a very

1144
00:45:03,440 --> 00:45:04,880
interesting question

1145
00:45:04,880 --> 00:45:06,800
um

1146
00:45:06,800 --> 00:45:08,960
yeah just for the sake of discussion to

1147
00:45:08,960 --> 00:45:12,720
spice it up i think the as long as the

1148
00:45:12,720 --> 00:45:14,720
a scheme supports it so

1149
00:45:14,720 --> 00:45:16,400
if your scheme is secure against

1150
00:45:16,400 --> 00:45:18,640
reforgeries

1151
00:45:18,640 --> 00:45:20,560
that means if i forge

1152
00:45:20,560 --> 00:45:22,480
once the next forgery will be as

1153
00:45:22,480 --> 00:45:23,839
difficult

1154
00:45:23,839 --> 00:45:26,560
then i think the tag length should be

1155
00:45:26,560 --> 00:45:28,480
determined by the application so if you

1156
00:45:28,480 --> 00:45:30,000
have a really competent security

1157
00:45:30,000 --> 00:45:32,400
engineer who knows what they're doing

1158
00:45:32,400 --> 00:45:34,240
and they determine that the tagline yeah

1159
00:45:34,240 --> 00:45:36,319
i know i know but we're talking about

1160
00:45:36,319 --> 00:45:38,240
lightweight crypto so if

1161
00:45:38,240 --> 00:45:40,000
if if we depart on the mission of

1162
00:45:40,000 --> 00:45:42,720
filling niches and catering to extreme

1163
00:45:42,720 --> 00:45:44,400
situations

1164
00:45:44,400 --> 00:45:45,520
you know

1165
00:45:45,520 --> 00:45:49,599
maybe there is a market for uh

1166
00:45:49,599 --> 00:45:51,839
for very short taglines

1167
00:45:51,839 --> 00:45:54,079
yeah this is really interesting because

1168
00:45:54,079 --> 00:45:55,520
you know this is like it's a big

1169
00:45:55,520 --> 00:45:56,560
overhead

1170
00:45:56,560 --> 00:45:57,920
when you think about wireless

1171
00:45:57,920 --> 00:45:59,200
communication

1172
00:45:59,200 --> 00:46:00,800
so i will not

1173
00:46:00,800 --> 00:46:02,640
i will not state any minimum tag length

1174
00:46:02,640 --> 00:46:05,520
which is valid for everyone

1175
00:46:05,520 --> 00:46:07,200
yeah okay thank you that's really

1176
00:46:07,200 --> 00:46:08,400
interesting thought i guess some

1177
00:46:08,400 --> 00:46:09,760
discussion during the coffee break will

1178
00:46:09,760 --> 00:46:11,839
be about this um so i have a question

1179
00:46:11,839 --> 00:46:12,880
nikki

1180
00:46:12,880 --> 00:46:16,079
okay yeah yeah so damian just a quick

1181
00:46:16,079 --> 00:46:17,920
question like can we have a similar

1182
00:46:17,920 --> 00:46:20,960
thing for gcm as well

1183
00:46:22,079 --> 00:46:24,160
uh did you have a question no no can you

1184
00:46:24,160 --> 00:46:25,839
repeat it please okay

1185
00:46:25,839 --> 00:46:28,000
yeah sure can we have the similar thing

1186
00:46:28,000 --> 00:46:30,319
for gcm

1187
00:46:30,319 --> 00:46:32,319
all right

1188
00:46:32,319 --> 00:46:34,400
yes that's a

1189
00:46:34,400 --> 00:46:37,520
that's a good question

1190
00:46:37,680 --> 00:46:40,400
so i think

1191
00:46:40,400 --> 00:46:42,079
for the for the counterpart it's the

1192
00:46:42,079 --> 00:46:44,560
same because you have the nonce entering

1193
00:46:44,560 --> 00:46:45,680
every

1194
00:46:45,680 --> 00:46:48,000
every block cipher call for the counter

1195
00:46:48,000 --> 00:46:50,160
i'm not so sure about

1196
00:46:50,160 --> 00:46:52,240
about the uh

1197
00:46:52,240 --> 00:46:54,560
authentication tag

1198
00:46:54,560 --> 00:46:56,560
so you just have to

1199
00:46:56,560 --> 00:46:59,520
explore whether

1200
00:46:59,520 --> 00:47:01,920
no actually i don't think so i think i

1201
00:47:01,920 --> 00:47:03,760
think the gcm uses something like

1202
00:47:03,760 --> 00:47:06,240
ciphertext translation and so normally

1203
00:47:06,240 --> 00:47:08,640
what we have shown in the 2016 paper is

1204
00:47:08,640 --> 00:47:10,640
that no black box transformation works

1205
00:47:10,640 --> 00:47:12,400
if i'm not mistaken

1206
00:47:12,400 --> 00:47:15,119
so yeah

1207
00:47:15,119 --> 00:47:18,290
okay let's thank damian again

1208
00:47:18,290 --> 00:47:21,690
[Applause]

1209
00:47:22,640 --> 00:47:25,680
and let's move on to uh avijit's second

1210
00:47:25,680 --> 00:47:28,400
talk entitled improved security bounds

1211
00:47:28,400 --> 00:47:30,960
of edw cdm

1212
00:47:30,960 --> 00:47:32,880
also i've been told um like to keep your

1213
00:47:32,880 --> 00:47:35,599
total time on 20 minutes um let's try to

1214
00:47:35,599 --> 00:47:39,920
keep this talk on five minutes um

1215
00:47:39,920 --> 00:47:41,280
and

1216
00:47:41,280 --> 00:47:43,680
yeah well

1217
00:47:43,680 --> 00:47:46,480
okay let's let's see try try to um speed

1218
00:47:46,480 --> 00:47:48,400
up a little bit uh maybe skip a few

1219
00:47:48,400 --> 00:47:51,119
slides if to like get a total time of 20

1220
00:47:51,119 --> 00:47:52,800
minutes for your uh

1221
00:47:52,800 --> 00:47:55,280
uh talking questions abigail the floor

1222
00:47:55,280 --> 00:47:56,880
is yours

1223
00:47:56,880 --> 00:47:59,119
yeah thank you so yeah so i'm going to

1224
00:47:59,119 --> 00:48:00,640
present this work improve security bound

1225
00:48:00,640 --> 00:48:03,280
of vw cdm and dwcm it's a joint work

1226
00:48:03,280 --> 00:48:05,119
with milan and kusanko

1227
00:48:05,119 --> 00:48:07,200
so as we know that in crypto 16

1228
00:48:07,200 --> 00:48:08,720
pagliachia and syrian will propose this

1229
00:48:08,720 --> 00:48:10,880
uwcdm math which is a nonspace map that

1230
00:48:10,880 --> 00:48:12,640
is secured up to power to n by three

1231
00:48:12,640 --> 00:48:14,160
many maxwells and two power and many

1232
00:48:14,160 --> 00:48:15,839
verification queries in unsuspecting

1233
00:48:15,839 --> 00:48:17,520
setting and it achieves the birthday

1234
00:48:17,520 --> 00:48:18,960
bank security and announced mission

1235
00:48:18,960 --> 00:48:20,559
setting and the conjecture was like it

1236
00:48:20,559 --> 00:48:22,800
resident was secured up to uh two power

1237
00:48:22,800 --> 00:48:24,880
inquiries in the non-suspecting setting

1238
00:48:24,880 --> 00:48:27,359
and one kwcdm is beyond worth the bank

1239
00:48:27,359 --> 00:48:28,559
secure

1240
00:48:28,559 --> 00:48:30,640
so in crypto17 many income needs to

1241
00:48:30,640 --> 00:48:32,240
prove the optimal prf security of the

1242
00:48:32,240 --> 00:48:33,680
construction in the non-respecting

1243
00:48:33,680 --> 00:48:35,760
setting using patterns minimizing but

1244
00:48:35,760 --> 00:48:37,920
the proof of general miracle by

1245
00:48:37,920 --> 00:48:40,400
patterning is a still a matter of debate

1246
00:48:40,400 --> 00:48:42,559
and in dcc 18 page and syrian have

1247
00:48:42,559 --> 00:48:44,000
acknowledged the difficulty of proving

1248
00:48:44,000 --> 00:48:45,599
the security of the construction for the

1249
00:48:45,599 --> 00:48:47,680
single kid in a procedure so there's a

1250
00:48:47,680 --> 00:48:49,119
question comes up that can be designed

1251
00:48:49,119 --> 00:48:51,200
announced best match bbb secured back

1252
00:48:51,200 --> 00:48:53,119
with a single block cipher and then in

1253
00:48:53,119 --> 00:48:55,359
crypto 18 data it all have came up with

1254
00:48:55,359 --> 00:48:57,040
their construction which is the

1255
00:48:57,040 --> 00:48:58,800
decrypted vector encoder with davis

1256
00:48:58,800 --> 00:49:00,480
construction which is again our nonspace

1257
00:49:00,480 --> 00:49:03,200
pack with 20 by three bits non-space and

1258
00:49:03,200 --> 00:49:04,720
it is beyond both the bound secured in

1259
00:49:04,720 --> 00:49:05,920
the non-respective setting and bought

1260
00:49:05,920 --> 00:49:08,000
the bomb secured in the non-misuse but

1261
00:49:08,000 --> 00:49:09,200
here to prove the security of the

1262
00:49:09,200 --> 00:49:10,720
construction the hash function needs to

1263
00:49:10,720 --> 00:49:12,240
be regular three-way regular and the

1264
00:49:12,240 --> 00:49:14,640
almost zone it's all universal

1265
00:49:14,640 --> 00:49:17,200
uh well uh so till now the ewc dm and

1266
00:49:17,200 --> 00:49:19,200
deductible cdm achieves to power to n by

1267
00:49:19,200 --> 00:49:21,040
three many uh two power two and by three

1268
00:49:21,040 --> 00:49:22,559
bit security so the question comes up

1269
00:49:22,559 --> 00:49:23,920
like can we improve the security bound

1270
00:49:23,920 --> 00:49:26,559
of these two constructions so to do this

1271
00:49:26,559 --> 00:49:28,240
we first revisit to the extended gear

1272
00:49:28,240 --> 00:49:29,920
theory technique where we say that we

1273
00:49:29,920 --> 00:49:31,440
have a system of given many equations

1274
00:49:31,440 --> 00:49:33,839
and give you many non equations and uh

1275
00:49:33,839 --> 00:49:35,359
over over a certain number of variables

1276
00:49:35,359 --> 00:49:37,760
say p one to p r and the goal of the

1277
00:49:37,760 --> 00:49:39,200
external theory is to lower down the

1278
00:49:39,200 --> 00:49:40,559
number of solutions to the system of

1279
00:49:40,559 --> 00:49:42,720
equation and non equations such that ah

1280
00:49:42,720 --> 00:49:45,040
this the assignment values for this

1281
00:49:45,040 --> 00:49:47,520
variables should be distinct

1282
00:49:47,520 --> 00:49:49,119
well we can cast the system of equation

1283
00:49:49,119 --> 00:49:50,640
and non-equations in terms of a graph

1284
00:49:50,640 --> 00:49:52,480
where we plot where we represent each

1285
00:49:52,480 --> 00:49:54,160
variable as a vertex of the graph and

1286
00:49:54,160 --> 00:49:56,319
each equation has an

1287
00:49:56,319 --> 00:49:58,240
age in the graph so we represent the

1288
00:49:58,240 --> 00:49:59,839
equation as a

1289
00:49:59,839 --> 00:50:02,160
solid dot edge and the non equation as a

1290
00:50:02,160 --> 00:50:05,200
blue dashed edge so similar like this so

1291
00:50:05,200 --> 00:50:07,680
we identify some class of bad graphs and

1292
00:50:07,680 --> 00:50:10,000
we say that the corresponding bad graph

1293
00:50:10,000 --> 00:50:11,359
that means when we cast a system of

1294
00:50:11,359 --> 00:50:13,520
equation and non-equation to a graph we

1295
00:50:13,520 --> 00:50:15,520
say that the corresponding graph is bad

1296
00:50:15,520 --> 00:50:17,920
if the graph contains a cycle if the sum

1297
00:50:17,920 --> 00:50:20,000
of the if you take any path of the graph

1298
00:50:20,000 --> 00:50:21,599
and if you take the sum of the levels of

1299
00:50:21,599 --> 00:50:23,760
that path if it turns out to be zero and

1300
00:50:23,760 --> 00:50:25,440
if you consider any cycle in the graph

1301
00:50:25,440 --> 00:50:29,200
that involves a non-equation page

1302
00:50:29,200 --> 00:50:32,000
ah so this is the uh overall result of

1303
00:50:32,000 --> 00:50:33,280
the extended media theory that we have

1304
00:50:33,280 --> 00:50:35,359
proof in our paper that we have two fit

1305
00:50:35,359 --> 00:50:36,960
for two specific graphs one is for a

1306
00:50:36,960 --> 00:50:38,480
general graph and one is for a bipartite

1307
00:50:38,480 --> 00:50:40,559
graph so for a general graph so the

1308
00:50:40,559 --> 00:50:41,839
number of uh

1309
00:50:41,839 --> 00:50:43,760
solutions to the system of equation and

1310
00:50:43,760 --> 00:50:45,599
non-equation is at least two power n

1311
00:50:45,599 --> 00:50:48,240
following factorial s over two power n q

1312
00:50:48,240 --> 00:50:50,559
m times one minus some error bound

1313
00:50:50,559 --> 00:50:52,000
epsilon

1314
00:50:52,000 --> 00:50:54,240
so where s is the number of vertices qm

1315
00:50:54,240 --> 00:50:56,640
is the total number of uh solid red

1316
00:50:56,640 --> 00:50:59,760
edges uh well qc is the number of uh

1317
00:50:59,760 --> 00:51:01,359
edges in the component and qb is the

1318
00:51:01,359 --> 00:51:03,359
total number of non-equation edge or the

1319
00:51:03,359 --> 00:51:05,440
blue dash h and similarly we have a

1320
00:51:05,440 --> 00:51:06,800
result for the extended mirror theory

1321
00:51:06,800 --> 00:51:09,440
for a bipartite graph where asl and sr

1322
00:51:09,440 --> 00:51:11,040
is the number of vertices for the left

1323
00:51:11,040 --> 00:51:12,319
partition and the right partition of the

1324
00:51:12,319 --> 00:51:14,559
bipartite graph

1325
00:51:14,559 --> 00:51:17,200
ah so to prove the security of the awcdm

1326
00:51:17,200 --> 00:51:19,119
we have casted the system of equations

1327
00:51:19,119 --> 00:51:21,520
in terms of a graph where this lambda i

1328
00:51:21,520 --> 00:51:23,839
and the lambda i prime is the ni plus

1329
00:51:23,839 --> 00:51:24,640
the

1330
00:51:24,640 --> 00:51:26,559
hash of the message m and similarly

1331
00:51:26,559 --> 00:51:28,160
lambda i prime is the ni planning plus

1332
00:51:28,160 --> 00:51:30,559
hash of the message implant

1333
00:51:30,559 --> 00:51:32,960
we have identified a good graph and bad

1334
00:51:32,960 --> 00:51:35,440
graph so we will say that the

1335
00:51:35,440 --> 00:51:37,920
graph is bad if there's a collision

1336
00:51:37,920 --> 00:51:40,720
between the tag and the lambda values

1337
00:51:40,720 --> 00:51:42,880
if we have a component size if you have

1338
00:51:42,880 --> 00:51:44,400
a component in the graph whose size is

1339
00:51:44,400 --> 00:51:47,119
at least q to the power 2a 2 by 3 and if

1340
00:51:47,119 --> 00:51:48,400
there's a function it happens due to the

1341
00:51:48,400 --> 00:51:49,680
hash condition

1342
00:51:49,680 --> 00:51:52,160
so if such bad events do not happen then

1343
00:51:52,160 --> 00:51:54,240
we will lead up we will lead to this

1344
00:51:54,240 --> 00:51:57,599
code graph and then to to

1345
00:51:57,599 --> 00:52:00,319
lower bound uh interpolation probability

1346
00:52:00,319 --> 00:52:02,400
uh for for for a good transcript we will

1347
00:52:02,400 --> 00:52:03,760
actually apply the media theory for the

1348
00:52:03,760 --> 00:52:05,599
bipartite graph

1349
00:52:05,599 --> 00:52:07,839
similarly uh the security proof for the

1350
00:52:07,839 --> 00:52:10,000
wcdm again we can cast the system of

1351
00:52:10,000 --> 00:52:11,119
equation and the verification

1352
00:52:11,119 --> 00:52:13,440
non-equation the uh to the assisted

1353
00:52:13,440 --> 00:52:14,319
graph

1354
00:52:14,319 --> 00:52:15,359
and

1355
00:52:15,359 --> 00:52:18,400
again we identify a class of bad bad

1356
00:52:18,400 --> 00:52:20,800
graphs where you have this component

1357
00:52:20,800 --> 00:52:22,800
size of the macro is at least five if

1358
00:52:22,800 --> 00:52:24,559
you have a point if you have a cycle in

1359
00:52:24,559 --> 00:52:26,559
the map graph if you have a path in the

1360
00:52:26,559 --> 00:52:28,480
background of length three whose level

1361
00:52:28,480 --> 00:52:30,880
is zero and if you have a

1362
00:52:30,880 --> 00:52:33,440
h in the macro whose level is zero

1363
00:52:33,440 --> 00:52:35,839
we have a batman verification now that's

1364
00:52:35,839 --> 00:52:37,520
where we say that the macro contains a

1365
00:52:37,520 --> 00:52:40,079
cycle that includes a dash blue h okay

1366
00:52:40,079 --> 00:52:41,760
so that means it contains a cycle

1367
00:52:41,760 --> 00:52:44,319
including our verification on equation

1368
00:52:44,319 --> 00:52:45,839
we have a couple of additional bad

1369
00:52:45,839 --> 00:52:48,000
events and for each of those bad events

1370
00:52:48,000 --> 00:52:49,920
we have shown that okay so the

1371
00:52:49,920 --> 00:52:51,599
probability of those bad events actually

1372
00:52:51,599 --> 00:52:53,920
you know uh it belongs to the desired

1373
00:52:53,920 --> 00:52:56,240
range that means 2 over 2 to the power 3

1374
00:52:56,240 --> 00:52:58,480
n by 4 and if such bad events do not

1375
00:52:58,480 --> 00:53:01,040
happen then we lead up to this uh good

1376
00:53:01,040 --> 00:53:03,599
graphs and again we apply the media

1377
00:53:03,599 --> 00:53:04,960
theory for the general graph to lower

1378
00:53:04,960 --> 00:53:05,920
bound the real interpretation

1379
00:53:05,920 --> 00:53:08,000
probability for these good graphs

1380
00:53:08,000 --> 00:53:09,839
so well how this uh

1381
00:53:09,839 --> 00:53:10,960
proof

1382
00:53:10,960 --> 00:53:12,800
that differs from the original dwc and

1383
00:53:12,800 --> 00:53:14,720
proof in the original dwcm

1384
00:53:14,720 --> 00:53:17,599
uh we have you know uh casted a system

1385
00:53:17,599 --> 00:53:19,680
of equation uh where

1386
00:53:19,680 --> 00:53:21,920
we represent our equation as a vertex

1387
00:53:21,920 --> 00:53:24,400
and if the if the two equations share a

1388
00:53:24,400 --> 00:53:26,400
common variable then we give or put an

1389
00:53:26,400 --> 00:53:28,160
edge between the corresponding vertices

1390
00:53:28,160 --> 00:53:30,240
so in that setting we have shown that

1391
00:53:30,240 --> 00:53:31,520
the bad graph

1392
00:53:31,520 --> 00:53:32,880
we have classified the background that

1393
00:53:32,880 --> 00:53:35,040
will contain a cycle any components in

1394
00:53:35,040 --> 00:53:36,559
the induced graph contains a path of

1395
00:53:36,559 --> 00:53:38,800
length at least three and if that graph

1396
00:53:38,800 --> 00:53:40,160
contains a cycle that includes a

1397
00:53:40,160 --> 00:53:42,319
non-equation age that is in our case we

1398
00:53:42,319 --> 00:53:44,160
have slightly changed the setting where

1399
00:53:44,160 --> 00:53:46,960
you know the each variable represents

1400
00:53:46,960 --> 00:53:48,800
the vertex and uh each equation

1401
00:53:48,800 --> 00:53:51,280
represents an h and in that setting we

1402
00:53:51,280 --> 00:53:52,960
have shown that the bad graph comes up

1403
00:53:52,960 --> 00:53:55,520
when a induced graph contains a cycle

1404
00:53:55,520 --> 00:53:56,400
when the

1405
00:53:56,400 --> 00:53:58,400
component size of the graph

1406
00:53:58,400 --> 00:54:00,240
is at least four and if the individual

1407
00:54:00,240 --> 00:54:01,760
contains a cycle that includes a

1408
00:54:01,760 --> 00:54:03,680
non-equation range

1409
00:54:03,680 --> 00:54:07,598
so yes so that's the end of the talk

1410
00:54:08,319 --> 00:54:11,839
so i was bit hurry i guess

1411
00:54:13,119 --> 00:54:17,079
so any any questions

1412
00:54:27,920 --> 00:54:30,559
yeah so

1413
00:54:31,680 --> 00:54:34,480
but uh so nikki knew you you were muted

1414
00:54:34,480 --> 00:54:36,480
sorry sorry i'm muted i'm muted

1415
00:54:36,480 --> 00:54:38,559
yes um

1416
00:54:38,559 --> 00:54:40,799
sorry yeah

1417
00:54:40,799 --> 00:54:41,839
um

1418
00:54:41,839 --> 00:54:44,559
i'm so sorry about this um we'll have to

1419
00:54:44,559 --> 00:54:47,200
move uh questions offline so please

1420
00:54:47,200 --> 00:54:49,760
contact avicii if you have any questions

1421
00:54:49,760 --> 00:54:51,200
for the sake of time let's move to the

1422
00:54:51,200 --> 00:54:54,799
last talk of the session entitled lmdae

1423
00:54:54,799 --> 00:54:56,960
low memory deterministic authenticated

1424
00:54:56,960 --> 00:55:00,400
encryption for 128-bit security and it's

1425
00:55:00,400 --> 00:55:02,799
yusuke naito that will give the talk

1426
00:55:02,799 --> 00:55:06,759
just okay the floor is yours

1427
00:55:11,920 --> 00:55:14,319
okay thank you very much

1428
00:55:14,319 --> 00:55:15,839
can you hear me

1429
00:55:15,839 --> 00:55:17,599
yeah we can hear you perfectly we can

1430
00:55:17,599 --> 00:55:19,680
see your slides maybe you can make them

1431
00:55:19,680 --> 00:55:21,200
full screen

1432
00:55:21,200 --> 00:55:22,799
yeah yes perfect

1433
00:55:22,799 --> 00:55:25,440
the floor is yours go ahead

1434
00:55:25,440 --> 00:55:26,640
okay

1435
00:55:26,640 --> 00:55:27,680
so

1436
00:55:27,680 --> 00:55:30,160
okay thank you very much uh i'd like to

1437
00:55:30,160 --> 00:55:31,599
talk about the

1438
00:55:31,599 --> 00:55:33,920
rmdae low memory data music

1439
00:55:33,920 --> 00:55:37,520
authenticated inclusion for 120 security

1440
00:55:37,520 --> 00:55:39,599
uh i'm miss kaneido and this is just to

1441
00:55:39,599 --> 00:55:41,200
work with you sasaki and target

1442
00:55:41,200 --> 00:55:42,559
surveilla

1443
00:55:42,559 --> 00:55:45,680
uh lightweight critically uh

1444
00:55:45,680 --> 00:55:47,920
first i'd like to explain the background

1445
00:55:47,920 --> 00:55:50,079
of this talk

1446
00:55:50,079 --> 00:55:53,599
lightweight cryptography is a hot topic

1447
00:55:53,599 --> 00:55:56,400
in photography for more than a decade

1448
00:55:56,400 --> 00:55:59,359
the motivation is to design algorithms

1449
00:55:59,359 --> 00:56:01,040
that provide the data security for

1450
00:56:01,040 --> 00:56:03,359
highly conforming devices

1451
00:56:03,359 --> 00:56:05,680
and right weight includes several

1452
00:56:05,680 --> 00:56:07,760
meanings from every power consumption

1453
00:56:07,760 --> 00:56:09,520
latency and so on

1454
00:56:09,520 --> 00:56:10,400
and

1455
00:56:10,400 --> 00:56:12,160
the target of

1456
00:56:12,160 --> 00:56:14,640
our research is raw memory

1457
00:56:14,640 --> 00:56:17,599
memory size data means over her cost in

1458
00:56:17,599 --> 00:56:20,160
lightweight implementation so by

1459
00:56:20,160 --> 00:56:21,920
reducing the

1460
00:56:21,920 --> 00:56:24,319
uh memory size of the algorithm uh we

1461
00:56:24,319 --> 00:56:26,799
can reduce the hardware cost and now

1462
00:56:26,799 --> 00:56:29,520
nist is holding a lightweight critical

1463
00:56:29,520 --> 00:56:31,760
restaurant process for non-space

1464
00:56:31,760 --> 00:56:33,680
authenticated exclusion

1465
00:56:33,680 --> 00:56:34,960
uh nist

1466
00:56:34,960 --> 00:56:37,280
demands for replacing a space scheme

1467
00:56:37,280 --> 00:56:39,440
such as hcgm

1468
00:56:39,440 --> 00:56:40,400
and

1469
00:56:40,400 --> 00:56:42,400
uh optionally consider the security

1470
00:56:42,400 --> 00:56:44,400
against side charge attack

1471
00:56:44,400 --> 00:56:47,040
now there are 10 finalists

1472
00:56:47,040 --> 00:56:49,839
which are designed from different type

1473
00:56:49,839 --> 00:56:52,480
types of primitives such as the cipher

1474
00:56:52,480 --> 00:56:55,040
plantation and so on and many candidates

1475
00:56:55,040 --> 00:56:57,599
have more than 3

1476
00:56:57,599 --> 00:57:00,240
will be circuit for all date size

1477
00:57:00,240 --> 00:57:01,040
and

1478
00:57:01,040 --> 00:57:03,359
uh authenticated encryption provides a

1479
00:57:03,359 --> 00:57:06,480
confidentiality and integrity of data

1480
00:57:06,480 --> 00:57:09,119
and uh

1481
00:57:09,520 --> 00:57:12,559
many schemes uh designed to ha to take a

1482
00:57:12,559 --> 00:57:13,520
nance

1483
00:57:13,520 --> 00:57:16,240
as well as a key and associated

1484
00:57:16,240 --> 00:57:17,440
apprentice

1485
00:57:17,440 --> 00:57:20,079
and the use of nas is a requirement of

1486
00:57:20,079 --> 00:57:23,680
this right weight clock standard process

1487
00:57:23,680 --> 00:57:26,799
and the next is a non-repeated uh

1488
00:57:26,799 --> 00:57:28,960
initial value in the encryption and this

1489
00:57:28,960 --> 00:57:30,960
property offers uh

1490
00:57:30,960 --> 00:57:33,200
uh several billion possible secure

1491
00:57:33,200 --> 00:57:36,240
schemes or raw memory schemes however

1492
00:57:36,240 --> 00:57:39,200
there are several problem problems for

1493
00:57:39,200 --> 00:57:41,920
implementation such as the for example

1494
00:57:41,920 --> 00:57:45,760
nance is uh chosen from a tiny uh space

1495
00:57:45,760 --> 00:57:49,440
so each year the uh knows depiction or

1496
00:57:49,440 --> 00:57:51,920
announcement is fixed to some constant

1497
00:57:51,920 --> 00:57:52,880
value

1498
00:57:52,880 --> 00:57:56,160
and moba are not requires a non-volatile

1499
00:57:56,160 --> 00:57:59,119
memory to keep uh nuns which is uh

1500
00:57:59,119 --> 00:58:02,000
extensive memory so uh the domestic

1501
00:58:02,000 --> 00:58:05,440
authentication aggression or dee

1502
00:58:05,440 --> 00:58:07,760
solved these programs

1503
00:58:07,760 --> 00:58:09,680
which provides confidentiality and

1504
00:58:09,680 --> 00:58:12,079
integrity of data without enough

1505
00:58:12,079 --> 00:58:13,359
and uh

1506
00:58:13,359 --> 00:58:16,079
so our target goal is to design a low

1507
00:58:16,079 --> 00:58:20,319
suite raw memory and 130 bits secure rda

1508
00:58:20,319 --> 00:58:22,559
scheme and actually consider

1509
00:58:22,559 --> 00:58:24,960
quantum measure threshold international

1510
00:58:24,960 --> 00:58:25,920
ti

1511
00:58:25,920 --> 00:58:28,079
and we design uh

1512
00:58:28,079 --> 00:58:31,440
dae using uh uh ticker block cipher

1513
00:58:31,440 --> 00:58:34,880
because uh trigger box cipher offers uh

1514
00:58:34,880 --> 00:58:37,200
several ti friendly uh

1515
00:58:37,200 --> 00:58:40,079
schemes uh regarding the memory size

1516
00:58:40,079 --> 00:58:42,319
so uh we designed uh

1517
00:58:42,319 --> 00:58:45,040
all right so to design uh the a with

1518
00:58:45,040 --> 00:58:47,920
this call this is called uh we

1519
00:58:47,920 --> 00:58:51,119
need to design a dae mode raw memory gta

1520
00:58:51,119 --> 00:58:52,000
mode

1521
00:58:52,000 --> 00:58:53,599
more precisely

1522
00:58:53,599 --> 00:58:57,040
the mirror size is optimal size so that

1523
00:58:57,040 --> 00:59:00,480
is fixing the security level rs the size

1524
00:59:00,480 --> 00:59:05,119
is 3sd which is the sp key plus a three

1525
00:59:05,119 --> 00:59:08,319
bit internal state this size comes from

1526
00:59:08,319 --> 00:59:11,040
the barcelo attack on the state

1527
00:59:11,040 --> 00:59:13,599
and regarding the existing scheme none

1528
00:59:13,599 --> 00:59:16,400
of the ies achieved this code the first

1529
00:59:16,400 --> 00:59:19,359
scheme dae is designed to be uh highly

1530
00:59:19,359 --> 00:59:22,480
secure uh any secure security uh when

1531
00:59:22,480 --> 00:59:25,200
using a which broke data block cycle and

1532
00:59:25,200 --> 00:59:27,839
they is uh highly efficient it is part

1533
00:59:27,839 --> 00:59:29,680
of that uh it has exchange mark

1534
00:59:29,680 --> 00:59:32,880
structure however they

1535
00:59:32,880 --> 00:59:35,119
require the large memory size the size

1536
00:59:35,119 --> 00:59:37,680
is greater than three speed

1537
00:59:37,680 --> 00:59:40,880
and uh the remaining two schemes are not

1538
00:59:40,880 --> 00:59:43,680
the best schemes

1539
00:59:45,119 --> 00:59:46,400
uh these schemes uh

1540
00:59:46,400 --> 00:59:47,680
[Music]

1541
00:59:47,680 --> 00:59:49,319
achieve the energy security in the

1542
00:59:49,319 --> 00:59:52,240
non-dispensing section and even in the

1543
00:59:52,240 --> 00:59:54,960
day settings that is nonsense fix

1544
00:59:54,960 --> 00:59:55,839
uh

1545
00:59:55,839 --> 00:59:58,559
sorry the

1546
00:59:58,559 --> 01:00:00,880
uh these schemes are

1547
01:00:00,880 --> 01:00:03,440
ensure the a schemes however the

1548
01:00:03,440 --> 01:00:05,839
security level uh falls into the busy

1549
01:00:05,839 --> 01:00:07,200
bound security

1550
01:00:07,200 --> 01:00:11,200
so this scheme requires uh a

1551
01:00:11,200 --> 01:00:13,280
a large millisecond in the day settings

1552
01:00:13,280 --> 01:00:15,520
the mirror size is greater than three

1553
01:00:15,520 --> 01:00:17,440
speed

1554
01:00:17,440 --> 01:00:20,000
so we design our

1555
01:00:20,000 --> 01:00:20,799
uh

1556
01:00:20,799 --> 01:00:22,480
mdae the

1557
01:00:22,480 --> 01:00:25,599
that achieves energy security and

1558
01:00:25,599 --> 01:00:28,480
has a 10 bit in our state when using a

1559
01:00:28,480 --> 01:00:31,680
bit-block takeout cipher that is

1560
01:00:31,680 --> 01:00:33,520
fixing the security level as a mirror

1561
01:00:33,520 --> 01:00:35,520
size e3s bit

1562
01:00:35,520 --> 01:00:36,960
and we first

1563
01:00:36,960 --> 01:00:39,280
define the state update function as

1564
01:00:39,280 --> 01:00:40,559
shown here

1565
01:00:40,559 --> 01:00:44,720
and the set size is 10-bit and

1566
01:00:44,720 --> 01:00:46,880
the function

1567
01:00:46,880 --> 01:00:48,640
consists of only

1568
01:00:48,640 --> 01:00:50,640
linear operation except for the thicker

1569
01:00:50,640 --> 01:00:53,920
box cipher because we consider the

1570
01:00:53,920 --> 01:00:56,400
lightweight schemes and in this function

1571
01:00:56,400 --> 01:00:58,079
first uh

1572
01:00:58,079 --> 01:01:00,240
state is updated by explaining the data

1573
01:01:00,240 --> 01:01:02,000
block uh

1574
01:01:02,000 --> 01:01:03,119
the

1575
01:01:03,119 --> 01:01:06,160
maximum size is 10 bits and then ticker

1576
01:01:06,160 --> 01:01:08,799
box server is performed and finally the

1577
01:01:08,799 --> 01:01:11,520
output sql server and raw part of the

1578
01:01:11,520 --> 01:01:14,559
intensity mixed by the linear operation

1579
01:01:14,559 --> 01:01:16,559
and there is a three domain expression

1580
01:01:16,559 --> 01:01:17,520
for the

1581
01:01:17,520 --> 01:01:19,200
dae

1582
01:01:19,200 --> 01:01:22,079
so by iterating this uh function we

1583
01:01:22,079 --> 01:01:25,440
obtain a 20-bit internal state uh d8

1584
01:01:25,440 --> 01:01:26,400
schemes

1585
01:01:26,400 --> 01:01:30,480
so the next step is to design a dae

1586
01:01:30,480 --> 01:01:33,520
with nbc security using this function

1587
01:01:33,520 --> 01:01:37,119
so for the size of data block

1588
01:01:37,119 --> 01:01:38,880
if the

1589
01:01:38,880 --> 01:01:40,960
uh data block size is

1590
01:01:40,960 --> 01:01:44,079
maximum to and with them the scheme is

1591
01:01:44,079 --> 01:01:47,520
uh fastest but there is uh two to half

1592
01:01:47,520 --> 01:01:50,000
of an attack if data block size is

1593
01:01:50,000 --> 01:01:53,760
greater than m for example uh this is a

1594
01:01:53,760 --> 01:01:56,880
one insulation of this function

1595
01:01:56,880 --> 01:01:57,760
and

1596
01:01:57,760 --> 01:01:59,200
uh

1597
01:01:59,200 --> 01:02:02,799
if the if a collision is found on this

1598
01:02:02,799 --> 01:02:04,880
article cipher

1599
01:02:04,880 --> 01:02:07,039
from the difference of the

1600
01:02:07,039 --> 01:02:10,079
different data of the tweak space then

1601
01:02:10,079 --> 01:02:12,079
we can set the same difference to this

1602
01:02:12,079 --> 01:02:13,520
data block

1603
01:02:13,520 --> 01:02:14,799
so

1604
01:02:14,799 --> 01:02:15,599
uh

1605
01:02:15,599 --> 01:02:17,920
we we have the internal state version

1606
01:02:17,920 --> 01:02:18,960
here

1607
01:02:18,960 --> 01:02:21,599
so this interest explosion uh

1608
01:02:21,599 --> 01:02:25,039
offers the attack

1609
01:02:26,160 --> 01:02:27,280
attack

1610
01:02:27,280 --> 01:02:29,280
to this scheme

1611
01:02:29,280 --> 01:02:32,640
so this means uh as this example we

1612
01:02:32,640 --> 01:02:35,680
cannot ensure the end with security

1613
01:02:35,680 --> 01:02:38,000
uh if the

1614
01:02:38,000 --> 01:02:40,319
second time can you maybe move to the

1615
01:02:40,319 --> 01:02:41,680
last slide

1616
01:02:41,680 --> 01:02:42,400
all right

1617
01:02:42,400 --> 01:02:45,680
okay sorry yeah i get a second

1618
01:02:45,680 --> 01:02:47,039
okay so

1619
01:02:47,039 --> 01:02:50,960
summer default uh case so this is our md

1620
01:02:50,960 --> 01:02:54,000
structure and uh

1621
01:02:54,000 --> 01:02:54,960
so

1622
01:02:54,960 --> 01:02:58,720
uh we i propose uh the mda

1623
01:02:58,720 --> 01:03:01,599
uh tbc based dae it achieves security

1624
01:03:01,599 --> 01:03:04,720
and it has an internal state uh when

1625
01:03:04,720 --> 01:03:08,160
using a block typical block saver uh it

1626
01:03:08,160 --> 01:03:11,119
doesn't uh mda designed to

1627
01:03:11,119 --> 01:03:13,440
so that it does not require that we

1628
01:03:13,440 --> 01:03:15,359
schedule emboss

1629
01:03:15,359 --> 01:03:16,720
and we

1630
01:03:16,720 --> 01:03:20,640
as a underlying thicker box cipher the

1631
01:03:20,640 --> 01:03:22,000
uh we design

1632
01:03:22,000 --> 01:03:24,240
three skinny which is a variant of

1633
01:03:24,240 --> 01:03:25,200
skinny

1634
01:03:25,200 --> 01:03:27,280
uh where the

1635
01:03:27,280 --> 01:03:30,319
three streak space is added

1636
01:03:30,319 --> 01:03:33,039
to meet the lsda design

1637
01:03:33,039 --> 01:03:34,240
and

1638
01:03:34,240 --> 01:03:36,720
this thing is designed so that the key

1639
01:03:36,720 --> 01:03:38,559
schedule invest cost is small so by

1640
01:03:38,559 --> 01:03:40,559
combining these two schemes we obtain

1641
01:03:40,559 --> 01:03:44,480
the normal dae we wanted security and ti

1642
01:03:44,480 --> 01:03:46,319
friendly and

1643
01:03:46,319 --> 01:03:47,599
this table shows the hardware

1644
01:03:47,599 --> 01:03:49,599
integration result of our scheme and

1645
01:03:49,599 --> 01:03:51,039
compared with the

1646
01:03:51,039 --> 01:03:52,720
north based a

1647
01:03:52,720 --> 01:03:54,319
scheme

1648
01:03:54,319 --> 01:03:56,720
and as you can see uh

1649
01:03:56,720 --> 01:04:01,119
with ti uh mdae the the harvey cost of

1650
01:04:01,119 --> 01:04:03,920
lmda is smaller than this existing

1651
01:04:03,920 --> 01:04:06,799
tiervent scheme and even with

1652
01:04:06,799 --> 01:04:10,640
uh ti uh mdae is smaller than uh psb

1653
01:04:10,640 --> 01:04:13,440
okay that's all thank you very much

1654
01:04:13,440 --> 01:04:15,430
let's thank you sookie

1655
01:04:15,430 --> 01:04:18,529
[Applause]

1656
01:04:20,960 --> 01:04:22,400
unfortunately i've been told coffee is

1657
01:04:22,400 --> 01:04:24,799
getting cold so let's take questions

1658
01:04:24,799 --> 01:04:26,640
offline and we have a coffee break right

1659
01:04:26,640 --> 01:04:29,440
now getting back here at 10 30 for the

1660
01:04:29,440 --> 01:04:31,680
invited talk the first invited talk by

1661
01:04:31,680 --> 01:04:33,119
orton coleman

1662
01:04:33,119 --> 01:04:36,240
thank you

