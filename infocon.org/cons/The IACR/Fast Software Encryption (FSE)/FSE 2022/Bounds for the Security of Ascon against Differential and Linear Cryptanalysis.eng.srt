1
00:00:00,560 --> 00:00:02,320
hello and welcome my name is johannes

2
00:00:02,320 --> 00:00:03,919
ellaka and i am going to present the

3
00:00:03,919 --> 00:00:06,160
work i did together with florian mendel

4
00:00:06,160 --> 00:00:08,240
and maria eichelsader on bounds for the

5
00:00:08,240 --> 00:00:10,400
security of s-con against linear and

6
00:00:10,400 --> 00:00:13,120
differential cryptanalysis

7
00:00:13,120 --> 00:00:15,040
i want to start off with a short note on

8
00:00:15,040 --> 00:00:17,199
the motivation behind our work

9
00:00:17,199 --> 00:00:19,199
over the last couple of years designs

10
00:00:19,199 --> 00:00:20,800
with weak alignments have become more

11
00:00:20,800 --> 00:00:23,279
and more popular we see this for example

12
00:00:23,279 --> 00:00:25,119
in multiple proposals for the nist

13
00:00:25,119 --> 00:00:27,760
lightweight cryptography project

14
00:00:27,760 --> 00:00:30,560
designs like zodiac ascon or isap all

15
00:00:30,560 --> 00:00:32,320
have weak alignments and larger state

16
00:00:32,320 --> 00:00:33,840
sizes

17
00:00:33,840 --> 00:00:35,760
for designs like that if we look at

18
00:00:35,760 --> 00:00:37,920
linear or differential cryptanalysis we

19
00:00:37,920 --> 00:00:39,760
usually see a gap between the proof of

20
00:00:39,760 --> 00:00:41,120
bounds and the best known

21
00:00:41,120 --> 00:00:44,079
characteristics

22
00:00:44,079 --> 00:00:46,000
for s-con for example we only have

23
00:00:46,000 --> 00:00:48,079
bounds up to three rounds while we have

24
00:00:48,079 --> 00:00:51,199
found characteristics far beyond that

25
00:00:51,199 --> 00:00:53,120
this holds for a differential case as

26
00:00:53,120 --> 00:00:55,760
can be seen here but also for the linear

27
00:00:55,760 --> 00:00:57,680
one

28
00:00:57,680 --> 00:00:59,760
these bounds are usually proven by means

29
00:00:59,760 --> 00:01:01,600
of milk smt

30
00:01:01,600 --> 00:01:04,080
or constrained programming models

31
00:01:04,080 --> 00:01:05,280
while we are searching for good

32
00:01:05,280 --> 00:01:07,360
characteristics using heuristic search

33
00:01:07,360 --> 00:01:09,520
tools

34
00:01:09,520 --> 00:01:11,520
with this in mind i want to focus on

35
00:01:11,520 --> 00:01:13,680
recent developments in the encoding of

36
00:01:13,680 --> 00:01:16,080
cryptographic primitives as pure boolean

37
00:01:16,080 --> 00:01:18,560
satisfiability problems

38
00:01:18,560 --> 00:01:21,360
soon and i for example have proposed

39
00:01:21,360 --> 00:01:22,880
efficient encoding methods for

40
00:01:22,880 --> 00:01:25,280
cryptographic functions as part of their

41
00:01:25,280 --> 00:01:27,439
analysis of several designs

42
00:01:27,439 --> 00:01:29,119
which is also part of this conference

43
00:01:29,119 --> 00:01:30,240
here

44
00:01:30,240 --> 00:01:32,400
we use these encoding methods to derive

45
00:01:32,400 --> 00:01:34,079
linear and differential models of the

46
00:01:34,079 --> 00:01:36,159
s-com permutation and were able to

47
00:01:36,159 --> 00:01:39,600
verify existing bounds very efficiently

48
00:01:39,600 --> 00:01:41,439
unfortunately though we were not able to

49
00:01:41,439 --> 00:01:45,360
extend those bounds to more rounds

50
00:01:45,360 --> 00:01:47,360
at the same time there are also steady

51
00:01:47,360 --> 00:01:48,560
developments

52
00:01:48,560 --> 00:01:51,280
in the implementation and design of

53
00:01:51,280 --> 00:01:53,200
existing boolean status variability

54
00:01:53,200 --> 00:01:54,399
solvers

55
00:01:54,399 --> 00:01:55,920
but not only that

56
00:01:55,920 --> 00:01:58,159
there are also new approaches utilizing

57
00:01:58,159 --> 00:02:01,520
multiple server instances in parallel

58
00:02:01,520 --> 00:02:03,600
we evaluated some of those approaches

59
00:02:03,600 --> 00:02:05,920
but unfortunately they did not see any

60
00:02:05,920 --> 00:02:09,840
major run time improvements there

61
00:02:10,000 --> 00:02:12,080
therefore we started to think about a

62
00:02:12,080 --> 00:02:13,920
manual parallelization approach

63
00:02:13,920 --> 00:02:16,640
utilizing these new encoding methods

64
00:02:16,640 --> 00:02:18,800
with the goal of proving new bounds for

65
00:02:18,800 --> 00:02:21,680
the s-com permutation

66
00:02:21,680 --> 00:02:23,760
such an approach would need to partition

67
00:02:23,760 --> 00:02:25,840
the search base into many independent

68
00:02:25,840 --> 00:02:27,360
problems

69
00:02:27,360 --> 00:02:29,280
these problems could then be tackled in

70
00:02:29,280 --> 00:02:31,440
parallel utilizing multiple server

71
00:02:31,440 --> 00:02:33,760
instances

72
00:02:33,760 --> 00:02:35,599
to keep the runtime reasonable we

73
00:02:35,599 --> 00:02:37,920
further want to reduce the complexity of

74
00:02:37,920 --> 00:02:39,840
these individual tasks

75
00:02:39,840 --> 00:02:42,000
we can do this by optimizing the

76
00:02:42,000 --> 00:02:44,720
approach itself but also the underlying

77
00:02:44,720 --> 00:02:48,000
sub model we are using

78
00:02:48,800 --> 00:02:50,560
before i go into more details on the

79
00:02:50,560 --> 00:02:52,800
approach i want to introduce ascon the

80
00:02:52,800 --> 00:02:55,280
target of our evolutions

81
00:02:55,280 --> 00:02:57,040
the ascom family builds upon a

82
00:02:57,040 --> 00:02:59,440
permutation used in sponge or duplex

83
00:02:59,440 --> 00:03:00,800
constructions

84
00:03:00,800 --> 00:03:03,280
this permutation is defined by a state

85
00:03:03,280 --> 00:03:07,280
of 320 bits consisting of five 64-bit

86
00:03:07,280 --> 00:03:11,040
words as can be seen on the slides here

87
00:03:11,040 --> 00:03:13,120
this state is transformed over several

88
00:03:13,120 --> 00:03:16,000
round by rounds by two main layers

89
00:03:16,000 --> 00:03:18,080
namely a substitution layer is applied

90
00:03:18,080 --> 00:03:20,959
column wise and provides confusion

91
00:03:20,959 --> 00:03:23,040
while we have a linear layer providing

92
00:03:23,040 --> 00:03:26,239
diffusion within each of the five words

93
00:03:26,239 --> 00:03:27,920
these two layers are repeated over

94
00:03:27,920 --> 00:03:29,519
several rounds

95
00:03:29,519 --> 00:03:31,519
where the number of rounds depends on

96
00:03:31,519 --> 00:03:33,920
the variant in which it's used

97
00:03:33,920 --> 00:03:36,879
the most common configurations are 6 8

98
00:03:36,879 --> 00:03:39,040
and 12 rounds with a single round

99
00:03:39,040 --> 00:03:43,040
configuration used within isap

100
00:03:43,040 --> 00:03:45,360
to give you a little bit more details

101
00:03:45,360 --> 00:03:47,280
the linear layer provides diffusion

102
00:03:47,280 --> 00:03:49,440
within each word by applying a linear

103
00:03:49,440 --> 00:03:50,640
function

104
00:03:50,640 --> 00:03:52,319
this linear function is defined as a

105
00:03:52,319 --> 00:03:54,959
bitwise xor over rotated versions of

106
00:03:54,959 --> 00:03:56,959
each word

107
00:03:56,959 --> 00:03:58,799
the substitution layer on the other hand

108
00:03:58,799 --> 00:04:02,000
uses a 5-bit s-box applied 64 times

109
00:04:02,000 --> 00:04:03,439
column-wise

110
00:04:03,439 --> 00:04:05,599
this s-box has a maximum differential

111
00:04:05,599 --> 00:04:08,480
probability of 2 to the power of -2 with

112
00:04:08,480 --> 00:04:11,840
the same maximum linear bias

113
00:04:11,840 --> 00:04:15,439
our approach requires us to model these

114
00:04:15,439 --> 00:04:18,160
layers as boolean satisfiability

115
00:04:18,160 --> 00:04:19,519
problems

116
00:04:19,519 --> 00:04:21,680
therefore we follow the approach from

117
00:04:21,680 --> 00:04:23,360
sooner i

118
00:04:23,360 --> 00:04:25,919
for us each intermediate state bit is

119
00:04:25,919 --> 00:04:29,199
represented by one boolean variable

120
00:04:29,199 --> 00:04:31,520
therefore the encoding of a layer can be

121
00:04:31,520 --> 00:04:34,320
seen as a boolean function with 320

122
00:04:34,320 --> 00:04:37,280
input and output variables

123
00:04:37,280 --> 00:04:38,639
if you look at the encoding for

124
00:04:38,639 --> 00:04:41,120
substitution layer for example

125
00:04:41,120 --> 00:04:43,199
this encoding would restrict the input

126
00:04:43,199 --> 00:04:45,440
and output variables such that they are

127
00:04:45,440 --> 00:04:48,320
only allowed to represent valid entries

128
00:04:48,320 --> 00:04:50,639
in the ddt or lat of the s box

129
00:04:50,639 --> 00:04:52,880
respectively

130
00:04:52,880 --> 00:04:55,199
since we are interested in finding new

131
00:04:55,199 --> 00:04:58,720
bounds we also need to represent the

132
00:04:58,720 --> 00:05:00,800
weight of the s-box transitions in some

133
00:05:00,800 --> 00:05:02,240
way

134
00:05:02,240 --> 00:05:05,680
therefore we encode an additional 64

135
00:05:05,680 --> 00:05:07,840
variables representing the s-box

136
00:05:07,840 --> 00:05:10,960
activity in each round this set of

137
00:05:10,960 --> 00:05:13,520
variables can then be used to limit the

138
00:05:13,520 --> 00:05:15,199
total maximum

139
00:05:15,199 --> 00:05:18,880
active s boxes in our model

140
00:05:19,360 --> 00:05:21,440
the linear layer on the other hand

141
00:05:21,440 --> 00:05:23,680
simply constrains its input and output

142
00:05:23,680 --> 00:05:26,080
variables such that they represent the

143
00:05:26,080 --> 00:05:30,159
linear function i presented earlier

144
00:05:31,039 --> 00:05:32,639
with this general overview i want to

145
00:05:32,639 --> 00:05:34,639
continue with our manual parallelization

146
00:05:34,639 --> 00:05:36,880
approach

147
00:05:36,880 --> 00:05:39,039
so in order to prove the non-existence

148
00:05:39,039 --> 00:05:41,440
of any characteristic up to a certain

149
00:05:41,440 --> 00:05:43,440
number of active s-boxes

150
00:05:43,440 --> 00:05:45,280
one needs to consider all possible

151
00:05:45,280 --> 00:05:49,039
characteristics within the search space

152
00:05:49,039 --> 00:05:51,280
to utilize multiple solver instances we

153
00:05:51,280 --> 00:05:52,800
need to derive

154
00:05:52,800 --> 00:05:55,520
independent subproblems from this search

155
00:05:55,520 --> 00:05:57,039
space

156
00:05:57,039 --> 00:05:58,800
each of these problems should then

157
00:05:58,800 --> 00:06:01,600
consider as many cases as possible while

158
00:06:01,600 --> 00:06:04,720
still being efficiently solvable

159
00:06:04,720 --> 00:06:07,039
one potential idea for this is to

160
00:06:07,039 --> 00:06:09,440
categorize characteristics by the s-box

161
00:06:09,440 --> 00:06:11,039
activity

162
00:06:11,039 --> 00:06:12,560
we can observe that multiple

163
00:06:12,560 --> 00:06:14,240
characteristics

164
00:06:14,240 --> 00:06:16,800
share a common s-box activity pattern

165
00:06:16,800 --> 00:06:19,840
within certain rounds

166
00:06:19,840 --> 00:06:22,319
order to derive a pattern a partitioning

167
00:06:22,319 --> 00:06:24,400
approach from this i want to introduce

168
00:06:24,400 --> 00:06:27,199
the concept of the girdle pattern

169
00:06:27,199 --> 00:06:30,000
the girdle pattern for us is an dsbox

170
00:06:30,000 --> 00:06:31,600
activity within the round with the

171
00:06:31,600 --> 00:06:34,400
fewest active s-boxes

172
00:06:34,400 --> 00:06:37,199
for example i've included here the s-box

173
00:06:37,199 --> 00:06:39,039
activities for the currently best known

174
00:06:39,039 --> 00:06:40,800
differential characteristic over 4

175
00:06:40,800 --> 00:06:42,880
rounds of s-con

176
00:06:42,880 --> 00:06:45,360
round 2 is the girdle round with its

177
00:06:45,360 --> 00:06:47,280
girdle pattern for the specific

178
00:06:47,280 --> 00:06:48,800
characteristic

179
00:06:48,800 --> 00:06:51,599
it has a total of three active s boxes

180
00:06:51,599 --> 00:06:53,680
and which we refer to as the girdle

181
00:06:53,680 --> 00:06:55,599
weight

182
00:06:55,599 --> 00:06:57,599
for this specific case and for this

183
00:06:57,599 --> 00:06:59,440
specific characteristic

184
00:06:59,440 --> 00:07:01,280
also round three

185
00:07:01,280 --> 00:07:03,360
fulfills our definition of the girdle

186
00:07:03,360 --> 00:07:05,599
pattern

187
00:07:05,599 --> 00:07:08,319
so in order to derive a partitioning

188
00:07:08,319 --> 00:07:09,280
from this

189
00:07:09,280 --> 00:07:12,240
we would fix a specific girdle pattern

190
00:07:12,240 --> 00:07:14,840
in a specific round in our sub

191
00:07:14,840 --> 00:07:18,319
model if this if we run this model we

192
00:07:18,319 --> 00:07:21,280
would cement simultaneously check all

193
00:07:21,280 --> 00:07:24,319
characteristics which fulfill which have

194
00:07:24,319 --> 00:07:26,560
this specific girdle pattern in this

195
00:07:26,560 --> 00:07:28,840
specific

196
00:07:28,840 --> 00:07:31,120
round to give you a little bit more

197
00:07:31,120 --> 00:07:32,319
details

198
00:07:32,319 --> 00:07:33,199
so

199
00:07:33,199 --> 00:07:35,680
the properties of this are that the

200
00:07:35,680 --> 00:07:38,080
girdle round for any characteristic can

201
00:07:38,080 --> 00:07:40,479
be in any round so for our partitioning

202
00:07:40,479 --> 00:07:42,080
we need to consider

203
00:07:42,080 --> 00:07:45,840
every girdle pattern in every round

204
00:07:45,919 --> 00:07:47,680
the second point i want to make here is

205
00:07:47,680 --> 00:07:49,360
much more interesting

206
00:07:49,360 --> 00:07:51,120
since the girdle round requires all

207
00:07:51,120 --> 00:07:53,199
other rounds to have at least as many

208
00:07:53,199 --> 00:07:54,879
active s-boxes

209
00:07:54,879 --> 00:07:56,960
on the other hand we can say that there

210
00:07:56,960 --> 00:07:59,360
is a upper limit to how many active s

211
00:07:59,360 --> 00:08:01,680
boxes the girdle round has

212
00:08:01,680 --> 00:08:03,919
so we do not need to consider all

213
00:08:03,919 --> 00:08:05,440
possible patterns

214
00:08:05,440 --> 00:08:07,599
but only up to the maximum weight of the

215
00:08:07,599 --> 00:08:10,319
gear of the girdle round

216
00:08:10,319 --> 00:08:12,800
to give you an idea of this

217
00:08:12,800 --> 00:08:15,280
let's take the example of 4 rounds with

218
00:08:15,280 --> 00:08:19,039
a bound of at most 35 active s boxes

219
00:08:19,039 --> 00:08:21,120
for this we would need to consider all

220
00:08:21,120 --> 00:08:23,120
possible girdle patterns up to a weight

221
00:08:23,120 --> 00:08:25,280
of 8.

222
00:08:25,280 --> 00:08:27,599
this gives us a total of 2 to the power

223
00:08:27,599 --> 00:08:29,520
of 32 different patterns we have to

224
00:08:29,520 --> 00:08:30,960
consider

225
00:08:30,960 --> 00:08:33,279
each of those patterns would then need

226
00:08:33,279 --> 00:08:35,760
to be fixed in our model

227
00:08:35,760 --> 00:08:38,000
in all different rounds

228
00:08:38,000 --> 00:08:42,240
and run for each experiment separately

229
00:08:43,919 --> 00:08:45,440
with this we have achieved the

230
00:08:45,440 --> 00:08:47,600
partitioning of our search space but we

231
00:08:47,600 --> 00:08:49,680
still have open questions

232
00:08:49,680 --> 00:08:51,120
first of all

233
00:08:51,120 --> 00:08:52,880
we have a huge number of individual

234
00:08:52,880 --> 00:08:55,120
checks we now have to make

235
00:08:55,120 --> 00:08:57,440
probably we can reduce this number the

236
00:08:57,440 --> 00:08:59,600
second point is the complexity of these

237
00:08:59,600 --> 00:09:01,120
individual subproblems is still

238
00:09:01,120 --> 00:09:03,440
relatively high because the complexity

239
00:09:03,440 --> 00:09:04,959
of our model

240
00:09:04,959 --> 00:09:06,640
grows with the number of rounds we have

241
00:09:06,640 --> 00:09:09,600
to encode and also the bound we have to

242
00:09:09,600 --> 00:09:11,360
encode

243
00:09:11,360 --> 00:09:13,519
therefore i want to first consider

244
00:09:13,519 --> 00:09:15,680
rotational symmetries

245
00:09:15,680 --> 00:09:17,920
in the s-computation

246
00:09:17,920 --> 00:09:20,320
we can observe that characteristics for

247
00:09:20,320 --> 00:09:22,240
the s-computation are actually

248
00:09:22,240 --> 00:09:24,320
rotational invariant

249
00:09:24,320 --> 00:09:26,399
this means that rotating each word of a

250
00:09:26,399 --> 00:09:28,959
characteristic by a constant value gives

251
00:09:28,959 --> 00:09:31,920
us an equivalent valid characteristic

252
00:09:31,920 --> 00:09:32,800
and

253
00:09:32,800 --> 00:09:34,880
this property also applies to our

254
00:09:34,880 --> 00:09:37,200
definition of the girdle pattern

255
00:09:37,200 --> 00:09:39,519
so for example if we take this

256
00:09:39,519 --> 00:09:41,440
these internal states i've included here

257
00:09:41,440 --> 00:09:43,600
on the slides over one round of s con

258
00:09:43,600 --> 00:09:45,839
and we shift them by

259
00:09:45,839 --> 00:09:48,399
three for example we get an equivalent

260
00:09:48,399 --> 00:09:51,120
characteristic in terms of structure and

261
00:09:51,120 --> 00:09:53,360
weight

262
00:09:54,000 --> 00:09:54,959
so

263
00:09:54,959 --> 00:09:56,560
with this in mind we can eliminate

264
00:09:56,560 --> 00:10:00,080
duplicates from our search space

265
00:10:00,080 --> 00:10:02,839
and we do this by applying necklace

266
00:10:02,839 --> 00:10:05,680
theory necklace theory can be used to

267
00:10:05,680 --> 00:10:08,399
enumerate all rotational unique patterns

268
00:10:08,399 --> 00:10:10,959
of a certain length with a given weight

269
00:10:10,959 --> 00:10:13,680
for us this length would be 64

270
00:10:13,680 --> 00:10:16,079
given the xbox activity and the weight

271
00:10:16,079 --> 00:10:17,760
would be defined by the different

272
00:10:17,760 --> 00:10:19,600
weights we have to check

273
00:10:19,600 --> 00:10:22,240
for each girdle pattern

274
00:10:22,240 --> 00:10:24,079
overall this reduces the number of

275
00:10:24,079 --> 00:10:26,240
patterns we have to check by a factor of

276
00:10:26,240 --> 00:10:28,000
2 to the power of 6

277
00:10:28,000 --> 00:10:30,079
and gives us a rotational unique set of

278
00:10:30,079 --> 00:10:33,040
girdle necklaces which removes redundant

279
00:10:33,040 --> 00:10:36,399
checks from our search space

280
00:10:37,920 --> 00:10:40,320
so with this we now have we only have to

281
00:10:40,320 --> 00:10:42,640
solve the last problem here which is to

282
00:10:42,640 --> 00:10:44,480
reduce the complexity of the individual

283
00:10:44,480 --> 00:10:46,000
problems

284
00:10:46,000 --> 00:10:50,160
for this we can make another observation

285
00:10:50,480 --> 00:10:52,720
given a characteristic over for example

286
00:10:52,720 --> 00:10:55,200
4 rounds with a girdle pattern in the

287
00:10:55,200 --> 00:10:57,120
first or second round this is the same

288
00:10:57,120 --> 00:10:58,880
girdle pattern here

289
00:10:58,880 --> 00:11:00,640
for these characteristics

290
00:11:00,640 --> 00:11:03,200
they share a common precondition namely

291
00:11:03,200 --> 00:11:04,959
that they must contain a partial

292
00:11:04,959 --> 00:11:07,279
characteristic over three rounds with

293
00:11:07,279 --> 00:11:09,360
the specific girdle pattern in the first

294
00:11:09,360 --> 00:11:10,640
round

295
00:11:10,640 --> 00:11:14,320
a similar property holds for the for

296
00:11:14,320 --> 00:11:16,240
characteristic with a girdle pattern in

297
00:11:16,240 --> 00:11:18,320
the third or fourth round over four

298
00:11:18,320 --> 00:11:20,640
rounds

299
00:11:20,640 --> 00:11:23,040
with this in mind we can

300
00:11:23,040 --> 00:11:25,040
first of all only

301
00:11:25,040 --> 00:11:27,279
check patterns all the patterns over

302
00:11:27,279 --> 00:11:29,040
three rounds

303
00:11:29,040 --> 00:11:31,760
and only if this precondition holds

304
00:11:31,760 --> 00:11:33,760
we will consider them for full round

305
00:11:33,760 --> 00:11:37,680
checks in their specific cases

306
00:11:38,000 --> 00:11:40,399
this reduces the model complexity in two

307
00:11:40,399 --> 00:11:43,040
ways first of all it reduces the number

308
00:11:43,040 --> 00:11:45,360
of rounds we have to encode but second

309
00:11:45,360 --> 00:11:48,079
of all since the girdle round requires

310
00:11:48,079 --> 00:11:50,000
all other rounds to have at least as

311
00:11:50,000 --> 00:11:52,399
many active s boxes we can also reduce

312
00:11:52,399 --> 00:11:54,079
the bound we are checking for this

313
00:11:54,079 --> 00:11:56,160
reduced model by the weight of the

314
00:11:56,160 --> 00:11:59,519
girdle of the girdle round

315
00:12:01,839 --> 00:12:03,760
so now we have a partitioning without

316
00:12:03,760 --> 00:12:05,839
redundant checks and with this

317
00:12:05,839 --> 00:12:07,760
pre-filtering approach we can first of

318
00:12:07,760 --> 00:12:09,519
all check

319
00:12:09,519 --> 00:12:12,240
all our patterns in a reduced way

320
00:12:12,240 --> 00:12:15,279
with reduced complexity and all and

321
00:12:15,279 --> 00:12:17,440
also only consider certain rounds

322
00:12:17,440 --> 00:12:20,480
instead of all of them

323
00:12:21,760 --> 00:12:23,920
finally i also want to mention that in

324
00:12:23,920 --> 00:12:26,320
our paper we describe further

325
00:12:26,320 --> 00:12:28,959
optimization approaches like combining

326
00:12:28,959 --> 00:12:31,040
similar subtasks into one

327
00:12:31,040 --> 00:12:33,519
and an evaluation of different methods

328
00:12:33,519 --> 00:12:35,200
to encode the

329
00:12:35,200 --> 00:12:39,279
bound in our sub model

330
00:12:39,279 --> 00:12:41,200
i want to continue with the results we

331
00:12:41,200 --> 00:12:43,839
were able to acquire using this new

332
00:12:43,839 --> 00:12:46,560
approach starting with a new bound for 4

333
00:12:46,560 --> 00:12:49,440
rounds of s con

334
00:12:49,440 --> 00:12:52,720
our goal here was to prove at least 36

335
00:12:52,720 --> 00:12:55,760
active s boxes over four rounds

336
00:12:55,760 --> 00:12:57,920
we therefore need to consider all girdle

337
00:12:57,920 --> 00:13:01,040
necklaces with weights up to eight

338
00:13:01,040 --> 00:13:03,200
this gives us a total of two to the

339
00:13:03,200 --> 00:13:05,360
power of 26 different patterns we have

340
00:13:05,360 --> 00:13:07,200
to consider

341
00:13:07,200 --> 00:13:09,279
we first of all do our pre-filtering

342
00:13:09,279 --> 00:13:11,040
over three rounds

343
00:13:11,040 --> 00:13:12,720
checking the all these patterns in the

344
00:13:12,720 --> 00:13:16,000
first and third round

345
00:13:16,639 --> 00:13:18,720
this pre-filtering is very successful

346
00:13:18,720 --> 00:13:20,959
because only very few patterns actually

347
00:13:20,959 --> 00:13:22,959
fulfill this precondition

348
00:13:22,959 --> 00:13:25,279
there are around 4 000 patterns for the

349
00:13:25,279 --> 00:13:28,000
differential and linear case left

350
00:13:28,000 --> 00:13:30,560
these patterns have an interesting

351
00:13:30,560 --> 00:13:32,399
difference in the distribution for the

352
00:13:32,399 --> 00:13:34,560
linear and differential case

353
00:13:34,560 --> 00:13:36,240
in the differential case these lower

354
00:13:36,240 --> 00:13:38,560
weight patterns are favored in the first

355
00:13:38,560 --> 00:13:40,720
round in the initial round while the

356
00:13:40,720 --> 00:13:42,800
linear case favors these lower weight

357
00:13:42,800 --> 00:13:45,040
patterns in the last round

358
00:13:45,040 --> 00:13:48,079
this makes intuitive sense since the

359
00:13:48,079 --> 00:13:50,480
diffusion in the backward direction is

360
00:13:50,480 --> 00:13:54,480
much larger for the linear case

361
00:13:54,560 --> 00:13:56,480
these pre-filtered patterns are then of

362
00:13:56,480 --> 00:13:58,320
course rechecked over the full four

363
00:13:58,320 --> 00:14:02,079
rounds for their respective cases

364
00:14:02,079 --> 00:14:04,480
overall these experiments took around

365
00:14:04,480 --> 00:14:06,639
600 cpu days for the linear and

366
00:14:06,639 --> 00:14:08,480
differential case each

367
00:14:08,480 --> 00:14:11,279
we executed those experiments in around

368
00:14:11,279 --> 00:14:13,240
half a week on

369
00:14:13,240 --> 00:14:16,000
176 cores

370
00:14:16,000 --> 00:14:18,079
the runtime is dominated by the

371
00:14:18,079 --> 00:14:20,240
pre-filtering checks for patterns of

372
00:14:20,240 --> 00:14:21,199
weight a

373
00:14:21,199 --> 00:14:23,199
weight 8.

374
00:14:23,199 --> 00:14:25,360
this makes sense since they contribute

375
00:14:25,360 --> 00:14:27,279
the largest number of individual

376
00:14:27,279 --> 00:14:29,519
patterns

377
00:14:29,519 --> 00:14:31,839
overall we can conclude that we did not

378
00:14:31,839 --> 00:14:34,320
find any satisfiable instances and

379
00:14:34,320 --> 00:14:36,399
therefore a single characteristic for

380
00:14:36,399 --> 00:14:38,800
four rounds of s-con must have at least

381
00:14:38,800 --> 00:14:42,479
36 active s-boxes

382
00:14:43,360 --> 00:14:45,680
with this new 4 round bound we wanted to

383
00:14:45,680 --> 00:14:48,240
extend our approach to even more rounds

384
00:14:48,240 --> 00:14:50,720
and therefore target a 6 round bound for

385
00:14:50,720 --> 00:14:53,519
s cone as well

386
00:14:53,600 --> 00:14:55,839
for this we can make this observation

387
00:14:55,839 --> 00:14:58,880
that any characteristic with at most 53

388
00:14:58,880 --> 00:15:01,519
active s-boxes over six rounds must

389
00:15:01,519 --> 00:15:04,000
contain a partial characteristic with

390
00:15:04,000 --> 00:15:07,519
less than 27 active s-boxes in its first

391
00:15:07,519 --> 00:15:09,279
or last three rounds

392
00:15:09,279 --> 00:15:12,800
as visualized on the slides here

393
00:15:12,800 --> 00:15:15,680
for this we can additionally reuse our

394
00:15:15,680 --> 00:15:17,760
pre-filtering results

395
00:15:17,760 --> 00:15:20,079
from the foreground experiments since

396
00:15:20,079 --> 00:15:22,800
these cover this bound of less than 27

397
00:15:22,800 --> 00:15:23,920
already

398
00:15:23,920 --> 00:15:25,920
the only thing we have to do is extend

399
00:15:25,920 --> 00:15:28,480
those pre-filtering results for the

400
00:15:28,480 --> 00:15:30,720
second round case since we previously

401
00:15:30,720 --> 00:15:32,560
only considered the first and third

402
00:15:32,560 --> 00:15:34,720
round

403
00:15:34,720 --> 00:15:36,320
with this in mind

404
00:15:36,320 --> 00:15:39,199
we can do the following approach we

405
00:15:39,199 --> 00:15:41,360
consider all pre-filtered patterns over

406
00:15:41,360 --> 00:15:42,560
three rounds

407
00:15:42,560 --> 00:15:44,160
and check these patterns in their

408
00:15:44,160 --> 00:15:46,720
respective case in the first and second

409
00:15:46,720 --> 00:15:48,880
half over six rounds

410
00:15:48,880 --> 00:15:51,440
this means for example a pre-filtered

411
00:15:51,440 --> 00:15:52,800
pattern

412
00:15:52,800 --> 00:15:55,279
in the first round over three rounds

413
00:15:55,279 --> 00:15:57,519
would then be rechecked over six rounds

414
00:15:57,519 --> 00:16:00,079
in the first and fourth round

415
00:16:00,079 --> 00:16:02,639
a similar case applies to the second and

416
00:16:02,639 --> 00:16:05,680
third round patterns as well

417
00:16:05,680 --> 00:16:07,440
if none of these

418
00:16:07,440 --> 00:16:09,839
checks yield a satisfiable instance we

419
00:16:09,839 --> 00:16:11,759
can conclude that this bound holds as

420
00:16:11,759 --> 00:16:14,000
well

421
00:16:14,399 --> 00:16:16,320
we did all of those experiments in

422
00:16:16,320 --> 00:16:18,800
around 60 cpu days for a linear and

423
00:16:18,800 --> 00:16:20,720
differential case each

424
00:16:20,720 --> 00:16:22,320
the pre-filtered patterns we had to

425
00:16:22,320 --> 00:16:25,920
consider were around 6 000 for each case

426
00:16:25,920 --> 00:16:28,079
therefore the additional second round

427
00:16:28,079 --> 00:16:30,399
pre-filtering results

428
00:16:30,399 --> 00:16:33,440
contributed around 2000 patterns to each

429
00:16:33,440 --> 00:16:35,440
case

430
00:16:35,440 --> 00:16:37,759
in conclusion we can say that we did not

431
00:16:37,759 --> 00:16:40,240
find any satisfiable instances and

432
00:16:40,240 --> 00:16:43,519
therefore also this bound of at least 54

433
00:16:43,519 --> 00:16:46,079
active s-boxes over six rounds of s-con

434
00:16:46,079 --> 00:16:48,479
holds

435
00:16:49,360 --> 00:16:51,199
with these new bounds established i want

436
00:16:51,199 --> 00:16:53,680
to take a look at the implications for

437
00:16:53,680 --> 00:16:56,000
s-con

438
00:16:56,000 --> 00:16:58,480
from our results we can derive three new

439
00:16:58,480 --> 00:17:01,279
interesting bounds namely a s6 and 8 and

440
00:17:01,279 --> 00:17:03,440
the 12th round bound

441
00:17:03,440 --> 00:17:05,280
first of all let's take a look at the

442
00:17:05,280 --> 00:17:08,480
authenticated encryption schemes

443
00:17:08,480 --> 00:17:10,319
there the initialization and

444
00:17:10,319 --> 00:17:13,359
finalization phases both use 12 round

445
00:17:13,359 --> 00:17:16,799
configurations of this permutation

446
00:17:16,799 --> 00:17:18,880
our 12 round bound which is almost

447
00:17:18,880 --> 00:17:20,400
certainly not tied

448
00:17:20,400 --> 00:17:22,480
already provides an ample security

449
00:17:22,480 --> 00:17:27,520
margin for 128-bit security there

450
00:17:28,000 --> 00:17:29,919
the data processing on the other hand

451
00:17:29,919 --> 00:17:33,679
uses six and 8 round configurations

452
00:17:33,679 --> 00:17:35,760
there we can only make this argument

453
00:17:35,760 --> 00:17:38,160
that with a data limit of 2 to the power

454
00:17:38,160 --> 00:17:41,120
of 64 encryption blocks per key it is

455
00:17:41,120 --> 00:17:43,360
very unlikely with our new bounds to

456
00:17:43,360 --> 00:17:46,400
find pairs among those queries

457
00:17:46,400 --> 00:17:48,559
but we are working towards extending the

458
00:17:48,559 --> 00:17:51,280
sixth round bound to a probability of at

459
00:17:51,280 --> 00:17:53,120
least two

460
00:17:53,120 --> 00:17:57,159
to the power of minus 128.

461
00:17:58,400 --> 00:18:00,640
so finally i want to mention ascon hash

462
00:18:00,640 --> 00:18:02,400
and s console

463
00:18:02,400 --> 00:18:04,240
these are unkeyed modes and therefore

464
00:18:04,240 --> 00:18:06,799
hard to evaluate based on probability

465
00:18:06,799 --> 00:18:08,720
we can make this intuitive argument

466
00:18:08,720 --> 00:18:09,520
there

467
00:18:09,520 --> 00:18:11,520
based on the assumption that if we have

468
00:18:11,520 --> 00:18:15,760
2 to the power of 128 attempts utilizing

469
00:18:15,760 --> 00:18:17,840
all degrees of freedom the rate provides

470
00:18:17,840 --> 00:18:21,360
so 64 bits we would get a probability of

471
00:18:21,360 --> 00:18:24,799
2 to the power of minus 192

472
00:18:24,799 --> 00:18:26,960
while our 12 round bound which is almost

473
00:18:26,960 --> 00:18:28,720
certainly not tight

474
00:18:28,720 --> 00:18:31,360
already implies a probability of 2 to

475
00:18:31,360 --> 00:18:34,160
the power of -216

476
00:18:34,160 --> 00:18:36,320
so this gives confidence in the

477
00:18:36,320 --> 00:18:39,200
resistance of those schemes against such

478
00:18:39,200 --> 00:18:42,520
attack vectors

479
00:18:42,799 --> 00:18:44,480
with this i want to give an outlook of

480
00:18:44,480 --> 00:18:46,640
potential future work

481
00:18:46,640 --> 00:18:49,600
so a bound of at least 40 active s boxes

482
00:18:49,600 --> 00:18:51,600
over 4 rounds should be possible with

483
00:18:51,600 --> 00:18:53,039
our approach

484
00:18:53,039 --> 00:18:56,160
we estimate a run time of around 6.6 000

485
00:18:56,160 --> 00:18:58,880
cpu days which was unfortunately beyond

486
00:18:58,880 --> 00:19:02,160
our computational budget

487
00:19:02,160 --> 00:19:04,400
another interesting bound would be at

488
00:19:04,400 --> 00:19:07,360
least 60 four active s-boxes over six

489
00:19:07,360 --> 00:19:09,679
rounds which are already mentioned

490
00:19:09,679 --> 00:19:12,240
this might only be possible if we only

491
00:19:12,240 --> 00:19:14,320
consider constrained characteristics

492
00:19:14,320 --> 00:19:16,639
though

493
00:19:17,200 --> 00:19:18,799
since our bounds are almost certainly

494
00:19:18,799 --> 00:19:21,039
not tied we did not specifically

495
00:19:21,039 --> 00:19:23,039
evaluate probability bounds

496
00:19:23,039 --> 00:19:25,120
but the modeling techniques by sonet al

497
00:19:25,120 --> 00:19:26,000
are

498
00:19:26,000 --> 00:19:28,480
most certainly able to model such to

499
00:19:28,480 --> 00:19:31,840
derive such models as well

500
00:19:32,080 --> 00:19:33,520
finally i want to mention the

501
00:19:33,520 --> 00:19:35,760
application to other designs

502
00:19:35,760 --> 00:19:37,200
there are other designs which share a

503
00:19:37,200 --> 00:19:40,320
similar structure to s-con as well as

504
00:19:40,320 --> 00:19:42,080
some designs having this rotational

505
00:19:42,080 --> 00:19:44,720
invariant property as well so therefore

506
00:19:44,720 --> 00:19:46,799
our approach is generally applicable to

507
00:19:46,799 --> 00:19:49,918
other designs as well

508
00:19:51,200 --> 00:19:52,480
so to summarize

509
00:19:52,480 --> 00:19:54,320
i've presented a manual parallelization

510
00:19:54,320 --> 00:19:57,440
approach um with with which with which

511
00:19:57,440 --> 00:19:59,440
we were able to derive new bounds for

512
00:19:59,440 --> 00:20:01,280
the s-com permutation

513
00:20:01,280 --> 00:20:03,600
namely a bound of at least 36

514
00:20:03,600 --> 00:20:05,840
differential or linear active s boxes

515
00:20:05,840 --> 00:20:09,120
over 4 rounds as well as at least 54

516
00:20:09,120 --> 00:20:11,200
differential linear active s boxes over

517
00:20:11,200 --> 00:20:12,640
6 rounds

518
00:20:12,640 --> 00:20:14,400
these bounds are almost certainly not

519
00:20:14,400 --> 00:20:16,799
tight but they are enough to support

520
00:20:16,799 --> 00:20:19,200
trust in this permutation

521
00:20:19,200 --> 00:20:20,559
with this i want to thank you for your

522
00:20:20,559 --> 00:20:25,158
attention and have a nice day

523
00:20:52,799 --> 00:20:54,879
you

