1
00:00:14,160 --> 00:00:16,400
go ahead oh hello everyone and welcome

2
00:00:16,400 --> 00:00:18,160
to the first session of the last day of

3
00:00:18,160 --> 00:00:21,359
fcc 2022 and this is a session on stream

4
00:00:21,359 --> 00:00:24,160
ciphers and the first talk is fake neo

5
00:00:24,160 --> 00:00:26,480
collision attacks by patrick patrick the

6
00:00:26,480 --> 00:00:28,480
best pierre lamphuck and victor malimar

7
00:00:28,480 --> 00:00:31,840
and patrick is given the top

8
00:00:33,840 --> 00:00:36,000
thank you for the introduction

9
00:00:36,000 --> 00:00:40,040
so this talk is about

10
00:00:43,740 --> 00:00:46,869
[Music]

11
00:01:07,920 --> 00:01:10,920
okay

12
00:01:24,880 --> 00:01:27,200
okay

13
00:01:27,200 --> 00:01:29,680
okay so this talk is about uh

14
00:01:29,680 --> 00:01:31,600
fastener collision attacks

15
00:01:31,600 --> 00:01:34,479
which is a clipped analysis technique

16
00:01:34,479 --> 00:01:36,720
uh that were introduced that was

17
00:01:36,720 --> 00:01:38,159
introduced at

18
00:01:38,159 --> 00:01:40,720
eurocrypt 18. by

19
00:01:40,720 --> 00:01:42,880
bin zhang and his quarters against the

20
00:01:42,880 --> 00:01:44,479
stream cipher grain

21
00:01:44,479 --> 00:01:45,759
v1

22
00:01:45,759 --> 00:01:48,240
and another paper uh

23
00:01:48,240 --> 00:01:50,159
using the same techniques

24
00:01:50,159 --> 00:01:53,520
um was published at aj crypt 18

25
00:01:53,520 --> 00:01:55,040
19 sorry

26
00:01:55,040 --> 00:01:57,759
so you can see in this table

27
00:01:57,759 --> 00:02:00,159
how this technique is powerful

28
00:02:00,159 --> 00:02:02,719
very amazing results

29
00:02:02,719 --> 00:02:03,520
it

30
00:02:03,520 --> 00:02:06,560
breaks two stream ciphers

31
00:02:06,560 --> 00:02:10,560
and we'll see how we do that

32
00:02:12,560 --> 00:02:13,280
so

33
00:02:13,280 --> 00:02:15,760
basically the core of this script

34
00:02:15,760 --> 00:02:18,000
analysis technique is this

35
00:02:18,000 --> 00:02:21,280
refined self-contained method

36
00:02:21,280 --> 00:02:23,760
so first you will compute some

37
00:02:23,760 --> 00:02:26,160
differential table containing near

38
00:02:26,160 --> 00:02:27,840
collisions

39
00:02:27,840 --> 00:02:28,720
that's

40
00:02:28,720 --> 00:02:30,879
what is in green here

41
00:02:30,879 --> 00:02:31,760
and

42
00:02:31,760 --> 00:02:34,239
this table will be used in an algorithm

43
00:02:34,239 --> 00:02:37,440
the blue one to

44
00:02:37,440 --> 00:02:38,560
compute

45
00:02:38,560 --> 00:02:40,800
so this algorithm takes

46
00:02:40,800 --> 00:02:43,680
as input a key stream

47
00:02:43,680 --> 00:02:47,680
so some key screen bits here ks

48
00:02:47,680 --> 00:02:50,640
and the difference so

49
00:02:50,640 --> 00:02:53,280
other inputs are not really relevant but

50
00:02:53,280 --> 00:02:55,280
at the end of this algorithm you will

51
00:02:55,280 --> 00:02:57,599
output the set x

52
00:02:57,599 --> 00:03:00,159
which contain

53
00:03:00,159 --> 00:03:01,360
the

54
00:03:01,360 --> 00:03:05,360
the value which generated ks

55
00:03:05,360 --> 00:03:06,480
with a

56
00:03:06,480 --> 00:03:08,800
good enough probability okay

57
00:03:08,800 --> 00:03:10,879
and so this is a random algorithm

58
00:03:10,879 --> 00:03:13,519
heuristic algorithm so at the end you

59
00:03:13,519 --> 00:03:16,720
perform an amplifying phases phase

60
00:03:16,720 --> 00:03:19,840
in which you generate many set x

61
00:03:19,840 --> 00:03:21,920
and you take the union of the

62
00:03:21,920 --> 00:03:24,080
intersection of those sets

63
00:03:24,080 --> 00:03:26,159
okay

64
00:03:26,159 --> 00:03:27,360
and

65
00:03:27,360 --> 00:03:29,360
if

66
00:03:29,360 --> 00:03:30,480
you look

67
00:03:30,480 --> 00:03:31,760
at

68
00:03:31,760 --> 00:03:33,440
how they applied

69
00:03:33,440 --> 00:03:36,879
this technique it's a bit suspicious so

70
00:03:36,879 --> 00:03:39,680
in particular for grain v1

71
00:03:39,680 --> 00:03:42,239
it was applied so on

72
00:03:42,239 --> 00:03:44,000
two rounds

73
00:03:44,000 --> 00:03:47,519
of the update function okay so you

74
00:03:47,519 --> 00:03:49,920
apply the algorithm with

75
00:03:49,920 --> 00:03:53,120
two bits of keystream

76
00:03:53,120 --> 00:03:55,519
and in this case they are able to

77
00:03:55,519 --> 00:03:58,480
generate a set x which contain the right

78
00:03:58,480 --> 00:04:02,560
value uh which is much higher

79
00:04:02,560 --> 00:04:04,799
expected probability probability than

80
00:04:04,799 --> 00:04:06,000
expected

81
00:04:06,000 --> 00:04:09,519
and what's it's uh very interesting

82
00:04:09,519 --> 00:04:11,920
with this application

83
00:04:11,920 --> 00:04:14,560
is that the function f

84
00:04:14,560 --> 00:04:16,160
here

85
00:04:16,160 --> 00:04:17,519
okay

86
00:04:17,519 --> 00:04:20,478
is actually it can be a

87
00:04:20,478 --> 00:04:22,639
right hand

88
00:04:22,639 --> 00:04:26,800
as a some linear part plus a function h

89
00:04:26,800 --> 00:04:29,600
and so the technique is applied on

90
00:04:29,600 --> 00:04:32,720
the function h equals to zero okay so

91
00:04:32,720 --> 00:04:34,560
it's like you applied it with the key

92
00:04:34,560 --> 00:04:37,520
scheme equals to zero and the function h

93
00:04:37,520 --> 00:04:39,680
and so basically you restrict the search

94
00:04:39,680 --> 00:04:40,840
space

95
00:04:40,840 --> 00:04:44,639
without any knowledge of the key stream

96
00:04:44,639 --> 00:04:46,880
so that was very suspicious

97
00:04:46,880 --> 00:04:50,320
and you have same uh results for

98
00:04:50,320 --> 00:04:51,840
for five one

99
00:04:51,840 --> 00:04:55,040
and what is wrong what is why

100
00:04:55,040 --> 00:04:58,400
all of that is impossible

101
00:05:00,080 --> 00:05:02,000
this is because of this

102
00:05:02,000 --> 00:05:04,000
very trivial theorem

103
00:05:04,000 --> 00:05:06,880
which says that if you have an algorithm

104
00:05:06,880 --> 00:05:09,600
which takes as input a function f and an

105
00:05:09,600 --> 00:05:10,639
element

106
00:05:10,639 --> 00:05:13,840
of this of the image of f

107
00:05:13,840 --> 00:05:15,440
and which i would put

108
00:05:15,440 --> 00:05:17,680
a subset of the

109
00:05:17,680 --> 00:05:19,919
pre-image of

110
00:05:19,919 --> 00:05:23,199
of this this element

111
00:05:23,199 --> 00:05:26,800
and now if you draw uniformly at random

112
00:05:26,800 --> 00:05:29,600
an element of the pre image

113
00:05:29,600 --> 00:05:32,080
of f of this element

114
00:05:32,080 --> 00:05:33,840
then the probability that this element

115
00:05:33,840 --> 00:05:37,199
belongs to x is exactly the size of x

116
00:05:37,199 --> 00:05:40,080
divided by the size of

117
00:05:40,080 --> 00:05:42,800
of the pre-image okay and the refined

118
00:05:42,800 --> 00:05:44,960
self-contained method fulfills this

119
00:05:44,960 --> 00:05:47,759
the requirements of this theorem so the

120
00:05:47,759 --> 00:05:50,880
only possibility

121
00:05:51,440 --> 00:05:53,039
for the

122
00:05:53,039 --> 00:05:55,600
results of the fastener collision

123
00:05:55,600 --> 00:05:57,039
attacks to be true

124
00:05:57,039 --> 00:05:58,560
are

125
00:05:58,560 --> 00:06:01,600
if we cannot draw uniform uniformly at

126
00:06:01,600 --> 00:06:02,639
random

127
00:06:02,639 --> 00:06:04,800
an element

128
00:06:04,800 --> 00:06:07,280
of the pre-image so it means that there

129
00:06:07,280 --> 00:06:09,759
is a bias or distinguisher on the

130
00:06:09,759 --> 00:06:12,240
initialised initialization phases of

131
00:06:12,240 --> 00:06:16,400
both grain v1 and a51 okay

132
00:06:16,400 --> 00:06:18,160
so obviously

133
00:06:18,160 --> 00:06:20,400
this is not true

134
00:06:20,400 --> 00:06:21,840
and we

135
00:06:21,840 --> 00:06:24,000
found several other problems in uh in

136
00:06:24,000 --> 00:06:25,360
both papers

137
00:06:25,360 --> 00:06:27,520
and what is very

138
00:06:27,520 --> 00:06:28,400
weird

139
00:06:28,400 --> 00:06:31,039
uh is that in both papers they say that

140
00:06:31,039 --> 00:06:33,360
they performed a lot of experiments to

141
00:06:33,360 --> 00:06:36,240
uh to check the results while we just

142
00:06:36,240 --> 00:06:38,960
added a loop in the c code they provided

143
00:06:38,960 --> 00:06:40,960
and we found that

144
00:06:40,960 --> 00:06:44,080
probabilities does not match what they

145
00:06:44,080 --> 00:06:46,720
say in uh in those papers

146
00:06:46,720 --> 00:06:50,479
okay so fastener collision attacks

147
00:06:50,479 --> 00:06:51,840
our dream

148
00:06:51,840 --> 00:06:52,720
and

149
00:06:52,720 --> 00:06:54,800
i think there are much more interesting

150
00:06:54,800 --> 00:06:57,199
things to do for instance

151
00:06:57,199 --> 00:06:59,199
yesterday i was walking through the city

152
00:06:59,199 --> 00:07:00,240
and i saw

153
00:07:00,240 --> 00:07:02,479
this theorem on the t-shirt

154
00:07:02,479 --> 00:07:04,080
and i think it's much more interesting

155
00:07:04,080 --> 00:07:05,280
to think about

156
00:07:05,280 --> 00:07:06,639
about it

157
00:07:06,639 --> 00:07:09,680
thank you for your attention

158
00:07:13,919 --> 00:07:15,360
thank you very much patrick are there

159
00:07:15,360 --> 00:07:17,280
any questions some questions in the room

160
00:07:17,280 --> 00:07:18,479
yes

161
00:07:18,479 --> 00:07:20,479
yes

162
00:07:20,479 --> 00:07:21,680
yes yes

163
00:07:21,680 --> 00:07:24,720
hello yes perfect yes i have a question

164
00:07:24,720 --> 00:07:25,520
yes

165
00:07:25,520 --> 00:07:28,479
yes actually yes

166
00:07:28,479 --> 00:07:31,520
can we go back to the uh the

167
00:07:31,520 --> 00:07:33,280
the next one

168
00:07:33,280 --> 00:07:34,479
i i will

169
00:07:34,479 --> 00:07:36,800
i don't know why when this is super i

170
00:07:36,800 --> 00:07:38,560
have trouble hearing it but i will say

171
00:07:38,560 --> 00:07:40,560
to you later okay

172
00:07:40,560 --> 00:07:43,039
so where do you want to go actually

173
00:07:43,039 --> 00:07:46,639
yes i did not agree with patrick's uh

174
00:07:46,639 --> 00:07:49,360
the conclusion actually

175
00:07:49,360 --> 00:07:51,919
the concrete probability

176
00:07:51,919 --> 00:07:54,560
for the heating for each restricted

177
00:07:54,560 --> 00:07:57,120
intense state is

178
00:07:57,120 --> 00:07:59,599
determined by the value of the state

179
00:07:59,599 --> 00:08:03,680
note that the serum one actually sierra

180
00:08:03,680 --> 00:08:06,160
has nothing to do with this attack i

181
00:08:06,160 --> 00:08:08,720
think there are some misunderstanding uh

182
00:08:08,720 --> 00:08:11,759
besides i think the merged states in

183
00:08:11,759 --> 00:08:14,560
your paper is it is incorrect because

184
00:08:14,560 --> 00:08:18,080
each list can only be generated once

185
00:08:18,080 --> 00:08:20,160
and the used ones but you counted the

186
00:08:20,160 --> 00:08:22,319
toys so this is a problem

187
00:08:22,319 --> 00:08:24,720
i think there is a paper at inscript

188
00:08:24,720 --> 00:08:27,120
last year you can see it i'm really

189
00:08:27,120 --> 00:08:28,160
sorry

190
00:08:28,160 --> 00:08:29,919
can you say exactly what is the question

191
00:08:29,919 --> 00:08:31,520
you have well

192
00:08:31,520 --> 00:08:34,000
where is the problem because

193
00:08:34,000 --> 00:08:35,919
yes i think there are several problems

194
00:08:35,919 --> 00:08:38,159
about the patrick's paper first i would

195
00:08:38,159 --> 00:08:40,640
like to thank patrick's interest but

196
00:08:40,640 --> 00:08:43,919
after our communication yes by email i

197
00:08:43,919 --> 00:08:46,560
think i can interpret very well the

198
00:08:46,560 --> 00:08:49,440
phenomena that you add a for loop in the

199
00:08:49,440 --> 00:08:51,680
public available code

200
00:08:51,680 --> 00:08:54,800
because the the concrete value the

201
00:08:54,800 --> 00:08:57,519
concrete probability for the heating of

202
00:08:57,519 --> 00:09:00,480
each of each restricted state can be

203
00:09:00,480 --> 00:09:02,240
theoretically derived

204
00:09:02,240 --> 00:09:05,279
and we can verify by experiments

205
00:09:05,279 --> 00:09:07,120
so that we can well explain this

206
00:09:07,120 --> 00:09:09,040
phenomenon besides

207
00:09:09,040 --> 00:09:11,279
there is a area in your paper on the

208
00:09:11,279 --> 00:09:12,720
emerging states

209
00:09:12,720 --> 00:09:15,519
because each list can only be generated

210
00:09:15,519 --> 00:09:18,240
once and used once but i'm really sorry

211
00:09:18,240 --> 00:09:20,080
i'm i'm sorry i'm sorry i have to get

212
00:09:20,080 --> 00:09:21,440
you because i we don't have a lot of

213
00:09:21,440 --> 00:09:22,640
time for questions and i think this is

214
00:09:22,640 --> 00:09:25,040
another question is more like uh if you

215
00:09:25,040 --> 00:09:26,320
have something concrete please say it's

216
00:09:26,320 --> 00:09:27,600
quickly right because maybe there are

217
00:09:27,600 --> 00:09:29,519
some other questions in the room

218
00:09:29,519 --> 00:09:30,800
yeah yes

219
00:09:30,800 --> 00:09:32,480
my basic uh

220
00:09:32,480 --> 00:09:33,839
conclude is that

221
00:09:33,839 --> 00:09:37,120
i accept serum serum two i did not fully

222
00:09:37,120 --> 00:09:39,680
agree with patrick's uh talk under their

223
00:09:39,680 --> 00:09:41,120
paper

224
00:09:41,120 --> 00:09:43,279
okay

225
00:09:44,399 --> 00:09:46,000
i'm sorry i'm sorry we really don't have

226
00:09:46,000 --> 00:09:48,080
time okay are there any more questions

227
00:09:48,080 --> 00:09:49,120
in the room

228
00:09:49,120 --> 00:09:50,880
thank you

229
00:09:50,880 --> 00:09:54,080
any more questions in the room

230
00:09:55,360 --> 00:09:56,399
no

231
00:09:56,399 --> 00:09:59,760
yeah i have one question about

232
00:09:59,760 --> 00:10:01,360
so what do you think

233
00:10:01,360 --> 00:10:03,200
would be left in the original papers of

234
00:10:03,200 --> 00:10:05,040
interesting

235
00:10:05,040 --> 00:10:06,880
after taking out

236
00:10:06,880 --> 00:10:09,920
actually i'm not really sure because

237
00:10:09,920 --> 00:10:11,440
there are a lot of

238
00:10:11,440 --> 00:10:14,240
math in this paper and i don't see

239
00:10:14,240 --> 00:10:17,200
exactly what is wrong but the

240
00:10:17,200 --> 00:10:19,360
in my opinion the the world technique is

241
00:10:19,360 --> 00:10:21,519
wrong

242
00:10:21,519 --> 00:10:23,600
so there is there is nothing there

243
00:10:23,600 --> 00:10:27,680
experiments to verify it yeah

244
00:10:27,680 --> 00:10:29,680
okay

245
00:10:29,680 --> 00:10:33,839
actually i still do not agree yes

246
00:10:33,839 --> 00:10:35,279
okay

247
00:10:35,279 --> 00:10:38,480
thank you are there any more questions

248
00:10:38,480 --> 00:10:40,240
okay then we are going thanks a lot

249
00:10:40,240 --> 00:10:44,360
patrick let's take the trick again

250
00:10:58,800 --> 00:11:00,560
so the next talk

251
00:11:00,560 --> 00:11:01,680
christina

252
00:11:01,680 --> 00:11:04,479
sorry do you know where

253
00:11:05,519 --> 00:11:09,040
yeah yeah can you hear me

254
00:11:09,040 --> 00:11:10,160
yes

255
00:11:10,160 --> 00:11:11,839
okay yes

256
00:11:11,839 --> 00:11:15,560
i'll share my spring

257
00:11:26,480 --> 00:11:27,760
yes perfect

258
00:11:27,760 --> 00:11:29,200
so uh

259
00:11:29,200 --> 00:11:31,200
we are going to hear now the second talk

260
00:11:31,200 --> 00:11:33,440
of this session on automatic search of

261
00:11:33,440 --> 00:11:35,519
cubes for attacking stream cyphers and

262
00:11:35,519 --> 00:11:37,600
the talk is given by yao soon

263
00:11:37,600 --> 00:11:40,399
thank you you can start here

264
00:11:40,399 --> 00:11:42,800
hello everyone i'm yau

265
00:11:42,800 --> 00:11:44,800
it's my pleasure to give a presentation

266
00:11:44,800 --> 00:11:45,839
here

267
00:11:45,839 --> 00:11:48,560
my topic is automatic search for cubes

268
00:11:48,560 --> 00:11:51,600
for attacking stream cyphers

269
00:11:51,600 --> 00:11:53,360
and first let's see the main

270
00:11:53,360 --> 00:11:55,440
contribution of this paper

271
00:11:55,440 --> 00:11:57,839
our work is based on the cube attack

272
00:11:57,839 --> 00:11:59,839
which has become one of the most

273
00:11:59,839 --> 00:12:01,760
powerful tools of attacking stream

274
00:12:01,760 --> 00:12:03,040
ciphers

275
00:12:03,040 --> 00:12:05,040
by summing up the values of a boolean

276
00:12:05,040 --> 00:12:08,160
function over a cube we can obtain the

277
00:12:08,160 --> 00:12:10,720
silver quality of the cube and the

278
00:12:10,720 --> 00:12:13,040
active value of the silver party can be

279
00:12:13,040 --> 00:12:15,440
obtained in the online phase

280
00:12:15,440 --> 00:12:17,920
and with the equation we can filter out

281
00:12:17,920 --> 00:12:20,079
many illegal keys

282
00:12:20,079 --> 00:12:22,959
then how to generate the silver party

283
00:12:22,959 --> 00:12:25,200
has become the first problem to be sold

284
00:12:25,200 --> 00:12:27,040
in the cube attack

285
00:12:27,040 --> 00:12:29,839
and this and this problem was finally

286
00:12:29,839 --> 00:12:32,320
solved by the three sub-saharan division

287
00:12:32,320 --> 00:12:34,880
property without unknown subsides

288
00:12:34,880 --> 00:12:36,320
so

289
00:12:36,320 --> 00:12:39,040
so what what is the next problem to be

290
00:12:39,040 --> 00:12:41,600
solved in the cube attack

291
00:12:41,600 --> 00:12:44,959
and in my opinion i think it is

292
00:12:44,959 --> 00:12:47,760
it is how to find good cubes on silver

293
00:12:47,760 --> 00:12:49,360
polish

294
00:12:49,360 --> 00:12:51,920
clearly linear superpower is not perfect

295
00:12:51,920 --> 00:12:54,240
but they are harder to send

296
00:12:54,240 --> 00:12:56,560
so we turned to search for a special

297
00:12:56,560 --> 00:12:59,360
kind of non-linear superpoly called

298
00:12:59,360 --> 00:13:02,639
super police which balance the variables

299
00:13:02,639 --> 00:13:04,959
and in this form

300
00:13:04,959 --> 00:13:06,880
and i believe there are lots of

301
00:13:06,880 --> 00:13:09,440
superpolis in this form so they are not

302
00:13:09,440 --> 00:13:11,519
hard to find

303
00:13:11,519 --> 00:13:14,560
and we call the cubes whose superpolis

304
00:13:14,560 --> 00:13:17,120
have balanced the variables as valuable

305
00:13:17,120 --> 00:13:18,320
cubes

306
00:13:18,320 --> 00:13:19,120
so

307
00:13:19,120 --> 00:13:21,440
our contribution is that we propose a

308
00:13:21,440 --> 00:13:24,000
new heuristic algorithm to search for

309
00:13:24,000 --> 00:13:25,440
valuable codes

310
00:13:25,440 --> 00:13:28,160
and as applications we improve the

311
00:13:28,160 --> 00:13:31,040
theoretical attack against the premium

312
00:13:31,040 --> 00:13:32,800
and equilibrium when this paper was

313
00:13:32,800 --> 00:13:35,120
submitted in the last year

314
00:13:35,120 --> 00:13:36,959
and we also improved the practical

315
00:13:36,959 --> 00:13:39,040
attack against the premium

316
00:13:39,040 --> 00:13:43,519
and which is still the best result now

317
00:13:44,320 --> 00:13:46,240
next let's see the search algorithm

318
00:13:46,240 --> 00:13:48,720
briefly

319
00:13:48,720 --> 00:13:50,720
to search for the silver parties with

320
00:13:50,720 --> 00:13:53,760
balance the variables in this form

321
00:13:53,760 --> 00:13:56,160
we have got four ideas

322
00:13:56,160 --> 00:13:57,120
and

323
00:13:57,120 --> 00:14:00,000
the last one finally worked that is we

324
00:14:00,000 --> 00:14:03,680
treat a set of cubes together

325
00:14:03,680 --> 00:14:05,839
such that the common computation can be

326
00:14:05,839 --> 00:14:06,959
shared

327
00:14:06,959 --> 00:14:09,839
and we also deal with a specific secret

328
00:14:09,839 --> 00:14:12,399
variable instead of recovering the whole

329
00:14:12,399 --> 00:14:13,680
superpoly

330
00:14:13,680 --> 00:14:17,279
and we also reject hopeless cubs family

331
00:14:17,279 --> 00:14:18,800
instead of finishing all the

332
00:14:18,800 --> 00:14:20,639
computations

333
00:14:20,639 --> 00:14:23,839
and to reject hopeless cook's family we

334
00:14:23,839 --> 00:14:26,720
need the 6 subset method the divide and

335
00:14:26,720 --> 00:14:30,160
conquer strategy and the 2 observations

336
00:14:30,160 --> 00:14:33,760
and then we get the search algorithm

337
00:14:33,760 --> 00:14:36,000
in the first step we prepare a set of

338
00:14:36,000 --> 00:14:38,240
candidate cubes and choose a secret

339
00:14:38,240 --> 00:14:39,839
variable

340
00:14:39,839 --> 00:14:42,800
and we divide the whole system into some

341
00:14:42,800 --> 00:14:45,680
several subsystems by the divide and

342
00:14:45,680 --> 00:14:48,320
conquer strategy and we saw each

343
00:14:48,320 --> 00:14:50,240
subsystem

344
00:14:50,240 --> 00:14:52,079
one by one

345
00:14:52,079 --> 00:14:54,480
and during the computation we removed

346
00:14:54,480 --> 00:14:56,160
the hopeless curves

347
00:14:56,160 --> 00:14:58,399
in the first case and

348
00:14:58,399 --> 00:15:00,639
we record the number of the cubes in the

349
00:15:00,639 --> 00:15:03,360
second case and in the left

350
00:15:03,360 --> 00:15:06,480
if there is a if there exists some cube

351
00:15:06,480 --> 00:15:08,959
such that the recorded number is odd

352
00:15:08,959 --> 00:15:11,839
then we will get a valuable cube and

353
00:15:11,839 --> 00:15:14,800
this is the algorithm

354
00:15:14,800 --> 00:15:18,160
at last let's see some applications

355
00:15:18,160 --> 00:15:20,800
to provide a theoretical attack against

356
00:15:20,800 --> 00:15:22,800
the wrong reduced equilibrium

357
00:15:22,800 --> 00:15:26,000
it is services to find one valuable cube

358
00:15:26,000 --> 00:15:30,160
with dimension no bigger than 78

359
00:15:30,160 --> 00:15:32,639
and we have found many valuable cubes

360
00:15:32,639 --> 00:15:34,480
for 400

361
00:15:34,480 --> 00:15:36,600
sorry 840

362
00:15:36,600 --> 00:15:40,399
841 842 round trivium

363
00:15:40,399 --> 00:15:43,480
and we also found two valuable cubes for

364
00:15:43,480 --> 00:15:46,399
843 round trivial which leads to a

365
00:15:46,399 --> 00:15:48,639
theoretical attack

366
00:15:48,639 --> 00:15:50,720
and we also propose a practical attack

367
00:15:50,720 --> 00:15:52,880
against the trivium by sending more

368
00:15:52,880 --> 00:15:56,399
superpolis with balanced variables

369
00:15:56,399 --> 00:16:00,240
and initially we got about 200 valuable

370
00:16:00,240 --> 00:16:01,279
cubes

371
00:16:01,279 --> 00:16:03,279
and we used the guess and the

372
00:16:03,279 --> 00:16:06,079
determining method to solve the system

373
00:16:06,079 --> 00:16:08,160
and all the computation can be done

374
00:16:08,160 --> 00:16:10,399
practically

375
00:16:10,399 --> 00:16:12,320
here are the details about the valuable

376
00:16:12,320 --> 00:16:14,000
cubes and

377
00:16:14,000 --> 00:16:15,600
okay that's all thanks for your

378
00:16:15,600 --> 00:16:18,079
attention

379
00:16:21,279 --> 00:16:23,199
hello thank you very much are there any

380
00:16:23,199 --> 00:16:24,480
questions for

381
00:16:24,480 --> 00:16:27,040
for this talk

382
00:16:27,040 --> 00:16:30,000
in the room or online

383
00:16:32,320 --> 00:16:35,040
no questions

384
00:16:35,120 --> 00:16:36,880
okay so let's thank the speaker again

385
00:16:36,880 --> 00:16:40,680
then thank you very much

386
00:16:54,000 --> 00:16:57,000
um

387
00:17:09,599 --> 00:17:12,599
yes

388
00:17:17,770 --> 00:17:21,010
[Music]

389
00:17:22,480 --> 00:17:25,480
text

390
00:17:38,000 --> 00:17:38,830
this

391
00:17:38,830 --> 00:17:41,760
[Music]

392
00:17:41,760 --> 00:17:44,480
i don't know why it doesn't look just

393
00:17:44,480 --> 00:17:46,730
here

394
00:17:46,730 --> 00:17:48,160
[Music]

395
00:17:48,160 --> 00:17:49,840
so welcome to the third talk of this

396
00:17:49,840 --> 00:17:52,400
session that it's atomizer ice stream

397
00:17:52,400 --> 00:17:54,240
cipher with double key filter it's a

398
00:17:54,240 --> 00:17:56,799
work by subway banik and dia caffordio

399
00:17:56,799 --> 00:18:00,480
takanori sove funkangliu

400
00:18:06,400 --> 00:18:07,950
thanks for the introduction

401
00:18:07,950 --> 00:18:11,119
[Music]

402
00:18:11,360 --> 00:18:13,360
so i'll be talking about this stream

403
00:18:13,360 --> 00:18:15,440
cipher atom that employs a double key

404
00:18:15,440 --> 00:18:16,799
filter and

405
00:18:16,799 --> 00:18:19,039
also has a short internal state

406
00:18:19,039 --> 00:18:21,679
uh the question to consider over here is

407
00:18:21,679 --> 00:18:22,720
what

408
00:18:22,720 --> 00:18:24,480
a stream cipher with a short internal

409
00:18:24,480 --> 00:18:27,440
state is and how is it different from

410
00:18:27,440 --> 00:18:28,960
himself with the longer internal stage

411
00:18:28,960 --> 00:18:30,799
for example

412
00:18:30,799 --> 00:18:34,160
so in 2001 uh and shamir published their

413
00:18:34,160 --> 00:18:36,559
seminal work on time memory trade-off

414
00:18:36,559 --> 00:18:37,760
attacks

415
00:18:37,760 --> 00:18:39,120
and one of the main conclusions of the

416
00:18:39,120 --> 00:18:41,440
paper was that in order for a stream

417
00:18:41,440 --> 00:18:44,400
cipher to be secure against dmd attacks

418
00:18:44,400 --> 00:18:46,480
the size of its stating bits must be at

419
00:18:46,480 --> 00:18:48,799
least one and a half to two times

420
00:18:48,799 --> 00:18:50,799
uh the size of secret key in bits and

421
00:18:50,799 --> 00:18:52,400
this was considered to be a rule of the

422
00:18:52,400 --> 00:18:54,160
thumb till about

423
00:18:54,160 --> 00:18:56,720
2015 when uh amneck and mikhailev

424
00:18:56,720 --> 00:18:58,799
proposed the stream cypher sprout it was

425
00:18:58,799 --> 00:18:59,840
a

426
00:18:59,840 --> 00:19:01,200
state size was actually equal to the

427
00:19:01,200 --> 00:19:02,640
size of secret key

428
00:19:02,640 --> 00:19:04,240
and in spite of that it it seemed to be

429
00:19:04,240 --> 00:19:06,480
immune against uh the genetic tmg

430
00:19:06,480 --> 00:19:07,840
attacks that

431
00:19:07,840 --> 00:19:11,120
merukov and shamir has proposed

432
00:19:11,120 --> 00:19:13,280
uh now we all know that a stream cipher

433
00:19:13,280 --> 00:19:16,240
is basically a finite state machine

434
00:19:16,240 --> 00:19:18,320
so we have these func this function f

435
00:19:18,320 --> 00:19:20,080
that maps uh

436
00:19:20,080 --> 00:19:22,080
a state to the key stream vectors of

437
00:19:22,080 --> 00:19:23,440
equal length

438
00:19:23,440 --> 00:19:24,960
now cryptanalysis in this instance

439
00:19:24,960 --> 00:19:26,559
reduces to

440
00:19:26,559 --> 00:19:28,640
inverting this one-way function over any

441
00:19:28,640 --> 00:19:30,559
of these points ci

442
00:19:30,559 --> 00:19:33,679
that the attacker is access to

443
00:19:33,679 --> 00:19:36,720
uh now the algorithm that we recovered

444
00:19:36,720 --> 00:19:39,360
smear had proposed had a trade-off curve

445
00:19:39,360 --> 00:19:41,360
of the form

446
00:19:41,360 --> 00:19:43,200
tm square d square equal to n square

447
00:19:43,200 --> 00:19:44,559
with the limitation that t had to be

448
00:19:44,559 --> 00:19:46,160
larger than g square

449
00:19:46,160 --> 00:19:48,559
where t m and d are the time memory and

450
00:19:48,559 --> 00:19:50,960
data complex jl algorithm

451
00:19:50,960 --> 00:19:52,720
capsule n is uh

452
00:19:52,720 --> 00:19:54,799
the size of the internal state space and

453
00:19:54,799 --> 00:19:56,960
the offline complexity p is given by n

454
00:19:56,960 --> 00:19:59,280
over d

455
00:19:59,280 --> 00:20:01,760
and now a

456
00:20:01,919 --> 00:20:03,679
typical point on the street of curve

457
00:20:03,679 --> 00:20:05,200
because when both the online and the

458
00:20:05,200 --> 00:20:06,960
offline complexity

459
00:20:06,960 --> 00:20:09,360
are n to the power 2 over 3 which is

460
00:20:09,360 --> 00:20:11,360
less than n

461
00:20:11,360 --> 00:20:13,440
now if capsule k is the size of the key

462
00:20:13,440 --> 00:20:16,080
space and capital n equals to capital k

463
00:20:16,080 --> 00:20:17,039
which is

464
00:20:17,039 --> 00:20:19,039
the size of the internal state is equal

465
00:20:19,039 --> 00:20:20,799
to the size of the key then this of

466
00:20:20,799 --> 00:20:22,240
course is a valid attack because both

467
00:20:22,240 --> 00:20:24,000
the online and the offline complexities

468
00:20:24,000 --> 00:20:25,200
are less than k

469
00:20:25,200 --> 00:20:26,960
which we understand to be uh the

470
00:20:26,960 --> 00:20:28,960
complexity of clustered search

471
00:20:28,960 --> 00:20:30,720
so the rule of the thumb

472
00:20:30,720 --> 00:20:34,480
was to set n equal to k square

473
00:20:34,480 --> 00:20:36,080
this sphere is not possible to find a

474
00:20:36,080 --> 00:20:38,000
point on this curve where

475
00:20:38,000 --> 00:20:39,280
both the online and the offline

476
00:20:39,280 --> 00:20:42,799
complexities would be less than k

477
00:20:45,200 --> 00:20:47,440
so the main idea behind sprout and other

478
00:20:47,440 --> 00:20:48,720
such

479
00:20:48,720 --> 00:20:50,240
stream ciphers with short internal

480
00:20:50,240 --> 00:20:51,600
states was that

481
00:20:51,600 --> 00:20:54,480
the update function would be such

482
00:20:54,480 --> 00:20:56,240
that it would require an additional

483
00:20:56,240 --> 00:20:57,760
information from the secret key to

484
00:20:57,760 --> 00:21:00,159
update its update the internal state

485
00:21:00,159 --> 00:21:02,400
and as such it's not possible to form

486
00:21:02,400 --> 00:21:04,159
any sort of map between the state and

487
00:21:04,159 --> 00:21:05,840
the key stream that does not

488
00:21:05,840 --> 00:21:08,159
additionally require the key as input

489
00:21:08,159 --> 00:21:10,400
and so effectively uh the state size of

490
00:21:10,400 --> 00:21:13,120
sprout is 160 bits whereas

491
00:21:13,120 --> 00:21:15,679
the key is only 80 bits and so the

492
00:21:15,679 --> 00:21:19,200
generic attack can be prevented

493
00:21:19,520 --> 00:21:21,760
uh now let me come to our construction

494
00:21:21,760 --> 00:21:22,720
uh

495
00:21:22,720 --> 00:21:23,919
so the people who are familiar with the

496
00:21:23,919 --> 00:21:26,000
grain structure would would recognize

497
00:21:26,000 --> 00:21:27,840
this kind of a structure

498
00:21:27,840 --> 00:21:29,360
this basic it's the basic grain

499
00:21:29,360 --> 00:21:31,520
structure and our main design philosophy

500
00:21:31,520 --> 00:21:33,600
has been to has been to

501
00:21:33,600 --> 00:21:35,520
react to attacks against sprout and

502
00:21:35,520 --> 00:21:37,200
similar other structures

503
00:21:37,200 --> 00:21:38,640
and the reason within ourselves how to

504
00:21:38,640 --> 00:21:40,799
best counteract uh

505
00:21:40,799 --> 00:21:42,480
uh to come absolutely come with

506
00:21:42,480 --> 00:21:45,440
solutions to counteract known attacks

507
00:21:45,440 --> 00:21:49,520
so our construction uses a 159 bit state

508
00:21:49,520 --> 00:21:51,600
and 128 bit key

509
00:21:51,600 --> 00:21:53,679
we have a non-linear register of size 90

510
00:21:53,679 --> 00:21:56,159
bits a linear register of 60 bits and

511
00:21:56,159 --> 00:21:57,919
a decimal up counter which counts up to

512
00:21:57,919 --> 00:22:00,080
511.

513
00:22:00,080 --> 00:22:01,760
and so initially the iv and some

514
00:22:01,760 --> 00:22:02,799
constants are loaded down to the

515
00:22:02,799 --> 00:22:04,799
register and the fsm is allowed to

516
00:22:04,799 --> 00:22:07,919
execute for 511 cycles without

517
00:22:07,919 --> 00:22:10,480
producing a key stream

518
00:22:10,480 --> 00:22:11,679
so after this what happens is

519
00:22:11,679 --> 00:22:13,120
interesting the

520
00:22:13,120 --> 00:22:14,799
two registers of 60 and nine bits

521
00:22:14,799 --> 00:22:16,400
combined to form

522
00:22:16,400 --> 00:22:18,320
single register of 69 bits which is

523
00:22:18,320 --> 00:22:19,840
updated linearly

524
00:22:19,840 --> 00:22:21,600
so the last seven bits of this register

525
00:22:21,600 --> 00:22:22,960
let's call this d

526
00:22:22,960 --> 00:22:25,600
determines which bit of the key is added

527
00:22:25,600 --> 00:22:28,000
to this nfsr update function

528
00:22:28,000 --> 00:22:30,320
and you also have a second key filter

529
00:22:30,320 --> 00:22:31,600
k of

530
00:22:31,600 --> 00:22:34,640
t mod 128 which is also added to the

531
00:22:34,640 --> 00:22:36,480
nfsr update and hence the name double

532
00:22:36,480 --> 00:22:38,960
key filter so in the paper we argue why

533
00:22:38,960 --> 00:22:40,640
both the key filters are necessary to

534
00:22:40,640 --> 00:22:43,280
guarantee security

535
00:22:43,280 --> 00:22:45,440
uh now the first k of d filter is

536
00:22:45,440 --> 00:22:47,679
necessary to prevent attacks

537
00:22:47,679 --> 00:22:49,840
the near collision attacks that was

538
00:22:49,840 --> 00:22:51,280
proposed against plantlet which had a

539
00:22:51,280 --> 00:22:53,679
similar structure

540
00:22:53,679 --> 00:22:55,600
an air collision attack basically uh

541
00:22:55,600 --> 00:22:57,440
leverages the fact that two internal

542
00:22:57,440 --> 00:22:58,960
states with very low hamming difference

543
00:22:58,960 --> 00:23:00,000
produce

544
00:23:00,000 --> 00:23:01,600
uh key streams that are heavily

545
00:23:01,600 --> 00:23:03,200
correlated and

546
00:23:03,200 --> 00:23:05,600
by using this the attacker can use

547
00:23:05,600 --> 00:23:06,880
algebraic techniques to recover the

548
00:23:06,880 --> 00:23:08,480
state of the key stream

549
00:23:08,480 --> 00:23:12,000
so in plant right it was proven that

550
00:23:12,240 --> 00:23:13,520
such internal states produce

551
00:23:13,520 --> 00:23:15,760
differential key stream that has

552
00:23:15,760 --> 00:23:18,000
zero or one in 45 positions with

553
00:23:18,000 --> 00:23:20,320
probability equals one

554
00:23:20,320 --> 00:23:22,080
but for atom this number is only 18

555
00:23:22,080 --> 00:23:23,360
because of the additional key filter

556
00:23:23,360 --> 00:23:26,000
which updates nfsr

557
00:23:26,000 --> 00:23:27,200
and so

558
00:23:27,200 --> 00:23:28,960
with this means that the attacker has to

559
00:23:28,960 --> 00:23:30,159
spend additional computational

560
00:23:30,159 --> 00:23:32,000
computational resources to ascertain

561
00:23:32,000 --> 00:23:33,280
whether

562
00:23:33,280 --> 00:23:35,200
given differential key stream

563
00:23:35,200 --> 00:23:37,200
is the result of low difference having

564
00:23:37,200 --> 00:23:39,600
weight having states or not

565
00:23:39,600 --> 00:23:41,919
and this kind of pushes the

566
00:23:41,919 --> 00:23:44,720
complexity of this attack to

567
00:23:44,720 --> 00:23:47,919
that required to solve 241

568
00:23:47,919 --> 00:23:50,400
polynomial equation systems of 5 degree

569
00:23:50,400 --> 00:23:52,640
and this is considerably higher than the

570
00:23:52,640 --> 00:23:56,000
complexity of brute force search

571
00:23:56,640 --> 00:23:58,640
now in order to explain why the second

572
00:23:58,640 --> 00:24:00,480
filter is necessary we

573
00:24:00,480 --> 00:24:02,640
proposed a simple time memory attack on

574
00:24:02,640 --> 00:24:05,039
a variant of our construction that does

575
00:24:05,039 --> 00:24:06,960
not use the second filter

576
00:24:06,960 --> 00:24:09,039
we show that a very simple time memory

577
00:24:09,039 --> 00:24:12,000
attack is possible

578
00:24:12,880 --> 00:24:14,799
because we can construct a map from

579
00:24:14,799 --> 00:24:16,640
state to key stream that only requires

580
00:24:16,640 --> 00:24:18,559
seven additional key bits

581
00:24:18,559 --> 00:24:20,559
and the algorithm that we

582
00:24:20,559 --> 00:24:22,880
propose in the paper has

583
00:24:22,880 --> 00:24:24,159
uh online

584
00:24:24,159 --> 00:24:27,279
time complexity of 273 minus t and

585
00:24:27,279 --> 00:24:30,240
offline complexity of 260 minus t where

586
00:24:30,240 --> 00:24:33,039
t is a parameter using the attack

587
00:24:33,039 --> 00:24:35,360
and we show that for t around 60 both of

588
00:24:35,360 --> 00:24:38,080
these complexities are much less than

589
00:24:38,080 --> 00:24:39,360
the complexity of exhaustive search and

590
00:24:39,360 --> 00:24:42,000
so the security arguments collapse

591
00:24:42,000 --> 00:24:43,760
so the second filter kind of prevents

592
00:24:43,760 --> 00:24:45,440
any map of this

593
00:24:45,440 --> 00:24:47,360
type from forming

594
00:24:47,360 --> 00:24:49,120
the if you use this additional filter we

595
00:24:49,120 --> 00:24:51,200
cannot make any

596
00:24:51,200 --> 00:24:52,240
map that

597
00:24:52,240 --> 00:24:53,760
that maps the state to the key stream

598
00:24:53,760 --> 00:24:55,520
with only a few additional key bits as

599
00:24:55,520 --> 00:24:57,840
input

600
00:24:58,720 --> 00:25:00,400
and in the paper we go through a bunch

601
00:25:00,400 --> 00:25:02,720
of other standard security arguments i'd

602
00:25:02,720 --> 00:25:04,400
invite the

603
00:25:04,400 --> 00:25:06,240
reader to go through for more details

604
00:25:06,240 --> 00:25:08,080
and uh and

605
00:25:08,080 --> 00:25:13,158
so here i conclude my paper thank you

606
00:25:16,320 --> 00:25:17,520
thank you very much

607
00:25:17,520 --> 00:25:18,960
are there any questions in the room or

608
00:25:18,960 --> 00:25:21,279
online

609
00:25:23,039 --> 00:25:26,200
no questions

610
00:25:28,080 --> 00:25:30,879
no questions no

611
00:25:31,760 --> 00:25:33,120
okay i guess that's

612
00:25:33,120 --> 00:25:34,640
what happens in the session after the

613
00:25:34,640 --> 00:25:37,360
banquet people are not really awake

614
00:25:37,360 --> 00:25:39,679
so then we are going uh with the next

615
00:25:39,679 --> 00:25:41,120
figure i just

616
00:25:41,120 --> 00:25:43,120
stopped sharing it

617
00:25:43,120 --> 00:25:45,440
okay thank you very much

618
00:25:45,440 --> 00:25:47,279
so you should be able to share it now

619
00:25:47,279 --> 00:25:48,880
thank you sorry thank you again to lady

620
00:25:48,880 --> 00:25:51,039
for

621
00:25:54,320 --> 00:25:57,039
okay okay so uh the next talk is

622
00:25:57,039 --> 00:25:59,360
resistance of no five against fast

623
00:25:59,360 --> 00:26:00,960
relation attacks

624
00:26:00,960 --> 00:26:03,440
uh in the works done by xinji xin gong

625
00:26:03,440 --> 00:26:05,200
and bin sang and ji shin is given the

626
00:26:05,200 --> 00:26:08,320
talk go please

627
00:26:08,480 --> 00:26:10,480
okay thanks for the introduction and

628
00:26:10,480 --> 00:26:12,000
thank you very much for listening to my

629
00:26:12,000 --> 00:26:15,120
talk i'm xi and i will talk about our

630
00:26:15,120 --> 00:26:17,440
people resistance of norway against

631
00:26:17,440 --> 00:26:20,640
faster correlation attacks

632
00:26:20,880 --> 00:26:24,120
i'm sorry

633
00:26:25,600 --> 00:26:27,918
sorry

634
00:26:32,799 --> 00:26:37,400
i'm sorry can i can i try again

635
00:26:38,080 --> 00:26:40,399
go ahead

636
00:26:45,039 --> 00:26:47,919
is it open now

637
00:26:47,919 --> 00:26:50,240
yes you cannot make it a bit bigger

638
00:26:50,240 --> 00:26:54,080
okay okay okay i'll continue smoothie is

639
00:26:54,080 --> 00:26:55,919
a new memory there's nothing in our skin

640
00:26:55,919 --> 00:26:58,480
cycles with two predecessors neutral and

641
00:26:58,480 --> 00:27:00,640
small cg whose linear attacks have been

642
00:27:00,640 --> 00:27:02,880
widely studied based on vitalized or

643
00:27:02,880 --> 00:27:05,520
alternate approximations

644
00:27:05,520 --> 00:27:07,279
the large unit approximation-based

645
00:27:07,279 --> 00:27:09,600
attacks give an impression that large

646
00:27:09,600 --> 00:27:12,640
unit approximations lead to larger sei

647
00:27:12,640 --> 00:27:16,240
and also to better linear attacks

648
00:27:16,799 --> 00:27:18,159
can you

649
00:27:18,159 --> 00:27:18,840
put

650
00:27:18,840 --> 00:27:22,799
your slides in full screen mode

651
00:27:22,799 --> 00:27:24,000
uh

652
00:27:24,000 --> 00:27:26,720
it is not full screen

653
00:27:26,720 --> 00:27:29,200
i'm sorry

654
00:27:29,200 --> 00:27:30,559
oh sorry i

655
00:27:30,559 --> 00:27:32,480
or share your whole screen instead of an

656
00:27:32,480 --> 00:27:35,450
application

657
00:27:35,450 --> 00:27:36,720
[Music]

658
00:27:36,720 --> 00:27:38,960
sorry

659
00:27:44,399 --> 00:27:46,320
you can try and share it and re-share

660
00:27:46,320 --> 00:27:50,000
again maybe for doing that right

661
00:27:53,360 --> 00:27:55,520
i'm sorry

662
00:27:55,520 --> 00:27:58,000
maybe something is wrong

663
00:27:58,000 --> 00:28:00,399
well stop sharing and share the whole

664
00:28:00,399 --> 00:28:03,840
stream again

665
00:28:09,200 --> 00:28:11,679
do you see the red button of the stop

666
00:28:11,679 --> 00:28:13,919
sharing screen

667
00:28:13,919 --> 00:28:17,840
on the top normally i think

668
00:28:18,480 --> 00:28:20,880
is it okay now perfect yes thank you

669
00:28:20,880 --> 00:28:21,950
very much yes

670
00:28:21,950 --> 00:28:25,009
[Music]

671
00:28:26,000 --> 00:28:29,120
snoopy is with lfs and fsm structure the

672
00:28:29,120 --> 00:28:31,840
fsm consists of three registers for the

673
00:28:31,840 --> 00:28:34,559
updating the operations like

674
00:28:34,559 --> 00:28:36,640
xor module addition as folks and the

675
00:28:36,640 --> 00:28:39,120
permutation are used

676
00:28:39,120 --> 00:28:41,039
to measure the strength of videoize and

677
00:28:41,039 --> 00:28:43,120
the largeness approximations the

678
00:28:43,120 --> 00:28:45,039
concepts of correlation and sei are

679
00:28:45,039 --> 00:28:46,399
often used

680
00:28:46,399 --> 00:28:49,600
especially for m equals 1 the icr is

681
00:28:49,600 --> 00:28:52,880
equal to its squared correlation

682
00:28:52,880 --> 00:28:55,120
for our first contribution we provide

683
00:28:55,120 --> 00:28:57,440
the constant time algorithms to compute

684
00:28:57,440 --> 00:28:59,120
the collisions of five types of

685
00:28:59,120 --> 00:29:01,440
functions which are used for the crypto

686
00:29:01,440 --> 00:29:03,760
analysis of snow v

687
00:29:03,760 --> 00:29:05,760
for computing the collisions for type 2

688
00:29:05,760 --> 00:29:08,480
and 3 we use existing algorithms from

689
00:29:08,480 --> 00:29:10,320
the following literatures

690
00:29:10,320 --> 00:29:12,320
and for computing the collisions for

691
00:29:12,320 --> 00:29:15,360
type 4 and 5 we propose new algorithms

692
00:29:15,360 --> 00:29:19,520
by exchanging the flashlight techniques

693
00:29:19,520 --> 00:29:21,279
the general idea of the slash lag

694
00:29:21,279 --> 00:29:24,080
technique is that first divide the

695
00:29:24,080 --> 00:29:26,559
nvidia values into d and beta values

696
00:29:26,559 --> 00:29:28,720
according to the specific structure of

697
00:29:28,720 --> 00:29:30,320
the underlying function

698
00:29:30,320 --> 00:29:32,320
and then pre-compute the connection

699
00:29:32,320 --> 00:29:35,120
matrices independent of the input and

700
00:29:35,120 --> 00:29:36,720
output masses

701
00:29:36,720 --> 00:29:39,120
and finally compute the correlation by

702
00:29:39,120 --> 00:29:41,520
doing some matrix multiplications which

703
00:29:41,520 --> 00:29:44,880
is a constant time procedure

704
00:29:44,880 --> 00:29:47,360
based on about we will analyze the

705
00:29:47,360 --> 00:29:49,520
bitwise of positions on

706
00:29:49,520 --> 00:29:51,760
some variants of snowy

707
00:29:51,760 --> 00:29:54,960
the first is snow facing zero where the

708
00:29:54,960 --> 00:29:57,520
permutation sigma used in the fsm

709
00:29:57,520 --> 00:30:01,760
updating is assumed to be identity

710
00:30:01,760 --> 00:30:04,080
we consider three consecutive question

711
00:30:04,080 --> 00:30:07,039
outputs to cancel out the contributions

712
00:30:07,039 --> 00:30:09,760
from the fsm and then obtain the

713
00:30:09,760 --> 00:30:12,000
vitalized opposition of the surrounding

714
00:30:12,000 --> 00:30:14,559
ssm where force have noises are

715
00:30:14,559 --> 00:30:17,039
introduced

716
00:30:17,919 --> 00:30:20,559
the collisions of force of noises can be

717
00:30:20,559 --> 00:30:23,120
computed as the products of the

718
00:30:23,120 --> 00:30:25,039
collisions of the introduced

719
00:30:25,039 --> 00:30:27,279
functions which are all constant time

720
00:30:27,279 --> 00:30:29,600
procedures

721
00:30:29,600 --> 00:30:31,840
with these computations we found our

722
00:30:31,840 --> 00:30:34,799
best results with the sei 2 to the power

723
00:30:34,799 --> 00:30:37,600
of minus 37.3

724
00:30:37,600 --> 00:30:39,919
compared to the designer's evaluation

725
00:30:39,919 --> 00:30:41,520
which used the bachelor's of

726
00:30:41,520 --> 00:30:44,559
propositions with the sci 2 to the power

727
00:30:44,559 --> 00:30:45,279
of

728
00:30:45,279 --> 00:30:49,279
minus 58.7 to monitor attack we improved

729
00:30:49,279 --> 00:30:51,600
the fast correlation attack gradient by

730
00:30:51,600 --> 00:30:55,520
using our vitalized approximations

731
00:30:55,520 --> 00:30:58,559
next for a new closer variance of snow v

732
00:30:58,559 --> 00:31:00,720
where the permutation sigma is used as a

733
00:31:00,720 --> 00:31:01,840
proposed

734
00:31:01,840 --> 00:31:04,720
and only one 32-bit adder used for

735
00:31:04,720 --> 00:31:07,519
updating the r1 register is replaced by

736
00:31:07,519 --> 00:31:10,080
8-bit adder

737
00:31:10,080 --> 00:31:12,640
as before we construct the bit-wise of

738
00:31:12,640 --> 00:31:14,159
approximations

739
00:31:14,159 --> 00:31:16,960
and introduce the four-sub-noises

740
00:31:16,960 --> 00:31:21,039
among which the last two noises are new

741
00:31:21,039 --> 00:31:25,279
where the permutation sigma is involved

742
00:31:25,360 --> 00:31:27,519
unfortunately their correlations can

743
00:31:27,519 --> 00:31:30,000
both be obtained with constant time

744
00:31:30,000 --> 00:31:33,000
complexities

745
00:31:33,039 --> 00:31:35,279
based on the above we open our best

746
00:31:35,279 --> 00:31:38,399
approximations and also propose a faster

747
00:31:38,399 --> 00:31:40,320
correlation attack which is less

748
00:31:40,320 --> 00:31:44,240
efficient than the brutal force attack

749
00:31:44,240 --> 00:31:46,559
last for another variant of snowflake

750
00:31:46,559 --> 00:31:48,720
where both two 32-bit adders are

751
00:31:48,720 --> 00:31:51,279
replaced by 8-bit errors and whose

752
00:31:51,279 --> 00:31:53,360
bitewise approximations have been

753
00:31:53,360 --> 00:31:56,159
studied in the design document

754
00:31:56,159 --> 00:31:58,080
our contribution here is that we

755
00:31:58,080 --> 00:32:00,720
construct bit-wise approximations with

756
00:32:00,720 --> 00:32:03,760
the sei higher than that of the bitewise

757
00:32:03,760 --> 00:32:06,640
ones given in the design document

758
00:32:06,640 --> 00:32:08,640
and the first correlation attack can be

759
00:32:08,640 --> 00:32:11,760
improved accordingly

760
00:32:11,760 --> 00:32:14,960
to sum up also needs of our attacks 13

761
00:32:14,960 --> 00:32:17,519
the security of snow v they feel a gap

762
00:32:17,519 --> 00:32:19,840
in the in the research on snowy by

763
00:32:19,840 --> 00:32:22,559
considering vitalize or proxy missions

764
00:32:22,559 --> 00:32:25,760
that have not been studied previously

765
00:32:25,760 --> 00:32:27,840
that's all of my presentation thanks for

766
00:32:27,840 --> 00:32:30,559
your attention

767
00:32:34,720 --> 00:32:36,799
thank you very much listen for the talk

768
00:32:36,799 --> 00:32:38,480
are there any questions in the room or

769
00:32:38,480 --> 00:32:41,480
online

770
00:32:43,440 --> 00:32:44,720
no questions

771
00:32:44,720 --> 00:32:48,159
there are no questions online either

772
00:32:51,279 --> 00:32:53,600
okay

773
00:32:53,679 --> 00:32:56,240
okay thanks so let's thank yeshin again

774
00:32:56,240 --> 00:32:58,960
thank you very much

775
00:33:07,279 --> 00:33:08,799
the next talk is also going to be given

776
00:33:08,799 --> 00:33:10,640
by yeshi

777
00:33:10,640 --> 00:33:12,799
is it okay now

778
00:33:12,799 --> 00:33:16,879
it's not a big it's small as before

779
00:33:21,760 --> 00:33:24,919
no it's

780
00:33:26,480 --> 00:33:28,640
yeah i think it's very good thank you so

781
00:33:28,640 --> 00:33:30,960
the next talk is comparing large units

782
00:33:30,960 --> 00:33:32,559
and bitwise linear approximations of

783
00:33:32,559 --> 00:33:36,159
snow 2 and snow 3g and related attacks

784
00:33:36,159 --> 00:33:38,080
also by ishin gong and bin zhang and

785
00:33:38,080 --> 00:33:40,080
eugene is also given the top please go

786
00:33:40,080 --> 00:33:41,679
virgin

787
00:33:41,679 --> 00:33:43,919
okay thanks again

788
00:33:43,919 --> 00:33:45,760
now i will talk about our people

789
00:33:45,760 --> 00:33:47,600
comparing large unit and the bitwise

790
00:33:47,600 --> 00:33:49,840
linear appropriations of snow 2 and

791
00:33:49,840 --> 00:33:52,880
small 3g

792
00:33:52,880 --> 00:33:55,919
i'm sorry it's

793
00:33:58,080 --> 00:33:59,760
as introduced in the previous

794
00:33:59,760 --> 00:34:01,840
presentation bit of ice and large unit

795
00:34:01,840 --> 00:34:04,559
approximations have been used to mount

796
00:34:04,559 --> 00:34:07,600
linear attacks on snow to anastomosis

797
00:34:07,600 --> 00:34:10,000
so the question is how do the large unit

798
00:34:10,000 --> 00:34:12,239
and beta wise approximations work was

799
00:34:12,239 --> 00:34:15,439
known to understand the g

800
00:34:15,599 --> 00:34:18,320
first we reconsider the relationship

801
00:34:18,320 --> 00:34:20,000
between latinate and the bitterwise

802
00:34:20,000 --> 00:34:21,440
approximations

803
00:34:21,440 --> 00:34:24,480
that is the alpha of the of a large unit

804
00:34:24,480 --> 00:34:26,960
of coefficient is the sum of the squares

805
00:34:26,960 --> 00:34:29,440
of all nonverbalized ones that are

806
00:34:29,440 --> 00:34:32,079
included in the large united one

807
00:34:32,079 --> 00:34:34,399
which shows that approximations on large

808
00:34:34,399 --> 00:34:36,800
unit alphabets have advantages of all

809
00:34:36,800 --> 00:34:38,800
the smaller units and the bitwise ones

810
00:34:38,800 --> 00:34:40,639
in linear attacks

811
00:34:40,639 --> 00:34:42,480
then we compare the bitewise and the

812
00:34:42,480 --> 00:34:46,000
bitwise approximations for the fsm of

813
00:34:46,000 --> 00:34:49,918
sno2 and small3g respectively

814
00:34:49,918 --> 00:34:52,800
the first is on snow 2.

815
00:34:52,800 --> 00:34:55,440
snow 2 is with the lfsr and fsm

816
00:34:55,440 --> 00:34:56,480
structure

817
00:34:56,480 --> 00:34:59,440
the fsm consists of two resistors with

818
00:34:59,440 --> 00:35:02,079
the fsm updating and extreme output as

819
00:35:02,079 --> 00:35:04,400
shown

820
00:35:04,480 --> 00:35:07,359
for the bitwise approximations tipo1

821
00:35:07,359 --> 00:35:09,599
shows the previous best three bitwise

822
00:35:09,599 --> 00:35:14,480
masks for two round fsm on snow 2.

823
00:35:14,800 --> 00:35:17,520
for the bitewise approximations with the

824
00:35:17,520 --> 00:35:20,079
method in the literature

825
00:35:20,079 --> 00:35:23,200
the exam 15 the bytewise approximations

826
00:35:23,200 --> 00:35:25,680
of true of two-round fsm take the

827
00:35:25,680 --> 00:35:27,040
following form

828
00:35:27,040 --> 00:35:29,359
to obtain the seo of the bytewise

829
00:35:29,359 --> 00:35:32,320
approximation on any given tn mask we

830
00:35:32,320 --> 00:35:36,320
need to compute the sei of two subnoses

831
00:35:36,320 --> 00:35:38,480
we have provided two slightly improved

832
00:35:38,480 --> 00:35:41,359
algorithms for these computations and

833
00:35:41,359 --> 00:35:43,839
found two more approximations having

834
00:35:43,839 --> 00:35:46,720
larger sei

835
00:35:47,200 --> 00:35:49,599
then we compare the best of the bitewise

836
00:35:49,599 --> 00:35:51,760
and the bitterwise approximations whose

837
00:35:51,760 --> 00:35:53,760
corresponding maskers are listed in

838
00:35:53,760 --> 00:35:56,640
table 1 and 2 respectively

839
00:35:56,640 --> 00:35:59,280
for each bitewise

840
00:35:59,280 --> 00:36:00,960
for each bitewise and the bitterwise

841
00:36:00,960 --> 00:36:03,440
linear mask with the same number we have

842
00:36:03,440 --> 00:36:06,320
verified that the first coordinate of

843
00:36:06,320 --> 00:36:08,640
the corresponding bitewise approximation

844
00:36:08,640 --> 00:36:11,920
is exactly the bitwise approximation and

845
00:36:11,920 --> 00:36:14,079
they have the same sei

846
00:36:14,079 --> 00:36:15,119
that is

847
00:36:15,119 --> 00:36:17,040
that is each of these byways

848
00:36:17,040 --> 00:36:20,000
approximations is dominated by a single

849
00:36:20,000 --> 00:36:22,000
beta wise approximation

850
00:36:22,000 --> 00:36:24,000
we know that correlation attack can be

851
00:36:24,000 --> 00:36:26,400
more efficiently implemented by using

852
00:36:26,400 --> 00:36:28,560
betawise approximations

853
00:36:28,560 --> 00:36:30,720
improvement over the bitewise attack is

854
00:36:30,720 --> 00:36:33,839
natural for snow too

855
00:36:33,920 --> 00:36:36,560
next we compare the bikewise and bitwise

856
00:36:36,560 --> 00:36:39,599
approximations of snow 3g

857
00:36:39,599 --> 00:36:42,320
snow cg preserves all features of snow 2

858
00:36:42,320 --> 00:36:47,440
but add a third register to the fsm

859
00:36:47,760 --> 00:36:50,000
for the bitwise approximations we

860
00:36:50,000 --> 00:36:53,359
consider the consecutive histograms

861
00:36:53,359 --> 00:36:55,040
to cancel out the non-linear

862
00:36:55,040 --> 00:36:57,200
contributions using the linear marketing

863
00:36:57,200 --> 00:36:58,160
method

864
00:36:58,160 --> 00:37:00,079
and finally obtain the bitarized

865
00:37:00,079 --> 00:37:03,599
approximation of the surround fsm

866
00:37:03,599 --> 00:37:06,160
for computing the collisions we use the

867
00:37:06,160 --> 00:37:07,680
constant time algorithms in the

868
00:37:07,680 --> 00:37:09,440
following literatures

869
00:37:09,440 --> 00:37:12,240
our best of three mask tuples are listed

870
00:37:12,240 --> 00:37:15,919
in this table in table three

871
00:37:16,320 --> 00:37:17,680
for building the batteries

872
00:37:17,680 --> 00:37:20,079
approximations the general procedure is

873
00:37:20,079 --> 00:37:22,000
similar with data for building the

874
00:37:22,000 --> 00:37:23,520
bitwise ones

875
00:37:23,520 --> 00:37:26,240
and the aci competitions are mostly

876
00:37:26,240 --> 00:37:28,960
similar with that in snow toolkits

877
00:37:28,960 --> 00:37:31,440
tipo4 shows the best three bitewise

878
00:37:31,440 --> 00:37:33,520
muscle tubers we obtained for surround

879
00:37:33,520 --> 00:37:36,720
fsm of small 3g

880
00:37:36,720 --> 00:37:38,320
then we compare the byte-wise and

881
00:37:38,320 --> 00:37:40,320
bitwise approximations

882
00:37:40,320 --> 00:37:43,359
similarly there are many cases that the

883
00:37:43,359 --> 00:37:46,160
the bytewise approximations is dominated

884
00:37:46,160 --> 00:37:48,720
by a single bitwise approximation and

885
00:37:48,720 --> 00:37:52,160
they have the same sei

886
00:37:52,160 --> 00:37:53,920
based on the newly found veterans

887
00:37:53,920 --> 00:37:56,160
approximations we improve the fast

888
00:37:56,160 --> 00:37:58,480
coalition attack on snow 3g with all the

889
00:37:58,480 --> 00:38:00,880
complexities are bonded by 2 to the

890
00:38:00,880 --> 00:38:03,200
power of 174

891
00:38:03,200 --> 00:38:04,400
while it is

892
00:38:04,400 --> 00:38:06,000
2 to the power of

893
00:38:06,000 --> 00:38:07,320
76

894
00:38:07,320 --> 00:38:12,079
176 in the vitalized vista attack

895
00:38:12,079 --> 00:38:14,240
to sum up also larger nature

896
00:38:14,240 --> 00:38:16,960
approximations might have a larger scr

897
00:38:16,960 --> 00:38:19,040
than all the smaller influence

898
00:38:19,040 --> 00:38:21,359
first neutral and small 3g however there

899
00:38:21,359 --> 00:38:23,920
are many cases that the sei of the whole

900
00:38:23,920 --> 00:38:25,520
thing is equal to the squared

901
00:38:25,520 --> 00:38:27,680
correlation of the dominating single

902
00:38:27,680 --> 00:38:29,520
bitwise approximation

903
00:38:29,520 --> 00:38:31,760
and thus the linear attack can be

904
00:38:31,760 --> 00:38:33,920
included over large numerator

905
00:38:33,920 --> 00:38:36,880
approximation based attack

906
00:38:36,880 --> 00:38:38,880
that's all of my presentation thanks for

907
00:38:38,880 --> 00:38:41,520
your attention

908
00:38:42,320 --> 00:38:44,800
thank you

909
00:38:45,440 --> 00:38:47,359
thank you very much machine so are there

910
00:38:47,359 --> 00:38:50,078
any questions

911
00:38:51,599 --> 00:38:53,599
no questions in the room

912
00:38:53,599 --> 00:38:55,760
or online

913
00:38:55,760 --> 00:38:57,359
okay

914
00:38:57,359 --> 00:39:00,000
yes

915
00:39:00,000 --> 00:39:01,760
so stefan what did you say

916
00:39:01,760 --> 00:39:03,599
no questions i would answer

917
00:39:03,599 --> 00:39:05,040
okay

918
00:39:05,040 --> 00:39:06,560
okay well thank you very much again

919
00:39:06,560 --> 00:39:10,440
eugene thanks a lot

920
00:39:23,280 --> 00:39:25,119
and now we are going to start the last

921
00:39:25,119 --> 00:39:27,200
talk of this session of this stream

922
00:39:27,200 --> 00:39:28,480
cipher session

923
00:39:28,480 --> 00:39:30,400
which is improved gas and death of mine

924
00:39:30,400 --> 00:39:32,960
and distinguishing attacks on snow v

925
00:39:32,960 --> 00:39:35,040
and yin yang thomas johansson and

926
00:39:35,040 --> 00:39:37,359
alexander maximov are the authors of

927
00:39:37,359 --> 00:39:38,880
this work and yin yang will give the

928
00:39:38,880 --> 00:39:41,119
talk please start

929
00:39:41,119 --> 00:39:43,599
it's not full screen yet can you

930
00:39:43,599 --> 00:39:46,400
uh uh is it okay now yes it's perfect

931
00:39:46,400 --> 00:39:48,720
thank you very much okay thank you uh

932
00:39:48,720 --> 00:39:50,160
thank you for the introduction hello

933
00:39:50,160 --> 00:39:52,640
everyone uh so my name is jin yang so i

934
00:39:52,640 --> 00:39:54,720
will give a short introduction to our

935
00:39:54,720 --> 00:39:56,720
work improved gas and determine and the

936
00:39:56,720 --> 00:40:00,320
distinguishing attacks on snowy

937
00:40:00,320 --> 00:40:01,359
so

938
00:40:01,359 --> 00:40:03,599
i would like to start with the

939
00:40:03,599 --> 00:40:06,160
confidentiality and integrity protection

940
00:40:06,160 --> 00:40:08,720
of the air in senior networks

941
00:40:08,720 --> 00:40:10,640
which protects the data transmission

942
00:40:10,640 --> 00:40:12,880
between users and base stations by

943
00:40:12,880 --> 00:40:14,800
encrypting an authentication

944
00:40:14,800 --> 00:40:17,520
authenticating the data

945
00:40:17,520 --> 00:40:19,839
so in 4g there are three such algorithms

946
00:40:19,839 --> 00:40:21,680
which are syno3g

947
00:40:21,680 --> 00:40:24,920
and aes so they are all used to provide

948
00:40:24,920 --> 00:40:28,079
128 bit security level and are usually

949
00:40:28,079 --> 00:40:30,800
implemented in hardware to provide high

950
00:40:30,800 --> 00:40:32,880
speed

951
00:40:32,880 --> 00:40:34,880
so now when we come to 5g there are some

952
00:40:34,880 --> 00:40:37,520
new requirements on this confidentiality

953
00:40:37,520 --> 00:40:40,240
and integrity protection algorithms for

954
00:40:40,240 --> 00:40:43,119
example they should be able to provide a

955
00:40:43,119 --> 00:40:45,839
speed of at least 20 gigabits per second

956
00:40:45,839 --> 00:40:47,119
in software

957
00:40:47,119 --> 00:40:50,520
and and besides they need to provide a

958
00:40:50,520 --> 00:40:53,839
256 256-bit security level to resist

959
00:40:53,839 --> 00:40:57,040
against content computing

960
00:40:57,040 --> 00:41:00,480
so based on such motivation in 2019 we

961
00:41:00,480 --> 00:41:03,200
designed a successor of sonos 3g cipher

962
00:41:03,200 --> 00:41:07,599
called snow b for fab use

963
00:41:07,599 --> 00:41:09,359
so the picture shows the structure of

964
00:41:09,359 --> 00:41:12,720
snowvey and xinshin just gave

965
00:41:12,720 --> 00:41:14,960
just to give the details of it so i will

966
00:41:14,960 --> 00:41:16,960
not go in too deep

967
00:41:16,960 --> 00:41:18,880
but here i would like to mention that

968
00:41:18,880 --> 00:41:21,520
the linear part consists of two adaptors

969
00:41:21,520 --> 00:41:23,839
and we can regard the internal state as

970
00:41:23,839 --> 00:41:24,640
four

971
00:41:24,640 --> 00:41:29,839
uh 128-bit registers unlike a0 a1 b0 and

972
00:41:29,839 --> 00:41:31,200
b1

973
00:41:31,200 --> 00:41:33,440
yeah

974
00:41:33,440 --> 00:41:36,880
so since proposed snowy has received

975
00:41:36,880 --> 00:41:39,119
some uh public equipment equip

976
00:41:39,119 --> 00:41:41,839
narcissist results as shown in the table

977
00:41:41,839 --> 00:41:44,480
so in our paper we proposed two guests

978
00:41:44,480 --> 00:41:47,359
and determined text with complexities

979
00:41:47,359 --> 00:41:49,680
below existing ones

980
00:41:49,680 --> 00:41:51,599
and we also perform the linear

981
00:41:51,599 --> 00:41:54,000
cryptanalysis of snow weight but

982
00:41:54,000 --> 00:41:57,920
of the reduced variant um so one

983
00:41:57,920 --> 00:42:00,000
advantage of our distinguishing attack

984
00:42:00,000 --> 00:42:00,880
is that

985
00:42:00,880 --> 00:42:05,760
our attack does not need lung pstreams

986
00:42:06,800 --> 00:42:08,720
so for our guest and determine attacks

987
00:42:08,720 --> 00:42:11,520
they are based on the observation that

988
00:42:11,520 --> 00:42:14,000
if a variable appears twice in an

989
00:42:14,000 --> 00:42:16,319
equation with non-linear operations in

990
00:42:16,319 --> 00:42:18,800
between then this variable may have zero

991
00:42:18,800 --> 00:42:21,040
solutions then for these guess and

992
00:42:21,040 --> 00:42:23,280
determine paths that involve this

993
00:42:23,280 --> 00:42:25,280
variable we can just truncate them

994
00:42:25,280 --> 00:42:29,119
instead of going deeper

995
00:42:29,200 --> 00:42:31,839
so in our paper first nov we found three

996
00:42:31,839 --> 00:42:35,760
such conflicting equations for a0 a1 and

997
00:42:35,760 --> 00:42:36,560
some

998
00:42:36,560 --> 00:42:38,800
another intermediate variable

999
00:42:38,800 --> 00:42:41,119
so as shown in the figure for the guess

1000
00:42:41,119 --> 00:42:42,880
and determining process for example at

1001
00:42:42,880 --> 00:42:45,119
this case under determining bus we found

1002
00:42:45,119 --> 00:42:47,680
that a0 does not have any solutions we

1003
00:42:47,680 --> 00:42:50,319
just don't need to need to go to a1 we

1004
00:42:50,319 --> 00:42:52,400
just chase bike and go to some other

1005
00:42:52,400 --> 00:42:54,319
guest and determine path

1006
00:42:54,319 --> 00:42:56,480
so in our paper we have carefully

1007
00:42:56,480 --> 00:42:58,800
designed the guessing strategies to

1008
00:42:58,800 --> 00:43:00,960
truncate as many guess and determine

1009
00:43:00,960 --> 00:43:02,079
paths

1010
00:43:02,079 --> 00:43:05,839
at an early stage as possible

1011
00:43:05,839 --> 00:43:08,880
so with this idea we were able to

1012
00:43:08,880 --> 00:43:10,560
reduce the complexity from 2 to the

1013
00:43:10,560 --> 00:43:16,160
power of 5 12 2 3 to the power of 3 78

1014
00:43:17,119 --> 00:43:19,119
so we also performed the linear

1015
00:43:19,119 --> 00:43:21,839
criminals of snowy but we considered a

1016
00:43:21,839 --> 00:43:24,480
simplified version in which the 30-bit

1017
00:43:24,480 --> 00:43:28,800
adders are replaced by the xor operation

1018
00:43:28,800 --> 00:43:33,040
so we try to um find some bias in three

1019
00:43:33,040 --> 00:43:36,240
consecutive cases words so here shows

1020
00:43:36,240 --> 00:43:38,160
the expressions

1021
00:43:38,160 --> 00:43:41,599
so b 0 b1 and a0 are from the abstract

1022
00:43:41,599 --> 00:43:44,079
contribution and we found that they all

1023
00:43:44,079 --> 00:43:46,880
appear twice so it's possible to cancel

1024
00:43:46,880 --> 00:43:50,079
them out so we have introduced some

1025
00:43:50,079 --> 00:43:51,599
linear masks and

1026
00:43:51,599 --> 00:43:54,560
combine the bytes based on the

1027
00:43:54,560 --> 00:43:57,359
permutation sigma so with that we can

1028
00:43:57,359 --> 00:44:00,800
cancel the abstract contribution

1029
00:44:00,800 --> 00:44:01,599
then

1030
00:44:01,599 --> 00:44:02,400
we

1031
00:44:02,400 --> 00:44:05,359
found a linear approximation and this

1032
00:44:05,359 --> 00:44:08,480
approximation can have 48 s box

1033
00:44:08,480 --> 00:44:09,839
approximations

1034
00:44:09,839 --> 00:44:12,400
so we found some linear masks to cancel

1035
00:44:12,400 --> 00:44:16,400
as many as boxes as possible

1036
00:44:17,200 --> 00:44:20,079
in our uh in our results we were able to

1037
00:44:20,079 --> 00:44:22,720
cancel out nine x-boxes and the

1038
00:44:22,720 --> 00:44:24,960
resulting buyers is 2 to the power of

1039
00:44:24,960 --> 00:44:26,960
-303

1040
00:44:26,960 --> 00:44:29,520
and accordingly we had a distinguished

1041
00:44:29,520 --> 00:44:34,319
attack of complex j to the power of 303

1042
00:44:34,400 --> 00:44:36,960
as i mentioned our attack does not need

1043
00:44:36,960 --> 00:44:39,760
any lung key streams and this is because

1044
00:44:39,760 --> 00:44:41,760
the after contribution a0 b there will

1045
00:44:41,760 --> 00:44:44,560
be one or appear twice and it's possible

1046
00:44:44,560 --> 00:44:48,079
to cancel them out and explore or bias

1047
00:44:48,079 --> 00:44:50,640
the combination locally while on the

1048
00:44:50,640 --> 00:44:54,079
other hand the last variable a1 does not

1049
00:44:54,079 --> 00:44:56,880
appear in the expression of the three

1050
00:44:56,880 --> 00:45:01,280
key stream key stream words at all

1051
00:45:01,440 --> 00:45:03,440
so based on this

1052
00:45:03,440 --> 00:45:04,400
observation

1053
00:45:04,400 --> 00:45:07,040
we introduced one modification in the

1054
00:45:07,040 --> 00:45:10,480
snow vi cipher which is um

1055
00:45:10,480 --> 00:45:12,960
which is a snow weight variant we

1056
00:45:12,960 --> 00:45:15,440
proposed last year

1057
00:45:15,440 --> 00:45:18,839
maybe in 2020

1058
00:45:18,880 --> 00:45:19,920
so the

1059
00:45:19,920 --> 00:45:22,880
picture shows the after part of snowy

1060
00:45:22,880 --> 00:45:25,599
and snowy eye and the highlighted part

1061
00:45:25,599 --> 00:45:27,680
parts are the modifications

1062
00:45:27,680 --> 00:45:30,880
so the modification colored in red is

1063
00:45:30,880 --> 00:45:34,000
relevant to our attacks so specifically

1064
00:45:34,000 --> 00:45:35,760
we have moved the

1065
00:45:35,760 --> 00:45:39,400
tab position of t2 from the lower

1066
00:45:39,400 --> 00:45:43,520
128 bit part to the higher part this is

1067
00:45:43,520 --> 00:45:45,599
exactly a1

1068
00:45:45,599 --> 00:45:48,160
so then in this case a1 will appear in

1069
00:45:48,160 --> 00:45:50,480
the output of the in the expression of

1070
00:45:50,480 --> 00:45:53,359
the three key string words and it will

1071
00:45:53,359 --> 00:45:56,240
appear only once so now it becomes

1072
00:45:56,240 --> 00:45:59,280
impossible for us to export explore or

1073
00:45:59,280 --> 00:46:03,520
buyers the combination locally

1074
00:46:04,079 --> 00:46:06,560
uh lastly i would like to mention a

1075
00:46:06,560 --> 00:46:09,920
latest result of snow vape so in the

1076
00:46:09,920 --> 00:46:12,240
eurocrypt conference this year thereby

1077
00:46:12,240 --> 00:46:14,960
the corporation attack against no way

1078
00:46:14,960 --> 00:46:18,160
with complexity to the power of 240 so

1079
00:46:18,160 --> 00:46:22,240
this is faster than exhaustive cases

1080
00:46:22,240 --> 00:46:25,200
this attack has been reported to 3gbp

1081
00:46:25,200 --> 00:46:26,800
and in this

1082
00:46:26,800 --> 00:46:29,280
3gpp communication dropped

1083
00:46:29,280 --> 00:46:31,400
it writes

1084
00:46:31,400 --> 00:46:34,560
3gbpsa3 kindly asks sage to assess the

1085
00:46:34,560 --> 00:46:36,960
research paper mentioned above and

1086
00:46:36,960 --> 00:46:38,400
determine any

1087
00:46:38,400 --> 00:46:41,040
implications as norway

1088
00:46:41,040 --> 00:46:42,800
and subject to the outcome of the

1089
00:46:42,800 --> 00:46:46,079
previous action ss3 kindly asks sage to

1090
00:46:46,079 --> 00:46:48,760
proceed with the development of the

1091
00:46:48,760 --> 00:46:51,760
256-bit encryption and the integrity

1092
00:46:51,760 --> 00:46:54,880
algorithm specifications based on xenova

1093
00:46:54,880 --> 00:46:57,920
so uh this indicates that snowball might

1094
00:46:57,920 --> 00:46:59,599
need to have some

1095
00:46:59,599 --> 00:47:02,079
more modifications but it can still be

1096
00:47:02,079 --> 00:47:05,520
very promising promising for 5g use so i

1097
00:47:05,520 --> 00:47:08,640
think we can pay more attention

1098
00:47:08,640 --> 00:47:11,440
okay with that i would like to end my

1099
00:47:11,440 --> 00:47:14,720
presentation thank you very much

1100
00:47:17,599 --> 00:47:19,040
thank you very much are there any

1101
00:47:19,040 --> 00:47:23,160
questions in the room or online

1102
00:47:24,240 --> 00:47:27,920
so i may have a question on my own uh

1103
00:47:27,920 --> 00:47:29,040
if i may

1104
00:47:29,040 --> 00:47:30,480
um

1105
00:47:30,480 --> 00:47:33,200
so uh what happens when you have a long

1106
00:47:33,200 --> 00:47:36,400
key stream or is your eurocrypt paper

1107
00:47:36,400 --> 00:47:40,160
does it use a long key stream

1108
00:47:40,720 --> 00:47:44,240
unlike the effect you presented here

1109
00:47:44,240 --> 00:47:46,800
sorry you mean what's the difference or

1110
00:47:46,800 --> 00:47:48,960
what's uh that

1111
00:47:48,960 --> 00:47:51,599
and especially do you use a long key

1112
00:47:51,599 --> 00:47:54,960
stream for that attack

1113
00:47:54,960 --> 00:47:57,440
well a way in our attack we don't need

1114
00:47:57,440 --> 00:47:59,520
the lung key streams but actually in

1115
00:47:59,520 --> 00:48:02,079
zero attack they need lunky streams so

1116
00:48:02,079 --> 00:48:03,440
actually they are

1117
00:48:03,440 --> 00:48:07,119
yeah but anyway it's still an academic

1118
00:48:07,119 --> 00:48:09,359
attack faster than exhaustive

1119
00:48:09,359 --> 00:48:11,680
pay search so it's still interesting

1120
00:48:11,680 --> 00:48:13,119
yeah

1121
00:48:13,119 --> 00:48:14,319
thank you

1122
00:48:14,319 --> 00:48:15,359
thank you

1123
00:48:15,359 --> 00:48:17,680
any any more questions

1124
00:48:17,680 --> 00:48:19,359
i had a small one because in your last

1125
00:48:19,359 --> 00:48:20,559
slide you talk about some other

1126
00:48:20,559 --> 00:48:22,720
modifications do you have any ideas what

1127
00:48:22,720 --> 00:48:24,480
should that be

1128
00:48:24,480 --> 00:48:25,440
well

1129
00:48:25,440 --> 00:48:26,400
because

1130
00:48:26,400 --> 00:48:30,319
i think because 3gpp asks sage to

1131
00:48:30,319 --> 00:48:34,079
make the corresponding modifications

1132
00:48:34,079 --> 00:48:36,800
now i don't know about the progress

1133
00:48:36,800 --> 00:48:38,480
because because of the curvature

1134
00:48:38,480 --> 00:48:42,000
situation but we have some general ideas

1135
00:48:42,000 --> 00:48:44,400
but because it's not our

1136
00:48:44,400 --> 00:48:48,640
task to make the modifications so

1137
00:48:48,640 --> 00:48:49,520
yeah

1138
00:48:49,520 --> 00:48:52,000
but what ideas would you apply if you

1139
00:48:52,000 --> 00:48:53,440
could

1140
00:48:53,440 --> 00:48:57,040
i don't know if that's um

1141
00:48:57,599 --> 00:49:00,880
so the basic idea is to like

1142
00:49:00,880 --> 00:49:03,520
to remove these linear trails

1143
00:49:03,520 --> 00:49:05,040
but as

1144
00:49:05,040 --> 00:49:07,440
for how to remove it i i don't know if

1145
00:49:07,440 --> 00:49:11,359
it's um it's allowed to uh say here

1146
00:49:11,359 --> 00:49:14,160
because uh

1147
00:49:14,960 --> 00:49:18,000
sorry okay no problem good thanks a lot

1148
00:49:18,000 --> 00:49:20,160
so no more questions

1149
00:49:20,160 --> 00:49:22,559
then let's thank again yin yang and all

1150
00:49:22,559 --> 00:49:24,319
the speakers of the session please thank

1151
00:49:24,319 --> 00:49:25,760
you

1152
00:49:25,760 --> 00:49:27,440
thank you

1153
00:49:27,440 --> 00:49:28,720
thank you very much

1154
00:49:28,720 --> 00:49:31,599
so we have now a pause until half of

1155
00:49:31,599 --> 00:49:32,559
10

1156
00:49:32,559 --> 00:49:34,800
yes

1157
00:49:36,640 --> 00:49:40,118
sorry yeah

1158
00:49:46,880 --> 00:49:49,440
okay um so just an announcement for

1159
00:49:49,440 --> 00:49:51,760
people in the room so the other ones you

1160
00:49:51,760 --> 00:49:52,960
can have a break

1161
00:49:52,960 --> 00:49:55,680
um so i asked again what happens today

1162
00:49:55,680 --> 00:49:59,000
with um

