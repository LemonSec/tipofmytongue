1
00:00:00,960 --> 00:00:03,280
hello everyone i'm lauha from ting high

2
00:00:03,280 --> 00:00:05,680
university one of the authors of paper

3
00:00:05,680 --> 00:00:07,839
improved premium attacks on foreign

4
00:00:07,839 --> 00:00:10,839
224-256

5
00:00:10,960 --> 00:00:13,440
this paper has been published in tosc

6
00:00:13,440 --> 00:00:16,880
volume 2021 issue 1. on behalf of other

7
00:00:16,880 --> 00:00:19,119
authors in this video i will give about

8
00:00:19,119 --> 00:00:21,359
20 minutes presentation to explain our

9
00:00:21,359 --> 00:00:23,359
work in this paper

10
00:00:23,359 --> 00:00:25,680
as the title indicates the analysis

11
00:00:25,680 --> 00:00:27,599
object of this paper is foreign low

12
00:00:27,599 --> 00:00:29,679
capacity chart and the attack type is

13
00:00:29,679 --> 00:00:32,399
limited to pre-image attack moreover we

14
00:00:32,399 --> 00:00:34,399
focus on linear analysis which is

15
00:00:34,399 --> 00:00:36,800
commonly used in pre-image fields

16
00:00:36,800 --> 00:00:38,559
we improve the linear analysis by a

17
00:00:38,559 --> 00:00:41,040
technology named freedom use strategy

18
00:00:41,040 --> 00:00:42,719
which will be mainly discussed in this

19
00:00:42,719 --> 00:00:43,680
video

20
00:00:43,680 --> 00:00:45,200
this strategy works for partial

21
00:00:45,200 --> 00:00:46,800
linearization part and it can be

22
00:00:46,800 --> 00:00:48,719
directly applied in any full linear

23
00:00:48,719 --> 00:00:49,760
structure

24
00:00:49,760 --> 00:00:51,680
then we choose the currently best linear

25
00:00:51,680 --> 00:00:53,360
structure for low capacity chart

26
00:00:53,360 --> 00:00:55,520
proposed in ls19

27
00:00:55,520 --> 00:00:57,360
as a result we reduce the attack

28
00:00:57,360 --> 00:00:59,520
complexity by factors of 2 to the power

29
00:00:59,520 --> 00:01:02,719
of 15 and 2 to the power of 21.

30
00:01:02,719 --> 00:01:05,199
an important note is the complexity here

31
00:01:05,199 --> 00:01:06,960
and even in the whole video refer to

32
00:01:06,960 --> 00:01:09,439
guess times instead of catch up running

33
00:01:09,439 --> 00:01:11,280
we just neglect the cost of solving the

34
00:01:11,280 --> 00:01:14,880
linear exchange system in total counting

35
00:01:14,880 --> 00:01:16,799
this page briefly summarizes sound

36
00:01:16,799 --> 00:01:18,799
related work in pre-image fields of

37
00:01:18,799 --> 00:01:20,400
round-read sketchup

38
00:01:20,400 --> 00:01:23,200
firstly in ms-13 the authors provide

39
00:01:23,200 --> 00:01:25,840
pre-image attacks with sat

40
00:01:25,840 --> 00:01:28,080
this kind of tag can outperform exotic

41
00:01:28,080 --> 00:01:29,759
search in catch up reduced to three

42
00:01:29,759 --> 00:01:30,799
rounds

43
00:01:30,799 --> 00:01:32,240
then the authors further applied

44
00:01:32,240 --> 00:01:35,520
rotational group analysis in mps13

45
00:01:35,520 --> 00:01:37,280
this kind of attack even works in

46
00:01:37,280 --> 00:01:39,200
foreign high

47
00:01:39,200 --> 00:01:41,200
as far as capacity know this is the only

48
00:01:41,200 --> 00:01:43,040
work that provides pre-image

49
00:01:43,040 --> 00:01:46,320
analysis on foreign 512 since linear

50
00:01:46,320 --> 00:01:49,040
analysis can hardly deal with it

51
00:01:49,040 --> 00:01:51,600
in gls 16 a two-round full linear

52
00:01:51,600 --> 00:01:53,360
structure of ketchup run function is

53
00:01:53,360 --> 00:01:55,680
proposed this structure can be directly

54
00:01:55,680 --> 00:01:57,920
applied in sri lanka chalk while attacks

55
00:01:57,920 --> 00:02:00,240
for foreign still requires another

56
00:02:00,240 --> 00:02:02,799
process of partial linearization

57
00:02:02,799 --> 00:02:05,360
in ls19 the officers developed a linear

58
00:02:05,360 --> 00:02:07,840
structure via an allocated model this

59
00:02:07,840 --> 00:02:09,919
model works extremely well in sri lanka

60
00:02:09,919 --> 00:02:11,840
chalk and even helps in providing the

61
00:02:11,840 --> 00:02:13,760
first practical pre-image for surround

62
00:02:13,760 --> 00:02:15,920
cat chalk 224

63
00:02:15,920 --> 00:02:17,920
however their partial linearization

64
00:02:17,920 --> 00:02:19,920
strategy for foreign head shock is still

65
00:02:19,920 --> 00:02:21,200
inefficient

66
00:02:21,200 --> 00:02:22,879
our work directly inherits this

67
00:02:22,879 --> 00:02:24,800
developed model and just makes efforts

68
00:02:24,800 --> 00:02:27,520
in partial linearization

69
00:02:27,520 --> 00:02:29,599
the complexities of pre-image attacks on

70
00:02:29,599 --> 00:02:33,200
foreign chart 224-256

71
00:02:33,200 --> 00:02:35,200
are summarized in this table

72
00:02:35,200 --> 00:02:37,200
from the comparison you can see that for

73
00:02:37,200 --> 00:02:39,360
foreign chalk an efficient partial

74
00:02:39,360 --> 00:02:41,280
linearization strategy can even bring

75
00:02:41,280 --> 00:02:42,800
more gains than a developed linear

76
00:02:42,800 --> 00:02:45,599
structure so partial linearization is

77
00:02:45,599 --> 00:02:48,480
indeed a major problem

78
00:02:48,480 --> 00:02:50,480
before getting into the main part we

79
00:02:50,480 --> 00:02:51,840
first learned some preliminaries of

80
00:02:51,840 --> 00:02:54,640
hedgehog about calculating output and

81
00:02:54,640 --> 00:02:56,480
some important notations

82
00:02:56,480 --> 00:02:58,560
as we all know techchuck was the winner

83
00:02:58,560 --> 00:03:00,400
of shasta competition and finally

84
00:03:00,400 --> 00:03:03,040
standardized in 2015. the designers

85
00:03:03,040 --> 00:03:04,720
adopt a new proposed iterative

86
00:03:04,720 --> 00:03:06,640
construction and sponge

87
00:03:06,640 --> 00:03:08,560
in this video we will now present the

88
00:03:08,560 --> 00:03:10,800
execution of general sponge for more

89
00:03:10,800 --> 00:03:12,720
details please refer to the ketchup

90
00:03:12,720 --> 00:03:15,120
reference we only focus on a certain

91
00:03:15,120 --> 00:03:17,200
case that its integrity core can check

92
00:03:17,200 --> 00:03:19,680
the permutation is executed only twice

93
00:03:19,680 --> 00:03:21,760
as shown in the figure below

94
00:03:21,760 --> 00:03:23,920
this is exactly the attack model we use

95
00:03:23,920 --> 00:03:26,000
in this paper

96
00:03:26,000 --> 00:03:28,400
as for the cache authentication it runs

97
00:03:28,400 --> 00:03:31,680
on a 1600 bit inner state the inner

98
00:03:31,680 --> 00:03:33,840
state can be organized as a 5 times 5

99
00:03:33,840 --> 00:03:36,640
times 64 cuboid and each bit is indexed

100
00:03:36,640 --> 00:03:39,760
by a triple x y z where x and y vary

101
00:03:39,760 --> 00:03:43,840
from 0 to 4 and z varies from 0 to 63.

102
00:03:43,840 --> 00:03:45,760
according to the character reference the

103
00:03:45,760 --> 00:03:47,599
cuboid can be cut into different parts

104
00:03:47,599 --> 00:03:50,480
nand rows columns lengths or slices

105
00:03:50,480 --> 00:03:53,280
under certain x or y or z as shown in

106
00:03:53,280 --> 00:03:54,560
the figure

107
00:03:54,560 --> 00:03:56,640
then each execution of ketchup f

108
00:03:56,640 --> 00:03:58,959
consists of 24 rounds of wrong function

109
00:03:58,959 --> 00:04:02,720
are and each r includes phi step sita yo

110
00:04:02,720 --> 00:04:05,760
pi chi iota we understand not all

111
00:04:05,760 --> 00:04:07,519
listeners are familiar with the ketchup

112
00:04:07,519 --> 00:04:09,280
function so we fade the concrete

113
00:04:09,280 --> 00:04:11,120
formulas out and try to hide the

114
00:04:11,120 --> 00:04:13,439
properties of those steps

115
00:04:13,439 --> 00:04:15,519
well zeta is the diffusion layer by the

116
00:04:15,519 --> 00:04:18,478
sum operation among 11 bits row is an

117
00:04:18,478 --> 00:04:21,120
inland rotation permutation pi is an in

118
00:04:21,120 --> 00:04:23,680
slice swap permutation chi is the five

119
00:04:23,680 --> 00:04:25,840
bit quantity xbox which is the only

120
00:04:25,840 --> 00:04:28,560
non-linear step into chart f and iota is

121
00:04:28,560 --> 00:04:30,160
a constant sum layer which can be

122
00:04:30,160 --> 00:04:32,639
ignored in linear analysis

123
00:04:32,639 --> 00:04:34,960
after finishing all k chaff executions

124
00:04:34,960 --> 00:04:37,120
the digest is output from the first l

125
00:04:37,120 --> 00:04:38,800
bit of the final state

126
00:04:38,800 --> 00:04:41,919
the counting order is z x and finally y

127
00:04:41,919 --> 00:04:44,080
the directions are given in the figure

128
00:04:44,080 --> 00:04:46,000
we set this page here just to emphasize

129
00:04:46,000 --> 00:04:49,199
that in case charge 224 digest from the

130
00:04:49,199 --> 00:04:51,360
fourth line correspond to d from 0 to

131
00:04:51,360 --> 00:04:53,440
31.

132
00:04:53,440 --> 00:04:55,440
the last part of preliminaries is quite

133
00:04:55,440 --> 00:04:57,120
important because it involves the

134
00:04:57,120 --> 00:04:59,199
meanings of those notations we use in

135
00:04:59,199 --> 00:05:00,479
this paper

136
00:05:00,479 --> 00:05:02,400
without learning these notations those

137
00:05:02,400 --> 00:05:04,479
construction figures of linear structure

138
00:05:04,479 --> 00:05:06,240
or freedom rule strategy might be hard

139
00:05:06,240 --> 00:05:07,759
to understand

140
00:05:07,759 --> 00:05:09,520
first we need to mark the execution

141
00:05:09,520 --> 00:05:11,840
status of a middle state we use a

142
00:05:11,840 --> 00:05:13,120
capital greece letter with the

143
00:05:13,120 --> 00:05:15,199
superscript to denote the state exactly

144
00:05:15,199 --> 00:05:17,600
after the corresponding step here alpha

145
00:05:17,600 --> 00:05:21,199
is among theta rho pi chi iota and i

146
00:05:21,199 --> 00:05:23,840
starts from one we pronounce it alpha is

147
00:05:23,840 --> 00:05:26,000
for example pi third which means the

148
00:05:26,000 --> 00:05:28,160
state after the third pi step is the

149
00:05:28,160 --> 00:05:29,600
last linear state in the linear

150
00:05:29,600 --> 00:05:32,320
structure in particular iota zeros

151
00:05:32,320 --> 00:05:33,919
denotes the initial state after

152
00:05:33,919 --> 00:05:36,160
absorbing the message block

153
00:05:36,160 --> 00:05:38,080
then we can further denote one bit from

154
00:05:38,080 --> 00:05:40,240
a certain state with the triple index in

155
00:05:40,240 --> 00:05:42,880
the subscript we pronounce it alpha eyes

156
00:05:42,880 --> 00:05:46,400
x y z for example chi force zero zero

157
00:05:46,400 --> 00:05:48,639
zero to chi force four zero thirty one

158
00:05:48,639 --> 00:05:50,639
corresponds to the output of foreign

159
00:05:50,639 --> 00:05:52,479
charge 224

160
00:05:52,479 --> 00:05:54,479
here we inverse the last iota step

161
00:05:54,479 --> 00:05:56,960
before searching the pre-image

162
00:05:56,960 --> 00:05:59,120
we may also use star symbol to denote a

163
00:05:59,120 --> 00:06:01,440
part of a certain state the start symbol

164
00:06:01,440 --> 00:06:04,000
here means all legal values for example

165
00:06:04,000 --> 00:06:07,759
pi 3 star y z is a 5 0 pi third x star z

166
00:06:07,759 --> 00:06:10,560
is a vibrate colon pi third x y star is

167
00:06:10,560 --> 00:06:13,360
the 64 bit length and pi 3 star star z

168
00:06:13,360 --> 00:06:15,600
is a five times five slice

169
00:06:15,600 --> 00:06:17,520
column sound is significant value in

170
00:06:17,520 --> 00:06:20,160
zeta steps we use single s to denote the

171
00:06:20,160 --> 00:06:22,000
column sound so that we can simplify

172
00:06:22,000 --> 00:06:23,919
some calculating formulas

173
00:06:23,919 --> 00:06:25,759
this symbol is marked by a certain state

174
00:06:25,759 --> 00:06:28,080
with x d which denotes the sum of

175
00:06:28,080 --> 00:06:31,440
corresponding 5 bit column

176
00:06:31,440 --> 00:06:33,120
now we can start our improve linear

177
00:06:33,120 --> 00:06:34,400
analysis of chart

178
00:06:34,400 --> 00:06:36,720
first of all we should expand how linear

179
00:06:36,720 --> 00:06:39,520
analysis works in cachacaron function

180
00:06:39,520 --> 00:06:41,520
it is self-evident that the core of

181
00:06:41,520 --> 00:06:43,520
linear analysis is to construct linear

182
00:06:43,520 --> 00:06:45,600
relations between input bits and output

183
00:06:45,600 --> 00:06:49,199
bits suppose we have input m of o and we

184
00:06:49,199 --> 00:06:50,800
may need some link variables l to

185
00:06:50,800 --> 00:06:52,880
connect input and output

186
00:06:52,880 --> 00:06:55,039
we set some conditions in m to linearize

187
00:06:55,039 --> 00:06:57,599
parts of l and then set conditions in l

188
00:06:57,599 --> 00:06:59,360
to linearize part of o

189
00:06:59,360 --> 00:07:01,360
there is also another way where we start

190
00:07:01,360 --> 00:07:03,599
from l linearizing forwards and

191
00:07:03,599 --> 00:07:05,759
backwards here we only focus on the

192
00:07:05,759 --> 00:07:07,759
direct linearization

193
00:07:07,759 --> 00:07:10,319
as long as we linearize any beta in o we

194
00:07:10,319 --> 00:07:12,160
successfully construct a linear root

195
00:07:12,160 --> 00:07:14,400
from the encryption function then we can

196
00:07:14,400 --> 00:07:16,240
satisfy some conditions in linearized

197
00:07:16,240 --> 00:07:18,319
output bits and each condition brings a

198
00:07:18,319 --> 00:07:20,960
gain of 2 to the power of 1.

199
00:07:20,960 --> 00:07:22,800
all these conditions above compose a

200
00:07:22,800 --> 00:07:24,240
linear equivalent system which

201
00:07:24,240 --> 00:07:26,560
corresponds to a 0 1 matrix

202
00:07:26,560 --> 00:07:28,319
actually the linear equation system may

203
00:07:28,319 --> 00:07:30,639
have no solution or multiple solutions

204
00:07:30,639 --> 00:07:32,800
here remain again that we neglect the

205
00:07:32,800 --> 00:07:35,280
cost of solving it we are only concerned

206
00:07:35,280 --> 00:07:36,960
with the number of solutions in total

207
00:07:36,960 --> 00:07:40,000
for matching the entire output

208
00:07:40,000 --> 00:07:42,400
for the analysis objective chart things

209
00:07:42,400 --> 00:07:44,400
become a bit different in linear

210
00:07:44,400 --> 00:07:46,400
analysis circuit chart i mean present

211
00:07:46,400 --> 00:07:49,039
linear analysis l becomes a full linear

212
00:07:49,039 --> 00:07:51,360
state and o becomes the output of last

213
00:07:51,360 --> 00:07:54,000
pi step in other words it constructs a

214
00:07:54,000 --> 00:07:56,000
losing root since l is not partially

215
00:07:56,000 --> 00:07:58,400
chosen and o is not digest

216
00:07:58,400 --> 00:08:00,960
under these analysis for m to l we need

217
00:08:00,960 --> 00:08:03,120
to design a linear structure and from l

218
00:08:03,120 --> 00:08:04,960
to o we need to perform a partial

219
00:08:04,960 --> 00:08:06,240
linearization

220
00:08:06,240 --> 00:08:08,400
we will better reduce those locations in

221
00:08:08,400 --> 00:08:10,800
mml so that we can send more equations

222
00:08:10,800 --> 00:08:12,639
in o because the total number of

223
00:08:12,639 --> 00:08:15,599
equations is limited by the length of m

224
00:08:15,599 --> 00:08:17,599
moreover since the linear root doesn't

225
00:08:17,599 --> 00:08:20,000
pass through the last quadratic x box

226
00:08:20,000 --> 00:08:22,319
one equation thing o may not bring again

227
00:08:22,319 --> 00:08:24,879
2 to the power of 1 after constructing

228
00:08:24,879 --> 00:08:27,039
the linear route gain analysis will be

229
00:08:27,039 --> 00:08:29,039
further required

230
00:08:29,039 --> 00:08:31,120
therefore the improved linear analysis

231
00:08:31,120 --> 00:08:33,440
of hr consists of three parts linear

232
00:08:33,440 --> 00:08:36,080
structure partial linearization and gain

233
00:08:36,080 --> 00:08:37,360
analysis

234
00:08:37,360 --> 00:08:39,360
first about linear structure we have

235
00:08:39,360 --> 00:08:41,279
stated that we inherit this part from

236
00:08:41,279 --> 00:08:43,919
ls19 where a two-run linear structure

237
00:08:43,919 --> 00:08:46,640
with 194 degrees of freedom left is

238
00:08:46,640 --> 00:08:49,120
designed via an allocating model

239
00:08:49,120 --> 00:08:51,279
in this video we just simply introduced

240
00:08:51,279 --> 00:08:53,440
the principle of this structure for more

241
00:08:53,440 --> 00:08:55,519
details please refer to the original

242
00:08:55,519 --> 00:08:57,200
paper

243
00:08:57,200 --> 00:08:59,279
to construct a linear structure we must

244
00:08:59,279 --> 00:09:01,200
let the linear root pass through chi

245
00:09:01,200 --> 00:09:02,959
which is the only nonlinear step in

246
00:09:02,959 --> 00:09:04,240
ketchup f

247
00:09:04,240 --> 00:09:06,480
it is easily known that chi keeps linear

248
00:09:06,480 --> 00:09:07,839
when the input doesn't contain

249
00:09:07,839 --> 00:09:10,160
neighboring variables for example if

250
00:09:10,160 --> 00:09:13,120
only zero y z and two y z are variables

251
00:09:13,120 --> 00:09:15,600
all five bits outputs can keep linear

252
00:09:15,600 --> 00:09:17,440
under this law the linear rule can

253
00:09:17,440 --> 00:09:19,519
easily pass through the first chi step

254
00:09:19,519 --> 00:09:21,360
then we must deal with linear generation

255
00:09:21,360 --> 00:09:23,279
to avoid neighboring variables appearing

256
00:09:23,279 --> 00:09:24,720
in the next kind

257
00:09:24,720 --> 00:09:26,399
we need to choose proper constant to

258
00:09:26,399 --> 00:09:28,800
prevent generation in chi and fix column

259
00:09:28,800 --> 00:09:31,279
sounds to prevent diffusion in sita as

260
00:09:31,279 --> 00:09:33,600
for your empire these two are b2b

261
00:09:33,600 --> 00:09:35,600
permutations and will not generate new

262
00:09:35,600 --> 00:09:37,440
variables

263
00:09:37,440 --> 00:09:39,200
this figure shows the two-run linear

264
00:09:39,200 --> 00:09:42,320
structure for ketchup 256. the structure

265
00:09:42,320 --> 00:09:45,600
for ketchup 224 is just similar

266
00:09:45,600 --> 00:09:47,839
here each square represents a 64-bit

267
00:09:47,839 --> 00:09:50,160
length the initial state contains 10

268
00:09:50,160 --> 00:09:52,480
variable lengths leaving 15 constant

269
00:09:52,480 --> 00:09:54,800
lengths among those constant lengths

270
00:09:54,800 --> 00:09:56,560
eight lengths are restricted because

271
00:09:56,560 --> 00:09:58,160
they are out of the range of message

272
00:09:58,160 --> 00:10:00,880
block as marked by diagonals

273
00:10:00,880 --> 00:10:03,519
the linear structure starts with 320

274
00:10:03,519 --> 00:10:05,760
columns equations to prevent diffusion

275
00:10:05,760 --> 00:10:08,320
in the first data step here rc is short

276
00:10:08,320 --> 00:10:10,480
for random cost which supports a random

277
00:10:10,480 --> 00:10:12,800
space for searching the pre-image

278
00:10:12,800 --> 00:10:14,720
the constants of the first chi staff are

279
00:10:14,720 --> 00:10:17,519
all fixed by the form of variable 0

280
00:10:17,519 --> 00:10:20,480
variable 0 1 so that the first chi staff

281
00:10:20,480 --> 00:10:22,800
will not generate new variables

282
00:10:22,800 --> 00:10:26,240
similarly in the second data step 128

283
00:10:26,240 --> 00:10:28,880
equations are set to prevent diffusion

284
00:10:28,880 --> 00:10:30,480
finally the linear rule passes through

285
00:10:30,480 --> 00:10:33,600
the second chi step and reach pi third

286
00:10:33,600 --> 00:10:35,279
it can be proven that the rank of

287
00:10:35,279 --> 00:10:38,399
equation matrix is only 446

288
00:10:38,399 --> 00:10:40,880
returning two degrees of freedom thus

289
00:10:40,880 --> 00:10:44,000
this two-run structure leaves 194

290
00:10:44,000 --> 00:10:46,959
degrees of freedom actually to make

291
00:10:46,959 --> 00:10:49,120
those constants of 0 and 1 in the first

292
00:10:49,120 --> 00:10:51,279
chi step the length in the initial state

293
00:10:51,279 --> 00:10:54,240
must satisfy specific conditions however

294
00:10:54,240 --> 00:10:56,240
some conditions only involve restricted

295
00:10:56,240 --> 00:10:58,079
parts and cannot be satisfied by setting

296
00:10:58,079 --> 00:11:00,320
the message for this reason an

297
00:11:00,320 --> 00:11:02,160
allocating model is applied to generate

298
00:11:02,160 --> 00:11:04,240
a qualified inner state

299
00:11:04,240 --> 00:11:06,079
it should be noted that the complexity

300
00:11:06,079 --> 00:11:07,920
of matching such conditions is much

301
00:11:07,920 --> 00:11:10,320
smaller than searching the pre-image so

302
00:11:10,320 --> 00:11:12,640
we omit this part of complexity in total

303
00:11:12,640 --> 00:11:14,560
counting

304
00:11:14,560 --> 00:11:17,040
after linearizing state pi third we can

305
00:11:17,040 --> 00:11:19,920
continue on partial linearization first

306
00:11:19,920 --> 00:11:21,760
we need to understand the effect of one

307
00:11:21,760 --> 00:11:24,079
constant in pi third each constant in

308
00:11:24,079 --> 00:11:26,640
the 100 and 600 bit inner state can

309
00:11:26,640 --> 00:11:28,560
linearize two neighboring bits on its

310
00:11:28,560 --> 00:11:31,040
left like the example in the figure the

311
00:11:31,040 --> 00:11:34,000
constant of pi 3 3 1 d can linearize chi

312
00:11:34,000 --> 00:11:37,680
3 1 1 z and kaiser to 1 d

313
00:11:37,680 --> 00:11:39,920
then since the target bit in pi force

314
00:11:39,920 --> 00:11:42,640
comes from the sum of 11 bits in chi 3

315
00:11:42,640 --> 00:11:44,240
and among these speeds only 2 are

316
00:11:44,240 --> 00:11:46,320
neighboring it is easily known that the

317
00:11:46,320 --> 00:11:48,240
partial linearization of a single bit

318
00:11:48,240 --> 00:11:50,560
requires at least 10 constants as shown

319
00:11:50,560 --> 00:11:52,880
in the figure this is indeed the most

320
00:11:52,880 --> 00:11:55,279
efficient strategy for a single bit

321
00:11:55,279 --> 00:11:57,279
yet for multiple bits this strategy is

322
00:11:57,279 --> 00:11:59,440
apparently inefficient because it weighs

323
00:11:59,440 --> 00:12:01,360
almost half of those linear speeds in

324
00:12:01,360 --> 00:12:03,440
kaiser

325
00:12:03,440 --> 00:12:05,040
actually those wasted bits can be

326
00:12:05,040 --> 00:12:07,440
utilized by simply adding one constant

327
00:12:07,440 --> 00:12:09,920
as shown in the figure by adding such a

328
00:12:09,920 --> 00:12:12,320
constant we can draw another group of 11

329
00:12:12,320 --> 00:12:14,160
linearized speeds and finally reach a

330
00:12:14,160 --> 00:12:16,880
target in pi 4. a restriction of this

331
00:12:16,880 --> 00:12:19,519
2-bit strategy is the locations of two

332
00:12:19,519 --> 00:12:22,160
targets are relatively fixed for example

333
00:12:22,160 --> 00:12:25,120
if the first bit is pi force 1 0 z plus

334
00:12:25,120 --> 00:12:28,480
44 the second bit must be pi 4 2 0 z

335
00:12:28,480 --> 00:12:31,519
plus 43 the numbers here are decided by

336
00:12:31,519 --> 00:12:33,920
the offset of real step

337
00:12:33,920 --> 00:12:36,079
based on this 2-bit strategy we finally

338
00:12:36,079 --> 00:12:37,920
adopt the freedom rule strategy that

339
00:12:37,920 --> 00:12:39,920
makes full use of those linear speeds in

340
00:12:39,920 --> 00:12:42,399
kaiser with the chosen starting column

341
00:12:42,399 --> 00:12:44,639
each term we let one colon coincide with

342
00:12:44,639 --> 00:12:46,560
the colon of the previous term which

343
00:12:46,560 --> 00:12:48,320
means we can get two linear speeds by

344
00:12:48,320 --> 00:12:50,639
adding only six constants yet the

345
00:12:50,639 --> 00:12:52,320
restriction of this strategy becomes

346
00:12:52,320 --> 00:12:54,480
even stricter because the locations of

347
00:12:54,480 --> 00:12:56,000
all linearized speeds are directly

348
00:12:56,000 --> 00:12:58,639
determined by the starting column

349
00:12:58,639 --> 00:13:00,480
this table shows a comparison between

350
00:13:00,480 --> 00:13:03,040
old strategy and freedom real strategy

351
00:13:03,040 --> 00:13:05,680
within identically 194 degrees of

352
00:13:05,680 --> 00:13:06,399
freedom

353
00:13:06,399 --> 00:13:08,160
the oil strategy says 10 times

354
00:13:08,160 --> 00:13:10,240
unconstant for unlimited speeds

355
00:13:10,240 --> 00:13:13,680
practically 150 for 17 while the three

356
00:13:13,680 --> 00:13:15,920
and rear strategy says 5.6 times

357
00:13:15,920 --> 00:13:17,760
unconstrained for two times the linear

358
00:13:17,760 --> 00:13:21,680
speed practically 173 for 56

359
00:13:21,680 --> 00:13:24,480
the efficiency gap is quite apparent

360
00:13:24,480 --> 00:13:26,800
advantage of old strategy is that the

361
00:13:26,800 --> 00:13:28,720
location of each linear base can be

362
00:13:28,720 --> 00:13:30,480
arbitrarily chosen

363
00:13:30,480 --> 00:13:32,399
such attackers can choose the site that

364
00:13:32,399 --> 00:13:34,480
linearly match the digest with a gain of

365
00:13:34,480 --> 00:13:36,800
almost 2 to the power of 1.

366
00:13:36,800 --> 00:13:38,720
yet under freedom rule strategy the

367
00:13:38,720 --> 00:13:40,639
location of each linear bit is

368
00:13:40,639 --> 00:13:42,880
relatively fixed thus there is a gain

369
00:13:42,880 --> 00:13:44,720
loss since some bits may not linearly

370
00:13:44,720 --> 00:13:46,880
match the digest the gain may be 2 to

371
00:13:46,880 --> 00:13:49,920
the power of 1 2 to the power of 0.5 or

372
00:13:49,920 --> 00:13:51,279
even no gain

373
00:13:51,279 --> 00:13:53,279
these conclusions will be further argued

374
00:13:53,279 --> 00:13:56,320
in game analysis part

375
00:13:56,320 --> 00:13:58,399
now we expand the principle and effect

376
00:13:58,399 --> 00:14:00,399
of freedom real strategy which is the

377
00:14:00,399 --> 00:14:03,120
main technology we use in this paper

378
00:14:03,120 --> 00:14:06,399
yet a question is if we spend 173

379
00:14:06,399 --> 00:14:08,720
degrees of freedom in setting constants

380
00:14:08,720 --> 00:14:10,880
how can we get again over 2 to the power

381
00:14:10,880 --> 00:14:12,399
of 21.

382
00:14:12,399 --> 00:14:14,240
actually we propose another technology

383
00:14:14,240 --> 00:14:16,959
named zero coefficient to reduce cost by

384
00:14:16,959 --> 00:14:18,880
using this technology we find and

385
00:14:18,880 --> 00:14:21,360
construct 11 linear dependent bit pairs

386
00:14:21,360 --> 00:14:24,399
so that those constants only cost 162

387
00:14:24,399 --> 00:14:26,560
degrees of freedom

388
00:14:26,560 --> 00:14:28,240
to expand the principle of zero

389
00:14:28,240 --> 00:14:30,480
coefficient we first recall the two-run

390
00:14:30,480 --> 00:14:32,880
linear structure we have contracted a

391
00:14:32,880 --> 00:14:35,760
linear route from chi 0 to pi 3 and we

392
00:14:35,760 --> 00:14:37,440
are about to set several constants in

393
00:14:37,440 --> 00:14:40,000
piscer to perform partial linearization

394
00:14:40,000 --> 00:14:42,480
one step backwards each bit in python

395
00:14:42,480 --> 00:14:44,880
corresponds to the sum of 11 bits in kai

396
00:14:44,880 --> 00:14:47,120
second in the form of two columns and

397
00:14:47,120 --> 00:14:49,600
one solitary bit although we pan chi

398
00:14:49,600 --> 00:14:51,680
second or yellow actually some of the

399
00:14:51,680 --> 00:14:53,600
lengths may be constant or variables

400
00:14:53,600 --> 00:14:56,480
depending on the input of step chi

401
00:14:56,480 --> 00:14:58,399
now let's consider special case of a bit

402
00:14:58,399 --> 00:15:01,199
pair in the stem column of chi second it

403
00:15:01,199 --> 00:15:03,279
is found that if the two slots are bits

404
00:15:03,279 --> 00:15:05,199
are both constant then no matter where

405
00:15:05,199 --> 00:15:07,279
the two columns are the corresponding

406
00:15:07,279 --> 00:15:09,040
bits in c has third become linear

407
00:15:09,040 --> 00:15:11,040
dependent because their components are

408
00:15:11,040 --> 00:15:12,320
just the same

409
00:15:12,320 --> 00:15:14,000
this zero coefficient pair finally

410
00:15:14,000 --> 00:15:16,399
reaches pi third and in this case we can

411
00:15:16,399 --> 00:15:18,399
set two constants by spanning only one

412
00:15:18,399 --> 00:15:19,920
degree of freedom

413
00:15:19,920 --> 00:15:22,480
this is the key idea of zero coefficient

414
00:15:22,480 --> 00:15:24,720
of course these two constants cannot be

415
00:15:24,720 --> 00:15:26,800
set randomly they must be equal or

416
00:15:26,800 --> 00:15:28,240
contrary according to the linear

417
00:15:28,240 --> 00:15:29,920
relation

418
00:15:29,920 --> 00:15:31,519
as for the construction of zero

419
00:15:31,519 --> 00:15:33,279
coefficient pairs we need to meet some

420
00:15:33,279 --> 00:15:35,040
restrictions to ensure the constant

421
00:15:35,040 --> 00:15:37,360
attribute of corresponding bits and the

422
00:15:37,360 --> 00:15:39,519
constant attribute is decided by related

423
00:15:39,519 --> 00:15:41,519
bits of the xbox input

424
00:15:41,519 --> 00:15:43,440
to fix the input bits we even need to

425
00:15:43,440 --> 00:15:45,199
trace back to the column sum in chi

426
00:15:45,199 --> 00:15:46,240
first

427
00:15:46,240 --> 00:15:47,839
notice that setting column sound will

428
00:15:47,839 --> 00:15:49,680
now cause degrees of freedom because

429
00:15:49,680 --> 00:15:51,519
column sounds belong to the b tar of

430
00:15:51,519 --> 00:15:54,959
equation system a times x equal to b

431
00:15:54,959 --> 00:15:57,600
this table shows the details of all 11 0

432
00:15:57,600 --> 00:15:59,120
coefficient b pairs on the starting

433
00:15:59,120 --> 00:16:01,440
column pi 3 for star c

434
00:16:01,440 --> 00:16:03,120
from the table we can see that these

435
00:16:03,120 --> 00:16:05,040
speed pairs can be constructed without

436
00:16:05,040 --> 00:16:07,360
constructions

437
00:16:07,360 --> 00:16:08,800
so far we have finished the partial

438
00:16:08,800 --> 00:16:10,720
linearization part of our improve linear

439
00:16:10,720 --> 00:16:12,880
analysis for low capacity chart

440
00:16:12,880 --> 00:16:15,920
by spending 162 degrees of freedom we

441
00:16:15,920 --> 00:16:18,720
can linearize 56 bits in pi 4.

442
00:16:18,720 --> 00:16:20,560
yet because of the last long linear chi

443
00:16:20,560 --> 00:16:22,639
step those spacing pipe force may not

444
00:16:22,639 --> 00:16:24,560
linearly match the digest so we still

445
00:16:24,560 --> 00:16:26,320
need to perform again analysis to

446
00:16:26,320 --> 00:16:27,920
calculate the expected gain of those

447
00:16:27,920 --> 00:16:29,519
linear speeds

448
00:16:29,519 --> 00:16:31,839
in get analysis part we adopt a bit

449
00:16:31,839 --> 00:16:33,600
recovery model to select effect

450
00:16:33,600 --> 00:16:36,160
equations usually the number of infected

451
00:16:36,160 --> 00:16:38,160
equations is larger than the number of

452
00:16:38,160 --> 00:16:40,560
degrees of freedom left so it requires

453
00:16:40,560 --> 00:16:42,480
another process of freedom return to

454
00:16:42,480 --> 00:16:44,959
make up the lack of freedom

455
00:16:44,959 --> 00:16:46,959
this table displays the details of all

456
00:16:46,959 --> 00:16:49,360
56 linearized bits under starting column

457
00:16:49,360 --> 00:16:51,440
pi third for star d

458
00:16:51,440 --> 00:16:53,519
it is concluded that those speeds are

459
00:16:53,519 --> 00:16:56,000
distributed in 38 rows which can be

460
00:16:56,000 --> 00:16:57,920
divided into three classes according to

461
00:16:57,920 --> 00:16:59,279
the number of linearized bits they

462
00:16:59,279 --> 00:17:00,800
contain

463
00:17:00,800 --> 00:17:02,639
our b recovery model also works

464
00:17:02,639 --> 00:17:05,119
differently in three classes in rows

465
00:17:05,119 --> 00:17:07,119
containing one bit the principle is

466
00:17:07,119 --> 00:17:09,919
quite simple for a certain output if one

467
00:17:09,919 --> 00:17:12,640
bit is identical in all possible inputs

468
00:17:12,640 --> 00:17:14,799
it is regarded as a recovery bit and we

469
00:17:14,799 --> 00:17:17,119
can see an effective equation on it the

470
00:17:17,119 --> 00:17:18,959
gain of such equation is 2 to the power

471
00:17:18,959 --> 00:17:21,199
of 1 because it compresses the whole

472
00:17:21,199 --> 00:17:23,839
space into half size with all qualified

473
00:17:23,839 --> 00:17:25,599
cases conserved

474
00:17:25,599 --> 00:17:28,559
when the analysis object is charged 224

475
00:17:28,559 --> 00:17:30,240
seems to become a bit complicated

476
00:17:30,240 --> 00:17:32,320
because an uncertain bit may cover three

477
00:17:32,320 --> 00:17:34,559
out of four cases which brings the gain

478
00:17:34,559 --> 00:17:37,679
of only two to the power of 0.5 as shown

479
00:17:37,679 --> 00:17:39,039
in the example

480
00:17:39,039 --> 00:17:41,280
though it is also in fact equations with

481
00:17:41,280 --> 00:17:42,960
a better give priority to those

482
00:17:42,960 --> 00:17:44,960
equations that can bring a gain of 2 to

483
00:17:44,960 --> 00:17:47,600
2.1 since the space for equation setting

484
00:17:47,600 --> 00:17:49,440
is limited

485
00:17:49,440 --> 00:17:51,440
then in use containing two bits it

486
00:17:51,440 --> 00:17:53,600
depends on the number of recurrent bits

487
00:17:53,600 --> 00:17:55,520
if there are two recurrent bits the gain

488
00:17:55,520 --> 00:17:57,840
is of course two to the power of two if

489
00:17:57,840 --> 00:17:59,760
there are one recovery and one uncertain

490
00:17:59,760 --> 00:18:02,160
bit the game may be 2 to the power of 1

491
00:18:02,160 --> 00:18:04,720
or 2 to the power of 0.5

492
00:18:04,720 --> 00:18:06,960
if two bits are both uncertain we can

493
00:18:06,960 --> 00:18:09,039
still set effect equations on the sum of

494
00:18:09,039 --> 00:18:11,840
two bits as shown in examples

495
00:18:11,840 --> 00:18:14,880
similarly for k chart 224 the equation

496
00:18:14,880 --> 00:18:17,520
may only cover three out of four cases

497
00:18:17,520 --> 00:18:19,280
though we have multiple choices in this

498
00:18:19,280 --> 00:18:21,600
situation no single equation can bring

499
00:18:21,600 --> 00:18:25,200
again over two to the power of 0.5

500
00:18:25,200 --> 00:18:27,200
as four rows containing three bits this

501
00:18:27,200 --> 00:18:29,360
situation is quite complicated but

502
00:18:29,360 --> 00:18:31,360
fortunately we only need to analyze a

503
00:18:31,360 --> 00:18:34,400
specific case for ketchup 256.

504
00:18:34,400 --> 00:18:37,280
in this case pi force40z will never be

505
00:18:37,280 --> 00:18:39,360
recovered so it is quite similar to the

506
00:18:39,360 --> 00:18:41,840
case of rows containing two beats though

507
00:18:41,840 --> 00:18:43,679
three bits are all uncertain we can

508
00:18:43,679 --> 00:18:45,679
still set effect equations on the sum of

509
00:18:45,679 --> 00:18:48,320
two bits as shown in the example

510
00:18:48,320 --> 00:18:50,320
it is concluded that this kind of row

511
00:18:50,320 --> 00:18:52,160
can always bring a gain of 2 to the

512
00:18:52,160 --> 00:18:54,160
power of 2.

513
00:18:54,160 --> 00:18:55,919
we have explained how to set effect

514
00:18:55,919 --> 00:18:58,480
equations on linear space in pi force

515
00:18:58,480 --> 00:19:00,400
the number of vector equations depends

516
00:19:00,400 --> 00:19:02,320
on the locations of linear speeds and

517
00:19:02,320 --> 00:19:04,400
the digest we are about to match

518
00:19:04,400 --> 00:19:06,480
yet in some good cases the number of

519
00:19:06,480 --> 00:19:08,400
factor equations may exist degrees of

520
00:19:08,400 --> 00:19:09,360
freedom

521
00:19:09,360 --> 00:19:11,360
besides making full use of freedom we

522
00:19:11,360 --> 00:19:13,360
can also perform freedom return to fetch

523
00:19:13,360 --> 00:19:14,799
more space

524
00:19:14,799 --> 00:19:16,720
the principle of freedom return is quite

525
00:19:16,720 --> 00:19:18,559
simple recall that in freedom of

526
00:19:18,559 --> 00:19:21,039
strategy each time we add one colon and

527
00:19:21,039 --> 00:19:22,880
one solitary constant to linearize two

528
00:19:22,880 --> 00:19:23,760
bits

529
00:19:23,760 --> 00:19:25,200
actually the solitary constant

530
00:19:25,200 --> 00:19:26,960
corresponds to one of the two linear

531
00:19:26,960 --> 00:19:29,440
speeds if we find no effective creations

532
00:19:29,440 --> 00:19:31,679
can be set on such kind of bits we can

533
00:19:31,679 --> 00:19:33,360
return the freedom by deleting the

534
00:19:33,360 --> 00:19:36,640
equations of setting solitary constants

535
00:19:36,640 --> 00:19:39,280
since we linearized 56 bits in pi force

536
00:19:39,280 --> 00:19:41,760
28 of them may return freedom among

537
00:19:41,760 --> 00:19:44,000
these speeds six have been bound in zero

538
00:19:44,000 --> 00:19:45,840
coefficient pairs and cannot apply

539
00:19:45,840 --> 00:19:47,200
freedom return

540
00:19:47,200 --> 00:19:49,360
this table summarizes the situations of

541
00:19:49,360 --> 00:19:51,840
freedom return for remaining 22 bits

542
00:19:51,840 --> 00:19:54,880
under starting column pi 3 4 0 z

543
00:19:54,880 --> 00:19:56,640
it is concluded that seven degrees of

544
00:19:56,640 --> 00:20:00,000
freedom can be returned in average

545
00:20:00,000 --> 00:20:02,080
finally by carefully calculating the

546
00:20:02,080 --> 00:20:04,400
probability of each combination we get

547
00:20:04,400 --> 00:20:06,640
the analysis results as below

548
00:20:06,640 --> 00:20:09,360
for foreign chart 256 it is

549
00:20:09,360 --> 00:20:12,400
theoretically concluded that 34.5 effect

550
00:20:12,400 --> 00:20:14,640
equations can be set in average under

551
00:20:14,640 --> 00:20:17,919
starting column pi 340z here this shows

552
00:20:17,919 --> 00:20:19,919
a characteristic of rotational symmetry

553
00:20:19,919 --> 00:20:22,320
varying from 0 to 63.

554
00:20:22,320 --> 00:20:24,400
yet for a certain digest there must be a

555
00:20:24,400 --> 00:20:25,919
best starting column that brings the

556
00:20:25,919 --> 00:20:27,919
greatest game we also run an

557
00:20:27,919 --> 00:20:30,240
experimental test and has concluded that

558
00:20:30,240 --> 00:20:32,400
for about 74.5

559
00:20:32,400 --> 00:20:34,480
of random digest the total gain can

560
00:20:34,480 --> 00:20:37,039
reach 2 to the power of 38.

561
00:20:37,039 --> 00:20:40,640
for foreign 224 it is directly concluded

562
00:20:40,640 --> 00:20:43,440
that 38 effect equations can be set in

563
00:20:43,440 --> 00:20:46,960
average under starting colon pi 3406

564
00:20:46,960 --> 00:20:49,520
which is exactly the best starting colon

565
00:20:49,520 --> 00:20:51,360
yet the total gain is 2 to the power of

566
00:20:51,360 --> 00:20:53,760
32 since some of the equations cannot

567
00:20:53,760 --> 00:20:56,480
bring again of 2 to the power of 1.

568
00:20:56,480 --> 00:20:58,400
the experimental result shows that for

569
00:20:58,400 --> 00:21:01,600
about 61.3 percent of random digest the

570
00:21:01,600 --> 00:21:04,480
total gain can reach 2 to the power 32

571
00:21:04,480 --> 00:21:06,720
for more details such as distribution

572
00:21:06,720 --> 00:21:09,520
table gain list and calculating process

573
00:21:09,520 --> 00:21:12,240
please refer to the original paper

574
00:21:12,240 --> 00:21:13,679
so far we have displayed all the

575
00:21:13,679 --> 00:21:15,280
contents we need to explain about our

576
00:21:15,280 --> 00:21:18,159
work and now let us make a summary

577
00:21:18,159 --> 00:21:20,480
in this paper we provide improvement

578
00:21:20,480 --> 00:21:23,720
attacks on foreign 224

579
00:21:23,720 --> 00:21:26,960
256 through linear analysis the grouping

580
00:21:26,960 --> 00:21:28,799
analysis consists of three parts as

581
00:21:28,799 --> 00:21:31,760
listed below about linear structure we

582
00:21:31,760 --> 00:21:34,400
inherit this part from ls19 which is a

583
00:21:34,400 --> 00:21:37,039
two round structure with 194 degrees of

584
00:21:37,039 --> 00:21:38,320
freedom left

585
00:21:38,320 --> 00:21:40,159
our main improvements are reflected in

586
00:21:40,159 --> 00:21:42,240
partial linearization part

587
00:21:42,240 --> 00:21:44,240
we adopt the frequency strategy where

588
00:21:44,240 --> 00:21:46,080
multiple bits can be linearized by some

589
00:21:46,080 --> 00:21:48,799
common constants in addition through the

590
00:21:48,799 --> 00:21:51,200
technology of zero coefficient the cost

591
00:21:51,200 --> 00:21:52,720
of setting constants can be further

592
00:21:52,720 --> 00:21:54,000
decreased

593
00:21:54,000 --> 00:21:56,320
in final gain analysis by applying bit

594
00:21:56,320 --> 00:21:58,480
recovery and freedom return it is

595
00:21:58,480 --> 00:22:00,559
concluded that the total gain of our

596
00:22:00,559 --> 00:22:02,559
improved premium tax can reach 2 to the

597
00:22:02,559 --> 00:22:04,960
power 32 and 2 to the power of 38

598
00:22:04,960 --> 00:22:06,559
respectively

599
00:22:06,559 --> 00:22:08,559
that's all about our presentation thank

600
00:22:08,559 --> 00:22:11,879
you for listening

601
00:22:12,159 --> 00:22:14,240
you

