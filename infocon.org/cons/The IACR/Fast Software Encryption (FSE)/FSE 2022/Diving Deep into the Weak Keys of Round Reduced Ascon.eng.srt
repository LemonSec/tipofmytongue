1
00:00:00,000 --> 00:00:01,599
hello everyone

2
00:00:01,599 --> 00:00:03,679
my name is raghandra rohit

3
00:00:03,679 --> 00:00:05,759
today i am going to present our work

4
00:00:05,759 --> 00:00:07,680
diving deep into the weak keys of round

5
00:00:07,680 --> 00:00:09,040
produced escrow

6
00:00:09,040 --> 00:00:10,719
this is a joint work with santorum

7
00:00:10,719 --> 00:00:13,200
sarkar

8
00:00:14,639 --> 00:00:17,039
here is the outline for the today's talk

9
00:00:17,039 --> 00:00:19,760
first i will give a brief description of

10
00:00:19,760 --> 00:00:22,000
the ascon algorithm

11
00:00:22,000 --> 00:00:24,080
next i will present the problems which

12
00:00:24,080 --> 00:00:25,760
we addressed in this work and our

13
00:00:25,760 --> 00:00:27,680
contributions

14
00:00:27,680 --> 00:00:29,920
then i will show some practical wiki

15
00:00:29,920 --> 00:00:32,800
distinguishes for round reduced s count

16
00:00:32,800 --> 00:00:33,600
and

17
00:00:33,600 --> 00:00:36,079
also so how to construct such a weak

18
00:00:36,079 --> 00:00:39,520
space for ascon

19
00:00:40,640 --> 00:00:44,239
so let's start with sql

20
00:00:44,239 --> 00:00:46,399
so escond was initially submitted to the

21
00:00:46,399 --> 00:00:50,640
caesar competition in 2014 by david yogg

22
00:00:50,640 --> 00:00:54,800
extender mandel and suffer

23
00:00:54,800 --> 00:00:56,960
it won the same competition

24
00:00:56,960 --> 00:01:00,640
and this is also a finalist of the

25
00:01:00,640 --> 00:01:02,559
ongoing misflight with cryptography

26
00:01:02,559 --> 00:01:05,199
competition

27
00:01:05,438 --> 00:01:07,920
at a very high level the ascon

28
00:01:07,920 --> 00:01:10,240
authenticated encryption takes as inputs

29
00:01:10,240 --> 00:01:12,320
a secret key k

30
00:01:12,320 --> 00:01:13,520
uh public

31
00:01:13,520 --> 00:01:17,759
parameters nonce n associating data a

32
00:01:17,759 --> 00:01:20,320
message m and it then outputs a

33
00:01:20,320 --> 00:01:23,360
ciphertext c whose length equals the

34
00:01:23,360 --> 00:01:25,200
length of the message and an

35
00:01:25,200 --> 00:01:27,520
authentication tag thing

36
00:01:27,520 --> 00:01:30,079
the tag t provides the integrity and

37
00:01:30,079 --> 00:01:32,000
authenticity for all the

38
00:01:32,000 --> 00:01:35,920
input input public parameters

39
00:01:36,640 --> 00:01:41,119
now if we look into how ascon works then

40
00:01:41,119 --> 00:01:42,960
this is based on the

41
00:01:42,960 --> 00:01:45,680
well-known sponge duplex construction so

42
00:01:45,680 --> 00:01:47,280
there are four phases

43
00:01:47,280 --> 00:01:48,799
initialization

44
00:01:48,799 --> 00:01:50,799
processing associated

45
00:01:50,799 --> 00:01:52,960
then we have the encryption and then the

46
00:01:52,960 --> 00:01:55,119
finalization

47
00:01:55,119 --> 00:01:57,200
during the initialization and finalizing

48
00:01:57,200 --> 00:01:59,360
phases we have

49
00:01:59,360 --> 00:02:02,000
the ascon permutation

50
00:02:02,000 --> 00:02:04,159
which runs for a rounds

51
00:02:04,159 --> 00:02:07,119
while for the associated and plain text

52
00:02:07,119 --> 00:02:09,119
we have the same permutation but the

53
00:02:09,119 --> 00:02:11,599
number of rounds is b

54
00:02:11,599 --> 00:02:14,400
so now we have uh two variants of s corn

55
00:02:14,400 --> 00:02:16,000
s128

56
00:02:16,000 --> 00:02:19,040
and s con 128 e

57
00:02:19,040 --> 00:02:21,360
the only difference in the two variants

58
00:02:21,360 --> 00:02:22,480
is the

59
00:02:22,480 --> 00:02:24,800
amount of data which is processed per

60
00:02:24,800 --> 00:02:26,640
call of the permutation which is given

61
00:02:26,640 --> 00:02:28,959
by the rate r

62
00:02:28,959 --> 00:02:30,959
and the number of rounds

63
00:02:30,959 --> 00:02:33,440
during the soc data and plain text

64
00:02:33,440 --> 00:02:34,720
processing phase

65
00:02:34,720 --> 00:02:38,160
which are given by pv

66
00:02:38,160 --> 00:02:39,599
so in

67
00:02:39,599 --> 00:02:42,080
one of the variant this is 6 and in s

68
00:02:42,080 --> 00:02:45,040
count 128 a the number of rounds in pv

69
00:02:45,040 --> 00:02:46,080
is 8

70
00:02:46,080 --> 00:02:47,519
while

71
00:02:47,519 --> 00:02:48,800
the

72
00:02:48,800 --> 00:02:50,080
number of rounds during the

73
00:02:50,080 --> 00:02:52,959
initialization and finalizing phase is

74
00:02:52,959 --> 00:02:56,400
always same which is 12.

75
00:02:57,280 --> 00:03:00,239
now if we look into the round function p

76
00:03:00,239 --> 00:03:03,440
then it consists of three operations

77
00:03:03,440 --> 00:03:05,680
the first operation is the

78
00:03:05,680 --> 00:03:07,760
addition of round constant

79
00:03:07,760 --> 00:03:09,760
so

80
00:03:09,760 --> 00:03:13,040
so we add our 8-bit round constraint to

81
00:03:13,040 --> 00:03:15,360
the second word of the state

82
00:03:15,360 --> 00:03:16,800
then we apply the

83
00:03:16,800 --> 00:03:20,239
non-linear layer lay a non-linear layer

84
00:03:20,239 --> 00:03:22,800
which is basically the s box operation

85
00:03:22,800 --> 00:03:26,560
column wise to call 64 columns

86
00:03:26,560 --> 00:03:28,480
then we have the linear layer which is

87
00:03:28,480 --> 00:03:32,560
given by pl so it diffuses

88
00:03:32,560 --> 00:03:33,680
the words

89
00:03:33,680 --> 00:03:37,760
it diffuses each word within a state

90
00:03:38,400 --> 00:03:41,360
so mathematically looking

91
00:03:41,360 --> 00:03:45,120
so the s box of the s cone

92
00:03:45,120 --> 00:03:47,680
algebraic degree 2 and it is given by

93
00:03:47,680 --> 00:03:49,280
this expression

94
00:03:49,280 --> 00:03:52,879
and the linear layer is given here

95
00:03:52,879 --> 00:03:55,680
which is simply based on the xors and

96
00:03:55,680 --> 00:03:59,319
right cyclic shapes

97
00:04:00,159 --> 00:04:03,680
okay so now let's move into the problems

98
00:04:03,680 --> 00:04:05,439
which we addressed and

99
00:04:05,439 --> 00:04:08,480
our contributions

100
00:04:08,720 --> 00:04:11,519
okay so before uh going into that we

101
00:04:11,519 --> 00:04:12,640
start with

102
00:04:12,640 --> 00:04:14,879
the security claims made by the ascon

103
00:04:14,879 --> 00:04:16,560
designers

104
00:04:16,560 --> 00:04:18,880
so they mentioned that for 128-bit

105
00:04:18,880 --> 00:04:20,160
security

106
00:04:20,160 --> 00:04:22,079
so the first uh

107
00:04:22,079 --> 00:04:23,520
claim first

108
00:04:23,520 --> 00:04:25,840
condition is the number of processed

109
00:04:25,840 --> 00:04:28,720
plain text and associate data

110
00:04:28,720 --> 00:04:30,560
that can be protected by

111
00:04:30,560 --> 00:04:33,120
a single key is limited to at most 2 to

112
00:04:33,120 --> 00:04:35,759
power 64 blocks

113
00:04:35,759 --> 00:04:36,880
the next

114
00:04:36,880 --> 00:04:38,880
condition is the

115
00:04:38,880 --> 00:04:41,680
nodes should never repeated for two

116
00:04:41,680 --> 00:04:44,240
encryptions

117
00:04:44,320 --> 00:04:47,680
so based on this uh two conditions

118
00:04:47,680 --> 00:04:48,639
uh

119
00:04:48,639 --> 00:04:48,900
we

120
00:04:48,900 --> 00:04:50,160
[Music]

121
00:04:50,160 --> 00:04:52,479
give the target uh which we analyze in

122
00:04:52,479 --> 00:04:53,840
this work

123
00:04:53,840 --> 00:04:55,120
so

124
00:04:55,120 --> 00:04:57,600
our target is mainly the initialization

125
00:04:57,600 --> 00:04:58,800
phase of the s

126
00:04:58,800 --> 00:05:00,560
and this can be done because we can take

127
00:05:00,560 --> 00:05:04,320
the ss data and message length equals 0

128
00:05:04,320 --> 00:05:05,680
and we can simply work on the

129
00:05:05,680 --> 00:05:07,919
initialization phase

130
00:05:07,919 --> 00:05:09,039
so

131
00:05:09,039 --> 00:05:11,280
our target is shown here

132
00:05:11,280 --> 00:05:12,960
so we have the

133
00:05:12,960 --> 00:05:16,080
constant iv the secret k and the nodes n

134
00:05:16,080 --> 00:05:18,160
i and then we apply

135
00:05:18,160 --> 00:05:19,600
the round

136
00:05:19,600 --> 00:05:21,520
function for r nodes and then we can

137
00:05:21,520 --> 00:05:22,960
take the

138
00:05:22,960 --> 00:05:25,440
cipher text for one block of the

139
00:05:25,440 --> 00:05:26,560
plain text

140
00:05:26,560 --> 00:05:29,919
so the question here are

141
00:05:29,919 --> 00:05:32,479
how many rounds we can attack

142
00:05:32,479 --> 00:05:34,080
out of the 12 rounds

143
00:05:34,080 --> 00:05:36,479
and also we need to impose the condition

144
00:05:36,479 --> 00:05:38,960
that we are working on the

145
00:05:38,960 --> 00:05:42,000
in the non-respecting setting

146
00:05:42,000 --> 00:05:44,720
then the next question is

147
00:05:44,720 --> 00:05:47,199
given a nonce respecting set setting

148
00:05:47,199 --> 00:05:49,120
what are we looking into i

149
00:05:49,120 --> 00:05:51,360
whether it is key recovery or you just

150
00:05:51,360 --> 00:05:53,600
want to distinguish the

151
00:05:53,600 --> 00:05:56,639
outputs which is the ciphertext here

152
00:05:56,639 --> 00:06:00,720
and also the third uh condition here is

153
00:06:00,720 --> 00:06:02,560
because the designers impose a data

154
00:06:02,560 --> 00:06:07,199
complexity of at most 2 to 64 blocks

155
00:06:07,199 --> 00:06:08,639
so

156
00:06:08,639 --> 00:06:10,479
our texts

157
00:06:10,479 --> 00:06:11,440
are

158
00:06:11,440 --> 00:06:13,759
within this detail limits or outside

159
00:06:13,759 --> 00:06:16,560
these limits so this uh

160
00:06:16,560 --> 00:06:19,600
this condition was also used in the

161
00:06:19,600 --> 00:06:21,360
previous one which is

162
00:06:21,360 --> 00:06:26,199
misuse free attacks by rhses

163
00:06:26,880 --> 00:06:30,000
so here they present some attacks

164
00:06:30,000 --> 00:06:32,720
so such that the data complexity is

165
00:06:32,720 --> 00:06:35,360
atmospheric above 64. so that's why they

166
00:06:35,360 --> 00:06:39,199
mention it is like misused free attacks

167
00:06:39,199 --> 00:06:42,080
okay so now if we look into the existing

168
00:06:42,080 --> 00:06:44,160
key recovery attacks

169
00:06:44,160 --> 00:06:45,360
so

170
00:06:45,360 --> 00:06:48,240
again the most of the attacks are based

171
00:06:48,240 --> 00:06:51,199
on differentiable and q vertex

172
00:06:51,199 --> 00:06:54,880
so if you see the best attack can

173
00:06:54,880 --> 00:06:58,319
cover up to seven rounds of s com

174
00:06:58,319 --> 00:07:00,960
which is basically a cube attack however

175
00:07:00,960 --> 00:07:03,199
if if you see here

176
00:07:03,199 --> 00:07:05,120
some of them are valid attacks and some

177
00:07:05,120 --> 00:07:08,000
of them invalid so the invalidity here

178
00:07:08,000 --> 00:07:09,039
means

179
00:07:09,039 --> 00:07:11,280
the data complexity is crossing the

180
00:07:11,280 --> 00:07:13,599
value which is more than 2 to the power

181
00:07:13,599 --> 00:07:14,800
64.

182
00:07:14,800 --> 00:07:17,280
so if you see the best attack

183
00:07:17,280 --> 00:07:20,400
can only reach six rounds

184
00:07:20,400 --> 00:07:22,400
given that the data complexity is at

185
00:07:22,400 --> 00:07:24,960
most total 64.

186
00:07:24,960 --> 00:07:27,120
so

187
00:07:27,280 --> 00:07:28,560
in uh

188
00:07:28,560 --> 00:07:31,919
one of the previous work by rhss

189
00:07:31,919 --> 00:07:33,840
and they give a key recovery attack on

190
00:07:33,840 --> 00:07:36,400
seven rounds using two to the power 64

191
00:07:36,400 --> 00:07:38,639
data and it is based on the ideas of

192
00:07:38,639 --> 00:07:40,080
cube attack

193
00:07:40,080 --> 00:07:41,919
so here they also pose this condition

194
00:07:41,919 --> 00:07:44,879
whether they exist on attack on seven

195
00:07:44,879 --> 00:07:48,240
rounds with data strictly less than 2 to

196
00:07:48,240 --> 00:07:50,560
the power 64.

197
00:07:50,560 --> 00:07:51,759
so

198
00:07:51,759 --> 00:07:54,319
one of our major conclusion is

199
00:07:54,319 --> 00:07:55,120
we

200
00:07:55,120 --> 00:07:57,199
answer this question positively so we

201
00:07:57,199 --> 00:07:58,639
present an attack

202
00:07:58,639 --> 00:08:02,720
with 2 to the power 63 data in this work

203
00:08:03,199 --> 00:08:06,639
now if we look into the

204
00:08:06,639 --> 00:08:09,280
well distinguished for s call

205
00:08:09,280 --> 00:08:10,840
so for 5

206
00:08:10,840 --> 00:08:15,039
rounds the best can have data to power

207
00:08:15,039 --> 00:08:17,840
16 and it is based on the division

208
00:08:17,840 --> 00:08:18,960
property

209
00:08:18,960 --> 00:08:22,000
and it works for all keys to the or 28

210
00:08:22,000 --> 00:08:25,440
to the power 128 keys it works

211
00:08:25,440 --> 00:08:28,479
so what we saw here that there exist

212
00:08:28,479 --> 00:08:31,120
some keys where we can reduce the data

213
00:08:31,120 --> 00:08:34,159
complexity so for instance there are

214
00:08:34,159 --> 00:08:35,599
total for one

215
00:08:35,599 --> 00:08:37,279
one five keys

216
00:08:37,279 --> 00:08:39,919
where we can distinguish five rounds

217
00:08:39,919 --> 00:08:42,719
with just 2 to the power 13 data

218
00:08:42,719 --> 00:08:46,320
now there are also is

219
00:08:46,320 --> 00:08:49,360
total power 1.1 keys where we can reduce

220
00:08:49,360 --> 00:08:52,000
this data complexity from 2 to the power

221
00:08:52,000 --> 00:08:54,399
30 into 2 to the power 9

222
00:08:54,399 --> 00:08:57,040
so compared to the previous

223
00:08:57,040 --> 00:08:59,839
uh five round distinguishes we have the

224
00:08:59,839 --> 00:09:02,880
improved distinguishes in this one

225
00:09:02,880 --> 00:09:04,399
for five rounds

226
00:09:04,399 --> 00:09:06,839
now if we look into the six rounds then

227
00:09:06,839 --> 00:09:10,000
again the best known as

228
00:09:10,000 --> 00:09:12,560
data to to about 31 and also the same

229
00:09:12,560 --> 00:09:14,720
time

230
00:09:14,720 --> 00:09:16,800
now we present our three distinguishers

231
00:09:16,800 --> 00:09:18,720
here based on the different number of

232
00:09:18,720 --> 00:09:19,760
keys

233
00:09:19,760 --> 00:09:21,680
so the first one is

234
00:09:21,680 --> 00:09:23,200
where the number of cases due to the

235
00:09:23,200 --> 00:09:25,760
power one zero four and the complexities

236
00:09:25,760 --> 00:09:28,399
are to the power twenty four

237
00:09:28,399 --> 00:09:29,279
and then

238
00:09:29,279 --> 00:09:30,080
uh

239
00:09:30,080 --> 00:09:31,600
with uh then we have another

240
00:09:31,600 --> 00:09:34,000
distribution here with the key is stated

241
00:09:34,000 --> 00:09:37,279
for one time and data to the power 18

242
00:09:37,279 --> 00:09:38,720
and also we saw

243
00:09:38,720 --> 00:09:39,600
uh

244
00:09:39,600 --> 00:09:41,279
we can reduce the data complexity

245
00:09:41,279 --> 00:09:43,519
further due to two to 17 but in this

246
00:09:43,519 --> 00:09:45,279
case the number of the number of weak

247
00:09:45,279 --> 00:09:48,720
keys will reduce to to power

248
00:09:48,839 --> 00:09:52,320
95 now if we go into the seven rounds

249
00:09:52,320 --> 00:09:54,480
so the seven round best known

250
00:09:54,480 --> 00:09:56,480
distinguishers require student or system

251
00:09:56,480 --> 00:09:57,839
data

252
00:09:57,839 --> 00:10:00,160
and this is not practical

253
00:10:00,160 --> 00:10:00,880
so

254
00:10:00,880 --> 00:10:03,680
we give uh distinguishers we improve the

255
00:10:03,680 --> 00:10:05,360
complexity of the previous distinguishes

256
00:10:05,360 --> 00:10:08,720
from 2 to the power 60 to 2.46

257
00:10:08,720 --> 00:10:09,760
and then

258
00:10:09,760 --> 00:10:12,560
to 2 to the power 33 which is practical

259
00:10:12,560 --> 00:10:15,279
and can be verified easily

260
00:10:15,279 --> 00:10:16,959
however the

261
00:10:16,959 --> 00:10:19,120
trade off here is the number of

262
00:10:19,120 --> 00:10:20,720
the number of keys for which such

263
00:10:20,720 --> 00:10:22,320
distinguishers work

264
00:10:22,320 --> 00:10:23,600
is less

265
00:10:23,600 --> 00:10:26,240
so for the distinct resource with due to

266
00:10:26,240 --> 00:10:29,519
60 46 data the number of keys are to the

267
00:10:29,519 --> 00:10:30,720
power 82

268
00:10:30,720 --> 00:10:33,440
while for the second one the number of

269
00:10:33,440 --> 00:10:37,600
keys are 2 to the power 63

270
00:10:38,800 --> 00:10:41,040
okay now we look into it

271
00:10:41,040 --> 00:10:43,839
how we came up with these sort of uh

272
00:10:43,839 --> 00:10:46,640
distinguishers

273
00:10:46,640 --> 00:10:48,720
okay so before going into

274
00:10:48,720 --> 00:10:49,680
the

275
00:10:49,680 --> 00:10:52,399
overall idea uh first we will give

276
00:10:52,399 --> 00:10:54,320
a high level idea of what are the

277
00:10:54,320 --> 00:10:56,560
distinguishes we are looking into it

278
00:10:56,560 --> 00:10:57,839
so

279
00:10:57,839 --> 00:11:00,880
let's say we have input uh the nonce n0

280
00:11:00,880 --> 00:11:02,640
and the message m0 and we receive the ci

281
00:11:02,640 --> 00:11:04,079
vertex c0

282
00:11:04,079 --> 00:11:06,640
so we repeat it for

283
00:11:06,640 --> 00:11:09,040
q queries where we nodes are distinct

284
00:11:09,040 --> 00:11:10,800
and we obtain their corresponding cipher

285
00:11:10,800 --> 00:11:14,880
text and some the sum all this hypertext

286
00:11:14,880 --> 00:11:17,200
so what we are looking into it

287
00:11:17,200 --> 00:11:18,480
we are uh

288
00:11:18,480 --> 00:11:20,720
seeing whether the sum x or sum of all

289
00:11:20,720 --> 00:11:22,320
this cipher x equals zero with

290
00:11:22,320 --> 00:11:24,560
probability one so this is the

291
00:11:24,560 --> 00:11:27,519
distinguishes which we are looking here

292
00:11:27,519 --> 00:11:28,720
now

293
00:11:28,720 --> 00:11:31,519
if the size of the cyber text is 64 bits

294
00:11:31,519 --> 00:11:33,600
and

295
00:11:33,600 --> 00:11:35,600
your ascon output

296
00:11:35,600 --> 00:11:38,000
behaves like a random function then this

297
00:11:38,000 --> 00:11:39,440
probability should be to the power minus

298
00:11:39,440 --> 00:11:42,800
64 and not one

299
00:11:42,800 --> 00:11:45,200
now if we look theoretically about this

300
00:11:45,200 --> 00:11:48,160
high level idea so this is nothing but

301
00:11:48,160 --> 00:11:50,000
uh

302
00:11:50,000 --> 00:11:52,800
this follows the principle of the vertex

303
00:11:52,800 --> 00:11:53,920
so

304
00:11:53,920 --> 00:11:56,079
let me give you an example for this so

305
00:11:56,079 --> 00:11:58,639
we consider our boolean function

306
00:11:58,639 --> 00:12:00,880
f in six variables

307
00:12:00,880 --> 00:12:03,600
which is given here so

308
00:12:03,600 --> 00:12:06,480
here uh k 0 k 1 k 2 are secret variables

309
00:12:06,480 --> 00:12:07,680
and

310
00:12:07,680 --> 00:12:09,760
v i's are public values which we can

311
00:12:09,760 --> 00:12:11,680
control

312
00:12:11,680 --> 00:12:13,040
now if we take the second order

313
00:12:13,040 --> 00:12:15,440
derivative here with respect to v 0 and

314
00:12:15,440 --> 00:12:16,320
v 1

315
00:12:16,320 --> 00:12:18,639
and fix v 2 to some constant so that

316
00:12:18,639 --> 00:12:22,079
means our value of v 2 is fixed

317
00:12:22,079 --> 00:12:25,200
and we are evaluating f on all possible

318
00:12:25,200 --> 00:12:27,680
values of v 0 and v 1 and then t and

319
00:12:27,680 --> 00:12:29,360
summing the output

320
00:12:29,360 --> 00:12:31,920
so after doing that basically we will

321
00:12:31,920 --> 00:12:33,600
receive

322
00:12:33,600 --> 00:12:36,399
the value which equals k 0 plus k 2 plus

323
00:12:36,399 --> 00:12:37,440
k

324
00:12:37,440 --> 00:12:40,000
so in terms of q vertex uh

325
00:12:40,000 --> 00:12:41,600
here our

326
00:12:41,600 --> 00:12:43,360
this uh

327
00:12:43,360 --> 00:12:45,519
these q variable these variables v 0 and

328
00:12:45,519 --> 00:12:47,760
v 1 where we are varying only

329
00:12:47,760 --> 00:12:50,320
possible values so this is

330
00:12:50,320 --> 00:12:53,440
known as our cube and since we have like

331
00:12:53,440 --> 00:12:55,279
only two variables here so this is a two

332
00:12:55,279 --> 00:12:57,040
dimensional queue

333
00:12:57,040 --> 00:12:59,120
and v2 is fixed so this is a non-cube

334
00:12:59,120 --> 00:13:00,320
variable

335
00:13:00,320 --> 00:13:02,000
and after summing up

336
00:13:02,000 --> 00:13:07,360
all the possible values of v 0 and v 1

337
00:13:07,360 --> 00:13:10,560
then we get a super poly which is

338
00:13:10,560 --> 00:13:13,760
here k 0 plus k 2 plus k 1

339
00:13:13,760 --> 00:13:16,480
and this is a super poly of q v 0 and v

340
00:13:16,480 --> 00:13:17,360
1

341
00:13:17,360 --> 00:13:18,240
so

342
00:13:18,240 --> 00:13:19,440
now if we

343
00:13:19,440 --> 00:13:20,399
see that

344
00:13:20,399 --> 00:13:22,240
uh here the super bowl is linear so

345
00:13:22,240 --> 00:13:23,360
basically

346
00:13:23,360 --> 00:13:25,279
it gives some knowledge about the

347
00:13:25,279 --> 00:13:26,320
keywords

348
00:13:26,320 --> 00:13:28,160
and now there are a lot of

349
00:13:28,160 --> 00:13:30,720
uh automated tools like ruby constant

350
00:13:30,720 --> 00:13:32,959
programming set smt

351
00:13:32,959 --> 00:13:35,680
which can give some information of these

352
00:13:35,680 --> 00:13:39,199
superpolis but the problem here is

353
00:13:39,199 --> 00:13:42,079
once your algebraic normal form becomes

354
00:13:42,079 --> 00:13:44,320
complex then

355
00:13:44,320 --> 00:13:47,920
it is difficult uh to guarantees this

356
00:13:47,920 --> 00:13:50,000
sort of informations or

357
00:13:50,000 --> 00:13:52,160
simply saying these solvers do not

358
00:13:52,160 --> 00:13:54,480
finish when the when you increase the

359
00:13:54,480 --> 00:13:56,880
dimension of the queue

360
00:13:56,880 --> 00:13:59,439
so what

361
00:13:59,920 --> 00:14:02,800
so now uh the queue vertex is also the

362
00:14:02,800 --> 00:14:06,079
idea of the keyword also goes back to 94

363
00:14:06,079 --> 00:14:06,880
by

364
00:14:06,880 --> 00:14:09,519
uh c july where

365
00:14:09,519 --> 00:14:10,880
this was given as higher order

366
00:14:10,880 --> 00:14:13,440
differences so the basic idea is uh if

367
00:14:13,440 --> 00:14:16,800
you have boolean function or degree two

368
00:14:16,800 --> 00:14:18,959
for example then its third order

369
00:14:18,959 --> 00:14:20,399
derivative

370
00:14:20,399 --> 00:14:22,720
with respect to the public variable is

371
00:14:22,720 --> 00:14:24,880
always zero

372
00:14:24,880 --> 00:14:26,639
so simply saying if the degree of

373
00:14:26,639 --> 00:14:28,880
boolean function is t then its d the

374
00:14:28,880 --> 00:14:30,560
order derivative is zero so in the

375
00:14:30,560 --> 00:14:32,560
previous example if you see

376
00:14:32,560 --> 00:14:35,360
the degree was with respect to v 0 and v

377
00:14:35,360 --> 00:14:37,680
1 is 2 so if you take third order

378
00:14:37,680 --> 00:14:40,079
derivative with respect to v 0 v 1 and v

379
00:14:40,079 --> 00:14:42,079
2 and sum them up

380
00:14:42,079 --> 00:14:43,440
sum the

381
00:14:43,440 --> 00:14:47,360
values of f then it always equals zero

382
00:14:47,360 --> 00:14:50,880
so what's our goal here so the goal of

383
00:14:50,880 --> 00:14:52,480
our goal here is

384
00:14:52,480 --> 00:14:54,720
to reduce the algebraic degree of the s

385
00:14:54,720 --> 00:14:59,440
con auto bits as much as possible

386
00:14:59,440 --> 00:15:00,240
okay

387
00:15:00,240 --> 00:15:03,199
so now we will look into how we actually

388
00:15:03,199 --> 00:15:06,639
construct these testing measures

389
00:15:06,639 --> 00:15:09,760
so if you remember the

390
00:15:09,760 --> 00:15:13,760
sheet of the scone is loaded with uh

391
00:15:13,760 --> 00:15:15,680
these values at the beginning

392
00:15:15,680 --> 00:15:18,720
so the word x0 is loaded with a fixed

393
00:15:18,720 --> 00:15:20,959
constraint which is given the row

394
00:15:20,959 --> 00:15:23,199
and then the next two rows we have the

395
00:15:23,199 --> 00:15:25,680
128-bit keys and then finally we have

396
00:15:25,680 --> 00:15:27,920
the public variables b

397
00:15:27,920 --> 00:15:29,519
so now we have to find some conditions

398
00:15:29,519 --> 00:15:30,639
on vi

399
00:15:30,639 --> 00:15:31,680
and

400
00:15:31,680 --> 00:15:33,839
then we have to

401
00:15:33,839 --> 00:15:35,920
find an upper bound in the algebraic

402
00:15:35,920 --> 00:15:38,399
degree in terms of vi and we want to

403
00:15:38,399 --> 00:15:41,440
ensure that the degree

404
00:15:41,440 --> 00:15:44,480
does not grow too much

405
00:15:45,040 --> 00:15:48,000
okay so now if we look into the output

406
00:15:48,000 --> 00:15:51,519
of the s works after

407
00:15:51,920 --> 00:15:54,320
the basically the s box output after

408
00:15:54,320 --> 00:15:55,600
round one

409
00:15:55,600 --> 00:15:57,920
then we can see that

410
00:15:57,920 --> 00:15:59,279
only

411
00:15:59,279 --> 00:16:00,560
the

412
00:16:00,560 --> 00:16:01,839
second uh

413
00:16:01,839 --> 00:16:02,880
bit

414
00:16:02,880 --> 00:16:04,399
y two zero

415
00:16:04,399 --> 00:16:06,480
there the term is quadratic in terms of

416
00:16:06,480 --> 00:16:07,600
v

417
00:16:07,600 --> 00:16:10,480
plus 64 and vi

418
00:16:10,480 --> 00:16:11,759
the rest

419
00:16:11,759 --> 00:16:15,120
it's it's not quadratic

420
00:16:15,120 --> 00:16:17,279
so

421
00:16:17,440 --> 00:16:19,839
so if you see this is the only term here

422
00:16:19,839 --> 00:16:22,399
which is where we have this

423
00:16:22,399 --> 00:16:24,639
term

424
00:16:27,040 --> 00:16:28,720
so now

425
00:16:28,720 --> 00:16:31,240
what uh

426
00:16:31,240 --> 00:16:33,920
rhs21 proposed

427
00:16:33,920 --> 00:16:34,959
was

428
00:16:34,959 --> 00:16:37,279
to set

429
00:16:37,279 --> 00:16:40,079
each uh queue variable in

430
00:16:40,079 --> 00:16:41,759
register 3

431
00:16:41,759 --> 00:16:44,560
equals register 4 and then see

432
00:16:44,560 --> 00:16:46,399
how the degree propagates

433
00:16:46,399 --> 00:16:49,680
so if you set vi as vi plus 64 and then

434
00:16:49,680 --> 00:16:53,040
again look into the s s box output

435
00:16:53,040 --> 00:16:54,480
then we

436
00:16:54,480 --> 00:16:56,399
then they found that

437
00:16:56,399 --> 00:16:57,759
the

438
00:16:57,759 --> 00:16:59,360
bit y two

439
00:16:59,360 --> 00:17:01,680
and y three

440
00:17:01,680 --> 00:17:06,480
sorry the eighth bit of y2 and y3

441
00:17:06,480 --> 00:17:08,319
they becomes independent independent of

442
00:17:08,319 --> 00:17:09,919
the cube variable

443
00:17:09,919 --> 00:17:12,640
after the s box

444
00:17:12,640 --> 00:17:14,959
while the other words they depend on the

445
00:17:14,959 --> 00:17:17,760
q variable bi

446
00:17:17,760 --> 00:17:21,280
so now based on this condition they

447
00:17:21,280 --> 00:17:23,039
found the an upper bounds on the

448
00:17:23,039 --> 00:17:25,599
engineering degree after till uh seven

449
00:17:25,599 --> 00:17:27,280
rounds

450
00:17:27,280 --> 00:17:29,679
so if you see uh

451
00:17:29,679 --> 00:17:32,240
after seven rounds their maximum

452
00:17:32,240 --> 00:17:34,320
algebraic degree is 59

453
00:17:34,320 --> 00:17:36,640
in the cube variables and this is still

454
00:17:36,640 --> 00:17:39,280
not practical

455
00:17:39,679 --> 00:17:42,559
so what we do here is uh

456
00:17:42,559 --> 00:17:44,799
right now we know that two words are

457
00:17:44,799 --> 00:17:47,840
independent of the queue variables so we

458
00:17:47,840 --> 00:17:50,559
see whether we can make

459
00:17:50,559 --> 00:17:52,480
another word independent of the queue

460
00:17:52,480 --> 00:17:53,520
variable

461
00:17:53,520 --> 00:17:55,120
so for that we introduce another

462
00:17:55,120 --> 00:17:56,960
condition on

463
00:17:56,960 --> 00:17:58,000
word1

464
00:17:58,000 --> 00:18:01,440
so this can be done by setting

465
00:18:01,440 --> 00:18:03,200
the key bit ki

466
00:18:03,200 --> 00:18:04,640
equals

467
00:18:04,640 --> 00:18:07,200
1 plus k i plus 64

468
00:18:07,200 --> 00:18:10,000
for indices 56 to 59 and for the other

469
00:18:10,000 --> 00:18:13,120
one we just said take ki as equals to ki

470
00:18:13,120 --> 00:18:15,039
plus 64.

471
00:18:15,039 --> 00:18:16,880
so now what is the impact of this

472
00:18:16,880 --> 00:18:19,840
additional condition

473
00:18:20,160 --> 00:18:22,320
so if you look

474
00:18:22,320 --> 00:18:24,400
uh how the degree propagates

475
00:18:24,400 --> 00:18:26,000
once we

476
00:18:26,000 --> 00:18:28,720
add this condition then we find that

477
00:18:28,720 --> 00:18:30,480
so

478
00:18:30,480 --> 00:18:32,320
we can start from here so let's say

479
00:18:32,320 --> 00:18:34,400
after three rounds

480
00:18:34,400 --> 00:18:36,000
without that condition the degree was

481
00:18:36,000 --> 00:18:36,799
three

482
00:18:36,799 --> 00:18:38,240
now if we add this condition then the

483
00:18:38,240 --> 00:18:39,679
degree becomes two

484
00:18:39,679 --> 00:18:41,440
after four rounds

485
00:18:41,440 --> 00:18:44,799
it is six while the previous was seven

486
00:18:44,799 --> 00:18:47,120
so if you go like this then we find that

487
00:18:47,120 --> 00:18:50,480
after seven rounds now the degree is 45

488
00:18:50,480 --> 00:18:52,960
so the degree reduces by 14

489
00:18:52,960 --> 00:18:56,240
compared to 59 so this is still

490
00:18:56,240 --> 00:18:58,320
practical

491
00:18:58,320 --> 00:19:00,000
also if you see

492
00:19:00,000 --> 00:19:02,080
after round two

493
00:19:02,080 --> 00:19:03,120
only

494
00:19:03,120 --> 00:19:04,960
the word x3

495
00:19:04,960 --> 00:19:07,200
has quadratic terms so now if we can

496
00:19:07,200 --> 00:19:08,320
somehow

497
00:19:08,320 --> 00:19:11,280
ensure that uh there are no quadratic

498
00:19:11,280 --> 00:19:13,760
terms after round two

499
00:19:13,760 --> 00:19:16,080
by putting some additional conditions on

500
00:19:16,080 --> 00:19:17,600
x3

501
00:19:17,600 --> 00:19:18,720
then after

502
00:19:18,720 --> 00:19:20,720
after five after

503
00:19:20,720 --> 00:19:22,880
next five rounds the maximum degree can

504
00:19:22,880 --> 00:19:24,880
be 32

505
00:19:24,880 --> 00:19:26,480
so

506
00:19:26,480 --> 00:19:29,360
based on this we can have we can create

507
00:19:29,360 --> 00:19:31,679
our distribution for 7 round

508
00:19:31,679 --> 00:19:34,080
with complexity 2 to the power 33

509
00:19:34,080 --> 00:19:36,840
because the maximum degree can be

510
00:19:36,840 --> 00:19:38,640
32.

511
00:19:38,640 --> 00:19:41,280
okay so now let's look into some

512
00:19:41,280 --> 00:19:43,840
concrete examples of

513
00:19:43,840 --> 00:19:46,720
the distinguishes

514
00:19:46,720 --> 00:19:48,720
so what we do here is

515
00:19:48,720 --> 00:19:51,280
we start with some indexing set

516
00:19:51,280 --> 00:19:54,320
so here our set is

517
00:19:54,320 --> 00:19:57,679
starts from 0 and ends at 45 so

518
00:19:57,679 --> 00:19:59,760
basically we select our indexing set of

519
00:19:59,760 --> 00:20:01,840
dimension 46

520
00:20:01,840 --> 00:20:05,440
and corresponding to this set we define

521
00:20:05,440 --> 00:20:08,000
a weak key space for seven round

522
00:20:08,000 --> 00:20:09,840
as follows

523
00:20:09,840 --> 00:20:14,320
so what we do for each index i in i1 we

524
00:20:14,320 --> 00:20:15,200
said

525
00:20:15,200 --> 00:20:18,559
ki equals ki plus 64.

526
00:20:18,559 --> 00:20:21,440
so now if we look into how many keys are

527
00:20:21,440 --> 00:20:22,720
there

528
00:20:22,720 --> 00:20:26,080
then there are 46 places where ki equals

529
00:20:26,080 --> 00:20:28,720
k i plus 64 so that means we can only

530
00:20:28,720 --> 00:20:31,120
have 2 to 46 values

531
00:20:31,120 --> 00:20:32,960
the remaining

532
00:20:32,960 --> 00:20:35,440
uh 18 values they can take

533
00:20:35,440 --> 00:20:38,080
any arbitrary value so

534
00:20:38,080 --> 00:20:42,080
that is basically 64 minus 46 times 2

535
00:20:42,080 --> 00:20:46,000
so overall we have 2 tools for 82 keys

536
00:20:46,000 --> 00:20:47,039
now

537
00:20:47,039 --> 00:20:49,679
now for each of these keys

538
00:20:49,679 --> 00:20:51,600
if we select a queue

539
00:20:51,600 --> 00:20:53,200
of the form

540
00:20:53,200 --> 00:20:56,000
v0 to v45

541
00:20:56,000 --> 00:20:59,039
so basically 46 dimensional queue

542
00:20:59,039 --> 00:21:01,200
then for each of these cubes the cube

543
00:21:01,200 --> 00:21:05,280
sum after seven rounds equals zero

544
00:21:05,360 --> 00:21:08,480
so this is one of the example now

545
00:21:08,480 --> 00:21:11,600
let's look into another example

546
00:21:11,600 --> 00:21:13,200
so here

547
00:21:13,200 --> 00:21:15,200
we decrease the size of the cube so from

548
00:21:15,200 --> 00:21:18,480
46 we redistribute to 30 32

549
00:21:18,480 --> 00:21:22,640
and we define the bk space as

550
00:21:24,080 --> 00:21:24,960
uh

551
00:21:24,960 --> 00:21:25,760
so

552
00:21:25,760 --> 00:21:29,679
for each index and i2 we set ki and k i

553
00:21:29,679 --> 00:21:32,240
plus 64 equals zero so

554
00:21:32,240 --> 00:21:34,159
this is one condition or

555
00:21:34,159 --> 00:21:37,120
we will take the union where uh ki equal

556
00:21:37,120 --> 00:21:40,159
to k i plus 64 equals one

557
00:21:40,159 --> 00:21:43,360
so now once we have this condition then

558
00:21:43,360 --> 00:21:45,280
the number of keys are

559
00:21:45,280 --> 00:21:47,760
basically it is uh

560
00:21:47,760 --> 00:21:50,400
fixed because uh

561
00:21:50,400 --> 00:21:52,799
you can only that can only the

562
00:21:52,799 --> 00:21:54,640
the first 33

563
00:21:54,640 --> 00:21:56,880
values can only take two values either

564
00:21:56,880 --> 00:21:58,960
zero or two so

565
00:21:58,960 --> 00:22:01,280
we only have two possibilities

566
00:22:01,280 --> 00:22:04,880
the remaining can take 64 minus 33 times

567
00:22:04,880 --> 00:22:07,200
two so basically

568
00:22:07,200 --> 00:22:10,640
two to the power 62 values

569
00:22:10,840 --> 00:22:14,240
so remember uh these are the conditions

570
00:22:14,240 --> 00:22:16,159
uh which ensure that

571
00:22:16,159 --> 00:22:17,440
the word

572
00:22:17,440 --> 00:22:20,480
x3 after round two becomes quarter uh

573
00:22:20,480 --> 00:22:22,400
initially it was quadratic so once you

574
00:22:22,400 --> 00:22:24,000
put this conditions

575
00:22:24,000 --> 00:22:26,960
the that word becomes uh linear so after

576
00:22:26,960 --> 00:22:28,480
five round next five rounds the maximum

577
00:22:28,480 --> 00:22:30,480
degree can be

578
00:22:30,480 --> 00:22:32,960
32 so that's why we select

579
00:22:32,960 --> 00:22:38,159
this indexing set of dimension uh 33

580
00:22:38,960 --> 00:22:41,760
okay so these are just the one of the

581
00:22:41,760 --> 00:22:43,200
examples

582
00:22:43,200 --> 00:22:45,919
and it depends on a particular indexing

583
00:22:45,919 --> 00:22:49,360
set only just one set i i one or i do

584
00:22:49,360 --> 00:22:51,039
now

585
00:22:51,039 --> 00:22:53,120
we may have multiple sets so for that we

586
00:22:53,120 --> 00:22:55,039
have to define like

587
00:22:55,039 --> 00:22:57,679
what is the actual number of

588
00:22:57,679 --> 00:22:59,600
keys

589
00:22:59,600 --> 00:23:00,960
so for that we

590
00:23:00,960 --> 00:23:02,159
are defining

591
00:23:02,159 --> 00:23:04,320
uh like how we can construct such a weak

592
00:23:04,320 --> 00:23:07,200
key space for xcom

593
00:23:07,200 --> 00:23:08,400
so

594
00:23:08,400 --> 00:23:10,159
this is the definition so

595
00:23:10,159 --> 00:23:12,480
we fix around r

596
00:23:12,480 --> 00:23:15,679
and also some partial integer d

597
00:23:15,679 --> 00:23:17,039
now

598
00:23:17,039 --> 00:23:20,400
we say that our key

599
00:23:20,400 --> 00:23:24,080
in wkrd is a weak key

600
00:23:24,080 --> 00:23:27,440
only if the following conditions holds

601
00:23:27,440 --> 00:23:29,919
so we look at the

602
00:23:29,919 --> 00:23:32,080
algebraic degree of the output bits

603
00:23:32,080 --> 00:23:33,919
after our rounds

604
00:23:33,919 --> 00:23:34,960
and

605
00:23:34,960 --> 00:23:37,760
we say that that key is weak

606
00:23:37,760 --> 00:23:39,919
if

607
00:23:39,919 --> 00:23:42,159
if there exists a

608
00:23:42,159 --> 00:23:44,000
d dimensional cube

609
00:23:44,000 --> 00:23:46,480
and we compute its degree after our

610
00:23:46,480 --> 00:23:47,520
rounds

611
00:23:47,520 --> 00:23:49,120
in all the 64

612
00:23:49,120 --> 00:23:51,279
output 64 output bits

613
00:23:51,279 --> 00:23:52,480
then

614
00:23:52,480 --> 00:23:54,880
the algebraic query is at most d minus

615
00:23:54,880 --> 00:23:56,480
1.

616
00:23:56,480 --> 00:23:58,000
if and

617
00:23:58,000 --> 00:24:00,799
in this case satisfying if for this key

618
00:24:00,799 --> 00:24:02,880
their axis always access this search

619
00:24:02,880 --> 00:24:05,840
queue then we say that key belongs to

620
00:24:05,840 --> 00:24:09,678
the bt space wkrd

621
00:24:10,000 --> 00:24:11,039
so

622
00:24:11,039 --> 00:24:14,880
how we construct uh this sort of uh set

623
00:24:14,880 --> 00:24:15,919
so

624
00:24:15,919 --> 00:24:18,400
the first step is

625
00:24:18,400 --> 00:24:20,080
uh

626
00:24:20,080 --> 00:24:22,400
we start with the indexing set i

627
00:24:22,400 --> 00:24:24,000
of diamond simply

628
00:24:24,000 --> 00:24:25,760
and which is uh

629
00:24:25,760 --> 00:24:30,000
which is subset of indices 0 to 63

630
00:24:30,000 --> 00:24:33,840
now we say uh

631
00:24:33,840 --> 00:24:38,320
we define wkrd as a set of 122-bit keys

632
00:24:38,320 --> 00:24:42,480
which satisfies this equation so

633
00:24:42,480 --> 00:24:44,640
if the index i

634
00:24:44,640 --> 00:24:49,200
belongs to 56 57 58 and 59 we take the

635
00:24:49,200 --> 00:24:51,840
complements this is because uh at this

636
00:24:51,840 --> 00:24:54,320
point the round constant bits are added

637
00:24:54,320 --> 00:24:55,440
so that's why we have to take the

638
00:24:55,440 --> 00:24:57,600
complement otherwise

639
00:24:57,600 --> 00:25:01,840
we take the k bits as equal

640
00:25:02,559 --> 00:25:05,840
here uh this is uh this set wkr is

641
00:25:05,840 --> 00:25:09,919
defined for this index at i only

642
00:25:09,919 --> 00:25:10,880
now

643
00:25:10,880 --> 00:25:14,640
we have 64 choose these such sets

644
00:25:14,640 --> 00:25:15,760
so

645
00:25:15,760 --> 00:25:17,279
we define

646
00:25:17,279 --> 00:25:18,799
wkrd

647
00:25:18,799 --> 00:25:23,520
as the union or also sets i

648
00:25:23,919 --> 00:25:25,919
now

649
00:25:25,919 --> 00:25:27,520
note that

650
00:25:27,520 --> 00:25:29,840
if a key is weak

651
00:25:29,840 --> 00:25:31,279
for some d

652
00:25:31,279 --> 00:25:34,159
some i equals d

653
00:25:34,159 --> 00:25:38,240
that means there exist a cube

654
00:25:38,559 --> 00:25:40,640
of dimension d and the algebraic degree

655
00:25:40,640 --> 00:25:41,679
is

656
00:25:41,679 --> 00:25:43,120
d minus 1

657
00:25:43,120 --> 00:25:44,080
so then

658
00:25:44,080 --> 00:25:46,000
it is trivial to see that

659
00:25:46,000 --> 00:25:49,120
if it is weak for i equals d then it is

660
00:25:49,120 --> 00:25:52,640
also weak for i equals d plus 1

661
00:25:52,640 --> 00:25:55,760
so in that case we can define uh we can

662
00:25:55,760 --> 00:25:58,320
take union for uh

663
00:25:58,320 --> 00:26:01,120
all the values of i starting from d

664
00:26:01,120 --> 00:26:02,480
so we can

665
00:26:02,480 --> 00:26:03,600
again

666
00:26:03,600 --> 00:26:05,520
take union

667
00:26:05,520 --> 00:26:08,159
for all such eyes so i start from d till

668
00:26:08,159 --> 00:26:10,880
64.

669
00:26:10,880 --> 00:26:11,919
so

670
00:26:11,919 --> 00:26:13,600
now we have this x now we have to find

671
00:26:13,600 --> 00:26:16,559
out like what's the actual size of this

672
00:26:16,559 --> 00:26:19,360
w k r where r is the number of round and

673
00:26:19,360 --> 00:26:20,130
d is some

674
00:26:20,130 --> 00:26:22,840
[Music]

675
00:26:22,840 --> 00:26:25,760
value okay so

676
00:26:25,760 --> 00:26:28,880
if we compute the lower bounds

677
00:26:28,880 --> 00:26:30,799
for

678
00:26:30,799 --> 00:26:33,039
this expression

679
00:26:33,039 --> 00:26:35,279
then we find that for

680
00:26:35,279 --> 00:26:39,120
if r equals 5 and d equals 30

681
00:26:39,120 --> 00:26:43,279
then almost everything is a weekly

682
00:26:43,679 --> 00:26:47,360
for six rounds we take t is 24 then

683
00:26:47,360 --> 00:26:48,720
again like

684
00:26:48,720 --> 00:26:52,320
uh there are two to power 127 wikis for

685
00:26:52,320 --> 00:26:54,080
r equals seven there are

686
00:26:54,080 --> 00:26:54,799
uh

687
00:26:54,799 --> 00:26:57,039
two to four one one six

688
00:26:57,039 --> 00:27:00,400
point three four wikis

689
00:27:00,400 --> 00:27:02,400
so now this d prime is like uh the

690
00:27:02,400 --> 00:27:04,080
second distribution which

691
00:27:04,080 --> 00:27:04,880
uh

692
00:27:04,880 --> 00:27:06,720
for which we have the another conditions

693
00:27:06,720 --> 00:27:08,480
where ki's are

694
00:27:08,480 --> 00:27:11,039
either equal to zero or

695
00:27:11,039 --> 00:27:13,679
equal to one

696
00:27:13,840 --> 00:27:16,000
so these are the x these are the

697
00:27:16,000 --> 00:27:17,840
only lower bounds

698
00:27:17,840 --> 00:27:19,440
the

699
00:27:19,440 --> 00:27:22,720
exact values it does not differ from the

700
00:27:22,720 --> 00:27:24,640
does not differ too much from the lower

701
00:27:24,640 --> 00:27:26,960
bound

702
00:27:27,120 --> 00:27:28,640
okay so now

703
00:27:28,640 --> 00:27:32,240
we know uh the size of the weak key so

704
00:27:32,240 --> 00:27:35,360
in our paper we also presented uh

705
00:27:35,360 --> 00:27:37,279
a text

706
00:27:37,279 --> 00:27:40,080
given that a key belongs to

707
00:27:40,080 --> 00:27:42,880
this vk space so we presented actually

708
00:27:42,880 --> 00:27:45,760
to attack our first attack

709
00:27:45,760 --> 00:27:48,399
regards to 2.64 data

710
00:27:48,399 --> 00:27:51,200
2 to the power 74 bits of memory and 2

711
00:27:51,200 --> 00:27:54,159
to the power 97 keys and uh

712
00:27:54,159 --> 00:27:56,240
this all the uh this attack is for the

713
00:27:56,240 --> 00:27:58,559
seven rounds

714
00:27:58,559 --> 00:28:00,000
so and

715
00:28:00,000 --> 00:28:01,919
we also presented another attack which

716
00:28:01,919 --> 00:28:04,720
requires two to power 63 data

717
00:28:04,720 --> 00:28:06,799
69 memory and

718
00:28:06,799 --> 00:28:09,600
2 to the power 115 time so basically our

719
00:28:09,600 --> 00:28:13,520
attack 2 answers the uh

720
00:28:13,520 --> 00:28:17,840
questions posed by rhss 21

721
00:28:17,919 --> 00:28:20,320
so for more details uh

722
00:28:20,320 --> 00:28:21,600
i suggest

723
00:28:21,600 --> 00:28:24,880
to look into your paper

724
00:28:24,880 --> 00:28:27,200
okay also note that

725
00:28:27,200 --> 00:28:29,440
the time complexities which i mentioned

726
00:28:29,440 --> 00:28:31,600
here they are in the worst cases

727
00:28:31,600 --> 00:28:33,200
so there is a

728
00:28:33,200 --> 00:28:34,880
lot of chance to

729
00:28:34,880 --> 00:28:36,640
improvement these complexities in terms

730
00:28:36,640 --> 00:28:37,600
of data

731
00:28:37,600 --> 00:28:40,480
memory and time

732
00:28:41,120 --> 00:28:42,159
so

733
00:28:42,159 --> 00:28:43,600
to conclude

734
00:28:43,600 --> 00:28:45,919
so what we have achieved in this work

735
00:28:45,919 --> 00:28:48,240
so for the first time

736
00:28:48,240 --> 00:28:51,520
we presented our distributors for s call

737
00:28:51,520 --> 00:28:53,600
on seven round with practical

738
00:28:53,600 --> 00:28:55,120
complexities

739
00:28:55,120 --> 00:28:57,840
we also presented the first q recovery

740
00:28:57,840 --> 00:28:58,799
attack

741
00:28:58,799 --> 00:29:01,120
which requires less than 2 to the power

742
00:29:01,120 --> 00:29:03,918
63 data

743
00:29:05,200 --> 00:29:07,279
and so

744
00:29:07,279 --> 00:29:08,559
also

745
00:29:08,559 --> 00:29:11,360
what we tried but we still didn't could

746
00:29:11,360 --> 00:29:13,919
not uh achieved was uh

747
00:29:13,919 --> 00:29:16,159
let's say here we are looking into the

748
00:29:16,159 --> 00:29:18,320
distinguishes with probability one

749
00:29:18,320 --> 00:29:20,399
so now let's say we restrict the

750
00:29:20,399 --> 00:29:22,240
probability of the distinguishes to some

751
00:29:22,240 --> 00:29:25,520
alpha between zero point five to one

752
00:29:25,520 --> 00:29:26,559
then

753
00:29:26,559 --> 00:29:28,399
definitely it should uh increase the

754
00:29:28,399 --> 00:29:30,799
number of weeks but we just

755
00:29:30,799 --> 00:29:32,559
did not find a

756
00:29:32,559 --> 00:29:35,360
direct way to how to work on this

757
00:29:35,360 --> 00:29:37,039
so maybe it's possible to improve the

758
00:29:37,039 --> 00:29:39,600
number of weak keys for seven rounds

759
00:29:39,600 --> 00:29:40,799
and then

760
00:29:40,799 --> 00:29:43,440
come up with a new attack

761
00:29:43,440 --> 00:29:45,200
also

762
00:29:45,200 --> 00:29:47,200
another question is how we can extend

763
00:29:47,200 --> 00:29:51,440
this weak gear text to full key space

764
00:29:51,440 --> 00:29:53,760
also uh

765
00:29:53,760 --> 00:29:56,399
important uh thing is as we know right

766
00:29:56,399 --> 00:29:57,760
now there are no

767
00:29:57,760 --> 00:30:00,559
eight round distinguishers for s com

768
00:30:00,559 --> 00:30:02,000
when it is used in the authenticated

769
00:30:02,000 --> 00:30:04,399
encryption mode so

770
00:30:04,399 --> 00:30:05,840
it could start with whether there are

771
00:30:05,840 --> 00:30:07,679
any wiki

772
00:30:07,679 --> 00:30:10,640
resource for eight rounds

773
00:30:10,640 --> 00:30:13,039
so yeah

774
00:30:13,039 --> 00:30:15,440
that's it uh thank you very much for

775
00:30:15,440 --> 00:30:17,760
your your time

776
00:30:17,760 --> 00:30:19,360
so if you need

777
00:30:19,360 --> 00:30:21,679
more details uh the source codes for all

778
00:30:21,679 --> 00:30:24,640
our attacks and distinguishes our

779
00:30:24,640 --> 00:30:28,000
mess are given in our paper and also

780
00:30:28,000 --> 00:30:30,080
it's available on imprint thank you very

781
00:30:30,080 --> 00:30:32,639
much

