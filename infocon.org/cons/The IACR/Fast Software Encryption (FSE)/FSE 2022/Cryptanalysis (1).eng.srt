1
00:00:05,440 --> 00:00:08,509
[Music]

2
00:00:14,320 --> 00:00:17,719
no it's uh

3
00:00:25,279 --> 00:00:27,599
yeah but it's okay but uh i'll just keep

4
00:00:27,599 --> 00:00:30,599
track

5
00:00:33,120 --> 00:00:36,640
so i think we can have again

6
00:00:42,239 --> 00:00:44,559
so uh hello everybody and welcome to the

7
00:00:44,559 --> 00:00:46,320
crypto analysis uh first quarter

8
00:00:46,320 --> 00:00:48,960
analysis session uh we're going to have

9
00:00:48,960 --> 00:00:51,760
uh six papers presented at the sec at

10
00:00:51,760 --> 00:00:52,879
the session

11
00:00:52,879 --> 00:00:54,800
and the the first paper is going to be

12
00:00:54,800 --> 00:00:57,760
uh increasing uh precision of division

13
00:00:57,760 --> 00:00:59,760
property by uh

14
00:00:59,760 --> 00:01:02,079
and the patrick derbys is going to give

15
00:01:02,079 --> 00:01:05,119
that up so go ahead

16
00:01:05,119 --> 00:01:06,960
can you point the camera a little bit

17
00:01:06,960 --> 00:01:10,240
higher so we can see your face

18
00:01:11,520 --> 00:01:14,640
okay thank you for the introduction so

19
00:01:14,640 --> 00:01:17,119
i will

20
00:01:18,320 --> 00:01:20,880
i will not introduce uh what is division

21
00:01:20,880 --> 00:01:22,960
property but somehow it's

22
00:01:22,960 --> 00:01:24,880
a tool to

23
00:01:24,880 --> 00:01:28,560
track the biggest monomials of iterated

24
00:01:28,560 --> 00:01:29,920
functions

25
00:01:29,920 --> 00:01:32,560
so basically to search for

26
00:01:32,560 --> 00:01:37,040
division property related properties

27
00:01:37,040 --> 00:01:39,920
we look for division trades through

28
00:01:39,920 --> 00:01:42,240
iterated functions and

29
00:01:42,240 --> 00:01:44,320
so you have to

30
00:01:44,320 --> 00:01:46,560
divide to decompose your function your

31
00:01:46,560 --> 00:01:49,200
target into several layers and each

32
00:01:49,200 --> 00:01:51,360
layer is a very small one very small

33
00:01:51,360 --> 00:01:54,320
layer like smaller box or linear layer

34
00:01:54,320 --> 00:01:57,520
and or any binary operation because you

35
00:01:57,520 --> 00:02:00,159
need to be able to compute the

36
00:02:00,159 --> 00:02:02,159
polynomial expression of

37
00:02:02,159 --> 00:02:05,280
any output bits and of any product of

38
00:02:05,280 --> 00:02:07,600
output bits

39
00:02:07,600 --> 00:02:10,399
the problem of division property is that

40
00:02:10,399 --> 00:02:11,360
he

41
00:02:11,360 --> 00:02:14,319
does not really handle the operation

42
00:02:14,319 --> 00:02:17,200
because it does not see any monomial

43
00:02:17,200 --> 00:02:20,000
constellation through the

44
00:02:20,000 --> 00:02:22,480
composition of functions

45
00:02:22,480 --> 00:02:24,800
so what we did in this work

46
00:02:24,800 --> 00:02:26,640
is all about increasing the the

47
00:02:26,640 --> 00:02:28,480
precision of division properties so

48
00:02:28,480 --> 00:02:30,319
first

49
00:02:30,319 --> 00:02:33,200
our idea was to handle larger functions

50
00:02:33,200 --> 00:02:34,840
larger layers than

51
00:02:34,840 --> 00:02:37,200
previously so

52
00:02:37,200 --> 00:02:38,800
we

53
00:02:38,800 --> 00:02:41,280
proposed a new algorithm to compute

54
00:02:41,280 --> 00:02:44,720
valid division property propagation uh

55
00:02:44,720 --> 00:02:46,879
for superiorized boxes and for

56
00:02:46,879 --> 00:02:48,800
big

57
00:02:48,800 --> 00:02:52,640
big functions up to uh 16 bits

58
00:02:52,640 --> 00:02:55,280
okay so basically this new algorithm

59
00:02:55,280 --> 00:02:57,760
takes as input a collection of k and big

60
00:02:57,760 --> 00:03:00,239
functions and output the propagation

61
00:03:00,239 --> 00:03:01,920
tables containing

62
00:03:01,920 --> 00:03:03,840
all the transitions which are valid for

63
00:03:03,840 --> 00:03:06,319
at least one of the function and i

64
00:03:06,319 --> 00:03:08,640
insist that this is not a wiki model

65
00:03:08,640 --> 00:03:10,480
okay because in division property you

66
00:03:10,480 --> 00:03:11,599
have

67
00:03:11,599 --> 00:03:14,000
an integral distinguisher if and only if

68
00:03:14,000 --> 00:03:15,680
there is no trail

69
00:03:15,680 --> 00:03:16,720
so

70
00:03:16,720 --> 00:03:18,640
so it works so here you have the

71
00:03:18,640 --> 00:03:21,599
complexity of uh our new algorithm

72
00:03:21,599 --> 00:03:22,560
and

73
00:03:22,560 --> 00:03:24,959
uh we have successfully applied it to a

74
00:03:24,959 --> 00:03:28,959
to a superls boxes of many many ciphers

75
00:03:28,959 --> 00:03:31,920
and it takes around two hours on a 128

76
00:03:31,920 --> 00:03:33,840
corsair

77
00:03:33,840 --> 00:03:36,159
the second improvement we made in this

78
00:03:36,159 --> 00:03:39,360
paper is related to

79
00:03:39,360 --> 00:03:41,200
extended distinguishable so basically we

80
00:03:41,200 --> 00:03:42,720
know that division property is not

81
00:03:42,720 --> 00:03:44,319
linearly in variance

82
00:03:44,319 --> 00:03:47,519
and so if if you want to study

83
00:03:47,519 --> 00:03:49,840
a given cipher you need to

84
00:03:49,840 --> 00:03:53,040
study it uh for with all possible linear

85
00:03:53,040 --> 00:03:55,920
mappings at the the end or the

86
00:03:55,920 --> 00:03:57,519
the front of the cipher

87
00:03:57,519 --> 00:04:00,400
and we started this work with

88
00:04:00,400 --> 00:04:02,400
batista number and basically at this

89
00:04:02,400 --> 00:04:04,239
time we proposed to uh

90
00:04:04,239 --> 00:04:07,200
to try all invertible matrices but in

91
00:04:07,200 --> 00:04:10,799
this world we found that we can reduce

92
00:04:10,799 --> 00:04:12,480
the number of

93
00:04:12,480 --> 00:04:14,400
of possibilities of linear mappings to

94
00:04:14,400 --> 00:04:15,200
try

95
00:04:15,200 --> 00:04:16,238
okay and

96
00:04:16,238 --> 00:04:18,160
basically if you don't want to reduce

97
00:04:18,160 --> 00:04:20,238
the data complexity of

98
00:04:20,238 --> 00:04:20,959
of

99
00:04:20,959 --> 00:04:23,040
integral distinguisher you only have two

100
00:04:23,040 --> 00:04:24,400
to the end

101
00:04:24,400 --> 00:04:26,639
linear mapping to try uh in front of the

102
00:04:26,639 --> 00:04:28,800
cipher and to the end the number things

103
00:04:28,800 --> 00:04:31,120
to try at the end of the cipher

104
00:04:31,120 --> 00:04:31,919
and

105
00:04:31,919 --> 00:04:33,919
this combines well with the superior box

106
00:04:33,919 --> 00:04:35,919
techniques and there are

107
00:04:35,919 --> 00:04:38,479
minimal

108
00:04:39,199 --> 00:04:41,520
pairs of mappings to try for meaning

109
00:04:41,520 --> 00:04:43,919
that if there is no distinguishers for

110
00:04:43,919 --> 00:04:45,759
those pairs there will know

111
00:04:45,759 --> 00:04:47,759
there will be no distinguisher for any

112
00:04:47,759 --> 00:04:48,800
pairs

113
00:04:48,800 --> 00:04:49,919
okay

114
00:04:49,919 --> 00:04:52,880
and uh the problem not so now we

115
00:04:52,880 --> 00:04:54,880
introduced all that so the problem was

116
00:04:54,880 --> 00:04:58,080
how to search for for distinguishers and

117
00:04:58,080 --> 00:05:01,520
the main the main problem is that

118
00:05:01,600 --> 00:05:03,680
so so most

119
00:05:03,680 --> 00:05:04,880
models

120
00:05:04,880 --> 00:05:06,160
to search for the integral

121
00:05:06,160 --> 00:05:09,039
distinguishers are generic solvers are

122
00:05:09,039 --> 00:05:12,160
used generic solvers are sat or milp and

123
00:05:12,160 --> 00:05:15,360
the primes are describing the constraint

124
00:05:15,360 --> 00:05:16,960
for

125
00:05:16,960 --> 00:05:20,000
so the constraints for describing

126
00:05:20,000 --> 00:05:22,400
the propagation table of superiorized

127
00:05:22,400 --> 00:05:24,880
boxes are too big okay

128
00:05:24,880 --> 00:05:26,880
in the propagation table of supers boxes

129
00:05:26,880 --> 00:05:27,600
are

130
00:05:27,600 --> 00:05:28,320
like

131
00:05:28,320 --> 00:05:31,120
millions of constraints and uh of valid

132
00:05:31,120 --> 00:05:33,039
transitions and describing it into a

133
00:05:33,039 --> 00:05:35,680
milp model leads to very inefficient

134
00:05:35,680 --> 00:05:38,000
models so that was recently solved by

135
00:05:38,000 --> 00:05:39,840
uttowenko but

136
00:05:39,840 --> 00:05:42,639
in this paper we choose another way so

137
00:05:42,639 --> 00:05:45,680
we implemented uh an addock tool to

138
00:05:45,680 --> 00:05:47,919
search for such distinguishers so

139
00:05:47,919 --> 00:05:50,639
it's a basic tool based on the branch

140
00:05:50,639 --> 00:05:52,720
and bone approach and it takes

141
00:05:52,720 --> 00:05:55,440
functions so block ciphers which are

142
00:05:55,440 --> 00:05:57,520
of this form so

143
00:05:57,520 --> 00:06:00,080
each round or layer

144
00:06:00,080 --> 00:06:02,000
are decomposed into

145
00:06:02,000 --> 00:06:02,880
four

146
00:06:02,880 --> 00:06:06,560
16 to 16 bit functions okay which may

147
00:06:06,560 --> 00:06:08,160
depend on the key

148
00:06:08,160 --> 00:06:12,000
and then enable permutation okay so if

149
00:06:12,000 --> 00:06:14,800
each formula has this form it's okay and

150
00:06:14,800 --> 00:06:17,520
the function f does not

151
00:06:17,520 --> 00:06:19,600
do not need to be the same for each

152
00:06:19,600 --> 00:06:23,120
round okay so this is very generic

153
00:06:23,120 --> 00:06:24,880
we applied this tool

154
00:06:24,880 --> 00:06:27,600
against three cyphers so against midori

155
00:06:27,600 --> 00:06:32,000
64 skinny 64 and height and we found

156
00:06:32,000 --> 00:06:34,319
many new integral distinguishers again

157
00:06:34,319 --> 00:06:36,560
those ciphers

158
00:06:36,560 --> 00:06:38,960
so you have all the results here and in

159
00:06:38,960 --> 00:06:41,280
particular we also found many

160
00:06:41,280 --> 00:06:43,600
integral distinguishers with low data

161
00:06:43,600 --> 00:06:46,000
complexity okay by setting

162
00:06:46,000 --> 00:06:47,520
the input of

163
00:06:47,520 --> 00:06:51,120
many superiors boxes to constant

164
00:06:51,120 --> 00:06:52,319
so

165
00:06:52,319 --> 00:06:54,000
that's all uh

166
00:06:54,000 --> 00:06:56,720
for in five minutes so you have

167
00:06:56,720 --> 00:06:57,840
all the

168
00:06:57,840 --> 00:07:00,880
the code of our tool is available here

169
00:07:00,880 --> 00:07:02,960
it's very easy to use

170
00:07:02,960 --> 00:07:04,479
and if you want

171
00:07:04,479 --> 00:07:05,840
if you have any questions about this

172
00:07:05,840 --> 00:07:08,160
tool i can help you with it

173
00:07:08,160 --> 00:07:11,360
thank you for your attention

174
00:07:14,000 --> 00:07:15,599
thank

175
00:07:15,599 --> 00:07:17,680
any question uh maybe one full question

176
00:07:17,680 --> 00:07:20,479
that we have time

177
00:07:22,000 --> 00:07:26,919
okay so uh let's thank patrick again

178
00:07:34,000 --> 00:07:36,479
um i believe the the next

179
00:07:36,479 --> 00:07:37,840
talk will be

180
00:07:37,840 --> 00:07:40,799
presented online

181
00:07:41,520 --> 00:07:44,840
and uh

182
00:07:49,840 --> 00:07:53,119
so do you hear me and zoom

183
00:07:53,840 --> 00:07:55,360
yes

184
00:07:55,360 --> 00:07:57,440
okay so it's going to be on the

185
00:07:57,440 --> 00:07:59,680
relations between different methods of

186
00:07:59,680 --> 00:08:01,360
degree evaluation

187
00:08:01,360 --> 00:08:03,599
and it's going to be given by uh sir

188
00:08:03,599 --> 00:08:04,720
chen

189
00:08:04,720 --> 00:08:07,280
so uh please go ahead

190
00:08:07,280 --> 00:08:09,360
thank you

191
00:08:09,360 --> 00:08:10,560
hello everyone

192
00:08:10,560 --> 00:08:12,800
i'm susan

193
00:08:12,800 --> 00:08:14,879
the title of this report is on

194
00:08:14,879 --> 00:08:17,280
relationships between different measures

195
00:08:17,280 --> 00:08:19,199
or degree values

196
00:08:19,199 --> 00:08:21,520
this is the turn work with tradition

197
00:08:21,520 --> 00:08:25,120
changing and shutter zone

198
00:08:25,120 --> 00:08:27,759
our report is converged for past uh

199
00:08:27,759 --> 00:08:29,840
first we will give a brief instruction

200
00:08:29,840 --> 00:08:32,880
on the background of our work and we

201
00:08:32,880 --> 00:08:36,320
then uh discuss the degree evaluation of

202
00:08:36,320 --> 00:08:40,799
aspirin and nfs srb servers in part two

203
00:08:40,799 --> 00:08:43,360
and part three finally we will conclude

204
00:08:43,360 --> 00:08:46,720
our work in pubmed

205
00:08:47,200 --> 00:08:49,839
the outputs of the metric servers can be

206
00:08:49,839 --> 00:08:52,560
regarded as point functions over the

207
00:08:52,560 --> 00:08:55,120
input variables so if

208
00:08:55,120 --> 00:08:59,040
server xp is low as per degree some

209
00:08:59,040 --> 00:09:00,640
distinguishing

210
00:09:00,640 --> 00:09:02,160
recovery cuts

211
00:09:02,160 --> 00:09:04,800
can be achieved so it's very

212
00:09:04,800 --> 00:09:07,680
important to estimate the test bonds on

213
00:09:07,680 --> 00:09:10,880
the algebraic degree

214
00:09:11,200 --> 00:09:13,680
there are four effective long-term

215
00:09:13,680 --> 00:09:16,560
measures for degree evaluation

216
00:09:16,560 --> 00:09:18,880
first for the aspirin servers

217
00:09:18,880 --> 00:09:21,519
there are two formulae based bonds the

218
00:09:21,519 --> 00:09:22,560
ways

219
00:09:22,560 --> 00:09:26,080
purposed by burra and candies we call it

220
00:09:26,080 --> 00:09:27,360
this event

221
00:09:27,360 --> 00:09:30,399
another one is proposed by khalid we

222
00:09:30,399 --> 00:09:33,839
call it california this example shows

223
00:09:33,839 --> 00:09:37,839
the effectiveness of the two bonds

224
00:09:38,240 --> 00:09:41,040
for an isr based servers

225
00:09:41,040 --> 00:09:43,920
new proposed method called numeric

226
00:09:43,920 --> 00:09:45,600
mapping and

227
00:09:45,600 --> 00:09:49,279
especially for trimming like servers

228
00:09:49,279 --> 00:09:54,160
facing algorithm was given in this paper

229
00:09:54,240 --> 00:09:56,399
last one is division property

230
00:09:56,399 --> 00:09:58,480
in the application to search for

231
00:09:58,480 --> 00:10:01,519
integral distinguisher we usually

232
00:10:01,519 --> 00:10:05,360
fix the input gp and to

233
00:10:05,360 --> 00:10:08,079
minimize the output dp

234
00:10:08,079 --> 00:10:10,959
when evaluating the algebraic degree

235
00:10:10,959 --> 00:10:13,519
it's a reserved precise

236
00:10:13,519 --> 00:10:17,200
that is we fix the output dp and to

237
00:10:17,200 --> 00:10:18,480
maximize

238
00:10:18,480 --> 00:10:19,839
the

239
00:10:19,839 --> 00:10:21,519
input dp

240
00:10:21,519 --> 00:10:23,839
and the minimum uh

241
00:10:23,839 --> 00:10:26,959
sorry the maximum of the input dp can be

242
00:10:26,959 --> 00:10:29,200
regarded as

243
00:10:29,200 --> 00:10:33,720
upwards on the algebraic degree

244
00:10:34,800 --> 00:10:39,680
let us first focus on the espn servers

245
00:10:39,920 --> 00:10:42,000
from the previous introduction we know

246
00:10:42,000 --> 00:10:42,880
that

247
00:10:42,880 --> 00:10:45,040
bdp method

248
00:10:45,040 --> 00:10:48,480
is the whole process but the two bonds

249
00:10:48,480 --> 00:10:50,880
is a iterative process

250
00:10:50,880 --> 00:10:54,000
so we cannot compare them

251
00:10:54,000 --> 00:10:55,519
straightforwardly

252
00:10:55,519 --> 00:10:57,200
so we have to

253
00:10:57,200 --> 00:11:00,959
construct the bridge to link them

254
00:11:00,959 --> 00:11:04,560
okay this is our bridge it's a new bond

255
00:11:04,560 --> 00:11:07,680
on the degree of compulsive function of

256
00:11:07,680 --> 00:11:10,800
g and ft

257
00:11:11,519 --> 00:11:13,200
and

258
00:11:13,200 --> 00:11:16,880
the t is the flexible integer so in the

259
00:11:16,880 --> 00:11:18,800
case of t b1

260
00:11:18,800 --> 00:11:20,240
we can

261
00:11:20,240 --> 00:11:23,040
have the two conclusion

262
00:11:23,040 --> 00:11:26,240
they are they indicate that our

263
00:11:26,240 --> 00:11:29,360
new bond is more accurate than pc bonds

264
00:11:29,360 --> 00:11:32,079
and the current bonds

265
00:11:32,079 --> 00:11:33,279
these

266
00:11:33,279 --> 00:11:36,320
proofs of the two conclusions we omit

267
00:11:36,320 --> 00:11:37,600
here

268
00:11:37,600 --> 00:11:39,680
if you are interest

269
00:11:39,680 --> 00:11:44,079
in them you can refer to our paper

270
00:11:44,079 --> 00:11:46,640
so let us focus on the

271
00:11:46,640 --> 00:11:50,560
feedback device property with two pumps

272
00:11:50,560 --> 00:11:53,440
this is our bridge

273
00:11:53,440 --> 00:11:54,880
by fixing

274
00:11:54,880 --> 00:11:58,000
the value of the different value of g

275
00:11:58,000 --> 00:12:01,120
and considering different type of

276
00:12:01,120 --> 00:12:05,279
division property we have three models

277
00:12:05,279 --> 00:12:07,680
the first models we consider

278
00:12:07,680 --> 00:12:10,880
the speed basis property and the g is a

279
00:12:10,880 --> 00:12:12,639
identical function

280
00:12:12,639 --> 00:12:14,160
that is the

281
00:12:14,160 --> 00:12:16,959
algebraic degree of g is

282
00:12:16,959 --> 00:12:20,399
actually one and we said t2 r

283
00:12:20,399 --> 00:12:21,680
in model 2

284
00:12:21,680 --> 00:12:24,480
we can see the word division property

285
00:12:24,480 --> 00:12:26,320
and in modus 3

286
00:12:26,320 --> 00:12:27,680
we consider the wordpress division

287
00:12:27,680 --> 00:12:30,560
property and the reset g21

288
00:12:30,560 --> 00:12:32,639
in this case

289
00:12:32,639 --> 00:12:35,920
the function g is the worries vary with

290
00:12:35,920 --> 00:12:38,240
the run increasing

291
00:12:38,240 --> 00:12:39,360
so

292
00:12:39,360 --> 00:12:41,200
literally

293
00:12:41,200 --> 00:12:44,399
uh btp method is equivalent to the

294
00:12:44,399 --> 00:12:45,760
module one

295
00:12:45,760 --> 00:12:49,360
and from the previous analysis below the

296
00:12:49,360 --> 00:12:53,920
moto 3 is more accurate than the toolbox

297
00:12:53,920 --> 00:12:55,120
moreover

298
00:12:55,120 --> 00:12:57,920
a pdp is a more accurate division

299
00:12:57,920 --> 00:12:59,200
property type

300
00:12:59,200 --> 00:13:02,320
than word than wptp and

301
00:13:02,320 --> 00:13:05,200
the model 2

302
00:13:05,200 --> 00:13:08,480
considers the influence of

303
00:13:08,480 --> 00:13:11,600
uh linear life on the

304
00:13:11,600 --> 00:13:14,720
division property propagation so

305
00:13:14,720 --> 00:13:16,800
the model one is more accurate than

306
00:13:16,800 --> 00:13:19,040
model two and model two is more accurate

307
00:13:19,040 --> 00:13:22,160
than other three as a result

308
00:13:22,160 --> 00:13:24,959
we have this conclusion is that

309
00:13:24,959 --> 00:13:28,399
the pdp method is more accurate than the

310
00:13:28,399 --> 00:13:30,959
two bonds

311
00:13:32,480 --> 00:13:37,440
let us consider the nfl service safers

312
00:13:37,440 --> 00:13:40,320
assuming that there is a simplified

313
00:13:40,320 --> 00:13:44,560
stream server based on an nps fsr

314
00:13:44,560 --> 00:13:46,399
this is the

315
00:13:46,399 --> 00:13:49,920
update process of the interstate

316
00:13:49,920 --> 00:13:52,160
and the function g is the update

317
00:13:52,160 --> 00:13:55,760
function and f is the output function

318
00:13:55,760 --> 00:13:57,519
this is the

319
00:13:57,519 --> 00:13:59,920
simplified process of

320
00:13:59,920 --> 00:14:02,920
encryption

321
00:14:03,440 --> 00:14:06,880
we first proposed two bonds on the dp

322
00:14:06,880 --> 00:14:10,399
degrees of ant and

323
00:14:10,399 --> 00:14:13,040
the xor operations

324
00:14:13,040 --> 00:14:15,600
as death states in proposition 4 and

325
00:14:15,600 --> 00:14:17,440
proposition 5.

326
00:14:17,440 --> 00:14:21,120
proposition 4 indicates that

327
00:14:21,600 --> 00:14:24,959
for the molument its dp decrease is no

328
00:14:24,959 --> 00:14:27,600
more than the sum of the

329
00:14:27,600 --> 00:14:30,959
dpt grades of the involved states

330
00:14:30,959 --> 00:14:34,399
and the problem 5 indicates that

331
00:14:34,399 --> 00:14:37,040
for a polynomial

332
00:14:37,040 --> 00:14:40,880
its dp degree is the maximum

333
00:14:40,880 --> 00:14:43,839
of the db degrees of the constant

334
00:14:43,839 --> 00:14:45,839
monomials

335
00:14:45,839 --> 00:14:47,519
now based on the

336
00:14:47,519 --> 00:14:51,040
two propositions we have this conclusion

337
00:14:51,040 --> 00:14:52,560
is that for

338
00:14:52,560 --> 00:14:54,560
all state beat

339
00:14:54,560 --> 00:14:56,560
at alcoholic

340
00:14:56,560 --> 00:14:58,560
or its tp degree

341
00:14:58,560 --> 00:15:00,800
is more accurate than its numerator

342
00:15:00,800 --> 00:15:03,199
degree

343
00:15:04,079 --> 00:15:05,839
and note that

344
00:15:05,839 --> 00:15:09,040
as well is the initial state so

345
00:15:09,040 --> 00:15:12,639
the pulse of the dpdk and

346
00:15:12,639 --> 00:15:15,680
numerator degree are equal to the exact

347
00:15:15,680 --> 00:15:18,079
degree

348
00:15:18,880 --> 00:15:20,639
at clock 1

349
00:15:20,639 --> 00:15:23,360
the state action

350
00:15:23,360 --> 00:15:25,680
we can get this form

351
00:15:25,680 --> 00:15:29,120
from the proposition 5 and

352
00:15:29,120 --> 00:15:30,000
this

353
00:15:30,000 --> 00:15:34,720
can be rewritten as sorry let's try to

354
00:15:34,720 --> 00:15:37,519
wrap up we're running out of time

355
00:15:37,519 --> 00:15:40,160
oh ok ok

356
00:15:40,160 --> 00:15:42,320
so we can have this form from

357
00:15:42,320 --> 00:15:44,399
conversation four

358
00:15:44,399 --> 00:15:45,440
so

359
00:15:45,440 --> 00:15:49,440
finally we have uh for the state as n as

360
00:15:49,440 --> 00:15:52,560
clock one we have its tp degree is

361
00:15:52,560 --> 00:15:54,560
more curious than

362
00:15:54,560 --> 00:15:57,518
a numeric degree

363
00:16:03,839 --> 00:16:05,600
we commit the

364
00:16:05,600 --> 00:16:07,600
experiment with us

365
00:16:07,600 --> 00:16:09,839
so

366
00:16:10,720 --> 00:16:12,480
so in this work

367
00:16:12,480 --> 00:16:14,880
we give arguments on the relationships

368
00:16:14,880 --> 00:16:17,440
between different measures for

369
00:16:17,440 --> 00:16:19,360
algebraic degree evaluation and we

370
00:16:19,360 --> 00:16:22,480
conclude that division property is the

371
00:16:22,480 --> 00:16:27,600
most one from the accuracy perspective

372
00:16:27,600 --> 00:16:31,279
in fact there are two methods to compute

373
00:16:31,279 --> 00:16:33,839
the exact degrees

374
00:16:33,839 --> 00:16:35,839
there are monomial prediction and the

375
00:16:35,839 --> 00:16:38,720
three subset division property but

376
00:16:38,720 --> 00:16:41,199
you have to

377
00:16:41,199 --> 00:16:43,600
explore some special

378
00:16:43,600 --> 00:16:46,000
optimization strategies because both of

379
00:16:46,000 --> 00:16:46,959
them

380
00:16:46,959 --> 00:16:49,759
have to enumerate what the choose from

381
00:16:49,759 --> 00:16:51,279
the input

382
00:16:51,279 --> 00:16:53,920
propagating to the output

383
00:16:53,920 --> 00:16:56,480
so if you only want to

384
00:16:56,480 --> 00:16:58,160
get the overview

385
00:16:58,160 --> 00:17:01,440
on the degree of server

386
00:17:01,440 --> 00:17:02,480
the

387
00:17:02,480 --> 00:17:04,880
to subside division property

388
00:17:04,880 --> 00:17:06,240
will be the

389
00:17:06,240 --> 00:17:08,400
best choice

390
00:17:08,400 --> 00:17:10,799
that's all my report

391
00:17:10,799 --> 00:17:13,199
thank you

392
00:17:17,039 --> 00:17:19,839
thank you very much

393
00:17:21,039 --> 00:17:23,520
so uh i think we we don't have time for

394
00:17:23,520 --> 00:17:25,839
questions so uh we'll uh

395
00:17:25,839 --> 00:17:28,240
move to the next talk

396
00:17:28,240 --> 00:17:31,240
okay

397
00:17:51,520 --> 00:17:54,520
yes

398
00:18:13,120 --> 00:18:15,840
um

399
00:18:18,000 --> 00:18:19,919
oh you mean close the files

400
00:18:19,919 --> 00:18:22,480
oh okay

401
00:18:24,080 --> 00:18:27,799
so we can go back

402
00:18:29,600 --> 00:18:31,918
yes

403
00:18:33,039 --> 00:18:34,559
yeah okay we don't see it anymore we

404
00:18:34,559 --> 00:18:37,360
don't see it yeah

405
00:18:38,480 --> 00:18:39,600
okay

406
00:18:39,600 --> 00:18:42,080
no this one right yeah okay then we'll

407
00:18:42,080 --> 00:18:43,840
go back

408
00:18:43,840 --> 00:18:46,559
to the screen

409
00:18:46,960 --> 00:18:50,080
and now for one

410
00:18:55,039 --> 00:18:58,080
okay so uh the next talk uh is going to

411
00:18:58,080 --> 00:18:59,120
uh

412
00:18:59,120 --> 00:19:01,520
be influence of a linear degree on the

413
00:19:01,520 --> 00:19:03,919
algebraic degree of sp networks and it's

414
00:19:03,919 --> 00:19:06,400
going to be given by reinhard uh

415
00:19:06,400 --> 00:19:08,400
luft lufthandr

416
00:19:08,400 --> 00:19:11,840
so uh let's go in

417
00:19:17,200 --> 00:19:18,240
all right yeah thanks for the

418
00:19:18,240 --> 00:19:19,919
introduction

419
00:19:19,919 --> 00:19:21,600
so yeah this is a joint work together

420
00:19:21,600 --> 00:19:23,600
with carlos from royal holloway

421
00:19:23,600 --> 00:19:26,000
university in london lorenz and aldo

422
00:19:26,000 --> 00:19:27,360
from the rutgers university in the

423
00:19:27,360 --> 00:19:30,960
netherlands and kristen and marcus from

424
00:19:30,960 --> 00:19:32,799
our research group at graz university of

425
00:19:32,799 --> 00:19:35,440
technology

426
00:19:37,600 --> 00:19:39,600
in our work we're studying the algebraic

427
00:19:39,600 --> 00:19:41,280
the green substitution permutation

428
00:19:41,280 --> 00:19:42,559
networks

429
00:19:42,559 --> 00:19:43,679
but

430
00:19:43,679 --> 00:19:45,919
why is this important at all

431
00:19:45,919 --> 00:19:47,919
we have seen a slide in the previous

432
00:19:47,919 --> 00:19:51,600
talk but i may repeat it anyway

433
00:19:51,600 --> 00:19:54,080
so it is the algebraic degree

434
00:19:54,080 --> 00:19:56,160
that determines the cost of

435
00:19:56,160 --> 00:20:00,320
several types of algebraic cryptanalysis

436
00:20:00,320 --> 00:20:01,840
i'm speaking here of interpolation

437
00:20:01,840 --> 00:20:03,280
cryptanalysis

438
00:20:03,280 --> 00:20:05,039
high order differentials

439
00:20:05,039 --> 00:20:07,039
and to some extent also of solving

440
00:20:07,039 --> 00:20:11,360
systems of polynomial equations over f2

441
00:20:11,760 --> 00:20:14,960
the problem is in practice we don't

442
00:20:14,960 --> 00:20:17,440
know the exact algebraic degree of

443
00:20:17,440 --> 00:20:20,880
full-scale cryptographic permutations

444
00:20:20,880 --> 00:20:22,799
so this is the reason why we establish

445
00:20:22,799 --> 00:20:26,400
upper bounds on the algebraic degree

446
00:20:30,080 --> 00:20:32,720
in our work we present and prove a new

447
00:20:32,720 --> 00:20:34,799
upper bound on the algebraic degree in

448
00:20:34,799 --> 00:20:37,440
spns

449
00:20:37,679 --> 00:20:40,799
and what is special about our bound is

450
00:20:40,799 --> 00:20:43,120
besides the degree of the non-linear

451
00:20:43,120 --> 00:20:44,880
layer it also considers the degree of

452
00:20:44,880 --> 00:20:47,440
the linear layer for its estimate and

453
00:20:47,440 --> 00:20:50,080
they say special because other

454
00:20:50,080 --> 00:20:52,240
state-of-the-art bounds do not use this

455
00:20:52,240 --> 00:20:55,919
property for this for their estimate

456
00:20:56,720 --> 00:20:58,640
yeah most notably our bound is

457
00:20:58,640 --> 00:21:00,799
considerably tighter for low degree

458
00:21:00,799 --> 00:21:04,400
round functions with large s boxes

459
00:21:04,400 --> 00:21:06,640
but on the contrary it may not improve a

460
00:21:06,640 --> 00:21:09,120
state of the outbounds for small s boxes

461
00:21:09,120 --> 00:21:12,479
or high degree round functions

462
00:21:13,600 --> 00:21:16,080
and speaking of the actual comparison so

463
00:21:16,080 --> 00:21:18,400
we compare our bound with the bounds by

464
00:21:18,400 --> 00:21:20,320
christina burr and cantor and christophe

465
00:21:20,320 --> 00:21:21,760
de canier

466
00:21:21,760 --> 00:21:22,880
which is

467
00:21:22,880 --> 00:21:25,200
arguably the best theoretic upper bound

468
00:21:25,200 --> 00:21:26,880
in the literature

469
00:21:26,880 --> 00:21:29,200
and yeah i will refer to this bounce as

470
00:21:29,200 --> 00:21:32,080
the bcd bounce

471
00:21:32,780 --> 00:21:35,920
[Music]

472
00:21:36,000 --> 00:21:38,400
so if you'd asked me about a

473
00:21:38,400 --> 00:21:41,039
visualization of our results then i'd

474
00:21:41,039 --> 00:21:44,640
probably answer with this slide

475
00:21:44,640 --> 00:21:46,960
so the diagram on this slide shows

476
00:21:46,960 --> 00:21:49,039
several bounds on the algebraic degree

477
00:21:49,039 --> 00:21:51,520
for an spn here

478
00:21:51,520 --> 00:21:54,320
with eight words and each word is

479
00:21:54,320 --> 00:21:58,240
operating over f2 to the 33.

480
00:21:58,240 --> 00:22:00,559
the s-box function here is the cubic

481
00:22:00,559 --> 00:22:02,720
functions the cubic function

482
00:22:02,720 --> 00:22:05,440
and the degree of the linear layer here

483
00:22:05,440 --> 00:22:08,480
ranges from one to eight

484
00:22:08,480 --> 00:22:09,200
so

485
00:22:09,200 --> 00:22:12,240
now this horizontal black dashed line

486
00:22:12,240 --> 00:22:15,280
shows the maximal algebraic degree

487
00:22:15,280 --> 00:22:17,840
whereas the blue line i don't know if

488
00:22:17,840 --> 00:22:19,679
you can see the color so that the

489
00:22:19,679 --> 00:22:25,120
leftmost graph depicts the bcd bounds

490
00:22:25,200 --> 00:22:26,720
for the other lines

491
00:22:26,720 --> 00:22:28,080
they depict

492
00:22:28,080 --> 00:22:30,960
our bounds on the algebraic degree for

493
00:22:30,960 --> 00:22:35,840
various degrees of the linear layer

494
00:22:38,000 --> 00:22:40,960
maybe two important points to note here

495
00:22:40,960 --> 00:22:43,039
so first of all you can see that there

496
00:22:43,039 --> 00:22:45,760
is a there are potentially two phases of

497
00:22:45,760 --> 00:22:47,520
algebraic degree growth

498
00:22:47,520 --> 00:22:48,960
there's a phase of

499
00:22:48,960 --> 00:22:50,880
exponential growth for the beginning

500
00:22:50,880 --> 00:22:52,880
number of rounds and

501
00:22:52,880 --> 00:22:55,760
followed by a phase of linear growth for

502
00:22:55,760 --> 00:22:59,120
the remaining number of rounds

503
00:23:00,000 --> 00:23:02,000
our bound helps to quantify these two

504
00:23:02,000 --> 00:23:03,600
phases

505
00:23:03,600 --> 00:23:05,039
so for example

506
00:23:05,039 --> 00:23:06,960
you can observe

507
00:23:06,960 --> 00:23:09,280
the phase of linear growth is all the

508
00:23:09,280 --> 00:23:11,440
more prominent the lower the degree of

509
00:23:11,440 --> 00:23:13,120
the linear layer is

510
00:23:13,120 --> 00:23:17,280
the the red line so the rightmost graph

511
00:23:17,280 --> 00:23:20,320
shows a linear layer with degree one and

512
00:23:20,320 --> 00:23:22,960
in this diagram exhibits the face of the

513
00:23:22,960 --> 00:23:26,320
longest phase of linear growth

514
00:23:26,799 --> 00:23:27,919
the

515
00:23:27,919 --> 00:23:29,360
second point is

516
00:23:29,360 --> 00:23:32,400
you may observe there is a gradual shift

517
00:23:32,400 --> 00:23:34,559
of emphasis from

518
00:23:34,559 --> 00:23:36,880
linear growth to exponential growth as

519
00:23:36,880 --> 00:23:41,679
the degree of the linear layer increases

520
00:23:45,360 --> 00:23:47,679
so having an upper bound on the

521
00:23:47,679 --> 00:23:49,600
algebraic degree gives you a lower

522
00:23:49,600 --> 00:23:52,799
bounds on the number of rounds to reach

523
00:23:52,799 --> 00:23:56,720
for example maximum algebraic degree

524
00:23:56,720 --> 00:23:58,720
this table here

525
00:23:58,720 --> 00:24:00,720
shows the number of rounds to reach

526
00:24:00,720 --> 00:24:02,720
maximum algebraic degree

527
00:24:02,720 --> 00:24:04,960
derived from our bound and the bcd

528
00:24:04,960 --> 00:24:05,919
bounds

529
00:24:05,919 --> 00:24:09,600
and also shows some practical results

530
00:24:09,600 --> 00:24:11,840
the sbn here again uses the cubic

531
00:24:11,840 --> 00:24:13,200
function

532
00:24:13,200 --> 00:24:15,679
as sbox function and the linear layer in

533
00:24:15,679 --> 00:24:17,360
this example is

534
00:24:17,360 --> 00:24:20,080
define this as a multiplication with a

535
00:24:20,080 --> 00:24:23,120
matrix with a certain and this matrix

536
00:24:23,120 --> 00:24:26,000
now the important point here is

537
00:24:26,000 --> 00:24:28,559
you can see as the

538
00:24:28,559 --> 00:24:30,840
size of the xbox

539
00:24:30,840 --> 00:24:33,440
increases also the advantage of our

540
00:24:33,440 --> 00:24:34,400
bounds

541
00:24:34,400 --> 00:24:36,799
over the bcd bound increases you can

542
00:24:36,799 --> 00:24:38,799
observe this as you move down in this

543
00:24:38,799 --> 00:24:41,120
table

544
00:24:45,039 --> 00:24:47,760
yeah that's about it so if you're

545
00:24:47,760 --> 00:24:49,039
interested in this work or it seems

546
00:24:49,039 --> 00:24:51,039
relevant to you feel free to have a look

547
00:24:51,039 --> 00:24:52,960
at the online video also to have an

548
00:24:52,960 --> 00:24:55,120
in-person discussion during our stay

549
00:24:55,120 --> 00:24:56,880
here in athens

550
00:24:56,880 --> 00:24:58,240
thanks

551
00:24:58,240 --> 00:25:01,460
[Applause]

552
00:25:03,679 --> 00:25:06,400
any questions

553
00:25:08,080 --> 00:25:11,679
i have a question can i can ask

554
00:25:11,679 --> 00:25:13,840
yes of course

555
00:25:13,840 --> 00:25:16,960
yes so thanks you reynard for the talk

556
00:25:16,960 --> 00:25:18,880
in the full talk you mentioned that

557
00:25:18,880 --> 00:25:21,200
structure of the linear layer is a

558
00:25:21,200 --> 00:25:24,320
potential for improving the bounds

559
00:25:24,320 --> 00:25:26,480
do you have some examples in mind where

560
00:25:26,480 --> 00:25:28,559
the structure of the linear layer can

561
00:25:28,559 --> 00:25:30,879
help

562
00:25:31,200 --> 00:25:32,960
so our bound does not incorporate the

563
00:25:32,960 --> 00:25:34,400
concrete structure of the linear layer

564
00:25:34,400 --> 00:25:35,919
it's just the degree of the linear layer

565
00:25:35,919 --> 00:25:38,159
that we incorporate into our bounds

566
00:25:38,159 --> 00:25:40,640
of course so we expect that using the

567
00:25:40,640 --> 00:25:42,799
the concrete structure of the linear

568
00:25:42,799 --> 00:25:46,080
layer more can be said and potentially

569
00:25:46,080 --> 00:25:47,679
potentially more accurate bound can be

570
00:25:47,679 --> 00:25:49,279
derived but

571
00:25:49,279 --> 00:25:50,720
for our bounds

572
00:25:50,720 --> 00:25:52,960
at least for now it does not incorporate

573
00:25:52,960 --> 00:25:56,120
the structure

574
00:25:57,120 --> 00:26:00,239
okay thank you

575
00:26:01,039 --> 00:26:03,520
any other

576
00:26:09,520 --> 00:26:10,400
in questions

577
00:26:10,400 --> 00:26:13,679
does the the degree of the layer depend

578
00:26:13,679 --> 00:26:15,520
on some particular property of this

579
00:26:15,520 --> 00:26:17,918
layer

580
00:26:18,080 --> 00:26:20,640
yes yeah you would just compute sorry ah

581
00:26:20,640 --> 00:26:22,880
yeah thanks yeah so the question was

582
00:26:22,880 --> 00:26:24,559
about the degree of the linear layer if

583
00:26:24,559 --> 00:26:26,880
it depends on some properties or if you

584
00:26:26,880 --> 00:26:27,840
would

585
00:26:27,840 --> 00:26:30,799
just compute it and

586
00:26:30,799 --> 00:26:32,159
you would just compute the degree of the

587
00:26:32,159 --> 00:26:35,039
linear layer see what it is and then

588
00:26:35,039 --> 00:26:37,919
apply our bounds

589
00:26:41,200 --> 00:26:43,440
okay great thanks a lot for the talk and

590
00:26:43,440 --> 00:26:47,039
let's thank reinhardt again

591
00:26:51,360 --> 00:26:55,240
over christina maybe

592
00:27:04,730 --> 00:27:07,989
[Music]

593
00:27:13,440 --> 00:27:17,600
okay so let's go open next one

594
00:27:23,710 --> 00:27:26,849
[Music]

595
00:27:32,240 --> 00:27:35,200
so have to close

596
00:27:42,559 --> 00:27:45,200
okay um so the next talk will be on the

597
00:27:45,200 --> 00:27:49,600
legendre symbol of modulus 2 operator

598
00:27:49,600 --> 00:27:53,039
in symmetric schemes over f

599
00:27:53,039 --> 00:27:54,240
fpn

600
00:27:54,240 --> 00:27:54,960
and

601
00:27:54,960 --> 00:27:56,880
the speaker will be lorenzo aggressive

602
00:27:56,880 --> 00:27:59,279
so go ahead

603
00:27:59,279 --> 00:28:01,360
thank you very much for the introduction

604
00:28:01,360 --> 00:28:03,440
so the motivation of this work is about

605
00:28:03,440 --> 00:28:05,600
the recent progress in applications like

606
00:28:05,600 --> 00:28:07,279
multi-particle education swim morphic

607
00:28:07,279 --> 00:28:09,360
encryption and serial knowledge and this

608
00:28:09,360 --> 00:28:10,880
application

609
00:28:10,880 --> 00:28:12,960
needs some symmetry crypto over time

610
00:28:12,960 --> 00:28:14,080
feeds

611
00:28:14,080 --> 00:28:15,840
so in this paper we consider two

612
00:28:15,840 --> 00:28:17,120
problems

613
00:28:17,120 --> 00:28:19,679
we look for an impermutation over fp

614
00:28:19,679 --> 00:28:21,600
that are based on the region symbol or

615
00:28:21,600 --> 00:28:23,919
the module operator and we consider the

616
00:28:23,919 --> 00:28:26,159
security of a symmetric primitive that

617
00:28:26,159 --> 00:28:28,399
is associated with one with some of

618
00:28:28,399 --> 00:28:30,240
these nonlinear function and in

619
00:28:30,240 --> 00:28:32,640
particular we propose a concrete attack

620
00:28:32,640 --> 00:28:36,000
on the sponge hash function candle

621
00:28:36,000 --> 00:28:37,919
so let me just recall what the channel

622
00:28:37,919 --> 00:28:39,919
symbol is so the channel symbol is a

623
00:28:39,919 --> 00:28:43,039
function that maps f p to minus 1 0 or

624
00:28:43,039 --> 00:28:43,919
one

625
00:28:43,919 --> 00:28:45,520
so the output is zero if the input is

626
00:28:45,520 --> 00:28:48,000
zero and output is one if the input is a

627
00:28:48,000 --> 00:28:49,919
quadratic receiver and minus one

628
00:28:49,919 --> 00:28:52,480
otherwise

629
00:28:53,360 --> 00:28:56,000
these are some examples of uh functions

630
00:28:56,000 --> 00:28:57,679
that are based on the region symbol and

631
00:28:57,679 --> 00:29:00,640
that are invertible so the first one is

632
00:29:00,640 --> 00:29:02,960
take x and return x to the power of e

633
00:29:02,960 --> 00:29:06,240
times alpha plus plus one sigma of x

634
00:29:06,240 --> 00:29:09,120
and this function is invertible if p is

635
00:29:09,120 --> 00:29:11,679
complying with b minus one and if alpha

636
00:29:11,679 --> 00:29:14,480
square minus one is a quadratic receiver

637
00:29:14,480 --> 00:29:16,080
for example alpha is equal to alpha

638
00:29:16,080 --> 00:29:17,840
equals zero satisfy this

639
00:29:17,840 --> 00:29:19,919
assumption if p is equal to one modulus

640
00:29:19,919 --> 00:29:22,159
five

641
00:29:22,480 --> 00:29:24,559
now we can also fix alpha equals zero

642
00:29:24,559 --> 00:29:26,240
and we can get the permutation but we

643
00:29:26,240 --> 00:29:28,240
have to change a bit uh the assumption

644
00:29:28,240 --> 00:29:30,399
so in this case this function x to the

645
00:29:30,399 --> 00:29:32,399
power of t times the asian symbol of x

646
00:29:32,399 --> 00:29:34,240
is a permutation if

647
00:29:34,240 --> 00:29:35,919
the gcd between d

648
00:29:35,919 --> 00:29:39,039
plus p minus one half and p minus one

649
00:29:39,039 --> 00:29:41,120
are co-prime and this is the function

650
00:29:41,120 --> 00:29:43,360
that is used in the uh in the grand hash

651
00:29:43,360 --> 00:29:45,360
function

652
00:29:45,360 --> 00:29:47,760
and another example of function based on

653
00:29:47,760 --> 00:29:49,279
the visual symbol and it is invertible

654
00:29:49,279 --> 00:29:50,640
is this power map

655
00:29:50,640 --> 00:29:53,039
where the exponent depends on the legend

656
00:29:53,039 --> 00:29:55,840
symbol of the input

657
00:29:55,840 --> 00:29:57,520
so you can find the other

658
00:29:57,520 --> 00:29:58,960
invertible function based on the asian

659
00:29:58,960 --> 00:30:00,399
symbol in the paper

660
00:30:00,399 --> 00:30:02,080
let's just have a look to the sum

661
00:30:02,080 --> 00:30:04,559
function based on the model 2 operator

662
00:30:04,559 --> 00:30:06,320
so we all know that the square map is

663
00:30:06,320 --> 00:30:08,080
not invertible but we can slightly

664
00:30:08,080 --> 00:30:09,840
modify the square map in order to get

665
00:30:09,840 --> 00:30:11,279
any vertical function

666
00:30:11,279 --> 00:30:13,919
for example in this case we have that

667
00:30:13,919 --> 00:30:15,440
the function that takes input x and

668
00:30:15,440 --> 00:30:17,679
return x squared if x is equal to zero

669
00:30:17,679 --> 00:30:19,120
modulus two

670
00:30:19,120 --> 00:30:21,840
and it returns alpha times s square if x

671
00:30:21,840 --> 00:30:24,000
is equal to 1 modulo 2 is a permutation

672
00:30:24,000 --> 00:30:28,480
mutation symbol of alpha is equal to -1

673
00:30:28,880 --> 00:30:31,760
again an example

674
00:30:31,840 --> 00:30:34,159
we can fix alpha equal minus 1 and this

675
00:30:34,159 --> 00:30:36,080
assumption is satisfied if p is equal to

676
00:30:36,080 --> 00:30:37,760
free module four

677
00:30:37,760 --> 00:30:39,760
and in this case i would like to observe

678
00:30:39,760 --> 00:30:40,880
that we don't have to compute the

679
00:30:40,880 --> 00:30:42,320
modulus of the operation we can just

680
00:30:42,320 --> 00:30:45,440
have to compute the exponentiation

681
00:30:45,440 --> 00:30:47,200
and finally we can also slightly modify

682
00:30:47,200 --> 00:30:49,279
this function

683
00:30:49,279 --> 00:30:51,360
and we can get an invertible function

684
00:30:51,360 --> 00:30:53,440
like this so minus 1 to the power of x

685
00:30:53,440 --> 00:30:55,840
squared times x to the power of t where

686
00:30:55,840 --> 00:30:57,440
this function is invertible is e and p

687
00:30:57,440 --> 00:31:00,320
minus one of the prime

688
00:31:00,320 --> 00:31:02,159
so in the paper we studied a statistic

689
00:31:02,159 --> 00:31:03,279
again the

690
00:31:03,279 --> 00:31:05,440
properties of odyss function i'm not

691
00:31:05,440 --> 00:31:07,039
going into the details so you can find

692
00:31:07,039 --> 00:31:09,360
this table in the paper to summarize

693
00:31:09,360 --> 00:31:11,279
they all have good statistical and

694
00:31:11,279 --> 00:31:13,519
algebraic properties

695
00:31:13,519 --> 00:31:16,000
so what happens now if we essentially

696
00:31:16,000 --> 00:31:17,600
assimilated primitive with one of this

697
00:31:17,600 --> 00:31:19,120
function

698
00:31:19,120 --> 00:31:20,240
but they have

699
00:31:20,240 --> 00:31:21,440
good algebraic and statistical

700
00:31:21,440 --> 00:31:23,279
properties but they have a problem and

701
00:31:23,279 --> 00:31:24,799
the problem is that

702
00:31:24,799 --> 00:31:27,200
they take a large set in input and they

703
00:31:27,200 --> 00:31:29,440
just redo our osmosite not

704
00:31:29,440 --> 00:31:32,880
for example just two or three output

705
00:31:32,880 --> 00:31:34,640
so what is the idea

706
00:31:34,640 --> 00:31:36,880
well we can break a primitive is

707
00:31:36,880 --> 00:31:38,399
sensitive with one of this function

708
00:31:38,399 --> 00:31:39,679
using this approach

709
00:31:39,679 --> 00:31:42,080
we can fix all possibly channel symbol

710
00:31:42,080 --> 00:31:44,080
or the module two functions and then we

711
00:31:44,080 --> 00:31:45,440
can start the system of equation that

712
00:31:45,440 --> 00:31:47,360
described the primitive

713
00:31:47,360 --> 00:31:49,919
then we solve the system using for

714
00:31:49,919 --> 00:31:51,840
example refining techniques

715
00:31:51,840 --> 00:31:53,200
factorization

716
00:31:53,200 --> 00:31:55,360
kernel basis whatever you like

717
00:31:55,360 --> 00:31:56,559
and finally

718
00:31:56,559 --> 00:31:58,000
we can check if the found solution

719
00:31:58,000 --> 00:32:00,000
satisfied variation symbol that we fix

720
00:32:00,000 --> 00:32:01,919
in the first step if this is the case we

721
00:32:01,919 --> 00:32:06,080
found a solution if not we just repeat

722
00:32:06,960 --> 00:32:08,880
complete example here we have candle so

723
00:32:08,880 --> 00:32:10,880
granular is a sponges function

724
00:32:10,880 --> 00:32:12,559
and this is the permutation that isn't

725
00:32:12,559 --> 00:32:14,799
safe granted so we have constant

726
00:32:14,799 --> 00:32:17,919
addition multiplication with mds matrix

727
00:32:17,919 --> 00:32:20,399
and uh xbox where dashbox is just x to

728
00:32:20,399 --> 00:32:22,880
the power of e times division uh design

729
00:32:22,880 --> 00:32:25,760
function of x

730
00:32:26,080 --> 00:32:27,679
we use this approach and here we can

731
00:32:27,679 --> 00:32:29,360
find the comparison between the number

732
00:32:29,360 --> 00:32:31,039
of rounds of candy

733
00:32:31,039 --> 00:32:33,279
for different uh

734
00:32:33,279 --> 00:32:35,760
values of the degree d and the

735
00:32:35,760 --> 00:32:37,919
the size of the of the competition the

736
00:32:37,919 --> 00:32:39,200
number of ground that we are able to

737
00:32:39,200 --> 00:32:40,000
break

738
00:32:40,000 --> 00:32:42,480
and the number of planets we recommend

739
00:32:42,480 --> 00:32:43,760
based on our attack and other

740
00:32:43,760 --> 00:32:45,840
consideration made in the paper

741
00:32:45,840 --> 00:32:48,159
and you can see that in some cases

742
00:32:48,159 --> 00:32:49,840
we can break many more ground than the

743
00:32:49,840 --> 00:32:54,158
one proposed in the friendly paper

744
00:32:55,279 --> 00:32:57,039
so that's it from my side

745
00:32:57,039 --> 00:32:58,000
so

746
00:32:58,000 --> 00:33:00,080
summary we can use the symbol or the

747
00:33:00,080 --> 00:33:01,840
module operator to set up permutation of

748
00:33:01,840 --> 00:33:02,880
the recipe

749
00:33:02,880 --> 00:33:05,120
we have to be very careful when doing

750
00:33:05,120 --> 00:33:06,640
this

751
00:33:06,640 --> 00:33:08,799
so possible new possible attacks are

752
00:33:08,799 --> 00:33:11,760
possible so sorry attacks are possible

753
00:33:11,760 --> 00:33:13,760
and the open problem is to understand if

754
00:33:13,760 --> 00:33:15,840
a function that is associated with via

755
00:33:15,840 --> 00:33:17,840
the asian symbol or the module operator

756
00:33:17,840 --> 00:33:19,200
are efficient in these kind of

757
00:33:19,200 --> 00:33:20,960
applications

758
00:33:20,960 --> 00:33:23,080
thank you very much for your attention

759
00:33:23,080 --> 00:33:26,220
[Applause]

760
00:33:28,799 --> 00:33:33,080
any questions to the friends

761
00:33:39,760 --> 00:33:41,840
okay if there are no questions then

762
00:33:41,840 --> 00:33:45,959
let's thank the speaker again

763
00:33:53,760 --> 00:33:56,399
so the next talk will be presented

764
00:33:56,399 --> 00:33:58,799
online

765
00:34:02,880 --> 00:34:05,279
it's going to be on automated

766
00:34:05,279 --> 00:34:07,279
search oriented to key recovery on

767
00:34:07,279 --> 00:34:09,440
ciphers with the

768
00:34:09,440 --> 00:34:11,280
linear key schedule

769
00:34:11,280 --> 00:34:12,800
and lynn

770
00:34:12,800 --> 00:34:13,599
way

771
00:34:13,599 --> 00:34:16,480
quinn is going to give the talk so

772
00:34:16,480 --> 00:34:18,480
go ahead

773
00:34:18,480 --> 00:34:21,280
thank you um

774
00:34:21,280 --> 00:34:25,199
this is a giant work uh with xiayanto

775
00:34:25,199 --> 00:34:29,439
showing one cutting under your value

776
00:34:30,960 --> 00:34:33,760
differential attack is one of the most

777
00:34:33,760 --> 00:34:37,119
successful corrupt analysis techniques

778
00:34:37,119 --> 00:34:39,040
in distinguishing attack good

779
00:34:39,040 --> 00:34:41,199
differentials are those covering the

780
00:34:41,199 --> 00:34:44,480
highest number of rounds always maximize

781
00:34:44,480 --> 00:34:46,000
the probability

782
00:34:46,000 --> 00:34:48,800
4k recovery attack attacker needs to

783
00:34:48,800 --> 00:34:52,639
append several extra runs eb and eff to

784
00:34:52,639 --> 00:34:54,399
recover the case

785
00:34:54,399 --> 00:34:57,200
a good k recovery attack often requires

786
00:34:57,200 --> 00:34:59,920
a comprehensive turn off between the k

787
00:34:59,920 --> 00:35:02,560
recovery and the differential in this

788
00:35:02,560 --> 00:35:05,680
talk we try to maximize the number of

789
00:35:05,680 --> 00:35:08,240
attacked runs with data and time

790
00:35:08,240 --> 00:35:10,400
complexity lower than that of the

791
00:35:10,400 --> 00:35:12,160
resultive search

792
00:35:12,160 --> 00:35:13,839
the constraints

793
00:35:13,839 --> 00:35:16,560
include the probability of the distinct

794
00:35:16,560 --> 00:35:19,280
ratio the active bits of the input

795
00:35:19,280 --> 00:35:22,480
output and the k bits need to be guessed

796
00:35:22,480 --> 00:35:25,920
in the extended runs

797
00:35:26,240 --> 00:35:29,040
bombering attack is purposed by one girl

798
00:35:29,040 --> 00:35:31,119
two short differentials are combined

799
00:35:31,119 --> 00:35:33,760
into a longer bombering the bombing

800
00:35:33,760 --> 00:35:36,240
attack can be converted into chosen

801
00:35:36,240 --> 00:35:39,359
planets attack known as the apply side

802
00:35:39,359 --> 00:35:42,240
bombering attack or rectangle attack

803
00:35:42,240 --> 00:35:44,640
we analyze the detailed factors of

804
00:35:44,640 --> 00:35:47,760
joytell's rectangle framework for block

805
00:35:47,760 --> 00:35:51,280
ciphers with linear case schedule

806
00:35:51,280 --> 00:35:56,400
and gave a new automatic miop model

807
00:35:57,040 --> 00:36:00,320
uh the model is applicated to skinny

808
00:36:00,320 --> 00:36:02,800
which follows an espn structure and a

809
00:36:02,800 --> 00:36:05,280
technique framework the family of

810
00:36:05,280 --> 00:36:09,119
zucchini has six variations

811
00:36:09,440 --> 00:36:11,920
there have been several works discussed

812
00:36:11,920 --> 00:36:15,280
the automatic searching model of skinny

813
00:36:15,280 --> 00:36:17,599
of a new model is mainly based on the

814
00:36:17,599 --> 00:36:21,040
latest two works by haripo ito and the

815
00:36:21,040 --> 00:36:23,359
developer

816
00:36:23,359 --> 00:36:26,079
we present an extended model to

817
00:36:26,079 --> 00:36:28,640
searching for the entire nb plus and d

818
00:36:28,640 --> 00:36:31,920
plus and f runs of an attack attack our

819
00:36:31,920 --> 00:36:34,880
target it is to maximize the total

820
00:36:34,880 --> 00:36:36,560
attacked runs

821
00:36:36,560 --> 00:36:39,359
in practical programming we take the

822
00:36:39,359 --> 00:36:42,240
runs as the parameters to input the

823
00:36:42,240 --> 00:36:43,280
model

824
00:36:43,280 --> 00:36:48,079
and the target is the time complexity

825
00:36:50,240 --> 00:36:53,200
the time complexity of the rectangle

826
00:36:53,200 --> 00:36:55,920
attack is highly related to the number

827
00:36:55,920 --> 00:36:58,000
of guest case eeb

828
00:36:58,000 --> 00:37:01,119
since the matrix is mc operation is not

829
00:37:01,119 --> 00:37:03,040
an mds matrix

830
00:37:03,040 --> 00:37:05,599
the sub turkeys involved in the partial

831
00:37:05,599 --> 00:37:07,359
encryption and the decryption are

832
00:37:07,359 --> 00:37:08,560
different

833
00:37:08,560 --> 00:37:11,680
so we model and b from two aspects

834
00:37:11,680 --> 00:37:14,560
in this one in order to compute the

835
00:37:14,560 --> 00:37:18,000
active active cells in y three we need

836
00:37:18,000 --> 00:37:19,680
to know the cells

837
00:37:19,680 --> 00:37:23,280
marked by red dots in x3 then the cells

838
00:37:23,280 --> 00:37:26,400
needed to be known in z2 can be deduced

839
00:37:26,400 --> 00:37:28,079
through the linear

840
00:37:28,079 --> 00:37:30,880
linear diffusion

841
00:37:30,880 --> 00:37:34,160
uh in phase 2 we computer y3 bar and

842
00:37:34,160 --> 00:37:36,640
then details theta x 3 and the third

843
00:37:36,640 --> 00:37:40,079
time by 2. since the calculation from p

844
00:37:40,079 --> 00:37:45,040
2 to y 2 is similar to phase one

845
00:37:48,079 --> 00:37:50,960
so in over programming of the new model

846
00:37:50,960 --> 00:37:54,320
we integrate about two phases the cells

847
00:37:54,320 --> 00:37:57,200
need to be known in the r it

848
00:37:57,200 --> 00:38:00,400
can be deduced from x r plus one but

849
00:38:00,400 --> 00:38:02,480
through the linear diffusion as phase

850
00:38:02,480 --> 00:38:03,280
one

851
00:38:03,280 --> 00:38:05,920
then the cells needed to be known in xr

852
00:38:05,920 --> 00:38:09,040
involve two types the active cells in

853
00:38:09,040 --> 00:38:11,359
phase 2 and the cells need to be known

854
00:38:11,359 --> 00:38:13,920
in the r

855
00:38:13,920 --> 00:38:17,440
the objective is the time complexity and

856
00:38:17,440 --> 00:38:19,680
we add the variables on behalf of

857
00:38:19,680 --> 00:38:22,480
different parameters to the function

858
00:38:22,480 --> 00:38:24,400
because different parameters have

859
00:38:24,400 --> 00:38:26,720
different coefficients we give them

860
00:38:26,720 --> 00:38:30,200
different weights

861
00:38:32,400 --> 00:38:33,359
uh

862
00:38:33,359 --> 00:38:36,560
with our new mrlp model we search for

863
00:38:36,560 --> 00:38:39,520
more proper trunkity the differential 4k

864
00:38:39,520 --> 00:38:40,960
recovery attack

865
00:38:40,960 --> 00:38:43,520
then use the cp model to get the actual

866
00:38:43,520 --> 00:38:44,960
differential

867
00:38:44,960 --> 00:38:48,000
in the table we compare the related key

868
00:38:48,000 --> 00:38:52,320
bombering distinguishers for skinning

869
00:38:52,320 --> 00:38:54,880
if the new distinguishers will give

870
00:38:54,880 --> 00:38:57,680
improved k recovery attacks

871
00:38:57,680 --> 00:38:59,760
for skinny

872
00:38:59,760 --> 00:39:01,440
one

873
00:39:01,440 --> 00:39:03,760
away extending for round eb and four

874
00:39:03,760 --> 00:39:07,599
rounds ef we attack to 30 rounds

875
00:39:07,599 --> 00:39:10,800
in data collection we generate quartets

876
00:39:10,800 --> 00:39:15,839
satisfying the input output differences

877
00:39:20,800 --> 00:39:22,960
then the k recurring

878
00:39:22,960 --> 00:39:27,359
process is just a gas and filter process

879
00:39:27,359 --> 00:39:30,240
with summaries of crypto analytics uh

880
00:39:30,240 --> 00:39:32,800
crypto analytic results are skinny in

881
00:39:32,800 --> 00:39:34,800
related turkey setting

882
00:39:34,800 --> 00:39:36,960
for three reasons of skinning over

883
00:39:36,960 --> 00:39:38,800
results cover one more round than the

884
00:39:38,800 --> 00:39:40,839
best previous

885
00:39:40,839 --> 00:39:44,320
results the new model is also applied to

886
00:39:44,320 --> 00:39:46,960
focus skinny which is designed under the

887
00:39:46,960 --> 00:39:49,520
under the 4ke framework

888
00:39:49,520 --> 00:39:52,320
the primary queue is based on skinny

889
00:39:52,320 --> 00:39:54,720
previous analysis of skinning can be

890
00:39:54,720 --> 00:39:57,920
directly applied to fork skinny but as

891
00:39:57,920 --> 00:40:00,240
point out by parent it all

892
00:40:00,240 --> 00:40:03,520
encryption from m to c one use a

893
00:40:03,520 --> 00:40:06,079
slightly different technique schedule

894
00:40:06,079 --> 00:40:08,640
leading to better analysis

895
00:40:08,640 --> 00:40:12,000
for example in some cases there can have

896
00:40:12,000 --> 00:40:14,319
six consecutive inactive wrong

897
00:40:14,319 --> 00:40:16,960
techniques

898
00:40:17,119 --> 00:40:19,599
we add those chemistries to the

899
00:40:19,599 --> 00:40:22,400
automatic model of skinning

900
00:40:22,400 --> 00:40:25,280
so first box skinny one two eight

901
00:40:25,280 --> 00:40:28,960
two five six we select a new 21 round

902
00:40:28,960 --> 00:40:31,920
related key rectangle distinguish

903
00:40:31,920 --> 00:40:34,800
and give import attacks with different

904
00:40:34,800 --> 00:40:37,520
turkey sizes

905
00:40:37,520 --> 00:40:40,000
other results for first focus skinny

906
00:40:40,000 --> 00:40:41,920
cover one to two more rounds than the

907
00:40:41,920 --> 00:40:44,800
best previous work

908
00:40:44,800 --> 00:40:48,440
thanks for your attention

909
00:40:54,960 --> 00:40:56,640
thank you very much are there any

910
00:40:56,640 --> 00:40:59,640
questions

911
00:41:08,319 --> 00:41:10,640
okay if there are no questions and we

912
00:41:10,640 --> 00:41:14,160
can move on to the next speaker

913
00:41:14,160 --> 00:41:15,520
which will

914
00:41:15,520 --> 00:41:19,240
also present online

915
00:41:37,280 --> 00:41:38,880
okay so uh the next talk will be

916
00:41:38,880 --> 00:41:41,760
improved attack on s-less permutation

917
00:41:41,760 --> 00:41:43,520
and tight bound on

918
00:41:43,520 --> 00:41:46,160
limited birthday distinguishers is going

919
00:41:46,160 --> 00:41:48,880
to be given by uh yu sasaki

920
00:41:48,880 --> 00:41:51,760
uh so you go ahead and

921
00:41:51,760 --> 00:41:52,960
good luck

922
00:41:52,960 --> 00:41:55,359
okay thank you for the introduction so

923
00:41:55,359 --> 00:41:57,040
uh

924
00:41:57,040 --> 00:41:59,280
so this is the junk box pierce uh

925
00:41:59,280 --> 00:42:03,040
akinori the yamada from it

926
00:42:03,680 --> 00:42:04,880
here

927
00:42:04,880 --> 00:42:08,079
so as the title suggests that this uh

928
00:42:08,079 --> 00:42:11,359
explanation of depicted attacks use of

929
00:42:11,359 --> 00:42:14,720
general generic attacks

930
00:42:14,800 --> 00:42:16,319
so the

931
00:42:16,319 --> 00:42:19,920
text the target is sli

932
00:42:19,920 --> 00:42:22,640
this is a cryptographic application uh

933
00:42:22,640 --> 00:42:26,480
designed for uh design boots for

934
00:42:26,480 --> 00:42:31,280
the spawn framework to build quite a

935
00:42:31,280 --> 00:42:35,040
the original sli scp was proposed at sac

936
00:42:35,040 --> 00:42:38,960
2017 and later uh its light person was

937
00:42:38,960 --> 00:42:40,880
presented

938
00:42:40,880 --> 00:42:42,319
and in the next

939
00:42:42,319 --> 00:42:44,960
light cryptographic competition two

940
00:42:44,960 --> 00:42:48,240
schemes speaks and spark up

941
00:42:48,240 --> 00:42:52,480
uh based on sli cp lite

942
00:42:52,480 --> 00:42:53,280
and

943
00:42:53,280 --> 00:42:56,000
right at the time of the publication uh

944
00:42:56,000 --> 00:42:58,220
speaks uh

945
00:42:58,220 --> 00:43:01,330
[Music]

946
00:43:07,280 --> 00:43:10,240
okay so the uh

947
00:43:10,240 --> 00:43:12,079
figure below shows the computational

948
00:43:12,079 --> 00:43:14,640
structure

949
00:43:14,640 --> 00:43:17,359
and therefore sli cp ah it consists of

950
00:43:17,359 --> 00:43:19,599
18 steps and

951
00:43:19,599 --> 00:43:23,359
each step adapts the full branch uh

952
00:43:23,359 --> 00:43:25,920
generalized phasor structure and the f

953
00:43:25,920 --> 00:43:28,240
function is reduced from the cena where

954
00:43:28,240 --> 00:43:31,040
the key is replaced with some constant

955
00:43:31,040 --> 00:43:33,280
and the for escalates you like

956
00:43:33,280 --> 00:43:35,200
the position of this make function is

957
00:43:35,200 --> 00:43:36,880
moved and so it looks like misty

958
00:43:36,880 --> 00:43:38,640
structure so

959
00:43:38,640 --> 00:43:41,040
two rounds can be computed in uh in

960
00:43:41,040 --> 00:43:43,119
parallel

961
00:43:43,119 --> 00:43:45,119
okay so this is the opening

962
00:43:45,119 --> 00:43:47,839
so uh for the first part you represent

963
00:43:47,839 --> 00:43:50,640
improved cryptanalysis

964
00:43:50,640 --> 00:43:54,079
and the previous test attacks on sdi

965
00:43:54,079 --> 00:43:58,160
limited prostate features by regard tax

966
00:43:58,160 --> 00:44:00,880
the reverse attacks consist of one phase

967
00:44:00,880 --> 00:44:03,040
and that base and

968
00:44:03,040 --> 00:44:06,400
we improve both phases

969
00:44:06,400 --> 00:44:10,400
to achieve sanity's simplicity for more

970
00:44:10,400 --> 00:44:12,400
steps so depending on the competition

971
00:44:12,400 --> 00:44:15,119
size and which are the vision version or

972
00:44:15,119 --> 00:44:18,000
the light version

973
00:44:18,400 --> 00:44:20,400
and this is the first third party

974
00:44:20,400 --> 00:44:24,720
analysis on sli xcp light

975
00:44:25,040 --> 00:44:26,960
yeah so this is the dedicated that that

976
00:44:26,960 --> 00:44:28,880
results and

977
00:44:28,880 --> 00:44:32,160
to be a valid attack so we must compare

978
00:44:32,160 --> 00:44:35,119
dedicated attack complexity with the

979
00:44:35,119 --> 00:44:38,079
generic complexity so ideally

980
00:44:38,079 --> 00:44:41,280
lower bound the general attack

981
00:44:41,280 --> 00:44:43,440
and the this is the second topic so

982
00:44:43,440 --> 00:44:44,640
however

983
00:44:44,640 --> 00:44:47,040
the lower part of the

984
00:44:47,040 --> 00:44:49,920
limited basis finishes for partitions

985
00:44:49,920 --> 00:44:52,400
are not known

986
00:44:52,400 --> 00:44:54,079
the problem can be defined for the

987
00:44:54,079 --> 00:44:56,960
function and in case function the law

988
00:44:56,960 --> 00:44:58,560
about the zone but

989
00:44:58,560 --> 00:45:01,680
it was foreign for the partition

990
00:45:01,680 --> 00:45:03,440
so so in the previous distinction

991
00:45:03,440 --> 00:45:05,200
attacks uh

992
00:45:05,200 --> 00:45:08,319
they made a conjecture for the

993
00:45:08,319 --> 00:45:12,000
best uh tax genetic attacks so

994
00:45:12,000 --> 00:45:13,760
it uses a pattern

995
00:45:13,760 --> 00:45:14,720
to

996
00:45:14,720 --> 00:45:16,720
assume that

997
00:45:16,720 --> 00:45:20,720
any attack uh basket in the best of baba

998
00:45:20,720 --> 00:45:23,760
is is uh

999
00:45:23,760 --> 00:45:26,160
uh is a valid attack

1000
00:45:26,160 --> 00:45:29,119
so this is a conjecture and

1001
00:45:29,119 --> 00:45:32,079
we talked the problem in stock talk

1002
00:45:32,079 --> 00:45:33,760
in this research

1003
00:45:33,760 --> 00:45:36,480
but our approach is for simple in

1004
00:45:36,480 --> 00:45:38,800
approach voice so we define the game and

1005
00:45:38,800 --> 00:45:41,359
i find the best strategy to win the game

1006
00:45:41,359 --> 00:45:44,240
and simply tell me the number of queries

1007
00:45:44,240 --> 00:45:46,959
to win the game

1008
00:45:48,960 --> 00:45:50,880
but in the end he obtained the lower

1009
00:45:50,880 --> 00:45:52,160
bounds

1010
00:45:52,160 --> 00:45:54,240
and it matched the conjecture for the

1011
00:45:54,240 --> 00:45:56,319
best director so

1012
00:45:56,319 --> 00:45:58,960
all uh

1013
00:45:59,040 --> 00:45:59,440
based stacks

1014
00:45:59,440 --> 00:46:01,760
the on the conjecture it's actually

1015
00:46:01,760 --> 00:46:04,079
valid

1016
00:46:04,319 --> 00:46:06,240
okay so this is a one-piece slide for

1017
00:46:06,240 --> 00:46:08,960
the proof results so link in the busted

1018
00:46:08,960 --> 00:46:10,560
distinctions

1019
00:46:10,560 --> 00:46:14,960
first specified through the set

1020
00:46:23,440 --> 00:46:26,400
the difference and the difference i

1021
00:46:26,400 --> 00:46:28,960
specified

1022
00:46:41,040 --> 00:46:44,880
and we prove the uh following

1023
00:46:44,880 --> 00:46:45,599
and

1024
00:46:45,599 --> 00:46:47,440
we have uh

1025
00:46:47,440 --> 00:46:48,240
sorry

1026
00:46:48,240 --> 00:46:50,640
we have a coefficient before at the

1027
00:46:50,640 --> 00:46:52,000
beginning but

1028
00:46:52,000 --> 00:46:52,960
uh

1029
00:46:52,960 --> 00:46:57,119
basically not the previous test

1030
00:46:58,160 --> 00:47:00,480
okay so this is a one-piece part of the

1031
00:47:00,480 --> 00:47:02,000
reason for the crystal nurse's

1032
00:47:02,000 --> 00:47:03,440
improvement

1033
00:47:03,440 --> 00:47:05,040
the previous attack is already done

1034
00:47:05,040 --> 00:47:08,480
attack and we use the 15-cent triangle

1035
00:47:08,480 --> 00:47:11,440
and interview and attack attack reversed

1036
00:47:11,440 --> 00:47:12,960
uh

1037
00:47:12,960 --> 00:47:16,319
stick but to satisfy

1038
00:47:16,319 --> 00:47:18,960
different fractions of the middle part

1039
00:47:18,960 --> 00:47:20,880
and in the previous part the inbound

1040
00:47:20,880 --> 00:47:24,000
phase converts three steps and there's

1041
00:47:24,000 --> 00:47:27,200
12 steps are satisfied probably

1042
00:47:27,200 --> 00:47:30,640
but in this research we found that uh

1043
00:47:30,640 --> 00:47:33,200
by kfb choosing the bugs in an

1044
00:47:33,200 --> 00:47:35,520
appropriate order inbound phase can come

1045
00:47:35,520 --> 00:47:37,440
from one more steps without increasing

1046
00:47:37,440 --> 00:47:39,119
the compressive

1047
00:47:39,119 --> 00:47:41,040
so i mean this is just the beginning of

1048
00:47:41,040 --> 00:47:43,200
the analysis but uh

1049
00:47:43,200 --> 00:47:46,319
basically the yeah the fundamental idea

1050
00:47:46,319 --> 00:47:48,960
to improve the attack

1051
00:47:48,960 --> 00:47:50,400
okay so

1052
00:47:50,400 --> 00:47:52,400
um

1053
00:47:52,400 --> 00:47:56,400
the uh reset contains two aspects and uh

1054
00:47:56,400 --> 00:48:00,000
for the yeah prepaid analysis

1055
00:48:00,000 --> 00:48:03,119
steps reached 16 now

1056
00:48:03,119 --> 00:48:04,240
but uh

1057
00:48:04,240 --> 00:48:06,720
i have to say that the attack is fought

1058
00:48:06,720 --> 00:48:08,640
only for the underlying competition so

1059
00:48:08,640 --> 00:48:10,640
there is no impact to the security of

1060
00:48:10,640 --> 00:48:13,520
the speaks in the spark

1061
00:48:13,520 --> 00:48:16,240
and we also show that you go down and

1062
00:48:16,240 --> 00:48:18,319
which is tight

1063
00:48:18,319 --> 00:48:21,280
to the best attack up to a constant part

1064
00:48:21,280 --> 00:48:24,400
yeah thank you very much

1065
00:48:30,079 --> 00:48:32,559
thank you very much so any questions for

1066
00:48:32,559 --> 00:48:35,559
you

1067
00:48:48,240 --> 00:48:50,720
okay if there are no more questions then

1068
00:48:50,720 --> 00:48:53,040
uh let's thank the speaker and all the

1069
00:48:53,040 --> 00:48:56,160
speakers of the session

1070
00:49:00,000 --> 00:49:03,280
now we will go to lunch until uh

1071
00:49:03,280 --> 00:49:05,119
uh 2 15

1072
00:49:05,119 --> 00:49:08,160
and then we will resume with the

1073
00:49:08,160 --> 00:49:11,599
in-person only workshop so uh see you

1074
00:49:11,599 --> 00:49:14,319
and uh of course for the rest of the

1075
00:49:14,319 --> 00:49:17,520
participants well

1076
00:49:17,520 --> 00:49:20,079
for the rest of the participants uh

1077
00:49:20,079 --> 00:49:21,200
the

1078
00:49:21,200 --> 00:49:22,800
uh the

1079
00:49:22,800 --> 00:49:24,960
conference will resume tomorrow

1080
00:49:24,960 --> 00:49:28,480
so it will be earlier it will start from

1081
00:49:28,480 --> 00:49:30,480
nine o'clock okay that's the first

1082
00:49:30,480 --> 00:49:32,400
session nine o'clock local time of

1083
00:49:32,400 --> 00:49:33,760
course now

1084
00:49:33,760 --> 00:49:37,119
so you should calculate

