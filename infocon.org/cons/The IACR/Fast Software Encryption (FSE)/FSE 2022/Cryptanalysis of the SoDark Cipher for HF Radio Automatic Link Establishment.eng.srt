1
00:00:01,439 --> 00:00:04,640
welcome to this presentation of my paper

2
00:00:04,640 --> 00:00:07,359
crypt analysis of the so-dark cipher for

3
00:00:07,359 --> 00:00:11,519
hf radio automatic link establishment

4
00:00:11,519 --> 00:00:14,719
my name is marcus donzaria and i'm a phd

5
00:00:14,719 --> 00:00:16,480
student at the swedish defense

6
00:00:16,480 --> 00:00:19,680
university and the university of huevda

7
00:00:19,680 --> 00:00:22,480
my primary research interest concerns

8
00:00:22,480 --> 00:00:24,720
security in radio based communication

9
00:00:24,720 --> 00:00:27,720
systems

10
00:00:32,159 --> 00:00:35,360
the sodor cipher is specified in u.s

11
00:00:35,360 --> 00:00:37,680
federal and military standards

12
00:00:37,680 --> 00:00:39,920
as well as in a nato standardization

13
00:00:39,920 --> 00:00:41,200
agreement

14
00:00:41,200 --> 00:00:43,200
it has been standardized since the early

15
00:00:43,200 --> 00:00:45,920
1990s but despite this there does not

16
00:00:45,920 --> 00:00:48,399
appear to exist any public cryptanalysis

17
00:00:48,399 --> 00:00:50,480
of the cipher

18
00:00:50,480 --> 00:00:53,360
it was created to encrypt automatic link

19
00:00:53,360 --> 00:00:56,000
establishment messages sent between high

20
00:00:56,000 --> 00:00:59,760
frequency radios hf radio is unique in

21
00:00:59,760 --> 00:01:01,920
that it can be used to transmit messages

22
00:01:01,920 --> 00:01:04,879
globally without any infrastructure

23
00:01:04,879 --> 00:01:07,520
for that reason it is used by military

24
00:01:07,520 --> 00:01:10,640
diplomatic and emergency agencies

25
00:01:10,640 --> 00:01:13,119
as well as by aid organizations

26
00:01:13,119 --> 00:01:15,040
throughout the world

27
00:01:15,040 --> 00:01:17,439
establishing hf radio connections

28
00:01:17,439 --> 00:01:19,119
requires a fair bit of skill from the

29
00:01:19,119 --> 00:01:20,479
radio operator

30
00:01:20,479 --> 00:01:22,960
and ale was developed to automate much

31
00:01:22,960 --> 00:01:25,600
or all of this work

32
00:01:25,600 --> 00:01:28,479
the second generation of ale was the

33
00:01:28,479 --> 00:01:30,479
first standardized version

34
00:01:30,479 --> 00:01:32,320
and the first to use the cipher

35
00:01:32,320 --> 00:01:34,479
described here

36
00:01:34,479 --> 00:01:37,119
despite developments of third and fourth

37
00:01:37,119 --> 00:01:39,840
generations the second remains the most

38
00:01:39,840 --> 00:01:41,280
commonly used

39
00:01:41,280 --> 00:01:44,479
ale is an osi layer 2 protocol that only

40
00:01:44,479 --> 00:01:47,680
controls the setup and teardown of calls

41
00:01:47,680 --> 00:01:50,159
data or audio transmissions are handled

42
00:01:50,159 --> 00:01:53,720
by other protocols

43
00:01:57,360 --> 00:01:59,920
the sodor cipher is a 24-bit block

44
00:01:59,920 --> 00:02:03,280
cipher that uses a 56-bit key and a

45
00:02:03,280 --> 00:02:05,680
64-bit tweak

46
00:02:05,680 --> 00:02:08,479
in second generation ale the cipher has

47
00:02:08,479 --> 00:02:09,758
eight rounds

48
00:02:09,758 --> 00:02:12,800
and this was extended to 16 rounds in

49
00:02:12,800 --> 00:02:15,120
third generation ale

50
00:02:15,120 --> 00:02:17,440
the cipher performs all operations on

51
00:02:17,440 --> 00:02:19,760
three 8-bit state bytes

52
00:02:19,760 --> 00:02:22,080
and all operations are linear except for

53
00:02:22,080 --> 00:02:25,680
lookups in an 8 by 8 bit s box

54
00:02:25,680 --> 00:02:27,920
in second generation ale

55
00:02:27,920 --> 00:02:30,000
the cipher is actually called the

56
00:02:30,000 --> 00:02:31,680
lattice algorithm

57
00:02:31,680 --> 00:02:34,160
but i've chosen not to use that name in

58
00:02:34,160 --> 00:02:36,560
order to avoid confusion with lattice

59
00:02:36,560 --> 00:02:39,360
cryptography

60
00:02:42,879 --> 00:02:45,040
this slide summarizes the results of the

61
00:02:45,040 --> 00:02:47,280
attacks presented in the paper

62
00:02:47,280 --> 00:02:49,519
the 6 and 7 round attacks can be

63
00:02:49,519 --> 00:02:51,840
considered preludes to the attack on the

64
00:02:51,840 --> 00:02:54,640
full 8 round soad arc used in second

65
00:02:54,640 --> 00:02:57,280
generation ale

66
00:02:57,280 --> 00:02:59,760
in a known plain text setting

67
00:02:59,760 --> 00:03:02,640
the average expected attack time is 2 to

68
00:03:02,640 --> 00:03:06,159
the power of 45.7

69
00:03:06,159 --> 00:03:08,560
2 to the power of 12.7

70
00:03:08,560 --> 00:03:11,760
plain text ciphertext tweak tuples are

71
00:03:11,760 --> 00:03:16,879
required for a 50 probability of success

72
00:03:16,879 --> 00:03:19,040
the known ciphertext attacks can be

73
00:03:19,040 --> 00:03:22,000
adapted to chosen ciphertext attacks

74
00:03:22,000 --> 00:03:26,400
that require significantly less data

75
00:03:26,400 --> 00:03:28,239
in addition to the text presented in the

76
00:03:28,239 --> 00:03:29,280
paper

77
00:03:29,280 --> 00:03:31,040
up to five rounds of the cipher are

78
00:03:31,040 --> 00:03:32,879
vulnerable to meet in the middle attacks

79
00:03:32,879 --> 00:03:34,959
that can be performed using any three

80
00:03:34,959 --> 00:03:39,440
plaintext ciphertext tweak tuples

81
00:03:43,200 --> 00:03:45,519
when it comes to the so dark

82
00:03:45,519 --> 00:03:47,519
no public information has been found

83
00:03:47,519 --> 00:03:50,640
regarding its design criteria

84
00:03:50,640 --> 00:03:52,400
the properties of the sbox have

85
00:03:52,400 --> 00:03:54,319
therefore been studied

86
00:03:54,319 --> 00:03:56,480
in an attempt to reverse engineer any

87
00:03:56,480 --> 00:03:58,159
such criteria

88
00:03:58,159 --> 00:04:00,319
and here the methods described by

89
00:04:00,319 --> 00:04:03,280
beryokov and perrin were used

90
00:04:03,280 --> 00:04:05,840
the reverse engineering attempts were

91
00:04:05,840 --> 00:04:08,480
unsuccessful

92
00:04:08,480 --> 00:04:10,959
a kolmogorov smyrna test of the linear

93
00:04:10,959 --> 00:04:13,519
bias and the differential uniformity of

94
00:04:13,519 --> 00:04:14,959
the s-box

95
00:04:14,959 --> 00:04:17,918
showed a high level of conformity with

96
00:04:17,918 --> 00:04:19,839
what would be expected for a random

97
00:04:19,839 --> 00:04:21,680
permutation

98
00:04:21,680 --> 00:04:23,759
although both the linear bias and

99
00:04:23,759 --> 00:04:25,759
differential uniformity are higher than

100
00:04:25,759 --> 00:04:26,880
the average

101
00:04:26,880 --> 00:04:28,720
for random permutation

102
00:04:28,720 --> 00:04:30,720
the differences are not statistically

103
00:04:30,720 --> 00:04:32,320
significant

104
00:04:32,320 --> 00:04:35,120
in conclusion no evidence has been found

105
00:04:35,120 --> 00:04:37,520
that point to the s box being anything

106
00:04:37,520 --> 00:04:40,160
other than a randomly selected

107
00:04:40,160 --> 00:04:43,160
permutation

108
00:04:48,639 --> 00:04:51,120
this slide describes the notation used

109
00:04:51,120 --> 00:04:53,680
in the definition of the round function

110
00:04:53,680 --> 00:04:56,479
and the subsequent cryptanalysis

111
00:04:56,479 --> 00:05:01,600
so dark uses three state bytes a b and c

112
00:05:01,600 --> 00:05:04,320
and the inputs and outputs of the

113
00:05:04,320 --> 00:05:05,919
different rounds

114
00:05:05,919 --> 00:05:08,479
are denoted by superset numbers in

115
00:05:08,479 --> 00:05:10,720
parenthesis

116
00:05:10,720 --> 00:05:13,280
the seven key bytes are denoted by a

117
00:05:13,280 --> 00:05:18,320
lowercase k with the byte number subset

118
00:05:18,720 --> 00:05:21,440
the same goes for the eight tweak bytes

119
00:05:21,440 --> 00:05:25,280
which are denoted by case t

120
00:05:25,280 --> 00:05:27,840
bitwise exclusive or is denoted by a

121
00:05:27,840 --> 00:05:29,680
circle plus sign

122
00:05:29,680 --> 00:05:31,919
and for applications of the s box the

123
00:05:31,919 --> 00:05:35,120
functional notation shown here is used

124
00:05:35,120 --> 00:05:37,360
the cryptanalysis uses differences

125
00:05:37,360 --> 00:05:40,080
between two parallel encryptions

126
00:05:40,080 --> 00:05:42,080
in a lot of cases

127
00:05:42,080 --> 00:05:44,720
and the delta character is used as a

128
00:05:44,720 --> 00:05:49,639
shorthand for this as shown here

129
00:05:55,360 --> 00:05:57,440
and here is the definition of the round

130
00:05:57,440 --> 00:05:58,560
function

131
00:05:58,560 --> 00:06:00,479
the illustration to the right

132
00:06:00,479 --> 00:06:04,240
shows the first two rounds of the cipher

133
00:06:04,240 --> 00:06:07,039
each byte of the round keys shown here

134
00:06:07,039 --> 00:06:10,400
with the lowercase letters is created by

135
00:06:10,400 --> 00:06:12,960
exclusive oring one key byte with one

136
00:06:12,960 --> 00:06:15,039
tweak byte

137
00:06:15,039 --> 00:06:18,400
each state byte is exclusive ord with a

138
00:06:18,400 --> 00:06:20,639
round key byte and one or two other

139
00:06:20,639 --> 00:06:24,400
state bytes before applying the s box

140
00:06:24,400 --> 00:06:27,120
despite its simplicity the so dark key

141
00:06:27,120 --> 00:06:29,360
schedule prevents many standard attacks

142
00:06:29,360 --> 00:06:31,120
on block ciphers

143
00:06:31,120 --> 00:06:33,199
since the number of key and tweak bytes

144
00:06:33,199 --> 00:06:35,039
are relatively prime

145
00:06:35,039 --> 00:06:37,360
the round keys don't repeat until after

146
00:06:37,360 --> 00:06:41,280
56 rounds preventing slide attacks

147
00:06:41,280 --> 00:06:43,680
one of the main weaknesses of the cipher

148
00:06:43,680 --> 00:06:46,240
is that each round only uses three bytes

149
00:06:46,240 --> 00:06:47,520
of the key

150
00:06:47,520 --> 00:06:49,360
and that the rounds can be partially

151
00:06:49,360 --> 00:06:53,680
decrypted using a single key byte

152
00:06:58,400 --> 00:07:00,240
there is no mechanism in the ale

153
00:07:00,240 --> 00:07:02,160
standard for transferring the tweak

154
00:07:02,160 --> 00:07:04,160
along with the ciphertext

155
00:07:04,160 --> 00:07:06,639
for that reason the tweak is generated

156
00:07:06,639 --> 00:07:08,800
using information already known to the

157
00:07:08,800 --> 00:07:10,720
sender and receiver

158
00:07:10,720 --> 00:07:13,280
this includes the date and time of day

159
00:07:13,280 --> 00:07:15,039
as well as the frequency of transmission

160
00:07:15,039 --> 00:07:17,680
as shown in the table here

161
00:07:17,680 --> 00:07:19,680
since precise time synchronization

162
00:07:19,680 --> 00:07:22,400
between radios in an hf network can be

163
00:07:22,400 --> 00:07:23,680
hard to achieve

164
00:07:23,680 --> 00:07:25,919
a system setting called the protection

165
00:07:25,919 --> 00:07:27,840
interval pi

166
00:07:27,840 --> 00:07:28,880
governs

167
00:07:28,880 --> 00:07:31,599
the granularity of the time fields

168
00:07:31,599 --> 00:07:33,840
the highest granularity corresponds to

169
00:07:33,840 --> 00:07:36,160
second level accuracy

170
00:07:36,160 --> 00:07:38,319
to ensure that a different tweak is used

171
00:07:38,319 --> 00:07:39,919
for all encryptions

172
00:07:39,919 --> 00:07:42,080
the word number field is incremented for

173
00:07:42,080 --> 00:07:45,599
each 24-bit word in a frame

174
00:07:45,599 --> 00:07:48,319
this fact is important for cryptanalysis

175
00:07:48,319 --> 00:07:50,800
since it means that any two tweaks used

176
00:07:50,800 --> 00:07:53,120
for encrypting words in a frame

177
00:07:53,120 --> 00:07:58,520
will differ only in the fifth tweak byte

178
00:08:03,919 --> 00:08:05,840
the known plain text attacks presented

179
00:08:05,840 --> 00:08:06,879
here

180
00:08:06,879 --> 00:08:09,440
all start from the observation that for

181
00:08:09,440 --> 00:08:11,680
any round the differences in the state

182
00:08:11,680 --> 00:08:14,080
variables after the previous round

183
00:08:14,080 --> 00:08:16,080
can be calculated without any key

184
00:08:16,080 --> 00:08:19,120
guessing using the formula shown here

185
00:08:19,120 --> 00:08:21,680
and these formulas are derived directly

186
00:08:21,680 --> 00:08:23,199
from the definition of the round

187
00:08:23,199 --> 00:08:26,199
function

188
00:08:30,400 --> 00:08:32,880
now in attacking six rounds we consider

189
00:08:32,880 --> 00:08:35,120
the case where we are provided with two

190
00:08:35,120 --> 00:08:38,240
plain text ciphertext tweak tuples

191
00:08:38,240 --> 00:08:41,039
such that the ciphertexts are equal

192
00:08:41,039 --> 00:08:43,039
and where the tweaks only differ in the

193
00:08:43,039 --> 00:08:46,480
fifth tweak byte as previously mentioned

194
00:08:46,480 --> 00:08:48,720
since the tweaks and possibly also the

195
00:08:48,720 --> 00:08:50,800
plain texts are different

196
00:08:50,800 --> 00:08:52,800
a collision must have occurred for the

197
00:08:52,800 --> 00:08:55,279
plain text to be equal

198
00:08:55,279 --> 00:08:56,480
in this case

199
00:08:56,480 --> 00:08:58,399
it's possible to calculate the

200
00:08:58,399 --> 00:09:00,399
difference in one of the state variables

201
00:09:00,399 --> 00:09:02,080
after the third round

202
00:09:02,080 --> 00:09:04,000
by using the formulas on the previous

203
00:09:04,000 --> 00:09:05,200
slide

204
00:09:05,200 --> 00:09:07,600
along with the fact that an s-box input

205
00:09:07,600 --> 00:09:10,399
difference of zero will always yield an

206
00:09:10,399 --> 00:09:13,920
output difference of zero as well

207
00:09:20,320 --> 00:09:22,240
the specifics of that calculation is

208
00:09:22,240 --> 00:09:24,560
shown here and as we can see

209
00:09:24,560 --> 00:09:27,680
equal ciphertexts after the sixth round

210
00:09:27,680 --> 00:09:29,600
implies that one of the state variables

211
00:09:29,600 --> 00:09:31,360
after the third round

212
00:09:31,360 --> 00:09:33,360
must have been equal to the difference

213
00:09:33,360 --> 00:09:37,040
between the fifth bytes of the tweaks

214
00:09:37,040 --> 00:09:39,200
all this follows from what was presented

215
00:09:39,200 --> 00:09:42,080
in the previous slide

216
00:09:46,399 --> 00:09:48,880
it is now possible to search for partial

217
00:09:48,880 --> 00:09:51,760
keys that cause a particular difference

218
00:09:51,760 --> 00:09:52,640
for

219
00:09:52,640 --> 00:09:55,600
the plain texts and tweaks in question

220
00:09:55,600 --> 00:09:57,519
this is illustrated by the figure to the

221
00:09:57,519 --> 00:09:59,040
right

222
00:09:59,040 --> 00:10:01,040
only six of the key bytes are used in

223
00:10:01,040 --> 00:10:03,519
the calculation of that difference

224
00:10:03,519 --> 00:10:05,279
additionally many of the calculations

225
00:10:05,279 --> 00:10:07,279
can be cached speeding up things even

226
00:10:07,279 --> 00:10:09,279
further

227
00:10:09,279 --> 00:10:11,600
this figure also shows the differences

228
00:10:11,600 --> 00:10:13,360
that are known with certainty and how

229
00:10:13,360 --> 00:10:15,360
they propagate through the third and

230
00:10:15,360 --> 00:10:18,680
fourth rounds

231
00:10:24,079 --> 00:10:27,519
the attack on six rounds can easily be

232
00:10:27,519 --> 00:10:30,000
extended to seven rounds by

233
00:10:30,000 --> 00:10:31,279
using

234
00:10:31,279 --> 00:10:32,720
the technique

235
00:10:32,720 --> 00:10:34,399
presented earlier on

236
00:10:34,399 --> 00:10:36,480
calculating the difference

237
00:10:36,480 --> 00:10:38,560
in a previous round so

238
00:10:38,560 --> 00:10:40,880
instead of looking for equal ciphertexts

239
00:10:40,880 --> 00:10:41,839
we

240
00:10:41,839 --> 00:10:44,240
look for cipher texts that

241
00:10:44,240 --> 00:10:45,600
imply

242
00:10:45,600 --> 00:10:48,720
an equal state after the

243
00:10:48,720 --> 00:10:52,000
next to last round

244
00:10:58,240 --> 00:11:00,240
eight rounds corresponds to the full

245
00:11:00,240 --> 00:11:04,079
cipher as used by second generation ale

246
00:11:04,079 --> 00:11:06,640
it is not possible to identify pairs of

247
00:11:06,640 --> 00:11:09,680
plain text ciphertext tweak tuples

248
00:11:09,680 --> 00:11:11,360
where collisions have occurred after the

249
00:11:11,360 --> 00:11:12,560
fourth round

250
00:11:12,560 --> 00:11:14,480
just by studying the differences in the

251
00:11:14,480 --> 00:11:17,440
ciphertext after the eighth round

252
00:11:17,440 --> 00:11:19,680
however it is possible through a fast

253
00:11:19,680 --> 00:11:21,360
filtering operation

254
00:11:21,360 --> 00:11:23,279
to reject all pairs that have zero

255
00:11:23,279 --> 00:11:25,040
probability of satisfying the

256
00:11:25,040 --> 00:11:29,000
requirements for the attack

257
00:11:35,200 --> 00:11:37,839
the filtering is performed in two steps

258
00:11:37,839 --> 00:11:39,360
in the first step

259
00:11:39,360 --> 00:11:41,600
the difference after the seventh round

260
00:11:41,600 --> 00:11:43,519
is calculated in the same way as

261
00:11:43,519 --> 00:11:45,200
previously

262
00:11:45,200 --> 00:11:46,959
pairs where

263
00:11:46,959 --> 00:11:49,440
the difference in state bytes a and c

264
00:11:49,440 --> 00:11:51,519
are not zero

265
00:11:51,519 --> 00:11:54,399
are immediately excluded most pairs are

266
00:11:54,399 --> 00:11:57,200
excluded in this step

267
00:11:57,200 --> 00:11:58,800
in the second step

268
00:11:58,800 --> 00:12:02,959
all 256 possible values of k by 3

269
00:12:02,959 --> 00:12:05,040
are tested to see if they lead to the

270
00:12:05,040 --> 00:12:06,959
required difference after the sixth

271
00:12:06,959 --> 00:12:08,959
round

272
00:12:08,959 --> 00:12:11,760
when they do this indicates a possible

273
00:12:11,760 --> 00:12:14,639
collision and a search for partial keys

274
00:12:14,639 --> 00:12:16,639
that cause the requisite difference

275
00:12:16,639 --> 00:12:19,040
after the third round is performed in

276
00:12:19,040 --> 00:12:21,920
the same manner as before

277
00:12:21,920 --> 00:12:23,760
the search will however be much faster

278
00:12:23,760 --> 00:12:26,720
than in the attacks on 6 and 7 rounds

279
00:12:26,720 --> 00:12:28,639
because the possible values of the third

280
00:12:28,639 --> 00:12:32,320
key byte are already known

281
00:12:36,720 --> 00:12:38,639
for the attacks to work

282
00:12:38,639 --> 00:12:40,800
a particular difference in the output of

283
00:12:40,800 --> 00:12:43,519
the third round has to exist

284
00:12:43,519 --> 00:12:45,760
assuming the cipher's randomization

285
00:12:45,760 --> 00:12:47,279
properties are good

286
00:12:47,279 --> 00:12:49,360
the probability of this happening is 2

287
00:12:49,360 --> 00:12:53,040
to the power of negative 24.

288
00:12:53,040 --> 00:12:55,680
in the ale standard each transmitted

289
00:12:55,680 --> 00:12:58,160
frame contains at least three 24-bit

290
00:12:58,160 --> 00:12:59,440
words

291
00:12:59,440 --> 00:13:02,240
this means that each transmitted frame

292
00:13:02,240 --> 00:13:05,200
causes three plain text ciphertext tweak

293
00:13:05,200 --> 00:13:08,639
pairs with the required difference

294
00:13:08,639 --> 00:13:10,320
under these conditions

295
00:13:10,320 --> 00:13:13,680
2 to the power 21.9 frames are required

296
00:13:13,680 --> 00:13:17,440
for 50 probability of success

297
00:13:17,440 --> 00:13:20,079
a call between two ale radios requires

298
00:13:20,079 --> 00:13:22,399
them to transmit at least four frames

299
00:13:22,399 --> 00:13:24,079
between them

300
00:13:24,079 --> 00:13:26,000
this translates to about a million

301
00:13:26,000 --> 00:13:28,959
intercepted calls for 50 probability of

302
00:13:28,959 --> 00:13:31,959
success

303
00:13:36,320 --> 00:13:38,320
as we have seen the known plaintext

304
00:13:38,320 --> 00:13:40,880
attacks presented here require a

305
00:13:40,880 --> 00:13:43,600
relatively large amount of data

306
00:13:43,600 --> 00:13:45,760
they can however be converted to chosen

307
00:13:45,760 --> 00:13:48,480
ciphertext attacks with very low data

308
00:13:48,480 --> 00:13:50,240
complexities

309
00:13:50,240 --> 00:13:52,480
this is possible since it is easy to

310
00:13:52,480 --> 00:13:55,279
generate pairs of ciphertexts that will

311
00:13:55,279 --> 00:13:56,959
cause the required collision with high

312
00:13:56,959 --> 00:13:58,800
probability

313
00:13:58,800 --> 00:14:01,279
in fact only one pair of ciphertexts is

314
00:14:01,279 --> 00:14:03,519
required for each candidate value for

315
00:14:03,519 --> 00:14:05,600
key byte 3.

316
00:14:05,600 --> 00:14:08,639
so in other words with 256 generated

317
00:14:08,639 --> 00:14:09,600
pairs

318
00:14:09,600 --> 00:14:11,920
the probability of success of the chosen

319
00:14:11,920 --> 00:14:14,839
ciphertext attack is 100

320
00:14:14,839 --> 00:14:17,519
percent in addition to this

321
00:14:17,519 --> 00:14:19,440
the tech complexity compared to the

322
00:14:19,440 --> 00:14:23,680
known plaintext attack is slightly lower

323
00:14:26,720 --> 00:14:28,720
the attacks described in the paper have

324
00:14:28,720 --> 00:14:31,120
been implemented in c and the cuda

325
00:14:31,120 --> 00:14:35,040
framework for nvidia gpus

326
00:14:35,040 --> 00:14:37,519
a bit slice brute force implementation

327
00:14:37,519 --> 00:14:39,360
has also been developed and used to

328
00:14:39,360 --> 00:14:42,000
benchmark the attacks

329
00:14:42,000 --> 00:14:44,880
on a computer with six mid-range gpus a

330
00:14:44,880 --> 00:14:48,720
brute force attack takes about five days

331
00:14:48,720 --> 00:14:51,360
the attacks implemented here take 42

332
00:14:51,360 --> 00:14:54,399
minutes to perform on the same computer

333
00:14:54,399 --> 00:14:56,800
programs for generating test data have

334
00:14:56,800 --> 00:14:59,199
also been developed and all code is

335
00:14:59,199 --> 00:15:01,680
available to download from github under

336
00:15:01,680 --> 00:15:04,800
an open source license

337
00:15:11,360 --> 00:15:13,440
when it comes to future work attacks on

338
00:15:13,440 --> 00:15:15,760
the 16 round version of the cipher which

339
00:15:15,760 --> 00:15:18,160
is used in third generation ale have not

340
00:15:18,160 --> 00:15:19,760
been developed

341
00:15:19,760 --> 00:15:21,199
the attacks presented here may be

342
00:15:21,199 --> 00:15:24,480
possible to extend to more rounds

343
00:15:24,480 --> 00:15:26,399
in third generation ale

344
00:15:26,399 --> 00:15:29,040
a 48-bit version of the cipher is also

345
00:15:29,040 --> 00:15:30,399
introduced

346
00:15:30,399 --> 00:15:32,639
in addition to the larger block size

347
00:15:32,639 --> 00:15:34,800
that version also has a slightly

348
00:15:34,800 --> 00:15:37,600
modified round function

349
00:15:37,600 --> 00:15:40,000
and there does not appear to exist a

350
00:15:40,000 --> 00:15:43,600
cryptanalysis of that cipher

351
00:15:44,000 --> 00:15:46,000
in the latest version of the standard a

352
00:15:46,000 --> 00:15:48,160
cipher developed for fourth generation

353
00:15:48,160 --> 00:15:50,000
ali is also introduced

354
00:15:50,000 --> 00:15:51,839
a half loop

355
00:15:51,839 --> 00:15:54,720
it's based in part on aes

356
00:15:54,720 --> 00:15:56,720
but has many differences that include a

357
00:15:56,720 --> 00:15:58,079
different block size or actually

358
00:15:58,079 --> 00:15:59,839
different block sizes

359
00:15:59,839 --> 00:16:02,160
and another key schedule as compared to

360
00:16:02,160 --> 00:16:04,639
aes

361
00:16:04,880 --> 00:16:07,279
and with that i conclude my presentation

362
00:16:07,279 --> 00:16:11,399
and i thank you for your attention

