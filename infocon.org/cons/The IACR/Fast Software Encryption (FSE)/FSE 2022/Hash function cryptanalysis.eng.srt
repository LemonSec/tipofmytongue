1
00:00:05,440 --> 00:00:07,200
okay so good morning to youtube as well

2
00:00:07,200 --> 00:00:10,080
now um welcome to the session on hash

3
00:00:10,080 --> 00:00:12,400
function

4
00:00:13,200 --> 00:00:14,880
okay let's try third time good morning

5
00:00:14,880 --> 00:00:17,680
youtube and welcome to hash function

6
00:00:17,680 --> 00:00:19,840
groups analysis uh so we have six talks

7
00:00:19,840 --> 00:00:22,320
again today uh the first one is on catch

8
00:00:22,320 --> 00:00:24,000
up it's not the only one on catch up in

9
00:00:24,000 --> 00:00:25,279
the session

10
00:00:25,279 --> 00:00:27,599
but now it's on condition attacks and uh

11
00:00:27,599 --> 00:00:30,800
it's by um sachel in boise and jan

12
00:00:30,800 --> 00:00:33,760
rotella so russian

13
00:00:33,760 --> 00:00:36,719
the stage is yours

14
00:00:42,960 --> 00:00:44,879
thank you for the introduction

15
00:00:44,879 --> 00:00:45,760
uh

16
00:00:45,760 --> 00:00:47,280
and thank you for listening to this talk

17
00:00:47,280 --> 00:00:48,559
about collision attacks on small

18
00:00:48,559 --> 00:00:50,480
keyshack it's a work of them together

19
00:00:50,480 --> 00:00:52,800
with january

20
00:00:52,800 --> 00:00:54,960
so keshak is a hash function designed by

21
00:00:54,960 --> 00:00:57,120
guido bertoni iran demand michael peters

22
00:00:57,120 --> 00:00:58,559
and gilvan asch

23
00:00:58,559 --> 00:01:00,559
it uses a permutation based mode of

24
00:01:00,559 --> 00:01:02,719
operation called the sponge construction

25
00:01:02,719 --> 00:01:04,640
and the underlying permutation is called

26
00:01:04,640 --> 00:01:07,200
ketchup fb where b is the state length

27
00:01:07,200 --> 00:01:09,680
in bits

28
00:01:10,159 --> 00:01:12,640
in 2012 four of its instances have been

29
00:01:12,640 --> 00:01:15,439
uh standardized under the name shatri

30
00:01:15,439 --> 00:01:17,280
and for these standardized instances the

31
00:01:17,280 --> 00:01:19,119
state has length a thousand six hundred

32
00:01:19,119 --> 00:01:19,720
bits

33
00:01:19,720 --> 00:01:20,960
[Music]

34
00:01:20,960 --> 00:01:21,920
um

35
00:01:21,920 --> 00:01:24,000
but today we are going to focus on small

36
00:01:24,000 --> 00:01:25,680
key check

37
00:01:25,680 --> 00:01:28,240
which have a state length of either 200

38
00:01:28,240 --> 00:01:30,079
or 400 bits

39
00:01:30,079 --> 00:01:32,720
two main motivations for that

40
00:01:32,720 --> 00:01:34,560
first they have been proposed for uses

41
00:01:34,560 --> 00:01:37,119
in constraint environments

42
00:01:37,119 --> 00:01:39,280
and also the attacks that have been

43
00:01:39,280 --> 00:01:41,600
previously designed on a big check do

44
00:01:41,600 --> 00:01:44,159
not work on these small instances

45
00:01:44,159 --> 00:01:46,320
so we designed the first attack on a

46
00:01:46,320 --> 00:01:47,600
round reduced version with the

47
00:01:47,600 --> 00:01:51,119
permutation reduced to two rounds

48
00:01:52,880 --> 00:01:55,200
so in the case of smoke a check

49
00:01:55,200 --> 00:01:57,119
the rate is smaller than the output

50
00:01:57,119 --> 00:01:58,560
length

51
00:01:58,560 --> 00:02:00,399
this means that if you want to get a

52
00:02:00,399 --> 00:02:02,000
collision on the output of the hash

53
00:02:02,000 --> 00:02:03,920
function you will need to obtain a

54
00:02:03,920 --> 00:02:07,119
collision on several output blocks here

55
00:02:07,119 --> 00:02:08,720
despite the fact that they are outputted

56
00:02:08,720 --> 00:02:10,399
with in-between applications of the

57
00:02:10,399 --> 00:02:13,440
permutation f which can be tricky

58
00:02:13,440 --> 00:02:15,200
to overcome this difficulty a good

59
00:02:15,200 --> 00:02:17,920
strategy for the attacker is to try and

60
00:02:17,920 --> 00:02:18,959
produce

61
00:02:18,959 --> 00:02:21,120
inner collisions that is a collision on

62
00:02:21,120 --> 00:02:23,840
the capacity part of the state here

63
00:02:23,840 --> 00:02:24,640
um

64
00:02:24,640 --> 00:02:27,120
and it's very easy to see that these

65
00:02:27,120 --> 00:02:28,480
inner collisions can be easily

66
00:02:28,480 --> 00:02:31,280
propagated to all output blocks and thus

67
00:02:31,280 --> 00:02:33,840
the output of the hash function

68
00:02:33,840 --> 00:02:38,400
so that's the strategy we decided to use

69
00:02:39,440 --> 00:02:41,680
so here i've represented two rounds of

70
00:02:41,680 --> 00:02:42,720
ketchup

71
00:02:42,720 --> 00:02:44,640
uh

72
00:02:44,640 --> 00:02:46,959
in this case it's sketch 200 with a rate

73
00:02:46,959 --> 00:02:48,720
of 40 bits

74
00:02:48,720 --> 00:02:51,519
and so uh here i've represented another

75
00:02:51,519 --> 00:02:54,319
collision on the blue bits

76
00:02:54,319 --> 00:02:57,200
so uh getting an inaccurate collision

77
00:02:57,200 --> 00:02:58,720
after two rounds of attack can be

78
00:02:58,720 --> 00:03:01,280
modalized by a system of

79
00:03:01,280 --> 00:03:04,239
c equations that have and it has degree

80
00:03:04,239 --> 00:03:05,360
four

81
00:03:05,360 --> 00:03:07,680
because there are two applications of

82
00:03:07,680 --> 00:03:10,239
the non-linear mapping of ketchup which

83
00:03:10,239 --> 00:03:13,519
is a guy and which is of degree two

84
00:03:13,519 --> 00:03:16,000
however

85
00:03:17,519 --> 00:03:20,000
we showed that uh getting a collision on

86
00:03:20,000 --> 00:03:21,920
the blue bits after two rounds of the

87
00:03:21,920 --> 00:03:24,239
check on the inner states after two

88
00:03:24,239 --> 00:03:26,640
rounds of ketchup is in fact equivalent

89
00:03:26,640 --> 00:03:29,760
to having a collision on these blue bits

90
00:03:29,760 --> 00:03:31,840
after only one round of ketchup and one

91
00:03:31,840 --> 00:03:33,440
application of theta

92
00:03:33,440 --> 00:03:36,000
this means that we have to solve a

93
00:03:36,000 --> 00:03:38,080
system of degree only two rather than

94
00:03:38,080 --> 00:03:40,319
four

95
00:03:42,480 --> 00:03:45,200
next we showed that having a collision

96
00:03:45,200 --> 00:03:47,120
on the blue bits of on the blue bits

97
00:03:47,120 --> 00:03:48,560
after theta

98
00:03:48,560 --> 00:03:50,799
implies having a

99
00:03:50,799 --> 00:03:52,799
constant difference on the column

100
00:03:52,799 --> 00:03:55,439
between the two states before theta

101
00:03:55,439 --> 00:03:56,959
in fact

102
00:03:56,959 --> 00:03:59,200
we show that if you have this property

103
00:03:59,200 --> 00:04:01,200
of constant difference on collins before

104
00:04:01,200 --> 00:04:03,760
theta then the chances of getting an

105
00:04:03,760 --> 00:04:05,680
inner collision or rather a collision on

106
00:04:05,680 --> 00:04:07,840
the blue beads after theta is greatly

107
00:04:07,840 --> 00:04:10,239
improved

108
00:04:10,799 --> 00:04:13,439
however because we had very very few

109
00:04:13,439 --> 00:04:16,798
degrees of freedom

110
00:04:16,880 --> 00:04:19,279
we wanted to launch a birthday attack

111
00:04:19,279 --> 00:04:22,400
so to do that we needed to create a set

112
00:04:22,400 --> 00:04:25,120
in which any pair of states would have

113
00:04:25,120 --> 00:04:27,520
constant difference on columns

114
00:04:27,520 --> 00:04:29,120
before theta

115
00:04:29,120 --> 00:04:30,800
and to do that we decided to simply

116
00:04:30,800 --> 00:04:31,759
produce

117
00:04:31,759 --> 00:04:33,919
states that are constant on colons

118
00:04:33,919 --> 00:04:36,639
before theta

119
00:04:38,000 --> 00:04:39,360
so at this point i can now give you a

120
00:04:39,360 --> 00:04:42,320
general description of the attack

121
00:04:42,320 --> 00:04:44,240
you simply absorb the random long

122
00:04:44,240 --> 00:04:46,800
message and you get a random state here

123
00:04:46,800 --> 00:04:50,240
and that's a random inner state

124
00:04:50,240 --> 00:04:54,000
and then um we are going to use a very

125
00:04:54,000 --> 00:04:57,120
common uh kai linearization techniques

126
00:04:57,120 --> 00:05:00,000
um that allowed us to construct a system

127
00:05:00,000 --> 00:05:01,680
of linear equations depending on the

128
00:05:01,680 --> 00:05:03,600
bits of s and of m

129
00:05:03,600 --> 00:05:06,479
um so that if you solve this system

130
00:05:06,479 --> 00:05:08,080
you

131
00:05:08,080 --> 00:05:10,000
you get a state that has a very good

132
00:05:10,000 --> 00:05:12,240
probability of having constant

133
00:05:12,240 --> 00:05:15,360
sorry uh constancy on collins uh before

134
00:05:15,360 --> 00:05:17,680
theta

135
00:05:18,800 --> 00:05:22,479
so we designed the first and uh the best

136
00:05:22,479 --> 00:05:24,800
so far attack on three small cajac

137
00:05:24,800 --> 00:05:26,400
instances

138
00:05:26,400 --> 00:05:29,520
our attacks are not practical but they

139
00:05:29,520 --> 00:05:31,759
beat the generic attacks on these

140
00:05:31,759 --> 00:05:34,800
instances and they have been

141
00:05:34,800 --> 00:05:37,199
implemented and verified on toy versions

142
00:05:37,199 --> 00:05:39,680
with a state of 100 bits

143
00:05:39,680 --> 00:05:41,280
thank you for listening and if you have

144
00:05:41,280 --> 00:05:44,520
any questions

145
00:06:03,759 --> 00:06:07,120
so um how did you choose the uh

146
00:06:07,120 --> 00:06:08,560
variants that you're targeting or the

147
00:06:08,560 --> 00:06:10,639
parameter sets are they like did you

148
00:06:10,639 --> 00:06:12,639
decide that after you had the ideas for

149
00:06:12,639 --> 00:06:14,639
the attack or is it maybe from the

150
00:06:14,639 --> 00:06:18,240
crunchy contest or so yeah

151
00:06:18,560 --> 00:06:20,960
so for the first instances here the

152
00:06:20,960 --> 00:06:22,880
first instance here with the state of

153
00:06:22,880 --> 00:06:26,639
200 bits and 160 lengths of capacity

154
00:06:26,639 --> 00:06:28,960
that was in the crunchy contest so it's

155
00:06:28,960 --> 00:06:30,000
a

156
00:06:30,000 --> 00:06:31,919
it's a contest organized by the ketchup

157
00:06:31,919 --> 00:06:34,240
designers to motivate crypt analysis for

158
00:06:34,240 --> 00:06:35,520
ketchup

159
00:06:35,520 --> 00:06:37,280
but for the other instances we were

160
00:06:37,280 --> 00:06:39,520
motivated by a paper that proposed this

161
00:06:39,520 --> 00:06:43,520
smoker check for for users in rfid

162
00:06:43,520 --> 00:06:44,479
so yeah

163
00:06:44,479 --> 00:06:48,039
that was a motivation

164
00:06:48,080 --> 00:06:50,639
other questions

165
00:06:52,960 --> 00:06:54,670
okay then

166
00:06:54,670 --> 00:06:57,779
[Music]

167
00:07:03,599 --> 00:07:06,160
and we can now switch to an online talk

168
00:07:06,160 --> 00:07:08,000
so we'll continue having a look at

169
00:07:08,000 --> 00:07:12,000
catchup but now at pre-image attacks

170
00:07:14,720 --> 00:07:18,000
so uh the next talk um is called um

171
00:07:18,000 --> 00:07:19,919
improved premature attacks on three

172
00:07:19,919 --> 00:07:23,520
round ketchup two to four to fifty six

173
00:07:23,520 --> 00:07:25,680
and it's one of two very closely related

174
00:07:25,680 --> 00:07:27,759
papers that we hear now uh both of them

175
00:07:27,759 --> 00:07:29,440
will be presented online and both of

176
00:07:29,440 --> 00:07:32,319
them are by xiao ending leiha and

177
00:07:32,319 --> 00:07:33,440
hongboyu

178
00:07:33,440 --> 00:07:35,520
and the first of the talks will given be

179
00:07:35,520 --> 00:07:37,360
will be given by xiao and are you

180
00:07:37,360 --> 00:07:38,639
already here

181
00:07:38,639 --> 00:07:40,479
uh yes

182
00:07:40,479 --> 00:07:44,080
okay can you share your slides

183
00:07:45,260 --> 00:07:48,490
[Music]

184
00:07:49,520 --> 00:07:51,759
can you see

185
00:07:51,759 --> 00:07:54,160
yes that looks great

186
00:07:54,160 --> 00:07:55,280
so uh

187
00:07:55,280 --> 00:07:56,400
welcome

188
00:07:56,400 --> 00:07:59,840
and let's have a look at your talk

189
00:08:00,400 --> 00:08:01,840
okay thank you

190
00:08:01,840 --> 00:08:05,120
[Music]

191
00:08:05,120 --> 00:08:06,800
hello i'm nisha i'm from ching hai

192
00:08:06,800 --> 00:08:09,280
university today i will introduce the

193
00:08:09,280 --> 00:08:11,520
paper improved premature attacks on

194
00:08:11,520 --> 00:08:16,240
surround contract 224 or 256

195
00:08:16,240 --> 00:08:18,479
in this paper we propose two techniques

196
00:08:18,479 --> 00:08:20,879
than the iterating search strategy and

197
00:08:20,879 --> 00:08:21,840
effector

198
00:08:21,840 --> 00:08:24,160
strategy to improve the first stage of

199
00:08:24,160 --> 00:08:26,800
previous work using these techniques we

200
00:08:26,800 --> 00:08:28,560
can get a better inner state which

201
00:08:28,560 --> 00:08:30,639
provides more degrees of freedom for the

202
00:08:30,639 --> 00:08:31,919
second stage

203
00:08:31,919 --> 00:08:34,320
as a result it is expected that the

204
00:08:34,320 --> 00:08:37,279
complicity of pre-image attacks of c run

205
00:08:37,279 --> 00:08:40,799
contract 224 or 256

206
00:08:40,799 --> 00:08:43,679
will be decreased to the 32 or 65 power

207
00:08:43,679 --> 00:08:45,600
of two

208
00:08:45,600 --> 00:08:47,920
my presentation includes four parts the

209
00:08:47,920 --> 00:08:50,080
research problem related work

210
00:08:50,080 --> 00:08:52,959
methodology and conclusion

211
00:08:52,959 --> 00:08:56,000
first research problem cachac which is

212
00:08:56,000 --> 00:08:58,640
chosen as secure hash algorithm standard

213
00:08:58,640 --> 00:09:01,040
is an important hash function in this

214
00:09:01,040 --> 00:09:03,760
paper we focus on pre-image attacks on

215
00:09:03,760 --> 00:09:09,200
three-round contract 224 or 256.

216
00:09:09,200 --> 00:09:12,880
when relative work in 2016 got at all

217
00:09:12,880 --> 00:09:15,200
put forward a technique named linear

218
00:09:15,200 --> 00:09:16,399
structure

219
00:09:16,399 --> 00:09:18,720
as shown on a picture by setting some

220
00:09:18,720 --> 00:09:21,440
bits and adding some linear equations

221
00:09:21,440 --> 00:09:23,680
then inner state will develop as the

222
00:09:23,680 --> 00:09:25,920
picture shows

223
00:09:25,920 --> 00:09:28,240
after that the less degrees of freedom

224
00:09:28,240 --> 00:09:30,720
will be used to restrict some alphabets

225
00:09:30,720 --> 00:09:33,519
to mature digest

226
00:09:33,519 --> 00:09:36,000
as a result we can get pre-image by

227
00:09:36,000 --> 00:09:37,839
solving linear equations and check the

228
00:09:37,839 --> 00:09:40,399
digest repeatedly until all the upper

229
00:09:40,399 --> 00:09:42,720
bits are matched

230
00:09:42,720 --> 00:09:44,320
in 2019

231
00:09:44,320 --> 00:09:46,240
liaison put forward a new linear

232
00:09:46,240 --> 00:09:48,240
structure which has more degrees of

233
00:09:48,240 --> 00:09:50,160
freedom

234
00:09:50,160 --> 00:09:52,160
however the study in a state is not

235
00:09:52,160 --> 00:09:54,320
legal if there is only one message block

236
00:09:54,320 --> 00:09:57,920
involved in this linear structure

237
00:09:57,920 --> 00:09:59,920
to meet the restrictions of the study in

238
00:09:59,920 --> 00:10:02,000
a state that you score at all linear

239
00:10:02,000 --> 00:10:04,240
structure and add another message block

240
00:10:04,240 --> 00:10:06,320
before

241
00:10:06,320 --> 00:10:08,160
note that there is a tradeoff between

242
00:10:08,160 --> 00:10:10,880
the two stages the complicity of solving

243
00:10:10,880 --> 00:10:12,640
the second message block is lower than

244
00:10:12,640 --> 00:10:15,040
that of showing the first message block

245
00:10:15,040 --> 00:10:17,040
by meeting fewer restrictions the

246
00:10:17,040 --> 00:10:19,120
complexity of the first message block

247
00:10:19,120 --> 00:10:21,519
can be decreased while the complicity of

248
00:10:21,519 --> 00:10:25,120
the second message block will increase

249
00:10:25,120 --> 00:10:27,440
next methodology

250
00:10:27,440 --> 00:10:29,360
in this part i will introduce two

251
00:10:29,360 --> 00:10:31,600
techniques proposed in this paper to

252
00:10:31,600 --> 00:10:33,600
improve the pre-image attacks

253
00:10:33,600 --> 00:10:35,680
specifically these two techniques

254
00:10:35,680 --> 00:10:37,839
improve the first stage of the previous

255
00:10:37,839 --> 00:10:40,240
pre-measure text

256
00:10:40,240 --> 00:10:42,880
one technique is iterative strategy this

257
00:10:42,880 --> 00:10:45,560
strategy can be used in both 3-round

258
00:10:45,560 --> 00:10:49,120
224 and 256

259
00:10:49,120 --> 00:10:52,240
based only at us 2 block model we extend

260
00:10:52,240 --> 00:10:54,160
the first step to more than one message

261
00:10:54,160 --> 00:10:56,640
block in other words we don't spend the

262
00:10:56,640 --> 00:10:58,720
degrees of freedom in the second message

263
00:10:58,720 --> 00:11:01,200
block matching output bits directly but

264
00:11:01,200 --> 00:11:02,880
we spend them restricting more

265
00:11:02,880 --> 00:11:05,120
restrictions as the first message block

266
00:11:05,120 --> 00:11:06,000
does

267
00:11:06,000 --> 00:11:08,079
with a good starting instead

268
00:11:08,079 --> 00:11:10,480
it is faster and more likely to generate

269
00:11:10,480 --> 00:11:12,160
a better inner state

270
00:11:12,160 --> 00:11:14,800
iteratively more and more restrictions

271
00:11:14,800 --> 00:11:16,640
will be satisfied

272
00:11:16,640 --> 00:11:19,200
after a good enough intersect is found

273
00:11:19,200 --> 00:11:21,200
we construct the last message block

274
00:11:21,200 --> 00:11:23,760
matching the target of bits as they do

275
00:11:23,760 --> 00:11:25,440
in the second stage

276
00:11:25,440 --> 00:11:27,760
and we can get the entire pre-image

277
00:11:27,760 --> 00:11:30,320
eventually

278
00:11:30,320 --> 00:11:33,360
another technique is 543 strategy this

279
00:11:33,360 --> 00:11:36,000
strategy can only be used in parameter

280
00:11:36,000 --> 00:11:38,720
of 256.

281
00:11:38,720 --> 00:11:41,120
in the first stage of previous work they

282
00:11:41,120 --> 00:11:43,040
spent every four degrees of freedom

283
00:11:43,040 --> 00:11:45,120
emitting two restrictions in both two

284
00:11:45,120 --> 00:11:47,200
parameters of cat chart

285
00:11:47,200 --> 00:11:49,519
however when applying to three run

286
00:11:49,519 --> 00:11:51,680
contract 256

287
00:11:51,680 --> 00:11:53,680
it is possible to spend every five

288
00:11:53,680 --> 00:11:55,440
degrees of freedom meeting three

289
00:11:55,440 --> 00:11:57,200
restrictions

290
00:11:57,200 --> 00:11:58,880
the linear questions are shown as

291
00:11:58,880 --> 00:12:01,360
follows

292
00:12:01,920 --> 00:12:04,560
the table shows that the 543 strategy

293
00:12:04,560 --> 00:12:06,480
has a big advantage and fought for two

294
00:12:06,480 --> 00:12:10,240
strategy in finding a good inner state

295
00:12:10,240 --> 00:12:12,880
last conclusion in this paper we

296
00:12:12,880 --> 00:12:15,120
proposed two techniques namely iterating

297
00:12:15,120 --> 00:12:17,600
strategy and five or three strategy

298
00:12:17,600 --> 00:12:20,000
iterating strategy uses multi-message

299
00:12:20,000 --> 00:12:22,639
blocks to provide a paternal set with

300
00:12:22,639 --> 00:12:24,639
small degrees of freedom

301
00:12:24,639 --> 00:12:26,959
five for three strategy can satisfy more

302
00:12:26,959 --> 00:12:29,279
restrictions within the same degrees of

303
00:12:29,279 --> 00:12:32,320
freedom as a result the complicity of

304
00:12:32,320 --> 00:12:34,320
pre-image attacks on three-round cat

305
00:12:34,320 --> 00:12:38,560
chart 224 or 256 can be decreased to the

306
00:12:38,560 --> 00:12:40,800
32 or 65

307
00:12:40,800 --> 00:12:42,399
power of two

308
00:12:42,399 --> 00:12:44,399
however it is nothing that our

309
00:12:44,399 --> 00:12:45,920
techniques are still far from

310
00:12:45,920 --> 00:12:48,240
straightening the security of other

311
00:12:48,240 --> 00:12:51,600
contract variants or morons

312
00:12:51,600 --> 00:12:53,839
thank you

313
00:13:02,000 --> 00:13:04,639
thanks a lot uh sean so which questions

314
00:13:04,639 --> 00:13:07,839
do we have for you

315
00:13:08,500 --> 00:13:11,279
[Music]

316
00:13:11,279 --> 00:13:13,519
oh

317
00:13:13,600 --> 00:13:16,240
anything online

318
00:13:16,240 --> 00:13:18,160
no

319
00:13:18,160 --> 00:13:21,279
okay then maybe i have a question um so

320
00:13:21,279 --> 00:13:22,880
you you propose some interesting

321
00:13:22,880 --> 00:13:25,279
techniques and i was wondering um there

322
00:13:25,279 --> 00:13:26,639
are some candidates in the nist

323
00:13:26,639 --> 00:13:28,639
lightweight competition which are

324
00:13:28,639 --> 00:13:30,560
somewhat similar to to catch up like

325
00:13:30,560 --> 00:13:32,560
zodiac for example do you think your

326
00:13:32,560 --> 00:13:34,320
techniques would be useful for these

327
00:13:34,320 --> 00:13:36,959
hash functions

328
00:13:37,279 --> 00:13:37,680
um

329
00:13:37,680 --> 00:13:39,199
[Music]

330
00:13:39,199 --> 00:13:41,199
i

331
00:13:41,199 --> 00:13:43,199
i don't

332
00:13:43,199 --> 00:13:45,839
i don't know what

333
00:13:47,120 --> 00:13:48,880
i think

334
00:13:48,880 --> 00:13:52,399
my my technique can use in the

335
00:13:52,399 --> 00:13:54,079
uh

336
00:13:54,079 --> 00:13:56,800
in two-stage model and uh

337
00:13:56,800 --> 00:13:58,560
um

338
00:13:58,560 --> 00:14:00,160
and the

339
00:14:00,160 --> 00:14:03,360
interaction strategy can you see in the

340
00:14:03,360 --> 00:14:03,740
um

341
00:14:03,740 --> 00:14:04,959
[Music]

342
00:14:04,959 --> 00:14:06,240
in

343
00:14:06,240 --> 00:14:08,480
um

344
00:14:09,519 --> 00:14:11,600
maybe

345
00:14:11,600 --> 00:14:15,040
it can improve the inner state

346
00:14:15,040 --> 00:14:17,600
better and better and the first three

347
00:14:17,600 --> 00:14:21,440
strategy can only use in uh in this case

348
00:14:21,440 --> 00:14:25,920
for the special sports and uh

349
00:14:26,079 --> 00:14:28,320
situation that needs to

350
00:14:28,320 --> 00:14:29,519
restrict

351
00:14:29,519 --> 00:14:33,600
uh three equations

352
00:14:34,160 --> 00:14:35,440
so if

353
00:14:35,440 --> 00:14:38,800
uh if some um

354
00:14:38,800 --> 00:14:42,800
some other hash algorithm uh can

355
00:14:42,800 --> 00:14:44,800
meet this

356
00:14:44,800 --> 00:14:47,360
restriction

357
00:14:47,360 --> 00:14:51,360
then we can use this technique

358
00:14:51,360 --> 00:14:52,720
thank you

359
00:14:52,720 --> 00:14:55,519
any other questions

360
00:14:56,720 --> 00:14:59,279
okay then let's have a look at the

361
00:14:59,279 --> 00:15:01,680
second and closely related talk um which

362
00:15:01,680 --> 00:15:03,440
has almost the same title except it's

363
00:15:03,440 --> 00:15:05,760
now covering four rounds instead of

364
00:15:05,760 --> 00:15:07,440
three rounds and it's going to be

365
00:15:07,440 --> 00:15:09,760
presented by lehigh

366
00:15:09,760 --> 00:15:11,519
can you share your screen hello can you

367
00:15:11,519 --> 00:15:12,720
hear me

368
00:15:12,720 --> 00:15:14,959
yeah can you hear me

369
00:15:14,959 --> 00:15:17,199
yes

370
00:15:19,600 --> 00:15:22,320
okay it's the fire right

371
00:15:22,320 --> 00:15:26,959
yep that looks good okay now let's start

372
00:15:26,959 --> 00:15:28,880
oh please wait okay

373
00:15:28,880 --> 00:15:31,199
hello everyone i'm laura from tinghaw

374
00:15:31,199 --> 00:15:33,440
university one of the authors of paper

375
00:15:33,440 --> 00:15:35,519
improved premier texts on foreign

376
00:15:35,519 --> 00:15:38,519
224-256

377
00:15:38,639 --> 00:15:40,480
on behalf of other authors so that i

378
00:15:40,480 --> 00:15:42,240
will give a presentation to introduce

379
00:15:42,240 --> 00:15:45,279
our work in this paper

380
00:15:46,880 --> 00:15:48,880
as the title indicates the analysis

381
00:15:48,880 --> 00:15:50,480
object of our paper is limited to

382
00:15:50,480 --> 00:15:52,720
foreign low capital chart and we focus

383
00:15:52,720 --> 00:15:54,720
on linear analysis which is commonly

384
00:15:54,720 --> 00:15:56,880
used in pre-image attacks all main

385
00:15:56,880 --> 00:15:58,800
contributions are reflected in partial

386
00:15:58,800 --> 00:16:01,040
innovation part we improved efficiency

387
00:16:01,040 --> 00:16:02,880
of partial innovation by applying two

388
00:16:02,880 --> 00:16:05,440
technologies named freedom view strategy

389
00:16:05,440 --> 00:16:08,000
and their coefficient as a result we

390
00:16:08,000 --> 00:16:10,000
reduce the complexities by factors of 2

391
00:16:10,000 --> 00:16:13,199
to the power 15 and 2 12 21 compared to

392
00:16:13,199 --> 00:16:15,199
the currently best results presented in

393
00:16:15,199 --> 00:16:17,360
ls19

394
00:16:17,360 --> 00:16:18,880
for the reason of time limit we have to

395
00:16:18,880 --> 00:16:21,120
skip most details of capture calculating

396
00:16:21,120 --> 00:16:23,199
here we only clarify the quality

397
00:16:23,199 --> 00:16:25,120
function of chart there are five steps

398
00:16:25,120 --> 00:16:29,360
in each round theta rho pi chi iota zeta

399
00:16:29,360 --> 00:16:30,880
is the diffusion layer by the sum

400
00:16:30,880 --> 00:16:33,360
operation among 11 bits yo and pi are

401
00:16:33,360 --> 00:16:36,240
b2b permutations chi is a 5-bit product

402
00:16:36,240 --> 00:16:38,639
xbox which is the only nonlinear step

403
00:16:38,639 --> 00:16:41,199
and iotize the constant sum layer

404
00:16:41,199 --> 00:16:42,880
the linear analysis mainly needs to deal

405
00:16:42,880 --> 00:16:45,120
with step data and step kind and try to

406
00:16:45,120 --> 00:16:48,639
pass through a small round as possible

407
00:16:48,639 --> 00:16:50,480
the attack frame of our linear analysis

408
00:16:50,480 --> 00:16:52,079
on foreign low capacity charge is

409
00:16:52,079 --> 00:16:54,480
depicted in this figure suppose starting

410
00:16:54,480 --> 00:16:56,560
variables are set in the initial state

411
00:16:56,560 --> 00:16:59,199
we first apply a 2.5 rounding structure

412
00:16:59,199 --> 00:17:00,800
so that the whole state of pi third

413
00:17:00,800 --> 00:17:02,079
keeps linear

414
00:17:02,079 --> 00:17:03,680
then we continue with the one-run

415
00:17:03,680 --> 00:17:05,679
partial organization to let the linear

416
00:17:05,679 --> 00:17:07,679
route reach say pi force since the

417
00:17:07,679 --> 00:17:09,280
linear error doesn't reach divisors we

418
00:17:09,280 --> 00:17:11,199
still need to perform an x-box inversion

419
00:17:11,199 --> 00:17:13,679
to make match the digest at linear space

420
00:17:13,679 --> 00:17:15,439
finally the complexity decrease will

421
00:17:15,439 --> 00:17:17,119
correspond to the gain of effective

422
00:17:17,119 --> 00:17:20,000
equations in the version

423
00:17:20,000 --> 00:17:22,079
therefore our pre-image attacks can be

424
00:17:22,079 --> 00:17:23,919
divided into three parts linear

425
00:17:23,919 --> 00:17:26,319
structure partial linearization and gain

426
00:17:26,319 --> 00:17:28,559
analysis the idea of linear structure

427
00:17:28,559 --> 00:17:31,360
was first proposing glx 16 and then

428
00:17:31,360 --> 00:17:33,840
develop the lx19 to learn this part

429
00:17:33,840 --> 00:17:36,720
please refer to the related papers our

430
00:17:36,720 --> 00:17:38,400
work directly enhance the development

431
00:17:38,400 --> 00:17:40,240
model and makes efforts in partial

432
00:17:40,240 --> 00:17:41,600
information

433
00:17:41,600 --> 00:17:43,760
and to start with let's take an overview

434
00:17:43,760 --> 00:17:46,640
on the old strategy of lighting lx19

435
00:17:46,640 --> 00:17:48,000
according to the property of run

436
00:17:48,000 --> 00:17:50,240
function 10 constants are required to

437
00:17:50,240 --> 00:17:52,400
linearize one bit this is indeed the

438
00:17:52,400 --> 00:17:54,320
most efficiency strategy for a single

439
00:17:54,320 --> 00:17:56,799
bit yet for multi-bit it is apparently

440
00:17:56,799 --> 00:17:58,799
inefficient because it weighs about half

441
00:17:58,799 --> 00:18:01,200
bit in the middle state and to make use

442
00:18:01,200 --> 00:18:03,280
of those wasted beats we can add another

443
00:18:03,280 --> 00:18:05,200
constant to linearize a bit pair which

444
00:18:05,200 --> 00:18:07,600
composes an improved strategy yet the

445
00:18:07,600 --> 00:18:09,360
restriction is distributed pair may not

446
00:18:09,360 --> 00:18:11,520
both be inversed by the digest so get

447
00:18:11,520 --> 00:18:13,200
analysis will become more complicated

448
00:18:13,200 --> 00:18:15,360
under this improved strategy

449
00:18:15,360 --> 00:18:17,520
and to reduce cost of freedom we finally

450
00:18:17,520 --> 00:18:19,600
apply a freedom view strategy where 5

451
00:18:19,600 --> 00:18:21,919
constants coinciding each turn as shown

452
00:18:21,919 --> 00:18:23,039
in the figure

453
00:18:23,039 --> 00:18:24,880
in other words our strategy can

454
00:18:24,880 --> 00:18:26,960
linearize every 2 bits by adding only

455
00:18:26,960 --> 00:18:29,520
six contents

456
00:18:29,520 --> 00:18:31,520
under freedom strategy we find we can

457
00:18:31,520 --> 00:18:34,320
finally spend 173 degrees of freedom in

458
00:18:34,320 --> 00:18:36,720
certain constants so that 56 bits can be

459
00:18:36,720 --> 00:18:38,720
linearized although only about half of

460
00:18:38,720 --> 00:18:40,720
them can directly match the digest our

461
00:18:40,720 --> 00:18:43,280
strategy still shows advantages yet our

462
00:18:43,280 --> 00:18:45,440
problem is the remaining linear space

463
00:18:45,440 --> 00:18:47,440
can only accommodate 21 matching

464
00:18:47,440 --> 00:18:49,280
creations so it proposes another

465
00:18:49,280 --> 00:18:51,360
technology named zero coefficient to

466
00:18:51,360 --> 00:18:54,240
further reduce cost of freedom

467
00:18:54,240 --> 00:18:55,919
the idea of zero coefficients shown in

468
00:18:55,919 --> 00:18:58,080
this figure notice that each target

469
00:18:58,080 --> 00:19:00,000
comes from the sum of 11 bits which

470
00:19:00,000 --> 00:19:02,000
consists of two columns and one solitary

471
00:19:02,000 --> 00:19:04,400
bit then if two targets correspond to

472
00:19:04,400 --> 00:19:06,720
solid bits from identical columns we can

473
00:19:06,720 --> 00:19:08,400
set additional restrictions to ensure

474
00:19:08,400 --> 00:19:10,240
both speeds as constant so that the

475
00:19:10,240 --> 00:19:12,320
target pair must be linear dependent and

476
00:19:12,320 --> 00:19:14,720
can save one degree of freedom

477
00:19:14,720 --> 00:19:17,840
by searching all 173 constants we find

478
00:19:17,840 --> 00:19:19,840
and construct 11 linear dependent pairs

479
00:19:19,840 --> 00:19:23,039
spanning 162 degrees of freedom instead

480
00:19:23,039 --> 00:19:24,880
and finally we come to the gain analysis

481
00:19:24,880 --> 00:19:26,960
part we'll double the

482
00:19:26,960 --> 00:19:29,360
bit recovery model in xbox inversion and

483
00:19:29,360 --> 00:19:31,120
for those on use speeds we may perform

484
00:19:31,120 --> 00:19:33,440
freedom return to enlarge to enlarge the

485
00:19:33,440 --> 00:19:34,880
space

486
00:19:34,880 --> 00:19:37,840
above big recovery in case of 256 each

487
00:19:37,840 --> 00:19:39,360
output is four bits and there are two

488
00:19:39,360 --> 00:19:41,440
possible cases if a linearized speed

489
00:19:41,440 --> 00:19:43,600
keeps unchanged in both cases it can be

490
00:19:43,600 --> 00:19:46,080
recovered and bring against two as 4k

491
00:19:46,080 --> 00:19:48,559
chart 224 some linear speeds may only

492
00:19:48,559 --> 00:19:50,480
cover three or four cases and for the

493
00:19:50,480 --> 00:19:52,000
greatest gain we would better give

494
00:19:52,000 --> 00:19:53,840
priority to those equations that cover

495
00:19:53,840 --> 00:19:55,120
all cases

496
00:19:55,120 --> 00:19:57,600
and since there are 66 linearized speeds

497
00:19:57,600 --> 00:20:00,080
distributed in 64 rows some rules may

498
00:20:00,080 --> 00:20:02,240
contain multiple bits in this case

499
00:20:02,240 --> 00:20:04,000
though all linearized bits are uncertain

500
00:20:04,000 --> 00:20:05,600
we can still set matching equations on

501
00:20:05,600 --> 00:20:07,200
the start of the linear speeds as shown

502
00:20:07,200 --> 00:20:09,120
in the examples

503
00:20:09,120 --> 00:20:10,960
about freedom return record that in

504
00:20:10,960 --> 00:20:12,720
input strategy we add one constant to

505
00:20:12,720 --> 00:20:15,039
generate the second bit if this bit is

506
00:20:15,039 --> 00:20:17,039
done using x-boxing version we can

507
00:20:17,039 --> 00:20:18,880
delete the added constant and return one

508
00:20:18,880 --> 00:20:20,640
degree of freedom so that we can put

509
00:20:20,640 --> 00:20:22,080
another matching efficiency in the

510
00:20:22,080 --> 00:20:25,918
liquid in the limitation system

511
00:20:26,240 --> 00:20:27,600
the results of get analysis are

512
00:20:27,600 --> 00:20:30,000
concluded in this page we have presented

513
00:20:30,000 --> 00:20:31,679
both theoretical analysis and

514
00:20:31,679 --> 00:20:34,400
experimental analysis in our paper it

515
00:20:34,400 --> 00:20:35,440
will take too long to read the whole

516
00:20:35,440 --> 00:20:37,200
page so it just takes a client for more

517
00:20:37,200 --> 00:20:40,000
details please check the original paper

518
00:20:40,000 --> 00:20:42,080
the frame of our improvement attacks on

519
00:20:42,080 --> 00:20:43,600
foreign location charts finally

520
00:20:43,600 --> 00:20:45,520
summarizing this page and that's all

521
00:20:45,520 --> 00:20:48,760
thank you

522
00:20:51,520 --> 00:20:54,080
any questions

523
00:20:59,679 --> 00:21:01,919
oh thank you i hope we do have questions

524
00:21:01,919 --> 00:21:04,400
this time

525
00:21:14,080 --> 00:21:15,679
nothing okay then i have to jump in

526
00:21:15,679 --> 00:21:18,320
again uh so one thing i noticed is that

527
00:21:18,320 --> 00:21:19,280
um

528
00:21:19,280 --> 00:21:21,440
the talk that was given first today was

529
00:21:21,440 --> 00:21:23,840
actually appearing in tusk later than

530
00:21:23,840 --> 00:21:25,679
this one so you first did the attack on

531
00:21:25,679 --> 00:21:27,200
four rounds and then on three rounds is

532
00:21:27,200 --> 00:21:29,440
that correct or can you tell us yes

533
00:21:29,440 --> 00:21:31,440
history of these papers

534
00:21:31,440 --> 00:21:32,240
yeah

535
00:21:32,240 --> 00:21:33,280
so

536
00:21:33,280 --> 00:21:35,600
that's because we first

537
00:21:35,600 --> 00:21:38,960
focus on the how to uh

538
00:21:38,960 --> 00:21:41,360
we first focus on how to optimize the

539
00:21:41,360 --> 00:21:43,120
linear uh the

540
00:21:43,120 --> 00:21:44,400
resolution part

541
00:21:44,400 --> 00:21:45,919
and uh

542
00:21:45,919 --> 00:21:48,880
propose a improved strategy on forums

543
00:21:48,880 --> 00:21:50,080
and

544
00:21:50,080 --> 00:21:53,039
because the we neglect the

545
00:21:53,039 --> 00:21:56,879
because in the fourth in the in

546
00:21:57,600 --> 00:21:57,959
the foreign

547
00:21:58,400 --> 00:22:00,400
of the first pre-image is useless

548
00:22:00,400 --> 00:22:03,280
because the second one is quite high

549
00:22:03,280 --> 00:22:06,320
and so we neglect how to optimize the

550
00:22:06,320 --> 00:22:09,039
first stage and about half years later

551
00:22:09,039 --> 00:22:11,120
we found a improved strategy for the

552
00:22:11,120 --> 00:22:13,440
first stage and we

553
00:22:13,440 --> 00:22:15,520
adopted this include strategy to

554
00:22:15,520 --> 00:22:18,000
three-round ketchup and that's the

555
00:22:18,000 --> 00:22:19,440
reason why we

556
00:22:19,440 --> 00:22:23,200
propose the strategy in forum first

557
00:22:23,520 --> 00:22:26,080
okay make sense so do we have any other

558
00:22:26,080 --> 00:22:28,480
questions

559
00:22:29,520 --> 00:22:33,039
no okay then thanks again lou and

560
00:22:33,039 --> 00:22:33,840
now

561
00:22:33,840 --> 00:22:35,919
switch to different functions and to

562
00:22:35,919 --> 00:22:37,520
live talks again

563
00:22:37,520 --> 00:22:38,960
so

564
00:22:38,960 --> 00:22:40,590
for the next talk um

565
00:22:40,590 --> 00:22:42,080
[Music]

566
00:22:42,080 --> 00:22:44,320
this is given by or the paper is by

567
00:22:44,320 --> 00:22:47,360
fukang yu takanori sobe and billy maya

568
00:22:47,360 --> 00:22:50,000
and willy is going to give this talk um

569
00:22:50,000 --> 00:22:52,000
let's first look at the slides maybe you

570
00:22:52,000 --> 00:22:55,840
can help with this yes

571
00:23:00,290 --> 00:23:03,470
[Music]

572
00:23:18,159 --> 00:23:19,840
okay so willie is now talking about

573
00:23:19,840 --> 00:23:22,720
exploiting the weak diffusion of hindi

574
00:23:22,720 --> 00:23:24,960
thank you for the introduction

575
00:23:24,960 --> 00:23:27,039
so this is trying to work with fukang

576
00:23:27,039 --> 00:23:31,120
liu and takanori isobe

577
00:23:32,480 --> 00:23:34,000
so i give a very

578
00:23:34,000 --> 00:23:36,400
brief overview of the talk

579
00:23:36,400 --> 00:23:39,200
first i give a description of kimly

580
00:23:39,200 --> 00:23:40,159
and

581
00:23:40,159 --> 00:23:42,400
summary of the attacks and i just

582
00:23:42,400 --> 00:23:44,000
describe one

583
00:23:44,000 --> 00:23:46,159
distinguisher for the

584
00:23:46,159 --> 00:23:48,960
permutation

585
00:23:48,960 --> 00:23:51,279
gimli is a cross-platform permutation

586
00:23:51,279 --> 00:23:54,400
designed by dan bernstein and co-authors

587
00:23:54,400 --> 00:23:56,720
at chess 2017

588
00:23:56,720 --> 00:23:58,640
kim is included in the second round

589
00:23:58,640 --> 00:24:00,400
candidates in the

590
00:24:00,400 --> 00:24:02,400
lightweight crypto

591
00:24:02,400 --> 00:24:03,600
process

592
00:24:03,600 --> 00:24:06,159
as we see the diffusion of the gimli

593
00:24:06,159 --> 00:24:09,520
round function is very weak

594
00:24:09,520 --> 00:24:11,279
so the gimli state

595
00:24:11,279 --> 00:24:13,760
has three times four two dimension is a

596
00:24:13,760 --> 00:24:16,640
three times four two dimensional array

597
00:24:16,640 --> 00:24:20,320
each entry is a 32-bit word

598
00:24:20,320 --> 00:24:21,600
and

599
00:24:21,600 --> 00:24:23,360
as we can see

600
00:24:23,360 --> 00:24:24,400
the

601
00:24:24,400 --> 00:24:27,520
rounds are a bit irregular so

602
00:24:27,520 --> 00:24:30,400
sp is just a large s-box

603
00:24:30,400 --> 00:24:34,400
ss ssw is

604
00:24:34,480 --> 00:24:37,039
is a swap

605
00:24:37,039 --> 00:24:38,480
a small swap

606
00:24:38,480 --> 00:24:39,520
and then

607
00:24:39,520 --> 00:24:41,200
just

608
00:24:41,200 --> 00:24:44,880
an s-box is applied and in further

609
00:24:44,880 --> 00:24:49,360
in the in the third round we see a big

610
00:24:49,360 --> 00:24:53,200
swap and then again just uh

611
00:24:53,200 --> 00:24:56,480
an update by a big s-box

612
00:24:56,480 --> 00:25:00,960
and so on for 24 rounds but as we see a

613
00:25:00,960 --> 00:25:03,919
bit irregular

614
00:25:04,000 --> 00:25:05,279
so

615
00:25:05,279 --> 00:25:09,279
we see here the s-box it's rather large

616
00:25:09,279 --> 00:25:13,120
and one can view it as a 96-bit s-box

617
00:25:13,120 --> 00:25:14,880
but it's quite simple

618
00:25:14,880 --> 00:25:18,320
if you look at the definition we see

619
00:25:18,320 --> 00:25:20,400
that the

620
00:25:20,400 --> 00:25:23,039
instructions are i guess very

621
00:25:23,039 --> 00:25:26,320
implementation friendly it's just

622
00:25:26,320 --> 00:25:29,919
rotations of words and xors

623
00:25:29,919 --> 00:25:34,240
and and operation or operation so that's

624
00:25:34,240 --> 00:25:36,159
i guess that was a one aim to have

625
00:25:36,159 --> 00:25:38,480
something which works very well over

626
00:25:38,480 --> 00:25:41,120
various platforms

627
00:25:41,120 --> 00:25:42,559
small swap

628
00:25:42,559 --> 00:25:44,320
just swaps

629
00:25:44,320 --> 00:25:45,440
neighboring

630
00:25:45,440 --> 00:25:46,880
columns

631
00:25:46,880 --> 00:25:48,559
and big swap

632
00:25:48,559 --> 00:25:50,640
is a little bit the bigger swap but one

633
00:25:50,640 --> 00:25:53,600
should notice that only the first row is

634
00:25:53,600 --> 00:25:54,880
swapped

635
00:25:54,880 --> 00:25:57,039
the remainder is fixed there is a

636
00:25:57,039 --> 00:25:59,039
constant addition also

637
00:25:59,039 --> 00:26:02,159
but only irregularly a few constants are

638
00:26:02,159 --> 00:26:06,480
added but only in the very first world

639
00:26:06,640 --> 00:26:08,840
so a summary of related

640
00:26:08,840 --> 00:26:11,679
attacks so

641
00:26:11,679 --> 00:26:13,760
maybe we have time to describe very

642
00:26:13,760 --> 00:26:15,840
briefly an 18-round

643
00:26:15,840 --> 00:26:18,080
distinguisher which only needs two

644
00:26:18,080 --> 00:26:19,200
inputs

645
00:26:19,200 --> 00:26:21,360
and there is a

646
00:26:21,360 --> 00:26:23,679
distinguisher on full rounds

647
00:26:23,679 --> 00:26:26,320
with time 2 to the 64

648
00:26:26,320 --> 00:26:27,840
by the

649
00:26:27,840 --> 00:26:30,240
people which are referred to the g plus

650
00:26:30,240 --> 00:26:31,919
paper i guess quite a few of the

651
00:26:31,919 --> 00:26:33,200
co-authors

652
00:26:33,200 --> 00:26:35,600
may be in the floor here if i have time

653
00:26:35,600 --> 00:26:39,200
i'll give a full reference to that paper

654
00:26:39,200 --> 00:26:42,000
we can improve this their uh

655
00:26:42,000 --> 00:26:44,080
distinguisher to

656
00:26:44,080 --> 00:26:47,279
make it close to practical

657
00:26:47,279 --> 00:26:51,200
we also have uh premixes for two rounds

658
00:26:51,200 --> 00:26:53,120
it's we

659
00:26:53,120 --> 00:26:55,600
it is practical we even implemented it

660
00:26:55,600 --> 00:26:57,120
for five rounds

661
00:26:57,120 --> 00:27:00,400
the time complexity is 2 to the 96

662
00:27:00,400 --> 00:27:01,279
and

663
00:27:01,279 --> 00:27:03,279
there is also a

664
00:27:03,279 --> 00:27:08,720
nine round attack on the gimmick xof 128

665
00:27:08,720 --> 00:27:11,279
function so if you wonder why we get

666
00:27:11,279 --> 00:27:14,320
more rounds on the xoa function

667
00:27:14,320 --> 00:27:16,400
the reason is we have to adapt on an

668
00:27:16,400 --> 00:27:19,600
output of 128 bit bearers for the hash

669
00:27:19,600 --> 00:27:22,480
function the output is 256 bit and we

670
00:27:22,480 --> 00:27:24,480
need two iterations

671
00:27:24,480 --> 00:27:27,520
to achieve this which makes it more

672
00:27:27,520 --> 00:27:29,679
complicated so we need at least two

673
00:27:29,679 --> 00:27:33,200
input blocks to have a chance to produce

674
00:27:33,200 --> 00:27:36,159
a drainage

675
00:27:36,960 --> 00:27:40,480
so maybe i tried to very briefly

676
00:27:40,480 --> 00:27:41,840
trace

677
00:27:41,840 --> 00:27:43,200
what happens

678
00:27:43,200 --> 00:27:47,360
when we start from a9 so iteration after

679
00:27:47,360 --> 00:27:48,640
nine rounds

680
00:27:48,640 --> 00:27:51,520
like in a zero sum distinguisher we go

681
00:27:51,520 --> 00:27:54,320
backwards and forwards and uh look what

682
00:27:54,320 --> 00:27:55,520
happens

683
00:27:55,520 --> 00:27:57,679
but we exploit

684
00:27:57,679 --> 00:28:00,559
heavily symmetric states if you

685
00:28:00,559 --> 00:28:05,039
look at a9 here

686
00:28:06,320 --> 00:28:07,120
then

687
00:28:07,120 --> 00:28:09,039
we see that

688
00:28:09,039 --> 00:28:11,520
the first and third column are almost

689
00:28:11,520 --> 00:28:14,240
the same except the first entry where we

690
00:28:14,240 --> 00:28:17,919
adapt to neutralize the constant and if

691
00:28:17,919 --> 00:28:19,919
we trace this

692
00:28:19,919 --> 00:28:22,799
more and more backwards here

693
00:28:22,799 --> 00:28:24,799
then we see that we have quite for a

694
00:28:24,799 --> 00:28:26,000
long time

695
00:28:26,000 --> 00:28:29,200
we have still some symmetries in there

696
00:28:29,200 --> 00:28:31,679
and these seem to be lost but that's not

697
00:28:31,679 --> 00:28:32,960
quite true

698
00:28:32,960 --> 00:28:36,559
some detailed analysis still so shows uh

699
00:28:36,559 --> 00:28:37,600
some

700
00:28:37,600 --> 00:28:39,440
deterministic relations on the beat

701
00:28:39,440 --> 00:28:41,520
level but not no longer on the word

702
00:28:41,520 --> 00:28:42,559
level

703
00:28:42,559 --> 00:28:46,399
in a similar way we can

704
00:28:46,399 --> 00:28:50,399
look forward from a9 to four more rounds

705
00:28:50,399 --> 00:28:52,960
the game is much the same a little bit

706
00:28:52,960 --> 00:28:55,679
less favorite because we now cannot

707
00:28:55,679 --> 00:28:58,000
correct the effect of the constant in

708
00:28:58,000 --> 00:28:59,520
both directions

709
00:28:59,520 --> 00:29:02,159
but we did it in the backwards direction

710
00:29:02,159 --> 00:29:04,320
which was more profitable

711
00:29:04,320 --> 00:29:07,520
and now the main idea is we also use

712
00:29:07,520 --> 00:29:08,960
another state

713
00:29:08,960 --> 00:29:10,000
which

714
00:29:10,000 --> 00:29:12,559
is just swapping the first and third

715
00:29:12,559 --> 00:29:16,000
column and trace that again back and

716
00:29:16,000 --> 00:29:16,880
forth

717
00:29:16,880 --> 00:29:18,559
so that

718
00:29:18,559 --> 00:29:20,320
we

719
00:29:20,320 --> 00:29:23,039
try to get a distinguisher

720
00:29:23,039 --> 00:29:25,279
so it's if we look

721
00:29:25,279 --> 00:29:28,000
we would like of course more rounds than

722
00:29:28,000 --> 00:29:30,960
just 13 rounds which we get when looking

723
00:29:30,960 --> 00:29:32,159
forward here

724
00:29:32,159 --> 00:29:35,200
but we look now just of the crossing of

725
00:29:35,200 --> 00:29:38,240
the two states the second and the fourth

726
00:29:38,240 --> 00:29:40,640
column

727
00:29:40,640 --> 00:29:43,520
it looks a bit complicated here but what

728
00:29:43,520 --> 00:29:45,120
we do is just

729
00:29:45,120 --> 00:29:46,399
we trace

730
00:29:46,399 --> 00:29:48,880
back or back and forth

731
00:29:48,880 --> 00:29:51,679
and look at the crossing here and

732
00:29:51,679 --> 00:29:54,880
compare and actually for the two states

733
00:29:54,880 --> 00:29:57,120
that the two columns the second and

734
00:29:57,120 --> 00:29:59,600
fourth columns are just crossed

735
00:29:59,600 --> 00:30:00,880
and this

736
00:30:00,880 --> 00:30:03,840
persists for quite a while here the blue

737
00:30:03,840 --> 00:30:07,120
part is for the a state and the red part

738
00:30:07,120 --> 00:30:08,960
is for the b state

739
00:30:08,960 --> 00:30:09,760
so

740
00:30:09,760 --> 00:30:12,880
again it seems that we lose control for

741
00:30:12,880 --> 00:30:16,799
b18 but that's not true i just show here

742
00:30:16,799 --> 00:30:19,520
that we still have some deterministic

743
00:30:19,520 --> 00:30:22,880
relation that looks like a lot but uh

744
00:30:22,880 --> 00:30:24,799
a very useful discussion with the

745
00:30:24,799 --> 00:30:27,679
authors of the g plus paper revealed

746
00:30:27,679 --> 00:30:30,159
that uh this is not for even for a

747
00:30:30,159 --> 00:30:32,880
random distinguisher it is quite

748
00:30:32,880 --> 00:30:37,279
efficiently achievable one can just

749
00:30:37,279 --> 00:30:38,960
call the

750
00:30:38,960 --> 00:30:40,880
permutation forwards

751
00:30:40,880 --> 00:30:44,240
and then to adapt in the

752
00:30:44,240 --> 00:30:47,360
output on all these conditions and then

753
00:30:47,360 --> 00:30:50,000
compute backwards and with quite high

754
00:30:50,000 --> 00:30:52,159
probability because there are only few

755
00:30:52,159 --> 00:30:54,960
conditions uh we reach

756
00:30:54,960 --> 00:30:57,440
the same game but of course we are still

757
00:30:57,440 --> 00:31:00,159
better we need only two trials and the

758
00:31:00,159 --> 00:31:02,799
random distinction is five trials if we

759
00:31:02,799 --> 00:31:05,120
do repeat this experiment

760
00:31:05,120 --> 00:31:07,279
the chance of a random distinguisher

761
00:31:07,279 --> 00:31:08,880
decreases

762
00:31:08,880 --> 00:31:11,679
exponentially

763
00:31:11,679 --> 00:31:13,840
so i try just to

764
00:31:13,840 --> 00:31:15,760
kind of

765
00:31:15,760 --> 00:31:19,519
put our distinguishing context of known

766
00:31:19,519 --> 00:31:22,240
distinguishes and already noticed zero

767
00:31:22,240 --> 00:31:23,039
sum

768
00:31:23,039 --> 00:31:24,559
there is a

769
00:31:24,559 --> 00:31:26,640
integral internal differential

770
00:31:26,640 --> 00:31:28,720
distinguisher and there is an alternate

771
00:31:28,720 --> 00:31:31,440
differential distinguisher and also our

772
00:31:31,440 --> 00:31:35,440
hybrid kind of distinguisher

773
00:31:35,840 --> 00:31:37,519
i skipped this

774
00:31:37,519 --> 00:31:41,440
24 round distinguisher here

775
00:31:41,440 --> 00:31:43,840
but come to the summary now so the

776
00:31:43,840 --> 00:31:46,159
symmetry and low diffusion are

777
00:31:46,159 --> 00:31:48,799
weaknesses of the gimli and can be

778
00:31:48,799 --> 00:31:50,720
exploited to construct

779
00:31:50,720 --> 00:31:53,279
very strong distinguishes

780
00:31:53,279 --> 00:31:55,440
the low diffusion also makes divide and

781
00:31:55,440 --> 00:31:57,600
conquer methods fit well with premature

782
00:31:57,600 --> 00:31:59,679
correlation and distinguishing attacks

783
00:31:59,679 --> 00:32:02,080
on full or partial dimly

784
00:32:02,080 --> 00:32:04,000
and we construct an almost practical

785
00:32:04,000 --> 00:32:05,840
foreground distinguisher with time

786
00:32:05,840 --> 00:32:09,200
complexity 2 to the 52 we implemented it

787
00:32:09,200 --> 00:32:11,760
on the half the size of the actual

788
00:32:11,760 --> 00:32:13,519
permutation

789
00:32:13,519 --> 00:32:15,279
and we find the best premature attacks

790
00:32:15,279 --> 00:32:17,120
of deemly hash and kindly

791
00:32:17,120 --> 00:32:21,039
soft 128 reaching up to five or up to

792
00:32:21,039 --> 00:32:24,320
nine rounds as explained so here is the

793
00:32:24,320 --> 00:32:27,760
full reference to the that's a very

794
00:32:27,760 --> 00:32:30,080
interesting paper here where we also

795
00:32:30,080 --> 00:32:31,360
borrowed

796
00:32:31,360 --> 00:32:33,600
some ideas actually partially we had

797
00:32:33,600 --> 00:32:36,399
similar ideas at the most as

798
00:32:36,399 --> 00:32:39,200
almost the same time

799
00:32:39,200 --> 00:32:42,679
so thank you

800
00:32:52,480 --> 00:32:54,000
so do we have any questions in the

801
00:32:54,000 --> 00:32:57,000
audience

802
00:33:00,320 --> 00:33:01,279
so

803
00:33:01,279 --> 00:33:03,519
do you think

804
00:33:03,519 --> 00:33:06,159
the same techniques can you

805
00:33:06,159 --> 00:33:09,159
use

806
00:33:10,080 --> 00:33:13,519
construct religion attacks

807
00:33:14,159 --> 00:33:18,679
i could to understand the last sentence

808
00:33:23,140 --> 00:33:26,259
[Music]

809
00:33:30,880 --> 00:33:32,799
i don't know it's a good question so the

810
00:33:32,799 --> 00:33:34,880
question was whether one can use the

811
00:33:34,880 --> 00:33:35,840
same

812
00:33:35,840 --> 00:33:38,559
method to produce internal collisions

813
00:33:38,559 --> 00:33:41,120
but the game was different in our way we

814
00:33:41,120 --> 00:33:43,039
had but that would be interesting of

815
00:33:43,039 --> 00:33:43,919
course

816
00:33:43,919 --> 00:33:46,159
because the state is not so large

817
00:33:46,159 --> 00:33:49,519
it's 384 bits so it's it might be

818
00:33:49,519 --> 00:33:51,760
reasonable

819
00:33:51,760 --> 00:33:54,080
point

820
00:34:01,120 --> 00:34:02,720
anybody else

821
00:34:02,720 --> 00:34:04,840
anything

822
00:34:04,840 --> 00:34:08,800
online okay then thanks a lot and um we

823
00:34:08,800 --> 00:34:09,830
will now

824
00:34:09,830 --> 00:34:12,969
[Applause]

825
00:34:15,599 --> 00:34:18,399
we will now return to some online talks

826
00:34:18,399 --> 00:34:21,040
if i'm informed correctly um

827
00:34:21,040 --> 00:34:24,320
so the next target we want to look at is

828
00:34:24,320 --> 00:34:27,280
aes actually

829
00:34:27,679 --> 00:34:28,800
so the

830
00:34:28,800 --> 00:34:30,639
the paper is entitled

831
00:34:30,639 --> 00:34:32,879
quantum free quantum freestyle collision

832
00:34:32,879 --> 00:34:35,119
attacks on double block length hashing

833
00:34:35,119 --> 00:34:37,760
with round reduced aes

834
00:34:37,760 --> 00:34:38,719
and

835
00:34:38,719 --> 00:34:41,760
this is a paper by amit kumar jahan

836
00:34:41,760 --> 00:34:44,800
abhishek kumar and sumitra kumar sanadia

837
00:34:44,800 --> 00:34:47,199
and i think amit is going to give the

838
00:34:47,199 --> 00:34:51,199
talk let's see if he's already here

839
00:34:52,000 --> 00:34:54,079
ah yes but we don't hear you i think so

840
00:34:54,079 --> 00:34:57,520
i see you but i don't hear anything

841
00:35:01,440 --> 00:35:04,480
your microphone is not working

842
00:35:04,480 --> 00:35:05,599
okay

843
00:35:05,599 --> 00:35:06,960
now it is

844
00:35:06,960 --> 00:35:11,079
you can share your slides now

845
00:35:18,160 --> 00:35:20,480
okay

846
00:35:21,280 --> 00:35:23,359
okay so welcome amit and let's have a

847
00:35:23,359 --> 00:35:25,359
look at your talk

848
00:35:25,359 --> 00:35:28,680
okay thanks

849
00:35:30,000 --> 00:35:32,960
hello all uh i will pretend to work on

850
00:35:32,960 --> 00:35:35,119
quantum free start collision attack on

851
00:35:35,119 --> 00:35:36,800
of hessing with sound can you hold your

852
00:35:36,800 --> 00:35:38,880
microphone closer to your mouth you're

853
00:35:38,880 --> 00:35:42,200
hard to hear

854
00:35:44,480 --> 00:35:47,119
hello is it fine now

855
00:35:47,119 --> 00:35:49,119
no

856
00:35:49,119 --> 00:35:51,359
hello

857
00:35:51,359 --> 00:35:53,359
that's better

858
00:35:53,359 --> 00:35:55,520
okay

859
00:35:55,520 --> 00:35:56,240
so

860
00:35:56,240 --> 00:35:58,879
the motivation

861
00:36:00,960 --> 00:36:03,440
no that's not working

862
00:36:03,440 --> 00:36:05,119
okay

863
00:36:05,119 --> 00:36:08,119
sorry

864
00:36:12,640 --> 00:36:16,400
it's still not working now it is

865
00:36:17,680 --> 00:36:20,000
okay so uh double block line testing is

866
00:36:20,000 --> 00:36:21,119
a well established method for

867
00:36:21,119 --> 00:36:23,119
constructing a compression function with

868
00:36:23,119 --> 00:36:25,520
two and bit output from an ambit block

869
00:36:25,520 --> 00:36:28,160
cipher so the example here is like

870
00:36:28,160 --> 00:36:30,160
tandem dm and a hero say function

871
00:36:30,160 --> 00:36:32,320
recently few works have employed the

872
00:36:32,320 --> 00:36:34,640
dedicated attacks on block cipher based

873
00:36:34,640 --> 00:36:37,119
hash functions such as warpool grosstel

874
00:36:37,119 --> 00:36:39,599
in various quantum attack settings

875
00:36:39,599 --> 00:36:41,520
in this work we uh

876
00:36:41,520 --> 00:36:43,440
study uh dedicated quantum collision

877
00:36:43,440 --> 00:36:45,680
attacks on heroes compression function

878
00:36:45,680 --> 00:36:47,200
so what is hero say compression function

879
00:36:47,200 --> 00:36:49,440
heroes heroes designed a dvl compression

880
00:36:49,440 --> 00:36:51,760
function f that makes two calls to an

881
00:36:51,760 --> 00:36:53,440
end with block cipher

882
00:36:53,440 --> 00:36:57,119
uh that produces two outputs b0 and b1

883
00:36:57,119 --> 00:37:01,200
so here f0 and f1 are further defined as

884
00:37:01,200 --> 00:37:02,640
uh the

885
00:37:02,640 --> 00:37:05,920
device mirror type of function

886
00:37:05,920 --> 00:37:08,240
and how to find collision on s on heroes

887
00:37:08,240 --> 00:37:10,320
compression function shortly scf

888
00:37:10,320 --> 00:37:12,240
so suppose that we have a collision for

889
00:37:12,240 --> 00:37:14,880
f zero caused by the pair h zero comma h

890
00:37:14,880 --> 00:37:17,119
one comma m and h zero zero delta zero

891
00:37:17,119 --> 00:37:19,520
comma x one comma m then

892
00:37:19,520 --> 00:37:22,640
f zero uh collides on these inputs

893
00:37:22,640 --> 00:37:24,160
so uh

894
00:37:24,160 --> 00:37:27,200
notice that this s0 is also job with c

895
00:37:27,200 --> 00:37:28,800
so if we have a difference player here

896
00:37:28,800 --> 00:37:31,520
delta h 0 and if it is delta 0 equal to

897
00:37:31,520 --> 00:37:34,720
c then the same pair will also be

898
00:37:34,720 --> 00:37:37,040
collide for f1

899
00:37:37,040 --> 00:37:39,920
uh so the goal here uh to find a

900
00:37:39,920 --> 00:37:41,839
collision on scf actually reduces to

901
00:37:41,839 --> 00:37:45,119
find finding collision on f0 so

902
00:37:45,119 --> 00:37:47,040
our goal is to first find a colliding

903
00:37:47,040 --> 00:37:49,599
pair of inputs and then output the pair

904
00:37:49,599 --> 00:37:52,000
only if delta 0 equal to c

905
00:37:52,000 --> 00:37:53,599
otherwise uh

906
00:37:53,599 --> 00:37:56,880
return to step 1 and repeat the process

907
00:37:56,880 --> 00:37:58,160
so

908
00:37:58,160 --> 00:38:00,160
generically we can find the collision on

909
00:38:00,160 --> 00:38:01,599
hash functions so if we have a hash

910
00:38:01,599 --> 00:38:03,280
function like this then we can find

911
00:38:03,280 --> 00:38:05,440
collision in a

912
00:38:05,440 --> 00:38:08,560
time big of 2 to the power n by 2 you uh

913
00:38:08,560 --> 00:38:09,839
using birthday

914
00:38:09,839 --> 00:38:12,720
paradox and a dedicated collision attack

915
00:38:12,720 --> 00:38:14,880
is valid only if the time complexity is

916
00:38:14,880 --> 00:38:17,520
less than 2 to the power n by 2.

917
00:38:17,520 --> 00:38:18,960
in quantum setting

918
00:38:18,960 --> 00:38:20,240
we have also

919
00:38:20,240 --> 00:38:22,480
a method like group over bst and cns

920
00:38:22,480 --> 00:38:23,839
algorithm by which we can find

921
00:38:23,839 --> 00:38:26,240
collisions uh n time two to the power n

922
00:38:26,240 --> 00:38:27,760
by two

923
00:38:27,760 --> 00:38:29,680
uh two n by three and two trigger two

924
00:38:29,680 --> 00:38:31,440
and y five

925
00:38:31,440 --> 00:38:34,880
so uh in this setting also uh the gen

926
00:38:34,880 --> 00:38:37,520
the dedicated attack will be regarded as

927
00:38:37,520 --> 00:38:39,599
a meaningful attack if we have a lesser

928
00:38:39,599 --> 00:38:41,280
complexity than two to the less for

929
00:38:41,280 --> 00:38:42,640
example let's say two divided by three

930
00:38:42,640 --> 00:38:45,440
in case of bst algorithm

931
00:38:45,440 --> 00:38:48,640
so in general dedicated methods uh

932
00:38:48,640 --> 00:38:50,240
consider method of differentiation

933
00:38:50,240 --> 00:38:52,160
analysis to find collisions

934
00:38:52,160 --> 00:38:55,200
so in quantum settings by component all

935
00:38:55,200 --> 00:38:57,119
solve that uh the defensive kept

936
00:38:57,119 --> 00:38:59,680
analysis the differentiator probability

937
00:38:59,680 --> 00:39:02,320
uh we can find pair uh

938
00:39:02,320 --> 00:39:03,520
s box

939
00:39:03,520 --> 00:39:05,599
uh

940
00:39:05,599 --> 00:39:07,760
uh

941
00:39:07,760 --> 00:39:10,160
big probability uh p then in quantum we

942
00:39:10,160 --> 00:39:11,599
can find with probability square root of

943
00:39:11,599 --> 00:39:12,720
one by p

944
00:39:12,720 --> 00:39:14,880
so so here the attack will be valid if

945
00:39:14,880 --> 00:39:17,119
time complexity is less than

946
00:39:17,119 --> 00:39:19,040
equal to square root of one by p that

947
00:39:19,040 --> 00:39:20,000
hence

948
00:39:20,000 --> 00:39:22,079
uh for example in case of bst algorithm

949
00:39:22,079 --> 00:39:23,760
time is two divided by three so the

950
00:39:23,760 --> 00:39:25,359
attack will be valid if p is greater

951
00:39:25,359 --> 00:39:27,680
than to the power minus two n by three

952
00:39:27,680 --> 00:39:29,200
and so on

953
00:39:29,200 --> 00:39:32,800
so our result is we apply quantum uh

954
00:39:32,800 --> 00:39:34,079
uh

955
00:39:34,079 --> 00:39:35,680
a quantum version of rebound attack to

956
00:39:35,680 --> 00:39:37,280
find collisions on heroes compression

957
00:39:37,280 --> 00:39:38,960
function when the underlying block

958
00:39:38,960 --> 00:39:41,599
cipher is instantiated with aes256 we

959
00:39:41,599 --> 00:39:42,599
call it

960
00:39:42,599 --> 00:39:46,160
scfas256 we covered 10 round of a scfas

961
00:39:46,160 --> 00:39:48,640
256 in the quantum attack setting we saw

962
00:39:48,640 --> 00:39:51,119
that our attack are actually faster than

963
00:39:51,119 --> 00:39:52,480
generic attacks

964
00:39:52,480 --> 00:39:54,880
even when we have low qram or no pure

965
00:39:54,880 --> 00:39:57,440
image available we also uh

966
00:39:57,440 --> 00:39:58,880
discuss

967
00:39:58,880 --> 00:40:00,880
rubber attack validity in the setting of

968
00:40:00,880 --> 00:40:02,400
time is tested off

969
00:40:02,400 --> 00:40:03,839
and

970
00:40:03,839 --> 00:40:07,440
to explore the differential trails

971
00:40:07,440 --> 00:40:09,359
we actually

972
00:40:09,359 --> 00:40:12,640
apply the ilp based methods

973
00:40:12,640 --> 00:40:15,359
so what is rebound attack it basically

974
00:40:15,359 --> 00:40:17,359
uh divide the cipher into three parts in

975
00:40:17,359 --> 00:40:20,000
mount phases and and forward output or

976
00:40:20,000 --> 00:40:22,800
one phase and backward output phase in

977
00:40:22,800 --> 00:40:24,960
in one phase we found we generate

978
00:40:24,960 --> 00:40:27,119
starting points and then in in the

979
00:40:27,119 --> 00:40:28,640
outbound phase from the starting point

980
00:40:28,640 --> 00:40:31,440
we compute 400 backward directions

981
00:40:31,440 --> 00:40:33,040
so if the probability of the output

982
00:40:33,040 --> 00:40:35,520
phase is p then uh one has to get at

983
00:40:35,520 --> 00:40:37,359
least one by p starting points in the

984
00:40:37,359 --> 00:40:39,440
inbound phase

985
00:40:39,440 --> 00:40:41,200
so uh

986
00:40:41,200 --> 00:40:43,760
we start with this uh inbound phase with

987
00:40:43,760 --> 00:40:45,680
input output difference pair and then

988
00:40:45,680 --> 00:40:48,000
propagate to outbound and backward

989
00:40:48,000 --> 00:40:50,240
so if the probability of

990
00:40:50,240 --> 00:40:51,680
propagating backward and forward is

991
00:40:51,680 --> 00:40:53,839
given p two and matching this delta zero

992
00:40:53,839 --> 00:40:55,359
is p zero then the probability of

993
00:40:55,359 --> 00:40:57,119
differential t l becomes

994
00:40:57,119 --> 00:41:00,400
uh p one into p two into p zero

995
00:41:00,400 --> 00:41:03,440
so we can employ uh use this strategy to

996
00:41:03,440 --> 00:41:06,160
find collision on hash function so in

997
00:41:06,160 --> 00:41:07,920
the involved phases we start with this

998
00:41:07,920 --> 00:41:10,560
different sphere delta x delta by find

999
00:41:10,560 --> 00:41:14,160
uh compute x and x x x dash y and y dash

1000
00:41:14,160 --> 00:41:15,520
and

1001
00:41:15,520 --> 00:41:16,880
then uh

1002
00:41:16,880 --> 00:41:18,800
if this difference where

1003
00:41:18,800 --> 00:41:20,240
that is satisfy

1004
00:41:20,240 --> 00:41:22,560
propagates to delta 0 in the outbound

1005
00:41:22,560 --> 00:41:25,680
space big probability p 1 then we

1006
00:41:25,680 --> 00:41:28,000
compute this m c and s u dash

1007
00:41:28,000 --> 00:41:30,319
accordingly and check whether this m 0 m

1008
00:41:30,319 --> 00:41:34,240
dash and c 0 c dash actually

1009
00:41:34,240 --> 00:41:35,280
equal

1010
00:41:35,280 --> 00:41:37,040
in the outbound phase

1011
00:41:37,040 --> 00:41:38,880
so in the classical setting we need to

1012
00:41:38,880 --> 00:41:41,760
try this one by p out times while uh in

1013
00:41:41,760 --> 00:41:43,839
the quantum setting we need to try one

1014
00:41:43,839 --> 00:41:47,040
over square root of p out times

1015
00:41:47,040 --> 00:41:50,400
so we uh uh the the differential thread

1016
00:41:50,400 --> 00:41:53,680
for 10 round aes 256 is look like this

1017
00:41:53,680 --> 00:41:55,520
so we have two in one phases in mount

1018
00:41:55,520 --> 00:41:57,760
one and in mod two round five we connect

1019
00:41:57,760 --> 00:42:00,720
these two in one phases and then from

1020
00:42:00,720 --> 00:42:03,280
uh three to one we move backward out one

1021
00:42:03,280 --> 00:42:07,040
phase and then uh seven to ten

1022
00:42:07,040 --> 00:42:10,640
uh we move to uh forward or one phase so

1023
00:42:10,640 --> 00:42:13,680
when we move from seven to ten then the

1024
00:42:13,680 --> 00:42:15,359
probability here is

1025
00:42:15,359 --> 00:42:19,200
uh two to the power minus 16 while in

1026
00:42:19,200 --> 00:42:22,640
the backwards is equal to minus 16. so

1027
00:42:22,640 --> 00:42:24,800
overall the probability of propagating

1028
00:42:24,800 --> 00:42:27,280
the differential in 410 and backward

1029
00:42:27,280 --> 00:42:29,520
direction to minus 32

1030
00:42:29,520 --> 00:42:32,960
we also need to uh cancel this this

1031
00:42:32,960 --> 00:42:34,319
final round here for feedback

1032
00:42:34,319 --> 00:42:36,079
consistency so there are eight bytes

1033
00:42:36,079 --> 00:42:39,200
here active so uh so the top for total

1034
00:42:39,200 --> 00:42:41,680
probability to minus 64. so so we have a

1035
00:42:41,680 --> 00:42:42,800
new differential tail with the

1036
00:42:42,800 --> 00:42:45,040
probability to power minus 96

1037
00:42:45,040 --> 00:42:47,520
further to mount the polygon attack on

1038
00:42:47,520 --> 00:42:48,680
scf

1039
00:42:48,680 --> 00:42:51,359
as256 we need to satisfy the extra

1040
00:42:51,359 --> 00:42:54,480
condition delta 0 equal to c because we

1041
00:42:54,480 --> 00:42:57,359
have two functions f0 and f1 so

1042
00:42:57,359 --> 00:43:00,800
we consider c have uh has eight non-zero

1043
00:43:00,800 --> 00:43:02,480
bytes at some specific position so the

1044
00:43:02,480 --> 00:43:03,520
probability

1045
00:43:03,520 --> 00:43:06,079
uh here is to know minus 64 to satisfy

1046
00:43:06,079 --> 00:43:08,400
this condition so the overall complexity

1047
00:43:08,400 --> 00:43:11,119
of the attack is to the power 160.

1048
00:43:11,119 --> 00:43:12,880
so in the quantum setting

1049
00:43:12,880 --> 00:43:15,040
we define a boolean function f

1050
00:43:15,040 --> 00:43:16,480
such that

1051
00:43:16,480 --> 00:43:18,560
the f on input

1052
00:43:18,560 --> 00:43:20,560
output difference player outputs one if

1053
00:43:20,560 --> 00:43:22,960
and only if the starting point computed

1054
00:43:22,960 --> 00:43:24,319
with the input output defense player

1055
00:43:24,319 --> 00:43:26,079
fulfills the backward and forward output

1056
00:43:26,079 --> 00:43:27,599
differential pair

1057
00:43:27,599 --> 00:43:30,160
so if if it is set if outputs one then

1058
00:43:30,160 --> 00:43:31,839
we can produce two different colliding

1059
00:43:31,839 --> 00:43:34,160
functions at zero and s0 by the starting

1060
00:43:34,160 --> 00:43:35,040
points

1061
00:43:35,040 --> 00:43:37,599
and h1 and comma m can also be obtained

1062
00:43:37,599 --> 00:43:39,359
from the key drive in the

1063
00:43:39,359 --> 00:43:40,880
drive from the connecting rounds in in

1064
00:43:40,880 --> 00:43:42,560
one phases

1065
00:43:42,560 --> 00:43:45,040
so uh by applying grover's algorithm

1066
00:43:45,040 --> 00:43:46,720
with the quantum oracle of the boolean

1067
00:43:46,720 --> 00:43:48,960
function f

1068
00:43:48,960 --> 00:43:49,680
uh

1069
00:43:49,680 --> 00:43:51,280
which actually maps

1070
00:43:51,280 --> 00:43:53,599
uh the input

1071
00:43:53,599 --> 00:43:56,000
like this where the output register y is

1072
00:43:56,000 --> 00:43:58,400
updated like this y is your f of delta

1073
00:43:58,400 --> 00:44:01,599
in delta out and alpha so we can find a

1074
00:44:01,599 --> 00:44:04,400
collision with with pi by 4 into square

1075
00:44:04,400 --> 00:44:06,880
root of 2 over 160 queries

1076
00:44:06,880 --> 00:44:09,280
but to estimate the overall complexity

1077
00:44:09,280 --> 00:44:11,119
of the attack we need to find the exact

1078
00:44:11,119 --> 00:44:12,960
complexity incurred by the

1079
00:44:12,960 --> 00:44:15,119
implementation of uf

1080
00:44:15,119 --> 00:44:16,640
so uh

1081
00:44:16,640 --> 00:44:18,640
when we make the xbox evaluation with

1082
00:44:18,640 --> 00:44:20,720
the help of pre-stored dedicated table

1083
00:44:20,720 --> 00:44:23,119
in the qram the overall complexity of

1084
00:44:23,119 --> 00:44:24,400
the uf

1085
00:44:24,400 --> 00:44:27,359
uh is uh implementing uav is basically

1086
00:44:27,359 --> 00:44:31,359
2.5 5.46 10 down radius 256 computations

1087
00:44:31,359 --> 00:44:33,200
so when we multiply with this square

1088
00:44:33,200 --> 00:44:36,000
root of 160 then the overall complexity

1089
00:44:36,000 --> 00:44:39,440
becomes 2 by 85.11

1090
00:44:39,440 --> 00:44:42,160
so here in this model we basically use

1091
00:44:42,160 --> 00:44:43,680
the qram

1092
00:44:43,680 --> 00:44:44,640
uh

1093
00:44:44,640 --> 00:44:47,200
to store the free delete table

1094
00:44:47,200 --> 00:44:50,560
so in summary uh in the cuban model uh

1095
00:44:50,560 --> 00:44:53,280
the 10 round attack complexity by eighty

1096
00:44:53,280 --> 00:44:56,720
point five eighty five point one one

1097
00:44:56,720 --> 00:44:58,319
but we require equilibrium of size

1098
00:44:58,319 --> 00:45:00,400
equals sixteen to storage duty table

1099
00:45:00,400 --> 00:45:01,200
uh

1100
00:45:01,200 --> 00:45:04,240
but in in q2 model where we do not use

1101
00:45:04,240 --> 00:45:07,760
uh any qram then the complexity

1102
00:45:07,760 --> 00:45:11,599
uh becomes by 85.33

1103
00:45:11,599 --> 00:45:15,520
sorry 2 by 86.11 and

1104
00:45:15,520 --> 00:45:19,839
another settings then it becomes 86.07

1105
00:45:19,839 --> 00:45:21,920
but in time spaced out of setting when

1106
00:45:21,920 --> 00:45:24,640
we have a quantum computer of size

1107
00:45:24,640 --> 00:45:26,560
s available then uh

1108
00:45:26,560 --> 00:45:28,280
this time complexity further reduced by

1109
00:45:28,280 --> 00:45:30,800
280.61 over square root of s by 2 to the

1110
00:45:30,800 --> 00:45:32,400
power 4

1111
00:45:32,400 --> 00:45:34,000
so

1112
00:45:34,000 --> 00:45:36,160
so in conclusion this

1113
00:45:36,160 --> 00:45:37,839
differential tail with low polarity in

1114
00:45:37,839 --> 00:45:39,599
the classical setting

1115
00:45:39,599 --> 00:45:40,480
are

1116
00:45:40,480 --> 00:45:42,880
meaningful for the quantum computers we

1117
00:45:42,880 --> 00:45:45,280
improved collision attack for

1118
00:45:45,280 --> 00:45:48,400
scf es 256 to 10 rounds

1119
00:45:48,400 --> 00:45:51,680
finding uh as a future work finding more

1120
00:45:51,680 --> 00:45:53,200
useful differential tail with low

1121
00:45:53,200 --> 00:45:55,119
probabilities in various other kind of

1122
00:45:55,119 --> 00:45:57,119
attack techniques can be an interesting

1123
00:45:57,119 --> 00:45:58,240
problem to

1124
00:45:58,240 --> 00:46:00,640
investigate in the uh in the quantum

1125
00:46:00,640 --> 00:46:02,480
setting

1126
00:46:02,480 --> 00:46:04,880
thank you for your attention

1127
00:46:04,880 --> 00:46:07,520
any questions

1128
00:46:12,640 --> 00:46:14,960
okay so since since the talk was pretty

1129
00:46:14,960 --> 00:46:16,960
long we only have time for a very very

1130
00:46:16,960 --> 00:46:20,480
quick question if there is any

1131
00:46:20,880 --> 00:46:24,560
no okay then let's jump on to the last

1132
00:46:24,560 --> 00:46:26,560
talk in the session uh which is also on

1133
00:46:26,560 --> 00:46:29,520
quantum collision attacks um on reduced

1134
00:46:29,520 --> 00:46:30,960
simpira

1135
00:46:30,960 --> 00:46:32,560
so let's see i think the talk is given

1136
00:46:32,560 --> 00:46:35,359
by bo yu are you already here

1137
00:46:35,359 --> 00:46:36,640
yes

1138
00:46:36,640 --> 00:46:40,520
okay can you share your screen

1139
00:46:46,800 --> 00:46:49,599
good morning the top the topic of my

1140
00:46:49,599 --> 00:46:52,720
report is quantum collusion attacks on

1141
00:46:52,720 --> 00:46:55,520
reduced simple v2

1142
00:46:55,520 --> 00:46:56,400
first

1143
00:46:56,400 --> 00:46:59,680
we describe the problems which can be

1144
00:46:59,680 --> 00:47:03,200
solved by the groove algorithm

1145
00:47:03,200 --> 00:47:06,160
given a search space or 2 to the n

1146
00:47:06,160 --> 00:47:07,520
elements

1147
00:47:07,520 --> 00:47:09,280
and a

1148
00:47:09,280 --> 00:47:11,520
boolean function f

1149
00:47:11,520 --> 00:47:13,359
then

1150
00:47:13,359 --> 00:47:17,040
we found the only x that such such that

1151
00:47:17,040 --> 00:47:19,680
f of x is equal to one

1152
00:47:19,680 --> 00:47:23,200
in classical setting we required

1153
00:47:23,200 --> 00:47:24,880
about 2

1154
00:47:24,880 --> 00:47:28,240
to the n to find x but in the quantum

1155
00:47:28,240 --> 00:47:30,240
setting a group

1156
00:47:30,240 --> 00:47:33,520
group algorithm can search this problem

1157
00:47:33,520 --> 00:47:37,119
which need about the square root of 2 to

1158
00:47:37,119 --> 00:47:38,800
the n grove

1159
00:47:38,800 --> 00:47:40,319
durations

1160
00:47:40,319 --> 00:47:42,319
then

1161
00:47:42,319 --> 00:47:43,839
we

1162
00:47:43,839 --> 00:47:47,520
introduced a definition of simple v2

1163
00:47:47,520 --> 00:47:49,920
simple v2 is a family of

1164
00:47:49,920 --> 00:47:54,599
permutations that supports inputs of 101

1165
00:47:54,599 --> 00:47:57,920
128 times b bits

1166
00:47:57,920 --> 00:48:01,760
where b is the number of branches

1167
00:48:01,760 --> 00:48:04,079
when b is equal to one simple v2

1168
00:48:04,079 --> 00:48:09,760
consists of 12 round aes with different

1169
00:48:09,760 --> 00:48:13,040
constant constant when b is

1170
00:48:13,040 --> 00:48:16,240
greater than 2 or equal to 2 simple v2

1171
00:48:16,240 --> 00:48:18,839
is a generalized retail

1172
00:48:18,839 --> 00:48:22,240
structure with the wrong function f that

1173
00:48:22,240 --> 00:48:26,000
consists of two rounds of aes

1174
00:48:26,000 --> 00:48:28,400
we denote

1175
00:48:28,400 --> 00:48:31,760
the simple bit within a simple v2 family

1176
00:48:31,760 --> 00:48:33,440
numbers with b

1177
00:48:33,440 --> 00:48:36,480
ratchets as simple beef i actually

1178
00:48:36,480 --> 00:48:38,880
figured figure it is a

1179
00:48:38,880 --> 00:48:42,160
wrong function of simpler tool

1180
00:48:42,160 --> 00:48:44,079
next we introduce

1181
00:48:44,079 --> 00:48:46,960
some of the technique

1182
00:48:46,960 --> 00:48:48,480
the first one is

1183
00:48:48,480 --> 00:48:52,640
a super xbox technique actual figure

1184
00:48:52,640 --> 00:48:54,000
the target

1185
00:48:54,000 --> 00:48:55,280
target to

1186
00:48:55,280 --> 00:48:56,800
search for

1187
00:48:56,800 --> 00:48:59,440
pair of values whose difference

1188
00:48:59,440 --> 00:49:02,800
satisfies the differentiation from delta

1189
00:49:02,800 --> 00:49:09,119
z sub zero to theta w sub two

1190
00:49:09,119 --> 00:49:11,760
and with us as

1191
00:49:11,760 --> 00:49:13,920
super s box

1192
00:49:13,920 --> 00:49:16,319
and both the time

1193
00:49:16,319 --> 00:49:19,599
complexity and the memory complexity are

1194
00:49:19,599 --> 00:49:24,079
2 to the 32 and we can obvi obtained 2

1195
00:49:24,079 --> 00:49:27,440
to the 32 pair pairs of values that

1196
00:49:27,440 --> 00:49:31,040
satisfy the requirements

1197
00:49:31,040 --> 00:49:34,240
so in the uh

1198
00:49:34,480 --> 00:49:36,640
class and sql

1199
00:49:36,640 --> 00:49:37,760
setting

1200
00:49:37,760 --> 00:49:40,240
we can you know the the complexity to

1201
00:49:40,240 --> 00:49:43,520
get one peer pair of values that

1202
00:49:43,520 --> 00:49:45,119
satisfies the

1203
00:49:45,119 --> 00:49:46,559
differential

1204
00:49:46,559 --> 00:49:49,280
is what in quantum

1205
00:49:49,280 --> 00:49:51,920
setting it can apply to the group

1206
00:49:51,920 --> 00:49:55,520
algorithm to compute the pair

1207
00:49:55,520 --> 00:49:56,559
that

1208
00:49:56,559 --> 00:50:01,440
confirm the differential from delta z

1209
00:50:01,440 --> 00:50:06,079
0 to delta w sub 2 with

1210
00:50:06,079 --> 00:50:09,760
addition time from legacy about 2

1211
00:50:09,760 --> 00:50:14,480
to 16 without cura

1212
00:50:14,480 --> 00:50:17,680
the second technique is a

1213
00:50:17,680 --> 00:50:20,559
rebound attack the rebound attack

1214
00:50:20,559 --> 00:50:24,079
consists of a inbound phase and an

1215
00:50:24,079 --> 00:50:27,440
outbound phase as shown figure

1216
00:50:27,440 --> 00:50:30,720
in the inbound space it have performed a

1217
00:50:30,720 --> 00:50:32,640
match in the middle

1218
00:50:32,640 --> 00:50:36,720
in w sub in to

1219
00:50:36,800 --> 00:50:38,640
general generates

1220
00:50:38,640 --> 00:50:41,119
the starting points

1221
00:50:41,119 --> 00:50:42,000
and

1222
00:50:42,000 --> 00:50:43,920
in the outbound

1223
00:50:43,920 --> 00:50:47,200
phase it computes

1224
00:50:47,200 --> 00:50:49,839
forward and backward with starting

1225
00:50:49,839 --> 00:50:51,520
points

1226
00:50:51,520 --> 00:50:55,599
in addition our attack has a special

1227
00:50:55,599 --> 00:50:58,800
property that's the in inbound phases

1228
00:50:58,800 --> 00:51:03,680
consists of more than one inbound part

1229
00:51:03,680 --> 00:51:04,640
then

1230
00:51:04,640 --> 00:51:08,000
and in this big um paper we heard

1231
00:51:08,000 --> 00:51:09,680
um presents

1232
00:51:09,680 --> 00:51:12,240
the collisions attacked on simple two

1233
00:51:12,240 --> 00:51:14,720
and a simple fall first

1234
00:51:14,720 --> 00:51:17,440
we introduced the collision attack

1235
00:51:17,440 --> 00:51:18,559
on

1236
00:51:18,559 --> 00:51:23,040
nine rounds simple to assure can figure

1237
00:51:23,040 --> 00:51:25,520
in the inbound phase

1238
00:51:25,520 --> 00:51:28,240
the two inbound

1239
00:51:28,240 --> 00:51:31,760
parts that happen in round three and run

1240
00:51:31,760 --> 00:51:34,800
file that are surrounded by the red

1241
00:51:34,800 --> 00:51:38,319
dashed line and reduce the starting

1242
00:51:38,319 --> 00:51:43,040
points by applying two s blocks

1243
00:51:43,040 --> 00:51:45,920
and find the starting points in the

1244
00:51:45,920 --> 00:51:47,599
outboard phase

1245
00:51:47,599 --> 00:51:50,960
propaganda the starting point

1246
00:51:50,960 --> 00:51:52,720
to the beginning and the end of the

1247
00:51:52,720 --> 00:51:54,720
cipher to check if

1248
00:51:54,720 --> 00:51:57,919
uh cli collide

1249
00:51:58,160 --> 00:52:01,119
in the classical setting if the

1250
00:52:01,119 --> 00:52:02,839
probability of

1251
00:52:02,839 --> 00:52:06,480
outbound outbound phase is p

1252
00:52:06,480 --> 00:52:07,359
then

1253
00:52:07,359 --> 00:52:08,480
traverse

1254
00:52:08,480 --> 00:52:11,280
one over p starting points to find the

1255
00:52:11,280 --> 00:52:12,400
right one

1256
00:52:12,400 --> 00:52:14,720
in quantum setting

1257
00:52:14,720 --> 00:52:18,079
we can apply the global algorithm to

1258
00:52:18,079 --> 00:52:20,160
find the right one

1259
00:52:20,160 --> 00:52:21,119
the

1260
00:52:21,119 --> 00:52:25,280
query complexity is the square root of 1

1261
00:52:25,280 --> 00:52:27,359
over here

1262
00:52:27,359 --> 00:52:28,880
and for

1263
00:52:28,880 --> 00:52:33,040
simpler 4 the 4 branches are denotes as

1264
00:52:33,040 --> 00:52:35,839
abcd

1265
00:52:35,839 --> 00:52:38,480
collision a b means the collision

1266
00:52:38,480 --> 00:52:41,440
happens in branch a and b

1267
00:52:41,440 --> 00:52:43,440
a new 11 rounds

1268
00:52:43,440 --> 00:52:45,680
differential of a symbol of

1269
00:52:45,680 --> 00:52:47,040
introduced as

1270
00:52:47,040 --> 00:52:48,240
figure

1271
00:52:48,240 --> 00:52:50,640
in views of which we

1272
00:52:50,640 --> 00:52:51,839
built a

1273
00:52:51,839 --> 00:52:56,160
series of cliches attacked with n2

1274
00:52:56,160 --> 00:52:58,720
branches

1275
00:52:58,839 --> 00:53:02,480
next assure you know figure we make a

1276
00:53:02,480 --> 00:53:06,720
slight change to the 11th direction by

1277
00:53:06,720 --> 00:53:07,680
at

1278
00:53:07,680 --> 00:53:10,079
adding one round

1279
00:53:10,079 --> 00:53:12,720
before adding before and

1280
00:53:12,720 --> 00:53:15,200
peeling off

1281
00:53:15,200 --> 00:53:17,440
in its last round and

1282
00:53:17,440 --> 00:53:20,480
obtained a better defensive for the

1283
00:53:20,480 --> 00:53:23,599
clich collision attack on the last two

1284
00:53:23,599 --> 00:53:26,599
branch

1285
00:53:28,079 --> 00:53:32,079
in the end we summarize the results of

1286
00:53:32,079 --> 00:53:33,280
the main

1287
00:53:33,280 --> 00:53:34,400
attacks

1288
00:53:34,400 --> 00:53:38,640
on simple v2 it is given in table this

1289
00:53:38,640 --> 00:53:42,160
is a simpler beast and one and simpler

1290
00:53:42,160 --> 00:53:44,079
two and

1291
00:53:44,079 --> 00:53:46,160
this is simple

1292
00:53:46,160 --> 00:53:50,240
the results of a simple four

1293
00:53:53,119 --> 00:53:54,960
that's all thank you for your

1294
00:53:54,960 --> 00:53:57,839
attention

1295
00:54:04,480 --> 00:54:06,400
thank you and it seems i think we

1296
00:54:06,400 --> 00:54:08,640
skipped the name of the authors in the

1297
00:54:08,640 --> 00:54:10,000
beginning of the talk so this was a

1298
00:54:10,000 --> 00:54:13,440
paper by beaujohni xiaoyangdong

1299
00:54:13,440 --> 00:54:16,079
and td

1300
00:54:16,240 --> 00:54:17,119
so

1301
00:54:17,119 --> 00:54:19,200
let's have a look for questions

1302
00:54:19,200 --> 00:54:22,520
are there any

1303
00:54:25,200 --> 00:54:27,119
so one thing i noticed is i think there

1304
00:54:27,119 --> 00:54:29,119
are quite a lot of similarities between

1305
00:54:29,119 --> 00:54:30,960
this talk and the previous one so both

1306
00:54:30,960 --> 00:54:32,880
doing uh rebound attacks and the quantum

1307
00:54:32,880 --> 00:54:36,319
setting on aes based design uh do you

1308
00:54:36,319 --> 00:54:38,799
see any additional similarities made by

1309
00:54:38,799 --> 00:54:42,720
maybe either for you or amit

1310
00:54:42,770 --> 00:54:46,449
[Music]

1311
00:54:46,480 --> 00:54:49,480
we

1312
00:54:50,410 --> 00:54:53,609
[Music]

1313
00:54:59,839 --> 00:55:02,319
or maybe a different question

1314
00:55:02,319 --> 00:55:04,160
so did i understand it correctly so you

1315
00:55:04,160 --> 00:55:06,319
both used um

1316
00:55:06,319 --> 00:55:08,319
characteristics with a particular

1317
00:55:08,319 --> 00:55:10,640
probability and i think you both use

1318
00:55:10,640 --> 00:55:11,680
that

1319
00:55:11,680 --> 00:55:14,400
there is a range of probabilities where

1320
00:55:14,400 --> 00:55:17,280
you cannot do an attack in a

1321
00:55:17,280 --> 00:55:18,960
classical setting that's faster than

1322
00:55:18,960 --> 00:55:21,040
generic but you can do it in the quantum

1323
00:55:21,040 --> 00:55:22,960
setting is that correct

1324
00:55:22,960 --> 00:55:25,359
no no no our

1325
00:55:25,359 --> 00:55:28,640
we first present

1326
00:55:28,640 --> 00:55:31,839
a collision and click creation attacks

1327
00:55:31,839 --> 00:55:32,799
in

1328
00:55:32,799 --> 00:55:34,880
class and classical

1329
00:55:34,880 --> 00:55:37,359
setting and then we

1330
00:55:37,359 --> 00:55:40,480
use a groove algorithm to

1331
00:55:40,480 --> 00:55:44,000
make the quantum attack

1332
00:55:45,599 --> 00:55:47,599
okay thank you

1333
00:55:47,599 --> 00:55:50,559
any other questions

1334
00:55:52,400 --> 00:55:54,799
that doesn't seem to be the case so

1335
00:55:54,799 --> 00:55:56,799
let's thank boyu and all the speakers of

1336
00:55:56,799 --> 00:56:00,200
the session again

1337
00:56:03,200 --> 00:56:07,240
and let's enjoy the coffee break

