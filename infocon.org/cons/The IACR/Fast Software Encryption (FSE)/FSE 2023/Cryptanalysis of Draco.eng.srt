1
00:00:03,360 --> 00:00:06,060
hello everyone today I will talk about

2
00:00:06,060 --> 00:00:08,280
electricity analysis of the stream cycle

3
00:00:08,280 --> 00:00:10,760
treco

4
00:00:15,540 --> 00:00:17,279
uh

5
00:00:17,279 --> 00:00:20,580
so in Asia groups of 2001 uh Alex

6
00:00:20,580 --> 00:00:22,260
perukov and another published their

7
00:00:22,260 --> 00:00:23,820
seminal paper one

8
00:00:23,820 --> 00:00:26,400
TMG trade-off attacks the main

9
00:00:26,400 --> 00:00:28,199
conclusion of the paper was that for a

10
00:00:28,199 --> 00:00:29,880
stream Cipher

11
00:00:29,880 --> 00:00:31,920
to be secure the size of its intense

12
00:00:31,920 --> 00:00:33,360
state in bits

13
00:00:33,360 --> 00:00:35,700
it needed to be at least one and a half

14
00:00:35,700 --> 00:00:37,500
to two times the size

15
00:00:37,500 --> 00:00:39,899
of the secret key that it's uses

16
00:00:39,899 --> 00:00:42,059
this was generally accepted as the rule

17
00:00:42,059 --> 00:00:43,860
of thumb until

18
00:00:43,860 --> 00:00:46,440
the EFC of 2015 in which I'm Nick and

19
00:00:46,440 --> 00:00:48,059
Mikhail have proposed the stream ciphers

20
00:00:48,059 --> 00:00:49,260
proud

21
00:00:49,260 --> 00:00:51,000
whose internal stage was exactly equal

22
00:00:51,000 --> 00:00:53,460
to the size of its secret scheme

23
00:00:53,460 --> 00:00:55,260
now surprisingly the disciple did not

24
00:00:55,260 --> 00:00:58,860
succumb to generic TMD trade-off attacks

25
00:00:58,860 --> 00:01:01,800
and was much smaller in the area

26
00:01:01,800 --> 00:01:03,899
than any known streams after that point

27
00:01:03,899 --> 00:01:07,860
because of small state size

28
00:01:07,860 --> 00:01:09,900
now a stream Cipher is a finance State

29
00:01:09,900 --> 00:01:11,159
machine

30
00:01:11,159 --> 00:01:13,560
if we consider F to be the function that

31
00:01:13,560 --> 00:01:15,180
Maps the internal state of the stream

32
00:01:15,180 --> 00:01:17,100
Cipher too

33
00:01:17,100 --> 00:01:18,840
uh to your keystream vector of equal

34
00:01:18,840 --> 00:01:21,420
size then the crypto analysis of the

35
00:01:21,420 --> 00:01:23,400
stream Cipher reduces to inverting this

36
00:01:23,400 --> 00:01:25,560
one-way function f

37
00:01:25,560 --> 00:01:27,180
at any one of the key stream segments

38
00:01:27,180 --> 00:01:30,500
that the attacker has access to

39
00:01:30,659 --> 00:01:32,100
uh

40
00:01:32,100 --> 00:01:34,280
now the algorithm that

41
00:01:34,280 --> 00:01:37,380
uhmir proposed had the trade-off curve

42
00:01:37,380 --> 00:01:39,900
Mt Square Times t squared equal to N

43
00:01:39,900 --> 00:01:41,400
squared

44
00:01:41,400 --> 00:01:43,740
with the limitation that t had to be

45
00:01:43,740 --> 00:01:45,960
larger than d square

46
00:01:45,960 --> 00:01:48,900
m t and D are the memory

47
00:01:48,900 --> 00:01:50,880
online time and the data complexity of

48
00:01:50,880 --> 00:01:52,439
the algorithm

49
00:01:52,439 --> 00:01:55,200
yeah capital N was the cardinality of

50
00:01:55,200 --> 00:01:57,899
the internal State space

51
00:01:57,899 --> 00:02:00,870
and the offline complexity was given as

52
00:02:00,870 --> 00:02:02,220
[Music]

53
00:02:02,220 --> 00:02:05,820
n divided by T so the main idea is that

54
00:02:05,820 --> 00:02:07,799
in the on offline stage the attacker

55
00:02:07,799 --> 00:02:10,199
chooses some random initial States

56
00:02:10,199 --> 00:02:12,480
and iterates this one-way function f

57
00:02:12,480 --> 00:02:14,879
that Maps the state to the keystream

58
00:02:14,879 --> 00:02:17,340
so we'll have two times and stores the

59
00:02:17,340 --> 00:02:19,920
endpoints in a table

60
00:02:19,920 --> 00:02:22,020
in this way the attacker covers a

61
00:02:22,020 --> 00:02:23,640
fraction of the set of states that the

62
00:02:23,640 --> 00:02:25,860
cipher has

63
00:02:25,860 --> 00:02:27,840
and in the online Street the attacker

64
00:02:27,840 --> 00:02:29,280
States one of the key stream segments

65
00:02:29,280 --> 00:02:30,720
and tries to see

66
00:02:30,720 --> 00:02:33,120
if it is present in my in my in one in

67
00:02:33,120 --> 00:02:35,459
any one of the tables

68
00:02:35,459 --> 00:02:37,620
uh a typical point on the straight-off

69
00:02:37,620 --> 00:02:40,140
curve is where both capital T and couple

70
00:02:40,140 --> 00:02:41,700
B

71
00:02:41,700 --> 00:02:45,000
uh capital N to the power to third Which

72
00:02:45,000 --> 00:02:47,160
is less than n

73
00:02:47,160 --> 00:02:49,879
if

74
00:02:49,879 --> 00:02:52,800
denotes the cardinality of the e-space

75
00:02:52,800 --> 00:02:55,260
and N equal to K we should say that the

76
00:02:55,260 --> 00:02:56,700
key and the state size are equal then

77
00:02:56,700 --> 00:02:58,140
the straight-off point represents a

78
00:02:58,140 --> 00:02:59,160
valid attack

79
00:02:59,160 --> 00:03:01,440
against a stream Cipher

80
00:03:01,440 --> 00:03:03,959
so as a rule of thumb

81
00:03:03,959 --> 00:03:06,480
capsule n was set to K Square

82
00:03:06,480 --> 00:03:08,640
after which

83
00:03:08,640 --> 00:03:10,500
it is not possible to find a point on

84
00:03:10,500 --> 00:03:12,060
this curve for which

85
00:03:12,060 --> 00:03:13,800
both capital P and capital T Infinity

86
00:03:13,800 --> 00:03:15,599
online and the offline complexity are

87
00:03:15,599 --> 00:03:17,580
less than capsule k

88
00:03:17,580 --> 00:03:20,580
okay

89
00:03:32,400 --> 00:03:36,300
so the main idea behind the Sprout and

90
00:03:36,300 --> 00:03:39,300
similar stream ciphers which have

91
00:03:39,300 --> 00:03:41,700
shorter internal state is that the state

92
00:03:41,700 --> 00:03:43,739
update function required the secret key

93
00:03:43,739 --> 00:03:45,480
as the input

94
00:03:45,480 --> 00:03:46,980
and so

95
00:03:46,980 --> 00:03:50,340
any of these maps that Maps as the sis

96
00:03:50,340 --> 00:03:51,720
to the CIS

97
00:03:51,720 --> 00:03:53,879
which is not possible to construct this

98
00:03:53,879 --> 00:03:55,200
function f

99
00:03:55,200 --> 00:03:57,299
that Maps the state to keystream without

100
00:03:57,299 --> 00:03:59,519
the input of the secret key

101
00:03:59,519 --> 00:04:01,620
so this made the effective State size of

102
00:04:01,620 --> 00:04:03,360
the cipher

103
00:04:03,360 --> 00:04:05,760
basically equal to the size of the State

104
00:04:05,760 --> 00:04:08,040
plus the size of the key

105
00:04:08,040 --> 00:04:10,680
which was effectively twice the size of

106
00:04:10,680 --> 00:04:13,860
the key and so any generic TMG trade of

107
00:04:13,860 --> 00:04:15,420
type attacks could have been prevented

108
00:04:15,420 --> 00:04:18,680
however prevented

109
00:04:20,459 --> 00:04:22,740
of course proud had other weaknesses and

110
00:04:22,740 --> 00:04:24,180
it was attacked in a number of papers

111
00:04:24,180 --> 00:04:26,280
following its publication and since then

112
00:04:26,280 --> 00:04:28,979
there have been various attempts at

113
00:04:28,979 --> 00:04:31,380
designing Short State ciphers

114
00:04:31,380 --> 00:04:33,600
for example plantlet was a redesign of

115
00:04:33,600 --> 00:04:35,880
sprout by the same authors

116
00:04:35,880 --> 00:04:38,220
by removing known points of attack from

117
00:04:38,220 --> 00:04:39,720
the design

118
00:04:39,720 --> 00:04:41,340
however there was a near Collision

119
00:04:41,340 --> 00:04:43,320
attack reported against it in the FSC of

120
00:04:43,320 --> 00:04:45,180
2019

121
00:04:45,180 --> 00:04:48,600
lizard was another design presented in

122
00:04:48,600 --> 00:04:52,400
FSC of 2017

123
00:04:52,400 --> 00:04:55,259
and there are some attacks reports

124
00:04:55,259 --> 00:04:57,840
against uh lizard in the efficacy of the

125
00:04:57,840 --> 00:04:59,820
following year

126
00:04:59,820 --> 00:05:01,979
atem was another design presented in FSC

127
00:05:01,979 --> 00:05:03,960
last year and uh you're not aware of any

128
00:05:03,960 --> 00:05:07,159
attack reportedly instead

129
00:05:08,060 --> 00:05:11,400
so Draco was a design presented to

130
00:05:11,400 --> 00:05:13,020
defici this year

131
00:05:13,020 --> 00:05:15,120
those familiar with the structure of the

132
00:05:15,120 --> 00:05:16,740
grain family of stream ciphers would

133
00:05:16,740 --> 00:05:18,960
recognize this setup immediately

134
00:05:18,960 --> 00:05:21,540
so just two non-linear registers of size

135
00:05:21,540 --> 00:05:24,960
95 and 33 bits

136
00:05:24,960 --> 00:05:27,840
and the stage is updated with the 128

137
00:05:27,840 --> 00:05:30,120
bits non-volatile state

138
00:05:30,120 --> 00:05:32,340
which consists of the first 32 bits of

139
00:05:32,340 --> 00:05:34,080
the key and uh

140
00:05:34,080 --> 00:05:36,919
96 bit IV

141
00:05:36,919 --> 00:05:40,979
by extorting this bit DFT to the update

142
00:05:40,979 --> 00:05:44,120
function at every clock cycle

143
00:05:44,280 --> 00:05:46,380
now uh

144
00:05:46,380 --> 00:05:48,960
G of T is constructed as followers

145
00:05:48,960 --> 00:05:52,199
first the IV is prepended with a single

146
00:05:52,199 --> 00:05:54,600
zero bit to make it of 97 bits

147
00:05:54,600 --> 00:05:59,400
and the bits are renamed as x i

148
00:05:59,400 --> 00:06:01,620
and

149
00:06:01,620 --> 00:06:05,820
DT is then calculated as X of T mod 97

150
00:06:05,820 --> 00:06:08,940
xor with K of T mod 32. it was probably

151
00:06:08,940 --> 00:06:12,419
done because 32.97 are co-prime and so

152
00:06:12,419 --> 00:06:13,919
it would be more difficult to construct

153
00:06:13,919 --> 00:06:17,299
patterns in the TT sequence

154
00:06:17,580 --> 00:06:20,100
now we have proposed two attractions

155
00:06:20,100 --> 00:06:21,960
Sprout and I was very quickly thank you

156
00:06:21,960 --> 00:06:23,580
to both of them

157
00:06:23,580 --> 00:06:25,139
the first attack stems from two

158
00:06:25,139 --> 00:06:27,419
observations

159
00:06:27,419 --> 00:06:29,520
the first thing to note is that the

160
00:06:29,520 --> 00:06:31,800
sequence D of T is periodic repeated

161
00:06:31,800 --> 00:06:35,039
equal to the product of 32 and 97. this

162
00:06:35,039 --> 00:06:36,840
is not very difficult to see since DT is

163
00:06:36,840 --> 00:06:39,180
just a xor of

164
00:06:39,180 --> 00:06:42,780
the IV and the key bits and

165
00:06:42,780 --> 00:06:44,819
since the IV and the keep its repeating

166
00:06:44,819 --> 00:06:47,400
cycles of 32 and 97 I just

167
00:06:47,400 --> 00:06:49,319
therefore understandable that they will

168
00:06:49,319 --> 00:06:53,940
come into sync after 32 times 97 Cycles

169
00:06:53,940 --> 00:06:56,940
and so uh sequence DT will be periodic

170
00:06:56,940 --> 00:06:58,740
with the

171
00:06:58,740 --> 00:07:01,199
this given period

172
00:07:01,199 --> 00:07:02,759
well the second observation is as

173
00:07:02,759 --> 00:07:04,259
follows

174
00:07:04,259 --> 00:07:07,740
we take all IVs of the form

175
00:07:07,740 --> 00:07:10,139
Kappa concatenated tries and the whole

176
00:07:10,139 --> 00:07:12,180
thing rotated by one bit

177
00:07:12,180 --> 00:07:14,340
yeah

178
00:07:14,340 --> 00:07:15,080
um

179
00:07:15,080 --> 00:07:18,500
keep it fixed

180
00:07:18,780 --> 00:07:21,599
for all such ideas it is very easy to

181
00:07:21,599 --> 00:07:24,660
see that this 96-bit sequence

182
00:07:24,660 --> 00:07:28,080
D of Tau plus 1 up to D of Tau plus 96

183
00:07:28,080 --> 00:07:29,520
is 0.

184
00:07:29,520 --> 00:07:31,680
for all values of star that are

185
00:07:31,680 --> 00:07:33,720
divisible by this uh

186
00:07:33,720 --> 00:07:36,840
by this period 3104.

187
00:07:36,840 --> 00:07:40,800
uh since GT is the contribution of

188
00:07:40,800 --> 00:07:43,979
the key to the update of the State uh

189
00:07:43,979 --> 00:07:46,800
this essentially implies that the state

190
00:07:46,800 --> 00:07:48,840
update for 96 Cycles

191
00:07:48,840 --> 00:07:51,539
and in turn the keystream BET generation

192
00:07:51,539 --> 00:07:54,360
from 99 Cycles is effectively

193
00:07:54,360 --> 00:07:56,520
independent of the game

194
00:07:56,520 --> 00:07:58,319
well the key stream is independent from

195
00:07:58,319 --> 00:08:00,720
99 instead of 96 because

196
00:08:00,720 --> 00:08:03,840
in Cycles 97 98 and 99 the state bits

197
00:08:03,840 --> 00:08:05,880
are updated by the key

198
00:08:05,880 --> 00:08:08,099
s that are updated by the key to not

199
00:08:08,099 --> 00:08:09,479
take part

200
00:08:09,479 --> 00:08:14,599
in the construction of the keystring but

201
00:08:14,759 --> 00:08:16,919
and uh

202
00:08:16,919 --> 00:08:19,880
so uh

203
00:08:20,240 --> 00:08:22,800
there are a relatively small numbers

204
00:08:22,800 --> 00:08:24,300
which is about 30

205
00:08:24,300 --> 00:08:26,879
to um

206
00:08:26,879 --> 00:08:29,240
IVs of the required form

207
00:08:29,240 --> 00:08:32,719
vvv rotated by one

208
00:08:32,719 --> 00:08:37,500
and so the strategy in is by is using a

209
00:08:37,500 --> 00:08:40,620
chosen IV scenario and trying all

210
00:08:40,620 --> 00:08:43,260
possible IVs of this form

211
00:08:43,260 --> 00:08:46,140
and with v equals Kappa

212
00:08:46,140 --> 00:08:49,200
yeah that is when the cycle becomes weak

213
00:08:49,200 --> 00:08:51,740
algebraically

214
00:09:01,680 --> 00:09:04,279
okay

215
00:09:04,440 --> 00:09:06,899
so the idea is as follows in the offline

216
00:09:06,899 --> 00:09:08,700
stage we try

217
00:09:08,700 --> 00:09:11,100
to create tables assuming that this

218
00:09:11,100 --> 00:09:13,800
stream Cipher is already in this week

219
00:09:13,800 --> 00:09:17,279
generally compromised it

220
00:09:17,279 --> 00:09:19,399
um

221
00:09:19,560 --> 00:09:22,740
so we Generate random 128 bit States

222
00:09:22,740 --> 00:09:26,160
uh generate the 99 key stream bits that

223
00:09:26,160 --> 00:09:27,779
does not require

224
00:09:27,779 --> 00:09:30,779
uh any involvement of the key then we

225
00:09:30,779 --> 00:09:34,519
store it in an offline table

226
00:09:35,040 --> 00:09:37,019
um index by the keystring vector of

227
00:09:37,019 --> 00:09:37,920
course

228
00:09:37,920 --> 00:09:41,580
so that it is easy to search

229
00:09:41,580 --> 00:09:44,880
now in the online stage

230
00:09:44,880 --> 00:09:47,459
we query keystream bits for all IVs of

231
00:09:47,459 --> 00:09:49,440
this required form

232
00:09:49,440 --> 00:09:53,660
and we take

233
00:09:54,000 --> 00:09:56,880
for for all I that are one mod three

234
00:09:56,880 --> 00:10:00,540
3104 so we extract these 99-bit key

235
00:10:00,540 --> 00:10:02,339
stream windows and try to see if they

236
00:10:02,339 --> 00:10:06,240
are already present in the stable or not

237
00:10:06,240 --> 00:10:07,800
so if we find the match shall we

238
00:10:07,800 --> 00:10:09,420
generate a few more keystream bits and

239
00:10:09,420 --> 00:10:11,100
check if the extracted key is limits and

240
00:10:11,100 --> 00:10:13,200
the generated engagement bits match

241
00:10:13,200 --> 00:10:15,240
if not we can simply reject this

242
00:10:15,240 --> 00:10:16,920
candidate and move to the move to the

243
00:10:16,920 --> 00:10:19,440
next keyframe window however yes then we

244
00:10:19,440 --> 00:10:22,339
can open secretly

245
00:10:22,440 --> 00:10:24,420
and by using birthday bounce it's

246
00:10:24,420 --> 00:10:26,700
possible to calculate that the total

247
00:10:26,700 --> 00:10:28,320
complexity of this attack is around 2 is

248
00:10:28,320 --> 00:10:30,120
about 114.

249
00:10:30,120 --> 00:10:32,399
as opposed to Bluetooth search would

250
00:10:32,399 --> 00:10:35,779
take just 128.

251
00:10:36,420 --> 00:10:37,080
um

252
00:10:37,080 --> 00:10:39,779
the second attack stems from another key

253
00:10:39,779 --> 00:10:41,880
observation

254
00:10:41,880 --> 00:10:43,800
so the idea is we take all initial

255
00:10:43,800 --> 00:10:46,140
vectors for which the first 96 minus

256
00:10:46,140 --> 00:10:48,420
capsule e bits are zero

257
00:10:48,420 --> 00:10:51,360
and the remaining caption ebits are

258
00:10:51,360 --> 00:10:54,660
some some small Vector small small yeah

259
00:10:54,660 --> 00:10:57,360
and now consider some Lambda which is a

260
00:10:57,360 --> 00:11:00,000
multiple of 97.

261
00:11:00,000 --> 00:11:03,420
it can be proven that the 97 minus

262
00:11:03,420 --> 00:11:05,640
capital E bit sequence

263
00:11:05,640 --> 00:11:08,220
uh G of Lambda to D of Lambda plus 96

264
00:11:08,220 --> 00:11:09,959
minus E it does not depend on the small

265
00:11:09,959 --> 00:11:11,640
e

266
00:11:11,640 --> 00:11:12,839
and this is not very difficult to

267
00:11:12,839 --> 00:11:14,940
provide and have an improvement in two

268
00:11:14,940 --> 00:11:17,940
lines as I've shown in the slide

269
00:11:17,940 --> 00:11:20,120
um

270
00:11:20,700 --> 00:11:24,360
but the main takeaway is that of the IV

271
00:11:24,360 --> 00:11:25,980
of this form

272
00:11:25,980 --> 00:11:27,779
for any idea of this form the state

273
00:11:27,779 --> 00:11:30,300
update for 97 minus e-cycles

274
00:11:30,300 --> 00:11:32,459
and for similar reasons keystream bits

275
00:11:32,459 --> 00:11:34,800
for 100 minus E Cycles do not depend on

276
00:11:34,800 --> 00:11:37,320
the idea as well and this try gives rise

277
00:11:37,320 --> 00:11:39,060
to another set of three configurations

278
00:11:39,060 --> 00:11:42,439
that we can explore in the following way

279
00:11:42,480 --> 00:11:44,600
um

280
00:11:46,800 --> 00:11:49,500
in the offline stage we try to create

281
00:11:49,500 --> 00:11:51,300
tables again assuming

282
00:11:51,300 --> 00:11:53,160
that the stream Cipher is already in

283
00:11:53,160 --> 00:11:54,779
this week

284
00:11:54,779 --> 00:11:56,600
compromised it

285
00:11:56,600 --> 00:11:59,760
uh the only difference is that that this

286
00:11:59,760 --> 00:12:02,339
time you have to construct tables for

287
00:12:02,339 --> 00:12:05,820
all the to the power 32 key prefix

288
00:12:05,820 --> 00:12:07,620
values

289
00:12:07,620 --> 00:12:11,279
so we take we generate 2.96 minus

290
00:12:11,279 --> 00:12:12,480
capital D

291
00:12:12,480 --> 00:12:14,660
random States

292
00:12:14,660 --> 00:12:16,740
and generate

293
00:12:16,740 --> 00:12:19,980
is 100 minus E key stream bits

294
00:12:19,980 --> 00:12:22,680
and store this spare keystring comma

295
00:12:22,680 --> 00:12:24,120
state in

296
00:12:24,120 --> 00:12:28,399
the respective table tab of K

297
00:12:29,459 --> 00:12:32,100
uh the online stage is exactly similar

298
00:12:32,100 --> 00:12:33,779
we take

299
00:12:33,779 --> 00:12:36,839
all IVs of the given form in which the

300
00:12:36,839 --> 00:12:40,019
first 96 minus capsule e bits are zero

301
00:12:40,019 --> 00:12:44,040
and then we take all 100 minus ebit

302
00:12:44,040 --> 00:12:45,839
heat stream windows and see if they

303
00:12:45,839 --> 00:12:47,880
exist in any one of the toolbar 32

304
00:12:47,880 --> 00:12:50,300
tables

305
00:12:51,420 --> 00:12:53,599
um

306
00:12:55,019 --> 00:12:56,820
and the rest is exactly similar as the

307
00:12:56,820 --> 00:12:58,740
previous attack if you find the match

308
00:12:58,740 --> 00:13:00,480
then you're not the key here and we can

309
00:13:00,480 --> 00:13:02,040
generate a few more D string bits to

310
00:13:02,040 --> 00:13:04,139
check but the generation and extracted

311
00:13:04,139 --> 00:13:06,300
keys to mix match signing up the key

312
00:13:06,300 --> 00:13:08,639
otherwise move on to the next candidate

313
00:13:08,639 --> 00:13:11,399
uh we can adjust values of capital E and

314
00:13:11,399 --> 00:13:13,139
capital G to balance the offline and

315
00:13:13,139 --> 00:13:15,060
online complexities

316
00:13:15,060 --> 00:13:17,399
and you've seen that for capital G is 28

317
00:13:17,399 --> 00:13:20,100
and capital is 40. the three

318
00:13:20,100 --> 00:13:21,720
complexities become the same and the

319
00:13:21,720 --> 00:13:25,139
Civil complexity becomes actual 107.

320
00:13:25,139 --> 00:13:27,240
and this is probably the best we can do

321
00:13:27,240 --> 00:13:29,160
in this setup

322
00:13:29,160 --> 00:13:32,220
uh to conclude uh it is obvious that uh

323
00:13:32,220 --> 00:13:34,139
the main point of entry of the attack

324
00:13:34,139 --> 00:13:35,100
was

325
00:13:35,100 --> 00:13:37,200
the schedule function

326
00:13:37,200 --> 00:13:38,880
and how the authors chose to construct

327
00:13:38,880 --> 00:13:41,399
the sequence DFT

328
00:13:41,399 --> 00:13:43,500
which allows us to define a very simple

329
00:13:43,500 --> 00:13:45,420
one-way function over from the state to

330
00:13:45,420 --> 00:13:46,620
the key stream

331
00:13:46,620 --> 00:13:49,740
over a smaller uh overset of smaller

332
00:13:49,740 --> 00:13:52,399
cards analogy

333
00:13:52,740 --> 00:13:54,899
um my initial intuition is that a better

334
00:13:54,899 --> 00:13:58,339
quiche we should fix this design

335
00:13:58,639 --> 00:14:02,160
and that is all I have in this

336
00:14:02,160 --> 00:14:03,480
presentation thanks a lot for listening

337
00:14:03,480 --> 00:14:04,560
thank you

338
00:14:04,560 --> 00:14:07,339
foreign

