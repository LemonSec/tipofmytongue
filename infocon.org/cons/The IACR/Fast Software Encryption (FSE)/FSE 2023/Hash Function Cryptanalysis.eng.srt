1
00:00:00,000 --> 00:00:03,120
decision today this session is dedicated

2
00:00:03,120 --> 00:00:06,240
to the crypto analysis of hash functions

3
00:00:06,240 --> 00:00:09,420
there are three talks

4
00:00:09,420 --> 00:00:13,019
the first talk is about venting

5
00:00:13,019 --> 00:00:16,820
Collision against the foreground

6
00:00:17,300 --> 00:00:21,840
384 in Practical time the authors are

7
00:00:21,840 --> 00:00:26,480
xenyang Wang Ona argument

8
00:00:28,099 --> 00:00:32,359
Alexander and the magazine

9
00:00:32,420 --> 00:00:36,120
will give the talk welcome

10
00:00:36,120 --> 00:00:40,760
uh can you hear me yes oh okay thank you

11
00:00:40,760 --> 00:00:44,719
let's say the uh Hong from University

12
00:00:44,719 --> 00:00:48,780
and my topic today is finding Legends

13
00:00:48,780 --> 00:00:52,160
against foreign

14
00:00:55,320 --> 00:00:58,320
maximov

15
00:01:00,930 --> 00:01:03,480
[Music]

16
00:01:03,480 --> 00:01:05,939
uh in this talk I will show the

17
00:01:05,939 --> 00:01:08,700
background uh the framework of our

18
00:01:08,700 --> 00:01:12,360
attack and the three stages so forward

19
00:01:12,360 --> 00:01:15,060
hike and finally we will show the

20
00:01:15,060 --> 00:01:19,939
experiments and complexity analysis

21
00:01:19,939 --> 00:01:24,659
as we know hash function uh a cache

22
00:01:24,659 --> 00:01:28,100
functions are on key The Primitives that

23
00:01:28,100 --> 00:01:31,500
comprise an arbitrary long input message

24
00:01:31,500 --> 00:01:37,079
into affects the less output hash value

25
00:01:37,079 --> 00:01:41,640
and hash functions are extremely useful

26
00:01:41,640 --> 00:01:47,759
in in practice in many cases and one of

27
00:01:47,759 --> 00:01:48,619
the

28
00:01:48,619 --> 00:01:52,860
security requirements for a harsh for

29
00:01:52,860 --> 00:01:55,200
secure hash function is that it should

30
00:01:55,200 --> 00:01:58,380
be a computationally difficult to find

31
00:01:58,380 --> 00:02:01,460
the equation pair

32
00:02:02,899 --> 00:02:06,719
sponge family is designed by bertonia

33
00:02:06,719 --> 00:02:10,739
and all uh it has been selected by us

34
00:02:10,739 --> 00:02:16,280
nist as a proposed the shastri

35
00:02:16,760 --> 00:02:20,060
the Chuck's Bunch

36
00:02:20,060 --> 00:02:23,840
function is based on Sponge construction

37
00:02:23,840 --> 00:02:27,900
it has 24 rounds and with two parameters

38
00:02:27,900 --> 00:02:32,580
uh uh bit rate and capacity

39
00:02:32,580 --> 00:02:35,940
it has uh four versions and today we

40
00:02:35,940 --> 00:02:38,280
will look at the catch hacks 3 and 84

41
00:02:38,280 --> 00:02:42,060
and as you can see here I want the

42
00:02:42,060 --> 00:02:46,140
parameter in uh grows the input space

43
00:02:46,140 --> 00:02:48,780
will be smaller

44
00:02:48,780 --> 00:02:51,660
this is the wrong function of catch up

45
00:02:51,660 --> 00:02:55,800
it contains the five operations and the

46
00:02:55,800 --> 00:03:00,800
linear layer is of first three of

47
00:03:00,800 --> 00:03:05,220
options and ketchak is uh sorry uh Kai

48
00:03:05,220 --> 00:03:09,000
is a non-linear layer

49
00:03:09,000 --> 00:03:12,959
next we will introduce the CP kernel

50
00:03:12,959 --> 00:03:17,280
equation which have which has been used

51
00:03:17,280 --> 00:03:20,519
a lot in previous works and the less

52
00:03:20,519 --> 00:03:23,760
equation will also be used a lot in our

53
00:03:23,760 --> 00:03:26,359
work

54
00:03:27,180 --> 00:03:30,080
um in our work improved the best

55
00:03:30,080 --> 00:03:35,519
collision hike on construction 84 to be

56
00:03:35,519 --> 00:03:38,340
a practical attack

57
00:03:38,340 --> 00:03:41,700
next we will show the framework of our

58
00:03:41,700 --> 00:03:45,959
attack uh before that we will show the

59
00:03:45,959 --> 00:03:49,080
framework of previous Works uh the

60
00:03:49,080 --> 00:03:51,420
previous Collision attacks against

61
00:03:51,420 --> 00:03:56,420
ketchup contains uh contain two parts

62
00:03:56,420 --> 00:04:00,659
which are uh connector and the Collision

63
00:04:00,659 --> 00:04:02,879
searching part

64
00:04:02,879 --> 00:04:06,560
um let's assume that we have a

65
00:04:06,560 --> 00:04:09,799
differential field

66
00:04:09,799 --> 00:04:13,560
with uh with a special form it means

67
00:04:13,560 --> 00:04:16,858
that the first D beats of the output

68
00:04:16,858 --> 00:04:20,040
difference are zero

69
00:04:20,040 --> 00:04:24,020
and in the connector part

70
00:04:24,020 --> 00:04:30,000
the the attacker tries to produce a

71
00:04:30,000 --> 00:04:33,479
branch of message pairs such that the

72
00:04:33,479 --> 00:04:36,620
list equation works

73
00:04:36,620 --> 00:04:38,580
and

74
00:04:38,580 --> 00:04:39,919
um

75
00:04:39,919 --> 00:04:41,479
illness

76
00:04:41,479 --> 00:04:45,080
phase so at hiker applies uh

77
00:04:45,080 --> 00:04:49,320
linearization techniques the main idea

78
00:04:49,320 --> 00:04:52,500
of the linearization technique

79
00:04:52,500 --> 00:04:54,300
techniques uh

80
00:04:54,300 --> 00:04:59,960
is to add a bit uh bit conditions on the

81
00:04:59,960 --> 00:05:06,660
uh input uh input space to linearize the

82
00:05:06,660 --> 00:05:10,680
first few runs uh in the colleges

83
00:05:10,680 --> 00:05:13,580
searching phase the

84
00:05:13,580 --> 00:05:18,479
hiker to searching over the uh over the

85
00:05:18,479 --> 00:05:20,340
uh

86
00:05:20,340 --> 00:05:23,600
message pairs uh generated in the

87
00:05:23,600 --> 00:05:28,080
connector part for the for the for the

88
00:05:28,080 --> 00:05:31,440
uh plating pair

89
00:05:31,440 --> 00:05:34,740
but the drawback of this technique is

90
00:05:34,740 --> 00:05:38,520
that the as a bit conditions will

91
00:05:38,520 --> 00:05:42,780
consume many degrees of freedom as the

92
00:05:42,780 --> 00:05:47,820
sub and the input space of Xiao 3384 is

93
00:05:47,820 --> 00:05:52,979
too small to provide such a level of uh

94
00:05:52,979 --> 00:05:56,600
degrees of freedom uh extra

95
00:05:56,600 --> 00:06:02,180
bit conditions will cause uh

96
00:06:02,180 --> 00:06:05,460
contractions making the technique

97
00:06:05,460 --> 00:06:08,759
infeasible to solve this problem we

98
00:06:08,759 --> 00:06:10,560
proposed our

99
00:06:10,560 --> 00:06:14,759
uh free new framework our new attack our

100
00:06:14,759 --> 00:06:18,020
attack contains the three stages

101
00:06:18,020 --> 00:06:21,120
which are first block generation stage

102
00:06:21,120 --> 00:06:24,419
uh one round set base the connector

103
00:06:24,419 --> 00:06:27,600
stage and collision searching stage uh

104
00:06:27,600 --> 00:06:31,400
the first block here will be used as a

105
00:06:31,400 --> 00:06:34,979
pseudo random number generator

106
00:06:34,979 --> 00:06:39,479
and our attacker can be extended to a

107
00:06:39,479 --> 00:06:42,080
multi block type

108
00:06:42,080 --> 00:06:45,900
in this case we can put some useful

109
00:06:45,900 --> 00:06:49,860
information in the first few blocks of

110
00:06:49,860 --> 00:06:51,919
the message

111
00:06:51,919 --> 00:06:56,479
in the second stage we solve the linear

112
00:06:56,479 --> 00:07:00,419
uh problems with the set solver the

113
00:07:00,419 --> 00:07:04,259
there are two benefits by doing this the

114
00:07:04,259 --> 00:07:07,380
first is that we can gain greater

115
00:07:07,380 --> 00:07:10,639
feasibility in choosing the differential

116
00:07:10,639 --> 00:07:14,280
characteristics because if we cannot

117
00:07:14,280 --> 00:07:17,880
connect the uh

118
00:07:17,880 --> 00:07:22,020
uh uh some it's a message to to to a

119
00:07:22,020 --> 00:07:25,020
differential path we can uh we don't

120
00:07:25,020 --> 00:07:27,500
need to discard the the the the

121
00:07:27,500 --> 00:07:30,720
differential characteristic we can only

122
00:07:30,720 --> 00:07:35,819
generate another new uh prefix pair and

123
00:07:35,819 --> 00:07:38,520
try to connect again

124
00:07:38,520 --> 00:07:41,840
the other benefit is that the non-linear

125
00:07:41,840 --> 00:07:46,380
conditions are much easier to decide to

126
00:07:46,380 --> 00:07:52,199
to be satisfied using uh uh set solver

127
00:07:52,199 --> 00:07:56,060
then we will look at the first stage

128
00:07:56,060 --> 00:07:58,340
let's say the differential

129
00:07:58,340 --> 00:08:03,419
characteristic we use it adapts from the

130
00:08:03,419 --> 00:08:08,299
second characteristic in less work

131
00:08:08,400 --> 00:08:11,419
um there will be some

132
00:08:11,419 --> 00:08:15,720
requirements over the uh changing values

133
00:08:15,720 --> 00:08:16,740
here

134
00:08:16,740 --> 00:08:23,819
because if if because we know the output

135
00:08:23,819 --> 00:08:28,740
differences of chi and with one we have

136
00:08:28,740 --> 00:08:32,458
some special output difference

137
00:08:32,458 --> 00:08:36,179
um the the there will also be a

138
00:08:36,179 --> 00:08:40,979
conditions over the input differences

139
00:08:40,979 --> 00:08:43,799
this is a summary of conditions for

140
00:08:43,799 --> 00:08:47,660
special output differences of chi and we

141
00:08:47,660 --> 00:08:52,740
when we apply uh the CP kernel equations

142
00:08:52,740 --> 00:08:56,580
over the over the conditions we will

143
00:08:56,580 --> 00:08:59,820
find the conditions on the chaining

144
00:08:59,820 --> 00:09:03,260
values as you can see here there are 39

145
00:09:03,260 --> 00:09:07,560
linear conditions on the changing values

146
00:09:07,560 --> 00:09:10,820
uh to generate a

147
00:09:10,820 --> 00:09:15,839
prefix pairs for fielding uh

148
00:09:15,839 --> 00:09:19,560
fulfilling the conditions we designed we

149
00:09:19,560 --> 00:09:24,000
developed the least algorithm uh we and

150
00:09:24,000 --> 00:09:27,959
we also use a technique called the harsh

151
00:09:27,959 --> 00:09:34,019
table to balance the storage and uh time

152
00:09:34,019 --> 00:09:35,959
complexity

153
00:09:35,959 --> 00:09:39,959
next we will go to the second stage

154
00:09:39,959 --> 00:09:44,160
um in we we Define the connectivity

155
00:09:44,160 --> 00:09:47,480
problem uh in this way

156
00:09:47,480 --> 00:09:54,360
we assume that the the attacker no the

157
00:09:54,360 --> 00:09:58,680
tiger knows I'm the I'm one and I'm one

158
00:09:58,680 --> 00:10:02,779
prime uh his task is to find the

159
00:10:02,779 --> 00:10:07,200
facts pair such that the less equation

160
00:10:07,200 --> 00:10:09,800
work

161
00:10:12,120 --> 00:10:12,959
um

162
00:10:12,959 --> 00:10:16,440
it is straightforward that we can solve

163
00:10:16,440 --> 00:10:18,899
the connectivity problems with the set

164
00:10:18,899 --> 00:10:22,140
server directly but this is very time

165
00:10:22,140 --> 00:10:27,180
consuming in this way we developed an

166
00:10:27,180 --> 00:10:29,640
algorithm called deduce and receive

167
00:10:29,640 --> 00:10:33,300
algorithm uh in with less algorithm we

168
00:10:33,300 --> 00:10:37,560
can filter the prefix pairs generated in

169
00:10:37,560 --> 00:10:39,320
the first stage

170
00:10:39,320 --> 00:10:45,180
uh so there are two stages in the deduce

171
00:10:45,180 --> 00:10:48,420
and sieve algorithm which are different

172
00:10:48,420 --> 00:10:50,459
states and value phase

173
00:10:50,459 --> 00:10:55,680
in the difference phase we let's assume

174
00:10:55,680 --> 00:11:00,300
uh we have a prefix pair and we know

175
00:11:00,300 --> 00:11:05,459
alpha one here in this way we will also

176
00:11:05,459 --> 00:11:08,760
have the chaining values it means the

177
00:11:08,760 --> 00:11:12,959
part of alpha 0 Here is known and we

178
00:11:12,959 --> 00:11:17,579
also have conditions on bit 0 should

179
00:11:17,579 --> 00:11:20,760
hold if we assume the connectivity

180
00:11:20,760 --> 00:11:23,899
problem is solvable

181
00:11:23,899 --> 00:11:27,660
uh then we can deduce a new big

182
00:11:27,660 --> 00:11:31,440
differences of alpha 0 and base zero we

183
00:11:31,440 --> 00:11:36,420
deduce the big differences with uh at

184
00:11:36,420 --> 00:11:39,380
least two uh

185
00:11:39,380 --> 00:11:42,560
equations which are CP kernel equations

186
00:11:42,560 --> 00:11:45,660
and beat the relation relations

187
00:11:45,660 --> 00:11:48,480
relations

188
00:11:48,480 --> 00:11:50,100
and then

189
00:11:50,100 --> 00:11:53,519
um it's a tiger will try to see if the

190
00:11:53,519 --> 00:11:57,860
prefix pair with a table called the tdtt

191
00:11:57,860 --> 00:12:02,040
and we we show the definition of tdtt

192
00:12:02,040 --> 00:12:05,880
here let's assume that

193
00:12:05,880 --> 00:12:07,399
um the tiger

194
00:12:07,399 --> 00:12:11,940
nodes truncated the input difference and

195
00:12:11,940 --> 00:12:16,040
then output the difference of some Xbox

196
00:12:16,040 --> 00:12:19,079
there are three possibilities in this

197
00:12:19,079 --> 00:12:21,420
case the first one is that the

198
00:12:21,420 --> 00:12:24,839
differential path is not compatible in

199
00:12:24,839 --> 00:12:29,399
laser is a a tiger can directly refuse

200
00:12:29,399 --> 00:12:31,519
the less pair

201
00:12:31,519 --> 00:12:34,220
the second

202
00:12:34,220 --> 00:12:38,480
probability is that performance

203
00:12:38,480 --> 00:12:42,660
truncated input difference he can know

204
00:12:42,660 --> 00:12:46,139
more piece of input difference

205
00:12:46,139 --> 00:12:49,980
and the second case is that no more big

206
00:12:49,980 --> 00:12:54,300
differences can be deduced let's see an

207
00:12:54,300 --> 00:12:59,160
example about on the on the second case

208
00:12:59,160 --> 00:13:04,320
um let let's let's assume that uh input

209
00:13:04,320 --> 00:13:07,139
truncated input differences with less

210
00:13:07,139 --> 00:13:10,920
form and the output difference is of H3

211
00:13:10,920 --> 00:13:14,000
if we look at the

212
00:13:14,000 --> 00:13:18,480
DDT of chi we will know that there are

213
00:13:18,480 --> 00:13:22,320
three possible input differences in this

214
00:13:22,320 --> 00:13:26,240
way and we can see that

215
00:13:26,240 --> 00:13:28,560
we uh

216
00:13:28,560 --> 00:13:32,060
we can know two more BT information

217
00:13:32,060 --> 00:13:39,540
uh because the first beat and uh the

218
00:13:39,540 --> 00:13:44,339
first bit input difference should be one

219
00:13:44,339 --> 00:13:47,220
uh with more uh

220
00:13:47,220 --> 00:13:50,519
with more information about the big

221
00:13:50,519 --> 00:13:54,060
difference we can deduce uh

222
00:13:54,060 --> 00:13:57,779
new uh differences using the two

223
00:13:57,779 --> 00:13:59,100
equations

224
00:13:59,100 --> 00:14:03,420
uh let's say it's a precise uh this is a

225
00:14:03,420 --> 00:14:08,279
precise of uh discarding prefix pairs

226
00:14:08,279 --> 00:14:13,019
with tdtt for each box Xbox we know the

227
00:14:13,019 --> 00:14:16,500
we find that the output difference and

228
00:14:16,500 --> 00:14:19,620
the truncated input difference we check

229
00:14:19,620 --> 00:14:25,700
the tdtt if the if the uh

230
00:14:25,700 --> 00:14:28,220
differential paths is

231
00:14:28,220 --> 00:14:32,760
impeccable we refuse it if there's no

232
00:14:32,760 --> 00:14:35,279
information deduced we go to the next

233
00:14:35,279 --> 00:14:39,600
Xbox if there's more information deduced

234
00:14:39,600 --> 00:14:44,519
we can try to find a new big differences

235
00:14:44,519 --> 00:14:49,339
use CP kernel equations and beat

236
00:14:49,339 --> 00:14:53,899
relationships bit relations

237
00:14:54,060 --> 00:14:58,260
um as we can see from our experiments we

238
00:14:58,260 --> 00:14:59,579
can uh

239
00:14:59,579 --> 00:15:03,540
filter most of the prefix pairs applying

240
00:15:03,540 --> 00:15:08,420
the difference phase but the problem is

241
00:15:08,420 --> 00:15:13,139
the filtering rate is not satisfying we

242
00:15:13,139 --> 00:15:16,800
want to keep the filtering rate as low

243
00:15:16,800 --> 00:15:19,880
as possible so we

244
00:15:19,880 --> 00:15:23,100
developed another phase called the value

245
00:15:23,100 --> 00:15:26,579
phase in the value phase we will also

246
00:15:26,579 --> 00:15:29,459
look at a table called the facts the

247
00:15:29,459 --> 00:15:33,360
value distribution table in this case we

248
00:15:33,360 --> 00:15:38,160
assume that the tiger knows a truncated

249
00:15:38,160 --> 00:15:40,699
input difference and output difference

250
00:15:40,699 --> 00:15:48,260
in in some cases the attacker can find a

251
00:15:48,260 --> 00:15:52,639
the input uh

252
00:15:53,820 --> 00:15:59,480
the uh the input values over some bit

253
00:15:59,480 --> 00:16:03,120
positions are fixed we will also give an

254
00:16:03,120 --> 00:16:07,800
example let's assume uh the truncated

255
00:16:07,800 --> 00:16:10,560
input differences with less form and the

256
00:16:10,560 --> 00:16:14,040
output difference is one uh if you look

257
00:16:14,040 --> 00:16:17,220
at the values it will be in less form

258
00:16:17,220 --> 00:16:20,760
and we will know that the third input

259
00:16:20,760 --> 00:16:24,480
bit should be zero

260
00:16:24,480 --> 00:16:27,600
uh what we have now we have the chaining

261
00:16:27,600 --> 00:16:34,620
values we also have a bit values of of B

262
00:16:34,620 --> 00:16:40,620
0 and B 0 Prime from uh FV DT

263
00:16:40,620 --> 00:16:44,160
um in this case we can deduce some more

264
00:16:44,160 --> 00:16:46,980
bit values of the states

265
00:16:46,980 --> 00:16:51,680
and we have now we have the uh

266
00:16:51,680 --> 00:16:57,480
bit values we can deduce some uh it is

267
00:16:57,480 --> 00:17:01,040
possible to deduce more input

268
00:17:01,040 --> 00:17:04,919
differences in some bit conditions when

269
00:17:04,919 --> 00:17:08,459
we have a new uh input differences we

270
00:17:08,459 --> 00:17:11,939
can start the difference phase again to

271
00:17:11,939 --> 00:17:16,140
filter the prefix pairs

272
00:17:16,140 --> 00:17:19,160
so let's say it's a value phase of the

273
00:17:19,160 --> 00:17:22,079
video sensible algorithm

274
00:17:22,079 --> 00:17:26,819
uh if it returns a zero it means no uh

275
00:17:26,819 --> 00:17:29,580
new B differents are deduced we can

276
00:17:29,580 --> 00:17:33,240
accept the pair otherwise if it returns

277
00:17:33,240 --> 00:17:38,039
one we can say we can say uh new uh bit

278
00:17:38,039 --> 00:17:41,100
differences are the deals

279
00:17:41,100 --> 00:17:44,280
and this is the whole precise of deduce

280
00:17:44,280 --> 00:17:49,200
and save algorithm uh the the attacker

281
00:17:49,200 --> 00:17:50,720
first

282
00:17:50,720 --> 00:17:53,299
the the

283
00:17:53,299 --> 00:17:58,020
difference phase if it returns a zero it

284
00:17:58,020 --> 00:18:02,640
he can just discard the prefix pair if

285
00:18:02,640 --> 00:18:06,419
it returns zero we can go to the value

286
00:18:06,419 --> 00:18:11,100
phase uh to the new if to deduce a new

287
00:18:11,100 --> 00:18:14,940
bit differences if we can find the new

288
00:18:14,940 --> 00:18:18,000
Big differences we can we go back to the

289
00:18:18,000 --> 00:18:21,200
difference phase otherwise we accept the

290
00:18:21,200 --> 00:18:23,160
prefix pair

291
00:18:23,160 --> 00:18:25,440
and then

292
00:18:25,440 --> 00:18:27,660
now

293
00:18:27,660 --> 00:18:32,039
one minute yeah we have um uh we we can

294
00:18:32,039 --> 00:18:37,140
have uh more we filtered some pairs so

295
00:18:37,140 --> 00:18:41,340
we could we solve the remaining uh uh

296
00:18:41,340 --> 00:18:43,740
non-linear problem with a set solver

297
00:18:43,740 --> 00:18:46,380
called the crypto mini set

298
00:18:46,380 --> 00:18:48,179
uh

299
00:18:48,179 --> 00:18:51,919
in the third stage we follow the

300
00:18:51,919 --> 00:18:56,400
chiangle's work and search the the find

301
00:18:56,400 --> 00:18:58,940
subspacing soft seriously

302
00:18:58,940 --> 00:19:04,559
uh we will see we use experiments to uh

303
00:19:04,559 --> 00:19:07,860
to to uh to see the

304
00:19:07,860 --> 00:19:12,120
to verify our results and our filter

305
00:19:12,120 --> 00:19:15,840
read is very low and our algorithm

306
00:19:15,840 --> 00:19:19,620
outperforms the set solver with a larger

307
00:19:19,620 --> 00:19:23,520
Factor we also Define semi-free

308
00:19:23,520 --> 00:19:27,000
um bit internal Collision type where we

309
00:19:27,000 --> 00:19:31,260
assume the tiger can have more ability

310
00:19:31,260 --> 00:19:33,500
of modifying the

311
00:19:33,500 --> 00:19:37,799
unbeat changing value and we we also see

312
00:19:37,799 --> 00:19:42,179
from our complexity analysis is also

313
00:19:42,179 --> 00:19:45,720
from experiments and the time complexity

314
00:19:45,720 --> 00:19:50,520
is 2 to the power of 16 and the memory

315
00:19:50,520 --> 00:19:54,360
and data are both approximately to do

316
00:19:54,360 --> 00:19:57,299
the power of 146.

317
00:19:57,299 --> 00:20:00,200
this is the best

318
00:20:00,200 --> 00:20:03,419
collision we could we could find let's

319
00:20:03,419 --> 00:20:06,360
say the semi-free 4-bit internal

320
00:20:06,360 --> 00:20:09,539
Collision message and this is the hash

321
00:20:09,539 --> 00:20:14,760
value it means the tiger can modify for

322
00:20:14,760 --> 00:20:19,280
extra bit over the input

323
00:20:19,280 --> 00:20:21,120
input space

324
00:20:21,120 --> 00:20:23,580
uh thank you for your attention this is

325
00:20:23,580 --> 00:20:26,960
uh our talk thank you

326
00:20:28,220 --> 00:20:31,520
one quick question

327
00:20:32,039 --> 00:20:34,799
yes please

328
00:20:34,799 --> 00:20:37,740
you'll be in Kobe

329
00:20:37,740 --> 00:20:40,020
uh sorry

330
00:20:40,020 --> 00:20:43,700
can you hear me okay okay

331
00:20:43,799 --> 00:20:46,320
there is a question from Kobe okay okay

332
00:20:46,320 --> 00:20:48,780
yeah

333
00:20:48,780 --> 00:20:53,220
so I thank you for presentation so

334
00:20:53,220 --> 00:20:56,340
uh so in your attack there are several

335
00:20:56,340 --> 00:21:00,299
phrases the first phase is to find Matt

336
00:21:00,299 --> 00:21:04,980
uh the first block block generation so

337
00:21:04,980 --> 00:21:08,460
for this phase you use a fixed

338
00:21:08,460 --> 00:21:11,039
differential in the last maybe three

339
00:21:11,039 --> 00:21:13,020
rounds and then you deduce the

340
00:21:13,020 --> 00:21:16,020
conditions on the difference of the

341
00:21:16,020 --> 00:21:18,720
capacity so do you think the number of

342
00:21:18,720 --> 00:21:21,780
the conditions on the capacity part will

343
00:21:21,780 --> 00:21:25,260
influence the attack for example now you

344
00:21:25,260 --> 00:21:27,059
choose this differential for the last

345
00:21:27,059 --> 00:21:29,760
three runs if you use a better rounds

346
00:21:29,760 --> 00:21:32,520
and then you get get fewer conditions on

347
00:21:32,520 --> 00:21:34,380
the capacity part where the time

348
00:21:34,380 --> 00:21:36,679
complexity of the attack

349
00:21:36,679 --> 00:21:40,080
improved or can you find some trade-offs

350
00:21:40,080 --> 00:21:44,659
I mean we can slightly increase uh

351
00:21:44,659 --> 00:21:47,100
decreasing the property probability of

352
00:21:47,100 --> 00:21:50,840
the last three runs and uh

353
00:21:50,840 --> 00:21:53,820
reducing the conditions in on the

354
00:21:53,820 --> 00:21:55,980
capacity part is it possible have you

355
00:21:55,980 --> 00:21:58,200
considered this problem

356
00:21:58,200 --> 00:22:02,039
uh yes this is a good problem a good

357
00:22:02,039 --> 00:22:04,559
problem and

358
00:22:04,559 --> 00:22:09,960
um we we try this some different uh

359
00:22:09,960 --> 00:22:11,820
choices of the differential

360
00:22:11,820 --> 00:22:15,299
characteristic and we we choose the less

361
00:22:15,299 --> 00:22:18,000
characteristic because we want to keep

362
00:22:18,000 --> 00:22:23,760
the complexity as low as possible and we

363
00:22:23,760 --> 00:22:27,659
we find we see from the experiments that

364
00:22:27,659 --> 00:22:31,919
the complexity is mainly determined by

365
00:22:31,919 --> 00:22:34,679
the second stage

366
00:22:34,679 --> 00:22:37,740
um I think it's a good problem to work

367
00:22:37,740 --> 00:22:43,440
with if you want to balance the uh the

368
00:22:43,440 --> 00:22:45,780
three different stations

369
00:22:45,780 --> 00:22:49,020
um I mean the complexity in the three

370
00:22:49,020 --> 00:22:52,860
stages and I think uh

371
00:22:52,860 --> 00:22:56,460
uh but we uh

372
00:22:56,460 --> 00:23:00,740
uh we think uh it will affect the

373
00:23:00,740 --> 00:23:03,080
complexity yes

374
00:23:03,080 --> 00:23:06,179
thank you very much

375
00:23:06,179 --> 00:23:09,659
okay thanks the speaker again let's move

376
00:23:09,659 --> 00:23:13,320
on to the next talk okay I have one

377
00:23:13,320 --> 00:23:14,520
question

378
00:23:14,520 --> 00:23:18,299
uh but but we are running over time

379
00:23:18,299 --> 00:23:22,820
perhaps you can okay okay

380
00:23:22,820 --> 00:23:26,580
will be happy to answer the questions

381
00:23:26,580 --> 00:23:28,500
yeah I would

382
00:23:28,500 --> 00:23:31,020
okay thanks

383
00:23:31,020 --> 00:23:33,900
let's move on to the next one

384
00:23:33,900 --> 00:23:36,780
uh the next talk is about funding

385
00:23:36,780 --> 00:23:40,260
collisions for round reduced Romulus

386
00:23:40,260 --> 00:23:41,340
Edge

387
00:23:41,340 --> 00:23:45,020
the authors are Marcel Nadler

388
00:23:45,020 --> 00:23:51,980
filex Pula Maria Edge Center and uh

389
00:23:51,980 --> 00:23:56,720
marker will give the talk welcome

390
00:24:04,640 --> 00:24:06,780
uh thank you thank you for the

391
00:24:06,780 --> 00:24:08,039
introduction

392
00:24:08,039 --> 00:24:10,080
um so today we're talking about Romulus

393
00:24:10,080 --> 00:24:12,900
age and finding some collisions for that

394
00:24:12,900 --> 00:24:15,419
um so why are we talking about Romulus

395
00:24:15,419 --> 00:24:16,440
anyway

396
00:24:16,440 --> 00:24:18,179
um so the main motivation is that it was

397
00:24:18,179 --> 00:24:20,580
uh so it is an authenticated encryption

398
00:24:20,580 --> 00:24:22,559
scheme plus a hash function that was

399
00:24:22,559 --> 00:24:25,799
designed by Google and

400
00:24:25,799 --> 00:24:27,419
the

401
00:24:27,419 --> 00:24:29,700
the hash function Romulus H was

402
00:24:29,700 --> 00:24:31,500
specifically designed for the nist

403
00:24:31,500 --> 00:24:34,140
lightweight cryptography competition and

404
00:24:34,140 --> 00:24:36,600
it then Advanced uh to the final round

405
00:24:36,600 --> 00:24:39,780
and with nine other finalists and we

406
00:24:39,780 --> 00:24:42,000
decided to have a look at uh while

407
00:24:42,000 --> 00:24:44,100
Romulus

408
00:24:44,100 --> 00:24:47,280
um so this whole Romulus family is based

409
00:24:47,280 --> 00:24:50,280
on the skinny block Cipher family so

410
00:24:50,280 --> 00:24:53,419
they use skinny with 128-bit blocks and

411
00:24:53,419 --> 00:24:58,080
380-bit I have 384-bit three keys and to

412
00:24:58,080 --> 00:24:59,940
increase the complexity to increase the

413
00:24:59,940 --> 00:25:01,799
performance they reduced the rounds from

414
00:25:01,799 --> 00:25:05,820
56 rounds to 46 rounds based on uh by

415
00:25:05,820 --> 00:25:08,520
because they are saying that the skinny

416
00:25:08,520 --> 00:25:10,200
block Cipher has an ample security

417
00:25:10,200 --> 00:25:12,000
margin anyway and then they can reduce

418
00:25:12,000 --> 00:25:14,100
the number of rounds

419
00:25:14,100 --> 00:25:15,720
so

420
00:25:15,720 --> 00:25:17,700
um with this block Cipher of course they

421
00:25:17,700 --> 00:25:20,400
want to build a hash function and the

422
00:25:20,400 --> 00:25:22,200
most straightforward way to do that is

423
00:25:22,200 --> 00:25:24,320
to use the miracle download

424
00:25:24,320 --> 00:25:27,059
construction and they also use a little

425
00:25:27,059 --> 00:25:29,039
twist the axle of two at the end to

426
00:25:29,039 --> 00:25:31,440
prevent length extension attacks

427
00:25:31,440 --> 00:25:34,860
um this is the mdp mode of operation but

428
00:25:34,860 --> 00:25:37,200
the main problem that you have is that

429
00:25:37,200 --> 00:25:39,480
you of course want the 256-bit hash

430
00:25:39,480 --> 00:25:41,940
functions so you have 128 bits of

431
00:25:41,940 --> 00:25:45,179
security and we only have 128 bit blocks

432
00:25:45,179 --> 00:25:47,880
so they use this

433
00:25:47,880 --> 00:25:50,159
um double block length construction by

434
00:25:50,159 --> 00:25:52,620
hirosa and you can see the image here on

435
00:25:52,620 --> 00:25:55,260
the right so essentially what you have

436
00:25:55,260 --> 00:25:58,220
is two nearly identical block Cipher

437
00:25:58,220 --> 00:26:01,740
cars with a single bit flip at one of

438
00:26:01,740 --> 00:26:03,299
them

439
00:26:03,299 --> 00:26:07,140
um and you can also see that the message

440
00:26:07,140 --> 00:26:10,200
is encoded into the second and third

441
00:26:10,200 --> 00:26:13,559
block of the twinkie and this the right

442
00:26:13,559 --> 00:26:16,260
half of the chaining value is encoded

443
00:26:16,260 --> 00:26:19,500
into the first block of the Tweaky

444
00:26:19,500 --> 00:26:21,720
and there has been some previous

445
00:26:21,720 --> 00:26:23,340
analysis

446
00:26:23,340 --> 00:26:25,620
um it was a free start Collision for a

447
00:26:25,620 --> 00:26:29,279
23 round rounds by Donald and 2 to the

448
00:26:29,279 --> 00:26:33,179
124 time and memory uh this is a bit in

449
00:26:33,179 --> 00:26:34,860
contrast to our work where we are trying

450
00:26:34,860 --> 00:26:37,200
to focus on practical attacks that we

451
00:26:37,200 --> 00:26:39,500
can actually execute on today's computer

452
00:26:39,500 --> 00:26:43,440
and we are also looking for collisions

453
00:26:43,440 --> 00:26:45,419
for the hash function not just the

454
00:26:45,419 --> 00:26:47,360
compression function

455
00:26:47,360 --> 00:26:50,279
so what are our goals

456
00:26:50,279 --> 00:26:52,140
um so first we want to start with

457
00:26:52,140 --> 00:26:53,580
finding good differential

458
00:26:53,580 --> 00:26:55,559
characteristics that have a zero

459
00:26:55,559 --> 00:26:57,299
difference at the end because with a

460
00:26:57,299 --> 00:26:59,880
zero difference we also have a collision

461
00:26:59,880 --> 00:27:00,480
um

462
00:27:00,480 --> 00:27:02,820
and then our first step so once we have

463
00:27:02,820 --> 00:27:04,919
a good differential characteristic we

464
00:27:04,919 --> 00:27:06,600
want to find a semi-freeze out

465
00:27:06,600 --> 00:27:08,640
collisions and assembly free start

466
00:27:08,640 --> 00:27:10,380
Collision is

467
00:27:10,380 --> 00:27:12,480
um essentially a collision on the

468
00:27:12,480 --> 00:27:14,760
compression function but with a constant

469
00:27:14,760 --> 00:27:16,380
chaining value h

470
00:27:16,380 --> 00:27:18,720
so we have two different messages M and

471
00:27:18,720 --> 00:27:21,120
M Prime and the H States constant and

472
00:27:21,120 --> 00:27:23,400
afterwards there will be a collision and

473
00:27:23,400 --> 00:27:24,900
also if you

474
00:27:24,900 --> 00:27:25,559
um

475
00:27:25,559 --> 00:27:27,840
at the padding afterwards

476
00:27:27,840 --> 00:27:30,539
um you can then have a collision and

477
00:27:30,539 --> 00:27:32,039
then when we have a semi-free stock

478
00:27:32,039 --> 00:27:34,380
Collision we want to use the same

479
00:27:34,380 --> 00:27:37,559
differential characteristics but find a

480
00:27:37,559 --> 00:27:40,200
head Collision for the hash function so

481
00:27:40,200 --> 00:27:43,200
there we choose a prefix and pre uh

482
00:27:43,200 --> 00:27:45,900
generate the chaining value based on the

483
00:27:45,900 --> 00:27:47,820
compression function and then try to

484
00:27:47,820 --> 00:27:49,799
connect this prefix with the

485
00:27:49,799 --> 00:27:53,059
differential characteristic

486
00:27:53,100 --> 00:27:56,159
um so of course what did we achieve so

487
00:27:56,159 --> 00:27:58,799
we found a semifreeze start collisions

488
00:27:58,799 --> 00:28:01,860
up to 14 rounds and collisions for the

489
00:28:01,860 --> 00:28:04,679
hash functions up to 10 rounds and Below

490
00:28:04,679 --> 00:28:06,539
you can also see some bounds on the

491
00:28:06,539 --> 00:28:08,640
number of active s-boxes that we have

492
00:28:08,640 --> 00:28:10,140
seen in different settings I will

493
00:28:10,140 --> 00:28:12,179
explain the

494
00:28:12,179 --> 00:28:12,779
um

495
00:28:12,779 --> 00:28:15,539
different settings in a minute but the

496
00:28:15,539 --> 00:28:18,059
most are the most the setting that you

497
00:28:18,059 --> 00:28:19,380
can actually use for a bound would be

498
00:28:19,380 --> 00:28:21,600
the joint setting where the fewest as

499
00:28:21,600 --> 00:28:23,700
boxes are active

500
00:28:23,700 --> 00:28:25,679
um so how can you

501
00:28:25,679 --> 00:28:29,400
analyze this block Cipher

502
00:28:29,400 --> 00:28:32,220
so you're looking at we are always

503
00:28:32,220 --> 00:28:35,340
looking at four skinny block Cipher

504
00:28:35,340 --> 00:28:37,799
calls in parallel so we have two skinny

505
00:28:37,799 --> 00:28:39,059
black server cores per compression

506
00:28:39,059 --> 00:28:40,799
function and we have two compression

507
00:28:40,799 --> 00:28:43,320
functions and the most straightforward

508
00:28:43,320 --> 00:28:46,080
way to do that is to look at the two

509
00:28:46,080 --> 00:28:48,539
skinny cars completely independently and

510
00:28:48,539 --> 00:28:50,220
essentially just double the number of

511
00:28:50,220 --> 00:28:53,880
active s boxes so you can think about it

512
00:28:53,880 --> 00:28:55,320
that way if you have the best

513
00:28:55,320 --> 00:28:57,059
characteristic

514
00:28:57,059 --> 00:28:59,940
um between this as box and this s-box

515
00:28:59,940 --> 00:29:01,919
you can also just use the same

516
00:29:01,919 --> 00:29:03,900
characteristics for the lower skinny

517
00:29:03,900 --> 00:29:05,640
black Cipher cars

518
00:29:05,640 --> 00:29:08,279
um of course this is a bit not

519
00:29:08,279 --> 00:29:10,679
completely accurate because especially

520
00:29:10,679 --> 00:29:12,299
in the beginning you know that only a

521
00:29:12,299 --> 00:29:14,880
single bit was flipped between the two

522
00:29:14,880 --> 00:29:17,400
block Cipher cars therefore you can

523
00:29:17,400 --> 00:29:19,980
consider this connecting difference we

524
00:29:19,980 --> 00:29:22,440
call it Tau and with this kinetic

525
00:29:22,440 --> 00:29:24,539
difference you can

526
00:29:24,539 --> 00:29:27,360
makes your life a little easier

527
00:29:27,360 --> 00:29:29,580
um because you can for example if you

528
00:29:29,580 --> 00:29:31,020
know the kinetic difference is zero

529
00:29:31,020 --> 00:29:33,179
between two skinny black Cipher cars you

530
00:29:33,179 --> 00:29:35,279
only need to count an active as box one

531
00:29:35,279 --> 00:29:37,559
because the input value is the same so

532
00:29:37,559 --> 00:29:41,100
if the difference is the transition is

533
00:29:41,100 --> 00:29:42,480
satisfied and once can you call it's

534
00:29:42,480 --> 00:29:45,179
also satisfied in the other skinny call

535
00:29:45,179 --> 00:29:48,000
um and you can also

536
00:29:48,000 --> 00:29:50,399
um like say okay we want the connecting

537
00:29:50,399 --> 00:29:53,399
difference to be some fixed value say 63

538
00:29:53,399 --> 00:29:54,779
or whatever

539
00:29:54,779 --> 00:29:57,659
um but at some point you we we noticed

540
00:29:57,659 --> 00:29:59,820
that it doesn't really pay anymore to

541
00:29:59,820 --> 00:30:02,279
keep track of this connecting difference

542
00:30:02,279 --> 00:30:04,200
um it's good in the beginning but if you

543
00:30:04,200 --> 00:30:06,840
like fix this difference it will

544
00:30:06,840 --> 00:30:09,179
increase the complexity so then you will

545
00:30:09,179 --> 00:30:10,980
transition to an unknown connecting

546
00:30:10,980 --> 00:30:12,299
difference and essentially don't care

547
00:30:12,299 --> 00:30:14,940
about it anymore and then move to the

548
00:30:14,940 --> 00:30:18,679
independent thing as before

549
00:30:18,840 --> 00:30:19,500
um

550
00:30:19,500 --> 00:30:21,240
that drawback with this connecting

551
00:30:21,240 --> 00:30:22,799
difference is that the modeling does

552
00:30:22,799 --> 00:30:25,559
sometimes get quite complex so we also

553
00:30:25,559 --> 00:30:27,539
find a trade-off between the two and

554
00:30:27,539 --> 00:30:30,419
this is the equal only model where we

555
00:30:30,419 --> 00:30:33,299
only consider okay are the two

556
00:30:33,299 --> 00:30:36,299
uh values in the skinny block server car

557
00:30:36,299 --> 00:30:37,980
is completely equal so do they have a

558
00:30:37,980 --> 00:30:39,840
zero connecting difference or are they

559
00:30:39,840 --> 00:30:41,460
do they have an unknown difference which

560
00:30:41,460 --> 00:30:44,460
we denote with the question mark

561
00:30:44,460 --> 00:30:48,059
so with this we want to now explain our

562
00:30:48,059 --> 00:30:51,480
attack setup so here you can see on a

563
00:30:51,480 --> 00:30:53,059
high level view of what our

564
00:30:53,059 --> 00:30:55,860
characteristics might look like

565
00:30:55,860 --> 00:30:58,140
um so you can see okay in the beginning

566
00:30:58,140 --> 00:31:00,539
in the left and the right training value

567
00:31:00,539 --> 00:31:03,419
block we don't have any difference so we

568
00:31:03,419 --> 00:31:05,460
have a semi-freestar collision and no

569
00:31:05,460 --> 00:31:07,140
difference there

570
00:31:07,140 --> 00:31:07,919
um

571
00:31:07,919 --> 00:31:10,799
and we also have this uh one difference

572
00:31:10,799 --> 00:31:13,260
this is the due to the double block

573
00:31:13,260 --> 00:31:15,059
length construction that is actually

574
00:31:15,059 --> 00:31:18,120
onto one of the blocks and this

575
00:31:18,120 --> 00:31:20,039
connecting difference is diffused in the

576
00:31:20,039 --> 00:31:22,080
beginning three blocks and at some point

577
00:31:22,080 --> 00:31:25,380
we will move to an

578
00:31:25,380 --> 00:31:28,020
unknown difference because at the end

579
00:31:28,020 --> 00:31:29,580
the difference between the blocks

580
00:31:29,580 --> 00:31:32,039
doesn't care about us but we don't care

581
00:31:32,039 --> 00:31:33,480
about the difference between the blocks

582
00:31:33,480 --> 00:31:35,039
we don't care about the connecting

583
00:31:35,039 --> 00:31:37,740
difference but we do want the main

584
00:31:37,740 --> 00:31:39,360
difference the blue one in the picture

585
00:31:39,360 --> 00:31:42,720
to be zero as we can see here and

586
00:31:42,720 --> 00:31:44,700
responsible for the main difference is

587
00:31:44,700 --> 00:31:47,159
either two message blocks and we can

588
00:31:47,159 --> 00:31:49,380
then introduce some differences in the

589
00:31:49,380 --> 00:31:52,679
message blocks as you can see here and

590
00:31:52,679 --> 00:31:54,059
of course at the end we want these

591
00:31:54,059 --> 00:31:55,860
differences to cancel

592
00:31:55,860 --> 00:31:57,960
so with this setup

593
00:31:57,960 --> 00:32:00,120
um what neither an actual difference

594
00:32:00,120 --> 00:32:04,559
look like well we build an MLP model to

595
00:32:04,559 --> 00:32:07,559
find servers characteristics and this is

596
00:32:07,559 --> 00:32:09,600
one such characteristic in the joint

597
00:32:09,600 --> 00:32:11,700
model and

598
00:32:11,700 --> 00:32:13,440
you can see in the beginning we have

599
00:32:13,440 --> 00:32:16,320
this red connecting difference then this

600
00:32:16,320 --> 00:32:18,600
message addition

601
00:32:18,600 --> 00:32:19,380
um

602
00:32:19,380 --> 00:32:21,480
is responsible for introducing like this

603
00:32:21,480 --> 00:32:23,159
main difference

604
00:32:23,159 --> 00:32:25,320
and we have some

605
00:32:25,320 --> 00:32:27,419
transitions here and here you can for

606
00:32:27,419 --> 00:32:31,679
example see a cell with um

607
00:32:31,679 --> 00:32:33,659
with the connecting oops

608
00:32:33,659 --> 00:32:35,460
with the connecting difference active

609
00:32:35,460 --> 00:32:37,919
and the main difference active and in

610
00:32:37,919 --> 00:32:39,299
this cell

611
00:32:39,299 --> 00:32:41,159
and we only consider it to have a cost

612
00:32:41,159 --> 00:32:43,440
of one because we will see that the

613
00:32:43,440 --> 00:32:47,100
maximum differential probability of such

614
00:32:47,100 --> 00:32:47,880
a

615
00:32:47,880 --> 00:32:50,820
such a joint and transition is the same

616
00:32:50,820 --> 00:32:53,100
as the maximum differential probability

617
00:32:53,100 --> 00:32:56,340
of a normal DDD transition

618
00:32:56,340 --> 00:32:57,179
um

619
00:32:57,179 --> 00:32:59,039
and you can see that the map server

620
00:32:59,039 --> 00:33:03,299
tries to put the red axis on top of the

621
00:33:03,299 --> 00:33:06,360
blue blue squares because this is other

622
00:33:06,360 --> 00:33:08,760
cheaper options

623
00:33:08,760 --> 00:33:09,659
um

624
00:33:09,659 --> 00:33:12,899
and later on uh we you can also see that

625
00:33:12,899 --> 00:33:16,080
the connecting differences are more and

626
00:33:16,080 --> 00:33:17,640
more set to the question mark value

627
00:33:17,640 --> 00:33:19,620
because at some point it doesn't really

628
00:33:19,620 --> 00:33:22,260
pay to keep track of it anymore

629
00:33:22,260 --> 00:33:24,059
um so here down down here for example

630
00:33:24,059 --> 00:33:25,380
you have a

631
00:33:25,380 --> 00:33:27,419
a blue square has a difference in the

632
00:33:27,419 --> 00:33:29,220
main characteristic and an unknown

633
00:33:29,220 --> 00:33:30,360
difference in the connecting difference

634
00:33:30,360 --> 00:33:33,059
that this would cost you two s boxes

635
00:33:33,059 --> 00:33:34,980
essentially because you have two

636
00:33:34,980 --> 00:33:37,500
independent asplexes

637
00:33:37,500 --> 00:33:38,039
um

638
00:33:38,039 --> 00:33:40,620
so this is a nice uh cell voice

639
00:33:40,620 --> 00:33:43,559
characteristic but of course we still we

640
00:33:43,559 --> 00:33:46,440
do really need a bit wise characteristic

641
00:33:46,440 --> 00:33:49,320
um for our attacks to work so how do we

642
00:33:49,320 --> 00:33:51,539
find these well we take the cell voice

643
00:33:51,539 --> 00:33:53,519
characteristic as a starting point as is

644
00:33:53,519 --> 00:33:55,740
quite common in the literature and then

645
00:33:55,740 --> 00:33:58,320
we try to fill in the details

646
00:33:58,320 --> 00:34:00,779
um so we create a model of the CNF but

647
00:34:00,779 --> 00:34:02,820
the difference differential distribution

648
00:34:02,820 --> 00:34:05,159
table and we also Define some cutoff

649
00:34:05,159 --> 00:34:08,399
weight for essentially two purposes so

650
00:34:08,399 --> 00:34:11,639
we want to have the the T entries with

651
00:34:11,639 --> 00:34:13,918
the with the high values because there

652
00:34:13,918 --> 00:34:16,199
are they're easier to satisfy their mob

653
00:34:16,199 --> 00:34:18,659
possible values and if you only model

654
00:34:18,659 --> 00:34:21,780
the DDT above a certain threshold you

655
00:34:21,780 --> 00:34:23,399
have fewer interest that you need to

656
00:34:23,399 --> 00:34:25,379
model and the final

657
00:34:25,379 --> 00:34:27,780
uh model will be will contain fewer

658
00:34:27,780 --> 00:34:29,580
variables and conditions and be easier

659
00:34:29,580 --> 00:34:31,080
to solve

660
00:34:31,080 --> 00:34:33,540
um but of course we also have the case

661
00:34:33,540 --> 00:34:35,280
where we have the connecting difference

662
00:34:35,280 --> 00:34:37,379
and the main difference and if you think

663
00:34:37,379 --> 00:34:39,060
about it you have four variables there

664
00:34:39,060 --> 00:34:42,000
that you need to keep track of you have

665
00:34:42,000 --> 00:34:43,320
the main input difference the main

666
00:34:43,320 --> 00:34:45,780
output difference the connecting input

667
00:34:45,780 --> 00:34:47,099
difference and the connecting output

668
00:34:47,099 --> 00:34:49,440
difference and there we can Define this

669
00:34:49,440 --> 00:34:53,280
ddt4 which is essentially uh counts the

670
00:34:53,280 --> 00:34:55,020
number of solutions to the simultaneous

671
00:34:55,020 --> 00:34:58,440
transitions in both of these things and

672
00:34:58,440 --> 00:35:00,660
then we can model the CNF of this ddt4

673
00:35:00,660 --> 00:35:02,960
again with some cutoff weight

674
00:35:02,960 --> 00:35:05,640
which works quite fine for a low number

675
00:35:05,640 --> 00:35:09,420
of rounds but we see that uh especially

676
00:35:09,420 --> 00:35:11,220
if we if you have a lower cut of weight

677
00:35:11,220 --> 00:35:14,280
which we need later on this model gets

678
00:35:14,280 --> 00:35:16,079
very very expensive because there are so

679
00:35:16,079 --> 00:35:18,960
many Transitions and so many variables

680
00:35:18,960 --> 00:35:21,900
um so for our results with more and more

681
00:35:21,900 --> 00:35:24,920
rounds we switch to the equality setting

682
00:35:24,920 --> 00:35:27,300
and this is much cheaper because this

683
00:35:27,300 --> 00:35:29,280
connecting difference is either zero but

684
00:35:29,280 --> 00:35:31,320
we only need to model the DDT once or

685
00:35:31,320 --> 00:35:33,660
unknown but we also only need to modular

686
00:35:33,660 --> 00:35:35,940
DDT once but of course the cost in the

687
00:35:35,940 --> 00:35:39,079
final thing will be higher

688
00:35:39,720 --> 00:35:40,680
um

689
00:35:40,680 --> 00:35:42,240
so

690
00:35:42,240 --> 00:35:43,680
um here we can

691
00:35:43,680 --> 00:35:45,839
um with that we can then run this model

692
00:35:45,839 --> 00:35:47,220
and find some

693
00:35:47,220 --> 00:35:50,040
uh bitwise characteristics and here you

694
00:35:50,040 --> 00:35:52,140
can find see one example this is also an

695
00:35:52,140 --> 00:35:53,579
example that we will use for our

696
00:35:53,579 --> 00:35:55,920
Collision results later on

697
00:35:55,920 --> 00:35:57,420
um here we have a little bit of a

698
00:35:57,420 --> 00:36:00,060
different notation

699
00:36:00,060 --> 00:36:02,480
so you can see that we have this green

700
00:36:02,480 --> 00:36:05,160
cells with the green border these are

701
00:36:05,160 --> 00:36:06,900
the ones where we know the connecting

702
00:36:06,900 --> 00:36:09,720
difference is zero and then when the

703
00:36:09,720 --> 00:36:11,280
green border disappears we don't know

704
00:36:11,280 --> 00:36:15,200
the connecting difference anymore

705
00:36:15,300 --> 00:36:17,400
um and you can see also that a lot of

706
00:36:17,400 --> 00:36:20,339
the active s boxes are where there is a

707
00:36:20,339 --> 00:36:22,020
green border so these are easier to

708
00:36:22,020 --> 00:36:23,700
satisfy because we only need to satisfy

709
00:36:23,700 --> 00:36:25,640
them once

710
00:36:25,640 --> 00:36:29,940
and if we now take this uh connecting

711
00:36:29,940 --> 00:36:32,579
this bit was characteristic we want to

712
00:36:32,579 --> 00:36:34,380
find an assignment for it so we can have

713
00:36:34,380 --> 00:36:37,140
a semi-freeze start Collision

714
00:36:37,140 --> 00:36:39,960
um so if we find an assignment for a

715
00:36:39,960 --> 00:36:41,240
value m

716
00:36:41,240 --> 00:36:44,280
anti-value H we then have a family

717
00:36:44,280 --> 00:36:46,920
freestyle Collision which is which will

718
00:36:46,920 --> 00:36:49,920
or will already be our first result

719
00:36:49,920 --> 00:36:51,900
um and how do we find that well we use

720
00:36:51,900 --> 00:36:52,740
the

721
00:36:52,740 --> 00:36:56,760
uh C3 uh smt solver and we start by

722
00:36:56,760 --> 00:36:58,740
encoding all the linear layers of all

723
00:36:58,740 --> 00:37:01,440
the skinny cards I'm using the Excel

724
00:37:01,440 --> 00:37:03,480
constraints of this solver so this is

725
00:37:03,480 --> 00:37:05,280
actually quite convenient disorder just

726
00:37:05,280 --> 00:37:07,380
like crypto mini set has built-in extra

727
00:37:07,380 --> 00:37:11,900
constraints and then we want to

728
00:37:11,900 --> 00:37:15,720
encode the also the s-box

729
00:37:15,720 --> 00:37:17,040
um

730
00:37:17,040 --> 00:37:18,420
so

731
00:37:18,420 --> 00:37:22,560
what we do is we are not modeling a full

732
00:37:22,560 --> 00:37:24,060
compression function up there and the

733
00:37:24,060 --> 00:37:25,859
full compression function down there and

734
00:37:25,859 --> 00:37:27,540
then constraining the difference but

735
00:37:27,540 --> 00:37:29,220
what you can actually do is only model

736
00:37:29,220 --> 00:37:32,640
one compression function and then if you

737
00:37:32,640 --> 00:37:34,500
constrain the S boxes in the right way

738
00:37:34,500 --> 00:37:36,180
such that the

739
00:37:36,180 --> 00:37:37,980
transition is met

740
00:37:37,980 --> 00:37:40,500
um you only need to do it once and so

741
00:37:40,500 --> 00:37:41,940
essentially what we do is we constrain

742
00:37:41,940 --> 00:37:44,160
each s-box to the solution set for the

743
00:37:44,160 --> 00:37:46,140
differential distribute differential

744
00:37:46,140 --> 00:37:48,480
transition that we need

745
00:37:48,480 --> 00:37:50,880
um and if the all the values are within

746
00:37:50,880 --> 00:37:53,339
all the solution sets all the

747
00:37:53,339 --> 00:37:54,900
differential transitions will be mapped

748
00:37:54,900 --> 00:37:57,480
and then we will have our Collision

749
00:37:57,480 --> 00:37:59,160
semifreeze start collision at the end

750
00:37:59,160 --> 00:38:01,140
and we also have some other

751
00:38:01,140 --> 00:38:02,579
optimizations that you can see in the

752
00:38:02,579 --> 00:38:04,680
paper to reduce the number of variables

753
00:38:04,680 --> 00:38:05,520
and

754
00:38:05,520 --> 00:38:07,859
constraints

755
00:38:07,859 --> 00:38:10,140
uh so with that we can run this model

756
00:38:10,140 --> 00:38:12,480
and generate a lot of characteristics

757
00:38:12,480 --> 00:38:16,140
but then we noticed that okay most of

758
00:38:16,140 --> 00:38:17,579
the characteristics that we found are

759
00:38:17,579 --> 00:38:19,500
actually impossible so there is no valid

760
00:38:19,500 --> 00:38:22,859
assignment and this is due to uh first

761
00:38:22,859 --> 00:38:24,599
of all within this can you block Cipher

762
00:38:24,599 --> 00:38:26,760
we have relatively slow diffusion and

763
00:38:26,760 --> 00:38:28,740
The Tweak is also only added to two of

764
00:38:28,740 --> 00:38:31,380
the four rows so we have limited degrees

765
00:38:31,380 --> 00:38:33,660
of freedom in each round

766
00:38:33,660 --> 00:38:35,460
um and our simple solution was to

767
00:38:35,460 --> 00:38:37,140
generate a lot of characteristics and

768
00:38:37,140 --> 00:38:39,599
then verify them generate another one um

769
00:38:39,599 --> 00:38:42,300
this works quite well so for 14 rounds

770
00:38:42,300 --> 00:38:45,060
we can generate a characteristics about

771
00:38:45,060 --> 00:38:48,119
uh generating a characteristic takes

772
00:38:48,119 --> 00:38:50,280
about a second and then verifying it

773
00:38:50,280 --> 00:38:52,859
takes about 30 seconds and of these 30

774
00:38:52,859 --> 00:38:54,599
seconds actually the most of the time is

775
00:38:54,599 --> 00:38:56,820
spent building the smt model so building

776
00:38:56,820 --> 00:38:59,339
all the cnfs for the S boxes and then it

777
00:38:59,339 --> 00:39:01,079
takes about one to two seconds to find

778
00:39:01,079 --> 00:39:03,660
an assignment

779
00:39:03,660 --> 00:39:06,060
um and if we do that for some time after

780
00:39:06,060 --> 00:39:09,480
32 hours on running it on one CPU we

781
00:39:09,480 --> 00:39:12,060
find a valid characteristic with a

782
00:39:12,060 --> 00:39:14,880
probability 2 to the minus 420 and this

783
00:39:14,880 --> 00:39:18,000
is satisfiable using our 512 degrees of

784
00:39:18,000 --> 00:39:20,579
freedom so we have 256 bits of freedom

785
00:39:20,579 --> 00:39:24,119
from the message and 256 degrees of

786
00:39:24,119 --> 00:39:27,380
freedom from the chaining value

787
00:39:27,720 --> 00:39:29,880
um of course if you have a family

788
00:39:29,880 --> 00:39:31,380
freestyle Collision you want to extend

789
00:39:31,380 --> 00:39:34,260
that to a hash collision and the thing I

790
00:39:34,260 --> 00:39:36,000
explained earlier we randomly choose an

791
00:39:36,000 --> 00:39:38,339
initial block which gives us a random

792
00:39:38,339 --> 00:39:40,320
chaining value and then we want to see

793
00:39:40,320 --> 00:39:42,300
does this chaining value work with the

794
00:39:42,300 --> 00:39:45,240
rest of the characteristic

795
00:39:45,240 --> 00:39:47,820
um one important observation that we

796
00:39:47,820 --> 00:39:49,859
made there is that most of the chaining

797
00:39:49,859 --> 00:39:51,480
values actually don't work at all with

798
00:39:51,480 --> 00:39:52,740
the

799
00:39:52,740 --> 00:39:53,280
um

800
00:39:53,280 --> 00:39:57,000
with a given characteristic and we can

801
00:39:57,000 --> 00:40:00,540
in an efficient way in an efficient way

802
00:40:00,540 --> 00:40:03,660
find which ones that are and which ones

803
00:40:03,660 --> 00:40:04,680
are not

804
00:40:04,680 --> 00:40:05,940
um so here you can see the

805
00:40:05,940 --> 00:40:07,920
characteristic that we have and if you

806
00:40:07,920 --> 00:40:10,560
have a fixed value HL

807
00:40:10,560 --> 00:40:12,180
um you can see that

808
00:40:12,180 --> 00:40:14,339
if you have this blue cell this

809
00:40:14,339 --> 00:40:16,980
Bluetooth cell is responsible for the

810
00:40:16,980 --> 00:40:19,140
value here the value here and then it

811
00:40:19,140 --> 00:40:20,579
will be distributed through the linear

812
00:40:20,579 --> 00:40:23,400
layer to the three Active blue cells

813
00:40:23,400 --> 00:40:25,500
which are then responsible for three as

814
00:40:25,500 --> 00:40:27,300
box transitions so essentially what

815
00:40:27,300 --> 00:40:30,240
you're trying to do is verify three as

816
00:40:30,240 --> 00:40:33,359
box transitions with only a single uh

817
00:40:33,359 --> 00:40:36,599
byte in the Wiki and then you can

818
00:40:36,599 --> 00:40:38,579
that you can actually filter quite

819
00:40:38,579 --> 00:40:40,800
efficiently in C plus so you only need

820
00:40:40,800 --> 00:40:43,500
to run the smt solver on a fraction of 2

821
00:40:43,500 --> 00:40:46,140
to the minus 11 uh chaining values that

822
00:40:46,140 --> 00:40:48,780
you get and with that you can find a 10

823
00:40:48,780 --> 00:40:51,359
round Collision in about one hour and an

824
00:40:51,359 --> 00:40:53,820
88 course based on the characteristics

825
00:40:53,820 --> 00:40:55,380
that you have seen earlier the bitwise

826
00:40:55,380 --> 00:40:56,099
one

827
00:40:56,099 --> 00:40:59,520
and to conclude uh we have built a

828
00:40:59,520 --> 00:41:02,220
differential model for Romulus age that

829
00:41:02,220 --> 00:41:04,440
can also be applied to other hash

830
00:41:04,440 --> 00:41:06,720
functions based on this Heroes DBL

831
00:41:06,720 --> 00:41:09,540
construction and we use the idea of

832
00:41:09,540 --> 00:41:11,880
joint differential characteristics with

833
00:41:11,880 --> 00:41:13,380
that we can find the collisions for 10

834
00:41:13,380 --> 00:41:15,000
rounds and send me freestyle positions

835
00:41:15,000 --> 00:41:17,460
for 14 rounds you can also find our code

836
00:41:17,460 --> 00:41:21,119
online at this GitHub repository thank

837
00:41:21,119 --> 00:41:23,540
you very much

838
00:41:25,140 --> 00:41:27,180
one quick question

839
00:41:27,180 --> 00:41:30,919
Maybe in Kobe

840
00:41:40,079 --> 00:41:42,599
no questions from Kobe

841
00:41:42,599 --> 00:41:43,740
okay

842
00:41:43,740 --> 00:41:46,200
to send the speech

843
00:41:46,200 --> 00:41:48,540
we are moving to the last

844
00:41:48,540 --> 00:41:50,880
talk of this session

845
00:41:50,880 --> 00:41:53,520
this talk is about the improved midi in

846
00:41:53,520 --> 00:41:56,339
the middle crypto analysis on streambox

847
00:41:56,339 --> 00:41:59,599
the authors are

848
00:41:59,599 --> 00:42:02,599
vision

849
00:42:04,040 --> 00:42:07,680
and will give the talk

850
00:42:07,680 --> 00:42:10,160
welcome

851
00:42:11,160 --> 00:42:13,520
back

852
00:42:20,520 --> 00:42:23,520
listening

853
00:42:39,720 --> 00:42:42,850
[Music]

854
00:43:02,520 --> 00:43:05,520
oh

855
00:43:06,060 --> 00:43:07,720
thank you foreign

856
00:43:07,720 --> 00:43:10,819
[Music]

857
00:43:15,020 --> 00:43:18,200
with you

858
00:43:43,099 --> 00:43:46,380
I'm sorry

859
00:43:46,380 --> 00:43:48,180
um I will first let's introduce some

860
00:43:48,180 --> 00:43:50,779
backgrounds

861
00:43:50,839 --> 00:43:54,119
function Maps a message of options into

862
00:43:54,119 --> 00:43:57,300
a short fixed less than just it has

863
00:43:57,300 --> 00:43:59,940
three security requirements three major

864
00:43:59,940 --> 00:44:01,740
resistance second employee major

865
00:44:01,740 --> 00:44:04,260
relations and Coalition relations

866
00:44:04,260 --> 00:44:07,140
the construction of full hash function

867
00:44:07,140 --> 00:44:09,319
consists of two

868
00:44:09,319 --> 00:44:11,760
ingredients conversion function and

869
00:44:11,760 --> 00:44:14,940
domain extender and there are three ways

870
00:44:14,940 --> 00:44:17,280
to construct the compression function

871
00:44:17,280 --> 00:44:20,400
and the first one based on block ciphers

872
00:44:20,400 --> 00:44:23,960
there are 12 secure pgb modes such as

873
00:44:23,960 --> 00:44:28,020
MDM mode and memory mode and MP mode the

874
00:44:28,020 --> 00:44:30,599
second one directly constructs and the

875
00:44:30,599 --> 00:44:33,240
third one based on hard mathematical

876
00:44:33,240 --> 00:44:35,720
problems

877
00:44:35,720 --> 00:44:39,180
so the two main construction of the main

878
00:44:39,180 --> 00:44:42,540
extender are MD structure and a sponge

879
00:44:42,540 --> 00:44:44,400
structure

880
00:44:44,400 --> 00:44:47,339
between the Middle attack is first

881
00:44:47,339 --> 00:44:50,700
introduced by deeper and humor in 1977.

882
00:44:50,700 --> 00:44:53,400
assumes there is an inscription like the

883
00:44:53,400 --> 00:44:54,800
pictures used

884
00:44:54,800 --> 00:44:57,420
we can know that's the correct case of

885
00:44:57,420 --> 00:45:02,339
q1 and T2 must-65 and that's fq1p equals

886
00:45:02,339 --> 00:45:04,859
inverse gk2c

887
00:45:04,859 --> 00:45:07,260
therefore we can compute for Water by

888
00:45:07,260 --> 00:45:10,800
giving q1 and the store is in this L1

889
00:45:10,800 --> 00:45:12,599
indexed by V

890
00:45:12,599 --> 00:45:15,839
and and we can also compute backwards by

891
00:45:15,839 --> 00:45:19,500
giving key to and store it in a table in

892
00:45:19,500 --> 00:45:22,200
L2 index by B

893
00:45:22,200 --> 00:45:24,960
compare these two lists we can reduce

894
00:45:24,960 --> 00:45:27,859
the key space

895
00:45:28,020 --> 00:45:31,500
in 2008 sataki an app key introduced the

896
00:45:31,500 --> 00:45:32,819
meeting in the middle

897
00:45:32,819 --> 00:45:36,240
three major attacks for their meeting

898
00:45:36,240 --> 00:45:38,400
the middle Prem major attack is applied

899
00:45:38,400 --> 00:45:41,700
to many hash functions such as md4 md5

900
00:45:41,700 --> 00:45:45,480
and cr1 Shot 2 and so on

901
00:45:45,480 --> 00:45:48,200
meeting in the middle Prem major attack

902
00:45:48,200 --> 00:45:50,940
like the first fixtures

903
00:45:50,940 --> 00:45:55,980
M A and MB is a neutral word and Ma only

904
00:45:55,980 --> 00:45:59,220
used in the forward chart and MB only

905
00:45:59,220 --> 00:46:01,560
used in the backward chart

906
00:46:01,560 --> 00:46:01,859
[Music]

907
00:46:01,859 --> 00:46:02,900
um

908
00:46:02,900 --> 00:46:06,480
after having the news of ml exclude Ma

909
00:46:06,480 --> 00:46:09,780
and MD then we can Traverse the view of

910
00:46:09,780 --> 00:46:12,720
ma and commute forward and store it in

911
00:46:12,720 --> 00:46:13,560
list

912
00:46:13,560 --> 00:46:16,740
and we Traverse the view of MB and

913
00:46:16,740 --> 00:46:19,500
compute backward and the story engineer

914
00:46:19,500 --> 00:46:22,500
list and compare this to list if you

915
00:46:22,500 --> 00:46:25,020
found match then we can fund the prayer

916
00:46:25,020 --> 00:46:26,040
image

917
00:46:26,040 --> 00:46:28,440
the second one shows some improved

918
00:46:28,440 --> 00:46:31,020
technicals include space and cards

919
00:46:31,020 --> 00:46:33,359
initial structure and the function match

920
00:46:33,359 --> 00:46:36,420
the time complexity is about 2 to n

921
00:46:36,420 --> 00:46:40,859
minus minimize D1 D2 and M

922
00:46:40,859 --> 00:46:44,599
as a eurocraft 2021 or Excel

923
00:46:44,599 --> 00:46:48,780
Builder Builder MIP model of meeting the

924
00:46:48,780 --> 00:46:51,000
middle grade major attack in the model

925
00:46:51,000 --> 00:46:53,220
this set to neutral words from posing

926
00:46:53,220 --> 00:46:55,500
production and 50 states for both charts

927
00:46:55,500 --> 00:46:58,020
and their price in such idea behind the

928
00:46:58,020 --> 00:47:00,660
image structure to everyone which means

929
00:47:00,660 --> 00:47:02,940
and the constraints on Mutual words to

930
00:47:02,940 --> 00:47:05,700
cancel effects in everyone

931
00:47:05,700 --> 00:47:08,819
and they will choose total wrong study

932
00:47:08,819 --> 00:47:09,660
States

933
00:47:09,660 --> 00:47:12,540
and instance and the Builder individual

934
00:47:12,540 --> 00:47:15,780
miop model for each combinations and

935
00:47:15,780 --> 00:47:18,319
solve it

936
00:47:18,500 --> 00:47:21,839
and they use a pair of binary variables

937
00:47:21,839 --> 00:47:24,780
to encode HCL

938
00:47:24,780 --> 00:47:26,240
um

939
00:47:26,240 --> 00:47:30,839
for the starting stage they introduce fi

940
00:47:30,839 --> 00:47:33,060
and beta I

941
00:47:33,060 --> 00:47:33,720
um

942
00:47:33,720 --> 00:47:37,079
Crystal unless if I equals one is

943
00:47:37,079 --> 00:47:40,280
finally on and only if the series Group

944
00:47:40,280 --> 00:47:43,140
which can be converted to these three

945
00:47:43,140 --> 00:47:46,800
linear inequalities and beta equals one

946
00:47:46,800 --> 00:47:49,280
you find only if the steel is red

947
00:47:49,280 --> 00:47:53,099
then the initial degree of Freedom can

948
00:47:53,099 --> 00:47:55,260
be computed

949
00:47:55,260 --> 00:47:58,079
um similarly the accumulated of consumer

950
00:47:58,079 --> 00:48:00,300
degree of Rhythm and the degree of full

951
00:48:00,300 --> 00:48:04,140
match and need to be computed in order

952
00:48:04,140 --> 00:48:07,079
to minimize the time of complexity they

953
00:48:07,079 --> 00:48:10,079
introduce a variable vlbj analysis less

954
00:48:10,079 --> 00:48:13,260
than or equal to D1 D2 and M and set the

955
00:48:13,260 --> 00:48:17,420
object's function maximize the vlbj

956
00:48:17,420 --> 00:48:20,640
the rules of average arbitrates

957
00:48:20,640 --> 00:48:22,319
propagation you need to translate

958
00:48:22,319 --> 00:48:27,060
through MRP for example xor and there is

959
00:48:27,060 --> 00:48:29,640
all possible cargo patterns and let a b

960
00:48:29,640 --> 00:48:31,740
business input cells and see if the

961
00:48:31,740 --> 00:48:34,200
output sales the rule restrains the

962
00:48:34,200 --> 00:48:37,859
vector to a subset and it can be

963
00:48:37,859 --> 00:48:39,900
described by a system of linear

964
00:48:39,900 --> 00:48:42,119
inequalities if you want to know more

965
00:48:42,119 --> 00:48:44,579
details please refer to their people

966
00:48:44,579 --> 00:48:47,819
they always choose the improved with mrf

967
00:48:47,819 --> 00:48:49,380
model

968
00:48:49,380 --> 00:48:51,660
and guess I'm determining is firstly

969
00:48:51,660 --> 00:48:54,599
introduced by Sasaki and to improve

970
00:48:54,599 --> 00:48:57,480
meeting the middle pre-media attack

971
00:48:57,480 --> 00:49:00,060
and it can get views of a few or low

972
00:49:00,060 --> 00:49:02,400
sales to continue the commutation and

973
00:49:02,400 --> 00:49:04,380
check the consistency of the guest sales

974
00:49:04,380 --> 00:49:07,280
of matching

975
00:49:10,760 --> 00:49:13,319
you will get no filter in the matching

976
00:49:13,319 --> 00:49:16,079
point however if you get four wide sales

977
00:49:16,079 --> 00:49:20,880
in Z2 and then you can get the S deals

978
00:49:20,880 --> 00:49:24,480
in Matchbox like the second pictures

979
00:49:24,480 --> 00:49:26,280
the structure of meeting in the middle

980
00:49:26,280 --> 00:49:28,200
Pro immediate attack with this and

981
00:49:28,200 --> 00:49:31,980
determined is a juice here we need to

982
00:49:31,980 --> 00:49:35,520
get the gas sales under and check to get

983
00:49:35,520 --> 00:49:37,339
sales of matching

984
00:49:37,339 --> 00:49:40,619
the time capacity is governed by this

985
00:49:40,619 --> 00:49:42,599
formula

986
00:49:42,599 --> 00:49:44,700
we model the guests are in determining

987
00:49:44,700 --> 00:49:48,480
and assume MC connects A and C we

988
00:49:48,480 --> 00:49:50,700
introduce a new test b and a new

989
00:49:50,700 --> 00:49:53,819
operation gets connect A and B on the

990
00:49:53,819 --> 00:49:58,740
gas operation can can guess the YCO in a

991
00:49:58,740 --> 00:50:03,960
we list all possible color patterns and

992
00:50:03,960 --> 00:50:07,619
it also can be described by a system of

993
00:50:07,619 --> 00:50:09,300
linear University

994
00:50:09,300 --> 00:50:11,880
and because the time complexity is

995
00:50:11,880 --> 00:50:14,160
changed then we needed to change the

996
00:50:14,160 --> 00:50:17,118
stroke

997
00:50:18,060 --> 00:50:19,680
um saying I will introduce the second

998
00:50:19,680 --> 00:50:24,020
layer technicals and the figures used to

999
00:50:24,020 --> 00:50:26,579
initial structure of a meeting in the

1000
00:50:26,579 --> 00:50:29,339
middle framework attack in in this

1001
00:50:29,339 --> 00:50:31,260
attack we can compute the solution space

1002
00:50:31,260 --> 00:50:34,440
of blue and red cells by solving these

1003
00:50:34,440 --> 00:50:36,900
two linear inequalities

1004
00:50:36,900 --> 00:50:39,380
it coaches

1005
00:50:39,380 --> 00:50:42,560
however there are some cases that's the

1006
00:50:42,560 --> 00:50:45,260
neutral words are nonlinear constraint

1007
00:50:45,260 --> 00:50:48,059
and like distinguishers

1008
00:50:48,059 --> 00:50:50,819
we need to compute the solution of glue

1009
00:50:50,819 --> 00:50:53,760
sales by solving this non-linear

1010
00:50:53,760 --> 00:50:56,579
enclosions which contain Xbox operation

1011
00:50:56,579 --> 00:51:00,200
so it's difficult

1012
00:51:01,460 --> 00:51:04,040
2021

1013
00:51:04,040 --> 00:51:07,740
purpose table based technical in order

1014
00:51:07,740 --> 00:51:10,380
in order to solve the non-linear

1015
00:51:10,380 --> 00:51:11,960
equations

1016
00:51:11,960 --> 00:51:15,059
such as this one they will Traverse the

1017
00:51:15,059 --> 00:51:18,420
eight groups explosives and compute to

1018
00:51:18,420 --> 00:51:22,079
get the views of C1 and C6 and store it

1019
00:51:22,079 --> 00:51:26,099
in a list B index by C1 to C6

1020
00:51:26,099 --> 00:51:29,280
this this technical can be used in

1021
00:51:29,280 --> 00:51:32,780
between the middle between middle attack

1022
00:51:33,480 --> 00:51:35,339
um if you want to know more details

1023
00:51:35,339 --> 00:51:37,260
please refer to their people

1024
00:51:37,260 --> 00:51:39,180
so yeah finally I will show our

1025
00:51:39,180 --> 00:51:42,000
attackers people is a Russian national

1026
00:51:42,000 --> 00:51:44,220
standard has function it's framework

1027
00:51:44,220 --> 00:51:46,260
that the future shares

1028
00:51:46,260 --> 00:51:48,960
and its compared function use MP mode

1029
00:51:48,960 --> 00:51:51,960
and the internal block Cipher is AES

1030
00:51:51,960 --> 00:51:55,800
like Cipher include Edge case subwise

1031
00:51:55,800 --> 00:51:59,359
transposition and linear transformation

1032
00:51:59,359 --> 00:52:04,440
we found the 8.5 round primary attack as

1033
00:52:04,440 --> 00:52:08,099
per box 512 compared function like the

1034
00:52:08,099 --> 00:52:09,359
figure series

1035
00:52:09,359 --> 00:52:13,680
the study States is W3 and K5

1036
00:52:13,680 --> 00:52:18,480
the initiative way of Russia is 36

1037
00:52:18,480 --> 00:52:23,160
and one wise way to C2 will consume 16

1038
00:52:23,160 --> 00:52:27,380
sales so through it so the remaining

1039
00:52:27,380 --> 00:52:31,440
is 12. and the lead sales and the

1040
00:52:31,440 --> 00:52:33,660
remaining of red cells is for

1041
00:52:33,660 --> 00:52:38,240
the match point between Z6 and the W6

1042
00:52:38,240 --> 00:52:42,720
form of letter of 16 sales

1043
00:52:42,720 --> 00:52:46,920
and and there are 12 guest sales in y1

1044
00:52:46,920 --> 00:52:49,619
denoted by yellow

1045
00:52:49,619 --> 00:52:52,140
the algorithm is used here after

1046
00:52:52,140 --> 00:52:55,200
governance abuse of Green Sales we use

1047
00:52:55,200 --> 00:52:57,839
the table based technical to build B and

1048
00:52:57,839 --> 00:53:01,079
U in which stores the

1049
00:53:01,079 --> 00:53:03,900
which is the solution space of blue and

1050
00:53:03,900 --> 00:53:05,339
red cells

1051
00:53:05,339 --> 00:53:07,140
then

1052
00:53:07,140 --> 00:53:10,819
um troubles their customs and

1053
00:53:10,819 --> 00:53:13,440
requiring the table fee

1054
00:53:13,440 --> 00:53:16,020
and a computer forward

1055
00:53:16,020 --> 00:53:19,440
and then finally the table you and the

1056
00:53:19,440 --> 00:53:21,059
guess the guest sales and compute

1057
00:53:21,059 --> 00:53:23,280
backwards from match

1058
00:53:23,280 --> 00:53:24,180
um

1059
00:53:24,180 --> 00:53:27,000
saying if we found match we can compute

1060
00:53:27,000 --> 00:53:30,180
and check with the gas systems and if

1061
00:53:30,180 --> 00:53:32,579
the gas sales are correct then Test the

1062
00:53:32,579 --> 00:53:35,880
full pre-image output and stuff if the

1063
00:53:35,880 --> 00:53:38,880
full print menu is found the time

1064
00:53:38,880 --> 00:53:43,800
complexity is about 2 to 480.

1065
00:53:51,980 --> 00:53:56,520
the time complexity is about 2 to 208

1066
00:53:56,520 --> 00:53:58,740
a summary of three major attack results

1067
00:53:58,740 --> 00:54:01,500
on springboard is used in the table

1068
00:54:01,500 --> 00:54:04,819
and that's all thank you

1069
00:54:05,160 --> 00:54:08,598
are there any questions

1070
00:54:13,619 --> 00:54:16,579
no questions

1071
00:54:17,420 --> 00:54:22,079
any questions or comments in Kobe

1072
00:54:22,079 --> 00:54:26,240
sorry no questions here

1073
00:54:27,540 --> 00:54:30,000
I have a simple question

1074
00:54:30,000 --> 00:54:33,599
can these techniques be applied to Hash

1075
00:54:33,599 --> 00:54:36,780
functions using other constructions like

1076
00:54:36,780 --> 00:54:42,300
a sponge hash functions sponge uh

1077
00:54:42,300 --> 00:54:45,559
this cannot

1078
00:54:47,040 --> 00:54:48,720
uh

1079
00:54:48,720 --> 00:54:52,559
could you could you explain a bit

1080
00:54:52,559 --> 00:54:55,280
oh

1081
00:54:55,280 --> 00:55:00,059
uh is you can use it on DM model a

1082
00:55:00,059 --> 00:55:05,900
spongy model that can cannot no

1083
00:55:06,359 --> 00:55:08,960
thank you

1084
00:55:09,660 --> 00:55:12,000
okay

1085
00:55:12,000 --> 00:55:15,359
if if there there is no more question

1086
00:55:15,359 --> 00:55:19,140
let's thank the speakers and other

1087
00:55:19,140 --> 00:55:22,520
speakers in this session again

1088
00:55:22,520 --> 00:55:26,640
we'll have a coffee break and the next

1089
00:55:26,640 --> 00:55:31,680
session will start at 10 30

1090
00:55:31,680 --> 00:55:35,359
so enjoy the coffee break

