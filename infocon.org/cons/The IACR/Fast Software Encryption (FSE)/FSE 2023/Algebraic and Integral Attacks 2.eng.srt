1
00:00:00,079 --> 00:00:03,240
attacks we have two talks the first talk

2
00:00:03,240 --> 00:00:06,540
is entitled new low memory algebraic

3
00:00:06,540 --> 00:00:09,679
attacks on low MC in the picnic setting

4
00:00:09,679 --> 00:00:14,219
by ukang Leo Willie Meyer Santa nusarkar

5
00:00:14,219 --> 00:00:17,400
and takanori izobe and fukang will give

6
00:00:17,400 --> 00:00:19,640
the talk the floor is yours

7
00:00:19,640 --> 00:00:23,640
thanks for the introduction okay I will

8
00:00:23,640 --> 00:00:25,920
start my presentation also not always

9
00:00:25,920 --> 00:00:26,880
here

10
00:00:26,880 --> 00:00:30,420
okay so I think now Lauren state is a

11
00:00:30,420 --> 00:00:34,620
very famous family block ciphers because

12
00:00:34,620 --> 00:00:37,680
uh it's a the first time for design for

13
00:00:37,680 --> 00:00:43,440
MPC fhe and DK broadcast and there are

14
00:00:43,440 --> 00:00:45,960
many notable features of loam C for

15
00:00:45,960 --> 00:00:49,079
example the partial non-linear layer and

16
00:00:49,079 --> 00:00:51,680
another feature of the cipher is that

17
00:00:51,680 --> 00:00:54,059
their fine layers the key schedule

18
00:00:54,059 --> 00:00:58,620
functions and are not I'm not not fixed

19
00:00:58,620 --> 00:01:01,739
so if we want to break this Cipher we we

20
00:01:01,739 --> 00:01:04,559
should make the attack works for all

21
00:01:04,559 --> 00:01:08,400
possible uh choices of the fine layers

22
00:01:08,400 --> 00:01:11,780
and the key schedule function

23
00:01:11,780 --> 00:01:16,020
so and one important application of the

24
00:01:16,020 --> 00:01:18,360
low M6 Cipher is the picnic signature

25
00:01:18,360 --> 00:01:22,080
scheme and it's also very famous so to

26
00:01:22,080 --> 00:01:25,020
understand the security of loyency in

27
00:01:25,020 --> 00:01:27,900
the picnic setting that's giving one

28
00:01:27,900 --> 00:01:30,540
non-plane test Cipher test pair how to

29
00:01:30,540 --> 00:01:34,080
recover the secret key of the low m c

30
00:01:34,080 --> 00:01:37,619
Cipher because it is directly related to

31
00:01:37,619 --> 00:01:41,040
the security of the picnic signature

32
00:01:41,040 --> 00:01:43,619
scheme and to understand the security in

33
00:01:43,619 --> 00:01:46,740
this setting the the low MC team

34
00:01:46,740 --> 00:01:49,680
launched a public competition and there

35
00:01:49,680 --> 00:01:52,979
are three cases one case is one Xbox per

36
00:01:52,979 --> 00:01:55,860
round the second case is 10 Xboxes per

37
00:01:55,860 --> 00:01:58,979
one and the suitcase is they use the

38
00:01:58,979 --> 00:02:02,700
full export so now it's not now it's not

39
00:02:02,700 --> 00:02:07,460
a partial non-linear layer is four yeah

40
00:02:09,679 --> 00:02:12,480
there are many attacks on Long say due

41
00:02:12,480 --> 00:02:14,280
to its importance especially in recent

42
00:02:14,280 --> 00:02:17,459
years there are some attacks in a low

43
00:02:17,459 --> 00:02:20,940
data staging but we prefer the attacks

44
00:02:20,940 --> 00:02:24,000
in the last I mean only one non-plane

45
00:02:24,000 --> 00:02:25,980
tester Cipher test pair and in this

46
00:02:25,980 --> 00:02:29,819
setting we have seen some major progress

47
00:02:29,819 --> 00:02:31,980
like the very efficient guess

48
00:02:31,980 --> 00:02:35,040
anti-terminal attack at toasted 2020 by

49
00:02:35,040 --> 00:02:38,160
Panic at all and we also

50
00:02:38,160 --> 00:02:40,739
there is also very Advanced technique to

51
00:02:40,739 --> 00:02:43,019
solve a non-linear equation system

52
00:02:43,019 --> 00:02:45,780
called polynomial method and it was

53
00:02:45,780 --> 00:02:49,680
proposed recently and it broke the low

54
00:02:49,680 --> 00:02:52,260
MC parameters in picnic 3. although

55
00:02:52,260 --> 00:02:54,480
there are also some debate whether I

56
00:02:54,480 --> 00:02:56,459
mean the memory complexity of this

57
00:02:56,459 --> 00:02:58,680
message is very high so whether

58
00:02:58,680 --> 00:03:01,980
it whether the security problems is

59
00:03:01,980 --> 00:03:03,780
influenced by this is

60
00:03:03,780 --> 00:03:06,180
and clear maybe for some people's

61
00:03:06,180 --> 00:03:09,560
opinions so in this book I want to

62
00:03:09,560 --> 00:03:12,840
optimize either the memory complexity of

63
00:03:12,840 --> 00:03:15,959
the polynomial method and or improving

64
00:03:15,959 --> 00:03:17,280
the guess and determining attack because

65
00:03:17,280 --> 00:03:20,459
in this attack uh in my understandings

66
00:03:20,459 --> 00:03:22,620
indeed I did this work before this uh

67
00:03:22,620 --> 00:03:24,180
maybe just following this work but

68
00:03:24,180 --> 00:03:29,099
before this work but my idea is to use

69
00:03:29,099 --> 00:03:31,920
the guest information of the gas and

70
00:03:31,920 --> 00:03:34,080
determine attack in this work but

71
00:03:34,080 --> 00:03:36,360
but at that time I do not have a good

72
00:03:36,360 --> 00:03:38,280
technique to solve a non-linear equation

73
00:03:38,280 --> 00:03:41,340
system so I I started to learn some

74
00:03:41,340 --> 00:03:44,340
Advanced Techniques to solve a linear

75
00:03:44,340 --> 00:03:48,180
equation system so next time following I

76
00:03:48,180 --> 00:03:51,900
will spend more time explaining the

77
00:03:51,900 --> 00:03:54,480
techniques to solve a linear equation

78
00:03:54,480 --> 00:03:57,060
system so first let's recall the mobile

79
00:03:57,060 --> 00:03:59,459
transform so it's well known that the

80
00:03:59,459 --> 00:04:01,560
mobile transform can be used to recover

81
00:04:01,560 --> 00:04:04,739
the NF of a Boolean polynomial

82
00:04:04,739 --> 00:04:09,120
so it's just to compute a table for uh

83
00:04:09,120 --> 00:04:11,459
to another table so the new table

84
00:04:11,459 --> 00:04:13,500
represents the coefficients of all

85
00:04:13,500 --> 00:04:15,780
possible monomials so we can

86
00:04:15,780 --> 00:04:18,779
we can the coefficients of all monomials

87
00:04:18,779 --> 00:04:22,380
so we can recover its AF and indeed we

88
00:04:22,380 --> 00:04:25,440
can indeed the Mobius transform is an

89
00:04:25,440 --> 00:04:29,520
evolution of F2 so if we apply the

90
00:04:29,520 --> 00:04:31,860
Mobius transform to this table we can

91
00:04:31,860 --> 00:04:33,780
again obtain the original choose table

92
00:04:33,780 --> 00:04:36,300
for the Boolean function that means we

93
00:04:36,300 --> 00:04:39,600
can evaluate a Boolean function uh

94
00:04:39,600 --> 00:04:42,080
a Boolean function by simply

95
00:04:42,080 --> 00:04:45,360
running a mobile transform and we also

96
00:04:45,360 --> 00:04:47,460
know the Mobius the time complexity of

97
00:04:47,460 --> 00:04:49,199
the Mobius transform

98
00:04:49,199 --> 00:04:53,160
it is indeed low yeah we only need this

99
00:04:53,160 --> 00:04:55,380
this time this number of build

100
00:04:55,380 --> 00:04:58,860
operations and in the polynomial method

101
00:04:58,860 --> 00:05:01,500
as we will be noticed later it highly

102
00:05:01,500 --> 00:05:04,259
relies on the mobile transform so linear

103
00:05:04,259 --> 00:05:07,500
uh put many efforts to optimize the

104
00:05:07,500 --> 00:05:11,160
memory complexity of of this mobile

105
00:05:11,160 --> 00:05:13,320
stands for because otherwise the memory

106
00:05:13,320 --> 00:05:15,600
complexity of the polynomial method will

107
00:05:15,600 --> 00:05:18,780
be again still very very large

108
00:05:18,780 --> 00:05:23,280
and the next so one technique in this

109
00:05:23,280 --> 00:05:25,320
attack is the chord the crossbred

110
00:05:25,320 --> 00:05:27,720
algorithm because I mean in the

111
00:05:27,720 --> 00:05:28,680
symmetric

112
00:05:28,680 --> 00:05:32,759
Community is not commonly used so uh so

113
00:05:32,759 --> 00:05:35,220
I think it's necessary to understand to

114
00:05:35,220 --> 00:05:37,259
introduce it and indeed the idea is very

115
00:05:37,259 --> 00:05:41,100
simple uh first we can consider a

116
00:05:41,100 --> 00:05:44,820
Boolean polynomial F we can in X and X

117
00:05:44,820 --> 00:05:48,660
they are U variables and we can split X

118
00:05:48,660 --> 00:05:52,620
into two parts Y and Z why is uh there

119
00:05:52,620 --> 00:05:56,039
are U minus one U1 variables and there

120
00:05:56,039 --> 00:05:58,740
are U1 variables in z i mean so it's

121
00:05:58,740 --> 00:06:02,340
just like this and we can we aim to

122
00:06:02,340 --> 00:06:04,620
write F into a

123
00:06:04,620 --> 00:06:07,680
a linear function in Z in other words in

124
00:06:07,680 --> 00:06:11,419
this new representation there is no term

125
00:06:11,419 --> 00:06:14,759
uh in Z with whose degree is higher than

126
00:06:14,759 --> 00:06:18,060
two so we can always write it in this

127
00:06:18,060 --> 00:06:20,880
way now we can see a set of polynomial

128
00:06:20,880 --> 00:06:24,000
equations and we aim to find a possible

129
00:06:24,000 --> 00:06:27,840
way to split X into Y and Z such that

130
00:06:27,840 --> 00:06:30,720
among the M equations we can find M

131
00:06:30,720 --> 00:06:33,660
Prime equations of polynomials they are

132
00:06:33,660 --> 00:06:36,840
linear in Z then what what can we what

133
00:06:36,840 --> 00:06:39,900
can we get we get that we can increase

134
00:06:39,900 --> 00:06:42,660
roast all possible values of Y and then

135
00:06:42,660 --> 00:06:44,759
we will for each possible assignment of

136
00:06:44,759 --> 00:06:47,039
why we will get M Prime linear equations

137
00:06:47,039 --> 00:06:49,860
in Z and we can solve Z by simple

138
00:06:49,860 --> 00:06:52,259
running against elimination

139
00:06:52,259 --> 00:06:54,780
so what's the original crossbar

140
00:06:54,780 --> 00:06:57,240
algorithm so again we have M equations

141
00:06:57,240 --> 00:07:00,900
and the URL both then the first step is

142
00:07:00,900 --> 00:07:03,660
to generate more equations by

143
00:07:03,660 --> 00:07:06,300
multiplying each polynomial with all

144
00:07:06,300 --> 00:07:07,280
possible

145
00:07:07,280 --> 00:07:10,560
monomial of degree 1 and degree two then

146
00:07:10,560 --> 00:07:12,300
we can obtain a much over defined system

147
00:07:12,300 --> 00:07:17,340
of equations and then we we can expect

148
00:07:17,340 --> 00:07:19,680
to find as many linear equations in Z

149
00:07:19,680 --> 00:07:22,500
from this over defined system but indeed

150
00:07:22,500 --> 00:07:24,720
this base is very time consuming and

151
00:07:24,720 --> 00:07:26,580
it's difficult to bond time complexity

152
00:07:26,580 --> 00:07:29,940
so there is a simplified Prosperity

153
00:07:29,940 --> 00:07:33,300
algorithm if the system is over defined

154
00:07:33,300 --> 00:07:37,380
for example we can random choose a URL

155
00:07:37,380 --> 00:07:40,500
variable specifying this uh constraint

156
00:07:40,500 --> 00:07:44,639
because because uh if you and set them

157
00:07:44,639 --> 00:07:48,960
as Z in this case we can always uh omit

158
00:07:48,960 --> 00:07:51,539
all the caustic terms in Z by simply

159
00:07:51,539 --> 00:07:54,060
running the gaussian elimination and we

160
00:07:54,060 --> 00:07:55,979
can get m

161
00:07:55,979 --> 00:07:58,860
so so much linear equations in Z and

162
00:07:58,860 --> 00:08:02,099
solve it so it's just like this so after

163
00:08:02,099 --> 00:08:05,039
removing all the quadratic terms in D we

164
00:08:05,039 --> 00:08:08,099
will get this linear equation and the

165
00:08:08,099 --> 00:08:12,300
element in a is a linear polynomial in y

166
00:08:12,300 --> 00:08:15,900
under the uh each element in B is a

167
00:08:15,900 --> 00:08:18,360
chaotic polynomial in y so we can

168
00:08:18,360 --> 00:08:21,780
simulate running evaluating at the

169
00:08:21,780 --> 00:08:24,300
the polynomial for all possible Y and

170
00:08:24,300 --> 00:08:25,740
then we will get the corresponding

171
00:08:25,740 --> 00:08:27,840
linear equations in Z then we solve it

172
00:08:27,840 --> 00:08:30,900
and check the correctness and since the

173
00:08:30,900 --> 00:08:35,159
algorithm is I mean a deterministic I

174
00:08:35,159 --> 00:08:37,200
mean it's very straightforce is easy to

175
00:08:37,200 --> 00:08:41,458
compute the term complexity so this also

176
00:08:41,458 --> 00:08:43,500
makes uh

177
00:08:43,500 --> 00:08:45,899
yeah it's easier to use and the next

178
00:08:45,899 --> 00:08:51,080
technique is the genius algorithm again

179
00:08:51,080 --> 00:08:53,880
maybe I I've spent too much time

180
00:08:53,880 --> 00:08:56,100
introducing previous attack but I think

181
00:08:56,100 --> 00:08:58,440
is very meaningful so first we again

182
00:08:58,440 --> 00:09:01,620
consider a equation system e there are M

183
00:09:01,620 --> 00:09:05,700
polynomial equations in in it and the

184
00:09:05,700 --> 00:09:08,700
idea is also to split X into two parts Y

185
00:09:08,700 --> 00:09:12,120
and Z and then we randomly pick U1 plus

186
00:09:12,120 --> 00:09:14,040
one equations and it denotes the

187
00:09:14,040 --> 00:09:16,680
equation system by E1 so we should know

188
00:09:16,680 --> 00:09:19,740
that each each solution to e is also

189
00:09:19,740 --> 00:09:22,019
must be a solution to E1 but the inverse

190
00:09:22,019 --> 00:09:25,140
does not hold so indeed I mean in the

191
00:09:25,140 --> 00:09:27,180
polynomial method the goal is to

192
00:09:27,180 --> 00:09:30,180
efficiently find enumerate all the

193
00:09:30,180 --> 00:09:32,040
solutions to U1 and check its

194
00:09:32,040 --> 00:09:36,660
correctness against e so uh and indeed

195
00:09:36,660 --> 00:09:40,500
uh indeed there's not clearly written in

196
00:09:40,500 --> 00:09:42,779
the newspaper I've already noticed that

197
00:09:42,779 --> 00:09:45,660
uh in these days an assumption to show

198
00:09:45,660 --> 00:09:49,620
the correctness specifically uh for each

199
00:09:49,620 --> 00:09:53,339
value of y once Y is specified there is

200
00:09:53,339 --> 00:09:56,640
at most one solution of Z satisfying the

201
00:09:56,640 --> 00:09:58,680
smallest small small scale equation

202
00:09:58,680 --> 00:10:02,459
system you want otherwise we cannot get

203
00:10:02,459 --> 00:10:03,000
um

204
00:10:03,000 --> 00:10:04,500
I mean

205
00:10:04,500 --> 00:10:06,779
the logic does not hold then so the

206
00:10:06,779 --> 00:10:08,640
problem how to efficiently solving is

207
00:10:08,640 --> 00:10:11,339
why then I think this is why the

208
00:10:11,339 --> 00:10:14,580
polynomial method is defined so we can

209
00:10:14,580 --> 00:10:18,300
find an polynomial F1 such that F1

210
00:10:18,300 --> 00:10:21,420
equals to Y is equivalent to the

211
00:10:21,420 --> 00:10:22,740
solution

212
00:10:22,740 --> 00:10:25,440
to this system because we can construct

213
00:10:25,440 --> 00:10:28,680
F1 in this way so the problem is becomes

214
00:10:28,680 --> 00:10:31,260
how to find all possible y z such that

215
00:10:31,260 --> 00:10:35,160
F1 is one so now it comes to the cube

216
00:10:35,160 --> 00:10:37,440
attack maybe because linear invented

217
00:10:37,440 --> 00:10:39,360
Cuba attack so he is very familiar with

218
00:10:39,360 --> 00:10:42,000
this and he noticed that for F1 we've

219
00:10:42,000 --> 00:10:44,579
always write it like this so if we use

220
00:10:44,579 --> 00:10:47,040
the terminology in people attack this is

221
00:10:47,040 --> 00:10:50,100
super poly and this is super poly and we

222
00:10:50,100 --> 00:10:52,440
can compute the we can know the

223
00:10:52,440 --> 00:10:54,480
relations between each super poly and

224
00:10:54,480 --> 00:10:56,100
the sum of F1

225
00:10:56,100 --> 00:10:59,940
so he noticed that uh if the Super Bowl

226
00:10:59,940 --> 00:11:01,560
is diesel then it means there's no

227
00:11:01,560 --> 00:11:03,959
solution to Z of course this is based on

228
00:11:03,959 --> 00:11:05,220
the Assumption I mentioned previous

229
00:11:05,220 --> 00:11:08,940
previously and if there is If U 0 is 1

230
00:11:08,940 --> 00:11:11,880
then we can compute the solution of e z

231
00:11:11,880 --> 00:11:14,339
i in this way so this is different from

232
00:11:14,339 --> 00:11:16,560
the cross pair algorithm

233
00:11:16,560 --> 00:11:19,500
so the over procedure now it's become

234
00:11:19,500 --> 00:11:22,620
clear we we need to find the AFS of u i

235
00:11:22,620 --> 00:11:26,399
and then we evaluate UI and recover the

236
00:11:26,399 --> 00:11:30,300
Z using uh the property here

237
00:11:30,300 --> 00:11:32,399
and then we check the correct thing is

238
00:11:32,399 --> 00:11:35,100
so so the main main contribution I think

239
00:11:35,100 --> 00:11:37,800
is to how to efficiently find the AFS of

240
00:11:37,800 --> 00:11:40,560
UI and after understanding what's the

241
00:11:40,560 --> 00:11:43,680
code States it's easy to understand uh

242
00:11:43,680 --> 00:11:46,560
the term complexity so indeed we can see

243
00:11:46,560 --> 00:11:50,579
that the time complexity is dominated by

244
00:11:50,579 --> 00:11:54,079
some like for example the degree of the

245
00:11:54,079 --> 00:11:57,300
polynomial F1 so

246
00:11:57,300 --> 00:11:59,399
maybe so if we want to optimize the

247
00:11:59,399 --> 00:12:01,800
polynomial method maybe we can construct

248
00:12:01,800 --> 00:12:06,019
some uh structured equation such that

249
00:12:06,019 --> 00:12:09,079
when we use some equations

250
00:12:09,079 --> 00:12:12,959
to to compute F1 the upper bound of the

251
00:12:12,959 --> 00:12:15,980
degree of Y is smaller than the

252
00:12:15,980 --> 00:12:18,899
absolute outbound so how to attack low

253
00:12:18,899 --> 00:12:22,920
MC uh so first different from Danny

254
00:12:22,920 --> 00:12:26,399
attack we do not get this value I mean

255
00:12:26,399 --> 00:12:29,220
we do not get one output B to linearize

256
00:12:29,220 --> 00:12:33,540
the Xbox instead I guess we get two bits

257
00:12:33,540 --> 00:12:35,820
to linearize the export yes this is very

258
00:12:35,820 --> 00:12:38,220
straightforward but no one considered it

259
00:12:38,220 --> 00:12:41,160
and indeed this is the best attack for

260
00:12:41,160 --> 00:12:42,680
the

261
00:12:42,680 --> 00:12:45,600
in this case so I mean if we guess

262
00:12:45,600 --> 00:12:48,899
linear equations in the inputs one of

263
00:12:48,899 --> 00:12:50,519
the advantage is that the number of

264
00:12:50,519 --> 00:12:52,980
variables is reduced to M because we

265
00:12:52,980 --> 00:12:54,620
have guessed 2m

266
00:12:54,620 --> 00:12:58,380
equations in the key so m means the

267
00:12:58,380 --> 00:13:01,079
number of Xboxes per run and we can

268
00:13:01,079 --> 00:13:04,019
construct 3M quad quadratic equations in

269
00:13:04,019 --> 00:13:06,180
this m variables so and then we can run

270
00:13:06,180 --> 00:13:09,540
the simplified crossbar algorithm and we

271
00:13:09,540 --> 00:13:12,959
can also compute its complexity early so

272
00:13:12,959 --> 00:13:16,139
we can see from this so our attack is

273
00:13:16,139 --> 00:13:18,180
only slightly slower than Venus

274
00:13:18,180 --> 00:13:21,000
algorithm but the memory complexity is

275
00:13:21,000 --> 00:13:24,240
much lower so you can see it here or see

276
00:13:24,240 --> 00:13:26,820
I think so I think this is an evidence

277
00:13:26,820 --> 00:13:30,000
that the three round low MC is not

278
00:13:30,000 --> 00:13:33,720
secure if you're using the num fur

279
00:13:33,720 --> 00:13:37,260
Xbox layer yeah maybe it's all the

280
00:13:37,260 --> 00:13:40,440
evidence more stronger in some sense if

281
00:13:40,440 --> 00:13:43,579
we consider the foreign

282
00:13:44,180 --> 00:13:48,420
strategy now we we we don't we we only

283
00:13:48,420 --> 00:13:50,160
have degree four equations not

284
00:13:50,160 --> 00:13:52,260
quantitative equations so the cross-bed

285
00:13:52,260 --> 00:13:53,880
algorithm does not

286
00:13:53,880 --> 00:13:57,959
I mean no efficient versions for the

287
00:13:57,959 --> 00:13:59,880
crossbred algorithm for this kind of

288
00:13:59,880 --> 00:14:02,820
equation system so we use the polynomial

289
00:14:02,820 --> 00:14:05,880
method but we also notice that so there

290
00:14:05,880 --> 00:14:08,579
are so many equations we cannot I mean

291
00:14:08,579 --> 00:14:11,339
as I said mentioned before to improve

292
00:14:11,339 --> 00:14:14,279
the to make the polynomial method if

293
00:14:14,279 --> 00:14:18,899
efficient we need to uh uh reduce the

294
00:14:18,899 --> 00:14:23,519
degree of the polynomial F1 so we we do

295
00:14:23,519 --> 00:14:26,459
not we need to carefully select the

296
00:14:26,459 --> 00:14:30,420
equations from this uh 14m equations so

297
00:14:30,420 --> 00:14:33,420
and such that the degree of F1 can be

298
00:14:33,420 --> 00:14:37,380
small then we can find that uh yeah our

299
00:14:37,380 --> 00:14:39,420
time complex still higher than genius

300
00:14:39,420 --> 00:14:41,399
algorithm but the memory complex is

301
00:14:41,399 --> 00:14:43,680
higher and in this there is also a

302
00:14:43,680 --> 00:14:45,899
trivial time memory Traders for denius

303
00:14:45,899 --> 00:14:48,120
algorithm I mean they can also get some

304
00:14:48,120 --> 00:14:50,420
variables and solve the remaining

305
00:14:50,420 --> 00:14:54,740
variables uh with his algorithm but

306
00:14:54,740 --> 00:14:58,560
we tried that if we restrict that the

307
00:14:58,560 --> 00:15:01,139
term complexity is not higher than us I

308
00:15:01,139 --> 00:15:04,620
mean if the this is more I mean almost

309
00:15:04,620 --> 00:15:07,620
okay let's let's fix this memory uh time

310
00:15:07,620 --> 00:15:10,019
complexity using the time memory Trader

311
00:15:10,019 --> 00:15:11,639
for genius algorithm then we will find

312
00:15:11,639 --> 00:15:14,880
the memory complexity here will be 2 to

313
00:15:14,880 --> 00:15:19,560
the 84.6 and this will be this and this

314
00:15:19,560 --> 00:15:22,800
will be this so indeed this is a better

315
00:15:22,800 --> 00:15:25,320
time trade off because using our

316
00:15:25,320 --> 00:15:27,000
guessing strategies we can get

317
00:15:27,000 --> 00:15:29,339
structured equations that are friendly

318
00:15:29,339 --> 00:15:32,880
to the polynomial method but for the

319
00:15:32,880 --> 00:15:35,639
random uh I mean randomization some

320
00:15:35,639 --> 00:15:37,680
variables we can not get the structured

321
00:15:37,680 --> 00:15:41,399
equations so that's indeed why we can

322
00:15:41,399 --> 00:15:43,440
improve the attacks first then for the

323
00:15:43,440 --> 00:15:45,779
for the attack on Long C with partial

324
00:15:45,779 --> 00:15:48,120
non-linear layers we are still based on

325
00:15:48,120 --> 00:15:50,760
panics uh guessing strategies and so

326
00:15:50,760 --> 00:15:52,620
guessing one output bit but the main

327
00:15:52,620 --> 00:15:55,019
problem uh the main contribution here is

328
00:15:55,019 --> 00:15:58,620
that we notice that the so we want to

329
00:15:58,620 --> 00:16:02,279
use the guest equations in in the key

330
00:16:02,279 --> 00:16:04,199
the caustic equations in in the key

331
00:16:04,199 --> 00:16:06,720
because they are not used in banks at

332
00:16:06,720 --> 00:16:09,240
all attacks and we also not for each gas

333
00:16:09,240 --> 00:16:12,779
I mean for each gas we can indeed obtain

334
00:16:12,779 --> 00:16:15,720
three equations not only not only one

335
00:16:15,720 --> 00:16:17,639
equation this is because for example if

336
00:16:17,639 --> 00:16:21,720
we guess this Z 0 as a star then we can

337
00:16:21,720 --> 00:16:24,360
construct three equations they are

338
00:16:24,360 --> 00:16:26,100
essentially linearly independent if we

339
00:16:26,100 --> 00:16:29,399
view each term uh I mean that if for

340
00:16:29,399 --> 00:16:33,480
example x0 is independent from X 0 x 1 I

341
00:16:33,480 --> 00:16:35,699
mean we use it as new variables

342
00:16:35,699 --> 00:16:39,180
and we can see that so and we also find

343
00:16:39,180 --> 00:16:41,660
that the X Box of Alum C can be written

344
00:16:41,660 --> 00:16:45,120
uh can be expressed as 14 linearly

345
00:16:45,120 --> 00:16:47,519
independent equation a qualitative

346
00:16:47,519 --> 00:16:49,620
equation so finally we will get many

347
00:16:49,620 --> 00:16:53,699
many uh equations and uh so it's over

348
00:16:53,699 --> 00:16:55,980
defined so we and they are qualitative

349
00:16:55,980 --> 00:16:58,259
so we can use the crossbar algorithm to

350
00:16:58,259 --> 00:17:01,320
efficiently solve it so we can see from

351
00:17:01,320 --> 00:17:03,300
this table that our attack is better

352
00:17:03,300 --> 00:17:07,199
than bannock's attack and uh yeah

353
00:17:07,199 --> 00:17:10,559
and if we consider 10 yeah yeah of of

354
00:17:10,559 --> 00:17:12,839
course the time complexity yeah it's at

355
00:17:12,839 --> 00:17:15,599
most due to five times higher but

356
00:17:15,599 --> 00:17:18,780
memory complex is still smaller so

357
00:17:18,780 --> 00:17:22,199
finally in concluding we propose some

358
00:17:22,199 --> 00:17:25,079
new guessing strategies and combined

359
00:17:25,079 --> 00:17:27,000
with the ones techniques to solve

360
00:17:27,000 --> 00:17:28,860
learning equations to find efficient

361
00:17:28,860 --> 00:17:31,740
attacks on Long C where memory is costly

362
00:17:31,740 --> 00:17:34,740
and indeed uh

363
00:17:34,740 --> 00:17:38,280
during this time I put a lot of FS2 to

364
00:17:38,280 --> 00:17:40,559
try to improve the polynomial method for

365
00:17:40,559 --> 00:17:43,760
our defined system but I didn't

366
00:17:43,760 --> 00:17:47,640
succeed maybe I think it's a good idea

367
00:17:47,640 --> 00:17:51,480
to improve it for example I mean okay if

368
00:17:51,480 --> 00:17:53,880
we have any questions we can discuss in

369
00:17:53,880 --> 00:17:54,960
the question

370
00:17:54,960 --> 00:17:57,960
section okay that's all thank you

371
00:17:57,960 --> 00:18:00,380
thank you

372
00:18:02,940 --> 00:18:06,440
any questions in Beijing

373
00:18:10,740 --> 00:18:13,620
okay let's move to questions in Kobe

374
00:18:13,620 --> 00:18:15,660
uh

375
00:18:15,660 --> 00:18:17,700
uh thank you

376
00:18:17,700 --> 00:18:19,500
thank you for our presentation I have

377
00:18:19,500 --> 00:18:20,760
one question

378
00:18:20,760 --> 00:18:24,000
uh have you tried to apply this attack

379
00:18:24,000 --> 00:18:27,780
to other ciphers like long reduced AES

380
00:18:27,780 --> 00:18:31,080
in the picnic site

381
00:18:31,080 --> 00:18:33,419
well safer

382
00:18:33,419 --> 00:18:37,380
uh have you tried to apply this

383
00:18:37,380 --> 00:18:40,919
technique to other ciphers like long

384
00:18:40,919 --> 00:18:44,280
reduced as in the peakness

385
00:18:44,280 --> 00:18:48,660
in the picnic side effects

386
00:18:48,720 --> 00:18:51,440
give me attack a yes

387
00:18:51,440 --> 00:18:54,180
wrong reduced as uh

388
00:18:54,180 --> 00:18:55,799
[Music]

389
00:18:55,799 --> 00:18:58,320
this is difficult question view you know

390
00:18:58,320 --> 00:19:01,080
the degree of the

391
00:19:01,080 --> 00:19:03,059
I mean we need to introduce many

392
00:19:03,059 --> 00:19:05,760
intermediary variables for the Xbox in

393
00:19:05,760 --> 00:19:09,780
order to make the degree state two uh

394
00:19:09,780 --> 00:19:11,460
then there are too many variables

395
00:19:11,460 --> 00:19:14,039
although the system is over defined the

396
00:19:14,039 --> 00:19:16,559
number of variables is also very large

397
00:19:16,559 --> 00:19:19,020
so indeed it has been studied previously

398
00:19:19,020 --> 00:19:21,660
you can check it it does not work I

399
00:19:21,660 --> 00:19:22,760
think

400
00:19:22,760 --> 00:19:25,080
we have Christian regberger with a

401
00:19:25,080 --> 00:19:27,240
question thanks fukang for a very nice

402
00:19:27,240 --> 00:19:28,559
work

403
00:19:28,559 --> 00:19:31,500
um did you consider attacks on more

404
00:19:31,500 --> 00:19:33,840
rounds either full Xbox or partial Xbox

405
00:19:33,840 --> 00:19:36,379
I

406
00:19:36,780 --> 00:19:39,600
for more runs for the four runs so you

407
00:19:39,600 --> 00:19:42,539
can see maybe it's maybe lower than the

408
00:19:42,539 --> 00:19:45,840
fast explosive search so

409
00:19:45,840 --> 00:19:47,640
it's not better

410
00:19:47,640 --> 00:19:50,580
it's worse thank you

411
00:19:50,580 --> 00:19:53,780
okay any other questions

412
00:19:55,080 --> 00:19:56,940
if not then let's thank phuking again

413
00:19:56,940 --> 00:19:58,860
not just for a great presentation but

414
00:19:58,860 --> 00:20:02,178
also for organizing the event

415
00:20:07,080 --> 00:20:09,000
let's move on to the next talk the next

416
00:20:09,000 --> 00:20:11,880
talk is entitled algebraic attacks

417
00:20:11,880 --> 00:20:14,340
against some arithmetization oriented

418
00:20:14,340 --> 00:20:15,419
Primitives

419
00:20:15,419 --> 00:20:16,679
by

420
00:20:16,679 --> 00:20:18,740
um

421
00:20:26,760 --> 00:20:28,860
thanks for the introduction

422
00:20:28,860 --> 00:20:31,200
maybe before going into the details I

423
00:20:31,200 --> 00:20:32,580
might explain where there are some

424
00:20:32,580 --> 00:20:34,919
cheese in the slides so this is not

425
00:20:34,919 --> 00:20:36,240
because we're gonna have lunch just

426
00:20:36,240 --> 00:20:38,400
after the presentation this is because

427
00:20:38,400 --> 00:20:39,840
the presentation will be on

428
00:20:39,840 --> 00:20:42,360
arithmetization oriented Primitives to

429
00:20:42,360 --> 00:20:44,100
aop

430
00:20:44,100 --> 00:20:47,660
which in French means

431
00:20:47,660 --> 00:20:50,280
and it's the denomination that we give

432
00:20:50,280 --> 00:20:52,919
to you special food I mean like special

433
00:20:52,919 --> 00:20:55,860
wine or special cheese this is to make

434
00:20:55,860 --> 00:20:57,360
the difference between sparkling wine

435
00:20:57,360 --> 00:21:00,240
and champagne so I just thought I wanted

436
00:21:00,240 --> 00:21:02,700
somebody to explain this because well

437
00:21:02,700 --> 00:21:05,039
this is a bit confusing and in case that

438
00:21:05,039 --> 00:21:06,660
you want to create a primitive and call

439
00:21:06,660 --> 00:21:09,660
it I don't know champagne or camon well

440
00:21:09,660 --> 00:21:12,179
you need to be careful but let's convert

441
00:21:12,179 --> 00:21:13,860
to more style stuff

442
00:21:13,860 --> 00:21:16,080
um first I would like to give you our

443
00:21:16,080 --> 00:21:18,600
motivation I mean what led us to that

444
00:21:18,600 --> 00:21:22,320
paper that in November 2021 the ethereum

445
00:21:22,320 --> 00:21:24,840
foundation started some challenges for

446
00:21:24,840 --> 00:21:27,919
um aop so namely rescue Prime festival

447
00:21:27,919 --> 00:21:31,320
and reinforce concrete so the idea was

448
00:21:31,320 --> 00:21:33,720
to solve the SQL problem for reduced

449
00:21:33,720 --> 00:21:36,179
version of two Primitives and actually

450
00:21:36,179 --> 00:21:39,059
we have some nice results for a risky

451
00:21:39,059 --> 00:21:42,659
Prime Fest MMC and Poseidon so we do not

452
00:21:42,659 --> 00:21:44,460
uh we did not really either look at

453
00:21:44,460 --> 00:21:46,860
reinforcement grids as the design was a

454
00:21:46,860 --> 00:21:48,419
bit different from the three others we

455
00:21:48,419 --> 00:21:50,940
prefer to focus on the others to be more

456
00:21:50,940 --> 00:21:52,320
consistent

457
00:21:52,320 --> 00:21:54,299
so again would like to thank the

458
00:21:54,299 --> 00:21:56,400
ethereum foundation for starting these

459
00:21:56,400 --> 00:21:57,960
challenges because this is really the

460
00:21:57,960 --> 00:22:01,380
starting point of this paper

461
00:22:01,380 --> 00:22:03,000
so this presentation will be um

462
00:22:03,000 --> 00:22:05,280
algebraic attacks again some aop so

463
00:22:05,280 --> 00:22:07,320
first I will recall the background I

464
00:22:07,320 --> 00:22:09,059
mean what are these arithmetization

465
00:22:09,059 --> 00:22:11,460
oriented Primitives and also recalled

466
00:22:11,460 --> 00:22:13,200
the sequel problem which is the main

467
00:22:13,200 --> 00:22:15,480
idea behind the challenges

468
00:22:15,480 --> 00:22:17,220
and then explain the difference between

469
00:22:17,220 --> 00:22:19,679
universe and multivariate solving system

470
00:22:19,679 --> 00:22:21,600
because well this is what you need to do

471
00:22:21,600 --> 00:22:23,700
to solve the SQL problem

472
00:22:23,700 --> 00:22:25,740
then we'll see a trick for SPN

473
00:22:25,740 --> 00:22:27,659
constriction that we have applied to

474
00:22:27,659 --> 00:22:30,240
Poseidon and rescue Prime so as you can

475
00:22:30,240 --> 00:22:31,740
see we're not going to talk about first

476
00:22:31,740 --> 00:22:34,140
MMC during this presentation because

477
00:22:34,140 --> 00:22:36,360
well I needed to do some choices

478
00:22:36,360 --> 00:22:38,280
and finally I'd like to give few words

479
00:22:38,280 --> 00:22:40,440
about C minion so wasn't part of the

480
00:22:40,440 --> 00:22:42,120
challenges but as we're starting some

481
00:22:42,120 --> 00:22:43,760
algebraic attacks we used to try to

482
00:22:43,760 --> 00:22:47,280
aggregate other Primitives

483
00:22:47,280 --> 00:22:49,559
so we're in the context of emerging

484
00:22:49,559 --> 00:22:51,720
users in symmetric cryptography I mean

485
00:22:51,720 --> 00:22:53,460
some protocols such as synchronous

486
00:22:53,460 --> 00:22:56,039
Protocols are variety the need to design

487
00:22:56,039 --> 00:22:58,679
new symmetric Primitives and they're

488
00:22:58,679 --> 00:23:01,260
really different from what we're used to

489
00:23:01,260 --> 00:23:03,360
the thing is that we're working in a new

490
00:23:03,360 --> 00:23:05,460
environment usually it was interesting

491
00:23:05,460 --> 00:23:07,620
and symmetrical is to work in very small

492
00:23:07,620 --> 00:23:10,080
field after the end where n is like four

493
00:23:10,080 --> 00:23:12,960
or eight and now we need to work a large

494
00:23:12,960 --> 00:23:15,419
fan of field a few where Qs either a big

495
00:23:15,419 --> 00:23:18,299
prime number or a big Power of Two where

496
00:23:18,299 --> 00:23:21,000
n is bigger than 64.

497
00:23:21,000 --> 00:23:23,580
to give you some concrete example

498
00:23:23,580 --> 00:23:26,520
um the p is mainly given by ellipticals

499
00:23:26,520 --> 00:23:30,000
so here are two examples of P so well we

500
00:23:30,000 --> 00:23:31,320
can clearly understand that this is

501
00:23:31,320 --> 00:23:33,299
really different to work in FP with

502
00:23:33,299 --> 00:23:35,580
search P than working and F2 to the end

503
00:23:35,580 --> 00:23:37,559
with very small m

504
00:23:37,559 --> 00:23:39,600
so this also means that your operations

505
00:23:39,600 --> 00:23:41,039
are not based on logical Gates or

506
00:23:41,039 --> 00:23:43,080
recipient restriction but now we need to

507
00:23:43,080 --> 00:23:46,200
work with large fan of your arithmetic

508
00:23:46,200 --> 00:23:48,120
and we also have new properties because

509
00:23:48,120 --> 00:23:49,559
usually what's interesting is you have

510
00:23:49,559 --> 00:23:50,820
an efficient evaluation for

511
00:23:50,820 --> 00:23:52,760
implementation and software and hardware

512
00:23:52,760 --> 00:23:55,380
and now we also want to have an

513
00:23:55,380 --> 00:23:56,940
efficient verification

514
00:23:56,940 --> 00:23:59,700
these are really different stuff but

515
00:23:59,700 --> 00:24:01,500
what I really wanted upon here is that

516
00:24:01,500 --> 00:24:03,539
in terms of crit analysis for the

517
00:24:03,539 --> 00:24:05,460
classical primitive we have years have

518
00:24:05,460 --> 00:24:07,740
been Decades of script analysis we know

519
00:24:07,740 --> 00:24:09,240
how it works all the community is

520
00:24:09,240 --> 00:24:11,340
working on it but for those new

521
00:24:11,340 --> 00:24:13,380
primitive we have well less than five

522
00:24:13,380 --> 00:24:15,659
years of script analysis and not a lot

523
00:24:15,659 --> 00:24:17,880
of people are working on itsu we need to

524
00:24:17,880 --> 00:24:20,159
understand them better this is also part

525
00:24:20,159 --> 00:24:22,700
of this work

526
00:24:23,280 --> 00:24:25,559
so as we're going to talk about the SQL

527
00:24:25,559 --> 00:24:28,080
problem let me recall do that for an ash

528
00:24:28,080 --> 00:24:30,000
function and a sponge constriction well

529
00:24:30,000 --> 00:24:31,919
we have these two-phase absorption and

530
00:24:31,919 --> 00:24:34,080
squeezing and each time that we add a

531
00:24:34,080 --> 00:24:36,240
block of message we apply a permutation

532
00:24:36,240 --> 00:24:38,580
to the full States and each and that we

533
00:24:38,580 --> 00:24:40,320
give an output again we apply the

534
00:24:40,320 --> 00:24:42,659
permutation to the full States and the

535
00:24:42,659 --> 00:24:44,520
idea here is that we want the

536
00:24:44,520 --> 00:24:47,120
permutation P to be a good permutation

537
00:24:47,120 --> 00:24:49,559
in particular this means that we want to

538
00:24:49,559 --> 00:24:51,960
be secure again algebraic attacks and

539
00:24:51,960 --> 00:24:54,539
the SQL problem which is the following

540
00:24:54,539 --> 00:24:57,600
we want to find X and Y so that's when

541
00:24:57,600 --> 00:24:59,940
we have X and a certain number of zero

542
00:24:59,940 --> 00:25:02,340
and then we apply the permutation P we

543
00:25:02,340 --> 00:25:04,620
want to find Y and this certain number

544
00:25:04,620 --> 00:25:07,740
of zero so let me give you an example

545
00:25:07,740 --> 00:25:09,960
with three branches this means that we

546
00:25:09,960 --> 00:25:12,900
want to find a pair x0 and X1 and a pair

547
00:25:12,900 --> 00:25:15,780
of y 0 and y1 so that's when we apply

548
00:25:15,780 --> 00:25:18,179
the permutation P we ensure to have a 0

549
00:25:18,179 --> 00:25:21,179
at solid elements as input and zero adds

550
00:25:21,179 --> 00:25:23,039
to the element as output

551
00:25:23,039 --> 00:25:24,960
so this is what we've done for the

552
00:25:24,960 --> 00:25:27,539
ethereum challenges I mean solving the

553
00:25:27,539 --> 00:25:31,260
SQL problem for aop where Q was around 2

554
00:25:31,260 --> 00:25:33,720
to 64 and it was Prime and it was for

555
00:25:33,720 --> 00:25:38,120
permutation with two or three branches

556
00:25:38,159 --> 00:25:40,140
to solve the SQL problem we need to

557
00:25:40,140 --> 00:25:42,120
solve a polynomial system so let's see

558
00:25:42,120 --> 00:25:43,500
the difference between universe and

559
00:25:43,500 --> 00:25:45,840
multivariate systems

560
00:25:45,840 --> 00:25:48,779
for a universe system well basically we

561
00:25:48,779 --> 00:25:51,779
need to find the roots of a polynomial p

562
00:25:51,779 --> 00:25:54,059
so here we just propose an alternative

563
00:25:54,059 --> 00:25:56,279
so that we do not directly compute the

564
00:25:56,279 --> 00:25:58,380
roots of the polynomial p

565
00:25:58,380 --> 00:26:01,140
here um we first come to the polynomial

566
00:26:01,140 --> 00:26:06,600
BQ that is X to DQ minus x modulo p and

567
00:26:06,600 --> 00:26:09,720
then what we do is we find the roots of

568
00:26:09,720 --> 00:26:13,140
R that's correspond to the gcd of p and

569
00:26:13,140 --> 00:26:16,140
Q and this step is quite negligible

570
00:26:16,140 --> 00:26:18,900
because R is of a low degree

571
00:26:18,900 --> 00:26:21,120
in the end we have a complexity that

572
00:26:21,120 --> 00:26:23,340
depends on the degree of the polynomial

573
00:26:23,340 --> 00:26:25,799
and the size of the field

574
00:26:25,799 --> 00:26:27,900
and while in practice we can see that

575
00:26:27,900 --> 00:26:30,360
the first step is a bit slower and then

576
00:26:30,360 --> 00:26:32,520
the second one but what we can remember

577
00:26:32,520 --> 00:26:35,039
for the following is that the complexity

578
00:26:35,039 --> 00:26:38,940
is well around linear energy

579
00:26:38,940 --> 00:26:41,460
for a multivariate system well this is

580
00:26:41,460 --> 00:26:43,760
when things become more complicated

581
00:26:43,760 --> 00:26:46,500
well we need to compute a group of bases

582
00:26:46,500 --> 00:26:49,020
from the polynomial equation and we have

583
00:26:49,020 --> 00:26:53,159
two main steps which are F5 and fglm so

584
00:26:53,159 --> 00:26:54,900
the first one I have five corresponds to

585
00:26:54,900 --> 00:26:58,320
Computing a certain order from the bases

586
00:26:58,320 --> 00:27:01,320
a gravelex an fglm correspond to

587
00:27:01,320 --> 00:27:03,659
converting this group of bases into

588
00:27:03,659 --> 00:27:06,360
another group of basis with the lexical

589
00:27:06,360 --> 00:27:08,760
graphical order so that's then you can

590
00:27:08,760 --> 00:27:10,679
find the roots of the globner bases

591
00:27:10,679 --> 00:27:12,059
polynomial

592
00:27:12,059 --> 00:27:14,279
so what is complicated here is to

593
00:27:14,279 --> 00:27:16,620
determine precisely the complexity of

594
00:27:16,620 --> 00:27:20,400
the the two-step F5 and fglm because

595
00:27:20,400 --> 00:27:21,960
well it's really depends on how the

596
00:27:21,960 --> 00:27:24,539
system behaves and if it is regular or

597
00:27:24,539 --> 00:27:27,120
not and also that you have some constant

598
00:27:27,120 --> 00:27:29,760
that are either in the Big O so usually

599
00:27:29,760 --> 00:27:32,279
what people do to choose a parameter for

600
00:27:32,279 --> 00:27:33,600
the Primitive I mean to choose a number

601
00:27:33,600 --> 00:27:36,179
of rounds that they focus on the step

602
00:27:36,179 --> 00:27:38,700
that is the most complicated and then

603
00:27:38,700 --> 00:27:40,799
they suppose the system to be regular

604
00:27:40,799 --> 00:27:44,460
and they add a certain security margin

605
00:27:44,460 --> 00:27:47,760
and also sometimes what we can guess in

606
00:27:47,760 --> 00:27:49,980
theory is not always what we can observe

607
00:27:49,980 --> 00:27:50,940
in practice

608
00:27:50,940 --> 00:27:53,460
but what we can observe is that when n

609
00:27:53,460 --> 00:27:57,000
is small and the system is regular fglm

610
00:27:57,000 --> 00:27:59,039
is the bottleneck and this is what we

611
00:27:59,039 --> 00:28:01,500
have seen here so just a short remark is

612
00:28:01,500 --> 00:28:04,080
that in our experiments we have F4

613
00:28:04,080 --> 00:28:06,600
because we use magma and in magma only

614
00:28:06,600 --> 00:28:09,120
F4 is available but this is what the

615
00:28:09,120 --> 00:28:11,580
same as F5

616
00:28:11,580 --> 00:28:13,980
so again to put it simply here we can

617
00:28:13,980 --> 00:28:16,320
remember that the complexity is around

618
00:28:16,320 --> 00:28:18,720
cubic and D so if we compare with

619
00:28:18,720 --> 00:28:22,140
Universe system well it's better to use

620
00:28:22,140 --> 00:28:24,360
Universe system when this is possible

621
00:28:24,360 --> 00:28:25,860
and this is what you have tried to do

622
00:28:25,860 --> 00:28:28,140
for the challenges

623
00:28:28,140 --> 00:28:30,539
and we also use a trick for SPN

624
00:28:30,539 --> 00:28:32,400
construction that we have applied to

625
00:28:32,400 --> 00:28:34,740
Poseidon and risky Prime

626
00:28:34,740 --> 00:28:37,140
the trick is the following normally when

627
00:28:37,140 --> 00:28:39,120
you want to solve the SQL problem well

628
00:28:39,120 --> 00:28:41,700
you build a polynomial system for the r

629
00:28:41,700 --> 00:28:44,100
runs here the idea that you will

630
00:28:44,100 --> 00:28:46,140
decompose the permutation P into two

631
00:28:46,140 --> 00:28:49,380
permutation P0 and P1 that you can put

632
00:28:49,380 --> 00:28:50,940
yourself in the middle of the two

633
00:28:50,940 --> 00:28:53,760
permutation with a Welch chosen of

634
00:28:53,760 --> 00:28:56,880
in-step space and I well chosen I mean

635
00:28:56,880 --> 00:29:00,299
that you ensure you have a zero as third

636
00:29:00,299 --> 00:29:03,120
elements as inputs so in our case we

637
00:29:03,120 --> 00:29:04,919
save two rounds because well we place

638
00:29:04,919 --> 00:29:07,260
all set after two rounds of the

639
00:29:07,260 --> 00:29:10,380
permutation so then we just start from

640
00:29:10,380 --> 00:29:13,559
the app install space XV plus G to build

641
00:29:13,559 --> 00:29:16,500
our polynomial system for R minus two

642
00:29:16,500 --> 00:29:18,480
runs

643
00:29:18,480 --> 00:29:20,820
so let's see the example of Poseidon so

644
00:29:20,820 --> 00:29:23,159
let me recall you that Poseidon is SPN

645
00:29:23,159 --> 00:29:24,840
construction with a linear layer

646
00:29:24,840 --> 00:29:27,600
addition of constants and here the s box

647
00:29:27,600 --> 00:29:30,480
is X to the alpha where Alpha is chosen

648
00:29:30,480 --> 00:29:32,399
to be small and it depends on size of

649
00:29:32,399 --> 00:29:34,980
the field so for the challenges we add

650
00:29:34,980 --> 00:29:37,740
Alpha equal to 3. and the particularity

651
00:29:37,740 --> 00:29:40,020
of positions that you have full runs and

652
00:29:40,020 --> 00:29:42,899
partial runs for full run you want you

653
00:29:42,899 --> 00:29:45,419
have one Xbox per Branch but for the

654
00:29:45,419 --> 00:29:47,700
partial one you have only one Xbox per

655
00:29:47,700 --> 00:29:49,559
round so this means that you can

656
00:29:49,559 --> 00:29:52,320
increase the degree quite rapidly

657
00:29:52,320 --> 00:29:55,140
without I mean without having too many

658
00:29:55,140 --> 00:29:58,980
Xboxes around

659
00:30:00,000 --> 00:30:03,000
so here this is um well on the the right

660
00:30:03,000 --> 00:30:05,520
path our weevils are off in Subspace uh

661
00:30:05,520 --> 00:30:07,860
for a Poseidon so in the end what we get

662
00:30:07,860 --> 00:30:10,080
is something in the form uh H Cube X

663
00:30:10,080 --> 00:30:13,020
Bishop x g where B and G are fully

664
00:30:13,020 --> 00:30:14,640
summoned by a

665
00:30:14,640 --> 00:30:16,620
and in the case of Poseidon this means

666
00:30:16,620 --> 00:30:18,659
that we save two runs in the polynomial

667
00:30:18,659 --> 00:30:19,860
system

668
00:30:19,860 --> 00:30:22,080
and we managed to build a universe

669
00:30:22,080 --> 00:30:24,480
system instead of multivariate system

670
00:30:24,480 --> 00:30:27,120
so here are a complexity for our attack

671
00:30:27,120 --> 00:30:29,340
so we managed to break some ethereum

672
00:30:29,340 --> 00:30:31,559
challenges but as you can see we're not

673
00:30:31,559 --> 00:30:34,080
better as the designers claims but we

674
00:30:34,080 --> 00:30:35,700
have something practical and we also

675
00:30:35,700 --> 00:30:37,679
need to to take into account in the

676
00:30:37,679 --> 00:30:40,919
claims that we can skip to runs with the

677
00:30:40,919 --> 00:30:43,080
trick

678
00:30:43,080 --> 00:30:45,480
now let's have a look at rescue Prime so

679
00:30:45,480 --> 00:30:48,240
again this is SPN constriction uh with a

680
00:30:48,240 --> 00:30:50,520
linear layer addition of constants and

681
00:30:50,520 --> 00:30:53,039
this time the particularity is that we

682
00:30:53,039 --> 00:30:55,559
have two type of s-boxes

683
00:30:55,559 --> 00:30:58,559
so one round of rescue Prime is composed

684
00:30:58,559 --> 00:31:00,419
of two-step for the first step you use

685
00:31:00,419 --> 00:31:03,600
the s-box so x to the alpha and for the

686
00:31:03,600 --> 00:31:06,360
Second Step you use the inverse of the s

687
00:31:06,360 --> 00:31:09,539
box so x to the inverse of alpha

688
00:31:09,539 --> 00:31:12,120
the idea is that using the inverse you

689
00:31:12,120 --> 00:31:13,919
will increase the degree uh quite

690
00:31:13,919 --> 00:31:14,820
rapidly

691
00:31:14,820 --> 00:31:16,679
so let me give you a concrete example

692
00:31:16,679 --> 00:31:19,140
but the challenge is the peak was this

693
00:31:19,140 --> 00:31:21,299
one so if we have Alpha equals to three

694
00:31:21,299 --> 00:31:23,940
the inverse is this one so well this is

695
00:31:23,940 --> 00:31:25,799
quite obvious that the degree will be

696
00:31:25,799 --> 00:31:28,679
higher using the inverse than using the

697
00:31:28,679 --> 00:31:29,640
cube

698
00:31:29,640 --> 00:31:31,860
but it's another problem to perform the

699
00:31:31,860 --> 00:31:34,500
verification or to build our polynomial

700
00:31:34,500 --> 00:31:36,720
system because we can go on One

701
00:31:36,720 --> 00:31:39,059
Direction when we have the s box and on

702
00:31:39,059 --> 00:31:41,159
the other direction when we have the

703
00:31:41,159 --> 00:31:44,299
inverse of the Xbox

704
00:31:44,580 --> 00:31:47,340
again we'll apply our trick for rescue

705
00:31:47,340 --> 00:31:50,640
Prime so here this is how we built RF in

706
00:31:50,640 --> 00:31:53,820
Subspace and in the end we get the cube

707
00:31:53,820 --> 00:31:57,240
root of ax cube root of BX and G and

708
00:31:57,240 --> 00:32:00,360
again B and G are for determined by a

709
00:32:00,360 --> 00:32:03,120
so here this means that we save one run

710
00:32:03,120 --> 00:32:05,159
of rescue because again this is two

711
00:32:05,159 --> 00:32:07,440
steps but only one room

712
00:32:07,440 --> 00:32:09,299
and in the case of rescue this is a

713
00:32:09,299 --> 00:32:11,340
multivariate system

714
00:32:11,340 --> 00:32:13,559
so here we managed to break the first

715
00:32:13,559 --> 00:32:16,140
challenge but well again our complexity

716
00:32:16,140 --> 00:32:17,279
is not

717
00:32:17,279 --> 00:32:19,440
um better than the claims but we have

718
00:32:19,440 --> 00:32:21,240
something practical and we also need to

719
00:32:21,240 --> 00:32:23,760
do icons that we can save two runs with

720
00:32:23,760 --> 00:32:26,179
the trick

721
00:32:26,399 --> 00:32:28,919
finally let's have a quick look at a

722
00:32:28,919 --> 00:32:31,080
seminion so again it wasn't part of the

723
00:32:31,080 --> 00:32:32,580
challenges

724
00:32:32,580 --> 00:32:34,200
and seminar is a bit different because

725
00:32:34,200 --> 00:32:36,960
this is not SPN constriction it uses

726
00:32:36,960 --> 00:32:39,419
tofully Gates so tofully Gates mean that

727
00:32:39,419 --> 00:32:43,500
from a b and c you give a b and c plus a

728
00:32:43,500 --> 00:32:45,600
b and this is what is used in the round

729
00:32:45,600 --> 00:32:47,399
function that should repeat certain

730
00:32:47,399 --> 00:32:50,279
number of time for the permutation PC

731
00:32:50,279 --> 00:32:52,559
and the permutation PE

732
00:32:52,559 --> 00:32:55,320
so a short remark here is that the key

733
00:32:55,320 --> 00:32:58,500
is at it at this point and to build

734
00:32:58,500 --> 00:33:01,740
their polynomial system the author

735
00:33:01,740 --> 00:33:04,559
propose a weaker scheme by adding the

736
00:33:04,559 --> 00:33:06,899
key just after the permutation

737
00:33:06,899 --> 00:33:09,059
so in the end they get six equations

738
00:33:09,059 --> 00:33:12,419
over six variable from degree 2 to the r

739
00:33:12,419 --> 00:33:16,500
minus 1 until 2 to the r Plus 2. for our

740
00:33:16,500 --> 00:33:18,480
algebraic attack we choose to focus on

741
00:33:18,480 --> 00:33:20,580
the original scheme

742
00:33:20,580 --> 00:33:22,679
and we first

743
00:33:22,679 --> 00:33:25,320
um with some equation by generating

744
00:33:25,320 --> 00:33:28,200
those equation with X and Y and we do

745
00:33:28,200 --> 00:33:31,440
the same with X Prime and Y Prime and in

746
00:33:31,440 --> 00:33:32,940
the end what we get in something with

747
00:33:32,940 --> 00:33:35,760
square equation over four variables from

748
00:33:35,760 --> 00:33:38,700
degree 2 to the r minus 1 and T is three

749
00:33:38,700 --> 00:33:40,980
times two to the r minus 1.

750
00:33:40,980 --> 00:33:44,159
so this means that the design has much

751
00:33:44,159 --> 00:33:48,320
less security margin than unstipated

752
00:33:48,659 --> 00:33:50,399
so what we've seen during this

753
00:33:50,399 --> 00:33:52,860
presentation is that while choosing the

754
00:33:52,860 --> 00:33:55,799
parameters for aop is not as simple as

755
00:33:55,799 --> 00:33:58,380
just say okay we have this attack let's

756
00:33:58,380 --> 00:34:00,840
computer complexity and then a determine

757
00:34:00,840 --> 00:34:02,700
the number of runs well it's more

758
00:34:02,700 --> 00:34:04,919
complicated than this because we need to

759
00:34:04,919 --> 00:34:05,880
study

760
00:34:05,880 --> 00:34:08,460
um different models and sometimes the

761
00:34:08,460 --> 00:34:10,199
complexity is a bit complicated to

762
00:34:10,199 --> 00:34:12,480
determine so here what just what we

763
00:34:12,480 --> 00:34:13,980
propose are just some suggestion for

764
00:34:13,980 --> 00:34:16,800
future designs so first consider as many

765
00:34:16,800 --> 00:34:19,859
variants of concluding as possible

766
00:34:19,859 --> 00:34:21,480
um also built Universe instead of

767
00:34:21,480 --> 00:34:23,399
multivariate system when this is

768
00:34:23,399 --> 00:34:25,619
possible start and end with a linear

769
00:34:25,619 --> 00:34:27,480
layer and be careful that two runs can

770
00:34:27,480 --> 00:34:30,060
be skipped with a trick

771
00:34:30,060 --> 00:34:32,339
so in the end this is only one example

772
00:34:32,339 --> 00:34:35,940
of some Crypt analysis for those aop a

773
00:34:35,940 --> 00:34:38,099
lot of work remain to be done

774
00:34:38,099 --> 00:34:40,440
thank you very much for the answer thank

775
00:34:40,440 --> 00:34:42,619
you

776
00:34:45,480 --> 00:34:49,099
so any questions in combat

777
00:34:53,639 --> 00:34:57,440
no any questions in Beijing

778
00:35:03,180 --> 00:35:05,660
you're standing in between lunch so

779
00:35:05,660 --> 00:35:09,000
people are hungry maybe but I I have a

780
00:35:09,000 --> 00:35:10,440
question you mentioned in the beginning

781
00:35:10,440 --> 00:35:13,560
that there were some uh prizes

782
00:35:13,560 --> 00:35:14,940
so

783
00:35:14,940 --> 00:35:15,480
um

784
00:35:15,480 --> 00:35:19,140
did did you get some ether coins or or

785
00:35:19,140 --> 00:35:20,820
did you win these prizes you were

786
00:35:20,820 --> 00:35:22,200
mentioning the beginning how did this

787
00:35:22,200 --> 00:35:27,379
work yeah so first slide

788
00:35:28,980 --> 00:35:31,220
um

789
00:35:31,320 --> 00:35:34,020
because it was written well very small

790
00:35:34,020 --> 00:35:35,820
but what is

791
00:35:35,820 --> 00:35:36,760
um

792
00:35:36,760 --> 00:35:38,160
[Music]

793
00:35:38,160 --> 00:35:41,820
crossed or the one that we want

794
00:35:41,820 --> 00:35:43,619
okay you were allowed to keep the money

795
00:35:43,619 --> 00:35:45,000
or you need to go to the research group

796
00:35:45,000 --> 00:35:47,839
what was that

797
00:35:49,859 --> 00:35:51,020
yeah

798
00:35:51,020 --> 00:35:55,099
okay no answer

799
00:36:02,820 --> 00:36:05,400
okay any question uh other question in

800
00:36:05,400 --> 00:36:08,540
Beijing or in Kobe

801
00:36:13,380 --> 00:36:15,540
if not then let's end the session here

802
00:36:15,540 --> 00:36:18,380
and thank all the speakers

803
00:36:19,079 --> 00:36:22,079
foreign

