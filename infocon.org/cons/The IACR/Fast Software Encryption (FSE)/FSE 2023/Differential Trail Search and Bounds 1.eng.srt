1
00:00:00,000 --> 00:00:03,659
touch and Bones Part One in this session

2
00:00:03,659 --> 00:00:06,779
we will have two papers the first one is

3
00:00:06,779 --> 00:00:10,080
entitled differential chill search in

4
00:00:10,080 --> 00:00:12,900
cryptographic Primitives with big circle

5
00:00:12,900 --> 00:00:18,020
he the authors is

6
00:00:21,500 --> 00:00:23,640
Lorenzo grazi

7
00:00:23,640 --> 00:00:26,300
Sylvia Mela

8
00:00:26,300 --> 00:00:31,160
will give the presentation welcome

9
00:00:33,960 --> 00:00:38,000
can you hear me

10
00:00:39,540 --> 00:00:42,660
hello okay good thanks for the

11
00:00:42,660 --> 00:00:45,139
introduction

12
00:00:45,660 --> 00:00:48,120
yeah the title of my presentation is the

13
00:00:48,120 --> 00:00:49,800
thresholds research in cryptography

14
00:00:49,800 --> 00:00:52,440
parameters with big circle 3 and this is

15
00:00:52,440 --> 00:00:55,620
a joint work with Sylvia Miller during

16
00:00:55,620 --> 00:00:58,559
the crossy and neon diamond

17
00:00:58,559 --> 00:01:00,980
first of all a quick introduction

18
00:01:00,980 --> 00:01:03,480
differential crypto analysis is one of

19
00:01:03,480 --> 00:01:06,060
the most powerful and well-known

20
00:01:06,060 --> 00:01:07,799
equipped analysis

21
00:01:07,799 --> 00:01:11,760
uh the main idea is to uh so let's say

22
00:01:11,760 --> 00:01:14,580
we have a algorithm that has uh all

23
00:01:14,580 --> 00:01:16,680
around the cryptography primitive that

24
00:01:16,680 --> 00:01:19,380
is all around and then as input we give

25
00:01:19,380 --> 00:01:23,220
m0 to it and it computes the value c0 at

26
00:01:23,220 --> 00:01:26,400
the output and let's say we do the same

27
00:01:26,400 --> 00:01:29,700
situ the same scenario for another uh

28
00:01:29,700 --> 00:01:34,140
input and one and it computes C1 then

29
00:01:34,140 --> 00:01:37,500
the difference between m0 and M1 uh

30
00:01:37,500 --> 00:01:39,780
let's call it Delta zero and the

31
00:01:39,780 --> 00:01:42,900
difference between c0 and C1 at the

32
00:01:42,900 --> 00:01:45,299
output let's call it Delta r

33
00:01:45,299 --> 00:01:47,640
then we can say that the security that

34
00:01:47,640 --> 00:01:51,000
this uh primitive provides against

35
00:01:51,000 --> 00:01:55,740
differential attack is upper bounded by

36
00:01:55,740 --> 00:01:58,560
the probability that this Delta R goes

37
00:01:58,560 --> 00:02:01,619
to Delta 0 goes to Delta r

38
00:02:01,619 --> 00:02:04,979
this is called differential probability

39
00:02:04,979 --> 00:02:07,860
but it's hard to determine this value in

40
00:02:07,860 --> 00:02:10,440
order to determine this value and make

41
00:02:10,440 --> 00:02:13,560
it easier to determine we divide this

42
00:02:13,560 --> 00:02:17,160
all around into all separate rounds

43
00:02:17,160 --> 00:02:19,560
then we will have something that is

44
00:02:19,560 --> 00:02:22,500
called differential Trail and it means

45
00:02:22,500 --> 00:02:26,400
so we show it with a QR and the goal is

46
00:02:26,400 --> 00:02:29,640
to go from Delta 0 to B1 after one round

47
00:02:29,640 --> 00:02:34,319
from P1 to P2 after two rounds and so

48
00:02:34,319 --> 00:02:37,260
uh then we can say that uh under some

49
00:02:37,260 --> 00:02:40,140
assumptions the differential probability

50
00:02:40,140 --> 00:02:43,440
of this differential trade is equal to

51
00:02:43,440 --> 00:02:47,580
the DP of Delta 0 goes to B1 and B1 goes

52
00:02:47,580 --> 00:02:50,340
to B2 and so on

53
00:02:50,340 --> 00:02:53,819
uh then we can say that uh yeah again

54
00:02:53,819 --> 00:02:56,340
under some consumption assumptions we

55
00:02:56,340 --> 00:03:00,300
can say that uh DP of Delta 0 goes to

56
00:03:00,300 --> 00:03:03,360
Delta R is almost equal to the P of this

57
00:03:03,360 --> 00:03:05,220
differential tray

58
00:03:05,220 --> 00:03:07,860
I have to introduce one term that I'm

59
00:03:07,860 --> 00:03:10,080
using I will use in this presentation

60
00:03:10,080 --> 00:03:12,959
and it it is called weight and the

61
00:03:12,959 --> 00:03:15,480
weight of a difference Pi goes to pi

62
00:03:15,480 --> 00:03:20,099
plus 1 is equal to minus log 2 of DP

63
00:03:20,099 --> 00:03:22,980
and it is just for Simplicity and it

64
00:03:22,980 --> 00:03:25,560
means that for instance instead of DP

65
00:03:25,560 --> 00:03:28,140
equal to 2 to the power minus n we just

66
00:03:28,140 --> 00:03:32,000
simply say that the weight is n

67
00:03:32,000 --> 00:03:35,159
then we can conclude that the weight of

68
00:03:35,159 --> 00:03:37,260
a differential tray is almost equal to

69
00:03:37,260 --> 00:03:42,299
the weight of Delta 0 goes to P1 and the

70
00:03:42,299 --> 00:03:45,900
plus the weight that B1 goes to B2 and

71
00:03:45,900 --> 00:03:48,379
so on

72
00:03:48,500 --> 00:03:51,840
and uh so because the title of my

73
00:03:51,840 --> 00:03:54,299
presentation is uh differential Trace

74
00:03:54,299 --> 00:03:56,879
search in cryptography Primitives with

75
00:03:56,879 --> 00:03:59,519
Peak circuitry I have to also explain uh

76
00:03:59,519 --> 00:04:01,220
what is free function

77
00:04:01,220 --> 00:04:05,720
uh so this is how uh a free function uh

78
00:04:05,720 --> 00:04:09,360
looks like in order to compute each bit

79
00:04:09,360 --> 00:04:11,760
of the output we need to know the value

80
00:04:11,760 --> 00:04:15,480
of three bits of the input we compute

81
00:04:15,480 --> 00:04:19,620
the not of B1 and end it with P2 and

82
00:04:19,620 --> 00:04:22,139
then the result will be absorbed by a

83
00:04:22,139 --> 00:04:26,880
bit at position P0 and it gives us the

84
00:04:26,880 --> 00:04:29,699
value of a0 we do it for the for all

85
00:04:29,699 --> 00:04:30,800
bits

86
00:04:30,800 --> 00:04:33,960
of the output in order to get the output

87
00:04:33,960 --> 00:04:34,979
values

88
00:04:34,979 --> 00:04:39,120
if if the value of n is Big we say that

89
00:04:39,120 --> 00:04:43,020
this 3 is working on a big circle

90
00:04:43,020 --> 00:04:46,560
and by big I mean like for subterranean

91
00:04:46,560 --> 00:04:48,780
so the application of my work is

92
00:04:48,780 --> 00:04:51,960
uncertained now for that's the value of

93
00:04:51,960 --> 00:04:53,419
n is

94
00:04:53,419 --> 00:04:57,560
257 which is a big knob

95
00:04:57,720 --> 00:05:00,960
uh okay let's talk about generating

96
00:05:00,960 --> 00:05:03,660
around differential three so this is how

97
00:05:03,660 --> 00:05:07,080
uh an all-around differential thread

98
00:05:07,080 --> 00:05:09,060
looks like this is the input difference

99
00:05:09,060 --> 00:05:11,220
and this is the output and these are the

100
00:05:11,220 --> 00:05:15,240
differences after each round

101
00:05:15,240 --> 00:05:16,740
uh

102
00:05:16,740 --> 00:05:20,880
okay each round of the modern ciphers

103
00:05:20,880 --> 00:05:24,180
can be divided into two layers so the

104
00:05:24,180 --> 00:05:26,340
null linear layer that is called in this

105
00:05:26,340 --> 00:05:28,220
paper is called

106
00:05:28,220 --> 00:05:30,840
and the linear layer that is called

107
00:05:30,840 --> 00:05:33,360
Lambda I just copied the differences

108
00:05:33,360 --> 00:05:36,780
after each round and we can call the

109
00:05:36,780 --> 00:05:42,240
differences P4 linear layer AIS

110
00:05:42,240 --> 00:05:45,120
then the DP of so it's it's known that

111
00:05:45,120 --> 00:05:49,020
the DP of a i goes to b i over a linear

112
00:05:49,020 --> 00:05:50,880
layer is equal to one or two to the

113
00:05:50,880 --> 00:05:53,340
power zero then the weight is equal to

114
00:05:53,340 --> 00:05:56,539
zero so the only thing that we need to

115
00:05:56,539 --> 00:05:58,979
compute in order to compute the weight

116
00:05:58,979 --> 00:06:02,520
of a trail a differential thread is just

117
00:06:02,520 --> 00:06:05,699
Computing the weights over non-linear

118
00:06:05,699 --> 00:06:07,199
layers

119
00:06:07,199 --> 00:06:09,720
and the goal of our work is to compute

120
00:06:09,720 --> 00:06:14,039
this for an all-around trade

121
00:06:14,039 --> 00:06:17,039
but it's not efficient to start with or

122
00:06:17,039 --> 00:06:19,500
round three so in order to do it more

123
00:06:19,500 --> 00:06:21,720
efficient we start with two round

124
00:06:21,720 --> 00:06:24,300
threads the reason is explaining the

125
00:06:24,300 --> 00:06:25,560
paper

126
00:06:25,560 --> 00:06:28,500
uh this is how a two-round trail uh

127
00:06:28,500 --> 00:06:29,520
looks like

128
00:06:29,520 --> 00:06:32,840
uh since uh free function has degree two

129
00:06:32,840 --> 00:06:36,539
the weight is determined by just its

130
00:06:36,539 --> 00:06:39,360
input and it is also mentioned in one of

131
00:06:39,360 --> 00:06:42,860
the references of our paper

132
00:06:42,860 --> 00:06:46,440
then the weight that was completed like

133
00:06:46,440 --> 00:06:49,520
this in the previous slide can be

134
00:06:49,520 --> 00:06:51,380
can simply

135
00:06:51,380 --> 00:06:54,180
we can simply write it as this one which

136
00:06:54,180 --> 00:06:58,080
is just so the input of 3 is p i and bi

137
00:06:58,080 --> 00:07:00,180
plus one so we can just simply write it

138
00:07:00,180 --> 00:07:02,340
like this one

139
00:07:02,340 --> 00:07:07,620
uh we we can also ignore the value of a

140
00:07:07,620 --> 00:07:11,160
i plus 2 and b i plus 2 in this formula

141
00:07:11,160 --> 00:07:13,199
because the only thing that we need to

142
00:07:13,199 --> 00:07:14,759
compute the weight of these two round

143
00:07:14,759 --> 00:07:18,120
Trails is p i and p i plus so we can

144
00:07:18,120 --> 00:07:20,699
ignore this part we can remove it and

145
00:07:20,699 --> 00:07:23,460
just generate this one

146
00:07:23,460 --> 00:07:27,440
and another thing is that uh I have to

147
00:07:27,440 --> 00:07:30,660
Define is minimum reverse plates which

148
00:07:30,660 --> 00:07:34,500
is the minimum over ways of all comp all

149
00:07:34,500 --> 00:07:37,560
bis that are compatible with AI plus one

150
00:07:37,560 --> 00:07:40,680
so if we generate all bis that are

151
00:07:40,680 --> 00:07:43,919
compatible with AI plus one and compute

152
00:07:43,919 --> 00:07:46,319
the minimum weight over all of them

153
00:07:46,319 --> 00:07:49,139
then it's called minimum reverse rate

154
00:07:49,139 --> 00:07:52,139
and in this paper we introduced a new

155
00:07:52,139 --> 00:07:54,780
method to compute this value

156
00:07:54,780 --> 00:07:59,099
it allows us to ignore bi also so if we

157
00:07:59,099 --> 00:08:01,620
can find a way to compute the weight of

158
00:08:01,620 --> 00:08:05,099
this debate based on AI plus 1 and bi

159
00:08:05,099 --> 00:08:06,960
plus 1 then we don't need to compute

160
00:08:06,960 --> 00:08:07,800
this

161
00:08:07,800 --> 00:08:12,840
this leads to uh introducing uh new uh

162
00:08:12,840 --> 00:08:15,180
thing that is called two round track

163
00:08:15,180 --> 00:08:17,520
core it's not new we didn't introduce

164
00:08:17,520 --> 00:08:20,340
but uh yeah this is two round record

165
00:08:20,340 --> 00:08:23,520
and this is how it looks so the goal is

166
00:08:23,520 --> 00:08:25,379
to generate all these two run triggers

167
00:08:25,379 --> 00:08:28,560
up to a specific rate

168
00:08:28,560 --> 00:08:32,760
in order to do that we generate all a

169
00:08:32,760 --> 00:08:34,940
one values

170
00:08:34,940 --> 00:08:38,760
and then we compute P1 based on the

171
00:08:38,760 --> 00:08:42,020
value of A1 which is just Lambda of A1

172
00:08:42,020 --> 00:08:46,560
and then if the minimum reverse rate of

173
00:08:46,560 --> 00:08:49,980
a plus weight of B is smaller than T2

174
00:08:49,980 --> 00:08:52,580
which was the

175
00:08:52,580 --> 00:08:54,360
outer bound

176
00:08:54,360 --> 00:08:57,000
then we can we say that this turnout

177
00:08:57,000 --> 00:09:00,540
record is a valid uh to run track record

178
00:09:00,540 --> 00:09:04,080
but how to scan the space of all two

179
00:09:04,080 --> 00:09:06,060
round three equals up to a certain way

180
00:09:06,060 --> 00:09:09,060
T2 in order to do that we use the three

181
00:09:09,060 --> 00:09:11,760
search approach and that was uh used

182
00:09:11,760 --> 00:09:17,580
also in a paper of Mela as all in tusk

183
00:09:17,580 --> 00:09:19,920
2016.

184
00:09:19,920 --> 00:09:24,300
and the way that they generate and

185
00:09:24,300 --> 00:09:27,980
regenerated the R3

186
00:09:27,980 --> 00:09:31,560
was the same each node of the three

187
00:09:31,560 --> 00:09:35,399
represents an order list of activists at

188
00:09:35,399 --> 00:09:39,120
A1 and its corresponding activities at

189
00:09:39,120 --> 00:09:40,920
B1

190
00:09:40,920 --> 00:09:43,980
three functions were used in order to

191
00:09:43,980 --> 00:09:46,200
visit all nodes of the three the first

192
00:09:46,200 --> 00:09:48,360
function was two child function that

193
00:09:48,360 --> 00:09:51,660
adds a new active bits to A1

194
00:09:51,660 --> 00:09:53,640
to a sibling function that changes the

195
00:09:53,640 --> 00:09:57,060
last added active bit of A1 and two

196
00:09:57,060 --> 00:09:59,100
parent functions that delete the last

197
00:09:59,100 --> 00:10:02,160
active bits of A1

198
00:10:02,160 --> 00:10:05,839
here we should again

199
00:10:05,839 --> 00:10:07,980
introduce another term that is called

200
00:10:07,980 --> 00:10:10,680
score and it is a lower bound on the

201
00:10:10,680 --> 00:10:14,160
weight of a node and all it is

202
00:10:14,160 --> 00:10:16,680
descendants in the tree

203
00:10:16,680 --> 00:10:19,880
if you can have such a

204
00:10:19,880 --> 00:10:23,580
bound such a lower bound this allows us

205
00:10:23,580 --> 00:10:26,399
to prune the three it means that if a

206
00:10:26,399 --> 00:10:30,060
node and all is descendants uh uh have

207
00:10:30,060 --> 00:10:33,660
like a waiter higher than our budget we

208
00:10:33,660 --> 00:10:36,779
can simply ignore them and uh do not go

209
00:10:36,779 --> 00:10:41,040
into that branch of the tree

210
00:10:41,040 --> 00:10:44,640
it leads to a faster scan of a tree or

211
00:10:44,640 --> 00:10:47,220
uh equivalently at the same time it

212
00:10:47,220 --> 00:10:49,680
leads to a lot scanning the large a

213
00:10:49,680 --> 00:10:51,660
larger space

214
00:10:51,660 --> 00:10:53,959
uh score can be

215
00:10:53,959 --> 00:10:58,760
defined separately for a 1 and B1 here

216
00:10:58,760 --> 00:11:03,240
and because we said that in our paper we

217
00:11:03,240 --> 00:11:05,339
introduce a new generic method to

218
00:11:05,339 --> 00:11:08,279
compute the score at A1

219
00:11:08,279 --> 00:11:10,740
and also a new method to compute the

220
00:11:10,740 --> 00:11:13,680
score as B1 for subterranean the reason

221
00:11:13,680 --> 00:11:17,160
that is not generic is that the score at

222
00:11:17,160 --> 00:11:20,100
P1 really depends on the properties of

223
00:11:20,100 --> 00:11:23,339
linear layer so yeah it differs for each

224
00:11:23,339 --> 00:11:25,820
Cipher

225
00:11:25,940 --> 00:11:28,680
uh and then let's say we have all two

226
00:11:28,680 --> 00:11:31,079
round three course and uh but the goal

227
00:11:31,079 --> 00:11:36,120
was to uh generate uh all-round trips uh

228
00:11:36,120 --> 00:11:38,220
in order to do that we need to extend

229
00:11:38,220 --> 00:11:40,160
the trade so this is a two rounds record

230
00:11:40,160 --> 00:11:43,320
uh in order to exactly extended in both

231
00:11:43,320 --> 00:11:47,459
directions forward extension we generate

232
00:11:47,459 --> 00:11:51,540
all a to a a2s that are compatible with

233
00:11:51,540 --> 00:11:55,260
B1 and it is known how to do that

234
00:11:55,260 --> 00:11:58,200
and then we can simply compute p2s

235
00:11:58,200 --> 00:12:01,200
because there is only one linear layer

236
00:12:01,200 --> 00:12:03,899
and it can be computed easily for

237
00:12:03,899 --> 00:12:07,079
Blackboard Direction uh for backward

238
00:12:07,079 --> 00:12:09,779
extension we introduce a new method to

239
00:12:09,779 --> 00:12:13,380
efficiently generates all b i b zeros

240
00:12:13,380 --> 00:12:17,519
that are compatible with A1 in our paper

241
00:12:17,519 --> 00:12:20,760
we introduce it and then we can simply

242
00:12:20,760 --> 00:12:24,120
compute the value of a zeros

243
00:12:24,120 --> 00:12:27,540
but what is the application so first of

244
00:12:27,540 --> 00:12:30,240
all a quick motivation so this is The

245
00:12:30,240 --> 00:12:33,360
fpga Benchmark of nist library

246
00:12:33,360 --> 00:12:34,519
competition

247
00:12:34,519 --> 00:12:38,760
of Route 2 candidates of yeah this

248
00:12:38,760 --> 00:12:41,040
lightweight competition

249
00:12:41,040 --> 00:12:44,760
uh as you can see I just copy pasted the

250
00:12:44,760 --> 00:12:50,820
this figure from this uh reference as

251
00:12:50,820 --> 00:12:53,459
you can see Subterranean is here it

252
00:12:53,459 --> 00:12:55,560
means that it has the lowest energy per

253
00:12:55,560 --> 00:12:59,220
bit uh amongst uh all around two

254
00:12:59,220 --> 00:13:01,800
candidates that already set here with

255
00:13:01,800 --> 00:13:04,980
the specific uh

256
00:13:04,980 --> 00:13:09,540
message links and frequency

257
00:13:10,399 --> 00:13:15,060
and also yeah so this is a

258
00:13:15,060 --> 00:13:17,519
maybe it's interesting the ascon is here

259
00:13:17,519 --> 00:13:19,380
this is the winner of this competition

260
00:13:19,380 --> 00:13:22,380
and it was also one of the best

261
00:13:22,380 --> 00:13:25,440
and also for throughput over area again

262
00:13:25,440 --> 00:13:28,320
Subterranean was one of the best and the

263
00:13:28,320 --> 00:13:30,959
winner of the competition ascon is also

264
00:13:30,959 --> 00:13:34,040
yeah here

265
00:13:34,220 --> 00:13:39,120
but how this is look like this is the

266
00:13:39,120 --> 00:13:42,959
Subterranean round function uh I

267
00:13:42,959 --> 00:13:46,920
explained how he works so this is the

268
00:13:46,920 --> 00:13:49,220
only non-linear layer that this

269
00:13:49,220 --> 00:13:51,959
function has

270
00:13:51,959 --> 00:13:54,540
and then we have a Yota function that is

271
00:13:54,540 --> 00:13:58,200
a simple not gate here and then we have

272
00:13:58,200 --> 00:14:00,480
Theta function that has three bits at

273
00:14:00,480 --> 00:14:03,720
position I I plus 3 and I Plus 8 like

274
00:14:03,720 --> 00:14:07,260
here as them and a compute a one bit at

275
00:14:07,260 --> 00:14:09,600
the output and then after all we have a

276
00:14:09,600 --> 00:14:16,500
pi function that Maps uh S12 I to SI

277
00:14:16,500 --> 00:14:18,600
like this

278
00:14:18,600 --> 00:14:22,500
uh okay so the goal of our work was to

279
00:14:22,500 --> 00:14:24,180
scan eight round three course in

280
00:14:24,180 --> 00:14:26,700
subterranean and the reason that we

281
00:14:26,700 --> 00:14:28,620
choose H round because it was because

282
00:14:28,620 --> 00:14:31,019
all three Primitives of subterranean had

283
00:14:31,019 --> 00:14:33,480
at this eighth round in their uh

284
00:14:33,480 --> 00:14:35,880
algorithm

285
00:14:35,880 --> 00:14:38,519
in order to do that we scanned all two

286
00:14:38,519 --> 00:14:41,160
round triggers up to where 28 or all

287
00:14:41,160 --> 00:14:43,260
three round three cores up to it for T

288
00:14:43,260 --> 00:14:47,639
and all four rounds up to weight 57. but

289
00:14:47,639 --> 00:14:50,760
for this part we didn't found uh yeah

290
00:14:50,760 --> 00:14:53,699
there is no Trail core up to grade 57 it

291
00:14:53,699 --> 00:14:56,459
means that the best forearm triggers

292
00:14:56,459 --> 00:15:02,220
that can be that is possible has paid 58

293
00:15:02,220 --> 00:15:04,560
and that is exactly what we found in our

294
00:15:04,560 --> 00:15:06,600
Trace search

295
00:15:06,600 --> 00:15:10,260
uh in the worst case two four rounds uh

296
00:15:10,260 --> 00:15:13,019
with weight 58 can be compatible with

297
00:15:13,019 --> 00:15:17,160
each other and they can form uh an eight

298
00:15:17,160 --> 00:15:20,820
round tray core it means that in the

299
00:15:20,820 --> 00:15:23,160
worst case we can have two four rounds

300
00:15:23,160 --> 00:15:27,060
between 58 that if we add the Rays then

301
00:15:27,060 --> 00:15:30,360
the weight of an eight round tractor can

302
00:15:30,360 --> 00:15:32,000
be at least

303
00:15:32,000 --> 00:15:34,980
116. and based on uh

304
00:15:34,980 --> 00:15:39,680
this work we could prove a bound

305
00:15:39,680 --> 00:15:44,399
a new lower bounds that are listed here

306
00:15:44,399 --> 00:15:47,760
and it's allowed us to uh

307
00:15:47,760 --> 00:15:50,399
uh like improve the lower one on the

308
00:15:50,399 --> 00:15:54,060
weight of a transport by 18. or

309
00:15:54,060 --> 00:15:57,300
equivalently it means that we scan 2 to

310
00:15:57,300 --> 00:15:59,360
the power 18

311
00:15:59,360 --> 00:16:02,600
bigger space

312
00:16:02,820 --> 00:16:06,420
as conclusion we introduced a score

313
00:16:06,420 --> 00:16:09,959
function in in our paper we introduce a

314
00:16:09,959 --> 00:16:11,940
score function that lower bounds the

315
00:16:11,940 --> 00:16:14,639
weight of a two round tracker and all

316
00:16:14,639 --> 00:16:17,699
its descendants during that research

317
00:16:17,699 --> 00:16:19,860
we introduced a method to efficiently

318
00:16:19,860 --> 00:16:23,699
compute the minimum wage of a trade core

319
00:16:23,699 --> 00:16:26,279
a method to efficiently perform backward

320
00:16:26,279 --> 00:16:29,100
extension a software tool for

321
00:16:29,100 --> 00:16:31,079
differential to research tailored for

322
00:16:31,079 --> 00:16:33,800
subterranean and that allows us to

323
00:16:33,800 --> 00:16:39,360
define a new uh to find a new and more

324
00:16:39,360 --> 00:16:42,839
precise lower bounds and certainly

325
00:16:42,839 --> 00:16:45,300
at the end we can say that this research

326
00:16:45,300 --> 00:16:47,279
is a very strong and useful tool and

327
00:16:47,279 --> 00:16:49,220
that can be used for

328
00:16:49,220 --> 00:16:52,860
both designers and attackers

329
00:16:52,860 --> 00:16:54,959
thanks for your attention and I would be

330
00:16:54,959 --> 00:16:58,680
happy to answer your questions if

331
00:16:58,680 --> 00:17:03,138
any question here in Beijing

332
00:17:08,520 --> 00:17:13,459
any question you call me oh yes

333
00:17:16,079 --> 00:17:18,240
hello can you help me

334
00:17:18,240 --> 00:17:20,040
yes

335
00:17:20,040 --> 00:17:20,780
yeah

336
00:17:20,780 --> 00:17:25,079
I noticed that you second the

337
00:17:25,079 --> 00:17:29,220
differential car for too long still

338
00:17:29,220 --> 00:17:32,520
running and so on I wonder uh have you

339
00:17:32,520 --> 00:17:35,520
found our differential rather than our

340
00:17:35,520 --> 00:17:38,160
different channels which will have a

341
00:17:38,160 --> 00:17:41,179
larger probability

342
00:17:41,700 --> 00:17:44,220
I didn't get the last part of your

343
00:17:44,220 --> 00:17:46,020
question sorry

344
00:17:46,020 --> 00:17:48,799
guys

345
00:17:49,200 --> 00:17:50,760
sorry

346
00:17:50,760 --> 00:17:52,200
uh

347
00:17:52,200 --> 00:17:55,260
I wonder that how you found our

348
00:17:55,260 --> 00:17:58,440
differential rather a differential term

349
00:17:58,440 --> 00:18:03,260
which will have a larger probability

350
00:18:03,720 --> 00:18:05,600
uh

351
00:18:05,600 --> 00:18:09,179
yeah I think it's the last part but the

352
00:18:09,179 --> 00:18:11,220
thing that we did was to scan the

353
00:18:11,220 --> 00:18:13,080
differential Trail but not the

354
00:18:13,080 --> 00:18:14,940
differential

355
00:18:14,940 --> 00:18:17,580
uh I don't know if it answers your

356
00:18:17,580 --> 00:18:19,820
question

357
00:18:20,460 --> 00:18:23,360
uh

358
00:18:27,919 --> 00:18:31,860
you'll find a larger differential to

359
00:18:31,860 --> 00:18:35,220
uh which will have a larger probability

360
00:18:35,220 --> 00:18:37,880
yeah

361
00:18:38,580 --> 00:18:42,360
uh I mean I mean then also a

362
00:18:42,360 --> 00:18:44,100
differential

363
00:18:44,100 --> 00:18:47,360
it's a differential

364
00:18:48,200 --> 00:18:52,320
they are differential threats

365
00:18:52,320 --> 00:18:54,960
I am sorry do you mean the clustering

366
00:18:54,960 --> 00:18:56,580
effects

367
00:18:56,580 --> 00:18:58,520
yeah yeah

368
00:18:58,520 --> 00:19:02,580
no no no no it's just uh we

369
00:19:02,580 --> 00:19:05,880
so for two rounds we uh scan the whole

370
00:19:05,880 --> 00:19:08,700
space but for uh more than uh two rounds

371
00:19:08,700 --> 00:19:10,860
so let's say we go to three round or we

372
00:19:10,860 --> 00:19:13,320
want to uh extend the trade then we

373
00:19:13,320 --> 00:19:16,919
don't do that we just scan differential

374
00:19:16,919 --> 00:19:19,200
Trails but not differential

375
00:19:19,200 --> 00:19:21,780
uh okay okay thank you thank you yeah

376
00:19:21,780 --> 00:19:24,480
yeah thank you and one more question in

377
00:19:24,480 --> 00:19:25,440
Kobe

378
00:19:25,440 --> 00:19:27,720
yeah hi alireza I would like to ask a

379
00:19:27,720 --> 00:19:30,360
question uh so is there any of the

380
00:19:30,360 --> 00:19:32,520
methods you introduced in this work that

381
00:19:32,520 --> 00:19:36,900
could be used to the work of 12 2016 to

382
00:19:36,900 --> 00:19:39,900
improve the bounce on cat check

383
00:19:39,900 --> 00:19:41,400
uh

384
00:19:41,400 --> 00:19:43,460
um

385
00:19:44,059 --> 00:19:49,620
yeah so the design of kitchen uh so uh I

386
00:19:49,620 --> 00:19:52,260
think I assume you know that it uses a

387
00:19:52,260 --> 00:19:54,720
three five that means that the

388
00:19:54,720 --> 00:19:57,120
the circle that three five was working

389
00:19:57,120 --> 00:20:01,320
on will had only uh five bits uh so it

390
00:20:01,320 --> 00:20:04,860
means that many of these uh pause for

391
00:20:04,860 --> 00:20:07,080
instance welcome business score can be

392
00:20:07,080 --> 00:20:10,140
like uh yeah you can exhaustive research

393
00:20:10,140 --> 00:20:12,660
two to the power five uh possibilities

394
00:20:12,660 --> 00:20:15,179
uh in ketchek and you don't need to

395
00:20:15,179 --> 00:20:17,940
score to have a score function that is

396
00:20:17,940 --> 00:20:21,660
working generic uh generally and also

397
00:20:21,660 --> 00:20:24,660
yeah uh something like a backboard

398
00:20:24,660 --> 00:20:27,720
extension that's uh yeah we introduced

399
00:20:27,720 --> 00:20:30,179
it for big circuitry because they were

400
00:20:30,179 --> 00:20:31,740
not it's not possible to do it

401
00:20:31,740 --> 00:20:34,919
excessively but yeah in case it was just

402
00:20:34,919 --> 00:20:37,080
five bits so you could excessively

403
00:20:37,080 --> 00:20:38,700
search all of them

404
00:20:38,700 --> 00:20:41,520
and yeah this board is just application

405
00:20:41,520 --> 00:20:44,160
and this port

406
00:20:44,160 --> 00:20:46,919
yeah this is exactly again uh for for

407
00:20:46,919 --> 00:20:50,460
this big circle here but uh yeah for a

408
00:20:50,460 --> 00:20:52,940
small circle here like keshack or zoodoo

409
00:20:52,940 --> 00:20:55,799
you can excessively search that so yeah

410
00:20:55,799 --> 00:20:58,080
it's not needed but the main focus of

411
00:20:58,080 --> 00:21:01,740
this paper was to see how it works for

412
00:21:01,740 --> 00:21:04,080
big circuitry

413
00:21:04,080 --> 00:21:05,880
okay that's very clear thank you all

414
00:21:05,880 --> 00:21:08,100
yeah thanks

415
00:21:08,100 --> 00:21:11,100
foreign

416
00:21:14,240 --> 00:21:16,980
I was just wondering how easily could

417
00:21:16,980 --> 00:21:19,140
this technique be apply to other ciphers

418
00:21:19,140 --> 00:21:23,820
and also if the code's available for use

419
00:21:23,820 --> 00:21:26,400
yeah the uh thank you for your question

420
00:21:26,400 --> 00:21:29,580
the codes are available and uh so the

421
00:21:29,580 --> 00:21:31,620
yeah you can find it uh in the paper

422
00:21:31,620 --> 00:21:33,240
that's where where you can find the

423
00:21:33,240 --> 00:21:37,200
codes uh it is not that easy to apply it

424
00:21:37,200 --> 00:21:40,080
to to a new Surfer if you just want to

425
00:21:40,080 --> 00:21:42,600
like design a news effort completely

426
00:21:42,600 --> 00:21:44,220
different than you have to like write

427
00:21:44,220 --> 00:21:47,100
this course uh yeah from scratch we

428
00:21:47,100 --> 00:21:48,179
could say

429
00:21:48,179 --> 00:21:52,860
but uh the the like the limits that that

430
00:21:52,860 --> 00:21:58,140
you can reach is uh uh higher uh than

431
00:21:58,140 --> 00:22:01,380
the like General method that we have

432
00:22:01,380 --> 00:22:04,940
like nyp or sad solver

433
00:22:06,659 --> 00:22:10,620
thank you yeah thanks

434
00:22:10,620 --> 00:22:13,159
hey thanks

435
00:22:13,159 --> 00:22:17,340
let's move to the next paper okay the

436
00:22:17,340 --> 00:22:20,640
next paper is entitled uh celebrating

437
00:22:20,640 --> 00:22:23,280
the best trail search on a yes like

438
00:22:23,280 --> 00:22:27,600
ciphers uh the authors are a song Jim

439
00:22:27,600 --> 00:22:29,530
King Hong

440
00:22:29,530 --> 00:22:31,460
[Music]

441
00:22:31,460 --> 00:22:33,660
song

442
00:22:33,660 --> 00:22:36,200
[Music]

443
00:22:36,200 --> 00:22:41,340
will give the presentation welcome

444
00:22:44,880 --> 00:22:47,760
thank you for the introduction as she

445
00:22:47,760 --> 00:22:50,760
said I'm Hong Kong Kim I'm from Korea

446
00:22:50,760 --> 00:22:51,980
University

447
00:22:51,980 --> 00:22:54,840
I'm going to talk about accelerating the

448
00:22:54,840 --> 00:22:58,620
best trade search on AES like ciphers

449
00:22:58,620 --> 00:23:01,020
so uh

450
00:23:01,020 --> 00:23:03,440
sorry

451
00:23:03,480 --> 00:23:05,340
ah

452
00:23:05,340 --> 00:23:09,059
so starting with the introduction to our

453
00:23:09,059 --> 00:23:11,220
contributions I will present two

454
00:23:11,220 --> 00:23:14,280
accelerating strategies and show the

455
00:23:14,280 --> 00:23:17,640
analysis result on uh gift variants

456
00:23:17,640 --> 00:23:21,059
which we call pogi based deciphers in

457
00:23:21,059 --> 00:23:21,530
the paper

458
00:23:21,530 --> 00:23:24,710
[Music]

459
00:23:25,260 --> 00:23:27,480
so the first contribution is

460
00:23:27,480 --> 00:23:29,880
accelerating the best trade search on

461
00:23:29,880 --> 00:23:32,940
AES like Cyprus so basically we

462
00:23:32,940 --> 00:23:35,640
accelerate machuist search algorithm

463
00:23:35,640 --> 00:23:38,460
with two strategies one is giving

464
00:23:38,460 --> 00:23:40,860
pruning condition strict pruning

465
00:23:40,860 --> 00:23:44,039
conditions to the search with arrive

466
00:23:44,039 --> 00:23:46,679
them by using the structure of as like

467
00:23:46,679 --> 00:23:50,460
Cyprus and another reduce the search

468
00:23:50,460 --> 00:23:52,559
Space by employing permutation

469
00:23:52,559 --> 00:23:55,320
characteristics in the trade search

470
00:23:55,320 --> 00:23:59,039
uh we applied our both uh both our

471
00:23:59,039 --> 00:24:02,340
strategies to the existing ciphers and

472
00:24:02,340 --> 00:24:05,100
demonstrate the Improvement

473
00:24:05,100 --> 00:24:08,580
so here are the search results uh of

474
00:24:08,580 --> 00:24:11,940
Over Our uh Improvement gave us the

475
00:24:11,940 --> 00:24:15,679
first analysis result on full round gift

476
00:24:15,679 --> 00:24:18,500
128 and

477
00:24:18,500 --> 00:24:21,480
differential and linear trade search on

478
00:24:21,480 --> 00:24:26,400
gift 64 take only in a second and 10

479
00:24:26,400 --> 00:24:28,880
seconds respectively

480
00:24:28,880 --> 00:24:32,039
and we expect that our implementation

481
00:24:32,039 --> 00:24:35,820
can be also used for other as like

482
00:24:35,820 --> 00:24:40,200
Cyprus our and our code and Analysis

483
00:24:40,200 --> 00:24:43,620
result can be found in this uh

484
00:24:43,620 --> 00:24:46,799
repository below

485
00:24:46,799 --> 00:24:49,500
and another country contribution is

486
00:24:49,500 --> 00:24:53,400
investigating uh if the variance in

487
00:24:53,400 --> 00:24:57,419
terms of PC and LC resistances we device

488
00:24:57,419 --> 00:25:01,260
gives variants by replacing the existing

489
00:25:01,260 --> 00:25:04,220
aspects and bit permutation

490
00:25:04,220 --> 00:25:09,240
the number of such variants among for at

491
00:25:09,240 --> 00:25:12,720
first the number of such variants amount

492
00:25:12,720 --> 00:25:15,600
to two to the power of 37 which is

493
00:25:15,600 --> 00:25:18,539
impeachable to on All Eyes so we reduce

494
00:25:18,539 --> 00:25:21,320
the number of the number by deducing

495
00:25:21,320 --> 00:25:25,200
equivalence relation and obtain their

496
00:25:25,200 --> 00:25:27,440
representatives

497
00:25:27,440 --> 00:25:31,620
with our search algorithm we obtain the

498
00:25:31,620 --> 00:25:35,000
minimum required round for uh such

499
00:25:35,000 --> 00:25:39,299
representative gift variants with uh

500
00:25:39,299 --> 00:25:41,940
several block sizes

501
00:25:41,940 --> 00:25:45,720
uh according to our search result we can

502
00:25:45,720 --> 00:25:50,039
show that there are uh ex there exists a

503
00:25:50,039 --> 00:25:52,440
gift variance allowing few around then

504
00:25:52,440 --> 00:25:56,580
gift to prevent effective differential

505
00:25:56,580 --> 00:25:59,840
and linear Trace

506
00:26:00,360 --> 00:26:03,779
so uh before presenting our accelerating

507
00:26:03,779 --> 00:26:06,720
strategies here we Define AES like

508
00:26:06,720 --> 00:26:10,620
Cipher uh on as like Cipher consists of

509
00:26:10,620 --> 00:26:13,320
identical round functions and the round

510
00:26:13,320 --> 00:26:16,140
function consists of as layer and mixing

511
00:26:16,140 --> 00:26:19,919
layer and a sharp layer as the layer

512
00:26:19,919 --> 00:26:23,460
applies identical as boxes and mixing

513
00:26:23,460 --> 00:26:27,120
layer applies uh identical Matrix

514
00:26:27,120 --> 00:26:29,960
multiplications lastly Chapel layer

515
00:26:29,960 --> 00:26:33,900
shuffles as boxes which implies as layer

516
00:26:33,900 --> 00:26:37,980
and Shop layer are competitive

517
00:26:37,980 --> 00:26:40,440
and depending on whether matrix

518
00:26:40,440 --> 00:26:43,080
multiplication is a bit permutation or

519
00:26:43,080 --> 00:26:45,600
not we call them bit permutation based

520
00:26:45,600 --> 00:26:48,900
and non-based permutation based as like

521
00:26:48,900 --> 00:26:51,179
ciphers

522
00:26:51,179 --> 00:26:54,960
so for example this slide shows that are

523
00:26:54,960 --> 00:26:57,960
present and gift are bit permutation

524
00:26:57,960 --> 00:27:02,000
based as like ciphers

525
00:27:02,840 --> 00:27:07,559
so for a better explanation I will use a

526
00:27:07,559 --> 00:27:10,740
weight rather than probability uh weight

527
00:27:10,740 --> 00:27:14,460
is the negative logarithm of uh

528
00:27:14,460 --> 00:27:17,460
probability of the trail and when you

529
00:27:17,460 --> 00:27:19,200
talk about uh

530
00:27:19,200 --> 00:27:22,500
is minimum required round that means the

531
00:27:22,500 --> 00:27:24,419
corresponding best weight should be

532
00:27:24,419 --> 00:27:29,120
equal to or a bigger than the block size

533
00:27:30,000 --> 00:27:33,720
and now I I will briefly introduce much

534
00:27:33,720 --> 00:27:36,419
research algorithm uh this search

535
00:27:36,419 --> 00:27:39,000
algorithm is a branch and bound depth

536
00:27:39,000 --> 00:27:42,419
first search and requires the knowledge

537
00:27:42,419 --> 00:27:46,620
of these uh 1 to R minus one round

538
00:27:46,620 --> 00:27:49,500
Pathways when we search for our round

539
00:27:49,500 --> 00:27:51,179
path Trail

540
00:27:51,179 --> 00:27:54,299
so here is the uh even though this

541
00:27:54,299 --> 00:27:57,440
algorithm is an exhaustive search

542
00:27:57,440 --> 00:28:00,779
those given best ways can provide

543
00:28:00,779 --> 00:28:04,020
pruning conditions that we can uh

544
00:28:04,020 --> 00:28:06,900
efficiently prune the trails just before

545
00:28:06,900 --> 00:28:11,279
before arriving at the final depth

546
00:28:11,279 --> 00:28:13,980
so here is the application of pruning

547
00:28:13,980 --> 00:28:16,320
conditions to eight round differential

548
00:28:16,320 --> 00:28:17,659
tray search

549
00:28:17,659 --> 00:28:20,520
assume that we just determine

550
00:28:20,520 --> 00:28:24,059
differences until three round although

551
00:28:24,059 --> 00:28:27,360
we don't know the this uh on the

552
00:28:27,360 --> 00:28:29,400
although we don't know the weight of

553
00:28:29,400 --> 00:28:32,159
this undetermined part the given five

554
00:28:32,159 --> 00:28:34,500
round best weight can replace the weight

555
00:28:34,500 --> 00:28:38,159
so that we can decide whether we go

556
00:28:38,159 --> 00:28:41,039
further or not only on in the middle of

557
00:28:41,039 --> 00:28:43,020
the search

558
00:28:43,020 --> 00:28:46,020
uh instead of applying these uh pruning

559
00:28:46,020 --> 00:28:48,960
conditions round by round we can apply

560
00:28:48,960 --> 00:28:51,620
them as Box by s box

561
00:28:51,620 --> 00:28:55,679
this more frequent applications make

562
00:28:55,679 --> 00:28:57,659
this uh left side of the pruning

563
00:28:57,659 --> 00:29:00,659
condition bigger and it is search that

564
00:29:00,659 --> 00:29:04,679
terminates faster so in this regard we

565
00:29:04,679 --> 00:29:07,320
try to make the left side bigger by

566
00:29:07,320 --> 00:29:09,840
using the structure of a is like Cipher

567
00:29:09,840 --> 00:29:12,840
and this middle part

568
00:29:12,840 --> 00:29:16,399
this middle part more

569
00:29:16,919 --> 00:29:20,520
so uh first we decompose the round

570
00:29:20,520 --> 00:29:22,080
function into the corresponding

571
00:29:22,080 --> 00:29:24,659
components and change the order of s

572
00:29:24,659 --> 00:29:30,240
layer and sharp layer then we get a

573
00:29:30,240 --> 00:29:32,340
in this figure we get uh four

574
00:29:32,340 --> 00:29:35,940
independent independent super boxes to

575
00:29:35,940 --> 00:29:36,899
deal with

576
00:29:36,899 --> 00:29:40,440
and assume that we just determined 7x

577
00:29:40,440 --> 00:29:41,600
boxes

578
00:29:41,600 --> 00:29:47,159
in this first s layers s layer uh then

579
00:29:47,159 --> 00:29:50,159
the green shaded input part can be

580
00:29:50,159 --> 00:29:53,880
determined now and blue shaded part has

581
00:29:53,880 --> 00:29:54,899
a

582
00:29:54,899 --> 00:29:58,679
the the lower Bound for the number of

583
00:29:58,679 --> 00:30:01,860
output active s-boxes uh according to

584
00:30:01,860 --> 00:30:05,340
the first first Slayers active as box

585
00:30:05,340 --> 00:30:07,860
pattern and the number uh the branch

586
00:30:07,860 --> 00:30:11,779
number of matrix multiplication

587
00:30:12,480 --> 00:30:16,140
now we can partition this middle part

588
00:30:16,140 --> 00:30:18,720
into the corresponding force of parts

589
00:30:18,720 --> 00:30:22,260
and obtain strict pruning conditions for

590
00:30:22,260 --> 00:30:24,559
as like Cypress

591
00:30:24,559 --> 00:30:29,220
uh among these supports uh the is a

592
00:30:29,220 --> 00:30:32,220
is support for which is green blue

593
00:30:32,220 --> 00:30:35,520
shaded is more effective and the branch

594
00:30:35,520 --> 00:30:38,399
number is bigger that means for bit

595
00:30:38,399 --> 00:30:41,520
permutation based as like Cipher that uh

596
00:30:41,520 --> 00:30:43,620
the support for main might not be

597
00:30:43,620 --> 00:30:44,940
effective

598
00:30:44,940 --> 00:30:48,179
but however we can use the property of

599
00:30:48,179 --> 00:30:51,360
bit permutation which is a

600
00:30:51,360 --> 00:30:54,840
even partial input can provide the lower

601
00:30:54,840 --> 00:30:57,600
Bound for the number of output active as

602
00:30:57,600 --> 00:31:01,559
boxes so we can further consider support

603
00:31:01,559 --> 00:31:06,120
for Prime and obtain stricter pruning

604
00:31:06,120 --> 00:31:08,340
conditions for repeat permutation based

605
00:31:08,340 --> 00:31:11,539
as like ciphers

606
00:31:12,020 --> 00:31:15,539
and another accelerating strategy is

607
00:31:15,539 --> 00:31:18,360
employing permutation characteristic uh

608
00:31:18,360 --> 00:31:21,120
as we will see one permutation

609
00:31:21,120 --> 00:31:23,640
characteristic ensures that two

610
00:31:23,640 --> 00:31:25,980
different traits has the same weight

611
00:31:25,980 --> 00:31:27,120
uh

612
00:31:27,120 --> 00:31:31,980
uh this this figure gives the uh concept

613
00:31:31,980 --> 00:31:35,399
of how we employ a permutation

614
00:31:35,399 --> 00:31:38,100
characteristic in trade search over

615
00:31:38,100 --> 00:31:41,340
these components for any sequences or

616
00:31:41,340 --> 00:31:44,520
values that must exist the corresponding

617
00:31:44,520 --> 00:31:47,460
world-wise promptative sequence which

618
00:31:47,460 --> 00:31:51,960
have the same weight this is because as

619
00:31:51,960 --> 00:31:55,140
I mentioned the S layer applies

620
00:31:55,140 --> 00:31:58,620
identical as boxes and the we just use

621
00:31:58,620 --> 00:32:02,000
wordwise permutations

622
00:32:02,360 --> 00:32:06,000
so after Trace search with an input

623
00:32:06,000 --> 00:32:08,580
active aspect pattern we don't have to

624
00:32:08,580 --> 00:32:10,740
consider any Trace from the

625
00:32:10,740 --> 00:32:13,799
corresponding worldwide competitive

626
00:32:13,799 --> 00:32:16,799
pattern

627
00:32:17,399 --> 00:32:18,360
okay

628
00:32:18,360 --> 00:32:21,240
so formally uh are around the

629
00:32:21,240 --> 00:32:23,880
permutation characteristic is defined as

630
00:32:23,880 --> 00:32:27,059
a sequence of word-wise quotations such

631
00:32:27,059 --> 00:32:29,580
that the permutations are connected

632
00:32:29,580 --> 00:32:33,000
between rounds since our round

633
00:32:33,000 --> 00:32:35,779
permutation characteristic only covers

634
00:32:35,779 --> 00:32:39,899
such here around the T round Trace

635
00:32:39,899 --> 00:32:43,559
search we need iterative ones for the

636
00:32:43,559 --> 00:32:46,260
arbitrary round search

637
00:32:46,260 --> 00:32:49,500
so in order to obtain iterative

638
00:32:49,500 --> 00:32:52,380
permutation characteristic we we

639
00:32:52,380 --> 00:32:55,020
generate directed graph according to

640
00:32:55,020 --> 00:32:58,799
permutations over one round and obtained

641
00:32:58,799 --> 00:33:01,080
a cyclic subgraphs

642
00:33:01,080 --> 00:33:05,460
so figures on right side

643
00:33:05,460 --> 00:33:07,679
gives the

644
00:33:07,679 --> 00:33:11,299
type directed graphs of our considered

645
00:33:11,299 --> 00:33:15,419
ciphers so one on each of them we obtain

646
00:33:15,419 --> 00:33:18,360
a cyclic subgraphs which are equivalent

647
00:33:18,360 --> 00:33:23,159
to iterative permutation characteristics

648
00:33:23,159 --> 00:33:25,919
so here are the uh interactive

649
00:33:25,919 --> 00:33:28,279
permutation characteristics of our

650
00:33:28,279 --> 00:33:31,200
considered deciphers the number of

651
00:33:31,200 --> 00:33:34,279
worldwide worldwide competitions on

652
00:33:34,279 --> 00:33:37,799
iterative characteristics is up to 16

653
00:33:37,799 --> 00:33:42,419
and the search space decrease by the

654
00:33:42,419 --> 00:33:45,720
same amount of vectors

655
00:33:45,720 --> 00:33:47,580
um

656
00:33:47,580 --> 00:33:52,019
so we conduct comparison uh we with and

657
00:33:52,019 --> 00:33:55,380
without our strategies when uh the first

658
00:33:55,380 --> 00:33:58,019
strategy only used the acceleration is

659
00:33:58,019 --> 00:34:01,919
up to uh 500 vectors and uh the second

660
00:34:01,919 --> 00:34:05,220
has the acceleration 10 factors and when

661
00:34:05,220 --> 00:34:10,440
we apply both our both strategy

662
00:34:10,560 --> 00:34:14,599
sorry when you apply uh post

663
00:34:14,599 --> 00:34:17,399
strategies the acceleration is up to

664
00:34:17,399 --> 00:34:20,280
about two thousand

665
00:34:20,280 --> 00:34:23,760
so uh for a more in-depth application of

666
00:34:23,760 --> 00:34:27,418
our search algorithm we use our uh the

667
00:34:27,418 --> 00:34:30,839
the algorithm to investigate ciphers

668
00:34:30,839 --> 00:34:34,619
based on uh Boogie base Boogie design

669
00:34:34,619 --> 00:34:38,099
so for pogi design we need a proper

670
00:34:38,099 --> 00:34:41,219
combination of Xbox and beat permutation

671
00:34:41,219 --> 00:34:45,960
and each combination constructs such uh

672
00:34:45,960 --> 00:34:48,239
these

673
00:34:48,239 --> 00:34:52,800
16 bit super box and prevent a single

674
00:34:52,800 --> 00:34:55,679
active back beat propagations which are

675
00:34:55,679 --> 00:34:59,220
also known as bad and bad connections uh

676
00:34:59,220 --> 00:35:01,920
such combinations amount to 2 to the

677
00:35:01,920 --> 00:35:06,480
power of 37 and we can construct uh the

678
00:35:06,480 --> 00:35:09,900
corresponding 16 time bit uh bogey based

679
00:35:09,900 --> 00:35:13,320
ciphers with a proper uh Shuffle Shuffle

680
00:35:13,320 --> 00:35:15,359
layer

681
00:35:15,359 --> 00:35:18,180
so that means we need to conduct the

682
00:35:18,180 --> 00:35:20,220
investigation with the same number of

683
00:35:20,220 --> 00:35:24,240
ciphers so this number is impeachable to

684
00:35:24,240 --> 00:35:27,300
conduct the investigation we reduce the

685
00:35:27,300 --> 00:35:30,000
number by deducing three equivalence

686
00:35:30,000 --> 00:35:34,500
relations between super boxes uh

687
00:35:34,500 --> 00:35:36,839
uh which means we don't consider Shuffle

688
00:35:36,839 --> 00:35:38,040
layer here

689
00:35:38,040 --> 00:35:40,619
so the number of Cycles with different

690
00:35:40,619 --> 00:35:44,599
block sizes is the same

691
00:35:45,180 --> 00:35:48,359
and after three equivalent relations are

692
00:35:48,359 --> 00:35:51,839
applied the number of Representatives is

693
00:35:51,839 --> 00:35:55,520
about 41 000.

694
00:35:56,700 --> 00:36:00,240
and we applied our strategies to the to

695
00:36:00,240 --> 00:36:04,160
those uh those representatives and

696
00:36:04,160 --> 00:36:07,680
obtain the minimum required required

697
00:36:07,680 --> 00:36:09,119
round

698
00:36:09,119 --> 00:36:11,359
and this table gives the information

699
00:36:11,359 --> 00:36:15,599
about our search and we chose this uh

700
00:36:15,599 --> 00:36:18,660
analysis round considering the minimum

701
00:36:18,660 --> 00:36:21,660
required round for gift and Analysis

702
00:36:21,660 --> 00:36:24,140
time

703
00:36:24,619 --> 00:36:27,900
according to our search we can show that

704
00:36:27,900 --> 00:36:31,020
there exists better combinations than

705
00:36:31,020 --> 00:36:34,859
gift and we remarked the only replacing

706
00:36:34,859 --> 00:36:39,240
bit permutation can uh

707
00:36:41,240 --> 00:36:44,160
to prevent effective differential and

708
00:36:44,160 --> 00:36:45,839
denial phrase

709
00:36:45,839 --> 00:36:50,180
this table gives that a result

710
00:36:50,520 --> 00:36:54,180
and this slide gives the best ways of 16

711
00:36:54,180 --> 00:36:57,720
4 bits versions and comparison with gift

712
00:36:57,720 --> 00:36:59,599
64.

713
00:36:59,599 --> 00:37:04,320
uh the red wine represent the

714
00:37:04,320 --> 00:37:05,760
um

715
00:37:05,760 --> 00:37:09,980
the best way to of gift 64 and blue one

716
00:37:09,980 --> 00:37:14,700
represents the weight of 64.

717
00:37:14,700 --> 00:37:17,780
and these slides give the best weight of

718
00:37:17,780 --> 00:37:22,560
130 20 bit versions uh due to the

719
00:37:22,560 --> 00:37:25,380
increase increased analysis timely

720
00:37:25,380 --> 00:37:28,880
conducted the search until 11 round

721
00:37:28,880 --> 00:37:32,640
although it is not enough to obtain the

722
00:37:32,640 --> 00:37:34,920
minimum required round we could show

723
00:37:34,920 --> 00:37:39,200
that the 11 round optimal combinations

724
00:37:39,200 --> 00:37:43,260
require three few rounds then give to

725
00:37:43,260 --> 00:37:46,260
128.

726
00:37:46,680 --> 00:37:50,880
so this concludes my presentation as I

727
00:37:50,880 --> 00:37:53,540
previously mentioned uh our

728
00:37:53,540 --> 00:37:57,359
implementations and codes and Analysis

729
00:37:57,359 --> 00:38:00,660
result can be found this repository so

730
00:38:00,660 --> 00:38:03,839
thank you for all listening

731
00:38:03,839 --> 00:38:09,259
speaker so any question in coffee

732
00:38:10,380 --> 00:38:13,160
one question

733
00:38:15,119 --> 00:38:18,240
thank you for your talk I was wondering

734
00:38:18,240 --> 00:38:20,640
when you tried different type of bogie

735
00:38:20,640 --> 00:38:24,660
permutations for gift you tried with

736
00:38:24,660 --> 00:38:26,940
only give test box or a different type

737
00:38:26,940 --> 00:38:29,839
of s boxes

738
00:38:32,400 --> 00:38:35,540
okay okay

739
00:38:40,220 --> 00:38:43,500
so for the best result uh which is box

740
00:38:43,500 --> 00:38:46,099
you used

741
00:38:49,920 --> 00:38:51,720
uh

742
00:38:51,720 --> 00:38:54,780
sorry yeah for the best result which is

743
00:38:54,780 --> 00:38:57,420
boxy we used uh different from uh the

744
00:38:57,420 --> 00:38:59,460
easiest thing as box

745
00:38:59,460 --> 00:39:03,060
so so actually we we try to evaluate the

746
00:39:03,060 --> 00:39:06,000
cost of as boxes because it is important

747
00:39:06,000 --> 00:39:09,320
when we employ

748
00:39:09,440 --> 00:39:13,200
Implement Implement that uh

749
00:39:13,200 --> 00:39:18,060
the algorithm in Hardware but uh we did

750
00:39:18,060 --> 00:39:21,000
it but sometimes there is a trade-off

751
00:39:21,000 --> 00:39:25,260
between cost and these resistance

752
00:39:25,260 --> 00:39:27,480
but I I

753
00:39:27,480 --> 00:39:30,900
we couldn't uh write down the result on

754
00:39:30,900 --> 00:39:32,520
that paper

755
00:39:32,520 --> 00:39:35,160
okay so is the is boxes given in the

756
00:39:35,160 --> 00:39:38,099
paper or oh yes okay okay thank you

757
00:39:38,099 --> 00:39:39,960
thank you you can you can find any

758
00:39:39,960 --> 00:39:43,020
result in the in the repository as well

759
00:39:43,020 --> 00:39:46,160
oh okay thank you

760
00:39:46,680 --> 00:39:47,850
okay any questions

761
00:39:47,850 --> 00:39:50,940
[Music]

762
00:39:51,480 --> 00:39:56,520
no questions in Kobe okay any questions

763
00:39:56,520 --> 00:39:59,060
here

764
00:40:04,200 --> 00:40:06,359
okay

765
00:40:06,359 --> 00:40:10,460
any question online

766
00:40:14,040 --> 00:40:17,760
okay uh if there is no question left and

767
00:40:17,760 --> 00:40:22,740
this session thank the speaker certainly

768
00:40:22,740 --> 00:40:27,500
let's have a quick uh Rick

