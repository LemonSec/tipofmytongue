1
00:00:00,240 --> 00:00:03,360
so this session is on linear layers

2
00:00:03,360 --> 00:00:06,480
there will be three talks

3
00:00:06,480 --> 00:00:08,880
and the first talk will be decomposing

4
00:00:08,880 --> 00:00:12,059
linear layers by Christopher Patrick

5
00:00:12,059 --> 00:00:16,260
Felker gregoriander and Sandra Orange

6
00:00:16,260 --> 00:00:18,300
and Gregor will give the talk

7
00:00:18,300 --> 00:00:19,920
thank you very much

8
00:00:19,920 --> 00:00:23,400
is this working yes maybe yeah okay yes

9
00:00:23,400 --> 00:00:26,039
so um

10
00:00:26,039 --> 00:00:28,160
I'm going to talk about

11
00:00:28,160 --> 00:00:31,439
designs that don't follow the best

12
00:00:31,439 --> 00:00:33,600
practice maybe so there are certainly

13
00:00:33,600 --> 00:00:36,840
open designs and cryptographic Designs

14
00:00:36,840 --> 00:00:38,399
which where you have a public

15
00:00:38,399 --> 00:00:39,719
specification where you have design

16
00:00:39,719 --> 00:00:41,120
resonance

17
00:00:41,120 --> 00:00:43,820
and security

18
00:00:43,820 --> 00:00:46,739
arguments but there are also close

19
00:00:46,739 --> 00:00:49,200
designs where for one reason or the

20
00:00:49,200 --> 00:00:51,360
other not all of this is fulfilled so

21
00:00:51,360 --> 00:00:52,559
maybe we don't have a public

22
00:00:52,559 --> 00:00:54,840
specification maybe we do not have

23
00:00:54,840 --> 00:00:56,699
design rationals

24
00:00:56,699 --> 00:00:58,860
or maybe if you don't have security

25
00:00:58,860 --> 00:01:01,920
analysis yeah and examples for the later

26
00:01:01,920 --> 00:01:05,220
case is things that was not supposed to

27
00:01:05,220 --> 00:01:07,080
be public and all only got reversed

28
00:01:07,080 --> 00:01:10,260
engineered like the ga one ciphers then

29
00:01:10,260 --> 00:01:12,540
Simon and spec is a famous example where

30
00:01:12,540 --> 00:01:14,820
we have a public specification but we do

31
00:01:14,820 --> 00:01:17,460
not have any design resonance and this

32
00:01:17,460 --> 00:01:19,740
three box that we already heard this

33
00:01:19,740 --> 00:01:22,700
morning where we don't have

34
00:01:22,700 --> 00:01:25,140
any design rational and actually it's

35
00:01:25,140 --> 00:01:26,880
even a bit more hidden what what was

36
00:01:26,880 --> 00:01:28,560
done

37
00:01:28,560 --> 00:01:30,780
so there are different levels of close

38
00:01:30,780 --> 00:01:32,280
design here

39
00:01:32,280 --> 00:01:34,799
okay so this three block just to recall

40
00:01:34,799 --> 00:01:38,220
it's a Russian Standard a hash function

41
00:01:38,220 --> 00:01:40,439
and I'm going to give a bit more details

42
00:01:40,439 --> 00:01:42,540
because this is like a running example

43
00:01:42,540 --> 00:01:45,299
throughout the talk so this operates on

44
00:01:45,299 --> 00:01:47,880
the 64-bit State and where we have an

45
00:01:47,880 --> 00:01:49,860
8-bit s-box which was just given as a

46
00:01:49,860 --> 00:01:51,899
lookup table where you have a

47
00:01:51,899 --> 00:01:54,420
permutation of bytes and the 64 by 64

48
00:01:54,420 --> 00:01:56,880
binary metrics that is supplied in

49
00:01:56,880 --> 00:01:58,860
atem's in parallel so this is the

50
00:01:58,860 --> 00:02:01,380
specification of the cipher and we don't

51
00:02:01,380 --> 00:02:04,680
have any design arguments how those

52
00:02:04,680 --> 00:02:06,119
things were chosened

53
00:02:06,119 --> 00:02:07,619
and

54
00:02:07,619 --> 00:02:10,619
and so given such a design a natural

55
00:02:10,619 --> 00:02:12,900
research question is how do we recover

56
00:02:12,900 --> 00:02:15,720
structure now how do we understand where

57
00:02:15,720 --> 00:02:18,540
is this Design coming from and for the

58
00:02:18,540 --> 00:02:21,840
s-boxes this is well studied

59
00:02:21,840 --> 00:02:24,480
um so they're very nice results how the

60
00:02:24,480 --> 00:02:25,980
Xbox

61
00:02:25,980 --> 00:02:28,140
was chosen I don't know but at least the

62
00:02:28,140 --> 00:02:31,560
structure that's in there is by now well

63
00:02:31,560 --> 00:02:34,860
understood to a large extent I would say

64
00:02:34,860 --> 00:02:37,080
and for the linear layer it's not so

65
00:02:37,080 --> 00:02:40,560
well studied so we don't have good tools

66
00:02:40,560 --> 00:02:43,500
to to find structure in linear layers

67
00:02:43,500 --> 00:02:45,480
and this is what our work is about

68
00:02:45,480 --> 00:02:48,900
so we focus on the linear layer and the

69
00:02:48,900 --> 00:02:52,680
idea is given a binary metrics every

70
00:02:52,680 --> 00:02:54,300
linear layer can be represented as a

71
00:02:54,300 --> 00:02:57,180
binary Matrix recovers Direction and

72
00:02:57,180 --> 00:02:59,040
especially um

73
00:02:59,040 --> 00:03:00,660
so they could be all kinds of structure

74
00:03:00,660 --> 00:03:02,459
we focus on something very particular so

75
00:03:02,459 --> 00:03:04,500
we certainly do not solve this problem

76
00:03:04,500 --> 00:03:06,720
entirely but we focus on the question of

77
00:03:06,720 --> 00:03:09,720
can we find a structure that is induced

78
00:03:09,720 --> 00:03:12,120
by constructions over extended figures

79
00:03:12,120 --> 00:03:15,599
so like the AES mix color

80
00:03:15,599 --> 00:03:18,480
so and if we further structure this into

81
00:03:18,480 --> 00:03:20,700
in three problems the first one is

82
00:03:20,700 --> 00:03:22,680
exactly this given a binary Matrix how

83
00:03:22,680 --> 00:03:25,860
can we decide if this actually should be

84
00:03:25,860 --> 00:03:28,379
is better represented as a matrix of an

85
00:03:28,379 --> 00:03:29,640
extension field

86
00:03:29,640 --> 00:03:31,800
the second part is an obfuscated version

87
00:03:31,800 --> 00:03:33,120
of the first one and I'm going to

88
00:03:33,120 --> 00:03:34,980
explain what I mean by obfuscated

89
00:03:34,980 --> 00:03:36,599
version later

90
00:03:36,599 --> 00:03:38,580
and then the third one is like a

91
00:03:38,580 --> 00:03:41,159
follow-up question if you then know that

92
00:03:41,159 --> 00:03:43,620
is actually a matrix of an extension

93
00:03:43,620 --> 00:03:45,599
field what kind of Matrix is this does

94
00:03:45,599 --> 00:03:48,299
it follow some um some well-known

95
00:03:48,299 --> 00:03:49,860
construction for example for MDS

96
00:03:49,860 --> 00:03:52,260
matrices okay and in this talk I'm

97
00:03:52,260 --> 00:03:54,080
mainly talking about this first problem

98
00:03:54,080 --> 00:03:56,459
and then for the second and third one

99
00:03:56,459 --> 00:03:58,620
I'm briefly motivating and giving the

100
00:03:58,620 --> 00:04:01,019
results but no details no technical

101
00:04:01,019 --> 00:04:02,760
details

102
00:04:02,760 --> 00:04:05,819
okay so this field structure just to be

103
00:04:05,819 --> 00:04:08,519
more clear what I want to do I'm given a

104
00:04:08,519 --> 00:04:10,260
matrix in this example a 12 by 12

105
00:04:10,260 --> 00:04:12,780
metrics and I want to know

106
00:04:12,780 --> 00:04:15,840
if this Matrix could be represented as a

107
00:04:15,840 --> 00:04:19,139
matrix over the extension field of

108
00:04:19,139 --> 00:04:21,418
um to the four elements so that's the

109
00:04:21,418 --> 00:04:22,560
question

110
00:04:22,560 --> 00:04:24,419
so can I write this as a three by three

111
00:04:24,419 --> 00:04:27,660
Matrix where each of these blocks

112
00:04:27,660 --> 00:04:29,639
let's try to use this one so you can

113
00:04:29,639 --> 00:04:31,979
stream Zoom where each of these blocks

114
00:04:31,979 --> 00:04:33,900
actually corresponds to multiplication

115
00:04:33,900 --> 00:04:36,360
with the final field element so of the

116
00:04:36,360 --> 00:04:39,900
form gamma some power where gamma is a

117
00:04:39,900 --> 00:04:43,199
generator in this finite field okay

118
00:04:43,199 --> 00:04:45,300
so this is the question we want to solve

119
00:04:45,300 --> 00:04:48,060
in this first part of the talk

120
00:04:48,060 --> 00:04:51,060
so usually we represent a finite field

121
00:04:51,060 --> 00:04:54,300
by picking a irreducible polynomial and

122
00:04:54,300 --> 00:04:55,740
thinking about multiplication of

123
00:04:55,740 --> 00:04:57,540
polynomials modulo this irreducible

124
00:04:57,540 --> 00:04:58,620
polynomial

125
00:04:58,620 --> 00:05:00,419
that's certainly the most General and

126
00:05:00,419 --> 00:05:02,940
not the the most common way of doing so

127
00:05:02,940 --> 00:05:05,600
but there's much more General ways of

128
00:05:05,600 --> 00:05:09,240
representing a final field as a matrix

129
00:05:09,240 --> 00:05:11,520
and by matrices final field Elements by

130
00:05:11,520 --> 00:05:13,740
matrices

131
00:05:13,740 --> 00:05:16,800
um and I briefly motivate why in this in

132
00:05:16,800 --> 00:05:20,880
the in this area of uh SPN ciphers we

133
00:05:20,880 --> 00:05:23,280
might actually observe things that are

134
00:05:23,280 --> 00:05:26,940
more General than just polynomials

135
00:05:26,940 --> 00:05:31,440
so if you consider two-round spns or one

136
00:05:31,440 --> 00:05:32,880
and a half or whatever yeah so Xbox

137
00:05:32,880 --> 00:05:35,340
layer linearly Xbox layer what you can

138
00:05:35,340 --> 00:05:37,440
always do think of an

139
00:05:37,440 --> 00:05:41,039
changing the specification

140
00:05:41,039 --> 00:05:43,560
um either because it was just a reverse

141
00:05:43,560 --> 00:05:44,880
engineer though because you want to hide

142
00:05:44,880 --> 00:05:47,220
something is you can certainly put

143
00:05:47,220 --> 00:05:51,120
a small linear layers after the s-boxes

144
00:05:51,120 --> 00:05:54,300
and the inverse right after so that you

145
00:05:54,300 --> 00:05:56,400
actually did not change anything and you

146
00:05:56,400 --> 00:05:58,740
can do the same after the linear layer

147
00:05:58,740 --> 00:06:01,560
no so we didn't do any changes to the

148
00:06:01,560 --> 00:06:04,560
functionality and then to make it nice

149
00:06:04,560 --> 00:06:07,080
for the round before and after you're

150
00:06:07,080 --> 00:06:09,660
going to put T and T inverse before and

151
00:06:09,660 --> 00:06:11,820
after and now we end up with the design

152
00:06:11,820 --> 00:06:13,800
which is functionally equivalent to what

153
00:06:13,800 --> 00:06:15,660
we started with but which has a

154
00:06:15,660 --> 00:06:17,639
different s-box which I don't care in

155
00:06:17,639 --> 00:06:20,220
this talk but which also has a different

156
00:06:20,220 --> 00:06:23,160
linear layer and if I started with a

157
00:06:23,160 --> 00:06:25,020
linear layer of the finite field so if L

158
00:06:25,020 --> 00:06:26,340
was actually defined over the financial

159
00:06:26,340 --> 00:06:28,740
field you can think of what happened in

160
00:06:28,740 --> 00:06:31,440
terms of matrices is that this Matrix

161
00:06:31,440 --> 00:06:33,720
this binary Matrix L was now multiplied

162
00:06:33,720 --> 00:06:35,460
from left and right with block diagonal

163
00:06:35,460 --> 00:06:37,199
matrices corresponding on the blocks you

164
00:06:37,199 --> 00:06:39,020
have this T and T input

165
00:06:39,020 --> 00:06:40,759
foreign

166
00:06:40,759 --> 00:06:42,780
so coming back to the metrics

167
00:06:42,780 --> 00:06:45,360
representations of an extension field if

168
00:06:45,360 --> 00:06:48,720
I start with a field which is I

169
00:06:48,720 --> 00:06:51,060
represented as as you know by shooting a

170
00:06:51,060 --> 00:06:54,300
an irreducible polynomial what I end up

171
00:06:54,300 --> 00:06:56,699
now is that each of these elements will

172
00:06:56,699 --> 00:06:58,740
be left and right multiplied with t and

173
00:06:58,740 --> 00:07:01,440
t inverse and they still form finite

174
00:07:01,440 --> 00:07:03,479
field so I don't give a formula proof

175
00:07:03,479 --> 00:07:06,060
here but yeah it's just conjugating

176
00:07:06,060 --> 00:07:08,280
these three elements you still have the

177
00:07:08,280 --> 00:07:09,840
same properties in just one example

178
00:07:09,840 --> 00:07:11,880
though if your field elements that you

179
00:07:11,880 --> 00:07:14,280
modify them this way and you multiply

180
00:07:14,280 --> 00:07:16,020
you get feedback

181
00:07:16,020 --> 00:07:18,000
and this means that we have to do

182
00:07:18,000 --> 00:07:19,139
something a bit more clever than

183
00:07:19,139 --> 00:07:22,080
exhaustive researching because even for

184
00:07:22,080 --> 00:07:25,860
small sizes the number of T and T

185
00:07:25,860 --> 00:07:28,620
inverses is large

186
00:07:28,620 --> 00:07:31,979
so now the problem becomes given a set

187
00:07:31,979 --> 00:07:34,919
of matrices binary matrices can we

188
00:07:34,919 --> 00:07:37,440
decide if they correspond to fluid

189
00:07:37,440 --> 00:07:40,080
multiplication or not

190
00:07:40,080 --> 00:07:42,300
okay and then this set s is normally

191
00:07:42,300 --> 00:07:44,580
would just be the blocks of our Matrix

192
00:07:44,580 --> 00:07:48,318
that we started and it was

193
00:07:49,139 --> 00:07:51,000
so we start easy we just take one

194
00:07:51,000 --> 00:07:54,479
element so how can I decide if one given

195
00:07:54,479 --> 00:07:58,979
Matrix of size s s times s so a matrix a

196
00:07:58,979 --> 00:08:00,840
which has to be invertible but because

197
00:08:00,840 --> 00:08:03,060
otherwise it's certainly not a field

198
00:08:03,060 --> 00:08:04,560
multiplications I'm only going to

199
00:08:04,560 --> 00:08:08,099
consider and invertible matrices is this

200
00:08:08,099 --> 00:08:11,099
a field multiplication or not can I

201
00:08:11,099 --> 00:08:12,479
represent this as a field multiplication

202
00:08:12,479 --> 00:08:14,699
or not this equivalent

203
00:08:14,699 --> 00:08:16,979
to the minimal polynomial minimal

204
00:08:16,979 --> 00:08:18,660
polynomial of the Matrix a being

205
00:08:18,660 --> 00:08:20,520
irreducible

206
00:08:20,520 --> 00:08:24,780
okay that is basically how all this

207
00:08:24,780 --> 00:08:27,479
um irreducible polynomials come into

208
00:08:27,479 --> 00:08:32,240
play I'm not going to give a proof here

209
00:08:32,240 --> 00:08:35,279
let's focus on the next um more

210
00:08:35,279 --> 00:08:36,899
complicated case now I don't have too

211
00:08:36,899 --> 00:08:39,899
well not only one Matrix but many

212
00:08:39,899 --> 00:08:42,299
matrices all these blocks and I still

213
00:08:42,299 --> 00:08:45,000
want to know the same question is this

214
00:08:45,000 --> 00:08:47,100
field can I represent this as a field or

215
00:08:47,100 --> 00:08:50,100
not so what I have to do now

216
00:08:50,100 --> 00:08:50,880
um

217
00:08:50,880 --> 00:08:53,760
is not only check something about

218
00:08:53,760 --> 00:08:56,399
irreducible polynomials but we also have

219
00:08:56,399 --> 00:08:58,080
to check if kind of if they fit together

220
00:08:58,080 --> 00:09:00,779
these matrices that's the the main point

221
00:09:00,779 --> 00:09:04,100
and so what we have the the statement

222
00:09:04,100 --> 00:09:06,899
that we prove in the paper I'll give a

223
00:09:06,899 --> 00:09:10,740
short proof here is that this is a is a

224
00:09:10,740 --> 00:09:12,420
final field it's a representation of a

225
00:09:12,420 --> 00:09:14,880
final field if and only if the

226
00:09:14,880 --> 00:09:16,920
multiplicative subgroup

227
00:09:16,920 --> 00:09:20,580
is cyclic and the generator of this

228
00:09:20,580 --> 00:09:23,040
subgroup has a primitive it has an

229
00:09:23,040 --> 00:09:24,899
irreducible Mini model

230
00:09:24,899 --> 00:09:25,920
okay

231
00:09:25,920 --> 00:09:28,700
and just let me give you a short

232
00:09:28,700 --> 00:09:33,240
proof so if it's cyclic and generated by

233
00:09:33,240 --> 00:09:35,040
irreducible minimal polynomial that's

234
00:09:35,040 --> 00:09:37,080
exactly the Lemma before so this this

235
00:09:37,080 --> 00:09:39,060
direction is clear and also the other

236
00:09:39,060 --> 00:09:40,860
direction is not a lot more complicated

237
00:09:40,860 --> 00:09:42,720
if you have a field then the

238
00:09:42,720 --> 00:09:46,320
multiplicative group is cyclic and then

239
00:09:46,320 --> 00:09:48,120
you take a generator and and this is

240
00:09:48,120 --> 00:09:50,040
going to generate

241
00:09:50,040 --> 00:09:52,260
um this this Matrix is going to generate

242
00:09:52,260 --> 00:09:53,459
this

243
00:09:53,459 --> 00:09:55,940
and this um

244
00:09:55,940 --> 00:09:59,100
suffering and and by the previous Lemma

245
00:09:59,100 --> 00:10:01,680
this minimal polynomial of alpha has to

246
00:10:01,680 --> 00:10:03,540
be irreducible

247
00:10:03,540 --> 00:10:06,600
so this is not too hard to see

248
00:10:06,600 --> 00:10:08,580
and now the question is how to make this

249
00:10:08,580 --> 00:10:11,820
into an algorithmic approach so how can

250
00:10:11,820 --> 00:10:14,279
we algorithmically verify this thing and

251
00:10:14,279 --> 00:10:15,959
the main problem is

252
00:10:15,959 --> 00:10:18,600
um so maybe algorithmically checking if

253
00:10:18,600 --> 00:10:20,339
the minimal polynomial Computing the

254
00:10:20,339 --> 00:10:22,620
minimal polynomial is easy and checking

255
00:10:22,620 --> 00:10:24,720
for irreducibility is easy so what is

256
00:10:24,720 --> 00:10:28,080
not as straightforward maybe is how to

257
00:10:28,080 --> 00:10:29,880
check if it's cyclic or not

258
00:10:29,880 --> 00:10:32,160
okay

259
00:10:32,160 --> 00:10:36,660
so how do we check if a group given by

260
00:10:36,660 --> 00:10:41,760
and generators is a cyclic group or not

261
00:10:41,760 --> 00:10:43,860
okay

262
00:10:43,860 --> 00:10:46,740
and so there's a one Lemma which is very

263
00:10:46,740 --> 00:10:49,500
nice if I have reducing again complexity

264
00:10:49,500 --> 00:10:51,959
by looking at two cases first so if I

265
00:10:51,959 --> 00:10:54,899
have a group which is generated by two

266
00:10:54,899 --> 00:10:57,600
elements and I know this group is cyclic

267
00:10:57,600 --> 00:11:00,660
then I can easily find a generator by

268
00:11:00,660 --> 00:11:05,100
taking a a suitable product of those two

269
00:11:05,100 --> 00:11:06,620
elements

270
00:11:06,620 --> 00:11:10,200
so I can always even without knowing

271
00:11:10,200 --> 00:11:11,880
that g is cyclic I can always write down

272
00:11:11,880 --> 00:11:13,200
this

273
00:11:13,200 --> 00:11:15,240
um this element yeah but then it's not a

274
00:11:15,240 --> 00:11:17,160
generator but if it's a cyclic group

275
00:11:17,160 --> 00:11:19,740
then I'm going to get a generator of the

276
00:11:19,740 --> 00:11:23,760
cyclic group in such a way and now this

277
00:11:23,760 --> 00:11:26,160
is just for two elements but you can

278
00:11:26,160 --> 00:11:30,600
just apply this Lemar recursively to

279
00:11:30,600 --> 00:11:32,959
kick out and to reduce the number of

280
00:11:32,959 --> 00:11:35,160
generators in your in your group one by

281
00:11:35,160 --> 00:11:36,120
one

282
00:11:36,120 --> 00:11:38,660
okay

283
00:11:39,120 --> 00:11:41,160
so this is the algorithm that does

284
00:11:41,160 --> 00:11:43,200
exactly this so first you're you're

285
00:11:43,200 --> 00:11:46,380
given this n matrices and you want to

286
00:11:46,380 --> 00:11:48,899
know if the multiplicative group is

287
00:11:48,899 --> 00:11:51,180
cyclic and if this corresponds to a

288
00:11:51,180 --> 00:11:54,800
finite if the

289
00:11:54,800 --> 00:11:57,540
the polynomial is irreducible

290
00:11:57,540 --> 00:12:00,720
so you first use this algorithm to find

291
00:12:00,720 --> 00:12:05,519
something which generates the group if

292
00:12:05,519 --> 00:12:07,920
it's a click so we still have to check

293
00:12:07,920 --> 00:12:10,500
if it's if this really is a generator or

294
00:12:10,500 --> 00:12:12,959
not so this is why we call it a pseudo

295
00:12:12,959 --> 00:12:14,399
generator

296
00:12:14,399 --> 00:12:17,040
so this we can easily compute and then

297
00:12:17,040 --> 00:12:19,680
we're going to check if all these other

298
00:12:19,680 --> 00:12:22,399
matrices if all these AIS

299
00:12:22,399 --> 00:12:26,100
elements in this suffering by using the

300
00:12:26,100 --> 00:12:28,200
additive structure using linear algebra

301
00:12:28,200 --> 00:12:30,899
to check if you can represent them

302
00:12:30,899 --> 00:12:34,260
um if they are in the span of of these

303
00:12:34,260 --> 00:12:35,700
things so if they are linear combination

304
00:12:35,700 --> 00:12:38,880
of these powers of Alpha and if not then

305
00:12:38,880 --> 00:12:41,220
we know it's not the field and if yes

306
00:12:41,220 --> 00:12:42,899
then we know it's Alpha is indeed a

307
00:12:42,899 --> 00:12:45,660
generator and then we test if it's a

308
00:12:45,660 --> 00:12:47,820
real reducible polynomial and then if

309
00:12:47,820 --> 00:12:49,620
not we say it's not the field and

310
00:12:49,620 --> 00:12:52,139
otherwise we found that it's a field and

311
00:12:52,139 --> 00:12:56,160
we actually computed the generator okay

312
00:12:56,160 --> 00:12:58,220
and the nice thing is that up to

313
00:12:58,220 --> 00:13:01,500
factorizing 2 to the S minus 1 this is a

314
00:13:01,500 --> 00:13:03,480
polynomial time so that's very fast and

315
00:13:03,480 --> 00:13:05,399
for the S with we are interested in so s

316
00:13:05,399 --> 00:13:06,899
is basically the size of the block size

317
00:13:06,899 --> 00:13:09,600
and not the block size but the s-box

318
00:13:09,600 --> 00:13:12,000
size so that's all always in all

319
00:13:12,000 --> 00:13:14,639
interesting practical cases be easy to

320
00:13:14,639 --> 00:13:16,860
factorize

321
00:13:16,860 --> 00:13:19,500
so application tools three block

322
00:13:19,500 --> 00:13:24,060
you yeah it's a second or a fraction of

323
00:13:24,060 --> 00:13:26,700
a second and you'll get the the field

324
00:13:26,700 --> 00:13:29,360
representation

325
00:13:29,459 --> 00:13:31,500
so this was actually done before so

326
00:13:31,500 --> 00:13:34,680
there was like handcrafted algorithm to

327
00:13:34,680 --> 00:13:38,339
check and so it actually the is just

328
00:13:38,339 --> 00:13:40,320
running through it reducible polynomials

329
00:13:40,320 --> 00:13:42,779
you would not find that it's uh that

330
00:13:42,779 --> 00:13:44,339
it's a

331
00:13:44,339 --> 00:13:47,399
um a food structure directly but you had

332
00:13:47,399 --> 00:13:50,700
to transpose and okay now basically this

333
00:13:50,700 --> 00:13:53,339
is more automatic and you know handcraft

334
00:13:53,339 --> 00:13:56,279
needed okay so there's hidden structure

335
00:13:56,279 --> 00:13:59,100
in the in the linear layout Street box

336
00:13:59,100 --> 00:14:01,260
okay

337
00:14:01,260 --> 00:14:04,079
so then second part was optification and

338
00:14:04,079 --> 00:14:06,300
more structure and as I said I will be

339
00:14:06,300 --> 00:14:08,160
very brief on this

340
00:14:08,160 --> 00:14:11,459
so looking back on on the choice that we

341
00:14:11,459 --> 00:14:13,980
had so now it's either the choice that

342
00:14:13,980 --> 00:14:16,500
we again that happens because we are

343
00:14:16,500 --> 00:14:18,959
just reverse engineering things and so

344
00:14:18,959 --> 00:14:20,880
maybe we do not get the intended

345
00:14:20,880 --> 00:14:23,279
representation or because we really want

346
00:14:23,279 --> 00:14:25,620
to hide structure if you want to really

347
00:14:25,620 --> 00:14:28,079
height structure you cannot put can of

348
00:14:28,079 --> 00:14:29,880
course put much more different things so

349
00:14:29,880 --> 00:14:31,800
there's no reason but all the T and T

350
00:14:31,800 --> 00:14:33,240
inverses have to be the same in the

351
00:14:33,240 --> 00:14:36,060
first round and there's no reason not to

352
00:14:36,060 --> 00:14:37,620
put different ones after the linear

353
00:14:37,620 --> 00:14:39,420
layer and and then you get something

354
00:14:39,420 --> 00:14:41,720
which is much more

355
00:14:41,720 --> 00:14:43,980
hidden yeah so this also is not the

356
00:14:43,980 --> 00:14:45,660
field representation you know so even if

357
00:14:45,660 --> 00:14:47,519
L is defined over the final field this

358
00:14:47,519 --> 00:14:50,160
is not there anymore yeah and in the

359
00:14:50,160 --> 00:14:54,000
paper we we explain how to

360
00:14:54,000 --> 00:14:55,680
how to recover

361
00:14:55,680 --> 00:14:58,740
um this field representation efficiently

362
00:14:58,740 --> 00:15:00,560
up to

363
00:15:00,560 --> 00:15:03,000
things that you cannot

364
00:15:03,000 --> 00:15:05,160
so there's no unique representation

365
00:15:05,160 --> 00:15:09,019
anymore but it's again

366
00:15:09,320 --> 00:15:10,880
efficiently

367
00:15:10,880 --> 00:15:13,079
and then finally

368
00:15:13,079 --> 00:15:16,199
the uh what more can be said after for

369
00:15:16,199 --> 00:15:17,760
example we found in this tree boxing

370
00:15:17,760 --> 00:15:22,339
that there is a final field

371
00:15:22,339 --> 00:15:25,260
hidden if you want what more can be said

372
00:15:25,260 --> 00:15:28,560
so then we also give ways to test if

373
00:15:28,560 --> 00:15:31,800
some heavily obfuscated like of the form

374
00:15:31,800 --> 00:15:34,380
I just shot on this like before if this

375
00:15:34,380 --> 00:15:37,019
actually corresponds to a cauchy MDS

376
00:15:37,019 --> 00:15:39,899
Matrix and again because of this heavy

377
00:15:39,899 --> 00:15:41,399
application it's technically a bit

378
00:15:41,399 --> 00:15:43,980
involved and the details can be found in

379
00:15:43,980 --> 00:15:45,240
the paper

380
00:15:45,240 --> 00:15:47,699
and if you then apply this to this

381
00:15:47,699 --> 00:15:50,100
Russian Standard you did see that not

382
00:15:50,100 --> 00:15:50,940
only

383
00:15:50,940 --> 00:15:52,380
um was it

384
00:15:52,380 --> 00:15:55,079
hidden that there's a fee structure but

385
00:15:55,079 --> 00:15:57,600
also it's actually a known Construction

386
00:15:57,600 --> 00:15:59,579
for uh

387
00:15:59,579 --> 00:16:01,440
for NDS matrices namely this kosher

388
00:16:01,440 --> 00:16:02,519
Construction

389
00:16:02,519 --> 00:16:04,620
and I think that's all I wanted to say

390
00:16:04,620 --> 00:16:07,519
thank you very much

391
00:16:10,680 --> 00:16:13,320
thank you gregar so we have time for

392
00:16:13,320 --> 00:16:15,420
questions are there any questions in in

393
00:16:15,420 --> 00:16:17,839
Beijing

394
00:16:26,820 --> 00:16:30,240
yes no question do you have questions in

395
00:16:30,240 --> 00:16:32,600
Kobe

396
00:16:35,899 --> 00:16:40,620
okay I've I have one question maybe two

397
00:16:40,620 --> 00:16:43,199
um so you you you you identify this

398
00:16:43,199 --> 00:16:45,420
hidden structure in the street bug uh

399
00:16:45,420 --> 00:16:48,060
Matrix so I guess for me obvious

400
00:16:48,060 --> 00:16:50,759
question do you see any possible uh

401
00:16:50,759 --> 00:16:52,560
problem with this structure did you try

402
00:16:52,560 --> 00:16:54,180
to think about this

403
00:16:54,180 --> 00:16:58,139
um potentially some some interplay with

404
00:16:58,139 --> 00:17:00,720
the s box as well with the I don't know

405
00:17:00,720 --> 00:17:02,759
much about the Xbox entrybook but maybe

406
00:17:02,759 --> 00:17:03,899
there are some interplay with this

407
00:17:03,899 --> 00:17:05,699
structure as well yes maybe there's some

408
00:17:05,699 --> 00:17:08,880
so we did not think too much about it I

409
00:17:08,880 --> 00:17:11,520
my personal feeling it's uh it's

410
00:17:11,520 --> 00:17:14,480
unlikely but uh

411
00:17:14,480 --> 00:17:17,760
if you certainly cannot exclude it

412
00:17:17,760 --> 00:17:19,919
maybe a joint work with Leo in the

413
00:17:19,919 --> 00:17:22,020
future you're looking into this but yeah

414
00:17:22,020 --> 00:17:23,400
it's not

415
00:17:23,400 --> 00:17:27,199
okay thank you very much

416
00:17:28,220 --> 00:17:32,600
oh oh we have a question okay

417
00:17:38,460 --> 00:17:40,080
um so not for your question but just on

418
00:17:40,080 --> 00:17:41,940
this uh possible interaction between the

419
00:17:41,940 --> 00:17:44,039
Xbox and the linear layer

420
00:17:44,039 --> 00:17:46,799
the s-box is defined in the same field

421
00:17:46,799 --> 00:17:49,799
so the Xbox it's nice thanks by the way

422
00:17:49,799 --> 00:17:52,380
representation is in the same field as

423
00:17:52,380 --> 00:17:54,419
the linear layer but I agree that at

424
00:17:54,419 --> 00:17:55,320
this point

425
00:17:55,320 --> 00:17:57,660
Beyond this I cannot say anything

426
00:17:57,660 --> 00:18:00,360
yeah

427
00:18:00,360 --> 00:18:04,039
that's the official version yes

428
00:18:06,240 --> 00:18:10,260
yeah so I I my opinion is it's not I am

429
00:18:10,260 --> 00:18:11,460
rather

430
00:18:11,460 --> 00:18:14,160
I would be super impressed if they put

431
00:18:14,160 --> 00:18:16,940
it back to end this

432
00:18:17,700 --> 00:18:20,520
no no but I would be super impressed and

433
00:18:20,520 --> 00:18:23,520
my feeling is I'm I don't think I'm so

434
00:18:23,520 --> 00:18:25,879
impressed

435
00:18:31,380 --> 00:18:34,260
so did you try same thing with cousin

436
00:18:34,260 --> 00:18:35,520
Matrix

437
00:18:35,520 --> 00:18:39,360
I mean that also is the same as box and

438
00:18:39,360 --> 00:18:41,340
but there's already a construction given

439
00:18:41,340 --> 00:18:46,399
right I know it's given

440
00:18:47,280 --> 00:18:49,500
it's in a different field yeah

441
00:18:49,500 --> 00:18:51,120
yes but there's I mean there's it's not

442
00:18:51,120 --> 00:18:53,940
I mean there we know that is coming from

443
00:18:53,940 --> 00:18:58,039
okay okay okay thank you

444
00:19:01,020 --> 00:19:04,799
okay if no more question let's think can

445
00:19:04,799 --> 00:19:07,080
I go again

446
00:19:07,080 --> 00:19:10,280
[Music]

447
00:19:28,320 --> 00:19:31,100
oh okay

448
00:19:32,580 --> 00:19:35,539
hi this is

449
00:19:36,179 --> 00:19:37,320
okay

450
00:19:37,320 --> 00:19:39,419
thank you I will introduce your talk

451
00:19:39,419 --> 00:19:41,460
okay so sorry

452
00:19:41,460 --> 00:19:43,500
all right so the next talk

453
00:19:43,500 --> 00:19:46,740
um is on the lower bound of cost of NDS

454
00:19:46,740 --> 00:19:47,940
matrices

455
00:19:47,940 --> 00:19:52,280
by I needed I needed

456
00:19:56,720 --> 00:20:01,460
will give the talk online thank you

457
00:20:03,500 --> 00:20:08,360
you have to shut the screen okay yeah

458
00:20:12,919 --> 00:20:16,980
hi all uh this is I will be presenting

459
00:20:16,980 --> 00:20:20,039
our paper on the lower bound of cost of

460
00:20:20,039 --> 00:20:22,380
MDS matrices this is a joint work with

461
00:20:22,380 --> 00:20:25,200
abhishekar

462
00:20:25,200 --> 00:20:27,900
as you can see from the title this is

463
00:20:27,900 --> 00:20:30,240
about MDS matrices in the context of

464
00:20:30,240 --> 00:20:33,419
lightweight cryptography in this work we

465
00:20:33,419 --> 00:20:35,220
established the lower bound on the cost

466
00:20:35,220 --> 00:20:38,400
of 4x4 block MDS matrices under the

467
00:20:38,400 --> 00:20:41,880
metric called swxr or sequential XR

468
00:20:41,880 --> 00:20:44,400
based onwards

469
00:20:44,400 --> 00:20:46,380
here is the outline of my talk I will

470
00:20:46,380 --> 00:20:48,660
briefly introduce basic concepts and

471
00:20:48,660 --> 00:20:50,400
then we see some preliminary results in

472
00:20:50,400 --> 00:20:52,620
settling the lower bound finally we

473
00:20:52,620 --> 00:20:54,840
discuss some limitations of our work and

474
00:20:54,840 --> 00:20:57,240
open questions

475
00:20:57,240 --> 00:21:00,960
as you all know MDS matrices are best

476
00:21:00,960 --> 00:21:03,240
suited for Designing diffusion layers

477
00:21:03,240 --> 00:21:05,640
because they provide optimal diffusion

478
00:21:05,640 --> 00:21:07,679
matrices can be implemented using

479
00:21:07,679 --> 00:21:09,980
circuits with XR Gates

480
00:21:09,980 --> 00:21:12,900
and the main question here is finding

481
00:21:12,900 --> 00:21:15,480
MDS matrices with minimal Hardware cost

482
00:21:15,480 --> 00:21:17,700
that is requiring least number of XR

483
00:21:17,700 --> 00:21:20,100
dates for the parameters of practical

484
00:21:20,100 --> 00:21:22,620
interest the general form of this

485
00:21:22,620 --> 00:21:24,059
problem can be stated like this

486
00:21:24,059 --> 00:21:26,340
minimizing the number of XR Gates

487
00:21:26,340 --> 00:21:28,740
necessary to compute a set of linear

488
00:21:28,740 --> 00:21:31,140
functions this is also known as short

489
00:21:31,140 --> 00:21:33,480
test linear program problem it is known

490
00:21:33,480 --> 00:21:36,299
to be NP hard for this reason given a

491
00:21:36,299 --> 00:21:38,940
matrix finding optimal implementation is

492
00:21:38,940 --> 00:21:41,299
hard

493
00:21:41,580 --> 00:21:43,799
a number of Matrix over the field after

494
00:21:43,799 --> 00:21:46,140
to the power n is MDS if all its Square

495
00:21:46,140 --> 00:21:48,419
sub matrices are non-singular in this

496
00:21:48,419 --> 00:21:50,940
work we consider block matrices it is

497
00:21:50,940 --> 00:21:53,340
the notation that we use in our

498
00:21:53,340 --> 00:21:55,620
presentation M and M denote the Ring of

499
00:21:55,620 --> 00:21:58,980
M by M Block MDS matrices with entries

500
00:21:58,980 --> 00:22:02,820
from n by n binary matrices gln is a

501
00:22:02,820 --> 00:22:04,679
general linear group of non-singular

502
00:22:04,679 --> 00:22:07,980
matrices DNM is the block diagonal

503
00:22:07,980 --> 00:22:09,600
matrices where the entries are

504
00:22:09,600 --> 00:22:12,179
non-similar matrices pnm is the block

505
00:22:12,179 --> 00:22:14,820
wise permutation matrices a block and

506
00:22:14,820 --> 00:22:17,880
MDS block Matrix m in mnm is set to be

507
00:22:17,880 --> 00:22:20,580
MDS if all its square blocks of matrices

508
00:22:20,580 --> 00:22:22,320
are non singular

509
00:22:22,320 --> 00:22:24,659
there are mainly three metrics discussed

510
00:22:24,659 --> 00:22:26,460
in the literature 2s is the cost of

511
00:22:26,460 --> 00:22:29,520
matrices the first one is dxr or DirectX

512
00:22:29,520 --> 00:22:31,860
R it is the number of ones in a binary

513
00:22:31,860 --> 00:22:33,900
Matrix minus size of the Matrix it gives

514
00:22:33,900 --> 00:22:36,360
a good upper bound on the cost of the

515
00:22:36,360 --> 00:22:39,419
Matrix another one is sxr or the

516
00:22:39,419 --> 00:22:40,799
sequential X or it is the number of

517
00:22:40,799 --> 00:22:42,840
bitwise XR operations in a sequential

518
00:22:42,840 --> 00:22:46,080
program with In-Place operations that an

519
00:22:46,080 --> 00:22:48,240
In-Place operation is like this given an

520
00:22:48,240 --> 00:22:51,240
input Vector X1 to X N replacing x i

521
00:22:51,240 --> 00:22:55,679
with x i plus x g this can be used as a

522
00:22:55,679 --> 00:22:58,200
Elementary row operation of type 3 on

523
00:22:58,200 --> 00:23:00,600
the input Vector x 1 to X N that's why

524
00:23:00,600 --> 00:23:02,460
given a matrix M will consider

525
00:23:02,460 --> 00:23:04,919
decompositions of this form where p is a

526
00:23:04,919 --> 00:23:07,140
permutation Matrix these are Elementary

527
00:23:07,140 --> 00:23:09,600
matrices of type 3 each Matrix

528
00:23:09,600 --> 00:23:11,640
corresponds to the operation x i

529
00:23:11,640 --> 00:23:14,400
replacing with x i plus x j it cross one

530
00:23:14,400 --> 00:23:16,700
XR so we want to minimize the number of

531
00:23:16,700 --> 00:23:19,020
type 3 matrices involved in the

532
00:23:19,020 --> 00:23:20,760
decomposition the minimum subject gives

533
00:23:20,760 --> 00:23:23,520
the sxr here we do not use any extra

534
00:23:23,520 --> 00:23:25,260
registers to store the intermediate

535
00:23:25,260 --> 00:23:27,840
values by allowing extra resistance one

536
00:23:27,840 --> 00:23:30,299
may get a better estimate this is known

537
00:23:30,299 --> 00:23:32,940
as g x r this is related to the SLP

538
00:23:32,940 --> 00:23:35,340
problem and also it is hard so for this

539
00:23:35,340 --> 00:23:37,799
reason Computing gxr for a given Matrix

540
00:23:37,799 --> 00:23:41,400
is a hard problem similarly sxr is

541
00:23:41,400 --> 00:23:43,140
related to Optimal pivoting using

542
00:23:43,140 --> 00:23:45,480
gaussian and elimination it is also a

543
00:23:45,480 --> 00:23:48,960
hard problem so Computing sxr of a given

544
00:23:48,960 --> 00:23:51,960
Matrix is also a hard problem

545
00:23:51,960 --> 00:23:54,780
the most popular choice for designing a

546
00:23:54,780 --> 00:23:56,400
diffusion layers is four by four block

547
00:23:56,400 --> 00:23:58,740
MDS matrices where the entry is coming

548
00:23:58,740 --> 00:24:01,740
from GL and F2 the least cost of a known

549
00:24:01,740 --> 00:24:04,320
Matrix in the case of n equal to 4 is 35

550
00:24:04,320 --> 00:24:07,559
and it is 67 in the case of n equal to

551
00:24:07,559 --> 00:24:10,500
8. the main question here is whether we

552
00:24:10,500 --> 00:24:13,020
can get better matrices it is still an

553
00:24:13,020 --> 00:24:15,600
open problem what we do in this work is

554
00:24:15,600 --> 00:24:18,299
we establish that this is the best that

555
00:24:18,299 --> 00:24:20,159
we can achieve if you consider the

556
00:24:20,159 --> 00:24:23,640
numeric swxr

557
00:24:24,240 --> 00:24:27,480
now we present some preliminary results

558
00:24:27,480 --> 00:24:31,220
used in establishing the lower bound

559
00:24:32,400 --> 00:24:34,620
as you know Elementary matrices are

560
00:24:34,620 --> 00:24:37,620
related to Elementary row operations and

561
00:24:37,620 --> 00:24:39,299
these are obtained by applying

562
00:24:39,299 --> 00:24:40,860
Elementary row operations on the

563
00:24:40,860 --> 00:24:43,320
identity Matrix the block identity

564
00:24:43,320 --> 00:24:46,260
Matrix of order M over JL and F2 is

565
00:24:46,260 --> 00:24:49,220
denoted by inm so this is nothing but

566
00:24:49,220 --> 00:24:52,020
identity Matrix of order MN over the

567
00:24:52,020 --> 00:24:54,900
binary field and viewing it is in a

568
00:24:54,900 --> 00:24:57,240
block form there are three types of

569
00:24:57,240 --> 00:24:59,340
Elementary matrices corresponding to

570
00:24:59,340 --> 00:25:01,200
three types of Elementary row operations

571
00:25:01,200 --> 00:25:03,320
the first one corresponds to

572
00:25:03,320 --> 00:25:06,539
interchanging to rows of a matrix the

573
00:25:06,539 --> 00:25:08,100
second one corresponds to multiplying

574
00:25:08,100 --> 00:25:10,679
the row by a non-zero scalar the third

575
00:25:10,679 --> 00:25:13,500
one corresponds to adding a scalar

576
00:25:13,500 --> 00:25:16,020
multiple of a row to the another row

577
00:25:16,020 --> 00:25:19,860
these are denoted by e i j e i j of a e

578
00:25:19,860 --> 00:25:22,860
i j of B where a B in the case of block

579
00:25:22,860 --> 00:25:26,279
matrices these are n by n matrices and

580
00:25:26,279 --> 00:25:28,799
these are known as coefficients and I J

581
00:25:28,799 --> 00:25:30,900
are the indices

582
00:25:30,900 --> 00:25:34,020
here B can be singular but we wanted a

583
00:25:34,020 --> 00:25:36,840
matrix decompositions using type 3

584
00:25:36,840 --> 00:25:39,480
matrices with non-singular coefficient

585
00:25:39,480 --> 00:25:41,700
matrices as you all know from linear

586
00:25:41,700 --> 00:25:44,220
algebra any non-singular Matrix can be

587
00:25:44,220 --> 00:25:45,600
decomposed as a product of Elementary

588
00:25:45,600 --> 00:25:48,059
matrices even in the case of block

589
00:25:48,059 --> 00:25:49,860
Matrix if it is non-singular it can be

590
00:25:49,860 --> 00:25:51,840
written as a product of Elementary block

591
00:25:51,840 --> 00:25:54,360
matrices of type 1 type 2 type 3 where

592
00:25:54,360 --> 00:25:56,279
type 2 and type 3 Matrix coefficient

593
00:25:56,279 --> 00:25:59,480
matrices are non singular

594
00:26:01,559 --> 00:26:03,840
as you all know a matrix can have

595
00:26:03,840 --> 00:26:06,179
variety of decompositions given a

596
00:26:06,179 --> 00:26:08,279
decomposition

597
00:26:08,279 --> 00:26:10,740
uh one can reorder these Elementary

598
00:26:10,740 --> 00:26:13,260
matrices by using these identities here

599
00:26:13,260 --> 00:26:15,900
you can observe that multiplying a type

600
00:26:15,900 --> 00:26:18,120
2 or type 3 matrix by a type 1 Matrix

601
00:26:18,120 --> 00:26:20,760
simply changes the coefficient the

602
00:26:20,760 --> 00:26:22,559
indices of the type 2 type 3 matrices

603
00:26:22,559 --> 00:26:25,400
but there is no change in type

604
00:26:25,400 --> 00:26:28,740
coefficients similarly multiplying a

605
00:26:28,740 --> 00:26:31,080
Type 3 Matrix with type 2 there is a

606
00:26:31,080 --> 00:26:32,520
change in the coefficient but there is

607
00:26:32,520 --> 00:26:33,900
no change in the

608
00:26:33,900 --> 00:26:36,840
indices of the type 3 matrices using

609
00:26:36,840 --> 00:26:39,900
these identities we can reorder the uh

610
00:26:39,900 --> 00:26:42,000
Elementary matrices in a given

611
00:26:42,000 --> 00:26:43,200
decomposition

612
00:26:43,200 --> 00:26:45,779
using the first limit one can move all

613
00:26:45,779 --> 00:26:47,700
the type 1 matrices to the left or right

614
00:26:47,700 --> 00:26:50,159
are by appropriately changing the

615
00:26:50,159 --> 00:26:52,440
coefficients of the uh the appropriately

616
00:26:52,440 --> 00:26:54,000
changing the indices of the type 2 and

617
00:26:54,000 --> 00:26:56,580
type 3 matrices so that we can get a

618
00:26:56,580 --> 00:26:59,039
decomposition of this form where p is a

619
00:26:59,039 --> 00:27:00,720
block permutation Matrix corresponding

620
00:27:00,720 --> 00:27:03,600
to the all the type 1 Elementary block

621
00:27:03,600 --> 00:27:05,640
matrices and the remaining portion is

622
00:27:05,640 --> 00:27:08,400
product of only type 1 type 3 mattresses

623
00:27:08,400 --> 00:27:11,220
using the second gamma we can move all

624
00:27:11,220 --> 00:27:13,440
the type 2 matrices to the left and get

625
00:27:13,440 --> 00:27:15,720
a decomposition of this form where p is

626
00:27:15,720 --> 00:27:17,640
a block permutation Matrix D is a block

627
00:27:17,640 --> 00:27:19,559
diagonal matrix which is the product of

628
00:27:19,559 --> 00:27:21,659
type 2 matrices by appropriately

629
00:27:21,659 --> 00:27:23,520
modifying the coefficient but there is

630
00:27:23,520 --> 00:27:26,460
no change in the indices of the type 3

631
00:27:26,460 --> 00:27:28,620
matrices this is the portion of product

632
00:27:28,620 --> 00:27:31,679
of type 3 matrices

633
00:27:31,679 --> 00:27:34,620
we can have this kind of decompositions

634
00:27:34,620 --> 00:27:37,799
and given a decomposition one can easily

635
00:27:37,799 --> 00:27:41,400
compute MX by applying G1 to GK at

636
00:27:41,400 --> 00:27:43,799
relatively and the input Vector X so the

637
00:27:43,799 --> 00:27:46,200
cost of implementing m is equal to the

638
00:27:46,200 --> 00:27:48,419
sum of the cost of the implementing J1

639
00:27:48,419 --> 00:27:51,600
to GM GK

640
00:27:51,600 --> 00:27:54,659
the sxr cost of type 1 Matrix is zero

641
00:27:54,659 --> 00:27:57,779
because it is simply a permutation sxr

642
00:27:57,779 --> 00:28:01,020
cost of a type 2 Matrix is equal to sxr

643
00:28:01,020 --> 00:28:03,419
of its coefficient Matrix a in the case

644
00:28:03,419 --> 00:28:06,360
of type 3 Matrix the sxr of type 3

645
00:28:06,360 --> 00:28:09,240
Matrix is equal to n if B is a

646
00:28:09,240 --> 00:28:11,400
permutation Matrix if it is not a

647
00:28:11,400 --> 00:28:13,679
permutation Matrix it is greater than or

648
00:28:13,679 --> 00:28:15,480
equal to n plus one

649
00:28:15,480 --> 00:28:18,179
similar to the sxr we consider

650
00:28:18,179 --> 00:28:20,700
decompositions of the sperm where p is a

651
00:28:20,700 --> 00:28:22,919
block permutation Matrix since its cost

652
00:28:22,919 --> 00:28:25,559
is zero we want to separate it and look

653
00:28:25,559 --> 00:28:27,179
at the other portion which is a product

654
00:28:27,179 --> 00:28:29,520
of type 2 and type 3 matrices with

655
00:28:29,520 --> 00:28:32,880
non-singular coefficients yes swxr of

656
00:28:32,880 --> 00:28:35,580
the block Matrix m is minimum overall

657
00:28:35,580 --> 00:28:39,139
such decompositions of this form

658
00:28:41,880 --> 00:28:44,100
we can also see that given a block

659
00:28:44,100 --> 00:28:47,220
Matrix and we get a variety of matrices

660
00:28:47,220 --> 00:28:51,120
which have the same swxr cost Erp is our

661
00:28:51,120 --> 00:28:53,159
block permutation Matrix disr block

662
00:28:53,159 --> 00:28:55,880
diagonal matrix whose entries are again

663
00:28:55,880 --> 00:28:58,980
permutation matrices over F2

664
00:28:58,980 --> 00:29:01,860
and the inverse of M and M transpose

665
00:29:01,860 --> 00:29:05,460
also have a the same swxr cost not only

666
00:29:05,460 --> 00:29:08,760
that these four matrices are also MDS if

667
00:29:08,760 --> 00:29:11,940
m is MDS and also they preserve the cost

668
00:29:11,940 --> 00:29:15,320
swx are costs

669
00:29:16,320 --> 00:29:19,100
now we discuss the main ideas

670
00:29:19,100 --> 00:29:21,840
uh in settling the lower bound

671
00:29:21,840 --> 00:29:24,419
in our search technique

672
00:29:24,419 --> 00:29:27,779
a path of length L is an ordered list of

673
00:29:27,779 --> 00:29:29,760
Elementary block matrices of type 3

674
00:29:29,760 --> 00:29:32,159
ignoring the coefficient matrices so you

675
00:29:32,159 --> 00:29:35,520
can view it as an order list of tuples

676
00:29:35,520 --> 00:29:38,159
consisting of row and column indices of

677
00:29:38,159 --> 00:29:41,059
the type 3 matrices

678
00:29:42,299 --> 00:29:44,580
The Matrix generated by this path is

679
00:29:44,580 --> 00:29:46,380
having a decomposition of the sperm

680
00:29:46,380 --> 00:29:50,580
where we have this type 3 form and we at

681
00:29:50,580 --> 00:29:53,520
take p and Q to B Block permutation

682
00:29:53,520 --> 00:29:56,100
matrices and D to be a block diagonal

683
00:29:56,100 --> 00:29:58,260
matrix a matrix having this kind of

684
00:29:58,260 --> 00:30:01,320
decomposition is belonged to this path

685
00:30:01,320 --> 00:30:03,720
or this Matrix can be generated by this

686
00:30:03,720 --> 00:30:04,860
path

687
00:30:04,860 --> 00:30:06,299
similarly

688
00:30:06,299 --> 00:30:08,700
we can also consider this kind of paths

689
00:30:08,700 --> 00:30:11,820
because a type 2 Matrix if you want to

690
00:30:11,820 --> 00:30:14,159
reorder type a product of five to one

691
00:30:14,159 --> 00:30:16,440
type three it doesn't alter the indices

692
00:30:16,440 --> 00:30:18,779
of the type 3 matrices because we are

693
00:30:18,779 --> 00:30:21,240
only worried about the indices we can

694
00:30:21,240 --> 00:30:23,460
also consider decompositions of this

695
00:30:23,460 --> 00:30:25,080
pump either you consider this

696
00:30:25,080 --> 00:30:26,640
decomposition or this decomposition

697
00:30:26,640 --> 00:30:29,520
Matrix having this this composition we

698
00:30:29,520 --> 00:30:33,260
say that it is belonging to this path B

699
00:30:33,559 --> 00:30:35,820
the mattress can have variety of

700
00:30:35,820 --> 00:30:38,159
decompositions so mattress can be

701
00:30:38,159 --> 00:30:40,320
generated by variety of paths

702
00:30:40,320 --> 00:30:42,659
we want to see what are all the paths

703
00:30:42,659 --> 00:30:44,279
that we can generate the same set of

704
00:30:44,279 --> 00:30:46,260
matrices

705
00:30:46,260 --> 00:30:47,880
observe that

706
00:30:47,880 --> 00:30:49,980
in the product of two type 3 matrices

707
00:30:49,980 --> 00:30:51,779
they commute with each other if the

708
00:30:51,779 --> 00:30:54,779
indices satisfy this relation it has no

709
00:30:54,779 --> 00:30:56,520
dependency on the coefficients if it

710
00:30:56,520 --> 00:31:00,000
satisfies this relation so in a path if

711
00:31:00,000 --> 00:31:02,100
the indices satisfies this relation you

712
00:31:02,100 --> 00:31:05,340
can reorder these elements and then the

713
00:31:05,340 --> 00:31:07,200
reordered path also generate the same

714
00:31:07,200 --> 00:31:09,600
set of matrices

715
00:31:09,600 --> 00:31:13,380
not only that if you have in a path if

716
00:31:13,380 --> 00:31:15,240
two consecutive elements having the same

717
00:31:15,240 --> 00:31:17,520
indices they can be clubbed together to

718
00:31:17,520 --> 00:31:19,919
a single element so the path of length L

719
00:31:19,919 --> 00:31:21,600
can be reduced to a path of length L

720
00:31:21,600 --> 00:31:23,820
minus one that also generate the same

721
00:31:23,820 --> 00:31:27,200
set of matrices another way of getting

722
00:31:27,200 --> 00:31:30,059
New Paths to which is generate the same

723
00:31:30,059 --> 00:31:31,799
set of matrices is by applying a

724
00:31:31,799 --> 00:31:34,559
permutation on the indices of the given

725
00:31:34,559 --> 00:31:36,779
path this is called a conjugate of the

726
00:31:36,779 --> 00:31:39,600
path because we consider all the permit

727
00:31:39,600 --> 00:31:42,240
all possible permutations here that

728
00:31:42,240 --> 00:31:44,580
actually makes we can incorporate this

729
00:31:44,580 --> 00:31:47,159
also so this way this path also generate

730
00:31:47,159 --> 00:31:49,919
the same set of matrices

731
00:31:49,919 --> 00:31:52,860
so using these relations we Define what

732
00:31:52,860 --> 00:31:54,600
are known as equivalence classes of this

733
00:31:54,600 --> 00:31:55,559
path

734
00:31:55,559 --> 00:31:57,480
suppose we have two parts of the same

735
00:31:57,480 --> 00:31:59,880
length the path B is equivalent to path

736
00:31:59,880 --> 00:32:02,340
B Prime if it is a conjugate of a path

737
00:32:02,340 --> 00:32:04,500
obtained by iterative will applying

738
00:32:04,500 --> 00:32:06,899
valid exchanges on the path B what do

739
00:32:06,899 --> 00:32:08,820
you mean by valid exchange if you two

740
00:32:08,820 --> 00:32:10,559
consecutive elements commute with each

741
00:32:10,559 --> 00:32:12,539
other then you simply reorder those

742
00:32:12,539 --> 00:32:14,220
elements like that you can apply

743
00:32:14,220 --> 00:32:16,440
sequence of these reorderings and then

744
00:32:16,440 --> 00:32:18,539
finally take a conjugation you get the

745
00:32:18,539 --> 00:32:21,059
path as you can see from the earlier

746
00:32:21,059 --> 00:32:23,279
discussion these two paths generate the

747
00:32:23,279 --> 00:32:25,440
same set of matrices

748
00:32:25,440 --> 00:32:28,020
if B is equal into B Prime then they

749
00:32:28,020 --> 00:32:29,820
both generate the same set of matrices

750
00:32:29,820 --> 00:32:32,399
this way we can Club several parts into

751
00:32:32,399 --> 00:32:36,299
an equivalence class and now we Club few

752
00:32:36,299 --> 00:32:38,220
more such equivalence classes to extend

753
00:32:38,220 --> 00:32:40,740
these equivalence classes

754
00:32:40,740 --> 00:32:43,980
given a path b and a matrix generated by

755
00:32:43,980 --> 00:32:46,320
this path p m inverse can be given by

756
00:32:46,320 --> 00:32:48,600
this decomposition M transpose has this

757
00:32:48,600 --> 00:32:50,820
decomposition and you can see that these

758
00:32:50,820 --> 00:32:54,620
are related to this path

759
00:32:58,320 --> 00:33:01,020
simply reversing this order of this path

760
00:33:01,020 --> 00:33:03,120
you can see that this m inverse is

761
00:33:03,120 --> 00:33:06,980
generated by this path and simply

762
00:33:06,980 --> 00:33:09,419
exchanging the column and row indices of

763
00:33:09,419 --> 00:33:12,539
this entries we get that inverse of the

764
00:33:12,539 --> 00:33:14,159
transpose Matrix is generated by this

765
00:33:14,159 --> 00:33:15,539
path

766
00:33:15,539 --> 00:33:17,820
so we Club all these four

767
00:33:17,820 --> 00:33:20,700
into an extended equivalence class the

768
00:33:20,700 --> 00:33:23,159
main result here is

769
00:33:23,159 --> 00:33:25,440
if you take two parts in an external

770
00:33:25,440 --> 00:33:29,100
equivalence class and if one path can

771
00:33:29,100 --> 00:33:31,440
generate an MDS Matrix and you can also

772
00:33:31,440 --> 00:33:34,080
get a MDS Matrix using the other path

773
00:33:34,080 --> 00:33:36,720
because if m is MDS all these matrices

774
00:33:36,720 --> 00:33:40,380
are also MDS not only that they all have

775
00:33:40,380 --> 00:33:42,600
the same cost so if you can generate a

776
00:33:42,600 --> 00:33:45,059
matrix MDS Matrix using One path having

777
00:33:45,059 --> 00:33:47,039
some cost then you can also generate an

778
00:33:47,039 --> 00:33:49,860
MDS Matrix with other path having the

779
00:33:49,860 --> 00:33:51,860
same cost so

780
00:33:51,860 --> 00:33:55,320
you can if you want to search for low

781
00:33:55,320 --> 00:33:57,779
cost MDS matrices it is enough to test

782
00:33:57,779 --> 00:33:59,700
for only representative one

783
00:33:59,700 --> 00:34:01,440
representative path of these equivalence

784
00:34:01,440 --> 00:34:04,320
classes and this greatly reduces the

785
00:34:04,320 --> 00:34:06,120
search technique

786
00:34:06,120 --> 00:34:08,879
such complexity so we use this idea to

787
00:34:08,879 --> 00:34:12,599
search low cost matrices

788
00:34:12,599 --> 00:34:15,359
from the wrong address paper we know

789
00:34:15,359 --> 00:34:17,879
that the smallest path that can generate

790
00:34:17,879 --> 00:34:21,918
MDS matrices is of length 8.

791
00:34:22,320 --> 00:34:24,179
first they actually searched for

792
00:34:24,179 --> 00:34:27,000
matrices over the finite field F2 to the

793
00:34:27,000 --> 00:34:29,040
power n searching all the paths of

794
00:34:29,040 --> 00:34:31,859
length eight there are 12 Power 8 paths

795
00:34:31,859 --> 00:34:34,619
and the best that they can get is having

796
00:34:34,619 --> 00:34:37,260
cost eight and plus three so this match

797
00:34:37,260 --> 00:34:39,060
is the known result they could not

798
00:34:39,060 --> 00:34:41,580
improve the known matrices then they try

799
00:34:41,580 --> 00:34:46,199
to search over gel four F2 or glnf2

800
00:34:46,199 --> 00:34:48,719
their search complexity is huge so they

801
00:34:48,719 --> 00:34:50,760
could not establish whether there exist

802
00:34:50,760 --> 00:34:53,219
matrices with complex with cost less

803
00:34:53,219 --> 00:34:57,319
than or equal to and eight n plus two

804
00:34:57,740 --> 00:35:00,540
what we do in this work is we present an

805
00:35:00,540 --> 00:35:03,240
algorithm to identify potential parts of

806
00:35:03,240 --> 00:35:05,880
length 8 that can generate MDS matrices

807
00:35:05,880 --> 00:35:08,760
as discussed it is enough to test only

808
00:35:08,760 --> 00:35:10,800
representative parts of the extended

809
00:35:10,800 --> 00:35:12,900
equivalence classes so we see that

810
00:35:12,900 --> 00:35:14,940
finally there are only two such paths up

811
00:35:14,940 --> 00:35:16,980
to Extended equivalence class that can

812
00:35:16,980 --> 00:35:20,599
generate MDS matrices by applying some

813
00:35:20,599 --> 00:35:23,700
Transformations and we see that

814
00:35:23,700 --> 00:35:27,240
even these two parts we cannot generate

815
00:35:27,240 --> 00:35:29,460
generate four by four block matrices

816
00:35:29,460 --> 00:35:33,320
having cost eight n plus two

817
00:35:33,660 --> 00:35:35,820
there are 12 Power 8 paths because there

818
00:35:35,820 --> 00:35:40,079
are 12 type 3 matrices and

819
00:35:40,079 --> 00:35:42,300
we want to check for potential paths

820
00:35:42,300 --> 00:35:44,880
that can generate MDS matrices first we

821
00:35:44,880 --> 00:35:47,339
eliminate all those paths that can be

822
00:35:47,339 --> 00:35:51,180
shortened uh that means only

823
00:35:51,180 --> 00:35:53,460
pass of length less than 8 cannot

824
00:35:53,460 --> 00:35:55,320
generate MDS matrices so we eliminate

825
00:35:55,320 --> 00:35:57,960
all those paths then from the remaining

826
00:35:57,960 --> 00:36:00,180
path we consider only representative

827
00:36:00,180 --> 00:36:02,040
Paths of this extended equivalence

828
00:36:02,040 --> 00:36:04,619
classes then we search only those

829
00:36:04,619 --> 00:36:06,720
representative set of paths symbolically

830
00:36:06,720 --> 00:36:09,960
whether they can verify MDS matrices you

831
00:36:09,960 --> 00:36:12,060
can check the paper for the details we

832
00:36:12,060 --> 00:36:14,640
use symbolic computation uh treating

833
00:36:14,640 --> 00:36:17,400
these elements as of a free algebra on

834
00:36:17,400 --> 00:36:19,380
the indeterminants of the coefficient

835
00:36:19,380 --> 00:36:22,200
matrices out of this 12 Power 8 paths

836
00:36:22,200 --> 00:36:24,660
only two non equivalent paths remain

837
00:36:24,660 --> 00:36:27,240
which can generate MDS matrices

838
00:36:27,240 --> 00:36:31,380
now we take these two paths ah presented

839
00:36:31,380 --> 00:36:33,359
here the representatives of those two

840
00:36:33,359 --> 00:36:35,880
equivalence classes and we check whether

841
00:36:35,880 --> 00:36:38,339
these two paths can generate

842
00:36:38,339 --> 00:36:41,040
MDS matrices with cost less than or

843
00:36:41,040 --> 00:36:43,260
equal to 8 and plus 2.

844
00:36:43,260 --> 00:36:45,980
we consider the first path and a matrix

845
00:36:45,980 --> 00:36:49,020
uh generated by a first part is of this

846
00:36:49,020 --> 00:36:50,820
form like this and the coefficient

847
00:36:50,820 --> 00:36:52,380
matrices are

848
00:36:52,380 --> 00:36:55,920
given by this as and B's if their exist

849
00:36:55,920 --> 00:36:59,339
a matrix with cost eight n plus 2

850
00:36:59,339 --> 00:37:02,099
what we can have is only at most two of

851
00:37:02,099 --> 00:37:03,720
these coefficient Matrix can be non

852
00:37:03,720 --> 00:37:05,640
permutation all others must be

853
00:37:05,640 --> 00:37:07,859
permutation matrices because there are

854
00:37:07,859 --> 00:37:10,920
eight type three matrices uh A10 is

855
00:37:10,920 --> 00:37:13,200
already fixed and only you can have

856
00:37:13,200 --> 00:37:15,660
additional two so only two of these

857
00:37:15,660 --> 00:37:17,460
coefficient matrices can be non

858
00:37:17,460 --> 00:37:19,500
permutation all the remaining are

859
00:37:19,500 --> 00:37:21,900
permutation matrices there are 36

860
00:37:21,900 --> 00:37:24,060
matrices there are 24 permutations if

861
00:37:24,060 --> 00:37:26,520
you want to adjust your research it's

862
00:37:26,520 --> 00:37:30,599
huge task what we do is we just look at

863
00:37:30,599 --> 00:37:32,760
the elements of this form like this

864
00:37:32,760 --> 00:37:36,359
which are some of two monomials and we

865
00:37:36,359 --> 00:37:38,880
look for all such elements in M and M

866
00:37:38,880 --> 00:37:42,780
inverse observe that if

867
00:37:42,780 --> 00:37:46,020
this The observed expression the

868
00:37:46,020 --> 00:37:48,180
bracketed portion this is a sum of two

869
00:37:48,180 --> 00:37:51,300
monomials if all these efficient

870
00:37:51,300 --> 00:37:53,760
matrices are permutation matrices then

871
00:37:53,760 --> 00:37:58,260
this sum becomes singular Matrix so

872
00:37:58,260 --> 00:38:00,540
because sum of two permutations is a

873
00:38:00,540 --> 00:38:02,700
singular Matrix if we want this to be

874
00:38:02,700 --> 00:38:05,940
non-singular Matrix then at least one of

875
00:38:05,940 --> 00:38:08,339
the coefficient Matrix appearing here in

876
00:38:08,339 --> 00:38:09,839
this expression must be non-similar

877
00:38:09,839 --> 00:38:12,960
Matrix this way we are identify which

878
00:38:12,960 --> 00:38:15,180
pair of elements can be non-singular

879
00:38:15,180 --> 00:38:19,200
matrices non permutation matrices and we

880
00:38:19,200 --> 00:38:21,960
identify that only there exists only one

881
00:38:21,960 --> 00:38:24,540
one pair of elements that is B4 and B5

882
00:38:24,540 --> 00:38:26,940
can be non permutation and all the

883
00:38:26,940 --> 00:38:29,339
remains must be permutations if you want

884
00:38:29,339 --> 00:38:32,339
to have a matrix with 8N Plus 2.

885
00:38:32,339 --> 00:38:34,079
we will then further apply some

886
00:38:34,079 --> 00:38:36,480
Transformations and then verify whether

887
00:38:36,480 --> 00:38:38,700
with such a choice whether we can get a

888
00:38:38,700 --> 00:38:41,579
MDS Matrix even this fails in the case

889
00:38:41,579 --> 00:38:45,480
of testing two by two sub matrices

890
00:38:45,480 --> 00:38:47,880
so what we see is we check similarly the

891
00:38:47,880 --> 00:38:50,099
other path what we see is both these

892
00:38:50,099 --> 00:38:53,040
paths cannot generate MDS matrices whose

893
00:38:53,040 --> 00:38:54,780
cost is less than or equal to 8 n Plus

894
00:38:54,780 --> 00:38:58,079
2. so what we see is that the minimum

895
00:38:58,079 --> 00:39:01,380
swx or cost of four by four block MDS

896
00:39:01,380 --> 00:39:06,200
Matrix must be at least eight n Plus 3.

897
00:39:08,339 --> 00:39:10,619
by using extended equivalence classes

898
00:39:10,619 --> 00:39:12,359
and some Transformations we are able to

899
00:39:12,359 --> 00:39:14,940
establish the lower bound on the cost of

900
00:39:14,940 --> 00:39:16,560
four by four block numbers matrices

901
00:39:16,560 --> 00:39:19,859
under this metric swxr cost metric if

902
00:39:19,859 --> 00:39:21,599
you want to get better matrices you have

903
00:39:21,599 --> 00:39:24,780
to use other metrics such as sxr or gxr

904
00:39:24,780 --> 00:39:27,660
in this metric in this search Technique

905
00:39:27,660 --> 00:39:30,119
we have not considered a depth parameter

906
00:39:30,119 --> 00:39:32,820
by including depth parameter one can

907
00:39:32,820 --> 00:39:34,220
search for

908
00:39:34,220 --> 00:39:39,359
uh low cost matrices and also uh this is

909
00:39:39,359 --> 00:39:41,520
we we only work with four by four

910
00:39:41,520 --> 00:39:44,099
matrices if you want we can extend these

911
00:39:44,099 --> 00:39:47,040
ideas for higher order matrices but the

912
00:39:47,040 --> 00:39:50,040
such complexity grows drastically so we

913
00:39:50,040 --> 00:39:51,359
can probably use some heuristic

914
00:39:51,359 --> 00:39:53,640
techniques to search for low cost

915
00:39:53,640 --> 00:39:57,260
matrices in higher order matrices

916
00:39:57,260 --> 00:40:00,300
uh that's all thank you for our

917
00:40:00,300 --> 00:40:02,660
attention

918
00:40:09,200 --> 00:40:12,060
so do we have questions in Beijing we

919
00:40:12,060 --> 00:40:15,859
have maybe just time for one question

920
00:40:16,619 --> 00:40:19,560
they're the question in Beijing

921
00:40:19,560 --> 00:40:21,720
okay

922
00:40:21,720 --> 00:40:25,619
hello uh hello in the previous work uh

923
00:40:25,619 --> 00:40:29,220
once I told the pro are they proved uh

924
00:40:29,220 --> 00:40:32,579
some lower bounds or not only the MDS

925
00:40:32,579 --> 00:40:35,940
matrices but also the emulatory Matrix

926
00:40:35,940 --> 00:40:39,119
so I want to know if your method can be

927
00:40:39,119 --> 00:40:43,640
used in The evolutionary matrices

928
00:40:48,660 --> 00:40:52,279
yeah we can use this technique

929
00:40:56,160 --> 00:41:01,380
okay but uh in the previous I try to use

930
00:41:01,380 --> 00:41:04,099
the method in the involutely but the

931
00:41:04,099 --> 00:41:10,020
effects maybe not code in the MDS in

932
00:41:10,020 --> 00:41:10,980
matrices

933
00:41:10,980 --> 00:41:14,280
so I think it can all that we have to do

934
00:41:14,280 --> 00:41:16,560
is we have to actually take permutations

935
00:41:16,560 --> 00:41:19,140
into consideration we have to insert

936
00:41:19,140 --> 00:41:22,020
permutation in between so that we can

937
00:41:22,020 --> 00:41:24,960
make involutely matrices because type 1

938
00:41:24,960 --> 00:41:27,540
mattresses uh changes the indices of the

939
00:41:27,540 --> 00:41:30,540
type 3 matrices so we have to uh this is

940
00:41:30,540 --> 00:41:32,339
actually we are also looking into this

941
00:41:32,339 --> 00:41:35,300
kind of uh

942
00:41:35,300 --> 00:41:39,300
approach to find a low cost involutely

943
00:41:39,300 --> 00:41:43,440
MDS matrices yeah okay uh I think maybe

944
00:41:43,440 --> 00:41:47,339
the problem or the swxr yeah thank you

945
00:41:47,339 --> 00:41:50,480
thank you yeah

946
00:41:51,000 --> 00:41:53,339
okay thank you I think we don't have

947
00:41:53,339 --> 00:41:55,619
more time for other questions so let's

948
00:41:55,619 --> 00:41:58,520
thank the speaker again

949
00:42:06,180 --> 00:42:08,280
all right

950
00:42:08,280 --> 00:42:11,040
so then let's talk of the session will

951
00:42:11,040 --> 00:42:13,020
be more input makes difference

952
00:42:13,020 --> 00:42:15,599
implementation of linear layers using

953
00:42:15,599 --> 00:42:18,000
gates with more than two inputs

954
00:42:18,000 --> 00:42:21,300
this is a paper written by Kun you weija

955
00:42:21,300 --> 00:42:22,940
Wang lingson

956
00:42:22,940 --> 00:42:26,540
sorry young Hong fan

957
00:42:26,540 --> 00:42:29,940
and the speaker will be conglu

958
00:42:29,940 --> 00:42:32,720
in Beijing

959
00:42:36,720 --> 00:42:39,240
you have to share the screen

960
00:42:39,240 --> 00:42:41,959
if possible

961
00:42:45,599 --> 00:42:48,380
19 years

962
00:42:55,180 --> 00:42:58,379
[Music]

963
00:43:35,220 --> 00:43:38,379
[Music]

964
00:43:57,540 --> 00:44:00,020
much

965
00:44:22,619 --> 00:44:26,720
there are any technical issues

966
00:44:35,839 --> 00:44:41,160
yep because also known everyone uh

967
00:44:43,680 --> 00:44:45,720
okay it's an honor for me to present

968
00:44:45,720 --> 00:44:48,240
your paper today and it's a joint work

969
00:44:48,240 --> 00:44:52,400
with one without swinging final

970
00:44:52,400 --> 00:44:56,280
12 from day six suspects and let's start

971
00:44:56,280 --> 00:44:58,859
by start uh discussing some background

972
00:44:58,859 --> 00:45:01,200
information and first type of question

973
00:45:01,200 --> 00:45:04,140
for you how to apply a ciphers in

974
00:45:04,140 --> 00:45:06,180
results constraint devices

975
00:45:06,180 --> 00:45:08,460
yeah that's why we are interested in the

976
00:45:08,460 --> 00:45:10,680
language photography

977
00:45:10,680 --> 00:45:13,140
in recent years the live choreography

978
00:45:13,140 --> 00:45:15,660
has become a major focus in the

979
00:45:15,660 --> 00:45:19,140
cryptography Community due to the rapid

980
00:45:19,140 --> 00:45:21,839
development of the library devices such

981
00:45:21,839 --> 00:45:24,000
as the internal things and radio

982
00:45:24,000 --> 00:45:26,880
frequency artificial types and these

983
00:45:26,880 --> 00:45:30,240
devices has a limited resources in terms

984
00:45:30,240 --> 00:45:33,240
of the circular size the power

985
00:45:33,240 --> 00:45:36,119
consumption and the latency therefore we

986
00:45:36,119 --> 00:45:38,880
have to expand the limitation to these

987
00:45:38,880 --> 00:45:42,359
devices and generally speaking the

988
00:45:42,359 --> 00:45:45,000
direction is divided there are two

989
00:45:45,000 --> 00:45:48,599
directions now first we can design new

990
00:45:48,599 --> 00:45:50,880
language primitive

991
00:45:50,880 --> 00:45:53,520
that can efficient in hardware and

992
00:45:53,520 --> 00:45:55,280
software efficient

993
00:45:55,280 --> 00:45:58,920
and another method it's optimize the

994
00:45:58,920 --> 00:46:03,359
existing implications that can Aid in

995
00:46:03,359 --> 00:46:06,599
designing new parameters and the

996
00:46:06,599 --> 00:46:09,060
criteria is about the power energy

997
00:46:09,060 --> 00:46:12,720
support area and latency and in practice

998
00:46:12,720 --> 00:46:15,359
the diffusion and configuring components

999
00:46:15,359 --> 00:46:18,300
are relevant to the linear and

1000
00:46:18,300 --> 00:46:20,700
non-linear operations and in this paper

1001
00:46:20,700 --> 00:46:23,339
I work mainly focuses on the area of the

1002
00:46:23,339 --> 00:46:25,560
linear layers such as the mixed columns

1003
00:46:25,560 --> 00:46:27,060
in AES

1004
00:46:27,060 --> 00:46:28,920
and then we talk about the motivation

1005
00:46:28,920 --> 00:46:31,319
and contributions and this is the

1006
00:46:31,319 --> 00:46:33,420
astronaut function and the MC in the

1007
00:46:33,420 --> 00:46:36,300
mixed columns and if we can reduce the

1008
00:46:36,300 --> 00:46:38,460
area of the mixed columns we can

1009
00:46:38,460 --> 00:46:40,619
significantly reduce the area of the ASR

1010
00:46:40,619 --> 00:46:42,720
function to illustrate this point we

1011
00:46:42,720 --> 00:46:44,300
show the example

1012
00:46:44,300 --> 00:46:48,060
for example we have a terrible circuits

1013
00:46:48,060 --> 00:46:51,780
it requires eight extras and if white

1014
00:46:51,780 --> 00:46:55,500
Source requires 2D the circuit requires

1015
00:46:55,500 --> 00:46:57,480
16g but

1016
00:46:57,480 --> 00:47:00,480
for our optimization method we can get a

1017
00:47:00,480 --> 00:47:03,079
new circuit it only have four

1018
00:47:03,079 --> 00:47:05,359
extraordinates and have the numberology

1019
00:47:05,359 --> 00:47:09,000
so this example demonstrates that after

1020
00:47:09,000 --> 00:47:13,260
optimization method we can we can reduce

1021
00:47:13,260 --> 00:47:16,859
the area of the cipher

1022
00:47:16,859 --> 00:47:19,440
there are many work to optimize the

1023
00:47:19,440 --> 00:47:22,380
limit linear layers but most of them

1024
00:47:22,380 --> 00:47:25,740
focus on the two input cell circuits as

1025
00:47:25,740 --> 00:47:28,260
we all know the standard libraries can

1026
00:47:28,260 --> 00:47:30,839
support three input textures or for

1027
00:47:30,839 --> 00:47:33,660
input Gates so we can use multiple games

1028
00:47:33,660 --> 00:47:38,400
to reduce the area further and there are

1029
00:47:38,400 --> 00:47:40,400
two methods to do this

1030
00:47:40,400 --> 00:47:44,220
one method is proposed by back Center a

1031
00:47:44,220 --> 00:47:47,579
search circuit directly but it increased

1032
00:47:47,579 --> 00:47:50,040
the searching space

1033
00:47:50,040 --> 00:47:54,000
because as a large number of extra times

1034
00:47:54,000 --> 00:47:57,420
and another method is proposed by

1035
00:47:57,420 --> 00:47:59,579
bending control it either transforms

1036
00:47:59,579 --> 00:48:02,040
directly to convert the circuits using

1037
00:48:02,040 --> 00:48:04,980
two inputs into the circuit using three

1038
00:48:04,980 --> 00:48:07,500
inputs and circuits but it may require

1039
00:48:07,500 --> 00:48:11,819
more candidates to get better circuits

1040
00:48:11,819 --> 00:48:16,260
and our our paper follows this line of

1041
00:48:16,260 --> 00:48:17,880
work and propose the transforming

1042
00:48:17,880 --> 00:48:20,640
framework it can transform a circuit

1043
00:48:20,640 --> 00:48:23,700
using it with no more than inputs into

1044
00:48:23,700 --> 00:48:25,859
the circuits you engage with no more

1045
00:48:25,859 --> 00:48:28,619
than n plus one inputs the framework

1046
00:48:28,619 --> 00:48:31,619
require a graphic standing algorithm and

1047
00:48:31,619 --> 00:48:34,800
we can see the figure first we have a

1048
00:48:34,800 --> 00:48:37,740
given circuit with admin protectors and

1049
00:48:37,740 --> 00:48:39,540
then we use the graphic designing

1050
00:48:39,540 --> 00:48:41,160
algorithm to generate the file

1051
00:48:41,160 --> 00:48:44,579
equivalent circuits or maybe 500 some

1052
00:48:44,579 --> 00:48:47,880
thousands that is impossible and then we

1053
00:48:47,880 --> 00:48:51,660
use the framework to do uh to convert

1054
00:48:51,660 --> 00:48:54,480
the circuits into many new settings with

1055
00:48:54,480 --> 00:48:57,240
M plus one input textures and then we

1056
00:48:57,240 --> 00:48:59,640
can choose the best one with the lowest

1057
00:48:59,640 --> 00:49:02,819
area as our results and we apply the

1058
00:49:02,819 --> 00:49:05,880
framework to many in linear layers to

1059
00:49:05,880 --> 00:49:09,540
our blood ciphers such as es two fish

1060
00:49:09,540 --> 00:49:12,300
and Tall with two three four inputs

1061
00:49:12,300 --> 00:49:14,660
extra case and this is our exam

1062
00:49:14,660 --> 00:49:17,420
experiments which has

1063
00:49:17,420 --> 00:49:20,060
51 and

1064
00:49:20,060 --> 00:49:24,540
5500 messages the BP is using two inputs

1065
00:49:24,540 --> 00:49:27,240
Aggregates and the e3283 is our

1066
00:49:27,240 --> 00:49:31,579
algorithm using multiples of

1067
00:49:31,579 --> 00:49:36,060
on average the area on each Matrix is

1068
00:49:36,060 --> 00:49:38,760
reduced by 21 percent

1069
00:49:38,760 --> 00:49:41,280
and then we talk about some new aspects

1070
00:49:41,280 --> 00:49:43,920
for SRP problem the SRP problem is

1071
00:49:43,920 --> 00:49:46,260
defined as finding a solution with a

1072
00:49:46,260 --> 00:49:48,540
minimum number and Outsource to compute

1073
00:49:48,540 --> 00:49:51,660
the multiplication of the Matrix and it

1074
00:49:51,660 --> 00:49:53,960
has many applications such as the

1075
00:49:53,960 --> 00:49:56,579
optimization the computational geometry

1076
00:49:56,579 --> 00:49:59,520
and the operations research but it is

1077
00:49:59,520 --> 00:50:02,460
proven to be NP hard so no efficient

1078
00:50:02,460 --> 00:50:06,119
algorithm can solve it exactly and but

1079
00:50:06,119 --> 00:50:09,839
there are many heuristics to find the

1080
00:50:09,839 --> 00:50:11,640
sub-optimal solutions

1081
00:50:11,640 --> 00:50:15,599
but we have a new question the SRP

1082
00:50:15,599 --> 00:50:18,839
problem focus on the minimum access but

1083
00:50:18,839 --> 00:50:21,060
we focus on the low exterior it's

1084
00:50:21,060 --> 00:50:24,300
different so we propose the sopa problem

1085
00:50:24,300 --> 00:50:27,780
is as a problem with the lowest area we

1086
00:50:27,780 --> 00:50:29,940
use the Epsilon operation as operation

1087
00:50:29,940 --> 00:50:32,819
containing Epsilon to include a circuits

1088
00:50:32,819 --> 00:50:35,760
then given the cost of every operation

1089
00:50:35,760 --> 00:50:38,520
the metric is defined as the following

1090
00:50:38,520 --> 00:50:40,619
question using the following equation we

1091
00:50:40,619 --> 00:50:44,220
can find the lower area of the circuits

1092
00:50:44,220 --> 00:50:48,119
and then we provide two definitions and

1093
00:50:48,119 --> 00:50:50,520
first is the d80 addressing the cycling

1094
00:50:50,520 --> 00:50:52,859
graph is directed graph that has no

1095
00:50:52,859 --> 00:50:55,680
cycles and it's important when you cycle

1096
00:50:55,680 --> 00:50:58,380
because it was graphic cycle as a wrong

1097
00:50:58,380 --> 00:51:01,619
in Hardware we cannot implementing a

1098
00:51:01,619 --> 00:51:04,020
hardware and another definition is the

1099
00:51:04,020 --> 00:51:07,440
topological ordering it can help us to

1100
00:51:07,440 --> 00:51:10,920
control nodes in correct ordering and

1101
00:51:10,920 --> 00:51:12,480
then we talk about the graphic sending

1102
00:51:12,480 --> 00:51:14,880
algorithm we can see the example the

1103
00:51:14,880 --> 00:51:17,160
node 0 to the seven is the input noise

1104
00:51:17,160 --> 00:51:19,380
or the unit nodes and the following

1105
00:51:19,380 --> 00:51:22,740
equation represents the circuit requires

1106
00:51:22,740 --> 00:51:26,640
10 extra case now for example the ta01

1107
00:51:26,640 --> 00:51:30,480
means the nose is in the sum of the node

1108
00:51:30,480 --> 00:51:32,339
zero and the one and the underlying on

1109
00:51:32,339 --> 00:51:34,520
you know 12 is

1110
00:51:34,520 --> 00:51:37,079
represents the no tell in the output

1111
00:51:37,079 --> 00:51:40,200
values or the target value I will use

1112
00:51:40,200 --> 00:51:42,900
the example to show our technique first

1113
00:51:42,900 --> 00:51:45,900
we introduce two dimension in the single

1114
00:51:45,900 --> 00:51:48,540
graph is a directory graph so that it's

1115
00:51:48,540 --> 00:51:50,880
not a union nodes has only one

1116
00:51:50,880 --> 00:51:53,940
impeditions this the single graph like

1117
00:51:53,940 --> 00:51:57,780
the equation one it is an intentionally

1118
00:51:57,780 --> 00:52:00,540
used in Hardware to implements the

1119
00:52:00,540 --> 00:52:03,599
linear layer another definition is

1120
00:52:03,599 --> 00:52:06,359
extended graph in extended graph each

1121
00:52:06,359 --> 00:52:08,640
node can have more than one picture like

1122
00:52:08,640 --> 00:52:11,400
the equation two we can see the notion

1123
00:52:11,400 --> 00:52:14,640
is the sum of node 4 and the file or the

1124
00:52:14,640 --> 00:52:18,059
summer node 14 and no switching so it

1125
00:52:18,059 --> 00:52:20,940
cannot be used in Hardware but we will

1126
00:52:20,940 --> 00:52:24,480
use it to optimize our limitations and

1127
00:52:24,480 --> 00:52:26,640
this is the method to generate the

1128
00:52:26,640 --> 00:52:29,599
external graph and the graph use the

1129
00:52:29,599 --> 00:52:32,160
determination of the reachability sets

1130
00:52:32,160 --> 00:52:36,119
on the right in the table for for each

1131
00:52:36,119 --> 00:52:39,720
node there is at least one path from the

1132
00:52:39,720 --> 00:52:44,040
nose to its visibility set and then next

1133
00:52:44,040 --> 00:52:46,740
question is how to split the extended

1134
00:52:46,740 --> 00:52:47,940
graph because the external graph is

1135
00:52:47,940 --> 00:52:50,760
wrong in Hardware we cannot use it so we

1136
00:52:50,760 --> 00:52:53,940
propose a simple method we can choose

1137
00:52:53,940 --> 00:52:57,720
every implementation of the nodes in

1138
00:52:57,720 --> 00:53:01,020
extended graph we can see the example in

1139
00:53:01,020 --> 00:53:05,359
gs0 the No 7 in the sum or no 13 and 14

1140
00:53:05,359 --> 00:53:12,260
and gs31 the Note 7 is is

1141
00:53:12,260 --> 00:53:16,079
a difference and use our method in our

1142
00:53:16,079 --> 00:53:19,200
example we can generate 32 single graphs

1143
00:53:19,200 --> 00:53:22,579
based on the extended graph and next

1144
00:53:22,579 --> 00:53:25,140
we need to do some first optimization

1145
00:53:25,140 --> 00:53:28,020
after splitting the extended graph that

1146
00:53:28,020 --> 00:53:30,119
knows in different single graphs may

1147
00:53:30,119 --> 00:53:32,220
have different in degrees and our

1148
00:53:32,220 --> 00:53:35,640
degrees the L degree 0 means that the

1149
00:53:35,640 --> 00:53:38,040
nose is not used to generate it other

1150
00:53:38,040 --> 00:53:41,940
nodes so maybe we can remove it and we

1151
00:53:41,940 --> 00:53:45,780
will give the property to check if a

1152
00:53:45,780 --> 00:53:48,720
node is redundant and we use the method

1153
00:53:48,720 --> 00:53:53,099
in our example in the 32 grams we found

1154
00:53:53,099 --> 00:53:56,400
12 graphs have one redundant nodes and

1155
00:53:56,400 --> 00:53:59,220
two graphs have two redundant nodes and

1156
00:53:59,220 --> 00:54:01,559
we remove that but that's where it's had

1157
00:54:01,559 --> 00:54:03,359
the final result we found some graphs

1158
00:54:03,359 --> 00:54:05,460
are wrong the wrong graphing is in fact

1159
00:54:05,460 --> 00:54:07,680
circuit for the corresponding Matrix

1160
00:54:07,680 --> 00:54:10,440
which usually contains the Cycles in the

1161
00:54:10,440 --> 00:54:13,680
graph I see the example on the right in

1162
00:54:13,680 --> 00:54:17,099
the figure the node e node F and node T

1163
00:54:17,099 --> 00:54:20,160
consists of a cycle so it's wrong in

1164
00:54:20,160 --> 00:54:22,619
Hardware we cannot use the figure to

1165
00:54:22,619 --> 00:54:24,800
implement the

1166
00:54:24,800 --> 00:54:29,220
linear layers in Hardware so we checked

1167
00:54:29,220 --> 00:54:32,280
all the graphs in our example we found

1168
00:54:32,280 --> 00:54:35,760
only 16 graphers around and 16 graphs

1169
00:54:35,760 --> 00:54:40,020
are right in the right graphs we find

1170
00:54:40,020 --> 00:54:42,839
four graphs has a nine extra percent we

1171
00:54:42,839 --> 00:54:45,599
listed them and we can choose any one as

1172
00:54:45,599 --> 00:54:48,900
our best results and can see can be

1173
00:54:48,900 --> 00:54:52,200
optimized by our framework and this is

1174
00:54:52,200 --> 00:54:54,180
the algorithm they have it have four

1175
00:54:54,180 --> 00:54:56,640
steps first we need to generate the

1176
00:54:56,640 --> 00:54:58,920
extended graph based on the single graph

1177
00:54:58,920 --> 00:55:01,680
that is the image position of the linear

1178
00:55:01,680 --> 00:55:03,900
layer and then we need to split the

1179
00:55:03,900 --> 00:55:05,880
extended graph into many equivalent

1180
00:55:05,880 --> 00:55:09,240
circuits and then we need to remove a

1181
00:55:09,240 --> 00:55:11,460
redundant nodes and finally we need to

1182
00:55:11,460 --> 00:55:15,240
delete run graphs and we can send this

1183
00:55:15,240 --> 00:55:18,119
graphs can be optimized by our framework

1184
00:55:18,119 --> 00:55:20,900
and next we'll introduce the

1185
00:55:20,900 --> 00:55:23,460
transforming framework

1186
00:55:23,460 --> 00:55:26,400
uh before we introduce the transforming

1187
00:55:26,400 --> 00:55:28,920
framework we need to do some limitation

1188
00:55:28,920 --> 00:55:33,420
for example if we use G3 extra metrics

1189
00:55:33,420 --> 00:55:37,200
only two three four inputs extra case

1190
00:55:37,200 --> 00:55:40,020
can be used use this implementation can

1191
00:55:40,020 --> 00:55:43,319
reduce the searching space and then we

1192
00:55:43,319 --> 00:55:45,119
can do the transformation from the

1193
00:55:45,119 --> 00:55:48,660
equation of the left to the equation on

1194
00:55:48,660 --> 00:55:49,700
the right

1195
00:55:49,700 --> 00:55:52,980
other transformation the area of the

1196
00:55:52,980 --> 00:55:56,099
circuit is reduced and before we

1197
00:55:56,099 --> 00:55:57,540
introduce framework we have through

1198
00:55:57,540 --> 00:55:59,940
question we need to answer the first

1199
00:55:59,940 --> 00:56:02,339
question is which node can be removed

1200
00:56:02,339 --> 00:56:05,400
when we receive a implementation of the

1201
00:56:05,400 --> 00:56:08,160
linear layers and the question two is

1202
00:56:08,160 --> 00:56:11,160
how to remove windows when we found the

1203
00:56:11,160 --> 00:56:13,619
nodes can be removed and the third

1204
00:56:13,619 --> 00:56:16,500
question is when we found both nodes can

1205
00:56:16,500 --> 00:56:18,660
be removed which nodes should be removed

1206
00:56:18,660 --> 00:56:21,420
first and if we answer through question

1207
00:56:21,420 --> 00:56:24,079
the transforming framework is

1208
00:56:24,079 --> 00:56:27,599
has been done so we tried to answer the

1209
00:56:27,599 --> 00:56:30,240
questions and the first question which

1210
00:56:30,240 --> 00:56:32,700
note can be removed will provide the

1211
00:56:32,700 --> 00:56:35,339
conversation suppose that the circuit

1212
00:56:35,339 --> 00:56:38,400
has been if G is from xor Matrix and the

1213
00:56:38,400 --> 00:56:40,980
in degree and our degree of the null u

1214
00:56:40,980 --> 00:56:45,000
means the conversation so scenario can

1215
00:56:45,000 --> 00:56:48,059
be removed and for the first second

1216
00:56:48,059 --> 00:56:51,000
question how to remove OneNote we also

1217
00:56:51,000 --> 00:56:54,660
provide the proposition uh suppose uh

1218
00:56:54,660 --> 00:56:57,180
give a circuit with a two input Central

1219
00:56:57,180 --> 00:57:00,059
gears so it can reduce the circuits by

1220
00:57:00,059 --> 00:57:03,780
removing the nodes with algebrae and and

1221
00:57:03,780 --> 00:57:06,720
see the example the no U has out degree

1222
00:57:06,720 --> 00:57:10,260
2 and if the condition is right we can

1223
00:57:10,260 --> 00:57:12,839
remove you and adding two three protect

1224
00:57:12,839 --> 00:57:14,940
circuits and the area of the new circuit

1225
00:57:14,940 --> 00:57:18,599
is lower and the third question which

1226
00:57:18,599 --> 00:57:20,579
node should be removed first the

1227
00:57:20,579 --> 00:57:23,359
proposition can answer our question

1228
00:57:23,359 --> 00:57:26,339
suppose the upper balance and for

1229
00:57:26,339 --> 00:57:29,819
example if the algebra or U is M algebra

1230
00:57:29,819 --> 00:57:34,079
or no U unknown V is n if m is greater

1231
00:57:34,079 --> 00:57:36,839
than n we can remove it first remove the

1232
00:57:36,839 --> 00:57:39,780
node V will reduce more constant than no

1233
00:57:39,780 --> 00:57:43,440
U and then we answer three questions so

1234
00:57:43,440 --> 00:57:46,380
we propose the algorithms using three

1235
00:57:46,380 --> 00:57:48,480
inputs answer keys

1236
00:57:48,480 --> 00:57:52,140
um and then is an example using four

1237
00:57:52,140 --> 00:57:54,900
inputs and circuits uh if the audio is

1238
00:57:54,900 --> 00:57:58,559
one with the first figure and out degree

1239
00:57:58,559 --> 00:58:01,380
2 will the second figure and if the art

1240
00:58:01,380 --> 00:58:03,359
degree is greater than two we can use

1241
00:58:03,359 --> 00:58:06,260
the same method to do it and this is a

1242
00:58:06,260 --> 00:58:09,599
algorithm using four input actors and it

1243
00:58:09,599 --> 00:58:12,599
has four steps first we receive the

1244
00:58:12,599 --> 00:58:15,119
imitation of the linear layer with two

1245
00:58:15,119 --> 00:58:17,339
inputs Gates and then we use the graph

1246
00:58:17,339 --> 00:58:19,619
standing algorithm to generate many

1247
00:58:19,619 --> 00:58:22,020
equivalent circuits with two input

1248
00:58:22,020 --> 00:58:25,200
skills and then we use three inputs

1249
00:58:25,200 --> 00:58:27,599
extra guests to optimize the circuits

1250
00:58:27,599 --> 00:58:31,079
after that we need to we also need to

1251
00:58:31,079 --> 00:58:34,140
use the graphics linear Rhythm to

1252
00:58:34,140 --> 00:58:36,660
generate many equivalent circuits with

1253
00:58:36,660 --> 00:58:39,119
three input Central keys and finally we

1254
00:58:39,119 --> 00:58:40,980
use the transforming framework using

1255
00:58:40,980 --> 00:58:44,040
four input circuits and generate many

1256
00:58:44,040 --> 00:58:45,920
circuits with lower

1257
00:58:45,920 --> 00:58:49,020
area of the circuit so we can choose any

1258
00:58:49,020 --> 00:58:52,020
one as our the best friends the best

1259
00:58:52,020 --> 00:58:54,660
results and finally when can show the

1260
00:58:54,660 --> 00:58:58,200
application we apply our method methods

1261
00:58:58,200 --> 00:59:01,020
to many linear layers of the images such

1262
00:59:01,020 --> 00:59:04,440
as es The Joy tick the two fish at all

1263
00:59:04,440 --> 00:59:06,059
and

1264
00:59:06,059 --> 00:59:10,260
for example we we see the es if we only

1265
00:59:10,260 --> 00:59:14,640
use who inputs extra keys like the hdrbz

1266
00:59:14,640 --> 00:59:19,380
the error is greater than 300 and if we

1267
00:59:19,380 --> 00:59:24,240
use multiple Keys like the XC LBZ plus

1268
00:59:24,240 --> 00:59:28,700
e83 the area is reduced to

1269
00:59:28,700 --> 00:59:33,299
243 areas so that's all thanks for

1270
00:59:33,299 --> 00:59:35,660
attention

1271
00:59:39,839 --> 00:59:41,400
thank you

1272
00:59:41,400 --> 00:59:44,640
um do we have question in Beijing

1273
00:59:44,640 --> 00:59:48,680
yeah the other question in Beijing

1274
00:59:49,859 --> 00:59:51,720
I

1275
00:59:51,720 --> 00:59:54,359
hope that the linearly respect

1276
00:59:54,359 --> 00:59:56,819
mountain in Portuguese but for the Xbox

1277
00:59:56,819 --> 00:59:59,339
I want to know if you try to do Sim work

1278
00:59:59,339 --> 01:00:03,140
yeah you see as both circuits yeah

1279
01:00:03,140 --> 01:00:07,020
we do some work in the exports circuits

1280
01:00:07,020 --> 01:00:10,920
for example the buyer at all provides

1281
01:00:10,920 --> 01:00:14,180
the circuit in

1282
01:00:14,180 --> 01:00:19,859
2010 it's it's circus has divided into

1283
01:00:19,859 --> 01:00:22,799
three parts the first part and the third

1284
01:00:22,799 --> 01:00:24,900
party the linear layer and the second

1285
01:00:24,900 --> 01:00:28,440
part is the non-linear year we can use

1286
01:00:28,440 --> 01:00:32,160
our framework tool is to linear layers

1287
01:00:32,160 --> 01:00:34,740
using fluid protector Gates or for input

1288
01:00:34,740 --> 01:00:37,700
circus and we can get a little

1289
01:00:37,700 --> 01:00:40,440
Improvement using the multi-in

1290
01:00:40,440 --> 01:00:44,760
protectors but for other types of other

1291
01:00:44,760 --> 01:00:47,640
types of like it's like the endings or

1292
01:00:47,640 --> 01:00:51,059
the organs uh we live without the future

1293
01:00:51,059 --> 01:00:55,559
work we hope to generate a general

1294
01:00:55,559 --> 01:01:00,480
framework with more types of the kids in

1295
01:01:00,480 --> 01:01:04,880
career thank you thank you thank you

1296
01:01:06,240 --> 01:01:09,200
any other question

1297
01:01:11,400 --> 01:01:15,540
yeah there is a question from Beijing

1298
01:01:15,540 --> 01:01:19,020
um hello Mr Leo I just want to know uh

1299
01:01:19,020 --> 01:01:21,480
you know the latency is a very important

1300
01:01:21,480 --> 01:01:24,119
effect where we need to consider when we

1301
01:01:24,119 --> 01:01:27,359
design designing a circuit I just want

1302
01:01:27,359 --> 01:01:30,480
to know whether you algorithm can reduce

1303
01:01:30,480 --> 01:01:34,680
the depth of a circle you mean the depth

1304
01:01:34,680 --> 01:01:37,680
or the circuit yeah yeah

1305
01:01:37,680 --> 01:01:40,380
as you know the latency is also

1306
01:01:40,380 --> 01:01:44,099
important in hardware and the depth is

1307
01:01:44,099 --> 01:01:48,660
relevant to the lenses so I think our

1308
01:01:48,660 --> 01:01:52,819
can find a better

1309
01:01:52,819 --> 01:01:55,319
listening outside by circuits with lower

1310
01:01:55,319 --> 01:02:00,200
latency maybe we can see the slide

1311
01:02:00,359 --> 01:02:04,200
yeah uh you know first we have the uh we

1312
01:02:04,200 --> 01:02:07,559
we received single graphs and then we

1313
01:02:07,559 --> 01:02:09,720
use our graphic standing algorithm to

1314
01:02:09,720 --> 01:02:11,880
generate many equivalent circuits and

1315
01:02:11,880 --> 01:02:15,059
after our optimization method we

1316
01:02:15,059 --> 01:02:16,760
generates many

1317
01:02:16,760 --> 01:02:20,780
better searches with a lower area

1318
01:02:20,780 --> 01:02:24,720
and if we focus on the latency or the

1319
01:02:24,720 --> 01:02:27,299
test or the circuits we can also choose

1320
01:02:27,299 --> 01:02:30,660
one from our the many equivalent

1321
01:02:30,660 --> 01:02:34,440
circuits and maybe the depth is reduced

1322
01:02:34,440 --> 01:02:38,520
I think the method can help you

1323
01:02:38,520 --> 01:02:41,520
uh okay thank you thank you thank you so

1324
01:02:41,520 --> 01:02:43,759
much

1325
01:02:45,240 --> 01:02:48,140
any other question

1326
01:02:52,319 --> 01:02:55,380
okay I have one one question

1327
01:02:55,380 --> 01:02:57,599
um did you try to look at your results

1328
01:02:57,599 --> 01:03:00,000
uh coming from your from your your Tool

1329
01:03:00,000 --> 01:03:01,740
uh when you compare them with the Ros

1330
01:03:01,740 --> 01:03:04,920
synthesizers so if you put the metrics

1331
01:03:04,920 --> 01:03:07,440
give it as inputs to to one synthesizer

1332
01:03:07,440 --> 01:03:10,799
did you try to see uh what what uh great

1333
01:03:10,799 --> 01:03:12,599
equivalency it will give in the ends

1334
01:03:12,599 --> 01:03:14,280
like if you try different optimization

1335
01:03:14,280 --> 01:03:16,680
in the end did you try like hard really

1336
01:03:16,680 --> 01:03:20,640
uh really uh important optimization with

1337
01:03:20,640 --> 01:03:24,240
uh with uh with hardware tools

1338
01:03:24,240 --> 01:03:27,599
uh sorry I I do not quickly get your

1339
01:03:27,599 --> 01:03:31,619
question but you mean the multiples uh

1340
01:03:31,619 --> 01:03:34,740
greater than four and

1341
01:03:34,740 --> 01:03:36,839
or yeah so

1342
01:03:36,839 --> 01:03:39,720
so so when you like do you really try to

1343
01:03:39,720 --> 01:03:41,520
do a lot of optimization with your

1344
01:03:41,520 --> 01:03:44,160
sanitizer using uh like different gates

1345
01:03:44,160 --> 01:03:47,540
with a larger uh number of uh

1346
01:03:47,540 --> 01:03:52,140
we have not do this work we in first

1347
01:03:52,140 --> 01:03:55,200
work I will focus on the linear layers

1348
01:03:55,200 --> 01:03:58,619
so it only requires the actual case and

1349
01:03:58,619 --> 01:04:02,160
for other types of extras but the type

1350
01:04:02,160 --> 01:04:05,460
of other types of link is maybe more

1351
01:04:05,460 --> 01:04:09,900
complex and we have not ideal to do this

1352
01:04:09,900 --> 01:04:12,240
you know sorry my body is just that if

1353
01:04:12,240 --> 01:04:13,920
you use a synthesizer they might be able

1354
01:04:13,920 --> 01:04:15,720
to optimize your circuit as well even

1355
01:04:15,720 --> 01:04:17,640
though it's just a source it might be

1356
01:04:17,640 --> 01:04:21,500
able to potentially provide improvements

1357
01:04:22,680 --> 01:04:23,460
um

1358
01:04:23,460 --> 01:04:26,339
I think it's the

1359
01:04:26,339 --> 01:04:28,799
our method we can only use the some

1360
01:04:28,799 --> 01:04:30,900
libraries and not all the libraries

1361
01:04:30,900 --> 01:04:34,619
because some in some libraries the three

1362
01:04:34,619 --> 01:04:38,160
input sector case requires more area

1363
01:04:38,160 --> 01:04:41,940
than two three percent circuits

1364
01:04:41,940 --> 01:04:45,720
okay thank you yeah thank you

1365
01:04:45,720 --> 01:04:48,299
all right if no more question then let's

1366
01:04:48,299 --> 01:04:50,099
thank the speaker and all the speakers

1367
01:04:50,099 --> 01:04:52,880
of this session

