1
00:00:00,020 --> 00:00:03,600
analysis our first talk

2
00:00:03,600 --> 00:00:07,560
will be given by Joe Johnson and the

3
00:00:07,560 --> 00:00:10,980
title of his talk is factorial decoding

4
00:00:10,980 --> 00:00:13,679
algorithm for faster correlation attack

5
00:00:13,679 --> 00:00:16,379
and its applications will stream

6
00:00:16,379 --> 00:00:18,000
separately

7
00:00:18,000 --> 00:00:22,340
the authors are Joe Johnson

8
00:00:22,340 --> 00:00:25,080
welcome thank you

9
00:00:25,080 --> 00:00:27,799
thank you

10
00:00:29,160 --> 00:00:31,859
hello everyone I'm very glad to make a

11
00:00:31,859 --> 00:00:34,920
report here the title is regulatory

12
00:00:34,920 --> 00:00:37,020
decoding algorithms for fast population

13
00:00:37,020 --> 00:00:39,480
attack and

14
00:00:39,480 --> 00:00:42,239
its applications to stream Cipher green

15
00:00:42,239 --> 00:00:47,460
1288 this report includes five parts

16
00:00:47,460 --> 00:00:51,840
ly which introduce backgrounds irfsr

17
00:00:51,840 --> 00:00:54,300
based stream ciphers from an important

18
00:00:54,300 --> 00:00:56,640
class of

19
00:00:56,640 --> 00:00:59,760
stream cipheral system property analysis

20
00:00:59,760 --> 00:01:02,160
based on correlation plays an important

21
00:01:02,160 --> 00:01:05,459
role in their evaluations for example

22
00:01:05,459 --> 00:01:09,060
fce and LDA according to the coding

23
00:01:09,060 --> 00:01:12,659
strategies FCA can be divided into two

24
00:01:12,659 --> 00:01:14,280
classes

25
00:01:14,280 --> 00:01:16,500
the first event is based on one plus

26
00:01:16,500 --> 00:01:19,439
decoding algorithm the second one is

27
00:01:19,439 --> 00:01:21,720
based on probabilistic iterative

28
00:01:21,720 --> 00:01:25,020
decoding algories however applications

29
00:01:25,020 --> 00:01:28,920
of iterative decoding are limited as its

30
00:01:28,920 --> 00:01:31,140
properties are hard to describe by

31
00:01:31,140 --> 00:01:33,600
mathematical language it lacks of a

32
00:01:33,600 --> 00:01:36,060
convenient iterative decoding algorithms

33
00:01:36,060 --> 00:01:38,400
to work with the multi-dimensional

34
00:01:38,400 --> 00:01:41,600
linear approximation

35
00:01:41,600 --> 00:01:44,759
firstly we review the binary iterative

36
00:01:44,759 --> 00:01:48,299
decoding algories proposed by Mir its

37
00:01:48,299 --> 00:01:50,640
purpose is to improve the time

38
00:01:50,640 --> 00:01:54,720
complexity of fce that thought to be X

39
00:01:54,720 --> 00:01:57,299
potential exponential to the length of

40
00:01:57,299 --> 00:02:00,299
the rfsr

41
00:02:00,299 --> 00:02:04,020
the critical part of the decoding phase

42
00:02:04,020 --> 00:02:07,920
is calculating a posterior probability P

43
00:02:07,920 --> 00:02:11,220
star from Priority distribution symbol

44
00:02:11,220 --> 00:02:14,220
by symbol through Beer's formula instead

45
00:02:14,220 --> 00:02:16,020
of directly

46
00:02:16,020 --> 00:02:19,560
determine 0 or 1. the more parity checks

47
00:02:19,560 --> 00:02:22,680
first the lower value T star when the

48
00:02:22,680 --> 00:02:25,560
number of positions with large P star is

49
00:02:25,560 --> 00:02:27,260
greater than the threshold value

50
00:02:27,260 --> 00:02:30,300
performance complement

51
00:02:30,300 --> 00:02:32,660
um our work consists of three parts

52
00:02:32,660 --> 00:02:35,640
firstly we propose a vectorial iterative

53
00:02:35,640 --> 00:02:38,819
decoding algorithm for FCA that

54
00:02:38,819 --> 00:02:42,300
generalize the binary airgriff it may

55
00:02:42,300 --> 00:02:43,860
benefit from

56
00:02:43,860 --> 00:02:45,840
the multi-dimensional linear

57
00:02:45,840 --> 00:02:49,160
approximation and it equips to normal

58
00:02:49,160 --> 00:02:51,599
Criterion to improve the iterative

59
00:02:51,599 --> 00:02:54,959
decoding process secondly we propose

60
00:02:54,959 --> 00:02:57,780
some cryptographic properties on the

61
00:02:57,780 --> 00:03:00,360
vectorial algorithm such as the

62
00:03:00,360 --> 00:03:01,980
relationship between the decoding

63
00:03:01,980 --> 00:03:05,220
efficiency and noisy distribution

64
00:03:05,220 --> 00:03:08,540
also two propositions involving the

65
00:03:08,540 --> 00:03:10,500
relationship between the number of

66
00:03:10,500 --> 00:03:13,080
parity checks the noise distribution and

67
00:03:13,080 --> 00:03:15,959
the data complexity finally we apply

68
00:03:15,959 --> 00:03:18,000
those results to stream Cipher green

69
00:03:18,000 --> 00:03:21,060
event 288 and show its separate emerging

70
00:03:21,060 --> 00:03:23,459
from the perspective of vectorial

71
00:03:23,459 --> 00:03:26,060
decoding

72
00:03:26,400 --> 00:03:28,920
the second part factorial iterative

73
00:03:28,920 --> 00:03:32,480
algorithm and fce

74
00:03:32,760 --> 00:03:35,480
personally

75
00:03:35,819 --> 00:03:38,879
the fce based on a vectorial iterative

76
00:03:38,879 --> 00:03:42,379
algorithm exploits a symmetric Channel

77
00:03:42,379 --> 00:03:45,360
suppose a linear approximation with

78
00:03:45,360 --> 00:03:48,180
Direction has the following form where

79
00:03:48,180 --> 00:03:52,080
all UI and virm trans W matrices over

80
00:03:52,080 --> 00:03:54,799
jf2

81
00:03:55,099 --> 00:03:57,540
index is related to the linear

82
00:03:57,540 --> 00:04:00,540
approximation similarly as BSC the

83
00:04:00,540 --> 00:04:03,120
channel noisy is accelerated to the

84
00:04:03,120 --> 00:04:05,040
codeword

85
00:04:05,040 --> 00:04:07,680
next we discuss how to check parity with

86
00:04:07,680 --> 00:04:11,099
vectorial noises suppose a parity check

87
00:04:11,099 --> 00:04:12,959
over metric string has the following

88
00:04:12,959 --> 00:04:17,540
form we require that for each ticket

89
00:04:17,820 --> 00:04:20,519
there is M times M Matrix GK Prime

90
00:04:20,519 --> 00:04:24,180
satisfies satisfies that UIC pay equals

91
00:04:24,180 --> 00:04:27,780
to GK Prime UI by multiplying with this

92
00:04:27,780 --> 00:04:31,199
UI we have the following equation

93
00:04:31,199 --> 00:04:34,139
the target is to determine the noisy e

94
00:04:34,139 --> 00:04:37,040
of each position

95
00:04:37,199 --> 00:04:40,139
when observing check values which can be

96
00:04:40,139 --> 00:04:42,419
accomplished by a vectorial each

97
00:04:42,419 --> 00:04:46,080
iterative decoding algorithm

98
00:04:46,080 --> 00:04:48,479
similarly as the binary piece we

99
00:04:48,479 --> 00:04:50,940
calculate app from the priority

100
00:04:50,940 --> 00:04:53,400
distribution according to check values

101
00:04:53,400 --> 00:04:55,320
by beers formula

102
00:04:55,320 --> 00:04:58,380
for each number we compute Epp and

103
00:04:58,380 --> 00:04:59,900
increase

104
00:04:59,900 --> 00:05:03,900
empirical Vector ertr if e is still

105
00:05:03,900 --> 00:05:07,940
increasing then we assign priority

106
00:05:07,940 --> 00:05:10,440
distribution with Epp and continue

107
00:05:10,440 --> 00:05:12,060
iterating

108
00:05:12,060 --> 00:05:16,440
the specific algorithm is as follows

109
00:05:16,440 --> 00:05:19,020
the algorithm still includes a few

110
00:05:19,020 --> 00:05:21,720
rounds and each round includes several

111
00:05:21,720 --> 00:05:24,419
iterations in each iteration we record

112
00:05:24,419 --> 00:05:26,900
the number of the positions with PC

113
00:05:26,900 --> 00:05:30,900
greater than P0 by an iterator Vector C

114
00:05:30,900 --> 00:05:33,360
line final to nine if this Library

115
00:05:33,360 --> 00:05:36,479
increases we continue the iteration and

116
00:05:36,479 --> 00:05:38,340
write the iteration Vector into the

117
00:05:38,340 --> 00:05:41,060
round vector

118
00:05:41,840 --> 00:05:44,580
Vector increases very little we try to

119
00:05:44,580 --> 00:05:47,660
infuse biased noise sequencies line 13

120
00:05:47,660 --> 00:05:50,699
otherwise we complement the sequence by

121
00:05:50,699 --> 00:05:54,800
Zeta with the most frequency

122
00:05:55,500 --> 00:05:58,320
We performed secure experiments to

123
00:05:58,320 --> 00:06:00,900
verify the vectorial algorithms we

124
00:06:00,900 --> 00:06:03,660
choose rfsr to be these two channel

125
00:06:03,660 --> 00:06:06,240
complexity the number of parity checks

126
00:06:06,240 --> 00:06:09,120
the infused noises to verify the word

127
00:06:09,120 --> 00:06:12,320
Arrow ratio for example

128
00:06:12,320 --> 00:06:17,160
comparing the curve when to 919 with the

129
00:06:17,160 --> 00:06:21,900
Curve 11236 i19 we see that the speed of

130
00:06:21,900 --> 00:06:23,819
the convergence increases with the

131
00:06:23,819 --> 00:06:26,460
number of parity checks when General

132
00:06:26,460 --> 00:06:29,400
capacity is fixed

133
00:06:29,400 --> 00:06:33,000
here the vanpool means that criteria and

134
00:06:33,000 --> 00:06:36,020
criteria 2 the 19 is the

135
00:06:36,020 --> 00:06:39,539
19 denotes the data length is 2 to the

136
00:06:39,539 --> 00:06:42,199
19th power

137
00:06:42,360 --> 00:06:45,539
in the vectorial uh

138
00:06:45,539 --> 00:06:50,100
algorithm we propose two Criterion right

139
00:06:50,100 --> 00:06:52,199
passing through sufficient iterations

140
00:06:52,199 --> 00:06:56,100
before breaking up and say resetting

141
00:06:56,100 --> 00:06:58,620
if new app suggests insta complement

142
00:06:58,620 --> 00:07:01,860
continue iterating otherwise select the

143
00:07:01,860 --> 00:07:04,500
complement coin with a potential largest

144
00:07:04,500 --> 00:07:07,860
complement Effect 2 when the empirical

145
00:07:07,860 --> 00:07:11,520
complement effect is read is weak the

146
00:07:11,520 --> 00:07:14,819
sequence of biased noises is infused in

147
00:07:14,819 --> 00:07:17,400
order to break the time the noise is scr

148
00:07:17,400 --> 00:07:20,880
is required to be appropriate neither

149
00:07:20,880 --> 00:07:23,340
very large to counteract

150
00:07:23,340 --> 00:07:25,620
the previous recording work in a very

151
00:07:25,620 --> 00:07:27,139
small to break time

152
00:07:27,139 --> 00:07:30,080
it may help to improve some other binary

153
00:07:30,080 --> 00:07:33,479
algorithms for example algorithm B and

154
00:07:33,479 --> 00:07:35,099
mipd

155
00:07:35,099 --> 00:07:37,979
we also performed a severe other

156
00:07:37,979 --> 00:07:40,919
elements to verifying the generality of

157
00:07:40,919 --> 00:07:45,860
Criterion to thereby we have four binary

158
00:07:45,860 --> 00:07:49,860
algorithms namely algorithm B and mipd

159
00:07:49,860 --> 00:07:52,319
algories and they are modified variance

160
00:07:52,319 --> 00:07:55,520
this finger illustrates that the first

161
00:07:55,520 --> 00:07:59,660
175 rounds of a bit Arrow ratio

162
00:07:59,660 --> 00:08:02,940
Criterion to improve the convergence of

163
00:08:02,940 --> 00:08:05,400
both algorithms

164
00:08:05,400 --> 00:08:08,639
the third part is some properties of the

165
00:08:08,639 --> 00:08:12,180
vectorial iterative algorithm

166
00:08:12,180 --> 00:08:14,280
firstly we show some statistical

167
00:08:14,280 --> 00:08:17,160
property such as the convergence

168
00:08:17,160 --> 00:08:19,800
property suppose the coding is feasible

169
00:08:19,800 --> 00:08:23,099
it is expected that atg increases when

170
00:08:23,099 --> 00:08:25,680
noisy variable equals to Theta and

171
00:08:25,680 --> 00:08:28,800
decrease when it is not to equal to Zeta

172
00:08:28,800 --> 00:08:31,259
similarly as the binary piece we have

173
00:08:31,259 --> 00:08:34,260
the following equation for example we

174
00:08:34,260 --> 00:08:36,899
let the rfsr be the same as the sphere

175
00:08:36,899 --> 00:08:40,679
experiments and the priori distribution

176
00:08:40,679 --> 00:08:43,500
is in the second row

177
00:08:43,500 --> 00:08:45,839
the number of parity checks H equals

178
00:08:45,839 --> 00:08:49,760
three with three tabs we calculate the

179
00:08:49,760 --> 00:08:53,820
increasing decreasing ratio

180
00:08:53,820 --> 00:08:56,519
secondly

181
00:08:56,519 --> 00:08:58,740
ratio how to estimate decoding

182
00:08:58,740 --> 00:09:01,740
efficiency in binary case a threshold is

183
00:09:01,740 --> 00:09:04,040
introduced to measure decoding

184
00:09:04,040 --> 00:09:06,720
efficiency which is determined by the

185
00:09:06,720 --> 00:09:09,300
intersection points have two strength

186
00:09:09,300 --> 00:09:11,880
normal distributions in regulatory

187
00:09:11,880 --> 00:09:14,279
office the interception Point becomes

188
00:09:14,279 --> 00:09:16,980
the intersection curve our idea is

189
00:09:16,980 --> 00:09:20,399
classification and approximation the

190
00:09:20,399 --> 00:09:22,800
parity checks are divided into two

191
00:09:22,800 --> 00:09:25,220
classes namely those

192
00:09:25,220 --> 00:09:28,620
coefficients are identity Matrix denoted

193
00:09:28,620 --> 00:09:33,420
by the set H1 and the others the purpose

194
00:09:33,420 --> 00:09:36,080
is to make the parity checks independent

195
00:09:36,080 --> 00:09:38,779
to the uh

196
00:09:38,779 --> 00:09:41,640
priori distribution multinomial

197
00:09:41,640 --> 00:09:44,220
distribution is approximated by

198
00:09:44,220 --> 00:09:48,000
multivariate normal distribution

199
00:09:48,000 --> 00:09:52,920
on the one hand we assume p 0 is greater

200
00:09:52,920 --> 00:09:56,160
than P1 and so on let QC denotes the

201
00:09:56,160 --> 00:09:58,680
probability that the tall tabs some to

202
00:09:58,680 --> 00:10:01,980
be C the probability that noise is equal

203
00:10:01,980 --> 00:10:04,740
to Zeta and X I check values equals I

204
00:10:04,740 --> 00:10:08,580
follows multinomial distribution for the

205
00:10:08,580 --> 00:10:10,800
first class of parity checks using

206
00:10:10,800 --> 00:10:13,740
distribution pi and Qi for the Second

207
00:10:13,740 --> 00:10:16,680
Use the distribution pi and symmetric

208
00:10:16,680 --> 00:10:20,420
distribution Qi Prime

209
00:10:20,580 --> 00:10:23,220
um for example we like the parameters be

210
00:10:23,220 --> 00:10:25,860
the same as the previous uh we calculate

211
00:10:25,860 --> 00:10:29,940
the theoretical and a press an

212
00:10:29,940 --> 00:10:33,540
approximate value of this ratio here I

213
00:10:33,540 --> 00:10:36,180
denote the length of the data wire

214
00:10:36,180 --> 00:10:39,360
classifying the parity checks the

215
00:10:39,360 --> 00:10:41,459
results depicts that our classification

216
00:10:41,459 --> 00:10:45,079
is very precise

217
00:10:47,720 --> 00:10:51,920
on the other hand we show how to

218
00:10:51,920 --> 00:10:54,620
approximate the threshold by

219
00:10:54,620 --> 00:10:57,000
multi-normal distribution when

220
00:10:57,000 --> 00:10:59,160
Multiverse normal distribution is

221
00:10:59,160 --> 00:11:00,959
visible uh

222
00:11:00,959 --> 00:11:04,800
the threshold can be calculated by the

223
00:11:04,800 --> 00:11:08,000
following integral

224
00:11:08,640 --> 00:11:11,160
for example we let the parameters with

225
00:11:11,160 --> 00:11:13,800
the same as previous as the previous in

226
00:11:13,800 --> 00:11:17,100
order to simplify the integral we could

227
00:11:17,100 --> 00:11:19,800
even slightly adequate the boundary of a

228
00:11:19,800 --> 00:11:22,800
without much fluctuation via the table

229
00:11:22,800 --> 00:11:25,820
the first the second row shows direct

230
00:11:25,820 --> 00:11:30,300
computation f i in the previous and the

231
00:11:30,300 --> 00:11:32,880
third row shows the normal approximation

232
00:11:32,880 --> 00:11:35,300
value

233
00:11:36,000 --> 00:11:40,740
uh next we give two bounce uh is about

234
00:11:40,740 --> 00:11:46,040
the complexity first I iterative bound

235
00:11:46,519 --> 00:11:49,800
in order to perform iterative decoding

236
00:11:49,800 --> 00:11:51,959
the lower bound of edge should satisfy

237
00:11:51,959 --> 00:11:55,019
that they exist as least as it has such

238
00:11:55,019 --> 00:11:58,680
that the app P Theta star is greater

239
00:11:58,680 --> 00:12:00,740
than P0

240
00:12:00,740 --> 00:12:03,600
thus we have proposition event which is

241
00:12:03,600 --> 00:12:06,600
if iterative decoding is visible then

242
00:12:06,600 --> 00:12:09,000
there is at least one Theta such that

243
00:12:09,000 --> 00:12:12,500
such this equation

244
00:12:14,240 --> 00:12:17,820
indicates that the vectorial algorithms

245
00:12:17,820 --> 00:12:20,100
may have potential advantage in some

246
00:12:20,100 --> 00:12:23,640
cases for example when Ser is fixed

247
00:12:23,640 --> 00:12:25,800
according to preposition event the

248
00:12:25,800 --> 00:12:27,839
length of the data needed seems to be

249
00:12:27,839 --> 00:12:32,100
smaller than the binary algorithm

250
00:12:33,180 --> 00:12:35,519
the second bound is related to the

251
00:12:35,519 --> 00:12:38,279
expected number of directed arrows we

252
00:12:38,279 --> 00:12:40,880
introduce two notations

253
00:12:40,880 --> 00:12:46,500
and it is reasonable to require that uh

254
00:12:46,500 --> 00:12:48,540
that you can expect the number of direct

255
00:12:48,540 --> 00:12:51,620
arrows is greater than after the first

256
00:12:51,620 --> 00:12:54,300
iteration then the succeeding iteration

257
00:12:54,300 --> 00:12:57,060
is material positions with the p Theta

258
00:12:57,060 --> 00:12:59,480
star greater than p 0 star

259
00:12:59,480 --> 00:13:01,680
summing probability values in

260
00:13:01,680 --> 00:13:04,380
multinomial distribution is convenient

261
00:13:04,380 --> 00:13:07,320
meanwhile since the integral area is

262
00:13:07,320 --> 00:13:09,779
very complicated multivarity normal

263
00:13:09,779 --> 00:13:12,899
approximation is Not Practical where H

264
00:13:12,899 --> 00:13:15,480
is large however since the symmetric

265
00:13:15,480 --> 00:13:17,839
distribution Q Prime

266
00:13:17,839 --> 00:13:21,000
simulates the iterate retail process

267
00:13:21,000 --> 00:13:24,079
very well we could reduce the bond using

268
00:13:24,079 --> 00:13:27,620
multinomial distribution

269
00:13:27,839 --> 00:13:32,579
which is preposition to uh

270
00:13:32,639 --> 00:13:35,339
which indicates that the expected number

271
00:13:35,339 --> 00:13:38,160
of positions with P Theta stock greater

272
00:13:38,160 --> 00:13:41,459
than P0 star in the first iteration are

273
00:13:41,459 --> 00:13:45,899
dominated dominated by those small air

274
00:13:45,899 --> 00:13:47,880
the first part

275
00:13:47,880 --> 00:13:52,620
applications to Green 1288

276
00:13:52,740 --> 00:13:57,019
green went to 8A includes a

277
00:13:57,019 --> 00:14:01,399
128 bit rfsr tested with

278
00:14:01,399 --> 00:14:06,720
128 bit and FSR

279
00:14:06,720 --> 00:14:10,700
uh firstly we show how to construct a

280
00:14:10,700 --> 00:14:12,899
multi-dimensional linear approximation

281
00:14:12,899 --> 00:14:16,700
with correlation about 2 to the power

282
00:14:16,700 --> 00:14:20,100
minus 57

283
00:14:20,100 --> 00:14:22,620
finalism of where derive a linear

284
00:14:22,620 --> 00:14:25,500
approximation with Dimension greater

285
00:14:25,500 --> 00:14:29,700
than 9 and not greater than 42 scr to be

286
00:14:29,700 --> 00:14:35,820
2 to the power n minus 121 and has the

287
00:14:35,820 --> 00:14:39,300
following form where m equals to 42 the

288
00:14:39,300 --> 00:14:41,940
standard basis of the linear marks could

289
00:14:41,940 --> 00:14:44,480
be followed

290
00:14:45,540 --> 00:14:50,279
next we estimate the data complexity by

291
00:14:50,279 --> 00:14:53,579
the previous response suppose scr is 2

292
00:14:53,579 --> 00:14:57,180
to the power minus gamma P0 is the

293
00:14:57,180 --> 00:15:00,060
maximum probability probability point we

294
00:15:00,060 --> 00:15:02,579
need a hypothesis instead Suppose there

295
00:15:02,579 --> 00:15:05,100
are at least two parity checks with two

296
00:15:05,100 --> 00:15:08,760
tips of the remote special parity checks

297
00:15:08,760 --> 00:15:11,339
with the following form according to the

298
00:15:11,339 --> 00:15:14,459
two bounce when m equals to 42 for

299
00:15:14,459 --> 00:15:17,519
example when we have two parity checks

300
00:15:17,519 --> 00:15:19,560
according to the first bound n is

301
00:15:19,560 --> 00:15:21,860
greater than 2 to the

302
00:15:21,860 --> 00:15:25,260
91 and according to the second bound is

303
00:15:25,260 --> 00:15:26,750
greater than the

304
00:15:26,750 --> 00:15:28,079
[Music]

305
00:15:28,079 --> 00:15:31,079
2-129

306
00:15:32,220 --> 00:15:35,660
finally the summary

307
00:15:36,300 --> 00:15:37,800
uh

308
00:15:37,800 --> 00:15:41,399
since factorial iterative decoding is

309
00:15:41,399 --> 00:15:44,339
fast is a hard investigation topic which

310
00:15:44,339 --> 00:15:47,699
there has some open problems for example

311
00:15:47,699 --> 00:15:50,399
we cannot directly compare the vectorial

312
00:15:50,399 --> 00:15:52,320
decoding algorithms with the binary

313
00:15:52,320 --> 00:15:55,440
algorithm and a theoretical advantage in

314
00:15:55,440 --> 00:15:58,199
the general case is an open problem the

315
00:15:58,199 --> 00:16:01,139
other theoretical properties of the

316
00:16:01,139 --> 00:16:03,839
vectorial algorithm is still not clear

317
00:16:03,839 --> 00:16:06,839
and finally the difficulties are

318
00:16:06,839 --> 00:16:09,000
figuring out the existence of the

319
00:16:09,000 --> 00:16:09,860
special

320
00:16:09,860 --> 00:16:13,579
parity checks and proposing efficient

321
00:16:13,579 --> 00:16:16,440
algorithms to generate suitable parity

322
00:16:16,440 --> 00:16:20,160
checks in Matrix range instead of finite

323
00:16:20,160 --> 00:16:22,579
fields

324
00:16:22,699 --> 00:16:26,459
is the concluding remarks we propose a

325
00:16:26,459 --> 00:16:29,399
vectorial iterator iterative decoding

326
00:16:29,399 --> 00:16:32,000
algorithm for fce and the original

327
00:16:32,000 --> 00:16:35,339
binary FC is a special piece of our fce

328
00:16:35,339 --> 00:16:37,940
with the management which describes our

329
00:16:37,940 --> 00:16:40,259
cryptographic properties and estimate

330
00:16:40,259 --> 00:16:42,300
the quantity of the needed parity chains

331
00:16:42,300 --> 00:16:45,839
and the key stream we apply it to the

332
00:16:45,839 --> 00:16:49,199
stream sign for green128a and estimate

333
00:16:49,199 --> 00:16:52,199
is a potential security margin from the

334
00:16:52,199 --> 00:16:55,139
port view of the vectorial probabilistic

335
00:16:55,139 --> 00:16:58,500
is retail decoding

336
00:16:58,500 --> 00:17:02,720
that's her thank you for your attention

337
00:17:03,720 --> 00:17:07,020
okay thanks so are there any questions

338
00:17:07,020 --> 00:17:09,980
and comments

339
00:17:13,799 --> 00:17:17,599
any questions from Kobe

340
00:17:20,760 --> 00:17:23,640
so Johnson I have a question did you try

341
00:17:23,640 --> 00:17:26,640
to apply your method to other stream

342
00:17:26,640 --> 00:17:30,419
servers such as Suk

343
00:17:30,419 --> 00:17:32,419
um

344
00:17:32,700 --> 00:17:37,380
currently we haven't since uh we have

345
00:17:37,380 --> 00:17:40,880
some difficulties to find the tools

346
00:17:40,880 --> 00:17:44,160
finder might dimensional linear

347
00:17:44,160 --> 00:17:47,179
approximation in photo

348
00:17:47,179 --> 00:17:48,900
it's a

349
00:17:48,900 --> 00:17:51,299
we found that uh

350
00:17:51,299 --> 00:17:54,419
there's no very efficient way to find a

351
00:17:54,419 --> 00:17:58,860
better dimensional linear approximation

352
00:17:58,860 --> 00:18:01,260
okay but you think the method is

353
00:18:01,260 --> 00:18:03,299
applicable

354
00:18:03,299 --> 00:18:05,160
but your customer cannot find the

355
00:18:05,160 --> 00:18:08,340
efficient yes this may need a further

356
00:18:08,340 --> 00:18:09,960
investigation

357
00:18:09,960 --> 00:18:11,700
okay thanks

358
00:18:11,700 --> 00:18:14,600
any questions

359
00:18:21,780 --> 00:18:27,000
of arrow for your tutorial return coding

360
00:18:27,000 --> 00:18:29,880
algorithms I want to ask

361
00:18:29,880 --> 00:18:32,760
I want to ask whether there are some

362
00:18:32,760 --> 00:18:37,580
requirements on uh like the length of LF

363
00:18:37,580 --> 00:18:41,820
lfsr or the number of tabs or the

364
00:18:41,820 --> 00:18:44,539
correlation property

365
00:18:44,539 --> 00:18:48,840
uh you know our idea I think

366
00:18:48,840 --> 00:18:52,980
um it is it is better to use the irfsr

367
00:18:52,980 --> 00:18:56,880
defined on the finite Fields rather than

368
00:18:56,880 --> 00:18:58,880
the Matrix rings

369
00:18:58,880 --> 00:19:04,860
because over uh rfsr defined over

370
00:19:04,860 --> 00:19:07,679
refinance Fields uh

371
00:19:07,679 --> 00:19:12,000
there is no parity checks

372
00:19:12,000 --> 00:19:16,380
with the two tabs at least three tips

373
00:19:16,380 --> 00:19:18,780
okay thank you

374
00:19:18,780 --> 00:19:21,299
so let's send this speaker again and

375
00:19:21,299 --> 00:19:24,539
let's move on to the next talk thank you

376
00:19:24,539 --> 00:19:27,320
thank you

377
00:19:41,700 --> 00:19:43,200
okay

378
00:19:43,200 --> 00:19:47,760
so our next speaker is Leo fukang and

379
00:19:47,760 --> 00:19:51,799
his talk is new crypto analysis of tsuk

380
00:19:51,799 --> 00:19:55,500
initialization using modular differences

381
00:19:55,500 --> 00:19:59,460
by lionful count weilimir

382
00:19:59,460 --> 00:20:03,419
U Bengali

383
00:20:03,480 --> 00:20:10,280
Leo Ito and takanoli isoba thank you

384
00:20:11,820 --> 00:20:15,780
thank thanks for the introduction and I

385
00:20:15,780 --> 00:20:19,080
will talk my work on cryptanalysis of

386
00:20:19,080 --> 00:20:22,500
zuk 256 initialization using modular

387
00:20:22,500 --> 00:20:24,179
differences

388
00:20:24,179 --> 00:20:27,419
so this is an overview of this work so

389
00:20:27,419 --> 00:20:29,820
there are three sections the background

390
00:20:29,820 --> 00:20:32,640
the details of our attacks and the

391
00:20:32,640 --> 00:20:35,059
summary of this work

392
00:20:35,059 --> 00:20:41,600
so first zuk 256 is a new Cipher

393
00:20:41,600 --> 00:20:45,419
proposed for the 5G applications and it

394
00:20:45,419 --> 00:20:48,900
is almost the same as Luke 128 there are

395
00:20:48,900 --> 00:20:51,480
three changes first the key size is

396
00:20:51,480 --> 00:20:52,760
increased to

397
00:20:52,760 --> 00:20:56,880
256 bits second a different way to load

398
00:20:56,880 --> 00:21:00,720
the key and IV uh is used third the Mac

399
00:21:00,720 --> 00:21:03,539
generation phase is modified since we

400
00:21:03,539 --> 00:21:06,240
focus on the initialization phase we

401
00:21:06,240 --> 00:21:09,059
only to care about the first two changes

402
00:21:09,059 --> 00:21:13,080
so since its proposal in 2018 there has

403
00:21:13,080 --> 00:21:16,679
been two times of update so so now there

404
00:21:16,679 --> 00:21:19,740
are three versions V1 V2 V3 so in this

405
00:21:19,740 --> 00:21:22,440
work V2 is different from V1 in the

406
00:21:22,440 --> 00:21:25,320
loading scheme of the key and IV we see

407
00:21:25,320 --> 00:21:27,240
stiffener from V2 in the number of

408
00:21:27,240 --> 00:21:29,940
initialization runs so in this work we

409
00:21:29,940 --> 00:21:32,640
focus on the first two versions

410
00:21:32,640 --> 00:21:35,820
and according to the latest news it has

411
00:21:35,820 --> 00:21:38,760
been selected as one of the 3gpp uh

412
00:21:38,760 --> 00:21:40,860
confidentiality and integrity algorithm

413
00:21:40,860 --> 00:21:43,980
for air interface and according to the

414
00:21:43,980 --> 00:21:47,460
same document we also find that the sage

415
00:21:47,460 --> 00:21:49,620
has recommended the loop team to

416
00:21:49,620 --> 00:21:51,539
increase their initialization runs

417
00:21:51,539 --> 00:21:54,360
according to our analysis so now it is

418
00:21:54,360 --> 00:21:57,179
increased to 49 runs

419
00:21:57,179 --> 00:22:00,299
and now let me briefly describe the

420
00:22:00,299 --> 00:22:03,539
wrong function of Duke so so for the

421
00:22:03,539 --> 00:22:05,520
first two versions the total number of

422
00:22:05,520 --> 00:22:09,120
rounds is 33 rounds and uh this is an

423
00:22:09,120 --> 00:22:10,980
illustration of the Run function so

424
00:22:10,980 --> 00:22:13,260
maybe at the first grounds is very

425
00:22:13,260 --> 00:22:15,419
complex so there are three layers here

426
00:22:15,419 --> 00:22:18,960
FSR BR means be the reorganization and

427
00:22:18,960 --> 00:22:21,360
the FSM Finance State machine

428
00:22:21,360 --> 00:22:25,020
so first uh first the BR layer will be

429
00:22:25,020 --> 00:22:29,100
updated uh so we will compute uh three

430
00:22:29,100 --> 00:22:33,360
variables x0 X1 and X2 according to six

431
00:22:33,360 --> 00:22:38,280
words in lfsr for example x0 is com is

432
00:22:38,280 --> 00:22:40,260
composed of the

433
00:22:40,260 --> 00:22:44,640
the highest 16 bits of S5 and the lowest

434
00:22:44,640 --> 00:22:48,900
16 bits of S14 so similarly and we can

435
00:22:48,900 --> 00:22:52,020
compute X to x y and X3

436
00:22:52,020 --> 00:22:57,120
and then we will update the words in FSR

437
00:22:57,120 --> 00:22:59,520
layer and for convenience we can denote

438
00:22:59,520 --> 00:23:04,080
the new words in FSR by Si star so to to

439
00:23:04,080 --> 00:23:06,679
come to update this layer we first

440
00:23:06,679 --> 00:23:10,260
compute a intermediate variable W it is

441
00:23:10,260 --> 00:23:13,080
a 32-bit variable and it is computed

442
00:23:13,080 --> 00:23:16,980
with x0 R1 and R2 and the addition is

443
00:23:16,980 --> 00:23:21,179
within modular 2032 then we update the

444
00:23:21,179 --> 00:23:24,919
word S15 using some modular additions

445
00:23:24,919 --> 00:23:29,940
modular a prime number a 231-1 then we

446
00:23:29,940 --> 00:23:32,100
update the remaining words by simply

447
00:23:32,100 --> 00:23:35,159
Shifting the registers

448
00:23:35,159 --> 00:23:37,799
then finally we will update the finite

449
00:23:37,799 --> 00:23:40,440
State machine and you can see from this

450
00:23:40,440 --> 00:23:42,299
figure apart from the modular Edition

451
00:23:42,299 --> 00:23:45,360
and the Excel operation there are also

452
00:23:45,360 --> 00:23:48,840
the Xbox transform and S and the linear

453
00:23:48,840 --> 00:23:51,600
transform L1 L2 so as the first glance

454
00:23:51,600 --> 00:23:55,320
it is very complex and then after the

455
00:23:55,320 --> 00:23:57,960
initialization is over we can get the

456
00:23:57,960 --> 00:24:01,200
first stream word Z it is a 32-bit word

457
00:24:01,200 --> 00:24:06,240
and it is computed with x0 R1 R2 and X3

458
00:24:06,240 --> 00:24:08,820
so there are many different types of

459
00:24:08,820 --> 00:24:12,240
operations and this obviously makes the

460
00:24:12,240 --> 00:24:14,039
equivalencies very challenging

461
00:24:14,039 --> 00:24:17,039
especially if we want to study the

462
00:24:17,039 --> 00:24:19,559
interactions between the three layers so

463
00:24:19,559 --> 00:24:21,299
how to do it

464
00:24:21,299 --> 00:24:24,539
uh first to understand our attack it's

465
00:24:24,539 --> 00:24:27,000
necessary to clarify the attack scenario

466
00:24:27,000 --> 00:24:31,020
because it is not commonly used but this

467
00:24:31,020 --> 00:24:33,480
has been considered by The Rook team and

468
00:24:33,480 --> 00:24:35,940
the sage in the security evaluation of

469
00:24:35,940 --> 00:24:38,580
The Rook family so I think it's still

470
00:24:38,580 --> 00:24:41,700
meaningful so specifically can we find

471
00:24:41,700 --> 00:24:44,940
an input difference such that there are

472
00:24:44,940 --> 00:24:46,559
some there are some non-random

473
00:24:46,559 --> 00:24:49,500
properties in Delta SI of the T clocks

474
00:24:49,500 --> 00:24:51,480
of course we cannot inject the

475
00:24:51,480 --> 00:24:53,460
differences in the constant bits but we

476
00:24:53,460 --> 00:24:55,440
we are allowed to inject difference in

477
00:24:55,440 --> 00:24:58,440
the key and IV so as mentioned before

478
00:24:58,440 --> 00:25:02,580
the key size is increased to 256 bits so

479
00:25:02,580 --> 00:25:05,520
we have much more degrees of freedom to

480
00:25:05,520 --> 00:25:08,600
choose the differences

481
00:25:08,600 --> 00:25:11,940
so to reach as many rounds as possible

482
00:25:11,940 --> 00:25:14,159
there is indeed a shortcut and it has

483
00:25:14,159 --> 00:25:16,440
been used by sage and the Duke team in

484
00:25:16,440 --> 00:25:18,659
their security evaluation specifically

485
00:25:18,659 --> 00:25:22,200
according to the Run function only S15

486
00:25:22,200 --> 00:25:26,159
is updated in a very complex way but the

487
00:25:26,159 --> 00:25:28,860
remaining words are updated by simply

488
00:25:28,860 --> 00:25:32,220
Shifting the registers so if we can

489
00:25:32,220 --> 00:25:35,520
detect some random properties in S15

490
00:25:35,520 --> 00:25:38,580
after T minus 15 clocks we can for sure

491
00:25:38,580 --> 00:25:41,520
detect the non-random properties in s0

492
00:25:41,520 --> 00:25:44,100
as t-clocks in other words there are

493
00:25:44,100 --> 00:25:48,120
always 15 free runs so that's why these

494
00:25:48,120 --> 00:25:50,640
types of attacks can reach so many lungs

495
00:25:50,640 --> 00:25:52,799
so I mean runs and clocks has the same

496
00:25:52,799 --> 00:25:57,500
meaning and so the general idea

497
00:25:57,500 --> 00:26:00,960
to construct the input difference in our

498
00:26:00,960 --> 00:26:04,260
attack can be summarized here so note

499
00:26:04,260 --> 00:26:07,679
that uh so you can see see that there

500
00:26:07,679 --> 00:26:11,460
are many uh so we hope the influence of

501
00:26:11,460 --> 00:26:14,760
the finance State machine is minimal by

502
00:26:14,760 --> 00:26:18,240
making the active Xbox appear as late as

503
00:26:18,240 --> 00:26:20,940
possible in this case we do not need in

504
00:26:20,940 --> 00:26:22,320
this case if we consider the

505
00:26:22,320 --> 00:26:25,020
differential attack uh we do not need to

506
00:26:25,020 --> 00:26:26,820
care about the different transitions in

507
00:26:26,820 --> 00:26:29,039
the Xbox and we are mainly dealing with

508
00:26:29,039 --> 00:26:31,740
the modular Edition and if we use in

509
00:26:31,740 --> 00:26:34,140
modular differences they are linear in

510
00:26:34,140 --> 00:26:36,539
the modular Edition and

511
00:26:36,539 --> 00:26:38,520
we can see from the wrong function there

512
00:26:38,520 --> 00:26:40,799
are many modular additions in the update

513
00:26:40,799 --> 00:26:44,220
of S15 so we so we use the modular

514
00:26:44,220 --> 00:26:47,760
difference but if we do not align any

515
00:26:47,760 --> 00:26:50,400
active Xboxes in the first three runs it

516
00:26:50,400 --> 00:26:52,140
will we can only attack a small number

517
00:26:52,140 --> 00:26:54,120
of runs there's the where the previous

518
00:26:54,120 --> 00:26:57,000
attack can yeah it cannot resonate so

519
00:26:57,000 --> 00:27:00,059
much runs so we will relax this

520
00:27:00,059 --> 00:27:02,400
constraint and allow a difference to

521
00:27:02,400 --> 00:27:05,159
exist in the final step machine at the

522
00:27:05,159 --> 00:27:08,159
first few runs but at the same time we

523
00:27:08,159 --> 00:27:12,539
need to ensure they can uh they can hold

524
00:27:12,539 --> 00:27:14,700
with probability one by controlling the

525
00:27:14,700 --> 00:27:18,360
uh the improved of IV so yeah so we will

526
00:27:18,360 --> 00:27:20,100
do this

527
00:27:20,100 --> 00:27:23,220
and then we will construct suitable

528
00:27:23,220 --> 00:27:26,580
equations to describe the uh the

529
00:27:26,580 --> 00:27:28,620
constraints on the input difference such

530
00:27:28,620 --> 00:27:31,260
that the input difference such that the

531
00:27:31,260 --> 00:27:32,940
attack can reach as many rounds as

532
00:27:32,940 --> 00:27:34,080
possible

533
00:27:34,080 --> 00:27:37,260
so this is an overview of uh

534
00:27:37,260 --> 00:27:40,799
uh out how to construct the input

535
00:27:40,799 --> 00:27:45,179
difference for our text so so first you

536
00:27:45,179 --> 00:27:48,360
can see that for the first t0 minus y

537
00:27:48,360 --> 00:27:50,880
rounds there is always no difference in

538
00:27:50,880 --> 00:27:54,960
S15 so the most left one uh registers

539
00:27:54,960 --> 00:27:58,260
then in the next two runs the difference

540
00:27:58,260 --> 00:28:01,559
are allowed to exist in S15 but they can

541
00:28:01,559 --> 00:28:04,860
only stay at the highest 15 bits so they

542
00:28:04,860 --> 00:28:06,900
are not allowed to exist in the lowest

543
00:28:06,900 --> 00:28:10,620
16 bits in this case in the next uh

544
00:28:10,620 --> 00:28:13,559
three plus two runs again there's still

545
00:28:13,559 --> 00:28:16,320
no active Xbox in the financial machine

546
00:28:16,320 --> 00:28:19,440
and then after one more round the active

547
00:28:19,440 --> 00:28:23,760
Xbox will start to appear but uh since

548
00:28:23,760 --> 00:28:28,140
uh the FSR lfsi is updated before the

549
00:28:28,140 --> 00:28:30,960
finance data machine so the influence of

550
00:28:30,960 --> 00:28:33,960
the active Xbox will be reflected to S15

551
00:28:33,960 --> 00:28:36,720
after one more round so in in total we

552
00:28:36,720 --> 00:28:41,460
can uh we should be able to trace detect

553
00:28:41,460 --> 00:28:46,080
a mouse in the in S15 after t0 Plus 8

554
00:28:46,080 --> 00:28:48,900
runs because this is almost equivalent

555
00:28:48,900 --> 00:28:52,500
to approximating one round update of the

556
00:28:52,500 --> 00:28:54,539
financial State machines and so we I

557
00:28:54,539 --> 00:28:56,700
think so it is possible to find the

558
00:28:56,700 --> 00:29:00,240
balance in the difference of S15 while

559
00:29:00,240 --> 00:29:03,620
experiments we can yeah like using the

560
00:29:03,620 --> 00:29:07,140
whd some yeah method

561
00:29:07,140 --> 00:29:11,880
so so indeed there's a critical uh

562
00:29:11,880 --> 00:29:14,220
cons uh constraints that the difference

563
00:29:14,220 --> 00:29:18,720
can only stay as the highest 15 bits so

564
00:29:18,720 --> 00:29:20,700
in our case we are considering the

565
00:29:20,700 --> 00:29:22,740
modular difference so in this case we

566
00:29:22,740 --> 00:29:25,500
will have a condition on we can convert

567
00:29:25,500 --> 00:29:27,899
them into the condition on the model

568
00:29:27,899 --> 00:29:30,299
difference and we can it can be stated

569
00:29:30,299 --> 00:29:34,919
that the the lowest uh 16 bits of the

570
00:29:34,919 --> 00:29:37,559
modular difference can be either or 0 or

571
00:29:37,559 --> 00:29:40,620
1. and I was already say that we can

572
00:29:40,620 --> 00:29:43,860
always have 15 free rounds so that's we

573
00:29:43,860 --> 00:29:46,620
can indeed if we can find such an input

574
00:29:46,620 --> 00:29:50,399
difference we can attack t0 plus 33 runs

575
00:29:50,399 --> 00:29:53,460
so after careful analysis in this so we

576
00:29:53,460 --> 00:29:56,279
tried many are from so we increase t 0

577
00:29:56,279 --> 00:29:58,980
from 6 to 7 to 8 something so we try to

578
00:29:58,980 --> 00:30:01,860
we consider a lot and we finally found

579
00:30:01,860 --> 00:30:04,140
eight is the maximum value for t0

580
00:30:04,140 --> 00:30:07,620
because if t 0 is larger than eight we

581
00:30:07,620 --> 00:30:10,200
either cannot uh I mean so it will be

582
00:30:10,200 --> 00:30:12,419
the constraint may be too difficult to

583
00:30:12,419 --> 00:30:15,059
control or uh yeah it will be too

584
00:30:15,059 --> 00:30:17,279
complex or there's no solution to the

585
00:30:17,279 --> 00:30:19,740
equation system something like this so

586
00:30:19,740 --> 00:30:24,179
we will inject differences in 11 yeah in

587
00:30:24,179 --> 00:30:28,559
11 words in lfsr and you can also note

588
00:30:28,559 --> 00:30:31,440
that the problem is almost equivalent to

589
00:30:31,440 --> 00:30:35,460
finding claims in the in S15 our

590
00:30:35,460 --> 00:30:38,340
multiple clocks so how to make this

591
00:30:38,340 --> 00:30:40,880
clean happen so we will add some

592
00:30:40,880 --> 00:30:43,559
constraints so you can see from this

593
00:30:43,559 --> 00:30:45,600
slide at the first round we add four

594
00:30:45,600 --> 00:30:48,120
constraints in this case there will be

595
00:30:48,120 --> 00:30:51,419
no difference in S15 this is ensured by

596
00:30:51,419 --> 00:30:53,840
the first equation then the last three

597
00:30:53,840 --> 00:30:56,100
constraints can ensure there will be no

598
00:30:56,100 --> 00:30:58,860
difference on R1 but there will be

599
00:30:58,860 --> 00:31:01,140
difference in R2

600
00:31:01,140 --> 00:31:03,779
then in Clock Two since there will be

601
00:31:03,779 --> 00:31:06,419
difference in the final State machine to

602
00:31:06,419 --> 00:31:08,159
ensure there is still no difference in

603
00:31:08,159 --> 00:31:11,159
S15 the first equation will be much more

604
00:31:11,159 --> 00:31:13,679
complex so you can check compare it the

605
00:31:13,679 --> 00:31:16,260
first equation here with increase here

606
00:31:16,260 --> 00:31:18,539
so you can find that in this equation we

607
00:31:18,539 --> 00:31:20,640
will involve the xor difference and the

608
00:31:20,640 --> 00:31:25,020
value of the memory registers in FSM so

609
00:31:25,020 --> 00:31:28,380
this in this case so we can still ensure

610
00:31:28,380 --> 00:31:30,240
the difference can stay

611
00:31:30,240 --> 00:31:34,200
in R2 and similarly for clock 3 we again

612
00:31:34,200 --> 00:31:37,440
can construct similar constants and then

613
00:31:37,440 --> 00:31:40,740
at the uh so yeah this is an

614
00:31:40,740 --> 00:31:43,080
illustration then up at clock four

615
00:31:43,080 --> 00:31:46,620
similarly we do this but we hope after

616
00:31:46,620 --> 00:31:49,140
after clock four there will be no

617
00:31:49,140 --> 00:31:51,539
difference in the final State machine so

618
00:31:51,539 --> 00:31:54,059
so we can cancel cancel this difference

619
00:31:54,059 --> 00:31:56,399
of course we do not do not know the

620
00:31:56,399 --> 00:31:58,799
value of this question mark so we need

621
00:31:58,799 --> 00:32:02,880
to find them then again we search so I

622
00:32:02,880 --> 00:32:05,279
said the the active Xbox should be up

623
00:32:05,279 --> 00:32:07,799
here should be should be should appear

624
00:32:07,799 --> 00:32:10,440
as late as possible so we we want to say

625
00:32:10,440 --> 00:32:15,059
how how long it can go so at clock five

626
00:32:15,059 --> 00:32:18,360
we have these equations and add six and

627
00:32:18,360 --> 00:32:20,100
seven we also have these types of

628
00:32:20,100 --> 00:32:23,340
equations and at clock a and clock nine

629
00:32:23,340 --> 00:32:25,320
the difference can only stay in the

630
00:32:25,320 --> 00:32:27,899
highest 15 bits so we have these types

631
00:32:27,899 --> 00:32:29,100
of constraints

632
00:32:29,100 --> 00:32:31,500
so now we have set up all the

633
00:32:31,500 --> 00:32:34,860
constraints for the uh for zook V1

634
00:32:34,860 --> 00:32:37,740
and uh for Rook V2 will perform a

635
00:32:37,740 --> 00:32:40,919
similar analysis but due to some reasons

636
00:32:40,919 --> 00:32:44,279
uh so so I'm so I said that in Rook V2

637
00:32:44,279 --> 00:32:46,799
the loading scheme is changed when

638
00:32:46,799 --> 00:32:49,080
change is that there are money there are

639
00:32:49,080 --> 00:32:52,320
more bits uh set as constant bits so we

640
00:32:52,320 --> 00:32:54,600
cannot inject differences in that in

641
00:32:54,600 --> 00:32:56,880
those piece that's why we cannot attack

642
00:32:56,880 --> 00:33:01,500
uh 31 rounds and that's why t0 becomes

643
00:33:01,500 --> 00:33:04,919
seven and uh yeah it's almost the same

644
00:33:04,919 --> 00:33:07,799
for clock it is the same the constraints

645
00:33:07,799 --> 00:33:09,960
are the same from clock one to clock six

646
00:33:09,960 --> 00:33:12,720
but from clock seven to well at clock

647
00:33:12,720 --> 00:33:15,000
seven and clock eight it will be changed

648
00:33:15,000 --> 00:33:16,919
to allow the difference can only stay as

649
00:33:16,919 --> 00:33:17,720
the

650
00:33:17,720 --> 00:33:21,059
highest 16 bits

651
00:33:21,059 --> 00:33:23,880
then so now we have found that we have

652
00:33:23,880 --> 00:33:26,580
we have set our main equations and in

653
00:33:26,580 --> 00:33:29,340
these equations there are variables

654
00:33:29,340 --> 00:33:31,260
representing the modular difference the

655
00:33:31,260 --> 00:33:33,539
X all difference and the value of the

656
00:33:33,539 --> 00:33:36,600
register so as the first count is too

657
00:33:36,600 --> 00:33:39,899
complex and but indeed we also should

658
00:33:39,899 --> 00:33:42,240
note that uh there are many many

659
00:33:42,240 --> 00:33:44,640
variables I mean we can control these

660
00:33:44,640 --> 00:33:47,220
resolvers so this should be not a

661
00:33:47,220 --> 00:33:49,140
problem I mean we can use a guess and

662
00:33:49,140 --> 00:33:51,179
determine method we get some variables

663
00:33:51,179 --> 00:33:53,399
and we if we have an efficient way to

664
00:33:53,399 --> 00:33:55,260
determine the remaining variables then

665
00:33:55,260 --> 00:33:58,200
we can solve this uh a complex equation

666
00:33:58,200 --> 00:34:00,600
so we first pick some solutions of the

667
00:34:00,600 --> 00:34:02,220
modular difference that does not

668
00:34:02,220 --> 00:34:05,039
contradict the equations then we compute

669
00:34:05,039 --> 00:34:07,140
the xor difference according to the

670
00:34:07,140 --> 00:34:09,359
model difference maybe maybe if you're

671
00:34:09,359 --> 00:34:11,339
not familiar with the crypto analysis of

672
00:34:11,339 --> 00:34:14,820
the MD Shah family uh maybe it will be

673
00:34:14,820 --> 00:34:18,960
yeah not so easy to follow so in this

674
00:34:18,960 --> 00:34:21,000
case at this step into the we need we

675
00:34:21,000 --> 00:34:23,820
need to use the sign difference because

676
00:34:23,820 --> 00:34:27,719
yeah and then we similarly pick some

677
00:34:27,719 --> 00:34:30,960
solution to the modular difference of S9

678
00:34:30,960 --> 00:34:34,320
and S5 and finally only the model

679
00:34:34,320 --> 00:34:37,980
difference of S1 S2 S3 are known and we

680
00:34:37,980 --> 00:34:40,379
need to determine their values such

681
00:34:40,379 --> 00:34:43,379
that's the difference after the

682
00:34:43,379 --> 00:34:44,879
difference in the final State machine

683
00:34:44,879 --> 00:34:48,000
after four clause can be canceled this

684
00:34:48,000 --> 00:34:50,580
is achieved with a depth first search

685
00:34:50,580 --> 00:34:53,780
and a mid in the middle strategies so

686
00:34:53,780 --> 00:34:56,940
it's showing this figure I'm not sure of

687
00:34:56,940 --> 00:34:58,740
the time so maybe I don't have don't

688
00:34:58,740 --> 00:35:01,440
have too much time to explain the

689
00:35:01,440 --> 00:35:04,920
details so you can see from this table

690
00:35:04,920 --> 00:35:08,220
uh we indeed the algorithm is very

691
00:35:08,220 --> 00:35:10,260
efficient and we can find the input

692
00:35:10,260 --> 00:35:12,000
difference in seconds

693
00:35:12,000 --> 00:35:14,220
for example this is the improved

694
00:35:14,220 --> 00:35:18,300
difference for Rook V1 and you also can

695
00:35:18,300 --> 00:35:21,359
note from the bottom of this table there

696
00:35:21,359 --> 00:35:24,900
are constraints on the value of R2 and

697
00:35:24,900 --> 00:35:26,700
the over three runs

698
00:35:26,700 --> 00:35:29,640
and their difference this is used to

699
00:35:29,640 --> 00:35:32,220
ensure the different transitions over

700
00:35:32,220 --> 00:35:34,320
these active Xboxes can hold with

701
00:35:34,320 --> 00:35:37,320
probability one so also we need to

702
00:35:37,320 --> 00:35:39,839
ensure the input can always lead to

703
00:35:39,839 --> 00:35:43,619
these values that's what we call the IV

704
00:35:43,619 --> 00:35:46,800
correcting technique in our paper but to

705
00:35:46,800 --> 00:35:49,760
the time limit I I will not

706
00:35:49,760 --> 00:35:53,040
uh you give the details but in general

707
00:35:53,040 --> 00:35:55,200
it's just to inverse the Run function

708
00:35:55,200 --> 00:35:58,380
and convert the conditions on these

709
00:35:58,380 --> 00:36:01,020
memory distance on the input

710
00:36:01,020 --> 00:36:04,200
and similarly for Rook V2 we also find

711
00:36:04,200 --> 00:36:06,619
the uh improved difference in seconds

712
00:36:06,619 --> 00:36:10,260
and uh and then we we have construct

713
00:36:10,260 --> 00:36:11,940
improved difference and the remaining

714
00:36:11,940 --> 00:36:13,859
work is very easy and everyone can do it

715
00:36:13,859 --> 00:36:16,680
it's just to simulate the distribution

716
00:36:16,680 --> 00:36:22,020
of the difference of S15 and we find

717
00:36:22,020 --> 00:36:25,320
that and according and we it's indeed as

718
00:36:25,320 --> 00:36:28,200
expected that we can attack 31 rounds of

719
00:36:28,200 --> 00:36:31,560
we run and then we can attack 30 rounds

720
00:36:31,560 --> 00:36:35,460
of loop V2 and if we consider a more

721
00:36:35,460 --> 00:36:37,980
realistic setting where the attackers

722
00:36:37,980 --> 00:36:40,980
can only access the keystream words we

723
00:36:40,980 --> 00:36:44,760
can also attack 15 rounds of group V1

724
00:36:44,760 --> 00:36:48,420
and 14 rounds of Rook V2

725
00:36:48,420 --> 00:36:50,700
so in summary although the round

726
00:36:50,700 --> 00:36:52,980
function of Zouk itself looks very

727
00:36:52,980 --> 00:36:55,980
complex we can still construct uh study

728
00:36:55,980 --> 00:36:58,619
the different transitions through the

729
00:36:58,619 --> 00:37:01,140
Run function by using the tools of X all

730
00:37:01,140 --> 00:37:02,820
different sign difference and modular

731
00:37:02,820 --> 00:37:05,579
differences and according to our

732
00:37:05,579 --> 00:37:08,460
analysis uh the security margin of the

733
00:37:08,460 --> 00:37:12,540
first two versions looks small and

734
00:37:12,540 --> 00:37:16,260
and happy that the results has uh pushed

735
00:37:16,260 --> 00:37:19,800
the zooke team to increase their uh the

736
00:37:19,800 --> 00:37:22,200
initialization runs so that's all thank

737
00:37:22,200 --> 00:37:24,180
you

738
00:37:24,180 --> 00:37:26,400
thank you

739
00:37:26,400 --> 00:37:31,220
so any questions and comments from Kobe

740
00:37:37,680 --> 00:37:41,480
any questions from Beijing

741
00:37:44,359 --> 00:37:48,960
I have a question uh we can see the

742
00:37:48,960 --> 00:37:51,599
method you employed for solving the

743
00:37:51,599 --> 00:37:55,380
equations are quite dedicated do you

744
00:37:55,380 --> 00:37:59,579
think it's possible to use constraint

745
00:37:59,579 --> 00:38:04,500
solvers to assist the resolution process

746
00:38:04,500 --> 00:38:08,099
but I think it's already very efficient

747
00:38:08,099 --> 00:38:09,300
but

748
00:38:09,300 --> 00:38:11,160
maybe it's possible but so there are

749
00:38:11,160 --> 00:38:13,320
many different types of operations like

750
00:38:13,320 --> 00:38:16,560
modular difference modular Edition and

751
00:38:16,560 --> 00:38:18,119
uh yeah

752
00:38:18,119 --> 00:38:21,180
XO difference something like under the

753
00:38:21,180 --> 00:38:23,280
value transition like the Xbox for for

754
00:38:23,280 --> 00:38:26,040
example the first equation here maybe

755
00:38:26,040 --> 00:38:29,240
the model will be very complex because

756
00:38:29,240 --> 00:38:32,940
you need to model it bit by bit so not

757
00:38:32,940 --> 00:38:36,839
sure maybe it can be done

758
00:38:36,839 --> 00:38:39,359
okay thanks for your answer

759
00:38:39,359 --> 00:38:41,579
yeah

760
00:38:41,579 --> 00:38:44,420
any questions

761
00:38:46,380 --> 00:38:50,420
are there any questions from the chat

762
00:38:51,119 --> 00:38:53,540
no

763
00:38:54,720 --> 00:38:57,119
so if there are no questions let's send

764
00:38:57,119 --> 00:38:58,560
this speaker again

765
00:38:58,560 --> 00:39:01,160
thank you

766
00:39:18,119 --> 00:39:21,560
may you share the screen

767
00:39:41,160 --> 00:39:44,779
we cannot see this light

768
00:39:51,599 --> 00:39:55,920
uh this is not your fault I believe

769
00:39:55,920 --> 00:40:00,119
um is the speaker harendra Kumar garai

770
00:40:00,119 --> 00:40:02,940
in the in because yes ma'am I am present

771
00:40:02,940 --> 00:40:06,359
time okay take your time

772
00:40:06,359 --> 00:40:08,940
yes you should share your screen then

773
00:40:08,940 --> 00:40:12,560
and um yeah

774
00:40:15,900 --> 00:40:17,820
okay

775
00:40:17,820 --> 00:40:22,510
so our last speaker of this session is

776
00:40:22,510 --> 00:40:25,339
[Music]

777
00:40:25,339 --> 00:40:27,300
and uh

778
00:40:27,300 --> 00:40:30,420
he's the title of his talk is crypto

779
00:40:30,420 --> 00:40:32,280
analysis of

780
00:40:32,280 --> 00:40:35,099
reduced the wrong charger new attack and

781
00:40:35,099 --> 00:40:36,660
deeper analysis

782
00:40:36,660 --> 00:40:40,020
the authors are

783
00:40:40,020 --> 00:40:43,020
sadness

784
00:40:47,460 --> 00:40:49,220
and

785
00:40:49,220 --> 00:40:51,540
submarine natural

786
00:40:51,540 --> 00:40:54,060
thank you very much

787
00:40:54,060 --> 00:40:57,859
thank you am I Audible

788
00:40:58,020 --> 00:41:00,599
you are on Zoom yes

789
00:41:00,599 --> 00:41:02,940
so am uh okay thank you for the

790
00:41:02,940 --> 00:41:04,079
introduction

791
00:41:04,079 --> 00:41:05,660
so I am

792
00:41:05,660 --> 00:41:08,220
a third year graduate from which Milani

793
00:41:08,220 --> 00:41:10,980
Hyderabad campus India the topic of my

794
00:41:10,980 --> 00:41:13,079
talk is cryptanalysis of reduce down

795
00:41:13,079 --> 00:41:16,380
Chacha new attack and deeper analysis so

796
00:41:16,380 --> 00:41:18,720
this is a joint work with my supervisor

797
00:41:18,720 --> 00:41:22,020
Dr sabyasachi Dev and shubham Mitra

798
00:41:22,020 --> 00:41:23,579
so let's start the talk with the

799
00:41:23,579 --> 00:41:25,619
introductory section so the symmetric

800
00:41:25,619 --> 00:41:27,660
cyber is broadly categorized into two

801
00:41:27,660 --> 00:41:29,820
parts like a block Cipher and stream

802
00:41:29,820 --> 00:41:32,520
Cipher in the block Cipher the plain

803
00:41:32,520 --> 00:41:35,339
text is broken into fixed size chunks

804
00:41:35,339 --> 00:41:38,280
basically they are of 64 bits or 128 bit

805
00:41:38,280 --> 00:41:40,980
and that block is encrypted one at a

806
00:41:40,980 --> 00:41:41,700
time

807
00:41:41,700 --> 00:41:43,740
some example of block Cipher includes

808
00:41:43,740 --> 00:41:47,099
AES Des Etc and in the Stream Cipher the

809
00:41:47,099 --> 00:41:49,500
mechanism is little different here a key

810
00:41:49,500 --> 00:41:52,200
stream is generated from the key then

811
00:41:52,200 --> 00:41:54,060
that key stream is then xored with the

812
00:41:54,060 --> 00:41:56,280
plain text to give us a cyber text so

813
00:41:56,280 --> 00:41:58,140
basically here the encryption happens in

814
00:41:58,140 --> 00:42:00,420
one bit or one byte at a time so for

815
00:42:00,420 --> 00:42:03,300
example of stream Cipher includes salsa

816
00:42:03,300 --> 00:42:05,760
20 Cha-Cha grain Etc

817
00:42:05,760 --> 00:42:07,380
now let us look into the design

818
00:42:07,380 --> 00:42:09,300
principle while designing The

819
00:42:09,300 --> 00:42:11,460
cryptographic Primitives if we look the

820
00:42:11,460 --> 00:42:13,260
if we look into that we find that the

821
00:42:13,260 --> 00:42:15,180
SPN based structure aortex based

822
00:42:15,180 --> 00:42:16,500
structures are one of the most popular

823
00:42:16,500 --> 00:42:18,900
one but among them air expect structure

824
00:42:18,900 --> 00:42:21,359
needs a special attention here ARX

825
00:42:21,359 --> 00:42:24,180
stands for addition rotation and czar

826
00:42:24,180 --> 00:42:26,220
these are very three basic operations

827
00:42:26,220 --> 00:42:28,380
for any CPU so they are very Hardware

828
00:42:28,380 --> 00:42:31,320
friendly also in the software side they

829
00:42:31,320 --> 00:42:34,200
are very fast so due to this reason the

830
00:42:34,200 --> 00:42:37,578
ARX based design schemes

831
00:42:37,940 --> 00:42:41,700
this scheme has impaired gained a huge

832
00:42:41,700 --> 00:42:45,480
popularity Back in 1970 the field block

833
00:42:45,480 --> 00:42:48,240
Cipher first used this ARS Kim to in

834
00:42:48,240 --> 00:42:50,880
their design now this Cipher of our

835
00:42:50,880 --> 00:42:52,680
topic the Chacha Cypher is a stream

836
00:42:52,680 --> 00:42:55,320
Cipher and which have used the ARs

837
00:42:55,320 --> 00:42:57,900
design in this design Daniel Z Bernstein

838
00:42:57,900 --> 00:43:00,599
in 2008 gave this stream Cipher charger

839
00:43:00,599 --> 00:43:03,119
as an updated version for the salsa 20

840
00:43:03,119 --> 00:43:04,260
Cipher

841
00:43:04,260 --> 00:43:06,359
now let us look into the structure of

842
00:43:06,359 --> 00:43:08,940
the Chata Cipher since Sacha is a stream

843
00:43:08,940 --> 00:43:10,980
Cipher the main focus is on the key

844
00:43:10,980 --> 00:43:13,200
stream generation algorithm so the key

845
00:43:13,200 --> 00:43:15,540
stream generation algorithm it takes an

846
00:43:15,540 --> 00:43:19,020
input of 256 bit key and 128 bit

847
00:43:19,020 --> 00:43:22,200
constant and 128 bit initial Vector that

848
00:43:22,200 --> 00:43:23,700
is sometimes referred as attacker

849
00:43:23,700 --> 00:43:27,119
control inputs all these inputs are then

850
00:43:27,119 --> 00:43:29,160
stored in a four by four Matrix form

851
00:43:29,160 --> 00:43:31,800
where each entry of the Matrix is of 32

852
00:43:31,800 --> 00:43:34,980
bits as you can see from the picture the

853
00:43:34,980 --> 00:43:36,960
first row contains the constant vectors

854
00:43:36,960 --> 00:43:39,359
the second row and third row contains

855
00:43:39,359 --> 00:43:41,760
the key vectors while in the last row

856
00:43:41,760 --> 00:43:44,400
contains the attacker control input so

857
00:43:44,400 --> 00:43:46,740
as the total we get an output of 512

858
00:43:46,740 --> 00:43:49,560
with key stream now how deep State how

859
00:43:49,560 --> 00:43:51,900
do we get the key stream this state X is

860
00:43:51,900 --> 00:43:53,880
then updated via the Chacha round

861
00:43:53,880 --> 00:43:56,099
function in the original Chacha Cipher

862
00:43:56,099 --> 00:43:59,280
there are a total 20 Chacha rounds and

863
00:43:59,280 --> 00:44:01,319
each charge around is constructed with

864
00:44:01,319 --> 00:44:03,000
the help of the following Erics function

865
00:44:03,000 --> 00:44:06,660
which updates a vector a b c d to a

866
00:44:06,660 --> 00:44:08,640
Double Dash B Double Dash C Double Dash

867
00:44:08,640 --> 00:44:10,140
D Double Dash by using the equation

868
00:44:10,140 --> 00:44:11,760
number one

869
00:44:11,760 --> 00:44:13,680
and in the design principle it is

870
00:44:13,680 --> 00:44:15,420
mentioned that in the odd number of

871
00:44:15,420 --> 00:44:16,140
round

872
00:44:16,140 --> 00:44:18,359
the column of the any state will be a

873
00:44:18,359 --> 00:44:20,160
Google get updated and in the even

874
00:44:20,160 --> 00:44:22,380
number of rounds the diagonals of the

875
00:44:22,380 --> 00:44:25,140
state X will are will will be updated so

876
00:44:25,140 --> 00:44:28,200
as a total we have it 10 column rounds

877
00:44:28,200 --> 00:44:30,180
and 10 diagonal rounds

878
00:44:30,180 --> 00:44:32,339
after the 20 round updation process is

879
00:44:32,339 --> 00:44:35,460
completed that state x 20 is basically

880
00:44:35,460 --> 00:44:38,940
then added to the initial State X word

881
00:44:38,940 --> 00:44:41,099
by word and we get the final key stream

882
00:44:41,099 --> 00:44:43,319
Z that is the next word with the plain

883
00:44:43,319 --> 00:44:45,359
text to give us the ciphertext

884
00:44:45,359 --> 00:44:48,540
now one thing to hear keep it to notice

885
00:44:48,540 --> 00:44:50,819
is that in equation number one the

886
00:44:50,819 --> 00:44:52,920
operation that has been used can be

887
00:44:52,920 --> 00:44:55,020
inverted like all this operation has a

888
00:44:55,020 --> 00:44:57,540
has the reverse operations so what does

889
00:44:57,540 --> 00:44:59,280
it mean it means that in the Chacha

890
00:44:59,280 --> 00:45:02,460
Cipher we can go from round R to round R

891
00:45:02,460 --> 00:45:05,040
minus one by reversing those operations

892
00:45:05,040 --> 00:45:06,660
so that is the basic structure of the

893
00:45:06,660 --> 00:45:09,000
charter Cipher how does it work now let

894
00:45:09,000 --> 00:45:10,680
us look into the cryptanalysis of charge

895
00:45:10,680 --> 00:45:13,380
of effort so until now the most of the

896
00:45:13,380 --> 00:45:15,180
crypto analysis that has been done on

897
00:45:15,180 --> 00:45:16,619
this stream Cipher is mostly

898
00:45:16,619 --> 00:45:18,660
differential linear type where a

899
00:45:18,660 --> 00:45:20,460
differential where the differential

900
00:45:20,460 --> 00:45:22,560
approach has been applied to some part

901
00:45:22,560 --> 00:45:24,900
of the cipher and linear linear

902
00:45:24,900 --> 00:45:26,339
approaches have been applied some other

903
00:45:26,339 --> 00:45:28,079
part of the cipher to get a good

904
00:45:28,079 --> 00:45:30,300
differential distinguisher

905
00:45:30,300 --> 00:45:34,020
and a single ID has been used until now

906
00:45:34,020 --> 00:45:35,880
one of the prominent attack techniques

907
00:45:35,880 --> 00:45:37,859
in this differential attack scenario is

908
00:45:37,859 --> 00:45:39,900
the probabilistic neutrality bits that

909
00:45:39,900 --> 00:45:42,060
is pnb based data which was given by

910
00:45:42,060 --> 00:45:45,180
Amazon and others in 2008 FSC so the

911
00:45:45,180 --> 00:45:47,640
main idea of the PNP based attack is to

912
00:45:47,640 --> 00:45:50,040
filter out those qubits that has very

913
00:45:50,040 --> 00:45:52,380
less influence on the output so as a

914
00:45:52,380 --> 00:45:54,240
result the complexity decreases from The

915
00:45:54,240 --> 00:45:56,220
Brute Force attack technique

916
00:45:56,220 --> 00:45:58,859
the latest or most successful attack the

917
00:45:58,859 --> 00:46:00,060
equivalent complexity of the most

918
00:46:00,060 --> 00:46:01,560
successful attack before our attack

919
00:46:01,560 --> 00:46:03,900
technique on sixth round Chacha is 2 to

920
00:46:03,900 --> 00:46:06,660
the power 104.68 which was given by NATO

921
00:46:06,660 --> 00:46:08,579
and others

922
00:46:08,579 --> 00:46:11,280
now the complexity formula that has been

923
00:46:11,280 --> 00:46:14,460
used to compute this complexity was also

924
00:46:14,460 --> 00:46:16,200
given by Amazon and others and it is

925
00:46:16,200 --> 00:46:19,140
uses of equation number two here it was

926
00:46:19,140 --> 00:46:20,940
assumed that M was very very bigger than

927
00:46:20,940 --> 00:46:23,579
Alpha but it is not the case that every

928
00:46:23,579 --> 00:46:25,319
time m is very bigger than Alpha

929
00:46:25,319 --> 00:46:27,000
sometimes the difference between M and

930
00:46:27,000 --> 00:46:29,640
Alpha is not that huge it is very small

931
00:46:29,640 --> 00:46:32,579
so in that case the formula is little

932
00:46:32,579 --> 00:46:35,160
updated it was give it was updated by

933
00:46:35,160 --> 00:46:37,079
they and others and the extra term was

934
00:46:37,079 --> 00:46:39,180
incorporated in the equation as the form

935
00:46:39,180 --> 00:46:41,640
and the form becomes the complexity

936
00:46:41,640 --> 00:46:43,319
formula becomes equation number three so

937
00:46:43,319 --> 00:46:45,119
as you can see there is an extra term 2

938
00:46:45,119 --> 00:46:47,579
to the power K minus M so it is

939
00:46:47,579 --> 00:46:49,619
basically the it is it basically comes

940
00:46:49,619 --> 00:46:51,599
from the exhaustive search of the pnbs

941
00:46:51,599 --> 00:46:53,339
in the last state

942
00:46:53,339 --> 00:46:55,859
Now using this equation number three and

943
00:46:55,859 --> 00:46:57,960
the existing attacks we can show that

944
00:46:57,960 --> 00:47:00,240
the complexity cannot go below 2 power K

945
00:47:00,240 --> 00:47:02,460
by 2 where k h basically the total

946
00:47:02,460 --> 00:47:05,599
number of key bits that is present

947
00:47:05,599 --> 00:47:08,460
but if we look into the literature we

948
00:47:08,460 --> 00:47:10,380
found that there are so many Works where

949
00:47:10,380 --> 00:47:11,460
the authors have claimed their

950
00:47:11,460 --> 00:47:14,339
complexity to be less than two power 128

951
00:47:14,339 --> 00:47:16,619
for ChaCha 2 for the sixth round Cha-Cha

952
00:47:16,619 --> 00:47:19,079
so we have updated their complexity and

953
00:47:19,079 --> 00:47:21,359
here I am presenting some and an

954
00:47:21,359 --> 00:47:23,700
exhaustive list of the attacks those who

955
00:47:23,700 --> 00:47:25,140
have claimed their complexity to be

956
00:47:25,140 --> 00:47:26,579
something and that actual complexity is

957
00:47:26,579 --> 00:47:28,500
little different for example if we take

958
00:47:28,500 --> 00:47:30,660
an entry the last entry so it is

959
00:47:30,660 --> 00:47:32,579
basically the attack of NATO so they

960
00:47:32,579 --> 00:47:34,740
claim their complexity to be 2 to the

961
00:47:34,740 --> 00:47:37,500
power 104.68 but we can see that there

962
00:47:37,500 --> 00:47:40,980
is a total number of pnbs to be 212 so

963
00:47:40,980 --> 00:47:43,619
to search those pngs exhaustively in the

964
00:47:43,619 --> 00:47:45,420
last stage requires a complexity of at

965
00:47:45,420 --> 00:47:47,579
least two to the power 212 so the actual

966
00:47:47,579 --> 00:47:50,220
complexity becomes two part 212. so all

967
00:47:50,220 --> 00:47:52,140
these results on are based on six round

968
00:47:52,140 --> 00:47:53,819
cha-cha

969
00:47:53,819 --> 00:47:56,520
now coming to our attack approach so as

970
00:47:56,520 --> 00:47:58,800
I have mentioned that until now a single

971
00:47:58,800 --> 00:48:00,900
ideod has been used for the differential

972
00:48:00,900 --> 00:48:03,240
attack we have we have used a multiple

973
00:48:03,240 --> 00:48:05,599
idiot approach and we have taken the

974
00:48:05,599 --> 00:48:08,099
advantage of the symmetricity of the

975
00:48:08,099 --> 00:48:09,140
charts

976
00:48:09,140 --> 00:48:11,400
initial State Matrix

977
00:48:11,400 --> 00:48:14,460
while finding the differential so as an

978
00:48:14,460 --> 00:48:15,800
attacker point of view he first

979
00:48:15,800 --> 00:48:18,540
partitions the keep it into four subsets

980
00:48:18,540 --> 00:48:21,240
S1 S2 S3 and S4 so using the first

981
00:48:21,240 --> 00:48:23,700
differential ID would be one he gets the

982
00:48:23,700 --> 00:48:26,400
subset S1 using the second uh

983
00:48:26,400 --> 00:48:29,339
differential ID 42 he gets the set as S2

984
00:48:29,339 --> 00:48:31,619
but he but the set S2 is mutually

985
00:48:31,619 --> 00:48:33,420
exclusive from S1 so he basically

986
00:48:33,420 --> 00:48:35,400
filters out the common element

987
00:48:35,400 --> 00:48:38,400
and from similarly for using ID of D3 He

988
00:48:38,400 --> 00:48:41,040
creates the state S3 which is also

989
00:48:41,040 --> 00:48:43,380
mutually exclusive from S1 and S2 once

990
00:48:43,380 --> 00:48:45,660
S1 S2 and S3 is created

991
00:48:45,660 --> 00:48:48,359
the rest of the key bits are labeled as

992
00:48:48,359 --> 00:48:50,940
S4 once this reprocessing stage is done

993
00:48:50,940 --> 00:48:53,460
he then moves forward in data collecting

994
00:48:53,460 --> 00:48:55,740
data collection so the attacker chooses

995
00:48:55,740 --> 00:48:59,460
N1 number of IVs V and then collects the

996
00:48:59,460 --> 00:49:02,160
corresponding key stream Z using the

997
00:49:02,160 --> 00:49:05,160
original system the same he does for by

998
00:49:05,160 --> 00:49:06,900
injecting the input difference output

999
00:49:06,900 --> 00:49:08,280
different first input difference output

1000
00:49:08,280 --> 00:49:11,700
difference so as a total he has N1 pairs

1001
00:49:11,700 --> 00:49:13,619
of IG key stream

1002
00:49:13,619 --> 00:49:16,520
for the first differential similarly for

1003
00:49:16,520 --> 00:49:18,720
using the second and third differential

1004
00:49:18,720 --> 00:49:21,359
he collects N2 and N3 pairs of IV key

1005
00:49:21,359 --> 00:49:23,579
Stream So as a total after the data

1006
00:49:23,579 --> 00:49:26,040
collection stage he has N1 plus N2 plus

1007
00:49:26,040 --> 00:49:28,260
N3 pairs of IV K stream along with the

1008
00:49:28,260 --> 00:49:30,660
difference he collects this data to

1009
00:49:30,660 --> 00:49:33,420
exploit the key now he fits it in his

1010
00:49:33,420 --> 00:49:36,240
local machine to recover the key bits so

1011
00:49:36,240 --> 00:49:38,400
first he makes a guess for the key bits

1012
00:49:38,400 --> 00:49:41,160
of S1 and puts random values in the rest

1013
00:49:41,160 --> 00:49:43,680
of the qubits he chooses an element V

1014
00:49:43,680 --> 00:49:47,160
from the least N1 he has and using V and

1015
00:49:47,160 --> 00:49:50,780
G he creates a matrix M State Matrix M

1016
00:49:50,780 --> 00:49:54,119
also he uses the corresponding key

1017
00:49:54,119 --> 00:49:56,940
stream with of v z and creates the state

1018
00:49:56,940 --> 00:49:58,500
Z minus m

1019
00:49:58,500 --> 00:50:00,480
the same thing he does for the

1020
00:50:00,480 --> 00:50:03,000
difference Matrix Z Dash minus M Dash

1021
00:50:03,000 --> 00:50:05,339
Okay so once those two states has been

1022
00:50:05,339 --> 00:50:07,859
created Z minus M and Z Dash minus m m

1023
00:50:07,859 --> 00:50:09,660
dashed he turns reverse such are

1024
00:50:09,660 --> 00:50:11,579
basically two reverse charge accounts on

1025
00:50:11,579 --> 00:50:14,040
the states Z minus M and Z Dash minus M

1026
00:50:14,040 --> 00:50:16,920
Dash once the once he runs two touch

1027
00:50:16,920 --> 00:50:18,960
around reverse round function he checks

1028
00:50:18,960 --> 00:50:20,640
the difference at the output difference

1029
00:50:20,640 --> 00:50:23,460
bit position and keeps a count if the

1030
00:50:23,460 --> 00:50:24,420
difference

1031
00:50:24,420 --> 00:50:27,300
occurs more than a threshold t

1032
00:50:27,300 --> 00:50:29,520
for the n one number of N1 number of

1033
00:50:29,520 --> 00:50:32,579
data that he has corrected for ID od1 he

1034
00:50:32,579 --> 00:50:35,040
declares the guess for his key bits to

1035
00:50:35,040 --> 00:50:38,280
be right if it is not he then goes back

1036
00:50:38,280 --> 00:50:39,960
to the first stage and makes another

1037
00:50:39,960 --> 00:50:42,839
guess g and the same process is then we

1038
00:50:42,839 --> 00:50:45,180
repeated here one thing to note that the

1039
00:50:45,180 --> 00:50:47,400
threshold T is not any random number it

1040
00:50:47,400 --> 00:50:49,140
is basically calculated from the same

1041
00:50:49,140 --> 00:50:50,940
formula that has been used for the data

1042
00:50:50,940 --> 00:50:52,500
complexity

1043
00:50:52,500 --> 00:50:55,020
once the values of S1 has been recovered

1044
00:50:55,020 --> 00:50:58,200
properly e puts the correct value on the

1045
00:50:58,200 --> 00:51:00,900
S1 key bits of S1 and leave them as it

1046
00:51:00,900 --> 00:51:03,300
is he then moves forward in guessing the

1047
00:51:03,300 --> 00:51:05,880
S2 qubits he makes a guess for the S2

1048
00:51:05,880 --> 00:51:08,460
cubits leaves the key bits of S1 and

1049
00:51:08,460 --> 00:51:09,900
puts random values on the rest of the

1050
00:51:09,900 --> 00:51:12,599
qubit and the same process he repeats in

1051
00:51:12,599 --> 00:51:14,400
the same way for S3 also he does the

1052
00:51:14,400 --> 00:51:17,520
same thing once S1 S2 and S3 has been

1053
00:51:17,520 --> 00:51:20,220
recovered properly he then guesses that

1054
00:51:20,220 --> 00:51:23,400
S4 cubits exhaustively that is basically

1055
00:51:23,400 --> 00:51:25,859
these are S4 qubits can be predicted as

1056
00:51:25,859 --> 00:51:27,780
the pnb so he just searches them

1057
00:51:27,780 --> 00:51:29,400
exhaustively

1058
00:51:29,400 --> 00:51:31,559
now let us look at the complexity of

1059
00:51:31,559 --> 00:51:33,420
this attack technique so as you can see

1060
00:51:33,420 --> 00:51:36,660
we have used the three ID orders 12 6 1

1061
00:51:36,660 --> 00:51:39,300
0 where 12 means the ID word and six

1062
00:51:39,300 --> 00:51:41,819
means the bits beat basically so for the

1063
00:51:41,819 --> 00:51:45,180
input input difference 12 206 bit for OD

1064
00:51:45,180 --> 00:51:47,579
also one is the word and zero is the bit

1065
00:51:47,579 --> 00:51:52,020
we have S1 S2 S3 as 58 5650 and S4 has

1066
00:51:52,020 --> 00:51:54,960
92 we have used equation number four to

1067
00:51:54,960 --> 00:51:56,819
calculate the complexity of our attack

1068
00:51:56,819 --> 00:51:59,339
and we can see that our com our the

1069
00:51:59,339 --> 00:52:01,380
complexity of this attack technique is 2

1070
00:52:01,380 --> 00:52:04,140
to the power 99.48 Which is less than 2

1071
00:52:04,140 --> 00:52:07,380
power 256 up by two so using our attack

1072
00:52:07,380 --> 00:52:09,200
Technique we were

1073
00:52:09,200 --> 00:52:11,940
it was possible to bring down the

1074
00:52:11,940 --> 00:52:13,559
complexity of the attack less than 2

1075
00:52:13,559 --> 00:52:16,200
power K by 2. here is an advantage of

1076
00:52:16,200 --> 00:52:18,480
this attack technique but one thing to

1077
00:52:18,480 --> 00:52:21,720
note that this complexity 2.99.48 is

1078
00:52:21,720 --> 00:52:23,400
repeats the fact that it is impossible

1079
00:52:23,400 --> 00:52:25,920
to demonstrate that this attack on a

1080
00:52:25,920 --> 00:52:29,460
real system unreal system

1081
00:52:29,460 --> 00:52:32,579
so uh also some statistical assumption

1082
00:52:32,579 --> 00:52:34,440
and approximations have been used while

1083
00:52:34,440 --> 00:52:36,000
calculating the complexity data

1084
00:52:36,000 --> 00:52:38,940
complexity and runtime complexity also

1085
00:52:38,940 --> 00:52:41,280
so and they are also not theoretically

1086
00:52:41,280 --> 00:52:43,680
Justified experimentally Justified so

1087
00:52:43,680 --> 00:52:46,380
for that to justify them experimentally

1088
00:52:46,380 --> 00:52:48,540
we have implemented a toy version of the

1089
00:52:48,540 --> 00:52:51,259
data Cipher

1090
00:52:53,300 --> 00:52:55,920
except for the fact that here each entry

1091
00:52:55,920 --> 00:52:59,400
is of 8 bit so as a total we get a 128

1092
00:52:59,400 --> 00:53:02,520
bit output also the toy Chacha uses a

1093
00:53:02,520 --> 00:53:04,200
64-bit key

1094
00:53:04,200 --> 00:53:06,180
and the Erics and the round function for

1095
00:53:06,180 --> 00:53:07,859
the toy Chacha that has been also

1096
00:53:07,859 --> 00:53:10,559
adjusted accordingly one can prefer our

1097
00:53:10,559 --> 00:53:12,780
article for further details on this toy

1098
00:53:12,780 --> 00:53:13,500
charger

1099
00:53:13,500 --> 00:53:15,780
we have implemented the attack technique

1100
00:53:15,780 --> 00:53:17,640
of Amazon and the attack technique of

1101
00:53:17,640 --> 00:53:19,380
moisture that is the chosen IV approach

1102
00:53:19,380 --> 00:53:21,720
and we can see that the experimental

1103
00:53:21,720 --> 00:53:23,760
value uh also one thing we have

1104
00:53:23,760 --> 00:53:25,319
implemented though all these attacks on

1105
00:53:25,319 --> 00:53:28,020
3.5 round and you can see that the

1106
00:53:28,020 --> 00:53:29,579
experimental values

1107
00:53:29,579 --> 00:53:31,920
justifies the theoretical values

1108
00:53:31,920 --> 00:53:34,440
for both of the attack Technique we have

1109
00:53:34,440 --> 00:53:36,720
also implemented the multiple idiot

1110
00:53:36,720 --> 00:53:38,220
attack technique on three round toy

1111
00:53:38,220 --> 00:53:39,900
Chacha to see how much improvement we

1112
00:53:39,900 --> 00:53:42,359
are getting so for single idod as you

1113
00:53:42,359 --> 00:53:44,040
can see from the last row complexity

1114
00:53:44,040 --> 00:53:46,319
level row that the experimental value is

1115
00:53:46,319 --> 00:53:49,200
2 power 23.01 for the single IOD

1116
00:53:49,200 --> 00:53:51,300
approach but for the multiple idod

1117
00:53:51,300 --> 00:53:53,400
approach the experimental value becomes

1118
00:53:53,400 --> 00:53:56,099
2 to the power 15.1 so he hasn't we see

1119
00:53:56,099 --> 00:53:58,619
an improvement of almost 2 power 8 so

1120
00:53:58,619 --> 00:54:00,480
this makes us hopeful that our attack

1121
00:54:00,480 --> 00:54:02,760
technique or our attack techniques or

1122
00:54:02,760 --> 00:54:04,200
some other attack techniques similar to

1123
00:54:04,200 --> 00:54:05,640
our attack technique can be implemented

1124
00:54:05,640 --> 00:54:08,339
on other ARX ciphers also to bring down

1125
00:54:08,339 --> 00:54:10,619
the complexity

1126
00:54:10,619 --> 00:54:12,839
and these are some of the references

1127
00:54:12,839 --> 00:54:14,760
that I have used while preparing the

1128
00:54:14,760 --> 00:54:16,140
slides

1129
00:54:16,140 --> 00:54:18,900
lastly don't know about the ISR and FSC

1130
00:54:18,900 --> 00:54:21,720
2023 organizing committee to make give

1131
00:54:21,720 --> 00:54:24,180
us an opportunity to present our work

1132
00:54:24,180 --> 00:54:26,700
thank you

1133
00:54:26,700 --> 00:54:28,800
thank you very much

1134
00:54:28,800 --> 00:54:33,559
so any questions and comments from Kobe

1135
00:54:41,220 --> 00:54:45,200
so any questions from Beijing

1136
00:54:48,720 --> 00:54:52,859
okay I have a question uh yes sir are

1137
00:54:52,859 --> 00:54:54,780
there any

1138
00:54:54,780 --> 00:54:58,339
so can you elaborate on the statistical

1139
00:54:58,339 --> 00:55:02,040
assumptions in your text

1140
00:55:02,040 --> 00:55:04,619
okay so in the complexity formula if we

1141
00:55:04,619 --> 00:55:06,839
look in the data complexity formula with

1142
00:55:06,839 --> 00:55:08,339
that has been used that I have not

1143
00:55:08,339 --> 00:55:09,660
mentioned here that you can find in the

1144
00:55:09,660 --> 00:55:11,640
literature there is some approximation

1145
00:55:11,640 --> 00:55:13,559
statistical approximation like a

1146
00:55:13,559 --> 00:55:15,960
binomial approximation binomial

1147
00:55:15,960 --> 00:55:17,819
distribution has been approximated by a

1148
00:55:17,819 --> 00:55:21,119
normal distribution so for those things

1149
00:55:21,119 --> 00:55:23,040
I have mentioned like the statistical

1150
00:55:23,040 --> 00:55:27,020
approximation by that thing I meant

1151
00:55:28,319 --> 00:55:30,000
okay thank you

1152
00:55:30,000 --> 00:55:33,500
okay thank you

1153
00:55:34,020 --> 00:55:36,859
any questions

1154
00:55:42,359 --> 00:55:46,279
are there any questions from the chat

1155
00:55:50,460 --> 00:55:54,079
no no questions on the chat

1156
00:55:54,859 --> 00:55:58,800
okay so if there are no questions let's

1157
00:55:58,800 --> 00:56:01,440
thank all the speakers again for their

1158
00:56:01,440 --> 00:56:02,880
great talks

1159
00:56:02,880 --> 00:56:05,460
okay this is the end of this session

1160
00:56:05,460 --> 00:56:08,420
thank you very much

