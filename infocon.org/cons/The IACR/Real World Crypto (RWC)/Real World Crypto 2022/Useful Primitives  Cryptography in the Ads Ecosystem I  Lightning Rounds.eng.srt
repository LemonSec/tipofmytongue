1
00:00:00,080 --> 00:00:01,280
you will form

2
00:00:01,280 --> 00:00:04,080
an orderly queue on this side going up

3
00:00:04,080 --> 00:00:06,480
to those steps the first person will

4
00:00:06,480 --> 00:00:07,440
come on

5
00:00:07,440 --> 00:00:09,440
i will they can have a talk and they

6
00:00:09,440 --> 00:00:12,559
will depart by going behind the lectern

7
00:00:12,559 --> 00:00:15,120
and down the steps that way okay so if

8
00:00:15,120 --> 00:00:17,119
you want to queue for the lightning

9
00:00:17,119 --> 00:00:20,240
talks you will cue on that side of the

10
00:00:20,240 --> 00:00:21,119
room

11
00:00:21,119 --> 00:00:22,960
along the wall

12
00:00:22,960 --> 00:00:25,119
up to the steps and those who have come

13
00:00:25,119 --> 00:00:29,000
in late tough

14
00:00:29,400 --> 00:00:30,720
[Music]

15
00:00:30,720 --> 00:00:32,399
well good morning and welcome to this

16
00:00:32,399 --> 00:00:34,960
session on useful primitives our first

17
00:00:34,960 --> 00:00:37,200
speaker this morning is gabriel capchuk

18
00:00:37,200 --> 00:00:38,559
who's going to be talking about

19
00:00:38,559 --> 00:00:40,320
steganography the floor is yours

20
00:00:40,320 --> 00:00:41,700
gabrielle

21
00:00:41,700 --> 00:00:44,929
[Music]

22
00:00:46,000 --> 00:00:47,600
great

23
00:00:47,600 --> 00:00:49,280
i see people are still

24
00:00:49,280 --> 00:00:51,199
oh i take my wraps right i can do that

25
00:00:51,199 --> 00:00:53,280
yeah

26
00:00:53,280 --> 00:00:54,960
um

27
00:00:54,960 --> 00:00:56,800
hi i'm gabe capchuk i'm really excited

28
00:00:56,800 --> 00:00:59,760
to be uh put into the useful primitives

29
00:00:59,760 --> 00:01:02,239
session today my whole goal of my talk

30
00:01:02,239 --> 00:01:03,440
for today was to convince you that

31
00:01:03,440 --> 00:01:05,360
steganography is a useful primitive um

32
00:01:05,360 --> 00:01:07,200
and to some extent the the pc chairs did

33
00:01:07,200 --> 00:01:08,400
a wonderful job and they've already done

34
00:01:08,400 --> 00:01:09,680
my job for me by putting me in the

35
00:01:09,680 --> 00:01:10,840
session

36
00:01:10,840 --> 00:01:14,080
um it's uh uh my this is my main goal is

37
00:01:14,080 --> 00:01:15,920
to convince you that uh steganography is

38
00:01:15,920 --> 00:01:18,000
very uh gonna be very useful what was

39
00:01:18,000 --> 00:01:19,680
kind of nice is during the q a yesterday

40
00:01:19,680 --> 00:01:21,840
we also had the reveal that next year's

41
00:01:21,840 --> 00:01:23,119
real world cryptography is really going

42
00:01:23,119 --> 00:01:25,439
to be real world steganography um so i'm

43
00:01:25,439 --> 00:01:26,640
committing and i'm starting the

44
00:01:26,640 --> 00:01:28,400
tradition now this is now a real world

45
00:01:28,400 --> 00:01:29,840
steganography

46
00:01:29,840 --> 00:01:31,040
i'm in order to try and convince you

47
00:01:31,040 --> 00:01:32,159
that segonography is going to be

48
00:01:32,159 --> 00:01:33,680
something that you should care about and

49
00:01:33,680 --> 00:01:35,759
do research on um i want to take a

50
00:01:35,759 --> 00:01:36,880
moment to just think about some of the

51
00:01:36,880 --> 00:01:38,799
big threats that are facing the crypto

52
00:01:38,799 --> 00:01:41,920
community today um the obvious one uh is

53
00:01:41,920 --> 00:01:43,360
these quantum computer things about

54
00:01:43,360 --> 00:01:45,439
which i know nothing but are very scary

55
00:01:45,439 --> 00:01:46,960
um and the nice thing is that we as a

56
00:01:46,960 --> 00:01:48,320
community have heard about these things

57
00:01:48,320 --> 00:01:49,759
and have started doing research and

58
00:01:49,759 --> 00:01:51,439
started preparing ourselves um as

59
00:01:51,439 --> 00:01:53,119
evident from we have a session at real

60
00:01:53,119 --> 00:01:54,799
world crypto dealing with post quantum

61
00:01:54,799 --> 00:01:56,960
crypto so so we're well on our way to

62
00:01:56,960 --> 00:01:59,280
addressing this particular threat um a

63
00:01:59,280 --> 00:02:01,280
second and possibly more insidious and

64
00:02:01,280 --> 00:02:02,880
more scary threat is some of these

65
00:02:02,880 --> 00:02:04,399
pieces of legislation that are popping

66
00:02:04,399 --> 00:02:06,000
up around the world that are taking aim

67
00:02:06,000 --> 00:02:07,759
at encrypted systems by making them

68
00:02:07,759 --> 00:02:09,199
illegal we had a wonderful talk

69
00:02:09,199 --> 00:02:11,599
yesterday um going over all the various

70
00:02:11,599 --> 00:02:12,879
different types of legislation and

71
00:02:12,879 --> 00:02:14,160
things that are happening to our to our

72
00:02:14,160 --> 00:02:15,599
crypto systems or could potentially

73
00:02:15,599 --> 00:02:17,440
happen to our crypto systems in the

74
00:02:17,440 --> 00:02:19,920
future um and so i likely can piggyback

75
00:02:19,920 --> 00:02:22,319
off of that wonderful talk and and just

76
00:02:22,319 --> 00:02:24,160
say you know we were shown this map

77
00:02:24,160 --> 00:02:25,440
yesterday of all the different places in

78
00:02:25,440 --> 00:02:26,959
the world that are currently passing

79
00:02:26,959 --> 00:02:28,879
legislation aimed at reducing the

80
00:02:28,879 --> 00:02:31,440
accessibility of uh strong encryption

81
00:02:31,440 --> 00:02:32,879
encrypted systems

82
00:02:32,879 --> 00:02:34,640
and just to zoom in on two of these

83
00:02:34,640 --> 00:02:36,400
there's currently laws on the books both

84
00:02:36,400 --> 00:02:38,480
in australia and in india that would

85
00:02:38,480 --> 00:02:40,400
essentially go after end time messaging

86
00:02:40,400 --> 00:02:42,000
antenna encrypted messaging systems and

87
00:02:42,000 --> 00:02:44,080
make them de facto unusable or illegal

88
00:02:44,080 --> 00:02:46,959
within the country um and so there is a

89
00:02:46,959 --> 00:02:49,440
potential future not so far away from us

90
00:02:49,440 --> 00:02:50,959
when all of our lovely crypto that we

91
00:02:50,959 --> 00:02:52,959
spent so uh so much work building just

92
00:02:52,959 --> 00:02:54,319
might not be available to us anymore it

93
00:02:54,319 --> 00:02:56,239
might be criminalized or it might be

94
00:02:56,239 --> 00:02:58,400
suspicious to use this kind of

95
00:02:58,400 --> 00:03:01,440
technology um and there's a question

96
00:03:01,440 --> 00:03:03,360
about what should we do then right once

97
00:03:03,360 --> 00:03:04,720
we no longer have access to all of our

98
00:03:04,720 --> 00:03:06,239
beautiful systems what kind of things

99
00:03:06,239 --> 00:03:08,239
can we do to provide privacy preserving

100
00:03:08,239 --> 00:03:09,760
communications to people around the

101
00:03:09,760 --> 00:03:10,959
world

102
00:03:10,959 --> 00:03:12,800
and steganography should be the solution

103
00:03:12,800 --> 00:03:14,319
to this this question right so for those

104
00:03:14,319 --> 00:03:15,920
who haven't thought about seconography

105
00:03:15,920 --> 00:03:18,080
ever which is you know probably not that

106
00:03:18,080 --> 00:03:19,200
surprising and probably most of the

107
00:03:19,200 --> 00:03:20,959
people in this room um the way that

108
00:03:20,959 --> 00:03:22,640
stego is supposed to work is you have

109
00:03:22,640 --> 00:03:24,000
two users who are communicating with

110
00:03:24,000 --> 00:03:25,440
each other in the presence of some very

111
00:03:25,440 --> 00:03:27,360
powerful sensor and the sensor's able to

112
00:03:27,360 --> 00:03:28,400
read all of the plain text

113
00:03:28,400 --> 00:03:29,599
communications that are going back and

114
00:03:29,599 --> 00:03:31,599
forth between these uh within these two

115
00:03:31,599 --> 00:03:32,480
parties

116
00:03:32,480 --> 00:03:33,680
and they get to decide whether or not a

117
00:03:33,680 --> 00:03:35,440
particular message can go through or not

118
00:03:35,440 --> 00:03:37,200
and potentially block it right and so if

119
00:03:37,200 --> 00:03:38,640
we have a message that's being sent

120
00:03:38,640 --> 00:03:40,000
between two users something like let's

121
00:03:40,000 --> 00:03:41,920
engage in civil disobedience to protest

122
00:03:41,920 --> 00:03:43,920
putin's invasion of ukraine this might

123
00:03:43,920 --> 00:03:45,360
not be a great plain text message to

124
00:03:45,360 --> 00:03:47,200
send in russia right now right um this

125
00:03:47,200 --> 00:03:48,640
this would potentially get you in some

126
00:03:48,640 --> 00:03:50,480
trouble and so the idea is because we

127
00:03:50,480 --> 00:03:52,640
can't send this uh sensitive message

128
00:03:52,640 --> 00:03:54,000
instead the center and receiver are

129
00:03:54,000 --> 00:03:55,280
going to send some kind of mundane

130
00:03:55,280 --> 00:03:56,720
message something that actually the

131
00:03:56,720 --> 00:03:58,159
sensor might be really happy to see

132
00:03:58,159 --> 00:04:00,239
there are people sending right so hey so

133
00:04:00,239 --> 00:04:01,360
i've been texting a hot tech how's your

134
00:04:01,360 --> 00:04:02,480
grandmother doing right this is the kind

135
00:04:02,480 --> 00:04:04,159
of message that we really might want

136
00:04:04,159 --> 00:04:05,519
people to send to each other in order to

137
00:04:05,519 --> 00:04:07,439
our society's function and so the sensor

138
00:04:07,439 --> 00:04:08,720
might look at this and say ah totally

139
00:04:08,720 --> 00:04:10,159
great you should send this message back

140
00:04:10,159 --> 00:04:11,599
and forth um and the idea is that we're

141
00:04:11,599 --> 00:04:13,599
gonna somehow encode this this sensitive

142
00:04:13,599 --> 00:04:15,439
one into the mundane message such that

143
00:04:15,439 --> 00:04:16,720
only the center receiver are able to

144
00:04:16,720 --> 00:04:17,918
kind of extract out the sensitive

145
00:04:17,918 --> 00:04:19,839
message and the sensors uh none the

146
00:04:19,839 --> 00:04:20,798
wiser

147
00:04:20,798 --> 00:04:22,479
um we've studied steganography as a

148
00:04:22,479 --> 00:04:24,240
community for a long long time it

149
00:04:24,240 --> 00:04:26,639
formalized in the 80s lots of amazing

150
00:04:26,639 --> 00:04:28,960
theoretical works on segonography but

151
00:04:28,960 --> 00:04:30,320
this particular kind of seconography

152
00:04:30,320 --> 00:04:31,600
where you get kind of like natural

153
00:04:31,600 --> 00:04:33,440
language communication both has kind of

154
00:04:33,440 --> 00:04:34,960
your input message and as the output

155
00:04:34,960 --> 00:04:37,040
distribution um it doesn't really seem

156
00:04:37,040 --> 00:04:39,680
to be used in practice at all um and the

157
00:04:39,680 --> 00:04:41,919
kind of uh uh secondary that we do have

158
00:04:41,919 --> 00:04:43,440
access to is stuff like format

159
00:04:43,440 --> 00:04:44,960
transforming encryption or all the

160
00:04:44,960 --> 00:04:46,400
wonderful work that's happening um in

161
00:04:46,400 --> 00:04:48,160
the tour projects you get uh folks

162
00:04:48,160 --> 00:04:50,000
around censorship walls but these aren't

163
00:04:50,000 --> 00:04:51,199
natural communications natural

164
00:04:51,199 --> 00:04:52,320
communications right they fall a little

165
00:04:52,320 --> 00:04:54,320
bit short if you're kind of

166
00:04:54,320 --> 00:04:55,600
sending something that looks like

167
00:04:55,600 --> 00:04:57,040
another protocol that's not how people

168
00:04:57,040 --> 00:04:58,800
communicate and so it's not a really the

169
00:04:58,800 --> 00:05:00,240
kind of steganographic system that we

170
00:05:00,240 --> 00:05:02,160
might want in a potential future where

171
00:05:02,160 --> 00:05:04,000
we don't have access to these encrypted

172
00:05:04,000 --> 00:05:05,600
messaging systems

173
00:05:05,600 --> 00:05:06,880
and so the question that i kind of want

174
00:05:06,880 --> 00:05:08,720
to bring to everybody is um do you feel

175
00:05:08,720 --> 00:05:09,919
ready should we feel ready as a

176
00:05:09,919 --> 00:05:11,919
community uh for the potential future

177
00:05:11,919 --> 00:05:13,520
where pseudorandomness itself is

178
00:05:13,520 --> 00:05:15,600
considered to be suspicious right and

179
00:05:15,600 --> 00:05:17,840
this is not such a far-fetched idea um

180
00:05:17,840 --> 00:05:19,360
we're kind of seeing various different

181
00:05:19,360 --> 00:05:20,560
versions of this popping up around the

182
00:05:20,560 --> 00:05:21,680
world and it's something that we have to

183
00:05:21,680 --> 00:05:23,840
prepare for now before it's too late

184
00:05:23,840 --> 00:05:25,680
right before suddenly our everything

185
00:05:25,680 --> 00:05:27,360
that we're using is is criminalized or

186
00:05:27,360 --> 00:05:29,600
suspicious or something like that

187
00:05:29,600 --> 00:05:32,320
um and so uh to kind of show you how

188
00:05:32,320 --> 00:05:33,680
we're doing in terms of studying

189
00:05:33,680 --> 00:05:36,400
steganography here's a graph of the just

190
00:05:36,400 --> 00:05:37,840
pulling uh you know keyword searching

191
00:05:37,840 --> 00:05:39,520
out of crypto bib the publications for

192
00:05:39,520 --> 00:05:41,280
steganography and then post quantum

193
00:05:41,280 --> 00:05:42,960
crypto um you can see that once we

194
00:05:42,960 --> 00:05:44,320
figured out that post quantum things

195
00:05:44,320 --> 00:05:46,240
were necessary we as a community really

196
00:05:46,240 --> 00:05:47,919
mobilized and has done a fantastic

197
00:05:47,919 --> 00:05:49,520
amount of work um we have a conference

198
00:05:49,520 --> 00:05:52,000
right we have a nist uh standardization

199
00:05:52,000 --> 00:05:53,840
process steganography on the other hand

200
00:05:53,840 --> 00:05:55,680
has kind of just sat around and it's

201
00:05:55,680 --> 00:05:57,120
kind of decayed down to basically

202
00:05:57,120 --> 00:05:59,199
nothing um over time and this is this is

203
00:05:59,199 --> 00:06:00,960
a real real problem we're not addressing

204
00:06:00,960 --> 00:06:02,240
one of the major threats that's going to

205
00:06:02,240 --> 00:06:03,759
be facing our communities in the

206
00:06:03,759 --> 00:06:05,360
potential future

207
00:06:05,360 --> 00:06:06,560
i mean you might think well we're not

208
00:06:06,560 --> 00:06:08,319
doing this research maybe somebody else

209
00:06:08,319 --> 00:06:10,080
is picking up the slack for us um and

210
00:06:10,080 --> 00:06:11,520
the good news is yes people are indeed

211
00:06:11,520 --> 00:06:13,280
picking up the slack for us and this is

212
00:06:13,280 --> 00:06:15,520
uh pulled off of dblp for all the

213
00:06:15,520 --> 00:06:16,880
publications using the the word

214
00:06:16,880 --> 00:06:18,960
steganography most of these publications

215
00:06:18,960 --> 00:06:20,160
are coming out of machine learning or

216
00:06:20,160 --> 00:06:22,240
computer vision communities

217
00:06:22,240 --> 00:06:23,440
and and this is great they're they're

218
00:06:23,440 --> 00:06:24,960
doing lots of work that we as a

219
00:06:24,960 --> 00:06:26,560
community are not doing um the

220
00:06:26,560 --> 00:06:28,160
unfortunate bad news is they're not

221
00:06:28,160 --> 00:06:30,319
particularly good at provable security

222
00:06:30,319 --> 00:06:32,160
and so at the same time there's tons and

223
00:06:32,160 --> 00:06:33,680
tons of papers about stake analysis

224
00:06:33,680 --> 00:06:35,199
breaking the exact same constructions

225
00:06:35,199 --> 00:06:37,360
that they're making um and so this is

226
00:06:37,360 --> 00:06:38,800
concerning right we kind of outsource

227
00:06:38,800 --> 00:06:40,080
this work on steganography to

228
00:06:40,080 --> 00:06:41,680
communities that are not used to working

229
00:06:41,680 --> 00:06:42,880
with the same kinds of primitives not

230
00:06:42,880 --> 00:06:44,639
used to proving security and as a result

231
00:06:44,639 --> 00:06:46,479
we kind of had a giant mess on our hands

232
00:06:46,479 --> 00:06:48,479
and secondography is for the most part a

233
00:06:48,479 --> 00:06:50,240
little bit of a joke

234
00:06:50,240 --> 00:06:51,039
um

235
00:06:51,039 --> 00:06:52,880
good so so in order to kind of convince

236
00:06:52,880 --> 00:06:53,759
you that there's actually something

237
00:06:53,759 --> 00:06:55,199
interesting to work on here not just you

238
00:06:55,199 --> 00:06:56,319
know maybe ethically or morally

239
00:06:56,319 --> 00:06:58,319
important um i'll give you a quick

240
00:06:58,319 --> 00:07:00,080
refresher or maybe the first time you've

241
00:07:00,080 --> 00:07:01,360
ever seen a construction of universal

242
00:07:01,360 --> 00:07:03,360
psychography and here's how these

243
00:07:03,360 --> 00:07:05,280
generally work this is a kind of a riff

244
00:07:05,280 --> 00:07:08,319
on uh nick hopper's work from 2004.

245
00:07:08,319 --> 00:07:10,000
so the first step if you want to use

246
00:07:10,000 --> 00:07:11,599
universal seconography is that you pick

247
00:07:11,599 --> 00:07:13,039
the cover text channel the communication

248
00:07:13,039 --> 00:07:14,720
channel that you would like to to kind

249
00:07:14,720 --> 00:07:16,880
of blend in with um for example you

250
00:07:16,880 --> 00:07:18,240
might choose bible verses if this is

251
00:07:18,240 --> 00:07:20,160
considered innocuous by a sensor or

252
00:07:20,160 --> 00:07:21,199
maybe you want something that's a little

253
00:07:21,199 --> 00:07:23,199
bit more politically uh in vogue right

254
00:07:23,199 --> 00:07:24,400
now and you want to send pro putin

255
00:07:24,400 --> 00:07:26,319
posters back and forth a sensor surely

256
00:07:26,319 --> 00:07:28,080
would not block some kind of these kind

257
00:07:28,080 --> 00:07:29,199
of messages

258
00:07:29,199 --> 00:07:30,479
these are a little bit hard to work with

259
00:07:30,479 --> 00:07:32,000
in slides and so instead i'm just going

260
00:07:32,000 --> 00:07:33,759
to use emoji and just pretend the

261
00:07:33,759 --> 00:07:34,960
communication channel that we're looking

262
00:07:34,960 --> 00:07:36,880
for is a uniform distribution over all

263
00:07:36,880 --> 00:07:38,639
the emoji

264
00:07:38,639 --> 00:07:39,919
right so now that we've picked our

265
00:07:39,919 --> 00:07:41,360
communication channel what do we do we

266
00:07:41,360 --> 00:07:43,039
start to encode our message

267
00:07:43,039 --> 00:07:44,639
um so we're going to take our our plain

268
00:07:44,639 --> 00:07:47,039
text we're going to represent it as bits

269
00:07:47,039 --> 00:07:48,800
um and then we're going to encrypt it

270
00:07:48,800 --> 00:07:50,560
using a pseudorandom cipher

271
00:07:50,560 --> 00:07:52,080
the result here's right we get each bit

272
00:07:52,080 --> 00:07:53,680
is you know probability one half one or

273
00:07:53,680 --> 00:07:55,919
zero and now we use a rejection sampling

274
00:07:55,919 --> 00:07:57,520
technique to basically pick out an

275
00:07:57,520 --> 00:07:59,199
appropriate emoji that encodes each bit

276
00:07:59,199 --> 00:08:01,039
of the cipher text right so i'm going to

277
00:08:01,039 --> 00:08:03,520
sample this dragon i hash my dragon i

278
00:08:03,520 --> 00:08:04,639
mean this hash function is going to have

279
00:08:04,639 --> 00:08:06,240
a very special property it's going to be

280
00:08:06,240 --> 00:08:07,919
what's called a perfectly unbiased hash

281
00:08:07,919 --> 00:08:09,360
function which means that it maps

282
00:08:09,360 --> 00:08:11,039
exactly half of the emoji to zero and

283
00:08:11,039 --> 00:08:13,039
half of the emoji to one right so i've

284
00:08:13,039 --> 00:08:14,879
hash my dragon i find that the output is

285
00:08:14,879 --> 00:08:16,720
one great um and now i compare it to the

286
00:08:16,720 --> 00:08:18,800
first bit of my ciphertext and i say yes

287
00:08:18,800 --> 00:08:20,560
one does in fact equal one so this

288
00:08:20,560 --> 00:08:22,639
dragon effectively encodes the first bit

289
00:08:22,639 --> 00:08:24,479
of my ciphertext and i can add it to the

290
00:08:24,479 --> 00:08:25,680
cover text

291
00:08:25,680 --> 00:08:27,199
right now i'm ready to move on to the

292
00:08:27,199 --> 00:08:29,039
second bit of my cipher text i'm going

293
00:08:29,039 --> 00:08:30,639
to just do is more sampling right so i

294
00:08:30,639 --> 00:08:32,080
sample something new here i've got my

295
00:08:32,080 --> 00:08:33,599
avocado i hash my avocado and i got a

296
00:08:33,599 --> 00:08:35,519
zero right but i look at my message i

297
00:08:35,519 --> 00:08:37,279
say well zero does not equal one so i'm

298
00:08:37,279 --> 00:08:38,240
going to do the rejection part of

299
00:08:38,240 --> 00:08:39,599
rejection sampling throughout this

300
00:08:39,599 --> 00:08:42,000
avocado and just try again right until i

301
00:08:42,000 --> 00:08:43,679
get an exploding hand emoji that encodes

302
00:08:43,679 --> 00:08:45,200
this correctly and i just keep on doing

303
00:08:45,200 --> 00:08:47,279
this until i've encoded the entire uh

304
00:08:47,279 --> 00:08:48,880
message right and it should be

305
00:08:48,880 --> 00:08:51,040
relatively clear why there's a kind of a

306
00:08:51,040 --> 00:08:52,959
exact same distributional match between

307
00:08:52,959 --> 00:08:55,600
the cover text and the emojis right each

308
00:08:55,600 --> 00:08:58,320
uh each bit was random zero one and then

309
00:08:58,320 --> 00:08:59,600
all i did was i sampled something from

310
00:08:59,600 --> 00:09:01,839
that random subset of the space right so

311
00:09:01,839 --> 00:09:03,680
the distribution here is exactly the

312
00:09:03,680 --> 00:09:05,040
same

313
00:09:05,040 --> 00:09:06,720
how do you decode well in order to

314
00:09:06,720 --> 00:09:08,240
decode we kind of leverage the fact that

315
00:09:08,240 --> 00:09:10,080
this hash function is public information

316
00:09:10,080 --> 00:09:11,760
right so the receiver can just hash each

317
00:09:11,760 --> 00:09:14,000
emoji get out the ciphertext and decrypt

318
00:09:14,000 --> 00:09:15,279
whereas the sensor could hash all these

319
00:09:15,279 --> 00:09:16,320
down but they'll just get you know

320
00:09:16,320 --> 00:09:17,440
random ones and zeros that they don't

321
00:09:17,440 --> 00:09:18,880
know what to do with

322
00:09:18,880 --> 00:09:20,240
good

323
00:09:20,240 --> 00:09:22,080
so it seems like you know we have this

324
00:09:22,080 --> 00:09:23,760
beautiful construction um it works for

325
00:09:23,760 --> 00:09:24,880
any distribution you should be able to

326
00:09:24,880 --> 00:09:26,320
use it for whatever you want but then

327
00:09:26,320 --> 00:09:27,839
when you try to use it for natural

328
00:09:27,839 --> 00:09:30,800
language like uh encrypt steganography

329
00:09:30,800 --> 00:09:32,399
things start to be a little bit strange

330
00:09:32,399 --> 00:09:33,600
right so the first thing that we should

331
00:09:33,600 --> 00:09:34,959
do is replace this distribution with

332
00:09:34,959 --> 00:09:37,040
something like natural human language

333
00:09:37,040 --> 00:09:38,399
right and then once we kind of do this

334
00:09:38,399 --> 00:09:40,320
we should immediately get cover texts

335
00:09:40,320 --> 00:09:42,000
that are this kind of natural language

336
00:09:42,000 --> 00:09:44,320
thing um turns out when you try to do

337
00:09:44,320 --> 00:09:46,399
this things break um and i'll give you

338
00:09:46,399 --> 00:09:48,399
kind of some some ideas that we recently

339
00:09:48,399 --> 00:09:50,640
kind of unpacked and worked through on a

340
00:09:50,640 --> 00:09:52,560
ccs paper this past year

341
00:09:52,560 --> 00:09:54,000
in particular we looked at two major

342
00:09:54,000 --> 00:09:56,160
barriers to deploying a steganography in

343
00:09:56,160 --> 00:09:58,160
practice the first is the existence of

344
00:09:58,160 --> 00:10:00,160
appropriate samples for natural language

345
00:10:00,160 --> 00:10:01,920
type distributions and the second is

346
00:10:01,920 --> 00:10:03,519
that a lot of these theoretical

347
00:10:03,519 --> 00:10:04,959
constructions from the literature have

348
00:10:04,959 --> 00:10:06,399
minimum entropy requirements that just

349
00:10:06,399 --> 00:10:07,760
simply don't match how humans

350
00:10:07,760 --> 00:10:09,279
communicate we just don't have that much

351
00:10:09,279 --> 00:10:10,560
entropy in the way we speak or the way

352
00:10:10,560 --> 00:10:11,920
we write

353
00:10:11,920 --> 00:10:14,000
and so we set out trying to overcome and

354
00:10:14,000 --> 00:10:16,079
actually design a steganographic system

355
00:10:16,079 --> 00:10:17,519
that kind of addresses each of these at

356
00:10:17,519 --> 00:10:19,600
the same time um and the first step was

357
00:10:19,600 --> 00:10:20,720
looking at this appropriate sampler

358
00:10:20,720 --> 00:10:22,480
problem so how do you sample from

359
00:10:22,480 --> 00:10:24,560
natural human communication well it's a

360
00:10:24,560 --> 00:10:25,839
little bit weird because natural human

361
00:10:25,839 --> 00:10:27,279
communication is not like a well-defined

362
00:10:27,279 --> 00:10:28,959
distribution that it continually updates

363
00:10:28,959 --> 00:10:30,240
over time you couldn't even write it

364
00:10:30,240 --> 00:10:31,920
down if you wanted to and so in some

365
00:10:31,920 --> 00:10:32,959
sense the best thing that you can

366
00:10:32,959 --> 00:10:34,560
possibly do is approximate that

367
00:10:34,560 --> 00:10:36,480
distribution and so we just found the

368
00:10:36,480 --> 00:10:38,399
best approximation tool that we have

369
00:10:38,399 --> 00:10:40,000
right now the best approximation tool

370
00:10:40,000 --> 00:10:41,839
that we have are these generative models

371
00:10:41,839 --> 00:10:42,800
right these are machine learning

372
00:10:42,800 --> 00:10:44,320
techniques that what you do is you feed

373
00:10:44,320 --> 00:10:46,079
them in some kind of context and they'll

374
00:10:46,079 --> 00:10:47,440
spit out an explicit probability

375
00:10:47,440 --> 00:10:49,200
distribution over the next token or word

376
00:10:49,200 --> 00:10:51,120
or whatever it is that follows that

377
00:10:51,120 --> 00:10:53,360
context right this is a reasonably

378
00:10:53,360 --> 00:10:55,680
efficient way uh to sample from natural

379
00:10:55,680 --> 00:10:57,360
human language given that there's some

380
00:10:57,360 --> 00:10:58,880
approximation error here that's just

381
00:10:58,880 --> 00:11:00,800
introduced by the model itself right so

382
00:11:00,800 --> 00:11:02,240
when we start to use these things as

383
00:11:02,240 --> 00:11:04,640
steganographic samplers what we get is

384
00:11:04,640 --> 00:11:06,720
provable security of our cover text with

385
00:11:06,720 --> 00:11:08,399
respect to the output of a model but

386
00:11:08,399 --> 00:11:10,560
then we get some kind of error between

387
00:11:10,560 --> 00:11:12,160
the model output and real natural human

388
00:11:12,160 --> 00:11:13,839
communication but the nice thing is that

389
00:11:13,839 --> 00:11:15,200
you know this is the best we really can

390
00:11:15,200 --> 00:11:16,880
do as our approximations get better and

391
00:11:16,880 --> 00:11:18,320
better and better we can naturally get

392
00:11:18,320 --> 00:11:21,040
better and better steganography

393
00:11:21,040 --> 00:11:23,120
good so we've replaced our sampler right

394
00:11:23,120 --> 00:11:25,519
we're now in much better shape

395
00:11:25,519 --> 00:11:26,800
it turns out if you try to implement

396
00:11:26,800 --> 00:11:28,640
this system as we did you get a 100

397
00:11:28,640 --> 00:11:31,680
failure rate um so we clearly haven't

398
00:11:31,680 --> 00:11:33,440
solved everything yet and the source of

399
00:11:33,440 --> 00:11:35,279
this problem is actually this perfectly

400
00:11:35,279 --> 00:11:36,800
unbiased hash function this goes to the

401
00:11:36,800 --> 00:11:38,640
entropy in the system right natural

402
00:11:38,640 --> 00:11:40,320
human communication has moments where

403
00:11:40,320 --> 00:11:42,320
it's not possible to build unbiased hash

404
00:11:42,320 --> 00:11:44,079
functions so i'll give you an example

405
00:11:44,079 --> 00:11:45,920
right uh for context here we have the

406
00:11:45,920 --> 00:11:47,200
largest carnivore of the cretaceous

407
00:11:47,200 --> 00:11:49,839
period was the tyrannosaurus so at least

408
00:11:49,839 --> 00:11:50,800
native english speakers will

409
00:11:50,800 --> 00:11:52,560
automatically auto finish this in their

410
00:11:52,560 --> 00:11:55,040
mind to say rex right and a generative

411
00:11:55,040 --> 00:11:56,639
model is approximating in this case

412
00:11:56,639 --> 00:11:58,160
english language communication and so it

413
00:11:58,160 --> 00:11:59,680
should output some distribution which is

414
00:11:59,680 --> 00:12:01,600
heavily heavily weighted towards rex

415
00:12:01,600 --> 00:12:02,880
along with maybe some other dinosaurs

416
00:12:02,880 --> 00:12:04,639
that it learned along the way

417
00:12:04,639 --> 00:12:06,800
right um there just is no perfectly

418
00:12:06,800 --> 00:12:07,839
unbiased hash function over this

419
00:12:07,839 --> 00:12:09,519
distribution right it's going to map 98

420
00:12:09,519 --> 00:12:10,720
percent of the probability distribution

421
00:12:10,720 --> 00:12:12,639
to a zero or to one you can't get

422
00:12:12,639 --> 00:12:15,040
something that's 50 50. right um there

423
00:12:15,040 --> 00:12:16,560
are kind of uh techniques that are

424
00:12:16,560 --> 00:12:17,920
explored in the theoretical literature

425
00:12:17,920 --> 00:12:19,600
to overcome this problem you kind of can

426
00:12:19,600 --> 00:12:20,880
replace these unbiased hash functions

427
00:12:20,880 --> 00:12:22,000
with

428
00:12:22,000 --> 00:12:23,760
cryptographic hash functions um or you

429
00:12:23,760 --> 00:12:25,279
can kind of bootstrap the entire system

430
00:12:25,279 --> 00:12:27,120
to get more and more entropy uh we tried

431
00:12:27,120 --> 00:12:29,200
implementing those as well um turns out

432
00:12:29,200 --> 00:12:31,120
they do work you don't get 100 failure

433
00:12:31,120 --> 00:12:32,800
but it takes about 10 minutes to encode

434
00:12:32,800 --> 00:12:35,680
16 bytes of information um not exactly

435
00:12:35,680 --> 00:12:36,720
the high throughput channel that we're

436
00:12:36,720 --> 00:12:38,240
looking for that would allow people to

437
00:12:38,240 --> 00:12:39,519
actually communicate in these in these

438
00:12:39,519 --> 00:12:40,959
censored regimes

439
00:12:40,959 --> 00:12:42,639
and so what we did is we set out to try

440
00:12:42,639 --> 00:12:45,120
and uh to try and uh design a new

441
00:12:45,120 --> 00:12:46,560
steganographic system that would both be

442
00:12:46,560 --> 00:12:48,560
efficient um and actually you know be

443
00:12:48,560 --> 00:12:49,920
good enough to work

444
00:12:49,920 --> 00:12:52,399
so we moved our construction meteor um

445
00:12:52,399 --> 00:12:53,920
and here's the basic idea behind meteor

446
00:12:53,920 --> 00:12:55,519
and i'll give you a quick idea of how

447
00:12:55,519 --> 00:12:57,680
the construction works as well um so

448
00:12:57,680 --> 00:12:58,639
like the first thing you do is the

449
00:12:58,639 --> 00:13:00,160
encoder feeds in this context into the

450
00:13:00,160 --> 00:13:01,519
model and i'll put some probability

451
00:13:01,519 --> 00:13:03,120
distribution and then instead of doing

452
00:13:03,120 --> 00:13:04,560
this rejection sampling thing what i'm

453
00:13:04,560 --> 00:13:05,839
going to do is we're going to take the

454
00:13:05,839 --> 00:13:07,279
encrypted bits of the message remember

455
00:13:07,279 --> 00:13:09,040
this is a pseudo-random value and just

456
00:13:09,040 --> 00:13:11,200
use it as an actual number to sample

457
00:13:11,200 --> 00:13:12,959
into the distribution directly right so

458
00:13:12,959 --> 00:13:14,480
in this case i've sampled the word the

459
00:13:14,480 --> 00:13:16,000
out of the distribution

460
00:13:16,000 --> 00:13:17,519
right on the receiver side how are they

461
00:13:17,519 --> 00:13:19,040
going to decode well what they can do is

462
00:13:19,040 --> 00:13:20,880
they feed the exact same context into

463
00:13:20,880 --> 00:13:22,639
the model to output you know the same

464
00:13:22,639 --> 00:13:24,560
distribution and now what they're going

465
00:13:24,560 --> 00:13:25,920
to do is kind of use the information

466
00:13:25,920 --> 00:13:27,760
that they received on the wire this word

467
00:13:27,760 --> 00:13:29,760
the to kind of infer something about the

468
00:13:29,760 --> 00:13:31,519
initial the bits that were used to

469
00:13:31,519 --> 00:13:33,360
sample this value right this is the high

470
00:13:33,360 --> 00:13:35,120
level intuition i'll give you an example

471
00:13:35,120 --> 00:13:37,519
of this working in practice

472
00:13:37,519 --> 00:13:39,600
okay so so here's my plain text message

473
00:13:39,600 --> 00:13:40,880
now i'm just represented as bits because

474
00:13:40,880 --> 00:13:42,880
a little bit easier to work with here um

475
00:13:42,880 --> 00:13:44,240
what we're going to do first is encrypt

476
00:13:44,240 --> 00:13:45,839
this message using kind of a one-time

477
00:13:45,839 --> 00:13:47,680
pad we're going to pull it out of a prg

478
00:13:47,680 --> 00:13:48,720
and this construction is going to be

479
00:13:48,720 --> 00:13:50,240
stateful with uh symmetric key so

480
00:13:50,240 --> 00:13:51,199
they're each going to have the same key

481
00:13:51,199 --> 00:13:54,399
and pull data out of their prg so we're

482
00:13:54,399 --> 00:13:55,519
going to xor these things together now

483
00:13:55,519 --> 00:13:57,199
we've got a random value and we're going

484
00:13:57,199 --> 00:13:58,720
to use this random value to sample into

485
00:13:58,720 --> 00:13:59,920
the distribution

486
00:13:59,920 --> 00:14:02,240
right so here's my my context my model i

487
00:14:02,240 --> 00:14:03,440
feed these things into outputs here's

488
00:14:03,440 --> 00:14:04,880
some distribution that you can sample

489
00:14:04,880 --> 00:14:05,760
from

490
00:14:05,760 --> 00:14:07,760
and i've got just a number now as a

491
00:14:07,760 --> 00:14:08,800
random value and this just points

492
00:14:08,800 --> 00:14:10,079
somewhere in the distribution i say ah

493
00:14:10,079 --> 00:14:11,360
yes the thing i'm going to use is this

494
00:14:11,360 --> 00:14:12,880
the i'm going to add that to my cover

495
00:14:12,880 --> 00:14:14,000
text

496
00:14:14,000 --> 00:14:16,240
right now on the receiver side how do

497
00:14:16,240 --> 00:14:17,680
they actually go about decoding anything

498
00:14:17,680 --> 00:14:18,880
right they need to learn something about

499
00:14:18,880 --> 00:14:20,639
the randomness that was used to sample

500
00:14:20,639 --> 00:14:21,519
so what they're going to do is they're

501
00:14:21,519 --> 00:14:22,399
going to kind of look at the

502
00:14:22,399 --> 00:14:23,600
distribution and say okay what's the

503
00:14:23,600 --> 00:14:25,600
lowest bit values that we could have

504
00:14:25,600 --> 00:14:26,560
been used to sample they're on the

505
00:14:26,560 --> 00:14:28,079
highest bit values that could be used as

506
00:14:28,079 --> 00:14:28,880
samples

507
00:14:28,880 --> 00:14:30,959
oh and look they share a prefix right so

508
00:14:30,959 --> 00:14:32,639
we know immediately that the first two

509
00:14:32,639 --> 00:14:34,399
bits of the random value must have been

510
00:14:34,399 --> 00:14:36,000
zero one in order for you actually to

511
00:14:36,000 --> 00:14:38,560
sample the right and then the receiver

512
00:14:38,560 --> 00:14:40,639
can then use the the mask sorry unmask

513
00:14:40,639 --> 00:14:42,480
the randomness to retrieve the message

514
00:14:42,480 --> 00:14:44,639
uh two bits of the message

515
00:14:44,639 --> 00:14:46,240
right this is a very natural approach a

516
00:14:46,240 --> 00:14:47,680
very simple approach and it has actually

517
00:14:47,680 --> 00:14:50,240
relatively uh high uh high performance

518
00:14:50,240 --> 00:14:51,600
um so let's just do this one more time

519
00:14:51,600 --> 00:14:52,720
to make sure you understand so we add

520
00:14:52,720 --> 00:14:54,959
the to our context we generate uh some

521
00:14:54,959 --> 00:14:57,199
new random value at a new distribution

522
00:14:57,199 --> 00:14:59,040
right this points to some other place in

523
00:14:59,040 --> 00:15:00,160
the distribution in this case the word

524
00:15:00,160 --> 00:15:02,399
yucatan we add that to our cover text

525
00:15:02,399 --> 00:15:03,680
and we do the same process right where

526
00:15:03,680 --> 00:15:05,839
we find the lower and upper bit values

527
00:15:05,839 --> 00:15:07,360
that would correspond to this word

528
00:15:07,360 --> 00:15:09,199
yucatan and now we see that they share

529
00:15:09,199 --> 00:15:11,279
only one bit of prefix and receiver will

530
00:15:11,279 --> 00:15:13,120
learn exactly one bit of the random

531
00:15:13,120 --> 00:15:14,800
value and unmask that to

532
00:15:14,800 --> 00:15:16,639
recover the plain text but you might

533
00:15:16,639 --> 00:15:17,839
notice one thing that's really nice

534
00:15:17,839 --> 00:15:20,000
about this if there's very low uh low

535
00:15:20,000 --> 00:15:21,600
entropy in the channel for a moment well

536
00:15:21,600 --> 00:15:23,440
we just don't send any bits right we try

537
00:15:23,440 --> 00:15:25,279
and nothing gets recovered but if those

538
00:15:25,279 --> 00:15:26,399
moments when there's actually very high

539
00:15:26,399 --> 00:15:28,160
entropy we can actually asymptotically

540
00:15:28,160 --> 00:15:29,440
show that we get optimal in an

541
00:15:29,440 --> 00:15:31,519
asymptotic sense performance right so we

542
00:15:31,519 --> 00:15:33,040
can transmit bits proportional to the

543
00:15:33,040 --> 00:15:35,120
entropy in the channel

544
00:15:35,120 --> 00:15:37,279
um so here's my my demo that's working

545
00:15:37,279 --> 00:15:38,639
to get an idea in your brain of how this

546
00:15:38,639 --> 00:15:40,560
could potentially go we instantiated

547
00:15:40,560 --> 00:15:42,079
meteor the exact same protocol i just

548
00:15:42,079 --> 00:15:44,639
showed you before using gpt2 as our

549
00:15:44,639 --> 00:15:46,959
model um and what we did is we fed in

550
00:15:46,959 --> 00:15:48,320
our plain text message right crypto

551
00:15:48,320 --> 00:15:50,480
means cryptography um and now we need to

552
00:15:50,480 --> 00:15:52,639
find some cover text sorry some some

553
00:15:52,639 --> 00:15:54,480
context to feed into the model to make

554
00:15:54,480 --> 00:15:55,759
the message kind of be relevant to

555
00:15:55,759 --> 00:15:56,800
wherever we're trying to hide our

556
00:15:56,800 --> 00:15:58,959
message right so we took something uh

557
00:15:58,959 --> 00:16:00,720
you know just from twitter uh which is a

558
00:16:00,720 --> 00:16:03,120
spicy take but not necessarily one that

559
00:16:03,120 --> 00:16:04,880
anybody's gonna be too worried about or

560
00:16:04,880 --> 00:16:07,040
get flagged for censorship right and so

561
00:16:07,040 --> 00:16:09,440
all we did is we pulled out uh some text

562
00:16:09,440 --> 00:16:11,600
here we fed it into the model and what

563
00:16:11,600 --> 00:16:12,959
happens is that the model immediately

564
00:16:12,959 --> 00:16:15,680
spit out some kind of uh message for us

565
00:16:15,680 --> 00:16:17,519
to then post as a response to this

566
00:16:17,519 --> 00:16:19,519
twitter message right so here's the

567
00:16:19,519 --> 00:16:22,079
output of gpt2 seated on some stuff

568
00:16:22,079 --> 00:16:24,399
about tabasco sauce um i know this

569
00:16:24,399 --> 00:16:26,560
spring that the process has gone fairly

570
00:16:26,560 --> 00:16:27,920
smoothly but i think that hot sauce

571
00:16:27,920 --> 00:16:29,920
space needs to be more transparent less

572
00:16:29,920 --> 00:16:31,440
afraid to be underestimated by

573
00:16:31,440 --> 00:16:33,600
restaurants i'd really i'd rather have

574
00:16:33,600 --> 00:16:36,240
really anything else so you know gpt2

575
00:16:36,240 --> 00:16:39,279
has some hot takes of its own i guess um

576
00:16:39,279 --> 00:16:40,880
and what's nice is that this is not you

577
00:16:40,880 --> 00:16:42,480
look at it and you notice well this

578
00:16:42,480 --> 00:16:44,000
doesn't quite look like natural human

579
00:16:44,000 --> 00:16:45,680
communication but it's actually not that

580
00:16:45,680 --> 00:16:47,920
bad i'm just using gpt2 which is now

581
00:16:47,920 --> 00:16:50,160
kind of three models ago i mean our

582
00:16:50,160 --> 00:16:51,519
modern performance is getting better and

583
00:16:51,519 --> 00:16:53,199
better right so our steganographic kind

584
00:16:53,199 --> 00:16:54,639
of approximation of real communication

585
00:16:54,639 --> 00:16:56,399
is getting better and better

586
00:16:56,399 --> 00:16:57,839
um some things that are nice about

587
00:16:57,839 --> 00:16:59,680
meteor uh you can actually run it and it

588
00:16:59,680 --> 00:17:01,680
runs in in real amounts of time um so

589
00:17:01,680 --> 00:17:03,600
you get uh it takes about 0.1 seconds to

590
00:17:03,600 --> 00:17:05,039
encode an ascii character if you have

591
00:17:05,039 --> 00:17:07,520
access to a gpu you get slowdowns on cpu

592
00:17:07,520 --> 00:17:08,799
um and on mobile because you don't have

593
00:17:08,799 --> 00:17:10,559
access to the gpu to update your model

594
00:17:10,559 --> 00:17:12,160
efficiently um we get provable and

595
00:17:12,160 --> 00:17:13,839
distinguishability from the model output

596
00:17:13,839 --> 00:17:15,839
um and additionally we also have a demo

597
00:17:15,839 --> 00:17:17,599
that's put online so you can go and play

598
00:17:17,599 --> 00:17:18,400
with this and you don't have to worry

599
00:17:18,400 --> 00:17:19,760
about having your own gpu you can just

600
00:17:19,760 --> 00:17:21,599
use google's gpus to play around with

601
00:17:21,599 --> 00:17:23,119
the model

602
00:17:23,119 --> 00:17:25,280
um and just to kind of leave us with

603
00:17:25,280 --> 00:17:26,720
some future work directions i think

604
00:17:26,720 --> 00:17:28,079
there's a lot of interesting things left

605
00:17:28,079 --> 00:17:29,120
to be done in this

606
00:17:29,120 --> 00:17:30,799
stage in a graphic world right meteor is

607
00:17:30,799 --> 00:17:32,240
one particular instantiation one

608
00:17:32,240 --> 00:17:33,760
approach that we took it's not the only

609
00:17:33,760 --> 00:17:35,760
thing that you can do um some some ideas

610
00:17:35,760 --> 00:17:37,120
for things that people could look at in

611
00:17:37,120 --> 00:17:38,160
the future i think would be very

612
00:17:38,160 --> 00:17:39,760
valuable um is just increasing

613
00:17:39,760 --> 00:17:41,440
efficiency um starting to look more

614
00:17:41,440 --> 00:17:42,720
systemsy at these things how do we make

615
00:17:42,720 --> 00:17:44,160
them really performance enough to run on

616
00:17:44,160 --> 00:17:46,799
people's phones on messaging systems um

617
00:17:46,799 --> 00:17:48,400
also we've done all these good things in

618
00:17:48,400 --> 00:17:50,000
end-to-end security like uh forward

619
00:17:50,000 --> 00:17:52,400
secrecy and post-compromise security um

620
00:17:52,400 --> 00:17:53,600
it'd be nice to kind of port those

621
00:17:53,600 --> 00:17:55,440
lessons over to the steganographic space

622
00:17:55,440 --> 00:17:57,200
as well and then finally it'd be nice to

623
00:17:57,200 --> 00:17:58,480
consider actually what real world

624
00:17:58,480 --> 00:18:00,160
deployment would look like there's a lot

625
00:18:00,160 --> 00:18:01,440
to do in this space and i think it's

626
00:18:01,440 --> 00:18:02,720
really exciting

627
00:18:02,720 --> 00:18:04,080
and so with that thank you very much for

628
00:18:04,080 --> 00:18:05,760
your attention there's a link to our

629
00:18:05,760 --> 00:18:07,360
blog and demo if you're interested in

630
00:18:07,360 --> 00:18:10,840
playing with the model

631
00:18:17,440 --> 00:18:18,400
nigel

632
00:18:18,400 --> 00:18:20,559
uh yeah cool talk um

633
00:18:20,559 --> 00:18:22,240
so you the whole thing you have to have

634
00:18:22,240 --> 00:18:25,039
this key key prf thing so both sides

635
00:18:25,039 --> 00:18:26,480
gotta have a key yeah

636
00:18:26,480 --> 00:18:29,520
so how can you stag the key agreement

637
00:18:29,520 --> 00:18:30,400
i'm sorry

638
00:18:30,400 --> 00:18:31,919
how can you do how can you do the key

639
00:18:31,919 --> 00:18:33,760
agreement estate the key agreement yeah

640
00:18:33,760 --> 00:18:35,919
yeah um it's it's a great question we've

641
00:18:35,919 --> 00:18:38,400
looked at doing uh public key versions

642
00:18:38,400 --> 00:18:39,600
as well but that doesn't really solve

643
00:18:39,600 --> 00:18:40,480
the problem because how do you get the

644
00:18:40,480 --> 00:18:43,039
public key um uh you know great future

645
00:18:43,039 --> 00:18:45,350
work we didn't solve that problem

646
00:18:45,350 --> 00:18:47,600
[Music]

647
00:18:47,600 --> 00:18:51,120
yeah i 100 believe this belongs in the

648
00:18:51,120 --> 00:18:52,960
field of cryptography thank you very

649
00:18:52,960 --> 00:18:54,960
much for your really great talk and

650
00:18:54,960 --> 00:18:56,559
really important work

651
00:18:56,559 --> 00:18:59,600
um quick question though um

652
00:18:59,600 --> 00:19:01,679
so one thing that stood out to me during

653
00:19:01,679 --> 00:19:04,400
the talk is this um so you're you're

654
00:19:04,400 --> 00:19:07,360
really working very hard to make these

655
00:19:07,360 --> 00:19:10,720
uh cover text look like natural language

656
00:19:10,720 --> 00:19:13,280
i mean do we have to work that hard so i

657
00:19:13,280 --> 00:19:14,559
mean

658
00:19:14,559 --> 00:19:18,320
it's so i mean one advantage that now

659
00:19:18,320 --> 00:19:20,480
normal citizens have is that there's a

660
00:19:20,480 --> 00:19:21,679
lot of us

661
00:19:21,679 --> 00:19:22,559
so

662
00:19:22,559 --> 00:19:24,880
there's a big haystack and if you're

663
00:19:24,880 --> 00:19:27,919
forcing them to the sensor to look for a

664
00:19:27,919 --> 00:19:29,280
a needle

665
00:19:29,280 --> 00:19:30,480
um

666
00:19:30,480 --> 00:19:32,160
yeah what am i trying to say i think you

667
00:19:32,160 --> 00:19:33,919
understand yeah i do yeah no it's a

668
00:19:33,919 --> 00:19:35,360
great question right um we're clearly

669
00:19:35,360 --> 00:19:37,280
shooting for a higher level of security

670
00:19:37,280 --> 00:19:39,600
than might be strictly necessary i will

671
00:19:39,600 --> 00:19:41,440
say though that um generally when you

672
00:19:41,440 --> 00:19:42,559
want to deploy secondography it's

673
00:19:42,559 --> 00:19:44,320
because of the high-risk environment and

674
00:19:44,320 --> 00:19:46,000
being detected even if it's unlikely

675
00:19:46,000 --> 00:19:47,760
could have very serious ramifications on

676
00:19:47,760 --> 00:19:49,200
the person communicating right so we do

677
00:19:49,200 --> 00:19:50,720
want to shoot for something pretty good

678
00:19:50,720 --> 00:19:51,840
um although there's probably space to

679
00:19:51,840 --> 00:19:53,919
explore again with relaxations as well a

680
00:19:53,919 --> 00:19:56,240
good target might just be like http how

681
00:19:56,240 --> 00:19:58,799
do you make http look plain text eight

682
00:19:58,799 --> 00:20:01,039
how do you make https look like plain

683
00:20:01,039 --> 00:20:04,480
text http enough to force them to do

684
00:20:04,480 --> 00:20:06,640
machine learning and fail with high

685
00:20:06,640 --> 00:20:09,200
probability yeah great question um uh

686
00:20:09,200 --> 00:20:10,559
you should look at the paper we actually

687
00:20:10,559 --> 00:20:12,240
tried this uh turns out there's not much

688
00:20:12,240 --> 00:20:14,320
entropy in http either um so you don't

689
00:20:14,320 --> 00:20:15,360
get great performance but you can

690
00:20:15,360 --> 00:20:16,799
absolutely kind of the model can do

691
00:20:16,799 --> 00:20:18,080
whatever you want we kind of actually

692
00:20:18,080 --> 00:20:19,280
treat it as a generic machine learning

693
00:20:19,280 --> 00:20:20,720
model just easier to visualize with

694
00:20:20,720 --> 00:20:22,080
natural human communication thank you

695
00:20:22,080 --> 00:20:24,720
very much yeah

696
00:20:25,760 --> 00:20:27,280
hi thank you for the talk uh two

697
00:20:27,280 --> 00:20:29,520
questions uh of course i suspect that

698
00:20:29,520 --> 00:20:31,039
this is in a model as you said where

699
00:20:31,039 --> 00:20:33,120
like uh so the randomness is banned and

700
00:20:33,120 --> 00:20:35,280
so you have a sort of like willing to be

701
00:20:35,280 --> 00:20:36,799
active adversary that could stop your

702
00:20:36,799 --> 00:20:38,159
communication

703
00:20:38,159 --> 00:20:40,240
how resilient is this to an adversary

704
00:20:40,240 --> 00:20:42,400
that looks at plain text communication

705
00:20:42,400 --> 00:20:44,080
does their own classification and

706
00:20:44,080 --> 00:20:47,280
changes uh one word out of uh 20 or 30

707
00:20:47,280 --> 00:20:48,720
so that it still kind of makes sense but

708
00:20:48,720 --> 00:20:50,080
it's not quite correct yeah absolutely

709
00:20:50,080 --> 00:20:52,080
so our construction is cpa-like um and

710
00:20:52,080 --> 00:20:54,000
therefore very very vulnerable to

711
00:20:54,000 --> 00:20:56,080
malleability attacks um

712
00:20:56,080 --> 00:20:58,080
again great space for future work uh

713
00:20:58,080 --> 00:20:59,760
there's lots to do here and on the other

714
00:20:59,760 --> 00:21:01,520
hand uh did you look at the possibility

715
00:21:01,520 --> 00:21:04,320
of introducing typos to like generate

716
00:21:04,320 --> 00:21:06,640
more randomness having more options uh

717
00:21:06,640 --> 00:21:08,720
like imagine you're generating

718
00:21:08,720 --> 00:21:11,200
uh human language that is like correctly

719
00:21:11,200 --> 00:21:13,360
written but people don't so i wonder if

720
00:21:13,360 --> 00:21:15,120
that's also a source of

721
00:21:15,120 --> 00:21:16,640
potential running yeah there has been

722
00:21:16,640 --> 00:21:18,400
some work um in the machine learning

723
00:21:18,400 --> 00:21:21,440
literature um or natural language or nlp

724
00:21:21,440 --> 00:21:22,960
type literature looking at these kind of

725
00:21:22,960 --> 00:21:25,120
like injecting errors into communication

726
00:21:25,120 --> 00:21:27,760
as a way to get bits through um

727
00:21:27,760 --> 00:21:29,679
again they don't do a great job proving

728
00:21:29,679 --> 00:21:31,520
anything and so it's a little hard to

729
00:21:31,520 --> 00:21:33,360
analyze whether or not it's good enough

730
00:21:33,360 --> 00:21:35,120
or not um one thing you could have a

731
00:21:35,120 --> 00:21:37,600
model that kind of makes normal errors

732
00:21:37,600 --> 00:21:38,799
and a way that's actually kind of very

733
00:21:38,799 --> 00:21:40,559
similar to us um and that's kind of

734
00:21:40,559 --> 00:21:42,880
generic in whatever model that you use

735
00:21:42,880 --> 00:21:44,480
thank you yeah i'm afraid we have to

736
00:21:44,480 --> 00:21:47,280
move on to the next talk but uh please

737
00:21:47,280 --> 00:21:48,720
ask these questions on zulu because

738
00:21:48,720 --> 00:21:50,159
there's lots of interesting discussion

739
00:21:50,159 --> 00:21:51,280
to be had

740
00:21:51,280 --> 00:21:52,400
thanks everybody

741
00:21:52,400 --> 00:21:55,559
thank you

742
00:22:01,520 --> 00:22:04,000
our next speaker is ayel ronan who will

743
00:22:04,000 --> 00:22:05,679
be talking about password authenticated

744
00:22:05,679 --> 00:22:08,320
key exchange

745
00:22:08,880 --> 00:22:12,480
okay thank you and this is a joint work

746
00:22:12,480 --> 00:22:14,799
together with the cascamas money no and

747
00:22:14,799 --> 00:22:16,799
shakho pass and i'm really honored to

748
00:22:16,799 --> 00:22:18,400
give this talk it's been a while since

749
00:22:18,400 --> 00:22:21,280
anyone considered me useful

750
00:22:21,280 --> 00:22:22,880
and

751
00:22:22,880 --> 00:22:25,200
before we start and again you can see

752
00:22:25,200 --> 00:22:27,360
password-based key exchange we need to

753
00:22:27,360 --> 00:22:30,640
get one thing out of the way and this is

754
00:22:30,640 --> 00:22:33,200
why in 2022 i'm still

755
00:22:33,200 --> 00:22:35,520
talking to you about passwords and i

756
00:22:35,520 --> 00:22:37,120
just want to clarify that we are not

757
00:22:37,120 --> 00:22:39,520
some kind of password fanatics we are

758
00:22:39,520 --> 00:22:41,840
not poor passwords we dislike password

759
00:22:41,840 --> 00:22:44,000
as much as as you guys

760
00:22:44,000 --> 00:22:45,039
but

761
00:22:45,039 --> 00:22:46,480
unfortunately for us

762
00:22:46,480 --> 00:22:49,120
passwords are here and

763
00:22:49,120 --> 00:22:50,880
although it's been declared multiple

764
00:22:50,880 --> 00:22:53,520
times in the past passwords are not dead

765
00:22:53,520 --> 00:22:54,720
they are still probably the most

766
00:22:54,720 --> 00:22:57,600
ubiquitous form of authentication and

767
00:22:57,600 --> 00:22:59,200
they are used in the internet and

768
00:22:59,200 --> 00:23:02,559
websites iot devices wi-fi is based upon

769
00:23:02,559 --> 00:23:07,360
it tls 1.3 just completed a process of

770
00:23:07,360 --> 00:23:10,640
choosing and a protocol to incorporate

771
00:23:10,640 --> 00:23:13,200
passwords inside tls so it seems that we

772
00:23:13,200 --> 00:23:14,720
are going to get stuck with them for a

773
00:23:14,720 --> 00:23:16,799
while and now we need to understand what

774
00:23:16,799 --> 00:23:20,159
is the best way to get stuck with them

775
00:23:20,159 --> 00:23:22,720
okay and so there are a lot of different

776
00:23:22,720 --> 00:23:25,120
use cases for how to use password we use

777
00:23:25,120 --> 00:23:28,159
them to authenticate and website

778
00:23:28,159 --> 00:23:29,919
assuming that we have already have a

779
00:23:29,919 --> 00:23:33,440
secure channel like tls and we can use

780
00:23:33,440 --> 00:23:35,600
them to actually create a secure

781
00:23:35,600 --> 00:23:36,799
challenge the

782
00:23:36,799 --> 00:23:39,280
secure channel and this is what password

783
00:23:39,280 --> 00:23:41,760
authenticated key exchanges are for and

784
00:23:41,760 --> 00:23:44,240
we have the symmetric one-to-one setting

785
00:23:44,240 --> 00:23:46,480
and we also have the asymmetric clients

786
00:23:46,480 --> 00:23:48,400
to server setting

787
00:23:48,400 --> 00:23:50,799
however we need to ask ourselves what

788
00:23:50,799 --> 00:23:53,120
happens in the many-to-many settings

789
00:23:53,120 --> 00:23:56,799
and is it just possible to use multiple

790
00:23:56,799 --> 00:23:58,720
one-to-one protocols or do we need

791
00:23:58,720 --> 00:24:00,159
something else

792
00:24:00,159 --> 00:24:02,400
so i want to start with

793
00:24:02,400 --> 00:24:05,200
a typical use case which might be the

794
00:24:05,200 --> 00:24:07,919
smart home network so let's assume that

795
00:24:07,919 --> 00:24:09,679
we have a house

796
00:24:09,679 --> 00:24:13,039
we have a computer the computer is fully

797
00:24:13,039 --> 00:24:15,679
patched linux machine and the cpu has

798
00:24:15,679 --> 00:24:18,400
the latest microcode updates to mitigate

799
00:24:18,400 --> 00:24:20,559
all of the speculative type execu

800
00:24:20,559 --> 00:24:22,960
execution attacks and all of the crypto

801
00:24:22,960 --> 00:24:25,200
here is constant time so all of these

802
00:24:25,200 --> 00:24:28,080
such an attackers have nowhere and

803
00:24:28,080 --> 00:24:29,919
no chance in actually taking this this

804
00:24:29,919 --> 00:24:31,600
is a completely fetched and completely

805
00:24:31,600 --> 00:24:32,960
secure machine

806
00:24:32,960 --> 00:24:34,960
if one exists

807
00:24:34,960 --> 00:24:37,520
also um we have

808
00:24:37,520 --> 00:24:41,760
this smart lock and this is

809
00:24:41,840 --> 00:24:44,240
this smart talk is able to open the

810
00:24:44,240 --> 00:24:46,400
front door which we might might want to

811
00:24:46,400 --> 00:24:48,480
do sometimes and sometimes we might not

812
00:24:48,480 --> 00:24:50,799
want to open it and this opens and

813
00:24:50,799 --> 00:24:54,000
closes on a command from the network

814
00:24:54,000 --> 00:24:56,240
we also had this thermostat

815
00:24:56,240 --> 00:24:58,000
this thermostat was bricked by the

816
00:24:58,000 --> 00:24:59,679
vendor because they don't provide any

817
00:24:59,679 --> 00:25:01,840
more firmware updates and we need to

818
00:25:01,840 --> 00:25:03,919
discard it with all of the credentials

819
00:25:03,919 --> 00:25:04,799
still

820
00:25:04,799 --> 00:25:06,320
in persistent memory we don't have

821
00:25:06,320 --> 00:25:08,080
anywhere to address it

822
00:25:08,080 --> 00:25:10,240
we also have this old tablet

823
00:25:10,240 --> 00:25:12,320
this is android 8. it doesn't have any

824
00:25:12,320 --> 00:25:14,559
security patch for the last two years

825
00:25:14,559 --> 00:25:16,320
and it's support member of at least

826
00:25:16,320 --> 00:25:19,200
eight major different botnets

827
00:25:19,200 --> 00:25:20,400
um

828
00:25:20,400 --> 00:25:22,080
we also have

829
00:25:22,080 --> 00:25:24,080
the router and this route is going to be

830
00:25:24,080 --> 00:25:26,799
replaced next month because i'm

831
00:25:26,799 --> 00:25:29,279
very unhappy with my internet provider

832
00:25:29,279 --> 00:25:30,799
and i'm going to try another one to be

833
00:25:30,799 --> 00:25:33,200
unhappy with so they're going to get my

834
00:25:33,200 --> 00:25:34,640
credentials

835
00:25:34,640 --> 00:25:35,520
and

836
00:25:35,520 --> 00:25:37,440
i also have multiple

837
00:25:37,440 --> 00:25:39,360
visiting smartphones maybe you have more

838
00:25:39,360 --> 00:25:41,440
friends than i so you love them i don't

839
00:25:41,440 --> 00:25:44,240
have much smartphones in my house but um

840
00:25:44,240 --> 00:25:46,320
as you see there are a lot of different

841
00:25:46,320 --> 00:25:49,679
devices that have those um credentials

842
00:25:49,679 --> 00:25:51,360
and we only need

843
00:25:51,360 --> 00:25:53,120
one device to hold them all because at

844
00:25:53,120 --> 00:25:54,799
least at wi-fi

845
00:25:54,799 --> 00:25:56,559
the standard actually mandates the

846
00:25:56,559 --> 00:25:58,880
devices to store the password and store

847
00:25:58,880 --> 00:26:01,520
it in clear text on the device so if any

848
00:26:01,520 --> 00:26:03,679
one of them gets compromised this entire

849
00:26:03,679 --> 00:26:05,760
network gets compromised

850
00:26:05,760 --> 00:26:06,799
and

851
00:26:06,799 --> 00:26:08,240
let's assume that we don't want it to

852
00:26:08,240 --> 00:26:11,279
get compromised so what can we do

853
00:26:11,279 --> 00:26:13,039
and there are many challenges when we

854
00:26:13,039 --> 00:26:16,000
try to make this type of many-to-many um

855
00:26:16,000 --> 00:26:17,600
setting actually work

856
00:26:17,600 --> 00:26:19,440
and we have one password and we have

857
00:26:19,440 --> 00:26:20,960
many user devices

858
00:26:20,960 --> 00:26:23,279
so we want to be able to have source

859
00:26:23,279 --> 00:26:24,880
authentication want to be able to

860
00:26:24,880 --> 00:26:26,720
understand if the specific message was

861
00:26:26,720 --> 00:26:29,600
sent by the router or by the smartphone

862
00:26:29,600 --> 00:26:31,039
or by

863
00:26:31,039 --> 00:26:32,880
the thermostat which shouldn't be able

864
00:26:32,880 --> 00:26:34,880
to open the door

865
00:26:34,880 --> 00:26:36,880
we also want to be able to revoke

866
00:26:36,880 --> 00:26:38,559
specific devices

867
00:26:38,559 --> 00:26:40,720
for example if we discard this

868
00:26:40,720 --> 00:26:42,559
thermostat we don't want him to be able

869
00:26:42,559 --> 00:26:45,039
to connect to the network anymore

870
00:26:45,039 --> 00:26:46,799
and

871
00:26:46,799 --> 00:26:48,159
the main challenge is that we have a

872
00:26:48,159 --> 00:26:50,400
very dynamic network topology

873
00:26:50,400 --> 00:26:53,120
and people that are into smart houses

874
00:26:53,120 --> 00:26:55,279
might go out to the supermarket and buy

875
00:26:55,279 --> 00:26:57,679
a smart light bulb i'm not sure why they

876
00:26:57,679 --> 00:26:59,840
do it but they actually do it sometimes

877
00:26:59,840 --> 00:27:02,000
and now we need to wait to bootstrap and

878
00:27:02,000 --> 00:27:05,200
make this light bulb join this network

879
00:27:05,200 --> 00:27:07,919
and then communicate with other devices

880
00:27:07,919 --> 00:27:09,520
moreover we need to support the

881
00:27:09,520 --> 00:27:12,480
replacement of existing hardware so for

882
00:27:12,480 --> 00:27:15,440
example we could envision a

883
00:27:15,440 --> 00:27:16,960
world where we have this

884
00:27:16,960 --> 00:27:19,679
magical protocol that allows us to

885
00:27:19,679 --> 00:27:21,520
determine long-term

886
00:27:21,520 --> 00:27:23,840
high entropy keys with the

887
00:27:23,840 --> 00:27:26,000
access point or the router but then what

888
00:27:26,000 --> 00:27:27,600
happens if we replace this router do we

889
00:27:27,600 --> 00:27:29,520
need to go and re-authenticate all of

890
00:27:29,520 --> 00:27:31,600
the devices in our home and people that

891
00:27:31,600 --> 00:27:33,840
have smart homes apparently don't like

892
00:27:33,840 --> 00:27:35,760
to re-authenticate their devices so you

893
00:27:35,760 --> 00:27:37,600
want to be some a solution that is very

894
00:27:37,600 --> 00:27:39,600
usable

895
00:27:39,600 --> 00:27:42,080
and uh we want to be able to support

896
00:27:42,080 --> 00:27:45,200
this asynchronous and offline password

897
00:27:45,200 --> 00:27:47,200
input that is not dependent on anything

898
00:27:47,200 --> 00:27:50,399
else so um we don't want to actually

899
00:27:50,399 --> 00:27:52,240
have any communication rounds when we

900
00:27:52,240 --> 00:27:53,600
enter the password we don't want to

901
00:27:53,600 --> 00:27:55,440
assume that the router is currently

902
00:27:55,440 --> 00:27:58,080
online or offline we can't really assume

903
00:27:58,080 --> 00:28:00,000
any shared randomness because we don't

904
00:28:00,000 --> 00:28:01,440
have any good way to communicate or

905
00:28:01,440 --> 00:28:03,840
agree upon it and we can't really assume

906
00:28:03,840 --> 00:28:06,720
a trusted third party or pki

907
00:28:06,720 --> 00:28:09,440
and the let's decrypt just receive the

908
00:28:09,440 --> 00:28:11,440
leveling price to try to scale up the

909
00:28:11,440 --> 00:28:14,000
pki infrastructure to support a lot of

910
00:28:14,000 --> 00:28:15,600
websites i feel that they will return

911
00:28:15,600 --> 00:28:18,240
this prize if someone asked them to also

912
00:28:18,240 --> 00:28:20,640
provide this for every home network so

913
00:28:20,640 --> 00:28:22,799
we want to let them continue do their

914
00:28:22,799 --> 00:28:25,760
important work without disturbing them

915
00:28:25,760 --> 00:28:26,559
okay

916
00:28:26,559 --> 00:28:28,960
so what are the current tools that we

917
00:28:28,960 --> 00:28:30,399
that we have that we can use to solve

918
00:28:30,399 --> 00:28:32,640
this type of problems

919
00:28:32,640 --> 00:28:35,120
and um the main tools that we talk about

920
00:28:35,120 --> 00:28:37,279
when creating uh secure channels with

921
00:28:37,279 --> 00:28:39,600
passwords are password and dedicated key

922
00:28:39,600 --> 00:28:42,320
exchange now they've been uh

923
00:28:42,320 --> 00:28:43,840
about for a really long time we're

924
00:28:43,840 --> 00:28:46,080
talking about 30 years

925
00:28:46,080 --> 00:28:48,480
and um in this way

926
00:28:48,480 --> 00:28:50,880
we have two parties that if they share

927
00:28:50,880 --> 00:28:52,720
the same password they can

928
00:28:52,720 --> 00:28:55,760
automatically create a secure channel

929
00:28:55,760 --> 00:28:57,760
now the model of peak

930
00:28:57,760 --> 00:28:58,799
assumes

931
00:28:58,799 --> 00:29:01,120
that passwords are never stored each

932
00:29:01,120 --> 00:29:03,120
protocol run you're going to reinput the

933
00:29:03,120 --> 00:29:05,440
passwords to those devices

934
00:29:05,440 --> 00:29:07,039
now i can ask

935
00:29:07,039 --> 00:29:08,880
how many of you like to show reserve

936
00:29:08,880 --> 00:29:10,960
hands re-enter their wi-fi passwords

937
00:29:10,960 --> 00:29:13,039
each time they go back to the house

938
00:29:13,039 --> 00:29:14,880
nobody has their answers okay

939
00:29:14,880 --> 00:29:17,440
so it may be in reality

940
00:29:17,440 --> 00:29:20,080
devices do store those devices so we

941
00:29:20,080 --> 00:29:21,360
don't have long term storage of

942
00:29:21,360 --> 00:29:23,600
passwords and they are usually in clear

943
00:29:23,600 --> 00:29:26,000
text we don't have any real way to

944
00:29:26,000 --> 00:29:27,120
protect this

945
00:29:27,120 --> 00:29:28,720
storage

946
00:29:28,720 --> 00:29:31,039
um we do have some more advanced

947
00:29:31,039 --> 00:29:33,840
solution for the asymmetric setting if

948
00:29:33,840 --> 00:29:35,360
we assume that we have

949
00:29:35,360 --> 00:29:37,360
different roles we have one client and

950
00:29:37,360 --> 00:29:40,000
one server then we can try to protect

951
00:29:40,000 --> 00:29:42,399
the long-term password storage inside

952
00:29:42,399 --> 00:29:43,760
the server

953
00:29:43,760 --> 00:29:45,520
and we

954
00:29:45,520 --> 00:29:48,080
and this is much better than regular

955
00:29:48,080 --> 00:29:51,679
packs however clients still don't have

956
00:29:51,679 --> 00:29:53,360
this protection so we need to assume

957
00:29:53,360 --> 00:29:54,960
that the client doesn't store his

958
00:29:54,960 --> 00:29:57,679
password but re-enter it each time which

959
00:29:57,679 --> 00:29:58,880
might be

960
00:29:58,880 --> 00:30:01,520
logical for some settings i i personally

961
00:30:01,520 --> 00:30:04,320
haven't found them yet but um probably

962
00:30:04,320 --> 00:30:06,559
not for many use cases

963
00:30:06,559 --> 00:30:08,960
that we have and this is not portable to

964
00:30:08,960 --> 00:30:10,799
the many to many settings

965
00:30:10,799 --> 00:30:13,039
and recently uh there's been an invest

966
00:30:13,039 --> 00:30:15,760
this is nice 1993 then we had to wait a

967
00:30:15,760 --> 00:30:18,480
little bit and then 2018 we have a new

968
00:30:18,480 --> 00:30:21,200
notion of strong augmented packs which

969
00:30:21,200 --> 00:30:22,720
improves the protection against

970
00:30:22,720 --> 00:30:25,520
pre-computation attack when i compromise

971
00:30:25,520 --> 00:30:27,600
the server i can still try to brute

972
00:30:27,600 --> 00:30:29,279
force guess the password out of the

973
00:30:29,279 --> 00:30:31,120
dictionary and

974
00:30:31,120 --> 00:30:34,000
in essay pack i can't do any computation

975
00:30:34,000 --> 00:30:36,080
until i actually compromise this server

976
00:30:36,080 --> 00:30:38,080
which is a very nice property

977
00:30:38,080 --> 00:30:40,960
we can this allows us to actually use

978
00:30:40,960 --> 00:30:43,279
salt efficiently when

979
00:30:43,279 --> 00:30:45,440
calculating a one-way function of their

980
00:30:45,440 --> 00:30:47,520
hash and this is what we

981
00:30:47,520 --> 00:30:48,880
view as common

982
00:30:48,880 --> 00:30:51,200
good comment practice

983
00:30:51,200 --> 00:30:52,080
okay

984
00:30:52,080 --> 00:30:53,600
there are some problems with it as i

985
00:30:53,600 --> 00:30:54,480
mentioned

986
00:30:54,480 --> 00:30:55,360
and

987
00:30:55,360 --> 00:30:57,519
still one of the sides needs to store

988
00:30:57,519 --> 00:31:00,000
the passwords in the clear and we we

989
00:31:00,000 --> 00:31:02,080
don't want it in many too many settings

990
00:31:02,080 --> 00:31:07,360
and um this is no real easy way to um

991
00:31:07,360 --> 00:31:08,799
to extend it to

992
00:31:08,799 --> 00:31:09,480
the

993
00:31:09,480 --> 00:31:11,679
manufacturing setting

994
00:31:11,679 --> 00:31:12,720
okay

995
00:31:12,720 --> 00:31:15,279
so now we propose to

996
00:31:15,279 --> 00:31:16,799
have some snacks

997
00:31:16,799 --> 00:31:18,480
and what we want to propose here is that

998
00:31:18,480 --> 00:31:20,159
we have all of this

999
00:31:20,159 --> 00:31:22,720
um old really cool notions about how to

1000
00:31:22,720 --> 00:31:25,120
use passwords but we want to provide

1001
00:31:25,120 --> 00:31:27,760
some new ones and this is

1002
00:31:27,760 --> 00:31:29,760
basically identity based

1003
00:31:29,760 --> 00:31:32,080
peaks and here we can extend the

1004
00:31:32,080 --> 00:31:34,080
protection of the password storage to

1005
00:31:34,080 --> 00:31:36,480
all parties involved and we can actually

1006
00:31:36,480 --> 00:31:38,559
and we can also bind the password

1007
00:31:38,559 --> 00:31:40,720
storage to

1008
00:31:40,720 --> 00:31:44,880
some some tag to some party and then if

1009
00:31:44,880 --> 00:31:46,720
for example party one here gets

1010
00:31:46,720 --> 00:31:49,360
compromised this does not allow the

1011
00:31:49,360 --> 00:31:51,760
attacker to impersonate any other party

1012
00:31:51,760 --> 00:31:54,159
in the network only the the compromised

1013
00:31:54,159 --> 00:31:55,360
party

1014
00:31:55,360 --> 00:31:58,080
and we have a protocol named chip that

1015
00:31:58,080 --> 00:32:00,720
actually instantiates this notion

1016
00:32:00,720 --> 00:32:01,519
and

1017
00:32:01,519 --> 00:32:03,360
we have the stronger notion which is the

1018
00:32:03,360 --> 00:32:04,880
strong

1019
00:32:04,880 --> 00:32:08,240
identity based peak which corresponds to

1020
00:32:08,240 --> 00:32:10,240
the strong augmented pack which also

1021
00:32:10,240 --> 00:32:12,720
provides a stronger precomputation

1022
00:32:12,720 --> 00:32:15,360
resilience

1023
00:32:15,360 --> 00:32:18,399
okay so how can we realize this

1024
00:32:18,399 --> 00:32:20,320
we do this by using techniques from

1025
00:32:20,320 --> 00:32:22,240
identity based kick change and

1026
00:32:22,240 --> 00:32:24,320
agreements protocols

1027
00:32:24,320 --> 00:32:26,720
but we only use those underlying ideas

1028
00:32:26,720 --> 00:32:30,559
we don't actually need a trusted um key

1029
00:32:30,559 --> 00:32:32,480
generation center or any any other

1030
00:32:32,480 --> 00:32:34,799
trusted third party what we do is we use

1031
00:32:34,799 --> 00:32:38,080
the password as the secret seed and we

1032
00:32:38,080 --> 00:32:39,919
emulate the

1033
00:32:39,919 --> 00:32:41,039
all of the

1034
00:32:41,039 --> 00:32:42,399
process done by the

1035
00:32:42,399 --> 00:32:44,720
the key center on the device

1036
00:32:44,720 --> 00:32:48,399
then we derive a password storage and we

1037
00:32:48,399 --> 00:32:50,720
delete the password

1038
00:32:50,720 --> 00:32:53,279
um we don't actually need to have

1039
00:32:53,279 --> 00:32:56,000
unique or especially encoded identities

1040
00:32:56,000 --> 00:32:57,519
and we can

1041
00:32:57,519 --> 00:33:00,000
use some abstract tags

1042
00:33:00,000 --> 00:33:02,960
for the password storage to bind into

1043
00:33:02,960 --> 00:33:05,279
and we can choose them as some

1044
00:33:05,279 --> 00:33:08,320
identities would be al's laptop we can

1045
00:33:08,320 --> 00:33:11,440
also use roles so for example we can um

1046
00:33:11,440 --> 00:33:14,640
recreate augmented pack by using um the

1047
00:33:14,640 --> 00:33:16,960
one wall of a server and another as a

1048
00:33:16,960 --> 00:33:18,960
client while still giving the client the

1049
00:33:18,960 --> 00:33:20,640
same protection that we can't do today

1050
00:33:20,640 --> 00:33:22,480
with regular augmented pegs

1051
00:33:22,480 --> 00:33:24,559
and we can also use unique identifiers

1052
00:33:24,559 --> 00:33:27,440
like mac addresses but this is um

1053
00:33:27,440 --> 00:33:29,279
completely abstract and we can use

1054
00:33:29,279 --> 00:33:30,720
whatever we want

1055
00:33:30,720 --> 00:33:33,039
and we can also have multiple devices

1056
00:33:33,039 --> 00:33:35,120
that share the same tag if we have some

1057
00:33:35,120 --> 00:33:37,120
low permission devices in our network

1058
00:33:37,120 --> 00:33:39,840
for example the guest smartphones we can

1059
00:33:39,840 --> 00:33:41,679
have all of them share the same tag it

1060
00:33:41,679 --> 00:33:43,279
doesn't affect the security of the other

1061
00:33:43,279 --> 00:33:45,600
parties

1062
00:33:45,600 --> 00:33:47,600
and to give you a little bit of

1063
00:33:47,600 --> 00:33:50,480
intuition of how we can do it

1064
00:33:50,480 --> 00:33:53,840
i will try to explain and probably fail

1065
00:33:53,840 --> 00:33:56,159
the basic ideas behind the crisp

1066
00:33:56,159 --> 00:33:56,880
and

1067
00:33:56,880 --> 00:33:58,640
the way to do it we have two different

1068
00:33:58,640 --> 00:34:00,320
parts we have what you call the password

1069
00:34:00,320 --> 00:34:03,600
file generation where each party can can

1070
00:34:03,600 --> 00:34:05,519
generate its own

1071
00:34:05,519 --> 00:34:06,480
unique

1072
00:34:06,480 --> 00:34:08,960
random seed and it's going to store some

1073
00:34:08,960 --> 00:34:11,440
commitment for the for the seed and

1074
00:34:11,440 --> 00:34:14,239
we're going to use a hash to curve

1075
00:34:14,239 --> 00:34:15,599
on the password

1076
00:34:15,599 --> 00:34:17,760
again using the same seed to blend it

1077
00:34:17,760 --> 00:34:20,239
and we're going to store some commitment

1078
00:34:20,239 --> 00:34:23,199
um for the actual identity

1079
00:34:23,199 --> 00:34:25,040
and in the key

1080
00:34:25,040 --> 00:34:27,599
negotiation part in the protocol we're

1081
00:34:27,599 --> 00:34:30,879
going to um use the specific eclipse is

1082
00:34:30,879 --> 00:34:33,119
based on the linear pairing and we're

1083
00:34:33,119 --> 00:34:35,199
going to um use the commitment that we

1084
00:34:35,199 --> 00:34:38,320
have in order to have such an extended

1085
00:34:38,320 --> 00:34:40,879
development protocol and

1086
00:34:40,879 --> 00:34:41,918
basically

1087
00:34:41,918 --> 00:34:43,918
both sides are going to negotiate

1088
00:34:43,918 --> 00:34:47,359
a secret input that they both shall they

1089
00:34:47,359 --> 00:34:49,918
are it incorporates both the password

1090
00:34:49,918 --> 00:34:52,000
and the two sorts and then we're going

1091
00:34:52,000 --> 00:34:55,199
to feed these two to a regular protocol

1092
00:34:55,199 --> 00:34:56,960
in order to create a key that we can

1093
00:34:56,960 --> 00:34:59,280
actually use for the secure channel

1094
00:34:59,280 --> 00:35:00,400
and

1095
00:35:00,400 --> 00:35:02,560
on the second part we're going to use

1096
00:35:02,560 --> 00:35:04,640
the commitment that we made to the

1097
00:35:04,640 --> 00:35:06,720
identity to prove to the other side that

1098
00:35:06,720 --> 00:35:09,280
we uh that we are who we claim we are

1099
00:35:09,280 --> 00:35:12,240
and we are not impersonating anyone else

1100
00:35:12,240 --> 00:35:14,079
again this is the stronger variant that

1101
00:35:14,079 --> 00:35:16,240
is based on but in a pairing we have

1102
00:35:16,240 --> 00:35:19,280
also the the um less than variant that

1103
00:35:19,280 --> 00:35:21,280
is only based on

1104
00:35:21,280 --> 00:35:22,720
regular

1105
00:35:22,720 --> 00:35:24,880
development

1106
00:35:24,880 --> 00:35:28,400
and we did not just um go to the process

1107
00:35:28,400 --> 00:35:31,119
of invading the notions and the protocol

1108
00:35:31,119 --> 00:35:34,000
and writing all of this very cool and

1109
00:35:34,000 --> 00:35:35,200
fun to

1110
00:35:35,200 --> 00:35:38,000
handle and uc proofs we try to actually

1111
00:35:38,000 --> 00:35:40,400
implement this protocol and we try to

1112
00:35:40,400 --> 00:35:42,560
benchmark it compare it to current

1113
00:35:42,560 --> 00:35:43,680
solutions

1114
00:35:43,680 --> 00:35:46,079
and um on the

1115
00:35:46,079 --> 00:35:48,240
left side we have a sea pace which is a

1116
00:35:48,240 --> 00:35:51,599
very efficient regular uh bake and this

1117
00:35:51,599 --> 00:35:54,640
is the base we also base our protocol

1118
00:35:54,640 --> 00:35:58,240
on on this epic and afterwards we have

1119
00:35:58,240 --> 00:36:00,320
sae simultaneous authentication of

1120
00:36:00,320 --> 00:36:02,400
equals this is the current uh tech

1121
00:36:02,400 --> 00:36:05,200
protocol using the latest wi-fi standard

1122
00:36:05,200 --> 00:36:07,119
of wp-3

1123
00:36:07,119 --> 00:36:10,160
and you see it's much less efficient and

1124
00:36:10,160 --> 00:36:12,240
it currently has no real security motion

1125
00:36:12,240 --> 00:36:14,880
because it was never proven to be secure

1126
00:36:14,880 --> 00:36:17,119
and on that end we have a cheap protocol

1127
00:36:17,119 --> 00:36:19,040
that allowed that gives much better

1128
00:36:19,040 --> 00:36:21,359
security guarantees and it's a little

1129
00:36:21,359 --> 00:36:23,359
bit um

1130
00:36:23,359 --> 00:36:26,640
slower than cpas but um comparable to

1131
00:36:26,640 --> 00:36:28,720
opec that was currently standardized for

1132
00:36:28,720 --> 00:36:31,920
tls 1.3 and again

1133
00:36:31,920 --> 00:36:34,079
can protect all parties and we have the

1134
00:36:34,079 --> 00:36:35,680
crisp protocol which is currently a

1135
00:36:35,680 --> 00:36:39,119
little bit slower but not much and we

1136
00:36:39,119 --> 00:36:41,599
feel that still the overall overhead is

1137
00:36:41,599 --> 00:36:44,160
very low and it's is suitable for iot

1138
00:36:44,160 --> 00:36:45,839
device and wi-fi networks is it

1139
00:36:45,839 --> 00:36:47,680
comparable with the current wi-fi

1140
00:36:47,680 --> 00:36:49,680
protocol and we also have several

1141
00:36:49,680 --> 00:36:51,599
suggestions to how to optimize the his

1142
00:36:51,599 --> 00:36:53,359
protocol to make it run a little bit

1143
00:36:53,359 --> 00:36:55,520
faster and and we have the code

1144
00:36:55,520 --> 00:36:57,839
available in github if anyone wants to

1145
00:36:57,839 --> 00:37:00,400
try to play around with it

1146
00:37:00,400 --> 00:37:02,160
so to conclude

1147
00:37:02,160 --> 00:37:03,280
we

1148
00:37:03,280 --> 00:37:05,680
present cheap eclipse and we provide

1149
00:37:05,680 --> 00:37:07,680
stronger security guarantees for the

1150
00:37:07,680 --> 00:37:09,839
store password storage for all parties

1151
00:37:09,839 --> 00:37:11,040
and

1152
00:37:11,040 --> 00:37:13,599
involved and it works in a symmetric

1153
00:37:13,599 --> 00:37:15,520
fully mesh setting

1154
00:37:15,520 --> 00:37:17,839
and we are looking to

1155
00:37:17,839 --> 00:37:20,560
make ourselves useful so we would like

1156
00:37:20,560 --> 00:37:22,320
to have it standardized on the personal

1157
00:37:22,320 --> 00:37:23,680
if you're interested

1158
00:37:23,680 --> 00:37:25,760
please come and talk to us and you can

1159
00:37:25,760 --> 00:37:28,240
see all of the gory details and the uc

1160
00:37:28,240 --> 00:37:29,440
proofs in the

1161
00:37:29,440 --> 00:37:30,480
online

1162
00:37:30,480 --> 00:37:32,320
version of the paper and the code is

1163
00:37:32,320 --> 00:37:33,520
also available

1164
00:37:33,520 --> 00:37:34,960
thank you very much and i will be happy

1165
00:37:34,960 --> 00:37:37,839
to answer any questions

1166
00:37:45,520 --> 00:37:47,040
thank you very much are there any

1167
00:37:47,040 --> 00:37:50,040
questions

1168
00:37:51,440 --> 00:37:53,520
thank you for the very nice talk can you

1169
00:37:53,520 --> 00:37:54,800
explain a little bit what's going on

1170
00:37:54,800 --> 00:37:56,320
generically in that first part of your

1171
00:37:56,320 --> 00:37:57,839
protocol so i see there's a pick in the

1172
00:37:57,839 --> 00:37:59,520
second part but what's what's that first

1173
00:37:59,520 --> 00:38:01,040
part really you presented it as like

1174
00:38:01,040 --> 00:38:02,720
some id based thing

1175
00:38:02,720 --> 00:38:04,000
what's really going on there so

1176
00:38:04,000 --> 00:38:06,720
basically we want to compute some

1177
00:38:06,720 --> 00:38:09,760
one-way function of the password and

1178
00:38:09,760 --> 00:38:11,359
incorporate the

1179
00:38:11,359 --> 00:38:12,480
um

1180
00:38:12,480 --> 00:38:14,880
the identity with it but the problem is

1181
00:38:14,880 --> 00:38:17,440
that we want to we need to have it to

1182
00:38:17,440 --> 00:38:19,200
add some kind of salt because otherwise

1183
00:38:19,200 --> 00:38:20,720
it's trivial to

1184
00:38:20,720 --> 00:38:23,599
create a dictionary but we can't

1185
00:38:23,599 --> 00:38:25,200
share the salt we can't agree upon it

1186
00:38:25,200 --> 00:38:27,359
with other parties so all of this

1187
00:38:27,359 --> 00:38:30,160
process that we do around it is a way to

1188
00:38:30,160 --> 00:38:31,760
calculate this one-way function in which

1189
00:38:31,760 --> 00:38:34,000
it has some structure so when i will

1190
00:38:34,000 --> 00:38:35,040
send you

1191
00:38:35,040 --> 00:38:36,880
my salt or some commitment to it you can

1192
00:38:36,880 --> 00:38:39,119
also calculate the same

1193
00:38:39,119 --> 00:38:40,320
output

1194
00:38:40,320 --> 00:38:43,119
so is it not an attractive key exchange

1195
00:38:43,119 --> 00:38:46,400
um yeah basically it's uh it's partly

1196
00:38:46,400 --> 00:38:47,920
non-literate yeah

1197
00:38:47,920 --> 00:38:51,200
okay basically it's based on this

1198
00:38:52,320 --> 00:38:54,640
hello thank you for the talk maybe a

1199
00:38:54,640 --> 00:38:57,599
follow-up question to canis so if i

1200
00:38:57,599 --> 00:38:59,680
understand correctly you use

1201
00:38:59,680 --> 00:39:02,800
the password to create a commitment to a

1202
00:39:02,800 --> 00:39:04,800
certain identity and then you use this

1203
00:39:04,800 --> 00:39:06,240
commitment to

1204
00:39:06,240 --> 00:39:08,320
run a password authenticated key

1205
00:39:08,320 --> 00:39:09,920
exchange

1206
00:39:09,920 --> 00:39:11,040
right

1207
00:39:11,040 --> 00:39:12,160
but

1208
00:39:12,160 --> 00:39:14,079
one of the things you you promised is

1209
00:39:14,079 --> 00:39:17,599
that if i upgrade my router

1210
00:39:17,599 --> 00:39:18,880
then

1211
00:39:18,880 --> 00:39:21,280
i don't have to set up all my devices

1212
00:39:21,280 --> 00:39:23,920
again against this new router and how

1213
00:39:23,920 --> 00:39:25,920
would this work in in

1214
00:39:25,920 --> 00:39:27,440
your setting

1215
00:39:27,440 --> 00:39:29,839
okay so the main thing here is that

1216
00:39:29,839 --> 00:39:32,240
after you input your password the device

1217
00:39:32,240 --> 00:39:34,560
forgets about it the password is them is

1218
00:39:34,560 --> 00:39:36,640
the master key so if you replace your

1219
00:39:36,640 --> 00:39:38,800
your um your router

1220
00:39:38,800 --> 00:39:41,359
the router only stores the um the

1221
00:39:41,359 --> 00:39:43,839
one-way function of the of the password

1222
00:39:43,839 --> 00:39:46,320
with the um for example it's all all the

1223
00:39:46,320 --> 00:39:48,720
mac address you can revoke it now you

1224
00:39:48,720 --> 00:39:50,640
just re-input the password to the new

1225
00:39:50,640 --> 00:39:53,440
router and you can derive the same the

1226
00:39:53,440 --> 00:39:56,000
same secrets using using a new identity

1227
00:39:56,000 --> 00:39:57,920
and then everything can

1228
00:39:57,920 --> 00:39:59,920
work the same way as if you just replace

1229
00:39:59,920 --> 00:40:03,920
the router when it has a new mac address

1230
00:40:05,119 --> 00:40:05,920
but

1231
00:40:05,920 --> 00:40:09,280
would this mean that any device that

1232
00:40:09,280 --> 00:40:12,240
i authenticate could impersonate the

1233
00:40:12,240 --> 00:40:14,079
router

1234
00:40:14,079 --> 00:40:17,119
if um it depends if you assume that the

1235
00:40:17,119 --> 00:40:18,720
device is

1236
00:40:18,720 --> 00:40:20,720
honest and the second that you input the

1237
00:40:20,720 --> 00:40:22,560
password or if it was compromised if it

1238
00:40:22,560 --> 00:40:24,000
was compromised before you input the

1239
00:40:24,000 --> 00:40:25,680
password when the password is leaked

1240
00:40:25,680 --> 00:40:27,280
then everything is lost if it was

1241
00:40:27,280 --> 00:40:29,359
compromised after you input the password

1242
00:40:29,359 --> 00:40:32,560
then um then it it can't

1243
00:40:32,560 --> 00:40:35,200
change its identity anymore because it

1244
00:40:35,200 --> 00:40:36,640
binds it to him

1245
00:40:36,640 --> 00:40:38,960
it cannot change its identity but how uh

1246
00:40:38,960 --> 00:40:41,200
okay

1247
00:40:42,480 --> 00:40:46,000
right thank you thank you very much

1248
00:40:46,160 --> 00:40:47,920
so it looks like in your slide that this

1249
00:40:47,920 --> 00:40:49,599
is sort of a generic transformation you

1250
00:40:49,599 --> 00:40:51,280
do a head of a pig

1251
00:40:51,280 --> 00:40:53,200
i'm wondering you know what the secret

1252
00:40:53,200 --> 00:40:54,640
that you're feeding in seems to be much

1253
00:40:54,640 --> 00:40:56,880
more random than the usual password and

1254
00:40:56,880 --> 00:40:58,640
it also seems like for some page there

1255
00:40:58,640 --> 00:41:00,800
might be ways to com to do some of the

1256
00:41:00,800 --> 00:41:01,839
paperwork

1257
00:41:01,839 --> 00:41:04,400
up ahead of that box to save on rounds

1258
00:41:04,400 --> 00:41:06,079
i'm curious if you've investigated that

1259
00:41:06,079 --> 00:41:08,000
or if there are barriers

1260
00:41:08,000 --> 00:41:10,960
yeah so we we looked at it and

1261
00:41:10,960 --> 00:41:13,280
there are some subtle attacks if you

1262
00:41:13,280 --> 00:41:16,240
want to provide perfect for the secrecy

1263
00:41:16,240 --> 00:41:18,560
which usually requires something along

1264
00:41:18,560 --> 00:41:22,079
the tech we can run the peak um

1265
00:41:22,079 --> 00:41:24,160
in parallel which it changed the proofs

1266
00:41:24,160 --> 00:41:25,280
but

1267
00:41:25,280 --> 00:41:27,200
basically we wanted to have

1268
00:41:27,200 --> 00:41:28,560
something that is

1269
00:41:28,560 --> 00:41:29,440
easy

1270
00:41:29,440 --> 00:41:31,440
as possible to understand and easy as

1271
00:41:31,440 --> 00:41:33,200
possible to actually prove and when you

1272
00:41:33,200 --> 00:41:36,480
do uc proofs it's much easier to have

1273
00:41:36,480 --> 00:41:38,400
something that was already proven to to

1274
00:41:38,400 --> 00:41:39,520
some of this

1275
00:41:39,520 --> 00:41:41,440
to fulfill some of these requirements

1276
00:41:41,440 --> 00:41:43,839
but i feel that this is a really good

1277
00:41:43,839 --> 00:41:46,400
future work

1278
00:41:46,720 --> 00:41:48,160
thank you there's one question in the

1279
00:41:48,160 --> 00:41:49,760
zulu so please take a look at that as

1280
00:41:49,760 --> 00:41:52,480
well after uh after the session so

1281
00:41:52,480 --> 00:41:53,760
please thank our speaker and both

1282
00:41:53,760 --> 00:41:57,560
speakers in this session

1283
00:42:02,160 --> 00:42:03,520
okay and stay where you are we'll be

1284
00:42:03,520 --> 00:42:05,200
moving right into our next session with

1285
00:42:05,200 --> 00:42:08,680
an invited talk

1286
00:42:21,540 --> 00:42:23,839
[Music]

1287
00:42:23,839 --> 00:42:25,440
good morning and welcome to the next

1288
00:42:25,440 --> 00:42:26,480
session

1289
00:42:26,480 --> 00:42:29,760
cryptography in the ads ecosystem and we

1290
00:42:29,760 --> 00:42:32,000
have an invited talk

1291
00:42:32,000 --> 00:42:34,720
entitled building the next generation of

1292
00:42:34,720 --> 00:42:38,319
digital advertising with npc by james

1293
00:42:38,319 --> 00:42:41,319
rice

1294
00:42:44,640 --> 00:42:46,079
hello

1295
00:42:46,079 --> 00:42:47,599
i'm james reyes

1296
00:42:47,599 --> 00:42:50,240
i'm the tech lead of private computation

1297
00:42:50,240 --> 00:42:52,079
at meta

1298
00:42:52,079 --> 00:42:54,640
today i'm going to talk about uh private

1299
00:42:54,640 --> 00:42:55,839
computation

1300
00:42:55,839 --> 00:42:57,680
which is our effort to build the next

1301
00:42:57,680 --> 00:43:00,240
generation of digital advertising with

1302
00:43:00,240 --> 00:43:02,319
mpc

1303
00:43:02,319 --> 00:43:04,319
today's talk is going to focus on real

1304
00:43:04,319 --> 00:43:06,720
world product and engineering challenges

1305
00:43:06,720 --> 00:43:08,640
that we faced when trying to bring this

1306
00:43:08,640 --> 00:43:11,520
to market and to scale

1307
00:43:11,520 --> 00:43:13,520
as a caveat this will be a very product

1308
00:43:13,520 --> 00:43:15,280
and engineering focused talk

1309
00:43:15,280 --> 00:43:17,680
i'm not a cryptographer

1310
00:43:17,680 --> 00:43:19,599
i hope this is helpful to understand how

1311
00:43:19,599 --> 00:43:21,839
to productionize cryptographic protocols

1312
00:43:21,839 --> 00:43:23,520
as well as in advancing state-of-the-art

1313
00:43:23,520 --> 00:43:27,480
and bringing mpc to scale

1314
00:43:28,480 --> 00:43:29,520
so i'm going to start with a little bit

1315
00:43:29,520 --> 00:43:31,119
of background on what private

1316
00:43:31,119 --> 00:43:32,400
computation is

1317
00:43:32,400 --> 00:43:34,480
and then i'll move into the product

1318
00:43:34,480 --> 00:43:36,240
challenges we've faced when we have

1319
00:43:36,240 --> 00:43:37,520
tried to bring it to the advertising

1320
00:43:37,520 --> 00:43:39,200
market

1321
00:43:39,200 --> 00:43:40,480
i'll move into the engineering

1322
00:43:40,480 --> 00:43:42,560
challenges that we faced when dealing

1323
00:43:42,560 --> 00:43:45,520
with the scale that meta operates at

1324
00:43:45,520 --> 00:43:47,440
and then i'll close with some resources

1325
00:43:47,440 --> 00:43:49,680
on how to learn more as well as

1326
00:43:49,680 --> 00:43:53,560
cryptography at meta

1327
00:43:55,119 --> 00:43:58,720
all right so what is private computation

1328
00:43:59,440 --> 00:44:01,920
in december 2019

1329
00:44:01,920 --> 00:44:04,880
six months after the announcement of uh

1330
00:44:04,880 --> 00:44:07,119
that browsers were deprecating cookies

1331
00:44:07,119 --> 00:44:08,800
which are the foundation of the digital

1332
00:44:08,800 --> 00:44:10,800
ads industry

1333
00:44:10,800 --> 00:44:12,800
much of the ads industry still hadn't

1334
00:44:12,800 --> 00:44:14,000
internalized

1335
00:44:14,000 --> 00:44:15,359
and noticed that this represented a

1336
00:44:15,359 --> 00:44:17,280
larger shift

1337
00:44:17,280 --> 00:44:19,760
in users expectations

1338
00:44:19,760 --> 00:44:22,400
and the industry

1339
00:44:22,400 --> 00:44:25,599
those that did noticed that uh

1340
00:44:25,599 --> 00:44:26,560
we're concerned that this would

1341
00:44:26,560 --> 00:44:29,680
completely upend their business models

1342
00:44:29,680 --> 00:44:30,960
there were a lot of proposals at the

1343
00:44:30,960 --> 00:44:32,319
time

1344
00:44:32,319 --> 00:44:34,880
many were from the perspective of uh how

1345
00:44:34,880 --> 00:44:36,640
do we roll things back

1346
00:44:36,640 --> 00:44:38,400
and then there were others were

1347
00:44:38,400 --> 00:44:40,240
much more privacy focused

1348
00:44:40,240 --> 00:44:42,160
but they didn't practically work well

1349
00:44:42,160 --> 00:44:45,200
for ads use cases

1350
00:44:45,200 --> 00:44:47,040
our approach was to try to deeply listen

1351
00:44:47,040 --> 00:44:48,880
to the concerns of the industry and

1352
00:44:48,880 --> 00:44:53,040
regulators and understand the trend

1353
00:44:53,040 --> 00:44:54,480
we asked what would an ad stack look

1354
00:44:54,480 --> 00:44:56,240
like in five to ten years and let's

1355
00:44:56,240 --> 00:44:59,279
start building towards that now

1356
00:45:01,119 --> 00:45:02,880
so private computation started as a

1357
00:45:02,880 --> 00:45:05,200
partnership between our research and

1358
00:45:05,200 --> 00:45:07,760
engineering teams

1359
00:45:07,760 --> 00:45:10,160
we started a small team and set out to

1360
00:45:10,160 --> 00:45:12,400
see whether or not a semi-honest

1361
00:45:12,400 --> 00:45:15,200
two-party mpc

1362
00:45:15,200 --> 00:45:18,079
could scale to meet our ads use cases we

1363
00:45:18,079 --> 00:45:19,520
felt that

1364
00:45:19,520 --> 00:45:21,200
this technology had the shortest time to

1365
00:45:21,200 --> 00:45:22,480
market of the privacy tech that we

1366
00:45:22,480 --> 00:45:23,920
evaluated

1367
00:45:23,920 --> 00:45:25,280
other technologies that we evaluated

1368
00:45:25,280 --> 00:45:26,800
were trusted execution environments and

1369
00:45:26,800 --> 00:45:29,520
hope norfolk encryption

1370
00:45:29,520 --> 00:45:31,119
a key decision we made was to focus on

1371
00:45:31,119 --> 00:45:32,960
ads measurement

1372
00:45:32,960 --> 00:45:34,640
measurement is about helping advertisers

1373
00:45:34,640 --> 00:45:37,839
understand how their ads are performing

1374
00:45:37,839 --> 00:45:39,200
at meta we know that measurement is

1375
00:45:39,200 --> 00:45:40,960
foundational to any ads business

1376
00:45:40,960 --> 00:45:42,160
everything that comes afterwards

1377
00:45:42,160 --> 00:45:46,079
requires accurate measurement to work

1378
00:45:46,079 --> 00:45:48,720
so that was two years ago

1379
00:45:48,720 --> 00:45:51,119
in august meta announced that uh the

1380
00:45:51,119 --> 00:45:53,280
future of ads at meta were private

1381
00:45:53,280 --> 00:45:55,920
privacy enhancing technologies

1382
00:45:55,920 --> 00:45:58,400
and secure mpc and private computation

1383
00:45:58,400 --> 00:46:01,440
were a key part of that

1384
00:46:01,440 --> 00:46:03,040
we've grown to across the system team of

1385
00:46:03,040 --> 00:46:04,880
over 70 engineers and cryptographers and

1386
00:46:04,880 --> 00:46:07,280
we're still rapidly growing

1387
00:46:07,280 --> 00:46:08,720
we have two mpc products that

1388
00:46:08,720 --> 00:46:10,720
advertisers are actively using

1389
00:46:10,720 --> 00:46:12,000
private lift

1390
00:46:12,000 --> 00:46:14,160
which helps advertisers run randomized

1391
00:46:14,160 --> 00:46:16,000
controlled trials to get an incremental

1392
00:46:16,000 --> 00:46:17,760
impact uh to understand the incremental

1393
00:46:17,760 --> 00:46:19,119
impact of the facebook ads that they're

1394
00:46:19,119 --> 00:46:20,240
running

1395
00:46:20,240 --> 00:46:22,240
and private attribution which delivers

1396
00:46:22,240 --> 00:46:25,760
faster results but utilizes heuristics

1397
00:46:25,760 --> 00:46:26,839
everything that we've done is open

1398
00:46:26,839 --> 00:46:28,880
source you can see it on facebook's

1399
00:46:28,880 --> 00:46:30,319
research github and i'll share some

1400
00:46:30,319 --> 00:46:32,240
links specifically to it later in the

1401
00:46:32,240 --> 00:46:34,799
presentation

1402
00:46:35,440 --> 00:46:36,720
okay so let's talk a little bit about

1403
00:46:36,720 --> 00:46:38,000
what we've learned as we've tried to

1404
00:46:38,000 --> 00:46:40,560
bring this privacy focused product to

1405
00:46:40,560 --> 00:46:43,839
the advertising market

1406
00:46:44,240 --> 00:46:47,040
so we went to beta with private lift

1407
00:46:47,040 --> 00:46:49,920
in july 2021 and as a reminder lyft is

1408
00:46:49,920 --> 00:46:51,280
about running randomized controlled

1409
00:46:51,280 --> 00:46:52,800
trials

1410
00:46:52,800 --> 00:46:55,760
we targeted a 175 sophisticated lift

1411
00:46:55,760 --> 00:46:57,520
advertisers sophisticated lift

1412
00:46:57,520 --> 00:46:59,440
advertisers

1413
00:46:59,440 --> 00:47:01,040
because lift advertisers tend to be some

1414
00:47:01,040 --> 00:47:03,359
of our most sophisticated clients

1415
00:47:03,359 --> 00:47:04,480
they understand the importance of

1416
00:47:04,480 --> 00:47:06,000
privacy and can also take on the

1417
00:47:06,000 --> 00:47:06,960
additional constraints that it

1418
00:47:06,960 --> 00:47:09,440
introduces

1419
00:47:09,760 --> 00:47:11,359
lips is also a great stepping stone to

1420
00:47:11,359 --> 00:47:13,200
other measurement tools

1421
00:47:13,200 --> 00:47:14,960
advertisers tend to use

1422
00:47:14,960 --> 00:47:17,119
lift to calibrate the rest of their

1423
00:47:17,119 --> 00:47:19,760
measurement tools

1424
00:47:20,960 --> 00:47:22,559
so we interviewed our early adopters to

1425
00:47:22,559 --> 00:47:24,079
understand more about their journey

1426
00:47:24,079 --> 00:47:26,240
towards more private computation

1427
00:47:26,240 --> 00:47:28,000
our first learning was that

1428
00:47:28,000 --> 00:47:30,480
there is in fact interest

1429
00:47:30,480 --> 00:47:32,240
i see this as the inevitable feature of

1430
00:47:32,240 --> 00:47:35,119
all of our ad platforms

1431
00:47:35,119 --> 00:47:36,880
advertisers understand the value of

1432
00:47:36,880 --> 00:47:38,559
privacy and they see private computation

1433
00:47:38,559 --> 00:47:40,559
as fulfilling that

1434
00:47:40,559 --> 00:47:41,760
they expect the entire digital

1435
00:47:41,760 --> 00:47:43,520
advertising to move in this direction

1436
00:47:43,520 --> 00:47:46,640
over the next one to five years

1437
00:47:47,920 --> 00:47:50,240
so advertisers get it

1438
00:47:50,240 --> 00:47:51,280
that said

1439
00:47:51,280 --> 00:47:52,720
adoption took a lot longer than what we

1440
00:47:52,720 --> 00:47:54,559
expected

1441
00:47:54,559 --> 00:47:56,480
advertiser's primary objective is on

1442
00:47:56,480 --> 00:47:59,280
driving sales and measuring performance

1443
00:47:59,280 --> 00:48:00,960
they compare private computation to

1444
00:48:00,960 --> 00:48:03,200
existing systems that don't require npc

1445
00:48:03,200 --> 00:48:04,160
and thus don't have its additional

1446
00:48:04,160 --> 00:48:06,319
constraints

1447
00:48:06,319 --> 00:48:07,520
a few things that they noticed that

1448
00:48:07,520 --> 00:48:09,359
would increase the urgency were

1449
00:48:09,359 --> 00:48:10,800
regulations forcing them to adopt new

1450
00:48:10,800 --> 00:48:12,160
practices

1451
00:48:12,160 --> 00:48:13,839
other advertisers doing it they tend to

1452
00:48:13,839 --> 00:48:16,000
move as an industry

1453
00:48:16,000 --> 00:48:17,680
and more features and more accuracy that

1454
00:48:17,680 --> 00:48:20,000
would be provided by private computation

1455
00:48:20,000 --> 00:48:22,160
this hasn't deterred us the interest is

1456
00:48:22,160 --> 00:48:23,520
clearly there

1457
00:48:23,520 --> 00:48:24,720
it just means it'll be a longer journey

1458
00:48:24,720 --> 00:48:27,520
than what we were hoping

1459
00:48:28,640 --> 00:48:30,079
so our third learning is that more

1460
00:48:30,079 --> 00:48:31,839
education around npc is needed just all

1461
00:48:31,839 --> 00:48:33,280
around

1462
00:48:33,280 --> 00:48:34,480
this is the first time that the

1463
00:48:34,480 --> 00:48:37,119
advertising industry is seeing npc

1464
00:48:37,119 --> 00:48:38,240
they don't know how to reason about it

1465
00:48:38,240 --> 00:48:40,640
from a product or privacy perspective

1466
00:48:40,640 --> 00:48:42,559
we interacted with business folks legal

1467
00:48:42,559 --> 00:48:44,640
marketing sales engineers and even

1468
00:48:44,640 --> 00:48:46,240
security professionals who had never

1469
00:48:46,240 --> 00:48:48,160
heard of npc

1470
00:48:48,160 --> 00:48:50,000
this was true both on the advertiser

1471
00:48:50,000 --> 00:48:52,800
side and on the meta side

1472
00:48:52,800 --> 00:48:54,800
as an example on the security side we

1473
00:48:54,800 --> 00:48:56,319
have a very tailored setup for

1474
00:48:56,319 --> 00:48:58,319
networking between npc nodes

1475
00:48:58,319 --> 00:49:00,319
but this is different than typical open

1476
00:49:00,319 --> 00:49:02,480
internet tls communication and so it

1477
00:49:02,480 --> 00:49:04,160
required a lot of scrutiny from the

1478
00:49:04,160 --> 00:49:07,280
advertisers that we interacted with

1479
00:49:07,280 --> 00:49:09,200
after our first two advertisers we

1480
00:49:09,200 --> 00:49:10,960
invested significantly in education

1481
00:49:10,960 --> 00:49:13,200
simplification automation validation and

1482
00:49:13,200 --> 00:49:16,520
ease of use

1483
00:49:16,640 --> 00:49:18,480
okay so

1484
00:49:18,480 --> 00:49:19,599
those that's what we've learned on the

1485
00:49:19,599 --> 00:49:20,800
product side let's talk about some of

1486
00:49:20,800 --> 00:49:22,400
the engineering challenges uh that we

1487
00:49:22,400 --> 00:49:26,160
face when trying to operate npc at scale

1488
00:49:26,640 --> 00:49:29,040
before we dive into that i want to spend

1489
00:49:29,040 --> 00:49:32,559
another uh 30 seconds on lyft uh

1490
00:49:32,559 --> 00:49:34,480
so lyft is a really important

1491
00:49:34,480 --> 00:49:36,160
advertising product

1492
00:49:36,160 --> 00:49:38,000
uh

1493
00:49:38,000 --> 00:49:39,280
so

1494
00:49:39,280 --> 00:49:40,880
lyft is about running a randomized

1495
00:49:40,880 --> 00:49:42,880
control trial to help advertisers

1496
00:49:42,880 --> 00:49:45,440
understand the causal impact of their of

1497
00:49:45,440 --> 00:49:47,760
their advertising on facebook

1498
00:49:47,760 --> 00:49:49,040
what you're producing is an aggregate

1499
00:49:49,040 --> 00:49:51,359
statistic at the end so

1500
00:49:51,359 --> 00:49:53,839
if you take a look at the diagram uh you

1501
00:49:53,839 --> 00:49:55,599
start by meta starts by splitting the

1502
00:49:55,599 --> 00:49:57,040
population

1503
00:49:57,040 --> 00:49:59,440
of the uh the relevant population into a

1504
00:49:59,440 --> 00:50:01,119
test and a control group

1505
00:50:01,119 --> 00:50:03,440
uh the advertiser is providing the

1506
00:50:03,440 --> 00:50:05,119
relevant sales

1507
00:50:05,119 --> 00:50:06,240
and then and then you're producing a

1508
00:50:06,240 --> 00:50:08,880
mapping of a test and control group to

1509
00:50:08,880 --> 00:50:11,119
the amount of sales within each group

1510
00:50:11,119 --> 00:50:12,800
and when you have that you can

1511
00:50:12,800 --> 00:50:14,480
you can do statistical analysis on it

1512
00:50:14,480 --> 00:50:16,800
like performing a t-test and that gives

1513
00:50:16,800 --> 00:50:19,440
you a causal impact of the ad that

1514
00:50:19,440 --> 00:50:22,000
you're trying to run

1515
00:50:22,480 --> 00:50:25,520
so how we do this in private computation

1516
00:50:25,520 --> 00:50:27,200
uh the first step

1517
00:50:27,200 --> 00:50:29,680
is private record linkage

1518
00:50:29,680 --> 00:50:31,760
so you perform private record linkage on

1519
00:50:31,760 --> 00:50:34,000
advertiser and meta records this gives

1520
00:50:34,000 --> 00:50:36,240
you a list of private attributed records

1521
00:50:36,240 --> 00:50:38,160
called the spine which we use downstream

1522
00:50:38,160 --> 00:50:40,559
to simplify the calculation this is a

1523
00:50:40,559 --> 00:50:42,160
variant of private set intersection

1524
00:50:42,160 --> 00:50:44,400
neither party learns anything about the

1525
00:50:44,400 --> 00:50:45,760
other's information or records during

1526
00:50:45,760 --> 00:50:48,079
this step

1527
00:50:48,480 --> 00:50:50,880
second you apply a function in npc

1528
00:50:50,880 --> 00:50:53,119
called an attribution rule

1529
00:50:53,119 --> 00:50:54,400
you do this on the private records you

1530
00:50:54,400 --> 00:50:56,079
just generated to produce private

1531
00:50:56,079 --> 00:50:57,920
attributed records

1532
00:50:57,920 --> 00:51:00,240
the main attribution rule uh as an

1533
00:51:00,240 --> 00:51:02,800
example is called is a time comparison

1534
00:51:02,800 --> 00:51:05,119
so you just want to ensure that

1535
00:51:05,119 --> 00:51:06,880
you're only measuring the sales that

1536
00:51:06,880 --> 00:51:08,720
occurred after an ad was showing was

1537
00:51:08,720 --> 00:51:10,959
shown

1538
00:51:11,040 --> 00:51:12,400
finally you aggregate those private

1539
00:51:12,400 --> 00:51:13,760
attributed records

1540
00:51:13,760 --> 00:51:15,680
and anonymize the results

1541
00:51:15,680 --> 00:51:17,440
so for instance you might use some kind

1542
00:51:17,440 --> 00:51:19,359
of k9 amenity threshold or differential

1543
00:51:19,359 --> 00:51:22,079
privacy and again we use mpc mpc in this

1544
00:51:22,079 --> 00:51:23,359
step

1545
00:51:23,359 --> 00:51:24,960
uh this is all open source um if you're

1546
00:51:24,960 --> 00:51:26,640
interested um

1547
00:51:26,640 --> 00:51:29,200
i'll have the links at the end of the uh

1548
00:51:29,200 --> 00:51:30,400
presentation but you can see it in the

1549
00:51:30,400 --> 00:51:31,680
bottom left of the screen just a little

1550
00:51:31,680 --> 00:51:33,200
tiny um

1551
00:51:33,200 --> 00:51:34,559
and

1552
00:51:34,559 --> 00:51:37,839
fb.me pcs

1553
00:51:39,760 --> 00:51:42,079
so private record linkage is uh highly

1554
00:51:42,079 --> 00:51:44,559
complex

1555
00:51:44,640 --> 00:51:46,160
the most complex problem to solve is

1556
00:51:46,160 --> 00:51:49,040
that you often have multiple records

1557
00:51:49,040 --> 00:51:51,280
that map to the same unit

1558
00:51:51,280 --> 00:51:52,559
so as an example you might have like

1559
00:51:52,559 --> 00:51:54,319
multiple records that map to the same

1560
00:51:54,319 --> 00:51:55,839
person

1561
00:51:55,839 --> 00:51:57,920
on the right hand side is the protocol

1562
00:51:57,920 --> 00:51:59,680
that we've built to solve for this it's

1563
00:51:59,680 --> 00:52:02,000
open source we have a paper out about it

1564
00:52:02,000 --> 00:52:03,040
you can visit the link in the bottom

1565
00:52:03,040 --> 00:52:04,880
left of the screen to

1566
00:52:04,880 --> 00:52:06,400
see more about it

1567
00:52:06,400 --> 00:52:07,119
so

1568
00:52:07,119 --> 00:52:09,440
uh you have a mini to mini mapping in

1569
00:52:09,440 --> 00:52:12,000
this scenario uh because you have

1570
00:52:12,000 --> 00:52:13,440
multiple records that map to the same

1571
00:52:13,440 --> 00:52:15,359
unit or you know the same record mapping

1572
00:52:15,359 --> 00:52:17,040
to multiple units and you have to find a

1573
00:52:17,040 --> 00:52:19,200
way to pick a mapping

1574
00:52:19,200 --> 00:52:20,240
you have a number of different ways to

1575
00:52:20,240 --> 00:52:21,280
do this

1576
00:52:21,280 --> 00:52:22,559
you could use waterfall logic to

1577
00:52:22,559 --> 00:52:24,319
prioritize certain records certain types

1578
00:52:24,319 --> 00:52:26,319
of records over others or you could use

1579
00:52:26,319 --> 00:52:28,160
an algorithm that offers partial or

1580
00:52:28,160 --> 00:52:29,200
split credit amongst the different

1581
00:52:29,200 --> 00:52:31,119
records

1582
00:52:31,119 --> 00:52:32,640
any algorithm that you develop has to

1583
00:52:32,640 --> 00:52:34,319
support sharding

1584
00:52:34,319 --> 00:52:36,640
meta's scale requires that at no point

1585
00:52:36,640 --> 00:52:37,839
in your algorithm can you have

1586
00:52:37,839 --> 00:52:39,119
everything on one machine it just it

1587
00:52:39,119 --> 00:52:41,040
won't fit

1588
00:52:41,040 --> 00:52:42,720
for a single record uh private record

1589
00:52:42,720 --> 00:52:44,480
linkage this is simple you just use the

1590
00:52:44,480 --> 00:52:46,319
same sharding or hashing algorithm on

1591
00:52:46,319 --> 00:52:47,760
either side and then you just make sure

1592
00:52:47,760 --> 00:52:50,160
that uh

1593
00:52:50,160 --> 00:52:53,520
that's everything maps to the same shard

1594
00:52:53,520 --> 00:52:55,200
but for multiple records you have a

1595
00:52:55,200 --> 00:52:56,960
different definition of what a match

1596
00:52:56,960 --> 00:52:58,880
means and so

1597
00:52:58,880 --> 00:52:59,839
you can't assume that they're all on the

1598
00:52:59,839 --> 00:53:00,880
same shard and you have to set up

1599
00:53:00,880 --> 00:53:02,960
cross-chart communication and this can

1600
00:53:02,960 --> 00:53:05,599
be complex and slow

1601
00:53:05,599 --> 00:53:06,960
uh the different use cases that we have

1602
00:53:06,960 --> 00:53:08,800
to support in ads means that you end up

1603
00:53:08,800 --> 00:53:10,960
with a proliferation of custom protocols

1604
00:53:10,960 --> 00:53:12,880
to fit each different use case

1605
00:53:12,880 --> 00:53:14,720
this this doesn't scale

1606
00:53:14,720 --> 00:53:15,839
the development of each of these can

1607
00:53:15,839 --> 00:53:17,359
take up to a year that cryptography is

1608
00:53:17,359 --> 00:53:19,760
complex the debugging is hard and you're

1609
00:53:19,760 --> 00:53:21,040
dealing with really sensitive data so

1610
00:53:21,040 --> 00:53:23,599
you have to be really careful

1611
00:53:23,599 --> 00:53:25,920
uh as a result we're developing a new

1612
00:53:25,920 --> 00:53:27,280
generic record linkage framework that

1613
00:53:27,280 --> 00:53:28,880
can be extended and reuse components

1614
00:53:28,880 --> 00:53:31,920
across the different use cases

1615
00:53:32,319 --> 00:53:33,920
last but definitely not least the

1616
00:53:33,920 --> 00:53:36,160
quality of the records can vary wildly

1617
00:53:36,160 --> 00:53:38,160
depending on the advertiser

1618
00:53:38,160 --> 00:53:39,040
the

1619
00:53:39,040 --> 00:53:41,119
information on either side is changing

1620
00:53:41,119 --> 00:53:43,200
rapidly you can't just compute it once a

1621
00:53:43,200 --> 00:53:44,319
month you have to do it every

1622
00:53:44,319 --> 00:53:46,960
computation

1623
00:53:50,160 --> 00:53:51,920
all right so at scale you also have to

1624
00:53:51,920 --> 00:53:55,960
deal with supporting large computations

1625
00:53:56,640 --> 00:53:57,599
so

1626
00:53:57,599 --> 00:53:58,960
we decided to start with our largest

1627
00:53:58,960 --> 00:54:00,480
possible advertiser to prove that we

1628
00:54:00,480 --> 00:54:03,040
could scale and run npc uh to meet its

1629
00:54:03,040 --> 00:54:05,280
needs this advertiser

1630
00:54:05,280 --> 00:54:07,280
ran at 1000x of scale of our next set of

1631
00:54:07,280 --> 00:54:09,520
advertisers so we felt we could meet its

1632
00:54:09,520 --> 00:54:10,800
needs then we could meet any other

1633
00:54:10,800 --> 00:54:12,480
advertisers needs

1634
00:54:12,480 --> 00:54:14,079
we needed to prove that npc could be

1635
00:54:14,079 --> 00:54:16,559
fast uh fast enough cheap enough and

1636
00:54:16,559 --> 00:54:20,079
operate on large enough amounts of data

1637
00:54:20,079 --> 00:54:22,240
our initial target was one billion rows

1638
00:54:22,240 --> 00:54:24,319
in two hours or one one thousandth the

1639
00:54:24,319 --> 00:54:25,680
cost relative to the cost of the

1640
00:54:25,680 --> 00:54:27,440
campaign they're trying to measure

1641
00:54:27,440 --> 00:54:29,040
so as an example if an advertiser is

1642
00:54:29,040 --> 00:54:30,160
spending a thousand dollars on an

1643
00:54:30,160 --> 00:54:32,000
advertising campaign the communication

1644
00:54:32,000 --> 00:54:34,079
or the computation should cost no more

1645
00:54:34,079 --> 00:54:36,160
than one dollar

1646
00:54:36,160 --> 00:54:37,520
it's worth mentioning that this type of

1647
00:54:37,520 --> 00:54:39,520
computation is happening uh many times

1648
00:54:39,520 --> 00:54:42,079
per week uh you know often times up to

1649
00:54:42,079 --> 00:54:44,880
like once or more per day

1650
00:54:44,880 --> 00:54:47,040
so this was our target uh 1.5 years ago

1651
00:54:47,040 --> 00:54:47,839
and we're pretty proud of this

1652
00:54:47,839 --> 00:54:50,400
accomplishment

1653
00:54:51,280 --> 00:54:52,720
so how do we support that many rows that

1654
00:54:52,720 --> 00:54:53,760
quickly

1655
00:54:53,760 --> 00:54:55,200
the first decision we made was to

1656
00:54:55,200 --> 00:54:57,200
support uh was to use emp toolkit for

1657
00:54:57,200 --> 00:54:58,960
our mpc engine

1658
00:54:58,960 --> 00:55:01,119
we felt it had a emp toolkit is an open

1659
00:55:01,119 --> 00:55:03,359
source gobbled circuits npc engine and

1660
00:55:03,359 --> 00:55:04,720
we we found that it had good trade-offs

1661
00:55:04,720 --> 00:55:07,359
in terms of memory usage performance and

1662
00:55:07,359 --> 00:55:08,880
cost

1663
00:55:08,880 --> 00:55:10,319
many of the other npc engines we tried

1664
00:55:10,319 --> 00:55:11,839
were actually implicitly limited to

1665
00:55:11,839 --> 00:55:13,280
hundreds of thousands of rows by

1666
00:55:13,280 --> 00:55:15,200
internal engine limitations

1667
00:55:15,200 --> 00:55:16,559
we released a paper with our findings on

1668
00:55:16,559 --> 00:55:18,559
this last year

1669
00:55:18,559 --> 00:55:20,559
so measurement is easily chartable

1670
00:55:20,559 --> 00:55:22,720
it's conceptually similar to a mapreduce

1671
00:55:22,720 --> 00:55:24,480
so uh but you need to do so in a

1672
00:55:24,480 --> 00:55:26,000
privacy-safe way

1673
00:55:26,000 --> 00:55:27,680
so the diagram on the the diagram on the

1674
00:55:27,680 --> 00:55:30,799
left shows how we do that

1675
00:55:30,799 --> 00:55:32,000
we built a technique called private

1676
00:55:32,000 --> 00:55:34,160
scaling which outputs secret shares that

1677
00:55:34,160 --> 00:55:35,680
are rejoined in npc by a shard

1678
00:55:35,680 --> 00:55:36,880
aggregator

1679
00:55:36,880 --> 00:55:38,319
you can see it on github by following

1680
00:55:38,319 --> 00:55:39,680
the link on the bottom left of the

1681
00:55:39,680 --> 00:55:42,000
screen

1682
00:55:43,200 --> 00:55:46,079
okay so how do you make it cheap enough

1683
00:55:46,079 --> 00:55:47,760
although there is often much talk of the

1684
00:55:47,760 --> 00:55:50,000
cost of mpc especially general purpose

1685
00:55:50,000 --> 00:55:50,960
mpc

1686
00:55:50,960 --> 00:55:52,559
uh private computation today costs

1687
00:55:52,559 --> 00:55:54,240
significantly less than the budget

1688
00:55:54,240 --> 00:55:55,680
advertisers typically allocate towards

1689
00:55:55,680 --> 00:55:57,680
doing their measurement

1690
00:55:57,680 --> 00:55:59,119
typically the cost per run for

1691
00:55:59,119 --> 00:56:00,480
attribution is about the cost of

1692
00:56:00,480 --> 00:56:02,720
attending a movie

1693
00:56:02,720 --> 00:56:04,720
we measure by normalizing the cost

1694
00:56:04,720 --> 00:56:06,240
the cost and performance in terms of a

1695
00:56:06,240 --> 00:56:08,400
million input rows and then the cost

1696
00:56:08,400 --> 00:56:11,040
literally scales from that

1697
00:56:11,040 --> 00:56:12,640
for attribution advertisers tend to look

1698
00:56:12,640 --> 00:56:14,400
at results daily and then for lift is

1699
00:56:14,400 --> 00:56:17,440
typically at least once a month

1700
00:56:17,440 --> 00:56:18,960
some advertisers have many more input

1701
00:56:18,960 --> 00:56:20,960
rows and the costs can uh can go up

1702
00:56:20,960 --> 00:56:23,359
significantly by 10 to 20x but these

1703
00:56:23,359 --> 00:56:24,880
advertisers are also correspondingly

1704
00:56:24,880 --> 00:56:26,480
much bigger and so they have much bigger

1705
00:56:26,480 --> 00:56:28,720
budgets in all cases we're well within

1706
00:56:28,720 --> 00:56:31,799
the budget

1707
00:56:31,920 --> 00:56:33,200
there is a clear trade-off though in

1708
00:56:33,200 --> 00:56:35,920
terms of adding features and cost

1709
00:56:35,920 --> 00:56:37,359
our lift gain is much more full feature

1710
00:56:37,359 --> 00:56:39,359
than attribution and as a result it's

1711
00:56:39,359 --> 00:56:41,359
five times more expensive

1712
00:56:41,359 --> 00:56:42,720
this is despite the fact that our

1713
00:56:42,720 --> 00:56:45,200
algorithm is simpler lyft is actually

1714
00:56:45,200 --> 00:56:46,720
just a special simpler case of

1715
00:56:46,720 --> 00:56:48,319
attribution

1716
00:56:48,319 --> 00:56:49,359
but it supports a lot more product

1717
00:56:49,359 --> 00:56:51,359
features

1718
00:56:51,359 --> 00:56:53,040
this highlights the underlying problem

1719
00:56:53,040 --> 00:56:54,640
that every feature you add results in a

1720
00:56:54,640 --> 00:56:58,079
large increase in cost and wall time

1721
00:56:58,079 --> 00:56:59,520
you might ask why is this a problem why

1722
00:56:59,520 --> 00:57:01,440
do we have so many features but in a

1723
00:57:01,440 --> 00:57:03,040
mature measurement product there are

1724
00:57:03,040 --> 00:57:04,480
many valid different use cases you need

1725
00:57:04,480 --> 00:57:06,640
to support

1726
00:57:06,640 --> 00:57:08,559
as an example you might want to

1727
00:57:08,559 --> 00:57:10,240
support histogram outputs for each of

1728
00:57:10,240 --> 00:57:12,240
your test control groups not just total

1729
00:57:12,240 --> 00:57:13,599
amounts um

1730
00:57:13,599 --> 00:57:15,040
so

1731
00:57:15,040 --> 00:57:16,720
you might want to also run attribution

1732
00:57:16,720 --> 00:57:17,839
for each of these test and control

1733
00:57:17,839 --> 00:57:19,440
groups so you can compare that to your

1734
00:57:19,440 --> 00:57:21,359
to your heuristics that you're using

1735
00:57:21,359 --> 00:57:22,799
you might want to run like multiple

1736
00:57:22,799 --> 00:57:25,920
different uh study types within the uh

1737
00:57:25,920 --> 00:57:27,440
the test in the control group break down

1738
00:57:27,440 --> 00:57:28,880
by different objects that are within

1739
00:57:28,880 --> 00:57:30,559
each um

1740
00:57:30,559 --> 00:57:32,240
within each ad you might

1741
00:57:32,240 --> 00:57:33,760
want to break a breakdown by country you

1742
00:57:33,760 --> 00:57:34,880
might want to add custom breakdowns

1743
00:57:34,880 --> 00:57:38,400
depending on what the advertiser

1744
00:57:38,400 --> 00:57:40,480
situation is um then you might decide

1745
00:57:40,480 --> 00:57:41,839
you want to do ml training to predict

1746
00:57:41,839 --> 00:57:42,720
the whole thing so you have to add

1747
00:57:42,720 --> 00:57:44,400
features for that

1748
00:57:44,400 --> 00:57:46,480
this can get out of hand um it's it's

1749
00:57:46,480 --> 00:57:47,920
pretty common that you end up with

1750
00:57:47,920 --> 00:57:51,119
thousands of columns per row

1751
00:57:51,119 --> 00:57:53,119
these also change rapidly

1752
00:57:53,119 --> 00:57:54,640
uh you're you're dealing with companies

1753
00:57:54,640 --> 00:57:56,319
on either side that are the size of

1754
00:57:56,319 --> 00:57:57,599
cities

1755
00:57:57,599 --> 00:58:00,480
you uh so you you uh you have developers

1756
00:58:00,480 --> 00:58:01,760
that are they're not cryptographers

1757
00:58:01,760 --> 00:58:03,920
that's uh uh

1758
00:58:03,920 --> 00:58:06,079
that that have features that they want

1759
00:58:06,079 --> 00:58:08,880
to that they want to support

1760
00:58:08,880 --> 00:58:10,640
attribution has also has many variants

1761
00:58:10,640 --> 00:58:12,240
and features

1762
00:58:12,240 --> 00:58:13,920
we expect as we add them the cost and

1763
00:58:13,920 --> 00:58:16,960
the performance of that will also go up

1764
00:58:16,960 --> 00:58:19,920
so how do we address that

1765
00:58:20,319 --> 00:58:21,520
our plan is private computation

1766
00:58:21,520 --> 00:58:22,960
framework

1767
00:58:22,960 --> 00:58:24,720
private computation framework is our

1768
00:58:24,720 --> 00:58:26,640
general purpose npc engine

1769
00:58:26,640 --> 00:58:28,640
version two switches over from an emp

1770
00:58:28,640 --> 00:58:30,400
toolkit based backend to a meta built

1771
00:58:30,400 --> 00:58:32,480
backend

1772
00:58:32,480 --> 00:58:35,839
this new npc engine is fast

1773
00:58:35,839 --> 00:58:37,440
some key features it uh it's we're

1774
00:58:37,440 --> 00:58:39,040
switching from global circuits to secret

1775
00:58:39,040 --> 00:58:40,799
sharing protocol and has a standard

1776
00:58:40,799 --> 00:58:42,079
library of features that we can use that

1777
00:58:42,079 --> 00:58:43,280
the developer can use to improve

1778
00:58:43,280 --> 00:58:46,160
performance such as oram

1779
00:58:46,160 --> 00:58:48,079
as it results in a 100x reduction in

1780
00:58:48,079 --> 00:58:49,440
network usage a forex increase in

1781
00:58:49,440 --> 00:58:50,640
performance

1782
00:58:50,640 --> 00:58:52,559
now there's a 30x reduction in cost as

1783
00:58:52,559 --> 00:58:55,119
compared to emp

1784
00:58:55,119 --> 00:58:56,880
it's fully open source today

1785
00:58:56,880 --> 00:58:58,720
if you go to the bottom left of this

1786
00:58:58,720 --> 00:58:59,760
link at the bottom left of the screen

1787
00:58:59,760 --> 00:59:01,040
you can see it

1788
00:59:01,040 --> 00:59:02,880
we're working on a white paper and it'll

1789
00:59:02,880 --> 00:59:04,720
be production ready uh by the end of the

1790
00:59:04,720 --> 00:59:06,799
staff

1791
00:59:06,799 --> 00:59:08,559
a few key design principles we took when

1792
00:59:08,559 --> 00:59:10,160
we built this

1793
00:59:10,160 --> 00:59:11,440
the first was a protocol independent

1794
00:59:11,440 --> 00:59:12,799
front end

1795
00:59:12,799 --> 00:59:14,240
this allows non-cryptographers to

1796
00:59:14,240 --> 00:59:16,000
iterate rapidly and add and remove

1797
00:59:16,000 --> 00:59:17,359
product features as they wish without

1798
00:59:17,359 --> 00:59:20,480
redesigning the underlying protocol

1799
00:59:20,480 --> 00:59:21,839
it allows us also to make back-end

1800
00:59:21,839 --> 00:59:23,040
optimizations without affecting the

1801
00:59:23,040 --> 00:59:24,160
front end

1802
00:59:24,160 --> 00:59:25,599
and allows us to add in new protocols

1803
00:59:25,599 --> 00:59:27,200
later for different for different use

1804
00:59:27,200 --> 00:59:28,960
cases

1805
00:59:28,960 --> 00:59:30,559
we focus a lot on developer ease of use

1806
00:59:30,559 --> 00:59:33,520
as well so developing npc applications

1807
00:59:33,520 --> 00:59:35,839
is hard

1808
00:59:35,839 --> 00:59:37,920
a lot of times when you're debugging

1809
00:59:37,920 --> 00:59:39,119
you

1810
00:59:39,119 --> 00:59:40,799
by design you can't see any of the

1811
00:59:40,799 --> 00:59:43,040
intermediate data

1812
00:59:43,040 --> 00:59:45,599
and so in pcf 2.0

1813
00:59:45,599 --> 00:59:47,119
you can develop in clear text and then

1814
00:59:47,119 --> 00:59:48,480
with a simple configuration change

1815
00:59:48,480 --> 00:59:51,839
change to a secure back end

1816
00:59:54,160 --> 00:59:56,799
so at scale you also have to support

1817
00:59:56,799 --> 01:00:00,119
a ton of advertisers

1818
01:00:00,160 --> 01:00:01,760
has over 10 million advertisers and

1819
01:00:01,760 --> 01:00:04,160
there's a wide variety inside of that

1820
01:00:04,160 --> 01:00:06,160
we support huge corporations that have

1821
01:00:06,160 --> 01:00:07,760
teams of marketers data scientists and

1822
01:00:07,760 --> 01:00:08,880
engineers

1823
01:00:08,880 --> 01:00:10,400
but there's also a long tail of small

1824
01:00:10,400 --> 01:00:11,920
single person businesses that are

1825
01:00:11,920 --> 01:00:13,359
non-technical

1826
01:00:13,359 --> 01:00:14,720
you can't expect those businesses to

1827
01:00:14,720 --> 01:00:16,960
deploy npc

1828
01:00:16,960 --> 01:00:18,960
the way we think about this is delegated

1829
01:00:18,960 --> 01:00:21,119
versus direct integrations and this is

1830
01:00:21,119 --> 01:00:23,359
just about who's deploying npc so a

1831
01:00:23,359 --> 01:00:25,119
great example of delegated is priya

1832
01:00:25,119 --> 01:00:26,240
which we've talked a bunch about at the

1833
01:00:26,240 --> 01:00:28,799
conference

1834
01:00:28,799 --> 01:00:30,799
our focus right now is direct

1835
01:00:30,799 --> 01:00:32,880
with a plan to simplify over time

1836
01:00:32,880 --> 01:00:34,160
the number of direct advertisers is

1837
01:00:34,160 --> 01:00:35,839
small but if you look at the overall ad

1838
01:00:35,839 --> 01:00:37,359
market by spend

1839
01:00:37,359 --> 01:00:40,558
it represents the bulk of it

1840
01:00:41,200 --> 01:00:43,040
even for direct advertisers deploying

1841
01:00:43,040 --> 01:00:45,359
npc is too difficult

1842
01:00:45,359 --> 01:00:47,200
on average it takes three months from

1843
01:00:47,200 --> 01:00:48,480
beginning to end

1844
01:00:48,480 --> 01:00:50,319
our target by the end of the end of the

1845
01:00:50,319 --> 01:00:53,359
year is 24 hours

1846
01:00:53,359 --> 01:00:54,880
this is the biggest risk for mpc in our

1847
01:00:54,880 --> 01:00:56,799
mind can we actually make it easy enough

1848
01:00:56,799 --> 01:00:58,400
to use they're comparing to existing

1849
01:00:58,400 --> 01:00:59,920
systems that are

1850
01:00:59,920 --> 01:01:02,400
dead simple to set up

1851
01:01:02,400 --> 01:01:04,559
we've made lots of improvements uh we've

1852
01:01:04,559 --> 01:01:06,319
improved from six months to three a lot

1853
01:01:06,319 --> 01:01:07,599
of this has been education and process

1854
01:01:07,599 --> 01:01:08,559
and some of the things i mentioned

1855
01:01:08,559 --> 01:01:09,520
before

1856
01:01:09,520 --> 01:01:12,240
we shipped a one-click ui last week

1857
01:01:12,240 --> 01:01:13,920
which we hope will

1858
01:01:13,920 --> 01:01:16,160
lead to significant improvements in

1859
01:01:16,160 --> 01:01:19,119
onboarding speed as well

1860
01:01:19,119 --> 01:01:21,200
let's spend a minute talking about the

1861
01:01:21,200 --> 01:01:22,160
what the advertisers are actually

1862
01:01:22,160 --> 01:01:23,599
deploying so we can understand why it's

1863
01:01:23,599 --> 01:01:25,440
difficult to deploy

1864
01:01:25,440 --> 01:01:26,720
the diagram on the right shows a high

1865
01:01:26,720 --> 01:01:27,760
level architecture for private

1866
01:01:27,760 --> 01:01:29,520
computation

1867
01:01:29,520 --> 01:01:31,440
you'll notice that it's symmetric meta

1868
01:01:31,440 --> 01:01:32,799
and the advertiser are running the same

1869
01:01:32,799 --> 01:01:34,400
code base top to bottom

1870
01:01:34,400 --> 01:01:36,000
this is helpful for trust which is

1871
01:01:36,000 --> 01:01:37,280
critical both for measurement and for

1872
01:01:37,280 --> 01:01:38,880
privacy

1873
01:01:38,880 --> 01:01:41,040
this is all open sourced and it's called

1874
01:01:41,040 --> 01:01:42,799
the private computation platform

1875
01:01:42,799 --> 01:01:43,920
the link is in the bottom left of the

1876
01:01:43,920 --> 01:01:45,280
screen and i'll share it again at the

1877
01:01:45,280 --> 01:01:47,200
end

1878
01:01:47,200 --> 01:01:49,760
private communication is serverless

1879
01:01:49,760 --> 01:01:51,280
measurement computation is fundamentally

1880
01:01:51,280 --> 01:01:53,119
bursting you need to do some calculation

1881
01:01:53,119 --> 01:01:54,079
at some interval and then when you're

1882
01:01:54,079 --> 01:01:56,720
done you don't need to do anything else

1883
01:01:56,720 --> 01:01:57,839
support this

1884
01:01:57,839 --> 01:01:59,200
our computations are serverless so

1885
01:01:59,200 --> 01:02:01,680
example as an example on aws we deploy

1886
01:02:01,680 --> 01:02:04,079
docker containers on fargate

1887
01:02:04,079 --> 01:02:05,280
we tend to spend up a few hundred of

1888
01:02:05,280 --> 01:02:07,839
these per computation

1889
01:02:08,160 --> 01:02:09,359
uh

1890
01:02:09,359 --> 01:02:10,720
a big component of our architecture is

1891
01:02:10,720 --> 01:02:13,359
the simplified deployment so advertisers

1892
01:02:13,359 --> 01:02:14,480
as i've mentioned struggle to get

1893
01:02:14,480 --> 01:02:16,240
everything set up but also to maintain

1894
01:02:16,240 --> 01:02:17,520
it

1895
01:02:17,520 --> 01:02:19,119
we use terraform

1896
01:02:19,119 --> 01:02:20,880
docker and we have an infrastructure

1897
01:02:20,880 --> 01:02:22,640
management service that now provides

1898
01:02:22,640 --> 01:02:24,160
that one click deployment as well as

1899
01:02:24,160 --> 01:02:26,799
other simplified deployment tools

1900
01:02:26,799 --> 01:02:28,559
uh we also have a big data management

1901
01:02:28,559 --> 01:02:30,640
component so advertisers really struggle

1902
01:02:30,640 --> 01:02:32,319
to get their data in in the right format

1903
01:02:32,319 --> 01:02:33,839
encrypted with the right rotating key

1904
01:02:33,839 --> 01:02:36,559
hashed just the right way

1905
01:02:36,559 --> 01:02:38,400
advertisers also struggle to collect the

1906
01:02:38,400 --> 01:02:40,160
relevant data some are much better at

1907
01:02:40,160 --> 01:02:41,680
this than others we've had so many

1908
01:02:41,680 --> 01:02:43,200
advertisers who go through the whole

1909
01:02:43,200 --> 01:02:44,640
process of setting everything up only to

1910
01:02:44,640 --> 01:02:46,079
run their first computation and to

1911
01:02:46,079 --> 01:02:47,440
realize that they input the wrong data

1912
01:02:47,440 --> 01:02:49,760
into the computation

1913
01:02:49,760 --> 01:02:51,440
this is really hard to debug because by

1914
01:02:51,440 --> 01:02:52,640
design we can't see anything on the

1915
01:02:52,640 --> 01:02:54,640
advertiser side

1916
01:02:54,640 --> 01:02:56,640
so we've tried really hard to make this

1917
01:02:56,640 --> 01:02:57,920
simple and automated with lots of

1918
01:02:57,920 --> 01:03:02,039
validation and tooling along the way

1919
01:03:02,319 --> 01:03:03,520
although our focus right now is on

1920
01:03:03,520 --> 01:03:05,440
direct integrations here are some ideas

1921
01:03:05,440 --> 01:03:06,880
we've we're exploring for delegated

1922
01:03:06,880 --> 01:03:08,480
integrations

1923
01:03:08,480 --> 01:03:10,079
so we're excited about the idea of an

1924
01:03:10,079 --> 01:03:12,000
mpc consortium

1925
01:03:12,000 --> 01:03:13,200
centralized services are great for

1926
01:03:13,200 --> 01:03:14,400
accessibility

1927
01:03:14,400 --> 01:03:15,680
you just throw your data to it and you

1928
01:03:15,680 --> 01:03:18,000
get your results but of course with a

1929
01:03:18,000 --> 01:03:19,760
classical central service you don't

1930
01:03:19,760 --> 01:03:20,880
preserve the privacy of the data when

1931
01:03:20,880 --> 01:03:21,920
you do that

1932
01:03:21,920 --> 01:03:24,160
we think a consortium of uh

1933
01:03:24,160 --> 01:03:25,680
consortium running mpc could thread the

1934
01:03:25,680 --> 01:03:27,839
needle uh on and provide sufficient

1935
01:03:27,839 --> 01:03:30,000
guarantees on privacy while

1936
01:03:30,000 --> 01:03:32,079
also improving accessibility

1937
01:03:32,079 --> 01:03:34,000
we'll also be excited about the idea of

1938
01:03:34,000 --> 01:03:36,160
what we call partner integrations

1939
01:03:36,160 --> 01:03:37,839
advertisers are already delegating their

1940
01:03:37,839 --> 01:03:39,039
commerce and measurement needs to

1941
01:03:39,039 --> 01:03:40,799
third-party services

1942
01:03:40,799 --> 01:03:42,400
they tend to trust these services so as

1943
01:03:42,400 --> 01:03:43,839
an example if you're running a

1944
01:03:43,839 --> 01:03:46,319
storefront you might use shopify

1945
01:03:46,319 --> 01:03:47,839
or exploring systems that allow

1946
01:03:47,839 --> 01:03:49,200
advertisers to continue to leverage

1947
01:03:49,200 --> 01:03:50,799
those existing integrations and just add

1948
01:03:50,799 --> 01:03:53,119
npc on top

1949
01:03:53,119 --> 01:03:54,559
we're excited about the idea of managed

1950
01:03:54,559 --> 01:03:56,000
npc as well

1951
01:03:56,000 --> 01:03:58,240
so the idea here is to uh to separate

1952
01:03:58,240 --> 01:04:00,079
the the infrastructure deployment from

1953
01:04:00,079 --> 01:04:02,559
uh the data security

1954
01:04:02,559 --> 01:04:04,319
uh there's difficult privacy and

1955
01:04:04,319 --> 01:04:06,079
security trade-offs in each of these but

1956
01:04:06,079 --> 01:04:09,200
we're excited for the promise

1957
01:04:10,319 --> 01:04:12,400
all right so

1958
01:04:12,400 --> 01:04:14,079
these are the links um i hope you can

1959
01:04:14,079 --> 01:04:15,680
see them now um

1960
01:04:15,680 --> 01:04:16,720
all right

1961
01:04:16,720 --> 01:04:18,960
so it's all open source

1962
01:04:18,960 --> 01:04:20,640
the first the first link um private

1963
01:04:20,640 --> 01:04:23,359
computation solutions um you can see how

1964
01:04:23,359 --> 01:04:24,720
lift and attribution work by following

1965
01:04:24,720 --> 01:04:26,880
that link uh the second link private

1966
01:04:26,880 --> 01:04:29,280
computation platform uh

1967
01:04:29,280 --> 01:04:31,200
fee that means pcp

1968
01:04:31,200 --> 01:04:33,200
our new mpc engine you can find that

1969
01:04:33,200 --> 01:04:34,960
private computation framework at fe dot

1970
01:04:34,960 --> 01:04:37,359
me pcf i mean you can learn more about

1971
01:04:37,359 --> 01:04:39,760
how record linkage works

1972
01:04:39,760 --> 01:04:40,880
that open source tool called private

1973
01:04:40,880 --> 01:04:45,680
identity and is at fb that me slash pid

1974
01:04:45,680 --> 01:04:48,079
um i'm not going to go over each of the

1975
01:04:48,079 --> 01:04:49,520
areas that we work

1976
01:04:49,520 --> 01:04:51,599
on privacy tech at meta as you can see

1977
01:04:51,599 --> 01:04:54,559
there's a wide diversity of them

1978
01:04:54,559 --> 01:04:57,280
and we're hiring for a variety of open

1979
01:04:57,280 --> 01:04:58,559
positions on any of these teams so if

1980
01:04:58,559 --> 01:05:02,079
you're interested feel free to reach out

1981
01:05:02,240 --> 01:05:03,599
and a quick plug

1982
01:05:03,599 --> 01:05:06,880
we have a rfp out right now so

1983
01:05:06,880 --> 01:05:08,000
we're eager to continue our

1984
01:05:08,000 --> 01:05:10,160
collaboration with faculty and academia

1985
01:05:10,160 --> 01:05:12,240
we recently published details about this

1986
01:05:12,240 --> 01:05:14,160
rfp we're awarding 10 research grants

1987
01:05:14,160 --> 01:05:15,839
for proposals in the privacy enhancing

1988
01:05:15,839 --> 01:05:16,880
tech space

1989
01:05:16,880 --> 01:05:18,200
for more info go to

1990
01:05:18,200 --> 01:05:20,240
research.fb.com the deadline for

1991
01:05:20,240 --> 01:05:23,200
submissions is april 20th

1992
01:05:23,200 --> 01:05:24,319
uh if you want to learn more about

1993
01:05:24,319 --> 01:05:26,319
private computation um you know i'm here

1994
01:05:26,319 --> 01:05:28,400
so you can ask me questions or uh you

1995
01:05:28,400 --> 01:05:31,760
can contact me at jlreyes fb.com

1996
01:05:31,760 --> 01:05:34,079
uh sanjay couldn't be here today

1997
01:05:34,079 --> 01:05:35,119
but if you want to learn more about

1998
01:05:35,119 --> 01:05:37,520
cryptography at meta in general

1999
01:05:37,520 --> 01:05:38,400
then

2000
01:05:38,400 --> 01:05:41,680
sanjay fb.com

2001
01:05:42,400 --> 01:05:43,280
okay

2002
01:05:43,280 --> 01:05:46,520
any questions

2003
01:05:52,559 --> 01:05:54,160
thank you for a great talk nigel you're

2004
01:05:54,160 --> 01:05:55,520
first

2005
01:05:55,520 --> 01:05:57,280
it's really amazing really really cool

2006
01:05:57,280 --> 01:06:00,000
great to see this deployed um so just to

2007
01:06:00,000 --> 01:06:02,839
understand the security npc's about um

2008
01:06:02,839 --> 01:06:05,119
separation yeah so you're separating

2009
01:06:05,119 --> 01:06:07,039
between the advertiser and you yeah

2010
01:06:07,039 --> 01:06:08,880
that's correct and so the first thing is

2011
01:06:08,880 --> 01:06:10,799
you had as you had double circuits

2012
01:06:10,799 --> 01:06:12,400
because that's a two-party thing how are

2013
01:06:12,400 --> 01:06:13,760
you doing the secret sharing with just

2014
01:06:13,760 --> 01:06:15,119
two parties

2015
01:06:15,119 --> 01:06:16,480
how are we in the secret sharing sorry i

2016
01:06:16,480 --> 01:06:17,680
didn't hear that so you said you've

2017
01:06:17,680 --> 01:06:19,680
moved to a secret sharing based engine

2018
01:06:19,680 --> 01:06:21,839
yeah but with two parties how are you

2019
01:06:21,839 --> 01:06:23,839
kind of doing that how are you

2020
01:06:23,839 --> 01:06:25,359
yeah so so we actually have a white

2021
01:06:25,359 --> 01:06:26,640
paper that's going to be um out with

2022
01:06:26,640 --> 01:06:29,119
this um in like the next uh month or two

2023
01:06:29,119 --> 01:06:31,359
um i am not a cryptographer so i can't

2024
01:06:31,359 --> 01:06:32,960
get into the details um also i don't

2025
01:06:32,960 --> 01:06:34,079
want to

2026
01:06:34,079 --> 01:06:35,680
misrepresent anything that's going to be

2027
01:06:35,680 --> 01:06:37,839
in the white paper so um

2028
01:06:37,839 --> 01:06:40,000
let's chat and i can i can send you a an

2029
01:06:40,000 --> 01:06:41,839
email with the um with the white paper

2030
01:06:41,839 --> 01:06:43,440
when it's ready cool but well done

2031
01:06:43,440 --> 01:06:46,480
really cool thanks

2032
01:06:46,480 --> 01:06:48,319
hey thanks for the talk so i have more

2033
01:06:48,319 --> 01:06:49,760
of a like a systems question for you i

2034
01:06:49,760 --> 01:06:51,680
guess so you explained how one of the

2035
01:06:51,680 --> 01:06:53,520
challenges with all this stuff uh nbc

2036
01:06:53,520 --> 01:06:55,359
privacy etc is education which is a

2037
01:06:55,359 --> 01:06:57,440
consistent with our experience

2038
01:06:57,440 --> 01:06:59,280
in particular you mentioned how

2039
01:06:59,280 --> 01:07:01,599
like the the engineers that you've been

2040
01:07:01,599 --> 01:07:02,640
working with

2041
01:07:02,640 --> 01:07:03,760
um

2042
01:07:03,760 --> 01:07:05,119
educating them has been a problem so i'm

2043
01:07:05,119 --> 01:07:06,240
curious

2044
01:07:06,240 --> 01:07:07,920
like what

2045
01:07:07,920 --> 01:07:10,480
so i feel like to cryptographers npcs

2046
01:07:10,480 --> 01:07:13,359
new exciting et cetera but to like cloud

2047
01:07:13,359 --> 01:07:15,280
and distributed systems people they kind

2048
01:07:15,280 --> 01:07:16,640
of go like oh it's an external

2049
01:07:16,640 --> 01:07:18,960
dependency all right yeah um so what in

2050
01:07:18,960 --> 01:07:21,920
particular is like conceptually hard

2051
01:07:21,920 --> 01:07:23,920
here for people whose bread and butter

2052
01:07:23,920 --> 01:07:26,960
is distributed systems

2053
01:07:26,960 --> 01:07:29,599
i think it's it's uh

2054
01:07:29,599 --> 01:07:31,119
i mean there's like a product and an

2055
01:07:31,119 --> 01:07:33,280
engineering uh perspective on that i

2056
01:07:33,280 --> 01:07:36,640
think like uh you know you

2057
01:07:36,640 --> 01:07:38,240
you know from from a product perspective

2058
01:07:38,240 --> 01:07:40,480
i think uh because you're operating in a

2059
01:07:40,480 --> 01:07:42,400
space that has a lot more constraints

2060
01:07:42,400 --> 01:07:43,760
because of the computation and like

2061
01:07:43,760 --> 01:07:45,440
performance and cost

2062
01:07:45,440 --> 01:07:47,440
you um

2063
01:07:47,440 --> 01:07:50,799
you have to figure out how to um

2064
01:07:50,799 --> 01:07:54,319
introduce those constraints

2065
01:07:54,480 --> 01:07:56,400
to the user but from like from a systems

2066
01:07:56,400 --> 01:07:58,480
perspective um

2067
01:07:58,480 --> 01:07:59,920
uh

2068
01:07:59,920 --> 01:08:02,640
i'd say it's um

2069
01:08:02,640 --> 01:08:04,640
i'd say it's uh the cost and the

2070
01:08:04,640 --> 01:08:07,680
performance um again are are much higher

2071
01:08:07,680 --> 01:08:09,520
than like operating in the clear

2072
01:08:09,520 --> 01:08:10,880
and so uh

2073
01:08:10,880 --> 01:08:13,440
you have to figure out how to um

2074
01:08:13,440 --> 01:08:16,000
not run into the the limits um on like

2075
01:08:16,000 --> 01:08:17,679
uh the amount of containers that you

2076
01:08:17,679 --> 01:08:19,600
allocate on you know

2077
01:08:19,600 --> 01:08:22,319
aws and gcp and

2078
01:08:22,319 --> 01:08:23,759
so cost and performance is definitely is

2079
01:08:23,759 --> 01:08:25,520
definitely a challenge um

2080
01:08:25,520 --> 01:08:27,920
uh it's also uh

2081
01:08:27,920 --> 01:08:29,839
it's a different paradigm so it's like

2082
01:08:29,839 --> 01:08:31,439
uh you can't just take your existing

2083
01:08:31,439 --> 01:08:33,520
system and then just like uh expect that

2084
01:08:33,520 --> 01:08:34,479
you can

2085
01:08:34,479 --> 01:08:36,640
uh use it as is an npc we're actually

2086
01:08:36,640 --> 01:08:38,399
rebuilding everything from scratch and

2087
01:08:38,399 --> 01:08:41,439
so um uh

2088
01:08:41,439 --> 01:08:43,040
they're we're incorporating a lot of

2089
01:08:43,040 --> 01:08:45,040
learnings from uh from what we from our

2090
01:08:45,040 --> 01:08:47,279
production systems uh into the into this

2091
01:08:47,279 --> 01:08:49,120
system um and so there's just a lot of

2092
01:08:49,120 --> 01:08:51,439
work to do um i hope that answers your

2093
01:08:51,439 --> 01:08:53,600
question yeah it does thanks we have

2094
01:08:53,600 --> 01:08:55,120
some fargate war stories too i'll find

2095
01:08:55,120 --> 01:08:58,000
you later thank you

2096
01:08:58,399 --> 01:08:59,600
hi

2097
01:08:59,600 --> 01:09:01,920
so uh the ad ecosystem has issues with

2098
01:09:01,920 --> 01:09:04,238
opacity where users don't know why ads

2099
01:09:04,238 --> 01:09:06,560
are shown to them or why or where they

2100
01:09:06,560 --> 01:09:09,120
cannot see or correct their data

2101
01:09:09,120 --> 01:09:11,279
and in this case you mentioned that our

2102
01:09:11,279 --> 01:09:12,479
advertisers are already having

2103
01:09:12,479 --> 01:09:13,839
difficulty with

2104
01:09:13,839 --> 01:09:15,198
correctly implementing what they want to

2105
01:09:15,198 --> 01:09:17,679
do with debugging is very difficult so

2106
01:09:17,679 --> 01:09:20,399
with mpc how will this affect opacity

2107
01:09:20,399 --> 01:09:22,080
and how we prevent discriminatory

2108
01:09:22,080 --> 01:09:23,520
targeting

2109
01:09:23,520 --> 01:09:24,799
so can you repeat the first part of the

2110
01:09:24,799 --> 01:09:26,640
question i i didn't hear that how does

2111
01:09:26,640 --> 01:09:29,198
this affect the opacity of the

2112
01:09:29,198 --> 01:09:32,158
ecosystem for users

2113
01:09:32,158 --> 01:09:35,679
i think i think that's uh

2114
01:09:35,679 --> 01:09:37,679
yeah like you know ads and user

2115
01:09:37,679 --> 01:09:41,759
perception is as a whole as a whole um

2116
01:09:41,759 --> 01:09:45,439
a whole bag of worms but um

2117
01:09:45,920 --> 01:09:47,198
mpc

2118
01:09:47,198 --> 01:09:49,920
i'd say is uh

2119
01:09:49,920 --> 01:09:50,799
is

2120
01:09:50,799 --> 01:09:53,439
i'm not really sure that um

2121
01:09:53,439 --> 01:09:55,280
uh

2122
01:09:55,280 --> 01:09:56,800
like like you're providing better

2123
01:09:56,800 --> 01:09:59,920
guarantees to the users but like i i i i

2124
01:09:59,920 --> 01:10:01,920
think that you know what we have seen is

2125
01:10:01,920 --> 01:10:03,360
that um

2126
01:10:03,360 --> 01:10:04,640
uh

2127
01:10:04,640 --> 01:10:06,080
it's it's hard enough to explain to

2128
01:10:06,080 --> 01:10:07,600
developers um i don't think that you're

2129
01:10:07,600 --> 01:10:09,440
going to be able to explain

2130
01:10:09,440 --> 01:10:11,760
this very easily right now to

2131
01:10:11,760 --> 01:10:13,280
to users and so

2132
01:10:13,280 --> 01:10:15,120
um

2133
01:10:15,120 --> 01:10:17,120
i don't know if we have an answer uh to

2134
01:10:17,120 --> 01:10:18,719
that i think it's it's really it's like

2135
01:10:18,719 --> 01:10:21,040
uh we got to start somewhere um and i

2136
01:10:21,040 --> 01:10:22,880
think it's you know developers uh the

2137
01:10:22,880 --> 01:10:25,360
industry regulators um

2138
01:10:25,360 --> 01:10:28,080
and it's also not like

2139
01:10:28,080 --> 01:10:30,000
it's not it's not like there are so many

2140
01:10:30,000 --> 01:10:31,520
uh you're predicting what the world's

2141
01:10:31,520 --> 01:10:33,199
gonna look like in five to ten years so

2142
01:10:33,199 --> 01:10:35,600
um i think it's uh uh there are

2143
01:10:35,600 --> 01:10:37,199
different competing visions for that and

2144
01:10:37,199 --> 01:10:40,400
so um uh it's not a very clear answer um

2145
01:10:40,400 --> 01:10:43,600
but uh short period is we don't know is

2146
01:10:43,600 --> 01:10:45,520
it something meta is paying attention to

2147
01:10:45,520 --> 01:10:46,640
definitely paying attention to not

2148
01:10:46,640 --> 01:10:49,440
private computation uh specifically

2149
01:10:49,440 --> 01:10:51,199
with the combination with npc like is

2150
01:10:51,199 --> 01:10:52,560
there any part of your research group

2151
01:10:52,560 --> 01:10:55,520
that looks at that at all uh

2152
01:10:55,520 --> 01:10:58,159
at meta there's there's definitely uh uh

2153
01:10:58,159 --> 01:11:00,560
teams that do that um uh we're focused

2154
01:11:00,560 --> 01:11:02,159
more on like the distributed systems and

2155
01:11:02,159 --> 01:11:03,840
like you know a protocol side of things

2156
01:11:03,840 --> 01:11:05,920
um but i can definitely um uh connect

2157
01:11:05,920 --> 01:11:07,679
you with uh uh with folks who are

2158
01:11:07,679 --> 01:11:08,800
working on that i just like don't

2159
01:11:08,800 --> 01:11:10,560
personally have their names um

2160
01:11:10,560 --> 01:11:12,560
yeah thank you yeah

2161
01:11:12,560 --> 01:11:14,400
one whole short question i hope

2162
01:11:14,400 --> 01:11:16,159
yeah it's short

2163
01:11:16,159 --> 01:11:18,480
um so i'm very happy to see that peta is

2164
01:11:18,480 --> 01:11:20,719
working on privacy enhancing tech so i

2165
01:11:20,719 --> 01:11:22,719
just wanted to ask if you are

2166
01:11:22,719 --> 01:11:24,800
considering any uh

2167
01:11:24,800 --> 01:11:27,679
methods to transform transfer ads to the

2168
01:11:27,679 --> 01:11:29,600
client in an oblivious way such that

2169
01:11:29,600 --> 01:11:31,760
meta would not be able to know

2170
01:11:31,760 --> 01:11:32,719
what

2171
01:11:32,719 --> 01:11:35,520
if a client got an ad or not like

2172
01:11:35,520 --> 01:11:37,040
oblivious transfer or something of that

2173
01:11:37,040 --> 01:11:38,239
sort

2174
01:11:38,239 --> 01:11:39,040
uh

2175
01:11:39,040 --> 01:11:40,560
like transferring to like the to the

2176
01:11:40,560 --> 01:11:42,800
like the client like the device yes yeah

2177
01:11:42,800 --> 01:11:44,080
um so

2178
01:11:44,080 --> 01:11:46,239
uh one of the things that we that was on

2179
01:11:46,239 --> 01:11:49,360
the slide of uh uh uh areas that meta

2180
01:11:49,360 --> 01:11:52,000
was um uh federated uh learning in like

2181
01:11:52,000 --> 01:11:54,400
federated analytics and so that's so so

2182
01:11:54,400 --> 01:11:56,080
it's not uh i don't know if it's exactly

2183
01:11:56,080 --> 01:11:57,360
what you just described but i think it's

2184
01:11:57,360 --> 01:11:58,159
um

2185
01:11:58,159 --> 01:11:59,920
uh we did with the same blog post that

2186
01:11:59,920 --> 01:12:02,400
talks about um uh mpc being you know the

2187
01:12:02,400 --> 01:12:04,320
feature of

2188
01:12:04,320 --> 01:12:07,600
of ads at um meta it also talks about on

2189
01:12:07,600 --> 01:12:10,000
uh work as well so so yes there is there

2190
01:12:10,000 --> 01:12:11,760
is on device work as well and that's

2191
01:12:11,760 --> 01:12:13,440
kind of the competing visions for the

2192
01:12:13,440 --> 01:12:15,440
future that i alluded to in the last

2193
01:12:15,440 --> 01:12:17,920
question all right thanks yeah okay

2194
01:12:17,920 --> 01:12:19,600
thank you very much running out of time

2195
01:12:19,600 --> 01:12:21,280
so there is also a question in zulu but

2196
01:12:21,280 --> 01:12:22,719
i guess we can take that offline in

2197
01:12:22,719 --> 01:12:24,480
sulip so thanks again jim for a great

2198
01:12:24,480 --> 01:12:28,000
talk please join me in talking again

2199
01:12:32,800 --> 01:12:34,960
and i hand over to nigel for the

2200
01:12:34,960 --> 01:12:36,880
lightning rounds at lightning speed

2201
01:12:36,880 --> 01:12:39,360
nigel arrives

2202
01:12:39,360 --> 01:12:40,640
so queue up

2203
01:12:40,640 --> 01:12:43,040
this on this side if you turned up late

2204
01:12:43,040 --> 01:12:44,239
because you were too busy having coffee

2205
01:12:44,239 --> 01:12:45,440
you didn't hear the announcement you

2206
01:12:45,440 --> 01:12:48,320
start this side okay

2207
01:12:48,320 --> 01:12:50,560
indeed it's here's someone who didn't

2208
01:12:50,560 --> 01:12:52,400
turn up in time for the coffee right so

2209
01:12:52,400 --> 01:12:54,800
what we have to do is you will come one

2210
01:12:54,800 --> 01:12:57,440
of the time come up the stairs

2211
01:12:57,440 --> 01:12:59,679
do your talk do your speech at some

2212
01:12:59,679 --> 01:13:01,840
point i'll tell you stop

2213
01:13:01,840 --> 01:13:04,080
when i'm bored sorry um something like

2214
01:13:04,080 --> 01:13:06,560
that and then go down the back of the

2215
01:13:06,560 --> 01:13:08,560
lectern and down there that's safer okay

2216
01:13:08,560 --> 01:13:09,840
i don't want anyone tripping off the

2217
01:13:09,840 --> 01:13:11,120
stage right that's

2218
01:13:11,120 --> 01:13:14,320
health and safety first right so

2219
01:13:14,320 --> 01:13:16,740
go

2220
01:13:16,740 --> 01:13:19,870
[Music]

2221
01:13:20,960 --> 01:13:22,239
thank you

2222
01:13:22,239 --> 01:13:25,440
um so if you got inspired by the first

2223
01:13:25,440 --> 01:13:27,440
talk on monday first day of the

2224
01:13:27,440 --> 01:13:28,960
conference

2225
01:13:28,960 --> 01:13:30,400
and you would like to know more about

2226
01:13:30,400 --> 01:13:32,159
embedded systems that we have a

2227
01:13:32,159 --> 01:13:33,760
conference for you and this conference

2228
01:13:33,760 --> 01:13:35,600
is cardis it has reached already its

2229
01:13:35,600 --> 01:13:37,199
21st edition

2230
01:13:37,199 --> 01:13:38,080
and

2231
01:13:38,080 --> 01:13:40,480
you can visit the website it's going to

2232
01:13:40,480 --> 01:13:43,199
take place in the uk so we get some

2233
01:13:43,199 --> 01:13:46,640
extra points for that

2234
01:13:46,640 --> 01:13:48,560
university of vermont

2235
01:13:48,560 --> 01:13:51,120
belgium now

2236
01:13:51,440 --> 01:13:53,120
and the deadline for submission is going

2237
01:13:53,120 --> 01:13:56,480
to be the 24th of june um why else

2238
01:13:56,480 --> 01:13:57,920
should people visit the university of

2239
01:13:57,920 --> 01:13:59,760
birmingham oh

2240
01:13:59,760 --> 01:14:02,239
uh yeah so if you're into lord of the

2241
01:14:02,239 --> 01:14:03,600
rings you might recognize some of the

2242
01:14:03,600 --> 01:14:04,880
landmarks

2243
01:14:04,880 --> 01:14:06,480
like sireman's tower is actually the

2244
01:14:06,480 --> 01:14:09,040
clock tour of the local university

2245
01:14:09,040 --> 01:14:12,239
um birmingham has a lot of canals so

2246
01:14:12,239 --> 01:14:14,400
some call it even the venus of the north

2247
01:14:14,400 --> 01:14:15,120
or

2248
01:14:15,120 --> 01:14:18,159
maybe the other venice of the north

2249
01:14:18,159 --> 01:14:20,960
uh and lastly as yeah like all uk cities

2250
01:14:20,960 --> 01:14:23,040
a lot of pubs and beer

2251
01:14:23,040 --> 01:14:24,719
but birmingham also has a chocolate

2252
01:14:24,719 --> 01:14:26,880
factory that you might visit as a social

2253
01:14:26,880 --> 01:14:29,120
event

2254
01:14:29,120 --> 01:14:30,560
npk blinders

2255
01:14:30,560 --> 01:14:32,880
okay

2256
01:14:34,080 --> 01:14:36,159
so yeah come by

2257
01:14:36,159 --> 01:14:37,120
thank you

2258
01:14:37,120 --> 01:14:41,559
brilliant that was only a minute

2259
01:14:43,200 --> 01:14:45,280
[Applause]

2260
01:14:45,280 --> 01:14:46,239
hi

2261
01:14:46,239 --> 01:14:48,719
you might have heard of this new uh

2262
01:14:48,719 --> 01:14:50,560
end-to-end encryption protocol called

2263
01:14:50,560 --> 01:14:54,400
messaging lab security or mls for short

2264
01:14:54,400 --> 01:14:57,440
it's the spec is in its final phase now

2265
01:14:57,440 --> 01:15:00,880
and we are working on an implementation

2266
01:15:00,880 --> 01:15:03,520
um so that is uh open source of course

2267
01:15:03,520 --> 01:15:06,000
it's mit licensed and it's written in

2268
01:15:06,000 --> 01:15:06,960
rust

2269
01:15:06,960 --> 01:15:08,560
it's not entirely finished yet because

2270
01:15:08,560 --> 01:15:10,960
the spec is still moving a little bit

2271
01:15:10,960 --> 01:15:12,880
but it's fairly advanced and it's good

2272
01:15:12,880 --> 01:15:14,320
enough

2273
01:15:14,320 --> 01:15:17,120
to be used in a proof of concept

2274
01:15:17,120 --> 01:15:20,239
and the api is sort of stable there's a

2275
01:15:20,239 --> 01:15:22,400
lot of documentation

2276
01:15:22,400 --> 01:15:23,280
and

2277
01:15:23,280 --> 01:15:25,360
so yeah if you're interested in that at

2278
01:15:25,360 --> 01:15:27,440
all if you want to play with mls or if

2279
01:15:27,440 --> 01:15:29,920
you want to contribute or anything else

2280
01:15:29,920 --> 01:15:32,640
um yeah just come and say hi i'm rafael

2281
01:15:32,640 --> 01:15:35,760
there's conrad as well who's in the room

2282
01:15:35,760 --> 01:15:38,560
um or otherwise you can just google

2283
01:15:38,560 --> 01:15:40,560
openmls that's the name of the

2284
01:15:40,560 --> 01:15:42,840
implementation or go to

2285
01:15:42,840 --> 01:15:44,480
openmls.tech

2286
01:15:44,480 --> 01:15:46,560
thank you

2287
01:15:46,560 --> 01:15:47,640
thank you very much

2288
01:15:47,640 --> 01:15:49,120
[Music]

2289
01:15:49,120 --> 01:15:52,159
and go along

2290
01:15:52,560 --> 01:15:54,320
hello everybody it's nice to be back in

2291
01:15:54,320 --> 01:15:56,719
person i'm filippo and i do open source

2292
01:15:56,719 --> 01:15:58,800
i maintain the go cryptography libraries

2293
01:15:58,800 --> 01:16:01,520
i make tools like again make search ubc

2294
01:16:01,520 --> 01:16:04,239
agent so open source is special there

2295
01:16:04,239 --> 01:16:06,880
are no gatekeepers um and uh there are

2296
01:16:06,880 --> 01:16:08,640
no financial there's no financial

2297
01:16:08,640 --> 01:16:11,199
inertia to picking up a new project but

2298
01:16:11,199 --> 01:16:12,960
it's also unsustainable

2299
01:16:12,960 --> 01:16:14,560
this is something that

2300
01:16:14,560 --> 01:16:16,400
most people in the room know this is not

2301
01:16:16,400 --> 01:16:18,400
news a lot of people who maintain

2302
01:16:18,400 --> 01:16:20,880
projects are volunteers or employees of

2303
01:16:20,880 --> 01:16:22,480
big companies where the incentives don't

2304
01:16:22,480 --> 01:16:23,920
always align

2305
01:16:23,920 --> 01:16:25,280
so

2306
01:16:25,280 --> 01:16:28,000
this is not old stuff but what's new is

2307
01:16:28,000 --> 01:16:29,440
that companies are not getting what they

2308
01:16:29,440 --> 01:16:30,800
want either

2309
01:16:30,800 --> 01:16:31,920
companies

2310
01:16:31,920 --> 01:16:34,239
are talking about supply chain security

2311
01:16:34,239 --> 01:16:36,560
and uh and this is

2312
01:16:36,560 --> 01:16:39,360
kind of a buzzword is this now my thesis

2313
01:16:39,360 --> 01:16:41,600
is that companies would actually pay for

2314
01:16:41,600 --> 01:16:42,560
um

2315
01:16:42,560 --> 01:16:44,800
pay maintainers and projects if they

2316
01:16:44,800 --> 01:16:47,040
were approached like

2317
01:16:47,040 --> 01:16:48,800
if they could pay them like they can pay

2318
01:16:48,800 --> 01:16:51,199
all other professionals the businesses

2319
01:16:51,199 --> 01:16:53,440
are in the business of getting what they

2320
01:16:53,440 --> 01:16:55,520
want by paying invoices

2321
01:16:55,520 --> 01:16:56,800
uh so

2322
01:16:56,800 --> 01:16:59,760
if you are on either side of these uh

2323
01:16:59,760 --> 01:17:02,080
transactions if your company wants to

2324
01:17:02,080 --> 01:17:04,560
get a better relationship with the open

2325
01:17:04,560 --> 01:17:06,080
source maintainers that maintain the

2326
01:17:06,080 --> 01:17:07,440
projects you need or if you're a

2327
01:17:07,440 --> 01:17:09,120
maintainer who's been struggling to get

2328
01:17:09,120 --> 01:17:11,040
companies to care and pay for

2329
01:17:11,040 --> 01:17:12,880
them either search professional

2330
01:17:12,880 --> 01:17:15,520
maintainers on google or come talk to me

2331
01:17:15,520 --> 01:17:18,960
here i also have ag stickers obviously

2332
01:17:18,960 --> 01:17:19,840
thank you

2333
01:17:19,840 --> 01:17:21,600
thank you very much

2334
01:17:21,600 --> 01:17:23,280
and

2335
01:17:23,280 --> 01:17:24,960
while the next person is coming up just

2336
01:17:24,960 --> 01:17:27,120
like to say if you're out in zoom land

2337
01:17:27,120 --> 01:17:28,719
and you feel uh just you know like

2338
01:17:28,719 --> 01:17:30,480
disenfranchised and we will be doing

2339
01:17:30,480 --> 01:17:32,000
another version of this tomorrow for

2340
01:17:32,000 --> 01:17:34,400
those in zoom land so please tune in

2341
01:17:34,400 --> 01:17:36,879
tomorrow

2342
01:17:37,520 --> 01:17:39,840
um hi everyone i just wanted to take a

2343
01:17:39,840 --> 01:17:41,840
minute to make a personal thank you

2344
01:17:41,840 --> 01:17:43,600
because i didn't think i'd be able to

2345
01:17:43,600 --> 01:17:45,280
attend in person this year because i had

2346
01:17:45,280 --> 01:17:46,880
a baby in november

2347
01:17:46,880 --> 01:17:48,320
um but real world crypto have been

2348
01:17:48,320 --> 01:17:49,840
absolutely phenomenal they've provided

2349
01:17:49,840 --> 01:17:51,520
an on-site nanny that they've also paid

2350
01:17:51,520 --> 01:17:54,239
for um so i just wanted to give a real

2351
01:17:54,239 --> 01:17:57,799
thank you for that

2352
01:17:59,360 --> 01:18:00,719
um

2353
01:18:00,719 --> 01:18:03,440
yeah my my

2354
01:18:03,440 --> 01:18:04,960
my grandmother actually worked in

2355
01:18:04,960 --> 01:18:07,520
computing research but she quit that job

2356
01:18:07,520 --> 01:18:09,120
because she really wanted children so

2357
01:18:09,120 --> 01:18:11,040
i'm just really grateful to everyone

2358
01:18:11,040 --> 01:18:12,320
who's made it possible for me to have

2359
01:18:12,320 --> 01:18:14,180
more options than that so thanks again

2360
01:18:14,180 --> 01:18:17,459
[Applause]

2361
01:18:20,130 --> 01:18:22,719
[Music]

2362
01:18:22,719 --> 01:18:25,040
all of which that's really cool all of

2363
01:18:25,040 --> 01:18:26,960
which has been made

2364
01:18:26,960 --> 01:18:29,520
possible by our amazing sponsors

2365
01:18:29,520 --> 01:18:31,440
if you are a company in the audience and

2366
01:18:31,440 --> 01:18:34,320
felt a very warm glow at that point what

2367
01:18:34,320 --> 01:18:38,400
you need to do is email kenny

2368
01:18:38,880 --> 01:18:41,040
give us your money

2369
01:18:41,040 --> 01:18:43,199
and we'll see uh hope we can do a

2370
01:18:43,199 --> 01:18:45,440
similar thing in zurich next year thank

2371
01:18:45,440 --> 01:18:47,599
you

2372
01:18:50,400 --> 01:18:51,600
tokyo

2373
01:18:51,600 --> 01:18:54,600
sorry

2374
01:18:54,640 --> 01:18:57,040
okay we're all uh enjoying uh real world

2375
01:18:57,040 --> 01:18:58,960
crypto so much you want to know where

2376
01:18:58,960 --> 01:19:02,080
your next uh crypto fix will be uh and

2377
01:19:02,080 --> 01:19:04,239
uh i'm pleased to announce that uh

2378
01:19:04,239 --> 01:19:08,000
eurocrypt 2022 is the next iacr event

2379
01:19:08,000 --> 01:19:10,719
will take place in uh trondheim in mid

2380
01:19:10,719 --> 01:19:12,400
norway

2381
01:19:12,400 --> 01:19:15,199
um yeah

2382
01:19:15,199 --> 01:19:16,080
uh

2383
01:19:16,080 --> 01:19:18,719
starting on monday the

2384
01:19:18,719 --> 01:19:21,440
30th of may i repeat starting on monday

2385
01:19:21,440 --> 01:19:23,920
that is to say we have our reception on

2386
01:19:23,920 --> 01:19:25,520
monday evening and then we go through to

2387
01:19:25,520 --> 01:19:27,600
friday so it's a a day

2388
01:19:27,600 --> 01:19:30,560
uh later than the normal europe program

2389
01:19:30,560 --> 01:19:33,440
uh it will take place uh in a

2390
01:19:33,440 --> 01:19:36,400
purpose-built uh conference hotel uh

2391
01:19:36,400 --> 01:19:38,880
overlooking the trondheim fjord

2392
01:19:38,880 --> 01:19:40,880
we cannot promise you

2393
01:19:40,880 --> 01:19:43,280
sunshine but we can promise you at least

2394
01:19:43,280 --> 01:19:45,280
mild weather and lots of light it will

2395
01:19:45,280 --> 01:19:47,920
be 19 and a half hours of daylight on

2396
01:19:47,920 --> 01:19:51,600
the first day of eurocrypt uh this year

2397
01:19:51,600 --> 01:19:54,080
um the

2398
01:19:54,080 --> 01:19:57,280
program is up now the uh registration is

2399
01:19:57,280 --> 01:20:00,480
up now and uh you should register by

2400
01:20:00,480 --> 01:20:03,120
uh 29th of this month in case you want

2401
01:20:03,120 --> 01:20:05,920
to avoid extra charges so please get on

2402
01:20:05,920 --> 01:20:08,800
to ioci.org navigate to eurocrypt and

2403
01:20:08,800 --> 01:20:11,840
register now

2404
01:20:17,280 --> 01:20:18,880
and if you've already booked your

2405
01:20:18,880 --> 01:20:20,480
flights and you didn't realize it

2406
01:20:20,480 --> 01:20:22,000
started on monday evening there are

2407
01:20:22,000 --> 01:20:23,840
workshops on the sunday and monday to

2408
01:20:23,840 --> 01:20:25,600
turn turn up to very interesting ones

2409
01:20:25,600 --> 01:20:28,000
you should go to

2410
01:20:28,000 --> 01:20:30,719
hey hello i'm jalan from protocol labs

2411
01:20:30,719 --> 01:20:33,600
so maybe you remember in 2019 we

2412
01:20:33,600 --> 01:20:36,000
launched d-run so they distributed

2413
01:20:36,000 --> 01:20:37,600
random beacons

2414
01:20:37,600 --> 01:20:39,360
it's an open source software which is

2415
01:20:39,360 --> 01:20:41,520
run by the league of entropy to provide

2416
01:20:41,520 --> 01:20:44,239
a network of nodes providing public

2417
01:20:44,239 --> 01:20:47,199
verifiable randomness and it's seen

2418
01:20:47,199 --> 01:20:49,360
great adoption with at least one user

2419
01:20:49,360 --> 01:20:52,159
who's still using it nowadays and it's

2420
01:20:52,159 --> 01:20:53,520
pretty cool because it's using

2421
01:20:53,520 --> 01:20:55,840
pairing-based crypto and that allows us

2422
01:20:55,840 --> 01:20:58,400
to bring in the coming months

2423
01:20:58,400 --> 01:21:00,320
time lock encryption to the network so

2424
01:21:00,320 --> 01:21:02,239
if you want to encrypt something as a

2425
01:21:02,239 --> 01:21:03,920
gift for christmas

2426
01:21:03,920 --> 01:21:06,880
you'll be able to do that um around

2427
01:21:06,880 --> 01:21:09,679
august hopefully and we are still

2428
01:21:09,679 --> 01:21:11,840
looking for new members to join the

2429
01:21:11,840 --> 01:21:13,920
league of entropy so if you want to you

2430
01:21:13,920 --> 01:21:15,920
know provide a public service with

2431
01:21:15,920 --> 01:21:18,960
public verifiable randomness

2432
01:21:18,960 --> 01:21:20,560
just you know

2433
01:21:20,560 --> 01:21:25,600
say hi and i also got different stickers

2434
01:21:25,600 --> 01:21:29,080
thanks very much

2435
01:21:29,679 --> 01:21:32,239
i'm good

2436
01:21:33,199 --> 01:21:35,920
good morning amsterdam and good middle

2437
01:21:35,920 --> 01:21:37,040
of the night for some of the folks

2438
01:21:37,040 --> 01:21:39,600
joining remotely uh get excited this is

2439
01:21:39,600 --> 01:21:42,719
a hiring pitch um i'm david schnazzy

2440
01:21:42,719 --> 01:21:45,120
right thank you and i work at google i'm

2441
01:21:45,120 --> 01:21:48,000
building a team to work on mask which is

2442
01:21:48,000 --> 01:21:51,120
a technology of proxying on top of quick

2443
01:21:51,120 --> 01:21:53,440
the idea being that we want to change

2444
01:21:53,440 --> 01:21:56,080
how web browsers kind of access websites

2445
01:21:56,080 --> 01:21:58,159
in such a way that websites can no

2446
01:21:58,159 --> 01:22:00,320
longer see the ip address

2447
01:22:00,320 --> 01:22:02,560
to of the client to use it as a tracking

2448
01:22:02,560 --> 01:22:04,480
vector so if you want to learn more

2449
01:22:04,480 --> 01:22:06,320
about this

2450
01:22:06,320 --> 01:22:08,320
feel free to come and grab me i'll be

2451
01:22:08,320 --> 01:22:10,960
around all week and or if you just want

2452
01:22:10,960 --> 01:22:12,239
to tell me that i should feel bad for

2453
01:22:12,239 --> 01:22:14,239
writing protocols in c plus that's also

2454
01:22:14,239 --> 01:22:15,700
fine

2455
01:22:15,700 --> 01:22:16,840
[Applause]

2456
01:22:16,840 --> 01:22:23,679
[Music]

2457
01:22:23,679 --> 01:22:25,920
uh and i'm nicolas courtois i work for

2458
01:22:25,920 --> 01:22:28,239
qualcomm for france we are hiring

2459
01:22:28,239 --> 01:22:29,840
another pitch

2460
01:22:29,840 --> 01:22:32,719
um so we do a lot of crypto it should be

2461
01:22:32,719 --> 01:22:34,800
very very efficient we have like 50

2462
01:22:34,800 --> 01:22:36,960
crypto engines running parallel a half

2463
01:22:36,960 --> 01:22:38,719
of people here have in inside their

2464
01:22:38,719 --> 01:22:40,000
mobile phone

2465
01:22:40,000 --> 01:22:41,920
and we are champions of rnd we spend

2466
01:22:41,920 --> 01:22:44,320
twice the amount of microsoft spending

2467
01:22:44,320 --> 01:22:46,960
uh per um if you compare to our business

2468
01:22:46,960 --> 01:22:49,120
basically in research and development so

2469
01:22:49,120 --> 01:22:51,120
we do a lot of engineering post quantum

2470
01:22:51,120 --> 01:22:54,639
and a lot of traditional cryptography

2471
01:22:54,639 --> 01:22:57,600
thank you very much

2472
01:22:58,880 --> 01:23:02,159
south of frog sounds very interesting

2473
01:23:02,159 --> 01:23:04,800
hi i'm chelsea comlow i wanted to plug a

2474
01:23:04,800 --> 01:23:06,800
paper that is coming out soon uh it's

2475
01:23:06,800 --> 01:23:09,040
not out yet but promise it's coming out

2476
01:23:09,040 --> 01:23:10,639
soon um the reason why i'm talking about

2477
01:23:10,639 --> 01:23:12,880
it here um my co-author is dambone by

2478
01:23:12,880 --> 01:23:14,480
the way um the reason why i'm talking

2479
01:23:14,480 --> 01:23:16,480
about it here is because it's a response

2480
01:23:16,480 --> 01:23:18,000
to a problem that we've heard from

2481
01:23:18,000 --> 01:23:21,040
practitioners of threshold signatures

2482
01:23:21,040 --> 01:23:24,159
mainly that both properties of privacy

2483
01:23:24,159 --> 01:23:26,320
as well as the ability to prove or

2484
01:23:26,320 --> 01:23:28,000
disprove that you

2485
01:23:28,000 --> 01:23:30,639
signed a message after the fact

2486
01:23:30,639 --> 01:23:32,320
is desirable so that kind of thing might

2487
01:23:32,320 --> 01:23:34,800
be useful if you're signing a message

2488
01:23:34,800 --> 01:23:37,520
or you have a threshold signature and

2489
01:23:37,520 --> 01:23:39,199
some of your co-signers went and spent

2490
01:23:39,199 --> 01:23:40,960
millions of dollars and after the fact

2491
01:23:40,960 --> 01:23:42,159
you want to prove that you actually

2492
01:23:42,159 --> 01:23:44,320
didn't participate in that so it's a

2493
01:23:44,320 --> 01:23:46,719
very useful feature

2494
01:23:46,719 --> 01:23:48,880
and uh if anyone here is interested in

2495
01:23:48,880 --> 01:23:50,320
that or wants to talk more or learn more

2496
01:23:50,320 --> 01:23:53,120
please come and talk to me thank you

2497
01:23:53,120 --> 01:23:53,580
cool

2498
01:23:53,580 --> 01:23:56,670
[Music]

2499
01:23:58,000 --> 01:23:59,040
and

2500
01:23:59,040 --> 01:24:00,880
one of our new recruits the real

2501
01:24:00,880 --> 01:24:02,560
railroad crypto steering committee is

2502
01:24:02,560 --> 01:24:05,360
about to give a talk

2503
01:24:05,360 --> 01:24:08,239
thank you nigel uh so i just wanted to

2504
01:24:08,239 --> 01:24:10,560
draw your attention about some uh

2505
01:24:10,560 --> 01:24:13,440
discussion that is happening in the w3c

2506
01:24:13,440 --> 01:24:16,000
uh so you just heard the previous talk

2507
01:24:16,000 --> 01:24:17,840
that mentioned that a lot of companies

2508
01:24:17,840 --> 01:24:19,760
are thinking about how to restructure

2509
01:24:19,760 --> 01:24:22,000
the web advertising ecosystem because

2510
01:24:22,000 --> 01:24:24,080
third-party cookies are going away and

2511
01:24:24,080 --> 01:24:25,840
you will hear more about this in the

2512
01:24:25,840 --> 01:24:27,679
other invited talk by chrome in the

2513
01:24:27,679 --> 01:24:28,960
afternoon

2514
01:24:28,960 --> 01:24:31,360
but there is a private advertising

2515
01:24:31,360 --> 01:24:34,239
technology community group in w3c and

2516
01:24:34,239 --> 01:24:36,639
there is quite a lot of discussion

2517
01:24:36,639 --> 01:24:39,280
related to what kind of technologies and

2518
01:24:39,280 --> 01:24:41,360
what kind of designs

2519
01:24:41,360 --> 01:24:44,000
should be the new kind of establishment

2520
01:24:44,000 --> 01:24:46,239
for the web advertising community and i

2521
01:24:46,239 --> 01:24:47,040
think

2522
01:24:47,040 --> 01:24:49,040
this group will benefit from more

2523
01:24:49,040 --> 01:24:50,239
involvement

2524
01:24:50,239 --> 01:24:52,719
from people like you so please

2525
01:24:52,719 --> 01:24:54,960
google it or come to me and i will point

2526
01:24:54,960 --> 01:24:55,679
it

2527
01:24:55,679 --> 01:24:58,480
for you to this website and i hope some

2528
01:24:58,480 --> 01:24:59,840
of you will join

2529
01:24:59,840 --> 01:25:01,360
thank you

2530
01:25:01,360 --> 01:25:04,080
thank you very much

2531
01:25:05,690 --> 01:25:06,330
[Music]

2532
01:25:06,330 --> 01:25:07,760
[Applause]

2533
01:25:07,760 --> 01:25:09,440
you've just screwed over my counting you

2534
01:25:09,440 --> 01:25:12,080
know that don't you

2535
01:25:12,080 --> 01:25:13,440
oh god you're right you could have a

2536
01:25:13,440 --> 01:25:16,320
long time now

2537
01:25:16,400 --> 01:25:18,400
this was not a planned attack

2538
01:25:18,400 --> 01:25:20,159
um so my name is paul and i'm here with

2539
01:25:20,159 --> 01:25:22,560
my colleagues marisa jack and gerald

2540
01:25:22,560 --> 01:25:24,880
we're part of ncc group's cryptography

2541
01:25:24,880 --> 01:25:27,920
services team and we're hiring

2542
01:25:27,920 --> 01:25:30,239
we're hiring for remote workers we're

2543
01:25:30,239 --> 01:25:31,520
hiring for

2544
01:25:31,520 --> 01:25:33,600
students for internships as well

2545
01:25:33,600 --> 01:25:35,760
what we do is that we're essentially

2546
01:25:35,760 --> 01:25:37,440
lucky to be entrusted by many of the

2547
01:25:37,440 --> 01:25:39,920
bright people in this room to perform

2548
01:25:39,920 --> 01:25:41,840
security reviews of their solutions so

2549
01:25:41,840 --> 01:25:44,000
that is implementation and protocol

2550
01:25:44,000 --> 01:25:46,400
reviews in in cryptography

2551
01:25:46,400 --> 01:25:48,639
in the past we have done public work for

2552
01:25:48,639 --> 01:25:50,800
companies like zcash like google like

2553
01:25:50,800 --> 01:25:52,000
whatsapp

2554
01:25:52,000 --> 01:25:55,760
so it's always pretty interesting um

2555
01:25:55,760 --> 01:25:58,159
we also get a pretty good amount of time

2556
01:25:58,159 --> 01:25:59,679
to the research so i would i would

2557
01:25:59,679 --> 01:26:01,679
really encourage you to come to us and

2558
01:26:01,679 --> 01:26:03,600
come talk to us and uh

2559
01:26:03,600 --> 01:26:06,159
yeah any any other four here

2560
01:26:06,159 --> 01:26:09,320
thank you

2561
01:26:09,920 --> 01:26:12,239
i i'm gonna help nigel by staying on

2562
01:26:12,239 --> 01:26:13,840
stage for

2563
01:26:13,840 --> 01:26:16,320
30 seconds or something um

2564
01:26:16,320 --> 01:26:18,880
so there's a lot of people in this room

2565
01:26:18,880 --> 01:26:19,760
uh

2566
01:26:19,760 --> 01:26:22,480
yeah so i'm jack i work with ncc but i

2567
01:26:22,480 --> 01:26:24,239
also run a website called crypto hack

2568
01:26:24,239 --> 01:26:25,199
which

2569
01:26:25,199 --> 01:26:26,960
i know like 10 people in this room have

2570
01:26:26,960 --> 01:26:29,040
heard of maybe there's more

2571
01:26:29,040 --> 01:26:31,199
uh

2572
01:26:32,159 --> 01:26:33,280
yeah so

2573
01:26:33,280 --> 01:26:34,560
i built the website because i didn't

2574
01:26:34,560 --> 01:26:36,080
know much about cryptography and in the

2575
01:26:36,080 --> 01:26:37,520
process i learned a little bit about

2576
01:26:37,520 --> 01:26:39,600
cryptography and the goal of the website

2577
01:26:39,600 --> 01:26:41,199
is to encourage people

2578
01:26:41,199 --> 01:26:42,080
to

2579
01:26:42,080 --> 01:26:44,239
be less intimidated by the subject i

2580
01:26:44,239 --> 01:26:45,920
think within the security world there's

2581
01:26:45,920 --> 01:26:47,040
a lot of people who kind of look at

2582
01:26:47,040 --> 01:26:48,960
cryptography and kind of go that's what

2583
01:26:48,960 --> 01:26:50,560
mathematicians do and i'm not going to

2584
01:26:50,560 --> 01:26:52,400
get into that too much and i'm trying to

2585
01:26:52,400 --> 01:26:54,000
encourage these people that you can

2586
01:26:54,000 --> 01:26:55,600
learn a little bit hey not everyone

2587
01:26:55,600 --> 01:26:56,960
should roll their own crypto but they

2588
01:26:56,960 --> 01:26:58,320
should understand it

2589
01:26:58,320 --> 01:27:00,239
um and i had a lot of fun i made a bunch

2590
01:27:00,239 --> 01:27:01,440
of challenges

2591
01:27:01,440 --> 01:27:03,440
and i think the site's good but it could

2592
01:27:03,440 --> 01:27:05,360
be better

2593
01:27:05,360 --> 01:27:06,400
and

2594
01:27:06,400 --> 01:27:07,920
the next goal is to have a set of

2595
01:27:07,920 --> 01:27:09,920
challenges that discuss what we

2596
01:27:09,920 --> 01:27:12,800
currently hope are quantum hard problems

2597
01:27:12,800 --> 01:27:14,639
so if you're a student if you're a phd

2598
01:27:14,639 --> 01:27:16,080
student or if you're a lecturer with too

2599
01:27:16,080 --> 01:27:20,159
much time on your hands uh i

2600
01:27:20,159 --> 01:27:22,719
i i'd love for you to get in contact

2601
01:27:22,719 --> 01:27:24,000
with me talk to me about what you love

2602
01:27:24,000 --> 01:27:25,440
about post quantum crypto whether you

2603
01:27:25,440 --> 01:27:26,639
think you can write a challenge or a

2604
01:27:26,639 --> 01:27:28,480
lesson talk about a quirk maybe

2605
01:27:28,480 --> 01:27:30,080
something you think is a fun puzzle for

2606
01:27:30,080 --> 01:27:32,320
students to think about um the site's

2607
01:27:32,320 --> 01:27:34,000
free it's all open everyone can play

2608
01:27:34,000 --> 01:27:35,920
with it and the more people that know

2609
01:27:35,920 --> 01:27:38,000
about these post quantum problems

2610
01:27:38,000 --> 01:27:39,360
i think the more interesting work that

2611
01:27:39,360 --> 01:27:42,480
we can do thank you

2612
01:27:42,480 --> 01:27:46,000
thank you very much

2613
01:27:46,000 --> 01:27:46,580
go

2614
01:27:46,580 --> 01:27:48,080
[Music]

2615
01:27:48,080 --> 01:27:50,400
so most people you probably know about

2616
01:27:50,400 --> 01:27:52,159
zero knowledge proofs mainly from

2617
01:27:52,159 --> 01:27:53,840
blockchain but they also have

2618
01:27:53,840 --> 01:27:56,159
applications outside of blockchain

2619
01:27:56,159 --> 01:27:59,199
but they're pretty hard to

2620
01:27:59,199 --> 01:28:00,400
to make

2621
01:28:00,400 --> 01:28:02,159
creating r1cs is

2622
01:28:02,159 --> 01:28:03,679
very obnoxious

2623
01:28:03,679 --> 01:28:05,840
so we designed a tool um

2624
01:28:05,840 --> 01:28:08,960
we also made a paper called circuitry

2625
01:28:08,960 --> 01:28:11,520
which transforms datalog programs um

2626
01:28:11,520 --> 01:28:14,400
datelock is a subset of prolog into r1cs

2627
01:28:14,400 --> 01:28:16,719
so you can prove things like

2628
01:28:16,719 --> 01:28:18,960
access control we made implementation of

2629
01:28:18,960 --> 01:28:20,639
the belgian

2630
01:28:20,639 --> 01:28:23,120
eu digital code certificates

2631
01:28:23,120 --> 01:28:25,600
in a very efficient manner

2632
01:28:25,600 --> 01:28:27,679
we'd love some feedback on this work

2633
01:28:27,679 --> 01:28:30,639
so feel free to come give us

2634
01:28:30,639 --> 01:28:32,480
come say hi and

2635
01:28:32,480 --> 01:28:34,159
give some feedback

2636
01:28:34,159 --> 01:28:35,280
yeah

2637
01:28:35,280 --> 01:28:36,590
thank you

2638
01:28:36,590 --> 01:28:36,970
[Applause]

2639
01:28:36,970 --> 01:28:42,239
[Music]

2640
01:28:42,239 --> 01:28:44,239
okie dokie

2641
01:28:44,239 --> 01:28:45,679
hi i'm deirdre you might have seen my

2642
01:28:45,679 --> 01:28:46,560
tweets

2643
01:28:46,560 --> 01:28:47,920
um

2644
01:28:47,920 --> 01:28:50,480
i would like to announce that zebra uh

2645
01:28:50,480 --> 01:28:53,040
all rust implementation of zcash the

2646
01:28:53,040 --> 01:28:55,760
fully private cryptocurrency is ready to

2647
01:28:55,760 --> 01:28:58,320
go for the next network activation in a

2648
01:28:58,320 --> 01:28:59,840
couple of weeks

2649
01:28:59,840 --> 01:29:00,719
um

2650
01:29:00,719 --> 01:29:02,000
it's been two and a half years in the

2651
01:29:02,000 --> 01:29:04,880
making and it's pretty ready to go all

2652
01:29:04,880 --> 01:29:06,800
the old bitcoin parts are rewritten in

2653
01:29:06,800 --> 01:29:10,000
async modern rust in many modules if you

2654
01:29:10,000 --> 01:29:12,560
have anything that is bitcoin like you

2655
01:29:12,560 --> 01:29:14,639
might want to look at some of our code

2656
01:29:14,639 --> 01:29:17,040
uh second uh i would like to talk about

2657
01:29:17,040 --> 01:29:19,679
frost which is a work with chelsea como

2658
01:29:19,679 --> 01:29:22,320
we have a bunch of rust implementations

2659
01:29:22,320 --> 01:29:25,199
both existing and iterating as we tweak

2660
01:29:25,199 --> 01:29:27,520
the frost spec the ietf spec that we're

2661
01:29:27,520 --> 01:29:28,400
trying to

2662
01:29:28,400 --> 01:29:29,840
get ready to go

2663
01:29:29,840 --> 01:29:31,440
um so we have code if you want to look

2664
01:29:31,440 --> 01:29:34,000
at that too and work with us to make

2665
01:29:34,000 --> 01:29:35,520
frost on your

2666
01:29:35,520 --> 01:29:37,280
favorite curve parameters to make sure

2667
01:29:37,280 --> 01:29:39,920
that we are fixing all the edge cases

2668
01:29:39,920 --> 01:29:42,400
that we found to make sure everyone is

2669
01:29:42,400 --> 01:29:44,080
doing the kind of same thing where

2670
01:29:44,080 --> 01:29:46,480
appropriate and three i have a podcast

2671
01:29:46,480 --> 01:29:48,800
uh with my co-host david adrian who's

2672
01:29:48,800 --> 01:29:52,320
now at chrome um and thomas patchat

2673
01:29:52,320 --> 01:29:53,920
called security cryptography whatever

2674
01:29:53,920 --> 01:29:55,199
and it talks about all the things that

2675
01:29:55,199 --> 01:29:56,800
we've been talking about today and if

2676
01:29:56,800 --> 01:29:58,239
we've been talking about at hax about

2677
01:29:58,239 --> 01:30:01,280
secure software secure cryptography and

2678
01:30:01,280 --> 01:30:03,920
sometimes football

2679
01:30:03,920 --> 01:30:07,400
thanks very much

2680
01:30:09,040 --> 01:30:10,400
if you aren't following the twitter

2681
01:30:10,400 --> 01:30:11,600
commentary you really should be

2682
01:30:11,600 --> 01:30:12,719
following the twitter commentary it's

2683
01:30:12,719 --> 01:30:13,920
one of the highlights of real world

2684
01:30:13,920 --> 01:30:17,280
crypto every year okay

2685
01:30:18,320 --> 01:30:21,120
folks i'm jason uh for the last couple

2686
01:30:21,120 --> 01:30:23,440
months i've been uh fixing a lot of

2687
01:30:23,440 --> 01:30:25,120
problems in the linux kernel random

2688
01:30:25,120 --> 01:30:26,480
number generator

2689
01:30:26,480 --> 01:30:28,239
which is essentially amounting to a

2690
01:30:28,239 --> 01:30:29,440
rewrite

2691
01:30:29,440 --> 01:30:30,320
and

2692
01:30:30,320 --> 01:30:31,679
i've

2693
01:30:31,679 --> 01:30:34,000
now handled a lot of the easier low

2694
01:30:34,000 --> 01:30:36,639
hanging fruits the obvious problems to

2695
01:30:36,639 --> 01:30:38,159
fix

2696
01:30:38,159 --> 01:30:40,000
and the remaining things to fix are

2697
01:30:40,000 --> 01:30:41,199
numerous

2698
01:30:41,199 --> 01:30:43,520
but not so obvious on how to do so there

2699
01:30:43,520 --> 01:30:45,760
are things like what to do during early

2700
01:30:45,760 --> 01:30:47,040
boot time when there's not a lot of

2701
01:30:47,040 --> 01:30:49,360
entropy and we collected enough entropy

2702
01:30:49,360 --> 01:30:51,440
there questions to answer how often do

2703
01:30:51,440 --> 01:30:53,120
we reseed then

2704
01:30:53,120 --> 01:30:55,199
is jitter on embedded systems a real

2705
01:30:55,199 --> 01:30:56,719
thing

2706
01:30:56,719 --> 01:30:58,639
there are other issues like entropy

2707
01:30:58,639 --> 01:31:00,400
extraction in the interrupt handler when

2708
01:31:00,400 --> 01:31:02,639
we don't have enough cpu budget

2709
01:31:02,639 --> 01:31:04,880
to do real crypto what do we do there

2710
01:31:04,880 --> 01:31:06,480
interesting questions

2711
01:31:06,480 --> 01:31:08,560
um there are these questions of entropy

2712
01:31:08,560 --> 01:31:10,320
estimation which is kind of a flawed

2713
01:31:10,320 --> 01:31:13,600
notion versus a fortuna like scheduler

2714
01:31:13,600 --> 01:31:15,120
and the complexities associated with

2715
01:31:15,120 --> 01:31:17,199
that

2716
01:31:17,199 --> 01:31:18,639
we got to answer whether state

2717
01:31:18,639 --> 01:31:21,440
compromise is even an interesting

2718
01:31:21,440 --> 01:31:23,520
real problem to solve

2719
01:31:23,520 --> 01:31:25,199
sponge constructions anyway there are a

2720
01:31:25,199 --> 01:31:27,600
lot of things to work on

2721
01:31:27,600 --> 01:31:30,719
without super obvious solutions too so

2722
01:31:30,719 --> 01:31:32,480
if you have any interest in these or

2723
01:31:32,480 --> 01:31:34,719
even if you have a strange opinion on it

2724
01:31:34,719 --> 01:31:36,880
please find me and

2725
01:31:36,880 --> 01:31:39,679
hassle me with opinions arguments

2726
01:31:39,679 --> 01:31:41,440
anything i'm just trying to collect some

2727
01:31:41,440 --> 01:31:44,560
ideas thanks

2728
01:31:44,560 --> 01:31:47,600
cool thank you very much

2729
01:31:50,960 --> 01:31:51,920
hello

2730
01:31:51,920 --> 01:31:53,679
uh the dutch national cyber security

2731
01:31:53,679 --> 01:31:56,159
center is working on updates to our

2732
01:31:56,159 --> 01:31:58,480
recommendations for um

2733
01:31:58,480 --> 01:32:02,400
quantum safe cryptography from 2017.

2734
01:32:02,400 --> 01:32:04,880
our focus is on

2735
01:32:04,880 --> 01:32:06,400
um

2736
01:32:06,400 --> 01:32:09,920
early adopters and also on

2737
01:32:09,920 --> 01:32:12,400
preventing store and decrypt attacks so

2738
01:32:12,400 --> 01:32:14,960
in short the the update

2739
01:32:14,960 --> 01:32:17,040
is expected to focus on

2740
01:32:17,040 --> 01:32:20,159
a hybrid key exchange and

2741
01:32:20,159 --> 01:32:22,480
cryptographic agility as mitigating

2742
01:32:22,480 --> 01:32:23,679
measures

2743
01:32:23,679 --> 01:32:26,719
if you'd like to know more and or if

2744
01:32:26,719 --> 01:32:28,400
you'd like to

2745
01:32:28,400 --> 01:32:31,040
give input on a draft then please see me

2746
01:32:31,040 --> 01:32:33,760
during lunch thanks

2747
01:32:33,760 --> 01:32:36,480
thanks very much

2748
01:32:38,639 --> 01:32:41,600
so this is another sort of excruciating

2749
01:32:41,600 --> 01:32:44,320
uh come to my workshop uh security

2750
01:32:44,320 --> 01:32:46,480
standardization research 2022 will be

2751
01:32:46,480 --> 01:32:48,800
happening on the 6th of june in genoa i

2752
01:32:48,800 --> 01:32:51,840
suspect it will be warmer than tron time

2753
01:32:51,840 --> 01:32:52,840
and

2754
01:32:52,840 --> 01:32:55,600
uh maybe not maybe not

2755
01:32:55,600 --> 01:32:57,679
uh and uh it'd be really good to see you

2756
01:32:57,679 --> 01:32:59,520
all there uh and it's just before your

2757
01:32:59,520 --> 01:33:01,280
smp

2758
01:33:01,280 --> 01:33:03,650
thank you very much

2759
01:33:03,650 --> 01:33:05,920
[Music]

2760
01:33:05,920 --> 01:33:07,360
we should have a few spaces if you want

2761
01:33:07,360 --> 01:33:10,080
to go to the end

2762
01:33:10,239 --> 01:33:12,159
yup so hello everyone it's another

2763
01:33:12,159 --> 01:33:14,159
workshop so i just want to promote the

2764
01:33:14,159 --> 01:33:16,080
verified workshop this is going to be an

2765
01:33:16,080 --> 01:33:18,480
eurocrypt affiliated event it's going to

2766
01:33:18,480 --> 01:33:20,480
happen on the

2767
01:33:20,480 --> 01:33:23,760
on the saturday before so it's a great

2768
01:33:23,760 --> 01:33:26,080
place to get started if you want to know

2769
01:33:26,080 --> 01:33:28,719
how to do like formal analysis of crypto

2770
01:33:28,719 --> 01:33:30,080
protocols and don't know where to start

2771
01:33:30,080 --> 01:33:31,600
it's a great workshop

2772
01:33:31,600 --> 01:33:33,520
verified itself is a great accessible

2773
01:33:33,520 --> 01:33:35,120
tool for students but we're also going

2774
01:33:35,120 --> 01:33:36,719
to cover tools like pro variff and

2775
01:33:36,719 --> 01:33:38,960
tamarind thanks

2776
01:33:38,960 --> 01:33:41,600
cool thank you

2777
01:33:42,639 --> 01:33:44,400
thank you

2778
01:33:44,400 --> 01:33:46,800
hi i'm steph and i'm doing free software

2779
01:33:46,800 --> 01:33:48,320
myself and five years ago hugo

2780
01:33:48,320 --> 01:33:50,080
craftchick presented here the swings

2781
01:33:50,080 --> 01:33:51,199
protocol

2782
01:33:51,199 --> 01:33:53,199
and i implemented that

2783
01:33:53,199 --> 01:33:56,159
and it's a very nice password manager

2784
01:33:56,159 --> 01:33:59,199
that has some unique security properties

2785
01:33:59,199 --> 01:34:02,400
that normal password managers don't have

2786
01:34:02,400 --> 01:34:05,360
but it um suffers from free software

2787
01:34:05,360 --> 01:34:08,080
development um limitations no marketing

2788
01:34:08,080 --> 01:34:10,239
so google crafty actually asked me to do

2789
01:34:10,239 --> 01:34:12,320
more marketing that's why i'm here

2790
01:34:12,320 --> 01:34:14,400
uh so i'm looking for some more support

2791
01:34:14,400 --> 01:34:15,920
and developers who can help me for

2792
01:34:15,920 --> 01:34:17,280
example we have no

2793
01:34:17,280 --> 01:34:18,719
apple client

2794
01:34:18,719 --> 01:34:21,120
so if you want to help me with that

2795
01:34:21,120 --> 01:34:22,480
you're very welcome

2796
01:34:22,480 --> 01:34:25,280
and we have some cool things on the

2797
01:34:25,280 --> 01:34:26,480
um

2798
01:34:26,480 --> 01:34:29,440
on a roadmap like threshold oprs and

2799
01:34:29,440 --> 01:34:32,639
moving to opac based password storage

2800
01:34:32,639 --> 01:34:35,440
there's a very exciting things ahead so

2801
01:34:35,440 --> 01:34:38,000
i encourage everyone to have a look at

2802
01:34:38,000 --> 01:34:40,000
my password swings

2803
01:34:40,000 --> 01:34:42,000
there's android clients

2804
01:34:42,000 --> 01:34:44,800
it is going to get packaged in debian

2805
01:34:44,800 --> 01:34:47,600
we have packages for nixos

2806
01:34:47,600 --> 01:34:49,679
if that is not your os

2807
01:34:49,679 --> 01:34:52,320
maybe look how to get it in there

2808
01:34:52,320 --> 01:34:53,840
thanks

2809
01:34:53,840 --> 01:34:56,719
thank you very much

2810
01:34:59,440 --> 01:35:01,920
and the next one

2811
01:35:01,920 --> 01:35:03,920
hello my name is tim and i work at the

2812
01:35:03,920 --> 01:35:05,520
internet security research group so

2813
01:35:05,520 --> 01:35:06,960
we're the non-profit that does let's

2814
01:35:06,960 --> 01:35:09,600
encrypt and we're also hiring so we have

2815
01:35:09,600 --> 01:35:11,679
open roles for sre on the certificate

2816
01:35:11,679 --> 01:35:14,320
authority as well as uh engineering on a

2817
01:35:14,320 --> 01:35:16,639
privacy observing metrics and mpc

2818
01:35:16,639 --> 01:35:18,239
um besides that you know we do a ton of

2819
01:35:18,239 --> 01:35:21,119
stuff from the ca the npc work uh we

2820
01:35:21,119 --> 01:35:22,880
have a lot of memory safety initiatives

2821
01:35:22,880 --> 01:35:24,560
for um

2822
01:35:24,560 --> 01:35:26,239
say more safer memory safe stuff on the

2823
01:35:26,239 --> 01:35:28,400
internet uh so yeah in general if you're

2824
01:35:28,400 --> 01:35:30,320
interested in doing uh public benefit

2825
01:35:30,320 --> 01:35:32,639
work for internet security um you should

2826
01:35:32,639 --> 01:35:34,320
come and check us out you don't have to

2827
01:35:34,320 --> 01:35:36,080
be a cryptographer like the major

2828
01:35:36,080 --> 01:35:39,199
qualification is to not be a jerk

2829
01:35:39,199 --> 01:35:41,679
so you can just uh you know look up uh

2830
01:35:41,679 --> 01:35:43,679
let's encrypt jobs or come find me

2831
01:35:43,679 --> 01:35:44,590
thanks

2832
01:35:44,590 --> 01:35:47,720
[Applause]

2833
01:35:48,710 --> 01:35:50,239
[Music]

2834
01:35:50,239 --> 01:35:51,840
i'm not sure if that last requirement

2835
01:35:51,840 --> 01:35:53,360
has ruled out half of cryptography but

2836
01:35:53,360 --> 01:35:56,800
anyway there we go

2837
01:35:56,800 --> 01:35:58,960
hi uh i just wanted to plug very quickly

2838
01:35:58,960 --> 01:36:01,040
uh if you are interested in rust and

2839
01:36:01,040 --> 01:36:03,520
interested in cryptography there is uh

2840
01:36:03,520 --> 01:36:05,679
the awesome rust cryptography list it is

2841
01:36:05,679 --> 01:36:09,760
a um it is a curated list of uh rust

2842
01:36:09,760 --> 01:36:12,960
crates uh we uh try to keep it updated

2843
01:36:12,960 --> 01:36:15,119
we try to keep it uh reflecting just

2844
01:36:15,119 --> 01:36:17,199
high quality crates uh you can find this

2845
01:36:17,199 --> 01:36:18,119
at

2846
01:36:18,119 --> 01:36:20,320
cryptography.rs we also have the rust

2847
01:36:20,320 --> 01:36:22,159
cryptography interest group which is

2848
01:36:22,159 --> 01:36:24,400
linked at cryptography.rs we're very

2849
01:36:24,400 --> 01:36:25,760
friendly if you have any questions if

2850
01:36:25,760 --> 01:36:26,560
you're interested in rust and

2851
01:36:26,560 --> 01:36:29,440
cryptography please come by

2852
01:36:29,440 --> 01:36:32,320
thank you very much

2853
01:36:32,320 --> 01:36:34,639
we have our penultimate well sort of

2854
01:36:34,639 --> 01:36:38,199
penultimate speaker

2855
01:36:38,400 --> 01:36:41,440
hi i'm daniel and i've been working on

2856
01:36:41,440 --> 01:36:43,360
using cryptographic primitives and

2857
01:36:43,360 --> 01:36:45,360
differential privacy to

2858
01:36:45,360 --> 01:36:47,119
use the trust mediating capabilities

2859
01:36:47,119 --> 01:36:48,800
that you get to separate incentive

2860
01:36:48,800 --> 01:36:50,000
structures in mechanism design and

2861
01:36:50,000 --> 01:36:51,280
mechanism learning so if you're

2862
01:36:51,280 --> 01:36:53,199
interested in

2863
01:36:53,199 --> 01:36:54,719
discussing applications of different

2864
01:36:54,719 --> 01:36:57,360
cryptographic new developments and like

2865
01:36:57,360 --> 01:36:58,639
how you get from trust separation to

2866
01:36:58,639 --> 01:37:00,159
incentive separation

2867
01:37:00,159 --> 01:37:01,440
come talk to me because it's like a bit

2868
01:37:01,440 --> 01:37:03,360
more complex you have like

2869
01:37:03,360 --> 01:37:05,360
larger layers of games

2870
01:37:05,360 --> 01:37:06,800
but you can get some interesting stuff

2871
01:37:06,800 --> 01:37:08,560
done and fulfill some assumptions in

2872
01:37:08,560 --> 01:37:11,280
economic games

2873
01:37:11,280 --> 01:37:12,330
thank you very much

2874
01:37:12,330 --> 01:37:14,960
[Music]

2875
01:37:14,960 --> 01:37:16,270
and over to you

2876
01:37:16,270 --> 01:37:17,520
[Applause]

2877
01:37:17,520 --> 01:37:19,920
hi everyone my name is julie i work on

2878
01:37:19,920 --> 01:37:21,600
the go programming language team at

2879
01:37:21,600 --> 01:37:23,920
google and we're hiring for cryptography

2880
01:37:23,920 --> 01:37:26,320
and security engineers that know go so

2881
01:37:26,320 --> 01:37:27,840
if you're interested please come talk to

2882
01:37:27,840 --> 01:37:29,520
me thanks

2883
01:37:29,520 --> 01:37:32,520
wow

2884
01:37:34,480 --> 01:37:36,080
i feel slightly old because not only do

2885
01:37:36,080 --> 01:37:37,840
i now have to learn go but it seems like

2886
01:37:37,840 --> 01:37:39,760
rust is quite popular and also prologue

2887
01:37:39,760 --> 01:37:42,159
oh my god it's going to be

2888
01:37:42,159 --> 01:37:44,320
anyway um there is another tradition we

2889
01:37:44,320 --> 01:37:45,840
have

2890
01:37:45,840 --> 01:37:46,880
kha'zik

2891
01:37:46,880 --> 01:37:49,600
is recruiting

2892
01:37:49,600 --> 01:37:52,560
the old timers go this yeah okay yeah um

2893
01:37:52,560 --> 01:37:54,239
kha'zix recruiting we have we're the

2894
01:37:54,239 --> 01:37:55,920
biggest crypto group in the world

2895
01:37:55,920 --> 01:37:57,920
academically we have like 100 people

2896
01:37:57,920 --> 01:38:00,960
working on all sorts from hardware to

2897
01:38:00,960 --> 01:38:03,679
privacy stuff to we do we did a block

2898
01:38:03,679 --> 01:38:05,119
cipher at some point that you might have

2899
01:38:05,119 --> 01:38:07,920
heard of so i would um yeah so if you're

2900
01:38:07,920 --> 01:38:09,360
interested there's loads of people from

2901
01:38:09,360 --> 01:38:10,880
kha'zik here it's a really cool place to

2902
01:38:10,880 --> 01:38:12,239
work it's in belgium the home of

2903
01:38:12,239 --> 01:38:15,520
cryptography so um yeah and

2904
01:38:15,520 --> 01:38:17,199
that's it

2905
01:38:17,199 --> 01:38:19,199
no now time for lunch thank you

2906
01:38:19,199 --> 01:38:20,960
everybody thank you for the all the

2907
01:38:20,960 --> 01:38:22,159
speakers and we'll do a bit more

2908
01:38:22,159 --> 01:38:25,159
tomorrow

2909
01:38:27,570 --> 01:38:28,930
[Music]

2910
01:38:28,930 --> 01:38:31,040
[Applause]

2911
01:38:31,040 --> 01:38:33,040
if people have jobs to announce they can

2912
01:38:33,040 --> 01:38:35,520
announce them on iacr.org same with

2913
01:38:35,520 --> 01:38:38,520
events

2914
01:38:46,880 --> 01:38:48,960
you

