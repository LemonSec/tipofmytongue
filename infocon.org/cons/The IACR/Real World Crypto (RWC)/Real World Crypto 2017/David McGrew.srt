1
00:00:00,000 --> 00:00:03,899
so thank you<font color="#E5E5E5"> Tom and rest of the</font>

2
00:00:02,190 --> 00:00:08,189
committee<font color="#E5E5E5"> for the opportunity to talk</font><font color="#CCCCCC"> to</font>

3
00:00:03,899 --> 00:00:10,469
<font color="#E5E5E5">you today as Tom said I'm David and I'm</font>

4
00:00:08,189 --> 00:00:14,129
going to<font color="#E5E5E5"> be presenting joint work with</font>

5
00:00:10,469 --> 00:00:16,859
some collaborators Blake Anderson and

6
00:00:14,130 --> 00:00:22,080
Scott<font color="#CCCCCC"> flour are here today and Christian</font>

7
00:00:16,859 --> 00:00:24,260
appeal is back at<font color="#E5E5E5"> the office so I'd like</font>

8
00:00:22,080 --> 00:00:27,959
<font color="#CCCCCC">to</font><font color="#E5E5E5"> start off</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> giving some background</font>

9
00:00:24,260 --> 00:00:31,109
first<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> some previous</font>

10
00:00:27,960 --> 00:00:34,790
work and some related work the most

11
00:00:31,109 --> 00:00:38,520
important is<font color="#E5E5E5"> wrist and part yellick in</font>

12
00:00:34,790 --> 00:00:41,910
2010 showed us that randomness can go

13
00:00:38,520 --> 00:00:46,110
terribly bad when there is a virtual

14
00:00:41,910 --> 00:00:48,599
machine restart involved and I'll go

15
00:00:46,110 --> 00:00:50,010
over<font color="#E5E5E5"> that in more detail later this is</font>

16
00:00:48,600 --> 00:00:54,059
<font color="#E5E5E5">really important work that we build on</font>

17
00:00:50,010 --> 00:00:57,120
in what we did there's also more recent

18
00:00:54,059 --> 00:01:01,160
work an active scan of https servers

19
00:00:57,120 --> 00:01:03,599
done by bach and others not

20
00:01:01,160 --> 00:01:05,610
disrespecting adversaries for GCM and

21
00:01:03,600 --> 00:01:08,850
what they showed was that there are TLS

22
00:01:05,610 --> 00:01:11,549
servers out there that implement the GCM

23
00:01:08,850 --> 00:01:14,280
base cipher suite and the requirement

24
00:01:11,549 --> 00:01:17,610
for distinct nonces is not met by some

25
00:01:14,280 --> 00:01:21,509
of these servers so in our work we did

26
00:01:17,610 --> 00:01:23,159
passive inferences we did pass a

27
00:01:21,509 --> 00:01:24,869
monitoring of a network and then made

28
00:01:23,159 --> 00:01:27,259
inferences on that with not active but

29
00:01:24,869 --> 00:01:31,560
it's similar in spirit in that we find

30
00:01:27,259 --> 00:01:33,990
flaws in implementations due to repeat

31
00:01:31,560 --> 00:01:37,130
and some related work that's really

32
00:01:33,990 --> 00:01:40,079
important is<font color="#CCCCCC"> bernard coey Halderman</font>

33
00:01:37,130 --> 00:01:42,720
heninger and valenta have some ongoing

34
00:01:40,079 --> 00:01:44,309
related work that has similar findings

35
00:01:42,720 --> 00:01:48,658
to our own so thank you Nadia for

36
00:01:44,310 --> 00:01:52,439
talking with us about that<font color="#E5E5E5"> I want to</font>

37
00:01:48,659 --> 00:01:54,450
take a bar step back and kind<font color="#E5E5E5"> of present</font>

38
00:01:52,439 --> 00:01:57,779
the philosophical approach that we have

39
00:01:54,450 --> 00:02:00,240
to to better explain how the the work

40
00:01:57,780 --> 00:02:05,310
we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be presenting in detail</font>

41
00:02:00,240 --> 00:02:07,740
relates to the bigger picture<font color="#E5E5E5"> and what</font>

42
00:02:05,310 --> 00:02:09,690
we have is a threat driven approach to

43
00:02:07,740 --> 00:02:12,600
cryptography and<font color="#E5E5E5"> you probably heard in</font>

44
00:02:09,690 --> 00:02:14,430
the industry people talk about you know

45
00:02:12,600 --> 00:02:16,920
a threat centric approach to

46
00:02:14,430 --> 00:02:19,920
<font color="#E5E5E5">cybersecurity and we very consciously</font>

47
00:02:16,920 --> 00:02:22,200
mean the same thing here<font color="#CCCCCC"> so I want you</font>

48
00:02:19,920 --> 00:02:25,170
<font color="#E5E5E5">to pretend for the rest of the</font>

49
00:02:22,200 --> 00:02:28,079
presentation that<font color="#CCCCCC"> you are an information</font>

50
00:02:25,170 --> 00:02:30,450
security analyst and you're<font color="#CCCCCC"> responsible</font>

51
00:02:28,080 --> 00:02:33,060
for<font color="#E5E5E5"> protecting some set of assets right</font>

52
00:02:30,450 --> 00:02:35,700
so our<font color="#E5E5E5"> info tech person is on the right</font>

53
00:02:33,060 --> 00:02:37,740
and there's a set of assets that you

54
00:02:35,700 --> 00:02:39,060
<font color="#E5E5E5">need to protect there's a set of</font>

55
00:02:37,740 --> 00:02:42,120
vulnerabilities in your<font color="#CCCCCC"> information</font>

56
00:02:39,060 --> 00:02:44,940
systems and you have controls like

57
00:02:42,120 --> 00:02:46,980
anti-malware antivirus and transport

58
00:02:44,940 --> 00:02:50,220
layer security to protect communications

59
00:02:46,980 --> 00:02:52,890
and these your controls are your

60
00:02:50,220 --> 00:02:55,520
protections and then there's a set of

61
00:02:52,890 --> 00:02:58,470
threats that you need to worry about<font color="#E5E5E5"> and</font>

62
00:02:55,520 --> 00:03:01,380
it's some adversary that<font color="#E5E5E5"> wants to get at</font>

63
00:02:58,470 --> 00:03:04,130
your assets and steal your<font color="#E5E5E5"> data or you</font>

64
00:03:01,380 --> 00:03:06,870
know cause your power grid to go down or

65
00:03:04,130 --> 00:03:09,060
you know do some<font color="#E5E5E5"> other damage and it's</font>

66
00:03:06,870 --> 00:03:11,850
<font color="#CCCCCC">really important to think about</font><font color="#E5E5E5"> things</font>

67
00:03:09,060 --> 00:03:13,050
<font color="#E5E5E5">in terms of what</font><font color="#CCCCCC"> are the adversaries</font>

68
00:03:11,850 --> 00:03:17,160
capabilities what are their motivations

69
00:03:13,050 --> 00:03:20,850
and that helps you to understand and

70
00:03:17,160 --> 00:03:22,350
prioritize what vulnerabilities you

71
00:03:20,850 --> 00:03:25,739
should be paying attention to and so on

72
00:03:22,350 --> 00:03:28,710
and you'll<font color="#E5E5E5"> notice my my threat icon here</font>

73
00:03:25,740 --> 00:03:31,080
is intended to look like either a war

74
00:03:28,710 --> 00:03:33,870
fighter or a thug<font color="#CCCCCC"> current somebody who</font>

75
00:03:31,080 --> 00:03:35,370
works for organized crime which<font color="#CCCCCC"> is the</font>

76
00:03:33,870 --> 00:03:37,590
<font color="#CCCCCC">appropriate thing</font><font color="#E5E5E5"> for the real world and</font>

77
00:03:35,370 --> 00:03:39,360
<font color="#E5E5E5">if you haven't read</font><font color="#CCCCCC"> filled</font><font color="#E5E5E5"> raaga ways</font>

78
00:03:37,590 --> 00:03:41,610
excellent essay on the moral character

79
00:03:39,360 --> 00:03:44,220
of cryptography which you know touches

80
00:03:41,610 --> 00:03:51,080
on the<font color="#CCCCCC"> the importance of appropriate</font>

81
00:03:44,220 --> 00:03:52,860
symbols<font color="#CCCCCC"> I encourage you to read that so</font>

82
00:03:51,080 --> 00:03:55,050
you're responsible for<font color="#E5E5E5"> protecting</font>

83
00:03:52,860 --> 00:03:58,860
information assets that might<font color="#E5E5E5"> include a</font>

84
00:03:55,050 --> 00:04:02,130
data center at the<font color="#E5E5E5"> bottom right there a</font>

85
00:03:58,860 --> 00:04:03,960
campus network that has a bunch<font color="#CCCCCC"> of you</font>

86
00:04:02,130 --> 00:04:06,329
know wireless clients and other clients

87
00:04:03,960 --> 00:04:07,980
on it and then of<font color="#CCCCCC"> course there you</font><font color="#E5E5E5"> might</font>

88
00:04:06,330 --> 00:04:09,930
use cloud services which is essentially

89
00:04:07,980 --> 00:04:12,630
somebody else's data center over the

90
00:04:09,930 --> 00:04:15,150
<font color="#CCCCCC">Internet and a set</font><font color="#E5E5E5"> of mobile devices</font><font color="#CCCCCC"> and</font>

91
00:04:12,630 --> 00:04:16,548
they all<font color="#CCCCCC"> have information and then the</font>

92
00:04:15,150 --> 00:04:19,350
orange lines are intended<font color="#CCCCCC"> to illustrate</font>

93
00:04:16,548 --> 00:04:21,810
the encrypted connections that are

94
00:04:19,350 --> 00:04:24,350
relying on to actually protect all this

95
00:04:21,810 --> 00:04:26,420
information right so

96
00:04:24,350 --> 00:04:31,490
the<font color="#CCCCCC"> communication security is critical</font>

97
00:04:26,420 --> 00:04:32,780
and it has<font color="#CCCCCC"> to be done right</font><font color="#E5E5E5"> and as an</font>

98
00:04:31,490 --> 00:04:35,780
information<font color="#CCCCCC"> security person you should</font>

99
00:04:32,780 --> 00:04:38,840
ask the question you know is it<font color="#E5E5E5"> being</font>

100
00:04:35,780 --> 00:04:40,669
done<font color="#E5E5E5"> right and we have</font><font color="#CCCCCC"> a way of talking</font>

101
00:04:38,840 --> 00:04:45,169
about<font color="#E5E5E5"> this which is crypto visibility</font>

102
00:04:40,670 --> 00:04:47,660
which the idea being as an information

103
00:04:45,170 --> 00:04:50,300
<font color="#CCCCCC">security person do you actually have an</font>

104
00:04:47,660 --> 00:04:52,520
understanding<font color="#E5E5E5"> of where cryptography is</font>

105
00:04:50,300 --> 00:04:54,320
being used and and how<font color="#E5E5E5"> correct it is so</font>

106
00:04:52,520 --> 00:04:57,650
you want to<font color="#E5E5E5"> be able to ask questions and</font>

107
00:04:54,320 --> 00:04:59,780
aunt have<font color="#E5E5E5"> answers like is it encryption</font>

108
00:04:57,650 --> 00:05:02,239
<font color="#E5E5E5">and use where it needed is sensitive</font>

109
00:04:59,780 --> 00:05:04,039
data being appropriately protected are

110
00:05:02,240 --> 00:05:07,250
there active attacks or exploits going

111
00:05:04,040 --> 00:05:08,720
on are there bad certificates in use you

112
00:05:07,250 --> 00:05:10,910
know bet you know tease<font color="#E5E5E5"> that are being</font>

113
00:05:08,720 --> 00:05:16,010
trusted it shouldn't be trusted and then

114
00:05:10,910 --> 00:05:18,500
the focus of the talk today is around a

115
00:05:16,010 --> 00:05:20,390
week cryptography that's being used and

116
00:05:18,500 --> 00:05:22,430
that can you know<font color="#CCCCCC"> their two major</font>

117
00:05:20,390 --> 00:05:24,919
categories there one being you know

118
00:05:22,430 --> 00:05:26,480
sometimes obsolete cipher<font color="#CCCCCC"> Suites and you</font>

119
00:05:24,920 --> 00:05:28,400
know inadequate key sites that are

120
00:05:26,480 --> 00:05:31,070
actually<font color="#E5E5E5"> used and it's very valuable to</font>

121
00:05:28,400 --> 00:05:33,760
get a view of you know where they're

122
00:05:31,070 --> 00:05:37,640
being<font color="#CCCCCC"> used and you know somebody's using</font>

123
00:05:33,760 --> 00:05:38,930
1024 bit RSA that may or may<font color="#CCCCCC"> not be you</font>

124
00:05:37,640 --> 00:05:40,849
know security<font color="#E5E5E5"> critical depending on</font>

125
00:05:38,930 --> 00:05:42,380
where it's being used and then also

126
00:05:40,850 --> 00:05:44,590
there's a set of implementation flaws

127
00:05:42,380 --> 00:05:47,840
right there might be a cipher suite that

128
00:05:44,590 --> 00:05:50,780
is<font color="#CCCCCC"> strong sorry for sweet but then the</font>

129
00:05:47,840 --> 00:05:53,750
implementation is incorrect and<font color="#E5E5E5"> that's</font>

130
00:05:50,780 --> 00:05:55,549
causing a problem right<font color="#E5E5E5"> so in our work</font>

131
00:05:53,750 --> 00:05:57,680
we focus on using passive network

132
00:05:55,550 --> 00:06:00,050
monitoring that is aware of TLS sessions

133
00:05:57,680 --> 00:06:05,540
and aware of cryptography as a way to

134
00:06:00,050 --> 00:06:09,340
provide this sort of visibility so let's

135
00:06:05,540 --> 00:06:09,340
move on<font color="#E5E5E5"> to detecting flaws</font>

136
00:06:12,750 --> 00:06:18,390
we use what<font color="#E5E5E5"> we call the multi-session</font>

137
00:06:15,420 --> 00:06:20,610
monitoring model and essentially you can

138
00:06:18,390 --> 00:06:23,789
<font color="#E5E5E5">monitor the network at just one point</font>

139
00:06:20,610 --> 00:06:26,130
but you have to<font color="#E5E5E5"> have an elephant's</font>

140
00:06:23,790 --> 00:06:29,600
memory right<font color="#E5E5E5"> because if</font><font color="#CCCCCC"> you want to look</font>

141
00:06:26,130 --> 00:06:31,830
for<font color="#CCCCCC"> something like a collision between</font>

142
00:06:29,600 --> 00:06:34,110
pseudo-random number generator state in

143
00:06:31,830 --> 00:06:35,969
two different sessions you need to have

144
00:06:34,110 --> 00:06:37,980
a<font color="#CCCCCC"> long term memory and that enables you</font>

145
00:06:35,970 --> 00:06:40,800
to you know find sessions that might be

146
00:06:37,980 --> 00:06:43,200
separated by a great distance<font color="#E5E5E5"> in time of</font>

147
00:06:40,800 --> 00:06:45,900
course<font color="#E5E5E5"> you can monitor at multiple</font>

148
00:06:43,200 --> 00:06:48,300
places multiple networks and that gives

149
00:06:45,900 --> 00:06:49,890
you you know<font color="#E5E5E5"> more visibility but you</font>

150
00:06:48,300 --> 00:06:52,919
know a single monitoring point is

151
00:06:49,890 --> 00:06:55,380
adequate so this<font color="#E5E5E5"> is our simple model a</font>

152
00:06:52,919 --> 00:06:57,479
pls<font color="#E5E5E5"> I'll go into</font><font color="#CCCCCC"> that more later but the</font>

153
00:06:55,380 --> 00:06:59,310
important thing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that PRNG you know it</font>

154
00:06:57,480 --> 00:07:02,850
<font color="#CCCCCC">shouldn't have some</font><font color="#E5E5E5"> really large set of</font>

155
00:06:59,310 --> 00:07:05,520
possible<font color="#E5E5E5"> states but if it has a small</font>

156
00:07:02,850 --> 00:07:09,180
typical set typical in Shannon entropy

157
00:07:05,520 --> 00:07:15,359
terms then you know an attacker can

158
00:07:09,180 --> 00:07:16,680
<font color="#E5E5E5">potentially you exploit this fact by you</font>

159
00:07:15,360 --> 00:07:18,090
know finding sessions that actually

160
00:07:16,680 --> 00:07:21,570
collide and it's feasible to do if<font color="#CCCCCC"> the</font>

161
00:07:18,090 --> 00:07:24,150
typical sets small the monitoring tools

162
00:07:21,570 --> 00:07:26,640
that we used is an open source package

163
00:07:24,150 --> 00:07:28,650
that Blake and I and<font color="#E5E5E5"> some other people</font>

164
00:07:26,640 --> 00:07:31,380
put together which the package is called

165
00:07:28,650 --> 00:07:34,200
joy and it can turn<font color="#E5E5E5"> a pcap or a live</font>

166
00:07:31,380 --> 00:07:37,159
network capture into<font color="#CCCCCC"> JSON descriptions</font>

167
00:07:34,200 --> 00:07:39,930
of the network traffic it has kind<font color="#E5E5E5"> of a</font>

168
00:07:37,160 --> 00:07:42,090
flow monitoring viewpoint except it's

169
00:07:39,930 --> 00:07:44,669
much richer than flow but it's not a per

170
00:07:42,090 --> 00:07:48,090
packet it's a perfect and it's open

171
00:07:44,669 --> 00:07:50,580
source and like all great open source

172
00:07:48,090 --> 00:07:51,659
it's you know the documentation sucks

173
00:07:50,580 --> 00:07:56,760
and if you're interested in<font color="#E5E5E5"> it please</font>

174
00:07:51,660 --> 00:07:58,979
send us an email so<font color="#E5E5E5"> I'm going to touch</font>

175
00:07:56,760 --> 00:08:01,070
on virtual machines a<font color="#E5E5E5"> little bit because</font>

176
00:07:58,979 --> 00:08:04,680
they're really important for

177
00:08:01,070 --> 00:08:09,330
<font color="#E5E5E5">understanding the sum of the failure</font>

178
00:08:04,680 --> 00:08:12,900
modes so in a virtual machine snapshot

179
00:08:09,330 --> 00:08:14,580
is basically just a set of bits that can

180
00:08:12,900 --> 00:08:17,880
be stored and then later cloned into

181
00:08:14,580 --> 00:08:20,789
other running images and a<font color="#E5E5E5"> really</font>

182
00:08:17,880 --> 00:08:23,729
important use case prediction practice

183
00:08:20,789 --> 00:08:26,050
is something called auto scaling and in

184
00:08:23,729 --> 00:08:32,080
auto scaling there will<font color="#CCCCCC"> be</font>

185
00:08:26,050 --> 00:08:36,700
a server that<font color="#CCCCCC"> has</font><font color="#E5E5E5"> a hypervisor</font><font color="#CCCCCC"> and it</font>

186
00:08:32,080 --> 00:08:38,289
runs an image of you say<font color="#E5E5E5"> it runs the</font>

187
00:08:36,700 --> 00:08:40,479
you're one of these<font color="#E5E5E5"> images here and then</font>

188
00:08:38,289 --> 00:08:43,299
when the load<font color="#E5E5E5"> on it increases it'll spin</font>

189
00:08:40,479 --> 00:08:45,310
up a new virtual machine with another

190
00:08:43,299 --> 00:08:47,560
copy<font color="#E5E5E5"> of the same image so that it can</font>

191
00:08:45,310 --> 00:08:49,899
provide you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> the greater scale for</font>

192
00:08:47,560 --> 00:08:56,829
the same service so that's called auto

193
00:08:49,899 --> 00:08:58,510
scaling and the it's important<font color="#E5E5E5"> to</font>

194
00:08:56,829 --> 00:09:00,189
realize the difference between<font color="#CCCCCC"> a volume</font>

195
00:08:58,510 --> 00:09:02,680
snapshot in the full snapshot right and

196
00:09:00,190 --> 00:09:05,459
<font color="#E5E5E5">this is something</font><font color="#CCCCCC"> that you know rishta</font>

197
00:09:02,680 --> 00:09:07,870
<font color="#CCCCCC">part</font><font color="#E5E5E5"> yellick introduced this but let me</font>

198
00:09:05,459 --> 00:09:10,359
cover it<font color="#CCCCCC"> again to make</font><font color="#E5E5E5"> sure that we're</font>

199
00:09:07,870 --> 00:09:13,950
all on the same page<font color="#E5E5E5"> a boring of</font>

200
00:09:10,360 --> 00:09:18,100
snapshot is an image of a bootable disk

201
00:09:13,950 --> 00:09:21,190
and by contrast a full snapshot is an

202
00:09:18,100 --> 00:09:25,690
image of the random access memory as

203
00:09:21,190 --> 00:09:28,029
well as the<font color="#E5E5E5"> disk so if you start a vm</font>

204
00:09:25,690 --> 00:09:30,399
<font color="#E5E5E5">from a volume snapshot you're going to</font>

205
00:09:28,029 --> 00:09:31,839
have<font color="#E5E5E5"> the latency</font><font color="#CCCCCC"> of a boot whereas what</font>

206
00:09:30,399 --> 00:09:33,670
the full snapshot you won't have the

207
00:09:31,839 --> 00:09:35,980
boot latency you basically copy the

208
00:09:33,670 --> 00:09:37,719
image into running memory you tweak a

209
00:09:35,980 --> 00:09:41,860
couple of things<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you're good</font><font color="#CCCCCC"> to</font>

210
00:09:37,720 --> 00:09:44,770
go so blind snapshot is not vulnerable

211
00:09:41,860 --> 00:09:47,800
to<font color="#E5E5E5"> the attacks that we're going to be</font>

212
00:09:44,770 --> 00:09:49,720
describing it<font color="#CCCCCC"> in a vm research situation</font>

213
00:09:47,800 --> 00:09:52,540
but a full snapshot does have these

214
00:09:49,720 --> 00:09:54,070
vulnerabilities and slight nuance is of

215
00:09:52,540 --> 00:09:58,510
course that there are operating systems

216
00:09:54,070 --> 00:10:01,870
that that store random seed on on volume

217
00:09:58,510 --> 00:10:05,050
snapshot but that's a minor thing that

218
00:10:01,870 --> 00:10:08,860
we didn't focus on so in our vm

219
00:10:05,050 --> 00:10:10,569
experiments we worked to duplicate some

220
00:10:08,860 --> 00:10:13,329
of the failures that we've seen<font color="#E5E5E5"> in the</font>

221
00:10:10,570 --> 00:10:14,170
<font color="#CCCCCC">wild in in a lab setting so that we</font>

222
00:10:13,329 --> 00:10:15,880
could make sure that we were

223
00:10:14,170 --> 00:10:20,829
understanding them we also worked<font color="#E5E5E5"> with</font>

224
00:10:15,880 --> 00:10:22,930
several different you know enterprise

225
00:10:20,829 --> 00:10:24,310
offerings for virtual machines to

226
00:10:22,930 --> 00:10:25,510
investigate you know which of these

227
00:10:24,310 --> 00:10:27,579
would actually have these types of

228
00:10:25,510 --> 00:10:30,939
failures and<font color="#CCCCCC"> the first is we worked with</font>

229
00:10:27,579 --> 00:10:32,579
a malware sandbox environment and threat

230
00:10:30,940 --> 00:10:36,399
grid is a particular<font color="#E5E5E5"> one we worked with</font>

231
00:10:32,579 --> 00:10:38,770
and they use a full snapshot just make

232
00:10:36,399 --> 00:10:39,760
sure everybody understands what I mean

233
00:10:38,770 --> 00:10:42,130
is

234
00:10:39,760 --> 00:10:43,510
a malware sandbox is a dynamic execution

235
00:10:42,130 --> 00:10:48,880
environment where<font color="#CCCCCC"> you can introduce an</font>

236
00:10:43,510 --> 00:10:50,470
executable sample into an operating

237
00:10:48,880 --> 00:10:52,240
<font color="#CCCCCC">system and then the operating system</font>

238
00:10:50,470 --> 00:10:55,420
will run that executable it could be

239
00:10:52,240 --> 00:10:58,120
visual basic<font color="#CCCCCC"> or JavaScript or exe or</font>

240
00:10:55,420 --> 00:11:00,910
whatever it'll<font color="#E5E5E5"> run that and then after</font>

241
00:10:58,120 --> 00:11:02,860
running it it will check<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see what is</font>

242
00:11:00,910 --> 00:11:07,510
it was a good or<font color="#CCCCCC"> bad right so it's used</font>

243
00:11:02,860 --> 00:11:10,330
in malware detection and several other

244
00:11:07,510 --> 00:11:14,020
environments docker and VMware links

245
00:11:10,330 --> 00:11:15,790
clones we<font color="#E5E5E5"> tested and they used the</font>

246
00:11:14,020 --> 00:11:21,160
volume snapshots right so we did not

247
00:11:15,790 --> 00:11:22,360
observe the failure on that and the

248
00:11:21,160 --> 00:11:23,469
<font color="#E5E5E5">reason we took this approach right we</font>

249
00:11:22,360 --> 00:11:25,660
checked a bunch<font color="#E5E5E5"> of things right because</font>

250
00:11:23,470 --> 00:11:28,390
in software it's Turtles all the way

251
00:11:25,660 --> 00:11:30,189
down right that there can be an

252
00:11:28,390 --> 00:11:31,390
application their container under that a

253
00:11:30,190 --> 00:11:33,460
virtual machine and under that an

254
00:11:31,390 --> 00:11:35,860
operating system under that right and we

255
00:11:33,460 --> 00:11:38,800
talked to a bunch of people<font color="#CCCCCC"> that work</font>

256
00:11:35,860 --> 00:11:40,210
with virtual machines and you know what

257
00:11:38,800 --> 00:11:42,640
we heard<font color="#CCCCCC"> from them was they were very</font>

258
00:11:40,210 --> 00:11:44,830
glad to hear about<font color="#E5E5E5"> you know ways of</font>

259
00:11:42,640 --> 00:11:46,569
testing to make sure that the turtle

260
00:11:44,830 --> 00:11:48,280
below you isn't miss behaving in a way

261
00:11:46,570 --> 00:11:50,440
that undermined to your security which i

262
00:11:48,280 --> 00:11:52,390
think is a good way<font color="#CCCCCC"> to think about it</font>

263
00:11:50,440 --> 00:11:55,960
right that you can have the<font color="#E5E5E5"> best</font>

264
00:11:52,390 --> 00:11:57,580
possible application but if you run it

265
00:11:55,960 --> 00:12:07,630
in you know one of the<font color="#E5E5E5"> turtles below can</font>

266
00:11:57,580 --> 00:12:10,450
subvert it so there<font color="#CCCCCC"> are a number of</font>

267
00:12:07,630 --> 00:12:14,439
different<font color="#E5E5E5"> scenarios where you know TLS</font>

268
00:12:10,450 --> 00:12:17,620
failures can occur and you're<font color="#E5E5E5"> probably</font>

269
00:12:14,440 --> 00:12:20,530
familiar with the TLS protocol but just

270
00:12:17,620 --> 00:12:23,650
to review a few things quickly there is

271
00:12:20,530 --> 00:12:25,660
a field in the initial handshake both

272
00:12:23,650 --> 00:12:27,819
the server and client hello the initial

273
00:12:25,660 --> 00:12:29,829
messages that they sent and it's called

274
00:12:27,820 --> 00:12:32,710
random that's the name<font color="#CCCCCC"> of the field</font><font color="#E5E5E5"> and</font>

275
00:12:29,830 --> 00:12:34,600
it serves as a random<font color="#E5E5E5"> not in the sense</font>

276
00:12:32,710 --> 00:12:38,470
that it's right and<font color="#E5E5E5"> our replay</font>

277
00:12:34,600 --> 00:12:40,840
protection and it's also used as a

278
00:12:38,470 --> 00:12:42,460
unique input<font color="#CCCCCC"> forty derivation purposes</font>

279
00:12:40,840 --> 00:12:45,880
right those<font color="#E5E5E5"> are the main functions it</font>

280
00:12:42,460 --> 00:12:50,980
<font color="#E5E5E5">has and for the client it's supposed</font><font color="#CCCCCC"> to</font>

281
00:12:45,880 --> 00:12:53,000
have the time at the in the initial 32

282
00:12:50,980 --> 00:12:54,830
bits and for the server

283
00:12:53,000 --> 00:12:56,300
it's<font color="#E5E5E5"> not supposed to have that but then</font>

284
00:12:54,830 --> 00:12:57,500
again it's not really fully specified

285
00:12:56,300 --> 00:13:00,560
the server is supposed to make it

286
00:12:57,500 --> 00:13:02,930
<font color="#E5E5E5">distinct right it's not literally it the</font>

287
00:13:00,560 --> 00:13:05,869
field is called random the RFC is a

288
00:13:02,930 --> 00:13:07,099
little bit of you know loose on exactly

289
00:13:05,870 --> 00:13:10,430
how it's supposed to<font color="#E5E5E5"> be formed</font><font color="#CCCCCC"> and in</font>

290
00:13:07,100 --> 00:13:11,690
practice<font color="#E5E5E5"> you know we you know some</font>

291
00:13:10,430 --> 00:13:13,969
<font color="#CCCCCC">people don't set the time when they</font>

292
00:13:11,690 --> 00:13:17,240
should and some people<font color="#CCCCCC"> put a time in the</font>

293
00:13:13,970 --> 00:13:21,350
server not<font color="#E5E5E5"> even though they're</font><font color="#CCCCCC"> not</font>

294
00:13:17,240 --> 00:13:22,850
required<font color="#CCCCCC"> to do that so but but what's</font>

295
00:13:21,350 --> 00:13:25,550
important about these<font color="#CCCCCC"> launches is that</font>

296
00:13:22,850 --> 00:13:27,080
if there's a<font color="#CCCCCC"> prng state collision then</font>

297
00:13:25,550 --> 00:13:29,839
you can<font color="#E5E5E5"> observe a collision in the</font>

298
00:13:27,080 --> 00:13:33,110
nonces so we have the<font color="#E5E5E5"> following simple</font>

299
00:13:29,840 --> 00:13:35,720
model of a pls that<font color="#CCCCCC"> I showed before let</font>

300
00:13:33,110 --> 00:13:39,560
me explain<font color="#CCCCCC"> it in a little more detail so</font>

301
00:13:35,720 --> 00:13:42,790
essentially we have the observable field

302
00:13:39,560 --> 00:13:45,829
the<font color="#CCCCCC"> the time field if its present the</font>

303
00:13:42,790 --> 00:13:48,469
the random and a quaint key exchange

304
00:13:45,830 --> 00:13:52,040
which is<font color="#CCCCCC"> something that contains either</font>

305
00:13:48,470 --> 00:13:56,530
the RSA cipher text or diffie-hellman or

306
00:13:52,040 --> 00:13:56,530
elliptic curve diffie-hellman value and

307
00:13:56,920 --> 00:14:02,209
there's an entropy source that feeds

308
00:13:59,120 --> 00:14:05,120
into<font color="#E5E5E5"> a</font><font color="#CCCCCC"> PRNG and the prg is some software</font>

309
00:14:02,210 --> 00:14:09,440
<font color="#E5E5E5">thing that is typically part of the</font>

310
00:14:05,120 --> 00:14:11,450
operating<font color="#E5E5E5"> system and the</font><font color="#CCCCCC"> prg will feed</font>

311
00:14:09,440 --> 00:14:13,280
into a nonce generator that's just<font color="#E5E5E5"> our</font>

312
00:14:11,450 --> 00:14:15,230
term for that there's some logic that

313
00:14:13,280 --> 00:14:17,390
actually reads from the<font color="#CCCCCC"> prg and writes</font>

314
00:14:15,230 --> 00:14:19,430
it into the knots and then there's the

315
00:14:17,390 --> 00:14:22,610
cryptographic component that generates

316
00:14:19,430 --> 00:14:24,140
the other field and the clock is fairly

317
00:14:22,610 --> 00:14:25,640
separate from all this right so you<font color="#E5E5E5"> can</font>

318
00:14:24,140 --> 00:14:27,470
think<font color="#E5E5E5"> of this is like a directed acyclic</font>

319
00:14:25,640 --> 00:14:29,750
<font color="#E5E5E5">graph right where a failure will</font>

320
00:14:27,470 --> 00:14:36,260
propagate along the direction of the

321
00:14:29,750 --> 00:14:39,710
graph so there<font color="#E5E5E5"> are essentially four main</font>

322
00:14:36,260 --> 00:14:42,920
categories of failure modes that that we

323
00:14:39,710 --> 00:14:44,620
observed and our catch all sorts so to

324
00:14:42,920 --> 00:14:48,550
speak is what we call an aberrant

325
00:14:44,620 --> 00:14:50,810
implementation this is something<font color="#CCCCCC"> that</font>

326
00:14:48,550 --> 00:14:53,420
fails to conform to the spec and

327
00:14:50,810 --> 00:14:56,239
probably isn't really trying<font color="#E5E5E5"> to conform</font>

328
00:14:53,420 --> 00:14:58,430
to the GLS specification right so these

329
00:14:56,240 --> 00:15:01,970
<font color="#E5E5E5">are interesting and we observed a number</font>

330
00:14:58,430 --> 00:15:04,160
of these you know malware you know does

331
00:15:01,970 --> 00:15:06,310
this sometimes and some non malware

332
00:15:04,160 --> 00:15:07,719
applications do it as<font color="#CCCCCC"> well</font>

333
00:15:06,310 --> 00:15:09,219
not clear what the non malware

334
00:15:07,720 --> 00:15:11,860
applications are trying to achieve the

335
00:15:09,220 --> 00:15:13,720
malware is apparently trying to cut down

336
00:15:11,860 --> 00:15:18,700
<font color="#CCCCCC">on computational cost or something like</font>

337
00:15:13,720 --> 00:15:20,770
that although that's speculation and in

338
00:15:18,700 --> 00:15:23,100
an aberrant implementation the the field

339
00:15:20,770 --> 00:15:25,720
<font color="#CCCCCC">that might</font><font color="#E5E5E5"> be fixed they might be</font>

340
00:15:23,100 --> 00:15:27,490
repeating they they're going to behave

341
00:15:25,720 --> 00:15:31,050
<font color="#CCCCCC">in some way that's that's unpredictable</font>

342
00:15:27,490 --> 00:15:33,790
and and doesn't correspond to the spec

343
00:15:31,050 --> 00:15:37,779
up here ng flaws is much more

344
00:15:33,790 --> 00:15:39,730
interesting<font color="#E5E5E5"> so in this case the</font><font color="#CCCCCC"> prng is</font>

345
00:15:37,779 --> 00:15:40,930
going to be a repeating value and it

346
00:15:39,730 --> 00:15:45,570
might<font color="#CCCCCC"> be for example something</font><font color="#E5E5E5"> that</font>

347
00:15:40,930 --> 00:15:49,750
updates no greater than once a

348
00:15:45,570 --> 00:15:50,980
millisecond and so that's<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font>

349
00:15:49,750 --> 00:15:54,040
failure<font color="#E5E5E5"> modes that we observed and in</font>

350
00:15:50,980 --> 00:15:56,950
this case so the<font color="#CCCCCC"> PRNG state will be</font>

351
00:15:54,040 --> 00:16:01,449
repeating and the repeating values will

352
00:15:56,950 --> 00:16:03,310
feed into the nonce generator and they

353
00:16:01,450 --> 00:16:08,110
may feed into the client key exchange

354
00:16:03,310 --> 00:16:09,430
and<font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> that the the random value</font>

355
00:16:08,110 --> 00:16:12,839
might be identical in the client key

356
00:16:09,430 --> 00:16:17,109
exchange wouldn't is because the<font color="#CCCCCC"> entropy</font>

357
00:16:12,839 --> 00:16:19,839
might reset the<font color="#CCCCCC"> PRNG in between the</font>

358
00:16:17,110 --> 00:16:22,089
calls right<font color="#E5E5E5"> and so it's not completely</font>

359
00:16:19,839 --> 00:16:24,820
deterministic when that<font color="#CCCCCC"> reseeding</font>

360
00:16:22,089 --> 00:16:28,930
happens so sometimes it's possible to

361
00:16:24,820 --> 00:16:33,730
see a random that repeats with a client

362
00:16:28,930 --> 00:16:34,900
key exchange that doesn't and lastly

363
00:16:33,730 --> 00:16:37,870
does you know maybe<font color="#E5E5E5"> the really</font>

364
00:16:34,900 --> 00:16:39,910
interesting thing is the multiple

365
00:16:37,870 --> 00:16:43,780
running instances of a<font color="#E5E5E5"> full snapshot</font>

366
00:16:39,910 --> 00:16:45,130
right so that's a big phrase but trying

367
00:16:43,780 --> 00:16:48,280
to<font color="#E5E5E5"> be specific here remember</font><font color="#CCCCCC"> they're</font>

368
00:16:45,130 --> 00:16:50,439
full snapshot copies<font color="#E5E5E5"> RAM and when you</font>

369
00:16:48,280 --> 00:16:54,069
<font color="#CCCCCC">have multiple running instances that the</font>

370
00:16:50,440 --> 00:16:56,709
the case of or somebody has made these

371
00:16:54,070 --> 00:16:59,020
these clones and the one opponent when

372
00:16:56,709 --> 00:17:01,359
each clone initially starts its<font color="#CCCCCC"> PRNG</font>

373
00:16:59,020 --> 00:17:07,139
state is going<font color="#E5E5E5"> to be identical as shown</font>

374
00:17:01,360 --> 00:17:09,819
<font color="#E5E5E5">here and so similar</font><font color="#CCCCCC"> to the previous case</font>

375
00:17:07,140 --> 00:17:14,860
the the random may repeat and the client

376
00:17:09,819 --> 00:17:18,220
key exchange may repeat and oh if there

377
00:17:14,859 --> 00:17:19,719
is a client<font color="#E5E5E5"> key exchange repeat you'll</font>

378
00:17:18,220 --> 00:17:23,500
definitely see<font color="#E5E5E5"> a random</font>

379
00:17:19,720 --> 00:17:25,089
that's repeating as well and the<font color="#E5E5E5"> last</font>

380
00:17:23,500 --> 00:17:26,619
case is the least interesting which is

381
00:17:25,089 --> 00:17:29,289
<font color="#CCCCCC">an active network scan there are some</font>

382
00:17:26,619 --> 00:17:32,408
network tools that will do HTTPS scans

383
00:17:29,289 --> 00:17:33,850
and these are things<font color="#E5E5E5"> like you know if</font>

384
00:17:32,409 --> 00:17:36,220
you wanted to find out what cipher

385
00:17:33,850 --> 00:17:37,750
Suites you know servers are offering you

386
00:17:36,220 --> 00:17:39,580
<font color="#E5E5E5">have to make construct a client hello</font>

387
00:17:37,750 --> 00:17:41,559
and<font color="#E5E5E5"> sent to them so these scan tools</font>

388
00:17:39,580 --> 00:17:44,439
will basically build one hello and send

389
00:17:41,559 --> 00:17:46,270
it to many different destinations and so

390
00:17:44,440 --> 00:17:48,039
they're pretty<font color="#CCCCCC"> easy to recognize and in</font>

391
00:17:46,270 --> 00:17:49,389
fact if you<font color="#E5E5E5"> do this kind of monitoring</font>

392
00:17:48,039 --> 00:17:52,150
the wild you'll actually see scan

393
00:17:49,390 --> 00:17:53,650
services the you know that our network

394
00:17:52,150 --> 00:18:01,179
you know internet-based scan services

395
00:17:53,650 --> 00:18:03,580
commercial services in action so here's

396
00:18:01,179 --> 00:18:07,390
the<font color="#CCCCCC"> the fields identification chart that</font>

397
00:18:03,580 --> 00:18:09,370
essentially summarizes the the

398
00:18:07,390 --> 00:18:12,490
interesting cases that I just explained

399
00:18:09,370 --> 00:18:15,129
so in this chart each line is intended

400
00:18:12,490 --> 00:18:20,919
to correspond to a single session time

401
00:18:15,130 --> 00:18:22,630
is increasing down the page and so for

402
00:18:20,919 --> 00:18:24,850
the aberrant implementation things might

403
00:18:22,630 --> 00:18:28,000
<font color="#E5E5E5">be repeating they might even be fixed</font>

404
00:18:24,850 --> 00:18:29,379
more interestingly the<font color="#CCCCCC"> PRNG failure is</font>

405
00:18:28,000 --> 00:18:30,940
going to have<font color="#E5E5E5"> the random values</font>

406
00:18:29,380 --> 00:18:34,559
repeating and possibly a client key

407
00:18:30,940 --> 00:18:36,940
exchange repeat and that's going<font color="#E5E5E5"> to be</font>

408
00:18:34,559 --> 00:18:42,299
for<font color="#CCCCCC"> the failure mode that</font><font color="#E5E5E5"> I described</font>

409
00:18:36,940 --> 00:18:44,110
earlier around<font color="#CCCCCC"> the slow to update PRNG</font>

410
00:18:42,299 --> 00:18:47,730
that's going to<font color="#E5E5E5"> be something that</font>

411
00:18:44,110 --> 00:18:50,289
happens quickly the sessions will<font color="#CCCCCC"> be a</font>

412
00:18:47,730 --> 00:18:52,240
successive and with a<font color="#CCCCCC"> very</font><font color="#E5E5E5"> small time</font>

413
00:18:50,289 --> 00:18:54,539
interval and in<font color="#E5E5E5"> contrast the multiple</font>

414
00:18:52,240 --> 00:18:56,919
running instances of a full snapshot

415
00:18:54,539 --> 00:19:00,570
there might be a<font color="#CCCCCC"> very long</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> period</font>

416
00:18:56,919 --> 00:19:03,700
<font color="#E5E5E5">you know hours or days or more and in</font>

417
00:19:00,570 --> 00:19:05,350
the<font color="#CCCCCC"> PRNG failure case it's going</font><font color="#E5E5E5"> to be</font>

418
00:19:03,700 --> 00:19:06,520
the same internet address right that

419
00:19:05,350 --> 00:19:09,389
when you're monitoring you'll see this

420
00:19:06,520 --> 00:19:12,000
<font color="#CCCCCC">well this one device is screwed</font><font color="#E5E5E5"> up and</font>

421
00:19:09,390 --> 00:19:15,580
but in the multiple running instances

422
00:19:12,000 --> 00:19:18,970
case the addresses might be<font color="#CCCCCC"> different</font>

423
00:19:15,580 --> 00:19:24,220
right<font color="#E5E5E5"> because there are systems that</font>

424
00:19:18,970 --> 00:19:25,690
allow you to boot your multiple running

425
00:19:24,220 --> 00:19:27,429
instances on different addresses of

426
00:19:25,690 --> 00:19:29,230
course<font color="#CCCCCC"> your something like auto scaling</font>

427
00:19:27,429 --> 00:19:30,669
is typically typically used with a load

428
00:19:29,230 --> 00:19:31,779
balancer so there'll be a single<font color="#E5E5E5"> IP</font>

429
00:19:30,669 --> 00:19:33,729
address and then

430
00:19:31,779 --> 00:19:36,519
when you contact that address and it

431
00:19:33,729 --> 00:19:38,950
farms out your your session to something

432
00:19:36,519 --> 00:19:40,809
behind it it's very complex but in

433
00:19:38,950 --> 00:19:43,809
principle it<font color="#CCCCCC"> is possible to see these</font>

434
00:19:40,809 --> 00:19:46,928
different things<font color="#E5E5E5"> different addresses so</font>

435
00:19:43,809 --> 00:19:48,489
here's a<font color="#E5E5E5"> really quick summary of some of</font>

436
00:19:46,929 --> 00:19:51,099
the observations that we did we we

437
00:19:48,489 --> 00:19:56,559
monitored to enterprise networks with

438
00:19:51,099 --> 00:19:57,789
about a thousand hosts and so we

439
00:19:56,559 --> 00:19:59,440
actually<font color="#E5E5E5"> have other observations from</font>

440
00:19:57,789 --> 00:20:02,229
this but I wanted to<font color="#E5E5E5"> show you know every</font>

441
00:19:59,440 --> 00:20:05,529
bounded set with about 30 million TLS

442
00:20:02,229 --> 00:20:11,229
sessions in it and we saw the four

443
00:20:05,529 --> 00:20:14,739
instances of the aberrant the aberrant

444
00:20:11,229 --> 00:20:18,539
case and one instance of the<font color="#CCCCCC"> PRNG</font>

445
00:20:14,739 --> 00:20:22,359
library failure one instance of the VM

446
00:20:18,539 --> 00:20:25,149
snapshot failure and by instance what I

447
00:20:22,359 --> 00:20:27,789
mean is<font color="#CCCCCC"> not a single</font><font color="#E5E5E5"> session but an</font>

448
00:20:25,149 --> 00:20:30,789
implementation that that had a flaw and

449
00:20:27,789 --> 00:20:35,429
it was<font color="#E5E5E5"> causing us in it I think in every</font>

450
00:20:30,789 --> 00:20:35,429
<font color="#E5E5E5">case there were for multiple sessions so</font>

451
00:20:36,269 --> 00:20:44,889
so it seems<font color="#E5E5E5"> like they're they're</font>

452
00:20:39,479 --> 00:20:48,549
reasonably prevalent and to give a sense

453
00:20:44,889 --> 00:20:51,359
on the the work that we did to verify

454
00:20:48,549 --> 00:20:54,249
the sum of the failure<font color="#E5E5E5"> modes within the</font>

455
00:20:51,359 --> 00:20:59,468
lab environment so this is a<font color="#E5E5E5"> showing a</font>

456
00:20:54,249 --> 00:21:03,929
vm a sandbox run of the test script

457
00:20:59,469 --> 00:21:07,359
malware which had let's see six runs<font color="#E5E5E5"> and</font>

458
00:21:03,929 --> 00:21:08,619
this<font color="#E5E5E5"> this random value repeated five</font>

459
00:21:07,359 --> 00:21:11,949
times and the client key exchange

460
00:21:08,619 --> 00:21:13,658
repeated five times as well so and then

461
00:21:11,950 --> 00:21:16,809
you know<font color="#CCCCCC"> there are other instances where</font>

462
00:21:13,659 --> 00:21:20,320
the you know with different malware

463
00:21:16,809 --> 00:21:22,320
samples that the random would repeat and

464
00:21:20,320 --> 00:21:24,339
the client key exchange wouldn't and

465
00:21:22,320 --> 00:21:26,799
that<font color="#E5E5E5"> means that something else is going</font>

466
00:21:24,339 --> 00:21:30,249
on on the OS that's causing the entropy

467
00:21:26,799 --> 00:21:33,879
de to reseed the unit before the client

468
00:21:30,249 --> 00:21:35,559
key exchange is generated and so it's

469
00:21:33,879 --> 00:21:38,428
interesting<font color="#E5E5E5"> you know we have the tour to</font>

470
00:21:35,559 --> 00:21:40,509
web org is being used by this malware

471
00:21:38,429 --> 00:21:41,919
probably in an attempt to hide although

472
00:21:40,509 --> 00:21:44,099
I'm not sure that's a good attempt to

473
00:21:41,919 --> 00:21:44,099
hide

474
00:21:44,790 --> 00:21:49,200
and I want<font color="#E5E5E5"> to quickly touch on</font>

475
00:21:47,010 --> 00:21:51,600
cryptographic attacks and then you know

476
00:21:49,200 --> 00:21:53,100
head to some conclusions right so what

477
00:21:51,600 --> 00:21:55,889
bad things happen if you see something

478
00:21:53,100 --> 00:21:58,139
like this on your network right well

479
00:21:55,890 --> 00:22:01,710
<font color="#E5E5E5">obviously replay attacks work cut and</font>

480
00:21:58,140 --> 00:22:07,200
<font color="#E5E5E5">paste attacks will work in a session</font>

481
00:22:01,710 --> 00:22:10,080
that<font color="#E5E5E5"> has the the same encryption and</font>

482
00:22:07,200 --> 00:22:12,630
authentication<font color="#CCCCCC"> keys a really important</font>

483
00:22:10,080 --> 00:22:17,040
problem would<font color="#CCCCCC"> be a</font><font color="#E5E5E5"> flawed server that</font>

484
00:22:12,630 --> 00:22:19,830
did DSA or ecdsa signing because private

485
00:22:17,040 --> 00:22:25,680
key recovery would be possible in that

486
00:22:19,830 --> 00:22:28,860
case and so we you know deterministic

487
00:22:25,680 --> 00:22:31,190
DSA and ecdsa looks like an even better

488
00:22:28,860 --> 00:22:35,040
idea after you do this kind of analysis

489
00:22:31,190 --> 00:22:36,480
with a flawed client if<font color="#E5E5E5"> you can act as a</font>

490
00:22:35,040 --> 00:22:39,450
server to the client and gets the server

491
00:22:36,480 --> 00:22:41,070
to sorry to<font color="#E5E5E5"> get if you get the client to</font>

492
00:22:39,450 --> 00:22:43,230
actually complete a session<font color="#E5E5E5"> with you</font>

493
00:22:41,070 --> 00:22:44,580
then you just learn to key and<font color="#CCCCCC"> that</font>

494
00:22:43,230 --> 00:22:46,020
could potentially be<font color="#CCCCCC"> the key that's used</font>

495
00:22:44,580 --> 00:22:48,510
in another session right so it's an

496
00:22:46,020 --> 00:22:50,250
obvious sort of attack a more subtle

497
00:22:48,510 --> 00:22:51,810
attack would be if<font color="#E5E5E5"> you can't convince</font>

498
00:22:50,250 --> 00:22:54,330
the client to authenticate you maybe you

499
00:22:51,810 --> 00:22:55,679
can<font color="#E5E5E5"> get them to downgrade to an export</font>

500
00:22:54,330 --> 00:22:58,020
type<font color="#E5E5E5"> cipher</font><font color="#CCCCCC"> and then you can break the</font>

501
00:22:55,680 --> 00:23:00,330
export type safer and then you<font color="#E5E5E5"> know that</font>

502
00:22:58,020 --> 00:23:03,840
will give you access to keys that might

503
00:23:00,330 --> 00:23:06,300
be<font color="#E5E5E5"> used in other sessions as well so RSA</font>

504
00:23:03,840 --> 00:23:08,490
key transport is especially bad because

505
00:23:06,300 --> 00:23:11,010
a server an attacker<font color="#E5E5E5"> can replay a</font>

506
00:23:08,490 --> 00:23:12,690
colliding session and<font color="#E5E5E5"> cause symmetric</font>

507
00:23:11,010 --> 00:23:14,490
keys to collide and that does a lot of

508
00:23:12,690 --> 00:23:17,190
damage plain tex leakage for a bunch of

509
00:23:14,490 --> 00:23:18,810
<font color="#CCCCCC">Cyprus</font><font color="#E5E5E5"> suites and then you know</font>

510
00:23:17,190 --> 00:23:25,230
potentially<font color="#E5E5E5"> authentication key leakage</font>

511
00:23:18,810 --> 00:23:27,750
if your performance crazy so let me try

512
00:23:25,230 --> 00:23:30,210
to hit some conclusions real quick so

513
00:23:27,750 --> 00:23:31,530
these these types of failures do happen

514
00:23:30,210 --> 00:23:33,180
<font color="#E5E5E5">and</font><font color="#CCCCCC"> they're we're studying and</font>

515
00:23:31,530 --> 00:23:35,190
especially i would say<font color="#CCCCCC"> for future work</font>

516
00:23:33,180 --> 00:23:38,220
the aberrant implementations look really

517
00:23:35,190 --> 00:23:40,860
interesting<font color="#CCCCCC"> because some people seem to</font>

518
00:23:38,220 --> 00:23:42,090
be you know not conforming with us back

519
00:23:40,860 --> 00:23:44,879
and that's<font color="#CCCCCC"> very interesting right if</font>

520
00:23:42,090 --> 00:23:46,889
you're trying to actually<font color="#E5E5E5"> make sure that</font>

521
00:23:44,880 --> 00:23:48,120
things are secure and somebody's not

522
00:23:46,890 --> 00:23:51,690
really following the protocol that's

523
00:23:48,120 --> 00:23:54,209
<font color="#E5E5E5">nice to know so so passive</font><font color="#CCCCCC"> Network</font>

524
00:23:51,690 --> 00:23:56,310
crypto visibility can help to detect

525
00:23:54,210 --> 00:23:57,710
these types of failures and you know

526
00:23:56,310 --> 00:23:59,539
what I'm hoping is that

527
00:23:57,710 --> 00:24:00,950
drew work like this the good guys can

528
00:23:59,539 --> 00:24:02,720
have the same visibility that the bad

529
00:24:00,950 --> 00:24:04,100
guys do right because bad guys already

530
00:24:02,720 --> 00:24:05,630
you know<font color="#E5E5E5"> they</font><font color="#CCCCCC"> don't need our open source</font>

531
00:24:04,100 --> 00:24:07,908
tool they have something<font color="#E5E5E5"> way better than</font>

532
00:24:05,630 --> 00:24:10,399
what<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have but we're getting some</font>

533
00:24:07,909 --> 00:24:12,110
visibility into where the cryptography

534
00:24:10,399 --> 00:24:13,668
needs to be<font color="#E5E5E5"> better or needs to be used</font>

535
00:24:12,110 --> 00:24:15,469
where it's<font color="#E5E5E5"> not being used is a good</font>

536
00:24:13,669 --> 00:24:19,010
thing and multi-session monitoring is a

537
00:24:15,470 --> 00:24:21,110
big part of that our conclusions for

538
00:24:19,010 --> 00:24:23,600
people who implement cryptography right

539
00:24:21,110 --> 00:24:25,340
you know pls shouldn't use RSA and

540
00:24:23,600 --> 00:24:31,070
printed key transport so you know thank

541
00:24:25,340 --> 00:24:35,840
<font color="#CCCCCC">you TLS 1.3 for not doing that and for</font>

542
00:24:31,070 --> 00:24:38,330
robustness deterministic DSA or ecdsa is

543
00:24:35,840 --> 00:24:39,649
a good thing there's an<font color="#CCCCCC"> alternative that</font>

544
00:24:38,330 --> 00:24:41,600
you can do if<font color="#E5E5E5"> you're concerned about</font>

545
00:24:39,649 --> 00:24:43,639
maintaining or<font color="#CCCCCC"> 15 140 interoperability</font>

546
00:24:41,600 --> 00:24:46,490
there's a cisco blog on that that we

547
00:24:43,640 --> 00:24:49,279
implemented in some of our code which<font color="#CCCCCC"> is</font>

548
00:24:46,490 --> 00:24:51,169
to stir in a pseudo-random function of

549
00:24:49,279 --> 00:24:53,029
the message into your entropy pool

550
00:24:51,169 --> 00:24:54,770
before you do a signature right which

551
00:24:53,029 --> 00:24:56,659
achieves the same security properties

552
00:24:54,770 --> 00:24:59,720
and you can do<font color="#E5E5E5"> that in this conformant</font>

553
00:24:56,659 --> 00:25:02,990
way so for authentication<font color="#E5E5E5"> authenticated</font>

554
00:24:59,720 --> 00:25:06,440
encryption we suggest you know use

555
00:25:02,990 --> 00:25:08,360
something robust like<font color="#CCCCCC"> 80s GCM SIV which</font>

556
00:25:06,440 --> 00:25:10,640
is some emerging work that's really

557
00:25:08,360 --> 00:25:12,260
attractive and<font color="#CCCCCC"> I think that that should</font>

558
00:25:10,640 --> 00:25:14,750
be the default you know you should use

559
00:25:12,260 --> 00:25:17,090
<font color="#CCCCCC">that instead of</font><font color="#E5E5E5"> using GCM unless you</font>

560
00:25:14,750 --> 00:25:19,159
know you absolutely can't for some you

561
00:25:17,090 --> 00:25:23,870
know<font color="#E5E5E5"> a you know real high performance</font>

562
00:25:19,159 --> 00:25:25,669
reason and if you're using a method

563
00:25:23,870 --> 00:25:27,649
that's not robust then testing it is

564
00:25:25,669 --> 00:25:29,510
really important right<font color="#E5E5E5"> so and there's</font>

565
00:25:27,649 --> 00:25:31,699
other ways to<font color="#E5E5E5"> test it then then hooking</font>

566
00:25:29,510 --> 00:25:34,850
up a network monitoring and any testing

567
00:25:31,700 --> 00:25:37,130
is good so before<font color="#CCCCCC"> I conclude I notice</font>

568
00:25:34,850 --> 00:25:38,600
some other vendors had shameless plugs

569
00:25:37,130 --> 00:25:42,520
for the fact that they're hiring we're

570
00:25:38,600 --> 00:25:46,330
hiring to both for research encoders and

571
00:25:42,520 --> 00:25:46,330
thank you for your<font color="#CCCCCC"> attention today</font>

572
00:25:49,410 --> 00:25:56,080
we have time for<font color="#CCCCCC"> only one very good</font>

573
00:25:51,970 --> 00:25:57,790
<font color="#E5E5E5">question</font><font color="#CCCCCC"> oh so immature as you said</font><font color="#E5E5E5"> that</font>

574
00:25:56,080 --> 00:26:00,010
pls doesn't satisfy the server should

575
00:25:57,790 --> 00:26:01,960
include the GCM the gmt time but it

576
00:26:00,010 --> 00:26:03,850
should and you can't cut and paste

577
00:26:01,960 --> 00:26:06,370
records between sessions unless both

578
00:26:03,850 --> 00:26:08,770
sides have rng failures right because I

579
00:26:06,370 --> 00:26:13,179
besides not changing is enough to change

580
00:26:08,770 --> 00:26:15,879
all the encryption key<font color="#E5E5E5"> ah you can cut</font>

581
00:26:13,180 --> 00:26:17,920
and paste whenever the authentication

582
00:26:15,880 --> 00:26:21,610
key is reused and if you replay a

583
00:26:17,920 --> 00:26:24,130
session yes you then dental special yeah

584
00:26:21,610 --> 00:26:25,419
i think i<font color="#CCCCCC"> think the logic flow on the</font>

585
00:26:24,130 --> 00:26:27,610
slide was slightly often i think you

586
00:26:25,420 --> 00:26:29,470
caught that thank<font color="#E5E5E5"> you</font><font color="#CCCCCC"> ok maybe is just</font><font color="#E5E5E5"> a</font>

587
00:26:27,610 --> 00:26:32,490
time<font color="#CCCCCC"> i'll shut up there thank you</font>

588
00:26:29,470 --> 00:26:32,490
<font color="#E5E5E5">alright let's thank you</font>

589
00:26:36,190 --> 00:26:38,250
you

