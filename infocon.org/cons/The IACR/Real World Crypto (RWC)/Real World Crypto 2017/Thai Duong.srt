1
00:00:00,000 --> 00:00:05,370
for the introduction I'm not feeling

2
00:00:02,639 --> 00:00:09,150
very well today so I'm sorry you can't

3
00:00:05,370 --> 00:00:12,049
hit me<font color="#E5E5E5"> very well I'm hi from google</font>

4
00:00:09,150 --> 00:00:16,800
security and<font color="#E5E5E5"> I'm here the percent do you</font>

5
00:00:12,049 --> 00:00:18,660
project which<font color="#CCCCCC"> abrufe so at Google we I</font>

6
00:00:16,800 --> 00:00:21,300
have<font color="#CCCCCC"> 15 minutes</font><font color="#E5E5E5"> and i will talk very</font>

7
00:00:18,660 --> 00:00:25,230
quickly so that we<font color="#CCCCCC"> have some minutes for</font>

8
00:00:21,300 --> 00:00:30,060
the question<font color="#CCCCCC"> and answer at Google we use</font>

9
00:00:25,230 --> 00:00:34,079
<font color="#E5E5E5">Twitter</font><font color="#CCCCCC"> amending minute products and i</font>

10
00:00:30,060 --> 00:00:37,170
think this image captures how we do

11
00:00:34,079 --> 00:00:39,600
product<font color="#CCCCCC"> crypto at Google very well so</font>

12
00:00:37,170 --> 00:00:42,840
most of<font color="#E5E5E5"> the time a product team wants</font><font color="#CCCCCC"> to</font>

13
00:00:39,600 --> 00:00:45,780
do some<font color="#CCCCCC"> once</font><font color="#E5E5E5"> implement some you know</font>

14
00:00:42,840 --> 00:00:48,120
<font color="#CCCCCC">security or privacy features and they</font>

15
00:00:45,780 --> 00:00:50,610
come to us and<font color="#E5E5E5"> ask us to develop that</font>

16
00:00:48,120 --> 00:00:52,500
feature for them so what we do is we

17
00:00:50,610 --> 00:00:54,480
look at the<font color="#E5E5E5"> feature we develop a</font>

18
00:00:52,500 --> 00:00:57,780
protocol for example if they want to<font color="#E5E5E5"> do</font>

19
00:00:54,480 --> 00:01:00,660
you know enter an encryption or they

20
00:00:57,780 --> 00:01:03,840
want<font color="#E5E5E5"> to store encryption or they want</font>

21
00:01:00,660 --> 00:01:05,580
just to wonder sighs some<font color="#E5E5E5"> URLs then we</font>

22
00:01:03,840 --> 00:01:07,979
design and implement this protocol for

23
00:01:05,580 --> 00:01:11,548
them and the protocol are usually built

24
00:01:07,979 --> 00:01:15,179
on top of internal probe us ad is that

25
00:01:11,549 --> 00:01:18,180
we develop in-house this ad<font color="#CCCCCC"> is basically</font>

26
00:01:15,180 --> 00:01:20,759
implement the you know the common with

27
00:01:18,180 --> 00:01:24,090
the<font color="#E5E5E5"> operation like authentication</font>

28
00:01:20,759 --> 00:01:29,460
encryption signature or hybrid

29
00:01:24,090 --> 00:01:31,560
encryption and these ad is in turn abuse

30
00:01:29,460 --> 00:01:34,880
based on you know<font color="#CCCCCC"> third-party open</font>

31
00:01:31,560 --> 00:01:38,670
<font color="#E5E5E5">source digital libraries like openssl</font>

32
00:01:34,880 --> 00:01:40,710
<font color="#CCCCCC">openjdk basic a show I name this library</font>

33
00:01:38,670 --> 00:01:43,619
just because we use them is not because

34
00:01:40,710 --> 00:01:48,809
they are you know they are<font color="#E5E5E5"> better wash</font>

35
00:01:43,619 --> 00:01:51,479
than all the libraries the problem is we

36
00:01:48,810 --> 00:01:54,450
usually find out this<font color="#E5E5E5"> library usually</font>

37
00:01:51,479 --> 00:01:56,759
have a lot<font color="#E5E5E5"> of bucks and this bug happens</font>

38
00:01:54,450 --> 00:01:59,640
for you know a long time<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they</font>

39
00:01:56,759 --> 00:02:02,909
predict themselves very frequently like

40
00:01:59,640 --> 00:02:05,579
<font color="#E5E5E5">there are books that you know there</font>

41
00:02:02,909 --> 00:02:08,729
should be six 10 or 14<font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> 15</font>

42
00:02:05,579 --> 00:02:10,120
years ago but some<font color="#E5E5E5"> somehow they are not</font>

43
00:02:08,729 --> 00:02:12,769
and

44
00:02:10,120 --> 00:02:17,000
when we look at<font color="#E5E5E5"> the library's we</font><font color="#CCCCCC"> will</font>

45
00:02:12,769 --> 00:02:19,549
wear a surprise and another<font color="#E5E5E5"> problem is</font>

46
00:02:17,000 --> 00:02:21,830
we find out<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> very hard to write</font>

47
00:02:19,549 --> 00:02:25,640
you know good<font color="#CCCCCC"> rip the implementation</font>

48
00:02:21,830 --> 00:02:27,200
guidelines for smart even smart software

49
00:02:25,640 --> 00:02:30,909
engineers they don't have the necessary

50
00:02:27,200 --> 00:02:33,768
background to you know basically

51
00:02:30,909 --> 00:02:36,760
implement crypto correctly and getting

52
00:02:33,769 --> 00:02:39,970
<font color="#CCCCCC">Twitter correctly requires like you know</font>

53
00:02:36,760 --> 00:02:46,578
digesting their case worth of you know

54
00:02:39,970 --> 00:02:49,459
academic papers and of<font color="#CCCCCC"> course we secure</font>

55
00:02:46,579 --> 00:02:52,310
the engineer can reveal the<font color="#CCCCCC"> libraries</font>

56
00:02:49,459 --> 00:02:53,870
manually ourselves but thus is not

57
00:02:52,310 --> 00:02:55,849
scalable because there are lots<font color="#E5E5E5"> of</font>

58
00:02:53,870 --> 00:03:01,190
libraries out there another<font color="#E5E5E5"> major</font>

59
00:02:55,849 --> 00:03:04,339
problem we have is we find out<font color="#CCCCCC"> that</font>

60
00:03:01,190 --> 00:03:06,829
sometimes we file a bug we fix them in

61
00:03:04,340 --> 00:03:08,629
our internal copy and then we've

62
00:03:06,829 --> 00:03:10,940
reported upstream get them fixed in

63
00:03:08,629 --> 00:03:13,310
upstream and then only to see them

64
00:03:10,940 --> 00:03:15,650
coming<font color="#CCCCCC"> back when we operate our internal</font>

65
00:03:13,310 --> 00:03:18,889
version to a new version<font color="#E5E5E5"> of external</font>

66
00:03:15,650 --> 00:03:22,400
library like and we ration like that

67
00:03:18,889 --> 00:03:24,709
really really hurt because we can't just

68
00:03:22,400 --> 00:03:26,989
go back<font color="#CCCCCC"> and review every single changes</font>

69
00:03:24,709 --> 00:03:30,669
<font color="#E5E5E5">to the libraries so there should be</font><font color="#CCCCCC"> a</font>

70
00:03:26,989 --> 00:03:34,370
better approach and and what's those

71
00:03:30,669 --> 00:03:38,329
observation we have with recognize that

72
00:03:34,370 --> 00:03:43,459
basically several engineers they revenge

73
00:03:38,329 --> 00:03:46,910
and fix box by using unit testing and we

74
00:03:43,459 --> 00:03:49,459
saying that you know crypto easels most

75
00:03:46,910 --> 00:03:53,299
many foot issues can basically resolved

76
00:03:49,459 --> 00:03:56,750
by the same mins so these observations

77
00:03:53,299 --> 00:03:59,989
have prompted us to develop project way

78
00:03:56,750 --> 00:04:03,980
to proof which is basically a set of

79
00:03:59,989 --> 00:04:06,859
urban thought unit tests that the test

80
00:04:03,980 --> 00:04:10,160
check the<font color="#E5E5E5"> brita libraries for known</font>

81
00:04:06,859 --> 00:04:13,250
problems or some expected behavior and

82
00:04:10,160 --> 00:04:17,599
so far we have<font color="#CCCCCC"> liked more than 80 unit</font>

83
00:04:13,250 --> 00:04:20,149
types and when we<font color="#E5E5E5"> run the</font><font color="#CCCCCC"> test again the</font>

84
00:04:17,599 --> 00:04:21,820
<font color="#E5E5E5">libraries that we use we file like more</font>

85
00:04:20,149 --> 00:04:25,190
<font color="#E5E5E5">than 40 bucks</font>

86
00:04:21,820 --> 00:04:29,870
we have best for you<font color="#E5E5E5"> know elliptic curve</font>

87
00:04:25,190 --> 00:04:32,980
cryptography<font color="#CCCCCC"> Hallman authentication</font>

88
00:04:29,870 --> 00:04:35,660
encryption or a big integer every method

89
00:04:32,980 --> 00:04:39,680
most<font color="#E5E5E5"> of the test our defense in depth</font>

90
00:04:35,660 --> 00:04:42,310
basically we want<font color="#E5E5E5"> to make sure that the</font>

91
00:04:39,680 --> 00:04:44,660
<font color="#E5E5E5">libraries expect in the right way</font>

92
00:04:42,310 --> 00:04:47,090
sometimes we don't check rather than

93
00:04:44,660 --> 00:04:48,950
just checking for export really we<font color="#CCCCCC"> just</font>

94
00:04:47,090 --> 00:04:51,950
want to<font color="#E5E5E5"> make sure that you know for</font>

95
00:04:48,950 --> 00:04:56,360
example default values are reasonable

96
00:04:51,950 --> 00:05:01,190
for example like today when you run the

97
00:04:56,360 --> 00:05:04,370
past we the test would we can consider

98
00:05:01,190 --> 00:05:08,480
it's not<font color="#E5E5E5"> okay for library to generate us</font>

99
00:05:04,370 --> 00:05:11,720
a key what like you know with a default

100
00:05:08,480 --> 00:05:14,270
value up 1024-bit or using<font color="#CCCCCC"> these a</font>

101
00:05:11,720 --> 00:05:18,260
digital signature was using<font color="#E5E5E5"> style one</font>

102
00:05:14,270 --> 00:05:21,080
last<font color="#E5E5E5"> before and there are many many more</font>

103
00:05:18,260 --> 00:05:24,260
tests in you know where we<font color="#CCCCCC"> check that</font>

104
00:05:21,080 --> 00:05:27,140
the library actually<font color="#E5E5E5"> don't are not</font>

105
00:05:24,260 --> 00:05:32,150
vulnerable to for example timing side

106
00:05:27,140 --> 00:05:34,580
channel we also release our of the box

107
00:05:32,150 --> 00:05:37,580
test wonders for the libraries that we

108
00:05:34,580 --> 00:05:43,159
use like static<font color="#E5E5E5"> control spunky casual</font>

109
00:05:37,580 --> 00:05:45,859
and<font color="#CCCCCC"> OpenJDK our goal is to make it very</font>

110
00:05:43,160 --> 00:05:49,100
<font color="#CCCCCC">easy for the user</font><font color="#E5E5E5"> to run a command line</font>

111
00:05:45,860 --> 00:05:51,820
and to be able to test the latest

112
00:05:49,100 --> 00:05:59,630
version or some particular version of

113
00:05:51,820 --> 00:06:03,800
the libraries that we support so any

114
00:05:59,630 --> 00:06:05,930
questions<font color="#E5E5E5"> so far so in the next two</font>

115
00:06:03,800 --> 00:06:10,220
slides<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> show you some of them you</font>

116
00:06:05,930 --> 00:06:16,010
know kun Bob that we file if the<font color="#E5E5E5"> first</font>

117
00:06:10,220 --> 00:06:21,410
one is<font color="#E5E5E5"> the key recovery in Urban Katee</font>

118
00:06:16,010 --> 00:06:24,010
K's GSA's implementation so I think<font color="#CCCCCC"> this</font>

119
00:06:21,410 --> 00:06:28,580
<font color="#CCCCCC">box were fixed in April last year and</font>

120
00:06:24,010 --> 00:06:33,500
the problem here is the<font color="#E5E5E5"> the DSA I'm</font>

121
00:06:28,580 --> 00:06:34,780
impatient actually allows if you look at

122
00:06:33,500 --> 00:06:36,680
<font color="#E5E5E5">the red light</font>

123
00:06:34,780 --> 00:06:41,878
[Music]

124
00:06:36,680 --> 00:06:46,529
the side object is used with a you know

125
00:06:41,879 --> 00:06:50,309
a private key what like 2048-bit the

126
00:06:46,529 --> 00:06:52,319
problem if you if you if you use if you

127
00:06:50,309 --> 00:06:56,460
initialize the signature objects like

128
00:06:52,319 --> 00:06:59,689
this openjdk will always generate the

129
00:06:56,460 --> 00:07:04,529
<font color="#E5E5E5">knowns using one and sickly bit only</font>

130
00:06:59,689 --> 00:07:07,889
that means the<font color="#E5E5E5"> knowns is heavily biases</font>

131
00:07:04,529 --> 00:07:11,129
by us that means you can easily recover

132
00:07:07,889 --> 00:07:14,939
using like latex techniques the private

133
00:07:11,129 --> 00:07:17,279
key just by observing<font color="#CCCCCC"> to to write 325</font>

134
00:07:14,939 --> 00:07:20,279
signature and this is a<font color="#E5E5E5"> vertical problem</font>

135
00:07:17,279 --> 00:07:25,379
because the essay still is to use a lot

136
00:07:20,279 --> 00:07:28,919
in many many other places any question

137
00:07:25,379 --> 00:07:34,309
about this<font color="#E5E5E5"> marks the second bus is also</font>

138
00:07:28,919 --> 00:07:37,680
a key recovery in the<font color="#E5E5E5"> castro is the</font>

139
00:07:34,309 --> 00:07:40,620
elliptical<font color="#CCCCCC"> determine the sea in</font><font color="#E5E5E5"> the last</font>

140
00:07:37,680 --> 00:07:42,360
stand for cofactor basically when they

141
00:07:40,620 --> 00:07:44,520
can view the sherry but<font color="#E5E5E5"> they multiply</font>

142
00:07:42,360 --> 00:07:47,339
<font color="#E5E5E5">with a cofactor and if you look</font><font color="#CCCCCC"> at the</font>

143
00:07:44,520 --> 00:07:50,128
red line the way the more they compute

144
00:07:47,339 --> 00:07:52,889
the<font color="#CCCCCC"> chef service is they take the driver</font>

145
00:07:50,129 --> 00:07:56,819
key with a key that yet d within the

146
00:07:52,889 --> 00:08:00,479
private key of<font color="#CCCCCC"> the receiver and they</font>

147
00:07:56,819 --> 00:08:02,689
reduce it modulo the order of the public

148
00:08:00,479 --> 00:08:08,039
key which is<font color="#E5E5E5"> under the</font><font color="#CCCCCC"> tracker</font><font color="#E5E5E5"> control</font>

149
00:08:02,689 --> 00:08:10,620
<font color="#E5E5E5">that means you know we can change like</font>

150
00:08:08,039 --> 00:08:12,449
the attackers the X file night stand

151
00:08:10,620 --> 00:08:14,729
allows the attacker to change the order

152
00:08:12,449 --> 00:08:16,620
of<font color="#CCCCCC"> the public key so we can change the</font>

153
00:08:14,729 --> 00:08:18,748
order of<font color="#E5E5E5"> the public key and to binary</font>

154
00:08:16,620 --> 00:08:20,789
search for the private key because we

155
00:08:18,749 --> 00:08:23,339
can tell where the gravity is larger

156
00:08:20,789 --> 00:08:25,259
than<font color="#CCCCCC"> the order and then we can reduce</font>

157
00:08:23,339 --> 00:08:27,449
the chain the order to see like<font color="#CCCCCC"> to</font>

158
00:08:25,259 --> 00:08:30,899
finally<font color="#E5E5E5"> nailed out the range of the</font>

159
00:08:27,449 --> 00:08:34,380
privacy<font color="#E5E5E5"> and it just took like I don't</font>

160
00:08:30,899 --> 00:08:36,929
know like a few requests like maybe

161
00:08:34,380 --> 00:08:42,929
another hundred request to recover<font color="#CCCCCC"> the</font>

162
00:08:36,929 --> 00:08:46,050
party so<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> the tools like I</font>

163
00:08:42,929 --> 00:08:48,719
think foolish box that we file but there

164
00:08:46,050 --> 00:08:51,329
<font color="#E5E5E5">are so many many other box like</font>

165
00:08:48,720 --> 00:08:56,790
you can<font color="#E5E5E5"> look at the our project on</font>

166
00:08:51,329 --> 00:08:59,189
github and and and I thing in last week

167
00:08:56,790 --> 00:09:01,769
but<font color="#E5E5E5"> the castro just relays the next</font>

168
00:08:59,189 --> 00:09:04,680
later frozen and they<font color="#CCCCCC"> fixed like eight</font>

169
00:09:01,769 --> 00:09:10,050
or nine<font color="#CCCCCC"> bucks that we file and reported</font>

170
00:09:04,680 --> 00:09:13,769
to them so working on you no way to

171
00:09:10,050 --> 00:09:17,579
prove allows us to basically to

172
00:09:13,769 --> 00:09:20,790
understand you know how what what text

173
00:09:17,579 --> 00:09:23,310
it's like how good<font color="#CCCCCC"> roots of library</font>

174
00:09:20,790 --> 00:09:26,639
should look like and one<font color="#E5E5E5"> of the things</font>

175
00:09:23,310 --> 00:09:30,410
<font color="#E5E5E5">that we observe is they are not a lot of</font>

176
00:09:26,639 --> 00:09:33,720
like you know good<font color="#E5E5E5"> libraries out there</font>

177
00:09:30,410 --> 00:09:38,670
for example we have ripped or libraries

178
00:09:33,720 --> 00:09:41,339
that ask<font color="#CCCCCC"> you surf of ritika input like</font>

179
00:09:38,670 --> 00:09:44,040
if you want<font color="#E5E5E5"> to encrypt something you</font>

180
00:09:41,339 --> 00:09:46,709
have to pass in random number generator

181
00:09:44,040 --> 00:09:50,250
and it's impossible to test the

182
00:09:46,709 --> 00:09:52,979
libraries because even though if we<font color="#CCCCCC"> test</font>

183
00:09:50,250 --> 00:09:56,759
the library the users can easily screw

184
00:09:52,980 --> 00:09:59,879
up by passing in an integral random

185
00:09:56,759 --> 00:10:02,370
number generator we also find out that

186
00:09:59,879 --> 00:10:04,559
most of the libraries are there don't

187
00:10:02,370 --> 00:10:08,309
actually allow user to switch the

188
00:10:04,559 --> 00:10:10,019
algorithms<font color="#CCCCCC"> where</font><font color="#E5E5E5"> easily so if you switch</font>

189
00:10:08,309 --> 00:10:12,569
the algorithm you have to you know start

190
00:10:10,019 --> 00:10:15,540
from scratch from scratch and<font color="#CCCCCC"> the side</font>

191
00:10:12,569 --> 00:10:18,329
effects include was the<font color="#CCCCCC"> own algorithms</font>

192
00:10:15,540 --> 00:10:20,219
won't be compatible wasn't it like 11

193
00:10:18,329 --> 00:10:23,878
<font color="#E5E5E5">will be equipped won't be able to be</font>

194
00:10:20,220 --> 00:10:27,089
crucified new software another property

195
00:10:23,879 --> 00:10:29,579
that we want to<font color="#CCCCCC"> see in you</font><font color="#E5E5E5"> know crypto</font>

196
00:10:27,089 --> 00:10:31,350
libraries is it should be easy to look

197
00:10:29,579 --> 00:10:35,069
at the court and understand right away

198
00:10:31,350 --> 00:10:38,339
the foot properties<font color="#E5E5E5"> currently</font><font color="#CCCCCC"> by the the</font>

199
00:10:35,069 --> 00:10:41,550
libraries like for example if you<font color="#E5E5E5"> are</font>

200
00:10:38,339 --> 00:10:43,259
using authenticated encryption and it

201
00:10:41,550 --> 00:10:44,878
should<font color="#CCCCCC"> be very easy to look at the court</font>

202
00:10:43,259 --> 00:10:47,399
and understand right away without having

203
00:10:44,879 --> 00:10:50,550
to navigating you know the whole

204
00:10:47,399 --> 00:10:53,699
structure<font color="#CCCCCC"> of the library so to go down</font>

205
00:10:50,550 --> 00:10:56,430
the abstraction layers understand you

206
00:10:53,699 --> 00:10:59,040
know or what see the properties

207
00:10:56,430 --> 00:11:01,469
guaranteed by the library another

208
00:10:59,040 --> 00:11:02,240
<font color="#E5E5E5">problem that we saw is we would like to</font>

209
00:11:01,470 --> 00:11:04,220
<font color="#CCCCCC">have to</font>

210
00:11:02,240 --> 00:11:06,320
like you know the<font color="#E5E5E5"> Crypt upcoming</font>

211
00:11:04,220 --> 00:11:10,390
community to develop a common<font color="#E5E5E5"> Bristol</font>

212
00:11:06,320 --> 00:11:13,160
interfaces for Super Plus bison go

213
00:11:10,390 --> 00:11:15,800
javascript we have something for<font color="#E5E5E5"> Java</font>

214
00:11:13,160 --> 00:11:18,170
which is the<font color="#CCCCCC"> Java photography</font>

215
00:11:15,800 --> 00:11:20,329
architecture but we don't have<font color="#E5E5E5"> anything</font>

216
00:11:18,170 --> 00:11:22,790
for<font color="#E5E5E5"> these languages and it's very hard</font>

217
00:11:20,330 --> 00:11:25,630
for us<font color="#CCCCCC"> to write</font><font color="#E5E5E5"> tests what now having a</font>

218
00:11:22,790 --> 00:11:28,310
common brittle interfaces we actually

219
00:11:25,630 --> 00:11:30,410
right now what we do is we try to

220
00:11:28,310 --> 00:11:34,520
translate<font color="#E5E5E5"> the most of our unit tests</font>

221
00:11:30,410 --> 00:11:36,890
into text factors into raw<font color="#CCCCCC"> x factor so</font>

222
00:11:34,520 --> 00:11:39,529
that like<font color="#CCCCCC"> people can easily put them to</font>

223
00:11:36,890 --> 00:11:41,899
all the languages or platforms but it

224
00:11:39,529 --> 00:11:44,630
would be nice to have like one single

225
00:11:41,899 --> 00:11:49,970
set of you to write the test<font color="#CCCCCC"> once and we</font>

226
00:11:44,630 --> 00:11:54,080
can run it everywhere he's got a few

227
00:11:49,970 --> 00:11:57,500
useful useful links that you can look up

228
00:11:54,080 --> 00:11:59,930
on the south co documentation have been

229
00:11:57,500 --> 00:12:02,810
released on github we also have<font color="#E5E5E5"> many</font>

230
00:11:59,930 --> 00:12:04,760
lives where we text you know request

231
00:12:02,810 --> 00:12:08,239
support like if you<font color="#E5E5E5"> want to test</font>

232
00:12:04,760 --> 00:12:10,310
something or if<font color="#E5E5E5"> you want to you know if</font>

233
00:12:08,240 --> 00:12:12,350
you want to run the test again some

234
00:12:10,310 --> 00:12:14,779
topical libraries that we<font color="#E5E5E5"> don't support</font>

235
00:12:12,350 --> 00:12:17,630
like please email us and we will<font color="#E5E5E5"> take a</font>

236
00:12:14,779 --> 00:12:19,790
look<font color="#E5E5E5"> and see if we can support you the</font>

237
00:12:17,630 --> 00:12:21,980
mailing list also it's the place where

238
00:12:19,790 --> 00:12:24,770
<font color="#E5E5E5">we discuss</font><font color="#CCCCCC"> when you know what's go well</font>

239
00:12:21,980 --> 00:12:26,450
the new updates the major major tests

240
00:12:24,770 --> 00:12:30,800
that we're going to leave in the next

241
00:12:26,450 --> 00:12:35,149
few months<font color="#CCCCCC"> so we are actively working on</font>

242
00:12:30,800 --> 00:12:37,069
adding more tests and not<font color="#E5E5E5"> only for</font>

243
00:12:35,149 --> 00:12:42,740
primitives we also want to test like

244
00:12:37,070 --> 00:12:46,430
protocols like you know<font color="#E5E5E5"> SSL or like you</font>

245
00:12:42,740 --> 00:12:47,839
know Jason Webb encryption<font color="#CCCCCC"> you know we</font>

246
00:12:46,430 --> 00:12:50,089
look<font color="#E5E5E5"> at those libraries and we found</font>

247
00:12:47,839 --> 00:12:52,130
<font color="#E5E5E5">last problem so we want and those</font>

248
00:12:50,089 --> 00:12:55,160
libraries are getting very very<font color="#CCCCCC"> popular</font>

249
00:12:52,130 --> 00:12:56,750
these days so we<font color="#E5E5E5"> want to like to make</font>

250
00:12:55,160 --> 00:13:00,020
<font color="#CCCCCC">sure that we can test them and making</font>

251
00:12:56,750 --> 00:13:02,240
sure<font color="#CCCCCC"> that we can you know half the</font>

252
00:13:00,020 --> 00:13:05,779
developers to fix the you know the easel

253
00:13:02,240 --> 00:13:08,079
most of the tests that<font color="#E5E5E5"> we relate we have</font>

254
00:13:05,779 --> 00:13:12,470
been<font color="#E5E5E5"> working with you know party casual</font>

255
00:13:08,079 --> 00:13:15,170
openjdk to interpret these tests into

256
00:13:12,470 --> 00:13:19,269
their you<font color="#CCCCCC"> know ti system</font>

257
00:13:15,170 --> 00:13:22,310
they can avoid you know progression I

258
00:13:19,269 --> 00:13:24,860
think that's it<font color="#CCCCCC"> for my appreciation of</font>

259
00:13:22,310 --> 00:13:28,638
this is the people working on the

260
00:13:24,860 --> 00:13:31,399
libraries are the project and all of us

261
00:13:28,639 --> 00:13:34,730
are from google security team but we

262
00:13:31,399 --> 00:13:37,160
welcome external contributions I think

263
00:13:34,730 --> 00:13:40,370
so far<font color="#CCCCCC"> we have got Lyle is a few PR</font>

264
00:13:37,160 --> 00:13:42,740
requests from external people so please

265
00:13:40,370 --> 00:13:44,600
keep it coming keep them like you know

266
00:13:42,740 --> 00:13:50,300
<font color="#E5E5E5">send us send us anything that you want</font>

267
00:13:44,600 --> 00:13:53,899
<font color="#E5E5E5">to improve in the project yep that's it</font>

268
00:13:50,300 --> 00:13:55,550
thank you if you have any I think we

269
00:13:53,899 --> 00:13:58,370
still have like five minutes for

270
00:13:55,550 --> 00:14:00,349
questions and answer if<font color="#E5E5E5"> you have any</font>

271
00:13:58,370 --> 00:14:04,370
<font color="#E5E5E5">comments or anything that</font><font color="#CCCCCC"> you want to</font>

272
00:14:00,350 --> 00:14:07,790
<font color="#E5E5E5">test and like I want to have a</font>

273
00:14:04,370 --> 00:14:09,680
commercial break my team is hiring and

274
00:14:07,790 --> 00:14:12,230
if you really interest in building and

275
00:14:09,680 --> 00:14:15,410
practice you know<font color="#CCCCCC"> quit so using products</font>

276
00:14:12,230 --> 00:14:18,230
that's used by billions of evil like

277
00:14:15,410 --> 00:14:23,560
please talk come and talk to me<font color="#CCCCCC"> I'll</font>

278
00:14:18,230 --> 00:14:23,560
send your resume to my<font color="#E5E5E5"> email crush thank</font>

279
00:14:29,190 --> 00:14:32,440
<font color="#E5E5E5">okay so we do have some time for</font>

280
00:14:31,149 --> 00:14:35,740
questions and I see somebody at the

281
00:14:32,440 --> 00:14:38,260
night particularly hello interesting

282
00:14:35,740 --> 00:14:41,440
talk I'm your chief from National

283
00:14:38,260 --> 00:14:46,209
University of Singapore so one quick

284
00:14:41,440 --> 00:14:50,649
question and so suppose the open<font color="#E5E5E5"> source</font>

285
00:14:46,209 --> 00:14:53,619
library like openssl fix back with some

286
00:14:50,649 --> 00:14:56,020
patches how long does Google take to

287
00:14:53,620 --> 00:15:01,089
update the software on the user's

288
00:14:56,020 --> 00:15:04,420
contact you mean<font color="#E5E5E5"> like how long we</font>

289
00:15:01,089 --> 00:15:07,990
updated internal copy no not internal

290
00:15:04,420 --> 00:15:13,329
pocket like I deliver the software to

291
00:15:07,990 --> 00:15:14,740
<font color="#CCCCCC">other</font><font color="#E5E5E5"> clans I users I am not sure</font><font color="#CCCCCC"> when</font>

292
00:15:13,330 --> 00:15:17,860
the right person<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to this question</font>

293
00:15:14,740 --> 00:15:19,120
I've been probably<font color="#E5E5E5"> a 10 and amelia is at</font>

294
00:15:17,860 --> 00:15:22,060
the right person to answer this question

295
00:15:19,120 --> 00:15:24,880
but basically it's saying we try to push

296
00:15:22,060 --> 00:15:28,180
the updates to the client user license

297
00:15:24,880 --> 00:15:31,180
to our user before we release you know

298
00:15:28,180 --> 00:15:35,109
the information<font color="#CCCCCC"> on the vulnerabilities</font>

299
00:15:31,180 --> 00:15:38,979
are<font color="#E5E5E5"> the box so if you see a relays if</font>

300
00:15:35,110 --> 00:15:43,240
you see a vulnerability relays adversary

301
00:15:38,980 --> 00:15:45,010
you usually like the box like the box

302
00:15:43,240 --> 00:15:48,820
has been<font color="#E5E5E5"> fixed in the use of machines</font>

303
00:15:45,010 --> 00:15:51,300
already I see so there is<font color="#CCCCCC"> a very</font><font color="#E5E5E5"> short</font>

304
00:15:48,820 --> 00:15:55,990
window for the attacker to attack your

305
00:15:51,300 --> 00:16:00,790
software<font color="#E5E5E5"> I'm not sure the case because</font>

306
00:15:55,990 --> 00:16:02,740
<font color="#E5E5E5">sometimes the time text for like it's</font>

307
00:16:00,790 --> 00:16:04,660
taking us first look like I think it

308
00:16:02,740 --> 00:16:06,820
should take it very short amount<font color="#E5E5E5"> of time</font>

309
00:16:04,660 --> 00:16:09,640
<font color="#E5E5E5">to fix the bottle baby but the time</font>

310
00:16:06,820 --> 00:16:13,180
detect from the people who find one

311
00:16:09,640 --> 00:16:16,180
really to report it to us<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> doing</font>

312
00:16:13,180 --> 00:16:20,560
<font color="#E5E5E5">that window and somebody else have you</font>

313
00:16:16,180 --> 00:16:22,719
know got like their hands on the

314
00:16:20,560 --> 00:16:24,579
knowledge<font color="#E5E5E5"> of the vulnerability but it</font>

315
00:16:22,720 --> 00:16:26,620
should be<font color="#E5E5E5"> very very quickly and the</font>

316
00:16:24,579 --> 00:16:28,750
windows and<font color="#CCCCCC"> the way we do our best</font><font color="#E5E5E5"> to</font>

317
00:16:26,620 --> 00:16:32,800
mention to<font color="#CCCCCC"> make sure that the window is</font>

318
00:16:28,750 --> 00:16:34,920
very small like maybe a few days thank

319
00:16:32,800 --> 00:16:34,920
you

320
00:16:35,590 --> 00:16:39,660
oh thanks very much for doing this work

321
00:16:38,200 --> 00:16:42,940
because it looks really interesting

322
00:16:39,660 --> 00:16:45,010
thank you I had a question about you had

323
00:16:42,940 --> 00:16:47,980
a bullet<font color="#E5E5E5"> point there about switching</font>

324
00:16:45,010 --> 00:16:49,630
algorithms by applications that I'm

325
00:16:47,980 --> 00:16:51,190
wondering if you can kind of expand on

326
00:16:49,630 --> 00:16:53,050
that a little bit and<font color="#E5E5E5"> talk about what</font>

327
00:16:51,190 --> 00:16:55,270
exactly<font color="#E5E5E5"> the problem is you're trying to</font>

328
00:16:53,050 --> 00:16:58,780
solve with that and what that exactly

329
00:16:55,270 --> 00:17:00,939
means yep it's just an observation like

330
00:16:58,780 --> 00:17:03,490
when we look at the<font color="#CCCCCC"> BRIT the libraries</font>

331
00:17:00,940 --> 00:17:05,920
in you know others up with the libraries

332
00:17:03,490 --> 00:17:08,770
we found<font color="#E5E5E5"> out</font><font color="#CCCCCC"> that like most libraries</font>

333
00:17:05,920 --> 00:17:11,680
don't allow users to switch the

334
00:17:08,770 --> 00:17:14,319
algorithms easily so for example<font color="#E5E5E5"> if you</font>

335
00:17:11,680 --> 00:17:16,510
<font color="#CCCCCC">have if you use encryption Bella if you</font>

336
00:17:14,319 --> 00:17:18,520
have a bunch of data you encrypt the

337
00:17:16,510 --> 00:17:21,579
data and you send like for example you

338
00:17:18,520 --> 00:17:23,650
encrypt some URL parameters and you know

339
00:17:21,579 --> 00:17:25,929
you send those parameters a rather<font color="#CCCCCC"> were</font>

340
00:17:23,650 --> 00:17:28,510
<font color="#E5E5E5">and they are embedding link that</font>

341
00:17:25,930 --> 00:17:31,600
publicly you can<font color="#CCCCCC"> change the size of text</font>

342
00:17:28,510 --> 00:17:34,720
anymore and now you find out that all

343
00:17:31,600 --> 00:17:36,760
the algorithm that you are using may not

344
00:17:34,720 --> 00:17:39,130
be very strong and<font color="#E5E5E5"> you want to switch to</font>

345
00:17:36,760 --> 00:17:41,290
something else the problem is when you

346
00:17:39,130 --> 00:17:43,180
want to do<font color="#E5E5E5"> that you most of the time you</font>

347
00:17:41,290 --> 00:17:45,850
can't equip this the own set of texts

348
00:17:43,180 --> 00:17:47,860
anymore and that's a big program right

349
00:17:45,850 --> 00:17:50,740
because you want to be able to be able

350
00:17:47,860 --> 00:17:52,389
to still like equipped like your<font color="#CCCCCC"> court</font>

351
00:17:50,740 --> 00:17:55,810
<font color="#CCCCCC">like you also have a taxi occurrence of</font>

352
00:17:52,390 --> 00:17:58,870
attacks without having to you know<font color="#E5E5E5"> to I</font>

353
00:17:55,810 --> 00:18:01,300
don't know like the<font color="#E5E5E5"> completed late we</font>

354
00:17:58,870 --> 00:18:04,290
ride your your application right so most

355
00:18:01,300 --> 00:18:08,280
of<font color="#E5E5E5"> the time I think it goes down to</font>

356
00:18:04,290 --> 00:18:11,170
<font color="#E5E5E5">basically you have to making sure that</font>

357
00:18:08,280 --> 00:18:14,680
the size<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that contains some metadata</font>

358
00:18:11,170 --> 00:18:16,650
about a key that you used to input you

359
00:18:14,680 --> 00:18:20,650
know to generate the side effects and

360
00:18:16,650 --> 00:18:23,020
and there's some like techniques that

361
00:18:20,650 --> 00:18:24,880
you can use to the library symbol ID

362
00:18:23,020 --> 00:18:28,560
like you can invest a key ID or

363
00:18:24,880 --> 00:18:32,110
something into the ciphertext but some

364
00:18:28,560 --> 00:18:34,690
standard actually instead of inventing a

365
00:18:32,110 --> 00:18:37,990
key ID they do<font color="#CCCCCC"> like things like they're</font>

366
00:18:34,690 --> 00:18:40,900
better key ID ashworth some on with some

367
00:18:37,990 --> 00:18:42,790
parameters about the like that that are

368
00:18:40,900 --> 00:18:46,570
used to<font color="#CCCCCC"> generate the subjects</font><font color="#E5E5E5"> like key</font>

369
00:18:42,790 --> 00:18:48,020
ID algorithm and like for some if<font color="#CCCCCC"> you</font>

370
00:18:46,570 --> 00:18:51,649
look at Jason Webb

371
00:18:48,020 --> 00:18:53,840
scription standards they have key ID the

372
00:18:51,650 --> 00:18:55,730
<font color="#E5E5E5">algorithm that would use and then some</font>

373
00:18:53,840 --> 00:18:57,439
all the parameters and I think that<font color="#E5E5E5"> is</font>

374
00:18:55,730 --> 00:18:59,870
wrong because you shouldn't do<font color="#CCCCCC"> that</font>

375
00:18:57,440 --> 00:19:02,420
because you just specify the key ID and

376
00:18:59,870 --> 00:19:05,479
the key ID should be should be bowed to

377
00:19:02,420 --> 00:19:07,430
own those properties so when you look<font color="#E5E5E5"> at</font>

378
00:19:05,480 --> 00:19:11,540
the key<font color="#CCCCCC"> idea you have on the information</font>

379
00:19:07,430 --> 00:19:13,910
in your configuration to<font color="#E5E5E5"> like the clip</font>

380
00:19:11,540 --> 00:19:15,350
or verify the ciphertext right so

381
00:19:13,910 --> 00:19:18,020
basically<font color="#CCCCCC"> what you're saying there is</font>

382
00:19:15,350 --> 00:19:19,790
the you know most crypto designers

383
00:19:18,020 --> 00:19:21,710
protocols and you guys are looking to

384
00:19:19,790 --> 00:19:24,070
prevent downgrade attacks for example so

385
00:19:21,710 --> 00:19:26,450
they actually<font color="#E5E5E5"> limit options deliberately</font>

386
00:19:24,070 --> 00:19:28,220
so it<font color="#E5E5E5"> sounds to me like you're talking</font>

387
00:19:26,450 --> 00:19:30,830
<font color="#E5E5E5">about techniques suppose avoid these</font>

388
00:19:28,220 --> 00:19:33,590
kind of attacks right<font color="#E5E5E5"> also providing yes</font>

389
00:19:30,830 --> 00:19:37,970
the<font color="#E5E5E5"> ability to switch algorithm yep</font><font color="#CCCCCC"> okay</font>

390
00:19:33,590 --> 00:19:40,459
thank you is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quick question yeah okay</font>

391
00:19:37,970 --> 00:19:43,040
<font color="#E5E5E5">so on slide two I noticed something</font><font color="#CCCCCC"> very</font>

392
00:19:40,460 --> 00:19:44,840
interesting the api's are providing to

393
00:19:43,040 --> 00:19:46,520
developers implement very basic things

394
00:19:44,840 --> 00:19:50,209
<font color="#CCCCCC">like encrypting authenticated encryption</font>

395
00:19:46,520 --> 00:19:52,490
and yet you use libraries written for

396
00:19:50,210 --> 00:19:55,250
these purposes and firmly the API is

397
00:19:52,490 --> 00:19:57,230
aren't suitable at all sorry apparently

398
00:19:55,250 --> 00:20:00,350
the api's those libraries provide can't

399
00:19:57,230 --> 00:20:02,210
be exposed for this purpose so what's

400
00:20:00,350 --> 00:20:03,620
the benefit from using those libraries

401
00:20:02,210 --> 00:20:05,240
<font color="#E5E5E5">why should there be a plurality of</font>

402
00:20:03,620 --> 00:20:07,340
libraries adult don't work instead of

403
00:20:05,240 --> 00:20:08,810
<font color="#E5E5E5">one that does work and provides the</font>

404
00:20:07,340 --> 00:20:11,030
right algorithm so you don't<font color="#E5E5E5"> make this</font>

405
00:20:08,810 --> 00:20:15,679
mistake of using the wrong algorithm

406
00:20:11,030 --> 00:20:18,530
with an<font color="#E5E5E5"> API is easy to use so so you can</font>

407
00:20:15,680 --> 00:20:21,500
look<font color="#E5E5E5"> at rip the libraries that I think</font>

408
00:20:18,530 --> 00:20:25,280
several levels like<font color="#CCCCCC"> low level libraries</font>

409
00:20:21,500 --> 00:20:27,280
like openssl<font color="#CCCCCC"> openjdk IDK sure they</font>

410
00:20:25,280 --> 00:20:32,930
provides you they provides us the

411
00:20:27,280 --> 00:20:36,440
primitives like you know<font color="#CCCCCC"> aes elliptic</font>

412
00:20:32,930 --> 00:20:41,230
curve DC Hellman of those primitives but

413
00:20:36,440 --> 00:20:44,600
if<font color="#E5E5E5"> we let the paramus to use those</font>

414
00:20:41,230 --> 00:20:47,570
libraries directly usually they use

415
00:20:44,600 --> 00:20:49,610
strong so what we want to<font color="#E5E5E5"> do is we want</font>

416
00:20:47,570 --> 00:20:53,419
to<font color="#E5E5E5"> give them a kind of a mid-level</font>

417
00:20:49,610 --> 00:20:57,469
library that after away the common with

418
00:20:53,420 --> 00:21:00,680
<font color="#E5E5E5">operation in that we see that that</font><font color="#CCCCCC"> I</font>

419
00:20:57,470 --> 00:21:01,340
deploy in many many use case so and

420
00:21:00,680 --> 00:21:03,740
though

421
00:21:01,340 --> 00:21:06,199
application that those common<font color="#CCCCCC"> crypto</font>

422
00:21:03,740 --> 00:21:09,670
<font color="#E5E5E5">operation are usually just for operation</font>

423
00:21:06,200 --> 00:21:12,830
like authentication encryption<font color="#CCCCCC"> mass</font>

424
00:21:09,670 --> 00:21:15,580
hybrid encryption and digital signature

425
00:21:12,830 --> 00:21:17,570
there are<font color="#E5E5E5"> other things like</font><font color="#CCCCCC"> determinant</font>

426
00:21:15,580 --> 00:21:20,090
<font color="#E5E5E5">deterministic encryption but they are</font>

427
00:21:17,570 --> 00:21:23,689
less popular than those for primitives

428
00:21:20,090 --> 00:21:27,139
so what we do is we develop those you

429
00:21:23,690 --> 00:21:31,280
know primitives that those interface and

430
00:21:27,140 --> 00:21:34,220
provide our parameters developers those

431
00:21:31,280 --> 00:21:36,889
interface of course we don't let them to

432
00:21:34,220 --> 00:21:38,720
use though interface directly either in

433
00:21:36,890 --> 00:21:41,210
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use that we have to talk to us</font>

434
00:21:38,720 --> 00:21:43,040
because most of the time we want to make

435
00:21:41,210 --> 00:21:46,310
sure<font color="#E5E5E5"> that they use the right riveted for</font>

436
00:21:43,040 --> 00:21:50,720
the right application so does that

437
00:21:46,310 --> 00:21:52,190
answer your question thank you we're

438
00:21:50,720 --> 00:21:53,570
already running slightly behind times

439
00:21:52,190 --> 00:21:55,280
rich so<font color="#E5E5E5"> I suggest any further questions</font>

440
00:21:53,570 --> 00:21:56,570
we take them<font color="#E5E5E5"> to the break but let's find</font>

441
00:21:55,280 --> 00:21:59,260
<font color="#E5E5E5">tie one more time thank you tell you</font>

442
00:21:56,570 --> 00:21:59,260
thank you

