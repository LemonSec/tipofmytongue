1
00:00:00,000 --> 00:00:08,099
<font color="#E5E5E5">okay good so I wanted to introduce to</font>

2
00:00:04,830 --> 00:00:09,990
you today so crystal so it's a

3
00:00:08,099 --> 00:00:12,660
cryptographic suit for algebraic

4
00:00:09,990 --> 00:00:16,410
lattices and it's a joint work<font color="#CCCCCC"> if she</font>

5
00:00:12,660 --> 00:00:19,410
<font color="#CCCCCC">buy</font><font color="#E5E5E5"> yo p boss lyrica</font><font color="#CCCCCC"> i go kill venom UHS</font>

6
00:00:16,410 --> 00:00:24,330
<font color="#CCCCCC">key John Chang Peter schwarber in Dennis</font>

7
00:00:19,410 --> 00:00:27,869
Kelly so it was like I will I'll go of

8
00:00:24,330 --> 00:00:30,089
the motivation fast but in the sense the

9
00:00:27,869 --> 00:00:32,809
previous talk was motivation enough and

10
00:00:30,090 --> 00:00:35,309
then<font color="#E5E5E5"> I will talk about lattices and</font>

11
00:00:32,809 --> 00:00:37,890
especially this suit is actually<font color="#CCCCCC"> based</font>

12
00:00:35,309 --> 00:00:40,440
on module lettuces and then i<font color="#E5E5E5"> will</font>

13
00:00:37,890 --> 00:00:42,450
present the<font color="#E5E5E5"> kin aqui em and then i will</font>

14
00:00:40,440 --> 00:00:45,839
<font color="#E5E5E5">present on performance and the open</font>

15
00:00:42,450 --> 00:00:48,260
quantum<font color="#E5E5E5"> safe product</font><font color="#CCCCCC"> okay so motivation</font>

16
00:00:45,840 --> 00:00:51,649
we just heard a 20-minute talk about

17
00:00:48,260 --> 00:00:53,670
what<font color="#CCCCCC"> NIST is doing so this project of</font>

18
00:00:51,649 --> 00:00:56,760
standardizing something in the<font color="#E5E5E5"> next</font>

19
00:00:53,670 --> 00:00:59,760
seven years and this talk is will be

20
00:00:56,760 --> 00:01:02,099
actually<font color="#E5E5E5"> on the lattice on the lattice</font>

21
00:00:59,760 --> 00:01:08,840
candidate and we plan on submitting

22
00:01:02,100 --> 00:01:12,240
something to this to this missed call

23
00:01:08,840 --> 00:01:16,439
<font color="#E5E5E5">okay so lattice cryptography it's</font>

24
00:01:12,240 --> 00:01:18,630
actually already out and already used so

25
00:01:16,439 --> 00:01:21,508
for example in strongswan strongswan is

26
00:01:18,630 --> 00:01:25,250
an<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> ipsec VPN solution and</font>

27
00:01:21,509 --> 00:01:28,560
true encrypt is in here since every 2014

28
00:01:25,250 --> 00:01:32,460
bliss the Bliss signature scheme is in

29
00:01:28,560 --> 00:01:35,570
here since 2015 and<font color="#CCCCCC"> new</font><font color="#E5E5E5"> hope the key</font>

30
00:01:32,460 --> 00:01:38,639
exchange mechanism since last October

31
00:01:35,570 --> 00:01:40,798
also we were<font color="#CCCCCC"> speaking about the</font><font color="#E5E5E5"> impact</font>

32
00:01:38,640 --> 00:01:43,799
assessment so<font color="#E5E5E5"> Google just realized in</font>

33
00:01:40,799 --> 00:01:47,579
impact about how new hope would be areas

34
00:01:43,799 --> 00:01:51,060
we were like doing a key exchange with

35
00:01:47,579 --> 00:01:53,250
<font color="#E5E5E5">new of an elliptic curve and they'll let</font>

36
00:01:51,060 --> 00:01:55,590
it run for humans collected a lot<font color="#CCCCCC"> of</font>

37
00:01:53,250 --> 00:01:57,299
data and they actually conclude that

38
00:01:55,590 --> 00:02:00,119
they didn't find<font color="#E5E5E5"> any unexpected</font>

39
00:01:57,299 --> 00:02:03,899
impediment of deploying something like

40
00:02:00,119 --> 00:02:06,000
new oak but<font color="#E5E5E5"> then they said</font><font color="#CCCCCC"> okay we leave</font>

41
00:02:03,899 --> 00:02:11,160
the<font color="#E5E5E5"> standardization body going to their</font>

42
00:02:06,000 --> 00:02:12,620
work so in this talk i<font color="#CCCCCC"> will talk</font><font color="#E5E5E5"> a</font>

43
00:02:11,160 --> 00:02:15,109
<font color="#CCCCCC">little about</font>

44
00:02:12,620 --> 00:02:17,569
<font color="#E5E5E5">key exchange so actually we have weird</font>

45
00:02:15,110 --> 00:02:19,340
this NLCS what happens is that<font color="#CCCCCC"> you have</font>

46
00:02:17,569 --> 00:02:22,159
a client in the server and<font color="#E5E5E5"> the client</font>

47
00:02:19,340 --> 00:02:24,950
say oh hello I want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> speak to you the</font>

48
00:02:22,159 --> 00:02:27,019
server say hello back this is my journal

49
00:02:24,950 --> 00:02:29,899
<font color="#CCCCCC">Shana search ticket please</font><font color="#E5E5E5"> verify so I</font>

50
00:02:27,019 --> 00:02:31,700
stripped away a lot of<font color="#E5E5E5"> things in TLS but</font>

51
00:02:29,900 --> 00:02:33,680
of course everything should be done

52
00:02:31,700 --> 00:02:35,390
correctly<font color="#CCCCCC"> certificate should be shaken</font>

53
00:02:33,680 --> 00:02:38,409
like there are a lot of other issues

54
00:02:35,390 --> 00:02:41,738
what I'm concerned here about is this

55
00:02:38,409 --> 00:02:44,420
element so the server is doing some

56
00:02:41,739 --> 00:02:46,099
computation the server<font color="#E5E5E5"> key exchange part</font>

57
00:02:44,420 --> 00:02:47,988
then the clients is doing some

58
00:02:46,099 --> 00:02:50,510
computation<font color="#CCCCCC"> int extent and</font><font color="#E5E5E5"> miss</font>

59
00:02:47,989 --> 00:02:55,160
computing is key and then<font color="#E5E5E5"> the server is</font>

60
00:02:50,510 --> 00:02:56,629
also computing the key and at the<font color="#CCCCCC"> end</font>

61
00:02:55,160 --> 00:02:58,280
they<font color="#CCCCCC"> have a shared key and they can</font>

62
00:02:56,629 --> 00:03:01,340
exchange out the application<font color="#CCCCCC"> that data</font>

63
00:02:58,280 --> 00:03:02,870
under this shared key so the first<font color="#E5E5E5"> part</font>

64
00:03:01,340 --> 00:03:05,209
is the public key part that is

65
00:03:02,870 --> 00:03:07,640
transmitting articulate key that then

66
00:03:05,209 --> 00:03:11,000
will<font color="#CCCCCC"> be used in the application later so</font>

67
00:03:07,640 --> 00:03:13,578
if<font color="#CCCCCC"> we want that</font><font color="#E5E5E5"> to be to replace for</font>

68
00:03:11,000 --> 00:03:15,590
example RSA elliptic curves or things

69
00:03:13,579 --> 00:03:18,440
like that the question is what should we

70
00:03:15,590 --> 00:03:19,880
put here what's post quantum primitive /

71
00:03:18,440 --> 00:03:24,169
squantum encryption for example should

72
00:03:19,880 --> 00:03:28,519
we use in this<font color="#CCCCCC"> boxes</font><font color="#E5E5E5"> and this is so the</font>

73
00:03:24,169 --> 00:03:31,099
first step here is<font color="#E5E5E5"> the setup of the TMS</font>

74
00:03:28,519 --> 00:03:33,859
okie except encapsulation mechanism and

75
00:03:31,099 --> 00:03:37,129
then there's an encapsulation itself and

76
00:03:33,859 --> 00:03:40,280
the<font color="#E5E5E5"> Dickey absolution so if we</font><font color="#CCCCCC"> look at</font>

77
00:03:37,129 --> 00:03:43,000
what exists based on lattices so here<font color="#E5E5E5"> I</font>

78
00:03:40,280 --> 00:03:45,560
am focusing on lattices we have

79
00:03:43,000 --> 00:03:48,410
basically two main families the first

80
00:03:45,560 --> 00:03:50,510
one is based on lwe so for example the

81
00:03:48,410 --> 00:03:53,540
candidate<font color="#E5E5E5"> Frodo you will hear</font><font color="#CCCCCC"> a little</font>

82
00:03:50,510 --> 00:03:56,679
more about these things at the next

83
00:03:53,540 --> 00:04:01,370
Stoke so further the communication is a

84
00:03:56,680 --> 00:04:03,139
22 kilobytes<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> based on this</font>

85
00:04:01,370 --> 00:04:05,810
reconciliation mechanism that is a

86
00:04:03,139 --> 00:04:09,470
<font color="#E5E5E5">little more complicated to implement</font>

87
00:04:05,810 --> 00:04:11,030
that like basic encryption and also you

88
00:04:09,470 --> 00:04:15,199
have new oaks and you have received a

89
00:04:11,030 --> 00:04:17,690
lot<font color="#CCCCCC"> of publicity especially since Google</font>

90
00:04:15,199 --> 00:04:22,039
experimented with it there's also the

91
00:04:17,690 --> 00:04:22,770
<font color="#CCCCCC">dcn s15 scheme and recently the author</font>

92
00:04:22,039 --> 00:04:25,909
of<font color="#E5E5E5"> new</font>

93
00:04:22,770 --> 00:04:28,289
did an encryption version of new oak

94
00:04:25,910 --> 00:04:30,000
we're where they don't use

95
00:04:28,289 --> 00:04:35,759
reconciliation but they still end up

96
00:04:30,000 --> 00:04:39,300
with similar communication so what do

97
00:04:35,759 --> 00:04:42,150
people use the ring so here are lwe so r

98
00:04:39,300 --> 00:04:44,280
is actually for ring and the reason you

99
00:04:42,150 --> 00:04:47,008
can see that<font color="#E5E5E5"> it allows to decrease a lot</font>

100
00:04:44,280 --> 00:04:48,989
of the<font color="#E5E5E5"> communication so if you look at</font>

101
00:04:47,009 --> 00:04:52,949
lwe you are<font color="#CCCCCC"> actually working with</font>

102
00:04:48,990 --> 00:04:56,880
matrices<font color="#E5E5E5"> plain matrices of integers so</font>

103
00:04:52,949 --> 00:05:00,360
one element in LW<font color="#E5E5E5"> will will be a lot of</font>

104
00:04:56,880 --> 00:05:02,430
element in GQ whereas<font color="#CCCCCC"> inner of an hour</font>

105
00:05:00,360 --> 00:05:03,990
<font color="#CCCCCC">w/e</font><font color="#E5E5E5"> you are actually working over</font>

106
00:05:02,430 --> 00:05:07,470
polynomial so you're<font color="#CCCCCC"> working with one</font>

107
00:05:03,990 --> 00:05:10,470
polynomials and you can actually<font color="#E5E5E5"> write</font>

108
00:05:07,470 --> 00:05:13,080
it as a matrix where the other columns

109
00:05:10,470 --> 00:05:15,240
of this matrix are obtained<font color="#E5E5E5"> by for</font>

110
00:05:13,080 --> 00:05:17,550
example in<font color="#CCCCCC"> NT cyclic rotation so you</font>

111
00:05:15,240 --> 00:05:20,490
only need<font color="#CCCCCC"> to give the first colon and</font>

112
00:05:17,550 --> 00:05:22,500
the other one can be recovered easily so

113
00:05:20,490 --> 00:05:24,300
when so that's a way<font color="#CCCCCC"> to do the</font>

114
00:05:22,500 --> 00:05:26,719
notification you can expand to a matrix

115
00:05:24,300 --> 00:05:31,319
but you can also just do multiplication

116
00:05:26,719 --> 00:05:33,120
over polynomial so that's a that's a

117
00:05:31,319 --> 00:05:35,400
really nice siding<font color="#E5E5E5"> inside so in</font>

118
00:05:33,120 --> 00:05:37,650
particular instead of transmitting data

119
00:05:35,400 --> 00:05:42,679
with like<font color="#E5E5E5"> all these</font><font color="#CCCCCC"> numbers you're on in</font>

120
00:05:37,650 --> 00:05:45,870
transmitting like n n times less so like

121
00:05:42,680 --> 00:05:49,560
there are a lot less members and usually

122
00:05:45,870 --> 00:05:53,430
we work with this string that is the the

123
00:05:49,560 --> 00:05:56,969
polynomials with coefficients you and

124
00:05:53,430 --> 00:05:59,699
mod xn plus 1 but there are<font color="#E5E5E5"> some other</font>

125
00:05:56,969 --> 00:06:02,969
possibilities for example X and minus 1

126
00:05:59,699 --> 00:06:06,090
<font color="#E5E5E5">or XP minus X minus 1 so the second one</font>

127
00:06:02,969 --> 00:06:09,889
you can also it gives a different

128
00:06:06,090 --> 00:06:12,929
<font color="#E5E5E5">algebraic objects and you can get good</font>

129
00:06:09,889 --> 00:06:14,340
performances but the implementing the

130
00:06:12,930 --> 00:06:18,779
notification is a little more

131
00:06:14,340 --> 00:06:21,419
complicated<font color="#CCCCCC"> ok so what is Chris also in</font>

132
00:06:18,779 --> 00:06:26,340
crystal<font color="#E5E5E5"> where so here we're speaking</font>

133
00:06:21,419 --> 00:06:29,818
about lwe and<font color="#CCCCCC"> ring LW so in crystal</font>

134
00:06:26,340 --> 00:06:32,310
we're actually considering module LW the

135
00:06:29,819 --> 00:06:36,330
module is will be<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that is more</font>

136
00:06:32,310 --> 00:06:39,060
<font color="#E5E5E5">or less in between and we will focus</font>

137
00:06:36,330 --> 00:06:42,810
to maintain for this cryptography suit

138
00:06:39,060 --> 00:06:45,360
that is simplicity and modularity so we

139
00:06:42,810 --> 00:06:48,030
want to<font color="#E5E5E5"> avoid reconciliation we want to</font>

140
00:06:45,360 --> 00:06:50,939
avoid we're speaking just before about

141
00:06:48,030 --> 00:06:52,710
avoiding the complexity of the

142
00:06:50,939 --> 00:06:54,960
<font color="#E5E5E5">implementation so that people are not</font>

143
00:06:52,710 --> 00:06:57,330
<font color="#E5E5E5">likely to do a lot</font><font color="#CCCCCC"> of mistake when the</font>

144
00:06:54,960 --> 00:07:00,870
implement so we want to<font color="#E5E5E5"> try to avoid the</font>

145
00:06:57,330 --> 00:07:03,870
ocean sampling we want to try<font color="#E5E5E5"> to avoid</font>

146
00:07:00,870 --> 00:07:06,419
the NQ assumption for example we<font color="#E5E5E5"> want to</font>

147
00:07:03,870 --> 00:07:10,800
provide CCA security from from the start

148
00:07:06,419 --> 00:07:12,810
and we want something<font color="#E5E5E5"> where if you want</font>

149
00:07:10,800 --> 00:07:15,300
another level<font color="#CCCCCC"> of security it should be</font>

150
00:07:12,810 --> 00:07:16,800
<font color="#E5E5E5">easy to get it shouldn't be like okay</font>

151
00:07:15,300 --> 00:07:18,150
you need to reimplement everything

152
00:07:16,800 --> 00:07:19,979
because you have to change<font color="#CCCCCC"> the modules</font>

153
00:07:18,150 --> 00:07:21,568
so all your implementation is not

154
00:07:19,979 --> 00:07:23,430
working anymore we want something<font color="#E5E5E5"> where</font>

155
00:07:21,569 --> 00:07:24,960
you want to<font color="#E5E5E5"> increase the security just</font>

156
00:07:23,430 --> 00:07:27,150
increase this parameter<font color="#E5E5E5"> and it will work</font>

157
00:07:24,960 --> 00:07:31,770
right away and we can get that<font color="#E5E5E5"> from</font>

158
00:07:27,150 --> 00:07:35,669
modules also the<font color="#E5E5E5"> TEM can be used for</font>

159
00:07:31,770 --> 00:07:43,159
encryption during a key MDM<font color="#E5E5E5"> 40 exchange</font>

160
00:07:35,669 --> 00:07:46,740
or orange<font color="#CCCCCC"> gauge authenticated action so</font>

161
00:07:43,159 --> 00:07:48,810
here i will present<font color="#E5E5E5"> i will explain a</font>

162
00:07:46,740 --> 00:07:53,099
little about module attaches then<font color="#E5E5E5"> i will</font>

163
00:07:48,810 --> 00:07:56,909
present khyber that is<font color="#E5E5E5"> TM so thank you</font>

164
00:07:53,099 --> 00:07:59,339
<font color="#CCCCCC">for the name Isis CCA security its</font>

165
00:07:56,909 --> 00:08:02,819
associated CPA secure and its encryption

166
00:07:59,339 --> 00:08:04,529
base and I don't have time to speak

167
00:08:02,819 --> 00:08:07,889
about the digital signature that<font color="#CCCCCC"> is</font>

168
00:08:04,529 --> 00:08:11,550
called Elysium but the ideas we want to

169
00:08:07,889 --> 00:08:13,620
do something a la TLP 12 so it's a paper

170
00:08:11,550 --> 00:08:17,279
that was published at chess in 2012

171
00:08:13,620 --> 00:08:21,990
<font color="#E5E5E5">where we're sticking to distribution of</font>

172
00:08:17,279 --> 00:08:25,490
noises that are for example uniform<font color="#CCCCCC"> okay</font>

173
00:08:21,990 --> 00:08:28,199
so what about module lattices so this is

174
00:08:25,490 --> 00:08:30,960
lattices we're working<font color="#CCCCCC"> on when we're</font>

175
00:08:28,199 --> 00:08:33,630
<font color="#E5E5E5">working with lwe so it's full mattresses</font>

176
00:08:30,960 --> 00:08:36,149
over the<font color="#E5E5E5"> cube when we're</font><font color="#CCCCCC"> working with a</font>

177
00:08:33,630 --> 00:08:38,519
ring lattices we are only having like

178
00:08:36,149 --> 00:08:41,490
<font color="#E5E5E5">one polynomial and the other column of</font>

179
00:08:38,519 --> 00:08:43,620
this matrix are actually rotations or

180
00:08:41,490 --> 00:08:45,340
aunty cyclic rotations or they can

181
00:08:43,620 --> 00:08:48,610
deduce from this fiscal

182
00:08:45,340 --> 00:08:52,540
in motor lattices we're using so an

183
00:08:48,610 --> 00:08:55,660
example could be for example to use a<font color="#E5E5E5"> V</font>

184
00:08:52,540 --> 00:08:58,060
times D matrix where each element here

185
00:08:55,660 --> 00:09:00,969
is<font color="#E5E5E5"> actually a small ring element not</font>

186
00:08:58,060 --> 00:09:04,119
smaller than like this ring lattice but

187
00:09:00,970 --> 00:09:06,130
they're all they're all completely

188
00:09:04,120 --> 00:09:08,470
independent so for<font color="#E5E5E5"> example you could</font>

189
00:09:06,130 --> 00:09:13,600
work<font color="#CCCCCC"> with D dimensional matrices of</font>

190
00:09:08,470 --> 00:09:17,380
polynomial in the QX coach hunted by X

191
00:09:13,600 --> 00:09:20,190
to the 256 plus 1<font color="#E5E5E5"> and this dimension is</font>

192
00:09:17,380 --> 00:09:23,560
fixed for<font color="#E5E5E5"> example 256 and we choose to</font>

193
00:09:20,190 --> 00:09:26,590
<font color="#E5E5E5">256 because it will encrypt 256 bit at</font>

194
00:09:23,560 --> 00:09:28,479
the end but the nice thing is that you

195
00:09:26,590 --> 00:09:30,910
can consider many of these things<font color="#E5E5E5"> and</font>

196
00:09:28,480 --> 00:09:33,730
you can see that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> random part is</font>

197
00:09:30,910 --> 00:09:37,209
actually<font color="#CCCCCC"> all the black part here and the</font>

198
00:09:33,730 --> 00:09:39,130
other one can be derived so it allows to

199
00:09:37,210 --> 00:09:41,620
reach for example<font color="#E5E5E5"> the dimension to</font>

200
00:09:39,130 --> 00:09:43,990
statistics times p whereas<font color="#CCCCCC"> if you were</font>

201
00:09:41,620 --> 00:09:46,960
focusing on the ring lettuce<font color="#E5E5E5"> that is at</font>

202
00:09:43,990 --> 00:09:51,390
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> fun you had to go from 256 to</font>

203
00:09:46,960 --> 00:09:54,970
512 to 1024 to 2048 and the gap between

204
00:09:51,390 --> 00:09:57,430
1000 and 2000 is huge is used also in

205
00:09:54,970 --> 00:09:59,410
security like 1000 you'll get a good

206
00:09:57,430 --> 00:10:01,599
security<font color="#CCCCCC"> 2000 you will get a another</font>

207
00:09:59,410 --> 00:10:03,760
skill security like really<font color="#E5E5E5"> really a lot</font>

208
00:10:01,600 --> 00:10:06,490
and<font color="#E5E5E5"> you would maybe want to increase it</font>

209
00:10:03,760 --> 00:10:07,900
or more it's a lot<font color="#E5E5E5"> to reduce also in the</font>

210
00:10:06,490 --> 00:10:09,610
module so we're working<font color="#CCCCCC"> with smaller</font>

211
00:10:07,900 --> 00:10:12,250
things we can actually<font color="#E5E5E5"> reduce the model</font>

212
00:10:09,610 --> 00:10:15,390
so it means we can work with smaller

213
00:10:12,250 --> 00:10:18,430
numbers and it's more flexible because

214
00:10:15,390 --> 00:10:19,990
you can see here it as this form if<font color="#E5E5E5"> I</font>

215
00:10:18,430 --> 00:10:22,780
want<font color="#E5E5E5"> to increase security instead</font><font color="#CCCCCC"> of</font>

216
00:10:19,990 --> 00:10:26,080
considering freedom the<font color="#CCCCCC"> 3 matrix I can</font>

217
00:10:22,780 --> 00:10:27,610
consider<font color="#E5E5E5"> for dot</font><font color="#CCCCCC"> for matrices and in the</font>

218
00:10:26,080 --> 00:10:31,770
implementation it will be able<font color="#E5E5E5"> it will</font>

219
00:10:27,610 --> 00:10:34,420
be easy to change so what is the the

220
00:10:31,770 --> 00:10:37,990
<font color="#E5E5E5">assumption the attention is the learning</font>

221
00:10:34,420 --> 00:10:43,719
refer but<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those modules</font><font color="#E5E5E5"> so we have a</font>

222
00:10:37,990 --> 00:10:45,370
matrix a so this matrix a sorry<font color="#E5E5E5"> it's a</font>

223
00:10:43,720 --> 00:10:48,670
matrix here so it's a matrix of

224
00:10:45,370 --> 00:10:53,370
polynomials and you multiply by a<font color="#E5E5E5"> vector</font>

225
00:10:48,670 --> 00:10:56,160
of polynomials you add a noise that is

226
00:10:53,370 --> 00:11:00,660
small too small polynomials and it gives

227
00:10:56,160 --> 00:11:05,100
you a value so that's a learning<font color="#E5E5E5"> reserve</font>

228
00:11:00,660 --> 00:11:08,130
and if we restrict to small secret we

229
00:11:05,100 --> 00:11:10,860
can actually<font color="#E5E5E5"> get a square matrix here</font>

230
00:11:08,130 --> 00:11:12,630
and we get this form here and we'll need

231
00:11:10,860 --> 00:11:16,440
a small secret in order to do a key

232
00:11:12,630 --> 00:11:19,830
exchange so this<font color="#CCCCCC"> is I want to stress</font>

233
00:11:16,440 --> 00:11:22,529
something this is<font color="#CCCCCC"> not a revolutionary</font>

234
00:11:19,830 --> 00:11:26,820
technique this scheme is a scheme of

235
00:11:22,529 --> 00:11:29,250
forget from 2005 it's the<font color="#CCCCCC"> first that we</font>

236
00:11:26,820 --> 00:11:31,260
can<font color="#E5E5E5"> take</font><font color="#CCCCCC"> it with square matrices because</font>

237
00:11:29,250 --> 00:11:34,260
<font color="#CCCCCC">there's this equivalence</font><font color="#E5E5E5"> from 2000 in</font>

238
00:11:31,260 --> 00:11:37,140
<font color="#CCCCCC">mind the ring things were considering in</font>

239
00:11:34,260 --> 00:11:39,750
2010 the<font color="#CCCCCC"> module thing is just a</font>

240
00:11:37,140 --> 00:11:42,660
generalization of the ring thing so it

241
00:11:39,750 --> 00:11:45,120
was<font color="#CCCCCC"> only written them in 2014 but it was</font>

242
00:11:42,660 --> 00:11:46,949
already considered before we are not

243
00:11:45,120 --> 00:11:50,100
reinventing the wheel here and I think

244
00:11:46,950 --> 00:11:54,200
it's important for for for the fact that

245
00:11:50,100 --> 00:11:57,660
we want standardization to be<font color="#E5E5E5"> successful</font>

246
00:11:54,200 --> 00:11:59,790
so the module learning refer the

247
00:11:57,660 --> 00:12:01,469
decisional version of the problem is can

248
00:11:59,790 --> 00:12:04,410
you<font color="#E5E5E5"> distinguish between something</font>

249
00:12:01,470 --> 00:12:06,330
<font color="#E5E5E5">completely in uniform with respect to</font>

250
00:12:04,410 --> 00:12:09,959
something uniform and the last one is

251
00:12:06,330 --> 00:12:16,620
actually obtained as this as a module

252
00:12:09,959 --> 00:12:18,810
algebra live example<font color="#CCCCCC"> okay so an</font>

253
00:12:16,620 --> 00:12:20,370
interesting point that<font color="#E5E5E5"> I want to make</font>

254
00:12:18,810 --> 00:12:23,160
here is that actually when you think

255
00:12:20,370 --> 00:12:25,890
about it it will not be less efficient

256
00:12:23,160 --> 00:12:27,719
than ring lwe so first if you want to

257
00:12:25,890 --> 00:12:31,319
derive the matrix a you<font color="#E5E5E5"> can actually</font>

258
00:12:27,720 --> 00:12:33,660
<font color="#E5E5E5">derive it from one kid</font><font color="#CCCCCC"> okay you have for</font>

259
00:12:31,320 --> 00:12:35,310
example 3 dot free polynomials we derive

260
00:12:33,660 --> 00:12:39,020
so you're<font color="#E5E5E5"> just driving one seed you will</font>

261
00:12:35,310 --> 00:12:41,310
<font color="#CCCCCC">you fit</font><font color="#E5E5E5"> it in a in an extendable</font>

262
00:12:39,020 --> 00:12:44,670
function and it gives you a lot of

263
00:12:41,310 --> 00:12:47,880
values and it fits your matrix so for

264
00:12:44,670 --> 00:12:51,900
example<font color="#E5E5E5"> you do shake 128 and this is and</font>

265
00:12:47,880 --> 00:12:53,790
you'll recover all this matrix but the

266
00:12:51,900 --> 00:12:57,300
key point here is that we're actually so

267
00:12:53,790 --> 00:12:59,730
we're computing this thing here for<font color="#CCCCCC"> the</font>

268
00:12:57,300 --> 00:13:02,939
public use so we're computing this

269
00:12:59,730 --> 00:13:05,320
matrix product<font color="#E5E5E5"> times the secret plus a</font>

270
00:13:02,940 --> 00:13:07,420
small error and you will get

271
00:13:05,320 --> 00:13:10,660
you be and when will transmit the key

272
00:13:07,420 --> 00:13:13,510
will actually transmit the seed so it's

273
00:13:10,660 --> 00:13:15,939
only 256 bit and then will transmit this

274
00:13:13,510 --> 00:13:20,260
part here but as you can see this<font color="#E5E5E5"> part</font>

275
00:13:15,940 --> 00:13:23,800
it's exactly it's likely<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> be</font>

276
00:13:20,260 --> 00:13:27,340
exactly the same number<font color="#CCCCCC"> of elements as a</font>

277
00:13:23,800 --> 00:13:29,439
ring element so it means we're not

278
00:13:27,340 --> 00:13:31,260
compared to ring lwe for the

279
00:13:29,440 --> 00:13:34,330
communication side we're actually<font color="#E5E5E5"> not</font>

280
00:13:31,260 --> 00:13:36,880
gaining aware and we're not complying

281
00:13:34,330 --> 00:13:41,170
the thing it will not be easier<font color="#CCCCCC"> to use</font>

282
00:13:36,880 --> 00:13:43,330
module in that respect but it will<font color="#CCCCCC"> be</font>

283
00:13:41,170 --> 00:13:47,380
easier for modularity and we actually

284
00:13:43,330 --> 00:13:49,720
<font color="#CCCCCC">have more random like less structure so</font>

285
00:13:47,380 --> 00:13:51,939
here<font color="#E5E5E5"> we have a little</font><font color="#CCCCCC"> also more</font>

286
00:13:49,720 --> 00:13:54,190
notification of polynomials but it's

287
00:13:51,940 --> 00:13:57,760
multiplication with smaller polynomials

288
00:13:54,190 --> 00:14:00,640
so in a in a certain way it will balance

289
00:13:57,760 --> 00:14:04,990
a little bit and the resulting element

290
00:14:00,640 --> 00:14:08,350
that size is the same size as a ring LW

291
00:14:04,990 --> 00:14:10,510
element of size 256 times T so in what

292
00:14:08,350 --> 00:14:13,150
<font color="#CCCCCC">it means also</font><font color="#E5E5E5"> because at the end</font><font color="#CCCCCC"> we'll</font>

293
00:14:10,510 --> 00:14:14,680
do the cross product of this with the

294
00:14:13,150 --> 00:14:16,990
secret and it will give<font color="#E5E5E5"> you one</font>

295
00:14:14,680 --> 00:14:19,469
polynomial and this polynomial will be

296
00:14:16,990 --> 00:14:22,870
of dimension<font color="#E5E5E5"> 2 50 60 it mean we're</font>

297
00:14:19,470 --> 00:14:25,390
optimal to encrypt this 256-bit so

298
00:14:22,870 --> 00:14:29,050
<font color="#CCCCCC">actually in general model that</font><font color="#E5E5E5"> w/e is</font>

299
00:14:25,390 --> 00:14:31,810
not a more efficient than ring lwe but

300
00:14:29,050 --> 00:14:36,160
here we are encrypting 256 bits so it

301
00:14:31,810 --> 00:14:38,109
will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> ok so what about the</font>

302
00:14:36,160 --> 00:14:41,829
implementation<font color="#E5E5E5"> I said it was easy so for</font>

303
00:14:38,110 --> 00:14:47,050
example here restoring the the vectors

304
00:14:41,830 --> 00:14:49,630
in this polly baxter start so how do we

305
00:14:47,050 --> 00:14:52,689
compute the entity of this vector so

306
00:14:49,630 --> 00:14:55,090
we're just<font color="#E5E5E5"> doing a loop with a I birdie</font>

307
00:14:52,690 --> 00:14:57,190
jeopardy is the<font color="#CCCCCC"> powermat with the define</font>

308
00:14:55,090 --> 00:14:59,590
parameter D and we're<font color="#E5E5E5"> just doing the</font>

309
00:14:57,190 --> 00:15:04,030
entity on the small elements and it's a

310
00:14:59,590 --> 00:15:06,390
250 is the entity 256 elements so also

311
00:15:04,030 --> 00:15:09,880
it will<font color="#CCCCCC"> be easy to increase security</font>

312
00:15:06,390 --> 00:15:12,490
because with very little implementation

313
00:15:09,880 --> 00:15:15,430
in the sense that so if I don't if I

314
00:15:12,490 --> 00:15:18,190
don't modify any parameter but<font color="#E5E5E5"> D and I</font>

315
00:15:15,430 --> 00:15:19,059
increase p by<font color="#E5E5E5"> 1 you will see that again</font>

316
00:15:18,190 --> 00:15:21,639
a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

317
00:15:19,059 --> 00:15:23,289
security I lose a little on the fact

318
00:15:21,639 --> 00:15:25,569
that I have a little more decryption

319
00:15:23,289 --> 00:15:27,129
error here so if I<font color="#E5E5E5"> want to at the same</font>

320
00:15:25,569 --> 00:15:29,259
level of decryption error i will have to

321
00:15:27,129 --> 00:15:33,729
increase<font color="#E5E5E5"> the noise a little bit but</font>

322
00:15:29,259 --> 00:15:35,799
otherwise if I just increase<font color="#E5E5E5"> d and take</font>

323
00:15:33,729 --> 00:15:38,439
one more i will i'll gain a lot<font color="#CCCCCC"> of</font>

324
00:15:35,799 --> 00:15:40,809
security<font color="#E5E5E5"> so that's really nice too for</font>

325
00:15:38,439 --> 00:15:43,358
example rich<font color="#CCCCCC"> difference security targets</font>

326
00:15:40,809 --> 00:15:46,419
as it has been asked for the furnace by

327
00:15:43,359 --> 00:15:48,579
<font color="#CCCCCC">NIST where you can say ok i recommend</font>

328
00:15:46,419 --> 00:15:51,129
the version with<font color="#CCCCCC"> three dot 3 but</font><font color="#E5E5E5"> you can</font>

329
00:15:48,579 --> 00:15:55,238
also consider for that for and you'll

330
00:15:51,129 --> 00:15:58,749
get much more security so what is<font color="#E5E5E5"> the</font>

331
00:15:55,239 --> 00:16:01,599
key encapsulation mechanism it's more or

332
00:15:58,749 --> 00:16:05,259
less what's on this slide so<font color="#E5E5E5"> I have this</font>

333
00:16:01,599 --> 00:16:08,199
the server is actually<font color="#E5E5E5"> doing the setup</font>

334
00:16:05,259 --> 00:16:10,749
so it's<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> creating a public key and a</font>

335
00:16:08,199 --> 00:16:12,909
secret key and sending the seed of this

336
00:16:10,749 --> 00:16:15,099
public key and<font color="#E5E5E5"> sending this element here</font>

337
00:16:12,909 --> 00:16:19,329
that is the same size as a ring element

338
00:16:15,099 --> 00:16:22,659
as the public and the user is doing the

339
00:16:19,329 --> 00:16:26,858
encapsulation so is drawing something is

340
00:16:22,659 --> 00:16:30,699
drawing a new secret key a new noise is

341
00:16:26,859 --> 00:16:34,959
doing this notification and here is

342
00:16:30,699 --> 00:16:37,748
hiding is drawing a key completely at

343
00:16:34,959 --> 00:16:39,579
random is encrypting the key and like

344
00:16:37,749 --> 00:16:41,709
putting it in a cipher text and<font color="#E5E5E5"> then you</font>

345
00:16:39,579 --> 00:16:43,598
send the<font color="#E5E5E5"> cipher text back to the server</font>

346
00:16:41,709 --> 00:16:48,008
<font color="#E5E5E5">the server can use a secret key to</font>

347
00:16:43,599 --> 00:16:49,719
decrypt and recover a noisy version of

348
00:16:48,009 --> 00:16:52,239
the key and then if they run things

349
00:16:49,719 --> 00:16:56,139
correctly so here this thing is actually

350
00:16:52,239 --> 00:16:58,629
q / to time the key so if you look<font color="#E5E5E5"> at</font>

351
00:16:56,139 --> 00:17:00,219
<font color="#CCCCCC">the round of two divided by Q time the</font>

352
00:16:58,629 --> 00:17:02,109
key will get the same<font color="#E5E5E5"> thing is here</font>

353
00:17:00,219 --> 00:17:05,169
because<font color="#E5E5E5"> here is with a little more noise</font>

354
00:17:02,109 --> 00:17:06,850
so when you divide by Q and you rounded

355
00:17:05,169 --> 00:17:09,339
the noise will disappear so you have the

356
00:17:06,849 --> 00:17:12,398
same way of run and this is this is

357
00:17:09,339 --> 00:17:14,859
<font color="#E5E5E5">exactly that the the reg ex came from</font>

358
00:17:12,398 --> 00:17:17,979
the beginning that we know from 2000

359
00:17:14,859 --> 00:17:21,248
inside and this thing here will be

360
00:17:17,980 --> 00:17:24,490
easier to<font color="#E5E5E5"> implement than reconciliation</font>

361
00:17:21,249 --> 00:17:26,679
mechanism so if<font color="#CCCCCC"> we look at the</font>

362
00:17:24,490 --> 00:17:30,009
encryption<font color="#CCCCCC"> scheme what it is so</font><font color="#E5E5E5"> I'd</font>

363
00:17:26,679 --> 00:17:31,049
<font color="#E5E5E5">recede I use shake in order to generate</font>

364
00:17:30,009 --> 00:17:36,590
my matric

365
00:17:31,049 --> 00:17:39,179
of polynomials I draw some vectors of

366
00:17:36,590 --> 00:17:40,889
small polynomials so small point on

367
00:17:39,179 --> 00:17:42,600
yours actually<font color="#CCCCCC"> the coefficient will be</font>

368
00:17:40,889 --> 00:17:44,459
drawn according to a binomial

369
00:17:42,600 --> 00:17:46,949
distribution<font color="#E5E5E5"> so you're just like a</font>

370
00:17:44,460 --> 00:17:49,860
dingus cubed so you're joining something

371
00:17:46,950 --> 00:17:52,590
at four at random and<font color="#CCCCCC"> you're adding the</font>

372
00:17:49,860 --> 00:17:55,258
base and it gives you exactly the the

373
00:17:52,590 --> 00:17:58,738
<font color="#CCCCCC">coefficients here then you're computing</font>

374
00:17:55,259 --> 00:18:03,119
be as a times<font color="#CCCCCC"> S Plus E and the public</font>

375
00:17:58,739 --> 00:18:05,399
key is hidden be<font color="#E5E5E5"> as a secret key is s so</font>

376
00:18:03,119 --> 00:18:08,428
then what you encrypt so in order to

377
00:18:05,399 --> 00:18:09,869
increase your arm so you encrypt using

378
00:18:08,429 --> 00:18:12,629
the public key you encrypt a message

379
00:18:09,869 --> 00:18:15,330
that is 256 bit long and you're using

380
00:18:12,629 --> 00:18:17,399
some random coins and i'm specifying the

381
00:18:15,330 --> 00:18:19,918
point here because we're using a cc a

382
00:18:17,399 --> 00:18:23,399
transformation and we want actually in

383
00:18:19,919 --> 00:18:25,049
the at the<font color="#E5E5E5"> end the server will recompute</font>

384
00:18:23,399 --> 00:18:28,830
the<font color="#CCCCCC"> cipher text and verify that it has</font>

385
00:18:25,049 --> 00:18:30,989
not been modified<font color="#E5E5E5"> so you get the key</font>

386
00:18:28,830 --> 00:18:34,769
that you<font color="#E5E5E5"> get the seed and be you can</font>

387
00:18:30,989 --> 00:18:37,999
reconstruct a then you can generate SN e

388
00:18:34,769 --> 00:18:42,419
as<font color="#CCCCCC"> a new polynomials with small elements</font>

389
00:18:37,999 --> 00:18:45,840
using this<font color="#CCCCCC"> point here and you can</font>

390
00:18:42,419 --> 00:18:49,909
compute a transpose of s prime times a

391
00:18:45,840 --> 00:18:53,100
<font color="#E5E5E5">plus e prime so that's one element and</font>

392
00:18:49,909 --> 00:18:55,919
so<font color="#CCCCCC"> that was this element here the free</font>

393
00:18:53,100 --> 00:18:57,629
first elements of the matrix and then

394
00:18:55,919 --> 00:18:59,789
you can compute<font color="#E5E5E5"> the fourth element of</font>

395
00:18:57,629 --> 00:19:04,678
the matrix sorry the fourth element is

396
00:18:59,789 --> 00:19:06,480
using be your computing<font color="#CCCCCC"> d and the inner</font>

397
00:19:04,679 --> 00:19:08,269
product with s<font color="#CCCCCC"> Prime and</font><font color="#E5E5E5"> you're writing</font>

398
00:19:06,480 --> 00:19:11,789
a new noise<font color="#E5E5E5"> and you are actually</font>

399
00:19:08,269 --> 00:19:13,649
encrypting so you're adding the message

400
00:19:11,789 --> 00:19:16,470
here so you<font color="#E5E5E5"> are adding the message in</font>

401
00:19:13,649 --> 00:19:18,479
the in the coefficient then you were

402
00:19:16,470 --> 00:19:20,879
putting that as a<font color="#CCCCCC"> cipher text and to</font>

403
00:19:18,480 --> 00:19:23,580
decrease your<font color="#E5E5E5"> touch computing v minus</font>

404
00:19:20,879 --> 00:19:27,549
use years the scalar product<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you and</font>

405
00:19:23,580 --> 00:19:30,999
s so<font color="#E5E5E5"> this will remove a</font>

406
00:19:27,549 --> 00:19:33,249
as<font color="#CCCCCC"> prime transpose a times s and you</font>

407
00:19:30,999 --> 00:19:35,799
will recover actually this thing here

408
00:19:33,249 --> 00:19:38,320
plus the noise so then you have this

409
00:19:35,799 --> 00:19:41,529
simple decryption procedure<font color="#CCCCCC"> and will you</font>

410
00:19:38,320 --> 00:19:45,249
will be able<font color="#E5E5E5"> to recover the mi so if you</font>

411
00:19:41,529 --> 00:19:48,399
<font color="#E5E5E5">look at the at the TEM what it does is</font>

412
00:19:45,249 --> 00:19:51,070
that the<font color="#CCCCCC"> the generation x server is just</font>

413
00:19:48,399 --> 00:19:53,529
generating a public key and a secret key

414
00:19:51,070 --> 00:19:55,989
sending the public key over the

415
00:19:53,529 --> 00:20:00,100
encapsulation you're drawing some

416
00:19:55,989 --> 00:20:01,749
randomness you're applying shy 256 first

417
00:20:00,100 --> 00:20:06,519
because you don't want to reveal the

418
00:20:01,749 --> 00:20:09,730
randomness of your of your computer and

419
00:20:06,519 --> 00:20:12,279
<font color="#CCCCCC">then you apply a 512 and</font><font color="#E5E5E5"> you get like</font>

420
00:20:09,730 --> 00:20:14,529
<font color="#E5E5E5">the first part will be the key and the</font>

421
00:20:12,279 --> 00:20:16,659
second part<font color="#E5E5E5"> will be the</font><font color="#CCCCCC"> cons so then you</font>

422
00:20:14,529 --> 00:20:19,419
encrypt with this coin to encrypt the

423
00:20:16,659 --> 00:20:21,429
value X so it means this during<font color="#CCCCCC"> the crip</font>

424
00:20:19,419 --> 00:20:24,179
<font color="#E5E5E5">shin you'll be able to recover X and in</font>

425
00:20:21,429 --> 00:20:29,529
order to recover key later you will be

426
00:20:24,179 --> 00:20:31,600
reapplying<font color="#E5E5E5"> sh sh a</font><font color="#CCCCCC"> free 512 so then you</font>

427
00:20:29,529 --> 00:20:34,989
send you send your psycho tech so you're

428
00:20:31,600 --> 00:20:37,600
sending you and sorry if this shouldn't

429
00:20:34,989 --> 00:20:40,299
be here to see here should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> here so</font>

430
00:20:37,600 --> 00:20:42,969
you sending you envy and here in your

431
00:20:40,299 --> 00:20:45,940
recover<font color="#CCCCCC"> X prime you recover k prime</font>

432
00:20:42,970 --> 00:20:48,039
<font color="#CCCCCC">interns Prime and then you re encrypt</font>

433
00:20:45,940 --> 00:20:49,809
and you verify that the rink ription is

434
00:20:48,039 --> 00:20:54,669
actually the same as a psycho text that

435
00:20:49,809 --> 00:20:57,279
you<font color="#E5E5E5"> received so here</font><font color="#CCCCCC"> we are working with</font>

436
00:20:54,669 --> 00:21:01,210
dimension<font color="#CCCCCC"> 2 50 60</font><font color="#E5E5E5"> your we're considering</font>

437
00:20:57,279 --> 00:21:04,720
<font color="#E5E5E5">free</font><font color="#CCCCCC"> dot</font><font color="#E5E5E5"> 3 matrices the the polynomials</font>

438
00:21:01,210 --> 00:21:06,129
<font color="#E5E5E5">have a small elements and the elements</font>

439
00:21:04,720 --> 00:21:08,080
are drawn according to this binomial

440
00:21:06,129 --> 00:21:09,820
<font color="#E5E5E5">distribution and it's really</font><font color="#CCCCCC"> easy to</font>

441
00:21:08,080 --> 00:21:12,460
sample elements according to this

442
00:21:09,820 --> 00:21:14,080
distribution and also the modulus is

443
00:21:12,460 --> 00:21:18,249
smaller for example than in<font color="#CCCCCC"> new hope</font>

444
00:21:14,080 --> 00:21:20,109
it's only certain bit long so if you

445
00:21:18,249 --> 00:21:22,779
think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the implementation aspects o</font>

446
00:21:20,109 --> 00:21:24,129
entity in dimension 256 and the really

447
00:21:22,779 --> 00:21:26,259
<font color="#E5E5E5">nice thing is that if</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to</font>

448
00:21:24,129 --> 00:21:29,289
increase security we just change T and

449
00:21:26,259 --> 00:21:32,200
we keep<font color="#E5E5E5"> the same entity the primitive</font>

450
00:21:29,289 --> 00:21:36,009
use so we using<font color="#E5E5E5"> shake we're using shaft</font>

451
00:21:32,200 --> 00:21:38,620
32 56 and<font color="#E5E5E5"> Geoffrey 512 we're trying to</font>

452
00:21:36,009 --> 00:21:41,140
be consistent and using like only

453
00:21:38,620 --> 00:21:42,969
one big family here there's this by

454
00:21:41,140 --> 00:21:45,490
normal error distribution it's

455
00:21:42,970 --> 00:21:48,059
essentially the same as in new hope it's

456
00:21:45,490 --> 00:21:50,620
actually a smaller it's actually simpler

457
00:21:48,059 --> 00:21:53,110
we're doing a lot of compression in

458
00:21:50,620 --> 00:21:56,439
order to transmit as<font color="#E5E5E5"> Adam as little as</font>

459
00:21:53,110 --> 00:21:57,909
<font color="#CCCCCC">possible and what I want to</font><font color="#E5E5E5"> stress out</font>

460
00:21:56,440 --> 00:21:59,950
is that it's<font color="#CCCCCC"> actually the code is</font>

461
00:21:57,910 --> 00:22:01,600
actually similar and the performance

462
00:21:59,950 --> 00:22:05,290
will<font color="#E5E5E5"> be really similar to new open you</font>

463
00:22:01,600 --> 00:22:07,899
up<font color="#E5E5E5"> symbol so it's active so this Kim can</font>

464
00:22:05,290 --> 00:22:10,210
actually be used like in Europe<font color="#CCCCCC"> but it's</font>

465
00:22:07,900 --> 00:22:14,410
actually much more general and you can

466
00:22:10,210 --> 00:22:17,170
use it<font color="#E5E5E5"> for example in</font><font color="#CCCCCC"> an encryption to</font>

467
00:22:14,410 --> 00:22:20,950
the key<font color="#E5E5E5"> nvm or you can</font><font color="#CCCCCC"> use it</font><font color="#E5E5E5"> as an</font>

468
00:22:17,170 --> 00:22:25,540
authenticated fiction so can I see the

469
00:22:20,950 --> 00:22:28,300
code soon so the reason is that we were

470
00:22:25,540 --> 00:22:30,040
groups that were<font color="#E5E5E5"> not working to give her</font>

471
00:22:28,300 --> 00:22:32,409
at first<font color="#E5E5E5"> and then we came together we</font>

472
00:22:30,040 --> 00:22:35,200
still have a couple<font color="#CCCCCC"> of things to agree</font>

473
00:22:32,410 --> 00:22:38,080
on with<font color="#CCCCCC"> respect to the quantum random</font>

474
00:22:35,200 --> 00:22:40,600
Oracle model and the CCA transformation

475
00:22:38,080 --> 00:22:42,820
so we expect a really similar

476
00:22:40,600 --> 00:22:45,340
performance compared to the code I will

477
00:22:42,820 --> 00:22:48,850
talk about the performance very soon but

478
00:22:45,340 --> 00:22:51,610
we<font color="#CCCCCC"> already have the Scarab account that</font>

479
00:22:48,850 --> 00:22:55,300
is so this does not yield to anything so

480
00:22:51,610 --> 00:22:57,250
pickle crystal is created but<font color="#CCCCCC"> will as</font>

481
00:22:55,300 --> 00:23:02,050
soon<font color="#E5E5E5"> as it's available we'll put the</font>

482
00:22:57,250 --> 00:23:05,080
<font color="#CCCCCC">implementations there so last have some</font>

483
00:23:02,050 --> 00:23:07,210
pointless yes I want you to mention the

484
00:23:05,080 --> 00:23:09,939
open quantum safe project because when I

485
00:23:07,210 --> 00:23:12,100
wanted to assess the<font color="#CCCCCC"> performance it</font><font color="#E5E5E5"> was</font>

486
00:23:09,940 --> 00:23:14,440
really<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have this project so at</font>

487
00:23:12,100 --> 00:23:18,850
the end open quantum size project is a

488
00:23:14,440 --> 00:23:21,370
project where the<font color="#E5E5E5"> leaders are nickel a</font>

489
00:23:18,850 --> 00:23:26,919
mosca<font color="#E5E5E5"> and Google Sybilla and it's</font>

490
00:23:21,370 --> 00:23:31,989
actually a project where you have an

491
00:23:26,920 --> 00:23:35,340
<font color="#CCCCCC">open-concept library and that is that is</font>

492
00:23:31,990 --> 00:23:38,920
a rapper an IP I over<font color="#CCCCCC"> the existing</font>

493
00:23:35,340 --> 00:23:41,860
implementation of<font color="#CCCCCC"> one primitive</font><font color="#E5E5E5"> and then</font>

494
00:23:38,920 --> 00:23:44,679
there's also an open SSL integration of

495
00:23:41,860 --> 00:23:51,428
this pyramid of this library<font color="#E5E5E5"> into</font>

496
00:23:44,679 --> 00:23:54,130
openssl 102 so in particular if I build

497
00:23:51,429 --> 00:23:57,400
everything right<font color="#CCCCCC"> now and I do openssl</font>

498
00:23:54,130 --> 00:23:59,830
speed I get this a different post

499
00:23:57,400 --> 00:24:05,800
quantum key action that are already in

500
00:23:59,830 --> 00:24:07,780
in the library so here its isolation

501
00:24:05,800 --> 00:24:12,159
place you see here it's code base and

502
00:24:07,780 --> 00:24:14,290
here<font color="#CCCCCC"> it's its lattice base and you can</font>

503
00:24:12,160 --> 00:24:17,340
see that<font color="#E5E5E5"> for his you have different</font>

504
00:24:14,290 --> 00:24:22,360
<font color="#CCCCCC">trade-offs</font><font color="#E5E5E5"> between my communication or</font>

505
00:24:17,340 --> 00:24:26,169
timing<font color="#E5E5E5"> here so what about our skin so I</font>

506
00:24:22,360 --> 00:24:29,189
just put the skin directly or

507
00:24:26,170 --> 00:24:31,600
implementation directly in this project

508
00:24:29,190 --> 00:24:34,900
when I compare we have really similar

509
00:24:31,600 --> 00:24:38,050
timing to new hope right now the only

510
00:24:34,900 --> 00:24:40,690
difference is at the end the capsulation

511
00:24:38,050 --> 00:24:43,480
is<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little more work because we</font>

512
00:24:40,690 --> 00:24:45,610
re encrypting in order to verify so if

513
00:24:43,480 --> 00:24:48,420
<font color="#E5E5E5">this is a little more costly but the</font>

514
00:24:45,610 --> 00:24:50,590
very nice thing is actually we have the

515
00:24:48,420 --> 00:24:52,420
communication requirement compared<font color="#E5E5E5"> to</font>

516
00:24:50,590 --> 00:24:54,909
new hope so it's<font color="#CCCCCC"> actually two times</font>

517
00:24:52,420 --> 00:24:57,190
smaller and the reason<font color="#CCCCCC"> is that yes we're</font>

518
00:24:54,910 --> 00:24:59,490
using at the<font color="#CCCCCC"> end we're transmitting</font>

519
00:24:57,190 --> 00:25:03,880
something and it's it's it's really

520
00:24:59,490 --> 00:25:06,760
encrypting 2056 days and you will you

521
00:25:03,880 --> 00:25:08,620
losing a lot of compression so here just

522
00:25:06,760 --> 00:25:11,500
a<font color="#E5E5E5"> comment about security so there is</font>

523
00:25:08,620 --> 00:25:15,219
this discussion about security as<font color="#CCCCCC"> rena</font>

524
00:25:11,500 --> 00:25:19,750
<font color="#CCCCCC">just eldest thought before this does not</font>

525
00:25:15,220 --> 00:25:24,310
<font color="#E5E5E5">mean that there is an attack in exactly</font>

526
00:25:19,750 --> 00:25:27,429
this number of operation over the skins

527
00:25:24,310 --> 00:25:29,560
what happens is that these are security

528
00:25:27,429 --> 00:25:32,559
estimates where you apply the known

529
00:25:29,560 --> 00:25:34,780
classical and non quantum algorithm and

530
00:25:32,559 --> 00:25:36,550
they are<font color="#CCCCCC"> actually really complicated so</font>

531
00:25:34,780 --> 00:25:38,678
you take this like one<font color="#CCCCCC"> of the smaller</font>

532
00:25:36,550 --> 00:25:40,389
cinnamon that is really hard in that and

533
00:25:38,679 --> 00:25:43,150
you<font color="#CCCCCC"> say ok let's assess the</font><font color="#E5E5E5"> security of</font>

534
00:25:40,390 --> 00:25:45,940
that and in them and the security of

535
00:25:43,150 --> 00:25:48,520
this is the best algorithm that we know

536
00:25:45,940 --> 00:25:51,190
today they<font color="#CCCCCC"> can reach that but actually</font>

537
00:25:48,520 --> 00:25:55,460
this is really pessimistic so in a<font color="#CCCCCC"> sense</font>

538
00:25:51,190 --> 00:25:57,890
that if we really<font color="#E5E5E5"> have we want to have</font>

539
00:25:55,460 --> 00:26:02,809
the security number of cycle it would be

540
00:25:57,890 --> 00:26:04,760
much much more<font color="#CCCCCC"> than that so one nice</font>

541
00:26:02,809 --> 00:26:06,440
thing is that for this project for this

542
00:26:04,760 --> 00:26:09,320
open content safe is that you can do

543
00:26:06,440 --> 00:26:11,750
pull<font color="#CCCCCC"> requests and really I hope a lot of</font>

544
00:26:09,320 --> 00:26:14,240
you will contribute to that which is<font color="#CCCCCC"> a</font>

545
00:26:11,750 --> 00:26:16,640
relaxing and order to compare<font color="#E5E5E5"> you can</font>

546
00:26:14,240 --> 00:26:18,620
just do a wrap around your

547
00:26:16,640 --> 00:26:22,220
implementation and it will work right

548
00:26:18,620 --> 00:26:24,529
away so as soon as we put the code out i

549
00:26:22,220 --> 00:26:27,919
<font color="#E5E5E5">will do a pull request on this open</font>

550
00:26:24,529 --> 00:26:31,039
<font color="#CCCCCC">quantum side project so to conclude</font>

551
00:26:27,919 --> 00:26:34,039
we're using module lattices because we

552
00:26:31,039 --> 00:26:35,570
are modular and we really<font color="#E5E5E5"> focus on</font>

553
00:26:34,039 --> 00:26:39,379
easiness of implementation and

554
00:26:35,570 --> 00:26:43,129
simplicity so khyber is a key

555
00:26:39,380 --> 00:26:46,789
encapsulation mechanism that is nearly

556
00:26:43,130 --> 00:26:50,210
as fast as new hope and is housing<font color="#E5E5E5"> the</font>

557
00:26:46,789 --> 00:26:52,279
communication and also we want CCA

558
00:26:50,210 --> 00:26:54,620
security by default so it means<font color="#E5E5E5"> it can</font>

559
00:26:52,279 --> 00:26:57,620
actually be used in more cases than you

560
00:26:54,620 --> 00:27:02,689
hope<font color="#CCCCCC"> so it can be using a temp gig HDD a</font>

561
00:26:57,620 --> 00:27:06,199
change in key MGM or<font color="#E5E5E5"> also</font><font color="#CCCCCC"> in a long term</font>

562
00:27:02,690 --> 00:27:10,730
keys unknown terms so there can be some

563
00:27:06,200 --> 00:27:13,520
key<font color="#E5E5E5"> reuse also we have this signature so</font>

564
00:27:10,730 --> 00:27:16,100
it will come a little after so the<font color="#CCCCCC"> idea</font>

565
00:27:13,520 --> 00:27:18,830
here is we want<font color="#E5E5E5"> to try to avoid</font>

566
00:27:16,100 --> 00:27:23,600
complexity so let's take<font color="#E5E5E5"> the same</font>

567
00:27:18,830 --> 00:27:25,490
modules and let's face it let's let's

568
00:27:23,600 --> 00:27:26,959
<font color="#E5E5E5">take those same elements and let's try</font>

569
00:27:25,490 --> 00:27:29,779
<font color="#E5E5E5">to build something</font><font color="#CCCCCC"> that is similar with</font>

570
00:27:26,960 --> 00:27:32,299
uniform noise and things like that<font color="#E5E5E5"> so</font>

571
00:27:29,779 --> 00:27:35,000
just to just a better conclusion in

572
00:27:32,299 --> 00:27:37,250
order to not take a shot for the<font color="#E5E5E5"> for the</font>

573
00:27:35,000 --> 00:27:39,500
quick lighting session we have some

574
00:27:37,250 --> 00:27:44,830
internships with the people<font color="#E5E5E5"> in our group</font>

575
00:27:39,500 --> 00:27:44,830
so please feel free to contact us thank

576
00:27:50,320 --> 00:27:54,050
wait very nice I guess we have time for

577
00:27:52,460 --> 00:28:01,070
one or two questions and then we have a

578
00:27:54,050 --> 00:28:08,300
break<font color="#E5E5E5"> okay you go to slice three or four</font>

579
00:28:01,070 --> 00:28:10,820
I<font color="#CCCCCC"> think on the key changes please this</font>

580
00:28:08,300 --> 00:28:13,550
one the next one with all the kick is it

581
00:28:10,820 --> 00:28:16,669
this one is the one before please ok so

582
00:28:13,550 --> 00:28:19,040
here you you mention the paper<font color="#CCCCCC"> gin</font>

583
00:28:16,670 --> 00:28:20,510
tiding here and what does that<font color="#E5E5E5"> have to</font>

584
00:28:19,040 --> 00:28:25,909
do with<font color="#CCCCCC"> all this key exchange can you</font>

585
00:28:20,510 --> 00:28:28,160
<font color="#E5E5E5">explain what so this so in this paper</font>

586
00:28:25,910 --> 00:28:30,350
there it's actually a<font color="#E5E5E5"> cake changed in</font>

587
00:28:28,160 --> 00:28:33,650
where they're sticking a little but

588
00:28:30,350 --> 00:28:36,830
reconciliation so I wanted to<font color="#CCCCCC"> explain</font>

589
00:28:33,650 --> 00:28:39,050
that this reconciliation is actually a

590
00:28:36,830 --> 00:28:40,790
describer little here described a little

591
00:28:39,050 --> 00:28:43,159
here it's also described a little in the

592
00:28:40,790 --> 00:28:45,290
New Hope paper so it's actually a bacon

593
00:28:43,160 --> 00:28:47,390
but here i disagree i think this new

594
00:28:45,290 --> 00:28:50,149
country continent Agnes infant by me

595
00:28:47,390 --> 00:28:52,490
which is Jim tidying in 2011 I don't

596
00:28:50,150 --> 00:28:55,430
<font color="#E5E5E5">think the event and click the title pip</font>

597
00:28:52,490 --> 00:28:59,720
is much later than mine yeah I found 14

598
00:28:55,430 --> 00:29:01,430
it's later yes true yet so so in my

599
00:28:59,720 --> 00:29:05,090
opinion does all those kicks changes

600
00:29:01,430 --> 00:29:07,480
here are<font color="#CCCCCC"> variants out what</font><font color="#E5E5E5"> I did</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I</font>

601
00:29:05,090 --> 00:29:11,689
just wanted to show you something<font color="#E5E5E5"> else</font>

602
00:29:07,480 --> 00:29:13,580
here like this Kim here that is like the

603
00:29:11,690 --> 00:29:15,350
encryption scheme that will<font color="#CCCCCC"> be used on</font>

604
00:29:13,580 --> 00:29:18,050
this running with her I'm referring<font color="#E5E5E5"> a</font>

605
00:29:15,350 --> 00:29:19,699
lot of papers not not only the first<font color="#E5E5E5"> one</font>

606
00:29:18,050 --> 00:29:21,980
<font color="#E5E5E5">and the reason i'm not talking about</font>

607
00:29:19,700 --> 00:29:23,420
know about you are using i'm running

608
00:29:21,980 --> 00:29:25,250
it's a good comment i'm<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> you know</font>

609
00:29:23,420 --> 00:29:29,560
you're<font color="#E5E5E5"> gonna take it</font><font color="#CCCCCC"> on into account</font>

610
00:29:25,250 --> 00:29:29,560
yeah thanks for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> link on</font><font color="#CCCCCC"> ok thank you</font>

611
00:29:31,240 --> 00:29:38,450
so just small things so the servers now

612
00:29:35,630 --> 00:29:41,090
generating the seat degenerate generate

613
00:29:38,450 --> 00:29:42,830
a yes and conceivably they could be

614
00:29:41,090 --> 00:29:46,550
compelled to<font color="#CCCCCC"> use particular a or</font>

615
00:29:42,830 --> 00:29:49,280
something so is it is it not is is there

616
00:29:46,550 --> 00:29:53,210
a reason that when you generate the a

617
00:29:49,280 --> 00:29:57,770
generate the the a matrix from from this

618
00:29:53,210 --> 00:29:58,640
seed that it's it's hard to find one

619
00:29:57,770 --> 00:30:00,379
that the product

620
00:29:58,640 --> 00:30:02,270
to that work that can be written as a

621
00:30:00,380 --> 00:30:04,520
product of two smaller things there was

622
00:30:02,270 --> 00:30:07,250
some attack in there so so we're fitting

623
00:30:04,520 --> 00:30:09,740
that in two shakes right and<font color="#CCCCCC"> Shake is</font>

624
00:30:07,250 --> 00:30:11,540
expanding and this is and<font color="#CCCCCC"> actually if</font>

625
00:30:09,740 --> 00:30:13,700
you believe in the security of shake it

626
00:30:11,540 --> 00:30:16,639
will be really ought to to make it so

627
00:30:13,700 --> 00:30:17,990
that<font color="#CCCCCC"> it's the</font><font color="#E5E5E5"> product to its nothing to</font>

628
00:30:16,640 --> 00:30:20,030
do with shake the question is<font color="#E5E5E5"> just about</font>

629
00:30:17,990 --> 00:30:21,440
properties it's a much<font color="#CCCCCC"> more basic</font>

630
00:30:20,030 --> 00:30:24,800
question just about the properties of

631
00:30:21,440 --> 00:30:26,510
these matrices a that<font color="#E5E5E5"> that four to one</font>

632
00:30:24,800 --> 00:30:28,250
of these matrices be written as a

633
00:30:26,510 --> 00:30:31,790
product of two smaller relatives with

634
00:30:28,250 --> 00:30:35,300
smaller things is unlikely yes yes okay

635
00:30:31,790 --> 00:30:37,730
I have a question about the computation

636
00:30:35,300 --> 00:30:41,450
of your<font color="#E5E5E5"> security estimates a very last</font>

637
00:30:37,730 --> 00:30:44,870
slide for a second last slide um when

638
00:30:41,450 --> 00:30:48,410
you so the number we're looking at there

639
00:30:44,870 --> 00:30:51,860
<font color="#CCCCCC">is that</font><font color="#E5E5E5"> the estimated cost in terms of</font>

640
00:30:48,410 --> 00:30:55,940
an SVP problem of some dimensions yes

641
00:30:51,860 --> 00:30:58,729
how do you compare ring lwe to lwe in

642
00:30:55,940 --> 00:31:00,620
particular how do you take<font color="#E5E5E5"> into account</font>

643
00:30:58,730 --> 00:31:07,010
this<font color="#CCCCCC"> but are you really</font><font color="#E5E5E5"> sick atomic ring</font>

644
00:31:00,620 --> 00:31:11,270
instead of a more general ring<font color="#E5E5E5"> okay so</font>

645
00:31:07,010 --> 00:31:15,200
<font color="#E5E5E5">what we're so okay what's what we're</font>

646
00:31:11,270 --> 00:31:19,010
doing actually here so it's in order to

647
00:31:15,200 --> 00:31:22,310
attack this ring lwe your option coming

648
00:31:19,010 --> 00:31:25,400
back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> full matrix and you're like</font>

649
00:31:22,310 --> 00:31:28,010
looking at reducing it and you're

650
00:31:25,400 --> 00:31:31,850
looking<font color="#E5E5E5"> at small vectors and this and</font>

651
00:31:28,010 --> 00:31:33,830
this matrix so here it means that you're

652
00:31:31,850 --> 00:31:36,290
actually expanding this ring all w/e

653
00:31:33,830 --> 00:31:37,939
into the bigger matrix right and module

654
00:31:36,290 --> 00:31:39,649
is ability<font color="#E5E5E5"> also expanding in the bigger</font>

655
00:31:37,940 --> 00:31:41,600
matrix and you're<font color="#CCCCCC"> looking at this and</font>

656
00:31:39,650 --> 00:31:44,720
you're trying to<font color="#E5E5E5"> reduce it in your</font><font color="#CCCCCC"> plane</font>

657
00:31:41,600 --> 00:31:47,030
bkz in a<font color="#E5E5E5"> dimension be in orders for the</font>

658
00:31:44,720 --> 00:31:50,570
attack to succeed we need at least this

659
00:31:47,030 --> 00:31:52,639
block size and the the<font color="#CCCCCC"> SDP in this block</font>

660
00:31:50,570 --> 00:31:55,970
size that is a smaller operation that

661
00:31:52,640 --> 00:31:58,700
will need to do is actually giving this

662
00:31:55,970 --> 00:32:01,010
coast but<font color="#E5E5E5"> you need to do much more</font><font color="#CCCCCC"> svt</font>

663
00:31:58,700 --> 00:32:02,350
and then you do you do it you to save

664
00:32:01,010 --> 00:32:05,080
round and you do it

665
00:32:02,350 --> 00:32:07,750
on and this<font color="#E5E5E5"> is like the smaller</font>

666
00:32:05,080 --> 00:32:10,240
dimension possible but actually these

667
00:32:07,750 --> 00:32:13,480
dimensions are huge and<font color="#E5E5E5"> the reason is</font>

668
00:32:10,240 --> 00:32:16,000
that in these skins most of the time the

669
00:32:13,480 --> 00:32:17,830
lattice are already quite reduced and if

670
00:32:16,000 --> 00:32:20,919
you want<font color="#E5E5E5"> to reduce the more you actually</font>

671
00:32:17,830 --> 00:32:24,340
have to<font color="#CCCCCC"> work a lot just looking at the</font>

672
00:32:20,919 --> 00:32:26,380
busy as we are a smaller box up to the

673
00:32:24,340 --> 00:32:30,340
personality algorithms in each one<font color="#CCCCCC"> of</font>

674
00:32:26,380 --> 00:32:32,380
the cases have to make that<font color="#CCCCCC"> human in the</font>

675
00:32:30,340 --> 00:32:33,879
module darshan no<font color="#E5E5E5"> I mean that they got</font>

676
00:32:32,380 --> 00:32:39,610
those numbers there for the<font color="#E5E5E5"> security in</font>

677
00:32:33,880 --> 00:32:42,760
<font color="#E5E5E5">this it's it's a SVP over the matrix hi</font>

678
00:32:39,610 --> 00:32:44,949
I just<font color="#E5E5E5"> wanted to say the obvious which</font>

679
00:32:42,760 --> 00:32:46,750
is that we<font color="#CCCCCC"> are interested</font><font color="#E5E5E5"> in these</font>

680
00:32:44,950 --> 00:32:51,400
schemes for things that need to be

681
00:32:46,750 --> 00:32:54,070
secure in 20-30 years so the security

682
00:32:51,400 --> 00:32:56,500
<font color="#CCCCCC">estimate should consider security in</font>

683
00:32:54,070 --> 00:32:59,950
20-30 years which of course we have no

684
00:32:56,500 --> 00:33:02,409
idea<font color="#E5E5E5"> by definitely</font><font color="#CCCCCC"> this was probably out</font>

685
00:32:59,950 --> 00:33:05,340
to non conservative right I actually

686
00:33:02,409 --> 00:33:09,909
<font color="#E5E5E5">think they're conservatives in exam four</font>

687
00:33:05,340 --> 00:33:13,510
yes in this so the one will claim in the

688
00:33:09,909 --> 00:33:16,270
full version will be conservative the

689
00:33:13,510 --> 00:33:18,908
the<font color="#CCCCCC"> reason is that will consider the</font>

690
00:33:16,270 --> 00:33:21,190
best things then will be<font color="#CCCCCC"> will be like</font>

691
00:33:18,909 --> 00:33:23,830
this<font color="#E5E5E5"> is now the best plausible attack</font>

692
00:33:21,190 --> 00:33:27,429
and this attack is actually a really

693
00:33:23,830 --> 00:33:28,870
small element of a much larger attack

694
00:33:27,429 --> 00:33:33,210
that you will<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to perform so it mean</font>

695
00:33:28,870 --> 00:33:36,340
<font color="#CCCCCC">you actually gained nearly 40 bits of</font>

696
00:33:33,210 --> 00:33:39,370
like<font color="#E5E5E5"> doing all the</font><font color="#CCCCCC"> sgts that you need in</font>

697
00:33:36,340 --> 00:33:41,889
order to reduce them into the<font color="#CCCCCC"> last but</font><font color="#E5E5E5"> I</font>

698
00:33:39,370 --> 00:33:44,580
agree that<font color="#E5E5E5"> will need a conservative</font>

699
00:33:41,890 --> 00:33:44,580
estimate here

