1
00:00:00,000 --> 00:00:06,000
so you're all expecting a talk at the

2
00:00:03,440 --> 00:00:08,340
quantum session but that's already

3
00:00:06,000 --> 00:00:10,530
announced this will not have much to do

4
00:00:08,340 --> 00:00:12,719
with quantum or post quantum

5
00:00:10,530 --> 00:00:16,350
cryptography but if you want<font color="#E5E5E5"> to be a bit</font>

6
00:00:12,719 --> 00:00:18,539
in<font color="#CCCCCC"> stayin in</font><font color="#E5E5E5"> in that area I will try to</font>

7
00:00:16,350 --> 00:00:21,420
<font color="#E5E5E5">explain what white box crypto is it's</font>

8
00:00:18,539 --> 00:00:24,029
<font color="#E5E5E5">related to secure software and try to</font>

9
00:00:21,420 --> 00:00:25,410
think because not many people have

10
00:00:24,029 --> 00:00:29,250
looked actually into this how we can

11
00:00:25,410 --> 00:00:30,599
turn the post quantum crypto into white

12
00:00:29,250 --> 00:00:33,960
box solutions and that would be a

13
00:00:30,599 --> 00:00:37,020
fantastic research area<font color="#CCCCCC"> all right so</font>

14
00:00:33,960 --> 00:00:40,050
this talk is based on work which also

15
00:00:37,020 --> 00:00:44,040
they're the only feels and Phil server

16
00:00:40,050 --> 00:00:46,199
all at nxp at the time we worked<font color="#E5E5E5"> on this</font>

17
00:00:44,040 --> 00:00:50,670
and<font color="#E5E5E5"> currently both Charles</font><font color="#CCCCCC"> and co are</font><font color="#E5E5E5"> at</font>

18
00:00:46,200 --> 00:00:54,750
sparks left and our paper was already

19
00:00:50,670 --> 00:00:57,899
presented this summer at chess so what

20
00:00:54,750 --> 00:00:59,640
is<font color="#E5E5E5"> white box crypto so in order to</font>

21
00:00:57,899 --> 00:01:01,770
understand this let<font color="#CCCCCC"> me try to</font><font color="#E5E5E5"> get an</font>

22
00:00:59,640 --> 00:01:05,129
overview when we talk about crypto we

23
00:01:01,770 --> 00:01:07,770
often talk about you need to understand

24
00:01:05,129 --> 00:01:10,409
who is the attacker where is this

25
00:01:07,770 --> 00:01:12,420
adversary is it internal is it external

26
00:01:10,409 --> 00:01:16,409
when you think of internal it can be the

27
00:01:12,420 --> 00:01:18,780
user it can be a virus and what is

28
00:01:16,409 --> 00:01:22,650
realistic for your particular use case

29
00:01:18,780 --> 00:01:26,400
so the old way of thinking about this is

30
00:01:22,650 --> 00:01:29,189
<font color="#E5E5E5">the black box model so you assume that</font>

31
00:01:26,400 --> 00:01:30,720
<font color="#CCCCCC">the</font><font color="#E5E5E5"> endpoint are trusted parties and the</font>

32
00:01:29,189 --> 00:01:33,419
attacker observed data being transferred

33
00:01:30,720 --> 00:01:37,979
<font color="#E5E5E5">so this is from the let me call the 80s</font>

34
00:01:33,420 --> 00:01:40,200
and then in the in the 90s there was

35
00:01:37,979 --> 00:01:42,479
this new model which people refer to as

36
00:01:40,200 --> 00:01:44,790
<font color="#E5E5E5">the gray box model it's related to</font>

37
00:01:42,479 --> 00:01:46,890
<font color="#CCCCCC">Hardware implementations and imagine you</font>

38
00:01:44,790 --> 00:01:48,960
have a smart card for instance<font color="#E5E5E5"> which</font>

39
00:01:46,890 --> 00:01:53,250
your crypto algorithm running on it

40
00:01:48,960 --> 00:01:55,169
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> shown</font><font color="#CCCCCC"> that if you measure for</font>

41
00:01:53,250 --> 00:01:57,350
instance<font color="#E5E5E5"> the power or other external</font>

42
00:01:55,170 --> 00:02:00,649
information meta information about this

43
00:01:57,350 --> 00:02:03,149
implementation while<font color="#E5E5E5"> they're running</font>

44
00:02:00,649 --> 00:02:06,540
yeah you can use this information to

45
00:02:03,149 --> 00:02:08,068
extract the private key material used

46
00:02:06,540 --> 00:02:09,319
during<font color="#E5E5E5"> the execution of the scripts</font>

47
00:02:08,068 --> 00:02:11,839
graphic algorithm

48
00:02:09,318 --> 00:02:14,599
so then we come<font color="#CCCCCC"> to the white box model</font>

49
00:02:11,840 --> 00:02:16,159
which is related to the<font color="#E5E5E5"> gray box model</font>

50
00:02:14,599 --> 00:02:19,849
what is not related<font color="#E5E5E5"> to hardware is</font>

51
00:02:16,159 --> 00:02:21,888
related to software execution so now<font color="#CCCCCC"> for</font>

52
00:02:19,849 --> 00:02:24,108
instance think about a cryptographic

53
00:02:21,889 --> 00:02:26,750
algorithm running on<font color="#CCCCCC"> a device you own</font>

54
00:02:24,109 --> 00:02:29,139
but it's implemented in software so easy

55
00:02:26,750 --> 00:02:32,810
example for<font color="#CCCCCC"> instance is in mobile device</font>

56
00:02:29,139 --> 00:02:34,670
and again we assume that<font color="#E5E5E5"> adversary can</font>

57
00:02:32,810 --> 00:02:36,560
be the owner of<font color="#E5E5E5"> that device so it can</font>

58
00:02:34,670 --> 00:02:40,159
even be the user<font color="#E5E5E5"> of the device and still</font>

59
00:02:36,560 --> 00:02:43,159
we want to protect<font color="#CCCCCC"> the price key from</font>

60
00:02:40,159 --> 00:02:45,409
being extracted even by the user<font color="#E5E5E5"> running</font>

61
00:02:43,159 --> 00:02:48,698
that descriptive graphic implementation

62
00:02:45,409 --> 00:02:52,459
so and<font color="#E5E5E5"> this setting where you want to</font>

63
00:02:48,699 --> 00:02:54,349
among other things ensure that<font color="#E5E5E5"> the the</font>

64
00:02:52,459 --> 00:02:55,909
cryptographic key cannot be extracted

65
00:02:54,349 --> 00:02:58,069
from<font color="#E5E5E5"> the software implementation is</font>

66
00:02:55,909 --> 00:03:02,149
referred to as the the white box attack

67
00:02:58,069 --> 00:03:03,909
model so why are we<font color="#E5E5E5"> interested in this</font>

68
00:03:02,150 --> 00:03:07,189
white box attack model who is actually

69
00:03:03,909 --> 00:03:10,399
<font color="#E5E5E5">using this so this was originally</font>

70
00:03:07,189 --> 00:03:13,879
<font color="#E5E5E5">proposed early 2000s in</font><font color="#CCCCCC"> a setting of</font>

71
00:03:10,400 --> 00:03:17,299
digital rights management and take care

72
00:03:13,879 --> 00:03:20,000
of streaming content from somewhere for

73
00:03:17,299 --> 00:03:24,049
instance to it to your<font color="#CCCCCC"> setup box</font><font color="#E5E5E5"> and</font>

74
00:03:20,000 --> 00:03:26,000
then the the party who is streaming the

75
00:03:24,049 --> 00:03:28,609
movie to you does not<font color="#E5E5E5"> want you to</font><font color="#CCCCCC"> have</font>

76
00:03:26,000 --> 00:03:30,769
the key which can decode this movie

77
00:03:28,609 --> 00:03:32,030
because then you might<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to get</font>

78
00:03:30,769 --> 00:03:35,569
this<font color="#E5E5E5"> key to a friends and then he can</font>

79
00:03:32,030 --> 00:03:38,780
watch this movie as well then there was

80
00:03:35,569 --> 00:03:41,869
<font color="#E5E5E5">more or less a decade not too much</font>

81
00:03:38,780 --> 00:03:46,069
attention<font color="#CCCCCC"> to white box crypto until a</font>

82
00:03:41,870 --> 00:03:48,500
couple years back when it was a renewed

83
00:03:46,069 --> 00:03:51,259
interest in this technology<font color="#E5E5E5"> really after</font>

84
00:03:48,500 --> 00:03:54,620
<font color="#CCCCCC">the introduction of HTE so</font><font color="#E5E5E5"> hez stands</font>

85
00:03:51,259 --> 00:03:57,439
for host card emulation and ID behind

86
00:03:54,620 --> 00:04:01,150
this is that<font color="#CCCCCC"> it emulates and software</font>

87
00:03:57,439 --> 00:04:04,489
your NFC or near field communication and

88
00:04:01,150 --> 00:04:07,489
the<font color="#E5E5E5"> idea is that it replaces the secure</font>

89
00:04:04,489 --> 00:04:11,209
element or it emulates the secure

90
00:04:07,489 --> 00:04:13,069
element in software and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> for</font>

91
00:04:11,209 --> 00:04:17,209
<font color="#CCCCCC">instance in practice use that you can</font>

92
00:04:13,069 --> 00:04:19,320
pay with your mobile<font color="#CCCCCC"> phone or take a</font>

93
00:04:17,209 --> 00:04:21,488
train or any other transit

94
00:04:19,320 --> 00:04:23,320
and in practice how is this

95
00:04:21,488 --> 00:04:25,419
cryptographic key in this implementation

96
00:04:23,320 --> 00:04:27,460
then protected because why do you want

97
00:04:25,419 --> 00:04:29,049
<font color="#E5E5E5">to protect this you don't if the user</font>

98
00:04:27,460 --> 00:04:30,849
would have this cryptographic key it

99
00:04:29,050 --> 00:04:34,030
good for instance to a rollback attack

100
00:04:30,850 --> 00:04:37,240
which means I pay my fare for my train<font color="#E5E5E5"> I</font>

101
00:04:34,030 --> 00:04:39,489
struck the key and I<font color="#E5E5E5"> just upgrade to any</font>

102
00:04:37,240 --> 00:04:43,449
other amount i have or I roll back to my

103
00:04:39,490 --> 00:04:45,850
the data i<font color="#E5E5E5"> had and then i have the the</font>

104
00:04:43,449 --> 00:04:48,490
previous<font color="#E5E5E5"> fair and i actually didn't pay</font>

105
00:04:45,850 --> 00:04:52,270
at all and how this is done in practice

106
00:04:48,490 --> 00:04:54,910
is with this what then you<font color="#CCCCCC"> are in</font><font color="#E5E5E5"> this</font>

107
00:04:52,270 --> 00:04:57,008
<font color="#E5E5E5">white box attack model and if you have a</font>

108
00:04:54,910 --> 00:04:59,289
cryptographic implementations secure in

109
00:04:57,009 --> 00:05:04,660
this<font color="#E5E5E5"> model people call this white box</font>

110
00:04:59,289 --> 00:05:06,400
implementation and we see an increasing

111
00:05:04,660 --> 00:05:12,840
and increasing demand of this in

112
00:05:06,400 --> 00:05:16,359
practice so in 2014 fees are MasterCard

113
00:05:12,840 --> 00:05:19,479
announced<font color="#E5E5E5"> their support for host card</font>

114
00:05:16,360 --> 00:05:21,130
emulation and in these payment protocols

115
00:05:19,479 --> 00:05:23,740
if you implement them in software it<font color="#CCCCCC"> is</font>

116
00:05:21,130 --> 00:05:26,159
a requirement<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> either protected</font>

117
00:05:23,740 --> 00:05:29,889
<font color="#E5E5E5">with white box cryptography and</font>

118
00:05:26,159 --> 00:05:33,010
according<font color="#E5E5E5"> to</font><font color="#CCCCCC"> these studies we will only</font>

119
00:05:29,889 --> 00:05:34,659
see an increase of these<font color="#CCCCCC"> HTE solutions</font>

120
00:05:33,010 --> 00:05:36,969
in practice and phones and other mobile

121
00:05:34,659 --> 00:05:40,120
devices which actually support this

122
00:05:36,970 --> 00:05:43,570
technology so in practice what do they

123
00:05:40,120 --> 00:05:45,820
actually<font color="#E5E5E5"> protect</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> mainly symmetric</font>

124
00:05:43,570 --> 00:05:48,520
crypto so we're talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> AES and</font>

125
00:05:45,820 --> 00:05:50,590
Triple DES and how these keys are really

126
00:05:48,520 --> 00:05:54,400
protected already in practice if you

127
00:05:50,590 --> 00:05:56,619
have a<font color="#E5E5E5"> mobile phone for instance not</font>

128
00:05:54,400 --> 00:05:58,630
<font color="#E5E5E5">only payments but also your the apps</font>

129
00:05:56,620 --> 00:06:01,720
which are allowed to install from your

130
00:05:58,630 --> 00:06:03,639
Play Store<font color="#CCCCCC"> or any other app store you</font>

131
00:06:01,720 --> 00:06:05,409
<font color="#E5E5E5">have on your phone and it's very likely</font>

132
00:06:03,639 --> 00:06:10,570
that this is protected<font color="#CCCCCC"> with white box</font>

133
00:06:05,409 --> 00:06:12,490
cryptography so when you think<font color="#CCCCCC"> about</font>

134
00:06:10,570 --> 00:06:14,169
<font color="#E5E5E5">this how would you actually try and</font>

135
00:06:12,490 --> 00:06:18,210
<font color="#E5E5E5">solve this problem what should we think</font>

136
00:06:14,169 --> 00:06:20,409
about why do normal security

137
00:06:18,210 --> 00:06:23,320
cryptographic implementations in so far

138
00:06:20,409 --> 00:06:25,719
not work because it was<font color="#E5E5E5"> already shown</font>

139
00:06:23,320 --> 00:06:28,389
actually before the invention or

140
00:06:25,720 --> 00:06:30,279
introduction<font color="#E5E5E5"> of white box crypto by</font>

141
00:06:28,389 --> 00:06:32,620
<font color="#CCCCCC">sameer</font><font color="#E5E5E5"> from somewhere that if you just</font>

142
00:06:30,279 --> 00:06:35,110
load your crypto key into memory and you

143
00:06:32,620 --> 00:06:36,930
would just scan your memory and look at

144
00:06:35,110 --> 00:06:39,340
the location with<font color="#CCCCCC"> the highest entropy</font>

145
00:06:36,930 --> 00:06:43,419
that with very<font color="#E5E5E5"> high probability this is</font>

146
00:06:39,340 --> 00:06:44,919
the location of your particular key and

147
00:06:43,419 --> 00:06:47,740
then<font color="#E5E5E5"> you can just dump it extract it and</font>

148
00:06:44,919 --> 00:06:51,490
then you have extracted the key another

149
00:06:47,740 --> 00:06:55,180
easy way how to extract the key<font color="#E5E5E5"> it's</font>

150
00:06:51,490 --> 00:06:58,540
with technical<font color="#E5E5E5"> sbox blanking attack so</font>

151
00:06:55,180 --> 00:07:01,210
you<font color="#E5E5E5"> just have</font><font color="#CCCCCC"> your implementation of for</font>

152
00:06:58,540 --> 00:07:03,820
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> AES you just replace desk box</font>

153
00:07:01,210 --> 00:07:06,430
with all zeros and then<font color="#CCCCCC"> the cat X</font>

154
00:07:03,820 --> 00:07:08,889
ordaining you just the implementation

155
00:07:06,430 --> 00:07:14,380
outputs the<font color="#E5E5E5"> key so</font><font color="#CCCCCC"> we need</font><font color="#E5E5E5"> something</font>

156
00:07:08,889 --> 00:07:17,070
more advanced so then of course the

157
00:07:14,380 --> 00:07:20,590
question<font color="#E5E5E5"> arises is a white box</font>

158
00:07:17,070 --> 00:07:23,349
implementation even possible the answer

159
00:07:20,590 --> 00:07:25,960
of course is no<font color="#E5E5E5"> because if you want to</font>

160
00:07:23,350 --> 00:07:27,760
build an ideal white box is

161
00:07:25,960 --> 00:07:30,760
implementation<font color="#E5E5E5"> you could just create one</font>

162
00:07:27,760 --> 00:07:33,310
day lookup table for one specific six

163
00:07:30,760 --> 00:07:36,460
key but this will<font color="#CCCCCC"> not be very practical</font>

164
00:07:33,310 --> 00:07:41,860
bisque even modern mobile phones don't

165
00:07:36,460 --> 00:07:44,049
have this<font color="#CCCCCC"> much storage in practice what</font>

166
00:07:41,860 --> 00:07:46,960
people propose so in the original paper

167
00:07:44,050 --> 00:07:50,039
in 2002 by Chow and others they propose

168
00:07:46,960 --> 00:07:52,690
the technique where you replace every

169
00:07:50,039 --> 00:07:56,979
algorithmic step in the algorithm<font color="#E5E5E5"> in</font>

170
00:07:52,690 --> 00:07:59,620
this case AES with a lookup table and

171
00:07:56,979 --> 00:08:01,659
then<font color="#CCCCCC"> you're the goal is that you</font><font color="#E5E5E5"> put you</font>

172
00:07:59,620 --> 00:08:04,570
try to obfuscate these look-up tables by

173
00:08:01,660 --> 00:08:07,060
putting input and output and coatings<font color="#E5E5E5"> on</font>

174
00:08:04,570 --> 00:08:09,909
calls to this lookup table so on the

175
00:08:07,060 --> 00:08:11,770
right here you<font color="#E5E5E5"> see a nice overview how</font>

176
00:08:09,910 --> 00:08:13,750
then the flow of the<font color="#E5E5E5"> algorithm would</font>

177
00:08:11,770 --> 00:08:16,539
look like and then<font color="#CCCCCC"> this</font><font color="#E5E5E5"> already gives</font>

178
00:08:13,750 --> 00:08:19,300
rise to much smaller implementation but

179
00:08:16,539 --> 00:08:21,520
still orders of magnitudes larger than

180
00:08:19,300 --> 00:08:22,870
the original<font color="#E5E5E5"> a s and their proposed</font>

181
00:08:21,520 --> 00:08:25,240
solution was around seven hundred

182
00:08:22,870 --> 00:08:27,639
kilobytes and it actually didn't compute

183
00:08:25,240 --> 00:08:30,190
anything here it was just a sequential

184
00:08:27,639 --> 00:08:32,320
series of table lookups in the hope

185
00:08:30,190 --> 00:08:34,299
where you it was fixed for one

186
00:08:32,320 --> 00:08:36,279
particular cryptographic key in the hope

187
00:08:34,299 --> 00:08:38,109
that the attacker is not able<font color="#E5E5E5"> to deduce</font>

188
00:08:36,279 --> 00:08:39,969
any information about the key actually

189
00:08:38,110 --> 00:08:42,300
used and partially store things look up

190
00:08:39,969 --> 00:08:42,300
tables

191
00:08:42,970 --> 00:08:49,150
in practice however so I've<font color="#CCCCCC"> been</font><font color="#E5E5E5"> the</font>

192
00:08:47,810 --> 00:08:53,000
remainder of<font color="#E5E5E5"> the talker will be</font>

193
00:08:49,150 --> 00:08:57,350
discussing how to extract the private

194
00:08:53,000 --> 00:08:59,090
key from a white box implementation but

195
00:08:57,350 --> 00:09:01,640
in practice you would use much more<font color="#E5E5E5"> than</font>

196
00:08:59,090 --> 00:09:04,340
just<font color="#E5E5E5"> like books and I just want</font><font color="#CCCCCC"> to tell</font>

197
00:09:01,640 --> 00:09:07,370
you to give you a bigger overview in

198
00:09:04,340 --> 00:09:08,990
practice people apply codification anti

199
00:09:07,370 --> 00:09:11,800
debugging just to make the lives of

200
00:09:08,990 --> 00:09:14,620
Decker more annoying and different

201
00:09:11,800 --> 00:09:17,990
platform binding techniques which all

202
00:09:14,620 --> 00:09:19,550
serve different purposes like I<font color="#E5E5E5"> said if</font>

203
00:09:17,990 --> 00:09:21,320
<font color="#E5E5E5">you want to have anti roll back</font>

204
00:09:19,550 --> 00:09:24,380
protection or something which<font color="#E5E5E5"> is called</font>

205
00:09:21,320 --> 00:09:26,210
code lifting you want to protect against

206
00:09:24,380 --> 00:09:27,680
these types of attacks as well<font color="#E5E5E5"> so code</font>

207
00:09:26,210 --> 00:09:30,860
listing for instance is the simple

208
00:09:27,680 --> 00:09:33,260
attack that you don't want to extract

209
00:09:30,860 --> 00:09:34,580
the price<font color="#CCCCCC"> team but you just copy because</font>

210
00:09:33,260 --> 00:09:36,560
<font color="#E5E5E5">it's software you just copy the entire</font>

211
00:09:34,580 --> 00:09:38,360
software solution putting on<font color="#E5E5E5"> another</font>

212
00:09:36,560 --> 00:09:40,219
phone for instance and if you then<font color="#E5E5E5"> run</font>

213
00:09:38,360 --> 00:09:41,810
your cryptographic algorithm you

214
00:09:40,220 --> 00:09:43,790
essentially have copied to the price key

215
00:09:41,810 --> 00:09:45,770
because it was embedded in there and you

216
00:09:43,790 --> 00:09:47,360
get the<font color="#E5E5E5"> same functionality so if you</font>

217
00:09:45,770 --> 00:09:48,680
want<font color="#CCCCCC"> to protect against these types of</font>

218
00:09:47,360 --> 00:09:50,600
attacks you meet other types of

219
00:09:48,680 --> 00:09:53,000
countermeasures I would I will be solely

220
00:09:50,600 --> 00:09:56,510
focusing on extracting the private key

221
00:09:53,000 --> 00:09:58,100
from the implementation and last year at

222
00:09:56,510 --> 00:10:01,010
your crypt was a really nice overview

223
00:09:58,100 --> 00:10:03,350
talk<font color="#CCCCCC"> by christian</font><font color="#E5E5E5"> Kohlberg about these</font>

224
00:10:01,010 --> 00:10:06,890
other techniques related to obfuscation

225
00:10:03,350 --> 00:10:08,840
and how attackers and people try to

226
00:10:06,890 --> 00:10:16,520
protect these things how that works in

227
00:10:08,840 --> 00:10:20,810
practice so oh it's good to state that

228
00:10:16,520 --> 00:10:23,960
all efforts in academia<font color="#E5E5E5"> to build white</font>

229
00:10:20,810 --> 00:10:26,689
box implementations have been broken<font color="#E5E5E5"> so</font>

230
00:10:23,960 --> 00:10:29,360
it's completely unknown how to build a

231
00:10:26,690 --> 00:10:31,760
secure white box implementation of for

232
00:10:29,360 --> 00:10:37,640
instance a<font color="#E5E5E5"> s of all the standardized</font>

233
00:10:31,760 --> 00:10:40,130
that approaches but<font color="#E5E5E5"> how do these attacks</font>

234
00:10:37,640 --> 00:10:41,689
work in practice so first of all they

235
00:10:40,130 --> 00:10:44,240
were very white book specific so you

236
00:10:41,690 --> 00:10:46,580
need<font color="#E5E5E5"> to know exactly what approach was</font>

237
00:10:44,240 --> 00:10:48,830
being implemented which n coatings were

238
00:10:46,580 --> 00:10:50,600
put on both tables which cipher

239
00:10:48,830 --> 00:10:53,510
operations were exactly implemented

240
00:10:50,600 --> 00:10:56,060
where and in which set of look-up tables

241
00:10:53,510 --> 00:10:56,630
and if you knew this and then you<font color="#E5E5E5"> could</font>

242
00:10:56,060 --> 00:10:58,219
reverse

243
00:10:56,630 --> 00:10:59,210
<font color="#CCCCCC">engineered code</font><font color="#E5E5E5"> because you could assume</font>

244
00:10:58,220 --> 00:11:02,510
<font color="#CCCCCC">that they would put</font><font color="#E5E5E5"> some code</font>

245
00:10:59,210 --> 00:11:05,750
obfuscation on top of<font color="#E5E5E5"> it target the</font>

246
00:11:02,510 --> 00:11:08,900
correct lookup table and then apply your

247
00:11:05,750 --> 00:11:12,830
algebraic attack and extract<font color="#E5E5E5"> the key so</font>

248
00:11:08,900 --> 00:11:16,819
we studied yeah we looked into<font color="#E5E5E5"> a way how</font>

249
00:11:12,830 --> 00:11:20,390
to make this a bit<font color="#CCCCCC"> easier so I will try</font>

250
00:11:16,820 --> 00:11:22,220
and explain briefly how we took the

251
00:11:20,390 --> 00:11:25,189
attacks from the<font color="#CCCCCC"> gray</font><font color="#E5E5E5"> box model so how</font>

252
00:11:22,220 --> 00:11:26,870
people attack<font color="#CCCCCC"> hardware implementations</font>

253
00:11:25,190 --> 00:11:28,730
and how that also applies<font color="#CCCCCC"> to this</font>

254
00:11:26,870 --> 00:11:32,750
setting of white box implementations and

255
00:11:28,730 --> 00:11:35,060
our attack works automatically it's<font color="#E5E5E5"> very</font>

256
00:11:32,750 --> 00:11:37,310
simple so see for instance we had the

257
00:11:35,060 --> 00:11:40,219
chess challenge this year so one of the

258
00:11:37,310 --> 00:11:41,680
challenges we created and was related to

259
00:11:40,220 --> 00:11:44,450
white box implementation and you could

260
00:11:41,680 --> 00:11:46,359
try our two tools which we released and

261
00:11:44,450 --> 00:11:49,700
see how it actually works in practice

262
00:11:46,360 --> 00:11:51,770
you didn't need any knowledge of how

263
00:11:49,700 --> 00:11:53,180
this was implemented<font color="#E5E5E5"> in practice the</font>

264
00:11:51,770 --> 00:11:55,310
only thing you need<font color="#E5E5E5"> to know is which</font>

265
00:11:53,180 --> 00:11:56,750
algorithm is implemented so you need to

266
00:11:55,310 --> 00:12:00,770
know in practice there only two choices

267
00:11:56,750 --> 00:12:03,560
<font color="#CCCCCC">is a des or SAS and then you can put as</font>

268
00:12:00,770 --> 00:12:08,780
much codification on top as you want we

269
00:12:03,560 --> 00:12:12,770
don't care it just ignores our attack so

270
00:12:08,780 --> 00:12:15,079
what's the<font color="#E5E5E5"> ID it's about tracing so</font>

271
00:12:12,770 --> 00:12:16,610
trading binary so when you look<font color="#E5E5E5"> at a</font>

272
00:12:15,080 --> 00:12:18,470
cadet vapors and academic approaches

273
00:12:16,610 --> 00:12:20,000
<font color="#E5E5E5">there are all nice and they're open</font>

274
00:12:18,470 --> 00:12:22,220
designs you know exactly<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> going on</font>

275
00:12:20,000 --> 00:12:24,650
but<font color="#CCCCCC"> in practice what are companies doing</font>

276
00:12:22,220 --> 00:12:27,170
they don't specify at all their

277
00:12:24,650 --> 00:12:28,790
algorithm and you don't get<font color="#E5E5E5"> the source</font>

278
00:12:27,170 --> 00:12:31,219
code of course although it should be

279
00:12:28,790 --> 00:12:32,750
possible in this attack model but in

280
00:12:31,220 --> 00:12:35,540
practice you just get a binary book

281
00:12:32,750 --> 00:12:37,730
which you can inspect and then our

282
00:12:35,540 --> 00:12:40,339
initial idea was let's try and collect

283
00:12:37,730 --> 00:12:42,170
information<font color="#E5E5E5"> and using dynamic binary</font>

284
00:12:40,340 --> 00:12:44,660
instrumentation<font color="#E5E5E5"> tools and for instance</font>

285
00:12:42,170 --> 00:12:47,750
that the<font color="#E5E5E5"> popular tools for this our pin</font>

286
00:12:44,660 --> 00:12:50,000
for enter platform or four grains which

287
00:12:47,750 --> 00:12:52,400
lots of<font color="#E5E5E5"> people use for debugging or</font>

288
00:12:50,000 --> 00:12:54,740
memory leakage detection but<font color="#E5E5E5"> actually</font>

289
00:12:52,400 --> 00:12:59,600
it's a much more<font color="#E5E5E5"> advanced to which can</font>

290
00:12:54,740 --> 00:13:01,790
do much more things so we wrote<font color="#E5E5E5"> plug-ins</font>

291
00:12:59,600 --> 00:13:04,640
<font color="#CCCCCC">for</font><font color="#E5E5E5"> these tools and so and we released</font>

292
00:13:01,790 --> 00:13:09,140
them ahsoka source which allows you to

293
00:13:04,640 --> 00:13:09,830
trace the execution of the traces of

294
00:13:09,140 --> 00:13:11,780
execution

295
00:13:09,830 --> 00:13:17,090
and we'll do a mean with this it<font color="#E5E5E5"> traces</font>

296
00:13:11,780 --> 00:13:18,560
<font color="#E5E5E5">all the reads and writes into memory so</font>

297
00:13:17,090 --> 00:13:21,260
all the memory locations or the

298
00:13:18,560 --> 00:13:23,810
instruction locations and then we wrote

299
00:13:21,260 --> 00:13:25,939
a visualizer which visualizes these

300
00:13:23,810 --> 00:13:29,569
reads and writes and then we're going<font color="#E5E5E5"> to</font>

301
00:13:25,940 --> 00:13:31,580
use<font color="#E5E5E5"> these traces of these so that all</font>

302
00:13:29,570 --> 00:13:33,860
<font color="#E5E5E5">the memory accesses and try to find</font>

303
00:13:31,580 --> 00:13:35,480
<font color="#E5E5E5">correlations the same way as</font><font color="#CCCCCC"> you try to</font>

304
00:13:33,860 --> 00:13:39,590
find correlations in a<font color="#E5E5E5"> gray box attack</font>

305
00:13:35,480 --> 00:13:42,260
model so yeah we wrote<font color="#E5E5E5"> plug-ins for</font>

306
00:13:39,590 --> 00:13:43,640
<font color="#CCCCCC">intel pin and 44 grind and we were</font>

307
00:13:42,260 --> 00:13:45,439
especially interested in foreground of

308
00:13:43,640 --> 00:13:49,939
course because that supports the arm

309
00:13:45,440 --> 00:13:51,920
platform so that means mobile devices so

310
00:13:49,940 --> 00:13:54,770
how does a just to give an example how

311
00:13:51,920 --> 00:13:58,160
does the<font color="#CCCCCC"> official trace you look like so</font>

312
00:13:54,770 --> 00:14:01,430
here you so this was<font color="#E5E5E5"> inspired by a</font><font color="#CCCCCC"> tool</font>

313
00:13:58,160 --> 00:14:03,530
<font color="#CCCCCC">a spark slab</font><font color="#E5E5E5"> and so the time is on the</font>

314
00:14:01,430 --> 00:14:05,420
<font color="#CCCCCC">y-axis from top to bottom and on the</font>

315
00:14:03,530 --> 00:14:07,819
x-axis you have the whole range of the

316
00:14:05,420 --> 00:14:09,199
memory addresses and the different

317
00:14:07,820 --> 00:14:11,300
colors is either and access<font color="#CCCCCC"> to an</font>

318
00:14:09,200 --> 00:14:14,060
instruction memory read write or read

319
00:14:11,300 --> 00:14:17,770
and write so this<font color="#E5E5E5"> is a typical picture</font>

320
00:14:14,060 --> 00:14:25,099
when you execute a secure software

321
00:14:17,770 --> 00:14:27,230
crypto implementation so why do<font color="#E5E5E5"> we want</font>

322
00:14:25,100 --> 00:14:29,060
reduce this because our attack<font color="#E5E5E5"> only</font>

323
00:14:27,230 --> 00:14:32,090
needs one piece of information and<font color="#CCCCCC"> that</font>

324
00:14:29,060 --> 00:14:34,040
is what kind of crypto algorithm is

325
00:14:32,090 --> 00:14:37,100
being implemented and like I said in

326
00:14:34,040 --> 00:14:39,189
practice it's either a s or des so here

327
00:14:37,100 --> 00:14:42,470
for instance you see a trace a

328
00:14:39,190 --> 00:14:45,010
visualization of a trace of<font color="#CCCCCC"> white box</font>

329
00:14:42,470 --> 00:14:48,320
implementation and the actual crypto is

330
00:14:45,010 --> 00:14:50,900
just a tiny bit on the bottom and large

331
00:14:48,320 --> 00:14:54,290
from the right and there you can clearly

332
00:14:50,900 --> 00:15:01,100
<font color="#E5E5E5">see nine blocks nine times four blocks</font>

333
00:14:54,290 --> 00:15:03,050
so this is a hint that it's probably<font color="#E5E5E5"> a s</font>

334
00:15:01,100 --> 00:15:05,480
because the<font color="#CCCCCC"> 10th round is slightly</font>

335
00:15:03,050 --> 00:15:07,579
<font color="#E5E5E5">different so you see this pattern and</font>

336
00:15:05,480 --> 00:15:11,660
then when you have<font color="#E5E5E5"> your guests eyes AES</font>

337
00:15:07,580 --> 00:15:14,450
you can mount an a a specific attack but

338
00:15:11,660 --> 00:15:17,390
what<font color="#E5E5E5"> if the white box is a bit smarter</font>

339
00:15:14,450 --> 00:15:19,040
and it has completely unrolled its

340
00:15:17,390 --> 00:15:20,780
algorithm<font color="#CCCCCC"> you'll just</font><font color="#E5E5E5"> see a straight</font>

341
00:15:19,040 --> 00:15:22,810
line like this and of course<font color="#E5E5E5"> this will</font>

342
00:15:20,780 --> 00:15:25,040
not leak any information

343
00:15:22,810 --> 00:15:27,790
then you<font color="#E5E5E5"> don't look at the code but you</font>

344
00:15:25,040 --> 00:15:30,920
just look<font color="#E5E5E5"> at the data so if you just</font>

345
00:15:27,790 --> 00:15:35,030
look<font color="#E5E5E5"> at the data pattern how it fetches</font>

346
00:15:30,920 --> 00:15:37,339
things from<font color="#E5E5E5"> Ram you would see 1 plus 15</font>

347
00:15:35,030 --> 00:15:41,810
nice look-up tables it<font color="#CCCCCC"> exes so that</font>

348
00:15:37,340 --> 00:15:43,190
means it's probably des and then we had

349
00:15:41,810 --> 00:15:46,069
another nice example of another white

350
00:15:43,190 --> 00:15:51,770
<font color="#E5E5E5">box implementation which had also its</font>

351
00:15:46,070 --> 00:15:53,090
memory access pattern sequentialized so

352
00:15:51,770 --> 00:15:56,600
then<font color="#E5E5E5"> three hard to tell what's actually</font>

353
00:15:53,090 --> 00:15:58,820
going on but look at the far right

354
00:15:56,600 --> 00:16:00,740
that's the stack and it turns out that

355
00:15:58,820 --> 00:16:02,930
is really hard to hide information or

356
00:16:00,740 --> 00:16:07,070
<font color="#CCCCCC">access patterns on the stack so if</font><font color="#E5E5E5"> we</font>

357
00:16:02,930 --> 00:16:11,329
zoom in<font color="#E5E5E5"> on this so this is exactly this</font>

358
00:16:07,070 --> 00:16:13,790
green bar on the right if we zoom in you

359
00:16:11,330 --> 00:16:16,190
again see a nicely access pattern of 1

360
00:16:13,790 --> 00:16:21,380
plus 15 so it means that probably the

361
00:16:16,190 --> 00:16:23,360
implementation is computing des<font color="#E5E5E5"> ok so</font>

362
00:16:21,380 --> 00:16:26,380
once we have decided<font color="#E5E5E5"> which algorithm is</font>

363
00:16:23,360 --> 00:16:29,290
actually being implemented we could just

364
00:16:26,380 --> 00:16:31,640
give us let's see if the gray box

365
00:16:29,290 --> 00:16:34,550
attacks are attacking a smart card for

366
00:16:31,640 --> 00:16:35,930
instance if that works here as well<font color="#CCCCCC"> so</font>

367
00:16:34,550 --> 00:16:38,449
the naive approach of course would be

368
00:16:35,930 --> 00:16:39,589
<font color="#E5E5E5">for your white box implementation to a</font>

369
00:16:38,450 --> 00:16:42,950
<font color="#CCCCCC">smartart and measure the power</font>

370
00:16:39,590 --> 00:16:46,580
consumption that should give it if<font color="#E5E5E5"> you</font>

371
00:16:42,950 --> 00:16:48,680
work but this<font color="#E5E5E5"> is of course pretty stupid</font>

372
00:16:46,580 --> 00:16:50,300
because we have much more when a white

373
00:16:48,680 --> 00:16:53,900
box attack model much more powerful of

374
00:16:50,300 --> 00:16:56,300
that model and each bit which accesses

375
00:16:53,900 --> 00:16:58,880
memory is equally important so the idea

376
00:16:56,300 --> 00:17:01,040
<font color="#E5E5E5">is we're going to serialize bits and</font>

377
00:16:58,880 --> 00:17:03,020
then<font color="#E5E5E5"> you get the equivalent of a</font>

378
00:17:01,040 --> 00:17:08,450
hardware power trace which looks like

379
00:17:03,020 --> 00:17:12,589
<font color="#CCCCCC">this just values 0 or 1 and it</font><font color="#E5E5E5"> doesn't</font>

380
00:17:08,450 --> 00:17:15,020
reveal much it's already officially very

381
00:17:12,589 --> 00:17:16,879
hard to identify the multiple rounds in

382
00:17:15,020 --> 00:17:18,379
this race but if you would use

383
00:17:16,880 --> 00:17:22,840
<font color="#E5E5E5">autocorrelation you would immediately</font>

384
00:17:18,380 --> 00:17:25,430
see them but

385
00:17:22,839 --> 00:17:27,800
once you realize what you're actually

386
00:17:25,430 --> 00:17:30,050
measuring on what you're doing<font color="#CCCCCC"> and this</font>

387
00:17:27,800 --> 00:17:33,740
would<font color="#CCCCCC"> be the same as you would in</font>

388
00:17:30,050 --> 00:17:35,870
<font color="#CCCCCC">hardware probe the bus so each bit of</font>

389
00:17:33,740 --> 00:17:38,000
your bus individually and you would not

390
00:17:35,870 --> 00:17:41,840
not measure any error so it's an

391
00:17:38,000 --> 00:17:43,190
extremely powerful attack and so the

392
00:17:41,840 --> 00:17:45,290
hope is of course that you<font color="#E5E5E5"> need much</font>

393
00:17:43,190 --> 00:17:48,260
fewer traces and it's much easier to

394
00:17:45,290 --> 00:17:50,240
<font color="#E5E5E5">extract the secret key compared to the</font>

395
00:17:48,260 --> 00:17:51,680
attacks<font color="#E5E5E5"> on</font><font color="#CCCCCC"> hardware implementations</font>

396
00:17:50,240 --> 00:17:52,820
where there is inherently much more

397
00:17:51,680 --> 00:17:59,510
noise and you cannot measure the

398
00:17:52,820 --> 00:18:01,510
individual bits that easily so we went

399
00:17:59,510 --> 00:18:04,280
online of course and we try to collect

400
00:18:01,510 --> 00:18:07,850
<font color="#E5E5E5">white box implementations which were</font>

401
00:18:04,280 --> 00:18:10,190
publicly is able and we<font color="#CCCCCC"> just said let's</font>

402
00:18:07,850 --> 00:18:12,320
check out this actually works<font color="#E5E5E5"> and to our</font>

403
00:18:10,190 --> 00:18:13,790
surprise it<font color="#E5E5E5"> actually did work it's</font>

404
00:18:12,320 --> 00:18:16,639
something<font color="#E5E5E5"> we did not expect from the</font>

405
00:18:13,790 --> 00:18:21,230
beginning so the first implementation

406
00:18:16,640 --> 00:18:23,390
<font color="#E5E5E5">online is from</font><font color="#CCCCCC"> breathalyzer he put his</font>

407
00:18:21,230 --> 00:18:25,430
white box implementation online in 2007

408
00:18:23,390 --> 00:18:27,580
so it was couple years later already

409
00:18:25,430 --> 00:18:30,620
broken by one of these algebraic attacks

410
00:18:27,580 --> 00:18:32,629
and after actually finding his

411
00:18:30,620 --> 00:18:35,179
implementation back on some internet

412
00:18:32,630 --> 00:18:37,760
archive and that was most of the work it

413
00:18:35,180 --> 00:18:40,340
took only 65 traces and the trace is

414
00:18:37,760 --> 00:18:43,400
just running<font color="#CCCCCC"> the software implementation</font>

415
00:18:40,340 --> 00:18:45,459
which takes less than a millisecond and

416
00:18:43,400 --> 00:18:48,110
then automatically our tool would just

417
00:18:45,460 --> 00:18:52,430
collect this trace serialize it and run

418
00:18:48,110 --> 00:18:55,820
a standard DPA attack and the secret key

419
00:18:52,430 --> 00:18:58,100
was outputted and similar for the other

420
00:18:55,820 --> 00:19:00,169
white<font color="#E5E5E5"> box implementation so in practice</font>

421
00:18:58,100 --> 00:19:02,480
in the<font color="#E5E5E5"> hacker open source community</font>

422
00:19:00,170 --> 00:19:04,790
<font color="#E5E5E5">these open source implementations pop up</font>

423
00:19:02,480 --> 00:19:09,260
in these capture the flag challenges so

424
00:19:04,790 --> 00:19:11,840
at the heck oh you or SSDI see so in the

425
00:19:09,260 --> 00:19:13,820
middle too so there we only needed 16

426
00:19:11,840 --> 00:19:17,750
traces but we should say that these were

427
00:19:13,820 --> 00:19:20,360
designed to be broken<font color="#CCCCCC"> in a day</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> on</font>

428
00:19:17,750 --> 00:19:21,950
this hacker events so they put<font color="#E5E5E5"> no and</font>

429
00:19:20,360 --> 00:19:23,659
coatings on these look-up tables which

430
00:19:21,950 --> 00:19:25,160
makes<font color="#E5E5E5"> it easier for the algebraic</font>

431
00:19:23,660 --> 00:19:29,560
attacks but of course also much much

432
00:19:25,160 --> 00:19:33,200
easier to find correlations and then

433
00:19:29,560 --> 00:19:35,300
<font color="#CCCCCC">another</font><font color="#E5E5E5"> master students finish who force</font>

434
00:19:33,200 --> 00:19:36,080
master thesis implemented the most

435
00:19:35,300 --> 00:19:43,789
advanced

436
00:19:36,080 --> 00:19:45,470
temic white box approach which we then

437
00:19:43,789 --> 00:19:47,510
used and created a challenge<font color="#E5E5E5"> for</font>

438
00:19:45,470 --> 00:19:49,429
ourselves<font color="#CCCCCC"> and this was based on the</font>

439
00:19:47,510 --> 00:19:51,289
<font color="#E5E5E5">approach of economy and use these dual</font>

440
00:19:49,429 --> 00:19:53,539
ciphers that you can represent<font color="#E5E5E5"> AES in</font>

441
00:19:51,289 --> 00:19:57,529
different ways<font color="#E5E5E5"> and here actually we</font>

442
00:19:53,539 --> 00:19:59,390
needed a bit more traces initially 2000

443
00:19:57,529 --> 00:20:02,360
which still is less than than a second

444
00:19:59,390 --> 00:20:03,980
to collect these traces but in the end

445
00:20:02,360 --> 00:20:06,649
<font color="#E5E5E5">after fine-tuning</font><font color="#CCCCCC"> detected its</font>

446
00:20:03,980 --> 00:20:10,070
implementation<font color="#CCCCCC"> it was only 500 so that</font>

447
00:20:06,649 --> 00:20:12,080
of<font color="#CCCCCC"> course leads</font><font color="#E5E5E5"> to the question what's</font>

448
00:20:10,070 --> 00:20:15,230
the intuition why this correlation

449
00:20:12,080 --> 00:20:18,320
attacks actually<font color="#E5E5E5"> work and this was</font>

450
00:20:15,230 --> 00:20:21,320
elaborated a bit more on FSC paper last

451
00:20:18,320 --> 00:20:23,240
year and yet the intuition behind this

452
00:20:21,320 --> 00:20:25,610
is that encoding which you put only

453
00:20:23,240 --> 00:20:27,470
look-up tables do not sufficiently hide

454
00:20:25,610 --> 00:20:30,639
the correlations when when this piece

455
00:20:27,470 --> 00:20:30,639
are actually used in<font color="#E5E5E5"> the implementation</font>

456
00:20:31,029 --> 00:20:38,539
so this of course opens a lot of

457
00:20:33,529 --> 00:20:41,179
potential work for for follow up quickly

458
00:20:38,539 --> 00:20:43,279
because these<font color="#CCCCCC"> these white box</font>

459
00:20:41,179 --> 00:20:46,220
implementations are deployed and used

460
00:20:43,279 --> 00:20:48,649
already<font color="#E5E5E5"> in the world so what about</font>

461
00:20:46,220 --> 00:20:50,570
countermeasures so the most common

462
00:20:48,649 --> 00:20:52,699
countermeasure in the hardware community

463
00:20:50,570 --> 00:20:54,799
is<font color="#CCCCCC"> that you are going to</font><font color="#E5E5E5"> try and create</font>

464
00:20:52,700 --> 00:20:57,769
<font color="#E5E5E5">random masks or random delays you're</font>

465
00:20:54,799 --> 00:20:59,629
gonna mask values but we're in the white

466
00:20:57,769 --> 00:21:01,490
box<font color="#E5E5E5"> a tech model so</font><font color="#CCCCCC"> we assume</font><font color="#E5E5E5"> that the</font>

467
00:20:59,630 --> 00:21:03,950
user has full control over your platform

468
00:21:01,490 --> 00:21:06,230
so if<font color="#CCCCCC"> you just carry a random number I</font>

469
00:21:03,950 --> 00:21:08,809
can<font color="#CCCCCC"> just set the entropy to zero because</font>

470
00:21:06,230 --> 00:21:12,110
I you can assume I'm root for instance

471
00:21:08,809 --> 00:21:13,428
<font color="#CCCCCC">on my android phone and thereby</font>

472
00:21:12,110 --> 00:21:14,928
disabling the entropy and your

473
00:21:13,429 --> 00:21:16,730
countermeasure doesn't work anymore so

474
00:21:14,929 --> 00:21:19,250
this approach does not seem<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be the</font>

475
00:21:16,730 --> 00:21:20,899
right path so what about having<font color="#E5E5E5"> some</font>

476
00:21:19,250 --> 00:21:25,159
sort of static random data in the white

477
00:21:20,899 --> 00:21:26,779
box another counter measure is based on

478
00:21:25,159 --> 00:21:28,429
threshold implementations which they use

479
00:21:26,779 --> 00:21:30,649
in hardware that seems like an

480
00:21:28,429 --> 00:21:34,279
interesting approach to go for here as

481
00:21:30,649 --> 00:21:36,860
well and of course more on the hacker

482
00:21:34,279 --> 00:21:38,539
side of things what about detecting if

483
00:21:36,860 --> 00:21:40,699
you run in such a DB I framework

484
00:21:38,539 --> 00:21:43,429
detecting if you run with in foreground

485
00:21:40,700 --> 00:21:44,510
or a debugger but it seems<font color="#E5E5E5"> like the in</font>

486
00:21:43,429 --> 00:21:45,590
<font color="#CCCCCC">decorah community there are</font><font color="#E5E5E5"> lots of</font>

487
00:21:44,510 --> 00:21:47,570
papers who

488
00:21:45,590 --> 00:21:49,760
introduce new techniques how to detect

489
00:21:47,570 --> 00:21:53,830
this and then other techniques how to to

490
00:21:49,760 --> 00:21:59,000
get<font color="#E5E5E5"> around this and of course</font><font color="#CCCCCC"> these so</font>

491
00:21:53,830 --> 00:22:01,490
<font color="#E5E5E5">dca so this attack it's not a holy grill</font>

492
00:21:59,000 --> 00:22:03,500
it might<font color="#E5E5E5"> still when you lose use large</font>

493
00:22:01,490 --> 00:22:05,380
and coatings on these<font color="#E5E5E5"> look-up tables</font>

494
00:22:03,500 --> 00:22:08,270
because then there's yeah there's no

495
00:22:05,380 --> 00:22:09,980
correlation anymore<font color="#CCCCCC"> between then and the</font>

496
00:22:08,270 --> 00:22:11,809
output but that<font color="#E5E5E5"> means you get larger</font>

497
00:22:09,980 --> 00:22:14,240
look-up tables and things actually might

498
00:22:11,809 --> 00:22:17,570
become impractical too large and too

499
00:22:14,240 --> 00:22:19,399
<font color="#E5E5E5">slow and practice and moreover the</font>

500
00:22:17,570 --> 00:22:23,510
original algebraic attacks will all

501
00:22:19,399 --> 00:22:25,729
still work so<font color="#CCCCCC"> after we put this online</font>

502
00:22:23,510 --> 00:22:29,149
other<font color="#E5E5E5"> people's almost</font><font color="#CCCCCC"> notably</font><font color="#E5E5E5"> the people</font>

503
00:22:25,730 --> 00:22:32,659
from riskier they looked at this as well

504
00:22:29,149 --> 00:22:34,879
<font color="#E5E5E5">so independently and they look more at</font>

505
00:22:32,659 --> 00:22:36,500
software<font color="#E5E5E5"> fault attacks so the other type</font>

506
00:22:34,880 --> 00:22:38,750
of attacks we know from<font color="#CCCCCC"> the gray box</font>

507
00:22:36,500 --> 00:22:41,390
community and that approach was a very

508
00:22:38,750 --> 00:22:43,340
successful as well and they show<font color="#CCCCCC"> that if</font>

509
00:22:41,390 --> 00:22:45,950
you in<font color="#E5E5E5"> this white box a tech model you</font>

510
00:22:43,340 --> 00:22:47,600
just flip a couple of bits in these

511
00:22:45,950 --> 00:22:50,809
<font color="#CCCCCC">look-up tables even if there are n</font>

512
00:22:47,600 --> 00:22:54,320
coatings on top of them it's similar as

513
00:22:50,809 --> 00:22:59,600
a photo<font color="#E5E5E5"> tech and you can extract the</font>

514
00:22:54,320 --> 00:23:02,600
secret key material as<font color="#CCCCCC"> well so we</font>

515
00:22:59,600 --> 00:23:08,570
released all our software we use so the

516
00:23:02,600 --> 00:23:12,350
facial<font color="#CCCCCC"> Iser the tracer and the code we</font>

517
00:23:08,570 --> 00:23:14,809
created to actually perform a<font color="#CCCCCC"> CPA</font><font color="#E5E5E5"> a tech</font>

518
00:23:12,350 --> 00:23:16,879
or DPA attack because to our surprise we

519
00:23:14,809 --> 00:23:21,260
were not able<font color="#E5E5E5"> to find any open source</font>

520
00:23:16,880 --> 00:23:23,090
see PA two together with all the scripts

521
00:23:21,260 --> 00:23:24,890
for the implementations<font color="#E5E5E5"> I showed earlier</font>

522
00:23:23,090 --> 00:23:28,490
which we<font color="#CCCCCC"> attacked so people could</font>

523
00:23:24,890 --> 00:23:31,510
actually can try and do these attacks

524
00:23:28,490 --> 00:23:33,470
themselves so if you feel encouraged

525
00:23:31,510 --> 00:23:34,580
<font color="#E5E5E5">please come and help and extreme these</font>

526
00:23:33,470 --> 00:23:36,919
tools if you know white box

527
00:23:34,580 --> 00:23:38,860
implementations which we could try and

528
00:23:36,919 --> 00:23:41,360
<font color="#E5E5E5">test let us know we're always interested</font>

529
00:23:38,860 --> 00:23:44,059
yeah in extending our tools and adding

530
00:23:41,360 --> 00:23:49,039
more expertise or<font color="#E5E5E5"> test countermeasures</font>

531
00:23:44,059 --> 00:23:52,129
for instance so to conclude it's<font color="#E5E5E5"> clear</font>

532
00:23:49,039 --> 00:23:56,110
that software only solutions become more

533
00:23:52,130 --> 00:23:57,730
and more popular especially in the HCE

534
00:23:56,110 --> 00:24:00,010
environment

535
00:23:57,730 --> 00:24:04,180
and they rely heavily in white book

536
00:24:00,010 --> 00:24:06,010
script so the the attack I quickly

537
00:24:04,180 --> 00:24:08,770
described it's just<font color="#CCCCCC"> the counterpart of</font>

538
00:24:06,010 --> 00:24:10,660
the<font color="#CCCCCC"> DPAs extra larger community you</font>

539
00:24:08,770 --> 00:24:12,730
don't need any expertise it's just a

540
00:24:10,660 --> 00:24:15,370
<font color="#E5E5E5">matter of you download</font><font color="#CCCCCC"> two and you run</font>

541
00:24:12,730 --> 00:24:16,810
it against your white box attack if<font color="#E5E5E5"> you</font>

542
00:24:15,370 --> 00:24:21,639
know which algorithm is being

543
00:24:16,810 --> 00:24:23,080
implemented and this<font color="#CCCCCC"> of course raises</font>

544
00:24:21,640 --> 00:24:25,930
the question is the level of security

545
00:24:23,080 --> 00:24:27,820
and especially maturity of at least all

546
00:24:25,930 --> 00:24:29,380
the white<font color="#E5E5E5"> box schemes we tested is very</font>

547
00:24:27,820 --> 00:24:34,300
questionable we could easily<font color="#E5E5E5"> break off</font>

548
00:24:29,380 --> 00:24:36,910
them and<font color="#E5E5E5"> this gives rise to a couple of</font>

549
00:24:34,300 --> 00:24:38,919
questions so for instance<font color="#CCCCCC"> a symmetric</font>

550
00:24:36,910 --> 00:24:41,430
trip though there are companies who

551
00:24:38,920 --> 00:24:43,870
offer solutions for asymmetric

552
00:24:41,430 --> 00:24:48,220
cryptography so think<font color="#E5E5E5"> our essay</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> think</font>

553
00:24:43,870 --> 00:24:49,899
<font color="#CCCCCC">ec d</font><font color="#E5E5E5"> sh but actually</font><font color="#CCCCCC"> in academia it's a</font>

554
00:24:48,220 --> 00:24:51,760
completely open question how to do this

555
00:24:49,900 --> 00:24:54,640
so it would be interesting to have

556
00:24:51,760 --> 00:24:57,610
people would<font color="#E5E5E5"> start to study this in</font>

557
00:24:54,640 --> 00:25:01,120
academia as well because in industry

558
00:24:57,610 --> 00:25:03,550
they keep other design secret and<font color="#CCCCCC"> i</font>

559
00:25:01,120 --> 00:25:06,370
think<font color="#CCCCCC"> there's a need we need a way to</font>

560
00:25:03,550 --> 00:25:08,470
measure the real security level somehow

561
00:25:06,370 --> 00:25:11,129
like we do in hardware implementations

562
00:25:08,470 --> 00:25:13,480
the security of such software solutions

563
00:25:11,130 --> 00:25:15,430
so this<font color="#CCCCCC"> is just the beginning i would</font>

564
00:25:13,480 --> 00:25:17,620
say<font color="#E5E5E5"> so probably we will see much more</font>

565
00:25:15,430 --> 00:25:18,610
advanced attacks and countermeasures of

566
00:25:17,620 --> 00:25:20,500
course and then attacks<font color="#CCCCCC"> on these</font>

567
00:25:18,610 --> 00:25:23,320
countermeasures in the near future and

568
00:25:20,500 --> 00:25:25,150
<font color="#E5E5E5">yeah that leaves us with with a final</font>

569
00:25:23,320 --> 00:25:27,010
question which I<font color="#E5E5E5"> don't know the solution</font>

570
00:25:25,150 --> 00:25:29,320
to<font color="#E5E5E5"> what is actually the real level of</font>

571
00:25:27,010 --> 00:25:31,420
these white box schemes which are

572
00:25:29,320 --> 00:25:33,850
applying is a<font color="#CCCCCC"> CHC solutions which are</font>

573
00:25:31,420 --> 00:25:37,260
currently implemented on our mobile

574
00:25:33,850 --> 00:25:37,260
phones thank

575
00:25:43,700 --> 00:25:49,860
great we've a minute or<font color="#CCCCCC"> two for</font>

576
00:25:46,080 --> 00:25:53,520
<font color="#E5E5E5">questions please hello</font><font color="#CCCCCC"> mr. photos from</font>

577
00:25:49,860 --> 00:25:55,560
<font color="#E5E5E5">Luxembourg you mentioned that you your</font>

578
00:25:53,520 --> 00:25:57,710
tool can be used in the cases where some

579
00:25:55,560 --> 00:26:00,389
additional application is applied and

580
00:25:57,710 --> 00:26:03,630
that was<font color="#E5E5E5"> not</font><font color="#CCCCCC"> a bit clearer for</font><font color="#E5E5E5"> me so did</font>

581
00:26:00,390 --> 00:26:06,600
it test it on some implementations of

582
00:26:03,630 --> 00:26:08,520
AES where it's like within a group of I

583
00:26:06,600 --> 00:26:10,860
know some garbage code that does nothing

584
00:26:08,520 --> 00:26:12,480
or you used on the implementations we're

585
00:26:10,860 --> 00:26:16,110
like carefully designed to<font color="#E5E5E5"> look up</font>

586
00:26:12,480 --> 00:26:18,210
tables and doing that using associated

587
00:26:16,110 --> 00:26:20,189
code we're ninety-nine percent doing

588
00:26:18,210 --> 00:26:24,210
some completely unrelated<font color="#CCCCCC"> tarea stuff</font>

589
00:26:20,190 --> 00:26:27,140
can be countermeasure so yes we did try

590
00:26:24,210 --> 00:26:31,260
it on code where<font color="#E5E5E5"> were codification or</font>

591
00:26:27,140 --> 00:26:32,970
garbling of the code was present so good

592
00:26:31,260 --> 00:26:34,680
countermeasure indeed is if you put

593
00:26:32,970 --> 00:26:36,780
random the laser<font color="#E5E5E5"> or random garbage at</font>

594
00:26:34,680 --> 00:26:38,280
places because then if you want to try

595
00:26:36,780 --> 00:26:40,800
<font color="#CCCCCC">to do the correlation it becomes much</font>

596
00:26:38,280 --> 00:26:42,870
more difficult but then it because it's

597
00:26:40,800 --> 00:26:44,700
if full control over everything you

598
00:26:42,870 --> 00:26:47,669
could just see which steps were not used

599
00:26:44,700 --> 00:26:49,560
subsequently and then it would<font color="#CCCCCC"> be so we</font>

600
00:26:47,670 --> 00:26:51,210
try this and then it was very easy to

601
00:26:49,560 --> 00:26:53,040
write a tool which would just more or

602
00:26:51,210 --> 00:26:55,980
less align your traces and remove all

603
00:26:53,040 --> 00:26:59,070
the garbage out again and so<font color="#E5E5E5"> that is</font>

604
00:26:55,980 --> 00:27:00,630
when<font color="#CCCCCC"> you include garbage code but when</font>

605
00:26:59,070 --> 00:27:03,750
<font color="#E5E5E5">you do real code obfuscation some</font>

606
00:27:00,630 --> 00:27:06,090
transformations on the gold that is

607
00:27:03,750 --> 00:27:07,410
simply ignored because we just execute

608
00:27:06,090 --> 00:27:09,480
occult and look at the<font color="#E5E5E5"> address is being</font>

609
00:27:07,410 --> 00:27:10,710
accessed and that's that's<font color="#E5E5E5"> the only</font>

610
00:27:09,480 --> 00:27:15,470
thing we need so there's code

611
00:27:10,710 --> 00:27:15,470
obfuscation we simply<font color="#CCCCCC"> don't don't care</font>

612
00:27:16,730 --> 00:27:21,450
most of the cryptography that we study

613
00:27:19,350 --> 00:27:23,610
at this conference or that we discuss

614
00:27:21,450 --> 00:27:27,090
here<font color="#CCCCCC"> and it either designed to protect</font>

615
00:27:23,610 --> 00:27:29,520
the user or to empower the user and

616
00:27:27,090 --> 00:27:32,189
white box cryptography does not do this

617
00:27:29,520 --> 00:27:33,720
so if you view it like<font color="#E5E5E5"> that how do you</font>

618
00:27:32,190 --> 00:27:37,190
evaluate working on white box

619
00:27:33,720 --> 00:27:37,190
photography born<font color="#CCCCCC"> a</font><font color="#E5E5E5"> moral standpoint</font>

620
00:27:38,050 --> 00:27:44,600
it's a very<font color="#CCCCCC"> good question indeed so it</font>

621
00:27:41,840 --> 00:27:47,510
does not protect the user it's really is

622
00:27:44,600 --> 00:27:53,719
protecting the implementation or the

623
00:27:47,510 --> 00:27:55,370
entity providing the implementation yes

624
00:27:53,720 --> 00:27:57,290
so I<font color="#E5E5E5"> don't know morally or</font>

625
00:27:55,370 --> 00:27:58,699
philosophically how I want you to

626
00:27:57,290 --> 00:28:00,590
categorize these things it's a good

627
00:27:58,700 --> 00:28:05,690
question I mean I mean consider how you

628
00:28:00,590 --> 00:28:08,570
have elevated so I would so in my

629
00:28:05,690 --> 00:28:09,860
opinion I think there<font color="#CCCCCC"> is an use for</font>

630
00:28:08,570 --> 00:28:12,740
white books implementations for sure

631
00:28:09,860 --> 00:28:14,689
because how else would one try<font color="#E5E5E5"> to</font>

632
00:28:12,740 --> 00:28:16,460
protect if there's no<font color="#E5E5E5"> hardware secure</font>

633
00:28:14,690 --> 00:28:20,210
element or something available how would

634
00:28:16,460 --> 00:28:21,580
you protect your how would<font color="#CCCCCC"> you want to</font>

635
00:28:20,210 --> 00:28:23,870
implement that French<font color="#CCCCCC"> as a payment</font>

636
00:28:21,580 --> 00:28:26,060
<font color="#E5E5E5">solution and software I mean there is a</font>

637
00:28:23,870 --> 00:28:27,830
need for this so there is a need for<font color="#E5E5E5"> for</font>

638
00:28:26,060 --> 00:28:29,120
white box Krypton there are companies

639
00:28:27,830 --> 00:28:30,560
they're doing<font color="#E5E5E5"> that by the way there</font><font color="#CCCCCC"> are</font>

640
00:28:29,120 --> 00:28:32,870
companies that are selling white box

641
00:28:30,560 --> 00:28:35,210
<font color="#E5E5E5">crypto to protect credentials and keys</font>

642
00:28:32,870 --> 00:28:41,000
for you on your mobile the crap that

643
00:28:35,210 --> 00:28:41,720
they're<font color="#CCCCCC"> doing it I was only going</font><font color="#E5E5E5"> to</font>

644
00:28:41,000 --> 00:28:43,550
mention<font color="#CCCCCC"> that there are other</font>

645
00:28:41,720 --> 00:28:44,840
applications here you know<font color="#CCCCCC"> like if you</font>

646
00:28:43,550 --> 00:28:47,659
<font color="#E5E5E5">don't have hardware and you want to</font>

647
00:28:44,840 --> 00:28:49,970
build an ATM or some other machine which

648
00:28:47,660 --> 00:28:52,160
<font color="#CCCCCC">you know where the owner of the machine</font>

649
00:28:49,970 --> 00:28:53,870
and<font color="#E5E5E5"> really in sometimes the user of</font><font color="#CCCCCC"> the</font>

650
00:28:52,160 --> 00:28:55,430
machine has a legitimate interest in

651
00:28:53,870 --> 00:29:00,649
keeping it secure because you don't want

652
00:28:55,430 --> 00:29:03,200
someone<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to to sabotage the ATM</font><font color="#E5E5E5"> and</font>

653
00:29:00,650 --> 00:29:07,340
skill all the money out of it yeah but

654
00:29:03,200 --> 00:29:10,130
for ACM it's exactly<font color="#E5E5E5"> 480 in motion space</font>

655
00:29:07,340 --> 00:29:11,360
is often art where but here but<font color="#E5E5E5"> I agree</font>

656
00:29:10,130 --> 00:29:14,020
there are lots and<font color="#E5E5E5"> lots of following</font>

657
00:29:11,360 --> 00:29:14,020
sketches yes

