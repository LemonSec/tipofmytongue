1
00:00:00,719 --> 00:00:02,159
and you're ready to go enjoy your

2
00:00:02,159 --> 00:00:04,319
session

3
00:00:04,319 --> 00:00:07,520
okay well we're on to the final session

4
00:00:07,520 --> 00:00:09,760
of real world crypto um i'd like to

5
00:00:09,760 --> 00:00:11,360
remind folks that

6
00:00:11,360 --> 00:00:12,960
in an hour and a half after these

7
00:00:12,960 --> 00:00:14,719
presentations there will be

8
00:00:14,719 --> 00:00:18,240
a social uh please join it uh

9
00:00:18,240 --> 00:00:19,840
even if it's even if you want to keep it

10
00:00:19,840 --> 00:00:22,080
quiet and keep your um your zoom on mute

11
00:00:22,080 --> 00:00:23,760
it's great to see everybody in

12
00:00:23,760 --> 00:00:25,920
and um have a farewell to what has been

13
00:00:25,920 --> 00:00:28,160
a fantastic conference so far

14
00:00:28,160 --> 00:00:31,519
um so right now i'd like to introduce uh

15
00:00:31,519 --> 00:00:34,000
one of our invited speakers anna

16
00:00:34,000 --> 00:00:35,600
lucenskaia

17
00:00:35,600 --> 00:00:38,399
um who is going to be speaking about

18
00:00:38,399 --> 00:00:40,160
privacy preserving authentication from

19
00:00:40,160 --> 00:00:41,360
theory to practice

20
00:00:41,360 --> 00:00:44,480
so anna please take it away thanks just

21
00:00:44,480 --> 00:00:46,480
confirming that everybody's seeing the

22
00:00:46,480 --> 00:00:49,360
um the correct view not the presenter

23
00:00:49,360 --> 00:00:49,840
view

24
00:00:49,840 --> 00:00:52,559
yes yeah sure triple checking okay good

25
00:00:52,559 --> 00:00:53,840
so thank you very much

26
00:00:53,840 --> 00:00:55,600
so i'm gonna talk about privacy

27
00:00:55,600 --> 00:00:57,760
preserving authentication from theory to

28
00:00:57,760 --> 00:00:59,359
practice

29
00:00:59,359 --> 00:01:04,159
and um so before i get into that

30
00:01:04,159 --> 00:01:06,159
let's just do a little philosophical

31
00:01:06,159 --> 00:01:07,280
digression

32
00:01:07,280 --> 00:01:10,479
on um when you're online

33
00:01:10,479 --> 00:01:14,320
what makes you you so

34
00:01:14,320 --> 00:01:16,640
well what makes you you offline in

35
00:01:16,640 --> 00:01:18,240
general in life

36
00:01:18,240 --> 00:01:22,240
um so everybody else a very famous quote

37
00:01:22,240 --> 00:01:23,200
from

38
00:01:23,200 --> 00:01:25,439
the mathematician and philosopher rene

39
00:01:25,439 --> 00:01:26,960
descartes

40
00:01:26,960 --> 00:01:29,759
i think therefore i am so the way we can

41
00:01:29,759 --> 00:01:30,799
translate that

42
00:01:30,799 --> 00:01:34,400
to the online world is

43
00:01:34,400 --> 00:01:37,200
i log in therefore i am of course that

44
00:01:37,200 --> 00:01:38,720
comes with lots of disclaimers

45
00:01:38,720 --> 00:01:42,000
provided no one else can log in as me so

46
00:01:42,000 --> 00:01:44,880
um then the question is well where are

47
00:01:44,880 --> 00:01:45,759
you logging in

48
00:01:45,759 --> 00:01:48,560
and are you having a kind of an out of

49
00:01:48,560 --> 00:01:50,399
body experience

50
00:01:50,399 --> 00:01:52,720
and the way that we typically conduct

51
00:01:52,720 --> 00:01:55,280
our online lives right now

52
00:01:55,280 --> 00:01:58,719
we have cloud providers and they embody

53
00:01:58,719 --> 00:02:01,200
the entirety of our online life so you

54
00:02:01,200 --> 00:02:02,719
just log into their service

55
00:02:02,719 --> 00:02:06,158
and they do the rest

56
00:02:06,479 --> 00:02:10,000
and of course there is another way of

57
00:02:10,000 --> 00:02:10,959
doing it which

58
00:02:10,959 --> 00:02:13,360
uh is now popularly called

59
00:02:13,360 --> 00:02:15,040
self-sovereign identity

60
00:02:15,040 --> 00:02:16,800
which means that no one can act on your

61
00:02:16,800 --> 00:02:18,080
behalf uh

62
00:02:18,080 --> 00:02:21,440
some something like your cryptographic

63
00:02:21,440 --> 00:02:22,879
key is needed for that

64
00:02:22,879 --> 00:02:26,239
and um you don't need the help of a

65
00:02:26,239 --> 00:02:28,319
cloud service to make assertions about

66
00:02:28,319 --> 00:02:29,840
your identity

67
00:02:29,840 --> 00:02:32,400
um and you're the one in control of your

68
00:02:32,400 --> 00:02:34,080
personal data

69
00:02:34,080 --> 00:02:37,200
so of course uh that's completely not a

70
00:02:37,200 --> 00:02:39,040
new concept certainly not

71
00:02:39,040 --> 00:02:41,680
to this crowd not to this community uh

72
00:02:41,680 --> 00:02:42,959
it's just a new name for an

73
00:02:42,959 --> 00:02:46,000
old one and um i included a link

74
00:02:46,000 --> 00:02:49,599
to a um an essay where this

75
00:02:49,599 --> 00:02:52,879
term appeared for the first time and

76
00:02:52,879 --> 00:02:56,239
um you know the horror to an academic

77
00:02:56,239 --> 00:02:59,440
this essay does not in fact um

78
00:02:59,440 --> 00:03:02,879
cite what i think is the first

79
00:03:02,879 --> 00:03:06,159
um very clear statement of

80
00:03:06,159 --> 00:03:09,120
this principle um maybe not even the

81
00:03:09,120 --> 00:03:10,400
first but certainly

82
00:03:10,400 --> 00:03:12,319
the classic and the classic i'm

83
00:03:12,319 --> 00:03:15,040
referring to is david cham's 1984 paper

84
00:03:15,040 --> 00:03:16,800
a new paradigm for individuals in the

85
00:03:16,800 --> 00:03:17,519
information

86
00:03:17,519 --> 00:03:21,360
age and um

87
00:03:21,360 --> 00:03:25,680
in it david chan spells out a vision

88
00:03:25,680 --> 00:03:29,120
for giving individuals

89
00:03:29,120 --> 00:03:32,400
all the control of information

90
00:03:32,400 --> 00:03:34,000
about themselves of their personal

91
00:03:34,000 --> 00:03:35,440
information

92
00:03:35,440 --> 00:03:38,720
so um i

93
00:03:38,720 --> 00:03:40,959
quote it from on the slide you can see

94
00:03:40,959 --> 00:03:42,239
that i quoted from

95
00:03:42,239 --> 00:03:45,920
this article and david chum is extremely

96
00:03:45,920 --> 00:03:48,000
explicit the language he uses is

97
00:03:48,000 --> 00:03:49,440
extremely clear

98
00:03:49,440 --> 00:03:52,720
that his vision for how

99
00:03:52,720 --> 00:03:55,760
individuals need to

100
00:03:56,480 --> 00:04:01,840
handle their personal information

101
00:04:03,439 --> 00:04:06,080
when interacting with organizations and

102
00:04:06,080 --> 00:04:06,879
then

103
00:04:06,879 --> 00:04:08,959
if they want to convey a piece of

104
00:04:08,959 --> 00:04:10,720
information about themselves

105
00:04:10,720 --> 00:04:12,400
let's say one organization already knows

106
00:04:12,400 --> 00:04:14,000
it about a user

107
00:04:14,000 --> 00:04:16,560
and issued a credential to this user

108
00:04:16,560 --> 00:04:17,918
attesting to this

109
00:04:17,918 --> 00:04:21,120
fact about him or her then

110
00:04:21,120 --> 00:04:24,240
you can see he says you transform a

111
00:04:24,240 --> 00:04:25,840
digitally signed credential received

112
00:04:25,840 --> 00:04:27,120
from an organization

113
00:04:27,120 --> 00:04:28,639
in a way that preserves the digital

114
00:04:28,639 --> 00:04:30,479
signature but changes the pseudonym

115
00:04:30,479 --> 00:04:31,520
within the credential

116
00:04:31,520 --> 00:04:33,680
so that's that's his vision for what

117
00:04:33,680 --> 00:04:35,040
would be a desirable

118
00:04:35,040 --> 00:04:38,400
state of affairs um

119
00:04:38,400 --> 00:04:41,520
so so this self-sovereign identity

120
00:04:41,520 --> 00:04:45,759
notion is not a new concept but

121
00:04:45,759 --> 00:04:48,400
maybe the world is finally ready for it

122
00:04:48,400 --> 00:04:50,639
and we don't even need to look very

123
00:04:50,639 --> 00:04:54,320
very far as i was preparing this talk

124
00:04:54,320 --> 00:04:56,240
the new york times helpfully gave me

125
00:04:56,240 --> 00:04:59,040
this headline about tim berners-lee

126
00:04:59,040 --> 00:05:02,560
um lee's efforts to uh

127
00:05:02,560 --> 00:05:05,600
to bring this about so let's just look

128
00:05:05,600 --> 00:05:07,280
at the headline he created the web

129
00:05:07,280 --> 00:05:09,680
now he's out to remake the digital world

130
00:05:09,680 --> 00:05:10,960
tim berners-lee wants to put

131
00:05:10,960 --> 00:05:13,600
people in control of their personal data

132
00:05:13,600 --> 00:05:14,880
he has technology

133
00:05:14,880 --> 00:05:17,440
and a startup pursuing that goal can he

134
00:05:17,440 --> 00:05:18,560
succeed

135
00:05:18,560 --> 00:05:22,320
um so this you know this this is this is

136
00:05:22,320 --> 00:05:24,479
at the top of my new york times feed

137
00:05:24,479 --> 00:05:27,680
so maybe the world is ready um

138
00:05:27,680 --> 00:05:31,039
for this this ambitious vision um

139
00:05:31,039 --> 00:05:34,320
would be nice if they cited cham

140
00:05:34,320 --> 00:05:38,639
so in our meme uh

141
00:05:38,639 --> 00:05:41,280
meme enriched world here is here's the

142
00:05:41,280 --> 00:05:42,880
meme self-serving identity how it

143
00:05:42,880 --> 00:05:43,520
started

144
00:05:43,520 --> 00:05:48,400
david cham had this vision of

145
00:05:48,400 --> 00:05:50,960
conducting um all of our affairs in a

146
00:05:50,960 --> 00:05:52,080
privacy preserving

147
00:05:52,080 --> 00:05:54,479
way that gives individuals control how

148
00:05:54,479 --> 00:05:55,680
it's going

149
00:05:55,680 --> 00:05:58,639
well it's not it's uh right now there's

150
00:05:58,639 --> 00:06:00,400
talk of maybe

151
00:06:00,400 --> 00:06:04,240
using at least cryptographic credentials

152
00:06:04,240 --> 00:06:07,440
worldwide to for example um

153
00:06:07,440 --> 00:06:09,039
convince various that you've been

154
00:06:09,039 --> 00:06:10,560
vaccinated

155
00:06:10,560 --> 00:06:13,680
from covet 19. note that this

156
00:06:13,680 --> 00:06:16,160
in this particular meme the credential

157
00:06:16,160 --> 00:06:17,039
that you're seeing

158
00:06:17,039 --> 00:06:19,840
on your screen is not privacy preserving

159
00:06:19,840 --> 00:06:20,560
it's just

160
00:06:20,560 --> 00:06:23,840
a a qr code um

161
00:06:23,840 --> 00:06:25,759
but at least it's a cryptographic

162
00:06:25,759 --> 00:06:27,440
signature that you may or may not choose

163
00:06:27,440 --> 00:06:28,000
to show

164
00:06:28,000 --> 00:06:31,120
somebody and uh this is actually

165
00:06:31,120 --> 00:06:34,720
a mock-up from a project that i am

166
00:06:34,720 --> 00:06:37,919
uh contributing to uh that that has to

167
00:06:37,919 --> 00:06:40,000
do with mit if you're interested

168
00:06:40,000 --> 00:06:43,199
in you know the conversation on how

169
00:06:43,199 --> 00:06:45,759
um digital signatures and cryptographic

170
00:06:45,759 --> 00:06:46,720
credentials

171
00:06:46,720 --> 00:06:51,120
can help bring about some kind of a

172
00:06:51,120 --> 00:06:53,280
vaccination credential in real time let

173
00:06:53,280 --> 00:06:54,960
me know

174
00:06:54,960 --> 00:06:58,240
anyway um so what's

175
00:06:58,240 --> 00:07:01,360
uh what's underneath this um

176
00:07:01,360 --> 00:07:03,759
this vision of uh self-sovereign

177
00:07:03,759 --> 00:07:04,880
identity

178
00:07:04,880 --> 00:07:06,240
so of course there are cryptographic

179
00:07:06,240 --> 00:07:08,160
foundations and if we forget for a

180
00:07:08,160 --> 00:07:08,880
moment about

181
00:07:08,880 --> 00:07:12,160
the um privacy preserving case uh the

182
00:07:12,160 --> 00:07:13,039
algorithmic

183
00:07:13,039 --> 00:07:16,240
the the cryptographic foundation is

184
00:07:16,240 --> 00:07:17,599
fairly straightforward it's just a

185
00:07:17,599 --> 00:07:20,000
digital structure scheme and we've known

186
00:07:20,000 --> 00:07:22,720
how to digitally sign for a long time

187
00:07:22,720 --> 00:07:23,919
which is why i put

188
00:07:23,919 --> 00:07:26,000
some old pictures here and also some

189
00:07:26,000 --> 00:07:28,080
maybe maybe more recent pictures

190
00:07:28,080 --> 00:07:30,800
so these are all familiar faces um

191
00:07:30,800 --> 00:07:32,960
diffie and hellman and ralph merkel

192
00:07:32,960 --> 00:07:36,319
and rsa and of course uh gmr

193
00:07:36,319 --> 00:07:39,599
goldwester mcauley and rivest formulated

194
00:07:39,599 --> 00:07:42,400
the actual definition of uh security for

195
00:07:42,400 --> 00:07:44,240
digital signature scheme

196
00:07:44,240 --> 00:07:47,680
and anyway so we have a

197
00:07:47,680 --> 00:07:49,199
we understand what a digital signature

198
00:07:49,199 --> 00:07:51,120
scheme is what it can do we have many

199
00:07:51,120 --> 00:07:53,199
candidates we have many standards

200
00:07:53,199 --> 00:07:55,039
so if you don't care about privacy if

201
00:07:55,039 --> 00:07:56,240
all you care is just giving the

202
00:07:56,240 --> 00:07:57,199
individuals

203
00:07:57,199 --> 00:08:00,080
the ability to present information about

204
00:08:00,080 --> 00:08:00,879
themselves in a

205
00:08:00,879 --> 00:08:04,639
verifiable way without relying on some

206
00:08:04,639 --> 00:08:06,319
third party

207
00:08:06,319 --> 00:08:09,599
certifying that their information is

208
00:08:09,599 --> 00:08:12,479
accurate digital signatures allow us to

209
00:08:12,479 --> 00:08:13,520
do this

210
00:08:13,520 --> 00:08:15,280
now if you care about the privacy

211
00:08:15,280 --> 00:08:16,560
preserving case

212
00:08:16,560 --> 00:08:19,360
now we get as far as theoretical

213
00:08:19,360 --> 00:08:20,800
foundations are concerned

214
00:08:20,800 --> 00:08:25,199
things are much more um there are

215
00:08:25,199 --> 00:08:28,960
very rich tools that come into play such

216
00:08:28,960 --> 00:08:30,240
as zero knowledge proof systems and

217
00:08:30,240 --> 00:08:32,080
security party computation

218
00:08:32,080 --> 00:08:36,159
and let me uh show you what i mean so

219
00:08:36,159 --> 00:08:40,159
so these tools that under underlying um

220
00:08:40,159 --> 00:08:42,880
the suite of cryptographic techniques

221
00:08:42,880 --> 00:08:44,560
known as anonymous credentials

222
00:08:44,560 --> 00:08:46,080
so what's an anonymous credential so

223
00:08:46,080 --> 00:08:47,600
let's say that you have a user who cares

224
00:08:47,600 --> 00:08:49,120
about its privacy

225
00:08:49,120 --> 00:08:52,480
and you have a verifier and

226
00:08:52,480 --> 00:08:54,560
the user wants to gain access to

227
00:08:54,560 --> 00:08:57,040
whatever whatever resource the verifier

228
00:08:57,040 --> 00:09:00,080
is controlling and the verifier doesn't

229
00:09:00,080 --> 00:09:00,640
want to just

230
00:09:00,640 --> 00:09:03,839
give anybody access it wants to make

231
00:09:03,839 --> 00:09:05,120
sure that you satisfy some

232
00:09:05,120 --> 00:09:07,200
whatever access control policy the

233
00:09:07,200 --> 00:09:09,040
verifier has so he's going to say

234
00:09:09,040 --> 00:09:11,519
well who are you and of course this user

235
00:09:11,519 --> 00:09:12,800
can say it's bond

236
00:09:12,800 --> 00:09:15,279
james bond but remember he's uh he cares

237
00:09:15,279 --> 00:09:17,040
about his privacy so he's more likely to

238
00:09:17,040 --> 00:09:18,320
say i can tell you but then i'll have to

239
00:09:18,320 --> 00:09:19,440
kill you

240
00:09:19,440 --> 00:09:20,640
so maybe the problem is that the

241
00:09:20,640 --> 00:09:23,519
verifier asks the wrong question

242
00:09:23,519 --> 00:09:26,320
so in a second iteration of this

243
00:09:26,320 --> 00:09:27,440
interaction

244
00:09:27,440 --> 00:09:30,000
you can try to say okay i don't care who

245
00:09:30,000 --> 00:09:31,680
you are all i want to do is i want to

246
00:09:31,680 --> 00:09:32,880
see your certificate so

247
00:09:32,880 --> 00:09:36,080
show me your certificate and the user

248
00:09:36,080 --> 00:09:37,760
might say okay here's my certificate

249
00:09:37,760 --> 00:09:39,200
number 007

250
00:09:39,200 --> 00:09:41,200
but remember this is a privacy conscious

251
00:09:41,200 --> 00:09:42,560
user so again

252
00:09:42,560 --> 00:09:44,640
he is probably more likely to say i can

253
00:09:44,640 --> 00:09:46,720
tell you but then i'll have to kill you

254
00:09:46,720 --> 00:09:49,760
and why is that is because a certificate

255
00:09:49,760 --> 00:09:50,560
if you keep

256
00:09:50,560 --> 00:09:52,480
showing the same certificate everywhere

257
00:09:52,480 --> 00:09:53,600
you go

258
00:09:53,600 --> 00:09:56,560
it's linkable and so you reveal

259
00:09:56,560 --> 00:09:57,519
information

260
00:09:57,519 --> 00:10:00,560
about um so as

261
00:10:00,560 --> 00:10:02,560
as you keep using it you reveal a lot of

262
00:10:02,560 --> 00:10:04,880
information about yourself eventually

263
00:10:04,880 --> 00:10:06,720
you're not anonymous at all even if the

264
00:10:06,720 --> 00:10:08,399
certificate does not explicitly have

265
00:10:08,399 --> 00:10:09,760
your name on it

266
00:10:09,760 --> 00:10:12,720
so what the anonymous credentials uh

267
00:10:12,720 --> 00:10:13,680
allow you to do

268
00:10:13,680 --> 00:10:17,440
is to instead answer um

269
00:10:17,440 --> 00:10:19,360
sort of showing the credential and the

270
00:10:19,360 --> 00:10:21,680
clear the certificate in the clear

271
00:10:21,680 --> 00:10:23,360
you convince the verifier that you're

272
00:10:23,360 --> 00:10:25,120
authorized without revealing

273
00:10:25,120 --> 00:10:27,600
any other information and that's called

274
00:10:27,600 --> 00:10:29,120
the zero knowledge proof

275
00:10:29,120 --> 00:10:32,160
those of you who don't know so what's

276
00:10:32,160 --> 00:10:34,079
underneath this what's under the hood

277
00:10:34,079 --> 00:10:35,040
here

278
00:10:35,040 --> 00:10:37,839
is um a cryptographic commitment scheme

279
00:10:37,839 --> 00:10:39,920
and a digital signature scheme

280
00:10:39,920 --> 00:10:42,880
um and there are three protocols that

281
00:10:42,880 --> 00:10:44,320
that are necessary for this

282
00:10:44,320 --> 00:10:47,279
vision to uh to fit together there needs

283
00:10:47,279 --> 00:10:48,240
to be

284
00:10:48,240 --> 00:10:50,560
a robust and by that i mean fairly

285
00:10:50,560 --> 00:10:52,240
efficient it's your knowledge proof of

286
00:10:52,240 --> 00:10:53,120
knowledge over qual

287
00:10:53,120 --> 00:10:55,360
and the quality of community values

288
00:10:55,360 --> 00:10:57,200
secure party protocol for signing a

289
00:10:57,200 --> 00:10:58,560
committed value

290
00:10:58,560 --> 00:11:01,760
and another robust deficient zero

291
00:11:01,760 --> 00:11:02,880
knowledge proof of knowledge of a

292
00:11:02,880 --> 00:11:05,279
signature and a set of committed values

293
00:11:05,279 --> 00:11:07,440
okay are you with me i hope you're still

294
00:11:07,440 --> 00:11:08,480
with me

295
00:11:08,480 --> 00:11:10,560
um this medium is a little bit hard to

296
00:11:10,560 --> 00:11:12,399
gauge uh whether people love with me or

297
00:11:12,399 --> 00:11:13,360
not

298
00:11:13,360 --> 00:11:17,519
um so um

299
00:11:17,519 --> 00:11:19,200
so what do i mean by why do we need

300
00:11:19,200 --> 00:11:21,920
these uh these building blocks

301
00:11:21,920 --> 00:11:24,399
well here is what's what's kind of

302
00:11:24,399 --> 00:11:25,839
happening here

303
00:11:25,839 --> 00:11:28,240
um when the user wants to convince the

304
00:11:28,240 --> 00:11:29,360
verifier that

305
00:11:29,360 --> 00:11:33,120
that he does have a certificate

306
00:11:33,120 --> 00:11:36,000
he pres he conducts the zero knowledge

307
00:11:36,000 --> 00:11:36,480
proof

308
00:11:36,480 --> 00:11:38,480
here's a commitment to my identity or

309
00:11:38,480 --> 00:11:39,519
secret key

310
00:11:39,519 --> 00:11:41,440
and here is a zero knowledge proof of

311
00:11:41,440 --> 00:11:42,959
knowledge of

312
00:11:42,959 --> 00:11:45,519
the ca this is kind of a mutually

313
00:11:45,519 --> 00:11:46,720
trusted entity

314
00:11:46,720 --> 00:11:49,360
that the ca has signed whatever's inside

315
00:11:49,360 --> 00:11:50,560
the commitment

316
00:11:50,560 --> 00:11:52,959
and maybe the verify doesn't just want a

317
00:11:52,959 --> 00:11:54,480
certificate from the ca

318
00:11:54,480 --> 00:11:57,839
maybe in addition the verifier wants a

319
00:11:57,839 --> 00:11:59,680
certificate from another organization

320
00:11:59,680 --> 00:12:01,279
such as the iacr

321
00:12:01,279 --> 00:12:03,040
so then we're going to have three

322
00:12:03,040 --> 00:12:04,560
components there's a commitment to my

323
00:12:04,560 --> 00:12:06,800
identity or secret key

324
00:12:06,800 --> 00:12:09,680
there's a zero knowledge proof that the

325
00:12:09,680 --> 00:12:11,360
ca has signed the contents of the

326
00:12:11,360 --> 00:12:12,800
commitment and there's a zero-knowledge

327
00:12:12,800 --> 00:12:13,279
proof

328
00:12:13,279 --> 00:12:15,600
that the iacr has signed the context of

329
00:12:15,600 --> 00:12:17,680
the commitment

330
00:12:17,680 --> 00:12:19,680
and there's of course a lot of awesome

331
00:12:19,680 --> 00:12:20,800
theory stuff

332
00:12:20,800 --> 00:12:22,639
that makes all of this possible so

333
00:12:22,639 --> 00:12:24,800
there's nice cryptographic commitment

334
00:12:24,800 --> 00:12:25,839
schemes that

335
00:12:25,839 --> 00:12:28,240
lend themselves to these types of

336
00:12:28,240 --> 00:12:29,200
protocols

337
00:12:29,200 --> 00:12:30,959
there are specific signature schemes

338
00:12:30,959 --> 00:12:32,480
that work with them

339
00:12:32,480 --> 00:12:35,120
and uh a lot of this is stuff that i've

340
00:12:35,120 --> 00:12:36,399
worked on

341
00:12:36,399 --> 00:12:38,480
um there's so there's space there

342
00:12:38,480 --> 00:12:40,160
there's a signature scheme that's based

343
00:12:40,160 --> 00:12:41,760
on strong rsa there's

344
00:12:41,760 --> 00:12:42,959
other signature schemes that are based

345
00:12:42,959 --> 00:12:44,240
on the bilinear setting they're

346
00:12:44,240 --> 00:12:46,880
structure observing signatures etc

347
00:12:46,880 --> 00:12:48,880
um and there are lots of other

348
00:12:48,880 --> 00:12:50,480
additional features

349
00:12:50,480 --> 00:12:54,079
so this is where i am um because this is

350
00:12:54,079 --> 00:12:54,560
a

351
00:12:54,560 --> 00:12:56,880
zoom is a weird medium and i don't want

352
00:12:56,880 --> 00:12:58,800
you to have sensory overload

353
00:12:58,800 --> 00:13:01,920
i'm gonna um i'm gonna just talk through

354
00:13:01,920 --> 00:13:02,800
the features

355
00:13:02,800 --> 00:13:04,560
and then i'm gonna flash the slide with

356
00:13:04,560 --> 00:13:06,079
more with more

357
00:13:06,079 --> 00:13:09,279
words so that when you know if in case

358
00:13:09,279 --> 00:13:11,279
anybody wants to play back this uh the

359
00:13:11,279 --> 00:13:11,839
stock

360
00:13:11,839 --> 00:13:14,240
you can pause on this on the slide with

361
00:13:14,240 --> 00:13:15,279
more words

362
00:13:15,279 --> 00:13:16,480
first i'm going to talk through it and

363
00:13:16,480 --> 00:13:18,000
then i'm going to give you the words so

364
00:13:18,000 --> 00:13:19,440
that uh

365
00:13:19,440 --> 00:13:22,639
because the human brain can process um

366
00:13:22,639 --> 00:13:23,760
one thing at a time either you're

367
00:13:23,760 --> 00:13:25,040
reading or you're listening so i want

368
00:13:25,040 --> 00:13:26,399
you to be listening

369
00:13:26,399 --> 00:13:29,680
and then if you need to read i want you

370
00:13:29,680 --> 00:13:31,279
to pause and read

371
00:13:31,279 --> 00:13:33,519
if you want okay so what are the

372
00:13:33,519 --> 00:13:35,920
additional features in this framework

373
00:13:35,920 --> 00:13:38,800
um so you can incorporate attributes

374
00:13:38,800 --> 00:13:40,480
into credentials

375
00:13:40,480 --> 00:13:43,920
um such as for example date of birth

376
00:13:43,920 --> 00:13:47,279
or geographic attribute and then you can

377
00:13:47,279 --> 00:13:50,399
disclose them or not as you wish

378
00:13:50,399 --> 00:13:52,399
or you can disclose some property of

379
00:13:52,399 --> 00:13:53,839
your attribute

380
00:13:53,839 --> 00:13:56,639
such as for example the expiration date

381
00:13:56,639 --> 00:13:58,240
can be an attribute and you can disclose

382
00:13:58,240 --> 00:13:58,959
that your

383
00:13:58,959 --> 00:14:02,000
credential hasn't expired yet

384
00:14:02,000 --> 00:14:05,279
another feature is your

385
00:14:05,279 --> 00:14:07,040
credential certificates can be limited

386
00:14:07,040 --> 00:14:09,040
use so you can

387
00:14:09,040 --> 00:14:12,240
you can use it let's say if it's

388
00:14:12,240 --> 00:14:15,279
an electronic cash electronic wallet you

389
00:14:15,279 --> 00:14:16,720
withdraw ten dollars so

390
00:14:16,720 --> 00:14:18,240
and you can spend them one by one

391
00:14:18,240 --> 00:14:20,160
anonymously but once you've spent all

392
00:14:20,160 --> 00:14:20,480
ten

393
00:14:20,480 --> 00:14:22,480
you're done so that's limited use and

394
00:14:22,480 --> 00:14:24,079
how many times you can use

395
00:14:24,079 --> 00:14:26,160
or you can have e tokens which is

396
00:14:26,160 --> 00:14:27,920
limited use in this in the

397
00:14:27,920 --> 00:14:31,519
sense of how

398
00:14:31,519 --> 00:14:33,680
frequently you can use it so for example

399
00:14:33,680 --> 00:14:35,519
if it's a newspaper subscription

400
00:14:35,519 --> 00:14:38,720
perhaps it allows you to read up to 100

401
00:14:38,720 --> 00:14:41,199
100 articles a day but if you try to

402
00:14:41,199 --> 00:14:43,440
download more than that

403
00:14:43,440 --> 00:14:45,519
that's outside of your subscription um

404
00:14:45,519 --> 00:14:47,519
terms so you cannot do that

405
00:14:47,519 --> 00:14:50,639
anonymously uh so that's that's the

406
00:14:50,639 --> 00:14:51,760
sense in which you can

407
00:14:51,760 --> 00:14:54,160
limit how these credentials are used

408
00:14:54,160 --> 00:14:55,360
then there's something called

409
00:14:55,360 --> 00:14:58,320
the escrow which means that you are

410
00:14:58,320 --> 00:14:59,279
pretty much

411
00:14:59,279 --> 00:15:01,279
uh anonymous your privacy is pretty much

412
00:15:01,279 --> 00:15:03,040
respected but in some

413
00:15:03,040 --> 00:15:05,920
in in some transactions you might reveal

414
00:15:05,920 --> 00:15:06,320
the

415
00:15:06,320 --> 00:15:08,639
encryption of either your identity or of

416
00:15:08,639 --> 00:15:10,079
some of your attributes

417
00:15:10,079 --> 00:15:12,720
that can be decrypted in case of

418
00:15:12,720 --> 00:15:13,839
emergency

419
00:15:13,839 --> 00:15:15,760
and finally a very important feature is

420
00:15:15,760 --> 00:15:17,440
revocation

421
00:15:17,440 --> 00:15:19,120
so now i'm going to flash the slide with

422
00:15:19,120 --> 00:15:21,600
the more words but i'm not going to

423
00:15:21,600 --> 00:15:23,920
uh read it so this is this is this is

424
00:15:23,920 --> 00:15:25,279
for playback for the purposes of

425
00:15:25,279 --> 00:15:26,320
playback

426
00:15:26,320 --> 00:15:30,079
so this is my slide with more words

427
00:15:30,560 --> 00:15:34,399
so um so

428
00:15:34,399 --> 00:15:37,279
all of these features the reason i

429
00:15:37,279 --> 00:15:37,920
covered them

430
00:15:37,920 --> 00:15:39,759
is because they're helpful when we want

431
00:15:39,759 --> 00:15:42,000
to think about you know anonymity online

432
00:15:42,000 --> 00:15:42,639
is a little bit

433
00:15:42,639 --> 00:15:46,079
of a pandora's box and there are some

434
00:15:46,079 --> 00:15:48,320
arguments that that one might make

435
00:15:48,320 --> 00:15:49,600
against

436
00:15:49,600 --> 00:15:52,880
um using anonymous credentials against

437
00:15:52,880 --> 00:15:54,079
being anonymous online

438
00:15:54,079 --> 00:15:56,880
in the first place and um and those

439
00:15:56,880 --> 00:15:57,920
arguments are so

440
00:15:57,920 --> 00:15:59,920
specifically for credentials is that

441
00:15:59,920 --> 00:16:02,160
anonymity is an invitation for abuse

442
00:16:02,160 --> 00:16:03,920
for example ellis will share all of her

443
00:16:03,920 --> 00:16:05,440
credentials so

444
00:16:05,440 --> 00:16:07,600
it's not it's no longer meaningful like

445
00:16:07,600 --> 00:16:09,279
this credentials no longer saying this

446
00:16:09,279 --> 00:16:10,560
is an authorized user

447
00:16:10,560 --> 00:16:12,079
because she might share her credentials

448
00:16:12,079 --> 00:16:14,000
with all her friends and

449
00:16:14,000 --> 00:16:16,320
now they're not authorized users anymore

450
00:16:16,320 --> 00:16:18,160
so there are answers to to those

451
00:16:18,160 --> 00:16:19,040
questions

452
00:16:19,040 --> 00:16:20,720
that take advantage of those features

453
00:16:20,720 --> 00:16:22,880
that i just went over

454
00:16:22,880 --> 00:16:25,120
so first of all anonymity is not the

455
00:16:25,120 --> 00:16:27,279
issue any online credential is going to

456
00:16:27,279 --> 00:16:28,240
have

457
00:16:28,240 --> 00:16:31,519
this possibility of of being abused this

458
00:16:31,519 --> 00:16:32,639
way

459
00:16:32,639 --> 00:16:34,720
secondly this is where limited use

460
00:16:34,720 --> 00:16:36,720
credentials can help so that's a useful

461
00:16:36,720 --> 00:16:38,160
feature for

462
00:16:38,160 --> 00:16:38,910
um

463
00:16:38,910 --> 00:16:42,020
[Music]

464
00:16:42,880 --> 00:16:45,360
so revocation credentials if you're

465
00:16:45,360 --> 00:16:46,480
abusing your credential

466
00:16:46,480 --> 00:16:47,839
in the anonymous case you could be

467
00:16:47,839 --> 00:16:49,759
revoked just as well as a non-anonymous

468
00:16:49,759 --> 00:16:50,720
case

469
00:16:50,720 --> 00:16:54,240
and same you know then you can escrow

470
00:16:54,240 --> 00:16:56,079
alice's identity so if something goes

471
00:16:56,079 --> 00:16:57,519
wrong you can find out who she is or

472
00:16:57,519 --> 00:16:59,120
whatever it is you need to know to take

473
00:16:59,120 --> 00:16:59,920
action

474
00:16:59,920 --> 00:17:01,600
you make you can make her key too

475
00:17:01,600 --> 00:17:03,600
valuable to share

476
00:17:03,600 --> 00:17:05,919
you can also tie her secret key to some

477
00:17:05,919 --> 00:17:07,760
hardware so that it's not easy to to

478
00:17:07,760 --> 00:17:09,039
share

479
00:17:09,039 --> 00:17:12,559
so not so what all of the stuff that i

480
00:17:12,559 --> 00:17:13,520
just went over

481
00:17:13,520 --> 00:17:17,119
it isn't um it it's by now

482
00:17:17,119 --> 00:17:19,039
quite old and a lot of it has been

483
00:17:19,039 --> 00:17:20,400
implemented so

484
00:17:20,400 --> 00:17:22,559
for example direct anonymous attestation

485
00:17:22,559 --> 00:17:25,280
was adopted more than 15 years ago

486
00:17:25,280 --> 00:17:28,160
and it uses these elements um that i

487
00:17:28,160 --> 00:17:29,039
described

488
00:17:29,039 --> 00:17:33,039
in order for uh to attest

489
00:17:33,039 --> 00:17:36,720
to remote parties that your um

490
00:17:36,720 --> 00:17:39,919
that your machine um

491
00:17:39,919 --> 00:17:42,400
has this tpm is enhanced for the tpm

492
00:17:42,400 --> 00:17:43,760
then there's an implementation

493
00:17:43,760 --> 00:17:47,600
that the um jan kamenich and his group

494
00:17:47,600 --> 00:17:51,280
at ibm itamix is the

495
00:17:51,280 --> 00:17:53,919
is the implementation of cl signatures

496
00:17:53,919 --> 00:17:54,960
and

497
00:17:54,960 --> 00:17:56,720
various optimizations and features so a

498
00:17:56,720 --> 00:17:58,480
lot of what i covered is part of the

499
00:17:58,480 --> 00:18:00,559
itemx implementation and what isn't part

500
00:18:00,559 --> 00:18:01,679
of edemx

501
00:18:01,679 --> 00:18:04,160
is part of a project which is a

502
00:18:04,160 --> 00:18:06,080
consortium of many companies

503
00:18:06,080 --> 00:18:08,400
uh the hyperledger consortium they have

504
00:18:08,400 --> 00:18:09,120
um

505
00:18:09,120 --> 00:18:11,840
hyperlegiti and ursa implement these

506
00:18:11,840 --> 00:18:13,600
things so so there's code for this and

507
00:18:13,600 --> 00:18:15,760
also academic grade implementations and

508
00:18:15,760 --> 00:18:18,799
other efforts and of course i'm speeding

509
00:18:18,799 --> 00:18:19,120
up

510
00:18:19,120 --> 00:18:21,679
because i've only just barely covered

511
00:18:21,679 --> 00:18:23,919
the intro and i haven't quite gotten

512
00:18:23,919 --> 00:18:26,720
to and i'm only now finally ready to get

513
00:18:26,720 --> 00:18:28,240
to the punch line of what i

514
00:18:28,240 --> 00:18:30,880
actually want to say so all right so

515
00:18:30,880 --> 00:18:32,960
let's let's get to the punch line

516
00:18:32,960 --> 00:18:34,880
so the next question is what's been

517
00:18:34,880 --> 00:18:36,799
standardized so why are standards

518
00:18:36,799 --> 00:18:37,679
important

519
00:18:37,679 --> 00:18:40,559
well they're important because um if you

520
00:18:40,559 --> 00:18:42,400
want something used in practice

521
00:18:42,400 --> 00:18:46,000
you need to make sure that um

522
00:18:46,240 --> 00:18:48,080
that people understand how to use it

523
00:18:48,080 --> 00:18:49,679
there's interoperability and shared

524
00:18:49,679 --> 00:18:50,799
understanding

525
00:18:50,799 --> 00:18:53,679
and um there's the same api across

526
00:18:53,679 --> 00:18:55,360
different application scenarios

527
00:18:55,360 --> 00:18:56,960
so that people can use it without

528
00:18:56,960 --> 00:18:59,280
understanding all the crypto all the

529
00:18:59,280 --> 00:19:00,320
details

530
00:19:00,320 --> 00:19:03,520
so what's been standardized

531
00:19:03,520 --> 00:19:07,120
and uh now you can throw tomatoes at me

532
00:19:07,120 --> 00:19:10,160
because what's been what diced

533
00:19:10,160 --> 00:19:13,600
um these are our i if you if you're

534
00:19:13,600 --> 00:19:16,320
going to throw tomatoes at me i require

535
00:19:16,320 --> 00:19:19,440
organic local tomatoes so that's that's

536
00:19:19,440 --> 00:19:21,360
what you're getting in this picture

537
00:19:21,360 --> 00:19:26,160
um and don't stop at tomatoes

538
00:19:26,160 --> 00:19:29,120
uh you can also throw some eggs at me

539
00:19:29,120 --> 00:19:30,000
because

540
00:19:30,000 --> 00:19:32,480
i think that the way that we

541
00:19:32,480 --> 00:19:33,679
cryptographers

542
00:19:33,679 --> 00:19:36,320
think about anonymous credentials and

543
00:19:36,320 --> 00:19:39,360
this introduction that i just gave you

544
00:19:39,360 --> 00:19:41,760
into anonymous credentials is too

545
00:19:41,760 --> 00:19:44,320
complex for a reasonable standard

546
00:19:44,320 --> 00:19:46,480
so all the stuff that i just covered and

547
00:19:46,480 --> 00:19:48,480
i covered it in as high level as

548
00:19:48,480 --> 00:19:49,840
possible and and i

549
00:19:49,840 --> 00:19:52,880
and i tried to make it stable but it's

550
00:19:52,880 --> 00:19:55,280
too complex for a reasonable standard

551
00:19:55,280 --> 00:19:58,160
for somebody who isn't a cryptographer

552
00:19:58,160 --> 00:19:58,880
to understand

553
00:19:58,880 --> 00:20:01,679
what in the world i just talked about

554
00:20:01,679 --> 00:20:03,520
and

555
00:20:03,520 --> 00:20:06,559
make you know a yummy dish

556
00:20:06,559 --> 00:20:08,640
out of these tomatoes and eggs that you

557
00:20:08,640 --> 00:20:10,240
just virtually

558
00:20:10,240 --> 00:20:14,880
threw at me uh let me be more specific

559
00:20:14,880 --> 00:20:17,120
what i mean is that it would be nice if

560
00:20:17,120 --> 00:20:19,520
we could explain this privacy preserving

561
00:20:19,520 --> 00:20:20,480
authentication

562
00:20:20,480 --> 00:20:23,679
anonymous credentials without re

563
00:20:23,679 --> 00:20:25,919
requiring that that our listeners

564
00:20:25,919 --> 00:20:27,520
understand

565
00:20:27,520 --> 00:20:30,400
very complicated technical notions such

566
00:20:30,400 --> 00:20:31,919
as cryptographic commitments zero

567
00:20:31,919 --> 00:20:33,360
knowledge proofs and security party

568
00:20:33,360 --> 00:20:34,400
computation

569
00:20:34,400 --> 00:20:36,400
and we want to create apis that match

570
00:20:36,400 --> 00:20:38,559
this understanding so people can use it

571
00:20:38,559 --> 00:20:41,280
without having to get into the weeds

572
00:20:41,280 --> 00:20:43,760
every time that they use it

573
00:20:43,760 --> 00:20:47,919
um so and it would be nice if we could

574
00:20:47,919 --> 00:20:49,760
do this by building off of intuition

575
00:20:49,760 --> 00:20:50,400
that

576
00:20:50,400 --> 00:20:53,360
developers already have hopefully at

577
00:20:53,360 --> 00:20:53,760
least

578
00:20:53,760 --> 00:20:56,400
the ones that work in this area about

579
00:20:56,400 --> 00:20:59,520
standard digital signatures

580
00:20:59,520 --> 00:21:03,039
so okay so what's in a name

581
00:21:03,039 --> 00:21:04,720
um so we all know what anonymous

582
00:21:04,720 --> 00:21:07,360
credentials mean but by any other name

583
00:21:07,360 --> 00:21:10,159
they would be as sweet so let's

584
00:21:10,159 --> 00:21:11,520
experiment with giving

585
00:21:11,520 --> 00:21:13,919
anonymous credentials a different name

586
00:21:13,919 --> 00:21:16,799
and i want to build off of

587
00:21:16,799 --> 00:21:19,919
this other um construction that

588
00:21:19,919 --> 00:21:22,320
and that's a fairly recent terminology

589
00:21:22,320 --> 00:21:24,480
called mercurial signature scheme

590
00:21:24,480 --> 00:21:26,720
so what's the mercurial signature scheme

591
00:21:26,720 --> 00:21:29,600
um the name comes from my paper with a

592
00:21:29,600 --> 00:21:31,039
student liz kreitz

593
00:21:31,039 --> 00:21:32,640
i just happen to love working with

594
00:21:32,640 --> 00:21:34,799
people whose name starts with c

595
00:21:34,799 --> 00:21:37,840
last name starts with c um and it's

596
00:21:37,840 --> 00:21:40,240
it's an extension of something uh called

597
00:21:40,240 --> 00:21:41,039
um

598
00:21:41,039 --> 00:21:42,400
structure preserving signatures and

599
00:21:42,400 --> 00:21:44,400
equivalence classes that comes from a

600
00:21:44,400 --> 00:21:45,679
paper by

601
00:21:45,679 --> 00:21:47,640
um folks by our um

602
00:21:47,640 --> 00:21:49,120
[Music]

603
00:21:49,120 --> 00:21:53,919
who's h my bad uh

604
00:21:53,919 --> 00:21:58,000
i'm blanking on with age s is slamming

605
00:21:58,000 --> 00:22:01,120
from a few years ago and the idea here

606
00:22:01,120 --> 00:22:04,080
is that what is what gets signed is not

607
00:22:04,080 --> 00:22:04,480
just

608
00:22:04,480 --> 00:22:06,720
a single message but it is a

609
00:22:06,720 --> 00:22:09,039
representative of an equivalence class

610
00:22:09,039 --> 00:22:10,080
of messages

611
00:22:10,080 --> 00:22:13,039
so for if you have intuition for what a

612
00:22:13,039 --> 00:22:14,720
signature scheme is for the digit

613
00:22:14,720 --> 00:22:17,280
for the digital signature is then this

614
00:22:17,280 --> 00:22:17,840
is just

615
00:22:17,840 --> 00:22:20,400
a slight extension of this intuition so

616
00:22:20,400 --> 00:22:22,240
what's being signed is just to rep is a

617
00:22:22,240 --> 00:22:24,840
representative of an entire equivalence

618
00:22:24,840 --> 00:22:26,159
class

619
00:22:26,159 --> 00:22:28,240
so once you get one signature you can

620
00:22:28,240 --> 00:22:30,000
kind of translate it it

621
00:22:30,000 --> 00:22:34,080
becomes a signature of a related message

622
00:22:34,080 --> 00:22:36,480
and also under what public key so it's

623
00:22:36,480 --> 00:22:38,320
not just a single public key but it's a

624
00:22:38,320 --> 00:22:40,000
representative of an equivalence class

625
00:22:40,000 --> 00:22:43,360
of public keys so you can um

626
00:22:43,360 --> 00:22:44,960
if you have a signature under one of the

627
00:22:44,960 --> 00:22:47,120
public keys you can transform it into a

628
00:22:47,120 --> 00:22:48,480
signature on the same message

629
00:22:48,480 --> 00:22:50,960
the same class of messages but under a

630
00:22:50,960 --> 00:22:51,919
different

631
00:22:51,919 --> 00:22:54,720
a and i um an equivalent but different

632
00:22:54,720 --> 00:22:56,080
public key

633
00:22:56,080 --> 00:22:59,440
so why is that helpful

634
00:22:59,440 --> 00:23:01,440
well let's say that you know we have a

635
00:23:01,440 --> 00:23:03,039
user who goes to this verifier the

636
00:23:03,039 --> 00:23:05,760
verify says show me your certificate

637
00:23:05,760 --> 00:23:08,960
and the user says well

638
00:23:08,960 --> 00:23:10,400
he cannot say here's my certificate

639
00:23:10,400 --> 00:23:12,480
number 007 because

640
00:23:12,480 --> 00:23:15,760
remember that's um that's linkable

641
00:23:15,760 --> 00:23:18,640
so instead he uses this this equivalent

642
00:23:18,640 --> 00:23:20,000
class notion

643
00:23:20,000 --> 00:23:23,760
in order to find another representative

644
00:23:23,760 --> 00:23:24,320
so here

645
00:23:24,320 --> 00:23:25,840
so instead of just having one

646
00:23:25,840 --> 00:23:27,440
certificate he has a whole equivalence

647
00:23:27,440 --> 00:23:28,799
class of certificates

648
00:23:28,799 --> 00:23:30,960
and he gives the verifier a

649
00:23:30,960 --> 00:23:33,600
representative of that equivalence class

650
00:23:33,600 --> 00:23:36,400
and if you wanted to be privacy

651
00:23:36,400 --> 00:23:37,120
preserving

652
00:23:37,120 --> 00:23:40,240
we want to make sure that it is hard to

653
00:23:40,240 --> 00:23:42,400
to determine whether two certificates

654
00:23:42,400 --> 00:23:44,640
belong to the same equivalence class

655
00:23:44,640 --> 00:23:47,279
so now we are talking we're using

656
00:23:47,279 --> 00:23:48,480
language that doesn't

657
00:23:48,480 --> 00:23:50,080
doesn't include things like commitments

658
00:23:50,080 --> 00:23:51,760
and zero knowledge proofs but we're

659
00:23:51,760 --> 00:23:55,600
saying we're describing the same exact

660
00:23:55,600 --> 00:23:58,799
privacy requirements

661
00:24:00,080 --> 00:24:02,720
so how does a mercurial signature help

662
00:24:02,720 --> 00:24:03,600
here

663
00:24:03,600 --> 00:24:05,520
well let's say that you know we've

664
00:24:05,520 --> 00:24:06,799
established that this

665
00:24:06,799 --> 00:24:09,279
certification authority's key is this

666
00:24:09,279 --> 00:24:10,960
pkca

667
00:24:10,960 --> 00:24:12,960
the user says my public key is pk

668
00:24:12,960 --> 00:24:14,960
subuser my certificate

669
00:24:14,960 --> 00:24:18,159
is the ca signature on my public key

670
00:24:18,159 --> 00:24:20,799
now we can use my public key to what for

671
00:24:20,799 --> 00:24:22,240
whatever it is we need to use it for for

672
00:24:22,240 --> 00:24:25,200
example for tls

673
00:24:25,360 --> 00:24:28,400
um and next time i

674
00:24:28,400 --> 00:24:31,919
go to the same or different verifier

675
00:24:31,919 --> 00:24:35,200
i provide a different public key

676
00:24:35,200 --> 00:24:37,520
that is equivalent pk prime of the set

677
00:24:37,520 --> 00:24:39,120
for the same user

678
00:24:39,120 --> 00:24:42,960
and i compute for for this different but

679
00:24:42,960 --> 00:24:43,919
equivalent

680
00:24:43,919 --> 00:24:47,840
public key i compute a new certificate

681
00:24:47,840 --> 00:24:51,520
and i show that to the verifier

682
00:24:53,679 --> 00:24:56,880
and i can do that again and also we can

683
00:24:56,880 --> 00:24:58,000
include

684
00:24:58,000 --> 00:25:00,640
some attributes some identity attributes

685
00:25:00,640 --> 00:25:01,120
so

686
00:25:01,120 --> 00:25:04,240
here by inc i mean an encoding

687
00:25:04,240 --> 00:25:07,840
of uh attributes so maybe my signature

688
00:25:07,840 --> 00:25:08,559
is not just

689
00:25:08,559 --> 00:25:10,960
on my public key but also my attributes

690
00:25:10,960 --> 00:25:13,600
on sorry on an encoding of my attributes

691
00:25:13,600 --> 00:25:15,440
and i can show that and maybe i can do

692
00:25:15,440 --> 00:25:17,039
some selective disclosure on these

693
00:25:17,039 --> 00:25:18,720
attributes

694
00:25:18,720 --> 00:25:21,919
so to to

695
00:25:21,919 --> 00:25:24,799
dive a little bit into this mercurial

696
00:25:24,799 --> 00:25:26,840
signing business

697
00:25:26,840 --> 00:25:29,760
um so

698
00:25:29,760 --> 00:25:31,440
what gets signed in the anonymous

699
00:25:31,440 --> 00:25:32,799
credential

700
00:25:32,799 --> 00:25:35,919
is a user's public key and it

701
00:25:35,919 --> 00:25:38,159
may be let's let's say that that's known

702
00:25:38,159 --> 00:25:39,600
to the signer

703
00:25:39,600 --> 00:25:42,320
who is signing it and an encoding of

704
00:25:42,320 --> 00:25:44,720
this user's attributes

705
00:25:44,720 --> 00:25:47,520
and possibly encodings of some keys for

706
00:25:47,520 --> 00:25:50,159
conditional anonymity and revocation

707
00:25:50,159 --> 00:25:53,120
and so let's this notation end data

708
00:25:53,120 --> 00:25:53,760
let's

709
00:25:53,760 --> 00:25:57,039
uh let's mean it let's have it mean

710
00:25:57,039 --> 00:25:59,520
the encoding of all this data so all the

711
00:25:59,520 --> 00:26:00,640
attributes and keys

712
00:26:00,640 --> 00:26:02,240
so the encoding of your public key and

713
00:26:02,240 --> 00:26:04,960
the attributes and keys

714
00:26:04,960 --> 00:26:07,600
so what gets signed is an encoding of

715
00:26:07,600 --> 00:26:09,360
all this data

716
00:26:09,360 --> 00:26:11,039
and it isn't and the signer doesn't

717
00:26:11,039 --> 00:26:12,559
necessarily know

718
00:26:12,559 --> 00:26:14,960
what's the what this ink data is an

719
00:26:14,960 --> 00:26:16,559
encoding of perhaps there's some

720
00:26:16,559 --> 00:26:20,080
selective disclosure on that

721
00:26:20,880 --> 00:26:22,320
and what do i mean by equivalence

722
00:26:22,320 --> 00:26:24,000
classes of public keys

723
00:26:24,000 --> 00:26:26,559
well potentially two public keys can be

724
00:26:26,559 --> 00:26:27,760
equivalent if they have the same

725
00:26:27,760 --> 00:26:29,919
underlying secret key

726
00:26:29,919 --> 00:26:31,840
and in existing anonymous credential

727
00:26:31,840 --> 00:26:33,840
schemes it's it's usually pretty

728
00:26:33,840 --> 00:26:35,760
straightforward to see

729
00:26:35,760 --> 00:26:39,520
what that would entail and equivalence

730
00:26:39,520 --> 00:26:41,120
classes for what is signed for the

731
00:26:41,120 --> 00:26:43,360
messages that are signed

732
00:26:43,360 --> 00:26:46,880
um it's

733
00:26:46,880 --> 00:26:49,279
if we're assigning a public key and data

734
00:26:49,279 --> 00:26:50,159
together

735
00:26:50,159 --> 00:26:53,840
then um then two messages that assigned

736
00:26:53,840 --> 00:26:54,720
our equivalent

737
00:26:54,720 --> 00:26:56,240
if the public key components are

738
00:26:56,240 --> 00:26:58,400
equivalent and if the

739
00:26:58,400 --> 00:27:00,640
anc data is the encoding of the same

740
00:27:00,640 --> 00:27:01,760
data

741
00:27:01,760 --> 00:27:05,919
so with that um this uh

742
00:27:05,919 --> 00:27:07,440
hopefully makes sense so when the user

743
00:27:07,440 --> 00:27:08,960
comes to

744
00:27:08,960 --> 00:27:10,320
convince the verifier that he's

745
00:27:10,320 --> 00:27:12,559
authorized all he needs to do

746
00:27:12,559 --> 00:27:15,360
is he just picks another representative

747
00:27:15,360 --> 00:27:16,000
of his

748
00:27:16,000 --> 00:27:20,640
um of his certificate

749
00:27:20,640 --> 00:27:23,200
so here is kind of a little bit more of

750
00:27:23,200 --> 00:27:25,120
the input output specification and since

751
00:27:25,120 --> 00:27:26,960
i'm low on time i'm not going to spend

752
00:27:26,960 --> 00:27:28,640
a lot of time on this slide so this is

753
00:27:28,640 --> 00:27:30,399
another slide where you can

754
00:27:30,399 --> 00:27:33,760
um pause it uh if this is if you're

755
00:27:33,760 --> 00:27:34,399
viewing it

756
00:27:34,399 --> 00:27:37,279
as a recording um but the point is that

757
00:27:37,279 --> 00:27:38,080
if you are

758
00:27:38,080 --> 00:27:41,520
um if if we're doing a mercurial

759
00:27:41,520 --> 00:27:42,880
signature

760
00:27:42,880 --> 00:27:45,120
we can break up the signing algorithm

761
00:27:45,120 --> 00:27:46,720
into a pre-sign

762
00:27:46,720 --> 00:27:48,159
so that's the part that you do with the

763
00:27:48,159 --> 00:27:49,919
signer and you get some kind of a

764
00:27:49,919 --> 00:27:52,080
pre-signature s and then this

765
00:27:52,080 --> 00:27:53,440
pre-signature s

766
00:27:53,440 --> 00:27:55,039
allows you to compute an actual

767
00:27:55,039 --> 00:27:57,120
signature on any

768
00:27:57,120 --> 00:27:59,919
uh representative of your message class

769
00:27:59,919 --> 00:28:01,760
so once you have just a signature on

770
00:28:01,760 --> 00:28:03,120
what on your message m

771
00:28:03,120 --> 00:28:04,799
and there's some auxiliary information

772
00:28:04,799 --> 00:28:06,640
about about this m

773
00:28:06,640 --> 00:28:09,360
then you can transform it from this s

774
00:28:09,360 --> 00:28:10,880
you can compute a signature on

775
00:28:10,880 --> 00:28:13,039
any of the messages in your equivalence

776
00:28:13,039 --> 00:28:14,640
class meaning that

777
00:28:14,640 --> 00:28:17,520
you can get a certificate on any

778
00:28:17,520 --> 00:28:20,000
representation of your public key

779
00:28:20,000 --> 00:28:22,880
and an encoding of the same attributes

780
00:28:22,880 --> 00:28:24,080
that you got

781
00:28:24,080 --> 00:28:26,080
and then the verification algorithm just

782
00:28:26,080 --> 00:28:28,159
the standard

783
00:28:28,159 --> 00:28:30,559
signature verification algorithm and

784
00:28:30,559 --> 00:28:32,880
then optionally this this is part of the

785
00:28:32,880 --> 00:28:36,000
definition of a mercurial signatures um

786
00:28:36,000 --> 00:28:37,679
but for this way of thinking about

787
00:28:37,679 --> 00:28:39,440
anonymous essentials this is an optional

788
00:28:39,440 --> 00:28:40,240
component

789
00:28:40,240 --> 00:28:43,360
where you can convert a signature um

790
00:28:43,360 --> 00:28:45,200
from one public key to an equivalent

791
00:28:45,200 --> 00:28:46,960
public key

792
00:28:46,960 --> 00:28:50,159
okay and the signature scheme needs to

793
00:28:50,159 --> 00:28:51,120
satisfy

794
00:28:51,120 --> 00:28:52,960
security properties that are very very

795
00:28:52,960 --> 00:28:54,720
similar to just standard signature

796
00:28:54,720 --> 00:28:55,520
scheme

797
00:28:55,520 --> 00:28:57,760
so correctness is exactly the same so

798
00:28:57,760 --> 00:28:59,440
verify needs to accept things that are

799
00:28:59,440 --> 00:29:01,279
correctly computed

800
00:29:01,279 --> 00:29:04,720
um and unforgeability is very similar

801
00:29:04,720 --> 00:29:07,039
you have an adversary who can query the

802
00:29:07,039 --> 00:29:08,080
signer

803
00:29:08,080 --> 00:29:10,399
for message messages of his choice and

804
00:29:10,399 --> 00:29:11,840
he gets these pre-signatures

805
00:29:11,840 --> 00:29:14,640
s2 and then when he's done with that he

806
00:29:14,640 --> 00:29:15,279
wins

807
00:29:15,279 --> 00:29:17,440
if he can output an equivalent public

808
00:29:17,440 --> 00:29:18,399
key to the one

809
00:29:18,399 --> 00:29:21,840
under which he was challenged and um

810
00:29:21,840 --> 00:29:25,120
a signature on some message m that isn't

811
00:29:25,120 --> 00:29:26,080
equivalent to

812
00:29:26,080 --> 00:29:29,600
any of the messages that you queried um

813
00:29:29,600 --> 00:29:31,760
and of course it's class hiding so this

814
00:29:31,760 --> 00:29:34,000
this other very useful property

815
00:29:34,000 --> 00:29:37,120
is that um it is impossible to to

816
00:29:37,120 --> 00:29:38,320
determine whether

817
00:29:38,320 --> 00:29:40,640
a pair of messages come from the same

818
00:29:40,640 --> 00:29:42,159
equivalence class or a pair of public

819
00:29:42,159 --> 00:29:42,960
keys do

820
00:29:42,960 --> 00:29:44,480
so that's that's what gives us the

821
00:29:44,480 --> 00:29:46,159
privacy

822
00:29:46,159 --> 00:29:49,520
um so if we recast anonymous credentials

823
00:29:49,520 --> 00:29:51,679
in terms of mercurial signing

824
00:29:51,679 --> 00:29:54,960
then we can piggyback off of um

825
00:29:54,960 --> 00:29:57,279
people's intuition for signatures and

826
00:29:57,279 --> 00:29:59,600
for what equivalence classes are

827
00:29:59,600 --> 00:30:02,720
and this part so these uh three

828
00:30:02,720 --> 00:30:04,880
first three parts the setup the signing

829
00:30:04,880 --> 00:30:06,480
setup key generation

830
00:30:06,480 --> 00:30:08,960
signing algorithm verify all existing

831
00:30:08,960 --> 00:30:10,640
anonymous credential constructions

832
00:30:10,640 --> 00:30:13,279
already do this so now we don't have to

833
00:30:13,279 --> 00:30:15,840
talk about zero knowledge proofs

834
00:30:15,840 --> 00:30:17,840
now convertsig is very nice if you want

835
00:30:17,840 --> 00:30:19,279
to also be uh

836
00:30:19,279 --> 00:30:20,840
allow for delegateable anonymous

837
00:30:20,840 --> 00:30:22,320
credentials

838
00:30:22,320 --> 00:30:24,640
which mean which means that the user

839
00:30:24,640 --> 00:30:25,440
doesn't get

840
00:30:25,440 --> 00:30:28,399
a certificate directly from the top

841
00:30:28,399 --> 00:30:30,720
there's some chain of command

842
00:30:30,720 --> 00:30:34,559
and each link on the chain of command

843
00:30:34,559 --> 00:30:36,880
can delegate can use their credentials

844
00:30:36,880 --> 00:30:37,760
to deal to

845
00:30:37,760 --> 00:30:40,240
delegate capabilities to the next link

846
00:30:40,240 --> 00:30:41,120
in a way that

847
00:30:41,120 --> 00:30:44,240
um is privacy preserving as in

848
00:30:44,240 --> 00:30:47,279
when you get a credential this way you

849
00:30:47,279 --> 00:30:48,159
don't need to know who

850
00:30:48,159 --> 00:30:50,159
issued it to you you just know that they

851
00:30:50,159 --> 00:30:52,000
are authorized and that you got

852
00:30:52,000 --> 00:30:54,640
a valid uh certificate ayanna sorry to

853
00:30:54,640 --> 00:30:55,600
interrupt you but

854
00:30:55,600 --> 00:30:58,320
we're um one minute left in this talk

855
00:30:58,320 --> 00:30:59,919
good

856
00:30:59,919 --> 00:31:03,919
so um i guess i had a little bit more to

857
00:31:03,919 --> 00:31:06,159
say about delegatable credentials but

858
00:31:06,159 --> 00:31:09,200
um hopefully uh if you're following so

859
00:31:09,200 --> 00:31:09,840
far

860
00:31:09,840 --> 00:31:12,880
um now it means that

861
00:31:12,880 --> 00:31:15,919
the user has a credential chain that

862
00:31:15,919 --> 00:31:17,760
goes from the ca

863
00:31:17,760 --> 00:31:21,200
to the first um

864
00:31:21,200 --> 00:31:22,480
to the first person on the chain of

865
00:31:22,480 --> 00:31:24,960
command to the next one to the next one

866
00:31:24,960 --> 00:31:28,000
and if he has such a credential chain he

867
00:31:28,000 --> 00:31:28,720
can

868
00:31:28,720 --> 00:31:31,919
uh just pick another representative of

869
00:31:31,919 --> 00:31:33,519
the same equivalence class of

870
00:31:33,519 --> 00:31:37,039
credentials of certificates on each link

871
00:31:37,039 --> 00:31:38,799
next time he goes to a verifier so he

872
00:31:38,799 --> 00:31:40,559
can be unlinkable

873
00:31:40,559 --> 00:31:42,960
okay and another real world application

874
00:31:42,960 --> 00:31:43,679
of this

875
00:31:43,679 --> 00:31:46,159
delegation and that's actually something

876
00:31:46,159 --> 00:31:47,840
that i'm doing together with the company

877
00:31:47,840 --> 00:31:48,320
that i'm

878
00:31:48,320 --> 00:31:49,600
involved with called gradient

879
00:31:49,600 --> 00:31:51,519
technologies is

880
00:31:51,519 --> 00:31:55,279
you can you can use this to um to secure

881
00:31:55,279 --> 00:31:58,480
the um

882
00:31:59,360 --> 00:32:01,279
to secure applications as they are

883
00:32:01,279 --> 00:32:04,000
running on your computer or your device

884
00:32:04,000 --> 00:32:05,600
because what you can have is you can

885
00:32:05,600 --> 00:32:07,440
have a boot

886
00:32:07,440 --> 00:32:09,919
if you have every link of what what's

887
00:32:09,919 --> 00:32:11,440
happening on your device

888
00:32:11,440 --> 00:32:13,519
in doubt with a public key so you have a

889
00:32:13,519 --> 00:32:15,039
bootloader that boots your operating

890
00:32:15,039 --> 00:32:16,559
system that in turn

891
00:32:16,559 --> 00:32:19,519
calls an app and an app wants to certify

892
00:32:19,519 --> 00:32:20,320
a data

893
00:32:20,320 --> 00:32:23,600
to certify some data if your device

894
00:32:23,600 --> 00:32:25,760
is authenticated by some certification

895
00:32:25,760 --> 00:32:26,640
authority

896
00:32:26,640 --> 00:32:29,760
then you can have a credentialed

897
00:32:29,760 --> 00:32:32,399
on every link of this uh of this of this

898
00:32:32,399 --> 00:32:33,200
um

899
00:32:33,200 --> 00:32:36,240
at the station and so you know in the

900
00:32:36,240 --> 00:32:38,080
end that the data that comes out of this

901
00:32:38,080 --> 00:32:39,279
machine

902
00:32:39,279 --> 00:32:42,559
um you can have some some um

903
00:32:42,559 --> 00:32:46,159
confidence that it comes from a machine

904
00:32:46,159 --> 00:32:48,559
that has been that's like certified by

905
00:32:48,559 --> 00:32:50,720
some manufacturer for example

906
00:32:50,720 --> 00:32:54,000
that is running proper boot loader that

907
00:32:54,000 --> 00:32:55,760
loaded the correct version of an

908
00:32:55,760 --> 00:32:57,120
operating system not some hacked

909
00:32:57,120 --> 00:32:58,080
operating system

910
00:32:58,080 --> 00:33:00,559
and in turn the operating system is

911
00:33:00,559 --> 00:33:01,279
running an

912
00:33:01,279 --> 00:33:03,600
app that it knows what the app is it's

913
00:33:03,600 --> 00:33:04,799
not some rigged app

914
00:33:04,799 --> 00:33:07,840
and the app has certified the data um

915
00:33:07,840 --> 00:33:11,279
so this is a work in progress so now um

916
00:33:11,279 --> 00:33:12,480
just to kind of sum it up why i'm

917
00:33:12,480 --> 00:33:14,399
talking about mercurial signatures this

918
00:33:14,399 --> 00:33:14,880
is

919
00:33:14,880 --> 00:33:16,720
without convert sig this is just a

920
00:33:16,720 --> 00:33:18,559
renaming of anonymous credentials and a

921
00:33:18,559 --> 00:33:20,640
lot of candidates of implementations

922
00:33:20,640 --> 00:33:22,480
and with convert sig you get these other

923
00:33:22,480 --> 00:33:25,039
cool things that you do with delegation

924
00:33:25,039 --> 00:33:26,880
and we can do actually much better

925
00:33:26,880 --> 00:33:28,240
because unfortunately

926
00:33:28,240 --> 00:33:30,159
our existing mercurial signature

927
00:33:30,159 --> 00:33:32,159
construction with convert sig

928
00:33:32,159 --> 00:33:34,080
we can probably get much much better

929
00:33:34,080 --> 00:33:35,440
constructions

930
00:33:35,440 --> 00:33:37,760
and i won't get into detail so the

931
00:33:37,760 --> 00:33:39,679
conclusion so this this is what i really

932
00:33:39,679 --> 00:33:41,440
want to say is that we have um

933
00:33:41,440 --> 00:33:43,360
we have these wonderful foundations and

934
00:33:43,360 --> 00:33:44,480
really um

935
00:33:44,480 --> 00:33:46,159
powerful building blocks that allow us

936
00:33:46,159 --> 00:33:47,600
to get anonymous credentials with all

937
00:33:47,600 --> 00:33:49,679
kinds of cool features

938
00:33:49,679 --> 00:33:52,640
but what we need is a formulation of

939
00:33:52,640 --> 00:33:53,440
anonymous

940
00:33:53,440 --> 00:33:56,000
credentials that has the right level of

941
00:33:56,000 --> 00:33:56,799
abstraction

942
00:33:56,799 --> 00:34:00,399
and maybe mercurial signing is one such

943
00:34:00,399 --> 00:34:02,799
approach and there are a lot of open

944
00:34:02,799 --> 00:34:04,320
problems and i'm looking for phd

945
00:34:04,320 --> 00:34:05,600
students if you're interested in working

946
00:34:05,600 --> 00:34:06,559
on this

947
00:34:06,559 --> 00:34:08,639
and there's actually a lot of work to do

948
00:34:08,639 --> 00:34:11,040
for in for industry as well

949
00:34:11,040 --> 00:34:14,399
in kind of uh bringing this vision to

950
00:34:14,399 --> 00:34:17,119
fruition and i would love to talk to you

951
00:34:17,119 --> 00:34:18,399
if you want to take part in that

952
00:34:18,399 --> 00:34:21,359
too and in particular you know if you

953
00:34:21,359 --> 00:34:23,520
are uh looking for something

954
00:34:23,520 --> 00:34:25,199
for for some something exciting to do

955
00:34:25,199 --> 00:34:26,879
with this aha framework with the

956
00:34:26,879 --> 00:34:30,320
gradient i would be very excited to talk

957
00:34:30,320 --> 00:34:32,480
okay thank you so much anna we have a

958
00:34:32,480 --> 00:34:34,399
lot of questions for you in the chat

959
00:34:34,399 --> 00:34:37,359
but okay for time we will be moving on

960
00:34:37,359 --> 00:34:41,839
with the program thank you so much

