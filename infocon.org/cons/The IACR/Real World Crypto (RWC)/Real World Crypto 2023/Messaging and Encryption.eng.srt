1
00:00:00,000 --> 00:00:02,700
and encryption uh the first talk in our

2
00:00:02,700 --> 00:00:04,920
session this afternoon will be from

3
00:00:04,920 --> 00:00:07,919
Erica Portnoy who is a senior staff

4
00:00:07,919 --> 00:00:10,850
technologist at the eff

5
00:00:10,850 --> 00:00:19,440
[Music]

6
00:00:19,440 --> 00:00:22,230
ort hey

7
00:00:22,230 --> 00:00:28,140
[Music]

8
00:00:30,180 --> 00:00:33,660
hello everyone here welcome from lunch

9
00:00:33,660 --> 00:00:35,520
uh hopefully you'll be able to stay

10
00:00:35,520 --> 00:00:37,020
awake for this talk I'll try to keep it

11
00:00:37,020 --> 00:00:39,480
exciting so today I'm going to be

12
00:00:39,480 --> 00:00:41,280
talking about encryption policy and how

13
00:00:41,280 --> 00:00:43,200
it fits into the broader policy

14
00:00:43,200 --> 00:00:45,239
landscape and how that affects what we

15
00:00:45,239 --> 00:00:47,280
as engineers and cryptographers do and

16
00:00:47,280 --> 00:00:50,340
how we need to think about our work

17
00:00:50,340 --> 00:00:51,960
so we'll start by talking about

18
00:00:51,960 --> 00:00:54,180
authoritarianism and what that looks

19
00:00:54,180 --> 00:00:55,879
like when it's made into policy

20
00:00:55,879 --> 00:00:58,440
explaining how authoritarians create

21
00:00:58,440 --> 00:01:00,180
social control by restricting and

22
00:01:00,180 --> 00:01:01,800
criminalizing what they see as social

23
00:01:01,800 --> 00:01:04,080
deviants and how this is all done in the

24
00:01:04,080 --> 00:01:06,740
name of protecting children

25
00:01:06,740 --> 00:01:09,119
more explicitly limit access to the

26
00:01:09,119 --> 00:01:11,100
internet for kids and thereby control

27
00:01:11,100 --> 00:01:13,320
their access to their social life

28
00:01:13,320 --> 00:01:15,360
then we'll see where encryption comes in

29
00:01:15,360 --> 00:01:16,920
and how for those set on controlling

30
00:01:16,920 --> 00:01:18,840
things private messages have to be

31
00:01:18,840 --> 00:01:20,400
controlled as well

32
00:01:20,400 --> 00:01:21,720
and then we'll conclude with talking

33
00:01:21,720 --> 00:01:23,460
about why this all matters directly to

34
00:01:23,460 --> 00:01:25,380
us here in this room and what we can do

35
00:01:25,380 --> 00:01:27,119
about it

36
00:01:27,119 --> 00:01:29,040
now before we get into it uh you know

37
00:01:29,040 --> 00:01:30,600
this is a little different from some of

38
00:01:30,600 --> 00:01:32,100
the other talks we've heard these past

39
00:01:32,100 --> 00:01:33,780
couple of days in that I'm going to be

40
00:01:33,780 --> 00:01:35,220
talking about some hard topics and I'm

41
00:01:35,220 --> 00:01:36,299
not going to be offended if anybody

42
00:01:36,299 --> 00:01:37,979
needs to leave the room at the beginning

43
00:01:37,979 --> 00:01:40,140
or later or for any reason because I

44
00:01:40,140 --> 00:01:41,640
know this can be some hard things to

45
00:01:41,640 --> 00:01:43,259
hear about certainly I felt that while I

46
00:01:43,259 --> 00:01:45,420
was making the talk

47
00:01:45,420 --> 00:01:47,340
so we like I said we're going to start

48
00:01:47,340 --> 00:01:49,200
with talking about authoritarianism and

49
00:01:49,200 --> 00:01:50,579
what that looks like in practice when

50
00:01:50,579 --> 00:01:53,658
it's made into policy

51
00:01:55,680 --> 00:01:57,320
basically the thesis of the

52
00:01:57,320 --> 00:01:59,880
authoritarians is that deviants is the

53
00:01:59,880 --> 00:02:01,740
enemy of societal function

54
00:02:01,740 --> 00:02:03,720
therefore if you see any deviants out in

55
00:02:03,720 --> 00:02:05,100
the world you have to try to limit it

56
00:02:05,100 --> 00:02:06,840
and control it to keep your Society

57
00:02:06,840 --> 00:02:09,500
functioning

58
00:02:11,459 --> 00:02:12,660
in much of what we're seeing with

59
00:02:12,660 --> 00:02:14,760
authoritarianism today there's this

60
00:02:14,760 --> 00:02:16,980
belief that Society has gone mad and we

61
00:02:16,980 --> 00:02:18,660
have to protect the future by restoring

62
00:02:18,660 --> 00:02:20,459
control otherwise everything is going to

63
00:02:20,459 --> 00:02:22,080
be lost

64
00:02:22,080 --> 00:02:24,480
to be authoritarian fundamentally means

65
00:02:24,480 --> 00:02:26,160
believing that the authorities in charge

66
00:02:26,160 --> 00:02:28,020
are the ones who know that's best

67
00:02:28,020 --> 00:02:30,120
so as a consequence this can mean that

68
00:02:30,120 --> 00:02:32,040
law enforcement needs to have access to

69
00:02:32,040 --> 00:02:34,260
absolutely everything in all cases so

70
00:02:34,260 --> 00:02:35,640
that they can handle everything because

71
00:02:35,640 --> 00:02:37,319
they're the ones in charge

72
00:02:37,319 --> 00:02:38,940
even if it treads on other rights like

73
00:02:38,940 --> 00:02:40,080
privacy

74
00:02:40,080 --> 00:02:44,099
it can also apply in the more closed

75
00:02:44,099 --> 00:02:46,080
context in the sense of a family where

76
00:02:46,080 --> 00:02:47,459
the parents are the one who should have

77
00:02:47,459 --> 00:02:49,260
control over every aspect of their kids

78
00:02:49,260 --> 00:02:51,060
lives but they derive from the same

79
00:02:51,060 --> 00:02:54,860
fundamental underlying principles

80
00:02:56,060 --> 00:02:58,200
so what does this look like in practice

81
00:02:58,200 --> 00:03:01,319
when it turns into public policy and law

82
00:03:01,319 --> 00:03:02,580
I'm going to use some examples of

83
00:03:02,580 --> 00:03:04,319
anti-trans laws in the U.S because

84
00:03:04,319 --> 00:03:05,640
that's where I'm based so it's the ones

85
00:03:05,640 --> 00:03:07,019
that I know best

86
00:03:07,019 --> 00:03:09,300
and in the US we have seen things lately

87
00:03:09,300 --> 00:03:11,700
like Banning gender affirming care and

88
00:03:11,700 --> 00:03:13,440
criminalizing the doctors who provide it

89
00:03:13,440 --> 00:03:15,480
but also things like Banning drag in

90
00:03:15,480 --> 00:03:17,519
public and investigating parents who

91
00:03:17,519 --> 00:03:19,140
provide trans care to their kids as

92
00:03:19,140 --> 00:03:21,980
child abusers

93
00:03:22,200 --> 00:03:24,180
and it's not just a few States it's a

94
00:03:24,180 --> 00:03:26,280
widespread and growing problem

95
00:03:26,280 --> 00:03:28,019
I in fact had to update this slide

96
00:03:28,019 --> 00:03:29,640
between when I started making the talk

97
00:03:29,640 --> 00:03:32,159
and now because it changed so much just

98
00:03:32,159 --> 00:03:34,080
in that short time now a couple of the

99
00:03:34,080 --> 00:03:35,400
states did get better going into the

100
00:03:35,400 --> 00:03:37,920
more blue category but uh unfortunately

101
00:03:37,920 --> 00:03:40,980
three of them got redder thank you to

102
00:03:40,980 --> 00:03:43,560
Texas for being some of the worst ones

103
00:03:43,560 --> 00:03:44,700
out there but actually thank you to

104
00:03:44,700 --> 00:03:46,739
Minnesota for having great laws

105
00:03:46,739 --> 00:03:48,720
providing refugees that happen pretty

106
00:03:48,720 --> 00:03:51,440
recently as well

107
00:03:51,480 --> 00:03:53,220
so we can start to see how this is

108
00:03:53,220 --> 00:03:55,620
relevant to encryption by looking at how

109
00:03:55,620 --> 00:03:58,080
the proponents of these laws defend them

110
00:03:58,080 --> 00:03:59,340
physically it's often the classic

111
00:03:59,340 --> 00:04:02,099
protect the children line which in this

112
00:04:02,099 --> 00:04:04,940
case here this quote becomes the phrase

113
00:04:04,940 --> 00:04:07,379
gender-confused vulnerable children

114
00:04:07,379 --> 00:04:09,420
it would be humorously absurd if it

115
00:04:09,420 --> 00:04:12,980
weren't so effective as rhetoric

116
00:04:14,280 --> 00:04:16,380
and it is in fact just rhetoric that

117
00:04:16,380 --> 00:04:17,279
they're using it's not like they

118
00:04:17,279 --> 00:04:18,660
actually believe that they're protecting

119
00:04:18,660 --> 00:04:20,519
these confused children or anything this

120
00:04:20,519 --> 00:04:21,779
is a quote from someone who used to be

121
00:04:21,779 --> 00:04:23,160
involved in the movement but then got

122
00:04:23,160 --> 00:04:25,199
out of it talking about how protecting

123
00:04:25,199 --> 00:04:26,940
the children is very explicitly within

124
00:04:26,940 --> 00:04:28,919
the community known to be a front for

125
00:04:28,919 --> 00:04:30,840
damaging the trans Community when in

126
00:04:30,840 --> 00:04:32,160
fact really they just want to do as much

127
00:04:32,160 --> 00:04:35,540
damage to the community as they can

128
00:04:36,060 --> 00:04:37,620
and different authoritarian movements

129
00:04:37,620 --> 00:04:39,780
are directly connected so just when

130
00:04:39,780 --> 00:04:40,919
you're talking about anti-trans

131
00:04:40,919 --> 00:04:42,180
movements you can see that they're

132
00:04:42,180 --> 00:04:43,199
connected to things like the

133
00:04:43,199 --> 00:04:45,000
anti-abortionment movement as well by

134
00:04:45,000 --> 00:04:46,919
looking at the people behind them it's

135
00:04:46,919 --> 00:04:48,600
literally the same exact groups who are

136
00:04:48,600 --> 00:04:50,699
forefronting these movements some of the

137
00:04:50,699 --> 00:04:52,680
classic ones are the alliance defending

138
00:04:52,680 --> 00:04:54,300
freedom and the misleadingly named

139
00:04:54,300 --> 00:04:56,100
American College of Pediatricians which

140
00:04:56,100 --> 00:04:58,500
is nothing to do with the best practices

141
00:04:58,500 --> 00:05:00,240
for pediatricians

142
00:05:00,240 --> 00:05:02,220
uh and the anti-abortion laws have been

143
00:05:02,220 --> 00:05:04,320
spreading rapidly as well since Roe v

144
00:05:04,320 --> 00:05:05,820
Wade was just overturned last year so

145
00:05:05,820 --> 00:05:07,320
all of these places that have

146
00:05:07,320 --> 00:05:08,940
restrictive anti-abortion laws managed

147
00:05:08,940 --> 00:05:11,220
to do this in just over a year which is

148
00:05:11,220 --> 00:05:13,880
ridiculously fast

149
00:05:13,880 --> 00:05:16,919
and anti-abortion is also pretty digital

150
00:05:16,919 --> 00:05:19,800
too already and even in just one year

151
00:05:19,800 --> 00:05:21,960
they're even further ahead of the

152
00:05:21,960 --> 00:05:24,180
anti-trans laws in terms of restricting

153
00:05:24,180 --> 00:05:26,280
access to information so we could start

154
00:05:26,280 --> 00:05:28,380
to see how these policies impinge on the

155
00:05:28,380 --> 00:05:30,180
digital sphere in practice

156
00:05:30,180 --> 00:05:32,580
in Texas like I mentioned before they

157
00:05:32,580 --> 00:05:35,240
have this ridiculous Bounty Hunter law

158
00:05:35,240 --> 00:05:37,560
where not just having or performing

159
00:05:37,560 --> 00:05:39,660
abortions but even aiding them makes you

160
00:05:39,660 --> 00:05:41,940
a Target to be sued that includes

161
00:05:41,940 --> 00:05:43,979
providing basic educational resources

162
00:05:43,979 --> 00:05:46,620
sharing information identifying

163
00:05:46,620 --> 00:05:48,600
locations of clinics arranging rides and

164
00:05:48,600 --> 00:05:50,520
escorts fundraising to support

165
00:05:50,520 --> 00:05:51,960
Reproductive Rights or even just

166
00:05:51,960 --> 00:05:54,300
encouraging women to get abortions all

167
00:05:54,300 --> 00:05:56,340
of these can get you sued in Texas even

168
00:05:56,340 --> 00:05:57,660
if you didn't actually manage to help

169
00:05:57,660 --> 00:06:00,800
someone get an abortion

170
00:06:01,320 --> 00:06:03,120
now I've drawn these examples from the

171
00:06:03,120 --> 00:06:05,160
US where I live but it's of course

172
00:06:05,160 --> 00:06:07,259
happening outside as well so to pick on

173
00:06:07,259 --> 00:06:10,320
Hungary we can look at this law that

174
00:06:10,320 --> 00:06:13,199
they pass that lets lgbtq content be

175
00:06:13,199 --> 00:06:15,120
linked directly to child abuse in the

176
00:06:15,120 --> 00:06:17,280
law rather than just in the rhetoric so

177
00:06:17,280 --> 00:06:20,039
in 2021 Hungary passed this law saying

178
00:06:20,039 --> 00:06:22,020
that you can't show miners any content

179
00:06:22,020 --> 00:06:24,419
portraying being gay or transgender and

180
00:06:24,419 --> 00:06:25,800
the way they did it is they stuck it

181
00:06:25,800 --> 00:06:27,960
into an amendment to a bill fighting

182
00:06:27,960 --> 00:06:29,880
child abuse more generally

183
00:06:29,880 --> 00:06:31,500
so when you're charged with reading a

184
00:06:31,500 --> 00:06:33,240
children's book about a trans unicorn or

185
00:06:33,240 --> 00:06:35,100
whatever the law that you'll be charged

186
00:06:35,100 --> 00:06:37,080
under is actually a child abuse law

187
00:06:37,080 --> 00:06:39,539
rather than something specific to being

188
00:06:39,539 --> 00:06:41,900
queer

189
00:06:42,060 --> 00:06:43,560
yeah so this is some pretty horrible

190
00:06:43,560 --> 00:06:45,120
stuff happening in the world that I know

191
00:06:45,120 --> 00:06:47,100
when I was looking into a lot of the

192
00:06:47,100 --> 00:06:48,360
details to repair this made me pretty

193
00:06:48,360 --> 00:06:50,039
stressed so just take a little breather

194
00:06:50,039 --> 00:06:52,020
here take a second uh look at my very

195
00:06:52,020 --> 00:06:52,979
cute bunny

196
00:06:52,979 --> 00:06:54,479
wow she's great

197
00:06:54,479 --> 00:06:57,479
and she's not doing anything horrible

198
00:06:57,479 --> 00:06:59,580
okay so we talked about this trend of

199
00:06:59,580 --> 00:07:00,780
authoritarians reigning in Social

200
00:07:00,780 --> 00:07:02,699
deviants and we started to talk about

201
00:07:02,699 --> 00:07:04,199
how this relates to kids in online

202
00:07:04,199 --> 00:07:06,539
content

203
00:07:06,539 --> 00:07:08,280
now we'll look at some pushes to more

204
00:07:08,280 --> 00:07:09,780
explicitly limit access to the internet

205
00:07:09,780 --> 00:07:12,240
for kids

206
00:07:12,240 --> 00:07:14,220
so why is the internet dangerous from an

207
00:07:14,220 --> 00:07:15,840
authoritarian perspective

208
00:07:15,840 --> 00:07:17,520
basically it's because the internet is

209
00:07:17,520 --> 00:07:19,800
where ideas spread it's both a social

210
00:07:19,800 --> 00:07:21,960
sphere and it provides access to

211
00:07:21,960 --> 00:07:23,099
information

212
00:07:23,099 --> 00:07:24,780
so you can keep kids in their Suburban

213
00:07:24,780 --> 00:07:26,400
home and ban books from schools and

214
00:07:26,400 --> 00:07:28,020
libraries but if they have internet

215
00:07:28,020 --> 00:07:29,819
access they'll still be doing things out

216
00:07:29,819 --> 00:07:31,620
there beyond your direct control which

217
00:07:31,620 --> 00:07:34,880
of course authoritarians hate

218
00:07:35,699 --> 00:07:38,220
and Direct Control is necessary from an

219
00:07:38,220 --> 00:07:40,440
authoritarian perspective and this is

220
00:07:40,440 --> 00:07:42,360
because authoritarians see children as

221
00:07:42,360 --> 00:07:44,460
objects of protection rather than fully

222
00:07:44,460 --> 00:07:47,580
formed subjects of Rights

223
00:07:47,580 --> 00:07:49,560
there's a lot of fear-mongering around

224
00:07:49,560 --> 00:07:51,240
the internet for kids and social media

225
00:07:51,240 --> 00:07:53,280
in particular but as with most moral

226
00:07:53,280 --> 00:07:55,560
parents it's mostly unfounded and it

227
00:07:55,560 --> 00:07:56,520
turns out the internet is actually

228
00:07:56,520 --> 00:07:58,740
mostly great for kids here's this Pew

229
00:07:58,740 --> 00:08:01,380
study from 2022 is just one example so

230
00:08:01,380 --> 00:08:03,479
for most kids the internet lets them

231
00:08:03,479 --> 00:08:05,520
connect to their friends show their

232
00:08:05,520 --> 00:08:07,560
creative side get support and feel

233
00:08:07,560 --> 00:08:08,880
accepted

234
00:08:08,880 --> 00:08:10,680
and you can imagine how it's even more

235
00:08:10,680 --> 00:08:12,360
important for kids who are marginalized

236
00:08:12,360 --> 00:08:13,740
or otherwise unwelcome in their daily

237
00:08:13,740 --> 00:08:16,319
lives to be able to have access to this

238
00:08:16,319 --> 00:08:18,479
sort of community

239
00:08:18,479 --> 00:08:20,400
the fear is driving the push to limit

240
00:08:20,400 --> 00:08:21,780
the internet for kids have the same

241
00:08:21,780 --> 00:08:23,280
underlying principles as the

242
00:08:23,280 --> 00:08:25,080
anti-abortion and anti-trans movements

243
00:08:25,080 --> 00:08:26,520
which is that the answer to everything

244
00:08:26,520 --> 00:08:29,520
is surveillance and control

245
00:08:29,520 --> 00:08:31,440
so now let's take a look at some of the

246
00:08:31,440 --> 00:08:33,120
proposals out there that are trying to

247
00:08:33,120 --> 00:08:35,520
implement this control

248
00:08:35,520 --> 00:08:37,200
these all tend to be horrible in a whole

249
00:08:37,200 --> 00:08:39,120
variety of ways beyond their underlying

250
00:08:39,120 --> 00:08:40,080
principles

251
00:08:40,080 --> 00:08:42,120
so the kids online safety act nearly

252
00:08:42,120 --> 00:08:43,979
made it into a must pass package last

253
00:08:43,979 --> 00:08:46,380
legislative session not only does it

254
00:08:46,380 --> 00:08:48,120
include over broad language about what

255
00:08:48,120 --> 00:08:50,339
it limits for kids using this line other

256
00:08:50,339 --> 00:08:52,140
matters that pose a risk to physical and

257
00:08:52,140 --> 00:08:54,060
mental health of a minor it lets

258
00:08:54,060 --> 00:08:56,040
individual states decide what falls into

259
00:08:56,040 --> 00:08:57,720
that category

260
00:08:57,720 --> 00:08:59,459
even beyond what we saw in the last

261
00:08:59,459 --> 00:09:00,899
section about how states are quickly

262
00:09:00,899 --> 00:09:02,399
moving to limit trans and abortion

263
00:09:02,399 --> 00:09:03,420
rights

264
00:09:03,420 --> 00:09:05,040
especially worrying when you consider

265
00:09:05,040 --> 00:09:06,839
that one of the sponsors of the bill has

266
00:09:06,839 --> 00:09:08,220
referred to education about race

267
00:09:08,220 --> 00:09:10,080
discrimination as being dangerous for

268
00:09:10,080 --> 00:09:12,260
kids

269
00:09:14,000 --> 00:09:16,740
then there's a bunch of State bills that

270
00:09:16,740 --> 00:09:18,600
instead use the tactic of giving parents

271
00:09:18,600 --> 00:09:19,920
or Guardians excessive and direct

272
00:09:19,920 --> 00:09:21,720
control over their kids online

273
00:09:21,720 --> 00:09:24,000
experience with the Utah one being the

274
00:09:24,000 --> 00:09:25,920
worst of them now this bill is wild

275
00:09:25,920 --> 00:09:28,440
first of all kids can mean anyone under

276
00:09:28,440 --> 00:09:30,480
18. so you have the 17 year old who's

277
00:09:30,480 --> 00:09:32,880
being subject to these laws and the

278
00:09:32,880 --> 00:09:34,800
limitations that they require impose are

279
00:09:34,800 --> 00:09:37,260
ridiculous so a 17 year old under this

280
00:09:37,260 --> 00:09:39,000
law would not be able to use the

281
00:09:39,000 --> 00:09:41,140
internet after 10 30 pm

282
00:09:41,140 --> 00:09:43,800
[Laughter]

283
00:09:43,800 --> 00:09:45,480
and if kids want to have an online

284
00:09:45,480 --> 00:09:47,580
account on most websites the bill

285
00:09:47,580 --> 00:09:49,140
requires that the parents be given the

286
00:09:49,140 --> 00:09:50,160
password

287
00:09:50,160 --> 00:09:52,920
and of course to implement this and it

288
00:09:52,920 --> 00:09:54,839
includes an age verification requirement

289
00:09:54,839 --> 00:09:56,700
so you can't just lie about your age on

290
00:09:56,700 --> 00:09:58,260
the internet as people have been doing

291
00:09:58,260 --> 00:10:01,279
since the dawn of time

292
00:10:01,279 --> 00:10:03,779
and instead you have to trust these

293
00:10:03,779 --> 00:10:05,339
companies that you say are causing harm

294
00:10:05,339 --> 00:10:07,800
and have privacy problems with the kids

295
00:10:07,800 --> 00:10:10,380
in identification information so you

296
00:10:10,380 --> 00:10:11,880
know it's a little silly for them to be

297
00:10:11,880 --> 00:10:13,500
doing this in the first place

298
00:10:13,500 --> 00:10:15,959
uh these are only a couple other pulses

299
00:10:15,959 --> 00:10:16,980
out there and these are the ones that

300
00:10:16,980 --> 00:10:18,779
don't directly touch on encryption which

301
00:10:18,779 --> 00:10:21,920
we'll look at more in the next section

302
00:10:22,260 --> 00:10:23,640
in case you're exhausted by all these

303
00:10:23,640 --> 00:10:27,500
laws I know somebody who relates

304
00:10:30,899 --> 00:10:33,060
okay so if you want to have social

305
00:10:33,060 --> 00:10:35,279
control you're restrict and criminalize

306
00:10:35,279 --> 00:10:37,140
what you see as social deviants often in

307
00:10:37,140 --> 00:10:39,240
the name of kids and then go on to limit

308
00:10:39,240 --> 00:10:40,920
access to information for kids more

309
00:10:40,920 --> 00:10:42,899
directly

310
00:10:42,899 --> 00:10:44,700
but now we get to where encryption comes

311
00:10:44,700 --> 00:10:45,480
in

312
00:10:45,480 --> 00:10:47,040
if you're set on controlling things

313
00:10:47,040 --> 00:10:49,079
surely the private messages must be

314
00:10:49,079 --> 00:10:51,739
controlled as well

315
00:10:52,040 --> 00:10:55,260
so how can we let messages be private on

316
00:10:55,260 --> 00:10:56,700
controlled space when they might Harbor

317
00:10:56,700 --> 00:10:59,040
content that's dangerous for children or

318
00:10:59,040 --> 00:11:02,540
to society as large at Large

319
00:11:02,820 --> 00:11:04,500
now of course attacking private messages

320
00:11:04,500 --> 00:11:06,600
is not anything new

321
00:11:06,600 --> 00:11:08,100
since encryption is what allows messages

322
00:11:08,100 --> 00:11:10,380
to be truly private encryption is the

323
00:11:10,380 --> 00:11:12,060
part of it that gets targeted

324
00:11:12,060 --> 00:11:13,500
since encryption is knowledge and

325
00:11:13,500 --> 00:11:15,600
knowledge is power encryption takes

326
00:11:15,600 --> 00:11:17,399
power away from authorities and so

327
00:11:17,399 --> 00:11:19,140
therefore encryption is inherently

328
00:11:19,140 --> 00:11:22,140
anti-authoritarian

329
00:11:24,180 --> 00:11:25,980
storied history of the crypto Wars

330
00:11:25,980 --> 00:11:27,959
authorities usually can't just come out

331
00:11:27,959 --> 00:11:29,640
and say that they want to backdoor

332
00:11:29,640 --> 00:11:30,720
encryption

333
00:11:30,720 --> 00:11:32,640
so instead they'll find the best excuse

334
00:11:32,640 --> 00:11:34,980
that they have which today means

335
00:11:34,980 --> 00:11:36,959
focusing on stopping online child abuse

336
00:11:36,959 --> 00:11:38,940
as they claim

337
00:11:38,940 --> 00:11:41,040
but something that anyone who works on

338
00:11:41,040 --> 00:11:42,959
child abuse knows is that nearly all

339
00:11:42,959 --> 00:11:44,940
cases the abuse is perpetrated by

340
00:11:44,940 --> 00:11:47,339
someone the child already knows

341
00:11:47,339 --> 00:11:50,220
so for it to make sense at all to come

342
00:11:50,220 --> 00:11:52,620
after encryption proposals really have

343
00:11:52,620 --> 00:11:54,839
to focus narrowly on the re-sharing of

344
00:11:54,839 --> 00:11:56,760
child sexual abuse material otherwise

345
00:11:56,760 --> 00:11:58,260
known as csam

346
00:11:58,260 --> 00:12:00,060
because no logical and foreign person

347
00:12:00,060 --> 00:12:02,040
looking at abuse more broadly who isn't

348
00:12:02,040 --> 00:12:03,240
already starting from an

349
00:12:03,240 --> 00:12:05,279
encryption-focused perspective could

350
00:12:05,279 --> 00:12:06,959
possibly understand how this abuse is

351
00:12:06,959 --> 00:12:08,579
perpetrated and then a decide to go

352
00:12:08,579 --> 00:12:11,540
after encryption of all things

353
00:12:11,540 --> 00:12:13,800
and young people themselves don't want

354
00:12:13,800 --> 00:12:15,600
this surveillance as an answer

355
00:12:15,600 --> 00:12:18,000
when you consider kids as fully formed

356
00:12:18,000 --> 00:12:19,560
subjects of Rights

357
00:12:19,560 --> 00:12:21,060
you might start to ask what kids

358
00:12:21,060 --> 00:12:22,920
themselves think and that is exactly

359
00:12:22,920 --> 00:12:24,899
what European digital rights did they

360
00:12:24,899 --> 00:12:27,120
interviewed 8 000 teenagers in 13 U.S

361
00:12:27,120 --> 00:12:29,399
countries EU countries and they found

362
00:12:29,399 --> 00:12:30,899
that the kids themselves don't want

363
00:12:30,899 --> 00:12:32,700
government scanning even if it's to

364
00:12:32,700 --> 00:12:34,440
prevent child abuse

365
00:12:34,440 --> 00:12:36,480
the kids they surveyed said they

366
00:12:36,480 --> 00:12:37,500
wouldn't be comfortable being

367
00:12:37,500 --> 00:12:39,180
politically active or exploring their

368
00:12:39,180 --> 00:12:41,339
sexuality if authorities were monitoring

369
00:12:41,339 --> 00:12:43,500
their digital Communications

370
00:12:43,500 --> 00:12:45,300
so even though the law might want to

371
00:12:45,300 --> 00:12:46,920
Target child abuse by adding

372
00:12:46,920 --> 00:12:48,060
surveillance they're effectively

373
00:12:48,060 --> 00:12:50,279
chilling political activity and sexual

374
00:12:50,279 --> 00:12:52,320
exploration which again is going to make

375
00:12:52,320 --> 00:12:55,639
authoritarians very happy

376
00:12:57,019 --> 00:12:59,339
but don't worry they'll say these days

377
00:12:59,339 --> 00:13:02,040
we're not even breaking encryption

378
00:13:02,040 --> 00:13:03,720
you might trace the strength back to the

379
00:13:03,720 --> 00:13:05,700
2015 speech which asks for encryption

380
00:13:05,700 --> 00:13:07,800
front doors but the first major proposal

381
00:13:07,800 --> 00:13:10,079
of this sort was the UK's ghost proposal

382
00:13:10,079 --> 00:13:12,060
in 2019 which would basically add your

383
00:13:12,060 --> 00:13:13,860
surveillor as a secret silent extra

384
00:13:13,860 --> 00:13:15,540
group child member

385
00:13:15,540 --> 00:13:17,579
pretty Patel was the Home Secretary at

386
00:13:17,579 --> 00:13:19,740
the time but given a changeover in the

387
00:13:19,740 --> 00:13:22,139
UK this is a graphics a little out of

388
00:13:22,139 --> 00:13:23,700
date

389
00:13:23,700 --> 00:13:25,500
um anyway so thinking that this doesn't

390
00:13:25,500 --> 00:13:27,839
break encryption is a fallacy arising

391
00:13:27,839 --> 00:13:30,120
from poorly defined endpoints and if

392
00:13:30,120 --> 00:13:31,260
you're interested in more rigorous

393
00:13:31,260 --> 00:13:32,940
treatment of it you could see the paper

394
00:13:32,940 --> 00:13:36,060
on end-to-end encryption which you can

395
00:13:36,060 --> 00:13:38,279
find on eprim

396
00:13:38,279 --> 00:13:40,079
but for an intuitive understanding of

397
00:13:40,079 --> 00:13:41,820
why this breaks encryption you can think

398
00:13:41,820 --> 00:13:44,399
about user expectations

399
00:13:44,399 --> 00:13:46,560
in a securely encrypted system no one

400
00:13:46,560 --> 00:13:48,360
but you or your intended recipients

401
00:13:48,360 --> 00:13:49,800
should be able to read or make

402
00:13:49,800 --> 00:13:52,680
inferences on the messages you send

403
00:13:52,680 --> 00:13:54,240
things like the ghost proposal or

404
00:13:54,240 --> 00:13:55,800
today's common client-side scanning

405
00:13:55,800 --> 00:13:57,720
proposals which do the scanning before

406
00:13:57,720 --> 00:13:59,519
messages leave the device the device

407
00:13:59,519 --> 00:14:03,180
break that expectation

408
00:14:03,800 --> 00:14:06,779
foreign but lawmakers of course don't

409
00:14:06,779 --> 00:14:08,519
care and are going ahead and mandating

410
00:14:08,519 --> 00:14:10,680
this stuff anyway

411
00:14:10,680 --> 00:14:13,019
the UK wants to scan everything and

412
00:14:13,019 --> 00:14:14,220
furthermore they want to also

413
00:14:14,220 --> 00:14:15,720
criminalize sending messages even

414
00:14:15,720 --> 00:14:18,839
intended to cause psychological harm

415
00:14:18,839 --> 00:14:21,540
even if no harm was actually caused in

416
00:14:21,540 --> 00:14:23,160
the UK as long as there was a risk it

417
00:14:23,160 --> 00:14:24,600
might have you still might get two years

418
00:14:24,600 --> 00:14:26,220
jail time

419
00:14:26,220 --> 00:14:28,440
not only do websites have to proactively

420
00:14:28,440 --> 00:14:30,720
prevent harmful content they have to use

421
00:14:30,720 --> 00:14:32,820
officially government-approved software

422
00:14:32,820 --> 00:14:34,680
to do the scanning

423
00:14:34,680 --> 00:14:36,779
now if you've heard of this bill these

424
00:14:36,779 --> 00:14:37,800
are probably the parts that you've heard

425
00:14:37,800 --> 00:14:41,279
of but this bill is so extensive that

426
00:14:41,279 --> 00:14:43,139
while they were at it they also created

427
00:14:43,139 --> 00:14:44,760
this a new offense where you might get a

428
00:14:44,760 --> 00:14:46,560
year in jail for lying online which

429
00:14:46,560 --> 00:14:49,579
wasn't even the top story

430
00:14:50,519 --> 00:14:53,220
the EU also wants to scan everything but

431
00:14:53,220 --> 00:14:54,839
in the EU they focus more on detecting

432
00:14:54,839 --> 00:14:56,040
things we don't actually have the

433
00:14:56,040 --> 00:14:58,680
technology to detect

434
00:14:58,680 --> 00:15:00,720
in addition to requiring private content

435
00:15:00,720 --> 00:15:03,000
scanning the EU child sexual abuse

436
00:15:03,000 --> 00:15:04,680
regulation commonly known as chat

437
00:15:04,680 --> 00:15:06,899
control would make websites proactively

438
00:15:06,899 --> 00:15:09,120
try to find previously unseen abusive

439
00:15:09,120 --> 00:15:10,680
content

440
00:15:10,680 --> 00:15:13,079
plus it wants websites to use AI to look

441
00:15:13,079 --> 00:15:15,060
at message threads and determine if the

442
00:15:15,060 --> 00:15:16,440
conversation involves grooming for

443
00:15:16,440 --> 00:15:19,079
future child abuse again focusing on

444
00:15:19,079 --> 00:15:20,639
this stranger danger

445
00:15:20,639 --> 00:15:22,320
fear instead of looking at the vast

446
00:15:22,320 --> 00:15:24,480
majority of cases of grooming that are

447
00:15:24,480 --> 00:15:25,860
perpetrated by someone the kid already

448
00:15:25,860 --> 00:15:28,339
knows

449
00:15:30,540 --> 00:15:32,820
of course the U.S won't be left out they

450
00:15:32,820 --> 00:15:34,560
want to scan everything too

451
00:15:34,560 --> 00:15:36,959
under this law the fact that you support

452
00:15:36,959 --> 00:15:39,540
encryption at all on your service can be

453
00:15:39,540 --> 00:15:41,399
used as evidence against you and they're

454
00:15:41,399 --> 00:15:42,779
not even pretending to be okay with

455
00:15:42,779 --> 00:15:44,940
encryption here the sponsors of this

456
00:15:44,940 --> 00:15:46,380
bill have just come out and said they

457
00:15:46,380 --> 00:15:47,699
don't want encryption to be a get out of

458
00:15:47,699 --> 00:15:50,420
jail free card

459
00:15:51,959 --> 00:15:54,300
they all want to mandate this despite

460
00:15:54,300 --> 00:15:56,459
the technology barely even working for

461
00:15:56,459 --> 00:15:58,320
the already narrow types of child abuse

462
00:15:58,320 --> 00:16:00,060
cases it might even theoretically work

463
00:16:00,060 --> 00:16:01,800
for

464
00:16:01,800 --> 00:16:03,720
these reports that get made have tons of

465
00:16:03,720 --> 00:16:04,980
false positives

466
00:16:04,980 --> 00:16:06,899
Facebook found that three-quarters of

467
00:16:06,899 --> 00:16:08,339
reports are things like bad jokes

468
00:16:08,339 --> 00:16:10,260
LinkedIn found that only a third of

469
00:16:10,260 --> 00:16:12,720
their reports were actually CSM and even

470
00:16:12,720 --> 00:16:14,519
the confirmed reports are rarely acted

471
00:16:14,519 --> 00:16:15,240
on

472
00:16:15,240 --> 00:16:17,519
a 2020 report from Ireland showed that

473
00:16:17,519 --> 00:16:19,320
only 10 percent are even actionable in

474
00:16:19,320 --> 00:16:21,420
the first place and those don't even all

475
00:16:21,420 --> 00:16:23,639
get followed up on

476
00:16:23,639 --> 00:16:25,500
so it's not like getting more reports by

477
00:16:25,500 --> 00:16:27,120
breaking encryption increasing the size

478
00:16:27,120 --> 00:16:29,660
of the haystack is going to help things

479
00:16:29,660 --> 00:16:32,760
and like a 2022 New York Times article

480
00:16:32,760 --> 00:16:34,800
showed talk where they were talking

481
00:16:34,800 --> 00:16:36,120
about a couple of fathers falsely

482
00:16:36,120 --> 00:16:37,620
flagged as child abusers because they

483
00:16:37,620 --> 00:16:39,120
sent medical pictures of their kids to

484
00:16:39,120 --> 00:16:41,279
their doctors these false positives can

485
00:16:41,279 --> 00:16:43,019
have a giant effect on your online

486
00:16:43,019 --> 00:16:46,019
social effect life that lasts and lasts

487
00:16:46,019 --> 00:16:47,459
and that's because companies cannot

488
00:16:47,459 --> 00:16:50,399
afford to take this risk of being shown

489
00:16:50,399 --> 00:16:52,680
not to be harsh enough against any of

490
00:16:52,680 --> 00:16:55,620
the positives that they flag because the

491
00:16:55,620 --> 00:16:58,519
laws are so harsh

492
00:16:58,860 --> 00:17:01,100
yeah

493
00:17:01,100 --> 00:17:03,779
so earlier we talked about all the

494
00:17:03,779 --> 00:17:05,099
different types of social deviants that

495
00:17:05,099 --> 00:17:07,020
authoritarian insert against

496
00:17:07,020 --> 00:17:09,480
these anti-encryption bills often

497
00:17:09,480 --> 00:17:11,160
mandate scanning only for csam in

498
00:17:11,160 --> 00:17:13,439
particular but it's naive to think that

499
00:17:13,439 --> 00:17:15,839
authoritarians won't see this technology

500
00:17:15,839 --> 00:17:18,240
see that it's already deployed and

501
00:17:18,240 --> 00:17:19,799
mandate scanning for broader varieties

502
00:17:19,799 --> 00:17:21,059
of content

503
00:17:21,059 --> 00:17:23,220
we know it because we've already seen it

504
00:17:23,220 --> 00:17:24,839
happen

505
00:17:24,839 --> 00:17:26,459
the technology that was originally

506
00:17:26,459 --> 00:17:28,620
developed to scan for csam is already

507
00:17:28,620 --> 00:17:30,360
today being used to scan for terrorist

508
00:17:30,360 --> 00:17:32,720
content and when a place considers

509
00:17:32,720 --> 00:17:35,640
wearing drag akin to terrorism or child

510
00:17:35,640 --> 00:17:37,200
abuse and there's this technology

511
00:17:37,200 --> 00:17:38,880
available they're not going to have any

512
00:17:38,880 --> 00:17:40,799
qualms about mandating those scans as

513
00:17:40,799 --> 00:17:42,960
well instead of just relying on Empower

514
00:17:42,960 --> 00:17:45,660
bounty hunters to report their neighbors

515
00:17:45,660 --> 00:17:48,240
even more directly the term grooming has

516
00:17:48,240 --> 00:17:49,919
already been used to attack queer adults

517
00:17:49,919 --> 00:17:51,900
so when laws pass that allow scanning

518
00:17:51,900 --> 00:17:53,520
for grooming you can see how they'll be

519
00:17:53,520 --> 00:17:54,960
interpreted to scan for queer content

520
00:17:54,960 --> 00:17:58,380
online as well super easily

521
00:17:58,380 --> 00:18:00,120
see I gotta be skeptical of the utility

522
00:18:00,120 --> 00:18:02,400
of any of these proposals

523
00:18:02,400 --> 00:18:03,360
okay

524
00:18:03,360 --> 00:18:04,799
so we've talked about what the laws are

525
00:18:04,799 --> 00:18:07,380
and what's driving them

526
00:18:07,380 --> 00:18:09,299
now let's talk about why this matters to

527
00:18:09,299 --> 00:18:11,220
us here in this room and what we're

528
00:18:11,220 --> 00:18:14,059
going to do about it

529
00:18:15,360 --> 00:18:17,220
so the first thing to keep in mind is

530
00:18:17,220 --> 00:18:18,840
you can't assume any of these proposals

531
00:18:18,840 --> 00:18:20,520
are made in good faith

532
00:18:20,520 --> 00:18:22,440
therefore these proposals don't deserve

533
00:18:22,440 --> 00:18:23,700
your efforts in trying to make everyone

534
00:18:23,700 --> 00:18:25,740
happy split the difference and you know

535
00:18:25,740 --> 00:18:27,059
let them have their surveillance and

536
00:18:27,059 --> 00:18:30,139
have their encryption too

537
00:18:31,620 --> 00:18:33,660
so a myth that I often hear is if we

538
00:18:33,660 --> 00:18:35,940
don't offer a less bad alternative we'll

539
00:18:35,940 --> 00:18:38,039
just do the worst possible thing I am

540
00:18:38,039 --> 00:18:39,539
here to tell you backed up by my crack

541
00:18:39,539 --> 00:18:41,820
team of legislative analysis and legal

542
00:18:41,820 --> 00:18:42,780
experts

543
00:18:42,780 --> 00:18:44,520
that is just not true

544
00:18:44,520 --> 00:18:46,559
that is not how this works

545
00:18:46,559 --> 00:18:48,000
things that are important to basic

546
00:18:48,000 --> 00:18:49,980
rights can in fact be uncompromisingly

547
00:18:49,980 --> 00:18:53,160
protective protected

548
00:18:53,160 --> 00:18:55,200
just because policy makers don't like

549
00:18:55,200 --> 00:18:57,059
hearing just don't legislate that

550
00:18:57,059 --> 00:18:58,200
doesn't mean it's not the right answer

551
00:18:58,200 --> 00:18:59,940
and it doesn't mean that we can't get

552
00:18:59,940 --> 00:19:02,100
that result it is in fact possible to

553
00:19:02,100 --> 00:19:03,780
convince a lawmaker of something and it

554
00:19:03,780 --> 00:19:05,760
happens all the time so for example

555
00:19:05,760 --> 00:19:07,559
there could be somebody out there who

556
00:19:07,559 --> 00:19:10,799
thinks that we need to scan for csam but

557
00:19:10,799 --> 00:19:12,480
at the same time understands why you

558
00:19:12,480 --> 00:19:13,679
might not want to be scanning for

559
00:19:13,679 --> 00:19:15,660
abortion content so when you explain

560
00:19:15,660 --> 00:19:17,160
that it's the same technology that would

561
00:19:17,160 --> 00:19:18,660
be used for both of these things you can

562
00:19:18,660 --> 00:19:20,039
get them to back off

563
00:19:20,039 --> 00:19:21,299
and if they're telling you that you have

564
00:19:21,299 --> 00:19:23,100
to pick one they're taking advantage of

565
00:19:23,100 --> 00:19:25,200
you not knowing how the system works so

566
00:19:25,200 --> 00:19:27,419
learn how the system works and you won't

567
00:19:27,419 --> 00:19:30,799
be fooled into doing that

568
00:19:33,419 --> 00:19:35,340
okay now that we won't all get tricked

569
00:19:35,340 --> 00:19:36,419
into thinking that we need to design

570
00:19:36,419 --> 00:19:38,340
these things the next step is not

571
00:19:38,340 --> 00:19:40,080
getting nerds type do not let this be

572
00:19:40,080 --> 00:19:41,340
you

573
00:19:41,340 --> 00:19:43,380
now I know computation over encrypted

574
00:19:43,380 --> 00:19:46,200
data is very cool and very fun but when

575
00:19:46,200 --> 00:19:47,520
it's a back door that does not matter

576
00:19:47,520 --> 00:19:49,440
how fun it is it's still assessing

577
00:19:49,440 --> 00:19:51,179
private content and Reporting it to a

578
00:19:51,179 --> 00:19:54,179
third party which is breaking encryption

579
00:19:54,179 --> 00:19:55,620
so if you have to work on this topic

580
00:19:55,620 --> 00:19:57,600
because it's just so fun

581
00:19:57,600 --> 00:19:59,340
consider using it to limit rather than

582
00:19:59,340 --> 00:20:01,200
open access to data

583
00:20:01,200 --> 00:20:02,640
data that used to be sent in the clear

584
00:20:02,640 --> 00:20:04,260
but really needs to be computed on can

585
00:20:04,260 --> 00:20:06,419
now be encrypted rather than protected

586
00:20:06,419 --> 00:20:07,320
data

587
00:20:07,320 --> 00:20:09,720
being computed on and releasing more

588
00:20:09,720 --> 00:20:11,039
information out there

589
00:20:11,039 --> 00:20:12,660
or you can go do this work in another

590
00:20:12,660 --> 00:20:14,520
less sensitive field like Health Data or

591
00:20:14,520 --> 00:20:16,200
something to let researchers work on it

592
00:20:16,200 --> 00:20:18,179
but just don't design a system that will

593
00:20:18,179 --> 00:20:19,740
automatically reveal people's private

594
00:20:19,740 --> 00:20:21,539
information just because there's cool

595
00:20:21,539 --> 00:20:24,860
crypto involved in building it

596
00:20:25,940 --> 00:20:27,900
so for those of you building

597
00:20:27,900 --> 00:20:29,820
non-backdoored encryption first of all

598
00:20:29,820 --> 00:20:32,640
thank you but remember the old adage

599
00:20:32,640 --> 00:20:35,340
that done is better than perfect

600
00:20:35,340 --> 00:20:38,039
so it's politically easier to defend an

601
00:20:38,039 --> 00:20:39,419
encryption product that's already been

602
00:20:39,419 --> 00:20:42,299
shipped then try to add encryption later

603
00:20:42,299 --> 00:20:44,460
and if these laws pass it'll just get

604
00:20:44,460 --> 00:20:46,500
even harder

605
00:20:46,500 --> 00:20:48,419
just be sure when you're doing this not

606
00:20:48,419 --> 00:20:51,360
to make over broad claims about your

607
00:20:51,360 --> 00:20:52,860
encryption protections that can get

608
00:20:52,860 --> 00:20:54,539
yours in trouble when they rely on them

609
00:20:54,539 --> 00:20:56,640
and expect higher encryption than you

610
00:20:56,640 --> 00:20:57,900
actually offer

611
00:20:57,900 --> 00:20:59,340
but if you can get something out the

612
00:20:59,340 --> 00:21:02,840
door ASAP do that

613
00:21:06,419 --> 00:21:08,160
okay so if there's one slide in this

614
00:21:08,160 --> 00:21:09,720
entire talk that I want you to remember

615
00:21:09,720 --> 00:21:12,059
it is this one right here

616
00:21:12,059 --> 00:21:14,280
remember it is not just what you work on

617
00:21:14,280 --> 00:21:15,960
it's how you talk about what you work on

618
00:21:15,960 --> 00:21:18,480
so this is a room here of people who

619
00:21:18,480 --> 00:21:20,340
understand subtlety and nuance and the

620
00:21:20,340 --> 00:21:22,860
details of security and encryption

621
00:21:22,860 --> 00:21:25,080
and the trade-offs involved in

622
00:21:25,080 --> 00:21:26,700
encryption like security and usability

623
00:21:26,700 --> 00:21:28,500
right that's why we're all here

624
00:21:28,500 --> 00:21:30,600
unfortunately politicians do not have

625
00:21:30,600 --> 00:21:31,740
that luxury

626
00:21:31,740 --> 00:21:33,539
they might work on encryption one day

627
00:21:33,539 --> 00:21:35,159
and standardized testing and

628
00:21:35,159 --> 00:21:37,380
requirements the next and even their

629
00:21:37,380 --> 00:21:39,000
technical staffers have to be more

630
00:21:39,000 --> 00:21:40,320
generalist so someone might be in charge

631
00:21:40,320 --> 00:21:42,480
of all of science policy they're doing

632
00:21:42,480 --> 00:21:44,280
the biology work and the encryption work

633
00:21:44,280 --> 00:21:45,720
at the same time

634
00:21:45,720 --> 00:21:47,580
so when they hear something like it is

635
00:21:47,580 --> 00:21:49,020
technically possible to build such a

636
00:21:49,020 --> 00:21:51,179
system they think great that means we

637
00:21:51,179 --> 00:21:53,820
can now legislate to require it

638
00:21:53,820 --> 00:21:55,500
the concept of it is technically

639
00:21:55,500 --> 00:21:57,360
possible but as such limitations that

640
00:21:57,360 --> 00:21:59,460
it's infeasible to ship it just doesn't

641
00:21:59,460 --> 00:22:00,720
exist for them you have to think about

642
00:22:00,720 --> 00:22:03,000
it like another language and in this

643
00:22:03,000 --> 00:22:04,380
language that they speak they don't have

644
00:22:04,380 --> 00:22:06,179
time for these long phrases so if you

645
00:22:06,179 --> 00:22:07,559
want to say that in their language what

646
00:22:07,559 --> 00:22:09,600
you say instead is a single word it's

647
00:22:09,600 --> 00:22:10,860
impossible

648
00:22:10,860 --> 00:22:12,600
and I know that's not like technically

649
00:22:12,600 --> 00:22:15,179
accurate but it hurts a little less if

650
00:22:15,179 --> 00:22:16,500
you think about it just speaking a

651
00:22:16,500 --> 00:22:18,120
little language and the words in this

652
00:22:18,120 --> 00:22:21,120
other language have this other meaning

653
00:22:21,120 --> 00:22:23,159
it's hard to do but it's really

654
00:22:23,159 --> 00:22:25,640
necessary

655
00:22:26,400 --> 00:22:28,320
and speaking this language fluently

656
00:22:28,320 --> 00:22:30,299
matters because we are the ones that

657
00:22:30,299 --> 00:22:31,440
they look to

658
00:22:31,440 --> 00:22:33,299
to answer these questions

659
00:22:33,299 --> 00:22:35,220
so it's not just that we need to say it

660
00:22:35,220 --> 00:22:37,140
right we do need to be out there saying

661
00:22:37,140 --> 00:22:38,820
it at all

662
00:22:38,820 --> 00:22:39,840
just because they don't understand

663
00:22:39,840 --> 00:22:41,880
technology it will not stop them from

664
00:22:41,880 --> 00:22:44,820
legislating on it unfortunately

665
00:22:44,820 --> 00:22:46,559
so unless we make it clear that there's

666
00:22:46,559 --> 00:22:48,600
no way to nerd harder to make encryption

667
00:22:48,600 --> 00:22:50,340
back doors they're going to pass the

668
00:22:50,340 --> 00:22:52,200
laws to require them

669
00:22:52,200 --> 00:22:54,000
an easy way to speak up is through the

670
00:22:54,000 --> 00:22:56,159
eff Action Center whose link is on this

671
00:22:56,159 --> 00:22:56,880
slide

672
00:22:56,880 --> 00:22:58,260
where you can mention in your messages

673
00:22:58,260 --> 00:23:00,240
to Representatives that you work on

674
00:23:00,240 --> 00:23:02,760
these Technologies a harder but

675
00:23:02,760 --> 00:23:04,500
potentially more impactful way is to get

676
00:23:04,500 --> 00:23:07,500
your company to take a public stance

677
00:23:07,500 --> 00:23:09,240
but both of these are still less hard

678
00:23:09,240 --> 00:23:11,280
than being stuck in a complex regulatory

679
00:23:11,280 --> 00:23:12,840
framework where nobody knows what's

680
00:23:12,840 --> 00:23:14,520
illegal in the first place and so then

681
00:23:14,520 --> 00:23:16,320
your general counsel just says oh no we

682
00:23:16,320 --> 00:23:18,299
can't risk building this so if you want

683
00:23:18,299 --> 00:23:20,940
encryption to remain legal please let

684
00:23:20,940 --> 00:23:22,380
your voice be heard

685
00:23:22,380 --> 00:23:24,120
that's not easy

686
00:23:24,120 --> 00:23:25,980
but we haven't lost yet

687
00:23:25,980 --> 00:23:28,140
by speaking up now we can and will

688
00:23:28,140 --> 00:23:31,100
defend encryption

689
00:23:31,320 --> 00:23:33,659
and one more bonus way to help out is to

690
00:23:33,659 --> 00:23:35,460
enable eff's lawyers activists and

691
00:23:35,460 --> 00:23:37,320
technologists to defend encryption every

692
00:23:37,320 --> 00:23:39,960
day which you can do at this link here

693
00:23:39,960 --> 00:23:42,299
again I'm Eric Portnoy thank you for

694
00:23:42,299 --> 00:23:43,620
listening today and I think we have time

695
00:23:43,620 --> 00:23:45,150
for some questions

696
00:23:45,150 --> 00:23:55,350
[Applause]

697
00:23:55,350 --> 00:23:58,899
[Music]

698
00:24:02,220 --> 00:24:04,440
all right so one question to get us

699
00:24:04,440 --> 00:24:06,480
started uh you mentioned that it is

700
00:24:06,480 --> 00:24:09,780
easier to uh it's better sorry done is

701
00:24:09,780 --> 00:24:11,400
better than perfect it's good if we have

702
00:24:11,400 --> 00:24:13,080
things in now because it's harder to

703
00:24:13,080 --> 00:24:15,000
remove them later

704
00:24:15,000 --> 00:24:16,919
um so there are areas where you think we

705
00:24:16,919 --> 00:24:18,960
are missing uh pieces of encryption

706
00:24:18,960 --> 00:24:20,880
technology that we should be focusing on

707
00:24:20,880 --> 00:24:23,159
first

708
00:24:23,159 --> 00:24:24,840
I mean I feel like and some of them

709
00:24:24,840 --> 00:24:26,280
highlighted just improve

710
00:24:26,280 --> 00:24:28,860
in Prince conference uh there was a

711
00:24:28,860 --> 00:24:31,320
whole talk about how encrypting cloud

712
00:24:31,320 --> 00:24:33,960
backup storage is difficult right the

713
00:24:33,960 --> 00:24:35,940
mega talk I believe it was and so that's

714
00:24:35,940 --> 00:24:37,620
a big area of improvement that we can do

715
00:24:37,620 --> 00:24:39,299
it's hard but it's not impossible right

716
00:24:39,299 --> 00:24:40,679
if you look at the way that WhatsApp did

717
00:24:40,679 --> 00:24:43,140
it now Apple iCloud has their backups

718
00:24:43,140 --> 00:24:44,520
encrypted as well like these things are

719
00:24:44,520 --> 00:24:46,919
possible to do even if they're hard but

720
00:24:46,919 --> 00:24:48,539
now that there's more examples out there

721
00:24:48,539 --> 00:24:50,100
you don't have to design all of your ux

722
00:24:50,100 --> 00:24:51,419
from scratch so hopefully that should

723
00:24:51,419 --> 00:24:52,559
make it a little easier I think that's

724
00:24:52,559 --> 00:24:54,840
the next big area to look at is all

725
00:24:54,840 --> 00:24:57,659
these backups in the cloud yeah

726
00:24:57,659 --> 00:24:59,880
let me just go back a month slide I

727
00:24:59,880 --> 00:25:01,500
think or two slides before the rabbit

728
00:25:01,500 --> 00:25:03,539
probably

729
00:25:03,539 --> 00:25:05,100
uh one more

730
00:25:05,100 --> 00:25:07,080
I I was just going to just react to this

731
00:25:07,080 --> 00:25:08,400
I mean I totally understand where you're

732
00:25:08,400 --> 00:25:10,380
coming from but I just want to say that

733
00:25:10,380 --> 00:25:13,320
you know encouraging scientists to lie

734
00:25:13,320 --> 00:25:15,600
is very it's a very slippery slope and

735
00:25:15,600 --> 00:25:17,280
it's why in the U.S half the country no

736
00:25:17,280 --> 00:25:19,200
longer respects science so you just have

737
00:25:19,200 --> 00:25:20,400
to be very very careful with the

738
00:25:20,400 --> 00:25:22,740
messaging and and I I totally I

739
00:25:22,740 --> 00:25:24,120
understand what you said speaking a

740
00:25:24,120 --> 00:25:25,440
different language yeah I understand

741
00:25:25,440 --> 00:25:27,059
that but does everybody you know do

742
00:25:27,059 --> 00:25:28,620
non-scientists understand that and and

743
00:25:28,620 --> 00:25:30,480
it causes a lot of problems also well I

744
00:25:30,480 --> 00:25:31,500
mean you don't really have to think

745
00:25:31,500 --> 00:25:33,600
about it as lying per se right no you

746
00:25:33,600 --> 00:25:35,279
know but but with somebody listening to

747
00:25:35,279 --> 00:25:37,320
you think of it as lying it's only you

748
00:25:37,320 --> 00:25:40,080
know no it's only it's only lying uh if

749
00:25:40,080 --> 00:25:42,059
you don't you don't stand on

750
00:25:42,059 --> 00:25:44,159
all the said so it not just that you're

751
00:25:44,159 --> 00:25:46,140
saying each of these things in languages

752
00:25:46,140 --> 00:25:47,580
words of connotation so they have

753
00:25:47,580 --> 00:25:50,279
further meaning so impossible and

754
00:25:50,279 --> 00:25:51,480
infeasible

755
00:25:51,480 --> 00:25:53,760
in politicians speak are equivalent so

756
00:25:53,760 --> 00:25:55,140
if you're trying to say infeasible you

757
00:25:55,140 --> 00:25:57,000
need to say impossible because

758
00:25:57,000 --> 00:25:58,620
infeasible is just not the word that

759
00:25:58,620 --> 00:26:00,360
they use for that so impossible to build

760
00:26:00,360 --> 00:26:01,980
in the real world under these

761
00:26:01,980 --> 00:26:03,419
constraints

762
00:26:03,419 --> 00:26:06,240
that is it's just a shorter way of

763
00:26:06,240 --> 00:26:07,740
saying it it's an abbreviation rather

764
00:26:07,740 --> 00:26:09,720
than a lie I think I think the slide is

765
00:26:09,720 --> 00:26:11,400
fine but I'm worried where it goes five

766
00:26:11,400 --> 00:26:13,679
years from now uh yeah

767
00:26:13,679 --> 00:26:16,860
um I think these are not quite the

768
00:26:16,860 --> 00:26:19,140
dangerous there

769
00:26:19,140 --> 00:26:22,080
so my question is you mentioned about uh

770
00:26:22,080 --> 00:26:24,840
uh you know communicating effectively to

771
00:26:24,840 --> 00:26:26,940
the legislative process and how you know

772
00:26:26,940 --> 00:26:29,100
technology will be legislated like even

773
00:26:29,100 --> 00:26:31,500
in advance of that uh we've seen things

774
00:26:31,500 --> 00:26:35,100
like before you know Apple uh maintained

775
00:26:35,100 --> 00:26:37,320
the lack of end-to-end encryption for

776
00:26:37,320 --> 00:26:39,360
government uh at the at the governance

777
00:26:39,360 --> 00:26:42,140
request it was reported by Reuters and

778
00:26:42,140 --> 00:26:45,419
uh it's been reported widely that even

779
00:26:45,419 --> 00:26:47,340
with the end-to-end encryption backups

780
00:26:47,340 --> 00:26:50,580
for uh for WhatsApp that WhatsApp is

781
00:26:50,580 --> 00:26:52,740
still available for law enforcement

782
00:26:52,740 --> 00:26:53,700
surveillance even though it's

783
00:26:53,700 --> 00:26:55,679
theoretically and encrypted and we

784
00:26:55,679 --> 00:26:57,179
haven't seen any like backdoor

785
00:26:57,179 --> 00:27:00,240
legislation yet we've seen proposals and

786
00:27:00,240 --> 00:27:01,799
things like this but like do we really

787
00:27:01,799 --> 00:27:05,480
think that the biggest threat is from

788
00:27:05,480 --> 00:27:08,100
legislation versus the actual people

789
00:27:08,100 --> 00:27:09,960
implementing this today to enable

790
00:27:09,960 --> 00:27:11,880
surveillance inside of these companies

791
00:27:11,880 --> 00:27:13,919
that run these systems

792
00:27:13,919 --> 00:27:16,080
uh what do you mean by implementing it

793
00:27:16,080 --> 00:27:18,960
today like so like for example like you

794
00:27:18,960 --> 00:27:21,600
know iCloud has just recently announced

795
00:27:21,600 --> 00:27:23,880
an encryption but uh it's not it's off

796
00:27:23,880 --> 00:27:25,919
by default and the backups for

797
00:27:25,919 --> 00:27:27,779
historically have been maintained is not

798
00:27:27,779 --> 00:27:30,659
and encrypted to enable surveillance and

799
00:27:30,659 --> 00:27:34,620
WhatsApp uh is still available for

800
00:27:34,620 --> 00:27:36,120
surveillance to law enforcement even

801
00:27:36,120 --> 00:27:37,799
though it's theoretically and encrypted

802
00:27:37,799 --> 00:27:41,100
uh the same goes for iMessage and we've

803
00:27:41,100 --> 00:27:42,840
seen this like with you know the people

804
00:27:42,840 --> 00:27:44,580
that participate in prison for bulk or

805
00:27:44,580 --> 00:27:46,679
for targeted collection

806
00:27:46,679 --> 00:27:49,440
um these companies today are shipping

807
00:27:49,440 --> 00:27:52,020
what is headline news and then encrypted

808
00:27:52,020 --> 00:27:54,120
that is able to be surveilled by the

809
00:27:54,120 --> 00:27:57,179
state yeah I mean so I

810
00:27:57,179 --> 00:27:58,740
when you see those headlines right if

811
00:27:58,740 --> 00:28:00,659
you any time you look at the details it

812
00:28:00,659 --> 00:28:02,279
always ends up being like a targeted

813
00:28:02,279 --> 00:28:05,039
case and I feel like everybody

814
00:28:05,039 --> 00:28:06,299
understands that at the end of the day

815
00:28:06,299 --> 00:28:07,559
if you really want to get into one

816
00:28:07,559 --> 00:28:09,419
specific person's phone there's going to

817
00:28:09,419 --> 00:28:11,520
eventually be some way to do that but

818
00:28:11,520 --> 00:28:13,080
that's a very different situation from

819
00:28:13,080 --> 00:28:14,940
considering Mass surveillance certainly

820
00:28:14,940 --> 00:28:16,320
but like to use your example like you

821
00:28:16,320 --> 00:28:17,820
could Target all the abortion providers

822
00:28:17,820 --> 00:28:20,520
in in a city right like if the if the

823
00:28:20,520 --> 00:28:22,500
state can compel these people to to

824
00:28:22,500 --> 00:28:24,600
surveil what's quote unquote end to end

825
00:28:24,600 --> 00:28:26,520
then they can surveil anyone that the

826
00:28:26,520 --> 00:28:28,860
state decides that they deem undesirable

827
00:28:28,860 --> 00:28:30,480
right I mean but that's certainly much

828
00:28:30,480 --> 00:28:32,100
easier to do on an unencrypted service

829
00:28:32,100 --> 00:28:33,360
so we're talking about abortion right

830
00:28:33,360 --> 00:28:35,220
we've already seen that they requested

831
00:28:35,220 --> 00:28:38,220
Facebook Handover message so I think the

832
00:28:38,220 --> 00:28:39,960
danger is like from the implementers not

833
00:28:39,960 --> 00:28:41,940
from the state yeah I mean it's it's the

834
00:28:41,940 --> 00:28:43,559
scale of it right it's going to scale

835
00:28:43,559 --> 00:28:44,940
person by person when they do it and

836
00:28:44,940 --> 00:28:46,260
it's going to acquire a lot of work so

837
00:28:46,260 --> 00:28:48,179
you can't just have them require all the

838
00:28:48,179 --> 00:28:50,100
abortion providers to you know say hack

839
00:28:50,100 --> 00:28:51,480
all the abortion providers is very

840
00:28:51,480 --> 00:28:53,220
different from hack this one specific

841
00:28:53,220 --> 00:28:54,720
person and watch until they leave their

842
00:28:54,720 --> 00:28:56,340
laptop unintended right that requires a

843
00:28:56,340 --> 00:28:58,799
lot more effort and a lot more time uh

844
00:28:58,799 --> 00:29:00,900
and so I think the scale of it is really

845
00:29:00,900 --> 00:29:04,200
opening or something yeah hi uh great

846
00:29:04,200 --> 00:29:06,900
talk what do you say to the people who

847
00:29:06,900 --> 00:29:09,059
go this is nice but that's a completely

848
00:29:09,059 --> 00:29:11,640
extreme position we we can't do that you

849
00:29:11,640 --> 00:29:13,559
have to do something if that is a line

850
00:29:13,559 --> 00:29:16,260
of reasoning I hear frequently and I was

851
00:29:16,260 --> 00:29:18,120
curious if you have a sort of explicit

852
00:29:18,120 --> 00:29:19,320
yeah I mean the thing you have to

853
00:29:19,320 --> 00:29:20,659
understand about we have to do something

854
00:29:20,659 --> 00:29:25,140
is uh hiring in politics doesn't work

855
00:29:25,140 --> 00:29:27,720
like hiring in Tech or you know Academia

856
00:29:27,720 --> 00:29:29,279
or whatever the way you get hired in

857
00:29:29,279 --> 00:29:31,260
politics is you get elected and

858
00:29:31,260 --> 00:29:33,000
politicians to get reelected they need

859
00:29:33,000 --> 00:29:35,220
to be constantly seen to be doing things

860
00:29:35,220 --> 00:29:37,380
it doesn't really matter what the things

861
00:29:37,380 --> 00:29:38,399
are

862
00:29:38,399 --> 00:29:39,840
so you know when they're saying we have

863
00:29:39,840 --> 00:29:42,299
to do something you know it it doesn't

864
00:29:42,299 --> 00:29:43,320
mean we have to do something about

865
00:29:43,320 --> 00:29:44,940
encryption from their perspective they

866
00:29:44,940 --> 00:29:47,760
just have to keep doing things so like I

867
00:29:47,760 --> 00:29:49,380
feel like that's just a line they use

868
00:29:49,380 --> 00:29:51,299
you know so on the political side I

869
00:29:51,299 --> 00:29:52,500
agree with you but this is a question

870
00:29:52,500 --> 00:29:53,640
for the people who are working on the

871
00:29:53,640 --> 00:29:55,080
technical stuff the the backdoor

872
00:29:55,080 --> 00:29:56,820
encryption if you will right where it's

873
00:29:56,820 --> 00:29:57,899
like well great like there is this

874
00:29:57,899 --> 00:29:59,580
extremist positions of like me and you

875
00:29:59,580 --> 00:30:02,159
and the eff uh and then they're like but

876
00:30:02,159 --> 00:30:03,539
you know we have to deal with this stuff

877
00:30:03,539 --> 00:30:04,860
so we're not going to sit at the bottom

878
00:30:04,860 --> 00:30:07,020
left of that side there we're going to

879
00:30:07,020 --> 00:30:08,760
go somewhere else and I don't know what

880
00:30:08,760 --> 00:30:10,320
would you say to the room full of people

881
00:30:10,320 --> 00:30:12,179
with that opinion I mean it really

882
00:30:12,179 --> 00:30:13,620
depends why they're saying it right I

883
00:30:13,620 --> 00:30:14,820
feel like you have to look at why

884
00:30:14,820 --> 00:30:16,919
they're saying we must do something and

885
00:30:16,919 --> 00:30:18,659
that's where you know their arguments

886
00:30:18,659 --> 00:30:20,460
start to fall apart right what are what

887
00:30:20,460 --> 00:30:21,419
are they saying we have to do something

888
00:30:21,419 --> 00:30:23,159
about are they saying we really need

889
00:30:23,159 --> 00:30:24,539
this Mass surveillance system and we

890
00:30:24,539 --> 00:30:26,039
need to be able to get into everybody's

891
00:30:26,039 --> 00:30:28,140
phone on a whim or whatever there

892
00:30:28,140 --> 00:30:30,360
shouldn't be any if they're saying you

893
00:30:30,360 --> 00:30:32,520
know I feel like I think it is a very

894
00:30:32,520 --> 00:30:34,140
specific answer to the person who's

895
00:30:34,140 --> 00:30:35,220
saying something

896
00:30:35,220 --> 00:30:37,559
but to be a little generalist here when

897
00:30:37,559 --> 00:30:38,880
they're saying that they're saying it

898
00:30:38,880 --> 00:30:40,620
because you know they want access to

899
00:30:40,620 --> 00:30:42,000
everything everywhere

900
00:30:42,000 --> 00:30:43,500
and they think that they should be able

901
00:30:43,500 --> 00:30:44,940
to access all of that but that is not

902
00:30:44,940 --> 00:30:46,740
how societies are constructed right we

903
00:30:46,740 --> 00:30:48,120
have the social contract there are

904
00:30:48,120 --> 00:30:49,500
limits that we place on the authorities

905
00:30:49,500 --> 00:30:51,419
even if it means that we don't have a

906
00:30:51,419 --> 00:30:52,740
perfect policing right that's that's

907
00:30:52,740 --> 00:30:54,659
when you become a police state right yes

908
00:30:54,659 --> 00:30:55,919
we have the Fourth Amendment you can't

909
00:30:55,919 --> 00:30:57,600
just go into somebody's home willy-nilly

910
00:30:57,600 --> 00:30:59,820
in any second right there's restrictions

911
00:30:59,820 --> 00:31:01,860
and limitations around this and we as a

912
00:31:01,860 --> 00:31:03,600
society accept that we are going to have

913
00:31:03,600 --> 00:31:05,700
these restrictions and limitations to be

914
00:31:05,700 --> 00:31:07,020
able to preserve some of the Civil

915
00:31:07,020 --> 00:31:08,039
Rights

916
00:31:08,039 --> 00:31:09,659
so when they say oh we have to do

917
00:31:09,659 --> 00:31:10,919
something we have to be able to get into

918
00:31:10,919 --> 00:31:12,840
it that's you know it's that's a

919
00:31:12,840 --> 00:31:14,520
rhetoric they use to like convince you

920
00:31:14,520 --> 00:31:16,559
but it's not

921
00:31:16,559 --> 00:31:18,539
it's not the contract that we've made as

922
00:31:18,539 --> 00:31:21,240
a society thank you

923
00:31:21,240 --> 00:31:22,740
I'm afraid we've run out of time so

924
00:31:22,740 --> 00:31:25,020
please join me in thinking Erica again

925
00:31:25,020 --> 00:31:28,580
[Applause]

926
00:31:28,580 --> 00:31:31,760
[Music]

927
00:31:32,820 --> 00:31:35,159
our next speakers will be Matteo

928
00:31:35,159 --> 00:31:37,620
scarletta and Ken Tong trong who will be

929
00:31:37,620 --> 00:31:39,840
talking about an analysis of the threema

930
00:31:39,840 --> 00:31:42,740
secure messenger

931
00:31:46,260 --> 00:31:50,539
[Music]

932
00:31:50,539 --> 00:31:54,059
all right so hello everyone I'm Kian and

933
00:31:54,059 --> 00:31:55,679
this talk is titled analysis to the

934
00:31:55,679 --> 00:31:57,299
three must secure messenger this is a

935
00:31:57,299 --> 00:31:58,679
joint work between Kenny Patterson

936
00:31:58,679 --> 00:32:01,559
Matteo scarletta here and myself we are

937
00:32:01,559 --> 00:32:03,120
from the applied cryptography group at

938
00:32:03,120 --> 00:32:05,520
eth Zurich so first of all let's ask

939
00:32:05,520 --> 00:32:08,220
ourselves what is trima so trima

940
00:32:08,220 --> 00:32:09,539
describes itself as an end-to-end

941
00:32:09,539 --> 00:32:11,159
encrypted messaging application for

942
00:32:11,159 --> 00:32:13,080
Android and iOS and it was released in

943
00:32:13,080 --> 00:32:15,179
2012 so to put a little bit of context

944
00:32:15,179 --> 00:32:17,399
this is before signals was released and

945
00:32:17,399 --> 00:32:19,799
before WhatsApp was end-to-end encrypted

946
00:32:19,799 --> 00:32:22,080
and they take a lot of pride in means

947
00:32:22,080 --> 00:32:23,880
with indeed in their website they say

948
00:32:23,880 --> 00:32:26,820
that trim is 100 Swiss made unlike U.S

949
00:32:26,820 --> 00:32:29,039
Services it is fully gdpr compliant and

950
00:32:29,039 --> 00:32:30,779
we all know nothing Shady related to

951
00:32:30,779 --> 00:32:31,980
cryptography ever came out of

952
00:32:31,980 --> 00:32:33,380
Switzerland so

953
00:32:33,380 --> 00:32:36,179
that's it why is this an interesting

954
00:32:36,179 --> 00:32:38,640
Target so the question is who uses

955
00:32:38,640 --> 00:32:40,860
streamer well 11 million private users

956
00:32:40,860 --> 00:32:42,659
worldwide as well as various

957
00:32:42,659 --> 00:32:45,059
organizations and political entities for

958
00:32:45,059 --> 00:32:46,740
example the Swiss government and the

959
00:32:46,740 --> 00:32:49,200
Swiss Army mandate the usage of streamer

960
00:32:49,200 --> 00:32:51,539
as the as the messages of choice for

961
00:32:51,539 --> 00:32:54,240
internal Communications and allegedly

962
00:32:54,240 --> 00:32:55,919
all of Schultz the current chancellor of

963
00:32:55,919 --> 00:32:58,260
Germany also uses streamer

964
00:32:58,260 --> 00:32:59,940
well this makes it an interesting Target

965
00:32:59,940 --> 00:33:02,279
for the analysis and I'm just going to

966
00:33:02,279 --> 00:33:03,720
give you like a birthday view a high

967
00:33:03,720 --> 00:33:06,600
level view of the threema protocol so we

968
00:33:06,600 --> 00:33:08,340
have the clients we use this in the

969
00:33:08,340 --> 00:33:10,559
server and the clients in the server

970
00:33:10,559 --> 00:33:12,779
communicate using this protocol which

971
00:33:12,779 --> 00:33:14,220
you call the client to server protocol

972
00:33:14,220 --> 00:33:15,960
or c2s for short

973
00:33:15,960 --> 00:33:18,600
and on top and this is for the client to

974
00:33:18,600 --> 00:33:20,039
communicate with the server and on top

975
00:33:20,039 --> 00:33:22,019
of that we have an end-to-end protocol

976
00:33:22,019 --> 00:33:23,640
which allows users to communicate

977
00:33:23,640 --> 00:33:25,200
communicate with each other

978
00:33:25,200 --> 00:33:26,700
you have to these two layers of

979
00:33:26,700 --> 00:33:28,200
encryption which is a very standard

980
00:33:28,200 --> 00:33:30,059
thing to have for secure messaging

981
00:33:30,059 --> 00:33:32,340
applications

982
00:33:32,340 --> 00:33:34,860
so we're gonna go take a deep dive on

983
00:33:34,860 --> 00:33:37,200
this protocols so let's start with the

984
00:33:37,200 --> 00:33:39,899
end-to-end protocol well now each user

985
00:33:39,899 --> 00:33:42,659
has their own keeper which you can

986
00:33:42,659 --> 00:33:45,059
imagine being this elliptic curve

987
00:33:45,059 --> 00:33:48,480
default and now assume that for example

988
00:33:48,480 --> 00:33:50,460
Alice has Bob's public key and vice

989
00:33:50,460 --> 00:33:52,620
versa then messages between Alice and

990
00:33:52,620 --> 00:33:54,899
Bob are encrypted under this key K which

991
00:33:54,899 --> 00:33:56,340
is just a different helmet between the

992
00:33:56,340 --> 00:33:58,620
long-term key and I mean you can

993
00:33:58,620 --> 00:34:00,179
immediately see that this has a problem

994
00:34:00,179 --> 00:34:03,360
it doesn't have any forward secrecy but

995
00:34:03,360 --> 00:34:04,679
and we will show how stream actually

996
00:34:04,679 --> 00:34:07,620
handles this somewhat and but first

997
00:34:07,620 --> 00:34:09,960
let's take a look at how messages are

998
00:34:09,960 --> 00:34:12,119
sent in three months whenever you send a

999
00:34:12,119 --> 00:34:13,739
message you have to first serialize it

1000
00:34:13,739 --> 00:34:15,480
and then encrypt it and then after that

1001
00:34:15,480 --> 00:34:17,040
you send it but let's see how it's

1002
00:34:17,040 --> 00:34:19,918
serialized well first of all we get a

1003
00:34:19,918 --> 00:34:22,679
byte which is the message type and for

1004
00:34:22,679 --> 00:34:24,719
example for text messages this is simply

1005
00:34:24,719 --> 00:34:26,879
a one in the example that you see above

1006
00:34:26,879 --> 00:34:28,500
them and then you have the message

1007
00:34:28,500 --> 00:34:30,839
content in this case you have hello and

1008
00:34:30,839 --> 00:34:33,719
there you have a random amount of pkcs7

1009
00:34:33,719 --> 00:34:36,960
padding in this example it's just a0202

1010
00:34:36,960 --> 00:34:39,418
and the the reason behind this is that

1011
00:34:39,418 --> 00:34:41,520
this tries to hide the length of the

1012
00:34:41,520 --> 00:34:42,599
message

1013
00:34:42,599 --> 00:34:44,580
then this whole thing gets encrypted

1014
00:34:44,580 --> 00:34:47,460
using excess of 20 poly 1305 with a

1015
00:34:47,460 --> 00:34:49,080
random nose and the key K that we

1016
00:34:49,080 --> 00:34:51,239
described before so again diffie-hellman

1017
00:34:51,239 --> 00:34:54,359
of long-term key of both users

1018
00:34:54,359 --> 00:34:57,660
and before all of this the metadata is

1019
00:34:57,660 --> 00:34:59,460
prepended so for example the source and

1020
00:34:59,460 --> 00:35:02,040
the receiver of the message like clearly

1021
00:35:02,040 --> 00:35:03,599
just doing this is not enough because

1022
00:35:03,599 --> 00:35:06,480
this metadata is not Integrity protected

1023
00:35:06,480 --> 00:35:09,540
what Rima does is it is it creates this

1024
00:35:09,540 --> 00:35:11,940
value called the metadata box

1025
00:35:11,940 --> 00:35:14,880
and it is created by taking a selection

1026
00:35:14,880 --> 00:35:16,980
of the metadata and then encrypting it

1027
00:35:16,980 --> 00:35:19,740
again with the same nonce and a key

1028
00:35:19,740 --> 00:35:22,380
derived from from the keycape and this

1029
00:35:22,380 --> 00:35:24,900
is a pretty strange design where Keys

1030
00:35:24,900 --> 00:35:27,359
used both for encryption on on the right

1031
00:35:27,359 --> 00:35:29,460
and also for key derivation

1032
00:35:29,460 --> 00:35:31,380
right but this is not the strangest

1033
00:35:31,380 --> 00:35:32,940
thing about this protocol this the

1034
00:35:32,940 --> 00:35:34,380
strangest thing is that this metadata

1035
00:35:34,380 --> 00:35:36,119
box is actually not even mandatory

1036
00:35:36,119 --> 00:35:38,160
indeed an attacker could just strip away

1037
00:35:38,160 --> 00:35:40,260
this metadata box and other metadata is

1038
00:35:40,260 --> 00:35:41,640
just not Integrity protected anymore

1039
00:35:41,640 --> 00:35:43,440
which means that a metadata can be

1040
00:35:43,440 --> 00:35:45,240
overwritten and this enables some some

1041
00:35:45,240 --> 00:35:48,480
of the attacks in our paper

1042
00:35:48,480 --> 00:35:50,460
and now let's take a look at the client

1043
00:35:50,460 --> 00:35:52,140
to server protocol

1044
00:35:52,140 --> 00:35:53,880
so as we were saying before the client

1045
00:35:53,880 --> 00:35:56,400
of server protocol is used to as the

1046
00:35:56,400 --> 00:35:58,020
name implies from the client to connect

1047
00:35:58,020 --> 00:36:01,140
to the server and this sort of fixes the

1048
00:36:01,140 --> 00:36:03,300
issue that of the end-to-end protocol

1049
00:36:03,300 --> 00:36:04,740
the end-to-end protocol is not forward

1050
00:36:04,740 --> 00:36:07,320
secure and this by injecting some

1051
00:36:07,320 --> 00:36:09,180
ephemeral Randomness in the

1052
00:36:09,180 --> 00:36:11,040
authenticated key exchanger this creates

1053
00:36:11,040 --> 00:36:12,780
an ephemeral session key

1054
00:36:12,780 --> 00:36:14,940
and maybe this is not satisfying because

1055
00:36:14,940 --> 00:36:17,579
it's just forward secrecy at the client

1056
00:36:17,579 --> 00:36:19,440
to server level rather than the n2l

1057
00:36:19,440 --> 00:36:21,359
level but Prima says it's harder to do

1058
00:36:21,359 --> 00:36:24,300
it at the end to end level

1059
00:36:24,300 --> 00:36:27,480
so oh yeah and also note that the key

1060
00:36:27,480 --> 00:36:28,859
pair used for the client to server

1061
00:36:28,859 --> 00:36:30,839
protocol are exactly the same though as

1062
00:36:30,839 --> 00:36:33,000
the as the one that the users use for

1063
00:36:33,000 --> 00:36:35,839
the end-to-end protocol

1064
00:36:36,720 --> 00:36:38,640
um right so let's I'll go you through

1065
00:36:38,640 --> 00:36:40,740
the situous protocol but I'm just going

1066
00:36:40,740 --> 00:36:42,180
to skip over a lot of the details

1067
00:36:42,180 --> 00:36:43,680
because they're not relevant so now

1068
00:36:43,680 --> 00:36:46,260
Alice uses her key which is the same

1069
00:36:46,260 --> 00:36:47,940
again as the end-to-end protocol and the

1070
00:36:47,940 --> 00:36:50,820
server has its own keeper and this

1071
00:36:50,820 --> 00:36:53,640
public key of the server PKS is stored

1072
00:36:53,640 --> 00:36:55,560
on analysis device because it's embedded

1073
00:36:55,560 --> 00:36:58,260
within the application now let's now as

1074
00:36:58,260 --> 00:37:01,560
the server will will create uh we create

1075
00:37:01,560 --> 00:37:03,839
their ephemeral keys and they will send

1076
00:37:03,839 --> 00:37:05,460
it to each other and that is not too

1077
00:37:05,460 --> 00:37:07,200
relevant but what is relevant is this

1078
00:37:07,200 --> 00:37:09,420
message here where Alice at some point

1079
00:37:09,420 --> 00:37:11,160
will need to authenticate to the server

1080
00:37:11,160 --> 00:37:13,500
so what she does is she derives this key

1081
00:37:13,500 --> 00:37:15,480
case session which is just a different

1082
00:37:15,480 --> 00:37:18,300
helmet between the ephemeral keys and

1083
00:37:18,300 --> 00:37:19,859
she will also derive another key called

1084
00:37:19,859 --> 00:37:21,660
K vouch which is just a Diffie helmet

1085
00:37:21,660 --> 00:37:23,520
within the long-term keys

1086
00:37:23,520 --> 00:37:25,440
and finally she creates this value

1087
00:37:25,440 --> 00:37:27,720
voucher or vouch box which is the

1088
00:37:27,720 --> 00:37:30,480
encryption under kvouch over a femoral

1089
00:37:30,480 --> 00:37:31,800
key

1090
00:37:31,800 --> 00:37:34,200
what this does intuitively is that it

1091
00:37:34,200 --> 00:37:36,180
creates a binding between her ephemeral

1092
00:37:36,180 --> 00:37:39,960
key and her long-term key which is

1093
00:37:39,960 --> 00:37:42,000
containing a vouch right so FML key is

1094
00:37:42,000 --> 00:37:43,859
what is being encrypted and key vouch is

1095
00:37:43,859 --> 00:37:46,440
is what contains the her long-term key

1096
00:37:46,440 --> 00:37:48,359
and this value is then sent to the

1097
00:37:48,359 --> 00:37:50,099
server and the server will check it and

1098
00:37:50,099 --> 00:37:52,260
then if the handshaker goes well then

1099
00:37:52,260 --> 00:37:54,839
they have established this key session

1100
00:37:54,839 --> 00:37:56,940
which they will use as the session key

1101
00:37:56,940 --> 00:37:58,680
to communicate between the client and

1102
00:37:58,680 --> 00:38:00,000
the server

1103
00:38:00,000 --> 00:38:02,400
now let's take a look at the issue with

1104
00:38:02,400 --> 00:38:04,920
this protocol well first of all let's

1105
00:38:04,920 --> 00:38:07,380
focus on the watch box so on the top you

1106
00:38:07,380 --> 00:38:08,940
see that the there's a key derivation

1107
00:38:08,940 --> 00:38:11,480
which is just a different helmet between

1108
00:38:11,480 --> 00:38:14,220
the long-term care valleys and the

1109
00:38:14,220 --> 00:38:15,839
longer key of the server right so this

1110
00:38:15,839 --> 00:38:17,280
is just different element long-term long

1111
00:38:17,280 --> 00:38:18,540
term

1112
00:38:18,540 --> 00:38:21,000
below you have the encryption under this

1113
00:38:21,000 --> 00:38:23,339
key of an ephemeral value or or actually

1114
00:38:23,339 --> 00:38:25,200
some value right

1115
00:38:25,200 --> 00:38:27,480
but this is exactly the same pattern

1116
00:38:27,480 --> 00:38:28,680
that you that we've seen on the

1117
00:38:28,680 --> 00:38:30,480
end-to-end protocol we have a

1118
00:38:30,480 --> 00:38:31,920
diffie-hellman and then the encryption

1119
00:38:31,920 --> 00:38:34,079
using the result of that diffie-hellman

1120
00:38:34,079 --> 00:38:36,960
in some sense you can see that the

1121
00:38:36,960 --> 00:38:38,579
structure of the messages at the

1122
00:38:38,579 --> 00:38:40,619
end-to-end level and then at the c2s

1123
00:38:40,619 --> 00:38:43,380
protocol they sort of have some

1124
00:38:43,380 --> 00:38:46,859
similarities and you know one can one

1125
00:38:46,859 --> 00:38:48,780
can but wonder what could go wrong and

1126
00:38:48,780 --> 00:38:50,640
what could go wrong is exactly this so

1127
00:38:50,640 --> 00:38:52,260
imagine that we can find a special

1128
00:38:52,260 --> 00:38:56,099
keeper esk EPK such that EPK has this

1129
00:38:56,099 --> 00:38:58,320
shape so it starts with a one

1130
00:38:58,320 --> 00:39:00,300
and zero one and in the middle we have

1131
00:39:00,300 --> 00:39:03,420
Sigma which is just 30 bytes of utf-8

1132
00:39:03,420 --> 00:39:05,460
valid string so something that you can

1133
00:39:05,460 --> 00:39:07,619
just copy and paste somewhere else right

1134
00:39:07,619 --> 00:39:09,359
as a message

1135
00:39:09,359 --> 00:39:11,760
and now consider this run of the

1136
00:39:11,760 --> 00:39:13,680
end-to-end protocol between Alice and

1137
00:39:13,680 --> 00:39:15,180
the attacker right so this is the

1138
00:39:15,180 --> 00:39:17,160
end-to-end protocol

1139
00:39:17,160 --> 00:39:19,320
yeah assume first that the attacker

1140
00:39:19,320 --> 00:39:21,720
manages to somehow claim that his

1141
00:39:21,720 --> 00:39:24,420
end-to-end the public key is PKS npks

1142
00:39:24,420 --> 00:39:27,540
again is the situous key of the server

1143
00:39:27,540 --> 00:39:30,240
this of course looks like an insane

1144
00:39:30,240 --> 00:39:31,859
assumption because normally you should

1145
00:39:31,859 --> 00:39:34,500
never be allowed to claim an arbitrary

1146
00:39:34,500 --> 00:39:36,119
public key especially if you don't don't

1147
00:39:36,119 --> 00:39:38,099
know the private key corresponding to

1148
00:39:38,099 --> 00:39:38,839
that

1149
00:39:38,839 --> 00:39:42,180
but bear with me for just a second

1150
00:39:42,180 --> 00:39:44,339
now assume that the adversary also

1151
00:39:44,339 --> 00:39:47,460
convinces Alice to send Sigma the 30

1152
00:39:47,460 --> 00:39:50,400
bytes of utf-8 before to send Sigma as a

1153
00:39:50,400 --> 00:39:52,079
text message to the attacker and this

1154
00:39:52,079 --> 00:39:53,460
could be for example the result of

1155
00:39:53,460 --> 00:39:55,800
social engineering or perhaps you could

1156
00:39:55,800 --> 00:39:57,359
you could think of

1157
00:39:57,359 --> 00:39:59,700
um you know a Spam campaign where they

1158
00:39:59,700 --> 00:40:02,160
say send me this uh this discount code

1159
00:40:02,160 --> 00:40:03,900
and you know we'll give you something

1160
00:40:03,900 --> 00:40:06,780
and then if Alicia hey sorry if Alice

1161
00:40:06,780 --> 00:40:08,040
obliges

1162
00:40:08,040 --> 00:40:10,140
then what she does is she derives this

1163
00:40:10,140 --> 00:40:11,760
key for the end-to-end protocol which is

1164
00:40:11,760 --> 00:40:13,859
the diffie-hellman between her Lantern

1165
00:40:13,859 --> 00:40:16,500
key and what she believes to be the

1166
00:40:16,500 --> 00:40:18,000
long-term key of the attacker in this

1167
00:40:18,000 --> 00:40:19,980
case PKS

1168
00:40:19,980 --> 00:40:22,740
and then she sends them possibly the the

1169
00:40:22,740 --> 00:40:25,680
encryption under this key off well I won

1170
00:40:25,680 --> 00:40:27,599
because it's a message type again this

1171
00:40:27,599 --> 00:40:30,480
is a text message which is which implies

1172
00:40:30,480 --> 00:40:32,940
this one byte then the content of the

1173
00:40:32,940 --> 00:40:34,920
message which by definition is like the

1174
00:40:34,920 --> 00:40:39,540
sigma and possibly because the the pkcs7

1175
00:40:39,540 --> 00:40:42,300
padding is randomized in its length this

1176
00:40:42,300 --> 00:40:43,740
also could be a one and the probability

1177
00:40:43,740 --> 00:40:46,500
of this happening is one over 254.

1178
00:40:46,500 --> 00:40:49,380
now because of the first assumption that

1179
00:40:49,380 --> 00:40:51,720
the servers sorry the the attacker's

1180
00:40:51,720 --> 00:40:55,680
public key is PKS then this key that

1181
00:40:55,680 --> 00:40:57,839
Alice has just derived is exactly the

1182
00:40:57,839 --> 00:40:59,880
same as K vouch in the client to server

1183
00:40:59,880 --> 00:41:02,099
protocol

1184
00:41:02,099 --> 00:41:04,079
and the message that she just sent to

1185
00:41:04,079 --> 00:41:06,420
the attacker is the encryption using

1186
00:41:06,420 --> 00:41:10,260
k-vouch of exactly the the APK the key

1187
00:41:10,260 --> 00:41:12,660
that we that has this string shaper from

1188
00:41:12,660 --> 00:41:15,359
before and this means that this is a

1189
00:41:15,359 --> 00:41:18,119
valid Boucher for a key to which the

1190
00:41:18,119 --> 00:41:19,619
attacker knows the corresponding private

1191
00:41:19,619 --> 00:41:21,859
key

1192
00:41:22,320 --> 00:41:25,020
this means this is basically a c2s and

1193
00:41:25,020 --> 00:41:26,640
end-to-end cross protocol attack so

1194
00:41:26,640 --> 00:41:28,500
we're using a message from the

1195
00:41:28,500 --> 00:41:30,720
end-to-end protocol in order to break

1196
00:41:30,720 --> 00:41:33,420
the client to server protocol

1197
00:41:33,420 --> 00:41:35,460
the implication of this attack is that

1198
00:41:35,460 --> 00:41:37,619
sending a text message compromises

1199
00:41:37,619 --> 00:41:39,480
client authentication forever

1200
00:41:39,480 --> 00:41:41,160
indeed what happens is that the attacker

1201
00:41:41,160 --> 00:41:43,859
now authenticates as Alice just sending

1202
00:41:43,859 --> 00:41:46,619
the the vouch box to the server and say

1203
00:41:46,619 --> 00:41:48,180
hey I'm Alice are there any new messages

1204
00:41:48,180 --> 00:41:50,460
for me and then the the server would

1205
00:41:50,460 --> 00:41:51,720
just reply oh yeah these are the

1206
00:41:51,720 --> 00:41:53,339
messages which are of course still

1207
00:41:53,339 --> 00:41:55,079
end-to-end encrypted but this completely

1208
00:41:55,079 --> 00:41:57,119
leaks all the metadata for inbound

1209
00:41:57,119 --> 00:41:58,920
messages to Alice

1210
00:41:58,920 --> 00:42:00,900
we call this attack watch box forgery

1211
00:42:00,900 --> 00:42:02,640
because basically we're just forging a

1212
00:42:02,640 --> 00:42:05,180
large box

1213
00:42:05,460 --> 00:42:07,440
we have some loose ends some issues that

1214
00:42:07,440 --> 00:42:09,060
we still have with that I promised that

1215
00:42:09,060 --> 00:42:10,859
I would discuss and the first one would

1216
00:42:10,859 --> 00:42:13,200
be how to find a suitable ephemeral key

1217
00:42:13,200 --> 00:42:15,240
EPK which a problem which we call

1218
00:42:15,240 --> 00:42:17,760
getting that key and the second problem

1219
00:42:17,760 --> 00:42:19,920
is how do we claim the service public

1220
00:42:19,920 --> 00:42:22,740
key as ours right so how do we claim PKS

1221
00:42:22,740 --> 00:42:25,320
as our public key which we call the

1222
00:42:25,320 --> 00:42:26,700
bamboozling

1223
00:42:26,700 --> 00:42:28,140
well

1224
00:42:28,140 --> 00:42:29,520
first of all

1225
00:42:29,520 --> 00:42:31,619
had the key so we again we have this

1226
00:42:31,619 --> 00:42:34,680
shape for the for EPK and this is not

1227
00:42:34,680 --> 00:42:36,180
very easy to do this actually

1228
00:42:36,180 --> 00:42:38,220
empirically we we discovered that this

1229
00:42:38,220 --> 00:42:42,060
requires about 2 to 51 keys to be to be

1230
00:42:42,060 --> 00:42:44,579
explored and because these These are

1231
00:42:44,579 --> 00:42:46,560
public key operations this is actually

1232
00:42:46,560 --> 00:42:48,839
pretty expensive and what we did is we

1233
00:42:48,839 --> 00:42:50,339
ran some quick estimates and this will

1234
00:42:50,339 --> 00:42:55,380
cost around 180 000 on AWS and uh well

1235
00:42:55,380 --> 00:42:58,619
Kenny replied with yikes

1236
00:42:58,619 --> 00:43:00,780
which is the only correct response to

1237
00:43:00,780 --> 00:43:02,160
such a message

1238
00:43:02,160 --> 00:43:04,200
however we did manage to find some

1239
00:43:04,200 --> 00:43:06,480
optimizations which means that some

1240
00:43:06,480 --> 00:43:08,700
optimization and 8 000 course days later

1241
00:43:08,700 --> 00:43:10,740
we actually found this key so you can

1242
00:43:10,740 --> 00:43:12,660
see the secret key on the top and at the

1243
00:43:12,660 --> 00:43:14,220
bottom we have a public key which has

1244
00:43:14,220 --> 00:43:15,660
exactly the shape that we want so it

1245
00:43:15,660 --> 00:43:17,280
starts with a one it ends with a one and

1246
00:43:17,280 --> 00:43:18,960
in the middle we have this very strange

1247
00:43:18,960 --> 00:43:22,260
uh string that you can copy there's a

1248
00:43:22,260 --> 00:43:24,300
nice QR code that you can use you can

1249
00:43:24,300 --> 00:43:26,520
send it to our account and maybe you get

1250
00:43:26,520 --> 00:43:28,260
hacked you know

1251
00:43:28,260 --> 00:43:29,099
um

1252
00:43:29,099 --> 00:43:30,960
so

1253
00:43:30,960 --> 00:43:33,060
um next problem the bamboozling well

1254
00:43:33,060 --> 00:43:35,940
it's very hard to claim our an arbitrary

1255
00:43:35,940 --> 00:43:38,460
public key as yours but trima much like

1256
00:43:38,460 --> 00:43:40,980
a good swiss cheese it has holes and the

1257
00:43:40,980 --> 00:43:43,619
whole that we could have found is called

1258
00:43:43,619 --> 00:43:45,960
the trima gateway and trima Gateway is

1259
00:43:45,960 --> 00:43:49,200
this sort of paid API which is used in

1260
00:43:49,200 --> 00:43:50,880
order for companies to programmatically

1261
00:43:50,880 --> 00:43:53,160
send and receive messages from their

1262
00:43:53,160 --> 00:43:56,400
client and somehow there you have this

1263
00:43:56,400 --> 00:43:58,859
web API which allows you to register on

1264
00:43:58,859 --> 00:44:00,780
your account and you put your your

1265
00:44:00,780 --> 00:44:02,940
public key but it does not require you

1266
00:44:02,940 --> 00:44:04,980
to prove that you have the corresponding

1267
00:44:04,980 --> 00:44:07,079
private key this is a nice oversight

1268
00:44:07,079 --> 00:44:09,359
which allowed us to create an account

1269
00:44:09,359 --> 00:44:11,760
called lytaas

1270
00:44:11,760 --> 00:44:14,280
and up there you see that the public key

1271
00:44:14,280 --> 00:44:16,980
of lytas is that one and on the bottom

1272
00:44:16,980 --> 00:44:18,300
you see a screenshot from the code of

1273
00:44:18,300 --> 00:44:20,339
srima and you can see that actually

1274
00:44:20,339 --> 00:44:22,020
corresponding so that the server Pub Key

1275
00:44:22,020 --> 00:44:23,819
is actually the key that we claimed to

1276
00:44:23,819 --> 00:44:26,520
be from our account you might ask what

1277
00:44:26,520 --> 00:44:29,460
does lytas stand for it stands for lose

1278
00:44:29,460 --> 00:44:32,780
your Stream Account as a service

1279
00:44:33,119 --> 00:44:35,700
and yeah now we have all the ingredients

1280
00:44:35,700 --> 00:44:38,598
to run this attack

1281
00:44:40,380 --> 00:44:43,319
so for the second part of this talk let

1282
00:44:43,319 --> 00:44:47,119
me take over and go through some of the

1283
00:44:47,119 --> 00:44:50,940
backup methods that trima uses

1284
00:44:50,940 --> 00:44:53,700
in particular I will cover trim a safe

1285
00:44:53,700 --> 00:44:56,460
when you stream a safe your identity

1286
00:44:56,460 --> 00:45:00,180
your private key and a list of your

1287
00:45:00,180 --> 00:45:02,819
contacts including their nickname gets

1288
00:45:02,819 --> 00:45:06,300
encoded in Json dipped encrypt with a

1289
00:45:06,300 --> 00:45:08,460
password of your choosing and sent to

1290
00:45:08,460 --> 00:45:11,400
the trima server for safe keeping and

1291
00:45:11,400 --> 00:45:13,859
then you can retrieve them for the from

1292
00:45:13,859 --> 00:45:15,660
the trima servers if you lose your

1293
00:45:15,660 --> 00:45:17,520
device for instance

1294
00:45:17,520 --> 00:45:20,579
and I'm sure that this audience can spot

1295
00:45:20,579 --> 00:45:23,400
something wrong with this picture

1296
00:45:23,400 --> 00:45:27,180
and we'll reveal it now it's compressed

1297
00:45:27,180 --> 00:45:31,560
and encrypt so if crime on TLS taught us

1298
00:45:31,560 --> 00:45:34,380
anything is that if we first compress

1299
00:45:34,380 --> 00:45:36,900
and then encrypt something we are

1300
00:45:36,900 --> 00:45:38,400
leaking

1301
00:45:38,400 --> 00:45:41,040
information about the plaintext

1302
00:45:41,040 --> 00:45:44,099
especially if the plaintext changes then

1303
00:45:44,099 --> 00:45:46,619
the length of the encryption licks

1304
00:45:46,619 --> 00:45:49,020
something about it and in this case

1305
00:45:49,020 --> 00:45:51,240
we're lucky because the attacker has a

1306
00:45:51,240 --> 00:45:53,880
way to make the plaintext change

1307
00:45:53,880 --> 00:45:57,839
because the nickname of an account that

1308
00:45:57,839 --> 00:46:00,000
could be controlled by the attacker is

1309
00:46:00,000 --> 00:46:02,400
included in the backup

1310
00:46:02,400 --> 00:46:05,900
so now yeah we have like this very nice

1311
00:46:05,900 --> 00:46:10,560
uh crime style setting and we can

1312
00:46:10,560 --> 00:46:14,819
explosive in practice by creating this

1313
00:46:14,819 --> 00:46:18,839
Loop so we can connect our Target device

1314
00:46:18,839 --> 00:46:21,480
to a computer with ADB with the Android

1315
00:46:21,480 --> 00:46:24,540
debug tools start streamer

1316
00:46:24,540 --> 00:46:27,180
trima will automatically start a backup

1317
00:46:27,180 --> 00:46:30,359
which we can observe the sides we will

1318
00:46:30,359 --> 00:46:33,119
then drop the collection the connection

1319
00:46:33,119 --> 00:46:35,339
in order to make the backup fail

1320
00:46:35,339 --> 00:46:37,319
otherwise the the three map would not

1321
00:46:37,319 --> 00:46:40,200
attempt another backup for seven days

1322
00:46:40,200 --> 00:46:43,380
change the nickname of the attacker

1323
00:46:43,380 --> 00:46:46,140
controlled account kill trima and repeat

1324
00:46:46,140 --> 00:46:50,640
and we observe that if we do this 16 000

1325
00:46:50,640 --> 00:46:53,700
times and observe all the backup sizes

1326
00:46:53,700 --> 00:46:56,760
then we have enough information to

1327
00:46:56,760 --> 00:46:59,640
recover most of the private key and then

1328
00:46:59,640 --> 00:47:02,339
we can use polar slow to recover the

1329
00:47:02,339 --> 00:47:03,780
remaining bits

1330
00:47:03,780 --> 00:47:07,079
so this gives us uh

1331
00:47:07,079 --> 00:47:09,119
the product key

1332
00:47:09,119 --> 00:47:11,640
through a comparison side Channel which

1333
00:47:11,640 --> 00:47:15,540
is wonderful if you ask me

1334
00:47:15,540 --> 00:47:18,240
so this is the full list of the attacks

1335
00:47:18,240 --> 00:47:20,579
that we found on trima we only covered

1336
00:47:20,579 --> 00:47:22,800
two today for the others please check

1337
00:47:22,800 --> 00:47:24,599
out our paper

1338
00:47:24,599 --> 00:47:28,560
they've all been fixed by trima with a

1339
00:47:28,560 --> 00:47:30,839
set of changes ranging from changes in

1340
00:47:30,839 --> 00:47:33,240
the watch box derivation through better

1341
00:47:33,240 --> 00:47:35,700
key separation and of course for for the

1342
00:47:35,700 --> 00:47:38,700
backups disabling compression

1343
00:47:38,700 --> 00:47:41,339
no so now this has been

1344
00:47:41,339 --> 00:47:43,859
um very fun exercise in crypto analysis

1345
00:47:43,859 --> 00:47:47,520
but what I want to discuss now is the

1346
00:47:47,520 --> 00:47:50,579
wider lessons that we can learn from

1347
00:47:50,579 --> 00:47:53,880
something like trima I think the the

1348
00:47:53,880 --> 00:47:57,599
first lesson concerns rolling your own

1349
00:47:57,599 --> 00:48:00,839
protocol we have uh crypto Mantra that

1350
00:48:00,839 --> 00:48:04,440
is don't roll your own crypto we believe

1351
00:48:04,440 --> 00:48:07,200
that this should be extended to no

1352
00:48:07,200 --> 00:48:10,380
rolling of protocols allowed

1353
00:48:10,380 --> 00:48:13,560
we can see that trima used mostly

1354
00:48:13,560 --> 00:48:16,140
standard crypto a crypto that we know to

1355
00:48:16,140 --> 00:48:18,900
be safe so the knuckle Library

1356
00:48:18,900 --> 00:48:21,900
but knuckle using knuckle didn't save

1357
00:48:21,900 --> 00:48:25,079
trema or first for instance the metadata

1358
00:48:25,079 --> 00:48:28,200
box is uh good perfectly safe

1359
00:48:28,200 --> 00:48:30,780
authenticated encryption of the metadata

1360
00:48:30,780 --> 00:48:32,819
but at a protocol level it could just be

1361
00:48:32,819 --> 00:48:33,900
stripped

1362
00:48:33,900 --> 00:48:36,960
and the same for the batch box again we

1363
00:48:36,960 --> 00:48:38,460
have

1364
00:48:38,460 --> 00:48:41,220
secure authenticated encryption

1365
00:48:41,220 --> 00:48:44,460
but this value does not contain

1366
00:48:44,460 --> 00:48:47,880
freshness therefore can be replied

1367
00:48:47,880 --> 00:48:51,960
so the guarantees that these Primitives

1368
00:48:51,960 --> 00:48:53,640
give

1369
00:48:53,640 --> 00:48:56,640
are practically void at the protocol

1370
00:48:56,640 --> 00:48:58,319
level

1371
00:48:58,319 --> 00:49:00,599
much worse not only you should not roll

1372
00:49:00,599 --> 00:49:03,720
your own protocol even modifying solid

1373
00:49:03,720 --> 00:49:07,440
protocols in unintended ways can lead to

1374
00:49:07,440 --> 00:49:10,200
bad consequences this is the case for

1375
00:49:10,200 --> 00:49:13,859
bridgeify for instance the richify is an

1376
00:49:13,859 --> 00:49:16,260
offline messaging app they use the

1377
00:49:16,260 --> 00:49:18,359
signal protocol so we could expect them

1378
00:49:18,359 --> 00:49:21,780
to be secure but because of the way they

1379
00:49:21,780 --> 00:49:24,839
implement the signal protocol they

1380
00:49:24,839 --> 00:49:27,359
integrated in their system there are

1381
00:49:27,359 --> 00:49:29,880
still an attack against spiritual defy

1382
00:49:29,880 --> 00:49:32,640
that allows many in the middle and

1383
00:49:32,640 --> 00:49:35,400
therefore recover of plain text

1384
00:49:35,400 --> 00:49:37,640
foreign

1385
00:49:38,540 --> 00:49:42,060
concerns cross protocol interactions

1386
00:49:42,060 --> 00:49:45,839
so for trima we saw two of this one was

1387
00:49:45,839 --> 00:49:48,720
the one that Ken just presented we can

1388
00:49:48,720 --> 00:49:52,140
take an end-to-end protocol message and

1389
00:49:52,140 --> 00:49:55,020
play it in the c2s protocol to obtain a

1390
00:49:55,020 --> 00:49:57,240
permanent authentication break

1391
00:49:57,240 --> 00:49:59,760
another that we didn't talk about is a

1392
00:49:59,760 --> 00:50:01,319
cross protocol attack between the

1393
00:50:01,319 --> 00:50:03,480
registration protocol and the end-to-end

1394
00:50:03,480 --> 00:50:06,660
protocol in this case malicious streamer

1395
00:50:06,660 --> 00:50:08,900
server can use the registration

1396
00:50:08,900 --> 00:50:12,300
protocols to produce compromising

1397
00:50:12,300 --> 00:50:15,720
material that then can be played inside

1398
00:50:15,720 --> 00:50:18,660
the into a protocol

1399
00:50:18,660 --> 00:50:21,540
but we are not the only ones finding

1400
00:50:21,540 --> 00:50:24,420
this kind of attacks in crypto in the

1401
00:50:24,420 --> 00:50:28,020
wild so for instance metrics is another

1402
00:50:28,020 --> 00:50:30,599
messenger a Federated double ratchet

1403
00:50:30,599 --> 00:50:33,240
based messenger and it suffered a

1404
00:50:33,240 --> 00:50:36,800
devastating blowing its security

1405
00:50:36,800 --> 00:50:41,119
through an attack that also

1406
00:50:41,119 --> 00:50:42,780
exploits

1407
00:50:42,780 --> 00:50:45,839
the interactions between old and magon

1408
00:50:45,839 --> 00:50:47,819
and these are two sub protocols inside

1409
00:50:47,819 --> 00:50:49,920
metrics

1410
00:50:49,920 --> 00:50:51,119
okay

1411
00:50:51,119 --> 00:50:53,940
and finally I want to stress the

1412
00:50:53,940 --> 00:50:56,819
importance of proactive security so if

1413
00:50:56,819 --> 00:50:59,339
yesterday is talk about breaking Cloud

1414
00:50:59,339 --> 00:51:02,339
encryption and mobile networks and

1415
00:51:02,339 --> 00:51:05,280
wireless were not enough

1416
00:51:05,280 --> 00:51:07,260
um

1417
00:51:07,260 --> 00:51:10,440
trima starts with this very simple and

1418
00:51:10,440 --> 00:51:13,440
traditional layering of protocol so

1419
00:51:13,440 --> 00:51:16,020
secure transport protocol and an

1420
00:51:16,020 --> 00:51:17,940
end-to-end messaging protocol on top of

1421
00:51:17,940 --> 00:51:19,440
that

1422
00:51:19,440 --> 00:51:21,839
but then it makes it much more

1423
00:51:21,839 --> 00:51:24,420
complicated to formally analyzing by

1424
00:51:24,420 --> 00:51:27,660
having forward secrecy only at the

1425
00:51:27,660 --> 00:51:29,599
transport level

1426
00:51:29,599 --> 00:51:32,579
the end-to-end protocol was patched

1427
00:51:32,579 --> 00:51:35,220
several times to add things like the

1428
00:51:35,220 --> 00:51:39,660
metadata box and replay prevention for

1429
00:51:39,660 --> 00:51:41,880
nonsense for repeated nonsense

1430
00:51:41,880 --> 00:51:45,000
and when trima announced that they were

1431
00:51:45,000 --> 00:51:48,180
releasing a forward secure protocol as

1432
00:51:48,180 --> 00:51:50,839
an update after our findings we were

1433
00:51:50,839 --> 00:51:54,059
very surprised to see that they were not

1434
00:51:54,059 --> 00:51:56,160
releasing a new Fresh end-to-end

1435
00:51:56,160 --> 00:51:57,599
protocol

1436
00:51:57,599 --> 00:52:00,780
but they were stacking a new protocol on

1437
00:52:00,780 --> 00:52:04,260
top of the existing ones so here we are

1438
00:52:04,260 --> 00:52:07,220
entering the uncanny valley of

1439
00:52:07,220 --> 00:52:10,200
formal verification and I'm very glad I

1440
00:52:10,200 --> 00:52:12,660
I won't be the one trying to make a

1441
00:52:12,660 --> 00:52:16,559
formal model out of this and I am

1442
00:52:16,559 --> 00:52:19,619
sincerely uh afraid to imagine what will

1443
00:52:19,619 --> 00:52:21,720
happen if they try to add post

1444
00:52:21,720 --> 00:52:25,819
compromise security to their system

1445
00:52:25,980 --> 00:52:28,200
so to recap

1446
00:52:28,200 --> 00:52:31,680
don't roll your own protocols and if you

1447
00:52:31,680 --> 00:52:34,140
really have to be aware of cross

1448
00:52:34,140 --> 00:52:38,160
protocol interactions and please please

1449
00:52:38,160 --> 00:52:40,859
prove your protocol secure before some

1450
00:52:40,859 --> 00:52:45,259
PhD students comes and breaks it

1451
00:52:45,359 --> 00:52:48,359
naturally this backs the question of who

1452
00:52:48,359 --> 00:52:51,300
should take this heavy and expensive

1453
00:52:51,300 --> 00:52:54,540
load of Designing proving secure and

1454
00:52:54,540 --> 00:52:57,780
maintaining cryptographic protocols I

1455
00:52:57,780 --> 00:52:59,960
don't have an answer for this but maybe

1456
00:52:59,960 --> 00:53:03,480
you have opinions and with this I want

1457
00:53:03,480 --> 00:53:06,180
to close it all you can drop us an email

1458
00:53:06,180 --> 00:53:10,200
or visit our website for the full paper

1459
00:53:10,200 --> 00:53:12,480
uh thank you for your attention and we

1460
00:53:12,480 --> 00:53:15,780
will be happy to take your questions

1461
00:53:15,780 --> 00:53:18,440
foreign

1462
00:53:18,690 --> 00:53:22,139
[Music]

1463
00:53:25,040 --> 00:53:27,059
so we will have to move on to the next

1464
00:53:27,059 --> 00:53:28,680
speaker but I encourage you to follow up

1465
00:53:28,680 --> 00:53:31,920
afterwards so our next speaker is uh

1466
00:53:31,920 --> 00:53:33,900
Julia Len who will be speaking about

1467
00:53:33,900 --> 00:53:36,480
interoperability in end-to-end encrypted

1468
00:53:36,480 --> 00:53:38,900
messaging

1469
00:53:50,400 --> 00:53:52,940
thank you

1470
00:54:30,540 --> 00:54:33,540
foreign

1471
00:55:05,119 --> 00:55:09,380
sorry okay

1472
00:55:10,220 --> 00:55:12,660
uh thank you for the introduction I'm

1473
00:55:12,660 --> 00:55:14,640
excited to present to you today on

1474
00:55:14,640 --> 00:55:16,500
interoperability and n10 encrypted

1475
00:55:16,500 --> 00:55:18,480
messaging and this is Joint work with

1476
00:55:18,480 --> 00:55:22,440
Usher gosh Paul grabs and Paul wrestler

1477
00:55:22,440 --> 00:55:25,020
and so antenna encrypted messaging has

1478
00:55:25,020 --> 00:55:26,819
become arguably one of the most widely

1479
00:55:26,819 --> 00:55:29,700
used privacy Technologies today

1480
00:55:29,700 --> 00:55:31,740
it's used across many messaging apps

1481
00:55:31,740 --> 00:55:34,140
including WhatsApp signal and iMessage

1482
00:55:34,140 --> 00:55:36,240
among others

1483
00:55:36,240 --> 00:55:39,059
and most popular messaging apps follow a

1484
00:55:39,059 --> 00:55:41,579
centralized model so generally generally

1485
00:55:41,579 --> 00:55:43,980
this means that users of a particular

1486
00:55:43,980 --> 00:55:46,859
messaging app can only message users of

1487
00:55:46,859 --> 00:55:49,500
that same app so for example here a

1488
00:55:49,500 --> 00:55:51,540
signal user cannot message somebody on

1489
00:55:51,540 --> 00:55:52,619
WhatsApp

1490
00:55:52,619 --> 00:55:55,500
but a recent ruling from the EU will

1491
00:55:55,500 --> 00:55:57,720
mean major changes to this model for

1492
00:55:57,720 --> 00:56:00,240
secure messaging

1493
00:56:00,240 --> 00:56:03,119
so in particular last September the EU

1494
00:56:03,119 --> 00:56:05,099
signed into law the digital markets act

1495
00:56:05,099 --> 00:56:07,079
or dma

1496
00:56:07,079 --> 00:56:09,300
now the goal of this regulation is to

1497
00:56:09,300 --> 00:56:11,700
reduce the effect of large gatekeeper

1498
00:56:11,700 --> 00:56:13,980
companies essentially those that control

1499
00:56:13,980 --> 00:56:15,960
a majority of the market share for

1500
00:56:15,960 --> 00:56:18,599
messaging from locking in users into

1501
00:56:18,599 --> 00:56:20,880
their messaging ecosystem due to network

1502
00:56:20,880 --> 00:56:22,740
effects

1503
00:56:22,740 --> 00:56:24,960
and so one important provision of the

1504
00:56:24,960 --> 00:56:26,099
dma

1505
00:56:26,099 --> 00:56:28,380
is a mandate that these large gatekeeper

1506
00:56:28,380 --> 00:56:30,079
apps must make their services

1507
00:56:30,079 --> 00:56:33,059
interoperable with non-gatekeeper apps

1508
00:56:33,059 --> 00:56:34,859
upon request

1509
00:56:34,859 --> 00:56:37,079
and so some of you may be thinking that

1510
00:56:37,079 --> 00:56:38,339
this doesn't affect you if you're

1511
00:56:38,339 --> 00:56:41,460
outside of the EU but I will add that

1512
00:56:41,460 --> 00:56:43,020
this has the potential to affect those

1513
00:56:43,020 --> 00:56:45,599
outside of the EU as well for one thing

1514
00:56:45,599 --> 00:56:48,540
we've seen historically that laws in the

1515
00:56:48,540 --> 00:56:50,700
EU tend to send precedence for

1516
00:56:50,700 --> 00:56:52,680
regulation outside the EU which we've

1517
00:56:52,680 --> 00:56:55,140
seen with the gdpr

1518
00:56:55,140 --> 00:56:57,300
and for example the US has already

1519
00:56:57,300 --> 00:56:59,339
proposed a similar similar regulation

1520
00:56:59,339 --> 00:57:02,040
requiring interoperability through the

1521
00:57:02,040 --> 00:57:04,380
access Act of 2021.

1522
00:57:04,380 --> 00:57:07,200
so really this is a regulation that has

1523
00:57:07,200 --> 00:57:08,700
the potential for affecting all future

1524
00:57:08,700 --> 00:57:11,640
and 10 encrypted messaging

1525
00:57:11,640 --> 00:57:13,920
so going back to our model here where

1526
00:57:13,920 --> 00:57:16,079
WhatsApp is very likely to be designated

1527
00:57:16,079 --> 00:57:18,359
a gatekeeper app

1528
00:57:18,359 --> 00:57:20,819
as an illustrative example here if a

1529
00:57:20,819 --> 00:57:23,520
non-gatekeeper like signal request to

1530
00:57:23,520 --> 00:57:25,319
interoperate with WhatsApp

1531
00:57:25,319 --> 00:57:27,119
then signal users would be able to

1532
00:57:27,119 --> 00:57:29,460
message WhatsApp users without making a

1533
00:57:29,460 --> 00:57:31,319
WhatsApp account

1534
00:57:31,319 --> 00:57:33,420
and this represents a fundamental change

1535
00:57:33,420 --> 00:57:36,119
to the basic centralized architecture of

1536
00:57:36,119 --> 00:57:38,400
today's n10 encrypted messaging

1537
00:57:38,400 --> 00:57:40,500
and very naturally this raises a lot of

1538
00:57:40,500 --> 00:57:42,900
questions for instance how will this

1539
00:57:42,900 --> 00:57:45,119
interoperability look like what's the

1540
00:57:45,119 --> 00:57:47,579
design space here and how exactly how

1541
00:57:47,579 --> 00:57:49,260
exactly will this affect security and

1542
00:57:49,260 --> 00:57:50,640
privacy

1543
00:57:50,640 --> 00:57:52,740
and complicating this further is the

1544
00:57:52,740 --> 00:57:55,200
fact that the dma sets out an initial

1545
00:57:55,200 --> 00:57:57,480
deadline of March 2024 in just about a

1546
00:57:57,480 --> 00:57:59,280
year from now to have all of this

1547
00:57:59,280 --> 00:58:01,319
figured out

1548
00:58:01,319 --> 00:58:03,599
so to better understand this I want to

1549
00:58:03,599 --> 00:58:04,680
address some of the challenges that

1550
00:58:04,680 --> 00:58:06,900
arise in this interoperability setting

1551
00:58:06,900 --> 00:58:08,720
in today's ecosystem

1552
00:58:08,720 --> 00:58:11,160
two service providers will have made

1553
00:58:11,160 --> 00:58:14,280
completely different design choices so

1554
00:58:14,280 --> 00:58:15,839
for instance

1555
00:58:15,839 --> 00:58:17,760
one service provider could use phone

1556
00:58:17,760 --> 00:58:19,680
numbers for user IDs while another could

1557
00:58:19,680 --> 00:58:21,000
use email

1558
00:58:21,000 --> 00:58:23,819
one could use a signals double ratchet

1559
00:58:23,819 --> 00:58:25,559
algorithm for the n10 encrypted protocol

1560
00:58:25,559 --> 00:58:28,319
while another could use Mt Proto

1561
00:58:28,319 --> 00:58:30,240
and furthermore if some senders

1562
00:58:30,240 --> 00:58:32,700
malicious and sends an abusive message

1563
00:58:32,700 --> 00:58:34,559
then different providers might have

1564
00:58:34,559 --> 00:58:36,780
different policies in place for how to

1565
00:58:36,780 --> 00:58:38,460
handle this

1566
00:58:38,460 --> 00:58:41,339
so both recipients here might report the

1567
00:58:41,339 --> 00:58:43,680
same message but one provider does not

1568
00:58:43,680 --> 00:58:46,200
view this as a violation while another

1569
00:58:46,200 --> 00:58:48,420
does and therefore blocks the user from

1570
00:58:48,420 --> 00:58:50,160
their platform

1571
00:58:50,160 --> 00:58:51,900
and currently these different design

1572
00:58:51,900 --> 00:58:54,599
choices don't complicate messaging

1573
00:58:54,599 --> 00:58:57,299
but now with interoperability the

1574
00:58:57,299 --> 00:58:59,160
barrier between service providers are

1575
00:58:59,160 --> 00:59:00,660
going to be porous

1576
00:59:00,660 --> 00:59:03,000
and so unlike other interoperable

1577
00:59:03,000 --> 00:59:05,160
communication systems like SMS aside

1578
00:59:05,160 --> 00:59:07,619
from not being n10 encrypted we're

1579
00:59:07,619 --> 00:59:09,960
having to retrofit systems and protocols

1580
00:59:09,960 --> 00:59:11,460
together that were not originally

1581
00:59:11,460 --> 00:59:15,079
designed to be interoperable

1582
00:59:15,119 --> 00:59:17,520
and so one way to make this work is just

1583
00:59:17,520 --> 00:59:19,799
to completely give up on n10 encryption

1584
00:59:19,799 --> 00:59:22,559
in favor of interoperability but we

1585
00:59:22,559 --> 00:59:24,720
strongly Advocate against this and think

1586
00:59:24,720 --> 00:59:26,339
we can do better

1587
00:59:26,339 --> 00:59:29,280
so given the dma and its mandate

1588
00:59:29,280 --> 00:59:31,680
um and the timeline given here the goal

1589
00:59:31,680 --> 00:59:33,900
of our work and this talk is to

1590
00:59:33,900 --> 00:59:35,460
understand how can the existing

1591
00:59:35,460 --> 00:59:38,099
components of widely used n-10 encrypted

1592
00:59:38,099 --> 00:59:40,260
messaging apps be extended to be

1593
00:59:40,260 --> 00:59:42,299
interoperable

1594
00:59:42,299 --> 00:59:43,859
so to do this I'll first give a quick

1595
00:59:43,859 --> 00:59:45,540
overview of the dma's interoperability

1596
00:59:45,540 --> 00:59:47,700
requirements and I'll add a quick

1597
00:59:47,700 --> 00:59:49,799
disclaimer here that we're not legal

1598
00:59:49,799 --> 00:59:52,440
experts but our interpretation here is

1599
00:59:52,440 --> 00:59:54,000
Guided by legal discussions where

1600
00:59:54,000 --> 00:59:55,500
possible

1601
00:59:55,500 --> 00:59:57,359
next we'll look more closely at Three

1602
00:59:57,359 --> 00:59:59,400
core components of messaging affected by

1603
00:59:59,400 --> 01:00:02,160
the dma which are identity systems and

1604
01:00:02,160 --> 01:00:04,260
10 encrypted protocols and Abuse

1605
01:00:04,260 --> 01:00:06,180
Prevention and we'll describe some of

1606
01:00:06,180 --> 01:00:08,819
the solutions possible here

1607
01:00:08,819 --> 01:00:10,619
and next I'll describe some of the open

1608
01:00:10,619 --> 01:00:13,920
questions remaining in the setting

1609
01:00:13,920 --> 01:00:17,040
and also while at first glance this all

1610
01:00:17,040 --> 01:00:18,900
may seem like a major security and

1611
01:00:18,900 --> 01:00:21,480
privacy disaster I'll try to convince

1612
01:00:21,480 --> 01:00:23,280
you of the somewhat counter-intuitive

1613
01:00:23,280 --> 01:00:25,200
conclusion here that we came across in

1614
01:00:25,200 --> 01:00:27,839
this work that interoperability could be

1615
01:00:27,839 --> 01:00:29,940
a huge opportunity to actually improve

1616
01:00:29,940 --> 01:00:31,619
the privacy of end-to-end encrypted

1617
01:00:31,619 --> 01:00:33,059
messaging

1618
01:00:33,059 --> 01:00:35,040
so with that in mind let's take a look

1619
01:00:35,040 --> 01:00:37,440
at the Timeline set by the dma

1620
01:00:37,440 --> 01:00:40,200
this may the dma rules will begin to

1621
01:00:40,200 --> 01:00:42,540
apply then by this July potential

1622
01:00:42,540 --> 01:00:44,819
Gatekeepers will need to notify the

1623
01:00:44,819 --> 01:00:46,740
European commission that their service

1624
01:00:46,740 --> 01:00:48,660
meets a threshold at which point by

1625
01:00:48,660 --> 01:00:50,640
September the European commission will

1626
01:00:50,640 --> 01:00:52,260
need to designate service providers as a

1627
01:00:52,260 --> 01:00:55,559
Gatekeepers and so they'll use metrics

1628
01:00:55,559 --> 01:00:57,540
like market capitalization number of

1629
01:00:57,540 --> 01:01:01,020
users and annual revenue to determine

1630
01:01:01,020 --> 01:01:01,920
this

1631
01:01:01,920 --> 01:01:05,040
and then that brings us to March 2024 in

1632
01:01:05,040 --> 01:01:06,900
just about a year when designated

1633
01:01:06,900 --> 01:01:08,160
gatekeeper absolutely to enable

1634
01:01:08,160 --> 01:01:10,200
interoperability which is a fairly

1635
01:01:10,200 --> 01:01:12,359
ambitious timeline

1636
01:01:12,359 --> 01:01:14,160
now the dma's interoperability

1637
01:01:14,160 --> 01:01:16,020
requirements are mainly spelled out in

1638
01:01:16,020 --> 01:01:17,940
article 7 which says that these

1639
01:01:17,940 --> 01:01:20,040
so-called gatekeeper apps must provide

1640
01:01:20,040 --> 01:01:22,200
the necessary technical interface or

1641
01:01:22,200 --> 01:01:24,240
equivalent to enable interoperability

1642
01:01:24,240 --> 01:01:26,579
with another provider upon request and

1643
01:01:26,579 --> 01:01:28,020
free of charge

1644
01:01:28,020 --> 01:01:30,059
so the article also does make explicit

1645
01:01:30,059 --> 01:01:32,579
some of the basic requirements here

1646
01:01:32,579 --> 01:01:35,460
after designation a gatekeeper will need

1647
01:01:35,460 --> 01:01:38,040
to make text messaging and sharing of

1648
01:01:38,040 --> 01:01:40,140
media files interoperable between two

1649
01:01:40,140 --> 01:01:41,160
users

1650
01:01:41,160 --> 01:01:42,900
after two years they'll need to extend

1651
01:01:42,900 --> 01:01:46,200
this functionality to group messaging

1652
01:01:46,200 --> 01:01:47,640
and then after four years they'll need

1653
01:01:47,640 --> 01:01:49,619
to extend interoperability to voice and

1654
01:01:49,619 --> 01:01:51,839
video calls and while I don't have time

1655
01:01:51,839 --> 01:01:54,480
to get into all of the um

1656
01:01:54,480 --> 01:01:56,880
all of the rules set by article 7 there

1657
01:01:56,880 --> 01:01:58,140
are a couple of paragraphs that are

1658
01:01:58,140 --> 01:02:00,119
important here to understand

1659
01:02:00,119 --> 01:02:01,980
the first is paragraph three which

1660
01:02:01,980 --> 01:02:03,500
states that the level of security

1661
01:02:03,500 --> 01:02:06,299
including end-to-end encryption that the

1662
01:02:06,299 --> 01:02:08,700
gatekeeper provides to its own end users

1663
01:02:08,700 --> 01:02:10,500
should be preserved for cross-platform

1664
01:02:10,500 --> 01:02:12,359
messages

1665
01:02:12,359 --> 01:02:14,819
also only the personal data of end users

1666
01:02:14,819 --> 01:02:16,740
that is strictly necessary should be

1667
01:02:16,740 --> 01:02:18,480
collected and exchanged by

1668
01:02:18,480 --> 01:02:20,700
inter-operating providers

1669
01:02:20,700 --> 01:02:22,980
and finally paragraph 9 states that the

1670
01:02:22,980 --> 01:02:24,599
gatekeeper is allowed to take measures

1671
01:02:24,599 --> 01:02:27,660
to stop risk to Integrity security and

1672
01:02:27,660 --> 01:02:30,720
privacy of its services as long as these

1673
01:02:30,720 --> 01:02:32,880
measures are strictly necessary and so

1674
01:02:32,880 --> 01:02:35,460
we interpret this specific paragraph As

1675
01:02:35,460 --> 01:02:37,200
saying that Gatekeepers are allowed to

1676
01:02:37,200 --> 01:02:40,160
implement Abuse Prevention measures

1677
01:02:40,160 --> 01:02:42,240
but of course this raises questions

1678
01:02:42,240 --> 01:02:44,339
about what data should be kept private

1679
01:02:44,339 --> 01:02:46,319
from interoperating service providers

1680
01:02:46,319 --> 01:02:48,119
and what data are they allowed to demand

1681
01:02:48,119 --> 01:02:49,980
about end users in order to implement

1682
01:02:49,980 --> 01:02:52,260
Abuse Prevention measures what exactly

1683
01:02:52,260 --> 01:02:54,420
here is strictly necessary

1684
01:02:54,420 --> 01:02:56,040
so to address these questions and

1685
01:02:56,040 --> 01:02:58,200
challenges we're going to take a closer

1686
01:02:58,200 --> 01:02:59,819
look at these three core components of

1687
01:02:59,819 --> 01:03:01,799
messaging here

1688
01:03:01,799 --> 01:03:04,260
before we directly get into that I want

1689
01:03:04,260 --> 01:03:06,540
to First describe the design choices for

1690
01:03:06,540 --> 01:03:08,339
the system architecture which affect

1691
01:03:08,339 --> 01:03:10,680
these components so let's consider the

1692
01:03:10,680 --> 01:03:12,359
example here where we have Allison Bob

1693
01:03:12,359 --> 01:03:14,640
who want to communicate and Alice is on

1694
01:03:14,640 --> 01:03:16,260
the service provider Alice chat while

1695
01:03:16,260 --> 01:03:17,880
Bob is on a different service provider

1696
01:03:17,880 --> 01:03:19,740
bobchat

1697
01:03:19,740 --> 01:03:21,660
so there are two major ways that the

1698
01:03:21,660 --> 01:03:24,240
communication flows can happen here the

1699
01:03:24,240 --> 01:03:26,520
first is that Alice directly sends

1700
01:03:26,520 --> 01:03:28,260
communication to bobchat who then

1701
01:03:28,260 --> 01:03:29,700
forwards to Bob

1702
01:03:29,700 --> 01:03:31,140
and so

1703
01:03:31,140 --> 01:03:32,460
um we call this the client to server

1704
01:03:32,460 --> 01:03:35,160
model one benefit is that Alice chat

1705
01:03:35,160 --> 01:03:36,299
does not learn that Alice is

1706
01:03:36,299 --> 01:03:39,540
communicating with somebody on Bob chat

1707
01:03:39,540 --> 01:03:41,579
however has some drawbacks including

1708
01:03:41,579 --> 01:03:43,319
that Alice would need some way to

1709
01:03:43,319 --> 01:03:45,180
authenticate herself to bobchat as an

1710
01:03:45,180 --> 01:03:47,640
authorized user and also that Abuse

1711
01:03:47,640 --> 01:03:49,380
Prevention techniques like server-side

1712
01:03:49,380 --> 01:03:51,540
spam filtering might be more challenging

1713
01:03:51,540 --> 01:03:53,339
here

1714
01:03:53,339 --> 01:03:55,440
and so the other option is to have Alice

1715
01:03:55,440 --> 01:03:57,839
continue to send messages to Alice chat

1716
01:03:57,839 --> 01:03:59,460
which will then forward communication to

1717
01:03:59,460 --> 01:04:01,740
bobchat on Alice's behalf we call this

1718
01:04:01,740 --> 01:04:04,440
the server the server model and we use

1719
01:04:04,440 --> 01:04:06,119
this in our design

1720
01:04:06,119 --> 01:04:07,799
so there is the drawback here that it

1721
01:04:07,799 --> 01:04:09,900
leaks to Alice chat that Alice is

1722
01:04:09,900 --> 01:04:12,000
talking to someone on bobchat and to

1723
01:04:12,000 --> 01:04:13,920
bobchat that Bob is talking to someone

1724
01:04:13,920 --> 01:04:16,619
on Alice trap

1725
01:04:16,619 --> 01:04:19,980
however we feel that the benefits of

1726
01:04:19,980 --> 01:04:21,540
this model outweigh these drawbacks

1727
01:04:21,540 --> 01:04:23,880
including that Network level metadata

1728
01:04:23,880 --> 01:04:26,579
like IP address of users is not leaked

1729
01:04:26,579 --> 01:04:28,740
in cross-provider communication to other

1730
01:04:28,740 --> 01:04:29,880
providers

1731
01:04:29,880 --> 01:04:31,500
and additionally this will make

1732
01:04:31,500 --> 01:04:33,240
implementing certain Abuse Prevention

1733
01:04:33,240 --> 01:04:35,819
measures easier

1734
01:04:35,819 --> 01:04:38,640
so with that in mind let's take a look

1735
01:04:38,640 --> 01:04:40,079
at identity Discovery and

1736
01:04:40,079 --> 01:04:42,180
interoperability

1737
01:04:42,180 --> 01:04:43,920
let's continue with our example where

1738
01:04:43,920 --> 01:04:45,420
Alice wants to initiate communication

1739
01:04:45,420 --> 01:04:46,740
with Bob

1740
01:04:46,740 --> 01:04:48,540
the first step would be that Alice needs

1741
01:04:48,540 --> 01:04:51,540
some way to learn which app Bob is on

1742
01:04:51,540 --> 01:04:53,819
and so this would be called service

1743
01:04:53,819 --> 01:04:55,859
Discovery we won't cover this in our

1744
01:04:55,859 --> 01:04:58,200
talk but we do cover this in our paper

1745
01:04:58,200 --> 01:05:00,240
I'll also add that this is not required

1746
01:05:00,240 --> 01:05:01,980
by the dma but we think that this will

1747
01:05:01,980 --> 01:05:03,420
be important

1748
01:05:03,420 --> 01:05:06,059
so then to initiate communication Alice

1749
01:05:06,059 --> 01:05:08,579
will need to know we'll need some way to

1750
01:05:08,579 --> 01:05:10,380
retrieve Bob's keying material from

1751
01:05:10,380 --> 01:05:12,420
bobchat

1752
01:05:12,420 --> 01:05:14,700
and one really trivial option here is

1753
01:05:14,700 --> 01:05:16,740
just to have all users register with

1754
01:05:16,740 --> 01:05:18,599
every provider

1755
01:05:18,599 --> 01:05:21,420
so each provider knows everybody else's

1756
01:05:21,420 --> 01:05:23,640
identity including those on other

1757
01:05:23,640 --> 01:05:26,579
providers in this example then Alice can

1758
01:05:26,579 --> 01:05:28,680
just query her own provider Alice chat

1759
01:05:28,680 --> 01:05:30,839
for Bob's key dresses in the centralized

1760
01:05:30,839 --> 01:05:31,740
setting

1761
01:05:31,740 --> 01:05:34,200
of course this is a complete privacy

1762
01:05:34,200 --> 01:05:36,720
disaster since now each provider also

1763
01:05:36,720 --> 01:05:38,819
knows the user base of every other

1764
01:05:38,819 --> 01:05:41,640
provider so this also violates at least

1765
01:05:41,640 --> 01:05:43,500
the spirit of the dma if not the letter

1766
01:05:43,500 --> 01:05:46,859
of the law and we Advocate against this

1767
01:05:46,859 --> 01:05:49,079
so instead in our solution we have

1768
01:05:49,079 --> 01:05:50,880
senders make encrypted queries to the

1769
01:05:50,880 --> 01:05:53,160
other provider's identity system

1770
01:05:53,160 --> 01:05:55,500
here Alice encrypts a query for Bob's

1771
01:05:55,500 --> 01:05:57,960
key to Bob chat and sends this to Alice

1772
01:05:57,960 --> 01:06:00,000
trap who won't be able to decrypt and

1773
01:06:00,000 --> 01:06:01,200
therefore won't know what else is

1774
01:06:01,200 --> 01:06:02,520
querying for

1775
01:06:02,520 --> 01:06:04,500
Alice track can forward this query to

1776
01:06:04,500 --> 01:06:06,599
Bob chat who can decrypt retrieve Bob's

1777
01:06:06,599 --> 01:06:10,020
King material and encrypt that for Alice

1778
01:06:10,020 --> 01:06:12,299
which is then forward back to Alice via

1779
01:06:12,299 --> 01:06:14,579
Alice chat

1780
01:06:14,579 --> 01:06:16,440
so finally Alice can do Crypt to recover

1781
01:06:16,440 --> 01:06:18,599
Bob's King material and so the security

1782
01:06:18,599 --> 01:06:20,280
goals we want to Target here are that

1783
01:06:20,280 --> 01:06:22,380
Alice chat should not learn that Alice

1784
01:06:22,380 --> 01:06:24,839
is querying for Bob and also Bob chat

1785
01:06:24,839 --> 01:06:26,160
should not learn that Alice is the one

1786
01:06:26,160 --> 01:06:29,099
querying for Bob's keying material

1787
01:06:29,099 --> 01:06:30,839
next for the protocol layer

1788
01:06:30,839 --> 01:06:32,760
interoperability now that Alice has

1789
01:06:32,760 --> 01:06:34,799
Bob's King material Alice needs to know

1790
01:06:34,799 --> 01:06:39,059
how to encrypt the message in order to

1791
01:06:39,059 --> 01:06:40,680
deliver this to Bob

1792
01:06:40,680 --> 01:06:43,799
so what protocol does Alice use here

1793
01:06:43,799 --> 01:06:46,559
well one option that we've seen proposed

1794
01:06:46,559 --> 01:06:48,299
is to use a server-side bridge to

1795
01:06:48,299 --> 01:06:50,880
translate between protocols so Alice

1796
01:06:50,880 --> 01:06:52,619
would continue using the protocol as

1797
01:06:52,619 --> 01:06:55,440
specified by Alice chat but then Alice

1798
01:06:55,440 --> 01:06:56,760
chat would Implement a server-side

1799
01:06:56,760 --> 01:06:59,220
bridge to decrypt this communication and

1800
01:06:59,220 --> 01:07:02,520
re-encrypt it using bobchat's protocol

1801
01:07:02,520 --> 01:07:04,500
however this solution asks us to

1802
01:07:04,500 --> 01:07:06,480
completely give up on n10 encryption

1803
01:07:06,480 --> 01:07:08,280
since obviously now the providers can

1804
01:07:08,280 --> 01:07:10,619
learn the communication so obviously

1805
01:07:10,619 --> 01:07:12,240
this is not a solution that we want to

1806
01:07:12,240 --> 01:07:13,920
Target

1807
01:07:13,920 --> 01:07:15,960
another solution that's been that's been

1808
01:07:15,960 --> 01:07:17,520
proposed is that everybody uses a

1809
01:07:17,520 --> 01:07:19,260
standardized protocol

1810
01:07:19,260 --> 01:07:21,299
and while this might work in the long

1811
01:07:21,299 --> 01:07:24,020
term standardization can be a really

1812
01:07:24,020 --> 01:07:26,520
time-consuming process and we're working

1813
01:07:26,520 --> 01:07:28,319
with a very short deadline here of just

1814
01:07:28,319 --> 01:07:29,760
about a year

1815
01:07:29,760 --> 01:07:32,039
so we also don't see this as a solution

1816
01:07:32,039 --> 01:07:34,260
in the short term

1817
01:07:34,260 --> 01:07:36,599
the solution that we do see likely at

1818
01:07:36,599 --> 01:07:38,160
least in the short term is that

1819
01:07:38,160 --> 01:07:40,440
gatekeeper apps will fix a protocol that

1820
01:07:40,440 --> 01:07:42,780
other providers will need to speak

1821
01:07:42,780 --> 01:07:45,000
then non-non gatekeeper apps will

1822
01:07:45,000 --> 01:07:47,039
include the gatekeeper implementation in

1823
01:07:47,039 --> 01:07:49,500
their app through client Bridges

1824
01:07:49,500 --> 01:07:51,720
there are of course also some drawbacks

1825
01:07:51,720 --> 01:07:54,720
here namely that if an app has to

1826
01:07:54,720 --> 01:07:56,520
include an implementation of every

1827
01:07:56,520 --> 01:07:57,900
gatekeeper that they're interoperating

1828
01:07:57,900 --> 01:08:00,839
with this could get very expensive also

1829
01:08:00,839 --> 01:08:03,000
if some gatekeeper implementation has a

1830
01:08:03,000 --> 01:08:05,940
vulnerability suddenly this is spread to

1831
01:08:05,940 --> 01:08:09,599
lots of other apps potentially

1832
01:08:09,599 --> 01:08:11,400
but in the short term we still believe

1833
01:08:11,400 --> 01:08:13,859
that this is more likely the solution

1834
01:08:13,859 --> 01:08:16,020
here

1835
01:08:16,020 --> 01:08:17,640
I also want to add that our design

1836
01:08:17,640 --> 01:08:19,738
includes a sender Anonymous wrapper over

1837
01:08:19,738 --> 01:08:21,479
the base encryption protocol to hide

1838
01:08:21,479 --> 01:08:24,479
Alice's identity from Bob chat we

1839
01:08:24,479 --> 01:08:26,520
specifically use an extension of signal

1840
01:08:26,520 --> 01:08:28,738
sealed sender protocol so this means

1841
01:08:28,738 --> 01:08:30,420
that bobchat does not learn Alice's

1842
01:08:30,420 --> 01:08:33,000
identity except for when Alice is

1843
01:08:33,000 --> 01:08:34,738
initiating conversations with a new

1844
01:08:34,738 --> 01:08:37,020
message partner

1845
01:08:37,020 --> 01:08:39,179
and so our security goal here security

1846
01:08:39,179 --> 01:08:40,319
goals here are the more typical

1847
01:08:40,319 --> 01:08:42,000
messaging goals of confidentiality and

1848
01:08:42,000 --> 01:08:44,279
authenticity we also have some unique

1849
01:08:44,279 --> 01:08:46,439
privacy goals here as well which are

1850
01:08:46,439 --> 01:08:48,600
that Bob chat whenever possible should

1851
01:08:48,600 --> 01:08:49,920
not learn that Alice is the one

1852
01:08:49,920 --> 01:08:52,080
messaging Bob and also Alice chat

1853
01:08:52,080 --> 01:08:53,580
wherever possible should not learn Bob

1854
01:08:53,580 --> 01:08:56,698
is Alice's recipient

1855
01:08:56,698 --> 01:08:58,979
so finally we'll take a quick look at

1856
01:08:58,979 --> 01:09:01,679
the flows for Abuse Prevention and

1857
01:09:01,679 --> 01:09:04,319
obviously this is a fairly complex topic

1858
01:09:04,319 --> 01:09:06,179
and there are a variety of mechanisms

1859
01:09:06,179 --> 01:09:07,679
that could be deployed but we

1860
01:09:07,679 --> 01:09:10,679
specifically Focus here on more widely

1861
01:09:10,679 --> 01:09:13,500
deployed mechanisms so those are spam

1862
01:09:13,500 --> 01:09:15,120
filtering user reporting and block

1863
01:09:15,120 --> 01:09:17,660
listing

1864
01:09:18,060 --> 01:09:20,698
well so generally one option for Abuse

1865
01:09:20,698 --> 01:09:22,738
Prevention is don't do anything and

1866
01:09:22,738 --> 01:09:24,719
don't address it but we think Abuse

1867
01:09:24,719 --> 01:09:26,580
Prevention is valuable and should be

1868
01:09:26,580 --> 01:09:28,080
integrated with any designs that are

1869
01:09:28,080 --> 01:09:31,799
proposed as part of a holistic protocol

1870
01:09:31,799 --> 01:09:34,439
and while the other trivial option that

1871
01:09:34,439 --> 01:09:36,420
we've seen proposed is just to give Bob

1872
01:09:36,420 --> 01:09:38,759
chat all the metadata about senders from

1873
01:09:38,759 --> 01:09:41,520
Alice chat but this would be hugely bad

1874
01:09:41,520 --> 01:09:43,679
for privacy since now bobchat learns

1875
01:09:43,679 --> 01:09:46,319
about users on other providers so

1876
01:09:46,319 --> 01:09:48,179
instead we offer some designs that

1877
01:09:48,179 --> 01:09:50,219
involve Abuse Prevention mechanisms

1878
01:09:50,219 --> 01:09:52,319
while also trying to minimize this

1879
01:09:52,319 --> 01:09:55,199
metadata leakage

1880
01:09:55,199 --> 01:09:57,360
now they're specifically concerned that

1881
01:09:57,360 --> 01:09:59,100
this that with this interoperability

1882
01:09:59,100 --> 01:10:01,020
mandate there'll be an increase in spam

1883
01:10:01,020 --> 01:10:03,239
so having spam filtering in place will

1884
01:10:03,239 --> 01:10:05,160
be really important here

1885
01:10:05,160 --> 01:10:07,800
and many apps use server-side spam

1886
01:10:07,800 --> 01:10:09,719
filters to have the provider identify

1887
01:10:09,719 --> 01:10:12,360
traffic that is likely to be spam based

1888
01:10:12,360 --> 01:10:15,420
on metadata and block it

1889
01:10:15,420 --> 01:10:17,520
so benefit of our model is that we could

1890
01:10:17,520 --> 01:10:19,739
have Alice chat run the spam filter on

1891
01:10:19,739 --> 01:10:21,360
the sender's traffic before forwarding

1892
01:10:21,360 --> 01:10:24,060
it to bobchat Alice chat already knows

1893
01:10:24,060 --> 01:10:26,760
the metadata about users on its platform

1894
01:10:26,760 --> 01:10:28,260
and so

1895
01:10:28,260 --> 01:10:30,420
um it can use this to filter spam

1896
01:10:30,420 --> 01:10:32,280
without leaking extra metadata to

1897
01:10:32,280 --> 01:10:34,320
bobchat who might be concerned about an

1898
01:10:34,320 --> 01:10:36,300
increase of spam incoming to its

1899
01:10:36,300 --> 01:10:38,520
platform and for example based on The

1900
01:10:38,520 --> 01:10:40,440
dma Gatekeepers could require other

1901
01:10:40,440 --> 01:10:42,900
providers to run spam filters on their

1902
01:10:42,900 --> 01:10:46,500
end as a condition for interoperating

1903
01:10:46,500 --> 01:10:48,540
next for user reporting we use an

1904
01:10:48,540 --> 01:10:50,460
asymmetric message ranking scheme to

1905
01:10:50,460 --> 01:10:52,920
enable secure metadata private content

1906
01:10:52,920 --> 01:10:54,060
moderation

1907
01:10:54,060 --> 01:10:56,159
in our design Alice as part of the

1908
01:10:56,159 --> 01:10:58,080
ciphertext includes a message ranking

1909
01:10:58,080 --> 01:11:00,480
tag to authenticate the message so that

1910
01:11:00,480 --> 01:11:03,420
bobchat can act as a moderator

1911
01:11:03,420 --> 01:11:05,699
then if Alice's message is deemed

1912
01:11:05,699 --> 01:11:08,040
abusive by Bob and Bob wants to report

1913
01:11:08,040 --> 01:11:10,260
it he would send the contents of the

1914
01:11:10,260 --> 01:11:12,900
message the message franking tag and

1915
01:11:12,900 --> 01:11:15,360
that Alice was Ascender to bobchat who

1916
01:11:15,360 --> 01:11:17,280
could then choose to act on this and can

1917
01:11:17,280 --> 01:11:19,620
verify the franking tag so for example

1918
01:11:19,620 --> 01:11:21,719
bobchat could ask Alice chat to block

1919
01:11:21,719 --> 01:11:24,060
any messages coming from Alice to its

1920
01:11:24,060 --> 01:11:26,219
platform

1921
01:11:26,219 --> 01:11:28,080
and finally for Block listing the

1922
01:11:28,080 --> 01:11:29,640
overall flow would work similar to

1923
01:11:29,640 --> 01:11:31,800
reporting in our design we have Bob

1924
01:11:31,800 --> 01:11:34,500
reveal Alice's user ID to Bob chat so

1925
01:11:34,500 --> 01:11:36,659
that Bob chat can block the future

1926
01:11:36,659 --> 01:11:40,440
communication from Alice to Bob

1927
01:11:40,440 --> 01:11:42,659
overall security goals here that we want

1928
01:11:42,659 --> 01:11:43,980
to Target user reporting that's

1929
01:11:43,980 --> 01:11:45,239
verifiable

1930
01:11:45,239 --> 01:11:47,640
but we also want to minimize metadata

1931
01:11:47,640 --> 01:11:50,120
leakage here

1932
01:11:50,699 --> 01:11:52,860
so now that we've given some highlights

1933
01:11:52,860 --> 01:11:55,320
of the core areas in our design let's

1934
01:11:55,320 --> 01:11:57,120
look at some of the open directions left

1935
01:11:57,120 --> 01:12:00,019
here to explore

1936
01:12:00,540 --> 01:12:02,340
so the first question is how do we

1937
01:12:02,340 --> 01:12:04,620
improve the privacy of interoperable n10

1938
01:12:04,620 --> 01:12:07,080
encryption by reducing metadata leakage

1939
01:12:07,080 --> 01:12:08,699
in the setting

1940
01:12:08,699 --> 01:12:11,460
also how do we extend other protocols

1941
01:12:11,460 --> 01:12:13,980
used in n10 encrypted messaging like key

1942
01:12:13,980 --> 01:12:15,780
transparency for instance into this

1943
01:12:15,780 --> 01:12:18,600
interoperability setting and finally how

1944
01:12:18,600 --> 01:12:20,460
do we extend our framework analyzes to

1945
01:12:20,460 --> 01:12:22,380
group chats and encrypted calls which

1946
01:12:22,380 --> 01:12:26,640
will also be required by the dma

1947
01:12:26,640 --> 01:12:29,159
and so to conclude here interoperability

1948
01:12:29,159 --> 01:12:31,679
clearly presents lots of challenges and

1949
01:12:31,679 --> 01:12:33,900
open questions in the space

1950
01:12:33,900 --> 01:12:36,420
but rather than being a burden we can

1951
01:12:36,420 --> 01:12:38,280
actually use interoperability as an

1952
01:12:38,280 --> 01:12:39,840
opportunity to design encrypted

1953
01:12:39,840 --> 01:12:42,840
messaging with more privacy so what do I

1954
01:12:42,840 --> 01:12:45,239
mean here in particular interoperability

1955
01:12:45,239 --> 01:12:48,480
by Design forces surface providers who

1956
01:12:48,480 --> 01:12:50,880
we believe are non-concluding to split

1957
01:12:50,880 --> 01:12:53,280
up their view of communication and with

1958
01:12:53,280 --> 01:12:54,960
some work here we can make it so that

1959
01:12:54,960 --> 01:12:56,820
neither server has a full view of the

1960
01:12:56,820 --> 01:12:59,940
communication flow or user metadata

1961
01:12:59,940 --> 01:13:02,100
and so one idea here for instance is

1962
01:13:02,100 --> 01:13:03,540
that we could even make centralized

1963
01:13:03,540 --> 01:13:05,400
messaging more private by building

1964
01:13:05,400 --> 01:13:08,040
inexpensive anonymizing proxies using

1965
01:13:08,040 --> 01:13:09,900
interoperability

1966
01:13:09,900 --> 01:13:12,000
so if you want more details about our

1967
01:13:12,000 --> 01:13:13,739
work I have the link to our paper on the

1968
01:13:13,739 --> 01:13:15,719
slide thank you for listening I'm happy

1969
01:13:15,719 --> 01:13:16,850
to take any questions

1970
01:13:16,850 --> 01:13:25,920
[Applause]

1971
01:13:25,920 --> 01:13:29,060
hi so um so your proposal is that the

1972
01:13:29,060 --> 01:13:32,340
non-gatekeeper app has to kind of in

1973
01:13:32,340 --> 01:13:34,560
some sense embed the protocol of the

1974
01:13:34,560 --> 01:13:36,420
gatekeeper app within it in some sense

1975
01:13:36,420 --> 01:13:39,659
yeah so um so I saw this as this there's

1976
01:13:39,659 --> 01:13:42,780
like a promo code to this is that on one

1977
01:13:42,780 --> 01:13:45,300
hand the non-gatekeeper app has to now

1978
01:13:45,300 --> 01:13:47,880
be much more protocol agile in the sense

1979
01:13:47,880 --> 01:13:50,400
that the gatekeeper app can change uh

1980
01:13:50,400 --> 01:13:52,320
the protocol and the non-gatekeeper app

1981
01:13:52,320 --> 01:13:53,640
has to kind of update which could be

1982
01:13:53,640 --> 01:13:55,260
good because that means the

1983
01:13:55,260 --> 01:13:57,179
non-gatekeeper app has to be

1984
01:13:57,179 --> 01:13:59,100
crypto agile in a way that they have

1985
01:13:59,100 --> 01:14:00,659
been before so it's like a good thing on

1986
01:14:00,659 --> 01:14:03,239
the other hand the gatekeeper app could

1987
01:14:03,239 --> 01:14:05,159
just keep changing the protocol

1988
01:14:05,159 --> 01:14:07,320
which kind of could act like a denial of

1989
01:14:07,320 --> 01:14:08,400
service

1990
01:14:08,400 --> 01:14:11,100
so you see that's a you know the pro

1991
01:14:11,100 --> 01:14:12,780
what what have you thought about that

1992
01:14:12,780 --> 01:14:14,940
kind of agility issue in in your work at

1993
01:14:14,940 --> 01:14:16,320
all

1994
01:14:16,320 --> 01:14:18,179
so I think

1995
01:14:18,179 --> 01:14:20,460
um there is some

1996
01:14:20,460 --> 01:14:23,520
stipulation in the dma saying that

1997
01:14:23,520 --> 01:14:26,420
um like making it inaccessible for

1998
01:14:26,420 --> 01:14:29,520
non-gatekeepers to allow for this would

1999
01:14:29,520 --> 01:14:32,820
be violent in violation of the dma but I

2000
01:14:32,820 --> 01:14:34,199
mean that's an interesting question also

2001
01:14:34,199 --> 01:14:35,640
like how do you deal with this sort of

2002
01:14:35,640 --> 01:14:39,140
crypto agility where we could have the

2003
01:14:39,140 --> 01:14:41,820
gatekeeper app sort of implement these

2004
01:14:41,820 --> 01:14:43,679
kinds of measures so that it makes it

2005
01:14:43,679 --> 01:14:47,100
really hard for non-gatekeepers to

2006
01:14:47,100 --> 01:14:49,440
yeah exactly so

2007
01:14:49,440 --> 01:14:50,280
um

2008
01:14:50,280 --> 01:14:51,960
so that's an it's an interesting

2009
01:14:51,960 --> 01:14:53,520
question how do we deal with this I

2010
01:14:53,520 --> 01:14:55,199
think that this would be sort of in

2011
01:14:55,199 --> 01:14:56,820
violation of the dma and I think they

2012
01:14:56,820 --> 01:14:58,739
could sort of like bow it out in courts

2013
01:14:58,739 --> 01:15:00,000
most likely

2014
01:15:00,000 --> 01:15:01,320
um but

2015
01:15:01,320 --> 01:15:03,060
I mean I think the future long term

2016
01:15:03,060 --> 01:15:04,860
would be that we would have to sort of

2017
01:15:04,860 --> 01:15:07,260
standardize something so to sort of

2018
01:15:07,260 --> 01:15:08,940
prevent this but there are interesting

2019
01:15:08,940 --> 01:15:12,120
questions like this in the space

2020
01:15:12,120 --> 01:15:14,100
I'm afraid we have to move on so please

2021
01:15:14,100 --> 01:15:15,810
join me in thanking Julia again

2022
01:15:15,810 --> 01:15:23,400
[Applause]

2023
01:15:23,400 --> 01:15:25,920
the next speaker in this session is uh

2024
01:15:25,920 --> 01:15:28,020
Shu katsumota who will be talking about

2025
01:15:28,020 --> 01:15:30,780
meditative metadata protection for MLS

2026
01:15:30,780 --> 01:15:32,940
and its variants

2027
01:15:32,940 --> 01:15:34,739
uh thank you for the intro my name is

2028
01:15:34,739 --> 01:15:37,020
Shu this is a joint work with keita

2029
01:15:37,020 --> 01:15:40,380
Hashimoto and Thomas press so Yep this

2030
01:15:40,380 --> 01:15:41,699
is the title

2031
01:15:41,699 --> 01:15:44,699
so as everybody knows uh everybody's

2032
01:15:44,699 --> 01:15:47,219
using message apps lately and uh you can

2033
01:15:47,219 --> 01:15:49,140
see from the picture that

2034
01:15:49,140 --> 01:15:51,719
there's a lot of users now and the weird

2035
01:15:51,719 --> 01:15:54,000
thing in Japan everybody uses this uh

2036
01:15:54,000 --> 01:15:56,880
obscure app called line I think outside

2037
01:15:56,880 --> 01:16:00,719
of Japan not a lot of people uses it and

2038
01:16:00,719 --> 01:16:02,699
WhatsApp is more of the more popular

2039
01:16:02,699 --> 01:16:04,560
ones and within this community I think

2040
01:16:04,560 --> 01:16:06,960
signal is one of the favorite apps

2041
01:16:06,960 --> 01:16:09,659
um so this is just a recap on that

2042
01:16:09,659 --> 01:16:11,880
everybody uses messenger apps

2043
01:16:11,880 --> 01:16:13,739
so the thing is uh when we think about

2044
01:16:13,739 --> 01:16:15,659
messaging apps it provides a lot of

2045
01:16:15,659 --> 01:16:17,640
unique security threats

2046
01:16:17,640 --> 01:16:19,739
and one of the reason is that messaging

2047
01:16:19,739 --> 01:16:22,219
apps are mostly run on our smartphones

2048
01:16:22,219 --> 01:16:24,540
and that means that it's really deeply

2049
01:16:24,540 --> 01:16:28,080
tied to our everyday lives so once these

2050
01:16:28,080 --> 01:16:30,120
contents and metadata that are you know

2051
01:16:30,120 --> 01:16:32,460
run on our messaging apps leak then it

2052
01:16:32,460 --> 01:16:34,620
will leak a lot of our information

2053
01:16:34,620 --> 01:16:36,719
and not only our information but also

2054
01:16:36,719 --> 01:16:38,699
our you know friends colleagues uh

2055
01:16:38,699 --> 01:16:40,560
anybody's you know like relation to

2056
01:16:40,560 --> 01:16:42,900
these social relationships will kind of

2057
01:16:42,900 --> 01:16:45,780
uh leak too so in that sense it's a very

2058
01:16:45,780 --> 01:16:47,580
unique uh app

2059
01:16:47,580 --> 01:16:50,400
and also uh compared to other TLS based

2060
01:16:50,400 --> 01:16:53,280
Communications like just web browsing uh

2061
01:16:53,280 --> 01:16:56,640
messaging apps tend to last much longer

2062
01:16:56,640 --> 01:16:58,080
so it means from the Hacker's point of

2063
01:16:58,080 --> 01:16:59,520
view there's going to be a higher risk

2064
01:16:59,520 --> 01:17:02,040
of a security breach and also when there

2065
01:17:02,040 --> 01:17:04,080
is a security breach

2066
01:17:04,080 --> 01:17:06,540
um then this insecurity is going to

2067
01:17:06,540 --> 01:17:09,260
persist longer

2068
01:17:10,140 --> 01:17:12,000
and there's a lot of ways to kind of you

2069
01:17:12,000 --> 01:17:13,980
know collect data from these messaging

2070
01:17:13,980 --> 01:17:16,860
apps and one way is to do from a legal

2071
01:17:16,860 --> 01:17:19,260
means so this is a meta's transparency

2072
01:17:19,260 --> 01:17:21,960
report from last year for half a year

2073
01:17:21,960 --> 01:17:23,940
and as you can see uh it's really

2074
01:17:23,940 --> 01:17:25,739
growing the number of reports that the

2075
01:17:25,739 --> 01:17:28,080
government asks of meta is very uh

2076
01:17:28,080 --> 01:17:30,300
increasing and you can see that at least

2077
01:17:30,300 --> 01:17:33,179
75 percent of the time uh some data are

2078
01:17:33,179 --> 01:17:35,880
provided back to the government

2079
01:17:35,880 --> 01:17:38,219
so what this means is that well it is

2080
01:17:38,219 --> 01:17:40,440
well I mean it's not like they're trying

2081
01:17:40,440 --> 01:17:42,060
to like you know give all these

2082
01:17:42,060 --> 01:17:43,739
information to the government but we

2083
01:17:43,739 --> 01:17:45,239
have to be mindful that it's we're

2084
01:17:45,239 --> 01:17:47,219
always you know they can always leak our

2085
01:17:47,219 --> 01:17:49,679
information if needed

2086
01:17:49,679 --> 01:17:51,900
and also legal means are not the end of

2087
01:17:51,900 --> 01:17:54,239
the story because as some people may

2088
01:17:54,239 --> 01:17:57,120
know spyware are sold off the shelf by

2089
01:17:57,120 --> 01:17:59,159
companies and hackers so this Pegasus

2090
01:17:59,159 --> 01:18:02,159
spyware I think some people know uh was

2091
01:18:02,159 --> 01:18:04,759
a big incident

2092
01:18:05,100 --> 01:18:07,440
so this brings me to uh today's talk

2093
01:18:07,440 --> 01:18:09,600
which is about secure group messaging

2094
01:18:09,600 --> 01:18:12,900
and in particular a scalable one

2095
01:18:12,900 --> 01:18:15,480
so first I'll talk about a systematic

2096
01:18:15,480 --> 01:18:17,460
View and what I mean by a secure

2097
01:18:17,460 --> 01:18:18,659
messaging app

2098
01:18:18,659 --> 01:18:20,760
and then I'm going to compare signal and

2099
01:18:20,760 --> 01:18:23,760
MLS and show that MLS lacks some

2100
01:18:23,760 --> 01:18:25,860
features that signal has

2101
01:18:25,860 --> 01:18:28,739
and finally I'll show how to bootstrap

2102
01:18:28,739 --> 01:18:30,780
MLS to have this metadata hiding

2103
01:18:30,780 --> 01:18:33,540
property which makes it as secure a

2104
01:18:33,540 --> 01:18:35,900
signal

2105
01:18:36,659 --> 01:18:39,060
so let me first take a closer look at

2106
01:18:39,060 --> 01:18:40,860
messaging protocols

2107
01:18:40,860 --> 01:18:43,260
so Alice wants to securely send a

2108
01:18:43,260 --> 01:18:45,120
message to Bob and here we have to be

2109
01:18:45,120 --> 01:18:47,219
mindful that there has to be a server in

2110
01:18:47,219 --> 01:18:49,140
you know sitting in the middle and the

2111
01:18:49,140 --> 01:18:50,520
reason for this is that when you're

2112
01:18:50,520 --> 01:18:52,500
thinking about messaging apps nobody's

2113
01:18:52,500 --> 01:18:55,199
online all the time on their phone so

2114
01:18:55,199 --> 01:18:57,179
maybe Bob is offline

2115
01:18:57,179 --> 01:18:59,580
in that case well when Alice sends a

2116
01:18:59,580 --> 01:19:01,560
message there has to be some entity that

2117
01:19:01,560 --> 01:19:03,239
kind of stores it and relays it to Bob

2118
01:19:03,239 --> 01:19:05,400
when it comes online again

2119
01:19:05,400 --> 01:19:07,199
so you could think of two adversaries

2120
01:19:07,199 --> 01:19:09,239
here you know uh the network adversary

2121
01:19:09,239 --> 01:19:11,820
and the server adversary and what I mean

2122
01:19:11,820 --> 01:19:13,380
you know server adversary I'm not saying

2123
01:19:13,380 --> 01:19:15,480
that they're you know really trying to

2124
01:19:15,480 --> 01:19:18,360
uh look into your data but maybe they're

2125
01:19:18,360 --> 01:19:19,679
just looking at it and they're storing

2126
01:19:19,679 --> 01:19:22,140
in their server and maybe governments

2127
01:19:22,140 --> 01:19:24,600
can tell them to hand them over or there

2128
01:19:24,600 --> 01:19:26,460
could be a security breach so it's just

2129
01:19:26,460 --> 01:19:28,860
better to view them as a adversary in a

2130
01:19:28,860 --> 01:19:31,140
theoretical sense

2131
01:19:31,140 --> 01:19:33,120
so first of all removing Outsider

2132
01:19:33,120 --> 01:19:34,980
threats are really easy we just use

2133
01:19:34,980 --> 01:19:36,840
end-to-end encryption between the user

2134
01:19:36,840 --> 01:19:39,360
and the server so now nobody from the

2135
01:19:39,360 --> 01:19:41,040
outside world can see you know what the

2136
01:19:41,040 --> 01:19:43,640
communication channels are up to

2137
01:19:43,640 --> 01:19:46,320
also removing this Insider threat is

2138
01:19:46,320 --> 01:19:48,480
well it's actually easy too so we can

2139
01:19:48,480 --> 01:19:50,400
just assume that Alice and Bob shares a

2140
01:19:50,400 --> 01:19:53,100
secret key then um they can just uh

2141
01:19:53,100 --> 01:19:55,260
encrypt this message with this Orange

2142
01:19:55,260 --> 01:19:57,960
Box and send it and the server can't

2143
01:19:57,960 --> 01:19:59,699
decrypt it anywhere

2144
01:19:59,699 --> 01:20:01,440
and you can use like an authenticated

2145
01:20:01,440 --> 01:20:04,199
key exchange to share this uh establish

2146
01:20:04,199 --> 01:20:06,600
this key for instance in Signal we use

2147
01:20:06,600 --> 01:20:10,199
the x3dh protocol to do that

2148
01:20:10,199 --> 01:20:12,120
so at this point you know when I first

2149
01:20:12,120 --> 01:20:14,400
started doing uh and uh secure messaging

2150
01:20:14,400 --> 01:20:17,159
I thought end 10 encryption was all that

2151
01:20:17,159 --> 01:20:19,879
really matters

2152
01:20:20,100 --> 01:20:21,540
but this is actually not the case

2153
01:20:21,540 --> 01:20:23,699
because in practice as I think people

2154
01:20:23,699 --> 01:20:26,219
been talking a lot metadatas are also

2155
01:20:26,219 --> 01:20:27,540
used

2156
01:20:27,540 --> 01:20:29,820
and at least for this talk I Define this

2157
01:20:29,820 --> 01:20:31,920
metadata to be the identity and social

2158
01:20:31,920 --> 01:20:35,520
relationships of group of users

2159
01:20:35,520 --> 01:20:37,980
so in this diagram to be a bit more

2160
01:20:37,980 --> 01:20:40,500
specific let's say this MD stands for

2161
01:20:40,500 --> 01:20:42,840
this bit string Alice to Bob

2162
01:20:42,840 --> 01:20:45,239
and the reason why we require this

2163
01:20:45,239 --> 01:20:47,940
metadata is because when the server just

2164
01:20:47,940 --> 01:20:49,560
receives this you know orange blob of

2165
01:20:49,560 --> 01:20:51,480
ciphertext it doesn't know what to do

2166
01:20:51,480 --> 01:20:53,880
with it so when Bob comes online it

2167
01:20:53,880 --> 01:20:55,560
can't do anything with it without this

2168
01:20:55,560 --> 01:20:57,360
you know explicit metadata lying around

2169
01:20:57,360 --> 01:21:00,360
so Alice will specify in this bit string

2170
01:21:00,360 --> 01:21:02,640
that you know it's from it's for Bob and

2171
01:21:02,640 --> 01:21:03,960
this is how the server will be able to

2172
01:21:03,960 --> 01:21:07,199
relay these messages to Bob

2173
01:21:07,199 --> 01:21:09,360
but now what happens is that you know

2174
01:21:09,360 --> 01:21:11,040
the server learns who's trying to

2175
01:21:11,040 --> 01:21:13,760
communicate with whom

2176
01:21:13,800 --> 01:21:15,840
so we might believe that you know

2177
01:21:15,840 --> 01:21:17,760
metadata maybe that's not really

2178
01:21:17,760 --> 01:21:20,520
important but it reveals more than you

2179
01:21:20,520 --> 01:21:22,800
think so this was in a very nice uh news

2180
01:21:22,800 --> 01:21:25,500
article uh and a former NSA general

2181
01:21:25,500 --> 01:21:27,300
counsel mentions that if you have enough

2182
01:21:27,300 --> 01:21:31,020
metadata you don't really need content

2183
01:21:31,020 --> 01:21:33,060
and when you think of it in the very

2184
01:21:33,060 --> 01:21:34,739
extreme let's say you're a journalist

2185
01:21:34,739 --> 01:21:36,960
and you're talking to an activist then

2186
01:21:36,960 --> 01:21:39,239
that already explains a lot of the

2187
01:21:39,239 --> 01:21:41,280
content so maybe sometimes it might

2188
01:21:41,280 --> 01:21:43,800
undermine uh the fact that you're using

2189
01:21:43,800 --> 01:21:45,900
end-to-end encryption because those

2190
01:21:45,900 --> 01:21:48,060
relationships already defines what kind

2191
01:21:48,060 --> 01:21:51,260
of content you're talking about

2192
01:21:51,960 --> 01:21:54,120
and what's more scary is that metadata

2193
01:21:54,120 --> 01:21:56,520
collection can be done systematically

2194
01:21:56,520 --> 01:21:59,699
so there are these um services that

2195
01:21:59,699 --> 01:22:01,920
provide surveillance in technology for

2196
01:22:01,920 --> 01:22:04,739
tracking metadata so metadata are a

2197
01:22:04,739 --> 01:22:07,260
really important information that well

2198
01:22:07,260 --> 01:22:10,159
we want to hide

2199
01:22:11,219 --> 01:22:13,440
so as a conceptual contribution what we

2200
01:22:13,440 --> 01:22:14,880
did was that we tried to categorize

2201
01:22:14,880 --> 01:22:17,040
sensitive data that we want to hide into

2202
01:22:17,040 --> 01:22:19,560
three layers so here the first layer is

2203
01:22:19,560 --> 01:22:21,360
very very obvious so you know it's

2204
01:22:21,360 --> 01:22:23,219
supposed to be hidden from for any

2205
01:22:23,219 --> 01:22:25,140
end-to-end encryption secure messaging

2206
01:22:25,140 --> 01:22:27,060
service so the message has to be

2207
01:22:27,060 --> 01:22:29,880
encrypted we call that the first layer

2208
01:22:29,880 --> 01:22:31,620
the second layer is the explicit

2209
01:22:31,620 --> 01:22:33,480
metadata that I was talking about so

2210
01:22:33,480 --> 01:22:36,300
this has to well we believe that this is

2211
01:22:36,300 --> 01:22:38,580
required to you know like uh make the

2212
01:22:38,580 --> 01:22:41,699
server relay these messages

2213
01:22:41,699 --> 01:22:43,560
and the third layer is a bit more subtle

2214
01:22:43,560 --> 01:22:45,239
but when you think about it is as

2215
01:22:45,239 --> 01:22:47,880
equally as important as a second layer

2216
01:22:47,880 --> 01:22:50,580
but the third layer is this user server

2217
01:22:50,580 --> 01:22:52,260
authenticated Channel

2218
01:22:52,260 --> 01:22:54,600
and this implicitly leaks metadata

2219
01:22:54,600 --> 01:22:56,580
because when the user connects to the

2220
01:22:56,580 --> 01:22:58,500
server well the server gets to know

2221
01:22:58,500 --> 01:23:01,080
who's connecting so even if this you

2222
01:23:01,080 --> 01:23:02,400
know second layer information wasn't

2223
01:23:02,400 --> 01:23:06,179
there when this Alice uploads this

2224
01:23:06,179 --> 01:23:10,199
orange blob and Bob at a later Point

2225
01:23:10,199 --> 01:23:12,179
authenticate itself to the server and

2226
01:23:12,179 --> 01:23:14,219
retrieve this orange Bob then it will

2227
01:23:14,219 --> 01:23:16,560
learn that this blob was you know moved

2228
01:23:16,560 --> 01:23:18,600
from Alice to Bob so it will actually

2229
01:23:18,600 --> 01:23:20,640
learn the second layer information even

2230
01:23:20,640 --> 01:23:21,540
though

2231
01:23:21,540 --> 01:23:24,480
uh it's not explicitly there

2232
01:23:24,480 --> 01:23:26,100
and one might think that you can use

2233
01:23:26,100 --> 01:23:29,280
anonymous channels like Tor or VPN to do

2234
01:23:29,280 --> 01:23:31,500
this authentication on the bottom line

2235
01:23:31,500 --> 01:23:34,380
but you really can't do that because

2236
01:23:34,380 --> 01:23:35,940
um with Anonymous channels you can

2237
01:23:35,940 --> 01:23:38,100
perform a Dos attack so anybody can just

2238
01:23:38,100 --> 01:23:41,219
send garbage elements to Bob without the

2239
01:23:41,219 --> 01:23:43,080
server being able to catch who it was

2240
01:23:43,080 --> 01:23:44,880
doing

2241
01:23:44,880 --> 01:23:47,880
so when I when we talk about hiding or

2242
01:23:47,880 --> 01:23:49,500
sensitive data we want to really hide

2243
01:23:49,500 --> 01:23:51,360
all these one first two like third

2244
01:23:51,360 --> 01:23:55,800
layers and have a secure scheme

2245
01:23:55,800 --> 01:23:57,659
so in that line I want to kind of go

2246
01:23:57,659 --> 01:23:59,040
into the current state of secure

2247
01:23:59,040 --> 01:24:00,420
messaging

2248
01:24:00,420 --> 01:24:02,100
so signal protocol this is something

2249
01:24:02,100 --> 01:24:04,560
that everybody I think knows very well

2250
01:24:04,560 --> 01:24:06,300
is a gold standard for two user

2251
01:24:06,300 --> 01:24:07,800
messaging

2252
01:24:07,800 --> 01:24:10,739
and it's protocol and a variation of its

2253
01:24:10,739 --> 01:24:13,020
protocol are used within signal WhatsApp

2254
01:24:13,020 --> 01:24:16,140
Skype the list goes on

2255
01:24:16,140 --> 01:24:18,179
and you can also use the signal protocol

2256
01:24:18,179 --> 01:24:19,679
in the group setting

2257
01:24:19,679 --> 01:24:21,900
and here sending a message scales with

2258
01:24:21,900 --> 01:24:25,260
order n where n is the number of users

2259
01:24:25,260 --> 01:24:27,300
so this kind of uh sparked some interest

2260
01:24:27,300 --> 01:24:29,280
in the community that can we make this

2261
01:24:29,280 --> 01:24:31,020
more efficient because we don't want to

2262
01:24:31,020 --> 01:24:33,840
pay this order and cost

2263
01:24:33,840 --> 01:24:35,940
and this was the beginning of the

2264
01:24:35,940 --> 01:24:39,120
messaging layer security uh protocol MLS

2265
01:24:39,120 --> 01:24:40,860
so it is a scalable solution to secure

2266
01:24:40,860 --> 01:24:42,179
messaging

2267
01:24:42,179 --> 01:24:44,640
and there is an ITF that was driven by

2268
01:24:44,640 --> 01:24:47,040
academics and Industry and we're in the

2269
01:24:47,040 --> 01:24:50,280
final stage of being of standardization

2270
01:24:50,280 --> 01:24:52,620
and the draft versions of MLS has

2271
01:24:52,620 --> 01:24:55,320
already been used in Cisco's WebEx and

2272
01:24:55,320 --> 01:24:57,840
RingCentral

2273
01:24:57,840 --> 01:25:00,480
the main key feature of MLS is that it's

2274
01:25:00,480 --> 01:25:03,120
supposed to be secure as the signal

2275
01:25:03,120 --> 01:25:05,100
protocol and in Superior

2276
01:25:05,100 --> 01:25:07,800
and let me kind of like focus on what I

2277
01:25:07,800 --> 01:25:10,380
mean by in spirit

2278
01:25:10,380 --> 01:25:13,620
so let's take a closer look

2279
01:25:13,620 --> 01:25:16,980
and see what they do on these like first

2280
01:25:16,980 --> 01:25:19,020
second and third layers

2281
01:25:19,020 --> 01:25:22,800
so for Signal it covers all these layers

2282
01:25:22,800 --> 01:25:25,020
so you have this vanilla signal protocol

2283
01:25:25,020 --> 01:25:27,420
that only cover this first layer but

2284
01:25:27,420 --> 01:25:29,400
after a while we had sealed sender

2285
01:25:29,400 --> 01:25:31,020
private groups that eventually covered

2286
01:25:31,020 --> 01:25:33,659
all these third layers

2287
01:25:33,659 --> 01:25:35,520
so it's also secure against Network

2288
01:25:35,520 --> 01:25:36,900
adversaries

2289
01:25:36,900 --> 01:25:38,820
but for MLS

2290
01:25:38,820 --> 01:25:40,860
what we have right now is that we have

2291
01:25:40,860 --> 01:25:43,980
MLS plain text and MLS ciphertext so MLS

2292
01:25:43,980 --> 01:25:46,760
has two modes and MLS plain text

2293
01:25:46,760 --> 01:25:49,260
covers the first layer and this is where

2294
01:25:49,260 --> 01:25:51,120
most of the academic words on security

2295
01:25:51,120 --> 01:25:53,580
proofs have been

2296
01:25:53,580 --> 01:25:55,679
so we also have MLS ciphertext that

2297
01:25:55,679 --> 01:25:57,659
secures the second layer but when we go

2298
01:25:57,659 --> 01:25:59,400
up the third layer there's really no

2299
01:25:59,400 --> 01:26:01,500
protection there and this is completely

2300
01:26:01,500 --> 01:26:03,300
fine because it was out of the scope for

2301
01:26:03,300 --> 01:26:05,040
MLS but we have to really think about

2302
01:26:05,040 --> 01:26:07,320
this when we're going to deploy this MLS

2303
01:26:07,320 --> 01:26:09,239
uh and claim that it's going to be

2304
01:26:09,239 --> 01:26:12,019
secure as signal

2305
01:26:12,239 --> 01:26:14,820
so this is our main contribution what we

2306
01:26:14,820 --> 01:26:16,679
did is that we made MLS as secure as

2307
01:26:16,679 --> 01:26:18,719
signal by providing the first uh

2308
01:26:18,719 --> 01:26:20,760
protocol to secure up onto the third

2309
01:26:20,760 --> 01:26:22,800
layer and we also provided the First

2310
01:26:22,800 --> 01:26:25,139
Security uh definition security model

2311
01:26:25,139 --> 01:26:27,120
and a security proof to kind of

2312
01:26:27,120 --> 01:26:29,699
complement these constructions

2313
01:26:29,699 --> 01:26:32,639
and this work was done at CCS last year

2314
01:26:32,639 --> 01:26:34,679
so if anybody is interested in the like

2315
01:26:34,679 --> 01:26:36,600
the nitty-gritty details I recommend

2316
01:26:36,600 --> 01:26:38,880
reading the ePrint paper uh but let me

2317
01:26:38,880 --> 01:26:40,380
try to give a taste of our Construction

2318
01:26:40,380 --> 01:26:43,380
in the last three or four minutes

2319
01:26:43,380 --> 01:26:45,360
so this is our metadata hiding MLS and

2320
01:26:45,360 --> 01:26:47,639
the core idea is very simple we just use

2321
01:26:47,639 --> 01:26:49,739
this unique continuously evolving group

2322
01:26:49,739 --> 01:26:51,960
secret key shared among the group of

2323
01:26:51,960 --> 01:26:54,360
users so this is something non-existing

2324
01:26:54,360 --> 01:26:56,219
in signal

2325
01:26:56,219 --> 01:26:58,739
and this bootstraps any MLS like

2326
01:26:58,739 --> 01:27:01,020
protocol to be metadata hiding and when

2327
01:27:01,020 --> 01:27:03,480
I mean MLS like protocol so it doesn't

2328
01:27:03,480 --> 01:27:05,520
have to be MLS it could be all these

2329
01:27:05,520 --> 01:27:07,440
other variants that tries to optimize

2330
01:27:07,440 --> 01:27:10,920
mls in different aspects so it's not as

2331
01:27:10,920 --> 01:27:12,600
long as there is this unique group

2332
01:27:12,600 --> 01:27:14,340
Seeker key shared among the groups then

2333
01:27:14,340 --> 01:27:17,159
you can apply this idea it's generic

2334
01:27:17,159 --> 01:27:19,320
simple efficient and you can also have

2335
01:27:19,320 --> 01:27:21,239
post Quantum on top of that

2336
01:27:21,239 --> 01:27:23,219
and the overhead is really small so it's

2337
01:27:23,219 --> 01:27:25,800
only one signature per message so it

2338
01:27:25,800 --> 01:27:28,440
adds a lot of security with efficient

2339
01:27:28,440 --> 01:27:31,638
like with no overhand

2340
01:27:31,679 --> 01:27:33,900
so the idea is very simple at a high

2341
01:27:33,900 --> 01:27:35,520
level so let me share that with you so

2342
01:27:35,520 --> 01:27:37,500
we have a group secret key that's shared

2343
01:27:37,500 --> 01:27:39,420
among all the users what we do is that

2344
01:27:39,420 --> 01:27:42,060
we derive a signing key from this group

2345
01:27:42,060 --> 01:27:43,920
secret and we're going to give this

2346
01:27:43,920 --> 01:27:46,320
verification key to the server and all

2347
01:27:46,320 --> 01:27:48,540
these users on the left side when they

2348
01:27:48,540 --> 01:27:50,460
want to contact the server what they do

2349
01:27:50,460 --> 01:27:52,500
is that they just sign with this signing

2350
01:27:52,500 --> 01:27:54,239
key which is shared among all the group

2351
01:27:54,239 --> 01:27:55,560
of users

2352
01:27:55,560 --> 01:27:56,880
and they're going to do this over

2353
01:27:56,880 --> 01:27:58,500
Anonymous Channel

2354
01:27:58,500 --> 01:28:00,540
so the authentication part comes from

2355
01:28:00,540 --> 01:28:02,639
the signature and it provides like a

2356
01:28:02,639 --> 01:28:04,320
group membership proof

2357
01:28:04,320 --> 01:28:06,659
and this is how they uh prove that

2358
01:28:06,659 --> 01:28:08,280
they're a group member but nothing more

2359
01:28:08,280 --> 01:28:10,440
about their identity

2360
01:28:10,440 --> 01:28:11,940
and the good thing about this is that

2361
01:28:11,940 --> 01:28:13,620
since we're using this group secret key

2362
01:28:13,620 --> 01:28:16,560
that's based on this MLS layer we have

2363
01:28:16,560 --> 01:28:18,540
four secrecy post compromised security

2364
01:28:18,540 --> 01:28:20,580
we have all these nice guarantees we can

2365
01:28:20,580 --> 01:28:23,100
also rotate this group secret key and

2366
01:28:23,100 --> 01:28:27,360
hence rotating this uh signature keys to

2367
01:28:27,360 --> 01:28:30,120
and for those uh who knows about uh this

2368
01:28:30,120 --> 01:28:32,040
topic very well we there's a lot of

2369
01:28:32,040 --> 01:28:34,800
variants of MLS that offers better

2370
01:28:34,800 --> 01:28:36,300
efficiency

2371
01:28:36,300 --> 01:28:38,280
and one of the important one is using

2372
01:28:38,280 --> 01:28:40,320
selective downloading and our idea can

2373
01:28:40,320 --> 01:28:42,179
be applied to theirs by further deriving

2374
01:28:42,179 --> 01:28:45,000
secret permutation of group members from

2375
01:28:45,000 --> 01:28:47,960
this group secret key

2376
01:28:48,360 --> 01:28:50,880
and when I mentioned uh that this works

2377
01:28:50,880 --> 01:28:52,920
for any MLS like protocol we tried to

2378
01:28:52,920 --> 01:28:54,780
formulate that into the security model

2379
01:28:54,780 --> 01:28:57,300
too to make it modular so what we do is

2380
01:28:57,300 --> 01:29:00,000
that we provide an idealized MLs like

2381
01:29:00,000 --> 01:29:01,800
protocol and we view our group

2382
01:29:01,800 --> 01:29:04,980
membership proof as a wrapper protocol

2383
01:29:04,980 --> 01:29:08,280
so we can kind of slap on this wrapper

2384
01:29:08,280 --> 01:29:10,080
protocol on any idealized protocol and

2385
01:29:10,080 --> 01:29:12,360
we prove security of that so if somebody

2386
01:29:12,360 --> 01:29:14,219
wants to use our model then you could

2387
01:29:14,219 --> 01:29:16,679
just slap on your favorite MLS like

2388
01:29:16,679 --> 01:29:19,800
protocol into this idealized model and

2389
01:29:19,800 --> 01:29:23,060
you get a security out of that

2390
01:29:23,100 --> 01:29:25,020
so as a summary what we did is that we

2391
01:29:25,020 --> 01:29:27,300
tried to make MLS like protocol metadata

2392
01:29:27,300 --> 01:29:29,940
hiding by kind of making it more aligned

2393
01:29:29,940 --> 01:29:32,699
with what signal offers

2394
01:29:32,699 --> 01:29:34,500
and this is just the food for thought

2395
01:29:34,500 --> 01:29:37,080
but for the next step um I think once

2396
01:29:37,080 --> 01:29:39,480
MLS is finished with the standardization

2397
01:29:39,480 --> 01:29:40,920
there's going to be a lot of more

2398
01:29:40,920 --> 01:29:44,639
interest in using it in the real world

2399
01:29:44,639 --> 01:29:46,560
um however as you know everybody's been

2400
01:29:46,560 --> 01:29:48,000
talking there's always a tension between

2401
01:29:48,000 --> 01:29:49,980
regulation and end-to-end encryption

2402
01:29:49,980 --> 01:29:53,280
nowadays so right now this work really

2403
01:29:53,280 --> 01:29:56,520
focuses on how secure can we make it for

2404
01:29:56,520 --> 01:29:57,659
the users

2405
01:29:57,659 --> 01:29:59,940
but maybe we really have to think about

2406
01:29:59,940 --> 01:30:01,860
these content moderation to some extent

2407
01:30:01,860 --> 01:30:03,719
I'm not you know trying to Forfeit

2408
01:30:03,719 --> 01:30:05,520
end-to-end encryption but there has to

2409
01:30:05,520 --> 01:30:07,500
be some moderation maybe and in that

2410
01:30:07,500 --> 01:30:08,760
case we really have to think about

2411
01:30:08,760 --> 01:30:10,320
what's the right balance and all that

2412
01:30:10,320 --> 01:30:12,780
until then I don't think I will be able

2413
01:30:12,780 --> 01:30:15,840
to deploy this uh for everybody but um

2414
01:30:15,840 --> 01:30:18,360
I'm optimistic that there has to be some

2415
01:30:18,360 --> 01:30:22,280
nice balancing uh thank you

2416
01:30:27,239 --> 01:30:30,239
yes

2417
01:30:30,780 --> 01:30:32,219
do you mind going back to your slide

2418
01:30:32,219 --> 01:30:35,040
about your solution

2419
01:30:35,040 --> 01:30:38,580
yeah so um so I see once the group is

2420
01:30:38,580 --> 01:30:40,380
constructed that it would be metadata

2421
01:30:40,380 --> 01:30:42,420
hiding but isn't metadata leaked when

2422
01:30:42,420 --> 01:30:44,100
you actually create this group so

2423
01:30:44,100 --> 01:30:46,679
negotiation right so you can actually

2424
01:30:46,679 --> 01:30:49,320
use other protocols to hide that part so

2425
01:30:49,320 --> 01:30:51,360
when you're adding group of users in

2426
01:30:51,360 --> 01:30:53,460
this MLS like protocol you have this

2427
01:30:53,460 --> 01:30:55,620
welcome message which is actually a two

2428
01:30:55,620 --> 01:30:58,320
user communication and for that we can

2429
01:30:58,320 --> 01:31:00,719
use like some other protocols to perform

2430
01:31:00,719 --> 01:31:03,239
that part

2431
01:31:03,239 --> 01:31:06,659
what other protocols uh so Orca could be

2432
01:31:06,659 --> 01:31:09,060
one uh famous like a recent protocol for

2433
01:31:09,060 --> 01:31:11,280
Mucinex that does these metadata hidings

2434
01:31:11,280 --> 01:31:13,199
or you can also use signals protocol

2435
01:31:13,199 --> 01:31:15,239
like the two user protocol to hide this

2436
01:31:15,239 --> 01:31:17,040
you could use sealed sender for instance

2437
01:31:17,040 --> 01:31:19,320
so you could use those for the two user

2438
01:31:19,320 --> 01:31:21,600
communication and after that with the

2439
01:31:21,600 --> 01:31:23,639
group version you can use this group

2440
01:31:23,639 --> 01:31:25,500
secret key to perform more efficient

2441
01:31:25,500 --> 01:31:27,840
metadata hiding protocols

2442
01:31:27,840 --> 01:31:29,400
thank you

2443
01:31:29,400 --> 01:31:31,980
all right thank you very much

2444
01:31:31,980 --> 01:31:38,940
[Applause]

2445
01:31:38,940 --> 01:31:41,040
the final talk in this session is on

2446
01:31:41,040 --> 01:31:43,260
real world deniability in messaging and

2447
01:31:43,260 --> 01:31:46,460
will be given by Daniel Collins

2448
01:31:48,540 --> 01:31:51,420
uh okay hello everyone I'm Daniel and

2449
01:31:51,420 --> 01:31:53,699
this is uh joint work with Simone and

2450
01:31:53,699 --> 01:31:55,920
Lois at epfl

2451
01:31:55,920 --> 01:31:58,500
so this is about deniability so firstly

2452
01:31:58,500 --> 01:32:02,520
what is deniability so in essence uh to

2453
01:32:02,520 --> 01:32:05,639
quote Moxie Mallon Spike if someone

2454
01:32:05,639 --> 01:32:07,980
receives basically If you're receiving a

2455
01:32:07,980 --> 01:32:09,960
message you can be sure that's sort of

2456
01:32:09,960 --> 01:32:12,300
the person who sent it to you sent it

2457
01:32:12,300 --> 01:32:13,440
that is to say you have some

2458
01:32:13,440 --> 01:32:15,540
authenticity but crucially uh you cannot

2459
01:32:15,540 --> 01:32:17,040
prove to anyone else that it was

2460
01:32:17,040 --> 01:32:18,960
something you wrote

2461
01:32:18,960 --> 01:32:21,600
um so concretely take two parties Alice

2462
01:32:21,600 --> 01:32:23,699
and Bob who are communicating so let's

2463
01:32:23,699 --> 01:32:26,219
say Alice says something to Bob that Bob

2464
01:32:26,219 --> 01:32:27,900
not really doesn't approve of but maybe

2465
01:32:27,900 --> 01:32:29,820
wants to give this as evidence or

2466
01:32:29,820 --> 01:32:31,620
something to some kind of Judge to

2467
01:32:31,620 --> 01:32:33,540
basically frame house

2468
01:32:33,540 --> 01:32:36,840
so Bob sends the let's say his phone or

2469
01:32:36,840 --> 01:32:39,120
gives his phone to the judge so this

2470
01:32:39,120 --> 01:32:41,340
conversation would then be deniable uh

2471
01:32:41,340 --> 01:32:43,380
for Alice if um

2472
01:32:43,380 --> 01:32:45,000
essentially from the perspective of the

2473
01:32:45,000 --> 01:32:46,920
judge this uh this sort of conversation

2474
01:32:46,920 --> 01:32:48,300
transcript or whatever is given to the

2475
01:32:48,300 --> 01:32:49,500
judge could have been sort of simulated

2476
01:32:49,500 --> 01:32:52,139
by Bob or basically forged by Bob

2477
01:32:52,139 --> 01:32:53,699
um so this is kind of the broad

2478
01:32:53,699 --> 01:32:54,900
framework that we'll kind of consider

2479
01:32:54,900 --> 01:32:58,040
deniability in hereafter

2480
01:32:58,080 --> 01:32:59,520
um so in the cryptographic literature

2481
01:32:59,520 --> 01:33:01,500
it's claimed by sort of various

2482
01:33:01,500 --> 01:33:02,699
different types of Primitives and

2483
01:33:02,699 --> 01:33:04,739
protocols usually key exchange since the

2484
01:33:04,739 --> 01:33:05,820
90s

2485
01:33:05,820 --> 01:33:07,560
there's many flavors of deniability

2486
01:33:07,560 --> 01:33:10,920
depending say on the power of the judge

2487
01:33:10,920 --> 01:33:13,020
so I think perhaps since it's sort of

2488
01:33:13,020 --> 01:33:14,340
inception that there's sort of been some

2489
01:33:14,340 --> 01:33:16,320
debate about exactly how relevant

2490
01:33:16,320 --> 01:33:19,139
deniability is

2491
01:33:19,139 --> 01:33:21,300
so in this talk uh we'll basically sort

2492
01:33:21,300 --> 01:33:23,400
of uh look at a few little case studies

2493
01:33:23,400 --> 01:33:25,380
bothly from both from a technical

2494
01:33:25,380 --> 01:33:27,480
perspective but also a legal and sort of

2495
01:33:27,480 --> 01:33:29,400
social perspective to basically conclude

2496
01:33:29,400 --> 01:33:31,139
that sometimes there are problems with

2497
01:33:31,139 --> 01:33:32,880
deniability

2498
01:33:32,880 --> 01:33:34,380
and then we sort of propose a little

2499
01:33:34,380 --> 01:33:36,600
solution that maybe could be could help

2500
01:33:36,600 --> 01:33:38,520
to sort of improve practical deniability

2501
01:33:38,520 --> 01:33:40,679
but then again we ask is this even

2502
01:33:40,679 --> 01:33:43,159
desirable

2503
01:33:43,380 --> 01:33:46,199
good so we first zoom in on Signal so

2504
01:33:46,199 --> 01:33:48,000
we've heard a bit about signal recently

2505
01:33:48,000 --> 01:33:50,280
so this uses sort of xdh from the double

2506
01:33:50,280 --> 01:33:52,980
ratchet for messaging

2507
01:33:52,980 --> 01:33:55,260
um so indeed it's claimed that sort of

2508
01:33:55,260 --> 01:33:57,300
the key exchange protocol x3h provides

2509
01:33:57,300 --> 01:33:58,920
some deniability

2510
01:33:58,920 --> 01:34:00,300
so there's many recent works that

2511
01:34:00,300 --> 01:34:02,400
consider this uh so both the deniability

2512
01:34:02,400 --> 01:34:04,320
of signal itself are sort of exudates

2513
01:34:04,320 --> 01:34:06,540
itself but also sort of to construct say

2514
01:34:06,540 --> 01:34:09,060
more deniable or post Quantum secure xdh

2515
01:34:09,060 --> 01:34:11,840
like protocols

2516
01:34:12,120 --> 01:34:14,100
so in a recent work several authors show

2517
01:34:14,100 --> 01:34:15,780
that sort of indeed in some model that

2518
01:34:15,780 --> 01:34:18,179
xdh is deniable

2519
01:34:18,179 --> 01:34:20,520
um and that if x30h is deniable they

2520
01:34:20,520 --> 01:34:21,239
then have some kind of little

2521
01:34:21,239 --> 01:34:22,920
composition theorem that shows that sort

2522
01:34:22,920 --> 01:34:24,780
of double ratchet the messaging protocol

2523
01:34:24,780 --> 01:34:27,179
is also deniable so somehow therefore

2524
01:34:27,179 --> 01:34:29,580
the entire communication is denial

2525
01:34:29,580 --> 01:34:31,440
which is good

2526
01:34:31,440 --> 01:34:33,480
because that's what we want

2527
01:34:33,480 --> 01:34:34,980
but in practice there are several things

2528
01:34:34,980 --> 01:34:37,320
going on on top of the x3h and double

2529
01:34:37,320 --> 01:34:39,719
ratchet so things like multiple groups

2530
01:34:39,719 --> 01:34:42,000
sort of Multi-Device and one particular

2531
01:34:42,000 --> 01:34:43,560
thing is sort of the authentication

2532
01:34:43,560 --> 01:34:45,659
that's done with the server on top

2533
01:34:45,659 --> 01:34:48,420
so we basically we claim here that sort

2534
01:34:48,420 --> 01:34:49,980
of this use of authentication sort of

2535
01:34:49,980 --> 01:34:52,139
harms deniability and practice and this

2536
01:34:52,139 --> 01:34:54,239
would also apply to sort of basically

2537
01:34:54,239 --> 01:34:55,620
independent of the crypto somehow so if

2538
01:34:55,620 --> 01:34:57,780
you plug in these other schemes that

2539
01:34:57,780 --> 01:35:00,360
somehow deniability is also lost

2540
01:35:00,360 --> 01:35:02,340
so maybe let's see why

2541
01:35:02,340 --> 01:35:03,600
so we consider the regular

2542
01:35:03,600 --> 01:35:06,000
authentication first so let's suppose

2543
01:35:06,000 --> 01:35:08,060
Alice is trying to communicate with Bob

2544
01:35:08,060 --> 01:35:11,460
basically Alice will uh authenticate

2545
01:35:11,460 --> 01:35:14,760
with the server send a ciphertext to Bob

2546
01:35:14,760 --> 01:35:16,560
and also send the identity of the

2547
01:35:16,560 --> 01:35:18,540
receiver bulb to the server the server

2548
01:35:18,540 --> 01:35:20,580
then forwards that onto Bob

2549
01:35:20,580 --> 01:35:22,920
so the crucial thing here is sort of the

2550
01:35:22,920 --> 01:35:24,420
server assuming it's honest is

2551
01:35:24,420 --> 01:35:26,280
authenticating Alice and Bob

2552
01:35:26,280 --> 01:35:29,040
so let's now assume that sort of Bob is

2553
01:35:29,040 --> 01:35:31,380
trying to frame ours so if a judge takes

2554
01:35:31,380 --> 01:35:34,020
the phone from Bob basically the judge

2555
01:35:34,020 --> 01:35:35,219
can reasonably conclude one of two

2556
01:35:35,219 --> 01:35:37,500
things either that sort of if Bob

2557
01:35:37,500 --> 01:35:39,659
basically sort of acted honest honestly

2558
01:35:39,659 --> 01:35:41,639
and received this message from the judge

2559
01:35:41,639 --> 01:35:43,080
from Alice

2560
01:35:43,080 --> 01:35:45,600
um and so basically Alice communicated

2561
01:35:45,600 --> 01:35:48,060
or else Bob somehow modified his phone

2562
01:35:48,060 --> 01:35:50,159
and was able to make basically try and

2563
01:35:50,159 --> 01:35:51,480
frame Alice

2564
01:35:51,480 --> 01:35:53,100
so in some sense the deniability that

2565
01:35:53,100 --> 01:35:55,139
Alice attains is sort of dependent on

2566
01:35:55,139 --> 01:35:57,480
Bob's technical expertise which is a bit

2567
01:35:57,480 --> 01:35:59,400
sort of backwards but

2568
01:35:59,400 --> 01:36:01,260
and and of course this is worse if the

2569
01:36:01,260 --> 01:36:02,940
server's sort of colluding even more

2570
01:36:02,940 --> 01:36:04,980
with the judge in Signal's case this is

2571
01:36:04,980 --> 01:36:07,638
relatively good

2572
01:36:07,860 --> 01:36:09,600
and now with we then moved to sealed

2573
01:36:09,600 --> 01:36:11,280
sender so of course the idea of sold

2574
01:36:11,280 --> 01:36:12,719
Center is to try and hide the identity

2575
01:36:12,719 --> 01:36:14,940
of the sender that is to say Alice here

2576
01:36:14,940 --> 01:36:17,639
from the server so in this mode two

2577
01:36:17,639 --> 01:36:20,159
things are done uh firstly in order to

2578
01:36:20,159 --> 01:36:22,080
authenticate with the server without

2579
01:36:22,080 --> 01:36:23,580
actually directly authenticating with

2580
01:36:23,580 --> 01:36:25,560
the server Alice will get a token from

2581
01:36:25,560 --> 01:36:27,179
Bob somehow

2582
01:36:27,179 --> 01:36:29,639
um Alice will also get sort of a token a

2583
01:36:29,639 --> 01:36:31,260
sort of a certificate that Bob can then

2584
01:36:31,260 --> 01:36:33,000
check later that sort of certifies that

2585
01:36:33,000 --> 01:36:36,000
Alison did can communicate with Bob

2586
01:36:36,000 --> 01:36:37,980
um so when sending a message Alice will

2587
01:36:37,980 --> 01:36:40,500
send a token

2588
01:36:40,500 --> 01:36:42,239
um and alongside a ciphertext and the

2589
01:36:42,239 --> 01:36:43,980
ciphertext encrypts the certificate that

2590
01:36:43,980 --> 01:36:45,840
I just mentioned so the server will

2591
01:36:45,840 --> 01:36:47,699
check make sure the token's okay if

2592
01:36:47,699 --> 01:36:49,320
everything's good the ciphertext

2593
01:36:49,320 --> 01:36:50,639
forwarded to Bob

2594
01:36:50,639 --> 01:36:51,960
and then Bob can check that the

2595
01:36:51,960 --> 01:36:54,679
certificate looks okay

2596
01:36:54,960 --> 01:36:58,139
um so as a remark this is enabled by in

2597
01:36:58,139 --> 01:37:00,120
by default by between neutral contacts

2598
01:37:00,120 --> 01:37:01,020
so I suppose quite a lot of

2599
01:37:01,020 --> 01:37:03,179
communication on Signal

2600
01:37:03,179 --> 01:37:04,620
um and as we've seen this depends on the

2601
01:37:04,620 --> 01:37:06,900
network adversary so like the the sealed

2602
01:37:06,900 --> 01:37:08,460
sender functionality is somehow depends

2603
01:37:08,460 --> 01:37:09,900
uh it's security depends on the network

2604
01:37:09,900 --> 01:37:12,540
adversary's power

2605
01:37:12,540 --> 01:37:13,980
um but of course

2606
01:37:13,980 --> 01:37:15,300
um so again we have this sort of problem

2607
01:37:15,300 --> 01:37:17,280
where like if Bob gives that sort of the

2608
01:37:17,280 --> 01:37:19,560
phone to the judge let's say this like

2609
01:37:19,560 --> 01:37:21,500
if this mode of authentication is used

2610
01:37:21,500 --> 01:37:24,780
then if Bob sort of either provides the

2611
01:37:24,780 --> 01:37:26,460
certificate or sort of is honest and

2612
01:37:26,460 --> 01:37:28,020
used this mode of authentication then

2613
01:37:28,020 --> 01:37:30,060
the the only work like the certificate

2614
01:37:30,060 --> 01:37:31,380
basically binds Alice to this

2615
01:37:31,380 --> 01:37:33,000
communication or some kind of recent

2616
01:37:33,000 --> 01:37:34,620
communication because the certificate is

2617
01:37:34,620 --> 01:37:36,000
sort of attempt like sort of uh

2618
01:37:36,000 --> 01:37:38,040
periodically obtained from the server so

2619
01:37:38,040 --> 01:37:40,739
somehow this certainly limits Alice's

2620
01:37:40,739 --> 01:37:43,218
deniability

2621
01:37:43,260 --> 01:37:44,940
so in this sort of in this sort of

2622
01:37:44,940 --> 01:37:46,440
intuitive sense of deniability at least

2623
01:37:46,440 --> 01:37:50,040
it uh it's not the ideal situation

2624
01:37:50,040 --> 01:37:52,380
um but but even notwithstanding maybe we

2625
01:37:52,380 --> 01:37:54,360
should ask in practice like to what

2626
01:37:54,360 --> 01:37:56,639
extent is deniability sort of used

2627
01:37:56,639 --> 01:38:00,000
um so maybe this you know is okay so one

2628
01:38:00,000 --> 01:38:02,219
little case study that we look at is

2629
01:38:02,219 --> 01:38:05,340
um for uh court cases so very natural

2630
01:38:05,340 --> 01:38:07,380
sort of application of deniability and

2631
01:38:07,380 --> 01:38:09,480
so we look at some openly accessible

2632
01:38:09,480 --> 01:38:11,520
case data in particular in sort of some

2633
01:38:11,520 --> 01:38:14,699
cantons in French speaking Switzerland

2634
01:38:14,699 --> 01:38:17,040
so in the in the sort of uh in the in

2635
01:38:17,040 --> 01:38:19,199
the literature I guess uh there was no

2636
01:38:19,199 --> 01:38:20,760
mention of signal but we found several

2637
01:38:20,760 --> 01:38:22,320
mentions of WhatsApp

2638
01:38:22,320 --> 01:38:24,060
and in these cases we're only able to

2639
01:38:24,060 --> 01:38:26,340
find one sort of failed challenge to a

2640
01:38:26,340 --> 01:38:27,719
transcript communication transcripts

2641
01:38:27,719 --> 01:38:29,940
validity so in general communication

2642
01:38:29,940 --> 01:38:31,739
transcripts the consisted of screenshots

2643
01:38:31,739 --> 01:38:35,959
were also will often admitted and so on

2644
01:38:36,120 --> 01:38:38,520
so in terms of signal I think we've seen

2645
01:38:38,520 --> 01:38:40,679
a relatively recently that signals

2646
01:38:40,679 --> 01:38:42,239
appeared in some cases and high profile

2647
01:38:42,239 --> 01:38:44,580
cases um and as far as I know could be

2648
01:38:44,580 --> 01:38:46,500
wrong like it seems like the the

2649
01:38:46,500 --> 01:38:48,000
evidence has sort of been seemingly

2650
01:38:48,000 --> 01:38:50,400
successfully uncontested

2651
01:38:50,400 --> 01:38:53,040
so somehow this is a microcosm of sort

2652
01:38:53,040 --> 01:38:54,360
of deniability maybe not being used

2653
01:38:54,360 --> 01:38:55,560
everywhere in practice sort of in

2654
01:38:55,560 --> 01:38:58,260
practice at least in a legal sense

2655
01:38:58,260 --> 01:39:00,780
um so maybe why so

2656
01:39:00,780 --> 01:39:02,460
a lack of awareness about sort of the

2657
01:39:02,460 --> 01:39:04,260
notion of cryptographic deniability so

2658
01:39:04,260 --> 01:39:05,880
perhaps it's quite it's this somehow a

2659
01:39:05,880 --> 01:39:08,159
technical notion

2660
01:39:08,159 --> 01:39:10,199
um so in some cases in many cases

2661
01:39:10,199 --> 01:39:12,719
evidences doesn't really consider sort

2662
01:39:12,719 --> 01:39:14,520
of phone transcripts so trivially this

2663
01:39:14,520 --> 01:39:16,860
somehow doesn't apply

2664
01:39:16,860 --> 01:39:18,719
um and in the in a legal system somehow

2665
01:39:18,719 --> 01:39:20,460
sort of if someone's trying to forge

2666
01:39:20,460 --> 01:39:22,080
evidence then it's more of sort of the

2667
01:39:22,080 --> 01:39:23,820
sort of social barriers or sort of legal

2668
01:39:23,820 --> 01:39:25,560
barriers to sort of being able to to

2669
01:39:25,560 --> 01:39:27,540
pass off evidences sort of forged like

2670
01:39:27,540 --> 01:39:29,880
in particular due to like being illegal

2671
01:39:29,880 --> 01:39:34,040
so in some situations this is the case

2672
01:39:34,199 --> 01:39:36,179
um but we can then ask is can we maybe

2673
01:39:36,179 --> 01:39:37,679
sort of improve the State of Affairs so

2674
01:39:37,679 --> 01:39:40,199
can we make deniability sort of catch on

2675
01:39:40,199 --> 01:39:42,719
so indeed in some cases phones reveal a

2676
01:39:42,719 --> 01:39:44,880
lot to a judge

2677
01:39:44,880 --> 01:39:47,040
um and as we've seen sort of parties can

2678
01:39:47,040 --> 01:39:48,840
try to claim that they can sort of Tamp

2679
01:39:48,840 --> 01:39:51,060
the evidence has been tampered with or

2680
01:39:51,060 --> 01:39:52,620
that basically

2681
01:39:52,620 --> 01:39:54,179
um you know that the phone has been

2682
01:39:54,179 --> 01:39:56,100
tampered with uh but somehow this is

2683
01:39:56,100 --> 01:39:58,320
kind of a stranger a difficult argument

2684
01:39:58,320 --> 01:40:00,360
to mount because somehow you need to be

2685
01:40:00,360 --> 01:40:01,739
able to sort of modify your signal app

2686
01:40:01,739 --> 01:40:03,980
or whatever

2687
01:40:04,560 --> 01:40:06,860
so one solution is essentially to

2688
01:40:06,860 --> 01:40:09,120
potentially to basically you take the

2689
01:40:09,120 --> 01:40:10,560
sort of an app like signal and basically

2690
01:40:10,560 --> 01:40:12,000
you provide users with the ability to

2691
01:40:12,000 --> 01:40:13,500
sort of edit send and receive messages

2692
01:40:13,500 --> 01:40:15,480
so basically whenever a phone is handed

2693
01:40:15,480 --> 01:40:17,900
over for example this would basically

2694
01:40:17,900 --> 01:40:21,179
somehow deniability sort of evident from

2695
01:40:21,179 --> 01:40:23,219
this

2696
01:40:23,219 --> 01:40:24,600
uh so in a recent concurrent work

2697
01:40:24,600 --> 01:40:26,219
several authors actually perform sort of

2698
01:40:26,219 --> 01:40:27,960
a study where they basically try to work

2699
01:40:27,960 --> 01:40:29,639
out sort of perceptions of deniability

2700
01:40:29,639 --> 01:40:31,199
and practice and they basically in

2701
01:40:31,199 --> 01:40:33,060
particular gave some participants a tool

2702
01:40:33,060 --> 01:40:34,860
to basically do this and it seems like

2703
01:40:34,860 --> 01:40:36,420
it basically improves sort of

2704
01:40:36,420 --> 01:40:38,820
deniability in practice so so somehow

2705
01:40:38,820 --> 01:40:41,760
this complements sort of the suggestion

2706
01:40:41,760 --> 01:40:42,480
um

2707
01:40:42,480 --> 01:40:44,340
but one may ask do we even want

2708
01:40:44,340 --> 01:40:47,280
deniability so I guess firstly it could

2709
01:40:47,280 --> 01:40:49,500
be used to protect people so people that

2710
01:40:49,500 --> 01:40:51,420
we want to protect but of course it

2711
01:40:51,420 --> 01:40:53,820
could be also used to sort of to use by

2712
01:40:53,820 --> 01:40:55,380
like say powerful people to basically

2713
01:40:55,380 --> 01:40:58,080
you know protect them so somehow there's

2714
01:40:58,080 --> 01:41:00,840
always this trade-off and in proportion

2715
01:41:00,840 --> 01:41:02,580
to how much practical deniability you

2716
01:41:02,580 --> 01:41:04,020
have I guess both of both of these

2717
01:41:04,020 --> 01:41:06,060
things are kind of Amplified which

2718
01:41:06,060 --> 01:41:08,040
certainly it's problematic from you know

2719
01:41:08,040 --> 01:41:10,820
the side of the cons

2720
01:41:11,460 --> 01:41:13,080
so to conclude

2721
01:41:13,080 --> 01:41:14,340
um if we're if you're interested in

2722
01:41:14,340 --> 01:41:15,900
making a deniable system I guess there's

2723
01:41:15,900 --> 01:41:17,280
a few different things we can consider

2724
01:41:17,280 --> 01:41:19,199
so the first is sort of exactly what

2725
01:41:19,199 --> 01:41:20,460
kind of adversary we're defending

2726
01:41:20,460 --> 01:41:22,080
against so as we've seen perhaps a

2727
01:41:22,080 --> 01:41:23,580
cryptographic adversary and sort of a

2728
01:41:23,580 --> 01:41:25,739
restricted restricted sense is not

2729
01:41:25,739 --> 01:41:27,780
enough and even Within These maybe some

2730
01:41:27,780 --> 01:41:30,239
models are a bit too sort of

2731
01:41:30,239 --> 01:41:32,780
um strong

2732
01:41:33,179 --> 01:41:36,000
so notwithstanding for adoption purposes

2733
01:41:36,000 --> 01:41:38,100
phone numbers are useful but uh in in

2734
01:41:38,100 --> 01:41:39,420
the sense that you're registering sort

2735
01:41:39,420 --> 01:41:41,280
of with a with a service provider using

2736
01:41:41,280 --> 01:41:42,840
something like a phone number

2737
01:41:42,840 --> 01:41:44,219
um somehow this limits deniability

2738
01:41:44,219 --> 01:41:46,820
inherently

2739
01:41:47,100 --> 01:41:48,840
um it it seems that sort of a more

2740
01:41:48,840 --> 01:41:50,460
practical or explainable notion of

2741
01:41:50,460 --> 01:41:52,020
deniability is a much more sort of

2742
01:41:52,020 --> 01:41:54,960
useful thing than sort of a not to say

2743
01:41:54,960 --> 01:41:56,639
technical reliability is not useful but

2744
01:41:56,639 --> 01:41:59,040
then this

2745
01:41:59,040 --> 01:42:01,500
and of course the less information that

2746
01:42:01,500 --> 01:42:04,020
a judge gets the better so to minimize

2747
01:42:04,020 --> 01:42:05,699
metadata or metadata hiding as we've

2748
01:42:05,699 --> 01:42:07,860
seen is very important

2749
01:42:07,860 --> 01:42:10,080
and to take that one step further maybe

2750
01:42:10,080 --> 01:42:11,040
there are some applications where

2751
01:42:11,040 --> 01:42:12,780
anonymity itself may be more desirable

2752
01:42:12,780 --> 01:42:16,619
so maybe a deniability can be avoided

2753
01:42:16,619 --> 01:42:18,960
um and just to just to wrap up finally I

2754
01:42:18,960 --> 01:42:21,000
in we have an ePrint paper where

2755
01:42:21,000 --> 01:42:22,800
basically we propose a model sort of on

2756
01:42:22,800 --> 01:42:24,179
top of this kind of a not quite a

2757
01:42:24,179 --> 01:42:25,619
cryptographic model but something a

2758
01:42:25,619 --> 01:42:26,760
little less

2759
01:42:26,760 --> 01:42:28,020
um but I'd be very interested to hear

2760
01:42:28,020 --> 01:42:30,300
sort of and encourage some sort of

2761
01:42:30,300 --> 01:42:31,739
discussion or debate on this topic it

2762
01:42:31,739 --> 01:42:33,960
seems like it's cropped up a lot and

2763
01:42:33,960 --> 01:42:37,260
yeah it'd be useful to clarify so thank

2764
01:42:37,260 --> 01:42:38,370
you for listening

2765
01:42:38,370 --> 01:42:48,769
[Applause]

2766
01:42:50,060 --> 01:42:53,159
all right yeah thank you for um looking

2767
01:42:53,159 --> 01:42:55,739
at all the aspects regarding the

2768
01:42:55,739 --> 01:42:57,239
annihabilities there are really so many

2769
01:42:57,239 --> 01:42:59,880
facets to it for context I'm one of the

2770
01:42:59,880 --> 01:43:02,940
authors of the MLS protocol and we

2771
01:43:02,940 --> 01:43:05,100
discussed it a lot in length I've seen

2772
01:43:05,100 --> 01:43:08,420
the uh on the mailing list yeah

2773
01:43:08,880 --> 01:43:10,260
um so

2774
01:43:10,260 --> 01:43:13,199
and so I've always been on the side of

2775
01:43:13,199 --> 01:43:15,840
leaning towards you know saying that

2776
01:43:15,840 --> 01:43:19,860
deniability is a a good property to have

2777
01:43:19,860 --> 01:43:22,380
but it's actually incredibly complex

2778
01:43:22,380 --> 01:43:23,880
um it's it's certainly not black and

2779
01:43:23,880 --> 01:43:25,980
white and um

2780
01:43:25,980 --> 01:43:28,619
what you pointed out is that you you can

2781
01:43:28,619 --> 01:43:30,420
have it at the protocol level

2782
01:43:30,420 --> 01:43:32,460
and and that's true for the signal

2783
01:43:32,460 --> 01:43:34,380
protocol there is even an academic proof

2784
01:43:34,380 --> 01:43:35,100
now

2785
01:43:35,100 --> 01:43:35,960
um

2786
01:43:35,960 --> 01:43:39,060
but in practice

2787
01:43:39,060 --> 01:43:41,219
um it maybe doesn't give you

2788
01:43:41,219 --> 01:43:42,780
what you think it does you already

2789
01:43:42,780 --> 01:43:45,420
mentioned that on a layer above you can

2790
01:43:45,420 --> 01:43:47,219
sort of invalidate that already but even

2791
01:43:47,219 --> 01:43:49,320
on the protocol level

2792
01:43:49,320 --> 01:43:51,060
um there are two aspects to that so one

2793
01:43:51,060 --> 01:43:52,080
is that

2794
01:43:52,080 --> 01:43:54,119
for protocols who are not in Iowa like

2795
01:43:54,119 --> 01:43:56,280
pgp or you have a signature or MLS where

2796
01:43:56,280 --> 01:43:58,500
you also have a signature

2797
01:43:58,500 --> 01:44:00,119
um in most messaging systems the

2798
01:44:00,119 --> 01:44:01,800
ciphertext and the signatures are thrown

2799
01:44:01,800 --> 01:44:03,840
away after you receive a message

2800
01:44:03,840 --> 01:44:05,639
so they're not kept so in that sense

2801
01:44:05,639 --> 01:44:07,800
only in the plain text is kept and that

2802
01:44:07,800 --> 01:44:09,780
is completely deniable again

2803
01:44:09,780 --> 01:44:12,360
so you would have to assume that

2804
01:44:12,360 --> 01:44:14,760
um if somebody one and attacker wants to

2805
01:44:14,760 --> 01:44:16,380
frame a user they would have to use a

2806
01:44:16,380 --> 01:44:18,659
different client like a modified app

2807
01:44:18,659 --> 01:44:21,119
essentially yeah so I can I just to

2808
01:44:21,119 --> 01:44:22,500
interoperate so I guess sort of in

2809
01:44:22,500 --> 01:44:23,760
practice it seems like a lot of the time

2810
01:44:23,760 --> 01:44:25,920
sort of basically screenshots of what

2811
01:44:25,920 --> 01:44:27,420
appears to be plain text is admitted as

2812
01:44:27,420 --> 01:44:28,800
evidence to somehow

2813
01:44:28,800 --> 01:44:31,739
right that that anyway but but say for

2814
01:44:31,739 --> 01:44:34,080
example if um you wanted to frame

2815
01:44:34,080 --> 01:44:35,580
someone with a signature then you would

2816
01:44:35,580 --> 01:44:37,260
have to have a modified app that keeps

2817
01:44:37,260 --> 01:44:38,580
the signature after receiving the

2818
01:44:38,580 --> 01:44:41,040
message yeah so if if you

2819
01:44:41,040 --> 01:44:43,260
um start from that vantage point and you

2820
01:44:43,260 --> 01:44:45,239
assume that someone you know makes the

2821
01:44:45,239 --> 01:44:48,119
effort of downloading a modified app

2822
01:44:48,119 --> 01:44:49,860
um and then you can actually also attack

2823
01:44:49,860 --> 01:44:51,300
the single protocol on that level

2824
01:44:51,300 --> 01:44:53,880
because you can run it uh I think inside

2825
01:44:53,880 --> 01:44:56,340
an sgx enclave and then you have sort of

2826
01:44:56,340 --> 01:44:58,320
a proof that a message was received so

2827
01:44:58,320 --> 01:44:59,699
even though academically speaking the

2828
01:44:59,699 --> 01:45:01,080
protocol is perfect in terms of

2829
01:45:01,080 --> 01:45:03,780
deniability you can still attack it at

2830
01:45:03,780 --> 01:45:06,480
that level as well so um

2831
01:45:06,480 --> 01:45:08,880
at yeah after a few years of looking

2832
01:45:08,880 --> 01:45:11,280
into that my question is

2833
01:45:11,280 --> 01:45:12,960
um can we ever really achieve

2834
01:45:12,960 --> 01:45:16,320
deniability at you know all levels and I

2835
01:45:16,320 --> 01:45:19,020
don't know yeah I mean I've worked a bit

2836
01:45:19,020 --> 01:45:20,100
on the topic sort of more from a

2837
01:45:20,100 --> 01:45:21,719
theoretical perspective but I would

2838
01:45:21,719 --> 01:45:23,280
agree that it seems like there are

2839
01:45:23,280 --> 01:45:25,139
several sort of attacks that sort of

2840
01:45:25,139 --> 01:45:27,659
seem to crop up over time that basically

2841
01:45:27,659 --> 01:45:29,340
like for example yeah using a trusted

2842
01:45:29,340 --> 01:45:31,320
execution environment or sort of having

2843
01:45:31,320 --> 01:45:32,520
some kind of proof of like

2844
01:45:32,520 --> 01:45:34,139
non-participation or something like that

2845
01:45:34,139 --> 01:45:36,060
these things are always seem to be

2846
01:45:36,060 --> 01:45:38,699
possible so I guess in some restricted

2847
01:45:38,699 --> 01:45:40,739
circumstances it seems deniability is

2848
01:45:40,739 --> 01:45:42,600
sort of possible particularly kind of in

2849
01:45:42,600 --> 01:45:46,080
this offline versus online deniability

2850
01:45:46,080 --> 01:45:47,820
but obviously in the worst case I guess

2851
01:45:47,820 --> 01:45:51,600
not so I think it depends though

2852
01:45:51,600 --> 01:45:54,600
cool thank you that's all so I guess my

2853
01:45:54,600 --> 01:45:56,639
question is do you think we are over

2854
01:45:56,639 --> 01:45:59,639
indexing on um overly paranoid threat

2855
01:45:59,639 --> 01:46:01,679
models either uh court of law or the

2856
01:46:01,679 --> 01:46:04,020
judge or the like super secret I'm

2857
01:46:04,020 --> 01:46:06,360
running something in sgx because we've

2858
01:46:06,360 --> 01:46:08,460
seen these problems with say the U.S

2859
01:46:08,460 --> 01:46:10,199
presidential election Elite emails being

2860
01:46:10,199 --> 01:46:11,880
authentic or vcam with the French

2861
01:46:11,880 --> 01:46:13,800
presidential election

2862
01:46:13,800 --> 01:46:14,520
um

2863
01:46:14,520 --> 01:46:16,560
is it maybe a broader context of people

2864
01:46:16,560 --> 01:46:18,480
posting messages online or later

2865
01:46:18,480 --> 01:46:20,400
forensically data being found is that

2866
01:46:20,400 --> 01:46:22,199
does that change how you'd

2867
01:46:22,199 --> 01:46:23,820
view this

2868
01:46:23,820 --> 01:46:25,880
um

2869
01:46:26,520 --> 01:46:29,219
so

2870
01:46:29,219 --> 01:46:31,080
could you could you clarify the question

2871
01:46:31,080 --> 01:46:33,540
birthday again sorry so I mean the model

2872
01:46:33,540 --> 01:46:35,100
you put up in this talk is like you're

2873
01:46:35,100 --> 01:46:37,139
going to a judge oh yes it tends to be

2874
01:46:37,139 --> 01:46:39,000
the starting point I mean we used it as

2875
01:46:39,000 --> 01:46:41,460
the the survey in the paper too yeah uh

2876
01:46:41,460 --> 01:46:43,560
but the real motivation for these things

2877
01:46:43,560 --> 01:46:45,900
these days is people like hack and leak

2878
01:46:45,900 --> 01:46:47,520
operations information being posted

2879
01:46:47,520 --> 01:46:49,199
online yeah and you don't want it to be

2880
01:46:49,199 --> 01:46:52,080
trivial to verify yeah yeah so I guess

2881
01:46:52,080 --> 01:46:53,760
yeah sometimes it's not even relevant to

2882
01:46:53,760 --> 01:46:55,380
have cryptographic deniability so I

2883
01:46:55,380 --> 01:46:56,820
guess something like maybe Wikileaks it

2884
01:46:56,820 --> 01:46:59,100
seems like you know they sort of take

2885
01:46:59,100 --> 01:47:00,360
just like text and they have some kind

2886
01:47:00,360 --> 01:47:01,440
of internal sort of verification

2887
01:47:01,440 --> 01:47:02,639
protocol but then they'll post a bunch

2888
01:47:02,639 --> 01:47:04,380
of sort of dumps and even though there's

2889
01:47:04,380 --> 01:47:05,699
not signatures attached to it people

2890
01:47:05,699 --> 01:47:08,340
will still like it people still take it

2891
01:47:08,340 --> 01:47:11,520
as sort of true so maybe like

2892
01:47:11,520 --> 01:47:13,679
I get I guess it I guess it depends on

2893
01:47:13,679 --> 01:47:14,880
sort of exactly which cases you're

2894
01:47:14,880 --> 01:47:18,000
considering but I mean yeah I think I

2895
01:47:18,000 --> 01:47:20,219
think certainly there there is sort of a

2896
01:47:20,219 --> 01:47:21,780
a big mismatch between sort of the

2897
01:47:21,780 --> 01:47:24,239
theory and the practice on the sale

2898
01:47:24,239 --> 01:47:26,159
yeah I mean specifically we'll need to

2899
01:47:26,159 --> 01:47:27,659
wrap up here right but thank you very

2900
01:47:27,659 --> 01:47:29,780
much

2901
01:47:30,140 --> 01:47:33,439
[Music]

2902
01:47:36,960 --> 01:47:39,000
all right now it's time for a coffee

2903
01:47:39,000 --> 01:47:42,840
break and we'll resume at 3 50.

2904
01:47:42,840 --> 01:47:45,260
thank you

