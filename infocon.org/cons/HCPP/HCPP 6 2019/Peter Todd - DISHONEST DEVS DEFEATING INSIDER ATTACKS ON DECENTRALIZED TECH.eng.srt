1
00:00:00,330 --> 00:00:03,409
[Music]

2
00:00:11,880 --> 00:00:19,149
[Music]

3
00:00:24,230 --> 00:00:29,490
good afternoon ladies and gentlemen my

4
00:00:27,029 --> 00:00:32,729
pleasure to introduce introduce you our

5
00:00:29,490 --> 00:00:35,480
next speaker each result he is

6
00:00:32,729 --> 00:00:39,690
originally from Canada living in Toronto

7
00:00:35,480 --> 00:00:42,180
he is our regular speaker he visited

8
00:00:39,690 --> 00:00:44,640
HTTP last year also two two years ago

9
00:00:42,180 --> 00:00:48,960
and he will have interesting

10
00:00:44,640 --> 00:00:50,909
presentation about insider attacks I'm

11
00:00:48,960 --> 00:00:53,600
especially interested this presentation

12
00:00:50,909 --> 00:00:56,479
because because I'm like a security

13
00:00:53,600 --> 00:00:59,220
expert but security consultant and I'm

14
00:00:56,479 --> 00:01:06,510
involved in this topic so welcome Peter

15
00:00:59,220 --> 00:01:07,650
thank you you know I'm glad he said you

16
00:01:06,510 --> 00:01:09,060
especially interested because we're

17
00:01:07,650 --> 00:01:14,220
consulting not because you wanted to go

18
00:01:09,060 --> 00:01:16,939
pull off insider attack but yeah you

19
00:01:14,220 --> 00:01:18,840
know and dishonest devs I mean you know

20
00:01:16,939 --> 00:01:22,830
that's certainly going to be a thing

21
00:01:18,840 --> 00:01:24,780
people are gonna do it in you know you

22
00:01:22,830 --> 00:01:26,280
really got asked like and I always kind

23
00:01:24,780 --> 00:01:27,780
of look at security this way you and

24
00:01:26,280 --> 00:01:29,039
what are we trying to prevent you know

25
00:01:27,780 --> 00:01:33,570
what's the what's a bad thing we're

26
00:01:29,039 --> 00:01:35,820
trying to prevent and there's a lot of

27
00:01:33,570 --> 00:01:37,678
issues you know I think we have

28
00:01:35,820 --> 00:01:39,600
governments of course who just like

29
00:01:37,679 --> 00:01:43,530
encryption just like security want more

30
00:01:39,600 --> 00:01:45,359
power over you basically and you know I

31
00:01:43,530 --> 00:01:46,259
mean I'm also an Australian sis and one

32
00:01:45,359 --> 00:01:50,100
of the things I'm kind of worried about

33
00:01:46,259 --> 00:01:52,079
is this which is Australia I vote what

34
00:01:50,100 --> 00:01:53,460
year and a half ago two years no passed

35
00:01:52,079 --> 00:01:55,829
a law where essentially they can go

36
00:01:53,460 --> 00:01:59,699
force people to add backdoors to

37
00:01:55,829 --> 00:02:02,100
technology and you know it's a very very

38
00:01:59,700 --> 00:02:03,899
harsh law I mean you could be a

39
00:02:02,100 --> 00:02:06,270
developer working at a company working

40
00:02:03,899 --> 00:02:08,130
on open source projects and you get

41
00:02:06,270 --> 00:02:11,400
contacted by someone claiming to be from

42
00:02:08,130 --> 00:02:13,350
the Australian government and they go

43
00:02:11,400 --> 00:02:15,200
and tell you well if you go tell anyone

44
00:02:13,350 --> 00:02:17,910
about this other than maybe your lawyer

45
00:02:15,200 --> 00:02:19,619
you're gonna go to jail and by the way

46
00:02:17,910 --> 00:02:21,600
we have a few changes you wanna go make

47
00:02:19,620 --> 00:02:23,670
to your big project and if you tell your

48
00:02:21,600 --> 00:02:25,170
boss you can go to jail if you go and

49
00:02:23,670 --> 00:02:27,208
you know say anything about this you can

50
00:02:25,170 --> 00:02:28,769
go to jail oh and by the way everything

51
00:02:27,209 --> 00:02:31,230
I just said it's basically not tracked

52
00:02:28,770 --> 00:02:32,849
you know judge didn't approve it it was

53
00:02:31,230 --> 00:02:34,679
just kind of rubber stamped at some

54
00:02:32,849 --> 00:02:36,988
government agency I mean at least that

55
00:02:34,680 --> 00:02:37,860
got in the law but you know it's a scary

56
00:02:36,989 --> 00:02:42,900
thing

57
00:02:37,860 --> 00:02:44,190
and as bad as this for the devs well the

58
00:02:42,900 --> 00:02:47,190
reality is that's an example of a

59
00:02:44,190 --> 00:02:48,600
dishonest if from your point of view you

60
00:02:47,190 --> 00:02:52,770
know that dev is doing something you

61
00:02:48,600 --> 00:02:55,799
don't want them to do and you also get

62
00:02:52,770 --> 00:02:57,240
stuff like this you know this is one of

63
00:02:55,800 --> 00:02:59,580
quite a few examples I went and found

64
00:02:57,240 --> 00:03:02,250
but essentially it's one of these many

65
00:02:59,580 --> 00:03:07,230
many alt coins fork of the Bitcoin

66
00:03:02,250 --> 00:03:10,170
source code and a little I'm not the

67
00:03:07,230 --> 00:03:13,940
easiest to read but they're you so you

68
00:03:10,170 --> 00:03:17,130
know that's like IRC bootstrapping and

69
00:03:13,940 --> 00:03:18,810
here it does something funny see read

70
00:03:17,130 --> 00:03:20,280
whatever whatever well it turns out one

71
00:03:18,810 --> 00:03:21,750
checks you know compiled us and it

72
00:03:20,280 --> 00:03:24,180
resolves macros and all the other stuff

73
00:03:21,750 --> 00:03:27,239
off P open well what does P open do well

74
00:03:24,180 --> 00:03:30,390
just opens arbitrary process based on

75
00:03:27,239 --> 00:03:32,040
something called like proof message off

76
00:03:30,390 --> 00:03:33,869
proof message privacy or something

77
00:03:32,040 --> 00:03:35,970
no it's basically a backdoor someone

78
00:03:33,870 --> 00:03:38,280
sends a special IRC command it just runs

79
00:03:35,970 --> 00:03:41,640
this magic message and then they can do

80
00:03:38,280 --> 00:03:42,870
whatever you want and you know it's a

81
00:03:41,640 --> 00:03:44,339
little sketchy as to whether or not this

82
00:03:42,870 --> 00:03:46,260
has happened who is actually at fault

83
00:03:44,340 --> 00:03:48,030
there's like many many levels of meta

84
00:03:46,260 --> 00:03:51,450
but allegedly something along these

85
00:03:48,030 --> 00:03:53,610
lines back toward you know exchange

86
00:03:51,450 --> 00:03:56,579
cripsy and stole a big pile of money and

87
00:03:53,610 --> 00:03:58,500
for my understanding cripsy while they

88
00:03:56,580 --> 00:03:59,790
were having a server with hot wallets of

89
00:03:58,500 --> 00:04:01,680
multiple different currencies all

90
00:03:59,790 --> 00:04:03,060
running together and I'll go talk more

91
00:04:01,680 --> 00:04:05,730
about mitigations for that kind of

92
00:04:03,060 --> 00:04:07,019
scenario but you know obviously you

93
00:04:05,730 --> 00:04:09,750
would have wanted to go catch this if

94
00:04:07,019 --> 00:04:12,209
you were crip see I mean even if all you

95
00:04:09,750 --> 00:04:13,769
were doing was running though one one

96
00:04:12,209 --> 00:04:18,570
thing you definitely want to go catch it

97
00:04:13,769 --> 00:04:20,459
and so we can kind of boil this down and

98
00:04:18,570 --> 00:04:22,530
you know I like boiling this down

99
00:04:20,459 --> 00:04:25,350
because ultimately security software is

100
00:04:22,530 --> 00:04:28,799
different than other software you know

101
00:04:25,350 --> 00:04:30,690
if I have Adobe Photoshop my goal with

102
00:04:28,800 --> 00:04:32,940
Adobe Photoshop is to edit some images

103
00:04:30,690 --> 00:04:35,070
you know maybe more for my face into

104
00:04:32,940 --> 00:04:36,990
some celebrity or something you know

105
00:04:35,070 --> 00:04:38,849
there's pretty clear to the user whether

106
00:04:36,990 --> 00:04:41,580
or not it's working you know that's

107
00:04:38,850 --> 00:04:42,960
that's kind of our first line here you

108
00:04:41,580 --> 00:04:43,560
know does our software do what we want

109
00:04:42,960 --> 00:04:47,190
it to do

110
00:04:43,560 --> 00:04:49,229
and even if you don't have technical

111
00:04:47,190 --> 00:04:51,210
expertise you can determine the answer

112
00:04:49,229 --> 00:04:52,890
it's that question for the most part

113
00:04:51,210 --> 00:04:55,409
you know you wanted to do something did

114
00:04:52,890 --> 00:04:58,380
it do it Chrome with security software

115
00:04:55,410 --> 00:05:01,560
is a real question there is does our

116
00:04:58,380 --> 00:05:03,780
software not do what we want what we

117
00:05:01,560 --> 00:05:05,220
don't want it to do I don't know how

118
00:05:03,780 --> 00:05:06,479
much I screwed up but you see like the

119
00:05:05,220 --> 00:05:08,520
whole thought process is very different

120
00:05:06,480 --> 00:05:10,140
we're trying to say well what things

121
00:05:08,520 --> 00:05:11,760
could have it had done that we wouldn't

122
00:05:10,140 --> 00:05:14,010
want it to do ensure that actually does

123
00:05:11,760 --> 00:05:15,810
just what we wanted to do it's a much

124
00:05:14,010 --> 00:05:18,120
harder problem and it's also a problem

125
00:05:15,810 --> 00:05:24,470
is very difficult for other people to go

126
00:05:18,120 --> 00:05:26,610
figure out and you know sort of like I

127
00:05:24,470 --> 00:05:28,410
mean I don't know if you've seen the

128
00:05:26,610 --> 00:05:30,750
Simpsons one but sort of like the anti

129
00:05:28,410 --> 00:05:33,780
Tiger Rock you know I claim I have this

130
00:05:30,750 --> 00:05:35,100
rock and it keeps away Tigers well does

131
00:05:33,780 --> 00:05:37,530
it keep way Tigers and do you see any

132
00:05:35,100 --> 00:05:40,410
Tigers I know I guess those shirts are

133
00:05:37,530 --> 00:05:41,669
kind of orange sort of like a tiger but

134
00:05:40,410 --> 00:05:42,810
other than the orange sure it's like

135
00:05:41,670 --> 00:05:44,730
it's doing a pretty good job keeping

136
00:05:42,810 --> 00:05:50,100
Tiger was way in fact I claim that it

137
00:05:44,730 --> 00:05:52,980
turned the Tigers into volunteers you

138
00:05:50,100 --> 00:05:55,590
can't really disprove this right but you

139
00:05:52,980 --> 00:05:57,270
know that the anti Tiger rock is even

140
00:05:55,590 --> 00:05:59,210
better example this what we're really

141
00:05:57,270 --> 00:06:01,770
concerned about in the security world is

142
00:05:59,210 --> 00:06:04,349
the anti Tiger rock that was made by the

143
00:06:01,770 --> 00:06:05,789
Pro Tiger foundation and inside the ng

144
00:06:04,350 --> 00:06:07,380
Tiger rock happens to be a little

145
00:06:05,790 --> 00:06:09,120
microphone and it's recording you know

146
00:06:07,380 --> 00:06:12,480
all your conversations about Tigers and

147
00:06:09,120 --> 00:06:16,560
uploading GPS coordinates to the roving

148
00:06:12,480 --> 00:06:19,080
band of tigers are gonna go Maul you it

149
00:06:16,560 --> 00:06:21,360
can get even worse than that because we

150
00:06:19,080 --> 00:06:23,370
often have secure hardware you know and

151
00:06:21,360 --> 00:06:25,860
security related stuff I mean I got that

152
00:06:23,370 --> 00:06:28,200
in my little presenters gift basket

153
00:06:25,860 --> 00:06:30,060
thing I guess you might have got one too

154
00:06:28,200 --> 00:06:31,289
I've really I've never been here as a

155
00:06:30,060 --> 00:06:35,790
normal person so I don't know what to

156
00:06:31,290 --> 00:06:36,210
give to you guys but what's in that

157
00:06:35,790 --> 00:06:39,420
thing

158
00:06:36,210 --> 00:06:41,130
like and it's even worse because you

159
00:06:39,420 --> 00:06:43,320
know I come here like I'm all you know

160
00:06:41,130 --> 00:06:45,780
cool Peter Todd but well they know who I

161
00:06:43,320 --> 00:06:48,900
am and they just gave me a bag with one

162
00:06:45,780 --> 00:06:50,630
of those things in it like should I

163
00:06:48,900 --> 00:06:53,250
really be plugging that into my laptop

164
00:06:50,630 --> 00:06:57,480
while we're at it okay my bakes still

165
00:06:53,250 --> 00:06:59,580
there well you know I used to be a

166
00:06:57,480 --> 00:07:02,010
electronics designer so I figured I can

167
00:06:59,580 --> 00:07:05,310
I can totally solve this one I got a

168
00:07:02,010 --> 00:07:07,560
heavy object it smashed it open and I

169
00:07:05,310 --> 00:07:09,360
held it up to the the window in my hotel

170
00:07:07,560 --> 00:07:11,130
room and one of you guys is probably

171
00:07:09,360 --> 00:07:13,170
gonna figure out which hotel room I have

172
00:07:11,130 --> 00:07:16,380
but at least I'm leaving that tomorrow

173
00:07:13,170 --> 00:07:18,720
and I happen to know that USB has four

174
00:07:16,380 --> 00:07:23,580
wires two of them are signal two of them

175
00:07:18,720 --> 00:07:26,070
are data well I see two wires going from

176
00:07:23,580 --> 00:07:27,780
one end to the other and I see you one

177
00:07:26,070 --> 00:07:29,940
kind of going a little circle there and

178
00:07:27,780 --> 00:07:32,489
I happen to know or at least I think I

179
00:07:29,940 --> 00:07:33,930
do that the signal wires are in the

180
00:07:32,490 --> 00:07:39,540
middle and the data wires on the on the

181
00:07:33,930 --> 00:07:45,840
outside pretty good right I thought was

182
00:07:39,540 --> 00:07:48,720
good enough and now I know that my

183
00:07:45,840 --> 00:07:49,859
laptop is separate from my phone you

184
00:07:48,720 --> 00:07:51,810
know the other end of that cable going

185
00:07:49,860 --> 00:07:53,280
off to my phone which is rather

186
00:07:51,810 --> 00:07:55,980
important because I'll show you another

187
00:07:53,280 --> 00:07:59,070
port there you know my uh my security

188
00:07:55,980 --> 00:08:00,540
key but this thing 39 or 1394 it's

189
00:07:59,070 --> 00:08:03,320
actually a firewire port which might

190
00:08:00,540 --> 00:08:06,030
date my laptop back a couple years but

191
00:08:03,320 --> 00:08:08,340
firewire is famous for having the

192
00:08:06,030 --> 00:08:11,729
problem where anything connected your

193
00:08:08,340 --> 00:08:13,590
firewire port could just download main

194
00:08:11,730 --> 00:08:16,050
memory or right main memory to it really

195
00:08:13,590 --> 00:08:18,179
whatever wanted so you know as silly as

196
00:08:16,050 --> 00:08:21,210
this thing is it is actual real security

197
00:08:18,180 --> 00:08:22,530
it did something it prevented something

198
00:08:21,210 --> 00:08:24,150
from happening which was my phone

199
00:08:22,530 --> 00:08:27,510
communicating my laptop and my laptop

200
00:08:24,150 --> 00:08:28,950
communicating my phone you know that's

201
00:08:27,510 --> 00:08:32,400
that's all good that's kind of useful

202
00:08:28,950 --> 00:08:34,200
although there's kind of issue of I mean

203
00:08:32,400 --> 00:08:38,250
I did all that but how do you know that

204
00:08:34,200 --> 00:08:40,770
your little block USB condom actually

205
00:08:38,250 --> 00:08:42,570
did something you don't at least you

206
00:08:40,770 --> 00:08:44,819
know how to check it but me checking it

207
00:08:42,570 --> 00:08:49,650
didn't directly help you in quite the

208
00:08:44,820 --> 00:08:51,000
same way and you know I think I've seen

209
00:08:49,650 --> 00:08:55,050
a lot of people making these kinds of

210
00:08:51,000 --> 00:08:57,000
criticisms about the security of you

211
00:08:55,050 --> 00:08:58,770
know Bitcoin and other software you know

212
00:08:57,000 --> 00:09:00,390
your note is not a full note unless you

213
00:08:58,770 --> 00:09:01,439
read the protocols back and write all

214
00:09:00,390 --> 00:09:06,960
software yourself

215
00:09:01,440 --> 00:09:09,240
cetera et cetera and you know the way I

216
00:09:06,960 --> 00:09:13,140
like to refute this is to really talk

217
00:09:09,240 --> 00:09:16,020
about whistleblowing when I go read the

218
00:09:13,140 --> 00:09:18,720
protocol spec which in Bitcoin of course

219
00:09:16,020 --> 00:09:19,240
is the source code as it is in any same

220
00:09:18,720 --> 00:09:21,820
consensus

221
00:09:19,240 --> 00:09:24,640
system I can go read it I can think

222
00:09:21,820 --> 00:09:27,279
about it I can decide for myself did it

223
00:09:24,640 --> 00:09:29,050
or didn't it work that's all well and

224
00:09:27,279 --> 00:09:30,700
good for me but important thing is if I

225
00:09:29,050 --> 00:09:35,050
do find something that's wrong I can

226
00:09:30,700 --> 00:09:40,630
tell all of you guys and as long as you

227
00:09:35,050 --> 00:09:41,920
guys are using the same software me and

228
00:09:40,630 --> 00:09:44,740
noticing this is effectively

229
00:09:41,920 --> 00:09:46,449
whistleblowing you know I am finding

230
00:09:44,740 --> 00:09:48,100
something wrong and telling you guys you

231
00:09:46,450 --> 00:09:50,980
can go make an informed decision whether

232
00:09:48,100 --> 00:09:52,899
or not you'll still use the software now

233
00:09:50,980 --> 00:09:53,890
there's a lot of caches here you know

234
00:09:52,899 --> 00:09:55,500
for instance are you actually

235
00:09:53,890 --> 00:10:00,160
downloading the same software as I am

236
00:09:55,500 --> 00:10:02,050
you know are you actually using the same

237
00:10:00,160 --> 00:10:04,689
versions and so on but in the big

238
00:10:02,050 --> 00:10:06,490
picture this is a good idea you know

239
00:10:04,690 --> 00:10:08,200
this is really one of the you know real

240
00:10:06,490 --> 00:10:11,080
core things that make software different

241
00:10:08,200 --> 00:10:13,560
from hardware and that if you have

242
00:10:11,080 --> 00:10:16,300
software on hardware that secure the

243
00:10:13,560 --> 00:10:19,089
software can be audited by others and

244
00:10:16,300 --> 00:10:21,459
there are many processes place where you

245
00:10:19,089 --> 00:10:23,260
can be sure that you're running the

246
00:10:21,459 --> 00:10:24,219
right software and chances are if there

247
00:10:23,260 --> 00:10:28,450
was something wrong with it someone

248
00:10:24,220 --> 00:10:31,720
would notice you know the big picture is

249
00:10:28,450 --> 00:10:33,459
all well and good but how does this

250
00:10:31,720 --> 00:10:35,589
actually work in practice you know how

251
00:10:33,459 --> 00:10:39,119
close are we to this ideal well I

252
00:10:35,589 --> 00:10:42,180
decided to make a little program and

253
00:10:39,120 --> 00:10:44,020
there you go I call it a hole your base

254
00:10:42,180 --> 00:10:45,489
I'm not going to show every single

255
00:10:44,020 --> 00:10:48,490
command i typed in but since you know

256
00:10:45,490 --> 00:10:52,149
made my initial commit there that's your

257
00:10:48,490 --> 00:10:55,990
that's in rust by the way yeah go rust

258
00:10:52,149 --> 00:10:58,480
and it's a pretty cool thing right it

259
00:10:55,990 --> 00:11:00,160
you know it tells a user of course that

260
00:10:58,480 --> 00:11:01,510
they're securing the base because you

261
00:11:00,160 --> 00:11:03,339
know you want to tell the user that

262
00:11:01,510 --> 00:11:06,459
you're securing something so they think

263
00:11:03,339 --> 00:11:08,890
it's secure and then you know here very

264
00:11:06,459 --> 00:11:11,349
important it makes impossible to read

265
00:11:08,890 --> 00:11:12,880
write or execute the base of course you

266
00:11:11,350 --> 00:11:14,800
know you can't do that yeah just can't

267
00:11:12,880 --> 00:11:17,529
get it and you know just to be clear

268
00:11:14,800 --> 00:11:19,899
base security I'll check that all right

269
00:11:17,529 --> 00:11:22,000
and you know you might go run that

270
00:11:19,899 --> 00:11:23,440
command and you might wonder it was is

271
00:11:22,000 --> 00:11:27,250
this really a good idea does this work

272
00:11:23,440 --> 00:11:30,970
and let's go and have a hypothetical guy

273
00:11:27,250 --> 00:11:32,440
which will call a good guy and oh yeah

274
00:11:30,970 --> 00:11:32,890
there's yummy push and stuff you know

275
00:11:32,440 --> 00:11:34,390
but

276
00:11:32,890 --> 00:11:36,610
well if ignore that it's like it's not

277
00:11:34,390 --> 00:11:39,370
too important but you know this is the

278
00:11:36,610 --> 00:11:41,620
good guy right get clone he sees it up

279
00:11:39,370 --> 00:11:43,150
on github and it is actually live by the

280
00:11:41,620 --> 00:11:44,980
way you can go download this although uh

281
00:11:43,150 --> 00:11:49,980
you might want wait slender to talk

282
00:11:44,980 --> 00:11:52,540
before you run it and you know there's a

283
00:11:49,980 --> 00:11:55,210
crest is very convenient you just do

284
00:11:52,540 --> 00:11:58,300
cargo run you know compiles whatever

285
00:11:55,210 --> 00:12:00,580
securing base based security done pretty

286
00:11:58,300 --> 00:12:01,870
simple right well you know you might

287
00:12:00,580 --> 00:12:06,280
want to double check what that actually

288
00:12:01,870 --> 00:12:08,680
did and ah funny enough you know you

289
00:12:06,280 --> 00:12:12,730
might have noticed well that command

290
00:12:08,680 --> 00:12:15,069
thing like if I just say command new and

291
00:12:12,730 --> 00:12:17,410
rust doesn't actually run the command

292
00:12:15,070 --> 00:12:19,300
yeah that's what's called a builder kind

293
00:12:17,410 --> 00:12:21,490
of builds when I'm about to do in memory

294
00:12:19,300 --> 00:12:23,469
but to actually like run it I got to go

295
00:12:21,490 --> 00:12:25,120
and do this you know output thing and

296
00:12:23,470 --> 00:12:28,510
expects as well you know something

297
00:12:25,120 --> 00:12:30,430
failed whatever and you know I'm mr.

298
00:12:28,510 --> 00:12:33,670
good guy he figures well I mean I always

299
00:12:30,430 --> 00:12:36,760
would go fix this so he adds a patch the

300
00:12:33,670 --> 00:12:39,699
ID Etta commits it you know actually run

301
00:12:36,760 --> 00:12:46,990
the process pretty a pretty good change

302
00:12:39,700 --> 00:12:50,320
right and there we go so let's go assume

303
00:12:46,990 --> 00:12:51,190
that you know you put a pull request up

304
00:12:50,320 --> 00:12:53,530
on github

305
00:12:51,190 --> 00:12:55,860
waited a bit I'm pretty fast so I you

306
00:12:53,530 --> 00:12:59,860
know get back in a in a few minutes and

307
00:12:55,860 --> 00:13:02,740
do get pull numerating whatever that are

308
00:12:59,860 --> 00:13:05,230
etc all right well oh that's funny

309
00:13:02,740 --> 00:13:07,060
there's a there's a readme file now and

310
00:13:05,230 --> 00:13:09,640
there's a there's a main file with some

311
00:13:07,060 --> 00:13:13,089
changes so you know I mean what actually

312
00:13:09,640 --> 00:13:15,069
changed ah if you're trying to get lock

313
00:13:13,090 --> 00:13:17,190
well Peter Todd merged remote tracking

314
00:13:15,070 --> 00:13:20,620
branch you know actually run the process

315
00:13:17,190 --> 00:13:23,050
looks pretty good right like a few guys

316
00:13:20,620 --> 00:13:25,900
were arrested do you think at this point

317
00:13:23,050 --> 00:13:27,099
it'd be safe to run the command alright

318
00:13:25,900 --> 00:13:29,140
if you guys were arrested I'm not

319
00:13:27,100 --> 00:13:34,440
watching this talk what do you think

320
00:13:29,140 --> 00:13:37,500
would be safe to watch the command well

321
00:13:34,440 --> 00:13:41,280
let's actually see what the file says

322
00:13:37,500 --> 00:13:41,280
huh that's funny

323
00:13:43,020 --> 00:13:50,319
cuz this here that's sort of the do

324
00:13:47,710 --> 00:13:51,730
anything no matter what and I guess to

325
00:13:50,320 --> 00:13:53,650
do anything a matter what said it do

326
00:13:51,730 --> 00:13:55,270
anything where others oh that's funny

327
00:13:53,650 --> 00:13:57,400
it looks like it's gonna make every

328
00:13:55,270 --> 00:14:00,760
single fall my computer writable and

329
00:13:57,400 --> 00:14:03,730
readable an executable and I don't know

330
00:14:00,760 --> 00:14:06,490
I mean I got nothing against communism I

331
00:14:03,730 --> 00:14:12,120
guess but you know I don't want to share

332
00:14:06,490 --> 00:14:16,840
my follows with everyone so gee yeah

333
00:14:12,120 --> 00:14:18,310
what went wrong here and I want to kind

334
00:14:16,840 --> 00:14:22,030
of approach this at many many different

335
00:14:18,310 --> 00:14:24,699
levels and maybe the very simplest level

336
00:14:22,030 --> 00:14:27,579
is well why does this bug happen in the

337
00:14:24,700 --> 00:14:30,190
first place you know like why why didn't

338
00:14:27,580 --> 00:14:33,190
I allegedly at least assuming I'm a nice

339
00:14:30,190 --> 00:14:37,270
guy write the code where in the first

340
00:14:33,190 --> 00:14:42,550
place and if we go back a bit there you

341
00:14:37,270 --> 00:14:44,350
go version one well people who use rust

342
00:14:42,550 --> 00:14:46,030
will know that rust normally would go

343
00:14:44,350 --> 00:14:47,280
tell you if you're creating something

344
00:14:46,030 --> 00:14:49,449
that should be used

345
00:14:47,280 --> 00:14:52,060
you know this whole bit of

346
00:14:49,450 --> 00:14:53,650
misunderstanding but command ideally

347
00:14:52,060 --> 00:14:54,910
you'd get a compiler error which

348
00:14:53,650 --> 00:14:56,620
actually currently arrests doesn't

349
00:14:54,910 --> 00:14:59,199
happen and which I should add a pull

350
00:14:56,620 --> 00:15:00,790
request to this tonight but all right

351
00:14:59,200 --> 00:15:07,630
that bit of ergonomics we could go fix

352
00:15:00,790 --> 00:15:08,980
that and even then you know we we fixed

353
00:15:07,630 --> 00:15:10,300
our root cause but what's the next thing

354
00:15:08,980 --> 00:15:19,750
that went wrong you know what happened

355
00:15:10,300 --> 00:15:23,530
next well where are we here you see this

356
00:15:19,750 --> 00:15:25,780
commit in this commit in get you know

357
00:15:23,530 --> 00:15:28,800
this is ultimately just a hash of all

358
00:15:25,780 --> 00:15:32,860
the different files and all the history

359
00:15:28,800 --> 00:15:34,449
and then this bit here this is serve

360
00:15:32,860 --> 00:15:35,950
just a nice thing that's get basically

361
00:15:34,450 --> 00:15:38,830
just showing you well you know what's

362
00:15:35,950 --> 00:15:41,880
the difference between this and the

363
00:15:38,830 --> 00:15:44,830
thing that came prior and unfortunately

364
00:15:41,880 --> 00:15:47,470
get I don't think really a security in

365
00:15:44,830 --> 00:15:49,720
mind because it doesn't show you what

366
00:15:47,470 --> 00:15:53,110
actually changed here like remember if

367
00:15:49,720 --> 00:15:54,670
you proposed some changes to me what

368
00:15:53,110 --> 00:15:57,100
you're seeing here is

369
00:15:54,670 --> 00:15:59,709
the difference in those changes but I

370
00:15:57,100 --> 00:16:02,170
somehow have to go add those changes to

371
00:15:59,710 --> 00:16:04,660
my repo and in my repo I added a readme

372
00:16:02,170 --> 00:16:06,400
file all right so I have one set of

373
00:16:04,660 --> 00:16:08,290
history you know you have another set of

374
00:16:06,400 --> 00:16:10,510
history and I have to go merge them

375
00:16:08,290 --> 00:16:13,180
together which means that the

376
00:16:10,510 --> 00:16:14,680
differences are actually differences

377
00:16:13,180 --> 00:16:16,719
between this and this and this and this

378
00:16:14,680 --> 00:16:19,140
and the way it works is the

379
00:16:16,720 --> 00:16:23,490
user-friendly thing of well assume that

380
00:16:19,140 --> 00:16:25,630
whoever wrote this is a nice person and

381
00:16:23,490 --> 00:16:27,670
just did the obvious thing which was

382
00:16:25,630 --> 00:16:30,670
only do this changes if you actually

383
00:16:27,670 --> 00:16:31,990
look at this commit and I didn't figure

384
00:16:30,670 --> 00:16:34,180
out a way to actually show this on

385
00:16:31,990 --> 00:16:35,590
screen but of course it doesn't actually

386
00:16:34,180 --> 00:16:37,479
merge this it merges something totally

387
00:16:35,590 --> 00:16:41,650
different and gets you I just don't show

388
00:16:37,480 --> 00:16:43,570
this you know in a fortune I'm not very

389
00:16:41,650 --> 00:16:45,280
surprised and I kind of thought of this

390
00:16:43,570 --> 00:16:47,380
writing up this talk is you know could

391
00:16:45,280 --> 00:16:49,270
this happen well sure enough it does but

392
00:16:47,380 --> 00:16:50,800
you know it's not written by people I

393
00:16:49,270 --> 00:16:52,660
think you have security in mind I mean

394
00:16:50,800 --> 00:16:56,319
even fact that these are sha-1 hashes

395
00:16:52,660 --> 00:16:58,660
like back in 2004 2005 whenever get was

396
00:16:56,320 --> 00:17:02,680
made cryptographers were already warning

397
00:16:58,660 --> 00:17:05,920
leanness shall one's not secure you know

398
00:17:02,680 --> 00:17:08,440
and currently if you're clever and have

399
00:17:05,920 --> 00:17:11,170
a bunch of money you can make collisions

400
00:17:08,440 --> 00:17:12,750
to sha-1 hashes so that one hash could

401
00:17:11,170 --> 00:17:14,740
be matched by multiple different files

402
00:17:12,750 --> 00:17:17,680
yeah there's a lot of nuance it's

403
00:17:14,740 --> 00:17:21,099
exactly what that statement means and so

404
00:17:17,680 --> 00:17:23,079
on but long story short like it's not

405
00:17:21,099 --> 00:17:24,208
really the right tools be using yet it's

406
00:17:23,079 --> 00:17:27,639
sort of the only tool we have

407
00:17:24,209 --> 00:17:29,410
but even if you solved say these

408
00:17:27,640 --> 00:17:33,550
problems I mean there's still more that

409
00:17:29,410 --> 00:17:36,660
can go wrong like for starters who

410
00:17:33,550 --> 00:17:39,100
actually made that change

411
00:17:36,660 --> 00:17:41,170
well alright in this talk obviously I

412
00:17:39,100 --> 00:17:42,310
did probably but I'm gonna go claims you

413
00:17:41,170 --> 00:17:44,370
guys you know I always try and give a

414
00:17:42,310 --> 00:17:47,620
talk about how great kit was and I

415
00:17:44,370 --> 00:17:49,300
didn't I didn't make that commit well

416
00:17:47,620 --> 00:17:52,629
who might have well let's go back a bit

417
00:17:49,300 --> 00:17:54,940
to ah there we go yeah right so I wrote

418
00:17:52,630 --> 00:17:57,670
some code I committed it and then I

419
00:17:54,940 --> 00:17:59,110
pushed it to github but what'swhat's

420
00:17:57,670 --> 00:18:01,450
this actually saying here you know a

421
00:17:59,110 --> 00:18:03,820
sent a host github can't be established

422
00:18:01,450 --> 00:18:06,940
key fingerprint you wanna continue I

423
00:18:03,820 --> 00:18:10,080
mean I know I do always type yes all

424
00:18:06,940 --> 00:18:14,980
right how many you guys type yes

425
00:18:10,080 --> 00:18:16,720
well yeah and nothing like in get

426
00:18:14,980 --> 00:18:19,000
actually knew what computer I was really

427
00:18:16,720 --> 00:18:22,000
talking to so it'd be quite plausible

428
00:18:19,000 --> 00:18:25,720
for someone to man and middle attacked

429
00:18:22,000 --> 00:18:29,559
me there you know I'm not Leslie gonna

430
00:18:25,720 --> 00:18:32,350
notice that the code I wrote got changed

431
00:18:29,559 --> 00:18:33,850
on github you know I'm I'm just doing

432
00:18:32,350 --> 00:18:35,709
code locally and if I have more than one

433
00:18:33,850 --> 00:18:37,209
computer Chancellor I'm gonna have

434
00:18:35,710 --> 00:18:40,480
different repos there may be a little a

435
00:18:37,210 --> 00:18:41,770
sink and I don't even I'll admit it's

436
00:18:40,480 --> 00:18:43,690
pretty often I'll just type get pull

437
00:18:41,770 --> 00:18:46,150
when I'm pretty sure I had my laptop was

438
00:18:43,690 --> 00:18:48,520
up to date maybe maybe it was I don't

439
00:18:46,150 --> 00:18:49,929
know I'll just type git pull and maybe

440
00:18:48,520 --> 00:18:52,600
I'll just look at it with git log with

441
00:18:49,929 --> 00:18:54,700
the patch thing see what emerged you

442
00:18:52,600 --> 00:18:58,330
know these these problems exist in many

443
00:18:54,700 --> 00:19:02,049
different layers and that's just not

444
00:18:58,330 --> 00:19:05,139
secure but it's even worse than that

445
00:19:02,049 --> 00:19:06,610
because alright let's suppose we fix

446
00:19:05,140 --> 00:19:09,190
this let's suppose we you know made the

447
00:19:06,610 --> 00:19:12,610
get thing have a hash of gets identity

448
00:19:09,190 --> 00:19:15,010
or so on what did I do just prior to

449
00:19:12,610 --> 00:19:17,110
that well I made some commits that's all

450
00:19:15,010 --> 00:19:17,559
well and good I probably ran it at some

451
00:19:17,110 --> 00:19:21,449
point

452
00:19:17,559 --> 00:19:29,070
in fact the good guy also ran it and

453
00:19:21,450 --> 00:19:32,440
where are we here we are

454
00:19:29,070 --> 00:19:36,668
notice how he did run the code before he

455
00:19:32,440 --> 00:19:38,730
actually like looked at it I mean that's

456
00:19:36,669 --> 00:19:41,020
pretty easy mistake to make

457
00:19:38,730 --> 00:19:44,549
again I'll admit even I wound up doing

458
00:19:41,020 --> 00:19:47,940
this more than you know more than once

459
00:19:44,549 --> 00:19:50,020
again and the moment you run that code

460
00:19:47,940 --> 00:19:51,610
cargo could have done anything it could

461
00:19:50,020 --> 00:19:54,460
have gone back toward get to go and

462
00:19:51,610 --> 00:19:55,678
patch out you know these disks so you

463
00:19:54,460 --> 00:19:59,409
wouldn't even see it

464
00:19:55,679 --> 00:20:01,390
like anything at this point she's

465
00:19:59,409 --> 00:20:04,059
totally untrusted really you know the

466
00:20:01,390 --> 00:20:07,260
moment I ransom code from the source

467
00:20:04,059 --> 00:20:11,020
that I'm trying to view it's over

468
00:20:07,260 --> 00:20:12,879
but even if I looked at the code you

469
00:20:11,020 --> 00:20:15,150
know all this projects doesn't have it

470
00:20:12,880 --> 00:20:19,090
any sane projects is going to have

471
00:20:15,150 --> 00:20:20,890
dependencies and it's pretty easy to go

472
00:20:19,090 --> 00:20:22,299
have a complex project with a bunch of

473
00:20:20,890 --> 00:20:25,719
dependencies and have the review

474
00:20:22,299 --> 00:20:26,950
not review the dependencies you know

475
00:20:25,719 --> 00:20:30,629
someone asked me to audit some source

476
00:20:26,950 --> 00:20:34,539
code at some point I'm gonna go stop and

477
00:20:30,629 --> 00:20:35,889
I personally know of an example list

478
00:20:34,539 --> 00:20:38,739
which I ran into in practice which

479
00:20:35,889 --> 00:20:40,689
course is the Z cash trusses setup and I

480
00:20:38,739 --> 00:20:42,609
was asked by Zuko to be part of that as

481
00:20:40,690 --> 00:20:44,589
he cashed trust it set up and I'm one of

482
00:20:42,609 --> 00:20:49,918
what is it five people or seven people

483
00:20:44,589 --> 00:20:52,239
or something who initially made those

484
00:20:49,919 --> 00:20:54,159
secret keys essentially that get turned

485
00:20:52,239 --> 00:20:56,889
into a public key that then makes all of

486
00:20:54,159 --> 00:20:59,309
Z cash work and with Z cash if the

487
00:20:56,889 --> 00:21:02,589
secret keys are compromised

488
00:20:59,309 --> 00:21:06,279
you can go counterfeit Z cash currency

489
00:21:02,589 --> 00:21:07,178
it will well G cash was pretty clever

490
00:21:06,279 --> 00:21:09,459
about it they used something called

491
00:21:07,179 --> 00:21:11,289
deterministic builds which they would go

492
00:21:09,459 --> 00:21:13,779
and you know have a set of source code

493
00:21:11,289 --> 00:21:16,869
and compile it in a way that someone

494
00:21:13,779 --> 00:21:18,929
else could then rerun that whole code

495
00:21:16,869 --> 00:21:24,570
chain rerun you know that compiler and

496
00:21:18,929 --> 00:21:28,089
get the exact same output so then when I

497
00:21:24,570 --> 00:21:30,458
did this trust setup I started off with

498
00:21:28,089 --> 00:21:33,279
like everyone else did burns DVD

499
00:21:30,459 --> 00:21:34,959
produced allegedly by this deterministic

500
00:21:33,279 --> 00:21:36,399
build process and at the time my

501
00:21:34,959 --> 00:21:39,789
thinking was well you know this is all

502
00:21:36,399 --> 00:21:40,539
well and good I'll just you know get

503
00:21:39,789 --> 00:21:42,099
this DVD

504
00:21:40,539 --> 00:21:43,629
they say it's chairman state bill they

505
00:21:42,099 --> 00:21:48,668
know where it's all coming from you know

506
00:21:43,629 --> 00:21:51,789
etc of course I don't really know what

507
00:21:48,669 --> 00:21:53,409
that software did but you can go out at

508
00:21:51,789 --> 00:21:55,839
it and it's reasonable to audit the

509
00:21:53,409 --> 00:21:57,729
dependencies a little back and then when

510
00:21:55,839 --> 00:21:59,769
I actually looked at in detail pretty

511
00:21:57,729 --> 00:22:01,779
but a year later I realized well the

512
00:21:59,769 --> 00:22:04,269
term is to build was using like non

513
00:22:01,779 --> 00:22:08,159
deterministic sources built you know two

514
00:22:04,269 --> 00:22:12,929
days ago and no one can recreate them

515
00:22:08,159 --> 00:22:15,519
and they knew at the time that this

516
00:22:12,929 --> 00:22:18,549
whole thing was going to happen so in

517
00:22:15,519 --> 00:22:21,820
fact anyone who ran the rust or had

518
00:22:18,549 --> 00:22:24,179
access to the russ compiler the old

519
00:22:21,820 --> 00:22:27,099
process could have back towards e cash

520
00:22:24,179 --> 00:22:29,889
of course as it turns out z cash that

521
00:22:27,099 --> 00:22:31,149
version zero also had a bug in it that

522
00:22:29,889 --> 00:22:34,258
could inflate the currency undetectably

523
00:22:31,149 --> 00:22:34,258
anyway so

524
00:22:34,600 --> 00:22:46,040
didn't really matter so much but again

525
00:22:37,700 --> 00:22:47,780
like kind of a problem there and then we

526
00:22:46,040 --> 00:22:50,020
can also go ask come in all right this

527
00:22:47,780 --> 00:22:52,879
all sounds totally broken well you know

528
00:22:50,020 --> 00:22:55,090
do the usual big slide thing what went

529
00:22:52,880 --> 00:22:58,570
wrong I think we know how do we fix this

530
00:22:55,090 --> 00:23:03,370
well if you were in this position where

531
00:22:58,570 --> 00:23:05,629
somehow this command suddenly went and

532
00:23:03,370 --> 00:23:08,899
rewrote you know your whole file system

533
00:23:05,630 --> 00:23:15,380
who would you blame I mean I did the

534
00:23:08,900 --> 00:23:19,910
merge right well I mean that's not

535
00:23:15,380 --> 00:23:22,130
signed so right there your average

536
00:23:19,910 --> 00:23:27,110
project kind of kind of fails at this

537
00:23:22,130 --> 00:23:28,910
and since this isn't signed I could just

538
00:23:27,110 --> 00:23:32,179
as easily claim no no this whole SSH

539
00:23:28,910 --> 00:23:33,650
business it really did happen you know

540
00:23:32,180 --> 00:23:36,980
it's not my fault it's github fault or

541
00:23:33,650 --> 00:23:38,240
some man and it'll attack well you know

542
00:23:36,980 --> 00:23:40,760
in terms of how do we improve things

543
00:23:38,240 --> 00:23:43,310
like step number one is actually be able

544
00:23:40,760 --> 00:23:45,740
to assign some blame and figure out what

545
00:23:43,310 --> 00:23:49,070
happened and you know my consulting

546
00:23:45,740 --> 00:23:51,800
practice I wind up getting a lot of

547
00:23:49,070 --> 00:23:54,860
clients who you know have databases of

548
00:23:51,800 --> 00:23:58,310
things often the databases are internal

549
00:23:54,860 --> 00:24:00,560
totally trusted sort of run by their

550
00:23:58,310 --> 00:24:01,669
system ins and even I tell them you know

551
00:24:00,560 --> 00:24:03,230
you really want to go out at a

552
00:24:01,670 --> 00:24:04,910
blockchain to this and when I talk about

553
00:24:03,230 --> 00:24:06,860
a blockchain I mean a chain of blocks I

554
00:24:04,910 --> 00:24:10,930
mean a blockchain and cents get almost

555
00:24:06,860 --> 00:24:15,740
is purely so that you can go figure out

556
00:24:10,930 --> 00:24:18,650
which administer and made it to put in

557
00:24:15,740 --> 00:24:21,590
valid data you know which computer got

558
00:24:18,650 --> 00:24:23,150
compromised currently I can't really

559
00:24:21,590 --> 00:24:26,389
figure out any of this because we don't

560
00:24:23,150 --> 00:24:27,830
have any keys attached so how do we fix

561
00:24:26,390 --> 00:24:30,140
this number one like actually start

562
00:24:27,830 --> 00:24:34,189
signing some code I mean it seems silly

563
00:24:30,140 --> 00:24:37,910
but people aren't doing this at all you

564
00:24:34,190 --> 00:24:40,640
know outside of a few projects Bitcoin

565
00:24:37,910 --> 00:24:44,000
core being one of the few few exceptions

566
00:24:40,640 --> 00:24:45,740
and you know Bitcoin core every single

567
00:24:44,000 --> 00:24:47,720
merge request is signed by someone and

568
00:24:45,740 --> 00:24:49,670
there's a script

569
00:24:47,720 --> 00:24:51,710
to actually verify that these signatures

570
00:24:49,670 --> 00:24:54,110
are correct and from the approved list

571
00:24:51,710 --> 00:24:56,930
in case you're wondering that's kind of

572
00:24:54,110 --> 00:25:00,500
your answer to the question well who you

573
00:24:56,930 --> 00:25:03,230
know who has push access to the github

574
00:25:00,500 --> 00:25:05,150
repo in theory that that that's the

575
00:25:03,230 --> 00:25:08,930
wrong question to ask the right question

576
00:25:05,150 --> 00:25:14,450
to ask is who has a PGP keys on the list

577
00:25:08,930 --> 00:25:15,980
of verified committers but again that's

578
00:25:14,450 --> 00:25:18,620
all well and good you can go verify in

579
00:25:15,980 --> 00:25:19,940
reality people aren't running you know

580
00:25:18,620 --> 00:25:22,879
people aren't using the commands to

581
00:25:19,940 --> 00:25:24,620
actually go and do this you know people

582
00:25:22,880 --> 00:25:26,120
don't use git in a way where every time

583
00:25:24,620 --> 00:25:30,379
you type git pull it actually checks

584
00:25:26,120 --> 00:25:32,059
this so what can we fix this well

585
00:25:30,380 --> 00:25:36,020
fortunately gotta go change how git

586
00:25:32,059 --> 00:25:37,490
works you know we got a make it actually

587
00:25:36,020 --> 00:25:39,500
check signatures on things and actually

588
00:25:37,490 --> 00:25:44,300
have rules around this you know rest

589
00:25:39,500 --> 00:25:47,390
itself it's heavily reliant on bots that

590
00:25:44,300 --> 00:25:51,260
go build things why don't these bots

591
00:25:47,390 --> 00:25:52,730
actually go sign the you know sign the

592
00:25:51,260 --> 00:25:54,379
PGP port request that they make they

593
00:25:52,730 --> 00:25:56,540
just don't yet github to the credit

594
00:25:54,380 --> 00:25:58,100
actually does now with github when you

595
00:25:56,540 --> 00:26:00,500
go and say edit a file within the github

596
00:25:58,100 --> 00:26:01,760
web user interface the commits do get

597
00:26:00,500 --> 00:26:04,190
signed so there's some traceability

598
00:26:01,760 --> 00:26:08,150
there but for most part you know

599
00:26:04,190 --> 00:26:12,770
projects don't do this and you know in

600
00:26:08,150 --> 00:26:15,470
this example with cargo again the list

601
00:26:12,770 --> 00:26:17,150
of cargo packages and the actual

602
00:26:15,470 --> 00:26:19,790
dependencies and so on no one actually

603
00:26:17,150 --> 00:26:23,480
signs them you know there's a github

604
00:26:19,790 --> 00:26:26,059
repo on github of course with the entire

605
00:26:23,480 --> 00:26:28,429
set of every single cargo package out

606
00:26:26,059 --> 00:26:30,170
there and that at least you know again

607
00:26:28,429 --> 00:26:31,610
like the rest is doing much better than

608
00:26:30,170 --> 00:26:35,320
most projects on this but that at least

609
00:26:31,610 --> 00:26:37,850
has hashes so you can say you know this

610
00:26:35,320 --> 00:26:40,399
Russ library or create as they call them

611
00:26:37,850 --> 00:26:42,709
actually match to this file but if that

612
00:26:40,400 --> 00:26:46,640
if that list of all this isn't signed

613
00:26:42,710 --> 00:26:49,400
again what actually went wrong when my

614
00:26:46,640 --> 00:26:50,870
cargo downloads the wrong thing you know

615
00:26:49,400 --> 00:26:53,780
I wouldn't even be surprised it doesn't

616
00:26:50,870 --> 00:26:55,610
properly check you know certificates and

617
00:26:53,780 --> 00:26:59,000
whatnot again something I can look into

618
00:26:55,610 --> 00:27:00,889
but so much of this is broken they're

619
00:26:59,000 --> 00:27:03,320
also why was it

620
00:27:00,890 --> 00:27:05,660
that when I said cargo run it ran in

621
00:27:03,320 --> 00:27:09,230
environments that could touch my source

622
00:27:05,660 --> 00:27:12,140
code anyway in effect in this case I

623
00:27:09,230 --> 00:27:13,700
mean there you go good guy at desktop is

624
00:27:12,140 --> 00:27:14,960
that like his desktop where he has

625
00:27:13,700 --> 00:27:16,910
access to every single thing on his

626
00:27:14,960 --> 00:27:20,870
computer I could that of rate read his

627
00:27:16,910 --> 00:27:22,460
email again developers tend to go run

628
00:27:20,870 --> 00:27:25,250
their code in environments which access

629
00:27:22,460 --> 00:27:30,250
to everything you know I at least that's

630
00:27:25,250 --> 00:27:30,250
actually a cubes and that's at least

631
00:27:30,280 --> 00:27:35,660
cubes virtual machine dedicated just her

632
00:27:33,440 --> 00:27:36,980
restive element Oh frankly even I'm not

633
00:27:35,660 --> 00:27:39,410
very good at this I mean I share that

634
00:27:36,980 --> 00:27:43,940
across few different things you know we

635
00:27:39,410 --> 00:27:45,620
need better tooling for all this and you

636
00:27:43,940 --> 00:27:53,530
know I say all this but I think I'll

637
00:27:45,620 --> 00:27:55,610
kind of close with given that we have

638
00:27:53,530 --> 00:27:57,620
government's doing things like saying we

639
00:27:55,610 --> 00:28:01,010
got it back to our crypto you know we're

640
00:27:57,620 --> 00:28:06,110
an environment where we may have to even

641
00:28:01,010 --> 00:28:07,400
do development anonymously Riley is

642
00:28:06,110 --> 00:28:09,500
there a few projects have an honest

643
00:28:07,400 --> 00:28:11,480
developers and all these issues become

644
00:28:09,500 --> 00:28:14,230
even harder even when they're all fixed

645
00:28:11,480 --> 00:28:16,190
when there isn't really someone to blame

646
00:28:14,230 --> 00:28:18,560
you know we're probably not going to get

647
00:28:16,190 --> 00:28:21,070
to the point where every single commits

648
00:28:18,560 --> 00:28:23,450
reviewed properly you know every single

649
00:28:21,070 --> 00:28:24,620
dependencies reviewed properly a lot of

650
00:28:23,450 --> 00:28:27,980
this is still going to be about people's

651
00:28:24,620 --> 00:28:29,780
reputations and I don't really know

652
00:28:27,980 --> 00:28:32,150
what's going to happen if we've made

653
00:28:29,780 --> 00:28:33,830
your projects with serious money behind

654
00:28:32,150 --> 00:28:35,600
them to release serious consequence it's

655
00:28:33,830 --> 00:28:36,560
like tor I mean you know people's lives

656
00:28:35,600 --> 00:28:41,600
are at risk with tor

657
00:28:36,560 --> 00:28:42,830
we're anonymous devs exist and we have

658
00:28:41,600 --> 00:28:44,590
to figure out how do we review this

659
00:28:42,830 --> 00:28:46,730
efficiently to get around the fact that

660
00:28:44,590 --> 00:28:49,340
one of these devs doesn't really much

661
00:28:46,730 --> 00:28:51,140
reputation to burn you know no one's I

662
00:28:49,340 --> 00:28:53,419
mean no one goes to jail right now for

663
00:28:51,140 --> 00:28:54,770
these kinds of bugs and no one's kind of

664
00:28:53,420 --> 00:28:56,720
gonna do that in the future if we're

665
00:28:54,770 --> 00:28:57,980
talking about a Bitcoin with a bunch of

666
00:28:56,720 --> 00:29:00,650
pseudonyms behind it

667
00:28:57,980 --> 00:29:02,240
like these are very real issues and it's

668
00:29:00,650 --> 00:29:04,520
only going to get worse the threats only

669
00:29:02,240 --> 00:29:05,960
get worse in the future so we need to

670
00:29:04,520 --> 00:29:09,530
start solving this stuff now while it's

671
00:29:05,960 --> 00:29:11,960
possible and also I think as paranoid as

672
00:29:09,530 --> 00:29:14,540
this whole talk is part of what we also

673
00:29:11,960 --> 00:29:16,220
need to solve is how do we do

674
00:29:14,540 --> 00:29:18,110
elements and how do we run programs in a

675
00:29:16,220 --> 00:29:20,210
way where for the stuff that doesn't

676
00:29:18,110 --> 00:29:22,129
matter you know for your computer games

677
00:29:20,210 --> 00:29:24,470
for your fun projects and so on none of

678
00:29:22,130 --> 00:29:27,860
this stuff has to be done I should be

679
00:29:24,470 --> 00:29:29,900
able to run some fun game on my computer

680
00:29:27,860 --> 00:29:32,990
and not have to worry about it attacking

681
00:29:29,900 --> 00:29:34,220
other things and if that's true at least

682
00:29:32,990 --> 00:29:36,680
that side of the development doesn't

683
00:29:34,220 --> 00:29:38,180
have to be so paranoid because the

684
00:29:36,680 --> 00:29:42,260
reality is these kinds of processes

685
00:29:38,180 --> 00:29:44,480
applied well are kind of toxic and I I

686
00:29:42,260 --> 00:29:45,620
can't get away from that so you know I

687
00:29:44,480 --> 00:29:48,800
think it's really up to the OS

688
00:29:45,620 --> 00:29:52,030
developers to move beyond this and with

689
00:29:48,800 --> 00:29:52,030
that thank you

690
00:29:57,690 --> 00:30:02,790
Peter can you hear me yeah okay great

691
00:30:00,840 --> 00:30:05,610
Peter thank you very much fair tolk I

692
00:30:02,790 --> 00:30:07,530
mean I started to code in rest a few

693
00:30:05,610 --> 00:30:09,330
months ago I totally fell in love with

694
00:30:07,530 --> 00:30:11,100
this language so it's just amazing love

695
00:30:09,330 --> 00:30:17,460
it and guys if you have any questions

696
00:30:11,100 --> 00:30:19,379
raise your hand place and yeah great hi

697
00:30:17,460 --> 00:30:24,290
thanks for the great talk I want to ask

698
00:30:19,380 --> 00:30:28,950
were there any attacks that were done

699
00:30:24,290 --> 00:30:31,649
because of militias that they were

700
00:30:28,950 --> 00:30:34,410
caused by a malicious merge that you are

701
00:30:31,650 --> 00:30:36,600
aware of that had the consequences I'm

702
00:30:34,410 --> 00:30:38,190
not aware of any in to be honest I

703
00:30:36,600 --> 00:30:39,510
Fraulein Oh may have found something

704
00:30:38,190 --> 00:30:44,310
that hasn't actually noticed before

705
00:30:39,510 --> 00:30:48,240
probably not but you know oh well there

706
00:30:44,310 --> 00:30:51,000
you go I mean if you look at github the

707
00:30:48,240 --> 00:30:53,460
git commits don't lie I did kind of rate

708
00:30:51,000 --> 00:30:56,700
this that part of the talk about two

709
00:30:53,460 --> 00:30:58,050
hours ago so but yeah I'm sure I would

710
00:30:56,700 --> 00:31:03,450
not be surprised they're out there and

711
00:30:58,050 --> 00:31:03,990
sounds like there's an example any other

712
00:31:03,450 --> 00:31:09,960
questions

713
00:31:03,990 --> 00:31:12,120
your hands yeah thanks Peter but it

714
00:31:09,960 --> 00:31:15,360
seems that the rabbit hole goes even

715
00:31:12,120 --> 00:31:17,939
deeper with the processor compiling the

716
00:31:15,360 --> 00:31:20,669
code you can have backdoors in the Intel

717
00:31:17,940 --> 00:31:24,540
processors so it wouldn't be enough just

718
00:31:20,670 --> 00:31:27,810
to have a deterministic built I don't

719
00:31:24,540 --> 00:31:29,670
know what would be enough I'm glad you

720
00:31:27,810 --> 00:31:31,889
asked that question because I'm actually

721
00:31:29,670 --> 00:31:34,640
a little more optimistic about that we

722
00:31:31,890 --> 00:31:36,750
relative to most people I think you see

723
00:31:34,640 --> 00:31:39,090
hardware is relatively limited in what

724
00:31:36,750 --> 00:31:43,440
it can do you know strong AI does not

725
00:31:39,090 --> 00:31:46,290
exist yet and if I'm using hardware that

726
00:31:43,440 --> 00:31:48,180
was that came from the past prior to

727
00:31:46,290 --> 00:31:49,889
when I wrote my stuff or at least

728
00:31:48,180 --> 00:31:51,990
somewhat prior it's really really

729
00:31:49,890 --> 00:31:54,380
difficult for hardware to know how to

730
00:31:51,990 --> 00:31:57,450
back to our code written into the future

731
00:31:54,380 --> 00:31:59,640
now there's exceptions this as an

732
00:31:57,450 --> 00:32:01,680
example if I were his buddies would say

733
00:31:59,640 --> 00:32:04,740
the guy who wrote the you know Intel

734
00:32:01,680 --> 00:32:07,590
MINIX OS hiding around your your Intel

735
00:32:04,740 --> 00:32:09,330
CPU maybe we could go work together to

736
00:32:07,590 --> 00:32:11,709
go compromise something but it's much

737
00:32:09,330 --> 00:32:16,240
harder than just you know it's

738
00:32:11,710 --> 00:32:18,250
bugged merge request like it's it is a

739
00:32:16,240 --> 00:32:20,770
risk don't get me wrong but I don't

740
00:32:18,250 --> 00:32:23,110
think it's actually the biggest risk out

741
00:32:20,770 --> 00:32:25,120
there and I think once we solve a lot of

742
00:32:23,110 --> 00:32:28,389
these issues those kinds of problems

743
00:32:25,120 --> 00:32:30,040
will not I mean a lot of stuff like it's

744
00:32:28,390 --> 00:32:31,900
sort of like if you have a bunch of

745
00:32:30,040 --> 00:32:33,220
problems and you go solve them the

746
00:32:31,900 --> 00:32:35,350
hardest you know the easiest ones for

747
00:32:33,220 --> 00:32:36,670
the hardest ones sometimes you just go

748
00:32:35,350 --> 00:32:38,560
find out the attackers just keep on

749
00:32:36,670 --> 00:32:41,200
moving on to one you know one after

750
00:32:38,560 --> 00:32:42,520
another you know some cryptocurrencies

751
00:32:41,200 --> 00:32:44,140
have this kind of issue where they keep

752
00:32:42,520 --> 00:32:46,000
on trying to add complexity to the tax

753
00:32:44,140 --> 00:32:48,130
and the complexity is just a trivial

754
00:32:46,000 --> 00:32:53,520
thing to fix I think the complexity of

755
00:32:48,130 --> 00:32:55,960
building backdoors that really survive

756
00:32:53,520 --> 00:32:57,879
multiple revisions of software is very

757
00:32:55,960 --> 00:33:00,100
hard you know this is why with rust for

758
00:32:57,880 --> 00:33:02,140
example I don't think it's that likely

759
00:33:00,100 --> 00:33:05,020
for the rest compiler to be backdoored

760
00:33:02,140 --> 00:33:07,450
in the sense that the people compiling

761
00:33:05,020 --> 00:33:10,420
rest an iterative process would have

762
00:33:07,450 --> 00:33:12,970
likely gone and you know ran into this I

763
00:33:10,420 --> 00:33:14,530
do think it's fairly likely that say Z

764
00:33:12,970 --> 00:33:16,270
cache could have because the situation's

765
00:33:14,530 --> 00:33:18,280
a little different with Z cache it was

766
00:33:16,270 --> 00:33:23,410
something it was a known target at the

767
00:33:18,280 --> 00:33:25,270
time whereas with rust if I go back you

768
00:33:23,410 --> 00:33:27,400
know 10 years and start compiling

769
00:33:25,270 --> 00:33:29,710
compilers it's not that likely that bugs

770
00:33:27,400 --> 00:33:32,530
gonna affect something now but you know

771
00:33:29,710 --> 00:33:35,200
in theory it could and I think the best

772
00:33:32,530 --> 00:33:36,820
thing we can do there is do you try to

773
00:33:35,200 --> 00:33:39,190
get more cross compilers I mean there's

774
00:33:36,820 --> 00:33:41,260
a project written in C++ that can

775
00:33:39,190 --> 00:33:42,430
actually compile rust and the clever

776
00:33:41,260 --> 00:33:43,870
thing does it turns off the borrow

777
00:33:42,430 --> 00:33:46,750
checker so it doesn't actually check the

778
00:33:43,870 --> 00:33:48,280
codes perfectly correct but it's still

779
00:33:46,750 --> 00:33:49,480
enough to get it compiled and more

780
00:33:48,280 --> 00:33:51,070
people should work on that stuff and

781
00:33:49,480 --> 00:33:53,200
also go plug my own project open

782
00:33:51,070 --> 00:33:55,659
timestamps which quite simply proves

783
00:33:53,200 --> 00:33:57,910
data exists in the past if it exists in

784
00:33:55,660 --> 00:34:01,600
the past you need time-travel to go and

785
00:33:57,910 --> 00:34:03,400
change it or you do the attack in the

786
00:34:01,600 --> 00:34:08,380
past well very frequently you can rule

787
00:34:03,400 --> 00:34:10,210
out the attack now you know and you can

788
00:34:08,380 --> 00:34:12,580
go show by the fact that that timestamp

789
00:34:10,210 --> 00:34:14,260
exists when you know when your window

790
00:34:12,580 --> 00:34:16,000
vulnerability was and how unlikely it

791
00:34:14,260 --> 00:34:18,280
was so definitely something to think

792
00:34:16,000 --> 00:34:21,070
about and instantly Bitcoin core a bunch

793
00:34:18,280 --> 00:34:22,990
of the people with merge access some you

794
00:34:21,070 --> 00:34:27,149
know with that with those public keys do

795
00:34:22,989 --> 00:34:27,149
in fact timestamp every single commit

796
00:34:29,370 --> 00:34:38,290
don't be shy okay maybe I have a last

797
00:34:35,350 --> 00:34:40,659
question so you mentioned that you

798
00:34:38,290 --> 00:34:42,279
develop in a different environment so

799
00:34:40,659 --> 00:34:44,710
what kind of virtualization do you use

800
00:34:42,280 --> 00:34:47,890
or maybe some container or Alex C or

801
00:34:44,710 --> 00:34:50,790
something well so for my desktop machine

802
00:34:47,889 --> 00:34:55,480
specifically our cubes another yeah and

803
00:34:50,790 --> 00:34:57,430
cubes is kind of nice cuz it it's

804
00:34:55,480 --> 00:34:59,590
designed around different realms which

805
00:34:57,430 --> 00:35:01,270
are different virtual machines and on

806
00:34:59,590 --> 00:35:03,220
top of that it makes it fairly easy but

807
00:35:01,270 --> 00:35:05,350
also you know has good security for

808
00:35:03,220 --> 00:35:09,759
moving data around from one virtual

809
00:35:05,350 --> 00:35:11,319
machine to another and it's actual you

810
00:35:09,760 --> 00:35:13,480
know proper like hardware level

811
00:35:11,320 --> 00:35:14,890
virtualization it's not you know some of

812
00:35:13,480 --> 00:35:17,620
the Linux container stuff it's always a

813
00:35:14,890 --> 00:35:19,120
little dubious but you know is it

814
00:35:17,620 --> 00:35:21,279
perfect - no but I think it definitely

815
00:35:19,120 --> 00:35:23,259
reduces the chance of someone sneaking

816
00:35:21,280 --> 00:35:26,890
in a you know get commits into one of my

817
00:35:23,260 --> 00:35:29,140
projects and reading my mail and I do

818
00:35:26,890 --> 00:35:31,359
think we need to do better I mean we you

819
00:35:29,140 --> 00:35:34,390
know someone needs to go write a plug in

820
00:35:31,360 --> 00:35:37,990
the car go to fire up a virtual machine

821
00:35:34,390 --> 00:35:40,180
when you compile a project and you know

822
00:35:37,990 --> 00:35:43,000
copy your code over and actually do all

823
00:35:40,180 --> 00:35:45,759
of the compiling somewhere other than

824
00:35:43,000 --> 00:35:48,010
where you're editing but you know at

825
00:35:45,760 --> 00:35:50,230
least with cubes we've kind of got some

826
00:35:48,010 --> 00:35:51,730
of this soft and instantly if you want

827
00:35:50,230 --> 00:35:53,260
to do that project two cubes does have

828
00:35:51,730 --> 00:35:55,120
by adidas disposable virtual machines

829
00:35:53,260 --> 00:35:56,830
which are relatively quickly too quick

830
00:35:55,120 --> 00:35:58,870
to fire up so you could fire from a

831
00:35:56,830 --> 00:36:01,660
virtual machine move the code and do the

832
00:35:58,870 --> 00:36:05,350
compliation and maybe keep it around to

833
00:36:01,660 --> 00:36:08,140
going do changes but you know someone's

834
00:36:05,350 --> 00:36:10,630
got to write it okay thank you very much

835
00:36:08,140 --> 00:36:14,250
Pro answer how dare any last questions

836
00:36:10,630 --> 00:36:14,250
oh we get wanna light

837
00:36:22,269 --> 00:36:26,319
thanks for the talk Peter one of the

838
00:36:24,549 --> 00:36:28,180
challenges to some of this tooling seems

839
00:36:26,319 --> 00:36:29,859
to be like economic incentives like it's

840
00:36:28,180 --> 00:36:31,719
hard to productize them like you know

841
00:36:29,859 --> 00:36:33,339
whether you can like do work on it and

842
00:36:31,719 --> 00:36:35,289
then I sell it in earn money um

843
00:36:33,339 --> 00:36:38,229
I wonder if you had any thoughts of how

844
00:36:35,289 --> 00:36:39,819
that like how that problem can be solved

845
00:36:38,229 --> 00:36:41,890
so more people can afford to spend time

846
00:36:39,819 --> 00:36:43,019
I'm like making better tooling I'm sort

847
00:36:41,890 --> 00:36:46,509
of solving some of these problems you

848
00:36:43,019 --> 00:36:48,160
know I wish had good answers to that but

849
00:36:46,509 --> 00:36:51,489
I think this is sort of broader open

850
00:36:48,160 --> 00:36:53,288
source problem where you know in general

851
00:36:51,489 --> 00:36:55,299
how do you get funding to go do things

852
00:36:53,289 --> 00:36:56,499
there the public good and I think you're

853
00:36:55,299 --> 00:36:59,619
quite right so I mean I'm especially

854
00:36:56,499 --> 00:37:01,988
with an example of github where some of

855
00:36:59,619 --> 00:37:03,969
these issues are service rated by how

856
00:37:01,989 --> 00:37:05,170
it's much you make much more money by

857
00:37:03,969 --> 00:37:08,410
running a trusted service that people

858
00:37:05,170 --> 00:37:09,880
pay a subscription to you know maybe for

859
00:37:08,410 --> 00:37:13,229
some of this stuff what we need is

860
00:37:09,880 --> 00:37:15,430
closed source software or at least

861
00:37:13,229 --> 00:37:17,680
software with the code available but

862
00:37:15,430 --> 00:37:19,328
you're stupid you know it's still not

863
00:37:17,680 --> 00:37:23,618
released under open source license and

864
00:37:19,329 --> 00:37:25,329
you go pay for copy but I think the

865
00:37:23,619 --> 00:37:27,430
bigger issue you may even be ignoring

866
00:37:25,329 --> 00:37:32,680
that how do you actually get dibs to use

867
00:37:27,430 --> 00:37:36,069
this stuff you know we like it's easy to

868
00:37:32,680 --> 00:37:38,469
go sign and get commits install PGP and

869
00:37:36,069 --> 00:37:39,009
you know you set up some stuff and it

870
00:37:38,469 --> 00:37:41,979
just works

871
00:37:39,009 --> 00:37:43,509
I mean I've signed get commits for years

872
00:37:41,979 --> 00:37:47,049
I figured out how to do that probably

873
00:37:43,509 --> 00:37:49,299
back in what 1999 or something like it's

874
00:37:47,049 --> 00:37:52,630
it's not that hard but so many people

875
00:37:49,299 --> 00:37:55,329
don't do it the tooling exists for that

876
00:37:52,630 --> 00:37:56,920
we don't really need more that we these

877
00:37:55,329 --> 00:37:59,229
tweaks to it but you know to at least

878
00:37:56,920 --> 00:38:00,729
make an improvement it's all you know

879
00:37:59,229 --> 00:38:02,968
everything's already there it's just how

880
00:38:00,729 --> 00:38:06,339
do you get devs to actually do it and

881
00:38:02,969 --> 00:38:08,650
unfortunately I you know after the talks

882
00:38:06,339 --> 00:38:12,038
like this like I don't see good ways to

883
00:38:08,650 --> 00:38:13,869
do this and you know maybe some of the

884
00:38:12,039 --> 00:38:16,150
lawyers in the room might start singing

885
00:38:13,869 --> 00:38:18,729
like liability law and stuff which is an

886
00:38:16,150 --> 00:38:19,930
ugly tool to have to use but you know

887
00:38:18,729 --> 00:38:23,410
maybe that's the sort of thing you need

888
00:38:19,930 --> 00:38:25,719
I mean I I used to work in you know

889
00:38:23,410 --> 00:38:27,459
electronics engineering and I'll make

890
00:38:25,719 --> 00:38:28,809
the point then Canada of course I

891
00:38:27,459 --> 00:38:30,788
couldn't call myself an engineer because

892
00:38:28,809 --> 00:38:31,390
that's protected title if you actually

893
00:38:30,789 --> 00:38:33,369
call your

894
00:38:31,390 --> 00:38:35,618
an engineer you know you're filing off

895
00:38:33,369 --> 00:38:38,260
paperwork where you're testing to the

896
00:38:35,619 --> 00:38:41,109
safety of something with your future on

897
00:38:38,260 --> 00:38:42,640
the line you know if we regulate a

898
00:38:41,109 --> 00:38:44,589
software that way yeah probably some of

899
00:38:42,640 --> 00:38:46,328
these problems would go away but it's

900
00:38:44,589 --> 00:38:49,029
not really something I think many of us

901
00:38:46,329 --> 00:38:50,380
want to do and maybe that's sort of part

902
00:38:49,029 --> 00:38:52,569
of our incentive there if we don't do

903
00:38:50,380 --> 00:38:54,670
this we don't fix these issues we might

904
00:38:52,569 --> 00:38:56,109
see engineering like regulations and

905
00:38:54,670 --> 00:38:57,880
well what does engineering like

906
00:38:56,109 --> 00:38:59,440
regulations come with I'm sure it'll

907
00:38:57,880 --> 00:39:01,240
look like a lot of other engineering

908
00:38:59,440 --> 00:39:03,190
where it's a bit more of a closed system

909
00:39:01,240 --> 00:39:04,779
many have to go pass the right courses

910
00:39:03,190 --> 00:39:07,390
get the right certifications to go work

911
00:39:04,779 --> 00:39:08,710
in the field you know if we don't solve

912
00:39:07,390 --> 00:39:09,910
these kinds of problems maybe that's

913
00:39:08,710 --> 00:39:12,490
actually where things are going to go I

914
00:39:09,910 --> 00:39:15,460
think more likely I mean even

915
00:39:12,490 --> 00:39:17,169
engineering world had it developed now

916
00:39:15,460 --> 00:39:18,910
it might be actually much more corporate

917
00:39:17,170 --> 00:39:20,130
thing with only a couple companies even

918
00:39:18,910 --> 00:39:22,990
allowed to do engineering

919
00:39:20,130 --> 00:39:26,200
and at least engineering is democratized

920
00:39:22,990 --> 00:39:27,729
in the sense that anyone who goes

921
00:39:26,200 --> 00:39:30,759
through the right process can get their

922
00:39:27,730 --> 00:39:31,000
stamp it still could be a lot worse than

923
00:39:30,760 --> 00:39:33,490
that

924
00:39:31,000 --> 00:39:35,170
but I know maybe that's enough incentive

925
00:39:33,490 --> 00:39:41,500
for people I just wish I had a good

926
00:39:35,170 --> 00:39:46,529
answer and add two questions come on way

927
00:39:41,500 --> 00:39:46,529
I still time oh there's one

928
00:39:56,660 --> 00:40:03,350
Franco great talk I think the signing of

929
00:39:59,960 --> 00:40:06,820
comments is necessary because do you

930
00:40:03,350 --> 00:40:09,980
know would do or get blamed someone else

931
00:40:06,820 --> 00:40:11,080
basically you can say like Linus

932
00:40:09,980 --> 00:40:13,850
Torvalds

933
00:40:11,080 --> 00:40:18,799
may twist commit and they will push it

934
00:40:13,850 --> 00:40:22,250
very positive because github is using

935
00:40:18,800 --> 00:40:29,590
some meta meta data from commit and it

936
00:40:22,250 --> 00:40:33,440
will show that he pushed bad comment but

937
00:40:29,590 --> 00:40:35,600
it's not true yeah well it's interesting

938
00:40:33,440 --> 00:40:38,210
and all off to give credit to github for

939
00:40:35,600 --> 00:40:39,799
this at least in there you is they the

940
00:40:38,210 --> 00:40:43,910
notion of verified commits on the

941
00:40:39,800 --> 00:40:46,520
website so if you sign a commit with PGP

942
00:40:43,910 --> 00:40:48,710
key that you've associated with your

943
00:40:46,520 --> 00:40:50,630
accounts it will actually show off with

944
00:40:48,710 --> 00:40:52,580
a little green checkmark in a way that

945
00:40:50,630 --> 00:40:56,690
won't happen if I just change the

946
00:40:52,580 --> 00:40:58,759
metadata but that's a trusted system

947
00:40:56,690 --> 00:41:00,140
where I'm actually trusting github to go

948
00:40:58,760 --> 00:41:02,810
do all that and I don't actually know if

949
00:41:00,140 --> 00:41:05,240
they've done it I would also remind the

950
00:41:02,810 --> 00:41:07,970
project from Frank Brown and sperg Lara

951
00:41:05,240 --> 00:41:12,069
they present it last year goat goat

952
00:41:07,970 --> 00:41:16,160
chain I think yeah and do you think that

953
00:41:12,070 --> 00:41:19,580
maybe the answer is some vote system for

954
00:41:16,160 --> 00:41:21,770
developers so we will let's say I trust

955
00:41:19,580 --> 00:41:25,000
this developer it has two beasts one and

956
00:41:21,770 --> 00:41:30,950
it will calculate the score of a project

957
00:41:25,000 --> 00:41:33,860
trust less of a project well you know my

958
00:41:30,950 --> 00:41:35,689
suspicions with other stuff is most of

959
00:41:33,860 --> 00:41:37,220
the problem is really just adding a bit

960
00:41:35,690 --> 00:41:38,630
of crypto to it so we can have some

961
00:41:37,220 --> 00:41:42,080
accountability figure out what happened

962
00:41:38,630 --> 00:41:43,610
when something went wrong you know my my

963
00:41:42,080 --> 00:41:45,259
suspicion is again I'll kind of go back

964
00:41:43,610 --> 00:41:48,380
to sort of whistleblowing concept is

965
00:41:45,260 --> 00:41:51,860
that what's most important is to make

966
00:41:48,380 --> 00:41:53,450
the attacks easily detectable and make

967
00:41:51,860 --> 00:41:55,430
sure the tax or things that happen to

968
00:41:53,450 --> 00:41:57,080
all of us rather none of us and you know

969
00:41:55,430 --> 00:42:00,740
I didn't use this term but certificate

970
00:41:57,080 --> 00:42:02,779
transparency has revolutionized the web

971
00:42:00,740 --> 00:42:04,310
certificate business and well what is

972
00:42:02,780 --> 00:42:07,340
significant transparency is basically a

973
00:42:04,310 --> 00:42:10,040
thing that means that when I go login

974
00:42:07,340 --> 00:42:13,910
you know to my bank

975
00:42:10,040 --> 00:42:15,590
on my web browser on my device that I

976
00:42:13,910 --> 00:42:16,940
know that the certificate that's

977
00:42:15,590 --> 00:42:19,220
presented to me by the other serve

978
00:42:16,940 --> 00:42:22,640
server would have been known to the SIS

979
00:42:19,220 --> 00:42:24,859
admin's of the bank and I'll say them a

980
00:42:22,640 --> 00:42:29,060
little more precisely so without

981
00:42:24,860 --> 00:42:31,550
certificate transparency I have a chain

982
00:42:29,060 --> 00:42:33,950
of certificates from a root of trust you

983
00:42:31,550 --> 00:42:38,960
know set of entities that I just

984
00:42:33,950 --> 00:42:41,240
unconditionally trust that claim to go

985
00:42:38,960 --> 00:42:44,330
sign certificates that's claimed to be

986
00:42:41,240 --> 00:42:46,700
for my bank what certificate

987
00:42:44,330 --> 00:42:48,860
transparency does is adds a step where

988
00:42:46,700 --> 00:42:51,169
that first sort of linkage and ensures

989
00:42:48,860 --> 00:42:54,290
that those chief gates were published in

990
00:42:51,170 --> 00:42:57,290
a widely visible database called a

991
00:42:54,290 --> 00:43:00,050
certificate transparency lock or as I

992
00:42:57,290 --> 00:43:01,279
would call it a block chain the people

993
00:43:00,050 --> 00:43:03,110
buying certificate transparency hate

994
00:43:01,280 --> 00:43:04,610
that term but yeah that's ultimately

995
00:43:03,110 --> 00:43:06,380
what it is and you know Bakhtin's but

996
00:43:04,610 --> 00:43:08,480
making something publicly visible and

997
00:43:06,380 --> 00:43:10,610
easy to ensure that other people could

998
00:43:08,480 --> 00:43:13,040
have seen the same thing well because

999
00:43:10,610 --> 00:43:15,650
that happens I now know that assisted

1000
00:43:13,040 --> 00:43:19,240
means at my bank can check those logs

1001
00:43:15,650 --> 00:43:25,040
and look for certificates issued that

1002
00:43:19,240 --> 00:43:27,020
they didn't want issued now it doesn't

1003
00:43:25,040 --> 00:43:29,810
directly help me but it does mean that

1004
00:43:27,020 --> 00:43:31,520
the syph get authorities who have this

1005
00:43:29,810 --> 00:43:33,650
you know have this role as a route of

1006
00:43:31,520 --> 00:43:35,420
trust that now they have a disincentive

1007
00:43:33,650 --> 00:43:39,560
to abuse it because they won't get

1008
00:43:35,420 --> 00:43:42,860
caught and there's quite a few stiff

1009
00:43:39,560 --> 00:43:44,779
good authorities who CT has essentially

1010
00:43:42,860 --> 00:43:47,240
shut down their businesses because their

1011
00:43:44,780 --> 00:43:51,080
attacks got easily detected and they

1012
00:43:47,240 --> 00:43:53,299
were d trusted you know we need to the

1013
00:43:51,080 --> 00:43:55,130
same thing with software and my

1014
00:43:53,300 --> 00:43:57,110
suspicion is if we do these things what

1015
00:43:55,130 --> 00:44:00,560
we're actually gonna find is that things

1016
00:43:57,110 --> 00:44:02,750
like adding you know web of trusts and

1017
00:44:00,560 --> 00:44:04,520
trying to have developers out tree

1018
00:44:02,750 --> 00:44:07,430
though other and so on yes it will still

1019
00:44:04,520 --> 00:44:09,560
be useful in higher security things but

1020
00:44:07,430 --> 00:44:10,940
I suspect that by itself will be enough

1021
00:44:09,560 --> 00:44:13,220
to make most of these attacks go away

1022
00:44:10,940 --> 00:44:14,990
although unfortunately the other side of

1023
00:44:13,220 --> 00:44:18,319
it then is sort of social thing it's

1024
00:44:14,990 --> 00:44:20,450
kind of fun to be part of a web of trust

1025
00:44:18,320 --> 00:44:24,080
to be vouched for by other devout divs

1026
00:44:20,450 --> 00:44:24,549
you know the fact that this stuff's kind

1027
00:44:24,080 --> 00:44:26,930
of

1028
00:44:24,550 --> 00:44:28,910
doesn't need these sort of second layers

1029
00:44:26,930 --> 00:44:32,509
may actually hinder progress on getting

1030
00:44:28,910 --> 00:44:34,700
stuff implemented so maybe we need to go

1031
00:44:32,510 --> 00:44:36,650
push that just to somehow gamify it if

1032
00:44:34,700 --> 00:44:38,270
you will and get more devs doing these

1033
00:44:36,650 --> 00:44:39,950
things I don't quite know the right

1034
00:44:38,270 --> 00:44:41,690
answers there but you know I certainly

1035
00:44:39,950 --> 00:44:43,220
at least technically know all right

1036
00:44:41,690 --> 00:44:45,470
least I know at a technical level the

1037
00:44:43,220 --> 00:44:50,029
sort of measures that could catch a lot

1038
00:44:45,470 --> 00:44:52,040
of these attacks hi Peter

1039
00:44:50,030 --> 00:44:57,140
thanks for the talk I have a question

1040
00:44:52,040 --> 00:45:01,730
it's regarding the spam attack that open

1041
00:44:57,140 --> 00:45:04,549
PGP repository had during June basically

1042
00:45:01,730 --> 00:45:07,940
they could keep like all the certificate

1043
00:45:04,550 --> 00:45:10,910
certificate it's there I wonder if maybe

1044
00:45:07,940 --> 00:45:14,680
using a blockchain not sure if Bitcoin

1045
00:45:10,910 --> 00:45:17,899
or any other secure enough we can like

1046
00:45:14,680 --> 00:45:21,200
this miss that a spam attack because you

1047
00:45:17,900 --> 00:45:22,760
need to spend money in fees I mean you

1048
00:45:21,200 --> 00:45:27,080
certainly could do that we certainly

1049
00:45:22,760 --> 00:45:29,060
could make adding a signature you know

1050
00:45:27,080 --> 00:45:30,890
and maybe I'll explain so what that spam

1051
00:45:29,060 --> 00:45:32,600
attack was was Chris PGP does have that

1052
00:45:30,890 --> 00:45:35,060
web of trust you can essentially vote

1053
00:45:32,600 --> 00:45:39,670
for other people and the way PGP works

1054
00:45:35,060 --> 00:45:41,750
is there sir centralized databases and

1055
00:45:39,670 --> 00:45:43,280
centralize the sense that any you know a

1056
00:45:41,750 --> 00:45:44,600
small number of people run these but

1057
00:45:43,280 --> 00:45:47,410
anyone can go run their own and make

1058
00:45:44,600 --> 00:45:50,150
copy of it that go passed around these

1059
00:45:47,410 --> 00:45:52,399
signatures vote you know these vouches

1060
00:45:50,150 --> 00:45:54,980
from one person to another and the way

1061
00:45:52,400 --> 00:45:57,290
PGP tooling works by default is it just

1062
00:45:54,980 --> 00:45:59,900
downloads the full set so if you go and

1063
00:45:57,290 --> 00:46:02,090
add a signature to my key the tooling

1064
00:45:59,900 --> 00:46:06,320
will download that signature even though

1065
00:46:02,090 --> 00:46:08,090
I never actually approved it and there's

1066
00:46:06,320 --> 00:46:09,950
some reasons why you want that such as

1067
00:46:08,090 --> 00:46:11,570
you know I want to you know if I'm a

1068
00:46:09,950 --> 00:46:13,009
peach peas or I want to go learn but all

1069
00:46:11,570 --> 00:46:15,890
the signatures I don't want to have a

1070
00:46:13,010 --> 00:46:17,750
manual you know approval attempt and so

1071
00:46:15,890 --> 00:46:19,930
on so certainly if you kept that model

1072
00:46:17,750 --> 00:46:23,750
you could use things like Bitcoin to

1073
00:46:19,930 --> 00:46:25,279
make it expensive to spam and that would

1074
00:46:23,750 --> 00:46:26,990
probably solve most problems but also

1075
00:46:25,280 --> 00:46:29,330
point out you can also solve a lot of

1076
00:46:26,990 --> 00:46:32,689
problems just having people vouch for

1077
00:46:29,330 --> 00:46:34,009
their for the signatures from other

1078
00:46:32,690 --> 00:46:36,080
people on their keys essentially an

1079
00:46:34,010 --> 00:46:38,030
approval process you know why should you

1080
00:46:36,080 --> 00:46:43,069
be able to add data in my key without me

1081
00:46:38,030 --> 00:46:44,750
proving PGP could easily fix this except

1082
00:46:43,070 --> 00:46:46,850
for the fact that PGP is a widespread

1083
00:46:44,750 --> 00:46:49,520
protocol the tooling is kind of crufty

1084
00:46:46,850 --> 00:46:51,290
and so on you know this is again when

1085
00:46:49,520 --> 00:46:52,940
these hard problems and unfortunately I

1086
00:46:51,290 --> 00:46:56,029
think I've seen a lot in the security

1087
00:46:52,940 --> 00:46:58,970
world people not only really hating PGP

1088
00:46:56,030 --> 00:47:00,680
but really hating on PGP without any

1089
00:46:58,970 --> 00:47:02,810
recognition of what it is good for or

1090
00:47:00,680 --> 00:47:04,700
how you would get alternatives and

1091
00:47:02,810 --> 00:47:07,460
improvements and I see very few people

1092
00:47:04,700 --> 00:47:08,870
actually interested in replacing PGP you

1093
00:47:07,460 --> 00:47:10,700
know we don't need to get rid of PHP we

1094
00:47:08,870 --> 00:47:14,690
have to replace it because we are

1095
00:47:10,700 --> 00:47:15,830
dependent on it security guarantees you

1096
00:47:14,690 --> 00:47:18,470
know we don't use it as much as we

1097
00:47:15,830 --> 00:47:20,450
should but like it is kind of our last

1098
00:47:18,470 --> 00:47:22,939
line of defense against a lot of these

1099
00:47:20,450 --> 00:47:25,910
central centralized attacks by

1100
00:47:22,940 --> 00:47:27,860
centralized attackers so we have to

1101
00:47:25,910 --> 00:47:29,540
replace it you know we have to make that

1102
00:47:27,860 --> 00:47:31,010
ecosystem work again what's the right

1103
00:47:29,540 --> 00:47:33,920
way to do that well you probably give

1104
00:47:31,010 --> 00:47:35,330
ten more talks on this but it doesn't

1105
00:47:33,920 --> 00:47:39,050
need to be done and it's not enough to

1106
00:47:35,330 --> 00:47:40,400
just ditch it and it is ok to if each

1107
00:47:39,050 --> 00:47:43,340
piece replaced by something that only

1108
00:47:40,400 --> 00:47:45,080
devs use you know this whole bits of

1109
00:47:43,340 --> 00:47:48,740
like everyone's you know pet gorilla

1110
00:47:45,080 --> 00:47:50,090
needs to be able to go use PGP is I

1111
00:47:48,740 --> 00:47:52,549
think a narrative pushed by people who

1112
00:47:50,090 --> 00:47:54,380
may have bad incentives here and don't

1113
00:47:52,550 --> 00:47:57,140
want us using security you know secure

1114
00:47:54,380 --> 00:47:58,610
tools we need to look at this saying

1115
00:47:57,140 --> 00:48:01,129
while you guys are professionals you

1116
00:47:58,610 --> 00:48:02,750
people are developers if you want to

1117
00:48:01,130 --> 00:48:05,180
participate in these ecosystems of

1118
00:48:02,750 --> 00:48:07,100
security sensitive software here's some

1119
00:48:05,180 --> 00:48:08,690
of your minimal requirements and the

1120
00:48:07,100 --> 00:48:11,420
minimum requirement might be using PGP

1121
00:48:08,690 --> 00:48:13,340
version 2 which might you know did some

1122
00:48:11,420 --> 00:48:14,630
of this stuff improve on other stuff but

1123
00:48:13,340 --> 00:48:17,390
the port of thing is somewhere you are

1124
00:48:14,630 --> 00:48:19,820
getting a signature there so yes I think

1125
00:48:17,390 --> 00:48:22,609
this is fixable and you know blockchain

1126
00:48:19,820 --> 00:48:24,860
might be a part of that if thank you

1127
00:48:22,610 --> 00:48:28,360
very much for your talk for s first

1128
00:48:24,860 --> 00:48:28,360
thank you guys for coming to this talk

1129
00:48:29,070 --> 00:48:31,130
you

