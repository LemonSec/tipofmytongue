1
00:00:11,970 --> 00:00:15,050
[Music]

2
00:00:17,710 --> 00:00:23,430
we are at course talking about DNS

3
00:00:20,560 --> 00:00:26,320
rebinding attacks with Matt Robinson and

4
00:00:23,430 --> 00:00:29,619
he is a senior security consultant for

5
00:00:26,320 --> 00:00:32,558
context is and a researcher and yeah

6
00:00:29,619 --> 00:00:34,660
this is about DNS rebinding there is I'm

7
00:00:32,558 --> 00:00:37,570
I was told over at beer the other night

8
00:00:34,660 --> 00:00:38,980
is a pretty decent example of you know

9
00:00:37,570 --> 00:00:41,469
the use of DNS rebinding

10
00:00:38,980 --> 00:00:42,940
in this talk oh the guys for half an

11
00:00:41,469 --> 00:00:45,210
hour but yeah I'm really looking forward

12
00:00:42,940 --> 00:00:47,890
to this one give it up for Matt Davidson

13
00:00:45,210 --> 00:00:50,440
okay so he's my talk on breaking with

14
00:00:47,890 --> 00:00:51,909
DNS rebinding it's named that way

15
00:00:50,440 --> 00:00:53,710
because I'll actually go into a bit of a

16
00:00:51,909 --> 00:00:56,829
demo of breaking into a smart home using

17
00:00:53,710 --> 00:01:00,460
DNS rebinding but we'll go over what is

18
00:00:56,829 --> 00:01:02,199
DNS rebinding how came to be what tools

19
00:01:00,460 --> 00:01:04,540
you can use to test for it or to

20
00:01:02,199 --> 00:01:06,780
actually exploit it we'll do a short

21
00:01:04,540 --> 00:01:09,490
demo on breaking into a smart home and

22
00:01:06,780 --> 00:01:10,390
then we'll delve into my struggles with

23
00:01:09,490 --> 00:01:13,270
getting developers to actually

24
00:01:10,390 --> 00:01:15,520
remediates some of these issues and also

25
00:01:13,270 --> 00:01:18,789
what protections are available to defend

26
00:01:15,520 --> 00:01:22,330
against it so since I'm not a well-known

27
00:01:18,790 --> 00:01:25,120
hoover hacker like sylvio a little bit

28
00:01:22,330 --> 00:01:26,560
about me first like Pat said my name is

29
00:01:25,120 --> 00:01:28,710
Matt Robinson but everyone calls me

30
00:01:26,560 --> 00:01:31,570
gekkan unless you're my wife or mother

31
00:01:28,710 --> 00:01:34,809
I'm a senior security consultant for

32
00:01:31,570 --> 00:01:36,729
context security in Brisbane I've got a

33
00:01:34,810 --> 00:01:39,130
long work history of being a software

34
00:01:36,730 --> 00:01:41,590
developer so I've developed in most

35
00:01:39,130 --> 00:01:44,170
languages particularly around web I have

36
00:01:41,590 --> 00:01:47,260
a bunch of certificates mostly from all

37
00:01:44,170 --> 00:01:48,720
sick like everyone in InfoSec I'm on

38
00:01:47,260 --> 00:01:50,530
Twitter if you want to follow me

39
00:01:48,720 --> 00:01:52,510
basically I just like breaking into

40
00:01:50,530 --> 00:01:55,990
things pulling things apart and

41
00:01:52,510 --> 00:01:57,220
tinkering with bits and pieces so I'm a

42
00:01:55,990 --> 00:02:00,250
contributor to various conferences

43
00:01:57,220 --> 00:02:02,440
meetups trainings etc so on staff today

44
00:02:00,250 --> 00:02:06,640
as well as speaker and helping with the

45
00:02:02,440 --> 00:02:08,288
CTF and everything else and I'm not

46
00:02:06,640 --> 00:02:12,879
really hack man for those who didn't

47
00:02:08,288 --> 00:02:15,250
quite spot that okay so what is DNS

48
00:02:12,879 --> 00:02:17,560
rebinding DNS rebinding is a form of

49
00:02:15,250 --> 00:02:19,780
computer attack in which a malicious web

50
00:02:17,560 --> 00:02:23,050
page causes visitor to run client-side

51
00:02:19,780 --> 00:02:23,860
scripts that attack a machine elsewhere

52
00:02:23,050 --> 00:02:26,380
on the network

53
00:02:23,860 --> 00:02:28,020
in theory same origin policy prevents

54
00:02:26,380 --> 00:02:30,220
his form of attack from happening

55
00:02:28,020 --> 00:02:32,440
client-side scripts are only allowed to

56
00:02:30,220 --> 00:02:35,020
access content on the same post that

57
00:02:32,440 --> 00:02:36,820
they were served from comparing domain

58
00:02:35,020 --> 00:02:41,710
names is an essential part of enforcing

59
00:02:36,820 --> 00:02:43,510
this policy so DNS rebinding circumvents

60
00:02:41,710 --> 00:02:45,340
this protection by abusing the domain

61
00:02:43,510 --> 00:02:47,769
name system and essentially changing the

62
00:02:45,340 --> 00:02:50,770
IP address of the domain halfway through

63
00:02:47,770 --> 00:02:52,420
the attack this attack can be used to

64
00:02:50,770 --> 00:02:54,160
preach profit network by causing the

65
00:02:52,420 --> 00:02:55,899
victims web browser access computers on

66
00:02:54,160 --> 00:02:57,520
private IP addresses inside of the

67
00:02:55,900 --> 00:03:00,280
private network and return the results

68
00:02:57,520 --> 00:03:02,380
to the attacker I can be used for

69
00:03:00,280 --> 00:03:08,230
spamming denial of service attacks and

70
00:03:02,380 --> 00:03:10,269
tons of other malicious activities so

71
00:03:08,230 --> 00:03:12,369
some important facts before we get too

72
00:03:10,270 --> 00:03:15,490
much into it it was first discovered in

73
00:03:12,370 --> 00:03:17,740
20th of April 2007 by Sanford's Security

74
00:03:15,490 --> 00:03:20,709
Labs so it's been around for a very long

75
00:03:17,740 --> 00:03:23,020
time now 12 years later it's still a

76
00:03:20,709 --> 00:03:25,540
internet riddled with rebinding issues

77
00:03:23,020 --> 00:03:28,180
so if you're a security researcher or

78
00:03:25,540 --> 00:03:30,400
pen tester or even just a developer it's

79
00:03:28,180 --> 00:03:33,280
something you should really look into or

80
00:03:30,400 --> 00:03:34,690
come see this talk is a friend of mine

81
00:03:33,280 --> 00:03:36,459
likes to compare it to cross-site

82
00:03:34,690 --> 00:03:37,780
scripting attack or a reflected

83
00:03:36,459 --> 00:03:39,459
cross-site scripting attack because it

84
00:03:37,780 --> 00:03:41,019
essentially lets you run JavaScript code

85
00:03:39,459 --> 00:03:44,769
on a target website that you should not

86
00:03:41,019 --> 00:03:47,320
be able to run JavaScript on disabling

87
00:03:44,769 --> 00:03:48,550
cause doesn't really help you're still

88
00:03:47,320 --> 00:03:51,459
kind of vulnerable to a DNS rebinding

89
00:03:48,550 --> 00:03:53,620
attack and most of the research i've

90
00:03:51,459 --> 00:03:56,350
seen on it it's people mostly targeting

91
00:03:53,620 --> 00:03:57,250
modems routers that type of thing but

92
00:03:56,350 --> 00:03:59,709
it's starting to get a bit more

93
00:03:57,250 --> 00:04:01,690
publicized these days and you can do

94
00:03:59,709 --> 00:04:04,989
some pretty interesting things with

95
00:04:01,690 --> 00:04:10,030
certain JSON RPC ports so going through

96
00:04:04,989 --> 00:04:12,640
a couple of examples of that too so a

97
00:04:10,030 --> 00:04:15,940
bit of a timeline like I said it was

98
00:04:12,640 --> 00:04:19,209
discovered in 2007 by Standard Life

99
00:04:15,940 --> 00:04:21,339
about year's Sun Java and Adobe fixed

100
00:04:19,209 --> 00:04:22,960
some of their stuff and then pretty much

101
00:04:21,339 --> 00:04:24,789
everything went dead I mean there were a

102
00:04:22,960 --> 00:04:29,349
few examples of it but not much happened

103
00:04:24,790 --> 00:04:31,030
until early 2018 when Travis in his

104
00:04:29,350 --> 00:04:33,640
usual style just dropped a whole bunch

105
00:04:31,030 --> 00:04:35,320
of DNS rebinding issues so they were

106
00:04:33,640 --> 00:04:37,150
swapped Warcraft's RPC sir

107
00:04:35,320 --> 00:04:39,099
which I believe let you screw with other

108
00:04:37,150 --> 00:04:42,849
people's accounts which is you know

109
00:04:39,100 --> 00:04:45,400
always fun and my particular favorite is

110
00:04:42,850 --> 00:04:48,370
is you turret DNS rebinding attack

111
00:04:45,400 --> 00:04:50,890
because utorrent for those of you that

112
00:04:48,370 --> 00:04:52,180
haven't used it before it lets you

113
00:04:50,890 --> 00:04:53,830
download a turret to a particular

114
00:04:52,180 --> 00:04:56,800
directory which in itself isn't

115
00:04:53,830 --> 00:04:58,330
particularly nasty once you roll in DNS

116
00:04:56,800 --> 00:05:01,000
rebinding you're getting someone else to

117
00:04:58,330 --> 00:05:02,469
add your torrent aka reverse shell or

118
00:05:01,000 --> 00:05:04,570
know where whatever you want to install

119
00:05:02,470 --> 00:05:09,190
straight into their startup directory so

120
00:05:04,570 --> 00:05:11,469
that can be quite fun and then in June

121
00:05:09,190 --> 00:05:13,510
Brandon Dorsey discovers DNS rebinding

122
00:05:11,470 --> 00:05:16,570
Google home chromecast and a bunch of

123
00:05:13,510 --> 00:05:21,430
other common IOT type stuff and I

124
00:05:16,570 --> 00:05:23,770
believe that's all patched now so how

125
00:05:21,430 --> 00:05:26,110
does the DNS rebinding attack work well

126
00:05:23,770 --> 00:05:29,349
it's it's fairly simple actually it

127
00:05:26,110 --> 00:05:30,760
shouldn't work but um when you hit a

128
00:05:29,350 --> 00:05:32,890
malicious domain that's been set up for

129
00:05:30,760 --> 00:05:35,500
DNS rebinding the browser will request

130
00:05:32,890 --> 00:05:37,479
the domain so evil.com in this case and

131
00:05:35,500 --> 00:05:40,990
they'll get back an internet facing IP

132
00:05:37,480 --> 00:05:44,050
address so in this example it's 1.2.3.4

133
00:05:40,990 --> 00:05:46,060
and the server returns from javascript

134
00:05:44,050 --> 00:05:47,620
in HTML code and it keeps trying to

135
00:05:46,060 --> 00:05:50,140
resolve that domain over and over and

136
00:05:47,620 --> 00:05:52,900
over again so in my example I do it at

137
00:05:50,140 --> 00:05:54,640
three three or four seconds and then

138
00:05:52,900 --> 00:05:56,349
after a while so usually after the

139
00:05:54,640 --> 00:05:58,719
payload or that the JavaScript has been

140
00:05:56,350 --> 00:06:00,460
delivered to the browser the DNS server

141
00:05:58,720 --> 00:06:02,140
will then change go hey I'm not a dumb

142
00:06:00,460 --> 00:06:06,520
internet facing IP address I'm actually

143
00:06:02,140 --> 00:06:08,260
one of your internal web servers so at

144
00:06:06,520 --> 00:06:11,109
that point approximately one to two

145
00:06:08,260 --> 00:06:13,450
minutes the browser starts with a some

146
00:06:11,110 --> 00:06:15,730
content from evil comm at your internal

147
00:06:13,450 --> 00:06:17,770
server IP abyss so instead of pointing

148
00:06:15,730 --> 00:06:19,260
to the Internet it's pointing to some

149
00:06:17,770 --> 00:06:23,049
internal web servers that you're running

150
00:06:19,260 --> 00:06:24,340
utorrent world Warcraft whatever and at

151
00:06:23,050 --> 00:06:26,500
that point you're essentially running

152
00:06:24,340 --> 00:06:28,630
JavaScript on their website so you can

153
00:06:26,500 --> 00:06:30,280
access the internal IP address without

154
00:06:28,630 --> 00:06:32,280
any of the pesky same origin policies

155
00:06:30,280 --> 00:06:34,690
that are get painful to bypass and

156
00:06:32,280 --> 00:06:35,919
you're basically bypassing the firewall

157
00:06:34,690 --> 00:06:37,390
at that point because you're leveraging

158
00:06:35,920 --> 00:06:39,960
someone else's machine just by visiting

159
00:06:37,390 --> 00:06:39,960
your website

160
00:06:43,050 --> 00:06:49,210
okay so rebinding tools I think there's

161
00:06:46,540 --> 00:06:50,650
a couple of NCC guys here but they've

162
00:06:49,210 --> 00:06:52,479
got a tool called singularity that's

163
00:06:50,650 --> 00:06:54,700
really good it's very complete I think

164
00:06:52,480 --> 00:06:55,270
it's got a GUI it's good set up really

165
00:06:54,700 --> 00:06:58,360
good tool

166
00:06:55,270 --> 00:07:00,539
there's DNS rebinding by Lorenzo

167
00:06:58,360 --> 00:07:04,170
my personal favorite though is Travis's

168
00:07:00,540 --> 00:07:08,260
rebind all not sure how you say that

169
00:07:04,170 --> 00:07:09,670
have a sorry it's it's my favorite

170
00:07:08,260 --> 00:07:12,880
anyway because it's very very simple

171
00:07:09,670 --> 00:07:14,860
it's highly flexible and it basically

172
00:07:12,880 --> 00:07:17,740
just does a DNS part of it so you can

173
00:07:14,860 --> 00:07:19,630
write your own JavaScript and of course

174
00:07:17,740 --> 00:07:21,760
there's MW arse DNS rebinding

175
00:07:19,630 --> 00:07:23,140
exploitation framework which is very

176
00:07:21,760 --> 00:07:28,870
good if you're actually building a full

177
00:07:23,140 --> 00:07:32,110
attack instead of just testing it okay

178
00:07:28,870 --> 00:07:36,310
so case study I started looking to this

179
00:07:32,110 --> 00:07:37,810
a while ago after Tavis put in his World

180
00:07:36,310 --> 00:07:39,610
of Warcraft exploit I believe when that

181
00:07:37,810 --> 00:07:41,980
can available I started looking at it a

182
00:07:39,610 --> 00:07:43,690
little bit but I wanted to target things

183
00:07:41,980 --> 00:07:45,790
I had running in my house and for those

184
00:07:43,690 --> 00:07:48,310
of you that know me I'm big into home

185
00:07:45,790 --> 00:07:51,670
automation I'm pretty lazy so I like to

186
00:07:48,310 --> 00:07:52,960
have things just turn on for me surround

187
00:07:51,670 --> 00:07:54,760
there's an IOT a pretty commonly

188
00:07:52,960 --> 00:07:56,380
targeted but I want to focus on software

189
00:07:54,760 --> 00:07:58,539
in particular so I looked at home

190
00:07:56,380 --> 00:08:00,100
automation the controls the IOT I figure

191
00:07:58,540 --> 00:08:02,590
instead of trying to pop by you know

192
00:08:00,100 --> 00:08:05,890
webcam or a smart lock or anything like

193
00:08:02,590 --> 00:08:09,219
that why not pop them all in one go

194
00:08:05,890 --> 00:08:11,020
so I as a job as my job as a pen tester

195
00:08:09,220 --> 00:08:13,090
and red teaming I kind of like to break

196
00:08:11,020 --> 00:08:15,099
things both virtually and physically so

197
00:08:13,090 --> 00:08:16,719
smart homes are great for me because I

198
00:08:15,100 --> 00:08:19,990
can hack into it virtually and unlock

199
00:08:16,720 --> 00:08:22,300
the doors so this particular software

200
00:08:19,990 --> 00:08:24,070
has over 30,000 active forum users but

201
00:08:22,300 --> 00:08:26,560
many many more people have installed I

202
00:08:24,070 --> 00:08:28,780
couldn't actually find exact numbers and

203
00:08:26,560 --> 00:08:30,130
this particular software it has no

204
00:08:28,780 --> 00:08:32,110
authentification over the local network

205
00:08:30,130 --> 00:08:34,210
sorry that makes it really fun to

206
00:08:32,110 --> 00:08:37,180
exploit stop being a coward and tell us

207
00:08:34,210 --> 00:08:39,300
who it is so I'll get to that in a

208
00:08:37,179 --> 00:08:39,299
minute

209
00:08:39,870 --> 00:08:43,599
another really handy one about this

210
00:08:42,250 --> 00:08:45,250
particular home automation software is

211
00:08:43,599 --> 00:08:46,570
it has a really nice little module that

212
00:08:45,250 --> 00:08:49,450
you can install the lets you run shell

213
00:08:46,570 --> 00:08:51,130
commands so you can use these just pop a

214
00:08:49,450 --> 00:08:53,560
shell but that's no fun I want to do

215
00:08:51,130 --> 00:08:56,680
something bit different so to answer

216
00:08:53,560 --> 00:08:59,560
your question the developer was notified

217
00:08:56,680 --> 00:09:02,189
on the 2nd of February 2018 it still

218
00:08:59,560 --> 00:09:05,229
exists in the bleeding-edge branch today

219
00:09:02,190 --> 00:09:08,860
so I'm not gonna release the code you'll

220
00:09:05,230 --> 00:09:10,240
probably be off to well you actually see

221
00:09:08,860 --> 00:09:11,560
in the video if you download my slides

222
00:09:10,240 --> 00:09:13,060
you can actually go and see the code

223
00:09:11,560 --> 00:09:19,779
yeah but I mean if you told them a year

224
00:09:13,060 --> 00:09:21,790
ago come on yeah you will have all the

225
00:09:19,779 --> 00:09:23,410
tools to do it so it doesn't take a lot

226
00:09:21,790 --> 00:09:29,519
I'm pretty sure with half an hour you

227
00:09:23,410 --> 00:09:31,870
could probably rewrite this okay so

228
00:09:29,519 --> 00:09:33,130
since I don't trust the demo gods to be

229
00:09:31,870 --> 00:09:35,019
lenient on me because it's my first

230
00:09:33,130 --> 00:09:38,380
conference talk I've pre-recorded this

231
00:09:35,019 --> 00:09:40,600
demo mostly so that internet doesn't

232
00:09:38,380 --> 00:09:42,850
crash halfway through and also so I can

233
00:09:40,600 --> 00:09:44,320
talk you through it the exploit will let

234
00:09:42,850 --> 00:09:45,010
you send a malicious link to anyone on

235
00:09:44,320 --> 00:09:46,990
the network

236
00:09:45,010 --> 00:09:48,970
I'll sorry anyone on the internet which

237
00:09:46,990 --> 00:09:51,160
is running a this particular home

238
00:09:48,970 --> 00:09:52,540
automation software and it will retrieve

239
00:09:51,160 --> 00:09:54,459
their address send it back to the

240
00:09:52,540 --> 00:09:56,980
attacker and unlock any doors they have

241
00:09:54,459 --> 00:09:59,018
set up to the system this particular

242
00:09:56,980 --> 00:10:00,910
home automation software has a few perks

243
00:09:59,019 --> 00:10:02,589
which make you great like I said for its

244
00:10:00,910 --> 00:10:03,760
unauthenticated over the local network

245
00:10:02,589 --> 00:10:06,610
so we don't have to worry about any

246
00:10:03,760 --> 00:10:07,870
pesky identification and you can control

247
00:10:06,610 --> 00:10:11,410
almost everything in your smart home

248
00:10:07,870 --> 00:10:13,750
through API requests so I'm going to

249
00:10:11,410 --> 00:10:15,339
spin up a DNS server which changes

250
00:10:13,750 --> 00:10:18,550
between an intern and IP address and a

251
00:10:15,339 --> 00:10:20,500
LAN IP address then we'll deliver some

252
00:10:18,550 --> 00:10:22,810
JavaScript code and pull the hostname

253
00:10:20,500 --> 00:10:24,430
until the IP address changes and then it

254
00:10:22,810 --> 00:10:27,279
will start making API calls to the REST

255
00:10:24,430 --> 00:10:29,349
API and start looking for doors that are

256
00:10:27,279 --> 00:10:31,480
available send a request to unlock them

257
00:10:29,350 --> 00:10:34,209
and then grab the location send it back

258
00:10:31,480 --> 00:10:36,250
to me I do not advise using this to

259
00:10:34,209 --> 00:10:37,779
actually break into anyone's house which

260
00:10:36,250 --> 00:10:40,180
is the other reason why I'm not

261
00:10:37,779 --> 00:10:41,680
releasing everything it's merely a case

262
00:10:40,180 --> 00:10:44,279
study to show the potential impact of

263
00:10:41,680 --> 00:10:44,279
this issue

264
00:10:46,330 --> 00:10:52,250
okay so a few code snippets I'll try and

265
00:10:49,730 --> 00:10:53,930
keep it fairly brief to give it everyone

266
00:10:52,250 --> 00:10:56,570
some insight to the code there's two

267
00:10:53,930 --> 00:10:58,130
main parts to it the code is all jammed

268
00:10:56,570 --> 00:11:00,710
into a single Python script so it's

269
00:10:58,130 --> 00:11:03,680
fairly easy to use this part here in

270
00:11:00,710 --> 00:11:07,280
particular is a DNS response so it's for

271
00:11:03,680 --> 00:11:10,250
those has no DNS this is just a a record

272
00:11:07,280 --> 00:11:11,540
for a DNS being returned I didn't

273
00:11:10,250 --> 00:11:14,120
actually pull apart all the packets so

274
00:11:11,540 --> 00:11:16,160
pretty much just copied it in and yet

275
00:11:14,120 --> 00:11:17,540
the top part where it says if payload

276
00:11:16,160 --> 00:11:19,939
equals false is where it actually

277
00:11:17,540 --> 00:11:21,800
changes between the two IP addresses so

278
00:11:19,940 --> 00:11:23,630
as soon as I hit the website and get the

279
00:11:21,800 --> 00:11:27,339
payload code the DNS server will then

280
00:11:23,630 --> 00:11:27,340
change to point to the other IP address

281
00:11:27,940 --> 00:11:32,390
okay and the second part is probably the

282
00:11:30,440 --> 00:11:35,150
main part about DNS rebinding it's it's

283
00:11:32,390 --> 00:11:37,189
a JavaScript function so I don't know if

284
00:11:35,150 --> 00:11:39,380
you've got many web developers here but

285
00:11:37,190 --> 00:11:41,780
the bottom bottom line here the set

286
00:11:39,380 --> 00:11:44,180
interval function calls Apollo so every

287
00:11:41,780 --> 00:11:46,880
3 seconds it'll try requesting the same

288
00:11:44,180 --> 00:11:49,400
URL over and over and over again your

289
00:11:46,880 --> 00:11:51,830
attack server won't have this URL setup

290
00:11:49,400 --> 00:11:55,329
on it so it'll get a 404 error and when

291
00:11:51,830 --> 00:11:57,710
eventually it hits the internal website

292
00:11:55,330 --> 00:11:59,840
idle return a 200 standard response

293
00:11:57,710 --> 00:12:01,040
successful HTML and that's where you'll

294
00:11:59,840 --> 00:12:04,810
launch your attack and do your

295
00:12:01,040 --> 00:12:04,810
exfiltration and those kind of things

296
00:12:05,350 --> 00:12:12,230
there we go okay so I know the text is a

297
00:12:09,560 --> 00:12:13,760
little bit small to see here but

298
00:12:12,230 --> 00:12:16,430
essentially this window here is your

299
00:12:13,760 --> 00:12:17,770
attack server and all the client side

300
00:12:16,430 --> 00:12:22,550
attack will happen on the same machine

301
00:12:17,770 --> 00:12:24,829
so this is showing that it is actually

302
00:12:22,550 --> 00:12:28,430
an internet based IP address and it's

303
00:12:24,830 --> 00:12:32,660
running on secure webmail or XYZ a nice

304
00:12:28,430 --> 00:12:34,310
non suspect domain name and this is the

305
00:12:32,660 --> 00:12:35,480
code so like I said if you do want the

306
00:12:34,310 --> 00:12:36,859
source code you can go through this

307
00:12:35,480 --> 00:12:40,460
video and retype it all that if you

308
00:12:36,860 --> 00:12:41,900
really want but I haven't actually

309
00:12:40,460 --> 00:12:46,120
stolen it from anywhere I wrote this all

310
00:12:41,900 --> 00:12:46,120
myself so it shows a bit of that

311
00:12:47,510 --> 00:12:52,650
so yeah this script is designed so you

312
00:12:50,550 --> 00:12:55,260
can reuse it on multiple different

313
00:12:52,650 --> 00:12:56,819
people so you passed the port that you

314
00:12:55,260 --> 00:12:59,340
want to attack because obviously it's

315
00:12:56,820 --> 00:13:00,660
not always gonna be port 80 or 443 the

316
00:12:59,340 --> 00:13:04,410
domain that you want to use to actually

317
00:13:00,660 --> 00:13:06,719
rebuy it with and your internet facing

318
00:13:04,410 --> 00:13:09,510
IP address as well as the target IP

319
00:13:06,720 --> 00:13:11,850
address there are some cool ways that

320
00:13:09,510 --> 00:13:13,950
you can use WebSockets and subdomains to

321
00:13:11,850 --> 00:13:17,040
actually go through the entire subnet

322
00:13:13,950 --> 00:13:18,480
and find out where the sofa is I tried

323
00:13:17,040 --> 00:13:19,920
to keep this relatively simple I was

324
00:13:18,480 --> 00:13:21,840
going to ask about that it's like how do

325
00:13:19,920 --> 00:13:23,160
you know what internal range someone is

326
00:13:21,840 --> 00:13:24,690
using do you just cycle through every

327
00:13:23,160 --> 00:13:26,550
single reserved range until you hit

328
00:13:24,690 --> 00:13:29,610
something or I believe if you look at

329
00:13:26,550 --> 00:13:31,260
beef there are ways you can pull down a

330
00:13:29,610 --> 00:13:33,720
and local IP address and then just go

331
00:13:31,260 --> 00:13:35,189
through that subnet which I've done but

332
00:13:33,720 --> 00:13:38,340
it's a little bit more complicated I

333
00:13:35,190 --> 00:13:39,900
want to keep this particularly simple so

334
00:13:38,340 --> 00:13:42,630
on the right hand side is the smart home

335
00:13:39,900 --> 00:13:44,220
so as you can see everything should now

336
00:13:42,630 --> 00:13:46,170
be closed there's a front door in a

337
00:13:44,220 --> 00:13:48,300
garage door as well as a light all of

338
00:13:46,170 --> 00:13:51,030
those have been closed before you run

339
00:13:48,300 --> 00:13:58,020
the test and then you send this nice

340
00:13:51,030 --> 00:14:01,319
little fishing domain to someone and

341
00:13:58,020 --> 00:14:02,640
since it takes about a minute on Firefox

342
00:14:01,320 --> 00:14:06,120
but it can take up to about two minutes

343
00:14:02,640 --> 00:14:08,160
to actually fully work include a nice

344
00:14:06,120 --> 00:14:12,630
cat video because who doesn't love a cat

345
00:14:08,160 --> 00:14:15,870
video and I do apologize you probably

346
00:14:12,630 --> 00:14:17,220
can't see that text too well but on the

347
00:14:15,870 --> 00:14:19,500
bottom in the network Explorer you'll

348
00:14:17,220 --> 00:14:21,600
see the same config domain being caught

349
00:14:19,500 --> 00:14:25,290
sorry configure L being caught over and

350
00:14:21,600 --> 00:14:30,810
over again say Eclipse start home sorry

351
00:14:25,290 --> 00:14:33,089
eclipse started ah that's the framework

352
00:14:30,810 --> 00:14:36,060
that it was built on so that gives you a

353
00:14:33,090 --> 00:14:37,920
good hint but yeah you can see in the

354
00:14:36,060 --> 00:14:40,589
request headers that it's calling a

355
00:14:37,920 --> 00:14:42,120
Python server currently so it'll keep

356
00:14:40,590 --> 00:14:45,390
holding that over and over again and

357
00:14:42,120 --> 00:14:48,780
after precisely a minute in both Firefox

358
00:14:45,390 --> 00:14:50,939
and Chrome the DNS lease will actually

359
00:14:48,780 --> 00:14:56,839
release and then it will bind to the new

360
00:14:50,940 --> 00:14:56,840
internal IP address in about 10 seconds

361
00:14:56,930 --> 00:15:00,630
so it's a little bit of a slow attack

362
00:14:59,010 --> 00:15:03,779
that there are actually ways to speed it

363
00:15:00,630 --> 00:15:05,880
up but um it gets a little bit more

364
00:15:03,779 --> 00:15:07,170
complex again and frankly it's pretty

365
00:15:05,880 --> 00:15:10,070
easy to keep someone on the website for

366
00:15:07,170 --> 00:15:12,540
one minute anyway with a nice cat video

367
00:15:10,070 --> 00:15:14,519
so there you go it's it's reported to

368
00:15:12,540 --> 00:15:16,410
the internal server you can see the

369
00:15:14,519 --> 00:15:19,410
server headers actually calling a jetty

370
00:15:16,410 --> 00:15:20,969
version 9 web server which is the Java

371
00:15:19,410 --> 00:15:24,630
library this particular application

372
00:15:20,970 --> 00:15:27,329
users that was just the GPS coordinates

373
00:15:24,630 --> 00:15:30,029
of this particular smart home which we

374
00:15:27,329 --> 00:15:31,859
will exfiltrate in a minute and here is

375
00:15:30,029 --> 00:15:34,050
where it's actually going through a REST

376
00:15:31,860 --> 00:15:36,540
API call that pulls down all the objects

377
00:15:34,050 --> 00:15:37,889
that are in the smart home and it'll

378
00:15:36,540 --> 00:15:40,380
iterate through each of one of those

379
00:15:37,889 --> 00:15:43,170
that includes the word door and will

380
00:15:40,380 --> 00:15:45,839
send a post request that says turn this

381
00:15:43,170 --> 00:15:48,990
on which in smart home tones basically

382
00:15:45,839 --> 00:15:50,430
means open that door so there we go on

383
00:15:48,990 --> 00:15:52,740
the right-hand side you'll see front

384
00:15:50,430 --> 00:15:57,089
door is opened and garage door is opened

385
00:15:52,740 --> 00:15:59,100
and that all happened in less than a

386
00:15:57,089 --> 00:16:02,550
second I think all those three requests

387
00:15:59,100 --> 00:16:04,410
happened and then the very last request

388
00:16:02,550 --> 00:16:07,649
down the bottom it's a call back to the

389
00:16:04,410 --> 00:16:09,089
original tacking server that base64 is

390
00:16:07,649 --> 00:16:11,279
all the data that I want to pull out of

391
00:16:09,089 --> 00:16:14,610
that system which is primarily the what

392
00:16:11,279 --> 00:16:16,529
was opened and where the house is

393
00:16:14,610 --> 00:16:19,079
actually located so it pulls all that

394
00:16:16,529 --> 00:16:20,760
out DNR sends it back to my attack

395
00:16:19,079 --> 00:16:23,160
server so you can see in this particular

396
00:16:20,760 --> 00:16:26,279
case 71 Eagle Street which is actually

397
00:16:23,160 --> 00:16:30,079
our offices it's got the garage door in

398
00:16:26,279 --> 00:16:30,079
front look front door now unlocked

399
00:16:30,730 --> 00:16:40,660
I guess the nice thing is because the

400
00:16:38,610 --> 00:16:43,450
target needs to actually be on their

401
00:16:40,660 --> 00:16:44,949
home network you know when you're

402
00:16:43,450 --> 00:16:47,710
opening up their garage door they're

403
00:16:44,950 --> 00:16:51,460
actually there yeah well I mean I tried

404
00:16:47,710 --> 00:16:53,710
to keep this as a fairly simple you know

405
00:16:51,460 --> 00:16:58,480
cute cute cat pictures click garage door

406
00:16:53,710 --> 00:17:00,790
open so yes so bear in mind this is also

407
00:16:58,480 --> 00:17:02,470
a smart home software that lets you run

408
00:17:00,790 --> 00:17:04,240
shell scripts right so I could just

409
00:17:02,470 --> 00:17:05,949
upload a simple bash script that says

410
00:17:04,240 --> 00:17:07,270
wait until there's no motion in the

411
00:17:05,949 --> 00:17:08,740
house and then you know go and unlock

412
00:17:07,270 --> 00:17:12,819
the doors and shoot me an email to let

413
00:17:08,740 --> 00:17:14,560
me know they're all unlock nice did the

414
00:17:12,819 --> 00:17:16,540
original version had on this to actually

415
00:17:14,560 --> 00:17:18,010
pull it up Google Maps and then it put

416
00:17:16,540 --> 00:17:20,319
down the location of the smart home

417
00:17:18,010 --> 00:17:23,949
where you were figures out are out there

418
00:17:20,319 --> 00:17:26,290
and they're numb yeah

419
00:17:23,949 --> 00:17:28,140
comes back it also suggested Bunnings on

420
00:17:26,290 --> 00:17:30,159
the way where you could buy a crowbar

421
00:17:28,140 --> 00:17:32,020
maybe that's a feature you want to

422
00:17:30,160 --> 00:17:34,390
include we might need to talk more about

423
00:17:32,020 --> 00:17:35,920
that one but um no I would work out that

424
00:17:34,390 --> 00:17:37,300
it's about half an hour away and then it

425
00:17:35,920 --> 00:17:39,010
would actually set the timer to pop the

426
00:17:37,300 --> 00:17:41,399
doors open when you get there that's

427
00:17:39,010 --> 00:17:41,400
pretty sweet

428
00:17:47,750 --> 00:17:53,429
okay so what's underlying problems here

429
00:17:50,519 --> 00:17:55,259
so to me the biggest issue here and it's

430
00:17:53,429 --> 00:17:58,529
it's debatable but the biggest issue is

431
00:17:55,259 --> 00:18:00,299
it uses jetty which by itself isn't an

432
00:17:58,529 --> 00:18:02,610
issue I guess but um it's a commonly

433
00:18:00,299 --> 00:18:05,370
used java library so it's used in tons

434
00:18:02,610 --> 00:18:07,620
of different it's a software google

435
00:18:05,370 --> 00:18:09,389
shows pretty much no results for jetty

436
00:18:07,620 --> 00:18:10,500
and DNS rebinding so I don't think

437
00:18:09,389 --> 00:18:13,678
anyone has actually looked at this

438
00:18:10,500 --> 00:18:15,330
before and while Jenny actually has the

439
00:18:13,679 --> 00:18:16,919
functionality to pull down a host header

440
00:18:15,330 --> 00:18:19,649
which is what you need to defend against

441
00:18:16,919 --> 00:18:21,600
this attack I guess for a bit of

442
00:18:19,649 --> 00:18:23,070
clarification so what they should have

443
00:18:21,600 --> 00:18:25,620
been doing is checking that the host

444
00:18:23,070 --> 00:18:27,450
header is a ballot host because that

445
00:18:25,620 --> 00:18:29,219
those Haiti CDP requests that I sent to

446
00:18:27,450 --> 00:18:32,009
their survey would have said the host is

447
00:18:29,220 --> 00:18:33,779
malicious domain com so if they had

448
00:18:32,009 --> 00:18:35,490
validated that and denied access it

449
00:18:33,779 --> 00:18:37,529
wouldn't be a problem at all I wouldn't

450
00:18:35,490 --> 00:18:39,690
be able to do it of course the better

451
00:18:37,529 --> 00:18:42,509
solution here would probably be to add

452
00:18:39,690 --> 00:18:47,789
some protections into the underlying

453
00:18:42,509 --> 00:18:49,679
library so after I got to this point I

454
00:18:47,789 --> 00:18:51,419
thought you know well that's interesting

455
00:18:49,679 --> 00:18:53,340
so jetty actually doesn't have any

456
00:18:51,419 --> 00:18:56,460
protections by default built into it

457
00:18:53,340 --> 00:18:59,549
right so what else runs jetty so I go to

458
00:18:56,460 --> 00:19:02,009
their website and I find they're powered

459
00:18:59,549 --> 00:19:05,059
by jetty page there's quite a lot of

460
00:19:02,009 --> 00:19:05,059
things powered by jetty

461
00:19:06,049 --> 00:19:11,879
so all these products have a high

462
00:19:09,870 --> 00:19:14,250
probability I guess of being vulnerable

463
00:19:11,879 --> 00:19:15,539
to varying degrees however I haven't

464
00:19:14,250 --> 00:19:18,419
confirmed them all so I'm not saying all

465
00:19:15,539 --> 00:19:19,710
these people are vulnerable the home

466
00:19:18,419 --> 00:19:20,820
automation demo was particularly

467
00:19:19,710 --> 00:19:23,129
worrying because of the lack of

468
00:19:20,820 --> 00:19:24,750
authentification so if you're looking

469
00:19:23,129 --> 00:19:26,600
for some exploits you know go through

470
00:19:24,750 --> 00:19:30,720
this list and find ones that don't have

471
00:19:26,600 --> 00:19:32,070
local network and authentification could

472
00:19:30,720 --> 00:19:34,279
you write a Java Script brute force and

473
00:19:32,070 --> 00:19:38,189
I'm in it to be slow but yeah

474
00:19:34,279 --> 00:19:40,139
theoretically there are many more in

475
00:19:38,190 --> 00:19:43,470
this list I couldn't fit them all onto

476
00:19:40,139 --> 00:19:45,209
one slide unfortunately I tested I think

477
00:19:43,470 --> 00:19:46,710
there was something like 2 or 500 on

478
00:19:45,210 --> 00:19:49,110
their list alone let alone the other

479
00:19:46,710 --> 00:19:50,610
ones out there I ended up going through

480
00:19:49,110 --> 00:19:52,258
about 10 to 15 of these software

481
00:19:50,610 --> 00:19:54,809
packages from list every single one of

482
00:19:52,259 --> 00:19:56,880
them was vulnerable which doesn't bode

483
00:19:54,809 --> 00:19:59,100
well for the rest

484
00:19:56,880 --> 00:20:00,630
but in most of the cases you need to

485
00:19:59,100 --> 00:20:03,929
actually log in somewhere usually for

486
00:20:00,630 --> 00:20:05,940
the REST API endpoint so I know a lot of

487
00:20:03,930 --> 00:20:07,440
attackers in this room you know in this

488
00:20:05,940 --> 00:20:08,880
case you're just going to go and find a

489
00:20:07,440 --> 00:20:10,170
nice data breach

490
00:20:08,880 --> 00:20:12,870
grab some creds from there and then

491
00:20:10,170 --> 00:20:14,190
build it into your DNS rebinding so even

492
00:20:12,870 --> 00:20:15,719
though you have an authentication it's

493
00:20:14,190 --> 00:20:17,070
not really a fix for the problem and

494
00:20:15,720 --> 00:20:18,750
this is why you know people should

495
00:20:17,070 --> 00:20:20,639
change their default creds on internal

496
00:20:18,750 --> 00:20:23,850
stuff which they often do because well

497
00:20:20,640 --> 00:20:25,160
preferably two-factor a little bit yeah

498
00:20:23,850 --> 00:20:28,379
anything you can do

499
00:20:25,160 --> 00:20:30,180
so DNS rebinding issues present in tons

500
00:20:28,380 --> 00:20:32,670
of web server libraries I'm just using

501
00:20:30,180 --> 00:20:37,830
this as one example but most ones I

502
00:20:32,670 --> 00:20:40,920
looked at had similar issues so the

503
00:20:37,830 --> 00:20:42,750
problem software libraries aren't

504
00:20:40,920 --> 00:20:44,370
including methods to easily validate

505
00:20:42,750 --> 00:20:46,440
this header there there is no reason

506
00:20:44,370 --> 00:20:47,909
they couldn't put in methods to force

507
00:20:46,440 --> 00:20:49,530
you to actually validate the host header

508
00:20:47,910 --> 00:20:51,780
I think they're a little bit reluctant

509
00:20:49,530 --> 00:20:54,360
to and sort of relying on developers to

510
00:20:51,780 --> 00:20:56,670
fix this issue but since this issue

511
00:20:54,360 --> 00:20:57,870
isn't a cookie cutter exploit so it's

512
00:20:56,670 --> 00:20:59,040
not an SQL injection it's not a

513
00:20:57,870 --> 00:20:59,639
cross-site scripting it's a little bit

514
00:20:59,040 --> 00:21:02,760
more

515
00:20:59,640 --> 00:21:03,810
less Knar on me I guess developers seem

516
00:21:02,760 --> 00:21:06,000
to have a really hard time understanding

517
00:21:03,810 --> 00:21:09,419
the problem testing the problem and

518
00:21:06,000 --> 00:21:11,010
fixing the issue penetration testers

519
00:21:09,420 --> 00:21:12,600
from the most part from what I've seen

520
00:21:11,010 --> 00:21:14,250
they're not really checking these issues

521
00:21:12,600 --> 00:21:15,659
and I know there are some that do and

522
00:21:14,250 --> 00:21:17,910
good work to those people but I think

523
00:21:15,660 --> 00:21:20,880
pen testers as a whole need to test for

524
00:21:17,910 --> 00:21:22,320
it a bit more and DNS servers aren't

525
00:21:20,880 --> 00:21:24,600
checking through binding attacks which

526
00:21:22,320 --> 00:21:26,220
really surprised me they pretty much

527
00:21:24,600 --> 00:21:29,240
allow whatever DNS record you want to

528
00:21:26,220 --> 00:21:31,560
chuck in they just forward it on happily

529
00:21:29,240 --> 00:21:33,510
web browsers could also solve this issue

530
00:21:31,560 --> 00:21:35,550
it won't really help with the backwards

531
00:21:33,510 --> 00:21:38,400
compatibility but it would introduce

532
00:21:35,550 --> 00:21:40,440
some other issues so basically you need

533
00:21:38,400 --> 00:21:45,540
a bit of a multi-layered approach to fix

534
00:21:40,440 --> 00:21:47,850
it so after I exploited a bunch of

535
00:21:45,540 --> 00:21:50,190
software I start talking to developers

536
00:21:47,850 --> 00:21:52,919
I attempted to get them to fix the

537
00:21:50,190 --> 00:21:54,510
problems since since it isn't cookie

538
00:21:52,920 --> 00:21:56,850
Carter you know it was really hard to

539
00:21:54,510 --> 00:21:58,020
get them to understand it I think there

540
00:21:56,850 --> 00:21:59,760
was one there I had about four months

541
00:21:58,020 --> 00:22:02,400
trying to get them to understand the

542
00:21:59,760 --> 00:22:04,020
issue and still couldn't but I

543
00:22:02,400 --> 00:22:06,150
completely understand right when I first

544
00:22:04,020 --> 00:22:07,230
started looking at this research bit

545
00:22:06,150 --> 00:22:09,720
over a year ago

546
00:22:07,230 --> 00:22:11,130
I'm like seriously I can just change the

547
00:22:09,720 --> 00:22:12,539
DNS record and point it to something

548
00:22:11,130 --> 00:22:14,340
else and then run whatever I want on it

549
00:22:12,539 --> 00:22:20,970
like that can't really work on it well

550
00:22:14,340 --> 00:22:23,129
turns out it actually can okay so this

551
00:22:20,970 --> 00:22:25,470
particular demo I got in contact with

552
00:22:23,130 --> 00:22:27,510
them he wrote back I have tried to find

553
00:22:25,470 --> 00:22:29,669
any generic ways to activate or

554
00:22:27,510 --> 00:22:32,879
configure such a prevention but failed

555
00:22:29,669 --> 00:22:34,350
to find any information about that like

556
00:22:32,880 --> 00:22:35,850
I said it was reported well over a year

557
00:22:34,350 --> 00:22:38,158
ago it's still present in their

558
00:22:35,850 --> 00:22:39,750
bleeding-edge branch because they are

559
00:22:38,159 --> 00:22:44,159
not releasing my code however you can go

560
00:22:39,750 --> 00:22:46,440
through the video I also haven't

561
00:22:44,159 --> 00:22:47,970
included the name in any of these slides

562
00:22:46,440 --> 00:22:48,929
because I don't really want people going

563
00:22:47,970 --> 00:22:53,760
out there and breaking into people's

564
00:22:48,929 --> 00:22:55,470
houses but pretty easier to figure out I

565
00:22:53,760 --> 00:23:00,710
think Pat already clicked on to at least

566
00:22:55,470 --> 00:23:03,179
part of it so the next one I looked at

567
00:23:00,710 --> 00:23:05,340
this this is a developer that I

568
00:23:03,179 --> 00:23:08,039
guarantee a vast majority of the people

569
00:23:05,340 --> 00:23:09,269
in this room using their software so

570
00:23:08,039 --> 00:23:11,789
this is the one actually spent four

571
00:23:09,269 --> 00:23:15,360
months providing screenshots multiple

572
00:23:11,789 --> 00:23:18,990
pocs videos detailed explanations went

573
00:23:15,360 --> 00:23:20,428
on and on and on and on and at the end

574
00:23:18,990 --> 00:23:22,080
of the day they said from our testing it

575
00:23:20,429 --> 00:23:24,510
appears this vulnerability impacts

576
00:23:22,080 --> 00:23:26,939
versions who are running across HTTP on

577
00:23:24,510 --> 00:23:30,090
their local network if a server instance

578
00:23:26,940 --> 00:23:33,929
has enabled HTTPS then this attack is

579
00:23:30,090 --> 00:23:36,779
not possible to perform that's not

580
00:23:33,929 --> 00:23:39,330
really the case so I think they

581
00:23:36,779 --> 00:23:41,070
misunderstood even I saw I even sent

582
00:23:39,330 --> 00:23:43,260
them a proof of concept and video of me

583
00:23:41,070 --> 00:23:46,529
showing them that it does work over SSL

584
00:23:43,260 --> 00:23:48,690
but yeah apparently they didn't really

585
00:23:46,529 --> 00:23:52,200
get that so their solution to this and I

586
00:23:48,690 --> 00:23:54,820
got a whopping 100 dollars to this PRT

587
00:23:52,200 --> 00:23:55,930
so they closed the issue and they

588
00:23:54,820 --> 00:23:58,689
decided to add a line into the

589
00:23:55,930 --> 00:24:01,170
documentation saying users should enable

590
00:23:58,690 --> 00:24:03,910
HTTPS and closed it

591
00:24:01,170 --> 00:24:05,010
so yeah HTTPS has nothing to do with

592
00:24:03,910 --> 00:24:09,480
this

593
00:24:05,010 --> 00:24:09,480
yeah that's not a good thing

594
00:24:09,900 --> 00:24:17,650
okay so protections it's pretty dismal

595
00:24:13,870 --> 00:24:18,850
really DNS masquerade can detect some

596
00:24:17,650 --> 00:24:20,620
rebinding attacks so if you're using

597
00:24:18,850 --> 00:24:22,810
that check out some of the options for

598
00:24:20,620 --> 00:24:24,969
that pfSense actually has some pretty

599
00:24:22,810 --> 00:24:27,220
good stuff I believe a while ago someone

600
00:24:24,970 --> 00:24:29,590
reported DNS rebinding in PF census

601
00:24:27,220 --> 00:24:30,850
where they had been interface itself so

602
00:24:29,590 --> 00:24:34,570
when that happened actually put in some

603
00:24:30,850 --> 00:24:36,370
protections or their DNS stuff awesome

604
00:24:34,570 --> 00:24:38,350
firewall rules can really help you know

605
00:24:36,370 --> 00:24:39,939
if people can't access say smart home

606
00:24:38,350 --> 00:24:43,179
controllers when they shouldn't be able

607
00:24:39,940 --> 00:24:45,490
to it kind of limits the ability to do

608
00:24:43,180 --> 00:24:47,530
this attack you can of course install

609
00:24:45,490 --> 00:24:49,120
the no script plug-in but then you're

610
00:24:47,530 --> 00:24:50,800
surfing the internet without scripts you

611
00:24:49,120 --> 00:24:54,010
know that's not terribly practical as

612
00:24:50,800 --> 00:24:56,080
well I've heard DNS watch does have some

613
00:24:54,010 --> 00:24:57,850
protections in it I've yet to be able to

614
00:24:56,080 --> 00:25:00,310
actually get through that see how well

615
00:24:57,850 --> 00:25:01,899
it works but ultimately this isn't a

616
00:25:00,310 --> 00:25:04,110
single fixed solution the problem has to

617
00:25:01,900 --> 00:25:07,930
be fixed on multiple layers so the DNS

618
00:25:04,110 --> 00:25:12,100
web browsers libraries and individual

619
00:25:07,930 --> 00:25:13,810
code bases so the next thing I did was I

620
00:25:12,100 --> 00:25:16,510
wanted to look at the actual DNS servers

621
00:25:13,810 --> 00:25:19,960
and see you know does anything out there

622
00:25:16,510 --> 00:25:22,660
actually protect against it it turns out

623
00:25:19,960 --> 00:25:24,130
not too much so surprisingly Open DNS

624
00:25:22,660 --> 00:25:27,130
actually did a pretty good job of

625
00:25:24,130 --> 00:25:28,560
blocking my attacks there were ways you

626
00:25:27,130 --> 00:25:31,750
could sort of get around it in certain

627
00:25:28,560 --> 00:25:33,070
situations but ya know most of them just

628
00:25:31,750 --> 00:25:35,440
failed miserably and learned anything

629
00:25:33,070 --> 00:25:37,270
through so a lot of these testers at the

630
00:25:35,440 --> 00:25:40,510
end of last year I assume they're still

631
00:25:37,270 --> 00:25:42,129
the same Google I did test last night so

632
00:25:40,510 --> 00:25:44,370
I know Google still vulnerable to all

633
00:25:42,130 --> 00:25:44,370
this stuff

634
00:25:45,370 --> 00:25:51,489
okay so takeaways I guess the main

635
00:25:49,150 --> 00:25:54,130
takeaway DNS rebinding is still

636
00:25:51,490 --> 00:25:56,170
everywhere so the info step community

637
00:25:54,130 --> 00:25:57,310
needs to you know it's been a bit more

638
00:25:56,170 --> 00:25:59,260
time looking into this issue

639
00:25:57,310 --> 00:26:02,560
particularly in software and not in

640
00:25:59,260 --> 00:26:04,180
routers and IOT stuff more software

641
00:26:02,560 --> 00:26:06,010
needs to be in fluent that at multiple

642
00:26:04,180 --> 00:26:09,040
layers DNS servers web browsers

643
00:26:06,010 --> 00:26:10,240
libraries and so if you're gonna take

644
00:26:09,040 --> 00:26:12,250
anything away if you're a developer

645
00:26:10,240 --> 00:26:13,810
check your software make sure you're

646
00:26:12,250 --> 00:26:15,850
checking and validating the host header

647
00:26:13,810 --> 00:26:18,730
and denying it people if that's not

648
00:26:15,850 --> 00:26:20,830
correct if you're a pen tester check for

649
00:26:18,730 --> 00:26:23,560
this in all the web services that you

650
00:26:20,830 --> 00:26:25,030
audit and lastly if you're a red teamer

651
00:26:23,560 --> 00:26:27,250
it's a really great fire we'll bypass

652
00:26:25,030 --> 00:26:31,480
for an attack chain particularly when it

653
00:26:27,250 --> 00:26:34,120
comes to DevOps setups I'm so bounty

654
00:26:31,480 --> 00:26:36,460
people are all over this I actually

655
00:26:34,120 --> 00:26:37,959
haven't so I looked at bug bounty

656
00:26:36,460 --> 00:26:39,460
programs and it wasn't actually a

657
00:26:37,960 --> 00:26:41,740
category for any of this it was really

658
00:26:39,460 --> 00:26:45,820
hard to actually choose a category to

659
00:26:41,740 --> 00:26:47,860
get that yeah yeah by itself it's really

660
00:26:45,820 --> 00:26:49,960
not that useful it's only when you find

661
00:26:47,860 --> 00:26:51,790
something else to use it with or if

662
00:26:49,960 --> 00:26:53,760
they're lacking some other protection

663
00:26:51,790 --> 00:26:56,770
somewhere then it becomes really useful

664
00:26:53,760 --> 00:26:59,650
otherwise by itself it's not nothing too

665
00:26:56,770 --> 00:27:00,879
special so thank you for listening I

666
00:26:59,650 --> 00:27:03,250
hope everyone has learnt something from

667
00:27:00,880 --> 00:27:04,450
this talk I hope at least I get a couple

668
00:27:03,250 --> 00:27:05,410
of people here to go out and look for

669
00:27:04,450 --> 00:27:07,600
some of these issues in their

670
00:27:05,410 --> 00:27:09,820
environment and thank you to my current

671
00:27:07,600 --> 00:27:12,100
and my past employers so Telstra and

672
00:27:09,820 --> 00:27:13,270
context they were fine enough to give me

673
00:27:12,100 --> 00:27:15,760
time to research and create this

674
00:27:13,270 --> 00:27:17,230
presentation and I don't know if we've

675
00:27:15,760 --> 00:27:19,360
got question time now but I will be

676
00:27:17,230 --> 00:27:23,430
available afterwards anyway if anyone

677
00:27:19,360 --> 00:27:23,429
does have any questions thanks all right

678
00:27:26,070 --> 00:27:30,700
so I just want to point out to you that

679
00:27:28,240 --> 00:27:32,110
that was Matt's first con talk and I

680
00:27:30,700 --> 00:27:38,950
think you hit it out of the park there

681
00:27:32,110 --> 00:27:40,240
that was really good so I got a question

682
00:27:38,950 --> 00:27:41,650
right like you were talking about how

683
00:27:40,240 --> 00:27:43,720
this needs to be fixed in multiple

684
00:27:41,650 --> 00:27:45,580
places like forget about domain name

685
00:27:43,720 --> 00:27:46,870
service operators like fixing this

686
00:27:45,580 --> 00:27:49,240
because you know it would have to be

687
00:27:46,870 --> 00:27:50,889
quite yeah many many many different

688
00:27:49,240 --> 00:27:52,840
parties would have to fix that forget

689
00:27:50,890 --> 00:27:54,250
about this disappearing on networks as a

690
00:27:52,840 --> 00:27:55,600
viable vector and for people to actually

691
00:27:54,250 --> 00:27:57,460
check things like host headers like

692
00:27:55,600 --> 00:27:58,990
that's not going to happen but then you

693
00:27:57,460 --> 00:28:00,490
mentioned they could fix it in the

694
00:27:58,990 --> 00:28:02,230
browser and and I could see that one

695
00:28:00,490 --> 00:28:04,960
very simple defense to this could be

696
00:28:02,230 --> 00:28:07,180
that you know the browser might detect

697
00:28:04,960 --> 00:28:10,150
when something goes from being you know

698
00:28:07,180 --> 00:28:13,270
unreserved IP you know to all of a

699
00:28:10,150 --> 00:28:15,040
sudden resolving as as a reserved range

700
00:28:13,270 --> 00:28:16,240
like that you would think would be

701
00:28:15,040 --> 00:28:17,770
something that would be pretty easy to

702
00:28:16,240 --> 00:28:19,120
detect and there's only like three or

703
00:28:17,770 --> 00:28:21,190
four organizations that would need to

704
00:28:19,120 --> 00:28:22,810
make that change to fix this I mean

705
00:28:21,190 --> 00:28:23,380
wouldn't that squash this pretty

706
00:28:22,810 --> 00:28:25,810
effectively

707
00:28:23,380 --> 00:28:27,670
um so it would certainly help I mean

708
00:28:25,810 --> 00:28:29,050
it's not gonna resolve the issue at

709
00:28:27,670 --> 00:28:31,090
least straight away because you've got

710
00:28:29,050 --> 00:28:33,550
so many old versions of browsers out

711
00:28:31,090 --> 00:28:35,800
there I know this and companies

712
00:28:33,550 --> 00:28:38,470
government's whatnot that use have

713
00:28:35,800 --> 00:28:40,690
requirements use older browsers but it

714
00:28:38,470 --> 00:28:41,680
yeah it would certainly help yeah you're

715
00:28:40,690 --> 00:28:44,620
always gonna have those edge cases

716
00:28:41,680 --> 00:28:45,880
either way but I mean at the moment it's

717
00:28:44,620 --> 00:28:46,810
not an edge case right and that's the

718
00:28:45,880 --> 00:28:48,280
thing about you think it's really

719
00:28:46,810 --> 00:28:49,960
interesting about the state of DNS

720
00:28:48,280 --> 00:28:51,580
rebinding is it's everywhere what

721
00:28:49,960 --> 00:28:52,870
actually blows my mind is originally

722
00:28:51,580 --> 00:28:54,730
when I started looking at this I tried

723
00:28:52,870 --> 00:28:56,739
Chrome and Firefox and it took about two

724
00:28:54,730 --> 00:28:58,690
minutes to actually run a deep DNS

725
00:28:56,740 --> 00:28:59,950
rebinding attack on those browsers for

726
00:28:58,690 --> 00:29:01,450
some reason over the last year that's

727
00:28:59,950 --> 00:29:03,970
changed and now only takes a minute to

728
00:29:01,450 --> 00:29:06,000
run yeah yeah and I mean you can't do

729
00:29:03,970 --> 00:29:08,800
things like you can grab default creds

730
00:29:06,000 --> 00:29:11,590
for things that you might be likely to

731
00:29:08,800 --> 00:29:13,000
find you know at your target and you

732
00:29:11,590 --> 00:29:15,010
know just cycle through I mean there's a

733
00:29:13,000 --> 00:29:17,560
lot you can do here and it's it is kind

734
00:29:15,010 --> 00:29:19,720
of surprising how you know like

735
00:29:17,560 --> 00:29:23,169
everybody should be doing this yeah I

736
00:29:19,720 --> 00:29:24,370
know from history often times when you

737
00:29:23,170 --> 00:29:26,470
get into an internal network people

738
00:29:24,370 --> 00:29:28,929
pretty laxed with creds so there's often

739
00:29:26,470 --> 00:29:30,730
a lot of admin admin or admin password

740
00:29:28,930 --> 00:29:32,890
type login so pretty sure you can

741
00:29:30,730 --> 00:29:34,480
passwords braid this and getting yeah

742
00:29:32,890 --> 00:29:35,850
shells that way yeah that's it so who's

743
00:29:34,480 --> 00:29:38,900
got questions

744
00:29:35,850 --> 00:29:38,899
don't one down there

745
00:29:42,820 --> 00:29:47,009
[Music]

746
00:29:44,549 --> 00:29:49,649
so to clarify the question is why won't

747
00:29:47,009 --> 00:29:51,599
TLS squash this so to clarify I've

748
00:29:49,649 --> 00:29:53,639
actually only tested it on running a

749
00:29:51,599 --> 00:29:56,849
attack server running an unsigned

750
00:29:53,639 --> 00:29:57,988
certificate and an internal web server

751
00:29:56,849 --> 00:29:59,339
running an unsigned certificate I

752
00:29:57,989 --> 00:30:01,019
haven't actually tried it with a signed

753
00:29:59,339 --> 00:30:03,779
certificate so that's gonna be the next

754
00:30:01,019 --> 00:30:05,219
area I look at however most of the cases

755
00:30:03,779 --> 00:30:07,409
I've seen of this they're running on

756
00:30:05,219 --> 00:30:08,759
scion certificates anyway so it seems to

757
00:30:07,409 --> 00:30:11,219
have no impact I don't know why the

758
00:30:08,759 --> 00:30:12,509
browser's aren't checking it but as well

759
00:30:11,219 --> 00:30:16,049
said it's like it's another than naked

760
00:30:12,509 --> 00:30:17,009
add-in yeah it's yeah it's on an

761
00:30:16,049 --> 00:30:19,408
internal network it's all gonna be

762
00:30:17,009 --> 00:30:20,639
unsigned crap anyway and then gonna make

763
00:30:19,409 --> 00:30:23,070
that as frictionless as possible

764
00:30:20,639 --> 00:30:25,049
correct and that's why it's still gonna

765
00:30:23,070 --> 00:30:27,079
work who's got other questions right

766
00:30:25,049 --> 00:30:27,079
here

767
00:30:32,970 --> 00:30:39,070
[Music]

768
00:30:35,820 --> 00:30:41,500
so in my particular attack you needed to

769
00:30:39,070 --> 00:30:43,750
know the exact IP address internally to

770
00:30:41,500 --> 00:30:45,610
hit I think I mentioned it briefly

771
00:30:43,750 --> 00:30:47,559
earlier that you can actually pulled out

772
00:30:45,610 --> 00:30:49,840
what their internal IP address is with a

773
00:30:47,559 --> 00:30:51,910
bit of I think it's JavaScript comfort

774
00:30:49,840 --> 00:30:53,260
you can act you pull down there so if

775
00:30:51,910 --> 00:30:55,030
you're hooking with B first and like

776
00:30:53,260 --> 00:30:57,070
even in the same thing and then exactly

777
00:30:55,030 --> 00:30:59,500
how's that back and then we've actually

778
00:30:57,070 --> 00:31:01,030
have a DNS rebinding module in it so you

779
00:30:59,500 --> 00:31:02,830
can actually do it that way and then you

780
00:31:01,030 --> 00:31:05,320
can either use a combination of

781
00:31:02,830 --> 00:31:07,178
subdomains or WebSockets it's probably

782
00:31:05,320 --> 00:31:08,770
bit faster to actually go through the

783
00:31:07,179 --> 00:31:10,809
entire subnet range and find the IP

784
00:31:08,770 --> 00:31:12,910
address if you do that kind of attack

785
00:31:10,809 --> 00:31:14,500
then and yet all you really need to know

786
00:31:12,910 --> 00:31:15,940
is if they're running that software or

787
00:31:14,500 --> 00:31:17,110
hopefully if they're running that

788
00:31:15,940 --> 00:31:19,210
software you could pretty much do

789
00:31:17,110 --> 00:31:21,010
internal scans doing stuff like this and

790
00:31:19,210 --> 00:31:22,390
just yeah cycle through you know once

791
00:31:21,010 --> 00:31:23,679
you've got the once you actually know

792
00:31:22,390 --> 00:31:25,840
what the sudden it is you can just hit

793
00:31:23,679 --> 00:31:28,990
everything yeah I've tried it briefly

794
00:31:25,840 --> 00:31:30,790
with a 256 IP address range and it ran

795
00:31:28,990 --> 00:31:32,169
and I think the whole attack took about

796
00:31:30,790 --> 00:31:38,649
two minutes there you go

797
00:31:32,169 --> 00:31:40,330
but I'm sure you do big arrangers I'm

798
00:31:38,650 --> 00:31:41,650
possibly I'm actually try mean you're

799
00:31:40,330 --> 00:31:43,480
gonna have a bigger space right it's

800
00:31:41,650 --> 00:31:46,000
gonna take too long but you can you can

801
00:31:43,480 --> 00:31:47,770
start passing info back to right like if

802
00:31:46,000 --> 00:31:50,410
you cycle this thing back to your

803
00:31:47,770 --> 00:31:51,429
external domain what you don't even need

804
00:31:50,410 --> 00:31:53,140
to do that but I mean I don't know I'm

805
00:31:51,429 --> 00:31:55,809
saying you can scan a subnet and they're

806
00:31:53,140 --> 00:31:58,150
like yeah so originally I was actually

807
00:31:55,809 --> 00:31:59,710
rebinding back to my external domain to

808
00:31:58,150 --> 00:32:01,270
exfiltrate data and I'm like why am i

809
00:31:59,710 --> 00:32:02,380
bother and wasting an extra minute doing

810
00:32:01,270 --> 00:32:04,389
there so I just caught by the bay

811
00:32:02,380 --> 00:32:06,940
directly so that's you can export rate

812
00:32:04,390 --> 00:32:09,100
data pretty much real time yeah we had

813
00:32:06,940 --> 00:32:12,170
other questions down here yeah sorry

814
00:32:09,100 --> 00:32:12,169
[Music]

815
00:32:12,650 --> 00:32:16,760
the question is like what was the

816
00:32:14,090 --> 00:32:17,928
OpenDNS protection now I'm not sure it's

817
00:32:16,760 --> 00:32:19,580
kind of a black box

818
00:32:17,929 --> 00:32:21,200
no one can I haven't been able to find

819
00:32:19,580 --> 00:32:23,570
any information on exactly how they do

820
00:32:21,200 --> 00:32:25,130
it all I know is that it doesn't work

821
00:32:23,570 --> 00:32:26,779
and they're public they come out and

822
00:32:25,130 --> 00:32:28,190
said that they do have protections

823
00:32:26,779 --> 00:32:29,960
against it they just haven't been

824
00:32:28,190 --> 00:32:31,850
specific into what protection are you

825
00:32:29,960 --> 00:32:33,890
setting it you're setting a stupid short

826
00:32:31,850 --> 00:32:36,080
like refresh time on the zone file there

827
00:32:33,890 --> 00:32:38,720
right so it's a completely custom DNS

828
00:32:36,080 --> 00:32:40,490
server in my case okay zero TTL it

829
00:32:38,720 --> 00:32:42,980
literally responds to anything with my

830
00:32:40,490 --> 00:32:44,510
IP address is 1 1 1 1 unless it's the

831
00:32:42,980 --> 00:32:47,779
right attack domain in which case it'll

832
00:32:44,510 --> 00:32:51,470
return an a record for its its own IP

833
00:32:47,779 --> 00:32:53,690
address and what's the TTL I don't think

834
00:32:51,470 --> 00:32:56,779
there is one okay yeah so it's it's a

835
00:32:53,690 --> 00:32:59,330
really dumb DNS server yeah any

836
00:32:56,779 --> 00:33:01,789
standards if I do anything properly yeah

837
00:32:59,330 --> 00:33:03,168
DNS will just recursively send back any

838
00:33:01,789 --> 00:33:04,429
results you give it yeah no you don't

839
00:33:03,169 --> 00:33:07,299
need to actually spend too much time on

840
00:33:04,429 --> 00:33:12,340
doing a proper DNS server to ignore this

841
00:33:07,299 --> 00:33:12,340
just break this break the standard yeah

842
00:33:12,730 --> 00:33:17,559
anyone else we got one more over here

843
00:33:24,520 --> 00:33:27,830
yeah what's Jenny doing to stop this I'm

844
00:33:26,870 --> 00:33:30,409
guessing the answer is absolutely

845
00:33:27,830 --> 00:33:32,240
nothing so I passed all the information

846
00:33:30,410 --> 00:33:34,070
along to them quite a while ago and I've

847
00:33:32,240 --> 00:33:36,110
never heard anything back I sent another

848
00:33:34,070 --> 00:33:38,840
one asking you know what's going on here

849
00:33:36,110 --> 00:33:41,270
I'm still no response so I didn't want

850
00:33:38,840 --> 00:33:42,560
to put it on to their public bug

851
00:33:41,270 --> 00:33:44,480
tracking system because I didn't want

852
00:33:42,560 --> 00:33:48,470
everyone to know about it and then I go

853
00:33:44,480 --> 00:33:50,030
into a talk on it go figure but yeah I

854
00:33:48,470 --> 00:33:51,800
didn't want to originally like a year

855
00:33:50,030 --> 00:33:54,470
ago put it on their bug tracking system

856
00:33:51,800 --> 00:33:56,060
so I've sent them emails haven't gotten

857
00:33:54,470 --> 00:33:58,670
any responses I know I'm sending to the

858
00:33:56,060 --> 00:33:59,840
right email it's up to them at this

859
00:33:58,670 --> 00:34:01,130
point but right sorry we're gonna go to

860
00:33:59,840 --> 00:34:02,860
the next question cuz we're really

861
00:34:01,130 --> 00:34:06,340
running low on time Tim you had one oh

862
00:34:02,860 --> 00:34:06,340
sorry No

863
00:34:11,429 --> 00:34:15,800
you're already in bed

864
00:34:13,070 --> 00:34:17,669
right here

865
00:34:15,800 --> 00:34:20,099
supposed to be

866
00:34:17,668 --> 00:34:21,868
yeah so the question is really like it

867
00:34:20,099 --> 00:34:23,159
understands why it's it's you know

868
00:34:21,869 --> 00:34:24,990
difficult to check the host header

869
00:34:23,159 --> 00:34:26,369
because that device probably isn't gonna

870
00:34:24,989 --> 00:34:30,928
know what its host is supposed to be

871
00:34:26,369 --> 00:34:32,669
right so yeah I mean there's no reason

872
00:34:30,929 --> 00:34:35,309
you couldn't look up what your domain is

873
00:34:32,668 --> 00:34:38,578
meant to be from the actual system and

874
00:34:35,309 --> 00:34:40,919
use that but but if it's not set yeah if

875
00:34:38,579 --> 00:34:43,769
it's not set I mean that's the state of

876
00:34:40,918 --> 00:34:46,379
things right like deal with DNS

877
00:34:43,768 --> 00:34:48,509
rebinding attack I guess all right well

878
00:34:46,379 --> 00:34:51,230
that is Matt domicile thank you very

879
00:34:48,510 --> 00:34:51,230
much that's right

880
00:34:56,620 --> 00:34:58,680
you

