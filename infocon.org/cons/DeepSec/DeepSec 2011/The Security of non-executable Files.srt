1
00:00:06,100 --> 00:00:08,660
the day minus minutes telling

2
00:00:08,660 --> 00:00:10,840
and the

3
00:00:10,840 --> 00:00:17,840
I am going to talk about the security of
known execute a bull fights

4
00:00:18,470 --> 00:00:22,189
now this and I knew that this was the
last

5
00:00:22,189 --> 00:00:26,430
speech so I tried to make it not too
boring but I guess

6
00:00:26,430 --> 00:00:30,130
line now you are so pumped up with
adrenaline

7
00:00:30,130 --> 00:00:33,149
from dodging chocolate bar bullets that

8
00:00:33,149 --> 00:00:38,210
you should be able to follow so

9
00:00:38,210 --> 00:00:45,210
in the recent years you have seen

10
00:00:46,470 --> 00:00:49,530
arise of on

11
00:00:49,530 --> 00:00:53,040
non executed both fires which infected

12
00:00:53,040 --> 00:00:57,119
systems or I compromise security

13
00:00:57,119 --> 00:01:01,320
not excusable fight

14
00:01:01,320 --> 00:01:05,830
we we should start defining what is a
non-toxic the file it's not so easy

15
00:01:05,830 --> 00:01:06,850
actually

16
00:01:06,850 --> 00:01:11,250
the the term I use this actually quite a
brothel on

17
00:01:11,250 --> 00:01:14,549
the the problem misgiving very

18
00:01:14,549 --> 00:01:17,900
precise definition a non-executive a
fire

19
00:01:17,900 --> 00:01:21,630
let's say PDF which JavaScript would you
call it

20
00:01:21,630 --> 00:01:25,048
a and execute a file probably not

21
00:01:25,049 --> 00:01:29,420
but this javascript is going to be
executed at some point probably

22
00:01:29,420 --> 00:01:34,100
so you would certainly call an
executable file

23
00:01:34,100 --> 00:01:38,159
a when the city to table probably even
adult nap

24
00:01:38,159 --> 00:01:42,429
assembly why well I don't last assembly

25
00:01:42,429 --> 00:01:46,030
is wrapped up in the same four-month

26
00:01:46,030 --> 00:01:49,969
of native execute a ble files so

27
00:01:49,969 --> 00:01:52,979
to its apparent

28
00:01:52,979 --> 00:01:56,789
to even unskilled user that at the pot

29
00:01:56,789 --> 00:01:59,990
document assembly is an executable file
but

30
00:01:59,990 --> 00:02:04,939
a sec for instance Shockwave Flash
application truck with flesh-eating

31
00:02:04,939 --> 00:02:08,229
application contains by called Manish
called

32
00:02:08,229 --> 00:02:12,050
just like dotnet some they're not saying
of course

33
00:02:12,050 --> 00:02:15,620
don't want to say that but they have
some

34
00:02:15,620 --> 00:02:18,900
similarities the problem is often
perception

35
00:02:18,900 --> 00:02:22,090
the barris

36
00:02:22,090 --> 00:02:26,310
between not execute fights annex to the
fights are

37
00:02:26,310 --> 00:02:31,660
very thin and often the problems
perception now

38
00:02:31,660 --> 00:02:36,220
let's say the the most feared

39
00:02:36,220 --> 00:02:39,430
issue when was talking about big night
school fights

40
00:02:39,430 --> 00:02:45,910
is infection of course the most common
factors for infection no scripting or by

41
00:02:45,910 --> 00:02:49,829
court shall cause meaning buffer
overflows and Asia

42
00:02:49,830 --> 00:02:53,980
dangerous form it features now will an
honest with them one by one

43
00:02:53,980 --> 00:02:57,010
scripting and bytecode scripting a

44
00:02:57,010 --> 00:03:00,299
is let's say very functional but way
rather

45
00:03:00,300 --> 00:03:03,980
this functionality I security suffers
from it

46
00:03:03,980 --> 00:03:07,380
there are two types of fire

47
00:03:07,380 --> 00:03:10,910
a basically dose which offer scripting
just

48
00:03:10,910 --> 00:03:16,930
as a capability as an additional
capability hope

49
00:03:16,930 --> 00:03:23,930
are you like that and those fights which
completely reliant

50
00:03:26,610 --> 00:03:29,630
for instance Flash applications

51
00:03:29,630 --> 00:03:33,600
um I hear

52
00:03:33,600 --> 00:03:37,050
hurt many times users refer to

53
00:03:37,050 --> 00:03:41,210
arm videos and Google or YouTube

54
00:03:41,210 --> 00:03:44,750
ass flash videos of course and

55
00:03:44,750 --> 00:03:49,310
this is very misleading because what
happens actually is the browser

56
00:03:49,310 --> 00:03:53,320
this downloading a flash application
which contains called

57
00:03:53,320 --> 00:03:57,440
and is called actually place the BDO
very different from downloading

58
00:03:57,440 --> 00:04:00,940
video I am now

59
00:04:00,940 --> 00:04:04,410
term every a here we see well this is
just

60
00:04:04,410 --> 00:04:09,640
the code of fun Google Video

61
00:04:09,640 --> 00:04:16,640
which my

62
00:04:16,649 --> 00:04:19,739
its stock the computer

63
00:04:19,740 --> 00:04:24,310
has crashed great

64
00:04:24,310 --> 00:04:27,460
have to reboot sorry not

65
00:04:27,460 --> 00:04:32,590
stated didn't minutes Adam no

66
00:04:32,590 --> 00:04:36,500
just Power Point I'm crashed

67
00:04:36,500 --> 00:04:43,500
but ok

68
00:04:53,500 --> 00:04:59,550
recital on this

69
00:04:59,550 --> 00:05:03,020
now

70
00:05:03,020 --> 00:05:09,250
and now thank you

71
00:05:09,250 --> 00:05:12,370
%um

72
00:05:12,370 --> 00:05:18,099
alright

73
00:05:18,099 --> 00:05:21,469
okay so out

74
00:05:21,470 --> 00:05:24,610
when we've talking about scripting and
bite called what happens

75
00:05:24,610 --> 00:05:29,010
state the usually exploit the technology
itself or the API provides

76
00:05:29,010 --> 00:05:32,780
but what about is all basic a bizarre
basic application

77
00:05:32,780 --> 00:05:35,790
you run on Windows contained even an

78
00:05:35,790 --> 00:05:39,850
all office a documents here we can see

79
00:05:39,850 --> 00:05:43,330
I don't know it's very small phone

80
00:05:43,330 --> 00:05:47,109
I don't know if you can read it but here
we have basically some

81
00:05:47,110 --> 00:05:53,780
basic application called which creates
it's not

82
00:05:53,780 --> 00:06:00,780
it's not my day I'm sorry it's not my

83
00:06:01,220 --> 00:06:04,620
thinking can we do without slide snow
and thinks

84
00:06:04,620 --> 00:06:11,620
yes perfect

85
00:06:12,800 --> 00:06:19,800
right

86
00:06:35,390 --> 00:06:38,390
well okay I don't want to stone on the
situation

87
00:06:38,390 --> 00:06:44,710
but um keen

88
00:06:44,710 --> 00:06:51,710
C

89
00:06:55,170 --> 00:06:58,070
from

90
00:06:58,070 --> 00:07:05,070
yes

91
00:07:17,230 --> 00:07:20,020
K

92
00:07:20,020 --> 00:07:27,020
sorry don't do anything

93
00:07:27,520 --> 00:07:34,520
ok

94
00:07:36,190 --> 00:07:38,289
moment

95
00:07:38,289 --> 00:07:39,349
come

96
00:07:39,350 --> 00:07:46,350
poems

97
00:07:46,900 --> 00:07:48,040
alright

98
00:07:48,040 --> 00:07:51,640
um it basically creates up

99
00:07:51,640 --> 00:07:54,880
record it 50 on the disc

100
00:07:54,880 --> 00:07:58,300
and then executes it when we have such

101
00:07:58,300 --> 00:08:03,720
such type of a pic in scripting or
bytecode functionality which

102
00:08:03,720 --> 00:08:08,060
axis the system API it's no longer a
document actually in that case

103
00:08:08,060 --> 00:08:11,230
its really and execute people a

104
00:08:11,230 --> 00:08:14,610
because the power it has is

105
00:08:14,610 --> 00:08:18,160
limitless so it doesn't make sense of
course running

106
00:08:18,160 --> 00:08:22,400
a certain byte code on or manage korte
into a sandbox like Clash of course

107
00:08:22,400 --> 00:08:25,600
I we have

108
00:08:25,600 --> 00:08:28,690
many many 54 months contain cold

109
00:08:28,690 --> 00:08:32,150
well even without experts knowing I

110
00:08:32,150 --> 00:08:36,049
just recently became aware are of the
fact that

111
00:08:36,049 --> 00:08:39,500
even on QuickTime movies can and that
JavaScript

112
00:08:39,500 --> 00:08:42,830
shout called okay

113
00:08:42,830 --> 00:08:47,850
this iz what you don't want to happen of
course when you open a file

114
00:08:47,850 --> 00:08:50,920
buffer overflows

115
00:08:50,920 --> 00:08:55,510
are usually trigger by script or byte
code and its APIs

116
00:08:55,510 --> 00:08:58,640
or by five for what passing issues

117
00:08:58,640 --> 00:09:01,870
ek im tempering of course with string
and their sizes

118
00:09:01,870 --> 00:09:05,830
is a very good way to obtain a buffer
overflow how to detect

119
00:09:05,830 --> 00:09:09,520
0 they shall called exploits well one
way is to

120
00:09:09,520 --> 00:09:13,390
emulate the scripting and Michael
environment but this is not a good

121
00:09:13,390 --> 00:09:14,410
approach because

122
00:09:14,410 --> 00:09:17,839
usually buffer overflows are
implementation specific

123
00:09:17,840 --> 00:09:21,060
so in this case its mostly useless

124
00:09:21,060 --> 00:09:24,280
it's difficult because it takes a lot of
work it's little

125
00:09:24,280 --> 00:09:28,730
and it's also risky because a buffer
overflow can happen even in our

126
00:09:28,730 --> 00:09:32,180
emulator of course detecting

127
00:09:32,180 --> 00:09:36,910
issues and the four-month it's a very
good indicator for buffer overflows

128
00:09:36,910 --> 00:09:40,560
I but it's impractical to validate
everything

129
00:09:40,560 --> 00:09:44,090
it's not always possible because some
documents

130
00:09:44,090 --> 00:09:47,850
have parts which %uh on the command to
or are vendor-specific

131
00:09:47,850 --> 00:09:51,580
and it may not be triggered it

132
00:09:51,580 --> 00:09:54,580
I mean show called the for all by

133
00:09:54,580 --> 00:09:58,090
my form data it actually could be
triggered by

134
00:09:58,090 --> 00:10:01,610
data which is completely well genuine

135
00:10:01,610 --> 00:10:05,720
according to the specification we're
here we have

136
00:10:05,720 --> 00:10:10,520
a very simple shortcut signature when
this case is not reassure coded

137
00:10:10,520 --> 00:10:13,829
this case in this case the this model
rpf in bats

138
00:10:13,830 --> 00:10:16,830
a winds expected also term

139
00:10:16,830 --> 00:10:20,470
with detecting lots of shuttles but it's
just too

140
00:10:20,470 --> 00:10:25,440
to give an idea if if the show coats
uses a very easy to detect signature we

141
00:10:25,440 --> 00:10:27,040
can based on it to detect it

142
00:10:27,040 --> 00:10:31,930
but a we hear ISI on I want to show you
a more difficult Casey we have

143
00:10:31,930 --> 00:10:36,030
a JavaScript shuttle vector arm

144
00:10:36,030 --> 00:10:43,030
mmm C

145
00:10:53,280 --> 00:10:54,390
okay this is strange

146
00:10:54,390 --> 00:10:58,030
it should show up bdrm and it happened
even before

147
00:10:58,030 --> 00:11:01,290
it's probably because of them

148
00:11:01,290 --> 00:11:05,760
yes it is stuck probably because

149
00:11:05,760 --> 00:11:10,400
I haven't touched it the cable for the
it didn't do this before

150
00:11:10,400 --> 00:11:14,920
so it was working I checked this its
stock because of that

151
00:11:14,920 --> 00:11:21,920
it crashes because of that great power
point

152
00:11:28,129 --> 00:11:32,080
changes

153
00:11:32,080 --> 00:11:39,080
see frank and with military solution

154
00:11:41,500 --> 00:11:45,480
yeah know it works keep it this way
because otherwise it crashes im sorry

155
00:11:45,480 --> 00:11:48,690
a you can still see it probably yes

156
00:11:48,690 --> 00:11:53,360
um came out

157
00:11:53,360 --> 00:11:56,990
here we can seem a very

158
00:11:56,990 --> 00:12:00,940
a come on JavaScript on infection vector

159
00:12:00,940 --> 00:12:04,220
it basically does some operation on a
string and then

160
00:12:04,220 --> 00:12:07,990
a uses it to execute chuckled um

161
00:12:07,990 --> 00:12:11,920
exploiting of course about upon our
ability

162
00:12:11,920 --> 00:12:15,770
and if we dump this on

163
00:12:15,770 --> 00:12:19,110
this spring each mmm on on which
operations

164
00:12:19,110 --> 00:12:22,450
have been if performed we can
disassemble the code

165
00:12:22,450 --> 00:12:26,070
now here we see the show called
disassembled and

166
00:12:26,070 --> 00:12:29,370
an it uses a very come on

167
00:12:29,370 --> 00:12:33,250
sorry a very calm on um

168
00:12:33,250 --> 00:12:37,070
it's very common I mean it just jumps to
the call

169
00:12:37,070 --> 00:12:41,270
the call a pushed on the stack

170
00:12:41,270 --> 00:12:45,980
the instruction pointer which is
actually the date after the call

171
00:12:45,980 --> 00:12:49,450
it the the in the cold a about

172
00:12:49,450 --> 00:12:52,900
just pops the mmm

173
00:12:52,900 --> 00:12:56,980
the instruction pointer from the stack
and Starz the creating

174
00:12:56,980 --> 00:13:00,120
the called the it actually in this case

175
00:13:00,120 --> 00:13:04,959
a below the call it goes on the crypt
thing until it finds

176
00:13:04,959 --> 00:13:09,040
a signature which is this the ADEA ADEA

177
00:13:09,040 --> 00:13:12,790
and we can just the crypt it's very easy
because

178
00:13:12,790 --> 00:13:15,969
a it's very basic up

179
00:13:15,970 --> 00:13:19,360
encryption and now we can see the cause
of course after having it

180
00:13:19,360 --> 00:13:23,630
the crypt now on this

181
00:13:23,630 --> 00:13:27,810
this show called it's very easy to stay
calm wanna just against the PA be

182
00:13:27,810 --> 00:13:31,680
from the process than goes 'em

183
00:13:31,680 --> 00:13:34,720
goes to all modules tries to find cannot

184
00:13:34,720 --> 00:13:37,880
32 the al- a use a very simple

185
00:13:37,880 --> 00:13:41,810
hashing technique to retrieve on the
original

186
00:13:41,810 --> 00:13:47,740
a API names a it needs some API so it
uses this this technique and then

187
00:13:47,740 --> 00:13:51,570
use this API success to find open handle
to the country open

188
00:13:51,570 --> 00:13:54,850
pdf dumps to execute a boy it has in it

189
00:13:54,850 --> 00:13:57,920
and executed nothing special a

190
00:13:57,920 --> 00:14:01,990
actually here but what is to mention is
that in this case

191
00:14:01,990 --> 00:14:07,670
an the detection of should go through
signatures becomes difficult when the

192
00:14:07,670 --> 00:14:08,300
show called

193
00:14:08,300 --> 00:14:11,329
his loader either to avoid

194
00:14:11,329 --> 00:14:15,000
0 bytes for detection an hour or the
other

195
00:14:15,000 --> 00:14:19,029
can be polymorphic or even obfuscated a

196
00:14:19,029 --> 00:14:22,390
phone inthe in this case it's so easy to
the identified the

197
00:14:22,390 --> 00:14:27,650
the issue because JavaScript disused
other worst case for the texan

198
00:14:27,650 --> 00:14:31,310
as a buffer overflow triggered by a
former

199
00:14:31,310 --> 00:14:35,360
passing issue it even worse when the
data triggering

200
00:14:35,360 --> 00:14:39,699
the issue is ballot according to the
format specification

201
00:14:39,699 --> 00:14:43,520
during dangers from it features and

202
00:14:43,520 --> 00:14:46,660
here credit goes to the Stevens

203
00:14:46,660 --> 00:14:50,120
to a at the beginning of 2010 posted on
his blog

204
00:14:50,120 --> 00:14:53,400
um a very

205
00:14:53,400 --> 00:14:57,550
effective exploits the which basically
just lounged

206
00:14:57,550 --> 00:15:01,199
and execute able from Foxit Reader when
opening a PDF

207
00:15:01,199 --> 00:15:04,640
without asking the user um

208
00:15:04,640 --> 00:15:08,400
the technique is actually very very easy
it just uses the launch

209
00:15:08,400 --> 00:15:12,110
on that this is a a PDF object

210
00:15:12,110 --> 00:15:15,449
you we have a launch action a object

211
00:15:15,449 --> 00:15:21,940
and its launches see in the dark axe
then I'll service attacks sometimes

212
00:15:21,940 --> 00:15:25,560
the goal of all the most formed or

213
00:15:25,560 --> 00:15:30,209
im um or the

214
00:15:30,209 --> 00:15:33,270
lets a malicious file is not to

215
00:15:33,270 --> 00:15:36,339
a infect a system but just two

216
00:15:36,339 --> 00:15:39,390
costs and responsiveness or some

217
00:15:39,390 --> 00:15:43,170
make the handler of 25 crash on

218
00:15:43,170 --> 00:15:46,310
the denial of service attacks are best
carried out

219
00:15:46,310 --> 00:15:49,510
through former passing issues and

220
00:15:49,510 --> 00:15:52,699
coat execution might require because

221
00:15:52,699 --> 00:15:56,470
business this is the point code
execution like JavaScript

222
00:15:56,470 --> 00:16:00,199
might require user interaction or

223
00:16:00,199 --> 00:16:03,380
the user could have JavaScript
completely disabled

224
00:16:03,380 --> 00:16:06,970
but when we have a a former passing
should've

225
00:16:06,970 --> 00:16:10,530
the the parsing this number conditional
if it is

226
00:16:10,530 --> 00:16:14,230
the outcome of that condition can be
determined by

227
00:16:14,230 --> 00:16:17,740
the the format itself usually so so

228
00:16:17,740 --> 00:16:21,900
it's the lowest layer if we can are
somehow get

229
00:16:21,900 --> 00:16:24,920
the parser a

230
00:16:24,920 --> 00:16:28,160
an I mean if we can get to read it

231
00:16:28,160 --> 00:16:32,650
and not validate our data we can
probably get it to crash in become

232
00:16:32,650 --> 00:16:36,829
non-responsive common problems when
passing fights are pointer arithmetic

233
00:16:36,829 --> 00:16:39,839
integer overflows division by zero
troops unpacking

234
00:16:39,839 --> 00:16:43,250
and requested references pointer
arithmetic is very easy

235
00:16:43,250 --> 00:16:46,970
we can we get a value from the file a we
perform

236
00:16:46,970 --> 00:16:50,620
appoint and arithmetic on it we get to
and you pointer from it

237
00:16:50,620 --> 00:16:55,939
and the in the best case the result is
an access violation

238
00:16:55,939 --> 00:17:00,770
integer overflows many languages have
types which are limited to the mid-size

239
00:17:00,770 --> 00:17:04,230
so if you read a value from the fight at
the time to value

240
00:17:04,230 --> 00:17:07,370
week could get value which is

241
00:17:07,370 --> 00:17:11,199
lower-than-expected on then we have
loops

242
00:17:11,199 --> 00:17:14,500
this is very very calm a loop a

243
00:17:14,500 --> 00:17:19,290
in this case we take I value from the
final a numeric value

244
00:17:19,290 --> 00:17:24,619
we put it in the loop and we are
verifying if the values to be

245
00:17:24,620 --> 00:17:28,510
if task the dear the function which is
caused by the

246
00:17:28,510 --> 00:17:32,060
by an open space performs I

247
00:17:32,060 --> 00:17:35,408
allocates memory and stuff like that it
will X of

248
00:17:35,409 --> 00:17:38,560
memory up or the application becomes

249
00:17:38,560 --> 00:17:41,850
unresponsive unpacking this is very very
common it's

250
00:17:41,850 --> 00:17:44,918
as well a it happens when for instance

251
00:17:44,919 --> 00:17:47,929
we have the compression um

252
00:17:47,929 --> 00:17:51,190
be compressed data can be much much
smaller

253
00:17:51,190 --> 00:17:56,200
than the decompressed one so if the

254
00:17:56,200 --> 00:17:59,600
if the handler of 25 doesn't put a limit
under unpacked

255
00:17:59,600 --> 00:18:02,669
data well it could eases the a

256
00:18:02,669 --> 00:18:06,230
exhaust either this channel memory or

257
00:18:06,230 --> 00:18:09,419
this space

258
00:18:09,419 --> 00:18:13,480
then the best 'em about the water the
best solution is

259
00:18:13,480 --> 00:18:18,300
to from forced the document to the clear
upfront

260
00:18:18,300 --> 00:18:22,090
whole big the compressed size will be
dis

261
00:18:22,090 --> 00:18:27,879
is used by many 54 minutes XML bombs is
another example is case nothing gets

262
00:18:27,880 --> 00:18:31,409
the compressed but the targets expanded

263
00:18:31,409 --> 00:18:36,179
and it's the same problem came

264
00:18:36,179 --> 00:18:40,400
precursor preferences this is probably
the biggest case because it is

265
00:18:40,400 --> 00:18:44,280
difficult to capture times a.m. you may
have

266
00:18:44,280 --> 00:18:47,899
in your application which um spire Singh

267
00:18:47,900 --> 00:18:51,450
a particular fight for my up

268
00:18:51,450 --> 00:18:55,980
a curse if reference case in which you
are passing elements and elements

269
00:18:55,980 --> 00:18:59,870
are um specifying directly

270
00:18:59,870 --> 00:19:03,260
the next or previous element in the
sequence so

271
00:19:03,260 --> 00:19:07,720
a come cases are linked list or Terese

272
00:19:07,720 --> 00:19:10,870
the result is either on infinite loop

273
00:19:10,870 --> 00:19:14,159
or even regression in this case it

274
00:19:14,159 --> 00:19:18,200
will very problem she X of memory

275
00:19:18,200 --> 00:19:25,200
okay here we have a regressive this

276
00:19:26,150 --> 00:19:29,370
as you can see me the first at the

277
00:19:29,370 --> 00:19:33,120
site the fourth element goes back to the
first so if you're if you're

278
00:19:33,120 --> 00:19:38,050
application doesn't check this
percussion

279
00:19:38,050 --> 00:19:42,490
it will go on for other a cursive tree

280
00:19:42,490 --> 00:19:46,919
trees are usually passed by using
records recursive calls inside the court

281
00:19:46,919 --> 00:19:50,620
so on in fact I'm many years ago I
brought

282
00:19:50,620 --> 00:19:54,559
a an application call to see if explorer
and

283
00:19:54,559 --> 00:19:57,800
in just recently I'm Albertini reported
to me

284
00:19:57,800 --> 00:20:00,940
um a bug a

285
00:20:00,940 --> 00:20:04,520
in which on basically supplication
process when the sexy

286
00:20:04,520 --> 00:20:08,500
tables and one of the things it doesn't
parse this resources resources

287
00:20:08,500 --> 00:20:11,770
inside Windows executed but xx tables
are

288
00:20:11,770 --> 00:20:15,050
structured in a tree so it doesn't check

289
00:20:15,050 --> 00:20:19,820
for a certian any exhaust the stack so
it gets terminated

290
00:20:19,820 --> 00:20:24,149
um how does Manuel avoid detection

291
00:20:24,149 --> 00:20:27,510
well there are bus waves of course I
want a

292
00:20:27,510 --> 00:20:31,540
list them all some ways are called up
this cation a reflection phylum that the

293
00:20:31,540 --> 00:20:34,658
encryption an external references

294
00:20:34,659 --> 00:20:39,440
called up this cation and reflection
here we have the article JavaScript

295
00:20:39,440 --> 00:20:42,940
obfuscated sample Alex beautify to bits

296
00:20:42,940 --> 00:20:46,950
otherwise it's impossible to read on if
you can

297
00:20:46,950 --> 00:20:50,149
only if you see it at the at the at the
end we have

298
00:20:50,149 --> 00:20:53,600
I am assignment

299
00:20:53,600 --> 00:20:56,710
this basically a science to the to the
variable

300
00:20:56,710 --> 00:21:00,320
E the evil a

301
00:21:00,320 --> 00:21:03,639
string which Dennis use to call called

302
00:21:03,639 --> 00:21:06,899
up on which is some

303
00:21:06,899 --> 00:21:09,909
put together about this is a typical
case in which the

304
00:21:09,909 --> 00:21:13,690
the the call this obfuscated and it uses
reflection

305
00:21:13,690 --> 00:21:17,570
evil is the wait JavaScript uses
reflection

306
00:21:17,570 --> 00:21:20,830
phylum budding is very very common I did
very

307
00:21:20,830 --> 00:21:24,389
very neat test I on this and

308
00:21:24,389 --> 00:21:28,320
I to cover basically a around on PDF
modeler

309
00:21:28,320 --> 00:21:31,700
I pier we have I have up while a bloated

310
00:21:31,700 --> 00:21:36,270
to virustotal and 31 out of 40 for scan
engines

311
00:21:36,270 --> 00:21:41,310
detected as a as a mahler it is an old
man who are not the F minor

312
00:21:41,310 --> 00:21:44,850
welded afterwards is so used to be a
Stevens

313
00:21:44,850 --> 00:21:48,340
on still in bed

314
00:21:48,340 --> 00:21:53,260
fight unscripted to in bed a PDF in a
into another PDF for another five min

315
00:21:53,260 --> 00:21:56,840
in this case I a in bed at PDF internet
bf in

316
00:21:56,840 --> 00:22:00,129
what happened in this case a stat

317
00:22:00,130 --> 00:22:03,389
now only at 24 all to forty

318
00:22:03,389 --> 00:22:07,330
the to other 43 scan engines detected
the issue

319
00:22:07,330 --> 00:22:10,830
so already sums gun engines can follow
it

320
00:22:10,830 --> 00:22:14,418
anymore probably because they are not
parsing the PDF

321
00:22:14,419 --> 00:22:17,580
a four-month they are probably just

322
00:22:17,580 --> 00:22:23,040
checking forcing not sure or I am NOT
probably relying on hashing don't know

323
00:22:23,040 --> 00:22:26,780
um now the same script by the DA

324
00:22:26,780 --> 00:22:29,780
allows to on with the

325
00:22:29,780 --> 00:22:33,190
with by specifying this s option to

326
00:22:33,190 --> 00:22:36,580
rename the in bed at five a string

327
00:22:36,580 --> 00:22:39,939
in the PDF catalog it actually just

328
00:22:39,940 --> 00:22:43,040
from change the F

329
00:22:43,040 --> 00:22:46,250
to from upper to lower case

330
00:22:46,250 --> 00:22:49,389
nothing else and now

331
00:22:49,389 --> 00:22:52,460
only a hoe many yep twenty out of

332
00:22:52,460 --> 00:22:56,380
forty-three a scan engines salt every
time

333
00:22:56,380 --> 00:22:59,889
I do something less and less engines
find

334
00:22:59,889 --> 00:23:04,000
the issue well I whence one step
searcher because

335
00:23:04,000 --> 00:23:07,580
the object and they're in bed yes we're
still

336
00:23:07,580 --> 00:23:10,610
using their original arm

337
00:23:10,610 --> 00:23:14,760
well it was alright still there it was
removed from the capital basically

338
00:23:14,760 --> 00:23:19,010
but it at still the in bed at five type
so what they did is just

339
00:23:19,010 --> 00:23:23,110
renamed it typed too indebted exile I
just 39 put

340
00:23:23,110 --> 00:23:26,770
X I instead of a nap and

341
00:23:26,770 --> 00:23:29,990
well now only four 13 actually

342
00:23:29,990 --> 00:23:33,960
out of 43 scan engines so we went from
I'm no more than four

343
00:23:33,960 --> 00:23:37,300
have more than 30 213 of course a

344
00:23:37,300 --> 00:23:41,290
it should be clear it is no longer
accessible and the same way

345
00:23:41,290 --> 00:23:45,139
as before before it the get the object
loss

346
00:23:45,139 --> 00:23:48,280
pot of the PDF format and

347
00:23:48,280 --> 00:23:51,510
it follow the roots of the PS Pacific
Asian

348
00:23:51,510 --> 00:23:56,780
I renamed it and probably it's not a
accessible as easy as it was before

349
00:23:56,780 --> 00:24:00,250
but it's still there and nobody catches
it

350
00:24:00,250 --> 00:24:03,260
I mean still someone catches it but 20

351
00:24:03,260 --> 00:24:09,330
a fell out from from catching I am

352
00:24:09,330 --> 00:24:12,560
yet not one might however not be stored
at the former

353
00:24:12,560 --> 00:24:15,678
the the fine location in this case

354
00:24:15,679 --> 00:24:20,000
a it ceases it is easy of course to
check for in bed at five into

355
00:24:20,000 --> 00:24:23,220
PF object because it relies on a special

356
00:24:23,220 --> 00:24:26,220
um I wanna say

357
00:24:26,220 --> 00:24:29,270
um hi to mocked at

358
00:24:29,270 --> 00:24:33,790
it is using an embedded file and not
always the case of course they are

359
00:24:33,790 --> 00:24:37,129
them but if I could become to encrypt it
or compressed

360
00:24:37,130 --> 00:24:40,380
in that case it becomes on

361
00:24:40,380 --> 00:24:44,560
even more difficult here we have crypt
tool which is performing some analysis

362
00:24:44,560 --> 00:24:46,370
on frequency patterns

363
00:24:46,370 --> 00:24:52,070
on this is of course some a possibility
when we have encrypt it my way we cannot

364
00:24:52,070 --> 00:24:56,490
really identify probably a file if we
don't know how it is encrypt it

365
00:24:56,490 --> 00:25:02,520
um and the a waste to perform
statistical analysis

366
00:25:02,520 --> 00:25:06,000
um more on the clip on that later not

367
00:25:06,000 --> 00:25:10,500
here we have still encryption and it is
still possible to detect

368
00:25:10,500 --> 00:25:15,800
and in bed that fire and with using
crypts in which to encryption

369
00:25:15,800 --> 00:25:19,700
if it is using on X or encryption it
becomes

370
00:25:19,700 --> 00:25:24,450
difficult to precisely locate in the
crypt if it is more complex data and

371
00:25:24,450 --> 00:25:27,560
and encryption of course and the semen
on missus

372
00:25:27,560 --> 00:25:32,000
that we seen before for embedded fonts
meaning sadistic eyes can be used for

373
00:25:32,000 --> 00:25:33,710
encrypting defiance

374
00:25:33,710 --> 00:25:36,820
but I am can only tell us

375
00:25:36,820 --> 00:25:41,090
that something is wrong with the fire
and help us locate it but this top

376
00:25:41,090 --> 00:25:44,590
precise and it doesn't tell us how to
the crypt of course

377
00:25:44,590 --> 00:25:49,290
will see more on that later my when
talking about looking for in data

378
00:25:49,290 --> 00:25:53,700
external resources I'll this is a
technique in which

379
00:25:53,700 --> 00:25:57,620
main file loss are either an external
file

380
00:25:57,620 --> 00:26:02,120
and use it or the main file axis
resources contained

381
00:26:02,120 --> 00:26:06,440
in external files if we go to the Adobe
site

382
00:26:06,440 --> 00:26:09,770
is a very small code snippet in which
you are out

383
00:26:09,770 --> 00:26:13,379
request the loath an external a

384
00:26:13,379 --> 00:26:17,879
flash file and displays it now

385
00:26:17,879 --> 00:26:22,300
on this is possible to do even with the
remote flash file

386
00:26:22,300 --> 00:26:26,960
which brings us to the next issue the
violation of trust

387
00:26:26,960 --> 00:26:30,010
it is possible in some cases we did some
tests

388
00:26:30,010 --> 00:26:33,020
to Lord a flash file

389
00:26:33,020 --> 00:26:37,250
in a black and you know in a page which
is blacklisted

390
00:26:37,250 --> 00:26:41,030
now it doesn't work always spoken some
specific cases with us

391
00:26:41,030 --> 00:26:46,110
with a Internet Explorer in some cases
and with Firefox in some cases

392
00:26:46,110 --> 00:26:49,149
this does work this means that the flesh
5 is

393
00:26:49,149 --> 00:26:52,700
probably the Fleshlight is probably in a
in a

394
00:26:52,700 --> 00:26:56,820
likely stage about the other flash fire
s

395
00:26:56,820 --> 00:27:01,710
blacklisted or not unlikeliest but it
still gets low that from the main 5

396
00:27:01,710 --> 00:27:06,610
the security issue is a transition from
trusted to entrust it without the use or

397
00:27:06,610 --> 00:27:10,169
not to sing

398
00:27:10,169 --> 00:27:13,629
now it is clear that since we have in
bed files

399
00:27:13,629 --> 00:27:17,389
and external resources we should see a
fire as a container

400
00:27:17,389 --> 00:27:21,370
as a fight system actually at this is
steps traction

401
00:27:21,370 --> 00:27:25,540
which should be used when a looking at
the file

402
00:27:25,540 --> 00:27:28,950
a built myself a very silly flash

403
00:27:28,950 --> 00:27:32,080
a file which has a very complex

404
00:27:32,080 --> 00:27:35,790
I am year she of in bed that fights

405
00:27:35,790 --> 00:27:39,600
we can see it contains 15 after another
after another

406
00:27:39,600 --> 00:27:42,720
it it's just silly but it a

407
00:27:42,720 --> 00:27:46,820
it illustrates what can be achieved by

408
00:27:46,820 --> 00:27:50,560
in bedding and or using on

409
00:27:50,560 --> 00:27:54,810
and extra resource is this why should be
seen as a fight system

410
00:27:54,810 --> 00:27:58,840
in a sense now some security
considerations I'll

411
00:27:58,840 --> 00:28:03,110
try to make it not to slow here because
snot debt

412
00:28:03,110 --> 00:28:06,230
exciting now software updates of course

413
00:28:06,230 --> 00:28:10,120
a are essential but I am but they don't
protect the concealed ace

414
00:28:10,120 --> 00:28:14,100
many users summed up there update their
applications

415
00:28:14,100 --> 00:28:17,399
like myself as we have seen before

416
00:28:17,399 --> 00:28:20,570
a scripting and bite court a now

417
00:28:20,570 --> 00:28:23,658
it's better to disable in a secure
environment of course

418
00:28:23,659 --> 00:28:27,659
and could be filtered out before it
reaches look stations

419
00:28:27,659 --> 00:28:31,909
but it's not always possible as we see
ask to see later

420
00:28:31,909 --> 00:28:35,620
analysis interesting internet fights it
is possible

421
00:28:35,620 --> 00:28:39,230
a to hi check of course a request

422
00:28:39,230 --> 00:28:42,730
over HTTP a malicious

423
00:28:42,730 --> 00:28:46,330
a flash file could this could be served
instead

424
00:28:46,330 --> 00:28:50,540
of the origin impressed that one

425
00:28:50,540 --> 00:28:54,418
well a solution is of course to use
HTTPS wat

426
00:28:54,419 --> 00:28:59,419
I with the likely stuff said
certificates and

427
00:28:59,419 --> 00:29:02,560
maybe in four sets for certain on

428
00:29:02,560 --> 00:29:06,690
five types or enforce it always known

429
00:29:06,690 --> 00:29:10,869
um non digital signatures they guarantee
the region

430
00:29:10,869 --> 00:29:14,730
a file there are two types of digital
signatures

431
00:29:14,730 --> 00:29:17,770
external like when we use a program like

432
00:29:17,770 --> 00:29:21,480
open SSL GP or in bed

433
00:29:21,480 --> 00:29:25,919
signing the signing makes sense yes it
makes sense when the communication

434
00:29:25,919 --> 00:29:29,179
is insecure the media missing secure
like the Internet

435
00:29:29,179 --> 00:29:32,990
SSL can only guarantee the five comes
directly

436
00:29:32,990 --> 00:29:37,000
from a server but it tells us nothing
about the security of the file

437
00:29:37,000 --> 00:29:41,290
if the server itself which may help
already been compromised

438
00:29:41,290 --> 00:29:46,869
it is reasonable to believe that about
the security of the workstations

439
00:29:46,869 --> 00:29:51,240
use to sign a file are higher than that
of the server

440
00:29:51,240 --> 00:29:55,470
I mean this is I hope at least

441
00:29:55,470 --> 00:30:00,280
extra signatures they have a advantages

442
00:30:00,280 --> 00:30:04,320
they apply to a every file Anaheim both
the same

443
00:30:04,320 --> 00:30:08,158
for every five that this is of course a
self-evident if we have

444
00:30:08,159 --> 00:30:11,770
open SLP GP and we signed file the
signature

445
00:30:11,770 --> 00:30:15,040
will always be a in the same format for
every fine

446
00:30:15,040 --> 00:30:19,590
under the same the conse- it is a bit on
prime and practical

447
00:30:19,590 --> 00:30:23,710
because a in free for instance and it
might be confusing for

448
00:30:23,710 --> 00:30:27,510
a experienced users impractical because
it forces

449
00:30:27,510 --> 00:30:32,389
for every five to have and attached
signature

450
00:30:32,389 --> 00:30:36,349
a in bed signatures and this case the
signature is in bed

451
00:30:36,349 --> 00:30:39,800
in the fight for my itself and not an
external file

452
00:30:39,800 --> 00:30:42,899
it is practical this is the only
advantage which

453
00:30:42,899 --> 00:30:45,950
I could come up with it iz

454
00:30:45,950 --> 00:30:50,480
not always the the concert is not always
supported

455
00:30:50,480 --> 00:30:55,139
and there are many file formats which
dull don't support this at all

456
00:30:55,139 --> 00:30:58,820
its implementation specific down

457
00:30:58,820 --> 00:31:03,629
and because it uses standard
cryptographic algorithms to

458
00:31:03,629 --> 00:31:06,899
create the signature but the wait is
stored inside the five

459
00:31:06,899 --> 00:31:10,090
is totally custom because it needs to

460
00:31:10,090 --> 00:31:14,149
considered if i format itself if for
instance we are hashing the five

461
00:31:14,149 --> 00:31:17,190
we should of course ignore certain parts
a

462
00:31:17,190 --> 00:31:21,440
which contain the signature a it might
will require also the document to be

463
00:31:21,440 --> 00:31:23,310
loaded by the hand that for Best Buy

464
00:31:23,310 --> 00:31:26,840
verification if we haven't yet which
signed and you need

465
00:31:26,840 --> 00:31:30,530
about to open the PDF before Bali
baiting the signature

466
00:31:30,530 --> 00:31:34,810
it becomes kind of useless as you can
could it cannot understand

467
00:31:34,810 --> 00:31:38,260
it in innis also cumbersome to to manage
all this

468
00:31:38,260 --> 00:31:41,639
signing from a central from a
centralized a

469
00:31:41,639 --> 00:31:45,149
on points because a

470
00:31:45,149 --> 00:31:48,770
every 55 has its own for months it's all
its own rules

471
00:31:48,770 --> 00:31:51,820
and there is no wait to centrally

472
00:31:51,820 --> 00:31:54,869
a managed its

473
00:31:54,869 --> 00:31:58,869
data carriage yes this is interesting

474
00:31:58,869 --> 00:32:03,270
well there the courageous when document
issues

475
00:32:03,270 --> 00:32:07,010
to transport beat-up and this kind of
data

476
00:32:07,010 --> 00:32:11,669
can be either internal like
indiscriminate like met at the time

477
00:32:11,669 --> 00:32:16,830
or targeted a or even external like
manuel

478
00:32:16,830 --> 00:32:20,649
when we have internal data it can be in
personal information

479
00:32:20,649 --> 00:32:24,159
fights can in fact contained a
surprising amount of personal

480
00:32:24,159 --> 00:32:25,629
information

481
00:32:25,629 --> 00:32:29,740
well liked all Thor which created the
document

482
00:32:29,740 --> 00:32:33,280
or edited and the

483
00:32:33,280 --> 00:32:36,820
about this kind of information can be
trivial geolocation

484
00:32:36,820 --> 00:32:40,230
data like in J backfires we have

485
00:32:40,230 --> 00:32:43,720
a chip backfired with geolocation up

486
00:32:43,720 --> 00:32:47,530
actually it's good that there it's not
that common actually

487
00:32:47,530 --> 00:32:51,790
a.m. and this is good a but it can be
even much more

488
00:32:51,790 --> 00:32:55,119
uncanny in this case for instance
tonight

489
00:32:55,119 --> 00:32:58,320
you can see it I but we have I

490
00:32:58,320 --> 00:33:01,520
signed a CFB document in this case

491
00:33:01,520 --> 00:33:04,960
to office document and and it

492
00:33:04,960 --> 00:33:08,210
it contains the Windows version

493
00:33:08,210 --> 00:33:12,849
it was created on the office version the
application version which is the same

494
00:33:12,849 --> 00:33:16,649
the monitors the number of monitors for
using the horizontal and vertical

495
00:33:16,649 --> 00:33:18,820
resolution of our screen the collar

496
00:33:18,820 --> 00:33:22,970
Dept I mean at I don't know what's the
purpose of this state up

497
00:33:22,970 --> 00:33:27,270
up II cancer price through when I saw
this

498
00:33:27,270 --> 00:33:30,349
if you don't believe it a heads too
small but

499
00:33:30,349 --> 00:33:33,379
it you can you cannot see it but here's
the in-form

500
00:33:33,379 --> 00:33:36,800
unformatted XML which contains the
stator a

501
00:33:36,800 --> 00:33:40,300
I don't know what what they were
thinking when they put the state inside

502
00:33:40,300 --> 00:33:43,540
now after having established that there
is such

503
00:33:43,540 --> 00:33:49,389
kinda data transport transportation we
need to locate this foreign data

504
00:33:49,389 --> 00:33:53,089
I'm it is very common to upend

505
00:33:53,089 --> 00:33:56,560
date at the end of a fire about custom
data meaning

506
00:33:56,560 --> 00:34:00,040
not part of the five former but there
aren't more sophisticated cases

507
00:34:00,040 --> 00:34:03,080
like data hidden among parts of the
fight for my

508
00:34:03,080 --> 00:34:09,230
or data he s stored inside custom data
containers of the fight format itself

509
00:34:09,230 --> 00:34:13,550
a here we have a J Pak custom data

510
00:34:13,550 --> 00:34:18,080
and no if this bar

511
00:34:18,080 --> 00:34:21,500
and I if you can see it contains the
kind of data

512
00:34:21,500 --> 00:34:25,429
the contained in the file the white is
essential data

513
00:34:25,429 --> 00:34:29,129
for the Jeep back at South the gray here

514
00:34:29,129 --> 00:34:32,739
is custom data meaning data which is

515
00:34:32,740 --> 00:34:35,810
are not essential to the five in this
case its

516
00:34:35,810 --> 00:34:39,250
vendor specific data no you cannot see
it but there's

517
00:34:39,250 --> 00:34:43,089
Photoshop string inside a this data and

518
00:34:43,089 --> 00:34:47,099
it's clearly it clearly was at that buy
photoshop um

519
00:34:47,099 --> 00:34:51,419
now that the yellow is the visible the
time to text you

520
00:34:51,418 --> 00:34:55,918
now here's the same data seen from the
four-month

521
00:34:55,918 --> 00:34:59,589
perspective it is a here

522
00:34:59,589 --> 00:35:02,859
it uses an app marker up marker is

523
00:35:02,859 --> 00:35:06,330
on yes debt markets

524
00:35:06,330 --> 00:35:10,259
the the way of of the in bed in custom
vendor

525
00:35:10,260 --> 00:35:13,730
a specific data inside the check back

526
00:35:13,730 --> 00:35:17,710
okay here we have a I was quite
surprised when I opened

527
00:35:17,710 --> 00:35:22,160
a a holiday GA Tech II did during the
holidays

528
00:35:22,160 --> 00:35:25,680
because I don't often see it but at the
end of this but there's a very

529
00:35:25,680 --> 00:35:29,060
red thinline which marks foreign data

530
00:35:29,060 --> 00:35:32,970
red is foreign data which means that is
not part of the 54 mint

531
00:35:32,970 --> 00:35:36,550
so what they did is look at the data I
recognized it

532
00:35:36,550 --> 00:35:40,460
being and the and in bed the Jeep back
because

533
00:35:40,460 --> 00:35:43,599
it started with the 8 the 8

534
00:35:43,599 --> 00:35:48,030
this this isn't is to initial marker for
average it back

535
00:35:48,030 --> 00:35:52,200
the it was missing a press tix death
threat perfect side dump the data

536
00:35:52,200 --> 00:35:55,420
25 I either the profits they open it and
the sister

537
00:35:55,420 --> 00:35:59,290
up image appended to the file so it's
just a thumbnail

538
00:35:59,290 --> 00:36:03,450
of the original image but what is
strange is that

539
00:36:03,450 --> 00:36:08,129
usually thumbnails out in bed interject
fights using the exit former Texas

540
00:36:08,130 --> 00:36:08,950
former

541
00:36:08,950 --> 00:36:12,069
its a specified using the up one marker
in

542
00:36:12,070 --> 00:36:16,980
inside the gym interject backs and it's
possible to insert geolocation inside

543
00:36:16,980 --> 00:36:19,070
the thumbnail itself so it's

544
00:36:19,070 --> 00:36:23,230
kind of very um useful to know what the
FI contains

545
00:36:23,230 --> 00:36:26,880
in it's in bed fights and here we have

546
00:36:26,880 --> 00:36:30,320
at PDF carry carrying now we're on

547
00:36:30,320 --> 00:36:35,550
at its here we have the red data which
is the foreign data

548
00:36:35,550 --> 00:36:39,410
to a trained eye and it's very easy to
recognize that it's to add that in beds

549
00:36:39,410 --> 00:36:44,450
a sort Windows execute able an

550
00:36:44,450 --> 00:36:48,630
it is easy on 22 extract that the
Christian key for the sexy

551
00:36:48,630 --> 00:36:51,680
exhort execute able because the initial

552
00:36:51,680 --> 00:36:56,930
part of up PA about 160 people is full
of zero so it was easy to the

553
00:36:56,930 --> 00:37:00,560
to extract the key the we'd equipped it
and here we have the

554
00:37:00,560 --> 00:37:04,310
the wind is executed both a
steganography I'm not an expert

555
00:37:04,310 --> 00:37:08,380
against iraq but they need to mention it
because there are some topics

556
00:37:08,380 --> 00:37:11,619
the which are related to the I wanna
hand

557
00:37:11,619 --> 00:37:15,210
and with a foreign data it's

558
00:37:15,210 --> 00:37:19,080
possible to see what's hidden inside the
file because

559
00:37:19,080 --> 00:37:22,920
well it's different in style in which
they got other shit because

560
00:37:22,920 --> 00:37:27,820
it the CPI lot which is hidden is hidden
using the date of the file itself

561
00:37:27,820 --> 00:37:31,320
a.m. the secret data is from

562
00:37:31,320 --> 00:37:34,750
up it is on purpose don't like detection
of course

563
00:37:34,750 --> 00:37:39,150
um data could be hidden inside the
recurring data elements of the hosting

564
00:37:39,150 --> 00:37:40,790
file or another method

565
00:37:40,790 --> 00:37:45,750
is to change the frequency all for the
order of something to encode data

566
00:37:45,750 --> 00:37:49,530
there are many other ways but I can't
list them all

567
00:37:49,530 --> 00:37:53,900
the and some points about second
overtime this is important to not

568
00:37:53,900 --> 00:37:58,920
that hidden data must be much less than
the date of the host file

569
00:37:58,920 --> 00:38:02,380
because of otherwise it with the evident
that that the data is

570
00:38:02,380 --> 00:38:08,510
a hiding something steganography is
expensive in terms of disk space

571
00:38:08,510 --> 00:38:12,460
and a and this is why common carriers
for

572
00:38:12,460 --> 00:38:16,359
steganography the steganographic a dot
data

573
00:38:16,359 --> 00:38:19,770
army defies the are already large here
we have a

574
00:38:19,770 --> 00:38:23,820
bit not containing a Windows execute a
bull and the

575
00:38:23,820 --> 00:38:27,500
in it uses a very very very basic

576
00:38:27,500 --> 00:38:31,930
a steganographic 10 technique it
basically just changes the least

577
00:38:31,930 --> 00:38:33,169
significant bit

578
00:38:33,170 --> 00:38:37,130
of every bite in RGB collar component

579
00:38:37,130 --> 00:38:41,160
a this means that every caller is just
slightly modified

580
00:38:41,160 --> 00:38:44,160
compared to the original one

581
00:38:44,160 --> 00:38:47,549
I N if you can see the region and the
carrier

582
00:38:47,550 --> 00:38:50,770
a that the same I

583
00:38:50,770 --> 00:38:54,240
the actually the confronted them

584
00:38:54,240 --> 00:38:57,970
even on the big screen its impossible to
notice just by looking at them

585
00:38:57,970 --> 00:39:01,070
the way to detect this is to a use

586
00:39:01,070 --> 00:39:04,480
some analyzing techniques to at least
significant bit technique is

587
00:39:04,480 --> 00:39:07,720
a quick can be scored by some on

588
00:39:07,720 --> 00:39:11,180
by analyzing the noise in the picture
again

589
00:39:11,180 --> 00:39:15,569
detection is a are usually statistical
methods involved

590
00:39:15,570 --> 00:39:18,800
the fire the fund might look suspicious
if the output

591
00:39:18,800 --> 00:39:23,000
of various algorithms is considering the
considerably different from the output

592
00:39:23,000 --> 00:39:25,200
of many normal fights at the same time
this means

593
00:39:25,200 --> 00:39:29,020
we have a large amount of I'd switch on
which are very common

594
00:39:29,020 --> 00:39:32,520
we output we from

595
00:39:32,520 --> 00:39:35,640
you some other items on them and we
confront

596
00:39:35,640 --> 00:39:38,879
the output with output of the

597
00:39:38,880 --> 00:39:42,150
of a particular five just to see if the
if they are

598
00:39:42,150 --> 00:39:46,030
and like if there is an anomaly

599
00:39:46,030 --> 00:39:49,700
let's say okay a just in the case of
embed it fires

600
00:39:49,700 --> 00:39:53,410
a statistical analysis can only point in
the direction of something

601
00:39:53,410 --> 00:39:57,089
and it's not conclusive of course

602
00:39:57,089 --> 00:40:00,109
and one less thing it is very important
to process the form not

603
00:40:00,109 --> 00:40:04,049
before performing analysis doing just
book analysis on a file

604
00:40:04,050 --> 00:40:07,640
s can of it brings up

605
00:40:07,640 --> 00:40:11,279
it results in false positives and

606
00:40:11,280 --> 00:40:15,060
or may even not the detect something

607
00:40:15,060 --> 00:40:18,400
an embedded devices now the use

608
00:40:18,400 --> 00:40:22,410
often but the devices has increased in
recent years

609
00:40:22,410 --> 00:40:26,609
always more and on only just only
recently to

610
00:40:26,609 --> 00:40:29,630
the jailbreak for the iPhone and iPod
was

611
00:40:29,630 --> 00:40:33,210
available as a PDF the jailbreak exploit

612
00:40:33,210 --> 00:40:36,490
21 abilities the first one a lot to
escape

613
00:40:36,490 --> 00:40:40,230
the sandbox the use and not sandbox for
IRS implications

614
00:40:40,230 --> 00:40:43,890
and second in our ability allowed
execution of show called

615
00:40:43,890 --> 00:40:47,259
in caramel so it uses this to win our
abilities

616
00:40:47,260 --> 00:40:51,619
to a gain complete control

617
00:40:51,619 --> 00:40:55,079
now a.m. what this interesting about
this is that

618
00:40:55,079 --> 00:40:59,560
the PDF format with introduced as a
replacement for pasta whip

619
00:40:59,560 --> 00:41:03,150
postscript what's up programming
language and the PDF

620
00:41:03,150 --> 00:41:06,490
a was different because it is tech
scripted is this

621
00:41:06,490 --> 00:41:09,730
a it is a pictorial for months but it is
descriptive

622
00:41:09,730 --> 00:41:13,109
it doesn't have a instructions but what

623
00:41:13,109 --> 00:41:16,500
is ironic about this if that is that PDS
can contain

624
00:41:16,500 --> 00:41:19,780
phones which aren't descriptive but are

625
00:41:19,780 --> 00:41:23,579
programs written in PAS stripped

626
00:41:23,579 --> 00:41:26,869
here we have a t1 font a

627
00:41:26,869 --> 00:41:32,420
which contains bytecode

628
00:41:32,420 --> 00:41:36,410
okie let's take a glance at the exploit

629
00:41:36,410 --> 00:41:39,618
um you cannot see it but the

630
00:41:39,619 --> 00:41:43,400
the what we have here is the bike called
off to exploit

631
00:41:43,400 --> 00:41:46,859
and we have widening because 8 what
happens it

632
00:41:46,859 --> 00:41:49,859
it pushes to the stack I

633
00:41:49,859 --> 00:41:56,049
impossible number of I arguments for a
specific function and the number is

634
00:41:56,050 --> 00:41:59,400
incredibly high and this is the

635
00:41:59,400 --> 00:42:02,490
mean the purpose of this is to because

636
00:42:02,490 --> 00:42:05,540
what happens is this this value is not
verified

637
00:42:05,540 --> 00:42:08,720
it is not checked and it is

638
00:42:08,720 --> 00:42:11,990
per used to perform pointer arithmetic

639
00:42:11,990 --> 00:42:15,390
so what happens is that the stack
pointer for this kind of

640
00:42:15,390 --> 00:42:18,598
bite court is iron

641
00:42:18,599 --> 00:42:22,750
moved to a region of memory and which
should not be accessed

642
00:42:22,750 --> 00:42:26,270
and the problem later on a modifies this

643
00:42:26,270 --> 00:42:29,770
region of memory if you are interested

644
00:42:29,770 --> 00:42:32,829
in a complete analysis you can visit

645
00:42:32,829 --> 00:42:37,400
URL a bill

646
00:42:37,400 --> 00:42:40,420
well how many users know that opening a
PDF

647
00:42:40,420 --> 00:42:43,570
when what having JavaScript completely
disabled

648
00:42:43,570 --> 00:42:48,099
at mike in bowl executing poss quipped
instructions

649
00:42:48,099 --> 00:42:51,119
and also what is interesting to to
consider is

650
00:42:51,119 --> 00:42:55,400
the security and the necessity of t1
funds

651
00:42:55,400 --> 00:42:58,940
from a a security point of you this is
from the

652
00:42:58,940 --> 00:43:02,760
official Adobe specification because
Type 1 fonts

653
00:43:02,760 --> 00:43:06,310
were originally produced and were
carefully checked only we did

654
00:43:06,310 --> 00:43:09,759
within adult systems type 1 built share
was designed

655
00:43:09,760 --> 00:43:14,020
with the expectation that only ever free
type 1 phone programs

656
00:43:14,020 --> 00:43:17,619
would be presented to it consequently
type 1 pitcher

657
00:43:17,619 --> 00:43:21,380
does not protect itself against data
inconsistently

658
00:43:21,380 --> 00:43:24,660
inconsistencies and other problems

659
00:43:24,660 --> 00:43:30,029
so in the in the specification they just
say well

660
00:43:30,030 --> 00:43:33,670
they should be correct if they arent not

661
00:43:33,670 --> 00:43:36,890
its your business basically I

662
00:43:36,890 --> 00:43:40,560
and the necessity this is very
interesting

663
00:43:40,560 --> 00:43:45,119
any of you can can just guess the reason
why

664
00:43:45,119 --> 00:43:48,270
t1 phones use up

665
00:43:48,270 --> 00:43:55,270
our programs and not use a descriptive
format like PDF itself

666
00:43:55,440 --> 00:43:58,619
II I couldn't come up with the reason

667
00:43:58,619 --> 00:44:01,940
just like you because its very very

668
00:44:01,940 --> 00:44:06,500
crazy I mean it's just because of
copyright

669
00:44:06,500 --> 00:44:09,800
programs can be copyrightable fonts

670
00:44:09,800 --> 00:44:13,480
if they are the script like it like a
bit much like an image incense

671
00:44:13,480 --> 00:44:18,460
its sooo it's not my personal opinion it
says so and official Adobe specification

672
00:44:18,460 --> 00:44:22,060
since Type 1 fonts are expressed as
computer programs

673
00:44:22,060 --> 00:44:25,420
they are copyrightable as in any other
computer software

674
00:44:25,420 --> 00:44:29,329
for some time the copyright status of
some types of typeface software

675
00:44:29,329 --> 00:44:34,210
was unclear since typeface designs are
not copyrightable in the United States

676
00:44:34,210 --> 00:44:37,349
because Type 1 fonts are computer
programs

677
00:44:37,349 --> 00:44:40,630
rather than mere data depicting a
typeface

678
00:44:40,630 --> 00:44:44,589
they are clearly copyrightable

679
00:44:44,589 --> 00:44:48,240
this is just a reason now ironically

680
00:44:48,240 --> 00:44:51,440
dq the new hot thing a

681
00:44:51,440 --> 00:44:54,680
for Manuel on lists and a

682
00:44:54,680 --> 00:44:58,049
this kind of guys is using this

683
00:44:58,050 --> 00:45:01,339
a very similar infection vector still a
thong

684
00:45:01,339 --> 00:45:04,970
in this case it's true type true type is
it fun but

685
00:45:04,970 --> 00:45:11,339
which uses bytecode

686
00:45:11,339 --> 00:45:15,640
now the we have to consider also the
difference between the differences

687
00:45:15,640 --> 00:45:16,339
between

688
00:45:16,339 --> 00:45:21,529
people's tablets and smartphones they
differ plate greatly from court personal

689
00:45:21,530 --> 00:45:23,550
computers because

690
00:45:23,550 --> 00:45:27,700
they have hardware resources which %uh
every personal computer may have like

691
00:45:27,700 --> 00:45:30,780
GPS microphone but you can write cetera

692
00:45:30,780 --> 00:45:35,070
they are they are on always carried
around

693
00:45:35,070 --> 00:45:40,010
and the often they have a the fourth
environment like I US

694
00:45:40,010 --> 00:45:44,520
and they are used for telephone an SMS
traffic

695
00:45:44,520 --> 00:45:48,910
if we put ourselves in the mindset of a
rootkit developer

696
00:45:48,910 --> 00:45:51,920
the fourth environment Gandhi's that

697
00:45:51,920 --> 00:45:55,089
no third-party security solution will be

698
00:45:55,089 --> 00:45:58,690
their to block us like an antivirus or
firewall

699
00:45:58,690 --> 00:46:02,369
so it will also a guarantee us that will
have

700
00:46:02,369 --> 00:46:05,859
compatibility if I make my rootkit work

701
00:46:05,859 --> 00:46:09,819
on a certain I US version it will work

702
00:46:09,819 --> 00:46:14,130
on every IRS version of Singh a number

703
00:46:14,130 --> 00:46:20,259
a GPS microphone be a comer un telefon
are great ways to spy a person

704
00:46:20,259 --> 00:46:25,710
and of course portability means that the
target will always carry the device

705
00:46:25,710 --> 00:46:30,349
with him and at close distance common
security precautions

706
00:46:30,349 --> 00:46:34,700
on embedded devices is that a
applications are sandboxed

707
00:46:34,700 --> 00:46:37,930
and that digital signature isn't forced

708
00:46:37,930 --> 00:46:41,569
for applications this are very good

709
00:46:41,569 --> 00:46:44,759
security measures but it also also means

710
00:46:44,759 --> 00:46:47,900
decked some the use

711
00:46:47,900 --> 00:46:50,940
of non execute people fives a

712
00:46:50,940 --> 00:46:54,119
for a infection and other

713
00:46:54,119 --> 00:46:57,119
a malicious intense ist a

714
00:46:57,119 --> 00:47:01,470
very very appealable

715
00:47:01,470 --> 00:47:06,269
a.m. because in the escape control

716
00:47:06,269 --> 00:47:10,000
now the how want to thank you for your
attention

717
00:47:10,000 --> 00:47:14,970
and they want to thank also some sources
which provided me with my work for me

718
00:47:14,970 --> 00:47:15,779
death

719
00:47:15,779 --> 00:47:19,400
my friends is that the bonfire conduct
you don't know them looks book don't

720
00:47:19,400 --> 00:47:19,819
come

721
00:47:19,819 --> 00:47:23,710
and offensive computing and if you want
to follow updates

722
00:47:23,710 --> 00:47:28,869
on all reach search a about the topic
you can visit our company blog

723
00:47:28,869 --> 00:47:29,940
thank you to it

