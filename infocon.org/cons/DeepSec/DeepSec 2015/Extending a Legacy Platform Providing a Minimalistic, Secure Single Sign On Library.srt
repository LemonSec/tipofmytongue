1
00:00:00,000 --> 00:00:06,549
thank you very much hello and welcome to
our talk which is about extending a

2
00:00:06,549 --> 00:00:11,780
legacy platform providing a minimalistic
secure single sign-on library but before

3
00:00:11,780 --> 00:00:19,049
I explain what that actually means let
me introduce ourselves we here in behalf

4
00:00:19,050 --> 00:00:24,990
of the research students Astra russians
Gesellschaft more precisely for the

5
00:00:24,990 --> 00:00:29,419
studio mic learning and information
environments so the title of the studio

6
00:00:29,420 --> 00:00:34,250
already suggests that this has usually
nothing to do with security research

7
00:00:34,250 --> 00:00:40,489
actually my research field israelis
technology-enhanced learning Sebastian

8
00:00:40,489 --> 00:00:50,300
is a student at Kepler University Linz
and we did a project together which was

9
00:00:50,300 --> 00:00:57,519
knowledge man management platform and we
had to extend an existing platform

10
00:00:57,520 --> 00:01:08,330
seamlessly in the course of this project
we came across a problem which is the

11
00:01:08,330 --> 00:01:14,400
reason why we're here this problem was a
security problem and we want to present

12
00:01:14,400 --> 00:01:24,229
this like real world example the problem
was that the system that was given was a

13
00:01:24,229 --> 00:01:30,970
legacy system with approximately 12,000
existing accounts which continuously

14
00:01:30,970 --> 00:01:42,350
change so that new users registered or
others were deleted and authentication

15
00:01:42,350 --> 00:01:50,250
credentials changed it was a close is a
closed registration system so there's no

16
00:01:50,250 --> 00:01:56,530
registration and we could not implement
the solution

17
00:01:57,340 --> 00:02:03,329
directly in this to extend the system
directly so we had to use a separate

18
00:02:03,329 --> 00:02:08,090
system and integrate those systems we
are seeing a sign on with the use of the

19
00:02:08,090 --> 00:02:14,950
existing accounts to authenticate users
to the third party apps in this case our

20
00:02:14,950 --> 00:02:21,518
knowledge management platform but we as
a leader will explain chosen approach

21
00:02:21,519 --> 00:02:25,950
this more general so that eventually
future third party apps can also be

22
00:02:25,950 --> 00:02:35,980
integrated so single sign-on is not very
new top again there are a lot so there

23
00:02:35,980 --> 00:02:44,670
has already been a lot of thought into
this and I think especially SAML should

24
00:02:44,670 --> 00:02:56,260
be really well known there several
standards and first of all let me just

25
00:02:56,260 --> 00:03:04,130
talk about those standards briefly so we
get a good idea why we chose to not use

26
00:03:04,130 --> 00:03:11,579
those standards so SAML security
assertion markup language actually

27
00:03:11,579 --> 00:03:14,510
describes that the documents

28
00:03:14,510 --> 00:03:21,870
standard is used for the security token
its claims based authentication which

29
00:03:21,870 --> 00:03:28,370
works basically in the way just briefly
explains you have an identity provided

30
00:03:28,370 --> 00:03:36,239
the issues and the surgeon which is
digitally signed to program to provide

31
00:03:36,239 --> 00:03:42,549
authentication and message integrity and
the service provider who trusts the IDP

32
00:03:42,549 --> 00:03:47,870
validates the signature and France
authorization based on these assertions

33
00:03:49,220 --> 00:03:55,490
go more into detail as probably anyone
here we'll know in

34
00:03:55,490 --> 00:04:04,730
more detail what family is all about and
about the many possibilities what you

35
00:04:04,730 --> 00:04:17,988
can do with some four months of say
which covers a part of what sample is

36
00:04:17,988 --> 00:04:26,690
intended to is dropped Jason Webb tokens
and it's a more compact also have

37
00:04:26,690 --> 00:04:31,150
representation for claims it is
self-contained so you have a header

38
00:04:31,150 --> 00:04:38,169
stating things about the methods used
then you have to claim said and the

39
00:04:38,170 --> 00:04:45,190
signature which verifies the claim ok be
used to verify the claim it is less

40
00:04:45,190 --> 00:04:50,920
flexible but much simpler than sample it
would have been much more appropriate

41
00:04:50,920 --> 00:05:03,420
than SAML for our use case it is used by
2.0 and idk like for instance

42
00:05:06,420 --> 00:05:16,650
the problems or say what we found out
about standards implementation is that

43
00:05:16,650 --> 00:05:22,570
it's always easy to implement a service
provider once you have an identity of

44
00:05:22,570 --> 00:05:27,890
server running so it's easy cheap you
have many libraries and frameworks to

45
00:05:27,890 --> 00:05:35,000
choose from and you just go ahead and
attach your service to existing identity

46
00:05:35,000 --> 00:05:43,990
provider by using one of those
frameworks and libraries but what's not

47
00:05:43,990 --> 00:05:50,590
that easy is to implement and identity
providers identity providers that comply

48
00:05:50,590 --> 00:05:58,419
to the standards need to fulfill a lot
of requirements and also if you're not

49
00:05:58,420 --> 00:06:06,310
doing it properly that leads to security
vulnerabilities and that's a problem

50
00:06:06,310 --> 00:06:15,330
they are that they tend to be very heavy
weight complex and most of the things

51
00:06:15,330 --> 00:06:20,260
you find our identity providers are full
software solution so you get a

52
00:06:20,260 --> 00:06:26,060
stand-alone Identity Server and you can
like have your identity service manager

53
00:06:26,060 --> 00:06:34,840
identities and then have a lot of
service providers so generally speaking

54
00:06:34,840 --> 00:06:39,909
standards tragic cover almost every use
case intent to get there for a bit

55
00:06:39,910 --> 00:06:46,340
complex and Paul came in our case we
just wanted to add the basic ability the

56
00:06:46,340 --> 00:06:52,700
basic idea to an existing system service
a legacy system needed to be our

57
00:06:52,700 --> 00:06:58,260
identity provider in this case
previously

58
00:06:59,670 --> 00:07:07,690
the company were doing this project for
had no single sign-on they used a

59
00:07:07,690 --> 00:07:12,640
different approach to authorize the
party services they had a back-end web

60
00:07:12,640 --> 00:07:19,979
service ready just community whether it
is a valid user and the password fits

61
00:07:19,980 --> 00:07:27,200
for this user so they're basically
saying I have your person claiming that

62
00:07:27,200 --> 00:07:32,520
he's the person then providing that
password is this correct and the web

63
00:07:32,520 --> 00:07:34,450
service basically said yes or no

64
00:07:34,450 --> 00:07:43,330
that leads to some problems its
directors but they could just use static

65
00:07:43,330 --> 00:07:49,390
API key wants to know the key you can do
whatever you want with the service the

66
00:07:49,390 --> 00:07:53,990
password is sending clear text and you
have no control over what the third

67
00:07:53,990 --> 00:08:00,420
party app does what the password so that
you can store the password and use the

68
00:08:00,420 --> 00:08:09,300
legacy system on behalf of different
user so this was not an option for us

69
00:08:09,300 --> 00:08:15,730
and furthermore it was not seem less as
its not single sign-on are chosen

70
00:08:15,730 --> 00:08:23,790
approach used to basic idea of of of the
existing standards but only selected

71
00:08:23,790 --> 00:08:31,970
parts so we could focus on what's
essential its claim based we have a

72
00:08:31,970 --> 00:08:41,229
simple issue by our custom identity
provider this claim is then signed and

73
00:08:41,229 --> 00:08:48,830
encrypted we use the post Buying to
transfer this claim

74
00:08:48,830 --> 00:08:56,850
I will show the flow in a minute and
thereby provide an additional security

75
00:08:56,850 --> 00:09:06,810
layer on top of tell us so this is the
authentication flower looks like you

76
00:09:06,810 --> 00:09:15,040
could read it it starts here with the
user who types in the Europa of the

77
00:09:15,040 --> 00:09:20,810
service the browser opens to service
provider's site or service provider's

78
00:09:20,810 --> 00:09:28,339
site creates acclaim request which
contains nonce for later

79
00:09:28,340 --> 00:09:37,360
prevention of replay attacks this
requests is claimed requests with

80
00:09:37,360 --> 00:09:43,220
redirected to the IDP which Jackson
there is already the users already

81
00:09:43,220 --> 00:09:53,210
locked in the IDP as talk is in our case
the legacy system and if the users log

82
00:09:53,210 --> 00:09:56,090
in or if the user's not logged in

83
00:09:56,090 --> 00:10:00,980
he has to enter the corrections he's
displayed with the president's place a

84
00:10:00,980 --> 00:10:09,570
login form in the monster users logged
in the identity provided issues acclaim

85
00:10:09,570 --> 00:10:18,010
and redirect the browser redirects the
claim to the service and the claim is

86
00:10:18,010 --> 00:10:22,750
validated on the service provider side
and if the validation fails to get an

87
00:10:22,750 --> 00:10:28,370
indication failure message and if the
claims mileage

88
00:10:28,370 --> 00:10:37,460
you get a dedicated you get your
privileges granted and you're signing ok

89
00:10:37,460 --> 00:10:46,890
that was brief overview and now we like
to go into the details of the

90
00:10:46,890 --> 00:10:50,250
implementation their head over to my
colleague as a person

91
00:11:40,529 --> 00:11:48,899
part of general introduction of our
problem I will come to do more concrete

92
00:11:48,899 --> 00:11:55,970
stuff so how to actually we did to
implementation first step when the user

93
00:11:55,970 --> 00:12:02,220
is at the service provider where you
actually want to consumer services are

94
00:12:02,220 --> 00:12:07,449
very first generates random one-time
secret for symmetric encryption

95
00:12:07,449 --> 00:12:13,550
so-called months there has to be a
head-to-toe user session to detect

96
00:12:13,550 --> 00:12:23,599
replay a text so that sucks about knows
exactly which has which nuts second step

97
00:12:23,600 --> 00:12:29,550
is to encrypt announce the return to
public if the IRA P so that only and

98
00:12:29,550 --> 00:12:34,269
really only did I repeat should be able
to take reporters' finance kept secret

99
00:12:34,269 --> 00:12:40,649
and only available for the IDP outside
library you sent announced the return

100
00:12:40,649 --> 00:12:50,579
both encrypted too daddy Pete now surely
do a snippet half how you use library

101
00:12:50,579 --> 00:12:57,609
that we developed as you can see is it
implemented in PHP but it's not a big

102
00:12:57,610 --> 00:13:03,149
deal is implemented in any other
languages like C sharp are but you

103
00:13:03,149 --> 00:13:08,379
prefer so basically you have to
instantiate a service provider and call

104
00:13:08,379 --> 00:13:14,519
the method prepared redirect to this
method you just passed parameters the

105
00:13:14,519 --> 00:13:15,490
public key

106
00:13:15,490 --> 00:13:21,670
52 p.m. so that any provider and the URL
you'd like to use it to call afterwards

107
00:13:21,670 --> 00:13:30,389
he or she has authenticated identity
provider as a result you get a spectator

108
00:13:30,389 --> 00:13:37,319
comment you can see it contains
announced in clear decrypted nonce and

109
00:13:37,319 --> 00:13:40,759
encrypted return URL as I said before

110
00:13:40,759 --> 00:13:45,699
unencrypted months has to be kept in the
session so that later on the service

111
00:13:45,699 --> 00:13:48,319
provider recognizes

112
00:13:48,320 --> 00:13:51,610
user checks than answers

113
00:13:51,610 --> 00:13:58,870
encrypted nonce think rapid return URL
are then passed to the identity provider

114
00:13:58,870 --> 00:14:05,530
which leads us to the second so now we
are at the identity provider in our case

115
00:14:05,530 --> 00:14:10,069
it is the legacy system were at the user
can authenticate with username and

116
00:14:10,070 --> 00:14:18,420
password successfully logged and type in
the username password and it's correct

117
00:14:18,420 --> 00:14:24,030
our library comes back into game first
you decrypt the nonce and the return URL

118
00:14:24,030 --> 00:14:32,130
then identity provider you select the
information you'd want to pass on to the

119
00:14:32,130 --> 00:14:36,460
service provider based on the URL that
you decrypt it so you could have

120
00:14:36,460 --> 00:14:44,950
multiple service providers and pass on
different information as I said he got

121
00:14:44,950 --> 00:14:50,470
his information and you calculate the
signature out of it too late to make it

122
00:14:50,470 --> 00:14:58,840
a gift to self about our opportunity to
check whether or not danny equipped with

123
00:14:58,840 --> 00:14:59,980
denounced

124
00:14:59,980 --> 00:15:04,900
symmetric encryption and finally
encrypted announced with the public

125
00:15:04,900 --> 00:15:11,449
after service provider so I can only the
service provider should be able to

126
00:15:11,450 --> 00:15:19,260
decrypt announced because it is as a
medically encrypted after doing dirt

127
00:15:19,260 --> 00:15:26,780
outside the library you sent signature
dance and act reproduce info back to the

128
00:15:26,780 --> 00:15:29,780
return URL that was passed

129
00:15:31,040 --> 00:15:36,329
so again how to use the library like
before and service provider you

130
00:15:36,329 --> 00:15:41,079
instantiate identity provider and you
call just one single method prepared

131
00:15:41,079 --> 00:15:46,670
redirect you pass on the private key of
the identity provider so legacy system

132
00:15:46,670 --> 00:15:51,290
and the public key after service
provider system that once consumed the

133
00:15:51,290 --> 00:15:52,939
Commission

134
00:15:52,940 --> 00:16:00,139
Jason encoded using information about
the user depending on the encrypted

135
00:16:00,139 --> 00:16:08,160
number and encrypt and decrypt that
return URL output of this method is

136
00:16:08,160 --> 00:16:13,939
again an associative array containing
the encrypted dance encrypted using into

137
00:16:13,940 --> 00:16:19,769
signature and returning all the first
three are sent back to the service

138
00:16:19,769 --> 00:16:23,920
provider the letter is just used to for
what

139
00:16:23,920 --> 00:16:31,579
backed information that's so often
indicated at identity provider and we

140
00:16:31,579 --> 00:16:40,589
are back at the service provider the
first step is decrypted knots then you

141
00:16:40,589 --> 00:16:46,240
have to check whether the National is
equal to announce that has been passed

142
00:16:46,240 --> 00:16:53,699
from the Identity Provider after two
matches everything is fine if not just

143
00:16:53,699 --> 00:17:01,529
the second step decrypt using firm with
the past months in prison and then have

144
00:17:01,529 --> 00:17:06,040
to check tested using food me to
signature or has something been modified

145
00:17:06,040 --> 00:17:13,899
so that's basically it to method returns
to use in food service provider wants to

146
00:17:13,900 --> 00:17:20,709
have a last time how did you use this
again is just instantiated service

147
00:17:20,709 --> 00:17:23,880
provider and call the other method

148
00:17:23,880 --> 00:17:30,640
authentication past two keys one public
IP private key from the service provider

149
00:17:31,309 --> 00:17:37,559
remembered not a study session encrypted
nuns and encrypted using and also the

150
00:17:37,559 --> 00:17:40,490
signature passed by the identity provide

151
00:17:40,490 --> 00:17:46,010
over the result of this method that is
either chase planes to use information

152
00:17:46,010 --> 00:17:49,790
or it returns false about something went
wrong

153
00:17:54,840 --> 00:17:59,830
understanding we have preferred prepared
some life Timo

154
00:18:04,490 --> 00:18:13,610
legacy system that allows a user to
login register and make some changes so

155
00:18:13,610 --> 00:18:27,889
ever just register you use a cult do you
know do you know some profile picture

156
00:18:27,890 --> 00:18:33,929
and info about me

157
00:18:37,559 --> 00:18:43,928
we are they distort at the legacy
systems the Identity Provider looking

158
00:18:43,929 --> 00:18:46,929
out

159
00:18:49,340 --> 00:19:00,439
which you will see its modern and it
just reuse the old legacy platform to

160
00:19:00,440 --> 00:19:10,090
get better understanding what is
happening at work network

161
00:19:21,140 --> 00:19:36,830
platform and want to sign in with your
legs apart from and you can see ya at

162
00:19:36,830 --> 00:19:40,639
the parameters we have passed by like we
discussed before

163
00:19:41,160 --> 00:19:47,130
encrypt and decrypt the return URL so I
logged in

164
00:19:53,610 --> 00:20:03,240
already content here you have about me
and the picture so it obviously worked

165
00:20:03,240 --> 00:20:09,910
what has been going on behind the scenes
we have been redirected to an extent PHP

166
00:20:09,910 --> 00:20:19,700
web up this was called back URL and
dance and encrypted user info as well as

167
00:20:19,700 --> 00:20:23,090
per signature so everything worked fine

168
00:20:23,090 --> 00:20:35,370
well that was all I could even result in
conclusion so during our pro cracked we

169
00:20:35,370 --> 00:20:39,770
developed a minimal single sign-on
library which is as you can see here

170
00:20:39,770 --> 00:20:46,210
really very minimal it's not even 300
lines of code and if you take a side

171
00:20:46,210 --> 00:20:48,750
blank lines and comments

172
00:20:48,750 --> 00:20:54,179
it is even less if you like to you can
have a look at it at your own which is

173
00:20:54,179 --> 00:20:55,970
displayed on the screen

174
00:20:55,970 --> 00:21:06,160
yeah I hope somebody will use it or take
it as a chance to improve systems that

175
00:21:06,160 --> 00:21:14,470
are their conclusions single sign-on
does not need to be ahead so to get a

176
00:21:14,470 --> 00:21:27,830
clean solution it is enough to do the
same guidelines or general yeah just

177
00:21:27,830 --> 00:21:32,428
some guidelines or standards and you get
clean solution with reasonable have

178
00:21:32,429 --> 00:21:38,500
toward election system as a debate is
feasible and also reasonable because

179
00:21:38,500 --> 00:21:44,610
building up system from scratch is much
more accustomed to intensive then

180
00:21:44,610 --> 00:21:50,219
extending a platform black we have
presented here and use it as a identity

181
00:21:50,220 --> 00:21:56,480
provider I hope I didn't forget anything
like to hear some questions thank you

182
00:22:36,290 --> 00:22:54,540
you can attack and break dealers
security as well so the costs were

183
00:22:54,540 --> 00:23:07,420
recent of all it just provides an extra
layer of security necessary to the less

184
00:23:07,420 --> 00:23:16,330
implemented as it was just didn't really
cost performance or so it's still work

185
00:23:16,330 --> 00:23:22,710
and we just decided to do that to add an
extra layer of security

186
00:23:31,440 --> 00:23:34,440
questions

187
00:23:35,200 --> 00:23:45,100
myself did you think about enforcing in
some kind of way during a transition to

188
00:23:45,100 --> 00:23:51,418
get rid of the legacy system sometime in
the future cuz I like kind of like the

189
00:23:51,419 --> 00:24:01,750
idea of single sign-on usually users
like this somehow makes me think how

190
00:24:01,750 --> 00:24:07,070
long is this legacy system gonna stay
even longer there there any thoughts you

191
00:24:07,070 --> 00:24:17,389
don't think that you can answer this in
general in a concrete example it's not

192
00:24:17,389 --> 00:24:18,939
our responsibility

193
00:24:18,940 --> 00:24:27,870
how long legacy systems state is kept
alive we just have to provide hopefully

194
00:24:27,870 --> 00:24:37,439
secure solution in this special case we
know the legacy system will be around

195
00:24:37,440 --> 00:24:43,070
quite some time because it's the
organization so today is not the

196
00:24:43,070 --> 00:24:53,220
appropriate organizational has very
limited budget and it was so it was a

197
00:24:53,220 --> 00:24:56,440
one-time investment in the system and
they have it and they will have it

198
00:24:56,440 --> 00:25:00,610
around like I'm sure they haven't years
as well so

