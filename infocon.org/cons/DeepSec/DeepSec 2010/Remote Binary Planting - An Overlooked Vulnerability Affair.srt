1
00:00:01,040 --> 00:00:04,770
hi guys I'm it's a classic I'm here to
tell you a story

2
00:00:04,770 --> 00:00:08,580
the store is going to be about
vulnerability class that

3
00:00:08,580 --> 00:00:11,780
our company has research for almost two
years now

4
00:00:11,780 --> 00:00:15,248
and it's called binary planting and you
can also

5
00:00:15,249 --> 00:00:20,080
hear from make your evita under names of
dr. hijacking dealers

6
00:00:20,080 --> 00:00:24,349
think the preloading is secure library
loading and

7
00:00:24,349 --> 00:00:27,359
many other names so just special hand
who is

8
00:00:27,359 --> 00:00:30,980
ever heard of any of these terms
excellent

9
00:00:30,980 --> 00:00:34,510
this means we're doing some job
correctly

10
00:00:34,510 --> 00:00:39,010
in raising awareness about this
vulnerability soon this vulnerability is

11
00:00:39,010 --> 00:00:40,570
very interesting to us

12
00:00:40,570 --> 00:00:44,160
it has what it takes to become a
vulnerability superstar

13
00:00:44,160 --> 00:00:47,680
why it allows for

14
00:00:47,680 --> 00:00:51,289
arbitrary code execution and I mean
arbitrary whatever you want executed you

15
00:00:51,289 --> 00:00:52,370
can get it done

16
00:00:52,370 --> 00:00:56,050
it's very easy to find at least most a
bit since

17
00:00:56,050 --> 00:01:00,920
instances agrees to find since also very
easy to exploit

18
00:01:00,920 --> 00:01:04,449
is extremely reliable so

19
00:01:04,449 --> 00:01:07,830
forget about by a buffer overflows it's
hard work

20
00:01:07,830 --> 00:01:13,080
binary planting it's really easy it
requires no privileges

21
00:01:13,080 --> 00:01:16,979
on part of the attacker and can be done
remotely

22
00:01:16,979 --> 00:01:20,579
and even through firewalls so

23
00:01:20,579 --> 00:01:25,009
what else does a vulnerability me to
become a superstar well this one is not

24
00:01:25,009 --> 00:01:25,840
a superstar

25
00:01:25,840 --> 00:01:29,140
actually even though we found

26
00:01:29,140 --> 00:01:33,229
over a hundred billion instances this
vulnerability

27
00:01:33,229 --> 00:01:37,820
I'll tell you the math behind it later
it has been

28
00:01:37,820 --> 00:01:42,759
in 12 years of its public existence it
has been misunderstood by developers

29
00:01:42,759 --> 00:01:45,960
underestimated by security experts

30
00:01:45,960 --> 00:01:49,210
downplayed by some security vendors

31
00:01:49,210 --> 00:01:53,229
software vendors and sorry ignored by
others

32
00:01:53,229 --> 00:01:56,880
and finally forgotten about by most
people

33
00:01:56,880 --> 00:02:00,350
so we said let's make this right

34
00:02:00,350 --> 00:02:03,619
let's look into this and let's see if
the

35
00:02:03,619 --> 00:02:08,910
injustice is actually done three months
ago we published our research and some

36
00:02:08,910 --> 00:02:10,970
other researchers also did that as well

37
00:02:10,970 --> 00:02:16,170
and after that this one ability has been
quasi addressed

38
00:02:16,170 --> 00:02:20,240
by Microsoft the provided a partial fix
to fix

39
00:02:20,240 --> 00:02:26,920
apart of the entire problem it is still
being ignored by most software vendors

40
00:02:26,920 --> 00:02:30,490
and even though

41
00:02:30,490 --> 00:02:35,810
over us at least I mean over 200
vulnerabilities

42
00:02:35,810 --> 00:02:40,350
up this type has been fully disclose and
can be found on the internet

43
00:02:40,350 --> 00:02:44,040
and export it as well most of them are
still on fixed

44
00:02:44,040 --> 00:02:48,290
if you go to our blog our latest post
blog post ok gives you some statistics

45
00:02:48,290 --> 00:02:48,890
on how

46
00:02:48,890 --> 00:02:53,560
badly vendors are fixing this so what's
going on here

47
00:02:53,560 --> 00:02:57,470
to see what's going on here let's go
back to the beginning

48
00:02:57,470 --> 00:03:02,050
twelve years ago National Security
Agency

49
00:03:02,050 --> 00:03:05,860
published a paper called Windows NT
security guidelines which was probably

50
00:03:05,860 --> 00:03:09,220
one of the first sources to public and
publicly mentioned this type of our

51
00:03:09,220 --> 00:03:09,870
ability

52
00:03:09,870 --> 00:03:13,090
it was called the other spoofing then
nevermind that

53
00:03:13,090 --> 00:03:16,980
in 2000 George Clooney's key we know
about him rights

54
00:03:16,980 --> 00:03:21,620
events heard about your legal needs key
she found to office box

55
00:03:21,620 --> 00:03:24,850
of this type and published at Mikes to
fix that

56
00:03:24,850 --> 00:03:28,010
but it didn't actually cause an
avalanche

57
00:03:28,010 --> 00:03:32,570
which it could have a lot of stuff has
happened

58
00:03:32,570 --> 00:03:36,280
says today and Microsoft has

59
00:03:36,280 --> 00:03:39,340
along the way introduced some partial
fix

60
00:03:39,340 --> 00:03:42,470
to make things a little better but just
a little better

61
00:03:42,470 --> 00:03:48,060
as we'll see so in the course of our
research which started in December 2008

62
00:03:48,060 --> 00:03:51,400
we've accumulated over 520

63
00:03:51,400 --> 00:03:55,150
bugs in various widely-used piece of
software

64
00:03:55,150 --> 00:03:58,200
bugs have this particular type and

65
00:03:58,200 --> 00:04:02,660
in April 2010 did this year it became
obvious that

66
00:04:02,660 --> 00:04:07,840
once we publish our research it'll be
important for users

67
00:04:07,840 --> 00:04:12,320
to have at least some remedy available
so we approach Microsoft and give them

68
00:04:12,320 --> 00:04:13,690
an opportunity to

69
00:04:13,690 --> 00:04:16,950
to familiarize themselves with their
research and two

70
00:04:16,950 --> 00:04:20,200
to get a feeling of how ubiquitous this
problem really is

71
00:04:20,200 --> 00:04:25,690
and start working on some remedy so they
did and

72
00:04:25,690 --> 00:04:28,880
in summary in over 10 years of public

73
00:04:28,880 --> 00:04:32,659
of the public existence of this
vulnerability less than 10 bucks

74
00:04:32,660 --> 00:04:36,280
we we were able to find less than 10
public reports this type of

75
00:04:36,280 --> 00:04:37,160
vulnerability

76
00:04:37,160 --> 00:04:40,320
so it was really not widely known

77
00:04:40,320 --> 00:04:44,520
it was much to consider to be local is
dead remote

78
00:04:44,520 --> 00:04:49,229
and only part of the problem was being
understood

79
00:04:49,230 --> 00:04:53,170
in August this year which is over three
months ago

80
00:04:53,170 --> 00:04:56,810
Apple fix the iTunes back that be
reported to them this was just one of

81
00:04:56,810 --> 00:04:57,290
the

82
00:04:57,290 --> 00:05:01,570
the many reports that was sent to
vendors and we published our

83
00:05:01,570 --> 00:05:05,000
report on their fix as well

84
00:05:05,000 --> 00:05:08,690
which at in the same day caused HD Moore

85
00:05:08,690 --> 00:05:12,280
which we all know to revealed that she
was

86
00:05:12,280 --> 00:05:16,190
also do any research on this same
vulnerability

87
00:05:16,190 --> 00:05:20,030
and he found forty portable applications
so he published at

88
00:05:20,030 --> 00:05:25,520
and there was no reason for us once the
cat was out of the box as he said

89
00:05:25,520 --> 00:05:28,710
to withhold the a research to ourselves
so

90
00:05:28,710 --> 00:05:32,599
we published our results as well and
this was

91
00:05:32,600 --> 00:05:36,760
this was probably white solve you have
raised their hands

92
00:05:36,760 --> 00:05:39,849
saying that you know about it know what
is the

93
00:05:39,850 --> 00:05:43,820
actual cause of these wannabe what
what's the underlined

94
00:05:43,820 --> 00:05:49,240
reason office do we have any developers
here

95
00:05:49,240 --> 00:05:53,380
want them to shame yeah have you ever
used load library function or have

96
00:05:53,380 --> 00:05:57,900
ever I we have some notes there yeah of
course you have

97
00:05:57,900 --> 00:06:01,620
looming libraries is a very good thing
right because someone else is done there

98
00:06:01,620 --> 00:06:05,060
works and we just reuse their work and
that's like this

99
00:06:05,060 --> 00:06:10,500
that's good capitalism that's okay so
what happens when you call the library

100
00:06:10,500 --> 00:06:14,050
if you provide a full path to the
library

101
00:06:14,050 --> 00:06:17,580
them this particular libraries just
going to be loaded and executed

102
00:06:17,580 --> 00:06:21,070
and that's okay so that doesn't interest
us

103
00:06:21,070 --> 00:06:24,110
what interest us is when library

104
00:06:24,110 --> 00:06:27,800
is called with the relative named for
example

105
00:06:27,800 --> 00:06:31,560
as we have here just the name of the
library

106
00:06:31,560 --> 00:06:35,770
what happens then well in this case

107
00:06:35,770 --> 00:06:38,990
windows are really friendly and really
helpful and they think

108
00:06:38,990 --> 00:06:42,530
instead of the developer so the library
function

109
00:06:42,530 --> 00:06:46,180
is very clever to sorry

110
00:06:46,180 --> 00:06:50,470
very clever its it's going out of its
way to find the library that you're

111
00:06:50,470 --> 00:06:52,169
trying to look

112
00:06:52,169 --> 00:06:56,630
it basically thinks so that you don't
have to

113
00:06:56,630 --> 00:06:59,680
and how does it do that it has a
specific search

114
00:06:59,680 --> 00:07:03,730
order which it searches

115
00:07:03,730 --> 00:07:07,139
in order to find your library and this
is it

116
00:07:07,139 --> 00:07:10,950
we have six points we have six locations

117
00:07:10,950 --> 00:07:14,419
in the search order first the directory
where the application has been launched

118
00:07:14,419 --> 00:07:15,180
from

119
00:07:15,180 --> 00:07:18,340
then did 3 system directories

120
00:07:18,340 --> 00:07:22,160
and any location number: fine we have
the current working directory

121
00:07:22,160 --> 00:07:25,650
and finally we have the path which
includes the application path:

122
00:07:25,650 --> 00:07:29,919
system path use a path and process back

123
00:07:29,919 --> 00:07:35,250
now do you remember those IQ tests where
you have six shapes in for love you have

124
00:07:35,250 --> 00:07:38,260
to say which one stands out

125
00:07:38,260 --> 00:07:41,380
well the current working directory
obvious stands out why

126
00:07:41,380 --> 00:07:45,650
because this is the only potentially
dangerous location

127
00:07:45,650 --> 00:07:50,169
if you have your permissions set
correctly

128
00:07:50,169 --> 00:07:54,359
sliding right okay we have an attack

129
00:07:54,360 --> 00:07:58,150
if you have permissions set correctly on
your computer then no one

130
00:07:58,150 --> 00:08:01,180
without admin privileges will be able to
plant

131
00:08:01,180 --> 00:08:06,250
a malicious GL in any one of the initial
four locations

132
00:08:06,250 --> 00:08:11,430
and also unless an application was
stupid enough to change your path

133
00:08:11,430 --> 00:08:15,949
so that's something some attacker
controls location is included in the

134
00:08:15,949 --> 00:08:16,949
path

135
00:08:16,949 --> 00:08:21,110
then that is off-limits to attackers as
well but current working directory

136
00:08:21,110 --> 00:08:25,240
which is unknown to too many people can
not only

137
00:08:25,240 --> 00:08:28,760
points to location on the local
filesystem

138
00:08:28,760 --> 00:08:32,218
it can also point to a remote share

139
00:08:32,219 --> 00:08:35,260
moreover it can point to remote share

140
00:08:35,260 --> 00:08:38,309
on a server in China well I'm knots

141
00:08:38,310 --> 00:08:41,370
I'm not singling out China I'm just
sayin a remote server

142
00:08:41,370 --> 00:08:45,089
anywhere on the internet so what am i
implying my implying

143
00:08:45,089 --> 00:08:49,070
that you're perfectly friendly and
trustworthy application running on your

144
00:08:49,070 --> 00:08:51,360
computer

145
00:08:51,360 --> 00:08:55,740
can at some point the site to connect to
a server somewhere on the other

146
00:08:55,740 --> 00:09:00,130
side of the planet downloaded GL without
you

147
00:09:00,130 --> 00:09:03,670
ever approving that and launching that
DLL

148
00:09:03,670 --> 00:09:07,339
yes that's exactly what I'm implying
that is what binary planting at this

149
00:09:07,339 --> 00:09:12,810
remote by replanting is about

150
00:09:12,810 --> 00:09:16,960
if it's any consolation before 2004 it
was even worse

151
00:09:16,960 --> 00:09:21,410
because the search order had the current
working directory in location number two

152
00:09:21,410 --> 00:09:24,900
so Microsoft decided to change that to
what they call

153
00:09:24,900 --> 00:09:29,150
safe search order its safer

154
00:09:29,150 --> 00:09:33,829
said search order but is it safe but we
have to think about it

155
00:09:33,830 --> 00:09:37,820
why would it be safe I mean if an
application

156
00:09:37,820 --> 00:09:42,260
trying to load the library with a
relative path

157
00:09:42,260 --> 00:09:47,080
doesn't find GL in those first four
locations

158
00:09:47,080 --> 00:09:51,529
isn't trying to load a dealer doesn't
even exist

159
00:09:51,529 --> 00:09:54,820
and why would an application want to do
that it would have to be

160
00:09:54,820 --> 00:09:59,260
a brain-dead application no

161
00:09:59,260 --> 00:10:02,439
there are many many reasons why
applications are trying to load dealers

162
00:10:02,440 --> 00:10:02,690
that

163
00:10:02,690 --> 00:10:05,839
aren't there on the system let's look at

164
00:10:05,839 --> 00:10:10,279
some of the most prominent ones we've
seen many cases where

165
00:10:10,279 --> 00:10:13,520
the developer just tries to load a lil
library

166
00:10:13,520 --> 00:10:16,920
in order to determine whether some
functionality or some future is

167
00:10:16,920 --> 00:10:19,110
available on the system

168
00:10:19,110 --> 00:10:22,529
it's the easiest thing to do and it's
how

169
00:10:22,529 --> 00:10:25,930
real capitalist developer should be
doing their work

170
00:10:25,930 --> 00:10:29,060
with minimum effort so I just call load
library

171
00:10:29,060 --> 00:10:33,380
try to load the DLL if its tariffs deal
operation is successful I'll

172
00:10:33,380 --> 00:10:37,089
I will use the functions provided by
that labor if it's not successfully I

173
00:10:37,089 --> 00:10:38,480
would just forget about it

174
00:10:38,480 --> 00:10:42,470
it sounds okay and functionally thats
that's what you should do

175
00:10:42,470 --> 00:10:46,330
that's optimal but from security
perspective that's really bad because if

176
00:10:46,330 --> 00:10:46,640
the

177
00:10:46,640 --> 00:10:50,819
dealer is not in the system it will be
eventually look for

178
00:10:50,820 --> 00:10:55,380
in the current working directory which
is bad

179
00:10:55,380 --> 00:10:59,779
for those view for we have read about
binary planting dealer hijacking you see

180
00:10:59,779 --> 00:11:00,589
that

181
00:11:00,589 --> 00:11:05,250
we have many cases a former black
vacations trying to load the WMAP I dot

182
00:11:05,250 --> 00:11:06,010
the allow

183
00:11:06,010 --> 00:11:10,550
which is a a deal that is the Texas
justice system Dr from Microsoft that

184
00:11:10,550 --> 00:11:14,110
exists on all Windows Vista Windows 7
systems

185
00:11:14,110 --> 00:11:17,589
but doesn't exist in Windows XP and
older systems

186
00:11:17,589 --> 00:11:22,649
so if you write an application that is
supposed to work on all those systems

187
00:11:22,649 --> 00:11:26,430
and especially at this point at today

188
00:11:26,430 --> 00:11:31,660
if you build and Microsoft Foundation
Classes application with Visual Studio

189
00:11:31,660 --> 00:11:35,130
your application will automatically be
vulnerable because because

190
00:11:35,130 --> 00:11:38,490
Microsoft's libraries going to try to
load this DLL whenever

191
00:11:38,490 --> 00:11:41,890
the application is launched

192
00:11:41,890 --> 00:11:46,130
we've seen cases where applications can
become vulnerable

193
00:11:46,130 --> 00:11:50,470
if you install them only partially so
you you'd select the Custom Install

194
00:11:50,470 --> 00:11:54,040
and you say I won this company I don't
want this company and is told but the

195
00:11:54,040 --> 00:11:56,579
installed component is going to assume
that

196
00:11:56,580 --> 00:11:59,870
the other competent has already also be
been installed

197
00:11:59,870 --> 00:12:03,440
and it will try to load it Steelers its
dealers aren't there

198
00:12:03,440 --> 00:12:06,660
so there look for in the current working
directory

199
00:12:06,660 --> 00:12:10,439
we've seen cases of backwards and
forward compatibility

200
00:12:10,440 --> 00:12:14,899
if you are notice the Microsoft Office
2010 bach

201
00:12:14,899 --> 00:12:18,230
which was review two weeks ago

202
00:12:18,230 --> 00:12:21,890
it was a case of probably a case a
forward compatibility

203
00:12:21,890 --> 00:12:25,279
because the office was trying to load
some dealers

204
00:12:25,279 --> 00:12:28,560
that having been known by anyone on the
Internet

205
00:12:28,560 --> 00:12:33,080
you ID Google right so there are no
information about this deal as

206
00:12:33,080 --> 00:12:37,170
so it's likely that those dealers we're
just plans to be included

207
00:12:37,170 --> 00:12:40,500
in it a later version or later update of

208
00:12:40,500 --> 00:12:45,060
Visual Studio then we have some
applications

209
00:12:45,060 --> 00:12:48,220
dead decide to look for the deal allows

210
00:12:48,220 --> 00:12:51,440
in the past but if you remember the
search path

211
00:12:51,440 --> 00:12:54,680
the path is a location number six

212
00:12:54,680 --> 00:12:58,070
the current working directory
dislocation number five so

213
00:12:58,070 --> 00:13:02,190
anything to try to load from the path is
going to be pre-empted

214
00:13:02,190 --> 00:13:06,290
by the current working directory so all
those applications are by default on

215
00:13:06,290 --> 00:13:09,010
herbal

216
00:13:09,010 --> 00:13:13,819
we've seen trying cases like this
applications trying to be

217
00:13:13,820 --> 00:13:16,910
portable I'll cross platform

218
00:13:16,910 --> 00:13:20,680
using the same code on Windows and Linux

219
00:13:20,680 --> 00:13:23,680
we've seen them trying to load Linux
libraries

220
00:13:23,680 --> 00:13:27,220
on Windows systems pretty funny

221
00:13:27,220 --> 00:13:30,770
then we have applications making wrong
assumptions about his told competence

222
00:13:30,770 --> 00:13:33,800
liked media players just assuming

223
00:13:33,800 --> 00:13:36,899
that some codecs will be available on
the system

224
00:13:36,899 --> 00:13:40,910
all they prefer careful they don't break
if they don't find these clicks

225
00:13:40,910 --> 00:13:45,670
but they just become vulnerable they
don't even know it

226
00:13:45,670 --> 00:13:50,190
and then we have incomplete uninstalls
you uninstall application it forgets to

227
00:13:50,190 --> 00:13:53,720
unregister somebody a little bit isn't
there anymore

228
00:13:53,720 --> 00:13:57,330
pretty bad there are a lot of other
reasons

229
00:13:57,330 --> 00:14:00,940
but the very problematic reason in terms
of

230
00:14:00,940 --> 00:14:05,519
your trying to get rid of these bugs in
your application is

231
00:14:05,519 --> 00:14:09,580
is that you have many close source third
party companies

232
00:14:09,580 --> 00:14:13,440
that you included in your applications
and you cannot

233
00:14:13,440 --> 00:14:18,760
easily get freedom own abilities does

234
00:14:18,760 --> 00:14:21,800
so hot as a binary planting attacked
look like

235
00:14:21,800 --> 00:14:25,380
it's a three-step attack first of all
your attacker

236
00:14:25,380 --> 00:14:29,029
you have to plan to malicious d I'll to
some location under your control

237
00:14:29,029 --> 00:14:32,240
let's say a remote Windows share

238
00:14:32,240 --> 00:14:37,110
second you have to somehow get the
vulnerable application

239
00:14:37,110 --> 00:14:42,140
on a user's computer to get to set the
current working directory

240
00:14:42,140 --> 00:14:46,850
to the location of your DLL but some
streaky

241
00:14:46,850 --> 00:14:50,800
unless one is easy you just have to wait
sit wait for their applications actually

242
00:14:50,800 --> 00:14:52,920
no duty I'll

243
00:14:52,920 --> 00:14:56,529
obviously step number two is the
critical one here how do you set the

244
00:14:56,529 --> 00:14:59,080
current working directory

245
00:14:59,080 --> 00:15:02,980
but most people don't even care where
the current working directory

246
00:15:02,980 --> 00:15:07,500
is in an application it's not some
property that would easily be seen

247
00:15:07,500 --> 00:15:11,170
users don't know are not aware where the
current working directory is

248
00:15:11,170 --> 00:15:14,560
is pointing to they don't even care it
doesn't affect there

249
00:15:14,560 --> 00:15:19,399
there use of the product developers
often don't even care swell

250
00:15:19,399 --> 00:15:22,870
comforting directory is actually
something that should have been gone a

251
00:15:22,870 --> 00:15:24,260
long time ago

252
00:15:24,260 --> 00:15:28,740
it's just staying with us because effect
for compatibility

253
00:15:28,740 --> 00:15:34,149
because if we get rid of it right now
more many applications will break

254
00:15:34,149 --> 00:15:38,459
now funny said the current working
directory to some location

255
00:15:38,459 --> 00:15:41,540
of under our control the most

256
00:15:41,540 --> 00:15:45,709
easy way to do this is to get the user
to double-click

257
00:15:45,709 --> 00:15:51,269
some document to open some document on a
remote shack

258
00:15:51,269 --> 00:15:54,500
how do you do that well who see about it
later

259
00:15:54,500 --> 00:15:58,250
but double-clicking any file in Windows
Explorer automatically sets the current

260
00:15:58,250 --> 00:15:59,399
working directory

261
00:15:59,399 --> 00:16:03,079
of the launched application to that
location it sounds okay

262
00:16:03,079 --> 00:16:06,200
makes it even makes sense because that
application

263
00:16:06,200 --> 00:16:10,709
can then easily open other fires that
are in the same location

264
00:16:10,709 --> 00:16:14,800
just for using relative names so it's
easy for the developers

265
00:16:14,800 --> 00:16:19,010
and many applications are actually doing
that

266
00:16:19,010 --> 00:16:22,610
the other way to set the current working
directory is to use File Opener File

267
00:16:22,610 --> 00:16:23,800
Save dialogs

268
00:16:23,800 --> 00:16:27,620
those if you're observing how current
working directory is being changed

269
00:16:27,620 --> 00:16:30,950
you can see it as you browse three or
five system

270
00:16:30,950 --> 00:16:34,339
or through the network using those
dialogues the current working directory

271
00:16:34,339 --> 00:16:36,040
follows your steps

272
00:16:36,040 --> 00:16:40,519
and it stays there by default you can
change that if you're a developer but it

273
00:16:40,519 --> 00:16:42,230
states that stays there by default

274
00:16:42,230 --> 00:16:47,570
if you confirm the action say she
actually open or save the file

275
00:16:47,570 --> 00:16:51,019
and some applications also are friendly
enough to change the current working

276
00:16:51,019 --> 00:16:56,930
directory to the location where you last
saved or open the file

277
00:16:56,930 --> 00:17:00,790
there are also many other ways were how
applications are changing their current

278
00:17:00,790 --> 00:17:03,000
working directory and some of those can
actually

279
00:17:03,000 --> 00:17:06,368
also be exploited

280
00:17:06,368 --> 00:17:10,789
now to an actual attack we have an
internal network here

281
00:17:10,789 --> 00:17:14,378
now we have the user and if I server and
an attacker

282
00:17:14,379 --> 00:17:19,019
in the same network so we have an
internal attack

283
00:17:19,019 --> 00:17:22,730
we have users many users we see just one
of them here

284
00:17:22,730 --> 00:17:26,019
using the fis server for sharing their
documents

285
00:17:26,019 --> 00:17:29,840
so we have heard the user the

286
00:17:29,840 --> 00:17:34,119
sharing document .doc text on this chair
and trying to open it by

287
00:17:34,119 --> 00:17:37,279
double-clicking for exam that's his
document.write we're not doing any

288
00:17:37,279 --> 00:17:39,769
social engineering share

289
00:17:39,769 --> 00:17:43,049
but suppose the application that he's
using for opening this document is

290
00:17:43,049 --> 00:17:44,899
vulnerable to buy a plane ticket

291
00:17:44,899 --> 00:17:49,659
now all the attacker has to do is to
place militias DLL

292
00:17:49,659 --> 00:17:54,070
on the same share alongside the document
and wait for the user to open the

293
00:17:54,070 --> 00:17:54,879
document

294
00:17:54,879 --> 00:17:58,440
so when the user opens a document he's
vulnerable application is going to load

295
00:17:58,440 --> 00:17:59,830
the DLL from the share

296
00:17:59,830 --> 00:18:05,549
been executed 0 social engineering

297
00:18:05,549 --> 00:18:10,879
but it goes remote as well why does this
work over Internet

298
00:18:10,879 --> 00:18:15,440
don't your fire was block SMB traffic

299
00:18:15,440 --> 00:18:20,639
yes they do but do they block web def
traffic

300
00:18:20,639 --> 00:18:24,529
they probably don't the usually don't
the fire was the we've seen

301
00:18:24,529 --> 00:18:28,320
don't because it it doesn't feel
dangerous

302
00:18:28,320 --> 00:18:33,590
so its better not be blocked web dev is
actually an extension to http so if

303
00:18:33,590 --> 00:18:33,999
you're

304
00:18:33,999 --> 00:18:39,769
allowing out bout HTTP and not setting
specific restrictions for Rep that

305
00:18:39,769 --> 00:18:42,899
then you're also allowing outbound web
dev

306
00:18:42,899 --> 00:18:46,460
and there's no way for the firehall to
tell the good from the bad

307
00:18:46,460 --> 00:18:51,779
know what we have here on this picture
we have the same internal network

308
00:18:51,779 --> 00:18:55,700
at the lower side side of the slide and
you have the Internet

309
00:18:55,700 --> 00:19:01,039
on the upper side slide so the attacker
two sets up a web server

310
00:19:01,039 --> 00:19:04,399
enables web dev creates share

311
00:19:04,399 --> 00:19:08,830
on the server and then she has to get
the user

312
00:19:08,830 --> 00:19:12,259
to access that share you can use dads

313
00:19:12,259 --> 00:19:16,129
you can do that for example by sending
an email providing a link

314
00:19:16,129 --> 00:19:19,309
just some interesting files and user
will click

315
00:19:19,309 --> 00:19:23,879
the link and he and Windows Explorer
will show the remote share

316
00:19:23,879 --> 00:19:27,179
there's no way the the the user can tell
that this shared

317
00:19:27,179 --> 00:19:31,480
easily tell that this share is on the
Internet

318
00:19:31,480 --> 00:19:35,340
because it looks the same and why does
it work

319
00:19:35,340 --> 00:19:40,220
because Windows when his work stations
half by the fold

320
00:19:40,220 --> 00:19:44,989
a very special service running which is
called web client

321
00:19:44,989 --> 00:19:47,869
well if you haven't heard about it never
mind cuz you're never probably never

322
00:19:47,869 --> 00:19:49,699
using it

323
00:19:49,700 --> 00:19:54,440
but what it does is a little magic it
helps you if you tried to access

324
00:19:54,440 --> 00:19:57,889
a remote share and SMB protocol

325
00:19:57,889 --> 00:20:01,710
doesn't reach that share eat rice with
wept after

326
00:20:01,710 --> 00:20:04,979
automatically doesn't ask you anything

327
00:20:04,979 --> 00:20:07,999
so the only thing you see is a slight
delay

328
00:20:07,999 --> 00:20:12,919
if you see that so you see the remote
share

329
00:20:12,919 --> 00:20:17,129
and you see the files and you trust them
because dip everything you've seen in

330
00:20:17,129 --> 00:20:21,460
in shares so far has been in the
internal network in trust those files

331
00:20:21,460 --> 00:20:25,129
so you double-click the document and
what happens then

332
00:20:25,129 --> 00:20:28,669
the application tries to load a
non-existent DLL

333
00:20:28,669 --> 00:20:32,190
and eventually tries to to search the
current working directory

334
00:20:32,190 --> 00:20:39,190
which is on the Internet

335
00:20:39,320 --> 00:20:42,369
so what are the attack vectors hollis
the

336
00:20:42,369 --> 00:20:45,779
for this detector implement this attack
we've seen an internal attack an

337
00:20:45,779 --> 00:20:47,039
external attack

338
00:20:47,039 --> 00:20:50,389
there are some other ideas as well just
cover them all

339
00:20:50,389 --> 00:20:54,889
what model when you provide a link to a
remote share

340
00:20:54,889 --> 00:20:59,970
you can obviously do this in a website
so users visit this website

341
00:20:59,970 --> 00:21:03,999
and clicks on a link sees a share the
project to document bank

342
00:21:03,999 --> 00:21:09,119
you can do this in email you can do is
send an instant message

343
00:21:09,119 --> 00:21:12,340
in an internal attack you can plan to be
alone on the five sir

344
00:21:12,340 --> 00:21:17,928
we've seen that but you have some like
remote local attacks

345
00:21:17,929 --> 00:21:22,159
if someone gives you singer as it
archive

346
00:21:22,159 --> 00:21:27,119
for a gift to USB stick or any any kind
of removable media

347
00:21:27,119 --> 00:21:31,580
that media automatically becomes local
to your computer

348
00:21:31,580 --> 00:21:34,668
right so it doesn't even have to go
through the firewall

349
00:21:34,669 --> 00:21:37,820
you get a CD with a bunch of for
interesting

350
00:21:37,820 --> 00:21:40,830
work files that you would really want to
see

351
00:21:40,830 --> 00:21:44,228
and just double click one of those
because well

352
00:21:44,229 --> 00:21:47,359
that should be a safe operation to do

353
00:21:47,359 --> 00:21:51,039
then the DLL which is also hidden pond
on the CD

354
00:21:51,039 --> 00:21:54,419
also gets loaded

355
00:21:54,419 --> 00:21:57,580
you can use by reminding also for the
old-fashioned

356
00:21:57,580 --> 00:22:00,999
local privilege escalation if you want
to become a local admin just

357
00:22:00,999 --> 00:22:04,029
set a trap like this to your admin and
just wait for him to

358
00:22:04,029 --> 00:22:07,840
launch a local formal application

359
00:22:07,840 --> 00:22:11,488
and then this hasn't been released yet

360
00:22:11,489 --> 00:22:14,629
but our researchers our researches

361
00:22:14,629 --> 00:22:19,220
is not overreact researchers are now
focused on trying to find

362
00:22:19,220 --> 00:22:24,129
attack vectors that makes things even
easier for attackers to eliminate social

363
00:22:24,129 --> 00:22:26,019
engineering as much as we can

364
00:22:26,019 --> 00:22:29,659
so we've come to the point where a
Windows XP

365
00:22:29,659 --> 00:22:32,720
user only has to visit website

366
00:22:32,720 --> 00:22:36,309
with Internet Explorer and click twice
somewhere

367
00:22:36,309 --> 00:22:39,908
anywhere on the web page and clicking on
web pages

368
00:22:39,909 --> 00:22:45,149
is not some outrageously unthinkable
operation we do that all the time

369
00:22:45,149 --> 00:22:49,929
you have to do that and the deal is
downloaded and executed on your computer

370
00:22:49,929 --> 00:22:54,519
so it it's getting worse and and we
shouldn't rely on people trying to

371
00:22:54,519 --> 00:22:58,950
being able to detect social engineering
because we're eliminating social social

372
00:22:58,950 --> 00:23:01,539
engineered from this tax

373
00:23:01,539 --> 00:23:04,919
not for a demo have you tried our

374
00:23:04,919 --> 00:23:08,340
online exposure tests

375
00:23:08,340 --> 00:23:11,369
excellent it is work

376
00:23:11,369 --> 00:23:14,889
it didn't work yet

377
00:23:14,889 --> 00:23:19,229
you're in the minority but obviously the
security people

378
00:23:19,229 --> 00:23:22,570
are likely to have their configurations
better said than the rest

379
00:23:22,570 --> 00:23:29,559
them now the demo sexually video I'm
cheating a little

380
00:23:29,559 --> 00:23:33,779
what we have here is a dot PCF file

381
00:23:33,779 --> 00:23:36,830
which is associated with her Windows
Address Book

382
00:23:36,830 --> 00:23:40,908
and when you double-click adult PCF file
Windows Address Book which is integrated

383
00:23:40,909 --> 00:23:41,899
him

384
00:23:41,899 --> 00:23:46,759
Windows XP and also similar applications
are in windows 7 and Vista

385
00:23:46,759 --> 00:23:49,789
a just open the file and show your

386
00:23:49,789 --> 00:23:53,269
show the content of the file like this

387
00:23:53,269 --> 00:23:56,269
now we monitor with the process monitor
what happens

388
00:23:56,269 --> 00:23:59,720
when when the center's book tries to
load a GL

389
00:23:59,720 --> 00:24:03,529
a specific dealer wept 32 arrests dot
the allow

390
00:24:03,529 --> 00:24:06,859
it tries to find it in the

391
00:24:06,859 --> 00:24:11,029
in the home directory of the application
but it can't and the system

392
00:24:11,029 --> 00:24:15,210
system 32 Windows it is a fun there

393
00:24:15,210 --> 00:24:19,190
then it tries the current working
directory on the shared this case

394
00:24:19,190 --> 00:24:22,190
but it doesn't find it so it's horrible

395
00:24:22,190 --> 00:24:25,639
but it didn't didn't exploited now let's
put this deal

396
00:24:25,639 --> 00:24:32,639
with his exact name alongside the VCF
file and double check it again

397
00:24:34,759 --> 00:24:39,239
that's the delay yeah that's what
happens

398
00:24:39,239 --> 00:24:42,899
instead of a real DL the actual
legitimately other

399
00:24:42,899 --> 00:24:47,979
our dealer was loaded and executed and
show the heck tile

400
00:24:47,979 --> 00:24:53,169
and in the process monitor you can see
this as well you can see that

401
00:24:53,169 --> 00:24:57,090
the dealer has been found on a remote
share and finally the load image

402
00:24:57,090 --> 00:25:01,959
operation is the operation actually
executes this job

403
00:25:01,960 --> 00:25:06,840
so that's pretty cool looks he's right I
told you it's not buffer overflow magic

404
00:25:06,840 --> 00:25:13,178
this is really easy anyone can do is

405
00:25:13,179 --> 00:25:17,769
so up to this point we were talking
about deals

406
00:25:17,769 --> 00:25:21,409
we have to shift now to expand are
attack surface little

407
00:25:21,409 --> 00:25:25,340
it's not just about the allows executors
both launching

408
00:25:25,340 --> 00:25:29,209
also have sewer problems they're just
worse

409
00:25:29,210 --> 00:25:32,460
than with Diaz that's the only
difference because

410
00:25:32,460 --> 00:25:38,359
today the search order when you try to
call creates process

411
00:25:38,359 --> 00:25:43,199
and launch and execute a bull without
providing a full path

412
00:25:43,200 --> 00:25:46,330
the search path will include the current
working directory

413
00:25:46,330 --> 00:25:49,449
in location number two number two

414
00:25:49,450 --> 00:25:53,749
so if the excusable is not found in the
application's home directory

415
00:25:53,749 --> 00:25:57,429
in other words if it's not one of the
executed because that's been

416
00:25:57,429 --> 00:26:00,989
installed with the application but for
example

417
00:26:00,989 --> 00:26:04,479
explored exit or notes backed

418
00:26:04,479 --> 00:26:09,349
or calculator those are not to be found
the location number one

419
00:26:09,349 --> 00:26:12,479
those are in location number 30 number 4

420
00:26:12,479 --> 00:26:15,859
so anytime you need creates process is
called

421
00:26:15,859 --> 00:26:20,279
with a relative path and trying to
launch an application that

422
00:26:20,279 --> 00:26:23,599
is not in the epic in in the original
applications

423
00:26:23,599 --> 00:26:27,099
home directory we have a binary planting
vulnerability

424
00:26:27,099 --> 00:26:31,189
shall execute is even worse

425
00:26:31,190 --> 00:26:34,970
the current working directory is in
location number one

426
00:26:34,970 --> 00:26:38,239
what does that mean if you call shall
execute

427
00:26:38,239 --> 00:26:41,759
and try to execute notepad dot X in
which is a

428
00:26:41,759 --> 00:26:46,080
fairly common thing to do for an
application or launch a calculator

429
00:26:46,080 --> 00:26:46,668
orange

430
00:26:46,669 --> 00:26:51,119
CMD dot except if you do not provide a
full pack

431
00:26:51,119 --> 00:26:56,099
and is executed boo will be searched for
in the current working directory first

432
00:26:56,099 --> 00:26:59,549
and only if it's not from there it will
be found

433
00:26:59,549 --> 00:27:03,429
in one of the system directories so the
only thing

434
00:27:03,429 --> 00:27:07,109
preventing these calls from being
exploitable

435
00:27:07,109 --> 00:27:11,830
is if it's difficult to set the current
working directory to an attacker control

436
00:27:11,830 --> 00:27:14,539
location

437
00:27:14,539 --> 00:27:18,090
but it very often isn't

438
00:27:18,090 --> 00:27:22,909
now there are many other functions new
and old ones

439
00:27:22,909 --> 00:27:27,559
they can be used for launching execute
ables and all of them

440
00:27:27,559 --> 00:27:30,769
least all those it that we looked into
Havas you

441
00:27:30,769 --> 00:27:34,169
are using the search order so there are
vulnerable

442
00:27:34,169 --> 00:27:37,269
they include current working directory

443
00:27:37,269 --> 00:27:41,259
now few words about our research

444
00:27:41,259 --> 00:27:45,239
what we did when we tried to assess the
ubiquity of these

445
00:27:45,239 --> 00:27:49,229
phone or ability is we looked at over
200

446
00:27:49,229 --> 00:27:52,389
widely used applications with just try
to cover

447
00:27:52,389 --> 00:27:55,859
everything that's really as widely used
as possible

448
00:27:55,859 --> 00:27:59,399
as popular as possible so we we look
that commercial

449
00:27:59,399 --> 00:28:02,440
and freeware stuff open source close
source

450
00:28:02,440 --> 00:28:06,859
everything we could download as trials
and everything we had his license

451
00:28:06,859 --> 00:28:08,090
software

452
00:28:08,090 --> 00:28:12,889
so we tested all of these and we found
at least one binary planting

453
00:28:12,889 --> 00:28:18,299
issue in almost every one to be precise
in nine out of 10

454
00:28:18,299 --> 00:28:22,099
that's pretty bad because the 200 sample

455
00:28:22,099 --> 00:28:25,619
it it's not a small sample actually

456
00:28:25,619 --> 00:28:29,909
I i wouldnt dare college a
representative sample if you were a

457
00:28:29,909 --> 00:28:31,570
bunch of statistic analysts

458
00:28:31,570 --> 00:28:35,809
I can call that to you and you're going
to take my word for it

459
00:28:35,809 --> 00:28:39,158
so if it's any indicator then mine

460
00:28:39,159 --> 00:28:42,609
out of 10 reasonably complex

461
00:28:42,609 --> 00:28:46,539
applications in the world Windows
applications in the world

462
00:28:46,539 --> 00:28:51,629
are currently vulnerable it helps if the
application is not complex

463
00:28:51,629 --> 00:28:54,919
hello world application if it's not
loading

464
00:28:54,919 --> 00:28:57,989
any D allows might be

465
00:28:57,989 --> 00:29:02,249
reasonably safe but if you build it

466
00:29:02,249 --> 00:29:06,859
in in Visual Studio as Microsoft
foundation class its application

467
00:29:06,859 --> 00:29:10,418
it will become vulnerable because %uh
verification it verdi allow

468
00:29:10,419 --> 00:29:13,599
being included in it

469
00:29:13,599 --> 00:29:17,119
we only scratch the surface we didn't
have time

470
00:29:17,119 --> 00:29:21,139
for free worked so much

471
00:29:21,139 --> 00:29:24,639
to look further into these applications
so we just basically

472
00:29:24,639 --> 00:29:28,779
open the files that that were associated
with these applications and try to see

473
00:29:28,779 --> 00:29:31,779
if any ideas are executed as we're
loading and then

474
00:29:31,779 --> 00:29:36,690
just browser on the menus and did some
some stuff that was pretty obvious

475
00:29:36,690 --> 00:29:39,719
easily reachable and see if there were
any

476
00:29:39,719 --> 00:29:43,619
suspicious loadings going on

477
00:29:43,619 --> 00:29:48,529
so in these two hundred plus
applications be found over 520

478
00:29:48,529 --> 00:29:51,999
binary planting issues so there were in
average

479
00:29:51,999 --> 00:29:58,359
more than 21 abilities in each of these
applications

480
00:29:58,359 --> 00:30:02,739
to make our lives a little less
miserable we developed a tool

481
00:30:02,739 --> 00:30:06,019
to help us monitor these processes and
detect whole

482
00:30:06,019 --> 00:30:09,019
current working directory is being
changed and whether

483
00:30:09,019 --> 00:30:12,840
any loadings from the current working
directory are being performed

484
00:30:12,840 --> 00:30:16,830
so this was real time saver this is our
tool

485
00:30:16,830 --> 00:30:21,249
just snapshot just to see that I'm not
making this up

486
00:30:21,249 --> 00:30:25,729
I didn't busiest so both

487
00:30:25,729 --> 00:30:30,269
GL except nineteen ratio it was kind of
a surprise to us

488
00:30:30,269 --> 00:30:35,090
we expected well first level we started
with dr. planting issues

489
00:30:35,090 --> 00:30:38,479
and we found a bunch of those and then
we said okay let's look at the

490
00:30:38,479 --> 00:30:42,309
executors were planning issues and we
didn't really expect to find many

491
00:30:42,309 --> 00:30:46,279
because when you think a bit dealers are
being loaded

492
00:30:46,279 --> 00:30:51,700
all the time when you launch microsoft
office for example

493
00:30:51,700 --> 00:30:54,999
probably about 500 deals

494
00:30:54,999 --> 00:30:59,399
are being loaded

495
00:30:59,399 --> 00:31:03,139
they're not actually these actions are
not those seen a

496
00:31:03,139 --> 00:31:07,679
but on the file system because if a
dealer is loaded once

497
00:31:07,679 --> 00:31:11,190
and its again attempted to be loaded pic
later

498
00:31:11,190 --> 00:31:14,279
it's not going to be looked for on the
filesystem

499
00:31:14,279 --> 00:31:18,330
it is cashed already but if the first
load didn't

500
00:31:18,330 --> 00:31:21,559
happened and the second one would
actually go too fast that's what I mean

501
00:31:21,559 --> 00:31:21,940
by

502
00:31:21,940 --> 00:31:25,440
but home many times and low great
libraries

503
00:31:25,440 --> 00:31:29,749
RB loaded but execute oppose

504
00:31:29,749 --> 00:31:33,269
we didn't we didn't expect applications
to launch menu

505
00:31:33,269 --> 00:31:37,279
executors bills well you do see
efficacious launching

506
00:31:37,279 --> 00:31:40,729
calculators notepad CMT's explores

507
00:31:40,729 --> 00:31:46,429
and so on we do see that but we didn't
expect many of those to be vulnerable

508
00:31:46,429 --> 00:31:50,259
but anyway they were so

509
00:31:50,259 --> 00:31:53,429
one-quarter approximately of all

510
00:31:53,429 --> 00:31:57,929
by planting bulbs that we found were
explain tin box

511
00:31:57,929 --> 00:32:01,849
and why is this important because the
current remedies

512
00:32:01,849 --> 00:32:06,609
available to you to everyone to protect
against fire pending box

513
00:32:06,609 --> 00:32:09,899
are also focused on deals

514
00:32:09,899 --> 00:32:13,529
you can do anything right now to change
the behavior

515
00:32:13,529 --> 00:32:16,849
all execute a baloney

516
00:32:16,849 --> 00:32:20,889
you can do something about deals

517
00:32:20,889 --> 00:32:24,419
so how many bugs recent 100

518
00:32:24,419 --> 00:32:27,789
billion how do you get that number

519
00:32:27,789 --> 00:32:31,908
okay we took other the all vulnerable
application the phone

520
00:32:31,909 --> 00:32:36,479
we took the about 20 most widely used
ones

521
00:32:36,479 --> 00:32:40,599
try to find the number the the install
base for these applications just

522
00:32:40,599 --> 00:32:43,809
multiplied that with the number of parts
were found in them

523
00:32:43,809 --> 00:32:47,049
so when you consider that just Windows
operating systems

524
00:32:47,049 --> 00:32:51,489
have a pretty huge install base combines
about $2 billion

525
00:32:51,489 --> 00:32:55,419
well you could argue about it but it
doesn't matter if it's a hundred billion

526
00:32:55,419 --> 00:32:56,609
over $50 billion

527
00:32:56,609 --> 00:32:59,759
it's a lot if you put it in Euros no

528
00:32:59,759 --> 00:33:03,320
be nice so how much is a hundred billion
I

529
00:33:03,320 --> 00:33:06,580
I have problems imagining that

530
00:33:06,580 --> 00:33:10,599
so if you imagine nine million bicycles
in Beijing

531
00:33:10,599 --> 00:33:15,519
which probably can just multiply that by
11,000

532
00:33:15,519 --> 00:33:19,489
that's how many by their pending box
just we found

533
00:33:19,489 --> 00:33:22,940
and we just scratched surface really
just

534
00:33:22,940 --> 00:33:26,239
probably inspected 1 percent

535
00:33:26,239 --> 00:33:29,239
of of representative

536
00:33:29,239 --> 00:33:33,159
software that is being used whitey

537
00:33:33,159 --> 00:33:36,909
and what does this mean this means that
everyone

538
00:33:36,909 --> 00:33:41,389
of your Windows computers anyone using
Windows don't be shy

539
00:33:41,389 --> 00:33:45,799
I'm shy I'm not ashamed to admit okay
I'm going to assume that we have

540
00:33:45,799 --> 00:33:49,789
a couple of guys not using Windows

541
00:33:49,789 --> 00:33:54,629
at all and they just came here to to
laugh at us all

542
00:33:54,629 --> 00:33:59,940
but the rest of us have definitely have
hundreds of by repenting bucks on our

543
00:33:59,940 --> 00:34:00,549
computers

544
00:34:00,549 --> 00:34:04,639
today that can be exploited possibly
even

545
00:34:04,639 --> 00:34:09,640
from the Internet to executes arbitrary
code on our computers

546
00:34:09,639 --> 00:34:12,980
in the context of our user accounts

547
00:34:12,980 --> 00:34:17,730
this also means that there are tens of
thousands of ways to break into

548
00:34:17,730 --> 00:34:22,929
every bank every network every agency

549
00:34:22,929 --> 00:34:26,389
and every critical infrastructure in the
world

550
00:34:26,389 --> 00:34:30,620
she's pretty cool ever heard of Stuxnet
I think you have

551
00:34:30,620 --> 00:34:34,509
but did you know that Stuxnet she's
using binary planting

552
00:34:34,510 --> 00:34:39,030
vulnerability in 10 Siemens products

553
00:34:39,030 --> 00:34:43,130
for propagation and for resilience

554
00:34:43,130 --> 00:34:46,500
that's pretty cool it's not the first
blog actually

555
00:34:46,500 --> 00:34:49,760
remember name down named was

556
00:34:49,760 --> 00:34:53,510
yet well the young ones among you don't

557
00:34:53,510 --> 00:34:57,070
much seniors do member was

558
00:34:57,070 --> 00:35:01,980
very famous worm and it actually use
binary planting

559
00:35:01,980 --> 00:35:08,960
block for propagation as one of the
factors not not the only one

560
00:35:08,960 --> 00:35:13,100
switch vendors are affected on the list
would be shorter

561
00:35:13,100 --> 00:35:16,630
missus obviously not not the whole
listless would be shorter if the if the

562
00:35:16,630 --> 00:35:17,930
question was reversed

563
00:35:17,930 --> 00:35:21,950
for isn't affected well whoever's just

564
00:35:21,950 --> 00:35:25,430
we're not affected we don't develop
anything yeah

565
00:35:25,430 --> 00:35:28,520
that's a pretty sure fire way to to
avoid it

566
00:35:28,520 --> 00:35:32,330
and you will find the about a hundred to
affected vendors

567
00:35:32,330 --> 00:35:36,860
on secure his website and we found a
hundred morning our research

568
00:35:36,860 --> 00:35:41,100
so it's pretty ubiquitous sir

569
00:35:41,100 --> 00:35:46,380
this is the problem right now what can
you do I don't believe you

570
00:35:46,380 --> 00:35:51,970
hanging out there and just say going all
depressed on me and say now

571
00:35:51,970 --> 00:35:55,060
I wanna kill myself i can't do anything
his

572
00:35:55,060 --> 00:35:58,350
know it it's a joke but

573
00:35:58,350 --> 00:36:01,740
a little bit soon issue with security
are very

574
00:36:01,740 --> 00:36:05,620
frequently just focused on are laying
out the problems

575
00:36:05,620 --> 00:36:08,790
and leaving it at thats

576
00:36:08,790 --> 00:36:14,100
probably because they're also are few
solutions available

577
00:36:14,100 --> 00:36:17,330
but I think we should just to try to

578
00:36:17,330 --> 00:36:21,020
to find as many protection methods as we
can for any

579
00:36:21,020 --> 00:36:26,080
for every problem that we're aware of so
I'm just appealing to you guys if you

580
00:36:26,080 --> 00:36:28,450
have any additional ideas on how to

581
00:36:28,450 --> 00:36:33,010
power developers users and admits to it

582
00:36:33,010 --> 00:36:37,270
get rid of these problems or make their
expectations

583
00:36:37,270 --> 00:36:40,830
less likely or or more difficult it
would be nice if you

584
00:36:40,830 --> 00:36:44,620
she came forward now what do we know

585
00:36:44,620 --> 00:36:48,430
its you can do of course we have these
guidelines on on our

586
00:36:48,430 --> 00:36:51,649
website as well so-so week for the
update that

587
00:36:51,650 --> 00:36:55,560
nor not fertile anymore because we ran
out of ideas

588
00:36:55,560 --> 00:37:00,779
but the updated data is there if your
developers and those those of you who

589
00:37:00,780 --> 00:37:01,540
dared to

590
00:37:01,540 --> 00:37:05,080
raise your hands that you actually our
developers

591
00:37:05,080 --> 00:37:08,590
can do the following:

592
00:37:08,590 --> 00:37:11,870
up

593
00:37:11,870 --> 00:37:15,230
yeah thank you

594
00:37:15,230 --> 00:37:18,290
you definitely should try to use
absolute paths

595
00:37:18,290 --> 00:37:21,930
whenever you're loading libraries or
launching executors books

596
00:37:21,930 --> 00:37:24,950
if you don't know where you're at.
allows and executables

597
00:37:24,950 --> 00:37:28,190
are you don't know what you're doing

598
00:37:28,190 --> 00:37:32,300
seriously you have to know what you're
about to load

599
00:37:32,300 --> 00:37:36,650
it it doesn't just have to pass the Q a
test

600
00:37:36,650 --> 00:37:40,450
it will work if you do it like this but
if the deal as

601
00:37:40,450 --> 00:37:45,160
aren't there it will break I mean it
will be vulnerable

602
00:37:45,160 --> 00:37:50,790
so please use absolute paths use those
environment variables 22

603
00:37:50,790 --> 00:37:54,009
create those absolute path but do it
don't just

604
00:37:54,010 --> 00:37:58,170
let don't just let load library and
other

605
00:37:58,170 --> 00:38:02,110
loading functions to used their own
intelligence because

606
00:38:02,110 --> 00:38:05,540
their stupid they're very friendly very
helpful

607
00:38:05,540 --> 00:38:09,080
but they're stupid

608
00:38:09,080 --> 00:38:14,410
next don't just try to load the library
to see if it's there

609
00:38:14,410 --> 00:38:18,080
well if you do the first thing if you if
you

610
00:38:18,080 --> 00:38:22,210
provide an absolute path to a library
you are allowed to do that

611
00:38:22,210 --> 00:38:25,600
if you if you just want to see if a
specific DL

612
00:38:25,600 --> 00:38:29,450
is in the Windows system32 directory
feel free to

613
00:38:29,450 --> 00:38:32,680
to call load library in C fits their or
if it's not

614
00:38:32,680 --> 00:38:37,390
but never do that with a relative path

615
00:38:37,390 --> 00:38:41,140
next sometimes it's difficult

616
00:38:41,140 --> 00:38:44,549
for applications especially for
libraries

617
00:38:44,550 --> 00:38:48,690
there are going to be included in other
products to

618
00:38:48,690 --> 00:38:51,830
find their own deals because

619
00:38:51,830 --> 00:38:55,090
they will sometimes be loaded

620
00:38:55,090 --> 00:38:59,170
sometimes they'll be loaded from one
applications sometimes from another

621
00:38:59,170 --> 00:39:00,620
application

622
00:39:00,620 --> 00:39:03,910
but their dealers are summer entirely
house

623
00:39:03,910 --> 00:39:07,210
so there what some of them do is

624
00:39:07,210 --> 00:39:11,170
the at to the process pass

625
00:39:11,170 --> 00:39:14,400
the location of those deals but it ends
up

626
00:39:14,400 --> 00:39:18,310
in the past the paths his number six

627
00:39:18,310 --> 00:39:21,330
current working directory his number
five

628
00:39:21,330 --> 00:39:24,650
your phone herbal so don't do that don't
try to

629
00:39:24,650 --> 00:39:28,720
don't try to load anything from the path
actually

630
00:39:28,720 --> 00:39:32,200
when you start your applications said
the current working directory to

631
00:39:32,200 --> 00:39:36,450
some safe location for example system
root

632
00:39:36,450 --> 00:39:40,320
if you do that and your application
doesn't break and you're okay

633
00:39:40,320 --> 00:39:43,250
just make sure that did that this
current working directory cannot be

634
00:39:43,250 --> 00:39:44,250
changed to some

635
00:39:44,250 --> 00:39:47,310
detector control location later

636
00:39:47,310 --> 00:39:50,590
do use the Set dealer directory function
at the very beginning

637
00:39:50,590 --> 00:39:54,960
of your code because that eliminates
that current working directory

638
00:39:54,960 --> 00:39:58,360
from the that removes it from the search
path which is good idea

639
00:39:58,360 --> 00:40:01,590
it doesn't work for exit planted

640
00:40:01,590 --> 00:40:07,820
never you search path I'm expanding its
just never use search path for anything

641
00:40:07,820 --> 00:40:11,800
do your own searching

642
00:40:11,800 --> 00:40:15,180
when you're develop your product you
tested just do some process monitor

643
00:40:15,180 --> 00:40:15,850
anymore

644
00:40:15,850 --> 00:40:19,680
monitoring tool to see what it's doing
how it's loading their libraries and

645
00:40:19,680 --> 00:40:20,440
executables

646
00:40:20,440 --> 00:40:23,670
just you have to control that and then

647
00:40:23,670 --> 00:40:27,720
use the Microsoft hotfix and set it to
max

648
00:40:27,720 --> 00:40:31,920
which would break a lot of applications
if it breaks your application

649
00:40:31,920 --> 00:40:35,590
then 6 your application it has to work
with Microsoft to

650
00:40:35,590 --> 00:40:39,200
set to max and you have to do this for
all models

651
00:40:39,200 --> 00:40:42,230
of your product not just one of them

652
00:40:42,230 --> 00:40:45,370
admins and the admins

653
00:40:45,370 --> 00:40:48,960
anyone at Ministry their own computer at
least

654
00:40:48,960 --> 00:40:52,140
I think love you do just lying

655
00:40:52,140 --> 00:40:55,589
is to install Microsoft hotfix

656
00:40:55,590 --> 00:40:58,630
and remember to configure it it will

657
00:40:58,630 --> 00:41:02,080
prevent loading libraries from current
working directory

658
00:41:02,080 --> 00:41:05,620
from on remote shares which is very good

659
00:41:05,620 --> 00:41:09,359
thing to do it can even completely
remove current working directory

660
00:41:09,360 --> 00:41:13,190
from the search path but it will break
summer applications do disable the web

661
00:41:13,190 --> 00:41:15,600
client services

662
00:41:15,600 --> 00:41:19,290
and to use when the salt restriction
policy on Windows XP and app locker on

663
00:41:19,290 --> 00:41:22,140
Windows seven those are the two most
important things to do

664
00:41:22,140 --> 00:41:26,660
and as you can blocks the web staff
traffic

665
00:41:26,660 --> 00:41:30,319
if your users you cannot do much so
apart from the

666
00:41:30,320 --> 00:41:35,320
the usual being careful restrictions

667
00:41:35,320 --> 00:41:39,070
the third one is really specific share
if you are

668
00:41:39,070 --> 00:41:42,790
provided a folder or a source

669
00:41:42,790 --> 00:41:47,180
with interesting documents don't just
open them from that location

670
00:41:47,180 --> 00:41:51,029
copy those files to your local system
open and from there so that dealers

671
00:41:51,030 --> 00:41:51,860
remain

672
00:41:51,860 --> 00:41:57,810
in the remote location here a couple of
resources that you can look into

673
00:41:57,810 --> 00:42:00,920
are blocked is full of additional
details

674
00:42:00,920 --> 00:42:04,140
that we have no time explaining sheer

675
00:42:04,140 --> 00:42:09,879
so if you're interested we are
constantly reviewing our research there

676
00:42:09,880 --> 00:42:13,140
these are a couple of tools that you can
use these are all free tools for finding

677
00:42:13,140 --> 00:42:17,009
and exploiting these box

678
00:42:17,010 --> 00:42:20,040
and finally the test that I mentioned

679
00:42:20,040 --> 00:42:24,630
is still online it exploits phone
ability

680
00:42:24,630 --> 00:42:29,140
that has been known for three months in
the Windows Address Book that looked

681
00:42:29,140 --> 00:42:30,020
into before

682
00:42:30,020 --> 00:42:34,140
so if you want to test dick your
exposure

683
00:42:34,140 --> 00:42:37,190
the exposure of your computer

684
00:42:37,190 --> 00:42:40,470
to remote binary planting attacks just
visit our

685
00:42:40,470 --> 00:42:44,690
test page and to the test and if it
doesn't work

686
00:42:44,690 --> 00:42:47,760
and you're probably a security expert if
it works

687
00:42:47,760 --> 00:42:51,140
then you probably didn't cheat and

688
00:42:51,140 --> 00:42:54,670
please tell your friends tell your
college still developers tell

689
00:42:54,670 --> 00:42:59,590
admins about this because this is are
huge pile of books

690
00:42:59,590 --> 00:43:02,990
that we're not going to get rid of for a
long long time

691
00:43:02,990 --> 00:43:06,180
because if Microsoft did

692
00:43:06,180 --> 00:43:09,419
remove current working directory from
the search order which they could they

693
00:43:09,420 --> 00:43:11,930
could easily do that with a single
update

694
00:43:11,930 --> 00:43:16,520
so many applications would break that
they cannot afford that

695
00:43:16,520 --> 00:43:20,140
so for all those applications first have
to be fixed

696
00:43:20,140 --> 00:43:23,190
they are not vulnerable they're just
relying

697
00:43:23,190 --> 00:43:27,590
on loading libraries and execute a bus
from the current working directory

698
00:43:27,590 --> 00:43:30,930
so thank you very much I'll this was my
presentation

699
00:43:30,930 --> 00:43:36,089
we have time for questions X

700
00:43:36,090 --> 00:43:40,020
we have some time for questions um very
scary

701
00:43:40,020 --> 00:43:43,180
in assert that she had her shins

702
00:43:43,180 --> 00:43:50,180
any questions on from the audience

703
00:43:57,200 --> 00:44:01,220
home ok the full disclosure I'm work for
Microsoft butter

704
00:44:01,220 --> 00:44:05,670
so I'm just interested in the unit you
had one

705
00:44:05,670 --> 00:44:08,820
a bullet points that was advanced

706
00:44:08,820 --> 00:44:12,100
binary planting techniques that was big
enigmatic you mentioned

707
00:44:12,100 --> 00:44:15,850
some detail about its but not very much
detail

708
00:44:15,850 --> 00:44:19,650
could you expand on that a bit more I'm

709
00:44:19,650 --> 00:44:22,730
non full disclosure

710
00:44:22,730 --> 00:44:27,620
no I we will tell you more about this

711
00:44:27,620 --> 00:44:30,910
we will contact Microsoft directors well
about a few

712
00:44:30,910 --> 00:44:35,190
those things so I will tell margin that
you did your job

713
00:44:35,190 --> 00:44:38,650
I but no currently

714
00:44:38,650 --> 00:44:41,680
currently wearing we're just that

715
00:44:41,680 --> 00:44:45,620
trying to we're running actually an
experiment on the site

716
00:44:45,620 --> 00:44:49,190
we decided not to reveal

717
00:44:49,190 --> 00:44:52,590
most above the Bucks that we found

718
00:44:52,590 --> 00:44:57,010
to the vendors and what is the
experiment were also not not

719
00:44:57,010 --> 00:45:00,320
giving those bucks to anyone else so
were sitting on them

720
00:45:00,320 --> 00:45:04,730
and why are we doing this because this
is a unique opportunity

721
00:45:04,730 --> 00:45:08,050
to compare what vendors do

722
00:45:08,050 --> 00:45:12,180
when their vulnerabilities are publicly
known

723
00:45:12,180 --> 00:45:15,390
I E Secunia list and other lists

724
00:45:15,390 --> 00:45:19,230
of publicly known vulnerabilities as
opposed to those

725
00:45:19,230 --> 00:45:23,300
that we know exists but fenders probably
don't

726
00:45:23,300 --> 00:45:27,410
so we want to see a feast

727
00:45:27,410 --> 00:45:30,480
in one case home vendors

728
00:45:30,480 --> 00:45:34,030
who haven't been publicly smashed on the
head

729
00:45:34,030 --> 00:45:37,340
with their vulnerabilities are

730
00:45:37,340 --> 00:45:41,120
picking up the knowledge about potential
issues

731
00:45:41,120 --> 00:45:44,569
we're trying to gauge their proactive
miss

732
00:45:44,570 --> 00:45:49,610
actually and two we're we're continuing
with this experiment

733
00:45:49,610 --> 00:45:54,550
we're just going to add some more fire
summer fuel to the fire

734
00:45:54,550 --> 00:45:57,670
and try to gain more awareness

735
00:45:57,670 --> 00:46:00,900
more morn more people engaged

736
00:46:00,900 --> 00:46:04,770
in this product so to hopefully see

737
00:46:04,770 --> 00:46:08,120
that some of this knowledge actually
spills over to those

738
00:46:08,120 --> 00:46:13,380
who don't even think they're affected
that's that's what we're doing right now

739
00:46:13,380 --> 00:46:18,490
so it doesn't help you but it explains
little bit why we're doing this

740
00:46:18,490 --> 00:46:25,490
any other questions any more questions

741
00:46:29,580 --> 00:46:32,840
some you told us but most are

742
00:46:32,840 --> 00:46:36,340
applications built with with

743
00:46:36,340 --> 00:46:40,020
development studio are officials durable
measures to do

744
00:46:40,020 --> 00:46:45,930
honorable only only those a billed as a
as MFC applications

745
00:46:45,930 --> 00:46:49,330
like Microsoft foundation class is the
reason for that

746
00:46:49,330 --> 00:46:53,180
is is in is in MFC

747
00:46:53,180 --> 00:46:56,259
library which is included in all those

748
00:46:56,260 --> 00:47:00,400
and and this one this library has a
vulnerability

749
00:47:00,400 --> 00:47:04,330
it its tries too low to deduct WMAP I
don't yell out

750
00:47:04,330 --> 00:47:08,420
so the if you're a developer you have
two ways

751
00:47:08,420 --> 00:47:13,110
of building such applications the MFC
can be statically or dynamically linked

752
00:47:13,110 --> 00:47:16,290
if it's dynamically linked then it's
actually

753
00:47:16,290 --> 00:47:20,170
going to Ian van de mexico definable
called is not going to be

754
00:47:20,170 --> 00:47:23,470
the be included into your execute a bull

755
00:47:23,470 --> 00:47:26,690
but your executors bill will expect

756
00:47:26,690 --> 00:47:31,680
the piracy redistribute ables to be
present on the user's machine

757
00:47:31,680 --> 00:47:35,190
or your applications for application
won't work so

758
00:47:35,190 --> 00:47:39,610
it will be fairly easy for Microsoft to
fix does because with the same single

759
00:47:39,610 --> 00:47:40,370
update

760
00:47:40,370 --> 00:47:45,089
22 those redistribute ables they can fix
your phone mobile application

761
00:47:45,090 --> 00:47:50,340
but if you statically link an MFC
application

762
00:47:50,340 --> 00:47:53,440
then the vulnerable code will actually
be included in

763
00:47:53,440 --> 00:47:57,280
your execute a bill and I don't think
it'll be easy

764
00:47:57,280 --> 00:48:00,420
or even possible Microsoft to fix that
so

765
00:48:00,420 --> 00:48:03,780
they will have to fix the Visual Studio
and you will have to

766
00:48:03,780 --> 00:48:07,750
or the developers will have to rebuild
their applications with their

767
00:48:07,750 --> 00:48:12,560
6 with the fix Tennessee Code and
restricted redistribute that too

768
00:48:12,560 --> 00:48:18,000
to all the users crash in

769
00:48:18,000 --> 00:48:22,490
on the UNIX ID you can just similar
stuff with the in the

770
00:48:22,490 --> 00:48:27,010
and I'm and valuables is a something
similar and even those americans that

771
00:48:27,010 --> 00:48:29,390
some in their own but Americans to
override

772
00:48:29,390 --> 00:48:32,730
some of his misbehavior not I'm not to
my knowledge

773
00:48:32,730 --> 00:48:36,600
now the you I think

774
00:48:36,600 --> 00:48:39,740
we've done so much research I would be
very very

775
00:48:39,740 --> 00:48:42,920
surprised if something like this existed

776
00:48:42,920 --> 00:48:46,170
but its a triple currently with updates

777
00:48:46,170 --> 00:48:50,030
all these vulnerabilities concerning
deal

778
00:48:50,030 --> 00:48:54,290
loading and pics loading or only some of
them actually

779
00:48:54,290 --> 00:48:57,490
every application has to be fixed
separately

780
00:48:57,490 --> 00:49:01,730
what you can do right now is apply
Microsoft's

781
00:49:01,730 --> 00:49:06,830
hotfix which will based on your
configuration that you choose

782
00:49:06,830 --> 00:49:10,360
which will eliminate loading from the
current working directory

783
00:49:10,360 --> 00:49:14,240
for all applications under certain
circumstances so

784
00:49:14,240 --> 00:49:17,250
so it's very easy to to prevent

785
00:49:17,250 --> 00:49:20,500
remote attacks because that that

786
00:49:20,500 --> 00:49:25,730
hotfix can easily eliminated in the
loading from

787
00:49:25,730 --> 00:49:29,000
current working directory on remote
shares which is the default

788
00:49:29,000 --> 00:49:30,650
configuration

789
00:49:30,650 --> 00:49:35,310
just very good that's job well done by
Microsoft but that only works for the

790
00:49:35,310 --> 00:49:35,970
Isles

791
00:49:35,970 --> 00:49:39,520
and that only works for remote

792
00:49:39,520 --> 00:49:43,330
attacks so if you work from a zip
archive

793
00:49:43,330 --> 00:49:47,279
on or from a local USB disk that doesn't
protect you

794
00:49:47,280 --> 00:49:54,280
they have Christian there

795
00:49:55,750 --> 00:49:59,069
socal question the comment so the
commanders

796
00:49:59,069 --> 00:50:03,119
action with wood the gentleman was
adjusting so the cut fix

797
00:50:03,119 --> 00:50:07,180
on that you mentioned they just disable
the year issue W you

798
00:50:07,180 --> 00:50:10,460
to build but the on that the fix

799
00:50:10,460 --> 00:50:14,040
all applications can break some
obligations why can't you just build

800
00:50:14,040 --> 00:50:17,119
with the whole on the load deal old
function

801
00:50:17,119 --> 00:50:20,780
functional gym when those and you
hookahs essentially going to

802
00:50:20,780 --> 00:50:24,809
just look at where the implications
looking you can have a wait list of

803
00:50:24,809 --> 00:50:26,220
available applications

804
00:50:26,220 --> 00:50:31,050
that you loath to conduct remotely but
it seems like a fairly simple

805
00:50:31,050 --> 00:50:34,630
think to implement arm and the questions

806
00:50:34,630 --> 00:50:38,960
I wasn't sure if you answered is the
staple for that possible in

807
00:50:38,960 --> 00:50:42,069
linens this particular type

808
00:50:42,069 --> 00:50:46,240
for is is not possible I mean Linux
works differently although it does

809
00:50:46,240 --> 00:50:50,780
have a partner specific algorithm for
finding

810
00:50:50,780 --> 00:50:54,700
shared objects I don't think

811
00:50:54,700 --> 00:50:57,910
we found Pranav anyway to

812
00:50:57,910 --> 00:51:01,290
to this remotely because

813
00:51:01,290 --> 00:51:04,509
which is a relief much friendlier than
Linux

814
00:51:04,510 --> 00:51:07,970
in terms of using remote resources

815
00:51:07,970 --> 00:51:11,720
so that there's no no wept every
director

816
00:51:11,720 --> 00:51:15,319
there's no way to to go through the
firewall so easily

817
00:51:15,319 --> 00:51:19,369
so Linux has similar issues

818
00:51:19,369 --> 00:51:22,640
you can find them on the internet and
that they've been

819
00:51:22,640 --> 00:51:25,839
knowns for exams I i think longer than
these

820
00:51:25,839 --> 00:51:31,220
just we just didn't look into the Linux
stuff so much as

821
00:51:31,220 --> 00:51:35,569
did that at windows just the sorry this
is the first comment was

822
00:51:35,569 --> 00:51:39,720
sir about hooking the los libros
function yes it

823
00:51:39,720 --> 00:51:42,920
it's easy to folklore library functions
I mean much the what makes a

824
00:51:42,920 --> 00:51:46,829
deep was actually even better the the
change the behavior of los libros

825
00:51:46,829 --> 00:51:47,440
function

826
00:51:47,440 --> 00:51:50,809
which is more more efficient but and you

827
00:51:50,809 --> 00:51:54,130
its impossible to know in advance

828
00:51:54,130 --> 00:51:58,490
whether an application actually needs
this functionality loading from a

829
00:51:58,490 --> 00:51:59,640
current working directory

830
00:51:59,640 --> 00:52:04,220
those applications that break are
relying on this functionality

831
00:52:04,220 --> 00:52:08,099
but you can hook the function in a way
that you have a white list of

832
00:52:08,099 --> 00:52:10,160
applications as I understood the guide

833
00:52:10,160 --> 00:52:13,290
so you can you can do that

834
00:52:13,290 --> 00:52:17,230
you can have the whiteness of
applications that to bad stuff

835
00:52:17,230 --> 00:52:20,000
Nord

836
00:52:20,000 --> 00:52:23,070
necessary functionality from the little
smile

837
00:52:23,070 --> 00:52:27,850
not absolute path relative path and then
you can have a whitelist

838
00:52:27,850 --> 00:52:31,259
and look at the application doing this
and allow it or not alone

839
00:52:31,260 --> 00:52:36,590
so I think it might be possible in yes
you can already do this Microsoft hotfix

840
00:52:36,590 --> 00:52:40,430
allows for a global setting and then you
can specifically

841
00:52:40,430 --> 00:52:44,370
said this functionality for any
particular application

842
00:52:44,370 --> 00:52:48,520
Sosa you can for example used the

843
00:52:48,520 --> 00:52:51,790
maximum protection provided by this
hotfix

844
00:52:51,790 --> 00:52:55,110
and then when you see that for example

845
00:52:55,110 --> 00:52:58,420
outlook outlooks right

846
00:52:58,420 --> 00:53:01,690
trick functionality breaks then you can

847
00:53:01,690 --> 00:53:05,630
just that well that's that's a actually
what happens you cannot right click on

848
00:53:05,630 --> 00:53:06,350
on

849
00:53:06,350 --> 00:53:10,529
on an email message anymore and so when
that happens

850
00:53:10,530 --> 00:53:13,740
just at a specific setting

851
00:53:13,740 --> 00:53:17,090
which is less strict for Microsoft
outlook

852
00:53:17,090 --> 00:53:21,390
but it works for the entire application
so yeah you can do that

853
00:53:21,390 --> 00:53:24,580
it's a lot of work dreading this

854
00:53:24,580 --> 00:53:28,060
mmm his head he found 100 a moron

855
00:53:28,060 --> 00:53:31,840
indications which a more noble and you
get a list of reasons why they should be

856
00:53:31,840 --> 00:53:32,390
willful

857
00:53:32,390 --> 00:53:36,640
Janecek up how many of those money
because they're just

858
00:53:36,640 --> 00:53:40,029
around checking for some dealers

859
00:53:40,030 --> 00:53:44,610
and home have them re-use available
because they actually use this feature

860
00:53:44,610 --> 00:53:49,030
no we we were just looking for those who
are vulnerable

861
00:53:49,030 --> 00:53:52,220
but well what you're asking

862
00:53:52,220 --> 00:53:57,300
is probably this I have an extra slide
for this here

863
00:53:57,300 --> 00:54:01,230
maybe I do moms

864
00:54:01,230 --> 00:54:04,300
I'm so

865
00:54:04,300 --> 00:54:08,080
yeah that's what you have so

866
00:54:08,080 --> 00:54:12,160
in in the set of all existing Windows
applications

867
00:54:12,160 --> 00:54:15,549
you have a subset of those that are
binary planting positive

868
00:54:15,550 --> 00:54:18,340
that's what we call them they are
vulnerable to binary planting which

869
00:54:18,340 --> 00:54:19,750
means they are loading

870
00:54:19,750 --> 00:54:22,830
their dealers any in secure way

871
00:54:22,830 --> 00:54:25,950
and which eventually

872
00:54:25,950 --> 00:54:29,440
results in them loading from the current
working directory and then we have

873
00:54:29,440 --> 00:54:29,920
another

874
00:54:29,920 --> 00:54:33,480
subset which might have

875
00:54:33,480 --> 00:54:37,890
quite and number passed for the same
members

876
00:54:37,890 --> 00:54:42,560
which because CWG addicted applications
which are those that actually break if

877
00:54:42,560 --> 00:54:42,950
you

878
00:54:42,950 --> 00:54:46,120
if you install Microsoft hotfix and set
it to max

879
00:54:46,120 --> 00:54:49,690
those are the applications that are the
reason why Microsoft cannot

880
00:54:49,690 --> 00:54:52,990
today make up simple updates to the

881
00:54:52,990 --> 00:54:56,760
for the way that these library loading
functions be changing just

882
00:54:56,760 --> 00:55:00,180
limited to current working directory
those and applications that break

883
00:55:00,180 --> 00:55:03,390
but you also have some applications that
are im both

884
00:55:03,390 --> 00:55:06,500
the sense you have applications which

885
00:55:06,500 --> 00:55:09,500
are vulnerable and

886
00:55:09,500 --> 00:55:13,050
at the same time will break if you

887
00:55:13,050 --> 00:55:16,700
disallow for the entire application
loading of libraries from the current

888
00:55:16,700 --> 00:55:17,520
working directory

889
00:55:17,520 --> 00:55:22,620
that does this answer your question X no
idea

890
00:55:22,620 --> 00:55:26,650
numbers and the sizes we just don't that

891
00:55:26,650 --> 00:55:30,780
on gay members

892
00:55:30,780 --> 00:55:35,760
I'm going on and the other one has at
least five me I must be bothering you

893
00:55:35,760 --> 00:55:39,820
a hike in below education which is a
addicted but not horrible

894
00:55:39,820 --> 00:55:45,270
which is interesting a how you can build
an application which is

895
00:55:45,270 --> 00:55:49,080
cities are you the addicted but not by
implanting positive

896
00:55:49,080 --> 00:55:56,080
you need something very interesting

897
00:56:04,780 --> 00:56:06,950
okay I think we have to stop here

