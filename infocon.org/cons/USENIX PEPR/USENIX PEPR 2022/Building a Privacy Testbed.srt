1
00:00:10,240 --> 00:00:12,559
hello everyone i'm maves rashid i am

2
00:00:12,559 --> 00:00:14,960
director of the uk's national research

3
00:00:14,960 --> 00:00:17,199
center on uh privacy harm reduction and

4
00:00:17,199 --> 00:00:20,080
adversarial influence online uh i'm also

5
00:00:20,080 --> 00:00:22,320
a professor at the university of uh

6
00:00:22,320 --> 00:00:24,400
bristol and today together with my

7
00:00:24,400 --> 00:00:26,800
colleague pathetas chaudhry i'm going to

8
00:00:26,800 --> 00:00:30,000
talk to you about our work on building a

9
00:00:30,000 --> 00:00:32,800
privacy test bed of course building a

10
00:00:32,800 --> 00:00:34,800
test bed is not an endeavor that just

11
00:00:34,800 --> 00:00:37,200
two people can do so a number of other

12
00:00:37,200 --> 00:00:39,040
researchers and phd students have been

13
00:00:39,040 --> 00:00:40,960
involved in the work and they are all

14
00:00:40,960 --> 00:00:43,600
all listed here uh

15
00:00:43,600 --> 00:00:45,680
by way of acknowledgement

16
00:00:45,680 --> 00:00:47,760
so the question that we need to start

17
00:00:47,760 --> 00:00:51,840
from is as to why build a privacy test

18
00:00:51,840 --> 00:00:53,920
bed and you know being at an event such

19
00:00:53,920 --> 00:00:56,079
as pepper it's it's a bit like preaching

20
00:00:56,079 --> 00:00:59,440
to the choir but we hear about the

21
00:00:59,440 --> 00:01:02,640
problems with software applications or

22
00:01:02,640 --> 00:01:04,479
software-based systems with regards to

23
00:01:04,479 --> 00:01:06,720
privacy on a regular basis whether you

24
00:01:06,720 --> 00:01:08,320
know it is in the kind of public

25
00:01:08,320 --> 00:01:10,640
discourse such as in newspapers talking

26
00:01:10,640 --> 00:01:12,880
about amazon's ring logging every

27
00:01:12,880 --> 00:01:15,600
doorbell press and app action to for

28
00:01:15,600 --> 00:01:17,600
example smart home applications

29
00:01:17,600 --> 00:01:20,080
potentially spying or collecting data

30
00:01:20,080 --> 00:01:23,439
about about their users uh as well as

31
00:01:23,439 --> 00:01:25,600
you know there's this kind of wonderful

32
00:01:25,600 --> 00:01:27,280
picture from

33
00:01:27,280 --> 00:01:30,159
one of the keynotes at soups a few years

34
00:01:30,159 --> 00:01:32,079
ago which talked about the fact how

35
00:01:32,079 --> 00:01:33,920
smartphones actually

36
00:01:33,920 --> 00:01:34,640
know

37
00:01:34,640 --> 00:01:37,040
very much about your apps know very much

38
00:01:37,040 --> 00:01:37,840
about

39
00:01:37,840 --> 00:01:39,759
where you have been and can build a

40
00:01:39,759 --> 00:01:42,079
pretty much perfect map of manhattan and

41
00:01:42,079 --> 00:01:44,079
it has been very much to the fore as

42
00:01:44,079 --> 00:01:46,960
well in the debates around uh track and

43
00:01:46,960 --> 00:01:49,439
trace uh in the face of the pandemic

44
00:01:49,439 --> 00:01:50,640
what kind of information is being

45
00:01:50,640 --> 00:01:53,360
collected what kind of metadata is being

46
00:01:53,360 --> 00:01:55,600
used on the basis of that collection and

47
00:01:55,600 --> 00:02:00,158
whether that leads to privacy leakage

48
00:02:00,799 --> 00:02:01,759
so

49
00:02:01,759 --> 00:02:04,479
why a privacy testbed there are many

50
00:02:04,479 --> 00:02:05,759
potential

51
00:02:05,759 --> 00:02:08,560
users of such a testbed so if you're an

52
00:02:08,560 --> 00:02:11,280
app developer okay you may want to get

53
00:02:11,280 --> 00:02:13,040
assurance about particular properties

54
00:02:13,040 --> 00:02:15,840
okay so with regards to compliance with

55
00:02:15,840 --> 00:02:19,440
regulations such as gdpr or copper or

56
00:02:19,440 --> 00:02:21,680
hipaa you you may want to test if you

57
00:02:21,680 --> 00:02:24,319
are making assertions that you are not

58
00:02:24,319 --> 00:02:26,239
leaking particular types of data that is

59
00:02:26,239 --> 00:02:28,480
actually true you may care for your

60
00:02:28,480 --> 00:02:30,959
users and you may also want to give them

61
00:02:30,959 --> 00:02:32,400
assurance that you know what you're

62
00:02:32,400 --> 00:02:34,720
really doing is uh

63
00:02:34,720 --> 00:02:37,920
what you're claiming but also many apps

64
00:02:37,920 --> 00:02:39,280
are built through third-party libraries

65
00:02:39,280 --> 00:02:41,120
and apis including ad networks and

66
00:02:41,120 --> 00:02:43,040
things like that and how do you know

67
00:02:43,040 --> 00:02:44,800
what information or what metadata is

68
00:02:44,800 --> 00:02:46,879
actually going to these third-party apps

69
00:02:46,879 --> 00:02:48,239
and libraries and if you've configured

70
00:02:48,239 --> 00:02:50,080
them have you configured them correctly

71
00:02:50,080 --> 00:02:51,599
to constrain the data that is being

72
00:02:51,599 --> 00:02:53,040
shared

73
00:02:53,040 --> 00:02:55,280
there is of course regulators you know

74
00:02:55,280 --> 00:02:56,879
who are interested in checking claims

75
00:02:56,879 --> 00:02:59,280
about data and information storage and

76
00:02:59,280 --> 00:03:01,200
flows from a compliance perspective so

77
00:03:01,200 --> 00:03:02,800
if someone is claiming that they have

78
00:03:02,800 --> 00:03:04,159
done something and they comply with the

79
00:03:04,159 --> 00:03:06,080
particular regulation is that actually

80
00:03:06,080 --> 00:03:08,560
the case and and then of course we are

81
00:03:08,560 --> 00:03:10,400
researchers you know we want to

82
00:03:10,400 --> 00:03:12,480
undertake rigorous evaluation of

83
00:03:12,480 --> 00:03:14,480
different types of applications under

84
00:03:14,480 --> 00:03:16,480
experimental conditions but we also want

85
00:03:16,480 --> 00:03:18,159
to be able to compare and contrast we

86
00:03:18,159 --> 00:03:19,680
want to be able to generate and share

87
00:03:19,680 --> 00:03:22,159
our data sets so that people can compare

88
00:03:22,159 --> 00:03:24,879
against a common reference platform but

89
00:03:24,879 --> 00:03:26,799
equally journalists citizens rights

90
00:03:26,799 --> 00:03:28,720
groups they may be interested in

91
00:03:28,720 --> 00:03:30,799
undertaking similar evaluations and

92
00:03:30,799 --> 00:03:32,879
generating and sharing data sets from

93
00:03:32,879 --> 00:03:35,519
these these evaluations and last but not

94
00:03:35,519 --> 00:03:38,400
least even end users can be a potential

95
00:03:38,400 --> 00:03:40,319
user of such a privacy test pad and i

96
00:03:40,319 --> 00:03:41,840
know it's a kind of vision into the

97
00:03:41,840 --> 00:03:43,760
future because at the moment our focus

98
00:03:43,760 --> 00:03:45,920
primarily has been on kind of

99
00:03:45,920 --> 00:03:47,760
researchers and potentially app

100
00:03:47,760 --> 00:03:50,080
developers and regulators but really if

101
00:03:50,080 --> 00:03:51,440
you're an end user and you are

102
00:03:51,440 --> 00:03:53,360
downloading an application you know you

103
00:03:53,360 --> 00:03:56,480
want to see does it do what it says on

104
00:03:56,480 --> 00:03:57,439
the 10

105
00:03:57,439 --> 00:03:59,920
okay so if it has a privacy policy is it

106
00:03:59,920 --> 00:04:02,000
actually doing the things that it claims

107
00:04:02,000 --> 00:04:04,319
in its privacy policy if it has got a

108
00:04:04,319 --> 00:04:06,400
data protection impact assessment is it

109
00:04:06,400 --> 00:04:08,640
actually doing those things or you know

110
00:04:08,640 --> 00:04:10,799
privacy labels that are quite now common

111
00:04:10,799 --> 00:04:13,840
on the apple app store but also uh will

112
00:04:13,840 --> 00:04:16,000
come in on on google

113
00:04:16,000 --> 00:04:17,918
android and google play store as well

114
00:04:17,918 --> 00:04:19,199
you know if they're making certain

115
00:04:19,199 --> 00:04:20,798
claims how do you know that they're

116
00:04:20,798 --> 00:04:22,560
actually true can you go and drop that

117
00:04:22,560 --> 00:04:25,199
app into a test pad and be able to get

118
00:04:25,199 --> 00:04:27,120
some assurance about those properties

119
00:04:27,120 --> 00:04:30,400
from an independent perspective

120
00:04:30,400 --> 00:04:33,360
so here is our case in point right

121
00:04:33,360 --> 00:04:35,759
so uh end-to-end encryption messaging

122
00:04:35,759 --> 00:04:37,280
applications so things like signal

123
00:04:37,280 --> 00:04:39,600
whatsapp and and so on and there is this

124
00:04:39,600 --> 00:04:42,560
eternal debate between data and metadata

125
00:04:42,560 --> 00:04:44,639
and it all depends on you know what the

126
00:04:44,639 --> 00:04:46,639
threat model is and in this case for

127
00:04:46,639 --> 00:04:48,240
example you know

128
00:04:48,240 --> 00:04:49,919
these messaging apps would actually

129
00:04:49,919 --> 00:04:51,919
encrypt the contents of the message in

130
00:04:51,919 --> 00:04:54,479
itself but there may be metadata that

131
00:04:54,479 --> 00:04:56,800
might be flowing alongside which it does

132
00:04:56,800 --> 00:04:58,479
depending on for example

133
00:04:58,479 --> 00:04:59,680
you know whatsapp would know that you

134
00:04:59,680 --> 00:05:00,960
talk to someone at a particular point in

135
00:05:00,960 --> 00:05:03,440
time they would not know exactly what

136
00:05:03,440 --> 00:05:04,880
you what you discussed in that

137
00:05:04,880 --> 00:05:06,960
particular point in time we deployed

138
00:05:06,960 --> 00:05:08,400
actually you know

139
00:05:08,400 --> 00:05:10,240
some of these apps in in our in our

140
00:05:10,240 --> 00:05:12,400
prototype test pad so you know this is

141
00:05:12,400 --> 00:05:15,280
an uh analysis of of signal where you

142
00:05:15,280 --> 00:05:18,639
can see that there are different um

143
00:05:18,639 --> 00:05:22,800
ips being being contacted as part of the

144
00:05:22,800 --> 00:05:25,039
signal operation set up now i'm not

145
00:05:25,039 --> 00:05:26,240
saying there's anything in legitimate

146
00:05:26,240 --> 00:05:28,960
going on but depending on jurisdiction

147
00:05:28,960 --> 00:05:30,800
and depending on regulatory compliance

148
00:05:30,800 --> 00:05:32,880
there may be potential

149
00:05:32,880 --> 00:05:34,639
issues here for example if there are

150
00:05:34,639 --> 00:05:36,240
particular services being contacted

151
00:05:36,240 --> 00:05:38,240
around a particular geographic area but

152
00:05:38,240 --> 00:05:40,560
on the reverse side if you are a privacy

153
00:05:40,560 --> 00:05:42,400
activist you may have concerns about the

154
00:05:42,400 --> 00:05:45,039
data that is being collected about you

155
00:05:45,039 --> 00:05:47,840
hi i am part of so uh we did an internal

156
00:05:47,840 --> 00:05:49,520
consultation between the referent

157
00:05:49,520 --> 00:05:51,280
researchers before we started building

158
00:05:51,280 --> 00:05:53,680
on this test bed and so we we kind of

159
00:05:53,680 --> 00:05:55,360
thought that there would be some expert

160
00:05:55,360 --> 00:05:57,199
users and there would be non-expert

161
00:05:57,199 --> 00:05:59,840
users as well and the expert users would

162
00:05:59,840 --> 00:06:01,680
perhaps want to run more advanced

163
00:06:01,680 --> 00:06:03,520
features on the test bed

164
00:06:03,520 --> 00:06:05,600
nevertheless there would be a sharing of

165
00:06:05,600 --> 00:06:07,600
the deployment specs between the expert

166
00:06:07,600 --> 00:06:09,919
users and the non-expert users for the

167
00:06:09,919 --> 00:06:11,440
testbed

168
00:06:11,440 --> 00:06:13,280
now what was our high level design

169
00:06:13,280 --> 00:06:15,680
considerations for the testbed

170
00:06:15,680 --> 00:06:17,600
so we would want to have a layer of

171
00:06:17,600 --> 00:06:19,120
orchestration or dip

172
00:06:19,120 --> 00:06:21,919
of deployment where we would be able to

173
00:06:21,919 --> 00:06:25,360
deploy many vms on the testbed and the

174
00:06:25,360 --> 00:06:28,160
networking would emulate the real-world

175
00:06:28,160 --> 00:06:30,639
proxies and the routers that any traffic

176
00:06:30,639 --> 00:06:32,720
goes through which would eventually

177
00:06:32,720 --> 00:06:35,680
facilitate some kind of data logging and

178
00:06:35,680 --> 00:06:38,000
analysis on the log data at the

179
00:06:38,000 --> 00:06:39,840
orchestration layer somebody would be

180
00:06:39,840 --> 00:06:42,080
able to come in and deploy their apps

181
00:06:42,080 --> 00:06:44,319
and see how they play out with all the

182
00:06:44,319 --> 00:06:47,199
other layers below them

183
00:06:47,199 --> 00:06:49,199
so how did we implement the testbed so

184
00:06:49,199 --> 00:06:51,199
when once we implemented the

185
00:06:51,199 --> 00:06:53,599
once we implemented the testbed

186
00:06:53,599 --> 00:06:54,560
we had

187
00:06:54,560 --> 00:06:56,800
the virtualization was done by a

188
00:06:56,800 --> 00:06:59,120
kernel-based uh virtual machine called

189
00:06:59,120 --> 00:07:00,240
kvm

190
00:07:00,240 --> 00:07:02,560
that allows it to function like a

191
00:07:02,560 --> 00:07:04,960
hypervisor which was deployed inside a

192
00:07:04,960 --> 00:07:07,360
ubuntu desktop virtual machine

193
00:07:07,360 --> 00:07:09,360
there was a command line interface tool

194
00:07:09,360 --> 00:07:12,400
which was built using rust

195
00:07:12,400 --> 00:07:15,120
and that models around docker compost so

196
00:07:15,120 --> 00:07:17,759
you have kvm compost up and down

197
00:07:17,759 --> 00:07:20,240
to turn on the test bed and tear down

198
00:07:20,240 --> 00:07:21,440
the test bed

199
00:07:21,440 --> 00:07:23,599
and the networking was provided using

200
00:07:23,599 --> 00:07:27,120
obs switches and that was linked up to a

201
00:07:27,120 --> 00:07:30,160
sdn controller as flood light to enable

202
00:07:30,160 --> 00:07:33,120
more advanced network management

203
00:07:33,120 --> 00:07:34,800
so what are the challenges and lessons

204
00:07:34,800 --> 00:07:36,720
we learned from the testbed

205
00:07:36,720 --> 00:07:39,520
the testbed actually facilitates

206
00:07:39,520 --> 00:07:42,319
the animation of security protocols

207
00:07:42,319 --> 00:07:44,560
and their automated testing their

208
00:07:44,560 --> 00:07:46,800
automated correctness proof now the

209
00:07:46,800 --> 00:07:50,000
moment we we simulate a protocol and

210
00:07:50,000 --> 00:07:51,840
test it for its correctness there will

211
00:07:51,840 --> 00:07:54,240
be assumptions we will make for example

212
00:07:54,240 --> 00:07:56,639
some of the applications are tied to

213
00:07:56,639 --> 00:07:59,039
cloud services so how do we replicate

214
00:07:59,039 --> 00:08:01,199
them on the test bed

215
00:08:01,199 --> 00:08:03,360
and the other one was that it it was not

216
00:08:03,360 --> 00:08:06,879
just a plug-and-play so for example the

217
00:08:06,879 --> 00:08:09,440
e2e apps that require a sim validation

218
00:08:09,440 --> 00:08:12,639
we can still emulate that using e-sims

219
00:08:12,639 --> 00:08:14,639
but we still need custom scripts to

220
00:08:14,639 --> 00:08:18,560
simulate user interaction in adb

221
00:08:18,560 --> 00:08:20,800
the other one was using playbooks now

222
00:08:20,800 --> 00:08:24,160
playbook sometimes can can give problems

223
00:08:24,160 --> 00:08:26,720
if for a comma or it is difficult to

224
00:08:26,720 --> 00:08:28,639
validate the transitions

225
00:08:28,639 --> 00:08:30,720
when one command has executed before the

226
00:08:30,720 --> 00:08:33,279
next command starts so the idea was to

227
00:08:33,279 --> 00:08:36,240
have a minimal set of playbooks and then

228
00:08:36,240 --> 00:08:39,679
have a logging file to see if all the so

229
00:08:39,679 --> 00:08:41,679
what are our future plans with the test

230
00:08:41,679 --> 00:08:44,480
bed so as we discussed a few minutes

231
00:08:44,480 --> 00:08:46,560
back that we had an internal discussion

232
00:08:46,560 --> 00:08:48,720
now we want to scale that up and have a

233
00:08:48,720 --> 00:08:51,279
formalized focus groups with wider test

234
00:08:51,279 --> 00:08:53,839
bed users why we want to do it we want

235
00:08:53,839 --> 00:08:56,240
to evolve more scenarios we want to

236
00:08:56,240 --> 00:08:58,560
evolve their expectations in terms of

237
00:08:58,560 --> 00:09:00,320
usability

238
00:09:00,320 --> 00:09:01,040
and

239
00:09:01,040 --> 00:09:02,959
we would like to invite members from

240
00:09:02,959 --> 00:09:05,279
this audience to be part of that focus

241
00:09:05,279 --> 00:09:06,399
group

242
00:09:06,399 --> 00:09:08,320
in terms of future implementation

243
00:09:08,320 --> 00:09:09,600
priorities

244
00:09:09,600 --> 00:09:11,600
say we want to scale up in terms of

245
00:09:11,600 --> 00:09:14,000
deployment of vms say for example we

246
00:09:14,000 --> 00:09:15,760
want to deploy thousands of virtual

247
00:09:15,760 --> 00:09:18,000
machines on the testbed

248
00:09:18,000 --> 00:09:21,040
connecting with other test beds now here

249
00:09:21,040 --> 00:09:22,399
we want to evolve

250
00:09:22,399 --> 00:09:24,560
potential data exchange mechanisms as

251
00:09:24,560 --> 00:09:27,200
well that we can get data from there and

252
00:09:27,200 --> 00:09:28,959
test it in our test bed and give them

253
00:09:28,959 --> 00:09:30,959
out for analysis

254
00:09:30,959 --> 00:09:32,959
usability is very important for us

255
00:09:32,959 --> 00:09:34,480
nevertheless

256
00:09:34,480 --> 00:09:36,720
test beds of such nature have their own

257
00:09:36,720 --> 00:09:39,440
complexities so perhaps we won't be able

258
00:09:39,440 --> 00:09:41,600
to be at a stage where you know we can

259
00:09:41,600 --> 00:09:44,320
just go in and deploy an app without

260
00:09:44,320 --> 00:09:46,480
with minimal mouse clicks but at the

261
00:09:46,480 --> 00:09:49,120
same time we would want to see how we

262
00:09:49,120 --> 00:09:51,440
can share between the expert users and

263
00:09:51,440 --> 00:09:53,680
the non-expert users

264
00:09:53,680 --> 00:09:55,600
we would like to integrate additional

265
00:09:55,600 --> 00:09:57,440
analysis tools in the testbed for

266
00:09:57,440 --> 00:09:59,360
example

267
00:09:59,360 --> 00:10:01,760
see what's going into the tls packets so

268
00:10:01,760 --> 00:10:03,600
these are some of the plans we have with

269
00:10:03,600 --> 00:10:06,560
respect to the to the test bed

270
00:10:06,560 --> 00:10:08,880
and if somebody is interested they can

271
00:10:08,880 --> 00:10:13,880
contact us here thank you so much

272
00:10:20,399 --> 00:10:22,480
you

