1
00:00:09,440 --> 00:00:12,000
hi everyone i'm akshath jain and i will

2
00:00:12,000 --> 00:00:13,519
be presenting this presentation

3
00:00:13,519 --> 00:00:15,599
alongside jack gardner and the title of

4
00:00:15,599 --> 00:00:17,279
presentation is helping mobile

5
00:00:17,279 --> 00:00:18,800
application developers create accurate

6
00:00:18,800 --> 00:00:20,240
privacy labels

7
00:00:20,240 --> 00:00:21,199
and

8
00:00:21,199 --> 00:00:23,279
this presentation actually based on our

9
00:00:23,279 --> 00:00:25,119
paper presented at iwpe and the full

10
00:00:25,119 --> 00:00:26,640
list of authors on that paper is shown

11
00:00:26,640 --> 00:00:29,119
on the slide

12
00:00:29,599 --> 00:00:32,719
so first let's start off with an outline

13
00:00:32,719 --> 00:00:34,800
of our presentation

14
00:00:34,800 --> 00:00:36,399
so we'll first begin talking about

15
00:00:36,399 --> 00:00:38,160
mobile application privacy labels so

16
00:00:38,160 --> 00:00:40,079
these are necessitated by long complex

17
00:00:40,079 --> 00:00:41,760
privacy policies that

18
00:00:41,760 --> 00:00:44,480
very few people are really no one reads

19
00:00:44,480 --> 00:00:45,520
and

20
00:00:45,520 --> 00:00:47,039
carnegie mellon researchers actually

21
00:00:47,039 --> 00:00:48,879
proposed privacy labels as a solution

22
00:00:48,879 --> 00:00:51,280
over a decade a decade ago

23
00:00:51,280 --> 00:00:52,879
so now apple and google are adopting

24
00:00:52,879 --> 00:00:54,640
these in their mobile application stores

25
00:00:54,640 --> 00:00:56,559
and we'll also provide a few examples of

26
00:00:56,559 --> 00:00:59,520
these later on in the presentation

27
00:00:59,520 --> 00:01:00,879
after that we'll talk about challenges

28
00:01:00,879 --> 00:01:02,399
for developers when creating these

29
00:01:02,399 --> 00:01:04,799
privacy labels and really we'll focus on

30
00:01:04,799 --> 00:01:05,760
how the level of developer

31
00:01:05,760 --> 00:01:08,080
sophistication varies widely and we'll

32
00:01:08,080 --> 00:01:09,680
preside some research that shows how

33
00:01:09,680 --> 00:01:10,880
developers are struggling with the

34
00:01:10,880 --> 00:01:14,000
accuracy of their privacy labels

35
00:01:14,000 --> 00:01:15,360
from there we'll discuss a little bit of

36
00:01:15,360 --> 00:01:17,920
relevant prior work and really we'll

37
00:01:17,920 --> 00:01:19,520
emphasize how some technology is being

38
00:01:19,520 --> 00:01:21,439
developed

39
00:01:21,439 --> 00:01:22,960
to help these developers comply with

40
00:01:22,960 --> 00:01:25,439
regulations and even at carnegie mellon

41
00:01:25,439 --> 00:01:27,200
we're building usable privacy policy and

42
00:01:27,200 --> 00:01:28,799
personalized privacy assistance to help

43
00:01:28,799 --> 00:01:31,119
with this

44
00:01:31,119 --> 00:01:32,240
from there we'll talk about the

45
00:01:32,240 --> 00:01:33,680
development and evaluation of the

46
00:01:33,680 --> 00:01:36,400
initial privacy label wiz tool which is

47
00:01:36,400 --> 00:01:38,159
a tool that's designed to help

48
00:01:38,159 --> 00:01:40,000
developers more accurately create these

49
00:01:40,000 --> 00:01:42,000
privacy labels

50
00:01:42,000 --> 00:01:44,240
it uses static analysis to look at the

51
00:01:44,240 --> 00:01:46,079
use of data types specifically ios

52
00:01:46,079 --> 00:01:49,200
permissions in ios applications

53
00:01:49,200 --> 00:01:50,720
however due to static analysis

54
00:01:50,720 --> 00:01:52,560
limitations our focus with the tool is

55
00:01:52,560 --> 00:01:54,240
really on prompting meaningful developed

56
00:01:54,240 --> 00:01:56,560
interactions and urging developers to

57
00:01:56,560 --> 00:01:58,320
think deeply about their data practices

58
00:01:58,320 --> 00:01:59,680
within their apps

59
00:01:59,680 --> 00:02:01,040
and really we want to ensure that we

60
00:02:01,040 --> 00:02:02,640
build a tool that aligns with developer

61
00:02:02,640 --> 00:02:04,079
workflows so it's actually used and

62
00:02:04,079 --> 00:02:06,479
adopted

63
00:02:06,479 --> 00:02:08,239
from there we'll be talking about how we

64
00:02:08,239 --> 00:02:10,479
refine privacy label is um and we'll

65
00:02:10,479 --> 00:02:12,080
discuss some user studies and interviews

66
00:02:12,080 --> 00:02:13,920
that help us achieve the criteria we

67
00:02:13,920 --> 00:02:15,520
defined for ourselves

68
00:02:15,520 --> 00:02:16,800
and then we'll talk about some remaining

69
00:02:16,800 --> 00:02:19,840
challenges in future work

70
00:02:20,879 --> 00:02:22,879
so here's an example of an apple privacy

71
00:02:22,879 --> 00:02:24,879
label um

72
00:02:24,879 --> 00:02:27,280
so this is actually from the ios app

73
00:02:27,280 --> 00:02:28,400
store

74
00:02:28,400 --> 00:02:31,280
and it's what facebook has displayed on

75
00:02:31,280 --> 00:02:32,000
its

76
00:02:32,000 --> 00:02:34,080
ios app store page listing so you can

77
00:02:34,080 --> 00:02:35,680
see this is an overview of the full

78
00:02:35,680 --> 00:02:38,160
privacy label so there are 17 broad

79
00:02:38,160 --> 00:02:41,040
categories of data that are disclosed

80
00:02:41,040 --> 00:02:42,640
and if you were to click the see details

81
00:02:42,640 --> 00:02:44,239
button in the top right corner you could

82
00:02:44,239 --> 00:02:46,879
get even more granular information about

83
00:02:46,879 --> 00:02:49,519
the type of data that had been collected

84
00:02:49,519 --> 00:02:51,120
and some of the issues that arise with

85
00:02:51,120 --> 00:02:52,879
this while it is extremely useful to

86
00:02:52,879 --> 00:02:55,120
view a privacy policy condensed into a

87
00:02:55,120 --> 00:02:56,879
very readable format is that for

88
00:02:56,879 --> 00:02:58,720
developers they need to consider over

89
00:02:58,720 --> 00:03:00,640
200 options when creating these labels

90
00:03:00,640 --> 00:03:01,680
so

91
00:03:01,680 --> 00:03:03,760
there are 32 data types and each data

92
00:03:03,760 --> 00:03:05,599
type has six data practices that it

93
00:03:05,599 --> 00:03:07,840
could be used for and then alongside

94
00:03:07,840 --> 00:03:09,760
that each data type is associated with

95
00:03:09,760 --> 00:03:11,200
whether or not it's used to track the

96
00:03:11,200 --> 00:03:13,440
user and whether or not the data is

97
00:03:13,440 --> 00:03:15,519
actually linked to the user

98
00:03:15,519 --> 00:03:18,000
and with this complexity comes just

99
00:03:18,000 --> 00:03:19,840
challenges um because they have to go

100
00:03:19,840 --> 00:03:21,440
through and understand every single box

101
00:03:21,440 --> 00:03:22,800
that they're checking and that can

102
00:03:22,800 --> 00:03:24,480
become quite tedious and just in some

103
00:03:24,480 --> 00:03:25,440
cases

104
00:03:25,440 --> 00:03:27,920
difficult to comprehend

105
00:03:27,920 --> 00:03:30,239
and developers do struggle on this so

106
00:03:30,239 --> 00:03:31,440
one example is that the sum of the

107
00:03:31,440 --> 00:03:33,440
definitions that are used by apple don't

108
00:03:33,440 --> 00:03:35,040
necessarily match the mental model that

109
00:03:35,040 --> 00:03:36,640
developers have so if we look at like

110
00:03:36,640 --> 00:03:38,080
data link to you

111
00:03:38,080 --> 00:03:39,840
developers may think that it's just the

112
00:03:39,840 --> 00:03:41,840
ability to link data back to someone in

113
00:03:41,840 --> 00:03:43,519
real life whereas apple uses a more

114
00:03:43,519 --> 00:03:45,280
narrow definition where it's just data

115
00:03:45,280 --> 00:03:46,879
linked to a unique identifier like a

116
00:03:46,879 --> 00:03:48,239
device id

117
00:03:48,239 --> 00:03:50,400
so this discrepancy creates inaccuracies

118
00:03:50,400 --> 00:03:52,640
in privacy labels and we really want to

119
00:03:52,640 --> 00:03:54,879
address those types of discrepancies

120
00:03:54,879 --> 00:03:57,280
using our tool

121
00:03:57,280 --> 00:03:58,560
another issue that comes up is that

122
00:03:58,560 --> 00:04:00,159
developers oftentimes don't have the

123
00:04:00,159 --> 00:04:01,280
sufficient support of knowledge to

124
00:04:01,280 --> 00:04:03,519
complete these labels most developers

125
00:04:03,519 --> 00:04:05,360
aren't privacy focused and for those

126
00:04:05,360 --> 00:04:06,799
that are

127
00:04:06,799 --> 00:04:08,640
it's possible that they don't like fully

128
00:04:08,640 --> 00:04:10,000
understand

129
00:04:10,000 --> 00:04:11,599
apple's definitions and their privacy

130
00:04:11,599 --> 00:04:13,360
labels

131
00:04:13,360 --> 00:04:15,120
so really we're focused on aiding these

132
00:04:15,120 --> 00:04:18,000
developers uh to create accurate labels

133
00:04:18,000 --> 00:04:19,279
and really these labels are a move

134
00:04:19,279 --> 00:04:21,279
towards providing more standardized uh

135
00:04:21,279 --> 00:04:22,880
comprehensible privacy notices in the

136
00:04:22,880 --> 00:04:23,919
future

137
00:04:23,919 --> 00:04:26,000
um i think one important thing to note

138
00:04:26,000 --> 00:04:27,040
is that

139
00:04:27,040 --> 00:04:28,400
there are millions of apps on the app

140
00:04:28,400 --> 00:04:29,600
store and tens of thousands of

141
00:04:29,600 --> 00:04:32,080
developers so issues are nevada

142
00:04:32,080 --> 00:04:34,720
inevitable at such a scale

143
00:04:34,720 --> 00:04:36,479
and while we're focused on apple privacy

144
00:04:36,479 --> 00:04:38,479
labels specifically the the technology

145
00:04:38,479 --> 00:04:40,960
that we use and our approach is easily

146
00:04:40,960 --> 00:04:42,400
expandable to

147
00:04:42,400 --> 00:04:44,479
the google play store as they also

148
00:04:44,479 --> 00:04:45,919
recently announced a requirement for

149
00:04:45,919 --> 00:04:48,080
apps to have these nutrition look these

150
00:04:48,080 --> 00:04:51,039
privacy labels

151
00:04:52,880 --> 00:04:54,720
so there are some challenges in creating

152
00:04:54,720 --> 00:04:56,400
these privacy labels like i've alluded

153
00:04:56,400 --> 00:04:57,520
to earlier

154
00:04:57,520 --> 00:04:58,320
um

155
00:04:58,320 --> 00:04:59,040
so

156
00:04:59,040 --> 00:05:00,240
really i think one important thing to

157
00:05:00,240 --> 00:05:01,600
note is that we're discussing challenges

158
00:05:01,600 --> 00:05:03,600
for developers specifically

159
00:05:03,600 --> 00:05:05,840
and what we found are like what prior

160
00:05:05,840 --> 00:05:07,440
research has found when analyzing one

161
00:05:07,440 --> 00:05:10,080
million apps in the google play store is

162
00:05:10,080 --> 00:05:11,520
that uh

163
00:05:11,520 --> 00:05:13,120
like there's an average of over three

164
00:05:13,120 --> 00:05:14,560
potential compliance issues per

165
00:05:14,560 --> 00:05:16,160
applications which is huge so really we

166
00:05:16,160 --> 00:05:18,800
need tools to help developers um not run

167
00:05:18,800 --> 00:05:20,160
into these issues

168
00:05:20,160 --> 00:05:22,080
so like the first challenge is that it's

169
00:05:22,080 --> 00:05:23,600
time intensive for applications that

170
00:05:23,600 --> 00:05:25,120
collect a lot of data

171
00:05:25,120 --> 00:05:26,479
like i mentioned earlier there are over

172
00:05:26,479 --> 00:05:28,000
200 options to consider so really we

173
00:05:28,000 --> 00:05:29,919
need to streamline this process down so

174
00:05:29,919 --> 00:05:31,919
it's not as

175
00:05:31,919 --> 00:05:33,600
not as long of a process to create

176
00:05:33,600 --> 00:05:35,680
labels

177
00:05:35,680 --> 00:05:37,199
and the second challenge again alluded

178
00:05:37,199 --> 00:05:38,320
to before was that there are

179
00:05:38,320 --> 00:05:42,080
misconceptions about these definitions

180
00:05:42,320 --> 00:05:44,400
that apple is using and how these

181
00:05:44,400 --> 00:05:46,080
definitions don't necessarily match up

182
00:05:46,080 --> 00:05:47,280
with the mental model that developers

183
00:05:47,280 --> 00:05:48,400
might have

184
00:05:48,400 --> 00:05:50,880
which can create issues when

185
00:05:50,880 --> 00:05:52,320
you're accurately trying to create

186
00:05:52,320 --> 00:05:55,039
privacy labels

187
00:05:55,360 --> 00:05:58,000
another issue that pops up that research

188
00:05:58,000 --> 00:06:00,080
has identified is that there's an under

189
00:06:00,080 --> 00:06:02,160
or over reporting of data types so

190
00:06:02,160 --> 00:06:04,160
generally under reporting implies a lack

191
00:06:04,160 --> 00:06:05,840
of awareness so if you don't know that

192
00:06:05,840 --> 00:06:07,600
something is being collected then you

193
00:06:07,600 --> 00:06:08,400
won't

194
00:06:08,400 --> 00:06:10,479
then you won't tend to report it and

195
00:06:10,479 --> 00:06:11,919
over-reporting implies a lack of

196
00:06:11,919 --> 00:06:14,479
understanding so in order to be cautious

197
00:06:14,479 --> 00:06:15,680
um

198
00:06:15,680 --> 00:06:17,120
like if someone doesn't fully understand

199
00:06:17,120 --> 00:06:18,800
this particular definition of a data

200
00:06:18,800 --> 00:06:20,240
type they want to be cautious so they

201
00:06:20,240 --> 00:06:22,720
just like you know select as many things

202
00:06:22,720 --> 00:06:24,720
as possible in order to cover all their

203
00:06:24,720 --> 00:06:26,319
bases

204
00:06:26,319 --> 00:06:28,240
and another thing that

205
00:06:28,240 --> 00:06:30,720
can be a challenge is that there's

206
00:06:30,720 --> 00:06:31,919
generally an under-reporting of

207
00:06:31,919 --> 00:06:34,400
third-party data collection and use

208
00:06:34,400 --> 00:06:36,240
so for example if a developer is using a

209
00:06:36,240 --> 00:06:38,560
third-party analytics service then in

210
00:06:38,560 --> 00:06:40,639
order to accurately create privacy

211
00:06:40,639 --> 00:06:42,080
labels for their app that uses a

212
00:06:42,080 --> 00:06:43,680
third-party service they need to first

213
00:06:43,680 --> 00:06:46,160
go in and read the privacy policy of

214
00:06:46,160 --> 00:06:47,120
this

215
00:06:47,120 --> 00:06:48,800
party service

216
00:06:48,800 --> 00:06:50,800
understand that privacy policy and then

217
00:06:50,800 --> 00:06:52,319
be able to match up the definitions

218
00:06:52,319 --> 00:06:54,080
using the privacy policy with the

219
00:06:54,080 --> 00:06:55,680
definitions used by apple so there are a

220
00:06:55,680 --> 00:06:57,840
lot of steps that you have to do

221
00:06:57,840 --> 00:07:00,560
and a lot of them are just not feasible

222
00:07:00,560 --> 00:07:02,880
or they're not easy to do uh for

223
00:07:02,880 --> 00:07:04,800
developers for application developers

224
00:07:04,800 --> 00:07:06,319
that are just working like you know solo

225
00:07:06,319 --> 00:07:07,840
or on a small team

226
00:07:07,840 --> 00:07:09,199
um

227
00:07:09,199 --> 00:07:10,000
and

228
00:07:10,000 --> 00:07:11,199
this is compounded by the fact that it's

229
00:07:11,199 --> 00:07:12,800
just not a single third-party library

230
00:07:12,800 --> 00:07:14,240
that they might use but they might be

231
00:07:14,240 --> 00:07:15,919
using you know dozens of third-party

232
00:07:15,919 --> 00:07:17,280
libraries so having to do this for each

233
00:07:17,280 --> 00:07:18,880
and every one

234
00:07:18,880 --> 00:07:22,160
means that there will inevitably be some

235
00:07:22,160 --> 00:07:26,000
inaccuracies with these privacy labels

236
00:07:27,919 --> 00:07:30,880
so next we'll talk about how we actually

237
00:07:30,880 --> 00:07:33,599
conducted or how we created our tool so

238
00:07:33,599 --> 00:07:35,360
our tool builds on the analysis

239
00:07:35,360 --> 00:07:37,520
framework of privacy flash pro

240
00:07:37,520 --> 00:07:39,840
so privacy flash pro is an open source

241
00:07:39,840 --> 00:07:41,440
tool that members of our research group

242
00:07:41,440 --> 00:07:42,800
have contributed to

243
00:07:42,800 --> 00:07:45,360
and that tool uses static analysis

244
00:07:45,360 --> 00:07:48,000
to create these privacy labels from the

245
00:07:48,000 --> 00:07:50,319
code base

246
00:07:50,319 --> 00:07:52,879
so the analysis is based on a collection

247
00:07:52,879 --> 00:07:54,720
of evidence

248
00:07:54,720 --> 00:07:56,319
so the types of evidence that are

249
00:07:56,319 --> 00:07:58,960
collected are pls permission strings

250
00:07:58,960 --> 00:08:00,080
imports

251
00:08:00,080 --> 00:08:02,479
and clash decorations and that evidence

252
00:08:02,479 --> 00:08:04,080
is used to determine

253
00:08:04,080 --> 00:08:05,120
whether or not we should be using

254
00:08:05,120 --> 00:08:06,960
certain privacy labels

255
00:08:06,960 --> 00:08:09,039
and static analysis is used to highlight

256
00:08:09,039 --> 00:08:10,560
code segments with significant data

257
00:08:10,560 --> 00:08:12,319
practices like using location so

258
00:08:12,319 --> 00:08:14,080
developers can easily go back and find

259
00:08:14,080 --> 00:08:15,759
out like which files and like which part

260
00:08:15,759 --> 00:08:17,360
of their code actually uses like

261
00:08:17,360 --> 00:08:19,039
location for example

262
00:08:19,039 --> 00:08:21,199
um however static analysis does have its

263
00:08:21,199 --> 00:08:23,039
own limitations so for example if

264
00:08:23,039 --> 00:08:24,560
there's dead code we're not running any

265
00:08:24,560 --> 00:08:26,720
sort of like compiler pre-pass so

266
00:08:26,720 --> 00:08:28,400
we don't have access to like adc or any

267
00:08:28,400 --> 00:08:30,160
of those tools so

268
00:08:30,160 --> 00:08:32,000
it's potential that those might raise

269
00:08:32,000 --> 00:08:33,679
some false positives

270
00:08:33,679 --> 00:08:35,519
um also

271
00:08:35,519 --> 00:08:37,120
there's issues of server-side

272
00:08:37,120 --> 00:08:39,200
collections so if any of the data is

273
00:08:39,200 --> 00:08:41,760
being

274
00:08:41,760 --> 00:08:43,599
is being sent off to

275
00:08:43,599 --> 00:08:45,760
a server or a back end then we really we

276
00:08:45,760 --> 00:08:47,519
don't have any tools to figure out how

277
00:08:47,519 --> 00:08:49,519
that data is being processed by the

278
00:08:49,519 --> 00:08:51,040
application's backend

279
00:08:51,040 --> 00:08:53,040
similarly if the app is using any

280
00:08:53,040 --> 00:08:55,040
third-party libraries that use

281
00:08:55,040 --> 00:08:57,680
third-party like servers then again we

282
00:08:57,680 --> 00:08:59,519
don't really have the tools right now to

283
00:08:59,519 --> 00:09:00,720
figure out what's happening with the

284
00:09:00,720 --> 00:09:02,000
data there

285
00:09:02,000 --> 00:09:03,680
for that we'd have to go and analyze the

286
00:09:03,680 --> 00:09:05,120
privacy policies of those third-party

287
00:09:05,120 --> 00:09:08,959
libraries if they even exist um

288
00:09:08,959 --> 00:09:10,399
yeah so i guess really to emphasize we

289
00:09:10,399 --> 00:09:12,240
only have an application side view of

290
00:09:12,240 --> 00:09:13,920
data collection and we're focused on

291
00:09:13,920 --> 00:09:16,080
that but we acknowledge that like we

292
00:09:16,080 --> 00:09:19,120
need to like include uh third-party

293
00:09:19,120 --> 00:09:20,640
libraries and server-side collection and

294
00:09:20,640 --> 00:09:21,760
the tool to create these accurate

295
00:09:21,760 --> 00:09:23,360
privacy labels so our solution is just

296
00:09:23,360 --> 00:09:25,839
to prompt developers in privacy label

297
00:09:25,839 --> 00:09:27,839
wiz which is our version of the tool of

298
00:09:27,839 --> 00:09:30,800
these limitations

299
00:09:31,760 --> 00:09:33,920
and now i'll hand it off to jack to talk

300
00:09:33,920 --> 00:09:35,279
about the initial version of privacy

301
00:09:35,279 --> 00:09:37,839
label wiz

302
00:09:38,160 --> 00:09:39,760
all right so in the initial version of

303
00:09:39,760 --> 00:09:42,399
privacy label whiz we design a new user

304
00:09:42,399 --> 00:09:44,080
interface with a specific focus on

305
00:09:44,080 --> 00:09:45,519
privacy labels

306
00:09:45,519 --> 00:09:47,120
to do this we build on the static

307
00:09:47,120 --> 00:09:48,959
analysis framework that oxford just

308
00:09:48,959 --> 00:09:50,959
discussed to begin our dialogue with the

309
00:09:50,959 --> 00:09:53,200
developer

310
00:09:53,200 --> 00:09:55,200
specifically this means that we map

311
00:09:55,200 --> 00:09:56,720
detected ios permissions through the

312
00:09:56,720 --> 00:09:58,160
static analysis

313
00:09:58,160 --> 00:10:00,640
to the data types defined by apple for

314
00:10:00,640 --> 00:10:04,000
its privacy label creation process

315
00:10:04,000 --> 00:10:05,680
in the initial ui

316
00:10:05,680 --> 00:10:07,440
we also included a full list of data

317
00:10:07,440 --> 00:10:09,920
types defined by apple for developers to

318
00:10:09,920 --> 00:10:11,519
individually consider each of these data

319
00:10:11,519 --> 00:10:13,600
types and whether they relate to their

320
00:10:13,600 --> 00:10:15,920
application's data practices

321
00:10:15,920 --> 00:10:17,680
we also provide a list of reflection

322
00:10:17,680 --> 00:10:19,120
questions in the ui to ensure that

323
00:10:19,120 --> 00:10:20,800
developers are considering components

324
00:10:20,800 --> 00:10:22,959
for application that we cannot detect

325
00:10:22,959 --> 00:10:26,239
through static analysis alone

326
00:10:29,279 --> 00:10:31,200
we next evaluate this initial version of

327
00:10:31,200 --> 00:10:33,360
price label whiz by conducting in-depth

328
00:10:33,360 --> 00:10:34,720
think cloud interviews with four

329
00:10:34,720 --> 00:10:36,000
developers

330
00:10:36,000 --> 00:10:37,440
in these interviews developers would

331
00:10:37,440 --> 00:10:38,959
bring their own ios application in the

332
00:10:38,959 --> 00:10:40,079
interview

333
00:10:40,079 --> 00:10:41,839
download and run the software tool and

334
00:10:41,839 --> 00:10:43,360
use it to go through the process of

335
00:10:43,360 --> 00:10:44,720
updating or revising their privacy

336
00:10:44,720 --> 00:10:46,480
labels

337
00:10:46,480 --> 00:10:48,240
this process helped us identify a number

338
00:10:48,240 --> 00:10:49,760
of fundamental shortcomings with this

339
00:10:49,760 --> 00:10:51,360
initial ui

340
00:10:51,360 --> 00:10:52,959
specifically we found that developers

341
00:10:52,959 --> 00:10:54,720
lacked an introduction to the purpose of

342
00:10:54,720 --> 00:10:55,600
the tool

343
00:10:55,600 --> 00:10:56,720
and really what they were supposed to

344
00:10:56,720 --> 00:10:58,560
get out of the static analysis results

345
00:10:58,560 --> 00:11:00,320
versus what we depended on them to

346
00:11:00,320 --> 00:11:01,839
provide about the knowledge their

347
00:11:01,839 --> 00:11:04,320
application

348
00:11:04,800 --> 00:11:07,040
additionally developers

349
00:11:07,040 --> 00:11:09,200
uh needed support on understanding third

350
00:11:09,200 --> 00:11:10,959
party data flows

351
00:11:10,959 --> 00:11:12,880
and being pushed to consider those

352
00:11:12,880 --> 00:11:15,519
components their application

353
00:11:15,519 --> 00:11:16,880
developers also struggled with the

354
00:11:16,880 --> 00:11:19,040
initial workflow of the ui they felt

355
00:11:19,040 --> 00:11:20,079
overloaded with the amount of

356
00:11:20,079 --> 00:11:21,279
information that they were supposed to

357
00:11:21,279 --> 00:11:22,240
process

358
00:11:22,240 --> 00:11:23,680
and this really highlighted the need for

359
00:11:23,680 --> 00:11:25,440
us to break up the ui and support an

360
00:11:25,440 --> 00:11:27,040
iterative workflow where developers

361
00:11:27,040 --> 00:11:30,719
would be able to revisit their decisions

362
00:11:32,720 --> 00:11:34,720
so based on those initial interviews we

363
00:11:34,720 --> 00:11:37,600
refined privacy label whiz

364
00:11:37,600 --> 00:11:39,440
specifically we provide instructions to

365
00:11:39,440 --> 00:11:42,480
developers to introduce them to the tool

366
00:11:42,480 --> 00:11:44,640
inform them about the workflow and

367
00:11:44,640 --> 00:11:46,959
understand how the static analysis

368
00:11:46,959 --> 00:11:48,480
framework runs by mapping ios

369
00:11:48,480 --> 00:11:50,160
permissions to the data types defined by

370
00:11:50,160 --> 00:11:51,600
apple

371
00:11:51,600 --> 00:11:53,680
we also modify the ui structure so it

372
00:11:53,680 --> 00:11:55,839
resembles that of apple's web form where

373
00:11:55,839 --> 00:11:57,519
developers would actually go and create

374
00:11:57,519 --> 00:11:59,600
their privacy label if they would do so

375
00:11:59,600 --> 00:12:02,000
in the apple app store

376
00:12:02,000 --> 00:12:03,040
this means

377
00:12:03,040 --> 00:12:06,240
paginating the ui so that developers can

378
00:12:06,240 --> 00:12:08,880
consider a single data type at a time

379
00:12:08,880 --> 00:12:10,480
and provide information on its

380
00:12:10,480 --> 00:12:13,279
associated data practices

381
00:12:13,279 --> 00:12:15,440
additionally developers can we we

382
00:12:15,440 --> 00:12:17,040
provide developers with an additional

383
00:12:17,040 --> 00:12:18,639
option in the ui where they can mark

384
00:12:18,639 --> 00:12:19,839
that they're not sure about a given

385
00:12:19,839 --> 00:12:21,360
decision that they're making

386
00:12:21,360 --> 00:12:22,800
so they would have their ability to

387
00:12:22,800 --> 00:12:25,120
revisit this decision as they continued

388
00:12:25,120 --> 00:12:27,519
through our ui

389
00:12:27,519 --> 00:12:29,200
we also improved the set of reflection

390
00:12:29,200 --> 00:12:31,120
questions presented in the ui so that

391
00:12:31,120 --> 00:12:33,360
developers again are pushed to

392
00:12:33,360 --> 00:12:35,040
consider additional components their

393
00:12:35,040 --> 00:12:36,560
application that we cannot detect your

394
00:12:36,560 --> 00:12:39,800
static analysis

395
00:12:40,800 --> 00:12:42,639
so for an overview of the price labelwiz

396
00:12:42,639 --> 00:12:43,680
workflow

397
00:12:43,680 --> 00:12:45,440
from a developer perspective

398
00:12:45,440 --> 00:12:46,800
developers would download and run the

399
00:12:46,800 --> 00:12:48,639
software tool load in their ios

400
00:12:48,639 --> 00:12:51,920
application let the wizard run analysis

401
00:12:51,920 --> 00:12:53,680
and then this is the starting point for

402
00:12:53,680 --> 00:12:55,839
initiating a dialogue with the developer

403
00:12:55,839 --> 00:12:57,600
at this point the application developers

404
00:12:57,600 --> 00:12:58,959
would arrive at

405
00:12:58,959 --> 00:13:00,720
that introduction screen that tells them

406
00:13:00,720 --> 00:13:02,800
about the purpose of the wizard

407
00:13:02,800 --> 00:13:04,800
and what it can provide in terms of its

408
00:13:04,800 --> 00:13:06,639
static analysis results but also where

409
00:13:06,639 --> 00:13:09,279
it depends on developers

410
00:13:09,279 --> 00:13:11,040
on that same screen developers are also

411
00:13:11,040 --> 00:13:12,880
introduced to the iterative workflow of

412
00:13:12,880 --> 00:13:14,720
the application

413
00:13:14,720 --> 00:13:16,079
and as they move through the remainder

414
00:13:16,079 --> 00:13:18,320
of the ui they'll first see results on

415
00:13:18,320 --> 00:13:20,399
data data practices detected through

416
00:13:20,399 --> 00:13:21,760
static analysis

417
00:13:21,760 --> 00:13:23,440
but then have the chance to select

418
00:13:23,440 --> 00:13:25,519
additional data practices

419
00:13:25,519 --> 00:13:29,120
as is relevant for their application

420
00:13:30,800 --> 00:13:32,720
so here's the first overview screen that

421
00:13:32,720 --> 00:13:34,560
a developer would see after the wizard

422
00:13:34,560 --> 00:13:36,720
is done running its analysis

423
00:13:36,720 --> 00:13:37,920
they're introduced to the static

424
00:13:37,920 --> 00:13:39,519
analysis framework here with some

425
00:13:39,519 --> 00:13:41,279
discussion of how ios permissions are

426
00:13:41,279 --> 00:13:42,639
mapped to the relevant data types

427
00:13:42,639 --> 00:13:44,880
defined by apple

428
00:13:44,880 --> 00:13:46,560
they're then told that they'll first see

429
00:13:46,560 --> 00:13:47,920
results for these permissions and

430
00:13:47,920 --> 00:13:50,959
related data types if they're detected

431
00:13:50,959 --> 00:13:52,959
but there they should also see that

432
00:13:52,959 --> 00:13:54,880
there they should watch out for the fact

433
00:13:54,880 --> 00:13:56,560
that permissions may not map perfectly

434
00:13:56,560 --> 00:13:59,680
to the data types defined by apple

435
00:13:59,680 --> 00:14:01,360
moving on developers have a chance to

436
00:14:01,360 --> 00:14:03,600
identify additional data practices

437
00:14:03,600 --> 00:14:05,600
and select corresponding data types for

438
00:14:05,600 --> 00:14:07,360
their application and provide

439
00:14:07,360 --> 00:14:08,800
information about those data types as

440
00:14:08,800 --> 00:14:11,360
necessary

441
00:14:11,360 --> 00:14:13,519
next week we give developers a easy

442
00:14:13,519 --> 00:14:16,000
read-through of the following screens

443
00:14:16,000 --> 00:14:17,120
and then that'll continue on the

444
00:14:17,120 --> 00:14:20,000
application from here

445
00:14:21,360 --> 00:14:22,959
so this is a results page that a

446
00:14:22,959 --> 00:14:25,199
developer would see based on an ios

447
00:14:25,199 --> 00:14:27,040
permission detected in a static analysis

448
00:14:27,040 --> 00:14:31,360
framework and a related apple data type

449
00:14:31,360 --> 00:14:34,880
let's walk through this piece by piece

450
00:14:35,360 --> 00:14:36,639
so first

451
00:14:36,639 --> 00:14:38,240
the detected use of permission is the

452
00:14:38,240 --> 00:14:41,120
camera permission

453
00:14:41,760 --> 00:14:43,440
this relates to the photos or videos

454
00:14:43,440 --> 00:14:46,720
data type defined by apple

455
00:14:46,800 --> 00:14:48,560
we tell the developer where in their

456
00:14:48,560 --> 00:14:50,560
code base we saw this data type being

457
00:14:50,560 --> 00:14:52,880
used

458
00:14:53,839 --> 00:14:54,639
and

459
00:14:54,639 --> 00:14:56,880
for a select set of third-party services

460
00:14:56,880 --> 00:14:58,320
that are hard coded into the privacy

461
00:14:58,320 --> 00:14:59,519
label wiz

462
00:14:59,519 --> 00:15:01,519
we can tell the developer the purpose of

463
00:15:01,519 --> 00:15:03,680
that third party service with regard to

464
00:15:03,680 --> 00:15:06,399
using that data

465
00:15:10,079 --> 00:15:12,240
moving down this initial results screen

466
00:15:12,240 --> 00:15:14,079
developers are first asked to consider

467
00:15:14,079 --> 00:15:16,240
whether they really collect

468
00:15:16,240 --> 00:15:18,079
the data type that's related to the ios

469
00:15:18,079 --> 00:15:19,839
permission detected

470
00:15:19,839 --> 00:15:22,160
as apple only requires that you report a

471
00:15:22,160 --> 00:15:23,839
data type for your privacy if you

472
00:15:23,839 --> 00:15:27,480
actually collect it

473
00:15:28,560 --> 00:15:30,160
moving further down

474
00:15:30,160 --> 00:15:32,560
if developers do collect that data

475
00:15:32,560 --> 00:15:34,079
they select the purpose for which they

476
00:15:34,079 --> 00:15:36,719
collect it here

477
00:15:37,519 --> 00:15:39,199
they next select whether the data type

478
00:15:39,199 --> 00:15:42,560
is linked to a user's identity

479
00:15:42,639 --> 00:15:44,480
and moving on select whether it's used

480
00:15:44,480 --> 00:15:46,560
to track a user this concludes that

481
00:15:46,560 --> 00:15:49,518
first results page

482
00:15:51,360 --> 00:15:52,959
after developers move through the set of

483
00:15:52,959 --> 00:15:55,360
screens based on the permissions

484
00:15:55,360 --> 00:15:57,199
detected in related application data

485
00:15:57,199 --> 00:15:59,279
types they arrive at a summary page that

486
00:15:59,279 --> 00:16:00,639
looks like this

487
00:16:00,639 --> 00:16:02,399
they first have the chance to review the

488
00:16:02,399 --> 00:16:03,279
information that they would have

489
00:16:03,279 --> 00:16:05,360
provided on data types that were

490
00:16:05,360 --> 00:16:06,720
detected by the static analysis

491
00:16:06,720 --> 00:16:08,880
framework but moving on have the chance

492
00:16:08,880 --> 00:16:10,079
to

493
00:16:10,079 --> 00:16:11,680
select additional data types further

494
00:16:11,680 --> 00:16:14,560
down the summary page

495
00:16:15,279 --> 00:16:18,240
but first as developers see the results

496
00:16:18,240 --> 00:16:20,399
from the static analysis and the

497
00:16:20,399 --> 00:16:22,079
information they provided on associated

498
00:16:22,079 --> 00:16:24,079
data practices they have the chance to

499
00:16:24,079 --> 00:16:25,519
review that

500
00:16:25,519 --> 00:16:27,440
so this is on the summary page and this

501
00:16:27,440 --> 00:16:28,880
involves a scenario where a developer

502
00:16:28,880 --> 00:16:30,639
would have been unsure about whether the

503
00:16:30,639 --> 00:16:32,639
photo or video data type was linked to a

504
00:16:32,639 --> 00:16:34,240
user's identity

505
00:16:34,240 --> 00:16:35,920
because they selected this option on an

506
00:16:35,920 --> 00:16:38,160
initial screen they get this exclamation

507
00:16:38,160 --> 00:16:40,240
point that is meant to grab their

508
00:16:40,240 --> 00:16:41,680
attention and have them reconsider

509
00:16:41,680 --> 00:16:42,720
whether

510
00:16:42,720 --> 00:16:44,560
uh they do actually

511
00:16:44,560 --> 00:16:46,240
link photo or video data to user's

512
00:16:46,240 --> 00:16:50,440
identity here on the summary page

513
00:16:53,040 --> 00:16:54,560
so further down the summary page

514
00:16:54,560 --> 00:16:56,480
developers can go through the full list

515
00:16:56,480 --> 00:16:58,000
of data types defined by apple and

516
00:16:58,000 --> 00:17:00,480
consider whether they should select that

517
00:17:00,480 --> 00:17:02,839
they engage in any additional data

518
00:17:02,839 --> 00:17:05,119
practices we present them again with the

519
00:17:05,119 --> 00:17:06,640
definitions of data collection and

520
00:17:06,640 --> 00:17:09,280
third-party partners defined by apple so

521
00:17:09,280 --> 00:17:10,319
that they can

522
00:17:10,319 --> 00:17:12,400
be sure that they understand what these

523
00:17:12,400 --> 00:17:14,000
definitions mean as they select

524
00:17:14,000 --> 00:17:17,640
additional data types

525
00:17:19,359 --> 00:17:21,039
so here's a couple examples from the

526
00:17:21,039 --> 00:17:25,039
list of full data types defined by apple

527
00:17:26,480 --> 00:17:28,000
and further down the summary page

528
00:17:28,000 --> 00:17:30,240
developers see a set of reflection

529
00:17:30,240 --> 00:17:31,600
questions

530
00:17:31,600 --> 00:17:33,120
and this is to have them consider the

531
00:17:33,120 --> 00:17:34,400
components their application that we

532
00:17:34,400 --> 00:17:36,080
can't get out through static analysis

533
00:17:36,080 --> 00:17:37,440
really getting the most out of

534
00:17:37,440 --> 00:17:40,480
developers knowledge here

535
00:17:42,160 --> 00:17:43,840
so the first set of reflection questions

536
00:17:43,840 --> 00:17:46,640
is about third-party data practices

537
00:17:46,640 --> 00:17:48,240
we're asking developers to ensure that

538
00:17:48,240 --> 00:17:49,600
they considered all components their

539
00:17:49,600 --> 00:17:51,600
application that relate to sdks

540
00:17:51,600 --> 00:17:53,360
frameworks or other third party services

541
00:17:53,360 --> 00:17:54,320
used

542
00:17:54,320 --> 00:17:55,679
in this case we tell them it might be

543
00:17:55,679 --> 00:17:57,520
helpful to consult the documentation of

544
00:17:57,520 --> 00:17:59,760
these services as in some cases they

545
00:17:59,760 --> 00:18:01,360
provide specific information to help

546
00:18:01,360 --> 00:18:04,080
developers create privacy labels

547
00:18:04,080 --> 00:18:05,280
we also

548
00:18:05,280 --> 00:18:07,360
tell developers we also ask developers

549
00:18:07,360 --> 00:18:08,720
to consider whether it's them doing

550
00:18:08,720 --> 00:18:11,440
advertising or whether a third-party

551
00:18:11,440 --> 00:18:12,799
service is doing advertising their

552
00:18:12,799 --> 00:18:14,880
application as this has implications for

553
00:18:14,880 --> 00:18:15,919
how they should report it on their

554
00:18:15,919 --> 00:18:18,640
privacy label

555
00:18:19,840 --> 00:18:22,559
the next set of reflection questions

556
00:18:22,559 --> 00:18:24,960
we ask developers general questions on

557
00:18:24,960 --> 00:18:26,240
their data practices about their

558
00:18:26,240 --> 00:18:28,160
application

559
00:18:28,160 --> 00:18:29,440
we alert them that they may have

560
00:18:29,440 --> 00:18:31,520
selected not sure for a given data type

561
00:18:31,520 --> 00:18:33,760
and or associated data practice and

562
00:18:33,760 --> 00:18:35,039
encourage them to err on the side of

563
00:18:35,039 --> 00:18:36,640
caution and reported data practice if

564
00:18:36,640 --> 00:18:39,120
they're not sure whether it's performed

565
00:18:39,120 --> 00:18:41,360
we also ask them do you really need all

566
00:18:41,360 --> 00:18:42,880
the data that you're collecting and

567
00:18:42,880 --> 00:18:44,320
inform them that in general data

568
00:18:44,320 --> 00:18:46,400
collection present the liability and can

569
00:18:46,400 --> 00:18:49,600
make their app non-compliant

570
00:18:52,240 --> 00:18:54,000
moving further down we asked him a set

571
00:18:54,000 --> 00:18:56,720
of questions on diagnostics whether data

572
00:18:56,720 --> 00:18:58,720
is linked or used to track a user and

573
00:18:58,720 --> 00:19:02,160
have them consider relevant laws

574
00:19:05,600 --> 00:19:07,120
so we've designed this ui to help

575
00:19:07,120 --> 00:19:08,880
developers create more accurate privacy

576
00:19:08,880 --> 00:19:10,320
labels but it's clear to us that

577
00:19:10,320 --> 00:19:13,200
developers still need more help

578
00:19:13,200 --> 00:19:14,720
some future work we could conduct on

579
00:19:14,720 --> 00:19:15,840
this ui

580
00:19:15,840 --> 00:19:18,080
is provide the ability to add for

581
00:19:18,080 --> 00:19:20,000
developers to add notes or document how

582
00:19:20,000 --> 00:19:21,360
they reached a given decision as they

583
00:19:21,360 --> 00:19:23,280
use privacy label widths

584
00:19:23,280 --> 00:19:24,720
this would mean

585
00:19:24,720 --> 00:19:26,720
for example scenarios that a developer

586
00:19:26,720 --> 00:19:29,120
consulted third-party documentation they

587
00:19:29,120 --> 00:19:30,000
learned something from that

588
00:19:30,000 --> 00:19:32,720
documentation and allowed them to update

589
00:19:32,720 --> 00:19:34,960
uh a data practice associated with their

590
00:19:34,960 --> 00:19:37,039
privacy label it'd be helpful for them

591
00:19:37,039 --> 00:19:38,960
to record that so that they could be

592
00:19:38,960 --> 00:19:40,160
aware of how they reached a given

593
00:19:40,160 --> 00:19:41,520
decision if they needed to update their

594
00:19:41,520 --> 00:19:43,520
label in the future

595
00:19:43,520 --> 00:19:44,640
additionally

596
00:19:44,640 --> 00:19:46,559
as developers as it is time intensive

597
00:19:46,559 --> 00:19:48,160
for developers to seek out third-party

598
00:19:48,160 --> 00:19:50,240
documentation it would be ideal if we

599
00:19:50,240 --> 00:19:51,760
could integrate that documentation in

600
00:19:51,760 --> 00:19:55,280
the into the wizards user interface

601
00:19:55,280 --> 00:19:57,520
moving forward we also plan to evaluate

602
00:19:57,520 --> 00:20:01,120
this redesign tool with developers

603
00:20:01,280 --> 00:20:02,960
but over the process of designing this

604
00:20:02,960 --> 00:20:05,360
tool it's we've learned that it's very

605
00:20:05,360 --> 00:20:07,120
important that these tools align with

606
00:20:07,120 --> 00:20:09,360
developer workflows specifically this

607
00:20:09,360 --> 00:20:10,720
means understanding developer time

608
00:20:10,720 --> 00:20:12,880
constraints minimizing wait time as

609
00:20:12,880 --> 00:20:15,039
they're using a tool like this

610
00:20:15,039 --> 00:20:16,799
and getting the most out of

611
00:20:16,799 --> 00:20:18,880
the knowledge that developers have

612
00:20:18,880 --> 00:20:20,400
out of their application

613
00:20:20,400 --> 00:20:22,000
and in the same token recognizing the

614
00:20:22,000 --> 00:20:23,520
limitations of

615
00:20:23,520 --> 00:20:25,360
a wizard like ours that runs on static

616
00:20:25,360 --> 00:20:27,840
analysis

617
00:20:28,000 --> 00:20:29,440
so thanks very much for listening and

618
00:20:29,440 --> 00:20:30,799
we'd be glad to take any questions you

619
00:20:30,799 --> 00:20:33,799
have

620
00:20:39,840 --> 00:20:41,918
you

