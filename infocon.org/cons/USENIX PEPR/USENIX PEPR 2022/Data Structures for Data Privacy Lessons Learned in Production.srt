1
00:00:10,320 --> 00:00:14,480
so my talk is about data structures for

2
00:00:14,480 --> 00:00:17,520
data privacy it's kind of informed by

3
00:00:17,520 --> 00:00:18,560
uh

4
00:00:18,560 --> 00:00:19,840
some work that i've been doing for the

5
00:00:19,840 --> 00:00:22,320
past couple of years um

6
00:00:22,320 --> 00:00:23,119
and

7
00:00:23,119 --> 00:00:25,199
uh so this talk is actually co-authored

8
00:00:25,199 --> 00:00:28,320
my co-author isn't here uh with me today

9
00:00:28,320 --> 00:00:30,000
um but i'm going to give him a shout out

10
00:00:30,000 --> 00:00:32,960
so dr benjamin benfort um

11
00:00:32,960 --> 00:00:33,920
and i

12
00:00:33,920 --> 00:00:36,800
uh we both come from academia but have

13
00:00:36,800 --> 00:00:39,200
been in industry for about 10 years now

14
00:00:39,200 --> 00:00:40,960
we both work for a company called

15
00:00:40,960 --> 00:00:42,800
rotational labs

16
00:00:42,800 --> 00:00:46,879
and um rotational labs builds small to

17
00:00:46,879 --> 00:00:50,079
medium-sized distributed systems um and

18
00:00:50,079 --> 00:00:52,079
deploys them around the world

19
00:00:52,079 --> 00:00:54,399
um so we're not kind of a

20
00:00:54,399 --> 00:00:56,480
you know a privacy engineering company

21
00:00:56,480 --> 00:00:58,719
but when you build distributed systems

22
00:00:58,719 --> 00:01:01,039
and have to deploy them around the world

23
00:01:01,039 --> 00:01:04,640
you quickly get into privacy waters

24
00:01:04,640 --> 00:01:05,920
and so

25
00:01:05,920 --> 00:01:08,159
i'm humbled to be speaking

26
00:01:08,159 --> 00:01:10,320
in front of so many

27
00:01:10,320 --> 00:01:11,920
kind of very distinguished privacy

28
00:01:11,920 --> 00:01:15,200
engineers um and sort of excited that

29
00:01:15,200 --> 00:01:17,360
maybe you'll have some ideas for

30
00:01:17,360 --> 00:01:19,759
solutions for some of the things that uh

31
00:01:19,759 --> 00:01:22,560
we have not uh solved

32
00:01:22,560 --> 00:01:23,360
um

33
00:01:23,360 --> 00:01:24,400
but

34
00:01:24,400 --> 00:01:27,280
my plan is to start by kind of

35
00:01:27,280 --> 00:01:29,759
contextualizing the problem space

36
00:01:29,759 --> 00:01:32,320
that we're working in um it's a very

37
00:01:32,320 --> 00:01:34,880
specific solution it's a bit niche so

38
00:01:34,880 --> 00:01:36,880
i'm going to try to provide some context

39
00:01:36,880 --> 00:01:39,600
so it doesn't seem too confusing or out

40
00:01:39,600 --> 00:01:40,880
of the blue

41
00:01:40,880 --> 00:01:42,720
but it's for a very specific client

42
00:01:42,720 --> 00:01:43,759
project

43
00:01:43,759 --> 00:01:46,079
um that it and it's an open source code

44
00:01:46,079 --> 00:01:48,399
base and i'll give the link to the open

45
00:01:48,399 --> 00:01:50,479
source uh code base at the very end in

46
00:01:50,479 --> 00:01:52,560
case you want to check it out um

47
00:01:52,560 --> 00:01:54,720
and then i'm going to talk about the

48
00:01:54,720 --> 00:01:58,240
underlying protocol um that enables kind

49
00:01:58,240 --> 00:02:01,600
of private sharing of information

50
00:02:01,600 --> 00:02:03,759
um and i'll talk about the data

51
00:02:03,759 --> 00:02:04,799
structure

52
00:02:04,799 --> 00:02:06,479
um that's sort of at the heart of that

53
00:02:06,479 --> 00:02:08,479
protocol

54
00:02:08,479 --> 00:02:10,720
and talk about how it you know is

55
00:02:10,720 --> 00:02:12,800
designed to encrypt data

56
00:02:12,800 --> 00:02:15,040
in flight so during transactions and

57
00:02:15,040 --> 00:02:17,840
also at rest after transactions happen

58
00:02:17,840 --> 00:02:19,920
and then finally i'll talk about some of

59
00:02:19,920 --> 00:02:21,360
our lessons learned

60
00:02:21,360 --> 00:02:24,319
so things that we encountered challenges

61
00:02:24,319 --> 00:02:26,319
um and things that we figured out

62
00:02:26,319 --> 00:02:28,480
solutions for and some things that we're

63
00:02:28,480 --> 00:02:29,599
still

64
00:02:29,599 --> 00:02:32,800
trying to find solutions for

65
00:02:32,800 --> 00:02:34,959
so first of all i want to talk about

66
00:02:34,959 --> 00:02:38,239
what the travel rule is i'm going to

67
00:02:38,239 --> 00:02:40,239
go out on a limb and assume that this is

68
00:02:40,239 --> 00:02:42,080
probably not something

69
00:02:42,080 --> 00:02:43,360
that most people

70
00:02:43,360 --> 00:02:44,800
in this conference have

71
00:02:44,800 --> 00:02:47,040
heard about it's actually kind of an old

72
00:02:47,040 --> 00:02:50,000
thing it's been around since 1996 um the

73
00:02:50,000 --> 00:02:52,720
travel rule was uh published by the

74
00:02:52,720 --> 00:02:54,959
financial action task force and this is

75
00:02:54,959 --> 00:02:57,920
a intergovernmental body it's composed

76
00:02:57,920 --> 00:02:59,920
of people from all over the world and

77
00:02:59,920 --> 00:03:02,560
their mission is to try to combat you

78
00:03:02,560 --> 00:03:04,879
know um kind of the financing of human

79
00:03:04,879 --> 00:03:07,840
trafficking and money laundering um

80
00:03:07,840 --> 00:03:11,120
and so this guidance came out in 1996 um

81
00:03:11,120 --> 00:03:14,480
and then after that uh the crypto

82
00:03:14,480 --> 00:03:18,400
kind of world uh blew up and um

83
00:03:18,400 --> 00:03:22,159
as of 2019 the fad f financial action

84
00:03:22,159 --> 00:03:25,200
task force determined that

85
00:03:25,200 --> 00:03:28,319
basically you know many crypto companies

86
00:03:28,319 --> 00:03:30,879
um are subject to this guidance that was

87
00:03:30,879 --> 00:03:34,080
published in 1996 which effectively

88
00:03:34,080 --> 00:03:34,959
means

89
00:03:34,959 --> 00:03:36,640
that they have to figure out a creative

90
00:03:36,640 --> 00:03:40,319
way to record and um

91
00:03:40,319 --> 00:03:43,519
exchange data about the participants in

92
00:03:43,519 --> 00:03:46,319
crypto transactions because as probably

93
00:03:46,319 --> 00:03:48,400
many of you know um a lot of that

94
00:03:48,400 --> 00:03:50,480
information is not available on the

95
00:03:50,480 --> 00:03:53,040
blockchain intentionally um you know

96
00:03:53,040 --> 00:03:55,599
it's sort of intentionally designed to

97
00:03:55,599 --> 00:03:56,799
uh

98
00:03:56,799 --> 00:03:58,640
you know just kind of keep all of that

99
00:03:58,640 --> 00:03:59,519
stuff

100
00:03:59,519 --> 00:04:01,439
out of the blockchain so

101
00:04:01,439 --> 00:04:05,200
they have to find a way to get access to

102
00:04:05,200 --> 00:04:06,680
information about who their

103
00:04:06,680 --> 00:04:08,000
[Music]

104
00:04:08,000 --> 00:04:10,560
who their users are sending money to and

105
00:04:10,560 --> 00:04:12,799
receiving money from above some monetary

106
00:04:12,799 --> 00:04:16,639
threshold because their governments um

107
00:04:16,639 --> 00:04:17,440
are

108
00:04:17,440 --> 00:04:19,600
requiring them to do that so that they

109
00:04:19,600 --> 00:04:22,400
can freeze and block transactions from

110
00:04:22,400 --> 00:04:24,960
known criminals and terrorists

111
00:04:24,960 --> 00:04:27,120
and turn money or turn uh you know

112
00:04:27,120 --> 00:04:28,880
information about money transactions

113
00:04:28,880 --> 00:04:30,960
over to um their governments where

114
00:04:30,960 --> 00:04:32,320
appropriate

115
00:04:32,320 --> 00:04:33,040
so

116
00:04:33,040 --> 00:04:36,000
this kind of shift in in 2019

117
00:04:36,000 --> 00:04:38,400
led to the multiple like multiple and

118
00:04:38,400 --> 00:04:40,240
independent development of a bunch of

119
00:04:40,240 --> 00:04:42,800
different protocols designed to kind of

120
00:04:42,800 --> 00:04:44,880
solve this problem uh that you know

121
00:04:44,880 --> 00:04:46,800
fundamentally this information can't go

122
00:04:46,800 --> 00:04:48,639
on the blockchain so what do we do about

123
00:04:48,639 --> 00:04:49,680
that

124
00:04:49,680 --> 00:04:50,800
and i'm going to talk about one of the

125
00:04:50,800 --> 00:04:53,680
solutions um the solution that we were

126
00:04:53,680 --> 00:04:54,800
asked to

127
00:04:54,800 --> 00:04:58,400
build and implement is called trisa

128
00:04:58,400 --> 00:05:01,840
um trista sits kind of at this very

129
00:05:01,840 --> 00:05:03,840
strange intersection

130
00:05:03,840 --> 00:05:07,039
of interests so we have user privacy as

131
00:05:07,039 --> 00:05:09,360
one of the interests we have financial

132
00:05:09,360 --> 00:05:12,320
crime regulation as one of the interests

133
00:05:12,320 --> 00:05:14,160
and then we have distributed ledger

134
00:05:14,160 --> 00:05:16,000
technology blockchain

135
00:05:16,000 --> 00:05:17,600
as a third interest

136
00:05:17,600 --> 00:05:19,680
and i think um hopefully one of the

137
00:05:19,680 --> 00:05:21,919
things you'll realize as i go through

138
00:05:21,919 --> 00:05:24,160
this talk is that in a lot of ways those

139
00:05:24,160 --> 00:05:26,720
three are mutually exclusive

140
00:05:26,720 --> 00:05:28,560
so it's certainly not easy to design a

141
00:05:28,560 --> 00:05:31,520
solution that satisfies all three

142
00:05:31,520 --> 00:05:32,400
but

143
00:05:32,400 --> 00:05:35,440
our mission from our client has been

144
00:05:35,440 --> 00:05:38,320
to design a secure private and

145
00:05:38,320 --> 00:05:40,479
decentralized solution that's also open

146
00:05:40,479 --> 00:05:41,520
source

147
00:05:41,520 --> 00:05:43,680
so that anybody around the world can

148
00:05:43,680 --> 00:05:45,759
can implement it freely

149
00:05:45,759 --> 00:05:47,840
you know however they like

150
00:05:47,840 --> 00:05:50,320
but we can't interfere with core

151
00:05:50,320 --> 00:05:53,280
blockchain protocols we can't change

152
00:05:53,280 --> 00:05:55,199
transaction costs so we can't add a lot

153
00:05:55,199 --> 00:05:56,560
of latency

154
00:05:56,560 --> 00:05:58,319
um and we can't interfere with

155
00:05:58,319 --> 00:06:00,400
peer-to-peer transaction flows so

156
00:06:00,400 --> 00:06:02,080
there's a lot of constraints

157
00:06:02,080 --> 00:06:03,759
um

158
00:06:03,759 --> 00:06:05,520
so i'm going to talk about the trusted

159
00:06:05,520 --> 00:06:06,639
protocol

160
00:06:06,639 --> 00:06:08,319
and how we sort of navigate these

161
00:06:08,319 --> 00:06:10,240
different constraints

162
00:06:10,240 --> 00:06:11,680
um so

163
00:06:11,680 --> 00:06:13,759
when you think about this network you

164
00:06:13,759 --> 00:06:16,560
know picture a peer-to-peer network

165
00:06:16,560 --> 00:06:18,240
and in this you know peer-to-peer

166
00:06:18,240 --> 00:06:20,479
network it's not people who are you know

167
00:06:20,479 --> 00:06:23,360
sharing uh songs

168
00:06:23,360 --> 00:06:24,319
like

169
00:06:24,319 --> 00:06:26,080
you know the old peer-to-peer networks

170
00:06:26,080 --> 00:06:30,000
this is a network of what we call vasps

171
00:06:30,000 --> 00:06:34,319
so vasp stands for virtual asset service

172
00:06:34,319 --> 00:06:35,360
provider

173
00:06:35,360 --> 00:06:37,360
basically when i say vast you can kind

174
00:06:37,360 --> 00:06:40,240
of be thinking like a crypto bank

175
00:06:40,240 --> 00:06:42,000
so these peers

176
00:06:42,000 --> 00:06:44,800
that are interacting in this network are

177
00:06:44,800 --> 00:06:47,120
crypto banks who have been mandated by

178
00:06:47,120 --> 00:06:48,720
their government wherever they live in

179
00:06:48,720 --> 00:06:50,400
the world

180
00:06:50,400 --> 00:06:52,960
to keep records um and to collect and

181
00:06:52,960 --> 00:06:56,479
keep records um of customer business

182
00:06:56,479 --> 00:06:58,240
legal data

183
00:06:58,240 --> 00:07:00,639
for blockchain transactions that are

184
00:07:00,639 --> 00:07:03,759
above some monetary threshold and i'm

185
00:07:03,759 --> 00:07:06,000
going to talk about two peers you know

186
00:07:06,000 --> 00:07:07,280
throughout the talk i'm going to kind of

187
00:07:07,280 --> 00:07:09,199
refer to these you know two example

188
00:07:09,199 --> 00:07:12,160
peers as alice and bob uh kind of

189
00:07:12,160 --> 00:07:14,160
following standard cryptography

190
00:07:14,160 --> 00:07:15,840
[Music]

191
00:07:15,840 --> 00:07:17,280
norms

192
00:07:17,280 --> 00:07:18,479
um

193
00:07:18,479 --> 00:07:20,639
so one of the unique things about the

194
00:07:20,639 --> 00:07:23,440
trisa solution is that it's built on top

195
00:07:23,440 --> 00:07:25,680
of grpc

196
00:07:25,680 --> 00:07:27,680
and that was intentional

197
00:07:27,680 --> 00:07:29,360
it was you know actually a decision that

198
00:07:29,360 --> 00:07:32,160
was mandated by our client um but we

199
00:07:32,160 --> 00:07:33,360
think that you know it's a very

200
00:07:33,360 --> 00:07:35,440
interesting choice when it comes to

201
00:07:35,440 --> 00:07:36,800
privacy

202
00:07:36,800 --> 00:07:38,960
because in addition to being more

203
00:07:38,960 --> 00:07:41,840
compact than something like json you

204
00:07:41,840 --> 00:07:44,240
also can't read it right so human beings

205
00:07:44,240 --> 00:07:47,440
can't open up a protobuf and and read it

206
00:07:47,440 --> 00:07:49,599
um there's no way to kind of parse out

207
00:07:49,599 --> 00:07:50,400
the

208
00:07:50,400 --> 00:07:52,720
the names or the fields that are in a

209
00:07:52,720 --> 00:07:54,160
protocol buffer

210
00:07:54,160 --> 00:07:55,520
if you don't have the external

211
00:07:55,520 --> 00:07:57,280
specification and you don't send that

212
00:07:57,280 --> 00:07:59,039
spec when you're sending files back and

213
00:07:59,039 --> 00:08:00,479
forth

214
00:08:00,479 --> 00:08:03,120
so this is kind of how information

215
00:08:03,120 --> 00:08:05,919
travels between peers um

216
00:08:05,919 --> 00:08:08,080
in the trista protocol the other kind of

217
00:08:08,080 --> 00:08:11,280
unique thing about the trista protocol

218
00:08:11,280 --> 00:08:13,440
is that it's a trusted network so it's

219
00:08:13,440 --> 00:08:15,199
not you know like i said it's not like

220
00:08:15,199 --> 00:08:16,160
you're

221
00:08:16,160 --> 00:08:19,120
kind of the old-fashioned peer-to-peer

222
00:08:19,120 --> 00:08:22,319
networks um so all of the communications

223
00:08:22,319 --> 00:08:25,440
in trisa are protected using mutual

224
00:08:25,440 --> 00:08:27,759
transport layer security

225
00:08:27,759 --> 00:08:29,440
so in order to do that what that means

226
00:08:29,440 --> 00:08:31,360
is alice has to have some kind of

227
00:08:31,360 --> 00:08:33,120
identity certificate

228
00:08:33,120 --> 00:08:33,919
and

229
00:08:33,919 --> 00:08:36,080
when alice wants to do a transaction

230
00:08:36,080 --> 00:08:37,200
with bob

231
00:08:37,200 --> 00:08:39,599
alice needs to be able to present those

232
00:08:39,599 --> 00:08:42,559
identity certificates to bob bob needs

233
00:08:42,559 --> 00:08:44,720
to be able to validate them

234
00:08:44,720 --> 00:08:47,680
because bob trusts the root of alice's

235
00:08:47,680 --> 00:08:50,880
certificate and then bob also needs to

236
00:08:50,880 --> 00:08:53,760
present bob's certificate to alice uh

237
00:08:53,760 --> 00:08:56,320
which alice can then verify also so it's

238
00:08:56,320 --> 00:08:58,800
it's that's why it's called mutual tls

239
00:08:58,800 --> 00:09:00,959
right so it's going both ways um and

240
00:09:00,959 --> 00:09:03,680
this is how we kind of verify uh that

241
00:09:03,680 --> 00:09:05,440
the people that we think that we're

242
00:09:05,440 --> 00:09:07,760
sending this private information to are

243
00:09:07,760 --> 00:09:10,080
actually the people that we mean to send

244
00:09:10,080 --> 00:09:12,480
that information to

245
00:09:12,480 --> 00:09:13,920
so i'm going to talk next a little bit

246
00:09:13,920 --> 00:09:16,000
about how we make that happen

247
00:09:16,000 --> 00:09:18,800
um right so what we need is this public

248
00:09:18,800 --> 00:09:20,480
key infrastructure

249
00:09:20,480 --> 00:09:22,480
um and it's a little bit complex but i'm

250
00:09:22,480 --> 00:09:24,000
gonna step you through it

251
00:09:24,000 --> 00:09:24,800
um

252
00:09:24,800 --> 00:09:26,640
and happy to take questions about this

253
00:09:26,640 --> 00:09:28,800
later but you know essentially it starts

254
00:09:28,800 --> 00:09:30,640
with alice wanting to transact with bob

255
00:09:30,640 --> 00:09:32,720
and you know alice here is a vast

256
00:09:32,720 --> 00:09:34,320
there's a crypto bank so alice is

257
00:09:34,320 --> 00:09:36,160
actually representing some human

258
00:09:36,160 --> 00:09:37,839
customer who wants to send money to

259
00:09:37,839 --> 00:09:38,800
somebody

260
00:09:38,800 --> 00:09:41,839
who is represented by bob's fast but you

261
00:09:41,839 --> 00:09:44,160
know for all intents and purposes alice

262
00:09:44,160 --> 00:09:47,040
wants to transact with bob so alice

263
00:09:47,040 --> 00:09:50,560
starts by looking up

264
00:09:50,560 --> 00:09:52,640
bob in the global directory service and

265
00:09:52,640 --> 00:09:54,080
the global directory service is

266
00:09:54,080 --> 00:09:57,040
essentially like a yellow pages

267
00:09:57,040 --> 00:09:59,360
that trisa manages

268
00:09:59,360 --> 00:10:01,200
and only members

269
00:10:01,200 --> 00:10:03,120
of trista are allowed to use this yellow

270
00:10:03,120 --> 00:10:05,920
pages because you have to use mtls to

271
00:10:05,920 --> 00:10:08,399
access the yellow pages so you look bob

272
00:10:08,399 --> 00:10:11,920
up in the directory service and you find

273
00:10:11,920 --> 00:10:14,800
bob's endpoint and bob's public key

274
00:10:14,800 --> 00:10:16,800
you present your identity certificates

275
00:10:16,800 --> 00:10:19,040
to bob via mtls

276
00:10:19,040 --> 00:10:22,160
bob can then verify your identity

277
00:10:22,160 --> 00:10:24,160
certificates by checking in the yellow

278
00:10:24,160 --> 00:10:26,640
pages to say does alice exist in yellow

279
00:10:26,640 --> 00:10:28,959
pages does all of this information match

280
00:10:28,959 --> 00:10:32,000
up as expected and if it does then bob

281
00:10:32,000 --> 00:10:34,640
can uh you know mutually authenticate

282
00:10:34,640 --> 00:10:36,880
send bob's identity certificates to

283
00:10:36,880 --> 00:10:39,120
alice alice can then verify bob's

284
00:10:39,120 --> 00:10:40,320
certificate

285
00:10:40,320 --> 00:10:43,120
um in the global directory service and

286
00:10:43,120 --> 00:10:45,760
then if both parties are satisfied

287
00:10:45,760 --> 00:10:48,079
that they believe that they can you know

288
00:10:48,079 --> 00:10:50,160
trust each other then they can proceed

289
00:10:50,160 --> 00:10:53,120
with the information transfer

290
00:10:53,120 --> 00:10:55,120
so what is it that they

291
00:10:55,120 --> 00:10:57,120
transfer at that point so what they're

292
00:10:57,120 --> 00:10:58,480
transferring

293
00:10:58,480 --> 00:11:00,640
after they've kind of verified

294
00:11:00,640 --> 00:11:03,279
each other's identity is a secure

295
00:11:03,279 --> 00:11:05,600
envelope and a secure envelope is

296
00:11:05,600 --> 00:11:08,399
designed to

297
00:11:08,399 --> 00:11:10,880
vary as much as possible

298
00:11:10,880 --> 00:11:12,480
uh secure

299
00:11:12,480 --> 00:11:14,959
public individual data

300
00:11:14,959 --> 00:11:17,279
that is required as part of the

301
00:11:17,279 --> 00:11:20,079
government mandates to follow the the

302
00:11:20,079 --> 00:11:22,640
travel rule and this is

303
00:11:22,640 --> 00:11:24,720
you know individual people's data this

304
00:11:24,720 --> 00:11:27,440
is first and last names this is your

305
00:11:27,440 --> 00:11:30,240
address where you live um your

306
00:11:30,240 --> 00:11:31,760
government identification number

307
00:11:31,760 --> 00:11:33,519
potentially things like social security

308
00:11:33,519 --> 00:11:34,560
numbers

309
00:11:34,560 --> 00:11:37,519
uh for some countries uh date of birth

310
00:11:37,519 --> 00:11:40,720
um you know and your account numbers and

311
00:11:40,720 --> 00:11:41,440
so

312
00:11:41,440 --> 00:11:43,120
basically this is enough information

313
00:11:43,120 --> 00:11:45,200
that if you were a bad guy

314
00:11:45,200 --> 00:11:47,279
or a bad girl you could take all this

315
00:11:47,279 --> 00:11:50,320
information and go hunt somebody down

316
00:11:50,320 --> 00:11:52,639
and bully them into giving you their

317
00:11:52,639 --> 00:11:54,959
private keys

318
00:11:54,959 --> 00:11:57,360
and get all their crypto money

319
00:11:57,360 --> 00:11:59,279
so this is what needs to get

320
00:11:59,279 --> 00:12:02,320
uh encrypted inside the secure envelope

321
00:12:02,320 --> 00:12:05,120
to ensure that this data is safe

322
00:12:05,120 --> 00:12:08,160
um and people are not uh endangered um

323
00:12:08,160 --> 00:12:09,360
and so

324
00:12:09,360 --> 00:12:12,240
uh the way that we kind of package this

325
00:12:12,240 --> 00:12:15,040
data is inside what we call a secure

326
00:12:15,040 --> 00:12:16,160
envelope

327
00:12:16,160 --> 00:12:19,040
so the payload is going to be in these

328
00:12:19,040 --> 00:12:21,760
kind of like orange boxes uh the box

329
00:12:21,760 --> 00:12:23,680
that says payload

330
00:12:23,680 --> 00:12:27,200
contains the ivms 101 identities ibm

331
00:12:27,200 --> 00:12:30,240
s101 is an international standard for

332
00:12:30,240 --> 00:12:32,079
um you know it's a it's basically a

333
00:12:32,079 --> 00:12:34,160
schema for sending

334
00:12:34,160 --> 00:12:37,200
data about people um and organizations

335
00:12:37,200 --> 00:12:39,600
that will kind of match up you know even

336
00:12:39,600 --> 00:12:41,279
if people are writing in different

337
00:12:41,279 --> 00:12:43,440
languages and using uh different uh

338
00:12:43,440 --> 00:12:45,279
character encoding schemes

339
00:12:45,279 --> 00:12:48,639
so the ivms 101 identity information

340
00:12:48,639 --> 00:12:49,800
which includes

341
00:12:49,800 --> 00:12:53,200
identification um of individual uh

342
00:12:53,200 --> 00:12:55,839
citizens and then transaction metadata

343
00:12:55,839 --> 00:12:57,680
so that we can match stuff up to the

344
00:12:57,680 --> 00:12:59,920
blockchain transactions that goes in the

345
00:12:59,920 --> 00:13:01,279
payload

346
00:13:01,279 --> 00:13:02,880
um that's going to get encrypted with

347
00:13:02,880 --> 00:13:05,839
symmetric encryption and then the key

348
00:13:05,839 --> 00:13:07,440
that encrypts that

349
00:13:07,440 --> 00:13:09,440
goes inside another component of the

350
00:13:09,440 --> 00:13:12,800
secure envelope that's encrypted again

351
00:13:12,800 --> 00:13:15,040
using the public key

352
00:13:15,040 --> 00:13:17,600
of um the person who's going to be the

353
00:13:17,600 --> 00:13:18,800
or the bank that's going to be the

354
00:13:18,800 --> 00:13:20,800
recipient so only they should be able to

355
00:13:20,800 --> 00:13:22,240
open that

356
00:13:22,240 --> 00:13:25,440
uh that package that contains the

357
00:13:25,440 --> 00:13:27,279
symmetric encryption key only they

358
00:13:27,279 --> 00:13:29,600
should be able to open the payload and

359
00:13:29,600 --> 00:13:31,279
all of this is going to be going through

360
00:13:31,279 --> 00:13:33,279
mtls so that's kind of like an

361
00:13:33,279 --> 00:13:36,320
additional uh validation so the workflow

362
00:13:36,320 --> 00:13:38,240
goes something like this you know alice

363
00:13:38,240 --> 00:13:39,920
and bob have already kind of decided

364
00:13:39,920 --> 00:13:42,480
that they know who each other is because

365
00:13:42,480 --> 00:13:43,920
you know they went through that kind of

366
00:13:43,920 --> 00:13:45,199
pki

367
00:13:45,199 --> 00:13:47,519
uh workflow that i that i said so alice

368
00:13:47,519 --> 00:13:51,040
has bob's endpoint and public identity

369
00:13:51,040 --> 00:13:51,839
key

370
00:13:51,839 --> 00:13:55,760
alice encrypts um their customers data

371
00:13:55,760 --> 00:13:59,040
and the transaction metadata using a an

372
00:13:59,040 --> 00:14:00,800
encryption key

373
00:14:00,800 --> 00:14:03,440
then alice creates a secure envelope

374
00:14:03,440 --> 00:14:05,920
that includes that encrypted payload as

375
00:14:05,920 --> 00:14:08,800
well as the encryption key and an hmac

376
00:14:08,800 --> 00:14:09,839
secret

377
00:14:09,839 --> 00:14:12,320
and and some other metadata like you

378
00:14:12,320 --> 00:14:14,560
know time stamps and stuff like that and

379
00:14:14,560 --> 00:14:17,040
steals it using bob's public identity

380
00:14:17,040 --> 00:14:19,920
key and that is going to go over an mtls

381
00:14:19,920 --> 00:14:21,040
connection

382
00:14:21,040 --> 00:14:24,639
um to bob's trisa endpoint

383
00:14:24,639 --> 00:14:27,440
bob on the other end of this connection

384
00:14:27,440 --> 00:14:29,920
receives the secure envelope and can

385
00:14:29,920 --> 00:14:33,440
open it using bob's private identity

386
00:14:33,440 --> 00:14:36,800
certificate and then can open the

387
00:14:36,800 --> 00:14:39,760
encryption the encrypted payload um or

388
00:14:39,760 --> 00:14:42,240
sorry can open the uh the part of the

389
00:14:42,240 --> 00:14:45,279
envelope that has the encryption key and

390
00:14:45,279 --> 00:14:48,480
validate that the hmac secret matches

391
00:14:48,480 --> 00:14:51,120
uh what was sent uh when you compute

392
00:14:51,120 --> 00:14:52,560
over the encryption key and that makes

393
00:14:52,560 --> 00:14:53,839
sure that there hasn't been any

394
00:14:53,839 --> 00:14:56,480
tampering in transit although that is

395
00:14:56,480 --> 00:14:58,560
unlikely given that it's happening over

396
00:14:58,560 --> 00:15:01,760
mtls that's sort of an added security um

397
00:15:01,760 --> 00:15:04,480
and so once we validated that that key

398
00:15:04,480 --> 00:15:05,920
is good to use

399
00:15:05,920 --> 00:15:08,720
um bob uses that key to decrypt the

400
00:15:08,720 --> 00:15:12,880
inner identity payload and bob stores um

401
00:15:12,880 --> 00:15:15,600
all of the data that's needed for local

402
00:15:15,600 --> 00:15:19,680
compliance depending on where bob uh

403
00:15:19,680 --> 00:15:21,920
what jurisdiction bob is in

404
00:15:21,920 --> 00:15:24,560
and then bob has to do all of the same

405
00:15:24,560 --> 00:15:25,760
thing

406
00:15:25,760 --> 00:15:28,000
back to alice so needs to create a new

407
00:15:28,000 --> 00:15:30,399
secure envelope with bob's customers

408
00:15:30,399 --> 00:15:31,600
data

409
00:15:31,600 --> 00:15:33,279
and do the same kind of encryption

410
00:15:33,279 --> 00:15:35,680
process but this time using alice's

411
00:15:35,680 --> 00:15:37,920
public identity certificate sending that

412
00:15:37,920 --> 00:15:41,079
on mtls

413
00:15:42,320 --> 00:15:45,519
my slides kind of froze here

414
00:15:45,519 --> 00:15:46,320
um

415
00:15:46,320 --> 00:15:50,079
there we go so um the last part of this

416
00:15:50,079 --> 00:15:52,079
talk is kind of a

417
00:15:52,079 --> 00:15:54,800
um you know a discussion of some of the

418
00:15:54,800 --> 00:15:56,880
challenges that we encountered as we

419
00:15:56,880 --> 00:15:59,360
were trying to uh implement this and

420
00:15:59,360 --> 00:16:01,199
kind of get adoption

421
00:16:01,199 --> 00:16:03,519
um the number one thing that we have

422
00:16:03,519 --> 00:16:05,680
struggled with is that there's been

423
00:16:05,680 --> 00:16:08,079
really uneven adoption around the world

424
00:16:08,079 --> 00:16:08,880
um

425
00:16:08,880 --> 00:16:10,560
so what you're looking at is sort of a

426
00:16:10,560 --> 00:16:13,040
map that represents the parts of the

427
00:16:13,040 --> 00:16:15,440
world that were fastest to adopt the

428
00:16:15,440 --> 00:16:17,279
travel rule and that really

429
00:16:17,279 --> 00:16:19,519
is um canada

430
00:16:19,519 --> 00:16:23,199
germany singapore um with quickly you

431
00:16:23,199 --> 00:16:24,959
know taiwan and the philippines and

432
00:16:24,959 --> 00:16:26,880
czech republic following

433
00:16:26,880 --> 00:16:29,279
um so these are the parts of the world

434
00:16:29,279 --> 00:16:32,079
that have kind of moved the fastest to

435
00:16:32,079 --> 00:16:36,160
want to um to make the travel rule uh

436
00:16:36,160 --> 00:16:37,759
law

437
00:16:37,759 --> 00:16:38,560
so

438
00:16:38,560 --> 00:16:40,800
the issue though is that you know even

439
00:16:40,800 --> 00:16:42,720
as more and more countries and

440
00:16:42,720 --> 00:16:45,519
jurisdictions start to adopt the travel

441
00:16:45,519 --> 00:16:46,399
rule

442
00:16:46,399 --> 00:16:49,120
there's no guarantee that they will have

443
00:16:49,120 --> 00:16:52,959
kind of you know mutually compatible

444
00:16:52,959 --> 00:16:54,560
interpretations

445
00:16:54,560 --> 00:16:56,480
um so they'll have kind of different

446
00:16:56,480 --> 00:16:59,759
local laws different monetary thresholds

447
00:16:59,759 --> 00:17:02,240
um and potentially different

448
00:17:02,240 --> 00:17:05,280
minimum criteria for what constitutes

449
00:17:05,280 --> 00:17:07,199
you know a quote-unquote complete

450
00:17:07,199 --> 00:17:09,520
information exchange um and they they

451
00:17:09,520 --> 00:17:11,919
might not be compatible um and so that

452
00:17:11,919 --> 00:17:14,160
is kind of going to be a big challenge

453
00:17:14,160 --> 00:17:16,319
um you know another one of the

454
00:17:16,319 --> 00:17:18,959
strange problems that we've encountered

455
00:17:18,959 --> 00:17:21,039
is that there's a lot of really kind of

456
00:17:21,039 --> 00:17:24,000
weird tension in the web 3 community

457
00:17:24,000 --> 00:17:26,319
between decentralization and

458
00:17:26,319 --> 00:17:27,839
centralization

459
00:17:27,839 --> 00:17:30,640
so there's kind of this strong desire in

460
00:17:30,640 --> 00:17:32,480
a lot of financial institutions

461
00:17:32,480 --> 00:17:34,400
including you know kind of crypto

462
00:17:34,400 --> 00:17:37,440
financial institutions to trust you know

463
00:17:37,440 --> 00:17:39,280
who they're transacting with

464
00:17:39,280 --> 00:17:42,400
but the way that you get trust um is by

465
00:17:42,400 --> 00:17:44,080
having some kind of you know certificate

466
00:17:44,080 --> 00:17:46,640
authority um or you know some kind of

467
00:17:46,640 --> 00:17:48,080
root uh

468
00:17:48,080 --> 00:17:50,160
that that says you know these people are

469
00:17:50,160 --> 00:17:52,559
trustworthy and so there is this kind of

470
00:17:52,559 --> 00:17:54,960
strange tension between a desire for

471
00:17:54,960 --> 00:17:56,720
complete decentralization on the one

472
00:17:56,720 --> 00:18:00,080
hand and the ability to establish trust

473
00:18:00,080 --> 00:18:02,720
on the other hand trisa is peer-to-peer

474
00:18:02,720 --> 00:18:05,039
it's decentralized but

475
00:18:05,039 --> 00:18:06,640
you know critics might say that the

476
00:18:06,640 --> 00:18:08,400
certificate authority and the global

477
00:18:08,400 --> 00:18:10,160
directory service the yellow pages kind

478
00:18:10,160 --> 00:18:12,720
of that i mentioned um you know actually

479
00:18:12,720 --> 00:18:16,240
break that decentralization um because

480
00:18:16,240 --> 00:18:18,480
they you know are kind of a centralizing

481
00:18:18,480 --> 00:18:20,480
component that's designed to enhance

482
00:18:20,480 --> 00:18:22,640
trust and there are other protocols

483
00:18:22,640 --> 00:18:24,720
um that compete with trisa

484
00:18:24,720 --> 00:18:26,559
that are fully decentralized but they

485
00:18:26,559 --> 00:18:29,679
don't have a way for you to verify that

486
00:18:29,679 --> 00:18:31,280
the person that you're sending private

487
00:18:31,280 --> 00:18:34,080
data to is who they they say they are uh

488
00:18:34,080 --> 00:18:36,640
which is kind of a big risk um another

489
00:18:36,640 --> 00:18:39,840
one of the uh interesting challenges

490
00:18:39,840 --> 00:18:41,360
that we encountered

491
00:18:41,360 --> 00:18:44,559
is this idea that you know the storage

492
00:18:44,559 --> 00:18:46,960
of the yellow pages needs to be

493
00:18:46,960 --> 00:18:49,440
geographically distributed so the the

494
00:18:49,440 --> 00:18:51,360
yellow pages that we maintain the kind

495
00:18:51,360 --> 00:18:53,440
of global directory service doesn't

496
00:18:53,440 --> 00:18:55,679
contain a massive quantity of data you

497
00:18:55,679 --> 00:18:57,120
know it certainly doesn't compare to the

498
00:18:57,120 --> 00:18:59,840
amount of data that you know twitter um

499
00:18:59,840 --> 00:19:01,840
you know was speaking about or even the

500
00:19:01,840 --> 00:19:04,080
you know u.s census right so this is a

501
00:19:04,080 --> 00:19:06,160
small amount of data but it's it's

502
00:19:06,160 --> 00:19:08,960
important data right it's public keys

503
00:19:08,960 --> 00:19:12,480
um it's endpoint data it also is how we

504
00:19:12,480 --> 00:19:15,120
revoke certificates um if we find that

505
00:19:15,120 --> 00:19:17,600
they've been compromised um so that's

506
00:19:17,600 --> 00:19:19,440
important data and if you can kind of

507
00:19:19,440 --> 00:19:21,600
imagine that you're living in some part

508
00:19:21,600 --> 00:19:23,360
of the world

509
00:19:23,360 --> 00:19:25,600
that's you know quite far away from the

510
00:19:25,600 --> 00:19:27,679
storage you're paying a latency cost

511
00:19:27,679 --> 00:19:29,360
that people who are co-located you know

512
00:19:29,360 --> 00:19:31,600
don't pay and that's not fair um and so

513
00:19:31,600 --> 00:19:33,440
what we've done is we've replicated the

514
00:19:33,440 --> 00:19:34,799
database

515
00:19:34,799 --> 00:19:36,320
to the locations that have had the

516
00:19:36,320 --> 00:19:37,919
fastest adoption eventually we'll have

517
00:19:37,919 --> 00:19:40,080
it replicated to all regions and we have

518
00:19:40,080 --> 00:19:42,320
an anti-anti-entropy process that runs

519
00:19:42,320 --> 00:19:43,520
in the background

520
00:19:43,520 --> 00:19:46,720
to synchronize them um

521
00:19:46,720 --> 00:19:47,760
you know

522
00:19:47,760 --> 00:19:49,600
another big problem is we have no way to

523
00:19:49,600 --> 00:19:52,559
verify that vasps are storing data

524
00:19:52,559 --> 00:19:55,039
correctly we advise them to actually

525
00:19:55,039 --> 00:19:55,919
store

526
00:19:55,919 --> 00:19:57,679
the protocol buffers we tell them to

527
00:19:57,679 --> 00:19:59,840
store secure envelopes as is not

528
00:19:59,840 --> 00:20:01,679
decrypted

529
00:20:01,679 --> 00:20:04,320
so that you can just kind of delete the

530
00:20:04,320 --> 00:20:06,320
private data by erasure when you delete

531
00:20:06,320 --> 00:20:08,480
the private keys after the compliance

532
00:20:08,480 --> 00:20:09,760
period ends but there's no way to

533
00:20:09,760 --> 00:20:11,200
validate that people are actually doing

534
00:20:11,200 --> 00:20:14,240
that and it's completely peer-to-peer so

535
00:20:14,240 --> 00:20:16,320
there's no way to mandate that we can

536
00:20:16,320 --> 00:20:19,760
kind of pass that along as best practice

537
00:20:19,760 --> 00:20:22,320
there's also the problem that uh you

538
00:20:22,320 --> 00:20:25,120
know this guidance likely conflicts with

539
00:20:25,120 --> 00:20:27,360
other guidance uh issued by the same

540
00:20:27,360 --> 00:20:28,480
governments

541
00:20:28,480 --> 00:20:30,320
um and that's always kind of one of the

542
00:20:30,320 --> 00:20:33,200
issues um there you know there's no way

543
00:20:33,200 --> 00:20:35,120
uh to know for sure

544
00:20:35,120 --> 00:20:37,039
um if the private data that you're

545
00:20:37,039 --> 00:20:39,440
storing um is actually gonna cause you

546
00:20:39,440 --> 00:20:41,120
to you know have a big violation of

547
00:20:41,120 --> 00:20:43,919
another regulation like let's say gdpr

548
00:20:43,919 --> 00:20:46,799
um so that is kind of a another pain

549
00:20:46,799 --> 00:20:49,679
point um and speaking of regulation um

550
00:20:49,679 --> 00:20:51,039
you know i think it's important to say

551
00:20:51,039 --> 00:20:53,600
that not all places in the world uh

552
00:20:53,600 --> 00:20:57,280
agree on how to do encryption um

553
00:20:57,280 --> 00:20:59,919
and uh you know they don't all agree on

554
00:20:59,919 --> 00:21:03,440
import and export of cryptography

555
00:21:03,440 --> 00:21:05,039
and that is likely going to be a pain

556
00:21:05,039 --> 00:21:08,080
point as uh adoption expands and then i

557
00:21:08,080 --> 00:21:10,880
would just say the last thing is that um

558
00:21:10,880 --> 00:21:12,480
even though we feel pretty good about

559
00:21:12,480 --> 00:21:15,440
the use of mtls and grpc it's not as

560
00:21:15,440 --> 00:21:17,280
common yet with kind of you know

561
00:21:17,280 --> 00:21:20,159
everyday engineering shops um and so

562
00:21:20,159 --> 00:21:21,600
we've had to

563
00:21:21,600 --> 00:21:23,840
um be prepared to provide a lot of

564
00:21:23,840 --> 00:21:26,240
additional client-side support um to

565
00:21:26,240 --> 00:21:27,919
enable you know these engineering teams

566
00:21:27,919 --> 00:21:30,080
a lot of small engineering teams to

567
00:21:30,080 --> 00:21:32,000
figure out how to adapt the trisa

568
00:21:32,000 --> 00:21:33,200
protocol

569
00:21:33,200 --> 00:21:34,320
so

570
00:21:34,320 --> 00:21:36,400
kind of key takeaways the multi-layer

571
00:21:36,400 --> 00:21:38,799
encryption has been important um

572
00:21:38,799 --> 00:21:41,360
sacrificing some decentralization to

573
00:21:41,360 --> 00:21:42,720
establish trust

574
00:21:42,720 --> 00:21:44,400
and just being willing to

575
00:21:44,400 --> 00:21:47,440
be flexible um and be diplomatic

576
00:21:47,440 --> 00:21:49,520
in addition to being kind of technical

577
00:21:49,520 --> 00:21:52,240
practitioners has really been

578
00:21:52,240 --> 00:21:53,760
kind of what we needed to do in order to

579
00:21:53,760 --> 00:21:55,679
make this work

580
00:21:55,679 --> 00:21:57,440
and that's all i've got for you i'm

581
00:21:57,440 --> 00:21:58,960
happy to take questions i know we're

582
00:21:58,960 --> 00:22:01,039
almost at the end so i'm happy to

583
00:22:01,039 --> 00:22:03,200
take questions by the slack you can also

584
00:22:03,200 --> 00:22:04,799
reach out to me if you want my email is

585
00:22:04,799 --> 00:22:05,760
here

586
00:22:05,760 --> 00:22:07,679
and you're welcome to check out the

587
00:22:07,679 --> 00:22:09,919
open source code that we've written that

588
00:22:09,919 --> 00:22:11,600
implements the trusted protocol so

589
00:22:11,600 --> 00:22:15,000
thanks so much

