1
00:00:07,429 --> 00:00:11,280
<font color="#E5E5E5">alright well thanks</font><font color="#CCCCCC"> very much for</font><font color="#E5E5E5"> having</font>

2
00:00:09,599 --> 00:00:15,030
me here today my name is Jeremy dhryn

3
00:00:11,280 --> 00:00:18,480
and<font color="#CCCCCC"> I'm a a pen tester for a large</font>

4
00:00:15,030 --> 00:00:20,430
company in Louisville and also<font color="#CCCCCC"> own</font>

5
00:00:18,480 --> 00:00:23,390
ellipsis information security and do pen

6
00:00:20,430 --> 00:00:26,550
testing through that company as well and

7
00:00:23,390 --> 00:00:29,640
a couple<font color="#E5E5E5"> projects I've worked on is</font>

8
00:00:26,550 --> 00:00:32,279
mattila day originally started by Adrian

9
00:00:29,640 --> 00:00:35,730
Crenshaw actually still have<font color="#E5E5E5"> mattila day</font>

10
00:00:32,279 --> 00:00:39,239
one up on<font color="#CCCCCC"> the site for download and then</font>

11
00:00:35,730 --> 00:00:41,968
spun off into a second project mattila

12
00:00:39,239 --> 00:00:43,110
<font color="#E5E5E5">day to that is</font><font color="#CCCCCC"> available as well for</font>

13
00:00:41,969 --> 00:00:47,550
learning about web application

14
00:00:43,110 --> 00:00:50,789
vulnerabilities so today<font color="#E5E5E5"> I was going to</font>

15
00:00:47,550 --> 00:00:55,078
talk<font color="#CCCCCC"> a little bit about a pen test I was</font>

16
00:00:50,789 --> 00:00:58,680
on where ran into some source code that

17
00:00:55,079 --> 00:01:00,090
<font color="#E5E5E5">was of interest we were able</font><font color="#CCCCCC"> to get</font>

18
00:00:58,680 --> 00:01:03,420
<font color="#CCCCCC">ahold of the source code of an</font>

19
00:01:00,090 --> 00:01:05,400
<font color="#CCCCCC">application and we wanted to escalate</font>

20
00:01:03,420 --> 00:01:07,409
privileges and it turns out that there

21
00:01:05,400 --> 00:01:09,750
were some scripts that were running that

22
00:01:07,409 --> 00:01:11,970
had an administrative user name and

23
00:01:09,750 --> 00:01:14,070
password inside the script and the

24
00:01:11,970 --> 00:01:16,710
script would run every so often and do

25
00:01:14,070 --> 00:01:18,330
these administrative type things<font color="#E5E5E5"> and so</font>

26
00:01:16,710 --> 00:01:19,919
we weren't<font color="#E5E5E5"> so much interested in the</font>

27
00:01:18,330 --> 00:01:22,048
<font color="#E5E5E5">source code per se but we did want to</font>

28
00:01:19,920 --> 00:01:24,509
get that<font color="#E5E5E5"> admin username and password so</font>

29
00:01:22,049 --> 00:01:28,890
<font color="#CCCCCC">we could login as administrator but the</font>

30
00:01:24,509 --> 00:01:32,600
script had been encrypted and after

31
00:01:28,890 --> 00:01:35,939
studying<font color="#E5E5E5"> the way that the foul looked it</font>

32
00:01:32,600 --> 00:01:39,089
became more<font color="#E5E5E5"> apparent over time that it</font>

33
00:01:35,939 --> 00:01:40,889
was a homemade encryption and eventually

34
00:01:39,090 --> 00:01:42,990
we<font color="#E5E5E5"> were able to finagle our way into</font>

35
00:01:40,890 --> 00:01:46,170
breaking the encryption and getting the

36
00:01:42,990 --> 00:01:48,960
username and password out and so I'm

37
00:01:46,170 --> 00:01:51,990
going to<font color="#E5E5E5"> use that use case as an example</font>

38
00:01:48,960 --> 00:01:53,729
today in a demo of how we worked our way

39
00:01:51,990 --> 00:01:57,689
through this problem and figured<font color="#E5E5E5"> it out</font>

40
00:01:53,729 --> 00:01:59,670
and go<font color="#CCCCCC"> ahead and get to the punch line</font>

41
00:01:57,689 --> 00:02:01,798
now in case I forget at the end but the

42
00:01:59,670 --> 00:02:03,450
idea being that<font color="#E5E5E5"> any time that you're</font>

43
00:02:01,799 --> 00:02:06,509
going to use<font color="#E5E5E5"> encryption you want to use</font>

44
00:02:03,450 --> 00:02:09,179
a good vetted modern approved cipher

45
00:02:06,509 --> 00:02:10,860
that's a standard cipher whose security

46
00:02:09,179 --> 00:02:13,140
is only based on the key and is not

47
00:02:10,860 --> 00:02:14,030
based on you know any<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> knowledge</font>

48
00:02:13,140 --> 00:02:19,049
about the system

49
00:02:14,030 --> 00:02:20,819
and the idea<font color="#E5E5E5"> being that if homemade</font>

50
00:02:19,050 --> 00:02:22,500
encryption had not had<font color="#E5E5E5"> been used in this</font>

51
00:02:20,819 --> 00:02:24,750
case we probably wouldn't have been<font color="#CCCCCC"> able</font>

52
00:02:22,500 --> 00:02:25,860
<font color="#E5E5E5">to get the password the way we did not</font>

53
00:02:24,750 --> 00:02:27,450
to say we<font color="#E5E5E5"> wouldn't have got the password</font>

54
00:02:25,860 --> 00:02:29,400
eventually anyway but we<font color="#E5E5E5"> certainly would</font>

55
00:02:27,450 --> 00:02:32,310
had to have<font color="#E5E5E5"> used different tactics maybe</font>

56
00:02:29,400 --> 00:02:34,500
fishing or some other tactics convincing

57
00:02:32,310 --> 00:02:35,850
someone to give us the password it would

58
00:02:34,500 --> 00:02:39,180
have gone certainly a different way

59
00:02:35,850 --> 00:02:42,319
though so to<font color="#E5E5E5"> start with the idea of a</font>

60
00:02:39,180 --> 00:02:44,580
cipher is is<font color="#E5E5E5"> to take some plain text and</font>

61
00:02:42,319 --> 00:02:49,850
pass that plain text through this

62
00:02:44,580 --> 00:02:52,380
algorithm the algorithm is uses a key to

63
00:02:49,850 --> 00:02:55,620
obscure this plain text and the<font color="#CCCCCC"> cipher</font>

64
00:02:52,380 --> 00:02:56,910
<font color="#CCCCCC">text so that</font><font color="#E5E5E5"> you can't understand it it</font>

65
00:02:55,620 --> 00:02:59,549
makes no sense anymore it doesn't have

66
00:02:56,910 --> 00:03:01,319
any context anymore and we're all pretty

67
00:02:59,549 --> 00:03:05,790
familiar with<font color="#CCCCCC"> the idea of encrypting</font>

68
00:03:01,319 --> 00:03:07,950
something but a couple<font color="#E5E5E5"> of basic ideas</font>

69
00:03:05,790 --> 00:03:09,480
that will<font color="#CCCCCC"> help us</font><font color="#E5E5E5"> a little bit is this</font>

70
00:03:07,950 --> 00:03:12,298
idea of substitution and transposition

71
00:03:09,480 --> 00:03:14,310
and most ciphers have a tendency to use

72
00:03:12,299 --> 00:03:17,760
one or the other of these or combine

73
00:03:14,310 --> 00:03:20,609
these two ideas together into a cipher

74
00:03:17,760 --> 00:03:24,000
so with substitution we're<font color="#E5E5E5"> going to take</font>

75
00:03:20,609 --> 00:03:26,670
the plaintext and swap it out for

76
00:03:24,000 --> 00:03:28,530
something<font color="#E5E5E5"> else entirely so I won't be</font>

77
00:03:26,670 --> 00:03:30,720
<font color="#E5E5E5">the plain text anymore maybe the letter</font>

78
00:03:28,530 --> 00:03:33,299
A gets substituted for the letter X or

79
00:03:30,720 --> 00:03:37,019
maybe letter B gets substituted for the

80
00:03:33,299 --> 00:03:39,090
number 14 but they're plain text is

81
00:03:37,019 --> 00:03:42,030
actually gone and has<font color="#E5E5E5"> been replaced</font><font color="#CCCCCC"> by</font>

82
00:03:39,090 --> 00:03:43,560
something else with transposition we're

83
00:03:42,030 --> 00:03:45,120
not actually<font color="#CCCCCC"> going to change any of the</font>

84
00:03:43,560 --> 00:03:46,950
<font color="#CCCCCC">plaintext at</font><font color="#E5E5E5"> all but we are going to</font>

85
00:03:45,120 --> 00:03:48,390
shuffle it around a bit so it won't be

86
00:03:46,950 --> 00:03:51,268
in the<font color="#E5E5E5"> same order that it was in before</font>

87
00:03:48,390 --> 00:03:53,070
it's kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> like shuffling cards you</font>

88
00:03:51,269 --> 00:03:56,160
don't actually add more<font color="#E5E5E5"> Kings to the</font>

89
00:03:53,070 --> 00:03:58,858
deck or change the heart into a shovel

90
00:03:56,160 --> 00:04:01,410
you just simply change the order of<font color="#E5E5E5"> the</font>

91
00:03:58,859 --> 00:04:06,480
deck when<font color="#E5E5E5"> you shuffle the cards</font><font color="#CCCCCC"> and</font>

92
00:04:01,410 --> 00:04:08,100
that's the idea behind transposition so

93
00:04:06,480 --> 00:04:10,319
we're going to<font color="#E5E5E5"> look at two basic types</font>

94
00:04:08,100 --> 00:04:11,910
of ciphers there's not surprisingly

95
00:04:10,319 --> 00:04:14,670
substitution and transposition ciphers

96
00:04:11,910 --> 00:04:16,200
and the substitution ciphers there's a

97
00:04:14,670 --> 00:04:18,959
lot of different<font color="#CCCCCC"> types and one of them</font>

98
00:04:16,200 --> 00:04:21,478
<font color="#E5E5E5">will be of particular</font><font color="#CCCCCC"> interest today to</font>

99
00:04:18,959 --> 00:04:24,090
start<font color="#E5E5E5"> with</font><font color="#CCCCCC"> we have a simple substitution</font>

100
00:04:21,478 --> 00:04:25,560
cipher depending<font color="#CCCCCC"> on how the key is set</font>

101
00:04:24,090 --> 00:04:27,599
up sometimes these are called Caesar

102
00:04:25,560 --> 00:04:30,900
ciphers with a key of<font color="#E5E5E5"> three</font>

103
00:04:27,600 --> 00:04:34,110
or<font color="#E5E5E5"> rot13 with a key of 13 but the idea</font>

104
00:04:30,900 --> 00:04:36,120
is is that you have a number<font color="#E5E5E5"> that is</font>

105
00:04:34,110 --> 00:04:38,670
essentially the key<font color="#E5E5E5"> and you're going to</font>

106
00:04:36,120 --> 00:04:42,510
shift the letters<font color="#E5E5E5"> that many positions</font>

107
00:04:38,670 --> 00:04:45,180
and so if we<font color="#E5E5E5"> used a Caesar cipher for</font>

108
00:04:42,510 --> 00:04:50,070
example the letter A would be shifted

109
00:04:45,180 --> 00:04:52,410
from A to B C and B because b is three

110
00:04:50,070 --> 00:04:55,050
positions away from the letter<font color="#E5E5E5"> A rot13</font>

111
00:04:52,410 --> 00:04:58,020
is what we call an involute<font color="#CCCCCC"> Ariki at</font>

112
00:04:55,050 --> 00:05:00,980
least over the English<font color="#E5E5E5"> alphabet that has</font>

113
00:04:58,020 --> 00:05:03,870
26 letters because if you run rot13

114
00:05:00,980 --> 00:05:08,760
twice you'll get back what you started

115
00:05:03,870 --> 00:05:10,260
since<font color="#CCCCCC"> 13 done twice is 26 in other words</font>

116
00:05:08,760 --> 00:05:15,690
you circle all the way back<font color="#CCCCCC"> around to</font>

117
00:05:10,260 --> 00:05:17,670
the<font color="#E5E5E5"> Larry started with the</font><font color="#CCCCCC"> next best</font>

118
00:05:15,690 --> 00:05:18,900
cipher of<font color="#E5E5E5"> suppose you might say working</font>

119
00:05:17,670 --> 00:05:21,660
<font color="#CCCCCC">off of the shift cipher is the</font>

120
00:05:18,900 --> 00:05:23,580
polyalphabetic cipher and the<font color="#E5E5E5"> idea here</font>

121
00:05:21,660 --> 00:05:27,000
<font color="#CCCCCC">is</font><font color="#E5E5E5"> is we're still going to shift the</font>

122
00:05:23,580 --> 00:05:29,400
letter some amount but each letter gets

123
00:05:27,000 --> 00:05:31,740
its own shift so the first letter gets

124
00:05:29,400 --> 00:05:34,200
shifted by the key for<font color="#E5E5E5"> that column and</font>

125
00:05:31,740 --> 00:05:36,480
the second letter gets shifted by the

126
00:05:34,200 --> 00:05:38,280
amount<font color="#CCCCCC"> for that column and in a good</font>

127
00:05:36,480 --> 00:05:41,070
<font color="#E5E5E5">password those would be different than</font>

128
00:05:38,280 --> 00:05:42,479
one another so let's<font color="#E5E5E5"> take</font><font color="#CCCCCC"> the key one</font>

129
00:05:41,070 --> 00:05:44,580
two three four<font color="#CCCCCC"> five we would shift the</font>

130
00:05:42,480 --> 00:05:46,140
first letter one spot the second letter

131
00:05:44,580 --> 00:05:47,969
two spots the third layer three spots

132
00:05:46,140 --> 00:05:49,710
and so on when we got<font color="#E5E5E5"> to the sixth</font>

133
00:05:47,970 --> 00:05:52,010
letter we start back over and we'll

134
00:05:49,710 --> 00:05:54,359
shift the six letter one spot again and

135
00:05:52,010 --> 00:05:57,719
on the example here we can see that<font color="#E5E5E5"> the</font>

136
00:05:54,360 --> 00:05:59,910
<font color="#E5E5E5">word aardvark starts with 2 a's but</font>

137
00:05:57,720 --> 00:06:02,160
<font color="#E5E5E5">you'll notice</font><font color="#CCCCCC"> that in the ciphertext it</font>

138
00:05:59,910 --> 00:06:05,700
came<font color="#CCCCCC"> out using the eye chart on the</font>

139
00:06:02,160 --> 00:06:08,190
right to be bc because there was two

140
00:06:05,700 --> 00:06:09,630
different keys for the one for the<font color="#E5E5E5"> first</font>

141
00:06:08,190 --> 00:06:14,070
letter one for the second letter one for

142
00:06:09,630 --> 00:06:16,770
the third<font color="#CCCCCC"> letter and so on</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> forth the</font>

143
00:06:14,070 --> 00:06:19,560
<font color="#CCCCCC">polygram substitution cipher is a lot</font>

144
00:06:16,770 --> 00:06:22,500
<font color="#E5E5E5">more like what the modern block ciphers</font>

145
00:06:19,560 --> 00:06:24,690
use the standard ciphers we would use

146
00:06:22,500 --> 00:06:27,810
today like des and aes tend to behave

147
00:06:24,690 --> 00:06:29,969
this way and what's going on here is

148
00:06:27,810 --> 00:06:32,340
you're taking entire blocks of plaintext

149
00:06:29,970 --> 00:06:34,910
<font color="#E5E5E5">and you're swapping out the entire block</font>

150
00:06:32,340 --> 00:06:37,229
for a whole new block of ciphertext

151
00:06:34,910 --> 00:06:40,740
makes it a whole lot harder<font color="#E5E5E5"> to do the</font>

152
00:06:37,229 --> 00:06:43,050
crypt analysis in fact the DSN a

153
00:06:40,740 --> 00:06:45,960
<font color="#CCCCCC">yes both have this idea of substituting</font>

154
00:06:43,050 --> 00:06:47,460
entire blocks after<font color="#CCCCCC"> doing some Mick what</font>

155
00:06:45,960 --> 00:06:51,508
they call mixing which is to take the

156
00:06:47,460 --> 00:06:53,310
key and mix the plaintext up before you

157
00:06:51,509 --> 00:06:59,370
go in and<font color="#E5E5E5"> do the substitution later in</font>

158
00:06:53,310 --> 00:07:02,190
the S box there's actually a cipher

159
00:06:59,370 --> 00:07:04,620
that's unbreakable and it can<font color="#E5E5E5"> even be a</font>

160
00:07:02,190 --> 00:07:07,830
shift cipher or it can be one of these

161
00:07:04,620 --> 00:07:09,780
polyalphabetic ciphers and the idea

162
00:07:07,830 --> 00:07:11,849
behind<font color="#E5E5E5"> a one-time pad is is that the key</font>

163
00:07:09,780 --> 00:07:14,460
is at least as long as the plain text

164
00:07:11,849 --> 00:07:17,069
itself hopefully a lot<font color="#E5E5E5"> longer in the</font>

165
00:07:14,460 --> 00:07:19,020
<font color="#CCCCCC">book</font><font color="#E5E5E5"> you see here this</font><font color="#CCCCCC"> is a picture of a</font>

166
00:07:17,069 --> 00:07:22,130
book supposedly used during<font color="#E5E5E5"> the Cold War</font>

167
00:07:19,020 --> 00:07:24,299
where you would take your<font color="#CCCCCC"> message and</font>

168
00:07:22,130 --> 00:07:27,060
you would<font color="#E5E5E5"> start the very beginning of</font>

169
00:07:24,300 --> 00:07:29,340
the book and read the very first key in

170
00:07:27,060 --> 00:07:30,780
the book and use that as<font color="#CCCCCC"> the key to</font>

171
00:07:29,340 --> 00:07:33,150
encrypt the first letter in your plain

172
00:07:30,780 --> 00:07:34,258
text you<font color="#E5E5E5"> would use the second letter in</font>

173
00:07:33,150 --> 00:07:35,880
the book for<font color="#E5E5E5"> your second letter in your</font>

174
00:07:34,259 --> 00:07:38,460
plain text and so on<font color="#E5E5E5"> and so forth and</font>

175
00:07:35,880 --> 00:07:40,469
<font color="#CCCCCC">the book is supposed to be very</font><font color="#E5E5E5"> long so</font>

176
00:07:38,460 --> 00:07:44,520
you can encrypt your entire message and

177
00:07:40,470 --> 00:07:47,039
not even use up the entire book and this

178
00:07:44,520 --> 00:07:49,500
kind<font color="#E5E5E5"> of a cryptography even though it's</font>

179
00:07:47,039 --> 00:07:52,729
simple is actually provably unbreakable

180
00:07:49,500 --> 00:07:54,719
the person who figured<font color="#E5E5E5"> out the idea</font>

181
00:07:52,729 --> 00:07:57,479
suspected it might be unbreakable<font color="#CCCCCC"> then</font>

182
00:07:54,719 --> 00:08:01,409
about 20<font color="#E5E5E5"> years later mathematician came</font>

183
00:07:57,479 --> 00:08:04,530
behind and proved that it actually was

184
00:08:01,409 --> 00:08:06,360
unbreakable the reason being<font color="#E5E5E5"> is that the</font>

185
00:08:04,530 --> 00:08:08,758
ciphertext could represent any plain

186
00:08:06,360 --> 00:08:10,139
text any plain text was just as right of

187
00:08:08,759 --> 00:08:11,520
an<font color="#E5E5E5"> answer as any other the only way you</font>

188
00:08:10,139 --> 00:08:13,919
could know which one was correct is if

189
00:08:11,520 --> 00:08:15,599
you had<font color="#CCCCCC"> the original key it turns out</font>

190
00:08:13,919 --> 00:08:19,620
this unbreakable cipher actually was

191
00:08:15,599 --> 00:08:21,919
broken and the Americans figured out

192
00:08:19,620 --> 00:08:26,849
that some of<font color="#E5E5E5"> their adversaries the</font>

193
00:08:21,919 --> 00:08:28,560
Russians were using the books over and

194
00:08:26,849 --> 00:08:31,889
over again<font color="#E5E5E5"> because they weren't getting</font>

195
00:08:28,560 --> 00:08:35,219
a fresh supply of new cipher key books

196
00:08:31,889 --> 00:08:38,520
in these one-time pads and so when they

197
00:08:35,219 --> 00:08:40,409
reuse the key repeatedly they broke the

198
00:08:38,520 --> 00:08:43,730
cardinal rule of the one-time pad which

199
00:08:40,409 --> 00:08:46,170
is never reused the one-time pad and

200
00:08:43,730 --> 00:08:47,610
because they were<font color="#E5E5E5"> able to do comparisons</font>

201
00:08:46,170 --> 00:08:51,180
they were able to<font color="#E5E5E5"> end up breaking some</font>

202
00:08:47,610 --> 00:08:52,620
of the codes that way but that<font color="#E5E5E5"> tends to</font>

203
00:08:51,180 --> 00:08:54,709
<font color="#CCCCCC">always be the problem with cryptography</font>

204
00:08:52,620 --> 00:08:56,690
at least in the modern age

205
00:08:54,710 --> 00:08:58,070
it's<font color="#E5E5E5"> not so much the cryptography this</font>

206
00:08:56,690 --> 00:09:02,680
week it's the<font color="#E5E5E5"> people using that make</font>

207
00:08:58,070 --> 00:09:06,560
mistakes<font color="#CCCCCC"> in the transposition cipher</font>

208
00:09:02,680 --> 00:09:08,030
this is one of those permutation ciphers

209
00:09:06,560 --> 00:09:09,650
where basically you're just taking the

210
00:09:08,030 --> 00:09:12,110
letters and moving them around if you

211
00:09:09,650 --> 00:09:14,240
notice in the example we still have the

212
00:09:12,110 --> 00:09:17,000
numbers one through nine like we did in

213
00:09:14,240 --> 00:09:19,310
the plain text at the top but you'll see

214
00:09:17,000 --> 00:09:21,530
the<font color="#CCCCCC"> ciphertext in the second row the</font>

215
00:09:19,310 --> 00:09:26,119
numbers are just<font color="#CCCCCC"> all scrambled even</font>

216
00:09:21,530 --> 00:09:28,100
though they're all still present so is

217
00:09:26,120 --> 00:09:31,160
there<font color="#E5E5E5"> any questions so far about basic</font>

218
00:09:28,100 --> 00:09:36,680
cipher primitives and ways of doing

219
00:09:31,160 --> 00:09:39,230
basic encryption<font color="#E5E5E5"> all right well to help</font>

220
00:09:36,680 --> 00:09:42,319
with understanding how some of this

221
00:09:39,230 --> 00:09:46,070
works I created a new project and I put

222
00:09:42,320 --> 00:09:47,810
it out<font color="#E5E5E5"> on github in it's a totally free</font>

223
00:09:46,070 --> 00:09:49,010
<font color="#CCCCCC">so feel free to download it and take</font>

224
00:09:47,810 --> 00:09:52,939
credit for it and put your name on<font color="#CCCCCC"> it</font>

225
00:09:49,010 --> 00:09:55,250
and everything the the idea is is that I

226
00:09:52,940 --> 00:09:58,310
wanted<font color="#E5E5E5"> to implement a lot of the</font>

227
00:09:55,250 --> 00:10:00,710
classical ciphers shift cipher the

228
00:09:58,310 --> 00:10:02,869
visionary which is polyalphabetic<font color="#E5E5E5"> Hill</font>

229
00:10:00,710 --> 00:10:05,240
cipher which is the one of those block

230
00:10:02,870 --> 00:10:07,070
ciphers we talked about<font color="#E5E5E5"> a substitution</font>

231
00:10:05,240 --> 00:10:09,710
cipher or permutation cipher to do the

232
00:10:07,070 --> 00:10:12,590
transposition and<font color="#E5E5E5"> also some utilities</font>

233
00:10:09,710 --> 00:10:15,140
that would help you be able<font color="#E5E5E5"> to do the</font>

234
00:10:12,590 --> 00:10:17,720
math<font color="#E5E5E5"> that's often associated with</font>

235
00:10:15,140 --> 00:10:20,120
breaking these kinds of ciphers and go

236
00:10:17,720 --> 00:10:23,420
ahead<font color="#E5E5E5"> and automate that process so for</font>

237
00:10:20,120 --> 00:10:25,550
<font color="#E5E5E5">example we have the hilarity which</font>

238
00:10:23,420 --> 00:10:29,270
implements the hill cipher<font color="#E5E5E5"> and then we</font>

239
00:10:25,550 --> 00:10:31,699
<font color="#E5E5E5">have maitre d which does a lot of matrix</font>

240
00:10:29,270 --> 00:10:33,860
math to do things like transitions<font color="#E5E5E5"> and</font>

241
00:10:31,700 --> 00:10:37,580
adjuncts and stuff<font color="#CCCCCC"> that you need to</font><font color="#E5E5E5"> be</font>

242
00:10:33,860 --> 00:10:38,780
able to end up trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out if</font>

243
00:10:37,580 --> 00:10:40,670
keys<font color="#E5E5E5"> are in volute early if</font><font color="#CCCCCC"> you can</font>

244
00:10:38,780 --> 00:10:43,790
break them and<font color="#E5E5E5"> so forth we have the</font>

245
00:10:40,670 --> 00:10:45,620
shifty and infinity implement two kinds

246
00:10:43,790 --> 00:10:48,709
<font color="#E5E5E5">of shift ciphers the shift a knife a</font>

247
00:10:45,620 --> 00:10:49,820
fine cipher and then visionary is the

248
00:10:48,710 --> 00:10:51,860
one we're going<font color="#E5E5E5"> to use today and it</font>

249
00:10:49,820 --> 00:10:55,250
implements the visionary cipher one of

250
00:10:51,860 --> 00:10:58,750
the poly alphabetics and the script that

251
00:10:55,250 --> 00:11:01,550
<font color="#E5E5E5">I was</font><font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> and early on that is</font>

252
00:10:58,750 --> 00:11:03,980
was a polyalphabetic it was a type of

253
00:11:01,550 --> 00:11:05,870
visionary cipher<font color="#CCCCCC"> that the person had</font>

254
00:11:03,980 --> 00:11:07,550
changed just a little bit but

255
00:11:05,870 --> 00:11:08,089
conceptually the idea is going to be

256
00:11:07,550 --> 00:11:14,359
exactly

257
00:11:08,089 --> 00:11:16,610
same so<font color="#E5E5E5"> I figured the way to to learn</font>

258
00:11:14,360 --> 00:11:19,129
<font color="#E5E5E5">this the best is let's do the encryption</font>

259
00:11:16,610 --> 00:11:22,339
wrong we'll use these classical ciphers

260
00:11:19,129 --> 00:11:25,160
in a not so secure way and then let's

261
00:11:22,339 --> 00:11:27,680
work through breaking that cipher and I

262
00:11:25,160 --> 00:11:29,149
have substituted a new file for the

263
00:11:27,680 --> 00:11:32,508
original ones so there's nothing<font color="#CCCCCC"> as</font>

264
00:11:29,149 --> 00:11:35,209
being disclosed here that's secret but

265
00:11:32,509 --> 00:11:37,519
<font color="#E5E5E5">the idea</font><font color="#CCCCCC"> of actually breaking things on</font>

266
00:11:35,209 --> 00:11:39,050
purpose<font color="#CCCCCC"> I think is a useful way to learn</font>

267
00:11:37,519 --> 00:11:40,879
<font color="#E5E5E5">a lot of concepts and information</font>

268
00:11:39,050 --> 00:11:43,189
security<font color="#E5E5E5"> and especially if you're doing</font>

269
00:11:40,879 --> 00:11:45,559
programming any time that<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> helping</font>

270
00:11:43,189 --> 00:11:47,809
folks with learning programming I like

271
00:11:45,559 --> 00:11:51,050
<font color="#E5E5E5">to try to do some tactical mistakes on</font>

272
00:11:47,809 --> 00:11:53,480
purpose in order to cause the error to

273
00:11:51,050 --> 00:11:55,490
occur that way down the road when you

274
00:11:53,480 --> 00:11:57,290
make<font color="#CCCCCC"> that same mistake again you will</font>

275
00:11:55,490 --> 00:11:59,209
<font color="#E5E5E5">actually have a chance</font><font color="#CCCCCC"> of remembering oh</font>

276
00:11:57,290 --> 00:12:01,459
that error means that I probably<font color="#E5E5E5"> did</font>

277
00:11:59,209 --> 00:12:02,748
this<font color="#E5E5E5"> kind of thing wrong and so we're</font>

278
00:12:01,459 --> 00:12:04,758
going to<font color="#E5E5E5"> sort of do that same thing with</font>

279
00:12:02,749 --> 00:12:06,290
Visionnaire visionary also makes a good

280
00:12:04,759 --> 00:12:08,600
<font color="#E5E5E5">cipher to study because it's actually</font>

281
00:12:06,290 --> 00:12:11,089
<font color="#CCCCCC">not very</font><font color="#E5E5E5"> easy to break it's fairly</font>

282
00:12:08,600 --> 00:12:14,059
difficult if you're new to doing any

283
00:12:11,089 --> 00:12:16,399
kind of crypt analysis it but on the

284
00:12:14,059 --> 00:12:19,129
<font color="#E5E5E5">other hand we can do it it'll take about</font>

285
00:12:16,399 --> 00:12:21,439
20 minutes but we can<font color="#CCCCCC"> actually break the</font>

286
00:12:19,129 --> 00:12:24,199
visionary cipher even if we don't know

287
00:12:21,439 --> 00:12:26,179
what the password is it just takes a bit

288
00:12:24,199 --> 00:12:28,910
of analysis and putting some tools

289
00:12:26,179 --> 00:12:30,740
together and that's another reason<font color="#E5E5E5"> i</font>

290
00:12:28,910 --> 00:12:31,850
like to use it as an<font color="#CCCCCC"> example is it does</font>

291
00:12:30,740 --> 00:12:33,379
let us use a<font color="#E5E5E5"> couple of different</font>

292
00:12:31,850 --> 00:12:35,629
techniques we're not just going<font color="#E5E5E5"> to do</font>

293
00:12:33,379 --> 00:12:38,749
one simple thing and be done with the

294
00:12:35,629 --> 00:12:42,079
problem so the setup is<font color="#CCCCCC"> we're going to</font>

295
00:12:38,749 --> 00:12:44,149
<font color="#CCCCCC">take a</font><font color="#E5E5E5"> picture jpg to be specific and</font>

296
00:12:42,079 --> 00:12:46,189
we're going to encrypt that<font color="#CCCCCC"> jpg</font><font color="#E5E5E5"> and then</font>

297
00:12:44,149 --> 00:12:48,139
go about<font color="#E5E5E5"> the business of trying to</font>

298
00:12:46,189 --> 00:12:49,399
figure out what the password is so of

299
00:12:48,139 --> 00:12:51,379
course if you're<font color="#E5E5E5"> going to do</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> in a</font>

300
00:12:49,399 --> 00:12:53,089
classroom environment one of the best

301
00:12:51,379 --> 00:12:57,709
ways<font color="#E5E5E5"> to do it would be to partner up</font>

302
00:12:53,089 --> 00:13:00,709
have someone encrypt the file for you

303
00:12:57,709 --> 00:13:02,869
with a secret password and then you all

304
00:13:00,709 --> 00:13:06,619
trade and try to break each other's

305
00:13:02,870 --> 00:13:09,620
files and the don't worry about<font color="#E5E5E5"> copying</font>

306
00:13:06,620 --> 00:13:11,809
the code here that<font color="#E5E5E5"> I used to do the</font>

307
00:13:09,620 --> 00:13:15,139
encryption on the slide<font color="#E5E5E5"> on the github</font>

308
00:13:11,809 --> 00:13:16,309
site is the typical<font color="#E5E5E5"> read me MV file you</font>

309
00:13:15,139 --> 00:13:18,649
normally see associate with github

310
00:13:16,309 --> 00:13:21,350
projects and all of the commands<font color="#E5E5E5"> are</font>

311
00:13:18,649 --> 00:13:25,760
already there<font color="#E5E5E5"> online for you</font>

312
00:13:21,350 --> 00:13:28,100
so we've encrypted this file and come up

313
00:13:25,760 --> 00:13:30,980
with encrypted funny cat 1 batt jpg that

314
00:13:28,100 --> 00:13:32,990
eventually we're going to attack so the

315
00:13:30,980 --> 00:13:34,370
strategy is going to be to talk about a

316
00:13:32,990 --> 00:13:35,900
<font color="#CCCCCC">couple of statistics that are going to</font>

317
00:13:34,370 --> 00:13:36,920
help us we don't<font color="#E5E5E5"> really know which ones</font>

318
00:13:35,900 --> 00:13:38,530
we're just going to kind of throw the

319
00:13:36,920 --> 00:13:40,699
kitchen sink at it and see what pops out

320
00:13:38,530 --> 00:13:42,800
we also need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk a little bit about</font>

321
00:13:40,700 --> 00:13:43,940
traffic analysis because there's going

322
00:13:42,800 --> 00:13:45,680
to be this question<font color="#CCCCCC"> that's going to come</font>

323
00:13:43,940 --> 00:13:48,470
up of how do you know what<font color="#E5E5E5"> kind of file</font>

324
00:13:45,680 --> 00:13:49,670
it is you're trying to decrypt<font color="#CCCCCC"> also</font>

325
00:13:48,470 --> 00:13:51,080
we're going to look<font color="#E5E5E5"> at what</font><font color="#CCCCCC"> jpeg</font>

326
00:13:49,670 --> 00:13:53,839
normally look<font color="#CCCCCC"> like look at how</font>

327
00:13:51,080 --> 00:13:54,860
<font color="#E5E5E5">Visionnaire changes JPEGs then we'll</font>

328
00:13:53,840 --> 00:13:56,030
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to go about the business of</font>

329
00:13:54,860 --> 00:13:58,130
figuring out what the key length is

330
00:13:56,030 --> 00:14:01,280
you'll see why later and finally we'll

331
00:13:58,130 --> 00:14:03,770
try to recover the<font color="#E5E5E5"> key bytes so</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> far</font>

332
00:14:01,280 --> 00:14:06,530
as statistics goes today we're going<font color="#CCCCCC"> to</font>

333
00:14:03,770 --> 00:14:10,550
use just the plain stuff the mean median

334
00:14:06,530 --> 00:14:12,620
mode standard deviation entropy can be

335
00:14:10,550 --> 00:14:14,329
helpful to help understand files like

336
00:14:12,620 --> 00:14:15,860
for<font color="#E5E5E5"> example entropy is really useful if</font>

337
00:14:14,330 --> 00:14:18,860
somebody changes an extent<font color="#E5E5E5"> to file</font>

338
00:14:15,860 --> 00:14:20,030
extension on you from txt 2.jpg you know

339
00:14:18,860 --> 00:14:21,770
the entropy would give that sort of

340
00:14:20,030 --> 00:14:22,610
thing away right away and we're also

341
00:14:21,770 --> 00:14:24,680
going to need a little<font color="#E5E5E5"> bit of</font>

342
00:14:22,610 --> 00:14:27,140
probability and something called index

343
00:14:24,680 --> 00:14:31,280
of coincidence that's going<font color="#E5E5E5"> to be super</font>

344
00:14:27,140 --> 00:14:32,810
helpful pretty soon<font color="#CCCCCC"> all right so</font><font color="#E5E5E5"> before</font>

345
00:14:31,280 --> 00:14:39,020
<font color="#E5E5E5">we get rolling any questions up to this</font>

346
00:14:32,810 --> 00:14:41,180
point all right so first let's talk

347
00:14:39,020 --> 00:14:43,400
<font color="#E5E5E5">about traffic analysis because we're</font>

348
00:14:41,180 --> 00:14:45,229
going<font color="#E5E5E5"> to have the</font><font color="#CCCCCC"> same problem in this</font>

349
00:14:43,400 --> 00:14:47,150
type of<font color="#CCCCCC"> fin testing as we are in all</font>

350
00:14:45,230 --> 00:14:49,610
kinds of pen testing we need to learn

351
00:14:47,150 --> 00:14:53,140
about<font color="#E5E5E5"> the emissary a lot about the</font>

352
00:14:49,610 --> 00:14:56,240
emissary the success of the pen test is

353
00:14:53,140 --> 00:14:58,910
largely going to hinge on this step so

354
00:14:56,240 --> 00:15:01,010
you have tools<font color="#CCCCCC"> that are specifically</font>

355
00:14:58,910 --> 00:15:04,819
designed just for this step in general

356
00:15:01,010 --> 00:15:06,860
<font color="#E5E5E5">we talk about tools like recon</font><font color="#CCCCCC"> ng or we</font>

357
00:15:04,820 --> 00:15:08,090
talk about<font color="#CCCCCC"> show Dan or other tools like</font>

358
00:15:06,860 --> 00:15:09,470
that where we're doing this sort<font color="#E5E5E5"> of</font>

359
00:15:08,090 --> 00:15:11,210
passive analysis this reconnaissance

360
00:15:09,470 --> 00:15:13,970
where we're trying<font color="#E5E5E5"> to learn as</font><font color="#CCCCCC"> much</font>

361
00:15:11,210 --> 00:15:16,220
about the target as we can and doing

362
00:15:13,970 --> 00:15:18,350
crypt analysis is no different you need

363
00:15:16,220 --> 00:15:20,870
to learn as much about what it<font color="#CCCCCC"> is you're</font>

364
00:15:18,350 --> 00:15:23,150
trying to decrypt and how it<font color="#E5E5E5"> was</font>

365
00:15:20,870 --> 00:15:24,530
decrypted and so let me<font color="#E5E5E5"> repeat that</font>

366
00:15:23,150 --> 00:15:26,390
again<font color="#E5E5E5"> because those two points are</font>

367
00:15:24,530 --> 00:15:28,579
really important<font color="#E5E5E5"> you really need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know</font>

368
00:15:26,390 --> 00:15:30,770
what<font color="#E5E5E5"> kind of data it is you're trying to</font>

369
00:15:28,580 --> 00:15:32,720
decrypt and you need to know<font color="#CCCCCC"> as best as</font>

370
00:15:30,770 --> 00:15:34,400
possible what kind of cipher was used to

371
00:15:32,720 --> 00:15:35,180
do the encryption so those<font color="#CCCCCC"> are two</font>

372
00:15:34,400 --> 00:15:36,860
<font color="#E5E5E5">really keep</font>

373
00:15:35,180 --> 00:15:40,010
point and traffic analysis can help you

374
00:15:36,860 --> 00:15:42,230
with that you look at who's talking to

375
00:15:40,010 --> 00:15:43,939
who and what were they talking about did

376
00:15:42,230 --> 00:15:46,550
somebody say in a text message I<font color="#E5E5E5"> sent</font>

377
00:15:43,940 --> 00:15:48,110
you that picture you know that would<font color="#CCCCCC"> be</font>

378
00:15:46,550 --> 00:15:51,140
a big clue right there were they

379
00:15:48,110 --> 00:15:52,550
emailing back and forth about how one<font color="#CCCCCC"> of</font>

380
00:15:51,140 --> 00:15:55,550
them needed a spreadsheet from the other

381
00:15:52,550 --> 00:15:58,069
one tools like Wireshark and<font color="#CCCCCC"> TCB dump</font>

382
00:15:55,550 --> 00:16:00,319
and other kinds of traffic capture tools

383
00:15:58,070 --> 00:16:02,300
can help you get that<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

384
00:16:00,320 --> 00:16:03,920
information you<font color="#CCCCCC"> may not</font><font color="#E5E5E5"> necessarily be</font>

385
00:16:02,300 --> 00:16:06,560
able to read what<font color="#CCCCCC"> it is they're sending</font>

386
00:16:03,920 --> 00:16:08,839
back and forth but just what they're

387
00:16:06,560 --> 00:16:13,369
saying can give you clues into what's

388
00:16:08,840 --> 00:16:16,130
going on in the situation so now we'll

389
00:16:13,370 --> 00:16:18,260
look at what the<font color="#CCCCCC"> JPEG files so-called</font>

390
00:16:16,130 --> 00:16:20,060
look like normally what kind of bytes

391
00:16:18,260 --> 00:16:21,890
structure do they have<font color="#E5E5E5"> what do they</font>

392
00:16:20,060 --> 00:16:23,989
typically look like not encrypted at all

393
00:16:21,890 --> 00:16:26,330
just what does a normal<font color="#CCCCCC"> jpg picture look</font>

394
00:16:23,990 --> 00:16:27,650
like so one of the ways we can do<font color="#CCCCCC"> that</font>

395
00:16:26,330 --> 00:16:29,630
is to take those<font color="#E5E5E5"> statistics that we</font>

396
00:16:27,650 --> 00:16:32,150
<font color="#E5E5E5">talked about earlier and run them on</font>

397
00:16:29,630 --> 00:16:34,400
<font color="#CCCCCC">these plain old everyday jpeg files and</font>

398
00:16:32,150 --> 00:16:35,930
if<font color="#E5E5E5"> we do those statistics on enough jpeg</font>

399
00:16:34,400 --> 00:16:38,360
files we should get<font color="#E5E5E5"> a really good</font>

400
00:16:35,930 --> 00:16:41,420
<font color="#CCCCCC">understanding of what a standard jpeg</font>

401
00:16:38,360 --> 00:16:44,620
file looks like one way to do that<font color="#CCCCCC"> is</font>

402
00:16:41,420 --> 00:16:46,969
just take a bunch of pictures and do the

403
00:16:44,620 --> 00:16:49,220
analysis on them and see if<font color="#E5E5E5"> you can</font>

404
00:16:46,970 --> 00:16:51,050
figure out anything in common so we'll

405
00:16:49,220 --> 00:16:52,310
take<font color="#E5E5E5"> these four pictures here three of</font>

406
00:16:51,050 --> 00:16:54,680
which are similar and one of which is

407
00:16:52,310 --> 00:16:57,890
deliberately different and see what<font color="#E5E5E5"> kind</font>

408
00:16:54,680 --> 00:16:59,599
of<font color="#CCCCCC"> Statistics we can get on these are</font>

409
00:16:57,890 --> 00:17:01,970
the commands to run the basic statistics

410
00:16:59,600 --> 00:17:04,700
again all<font color="#E5E5E5"> of its in the readme file on</font>

411
00:17:01,970 --> 00:17:06,470
the project page but<font color="#E5E5E5"> the basic</font><font color="#CCCCCC"> idea is</font>

412
00:17:04,700 --> 00:17:08,450
we're going<font color="#E5E5E5"> to have this program freak</font>

413
00:17:06,470 --> 00:17:10,430
<font color="#E5E5E5">pi which is</font><font color="#CCCCCC"> a frequency analyzer and</font>

414
00:17:08,450 --> 00:17:12,950
it's<font color="#E5E5E5"> going to help us run these stats</font>

415
00:17:10,430 --> 00:17:14,750
automatically which is frankly the best

416
00:17:12,950 --> 00:17:16,990
way to do statistics trust me having

417
00:17:14,750 --> 00:17:19,310
tried it both ways automated is awesome

418
00:17:16,990 --> 00:17:21,920
also we can<font color="#E5E5E5"> look at the histogram which</font>

419
00:17:19,310 --> 00:17:25,250
is just<font color="#E5E5E5"> a picture view of the frequency</font>

420
00:17:21,920 --> 00:17:28,610
of the bites you know is by 47 twice as

421
00:17:25,250 --> 00:17:31,010
popular is by 26 for example a histogram

422
00:17:28,610 --> 00:17:32,929
draws a nice pretty picture and we can

423
00:17:31,010 --> 00:17:38,420
intuitively get that information fairly

424
00:17:32,930 --> 00:17:40,790
quickly so<font color="#CCCCCC"> we look at funny cat 1 and</font>

425
00:17:38,420 --> 00:17:45,230
what we end up figuring out is is that

426
00:17:40,790 --> 00:17:46,760
there's this mode byte 0 that seems to

427
00:17:45,230 --> 00:17:48,500
<font color="#CCCCCC">show up</font><font color="#E5E5E5"> a lot more than any of the</font>

428
00:17:46,760 --> 00:17:48,720
others in<font color="#CCCCCC"> fact twice as much as any</font>

429
00:17:48,500 --> 00:17:51,510
other

430
00:17:48,720 --> 00:17:54,030
bite and we also see some<font color="#E5E5E5"> things like</font>

431
00:17:51,510 --> 00:17:57,030
<font color="#E5E5E5">that arithmetic mean is 123 in the</font>

432
00:17:54,030 --> 00:17:58,889
medians 123 those are not too far off<font color="#E5E5E5"> of</font>

433
00:17:57,030 --> 00:18:01,500
the standard value so one of the things

434
00:17:58,890 --> 00:18:03,600
you<font color="#E5E5E5"> would need to do is say well what</font>

435
00:18:01,500 --> 00:18:06,570
would<font color="#E5E5E5"> be a standard value for a</font><font color="#CCCCCC"> JPEG so</font>

436
00:18:03,600 --> 00:18:10,709
jpeg files are binary they have values

437
00:18:06,570 --> 00:18:14,460
ranging from 0 to 255 in some frequency

438
00:18:10,710 --> 00:18:15,990
<font color="#E5E5E5">by 0 occurs some number of times x 58</font>

439
00:18:14,460 --> 00:18:20,010
occur some number<font color="#E5E5E5"> of times and</font><font color="#CCCCCC"> so on</font><font color="#E5E5E5"> and</font>

440
00:18:15,990 --> 00:18:27,330
so forth so<font color="#CCCCCC"> the closer that the median</font>

441
00:18:20,010 --> 00:18:30,120
is to 128 and 255 / 2 120 7.5 but you

442
00:18:27,330 --> 00:18:32,428
know if<font color="#E5E5E5"> you round up about 128 would</font>

443
00:18:30,120 --> 00:18:34,649
roughly be the middle right so<font color="#E5E5E5"> JPEG</font>

444
00:18:32,429 --> 00:18:37,500
files actually are 123<font color="#E5E5E5"> so they're not</font>

445
00:18:34,650 --> 00:18:40,140
really very even right there they're

446
00:18:37,500 --> 00:18:43,140
actually skewing down away from the

447
00:18:40,140 --> 00:18:45,270
median<font color="#E5E5E5"> the standard deviation is kind of</font>

448
00:18:43,140 --> 00:18:47,250
the<font color="#E5E5E5"> average amount that you deviate from</font>

449
00:18:45,270 --> 00:18:49,559
the<font color="#CCCCCC"> average I know confusing it's like</font>

450
00:18:47,250 --> 00:18:52,409
an average of average but the idea being

451
00:18:49,559 --> 00:18:56,280
is on<font color="#E5E5E5"> average how far off is each byte</font>

452
00:18:52,409 --> 00:19:00,299
from the median and this value of 70

453
00:18:56,280 --> 00:19:02,399
3.96 means that the bites are all kind

454
00:19:00,299 --> 00:19:05,340
<font color="#E5E5E5">of off but not they're all kind of off</font>

455
00:19:02,400 --> 00:19:08,520
about the same amount so we have an

456
00:19:05,340 --> 00:19:10,949
entropy of 7.98 and that comes in handy

457
00:19:08,520 --> 00:19:13,260
<font color="#E5E5E5">if somebody actually sent a file like</font>

458
00:19:10,950 --> 00:19:14,429
let's say they encrypted not encrypted

459
00:19:13,260 --> 00:19:17,070
let's just say<font color="#CCCCCC"> that they send a</font><font color="#E5E5E5"> text</font>

460
00:19:14,429 --> 00:19:19,230
file<font color="#CCCCCC"> a text file that</font><font color="#E5E5E5"> was a book or an</font>

461
00:19:17,070 --> 00:19:22,250
<font color="#E5E5E5">English book that's going to have a</font>

462
00:19:19,230 --> 00:19:25,169
entropy least we would expect any way of

463
00:19:22,250 --> 00:19:27,450
somewhere around like four and a half

464
00:19:25,169 --> 00:19:30,210
four point six something like that the

465
00:19:27,450 --> 00:19:32,520
<font color="#E5E5E5">interview here 7.98 it probably really</font>

466
00:19:30,210 --> 00:19:33,929
is a<font color="#E5E5E5"> JPEG it's probably not a trick we</font>

467
00:19:32,520 --> 00:19:36,600
could also look at the file headers and

468
00:19:33,929 --> 00:19:39,419
make sure<font color="#E5E5E5"> it starts with the FF FF II or</font>

469
00:19:36,600 --> 00:19:42,090
whatever the<font color="#CCCCCC"> the JPEG start symbol is</font>

470
00:19:39,419 --> 00:19:43,260
and the in symbol and and do things like

471
00:19:42,090 --> 00:19:45,570
that<font color="#CCCCCC"> just to make sure</font><font color="#E5E5E5"> we're on the</font>

472
00:19:43,260 --> 00:19:48,120
right track so<font color="#CCCCCC"> we do this again for the</font>

473
00:19:45,570 --> 00:19:52,200
second picture<font color="#E5E5E5"> and get largely the same</font>

474
00:19:48,120 --> 00:19:55,649
statistics white 0 is dominating it's

475
00:19:52,200 --> 00:19:59,039
not on average perfectly distributed

476
00:19:55,650 --> 00:20:00,899
<font color="#CCCCCC">bytes frequency the third picture ends</font>

477
00:19:59,039 --> 00:20:02,550
up being pretty much<font color="#CCCCCC"> a duplicate of the</font>

478
00:20:00,899 --> 00:20:04,770
first two as far as to take

479
00:20:02,550 --> 00:20:07,020
<font color="#E5E5E5">Cisco you know slightly different but</font>

480
00:20:04,770 --> 00:20:10,290
not a whole lot and then we get<font color="#CCCCCC"> to Larry</font>

481
00:20:07,020 --> 00:20:13,680
Bird and Larry Bird is actually got a

482
00:20:10,290 --> 00:20:15,570
mode of 32 which is a space character

483
00:20:13,680 --> 00:20:17,880
all the other three<font color="#CCCCCC"> had a mode of zero</font>

484
00:20:15,570 --> 00:20:19,580
so that's different so it is<font color="#E5E5E5"> kind of</font>

485
00:20:17,880 --> 00:20:22,080
interesting<font color="#E5E5E5"> to pull in some pictures</font>

486
00:20:19,580 --> 00:20:24,240
that are different just to prove the

487
00:20:22,080 --> 00:20:26,129
point that you really want to<font color="#E5E5E5"> be as</font>

488
00:20:24,240 --> 00:20:28,890
specific as possible like if you feel

489
00:20:26,130 --> 00:20:32,460
like your adversary is encrypting a map

490
00:20:28,890 --> 00:20:34,590
of the<font color="#CCCCCC"> battlefield for example</font><font color="#E5E5E5"> you</font>

491
00:20:32,460 --> 00:20:38,850
<font color="#E5E5E5">probably really want to look at JPEGs</font>

492
00:20:34,590 --> 00:20:40,860
better maps of geographical areas and do

493
00:20:38,850 --> 00:20:43,949
your statistics on those and not just

494
00:20:40,860 --> 00:20:46,290
pick any random jpg that you got off<font color="#CCCCCC"> of</font>

495
00:20:43,950 --> 00:20:48,870
google images or whatever if<font color="#E5E5E5"> you're if</font>

496
00:20:46,290 --> 00:20:51,570
you think it's satellite imagery that's

497
00:20:48,870 --> 00:20:53,550
been encrypted then grab satellite

498
00:20:51,570 --> 00:20:54,990
imagery images and do statistics on

499
00:20:53,550 --> 00:20:56,639
those right because you want<font color="#E5E5E5"> to try to</font>

500
00:20:54,990 --> 00:20:58,710
<font color="#E5E5E5">get the statistics as close to your</font>

501
00:20:56,640 --> 00:21:00,120
target as possible whatever it is<font color="#E5E5E5"> you</font>

502
00:20:58,710 --> 00:21:02,130
<font color="#E5E5E5">can learn from</font><font color="#CCCCCC"> that traffic analysis</font>

503
00:21:00,120 --> 00:21:05,489
<font color="#CCCCCC">it's going to be really</font><font color="#E5E5E5"> helpful so</font>

504
00:21:02,130 --> 00:21:08,070
<font color="#E5E5E5">finally we get this chart that basically</font>

505
00:21:05,490 --> 00:21:10,080
shows that the mean it turns out is

506
00:21:08,070 --> 00:21:12,200
probably not super interesting except

507
00:21:10,080 --> 00:21:15,290
for<font color="#CCCCCC"> the fact that the mean does tell us</font>

508
00:21:12,200 --> 00:21:20,820
JPEGs do not have a normal<font color="#E5E5E5"> distribution</font>

509
00:21:15,290 --> 00:21:22,980
great the mode has predominantly zeros

510
00:21:20,820 --> 00:21:25,379
all except for Larry Bird that's going

511
00:21:22,980 --> 00:21:27,720
to come in super handy so again the mode

512
00:21:25,380 --> 00:21:30,420
is the is the popularity contest of

513
00:21:27,720 --> 00:21:33,330
<font color="#E5E5E5">statistics the mode is the most popular</font>

514
00:21:30,420 --> 00:21:36,540
character in the file so what we

515
00:21:33,330 --> 00:21:39,330
<font color="#E5E5E5">establish here is is that we think that</font>

516
00:21:36,540 --> 00:21:41,580
our encrypted file is a picture of a

517
00:21:39,330 --> 00:21:43,649
funny cat because the name of the file

518
00:21:41,580 --> 00:21:47,820
from our traffic analysis is encrypted

519
00:21:43,650 --> 00:21:49,770
funny<font color="#CCCCCC"> cats I jpg so chances are the mode</font>

520
00:21:47,820 --> 00:21:51,840
of the file that we're targeting is

521
00:21:49,770 --> 00:21:53,790
probably going to<font color="#E5E5E5"> be 0 right because</font>

522
00:21:51,840 --> 00:21:56,939
because all the other cats when they

523
00:21:53,790 --> 00:22:01,670
they all have a mode of 0 0 is by far

524
00:21:56,940 --> 00:22:01,670
the most popular<font color="#E5E5E5"> character in that</font><font color="#CCCCCC"> file</font>

525
00:22:02,180 --> 00:22:06,930
right so now let's look<font color="#E5E5E5"> at how does</font>

526
00:22:04,470 --> 00:22:08,910
visionary the<font color="#CCCCCC"> cipher itself change the</font>

527
00:22:06,930 --> 00:22:10,080
files so because in their traffic

528
00:22:08,910 --> 00:22:11,520
analysis we learned that<font color="#E5E5E5"> it's an</font>

529
00:22:10,080 --> 00:22:12,929
encrypted funny cat and we also learned

530
00:22:11,520 --> 00:22:15,800
that they're using<font color="#CCCCCC"> this visionary cipher</font>

531
00:22:12,930 --> 00:22:17,600
<font color="#E5E5E5">sorry and just</font><font color="#CCCCCC"> sad</font>

532
00:22:15,800 --> 00:22:21,169
in the in<font color="#CCCCCC"> the pen test the way we</font>

533
00:22:17,600 --> 00:22:23,120
figured<font color="#E5E5E5"> out what the cipher was is on</font>

534
00:22:21,170 --> 00:22:28,040
another server they had actually left

535
00:22:23,120 --> 00:22:29,750
the program that did the encryption it

536
00:22:28,040 --> 00:22:31,760
did they didn't have the key or anything

537
00:22:29,750 --> 00:22:33,200
like that but just<font color="#E5E5E5"> the actual program</font>

538
00:22:31,760 --> 00:22:36,020
itself the binary that did the

539
00:22:33,200 --> 00:22:39,110
encryption<font color="#E5E5E5"> was there and so we encrypted</font>

540
00:22:36,020 --> 00:22:40,760
some files and that we had deliberately

541
00:22:39,110 --> 00:22:42,409
filled with like all zeros and stuff

542
00:22:40,760 --> 00:22:46,129
like that you know files that are good

543
00:22:42,410 --> 00:22:47,930
for understanding statistics and that's

544
00:22:46,130 --> 00:22:51,290
how we figured out later that it turned

545
00:22:47,930 --> 00:22:53,870
out<font color="#E5E5E5"> to be a visionary cipher so so</font>

546
00:22:51,290 --> 00:22:55,520
here's our strategy for studying this

547
00:22:53,870 --> 00:22:59,000
visionary cipher now that we've<font color="#E5E5E5"> kind of</font>

548
00:22:55,520 --> 00:23:00,940
studied these jpgs in the first round so

549
00:22:59,000 --> 00:23:02,930
we're going to encrypt this file and

550
00:23:00,940 --> 00:23:05,240
we're going to<font color="#E5E5E5"> run statistics on the</font>

551
00:23:02,930 --> 00:23:07,700
<font color="#E5E5E5">file just like we did on the plane tix</font>

552
00:23:05,240 --> 00:23:11,540
<font color="#CCCCCC">will compare those stats and see if</font>

553
00:23:07,700 --> 00:23:13,250
anything makes sense these are the

554
00:23:11,540 --> 00:23:15,379
commands<font color="#CCCCCC"> that I used</font><font color="#E5E5E5"> to encrypt a file i</font>

555
00:23:13,250 --> 00:23:17,060
use the visionary program to do the file

556
00:23:15,380 --> 00:23:19,040
encryption and then again we're<font color="#E5E5E5"> going to</font>

557
00:23:17,060 --> 00:23:22,520
use the frequency analyzer to do the

558
00:23:19,040 --> 00:23:24,379
frequency analysis so same same

559
00:23:22,520 --> 00:23:26,650
frequency analyzer program run the exact

560
00:23:24,380 --> 00:23:29,180
same way that we did for<font color="#E5E5E5"> the other files</font>

561
00:23:26,650 --> 00:23:32,390
so the<font color="#E5E5E5"> way the visionary file works is</font>

562
00:23:29,180 --> 00:23:35,060
that you<font color="#E5E5E5"> take this key and you line it</font>

563
00:23:32,390 --> 00:23:37,580
up<font color="#E5E5E5"> over top of the first</font><font color="#CCCCCC"> X characters of</font>

564
00:23:35,060 --> 00:23:40,610
<font color="#CCCCCC">plaintext</font><font color="#E5E5E5"> now in the example here the</font>

565
00:23:37,580 --> 00:23:44,149
key length is 5 so<font color="#CCCCCC"> I've broken up the</font>

566
00:23:40,610 --> 00:23:48,139
<font color="#CCCCCC">plaintext in 25 byte blocks</font><font color="#E5E5E5"> okay and</font>

567
00:23:44,150 --> 00:23:51,770
then I shifted the first letter h and

568
00:23:48,140 --> 00:23:54,170
the word hello one space the letter e

569
00:23:51,770 --> 00:23:56,210
and the hello two spaces and so on when

570
00:23:54,170 --> 00:23:57,830
I got<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> oh and hello we're all the</font>

571
00:23:56,210 --> 00:23:59,960
way<font color="#E5E5E5"> up to shifting five spaces so the</font><font color="#CCCCCC"> O</font>

572
00:23:57,830 --> 00:24:01,970
turned into a<font color="#E5E5E5"> tee but then I ran out of</font>

573
00:23:59,960 --> 00:24:03,650
key and I had to start the key over

574
00:24:01,970 --> 00:24:07,040
again so when I go to encrypt the word

575
00:24:03,650 --> 00:24:08,540
world the<font color="#E5E5E5"> W starts back over with a</font><font color="#CCCCCC"> 1</font>

576
00:24:07,040 --> 00:24:12,110
again and it goes all<font color="#E5E5E5"> the way through</font>

577
00:24:08,540 --> 00:24:14,389
five<font color="#E5E5E5"> and not surprisingly we can kind of</font>

578
00:24:12,110 --> 00:24:17,060
think of this as trying to<font color="#E5E5E5"> break five</font>

579
00:24:14,390 --> 00:24:19,130
individual shift ciphers right like if

580
00:24:17,060 --> 00:24:21,169
we think of everything encrypted with

581
00:24:19,130 --> 00:24:23,060
the number one being a group and

582
00:24:21,170 --> 00:24:24,830
everything encrypted with the number<font color="#E5E5E5"> 2's</font>

583
00:24:23,060 --> 00:24:26,240
being a group and so on<font color="#E5E5E5"> and so forth I'm</font>

584
00:24:24,830 --> 00:24:28,040
kind of giving a hint as to where we're

585
00:24:26,240 --> 00:24:30,180
going to end<font color="#CCCCCC"> up</font><font color="#E5E5E5"> going with breaking the</font>

586
00:24:28,040 --> 00:24:33,159
ciphers

587
00:24:30,180 --> 00:24:35,490
there's any questions on how the<font color="#E5E5E5"> cipher</font>

588
00:24:33,160 --> 00:24:42,130
has transformed<font color="#E5E5E5"> the word into the</font>

589
00:24:35,490 --> 00:24:44,230
ciphertext alright so let's compare some

590
00:24:42,130 --> 00:24:48,850
<font color="#CCCCCC">of the statistics that we</font><font color="#E5E5E5"> ran on the</font>

591
00:24:44,230 --> 00:24:54,700
original files and look at how the

592
00:24:48,850 --> 00:24:58,060
cipher change the file so the items in

593
00:24:54,700 --> 00:24:59,740
blue are the items that are<font color="#CCCCCC"> not super</font>

594
00:24:58,060 --> 00:25:01,840
interesting those are the ones where

595
00:24:59,740 --> 00:25:03,100
basically they're the same so doing

596
00:25:01,840 --> 00:25:05,620
differential analysis they're not

597
00:25:03,100 --> 00:25:08,290
interesting statistics the<font color="#E5E5E5"> statistics</font>

598
00:25:05,620 --> 00:25:09,760
that are in red we're different<font color="#E5E5E5"> instance</font>

599
00:25:08,290 --> 00:25:12,940
we're doing a differential analysis here

600
00:25:09,760 --> 00:25:16,510
those are interesting so now the mode

601
00:25:12,940 --> 00:25:18,190
changed from 0<font color="#E5E5E5"> to 2 16 but you would</font>

602
00:25:16,510 --> 00:25:20,800
expect that right because<font color="#E5E5E5"> every time</font>

603
00:25:18,190 --> 00:25:23,830
<font color="#E5E5E5">there was a zero in the file there's</font>

604
00:25:20,800 --> 00:25:25,480
some key bite that's shifting that<font color="#E5E5E5"> 0 to</font>

605
00:25:23,830 --> 00:25:27,639
some other character now we don't<font color="#E5E5E5"> know</font>

606
00:25:25,480 --> 00:25:29,680
<font color="#E5E5E5">if it's shifting 50 spaces or two spaces</font>

607
00:25:27,640 --> 00:25:32,380
because that's determined by the key

608
00:25:29,680 --> 00:25:33,850
right but we do know that the<font color="#CCCCCC"> zero is</font>

609
00:25:32,380 --> 00:25:36,730
getting changed into something else

610
00:25:33,850 --> 00:25:38,800
that's not a zero I suppose unless the

611
00:25:36,730 --> 00:25:40,270
key was to 56 and then it would take the

612
00:25:38,800 --> 00:25:43,450
<font color="#E5E5E5">zero and flip it all the way back</font><font color="#CCCCCC"> around</font>

613
00:25:40,270 --> 00:25:45,430
to the zero but there's not<font color="#E5E5E5"> a very great</font>

614
00:25:43,450 --> 00:25:48,430
chance<font color="#E5E5E5"> of that happening about 1 and 2</font>

615
00:25:45,430 --> 00:25:50,650
56 on average right so the mode count

616
00:25:48,430 --> 00:25:52,240
though is very interesting notice how

617
00:25:50,650 --> 00:25:54,340
there were three hundred ninety four

618
00:25:52,240 --> 00:25:56,730
zeros in the unencrypted file but

619
00:25:54,340 --> 00:26:00,820
there's only two hundred<font color="#E5E5E5"> and three of</font>

620
00:25:56,730 --> 00:26:03,610
the 216 the mode of the mode of the

621
00:26:00,820 --> 00:26:07,330
encrypted file there's only about half

622
00:26:03,610 --> 00:26:09,280
as many of the most<font color="#E5E5E5"> popular character so</font>

623
00:26:07,330 --> 00:26:11,290
what's Visionnaire doing it's flattening

624
00:26:09,280 --> 00:26:13,510
out the distribution<font color="#CCCCCC"> of characters right</font>

625
00:26:11,290 --> 00:26:15,850
it's taking the most the spy Kia STUV

626
00:26:13,510 --> 00:26:19,270
all characters and it's<font color="#CCCCCC"> and it's</font>

627
00:26:15,850 --> 00:26:22,540
spreading<font color="#CCCCCC"> that bad character out over X</font>

628
00:26:19,270 --> 00:26:26,230
number of other characters so if you<font color="#E5E5E5"> had</font>

629
00:26:22,540 --> 00:26:28,960
to<font color="#E5E5E5"> guess how</font><font color="#CCCCCC"> many other characters do</font>

630
00:26:26,230 --> 00:26:31,260
you think that the mode is being spread

631
00:26:28,960 --> 00:26:31,260
out over

632
00:26:35,290 --> 00:26:44,060
it<font color="#CCCCCC"> has</font><font color="#E5E5E5"> anything to do with the length of</font>

633
00:26:37,280 --> 00:26:45,500
the key remember<font color="#CCCCCC"> had a</font><font color="#E5E5E5"> key work so it's</font>

634
00:26:44,060 --> 00:26:47,360
<font color="#E5E5E5">probably going to be about the length of</font>

635
00:26:45,500 --> 00:26:49,190
the key characters that the mode is

636
00:26:47,360 --> 00:26:50,750
getting spread out over in other words

637
00:26:49,190 --> 00:26:53,420
you can think<font color="#E5E5E5"> of the key is setting up a</font>

638
00:26:50,750 --> 00:26:55,370
series<font color="#CCCCCC"> of buckets and it's shifting the</font>

639
00:26:53,420 --> 00:26:56,930
first<font color="#E5E5E5"> zero it comes across you know in</font>

640
00:26:55,370 --> 00:26:59,449
<font color="#E5E5E5">the second zero if assuming they're</font>

641
00:26:56,930 --> 00:27:02,510
consecutive and splitting those up into

642
00:26:59,450 --> 00:27:04,490
<font color="#E5E5E5">little buckets and that's why the mode</font>

643
00:27:02,510 --> 00:27:08,210
is dropping it's just getting smoothed

644
00:27:04,490 --> 00:27:11,540
out over the whole entire ciphertext the

645
00:27:08,210 --> 00:27:13,490
little red arrows indicate that there's

646
00:27:11,540 --> 00:27:16,010
a distance between the mode in the ante

647
00:27:13,490 --> 00:27:18,530
mode so in the unencrypted picture there

648
00:27:16,010 --> 00:27:22,700
was about four hundred zeroes but and

649
00:27:18,530 --> 00:27:26,389
there was about 95 of the least popular

650
00:27:22,700 --> 00:27:30,080
character which was 215 in the encrypted

651
00:27:26,390 --> 00:27:32,750
file there was<font color="#CCCCCC"> 203 of the</font><font color="#E5E5E5"> most popular</font>

652
00:27:30,080 --> 00:27:34,879
character in a<font color="#E5E5E5"> hundred and seventeen</font><font color="#CCCCCC"> of</font>

653
00:27:32,750 --> 00:27:36,620
the least popular character so the mode

654
00:27:34,880 --> 00:27:38,360
in the unique<font color="#E5E5E5"> motor coming together so</font>

655
00:27:36,620 --> 00:27:40,250
not only is Visionnaire flattening out

656
00:27:38,360 --> 00:27:41,780
the distribution it's also raising up

657
00:27:40,250 --> 00:27:44,150
the<font color="#E5E5E5"> least popular characters it's also</font>

658
00:27:41,780 --> 00:27:45,889
it's also putting some other characters

659
00:27:44,150 --> 00:27:48,410
into their buckets and smoothing

660
00:27:45,890 --> 00:27:59,060
everything out and in fact<font color="#E5E5E5"> that's what</font>

661
00:27:48,410 --> 00:28:02,870
we see in the<font color="#E5E5E5"> in the actual histogram so</font>

662
00:27:59,060 --> 00:28:08,120
if<font color="#E5E5E5"> we do clear the screen if we if we</font>

663
00:28:02,870 --> 00:28:12,139
use the frequency analyzer so if you

664
00:28:08,120 --> 00:28:15,260
<font color="#E5E5E5">need helping just do dash</font><font color="#CCCCCC"> H but the idea</font>

665
00:28:12,140 --> 00:28:19,610
is going to be to do the cp/m which<font color="#E5E5E5"> is</font>

666
00:28:15,260 --> 00:28:23,320
count % and histogram and we're going to

667
00:28:19,610 --> 00:28:23,320
<font color="#E5E5E5">do that on the test file</font>

668
00:28:27,500 --> 00:28:31,310
so let's lonely look at the top<font color="#CCCCCC"> 10</font>

669
00:28:29,780 --> 00:28:38,360
because<font color="#E5E5E5"> the screen gets a little busy</font>

670
00:28:31,310 --> 00:28:42,470
pretty quickly so<font color="#CCCCCC"> dashti 10 okay so look</font>

671
00:28:38,360 --> 00:28:44,270
how<font color="#E5E5E5"> spiky it is on the unencrypted file</font>

672
00:28:42,470 --> 00:28:47,570
and then<font color="#E5E5E5"> we'll change over to the</font>

673
00:28:44,270 --> 00:28:51,320
encrypted file and notice how<font color="#E5E5E5"> everything</font>

674
00:28:47,570 --> 00:28:57,050
smooth out that that big tail that was

675
00:28:51,320 --> 00:29:00,350
there earlier got spread out whoops went

676
00:28:57,050 --> 00:29:05,470
too far it got spread out over the other

677
00:29:00,350 --> 00:29:05,469
<font color="#CCCCCC">bytes so everything got a lot smoother</font>

678
00:29:11,050 --> 00:29:15,879
<font color="#CCCCCC">all right so now we'll take</font><font color="#E5E5E5"> a look at</font>

679
00:29:13,220 --> 00:29:20,480
how can we actually break this cipher

680
00:29:15,880 --> 00:29:22,880
well the idea we hinted at earlier we

681
00:29:20,480 --> 00:29:25,220
said that the way the visionary was

682
00:29:22,880 --> 00:29:27,320
working the first character the six

683
00:29:25,220 --> 00:29:29,330
character the<font color="#CCCCCC"> eleventh character and so</font>

684
00:29:27,320 --> 00:29:31,129
on and so on and<font color="#E5E5E5"> so on we're all getting</font>

685
00:29:29,330 --> 00:29:33,080
encrypted with the same key and in the

686
00:29:31,130 --> 00:29:34,700
second character and the seventh

687
00:29:33,080 --> 00:29:36,169
character in the<font color="#CCCCCC"> twelfth character and</font>

688
00:29:34,700 --> 00:29:38,240
so on and<font color="#E5E5E5"> so on and so on we're getting</font>

689
00:29:36,170 --> 00:29:40,850
encrypted with the same key now of

690
00:29:38,240 --> 00:29:43,100
<font color="#E5E5E5">course the reason</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's in blocks of</font>

691
00:29:40,850 --> 00:29:44,240
<font color="#E5E5E5">five in this example is because the key</font>

692
00:29:43,100 --> 00:29:46,490
length in this particular example

693
00:29:44,240 --> 00:29:48,320
happens to be five characters that's

694
00:29:46,490 --> 00:29:52,670
where we run out of key and we have to

695
00:29:48,320 --> 00:29:54,710
start over so there's five buckets if we

696
00:29:52,670 --> 00:29:58,570
rearrange that cipher text we just

697
00:29:54,710 --> 00:30:02,240
looked at let's line up the columns so

698
00:29:58,570 --> 00:30:04,909
the hello world turned into ignite<font color="#E5E5E5"> X</font>

699
00:30:02,240 --> 00:30:07,010
quippy<font color="#CCCCCC"> okay so we're</font><font color="#E5E5E5"> going to take the</font>

700
00:30:04,910 --> 00:30:09,410
eye and<font color="#CCCCCC"> ignite and we're going to line</font>

701
00:30:07,010 --> 00:30:12,350
it up over<font color="#E5E5E5"> top of the X and X quippy</font>

702
00:30:09,410 --> 00:30:14,450
because we know that those two

703
00:30:12,350 --> 00:30:16,490
characters were both encrypted with the

704
00:30:14,450 --> 00:30:18,440
same key in this case we know what the

705
00:30:16,490 --> 00:30:20,120
key is it was the number one right and

706
00:30:18,440 --> 00:30:21,680
we know<font color="#CCCCCC"> that the next two characters</font>

707
00:30:20,120 --> 00:30:24,379
were both encrypted with the number<font color="#E5E5E5"> two</font>

708
00:30:21,680 --> 00:30:26,150
and so on and so forth and that makes<font color="#E5E5E5"> it</font>

709
00:30:24,380 --> 00:30:28,550
possible for us to treat these

710
00:30:26,150 --> 00:30:32,390
characters as being just<font color="#CCCCCC"> a simple little</font>

711
00:30:28,550 --> 00:30:35,030
<font color="#E5E5E5">shift cipher now if we knew the mode the</font>

712
00:30:32,390 --> 00:30:37,280
most<font color="#E5E5E5"> popular character of the cipher</font>

713
00:30:35,030 --> 00:30:39,980
text column it might be reasonable to

714
00:30:37,280 --> 00:30:41,270
assume that's probably the encrypted

715
00:30:39,980 --> 00:30:44,600
version of the mode

716
00:30:41,270 --> 00:30:48,139
from the<font color="#CCCCCC"> plain text 0 it's probably</font><font color="#E5E5E5"> the</font>

717
00:30:44,600 --> 00:30:49,669
encrypted version of<font color="#E5E5E5"> 0 so now this is</font>

718
00:30:48,140 --> 00:30:52,160
turning out to be actually not too

719
00:30:49,670 --> 00:30:55,160
difficult we just need to line up<font color="#E5E5E5"> the</font>

720
00:30:52,160 --> 00:30:57,110
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> into these columns but</font>

721
00:30:55,160 --> 00:30:59,060
there's a major problem we<font color="#CCCCCC"> don't know</font>

722
00:30:57,110 --> 00:31:01,639
how long<font color="#E5E5E5"> the key is because we don't</font>

723
00:30:59,060 --> 00:31:03,620
know what the<font color="#E5E5E5"> password is so we need to</font>

724
00:31:01,640 --> 00:31:07,520
go about figuring out how long the key

725
00:31:03,620 --> 00:31:10,250
is so the plane is<font color="#CCCCCC"> going to be to do</font>

726
00:31:07,520 --> 00:31:11,750
exactly what we talked about which is to

727
00:31:10,250 --> 00:31:12,950
line everything up in the columns and

728
00:31:11,750 --> 00:31:15,050
then just figure out<font color="#E5E5E5"> what the mode is</font>

729
00:31:12,950 --> 00:31:18,410
and<font color="#E5E5E5"> just guess that that's probably most</font>

730
00:31:15,050 --> 00:31:20,570
likely statistically speaking so<font color="#CCCCCC"> 0 care</font>

731
00:31:18,410 --> 00:31:22,700
the character 0 encrypted and we'll just

732
00:31:20,570 --> 00:31:24,530
<font color="#E5E5E5">shift backwards that many bytes and boom</font>

733
00:31:22,700 --> 00:31:26,600
that's the key but we're going to<font color="#CCCCCC"> have</font>

734
00:31:24,530 --> 00:31:29,389
to<font color="#E5E5E5"> figure out how</font><font color="#CCCCCC"> long the key is to do</font>

735
00:31:26,600 --> 00:31:31,850
<font color="#E5E5E5">that so one of the ways we can do that</font>

736
00:31:29,390 --> 00:31:33,890
<font color="#E5E5E5">is through index of coincidence what</font>

737
00:31:31,850 --> 00:31:36,590
we'll do is<font color="#E5E5E5"> again take that entire</font>

738
00:31:33,890 --> 00:31:39,530
ciphertext to make a copy of it put<font color="#E5E5E5"> it</font>

739
00:31:36,590 --> 00:31:42,050
underneath of itself<font color="#E5E5E5"> and then we're</font>

740
00:31:39,530 --> 00:31:45,220
going<font color="#E5E5E5"> to shift it over one spot and</font>

741
00:31:42,050 --> 00:31:48,169
we're going to run the statistics on

742
00:31:45,220 --> 00:31:50,660
<font color="#CCCCCC">that spot and figure out</font><font color="#E5E5E5"> well what's the</font>

743
00:31:48,170 --> 00:31:52,670
chances of getting doubles and then

744
00:31:50,660 --> 00:31:55,820
we'll ship the<font color="#E5E5E5"> ciphertext beneath itself</font>

745
00:31:52,670 --> 00:31:57,440
<font color="#CCCCCC">two spots and again figure out what's</font>

746
00:31:55,820 --> 00:32:00,020
the chances of getting doubles three

747
00:31:57,440 --> 00:32:02,120
spots for spots five spots six spots and

748
00:32:00,020 --> 00:32:04,520
we'll keep<font color="#CCCCCC"> going and we'll keep running</font>

749
00:32:02,120 --> 00:32:06,530
these statistics counting what are the

750
00:32:04,520 --> 00:32:09,410
<font color="#E5E5E5">chances of getting doubles every time we</font>

751
00:32:06,530 --> 00:32:14,000
shift the ciphertext over one<font color="#E5E5E5"> more spot</font>

752
00:32:09,410 --> 00:32:15,470
underneath of itself so there's a fellow

753
00:32:14,000 --> 00:32:18,380
named Friedman who came up with this

754
00:32:15,470 --> 00:32:19,970
idea originally and he not surprisingly

755
00:32:18,380 --> 00:32:23,240
was trying to break<font color="#CCCCCC"> the Visionaire</font>

756
00:32:19,970 --> 00:32:26,390
cipher at this time the visionary<font color="#E5E5E5"> cipher</font>

757
00:32:23,240 --> 00:32:29,350
had been a military-grade cipher for

758
00:32:26,390 --> 00:32:31,700
almost 300 years<font color="#E5E5E5"> so this thing had been</font>

759
00:32:29,350 --> 00:32:33,830
proven itself really well for a long

760
00:32:31,700 --> 00:32:36,320
time again this predates the time of

761
00:32:33,830 --> 00:32:39,889
computers and so the cipher did really

762
00:32:36,320 --> 00:32:43,550
well against manual analysis until this

763
00:32:39,890 --> 00:32:45,710
fellow came along and so he came up<font color="#E5E5E5"> with</font>

764
00:32:43,550 --> 00:32:47,780
<font color="#CCCCCC">this counting formula here which just</font>

765
00:32:45,710 --> 00:32:49,520
what it does is it just counts the

766
00:32:47,780 --> 00:32:51,410
occurrences of doubles and<font color="#E5E5E5"> then divide</font>

767
00:32:49,520 --> 00:32:52,670
by the number of chances that there were

768
00:32:51,410 --> 00:32:53,500
to have doubles in other words the

769
00:32:52,670 --> 00:32:58,720
number of letters

770
00:32:53,500 --> 00:33:01,030
or compared so here's an analogy this is

771
00:32:58,720 --> 00:33:03,550
not the index<font color="#E5E5E5"> of coincidence but this is</font>

772
00:33:01,030 --> 00:33:06,010
an<font color="#CCCCCC"> analogy imagine I took the letters of</font>

773
00:33:03,550 --> 00:33:10,300
<font color="#E5E5E5">the alphabet 26 of them and I put them</font>

774
00:33:06,010 --> 00:33:11,770
<font color="#E5E5E5">into a bag and I said pick a letter the</font>

775
00:33:10,300 --> 00:33:15,460
chances of you getting any particular

776
00:33:11,770 --> 00:33:16,900
letter in that case is about<font color="#CCCCCC"> 1 in 26 we</font>

777
00:33:15,460 --> 00:33:19,930
put the letter back in the bag shake it

778
00:33:16,900 --> 00:33:21,310
up again I say pick another<font color="#E5E5E5"> letter the</font>

779
00:33:19,930 --> 00:33:25,060
changes have you getting<font color="#E5E5E5"> any particular</font>

780
00:33:21,310 --> 00:33:26,919
letter one and 26 so the changes of you

781
00:33:25,060 --> 00:33:31,090
picking<font color="#CCCCCC"> the same letter two times in a</font>

782
00:33:26,920 --> 00:33:33,400
row assuming the contest<font color="#E5E5E5"> is fair is one</font>

783
00:33:31,090 --> 00:33:38,020
<font color="#E5E5E5">and twenty six times 126 and that's</font>

784
00:33:33,400 --> 00:33:41,400
where<font color="#CCCCCC"> you get the one over 676 now let's</font>

785
00:33:38,020 --> 00:33:43,930
think<font color="#E5E5E5"> about if you did the encryption if</font>

786
00:33:41,400 --> 00:33:46,180
you do the encryption and the key length

787
00:33:43,930 --> 00:33:50,650
is 10<font color="#E5E5E5"> the chances of you getting any</font>

788
00:33:46,180 --> 00:33:52,530
particular key bite is<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 10 plus</font>

789
00:33:50,650 --> 00:33:54,670
you've also got<font color="#E5E5E5"> to pick the same letter</font>

790
00:33:52,530 --> 00:33:57,850
so what are<font color="#E5E5E5"> the chances of actually</font>

791
00:33:54,670 --> 00:34:01,450
getting the same letter if you encrypt

792
00:33:57,850 --> 00:34:03,310
it out of the bag two times and you and

793
00:34:01,450 --> 00:34:04,930
you don't know which key bite was used

794
00:34:03,310 --> 00:34:08,080
to encrypt the letter it's one of<font color="#E5E5E5"> 10</font>

795
00:34:04,930 --> 00:34:10,870
possibilities well the chances<font color="#E5E5E5"> are even</font>

796
00:34:08,080 --> 00:34:12,460
<font color="#CCCCCC">10 times worse right so now you've got</font>

797
00:34:10,870 --> 00:34:15,969
you know only<font color="#E5E5E5"> a point zero one five</font>

798
00:34:12,460 --> 00:34:19,870
percent chance however<font color="#E5E5E5"> if we align those</font>

799
00:34:15,969 --> 00:34:25,449
columns just<font color="#E5E5E5"> perfect in our example if</font>

800
00:34:19,870 --> 00:34:27,190
we align the columns at a five spot you

801
00:34:25,449 --> 00:34:28,928
know shifting at five spaces<font color="#E5E5E5"> 10 spaces</font>

802
00:34:27,190 --> 00:34:32,200
15 spaces whatever as long as it's

803
00:34:28,929 --> 00:34:33,909
divisible by<font color="#CCCCCC"> 5 the key is taken out of</font>

804
00:34:32,199 --> 00:34:36,908
the picture it's the same key it

805
00:34:33,909 --> 00:34:38,350
encrypted both letters so the chances of

806
00:34:36,909 --> 00:34:41,169
you getting the same letter twice go

807
00:34:38,350 --> 00:34:42,969
back to being one in 676 yeah I know

808
00:34:41,168 --> 00:34:45,219
it's not great odds<font color="#E5E5E5"> ten times better</font>

809
00:34:42,969 --> 00:34:47,589
though than if you use the encryption so

810
00:34:45,219 --> 00:34:49,750
I<font color="#E5E5E5"> think we're</font><font color="#CCCCCC"> on to something here</font><font color="#E5E5E5"> now</font>

811
00:34:47,590 --> 00:34:51,429
in real life index coincidence does not

812
00:34:49,750 --> 00:34:56,290
work that way I was just drawing an

813
00:34:51,429 --> 00:34:58,210
analogy letters<font color="#E5E5E5"> are not one in 26 chance</font>

814
00:34:56,290 --> 00:34:59,830
the letter<font color="#E5E5E5"> E is much more likely than</font>

815
00:34:58,210 --> 00:35:02,500
the<font color="#CCCCCC"> letters E the letter</font><font color="#E5E5E5"> T in</font><font color="#CCCCCC"> the letter</font>

816
00:34:59,830 --> 00:35:05,170
A or much<font color="#CCCCCC"> more likely than the letter o</font>

817
00:35:02,500 --> 00:35:07,260
and P ok and this table<font color="#E5E5E5"> actually shows</font>

818
00:35:05,170 --> 00:35:09,180
the frequencies of the letters and

819
00:35:07,260 --> 00:35:11,340
this is the formula for the probability

820
00:35:09,180 --> 00:35:13,980
of actually getting a particular key

821
00:35:11,340 --> 00:35:15,510
bite because<font color="#E5E5E5"> what we didn't take into</font>

822
00:35:13,980 --> 00:35:17,700
account before is there's more<font color="#E5E5E5"> than one</font>

823
00:35:15,510 --> 00:35:21,210
way to get the same ciphertext after all

824
00:35:17,700 --> 00:35:23,250
the letter e shifted once is f but so is

825
00:35:21,210 --> 00:35:25,740
the letter D shifted twice and the

826
00:35:23,250 --> 00:35:27,420
letter C sifted three times so that so

827
00:35:25,740 --> 00:35:28,910
there's<font color="#CCCCCC"> actually a lot of different ways</font>

828
00:35:27,420 --> 00:35:31,080
to<font color="#CCCCCC"> end up getting the</font><font color="#E5E5E5"> same ciphertext</font>

829
00:35:28,910 --> 00:35:34,470
but the odds are still going<font color="#E5E5E5"> to be in</font>

830
00:35:31,080 --> 00:35:37,470
our favor so let's say<font color="#CCCCCC"> that you take</font>

831
00:35:34,470 --> 00:35:40,770
these frequencies of these<font color="#E5E5E5"> English</font>

832
00:35:37,470 --> 00:35:44,879
<font color="#E5E5E5">letters okay and let's presume that it's</font>

833
00:35:40,770 --> 00:35:46,980
plain text and you multiply up all those

834
00:35:44,880 --> 00:35:48,300
frequencies so you got to take the

835
00:35:46,980 --> 00:35:52,740
chance of<font color="#CCCCCC"> getting a letter</font><font color="#E5E5E5"> a in the</font>

836
00:35:48,300 --> 00:35:54,540
first<font color="#E5E5E5"> place times the number of days</font>

837
00:35:52,740 --> 00:35:56,520
<font color="#CCCCCC">that are actually in the batch and then</font>

838
00:35:54,540 --> 00:35:58,050
the chance<font color="#E5E5E5"> of</font><font color="#CCCCCC"> getting a letter B times</font>

839
00:35:56,520 --> 00:36:00,180
the number of<font color="#E5E5E5"> these and so on and so</font>

840
00:35:58,050 --> 00:36:02,100
forth<font color="#E5E5E5"> and what you'll end up finding is</font>

841
00:36:00,180 --> 00:36:03,870
that when you multiply all that out it

842
00:36:02,100 --> 00:36:06,870
comes out to be<font color="#E5E5E5"> point</font><font color="#CCCCCC"> zero six five so</font>

843
00:36:03,870 --> 00:36:08,970
remember point zero six five now if you

844
00:36:06,870 --> 00:36:11,160
go back to<font color="#CCCCCC"> our random chance example in</font>

845
00:36:08,970 --> 00:36:13,109
other words remember<font color="#CCCCCC"> how visionnaire had</font>

846
00:36:11,160 --> 00:36:16,379
a tendency to kind of smooth everything

847
00:36:13,110 --> 00:36:18,630
out the mode got spread out so in

848
00:36:16,380 --> 00:36:21,000
<font color="#CCCCCC">English the mode is the letter e usually</font>

849
00:36:18,630 --> 00:36:22,920
right I mean typically occurs about<font color="#CCCCCC"> 12</font>

850
00:36:21,000 --> 00:36:25,980
point what five percent of the time and

851
00:36:22,920 --> 00:36:29,640
the next<font color="#E5E5E5"> best letter is T around ten</font>

852
00:36:25,980 --> 00:36:32,280
percent so so the<font color="#E5E5E5"> Visionaire though</font>

853
00:36:29,640 --> 00:36:34,319
smooths out all those bumps in the road

854
00:36:32,280 --> 00:36:36,360
right so if you take something in it and

855
00:36:34,320 --> 00:36:38,100
it's perfectly encrypted we'll<font color="#E5E5E5"> just go</font>

856
00:36:36,360 --> 00:36:41,190
back to assuming<font color="#E5E5E5"> you've got exactly</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 1</font>

857
00:36:38,100 --> 00:36:43,560
and<font color="#CCCCCC"> 26 chance of pulling that</font><font color="#E5E5E5"> ciphertext</font>

858
00:36:41,190 --> 00:36:47,070
out of the bag and so you take one in 20

859
00:36:43,560 --> 00:36:49,110
26 x 1 26 and do that 26 times talk for

860
00:36:47,070 --> 00:36:52,290
26 letters and univ getting point zero

861
00:36:49,110 --> 00:36:54,210
three eight now point zero<font color="#CCCCCC"> six five is</font>

862
00:36:52,290 --> 00:36:56,930
not super<font color="#E5E5E5"> different from point zero</font>

863
00:36:54,210 --> 00:37:00,000
three eight like our<font color="#CCCCCC"> 1 over you know</font>

864
00:36:56,930 --> 00:37:05,370
<font color="#E5E5E5">6700 was different than our</font><font color="#CCCCCC"> one over 676</font>

865
00:37:00,000 --> 00:37:06,720
but it's still about twice as good so we

866
00:37:05,370 --> 00:37:09,779
can still<font color="#CCCCCC"> use the index of</font><font color="#E5E5E5"> coincidence</font>

867
00:37:06,720 --> 00:37:11,669
and here's an example<font color="#E5E5E5"> I just threw a</font>

868
00:37:09,780 --> 00:37:15,900
very small alphabet up onto the screen

869
00:37:11,670 --> 00:37:17,520
and did some random sampling and in my

870
00:37:15,900 --> 00:37:21,090
little alphabet here there's only three

871
00:37:17,520 --> 00:37:23,759
letters a B and C very trivial example

872
00:37:21,090 --> 00:37:25,710
in the<font color="#E5E5E5"> first instance there's two</font>

873
00:37:23,760 --> 00:37:27,420
doubles there's the letter A and letter

874
00:37:25,710 --> 00:37:29,550
C the second instance<font color="#E5E5E5"> has three doubles</font>

875
00:37:27,420 --> 00:37:31,830
and the third instance has one double

876
00:37:29,550 --> 00:37:34,260
when we did now it's the exact same

877
00:37:31,830 --> 00:37:39,540
ciphertext it's just shifted over one

878
00:37:34,260 --> 00:37:41,370
spot two spots and three spots so in the

879
00:37:39,540 --> 00:37:45,300
<font color="#E5E5E5">first instance the two doubles we had a</font>

880
00:37:41,370 --> 00:37:49,080
point six the middle is 10 and the end

881
00:37:45,300 --> 00:37:51,720
is point 375 so if you<font color="#E5E5E5"> had to</font><font color="#CCCCCC"> guess what</font>

882
00:37:49,080 --> 00:37:55,830
would you assume the length of the key

883
00:37:51,720 --> 00:38:01,470
was in this particular case and this is

884
00:37:55,830 --> 00:38:02,730
all you know does it make sense that it

885
00:38:01,470 --> 00:38:05,879
would<font color="#E5E5E5"> be the middle one because</font><font color="#CCCCCC"> you had</font>

886
00:38:02,730 --> 00:38:07,770
<font color="#CCCCCC">the most occurrences of doubles so</font>

887
00:38:05,880 --> 00:38:11,430
statistically there's this better chance

888
00:38:07,770 --> 00:38:13,020
of<font color="#CCCCCC"> getting two letters to ciphertext</font>

889
00:38:11,430 --> 00:38:18,870
letters to turn out<font color="#E5E5E5"> to be exactly the</font>

890
00:38:13,020 --> 00:38:20,910
same fortunately the<font color="#E5E5E5"> Python program the</font>

891
00:38:18,870 --> 00:38:22,259
freaked-out ha can do this<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us so we</font>

892
00:38:20,910 --> 00:38:23,609
don't<font color="#E5E5E5"> have to sit here and count the</font>

893
00:38:22,260 --> 00:38:25,650
number of doubles in this huge

894
00:38:23,610 --> 00:38:30,720
ciphertext that's got<font color="#E5E5E5"> something like a</font>

895
00:38:25,650 --> 00:38:35,730
million characters in it and so let's

896
00:38:30,720 --> 00:38:39,089
take<font color="#E5E5E5"> a look at the encrypted file we're</font>

897
00:38:35,730 --> 00:38:41,640
going<font color="#E5E5E5"> to bring up that a program again</font>

898
00:38:39,090 --> 00:38:48,120
and<font color="#E5E5E5"> I'm going to change it to doing the</font>

899
00:38:41,640 --> 00:38:53,580
IOC or index of coincidence all right

900
00:38:48,120 --> 00:38:55,799
and it runs first 49 shifts okay so

901
00:38:53,580 --> 00:39:01,319
check out the histogram when we get to

902
00:38:55,800 --> 00:39:05,220
eight shifts in 16 shifts and 24 shifts

903
00:39:01,320 --> 00:39:06,900
while it's not<font color="#CCCCCC"> 10 times as likely that</font>

904
00:39:05,220 --> 00:39:09,359
we're going<font color="#E5E5E5"> to have that character end</font>

905
00:39:06,900 --> 00:39:11,790
up being doubles it does seem to be a

906
00:39:09,360 --> 00:39:13,740
lot more likely doesn't it and it<font color="#E5E5E5"> can't</font>

907
00:39:11,790 --> 00:39:17,580
<font color="#CCCCCC">be a coincidence</font><font color="#E5E5E5"> that it happens on the</font>

908
00:39:13,740 --> 00:39:20,720
eight 8 16 24 32 and so on chances are

909
00:39:17,580 --> 00:39:20,720
that<font color="#E5E5E5"> Keys eight characters long</font>

910
00:39:27,090 --> 00:39:31,180
so now<font color="#E5E5E5"> that we know</font><font color="#CCCCCC"> that the key is</font>

911
00:39:29,050 --> 00:39:33,940
probably eight characters long we can go

912
00:39:31,180 --> 00:39:35,259
<font color="#E5E5E5">back to the ciphertext the first couple</font>

913
00:39:33,940 --> 00:39:37,630
of rows of which is shown up here<font color="#E5E5E5"> on the</font>

914
00:39:35,260 --> 00:39:40,060
slide and we can break it<font color="#CCCCCC"> up into blocks</font>

915
00:39:37,630 --> 00:39:41,620
of eight and<font color="#CCCCCC"> we're going to</font><font color="#E5E5E5"> take those</font>

916
00:39:40,060 --> 00:39:44,200
<font color="#E5E5E5">blocks of eight and line them up</font>

917
00:39:41,620 --> 00:39:47,770
underneath one another we're<font color="#E5E5E5"> going to</font>

918
00:39:44,200 --> 00:39:49,870
end up with<font color="#CCCCCC"> very tall columns the first</font>

919
00:39:47,770 --> 00:39:51,940
column all encrypted with the same key

920
00:39:49,870 --> 00:39:53,230
of the password<font color="#E5E5E5"> the second column all</font>

921
00:39:51,940 --> 00:39:56,200
encrypted with the same key of the

922
00:39:53,230 --> 00:39:58,720
password and so on<font color="#E5E5E5"> and so forth so all</font>

923
00:39:56,200 --> 00:40:03,640
we<font color="#CCCCCC"> need to do now is solve eight shift</font>

924
00:39:58,720 --> 00:40:05,319
cipher problems put it all<font color="#E5E5E5"> together and</font>

925
00:40:03,640 --> 00:40:10,000
we should be<font color="#E5E5E5"> able to recover the</font>

926
00:40:05,320 --> 00:40:13,870
<font color="#E5E5E5">password so the way that we're going to</font>

927
00:40:10,000 --> 00:40:18,630
do<font color="#E5E5E5"> that is is we're going to assume that</font>

928
00:40:13,870 --> 00:40:21,609
<font color="#E5E5E5">the mode of the column of</font><font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> is</font>

929
00:40:18,630 --> 00:40:23,830
the number<font color="#E5E5E5"> zero encrypted because my</font>

930
00:40:21,610 --> 00:40:26,760
zero was the mode of the plaintext in

931
00:40:23,830 --> 00:40:29,410
cat pictures that were encrypted right

932
00:40:26,760 --> 00:40:32,290
so let's<font color="#E5E5E5"> just say for example like we</font>

933
00:40:29,410 --> 00:40:35,129
can see on screen here<font color="#CCCCCC"> byte 17 happens</font>

934
00:40:32,290 --> 00:40:38,560
to be the mode of the very first column

935
00:40:35,130 --> 00:40:41,170
let's assume that<font color="#E5E5E5"> bite 17 is zero</font>

936
00:40:38,560 --> 00:40:45,100
encrypted that means that<font color="#CCCCCC"> the key used</font>

937
00:40:41,170 --> 00:40:47,830
to encrypt the zero must have been<font color="#E5E5E5"> 17</font>

938
00:40:45,100 --> 00:40:50,069
because it was shifted 17 spaces the

939
00:40:47,830 --> 00:40:55,270
second column mode is actually only 14

940
00:40:50,070 --> 00:40:59,260
so chances are<font color="#CCCCCC"> Mike 14 is the key</font>

941
00:40:55,270 --> 00:41:01,360
because 14-0 is 14 and so on<font color="#E5E5E5"> and so</font>

942
00:40:59,260 --> 00:41:05,400
forth and we'll do that for all eight

943
00:41:01,360 --> 00:41:05,400
columns and see what we end up getting

944
00:41:10,260 --> 00:41:16,990
<font color="#E5E5E5">alright so from our previous example I'm</font>

945
00:41:13,750 --> 00:41:19,960
going to change<font color="#CCCCCC"> T 2 1 i'm only</font>

946
00:41:16,990 --> 00:41:21,279
interested in the<font color="#E5E5E5"> most popular by i</font>

947
00:41:19,960 --> 00:41:24,250
don't really need to look at the top<font color="#E5E5E5"> 10</font>

948
00:41:21,280 --> 00:41:26,890
bytes anymore<font color="#E5E5E5"> i'm going to add the</font><font color="#CCCCCC"> g4</font>

949
00:41:24,250 --> 00:41:28,330
<font color="#E5E5E5">guests and i'm going to add the co l or</font>

950
00:41:26,890 --> 00:41:30,129
columns and<font color="#CCCCCC"> i'm going to put an eight</font>

951
00:41:28,330 --> 00:41:32,080
and<font color="#E5E5E5"> i have to put</font><font color="#CCCCCC"> an 8 because</font><font color="#E5E5E5"> the ioc</font>

952
00:41:30,130 --> 00:41:35,530
exercise told us that the password<font color="#E5E5E5"> was</font>

953
00:41:32,080 --> 00:41:38,110
eight characters long<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> and</font>

954
00:41:35,530 --> 00:41:43,420
<font color="#E5E5E5">let's look at the results let's start</font>

955
00:41:38,110 --> 00:41:50,280
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> first column okay so bite 17 is</font>

956
00:41:43,420 --> 00:41:52,930
the<font color="#E5E5E5"> mode r is the 17th character in the</font>

957
00:41:50,280 --> 00:41:55,510
ascii character range if you start from

958
00:41:52,930 --> 00:41:58,180
counting from the letter A anyway<font color="#E5E5E5"> okay</font>

959
00:41:55,510 --> 00:41:59,410
an uppercase R of course is the 17th

960
00:41:58,180 --> 00:42:03,879
character if you start<font color="#E5E5E5"> counting from the</font>

961
00:41:59,410 --> 00:42:05,410
capital letter A and number wise that's

962
00:42:03,880 --> 00:42:09,580
the letter A if you start<font color="#CCCCCC"> counting from</font>

963
00:42:05,410 --> 00:42:12,759
the number<font color="#CCCCCC"> zero do we know which one is</font>

964
00:42:09,580 --> 00:42:15,549
the right letter no we just have a

965
00:42:12,760 --> 00:42:17,980
really strong suspicion it's probably

966
00:42:15,550 --> 00:42:20,440
<font color="#CCCCCC">the letter R is it a capital R or</font>

967
00:42:17,980 --> 00:42:22,840
smaller I don't know<font color="#E5E5E5"> but it's probably</font>

968
00:42:20,440 --> 00:42:26,080
the letter R the second letter is

969
00:42:22,840 --> 00:42:28,540
probably the letter O is a<font color="#CCCCCC"> capital or</font>

970
00:42:26,080 --> 00:42:31,480
small I don't really know it could be a

971
00:42:28,540 --> 00:42:33,310
greater than symbol but probably not

972
00:42:31,480 --> 00:42:36,220
right we're talking about humans here ok

973
00:42:33,310 --> 00:42:39,160
so the third letter is probably see the

974
00:42:36,220 --> 00:42:42,879
fourth letter is probably k the fifth

975
00:42:39,160 --> 00:42:45,118
letter is probably why and then the<font color="#CCCCCC"> last</font>

976
00:42:42,880 --> 00:42:48,040
three letters are probably three to nine

977
00:42:45,119 --> 00:42:50,050
so now we've actually reduced the size

978
00:42:48,040 --> 00:42:51,340
of this problem quite a bit the next

979
00:42:50,050 --> 00:42:54,670
thing we<font color="#E5E5E5"> need to do is we need to</font>

980
00:42:51,340 --> 00:42:56,350
iterate through the possibilities of the

981
00:42:54,670 --> 00:43:00,340
upper cases in the lower cases and

982
00:42:56,350 --> 00:43:02,368
there's some perl scripts and<font color="#E5E5E5"> kali that</font>

983
00:43:00,340 --> 00:43:04,930
can do<font color="#CCCCCC"> that for you pretty easily or</font>

984
00:43:02,369 --> 00:43:06,670
<font color="#E5E5E5">even some that</font><font color="#CCCCCC"> i think I'm with John the</font>

985
00:43:04,930 --> 00:43:10,060
Ripper that can do<font color="#E5E5E5"> all these iterations</font>

986
00:43:06,670 --> 00:43:12,490
for you and then we<font color="#E5E5E5"> can try those you</font>

987
00:43:10,060 --> 00:43:14,680
know 200 300 400 passwords on the file

988
00:43:12,490 --> 00:43:16,359
<font color="#E5E5E5">and see which one works but you know</font>

989
00:43:14,680 --> 00:43:19,419
<font color="#CCCCCC">what do you really</font><font color="#E5E5E5"> need to try every</font>

990
00:43:16,359 --> 00:43:21,400
possibility maybe chances are though if

991
00:43:19,420 --> 00:43:24,040
a<font color="#E5E5E5"> person picked this password it's</font>

992
00:43:21,400 --> 00:43:28,150
probably capital ROC ky3

993
00:43:24,040 --> 00:43:30,759
or just<font color="#E5E5E5"> roc ky3 29 right so just give</font>

994
00:43:28,150 --> 00:43:34,630
those to a shot and as it turns out the

995
00:43:30,760 --> 00:43:36,550
password really is roc KY 329 so we were

996
00:43:34,630 --> 00:43:45,760
able<font color="#CCCCCC"> to end up figuring out what the</font>

997
00:43:36,550 --> 00:43:48,220
password was so here we see the<font color="#E5E5E5"> ROC k</font>

998
00:43:45,760 --> 00:43:50,170
starting to show up because we're<font color="#E5E5E5"> going</font>

999
00:43:48,220 --> 00:43:52,689
<font color="#E5E5E5">to figure out what the mode is and then</font>

1000
00:43:50,170 --> 00:43:55,750
shift down that many bytes and this is

1001
00:43:52,690 --> 00:43:57,850
the<font color="#E5E5E5"> Python that we just ran</font><font color="#CCCCCC"> to do that</font>

1002
00:43:55,750 --> 00:44:01,870
analysis and we end up getting back the

1003
00:43:57,850 --> 00:44:03,549
password rocky 329 not case sensitive at

1004
00:44:01,870 --> 00:44:06,190
all as it turns out in this particular

1005
00:44:03,550 --> 00:44:08,680
exercise the<font color="#E5E5E5"> password that</font><font color="#CCCCCC"> they used in</font>

1006
00:44:06,190 --> 00:44:13,150
the<font color="#E5E5E5"> real life file was 32 characters</font>

1007
00:44:08,680 --> 00:44:14,620
long and it didn't matter because the

1008
00:44:13,150 --> 00:44:18,460
length of the password doesn't make the

1009
00:44:14,620 --> 00:44:21,040
problem<font color="#CCCCCC"> any more</font><font color="#E5E5E5"> difficult the IOC told</font>

1010
00:44:18,460 --> 00:44:22,330
us in one command that the password was

1011
00:44:21,040 --> 00:44:24,340
<font color="#E5E5E5">eight characters long we didn't have</font><font color="#CCCCCC"> to</font>

1012
00:44:22,330 --> 00:44:27,040
run<font color="#E5E5E5"> eight commands or 32 commands right</font>

1013
00:44:24,340 --> 00:44:29,590
one command it's the problem really is

1014
00:44:27,040 --> 00:44:31,810
linear and that's why the visionary

1015
00:44:29,590 --> 00:44:34,630
<font color="#CCCCCC">cipher</font><font color="#E5E5E5"> falls somewhat relatively easily</font>

1016
00:44:31,810 --> 00:44:37,029
because it is a it is doing a linear

1017
00:44:34,630 --> 00:44:39,460
shift on the characters it's complicated

1018
00:44:37,030 --> 00:44:40,720
shift kind<font color="#E5E5E5"> of like the a fine cipher is</font>

1019
00:44:39,460 --> 00:44:42,970
<font color="#E5E5E5">a little more complicated than shift</font>

1020
00:44:40,720 --> 00:44:45,730
cipher but it is<font color="#CCCCCC"> linear so we can get it</font>

1021
00:44:42,970 --> 00:44:49,020
in linear time so how can<font color="#E5E5E5"> we make this</font>

1022
00:44:45,730 --> 00:44:51,700
better well you know<font color="#E5E5E5"> what if we actually</font>

1023
00:44:49,020 --> 00:44:54,009
<font color="#E5E5E5">wanted to just work on JPEGs this is</font>

1024
00:44:51,700 --> 00:44:56,169
pretty<font color="#E5E5E5"> good the way it is but what if</font><font color="#CCCCCC"> we</font>

1025
00:44:54,010 --> 00:45:00,160
wanted to work on other kinds<font color="#E5E5E5"> of files p</font>

1026
00:44:56,170 --> 00:45:02,140
<font color="#CCCCCC">+ GS or texts emails things like that</font>

1027
00:45:00,160 --> 00:45:03,460
and what we would need to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> probably is</font>

1028
00:45:02,140 --> 00:45:08,290
add what's called curve fitting

1029
00:45:03,460 --> 00:45:10,150
techniques the idea being if<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to</font>

1030
00:45:08,290 --> 00:45:12,100
make sure that<font color="#CCCCCC"> I've decrypted something</font>

1031
00:45:10,150 --> 00:45:13,720
that's English and I want to<font color="#CCCCCC"> test and</font>

1032
00:45:12,100 --> 00:45:16,870
see if<font color="#E5E5E5"> it actually kind of looks like</font>

1033
00:45:13,720 --> 00:45:18,459
English the e ought to show up<font color="#E5E5E5"> 12 and a</font>

1034
00:45:16,870 --> 00:45:20,500
half<font color="#E5E5E5"> percent of time the T ought to show</font>

1035
00:45:18,460 --> 00:45:23,170
up about ten percent in the a about 9%

1036
00:45:20,500 --> 00:45:26,230
and so on and<font color="#E5E5E5"> so forth right imagine</font>

1037
00:45:23,170 --> 00:45:27,850
that<font color="#E5E5E5"> being a curve so if we do a</font>

1038
00:45:26,230 --> 00:45:32,140
frequency analysis on some stuff<font color="#E5E5E5"> that</font>

1039
00:45:27,850 --> 00:45:35,230
<font color="#E5E5E5">we've decrypted with capital R 0 ck y 3</font>

1040
00:45:32,140 --> 00:45:37,930
<font color="#E5E5E5">29 which is the wrong password the curve</font>

1041
00:45:35,230 --> 00:45:41,020
wouldn't fit but if<font color="#E5E5E5"> we you</font>

1042
00:45:37,930 --> 00:45:44,379
the right password<font color="#E5E5E5"> roc KY 329 the curve</font>

1043
00:45:41,020 --> 00:45:46,000
should fit pretty well so curve fitting

1044
00:45:44,380 --> 00:45:49,869
techniques will definitely improve freak

1045
00:45:46,000 --> 00:45:51,190
peppa and there's some<font color="#E5E5E5"> other tricks we</font>

1046
00:45:49,869 --> 00:45:52,930
would need to<font color="#E5E5E5"> do if we found out</font><font color="#CCCCCC"> that</font>

1047
00:45:51,190 --> 00:45:55,990
our emissary was encrypting like<font color="#CCCCCC"> I said</font>

1048
00:45:52,930 --> 00:45:58,210
different kinds of files pngs or gifts

1049
00:45:55,990 --> 00:46:04,740
or whatever file type it was like a

1050
00:45:58,210 --> 00:46:04,740
spreadsheet<font color="#CCCCCC"> all right so any questions</font>

1051
00:46:05,220 --> 00:46:11,078
any questions at all about cryptography

1052
00:46:07,630 --> 00:46:13,720
or just pin testing in general or fun

1053
00:46:11,079 --> 00:46:15,190
little problems like this<font color="#E5E5E5"> all right I'll</font>

1054
00:46:13,720 --> 00:46:20,140
throw some references up here as well

1055
00:46:15,190 --> 00:46:25,059
and the book that I used<font color="#E5E5E5"> to figure out</font>

1056
00:46:20,140 --> 00:46:26,680
<font color="#CCCCCC">the math and this exercise is the number</font>

1057
00:46:25,059 --> 00:46:28,270
<font color="#CCCCCC">6 there the cryptography theory and</font>

1058
00:46:26,680 --> 00:46:31,690
practice so to give credit<font color="#E5E5E5"> to that</font>

1059
00:46:28,270 --> 00:46:34,180
fellow Stinson for helping me out and a

1060
00:46:31,690 --> 00:46:35,980
really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> book for just kind of</font>

1061
00:46:34,180 --> 00:46:41,950
learning<font color="#E5E5E5"> about cryptographic algorithms</font>

1062
00:46:35,980 --> 00:46:45,339
just kind of in general is this this one

1063
00:46:41,950 --> 00:46:47,980
here oh sorry<font color="#E5E5E5"> I didn't put it in here</font>

1064
00:46:45,339 --> 00:46:49,930
and it's about par paa are I apologize

1065
00:46:47,980 --> 00:46:52,780
<font color="#CCCCCC">for</font><font color="#E5E5E5"> not putting it on</font><font color="#CCCCCC"> a slot</font><font color="#E5E5E5"> Christoph</font>

1066
00:46:49,930 --> 00:46:55,089
par I guess<font color="#E5E5E5"> that's how you say it I</font>

1067
00:46:52,780 --> 00:46:56,770
really liked his book it was<font color="#E5E5E5"> a lot it</font>

1068
00:46:55,089 --> 00:46:58,750
was<font color="#E5E5E5"> really easy to read and really easy</font>

1069
00:46:56,770 --> 00:47:01,720
to understand for somebody who's not a

1070
00:46:58,750 --> 00:47:05,920
math major like me so that's also<font color="#E5E5E5"> a</font>

1071
00:47:01,720 --> 00:47:07,509
really good one all right i'll leave my

1072
00:47:05,920 --> 00:47:09,490
contact information up here for a few

1073
00:47:07,510 --> 00:47:11,640
minutes and thanks<font color="#CCCCCC"> very much for</font><font color="#E5E5E5"> having</font>

1074
00:47:09,490 --> 00:47:11,640
me today

1075
00:47:12,570 --> 00:47:16,439
[Applause]

