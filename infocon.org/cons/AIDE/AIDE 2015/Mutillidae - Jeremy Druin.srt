1
00:00:00,060 --> 00:00:07,060
up up

2
00:00:14,500 --> 00:00:17,920
20 slide transition ur

3
00:00:17,920 --> 00:00:21,529
other alright a lower-body

4
00:00:21,529 --> 00:00:25,779
I'm German Jounin and followed by myself

5
00:00:25,779 --> 00:00:30,220
I work for a a local large
transportation logistics company

6
00:00:30,220 --> 00:00:33,430
biggest in the world doing pen testing

7
00:00:33,430 --> 00:00:36,890
lebanon ability assessment and other
types a security assessment

8
00:00:36,890 --> 00:00:41,850
and also an app by copious amounts of
spare time I work on a project called me

9
00:00:41,850 --> 00:00:42,410
tel de

10
00:00:42,410 --> 00:00:45,629
rejoiced are by Adrian and

11
00:00:45,629 --> 00:00:49,969
keep that active on SourceForge do some
stuff with the low cost us a

12
00:00:49,969 --> 00:00:53,300
and also run the weapon AZT you teach an

13
00:00:53,300 --> 00:00:57,239
YouTube channel so today is going to
talk about

14
00:00:57,239 --> 00:01:00,480
path relative Starshine injection as a

15
00:01:00,480 --> 00:01:04,339
typeof a cross-eyed scripting
vulnerability so

16
00:01:04,339 --> 00:01:07,869
star with brief overview of cross site
scripting

17
00:01:07,869 --> 00:01:10,869
and this is a type attack

18
00:01:10,869 --> 00:01:14,119
that occurs on the client side i've a
web application

19
00:01:14,119 --> 00:01:18,360
so in other words it's running in the
user's browser and a basic laid

20
00:01:18,360 --> 00:01:22,360
depends on the application

21
00:01:22,360 --> 00:01:27,380
not encoding output so that the Browser
has a hard time telling the difference

22
00:01:27,380 --> 00:01:30,520
between data that was sent into the
application

23
00:01:30,520 --> 00:01:37,280
and scripts that were injected into the
application usually

24
00:01:37,280 --> 00:01:40,320
if you take a script from one website

25
00:01:40,320 --> 00:01:45,060
or one source even and you tried to run
in a separate website

26
00:01:45,060 --> 00:01:48,250
there some protections that are built
into the browser itself

27
00:01:48,250 --> 00:01:51,869
that well keep the script from
interacting

28
00:01:51,869 --> 00:01:56,380
with the page also protects the cookies
in

29
00:01:56,380 --> 00:01:59,570
some other resources on the page from

30
00:01:59,570 --> 00:02:06,570
being changed by the JavaScript

31
00:02:07,920 --> 00:02:09,179
so an example here

32
00:02:09,179 --> 00:02:12,900
is we have Google dot com plus home

33
00:02:12,900 --> 00:02:17,010
not in it or not a real page but
certainly a real site and if you look at

34
00:02:17,010 --> 00:02:18,810
the script at the bottom of the screen

35
00:02:18,810 --> 00:02:21,840
it's from the domain oh yeah I dot com

36
00:02:21,840 --> 00:02:25,430
so if you were to include the other dot
com script

37
00:02:25,430 --> 00:02:29,959
into the Google Page that Yahoo to
conscript would not have access

38
00:02:29,959 --> 00:02:33,720
to change to go page and also I would be
restricted from interacting with the

39
00:02:33,720 --> 00:02:35,380
cookies and the other resources

40
00:02:35,380 --> 00:02:42,380
that are associated with Google's page
so the same origin policy works on

41
00:02:42,569 --> 00:02:46,340
and theory three parts one is the scheme

42
00:02:46,340 --> 00:02:49,830
so HTTP or HTTPS then the domain name

43
00:02:49,830 --> 00:02:54,319
and then finally the poor number that
the web application is running on

44
00:02:54,319 --> 00:02:58,930
essay this in theory because some
browsers

45
00:02:58,930 --> 00:03:02,989
tend to ignore the port and so you
really end up

46
00:03:02,989 --> 00:03:06,670
haven't same margin based on the scheme
and the domain

47
00:03:06,670 --> 00:03:11,260
and a course sensors only two schemes
and a lot of pages will offer an exact

48
00:03:11,260 --> 00:03:11,700
same

49
00:03:11,700 --> 00:03:16,190
resources in both HTTP and HTTPS what
times are really comes down to the

50
00:03:16,190 --> 00:03:16,930
domain name

51
00:03:16,930 --> 00:03:20,720
an example here I

52
00:03:20,720 --> 00:03:24,170
this script would only work

53
00:03:24,170 --> 00:03:27,769
on the fifth line down the one that's
bolded

54
00:03:27,769 --> 00:03:31,269
because that's the only one that has the
scheme

55
00:03:31,269 --> 00:03:34,430
the domain and the port all matching

56
00:03:34,430 --> 00:03:37,500
a port some clout as port 80 because
it's HTTP

57
00:03:37,500 --> 00:03:43,040
in the courts not otherwise explicitly
listed

58
00:03:43,040 --> 00:03:45,980
so with cross site scripting the idea is

59
00:03:45,980 --> 00:03:49,830
to inject a script into the application

60
00:03:49,830 --> 00:03:53,030
usually via some sort of input parameter

61
00:03:53,030 --> 00:03:58,850
it could also be data that's sitting in
a database anyway for the applications

62
00:03:58,850 --> 00:03:59,660
the selected

63
00:03:59,660 --> 00:04:03,280
or perhaps in a file anyway for the
application to read it

64
00:04:03,280 --> 00:04:06,300
but in all cases are trying to hang

65
00:04:06,300 --> 00:04:10,240
get source code to be incorporated

66
00:04:10,240 --> 00:04:13,550
into the web page that application
produces

67
00:04:13,550 --> 00:04:17,000
so the application itself will be
serving

68
00:04:17,000 --> 00:04:22,600
this moshe script sewing see in this
diagram

69
00:04:22,600 --> 00:04:26,870
that a script has been injected via

70
00:04:26,870 --> 00:04:30,370
the message parameter that is

71
00:04:30,370 --> 00:04:33,560
part iv: this a URL

72
00:04:33,560 --> 00:04:37,340
and so the attacker in this case says

73
00:04:37,340 --> 00:04:40,980
injected some mystical evil method and

74
00:04:40,980 --> 00:04:46,110
put that inside script tags this
parameter travels all the way to the

75
00:04:46,110 --> 00:04:46,770
server

76
00:04:46,770 --> 00:04:50,020
and then the servers source code

77
00:04:50,020 --> 00:04:53,600
reads the value of that parameter and
then

78
00:04:53,600 --> 00:04:57,060
uses that to create an h1 tag

79
00:04:57,060 --> 00:05:01,220
and says hello and then the value of
whatever the parameter is

80
00:05:01,220 --> 00:05:04,490
so in this case it looks like

81
00:05:04,490 --> 00:05:08,430
they're asking the user type and maybe
their name and then

82
00:05:08,430 --> 00:05:11,480
the application when a corporator name
into the response

83
00:05:11,480 --> 00:05:16,790
and say hello frederick for that was so
the

84
00:05:16,790 --> 00:05:20,690
the script is going to travel all the
way back to the browser

85
00:05:20,690 --> 00:05:25,180
and when I finally reaches the browser
the browser understands

86
00:05:25,180 --> 00:05:28,300
JavaScript and can parse it an executed

87
00:05:28,300 --> 00:05:31,440
and that's when they hear the attack
will actually occur

88
00:05:31,440 --> 00:05:37,600
as 18 gets back to the browser so

89
00:05:37,600 --> 00:05:40,919
and this its theoretical example

90
00:05:40,919 --> 00:05:43,970
if we pass n a

91
00:05:43,970 --> 00:05:45,690
script

92
00:05:45,690 --> 00:05:50,840
that can get a corporation page and then
the page does not encode that

93
00:05:50,840 --> 00:05:54,040
that data value then

94
00:05:54,040 --> 00:06:00,090
it's possible for the script XQ so the
confusion is that sometimes

95
00:06:00,090 --> 00:06:04,650
developers expect all these parameters
to have data comment on

96
00:06:04,650 --> 00:06:09,060
but there's nothing really restricting
someone from putting code into those

97
00:06:09,060 --> 00:06:12,250
variables and sending them on their way
and two

98
00:06:12,250 --> 00:06:16,220
the application server so at the bottom
here this is what the

99
00:06:16,220 --> 00:06:21,330
the final page would look like after the
application got done

100
00:06:21,330 --> 00:06:24,770
incorporating the data and and this is
what was originally

101
00:06:24,770 --> 00:06:28,670
user's browser so in this case it's
syntactically correct

102
00:06:28,670 --> 00:06:32,490
even though it's not intended the evil
method

103
00:06:32,490 --> 00:06:36,690
what XQ so

104
00:06:36,690 --> 00:06:40,450
path relative style sheet injection is

105
00:06:40,450 --> 00:06:46,210
typeof this cross-site scripting and
typically it's going to be the reflected

106
00:06:46,210 --> 00:06:46,860
type

107
00:06:46,860 --> 00:06:50,420
the one we just described where
injection occurs

108
00:06:50,420 --> 00:06:55,750
on the client travels all the way to the
server is incorporated into the page

109
00:06:55,750 --> 00:06:58,980
and then sent back to the client work
finally is able to execute

110
00:06:58,980 --> 00:07:03,310
an injection in these cases rather be in
javascript

111
00:07:03,310 --> 00:07:07,180
is actually cascading style sheets I'm
sorry

112
00:07:07,180 --> 00:07:13,050
I'm style sheets would be

113
00:07:13,050 --> 00:07:16,190
yelled socially to be like um

114
00:07:16,190 --> 00:07:19,950
whether you want to make the font bold
or change its colors

115
00:07:19,950 --> 00:07:23,150
very typically and then there's a

116
00:07:23,150 --> 00:07:26,570
pretty rich language is actually
developed in this third edition of CSS

117
00:07:26,570 --> 00:07:28,080
we can do lots of things like

118
00:07:28,080 --> 00:07:32,110
cause animations and three-dimensional
objects to spend and stuff like that

119
00:07:32,110 --> 00:07:36,110
so it but it's a so in the browser you
basically have

120
00:07:36,110 --> 00:07:41,470
an HTML parser they're all from there
with the Parsis the tags into

121
00:07:41,470 --> 00:07:45,670
a drying and then you have the styles
that are applied by the browser

122
00:07:45,670 --> 00:07:49,180
to format the HTML

123
00:07:49,180 --> 00:07:52,580
and then you have script usually
JavaScript

124
00:07:52,580 --> 00:07:57,699
that can interact with the HTML

125
00:07:57,699 --> 00:07:59,690
so pages

126
00:07:59,690 --> 00:08:03,949
are actually made up of lots of the
different files and

127
00:08:03,949 --> 00:08:07,960
I took a partial picture I love just
what the

128
00:08:07,960 --> 00:08:12,710
mathilde a home page looks like and
these are only about half the

129
00:08:12,710 --> 00:08:16,590
the files that make up that page

130
00:08:16,590 --> 00:08:20,520
and highlighted a couple love them the
question mark

131
00:08:20,520 --> 00:08:25,389
I'm was about the tense follower so that
was fetched and

132
00:08:25,389 --> 00:08:28,880
PHP logo was somewhere around fifteen
Thurso

133
00:08:28,880 --> 00:08:32,830
and all those where called up on

134
00:08:32,830 --> 00:08:36,770
by the main page which is highlighted in
the red square

135
00:08:36,770 --> 00:08:40,419
at the top so

136
00:08:40,419 --> 00:08:44,330
the main page is gonna ask for these
other resources

137
00:08:44,330 --> 00:08:47,770
to be included when the page loads in
the browser

138
00:08:47,770 --> 00:08:52,149
for actually has a chance to be parsed
you're gonna have images

139
00:08:52,149 --> 00:08:58,420
scripts and styles typically so

140
00:08:58,420 --> 00:09:01,370
at the bottom here got a couple of those
included images the ones that were

141
00:09:01,370 --> 00:09:02,060
highlighted

142
00:09:02,060 --> 00:09:05,470
and this is the full path to those
images

143
00:09:05,470 --> 00:09:12,470
so to avoid putting multiple copies

144
00:09:12,680 --> 00:09:16,020
above the same exact say JavaScript or
style

145
00:09:16,020 --> 00:09:20,020
developers usually will house

146
00:09:20,020 --> 00:09:24,070
those scripts in separate files and then
they will include them into the main

147
00:09:24,070 --> 00:09:24,600
page

148
00:09:24,600 --> 00:09:27,870
says a lot of advantages because if you

149
00:09:27,870 --> 00:09:33,380
come up with a nice style sheet and you
want to use it on many pages

150
00:09:33,380 --> 00:09:37,470
you can write the style sheet one-time
and then deploy it to all the different

151
00:09:37,470 --> 00:09:38,060
pages

152
00:09:38,060 --> 00:09:43,490
just by referencing it when the page
loads and also has another day and shame

153
00:09:43,490 --> 00:09:45,290
what has been developer knows that

154
00:09:45,290 --> 00:09:48,550
when you make a mistake it's much better
to be able to change

155
00:09:48,550 --> 00:09:52,360
and or fix the mistake and one filing
have propagate out

156
00:09:52,360 --> 00:09:56,070
than to have to go to a bunch of
individual web pages and make the

157
00:09:56,070 --> 00:10:00,709
same correction over and over again and
in a picture here

158
00:10:00,709 --> 00:10:04,860
this is the global style sheet for the
night on a project her lease

159
00:10:04,860 --> 00:10:08,930
the first three lines anyway that is
included into the main page

160
00:10:08,930 --> 00:10:12,390
to I'm format all the styles

161
00:10:12,390 --> 00:10:15,839
make the border menus everything else
look nice

162
00:10:15,839 --> 00:10:19,440
so there's

163
00:10:19,440 --> 00:10:22,209
couple different ways you can include
these files you can have the relative

164
00:10:22,209 --> 00:10:22,860
path

165
00:10:22,860 --> 00:10:26,180
and the absolute path and

166
00:10:26,180 --> 00:10:30,140
these has are generally specified

167
00:10:30,140 --> 00:10:34,560
by tags: that will include these files

168
00:10:34,560 --> 00:10:39,010
so there's the link tags which are often
used to include Style Sheets

169
00:10:39,010 --> 00:10:43,560
anchor tags typically will include a
reference of two

170
00:10:43,560 --> 00:10:47,860
another location on also have

171
00:10:47,860 --> 00:10:51,209
references to JavaScript with the crew
the script tag

172
00:10:51,209 --> 00:10:54,890
and there's couple of examples here
there's a link tag

173
00:10:54,890 --> 00:10:59,540
in the middle that is including I
reference to

174
00:10:59,540 --> 00:11:03,380
the global styles style sheet that we
just like that a second ago

175
00:11:03,380 --> 00:11:08,420
and then down to bottom is a reference
to a javascript file called bookmark

176
00:11:08,420 --> 00:11:09,660
site duh JS

177
00:11:09,660 --> 00:11:13,180
and thats Benn reference by the script
eg

178
00:11:13,180 --> 00:11:18,820
so with the absolute links

179
00:11:18,820 --> 00:11:22,040
the source code is specifying the full
path

180
00:11:22,040 --> 00:11:26,220
and this is pretty uncommon but in this
example

181
00:11:26,220 --> 00:11:29,440
an anchor tag is referencing I'm

182
00:11:29,440 --> 00:11:33,949
global styles using the full pass
starting with HTTP going all the way to

183
00:11:33,949 --> 00:11:34,829
the server name

184
00:11:34,829 --> 00:11:38,220
the filepath in all the way to the
resource

185
00:11:38,220 --> 00:11:41,709
at the end the relative

186
00:11:41,709 --> 00:11:45,040
link at the bottom only

187
00:11:45,040 --> 00:11:48,490
link on references difference

188
00:11:48,490 --> 00:11:51,910
between the current page and the
resource

189
00:11:51,910 --> 00:11:55,490
so since the current page is already at

190
00:11:55,490 --> 00:11:59,410
local host Mottola day the relative link

191
00:11:59,410 --> 00:12:02,949
is going to just have the difference
which is styles

192
00:12:02,949 --> 00:12:08,180
global that CSS

193
00:12:08,180 --> 00:12:08,680
so

194
00:12:08,680 --> 00:12:11,899
now we see that there's two different
kinds are links

195
00:12:11,899 --> 00:12:16,000
we can talk a little more about how the
browser figures out

196
00:12:16,000 --> 00:12:19,370
what the full absolute passes given

197
00:12:19,370 --> 00:12:24,009
that only has the relative path well

198
00:12:24,009 --> 00:12:27,779
the first thing is to do is figure out
the base URL

199
00:12:27,779 --> 00:12:31,399
and that's the directory that the main
page

200
00:12:31,399 --> 00:12:35,560
is n the page this calling upon this
resource and then it'll

201
00:12:35,560 --> 00:12:39,810
a pen that relative path that was
referenced and after you add those

202
00:12:39,810 --> 00:12:40,750
together

203
00:12:40,750 --> 00:12:44,550
what you should get is the full path to
the resource file

204
00:12:44,550 --> 00:12:49,089
the style sheet in this case so gonna
make an assumption that we're talking

205
00:12:49,089 --> 00:12:50,699
about them until they project

206
00:12:50,699 --> 00:12:54,310
and we have the past slash mathilde day

207
00:12:54,310 --> 00:12:59,779
is where is the file that the main
resources and and so

208
00:12:59,779 --> 00:13:03,029
we we need to add on the relative path
to that

209
00:13:03,029 --> 00:13:08,230
to get the full path the reason the
browser

210
00:13:08,230 --> 00:13:11,660
behave this way is its following the

211
00:13:11,660 --> 00:13:15,829
RF sees on what a you are out looks like

212
00:13:15,829 --> 00:13:20,459
and you are as ur pretty familiar to all
this but

213
00:13:20,459 --> 00:13:24,370
may not think about their construct very
much they're basically have the

214
00:13:24,370 --> 00:13:28,329
the scheme the HTTPS or http and then
the

215
00:13:28,329 --> 00:13:32,620
hierarchy is going to be the essentially
the a.m

216
00:13:32,620 --> 00:13:35,740
the authority it's the domain for all
practical purposes

217
00:13:35,740 --> 00:13:39,899
and the port and user credentials but we
don't see those very much in

218
00:13:39,899 --> 00:13:43,779
and web and you get into the

219
00:13:43,779 --> 00:13:48,839
absolute path an important thing to know
sears just that it starts

220
00:13:48,839 --> 00:13:52,620
with a slash and then continues with

221
00:13:52,620 --> 00:13:56,589
found on directory locations separated
by more slashes

222
00:13:56,589 --> 00:14:00,709
until you get to the very end so

223
00:14:00,709 --> 00:14:03,899
the browser's going to match the file
name located after

224
00:14:03,899 --> 00:14:08,540
the last slash easy enough

225
00:14:08,540 --> 00:14:12,029
here we have an example has been worked
so the browser

226
00:14:12,029 --> 00:14:15,290
has taken of the resource name

227
00:14:15,290 --> 00:14:19,379
and its left with the base URL and then

228
00:14:19,379 --> 00:14:22,779
its gonna read the relative reference

229
00:14:22,779 --> 00:14:27,619
in this case in this a trap tag are a
trip better be

230
00:14:27,619 --> 00:14:32,119
and help in those two together and get
the full path to the style she

231
00:14:32,119 --> 00:14:36,899
and that works because that is in fact
the path to the style sheet in a bit on

232
00:14:36,899 --> 00:14:37,609
a project

233
00:14:37,609 --> 00:14:44,410
out if we compare that against how PHP

234
00:14:44,410 --> 00:14:47,720
well get the file

235
00:14:47,720 --> 00:14:50,829
that the browser ass for it's a little
bit different

236
00:14:50,829 --> 00:14:54,389
so PHP has a configuration

237
00:14:54,389 --> 00:14:57,649
inside Apache and

238
00:14:57,649 --> 00:15:01,839
apaches uses the spouse match directive
to figure out

239
00:15:01,839 --> 00:15:05,910
where for which processor should process
the file

240
00:15:05,910 --> 00:15:09,129
so we see the files mash corrective here
for

241
00:15:09,129 --> 00:15:13,019
php files and they can have lots of
different extensions like

242
00:15:13,019 --> 00:15:16,329
PHP 34&5 for a

243
00:15:16,329 --> 00:15:21,699
pH PTM our own things like that but
typically are all use the same stop

244
00:15:21,699 --> 00:15:23,019
PHP's and thats

245
00:15:23,019 --> 00:15:27,259
certainly the standard so

246
00:15:27,259 --> 00:15:31,910
the way that the server is gonna fetch
the resources the browser s4

247
00:15:31,910 --> 00:15:34,919
is its gonna see this index that PHP

248
00:15:34,919 --> 00:15:38,730
which matches that regular expression
animal

249
00:15:38,730 --> 00:15:42,319
invokes the PHP handler to

250
00:15:42,319 --> 00:15:48,039
generate that HTML file and an Apache
will return $html back to the browser

251
00:15:48,039 --> 00:15:52,529
so notice that there's two different
ways

252
00:15:52,529 --> 00:15:55,970
that the is resources are

253
00:15:55,970 --> 00:15:59,409
parsed and that can create some
confusion in certain cases

254
00:15:59,409 --> 00:16:03,179
so in our example

255
00:16:03,179 --> 00:16:06,689
both the browser and the server

256
00:16:06,689 --> 00:16:10,519
agreed on which resource was being asked
for in both cases

257
00:16:10,519 --> 00:16:16,790
they came up with indexed at Php and
both agree

258
00:16:16,790 --> 00:16:21,370
that the passes mathilde so they both
calculated the path

259
00:16:21,370 --> 00:16:24,590
the same even though they used two
different methods

260
00:16:24,590 --> 00:16:27,780
but sense

261
00:16:27,780 --> 00:16:32,450
the web server as parsing based on the
following stanchion

262
00:16:32,450 --> 00:16:36,100
what happens if you end up having exter
directory

263
00:16:36,100 --> 00:16:40,670
after the resource file

264
00:16:40,670 --> 00:16:46,600
that PHP is looking for and so take this
path

265
00:16:46,600 --> 00:16:50,640
at the top here we actually have the so
in bar directory specified

266
00:16:50,640 --> 00:16:53,830
after the resource and XI PHP

267
00:16:53,830 --> 00:16:57,290
so the browser's just gonna go through
its

268
00:16:57,290 --> 00:17:00,480
normal calculations and it'll have

269
00:17:00,480 --> 00:17:04,230
I the word bar will be considered the
resource

270
00:17:04,230 --> 00:17:09,040
as it's after the last slash so across
that out and now we have a base paths

271
00:17:09,040 --> 00:17:09,370
again

272
00:17:09,370 --> 00:17:14,320
and then we need to add style slash
global styles that CSS

273
00:17:14,320 --> 00:17:18,930
that relative path from earlier onto the
end of the base URL

274
00:17:18,930 --> 00:17:22,010
so we will calculate this URL

275
00:17:22,010 --> 00:17:27,410
is what we need to ask for in order to
gain get the Global South %uh CSS

276
00:17:27,410 --> 00:17:33,750
from the web server so

277
00:17:33,750 --> 00:17:37,000
the browser's gonna ask Apache for this
file

278
00:17:37,000 --> 00:17:42,190
but the file doesn't exist what's web
server gonna do

279
00:17:42,190 --> 00:17:46,580
well the web server

280
00:17:46,580 --> 00:17:50,620
is gonna do it always does which is this
going to look for that

281
00:17:50,620 --> 00:17:54,330
their regular expression matching the
dot PHP on the end

282
00:17:54,330 --> 00:18:00,250
so what a patchy is gonna see is its
gonna see index at Php

283
00:18:00,250 --> 00:18:03,760
and it's not really going to be too
concerned about all that stuff that came

284
00:18:03,760 --> 00:18:05,810
after an ex that PHP

285
00:18:05,810 --> 00:18:09,600
it's effectively gonna end up looking
for

286
00:18:09,600 --> 00:18:13,440
this file here and text at Php

287
00:18:13,440 --> 00:18:17,190
so you have a situation where the
browser is

288
00:18:17,190 --> 00:18:23,510
asking for a style sheet named global
styles that CSS

289
00:18:23,510 --> 00:18:28,370
at Seans at asking PHP for the index to
php file

290
00:18:28,370 --> 00:18:32,060
which page he is more than happy to
return because that does exist

291
00:18:32,060 --> 00:18:37,200
so the browser wanted a style she but it
got back in HTML file

292
00:18:37,200 --> 00:18:40,630
and we can actually see this in this

293
00:18:40,630 --> 00:18:43,950
screen capture here if you look at

294
00:18:43,950 --> 00:18:47,310
an inspector on the left you'll see

295
00:18:47,310 --> 00:18:52,180
that the browser is convinced that
global style Scott CSS was fetched

296
00:18:52,180 --> 00:18:53,520
because that is after all

297
00:18:53,520 --> 00:18:59,200
what it asked for but if you look at
what I was actually returns the doctype

298
00:18:59,200 --> 00:19:05,550
is HTML this is actually the indexed at
php page that has been returned

299
00:19:05,550 --> 00:19:08,730
so

300
00:19:08,730 --> 00:19:11,740
the browser wanna style she got back

301
00:19:11,740 --> 00:19:15,180
an HTML document usually this is not a
big deal

302
00:19:15,180 --> 00:19:18,430
because the browser will

303
00:19:18,430 --> 00:19:22,580
look at the type of document that was
returned it can pick up clues like the

304
00:19:22,580 --> 00:19:23,380
doctype

305
00:19:23,380 --> 00:19:27,810
and the content-type thats return back
as part as the

306
00:19:27,810 --> 00:19:30,910
HTTP body in the history header

307
00:19:30,910 --> 00:19:33,920
and it can reason that I wanted a style
sheet

308
00:19:33,920 --> 00:19:37,990
I got back initial document something's
wrong and it'll just kinda bailout

309
00:19:37,990 --> 00:19:42,250
and wall process the HTML document and
pretend like

310
00:19:42,250 --> 00:19:45,640
it's a style so really we're not gonna
have

311
00:19:45,640 --> 00:19:49,200
a problem except for sometimes

312
00:19:49,200 --> 00:19:53,930
with browser compatibility mode

313
00:19:53,930 --> 00:19:57,500
there may actually be opportunities for

314
00:19:57,500 --> 00:20:02,250
the browser to go ahead and parse
additional document as a style sheet

315
00:20:02,250 --> 00:20:02,800
anyway

316
00:20:02,800 --> 00:20:07,020
so browsers wanna try to be

317
00:20:07,020 --> 00:20:10,090
friendly two pages better older

318
00:20:10,090 --> 00:20:13,570
and more frequently for honest

319
00:20:13,570 --> 00:20:18,250
pages that are not written very well so
we might have pages that

320
00:20:18,250 --> 00:20:21,490
I'm are not sent at tactically cracked

321
00:20:21,490 --> 00:20:25,350
but the browser still wants to be able
to serve those pages

322
00:20:25,350 --> 00:20:28,470
a render those pages as beses can

323
00:20:28,470 --> 00:20:32,810
and obviously you wanna have as much
market shares you can anyone else Poor's

324
00:20:32,810 --> 00:20:35,500
main developers as you can if your
browser

325
00:20:35,500 --> 00:20:39,560
I'm in order to maintain market share
now

326
00:20:39,560 --> 00:20:44,400
sites themselves can also of into
compatibility mode

327
00:20:44,400 --> 00:20:49,290
so they can declare doctypes: like the
one seen here the transitional doctype

328
00:20:49,290 --> 00:20:54,910
and tried to I'm topped the browser and
go on in the compatibility mode

329
00:20:54,910 --> 00:20:58,560
in order to use some older content

330
00:20:58,560 --> 00:21:02,410
that may not work strictly and the html5
specification

331
00:21:02,410 --> 00:21:07,410
the current specification course the
users themselves can

332
00:21:07,410 --> 00:21:11,630
actually set the browser and the
compatibility mode and I think intern

333
00:21:11,630 --> 00:21:12,360
exploring

334
00:21:12,360 --> 00:21:16,420
Peraza nice little button free to click
a sec compatibility mode

335
00:21:16,420 --> 00:21:19,710
and all the browsers pretty much let you
go into the options

336
00:21:19,710 --> 00:21:24,570
and sec at ability mod so

337
00:21:24,570 --> 00:21:28,950
we go back to the style sheet show I'm
being asked for but the HTML file shows

338
00:21:28,950 --> 00:21:29,620
up

339
00:21:29,620 --> 00:21:33,760
if the browsers and compatibility mode
it will

340
00:21:33,760 --> 00:21:38,530
scan through that HTML document and its
gonna try to find a style

341
00:21:38,530 --> 00:21:41,610
that is syntactically correct and

342
00:21:41,610 --> 00:21:45,140
use that style to mark-up the

343
00:21:45,140 --> 00:21:50,830
page that it's drawing

344
00:21:50,830 --> 00:21:53,510
and that's gonna let us inject some
style

345
00:21:53,510 --> 00:21:57,290
into the page so

346
00:21:57,290 --> 00:22:01,630
there some prerequisites we need we need
the page itself

347
00:22:01,630 --> 00:22:04,830
to have a cross-site scripting
vulnerability

348
00:22:04,830 --> 00:22:08,970
because we need to figure out a way to
inject script

349
00:22:08,970 --> 00:22:12,800
in this case CSS crypt into the page

350
00:22:12,800 --> 00:22:17,090
and have incorporated into that page and
output back

351
00:22:17,090 --> 00:22:21,000
into the browser where the browser can
see it so

352
00:22:21,000 --> 00:22:25,040
that's why the pass relative style sheet
is basically a type of

353
00:22:25,040 --> 00:22:29,020
cross-site scripting out JavaScript is
the most

354
00:22:29,020 --> 00:22:32,030
commonly used scripts for

355
00:22:32,030 --> 00:22:36,580
cross-site scripting but Javascript does
have some limitations

356
00:22:36,580 --> 00:22:41,250
if the injection is gonna land in the
middle if HTML

357
00:22:41,250 --> 00:22:44,700
instead of landing in the middle of some
other JavaScript you're gonna need

358
00:22:44,700 --> 00:22:45,980
script tags

359
00:22:45,980 --> 00:22:49,470
to break out of the HTML

360
00:22:49,470 --> 00:22:53,570
and get the JavaScript engine to execute
that script

361
00:22:53,570 --> 00:22:57,840
otherwise your javascript just gonna
land right the middle of an HTML tag

362
00:22:57,840 --> 00:23:02,580
it doesn't really mean anything to HTML
and so it just kinda be displayed on the

363
00:23:02,580 --> 00:23:03,170
screen

364
00:23:03,170 --> 00:23:06,540
style she's on the other hand

365
00:23:06,540 --> 00:23:10,650
do not require tags: in HTML context

366
00:23:10,650 --> 00:23:15,310
to invoke the CSS parser so if you can
get

367
00:23:15,310 --> 00:23:18,970
a style injected it can be a little bit
easier

368
00:23:18,970 --> 00:23:23,490
sense a lot of these on defenses are
built into browsers

369
00:23:23,490 --> 00:23:26,670
tend to be focused on script tags or

370
00:23:26,670 --> 00:23:31,060
other HTML tags to recognize that there
some type a cross-site scripting going

371
00:23:31,060 --> 00:23:31,370
on

372
00:23:31,370 --> 00:23:35,260
so here's an example

373
00:23:35,260 --> 00:23:38,600
we have a javascript that

374
00:23:38,600 --> 00:23:43,140
turns some text read: and we have the
equivalent style

375
00:23:43,140 --> 00:23:47,270
that also turns they same text read:

376
00:23:47,270 --> 00:23:54,110
and days should basically operate the
same way

377
00:23:54,110 --> 00:23:58,050
but if you look at the style sheet
you'll see see that it doesn't need

378
00:23:58,050 --> 00:24:02,080
the script tags and/or operate and this
is going to allow it to pass through

379
00:24:02,080 --> 00:24:03,290
filters

380
00:24:03,290 --> 00:24:07,220
and other types of kinda naive defenses
a lot easier

381
00:24:07,220 --> 00:24:11,460
so economics this a started injection

382
00:24:11,460 --> 00:24:16,130
interesting from that point of view so

383
00:24:16,130 --> 00:24:19,600
we can see this with the demo and I'm
gonna use

384
00:24:19,600 --> 00:24:26,040
the told a system for this demo recently
the path relative style sheet injection

385
00:24:26,040 --> 00:24:26,929
vulnerability was

386
00:24:26,929 --> 00:24:31,450
added into the project so now you can
download the project in

387
00:24:31,450 --> 00:24:36,710
try this for yourself are injections
gonna have

388
00:24:36,710 --> 00:24:40,179
several parts they are kinda run
together but

389
00:24:40,179 --> 00:24:43,630
essentially run to start with path
extension because

390
00:24:43,630 --> 00:24:47,500
we wanna have some directories after

391
00:24:47,500 --> 00:24:51,020
the file name for the reason we talked
about earlier we want to get the browser

392
00:24:51,020 --> 00:24:55,450
a little bit I confused about what the
base URL as

393
00:24:55,450 --> 00:25:00,250
and orange area that's the prefix for
the attack

394
00:25:00,250 --> 00:25:03,940
percent I am 0a is encoded

395
00:25:03,940 --> 00:25:08,920
for the one thing character and I like
the way that up

396
00:25:08,920 --> 00:25:13,350
the ports for your blog but that I think
he said something like it gets the

397
00:25:13,350 --> 00:25:17,150
it's the page in the mood to to accept a
style

398
00:25:17,150 --> 00:25:21,330
Anna effectively what it does is it's a
type a separator

399
00:25:21,330 --> 00:25:25,270
between the enter the path in the
beginning of the style sheet

400
00:25:25,270 --> 00:25:29,300
the the blue Astrix is called The
Selecter

401
00:25:29,300 --> 00:25:32,840
and & Style Sheets a selector is

402
00:25:32,840 --> 00:25:36,170
just a declaration have what you want to
apply the style to

403
00:25:36,170 --> 00:25:43,170
their shirts as a special medicare to
remains

404
00:25:47,390 --> 00:25:50,050
sorry about that and get here and
jamming

405
00:25:50,050 --> 00:25:53,350
have we lost the audio from this point
on

406
00:25:53,350 --> 00:25:57,640
the demo continues but not the audio
unfortunately

407
00:25:57,640 --> 00:26:00,660
year even say about the last like this a
10 minutes you're talking

408
00:26:00,660 --> 00:26:04,010
the first section was any good anyway
didn't miss anything

409
00:26:04,010 --> 00:26:07,800
but yes I but this and operate the
camera

410
00:26:07,800 --> 00:26:11,610
crap out on the talk to thank you much

411
00:26:11,610 --> 00:26:12,200
fired back

