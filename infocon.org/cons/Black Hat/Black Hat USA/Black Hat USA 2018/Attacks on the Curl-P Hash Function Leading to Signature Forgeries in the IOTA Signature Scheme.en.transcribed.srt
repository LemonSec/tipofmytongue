1
00:00:00,000 --> 00:00:05,400
hello everyone<font color="#CCCCCC"> so my name is Neha and I</font>

2
00:00:02,939 --> 00:00:08,340
work at MIT<font color="#E5E5E5"> I lead a group there called</font>

3
00:00:05,400 --> 00:00:10,019
<font color="#CCCCCC">the digital currency initiative</font><font color="#E5E5E5"> we focus</font>

4
00:00:08,340 --> 00:00:12,840
on<font color="#CCCCCC"> crypto currencies</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> blockchain</font>

5
00:00:10,019 --> 00:00:14,969
technology research<font color="#CCCCCC"> and we're here today</font>

6
00:00:12,840 --> 00:00:17,939
<font color="#E5E5E5">to tell you about some research that</font><font color="#CCCCCC"> we</font>

7
00:00:14,969 --> 00:00:21,390
did<font color="#E5E5E5"> involving a crypto currency called</font>

8
00:00:17,940 --> 00:00:23,580
<font color="#E5E5E5">iota so what is a Oda</font><font color="#CCCCCC"> you might not have</font>

9
00:00:21,390 --> 00:00:27,599
<font color="#E5E5E5">heard of it it's actually</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> ten</font>

10
00:00:23,580 --> 00:00:30,538
<font color="#CCCCCC">cryptocurrency a</font><font color="#E5E5E5"> feud as of</font><font color="#CCCCCC"> a few days</font>

11
00:00:27,599 --> 00:00:32,488
<font color="#E5E5E5">ago it had a valuation</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> about 2.8</font>

12
00:00:30,539 --> 00:00:34,050
billion dollars but there's been a

13
00:00:32,488 --> 00:00:36,959
little<font color="#CCCCCC"> bit of a dip in crypto currencies</font>

14
00:00:34,050 --> 00:00:39,239
so it's a<font color="#E5E5E5"> little lower right now</font><font color="#CCCCCC"> they</font>

15
00:00:36,960 --> 00:00:42,420
have a lot<font color="#CCCCCC"> of partnerships</font><font color="#E5E5E5"> with large</font>

16
00:00:39,239 --> 00:00:44,250
<font color="#E5E5E5">companies for example</font><font color="#CCCCCC"> Bosch has</font>

17
00:00:42,420 --> 00:00:46,820
purchased<font color="#E5E5E5"> in their own words a</font>

18
00:00:44,250 --> 00:00:49,860
significant number of iota tokens

19
00:00:46,820 --> 00:00:53,760
<font color="#E5E5E5">Volkswagen is releasing an iota based</font>

20
00:00:49,860 --> 00:00:57,120
product<font color="#E5E5E5"> in 2019 now the idea</font><font color="#CCCCCC"> behind iota</font>

21
00:00:53,760 --> 00:01:00,210
<font color="#E5E5E5">is that it's based on something called a</font>

22
00:00:57,120 --> 00:01:02,519
tangle<font color="#E5E5E5"> which is a directed acyclic graph</font>

23
00:01:00,210 --> 00:01:04,830
of transactions it doesn't use a linear

24
00:01:02,520 --> 00:01:08,369
<font color="#E5E5E5">sequence of blocks like most other block</font>

25
00:01:04,830 --> 00:01:10,200
chains in crypto currencies<font color="#CCCCCC"> and another</font>

26
00:01:08,369 --> 00:01:11,880
thing<font color="#E5E5E5"> that's unique about iota is that</font>

27
00:01:10,200 --> 00:01:15,869
they<font color="#CCCCCC"> actually wrote their own hash</font>

28
00:01:11,880 --> 00:01:17,759
function called<font color="#E5E5E5"> curl</font><font color="#CCCCCC"> a couple more</font>

29
00:01:15,869 --> 00:01:19,590
basics about iota that you need to know

30
00:01:17,759 --> 00:01:23,600
in terms<font color="#E5E5E5"> of</font><font color="#CCCCCC"> terminology to get the rest</font>

31
00:01:19,590 --> 00:01:25,799
of<font color="#CCCCCC"> this talk so instead</font><font color="#E5E5E5"> of a transaction</font>

32
00:01:23,600 --> 00:01:27,119
<font color="#CCCCCC">these are the bitcoin words on the left</font>

33
00:01:25,799 --> 00:01:29,460
<font color="#E5E5E5">and on the right</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> iota words</font>

34
00:01:27,119 --> 00:01:33,150
instead<font color="#E5E5E5"> of a transaction payments are</font>

35
00:01:29,460 --> 00:01:34,589
<font color="#E5E5E5">called bundles and the currency is</font>

36
00:01:33,150 --> 00:01:37,380
valued a little bit differently than

37
00:01:34,590 --> 00:01:38,700
<font color="#CCCCCC">Bitcoin</font><font color="#E5E5E5"> so again as a day or so ago when</font>

38
00:01:37,380 --> 00:01:41,158
we wrote these slides but coin was

39
00:01:38,700 --> 00:01:45,210
around<font color="#CCCCCC"> $7,000 a coin</font>

40
00:01:41,159 --> 00:01:48,990
iota<font color="#E5E5E5"> was around 87 cents for a million</font>

41
00:01:45,210 --> 00:01:50,939
coins or a million iota<font color="#CCCCCC"> but you know</font>

42
00:01:48,990 --> 00:01:53,429
something else<font color="#CCCCCC"> that's unique about iota</font>

43
00:01:50,939 --> 00:01:56,809
<font color="#CCCCCC">and really interesting is that it uses</font>

44
00:01:53,430 --> 00:01:59,700
what's called balanced ternary<font color="#E5E5E5"> so</font>

45
00:01:56,810 --> 00:02:01,560
instead of bits and<font color="#E5E5E5"> bytes which are</font>

46
00:01:59,700 --> 00:02:05,399
<font color="#CCCCCC">based to zeroes and ones</font>

47
00:02:01,560 --> 00:02:09,060
<font color="#E5E5E5">iota actually uses tricks</font><font color="#CCCCCC"> and trikes so</font>

48
00:02:05,399 --> 00:02:12,330
it's negative 1<font color="#E5E5E5"> 0 & 1 that's the</font>

49
00:02:09,060 --> 00:02:15,000
representation<font color="#E5E5E5"> that it uses</font>

50
00:02:12,330 --> 00:02:17,370
so why did<font color="#E5E5E5"> we decide</font><font color="#CCCCCC"> to take a look at</font>

51
00:02:15,000 --> 00:02:20,130
this<font color="#E5E5E5"> cryptocurrency</font><font color="#CCCCCC"> at all</font><font color="#E5E5E5"> well it</font>

52
00:02:17,370 --> 00:02:22,260
actually<font color="#E5E5E5"> was sort of an accident</font><font color="#CCCCCC"> so in</font>

53
00:02:20,130 --> 00:02:24,840
addition to me on<font color="#CCCCCC"> that slide are two of</font>

54
00:02:22,260 --> 00:02:27,840
<font color="#E5E5E5">my colleagues Michael Casey and tagged</font>

55
00:02:24,840 --> 00:02:30,480
<font color="#E5E5E5">Riga and one day Michael came</font><font color="#CCCCCC"> to us</font>

56
00:02:27,840 --> 00:02:32,640
because<font color="#CCCCCC"> he had gotten this email and</font>

57
00:02:30,480 --> 00:02:35,549
this<font color="#E5E5E5"> email claimed that there was this</font>

58
00:02:32,640 --> 00:02:38,070
amazing<font color="#E5E5E5"> new cryptocurrency invented that</font>

59
00:02:35,550 --> 00:02:38,700
solved all of the problems in<font color="#E5E5E5"> crypto</font>

60
00:02:38,070 --> 00:02:41,190
<font color="#E5E5E5">currencies</font>

61
00:02:38,700 --> 00:02:44,790
it was<font color="#E5E5E5"> scalable it didn't have any fees</font>

62
00:02:41,190 --> 00:02:47,400
it was totally decentralized<font color="#CCCCCC"> and so he</font>

63
00:02:44,790 --> 00:02:49,049
was asking<font color="#CCCCCC"> us</font><font color="#E5E5E5"> if this was for real</font><font color="#CCCCCC"> this</font>

64
00:02:47,400 --> 00:02:50,990
<font color="#CCCCCC">was you know</font><font color="#E5E5E5"> if it was possible for</font><font color="#CCCCCC"> this</font>

65
00:02:49,050 --> 00:02:54,240
<font color="#CCCCCC">to happen now my colleague tad</font>

66
00:02:50,990 --> 00:02:56,910
<font color="#E5E5E5">immediately replied no but the thing</font><font color="#CCCCCC"> is</font>

67
00:02:54,240 --> 00:02:58,890
<font color="#CCCCCC">tad is a very grumpy person so he</font>

68
00:02:56,910 --> 00:03:01,260
doesn't like very much to<font color="#CCCCCC"> begin</font><font color="#E5E5E5"> with and</font>

69
00:02:58,890 --> 00:03:03,869
he was<font color="#E5E5E5"> saying</font><font color="#CCCCCC"> no a</font><font color="#E5E5E5"> lot recently and</font><font color="#CCCCCC"> so I</font>

70
00:03:01,260 --> 00:03:06,950
said<font color="#E5E5E5"> to him</font><font color="#CCCCCC"> - you can't just say that</font>

71
00:03:03,870 --> 00:03:11,310
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> sucks</font><font color="#CCCCCC"> you have to actually</font>

72
00:03:06,950 --> 00:03:13,619
<font color="#E5E5E5">explain exactly why it sucks and so he</font>

73
00:03:11,310 --> 00:03:15,810
said fine<font color="#CCCCCC"> and he went off</font><font color="#E5E5E5"> and he looked</font>

74
00:03:13,620 --> 00:03:18,810
at the code<font color="#E5E5E5"> and one of the first things</font>

75
00:03:15,810 --> 00:03:21,900
<font color="#E5E5E5">he noticed was the custom hash function</font>

76
00:03:18,810 --> 00:03:24,450
called curl<font color="#CCCCCC"> Taj was having lunch with my</font>

77
00:03:21,900 --> 00:03:25,500
colleague Ethan<font color="#E5E5E5"> who's gonna come up for</font>

78
00:03:24,450 --> 00:03:29,280
the rest<font color="#E5E5E5"> of the talk soon</font>

79
00:03:25,500 --> 00:03:32,820
and Ethan enjoys breaking hash functions

80
00:03:29,280 --> 00:03:35,610
for fun<font color="#CCCCCC"> so he showed Ethan this hash</font>

81
00:03:32,820 --> 00:03:39,900
function<font color="#CCCCCC"> and Ethan was delighted</font><font color="#E5E5E5"> and</font>

82
00:03:35,610 --> 00:03:43,290
responded<font color="#E5E5E5"> there goes my weekend</font><font color="#CCCCCC"> okay so</font>

83
00:03:39,900 --> 00:03:47,370
what exactly<font color="#E5E5E5"> is our attack the basics of</font>

84
00:03:43,290 --> 00:03:51,209
our attack are the following<font color="#CCCCCC"> bob</font><font color="#E5E5E5"> signs</font>

85
00:03:47,370 --> 00:03:54,420
of<font color="#E5E5E5"> payments</font><font color="#CCCCCC"> where he gets</font><font color="#E5E5E5"> two million</font><font color="#CCCCCC"> US</font>

86
00:03:51,209 --> 00:03:59,459
dollars<font color="#CCCCCC"> worth of</font><font color="#E5E5E5"> iota and</font><font color="#CCCCCC"> eve gets</font>

87
00:03:54,420 --> 00:04:03,390
almost<font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> eve then forges bob's</font>

88
00:03:59,459 --> 00:04:05,489
signature on a different payment<font color="#E5E5E5"> where</font>

89
00:04:03,390 --> 00:04:09,988
she gets<font color="#CCCCCC"> two million dollars</font><font color="#E5E5E5"> worth of</font>

90
00:04:05,489 --> 00:04:12,030
iota<font color="#E5E5E5"> and Bob gets</font><font color="#CCCCCC"> almost nothing now</font>

91
00:04:09,989 --> 00:04:14,310
what's really important about<font color="#E5E5E5"> this</font>

92
00:04:12,030 --> 00:04:17,040
attack is<font color="#CCCCCC"> that it takes</font><font color="#E5E5E5"> place in what is</font>

93
00:04:14,310 --> 00:04:19,680
called<font color="#E5E5E5"> a chosen message attack setting</font>

94
00:04:17,040 --> 00:04:22,890
what does that mean that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that Eve</font>

95
00:04:19,680 --> 00:04:25,820
<font color="#CCCCCC">gets to create the payment</font><font color="#E5E5E5"> that Bob</font>

96
00:04:22,890 --> 00:04:27,710
ultimately signs<font color="#E5E5E5"> so Eve gets to sort</font><font color="#CCCCCC"> of</font>

97
00:04:25,820 --> 00:04:32,060
create this payment<font color="#E5E5E5"> and put it in front</font>

98
00:04:27,710 --> 00:04:34,700
<font color="#E5E5E5">of him Bob checks it out and signs it</font><font color="#CCCCCC"> a</font>

99
00:04:32,060 --> 00:04:37,820
note on<font color="#E5E5E5"> impact</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> disclosure we are not</font>

100
00:04:34,700 --> 00:04:40,250
sharing<font color="#CCCCCC"> brand-new attacks here today</font><font color="#E5E5E5"> we</font>

101
00:04:37,820 --> 00:04:42,590
actually<font color="#E5E5E5"> did this work a year ago and</font><font color="#CCCCCC"> we</font>

102
00:04:40,250 --> 00:04:45,650
disclosed our findings to<font color="#E5E5E5"> the iota</font>

103
00:04:42,590 --> 00:04:48,260
<font color="#CCCCCC">developers they very quickly</font><font color="#E5E5E5"> deployed</font>

104
00:04:45,650 --> 00:04:49,969
mitigations for them and so it's

105
00:04:48,260 --> 00:04:52,130
important<font color="#CCCCCC"> to note that the signature</font>

106
00:04:49,970 --> 00:04:55,460
forgery attacks<font color="#E5E5E5"> that we are presenting</font>

107
00:04:52,130 --> 00:04:58,550
today in<font color="#E5E5E5"> this talk no longer</font><font color="#CCCCCC"> impact</font><font color="#E5E5E5"> iota</font>

108
00:04:55,460 --> 00:05:00,620
security and in the course<font color="#E5E5E5"> of creating</font>

109
00:04:58,550 --> 00:05:02,780
and conducting this attack we never

110
00:05:00,620 --> 00:05:04,280
actually sent any transactions to iota

111
00:05:02,780 --> 00:05:08,719
<font color="#CCCCCC">z' network</font><font color="#E5E5E5"> so just wanted to make that</font>

112
00:05:04,280 --> 00:05:10,489
<font color="#E5E5E5">clear</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so this is the outline for</font><font color="#CCCCCC"> the</font>

113
00:05:08,720 --> 00:05:12,320
rest of<font color="#E5E5E5"> the talk so first I'm gonna</font>

114
00:05:10,490 --> 00:05:14,540
explain a little bit<font color="#E5E5E5"> more about the</font>

115
00:05:12,320 --> 00:05:16,940
<font color="#CCCCCC">details of the attack</font><font color="#E5E5E5"> Ethan's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> talk</font>

116
00:05:14,540 --> 00:05:19,940
about the hash function<font color="#CCCCCC"> and then we're</font>

117
00:05:16,940 --> 00:05:22,460
gonna<font color="#E5E5E5"> close with some</font><font color="#CCCCCC"> discussion so</font>

118
00:05:19,940 --> 00:05:23,870
first of all our<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> that we're going</font>

119
00:05:22,460 --> 00:05:26,359
<font color="#E5E5E5">to describe to you takes place in a</font>

120
00:05:23,870 --> 00:05:29,750
setting called multi-sig<font color="#CCCCCC"> ok what is</font>

121
00:05:26,360 --> 00:05:32,450
multi-sig<font color="#E5E5E5"> well the idea behind multi-sig</font>

122
00:05:29,750 --> 00:05:35,450
is kind of like the idea<font color="#E5E5E5"> behind the</font>

123
00:05:32,450 --> 00:05:36,770
two-man rule<font color="#E5E5E5"> for a nuclear launch the</font>

124
00:05:35,450 --> 00:05:39,349
idea is<font color="#CCCCCC"> that there's two different</font>

125
00:05:36,770 --> 00:05:42,080
people<font color="#E5E5E5"> with two</font><font color="#CCCCCC"> different keys and they</font>

126
00:05:39,350 --> 00:05:44,900
both<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> be present in order</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> lock</font>

127
00:05:42,080 --> 00:05:48,919
<font color="#E5E5E5">to launch the nuclear weapon</font><font color="#CCCCCC"> similar</font>

128
00:05:44,900 --> 00:05:50,840
<font color="#E5E5E5">idea behind what's known as</font><font color="#CCCCCC"> multi-sig so</font>

129
00:05:48,920 --> 00:05:54,530
what<font color="#E5E5E5"> is multi-sig when it applies to</font>

130
00:05:50,840 --> 00:05:58,460
crypto currencies and payments<font color="#E5E5E5"> well what</font>

131
00:05:54,530 --> 00:06:01,820
this means is that you need k out of n

132
00:05:58,460 --> 00:06:04,520
signatures in order to create a valid

133
00:06:01,820 --> 00:06:07,219
payment<font color="#E5E5E5"> so ahead of time some people</font>

134
00:06:04,520 --> 00:06:10,609
<font color="#E5E5E5">lock up some money together</font><font color="#CCCCCC"> so here</font>

135
00:06:07,220 --> 00:06:12,590
Alice and<font color="#E5E5E5"> Bob are creating a payment</font>

136
00:06:10,610 --> 00:06:15,980
which locks up some money<font color="#E5E5E5"> in a multi-sig</font>

137
00:06:12,590 --> 00:06:18,710
payment<font color="#E5E5E5"> and here they're spending it and</font>

138
00:06:15,980 --> 00:06:19,520
in<font color="#E5E5E5"> order to spend this money that</font>

139
00:06:18,710 --> 00:06:21,530
they've locked up

140
00:06:19,520 --> 00:06:26,419
they both<font color="#E5E5E5"> need to attach their</font>

141
00:06:21,530 --> 00:06:29,150
signatures on the transaction<font color="#E5E5E5"> so why</font>

142
00:06:26,420 --> 00:06:31,520
multi-sig well multi-sig gives you<font color="#CCCCCC"> added</font>

143
00:06:29,150 --> 00:06:35,299
security<font color="#CCCCCC"> an attacker has to</font><font color="#E5E5E5"> compromise</font>

144
00:06:31,520 --> 00:06:38,210
<font color="#E5E5E5">both keys in order</font><font color="#CCCCCC"> to steal the money</font>

145
00:06:35,300 --> 00:06:39,350
<font color="#CCCCCC">not</font><font color="#E5E5E5"> just one and you can do cool things</font>

146
00:06:38,210 --> 00:06:41,359
<font color="#E5E5E5">like keep the key</font>

147
00:06:39,350 --> 00:06:43,160
<font color="#E5E5E5">in very different places</font><font color="#CCCCCC"> for example you</font>

148
00:06:41,360 --> 00:06:44,600
could put<font color="#CCCCCC"> one in cold storage on a</font>

149
00:06:43,160 --> 00:06:48,110
<font color="#CCCCCC">machine that's like</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> even connected</font>

150
00:06:44,600 --> 00:06:50,360
<font color="#CCCCCC">to the internet</font><font color="#E5E5E5"> multi-sig is actually</font>

151
00:06:48,110 --> 00:06:52,070
used by<font color="#E5E5E5"> many exchanges for security as</font>

152
00:06:50,360 --> 00:06:56,420
well<font color="#E5E5E5"> so it's a pretty common technique</font>

153
00:06:52,070 --> 00:06:59,390
used<font color="#E5E5E5"> in crypto currencies signatures in</font>

154
00:06:56,420 --> 00:07:01,580
<font color="#CCCCCC">Yoda</font><font color="#E5E5E5"> are actually kind of interesting</font>

155
00:06:59,390 --> 00:07:03,050
iota uses a<font color="#E5E5E5"> signature scheme called</font>

156
00:07:01,580 --> 00:07:07,700
<font color="#CCCCCC">Watts</font><font color="#E5E5E5"> winter</font><font color="#CCCCCC"> knits</font>

157
00:07:03,050 --> 00:07:10,850
one time signatures<font color="#CCCCCC"> iota modifies Watts</font>

158
00:07:07,700 --> 00:07:14,360
however so<font color="#E5E5E5"> that signatures are not on</font>

159
00:07:10,850 --> 00:07:17,330
the message itself<font color="#E5E5E5"> but actually</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

160
00:07:14,360 --> 00:07:20,120
hash of<font color="#E5E5E5"> the message</font><font color="#CCCCCC"> so if you look</font><font color="#E5E5E5"> at</font>

161
00:07:17,330 --> 00:07:22,039
this code<font color="#E5E5E5"> below</font><font color="#CCCCCC"> what's</font><font color="#E5E5E5"> really important</font>

162
00:07:20,120 --> 00:07:24,530
<font color="#CCCCCC">to</font><font color="#E5E5E5"> note here is</font><font color="#CCCCCC"> that before</font><font color="#E5E5E5"> the signing</font>

163
00:07:22,040 --> 00:07:26,570
happens<font color="#E5E5E5"> you use a hash function in this</font>

164
00:07:24,530 --> 00:07:28,000
<font color="#CCCCCC">case this hash function is called curl</font>

165
00:07:26,570 --> 00:07:31,190
<font color="#E5E5E5">p27</font>

166
00:07:28,000 --> 00:07:34,010
<font color="#E5E5E5">that means that it's run for 27</font><font color="#CCCCCC"> rounds</font>

167
00:07:31,190 --> 00:07:35,630
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> I Otis custom hash function</font><font color="#E5E5E5"> the</font>

168
00:07:34,010 --> 00:07:37,580
signature<font color="#E5E5E5"> is done on the hash of the</font>

169
00:07:35,630 --> 00:07:39,620
message<font color="#E5E5E5"> and so what this means is</font><font color="#CCCCCC"> that</font>

170
00:07:37,580 --> 00:07:42,469
<font color="#E5E5E5">it</font><font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> even really matter</font><font color="#CCCCCC"> exactly</font>

171
00:07:39,620 --> 00:07:45,320
how the signature scheme works because

172
00:07:42,470 --> 00:07:48,200
the security<font color="#CCCCCC"> of the signature scheme</font>

173
00:07:45,320 --> 00:07:50,570
reduces to the security<font color="#CCCCCC"> of the hash</font>

174
00:07:48,200 --> 00:07:54,159
<font color="#E5E5E5">function if you can break the hash</font>

175
00:07:50,570 --> 00:07:57,349
function you can<font color="#E5E5E5"> Forge signatures and</font>

176
00:07:54,160 --> 00:07:59,960
that's<font color="#E5E5E5"> exactly what we do in order</font><font color="#CCCCCC"> to</font>

177
00:07:57,350 --> 00:08:01,910
conduct<font color="#E5E5E5"> our attack so let me show you</font>

178
00:07:59,960 --> 00:08:05,270
how this works we're gonna show how we

179
00:08:01,910 --> 00:08:08,410
can exploit find being collisions<font color="#CCCCCC"> in</font>

180
00:08:05,270 --> 00:08:12,109
this hash function<font color="#CCCCCC"> in order to create</font>

181
00:08:08,410 --> 00:08:16,370
unauthorized payments<font color="#E5E5E5"> so here we have</font>

182
00:08:12,110 --> 00:08:18,680
<font color="#E5E5E5">Eve and Bob again and even Bob have</font>

183
00:08:16,370 --> 00:08:23,150
locked up some money<font color="#CCCCCC"> together in a</font>

184
00:08:18,680 --> 00:08:27,820
<font color="#CCCCCC">multi-sig transaction</font><font color="#E5E5E5"> Eve is going to</font>

185
00:08:23,150 --> 00:08:30,260
use our technique to<font color="#E5E5E5"> create two bundles</font>

186
00:08:27,820 --> 00:08:32,000
<font color="#CCCCCC">one of which which pays a whole bunch of</font>

187
00:08:30,260 --> 00:08:34,069
money<font color="#CCCCCC"> to</font><font color="#E5E5E5"> her and one of which which pays</font>

188
00:08:32,000 --> 00:08:37,010
a whole bunch<font color="#E5E5E5"> of money to Bob</font><font color="#CCCCCC"> and now</font>

189
00:08:34,070 --> 00:08:39,560
the key<font color="#CCCCCC"> thing here is Eve</font><font color="#E5E5E5"> has created</font>

190
00:08:37,010 --> 00:08:44,350
these bundles very very carefully<font color="#E5E5E5"> they</font>

191
00:08:39,559 --> 00:08:48,140
both have the<font color="#CCCCCC"> same hash under curl</font><font color="#E5E5E5"> p27</font>

192
00:08:44,350 --> 00:08:50,690
then<font color="#E5E5E5"> Eve is going to give the benign</font>

193
00:08:48,140 --> 00:08:51,420
<font color="#E5E5E5">looking bundle to Bob and ask Bob for</font>

194
00:08:50,690 --> 00:08:54,300
his signature

195
00:08:51,420 --> 00:08:55,949
Bob checks out the bundle<font color="#E5E5E5"> looks pretty</font>

196
00:08:54,300 --> 00:08:58,620
<font color="#E5E5E5">good pays him a bunch of money he's</font>

197
00:08:55,950 --> 00:09:01,920
<font color="#E5E5E5">happy he signs the bundle that pays him</font>

198
00:08:58,620 --> 00:09:05,280
money<font color="#CCCCCC"> he then sends this back to Eve</font>

199
00:09:01,920 --> 00:09:07,560
with a signature now Eve because she's

200
00:09:05,280 --> 00:09:11,400
created these bundles<font color="#E5E5E5"> in a very special</font>

201
00:09:07,560 --> 00:09:14,849
way<font color="#E5E5E5"> can take Bob's signature and just</font>

202
00:09:11,400 --> 00:09:17,939
copy it<font color="#E5E5E5"> right over onto her malicious</font>

203
00:09:14,850 --> 00:09:21,600
bundle<font color="#CCCCCC"> and this is a valid</font><font color="#E5E5E5"> signature</font>

204
00:09:17,940 --> 00:09:23,700
under curl<font color="#CCCCCC"> P 27 or this is a valid</font>

205
00:09:21,600 --> 00:09:29,430
signature because they hash to the<font color="#CCCCCC"> same</font>

206
00:09:23,700 --> 00:09:32,970
thing under curl P 27<font color="#E5E5E5"> then</font><font color="#CCCCCC"> Eve</font><font color="#E5E5E5"> broadcast</font>

207
00:09:29,430 --> 00:09:35,310
<font color="#E5E5E5">signs the bundle</font><font color="#CCCCCC"> broadcasts it</font><font color="#E5E5E5"> and what</font>

208
00:09:32,970 --> 00:09:36,990
ends up happening is that<font color="#E5E5E5"> a transaction</font>

209
00:09:35,310 --> 00:09:42,839
is broadcast<font color="#CCCCCC"> at the network</font><font color="#E5E5E5"> that Bob</font>

210
00:09:36,990 --> 00:09:44,610
<font color="#E5E5E5">never saw or authorized okay so let's</font>

211
00:09:42,840 --> 00:09:46,710
talk a little<font color="#E5E5E5"> bit about exactly what</font>

212
00:09:44,610 --> 00:09:48,600
these bundles<font color="#CCCCCC"> Eve creates</font><font color="#E5E5E5"> are going to</font>

213
00:09:46,710 --> 00:09:51,120
<font color="#E5E5E5">look like if you sort of look inside</font><font color="#CCCCCC"> a</font>

214
00:09:48,600 --> 00:09:53,310
bundle<font color="#E5E5E5"> there are a few different fields</font>

215
00:09:51,120 --> 00:09:55,560
that<font color="#E5E5E5"> are important</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of which is the</font>

216
00:09:53,310 --> 00:09:58,560
<font color="#CCCCCC">value field so this</font><font color="#E5E5E5"> is a bundle that</font>

217
00:09:55,560 --> 00:09:59,790
<font color="#E5E5E5">pays</font><font color="#CCCCCC"> for different people but</font><font color="#E5E5E5"> the</font>

218
00:09:58,560 --> 00:10:02,280
important things to<font color="#E5E5E5"> look at are the</font>

219
00:09:59,790 --> 00:10:06,209
amounts that<font color="#E5E5E5"> Eve and Bob get okay so</font>

220
00:10:02,280 --> 00:10:10,230
<font color="#CCCCCC">what Eve is going</font><font color="#E5E5E5"> to do is she's going</font>

221
00:10:06,210 --> 00:10:11,690
<font color="#E5E5E5">to take this bundle</font><font color="#CCCCCC"> and look at sort of</font>

222
00:10:10,230 --> 00:10:13,590
what<font color="#E5E5E5"> it looks like in</font><font color="#CCCCCC"> trick</font>

223
00:10:11,690 --> 00:10:15,960
representations so these are the<font color="#CCCCCC"> truths</font>

224
00:10:13,590 --> 00:10:17,010
of the<font color="#CCCCCC"> value field these are the things</font>

225
00:10:15,960 --> 00:10:20,700
that<font color="#E5E5E5"> are going</font><font color="#CCCCCC"> to go into</font><font color="#E5E5E5"> the hash</font>

226
00:10:17,010 --> 00:10:22,590
function<font color="#E5E5E5"> and she's gonna</font><font color="#CCCCCC"> fiddle with</font>

227
00:10:20,700 --> 00:10:24,600
some of the tricks in a very careful way

228
00:10:22,590 --> 00:10:26,100
<font color="#E5E5E5">so here you can see that in the money</font>

229
00:10:24,600 --> 00:10:27,930
<font color="#E5E5E5">that goes to her the value</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> goes to</font>

230
00:10:26,100 --> 00:10:30,180
her there's a<font color="#E5E5E5"> zero in the</font><font color="#CCCCCC"> twenty-sixth</font>

231
00:10:27,930 --> 00:10:33,319
trick<font color="#E5E5E5"> column and in the money that goes</font>

232
00:10:30,180 --> 00:10:37,229
to<font color="#E5E5E5"> Bob there's a</font><font color="#CCCCCC"> 1 so what</font><font color="#E5E5E5"> he does is</font>

233
00:10:33,320 --> 00:10:39,300
she creates another bundle<font color="#CCCCCC"> which is</font>

234
00:10:37,230 --> 00:10:42,470
<font color="#E5E5E5">exactly the same as the previous bundle</font>

235
00:10:39,300 --> 00:10:45,300
except the<font color="#E5E5E5"> truths are actually swapped</font>

236
00:10:42,470 --> 00:10:47,370
<font color="#E5E5E5">and she creates these</font><font color="#CCCCCC"> bundles in a way</font>

237
00:10:45,300 --> 00:10:51,510
such<font color="#CCCCCC"> that they have the same hash under</font>

238
00:10:47,370 --> 00:10:53,880
curl<font color="#E5E5E5"> p27</font><font color="#CCCCCC"> what this does is this creates</font>

239
00:10:51,510 --> 00:10:56,550
a malicious bundle in which Eve gets

240
00:10:53,880 --> 00:10:58,110
this large<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> money in</font><font color="#CCCCCC"> iota turn</font>

241
00:10:56,550 --> 00:11:00,089
in<font color="#E5E5E5"> USD terms it's around</font><font color="#CCCCCC"> 2 million</font>

242
00:10:58,110 --> 00:11:03,900
<font color="#CCCCCC">dollars and Bob gets a</font><font color="#E5E5E5"> very small amount</font>

243
00:11:00,090 --> 00:11:05,310
<font color="#CCCCCC">of money and of course the blue thing is</font>

244
00:11:03,900 --> 00:11:06,930
the thing that<font color="#E5E5E5"> Bob sees</font>

245
00:11:05,310 --> 00:11:10,349
the red thing<font color="#CCCCCC"> is the thing that</font><font color="#E5E5E5"> you've</font>

246
00:11:06,930 --> 00:11:11,550
actually broadcasts<font color="#E5E5E5"> now it's important</font>

247
00:11:10,350 --> 00:11:14,759
to<font color="#E5E5E5"> note that there are some limitations</font>

248
00:11:11,550 --> 00:11:17,758
to<font color="#CCCCCC"> this technique you know we placed</font>

249
00:11:14,759 --> 00:11:19,920
these differing tricks<font color="#CCCCCC"> in the value</font>

250
00:11:17,759 --> 00:11:21,600
fields of the bundles<font color="#CCCCCC"> you could probably</font>

251
00:11:19,920 --> 00:11:23,099
<font color="#E5E5E5">put them in different places but there</font>

252
00:11:21,600 --> 00:11:26,399
are<font color="#E5E5E5"> some sort of limitations about where</font>

253
00:11:23,100 --> 00:11:28,199
you can do this<font color="#E5E5E5"> and now I would</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> to</font>

254
00:11:26,399 --> 00:11:29,370
<font color="#CCCCCC">hand this over to my colleague Ethan</font>

255
00:11:28,199 --> 00:11:36,800
<font color="#CCCCCC">who's going to talk</font><font color="#E5E5E5"> about the hash</font>

256
00:11:29,370 --> 00:11:40,740
function<font color="#E5E5E5"> thank you so as</font><font color="#CCCCCC"> Neha just said</font>

257
00:11:36,800 --> 00:11:43,469
<font color="#E5E5E5">to do this signature forgery attack</font><font color="#CCCCCC"> we</font>

258
00:11:40,740 --> 00:11:46,800
need to create colliding colliding

259
00:11:43,470 --> 00:11:50,939
bundles<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> this what this means is</font>

260
00:11:46,800 --> 00:11:52,740
that we<font color="#CCCCCC"> have two</font><font color="#E5E5E5"> different messages</font>

261
00:11:50,939 --> 00:11:55,769
they're<font color="#CCCCCC"> different</font><font color="#E5E5E5"> and when</font><font color="#CCCCCC"> you hash them</font>

262
00:11:52,740 --> 00:11:58,639
<font color="#E5E5E5">the hash to the same value so let's take</font>

263
00:11:55,769 --> 00:12:02,999
a closer<font color="#CCCCCC"> look at curl</font><font color="#E5E5E5"> p27</font>

264
00:11:58,639 --> 00:12:05,759
<font color="#E5E5E5">curl</font><font color="#CCCCCC"> p27 is bill on the sponge</font>

265
00:12:02,999 --> 00:12:07,079
construction<font color="#E5E5E5"> some people may be aware of</font>

266
00:12:05,759 --> 00:12:10,879
what the sponge construction is some

267
00:12:07,079 --> 00:12:15,899
people may<font color="#E5E5E5"> not but it was used in sha-3</font>

268
00:12:10,879 --> 00:12:17,939
and the important detail is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

269
00:12:15,899 --> 00:12:21,269
when you hash<font color="#E5E5E5"> your message you break</font>

270
00:12:17,939 --> 00:12:23,610
<font color="#CCCCCC">into</font><font color="#E5E5E5"> message blocks</font><font color="#CCCCCC"> and then you process</font>

271
00:12:21,269 --> 00:12:26,670
<font color="#CCCCCC">the message blocks with this transform</font>

272
00:12:23,610 --> 00:12:30,720
function<font color="#CCCCCC"> and then your final</font><font color="#E5E5E5"> output is</font>

273
00:12:26,670 --> 00:12:32,219
the final<font color="#CCCCCC"> transform value</font><font color="#E5E5E5"> and so the</font>

274
00:12:30,720 --> 00:12:34,649
important takeaway<font color="#CCCCCC"> here is that the</font>

275
00:12:32,220 --> 00:12:37,769
<font color="#E5E5E5">security depends on the security of this</font>

276
00:12:34,649 --> 00:12:40,259
transform function<font color="#CCCCCC"> a nyota's transform</font>

277
00:12:37,769 --> 00:12:41,759
function is extremely<font color="#CCCCCC"> simple when we</font>

278
00:12:40,259 --> 00:12:43,620
first looked at it we were like this<font color="#E5E5E5"> is</font>

279
00:12:41,759 --> 00:12:46,259
<font color="#E5E5E5">incredibly simple it's not what you</font>

280
00:12:43,620 --> 00:12:47,759
typically<font color="#E5E5E5"> see in</font><font color="#CCCCCC"> cryptography it's</font>

281
00:12:46,259 --> 00:12:51,120
basically just the repeated application

282
00:12:47,759 --> 00:12:53,610
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> permutation and an sbox</font>

283
00:12:51,120 --> 00:12:57,540
<font color="#CCCCCC">and just by way of example this is what</font>

284
00:12:53,610 --> 00:13:00,259
the<font color="#E5E5E5"> S box inside AES looks like and this</font>

285
00:12:57,540 --> 00:13:04,170
<font color="#E5E5E5">is</font><font color="#CCCCCC"> what the S box inside</font><font color="#E5E5E5"> car looks like</font>

286
00:13:00,259 --> 00:13:07,019
now small s boxes<font color="#CCCCCC"> can be good</font><font color="#E5E5E5"> they can</font>

287
00:13:04,170 --> 00:13:10,529
they they can be used correctly inside

288
00:13:07,019 --> 00:13:13,199
cryptography<font color="#CCCCCC"> but if you're</font><font color="#E5E5E5"> only using an</font>

289
00:13:10,529 --> 00:13:16,550
S box as your cryptographic element and

290
00:13:13,199 --> 00:13:20,510
it's it's<font color="#E5E5E5"> it's tiny like that</font><font color="#CCCCCC"> you're</font>

291
00:13:16,550 --> 00:13:22,250
you're gonna have problems<font color="#CCCCCC"> and please</font>

292
00:13:20,510 --> 00:13:24,230
ask me more<font color="#CCCCCC"> about this in</font><font color="#E5E5E5"> the in the in</font>

293
00:13:22,250 --> 00:13:30,050
the<font color="#E5E5E5"> rap session because I'm I'm really</font>

294
00:13:24,230 --> 00:13:32,240
interested<font color="#E5E5E5"> in it</font><font color="#CCCCCC"> so as a byproduct of</font>

295
00:13:30,050 --> 00:13:35,270
this<font color="#E5E5E5"> I can teach everyone in the room</font><font color="#CCCCCC"> a</font>

296
00:13:32,240 --> 00:13:38,750
really<font color="#E5E5E5"> simple party trick where they can</font>

297
00:13:35,270 --> 00:13:40,670
create colliding bundles for<font color="#CCCCCC"> four Carl</font><font color="#E5E5E5"> P</font>

298
00:13:38,750 --> 00:13:41,180
requires a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit of computation but</font>

299
00:13:40,670 --> 00:13:44,120
it's doable

300
00:13:41,180 --> 00:13:49,760
<font color="#E5E5E5">so just choose a random bundle so choose</font>

301
00:13:44,120 --> 00:13:52,900
a string of<font color="#CCCCCC"> tricks</font><font color="#E5E5E5"> and at the 17th or</font>

302
00:13:49,760 --> 00:13:52,900
26th position

303
00:13:53,150 --> 00:13:59,360
copy<font color="#E5E5E5"> that copy that bundle and just like</font>

304
00:13:56,210 --> 00:14:01,850
flip the<font color="#CCCCCC"> trip</font><font color="#E5E5E5"> so it's exactly the same</font>

305
00:13:59,360 --> 00:14:05,120
except of trade over<font color="#E5E5E5"> here is</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> and the</font>

306
00:14:01,850 --> 00:14:08,270
trade<font color="#E5E5E5"> over here is 1</font><font color="#CCCCCC"> when you hash it</font>

307
00:14:05,120 --> 00:14:12,070
<font color="#E5E5E5">you will likely you will have</font><font color="#CCCCCC"> a</font>

308
00:14:08,270 --> 00:14:12,069
collision<font color="#E5E5E5"> with</font><font color="#CCCCCC"> 1 out of 2 to the</font><font color="#E5E5E5"> 42</font>

309
00:14:12,400 --> 00:14:16,939
<font color="#E5E5E5">probability it's actually this is an</font>

310
00:14:14,150 --> 00:14:19,699
upper bound<font color="#CCCCCC"> so it's it'll take you no</font>

311
00:14:16,940 --> 00:14:21,470
<font color="#E5E5E5">more than this for</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> that are</font>

312
00:14:19,700 --> 00:14:23,600
unfamiliar with cryptography<font color="#E5E5E5"> this is a</font>

313
00:14:21,470 --> 00:14:27,500
very<font color="#E5E5E5"> very low number</font>

314
00:14:23,600 --> 00:14:30,860
I believe the sha-1 attack that<font color="#E5E5E5"> that</font>

315
00:14:27,500 --> 00:14:33,020
<font color="#E5E5E5">Google did is was 2 to the 60 around</font><font color="#CCCCCC"> 2</font>

316
00:14:30,860 --> 00:14:37,700
to the 60 combinations they performed

317
00:14:33,020 --> 00:14:40,730
and the Bitcoin<font color="#CCCCCC"> network does</font><font color="#E5E5E5"> 2 to the 80</font>

318
00:14:37,700 --> 00:14:42,370
computations every<font color="#CCCCCC"> 3 seconds</font><font color="#E5E5E5"> around</font>

319
00:14:40,730 --> 00:14:45,650
<font color="#CCCCCC">that's probably gotten a</font><font color="#E5E5E5"> little bit</font>

320
00:14:42,370 --> 00:14:47,770
faster since then but<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually</font>

321
00:14:45,650 --> 00:14:50,449
<font color="#E5E5E5">make this attack much better by being</font>

322
00:14:47,770 --> 00:14:53,150
clever about<font color="#CCCCCC"> how we choose our message</font>

323
00:14:50,450 --> 00:14:55,370
so<font color="#CCCCCC"> if we choose our message and</font><font color="#E5E5E5"> we don't</font>

324
00:14:53,150 --> 00:14:57,550
just<font color="#CCCCCC"> randomly sample a message we can</font>

325
00:14:55,370 --> 00:15:00,530
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> get this down to</font><font color="#CCCCCC"> 1 out of</font>

326
00:14:57,550 --> 00:15:03,020
around<font color="#CCCCCC"> 7 million</font><font color="#E5E5E5"> so you have a 1 out of</font>

327
00:15:00,530 --> 00:15:05,270
7 million chance of a collision<font color="#E5E5E5"> in</font>

328
00:15:03,020 --> 00:15:11,030
cryptographic terms this<font color="#CCCCCC"> is 23 bit</font>

329
00:15:05,270 --> 00:15:13,569
collision resistance but<font color="#E5E5E5"> no a 1 out of 7</font>

330
00:15:11,030 --> 00:15:15,230
million<font color="#E5E5E5"> seven point six million</font>

331
00:15:13,570 --> 00:15:17,540
<font color="#E5E5E5">probability still means you're gonna</font>

332
00:15:15,230 --> 00:15:19,160
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to try this a couple of times you</font>

333
00:15:17,540 --> 00:15:20,959
can you know computers<font color="#E5E5E5"> are great at</font>

334
00:15:19,160 --> 00:15:22,969
doing things but you're<font color="#E5E5E5"> probably not</font>

335
00:15:20,960 --> 00:15:25,940
gonna win on<font color="#CCCCCC"> your first attempt so we</font>

336
00:15:22,970 --> 00:15:27,890
need some<font color="#E5E5E5"> way of taking bundles and not</font>

337
00:15:25,940 --> 00:15:29,560
really<font color="#E5E5E5"> changing their meaning but just</font>

338
00:15:27,890 --> 00:15:33,819
like rerunning the attack

339
00:15:29,560 --> 00:15:35,888
and it turns out<font color="#E5E5E5"> that iota has a field</font>

340
00:15:33,819 --> 00:15:37,509
inside of bundles the field actually

341
00:15:35,889 --> 00:15:40,600
<font color="#E5E5E5">occurs</font><font color="#CCCCCC"> multiple times called the tag</font>

342
00:15:37,509 --> 00:15:42,540
field<font color="#CCCCCC"> and the tag field</font><font color="#E5E5E5"> is completely</font>

343
00:15:40,600 --> 00:15:45,519
meaningless it<font color="#E5E5E5"> is no impact on validity</font>

344
00:15:42,540 --> 00:15:47,079
<font color="#CCCCCC">it really does it really does nothing a</font>

345
00:15:45,519 --> 00:15:50,129
lot<font color="#CCCCCC"> of people in iota will put little</font>

346
00:15:47,079 --> 00:15:52,569
<font color="#E5E5E5">messages in the tag field</font><font color="#CCCCCC"> send it around</font>

347
00:15:50,129 --> 00:15:53,889
<font color="#CCCCCC">send the</font><font color="#E5E5E5"> ten messages</font><font color="#CCCCCC"> to each other so</font>

348
00:15:52,569 --> 00:15:56,498
<font color="#CCCCCC">you can just totally</font><font color="#E5E5E5"> change the tag</font>

349
00:15:53,889 --> 00:15:59,949
field<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it'll have no no impact</font>

350
00:15:56,499 --> 00:16:01,899
whatsoever<font color="#CCCCCC"> so to do this to perform this</font>

351
00:15:59,949 --> 00:16:05,559
attack enough times<font color="#E5E5E5"> to have a high</font>

352
00:16:01,899 --> 00:16:08,220
probability<font color="#E5E5E5"> of collision</font><font color="#CCCCCC"> we just change</font>

353
00:16:05,559 --> 00:16:12,309
<font color="#CCCCCC">the tag field and try again</font>

354
00:16:08,220 --> 00:16:15,639
my colleague<font color="#CCCCCC"> neha will show a demo of</font>

355
00:16:12,309 --> 00:16:19,420
this<font color="#E5E5E5"> yeah so this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> demo of our</font>

356
00:16:15,639 --> 00:16:21,670
attack so we're running this on an<font color="#CCCCCC"> 84</font>

357
00:16:19,420 --> 00:16:24,128
machine<font color="#CCCCCC"> and what's happening</font><font color="#E5E5E5"> here is we</font>

358
00:16:21,670 --> 00:16:25,449
<font color="#CCCCCC">are causing</font><font color="#E5E5E5"> collisions and we're causing</font>

359
00:16:24,129 --> 00:16:27,970
different<font color="#CCCCCC"> traits in two different</font><font color="#E5E5E5"> places</font>

360
00:16:25,449 --> 00:16:28,449
we have to run<font color="#E5E5E5"> this twice this</font><font color="#CCCCCC"> is all 80</font>

361
00:16:27,970 --> 00:16:30,279
cores

362
00:16:28,449 --> 00:16:32,170
going nuts<font color="#E5E5E5"> generating the first</font>

363
00:16:30,279 --> 00:16:35,079
collision<font color="#E5E5E5"> it happens really quickly</font>

364
00:16:32,170 --> 00:16:37,120
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> and now it's working on</font>

365
00:16:35,079 --> 00:16:38,529
generating the second<font color="#CCCCCC"> collision</font><font color="#E5E5E5"> so we</font>

366
00:16:37,120 --> 00:16:42,670
found the first collision<font color="#CCCCCC"> in about</font><font color="#E5E5E5"> three</font>

367
00:16:38,529 --> 00:16:44,709
seconds<font color="#CCCCCC"> using 80 cores and it's gonna</font>

368
00:16:42,670 --> 00:16:45,370
find the second collision<font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> now</font>

369
00:16:44,709 --> 00:16:48,279
<font color="#CCCCCC">okay</font>

370
00:16:45,370 --> 00:16:51,399
that took<font color="#E5E5E5"> about 23 seconds on average on</font>

371
00:16:48,279 --> 00:16:54,059
80 cores<font color="#E5E5E5"> it's around 30 seconds</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> what</font>

372
00:16:51,399 --> 00:16:56,920
we found<font color="#E5E5E5"> running</font><font color="#CCCCCC"> it about 5,000 times</font>

373
00:16:54,059 --> 00:16:58,930
<font color="#E5E5E5">and then what happened here is that</font><font color="#CCCCCC"> it's</font>

374
00:16:56,920 --> 00:17:01,360
fit out<font color="#E5E5E5"> the tags that you needed in</font>

375
00:16:58,930 --> 00:17:03,939
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> cause a collision for these two</font>

376
00:17:01,360 --> 00:17:05,380
different<font color="#E5E5E5"> bundles to make them hash to</font>

377
00:17:03,939 --> 00:17:07,449
this same thing

378
00:17:05,380 --> 00:17:09,549
let me ran some validation<font color="#E5E5E5"> code on the</font>

379
00:17:07,449 --> 00:17:11,799
two<font color="#CCCCCC"> bundles</font><font color="#E5E5E5"> and what we see here is yes</font>

380
00:17:09,549 --> 00:17:14,770
in fact they differ<font color="#E5E5E5"> in two</font><font color="#CCCCCC"> different</font>

381
00:17:11,799 --> 00:17:16,929
places<font color="#E5E5E5"> in the value field and in the</font>

382
00:17:14,770 --> 00:17:18,549
first bundle Bob gets a lot of<font color="#E5E5E5"> money and</font>

383
00:17:16,929 --> 00:17:20,409
you doesn't get<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much and in the</font>

384
00:17:18,549 --> 00:17:22,750
<font color="#E5E5E5">second</font><font color="#CCCCCC"> bundle</font><font color="#E5E5E5"> it gets all the money and</font>

385
00:17:20,409 --> 00:17:24,970
<font color="#E5E5E5">Bob doesn't get</font><font color="#CCCCCC"> very much and the two</font>

386
00:17:22,750 --> 00:17:27,990
bundles hash to the same value under

387
00:17:24,970 --> 00:17:27,990
<font color="#E5E5E5">curl p27</font>

388
00:17:32,980 --> 00:17:38,140
so we<font color="#CCCCCC"> disclosed</font><font color="#E5E5E5"> this motor ability to</font>

389
00:17:35,260 --> 00:17:42,580
<font color="#CCCCCC">that of developers back in</font><font color="#E5E5E5"> July</font><font color="#CCCCCC"> of last</font>

390
00:17:38,140 --> 00:17:45,070
year<font color="#CCCCCC"> and over several months they fix</font>

391
00:17:42,580 --> 00:17:48,370
this<font color="#CCCCCC"> and what they did is they replaced</font>

392
00:17:45,070 --> 00:17:50,470
curl in signature in signature

393
00:17:48,370 --> 00:17:53,770
generation with a hash<font color="#CCCCCC"> function that</font>

394
00:17:50,470 --> 00:17:57,190
<font color="#E5E5E5">they called curl</font><font color="#CCCCCC"> put curl with a</font><font color="#E5E5E5"> K which</font>

395
00:17:53,770 --> 00:18:00,610
<font color="#CCCCCC">is a variant of ket check we note</font><font color="#E5E5E5"> that</font>

396
00:17:57,190 --> 00:18:02,680
they have an entirely removed curl curl

397
00:18:00,610 --> 00:18:06,370
is still used in milestone verification

398
00:18:02,680 --> 00:18:08,350
<font color="#E5E5E5">and a version of curl with more rounds</font>

399
00:18:06,370 --> 00:18:11,050
is actually used for<font color="#E5E5E5"> some other purposes</font>

400
00:18:08,350 --> 00:18:14,250
<font color="#E5E5E5">but we don't present any attacks against</font>

401
00:18:11,050 --> 00:18:14,250
these uses<font color="#E5E5E5"> of curl</font><font color="#CCCCCC"> in this talk</font>

402
00:18:14,730 --> 00:18:21,670
<font color="#CCCCCC">interestingly</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> we we disclosed it</font>

403
00:18:19,660 --> 00:18:24,370
to them they fixed it we went<font color="#E5E5E5"> public</font>

404
00:18:21,670 --> 00:18:27,400
with<font color="#E5E5E5"> the vulnerability they wrote they</font>

405
00:18:24,370 --> 00:18:29,649
wrote<font color="#E5E5E5"> this response to</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> vulnerability</font>

406
00:18:27,400 --> 00:18:31,960
disclosure<font color="#E5E5E5"> and they said croupy was</font>

407
00:18:29,650 --> 00:18:34,120
indeed deployed in the<font color="#CCCCCC"> open-source iota</font>

408
00:18:31,960 --> 00:18:36,430
protocol<font color="#E5E5E5"> code as a copy protection</font>

409
00:18:34,120 --> 00:18:38,110
mechanism to<font color="#E5E5E5"> prevent that actors cloning</font>

410
00:18:36,430 --> 00:18:41,170
the protocol<font color="#E5E5E5"> and using it for nefarious</font>

411
00:18:38,110 --> 00:18:43,659
<font color="#CCCCCC">purposes and then responding to a public</font>

412
00:18:41,170 --> 00:18:45,490
statement I made asking<font color="#CCCCCC"> if this was a</font>

413
00:18:43,660 --> 00:18:46,810
copy protection<font color="#E5E5E5"> backdoor in iota</font>

414
00:18:45,490 --> 00:18:49,600
they said the answer to the first

415
00:18:46,810 --> 00:18:52,120
question is of<font color="#E5E5E5"> course yes</font><font color="#CCCCCC"> so we don't</font>

416
00:18:49,600 --> 00:18:53,620
know with we can't really know<font color="#CCCCCC"> they're</font>

417
00:18:52,120 --> 00:18:56,110
<font color="#E5E5E5">in their intentions it doesn't look like</font>

418
00:18:53,620 --> 00:18:57,550
a backdoor to<font color="#E5E5E5"> me</font><font color="#CCCCCC"> but they have at</font><font color="#E5E5E5"> least</font>

419
00:18:56,110 --> 00:18:59,290
publicly<font color="#E5E5E5"> claimed that this was an</font>

420
00:18:57,550 --> 00:19:02,290
<font color="#E5E5E5">intentional vulnerability they moved</font>

421
00:18:59,290 --> 00:19:04,240
<font color="#CCCCCC">into</font><font color="#E5E5E5"> their code</font><font color="#CCCCCC"> they argue that</font><font color="#E5E5E5"> they</font>

422
00:19:02,290 --> 00:19:07,270
have this<font color="#CCCCCC"> closed source component called</font>

423
00:19:04,240 --> 00:19:10,270
a coordinator that<font color="#CCCCCC"> would prevent our</font>

424
00:19:07,270 --> 00:19:12,240
attack from working<font color="#E5E5E5"> but we can inspect</font>

425
00:19:10,270 --> 00:19:14,530
the coordinator as it is closed source

426
00:19:12,240 --> 00:19:17,650
<font color="#CCCCCC">but we see no reason why our attack</font>

427
00:19:14,530 --> 00:19:19,750
would not work<font color="#E5E5E5"> and it's unclear to</font><font color="#CCCCCC"> us</font>

428
00:19:17,650 --> 00:19:21,640
how<font color="#E5E5E5"> their coordinator would prevent our</font>

429
00:19:19,750 --> 00:19:24,490
attack<font color="#E5E5E5"> from functioning you can actually</font>

430
00:19:21,640 --> 00:19:26,170
read their full statement here<font color="#E5E5E5"> if you if</font>

431
00:19:24,490 --> 00:19:28,560
you want to go through it it's it's

432
00:19:26,170 --> 00:19:28,560
pretty<font color="#E5E5E5"> interesting</font>

433
00:19:29,670 --> 00:19:36,460
so we exploited a weakness and<font color="#CCCCCC"> curl p27</font>

434
00:19:33,880 --> 00:19:38,140
to create chosen message signature<font color="#E5E5E5"> for</font>

435
00:19:36,460 --> 00:19:40,570
<font color="#E5E5E5">tree attacks we did this for both</font>

436
00:19:38,140 --> 00:19:42,190
multi-sig and non multi-sig we've

437
00:19:40,570 --> 00:19:44,379
presented multi-sig here because it

438
00:19:42,190 --> 00:19:45,490
<font color="#E5E5E5">really fits with our attack scenario</font>

439
00:19:44,380 --> 00:19:47,710
which is<font color="#E5E5E5"> one of the</font><font color="#CCCCCC"> Cho</font>

440
00:19:45,490 --> 00:19:49,950
message in multi-sig one party chooses

441
00:19:47,710 --> 00:19:53,340
<font color="#E5E5E5">the message and the</font><font color="#CCCCCC"> other party signs</font>

442
00:19:49,950 --> 00:19:56,920
<font color="#CCCCCC">but we also have this attack working for</font>

443
00:19:53,340 --> 00:19:58,360
regular<font color="#CCCCCC"> ngon</font><font color="#E5E5E5"> multi-sig</font><font color="#CCCCCC"> I think an</font>

444
00:19:56,920 --> 00:20:01,630
important<font color="#CCCCCC"> takeaway is don't really grow</font>

445
00:19:58,360 --> 00:20:04,300
<font color="#CCCCCC">in crypto hash functions are incredibly</font>

446
00:20:01,630 --> 00:20:06,820
<font color="#E5E5E5">hard to design md5 was broken shot one</font>

447
00:20:04,300 --> 00:20:09,220
was broken<font color="#CCCCCC"> you know very smart people</font>

448
00:20:06,820 --> 00:20:11,169
<font color="#CCCCCC">working over long periods of time have</font>

449
00:20:09,220 --> 00:20:13,480
<font color="#E5E5E5">trouble getting this right so you really</font>

450
00:20:11,170 --> 00:20:15,429
shouldn't<font color="#E5E5E5"> do this yourself</font><font color="#CCCCCC"> and then</font>

451
00:20:13,480 --> 00:20:17,860
<font color="#E5E5E5">additionally this is a this was an</font>

452
00:20:15,429 --> 00:20:19,630
attack talk but both me and<font color="#CCCCCC"> a-ha</font><font color="#E5E5E5"> are</font>

453
00:20:17,860 --> 00:20:23,169
really excited about crypto currencies

454
00:20:19,630 --> 00:20:26,110
<font color="#E5E5E5">and what they can do there's they're</font>

455
00:20:23,170 --> 00:20:27,520
doing new interesting<font color="#E5E5E5"> things with</font>

456
00:20:26,110 --> 00:20:29,559
cryptography<font color="#CCCCCC"> they're sort</font><font color="#E5E5E5"> of pushing</font>

457
00:20:27,520 --> 00:20:33,600
security<font color="#E5E5E5"> forward so I invite everyone in</font>

458
00:20:29,559 --> 00:20:39,270
the room<font color="#CCCCCC"> to look at crypto currencies</font>

459
00:20:33,600 --> 00:20:42,159
<font color="#CCCCCC">try to figure</font><font color="#E5E5E5"> out any interesting</font>

460
00:20:39,270 --> 00:20:44,700
<font color="#E5E5E5">attacks or new ways of</font><font color="#CCCCCC"> using security to</font>

461
00:20:42,160 --> 00:20:49,540
help<font color="#E5E5E5"> them they're</font><font color="#CCCCCC"> just a</font><font color="#E5E5E5"> fascinating</font>

462
00:20:44,700 --> 00:20:53,320
subject<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> publishing</font><font color="#E5E5E5"> our paper that</font>

463
00:20:49,540 --> 00:20:56,080
<font color="#E5E5E5">describes these cryptanalytic attacks we</font>

464
00:20:53,320 --> 00:20:58,149
have<font color="#E5E5E5"> proofs of concept</font><font color="#CCCCCC"> tangled</font><font color="#E5E5E5"> curl and</font>

465
00:20:56,080 --> 00:21:01,629
<font color="#E5E5E5">we also are releasing our tools that we</font>

466
00:20:58,150 --> 00:21:06,309
use our cryptanalytic tools and tools

467
00:21:01,630 --> 00:21:08,530
that<font color="#E5E5E5"> you can also use to</font><font color="#CCCCCC"> verify that you</font>

468
00:21:06,309 --> 00:21:17,410
can use to create collisions and<font color="#E5E5E5"> forged</font>

469
00:21:08,530 --> 00:21:19,270
signatures thank you so<font color="#E5E5E5"> yeah I just want</font>

470
00:21:17,410 --> 00:21:20,710
to reiterate<font color="#E5E5E5"> with even said we're all</font>

471
00:21:19,270 --> 00:21:22,179
both really<font color="#E5E5E5"> interested in this and we</font>

472
00:21:20,710 --> 00:21:23,679
<font color="#E5E5E5">think the cryptocurrency community has a</font>

473
00:21:22,179 --> 00:21:25,510
lot<font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn</font><font color="#CCCCCC"> from the security community</font>

474
00:21:23,679 --> 00:21:27,730
<font color="#CCCCCC">so if you're interested in influencing</font>

475
00:21:25,510 --> 00:21:31,510
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you should come talk to us</font><font color="#CCCCCC"> so now</font>

476
00:21:27,730 --> 00:21:33,490
questions<font color="#E5E5E5"> yeah thanks for</font><font color="#CCCCCC"> the great</font>

477
00:21:31,510 --> 00:21:36,450
presentation I<font color="#E5E5E5"> would have a question</font>

478
00:21:33,490 --> 00:21:38,890
was there any multi signature code

479
00:21:36,450 --> 00:21:41,650
<font color="#CCCCCC">available at the time you did research I</font>

480
00:21:38,890 --> 00:21:44,950
checked a<font color="#E5E5E5"> yachtie github and none of the</font>

481
00:21:41,650 --> 00:21:46,990
tooling available at the<font color="#E5E5E5"> time was able</font>

482
00:21:44,950 --> 00:21:49,720
to<font color="#E5E5E5"> do multi signature so how could this</font>

483
00:21:46,990 --> 00:21:51,820
attack being done in practice<font color="#E5E5E5"> except</font>

484
00:21:49,720 --> 00:21:53,650
<font color="#CCCCCC">there was no user tooling so that's an</font>

485
00:21:51,820 --> 00:21:55,178
that's<font color="#CCCCCC"> in which you</font><font color="#E5E5E5"> could do multi</font>

486
00:21:53,650 --> 00:21:57,550
<font color="#CCCCCC">Singers that's an excellent excellent</font>

487
00:21:55,179 --> 00:21:59,800
question<font color="#E5E5E5"> so you're asking was multi</font>

488
00:21:57,550 --> 00:22:04,060
signature code<font color="#E5E5E5"> avail</font>

489
00:21:59,800 --> 00:22:06,430
and let's see<font color="#E5E5E5"> here we go so our way</font>

490
00:22:04,060 --> 00:22:09,879
earlier than<font color="#CCCCCC"> our attack one of the iota</font>

491
00:22:06,430 --> 00:22:12,220
founders<font color="#E5E5E5"> tweeted that he had performed</font>

492
00:22:09,880 --> 00:22:15,400
the first successful multi signature

493
00:22:12,220 --> 00:22:17,200
transfer in iota<font color="#CCCCCC"> they had library code</font>

494
00:22:15,400 --> 00:22:19,770
<font color="#E5E5E5">and instructions</font><font color="#CCCCCC"> for doing this they</font>

495
00:22:17,200 --> 00:22:22,690
were encouraging people<font color="#E5E5E5"> to use multi-sig</font>

496
00:22:19,770 --> 00:22:24,700
<font color="#CCCCCC">we looked at the</font><font color="#E5E5E5"> table and determining</font>

497
00:22:22,690 --> 00:22:27,420
multi signature transactions<font color="#E5E5E5"> from non</font>

498
00:22:24,700 --> 00:22:29,950
multi signature transactions<font color="#E5E5E5"> is is hard</font>

499
00:22:27,420 --> 00:22:31,900
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we were</font><font color="#CCCCCC"> able to identify</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> least</font>

500
00:22:29,950 --> 00:22:36,100
eight multi signature transactions in

501
00:22:31,900 --> 00:22:38,920
the tangle<font color="#CCCCCC"> prior to the patch being made</font>

502
00:22:36,100 --> 00:22:40,389
available you know I was<font color="#CCCCCC"> wondering if</font>

503
00:22:38,920 --> 00:22:42,880
you could tell us<font color="#E5E5E5"> a little bit more</font>

504
00:22:40,390 --> 00:22:46,690
about maybe or describe a scenario for

505
00:22:42,880 --> 00:22:48,280
<font color="#E5E5E5">non multi-sig that that would be</font>

506
00:22:46,690 --> 00:22:50,140
adversarial<font color="#E5E5E5"> in nature</font><font color="#CCCCCC"> just so that we</font>

507
00:22:48,280 --> 00:22:52,030
could<font color="#E5E5E5"> kind of understand better other</font>

508
00:22:50,140 --> 00:22:55,480
ways<font color="#E5E5E5"> that this exploit could be used</font>

509
00:22:52,030 --> 00:22:58,120
that are maybe more practical<font color="#CCCCCC"> and then I</font>

510
00:22:55,480 --> 00:23:00,640
also wanted<font color="#E5E5E5"> to ask you about the ke RL</font>

511
00:22:58,120 --> 00:23:03,010
function and<font color="#E5E5E5"> just is that any better and</font>

512
00:23:00,640 --> 00:23:09,040
if so how<font color="#E5E5E5"> much</font><font color="#CCCCCC"> and does it</font><font color="#E5E5E5"> still roll</font>

513
00:23:03,010 --> 00:23:12,160
your own problem or yeah<font color="#CCCCCC"> sure so the non</font>

514
00:23:09,040 --> 00:23:14,170
multi-sig scenario involves a party

515
00:23:12,160 --> 00:23:16,020
convincing another party to sign a

516
00:23:14,170 --> 00:23:21,490
transaction<font color="#CCCCCC"> that the first party eve</font>

517
00:23:16,020 --> 00:23:25,330
created there are scenarios in which

518
00:23:21,490 --> 00:23:27,480
this<font color="#E5E5E5"> could happen for example say like</font>

519
00:23:25,330 --> 00:23:30,909
hardware wallets<font color="#E5E5E5"> but it's not as</font>

520
00:23:27,480 --> 00:23:34,080
<font color="#E5E5E5">practical as a</font><font color="#CCCCCC"> multi sig which has like</font>

521
00:23:30,910 --> 00:23:36,460
that<font color="#CCCCCC"> build</font><font color="#E5E5E5"> team user flow of sign and</font>

522
00:23:34,080 --> 00:23:40,030
<font color="#E5E5E5">create and then ask the other party to</font>

523
00:23:36,460 --> 00:23:47,200
sign<font color="#CCCCCC"> your second question which was</font>

524
00:23:40,030 --> 00:23:50,770
<font color="#E5E5E5">about the TRL curl with</font><font color="#CCCCCC"> Kay</font><font color="#E5E5E5"> it's the</font>

525
00:23:47,200 --> 00:23:53,050
transform<font color="#CCCCCC"> function is a</font><font color="#E5E5E5"> check but</font><font color="#CCCCCC"> a</font>

526
00:23:50,770 --> 00:23:57,370
version<font color="#E5E5E5"> of tech check from 2011 it's</font>

527
00:23:53,050 --> 00:23:59,620
probably good<font color="#E5E5E5"> it's not exactly sha</font><font color="#CCCCCC"> 3 but</font>

528
00:23:57,370 --> 00:24:01,239
they are<font color="#E5E5E5"> doing some slight slight</font>

529
00:23:59,620 --> 00:24:03,580
differences on this<font color="#E5E5E5"> one construction</font><font color="#CCCCCC"> I</font>

530
00:24:01,240 --> 00:24:06,160
don't see any reason<font color="#CCCCCC"> why it wouldn't be</font>

531
00:24:03,580 --> 00:24:07,780
secure in that setting<font color="#E5E5E5"> but it is a</font>

532
00:24:06,160 --> 00:24:11,970
little<font color="#E5E5E5"> bit different than what you'd get</font>

533
00:24:07,780 --> 00:24:11,970
if they had just shoved<font color="#E5E5E5"> cha 3 in there</font>

534
00:24:14,490 --> 00:24:18,180
great<font color="#E5E5E5"> thank you</font>

