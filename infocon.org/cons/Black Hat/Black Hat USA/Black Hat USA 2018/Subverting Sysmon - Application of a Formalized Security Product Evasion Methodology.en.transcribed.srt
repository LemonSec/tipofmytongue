1
00:00:00,000 --> 00:00:04,980
<font color="#E5E5E5">all right so today we're going to be</font>

2
00:00:01,560 --> 00:00:08,429
talking about<font color="#CCCCCC"> methodology for auditing</font>

3
00:00:04,980 --> 00:00:10,740
<font color="#CCCCCC">in</font><font color="#E5E5E5"> this case endpoint security products</font>

4
00:00:08,429 --> 00:00:13,710
<font color="#E5E5E5">the particularly use case</font><font color="#CCCCCC"> that we'll be</font>

5
00:00:10,740 --> 00:00:16,320
referring<font color="#CCCCCC"> to is</font><font color="#E5E5E5"> sis Mon here but really</font>

6
00:00:13,710 --> 00:00:18,570
the methodology that<font color="#E5E5E5"> we cover</font><font color="#CCCCCC"> could</font>

7
00:00:16,320 --> 00:00:20,580
<font color="#E5E5E5">absolutely be applied to any endpoint</font>

8
00:00:18,570 --> 00:00:23,010
security product out there<font color="#E5E5E5"> so we're</font>

9
00:00:20,580 --> 00:00:25,459
<font color="#CCCCCC">definitely not here</font><font color="#E5E5E5"> today to pick on sis</font>

10
00:00:23,010 --> 00:00:27,689
<font color="#E5E5E5">Mon per se</font><font color="#CCCCCC"> some of the tradecraft and</font>

11
00:00:25,460 --> 00:00:28,050
bypasses<font color="#E5E5E5"> and evasions that we'll talk</font>

12
00:00:27,689 --> 00:00:30,439
<font color="#E5E5E5">about</font>

13
00:00:28,050 --> 00:00:33,329
<font color="#E5E5E5">will absolutely apply to other products</font>

14
00:00:30,439 --> 00:00:36,210
so my name<font color="#E5E5E5"> is Matt</font><font color="#CCCCCC"> Graber I'm a</font><font color="#E5E5E5"> security</font>

15
00:00:33,329 --> 00:00:37,680
researcher<font color="#E5E5E5"> at</font><font color="#CCCCCC"> Specter ops I've also been</font>

16
00:00:36,210 --> 00:00:39,510
involved in a good<font color="#E5E5E5"> amount of threat</font>

17
00:00:37,680 --> 00:00:42,840
hunting work recently<font color="#E5E5E5"> which I really</font>

18
00:00:39,510 --> 00:00:45,839
enjoy<font color="#CCCCCC"> traditionally more offensively</font>

19
00:00:42,840 --> 00:00:47,879
minded but getting<font color="#CCCCCC"> to apply that in a</font>

20
00:00:45,840 --> 00:00:49,590
<font color="#CCCCCC">threatening</font><font color="#E5E5E5"> threat hunting scenario has</font>

21
00:00:47,879 --> 00:00:52,019
been a ton of fun<font color="#CCCCCC"> and has been really</font>

22
00:00:49,590 --> 00:00:55,680
<font color="#CCCCCC">eye-opening and</font><font color="#E5E5E5"> really serves to make me</font>

23
00:00:52,020 --> 00:00:58,410
a<font color="#E5E5E5"> better red teamer so I also really</font>

24
00:00:55,680 --> 00:01:01,379
<font color="#CCCCCC">enjoyed burning tradecraft publicly</font>

25
00:00:58,410 --> 00:01:04,048
<font color="#CCCCCC">I would rather you know</font><font color="#E5E5E5"> nation-state</font>

26
00:01:01,379 --> 00:01:05,188
adversaries not have complete<font color="#E5E5E5"> control</font>

27
00:01:04,049 --> 00:01:07,020
over tradecraft

28
00:01:05,188 --> 00:01:09,210
not to say<font color="#E5E5E5"> that you know ours</font><font color="#CCCCCC"> is the</font>

29
00:01:07,020 --> 00:01:11,520
caliber of nation-states<font color="#E5E5E5"> but anything</font>

30
00:01:09,210 --> 00:01:14,100
that<font color="#E5E5E5"> we can get out there we try to be</font>

31
00:01:11,520 --> 00:01:15,270
as transparent as possible<font color="#CCCCCC"> which</font><font color="#E5E5E5"> will</font>

32
00:01:14,100 --> 00:01:16,520
include some<font color="#E5E5E5"> of the tradecraft that</font>

33
00:01:15,270 --> 00:01:19,619
we'll cover<font color="#CCCCCC"> today</font>

34
00:01:16,520 --> 00:01:22,380
my name is<font color="#E5E5E5"> Lee</font><font color="#CCCCCC"> Kristensen</font><font color="#E5E5E5"> I am a</font>

35
00:01:19,619 --> 00:01:25,049
security<font color="#CCCCCC"> researcher and operator at</font>

36
00:01:22,380 --> 00:01:28,199
<font color="#CCCCCC">Specter ops so things that includes is</font>

37
00:01:25,049 --> 00:01:30,780
red teaming thread hunt hunting and I

38
00:01:28,200 --> 00:01:33,659
just do<font color="#CCCCCC"> a security research at when I</font>

39
00:01:30,780 --> 00:01:36,110
can so I really like shiny security

40
00:01:33,659 --> 00:01:38,369
things whatever<font color="#E5E5E5"> it may be that's why I</font>

41
00:01:36,110 --> 00:01:40,680
hold no allegiance<font color="#E5E5E5"> to the red or blue</font>

42
00:01:38,369 --> 00:01:42,990
side<font color="#E5E5E5"> just any fascinating security</font>

43
00:01:40,680 --> 00:01:45,540
product that's out there<font color="#CCCCCC"> I like</font><font color="#E5E5E5"> to go</font>

44
00:01:42,990 --> 00:01:47,850
after<font color="#E5E5E5"> and some of you may be wondering</font>

45
00:01:45,540 --> 00:01:51,149
<font color="#E5E5E5">why we're wearing these ridiculous</font>

46
00:01:47,850 --> 00:01:54,059
outfits<font color="#E5E5E5"> well this is all for</font><font color="#CCCCCC"> charity and</font>

47
00:01:51,149 --> 00:01:56,610
we have some big<font color="#E5E5E5"> thank yous that we need</font>

48
00:01:54,060 --> 00:01:58,590
to throw<font color="#E5E5E5"> out</font><font color="#CCCCCC"> for we a berry blow dart on</font>

49
00:01:56,610 --> 00:02:02,009
Twitter<font color="#E5E5E5"> for kicking off the charity</font>

50
00:01:58,590 --> 00:02:03,930
<font color="#E5E5E5">event</font><font color="#CCCCCC"> at Dave Kennedy</font><font color="#E5E5E5"> and that and skip</font>

51
00:02:02,009 --> 00:02:05,820
<font color="#CCCCCC">tuck</font><font color="#E5E5E5"> wall for some major contributions</font>

52
00:02:03,930 --> 00:02:07,890
<font color="#E5E5E5">and of course thanks</font><font color="#CCCCCC"> to everybody who</font>

53
00:02:05,820 --> 00:02:08,489
contributed<font color="#CCCCCC"> to the charity drive this is</font>

54
00:02:07,890 --> 00:02:10,770
for MDA

55
00:02:08,489 --> 00:02:13,290
I will have a link<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> end but if any</font>

56
00:02:10,770 --> 00:02:13,709
of<font color="#E5E5E5"> you feel free feel</font><font color="#CCCCCC"> free to contribute</font>

57
00:02:13,290 --> 00:02:15,239
<font color="#E5E5E5">to the</font>

58
00:02:13,709 --> 00:02:17,219
charity it's something that's dear to<font color="#E5E5E5"> us</font>

59
00:02:15,239 --> 00:02:19,170
<font color="#E5E5E5">and our teams though appreciate any</font>

60
00:02:17,219 --> 00:02:21,239
donations<font color="#E5E5E5"> just so you know this is like</font>

61
00:02:19,170 --> 00:02:22,920
really<font color="#E5E5E5"> awkward</font><font color="#CCCCCC"> for us like we're not</font><font color="#E5E5E5"> the</font>

62
00:02:21,239 --> 00:02:26,250
type so<font color="#E5E5E5"> you usually like beg for</font>

63
00:02:22,920 --> 00:02:29,339
attention but well<font color="#E5E5E5"> what we'll do as much</font>

64
00:02:26,250 --> 00:02:32,879
as<font color="#CCCCCC"> we can within reason to support a</font>

65
00:02:29,340 --> 00:02:34,680
good cause<font color="#E5E5E5"> so what are we going to be</font>

66
00:02:32,879 --> 00:02:36,540
talking<font color="#CCCCCC"> about today we're going to start</font>

67
00:02:34,680 --> 00:02:39,030
<font color="#CCCCCC">off talking about the goals of an</font>

68
00:02:36,540 --> 00:02:41,310
evasive adversary<font color="#E5E5E5"> we're going to present</font>

69
00:02:39,030 --> 00:02:43,920
<font color="#CCCCCC">the detection a typical detection</font>

70
00:02:41,310 --> 00:02:47,310
methodology<font color="#CCCCCC"> and then we're gonna present</font>

71
00:02:43,920 --> 00:02:50,429
the subversion<font color="#CCCCCC"> subverting detection</font>

72
00:02:47,310 --> 00:02:52,950
<font color="#E5E5E5">methodology dive into why we're</font>

73
00:02:50,430 --> 00:02:54,599
targeting system on<font color="#E5E5E5"> we're going to since</font>

74
00:02:52,950 --> 00:02:56,220
<font color="#CCCCCC">dismount is a data collector</font><font color="#E5E5E5"> we're going</font>

75
00:02:54,599 --> 00:02:58,888
to talk<font color="#E5E5E5"> about some subversion strategy</font>

76
00:02:56,220 --> 00:03:00,719
strategies for data collectors then wrap

77
00:02:58,889 --> 00:03:05,549
up<font color="#CCCCCC"> with some conclusions</font><font color="#E5E5E5"> from our</font>

78
00:03:00,719 --> 00:03:08,519
research goals of<font color="#CCCCCC"> an evasive adversary</font>

79
00:03:05,549 --> 00:03:12,389
so ultimately the<font color="#E5E5E5"> goal of an adversary</font>

80
00:03:08,519 --> 00:03:15,510
<font color="#CCCCCC">of any base of adversary</font><font color="#E5E5E5"> is to avoid</font>

81
00:03:12,389 --> 00:03:18,120
detection<font color="#CCCCCC"> at an organizational level so</font>

82
00:03:15,510 --> 00:03:20,340
if<font color="#E5E5E5"> AV failed</font><font color="#CCCCCC"> if AV catches something</font><font color="#E5E5E5"> and</font>

83
00:03:18,120 --> 00:03:22,620
it's not forwarded to the<font color="#E5E5E5"> back end to</font>

84
00:03:20,340 --> 00:03:24,419
<font color="#CCCCCC">wear the sock can analyze it that means</font>

85
00:03:22,620 --> 00:03:27,030
detection has failed<font color="#CCCCCC"> because the</font>

86
00:03:24,419 --> 00:03:29,519
adversary<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> undetected</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> an</font>

87
00:03:27,030 --> 00:03:31,400
organizational level<font color="#E5E5E5"> this can be</font>

88
00:03:29,519 --> 00:03:34,590
accomplished by blending<font color="#CCCCCC"> in</font><font color="#E5E5E5"> with normal</font>

89
00:03:31,400 --> 00:03:36,470
<font color="#E5E5E5">by exploiting defender biases when</font>

90
00:03:34,590 --> 00:03:39,510
they're on the writing detection rules

91
00:03:36,470 --> 00:03:41,519
<font color="#E5E5E5">avoid and in general just avoiding human</font>

92
00:03:39,510 --> 00:03:45,720
<font color="#CCCCCC">eyes altogether so if we can subvert</font><font color="#E5E5E5"> the</font>

93
00:03:41,519 --> 00:03:47,689
detection<font color="#E5E5E5"> tools or data sources</font><font color="#CCCCCC"> then we</font>

94
00:03:45,720 --> 00:03:55,829
will be<font color="#CCCCCC"> successful as an evasive</font>

95
00:03:47,689 --> 00:03:58,198
adversary so ultimately subverting

96
00:03:55,829 --> 00:04:00,900
security solutions really<font color="#E5E5E5"> is just an</font>

97
00:03:58,199 --> 00:04:05,790
engineering challenge<font color="#E5E5E5"> of more mature</font>

98
00:04:00,900 --> 00:04:07,439
adversaries<font color="#E5E5E5"> so as a red teamer of a</font>

99
00:04:05,790 --> 00:04:10,078
sufficient maturity level you really

100
00:04:07,439 --> 00:04:12,138
<font color="#CCCCCC">should be trying</font><font color="#E5E5E5"> to emulate</font><font color="#CCCCCC"> that so I</font>

101
00:04:10,079 --> 00:04:15,900
know some vendors will certainly be

102
00:04:12,139 --> 00:04:18,060
sensitive<font color="#E5E5E5"> about researchers showing off</font>

103
00:04:15,900 --> 00:04:21,959
bypasses for<font color="#E5E5E5"> their specific</font><font color="#CCCCCC"> products</font>

104
00:04:18,060 --> 00:04:25,320
<font color="#E5E5E5">we're more about showing general evasive</font>

105
00:04:21,959 --> 00:04:27,150
techniques that can apply<font color="#E5E5E5"> to one or many</font>

106
00:04:25,320 --> 00:04:29,010
security products

107
00:04:27,150 --> 00:04:31,560
so if the adversaries are doing that

108
00:04:29,010 --> 00:04:34,289
<font color="#E5E5E5">then if we want to deliver value</font><font color="#CCCCCC"> to our</font>

109
00:04:31,560 --> 00:04:35,340
customers or any defenders<font color="#E5E5E5"> out there as</font>

110
00:04:34,290 --> 00:04:38,160
well

111
00:04:35,340 --> 00:04:40,380
or if a red teamer<font color="#E5E5E5"> just what yeah if a</font>

112
00:04:38,160 --> 00:04:42,600
red team wants<font color="#CCCCCC"> to provide as much value</font>

113
00:04:40,380 --> 00:04:45,389
as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> then they should be doing</font>

114
00:04:42,600 --> 00:04:47,520
these same things<font color="#E5E5E5"> and identifying the</font>

115
00:04:45,389 --> 00:04:53,460
key terrain<font color="#E5E5E5"> in their target environment</font>

116
00:04:47,520 --> 00:04:56,070
<font color="#E5E5E5">and having evasions prepared so like we</font>

117
00:04:53,460 --> 00:04:59,789
said ultimately a an organization<font color="#CCCCCC"> wants</font>

118
00:04:56,070 --> 00:05:03,000
<font color="#CCCCCC">to be able</font><font color="#E5E5E5"> to detect attacker to detect</font>

119
00:04:59,790 --> 00:05:06,360
attacker attacker activity<font color="#E5E5E5"> inside of</font>

120
00:05:03,000 --> 00:05:07,979
their network<font color="#E5E5E5"> so what goes</font><font color="#CCCCCC"> into building</font>

121
00:05:06,360 --> 00:05:09,690
<font color="#E5E5E5">out a detection because that's going to</font>

122
00:05:07,979 --> 00:05:14,219
<font color="#CCCCCC">influence us</font><font color="#E5E5E5"> if we're trying to subvert</font>

123
00:05:09,690 --> 00:05:16,410
it so and at a generalized<font color="#CCCCCC"> adversary</font>

124
00:05:14,220 --> 00:05:18,960
detection methodology is you identifying

125
00:05:16,410 --> 00:05:20,639
at an attack technique<font color="#E5E5E5"> so this could be</font>

126
00:05:18,960 --> 00:05:21,810
a lateral<font color="#E5E5E5"> move a specific lateral</font>

127
00:05:20,639 --> 00:05:24,240
movement technique or privilege

128
00:05:21,810 --> 00:05:28,080
escalation technique you find a data

129
00:05:24,240 --> 00:05:30,570
source<font color="#E5E5E5"> that may inform you or that may</font>

130
00:05:28,080 --> 00:05:32,340
provide data about when that technique

131
00:05:30,570 --> 00:05:35,099
occurs so that<font color="#CCCCCC"> could be</font><font color="#E5E5E5"> like process</font>

132
00:05:32,340 --> 00:05:38,070
when a process<font color="#E5E5E5"> is created it could come</font>

133
00:05:35,100 --> 00:05:39,810
from<font color="#E5E5E5"> something like an etw provider then</font>

134
00:05:38,070 --> 00:05:42,300
you have to actually<font color="#CCCCCC"> have a tool</font><font color="#E5E5E5"> that</font>

135
00:05:39,810 --> 00:05:45,120
<font color="#E5E5E5">will do this collection</font><font color="#CCCCCC"> so in this</font>

136
00:05:42,300 --> 00:05:47,010
system<font color="#E5E5E5"> on fits this case it</font><font color="#CCCCCC"> is a data</font>

137
00:05:45,120 --> 00:05:48,870
<font color="#E5E5E5">collection tool so we're gonna apply a</font>

138
00:05:47,010 --> 00:05:50,280
strategy to subverting that data

139
00:05:48,870 --> 00:05:53,130
<font color="#E5E5E5">collection tool</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> did just want to</font>

140
00:05:50,280 --> 00:05:54,690
highlight that<font color="#CCCCCC"> sis Mon is not we've been</font>

141
00:05:53,130 --> 00:05:57,000
consider it to<font color="#E5E5E5"> be like a full fledge</font>

142
00:05:54,690 --> 00:05:59,310
endpoint<font color="#CCCCCC"> security product it</font><font color="#E5E5E5"> really is</font>

143
00:05:57,000 --> 00:06:02,340
just<font color="#E5E5E5"> a data collector that can be used</font>

144
00:05:59,310 --> 00:06:04,590
<font color="#E5E5E5">to supplement</font><font color="#CCCCCC"> existing or additional</font>

145
00:06:02,340 --> 00:06:05,760
data sources<font color="#CCCCCC"> and that brings us right</font>

146
00:06:04,590 --> 00:06:08,130
<font color="#E5E5E5">into the next step of the detection</font>

147
00:06:05,760 --> 00:06:10,229
methodology which is transport<font color="#E5E5E5"> so this</font>

148
00:06:08,130 --> 00:06:12,180
can take<font color="#E5E5E5"> place within us endpoint</font>

149
00:06:10,229 --> 00:06:14,729
solution itself<font color="#E5E5E5"> or the transport of</font>

150
00:06:12,180 --> 00:06:18,930
<font color="#CCCCCC">events from an endpoint to a</font><font color="#E5E5E5"> back-end</font>

151
00:06:14,729 --> 00:06:21,510
<font color="#E5E5E5">analysis system like a sim so and then</font>

152
00:06:18,930 --> 00:06:23,039
there's enrichment<font color="#E5E5E5"> and analysis that</font>

153
00:06:21,510 --> 00:06:25,440
<font color="#CCCCCC">goes on with any events that are</font>

154
00:06:23,039 --> 00:06:27,289
<font color="#E5E5E5">transported and then there's some sort</font>

155
00:06:25,440 --> 00:06:31,020
of classification whether it's malicious

156
00:06:27,289 --> 00:06:33,180
<font color="#E5E5E5">suspicious or benign and then of</font><font color="#CCCCCC"> course</font>

157
00:06:31,020 --> 00:06:35,310
if it is malicious<font color="#E5E5E5"> or</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> suspicious</font>

158
00:06:33,180 --> 00:06:37,650
<font color="#CCCCCC">there's going to be some sort</font><font color="#E5E5E5"> of alert</font>

159
00:06:35,310 --> 00:06:40,289
maybe there's a blocking action<font color="#E5E5E5"> as a</font>

160
00:06:37,650 --> 00:06:42,869
response<font color="#CCCCCC"> this could also occur</font>

161
00:06:40,289 --> 00:06:45,419
like with antivirus<font color="#E5E5E5"> if there is an alert</font>

162
00:06:42,869 --> 00:06:47,669
<font color="#CCCCCC">it may write it</font><font color="#E5E5E5"> to an event</font><font color="#CCCCCC"> log</font><font color="#E5E5E5"> and then</font>

163
00:06:45,419 --> 00:06:49,789
that<font color="#CCCCCC"> Event log</font><font color="#E5E5E5"> will be transported</font>

164
00:06:47,669 --> 00:06:56,549
hopefully<font color="#E5E5E5"> eventually back to the backend</font>

165
00:06:49,789 --> 00:06:58,919
<font color="#E5E5E5">syn so as just as we have</font><font color="#CCCCCC"> these you know</font>

166
00:06:56,550 --> 00:07:01,889
<font color="#E5E5E5">seven steps</font><font color="#CCCCCC"> for a detection methodology</font>

167
00:06:58,919 --> 00:07:05,938
<font color="#E5E5E5">those exact same steps inform our</font>

168
00:07:01,889 --> 00:07:08,129
subversion<font color="#E5E5E5"> methodology so essentially</font>

169
00:07:05,939 --> 00:07:11,309
the detection subversion<font color="#E5E5E5"> methodology is</font>

170
00:07:08,129 --> 00:07:13,949
evading<font color="#CCCCCC"> or tampering with any of the</font>

171
00:07:11,309 --> 00:07:16,889
steps of<font color="#E5E5E5"> the detection methodology so</font>

172
00:07:13,949 --> 00:07:19,199
instead of as a converse to the first

173
00:07:16,889 --> 00:07:21,209
step an attacker can select specific

174
00:07:19,199 --> 00:07:24,360
techniques that<font color="#E5E5E5"> the target organization</font>

175
00:07:21,209 --> 00:07:26,789
may<font color="#CCCCCC"> not be aware of</font><font color="#E5E5E5"> they may they may</font>

176
00:07:24,360 --> 00:07:29,219
subvert data sources<font color="#E5E5E5"> so they could</font>

177
00:07:26,789 --> 00:07:31,649
<font color="#E5E5E5">disable a specific etw provider if</font>

178
00:07:29,219 --> 00:07:34,439
that's being<font color="#E5E5E5"> used to fund to generate</font>

179
00:07:31,649 --> 00:07:37,169
the<font color="#E5E5E5"> data but they could subvert the data</font>

180
00:07:34,439 --> 00:07:40,349
collection<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> so suspending the tool</font>

181
00:07:37,169 --> 00:07:41,998
or killing off the process<font color="#E5E5E5"> an ET w like</font>

182
00:07:40,349 --> 00:07:45,569
is kind<font color="#CCCCCC"> of all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> rage with a lot of</font>

183
00:07:41,999 --> 00:07:48,240
<font color="#E5E5E5">specific vendors out there and then just</font>

184
00:07:45,569 --> 00:07:50,309
<font color="#CCCCCC">say an attacker may also take the</font>

185
00:07:48,240 --> 00:07:54,529
approach of subverting the transport<font color="#E5E5E5"> of</font>

186
00:07:50,309 --> 00:07:58,379
that data so disabling a log forwarder

187
00:07:54,529 --> 00:08:00,569
you know the classification engine say

188
00:07:58,379 --> 00:08:03,749
there's a specific signature<font color="#E5E5E5"> so AV is a</font>

189
00:08:00,569 --> 00:08:05,399
classic example of this it's a<font color="#E5E5E5"> very much</font>

190
00:08:03,749 --> 00:08:07,680
signature<font color="#E5E5E5"> base so we just have to bypass</font>

191
00:08:05,399 --> 00:08:10,259
<font color="#E5E5E5">the signature and that's the</font><font color="#CCCCCC"> component</font>

192
00:08:07,680 --> 00:08:12,119
we're attacking<font color="#E5E5E5"> the classification</font>

193
00:08:10,259 --> 00:08:14,999
component there and then<font color="#E5E5E5"> alerting and</font>

194
00:08:12,119 --> 00:08:17,999
<font color="#E5E5E5">response so and we somehow prevent an</font>

195
00:08:14,999 --> 00:08:20,039
alert<font color="#E5E5E5"> from ever being sent off to the</font>

196
00:08:17,999 --> 00:08:21,869
sock<font color="#E5E5E5"> to be analyzed so we can disable a</font>

197
00:08:20,039 --> 00:08:23,789
log forwarder<font color="#E5E5E5"> if that's what they're</font>

198
00:08:21,869 --> 00:08:25,559
using<font color="#E5E5E5"> to ship to essentially ship off</font>

199
00:08:23,789 --> 00:08:27,959
that or we could use a firewall<font color="#CCCCCC"> to block</font>

200
00:08:25,559 --> 00:08:30,599
any communication of the endpoint<font color="#CCCCCC"> to</font>

201
00:08:27,959 --> 00:08:32,068
back-end<font color="#E5E5E5"> alerting systems so it sounds</font>

202
00:08:30,599 --> 00:08:35,068
<font color="#CCCCCC">like what you're referring to</font><font color="#E5E5E5"> is like a</font>

203
00:08:32,068 --> 00:08:37,978
<font color="#E5E5E5">macro and</font><font color="#CCCCCC"> a micro evasion strategy yep</font>

204
00:08:35,068 --> 00:08:39,509
yep exactly<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you have at a micro level</font>

205
00:08:37,979 --> 00:08:42,329
you have what's<font color="#E5E5E5"> occurring on an</font><font color="#CCCCCC"> endpoint</font>

206
00:08:39,509 --> 00:08:45,600
<font color="#CCCCCC">or some other part of</font><font color="#E5E5E5"> the network</font><font color="#CCCCCC"> but if</font>

207
00:08:42,328 --> 00:08:48,739
if detection occurs there<font color="#E5E5E5"> the</font><font color="#CCCCCC"> overall</font>

208
00:08:45,600 --> 00:08:50,880
<font color="#CCCCCC">goal of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> organization</font><font color="#E5E5E5"> at deep</font>

209
00:08:48,740 --> 00:08:53,310
identifying that there's an attacker is

210
00:08:50,880 --> 00:08:54,030
<font color="#CCCCCC">not complete so the</font><font color="#E5E5E5"> endpoint alerting</font>

211
00:08:53,310 --> 00:08:57,270
has occurred

212
00:08:54,030 --> 00:08:59,819
<font color="#E5E5E5">but somehow that that alert needs to</font>

213
00:08:57,270 --> 00:09:01,650
also<font color="#CCCCCC"> be transported</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the back end</font><font color="#E5E5E5"> so</font>

214
00:08:59,820 --> 00:09:03,960
<font color="#CCCCCC">that sock the sock and the security team</font>

215
00:09:01,650 --> 00:09:06,780
<font color="#CCCCCC">at an organizational level becomes aware</font>

216
00:09:03,960 --> 00:09:09,150
<font color="#E5E5E5">of the detection as</font><font color="#CCCCCC"> well so you can</font>

217
00:09:06,780 --> 00:09:11,160
subvert<font color="#CCCCCC"> it at the micro level</font><font color="#E5E5E5"> on the end</font>

218
00:09:09,150 --> 00:09:14,370
point so you can subvert detection there

219
00:09:11,160 --> 00:09:16,469
and if you can<font color="#CCCCCC"> also subvert detection at</font>

220
00:09:14,370 --> 00:09:18,690
the back row<font color="#E5E5E5"> level of preventing the</font>

221
00:09:16,470 --> 00:09:20,220
sock or the<font color="#E5E5E5"> organization from knowing</font>

222
00:09:18,690 --> 00:09:22,530
<font color="#E5E5E5">about the alert then you you are</font>

223
00:09:20,220 --> 00:09:26,460
successful as an attacker<font color="#E5E5E5"> so we found</font>

224
00:09:22,530 --> 00:09:29,240
that categorizing<font color="#E5E5E5"> the holistic evasion</font>

225
00:09:26,460 --> 00:09:31,800
methodology as such<font color="#CCCCCC"> or the detection</font>

226
00:09:29,240 --> 00:09:33,570
methodology as such as<font color="#E5E5E5"> although while</font>

227
00:09:31,800 --> 00:09:37,050
<font color="#E5E5E5">each of</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> events may seem obvious</font>

228
00:09:33,570 --> 00:09:40,290
and intuitive<font color="#CCCCCC"> we tend to</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to have</font>

229
00:09:37,050 --> 00:09:43,469
<font color="#E5E5E5">them written out because each category</font>

230
00:09:40,290 --> 00:09:47,280
<font color="#E5E5E5">will have separate evasion strategies</font>

231
00:09:43,470 --> 00:09:52,860
and tactics<font color="#E5E5E5"> evolved involved in each one</font>

232
00:09:47,280 --> 00:09:55,319
<font color="#CCCCCC">of them so what was our rationale for</font>

233
00:09:52,860 --> 00:09:57,810
targeting system on specifically again

234
00:09:55,320 --> 00:09:59,700
defenders use it<font color="#CCCCCC"> heavily I know of some</font>

235
00:09:57,810 --> 00:10:02,520
vendors that<font color="#E5E5E5"> actually take dependencies</font>

236
00:09:59,700 --> 00:10:06,990
on it some<font color="#E5E5E5"> of which those products we've</font>

237
00:10:02,520 --> 00:10:10,020
run into<font color="#E5E5E5"> and in enterprises so again</font>

238
00:10:06,990 --> 00:10:11,700
we're not<font color="#E5E5E5"> here to pick on sis Mon per se</font>

239
00:10:10,020 --> 00:10:14,160
<font color="#CCCCCC">we actually have a lot of nice things</font><font color="#E5E5E5"> to</font>

240
00:10:11,700 --> 00:10:17,640
<font color="#CCCCCC">say and some of the</font><font color="#E5E5E5"> tradecraft that will</font>

241
00:10:14,160 --> 00:10:19,949
cover bypasses not only or evades and

242
00:10:17,640 --> 00:10:26,310
bypasses not only<font color="#E5E5E5"> sis</font><font color="#CCCCCC"> Mon</font><font color="#E5E5E5"> but is likely</font>

243
00:10:19,950 --> 00:10:28,800
to evade other products as<font color="#E5E5E5"> well so we're</font>

244
00:10:26,310 --> 00:10:30,479
gonna cific<font color="#E5E5E5"> we focus on data collector</font>

245
00:10:28,800 --> 00:10:33,300
subversion strategies like<font color="#E5E5E5"> we mentioned</font>

246
00:10:30,480 --> 00:10:36,780
sis<font color="#E5E5E5"> Mon is a data collector so that fits</font>

247
00:10:33,300 --> 00:10:39,569
in right<font color="#E5E5E5"> with step</font><font color="#CCCCCC"> 3 in that date in the</font>

248
00:10:36,780 --> 00:10:41,670
detection methodology so we're<font color="#CCCCCC"> gonna</font>

249
00:10:39,570 --> 00:10:45,390
<font color="#E5E5E5">apply</font><font color="#CCCCCC"> some strategies that we've come up</font>

250
00:10:41,670 --> 00:10:48,110
with<font color="#CCCCCC"> to subvert</font><font color="#E5E5E5"> and data collectors our</font>

251
00:10:45,390 --> 00:10:51,689
interest as attackers<font color="#E5E5E5"> is tampering</font>

252
00:10:48,110 --> 00:10:53,250
<font color="#E5E5E5">evasion opportunities and any part of</font>

253
00:10:51,690 --> 00:10:54,570
<font color="#E5E5E5">the attack surface that we could take</font>

254
00:10:53,250 --> 00:10:57,060
<font color="#CCCCCC">advantage of so if there's any</font>

255
00:10:54,570 --> 00:11:00,810
vulnerabilities in our experience most

256
00:10:57,060 --> 00:11:03,420
<font color="#CCCCCC">vendors but</font><font color="#E5E5E5"> tend to focus on</font><font color="#CCCCCC"> the attack</font>

257
00:11:00,810 --> 00:11:06,420
surface analysis<font color="#E5E5E5"> maybe pay attention to</font>

258
00:11:03,420 --> 00:11:07,069
the tampering part of it<font color="#E5E5E5"> but very few</font>

259
00:11:06,420 --> 00:11:08,839
<font color="#E5E5E5">our</font>

260
00:11:07,070 --> 00:11:10,850
attention to or putting a lot<font color="#CCCCCC"> of</font>

261
00:11:08,840 --> 00:11:13,010
research<font color="#E5E5E5"> into the evasion aspect of</font>

262
00:11:10,850 --> 00:11:17,870
<font color="#E5E5E5">things as well they acknowledge the the</font>

263
00:11:13,010 --> 00:11:19,760
tavis threat<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> so again we're gonna</font>

264
00:11:17,870 --> 00:11:22,130
focus on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> data collectors and system</font>

265
00:11:19,760 --> 00:11:24,819
on is that the strategies we will be

266
00:11:22,130 --> 00:11:27,230
<font color="#CCCCCC">talking</font><font color="#E5E5E5"> about are you know number one</font>

267
00:11:24,820 --> 00:11:30,350
familiarization and scoping<font color="#E5E5E5"> of your of</font>

268
00:11:27,230 --> 00:11:32,480
<font color="#E5E5E5">your research</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> source resilience</font>

269
00:11:30,350 --> 00:11:35,990
auditing<font color="#E5E5E5"> footprint and attack surface</font>

270
00:11:32,480 --> 00:11:38,750
analysis data collection implementation

271
00:11:35,990 --> 00:11:44,210
analysis and the<font color="#CCCCCC"> configuration of the</font>

272
00:11:38,750 --> 00:11:46,100
tool so that<font color="#E5E5E5"> type of analysis so step</font>

273
00:11:44,210 --> 00:11:48,470
number<font color="#E5E5E5"> one tool familiar is Asian and</font>

274
00:11:46,100 --> 00:11:49,760
scoping<font color="#CCCCCC"> a big part of this is just</font>

275
00:11:48,470 --> 00:11:52,850
understanding<font color="#E5E5E5"> what the purpose of the</font>

276
00:11:49,760 --> 00:11:55,550
tool is and understanding<font color="#E5E5E5"> the guarantees</font>

277
00:11:52,850 --> 00:11:57,230
so what do we<font color="#E5E5E5"> mean by guarantees</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

278
00:11:55,550 --> 00:12:01,010
tampering guarantees under<font color="#E5E5E5"> which</font>

279
00:11:57,230 --> 00:12:03,770
circumstances can<font color="#E5E5E5"> an attacker or does a</font>

280
00:12:01,010 --> 00:12:05,990
product protect protect<font color="#E5E5E5"> against an</font>

281
00:12:03,770 --> 00:12:09,319
attacker<font color="#E5E5E5"> and also the collection</font>

282
00:12:05,990 --> 00:12:11,800
guarantees of that tool so what events

283
00:12:09,320 --> 00:12:14,350
does the the tool claim that it<font color="#CCCCCC"> is</font>

284
00:12:11,800 --> 00:12:17,390
<font color="#E5E5E5">collecting and does it do so correct</font>

285
00:12:14,350 --> 00:12:19,310
<font color="#E5E5E5">correctly</font><font color="#CCCCCC"> and then understanding the</font>

286
00:12:17,390 --> 00:12:21,590
<font color="#CCCCCC">threat models so kind of going</font><font color="#E5E5E5"> along</font>

287
00:12:19,310 --> 00:12:27,280
with that tampering guarantee what type

288
00:12:21,590 --> 00:12:29,870
of attacker is the tool<font color="#E5E5E5"> secure against</font>

289
00:12:27,280 --> 00:12:31,730
so is this a low<font color="#CCCCCC"> privileged attacker is</font>

290
00:12:29,870 --> 00:12:34,580
it an administrator is it somebody<font color="#E5E5E5"> in</font>

291
00:12:31,730 --> 00:12:36,770
the kernel which which aspect of attack

292
00:12:34,580 --> 00:12:39,380
<font color="#E5E5E5">or what type of attacker does the</font>

293
00:12:36,770 --> 00:12:41,060
product protect against and in general I

294
00:12:39,380 --> 00:12:43,880
<font color="#CCCCCC">just getting comfortable with</font><font color="#E5E5E5"> the tool</font>

295
00:12:41,060 --> 00:12:46,760
so and just<font color="#CCCCCC"> installing it configuring it</font>

296
00:12:43,880 --> 00:12:51,110
using it<font color="#E5E5E5"> seeing how it's used as it from</font>

297
00:12:46,760 --> 00:12:53,780
an organ organization<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this bond</font>

298
00:12:51,110 --> 00:12:58,040
taking the same approach<font color="#CCCCCC"> so this one is</font>

299
00:12:53,780 --> 00:12:59,300
a user mode activity<font color="#E5E5E5"> sensor so it's not</font>

300
00:12:58,040 --> 00:13:02,300
<font color="#E5E5E5">going to be monitoring things inside</font><font color="#CCCCCC"> of</font>

301
00:12:59,300 --> 00:13:04,550
the kernel<font color="#E5E5E5"> that's not its purpose</font><font color="#CCCCCC"> it's</font>

302
00:13:02,300 --> 00:13:06,560
<font color="#E5E5E5">just</font><font color="#CCCCCC"> its functions as a standalone</font>

303
00:13:04,550 --> 00:13:10,130
executable and<font color="#CCCCCC"> driver</font><font color="#E5E5E5"> that's how it</font>

304
00:13:06,560 --> 00:13:12,530
<font color="#E5E5E5">implements this these components</font><font color="#CCCCCC"> there</font>

305
00:13:10,130 --> 00:13:14,960
<font color="#CCCCCC">isn't any sort</font><font color="#E5E5E5"> of centralized deployment</font>

306
00:13:12,530 --> 00:13:16,280
and configuration<font color="#E5E5E5"> management most</font>

307
00:13:14,960 --> 00:13:18,020
organizations<font color="#E5E5E5"> are going to end up</font>

308
00:13:16,280 --> 00:13:20,490
deploying it through some<font color="#CCCCCC"> third-party</font>

309
00:13:18,020 --> 00:13:24,300
tool<font color="#CCCCCC"> I could be secm could be</font>

310
00:13:20,490 --> 00:13:26,700
<font color="#E5E5E5">pío</font><font color="#CCCCCC"> name your favorite tool</font><font color="#E5E5E5"> there are</font>

311
00:13:24,300 --> 00:13:29,399
like<font color="#CCCCCC"> Matt mentioned there's no analysis</font>

312
00:13:26,700 --> 00:13:31,440
capabilities<font color="#E5E5E5"> inside of sis</font><font color="#CCCCCC"> Mon</font><font color="#E5E5E5"> it's a</font>

313
00:13:29,399 --> 00:13:34,860
data collector<font color="#E5E5E5"> you write data collection</font>

314
00:13:31,440 --> 00:13:36,510
rules<font color="#E5E5E5"> analysis takes place in with your</font>

315
00:13:34,860 --> 00:13:39,690
detection rules inside of<font color="#E5E5E5"> something like</font>

316
00:13:36,510 --> 00:13:43,580
a sim<font color="#E5E5E5"> notice that Lee mentioned data</font>

317
00:13:39,690 --> 00:13:46,220
collection rules<font color="#CCCCCC"> versus detection rules</font>

318
00:13:43,580 --> 00:13:49,830
<font color="#E5E5E5">that's an important distinction I</font><font color="#CCCCCC"> think</font>

319
00:13:46,220 --> 00:13:52,230
and<font color="#E5E5E5"> again that guarantees of sis mom is</font>

320
00:13:49,830 --> 00:13:54,990
that<font color="#E5E5E5"> it's resistant against</font><font color="#CCCCCC"> a non</font>

321
00:13:52,230 --> 00:13:57,959
administrator so once an attacker

322
00:13:54,990 --> 00:14:00,560
becomes admin all other protections that

323
00:13:57,959 --> 00:14:04,199
<font color="#E5E5E5">it has in place are no longer guaranteed</font>

324
00:14:00,560 --> 00:14:08,849
<font color="#CCCCCC">in addition those data sources</font><font color="#E5E5E5"> from</font>

325
00:14:04,200 --> 00:14:11,339
which sis mom pulls events it<font color="#CCCCCC"> it has</font>

326
00:14:08,850 --> 00:14:15,089
guarantees that<font color="#E5E5E5"> it is comprehensively</font>

327
00:14:11,339 --> 00:14:17,250
collecting those at unless there are

328
00:14:15,089 --> 00:14:20,520
filtering rules in place<font color="#E5E5E5"> so this is</font>

329
00:14:17,250 --> 00:14:23,430
important because<font color="#CCCCCC"> back end</font><font color="#E5E5E5"> sock analysts</font>

330
00:14:20,520 --> 00:14:25,980
are assuming<font color="#E5E5E5"> that everything that sis</font>

331
00:14:23,430 --> 00:14:27,630
Mon is reporting is the the whole

332
00:14:25,980 --> 00:14:30,000
picture that<font color="#E5E5E5"> nothing is being filtered</font>

333
00:14:27,630 --> 00:14:31,680
and<font color="#E5E5E5"> that it's comprehensive</font><font color="#CCCCCC"> so that's</font>

334
00:14:30,000 --> 00:14:35,000
the<font color="#CCCCCC"> guarantee that system</font><font color="#E5E5E5"> ax is making</font>

335
00:14:31,680 --> 00:14:37,709
unless there's filtering rules<font color="#E5E5E5"> in place</font>

336
00:14:35,000 --> 00:14:39,720
so data source for data source

337
00:14:37,709 --> 00:14:43,319
resilience auditing this<font color="#E5E5E5"> is a critical</font>

338
00:14:39,720 --> 00:14:45,779
step<font color="#CCCCCC"> that we would take when assessing</font><font color="#E5E5E5"> a</font>

339
00:14:43,320 --> 00:14:46,890
new product in this case this<font color="#CCCCCC"> Mon</font><font color="#E5E5E5"> so the</font>

340
00:14:45,779 --> 00:14:50,880
questions<font color="#E5E5E5"> that we would ask</font><font color="#CCCCCC"> ourselves</font>

341
00:14:46,890 --> 00:14:53,850
are<font color="#E5E5E5"> one what events and event fields</font>

342
00:14:50,880 --> 00:14:56,510
does this product<font color="#E5E5E5"> capture and of those</font>

343
00:14:53,850 --> 00:15:00,089
event fields and event types that<font color="#E5E5E5"> exist</font>

344
00:14:56,510 --> 00:15:03,149
<font color="#CCCCCC">what of those can be directly</font><font color="#E5E5E5"> or</font>

345
00:15:00,089 --> 00:15:05,970
indirectly influenced by an evasive

346
00:15:03,149 --> 00:15:09,630
attacker<font color="#E5E5E5"> and finally what fields do</font>

347
00:15:05,970 --> 00:15:13,020
defenders<font color="#E5E5E5"> typically use</font><font color="#CCCCCC"> when building</font>

348
00:15:09,630 --> 00:15:18,450
collection rules because armed with that

349
00:15:13,020 --> 00:15:22,770
knowledge<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can exploit naive detection</font>

350
00:15:18,450 --> 00:15:26,970
or rule creation<font color="#CCCCCC"> methodology</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> your</font>

351
00:15:22,770 --> 00:15:29,279
your typical defender might have so

352
00:15:26,970 --> 00:15:33,750
first we<font color="#CCCCCC"> would look</font><font color="#E5E5E5"> at whether or not</font>

353
00:15:29,279 --> 00:15:35,640
there are<font color="#E5E5E5"> generic rule evasions so we</font>

354
00:15:33,750 --> 00:15:37,380
have to identify what can be logged and

355
00:15:35,640 --> 00:15:41,010
what<font color="#CCCCCC"> attributes of the event</font><font color="#E5E5E5"> can be</font>

356
00:15:37,380 --> 00:15:43,410
influenced<font color="#E5E5E5"> so</font><font color="#CCCCCC"> sis Mon supports all of</font>

357
00:15:41,010 --> 00:15:44,790
<font color="#CCCCCC">the</font><font color="#E5E5E5"> following event types so you</font>

358
00:15:43,410 --> 00:15:48,180
actually<font color="#E5E5E5"> have some</font><font color="#CCCCCC"> pretty good coverage</font>

359
00:15:44,790 --> 00:15:50,280
and it is<font color="#E5E5E5"> pretty understandable why</font>

360
00:15:48,180 --> 00:15:52,400
defenders<font color="#E5E5E5"> really likes this</font><font color="#CCCCCC"> mod because</font>

361
00:15:50,280 --> 00:15:56,550
<font color="#CCCCCC">it really is an outstanding</font>

362
00:15:52,400 --> 00:15:59,220
supplementary<font color="#E5E5E5"> source of event data so</font>

363
00:15:56,550 --> 00:16:01,170
I'm<font color="#CCCCCC"> gonna go</font><font color="#E5E5E5"> through a more detailed</font>

364
00:15:59,220 --> 00:16:04,440
example covering process create in<font color="#CCCCCC"> just</font>

365
00:16:01,170 --> 00:16:06,180
a moment<font color="#CCCCCC"> but our methodology would be</font>

366
00:16:04,440 --> 00:16:08,520
looking through<font color="#CCCCCC"> each of these event</font>

367
00:16:06,180 --> 00:16:11,670
types for example<font color="#CCCCCC"> we'll cover wynia</font>

368
00:16:08,520 --> 00:16:14,189
<font color="#CCCCCC">event soon and we have a new generic</font>

369
00:16:11,670 --> 00:16:16,319
whimmy event<font color="#E5E5E5"> evasion such that it would</font>

370
00:16:14,190 --> 00:16:18,510
never be logged in the first place for

371
00:16:16,320 --> 00:16:22,230
things that are not<font color="#CCCCCC"> directly</font><font color="#E5E5E5"> under our</font>

372
00:16:18,510 --> 00:16:25,470
control<font color="#CCCCCC"> we could fall back to either</font>

373
00:16:22,230 --> 00:16:30,930
<font color="#E5E5E5">influencing what fields can</font><font color="#CCCCCC"> be modified</font>

374
00:16:25,470 --> 00:16:32,960
<font color="#E5E5E5">by</font><font color="#CCCCCC"> us or exploit the rule engine</font><font color="#E5E5E5"> itself</font>

375
00:16:30,930 --> 00:16:36,569
so if we get access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> a configuration</font>

376
00:16:32,960 --> 00:16:39,660
<font color="#CCCCCC">we can build an evasion strategy that is</font>

377
00:16:36,570 --> 00:16:41,250
specific to that<font color="#E5E5E5"> configuration so one</font>

378
00:16:39,660 --> 00:16:43,589
thing I wanted to<font color="#E5E5E5"> mention was for</font>

379
00:16:41,250 --> 00:16:45,480
example<font color="#CCCCCC"> the image load event type one</font><font color="#E5E5E5"> of</font>

380
00:16:43,589 --> 00:16:48,360
the fields<font color="#CCCCCC"> that it captures is signature</font>

381
00:16:45,480 --> 00:16:50,310
<font color="#E5E5E5">related information for a long time and</font>

382
00:16:48,360 --> 00:16:53,370
maybe up<font color="#CCCCCC"> until now a lot</font><font color="#E5E5E5"> of defenders</font>

383
00:16:50,310 --> 00:16:57,420
still assume that it is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> non-trivial</font>

384
00:16:53,370 --> 00:17:00,450
<font color="#E5E5E5">process or not even possible</font><font color="#CCCCCC"> to evade</font>

385
00:16:57,420 --> 00:17:03,510
signature analysis<font color="#E5E5E5"> whereby you'd have</font>

386
00:17:00,450 --> 00:17:05,730
something indicating<font color="#CCCCCC"> that a signature is</font>

387
00:17:03,510 --> 00:17:08,730
valid<font color="#E5E5E5"> and say that it is signed by</font>

388
00:17:05,730 --> 00:17:11,010
Microsoft<font color="#CCCCCC"> so both of those aspects of</font>

389
00:17:08,730 --> 00:17:13,949
code signing<font color="#E5E5E5"> can be completely subverted</font>

390
00:17:11,010 --> 00:17:16,949
<font color="#CCCCCC">and there's various types</font><font color="#E5E5E5"> of attacks</font><font color="#CCCCCC"> I</font>

391
00:17:13,949 --> 00:17:19,439
<font color="#E5E5E5">have a white paper that covers one such</font>

392
00:17:16,949 --> 00:17:21,569
class of attacks where signature

393
00:17:19,439 --> 00:17:22,860
analysis can<font color="#CCCCCC"> be completely evaded so I</font>

394
00:17:21,569 --> 00:17:25,500
<font color="#E5E5E5">just want to</font><font color="#CCCCCC"> mention</font><font color="#E5E5E5"> that well let's</font>

395
00:17:22,859 --> 00:17:29,280
dive<font color="#E5E5E5"> into process create events</font>

396
00:17:25,500 --> 00:17:31,320
<font color="#E5E5E5">specifically now this this diagram that</font>

397
00:17:29,280 --> 00:17:33,750
<font color="#E5E5E5">I have here just be mindful it's</font>

398
00:17:31,320 --> 00:17:36,990
extremely subjective<font color="#CCCCCC"> the column on</font><font color="#E5E5E5"> the</font>

399
00:17:33,750 --> 00:17:40,980
left and the<font color="#E5E5E5"> green is the are the fields</font>

400
00:17:36,990 --> 00:17:43,679
that<font color="#E5E5E5"> are directly influenza</font><font color="#CCCCCC"> batac ER</font><font color="#E5E5E5"> now</font>

401
00:17:40,980 --> 00:17:45,600
the reason it's subjective is because

402
00:17:43,679 --> 00:17:47,580
you know this<font color="#E5E5E5"> could certainly depend on</font>

403
00:17:45,600 --> 00:17:49,439
your<font color="#E5E5E5"> initial point of</font><font color="#CCCCCC"> entry</font>

404
00:17:47,580 --> 00:17:53,850
whether you<font color="#E5E5E5"> came from an exploit</font><font color="#CCCCCC"> a macro</font>

405
00:17:49,440 --> 00:17:56,790
<font color="#E5E5E5">where post exploitation factors might</font>

406
00:17:53,850 --> 00:18:00,179
not be<font color="#E5E5E5"> directly in influenceable</font><font color="#CCCCCC"> this</font>

407
00:17:56,790 --> 00:18:03,360
was<font color="#CCCCCC"> developed more</font><font color="#E5E5E5"> from the perspective</font>

408
00:18:00,180 --> 00:18:06,120
of a true post exploitation scenario so

409
00:18:03,360 --> 00:18:08,399
<font color="#E5E5E5">a column in the middle</font><font color="#CCCCCC"> could potentially</font>

410
00:18:06,120 --> 00:18:10,949
<font color="#CCCCCC">be influenced by an attacker and then</font>

411
00:18:08,400 --> 00:18:13,410
the red ones generally<font color="#E5E5E5"> generally</font>

412
00:18:10,950 --> 00:18:16,710
speaking you don't<font color="#E5E5E5"> have much control</font><font color="#CCCCCC"> if</font>

413
00:18:13,410 --> 00:18:19,620
at all<font color="#E5E5E5"> over any of those now I didn't</font>

414
00:18:16,710 --> 00:18:22,290
just blindly accept<font color="#E5E5E5"> that those in the</font>

415
00:18:19,620 --> 00:18:24,719
<font color="#CCCCCC">red</font><font color="#E5E5E5"> would not be directly influenced</font>

416
00:18:22,290 --> 00:18:27,180
about for example<font color="#CCCCCC"> there was</font><font color="#E5E5E5"> a time</font><font color="#CCCCCC"> when</font>

417
00:18:24,720 --> 00:18:30,620
I didn't understand how<font color="#E5E5E5"> the process good</font>

418
00:18:27,180 --> 00:18:33,780
<font color="#E5E5E5">was actually built until I reversed the</font>

419
00:18:30,620 --> 00:18:38,399
system on service<font color="#E5E5E5"> and learned that is</font>

420
00:18:33,780 --> 00:18:40,110
actually comprised of the<font color="#CCCCCC"> Machine gooood</font>

421
00:18:38,400 --> 00:18:41,670
<font color="#E5E5E5">which can be retrieved from the registry</font>

422
00:18:40,110 --> 00:18:44,520
<font color="#E5E5E5">so if you wanted to tamper with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

423
00:18:41,670 --> 00:18:47,970
would you'd have to be admin<font color="#CCCCCC"> the time of</font>

424
00:18:44,520 --> 00:18:53,190
process start and also<font color="#E5E5E5"> the token ID so I</font>

425
00:18:47,970 --> 00:18:55,230
had to understand how it was derived<font color="#CCCCCC"> so</font>

426
00:18:53,190 --> 00:18:56,970
that I could be confident<font color="#CCCCCC"> that I was</font>

427
00:18:55,230 --> 00:18:58,740
actually placing it in the red in<font color="#E5E5E5"> the</font>

428
00:18:56,970 --> 00:19:01,110
red category<font color="#CCCCCC"> instead of making</font>

429
00:18:58,740 --> 00:19:03,480
<font color="#E5E5E5">assumptions because it's those naive</font>

430
00:19:01,110 --> 00:19:08,459
assumptions that<font color="#E5E5E5"> we as</font><font color="#CCCCCC"> evasive</font><font color="#E5E5E5"> attackers</font>

431
00:19:03,480 --> 00:19:11,640
are trying to take advantage<font color="#CCCCCC"> of so this</font>

432
00:19:08,460 --> 00:19:14,880
<font color="#E5E5E5">is kind of what our goal</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> when we are</font>

433
00:19:11,640 --> 00:19:18,630
auditing<font color="#E5E5E5"> configurations specifically so</font>

434
00:19:14,880 --> 00:19:21,090
<font color="#E5E5E5">we want to go from landing in our target</font>

435
00:19:18,630 --> 00:19:24,840
<font color="#CCCCCC">environment where we're shrouded by the</font>

436
00:19:21,090 --> 00:19:28,260
fog of<font color="#E5E5E5"> war and so the by the fog of war</font>

437
00:19:24,840 --> 00:19:30,300
<font color="#CCCCCC">the analogy would be we haven't we</font>

438
00:19:28,260 --> 00:19:32,100
haven't obtained<font color="#E5E5E5"> the security</font>

439
00:19:30,300 --> 00:19:35,070
configurations in that<font color="#CCCCCC"> environment yet</font>

440
00:19:32,100 --> 00:19:37,050
our goal ideally is to obtain<font color="#CCCCCC"> that</font>

441
00:19:35,070 --> 00:19:39,770
configuration<font color="#E5E5E5"> ideally without getting</font>

442
00:19:37,050 --> 00:19:42,389
<font color="#E5E5E5">caught so in that timeframe between</font>

443
00:19:39,770 --> 00:19:44,340
operating getting obtaining situational

444
00:19:42,390 --> 00:19:46,590
awareness<font color="#CCCCCC"> and</font><font color="#E5E5E5"> ideally not getting caught</font>

445
00:19:44,340 --> 00:19:49,439
<font color="#CCCCCC">that is inherently a much more high-risk</font>

446
00:19:46,590 --> 00:19:52,800
environment where we're going to<font color="#E5E5E5"> have to</font>

447
00:19:49,440 --> 00:19:55,620
prioritize<font color="#E5E5E5"> using tradecraft such as for</font>

448
00:19:52,800 --> 00:19:58,290
example<font color="#E5E5E5"> like the generic whimmy evasions</font>

449
00:19:55,620 --> 00:20:00,850
really any generic<font color="#E5E5E5"> evasion such that the</font>

450
00:19:58,290 --> 00:20:04,540
<font color="#E5E5E5">data</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> would not even</font>

451
00:20:00,850 --> 00:20:06,580
enter or be logged by by<font color="#E5E5E5"> system on so we</font>

452
00:20:04,540 --> 00:20:09,820
need to be<font color="#E5E5E5"> mindful</font><font color="#CCCCCC"> that the ultimate</font>

453
00:20:06,580 --> 00:20:11,800
<font color="#CCCCCC">goal is obtaining the specific</font>

454
00:20:09,820 --> 00:20:14,379
configuration for that<font color="#CCCCCC"> environment so in</font>

455
00:20:11,800 --> 00:20:19,120
system on<font color="#E5E5E5"> your do system on deck see -</font>

456
00:20:14,380 --> 00:20:22,060
<font color="#E5E5E5">see now</font><font color="#CCCCCC"> - see provides a nice way to</font>

457
00:20:19,120 --> 00:20:23,939
parse out the the rules blob which is

458
00:20:22,060 --> 00:20:27,100
contained<font color="#CCCCCC"> within</font><font color="#E5E5E5"> the registry</font>

459
00:20:23,940 --> 00:20:29,800
<font color="#CCCCCC">considering we also consider attack</font>

460
00:20:27,100 --> 00:20:32,139
surface analysis of system on<font color="#CCCCCC"> I didn't</font>

461
00:20:29,800 --> 00:20:34,899
<font color="#E5E5E5">dive into it too much</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> did really</font>

462
00:20:32,140 --> 00:20:37,810
need to understand how the binary rules

463
00:20:34,900 --> 00:20:40,000
blob in the registry<font color="#E5E5E5"> was formed so</font><font color="#CCCCCC"> I did</font>

464
00:20:37,810 --> 00:20:41,470
write a parser<font color="#E5E5E5"> for that</font><font color="#CCCCCC"> it's a</font>

465
00:20:40,000 --> 00:20:44,800
PowerShell<font color="#E5E5E5"> module called PS system on</font>

466
00:20:41,470 --> 00:20:48,310
<font color="#CCCCCC">Tools</font><font color="#E5E5E5"> so I use that a lot and it offers</font>

467
00:20:44,800 --> 00:20:55,360
an<font color="#CCCCCC"> alternative way to recover and parse</font>

468
00:20:48,310 --> 00:20:58,330
a binary system on configuration so the

469
00:20:55,360 --> 00:21:00,040
the third step is data<font color="#E5E5E5"> are the third</font>

470
00:20:58,330 --> 00:21:03,270
strategy is data collection<font color="#E5E5E5"> and</font>

471
00:21:00,040 --> 00:21:05,490
implementation analysis<font color="#E5E5E5"> so this entails</font>

472
00:21:03,270 --> 00:21:09,400
understanding what the data sources are

473
00:21:05,490 --> 00:21:11,740
for for the collection tool<font color="#E5E5E5"> so that</font>

474
00:21:09,400 --> 00:21:14,500
could be an<font color="#E5E5E5"> e GW provider it could be a</font>

475
00:21:11,740 --> 00:21:18,550
kernel driver<font color="#E5E5E5"> that a mini filter driver</font>

476
00:21:14,500 --> 00:21:20,710
that's queuing<font color="#CCCCCC"> up events and then also</font>

477
00:21:18,550 --> 00:21:22,510
<font color="#CCCCCC">understanding how</font><font color="#E5E5E5"> do defenders actually</font>

478
00:21:20,710 --> 00:21:24,130
use those event fields when they're

479
00:21:22,510 --> 00:21:27,100
<font color="#E5E5E5">building out their detection rules and</font>

480
00:21:24,130 --> 00:21:29,560
then also<font color="#CCCCCC"> understanding is the clue</font><font color="#E5E5E5"> the</font>

481
00:21:27,100 --> 00:21:31,629
tool makes a claim and a supposed

482
00:21:29,560 --> 00:21:34,540
guarantee that it<font color="#E5E5E5"> collects all the data</font>

483
00:21:31,630 --> 00:21:37,390
<font color="#E5E5E5">for a field or for a specific event</font><font color="#CCCCCC"> we</font>

484
00:21:34,540 --> 00:21:42,460
need<font color="#CCCCCC"> to verify</font><font color="#E5E5E5"> that that collection is</font>

485
00:21:37,390 --> 00:21:46,150
correct<font color="#E5E5E5"> all right so let's talk</font><font color="#CCCCCC"> about</font>

486
00:21:42,460 --> 00:21:47,740
the<font color="#CCCCCC"> winny event event</font><font color="#E5E5E5"> in sis</font><font color="#CCCCCC"> Mun</font><font color="#E5E5E5"> so our</font>

487
00:21:46,150 --> 00:21:49,420
goal is<font color="#CCCCCC"> to identify a technique such</font>

488
00:21:47,740 --> 00:21:51,820
that<font color="#E5E5E5"> we need persistence would never be</font>

489
00:21:49,420 --> 00:21:53,800
logged in the first place so we're not

490
00:21:51,820 --> 00:21:56,200
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> evasion in this case</font>

491
00:21:53,800 --> 00:22:00,129
ideally we<font color="#E5E5E5"> want to tamper</font><font color="#CCCCCC"> with or just</font>

492
00:21:56,200 --> 00:22:02,500
bypass<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the ability</font><font color="#E5E5E5"> for system on to</font>

493
00:22:00,130 --> 00:22:05,200
collect that<font color="#E5E5E5"> data in the first place so</font>

494
00:22:02,500 --> 00:22:06,340
<font color="#CCCCCC">our strategy is pretty simple we</font><font color="#E5E5E5"> just</font>

495
00:22:05,200 --> 00:22:09,460
have to figure out<font color="#E5E5E5"> how we need</font>

496
00:22:06,340 --> 00:22:13,419
persistence<font color="#E5E5E5"> is actually is actually</font>

497
00:22:09,460 --> 00:22:14,540
being<font color="#CCCCCC"> achieved within the code so this</font>

498
00:22:13,420 --> 00:22:17,090
actually didn't require

499
00:22:14,540 --> 00:22:19,940
a ton of<font color="#CCCCCC"> reverse-engineering in</font><font color="#E5E5E5"> this</font>

500
00:22:17,090 --> 00:22:23,889
case<font color="#E5E5E5"> I literally just ran strings on sis</font>

501
00:22:19,940 --> 00:22:28,370
<font color="#CCCCCC">Mon install</font><font color="#E5E5E5"> that the implementation of</font>

502
00:22:23,890 --> 00:22:34,700
<font color="#CCCCCC">whimmy persistence</font><font color="#E5E5E5"> is as follows so this</font>

503
00:22:28,370 --> 00:22:35,300
is a<font color="#CCCCCC"> WMA</font><font color="#E5E5E5"> query language query so or wql</font>

504
00:22:34,700 --> 00:22:39,620
for short

505
00:22:35,300 --> 00:22:43,070
now when you register wql event queries

506
00:22:39,620 --> 00:22:45,229
they are going<font color="#E5E5E5"> to be specific to</font><font color="#CCCCCC"> WMI</font>

507
00:22:43,070 --> 00:22:47,659
namespace<font color="#E5E5E5"> so there's a ton</font><font color="#CCCCCC"> of WMI</font>

508
00:22:45,230 --> 00:22:52,010
classes and they're all organized and

509
00:22:47,660 --> 00:22:53,870
<font color="#E5E5E5">stored in different namespaces</font><font color="#CCCCCC"> so the</font>

510
00:22:52,010 --> 00:22:56,090
reason<font color="#CCCCCC"> that this is specific to the root</font>

511
00:22:53,870 --> 00:22:58,669
subscription namespace is because well

512
00:22:56,090 --> 00:23:01,909
<font color="#CCCCCC">that is the most common namespace in</font>

513
00:22:58,670 --> 00:23:03,800
which the three components of<font color="#CCCCCC"> WMI</font>

514
00:23:01,910 --> 00:23:06,140
persistence<font color="#E5E5E5"> and that's event filters</font>

515
00:23:03,800 --> 00:23:08,000
event consumers and<font color="#E5E5E5"> filter to consumer</font>

516
00:23:06,140 --> 00:23:10,700
bindings<font color="#E5E5E5"> would would live in</font>

517
00:23:08,000 --> 00:23:13,160
so let's parse this out<font color="#E5E5E5"> a little bit so</font>

518
00:23:10,700 --> 00:23:14,450
<font color="#E5E5E5">select star so that refers to give me</font>

519
00:23:13,160 --> 00:23:17,810
all properties from<font color="#E5E5E5"> an instance</font>

520
00:23:14,450 --> 00:23:20,150
operation event and that<font color="#E5E5E5"> is the</font>

521
00:23:17,810 --> 00:23:22,730
superclass of an instance creation

522
00:23:20,150 --> 00:23:25,760
instance modification and instance

523
00:23:22,730 --> 00:23:29,120
deletion event so this is casting a

524
00:23:25,760 --> 00:23:31,580
relatively wide net on<font color="#E5E5E5"> W my persistence</font>

525
00:23:29,120 --> 00:23:34,550
on whether you're basically creating<font color="#CCCCCC"> or</font>

526
00:23:31,580 --> 00:23:36,100
modifying existing<font color="#E5E5E5"> like in the case of</font>

527
00:23:34,550 --> 00:23:40,220
<font color="#E5E5E5">modification modifying existing</font>

528
00:23:36,100 --> 00:23:42,620
legitimate W my persistence<font color="#E5E5E5"> where the</font>

529
00:23:40,220 --> 00:23:45,370
target<font color="#E5E5E5"> instance is of what W my class</font>

530
00:23:42,620 --> 00:23:48,739
type event consumer<font color="#E5E5E5"> so a consumer is</font>

531
00:23:45,370 --> 00:23:50,629
where you insert<font color="#E5E5E5"> code so that could be a</font>

532
00:23:48,740 --> 00:23:52,730
command line event consumer so<font color="#E5E5E5"> execute</font>

533
00:23:50,630 --> 00:23:54,470
power shell eggsy whatever<font color="#E5E5E5"> it could be</font>

534
00:23:52,730 --> 00:23:56,360
an active script event consumer or

535
00:23:54,470 --> 00:23:59,840
<font color="#E5E5E5">you're executing</font><font color="#CCCCCC"> inline windows script</font>

536
00:23:56,360 --> 00:24:01,790
host code like VB script or<font color="#CCCCCC"> J script or</font>

537
00:23:59,840 --> 00:24:04,399
the target<font color="#E5E5E5"> instance is an event filter</font>

538
00:24:01,790 --> 00:24:06,350
an event filter defines the event that

539
00:24:04,400 --> 00:24:10,490
you<font color="#E5E5E5"> want to trigger on in the form of</font>

540
00:24:06,350 --> 00:24:13,280
something<font color="#E5E5E5"> like this a wql event query or</font>

541
00:24:10,490 --> 00:24:15,080
it's a filter<font color="#CCCCCC"> to consumer binding</font><font color="#E5E5E5"> this</font>

542
00:24:13,280 --> 00:24:17,990
<font color="#E5E5E5">is the thing that binds the filter and</font>

543
00:24:15,080 --> 00:24:23,149
consumer together and<font color="#E5E5E5"> actually registers</font>

544
00:24:17,990 --> 00:24:25,340
the WMI persistence so I know from

545
00:24:23,150 --> 00:24:27,950
<font color="#E5E5E5">previous</font><font color="#CCCCCC"> experience that</font><font color="#E5E5E5"> it's not just</font>

546
00:24:25,340 --> 00:24:30,408
<font color="#CCCCCC">the root subscription namespace</font><font color="#E5E5E5"> that</font>

547
00:24:27,950 --> 00:24:32,450
these persistence these<font color="#CCCCCC"> WMI</font><font color="#E5E5E5"> persistence</font>

548
00:24:30,409 --> 00:24:35,269
artifacts actually live in<font color="#CCCCCC"> they also</font>

549
00:24:32,450 --> 00:24:38,409
live in<font color="#E5E5E5"> the root default namespace so</font>

550
00:24:35,269 --> 00:24:42,139
Microsoft the developers of<font color="#E5E5E5"> sis Mon just</font>

551
00:24:38,409 --> 00:24:44,029
happened to<font color="#E5E5E5"> neglect this one fortunately</font>

552
00:24:42,139 --> 00:24:45,590
that will be a really<font color="#CCCCCC"> easy fix for</font><font color="#E5E5E5"> them</font>

553
00:24:44,029 --> 00:24:49,220
to implement they would just<font color="#E5E5E5"> put</font><font color="#CCCCCC"> this</font>

554
00:24:45,590 --> 00:24:51,799
same event query<font color="#E5E5E5"> and bind it to the root</font>

555
00:24:49,220 --> 00:24:54,980
default namespace<font color="#E5E5E5"> autoruns</font>

556
00:24:51,799 --> 00:24:57,139
has<font color="#CCCCCC"> WMI persistence tab and it already</font>

557
00:24:54,980 --> 00:25:02,059
captures root subscription and root

558
00:24:57,139 --> 00:25:05,090
default based persistence so<font color="#E5E5E5"> I wouldn't</font>

559
00:25:02,059 --> 00:25:07,428
<font color="#E5E5E5">be extremely satisfied with doing</font><font color="#CCCCCC"> WMI</font>

560
00:25:05,090 --> 00:25:09,529
persistence on an<font color="#CCCCCC"> op using the root</font>

561
00:25:07,429 --> 00:25:12,110
default namespace<font color="#CCCCCC"> or</font><font color="#E5E5E5"> one because I'm</font>

562
00:25:09,529 --> 00:25:14,809
kind<font color="#E5E5E5"> of burning it right here</font><font color="#CCCCCC"> and</font>

563
00:25:12,110 --> 00:25:19,729
because it's easy to<font color="#E5E5E5"> fix so that may not</font>

564
00:25:14,809 --> 00:25:21,980
last forever<font color="#CCCCCC"> so can we do</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> so</font>

565
00:25:19,730 --> 00:25:23,779
while on our<font color="#E5E5E5"> team we like to come up</font>

566
00:25:21,980 --> 00:25:26,149
with<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> base</font><font color="#CCCCCC"> of tradecraft</font>

567
00:25:23,779 --> 00:25:29,809
<font color="#E5E5E5">eventually release it for others to</font>

568
00:25:26,149 --> 00:25:32,268
build detections off of but we're always

569
00:25:29,809 --> 00:25:34,879
asking ourselves<font color="#E5E5E5"> like can</font><font color="#CCCCCC"> we do</font><font color="#E5E5E5"> better</font>

570
00:25:32,269 --> 00:25:37,669
<font color="#CCCCCC">so when this technique eventually is</font>

571
00:25:34,880 --> 00:25:40,159
burnt<font color="#CCCCCC"> and there are mitigations</font><font color="#E5E5E5"> and or</font>

572
00:25:37,669 --> 00:25:41,929
security optics for it<font color="#E5E5E5"> we still need to</font>

573
00:25:40,159 --> 00:25:44,419
be thinking of the<font color="#E5E5E5"> the latest</font><font color="#CCCCCC"> and</font>

574
00:25:41,929 --> 00:25:46,700
<font color="#CCCCCC">greatest things so that we can try to</font>

575
00:25:44,419 --> 00:25:48,440
<font color="#E5E5E5">win always be winning the the</font><font color="#CCCCCC"> cat and</font>

576
00:25:46,700 --> 00:25:51,980
<font color="#CCCCCC">mouse game</font><font color="#E5E5E5"> that's all this is it's just</font>

577
00:25:48,440 --> 00:25:54,679
<font color="#E5E5E5">a constant cat and mouse game so I</font>

578
00:25:51,980 --> 00:25:59,149
wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> know if</font><font color="#E5E5E5"> W</font><font color="#CCCCCC"> my persistence was</font>

579
00:25:54,679 --> 00:26:01,639
<font color="#E5E5E5">possible outside</font><font color="#CCCCCC"> of the existing</font><font color="#E5E5E5"> known</font><font color="#CCCCCC"> W</font>

580
00:25:59,149 --> 00:26:03,830
<font color="#CCCCCC">WI</font><font color="#E5E5E5"> namespaces so I was reading some</font>

581
00:26:01,639 --> 00:26:07,510
<font color="#E5E5E5">documentation and this one came</font><font color="#CCCCCC"> up and</font>

582
00:26:03,830 --> 00:26:10,668
it turns out<font color="#CCCCCC"> that</font><font color="#E5E5E5"> every namespace in</font><font color="#CCCCCC"> WMI</font>

583
00:26:07,510 --> 00:26:12,799
is automatically<font color="#E5E5E5"> populated</font><font color="#CCCCCC"> with system</font>

584
00:26:10,669 --> 00:26:15,070
classes so a<font color="#E5E5E5"> system class is any class</font>

585
00:26:12,799 --> 00:26:17,899
that<font color="#CCCCCC"> starts with underscore underscore</font>

586
00:26:15,070 --> 00:26:20,269
<font color="#E5E5E5">three of which</font><font color="#CCCCCC"> are event filter event</font>

587
00:26:17,899 --> 00:26:22,969
consumer and filter to consumer binding

588
00:26:20,269 --> 00:26:25,730
now what you don't get are these

589
00:26:22,970 --> 00:26:27,200
standard<font color="#CCCCCC"> Microsoft</font><font color="#E5E5E5"> event consumers which</font>

590
00:26:25,730 --> 00:26:29,510
would be like active script event

591
00:26:27,200 --> 00:26:32,690
consumer<font color="#E5E5E5"> command line event consumer and</font>

592
00:26:29,510 --> 00:26:35,299
various others<font color="#E5E5E5"> so that's a problem</font><font color="#CCCCCC"> that</font>

593
00:26:32,690 --> 00:26:38,000
<font color="#E5E5E5">we</font><font color="#CCCCCC"> don't have those exposed to us in a</font>

594
00:26:35,299 --> 00:26:41,299
<font color="#CCCCCC">non-standard namespace so what do we</font><font color="#E5E5E5"> do</font>

595
00:26:38,000 --> 00:26:41,929
and just to call out what the goal<font color="#CCCCCC"> is</font>

596
00:26:41,299 --> 00:26:44,809
here is

597
00:26:41,929 --> 00:26:48,200
I would like<font color="#CCCCCC"> to perform w my persistence</font>

598
00:26:44,809 --> 00:26:51,350
in any<font color="#E5E5E5"> arbitrary namespace</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> possible</font>

599
00:26:48,200 --> 00:26:54,740
<font color="#E5E5E5">because traditional</font><font color="#CCCCCC"> W</font><font color="#E5E5E5"> my detections up</font>

600
00:26:51,350 --> 00:26:57,830
to this point are focused on namespaces

601
00:26:54,740 --> 00:26:59,330
so<font color="#E5E5E5"> if any namespace could be used</font><font color="#CCCCCC"> then</font>

602
00:26:57,830 --> 00:27:02,480
we're going to<font color="#E5E5E5"> need to do better with</font>

603
00:26:59,330 --> 00:27:06,889
<font color="#E5E5E5">our detection somehow so we need to</font>

604
00:27:02,480 --> 00:27:09,470
figure out<font color="#E5E5E5"> how to implement different</font>

605
00:27:06,889 --> 00:27:12,080
<font color="#E5E5E5">event consumer classes so ideally I'd</font>

606
00:27:09,470 --> 00:27:13,639
love to replicate the active script

607
00:27:12,080 --> 00:27:17,210
event consumer or command line event

608
00:27:13,639 --> 00:27:19,360
consumer in my namespace<font color="#CCCCCC"> of choice so</font><font color="#E5E5E5"> I</font>

609
00:27:17,210 --> 00:27:21,619
had to understand the<font color="#CCCCCC"> implementation of</font>

610
00:27:19,360 --> 00:27:24,139
active super active script event

611
00:27:21,619 --> 00:27:26,418
consumers in in this case<font color="#E5E5E5"> and so where I</font>

612
00:27:24,139 --> 00:27:28,850
would start is by<font color="#CCCCCC"> looking at a</font><font color="#E5E5E5"> moth file</font>

613
00:27:26,419 --> 00:27:31,759
or a managed object format file<font color="#E5E5E5"> this</font>

614
00:27:28,850 --> 00:27:34,519
defines kind of like the schema of<font color="#CCCCCC"> WMI</font>

615
00:27:31,759 --> 00:27:36,080
classes methods<font color="#CCCCCC"> properties</font><font color="#E5E5E5"> and it also</font>

616
00:27:34,519 --> 00:27:39,139
gives you<font color="#CCCCCC"> some information</font><font color="#E5E5E5"> about how</font>

617
00:27:36,080 --> 00:27:40,759
<font color="#CCCCCC">they're registered</font><font color="#E5E5E5"> so here's the</font><font color="#CCCCCC"> the</font>

618
00:27:39,139 --> 00:27:44,658
definition<font color="#CCCCCC"> for active script event</font>

619
00:27:40,759 --> 00:27:49,549
consumer and what happens next is<font color="#E5E5E5"> the</font>

620
00:27:44,659 --> 00:27:52,220
consumer is bound to a<font color="#E5E5E5"> provider so</font><font color="#CCCCCC"> aw</font><font color="#E5E5E5"> my</font>

621
00:27:49,549 --> 00:27:54,679
there's a ton of classes which represent

622
00:27:52,220 --> 00:27:56,899
data that can be<font color="#E5E5E5"> collected set or</font>

623
00:27:54,679 --> 00:27:59,360
methods<font color="#E5E5E5"> that can be</font><font color="#CCCCCC"> executed but under</font>

624
00:27:56,899 --> 00:28:01,189
the<font color="#CCCCCC"> hood there needs to be code that can</font>

625
00:27:59,360 --> 00:28:04,039
<font color="#E5E5E5">either supply classes with information</font>

626
00:28:01,190 --> 00:28:06,080
or execute methods<font color="#E5E5E5"> and so the code that</font>

627
00:28:04,039 --> 00:28:09,529
supplies<font color="#CCCCCC"> WMI with this functionality</font><font color="#E5E5E5"> is</font>

628
00:28:06,080 --> 00:28:13,668
a provider<font color="#E5E5E5"> and these are all registered</font>

629
00:28:09,529 --> 00:28:17,179
as<font color="#CCCCCC"> comm components these providers</font><font color="#E5E5E5"> and</font>

630
00:28:13,669 --> 00:28:19,539
so<font color="#CCCCCC"> I saw this</font><font color="#E5E5E5"> and note the clsid</font><font color="#CCCCCC"> they're</font>

631
00:28:17,179 --> 00:28:23,149
the one that starts with<font color="#CCCCCC"> two six six</font><font color="#E5E5E5"> and</font>

632
00:28:19,539 --> 00:28:25,158
what happens is the class is bound to

633
00:28:23,149 --> 00:28:28,489
<font color="#E5E5E5">that provider and then the provider</font>

634
00:28:25,159 --> 00:28:31,129
itself<font color="#E5E5E5"> is registered</font><font color="#CCCCCC"> for that</font><font color="#E5E5E5"> specific</font>

635
00:28:28,490 --> 00:28:33,110
namespace now just to show<font color="#E5E5E5"> you what that</font>

636
00:28:31,129 --> 00:28:34,820
<font color="#CCCCCC">particular provider points to in the</font>

637
00:28:33,110 --> 00:28:37,850
registry<font color="#CCCCCC"> for active script event</font>

638
00:28:34,820 --> 00:28:40,908
consumer<font color="#E5E5E5"> the backing provider is SCR</font>

639
00:28:37,850 --> 00:28:44,418
<font color="#E5E5E5">cons dot exe this is the component that</font>

640
00:28:40,909 --> 00:28:46,039
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> executes the VB script or J</font>

641
00:28:44,419 --> 00:28:47,139
<font color="#E5E5E5">scripts when active script event</font>

642
00:28:46,039 --> 00:28:50,840
consumer is used

643
00:28:47,139 --> 00:28:52,879
so our weaponization strategy is is as

644
00:28:50,840 --> 00:28:54,499
follows<font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> enable an act</font>

645
00:28:52,879 --> 00:28:55,830
descriptive and consumer or command line

646
00:28:54,499 --> 00:28:57,960
event consumer for any

647
00:28:55,830 --> 00:28:59,789
arbitrary<font color="#E5E5E5"> namespace and so I was able to</font>

648
00:28:57,960 --> 00:29:02,730
<font color="#CCCCCC">achieve this and</font><font color="#E5E5E5"> you can go to this link</font>

649
00:28:59,789 --> 00:29:05,879
<font color="#CCCCCC">I'll make it a</font><font color="#E5E5E5"> public just after this</font>

650
00:29:02,730 --> 00:29:07,950
talk and I<font color="#E5E5E5"> implemented to PowerShell</font>

651
00:29:05,880 --> 00:29:10,260
functions<font color="#CCCCCC"> and I'll show off the new</font>

652
00:29:07,950 --> 00:29:12,240
<font color="#E5E5E5">active script event consumer class so</font>

653
00:29:10,260 --> 00:29:14,789
what<font color="#E5E5E5"> this does under the hood is it</font>

654
00:29:12,240 --> 00:29:17,279
creates an active script<font color="#E5E5E5"> event consumer</font>

655
00:29:14,789 --> 00:29:19,350
class using the<font color="#E5E5E5"> class name of your</font>

656
00:29:17,279 --> 00:29:21,240
choosing<font color="#CCCCCC"> so it doesn't have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually</font>

657
00:29:19,350 --> 00:29:23,279
be named<font color="#E5E5E5"> active script event consumer</font>

658
00:29:21,240 --> 00:29:25,080
and it will live in any<font color="#E5E5E5"> arbitrary</font>

659
00:29:23,279 --> 00:29:27,659
namespace you<font color="#E5E5E5"> want so it's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> bypass</font>

660
00:29:25,080 --> 00:29:33,330
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> the classic WMI based detection</font>

661
00:29:27,659 --> 00:29:36,200
<font color="#CCCCCC">z' for persistence so let's dive into a</font>

662
00:29:33,330 --> 00:29:39,510
demo here all right<font color="#E5E5E5"> so I've got</font>

663
00:29:36,200 --> 00:29:42,419
<font color="#E5E5E5">PowerShell up and running and what we're</font>

664
00:29:39,510 --> 00:29:45,419
gonna do first is<font color="#CCCCCC"> just clear out our</font><font color="#E5E5E5"> sis</font>

665
00:29:42,419 --> 00:29:48,059
<font color="#E5E5E5">Mon &</font><font color="#CCCCCC"> Whinney operational event logs I</font>

666
00:29:45,419 --> 00:29:51,600
don't want it to be overly<font color="#E5E5E5"> populated now</font>

667
00:29:48,059 --> 00:29:54,450
<font color="#E5E5E5">I want to show you the currently running</font>

668
00:29:51,600 --> 00:29:56,309
<font color="#E5E5E5">sis Mon config and all I'm capturing</font>

669
00:29:54,450 --> 00:29:59,340
right now are women events<font color="#E5E5E5"> now these</font>

670
00:29:56,309 --> 00:30:01,710
three women ents refer to detections for

671
00:29:59,340 --> 00:30:06,178
the creation<font color="#CCCCCC"> or modification or deletion</font>

672
00:30:01,710 --> 00:30:09,179
<font color="#E5E5E5">of event consumer instances event filter</font>

673
00:30:06,179 --> 00:30:15,659
instances and filter to consumer binding

674
00:30:09,179 --> 00:30:17,429
instances now<font color="#E5E5E5"> I'm going to load the code</font>

675
00:30:15,659 --> 00:30:21,120
that implements new<font color="#E5E5E5"> active script event</font>

676
00:30:17,429 --> 00:30:23,580
consumer<font color="#E5E5E5"> create my class and notice that</font>

677
00:30:21,120 --> 00:30:25,649
the namespace<font color="#E5E5E5"> I specified is foo so this</font>

678
00:30:23,580 --> 00:30:28,620
is gonna live in the root foo namespace

679
00:30:25,649 --> 00:30:30,689
and the class<font color="#E5E5E5"> is actually called not an</font>

680
00:30:28,620 --> 00:30:33,268
active script event consumer just<font color="#E5E5E5"> to</font>

681
00:30:30,690 --> 00:30:34,049
show you that<font color="#E5E5E5"> you can name</font><font color="#CCCCCC"> it whatever</font>

682
00:30:33,269 --> 00:30:37,019
you want

683
00:30:34,049 --> 00:30:41,220
so confirms that that<font color="#CCCCCC"> was created</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

684
00:30:37,019 --> 00:30:43,950
root foo namespace<font color="#E5E5E5"> now we're going to</font>

685
00:30:41,220 --> 00:30:48,570
create<font color="#CCCCCC"> a file</font><font color="#E5E5E5"> that our little payload is</font>

686
00:30:43,950 --> 00:30:50,960
going to write to so here's a little VB

687
00:30:48,570 --> 00:30:53,580
script payload that<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to run</font>

688
00:30:50,960 --> 00:30:56,100
it's<font color="#E5E5E5"> just going to show the the day time</font>

689
00:30:53,580 --> 00:31:00,379
it's going to execute<font color="#E5E5E5"> every</font><font color="#CCCCCC"> 5 seconds</font>

690
00:30:56,100 --> 00:31:04,020
using<font color="#E5E5E5"> an interval timer instruction or</font><font color="#CCCCCC"> a</font>

691
00:31:00,380 --> 00:31:05,520
interval time<font color="#CCCCCC"> will time</font><font color="#E5E5E5"> it class</font><font color="#CCCCCC"> select</font>

692
00:31:04,020 --> 00:31:07,620
star from timer event<font color="#E5E5E5"> where timer ID</font>

693
00:31:05,520 --> 00:31:09,700
equals our timer<font color="#E5E5E5"> so the event will</font>

694
00:31:07,620 --> 00:31:12,879
<font color="#E5E5E5">trigger every 5 seconds</font>

695
00:31:09,700 --> 00:31:16,480
and then we're gonna register<font color="#CCCCCC"> our event</font>

696
00:31:12,880 --> 00:31:18,250
consumer in this case are<font color="#E5E5E5"> not an active</font>

697
00:31:16,480 --> 00:31:20,500
script event consumer class<font color="#E5E5E5"> in the FEU</font>

698
00:31:18,250 --> 00:31:23,710
namespace and finally register

699
00:31:20,500 --> 00:31:28,570
everything using a filter<font color="#CCCCCC"> to consumer</font>

700
00:31:23,710 --> 00:31:30,820
binding so let's run<font color="#E5E5E5"> that get our</font>

701
00:31:28,570 --> 00:31:36,189
persistence going in the<font color="#CCCCCC"> non-standard</font>

702
00:31:30,820 --> 00:31:38,049
<font color="#E5E5E5">namespace and if everything works</font><font color="#CCCCCC"> out</font>

703
00:31:36,190 --> 00:31:43,029
<font color="#E5E5E5">every five seconds we should see our</font>

704
00:31:38,049 --> 00:31:44,918
payload executing as system so nothing

705
00:31:43,029 --> 00:31:47,320
terribly special<font color="#E5E5E5"> about what you're</font>

706
00:31:44,919 --> 00:31:49,539
seeing<font color="#E5E5E5"> this is still your classic</font><font color="#CCCCCC"> W</font><font color="#E5E5E5"> my</font>

707
00:31:47,320 --> 00:31:52,629
persistence<font color="#E5E5E5"> the difference being it</font>

708
00:31:49,539 --> 00:31:59,169
lives in an arbitrary namespace using an

709
00:31:52,630 --> 00:32:02,950
arbitrary class name now<font color="#E5E5E5"> just to prove</font>

710
00:31:59,169 --> 00:32:06,460
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> that sis ma does not capture it</font>

711
00:32:02,950 --> 00:32:10,870
if<font color="#E5E5E5"> n ID 21 refers to creation</font>

712
00:32:06,460 --> 00:32:13,630
modification or deletion<font color="#E5E5E5"> of filter</font>

713
00:32:10,870 --> 00:32:16,000
filter to consumer binding instances<font color="#E5E5E5"> so</font>

714
00:32:13,630 --> 00:32:18,010
we don't<font color="#E5E5E5"> have an event for that if this</font>

715
00:32:16,000 --> 00:32:23,110
lived<font color="#CCCCCC"> enroute subscription</font><font color="#E5E5E5"> it would have</font>

716
00:32:18,010 --> 00:32:25,840
captured<font color="#E5E5E5"> it but fortunately starting in</font>

717
00:32:23,110 --> 00:32:27,668
Windows 10 we have a mitigating

718
00:32:25,840 --> 00:32:30,250
detection which i think is amazing<font color="#CCCCCC"> in</font>

719
00:32:27,669 --> 00:32:33,789
the<font color="#E5E5E5"> microsoft windows</font><font color="#CCCCCC"> WMI activity</font>

720
00:32:30,250 --> 00:32:37,360
operational event<font color="#E5E5E5"> log we get the full</font>

721
00:32:33,789 --> 00:32:40,210
context of<font color="#E5E5E5"> that persistence so this is a</font>

722
00:32:37,360 --> 00:32:43,240
great way to highlight<font color="#E5E5E5"> that sis</font><font color="#CCCCCC"> Mon is</font>

723
00:32:40,210 --> 00:32:45,760
very much a supplemental data collection

724
00:32:43,240 --> 00:32:46,710
tool so there will<font color="#CCCCCC"> always be</font><font color="#E5E5E5"> other</font>

725
00:32:45,760 --> 00:32:49,389
better

726
00:32:46,710 --> 00:32:50,500
supplementary event log sources in this

727
00:32:49,389 --> 00:32:52,449
case if you're in a Windows 10

728
00:32:50,500 --> 00:32:55,929
environment then<font color="#E5E5E5"> you get this one so</font>

729
00:32:52,450 --> 00:32:58,120
this<font color="#E5E5E5"> captures the namespace context the</font>

730
00:32:55,929 --> 00:33:00,820
name of the event consumer the class

731
00:32:58,120 --> 00:33:04,739
name of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> event consumer and all of</font>

732
00:33:00,820 --> 00:33:04,740
the contexts related to its registration

733
00:33:10,250 --> 00:33:16,440
so bringing<font color="#E5E5E5"> bringing this back this is</font>

734
00:33:13,950 --> 00:33:18,090
<font color="#CCCCCC">all important in part this</font><font color="#E5E5E5"> was an</font>

735
00:33:16,440 --> 00:33:20,120
important part<font color="#E5E5E5"> of the methodology we're</font>

736
00:33:18,090 --> 00:33:22,649
<font color="#E5E5E5">verifying that the data collection tool</font>

737
00:33:20,120 --> 00:33:25,199
<font color="#E5E5E5">it said it had a guarantee that</font><font color="#CCCCCC"> I</font>

738
00:33:22,650 --> 00:33:27,360
collected<font color="#CCCCCC"> w</font><font color="#E5E5E5"> my event subscriptions</font><font color="#CCCCCC"> and</font>

739
00:33:25,200 --> 00:33:30,300
in this case we verified that<font color="#E5E5E5"> that was</font>

740
00:33:27,360 --> 00:33:32,070
not quite the<font color="#CCCCCC"> case</font><font color="#E5E5E5"> so highlighting the</font>

741
00:33:30,300 --> 00:33:33,780
importance of actually<font color="#E5E5E5"> taking</font><font color="#CCCCCC"> that's</font>

742
00:33:32,070 --> 00:33:36,330
doing that step in<font color="#CCCCCC"> that in the</font>

743
00:33:33,780 --> 00:33:38,430
methodology<font color="#E5E5E5"> the next step that we're</font>

744
00:33:36,330 --> 00:33:40,770
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do that we performed as part of</font>

745
00:33:38,430 --> 00:33:44,070
<font color="#E5E5E5">this was the footprint and an attack</font>

746
00:33:40,770 --> 00:33:46,170
surface analysis of<font color="#CCCCCC"> sis Mon so our goal</font>

747
00:33:44,070 --> 00:33:48,689
in this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> trying to understand</font><font color="#E5E5E5"> what sis</font>

748
00:33:46,170 --> 00:33:51,750
Vaughn<font color="#E5E5E5"> adds to the host so what files</font>

749
00:33:48,690 --> 00:33:53,460
drivers etc<font color="#E5E5E5"> how does the tool behave</font>

750
00:33:51,750 --> 00:33:56,130
during<font color="#CCCCCC"> operations so that's during</font>

751
00:33:53,460 --> 00:33:59,520
installation during<font color="#E5E5E5"> its normal use cases</font>

752
00:33:56,130 --> 00:34:02,400
<font color="#E5E5E5">when the configuration is updated</font><font color="#CCCCCC"> etc</font>

753
00:33:59,520 --> 00:34:04,590
and then what's resources does the tool

754
00:34:02,400 --> 00:34:07,830
depend on so building<font color="#E5E5E5"> out a dependency</font>

755
00:34:04,590 --> 00:34:11,100
<font color="#CCCCCC">tree to identify if there are any</font>

756
00:34:07,830 --> 00:34:12,989
technologies that<font color="#E5E5E5"> W</font><font color="#CCCCCC"> MA or that sis Mon</font>

757
00:34:11,100 --> 00:34:15,420
depends on that we can<font color="#E5E5E5"> potentially</font>

758
00:34:12,989 --> 00:34:17,489
attack if we can attack<font color="#E5E5E5"> those dependent</font>

759
00:34:15,420 --> 00:34:22,040
technologies then we can subvert we can

760
00:34:17,489 --> 00:34:22,040
potentially<font color="#E5E5E5"> subvert system on itself</font><font color="#CCCCCC"> so</font>

761
00:34:22,940 --> 00:34:27,230
<font color="#CCCCCC">we're going</font><font color="#E5E5E5"> to just focus</font><font color="#CCCCCC"> on one aspect</font>

762
00:34:25,139 --> 00:34:29,609
of this just do the time constraints but

763
00:34:27,230 --> 00:34:33,600
<font color="#E5E5E5">we're gonna talk about sis</font><font color="#CCCCCC"> Mons</font>

764
00:34:29,610 --> 00:34:35,220
installation<font color="#E5E5E5"> so sis</font><font color="#CCCCCC"> Mon like like I</font>

765
00:34:33,600 --> 00:34:39,270
mentioned does not have a centralized

766
00:34:35,219 --> 00:34:40,770
<font color="#E5E5E5">way to update or or install itself so</font>

767
00:34:39,270 --> 00:34:42,929
typically that's<font color="#E5E5E5"> either done on a golden</font>

768
00:34:40,770 --> 00:34:46,320
image<font color="#E5E5E5"> or more often pushed out through</font>

769
00:34:42,929 --> 00:34:48,230
<font color="#E5E5E5">an IT administration tool so for example</font>

770
00:34:46,320 --> 00:34:51,180
GPO it could be installed<font color="#E5E5E5"> through there</font>

771
00:34:48,230 --> 00:34:54,510
<font color="#CCCCCC">the</font><font color="#E5E5E5"> installation behavior changes</font>

772
00:34:51,179 --> 00:34:57,600
depending on which<font color="#CCCCCC"> system on binary</font><font color="#E5E5E5"> is</font>

773
00:34:54,510 --> 00:34:59,820
used<font color="#E5E5E5"> so when you</font><font color="#CCCCCC"> download this one</font>

774
00:34:57,600 --> 00:35:03,630
there's two executables there sis<font color="#E5E5E5"> monkey</font>

775
00:34:59,820 --> 00:35:05,820
<font color="#E5E5E5">XE and system on 64</font><font color="#CCCCCC"> exe a lot of people</font>

776
00:35:03,630 --> 00:35:07,800
<font color="#E5E5E5">just end up using sis</font><font color="#CCCCCC"> monkey XE because</font>

777
00:35:05,820 --> 00:35:10,110
when you run<font color="#E5E5E5"> it it</font><font color="#CCCCCC"> actually extracts the</font>

778
00:35:07,800 --> 00:35:12,930
<font color="#E5E5E5">64 bit version so system on that exe is</font>

779
00:35:10,110 --> 00:35:16,050
the x86<font color="#E5E5E5"> version and when you run</font><font color="#CCCCCC"> that on</font>

780
00:35:12,930 --> 00:35:22,649
a<font color="#E5E5E5"> 64-bit</font><font color="#CCCCCC"> system it'll extract the 64-bit</font>

781
00:35:16,050 --> 00:35:24,060
version and execute that<font color="#E5E5E5"> instead so once</font>

782
00:35:22,650 --> 00:35:25,800
some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the interesting thing</font>

783
00:35:24,060 --> 00:35:28,799
<font color="#CCCCCC">we noticed that it installed</font><font color="#E5E5E5"> on a</font>

784
00:35:25,800 --> 00:35:31,410
machine was there's various files that

785
00:35:28,800 --> 00:35:33,840
<font color="#E5E5E5">adds so sis Monda exe and the driver</font>

786
00:35:31,410 --> 00:35:36,180
<font color="#E5E5E5">that's a service the system</font><font color="#CCCCCC"> on service</font>

787
00:35:33,840 --> 00:35:37,680
<font color="#E5E5E5">the user mode service and the driver</font>

788
00:35:36,180 --> 00:35:41,910
component which does a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

789
00:35:37,680 --> 00:35:44,000
<font color="#E5E5E5">collection</font><font color="#CCCCCC"> there's you know</font><font color="#E5E5E5"> the services</font>

790
00:35:41,910 --> 00:35:46,830
<font color="#E5E5E5">for this</font><font color="#CCCCCC"> vs. spawn and the driver</font>

791
00:35:44,000 --> 00:35:48,780
<font color="#CCCCCC">there's all the registry</font><font color="#E5E5E5"> keys associated</font>

792
00:35:46,830 --> 00:35:51,710
with the service<font color="#E5E5E5"> and the driver one</font>

793
00:35:48,780 --> 00:35:54,750
worth standing<font color="#E5E5E5"> out is the parameters</font>

794
00:35:51,710 --> 00:35:56,640
registry key the third one down that<font color="#E5E5E5"> is</font>

795
00:35:54,750 --> 00:36:00,180
where<font color="#E5E5E5"> the system on configuration file</font>

796
00:35:56,640 --> 00:36:02,930
is<font color="#CCCCCC"> stored and as Matt mentioned it is</font>

797
00:36:00,180 --> 00:36:05,370
only accessible<font color="#E5E5E5"> by administrators</font>

798
00:36:02,930 --> 00:36:07,500
non-privileged or unprivileged users on

799
00:36:05,370 --> 00:36:10,170
a machine<font color="#E5E5E5"> cannot access that which is</font>

800
00:36:07,500 --> 00:36:13,200
fantastic<font color="#CCCCCC"> that that is locked down like</font>

801
00:36:10,170 --> 00:36:14,910
that because other things<font color="#E5E5E5"> that I think</font>

802
00:36:13,200 --> 00:36:17,250
<font color="#CCCCCC">should be locked down which always</font>

803
00:36:14,910 --> 00:36:18,839
<font color="#E5E5E5">aren't would be like event logs</font><font color="#CCCCCC"> you know</font>

804
00:36:17,250 --> 00:36:23,310
like the PowerShell<font color="#CCCCCC"> Event log</font><font color="#E5E5E5"> for</font>

805
00:36:18,840 --> 00:36:25,380
example any non admin user can<font color="#E5E5E5"> read that</font>

806
00:36:23,310 --> 00:36:27,330
<font color="#E5E5E5">to their heart's content</font><font color="#CCCCCC"> and pull all</font>

807
00:36:25,380 --> 00:36:29,850
kinds<font color="#CCCCCC"> of</font><font color="#E5E5E5"> interesting information for</font>

808
00:36:27,330 --> 00:36:32,220
their situational awareness<font color="#E5E5E5"> likewise</font>

809
00:36:29,850 --> 00:36:34,560
this<font color="#CCCCCC"> mod installs an</font><font color="#E5E5E5"> etw provider from</font>

810
00:36:32,220 --> 00:36:38,009
which it reads a bunch<font color="#E5E5E5"> its events</font><font color="#CCCCCC"> and</font>

811
00:36:34,560 --> 00:36:41,759
then it has an event<font color="#E5E5E5"> log that that we</font>

812
00:36:38,010 --> 00:36:44,070
can also view and access<font color="#E5E5E5"> the events from</font>

813
00:36:41,760 --> 00:36:45,660
so again<font color="#E5E5E5"> the reason why we want to</font>

814
00:36:44,070 --> 00:36:47,730
understand what<font color="#CCCCCC"> these are because if we</font>

815
00:36:45,660 --> 00:36:50,279
if<font color="#E5E5E5"> I as an attacker can gain control</font><font color="#CCCCCC"> of</font>

816
00:36:47,730 --> 00:36:52,560
any of<font color="#E5E5E5"> these components</font><font color="#CCCCCC"> then I can</font>

817
00:36:50,280 --> 00:36:55,170
potentially<font color="#E5E5E5"> subversive might as a whole</font>

818
00:36:52,560 --> 00:36:57,810
<font color="#CCCCCC">and each one of those bullets</font><font color="#E5E5E5"> is a</font>

819
00:36:55,170 --> 00:36:59,790
securable<font color="#E5E5E5"> object meaning each one of</font>

820
00:36:57,810 --> 00:37:01,740
them will have a security descriptor

821
00:36:59,790 --> 00:37:04,200
associated with them so<font color="#E5E5E5"> that would be</font>

822
00:37:01,740 --> 00:37:06,629
part of our analysis is ensuring that

823
00:37:04,200 --> 00:37:08,700
<font color="#CCCCCC">yes you indeed have to be admin for each</font>

824
00:37:06,630 --> 00:37:10,470
one of<font color="#CCCCCC"> those components and we did</font>

825
00:37:08,700 --> 00:37:12,720
<font color="#E5E5E5">verify that for these specific</font>

826
00:37:10,470 --> 00:37:15,509
<font color="#E5E5E5">components that you do have to be an</font>

827
00:37:12,720 --> 00:37:18,180
administrator<font color="#CCCCCC"> as I was doing</font><font color="#E5E5E5"> this</font>

828
00:37:15,510 --> 00:37:21,000
analysis we did realize<font color="#E5E5E5"> a few</font>

829
00:37:18,180 --> 00:37:25,040
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> things so if you are using</font>

830
00:37:21,000 --> 00:37:28,500
the<font color="#CCCCCC"> 32 bit system on on a</font><font color="#E5E5E5"> 64-bit system</font>

831
00:37:25,040 --> 00:37:32,070
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> 60 it auto extracts the</font><font color="#CCCCCC"> 64-bit</font>

832
00:37:28,500 --> 00:37:36,720
<font color="#CCCCCC">BIRT 64 bit version of system on to the</font>

833
00:37:32,070 --> 00:37:37,740
temp<font color="#CCCCCC"> folder usually</font><font color="#E5E5E5"> IT administration</font>

834
00:37:36,720 --> 00:37:40,680
software<font color="#E5E5E5"> is running</font>

835
00:37:37,740 --> 00:37:42,750
system so when<font color="#E5E5E5"> this happens and the</font>

836
00:37:40,680 --> 00:37:45,890
<font color="#CCCCCC">Installer gets written to</font><font color="#E5E5E5"> the Sidra the</font>

837
00:37:42,750 --> 00:37:48,900
<font color="#E5E5E5">C Drive windows temp folder which if</font>

838
00:37:45,890 --> 00:37:51,359
which<font color="#CCCCCC"> is writable by everybody</font><font color="#E5E5E5"> on the</font>

839
00:37:48,900 --> 00:37:54,900
operating system<font color="#CCCCCC"> so as you can</font><font color="#E5E5E5"> see here</font>

840
00:37:51,360 --> 00:37:58,770
in this proc<font color="#CCCCCC"> Wan image</font><font color="#E5E5E5"> this is during</font>

841
00:37:54,900 --> 00:38:02,100
<font color="#CCCCCC">the Installer we can see sis Mon it it</font>

842
00:37:58,770 --> 00:38:04,530
<font color="#E5E5E5">starts off this the x86 version is in</font><font color="#CCCCCC"> C</font>

843
00:38:02,100 --> 00:38:07,500
when a system 32 system on system on<font color="#CCCCCC"> de</font>

844
00:38:04,530 --> 00:38:10,410
<font color="#CCCCCC">Exe after that runs it extracts the</font>

845
00:38:07,500 --> 00:38:13,770
<font color="#E5E5E5">64-bit version to the temp folder so</font>

846
00:38:10,410 --> 00:38:15,390
this<font color="#E5E5E5"> this and then it executes it so</font><font color="#CCCCCC"> I</font>

847
00:38:13,770 --> 00:38:17,130
from an attacker perspective I have<font color="#CCCCCC"> a</font>

848
00:38:15,390 --> 00:38:19,200
couple<font color="#CCCCCC"> different ways</font><font color="#E5E5E5"> I could abuse this</font>

849
00:38:17,130 --> 00:38:21,240
<font color="#E5E5E5">a very simple one is through DLL</font>

850
00:38:19,200 --> 00:38:23,759
hijacking<font color="#CCCCCC"> I can just drop a</font><font color="#E5E5E5"> DLL that</font>

851
00:38:21,240 --> 00:38:26,459
<font color="#E5E5E5">system on is looking for and I did</font>

852
00:38:23,760 --> 00:38:28,410
<font color="#E5E5E5">verify that there</font><font color="#CCCCCC"> are several and then</font>

853
00:38:26,460 --> 00:38:31,710
you can you know potentially elevate

854
00:38:28,410 --> 00:38:34,618
your privileges privileges to system you

855
00:38:31,710 --> 00:38:36,420
can also use symlink redirection<font color="#CCCCCC"> -</font>

856
00:38:34,619 --> 00:38:39,119
there's a time<font color="#CCCCCC"> of</font><font color="#E5E5E5"> check and a time of</font>

857
00:38:36,420 --> 00:38:40,410
use<font color="#CCCCCC"> type of attack that you can do there</font>

858
00:38:39,119 --> 00:38:43,350
that's beyond the<font color="#CCCCCC"> scope of this talk</font>

859
00:38:40,410 --> 00:38:47,520
<font color="#CCCCCC">vibes yeah big thanks to James for chat</font>

860
00:38:43,350 --> 00:38:51,650
<font color="#CCCCCC">for</font><font color="#E5E5E5"> that research in addition to just</font>

861
00:38:47,520 --> 00:38:55,710
the installer file itself when sis<font color="#E5E5E5"> Mon</font>

862
00:38:51,650 --> 00:38:58,890
is installed<font color="#CCCCCC"> it use what do you call it</font>

863
00:38:55,710 --> 00:39:03,630
<font color="#E5E5E5">web web you what win event you tilde XE</font>

864
00:38:58,890 --> 00:39:05,730
to install that<font color="#E5E5E5"> the event log</font><font color="#CCCCCC"> and how it</font>

865
00:39:03,630 --> 00:39:09,450
does this is during installation it

866
00:39:05,730 --> 00:39:14,040
copies a XML manifest to the temp folder

867
00:39:09,450 --> 00:39:17,910
<font color="#E5E5E5">and exploitation of this take takes a</font>

868
00:39:14,040 --> 00:39:21,210
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a little finesse</font><font color="#CCCCCC"> so as you</font>

869
00:39:17,910 --> 00:39:24,000
can see<font color="#E5E5E5"> in this screenshot here the</font>

870
00:39:21,210 --> 00:39:27,720
highlighted items show<font color="#E5E5E5"> where that file</font>

871
00:39:24,000 --> 00:39:29,369
is added<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the first highlighted</font><font color="#E5E5E5"> item</font>

872
00:39:27,720 --> 00:39:31,950
at the end you can see<font color="#CCCCCC"> it's dropping</font><font color="#E5E5E5"> it</font>

873
00:39:29,369 --> 00:39:35,760
to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> windows temp</font><font color="#E5E5E5"> and then it's called</font>

874
00:39:31,950 --> 00:39:38,189
man<font color="#CCCCCC"> and then for numbers</font><font color="#E5E5E5"> dot temp so</font>

875
00:39:35,760 --> 00:39:41,670
that's gonna<font color="#CCCCCC"> sis plan attempts to</font><font color="#E5E5E5"> I done</font>

876
00:39:38,190 --> 00:39:44,130
<font color="#E5E5E5">to find a non-existent file and it uses</font>

877
00:39:41,670 --> 00:39:48,930
<font color="#E5E5E5">that same format so man for numbers then</font>

878
00:39:44,130 --> 00:39:51,160
TMP so I had the<font color="#CCCCCC"> idea of</font><font color="#E5E5E5"> well what if</font><font color="#CCCCCC"> I</font>

879
00:39:48,930 --> 00:39:52,779
just<font color="#CCCCCC"> exhaust that name</font><font color="#E5E5E5"> that</font>

880
00:39:51,160 --> 00:39:54,940
character set<font color="#E5E5E5"> so those numbers are</font>

881
00:39:52,779 --> 00:39:59,319
<font color="#E5E5E5">always going</font><font color="#CCCCCC"> to be you know</font><font color="#E5E5E5"> alphanumeric</font>

882
00:39:54,940 --> 00:40:01,539
<font color="#E5E5E5">so if I add that's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be 36 potential</font>

883
00:39:59,319 --> 00:40:05,259
characters<font color="#E5E5E5"> 36 to the fourth because</font>

884
00:40:01,539 --> 00:40:07,989
<font color="#E5E5E5">there's four characters</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I wrote 65535</font>

885
00:40:05,259 --> 00:40:10,119
files to the temp<font color="#E5E5E5"> folder and then</font>

886
00:40:07,989 --> 00:40:11,979
removed<font color="#CCCCCC"> write access to them so sis Mon</font>

887
00:40:10,119 --> 00:40:14,200
could<font color="#E5E5E5"> not write</font><font color="#CCCCCC"> write to him</font><font color="#E5E5E5"> and when</font>

888
00:40:11,979 --> 00:40:16,569
that happened<font color="#CCCCCC"> an interesting behavior</font>

889
00:40:14,200 --> 00:40:18,848
occurred it always created the file<font color="#CCCCCC"> C</font>

890
00:40:16,569 --> 00:40:21,849
<font color="#CCCCCC">Drive man</font><font color="#E5E5E5"> or that created the file of</font>

891
00:40:18,849 --> 00:40:23,859
<font color="#E5E5E5">Man 1 TMP so at that point at a</font>

892
00:40:21,849 --> 00:40:26,499
predictable<font color="#E5E5E5"> location to where</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> on</font>

893
00:40:23,859 --> 00:40:29,529
was always writing<font color="#CCCCCC"> his file and I could</font>

894
00:40:26,499 --> 00:40:33,038
potentially<font color="#E5E5E5"> use these James's symlink</font>

895
00:40:29,529 --> 00:40:35,229
attack to<font color="#CCCCCC"> regain control over the</font><font color="#E5E5E5"> the</font>

896
00:40:33,039 --> 00:40:36,970
event manifest<font color="#E5E5E5"> so this is interesting</font>

897
00:40:35,229 --> 00:40:41,939
<font color="#E5E5E5">because during</font><font color="#CCCCCC"> the installation</font><font color="#E5E5E5"> it</font>

898
00:40:36,970 --> 00:40:44,709
uninstalls the existing<font color="#E5E5E5"> the existing</font>

899
00:40:41,940 --> 00:40:46,569
event log<font color="#E5E5E5"> and then it will reinstall</font><font color="#CCCCCC"> it</font>

900
00:40:44,710 --> 00:40:48,940
so using this I could<font color="#CCCCCC"> potentially</font>

901
00:40:46,569 --> 00:40:51,279
uninstall any event log on the system or

902
00:40:48,940 --> 00:40:56,440
<font color="#E5E5E5">abuse that XML file in a bunch of other</font>

903
00:40:51,279 --> 00:40:59,589
<font color="#E5E5E5">ways so</font><font color="#CCCCCC"> what Lee</font><font color="#E5E5E5"> just covered maybe not</font>

904
00:40:56,440 --> 00:41:01,239
the sexiest form of privilege escalation

905
00:40:59,589 --> 00:41:05,160
but it's definitely<font color="#E5E5E5"> one of those like</font>

906
00:41:01,239 --> 00:41:07,749
<font color="#CCCCCC">why and</font><font color="#E5E5E5"> weight vectors but considering</font>

907
00:41:05,160 --> 00:41:10,149
you know administrators are eventually

908
00:41:07,749 --> 00:41:12,189
going to<font color="#E5E5E5"> update system</font><font color="#CCCCCC"> onto a later</font>

909
00:41:10,150 --> 00:41:15,400
version<font color="#E5E5E5"> as long as you're already</font>

910
00:41:12,190 --> 00:41:17,259
<font color="#CCCCCC">embedded and you can lie in wait in C</font>

911
00:41:15,400 --> 00:41:20,680
Windows 10 then you'll be good

912
00:41:17,259 --> 00:41:22,839
eventually<font color="#CCCCCC"> another part of attack</font>

913
00:41:20,680 --> 00:41:24,640
surface analysis<font color="#E5E5E5"> and really just knowing</font>

914
00:41:22,839 --> 00:41:28,390
<font color="#CCCCCC">like what is the overall</font><font color="#E5E5E5"> footprint of</font>

915
00:41:24,640 --> 00:41:30,930
any<font color="#CCCCCC"> security product would be</font><font color="#E5E5E5"> if there</font>

916
00:41:28,390 --> 00:41:33,969
is a driver component the communication

917
00:41:30,930 --> 00:41:36,399
mechanism<font color="#E5E5E5"> the the interface between the</font>

918
00:41:33,969 --> 00:41:40,359
<font color="#CCCCCC">service and driver</font><font color="#E5E5E5"> so the system on</font>

919
00:41:36,400 --> 00:41:42,430
driver has an<font color="#E5E5E5"> i octal interface</font><font color="#CCCCCC"> we</font>

920
00:41:40,359 --> 00:41:45,308
didn't find anything<font color="#CCCCCC"> that would have</font>

921
00:41:42,430 --> 00:41:46,479
obviously<font color="#CCCCCC"> been exploitable but we just</font>

922
00:41:45,309 --> 00:41:49,359
wanted<font color="#E5E5E5"> we really just wanted to</font>

923
00:41:46,479 --> 00:41:52,390
understand what I octaves were available

924
00:41:49,359 --> 00:41:54,609
<font color="#E5E5E5">and the context of how they were used so</font>

925
00:41:52,390 --> 00:41:57,670
there aren't<font color="#E5E5E5"> that there really aren't</font>

926
00:41:54,609 --> 00:42:00,160
any extremely<font color="#E5E5E5"> interesting attack</font>

927
00:41:57,670 --> 00:42:03,039
scenarios here<font color="#CCCCCC"> there might be a few if</font>

928
00:42:00,160 --> 00:42:04,660
you're already admin<font color="#E5E5E5"> but we didn't know</font>

929
00:42:03,039 --> 00:42:06,130
going into<font color="#CCCCCC"> it that we wouldn't find</font>

930
00:42:04,660 --> 00:42:09,009
anything fruitful but<font color="#E5E5E5"> we needed to look</font>

931
00:42:06,130 --> 00:42:11,319
anyway<font color="#CCCCCC"> and you in order</font><font color="#E5E5E5"> to get a handle</font>

932
00:42:09,010 --> 00:42:14,710
<font color="#E5E5E5">to the driver you need to have</font><font color="#CCCCCC"> se debug</font>

933
00:42:11,319 --> 00:42:18,910
privilege so the set of users and groups

934
00:42:14,710 --> 00:42:21,039
who can have<font color="#CCCCCC"> se debug privilege by</font>

935
00:42:18,910 --> 00:42:23,020
default will be administrators<font color="#E5E5E5"> but we</font>

936
00:42:21,039 --> 00:42:27,130
have seen scenarios where unprivileged

937
00:42:23,020 --> 00:42:31,480
users have been<font color="#E5E5E5"> added via GPO to to</font>

938
00:42:27,130 --> 00:42:33,490
<font color="#E5E5E5">acquire</font><font color="#CCCCCC"> se debug privilege</font><font color="#E5E5E5"> so now we're</font>

939
00:42:31,480 --> 00:42:36,339
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about configuration analysis so I</font>

940
00:42:33,490 --> 00:42:40,299
covered a generic evasion specifically

941
00:42:36,339 --> 00:42:43,450
related to<font color="#CCCCCC"> WMI</font><font color="#E5E5E5"> but we still want to take</font>

942
00:42:40,299 --> 00:42:45,250
<font color="#E5E5E5">a holistic approach to evasion so we're</font>

943
00:42:43,450 --> 00:42:46,990
not we're<font color="#CCCCCC"> not going to have generic</font>

944
00:42:45,250 --> 00:42:50,170
evasions for everything if<font color="#E5E5E5"> we did that'd</font>

945
00:42:46,990 --> 00:42:52,058
be great<font color="#CCCCCC"> but that is pretty unrealistic</font>

946
00:42:50,170 --> 00:42:55,109
<font color="#CCCCCC">but let's say that we were able to</font>

947
00:42:52,059 --> 00:42:58,420
obtain a configuration<font color="#E5E5E5"> our goal</font>

948
00:42:55,109 --> 00:43:00,910
primarily would<font color="#E5E5E5"> be to blend in with the</font>

949
00:42:58,420 --> 00:43:03,670
noise and<font color="#CCCCCC"> system on lends itself to</font>

950
00:43:00,910 --> 00:43:05,618
<font color="#E5E5E5">having an attacker blend and really</font>

951
00:43:03,670 --> 00:43:08,109
<font color="#E5E5E5">easily because in system on you can</font>

952
00:43:05,619 --> 00:43:12,039
define a bunch<font color="#E5E5E5"> of include rules and then</font>

953
00:43:08,109 --> 00:43:15,038
exclude rules<font color="#CCCCCC"> and it only takes a single</font>

954
00:43:12,039 --> 00:43:20,319
<font color="#CCCCCC">exclude rule for you to completely evade</font>

955
00:43:15,039 --> 00:43:23,619
that<font color="#E5E5E5"> specific event type so we're gonna</font>

956
00:43:20,319 --> 00:43:25,720
use<font color="#CCCCCC"> Swift on Security's canonical system</font>

957
00:43:23,619 --> 00:43:27,839
on config<font color="#E5E5E5"> sorry I'm not not picking on</font>

958
00:43:25,720 --> 00:43:31,930
you<font color="#E5E5E5"> but it's actually a really good</font>

959
00:43:27,839 --> 00:43:34,538
<font color="#E5E5E5">configuration but it there are places</font>

960
00:43:31,930 --> 00:43:37,118
where<font color="#CCCCCC"> we might be</font><font color="#E5E5E5"> able to blend in so</font>

961
00:43:34,539 --> 00:43:39,400
here's our evasion scenario where we

962
00:43:37,119 --> 00:43:41,200
<font color="#E5E5E5">possibly obtained the configuration</font>

963
00:43:39,400 --> 00:43:43,390
potentially<font color="#CCCCCC"> without even needing to</font><font color="#E5E5E5"> be</font>

964
00:43:41,200 --> 00:43:45,939
admin if the deployment scenario<font color="#CCCCCC"> is such</font>

965
00:43:43,390 --> 00:43:48,038
that<font color="#E5E5E5"> we could obtain the XML on disk we</font>

966
00:43:45,940 --> 00:43:50,579
likely will already<font color="#CCCCCC"> have access</font><font color="#E5E5E5"> to that</font>

967
00:43:48,039 --> 00:43:54,279
<font color="#E5E5E5">XML versus the binary configuration</font>

968
00:43:50,579 --> 00:43:54,970
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> locked down or if it was pushed</font>

969
00:43:54,279 --> 00:43:57,130
via GPO

970
00:43:54,970 --> 00:43:59,680
<font color="#CCCCCC">we wouldn't have direct access to</font><font color="#E5E5E5"> the</font>

971
00:43:57,130 --> 00:44:03,849
<font color="#E5E5E5">binary rules blob but we would as a</font>

972
00:43:59,680 --> 00:44:05,319
domain<font color="#E5E5E5"> user be able to read that GPO so</font>

973
00:44:03,849 --> 00:44:06,960
this is our plan of<font color="#E5E5E5"> attack</font>

974
00:44:05,319 --> 00:44:10,509
we're going to identify<font color="#E5E5E5"> the attacker</font>

975
00:44:06,960 --> 00:44:13,599
influenceable<font color="#E5E5E5"> exclude rules and build a</font>

976
00:44:10,510 --> 00:44:16,270
overall<font color="#E5E5E5"> evasion strategy using those</font>

977
00:44:13,599 --> 00:44:18,520
exclude rules<font color="#E5E5E5"> so here are the process</font>

978
00:44:16,270 --> 00:44:22,650
create rules<font color="#E5E5E5"> that I identified as being</font>

979
00:44:18,520 --> 00:44:25,540
interesting and the reason is one of the

980
00:44:22,650 --> 00:44:28,630
event conditions that I really like is

981
00:44:25,540 --> 00:44:30,400
the contains condition<font color="#E5E5E5"> and that's</font>

982
00:44:28,630 --> 00:44:33,369
because I could<font color="#E5E5E5"> have anywhere in my</font>

983
00:44:30,400 --> 00:44:35,440
command line<font color="#CCCCCC"> this thing that will be</font>

984
00:44:33,369 --> 00:44:38,110
evaded<font color="#E5E5E5"> so if I have anywhere in my</font>

985
00:44:35,440 --> 00:44:40,690
command<font color="#E5E5E5"> line</font><font color="#CCCCCC"> acro read</font><font color="#E5E5E5"> 32 and that extra</font>

986
00:44:38,110 --> 00:44:43,960
components<font color="#E5E5E5"> then</font><font color="#CCCCCC"> I'll evade all process</font>

987
00:44:40,690 --> 00:44:46,060
create rules<font color="#E5E5E5"> same for file create time</font>

988
00:44:43,960 --> 00:44:48,670
we got another<font color="#E5E5E5"> really good contains rule</font>

989
00:44:46,060 --> 00:44:52,360
so setup can be<font color="#E5E5E5"> anywhere in</font><font color="#CCCCCC"> the image</font>

990
00:44:48,670 --> 00:44:55,030
<font color="#E5E5E5">path</font><font color="#CCCCCC"> Network</font><font color="#E5E5E5"> connect we have one is not</font>

991
00:44:52,360 --> 00:44:57,880
quite as<font color="#E5E5E5"> good so the file name must be</font>

992
00:44:55,030 --> 00:45:00,700
<font color="#CCCCCC">onedrive dot exe</font><font color="#E5E5E5"> in order for us</font><font color="#CCCCCC"> to</font>

993
00:44:57,880 --> 00:45:03,190
evade network connections<font color="#CCCCCC"> and that's</font>

994
00:45:00,700 --> 00:45:05,529
based on<font color="#E5E5E5"> the image condition process</font>

995
00:45:03,190 --> 00:45:07,720
terminate<font color="#E5E5E5"> there weren't any good evasion</font>

996
00:45:05,530 --> 00:45:11,380
candidates so we would<font color="#E5E5E5"> have to fall</font><font color="#CCCCCC"> back</font>

997
00:45:07,720 --> 00:45:13,270
to<font color="#E5E5E5"> like tradecraft avoidance and one of</font>

998
00:45:11,380 --> 00:45:15,940
the more obvious<font color="#E5E5E5"> ones in this case was</font>

999
00:45:13,270 --> 00:45:20,650
<font color="#E5E5E5">we'd want to avoid starting a process</font>

1000
00:45:15,940 --> 00:45:24,790
<font color="#CCCCCC">and terminating it within a path of C C</font>

1001
00:45:20,650 --> 00:45:27,580
users now driver loads aren't entirely

1002
00:45:24,790 --> 00:45:30,880
<font color="#CCCCCC">relevance like in our scenario</font><font color="#E5E5E5"> where we</font>

1003
00:45:27,580 --> 00:45:33,190
<font color="#CCCCCC">may</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> even want</font><font color="#E5E5E5"> to drop drivers</font><font color="#CCCCCC"> but</font>

1004
00:45:30,880 --> 00:45:34,990
there's<font color="#E5E5E5"> still some evasion opportunities</font>

1005
00:45:33,190 --> 00:45:37,780
assuming that we<font color="#E5E5E5"> could load test</font><font color="#CCCCCC"> sign</font>

1006
00:45:34,990 --> 00:45:40,299
code<font color="#E5E5E5"> now create remote thread Ivan</font>

1007
00:45:37,780 --> 00:45:42,310
tested<font color="#E5E5E5"> this recently but Casey posted</font>

1008
00:45:40,300 --> 00:45:44,320
<font color="#CCCCCC">awhile</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a generic</font>

1009
00:45:42,310 --> 00:45:47,980
<font color="#CCCCCC">evasion</font><font color="#E5E5E5"> for create</font><font color="#CCCCCC"> mote thread if you</font>

1010
00:45:44,320 --> 00:45:50,890
use the<font color="#CCCCCC"> cue user</font><font color="#E5E5E5"> a PC API file creates</font>

1011
00:45:47,980 --> 00:45:52,450
<font color="#E5E5E5">there weren't really any ideal exclude</font>

1012
00:45:50,890 --> 00:45:57,279
<font color="#CCCCCC">rules so we would have to resort to</font>

1013
00:45:52,450 --> 00:45:59,410
<font color="#CCCCCC">tradecraft</font><font color="#E5E5E5"> avoidance a registry event so</font>

1014
00:45:57,280 --> 00:46:02,530
we can avoid all<font color="#E5E5E5"> registry events if our</font>

1015
00:45:59,410 --> 00:46:06,009
path<font color="#E5E5E5"> and file name ends with as follows</font>

1016
00:46:02,530 --> 00:46:09,369
<font color="#CCCCCC">now the problem is</font><font color="#E5E5E5"> oh and we</font><font color="#CCCCCC"> already</font>

1017
00:46:06,010 --> 00:46:12,580
have a generic evasion for<font color="#CCCCCC"> WMI</font><font color="#E5E5E5"> events so</font>

1018
00:46:09,369 --> 00:46:13,960
the problem that<font color="#CCCCCC"> we've run into</font><font color="#E5E5E5"> is the</font>

1019
00:46:12,580 --> 00:46:16,810
following<font color="#E5E5E5"> look at the third and the</font>

1020
00:46:13,960 --> 00:46:18,670
fourth<font color="#E5E5E5"> conditions where the file name</font>

1021
00:46:16,810 --> 00:46:21,340
would need to end with one drive and

1022
00:46:18,670 --> 00:46:23,560
<font color="#E5E5E5">that path including integrator dot exe</font>

1023
00:46:21,340 --> 00:46:26,010
<font color="#E5E5E5">so one would have</font><font color="#CCCCCC"> aid network</font>

1024
00:46:23,560 --> 00:46:29,890
connections the other would avoid

1025
00:46:26,010 --> 00:46:32,440
registry events so what we<font color="#CCCCCC"> we need to do</font>

1026
00:46:29,890 --> 00:46:34,420
to have<font color="#E5E5E5"> a more holistic evasion what</font>

1027
00:46:32,440 --> 00:46:37,900
be as follows so here's one instance of

1028
00:46:34,420 --> 00:46:40,359
<font color="#E5E5E5">what avoiding or evading most of the</font>

1029
00:46:37,900 --> 00:46:43,780
rules would look like<font color="#E5E5E5"> by</font><font color="#CCCCCC"> combining those</font>

1030
00:46:40,359 --> 00:46:45,069
exclude rules together<font color="#CCCCCC"> so think about</font>

1031
00:46:43,780 --> 00:46:47,050
<font color="#E5E5E5">whether or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> you would actually be</font>

1032
00:46:45,069 --> 00:46:50,349
<font color="#CCCCCC">able to detect</font><font color="#E5E5E5"> that in your</font><font color="#CCCCCC"> environment</font>

1033
00:46:47,050 --> 00:46:52,270
<font color="#CCCCCC">and those</font><font color="#E5E5E5"> of you who know PowerShell</font>

1034
00:46:50,349 --> 00:46:54,339
pretty well might be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> recognize</font>

1035
00:46:52,270 --> 00:46:58,750
that that<font color="#E5E5E5"> is PowerShell running that</font>

1036
00:46:54,339 --> 00:47:01,540
evades most of<font color="#E5E5E5"> these system on rules so</font>

1037
00:46:58,750 --> 00:47:03,490
our conclusions<font color="#CCCCCC"> about</font><font color="#E5E5E5"> our analysis of</font>

1038
00:47:01,540 --> 00:47:05,400
<font color="#CCCCCC">sis Mon again this</font><font color="#E5E5E5"> is we were just</font>

1039
00:47:03,490 --> 00:47:08,680
<font color="#E5E5E5">analyzing it from a data collector</font>

1040
00:47:05,400 --> 00:47:10,599
<font color="#E5E5E5">perspective so from a tampering</font>

1041
00:47:08,680 --> 00:47:12,520
perspective<font color="#E5E5E5"> it's effective against non</font>

1042
00:47:10,599 --> 00:47:15,130
administrators that's kind of<font color="#E5E5E5"> defined</font>

1043
00:47:12,520 --> 00:47:16,750
once you're<font color="#E5E5E5"> an admin all bets are lost</font>

1044
00:47:15,130 --> 00:47:18,730
there are no guarantees<font color="#CCCCCC"> about an</font>

1045
00:47:16,750 --> 00:47:22,089
<font color="#E5E5E5">attacker modifying or subverting system</font>

1046
00:47:18,730 --> 00:47:24,339
on from an attack surface analysis

1047
00:47:22,089 --> 00:47:26,109
system on is<font color="#E5E5E5"> actually has has a pretty</font>

1048
00:47:24,339 --> 00:47:27,520
small attack surface there's a couple

1049
00:47:26,109 --> 00:47:29,529
weaknesses that<font color="#E5E5E5"> I showed with the</font>

1050
00:47:27,520 --> 00:47:31,079
privilege escalation opportunities but

1051
00:47:29,530 --> 00:47:36,250
<font color="#E5E5E5">overall easily fixable</font>

1052
00:47:31,079 --> 00:47:38,200
<font color="#CCCCCC">in terms of evasion rule enumeration is</font>

1053
00:47:36,250 --> 00:47:41,410
critical for<font color="#E5E5E5"> an attacker in order to do</font>

1054
00:47:38,200 --> 00:47:43,328
this likewise an attacker could take

1055
00:47:41,410 --> 00:47:47,339
advantage of just really<font color="#E5E5E5"> loud events</font>

1056
00:47:43,329 --> 00:47:50,380
that<font color="#E5E5E5"> typically aren't analyzed but</font>

1057
00:47:47,339 --> 00:47:52,990
analyzing that config file is super

1058
00:47:50,380 --> 00:47:55,060
important<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the attacker</font><font color="#CCCCCC"> in addition</font>

1059
00:47:52,990 --> 00:47:59,140
our collection<font color="#E5E5E5"> the collection rules</font>

1060
00:47:55,060 --> 00:48:01,328
themselves<font color="#CCCCCC"> leave us wanting</font><font color="#E5E5E5"> they in</font>

1061
00:47:59,140 --> 00:48:03,430
specific<font color="#E5E5E5"> the exclude rules because when</font>

1062
00:48:01,329 --> 00:48:05,770
there<font color="#CCCCCC"> is an excludable it is so easy to</font>

1063
00:48:03,430 --> 00:48:07,839
<font color="#E5E5E5">build an evasion using that so if there</font>

1064
00:48:05,770 --> 00:48:12,910
<font color="#CCCCCC">were some way that we could build better</font>

1065
00:48:07,839 --> 00:48:16,569
collection rules to<font color="#E5E5E5"> allow us to exclude</font>

1066
00:48:12,910 --> 00:48:18,848
stuff<font color="#E5E5E5"> in a more targeted manner overall</font>

1067
00:48:16,569 --> 00:48:22,779
you know suspend it's great it's a great

1068
00:48:18,849 --> 00:48:24,970
<font color="#E5E5E5">additional data source for collecting</font>

1069
00:48:22,780 --> 00:48:28,630
events<font color="#E5E5E5"> but in order to</font><font color="#CCCCCC"> actually use it</font>

1070
00:48:24,970 --> 00:48:30,640
<font color="#E5E5E5">you need supplementary tools to actually</font>

1071
00:48:28,630 --> 00:48:32,920
use it<font color="#CCCCCC"> for detection purposes within</font><font color="#E5E5E5"> an</font>

1072
00:48:30,640 --> 00:48:35,560
organization you need several other

1073
00:48:32,920 --> 00:48:39,190
tools in<font color="#E5E5E5"> order</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> advantage</font><font color="#CCCCCC"> of it</font>

1074
00:48:35,560 --> 00:48:41,619
<font color="#E5E5E5">so be that log forwarding and as well as</font>

1075
00:48:39,190 --> 00:48:44,380
you need<font color="#CCCCCC"> you know detection engineering</font>

1076
00:48:41,619 --> 00:48:45,920
<font color="#E5E5E5">so once you have a sim actually manually</font>

1077
00:48:44,380 --> 00:48:53,119
building out those rules

1078
00:48:45,920 --> 00:48:55,040
to detect attacker activity<font color="#E5E5E5"> overall in</font>

1079
00:48:53,119 --> 00:48:57,200
conclusion<font color="#E5E5E5"> attackers are going to</font>

1080
00:48:55,040 --> 00:49:01,460
continue<font color="#E5E5E5"> subvert</font><font color="#CCCCCC"> end points</font><font color="#E5E5E5"> no matter</font>

1081
00:48:57,200 --> 00:49:03,020
<font color="#CCCCCC">what</font><font color="#E5E5E5"> vendors we ask the question are you</font>

1082
00:49:01,460 --> 00:49:05,690
doing subversion research on<font color="#E5E5E5"> your</font>

1083
00:49:03,020 --> 00:49:07,609
products<font color="#E5E5E5"> beyond just attack surface</font>

1084
00:49:05,690 --> 00:49:12,049
analysis and<font color="#CCCCCC"> tap</font><font color="#E5E5E5"> maybe tampering</font>

1085
00:49:07,609 --> 00:49:15,319
protection<font color="#E5E5E5"> evasion resilience is</font><font color="#CCCCCC"> a big</font>

1086
00:49:12,049 --> 00:49:18,740
gap area that we<font color="#CCCCCC"> see in the industry and</font>

1087
00:49:15,319 --> 00:49:23,089
<font color="#E5E5E5">we encourage others to focus efforts on</font>

1088
00:49:18,740 --> 00:49:25,609
that<font color="#CCCCCC"> defenders are you do you understand</font>

1089
00:49:23,089 --> 00:49:28,700
the threat<font color="#E5E5E5"> model that your products are</font>

1090
00:49:25,609 --> 00:49:31,130
protect against and are you<font color="#E5E5E5"> aware of how</font>

1091
00:49:28,700 --> 00:49:33,710
resilient they are<font color="#E5E5E5"> to evasion underneath</font>

1092
00:49:31,130 --> 00:49:36,109
<font color="#E5E5E5">so we encourage defenders to take this</font>

1093
00:49:33,710 --> 00:49:37,700
methodology<font color="#E5E5E5"> and start applying it to</font>

1094
00:49:36,109 --> 00:49:40,549
their<font color="#E5E5E5"> own</font><font color="#CCCCCC"> product so they can get</font><font color="#E5E5E5"> better</font>

1095
00:49:37,700 --> 00:49:45,140
insight into<font color="#CCCCCC"> the efficacy of their</font>

1096
00:49:40,549 --> 00:49:47,569
products perfect<font color="#E5E5E5"> and thank you all</font><font color="#CCCCCC"> very</font>

1097
00:49:45,140 --> 00:49:50,450
much<font color="#CCCCCC"> again we didn't wear</font><font color="#E5E5E5"> this for</font>

1098
00:49:47,569 --> 00:49:51,529
nothing<font color="#CCCCCC"> so feel free to we'd love it</font><font color="#E5E5E5"> if</font>

1099
00:49:50,450 --> 00:49:55,368
you could<font color="#CCCCCC"> donate through the</font><font color="#E5E5E5"> Muscular</font>

1100
00:49:51,530 --> 00:49:57,559
<font color="#E5E5E5">Dystrophy Association we means a lot to</font>

1101
00:49:55,369 --> 00:49:58,830
us<font color="#CCCCCC"> so thank you and we'll take questions</font>

1102
00:49:57,559 --> 00:50:01,380
in the<font color="#E5E5E5"> breakout room</font>

1103
00:49:58,830 --> 00:50:01,380
[Applause]

