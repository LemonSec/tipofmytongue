1
00:00:00,030 --> 00:00:03,449
hello everyone<font color="#CCCCCC"> and thank you</font><font color="#E5E5E5"> for coming</font>

2
00:00:01,560 --> 00:00:05,189
<font color="#CCCCCC">today we'll</font><font color="#E5E5E5"> be talking about a</font>

3
00:00:03,449 --> 00:00:07,410
penetration testing framework for

4
00:00:05,190 --> 00:00:11,010
software<font color="#E5E5E5"> ready defying networks which is</font>

5
00:00:07,410 --> 00:00:13,139
called<font color="#E5E5E5"> Delta</font><font color="#CCCCCC"> and before we begin</font><font color="#E5E5E5"> let</font><font color="#CCCCCC"> me</font>

6
00:00:11,010 --> 00:00:15,299
introduce all cells briefly my name is

7
00:00:13,139 --> 00:00:17,369
sue sue and this is jino and we have

8
00:00:15,299 --> 00:00:21,210
someone who<font color="#CCCCCC"> is</font><font color="#E5E5E5"> sitting in the front</font><font color="#CCCCCC"> row</font>

9
00:00:17,369 --> 00:00:23,009
and we we<font color="#E5E5E5"> are the graduate students at</font>

10
00:00:21,210 --> 00:00:27,660
Christ and currently working with

11
00:00:23,010 --> 00:00:30,449
<font color="#E5E5E5">Professor Simon</font><font color="#CCCCCC"> Sheen and he is leading</font>

12
00:00:27,660 --> 00:00:33,210
<font color="#CCCCCC">labour against system security level</font>

13
00:00:30,449 --> 00:00:35,460
trade heist<font color="#CCCCCC"> we have been working on a</font>

14
00:00:33,210 --> 00:00:37,680
<font color="#E5E5E5">various</font><font color="#CCCCCC"> s10 security projects and among</font>

15
00:00:35,460 --> 00:00:42,570
them<font color="#CCCCCC"> today would like to introduce</font>

16
00:00:37,680 --> 00:00:45,450
project<font color="#CCCCCC"> Alta so this is a summary of the</font>

17
00:00:42,570 --> 00:00:47,850
<font color="#E5E5E5">contents so first we</font><font color="#CCCCCC"> do like to briefly</font>

18
00:00:45,450 --> 00:00:50,640
talk about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> motivation of Delta and</font>

19
00:00:47,850 --> 00:00:54,270
<font color="#CCCCCC">and</font><font color="#E5E5E5"> for better understanding</font><font color="#CCCCCC"> we</font>

20
00:00:50,640 --> 00:00:57,270
described some backgrounds on<font color="#E5E5E5"> as they</font>

21
00:00:54,270 --> 00:01:00,270
<font color="#E5E5E5">and open flows and security of Sdn and</font>

22
00:00:57,270 --> 00:01:02,640
after that we<font color="#E5E5E5"> disk</font><font color="#CCCCCC"> we introduced our</font>

23
00:01:00,270 --> 00:01:04,619
Delta framework in detail and<font color="#CCCCCC"> show some</font>

24
00:01:02,640 --> 00:01:09,350
<font color="#CCCCCC">Motec demonstrations</font><font color="#E5E5E5"> and lastly we have</font>

25
00:01:04,619 --> 00:01:12,000
<font color="#E5E5E5">the final remarks so why we need</font><font color="#CCCCCC"> Delta</font>

26
00:01:09,350 --> 00:01:13,979
<font color="#E5E5E5">although the attention to Sdn has been</font>

27
00:01:12,000 --> 00:01:18,810
growing<font color="#E5E5E5"> as a next</font><font color="#CCCCCC"> next-gen networking</font>

28
00:01:13,979 --> 00:01:22,439
<font color="#E5E5E5">the security</font><font color="#CCCCCC"> Augustine</font><font color="#E5E5E5"> sorry the</font><font color="#CCCCCC"> STI</font>

29
00:01:18,810 --> 00:01:24,270
<font color="#E5E5E5">networks are still prone to security</font>

30
00:01:22,439 --> 00:01:27,570
<font color="#E5E5E5">threat</font><font color="#CCCCCC"> so we need to verify the security</font>

31
00:01:24,270 --> 00:01:29,579
<font color="#E5E5E5">of Sdn by running the security test but</font>

32
00:01:27,570 --> 00:01:30,779
the problem<font color="#E5E5E5"> here is that manually</font>

33
00:01:29,579 --> 00:01:33,600
testing each attack is<font color="#E5E5E5"> very</font>

34
00:01:30,780 --> 00:01:35,729
<font color="#CCCCCC">time-consuming and unknown job so I like</font>

35
00:01:33,600 --> 00:01:36,689
the<font color="#E5E5E5"> necessary</font><font color="#CCCCCC"> Metasploit the targets the</font>

36
00:01:35,729 --> 00:01:38,759
tradition it works

37
00:01:36,689 --> 00:01:42,898
we need an<font color="#E5E5E5"> s10 specific</font><font color="#CCCCCC"> pen testing</font>

38
00:01:38,759 --> 00:01:44,759
framer so<font color="#E5E5E5"> Delta has been developed so by</font>

39
00:01:42,899 --> 00:01:46,979
using Delta<font color="#E5E5E5"> we can automatically</font>

40
00:01:44,759 --> 00:01:48,720
reproduce<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> latter cases and also</font>

41
00:01:46,979 --> 00:01:51,329
<font color="#E5E5E5">we can</font><font color="#CCCCCC"> find new</font><font color="#E5E5E5"> polling abilities by</font>

42
00:01:48,720 --> 00:01:54,210
randomizing s10 control flows such as

43
00:01:51,329 --> 00:01:56,699
open flow<font color="#E5E5E5"> so to</font><font color="#CCCCCC"> easily understand</font><font color="#E5E5E5"> Delta</font>

44
00:01:54,210 --> 00:01:58,770
we need some backgrounds on Sdn an open

45
00:01:56,700 --> 00:02:01,560
flow so let's let's<font color="#CCCCCC"> have a look at what</font>

46
00:01:58,770 --> 00:02:03,780
they are so in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> traditional works</font>

47
00:02:01,560 --> 00:02:05,399
<font color="#E5E5E5">there there are two problems when many</font>

48
00:02:03,780 --> 00:02:07,380
companies are scaling up<font color="#E5E5E5"> their networks</font>

49
00:02:05,399 --> 00:02:08,788
<font color="#CCCCCC">the first one is that network</font><font color="#E5E5E5"> and</font>

50
00:02:07,380 --> 00:02:11,410
security<font color="#E5E5E5"> devices are too expensive</font>

51
00:02:08,788 --> 00:02:13,540
<font color="#E5E5E5">because it consists of</font>

52
00:02:11,410 --> 00:02:15,910
vendor-specific software on top of<font color="#CCCCCC"> on</font>

53
00:02:13,540 --> 00:02:19,269
<font color="#E5E5E5">specialized the hardware and also they</font>

54
00:02:15,910 --> 00:02:20,770
are mostly a closed platform<font color="#E5E5E5"> so it is</font>

55
00:02:19,270 --> 00:02:24,340
very<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to add new functionality</font>

56
00:02:20,770 --> 00:02:26,200
<font color="#CCCCCC">or protocols to</font><font color="#E5E5E5"> the devices and also</font>

57
00:02:24,340 --> 00:02:28,000
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is a maintenance cost as well</font>

58
00:02:26,200 --> 00:02:29,560
so if there are more devices on the

59
00:02:28,000 --> 00:02:32,050
<font color="#CCCCCC">networks the more complicated to</font>

60
00:02:29,560 --> 00:02:35,260
<font color="#E5E5E5">maintain them so to deal with the</font>

61
00:02:32,050 --> 00:02:37,120
increase in network<font color="#E5E5E5"> management you have</font>

62
00:02:35,260 --> 00:02:39,130
to spend<font color="#E5E5E5"> more money to</font><font color="#CCCCCC"> keep it up and</font>

63
00:02:37,120 --> 00:02:41,200
<font color="#CCCCCC">running</font><font color="#E5E5E5"> so any short</font>

64
00:02:39,130 --> 00:02:43,329
scaling<font color="#E5E5E5"> of network is all about</font><font color="#CCCCCC"> money so</font>

65
00:02:41,200 --> 00:02:46,899
they really want<font color="#E5E5E5"> to stay on money as</font>

66
00:02:43,330 --> 00:02:48,490
possible<font color="#E5E5E5"> as possible so to overcome</font>

67
00:02:46,900 --> 00:02:50,050
<font color="#E5E5E5">those</font><font color="#CCCCCC"> problems that I</font><font color="#E5E5E5"> mentioned in the</font>

68
00:02:48,490 --> 00:02:52,720
previous slide software-defined

69
00:02:50,050 --> 00:02:54,700
networking is proposed<font color="#E5E5E5"> and as the key</font>

70
00:02:52,720 --> 00:02:57,280
idea of Sdn<font color="#E5E5E5"> is separation and</font>

71
00:02:54,700 --> 00:02:59,170
centralization<font color="#E5E5E5"> of control plane so as</font>

72
00:02:57,280 --> 00:03:00,700
you can<font color="#CCCCCC"> see here the narrow of devices</font>

73
00:02:59,170 --> 00:03:02,619
that<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> familiar with</font><font color="#E5E5E5"> today can be</font>

74
00:03:00,700 --> 00:03:04,450
broken down<font color="#E5E5E5"> into two different planes</font>

75
00:03:02,620 --> 00:03:07,450
<font color="#E5E5E5">the first one is the control plane and</font>

76
00:03:04,450 --> 00:03:09,369
this<font color="#E5E5E5"> is a software components that makes</font>

77
00:03:07,450 --> 00:03:12,010
routing decisions and conducts<font color="#E5E5E5"> other</font>

78
00:03:09,370 --> 00:03:14,470
<font color="#CCCCCC">narrow</font><font color="#E5E5E5"> functions and another is</font><font color="#CCCCCC"> the data</font>

79
00:03:12,010 --> 00:03:17,260
plane<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is a simple packet packet</font>

80
00:03:14,470 --> 00:03:18,790
<font color="#CCCCCC">floating device so it just forward drop</font>

81
00:03:17,260 --> 00:03:22,390
<font color="#E5E5E5">the packets from the control plane</font>

82
00:03:18,790 --> 00:03:24,940
distance but in Sdn<font color="#E5E5E5"> they they separate</font>

83
00:03:22,390 --> 00:03:27,369
the control planes from<font color="#CCCCCC"> the devices</font><font color="#E5E5E5"> and</font>

84
00:03:24,940 --> 00:03:29,829
then<font color="#CCCCCC"> centralize it into the</font><font color="#E5E5E5"> estate</font>

85
00:03:27,370 --> 00:03:33,150
controller<font color="#E5E5E5"> so the Sdn controller is</font>

86
00:03:29,830 --> 00:03:36,100
connected<font color="#CCCCCC"> to all the data planes</font><font color="#E5E5E5"> and</font>

87
00:03:33,150 --> 00:03:41,590
communicate with them using<font color="#CCCCCC"> SDM protocol</font>

88
00:03:36,100 --> 00:03:43,690
known as<font color="#CCCCCC"> open flow basically</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> 10</font>

89
00:03:41,590 --> 00:03:46,120
controllers provide<font color="#CCCCCC"> a useful metaphor in</font>

90
00:03:43,690 --> 00:03:48,550
such as switch discovery<font color="#E5E5E5"> host discovery</font>

91
00:03:46,120 --> 00:03:50,860
and routing computation and<font color="#E5E5E5"> so on so</font>

92
00:03:48,550 --> 00:03:52,650
whenever you connect those<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> to</font>

93
00:03:50,860 --> 00:03:54,940
the Sdn controller the controller

94
00:03:52,650 --> 00:03:56,890
automatically construct<font color="#E5E5E5"> a chlorinate</font>

95
00:03:54,940 --> 00:04:00,400
view<font color="#E5E5E5"> so it is far easier to manage</font>

96
00:03:56,890 --> 00:04:02,140
generic devices in Sdn and also it<font color="#E5E5E5"> is</font>

97
00:04:00,400 --> 00:04:04,330
<font color="#CCCCCC">possible to flexibly customize the</font>

98
00:04:02,140 --> 00:04:06,640
<font color="#CCCCCC">narrow functions using the</font><font color="#E5E5E5"> open API step</font>

99
00:04:04,330 --> 00:04:09,400
most<font color="#CCCCCC"> OPM has</font><font color="#E5E5E5"> made applications available</font>

100
00:04:06,640 --> 00:04:12,220
<font color="#CCCCCC">today expose so you can</font><font color="#E5E5E5"> easily develop</font>

101
00:04:09,400 --> 00:04:15,480
very assess an applications such as<font color="#E5E5E5"> PHP</font>

102
00:04:12,220 --> 00:04:18,700
file and<font color="#CCCCCC"> data sector</font><font color="#E5E5E5"> and so on</font>

103
00:04:15,480 --> 00:04:21,070
so this can be<font color="#E5E5E5"> new opportunities</font><font color="#CCCCCC"> because</font>

104
00:04:18,700 --> 00:04:23,120
unlike the<font color="#CCCCCC"> traditional</font><font color="#E5E5E5"> work now you have</font>

105
00:04:21,070 --> 00:04:24,920
the chlorinator view and

106
00:04:23,120 --> 00:04:27,440
<font color="#E5E5E5">innovating</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> functions in these Sdn</font>

107
00:04:24,920 --> 00:04:30,020
applications<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can just deployed it</font>

108
00:04:27,440 --> 00:04:31,550
into your Sdn so that the<font color="#E5E5E5"> s10</font>

109
00:04:30,020 --> 00:04:33,560
applications automatically<font color="#E5E5E5"> manage</font>

110
00:04:31,550 --> 00:04:35,750
genetics<font color="#E5E5E5"> so for that</font><font color="#CCCCCC"> reason</font>

111
00:04:33,560 --> 00:04:40,490
s10 is known as a programmable<font color="#CCCCCC"> medic</font>

112
00:04:35,750 --> 00:04:42,680
<font color="#CCCCCC">tray and as I mentioned before s10</font>

113
00:04:40,490 --> 00:04:43,760
<font color="#E5E5E5">controller and the switches communicate</font>

114
00:04:42,680 --> 00:04:45,980
with each other using

115
00:04:43,760 --> 00:04:48,170
OpenFlow protocol<font color="#E5E5E5"> and it is currently</font>

116
00:04:45,980 --> 00:04:50,270
maintained by an open networking

117
00:04:48,170 --> 00:04:51,890
<font color="#E5E5E5">foundation which is an</font><font color="#CCCCCC"> organization</font>

118
00:04:50,270 --> 00:04:55,310
dedicated<font color="#E5E5E5"> to their standard digestion of</font>

119
00:04:51,890 --> 00:04:57,740
Sdn so so<font color="#E5E5E5"> often</font><font color="#CCCCCC"> flu</font><font color="#E5E5E5"> is the de</font><font color="#CCCCCC"> facto</font>

120
00:04:55,310 --> 00:04:59,780
standard protocol in Sdn<font color="#E5E5E5"> and as you can</font>

121
00:04:57,740 --> 00:05:03,830
<font color="#E5E5E5">see in this version timeline</font><font color="#CCCCCC"> the first</font>

122
00:04:59,780 --> 00:05:06,320
<font color="#CCCCCC">real is in was in 2009</font><font color="#E5E5E5"> and the latest</font>

123
00:05:03,830 --> 00:05:09,919
version<font color="#CCCCCC"> is 1.5</font><font color="#E5E5E5"> which was</font><font color="#CCCCCC"> releasing</font>

124
00:05:06,320 --> 00:05:13,460
<font color="#E5E5E5">training 15 and although the list latest</font>

125
00:05:09,920 --> 00:05:15,650
<font color="#CCCCCC">version is 1.5 in practice most</font><font color="#E5E5E5"> of the</font>

126
00:05:13,460 --> 00:05:17,750
<font color="#CCCCCC">OpenFlow enable feature devices support</font>

127
00:05:15,650 --> 00:05:23,960
to pre<font color="#CCCCCC"> billion of popular versions 1.0</font>

128
00:05:17,750 --> 00:05:25,940
and 1.30<font color="#E5E5E5"> in open</font><font color="#CCCCCC"> flow 1.0 every open</font>

129
00:05:23,960 --> 00:05:28,669
flow message begins<font color="#E5E5E5"> with the same header</font>

130
00:05:25,940 --> 00:05:31,070
structure as<font color="#CCCCCC"> shown in the top right and</font>

131
00:05:28,670 --> 00:05:33,170
following the header<font color="#E5E5E5"> the body section</font>

132
00:05:31,070 --> 00:05:35,120
starts in in accordance with each each

133
00:05:33,170 --> 00:05:39,380
<font color="#E5E5E5">of employ message type such as packet in</font>

134
00:05:35,120 --> 00:05:41,450
<font color="#CCCCCC">workflow</font><font color="#E5E5E5"> mode so in in open play 1.0</font>

135
00:05:39,380 --> 00:05:43,850
there are 22 message types in total and

136
00:05:41,450 --> 00:05:46,670
in the case<font color="#E5E5E5"> of the open flow switch it</font>

137
00:05:43,850 --> 00:05:49,700
consists of a flow table<font color="#E5E5E5"> and handles the</font>

138
00:05:46,670 --> 00:05:51,950
incoming packets in three steps<font color="#E5E5E5"> so so</font>

139
00:05:49,700 --> 00:05:54,080
first<font color="#E5E5E5"> when a packet arrives at the</font>

140
00:05:51,950 --> 00:05:57,590
switch the<font color="#E5E5E5"> switch looks up the flow</font>

141
00:05:54,080 --> 00:06:00,919
rules in the table by by<font color="#E5E5E5"> matching by</font>

142
00:05:57,590 --> 00:06:03,320
looking up header fields such as import

143
00:06:00,920 --> 00:06:05,780
and Ethernet<font color="#E5E5E5"> IP and IP addresses and so</font>

144
00:06:03,320 --> 00:06:08,420
on so if they're met the packet is met

145
00:06:05,780 --> 00:06:10,909
you to a specific<font color="#CCCCCC"> flow</font><font color="#E5E5E5"> role any action</font>

146
00:06:08,420 --> 00:06:13,190
any<font color="#E5E5E5"> actions for that</font><font color="#CCCCCC"> plural</font><font color="#E5E5E5"> are</font>

147
00:06:10,910 --> 00:06:16,160
performed on the packet for instance the

148
00:06:13,190 --> 00:06:19,400
switch can for the packet<font color="#CCCCCC"> to the other</font>

149
00:06:16,160 --> 00:06:21,980
port or modify the head appeals<font color="#E5E5E5"> and</font><font color="#CCCCCC"> aft</font>

150
00:06:19,400 --> 00:06:24,469
<font color="#CCCCCC">all those actions are executed the</font>

151
00:06:21,980 --> 00:06:28,880
<font color="#E5E5E5">switch in increase the counters of the</font>

152
00:06:24,470 --> 00:06:29,450
flow rule such as<font color="#CCCCCC"> PAC accounts or byte</font>

153
00:06:28,880 --> 00:06:32,090
counts

154
00:06:29,450 --> 00:06:33,800
so those counter can be<font color="#E5E5E5"> used to analyze</font>

155
00:06:32,090 --> 00:06:34,900
the<font color="#E5E5E5"> flow statistics from the controller</font>

156
00:06:33,800 --> 00:06:37,820
later

157
00:06:34,900 --> 00:06:41,060
so let's have a look at<font color="#E5E5E5"> all the basic</font>

158
00:06:37,820 --> 00:06:42,800
operation<font color="#CCCCCC"> of open flow and here we have</font>

159
00:06:41,060 --> 00:06:43,820
a very simple<font color="#E5E5E5"> net of topology with one</font>

160
00:06:42,800 --> 00:06:46,670
switch and toast

161
00:06:43,820 --> 00:06:49,520
so when connecting<font color="#CCCCCC"> to the open</font><font color="#E5E5E5"> s</font><font color="#CCCCCC"> 10</font>

162
00:06:46,670 --> 00:06:49,940
controller<font color="#E5E5E5"> the switch exchanges to open</font>

163
00:06:49,520 --> 00:06:51,919
blue

164
00:06:49,940 --> 00:06:54,440
hello messages with<font color="#CCCCCC"> the controller first</font>

165
00:06:51,920 --> 00:06:57,230
<font color="#E5E5E5">and after the handshake process is done</font>

166
00:06:54,440 --> 00:06:59,960
in this<font color="#E5E5E5"> example host a tries to send a</font>

167
00:06:57,230 --> 00:07:02,210
packet<font color="#CCCCCC"> to host B but since there is no</font>

168
00:06:59,960 --> 00:07:04,130
match<font color="#E5E5E5"> it</font><font color="#CCCCCC"> fluoro in</font><font color="#E5E5E5"> the table according</font>

169
00:07:02,210 --> 00:07:06,979
<font color="#CCCCCC">to the open flow specification the</font>

170
00:07:04,130 --> 00:07:08,390
switch sends a packet message including

171
00:07:06,980 --> 00:07:11,270
the incoming<font color="#E5E5E5"> packet header to</font><font color="#CCCCCC"> the</font>

172
00:07:08,390 --> 00:07:13,219
<font color="#CCCCCC">Asturian controller</font><font color="#E5E5E5"> then in order to</font>

173
00:07:11,270 --> 00:07:16,159
<font color="#E5E5E5">install new Fluval just the controller</font>

174
00:07:13,220 --> 00:07:17,900
sends flow mode message to the switch so

175
00:07:16,160 --> 00:07:20,810
<font color="#CCCCCC">that the packet can be forwarded</font><font color="#E5E5E5"> to its</font>

176
00:07:17,900 --> 00:07:22,849
<font color="#CCCCCC">original destination so as you can see</font>

177
00:07:20,810 --> 00:07:26,090
<font color="#CCCCCC">in this installed flooville in the table</font>

178
00:07:22,850 --> 00:07:28,760
<font color="#CCCCCC">the matchy fields have import</font><font color="#E5E5E5"> internet</font>

179
00:07:26,090 --> 00:07:31,219
type and destination IP<font color="#E5E5E5"> address so since</font>

180
00:07:28,760 --> 00:07:33,200
the packet is met you<font color="#E5E5E5"> to this floral</font><font color="#CCCCCC"> it</font>

181
00:07:31,220 --> 00:07:35,270
can be forwarded<font color="#CCCCCC"> to host B and the</font>

182
00:07:33,200 --> 00:07:38,719
counters of the chloral increases as

183
00:07:35,270 --> 00:07:42,049
well as I briefly mentioned<font color="#E5E5E5"> in addition</font>

184
00:07:38,720 --> 00:07:45,320
<font color="#E5E5E5">to open to</font><font color="#CCCCCC"> the 1.0 open flow 1.3 is</font>

185
00:07:42,050 --> 00:07:46,820
widely used as well<font color="#E5E5E5"> so the noticeable</font>

186
00:07:45,320 --> 00:07:50,330
<font color="#E5E5E5">differences between them are as follows</font>

187
00:07:46,820 --> 00:07:53,599
and so first of all there are<font color="#E5E5E5"> more</font><font color="#CCCCCC"> seven</font>

188
00:07:50,330 --> 00:07:55,310
message types in open flow 1.3 and this

189
00:07:53,600 --> 00:07:58,670
is<font color="#E5E5E5"> for suffering multiple controllers</font>

190
00:07:55,310 --> 00:08:00,080
<font color="#E5E5E5">group table</font><font color="#CCCCCC"> meter table and so on so</font><font color="#E5E5E5"> you</font>

191
00:07:58,670 --> 00:08:02,890
can find a<font color="#CCCCCC"> detailed description about</font>

192
00:08:00,080 --> 00:08:06,080
<font color="#E5E5E5">that in open flow 1.3 specification and</font>

193
00:08:02,890 --> 00:08:09,469
so with such a version<font color="#CCCCCC"> of grid open flow</font>

194
00:08:06,080 --> 00:08:11,840
1.3<font color="#E5E5E5"> enhanced the reliability scalability</font>

195
00:08:09,470 --> 00:08:16,490
and efficiency of<font color="#E5E5E5"> the protocol they an</font>

196
00:08:11,840 --> 00:08:17,989
open flow 1.0<font color="#E5E5E5"> so as</font><font color="#CCCCCC"> i described in the</font>

197
00:08:16,490 --> 00:08:20,240
<font color="#E5E5E5">previous lives there are many other</font>

198
00:08:17,990 --> 00:08:22,460
advantages<font color="#E5E5E5"> of Sdn so many companies are</font>

199
00:08:20,240 --> 00:08:24,620
adopting<font color="#E5E5E5"> a stay in these days</font><font color="#CCCCCC"> for</font>

200
00:08:22,460 --> 00:08:27,380
instance at<font color="#CCCCCC"> the telco companies like</font>

201
00:08:24,620 --> 00:08:29,420
<font color="#E5E5E5">Deutsche Telekom AT&T and Verizon are</font>

202
00:08:27,380 --> 00:08:32,090
building<font color="#E5E5E5"> 5g networks and wide area</font>

203
00:08:29,420 --> 00:08:34,070
<font color="#E5E5E5">networks using Sdn and also the major</font>

204
00:08:32,090 --> 00:08:36,380
<font color="#E5E5E5">companies</font><font color="#CCCCCC"> like Google and Facebook</font><font color="#E5E5E5"> are</font>

205
00:08:34,070 --> 00:08:39,410
using Sdn to build their data centers

206
00:08:36,380 --> 00:08:41,780
<font color="#E5E5E5">and not only the industry but also the</font>

207
00:08:39,409 --> 00:08:43,760
military<font color="#CCCCCC"> in the US are considering to</font>

208
00:08:41,780 --> 00:08:45,319
adapt STM into their military networks

209
00:08:43,760 --> 00:08:47,360
because of the military<font color="#CCCCCC"> network</font>

210
00:08:45,320 --> 00:08:49,640
<font color="#E5E5E5">characteristics</font><font color="#CCCCCC"> it seems that they</font>

211
00:08:47,360 --> 00:08:51,440
they prefer<font color="#CCCCCC"> the centralized metal</font>

212
00:08:49,640 --> 00:08:56,779
management with<font color="#CCCCCC"> the color</font><font color="#E5E5E5"> Burnett of you</font>

213
00:08:51,440 --> 00:08:59,990
in<font color="#E5E5E5"> SDM so now that now question is what</font>

214
00:08:56,779 --> 00:09:02,079
<font color="#CCCCCC">about the security of Sdn although is</font>

215
00:08:59,990 --> 00:09:03,950
then over the significant<font color="#E5E5E5"> city</font>

216
00:09:02,079 --> 00:09:06,829
<font color="#E5E5E5">significant advantages over traditional</font>

217
00:09:03,950 --> 00:09:08,930
<font color="#CCCCCC">King the security of s name has</font><font color="#E5E5E5"> not been</font>

218
00:09:06,829 --> 00:09:10,910
sufficient to<font color="#CCCCCC"> level five</font><font color="#E5E5E5"> so we wanted to</font>

219
00:09:08,930 --> 00:09:13,370
<font color="#CCCCCC">ask if they are really</font><font color="#E5E5E5"> secure to be</font>

220
00:09:10,910 --> 00:09:15,949
<font color="#E5E5E5">deployed at the production</font><font color="#CCCCCC"> level so</font>

221
00:09:13,370 --> 00:09:18,950
first to simply check out the academic

222
00:09:15,950 --> 00:09:21,920
<font color="#CCCCCC">area</font><font color="#E5E5E5"> we investigated how many papers</font>

223
00:09:18,950 --> 00:09:24,800
<font color="#CCCCCC">well</font><font color="#E5E5E5"> related to Sdn security have been</font>

224
00:09:21,920 --> 00:09:26,990
<font color="#E5E5E5">published in recent years and as you can</font>

225
00:09:24,800 --> 00:09:30,439
<font color="#E5E5E5">see</font><font color="#CCCCCC"> in this graph</font><font color="#E5E5E5"> the number of those</font>

226
00:09:26,990 --> 00:09:34,399
papers has increased every<font color="#CCCCCC"> year since</font>

227
00:09:30,440 --> 00:09:36,440
2013<font color="#CCCCCC"> a nurse though in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> placard</font><font color="#E5E5E5"> USA</font>

228
00:09:34,399 --> 00:09:39,019
<font color="#E5E5E5">the briefings and the us in our sessions</font>

229
00:09:36,440 --> 00:09:41,240
about the<font color="#E5E5E5"> s10 security have</font><font color="#CCCCCC"> been</font>

230
00:09:39,019 --> 00:09:43,940
published as well<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> can find out</font>

231
00:09:41,240 --> 00:09:45,500
that<font color="#CCCCCC"> s10 security has</font><font color="#E5E5E5"> become a</font><font color="#CCCCCC"> real</font><font color="#E5E5E5"> and</font>

232
00:09:43,940 --> 00:09:48,860
serious<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> so we need to further</font>

233
00:09:45,500 --> 00:09:50,860
analyze<font color="#E5E5E5"> it so here we</font><font color="#CCCCCC"> have a typical</font>

234
00:09:48,860 --> 00:09:53,870
<font color="#CCCCCC">external</font><font color="#E5E5E5"> architecture and it can be</font>

235
00:09:50,860 --> 00:09:56,649
broken<font color="#E5E5E5"> down into</font><font color="#CCCCCC"> three layers control</font>

236
00:09:53,870 --> 00:09:59,360
plane control<font color="#E5E5E5"> channel and data plane and</font>

237
00:09:56,649 --> 00:10:01,190
<font color="#E5E5E5">and also each one can</font><font color="#CCCCCC"> be on at the</font>

238
00:09:59,360 --> 00:10:02,870
<font color="#E5E5E5">factory as well</font><font color="#CCCCCC"> so let's check out which</font>

239
00:10:01,190 --> 00:10:05,959
followed up literally<font color="#E5E5E5"> just in each layer</font>

240
00:10:02,870 --> 00:10:08,480
<font color="#E5E5E5">so</font><font color="#CCCCCC"> the first one is the control</font><font color="#E5E5E5"> plane</font>

241
00:10:05,959 --> 00:10:11,810
and actually this is<font color="#CCCCCC"> the s10 controller</font>

242
00:10:08,480 --> 00:10:14,180
and in STM<font color="#E5E5E5"> s10 controller can be</font>

243
00:10:11,810 --> 00:10:16,130
considered as a brain<font color="#CCCCCC"> of network because</font>

244
00:10:14,180 --> 00:10:20,060
<font color="#CCCCCC">it knows everything about</font><font color="#E5E5E5"> network and</font>

245
00:10:16,130 --> 00:10:22,040
has<font color="#E5E5E5"> full control</font><font color="#CCCCCC"> over it so it is single</font>

246
00:10:20,060 --> 00:10:23,779
point of failure and<font color="#CCCCCC"> therefore any type</font>

247
00:10:22,040 --> 00:10:25,849
of<font color="#E5E5E5"> dos attack against the same</font>

248
00:10:23,779 --> 00:10:28,970
controller will immediately make<font color="#E5E5E5"> the</font>

249
00:10:25,850 --> 00:10:30,529
<font color="#E5E5E5">Internet unavailable so one possible dos</font>

250
00:10:28,970 --> 00:10:32,870
<font color="#CCCCCC">attack is known as a packet</font><font color="#E5E5E5"> flooding</font>

251
00:10:30,529 --> 00:10:35,240
attack<font color="#E5E5E5"> where not an attacker can</font>

252
00:10:32,870 --> 00:10:37,070
generate a lot<font color="#CCCCCC"> of random traffic's</font>

253
00:10:35,240 --> 00:10:38,750
leading to sending<font color="#CCCCCC"> busted its name</font>

254
00:10:37,070 --> 00:10:41,300
<font color="#CCCCCC">compacting message to the estate</font>

255
00:10:38,750 --> 00:10:43,910
controller so<font color="#CCCCCC"> that the controller can be</font>

256
00:10:41,300 --> 00:10:47,449
<font color="#E5E5E5">unavailable and in the in the case of</font>

257
00:10:43,910 --> 00:10:50,079
the control<font color="#E5E5E5"> channel an attacker can</font>

258
00:10:47,449 --> 00:10:53,269
guess the network<font color="#CCCCCC"> topology information</font>

259
00:10:50,079 --> 00:10:56,000
through the ongoing Sdn messages if

260
00:10:53,269 --> 00:10:58,850
there is no increase in but<font color="#E5E5E5"> actually</font>

261
00:10:56,000 --> 00:11:01,110
open flow supports TLS and SSL

262
00:10:58,850 --> 00:11:02,970
encryption<font color="#E5E5E5"> but</font><font color="#CCCCCC"> they</font>

263
00:11:01,110 --> 00:11:05,130
not mandatory and<font color="#E5E5E5"> in practice that's</font>

264
00:11:02,970 --> 00:11:07,920
<font color="#E5E5E5">rarely used to to its performance</font>

265
00:11:05,130 --> 00:11:10,320
<font color="#E5E5E5">impacts and lastly if</font><font color="#CCCCCC"> an SDN controller</font>

266
00:11:07,920 --> 00:11:13,290
<font color="#CCCCCC">where a stain application is compromised</font>

267
00:11:10,320 --> 00:11:16,380
<font color="#E5E5E5">they can push a lot of floral traffic's</font>

268
00:11:13,290 --> 00:11:19,410
<font color="#E5E5E5">to the open flow switches causing floral</font>

269
00:11:16,380 --> 00:11:21,959
floating attack<font color="#CCCCCC"> which is just the</font>

270
00:11:19,410 --> 00:11:25,050
<font color="#E5E5E5">resources on the switch and so that</font>

271
00:11:21,959 --> 00:11:28,199
performance degradation<font color="#E5E5E5"> on the switch</font>

272
00:11:25,050 --> 00:11:29,790
can happen in addition to those<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

273
00:11:28,200 --> 00:11:32,370
cases that<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> in the previous</font>

274
00:11:29,790 --> 00:11:35,120
slide there have<font color="#E5E5E5"> been many other</font><font color="#CCCCCC"> cases</font>

275
00:11:32,370 --> 00:11:38,060
<font color="#CCCCCC">in each layer as you showing in this</font><font color="#E5E5E5"> Sdn</font>

276
00:11:35,120 --> 00:11:41,579
vulnerability Genome Project

277
00:11:38,060 --> 00:11:45,390
so we believed<font color="#E5E5E5"> the narrow operators for</font>

278
00:11:41,579 --> 00:11:47,279
<font color="#CCCCCC">a seeking eruption Sdn would want to</font>

279
00:11:45,390 --> 00:11:49,170
know<font color="#CCCCCC"> if</font><font color="#E5E5E5"> various SN components are</font>

280
00:11:47,279 --> 00:11:51,720
following up<font color="#CCCCCC"> to those</font><font color="#E5E5E5"> of the cases or</font>

281
00:11:49,170 --> 00:11:53,819
<font color="#E5E5E5">not</font><font color="#CCCCCC"> so one possible question is how many</font>

282
00:11:51,720 --> 00:11:57,300
<font color="#E5E5E5">SD and vulnerability exists in now and</font>

283
00:11:53,820 --> 00:12:00,300
<font color="#E5E5E5">also if we have the no no texting no no</font>

284
00:11:57,300 --> 00:12:02,880
tech security<font color="#CCCCCC"> test scenarios how should</font>

285
00:12:00,300 --> 00:12:05,069
we play each one because manually

286
00:12:02,880 --> 00:12:07,140
testing each attack in different<font color="#CCCCCC"> a</font>

287
00:12:05,070 --> 00:12:09,690
strain components is definitely has not

288
00:12:07,140 --> 00:12:12,029
a simple<font color="#CCCCCC"> task and</font><font color="#E5E5E5"> also testing all these</font>

289
00:12:09,690 --> 00:12:13,829
all be no secret<font color="#CCCCCC"> the test cases does not</font>

290
00:12:12,029 --> 00:12:16,079
necessary mean that<font color="#CCCCCC"> honesty net</font>

291
00:12:13,829 --> 00:12:19,620
<font color="#E5E5E5">component in seeker</font><font color="#CCCCCC"> has their</font><font color="#E5E5E5"> make this</font>

292
00:12:16,079 --> 00:12:21,930
<font color="#E5E5E5">from non attacks so in order to reserve</font>

293
00:12:19,620 --> 00:12:23,820
<font color="#E5E5E5">those questions from now on I'd like to</font>

294
00:12:21,930 --> 00:12:26,760
introduce a security assessment framer

295
00:12:23,820 --> 00:12:29,579
Presdient<font color="#E5E5E5"> called</font><font color="#CCCCCC"> Delta and here we have</font>

296
00:12:26,760 --> 00:12:32,819
<font color="#CCCCCC">four design goals that</font><font color="#E5E5E5"> Delta aim to</font>

297
00:12:29,579 --> 00:12:34,709
accomplish first<font color="#CCCCCC"> it should</font><font color="#E5E5E5"> be highly</font>

298
00:12:32,820 --> 00:12:37,320
automated<font color="#E5E5E5"> to minimize the human</font><font color="#CCCCCC"> effort</font>

299
00:12:34,709 --> 00:12:40,170
because as<font color="#E5E5E5"> i preformation</font>

300
00:12:37,320 --> 00:12:42,060
it can be very<font color="#E5E5E5"> time-consuming</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> to</font>

301
00:12:40,170 --> 00:12:45,719
manually set up a chest in component and

302
00:12:42,060 --> 00:12:48,930
run the<font color="#CCCCCC"> security</font><font color="#E5E5E5"> test and verify the</font>

303
00:12:45,720 --> 00:12:51,720
test result<font color="#E5E5E5"> and</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> Delta should be</font>

304
00:12:48,930 --> 00:12:54,269
<font color="#CCCCCC">able to find</font><font color="#E5E5E5"> new vulnerabilities as well</font>

305
00:12:51,720 --> 00:12:57,510
<font color="#E5E5E5">so in our framework we specifically aim</font>

306
00:12:54,269 --> 00:13:00,480
to first test<font color="#CCCCCC"> stn control flows</font><font color="#E5E5E5"> such as</font>

307
00:12:57,510 --> 00:13:03,329
open flow in open flow based SCM and

308
00:13:00,480 --> 00:13:05,850
third<font color="#CCCCCC"> delta should should support</font>

309
00:13:03,329 --> 00:13:08,670
<font color="#E5E5E5">various testing components for instance</font>

310
00:13:05,850 --> 00:13:10,980
<font color="#E5E5E5">currently the delta supports for open</font>

311
00:13:08,670 --> 00:13:12,209
source<font color="#CCCCCC"> sm controllers including</font><font color="#E5E5E5"> honest</font>

312
00:13:10,980 --> 00:13:14,999
and open<font color="#E5E5E5"> a lie</font>

313
00:13:12,209 --> 00:13:16,949
in the case<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> switching devices any</font>

314
00:13:14,999 --> 00:13:20,189
employee<font color="#E5E5E5"> enable switches can be tested</font>

315
00:13:16,949 --> 00:13:22,498
<font color="#CCCCCC">and</font><font color="#E5E5E5"> lastly when</font><font color="#CCCCCC"> we predict none of the</font>

316
00:13:20,189 --> 00:13:24,990
cases<font color="#E5E5E5"> Delta should cover as many</font><font color="#CCCCCC"> tech</font>

317
00:13:22,499 --> 00:13:28,139
scenarios as possible<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we don't</font>

318
00:13:24,990 --> 00:13:30,839
<font color="#E5E5E5">need any other testing tools so let's</font>

319
00:13:28,139 --> 00:13:34,170
take a look at how Delta achieve<font color="#E5E5E5"> achieve</font>

320
00:13:30,839 --> 00:13:36,779
each design goal so this is how Delta

321
00:13:34,170 --> 00:13:38,670
looks like Delta<font color="#E5E5E5"> consists of one is a</font>

322
00:13:36,779 --> 00:13:40,829
manager and three<font color="#E5E5E5"> different types of</font>

323
00:13:38,670 --> 00:13:43,410
agents application channel and host

324
00:13:40,829 --> 00:13:47,189
agent and the agent<font color="#E5E5E5"> manager is</font>

325
00:13:43,410 --> 00:13:49,319
<font color="#E5E5E5">communicate with all the agent internet</font>

326
00:13:47,189 --> 00:13:51,929
using a dedicated<font color="#E5E5E5"> Delta control channel</font>

327
00:13:49,319 --> 00:13:53,878
showing is let<font color="#E5E5E5"> that line in this light</font>

328
00:13:51,929 --> 00:13:56,879
so let's<font color="#CCCCCC"> say</font><font color="#E5E5E5"> have a look</font><font color="#CCCCCC"> at the each</font>

329
00:13:53,879 --> 00:14:00,420
<font color="#E5E5E5">component in detail the first one is the</font>

330
00:13:56,879 --> 00:14:02,670
agent manager<font color="#E5E5E5"> and it is basically</font><font color="#CCCCCC"> a</font>

331
00:14:00,420 --> 00:14:05,189
control tower<font color="#E5E5E5"> that manages and controls</font>

332
00:14:02,670 --> 00:14:07,050
all<font color="#CCCCCC"> the Asian internet work so the users</font>

333
00:14:05,189 --> 00:14:09,059
would access the<font color="#CCCCCC"> edge of major to</font>

334
00:14:07,050 --> 00:14:12,748
configure and perform the various<font color="#E5E5E5"> secret</font>

335
00:14:09,059 --> 00:14:14,730
test cases against<font color="#E5E5E5"> target Sdn so and</font>

336
00:14:12,749 --> 00:14:17,160
whenever the test case is done<font color="#E5E5E5"> the agent</font>

337
00:14:14,730 --> 00:14:19,259
manager collects<font color="#CCCCCC"> each test reader</font><font color="#E5E5E5"> from</font>

338
00:14:17,160 --> 00:14:22,589
each agent and then makes a decision

339
00:14:19,259 --> 00:14:26,339
whether the test<font color="#E5E5E5"> cases</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> successful or</font>

340
00:14:22,589 --> 00:14:28,259
<font color="#E5E5E5">not and the application</font><font color="#CCCCCC"> asian is honest</font>

341
00:14:26,339 --> 00:14:31,799
<font color="#E5E5E5">in application running inside a target</font>

342
00:14:28,259 --> 00:14:33,839
controller<font color="#E5E5E5"> and it includes various known</font>

343
00:14:31,799 --> 00:14:36,449
<font color="#E5E5E5">attack scenarios that could be performed</font>

344
00:14:33,839 --> 00:14:39,259
<font color="#E5E5E5">by an s10 application so we need to</font>

345
00:14:36,449 --> 00:14:41,819
develop<font color="#E5E5E5"> different</font><font color="#CCCCCC"> nesting application</font>

346
00:14:39,259 --> 00:14:43,740
application agents against each

347
00:14:41,819 --> 00:14:46,049
controller because each controller

348
00:14:43,740 --> 00:14:50,699
<font color="#CCCCCC">provides their own native functions and</font>

349
00:14:46,049 --> 00:14:53,309
open<font color="#CCCCCC"> ap is</font><font color="#E5E5E5"> and it has the voting modules</font>

350
00:14:50,699 --> 00:14:56,339
for finding<font color="#CCCCCC"> new Holum fallen abilities</font>

351
00:14:53,309 --> 00:14:58,769
so it can intercept<font color="#CCCCCC"> forge</font><font color="#E5E5E5"> and change the</font>

352
00:14:56,339 --> 00:15:01,079
<font color="#CCCCCC">assign control messages in the in the</font>

353
00:14:58,769 --> 00:15:03,240
controller the<font color="#CCCCCC"> forcing technique</font><font color="#E5E5E5"> usually</font>

354
00:15:01,079 --> 00:15:07,410
<font color="#CCCCCC">in Delta will be explained</font><font color="#E5E5E5"> a later slide</font>

355
00:15:03,240 --> 00:15:08,899
<font color="#E5E5E5">and the channel agent is located between</font>

356
00:15:07,410 --> 00:15:11,699
<font color="#E5E5E5">the controller and the switch and</font>

357
00:15:08,899 --> 00:15:13,139
similar to the application<font color="#CCCCCC"> asian</font><font color="#E5E5E5"> it also</font>

358
00:15:11,699 --> 00:15:16,019
comes<font color="#CCCCCC"> with the following</font><font color="#E5E5E5"> modules that</font>

359
00:15:13,139 --> 00:15:18,329
can<font color="#E5E5E5"> sniff and modify modify the ongoing</font>

360
00:15:16,019 --> 00:15:20,100
<font color="#CCCCCC">s10 control messages in the between the</font>

361
00:15:18,329 --> 00:15:23,638
controller and the channel on<font color="#E5E5E5"> the switch</font>

362
00:15:20,100 --> 00:15:26,310
and as approach the channel agent can

363
00:15:23,639 --> 00:15:30,750
impose a delay on<font color="#E5E5E5"> HSN control</font>

364
00:15:26,310 --> 00:15:32,550
by capturing<font color="#E5E5E5"> and releasing it</font><font color="#CCCCCC"> and in</font>

365
00:15:30,750 --> 00:15:34,590
<font color="#E5E5E5">order to reduce the test</font><font color="#CCCCCC"> rating</font><font color="#E5E5E5"> test</font>

366
00:15:32,550 --> 00:15:37,199
running time it can simulate a simple

367
00:15:34,590 --> 00:15:39,500
<font color="#CCCCCC">s10 controller</font><font color="#E5E5E5"> against</font><font color="#CCCCCC"> a target switch</font>

368
00:15:37,200 --> 00:15:42,840
under the test and vice versa

369
00:15:39,500 --> 00:15:45,090
and lastly<font color="#CCCCCC"> hosts Asian</font><font color="#E5E5E5"> exchange</font><font color="#CCCCCC"> on</font>

370
00:15:42,840 --> 00:15:47,550
normalized participating the target SDM

371
00:15:45,090 --> 00:15:49,950
<font color="#E5E5E5">so it is capable of generating an error</font>

372
00:15:47,550 --> 00:15:53,520
<font color="#E5E5E5">traffic to an accessory target for</font>

373
00:15:49,950 --> 00:15:55,530
instance<font color="#E5E5E5"> the host agent sends a</font><font color="#CCCCCC"> raja</font>

374
00:15:53,520 --> 00:15:57,990
<font color="#E5E5E5">voluble native traffic to the open</font><font color="#CCCCCC"> flow</font>

375
00:15:55,530 --> 00:16:00,089
<font color="#E5E5E5">switch causing a packet of flooding</font>

376
00:15:57,990 --> 00:16:01,890
<font color="#CCCCCC">attack that i mentioned before</font><font color="#E5E5E5"> and it</font>

377
00:16:00,090 --> 00:16:03,840
<font color="#E5E5E5">can be used to verify the connectivity</font>

378
00:16:01,890 --> 00:16:05,870
<font color="#E5E5E5">to the other</font><font color="#CCCCCC"> hosts</font><font color="#E5E5E5"> or whether there is</font>

379
00:16:03,840 --> 00:16:10,050
<font color="#CCCCCC">an</font><font color="#E5E5E5"> performance degradation on the switch</font>

380
00:16:05,870 --> 00:16:13,860
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> traffic latency so this is how</font>

381
00:16:10,050 --> 00:16:17,219
<font color="#E5E5E5">Delta basically works as I mentioned</font>

382
00:16:13,860 --> 00:16:19,620
briefly<font color="#E5E5E5"> Delta provides</font><font color="#CCCCCC"> two operation</font>

383
00:16:17,220 --> 00:16:21,780
modes<font color="#E5E5E5"> reproducing no litter cases and</font>

384
00:16:19,620 --> 00:16:24,300
finding you<font color="#CCCCCC"> fallen abilities so</font>

385
00:16:21,780 --> 00:16:26,760
<font color="#E5E5E5">donatable</font><font color="#CCCCCC"> Peter can choose either one</font><font color="#E5E5E5"> of</font>

386
00:16:24,300 --> 00:16:29,910
<font color="#E5E5E5">the most and when in the case of the</font>

387
00:16:26,760 --> 00:16:32,880
rapprochement<font color="#CCCCCC"> the the operator has to</font>

388
00:16:29,910 --> 00:16:34,890
<font color="#CCCCCC">select the</font><font color="#E5E5E5"> test cases as well then the</font>

389
00:16:32,880 --> 00:16:36,660
agent manager instruct<font color="#E5E5E5"> each agent to</font>

390
00:16:34,890 --> 00:16:39,930
take different actions according to<font color="#E5E5E5"> the</font>

391
00:16:36,660 --> 00:16:42,810
<font color="#CCCCCC">selected test scenarios then when</font>

392
00:16:39,930 --> 00:16:45,359
finding<font color="#E5E5E5"> new vulnerabilities</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> photo</font>

393
00:16:42,810 --> 00:16:47,599
<font color="#E5E5E5">models in the each agent randomized the</font>

394
00:16:45,360 --> 00:16:50,700
<font color="#E5E5E5">s10 control flows from their location</font>

395
00:16:47,600 --> 00:16:53,070
<font color="#E5E5E5">after the test case is done</font><font color="#CCCCCC"> the agent</font>

396
00:16:50,700 --> 00:16:56,550
manager<font color="#E5E5E5"> collects</font><font color="#CCCCCC"> a test measure from</font>

397
00:16:53,070 --> 00:16:59,040
<font color="#E5E5E5">each agent and analyzes it finally the</font>

398
00:16:56,550 --> 00:17:01,680
agent manager turns the<font color="#E5E5E5"> network operator</font>

399
00:16:59,040 --> 00:17:03,050
<font color="#E5E5E5">if the network has passed the test cases</font>

400
00:17:01,680 --> 00:17:06,750
or<font color="#E5E5E5"> not</font>

401
00:17:03,050 --> 00:17:08,430
so from this brief fluid flow we can we

402
00:17:06,750 --> 00:17:11,150
can see<font color="#E5E5E5"> that Delta is</font><font color="#CCCCCC"> holid mated</font>

403
00:17:08,430 --> 00:17:15,990
framework which is<font color="#E5E5E5"> our first design goal</font>

404
00:17:11,150 --> 00:17:19,199
and in order to<font color="#CCCCCC"> find</font><font color="#E5E5E5"> new security holes</font>

405
00:17:15,990 --> 00:17:21,780
in STM<font color="#CCCCCC"> delta r entomologists the</font><font color="#E5E5E5"> flu s10</font>

406
00:17:19,199 --> 00:17:23,579
control flows<font color="#E5E5E5"> by adapting the black box</font>

407
00:17:21,780 --> 00:17:25,709
<font color="#CCCCCC">version</font><font color="#E5E5E5"> technique and to more</font>

408
00:17:23,579 --> 00:17:30,090
efficiently and systematically<font color="#E5E5E5"> randomize</font>

409
00:17:25,709 --> 00:17:31,980
it here we we first<font color="#CCCCCC"> classify the control</font>

410
00:17:30,090 --> 00:17:34,320
flows into three different<font color="#CCCCCC"> types based</font>

411
00:17:31,980 --> 00:17:36,900
<font color="#E5E5E5">on its operations so the first one</font><font color="#CCCCCC"> is</font>

412
00:17:34,320 --> 00:17:39,010
the symmetric control flow which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

413
00:17:36,900 --> 00:17:42,040
request<font color="#E5E5E5"> and response message pair</font>

414
00:17:39,010 --> 00:17:44,020
so if the controller or<font color="#CCCCCC"> the switch sends</font>

415
00:17:42,040 --> 00:17:45,820
<font color="#E5E5E5">a response message request message to</font>

416
00:17:44,020 --> 00:17:47,620
the other one<font color="#E5E5E5"> the received the receiver</font>

417
00:17:45,820 --> 00:17:49,300
has to<font color="#CCCCCC"> send a response</font><font color="#E5E5E5"> message for</font>

418
00:17:47,620 --> 00:17:52,290
instance there are echo request and

419
00:17:49,300 --> 00:17:55,930
response message pair<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is to check</font>

420
00:17:52,290 --> 00:17:58,540
<font color="#E5E5E5">if the controller or</font><font color="#CCCCCC"> the switch is alive</font>

421
00:17:55,930 --> 00:18:00,820
<font color="#CCCCCC">and the second one is the asymmetric</font>

422
00:17:58,540 --> 00:18:03,550
control flow which is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> direct</font>

423
00:18:00,820 --> 00:18:05,080
unidirectional message such as packet in

424
00:18:03,550 --> 00:18:07,240
or flow mode<font color="#E5E5E5"> that I mentioned several</font>

425
00:18:05,080 --> 00:18:09,419
times<font color="#CCCCCC"> so in this case the receiver</font><font color="#E5E5E5"> does</font>

426
00:18:07,240 --> 00:18:11,650
not have to send a response<font color="#E5E5E5"> message and</font>

427
00:18:09,420 --> 00:18:13,870
lastly we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the intra controller</font>

428
00:18:11,650 --> 00:18:16,690
control flows which is actually open

429
00:18:13,870 --> 00:18:18,760
flow related API call chains between<font color="#CCCCCC"> s10</font>

430
00:18:16,690 --> 00:18:21,490
applications and core services provided

431
00:18:18,760 --> 00:18:23,890
by<font color="#E5E5E5"> the controller</font><font color="#CCCCCC"> so leveraging those</font>

432
00:18:21,490 --> 00:18:25,660
three types of<font color="#CCCCCC"> Sen</font><font color="#E5E5E5"> control flows we</font>

433
00:18:23,890 --> 00:18:27,820
<font color="#CCCCCC">derived an operational state diagram of</font>

434
00:18:25,660 --> 00:18:30,760
a typical<font color="#E5E5E5"> Sdn controller</font><font color="#CCCCCC"> additionally in</font>

435
00:18:27,820 --> 00:18:32,679
<font color="#E5E5E5">this picture so in this diagram the</font>

436
00:18:30,760 --> 00:18:36,070
state labeled<font color="#E5E5E5"> R stands for the ready</font>

437
00:18:32,680 --> 00:18:38,080
state to<font color="#E5E5E5"> receive or send the Sdn control</font>

438
00:18:36,070 --> 00:18:40,540
messages and the other states are

439
00:18:38,080 --> 00:18:42,580
<font color="#E5E5E5">labeled in accordance with each control</font>

440
00:18:40,540 --> 00:18:45,850
message type so based on this state

441
00:18:42,580 --> 00:18:48,520
diagram the<font color="#CCCCCC"> topology moodle's in each</font>

442
00:18:45,850 --> 00:18:50,889
<font color="#CCCCCC">agent take two steps to find new</font>

443
00:18:48,520 --> 00:18:52,780
vulnerabilities<font color="#E5E5E5"> so first each agent</font>

444
00:18:50,890 --> 00:18:55,360
identify the<font color="#E5E5E5"> current state of the target</font>

445
00:18:52,780 --> 00:18:58,840
controller and then manipulate the flow

446
00:18:55,360 --> 00:19:02,050
sequences or the input values of the<font color="#CCCCCC"> s10</font>

447
00:18:58,840 --> 00:19:03,669
control flows so the first step is

448
00:19:02,050 --> 00:19:05,680
identifying the current state of the

449
00:19:03,670 --> 00:19:08,260
target controller and here we have the

450
00:19:05,680 --> 00:19:10,630
very simple example showing<font color="#CCCCCC"> how it works</font>

451
00:19:08,260 --> 00:19:13,360
<font color="#CCCCCC">so first we assume that the current</font>

452
00:19:10,630 --> 00:19:15,130
<font color="#E5E5E5">state is in the ready state and when the</font>

453
00:19:13,360 --> 00:19:17,050
controller received a packet<font color="#CCCCCC"> a message</font>

454
00:19:15,130 --> 00:19:19,000
from the switch the channel agent in the

455
00:19:17,050 --> 00:19:21,550
middle notifies it to the agent<font color="#E5E5E5"> manager</font>

456
00:19:19,000 --> 00:19:24,970
so the current state<font color="#CCCCCC"> is moved</font><font color="#E5E5E5"> into a</font>

457
00:19:21,550 --> 00:19:27,340
state a<font color="#CCCCCC"> - and</font><font color="#E5E5E5"> once the controller hands</font>

458
00:19:24,970 --> 00:19:29,860
it over to<font color="#E5E5E5"> the application agent the</font>

459
00:19:27,340 --> 00:19:32,919
state transition to a3 happens through

460
00:19:29,860 --> 00:19:34,959
the<font color="#E5E5E5"> application agent</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> lastly when</font>

461
00:19:32,920 --> 00:19:38,830
after the<font color="#E5E5E5"> controller sends a flow mode</font>

462
00:19:34,960 --> 00:19:41,200
message to the switch the<font color="#E5E5E5"> current stated</font>

463
00:19:38,830 --> 00:19:44,649
current state has<font color="#E5E5E5"> become the state a for</font>

464
00:19:41,200 --> 00:19:47,470
by the<font color="#E5E5E5"> channel agent so the point here</font>

465
00:19:44,650 --> 00:19:49,450
<font color="#CCCCCC">is that in</font><font color="#E5E5E5"> Delta</font><font color="#CCCCCC"> the channel agents</font>

466
00:19:47,470 --> 00:19:52,490
<font color="#CCCCCC">collaborates with the application agent</font>

467
00:19:49,450 --> 00:19:55,280
to identify the<font color="#E5E5E5"> current controller</font><font color="#CCCCCC"> state</font>

468
00:19:52,490 --> 00:19:57,260
and next<font color="#E5E5E5"> we are let's have a look at how</font>

469
00:19:55,280 --> 00:20:00,980
<font color="#CCCCCC">that how</font><font color="#E5E5E5"> Delta randomizes</font><font color="#CCCCCC"> the flow</font>

470
00:19:57,260 --> 00:20:03,470
sequences and the input values so one

471
00:20:00,980 --> 00:20:06,410
example esta<font color="#CCCCCC"> an operation that</font><font color="#E5E5E5"> involves</font>

472
00:20:03,470 --> 00:20:08,210
the symmetric flow sequences<font color="#CCCCCC"> Opa Opa</font>

473
00:20:06,410 --> 00:20:10,730
<font color="#E5E5E5">handshake process between the controller</font>

474
00:20:08,210 --> 00:20:12,440
and the switch<font color="#E5E5E5"> so according to</font><font color="#CCCCCC"> the open</font>

475
00:20:10,730 --> 00:20:15,170
flow specifications<font color="#E5E5E5"> this operation</font>

476
00:20:12,440 --> 00:20:17,480
should<font color="#E5E5E5"> experience total seven state</font>

477
00:20:15,170 --> 00:20:20,480
transition from state are to state<font color="#E5E5E5"> s 7</font>

478
00:20:17,480 --> 00:20:22,760
<font color="#E5E5E5">addition in this</font><font color="#CCCCCC"> figure</font><font color="#E5E5E5"> in an in the</font>

479
00:20:20,480 --> 00:20:24,559
case of the control message types<font color="#E5E5E5"> the</font>

480
00:20:22,760 --> 00:20:26,840
handshake process<font color="#E5E5E5"> takes from hello</font>

481
00:20:24,559 --> 00:20:29,178
<font color="#E5E5E5">message to the set configuration message</font>

482
00:20:26,840 --> 00:20:32,149
sequentially but what if we could

483
00:20:29,179 --> 00:20:33,800
manipulate the order of those events so

484
00:20:32,150 --> 00:20:37,070
in this example we<font color="#CCCCCC"> can intentionally</font>

485
00:20:33,800 --> 00:20:40,010
send get<font color="#E5E5E5"> config response message instead</font>

486
00:20:37,070 --> 00:20:42,439
<font color="#E5E5E5">of feature response message to the</font>

487
00:20:40,010 --> 00:20:45,590
controller<font color="#E5E5E5"> to see if what if anything</font>

488
00:20:42,440 --> 00:20:48,830
<font color="#E5E5E5">goes wrong and ultimately we should try</font>

489
00:20:45,590 --> 00:20:55,330
other combinations of those events<font color="#CCCCCC"> to</font>

490
00:20:48,830 --> 00:20:57,860
discover new vulnerabilities so in Delta

491
00:20:55,330 --> 00:21:00,110
<font color="#CCCCCC">did</font><font color="#E5E5E5"> to automatically carry out such</font>

492
00:20:57,860 --> 00:21:04,459
tests in Delta the channel agent<font color="#E5E5E5"> take</font>

493
00:21:00,110 --> 00:21:07,428
part and to first test the asymmetric

494
00:21:04,460 --> 00:21:09,770
flow sequences Delta can randomize the

495
00:21:07,429 --> 00:21:12,260
unidirectional<font color="#E5E5E5"> messages delivered to the</font>

496
00:21:09,770 --> 00:21:14,480
extent applications<font color="#E5E5E5"> so first for</font>

497
00:21:12,260 --> 00:21:17,270
<font color="#CCCCCC">instance when a controller captures a</font>

498
00:21:14,480 --> 00:21:19,480
packet message from the switch<font color="#CCCCCC"> the</font>

499
00:21:17,270 --> 00:21:22,010
controller propagates the message to the

500
00:21:19,480 --> 00:21:24,260
<font color="#CCCCCC">asturian applications that are</font>

501
00:21:22,010 --> 00:21:24,920
interested in<font color="#E5E5E5"> such type</font><font color="#CCCCCC"> of message</font><font color="#E5E5E5"> in a</font>

502
00:21:24,260 --> 00:21:28,390
specific order

503
00:21:24,920 --> 00:21:31,450
<font color="#CCCCCC">for instance</font><font color="#E5E5E5"> the order of reception is</font>

504
00:21:28,390 --> 00:21:34,070
from application<font color="#E5E5E5"> a to the application</font><font color="#CCCCCC"> D</font>

505
00:21:31,450 --> 00:21:36,679
but<font color="#E5E5E5"> we can manipulate the order</font>

506
00:21:34,070 --> 00:21:39,020
inversely so that the now the

507
00:21:36,679 --> 00:21:39,820
application D can receive the packet

508
00:21:39,020 --> 00:21:42,740
<font color="#E5E5E5">message first</font>

509
00:21:39,820 --> 00:21:47,059
so in Delta the application agent take

510
00:21:42,740 --> 00:21:50,660
part of such randomizing<font color="#E5E5E5"> a Smith</font>

511
00:21:47,059 --> 00:21:52,540
<font color="#E5E5E5">asymmetric flow sequences and</font><font color="#CCCCCC"> their</font>

512
00:21:50,660 --> 00:21:54,980
randomizing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> improve al use of the</font>

513
00:21:52,540 --> 00:21:58,010
<font color="#CCCCCC">Aztek control message is</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> simple</font>

514
00:21:54,980 --> 00:22:00,110
<font color="#E5E5E5">so first the</font><font color="#CCCCCC"> defaulting models in the</font>

515
00:21:58,010 --> 00:22:01,760
channel agent<font color="#E5E5E5"> can manipulate the</font>

516
00:22:00,110 --> 00:22:03,110
contents of<font color="#E5E5E5"> the ongoing</font><font color="#CCCCCC"> estin control</font>

517
00:22:01,760 --> 00:22:06,169
<font color="#E5E5E5">messages between the controller and the</font>

518
00:22:03,110 --> 00:22:08,928
switch for instance when<font color="#E5E5E5"> when</font>

519
00:22:06,169 --> 00:22:10,789
controllers and<font color="#CCCCCC"> slowmode message to the</font>

520
00:22:08,929 --> 00:22:13,489
switch in<font color="#E5E5E5"> order to install new falafel</font>

521
00:22:10,789 --> 00:22:16,309
<font color="#CCCCCC">the channel agent can modify the command</font>

522
00:22:13,489 --> 00:22:19,369
fields<font color="#CCCCCC"> to of the flow mode message to</font>

523
00:22:16,309 --> 00:22:21,080
the undefined value and then the channel

524
00:22:19,369 --> 00:22:23,869
<font color="#E5E5E5">agent should check the response message</font>

525
00:22:21,080 --> 00:22:26,809
<font color="#E5E5E5">from the switches as well and also the</font>

526
00:22:23,869 --> 00:22:28,730
<font color="#E5E5E5">application agent can randomize the</font>

527
00:22:26,809 --> 00:22:30,710
contents of<font color="#E5E5E5"> the ongoing s10 control</font>

528
00:22:28,730 --> 00:22:32,210
messages<font color="#E5E5E5"> among pests away the multiple</font>

529
00:22:30,710 --> 00:22:34,700
number of<font color="#CCCCCC"> s and applications in</font><font color="#E5E5E5"> the</font>

530
00:22:32,210 --> 00:22:37,570
target controller so<font color="#E5E5E5"> that the other</font>

531
00:22:34,700 --> 00:22:42,649
applications could<font color="#CCCCCC"> be in a chaotic state</font>

532
00:22:37,570 --> 00:22:45,408
so from those those rental magicians we

533
00:22:42,649 --> 00:22:48,428
have found 90 of the cases that<font color="#E5E5E5"> that</font>

534
00:22:45,409 --> 00:22:52,460
<font color="#CCCCCC">we'll be demonstrating</font><font color="#E5E5E5"> later slice so</font>

535
00:22:48,429 --> 00:22:55,809
Delta can can achieve the second<font color="#E5E5E5"> design</font>

536
00:22:52,460 --> 00:22:58,369
goal that<font color="#E5E5E5"> is finding new attacks and</font>

537
00:22:55,809 --> 00:22:59,928
implementation<font color="#E5E5E5"> Delta is mostly</font>

538
00:22:58,369 --> 00:23:02,779
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> in Java and</font><font color="#E5E5E5"> Python language</font>

539
00:22:59,929 --> 00:23:04,970
and about<font color="#CCCCCC"> the lines of codes of each</font>

540
00:23:02,779 --> 00:23:07,869
component<font color="#CCCCCC"> in Delta as you can see here</font>

541
00:23:04,970 --> 00:23:10,279
the agent manager<font color="#E5E5E5"> take the most part and</font>

542
00:23:07,869 --> 00:23:12,439
the channel agent is second one and

543
00:23:10,279 --> 00:23:14,749
lastly<font color="#E5E5E5"> the host</font><font color="#CCCCCC"> the rotation is quite</font>

544
00:23:12,440 --> 00:23:18,259
simple<font color="#E5E5E5"> and in the case of the</font>

545
00:23:14,749 --> 00:23:20,210
application agent as I mentioned before

546
00:23:18,259 --> 00:23:22,580
<font color="#E5E5E5">it can it should be differently</font>

547
00:23:20,210 --> 00:23:25,369
implemented against each controller so

548
00:23:22,580 --> 00:23:28,249
<font color="#CCCCCC">accept further</font><font color="#E5E5E5"> view agent that is</font><font color="#CCCCCC"> PI</font>

549
00:23:25,369 --> 00:23:31,668
<font color="#CCCCCC">some base each age</font><font color="#E5E5E5"> each application</font>

550
00:23:28,249 --> 00:23:35,779
agent has about<font color="#E5E5E5"> 800 lines of codes on</font>

551
00:23:31,669 --> 00:23:37,429
average and currently<font color="#CCCCCC"> Delta's support</font>

552
00:23:35,779 --> 00:23:40,129
for open source<font color="#CCCCCC"> s main controllers</font>

553
00:23:37,429 --> 00:23:42,169
<font color="#E5E5E5">owners</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> daylight floodlight and new</font>

554
00:23:40,129 --> 00:23:44,988
controller and as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see in the top</font>

555
00:23:42,169 --> 00:23:47,749
<font color="#E5E5E5">table the late latest version of each</font>

556
00:23:44,989 --> 00:23:51,739
controller can be<font color="#E5E5E5"> tested and Delta</font>

557
00:23:47,749 --> 00:23:54,590
support to open<font color="#CCCCCC"> flu versions 1.0 and 1.3</font>

558
00:23:51,739 --> 00:23:58,100
so any employee<font color="#E5E5E5"> enable switches that are</font>

559
00:23:54,590 --> 00:24:00,949
fluent in these<font color="#CCCCCC"> versions camp can</font><font color="#E5E5E5"> be</font>

560
00:23:58,100 --> 00:24:04,248
tested and as you can<font color="#CCCCCC"> see in the top</font>

561
00:24:00,950 --> 00:24:04,580
bottom table now<font color="#E5E5E5"> we have tested</font><font color="#CCCCCC"> peak</font>

562
00:24:04,249 --> 00:24:07,700
<font color="#CCCCCC">height</font>

563
00:24:04,580 --> 00:24:11,899
<font color="#CCCCCC">Arista HP hardware switches and open V</font>

564
00:24:07,700 --> 00:24:13,879
switch<font color="#E5E5E5"> so we can say that Delta</font><font color="#CCCCCC"> is into</font>

565
00:24:11,899 --> 00:24:19,658
a<font color="#E5E5E5"> pourable with diversity and components</font>

566
00:24:13,879 --> 00:24:19,658
which is the third design goal and

567
00:24:19,730 --> 00:24:24,290
for the users convenience<font color="#E5E5E5"> Delta provides</font>

568
00:24:21,920 --> 00:24:26,690
the web-based user interface and it

569
00:24:24,290 --> 00:24:28,970
consists<font color="#E5E5E5"> of three main parts like test</font>

570
00:24:26,690 --> 00:24:32,120
queue and configuration<font color="#CCCCCC"> love pain and</font>

571
00:24:28,970 --> 00:24:34,130
the test case<font color="#CCCCCC"> inventory in the lab test</font>

572
00:24:32,120 --> 00:24:36,500
queue each test case issuing with

573
00:24:34,130 --> 00:24:39,320
different colors according<font color="#E5E5E5"> to its status</font>

574
00:24:36,500 --> 00:24:41,870
and<font color="#E5E5E5"> Richard so first when the it's when</font>

575
00:24:39,320 --> 00:24:45,230
<font color="#E5E5E5">the test case is comes into the test</font>

576
00:24:41,870 --> 00:24:47,780
queue<font color="#E5E5E5"> is showing the white color which</font>

577
00:24:45,230 --> 00:24:50,210
<font color="#E5E5E5">means that its status cute and reader is</font>

578
00:24:47,780 --> 00:24:52,399
unknown<font color="#E5E5E5"> and the test case</font><font color="#CCCCCC"> issue in the</font>

579
00:24:50,210 --> 00:24:55,490
yellow color during<font color="#E5E5E5"> the running status</font>

580
00:24:52,400 --> 00:24:58,760
and after the test case is done<font color="#CCCCCC"> its</font>

581
00:24:55,490 --> 00:25:01,850
status has become the completed and it's

582
00:24:58,760 --> 00:25:05,510
the color is change it to<font color="#E5E5E5"> either green</font>

583
00:25:01,850 --> 00:25:08,000
or red depending on<font color="#E5E5E5"> its research and the</font>

584
00:25:05,510 --> 00:25:09,950
configuration<font color="#CCCCCC"> ll pane</font><font color="#E5E5E5"> as you can see on</font>

585
00:25:08,000 --> 00:25:12,170
the Left we<font color="#CCCCCC"> can dynamically set up the</font>

586
00:25:09,950 --> 00:25:14,480
<font color="#E5E5E5">targeting controller target</font><font color="#CCCCCC"> OpenFlow</font>

587
00:25:12,170 --> 00:25:18,230
version and IP addresses<font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> and</font>

588
00:25:14,480 --> 00:25:20,270
on the right<font color="#CCCCCC"> Delta shows the main log</font>

589
00:25:18,230 --> 00:25:23,960
information<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> agent manager</font><font color="#E5E5E5"> at</font>

590
00:25:20,270 --> 00:25:26,720
runtime<font color="#E5E5E5"> and in the test case inventory</font>

591
00:25:23,960 --> 00:25:28,730
<font color="#CCCCCC">it hurts</font><font color="#E5E5E5"> all the available test cases so</font>

592
00:25:26,720 --> 00:25:31,670
the user can push each test case into

593
00:25:28,730 --> 00:25:33,830
the<font color="#E5E5E5"> lab test tube and here we have three</font>

594
00:25:31,670 --> 00:25:37,430
<font color="#E5E5E5">three different types of the test cases</font>

595
00:25:33,830 --> 00:25:39,770
so<font color="#CCCCCC"> the</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> one and</font><font color="#CCCCCC"> two are kinds of</font>

596
00:25:37,430 --> 00:25:43,160
open<font color="#E5E5E5"> flow conformance test cases so</font><font color="#CCCCCC"> that</font>

597
00:25:39,770 --> 00:25:46,639
<font color="#E5E5E5">you can you can test each control</font>

598
00:25:43,160 --> 00:25:48,140
message type against<font color="#E5E5E5"> the controller or</font>

599
00:25:46,640 --> 00:25:50,690
the<font color="#CCCCCC"> switch according to their direction</font>

600
00:25:48,140 --> 00:25:52,670
<font color="#E5E5E5">and lastly we have</font><font color="#CCCCCC"> the in advance the</font>

601
00:25:50,690 --> 00:25:55,730
security<font color="#CCCCCC"> test set which is related to</font>

602
00:25:52,670 --> 00:25:58,640
the Sdn controllers architecture away

603
00:25:55,730 --> 00:26:01,250
points exploiting<font color="#CCCCCC"> aslan applications so</font>

604
00:25:58,640 --> 00:26:03,400
the number of<font color="#E5E5E5"> those cases the</font><font color="#CCCCCC"> tulta</font>

605
00:26:01,250 --> 00:26:05,990
<font color="#E5E5E5">currently provides is about</font><font color="#CCCCCC"> 4e</font>

606
00:26:03,400 --> 00:26:07,820
<font color="#CCCCCC">so dot</font><font color="#E5E5E5"> achieved the last design goal</font>

607
00:26:05,990 --> 00:26:12,200
that Delta should cover many<font color="#CCCCCC"> attic</font>

608
00:26:07,820 --> 00:26:14,629
<font color="#E5E5E5">scenarios so until now we have looked at</font>

609
00:26:12,200 --> 00:26:18,380
what<font color="#CCCCCC"> Delta is and it's for design goals</font>

610
00:26:14,630 --> 00:26:20,900
and its<font color="#CCCCCC"> implementation</font><font color="#E5E5E5"> and from now on</font>

611
00:26:18,380 --> 00:26:23,530
<font color="#CCCCCC">Gino will will show the Alltech</font>

612
00:26:20,900 --> 00:26:23,530
demonstrations

613
00:26:26,840 --> 00:26:31,350
so we do like<font color="#CCCCCC"> to demonstrate real</font>

614
00:26:29,280 --> 00:26:34,320
<font color="#CCCCCC">texture we found and share with you some</font>

615
00:26:31,350 --> 00:26:36,240
<font color="#CCCCCC">interest</font><font color="#E5E5E5"> in the earth now first we have</font>

616
00:26:34,320 --> 00:26:38,100
a look at a<font color="#CCCCCC"> testbed</font><font color="#E5E5E5"> briefly and we</font>

617
00:26:36,240 --> 00:26:40,800
present<font color="#CCCCCC"> the wall no no tag and turn your</font>

618
00:26:38,100 --> 00:26:42,419
text<font color="#E5E5E5"> for each other case with this</font>

619
00:26:40,800 --> 00:26:44,940
<font color="#E5E5E5">could've detail the text scenario and</font>

620
00:26:42,420 --> 00:26:49,050
show a demo video<font color="#E5E5E5"> and finally we have a</font>

621
00:26:44,940 --> 00:26:50,640
discussion for the demonstration we<font color="#E5E5E5"> set</font>

622
00:26:49,050 --> 00:26:52,950
<font color="#E5E5E5">up simple test topology with two</font>

623
00:26:50,640 --> 00:26:54,810
stitches<font color="#CCCCCC"> and two hosts and all the</font>

624
00:26:52,950 --> 00:26:57,960
switches support<font color="#CCCCCC"> to</font><font color="#E5E5E5"> controller buttons</font>

625
00:26:54,810 --> 00:26:59,610
open<font color="#E5E5E5"> pro 1.0 and 1.3 and each one</font><font color="#CCCCCC"> is</font>

626
00:26:57,960 --> 00:27:03,570
physically<font color="#CCCCCC"> connected to on</font><font color="#E5E5E5"> a steam</font>

627
00:26:59,610 --> 00:27:05,729
<font color="#E5E5E5">controller and in the case of the Sdn</font>

628
00:27:03,570 --> 00:27:08,040
controllers we tested almost<font color="#CCCCCC"> often the</font>

629
00:27:05,730 --> 00:27:10,170
<font color="#CCCCCC">light rotor controllers and for the</font>

630
00:27:08,040 --> 00:27:12,120
control switches<font color="#E5E5E5"> we tested</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> pika</font><font color="#CCCCCC"> 8</font>

631
00:27:10,170 --> 00:27:14,100
which is<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hardware cities and</font>

632
00:27:12,120 --> 00:27:17,669
open<font color="#E5E5E5"> voice which which is learning on</font>

633
00:27:14,100 --> 00:27:19,620
the<font color="#E5E5E5"> virtual machine and the</font><font color="#CCCCCC"> edge to</font>

634
00:27:17,670 --> 00:27:23,150
measure and each agent of<font color="#CCCCCC"> Delta are</font>

635
00:27:19,620 --> 00:27:25,800
learning<font color="#CCCCCC"> on which to serve our machine</font>

636
00:27:23,150 --> 00:27:27,690
so the first known attack the per

637
00:27:25,800 --> 00:27:30,210
container for<font color="#CCCCCC"> geotag for people with</font>

638
00:27:27,690 --> 00:27:32,070
demonstrating we do like<font color="#E5E5E5"> to want to know</font>

639
00:27:30,210 --> 00:27:35,520
<font color="#E5E5E5">about an</font><font color="#CCCCCC"> event a subscription in Sdn</font>

640
00:27:32,070 --> 00:27:37,919
controller in general as<font color="#CCCCCC"> 10 controls</font>

641
00:27:35,520 --> 00:27:40,650
have the event subscription list<font color="#E5E5E5"> which</font>

642
00:27:37,920 --> 00:27:42,660
<font color="#CCCCCC">SD a message type</font><font color="#E5E5E5"> so if we if honestly</font>

643
00:27:40,650 --> 00:27:44,640
application want to receive the message

644
00:27:42,660 --> 00:27:46,500
the<font color="#CCCCCC"> application</font><font color="#E5E5E5"> can register in the</font>

645
00:27:44,640 --> 00:27:50,280
<font color="#CCCCCC">subscription list which is managed in</font>

646
00:27:46,500 --> 00:27:52,310
<font color="#E5E5E5">the internal database and the</font><font color="#CCCCCC"> internet</font>

647
00:27:50,280 --> 00:27:54,780
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> in the end</font>

648
00:27:52,310 --> 00:27:57,090
subscription is have their own priority

649
00:27:54,780 --> 00:28:00,960
so the<font color="#E5E5E5"> higher the prairie the first</font>

650
00:27:57,090 --> 00:28:03,419
study session<font color="#E5E5E5"> of</font><font color="#CCCCCC"> our message and in this</font>

651
00:28:00,960 --> 00:28:05,700
<font color="#CCCCCC">example the load balance app is related</font>

652
00:28:03,420 --> 00:28:07,470
or top<font color="#E5E5E5"> priority so it can receive</font><font color="#CCCCCC"> a</font>

653
00:28:05,700 --> 00:28:11,910
<font color="#E5E5E5">packet in message from the controller</font>

654
00:28:07,470 --> 00:28:14,820
first and after<font color="#E5E5E5"> processing the message</font>

655
00:28:11,910 --> 00:28:17,340
<font color="#E5E5E5">to la tavola that can handle handed over</font>

656
00:28:14,820 --> 00:28:20,790
to the<font color="#CCCCCC"> next application</font><font color="#E5E5E5"> as you</font><font color="#CCCCCC"> can see</font>

657
00:28:17,340 --> 00:28:24,840
here but what if we can manipulate<font color="#E5E5E5"> this</font>

658
00:28:20,790 --> 00:28:26,430
<font color="#E5E5E5">subscription list so here we have one</font>

659
00:28:24,840 --> 00:28:29,520
attack strategy that<font color="#E5E5E5"> smashes the</font>

660
00:28:26,430 --> 00:28:31,560
subscription list assuming<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a</font>

661
00:28:29,520 --> 00:28:33,690
<font color="#CCCCCC">malicious application is installed on</font>

662
00:28:31,560 --> 00:28:37,379
<font color="#E5E5E5">Sdn controller the application can</font>

663
00:28:33,690 --> 00:28:39,000
conduct<font color="#CCCCCC"> an attack as follows</font><font color="#E5E5E5"> first it</font>

664
00:28:37,380 --> 00:28:39,570
accesses the internet database and

665
00:28:39,000 --> 00:28:41,850
motive

666
00:28:39,570 --> 00:28:43,950
subscription is so that the emergency

667
00:28:41,850 --> 00:28:47,250
application<font color="#E5E5E5"> can have</font><font color="#CCCCCC"> a top</font><font color="#E5E5E5"> priority of</font>

668
00:28:43,950 --> 00:28:49,110
receiving the messages<font color="#E5E5E5"> so this malicious</font>

669
00:28:47,250 --> 00:28:50,910
application can<font color="#E5E5E5"> receive without</font><font color="#CCCCCC"> packing</font>

670
00:28:49,110 --> 00:28:53,669
messages from the controller first<font color="#E5E5E5"> and</font>

671
00:28:50,910 --> 00:28:55,830
now it modifies the data impacting

672
00:28:53,670 --> 00:28:57,600
message to map on the<font color="#CCCCCC"> values</font><font color="#E5E5E5"> and the</font>

673
00:28:55,830 --> 00:29:01,439
main player packing message is delivered

674
00:28:57,600 --> 00:29:03,659
to<font color="#E5E5E5"> the next application so when the next</font>

675
00:29:01,440 --> 00:29:05,640
<font color="#E5E5E5">one refers the long value it can</font><font color="#CCCCCC"> mediate</font>

676
00:29:03,660 --> 00:29:09,540
<font color="#CCCCCC">an error</font><font color="#E5E5E5"> in the internal of the</font>

677
00:29:05,640 --> 00:29:11,580
application so<font color="#CCCCCC"> now let's see how the</font>

678
00:29:09,540 --> 00:29:12,740
data can reproduce this hotel in a

679
00:29:11,580 --> 00:29:15,810
systematic way

680
00:29:12,740 --> 00:29:17,400
first<font color="#E5E5E5"> the ADA</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> measure</font><font color="#CCCCCC"> instruct the</font>

681
00:29:15,810 --> 00:29:20,550
App Engine<font color="#CCCCCC"> to</font><font color="#E5E5E5"> manipulate the</font>

682
00:29:17,400 --> 00:29:22,110
subscription ease then the evasion

683
00:29:20,550 --> 00:29:24,720
learning on the steam controller

684
00:29:22,110 --> 00:29:26,729
modified software needs so that<font color="#E5E5E5"> the a</font>

685
00:29:24,720 --> 00:29:30,420
patient<font color="#CCCCCC"> can't</font><font color="#E5E5E5"> have a top play of the</font>

686
00:29:26,730 --> 00:29:32,490
listening<font color="#E5E5E5"> the</font><font color="#CCCCCC"> packing messages after</font>

687
00:29:30,420 --> 00:29:34,590
<font color="#CCCCCC">this</font><font color="#E5E5E5"> the edge of the major orders the</font>

688
00:29:32,490 --> 00:29:36,570
host agent to the<font color="#E5E5E5"> rock metal package</font>

689
00:29:34,590 --> 00:29:38,429
which intentionally makes the<font color="#CCCCCC"> OpenFlow</font>

690
00:29:36,570 --> 00:29:41,909
<font color="#E5E5E5">switch the end</font><font color="#CCCCCC"> or Pakenham message to</font>

691
00:29:38,430 --> 00:29:43,860
the controller so<font color="#CCCCCC"> the a page one to</font>

692
00:29:41,910 --> 00:29:46,610
receive the packet<font color="#CCCCCC"> in message</font><font color="#E5E5E5"> edgy it is</font>

693
00:29:43,860 --> 00:29:49,080
the first one in the<font color="#E5E5E5"> subscription list</font>

694
00:29:46,610 --> 00:29:51,000
now the a page on<font color="#CCCCCC"> to remove was the</font>

695
00:29:49,080 --> 00:29:53,419
period<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> packet message so which</font>

696
00:29:51,000 --> 00:29:56,310
means that<font color="#CCCCCC"> apparel become Ginobili and</font>

697
00:29:53,420 --> 00:29:58,470
the modify the<font color="#E5E5E5"> pack the message is</font>

698
00:29:56,310 --> 00:30:02,280
delivered to the next<font color="#E5E5E5"> application which</font>

699
00:29:58,470 --> 00:30:03,840
is<font color="#CCCCCC"> topology manager in this example so</font>

700
00:30:02,280 --> 00:30:05,940
when the topology<font color="#CCCCCC"> man shall try</font><font color="#E5E5E5"> to</font>

701
00:30:03,840 --> 00:30:07,470
access the empty parrot<font color="#CCCCCC"> it can trigger</font>

702
00:30:05,940 --> 00:30:10,130
<font color="#E5E5E5">no point in such an error in the</font>

703
00:30:07,470 --> 00:30:12,600
controller<font color="#E5E5E5"> and this violation makes the</font>

704
00:30:10,130 --> 00:30:15,060
controller is going<font color="#E5E5E5"> to switch all limbs</font>

705
00:30:12,600 --> 00:30:17,669
and the<font color="#E5E5E5"> which is one of our</font><font color="#CCCCCC"> criteria</font>

706
00:30:15,060 --> 00:30:21,450
<font color="#E5E5E5">that evaluates whether our attack the</font>

707
00:30:17,670 --> 00:30:27,990
<font color="#E5E5E5">success or not so now</font><font color="#CCCCCC"> let's take a look</font>

708
00:30:21,450 --> 00:30:30,360
<font color="#E5E5E5">at a demo video in this video on the</font>

709
00:30:27,990 --> 00:30:32,130
Left we have<font color="#E5E5E5"> Delta</font><font color="#CCCCCC"> web UI</font><font color="#E5E5E5"> and on the</font>

710
00:30:30,360 --> 00:30:34,379
table<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have flowed</font><font color="#E5E5E5"> right controller</font>

711
00:30:32,130 --> 00:30:35,760
and the bottom line<font color="#E5E5E5"> and the Wireshark is</font>

712
00:30:34,380 --> 00:30:37,290
learning<font color="#E5E5E5"> which is your</font><font color="#CCCCCC"> controller</font>

713
00:30:35,760 --> 00:30:40,410
package between the controller<font color="#E5E5E5"> and</font>

714
00:30:37,290 --> 00:30:42,300
<font color="#E5E5E5">switches and also as you can</font><font color="#CCCCCC"> see on the</font>

715
00:30:40,410 --> 00:30:44,250
left you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> configure various as the</font>

716
00:30:42,300 --> 00:30:48,389
<font color="#E5E5E5">related parameters such as targeted</font><font color="#CCCCCC"> same</font>

717
00:30:44,250 --> 00:30:50,430
controller<font color="#E5E5E5"> and open flow version so now</font>

718
00:30:48,390 --> 00:30:53,990
in the test case inventory we can<font color="#E5E5E5"> pick</font>

719
00:30:50,430 --> 00:30:53,990
<font color="#CCCCCC">top</font><font color="#E5E5E5"> prepare data classes other way</font>

720
00:30:55,059 --> 00:31:02,119
and this litter case is targeting

721
00:30:59,570 --> 00:31:05,928
<font color="#E5E5E5">fluoride version 1.1 and when leaned on</font>

722
00:31:02,119 --> 00:31:07,820
<font color="#E5E5E5">the other case the ADA</font><font color="#CCCCCC"> 2 major</font>

723
00:31:05,929 --> 00:31:09,859
automatically<font color="#E5E5E5"> executes the targeted</font>

724
00:31:07,820 --> 00:31:12,830
steam controller and each agent of Delta

725
00:31:09,859 --> 00:31:15,199
and the log<font color="#CCCCCC"> pane</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see the overall</font>

726
00:31:12,830 --> 00:31:21,619
<font color="#CCCCCC">situation in the agent manager</font><font color="#E5E5E5"> and other</font>

727
00:31:15,200 --> 00:31:23,600
<font color="#E5E5E5">agent and please report to the minimum</font>

728
00:31:21,619 --> 00:31:32,570
located on the top left to understand

729
00:31:23,600 --> 00:31:34,129
the overall<font color="#E5E5E5"> clear of the attack and we</font>

730
00:31:32,570 --> 00:31:35,600
can see<font color="#E5E5E5"> that there are</font><font color="#CCCCCC"> two connected</font>

731
00:31:34,129 --> 00:31:37,668
switches on the<font color="#E5E5E5"> floater</font><font color="#CCCCCC"> eye</font><font color="#E5E5E5"> controller</font>

732
00:31:35,600 --> 00:31:39,649
and<font color="#CCCCCC"> now the area</font><font color="#E5E5E5"> turn detects the</font>

733
00:31:37,669 --> 00:31:42,710
internal database<font color="#CCCCCC"> of the flow try to</font>

734
00:31:39,649 --> 00:31:44,899
manipulate<font color="#CCCCCC"> a subscription list so here</font>

735
00:31:42,710 --> 00:31:52,789
people<font color="#E5E5E5"> detect the aperture towards the</font>

736
00:31:44,899 --> 00:31:54,768
last<font color="#E5E5E5"> one in the</font><font color="#CCCCCC"> subscription list</font><font color="#E5E5E5"> but up</font>

737
00:31:52,789 --> 00:32:04,070
to the attack<font color="#CCCCCC"> da beta 2 became</font><font color="#E5E5E5"> the first</font>

738
00:31:54,769 --> 00:32:06,169
one to receive the<font color="#CCCCCC"> packet messages so</font>

739
00:32:04,070 --> 00:32:08,418
here the period of the packet message is

740
00:32:06,169 --> 00:32:11,529
removed by the<font color="#E5E5E5"> evasion so the next</font>

741
00:32:08,419 --> 00:32:13,970
application<font color="#CCCCCC"> dipper's</font><font color="#E5E5E5"> the empty peril</font><font color="#CCCCCC"> and</font>

742
00:32:11,529 --> 00:32:16,580
as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see on the photo</font><font color="#E5E5E5"> right</font>

743
00:32:13,970 --> 00:32:18,980
controller the switch a<font color="#CCCCCC"> it is connected</font>

744
00:32:16,580 --> 00:32:23,840
<font color="#E5E5E5">because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the map no point in such an</font>

745
00:32:18,980 --> 00:32:25,309
error and we can also<font color="#E5E5E5"> pick the collision</font>

746
00:32:23,840 --> 00:32:28,789
about this question<font color="#CCCCCC"> by looking at the</font>

747
00:32:25,309 --> 00:32:31,340
log<font color="#CCCCCC"> messages and here we can</font><font color="#E5E5E5"> figure out</font>

748
00:32:28,789 --> 00:32:37,450
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> there was an</font><font color="#E5E5E5"> 0.2</font><font color="#CCCCCC"> in such an</font>

749
00:32:31,340 --> 00:32:40,220
error in the fraud<font color="#CCCCCC"> rate controller and</font>

750
00:32:37,450 --> 00:32:42,169
finally since the host<font color="#E5E5E5"> agent fails to</font>

751
00:32:40,220 --> 00:32:44,389
communicate<font color="#CCCCCC"> with the other hosts</font><font color="#E5E5E5"> the</font>

752
00:32:42,169 --> 00:32:47,600
<font color="#CCCCCC">editor major decides that</font><font color="#E5E5E5"> is ortega the</font>

753
00:32:44,389 --> 00:32:51,158
figurative logic controller so which

754
00:32:47,600 --> 00:32:54,019
means that the attack is successful<font color="#CCCCCC"> so</font>

755
00:32:51,159 --> 00:32:59,989
<font color="#CCCCCC">going</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to the Delta</font><font color="#E5E5E5"> dashboard</font>

756
00:32:54,019 --> 00:33:02,210
the other case is<font color="#E5E5E5"> marked as a fail so</font>

757
00:32:59,989 --> 00:33:05,029
then why is it<font color="#E5E5E5"> possible to flood right</font>

758
00:33:02,210 --> 00:33:06,440
<font color="#E5E5E5">the reason</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> a stain applications</font>

759
00:33:05,029 --> 00:33:08,629
are<font color="#E5E5E5"> granted the very top</font>

760
00:33:06,440 --> 00:33:10,370
authority<font color="#E5E5E5"> so which means that</font><font color="#CCCCCC"> token</font>

761
00:33:08,629 --> 00:33:13,250
testing applications are able<font color="#CCCCCC"> to call</font>

762
00:33:10,370 --> 00:33:14,840
<font color="#CCCCCC">court services and api's they provide</font>

763
00:33:13,250 --> 00:33:18,250
from<font color="#CCCCCC"> vest and controller without any</font>

764
00:33:14,840 --> 00:33:20,570
constraint<font color="#E5E5E5"> so to defend</font><font color="#CCCCCC"> it so tech</font>

765
00:33:18,250 --> 00:33:22,460
<font color="#E5E5E5">research instead a</font><font color="#CCCCCC"> steam controller</font>

766
00:33:20,570 --> 00:33:24,350
<font color="#CCCCCC">should</font><font color="#E5E5E5"> adopt a</font><font color="#CCCCCC"> policy excess excess</font>

767
00:33:22,460 --> 00:33:26,899
<font color="#E5E5E5">control mechanism like</font><font color="#CCCCCC"> the under</font><font color="#E5E5E5"> the</font>

768
00:33:24,350 --> 00:33:28,789
<font color="#CCCCCC">function system</font><font color="#E5E5E5"> so the security mode</font><font color="#CCCCCC"> or</font>

769
00:33:26,899 --> 00:33:33,439
<font color="#CCCCCC">nose is a good example</font><font color="#E5E5E5"> of the function</font>

770
00:33:28,789 --> 00:33:35,029
system for the SDN controller<font color="#E5E5E5"> and the</font>

771
00:33:33,440 --> 00:33:37,100
second of<font color="#E5E5E5"> the case targets</font><font color="#CCCCCC"> option</font>

772
00:33:35,029 --> 00:33:40,100
daylight<font color="#E5E5E5"> which is typically called Oda</font>

773
00:33:37,100 --> 00:33:41,480
<font color="#E5E5E5">and in the case of the audio in manages</font>

774
00:33:40,100 --> 00:33:43,850
two types or databases

775
00:33:41,480 --> 00:33:46,220
the first one is configuration<font color="#E5E5E5"> database</font>

776
00:33:43,850 --> 00:33:48,620
<font color="#E5E5E5">and it can be used for the installation</font>

777
00:33:46,220 --> 00:33:50,120
of<font color="#CCCCCC"> practive laurels</font><font color="#E5E5E5"> they need to be</font>

778
00:33:48,620 --> 00:33:53,330
configured<font color="#E5E5E5"> the people the control</font>

779
00:33:50,120 --> 00:33:54,949
channel<font color="#CCCCCC"> is established and the install</font>

780
00:33:53,330 --> 00:33:57,289
the rules on the conflation DB are

781
00:33:54,950 --> 00:34:00,279
permanently preserved even<font color="#CCCCCC"> if</font><font color="#E5E5E5"> it's a</font>

782
00:33:57,289 --> 00:34:03,169
controller or<font color="#E5E5E5"> the channel is closed</font><font color="#CCCCCC"> on</font>

783
00:34:00,279 --> 00:34:04,610
<font color="#CCCCCC">the other hand the installed laurels on</font>

784
00:34:03,169 --> 00:34:07,100
the<font color="#CCCCCC"> operators libya or</font><font color="#E5E5E5"> a molecular</font>

785
00:34:04,610 --> 00:34:09,310
<font color="#E5E5E5">mobile episode the control channel</font><font color="#CCCCCC"> is</font>

786
00:34:07,100 --> 00:34:11,929
<font color="#CCCCCC">shut down</font>

787
00:34:09,310 --> 00:34:14,750
the important<font color="#E5E5E5"> point here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> dead</font>

788
00:34:11,929 --> 00:34:17,929
<font color="#CCCCCC">ODL always refers to</font><font color="#E5E5E5"> the conflation DB</font>

789
00:34:14,750 --> 00:34:19,969
when Henry check window switch so based

790
00:34:17,929 --> 00:34:23,839
on this<font color="#E5E5E5"> property we came via no attack</font>

791
00:34:19,969 --> 00:34:26,270
strategy<font color="#E5E5E5"> as follows first</font><font color="#CCCCCC"> emerges</font>

792
00:34:23,839 --> 00:34:28,730
<font color="#E5E5E5">application inject some</font><font color="#CCCCCC"> errant floral to</font>

793
00:34:26,270 --> 00:34:31,989
the<font color="#E5E5E5"> conflation DB and the</font><font color="#CCCCCC"> DA plural had</font>

794
00:34:28,730 --> 00:34:35,599
some long values<font color="#CCCCCC"> taken cogent error and</font>

795
00:34:31,989 --> 00:34:40,189
now on<font color="#E5E5E5"> attacker used on MIT</font><font color="#CCCCCC"> M proxy to</font>

796
00:34:35,599 --> 00:34:42,379
cut<font color="#E5E5E5"> a control channel temporarily so the</font>

797
00:34:40,190 --> 00:34:44,329
one<font color="#E5E5E5"> of open process which will try to</font>

798
00:34:42,379 --> 00:34:48,500
reconnect the controller by sending a

799
00:34:44,329 --> 00:34:51,050
handshake message and the controller

800
00:34:48,500 --> 00:34:53,599
will access to the conflation DB to get

801
00:34:51,050 --> 00:34:55,849
the predefined<font color="#CCCCCC"> rules</font><font color="#E5E5E5"> but here the</font>

802
00:34:53,599 --> 00:34:57,950
controller<font color="#CCCCCC"> with the Macondo</font><font color="#E5E5E5"> floral which</font>

803
00:34:55,849 --> 00:34:59,960
<font color="#CCCCCC">is installed in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> previous step so</font>

804
00:34:57,950 --> 00:35:05,629
<font color="#CCCCCC">this can cause an</font><font color="#E5E5E5"> error in the internal</font>

805
00:34:59,960 --> 00:35:09,109
of<font color="#E5E5E5"> the controller so now again let's see</font>

806
00:35:05,630 --> 00:35:11,390
how<font color="#E5E5E5"> this I can find out</font><font color="#CCCCCC"> this okay first</font>

807
00:35:09,109 --> 00:35:13,549
the editing manager orders the<font color="#CCCCCC"> Abidjan</font>

808
00:35:11,390 --> 00:35:17,000
to push it<font color="#E5E5E5"> off</font><font color="#CCCCCC"> maple floor route the</font>

809
00:35:13,550 --> 00:35:19,040
conflation<font color="#E5E5E5"> DV and the app agent makes</font>

810
00:35:17,000 --> 00:35:20,120
the floral<font color="#E5E5E5"> including a group action</font>

811
00:35:19,040 --> 00:35:22,570
<font color="#E5E5E5">field which is</font>

812
00:35:20,120 --> 00:35:25,040
not supported<font color="#CCCCCC"> filled in open flow 1.0</font>

813
00:35:22,570 --> 00:35:29,360
<font color="#E5E5E5">here we assume that the</font><font color="#CCCCCC"> switches are</font>

814
00:35:25,040 --> 00:35:32,000
using open<font color="#E5E5E5"> flow 1.0 version after</font><font color="#CCCCCC"> that</font>

815
00:35:29,360 --> 00:35:33,680
<font color="#E5E5E5">the edge of the major commented that the</font>

816
00:35:32,000 --> 00:35:37,760
channel<font color="#E5E5E5"> agent</font><font color="#CCCCCC"> interrupts the control</font>

817
00:35:33,680 --> 00:35:40,250
channel<font color="#CCCCCC"> in a few seconds</font><font color="#E5E5E5"> so in this</font>

818
00:35:37,760 --> 00:35:42,470
example the switch a we tries to connect

819
00:35:40,250 --> 00:35:45,020
the controller by sending hello messages

820
00:35:42,470 --> 00:35:46,700
but the<font color="#CCCCCC"> astern controller gets on</font>

821
00:35:45,020 --> 00:35:49,540
<font color="#E5E5E5">appointed session when</font><font color="#CCCCCC"> leading</font><font color="#E5E5E5"> the</font>

822
00:35:46,700 --> 00:35:52,669
abnormal value in the computation<font color="#CCCCCC"> dB</font>

823
00:35:49,540 --> 00:35:55,430
so the<font color="#CCCCCC"> hang</font><font color="#E5E5E5"> track is continuously failed</font>

824
00:35:52,670 --> 00:35:59,720
because the abnormal value is constantly

825
00:35:55,430 --> 00:36:06,470
<font color="#CCCCCC">remained in the</font><font color="#E5E5E5"> conflation</font><font color="#CCCCCC"> DB so we have</font>

826
00:35:59,720 --> 00:36:07,790
on another<font color="#CCCCCC"> demonstration</font><font color="#E5E5E5"> again and in</font>

827
00:36:06,470 --> 00:36:09,410
this<font color="#CCCCCC"> demonstration we have the</font>

828
00:36:07,790 --> 00:36:12,740
<font color="#CCCCCC">configuration database on the bottom</font>

829
00:36:09,410 --> 00:36:15,170
line and this<font color="#E5E5E5"> Hotei</font><font color="#CCCCCC"> get effective</font><font color="#E5E5E5"> to</font>

830
00:36:12,740 --> 00:36:18,290
open a lat oxygen version and relearn

831
00:36:15,170 --> 00:36:20,390
the attack on<font color="#E5E5E5"> BM environment and the</font>

832
00:36:18,290 --> 00:36:27,259
open daylight GI will appear at the

833
00:36:20,390 --> 00:36:29,930
<font color="#CCCCCC">bottom</font><font color="#E5E5E5"> left so at the start of the</font>

834
00:36:27,260 --> 00:36:37,760
learning order is<font color="#CCCCCC"> a comparison TBH</font>

835
00:36:29,930 --> 00:36:39,140
<font color="#E5E5E5">initialized and before the attack you</font>

836
00:36:37,760 --> 00:36:42,430
<font color="#E5E5E5">can see that there are two connected</font>

837
00:36:39,140 --> 00:36:42,430
switches on<font color="#CCCCCC"> opening line</font>

838
00:36:47,790 --> 00:36:52,590
and now the app agent<font color="#E5E5E5"> instils the map on</font>

839
00:36:50,340 --> 00:36:54,660
<font color="#E5E5E5">the floral to the conflation TV and the</font>

840
00:36:52,590 --> 00:36:57,200
DA<font color="#E5E5E5"> floral has a lower value in the group</font>

841
00:36:54,660 --> 00:36:57,200
action field

842
00:36:59,690 --> 00:37:04,530
so here the channel<font color="#E5E5E5"> agent breaks to a</font>

843
00:37:02,220 --> 00:37:11,459
<font color="#E5E5E5">computer station for dinner moment by</font>

844
00:37:04,530 --> 00:37:13,020
sending<font color="#CCCCCC"> OTG precept</font><font color="#E5E5E5"> a key so after the</font>

845
00:37:11,460 --> 00:37:14,940
attack you can<font color="#CCCCCC"> see that the switch</font><font color="#E5E5E5"> a</font>

846
00:37:13,020 --> 00:37:17,520
disappeared from the opened a lab<font color="#CCCCCC"> mui</font>

847
00:37:14,940 --> 00:37:19,710
<font color="#E5E5E5">and</font><font color="#CCCCCC"> edges showing</font><font color="#E5E5E5"> the Wireshark</font><font color="#CCCCCC"> there</font>

848
00:37:17,520 --> 00:37:21,750
<font color="#CCCCCC">are</font><font color="#E5E5E5"> a bunch of a handshake packet</font>

849
00:37:19,710 --> 00:37:31,380
because<font color="#E5E5E5"> the handshake is continuously</font>

850
00:37:21,750 --> 00:37:34,950
fed so now what is the<font color="#E5E5E5"> problem of audio</font>

851
00:37:31,380 --> 00:37:36,840
<font color="#CCCCCC">the first</font><font color="#E5E5E5"> reason is that OD l is not</font>

852
00:37:34,950 --> 00:37:38,220
able to<font color="#E5E5E5"> handle such an accession when in</font>

853
00:37:36,840 --> 00:37:40,230
handshake video siege

854
00:37:38,220 --> 00:37:42,509
so which<font color="#E5E5E5"> image that even though all the</font>

855
00:37:40,230 --> 00:37:44,280
affair<font color="#E5E5E5"> the</font><font color="#CCCCCC"> many times it just</font><font color="#E5E5E5"> repeated</font>

856
00:37:42,510 --> 00:37:47,700
the same<font color="#E5E5E5"> task without</font><font color="#CCCCCC"> resolving</font><font color="#E5E5E5"> with the</font>

857
00:37:44,280 --> 00:37:49,680
problem and another problem<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

858
00:37:47,700 --> 00:37:52,140
there is an essence of<font color="#CCCCCC"> mapping floral</font>

859
00:37:49,680 --> 00:37:55,589
management so immense that almost

860
00:37:52,140 --> 00:37:57,859
doesn't<font color="#E5E5E5"> vary the input floral so</font><font color="#CCCCCC"> two</font>

861
00:37:55,590 --> 00:38:00,030
different<font color="#E5E5E5"> ISO tech and we think that</font>

862
00:37:57,860 --> 00:38:01,740
audio should detect the<font color="#CCCCCC"> infinity</font>

863
00:38:00,030 --> 00:38:03,930
failures of the<font color="#E5E5E5"> handshake process and</font>

864
00:38:01,740 --> 00:38:07,100
<font color="#E5E5E5">you need to</font><font color="#CCCCCC"> locate</font><font color="#E5E5E5"> and little diluted</font>

865
00:38:03,930 --> 00:38:10,470
problem not just<font color="#CCCCCC"> repeating means task</font>

866
00:38:07,100 --> 00:38:12,630
and also<font color="#CCCCCC"> ordered short a</font><font color="#E5E5E5"> filter on info</font>

867
00:38:10,470 --> 00:38:15,359
floral we any complicity<font color="#E5E5E5"> with the</font>

868
00:38:12,630 --> 00:38:18,090
incomparable<font color="#E5E5E5"> field from the application</font>

869
00:38:15,360 --> 00:38:19,770
for example<font color="#CCCCCC"> in the previous Oh Tech Talk</font>

870
00:38:18,090 --> 00:38:21,660
<font color="#CCCCCC">live action field the edge of feature of</font>

871
00:38:19,770 --> 00:38:27,150
comparable point<font color="#CCCCCC"> three even</font><font color="#E5E5E5"> though the</font>

872
00:38:21,660 --> 00:38:29,190
<font color="#E5E5E5">switches are using open pro 1.0 so</font>

873
00:38:27,150 --> 00:38:32,130
lastly we have<font color="#CCCCCC"> an alter case against</font>

874
00:38:29,190 --> 00:38:33,900
owners in Sdn the<font color="#CCCCCC"> instead of plural</font>

875
00:38:32,130 --> 00:38:36,120
<font color="#E5E5E5">should be same between the</font><font color="#CCCCCC"> controller's</font>

876
00:38:33,900 --> 00:38:38,310
row<font color="#CCCCCC"> table and switches flow table</font><font color="#E5E5E5"> and</font>

877
00:38:36,120 --> 00:38:40,589
this means<font color="#CCCCCC"> that there's the with</font>

878
00:38:38,310 --> 00:38:42,600
<font color="#CCCCCC">siravo's synchronization technique in</font>

879
00:38:40,590 --> 00:38:46,050
<font color="#E5E5E5">order to create</font><font color="#CCCCCC"> truly</font><font color="#E5E5E5"> synchronized</font>

880
00:38:42,600 --> 00:38:48,360
<font color="#E5E5E5">flores so in the case of</font><font color="#CCCCCC"> the owners they</font>

881
00:38:46,050 --> 00:38:51,840
use<font color="#CCCCCC"> flow stood open</font><font color="#E5E5E5"> flow flow statistics</font>

882
00:38:48,360 --> 00:38:53,820
machine<font color="#E5E5E5"> let me give you an example here</font>

883
00:38:51,840 --> 00:38:56,340
<font color="#CCCCCC">in phone</font><font color="#E5E5E5"> almost application</font><font color="#CCCCCC"> install the</font>

884
00:38:53,820 --> 00:38:58,800
<font color="#CCCCCC">floor the control flow table</font><font color="#E5E5E5"> the</font>

885
00:38:56,340 --> 00:39:01,650
controller rigid of Laurel and<font color="#CCCCCC"> Belgian</font>

886
00:38:58,800 --> 00:39:05,220
open drop packet here<font color="#E5E5E5"> we teach</font><font color="#CCCCCC"> it flow</font>

887
00:39:01,650 --> 00:39:07,410
<font color="#CCCCCC">pakkun and send it to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> switc so it'd</font>

888
00:39:05,220 --> 00:39:10,859
<font color="#CCCCCC">be dirty in</font><font color="#E5E5E5"> that a</font><font color="#CCCCCC"> floral is installed</font>

889
00:39:07,410 --> 00:39:12,990
on the switches flow table and now the

890
00:39:10,859 --> 00:39:16,380
controller<font color="#E5E5E5"> periodically collects the</font>

891
00:39:12,990 --> 00:39:18,450
florals from the switch and the flow

892
00:39:16,380 --> 00:39:21,690
statistic<font color="#E5E5E5"> messages have information</font>

893
00:39:18,450 --> 00:39:23,939
<font color="#CCCCCC">about the institute on</font><font color="#E5E5E5"> the city and this</font>

894
00:39:21,690 --> 00:39:28,470
period<font color="#CCCCCC"> of</font><font color="#E5E5E5"> time is deported five seconds</font>

895
00:39:23,940 --> 00:39:30,180
in<font color="#E5E5E5"> honest and then the controller</font>

896
00:39:28,470 --> 00:39:31,680
compares the collected<font color="#E5E5E5"> roots with the</font>

897
00:39:30,180 --> 00:39:34,109
original one on the<font color="#CCCCCC"> controller's broad</font>

898
00:39:31,680 --> 00:39:38,190
table and they check whether they<font color="#CCCCCC"> are</font>

899
00:39:34,109 --> 00:39:40,348
exactly matched or not<font color="#E5E5E5"> so with this</font>

900
00:39:38,190 --> 00:39:41,880
method<font color="#CCCCCC"> the consistency between</font><font color="#E5E5E5"> the</font>

901
00:39:40,349 --> 00:39:46,440
switch II and controller can be

902
00:39:41,880 --> 00:39:48,599
periodically investigated but the

903
00:39:46,440 --> 00:39:50,630
interesting<font color="#E5E5E5"> point here is that if almost</font>

904
00:39:48,599 --> 00:39:53,309
<font color="#E5E5E5">thinks that the consistency is broken</font>

905
00:39:50,630 --> 00:39:57,779
also<font color="#CCCCCC"> removes and leads to the every</font>

906
00:39:53,309 --> 00:40:00,119
instance of florals of the sage so we

907
00:39:57,779 --> 00:40:02,339
can<font color="#E5E5E5"> break the consistency by</font><font color="#CCCCCC"> entering on</font>

908
00:40:00,119 --> 00:40:06,420
maple maple floral we don't embedded

909
00:40:02,339 --> 00:40:08,640
value so here the<font color="#CCCCCC"> multiplication again</font>

910
00:40:06,420 --> 00:40:11,220
installed<font color="#E5E5E5"> on in relative floral the</font>

911
00:40:08,640 --> 00:40:14,940
<font color="#CCCCCC">controls</font><font color="#E5E5E5"> for table and the floral has</font>

912
00:40:11,220 --> 00:40:19,558
<font color="#CCCCCC">done big integer value that can that can</font>

913
00:40:14,940 --> 00:40:21,960
be overflowed now the controller<font color="#E5E5E5"> periods</font>

914
00:40:19,559 --> 00:40:24,180
of<font color="#CCCCCC"> laurel and send it to</font><font color="#E5E5E5"> the switch but</font>

915
00:40:21,960 --> 00:40:26,789
here the injected integer value is

916
00:40:24,180 --> 00:40:30,720
overflowed<font color="#CCCCCC"> so it is converted into a</font>

917
00:40:26,789 --> 00:40:32,339
different one<font color="#CCCCCC"> and now whenever the</font>

918
00:40:30,720 --> 00:40:34,439
controller or<font color="#CCCCCC"> the</font><font color="#E5E5E5"> collective loss</font>

919
00:40:32,339 --> 00:40:37,349
statistics from<font color="#CCCCCC"> the switch it compares</font>

920
00:40:34,440 --> 00:40:39,270
the<font color="#E5E5E5"> rules with ordinary one again</font><font color="#CCCCCC"> but</font>

921
00:40:37,349 --> 00:40:39,809
<font color="#E5E5E5">obviously since they are totally</font>

922
00:40:39,270 --> 00:40:42,089
different

923
00:40:39,809 --> 00:40:48,029
almost<font color="#CCCCCC"> decide to remove all previous</font>

924
00:40:42,089 --> 00:40:49,650
<font color="#E5E5E5">syphilis rules so finally again</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> let's</font>

925
00:40:48,029 --> 00:40:52,920
look at the how<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can find out this</font>

926
00:40:49,650 --> 00:40:54,869
<font color="#E5E5E5">whole</font><font color="#CCCCCC"> thing so we are we</font><font color="#E5E5E5"> assume that the</font>

927
00:40:52,920 --> 00:40:57,180
hostage<font color="#CCCCCC"> and communicate with the other</font>

928
00:40:54,869 --> 00:41:00,599
hosts<font color="#E5E5E5"> so they are related florals on the</font>

929
00:40:57,180 --> 00:41:02,970
<font color="#CCCCCC">switches and now the attempt to measure</font>

930
00:41:00,599 --> 00:41:06,720
instead of the<font color="#CCCCCC"> air agent to make stop</font>

931
00:41:02,970 --> 00:41:09,180
flow<font color="#E5E5E5"> nap on floor then the</font><font color="#CCCCCC"> evident</font>

932
00:41:06,720 --> 00:41:12,509
<font color="#CCCCCC">randomly inject on our port</font><font color="#E5E5E5"> number to</font>

933
00:41:09,180 --> 00:41:15,328
the control flow table so when the

934
00:41:12,510 --> 00:41:15,760
controller<font color="#E5E5E5"> build up open flow packet to</font>

935
00:41:15,329 --> 00:41:18,010
inject

936
00:41:15,760 --> 00:41:23,080
the port<font color="#CCCCCC"> envoy age of applause so it is</font>

937
00:41:18,010 --> 00:41:24,940
changing<font color="#E5E5E5"> into the unintended</font><font color="#CCCCCC"> avalue but</font>

938
00:41:23,080 --> 00:41:27,130
from the<font color="#CCCCCC"> controllers view the instructor</font>

939
00:41:24,940 --> 00:41:28,750
<font color="#CCCCCC">floral on the switch is not</font><font color="#E5E5E5"> matched to</font>

940
00:41:27,130 --> 00:41:31,240
the original one on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> controller squad</font>

941
00:41:28,750 --> 00:41:35,080
table<font color="#E5E5E5"> so it clear the oil instead of</font>

942
00:41:31,240 --> 00:41:37,029
<font color="#CCCCCC">blood rules and try to read to them but</font>

943
00:41:35,080 --> 00:41:38,830
still<font color="#E5E5E5"> they are not seeing each other due</font>

944
00:41:37,030 --> 00:41:43,540
<font color="#CCCCCC">to double</font><font color="#E5E5E5"> their value so this is</font>

945
00:41:38,830 --> 00:41:45,160
infinitely repeated every<font color="#E5E5E5"> five second so</font>

946
00:41:43,540 --> 00:41:52,240
<font color="#E5E5E5">let's take a look at a video clip</font>

947
00:41:45,160 --> 00:41:55,690
finally so this attack is effective<font color="#CCCCCC"> to</font>

948
00:41:52,240 --> 00:42:00,970
<font color="#E5E5E5">almost latest version and also will</font>

949
00:41:55,690 --> 00:42:02,650
<font color="#E5E5E5">appear at the</font><font color="#CCCCCC"> bottom left and</font><font color="#E5E5E5"> at the</font>

950
00:42:00,970 --> 00:42:04,839
start<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> Ono's it installed</font>

951
00:42:02,650 --> 00:42:06,640
different default florals into the

952
00:42:04,840 --> 00:42:09,460
switches education see on the right and

953
00:42:06,640 --> 00:42:12,930
this terminal is connected<font color="#E5E5E5"> to the sweet</font>

954
00:42:09,460 --> 00:42:15,430
paprika<font color="#CCCCCC"> aid which</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> near hydrocity</font><font color="#E5E5E5"> and</font>

955
00:42:12,930 --> 00:42:17,290
here the left<font color="#E5E5E5"> table</font><font color="#CCCCCC"> issue in the</font>

956
00:42:15,430 --> 00:42:20,020
controller's database and right<font color="#CCCCCC"> Wally D</font>

957
00:42:17,290 --> 00:42:28,840
<font color="#E5E5E5">in the switches table to protect they</font>

958
00:42:20,020 --> 00:42:30,940
are exactly same<font color="#CCCCCC"> but here after the</font>

959
00:42:28,840 --> 00:42:32,740
attack you<font color="#E5E5E5"> can see that the floral on</font>

960
00:42:30,940 --> 00:42:34,870
the controller has the big output port

961
00:42:32,740 --> 00:42:38,759
number and it isn't<font color="#E5E5E5"> as they meet the</font>

962
00:42:34,870 --> 00:42:38,759
actual<font color="#E5E5E5"> install the one on the switch a</font>

963
00:42:40,350 --> 00:42:45,279
so honest<font color="#CCCCCC"> instead there was an</font>

964
00:42:42,820 --> 00:42:48,250
inconsistency problem when instead of

965
00:42:45,280 --> 00:42:52,300
<font color="#CCCCCC">LaRue from the storage</font><font color="#E5E5E5"> so it decided to</font>

966
00:42:48,250 --> 00:42:53,560
<font color="#CCCCCC">limit all</font><font color="#E5E5E5"> installed florals so as you</font>

967
00:42:52,300 --> 00:42:55,510
can see on the<font color="#E5E5E5"> Wireshark</font>

968
00:42:53,560 --> 00:42:57,520
there are a bunch of flow mode and floor

969
00:42:55,510 --> 00:42:59,500
remove the messages which emitted<font color="#E5E5E5"> at the</font>

970
00:42:57,520 --> 00:43:08,170
synchronization<font color="#E5E5E5"> digestion continuously</font>

971
00:42:59,500 --> 00:43:11,770
failed so again what why<font color="#E5E5E5"> is it possible</font>

972
00:43:08,170 --> 00:43:13,600
<font color="#CCCCCC">to Ono's the person is that</font><font color="#E5E5E5"> almost</font>

973
00:43:11,770 --> 00:43:17,620
doesn't<font color="#E5E5E5"> conduct</font><font color="#CCCCCC"> all rain check against</font>

974
00:43:13,600 --> 00:43:20,259
each<font color="#CCCCCC"> filter carefully and every</font><font color="#E5E5E5"> five</font>

975
00:43:17,620 --> 00:43:22,960
second almost<font color="#CCCCCC"> a</font><font color="#E5E5E5"> missive synchronizes</font>

976
00:43:20,260 --> 00:43:26,050
florist even though there is a<font color="#CCCCCC"> map on</font>

977
00:43:22,960 --> 00:43:28,410
<font color="#CCCCCC">the floor in</font><font color="#E5E5E5"> the story</font><font color="#CCCCCC"> so how do you</font>

978
00:43:26,050 --> 00:43:29,790
<font color="#CCCCCC">defend this attack</font>

979
00:43:28,410 --> 00:43:31,890
obviously all

980
00:43:29,790 --> 00:43:34,140
should check the<font color="#E5E5E5"> range of the critical</font>

981
00:43:31,890 --> 00:43:39,930
field<font color="#CCCCCC"> in a</font><font color="#E5E5E5"> subtle manner</font><font color="#CCCCCC"> when wielding</font>

982
00:43:34,140 --> 00:43:42,000
of<font color="#E5E5E5"> Laurel and</font><font color="#CCCCCC"> when they're in their job</font>

983
00:43:39,930 --> 00:43:44,910
<font color="#CCCCCC">synchronisation failure</font><font color="#E5E5E5"> almost need to</font>

984
00:43:42,000 --> 00:43:49,430
analyze<font color="#CCCCCC"> due to</font><font color="#E5E5E5"> problem of the American</font><font color="#CCCCCC"> a</font>

985
00:43:44,910 --> 00:43:49,430
<font color="#CCCCCC">naturally fitting many</font><font color="#E5E5E5"> synchronization</font>

986
00:43:49,880 --> 00:43:55,980
so actually we<font color="#CCCCCC"> would</font><font color="#E5E5E5"> discovers nine new</font>

987
00:43:53,190 --> 00:43:59,490
attacks<font color="#CCCCCC"> addition</font><font color="#E5E5E5"> in this table by using</font>

988
00:43:55,980 --> 00:44:01,320
Delta<font color="#E5E5E5"> but we demonstrate two of them due</font>

989
00:43:59,490 --> 00:44:03,089
<font color="#E5E5E5">to the time</font><font color="#CCCCCC"> concentrate and with</font><font color="#E5E5E5"> edit</font>

990
00:44:01,320 --> 00:44:07,770
map on the floor generation<font color="#E5E5E5"> and in</font>

991
00:44:03,090 --> 00:44:10,440
<font color="#CCCCCC">beautiful original ideation so in</font>

992
00:44:07,770 --> 00:44:12,720
conclusion we all know that<font color="#E5E5E5"> as</font><font color="#CCCCCC"> CN is</font>

993
00:44:10,440 --> 00:44:14,790
known as own external networking<font color="#E5E5E5"> because</font>

994
00:44:12,720 --> 00:44:17,790
it has significant benefits than

995
00:44:14,790 --> 00:44:19,890
traditional one but<font color="#E5E5E5"> still there are</font><font color="#CCCCCC"> a</font>

996
00:44:17,790 --> 00:44:24,150
lot of vulnerabilities so we need to

997
00:44:19,890 --> 00:44:26,759
<font color="#E5E5E5">improve the secret of Sdn so with the</font>

998
00:44:24,150 --> 00:44:28,950
<font color="#E5E5E5">help of the Delta we can</font><font color="#CCCCCC"> simply conduct</font>

999
00:44:26,760 --> 00:44:32,850
<font color="#E5E5E5">pen testing against the entire</font><font color="#CCCCCC"> stn</font>

1000
00:44:28,950 --> 00:44:34,430
architecture and<font color="#E5E5E5"> reporting techniques of</font>

1001
00:44:32,850 --> 00:44:38,009
Delta Allah was to find new

1002
00:44:34,430 --> 00:44:39,629
vulnerabilities<font color="#E5E5E5"> and our tour is now</font>

1003
00:44:38,010 --> 00:44:43,580
available at an open source project so

1004
00:44:39,630 --> 00:44:45,840
<font color="#E5E5E5">pleased with our github and join us</font>

1005
00:44:43,580 --> 00:44:49,190
thank<font color="#CCCCCC"> you very much for your</font><font color="#E5E5E5"> listening</font>

1006
00:44:45,840 --> 00:44:49,190
and any questions

1007
00:44:50,880 --> 00:44:56,169
[Applause]

