1
00:00:00,030 --> 00:00:06,420
hi everyone<font color="#E5E5E5"> welcome to our</font><font color="#CCCCCC"> session</font><font color="#E5E5E5"> on a</font>

2
00:00:02,520 --> 00:00:11,040
deep dive into<font color="#CCCCCC"> mac OS MDM my name is</font>

3
00:00:06,420 --> 00:00:12,599
<font color="#E5E5E5">Jesse</font><font color="#CCCCCC"> Endel I'm</font><font color="#E5E5E5"> max phenology</font><font color="#CCCCCC"> I work at</font>

4
00:00:11,040 --> 00:00:14,790
a<font color="#CCCCCC"> company called fleet Smith we're an</font>

5
00:00:12,599 --> 00:00:17,550
<font color="#CCCCCC">Apple device management product</font><font color="#E5E5E5"> and I'm</font>

6
00:00:14,790 --> 00:00:18,990
a staff engineer<font color="#CCCCCC"> draw box a little bit</font>

7
00:00:17,550 --> 00:00:22,350
of background on why we did this

8
00:00:18,990 --> 00:00:24,299
<font color="#E5E5E5">research so you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> it's what it's what</font>

9
00:00:22,350 --> 00:00:25,380
<font color="#E5E5E5">our product does so we have kind of a</font>

10
00:00:24,300 --> 00:00:27,420
vested<font color="#E5E5E5"> interest there</font>

11
00:00:25,380 --> 00:00:31,080
it handles you know OS updates<font color="#E5E5E5"> app</font>

12
00:00:27,420 --> 00:00:33,870
updates<font color="#E5E5E5"> security policy enforcement and</font>

13
00:00:31,080 --> 00:00:36,239
compliance<font color="#E5E5E5"> for Apple devices</font><font color="#CCCCCC"> we have a</font>

14
00:00:33,870 --> 00:00:37,530
<font color="#E5E5E5">really high security bar for for our</font>

15
00:00:36,239 --> 00:00:39,629
products so<font color="#E5E5E5"> we want to make sure it's</font>

16
00:00:37,530 --> 00:00:42,450
secured by design<font color="#E5E5E5"> and we put a lot of</font>

17
00:00:39,629 --> 00:00:44,370
work into making<font color="#CCCCCC"> sure that's true our</font>

18
00:00:42,450 --> 00:00:48,800
goal with this talk<font color="#E5E5E5"> partially was to</font>

19
00:00:44,370 --> 00:00:51,449
increase<font color="#E5E5E5"> the security of MDM and dep and</font>

20
00:00:48,800 --> 00:00:53,940
also kind<font color="#E5E5E5"> of raise</font><font color="#CCCCCC"> the bar for all MDM</font>

21
00:00:51,449 --> 00:00:58,800
vendors<font color="#E5E5E5"> and</font><font color="#CCCCCC"> i just wanted to</font><font color="#E5E5E5"> work with</font>

22
00:00:53,940 --> 00:01:01,019
<font color="#E5E5E5">Jesse again so quick agenda</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be</font>

23
00:00:58,800 --> 00:01:03,709
<font color="#E5E5E5">covering some basics some terminology</font>

24
00:01:01,020 --> 00:01:06,450
some concepts<font color="#E5E5E5"> moving into an overview</font>

25
00:01:03,710 --> 00:01:09,810
followed<font color="#E5E5E5"> by the deep dive section which</font>

26
00:01:06,450 --> 00:01:12,119
<font color="#E5E5E5">max will walk us through also disclosing</font>

27
00:01:09,810 --> 00:01:14,700
the vulnerability<font color="#E5E5E5"> that we found and</font>

28
00:01:12,119 --> 00:01:16,770
explaining<font color="#E5E5E5"> how</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> works</font><font color="#CCCCCC"> then we'll</font>

29
00:01:14,700 --> 00:01:20,150
<font color="#E5E5E5">actually be exploiting</font><font color="#CCCCCC"> that so we have a</font>

30
00:01:16,770 --> 00:01:24,149
<font color="#E5E5E5">laptop here in the box</font><font color="#CCCCCC"> if all goes well</font>

31
00:01:20,150 --> 00:01:25,979
our demo will work with no issues<font color="#E5E5E5"> and</font>

32
00:01:24,150 --> 00:01:29,659
finally we'll we'll go through the fix

33
00:01:25,979 --> 00:01:29,659
and<font color="#E5E5E5"> some conclusions and takeaways</font>

34
00:01:36,280 --> 00:01:41,290
so let's jump in what is MDM<font color="#E5E5E5"> it can be a</font>

35
00:01:39,640 --> 00:01:44,500
confusing<font color="#E5E5E5"> term because it can refer</font><font color="#CCCCCC"> to</font>

36
00:01:41,290 --> 00:01:47,049
an entire kind of product category<font color="#CCCCCC"> when</font>

37
00:01:44,500 --> 00:01:51,430
we say MDM we mean<font color="#CCCCCC"> Apple's specific</font>

38
00:01:47,049 --> 00:01:53,200
flavor of MDM<font color="#E5E5E5"> which is a protocol as</font>

39
00:01:51,430 --> 00:01:53,710
<font color="#E5E5E5">well as a few other</font><font color="#CCCCCC"> things that we'll</font>

40
00:01:53,200 --> 00:01:56,170
touch on

41
00:01:53,710 --> 00:01:58,539
to set system configuration in a

42
00:01:56,170 --> 00:02:03,369
centralized<font color="#CCCCCC"> way</font><font color="#E5E5E5"> through an MDM server</font>

43
00:01:58,540 --> 00:02:04,899
and that MDM server is built by a<font color="#E5E5E5"> third</font>

44
00:02:03,369 --> 00:02:07,630
<font color="#E5E5E5">party</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> something that's run by</font>

45
00:02:04,899 --> 00:02:09,310
<font color="#E5E5E5">Apple</font><font color="#CCCCCC"> so that could be fleet</font><font color="#E5E5E5"> Smith that</font>

46
00:02:07,630 --> 00:02:12,100
could be another product like<font color="#CCCCCC"> air</font><font color="#E5E5E5"> watch</font>

47
00:02:09,310 --> 00:02:13,450
<font color="#E5E5E5">so if you've heard of kind of mobile</font>

48
00:02:12,100 --> 00:02:16,299
<font color="#E5E5E5">device management products that's we're</font>

49
00:02:13,450 --> 00:02:19,268
referring<font color="#CCCCCC"> to</font><font color="#E5E5E5"> here and an MDM server can</font>

50
00:02:16,300 --> 00:02:20,800
send<font color="#CCCCCC"> MDM commands to a device</font><font color="#E5E5E5"> that</font>

51
00:02:19,269 --> 00:02:22,930
includes things like a remote wipe

52
00:02:20,800 --> 00:02:25,840
command in case the device is lost or

53
00:02:22,930 --> 00:02:28,390
<font color="#CCCCCC">stolen</font><font color="#E5E5E5"> as well</font><font color="#CCCCCC"> as a command to install a</font>

54
00:02:25,840 --> 00:02:29,500
<font color="#E5E5E5">configuration profile which could</font>

55
00:02:28,390 --> 00:02:30,730
contain something<font color="#E5E5E5"> like password</font>

56
00:02:29,500 --> 00:02:33,850
<font color="#E5E5E5">complexity requirements for your</font>

57
00:02:30,730 --> 00:02:35,920
enterprise<font color="#E5E5E5"> or perhaps you know Wi-Fi</font>

58
00:02:33,850 --> 00:02:37,480
network settings<font color="#CCCCCC"> to join the</font><font color="#E5E5E5"> WP hu</font>

59
00:02:35,920 --> 00:02:41,920
<font color="#CCCCCC">network and include the you know</font><font color="#E5E5E5"> network</font>

60
00:02:37,480 --> 00:02:44,828
password for example<font color="#E5E5E5"> all right</font>

61
00:02:41,920 --> 00:02:47,730
DEP<font color="#E5E5E5"> this stands for device enrollment</font>

62
00:02:44,829 --> 00:02:50,620
<font color="#E5E5E5">program</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a complementary</font>

63
00:02:47,730 --> 00:02:52,810
technology to MDM<font color="#E5E5E5"> and it allows you to</font>

64
00:02:50,620 --> 00:02:55,630
<font color="#CCCCCC">have devices automatically enroll with</font>

65
00:02:52,810 --> 00:02:56,980
an MDM server<font color="#CCCCCC"> immediately upon first</font>

66
00:02:55,630 --> 00:02:59,470
boot the first time they connect to<font color="#E5E5E5"> the</font>

67
00:02:56,980 --> 00:03:00,730
network<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is most useful</font><font color="#CCCCCC"> obviously</font>

68
00:02:59,470 --> 00:03:02,980
when the device is<font color="#E5E5E5"> brand new because it</font>

69
00:03:00,730 --> 00:03:05,170
<font color="#E5E5E5">can help you achieve the holy grail</font><font color="#CCCCCC"> of</font>

70
00:03:02,980 --> 00:03:07,149
IT workflows which is a zero touch

71
00:03:05,170 --> 00:03:09,220
deployment workflow meaning the IT team

72
00:03:07,150 --> 00:03:10,780
never has to touch it<font color="#E5E5E5"> the laptop ships</font>

73
00:03:09,220 --> 00:03:13,030
<font color="#CCCCCC">directly from Apple to the</font><font color="#E5E5E5"> employee</font>

74
00:03:10,780 --> 00:03:14,950
<font color="#E5E5E5">they're the ones to unbox it connect to</font>

75
00:03:13,030 --> 00:03:17,820
Wi-Fi<font color="#E5E5E5"> and boom it sets itself up</font>

76
00:03:14,950 --> 00:03:19,899
automatically<font color="#E5E5E5"> through your MDM product</font>

77
00:03:17,820 --> 00:03:22,150
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> could also be useful for</font>

78
00:03:19,900 --> 00:03:23,530
<font color="#E5E5E5">provisioning workflows if you have an</font>

79
00:03:22,150 --> 00:03:25,630
advice that's being<font color="#E5E5E5"> used by an employee</font>

80
00:03:23,530 --> 00:03:27,519
<font color="#CCCCCC">they leave and you want to wipe it and</font>

81
00:03:25,630 --> 00:03:32,530
redeploy<font color="#E5E5E5"> it it could also be useful in</font>

82
00:03:27,519 --> 00:03:34,060
<font color="#CCCCCC">that</font><font color="#E5E5E5"> scenario as</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> skip the stands</font>

83
00:03:32,530 --> 00:03:37,150
for<font color="#CCCCCC"> a simple certificate enrollment</font>

84
00:03:34,060 --> 00:03:39,760
protocol and this<font color="#E5E5E5"> is a way</font><font color="#CCCCCC"> for a device</font>

85
00:03:37,150 --> 00:03:43,150
<font color="#E5E5E5">to send a certificate signing request</font>

86
00:03:39,760 --> 00:03:44,489
<font color="#CCCCCC">this is a request for a</font><font color="#E5E5E5"> certificate</font><font color="#CCCCCC"> to a</font>

87
00:03:43,150 --> 00:03:46,000
<font color="#CCCCCC">skipper</font>

88
00:03:44,489 --> 00:03:48,450
<font color="#CCCCCC">generally this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to be</font>

89
00:03:46,000 --> 00:03:50,290
implemented as<font color="#CCCCCC"> part of the MDM</font><font color="#E5E5E5"> product</font>

90
00:03:48,450 --> 00:03:52,450
<font color="#CCCCCC">the client will</font>

91
00:03:50,290 --> 00:03:53,590
you know send its request<font color="#E5E5E5"> the server</font>

92
00:03:52,450 --> 00:03:55,569
will evaluate<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> or not it should</font>

93
00:03:53,590 --> 00:03:58,420
grant the certificate and if the answer

94
00:03:55,569 --> 00:04:00,099
is<font color="#CCCCCC"> yes the client the device will</font>

95
00:03:58,420 --> 00:04:02,230
receive a TLS client certificate that's

96
00:04:00,099 --> 00:04:05,048
used to authenticate<font color="#CCCCCC"> later on to the MDM</font>

97
00:04:02,230 --> 00:04:06,909
server configuration profiles<font color="#E5E5E5"> I touched</font>

98
00:04:05,049 --> 00:04:09,010
on<font color="#CCCCCC"> this briefly already</font><font color="#E5E5E5"> this is Apple's</font>

99
00:04:06,909 --> 00:04:10,840
standardized format for<font color="#CCCCCC"> enforcing system</font>

100
00:04:09,010 --> 00:04:12,340
configuration<font color="#E5E5E5"> such as password</font>

101
00:04:10,840 --> 00:04:15,250
complexity requirements Wi-Fi settings

102
00:04:12,340 --> 00:04:16,539
<font color="#E5E5E5">disk encryption</font><font color="#CCCCCC"> you name</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> it's a file</font>

103
00:04:15,250 --> 00:04:18,940
<font color="#E5E5E5">format</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can contain</font><font color="#CCCCCC"> multiple</font>

104
00:04:16,539 --> 00:04:20,079
payloads<font color="#CCCCCC"> so you can have one file that</font>

105
00:04:18,940 --> 00:04:22,270
contains the<font color="#E5E5E5"> settings for all three of</font>

106
00:04:20,079 --> 00:04:23,800
<font color="#E5E5E5">those</font><font color="#CCCCCC"> things and it's based on the P</font>

107
00:04:22,270 --> 00:04:28,389
list or property list format<font color="#E5E5E5"> which is</font>

108
00:04:23,800 --> 00:04:31,000
<font color="#CCCCCC">Apple specific flavor of XML the</font>

109
00:04:28,389 --> 00:04:33,729
payloads within the configuration

110
00:04:31,000 --> 00:04:36,820
<font color="#E5E5E5">profile can also optionally be signed</font>

111
00:04:33,729 --> 00:04:40,930
and<font color="#E5E5E5"> encrypted to validate origin ensure</font>

112
00:04:36,820 --> 00:04:43,150
integrity<font color="#E5E5E5"> and protect their contents so</font>

113
00:04:40,930 --> 00:04:46,000
a quick overview<font color="#CCCCCC"> of the entities at play</font>

114
00:04:43,150 --> 00:04:48,159
here<font color="#CCCCCC"> there's really five key players</font>

115
00:04:46,000 --> 00:04:49,509
there's Apple themselves<font color="#CCCCCC"> running some of</font>

116
00:04:48,160 --> 00:04:51,789
<font color="#E5E5E5">the server infrastructure and of course</font>

117
00:04:49,509 --> 00:04:53,849
the manufacturer<font color="#CCCCCC"> of the devices next up</font>

118
00:04:51,789 --> 00:04:56,979
you've got resellers this would include

119
00:04:53,849 --> 00:05:00,090
large resellers like CDW<font color="#E5E5E5"> it would also</font>

120
00:04:56,979 --> 00:05:03,460
<font color="#E5E5E5">in the world of DEP include Apple</font><font color="#CCCCCC"> Retail</font>

121
00:05:00,090 --> 00:05:04,479
<font color="#CCCCCC">third you've got the MDM vendor fourth</font>

122
00:05:03,460 --> 00:05:06,370
you<font color="#CCCCCC"> have the customer there's</font><font color="#E5E5E5"> the</font>

123
00:05:04,479 --> 00:05:07,960
company<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> actually you</font><font color="#E5E5E5"> know trying</font>

124
00:05:06,370 --> 00:05:10,240
to<font color="#E5E5E5"> manage their devices for their</font>

125
00:05:07,960 --> 00:05:15,789
enterprise and fifth you of<font color="#CCCCCC"> course have</font>

126
00:05:10,240 --> 00:05:18,220
the<font color="#E5E5E5"> device itself</font><font color="#CCCCCC"> ok protocols</font><font color="#E5E5E5"> the MDM</font>

127
00:05:15,789 --> 00:05:21,490
protocol is really a combination<font color="#E5E5E5"> of two</font>

128
00:05:18,220 --> 00:05:23,710
<font color="#E5E5E5">protocols</font><font color="#CCCCCC"> the first is Apple push</font>

129
00:05:21,490 --> 00:05:24,789
notification service<font color="#CCCCCC"> APNs</font><font color="#E5E5E5"> you may have</font>

130
00:05:23,710 --> 00:05:26,710
heard this in relation<font color="#CCCCCC"> to other</font>

131
00:05:24,789 --> 00:05:29,139
technologies<font color="#E5E5E5"> such as iMessage if you've</font>

132
00:05:26,710 --> 00:05:31,900
you know<font color="#CCCCCC"> sent I</font><font color="#E5E5E5"> messages on your iPhone</font>

133
00:05:29,139 --> 00:05:35,860
<font color="#E5E5E5">that's actually built partially on top</font>

134
00:05:31,900 --> 00:05:37,780
of<font color="#CCCCCC"> APNs</font><font color="#E5E5E5"> next up it's also a restful api</font>

135
00:05:35,860 --> 00:05:39,490
so there's sort of two<font color="#E5E5E5"> pieces to</font><font color="#CCCCCC"> this</font>

136
00:05:37,780 --> 00:05:41,650
here and that's the<font color="#E5E5E5"> part</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the MDM</font>

137
00:05:39,490 --> 00:05:43,659
server implements and that's a restful

138
00:05:41,650 --> 00:05:47,739
api communication occurs between<font color="#CCCCCC"> the</font>

139
00:05:43,659 --> 00:05:49,870
device and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mt MDM server and the</font>

140
00:05:47,740 --> 00:05:52,300
device receives commands<font color="#E5E5E5"> in plist</font>

141
00:05:49,870 --> 00:05:56,650
<font color="#E5E5E5">encoded dictionaries this is all over</font>

142
00:05:52,300 --> 00:05:59,490
HTTP<font color="#E5E5E5"> HTTPS and optionally MDM servers</font>

143
00:05:56,650 --> 00:06:01,810
can be<font color="#E5E5E5"> pinned but it's not a requirement</font>

144
00:05:59,490 --> 00:06:03,940
<font color="#E5E5E5">authentication works differently for</font>

145
00:06:01,810 --> 00:06:04,180
<font color="#CCCCCC">each of these</font><font color="#E5E5E5"> so as I mentioned earlier</font>

146
00:06:03,940 --> 00:06:06,430
<font color="#CCCCCC">that</font>

147
00:06:04,180 --> 00:06:08,289
client certificate issued<font color="#CCCCCC"> by escape</font><font color="#E5E5E5"> is</font>

148
00:06:06,430 --> 00:06:11,110
used for authenticating to the MDM

149
00:06:08,289 --> 00:06:13,120
server<font color="#CCCCCC"> for the push notifications</font><font color="#E5E5E5"> that's</font>

150
00:06:11,110 --> 00:06:16,810
actually done via a push notification

151
00:06:13,120 --> 00:06:18,190
token<font color="#CCCCCC"> we won't get be going in depth</font><font color="#E5E5E5"> on</font>

152
00:06:16,810 --> 00:06:22,020
<font color="#CCCCCC">ApS today because there's already been a</font>

153
00:06:18,190 --> 00:06:24,820
<font color="#E5E5E5">lot of research on</font><font color="#CCCCCC"> that whole area so</font>

154
00:06:22,020 --> 00:06:25,320
that's<font color="#E5E5E5"> why we won't be diving into</font><font color="#CCCCCC"> that</font>

155
00:06:24,820 --> 00:06:28,270
today

156
00:06:25,320 --> 00:06:30,789
<font color="#CCCCCC">all right DEP there's actually three</font>

157
00:06:28,270 --> 00:06:33,070
separate<font color="#E5E5E5"> API is related to DEP one for</font>

158
00:06:30,789 --> 00:06:35,110
<font color="#E5E5E5">resellers one for MDM vendors and one</font>

159
00:06:33,070 --> 00:06:37,259
for<font color="#E5E5E5"> the device itself</font><font color="#CCCCCC"> to prove</font><font color="#E5E5E5"> its</font>

160
00:06:35,110 --> 00:06:40,750
device identity which is undocumented

161
00:06:37,259 --> 00:06:42,990
<font color="#E5E5E5">the nice</font><font color="#CCCCCC"> thing about all</font><font color="#E5E5E5"> these is</font>

162
00:06:40,750 --> 00:06:46,660
<font color="#CCCCCC">they're more</font><font color="#E5E5E5"> modern</font><font color="#CCCCCC"> api's</font><font color="#E5E5E5"> they use JSON</font>

163
00:06:42,990 --> 00:06:48,970
<font color="#CCCCCC">no P lists and today we're only going</font><font color="#E5E5E5"> to</font>

164
00:06:46,660 --> 00:06:53,139
<font color="#CCCCCC">be</font><font color="#E5E5E5"> focusing on that middle one</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> the</font>

165
00:06:48,970 --> 00:06:56,169
MDM<font color="#E5E5E5"> to Apple communication between the</font>

166
00:06:53,139 --> 00:07:00,490
MDM vendor product and the DEP cloud

167
00:06:56,169 --> 00:07:02,229
service API<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> the cloud service API</font>

168
00:07:00,490 --> 00:07:04,690
what is this thing<font color="#E5E5E5"> used for it's another</font>

169
00:07:02,229 --> 00:07:07,599
restful api<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> two main use cases</font>

170
00:07:04,690 --> 00:07:10,150
one is to sync device records<font color="#CCCCCC"> so when a</font>

171
00:07:07,599 --> 00:07:13,810
reseller or<font color="#E5E5E5"> Apple themselves</font><font color="#CCCCCC"> adds a new</font>

172
00:07:10,150 --> 00:07:16,810
device into their internal<font color="#CCCCCC"> DEP</font><font color="#E5E5E5"> database</font>

173
00:07:13,810 --> 00:07:18,880
<font color="#E5E5E5">somewhere then those device records need</font>

174
00:07:16,810 --> 00:07:21,400
<font color="#CCCCCC">to be synced over pulled into the MDM</font>

175
00:07:18,880 --> 00:07:23,680
product somehow that is done over<font color="#CCCCCC"> this</font>

176
00:07:21,400 --> 00:07:25,150
<font color="#CCCCCC">DEP cloud service API</font><font color="#E5E5E5"> and then the other</font>

177
00:07:23,680 --> 00:07:27,909
thing that happens is the MDM vendor

178
00:07:25,150 --> 00:07:30,159
pushes back<font color="#CCCCCC"> what's</font><font color="#E5E5E5"> called a DEP profile</font>

179
00:07:27,909 --> 00:07:33,310
<font color="#E5E5E5">which contains a few different things</font>

180
00:07:30,159 --> 00:07:36,539
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that DEP profile is delivered to the</font>

181
00:07:33,310 --> 00:07:39,310
<font color="#CCCCCC">vise later on the</font><font color="#E5E5E5"> first time it</font><font color="#CCCCCC"> boots up</font>

182
00:07:36,539 --> 00:07:42,280
so that DEP profile which<font color="#CCCCCC"> is a JSON</font>

183
00:07:39,310 --> 00:07:46,060
payload contains three things<font color="#E5E5E5"> the MDM</font>

184
00:07:42,280 --> 00:07:47,590
server URL<font color="#CCCCCC"> any additional certificates</font>

185
00:07:46,060 --> 00:07:50,979
<font color="#E5E5E5">that need to be trusted</font><font color="#CCCCCC"> for the sake of</font>

186
00:07:47,590 --> 00:07:52,330
pinning<font color="#E5E5E5"> as well as any setup setup</font>

187
00:07:50,979 --> 00:07:54,280
assistant configuration you want<font color="#CCCCCC"> to do</font>

188
00:07:52,330 --> 00:07:55,930
so<font color="#E5E5E5"> that setup</font><font color="#CCCCCC"> system you see on the Mac</font>

189
00:07:54,280 --> 00:07:58,210
first<font color="#E5E5E5"> boots up you can customize which</font>

190
00:07:55,930 --> 00:08:00,310
screens are shown there<font color="#E5E5E5"> and this</font>

191
00:07:58,210 --> 00:08:04,060
<font color="#E5E5E5">authentication is handled with OAuth</font>

192
00:08:00,310 --> 00:08:06,610
between the MDM server and<font color="#CCCCCC"> Apple so step</font>

193
00:08:04,060 --> 00:08:09,130
is<font color="#E5E5E5"> another restful api it was created at</font>

194
00:08:06,610 --> 00:08:11,800
a time when TLS<font color="#CCCCCC"> and HTTPS weren't that</font>

195
00:08:09,130 --> 00:08:14,409
widespread<font color="#E5E5E5"> and so it relies on CMS or</font>

196
00:08:11,800 --> 00:08:16,570
pkcs number<font color="#E5E5E5"> seven signed data to ensure</font>

197
00:08:14,409 --> 00:08:18,070
message integrity<font color="#E5E5E5"> it supports the</font>

198
00:08:16,570 --> 00:08:21,460
concept<font color="#CCCCCC"> of a challenge password</font>

199
00:08:18,070 --> 00:08:23,409
for authentication<font color="#CCCCCC"> unfortunately in the</font>

200
00:08:21,460 --> 00:08:26,940
RFC that's really<font color="#E5E5E5"> just defined as like a</font>

201
00:08:23,410 --> 00:08:30,130
string<font color="#CCCCCC"> we</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> that field</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> be</font>

202
00:08:26,940 --> 00:08:31,540
used a<font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> more carefully</font><font color="#E5E5E5"> and so</font>

203
00:08:30,130 --> 00:08:33,220
what we do is we actually stick an H<font color="#E5E5E5"> Mac</font>

204
00:08:31,540 --> 00:08:35,110
in there<font color="#CCCCCC"> that server generated so that</font>

205
00:08:33,220 --> 00:08:37,919
<font color="#CCCCCC">we can correlate that with</font><font color="#E5E5E5"> a specific</font>

206
00:08:35,110 --> 00:08:40,210
<font color="#E5E5E5">enrollment request from a specific user</font>

207
00:08:37,919 --> 00:08:42,400
<font color="#E5E5E5">all right establishment of</font><font color="#CCCCCC"> trusts</font>

208
00:08:40,210 --> 00:08:43,510
<font color="#CCCCCC">between all</font><font color="#E5E5E5"> these things it's pretty</font>

209
00:08:42,400 --> 00:08:45,220
complex and<font color="#E5E5E5"> we're not going to go into</font>

210
00:08:43,510 --> 00:08:47,110
<font color="#CCCCCC">it</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> detail here but we do cover this</font>

211
00:08:45,220 --> 00:08:49,660
<font color="#CCCCCC">very extensively in great detail in the</font>

212
00:08:47,110 --> 00:08:52,830
<font color="#E5E5E5">white paper</font><font color="#CCCCCC"> so definitely check that out</font>

213
00:08:49,660 --> 00:08:55,060
and it's<font color="#E5E5E5"> just important to call out that</font>

214
00:08:52,830 --> 00:08:56,770
<font color="#E5E5E5">there's a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> cross hunting that goes</font>

215
00:08:55,060 --> 00:08:59,619
on a lot<font color="#CCCCCC"> of uploading</font><font color="#E5E5E5"> and downloading of</font>

216
00:08:56,770 --> 00:09:02,620
<font color="#E5E5E5">certs in order to get to the point where</font>

217
00:08:59,620 --> 00:09:04,300
the MDM vendor<font color="#E5E5E5"> now has the right to send</font>

218
00:09:02,620 --> 00:09:07,210
MDM push notifications down to the

219
00:09:04,300 --> 00:09:09,069
<font color="#E5E5E5">device as well as sink those device</font>

220
00:09:07,210 --> 00:09:14,830
<font color="#E5E5E5">records to the</font><font color="#CCCCCC"> DEP servers with</font><font color="#E5E5E5"> Apple</font>

221
00:09:09,070 --> 00:09:16,240
and push those DEP profiles back<font color="#CCCCCC"> alright</font>

222
00:09:14,830 --> 00:09:19,930
some differences here

223
00:09:16,240 --> 00:09:23,350
the authentication<font color="#E5E5E5"> for the for MDM is</font>

224
00:09:19,930 --> 00:09:26,609
via API<font color="#CCCCCC"> APNs whereas for DEP it's</font><font color="#E5E5E5"> a toe</font>

225
00:09:23,350 --> 00:09:28,810
<font color="#E5E5E5">off token so different auth stories here</font>

226
00:09:26,610 --> 00:09:30,670
<font color="#E5E5E5">all right putting it all together so</font>

227
00:09:28,810 --> 00:09:34,119
<font color="#E5E5E5">there's sort of if you</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the</font>

228
00:09:30,670 --> 00:09:37,150
entire<font color="#E5E5E5"> lifecycle</font><font color="#CCCCCC"> the entire bootstrap</font>

229
00:09:34,120 --> 00:09:39,370
<font color="#E5E5E5">process for DEP and MDM</font><font color="#CCCCCC"> this is what it</font>

230
00:09:37,150 --> 00:09:41,470
looks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> from start to finish</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

231
00:09:39,370 --> 00:09:44,770
kind of hard<font color="#CCCCCC"> to get an</font><font color="#E5E5E5"> understanding of</font>

232
00:09:41,470 --> 00:09:48,190
so<font color="#E5E5E5"> we made a visual for this as you</font><font color="#CCCCCC"> can</font>

233
00:09:44,770 --> 00:09:50,680
<font color="#E5E5E5">see the first step is the reseller or</font>

234
00:09:48,190 --> 00:09:52,210
<font color="#CCCCCC">Apple</font><font color="#E5E5E5"> creating that device record the</font>

235
00:09:50,680 --> 00:09:54,130
<font color="#E5E5E5">next thing that happens is</font><font color="#CCCCCC"> the customer</font>

236
00:09:52,210 --> 00:09:55,720
the<font color="#E5E5E5"> enterprise actually goes into</font>

237
00:09:54,130 --> 00:09:57,730
<font color="#CCCCCC">something called</font><font color="#E5E5E5"> Apple business manager</font>

238
00:09:55,720 --> 00:10:00,820
which is<font color="#E5E5E5"> a web portal and assigns that</font>

239
00:09:57,730 --> 00:10:02,440
<font color="#E5E5E5">device to a specific MDM server from</font>

240
00:10:00,820 --> 00:10:04,330
there the MDM server is<font color="#E5E5E5"> able to sync</font>

241
00:10:02,440 --> 00:10:06,940
those device<font color="#CCCCCC"> records over as I mentioned</font>

242
00:10:04,330 --> 00:10:10,690
earlier as well as push those<font color="#E5E5E5"> DEP</font>

243
00:10:06,940 --> 00:10:13,870
profiles back up back to<font color="#E5E5E5"> Apple</font><font color="#CCCCCC"> next the</font>

244
00:10:10,690 --> 00:10:16,420
device<font color="#CCCCCC"> actually checks in via DEP -</font>

245
00:10:13,870 --> 00:10:19,930
<font color="#E5E5E5">Apple receives this profile then we've</font>

246
00:10:16,420 --> 00:10:22,689
got the sort<font color="#CCCCCC"> of bootstrapping</font><font color="#E5E5E5"> of the</font>

247
00:10:19,930 --> 00:10:25,900
initial MDM config which<font color="#E5E5E5"> max will walk</font>

248
00:10:22,690 --> 00:10:29,200
<font color="#CCCCCC">through in greater detail</font><font color="#E5E5E5"> and finally</font>

249
00:10:25,900 --> 00:10:30,810
the device<font color="#E5E5E5"> can start receiving MDM</font>

250
00:10:29,200 --> 00:10:32,020
commands like that remote wipe command

251
00:10:30,810 --> 00:10:37,810
<font color="#E5E5E5">install</font>

252
00:10:32,020 --> 00:10:38,800
configuration profile<font color="#CCCCCC"> etc alright</font><font color="#E5E5E5"> thanks</font>

253
00:10:37,810 --> 00:10:40,569
<font color="#E5E5E5">Jesse</font>

254
00:10:38,800 --> 00:10:42,819
so today's deep dive<font color="#E5E5E5"> will focus on the</font>

255
00:10:40,570 --> 00:10:44,620
for later stages<font color="#E5E5E5"> of the process</font><font color="#CCCCCC"> now for</font>

256
00:10:42,820 --> 00:10:45,940
<font color="#CCCCCC">more info</font><font color="#E5E5E5"> on stages one</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> three</font><font color="#CCCCCC"> I</font>

257
00:10:44,620 --> 00:10:49,720
do recommend you<font color="#E5E5E5"> check out the white</font>

258
00:10:45,940 --> 00:10:52,089
paper<font color="#CCCCCC"> so as we've seen the later steps</font>

259
00:10:49,720 --> 00:10:54,880
<font color="#E5E5E5">involve the device itself</font><font color="#CCCCCC"> in these steps</font>

260
00:10:52,089 --> 00:10:58,600
Mac OS interacts directly with apple and

261
00:10:54,880 --> 00:11:00,010
<font color="#CCCCCC">the MDM vendor servers we're gonna</font><font color="#E5E5E5"> use a</font>

262
00:10:58,600 --> 00:11:00,880
scenario<font color="#CCCCCC"> here to sort of walk through</font>

263
00:11:00,010 --> 00:11:03,459
<font color="#E5E5E5">the deep dive</font>

264
00:11:00,880 --> 00:11:06,720
so imagine a user is getting a new<font color="#E5E5E5"> a</font>

265
00:11:03,459 --> 00:11:09,010
brand new<font color="#E5E5E5"> MacBook and</font><font color="#CCCCCC"> isn't unboxed it</font>

266
00:11:06,720 --> 00:11:10,810
<font color="#E5E5E5">that MacBook has been previously</font>

267
00:11:09,010 --> 00:11:15,910
configured by<font color="#E5E5E5"> the employer to</font><font color="#CCCCCC"> set itself</font>

268
00:11:10,810 --> 00:11:17,739
up automatically via depth and MDM so

269
00:11:15,910 --> 00:11:20,050
<font color="#CCCCCC">dep</font><font color="#E5E5E5"> and MDM enrollment on the</font><font color="#CCCCCC"> Mac</font>

270
00:11:17,740 --> 00:11:22,180
involves many different agents<font color="#CCCCCC"> daemons</font>

271
00:11:20,050 --> 00:11:25,510
<font color="#CCCCCC">it's a bit of a confusing maelstrom of</font>

272
00:11:22,180 --> 00:11:27,040
<font color="#E5E5E5">dynamic linking and IPC however a there</font>

273
00:11:25,510 --> 00:11:28,660
is very conveniently a single framework

274
00:11:27,040 --> 00:11:31,089
<font color="#E5E5E5">that abstract away all that complexity</font>

275
00:11:28,660 --> 00:11:34,329
for us<font color="#E5E5E5"> that is the private configuration</font>

276
00:11:31,089 --> 00:11:35,950
profiles framework<font color="#CCCCCC"> this gives you a set</font>

277
00:11:34,330 --> 00:11:37,060
<font color="#CCCCCC">of functions that</font><font color="#E5E5E5"> map really well to the</font>

278
00:11:35,950 --> 00:11:41,980
steps that we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> over today</font>

279
00:11:37,060 --> 00:11:43,270
so<font color="#CCCCCC"> if you ever seen this screen</font><font color="#E5E5E5"> then</font>

280
00:11:41,980 --> 00:11:45,880
you've seen what<font color="#CCCCCC"> it's called the</font><font color="#E5E5E5"> setup</font>

281
00:11:43,270 --> 00:11:48,399
<font color="#CCCCCC">assistant or internally nicknamed Mac</font>

282
00:11:45,880 --> 00:11:49,750
buddy<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the the</font><font color="#CCCCCC"> app this is</font>

283
00:11:48,399 --> 00:11:50,950
<font color="#E5E5E5">actually a cocoa application this is the</font>

284
00:11:49,750 --> 00:11:54,910
first thing<font color="#E5E5E5"> you see when you turn on</font><font color="#CCCCCC"> the</font>

285
00:11:50,950 --> 00:11:57,640
<font color="#CCCCCC">device so that is</font><font color="#E5E5E5"> its icon complete with</font>

286
00:11:54,910 --> 00:11:58,899
bowtie<font color="#E5E5E5"> the Mac OS setup assistant is one</font>

287
00:11:57,640 --> 00:12:01,689
of the<font color="#E5E5E5"> users</font><font color="#CCCCCC"> of this framework and</font>

288
00:11:58,899 --> 00:12:03,730
that's<font color="#E5E5E5"> how it enables Depp in MDM</font>

289
00:12:01,690 --> 00:12:04,930
enrollments so to<font color="#E5E5E5"> simplify our view</font>

290
00:12:03,730 --> 00:12:06,880
today we're going<font color="#E5E5E5"> to take the point of</font>

291
00:12:04,930 --> 00:12:09,430
view<font color="#E5E5E5"> of the max of assistant we're going</font>

292
00:12:06,880 --> 00:12:12,790
to use that<font color="#E5E5E5"> framework as a lens to look</font>

293
00:12:09,430 --> 00:12:15,130
at each step so let's<font color="#E5E5E5"> recap</font><font color="#CCCCCC"> so we have</font>

294
00:12:12,790 --> 00:12:17,649
four steps to go over<font color="#E5E5E5"> the first one is</font>

295
00:12:15,130 --> 00:12:20,770
the DP<font color="#CCCCCC"> check-in now</font><font color="#E5E5E5"> the purpose of this</font>

296
00:12:17,649 --> 00:12:24,100
step<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> verify whether the device is</font>

297
00:12:20,770 --> 00:12:27,029
DP enabled<font color="#E5E5E5"> and if so we we have to sort</font>

298
00:12:24,100 --> 00:12:29,290
<font color="#CCCCCC">of take</font><font color="#E5E5E5"> special action so in this step</font>

299
00:12:27,029 --> 00:12:31,600
<font color="#E5E5E5">internally this is called retrieving the</font>

300
00:12:29,290 --> 00:12:33,699
activation record now<font color="#CCCCCC"> Jessie detailed</font>

301
00:12:31,600 --> 00:12:35,560
what a<font color="#E5E5E5"> depth profile is that</font><font color="#CCCCCC"> is roughly</font>

302
00:12:33,700 --> 00:12:37,560
the<font color="#E5E5E5"> internal name for a depth profile it</font>

303
00:12:35,560 --> 00:12:41,979
contains almost<font color="#E5E5E5"> all the same information</font>

304
00:12:37,560 --> 00:12:43,839
<font color="#CCCCCC">this is implemented</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> a demon</font>

305
00:12:41,980 --> 00:12:45,970
underlying the configuration profiles

306
00:12:43,839 --> 00:12:47,970
framework and a bit of a quick note

307
00:12:45,970 --> 00:12:51,129
this is a pretty common<font color="#CCCCCC"> mac OS pattern</font>

308
00:12:47,970 --> 00:12:53,740
<font color="#CCCCCC">in order to guarantee privilege</font><font color="#E5E5E5"> and</font>

309
00:12:51,129 --> 00:12:55,329
process separation<font color="#E5E5E5"> Apple will typically</font>

310
00:12:53,740 --> 00:12:56,949
farm out work to<font color="#E5E5E5"> do</font>

311
00:12:55,329 --> 00:12:58,810
<font color="#CCCCCC">daemons</font><font color="#E5E5E5"> under the hood</font><font color="#CCCCCC"> that have</font>

312
00:12:56,949 --> 00:13:00,699
specific entitlements allowing them to

313
00:12:58,810 --> 00:13:02,469
do the<font color="#E5E5E5"> work and so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> configuration</font>

314
00:13:00,699 --> 00:13:04,479
profiles framework itself<font color="#E5E5E5"> doesn't really</font>

315
00:13:02,470 --> 00:13:06,490
<font color="#E5E5E5">do</font><font color="#CCCCCC"> anything here it just signals an</font>

316
00:13:04,480 --> 00:13:09,009
underlying<font color="#CCCCCC"> daemon</font><font color="#E5E5E5"> to do some extra</font><font color="#CCCCCC"> work</font>

317
00:13:06,490 --> 00:13:11,170
now this step will begin as soon as<font color="#E5E5E5"> the</font>

318
00:13:09,009 --> 00:13:14,259
device is<font color="#CCCCCC"> connected</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> an so the second</font>

319
00:13:11,170 --> 00:13:16,389
it has a network reachable or<font color="#CCCCCC"> internet</font>

320
00:13:14,259 --> 00:13:19,029
reachable IP<font color="#E5E5E5"> it will it will begin to</font>

321
00:13:16,389 --> 00:13:21,459
<font color="#E5E5E5">attempt checking in this is driven by</font>

322
00:13:19,029 --> 00:13:23,980
<font color="#CCCCCC">the private</font><font color="#E5E5E5"> CP fetch activation record</font>

323
00:13:21,459 --> 00:13:26,079
function<font color="#CCCCCC"> and as I said</font><font color="#E5E5E5"> it's implemented</font>

324
00:13:23,980 --> 00:13:28,420
by a demon called cloud configuration D

325
00:13:26,079 --> 00:13:31,449
<font color="#E5E5E5">now this is a launch daemon which is Mac</font>

326
00:13:28,420 --> 00:13:34,329
OS<font color="#CCCCCC"> bling go</font><font color="#E5E5E5"> for it runs as</font><font color="#CCCCCC"> route and and</font>

327
00:13:31,449 --> 00:13:38,019
can and<font color="#E5E5E5"> can be kept constantly running</font>

328
00:13:34,329 --> 00:13:41,469
and it is signaled through<font color="#E5E5E5"> Mac OS</font>

329
00:13:38,019 --> 00:13:42,970
specific<font color="#CCCCCC"> IPC called</font><font color="#E5E5E5"> X PC which if you've</font>

330
00:13:41,470 --> 00:13:44,230
if you've<font color="#E5E5E5"> done any kind of iOS</font>

331
00:13:42,970 --> 00:13:46,209
development<font color="#E5E5E5"> or Mac development before</font>

332
00:13:44,230 --> 00:13:50,139
<font color="#E5E5E5">you are either directly</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> indirectly</font>

333
00:13:46,209 --> 00:13:52,029
<font color="#CCCCCC">aware</font><font color="#E5E5E5"> of so let's go back</font><font color="#CCCCCC"> to our fancy</font>

334
00:13:50,139 --> 00:13:53,290
architecture<font color="#E5E5E5"> diagram so we have setup</font>

335
00:13:52,029 --> 00:13:57,100
<font color="#E5E5E5">assistant which is now linked the</font>

336
00:13:53,290 --> 00:13:58,569
framework<font color="#E5E5E5"> and it is ready to call the</font>

337
00:13:57,100 --> 00:14:00,879
<font color="#E5E5E5">function to retrieve the activation</font>

338
00:13:58,569 --> 00:14:03,128
record<font color="#E5E5E5"> so at this point</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> sends a</font>

339
00:14:00,879 --> 00:14:05,319
<font color="#CCCCCC">message to cloud configuration D over X</font>

340
00:14:03,129 --> 00:14:07,839
PC to say well you should<font color="#CCCCCC"> actually</font>

341
00:14:05,319 --> 00:14:09,939
implement the the<font color="#E5E5E5"> fetching process and</font>

342
00:14:07,839 --> 00:14:14,559
now we'll go<font color="#E5E5E5"> over exactly what happens</font>

343
00:14:09,939 --> 00:14:16,660
during<font color="#E5E5E5"> that process so at this point</font>

344
00:14:14,559 --> 00:14:19,120
<font color="#E5E5E5">before</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> make the request to Apple</font>

345
00:14:16,660 --> 00:14:21,939
to request<font color="#E5E5E5"> to to actually retrieve our</font>

346
00:14:19,120 --> 00:14:25,509
our depth profile<font color="#E5E5E5"> we need to establish a</font>

347
00:14:21,939 --> 00:14:27,189
<font color="#CCCCCC">rather peculiar type of encryption</font><font color="#E5E5E5"> which</font>

348
00:14:25,509 --> 00:14:29,740
is internally called absinthe there's

349
00:14:27,189 --> 00:14:32,199
the object<font color="#E5E5E5"> in cloud configuration</font><font color="#CCCCCC"> V that</font>

350
00:14:29,740 --> 00:14:34,600
runs this is internally<font color="#E5E5E5"> called MC Tesla</font>

351
00:14:32,199 --> 00:14:36,099
configuration fetcher which is partly<font color="#E5E5E5"> so</font>

352
00:14:34,600 --> 00:14:39,399
pretty well named

353
00:14:36,100 --> 00:14:41,980
so this manages a<font color="#E5E5E5"> five step process the</font>

354
00:14:39,399 --> 00:14:44,319
first<font color="#E5E5E5"> step is to plainly retrieve a</font>

355
00:14:41,980 --> 00:14:46,269
certificate from<font color="#E5E5E5"> Apple's servers now one</font>

356
00:14:44,319 --> 00:14:47,649
quick<font color="#CCCCCC"> note on this absinthe is a rather</font>

357
00:14:46,269 --> 00:14:49,600
complex topic and<font color="#E5E5E5"> we're not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font>

358
00:14:47,649 --> 00:14:52,029
<font color="#CCCCCC">into much detail but we'll go over</font><font color="#E5E5E5"> the</font>

359
00:14:49,600 --> 00:14:54,429
sort of<font color="#E5E5E5"> basic</font><font color="#CCCCCC"> steps</font><font color="#E5E5E5"> here so</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> it</font>

360
00:14:52,029 --> 00:14:55,839
retrieves a certificate<font color="#E5E5E5"> next it uses</font>

361
00:14:54,429 --> 00:14:58,389
<font color="#E5E5E5">that certificate to initialize the</font>

362
00:14:55,839 --> 00:14:59,320
<font color="#E5E5E5">internal state</font><font color="#CCCCCC"> of absinthe</font><font color="#E5E5E5"> this is</font>

363
00:14:58,389 --> 00:15:01,600
called<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is through</font>

364
00:14:59,320 --> 00:15:04,210
function called<font color="#CCCCCC"> NEC</font><font color="#E5E5E5"> in it this</font>

365
00:15:01,600 --> 00:15:06,310
interestingly<font color="#E5E5E5"> also uses various device</font>

366
00:15:04,210 --> 00:15:08,170
specific<font color="#E5E5E5"> pieces</font><font color="#CCCCCC"> of data</font><font color="#E5E5E5"> things like the</font>

367
00:15:06,310 --> 00:15:10,810
serial number which we<font color="#CCCCCC"> retrieves vio kit</font>

368
00:15:08,170 --> 00:15:12,910
but<font color="#E5E5E5"> also</font><font color="#CCCCCC"> MAC address and others</font>

369
00:15:10,810 --> 00:15:15,400
now with that data once the

370
00:15:12,910 --> 00:15:17,730
initialization<font color="#CCCCCC"> is complete it posts the</font>

371
00:15:15,400 --> 00:15:20,829
essentially<font color="#CCCCCC"> that raw data back to Apple</font>

372
00:15:17,730 --> 00:15:22,540
<font color="#CCCCCC">via the session endpoint we're not</font>

373
00:15:20,830 --> 00:15:23,980
exactly sure<font color="#CCCCCC"> what this</font><font color="#E5E5E5"> does but it</font>

374
00:15:22,540 --> 00:15:26,319
appears that<font color="#E5E5E5"> an extra handshake is</font>

375
00:15:23,980 --> 00:15:29,380
necessary to ensure<font color="#CCCCCC"> the device is who it</font>

376
00:15:26,320 --> 00:15:31,840
says it is<font color="#CCCCCC"> and</font><font color="#E5E5E5"> finally with the result</font>

377
00:15:29,380 --> 00:15:33,400
of that<font color="#CCCCCC"> it find it calls NEC key</font>

378
00:15:31,840 --> 00:15:35,560
establishment<font color="#CCCCCC"> which completes the</font>

379
00:15:33,400 --> 00:15:37,600
initialization<font color="#E5E5E5"> for the encryption now</font>

380
00:15:35,560 --> 00:15:39,969
what we believe is that absence job is

381
00:15:37,600 --> 00:15:42,850
to provide a way<font color="#E5E5E5"> to encode on a per</font>

382
00:15:39,970 --> 00:15:46,710
device basis<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> to relatively</font>

383
00:15:42,850 --> 00:15:49,120
securely identify a device for Apple and

384
00:15:46,710 --> 00:15:51,130
finally now<font color="#CCCCCC"> that the encryption is ready</font>

385
00:15:49,120 --> 00:15:54,400
we're<font color="#CCCCCC"> ready to make</font><font color="#E5E5E5"> the request</font><font color="#CCCCCC"> the last</font>

386
00:15:51,130 --> 00:15:57,430
step is<font color="#E5E5E5"> to make a post including</font><font color="#CCCCCC"> a JSON</font>

387
00:15:54,400 --> 00:15:59,740
payload to the<font color="#CCCCCC"> mac profile endpoint what</font>

388
00:15:57,430 --> 00:16:02,260
<font color="#E5E5E5">this will do</font><font color="#CCCCCC"> is take the example JSON</font>

389
00:15:59,740 --> 00:16:05,530
payload below it will encrypt it using

390
00:16:02,260 --> 00:16:09,970
<font color="#CCCCCC">absinthe base64 it sign it and send it</font>

391
00:16:05,530 --> 00:16:12,339
<font color="#E5E5E5">over over HTTP so let's go back to</font>

392
00:16:09,970 --> 00:16:13,540
architecture diagram again now as you

393
00:16:12,340 --> 00:16:15,010
can see cloud configuration D is

394
00:16:13,540 --> 00:16:17,829
interacting with<font color="#E5E5E5"> apple of this step and</font>

395
00:16:15,010 --> 00:16:19,120
it's<font color="#E5E5E5"> using both TLS with the standard</font>

396
00:16:17,830 --> 00:16:22,270
<font color="#CCCCCC">root certificates installed on the</font>

397
00:16:19,120 --> 00:16:25,600
device<font color="#E5E5E5"> along with the extra layer of</font>

398
00:16:22,270 --> 00:16:27,520
absinthe encryption<font color="#E5E5E5"> and at this point</font><font color="#CCCCCC"> it</font>

399
00:16:25,600 --> 00:16:29,740
<font color="#CCCCCC">basically says I am this device I am the</font>

400
00:16:27,520 --> 00:16:31,600
serial number<font color="#CCCCCC"> what is my activation</font>

401
00:16:29,740 --> 00:16:35,650
<font color="#E5E5E5">record what is my profile should I be</font>

402
00:16:31,600 --> 00:16:37,810
enabling<font color="#E5E5E5"> them now in response the server</font>

403
00:16:35,650 --> 00:16:40,180
provides a<font color="#E5E5E5"> JSON dictionary that is</font>

404
00:16:37,810 --> 00:16:42,849
essentially a slightly differently

405
00:16:40,180 --> 00:16:44,170
formatted version<font color="#E5E5E5"> of the DP profile</font><font color="#CCCCCC"> and</font>

406
00:16:42,850 --> 00:16:45,520
this includes what<font color="#E5E5E5"> Jesse mentioned</font>

407
00:16:44,170 --> 00:16:47,800
things like customizing the setup

408
00:16:45,520 --> 00:16:49,960
assistant but most importantly this

409
00:16:47,800 --> 00:16:52,599
includes two fields that<font color="#E5E5E5"> will unlock the</font>

410
00:16:49,960 --> 00:16:55,090
<font color="#CCCCCC">next step</font><font color="#E5E5E5"> the first one is the URL of</font>

411
00:16:52,600 --> 00:16:56,740
<font color="#CCCCCC">the MDM vendors activation profile</font>

412
00:16:55,090 --> 00:16:58,450
endpoint<font color="#CCCCCC"> will go into exactly what that</font>

413
00:16:56,740 --> 00:17:01,060
means<font color="#E5E5E5"> but</font><font color="#CCCCCC"> that's the</font><font color="#E5E5E5"> main thing that</font>

414
00:16:58,450 --> 00:17:04,510
will enable the next<font color="#E5E5E5"> step to occur but</font>

415
00:17:01,060 --> 00:17:06,579
most importantly it also returns the<font color="#CCCCCC"> def</font>

416
00:17:04,510 --> 00:17:09,220
profiles<font color="#CCCCCC"> anchor certs property meaning</font>

417
00:17:06,579 --> 00:17:11,889
<font color="#E5E5E5">for</font><font color="#CCCCCC"> that URL</font><font color="#E5E5E5"> that is referring</font><font color="#CCCCCC"> to an MDM</font>

418
00:17:09,220 --> 00:17:13,150
vendor endpoint<font color="#CCCCCC"> you can also provide</font><font color="#E5E5E5"> dr</font>

419
00:17:11,890 --> 00:17:16,060
encoded certificates

420
00:17:13,150 --> 00:17:18,130
to pin that next<font color="#E5E5E5"> request</font><font color="#CCCCCC"> and so so</font><font color="#E5E5E5"> far</font>

421
00:17:16,060 --> 00:17:20,639
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> able to validate server</font><font color="#E5E5E5"> trust and</font>

422
00:17:18,130 --> 00:17:24,070
<font color="#CCCCCC">we'll be able to</font><font color="#E5E5E5"> continue</font><font color="#CCCCCC"> to do so so</font>

423
00:17:20,640 --> 00:17:26,680
<font color="#CCCCCC">going back</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> overall process we now</font>

424
00:17:24,069 --> 00:17:29,350
know that<font color="#E5E5E5"> we mate we are</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> DP device or</font>

425
00:17:26,680 --> 00:17:31,930
<font color="#E5E5E5">not now what's next</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> step is called</font>

426
00:17:29,350 --> 00:17:33,550
profile retrieval<font color="#CCCCCC"> in this step we'll be</font>

427
00:17:31,930 --> 00:17:36,100
retrieving the configuration profile

428
00:17:33,550 --> 00:17:39,940
from the MDM vendor directly<font color="#CCCCCC"> so we're</font>

429
00:17:36,100 --> 00:17:42,310
done<font color="#E5E5E5"> talking to</font><font color="#CCCCCC"> Apple for now so you've</font>

430
00:17:39,940 --> 00:17:43,480
ever seen this<font color="#E5E5E5"> screen</font><font color="#CCCCCC"> this is actually</font>

431
00:17:42,310 --> 00:17:46,570
the screen that indicates<font color="#CCCCCC"> that your</font>

432
00:17:43,480 --> 00:17:48,460
<font color="#E5E5E5">depth profile has enrolled you into DEP</font>

433
00:17:46,570 --> 00:17:51,310
once the activation<font color="#E5E5E5"> record is downloaded</font>

434
00:17:48,460 --> 00:17:53,260
<font color="#E5E5E5">this will appear it is possible to allow</font>

435
00:17:51,310 --> 00:17:54,970
<font color="#E5E5E5">users to skip this in case they don't</font>

436
00:17:53,260 --> 00:17:56,740
<font color="#E5E5E5">want enrollment but it's also possible</font>

437
00:17:54,970 --> 00:18:01,360
to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> mandatory so in this case you</font>

438
00:17:56,740 --> 00:18:03,430
can see that<font color="#CCCCCC"> there's no skip button so</font>

439
00:18:01,360 --> 00:18:04,990
in this step we need<font color="#CCCCCC"> to retrieve the</font>

440
00:18:03,430 --> 00:18:06,880
activation profile<font color="#E5E5E5"> now what is an</font>

441
00:18:04,990 --> 00:18:09,610
activation profile<font color="#E5E5E5"> that is the internal</font>

442
00:18:06,880 --> 00:18:12,160
name<font color="#E5E5E5"> for ADP delivered configuration</font>

443
00:18:09,610 --> 00:18:14,560
profile so<font color="#CCCCCC"> Jessie detailed config</font>

444
00:18:12,160 --> 00:18:17,800
profiles earlier those are a rather

445
00:18:14,560 --> 00:18:19,270
versatile<font color="#CCCCCC"> P list-based files that</font>

446
00:18:17,800 --> 00:18:21,159
contain multiple<font color="#E5E5E5"> payloads that can be</font>

447
00:18:19,270 --> 00:18:23,260
installed<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> device</font><font color="#E5E5E5"> now for MDM</font>

448
00:18:21,160 --> 00:18:25,210
purposes<font color="#CCCCCC"> this is a little bit more</font>

449
00:18:23,260 --> 00:18:27,700
restricted but and we'll go we'll<font color="#E5E5E5"> go</font>

450
00:18:25,210 --> 00:18:29,110
into that<font color="#CCCCCC"> in a sec</font><font color="#E5E5E5"> this step will begin</font>

451
00:18:27,700 --> 00:18:32,290
<font color="#CCCCCC">immediately as soon as the user</font><font color="#E5E5E5"> clicks</font>

452
00:18:29,110 --> 00:18:33,820
<font color="#E5E5E5">next it's driven by another function</font><font color="#CCCCCC"> in</font>

453
00:18:32,290 --> 00:18:35,940
configuration profiles<font color="#E5E5E5"> dot framework</font>

454
00:18:33,820 --> 00:18:38,320
called CP<font color="#E5E5E5"> get activation profile</font>

455
00:18:35,940 --> 00:18:40,180
unsurprisingly<font color="#E5E5E5"> however this one is</font><font color="#CCCCCC"> not</font>

456
00:18:38,320 --> 00:18:42,760
implemented<font color="#E5E5E5"> by cloud configuration D</font>

457
00:18:40,180 --> 00:18:44,530
this<font color="#E5E5E5"> time it's implemented by a somewhat</font>

458
00:18:42,760 --> 00:18:47,020
older component of the OS<font color="#E5E5E5"> called manage</font>

459
00:18:44,530 --> 00:18:49,030
client app<font color="#E5E5E5"> so in fact this is actually</font>

460
00:18:47,020 --> 00:18:51,639
<font color="#E5E5E5">part of the older</font><font color="#CCCCCC"> mcx infrastructure</font>

461
00:18:49,030 --> 00:18:54,100
that<font color="#E5E5E5"> predates much of this today's</font>

462
00:18:51,640 --> 00:18:56,350
modern MDM<font color="#CCCCCC"> what's also interesting is</font><font color="#E5E5E5"> it</font>

463
00:18:54,100 --> 00:18:58,570
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> X PC this time it uses</font><font color="#E5E5E5"> MIG</font>

464
00:18:56,350 --> 00:19:01,719
which is a much older IPC mechanism<font color="#CCCCCC"> on</font>

465
00:18:58,570 --> 00:19:04,210
<font color="#E5E5E5">Mac OS this is also a launch daemon</font>

466
00:19:01,720 --> 00:19:06,670
<font color="#E5E5E5">running as root though it can delegate</font>

467
00:19:04,210 --> 00:19:09,610
<font color="#CCCCCC">to per user tasks in some scenarios</font>

468
00:19:06,670 --> 00:19:11,530
however in this<font color="#CCCCCC"> case there</font><font color="#E5E5E5"> is no user on</font>

469
00:19:09,610 --> 00:19:13,120
the device yet<font color="#E5E5E5"> and so almost all of the</font>

470
00:19:11,530 --> 00:19:16,389
work happening in<font color="#E5E5E5"> the demons will</font><font color="#CCCCCC"> be</font>

471
00:19:13,120 --> 00:19:18,040
happening as root the implementation

472
00:19:16,390 --> 00:19:23,140
here in case<font color="#CCCCCC"> you're you want</font><font color="#E5E5E5"> to go</font>

473
00:19:18,040 --> 00:19:25,629
smoothing is is the<font color="#E5E5E5"> following so what</font>

474
00:19:23,140 --> 00:19:26,890
exactly happens<font color="#E5E5E5"> to in this step so we</font>

475
00:19:25,630 --> 00:19:30,100
send a request<font color="#E5E5E5"> in the URL</font><font color="#CCCCCC"> that was</font>

476
00:19:26,890 --> 00:19:32,080
provided earlier that URL is pointing to

477
00:19:30,100 --> 00:19:33,939
an MDM<font color="#E5E5E5"> vendor server somewhere and its</font>

478
00:19:32,080 --> 00:19:35,560
<font color="#E5E5E5">job</font><font color="#CCCCCC"> is to return</font><font color="#E5E5E5"> a configuration profile</font>

479
00:19:33,940 --> 00:19:38,470
<font color="#E5E5E5">and again</font><font color="#CCCCCC"> if the anchor certificates</font>

480
00:19:35,560 --> 00:19:40,540
were provided<font color="#E5E5E5"> the implementation will</font>

481
00:19:38,470 --> 00:19:43,150
actually pin<font color="#E5E5E5"> using</font><font color="#CCCCCC"> those certs and</font><font color="#E5E5E5"> we</font>

482
00:19:40,540 --> 00:19:45,220
validated<font color="#E5E5E5"> that that is the case</font><font color="#CCCCCC"> now a</font>

483
00:19:43,150 --> 00:19:48,610
request is a very simple property list

484
00:19:45,220 --> 00:19:50,560
containing up to<font color="#CCCCCC"> seven keys</font><font color="#E5E5E5"> providing</font>

485
00:19:48,610 --> 00:19:52,000
device identification<font color="#CCCCCC"> so while the</font>

486
00:19:50,560 --> 00:19:54,070
device is identified with<font color="#E5E5E5"> Apple already</font>

487
00:19:52,000 --> 00:19:55,960
<font color="#E5E5E5">and now has to prove who it is to the</font>

488
00:19:54,070 --> 00:19:58,320
MDM vendor<font color="#E5E5E5"> and in this case it will</font>

489
00:19:55,960 --> 00:20:01,480
provide a serial<font color="#CCCCCC"> number</font><font color="#E5E5E5"> but also a UDID</font>

490
00:19:58,320 --> 00:20:02,700
OS version<font color="#E5E5E5"> product name</font><font color="#CCCCCC"> that kind of</font>

491
00:20:01,480 --> 00:20:05,500
information

492
00:20:02,700 --> 00:20:07,840
now the that<font color="#E5E5E5"> request payload is</font>

493
00:20:05,500 --> 00:20:10,480
interesting<font color="#CCCCCC"> lis</font><font color="#E5E5E5"> CMS signs and D are</font>

494
00:20:07,840 --> 00:20:12,220
encoded<font color="#E5E5E5"> it is signed using the</font><font color="#CCCCCC"> device's</font>

495
00:20:10,480 --> 00:20:16,150
identity certificate that's part of

496
00:20:12,220 --> 00:20:18,820
Apple push service<font color="#E5E5E5"> interestingly it also</font>

497
00:20:16,150 --> 00:20:21,900
includes supplementary certificates<font color="#E5E5E5"> in</font>

498
00:20:18,820 --> 00:20:24,790
order for we<font color="#E5E5E5"> believe to validate them</font>

499
00:20:21,900 --> 00:20:27,250
but that certificate<font color="#E5E5E5"> chain includes an X</font>

500
00:20:24,790 --> 00:20:29,950
and<font color="#CCCCCC"> E now</font><font color="#E5E5E5"> expired Apple iPhone device CA</font>

501
00:20:27,250 --> 00:20:34,450
<font color="#E5E5E5">it is unclear why that is still the case</font>

502
00:20:29,950 --> 00:20:37,180
<font color="#E5E5E5">it is likely a very</font><font color="#CCCCCC"> good story so let's</font>

503
00:20:34,450 --> 00:20:39,010
go back<font color="#CCCCCC"> to the architecture and at this</font>

504
00:20:37,180 --> 00:20:41,230
point<font color="#CCCCCC"> manage client is ready to talk</font><font color="#E5E5E5"> to</font>

505
00:20:39,010 --> 00:20:43,690
MDM<font color="#E5E5E5"> and it's as well this is who I am</font>

506
00:20:41,230 --> 00:20:45,880
<font color="#CCCCCC">and what</font><font color="#E5E5E5"> is my configuration profile</font>

507
00:20:43,690 --> 00:20:48,850
which the MDM vendor can now provide in

508
00:20:45,880 --> 00:20:50,320
response<font color="#E5E5E5"> now in this case</font><font color="#CCCCCC"> TLS is used</font>

509
00:20:48,850 --> 00:20:54,750
and the anchor<font color="#E5E5E5"> certs will be used to pin</font>

510
00:20:50,320 --> 00:20:54,750
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> consider this step as being secure</font>

511
00:20:55,110 --> 00:20:59,290
all right<font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> on to step 6</font>

512
00:20:57,460 --> 00:21:01,420
<font color="#E5E5E5">we have the</font><font color="#CCCCCC"> configuration profile we</font>

513
00:20:59,290 --> 00:21:03,460
know we're in<font color="#E5E5E5"> VP what do we do next well</font>

514
00:21:01,420 --> 00:21:05,470
config profiles now have to be installed

515
00:21:03,460 --> 00:21:07,000
<font color="#CCCCCC">now as a quick reminder a</font><font color="#E5E5E5"> configuration</font>

516
00:21:05,470 --> 00:21:08,740
profile can<font color="#E5E5E5"> be installed in many ways on</font>

517
00:21:07,000 --> 00:21:10,630
Mac you can get it automatically<font color="#E5E5E5"> through</font>

518
00:21:08,740 --> 00:21:12,100
DP<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually download it and</font>

519
00:21:10,630 --> 00:21:15,820
<font color="#E5E5E5">double clicking on your desktop which</font><font color="#CCCCCC"> is</font>

520
00:21:12,100 --> 00:21:18,370
how some small startups IT departments

521
00:21:15,820 --> 00:21:20,050
might<font color="#E5E5E5"> operate you can also retrieve it</font>

522
00:21:18,370 --> 00:21:22,780
<font color="#E5E5E5">you can also receive one through MDM</font>

523
00:21:20,050 --> 00:21:25,930
itself<font color="#E5E5E5"> which lends to that leads to some</font>

524
00:21:22,780 --> 00:21:27,750
fun recursiveness later but now that we

525
00:21:25,930 --> 00:21:30,490
<font color="#E5E5E5">have a profile we have to install</font><font color="#CCCCCC"> it now</font>

526
00:21:27,750 --> 00:21:32,590
<font color="#CCCCCC">once it's</font><font color="#E5E5E5"> approved</font><font color="#CCCCCC"> the profile</font><font color="#E5E5E5"> is stored</font>

527
00:21:30,490 --> 00:21:34,180
<font color="#E5E5E5">on</font><font color="#CCCCCC"> the system the location is</font><font color="#E5E5E5"> not super</font>

528
00:21:32,590 --> 00:21:36,790
relevant<font color="#E5E5E5"> but what is interesting is</font><font color="#CCCCCC"> that</font>

529
00:21:34,180 --> 00:21:39,400
it is system integrity protected<font color="#CCCCCC"> what</font>

530
00:21:36,790 --> 00:21:40,600
that means in<font color="#CCCCCC"> case you're unfamiliar sip</font>

531
00:21:39,400 --> 00:21:42,820
is a mechanism<font color="#CCCCCC"> entry</font>

532
00:21:40,600 --> 00:21:45,280
in Mac OS Sierra<font color="#CCCCCC"> I believe which allows</font>

533
00:21:42,820 --> 00:21:47,080
the protection of system folders and so

534
00:21:45,280 --> 00:21:48,910
no one including root processes can

535
00:21:47,080 --> 00:21:52,179
write to those folders<font color="#E5E5E5"> so technically</font>

536
00:21:48,910 --> 00:21:53,800
the profile is secure<font color="#CCCCCC"> now this step</font><font color="#E5E5E5"> will</font>

537
00:21:52,180 --> 00:21:55,390
begin automatically as soon<font color="#CCCCCC"> as the</font>

538
00:21:53,800 --> 00:21:58,600
<font color="#E5E5E5">profiles retrieved if</font><font color="#CCCCCC"> your instead of</font>

539
00:21:55,390 --> 00:22:00,430
assistant now again this<font color="#CCCCCC"> also maps to a</font>

540
00:21:58,600 --> 00:22:04,209
function in<font color="#E5E5E5"> configuration profiles dot</font>

541
00:22:00,430 --> 00:22:06,790
framework<font color="#CCCCCC"> which</font><font color="#E5E5E5"> again is aptly named CP</font>

542
00:22:04,210 --> 00:22:09,160
install activation profile interestingly

543
00:22:06,790 --> 00:22:12,270
this<font color="#CCCCCC"> is implemented by yet</font><font color="#E5E5E5"> another demon</font>

544
00:22:09,160 --> 00:22:14,620
called<font color="#E5E5E5"> MDM clients which again is</font>

545
00:22:12,270 --> 00:22:18,220
relatively<font color="#E5E5E5"> a recent so this one's using</font>

546
00:22:14,620 --> 00:22:20,649
XP<font color="#E5E5E5"> see now it can run either as launch</font>

547
00:22:18,220 --> 00:22:23,070
daemon so meaning as root or as launch

548
00:22:20,650 --> 00:22:25,810
or as a launch agent<font color="#E5E5E5"> meaning as a user</font>

549
00:22:23,070 --> 00:22:27,820
<font color="#CCCCCC">depending</font><font color="#E5E5E5"> on the context in</font><font color="#CCCCCC"> our context</font>

550
00:22:25,810 --> 00:22:32,110
so in in our scenario<font color="#CCCCCC"> it</font><font color="#E5E5E5"> will be running</font>

551
00:22:27,820 --> 00:22:34,179
<font color="#E5E5E5">as root so a quick refresher on</font>

552
00:22:32,110 --> 00:22:36,490
<font color="#E5E5E5">configuration profiles they are these</font>

553
00:22:34,180 --> 00:22:39,130
large<font color="#E5E5E5"> XML documents they</font><font color="#CCCCCC"> can contain</font>

554
00:22:36,490 --> 00:22:40,690
multiple<font color="#E5E5E5"> payloads</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the installation</font>

555
00:22:39,130 --> 00:22:43,120
of a profile essentially amounts to

556
00:22:40,690 --> 00:22:46,150
looping over<font color="#E5E5E5"> the payloads and installing</font>

557
00:22:43,120 --> 00:22:47,679
<font color="#E5E5E5">each one one at a time now</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> framework</font>

558
00:22:46,150 --> 00:22:51,160
<font color="#E5E5E5">to do so has a plug-in based</font>

559
00:22:47,680 --> 00:22:53,170
architecture each payload type is

560
00:22:51,160 --> 00:22:56,590
<font color="#E5E5E5">associated with a plug-in and so for</font>

561
00:22:53,170 --> 00:22:58,750
<font color="#E5E5E5">example the certificate payloads</font><font color="#CCCCCC"> so if</font>

562
00:22:56,590 --> 00:23:01,030
you are using the<font color="#E5E5E5"> configuration profile</font>

563
00:22:58,750 --> 00:23:03,250
to deliver a certificate will<font color="#CCCCCC"> be</font>

564
00:23:01,030 --> 00:23:05,950
implemented or<font color="#E5E5E5"> will be installed by a</font>

565
00:23:03,250 --> 00:23:07,930
certificate<font color="#CCCCCC"> X</font><font color="#E5E5E5"> PC service now X PC</font>

566
00:23:05,950 --> 00:23:10,170
services are the modern way to<font color="#CCCCCC"> achieve</font>

567
00:23:07,930 --> 00:23:12,850
privilege separation on Mac OS

568
00:23:10,170 --> 00:23:15,100
interestingly<font color="#CCCCCC"> plugins can either be in</font>

569
00:23:12,850 --> 00:23:16,780
the<font color="#E5E5E5"> main framework or in the older</font>

570
00:23:15,100 --> 00:23:18,669
<font color="#E5E5E5">manager client application and so that</font>

571
00:23:16,780 --> 00:23:23,350
can make<font color="#E5E5E5"> things relatively confusing</font>

572
00:23:18,670 --> 00:23:25,990
<font color="#CCCCCC">when you're</font><font color="#E5E5E5"> looking for traces so</font>

573
00:23:23,350 --> 00:23:28,780
typically an activation profile<font color="#E5E5E5"> so a DP</font>

574
00:23:25,990 --> 00:23:31,300
delivered config profile will include if

575
00:23:28,780 --> 00:23:35,710
provided<font color="#CCCCCC"> by an MDM vendor</font><font color="#E5E5E5"> three payloads</font>

576
00:23:31,300 --> 00:23:37,480
<font color="#E5E5E5">now the top one</font><font color="#CCCCCC"> is expected</font><font color="#E5E5E5"> comm apple</font>

577
00:23:35,710 --> 00:23:39,850
MDM and this contains<font color="#E5E5E5"> these settings</font>

578
00:23:37,480 --> 00:23:41,880
necessary<font color="#E5E5E5"> to enroll the device in mobile</font>

579
00:23:39,850 --> 00:23:44,649
device management with<font color="#CCCCCC"> the MDM vendor</font>

580
00:23:41,880 --> 00:23:47,080
<font color="#CCCCCC">but</font><font color="#E5E5E5"> you can also include other</font><font color="#CCCCCC"> payloads</font>

581
00:23:44,650 --> 00:23:49,480
such<font color="#E5E5E5"> as</font><font color="#CCCCCC"> Skype to securely provide a</font>

582
00:23:47,080 --> 00:23:51,100
client certificate to the device<font color="#E5E5E5"> or p.m.</font>

583
00:23:49,480 --> 00:23:53,770
in the case where you<font color="#E5E5E5"> would want to</font>

584
00:23:51,100 --> 00:23:54,159
<font color="#E5E5E5">install a trusted</font><font color="#CCCCCC"> CA certificate to the</font>

585
00:23:53,770 --> 00:23:59,770
system

586
00:23:54,160 --> 00:24:01,900
keychain<font color="#E5E5E5"> so if you've ever read Apple's</font>

587
00:23:59,770 --> 00:24:04,420
public<font color="#E5E5E5"> documentation on the MDM protocol</font>

588
00:24:01,900 --> 00:24:06,790
<font color="#CCCCCC">in</font><font color="#E5E5E5"> installation of an MDM payload</font>

589
00:24:04,420 --> 00:24:09,100
<font color="#E5E5E5">actually it is actually equivalent to</font>

590
00:24:06,790 --> 00:24:12,220
<font color="#E5E5E5">what Apple calls the MDM check-in</font>

591
00:24:09,100 --> 00:24:14,860
protocol<font color="#E5E5E5"> now the what that essentially</font>

592
00:24:12,220 --> 00:24:17,320
<font color="#CCCCCC">does is sets up the device</font><font color="#E5E5E5"> for receiving</font>

593
00:24:14,860 --> 00:24:22,510
commands from an<font color="#E5E5E5"> MDM vendor the payload</font>

594
00:24:17,320 --> 00:24:24,580
in an MDM<font color="#CCCCCC"> pail or</font><font color="#E5E5E5"> the the MDM payload in</font>

595
00:24:22,510 --> 00:24:27,220
the<font color="#E5E5E5"> configuration profile will typically</font>

596
00:24:24,580 --> 00:24:28,629
include three important properties<font color="#E5E5E5"> first</font>

597
00:24:27,220 --> 00:24:30,640
<font color="#E5E5E5">there's going</font><font color="#CCCCCC"> to be the check-in URL</font>

598
00:24:28,630 --> 00:24:33,850
<font color="#E5E5E5">that will be used in the immediate and</font>

599
00:24:30,640 --> 00:24:36,760
as well as a command polling URL which

600
00:24:33,850 --> 00:24:39,760
<font color="#CCCCCC">will be used</font><font color="#E5E5E5"> later on that also includes</font>

601
00:24:36,760 --> 00:24:42,460
the APNs topic<font color="#E5E5E5"> that you can use to tell</font>

602
00:24:39,760 --> 00:24:46,090
the device via push notification to pull

603
00:24:42,460 --> 00:24:48,790
the command polling URL so to install

604
00:24:46,090 --> 00:24:51,270
<font color="#E5E5E5">the MDM payload</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> immediate a</font>

605
00:24:48,790 --> 00:24:57,330
request is<font color="#E5E5E5"> only sent to the check-in URL</font>

606
00:24:51,270 --> 00:25:00,760
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> again implemented in MDM client</font>

607
00:24:57,330 --> 00:25:02,860
what's important to remember<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is MDM</font>

608
00:25:00,760 --> 00:25:04,360
payloads<font color="#CCCCCC"> can actually depend</font><font color="#E5E5E5"> on other</font>

609
00:25:02,860 --> 00:25:06,909
<font color="#CCCCCC">payloads so you might be</font><font color="#E5E5E5"> asking yourself</font>

610
00:25:04,360 --> 00:25:09,669
<font color="#E5E5E5">now how do</font><font color="#CCCCCC"> I pin I've just introduced</font>

611
00:25:06,910 --> 00:25:11,200
two new URLs that are MDM vendors

612
00:25:09,670 --> 00:25:14,260
there's their third-party URLs that are

613
00:25:11,200 --> 00:25:16,960
<font color="#E5E5E5">not Apple signed so how do</font><font color="#CCCCCC"> I actually</font>

614
00:25:14,260 --> 00:25:19,570
<font color="#E5E5E5">pin those well the answer is is</font>

615
00:25:16,960 --> 00:25:21,670
fascinating<font color="#E5E5E5"> the MDM payload is allowed</font>

616
00:25:19,570 --> 00:25:24,909
to depend on other<font color="#CCCCCC"> payloads in the</font>

617
00:25:21,670 --> 00:25:27,480
<font color="#CCCCCC">configuration profile so for</font><font color="#E5E5E5"> example the</font>

618
00:25:24,910 --> 00:25:29,710
both the check-in and server URLs<font color="#E5E5E5"> have</font>

619
00:25:27,480 --> 00:25:31,810
matching properties<font color="#E5E5E5"> allowing you to</font>

620
00:25:29,710 --> 00:25:34,990
refer<font color="#CCCCCC"> to another payload by its</font><font color="#E5E5E5"> unique</font>

621
00:25:31,810 --> 00:25:37,659
identifier<font color="#CCCCCC"> and that essentially says the</font>

622
00:25:34,990 --> 00:25:40,750
certificate<font color="#E5E5E5"> in that payload included you</font>

623
00:25:37,660 --> 00:25:42,250
should pin using basically<font color="#CCCCCC"> the</font><font color="#E5E5E5"> other</font>

624
00:25:40,750 --> 00:25:44,380
important thing that<font color="#E5E5E5"> the payload has to</font>

625
00:25:42,250 --> 00:25:46,090
include<font color="#E5E5E5"> is an identity certificate each</font>

626
00:25:44,380 --> 00:25:47,890
device<font color="#CCCCCC"> has to have a certificate that</font>

627
00:25:46,090 --> 00:25:50,050
uniquely<font color="#E5E5E5"> identifies</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> this is mandatory</font>

628
00:25:47,890 --> 00:25:52,780
<font color="#CCCCCC">this is another property</font><font color="#E5E5E5"> in the MDM</font>

629
00:25:50,050 --> 00:25:55,450
payload and it's meant<font color="#E5E5E5"> to refer</font><font color="#CCCCCC"> to</font>

630
00:25:52,780 --> 00:25:56,800
another certificate<font color="#E5E5E5"> typically skep will</font>

631
00:25:55,450 --> 00:25:58,630
be used<font color="#CCCCCC"> though</font><font color="#E5E5E5"> it's I don't believe</font>

632
00:25:56,800 --> 00:26:00,700
that's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> only way</font><font color="#E5E5E5"> to achieve this it</font>

633
00:25:58,630 --> 00:26:06,080
<font color="#E5E5E5">is probably</font><font color="#CCCCCC"> the best way to achieve this</font>

634
00:26:00,700 --> 00:26:07,309
I guess<font color="#CCCCCC"> one</font><font color="#E5E5E5"> last thing on this it</font>

635
00:26:06,080 --> 00:26:09,260
<font color="#CCCCCC">I guess what's important here is that</font>

636
00:26:07,309 --> 00:26:11,629
<font color="#E5E5E5">you're essentially pinning</font><font color="#CCCCCC"> BIID you're</font>

637
00:26:09,260 --> 00:26:13,908
not pinging<font color="#E5E5E5"> by using a dr encoded list</font>

638
00:26:11,630 --> 00:26:17,720
of anchors<font color="#CCCCCC"> which is a little bit</font><font color="#E5E5E5"> easier</font>

639
00:26:13,909 --> 00:26:21,049
to do<font color="#CCCCCC"> so</font><font color="#E5E5E5"> going back</font><font color="#CCCCCC"> to our architecture</font>

640
00:26:17,720 --> 00:26:22,850
diagram the setup assistant requests

641
00:26:21,049 --> 00:26:24,980
through<font color="#E5E5E5"> configuration profiles that the</font>

642
00:26:22,850 --> 00:26:27,740
profile be installed<font color="#E5E5E5"> and so MDM client</font>

643
00:26:24,980 --> 00:26:30,380
receives that<font color="#CCCCCC"> fun fact here</font><font color="#E5E5E5"> it actually</font>

644
00:26:27,740 --> 00:26:31,850
<font color="#E5E5E5">loops back to itself</font><font color="#CCCCCC"> because of the</font>

645
00:26:30,380 --> 00:26:32,899
recursive<font color="#CCCCCC"> nature</font><font color="#E5E5E5"> of profiles but we're</font>

646
00:26:31,850 --> 00:26:35,000
not including<font color="#CCCCCC"> that</font><font color="#E5E5E5"> in the diagram</font>

647
00:26:32,899 --> 00:26:38,840
<font color="#CCCCCC">because that blew my mind</font>

648
00:26:35,000 --> 00:26:41,059
<font color="#E5E5E5">and it was not enjoyable</font><font color="#CCCCCC"> so the request</font>

649
00:26:38,840 --> 00:26:44,240
<font color="#E5E5E5">that's made here goes to the</font><font color="#CCCCCC"> check in</font>

650
00:26:41,059 --> 00:26:46,039
URL on the<font color="#E5E5E5"> MDM vendors servers but again</font>

651
00:26:44,240 --> 00:26:48,529
it<font color="#E5E5E5"> is TLS but it is pins with a</font>

652
00:26:46,039 --> 00:26:52,240
certificate<font color="#E5E5E5"> if you provided that ID and</font>

653
00:26:48,529 --> 00:26:55,760
so you have a way<font color="#CCCCCC"> of making this secure</font>

654
00:26:52,240 --> 00:26:59,120
and so now we get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the last</font><font color="#E5E5E5"> step at</font>

655
00:26:55,760 --> 00:27:04,700
this<font color="#E5E5E5"> stage the MDM server is ready to</font>

656
00:26:59,120 --> 00:27:06,559
send a provision devices commands<font color="#E5E5E5"> so</font>

657
00:27:04,700 --> 00:27:08,809
after the<font color="#E5E5E5"> check-in is complete</font><font color="#CCCCCC"> that</font>

658
00:27:06,559 --> 00:27:10,879
<font color="#CCCCCC">means that the push notification topic</font>

659
00:27:08,809 --> 00:27:13,039
is ready<font color="#E5E5E5"> and the device is</font><font color="#CCCCCC"> ready to</font>

660
00:27:10,880 --> 00:27:15,649
<font color="#E5E5E5">receive notifications once a</font>

661
00:27:13,039 --> 00:27:17,690
notification<font color="#CCCCCC"> is received MDM client</font>

662
00:27:15,649 --> 00:27:20,600
again that same process<font color="#CCCCCC"> will be handling</font>

663
00:27:17,690 --> 00:27:23,929
the<font color="#E5E5E5"> push and will in response</font><font color="#CCCCCC"> pull the</font>

664
00:27:20,600 --> 00:27:25,879
MDM server<font color="#CCCCCC"> using the</font><font color="#E5E5E5"> server URL property</font>

665
00:27:23,929 --> 00:27:28,210
of the payload<font color="#CCCCCC"> that was passed in now</font>

666
00:27:25,880 --> 00:27:30,289
this of course makes use of<font color="#E5E5E5"> the other</font>

667
00:27:28,210 --> 00:27:32,570
properties in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> payload as well and so</font>

668
00:27:30,289 --> 00:27:34,820
you<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to be able to pin that</font>

669
00:27:32,570 --> 00:27:38,299
request using the<font color="#E5E5E5"> matching pinning</font>

670
00:27:34,820 --> 00:27:40,100
certificate you IDs<font color="#CCCCCC"> a property and</font><font color="#E5E5E5"> then</font>

671
00:27:38,299 --> 00:27:41,570
and then the<font color="#E5E5E5"> identity certificate</font>

672
00:27:40,100 --> 00:27:43,580
property I mentioned earlier will<font color="#CCCCCC"> be</font>

673
00:27:41,570 --> 00:27:46,760
used here<font color="#CCCCCC"> as the TLS client certificate</font>

674
00:27:43,580 --> 00:27:50,059
<font color="#E5E5E5">whence once the</font><font color="#CCCCCC"> poling request is</font><font color="#E5E5E5"> is</font>

675
00:27:46,760 --> 00:27:51,620
<font color="#E5E5E5">made so a little bit more visually the</font>

676
00:27:50,059 --> 00:27:54,019
process is now asynchronous so we start

677
00:27:51,620 --> 00:27:56,239
bottom left with the MDM vendor who

678
00:27:54,019 --> 00:28:00,019
decides<font color="#E5E5E5"> to issue a command to a device</font>

679
00:27:56,240 --> 00:28:02,720
it uses<font color="#CCCCCC"> APNs to send the push to the</font>

680
00:28:00,019 --> 00:28:05,149
device<font color="#E5E5E5"> MDM client receives it responds</font>

681
00:28:02,720 --> 00:28:07,190
<font color="#E5E5E5">to it but not directly through the push</font>

682
00:28:05,149 --> 00:28:09,590
service by definition<font color="#E5E5E5"> it does that by</font>

683
00:28:07,190 --> 00:28:12,529
<font color="#CCCCCC">contacting</font><font color="#E5E5E5"> the command endpoint on the</font>

684
00:28:09,590 --> 00:28:13,730
MDM vendors servers<font color="#E5E5E5"> and again you can</font>

685
00:28:12,529 --> 00:28:16,429
see<font color="#E5E5E5"> that it is using TLS</font>

686
00:28:13,730 --> 00:28:20,040
and you are able<font color="#E5E5E5"> to to pin using these</font>

687
00:28:16,429 --> 00:28:23,980
certificate IDs<font color="#CCCCCC"> and so so</font><font color="#E5E5E5"> far so</font><font color="#CCCCCC"> good</font>

688
00:28:20,040 --> 00:28:25,780
and now we get to the<font color="#E5E5E5"> fun part</font><font color="#CCCCCC"> MDM</font>

689
00:28:23,980 --> 00:28:27,820
supports<font color="#E5E5E5"> a very wide</font><font color="#CCCCCC"> range of commands</font>

690
00:28:25,780 --> 00:28:30,309
<font color="#CCCCCC">and one</font><font color="#E5E5E5"> of the most popular commands is</font>

691
00:28:27,820 --> 00:28:32,470
install application<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is pretty</font>

692
00:28:30,309 --> 00:28:34,750
<font color="#E5E5E5">self-explanatory allows remote silent</font>

693
00:28:32,470 --> 00:28:37,750
installation of applications<font color="#CCCCCC"> on the</font>

694
00:28:34,750 --> 00:28:39,580
device<font color="#E5E5E5"> what's interesting here is that's</font>

695
00:28:37,750 --> 00:28:41,050
<font color="#E5E5E5">implemented not in the MDM</font>

696
00:28:39,580 --> 00:28:43,110
infrastructure on the<font color="#E5E5E5"> device</font><font color="#CCCCCC"> but it's</font>

697
00:28:41,050 --> 00:28:47,260
implemented<font color="#CCCCCC"> in using the App Store's</font>

698
00:28:43,110 --> 00:28:50,649
api's so the command request contains

699
00:28:47,260 --> 00:28:52,210
<font color="#E5E5E5">the URL to a manifest the manifest this</font>

700
00:28:50,650 --> 00:28:53,800
<font color="#E5E5E5">job is basically to describe the app</font>

701
00:28:52,210 --> 00:28:55,510
package<font color="#E5E5E5"> it says this is the</font><font color="#CCCCCC"> apps</font>

702
00:28:53,800 --> 00:28:57,280
identity<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the certificates</font>

703
00:28:55,510 --> 00:28:59,230
potentially and this is where you<font color="#E5E5E5"> can</font>

704
00:28:57,280 --> 00:29:01,928
retrieve<font color="#E5E5E5"> it</font><font color="#CCCCCC"> the manifest is going to be</font>

705
00:28:59,230 --> 00:29:04,809
encoded as a property list as<font color="#E5E5E5"> many Apple</font>

706
00:29:01,929 --> 00:29:06,880
payloads are<font color="#E5E5E5"> but importantly it includes</font>

707
00:29:04,809 --> 00:29:09,730
<font color="#E5E5E5">the URL of the package</font><font color="#CCCCCC"> to retrieve and</font>

708
00:29:06,880 --> 00:29:12,370
install now on Mac OS that has to point

709
00:29:09,730 --> 00:29:17,050
<font color="#E5E5E5">to</font><font color="#CCCCCC"> a signed distribution package</font><font color="#E5E5E5"> which</font>

710
00:29:12,370 --> 00:29:18,309
will be a dot<font color="#CCCCCC"> pkg now the way</font><font color="#E5E5E5"> this is</font>

711
00:29:17,050 --> 00:29:20,860
<font color="#CCCCCC">implemented and we're</font><font color="#E5E5E5"> going to go really</font>

712
00:29:18,309 --> 00:29:23,410
<font color="#E5E5E5">deep here MDM client will use the</font>

713
00:29:20,860 --> 00:29:25,750
<font color="#E5E5E5">commerce core framework</font><font color="#CCCCCC"> this is part of</font>

714
00:29:23,410 --> 00:29:28,660
<font color="#E5E5E5">commerce kit which is the</font><font color="#CCCCCC"> private API</font><font color="#E5E5E5"> is</font>

715
00:29:25,750 --> 00:29:31,510
built<font color="#E5E5E5"> around the</font><font color="#CCCCCC"> App Store on Mac OS for</font>

716
00:29:28,660 --> 00:29:33,190
other oh s services this<font color="#E5E5E5"> framework</font>

717
00:29:31,510 --> 00:29:35,530
contains various services each are

718
00:29:33,190 --> 00:29:37,350
backed by specific launch<font color="#E5E5E5"> agent or</font>

719
00:29:35,530 --> 00:29:40,360
daemon depending<font color="#E5E5E5"> on the context again</font>

720
00:29:37,350 --> 00:29:42,699
<font color="#CCCCCC">store asset these job is to</font><font color="#E5E5E5"> download and</font>

721
00:29:40,360 --> 00:29:45,219
process manifests<font color="#E5E5E5"> and if they're valid</font>

722
00:29:42,700 --> 00:29:47,110
<font color="#CCCCCC">it will leveraged or</font><font color="#E5E5E5"> download D to</font>

723
00:29:45,220 --> 00:29:48,790
download and install them<font color="#E5E5E5"> now what</font>

724
00:29:47,110 --> 00:29:50,770
happens when MDM wants to install a

725
00:29:48,790 --> 00:29:56,559
manifest<font color="#E5E5E5"> is it uses a private function</font>

726
00:29:50,770 --> 00:29:59,260
called<font color="#E5E5E5"> CK MDM process manifest at URL so</font>

727
00:29:56,559 --> 00:30:01,270
let's look exactly at how<font color="#E5E5E5"> this works MDM</font>

728
00:29:59,260 --> 00:30:02,860
client while executing the install

729
00:30:01,270 --> 00:30:04,809
application command<font color="#E5E5E5"> will link against</font>

730
00:30:02,860 --> 00:30:07,059
commerce<font color="#CCCCCC"> core doubt framework it which</font>

731
00:30:04,809 --> 00:30:09,370
will itself use<font color="#CCCCCC"> X</font><font color="#E5E5E5"> PC to trigger the</font>

732
00:30:07,059 --> 00:30:13,330
asset daemon to process the manifest<font color="#E5E5E5"> and</font>

733
00:30:09,370 --> 00:30:14,739
<font color="#E5E5E5">validate that it is correct once or</font>

734
00:30:13,330 --> 00:30:16,030
after I<font color="#CCCCCC"> skip this</font><font color="#E5E5E5"> up there it will</font>

735
00:30:14,740 --> 00:30:17,679
<font color="#CCCCCC">actually first download the manifest</font>

736
00:30:16,030 --> 00:30:19,360
from the MDM vendors<font color="#CCCCCC"> endpoint and</font><font color="#E5E5E5"> then</font>

737
00:30:17,679 --> 00:30:21,520
process it<font color="#E5E5E5"> for validity now it's</font>

738
00:30:19,360 --> 00:30:22,840
interesting here is there<font color="#E5E5E5"> is no</font><font color="#CCCCCC"> pinnate</font>

739
00:30:21,520 --> 00:30:24,820
<font color="#E5E5E5">and we'll get to it we'll get through</font>

740
00:30:22,840 --> 00:30:26,889
<font color="#CCCCCC">exactly what that</font><font color="#E5E5E5"> means and again once</font>

741
00:30:24,820 --> 00:30:28,629
the<font color="#CCCCCC"> once the manifest is validated it</font>

742
00:30:26,890 --> 00:30:32,559
will download the package<font color="#E5E5E5"> itself and</font>

743
00:30:28,630 --> 00:30:33,910
install it what's<font color="#E5E5E5"> interesting is the MDM</font>

744
00:30:32,559 --> 00:30:35,500
in the store

745
00:30:33,910 --> 00:30:37,990
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> two very</font><font color="#CCCCCC"> separate components of</font>

746
00:30:35,500 --> 00:30:40,660
the OS it's safe to<font color="#CCCCCC"> say they have</font>

747
00:30:37,990 --> 00:30:42,910
different threat models<font color="#CCCCCC"> the MDM client</font>

748
00:30:40,660 --> 00:30:44,980
here is not evaluating the trust<font color="#E5E5E5"> of the</font>

749
00:30:42,910 --> 00:30:47,500
manifest URL and neither is the store<font color="#CCCCCC"> in</font>

750
00:30:44,980 --> 00:30:50,650
fact<font color="#CCCCCC"> store foundation which contains the</font>

751
00:30:47,500 --> 00:30:53,980
core classes<font color="#E5E5E5"> that power</font><font color="#CCCCCC"> commerce core</font><font color="#E5E5E5"> do</font>

752
00:30:50,650 --> 00:30:55,780
not evaluate<font color="#CCCCCC"> Trust at all this allows a</font>

753
00:30:53,980 --> 00:30:59,740
man<font color="#E5E5E5"> the middle attack so as an example</font>

754
00:30:55,780 --> 00:31:01,600
<font color="#CCCCCC">in this case</font><font color="#E5E5E5"> a state actor</font><font color="#CCCCCC"> or someone</font>

755
00:30:59,740 --> 00:31:04,990
with considerable resources could target

756
00:31:01,600 --> 00:31:07,360
a specific<font color="#E5E5E5"> organization by men men in</font>

757
00:31:04,990 --> 00:31:09,010
the<font color="#CCCCCC"> milling commands from the MDM vendor</font>

758
00:31:07,360 --> 00:31:10,540
now this is not limited<font color="#CCCCCC"> to the DEP</font>

759
00:31:09,010 --> 00:31:12,220
scenario we've looked at<font color="#E5E5E5"> this could</font>

760
00:31:10,540 --> 00:31:15,280
actually happen<font color="#E5E5E5"> during later commands if</font>

761
00:31:12,220 --> 00:31:16,570
the MDM can be<font color="#CCCCCC"> established they they</font>

762
00:31:15,280 --> 00:31:17,770
can't man in the middle of the commands

763
00:31:16,570 --> 00:31:19,179
but they can man in the middle<font color="#CCCCCC"> of the</font>

764
00:31:17,770 --> 00:31:21,400
stretching of<font color="#CCCCCC"> a manifest</font><font color="#E5E5E5"> that's right</font>

765
00:31:19,180 --> 00:31:23,400
sorry<font color="#E5E5E5"> you can Manimal not commands but</font>

766
00:31:21,400 --> 00:31:26,440
the actual<font color="#E5E5E5"> install application commands</font>

767
00:31:23,400 --> 00:31:28,150
and with that we'll go to<font color="#CCCCCC"> our demo and</font>

768
00:31:26,440 --> 00:31:31,480
while we get<font color="#E5E5E5"> set up I'll go over the</font>

769
00:31:28,150 --> 00:31:34,210
<font color="#E5E5E5">details of this we're going to simulate</font>

770
00:31:31,480 --> 00:31:36,280
<font color="#E5E5E5">a malicious</font><font color="#CCCCCC"> isp or state actor by using</font>

771
00:31:34,210 --> 00:31:38,800
<font color="#CCCCCC">Mac OS</font><font color="#E5E5E5"> as internet sharing as finicky as</font>

772
00:31:36,280 --> 00:31:41,310
it is<font color="#E5E5E5"> we're gonna be proxying all the</font>

773
00:31:38,800 --> 00:31:44,200
traffic<font color="#E5E5E5"> from the from a brand new device</font>

774
00:31:41,310 --> 00:31:46,899
<font color="#E5E5E5">using them a little proxy we're going to</font>

775
00:31:44,200 --> 00:31:48,520
simulate a compromised CA by using a

776
00:31:46,900 --> 00:31:51,100
valid sir that we created<font color="#CCCCCC"> from fleet</font>

777
00:31:48,520 --> 00:31:53,139
<font color="#E5E5E5">Smith CA</font><font color="#CCCCCC"> and we're going to intercept</font>

778
00:31:51,100 --> 00:31:55,959
the request<font color="#CCCCCC"> for the manifest as</font><font color="#E5E5E5"> the</font>

779
00:31:53,140 --> 00:31:57,760
device first<font color="#E5E5E5"> boots and and rather than</font>

780
00:31:55,960 --> 00:31:59,200
<font color="#E5E5E5">provide the</font><font color="#CCCCCC"> fluid Smith fleet Smith's</font>

781
00:31:57,760 --> 00:32:01,420
<font color="#CCCCCC">agents we're going to be serving</font><font color="#E5E5E5"> a</font>

782
00:31:59,200 --> 00:32:03,880
malicious manifest that<font color="#E5E5E5"> will download a</font>

783
00:32:01,420 --> 00:32:06,670
mysterious other application and install

784
00:32:03,880 --> 00:32:08,650
its package<font color="#E5E5E5"> now it's important to to say</font>

785
00:32:06,670 --> 00:32:12,160
here is that<font color="#E5E5E5"> developer ID certificate</font>

786
00:32:08,650 --> 00:32:14,380
requirements still apply<font color="#E5E5E5"> and so packages</font>

787
00:32:12,160 --> 00:32:15,760
still have to be signed and so there is

788
00:32:14,380 --> 00:32:18,790
the extra<font color="#E5E5E5"> step that</font><font color="#CCCCCC"> an attacker would</font>

789
00:32:15,760 --> 00:32:21,520
have to take of actually signing<font color="#E5E5E5"> their</font>

790
00:32:18,790 --> 00:32:23,590
their malicious application<font color="#CCCCCC"> though this</font>

791
00:32:21,520 --> 00:32:25,000
<font color="#E5E5E5">is still relatively easy to do it is</font>

792
00:32:23,590 --> 00:32:26,679
important to note though<font color="#CCCCCC"> that Apple is</font>

793
00:32:25,000 --> 00:32:28,420
<font color="#CCCCCC">making great</font><font color="#E5E5E5"> strides here with things</font>

794
00:32:26,680 --> 00:32:31,540
<font color="#E5E5E5">like notarized developer ID certificates</font>

795
00:32:28,420 --> 00:32:33,100
<font color="#E5E5E5">they are adding quite a bit of of checks</font>

796
00:32:31,540 --> 00:32:35,290
<font color="#E5E5E5">to make sure that malicious software is</font>

797
00:32:33,100 --> 00:32:38,350
is harder<font color="#CCCCCC"> to create but this is still</font>

798
00:32:35,290 --> 00:32:40,659
strictly possible<font color="#E5E5E5"> and the last thing</font>

799
00:32:38,350 --> 00:32:42,610
I'll add there is<font color="#E5E5E5"> the developer</font>

800
00:32:40,660 --> 00:32:44,950
certificate<font color="#E5E5E5"> that's used to sign that</font>

801
00:32:42,610 --> 00:32:46,918
distribution distribution<font color="#E5E5E5"> package</font><font color="#CCCCCC"> does</font>

802
00:32:44,950 --> 00:32:49,169
not have to be a

803
00:32:46,919 --> 00:32:51,450
any type of<font color="#CCCCCC"> cert that's associated</font><font color="#E5E5E5"> with</font>

804
00:32:49,169 --> 00:32:53,820
a business<font color="#E5E5E5"> entity</font><font color="#CCCCCC"> it can be a personal</font>

805
00:32:51,450 --> 00:32:55,559
<font color="#E5E5E5">Apple</font><font color="#CCCCCC"> Developer certificate and so for</font>

806
00:32:53,820 --> 00:32:57,570
the sake of this demo<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> exactly</font>

807
00:32:55,559 --> 00:33:24,259
what we've done here<font color="#E5E5E5"> all right when was</font>

808
00:32:57,570 --> 00:33:29,009
that so the<font color="#E5E5E5"> device is first booting</font>

809
00:33:24,259 --> 00:33:30,509
let's see if what's the graphics adapter

810
00:33:29,009 --> 00:33:44,220
gets ready<font color="#CCCCCC"> I think you'll</font><font color="#E5E5E5"> be able to see</font>

811
00:33:30,509 --> 00:33:46,470
what's<font color="#CCCCCC"> gonna yeah it's worth</font><font color="#E5E5E5"> calling up</font>

812
00:33:44,220 --> 00:33:49,019
that uh<font color="#E5E5E5"> the only way</font><font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is</font>

813
00:33:46,470 --> 00:33:51,809
possible is by<font color="#E5E5E5"> really stimulating that</font>

814
00:33:49,019 --> 00:33:53,909
nation state level attack by both being

815
00:33:51,809 --> 00:33:55,918
<font color="#E5E5E5">able to man in the middle</font><font color="#CCCCCC"> the internet</font>

816
00:33:53,909 --> 00:33:57,570
<font color="#CCCCCC">traffic from the device so</font><font color="#E5E5E5"> maybe having</font>

817
00:33:55,919 --> 00:33:59,940
the<font color="#E5E5E5"> ability to see</font><font color="#CCCCCC"> internet traffic</font><font color="#E5E5E5"> at</font>

818
00:33:57,570 --> 00:34:03,600
the ISP level<font color="#E5E5E5"> as well as having the</font>

819
00:33:59,940 --> 00:34:08,460
<font color="#CCCCCC">ability to get a certificate issued</font>

820
00:34:03,600 --> 00:34:11,549
improperly<font color="#E5E5E5"> from a commercial CA both of</font>

821
00:34:08,460 --> 00:34:13,829
these<font color="#E5E5E5"> things have happened</font><font color="#CCCCCC"> sometimes in</font>

822
00:34:11,549 --> 00:34:16,168
the same<font color="#CCCCCC"> country sometimes in countries</font>

823
00:34:13,829 --> 00:34:18,419
<font color="#E5E5E5">that are not friendly to you know</font>

824
00:34:16,168 --> 00:34:21,359
<font color="#E5E5E5">journalists for example so it is a</font>

825
00:34:18,418 --> 00:34:23,759
<font color="#CCCCCC">real-world</font><font color="#E5E5E5"> kind of situation here</font><font color="#CCCCCC"> that</font>

826
00:34:21,359 --> 00:34:25,440
we're simulating<font color="#CCCCCC"> but it's worth calling</font>

827
00:34:23,760 --> 00:34:27,059
out that the only reason we<font color="#CCCCCC"> can do it is</font>

828
00:34:25,440 --> 00:34:29,520
because<font color="#CCCCCC"> the device at this point in the</font>

829
00:34:27,059 --> 00:34:32,099
bootstrapping process<font color="#E5E5E5"> already trusts</font><font color="#CCCCCC"> the</font>

830
00:34:29,520 --> 00:34:35,960
fleet<font color="#E5E5E5"> Smith CA because it's delivered in</font>

831
00:34:32,099 --> 00:34:39,899
that initial configuration profile so

832
00:34:35,960 --> 00:34:42,740
this can't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> done without a</font><font color="#E5E5E5"> lot of</font>

833
00:34:39,899 --> 00:34:42,739
resources<font color="#E5E5E5"> basically</font>

834
00:34:51,469 --> 00:34:59,308
all<font color="#E5E5E5"> right so let's make sure we have</font>

835
00:34:57,119 --> 00:35:01,410
<font color="#CCCCCC">some network connectivity before</font>

836
00:34:59,309 --> 00:35:03,569
<font color="#E5E5E5">proceeding here since that is pretty</font>

837
00:35:01,410 --> 00:35:07,259
important<font color="#E5E5E5"> so for some reason this one's</font>

838
00:35:03,569 --> 00:35:10,259
not<font color="#E5E5E5"> working well but oh that's test with</font>

839
00:35:07,260 --> 00:35:14,369
this one which we just freshly wiped<font color="#E5E5E5"> so</font>

840
00:35:10,260 --> 00:35:21,299
it should work<font color="#E5E5E5"> just fine demo gods are</font>

841
00:35:14,369 --> 00:35:25,319
networking<font color="#E5E5E5"> yep okay this one has</font><font color="#CCCCCC"> network</font>

842
00:35:21,299 --> 00:35:31,920
this was really here<font color="#E5E5E5"> so now let's go</font>

843
00:35:25,319 --> 00:35:33,269
ahead<font color="#E5E5E5"> and proceed there we go there's</font>

844
00:35:31,920 --> 00:35:35,069
the<font color="#E5E5E5"> remote management screen so this</font>

845
00:35:33,269 --> 00:35:41,578
means<font color="#CCCCCC"> that the device</font><font color="#E5E5E5"> has received its</font>

846
00:35:35,069 --> 00:35:43,619
<font color="#E5E5E5">DEP profile that JSON payload so this</font>

847
00:35:41,579 --> 00:35:44,910
points<font color="#E5E5E5"> it will retrieve at this point</font>

848
00:35:43,619 --> 00:35:47,849
will retrieve the<font color="#E5E5E5"> configuration profile</font>

849
00:35:44,910 --> 00:35:49,828
and install it<font color="#E5E5E5"> and we are actively a</font>

850
00:35:47,849 --> 00:35:55,940
man-in-the-middle<font color="#CCCCCC"> egg</font><font color="#E5E5E5"> which you cannot</font>

851
00:35:49,829 --> 00:35:59,299
see unfortunately<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> all right</font>

852
00:35:55,940 --> 00:35:59,299
<font color="#E5E5E5">let's proceed</font>

853
00:36:13,839 --> 00:36:18,578
so at this point we can tell<font color="#CCCCCC"> that the</font>

854
00:36:16,839 --> 00:36:20,828
looks like it worked yeah<font color="#E5E5E5"> it looks like</font>

855
00:36:18,579 --> 00:36:22,989
<font color="#E5E5E5">the the payload was installed the agent</font>

856
00:36:20,829 --> 00:36:25,749
was downloaded or what it believes as

857
00:36:22,989 --> 00:36:27,939
the agent was downloaded and this is

858
00:36:25,749 --> 00:36:33,488
usually<font color="#E5E5E5"> the part where a progress bar</font>

859
00:36:27,939 --> 00:36:40,089
would<font color="#E5E5E5"> be nice but yeah it</font><font color="#CCCCCC"> usually takes</font>

860
00:36:33,489 --> 00:36:42,549
around 30<font color="#E5E5E5"> seconds at this point yeah and</font>

861
00:36:40,089 --> 00:36:47,920
there we go<font color="#CCCCCC"> and the agent has been</font>

862
00:36:42,549 --> 00:36:49,900
replaced<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the calculator so and so</font>

863
00:36:47,920 --> 00:36:51,670
it is supposed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be fleet Smith's agent</font>

864
00:36:49,900 --> 00:36:53,939
<font color="#CCCCCC">software is now so our package our</font>

865
00:36:51,670 --> 00:36:56,589
malicious application in this case

866
00:36:53,939 --> 00:36:58,209
created a launch<font color="#CCCCCC"> D on watch agent or a</font>

867
00:36:56,589 --> 00:37:00,038
<font color="#CCCCCC">system-level launch agent that</font><font color="#E5E5E5"> cannot</font><font color="#CCCCCC"> be</font>

868
00:36:58,209 --> 00:37:01,569
stopped<font color="#E5E5E5"> that runs the calculator</font>

869
00:37:00,039 --> 00:37:03,039
constantly and so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't believe you</font>

870
00:37:01,569 --> 00:37:04,660
<font color="#E5E5E5">can close this</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we fix that</font>

871
00:37:03,039 --> 00:37:06,339
but I think<font color="#E5E5E5"> we were moving back oh maybe</font>

872
00:37:04,660 --> 00:37:07,749
we<font color="#CCCCCC"> folks there yeah it was it was pretty</font>

873
00:37:06,339 --> 00:37:10,569
<font color="#E5E5E5">annoying for</font><font color="#CCCCCC"> in testing yeah so we</font>

874
00:37:07,749 --> 00:37:12,609
install this to the<font color="#E5E5E5"> system-wide launch</font>

875
00:37:10,569 --> 00:37:15,459
agents folder which means<font color="#E5E5E5"> any user that</font>

876
00:37:12,609 --> 00:37:17,979
logs in will have the calculator started

877
00:37:15,459 --> 00:37:18,819
<font color="#E5E5E5">it's important to note though that even</font>

878
00:37:17,979 --> 00:37:22,149
though we launched this in a user

879
00:37:18,819 --> 00:37:24,549
context<font color="#E5E5E5"> at the time that</font><font color="#CCCCCC"> our malicious</font>

880
00:37:22,150 --> 00:37:26,319
package is<font color="#E5E5E5"> installed</font><font color="#CCCCCC"> we do have the</font>

881
00:37:24,549 --> 00:37:29,170
<font color="#CCCCCC">ability to execute</font><font color="#E5E5E5"> any command as root</font>

882
00:37:26,319 --> 00:37:32,189
and<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> demonstrates that the device</font>

883
00:37:29,170 --> 00:37:36,299
is<font color="#CCCCCC"> actually fully rooted at first boot</font>

884
00:37:32,189 --> 00:37:36,299
all right let's go back<font color="#E5E5E5"> to the slides</font>

885
00:37:42,150 --> 00:37:46,330
well the good news<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> there is a</font>

886
00:37:44,380 --> 00:37:48,160
mitigation<font color="#E5E5E5"> already in existence for this</font>

887
00:37:46,330 --> 00:37:49,810
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> a new command was introduced</font>

888
00:37:48,160 --> 00:37:52,420
recently<font color="#E5E5E5"> called install</font><font color="#CCCCCC"> enterprise</font>

889
00:37:49,810 --> 00:37:53,910
<font color="#E5E5E5">application</font><font color="#CCCCCC"> this includes new properties</font>

890
00:37:52,420 --> 00:37:57,910
that<font color="#E5E5E5"> allow you to control the trust of</font>

891
00:37:53,910 --> 00:38:00,190
of that<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> for the manifest</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so this</font>

892
00:37:57,910 --> 00:38:04,089
is<font color="#CCCCCC"> available</font><font color="#E5E5E5"> in Mac OS 10 thirteen point</font>

893
00:38:00,190 --> 00:38:05,200
<font color="#E5E5E5">six that's also</font><font color="#CCCCCC"> ten fourteen what's</font><font color="#E5E5E5"> also</font>

894
00:38:04,090 --> 00:38:07,510
important to note here is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there's a</font>

895
00:38:05,200 --> 00:38:08,589
there's<font color="#CCCCCC"> a time delay for new</font><font color="#E5E5E5"> hardware to</font>

896
00:38:07,510 --> 00:38:11,350
<font color="#E5E5E5">support the fix as we've just</font>

897
00:38:08,590 --> 00:38:13,990
<font color="#CCCCCC">demonstrated what's also important</font><font color="#E5E5E5"> here</font>

898
00:38:11,350 --> 00:38:16,390
is that<font color="#E5E5E5"> this requires the MDM vendor to</font>

899
00:38:13,990 --> 00:38:18,700
do its part<font color="#CCCCCC"> the new command has to be</font>

900
00:38:16,390 --> 00:38:21,910
<font color="#E5E5E5">adopted</font><font color="#CCCCCC"> before the mitigation is fully</font>

901
00:38:18,700 --> 00:38:24,850
ready now how does this<font color="#E5E5E5"> actually work</font>

902
00:38:21,910 --> 00:38:27,250
<font color="#E5E5E5">there is now an extra property manifest</font>

903
00:38:24,850 --> 00:38:30,040
URL<font color="#E5E5E5"> pinning certs</font><font color="#CCCCCC"> this is a again a</font><font color="#E5E5E5"> list</font>

904
00:38:27,250 --> 00:38:31,450
of<font color="#E5E5E5"> D</font><font color="#CCCCCC"> are encoded</font><font color="#E5E5E5"> an anchor trust that</font>

905
00:38:30,040 --> 00:38:34,450
will be used when evaluating<font color="#E5E5E5"> the trust</font>

906
00:38:31,450 --> 00:38:36,609
<font color="#E5E5E5">of the manifest URL this can ensure you</font>

907
00:38:34,450 --> 00:38:40,450
can also ensure<font color="#CCCCCC"> that revocation checks</font>

908
00:38:36,610 --> 00:38:42,970
are performed<font color="#E5E5E5"> which is quite nice</font><font color="#CCCCCC"> under</font>

909
00:38:40,450 --> 00:38:45,040
the hood<font color="#E5E5E5"> what happens well the</font><font color="#CCCCCC"> ck MDM</font>

910
00:38:42,970 --> 00:38:46,600
process manifest at URL function<font color="#E5E5E5"> which</font>

911
00:38:45,040 --> 00:38:49,060
used to<font color="#E5E5E5"> only take a URL as a parameter</font>

912
00:38:46,600 --> 00:38:50,680
<font color="#CCCCCC">and another thing that</font><font color="#E5E5E5"> was more of a</font>

913
00:38:49,060 --> 00:38:53,049
flag now actually takes in a dictionary

914
00:38:50,680 --> 00:38:54,669
<font color="#CCCCCC">that dictionary contains private keys</font>

915
00:38:53,050 --> 00:38:57,430
that map to<font color="#CCCCCC"> the properties in</font><font color="#E5E5E5"> the new</font>

916
00:38:54,670 --> 00:39:00,160
command<font color="#CCCCCC"> and also most importantly store</font>

917
00:38:57,430 --> 00:39:02,190
<font color="#E5E5E5">foundations core objects now have the</font>

918
00:39:00,160 --> 00:39:05,950
<font color="#CCCCCC">ability to evaluate trust which was</font>

919
00:39:02,190 --> 00:39:07,359
<font color="#CCCCCC">relief</font><font color="#E5E5E5"> to see they actually</font><font color="#CCCCCC"> if you're</font>

920
00:39:05,950 --> 00:39:09,819
<font color="#E5E5E5">curious this actually uses</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> external</font>

921
00:39:07,359 --> 00:39:13,960
connections<font color="#E5E5E5"> standard elegant methods for</font>

922
00:39:09,820 --> 00:39:16,869
authentication challenges so let's move

923
00:39:13,960 --> 00:39:18,609
on<font color="#CCCCCC"> to some takeaways here</font><font color="#E5E5E5"> number number</font>

924
00:39:16,869 --> 00:39:21,580
<font color="#CCCCCC">one</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a really complex</font><font color="#E5E5E5"> system on</font>

925
00:39:18,609 --> 00:39:22,930
Mac<font color="#E5E5E5"> OS with a lot of moving parts</font><font color="#CCCCCC"> some</font>

926
00:39:21,580 --> 00:39:24,490
will<font color="#CCCCCC"> have different</font><font color="#E5E5E5"> threat models and</font>

927
00:39:22,930 --> 00:39:26,410
what that means<font color="#CCCCCC"> as</font><font color="#E5E5E5"> vulnerabilities or</font>

928
00:39:24,490 --> 00:39:31,169
<font color="#E5E5E5">bugs can appear at the intersections or</font>

929
00:39:26,410 --> 00:39:31,170
<font color="#E5E5E5">at the borders between those guessing</font>

930
00:39:31,650 --> 00:39:37,210
yeah so in addition<font color="#CCCCCC"> to these takeaways</font>

931
00:39:34,420 --> 00:39:39,369
here<font color="#E5E5E5"> we through</font><font color="#CCCCCC"> our research</font><font color="#E5E5E5"> came up</font>

932
00:39:37,210 --> 00:39:40,960
with a bunch of recommendations for

933
00:39:39,369 --> 00:39:45,420
<font color="#E5E5E5">Apple here on kind of how to improve</font><font color="#CCCCCC"> the</font>

934
00:39:40,960 --> 00:39:48,510
whole<font color="#E5E5E5"> security story for MDM and</font><font color="#CCCCCC"> DEP</font><font color="#E5E5E5"> and</font>

935
00:39:45,420 --> 00:39:50,920
so here's that list of recommendations

936
00:39:48,510 --> 00:39:53,560
<font color="#CCCCCC">the first is that we'd really</font><font color="#E5E5E5"> love</font><font color="#CCCCCC"> to</font>

937
00:39:50,920 --> 00:39:55,240
see the entire<font color="#CCCCCC"> security model for DEP</font>

938
00:39:53,560 --> 00:39:58,420
and MDM documented

939
00:39:55,240 --> 00:40:00,250
if anyone's read the<font color="#E5E5E5"> incredible iOS</font>

940
00:39:58,420 --> 00:40:03,300
security guide white paper<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they</font>

941
00:40:00,250 --> 00:40:05,140
published that's really what kind<font color="#E5E5E5"> of the</font>

942
00:40:03,300 --> 00:40:07,300
along<font color="#E5E5E5"> the same lines of what we're</font>

943
00:40:05,140 --> 00:40:09,190
thinking<font color="#E5E5E5"> here</font><font color="#CCCCCC"> so we know they have</font><font color="#E5E5E5"> the</font>

944
00:40:07,300 --> 00:40:11,830
<font color="#E5E5E5">ability to produce something of</font><font color="#CCCCCC"> a really</font>

945
00:40:09,190 --> 00:40:13,660
<font color="#E5E5E5">high caliber and and we'd love to see</font>

946
00:40:11,830 --> 00:40:15,190
the same thing including a<font color="#E5E5E5"> description</font>

947
00:40:13,660 --> 00:40:18,339
<font color="#E5E5E5">of what the role of that I've Apple</font>

948
00:40:15,190 --> 00:40:21,040
iPhone device<font color="#CCCCCC"> CA is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next is that</font>

949
00:40:18,340 --> 00:40:24,730
<font color="#E5E5E5">we'd really like them</font><font color="#CCCCCC"> to be more</font>

950
00:40:21,040 --> 00:40:26,740
<font color="#CCCCCC">aggressive in a technical enforcement in</font>

951
00:40:24,730 --> 00:40:27,940
the OS that requires pinning for<font color="#E5E5E5"> all of</font>

952
00:40:26,740 --> 00:40:30,419
<font color="#E5E5E5">these things right</font><font color="#CCCCCC"> now all</font><font color="#E5E5E5"> this is</font>

953
00:40:27,940 --> 00:40:34,720
<font color="#CCCCCC">really optional and</font><font color="#E5E5E5"> up to the MDM vendor</font>

954
00:40:30,420 --> 00:40:38,170
<font color="#E5E5E5">which given how early in the in the</font>

955
00:40:34,720 --> 00:40:42,129
process<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is and and</font><font color="#E5E5E5"> kind of really</font>

956
00:40:38,170 --> 00:40:45,730
scary implications<font color="#E5E5E5"> if if an attacker was</font>

957
00:40:42,130 --> 00:40:48,400
to really<font color="#CCCCCC"> package up</font><font color="#E5E5E5"> this exploit and</font>

958
00:40:45,730 --> 00:40:50,980
<font color="#CCCCCC">use it at scale we really think that</font><font color="#E5E5E5"> it</font>

959
00:40:48,400 --> 00:40:56,230
<font color="#CCCCCC">would be a great a</font><font color="#E5E5E5"> great improvement</font><font color="#CCCCCC"> if</font>

960
00:40:50,980 --> 00:40:58,000
<font color="#E5E5E5">this was required the next is</font><font color="#CCCCCC"> that we</font>

961
00:40:56,230 --> 00:41:00,340
really<font color="#E5E5E5"> think any configuration profile</font>

962
00:40:58,000 --> 00:41:02,290
that contains<font color="#CCCCCC"> sensitive data so</font><font color="#E5E5E5"> that</font>

963
00:41:00,340 --> 00:41:04,840
could be<font color="#E5E5E5"> like a</font><font color="#CCCCCC"> TLS private key for</font>

964
00:41:02,290 --> 00:41:07,810
example<font color="#CCCCCC"> or it could be the Wi-Fi payload</font>

965
00:41:04,840 --> 00:41:10,450
that<font color="#E5E5E5"> includes the plaintext password for</font>

966
00:41:07,810 --> 00:41:12,759
your corporate Wi-Fi network<font color="#E5E5E5"> right I'm</font>

967
00:41:10,450 --> 00:41:15,669
any payload<font color="#CCCCCC"> that includes sensitive data</font>

968
00:41:12,760 --> 00:41:18,160
like<font color="#CCCCCC"> that we think the OS should enforce</font>

969
00:41:15,670 --> 00:41:21,160
that it's both signed and encrypted<font color="#E5E5E5"> this</font>

970
00:41:18,160 --> 00:41:23,859
is also<font color="#CCCCCC"> optional</font><font color="#E5E5E5"> but it's it's</font><font color="#CCCCCC"> really</font>

971
00:41:21,160 --> 00:41:26,740
not very heavily utilized in<font color="#E5E5E5"> in the wild</font>

972
00:41:23,860 --> 00:41:29,380
by<font color="#E5E5E5"> by various products</font><font color="#CCCCCC"> fleet psmith does</font>

973
00:41:26,740 --> 00:41:30,759
do both of these things<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we'd really</font>

974
00:41:29,380 --> 00:41:31,780
like to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> this required as well and</font>

975
00:41:30,760 --> 00:41:34,450
you<font color="#E5E5E5"> might be thinking</font><font color="#CCCCCC"> well isn't this</font>

976
00:41:31,780 --> 00:41:36,070
already<font color="#E5E5E5"> TLS protected and the answer is</font>

977
00:41:34,450 --> 00:41:37,569
yes<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you look at the past few</font>

978
00:41:36,070 --> 00:41:39,790
<font color="#CCCCCC">years you've had</font><font color="#E5E5E5"> heartbleed you've had</font>

979
00:41:37,570 --> 00:41:42,220
<font color="#CCCCCC">poodle</font><font color="#E5E5E5"> you've had</font><font color="#CCCCCC"> Apple's own go to fail</font>

980
00:41:39,790 --> 00:41:44,980
bug<font color="#E5E5E5"> and so given the history of TLS</font>

981
00:41:42,220 --> 00:41:47,589
phones<font color="#CCCCCC"> we really think that</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a</font>

982
00:41:44,980 --> 00:41:49,270
great<font color="#E5E5E5"> defense-in-depth measure to</font>

983
00:41:47,590 --> 00:41:51,550
require that<font color="#E5E5E5"> these sensitive payloads</font>

984
00:41:49,270 --> 00:41:54,670
are are protected and in fact Apple's

985
00:41:51,550 --> 00:41:56,680
own documentation<font color="#E5E5E5"> says on</font><font color="#CCCCCC"> page 19 of the</font>

986
00:41:54,670 --> 00:41:59,110
config configuration profile reference

987
00:41:56,680 --> 00:42:00,460
they give this guidance that because the

988
00:41:59,110 --> 00:42:02,050
password string is stored in the clear

989
00:42:00,460 --> 00:42:04,240
and the profile it's recommended<font color="#CCCCCC"> that it</font>

990
00:42:02,050 --> 00:42:05,590
be<font color="#E5E5E5"> encrypted for the device</font><font color="#CCCCCC"> and you can</font>

991
00:42:04,240 --> 00:42:07,509
<font color="#CCCCCC">get really</font><font color="#E5E5E5"> powerful</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and encrypt</font>

992
00:42:05,590 --> 00:42:08,300
these<font color="#E5E5E5"> payloads on a per device basis</font>

993
00:42:07,510 --> 00:42:11,450
<font color="#E5E5E5">because</font><font color="#CCCCCC"> this</font>

994
00:42:08,300 --> 00:42:13,390
server<font color="#E5E5E5"> can safely escrow the public key</font>

995
00:42:11,450 --> 00:42:15,560
which is part of the certificate right

996
00:42:13,390 --> 00:42:16,940
<font color="#CCCCCC">even even though it doesn't have the</font>

997
00:42:15,560 --> 00:42:19,250
private key I can use<font color="#CCCCCC"> that public key to</font>

998
00:42:16,940 --> 00:42:20,860
<font color="#CCCCCC">encrypt these payloads and</font><font color="#E5E5E5"> so that's</font>

999
00:42:19,250 --> 00:42:23,000
that's<font color="#CCCCCC"> something that should be</font>

1000
00:42:20,860 --> 00:42:26,270
relatively straightforward for for

1001
00:42:23,000 --> 00:42:28,160
<font color="#E5E5E5">people to implement</font><font color="#CCCCCC"> the last one is</font><font color="#E5E5E5"> that</font>

1002
00:42:26,270 --> 00:42:30,980
we'd<font color="#E5E5E5"> really like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that DEP cloud</font>

1003
00:42:28,160 --> 00:42:31,940
service API<font color="#E5E5E5"> contain just a bit more</font>

1004
00:42:30,980 --> 00:42:35,120
<font color="#E5E5E5">information it already contains</font>

1005
00:42:31,940 --> 00:42:36,530
<font color="#CCCCCC">information on like the model the OS</font>

1006
00:42:35,120 --> 00:42:39,440
family so<font color="#E5E5E5"> it'll tell you if the device</font>

1007
00:42:36,530 --> 00:42:40,970
<font color="#CCCCCC">has Mac OS or iOS for example but we'd</font>

1008
00:42:39,440 --> 00:42:43,400
like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see two additional fields</font><font color="#E5E5E5"> in</font>

1009
00:42:40,970 --> 00:42:45,560
that<font color="#E5E5E5"> API one with the OS version and one</font>

1010
00:42:43,400 --> 00:42:46,940
with the OS build number and the reason

1011
00:42:45,560 --> 00:42:49,040
<font color="#CCCCCC">we want that</font><font color="#E5E5E5"> is so that</font><font color="#CCCCCC"> we can surface</font>

1012
00:42:46,940 --> 00:42:51,380
that information in product so that<font color="#CCCCCC"> if</font>

1013
00:42:49,040 --> 00:42:53,270
there is a<font color="#CCCCCC"> Vaughn on a version</font><font color="#E5E5E5"> of Mac OS</font>

1014
00:42:51,380 --> 00:42:56,120
<font color="#E5E5E5">that's shipped from the</font><font color="#CCCCCC"> factory at least</font>

1015
00:42:53,270 --> 00:42:58,040
you have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> information at</font><font color="#E5E5E5"> your</font>

1016
00:42:56,120 --> 00:42:59,450
corporation<font color="#E5E5E5"> from you know your IT team</font>

1017
00:42:58,040 --> 00:43:01,910
your<font color="#E5E5E5"> security team had at least has</font><font color="#CCCCCC"> the</font>

1018
00:42:59,450 --> 00:43:06,439
information<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know maybe we shouldn't</font>

1019
00:43:01,910 --> 00:43:08,629
rely<font color="#E5E5E5"> on you know on that OS version if</font>

1020
00:43:06,440 --> 00:43:10,310
we're shipping it<font color="#E5E5E5"> to you know a country</font>

1021
00:43:08,630 --> 00:43:15,560
that's<font color="#E5E5E5"> might be doing some of these</font>

1022
00:43:10,310 --> 00:43:19,610
things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we've talked about right all</font>

1023
00:43:15,560 --> 00:43:21,230
right<font color="#CCCCCC"> and then for MDM vendors</font><font color="#E5E5E5"> we we</font>

1024
00:43:19,610 --> 00:43:23,600
<font color="#E5E5E5">wanted to share what</font><font color="#CCCCCC"> we think of</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> sort</font>

1025
00:43:21,230 --> 00:43:24,530
of like a security checklist to<font color="#E5E5E5"> make</font>

1026
00:43:23,600 --> 00:43:26,960
<font color="#E5E5E5">sure that you're doing all the right</font>

1027
00:43:24,530 --> 00:43:29,090
<font color="#CCCCCC">things and we</font><font color="#E5E5E5"> tried</font><font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it kind of</font>

1028
00:43:26,960 --> 00:43:31,250
really concise<font color="#E5E5E5"> and targeted on just the</font>

1029
00:43:29,090 --> 00:43:33,170
highest<font color="#E5E5E5"> impact</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> so painting at</font>

1030
00:43:31,250 --> 00:43:36,590
every step<font color="#CCCCCC"> of the process super</font>

1031
00:43:33,170 --> 00:43:38,750
<font color="#E5E5E5">important</font><font color="#CCCCCC"> the anchor certs</font>

1032
00:43:36,590 --> 00:43:40,940
in the DEP profile<font color="#E5E5E5"> so that the first</font>

1033
00:43:38,750 --> 00:43:44,720
time the device calls in to the MDM

1034
00:43:40,940 --> 00:43:47,120
server that's pinned<font color="#E5E5E5"> that's step</font><font color="#CCCCCC"> 4 step</font>

1035
00:43:44,720 --> 00:43:49,939
five which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> pinning the actual MDM</font>

1036
00:43:47,120 --> 00:43:53,029
<font color="#E5E5E5">URLs for ongoing</font><font color="#CCCCCC"> polling for</font><font color="#E5E5E5"> new</font>

1037
00:43:49,940 --> 00:43:56,810
commands<font color="#CCCCCC"> both for the check-in URL and</font>

1038
00:43:53,030 --> 00:43:59,600
the<font color="#E5E5E5"> commands URL and then finally in</font>

1039
00:43:56,810 --> 00:44:02,000
step<font color="#CCCCCC"> seven pinning using the new install</font>

1040
00:43:59,600 --> 00:44:04,220
<font color="#E5E5E5">enterprise application command so right</font>

1041
00:44:02,000 --> 00:44:06,980
now<font color="#E5E5E5"> that is also optional</font><font color="#CCCCCC"> install</font>

1042
00:44:04,220 --> 00:44:09,410
application is not deprecated it's still

1043
00:44:06,980 --> 00:44:12,050
available<font color="#CCCCCC"> Apple has given strong</font>

1044
00:44:09,410 --> 00:44:13,609
guidance at WWDC when they announced<font color="#E5E5E5"> the</font>

1045
00:44:12,050 --> 00:44:15,560
<font color="#E5E5E5">install enterprise application command</font>

1046
00:44:13,610 --> 00:44:16,910
<font color="#E5E5E5">that they'd love to</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> vendors move to</font>

1047
00:44:15,560 --> 00:44:19,600
this but they didn't give a hard<font color="#CCCCCC"> time</font>

1048
00:44:16,910 --> 00:44:22,279
line<font color="#CCCCCC"> and it is still optional as well</font>

1049
00:44:19,600 --> 00:44:24,230
<font color="#CCCCCC">and then finally this is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> one</font>

1050
00:44:22,280 --> 00:44:25,790
I think is the most<font color="#E5E5E5"> subtle</font><font color="#CCCCCC"> a lot of</font>

1051
00:44:24,230 --> 00:44:28,040
vendors<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of supplement the</font>

1052
00:44:25,790 --> 00:44:29,360
functionality of MDM with an agent

1053
00:44:28,040 --> 00:44:32,270
binary that they've written themselves

1054
00:44:29,360 --> 00:44:34,190
<font color="#CCCCCC">we do the same it's</font><font color="#E5E5E5"> really important</font>

1055
00:44:32,270 --> 00:44:36,770
<font color="#CCCCCC">that the vendor is</font><font color="#E5E5E5"> pinning inside their</font>

1056
00:44:34,190 --> 00:44:39,580
own binary<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> so we we do the same</font>

1057
00:44:36,770 --> 00:44:42,890
thing<font color="#E5E5E5"> we pin our root CI within our</font>

1058
00:44:39,580 --> 00:44:44,569
binary<font color="#E5E5E5"> to make sure those communications</font>

1059
00:44:42,890 --> 00:44:48,589
also can't be<font color="#CCCCCC"> man-in-the-middle and</font>

1060
00:44:44,570 --> 00:44:51,620
finally<font color="#CCCCCC"> I skip</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is really the</font><font color="#E5E5E5"> best</font>

1061
00:44:48,590 --> 00:44:54,140
<font color="#CCCCCC">option for</font><font color="#E5E5E5"> getting</font><font color="#CCCCCC"> these device identity</font>

1062
00:44:51,620 --> 00:44:55,970
certificates<font color="#E5E5E5"> generated and the reason</font>

1063
00:44:54,140 --> 00:44:58,220
scape is far superior to<font color="#E5E5E5"> alternatives is</font>

1064
00:44:55,970 --> 00:44:59,810
because the private<font color="#E5E5E5"> key is generated</font><font color="#CCCCCC"> on</font>

1065
00:44:58,220 --> 00:45:02,660
the<font color="#E5E5E5"> device and never leaves the device</font>

1066
00:44:59,810 --> 00:45:04,250
the server never sees it<font color="#E5E5E5"> whereas the</font>

1067
00:45:02,660 --> 00:45:05,720
only other alternative<font color="#E5E5E5"> is the server</font>

1068
00:45:04,250 --> 00:45:07,970
<font color="#CCCCCC">actually generating all those client</font>

1069
00:45:05,720 --> 00:45:10,520
private<font color="#E5E5E5"> keys and distributing them down</font>

1070
00:45:07,970 --> 00:45:18,009
to the client<font color="#E5E5E5"> and I think at least one</font>

1071
00:45:10,520 --> 00:45:20,570
<font color="#E5E5E5">vendor does this currently</font><font color="#CCCCCC"> all right</font>

1072
00:45:18,010 --> 00:45:22,550
<font color="#E5E5E5">next is the configuration profiles we</font>

1073
00:45:20,570 --> 00:45:23,600
already touched<font color="#E5E5E5"> on</font><font color="#CCCCCC"> this we really think</font>

1074
00:45:22,550 --> 00:45:24,980
that<font color="#E5E5E5"> they should all be signed and</font>

1075
00:45:23,600 --> 00:45:28,310
encrypted<font color="#E5E5E5"> especially if they contain</font>

1076
00:45:24,980 --> 00:45:30,220
<font color="#CCCCCC">sensitive data</font><font color="#E5E5E5"> and finally this</font><font color="#CCCCCC"> is more</font>

1077
00:45:28,310 --> 00:45:33,650
about<font color="#E5E5E5"> the cloud production environment</font>

1078
00:45:30,220 --> 00:45:36,620
<font color="#E5E5E5">or even</font><font color="#CCCCCC"> on crime as well</font><font color="#E5E5E5"> but any</font>

1079
00:45:33,650 --> 00:45:38,270
sensitive<font color="#E5E5E5"> data that's being input into</font>

1080
00:45:36,620 --> 00:45:40,040
the product like that<font color="#E5E5E5"> Wi-Fi password</font>

1081
00:45:38,270 --> 00:45:41,750
<font color="#E5E5E5">right a private key</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> that should</font>

1082
00:45:40,040 --> 00:45:46,330
really be encrypted<font color="#E5E5E5"> at rest in the</font>

1083
00:45:41,750 --> 00:45:46,330
<font color="#E5E5E5">database within the MDM product as well</font>

1084
00:45:47,110 --> 00:45:51,260
<font color="#E5E5E5">all right</font>

1085
00:45:48,650 --> 00:45:53,780
disclosure<font color="#E5E5E5"> timeline</font><font color="#CCCCCC"> we first</font><font color="#E5E5E5"> disclosed</font>

1086
00:45:51,260 --> 00:45:55,760
this<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Apple on April 28th it was</font>

1087
00:45:53,780 --> 00:45:57,860
acknowledged<font color="#E5E5E5"> April 2nd</font><font color="#CCCCCC"> the new command</font>

1088
00:45:55,760 --> 00:45:59,990
was announced<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> session</font><font color="#E5E5E5"> at WWDC</font>

1089
00:45:57,860 --> 00:46:03,020
titled<font color="#E5E5E5"> what's new in managing Apple</font>

1090
00:45:59,990 --> 00:46:04,310
devices<font color="#CCCCCC"> on June 7th but</font><font color="#E5E5E5"> Apple of course</font>

1091
00:46:03,020 --> 00:46:07,940
did<font color="#CCCCCC"> not share the sort</font><font color="#E5E5E5"> of background</font>

1092
00:46:04,310 --> 00:46:10,160
<font color="#CCCCCC">history</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> that's obviously</font><font color="#E5E5E5"> what we</font>

1093
00:46:07,940 --> 00:46:12,080
were<font color="#E5E5E5"> sharing today although</font><font color="#CCCCCC"> they did</font>

1094
00:46:10,160 --> 00:46:15,560
strongly urge vendors to move to the new

1095
00:46:12,080 --> 00:46:17,720
command as soon as possible<font color="#CCCCCC"> the MDM</font>

1096
00:46:15,560 --> 00:46:20,090
protocol reference documentation<font color="#E5E5E5"> was</font>

1097
00:46:17,720 --> 00:46:22,490
updated<font color="#CCCCCC"> to include</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> installed</font>

1098
00:46:20,090 --> 00:46:25,160
<font color="#CCCCCC">enterprise application</font><font color="#E5E5E5"> command</font><font color="#CCCCCC"> on July</font>

1099
00:46:22,490 --> 00:46:28,310
<font color="#E5E5E5">5th and the actual ability</font><font color="#CCCCCC"> to use that</font>

1100
00:46:25,160 --> 00:46:31,580
<font color="#CCCCCC">command with devices</font><font color="#E5E5E5"> was introduced with</font>

1101
00:46:28,310 --> 00:46:33,470
Mac OS<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> 13 6 which was released on</font>

1102
00:46:31,580 --> 00:46:36,020
July 9th

1103
00:46:33,470 --> 00:46:37,490
so this concludes<font color="#E5E5E5"> our presentation but</font>

1104
00:46:36,020 --> 00:46:39,020
<font color="#E5E5E5">we have a few acknowledgments we want to</font>

1105
00:46:37,490 --> 00:46:41,000
make before<font color="#E5E5E5"> before we're done yeah</font>

1106
00:46:39,020 --> 00:46:44,810
<font color="#E5E5E5">person first and foremost we really want</font>

1107
00:46:41,000 --> 00:46:46,700
to thank my co-founder<font color="#E5E5E5"> Stevie her</font><font color="#CCCCCC"> Xu who</font>

1108
00:46:44,810 --> 00:46:50,060
did a<font color="#E5E5E5"> really incredible job on all</font><font color="#CCCCCC"> of</font>

1109
00:46:46,700 --> 00:46:52,848
the early research for this<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> like a</font>

1110
00:46:50,060 --> 00:46:55,940
straight week of you know<font color="#E5E5E5"> eight to ten</font>

1111
00:46:52,849 --> 00:47:00,500
<font color="#E5E5E5">hours a day</font><font color="#CCCCCC"> the next set of</font><font color="#E5E5E5"> people we</font>

1112
00:46:55,940 --> 00:47:03,770
<font color="#E5E5E5">really want to thank is Victor</font><font color="#CCCCCC"> papeon</font>

1113
00:47:00,500 --> 00:47:06,380
Mike and Jesse who have contributed just

1114
00:47:03,770 --> 00:47:10,790
a lot to the<font color="#E5E5E5"> Mac kind of security</font>

1115
00:47:06,380 --> 00:47:13,940
community as well as last but not least

1116
00:47:10,790 --> 00:47:15,140
of<font color="#CCCCCC"> course they've been really great</font>

1117
00:47:13,940 --> 00:47:17,960
<font color="#CCCCCC">actually throughout</font><font color="#E5E5E5"> the whole process</font>

1118
00:47:15,140 --> 00:47:20,660
<font color="#E5E5E5">and obviously you know even though we</font>

1119
00:47:17,960 --> 00:47:22,099
<font color="#E5E5E5">found this vulnerability here</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> max</font>

1120
00:47:20,660 --> 00:47:23,660
and I just have a ton of respect<font color="#CCCCCC"> for</font>

1121
00:47:22,099 --> 00:47:25,130
their security engineering<font color="#E5E5E5"> team and what</font>

1122
00:47:23,660 --> 00:47:29,118
they're<font color="#CCCCCC"> doing to improve the platform</font>

1123
00:47:25,130 --> 00:47:30,790
security<font color="#E5E5E5"> for both iOS</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Mac OS</font><font color="#CCCCCC"> and we</font>

1124
00:47:29,119 --> 00:47:33,470
just want to<font color="#E5E5E5"> say keep up the good work</font>

1125
00:47:30,790 --> 00:47:34,700
<font color="#E5E5E5">all right and with that we are</font><font color="#CCCCCC"> done I</font>

1126
00:47:33,470 --> 00:47:36,959
<font color="#E5E5E5">think we may</font><font color="#CCCCCC"> have time</font><font color="#E5E5E5"> for one question</font>

1127
00:47:34,700 --> 00:47:44,029
<font color="#E5E5E5">but thank</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> so much for coming</font>

1128
00:47:36,960 --> 00:47:44,030
[Applause]

