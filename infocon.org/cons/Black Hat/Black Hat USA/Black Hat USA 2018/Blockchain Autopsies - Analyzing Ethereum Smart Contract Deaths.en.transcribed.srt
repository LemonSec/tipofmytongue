1
00:00:00,030 --> 00:00:06,180
hi good<font color="#E5E5E5"> morning</font><font color="#CCCCCC"> black I'm</font><font color="#E5E5E5"> J little I'm a</font>

2
00:00:03,659 --> 00:00:08,460
<font color="#E5E5E5">principal security engineer at</font><font color="#CCCCCC"> relevance</font>

3
00:00:06,180 --> 00:00:10,110
<font color="#CCCCCC">and I've been</font><font color="#E5E5E5"> working in the computer</font>

4
00:00:08,460 --> 00:00:12,840
<font color="#E5E5E5">security field for about</font><font color="#CCCCCC"> 10 years I</font>

5
00:00:10,110 --> 00:00:16,070
<font color="#E5E5E5">originally got into it by playing CTFs</font>

6
00:00:12,840 --> 00:00:19,320
on teams like<font color="#E5E5E5"> white Hatter's</font><font color="#CCCCCC"> 40 thieves</font>

7
00:00:16,070 --> 00:00:21,090
<font color="#E5E5E5">hate irony Marauders</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I used to run a</font>

8
00:00:19,320 --> 00:00:23,010
CTF called ghost in the shell code and

9
00:00:21,090 --> 00:00:25,320
in the past year or<font color="#CCCCCC"> so I've been</font><font color="#E5E5E5"> working</font>

10
00:00:23,010 --> 00:00:26,490
<font color="#CCCCCC">on the theorem smart contracts it's been</font>

11
00:00:25,320 --> 00:00:29,849
pretty<font color="#E5E5E5"> exciting because it's like a</font>

12
00:00:26,490 --> 00:00:31,679
whole new technology<font color="#CCCCCC"> stack at trilha</font>

13
00:00:29,849 --> 00:00:33,870
<font color="#E5E5E5">bits we're a security research and</font>

14
00:00:31,679 --> 00:00:35,280
development firm<font color="#E5E5E5"> we're headed quarters</font>

15
00:00:33,870 --> 00:00:37,860
in<font color="#E5E5E5"> New York but half of our employees</font>

16
00:00:35,280 --> 00:00:40,829
<font color="#CCCCCC">are</font><font color="#E5E5E5"> remote we work in a few</font><font color="#CCCCCC"> different</font>

17
00:00:37,860 --> 00:00:42,960
areas for research<font color="#E5E5E5"> we make foundational</font>

18
00:00:40,829 --> 00:00:44,370
tools like binary lifters that are

19
00:00:42,960 --> 00:00:47,550
usually<font color="#CCCCCC"> based on white papers and</font><font color="#E5E5E5"> we</font>

20
00:00:44,370 --> 00:00:50,430
release as much as possible<font color="#CCCCCC"> we release</font>

21
00:00:47,550 --> 00:00:53,610
as much as possible<font color="#CCCCCC"> on github an open</font>

22
00:00:50,430 --> 00:00:55,289
source for engineering<font color="#CCCCCC"> then</font><font color="#E5E5E5"> we custom</font>

23
00:00:53,610 --> 00:00:57,960
<font color="#CCCCCC">security software</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> OS query</font>

24
00:00:55,289 --> 00:00:59,789
extensions and we<font color="#CCCCCC"> also perform</font><font color="#E5E5E5"> security</font>

25
00:00:57,960 --> 00:01:01,469
assessments<font color="#E5E5E5"> from everything from user</font>

26
00:00:59,789 --> 00:01:06,060
space<font color="#E5E5E5"> libraries to kernel drivers to</font>

27
00:01:01,469 --> 00:01:08,220
<font color="#E5E5E5">block</font><font color="#CCCCCC"> train chain contracts so for what</font>

28
00:01:06,060 --> 00:01:10,470
I'll be going<font color="#CCCCCC"> over today</font><font color="#E5E5E5"> I'll give a</font>

29
00:01:08,220 --> 00:01:13,590
<font color="#E5E5E5">quick overview</font><font color="#CCCCCC"> of aetherium it's virtual</font>

30
00:01:10,470 --> 00:01:16,560
machine called<font color="#E5E5E5"> EVM in the front of the</font>

31
00:01:13,590 --> 00:01:19,229
most popular<font color="#E5E5E5"> front-end language solidity</font>

32
00:01:16,560 --> 00:01:21,540
then I'll go<font color="#E5E5E5"> over a few classes of</font>

33
00:01:19,229 --> 00:01:23,189
vulnerabilities that<font color="#E5E5E5"> can exist and I'll</font>

34
00:01:21,540 --> 00:01:25,350
show some tools<font color="#E5E5E5"> that can help you</font><font color="#CCCCCC"> find</font>

35
00:01:23,189 --> 00:01:26,820
them<font color="#E5E5E5"> then I'll talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

36
00:01:25,350 --> 00:01:29,339
unfortunate<font color="#CCCCCC"> pains of running your own</font>

37
00:01:26,820 --> 00:01:31,229
<font color="#CCCCCC">aetherium software and then we'll</font>

38
00:01:29,340 --> 00:01:33,299
<font color="#E5E5E5">finally talk</font><font color="#CCCCCC"> about how to analyze</font>

39
00:01:31,229 --> 00:01:36,810
transactions traces and look at

40
00:01:33,299 --> 00:01:39,090
contracts that<font color="#E5E5E5"> have been destroyed</font><font color="#CCCCCC"> so</font>

41
00:01:36,810 --> 00:01:40,890
for what prompted this earlier this year

42
00:01:39,090 --> 00:01:42,840
I<font color="#E5E5E5"> was working on a</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> with my</font>

43
00:01:40,890 --> 00:01:45,270
friend Ryan<font color="#CCCCCC"> storts and we were talking</font>

44
00:01:42,840 --> 00:01:48,090
<font color="#CCCCCC">about how</font><font color="#E5E5E5"> to analyze an secure value</font>

45
00:01:45,270 --> 00:01:50,280
from<font color="#CCCCCC"> aetherium contracts</font><font color="#E5E5E5"> one of my parts</font>

46
00:01:48,090 --> 00:01:50,759
for this<font color="#E5E5E5"> was to get a copy of all the</font>

47
00:01:50,280 --> 00:01:52,140
contracts

48
00:01:50,759 --> 00:01:54,119
it's the blockchain<font color="#E5E5E5"> everything should be</font>

49
00:01:52,140 --> 00:01:55,530
<font color="#E5E5E5">there but I noticed that when I tried</font><font color="#CCCCCC"> to</font>

50
00:01:54,119 --> 00:01:57,270
get<font color="#CCCCCC"> some of them it</font><font color="#E5E5E5"> just returned an</font>

51
00:01:55,530 --> 00:01:59,969
empty value represented<font color="#CCCCCC"> by this zero</font><font color="#E5E5E5"> X</font>

52
00:01:57,270 --> 00:02:03,798
and this led me<font color="#E5E5E5"> to a whole lot of</font>

53
00:01:59,969 --> 00:02:06,320
<font color="#CCCCCC">questions and that's this</font><font color="#E5E5E5"> presentation</font>

54
00:02:03,799 --> 00:02:11,910
so let's get into<font color="#CCCCCC"> some of the details</font>

55
00:02:06,320 --> 00:02:13,109
<font color="#E5E5E5">but first</font><font color="#CCCCCC"> who here</font><font color="#E5E5E5"> has bought aetherium</font>

56
00:02:11,910 --> 00:02:18,120
<font color="#E5E5E5">before</font>

57
00:02:13,110 --> 00:02:21,330
oh wow<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> lot and who has sent a</font>

58
00:02:18,120 --> 00:02:25,890
transaction<font color="#CCCCCC"> to a contract</font><font color="#E5E5E5"> no</font><font color="#CCCCCC"> stola</font><font color="#E5E5E5"> and</font>

59
00:02:21,330 --> 00:02:28,530
who has made<font color="#E5E5E5"> your own contract and has</font>

60
00:02:25,890 --> 00:02:31,350
anybody<font color="#CCCCCC"> had their contract</font><font color="#E5E5E5"> hacked</font><font color="#CCCCCC"> no</font>

61
00:02:28,530 --> 00:02:35,130
hands<font color="#CCCCCC"> okay well one guys</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> fifty</font>

62
00:02:31,350 --> 00:02:36,620
<font color="#CCCCCC">fifty so maybe</font><font color="#E5E5E5"> he doesn't know</font><font color="#CCCCCC"> so let's</font>

63
00:02:35,130 --> 00:02:38,820
get into the basics<font color="#CCCCCC"> of aetherium</font>

64
00:02:36,620 --> 00:02:39,360
<font color="#CCCCCC">aetherium is a distributed blockchain</font>

65
00:02:38,820 --> 00:02:41,640
system

66
00:02:39,360 --> 00:02:44,370
it's like killer feature is called<font color="#E5E5E5"> smart</font>

67
00:02:41,640 --> 00:02:45,899
<font color="#CCCCCC">ranch</font><font color="#E5E5E5"> smart contracts these are little</font>

68
00:02:44,370 --> 00:02:47,970
programs that execute on every<font color="#E5E5E5"> node in</font>

69
00:02:45,900 --> 00:02:51,480
the network<font color="#CCCCCC"> this</font><font color="#E5E5E5"> leads to it being</font>

70
00:02:47,970 --> 00:02:52,770
<font color="#E5E5E5">called the world computer it's currently</font>

71
00:02:51,480 --> 00:02:54,750
<font color="#E5E5E5">the second most valuable cryptocurrency</font>

72
00:02:52,770 --> 00:02:56,760
according to a snapshot<font color="#CCCCCC"> on Quay mark</font><font color="#E5E5E5"> cap</font>

73
00:02:54,750 --> 00:03:01,980
<font color="#E5E5E5">and over the past few</font><font color="#CCCCCC"> years a</font><font color="#E5E5E5"> lot of</font>

74
00:02:56,760 --> 00:03:03,269
<font color="#E5E5E5">banks and have shown interest in it the</font>

75
00:03:01,980 --> 00:03:03,739
main that launched<font color="#E5E5E5"> just over three</font><font color="#CCCCCC"> years</font>

76
00:03:03,270 --> 00:03:07,740
ago

77
00:03:03,740 --> 00:03:09,060
<font color="#CCCCCC">so everything's relatively new</font><font color="#E5E5E5"> a little</font>

78
00:03:07,740 --> 00:03:11,580
bit about the implementation<font color="#CCCCCC"> its</font>

79
00:03:09,060 --> 00:03:13,560
formally described in this<font color="#E5E5E5"> yellow paper</font>

80
00:03:11,580 --> 00:03:16,050
written by Gavin wood it's literally

81
00:03:13,560 --> 00:03:17,190
yellow but there's a much<font color="#E5E5E5"> more</font>

82
00:03:16,050 --> 00:03:18,959
approachable version called the beige

83
00:03:17,190 --> 00:03:20,730
paper that has a lot less<font color="#CCCCCC"> Sigma's and</font>

84
00:03:18,959 --> 00:03:22,019
<font color="#E5E5E5">other math symbols don't worry I'll be</font>

85
00:03:20,730 --> 00:03:25,350
<font color="#E5E5E5">reading this to you verbatim or anything</font>

86
00:03:22,019 --> 00:03:26,489
<font color="#CCCCCC">as some better examples</font><font color="#E5E5E5"> so let's talk</font>

87
00:03:25,350 --> 00:03:30,239
<font color="#E5E5E5">about transactions that</font><font color="#CCCCCC"> can happen</font>

88
00:03:26,489 --> 00:03:32,550
between accounts so accounts<font color="#E5E5E5"> are think</font>

89
00:03:30,239 --> 00:03:36,060
<font color="#E5E5E5">of them like a bank account</font><font color="#CCCCCC"> they're</font>

90
00:03:32,550 --> 00:03:38,780
uniquely identifiable<font color="#CCCCCC"> 160 bit numbers</font>

91
00:03:36,060 --> 00:03:41,130
I'm just gonna use emojis instead

92
00:03:38,780 --> 00:03:43,769
<font color="#E5E5E5">because the numbers</font><font color="#CCCCCC"> not show up very</font>

93
00:03:41,130 --> 00:03:44,790
<font color="#E5E5E5">well on PowerPoint</font><font color="#CCCCCC"> and the rest</font><font color="#E5E5E5"> is also</font>

94
00:03:43,769 --> 00:03:48,230
like a postal<font color="#E5E5E5"> code or a</font><font color="#CCCCCC"> routing number</font>

95
00:03:44,790 --> 00:03:51,120
you can send a<font color="#E5E5E5"> transaction to any</font>

96
00:03:48,230 --> 00:03:52,679
account<font color="#CCCCCC"> you'd like</font><font color="#E5E5E5"> an account</font><font color="#CCCCCC"> could send</font>

97
00:03:51,120 --> 00:03:55,410
money called ether to another<font color="#E5E5E5"> account</font>

98
00:03:52,680 --> 00:03:57,360
<font color="#E5E5E5">and there are special accounts called</font>

99
00:03:55,410 --> 00:03:59,450
contracts that have<font color="#E5E5E5"> code</font><font color="#CCCCCC"> that runs</font>

100
00:03:57,360 --> 00:04:01,459
whenever a transaction<font color="#E5E5E5"> has sent to</font><font color="#CCCCCC"> that</font>

101
00:03:59,450 --> 00:04:05,640
these transactions are grouped together

102
00:04:01,459 --> 00:04:07,050
<font color="#E5E5E5">into a grouping called a block and</font>

103
00:04:05,640 --> 00:04:13,920
<font color="#E5E5E5">that's what's actually saved on the</font>

104
00:04:07,050 --> 00:04:16,049
network so for a little bit about the

105
00:04:13,920 --> 00:04:17,849
<font color="#CCCCCC">etherium virtual machine that</font><font color="#E5E5E5"> the</font>

106
00:04:16,048 --> 00:04:21,029
contracts run it's a<font color="#CCCCCC"> big-endian stack</font>

107
00:04:17,850 --> 00:04:22,140
machine<font color="#E5E5E5"> it's got about</font><font color="#CCCCCC"> 185 op codes</font>

108
00:04:21,029 --> 00:04:24,090
currently<font color="#E5E5E5"> there's more added</font>

109
00:04:22,140 --> 00:04:26,770
incrementally over over the course<font color="#E5E5E5"> of</font>

110
00:04:24,090 --> 00:04:30,679
time<font color="#E5E5E5"> the native bit</font><font color="#CCCCCC"> width is</font>

111
00:04:26,770 --> 00:04:33,650
256<font color="#E5E5E5"> bits and most of the address spaces</font>

112
00:04:30,680 --> 00:04:35,420
are also<font color="#E5E5E5"> that same</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> one interesting</font>

113
00:04:33,650 --> 00:04:37,280
<font color="#E5E5E5">part is</font><font color="#CCCCCC"> that about</font><font color="#E5E5E5"> a quarter</font><font color="#CCCCCC"> of the</font>

114
00:04:35,420 --> 00:04:39,170
possible opcode address space<font color="#E5E5E5"> that's one</font>

115
00:04:37,280 --> 00:04:40,429
byte<font color="#CCCCCC"> is used up by very similar</font>

116
00:04:39,170 --> 00:04:42,110
<font color="#E5E5E5">instruction so there's a unique outcome</font>

117
00:04:40,430 --> 00:04:44,180
for<font color="#E5E5E5"> push one byte on to the stack</font><font color="#CCCCCC"> and</font>

118
00:04:42,110 --> 00:04:47,900
push<font color="#E5E5E5"> five bytes on the stack and so</font><font color="#CCCCCC"> on</font>

119
00:04:44,180 --> 00:04:50,780
each of<font color="#CCCCCC"> these instructions have</font><font color="#E5E5E5"> a gas</font>

120
00:04:47,900 --> 00:04:54,010
cost<font color="#E5E5E5"> to prevent infinite loops on the</font>

121
00:04:50,780 --> 00:04:56,419
world computer<font color="#E5E5E5"> and things like added</font>

122
00:04:54,010 --> 00:05:00,200
subtracts how much lower gas costs in

123
00:04:56,420 --> 00:05:02,990
storing<font color="#E5E5E5"> into the permanent ledger</font><font color="#CCCCCC"> a good</font>

124
00:05:00,200 --> 00:05:06,200
<font color="#E5E5E5">reference for more about EVM is ether</font><font color="#CCCCCC"> V</font>

125
00:05:02,990 --> 00:05:10,640
<font color="#CCCCCC">Mao or this EVM</font><font color="#E5E5E5"> opcodes repository I</font>

126
00:05:06,200 --> 00:05:12,110
made on github<font color="#CCCCCC"> so for a little bit</font><font color="#E5E5E5"> about</font>

127
00:05:10,640 --> 00:05:14,390
what<font color="#E5E5E5"> these address spaces look like</font>

128
00:05:12,110 --> 00:05:16,460
there's<font color="#E5E5E5"> about five of them</font><font color="#CCCCCC"> maybe six</font>

129
00:05:14,390 --> 00:05:18,680
<font color="#E5E5E5">depending on how you view a few things</font>

130
00:05:16,460 --> 00:05:23,120
<font color="#CCCCCC">but the important</font><font color="#E5E5E5"> part is that most of</font>

131
00:05:18,680 --> 00:05:25,040
them start at address<font color="#CCCCCC"> zero so your code</font>

132
00:05:23,120 --> 00:05:28,360
is mapped in at<font color="#CCCCCC"> zero that is what where</font>

133
00:05:25,040 --> 00:05:28,360
execution starts<font color="#E5E5E5"> on every transaction</font>

134
00:05:28,810 --> 00:05:40,220
<font color="#E5E5E5">storage is for your contract is</font><font color="#CCCCCC"> start</font>

135
00:05:33,410 --> 00:05:43,610
<font color="#E5E5E5">said zero as well</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> most people don't</font>

136
00:05:40,220 --> 00:05:45,290
make their contracts in solidity<font color="#E5E5E5"> or</font>

137
00:05:43,610 --> 00:05:46,430
sorry any VM<font color="#E5E5E5"> that you write them in</font>

138
00:05:45,290 --> 00:05:50,300
solidity instead because it's a lot

139
00:05:46,430 --> 00:05:52,100
<font color="#CCCCCC">easier</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use solidity</font><font color="#E5E5E5"> is kind of like</font>

140
00:05:50,300 --> 00:05:55,130
<font color="#CCCCCC">JavaScript with maybe a little dash of</font>

141
00:05:52,100 --> 00:05:58,240
<font color="#E5E5E5">Python thrown in</font><font color="#CCCCCC"> it's meant to</font><font color="#E5E5E5"> be</font>

142
00:05:55,130 --> 00:06:01,340
expressive and pretty easy<font color="#CCCCCC"> to read</font>

143
00:05:58,240 --> 00:06:03,890
solidity compiles down to EVM very

144
00:06:01,340 --> 00:06:04,849
directly<font color="#CCCCCC"> it's a very new compiler it's</font>

145
00:06:03,890 --> 00:06:06,409
only<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> years old the</font>

146
00:06:04,850 --> 00:06:08,840
optimizations<font color="#CCCCCC"> can literally</font><font color="#E5E5E5"> only get</font>

147
00:06:06,410 --> 00:06:10,610
better<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this language has evolved</font>

148
00:06:08,840 --> 00:06:12,320
<font color="#E5E5E5">more than it has been</font><font color="#CCCCCC"> designed</font><font color="#E5E5E5"> and</font>

149
00:06:10,610 --> 00:06:16,390
making incremental<font color="#E5E5E5"> changes that break</font>

150
00:06:12,320 --> 00:06:19,430
backwards compatibility<font color="#E5E5E5"> every few months</font>

151
00:06:16,390 --> 00:06:21,229
so here's an example<font color="#E5E5E5"> contract this code</font>

152
00:06:19,430 --> 00:06:27,550
can essentially be deployed directly

153
00:06:21,230 --> 00:06:27,550
<font color="#E5E5E5">into the etherium</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> - go for it -</font>

154
00:06:29,080 --> 00:06:36,050
<font color="#CCCCCC">go over it kind of quickly there's two</font>

155
00:06:33,050 --> 00:06:38,900
state fields<font color="#CCCCCC"> of state</font><font color="#E5E5E5"> variables</font><font color="#CCCCCC"> owner</font>

156
00:06:36,050 --> 00:06:40,700
<font color="#E5E5E5">and jar jar's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> mapping</font><font color="#CCCCCC"> mapping is</font>

157
00:06:38,900 --> 00:06:42,469
basically an associative dictionary

158
00:06:40,700 --> 00:06:45,620
<font color="#CCCCCC">these state variables persist across</font>

159
00:06:42,470 --> 00:06:47,630
transactions<font color="#CCCCCC"> when the contract</font><font color="#E5E5E5"> is</font>

160
00:06:45,620 --> 00:06:51,860
created<font color="#E5E5E5"> the constructor is executed in</font>

161
00:06:47,630 --> 00:06:58,159
this case<font color="#E5E5E5"> it saves the Creator into the</font>

162
00:06:51,860 --> 00:07:00,740
owner field<font color="#E5E5E5"> and then there are</font><font color="#CCCCCC"> a couple</font>

163
00:06:58,160 --> 00:07:02,630
<font color="#E5E5E5">functions</font><font color="#CCCCCC"> bake and eat these are</font>

164
00:07:00,740 --> 00:07:04,370
callable by anyone on<font color="#CCCCCC"> the network anyone</font>

165
00:07:02,630 --> 00:07:06,980
who has an<font color="#CCCCCC"> accountant aetherium can call</font>

166
00:07:04,370 --> 00:07:09,530
<font color="#E5E5E5">in to these functions</font><font color="#CCCCCC"> and finally</font>

167
00:07:06,980 --> 00:07:14,510
there's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> closed</font><font color="#E5E5E5"> function that does a</font>

168
00:07:09,530 --> 00:07:15,890
validity check<font color="#E5E5E5"> and what's the owner</font><font color="#CCCCCC"> or</font>

169
00:07:14,510 --> 00:07:19,310
tree value from the contract so in this

170
00:07:15,890 --> 00:07:20,780
example like the<font color="#CCCCCC"> owner has been the</font>

171
00:07:19,310 --> 00:07:22,040
cookie shop<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> been baking cookies</font>

172
00:07:20,780 --> 00:07:25,119
<font color="#CCCCCC">and getting money</font><font color="#E5E5E5"> every time</font><font color="#CCCCCC"> it bakes a</font>

173
00:07:22,040 --> 00:07:28,670
cookie because<font color="#CCCCCC"> a person</font><font color="#E5E5E5"> has to send in</font>

174
00:07:25,120 --> 00:07:29,540
0.1<font color="#E5E5E5"> ether to make some cookies</font><font color="#CCCCCC"> and when</font>

175
00:07:28,670 --> 00:07:31,580
they're done they want to get<font color="#E5E5E5"> that money</font>

176
00:07:29,540 --> 00:07:36,590
<font color="#E5E5E5">back and</font><font color="#CCCCCC"> a common way to do this</font><font color="#E5E5E5"> is with</font>

177
00:07:31,580 --> 00:07:38,330
<font color="#E5E5E5">the self-destruct function and</font><font color="#CCCCCC"> opcode</font><font color="#E5E5E5"> so</font>

178
00:07:36,590 --> 00:07:41,869
let's look<font color="#E5E5E5"> at what happens when a</font>

179
00:07:38,330 --> 00:07:45,710
contracts created manual creation<font color="#E5E5E5"> of</font>

180
00:07:41,870 --> 00:07:47,300
contracts happens when an account<font color="#E5E5E5"> sends</font>

181
00:07:45,710 --> 00:07:50,750
a little bit of money to<font color="#CCCCCC"> cover the gas</font>

182
00:07:47,300 --> 00:07:52,600
costs for creating the contract and the

183
00:07:50,750 --> 00:07:56,720
contract<font color="#E5E5E5"> creation code to address</font><font color="#CCCCCC"> zero</font>

184
00:07:52,600 --> 00:07:59,030
so what happens is just<font color="#CCCCCC"> what you'd</font>

185
00:07:56,720 --> 00:08:02,330
expect<font color="#CCCCCC"> it creates a new</font><font color="#E5E5E5"> contract</font>

186
00:07:59,030 --> 00:08:05,119
represented<font color="#E5E5E5"> by</font><font color="#CCCCCC"> this robot the owner is</font>

187
00:08:02,330 --> 00:08:06,229
set to who<font color="#E5E5E5"> created it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> jar is</font>

188
00:08:05,120 --> 00:08:10,250
basically<font color="#E5E5E5"> empty everything is</font>

189
00:08:06,230 --> 00:08:16,340
initialized to<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> so for the corollary</font>

190
00:08:10,250 --> 00:08:20,800
operation<font color="#CCCCCC"> closed what happens</font><font color="#E5E5E5"> like I say</font>

191
00:08:16,340 --> 00:08:23,390
before the close function<font color="#E5E5E5"> gets its</font>

192
00:08:20,800 --> 00:08:27,260
prototype gets hashed<font color="#E5E5E5"> the first</font><font color="#CCCCCC"> four</font>

193
00:08:23,390 --> 00:08:29,390
bytes are used as a<font color="#CCCCCC"> mixer and that</font>

194
00:08:27,260 --> 00:08:32,090
transaction gets<font color="#E5E5E5"> sent from the owner to</font>

195
00:08:29,390 --> 00:08:34,850
<font color="#CCCCCC">the contract</font>

196
00:08:32,090 --> 00:08:37,280
it runs self-destruct and so the robot

197
00:08:34,850 --> 00:08:38,960
sends<font color="#E5E5E5"> money back to the owner and then</font>

198
00:08:37,280 --> 00:08:40,429
the contract<font color="#E5E5E5"> goes away after</font><font color="#CCCCCC"> this</font>

199
00:08:38,960 --> 00:08:44,720
transaction there can be no further

200
00:08:40,429 --> 00:08:46,280
trade transactions to this contract but

201
00:08:44,720 --> 00:08:50,090
let's not<font color="#E5E5E5"> focus on that too much let's</font>

202
00:08:46,280 --> 00:08:51,500
talk up more about<font color="#E5E5E5"> cookies here's a few</font>

203
00:08:50,090 --> 00:08:54,110
<font color="#CCCCCC">examples of what</font><font color="#E5E5E5"> some transactions look</font>

204
00:08:51,500 --> 00:08:56,090
like<font color="#CCCCCC"> anyone can call bake</font>

205
00:08:54,110 --> 00:08:58,280
so here we have two calls of an

206
00:08:56,090 --> 00:09:00,050
astronaut calling<font color="#E5E5E5"> bake and one weight</font>

207
00:08:58,280 --> 00:09:01,850
<font color="#E5E5E5">lifter</font><font color="#CCCCCC"> collide bake</font><font color="#E5E5E5"> and at the bottom</font>

208
00:09:00,050 --> 00:09:02,270
<font color="#CCCCCC">there's a representation</font><font color="#E5E5E5"> of what that</font>

209
00:09:01,850 --> 00:09:05,770
looks like

210
00:09:02,270 --> 00:09:10,460
so the astronaut has a few cookies<font color="#E5E5E5"> and</font>

211
00:09:05,770 --> 00:09:12,260
and so does the<font color="#E5E5E5"> weight lifter but let's</font>

212
00:09:10,460 --> 00:09:16,220
talk<font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> about eat he takes an</font>

213
00:09:12,260 --> 00:09:20,020
argument<font color="#CCCCCC"> this</font><font color="#E5E5E5"> argument is the type of</font>

214
00:09:16,220 --> 00:09:22,160
<font color="#E5E5E5">youant that is short for um</font><font color="#CCCCCC"> 256</font><font color="#E5E5E5"> and</font>

215
00:09:20,020 --> 00:09:23,420
these arguments are<font color="#E5E5E5"> big</font><font color="#CCCCCC"> endian</font><font color="#E5E5E5"> so this</font>

216
00:09:22,160 --> 00:09:25,459
<font color="#E5E5E5">is what the transaction would look like</font>

217
00:09:23,420 --> 00:09:28,849
and as we see if the<font color="#CCCCCC"> weightlifter</font><font color="#E5E5E5"> calls</font>

218
00:09:25,460 --> 00:09:30,530
like<font color="#E5E5E5"> eat</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> to the contract</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will the</font>

219
00:09:28,850 --> 00:09:34,520
contract will just subtract the count

220
00:09:30,530 --> 00:09:37,010
and the state will be agreed on by

221
00:09:34,520 --> 00:09:39,710
everyone does this look suspect to

222
00:09:37,010 --> 00:09:41,510
anybody there's a little bug<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this</font>

223
00:09:39,710 --> 00:09:42,860
simple contract as it<font color="#E5E5E5"> turns out there's</font>

224
00:09:41,510 --> 00:09:45,680
an integer overflow I'm the only

225
00:09:42,860 --> 00:09:49,310
subtraction and the whole thing<font color="#CCCCCC"> so what</font>

226
00:09:45,680 --> 00:09:52,459
happens if the detective<font color="#E5E5E5"> sleuth emoji</font>

227
00:09:49,310 --> 00:09:55,819
contract calls eat<font color="#E5E5E5"> one on the contract</font>

228
00:09:52,460 --> 00:10:00,710
well<font color="#CCCCCC"> contest or just initialize to 0 so</font>

229
00:09:55,820 --> 00:10:03,170
<font color="#CCCCCC">0</font><font color="#E5E5E5"> minus 1</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> ffffff a lot of us and then</font>

230
00:10:00,710 --> 00:10:04,550
here's an example where<font color="#E5E5E5"> somebody would</font>

231
00:10:03,170 --> 00:10:10,459
<font color="#E5E5E5">have a whole lot of cookies or they</font>

232
00:10:04,550 --> 00:10:13,640
wouldn't expect so that's just one

233
00:10:10,460 --> 00:10:15,860
example of something that<font color="#E5E5E5"> can go wrong</font>

234
00:10:13,640 --> 00:10:20,390
in solidity integer under flows but I'd

235
00:10:15,860 --> 00:10:21,890
like<font color="#E5E5E5"> to describe a few more for a</font>

236
00:10:20,390 --> 00:10:23,630
<font color="#E5E5E5">language</font><font color="#CCCCCC"> designed in this</font><font color="#E5E5E5"> decade there</font>

237
00:10:21,890 --> 00:10:26,270
are a lot of<font color="#CCCCCC"> issues that lead</font><font color="#E5E5E5"> to</font>

238
00:10:23,630 --> 00:10:28,340
confusion by developers can<font color="#CCCCCC"> me john</font>

239
00:10:26,270 --> 00:10:32,210
<font color="#E5E5E5">expects the states and some of those can</font>

240
00:10:28,340 --> 00:10:34,670
lead both to developer confusion<font color="#E5E5E5"> in</font><font color="#CCCCCC"> to</font>

241
00:10:32,210 --> 00:10:35,810
vulnerabilities<font color="#E5E5E5"> so letís working on</font>

242
00:10:34,670 --> 00:10:38,240
correcting their tooling and<font color="#CCCCCC"> the</font>

243
00:10:35,810 --> 00:10:39,829
language specification<font color="#E5E5E5"> but it still has</font>

244
00:10:38,240 --> 00:10:41,780
a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> work to do i can just go</font><font color="#E5E5E5"> on for</font>

245
00:10:39,830 --> 00:10:44,300
hours<font color="#CCCCCC"> about all this but just</font><font color="#E5E5E5"> to</font>

246
00:10:41,780 --> 00:10:46,130
highlight a few<font color="#E5E5E5"> type inference and re</font>

247
00:10:44,300 --> 00:10:47,420
<font color="#E5E5E5">links are things that are going</font><font color="#CCCCCC"> away in</font>

248
00:10:46,130 --> 00:10:50,620
the<font color="#E5E5E5"> next</font><font color="#CCCCCC"> version of solidity because</font>

249
00:10:47,420 --> 00:10:54,160
<font color="#CCCCCC">they're just removing that feature and</font>

250
00:10:50,620 --> 00:10:56,600
like to<font color="#E5E5E5"> talk about one more</font>

251
00:10:54,160 --> 00:10:58,839
<font color="#E5E5E5">uninitialized variables</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a</font>

252
00:10:56,600 --> 00:11:01,670
contract<font color="#CCCCCC"> i found on the reddit eath</font>

253
00:10:58,840 --> 00:11:06,610
subreddit and this was used as a

254
00:11:01,670 --> 00:11:08,300
<font color="#CCCCCC">backdoor the basically there's a few</font>

255
00:11:06,610 --> 00:11:10,190
state variables<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font>

256
00:11:08,300 --> 00:11:13,459
contract the important one here is

257
00:11:10,190 --> 00:11:15,200
secret seed<font color="#E5E5E5"> and it turns out that</font><font color="#CCCCCC"> when</font>

258
00:11:13,460 --> 00:11:18,110
<font color="#CCCCCC">you declare a</font><font color="#E5E5E5"> variable but don't</font>

259
00:11:15,200 --> 00:11:21,020
initialize it<font color="#CCCCCC"> it just</font><font color="#E5E5E5"> gets initialized</font>

260
00:11:18,110 --> 00:11:22,790
to<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> piece of course it would and so</font>

261
00:11:21,020 --> 00:11:26,300
<font color="#E5E5E5">what happens on this line if</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

262
00:11:22,790 --> 00:11:27,230
seed components<font color="#E5E5E5"> s it actually creates a</font>

263
00:11:26,300 --> 00:11:30,380
<font color="#CCCCCC">noose</font>

264
00:11:27,230 --> 00:11:32,780
a pointer to<font color="#CCCCCC"> zero and when these</font>

265
00:11:30,380 --> 00:11:35,210
assignments happen<font color="#E5E5E5"> it overwrites the ste</font>

266
00:11:32,780 --> 00:11:37,250
variables so<font color="#E5E5E5"> this bottom line overwrites</font>

267
00:11:35,210 --> 00:11:42,740
the<font color="#E5E5E5"> secret seed and this was used to</font>

268
00:11:37,250 --> 00:11:46,490
<font color="#E5E5E5">backdoor a lottery system</font><font color="#CCCCCC"> for more</font>

269
00:11:42,740 --> 00:11:48,530
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> we have a repository</font><font color="#CCCCCC"> on github</font>

270
00:11:46,490 --> 00:11:50,900
<font color="#E5E5E5">called not-so-smart contracts they have</font>

271
00:11:48,530 --> 00:11:57,050
concise examples and triggers<font color="#E5E5E5"> for many</font>

272
00:11:50,900 --> 00:11:58,459
kinds of<font color="#E5E5E5"> vulnerabilities so now giving</font>

273
00:11:57,050 --> 00:12:00,050
you a<font color="#E5E5E5"> little taste of what can</font><font color="#CCCCCC"> go wrong</font>

274
00:11:58,460 --> 00:12:01,520
<font color="#E5E5E5">in the contract but I'd like to</font><font color="#CCCCCC"> show</font>

275
00:12:00,050 --> 00:12:06,319
some<font color="#E5E5E5"> tools</font><font color="#CCCCCC"> that can help discover issues</font>

276
00:12:01,520 --> 00:12:09,949
and understand them better<font color="#CCCCCC"> I think the</font>

277
00:12:06,320 --> 00:12:13,280
best tool out<font color="#CCCCCC"> there for analyzing binary</font>

278
00:12:09,950 --> 00:12:17,000
contracts is ether splay so our binary

279
00:12:13,280 --> 00:12:18,650
ninja<font color="#CCCCCC"> I'll get it displayed is really</font>

280
00:12:17,000 --> 00:12:20,420
really good<font color="#E5E5E5"> control flow recovery and a</font>

281
00:12:18,650 --> 00:12:21,560
lot<font color="#E5E5E5"> of works been put into it and it</font>

282
00:12:20,420 --> 00:12:24,610
<font color="#E5E5E5">displays it in a nice graph view like</font>

283
00:12:21,560 --> 00:12:26,810
this<font color="#CCCCCC"> it also has a dictionary of over</font>

284
00:12:24,610 --> 00:12:28,280
30,000<font color="#E5E5E5"> function signatures like I've</font>

285
00:12:26,810 --> 00:12:30,229
<font color="#CCCCCC">showed before so I can show you useful</font>

286
00:12:28,280 --> 00:12:36,140
<font color="#CCCCCC">information like</font><font color="#E5E5E5"> the name of functions</font>

287
00:12:30,230 --> 00:12:38,420
and the parameter types<font color="#CCCCCC"> if you'd rather</font>

288
00:12:36,140 --> 00:12:40,040
use Ida Pro than binary ninja<font color="#E5E5E5"> I've</font>

289
00:12:38,420 --> 00:12:41,780
<font color="#CCCCCC">ported some of the you display features</font>

290
00:12:40,040 --> 00:12:44,870
to an Ida<font color="#E5E5E5"> Pro processor module it's</font>

291
00:12:41,780 --> 00:12:47,360
still<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much a work in progress</font><font color="#CCCCCC"> but</font>

292
00:12:44,870 --> 00:12:48,920
if you if you want to<font color="#E5E5E5"> look</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> if</font>

293
00:12:47,360 --> 00:12:54,950
you used<font color="#E5E5E5"> to Ida you can</font><font color="#CCCCCC"> definitely use</font>

294
00:12:48,920 --> 00:12:57,439
<font color="#CCCCCC">that instead</font><font color="#E5E5E5"> a useful website is ether</font>

295
00:12:54,950 --> 00:13:00,140
<font color="#CCCCCC">p.m. tada</font><font color="#E5E5E5"> oh I mention this</font><font color="#CCCCCC"> before for</font><font color="#E5E5E5"> a</font>

296
00:12:57,440 --> 00:13:01,580
top code reference but one day they

297
00:13:00,140 --> 00:13:03,410
released<font color="#E5E5E5"> a decompiler on their website</font>

298
00:13:01,580 --> 00:13:06,010
so if you don't<font color="#E5E5E5"> mind sending your code</font>

299
00:13:03,410 --> 00:13:09,230
to<font color="#CCCCCC"> the website it'll</font><font color="#E5E5E5"> give you a</font>

300
00:13:06,010 --> 00:13:10,370
<font color="#E5E5E5">decompiler output it's not perfect but</font>

301
00:13:09,230 --> 00:13:12,170
it's definitely<font color="#CCCCCC"> way better</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> keeping</font>

302
00:13:10,370 --> 00:13:17,270
<font color="#E5E5E5">track of a state machine in your head or</font>

303
00:13:12,170 --> 00:13:19,449
<font color="#CCCCCC">on a sheet</font><font color="#E5E5E5"> of paper for another tool</font>

304
00:13:17,270 --> 00:13:22,250
there's<font color="#E5E5E5"> a myth roll made by consensus</font>

305
00:13:19,450 --> 00:13:24,139
<font color="#CCCCCC">it's basically a Swiss Army</font><font color="#E5E5E5"> knife</font>

306
00:13:22,250 --> 00:13:26,389
can<font color="#E5E5E5"> analyze solidity can analyze</font>

307
00:13:24,139 --> 00:13:28,459
binaries<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can query the live</font>

308
00:13:26,389 --> 00:13:30,319
blockchain for some<font color="#E5E5E5"> information it can</font>

309
00:13:28,459 --> 00:13:32,869
perform<font color="#E5E5E5"> searches for certain byte</font>

310
00:13:30,319 --> 00:13:35,120
sequences<font color="#E5E5E5"> on the boxing or code</font>

311
00:13:32,870 --> 00:13:41,029
sequences and it also has a<font color="#CCCCCC"> graph view</font>

312
00:13:35,120 --> 00:13:44,569
<font color="#CCCCCC">representation for some like hot</font><font color="#E5E5E5"> off the</font>

313
00:13:41,029 --> 00:13:47,779
press kind<font color="#CCCCCC"> of news rattle is a tool made</font>

314
00:13:44,569 --> 00:13:50,959
by<font color="#E5E5E5"> my friend Ryan</font><font color="#CCCCCC"> it lifts</font><font color="#E5E5E5"> EVM to an IR</font>

315
00:13:47,779 --> 00:13:53,000
that IR<font color="#E5E5E5"> has a single static assignment</font>

316
00:13:50,959 --> 00:13:54,859
form and it can do a<font color="#E5E5E5"> lot of</font>

317
00:13:53,000 --> 00:13:57,730
optimizations<font color="#CCCCCC"> to simplifications it can</font>

318
00:13:54,860 --> 00:14:00,680
actually<font color="#E5E5E5"> go between basic blocks and</font>

319
00:13:57,730 --> 00:14:02,660
summarize code<font color="#CCCCCC"> this is something that</font>

320
00:14:00,680 --> 00:14:06,829
<font color="#CCCCCC">Susilo T compiler itself doesn't really</font>

321
00:14:02,660 --> 00:14:08,660
<font color="#CCCCCC">even do yet</font><font color="#E5E5E5"> it can also analyze all the</font>

322
00:14:06,829 --> 00:14:09,880
references<font color="#CCCCCC"> to a certain memory address</font>

323
00:14:08,660 --> 00:14:13,880
<font color="#CCCCCC">source it's a storage</font><font color="#E5E5E5"> address and</font>

324
00:14:09,880 --> 00:14:15,380
recover some variable information this

325
00:14:13,880 --> 00:14:19,189
is<font color="#E5E5E5"> the example output it's like a dot</font>

326
00:14:15,380 --> 00:14:21,529
file<font color="#E5E5E5"> and for one more tool it's</font>

327
00:14:19,190 --> 00:14:22,699
<font color="#CCCCCC">Manticore our Python symbolic execution</font>

328
00:14:21,529 --> 00:14:26,569
framework

329
00:14:22,699 --> 00:14:28,639
it supports x86 and arm but<font color="#E5E5E5"> about a</font><font color="#CCCCCC"> year</font>

330
00:14:26,569 --> 00:14:31,490
ago<font color="#E5E5E5"> we added</font><font color="#CCCCCC"> IBM support so it</font>

331
00:14:28,639 --> 00:14:33,350
symbolically executes contract

332
00:14:31,490 --> 00:14:37,100
blockchain<font color="#CCCCCC"> states</font><font color="#E5E5E5"> it's got a bunch of</font>

333
00:14:33,350 --> 00:14:40,189
cool features<font color="#CCCCCC"> can emulate</font><font color="#E5E5E5"> multiple</font>

334
00:14:37,100 --> 00:14:42,470
transactions<font color="#E5E5E5"> multiple contracts</font><font color="#CCCCCC"> it'll</font>

335
00:14:40,189 --> 00:14:45,050
<font color="#E5E5E5">automatically explore all the paths in</font>

336
00:14:42,470 --> 00:14:47,540
<font color="#CCCCCC">your contract and it will</font><font color="#E5E5E5"> also emit an</font>

337
00:14:45,050 --> 00:14:50,449
output directory full of concrete test

338
00:14:47,540 --> 00:14:53,269
cases<font color="#CCCCCC"> for it so that's just a</font><font color="#E5E5E5"> preview of</font>

339
00:14:50,449 --> 00:14:59,199
<font color="#E5E5E5">all the many of the tools</font><font color="#CCCCCC"> that are</font>

340
00:14:53,269 --> 00:15:02,630
<font color="#E5E5E5">available there's more every month so</font>

341
00:14:59,199 --> 00:15:06,258
now for<font color="#E5E5E5"> a bit of the ugly part running</font>

342
00:15:02,630 --> 00:15:09,860
your own<font color="#CCCCCC"> aetherium software this</font><font color="#E5E5E5"> is very</font>

343
00:15:06,259 --> 00:15:11,480
<font color="#E5E5E5">much hindsight advice</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> run</font>

344
00:15:09,860 --> 00:15:13,430
your own node<font color="#CCCCCC"> you</font><font color="#E5E5E5"> definitely want to</font>

345
00:15:11,480 --> 00:15:17,060
check<font color="#CCCCCC"> your storage</font><font color="#E5E5E5"> requirements this is</font>

346
00:15:13,430 --> 00:15:20,120
on the FAQ for parity<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Kev but the</font>

347
00:15:17,060 --> 00:15:22,849
<font color="#E5E5E5">best resource I found is on Stack</font>

348
00:15:20,120 --> 00:15:26,329
Exchange<font color="#CCCCCC"> basically if</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to run a</font>

349
00:15:22,850 --> 00:15:29,750
full node you will need over<font color="#E5E5E5"> 1.1</font>

350
00:15:26,329 --> 00:15:32,359
terabytes so I'll say personally I

351
00:15:29,750 --> 00:15:34,760
filled<font color="#E5E5E5"> up a 500 gig SSD first and then a</font>

352
00:15:32,360 --> 00:15:36,720
terabyte one huh and then I<font color="#E5E5E5"> bought a</font><font color="#CCCCCC"> 2</font>

353
00:15:34,760 --> 00:15:38,880
terabyte

354
00:15:36,720 --> 00:15:40,650
another thing that's<font color="#E5E5E5"> not really talked</font>

355
00:15:38,880 --> 00:15:42,180
<font color="#CCCCCC">about all</font><font color="#E5E5E5"> that much is disk throughput</font>

356
00:15:40,650 --> 00:15:47,640
matters you're basically maxing out your

357
00:15:42,180 --> 00:15:49,589
<font color="#CCCCCC">AI ops</font><font color="#E5E5E5"> for days and days</font><font color="#CCCCCC"> of day so for</font>

358
00:15:47,640 --> 00:15:52,080
<font color="#E5E5E5">example with singing parody I actually</font>

359
00:15:49,590 --> 00:15:58,260
double<font color="#CCCCCC"> the total</font><font color="#E5E5E5"> disk rights to my SSD</font>

360
00:15:52,080 --> 00:16:02,660
just<font color="#CCCCCC"> syncing the blockchain so there's</font>

361
00:15:58,260 --> 00:16:04,860
two options<font color="#CCCCCC"> for running aetherium</font>

362
00:16:02,660 --> 00:16:07,290
<font color="#E5E5E5">software they call a client I'll just</font>

363
00:16:04,860 --> 00:16:10,620
call<font color="#E5E5E5"> it a note</font><font color="#CCCCCC"> because our client would</font>

364
00:16:07,290 --> 00:16:13,110
<font color="#E5E5E5">be me</font><font color="#CCCCCC"> so the official implementation is</font>

365
00:16:10,620 --> 00:16:16,470
called<font color="#CCCCCC"> gif I guess the GSP</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> it's</font>

366
00:16:13,110 --> 00:16:19,260
written<font color="#E5E5E5"> go</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> uses leveldb as its</font>

367
00:16:16,470 --> 00:16:20,970
back-end<font color="#E5E5E5"> for key value store parody</font><font color="#CCCCCC"> the</font>

368
00:16:19,260 --> 00:16:24,779
alternative implementation is<font color="#E5E5E5"> written in</font>

369
00:16:20,970 --> 00:16:26,400
rust and uses rocks<font color="#CCCCCC"> DB the public note</font>

370
00:16:24,779 --> 00:16:30,089
<font color="#CCCCCC">percentages here just from</font><font color="#E5E5E5"> the show down</font>

371
00:16:26,400 --> 00:16:31,500
scan from a few<font color="#CCCCCC"> weeks ago</font><font color="#E5E5E5"> so there's a</font>

372
00:16:30,089 --> 00:16:34,080
few<font color="#CCCCCC"> different types of clients not</font>

373
00:16:31,500 --> 00:16:37,110
everybody needs<font color="#E5E5E5"> one terabyte of space or</font>

374
00:16:34,080 --> 00:16:39,750
more to do<font color="#E5E5E5"> to use the etherium network</font>

375
00:16:37,110 --> 00:16:42,089
<font color="#CCCCCC">so both death</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> parody have</font>

376
00:16:39,750 --> 00:16:43,440
implemented some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> public client it</font>

377
00:16:42,089 --> 00:16:46,160
can't really<font color="#E5E5E5"> verify all the previous</font>

378
00:16:43,440 --> 00:16:48,480
transactions<font color="#CCCCCC"> - just trust they're true</font>

379
00:16:46,160 --> 00:16:49,860
and you can<font color="#CCCCCC"> actually use this one on the</font>

380
00:16:48,480 --> 00:16:53,010
hard drive accordance with the docs<font color="#CCCCCC"> I</font>

381
00:16:49,860 --> 00:16:54,570
haven't tested<font color="#E5E5E5"> that most people who</font><font color="#CCCCCC"> are</font>

382
00:16:53,010 --> 00:16:56,760
curious<font color="#E5E5E5"> about transactions that want to</font>

383
00:16:54,570 --> 00:16:58,800
run<font color="#CCCCCC"> a fast client</font><font color="#E5E5E5"> after about five</font><font color="#CCCCCC"> or</font>

384
00:16:56,760 --> 00:17:02,250
<font color="#CCCCCC">six days</font><font color="#E5E5E5"> it'll be fully synced and you</font>

385
00:16:58,800 --> 00:17:03,719
can query<font color="#E5E5E5"> it</font><font color="#CCCCCC"> if you want to</font><font color="#E5E5E5"> film a full</font>

386
00:17:02,250 --> 00:17:06,869
<font color="#E5E5E5">client type that can query any</font>

387
00:17:03,720 --> 00:17:10,290
transaction arbitrarily<font color="#E5E5E5"> you'll need at</font>

388
00:17:06,869 --> 00:17:11,819
least about 200 gigs of space<font color="#E5E5E5"> and you'll</font>

389
00:17:10,290 --> 00:17:14,579
need<font color="#E5E5E5"> over 1.5 terabytes</font>

390
00:17:11,819 --> 00:17:21,839
if you want to get traces for every

391
00:17:14,579 --> 00:17:23,760
<font color="#E5E5E5">transaction</font><font color="#CCCCCC"> so four options for running</font>

392
00:17:21,839 --> 00:17:25,260
these<font color="#CCCCCC"> running a full</font><font color="#E5E5E5"> note is not the</font>

393
00:17:23,760 --> 00:17:29,520
<font color="#CCCCCC">default so I've highlighted</font><font color="#E5E5E5"> some of the</font>

394
00:17:25,260 --> 00:17:31,830
options<font color="#E5E5E5"> basically use</font><font color="#CCCCCC"> sync mode</font><font color="#E5E5E5"> equals</font>

395
00:17:29,520 --> 00:17:34,110
full<font color="#E5E5E5"> GC</font><font color="#CCCCCC"> Modi's</font><font color="#E5E5E5"> are equals archive that</font>

396
00:17:31,830 --> 00:17:36,629
says dome from purge your<font color="#E5E5E5"> old state the</font>

397
00:17:34,110 --> 00:17:39,870
bottom two options are for performance

398
00:17:36,630 --> 00:17:41,640
tuning and it<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> adjust much</font>

399
00:17:39,870 --> 00:17:45,139
less often<font color="#CCCCCC"> with the bottom</font><font color="#E5E5E5"> one and the</font>

400
00:17:41,640 --> 00:17:47,550
traces<font color="#CCCCCC"> are exposed</font><font color="#E5E5E5"> in the debug RPC API</font>

401
00:17:45,140 --> 00:17:49,559
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of equivalent options for parody</font>

402
00:17:47,550 --> 00:17:51,720
pruning equals arc

403
00:17:49,559 --> 00:17:54,059
tracing equals on there's many more

404
00:17:51,720 --> 00:17:56,220
performance tuning options<font color="#E5E5E5"> and parody</font>

405
00:17:54,059 --> 00:17:58,879
I found a github<font color="#E5E5E5"> issue for this txq</font>

406
00:17:56,220 --> 00:18:01,110
<font color="#CCCCCC">sighs somebody was setting it to</font><font color="#E5E5E5"> max int</font>

407
00:17:58,880 --> 00:18:02,279
<font color="#E5E5E5">but then it would</font><font color="#CCCCCC"> just panic the</font><font color="#E5E5E5"> rest</font>

408
00:18:01,110 --> 00:18:05,610
clients so I wouldn't really recommend

409
00:18:02,279 --> 00:18:08,789
<font color="#E5E5E5">anybody turn that on and they also have</font>

410
00:18:05,610 --> 00:18:10,649
some JSON server<font color="#CCCCCC"> query query</font>

411
00:18:08,789 --> 00:18:14,879
<font color="#CCCCCC">optimizations so</font><font color="#E5E5E5"> if you want to be able</font>

412
00:18:10,649 --> 00:18:16,979
to<font color="#E5E5E5"> core your core</font><font color="#CCCCCC"> you're faster so I</font>

413
00:18:14,880 --> 00:18:19,019
have some<font color="#E5E5E5"> suggestions</font><font color="#CCCCCC"> just when you're</font>

414
00:18:16,980 --> 00:18:22,440
<font color="#CCCCCC">running the software be very patient</font><font color="#E5E5E5"> if</font>

415
00:18:19,019 --> 00:18:24,960
something messes up just<font color="#CCCCCC"> our</font><font color="#E5E5E5"> MRF it</font>

416
00:18:22,440 --> 00:18:27,240
don't<font color="#E5E5E5"> get sentimental II attached to</font>

417
00:18:24,960 --> 00:18:28,740
your 600 gigabyte<font color="#E5E5E5"> chain data folder or</font>

418
00:18:27,240 --> 00:18:31,740
you can redownload<font color="#E5E5E5"> it and know that</font><font color="#CCCCCC"> it's</font>

419
00:18:28,740 --> 00:18:35,820
right<font color="#CCCCCC"> definitely recommend using</font><font color="#E5E5E5"> Linux</font>

420
00:18:31,740 --> 00:18:38,100
and<font color="#E5E5E5"> the fastest SSD</font><font color="#CCCCCC"> you can find it will</font>

421
00:18:35,820 --> 00:18:40,860
<font color="#E5E5E5">seriously max out also just for anybody</font>

422
00:18:38,100 --> 00:18:43,350
<font color="#E5E5E5">who's running their own client don't</font>

423
00:18:40,860 --> 00:18:45,840
also browse the web<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the machine</font>

424
00:18:43,350 --> 00:18:48,379
running your JSON<font color="#E5E5E5"> RPC because of DNS</font>

425
00:18:45,840 --> 00:18:52,168
rebinding<font color="#CCCCCC"> it can be a</font><font color="#E5E5E5"> bad time</font>

426
00:18:48,380 --> 00:18:53,580
so we run software<font color="#E5E5E5"> and we just wait a</font>

427
00:18:52,169 --> 00:18:59,480
few<font color="#CCCCCC"> days</font><font color="#E5E5E5"> and we can analyze contracts</font>

428
00:18:53,580 --> 00:19:03,000
right<font color="#E5E5E5"> and we can finally start to answer</font>

429
00:18:59,480 --> 00:19:05,010
some of these questions so<font color="#E5E5E5"> who created</font>

430
00:19:03,000 --> 00:19:09,809
this contract<font color="#CCCCCC"> how do</font><font color="#E5E5E5"> we how do we tell</font>

431
00:19:05,010 --> 00:19:14,519
this well the answer is tracing<font color="#CCCCCC"> and here</font>

432
00:19:09,809 --> 00:19:17,220
is how to call the tracing API<font color="#CCCCCC"> parity</font>

433
00:19:14,519 --> 00:19:19,580
has a slightly different implementation

434
00:19:17,220 --> 00:19:22,200
than<font color="#CCCCCC"> guess they have different options</font>

435
00:19:19,580 --> 00:19:24,809
<font color="#CCCCCC">but here's what an output trace</font><font color="#E5E5E5"> looks</font>

436
00:19:22,200 --> 00:19:26,120
like and we can<font color="#E5E5E5"> actually answer</font><font color="#CCCCCC"> a whole</font>

437
00:19:24,809 --> 00:19:28,950
bunch of these<font color="#E5E5E5"> questions we can know</font>

438
00:19:26,120 --> 00:19:31,678
<font color="#CCCCCC">what the this is a the example of the</font>

439
00:19:28,950 --> 00:19:33,809
trace for the last transaction<font color="#E5E5E5"> sent to</font>

440
00:19:31,679 --> 00:19:38,490
the contract<font color="#E5E5E5"> we can see who it's from</font>

441
00:19:33,809 --> 00:19:40,918
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it this</font><font color="#E5E5E5"> is the actual self-destruct</font>

442
00:19:38,490 --> 00:19:42,840
part<font color="#E5E5E5"> because it's saying it's from the</font>

443
00:19:40,919 --> 00:19:44,669
contract to a different<font color="#CCCCCC"> destination</font><font color="#E5E5E5"> and</font>

444
00:19:42,840 --> 00:19:50,158
it has a value<font color="#E5E5E5"> that's how much</font><font color="#CCCCCC"> ether was</font>

445
00:19:44,669 --> 00:19:53,639
sent so if we<font color="#E5E5E5"> printed by this a little</font>

446
00:19:50,159 --> 00:19:55,889
bit there's<font color="#E5E5E5"> more information to</font><font color="#CCCCCC"> actually</font>

447
00:19:53,639 --> 00:19:58,139
<font color="#CCCCCC">answering</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> wind' question we know the</font>

448
00:19:55,889 --> 00:20:01,080
block number we know who<font color="#E5E5E5"> created the</font>

449
00:19:58,139 --> 00:20:02,879
contract<font color="#E5E5E5"> and this is a quick summary</font><font color="#CCCCCC"> of</font>

450
00:20:01,080 --> 00:20:04,620
all<font color="#E5E5E5"> the transactions</font>

451
00:20:02,880 --> 00:20:07,460
the creator of the contract<font color="#E5E5E5"> added a</font>

452
00:20:04,620 --> 00:20:14,219
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> either to it this new</font>

453
00:20:07,460 --> 00:20:16,350
account<font color="#CCCCCC"> sent some unknown Tran command</font>

454
00:20:14,220 --> 00:20:18,780
and then it's<font color="#E5E5E5"> into command that we know</font>

455
00:20:16,350 --> 00:20:20,580
called kill and then the self-destruct

456
00:20:18,780 --> 00:20:22,918
record and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> sense the point to about</font>

457
00:20:20,580 --> 00:20:25,230
<font color="#E5E5E5">point</font><font color="#CCCCCC"> to ether to this new new account</font>

458
00:20:22,919 --> 00:20:29,610
<font color="#CCCCCC">so what is this attack was this an</font>

459
00:20:25,230 --> 00:20:31,740
attack<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> it definitely motivated me</font>

460
00:20:29,610 --> 00:20:35,159
<font color="#CCCCCC">to get through</font><font color="#E5E5E5"> scanning the whole</font>

461
00:20:31,740 --> 00:20:38,429
blockchain<font color="#E5E5E5"> and seeing what else is out</font>

462
00:20:35,160 --> 00:20:41,730
there but it's a<font color="#CCCCCC"> little more tricky than</font>

463
00:20:38,429 --> 00:20:43,650
just getting a trace<font color="#CCCCCC"> it turns out</font><font color="#E5E5E5"> that</font>

464
00:20:41,730 --> 00:20:45,480
on<font color="#E5E5E5"> the blockchain it's a distributed</font>

465
00:20:43,650 --> 00:20:49,790
<font color="#CCCCCC">ledger not a database</font><font color="#E5E5E5"> you can't just</font>

466
00:20:45,480 --> 00:20:52,440
query<font color="#E5E5E5"> like say select star from</font>

467
00:20:49,790 --> 00:20:55,889
transactions to an<font color="#E5E5E5"> address you have to</font>

468
00:20:52,440 --> 00:20:57,090
<font color="#E5E5E5">iterate over every block and we're</font><font color="#CCCCCC"> doing</font>

469
00:20:55,890 --> 00:20:58,890
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> atheneum isn't really</font>

470
00:20:57,090 --> 00:21:00,330
<font color="#E5E5E5">meant to do because we're going back and</font>

471
00:20:58,890 --> 00:21:02,460
looking at transactions from<font color="#E5E5E5"> two years</font>

472
00:21:00,330 --> 00:21:06,980
<font color="#E5E5E5">ago most people wouldn't care but</font>

473
00:21:02,460 --> 00:21:11,280
definitely kind of curious<font color="#CCCCCC"> so we have to</font>

474
00:21:06,980 --> 00:21:14,820
go<font color="#E5E5E5"> through a lot of blocks</font><font color="#CCCCCC"> so what's in</font>

475
00:21:11,280 --> 00:21:16,770
a block<font color="#E5E5E5"> as I said before blocks</font><font color="#CCCCCC"> out</font>

476
00:21:14,820 --> 00:21:19,530
transactions transactions have all sorts

477
00:21:16,770 --> 00:21:22,860
of metadata<font color="#CCCCCC"> who it's from</font><font color="#E5E5E5"> who it's to</font><font color="#CCCCCC"> if</font>

478
00:21:19,530 --> 00:21:26,280
there's<font color="#E5E5E5"> input if there's gas if code was</font>

479
00:21:22,860 --> 00:21:32,299
created<font color="#E5E5E5"> and there's also a seat field</font>

480
00:21:26,280 --> 00:21:35,010
that can can tell you most<font color="#E5E5E5"> of this and</font>

481
00:21:32,299 --> 00:21:37,770
for how we get blocks programmatically

482
00:21:35,010 --> 00:21:42,600
<font color="#CCCCCC">there's a</font><font color="#E5E5E5"> client API there's two popular</font>

483
00:21:37,770 --> 00:21:46,200
ones that are in the etherium github web

484
00:21:42,600 --> 00:21:49,889
<font color="#CCCCCC">3j s and web 3dep</font><font color="#E5E5E5"> I both have gone</font>

485
00:21:46,200 --> 00:21:52,620
through<font color="#E5E5E5"> breaking API changes within the</font>

486
00:21:49,890 --> 00:21:55,890
<font color="#E5E5E5">last few months I believe</font><font color="#CCCCCC"> web three</font>

487
00:21:52,620 --> 00:21:57,659
<font color="#CCCCCC">touches</font><font color="#E5E5E5"> has switched over to promises it</font>

488
00:21:55,890 --> 00:22:01,980
can hopefully do some<font color="#E5E5E5"> more</font><font color="#CCCCCC"> synchronous</font>

489
00:21:57,660 --> 00:22:04,110
calls in web<font color="#CCCCCC"> 3 pi in version 4.0 they</font>

490
00:22:01,980 --> 00:22:06,750
switched<font color="#CCCCCC"> iPhone 3 and totally deprecated</font>

491
00:22:04,110 --> 00:22:08,370
<font color="#E5E5E5">their Python 2 library so I was forced</font>

492
00:22:06,750 --> 00:22:10,650
to upgrade<font color="#E5E5E5"> everything to Python 3 and</font>

493
00:22:08,370 --> 00:22:13,049
for a<font color="#E5E5E5"> little bit about how you talk</font>

494
00:22:10,650 --> 00:22:15,270
<font color="#E5E5E5">connect these clients to the etherium</font>

495
00:22:13,049 --> 00:22:16,290
node<font color="#E5E5E5"> you can use IPC if you're on the</font>

496
00:22:15,270 --> 00:22:18,660
same<font color="#CCCCCC"> machine</font>

497
00:22:16,290 --> 00:22:20,899
<font color="#E5E5E5">you can use WebSockets</font><font color="#CCCCCC"> if you're curious</font>

498
00:22:18,660 --> 00:22:25,700
<font color="#E5E5E5">about streaming events</font><font color="#CCCCCC"> like filters and</font>

499
00:22:20,900 --> 00:22:25,700
you can use<font color="#E5E5E5"> RPC for everything else</font>

500
00:22:28,760 --> 00:22:35,120
so here's finally some actual code<font color="#CCCCCC"> this</font>

501
00:22:32,880 --> 00:22:39,630
is how you just iterate over every block

502
00:22:35,120 --> 00:22:41,100
<font color="#CCCCCC">we pass</font><font color="#E5E5E5"> a flag to</font><font color="#CCCCCC"> say full transactions</font>

503
00:22:39,630 --> 00:22:42,750
equals true this just prefetches all the

504
00:22:41,100 --> 00:22:45,330
<font color="#E5E5E5">transaction data that we're gonna eat</font><font color="#CCCCCC"> it</font>

505
00:22:42,750 --> 00:22:48,090
<font color="#CCCCCC">anyway</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> transaction</font><font color="#CCCCCC"> we get the</font>

506
00:22:45,330 --> 00:22:50,429
receipt<font color="#E5E5E5"> if there is a contract address</font>

507
00:22:48,090 --> 00:22:54,419
field in the receipt<font color="#E5E5E5"> we know that a new</font>

508
00:22:50,430 --> 00:22:58,340
contract was created<font color="#CCCCCC"> then we go</font><font color="#E5E5E5"> and</font>

509
00:22:54,420 --> 00:23:00,780
<font color="#CCCCCC">check the</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> if the code is</font><font color="#E5E5E5"> empty then</font>

510
00:22:58,340 --> 00:23:02,490
it's likely<font color="#CCCCCC"> that it might have been</font><font color="#E5E5E5"> self</font>

511
00:23:00,780 --> 00:23:04,460
<font color="#CCCCCC">destructed</font><font color="#E5E5E5"> there's a few other</font>

512
00:23:02,490 --> 00:23:07,110
conditions that I'll talk<font color="#E5E5E5"> about later</font>

513
00:23:04,460 --> 00:23:10,380
<font color="#CCCCCC">the other thing we can check</font><font color="#E5E5E5"> for is this</font>

514
00:23:07,110 --> 00:23:13,830
<font color="#E5E5E5">status field being equal</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> one this is</font>

515
00:23:10,380 --> 00:23:16,740
only<font color="#E5E5E5"> in available after block</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> million</font>

516
00:23:13,830 --> 00:23:19,500
three<font color="#CCCCCC"> hundred and seventy thousand</font><font color="#E5E5E5"> for</font>

517
00:23:16,740 --> 00:23:21,780
the post<font color="#CCCCCC"> byzantine fork i believe and</font>

518
00:23:19,500 --> 00:23:28,470
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a much better filter versus an</font>

519
00:23:21,780 --> 00:23:33,710
error in creation but<font color="#E5E5E5"> running this</font>

520
00:23:28,470 --> 00:23:33,710
client<font color="#CCCCCC"> software isn't</font><font color="#E5E5E5"> always so easy a</font>

521
00:23:33,830 --> 00:23:40,280
lot of times you might<font color="#E5E5E5"> not get synced</font>

522
00:23:36,000 --> 00:23:42,810
fully<font color="#E5E5E5"> for example if you see Jeff saying</font>

523
00:23:40,280 --> 00:23:43,410
imported new<font color="#E5E5E5"> State entries or</font><font color="#CCCCCC"> updated</font>

524
00:23:42,810 --> 00:23:44,669
chain<font color="#E5E5E5"> data</font>

525
00:23:43,410 --> 00:23:47,370
don't try to query<font color="#E5E5E5"> it you won't get</font>

526
00:23:44,670 --> 00:23:50,160
valid results back<font color="#E5E5E5"> and a lot of some</font>

527
00:23:47,370 --> 00:23:56,219
<font color="#E5E5E5">times you won't actually get caught up</font>

528
00:23:50,160 --> 00:23:59,280
to the current<font color="#E5E5E5"> block sometimes parity is</font>

529
00:23:56,220 --> 00:24:00,600
not any<font color="#E5E5E5"> better</font><font color="#CCCCCC"> if you are running parity</font>

530
00:23:59,280 --> 00:24:03,240
and<font color="#CCCCCC"> you're looking in the in your</font>

531
00:24:00,600 --> 00:24:05,520
console<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you see</font><font color="#E5E5E5"> this yellow number</font>

532
00:24:03,240 --> 00:24:07,590
to the<font color="#CCCCCC"> left</font><font color="#E5E5E5"> that means you can't query</font>

533
00:24:05,520 --> 00:24:10,320
past that block number<font color="#CCCCCC"> and get any valid</font>

534
00:24:07,590 --> 00:24:12,360
results back<font color="#E5E5E5"> also</font><font color="#CCCCCC"> I found</font><font color="#E5E5E5"> out in the</font>

535
00:24:10,320 --> 00:24:14,250
current version if you turn<font color="#CCCCCC"> on a lot</font><font color="#E5E5E5"> of</font>

536
00:24:12,360 --> 00:24:16,080
archiving options it'll crash eventually

537
00:24:14,250 --> 00:24:19,620
<font color="#E5E5E5">but don't worry I reported that and</font>

538
00:24:16,080 --> 00:24:23,250
<font color="#E5E5E5">they're working</font><font color="#CCCCCC"> on a fix so with these</font>

539
00:24:19,620 --> 00:24:26,070
clients<font color="#E5E5E5"> not able</font><font color="#CCCCCC"> to always</font><font color="#E5E5E5"> get us what</font>

540
00:24:23,250 --> 00:24:28,710
we need we<font color="#CCCCCC"> need a solution and there's</font>

541
00:24:26,070 --> 00:24:30,899
<font color="#E5E5E5">only one hope and it's either</font><font color="#CCCCCC"> scammed</font><font color="#E5E5E5"> IO</font>

542
00:24:28,710 --> 00:24:33,510
it's really a great<font color="#CCCCCC"> resource at website</font>

543
00:24:30,900 --> 00:24:36,660
you can just<font color="#E5E5E5"> they've done the database</font>

544
00:24:33,510 --> 00:24:38,730
query for you<font color="#CCCCCC"> basically so for any</font>

545
00:24:36,660 --> 00:24:40,860
contract you<font color="#E5E5E5"> want you can get</font><font color="#CCCCCC"> a list of</font>

546
00:24:38,730 --> 00:24:43,170
transactions in a few seconds<font color="#E5E5E5"> just</font><font color="#CCCCCC"> by</font>

547
00:24:40,860 --> 00:24:45,149
<font color="#E5E5E5">using their</font><font color="#CCCCCC"> website</font><font color="#E5E5E5"> they also have some</font>

548
00:24:43,170 --> 00:24:48,390
features<font color="#E5E5E5"> our contract authors can upload</font>

549
00:24:45,150 --> 00:24:52,020
their source<font color="#CCCCCC"> code and verify that</font><font color="#E5E5E5"> it's</font>

550
00:24:48,390 --> 00:24:58,710
what they<font color="#CCCCCC"> say it is</font><font color="#E5E5E5"> so we'll take a</font>

551
00:24:52,020 --> 00:25:00,990
hybrid approach<font color="#CCCCCC"> we'll run our local</font>

552
00:24:58,710 --> 00:25:02,520
software<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> code that I</font><font color="#CCCCCC"> showed</font>

553
00:25:00,990 --> 00:25:05,040
earlier<font color="#E5E5E5"> just to get a list of all the</font>

554
00:25:02,520 --> 00:25:06,629
contracts<font color="#E5E5E5"> and then forgetting the traces</font>

555
00:25:05,040 --> 00:25:09,389
<font color="#E5E5E5">I'll use ether scan</font><font color="#CCCCCC"> they have an API</font>

556
00:25:06,630 --> 00:25:11,940
actually<font color="#CCCCCC"> it'll list</font><font color="#E5E5E5"> both internal and</font>

557
00:25:09,390 --> 00:25:14,250
external transactions<font color="#E5E5E5"> the way</font><font color="#CCCCCC"> it does</font>

558
00:25:11,940 --> 00:25:16,620
say to limit to<font color="#CCCCCC"> five</font><font color="#E5E5E5"> queries per second</font>

559
00:25:14,250 --> 00:25:18,210
<font color="#E5E5E5">so if you have tens of thousands of</font>

560
00:25:16,620 --> 00:25:19,860
contracts you're curious about like I do

561
00:25:18,210 --> 00:25:24,450
<font color="#E5E5E5">it'll take a few hours</font><font color="#CCCCCC"> but it</font><font color="#E5E5E5"> will</font>

562
00:25:19,860 --> 00:25:27,120
finish eventually so finally some

563
00:25:24,450 --> 00:25:30,000
results<font color="#CCCCCC"> type out so I queried</font><font color="#E5E5E5"> from block</font>

564
00:25:27,120 --> 00:25:32,280
<font color="#E5E5E5">0 to 6 million that was from a few</font><font color="#CCCCCC"> weeks</font>

565
00:25:30,000 --> 00:25:34,350
<font color="#CCCCCC">ago and found</font><font color="#E5E5E5"> out that there have been</font>

566
00:25:32,280 --> 00:25:36,930
<font color="#E5E5E5">about total of</font><font color="#CCCCCC"> 2 million contracts</font>

567
00:25:34,350 --> 00:25:41,159
created in the<font color="#E5E5E5"> etherium network on main</font>

568
00:25:36,930 --> 00:25:45,120
that<font color="#E5E5E5"> and of those about 55,000 are empty</font>

569
00:25:41,160 --> 00:25:46,440
<font color="#CCCCCC">is your X</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I was like wow I</font><font color="#E5E5E5"> had</font><font color="#CCCCCC"> no</font>

570
00:25:45,120 --> 00:25:50,370
<font color="#E5E5E5">idea what to</font><font color="#CCCCCC"> expect I just looked at my</font>

571
00:25:46,440 --> 00:25:51,960
<font color="#E5E5E5">I just didn't LS and WC -</font><font color="#CCCCCC"> no so how many</font>

572
00:25:50,370 --> 00:25:53,189
there were<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I got curious</font><font color="#E5E5E5"> like what</font>

573
00:25:51,960 --> 00:25:54,900
if I md5 them how many<font color="#CCCCCC"> of these are</font>

574
00:25:53,190 --> 00:25:56,250
<font color="#E5E5E5">actually unique and it turns out about</font>

575
00:25:54,900 --> 00:26:01,940
half of them are duplicates in some way

576
00:25:56,250 --> 00:26:05,040
and the other thing to note is that

577
00:26:01,940 --> 00:26:07,500
<font color="#E5E5E5">about 32,000 of them or empty and had a</font>

578
00:26:05,040 --> 00:26:08,879
balance of zero<font color="#E5E5E5"> this so there were some</font>

579
00:26:07,500 --> 00:26:11,220
<font color="#CCCCCC">that are empty that had a balance and</font><font color="#E5E5E5"> I</font>

580
00:26:08,880 --> 00:26:12,480
was kind of weird<font color="#CCCCCC"> because</font><font color="#E5E5E5"> if they were</font>

581
00:26:11,220 --> 00:26:13,830
destroyed<font color="#CCCCCC"> by a self-destruct they</font>

582
00:26:12,480 --> 00:26:15,110
wouldn't have any balance<font color="#E5E5E5"> because it</font>

583
00:26:13,830 --> 00:26:20,250
transfers all the<font color="#E5E5E5"> balance to the</font>

584
00:26:15,110 --> 00:26:23,459
argument so I started looking<font color="#CCCCCC"> at what</font>

585
00:26:20,250 --> 00:26:25,380
are these<font color="#CCCCCC"> 0x</font><font color="#E5E5E5"> contracts and it turns out</font>

586
00:26:23,460 --> 00:26:27,300
<font color="#E5E5E5">the first one is kind</font><font color="#CCCCCC"> of an interesting</font>

587
00:26:25,380 --> 00:26:29,580
<font color="#E5E5E5">case we're almost</font><font color="#CCCCCC"> at the three</font><font color="#E5E5E5"> year</font>

588
00:26:27,300 --> 00:26:32,639
<font color="#CCCCCC">anniversary</font><font color="#E5E5E5"> of this this was the first</font>

589
00:26:29,580 --> 00:26:34,260
attempt at creating<font color="#E5E5E5"> a contract and I say</font>

590
00:26:32,640 --> 00:26:35,970
<font color="#CCCCCC">attempts because</font><font color="#E5E5E5"> they didn't pass in</font>

591
00:26:34,260 --> 00:26:38,850
enough gas to<font color="#CCCCCC"> create it</font>

592
00:26:35,970 --> 00:26:40,560
<font color="#CCCCCC">I believe when</font><font color="#E5E5E5"> it hit this s store</font><font color="#CCCCCC"> RS or</font>

593
00:26:38,850 --> 00:26:42,659
uses<font color="#CCCCCC"> 20,000 gas and they just didn't</font>

594
00:26:40,560 --> 00:26:44,399
send enough but if you

595
00:26:42,660 --> 00:26:50,610
use the clients to query<font color="#E5E5E5"> this it just</font>

596
00:26:44,400 --> 00:26:53,910
<font color="#CCCCCC">returns empty later that</font><font color="#E5E5E5"> day</font><font color="#CCCCCC"> there was a</font>

597
00:26:50,610 --> 00:26:58,649
contract<font color="#CCCCCC"> that contract was</font><font color="#E5E5E5"> co-created</font>

598
00:26:53,910 --> 00:27:00,090
<font color="#CCCCCC">there</font><font color="#E5E5E5"> was empty</font><font color="#CCCCCC"> but it doesn't have any</font>

599
00:26:58,650 --> 00:27:03,690
code<font color="#CCCCCC"> in it they just</font><font color="#E5E5E5"> sent an empty</font>

600
00:27:00,090 --> 00:27:05,668
transaction about a input value the<font color="#E5E5E5"> kind</font>

601
00:27:03,690 --> 00:27:08,970
<font color="#E5E5E5">of disappointing part of this is you'll</font>

602
00:27:05,669 --> 00:27:12,179
see in value<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the person who</font><font color="#E5E5E5"> did this</font>

603
00:27:08,970 --> 00:27:15,210
<font color="#CCCCCC">sent</font><font color="#E5E5E5"> fourteen ether to this so now this</font>

604
00:27:12,179 --> 00:27:16,950
contract<font color="#E5E5E5"> that has no code permanently</font>

605
00:27:15,210 --> 00:27:21,990
<font color="#CCCCCC">forever has about</font><font color="#E5E5E5"> seven</font><font color="#CCCCCC"> thousand</font><font color="#E5E5E5"> dollars</font>

606
00:27:16,950 --> 00:27:23,039
<font color="#E5E5E5">a V</font><font color="#CCCCCC"> theory imminent but later later that</font>

607
00:27:21,990 --> 00:27:26,190
day there was<font color="#CCCCCC"> a</font><font color="#E5E5E5"> contract that was</font>

608
00:27:23,039 --> 00:27:28,350
created successfully<font color="#CCCCCC"> but just to kind of</font>

609
00:27:26,190 --> 00:27:30,809
show<font color="#CCCCCC"> that there's noise and transactions</font>

610
00:27:28,350 --> 00:27:34,230
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that everything is</font><font color="#E5E5E5"> immutable</font>

611
00:27:30,809 --> 00:27:37,830
a couple<font color="#CCCCCC"> months ago somebody decided to</font>

612
00:27:34,230 --> 00:27:39,419
send<font color="#E5E5E5"> 420 in way as value to this</font>

613
00:27:37,830 --> 00:27:41,460
contract<font color="#CCCCCC"> that</font><font color="#E5E5E5"> doesn't do anything with</font>

614
00:27:39,419 --> 00:27:48,419
<font color="#CCCCCC">it and then</font><font color="#E5E5E5"> later that day somebody also</font>

615
00:27:41,460 --> 00:27:51,690
sent at<font color="#CCCCCC"> 69 way so I was</font><font color="#E5E5E5"> curious about</font>

616
00:27:48,419 --> 00:27:54,419
more<font color="#E5E5E5"> of these duplicates</font><font color="#CCCCCC"> so I just did</font>

617
00:27:51,690 --> 00:27:58,890
like unique def<font color="#CCCCCC"> see</font><font color="#E5E5E5"> saw what was the</font>

618
00:27:54,419 --> 00:28:01,440
<font color="#E5E5E5">most common one</font><font color="#CCCCCC"> and this was kind of</font>

619
00:27:58,890 --> 00:28:03,990
<font color="#E5E5E5">interesting in the contracts here</font>

620
00:28:01,440 --> 00:28:05,370
basically<font color="#E5E5E5"> just infinite loops it kind of</font>

621
00:28:03,990 --> 00:28:08,970
jumps back into itself in a<font color="#E5E5E5"> few spots</font>

622
00:28:05,370 --> 00:28:10,889
<font color="#E5E5E5">and it calls</font><font color="#CCCCCC"> code copy</font><font color="#E5E5E5"> which takes the</font>

623
00:28:08,970 --> 00:28:14,549
code you see here and copies<font color="#CCCCCC"> it into</font>

624
00:28:10,890 --> 00:28:15,690
<font color="#E5E5E5">memory</font><font color="#CCCCCC"> it turns out</font><font color="#E5E5E5"> that some</font><font color="#CCCCCC"> people on</font>

625
00:28:14,549 --> 00:28:17,520
Stack Exchange say that this is a

626
00:28:15,690 --> 00:28:20,460
<font color="#E5E5E5">network</font><font color="#CCCCCC"> dos</font><font color="#E5E5E5"> because it just to keep</font>

627
00:28:17,520 --> 00:28:25,950
<font color="#E5E5E5">reading code and several accounts since</font>

628
00:28:20,460 --> 00:28:28,230
<font color="#E5E5E5">this about ten thousand times</font><font color="#CCCCCC"> to go</font>

629
00:28:25,950 --> 00:28:32,610
along<font color="#CCCCCC"> with that</font><font color="#E5E5E5"> second example from</font>

630
00:28:28,230 --> 00:28:35,700
<font color="#E5E5E5">before</font><font color="#CCCCCC"> there have been about another</font>

631
00:28:32,610 --> 00:28:37,949
<font color="#E5E5E5">10,000 accounts created that have a</font>

632
00:28:35,700 --> 00:28:39,030
total of about 2.5 million dollars but

633
00:28:37,950 --> 00:28:46,440
they have a new code behind<font color="#E5E5E5"> them</font><font color="#CCCCCC"> so</font>

634
00:28:39,030 --> 00:28:48,240
there's no way<font color="#E5E5E5"> to get it back for one</font>

635
00:28:46,440 --> 00:28:50,220
more example of duplicates this<font color="#E5E5E5"> one was</font>

636
00:28:48,240 --> 00:28:53,639
<font color="#E5E5E5">kind of funny it was just really big</font>

637
00:28:50,220 --> 00:28:55,499
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> 6,000</font><font color="#E5E5E5"> adults and</font>

638
00:28:53,639 --> 00:28:57,269
these contract<font color="#E5E5E5"> this contract code so it</font>

639
00:28:55,499 --> 00:29:00,149
doesn't actually make it the contract

640
00:28:57,269 --> 00:29:02,909
doesn't<font color="#E5E5E5"> actually do anything it because</font>

641
00:29:00,149 --> 00:29:04,468
in all this the<font color="#E5E5E5"> stop</font><font color="#CCCCCC"> opcode but that</font>

642
00:29:02,909 --> 00:29:07,769
<font color="#CCCCCC">6000 number is kind of interesting I</font>

643
00:29:04,469 --> 00:29:08,969
noticed<font color="#E5E5E5"> that in this VIP basically the</font>

644
00:29:07,769 --> 00:29:13,859
<font color="#E5E5E5">RFC s4 aetherium</font>

645
00:29:08,969 --> 00:29:15,989
and 170 the maximum size<font color="#E5E5E5"> is hex 6000 so</font>

646
00:29:13,859 --> 00:29:17,668
maybe whoever was<font color="#CCCCCC"> trying to fill up the</font>

647
00:29:15,989 --> 00:29:22,079
blockchain<font color="#CCCCCC"> and I had a heck</font><font color="#E5E5E5"> forces</font>

648
00:29:17,669 --> 00:29:25,049
decimal conversion problem<font color="#CCCCCC"> and there's</font>

649
00:29:22,079 --> 00:29:26,039
one more interesting example of<font color="#E5E5E5"> and here</font>

650
00:29:25,049 --> 00:29:28,679
we've actually<font color="#E5E5E5"> have a real</font><font color="#CCCCCC"> self</font>

651
00:29:26,039 --> 00:29:31,529
<font color="#CCCCCC">destructs there's a few thousand of</font>

652
00:29:28,679 --> 00:29:32,820
<font color="#CCCCCC">these where they just</font><font color="#E5E5E5"> push address and</font>

653
00:29:31,529 --> 00:29:35,219
call self-destruct that's the total

654
00:29:32,820 --> 00:29:37,950
purpose of this<font color="#CCCCCC"> contract and in the</font>

655
00:29:35,219 --> 00:29:39,869
transaction<font color="#CCCCCC"> trace they all send zero one</font>

656
00:29:37,950 --> 00:29:43,789
or<font color="#CCCCCC"> two</font><font color="#E5E5E5"> way basically nothing like even</font>

657
00:29:39,869 --> 00:29:45,958
like an<font color="#CCCCCC"> ADD opcode</font><font color="#E5E5E5"> cost</font><font color="#CCCCCC"> three-way so I</font>

658
00:29:43,789 --> 00:29:50,609
went on ether scan and looked at<font color="#E5E5E5"> what</font>

659
00:29:45,959 --> 00:29:53,070
<font color="#E5E5E5">this look like and we just see this huge</font>

660
00:29:50,609 --> 00:29:56,759
<font color="#CCCCCC">list of self-destructs</font><font color="#E5E5E5"> there I</font><font color="#CCCCCC"> think</font>

661
00:29:53,070 --> 00:29:58,918
about 500 in this transaction<font color="#CCCCCC"> and it's</font>

662
00:29:56,759 --> 00:29:59,549
<font color="#E5E5E5">actually it's like what's going on this</font>

663
00:29:58,919 --> 00:30:01,139
<font color="#E5E5E5">is really weird</font>

664
00:29:59,549 --> 00:30:04,829
<font color="#CCCCCC">I haven't seen anybody really talk about</font>

665
00:30:01,139 --> 00:30:06,928
<font color="#E5E5E5">it and it turns out that this is</font><font color="#CCCCCC"> the net</font>

666
00:30:04,829 --> 00:30:08,999
effect<font color="#CCCCCC"> of that transaction well it</font>

667
00:30:06,929 --> 00:30:12,179
<font color="#CCCCCC">actually happened was there were a</font><font color="#E5E5E5"> whole</font>

668
00:30:08,999 --> 00:30:14,099
bunch<font color="#E5E5E5"> of contracts created each</font><font color="#CCCCCC"> one was</font>

669
00:30:12,179 --> 00:30:17,129
set to send a message to another<font color="#E5E5E5"> one</font>

670
00:30:14,099 --> 00:30:19,829
it would then self-destruct<font color="#E5E5E5"> and just</font>

671
00:30:17,129 --> 00:30:21,178
kind of spam out<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> network this</font>

672
00:30:19,829 --> 00:30:25,469
<font color="#E5E5E5">only happened a few times but</font><font color="#CCCCCC"> it</font>

673
00:30:21,179 --> 00:30:28,079
definitely filtered out a whole<font color="#E5E5E5"> lot of</font>

674
00:30:25,469 --> 00:30:29,999
transactions<font color="#E5E5E5"> just because it was</font><font color="#CCCCCC"> just a</font>

675
00:30:28,079 --> 00:30:34,469
whole lot of<font color="#E5E5E5"> noise or about three or</font>

676
00:30:29,999 --> 00:30:37,320
four thousand of<font color="#CCCCCC"> these in total so after</font>

677
00:30:34,469 --> 00:30:38,749
all that filtering down to about<font color="#CCCCCC"> two</font>

678
00:30:37,320 --> 00:30:42,468
<font color="#CCCCCC">thousand contracts I think this was a</font>

679
00:30:38,749 --> 00:30:45,119
previous<font color="#E5E5E5"> slide was like 1988</font><font color="#CCCCCC"> we round up</font>

680
00:30:42,469 --> 00:30:47,429
so we<font color="#E5E5E5"> filtered it out a lot of spam some</font>

681
00:30:45,119 --> 00:30:49,379
dust attempts a lot of noise and let's

682
00:30:47,429 --> 00:30:53,659
<font color="#E5E5E5">get into some specific criteria for</font>

683
00:30:49,379 --> 00:30:53,658
finding these cases of<font color="#E5E5E5"> self-destructs</font>

684
00:30:56,250 --> 00:31:00,630
so<font color="#E5E5E5"> I'll just kind of give a high-level</font>

685
00:30:58,830 --> 00:31:02,668
overview with<font color="#CCCCCC"> more emojis</font>

686
00:31:00,630 --> 00:31:04,140
to explain what we're looking for so if

687
00:31:02,669 --> 00:31:07,140
somebody creates a contract that's

688
00:31:04,140 --> 00:31:10,200
totally<font color="#CCCCCC"> normal so some things we may be</font>

689
00:31:07,140 --> 00:31:12,059
<font color="#E5E5E5">interested in is when the self-destruct</font>

690
00:31:10,200 --> 00:31:14,970
when somebody<font color="#E5E5E5"> when the owner sends a</font>

691
00:31:12,059 --> 00:31:18,330
self-destruct<font color="#E5E5E5"> to the robot at the robot</font>

692
00:31:14,970 --> 00:31:20,039
contracts<font color="#E5E5E5"> and then that ends up sending</font>

693
00:31:18,330 --> 00:31:21,629
<font color="#E5E5E5">money to a different</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> it wasn't</font>

694
00:31:20,039 --> 00:31:24,240
the<font color="#E5E5E5"> original creator that can be a red</font>

695
00:31:21,630 --> 00:31:26,510
<font color="#CCCCCC">flag</font><font color="#E5E5E5"> another red flag would be as if</font>

696
00:31:24,240 --> 00:31:30,450
somebody who wasn't the<font color="#E5E5E5"> original creator</font>

697
00:31:26,510 --> 00:31:34,110
causes the<font color="#E5E5E5"> self-destruct transaction so</font>

698
00:31:30,450 --> 00:31:39,659
let's do some<font color="#E5E5E5"> more filtering</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> and see</font>

699
00:31:34,110 --> 00:31:42,059
what meets these conditions<font color="#E5E5E5"> so again</font>

700
00:31:39,659 --> 00:31:47,190
<font color="#E5E5E5">from the trace we know the destination</font>

701
00:31:42,059 --> 00:31:49,740
<font color="#CCCCCC">of these self-destruct</font><font color="#E5E5E5"> transfer and when</font>

702
00:31:47,190 --> 00:31:54,720
we filter who was not the<font color="#CCCCCC"> original</font>

703
00:31:49,740 --> 00:31:56,820
creator there's only<font color="#CCCCCC"> 630</font><font color="#E5E5E5"> contracts and a</font>

704
00:31:54,720 --> 00:31:58,830
kind<font color="#E5E5E5"> of depressing fact about</font><font color="#CCCCCC"> 10 of</font>

705
00:31:56,820 --> 00:32:01,799
those is they self-destructed and since

706
00:31:58,830 --> 00:32:04,470
<font color="#E5E5E5">their money to address</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> so it kind of</font>

707
00:32:01,799 --> 00:32:06,480
burned it forever<font color="#E5E5E5"> the most unfortunate</font>

708
00:32:04,470 --> 00:32:09,510
<font color="#E5E5E5">of these is somebody sent 50 ether</font>

709
00:32:06,480 --> 00:32:13,280
<font color="#CCCCCC">that's several thousand dollars</font><font color="#E5E5E5"> in this</font>

710
00:32:09,510 --> 00:32:16,200
transaction<font color="#CCCCCC"> and in the ether scan trace</font>

711
00:32:13,280 --> 00:32:18,780
<font color="#E5E5E5">the owner called a kill command that</font>

712
00:32:16,200 --> 00:32:20,880
took an argument<font color="#CCCCCC"> called - and</font><font color="#E5E5E5"> just was</font>

713
00:32:18,780 --> 00:32:22,350
all<font color="#CCCCCC"> zeros</font><font color="#E5E5E5"> so I don't know if they did</font>

714
00:32:20,880 --> 00:32:24,179
this intentionally but<font color="#E5E5E5"> it is kind of</font>

715
00:32:22,350 --> 00:32:30,000
unfortunate<font color="#E5E5E5"> to see somebody lose what's</font>

716
00:32:24,179 --> 00:32:31,230
like<font color="#E5E5E5"> $20,000 in today's value another</font>

717
00:32:30,000 --> 00:32:33,659
one of these transactions that<font color="#E5E5E5"> I got</font>

718
00:32:31,230 --> 00:32:37,110
kind of<font color="#CCCCCC"> excited about</font><font color="#E5E5E5"> was the largest</font>

719
00:32:33,659 --> 00:32:42,210
self-destruct<font color="#E5E5E5"> in history where it sent</font>

720
00:32:37,110 --> 00:32:44,549
10,000<font color="#CCCCCC"> 'if but I think this is after</font>

721
00:32:42,210 --> 00:32:46,200
looking<font color="#CCCCCC"> at the transaction</font><font color="#E5E5E5"> traces I</font>

722
00:32:44,549 --> 00:32:47,460
think it's<font color="#CCCCCC"> ok I can't be completely sure</font>

723
00:32:46,200 --> 00:32:51,990
<font color="#CCCCCC">because I</font><font color="#E5E5E5"> don't know who all</font><font color="#CCCCCC"> the</font>

724
00:32:47,460 --> 00:32:54,450
accounts are but in this contract<font color="#CCCCCC"> it</font>

725
00:32:51,990 --> 00:32:58,110
implemented a parody<font color="#CCCCCC"> multi-sig Walla it</font>

726
00:32:54,450 --> 00:32:59,789
was likely vulnerable to this and it

727
00:32:58,110 --> 00:33:04,168
wallet attack<font color="#E5E5E5"> basically there were some</font>

728
00:32:59,789 --> 00:33:06,330
initialize variables<font color="#E5E5E5"> in the in the</font>

729
00:33:04,169 --> 00:33:08,400
constructor so done by a function later

730
00:33:06,330 --> 00:33:10,830
but<font color="#CCCCCC"> anybody can call that function</font><font color="#E5E5E5"> and</font>

731
00:33:08,400 --> 00:33:14,310
initially influence the state of it so

732
00:33:10,830 --> 00:33:18,870
the first transaction to this contract

733
00:33:14,310 --> 00:33:21,000
was calling<font color="#E5E5E5"> an it wallet and but</font><font color="#CCCCCC"> I</font>

734
00:33:18,870 --> 00:33:23,100
followed it later and nobody transferred

735
00:33:21,000 --> 00:33:25,380
in<font color="#E5E5E5"> 10,000</font><font color="#CCCCCC"> aetherium to it</font>

736
00:33:23,100 --> 00:33:27,510
that 10,000<font color="#CCCCCC"> ethereal transfer happened</font>

737
00:33:25,380 --> 00:33:29,730
<font color="#E5E5E5">as the self-destruct happened in the</font>

738
00:33:27,510 --> 00:33:32,250
<font color="#E5E5E5">same transaction</font><font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> this was</font>

739
00:33:29,730 --> 00:33:35,370
actually a system set up<font color="#E5E5E5"> as part</font><font color="#CCCCCC"> of a</font>

740
00:33:32,250 --> 00:33:37,500
token presale<font color="#E5E5E5"> and they just happen</font><font color="#CCCCCC"> to</font>

741
00:33:35,370 --> 00:33:43,560
get<font color="#E5E5E5"> lucky and nobody redirected their</font>

742
00:33:37,500 --> 00:33:47,250
transfer<font color="#E5E5E5"> for one</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> of the this</font>

743
00:33:43,560 --> 00:33:49,230
parody<font color="#CCCCCC"> anit wallet attack at the</font><font color="#E5E5E5"> bottom</font>

744
00:33:47,250 --> 00:33:51,120
<font color="#E5E5E5">of this slide these are the actual</font>

745
00:33:49,230 --> 00:33:53,550
attacks that<font color="#E5E5E5"> are probably the largest</font>

746
00:33:51,120 --> 00:33:57,570
ever on the etherion<font color="#E5E5E5"> network this one</font>

747
00:33:53,550 --> 00:33:59,540
person got over a<font color="#E5E5E5"> hundred and twenty</font>

748
00:33:57,570 --> 00:34:02,879
thousand ether in a couple of minutes

749
00:33:59,540 --> 00:34:06,840
<font color="#E5E5E5">doing the attack but it wasn't this one</font>

750
00:34:02,880 --> 00:34:13,740
so it's kind of bummed about that so

751
00:34:06,840 --> 00:34:15,989
let's do some more<font color="#E5E5E5"> filtering and we have</font>

752
00:34:13,739 --> 00:34:19,139
these hundred and then<font color="#E5E5E5"> we'll have from</font>

753
00:34:15,989 --> 00:34:21,449
<font color="#CCCCCC">630 down to about 160 transactions</font><font color="#E5E5E5"> where</font>

754
00:34:19,139 --> 00:34:24,000
the originator of the<font color="#E5E5E5"> self-destructs</font>

755
00:34:21,449 --> 00:34:25,799
wasn't the original<font color="#CCCCCC"> creator</font><font color="#E5E5E5"> and then</font>

756
00:34:24,000 --> 00:34:28,489
just<font color="#E5E5E5"> looking at these there's only 25</font>

757
00:34:25,800 --> 00:34:31,649
<font color="#E5E5E5">that have sent more than point 1 e and</font>

758
00:34:28,489 --> 00:34:33,359
16 that sent<font color="#CCCCCC"> ye</font><font color="#E5E5E5"> so there actually hasn't</font>

759
00:34:31,649 --> 00:34:35,850
<font color="#E5E5E5">been a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these like mass hacks</font>

760
00:34:33,360 --> 00:34:37,320
using<font color="#E5E5E5"> self-destructs but because there's</font>

761
00:34:35,850 --> 00:34:40,080
so few<font color="#E5E5E5"> I kind of like look through</font><font color="#CCCCCC"> every</font>

762
00:34:37,320 --> 00:34:42,470
<font color="#CCCCCC">one</font><font color="#E5E5E5"> and I'll show</font><font color="#CCCCCC"> you some of the</font>

763
00:34:40,080 --> 00:34:42,469
<font color="#E5E5E5">results</font>

764
00:34:47,360 --> 00:34:53,250
so this was one<font color="#CCCCCC"> of the largest transfers</font>

765
00:34:50,880 --> 00:34:56,250
on<font color="#CCCCCC"> the self-destructs where 308th was</font>

766
00:34:53,250 --> 00:34:57,510
sent<font color="#CCCCCC"> to a</font><font color="#E5E5E5"> different address from from a</font>

767
00:34:56,250 --> 00:34:59,790
transaction<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was not the original</font>

768
00:34:57,510 --> 00:35:00,780
<font color="#E5E5E5">creator but going through the trace we</font>

769
00:34:59,790 --> 00:35:04,320
find out that this was<font color="#CCCCCC"> actually</font>

770
00:35:00,780 --> 00:35:07,800
intentional<font color="#CCCCCC"> this first</font><font color="#E5E5E5"> argument from was</font>

771
00:35:04,320 --> 00:35:11,280
the original creator<font color="#E5E5E5"> and they just Tramp</font>

772
00:35:07,800 --> 00:35:12,750
<font color="#E5E5E5">the contract was coded to allow somebody</font>

773
00:35:11,280 --> 00:35:14,040
else<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> the owner so this is actually</font>

774
00:35:12,750 --> 00:35:16,800
a totally<font color="#E5E5E5"> okay thing</font><font color="#CCCCCC"> to do and</font><font color="#E5E5E5"> they were</font>

775
00:35:14,040 --> 00:35:18,570
just<font color="#E5E5E5"> using the etherion features this</font>

776
00:35:16,800 --> 00:35:24,660
<font color="#E5E5E5">will be a little bit of a trend as</font><font color="#CCCCCC"> well</font>

777
00:35:18,570 --> 00:35:27,210
<font color="#E5E5E5">see so this one kind of stood out to me</font>

778
00:35:24,660 --> 00:35:29,250
in my list<font color="#E5E5E5"> because it has a really</font>

779
00:35:27,210 --> 00:35:34,110
<font color="#CCCCCC">interesting address address it's like</font>

780
00:35:29,250 --> 00:35:35,130
<font color="#CCCCCC">dice EE and</font><font color="#E5E5E5"> it turns out that if you</font>

781
00:35:34,110 --> 00:35:36,630
look<font color="#CCCCCC"> at the Creator they've created</font>

782
00:35:35,130 --> 00:35:39,090
several<font color="#E5E5E5"> contracts including some that</font>

783
00:35:36,630 --> 00:35:41,520
have source code available and it's just

784
00:35:39,090 --> 00:35:44,100
a gambling game<font color="#E5E5E5"> and this is yet another</font>

785
00:35:41,520 --> 00:35:47,520
example<font color="#E5E5E5"> of where the transaction came</font>

786
00:35:44,100 --> 00:35:52,020
from somebody else<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's was actually</font>

787
00:35:47,520 --> 00:35:54,600
<font color="#E5E5E5">totally intentional and this one sent</font><font color="#CCCCCC"> 65</font>

788
00:35:52,020 --> 00:35:56,670
ether<font color="#CCCCCC"> that's a lot</font>

789
00:35:54,600 --> 00:35:59,190
so there's turns out there's even<font color="#CCCCCC"> more</font>

790
00:35:56,670 --> 00:36:00,300
<font color="#E5E5E5">gambling on the blockchain</font><font color="#CCCCCC"> here's</font>

791
00:35:59,190 --> 00:36:02,870
<font color="#E5E5E5">another one that turns out to</font><font color="#CCCCCC"> be</font>

792
00:36:00,300 --> 00:36:02,870
intentional

793
00:36:03,000 --> 00:36:08,910
it's called ether<font color="#E5E5E5"> Wow</font><font color="#CCCCCC"> the Google</font>

794
00:36:06,120 --> 00:36:10,680
Translate says it's the most popular

795
00:36:08,910 --> 00:36:12,899
blockchain<font color="#E5E5E5"> guessing digital game in</font>

796
00:36:10,680 --> 00:36:14,730
China<font color="#E5E5E5"> I'm not so sure because there's</font>

797
00:36:12,900 --> 00:36:21,120
<font color="#E5E5E5">only been a few ether ever transferred</font>

798
00:36:14,730 --> 00:36:24,630
into any of these things<font color="#CCCCCC"> and in a</font>

799
00:36:21,120 --> 00:36:26,490
<font color="#E5E5E5">different</font><font color="#CCCCCC"> version of this</font><font color="#E5E5E5"> the creator's</font>

800
00:36:24,630 --> 00:36:27,960
created<font color="#E5E5E5"> several contracts and if you</font>

801
00:36:26,490 --> 00:36:30,149
trace through them<font color="#E5E5E5"> one of them has</font>

802
00:36:27,960 --> 00:36:32,850
source code available<font color="#E5E5E5"> and there's this</font>

803
00:36:30,150 --> 00:36:35,940
<font color="#E5E5E5">really dramatic</font><font color="#CCCCCC"> comment above their</font>

804
00:36:32,850 --> 00:36:38,460
owner kill function<font color="#E5E5E5"> to be very careful</font>

805
00:36:35,940 --> 00:36:40,260
emergency<font color="#CCCCCC"> only for contract upgrading so</font>

806
00:36:38,460 --> 00:36:43,320
again this is yet another example<font color="#E5E5E5"> with</font>

807
00:36:40,260 --> 00:36:47,070
<font color="#E5E5E5">these large transfers but it doesn't</font>

808
00:36:43,320 --> 00:36:50,390
look like it's an attack it's just the

809
00:36:47,070 --> 00:36:50,390
design of the contract

810
00:36:52,960 --> 00:37:00,380
so I finally<font color="#E5E5E5"> have one that's a real</font>

811
00:36:56,240 --> 00:37:02,959
<font color="#CCCCCC">example of a likely attack basically</font>

812
00:37:00,380 --> 00:37:07,880
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> this contract that ended up</font>

813
00:37:02,960 --> 00:37:10,160
<font color="#E5E5E5">calling this mortal function and it was</font>

814
00:37:07,880 --> 00:37:13,130
the exact conditions we want<font color="#CCCCCC"> it was</font>

815
00:37:10,160 --> 00:37:15,230
somebody who is not the<font color="#CCCCCC"> original creator</font>

816
00:37:13,130 --> 00:37:19,010
of<font color="#E5E5E5"> the contract the destination wasn't</font>

817
00:37:15,230 --> 00:37:20,900
<font color="#E5E5E5">the original</font><font color="#CCCCCC"> creator either</font><font color="#E5E5E5"> and I can't</font>

818
00:37:19,010 --> 00:37:22,160
be<font color="#CCCCCC"> sure exactly what</font><font color="#E5E5E5"> happened because we</font>

819
00:37:20,900 --> 00:37:24,890
don't know<font color="#E5E5E5"> the intent behind everything</font>

820
00:37:22,160 --> 00:37:26,540
<font color="#E5E5E5">but it what it looks like is somebody</font>

821
00:37:24,890 --> 00:37:29,660
<font color="#E5E5E5">copied some code from</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> immortal</font>

822
00:37:26,540 --> 00:37:31,790
contract<font color="#E5E5E5"> which its intended</font>

823
00:37:29,660 --> 00:37:35,240
functionality is<font color="#E5E5E5"> to initialize the owner</font>

824
00:37:31,790 --> 00:37:37,580
<font color="#E5E5E5">and if you're the owner you can kill the</font>

825
00:37:35,240 --> 00:37:39,950
<font color="#E5E5E5">contract but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think somebody probably</font>

826
00:37:37,580 --> 00:37:42,470
<font color="#E5E5E5">renamed the contracts if they're for</font>

827
00:37:39,950 --> 00:37:45,319
<font color="#E5E5E5">exposing this mortal function to anybody</font>

828
00:37:42,470 --> 00:37:47,720
because<font color="#E5E5E5"> somebody totally called this</font>

829
00:37:45,320 --> 00:37:50,710
<font color="#CCCCCC">function and became</font><font color="#E5E5E5"> the owner and got a</font>

830
00:37:47,720 --> 00:37:50,709
<font color="#E5E5E5">couple ether</font>

831
00:37:55,619 --> 00:38:02,880
so we learned from all<font color="#CCCCCC"> of this there's</font>

832
00:38:00,539 --> 00:38:05,999
not<font color="#E5E5E5"> a lot of like epic attacks on the</font>

833
00:38:02,880 --> 00:38:07,920
blockchain<font color="#CCCCCC"> a few of them do happen but</font>

834
00:38:05,999 --> 00:38:09,988
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> really difficult to go in and tell</font>

835
00:38:07,920 --> 00:38:11,549
what happened<font color="#CCCCCC"> a few years ago</font><font color="#E5E5E5"> to</font>

836
00:38:09,989 --> 00:38:12,859
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> analyze this I couldn't</font><font color="#CCCCCC"> even do</font>

837
00:38:11,549 --> 00:38:15,719
it<font color="#CCCCCC"> on my own</font><font color="#E5E5E5"> computer I needed to use</font>

838
00:38:12,859 --> 00:38:22,710
ether scan to help<font color="#E5E5E5"> fill in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of the</font>

839
00:38:15,719 --> 00:38:24,839
<font color="#E5E5E5">blanks</font><font color="#CCCCCC"> so if you're in theory developer</font>

840
00:38:22,710 --> 00:38:26,809
here I'd strongly<font color="#CCCCCC"> recommend you</font>

841
00:38:24,839 --> 00:38:29,819
understand and<font color="#E5E5E5"> fix all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your warnings</font>

842
00:38:26,809 --> 00:38:32,400
<font color="#CCCCCC">maybe use the or echidna testing</font>

843
00:38:29,819 --> 00:38:34,499
framework to help<font color="#CCCCCC"> make better tests just</font>

844
00:38:32,400 --> 00:38:34,910
<font color="#CCCCCC">few</font><font color="#E5E5E5"> early rigorous if you'd like</font><font color="#CCCCCC"> some</font>

845
00:38:34,499 --> 00:38:36,959
<font color="#CCCCCC">help</font>

846
00:38:34,910 --> 00:38:38,788
performing<font color="#E5E5E5"> the assessment under your</font>

847
00:38:36,960 --> 00:38:42,719
contracts<font color="#E5E5E5"> definitely get in touch with</font>

848
00:38:38,789 --> 00:38:44,849
<font color="#E5E5E5">us we're very thorough</font><font color="#CCCCCC"> if you're a</font>

849
00:38:42,719 --> 00:38:46,349
security researcher<font color="#E5E5E5"> become a blockchain</font>

850
00:38:44,849 --> 00:38:47,729
<font color="#E5E5E5">Explorer it's kind of fun</font><font color="#CCCCCC"> you fill up</font>

851
00:38:46,349 --> 00:38:51,059
your whole hard drive and you<font color="#CCCCCC"> can like</font>

852
00:38:47,729 --> 00:38:52,769
do some sequel queries later but grubart

853
00:38:51,059 --> 00:38:54,900
<font color="#E5E5E5">have patience and if you're into</font>

854
00:38:52,769 --> 00:39:01,098
symbolic execution<font color="#E5E5E5"> check out</font><font color="#CCCCCC"> Manticore</font>

855
00:38:54,900 --> 00:39:01,099
<font color="#E5E5E5">and thank you for your attention</font>

856
00:39:01,980 --> 00:39:05,159
[Applause]

