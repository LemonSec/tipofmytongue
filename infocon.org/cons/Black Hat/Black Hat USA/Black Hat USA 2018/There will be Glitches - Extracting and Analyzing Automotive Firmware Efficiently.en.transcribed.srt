1
00:00:00,000 --> 00:00:03,870
<font color="#E5E5E5">I'm happy to be</font><font color="#CCCCCC"> here to get</font><font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> ELISA</font>

2
00:00:02,159 --> 00:00:05,670
to present some of the work<font color="#CCCCCC"> that the</font>

3
00:00:03,870 --> 00:00:07,950
automotive security team at history has

4
00:00:05,670 --> 00:00:09,420
been<font color="#CCCCCC"> working on the</font><font color="#E5E5E5"> last year so today</font>

5
00:00:07,950 --> 00:00:11,040
<font color="#CCCCCC">we've been</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about breaking cars</font>

6
00:00:09,420 --> 00:00:12,929
and<font color="#CCCCCC"> obviously we're not</font><font color="#E5E5E5"> talking about</font>

7
00:00:11,040 --> 00:00:15,389
breaking<font color="#E5E5E5"> cars by</font><font color="#CCCCCC"> towing a big rock on</font>

8
00:00:12,929 --> 00:00:17,490
them<font color="#E5E5E5"> we really talk about</font><font color="#CCCCCC"> breaking cars</font>

9
00:00:15,389 --> 00:00:20,340
in a similar fashion<font color="#E5E5E5"> attackers would</font>

10
00:00:17,490 --> 00:00:22,349
take when they try to<font color="#E5E5E5"> break an embedded</font>

11
00:00:20,340 --> 00:00:24,509
system<font color="#E5E5E5"> so one of the first steps you</font>

12
00:00:22,350 --> 00:00:26,609
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to achieve in when you start</font>

13
00:00:24,510 --> 00:00:28,380
breaking embedded systems is<font color="#E5E5E5"> you want to</font>

14
00:00:26,609 --> 00:00:30,150
<font color="#E5E5E5">get a certain</font><font color="#CCCCCC"> understanding of the</font>

15
00:00:28,380 --> 00:00:32,040
target<font color="#CCCCCC"> you really meet</font><font color="#E5E5E5"> this</font>

16
00:00:30,150 --> 00:00:34,079
understanding to<font color="#CCCCCC"> a certain degree</font><font color="#E5E5E5"> in</font>

17
00:00:32,040 --> 00:00:36,780
order to<font color="#E5E5E5"> move</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the subsequent</font><font color="#CCCCCC"> steps of</font>

18
00:00:34,079 --> 00:00:39,600
identifying vulnerabilities<font color="#E5E5E5"> and then</font>

19
00:00:36,780 --> 00:00:41,520
exploiting these<font color="#CCCCCC"> vulnerabilities</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> all</font>

20
00:00:39,600 --> 00:00:43,530
agree<font color="#E5E5E5"> with me</font><font color="#CCCCCC"> that in order to</font><font color="#E5E5E5"> get this</font>

21
00:00:41,520 --> 00:00:44,940
understanding it is efficient<font color="#CCCCCC"> to you</font>

22
00:00:43,530 --> 00:00:46,559
have access<font color="#E5E5E5"> to the firmer</font><font color="#CCCCCC"> and there's</font>

23
00:00:44,940 --> 00:00:48,899
exactly<font color="#E5E5E5"> what the first half this thought</font>

24
00:00:46,559 --> 00:00:51,419
will be<font color="#E5E5E5"> about how to get the</font><font color="#CCCCCC"> firmware</font>

25
00:00:48,899 --> 00:00:53,160
<font color="#E5E5E5">out of embedded systems</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> please note</font>

26
00:00:51,420 --> 00:00:54,780
that<font color="#E5E5E5"> whenever I'm talking</font><font color="#CCCCCC"> about embedded</font>

27
00:00:53,160 --> 00:00:56,669
systems<font color="#E5E5E5"> I'm also talking about the</font>

28
00:00:54,780 --> 00:00:58,680
<font color="#E5E5E5">issues</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> find in modern cars of</font>

29
00:00:56,670 --> 00:01:01,320
<font color="#CCCCCC">today these little boxes that are</font>

30
00:00:58,680 --> 00:01:03,030
present<font color="#E5E5E5"> in these cars they're exactly as</font>

31
00:01:01,320 --> 00:01:04,709
<font color="#CCCCCC">an adult system it's a single</font>

32
00:01:03,030 --> 00:01:06,780
<font color="#CCCCCC">microcontroller</font><font color="#E5E5E5"> typically with</font>

33
00:01:04,709 --> 00:01:08,640
functionality that's<font color="#E5E5E5"> very</font><font color="#CCCCCC"> specific put</font>

34
00:01:06,780 --> 00:01:12,450
in a box<font color="#E5E5E5"> exactly what an embedded system</font>

35
00:01:08,640 --> 00:01:14,430
is about so nowadays in the modern card

36
00:01:12,450 --> 00:01:16,470
is a multitude of different issues<font color="#CCCCCC"> all</font>

37
00:01:14,430 --> 00:01:18,330
having their<font color="#E5E5E5"> own functionality and this</font>

38
00:01:16,470 --> 00:01:21,000
is a<font color="#E5E5E5"> diagram of a</font><font color="#CCCCCC"> bowling car</font><font color="#E5E5E5"> that's</font>

39
00:01:18,330 --> 00:01:23,340
produced in 2018<font color="#E5E5E5"> and you see that there</font>

40
00:01:21,000 --> 00:01:26,189
is a gateway<font color="#E5E5E5"> there's an infotainment</font>

41
00:01:23,340 --> 00:01:28,530
system<font color="#E5E5E5"> there's engine controls there's</font>

42
00:01:26,189 --> 00:01:30,329
sensors there's an instrument cluster

43
00:01:28,530 --> 00:01:32,610
<font color="#E5E5E5">there's all sorts of controllers</font><font color="#CCCCCC"> and</font>

44
00:01:30,329 --> 00:01:34,470
just like<font color="#CCCCCC"> a metal systems distinct</font>

45
00:01:32,610 --> 00:01:37,710
<font color="#CCCCCC">completely in</font><font color="#E5E5E5"> all forms shapes and sizes</font>

46
00:01:34,470 --> 00:01:39,780
<font color="#E5E5E5">and then ice part is that all these</font>

47
00:01:37,710 --> 00:01:41,970
issues they're stuck in cars<font color="#E5E5E5"> everywhere</font>

48
00:01:39,780 --> 00:01:43,979
in the world<font color="#E5E5E5"> anybody has an</font><font color="#CCCCCC"> idea what</font>

49
00:01:41,970 --> 00:01:45,780
<font color="#E5E5E5">this picture is</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> but these are all</font>

50
00:01:43,979 --> 00:01:48,390
the<font color="#E5E5E5"> cars the</font><font color="#CCCCCC"> returned officer</font><font color="#E5E5E5"> the</font>

51
00:01:45,780 --> 00:01:50,340
dissipates scandal<font color="#E5E5E5"> and there's food with</font>

52
00:01:48,390 --> 00:01:51,930
issues and these cars are not<font color="#CCCCCC"> being</font><font color="#E5E5E5"> used</font>

53
00:01:50,340 --> 00:01:54,450
<font color="#E5E5E5">and the same holds off for cars</font><font color="#CCCCCC"> that</font>

54
00:01:51,930 --> 00:01:55,860
crash<font color="#E5E5E5"> so part might be broken but most</font>

55
00:01:54,450 --> 00:01:58,380
of<font color="#CCCCCC"> these issues are still</font><font color="#E5E5E5"> intact and</font>

56
00:01:55,860 --> 00:01:59,969
this<font color="#E5E5E5"> means that you can typically buy</font>

57
00:01:58,380 --> 00:02:02,640
them very cheaply<font color="#CCCCCC"> or your</font><font color="#E5E5E5"> standard</font>

58
00:01:59,969 --> 00:02:04,679
sources like<font color="#E5E5E5"> eBay and once you start</font>

59
00:02:02,640 --> 00:02:06,899
buying all<font color="#E5E5E5"> these issues for a very cheap</font>

60
00:02:04,680 --> 00:02:08,580
<font color="#CCCCCC">price compared to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> retail value you</font>

61
00:02:06,899 --> 00:02:09,929
end up with<font color="#E5E5E5"> lots of these</font><font color="#CCCCCC"> years in your</font>

62
00:02:08,580 --> 00:02:12,270
lap and<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> even know how many</font>

63
00:02:09,929 --> 00:02:13,410
issues<font color="#E5E5E5"> we have in the lab nowadays this</font>

64
00:02:12,270 --> 00:02:15,420
<font color="#E5E5E5">is something by the way</font>

65
00:02:13,410 --> 00:02:17,670
<font color="#E5E5E5">he pioneered some of the work we</font><font color="#CCCCCC"> talked</font>

66
00:02:15,420 --> 00:02:21,089
about<font color="#E5E5E5"> today at this internship at</font>

67
00:02:17,670 --> 00:02:22,079
whisker earlier this year<font color="#CCCCCC"> so today</font><font color="#E5E5E5"> we're</font>

68
00:02:21,090 --> 00:02:23,790
<font color="#E5E5E5">going to talk about the instrument</font>

69
00:02:22,080 --> 00:02:25,110
cluster<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> really the dashboard a</font>

70
00:02:23,790 --> 00:02:27,929
<font color="#E5E5E5">new</font><font color="#CCCCCC"> car that</font><font color="#E5E5E5"> tells you how fast you're</font>

71
00:02:25,110 --> 00:02:29,390
going<font color="#E5E5E5"> how much</font><font color="#CCCCCC"> cash you have if he</font>

72
00:02:27,930 --> 00:02:31,740
couldn't left if<font color="#CCCCCC"> you going right</font>

73
00:02:29,390 --> 00:02:33,209
<font color="#E5E5E5">everybody knows what it</font><font color="#CCCCCC"> is right</font><font color="#E5E5E5"> but the</font>

74
00:02:31,740 --> 00:02:35,160
primary reason<font color="#E5E5E5"> why we went for this</font>

75
00:02:33,210 --> 00:02:37,050
<font color="#CCCCCC">target is because it has something to</font>

76
00:02:35,160 --> 00:02:38,670
<font color="#E5E5E5">look at it's one of the few</font><font color="#CCCCCC"> issues that</font>

77
00:02:37,050 --> 00:02:41,040
is in your car<font color="#E5E5E5"> that actually has a</font>

78
00:02:38,670 --> 00:02:43,769
<font color="#E5E5E5">visual impact of the events of happening</font>

79
00:02:41,040 --> 00:02:47,190
inside the device and who doesn't like

80
00:02:43,770 --> 00:02:49,680
blinking<font color="#E5E5E5"> lights right so we're talking</font>

81
00:02:47,190 --> 00:02:51,750
<font color="#E5E5E5">about the first step of performing</font>

82
00:02:49,680 --> 00:02:53,250
<font color="#E5E5E5">exploits so get into this understanding</font>

83
00:02:51,750 --> 00:02:56,640
of<font color="#CCCCCC"> a particular target I mean it the</font>

84
00:02:53,250 --> 00:02:58,290
<font color="#E5E5E5">firmware in order to do this properly so</font>

85
00:02:56,640 --> 00:03:01,380
how do we get the firmer out of this

86
00:02:58,290 --> 00:03:03,269
device<font color="#CCCCCC"> well the easiest</font><font color="#E5E5E5"> way would be if</font>

87
00:03:01,380 --> 00:03:05,010
there's a official channel for example

88
00:03:03,270 --> 00:03:06,960
<font color="#E5E5E5">we can extract the farmer from a</font>

89
00:03:05,010 --> 00:03:09,780
firmware update<font color="#CCCCCC"> or somebody already</font><font color="#E5E5E5"> get</font>

90
00:03:06,960 --> 00:03:11,160
to<font color="#E5E5E5"> work for us</font><font color="#CCCCCC"> so we can</font><font color="#E5E5E5"> just simply</font>

91
00:03:09,780 --> 00:03:13,110
download the firmware<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> internet</font>

92
00:03:11,160 --> 00:03:14,670
however for the target that<font color="#E5E5E5"> is waiting</font>

93
00:03:13,110 --> 00:03:17,130
in front<font color="#E5E5E5"> of us here</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was not the</font>

94
00:03:14,670 --> 00:03:18,570
case<font color="#E5E5E5"> nobody did</font><font color="#CCCCCC"> work and</font><font color="#E5E5E5"> the opposite</font>

95
00:03:17,130 --> 00:03:21,450
channels did not<font color="#E5E5E5"> allows access to the</font>

96
00:03:18,570 --> 00:03:22,920
<font color="#E5E5E5">firmware so with the dashboard</font><font color="#CCCCCC"> in hand</font>

97
00:03:21,450 --> 00:03:24,119
<font color="#E5E5E5">we started</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at what the</font>

98
00:03:22,920 --> 00:03:25,589
<font color="#CCCCCC">possibilities were</font><font color="#E5E5E5"> so there's some</font>

99
00:03:24,120 --> 00:03:27,030
interfaces<font color="#CCCCCC"> because obviously the</font>

100
00:03:25,590 --> 00:03:29,430
dashboard has to<font color="#E5E5E5"> communicate with the</font>

101
00:03:27,030 --> 00:03:31,350
<font color="#E5E5E5">rest of the car there's likely a chip</font>

102
00:03:29,430 --> 00:03:33,630
inside<font color="#E5E5E5"> and this chip is obviously</font>

103
00:03:31,350 --> 00:03:35,400
<font color="#E5E5E5">getting some form</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> software but from</font>

104
00:03:33,630 --> 00:03:36,990
<font color="#CCCCCC">outside we have no idea what's going</font><font color="#E5E5E5"> on</font>

105
00:03:35,400 --> 00:03:38,190
<font color="#E5E5E5">so I really need to</font><font color="#CCCCCC"> open the device</font><font color="#E5E5E5"> in</font>

106
00:03:36,990 --> 00:03:40,920
<font color="#CCCCCC">order to figure</font><font color="#E5E5E5"> out what's going</font><font color="#CCCCCC"> on</font>

107
00:03:38,190 --> 00:03:42,720
there<font color="#CCCCCC"> so once we open the device we</font>

108
00:03:40,920 --> 00:03:44,880
found indeed<font color="#CCCCCC"> a microcontroller this</font>

109
00:03:42,720 --> 00:03:46,620
<font color="#CCCCCC">microcontroller</font><font color="#E5E5E5"> was talking to an EPROM</font>

110
00:03:44,880 --> 00:03:49,140
chip<font color="#E5E5E5"> we extracted</font><font color="#CCCCCC"> the content using</font>

111
00:03:46,620 --> 00:03:51,600
<font color="#E5E5E5">standard tooling we identified lots of</font>

112
00:03:49,140 --> 00:03:53,970
interesting data<font color="#CCCCCC"> but we had no way of</font>

113
00:03:51,600 --> 00:03:55,430
interpreting this data<font color="#E5E5E5"> because we had no</font>

114
00:03:53,970 --> 00:03:57,540
understanding<font color="#E5E5E5"> of the device and</font>

115
00:03:55,430 --> 00:04:01,320
certainly the firmware was not stored

116
00:03:57,540 --> 00:04:03,630
here<font color="#E5E5E5"> there's the death of there's the</font>

117
00:04:01,320 --> 00:04:05,670
display<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that was the reason in</font><font color="#E5E5E5"> order</font>

118
00:04:03,630 --> 00:04:07,500
to buy this<font color="#E5E5E5"> dashboard because</font><font color="#CCCCCC"> it looks</font>

119
00:04:05,670 --> 00:04:10,470
cool however there's also no

120
00:04:07,500 --> 00:04:12,060
<font color="#CCCCCC">functionality to get to the firmer more</font>

121
00:04:10,470 --> 00:04:15,660
interestingly we identified<font color="#E5E5E5"> several</font>

122
00:04:12,060 --> 00:04:17,010
debug interfaces and these are on the

123
00:04:15,660 --> 00:04:18,750
chip they're implemented there by the

124
00:04:17,010 --> 00:04:21,269
manufacturer<font color="#CCCCCC"> to allow access to</font><font color="#E5E5E5"> the</font>

125
00:04:18,750 --> 00:04:23,220
<font color="#E5E5E5">internals of</font><font color="#CCCCCC"> the device but</font><font color="#E5E5E5"> the</font>

126
00:04:21,269 --> 00:04:24,930
manufacturer of this dashboard<font color="#E5E5E5"> they did</font>

127
00:04:23,220 --> 00:04:25,530
their<font color="#E5E5E5"> work properly and they protected</font>

128
00:04:24,930 --> 00:04:27,150
this<font color="#E5E5E5"> deep</font>

129
00:04:25,530 --> 00:04:29,369
interfaces<font color="#E5E5E5"> so also this</font><font color="#CCCCCC"> could not</font><font color="#E5E5E5"> be</font>

130
00:04:27,150 --> 00:04:32,489
<font color="#CCCCCC">used to</font><font color="#E5E5E5"> get access to the internals of</font>

131
00:04:29,370 --> 00:04:34,020
<font color="#E5E5E5">this device so then</font><font color="#CCCCCC"> we're left with a</font>

132
00:04:32,490 --> 00:04:35,940
<font color="#E5E5E5">bunch of inputs and</font><font color="#CCCCCC"> outputs</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> do</font>

133
00:04:34,020 --> 00:04:38,520
not understand<font color="#E5E5E5"> and the canvas interface</font>

134
00:04:35,940 --> 00:04:40,710
<font color="#E5E5E5">that is used to communicate communicate</font>

135
00:04:38,520 --> 00:04:42,359
to the rest<font color="#CCCCCC"> of the car</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> no</font>

136
00:04:40,710 --> 00:04:44,190
<font color="#CCCCCC">idea what's running here</font><font color="#E5E5E5"> we have no idea</font>

137
00:04:42,360 --> 00:04:45,960
what<font color="#E5E5E5"> software that's running there but</font>

138
00:04:44,190 --> 00:04:47,550
<font color="#CCCCCC">quickly we realized</font><font color="#E5E5E5"> after analyzing</font>

139
00:04:45,960 --> 00:04:51,299
multiple<font color="#CCCCCC"> dashboards</font><font color="#E5E5E5"> and multiple other</font>

140
00:04:47,550 --> 00:04:55,889
issues that<font color="#CCCCCC"> most of them actually</font><font color="#E5E5E5"> can</font>

141
00:04:51,300 --> 00:04:57,660
talk UDS and<font color="#CCCCCC"> that's standard</font><font color="#E5E5E5"> protocol</font>

142
00:04:55,889 --> 00:04:59,669
that is<font color="#CCCCCC"> used by</font><font color="#E5E5E5"> the manufacturers and</font>

143
00:04:57,660 --> 00:05:01,650
<font color="#CCCCCC">the garages</font><font color="#E5E5E5"> in order to pull the car</font>

144
00:04:59,669 --> 00:05:03,870
when something is wrong<font color="#E5E5E5"> or you can</font>

145
00:05:01,650 --> 00:05:06,419
identify what part is failing<font color="#E5E5E5"> or what</font>

146
00:05:03,870 --> 00:05:10,080
part might need<font color="#E5E5E5"> replacement but also</font>

147
00:05:06,419 --> 00:05:12,539
<font color="#E5E5E5">this standard the stripes or mechanisms</font>

148
00:05:10,080 --> 00:05:13,859
to get data in and<font color="#E5E5E5"> out of the device for</font>

149
00:05:12,540 --> 00:05:16,200
<font color="#E5E5E5">example this is typically</font><font color="#CCCCCC"> used to</font>

150
00:05:13,860 --> 00:05:20,610
perform a firmware upgrade<font color="#E5E5E5"> or to set</font>

151
00:05:16,200 --> 00:05:22,050
certain configuration options however as

152
00:05:20,610 --> 00:05:23,639
<font color="#E5E5E5">you can already imagine some of</font><font color="#CCCCCC"> the</font>

153
00:05:22,050 --> 00:05:25,550
<font color="#E5E5E5">functionalities</font><font color="#CCCCCC"> security-critical</font><font color="#E5E5E5"> so</font>

154
00:05:23,639 --> 00:05:27,630
they also demanded a specification

155
00:05:25,550 --> 00:05:30,479
<font color="#E5E5E5">security</font><font color="#CCCCCC"> access check that prevents</font>

156
00:05:27,630 --> 00:05:32,520
malicious uses or malicious access to

157
00:05:30,479 --> 00:05:33,450
this functionality<font color="#E5E5E5"> and the standard</font>

158
00:05:32,520 --> 00:05:35,340
<font color="#E5E5E5">includes all sorts of other</font>

159
00:05:33,450 --> 00:05:38,490
<font color="#CCCCCC">functionality than interesting</font><font color="#E5E5E5"> which we</font>

160
00:05:35,340 --> 00:05:40,650
will not<font color="#E5E5E5"> talk about today</font><font color="#CCCCCC"> so after</font>

161
00:05:38,490 --> 00:05:42,660
analyzing this UDS attack very briefly

162
00:05:40,650 --> 00:05:45,239
we indeed identified the functionality

163
00:05:42,660 --> 00:05:46,890
in order<font color="#CCCCCC"> to hit a ride memory</font><font color="#E5E5E5"> however we</font>

164
00:05:45,240 --> 00:05:48,840
also identified that<font color="#CCCCCC"> it was properly</font>

165
00:05:46,890 --> 00:05:50,280
protected and without having<font color="#CCCCCC"> the right</font>

166
00:05:48,840 --> 00:05:52,739
secrets we could not access this

167
00:05:50,280 --> 00:05:55,619
functionality<font color="#E5E5E5"> so another approach would</font>

168
00:05:52,740 --> 00:05:57,000
<font color="#CCCCCC">be</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually perform vulnerability</font>

169
00:05:55,620 --> 00:05:58,680
analyzes in order to identify<font color="#E5E5E5"> a</font>

170
00:05:57,000 --> 00:06:00,300
vulnerability and then exploit<font color="#E5E5E5"> this</font>

171
00:05:58,680 --> 00:06:01,919
<font color="#E5E5E5">however without having access to the</font>

172
00:06:00,300 --> 00:06:04,250
<font color="#CCCCCC">fervor</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> still looking</font><font color="#CCCCCC"> for it</font>

173
00:06:01,919 --> 00:06:06,630
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not an easy task</font>

174
00:06:04,250 --> 00:06:08,640
and be like easy things<font color="#CCCCCC"> so why would</font><font color="#E5E5E5"> you</font>

175
00:06:06,630 --> 00:06:10,860
try<font color="#E5E5E5"> to do something difficult if there's</font>

176
00:06:08,640 --> 00:06:12,330
easier manners so let's have a look at

177
00:06:10,860 --> 00:06:14,039
the internals of our dashboard again

178
00:06:12,330 --> 00:06:15,780
and there's one interface we did not

179
00:06:14,039 --> 00:06:18,510
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can control</font><font color="#E5E5E5"> and</font>

180
00:06:15,780 --> 00:06:21,030
<font color="#CCCCCC">that's the</font><font color="#E5E5E5"> voltage provided</font><font color="#CCCCCC"> to chip</font><font color="#E5E5E5"> so</font>

181
00:06:18,510 --> 00:06:22,800
we<font color="#CCCCCC"> could off the original voltage in</font>

182
00:06:21,030 --> 00:06:24,419
order<font color="#CCCCCC"> to provide your</font><font color="#E5E5E5"> own and it allows</font>

183
00:06:22,800 --> 00:06:26,100
<font color="#CCCCCC">us full control over what</font><font color="#E5E5E5"> kind of</font>

184
00:06:24,419 --> 00:06:27,960
voltage<font color="#E5E5E5"> signal is provided to the target</font>

185
00:06:26,100 --> 00:06:30,150
and<font color="#E5E5E5"> once you're capable of doing this</font>

186
00:06:27,960 --> 00:06:31,950
<font color="#E5E5E5">you can do some very</font><font color="#CCCCCC"> nifty</font><font color="#E5E5E5"> and that's</font>

187
00:06:30,150 --> 00:06:35,280
<font color="#E5E5E5">typically referred to as voltage fault</font>

188
00:06:31,950 --> 00:06:36,960
injection<font color="#E5E5E5"> or voltage glitching so how</font>

189
00:06:35,280 --> 00:06:38,780
does this work<font color="#E5E5E5"> well we all know a chip</font>

190
00:06:36,960 --> 00:06:40,340
needs<font color="#CCCCCC"> a</font><font color="#E5E5E5"> stable power of a stable</font>

191
00:06:38,780 --> 00:06:43,309
we do not temper a bit<font color="#E5E5E5"> of</font><font color="#CCCCCC"> thought</font>

192
00:06:40,340 --> 00:06:45,560
whatsoever<font color="#E5E5E5"> in this case but we provide</font>

193
00:06:43,310 --> 00:06:47,270
<font color="#CCCCCC">our own photo signal and because of</font><font color="#E5E5E5"> the</font>

194
00:06:45,560 --> 00:06:49,700
characteristics of the chip we need to

195
00:06:47,270 --> 00:06:51,169
provide a certain<font color="#E5E5E5"> for the signal that's</font>

196
00:06:49,700 --> 00:06:52,940
between<font color="#E5E5E5"> certain boundaries so in this</font>

197
00:06:51,170 --> 00:06:55,340
case it needs<font color="#E5E5E5"> to be between</font><font color="#CCCCCC"> 5 point 5</font>

198
00:06:52,940 --> 00:06:57,860
<font color="#E5E5E5">volts and 1 point</font><font color="#CCCCCC"> 8 volt if the</font><font color="#E5E5E5"> voltage</font>

199
00:06:55,340 --> 00:06:59,750
is supplied beyond these boundaries<font color="#E5E5E5"> then</font>

200
00:06:57,860 --> 00:07:01,730
the<font color="#E5E5E5"> behavior of the chip is not</font>

201
00:06:59,750 --> 00:07:03,650
guaranteed<font color="#CCCCCC"> anyone so if you're a</font>

202
00:07:01,730 --> 00:07:07,070
developer<font color="#CCCCCC"> you do not want to go beyond</font>

203
00:07:03,650 --> 00:07:08,659
<font color="#E5E5E5">these boundaries and because we control</font>

204
00:07:07,070 --> 00:07:10,219
<font color="#E5E5E5">this</font><font color="#CCCCCC"> focus ourselves we can pull it down</font>

205
00:07:08,660 --> 00:07:12,500
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> a chip will stop</font><font color="#E5E5E5"> so we have</font>

206
00:07:10,220 --> 00:07:15,410
some form of control<font color="#E5E5E5"> over the</font>

207
00:07:12,500 --> 00:07:17,630
<font color="#CCCCCC">microcontroller but obviously stopping</font>

208
00:07:15,410 --> 00:07:19,370
the chip is<font color="#CCCCCC"> not very useful for us</font><font color="#E5E5E5"> but</font>

209
00:07:17,630 --> 00:07:21,680
if<font color="#CCCCCC"> we do this only</font><font color="#E5E5E5"> for a smart moment in</font>

210
00:07:19,370 --> 00:07:23,540
time<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> make the chip misbehave</font>

211
00:07:21,680 --> 00:07:26,450
<font color="#E5E5E5">because it's only running for smart</font>

212
00:07:23,540 --> 00:07:29,180
amongst a small amount<font color="#E5E5E5"> of time outside</font>

213
00:07:26,450 --> 00:07:31,370
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the intended conditions and this</font>

214
00:07:29,180 --> 00:07:33,110
allows us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change it only at that</font><font color="#CCCCCC"> time</font>

215
00:07:31,370 --> 00:07:35,210
without affecting<font color="#CCCCCC"> its continuation</font>

216
00:07:33,110 --> 00:07:37,070
so really the chip<font color="#CCCCCC"> after the glitch is</font>

217
00:07:35,210 --> 00:07:38,419
injected<font color="#E5E5E5"> is still operating</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> it ended</font>

218
00:07:37,070 --> 00:07:42,140
and<font color="#E5E5E5"> all the software that's running</font>

219
00:07:38,419 --> 00:07:43,370
there is still executing<font color="#E5E5E5"> as intended so</font>

220
00:07:42,140 --> 00:07:45,800
in order<font color="#E5E5E5"> to inject these glasses you</font>

221
00:07:43,370 --> 00:07:47,810
<font color="#E5E5E5">need tooling</font><font color="#CCCCCC"> you need specialized</font>

222
00:07:45,800 --> 00:07:49,490
tooling we need<font color="#E5E5E5"> special voltage hold</font>

223
00:07:47,810 --> 00:07:52,250
injection tooling<font color="#E5E5E5"> and nowadays this</font>

224
00:07:49,490 --> 00:07:53,780
<font color="#CCCCCC">tooling is easily available</font><font color="#E5E5E5"> and there's</font>

225
00:07:52,250 --> 00:07:55,760
<font color="#CCCCCC">open-source variants there's commercial</font>

226
00:07:53,780 --> 00:07:57,440
tooling but<font color="#CCCCCC"> the key point here</font><font color="#E5E5E5"> is that</font>

227
00:07:55,760 --> 00:07:58,760
fault injection attacks are not

228
00:07:57,440 --> 00:08:01,160
<font color="#E5E5E5">something any more that are only</font>

229
00:07:58,760 --> 00:08:02,659
performed with specialized labs<font color="#E5E5E5"> it is</font>

230
00:08:01,160 --> 00:08:04,550
<font color="#E5E5E5">really something that's available to the</font>

231
00:08:02,660 --> 00:08:08,180
masses<font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> something you</font>

232
00:08:04,550 --> 00:08:09,710
see in the public<font color="#CCCCCC"> domain where lots lots</font>

233
00:08:08,180 --> 00:08:11,419
<font color="#E5E5E5">of people are</font><font color="#CCCCCC"> talking about how about</font>

234
00:08:09,710 --> 00:08:15,620
<font color="#E5E5E5">hot injection especially if you compare</font>

235
00:08:11,419 --> 00:08:17,090
<font color="#CCCCCC">this to 5 or</font><font color="#E5E5E5"> 10 years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the big</font>

236
00:08:15,620 --> 00:08:18,950
question always is that<font color="#E5E5E5"> I often get</font>

237
00:08:17,090 --> 00:08:20,659
asked is what goes wrong when you're

238
00:08:18,950 --> 00:08:23,090
injecting these glitches<font color="#E5E5E5"> and that's not</font>

239
00:08:20,660 --> 00:08:24,950
<font color="#E5E5E5">an easy task</font><font color="#CCCCCC"> away from a functional</font>

240
00:08:23,090 --> 00:08:27,500
point of<font color="#E5E5E5"> view equatorial state if you</font>

241
00:08:24,950 --> 00:08:29,780
provide an unstable voltage signal or an

242
00:08:27,500 --> 00:08:32,240
unstable<font color="#CCCCCC"> rock</font><font color="#E5E5E5"> signal to the chip the</font>

243
00:08:29,780 --> 00:08:34,549
chip will start misbehaving<font color="#E5E5E5"> and simply</font>

244
00:08:32,240 --> 00:08:36,289
said that's exactly<font color="#CCCCCC"> that but to give you</font>

245
00:08:34,549 --> 00:08:39,109
<font color="#E5E5E5">an idea of the things that can go</font><font color="#CCCCCC"> wrong</font>

246
00:08:36,289 --> 00:08:40,939
<font color="#E5E5E5">is that the contents that</font><font color="#CCCCCC"> are stored in</font>

247
00:08:39,110 --> 00:08:43,430
<font color="#CCCCCC">memory</font><font color="#E5E5E5"> or the contents</font><font color="#CCCCCC"> that are stored</font>

248
00:08:40,940 --> 00:08:45,350
in registers<font color="#E5E5E5"> once you start injecting</font>

249
00:08:43,429 --> 00:08:47,060
these<font color="#E5E5E5"> glitches at the moment in time</font>

250
00:08:45,350 --> 00:08:49,280
<font color="#E5E5E5">when you read these registers</font><font color="#CCCCCC"> or memory</font>

251
00:08:47,060 --> 00:08:50,810
is not guaranteed<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> the value</font>

252
00:08:49,280 --> 00:08:51,769
that's stored there is correctly

253
00:08:50,810 --> 00:08:54,050
transferred over<font color="#E5E5E5"> the</font>

254
00:08:51,769 --> 00:08:55,879
<font color="#E5E5E5">to your processor</font><font color="#CCCCCC"> and the same thing</font>

255
00:08:54,050 --> 00:08:57,319
holds<font color="#CCCCCC"> up for axial data that's retained</font>

256
00:08:55,879 --> 00:08:59,239
there<font color="#E5E5E5"> once you start injecting these</font>

257
00:08:57,319 --> 00:09:01,599
<font color="#CCCCCC">glitches</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> guaranteed that</font><font color="#CCCCCC"> the</font>

258
00:08:59,239 --> 00:09:05,149
data<font color="#CCCCCC"> there will be the</font><font color="#E5E5E5"> intended value</font>

259
00:09:01,600 --> 00:09:06,889
and more importantly by injecting these

260
00:09:05,149 --> 00:09:09,529
<font color="#E5E5E5">glitches we also have an</font><font color="#CCCCCC"> impact on the</font>

261
00:09:06,889 --> 00:09:11,749
processing<font color="#E5E5E5"> system responsible for</font>

262
00:09:09,529 --> 00:09:13,850
executing your software<font color="#E5E5E5"> we really can</font>

263
00:09:11,749 --> 00:09:16,100
change instructions<font color="#E5E5E5"> by injecting these</font>

264
00:09:13,850 --> 00:09:18,529
<font color="#E5E5E5">races and you</font><font color="#CCCCCC"> can already</font><font color="#E5E5E5"> imagine if you</font>

265
00:09:16,100 --> 00:09:21,019
can change instructions you will<font color="#E5E5E5"> change</font>

266
00:09:18,529 --> 00:09:23,749
the<font color="#E5E5E5"> solver and including the intended</font>

267
00:09:21,019 --> 00:09:26,360
<font color="#CCCCCC">behavior of</font><font color="#E5E5E5"> this software and bottom</font>

268
00:09:23,749 --> 00:09:28,189
<font color="#E5E5E5">line you really have to keep in</font><font color="#CCCCCC"> mind</font>

269
00:09:26,360 --> 00:09:30,170
<font color="#E5E5E5">that whenever somebody is doing fault</font>

270
00:09:28,189 --> 00:09:32,449
injection on a target you cannot trust

271
00:09:30,170 --> 00:09:34,849
the expected behavior of<font color="#E5E5E5"> this target</font>

272
00:09:32,449 --> 00:09:37,609
<font color="#CCCCCC">anymore any intended things will happen</font>

273
00:09:34,850 --> 00:09:40,939
<font color="#CCCCCC">so which can</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> anticipated but some are</font>

274
00:09:37,610 --> 00:09:42,999
more difficult to<font color="#E5E5E5"> anticipate so we can</font>

275
00:09:40,939 --> 00:09:45,379
modify instructions you can<font color="#E5E5E5"> modify data</font>

276
00:09:42,999 --> 00:09:48,470
yes it also means we<font color="#E5E5E5"> can skip</font>

277
00:09:45,379 --> 00:09:50,029
instructions and please keep in mind

278
00:09:48,470 --> 00:09:52,069
<font color="#E5E5E5">that</font><font color="#CCCCCC"> whatever we're talking about</font><font color="#E5E5E5"> today</font>

279
00:09:50,029 --> 00:09:53,959
<font color="#E5E5E5">is not specific to this dashboard</font><font color="#CCCCCC"> it's</font>

280
00:09:52,069 --> 00:09:55,670
not specific to<font color="#E5E5E5"> the software running on</font>

281
00:09:53,959 --> 00:09:57,170
the desktop<font color="#E5E5E5"> or the platform</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> which the</font>

282
00:09:55,670 --> 00:09:59,540
<font color="#E5E5E5">software</font><font color="#CCCCCC"> is running</font><font color="#E5E5E5"> it's really</font>

283
00:09:57,170 --> 00:10:01,759
applicable<font color="#CCCCCC"> to everything</font><font color="#E5E5E5"> that is not</font>

284
00:09:59,540 --> 00:10:05,360
specifically considering fault injection

285
00:10:01,759 --> 00:10:06,799
when it's designed so enough<font color="#E5E5E5"> of the</font>

286
00:10:05,360 --> 00:10:11,869
theory<font color="#E5E5E5"> let's actually do something</font>

287
00:10:06,799 --> 00:10:14,029
<font color="#CCCCCC">useful</font><font color="#E5E5E5"> so let's start this example so I</font>

288
00:10:11,869 --> 00:10:15,980
mentioned<font color="#CCCCCC"> this correction edge which is</font>

289
00:10:14,029 --> 00:10:17,660
<font color="#E5E5E5">used to protect the hitting</font><font color="#CCCCCC"> a writing</font><font color="#E5E5E5"> of</font>

290
00:10:15,980 --> 00:10:20,540
memory<font color="#E5E5E5"> well typically this is</font>

291
00:10:17,660 --> 00:10:22,639
<font color="#E5E5E5">implemented as follows the user the</font>

292
00:10:20,540 --> 00:10:24,679
client the hacker<font color="#E5E5E5"> whoever talks to the</font>

293
00:10:22,639 --> 00:10:26,959
issue in this<font color="#E5E5E5"> case design sort request</font>

294
00:10:24,679 --> 00:10:28,309
access<font color="#E5E5E5"> gets the</font><font color="#CCCCCC"> channels back performs</font>

295
00:10:26,959 --> 00:10:31,059
the transformation on<font color="#E5E5E5"> this channel is</font>

296
00:10:28,309 --> 00:10:33,889
<font color="#CCCCCC">using a secret sense the</font><font color="#E5E5E5"> responds back</font>

297
00:10:31,059 --> 00:10:35,509
these<font color="#E5E5E5"> few checks if the response and the</font>

298
00:10:33,889 --> 00:10:37,160
same response is computed on there and

299
00:10:35,509 --> 00:10:40,309
it's the<font color="#CCCCCC"> same then it</font><font color="#E5E5E5"> proves that</font><font color="#CCCCCC"> both</font>

300
00:10:37,160 --> 00:10:41,660
the develop user and<font color="#CCCCCC"> the issue have</font>

301
00:10:40,309 --> 00:10:43,910
access<font color="#E5E5E5"> to the same secret that the</font>

302
00:10:41,660 --> 00:10:45,139
attacker should not have<font color="#E5E5E5"> oh if you</font>

303
00:10:43,910 --> 00:10:47,269
remember<font color="#E5E5E5"> that they can change</font>

304
00:10:45,139 --> 00:10:49,819
instructions it's probably<font color="#E5E5E5"> probably</font>

305
00:10:47,269 --> 00:10:51,439
possible to change the<font color="#CCCCCC"> internal</font><font color="#E5E5E5"> behavior</font>

306
00:10:49,819 --> 00:10:53,238
of<font color="#CCCCCC"> that conditional statement by</font>

307
00:10:51,439 --> 00:10:55,368
injecting the glitch at that moment in

308
00:10:53,239 --> 00:10:59,119
time<font color="#E5E5E5"> and that's exactly what we started</font>

309
00:10:55,369 --> 00:11:01,819
doing<font color="#E5E5E5"> however on this dashboard</font><font color="#CCCCCC"> we were</font>

310
00:10:59,119 --> 00:11:03,139
not successful<font color="#CCCCCC"> and it's not because</font><font color="#E5E5E5"> they</font>

311
00:11:01,819 --> 00:11:05,390
could not<font color="#CCCCCC"> eject this yet you're</font>

312
00:11:03,139 --> 00:11:06,680
perfectly fine injecting<font color="#E5E5E5"> these days</font>

313
00:11:05,390 --> 00:11:08,000
but the thing<font color="#E5E5E5"> was there was</font><font color="#CCCCCC"> a practical</font>

314
00:11:06,680 --> 00:11:11,150
hurdle<font color="#CCCCCC"> that made his attack not</font>

315
00:11:08,000 --> 00:11:13,730
practical for<font color="#CCCCCC"> us cause every three times</font>

316
00:11:11,150 --> 00:11:14,990
<font color="#E5E5E5">the</font><font color="#CCCCCC"> centre</font><font color="#E5E5E5"> home response because they</font><font color="#CCCCCC"> do</font>

317
00:11:13,730 --> 00:11:17,630
not<font color="#E5E5E5"> have access to the secret a</font>

318
00:11:14,990 --> 00:11:20,780
<font color="#E5E5E5">10-minute delay was set until we could</font>

319
00:11:17,630 --> 00:11:23,720
do<font color="#E5E5E5"> three responses again you will see</font>

320
00:11:20,780 --> 00:11:25,130
later<font color="#E5E5E5"> during</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> demonstration</font><font color="#CCCCCC"> that is</font>

321
00:11:23,720 --> 00:11:26,630
really<font color="#E5E5E5"> needed</font><font color="#CCCCCC"> to send a lot</font><font color="#E5E5E5"> of</font>

322
00:11:25,130 --> 00:11:28,189
experiments<font color="#E5E5E5"> to the target in order to</font>

323
00:11:26,630 --> 00:11:30,890
find the right<font color="#E5E5E5"> shape of the glitch in</font>

324
00:11:28,190 --> 00:11:32,150
order to find<font color="#E5E5E5"> that successful glitch so</font>

325
00:11:30,890 --> 00:11:34,189
sometimes you just<font color="#E5E5E5"> have to move on</font>

326
00:11:32,150 --> 00:11:35,689
remember<font color="#CCCCCC"> we're trying</font><font color="#E5E5E5"> to find something</font>

327
00:11:34,190 --> 00:11:39,140
easy<font color="#CCCCCC"> we don't want to over complicate</font>

328
00:11:35,690 --> 00:11:41,090
these things we<font color="#E5E5E5"> just want the firmer so</font>

329
00:11:39,140 --> 00:11:43,189
at the<font color="#E5E5E5"> end of the day we want the</font><font color="#CCCCCC"> fervor</font>

330
00:11:41,090 --> 00:11:44,870
by reading out some memory so the

331
00:11:43,190 --> 00:11:47,720
functionality<font color="#E5E5E5"> that's implemented in the</font>

332
00:11:44,870 --> 00:11:50,540
UDS<font color="#E5E5E5"> solver is the</font><font color="#CCCCCC"> read memory by address</font>

333
00:11:47,720 --> 00:11:52,160
command and we can actually<font color="#CCCCCC"> issue this</font>

334
00:11:50,540 --> 00:11:54,740
<font color="#E5E5E5">remote without being authenticated to</font>

335
00:11:52,160 --> 00:11:57,020
<font color="#E5E5E5">the security access check so there is</font>

336
00:11:54,740 --> 00:11:58,850
<font color="#E5E5E5">something in the issue that verifies if</font>

337
00:11:57,020 --> 00:12:01,220
you're already<font color="#E5E5E5"> authenticated or not and</font>

338
00:11:58,850 --> 00:12:03,080
<font color="#E5E5E5">exactly</font><font color="#CCCCCC"> that check is exactly the same</font>

339
00:12:01,220 --> 00:12:05,390
<font color="#E5E5E5">as where the response</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> being verified</font>

340
00:12:03,080 --> 00:12:07,460
<font color="#E5E5E5">so if we inject</font><font color="#CCCCCC"> the glitch at that</font>

341
00:12:05,390 --> 00:12:09,560
moment in<font color="#CCCCCC"> time we will actually</font><font color="#E5E5E5"> be</font>

342
00:12:07,460 --> 00:12:11,720
capable<font color="#CCCCCC"> of running this</font><font color="#E5E5E5"> command without</font>

343
00:12:09,560 --> 00:12:14,449
having<font color="#CCCCCC"> access to the sequence used to</font>

344
00:12:11,720 --> 00:12:15,800
authenticate<font color="#CCCCCC"> yourself to the target and</font>

345
00:12:14,450 --> 00:12:18,350
the best thing here is there's no

346
00:12:15,800 --> 00:12:19,939
<font color="#CCCCCC">10-minute delay they can issue</font><font color="#E5E5E5"> this</font>

347
00:12:18,350 --> 00:12:22,160
command with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whole response as many</font>

348
00:12:19,940 --> 00:12:23,570
times<font color="#E5E5E5"> as</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> we're only limited by</font>

349
00:12:22,160 --> 00:12:26,510
<font color="#E5E5E5">the communication speed towards the</font>

350
00:12:23,570 --> 00:12:28,190
target<font color="#E5E5E5"> so we started</font><font color="#CCCCCC"> doing this</font><font color="#E5E5E5"> and we</font>

351
00:12:26,510 --> 00:12:29,720
were<font color="#E5E5E5"> successful in this dashboard</font><font color="#CCCCCC"> we</font>

352
00:12:28,190 --> 00:12:32,000
<font color="#E5E5E5">actually did the same attack by the</font>

353
00:12:29,720 --> 00:12:34,160
memory by address commands implanted<font color="#CCCCCC"> on</font>

354
00:12:32,000 --> 00:12:36,910
multiple dashboards on different<font color="#E5E5E5"> issues</font>

355
00:12:34,160 --> 00:12:38,449
all<font color="#E5E5E5"> of them designed around different</font>

356
00:12:36,910 --> 00:12:41,420
<font color="#E5E5E5">microcontrollers showing that this</font>

357
00:12:38,450 --> 00:12:42,740
attack is<font color="#CCCCCC"> really generic</font><font color="#E5E5E5"> and depending</font>

358
00:12:41,420 --> 00:12:44,060
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> target because we were still</font>

359
00:12:42,740 --> 00:12:47,030
bound by the restrictions in<font color="#CCCCCC"> the</font>

360
00:12:44,060 --> 00:12:49,849
<font color="#CCCCCC">software some of the targets</font><font color="#E5E5E5"> led us to</font>

361
00:12:47,030 --> 00:12:51,199
<font color="#E5E5E5">expect 40 bytes at a time so</font><font color="#CCCCCC"> allowed us</font>

362
00:12:49,850 --> 00:12:53,180
to<font color="#E5E5E5"> get 100 bytes at a time</font>

363
00:12:51,200 --> 00:12:54,680
some allowed the staircase 500 bytes at

364
00:12:53,180 --> 00:12:57,260
a time<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> these</font>

365
00:12:54,680 --> 00:12:58,579
microcontrollers were different the

366
00:12:57,260 --> 00:13:01,490
internal memories were different as well

367
00:12:58,580 --> 00:13:04,610
so some<font color="#CCCCCC"> of them had 500 kilobytes memory</font>

368
00:13:01,490 --> 00:13:06,620
the others at<font color="#E5E5E5"> 4 megabytes you can really</font>

369
00:13:04,610 --> 00:13:08,120
imagine that<font color="#E5E5E5"> if you consider the fact</font>

370
00:13:06,620 --> 00:13:12,320
<font color="#E5E5E5">that the amount of bytes you can extract</font>

371
00:13:08,120 --> 00:13:14,450
<font color="#E5E5E5">the amount of the success rate</font><font color="#CCCCCC"> of the</font>

372
00:13:12,320 --> 00:13:15,950
glitches<font color="#E5E5E5"> and the internal</font><font color="#CCCCCC"> memory size it</font>

373
00:13:14,450 --> 00:13:17,420
<font color="#E5E5E5">changes a little bit how</font><font color="#CCCCCC"> much time it</font>

374
00:13:15,950 --> 00:13:18,950
takes<font color="#E5E5E5"> to get the internal memory result</font>

375
00:13:17,420 --> 00:13:21,170
however<font color="#E5E5E5"> we were</font>

376
00:13:18,950 --> 00:13:25,040
successful on all<font color="#E5E5E5"> targets where this</font>

377
00:13:21,170 --> 00:13:26,689
particular<font color="#CCCCCC"> command was implemented so</font>

378
00:13:25,040 --> 00:13:29,689
enough talking let's actually<font color="#CCCCCC"> show you</font>

379
00:13:26,690 --> 00:13:31,280
something we're<font color="#E5E5E5"> not changing to the</font>

380
00:13:29,690 --> 00:13:33,230
other laptop yet<font color="#CCCCCC"> first I would like</font><font color="#E5E5E5"> to</font>

381
00:13:31,280 --> 00:13:34,280
<font color="#E5E5E5">walk you through the setup that</font><font color="#CCCCCC"> we</font>

382
00:13:33,230 --> 00:13:36,530
<font color="#CCCCCC">actually have</font><font color="#E5E5E5"> you laid in from the</font>

383
00:13:34,280 --> 00:13:38,660
<font color="#CCCCCC">vessel so we have a laptop so a basic</font>

384
00:13:36,530 --> 00:13:40,939
computer<font color="#E5E5E5"> and it communicates to our FPAA</font>

385
00:13:38,660 --> 00:13:43,969
based<font color="#E5E5E5"> later and this glacier</font><font color="#CCCCCC"> has two</font>

386
00:13:40,940 --> 00:13:45,890
responsibilities<font color="#E5E5E5"> it needs to inject it</font>

387
00:13:43,970 --> 00:13:47,390
<font color="#CCCCCC">lit so it</font><font color="#E5E5E5"> provides an arbitrary voltage</font>

388
00:13:45,890 --> 00:13:49,400
signal to the target<font color="#E5E5E5"> in which</font><font color="#CCCCCC"> it can</font>

389
00:13:47,390 --> 00:13:51,110
inject<font color="#E5E5E5"> this weight and it needs</font><font color="#CCCCCC"> to time</font>

390
00:13:49,400 --> 00:13:53,630
this<font color="#E5E5E5"> we'll talk about that later</font>

391
00:13:51,110 --> 00:13:54,980
and there's a reset<font color="#E5E5E5"> signal</font><font color="#CCCCCC"> so like I</font>

392
00:13:53,630 --> 00:13:56,600
said<font color="#E5E5E5"> when you start injecting these</font>

393
00:13:54,980 --> 00:13:58,640
glitches and<font color="#E5E5E5"> it and things will happen</font>

394
00:13:56,600 --> 00:14:01,520
<font color="#E5E5E5">and sometimes the chip will get stuck</font>

395
00:13:58,640 --> 00:14:03,470
and in that case you need<font color="#CCCCCC"> to reset</font><font color="#E5E5E5"> the</font>

396
00:14:01,520 --> 00:14:06,439
chip to nonstate<font color="#E5E5E5"> in order to continue</font>

397
00:14:03,470 --> 00:14:08,720
your experiments<font color="#CCCCCC"> again and then also</font>

398
00:14:06,440 --> 00:14:10,430
because<font color="#E5E5E5"> we communicate</font><font color="#CCCCCC"> to the dashboard</font>

399
00:14:08,720 --> 00:14:12,230
<font color="#CCCCCC">using canvas interface we need to be</font>

400
00:14:10,430 --> 00:14:14,810
able<font color="#E5E5E5"> to speak</font><font color="#CCCCCC"> chemists so we</font><font color="#E5E5E5"> have our</font>

401
00:14:12,230 --> 00:14:16,040
own canvas interface with Satyricon

402
00:14:14,810 --> 00:14:18,619
which implements additional

403
00:14:16,040 --> 00:14:21,260
functionality<font color="#E5E5E5"> and in this case we only</font>

404
00:14:18,620 --> 00:14:23,060
use one specific<font color="#CCCCCC"> thing here is that this</font>

405
00:14:21,260 --> 00:14:24,500
capable<font color="#CCCCCC"> setting a trigger signal that</font>

406
00:14:23,060 --> 00:14:26,719
<font color="#E5E5E5">allows us to time the glitch at the</font>

407
00:14:24,500 --> 00:14:28,970
<font color="#E5E5E5">specific moment in time at the moment it</font>

408
00:14:26,720 --> 00:14:30,590
sends the command<font color="#E5E5E5"> so at the moment it's</font>

409
00:14:28,970 --> 00:14:32,960
<font color="#CCCCCC">thanks</font><font color="#E5E5E5"> to honk responds we will talk</font>

410
00:14:30,590 --> 00:14:34,640
about this<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit more and this</font><font color="#E5E5E5"> is</font>

411
00:14:32,960 --> 00:14:36,560
<font color="#CCCCCC">the actual command</font><font color="#E5E5E5"> that we're sending so</font>

412
00:14:34,640 --> 00:14:40,939
we're<font color="#E5E5E5"> trying to read from an actual</font>

413
00:14:36,560 --> 00:14:42,560
target<font color="#CCCCCC"> 40x bite from a 2-0 and if you</font>

414
00:14:40,940 --> 00:14:44,090
get<font color="#E5E5E5"> these bytes out it's a problem</font>

415
00:14:42,560 --> 00:14:46,430
<font color="#E5E5E5">because it should not be possible to</font>

416
00:14:44,090 --> 00:14:51,050
<font color="#E5E5E5">read this particular address</font><font color="#CCCCCC"> and these</font>

417
00:14:46,430 --> 00:14:54,260
are the first 64 bytes of<font color="#E5E5E5"> the firmware</font>

418
00:14:51,050 --> 00:14:55,699
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> invested in so everybody that</font>

419
00:14:54,260 --> 00:14:57,080
does some hardware hacking you know that

420
00:14:55,700 --> 00:15:00,110
once you start<font color="#E5E5E5"> putting things together</font>

421
00:14:57,080 --> 00:15:02,630
<font color="#CCCCCC">if cables</font><font color="#E5E5E5"> going everywhere and obviously</font>

422
00:15:00,110 --> 00:15:04,550
this<font color="#E5E5E5"> is the exact same set of the relay</font>

423
00:15:02,630 --> 00:15:06,430
<font color="#E5E5E5">Infirmary obviously it's not possible to</font>

424
00:15:04,550 --> 00:15:08,420
take this set up in the plane and

425
00:15:06,430 --> 00:15:11,000
guarantee that<font color="#E5E5E5"> it's gonna work your life</font>

426
00:15:08,420 --> 00:15:13,430
<font color="#CCCCCC">on States in Vegas right so we had to do</font>

427
00:15:11,000 --> 00:15:16,010
<font color="#E5E5E5">something in order</font><font color="#CCCCCC"> to practice together</font>

428
00:15:13,430 --> 00:15:18,109
in order<font color="#CCCCCC"> that it would fit in a</font><font color="#E5E5E5"> luggage</font>

429
00:15:16,010 --> 00:15:19,880
<font color="#E5E5E5">put it in</font><font color="#CCCCCC"> check in</font><font color="#E5E5E5"> luggage</font><font color="#CCCCCC"> and open that</font>

430
00:15:18,110 --> 00:15:22,460
up here in<font color="#E5E5E5"> Vegas again in order</font><font color="#CCCCCC"> for this</font>

431
00:15:19,880 --> 00:15:23,540
<font color="#CCCCCC">setup</font><font color="#E5E5E5"> to work and this is</font><font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> what</font>

432
00:15:22,460 --> 00:15:27,920
we<font color="#CCCCCC"> are playing</font><font color="#E5E5E5"> in from the vision</font>

433
00:15:23,540 --> 00:15:29,360
<font color="#E5E5E5">nothing is different before we switch to</font>

434
00:15:27,920 --> 00:15:31,280
the<font color="#E5E5E5"> other laptop to show the demo I</font><font color="#CCCCCC"> want</font>

435
00:15:29,360 --> 00:15:32,690
to walk<font color="#CCCCCC"> you through</font><font color="#E5E5E5"> the oscilloscope</font>

436
00:15:31,280 --> 00:15:35,720
window you're going<font color="#CCCCCC"> to see</font>

437
00:15:32,690 --> 00:15:38,449
so at the<font color="#CCCCCC"> dream</font><font color="#E5E5E5"> signal with one here on</font>

438
00:15:35,720 --> 00:15:40,730
top<font color="#CCCCCC"> that's the</font><font color="#E5E5E5"> voltage</font><font color="#CCCCCC"> supplied to the</font>

439
00:15:38,449 --> 00:15:42,769
target<font color="#E5E5E5"> and the little dip</font><font color="#CCCCCC"> you see there</font>

440
00:15:40,730 --> 00:15:44,509
this label glitch<font color="#CCCCCC"> lets</font><font color="#E5E5E5"> the actual glitch</font>

441
00:15:42,769 --> 00:15:46,129
we're injecting into this for<font color="#CCCCCC"> the signal</font>

442
00:15:44,509 --> 00:15:46,899
<font color="#E5E5E5">in order to make the chip do something</font>

443
00:15:46,129 --> 00:15:49,579
else

444
00:15:46,899 --> 00:15:51,139
they have signal<font color="#E5E5E5"> that is the command</font>

445
00:15:49,579 --> 00:15:53,290
being<font color="#E5E5E5"> sent towards the target and</font>

446
00:15:51,139 --> 00:15:55,819
response is the response coming back

447
00:15:53,290 --> 00:15:58,099
<font color="#E5E5E5">it's embedded in the same signal because</font>

448
00:15:55,819 --> 00:16:00,819
the<font color="#E5E5E5"> compass interface is a bus so</font>

449
00:15:58,100 --> 00:16:03,379
everything goes over the same signal and

450
00:16:00,819 --> 00:16:05,599
the third one<font color="#E5E5E5"> the blue one</font><font color="#CCCCCC"> is a trigger</font>

451
00:16:03,379 --> 00:16:07,310
so this is the signal<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> set just</font>

452
00:16:05,600 --> 00:16:09,019
<font color="#E5E5E5">before the command is being sent out as</font>

453
00:16:07,310 --> 00:16:11,209
you can see the signal goes up just

454
00:16:09,019 --> 00:16:13,629
<font color="#CCCCCC">before and this signals taken in by the</font>

455
00:16:11,209 --> 00:16:16,729
FPAA based literature in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> time</font>

456
00:16:13,629 --> 00:16:18,199
the the glitch and<font color="#CCCCCC"> the timing of this</font>

457
00:16:16,730 --> 00:16:20,120
<font color="#E5E5E5">clicks is actually set by</font><font color="#CCCCCC"> The Glades</font>

458
00:16:18,199 --> 00:16:22,040
<font color="#E5E5E5">delay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is the time between the</font>

459
00:16:20,120 --> 00:16:24,230
trigger and the moment the<font color="#CCCCCC"> case is</font>

460
00:16:22,040 --> 00:16:25,819
injected and then there's two other

461
00:16:24,230 --> 00:16:27,350
<font color="#CCCCCC">parameters</font><font color="#E5E5E5"> you need to play with</font><font color="#CCCCCC"> and</font>

462
00:16:25,819 --> 00:16:30,410
they<font color="#CCCCCC"> have an impact in the shape of</font><font color="#E5E5E5"> the</font>

463
00:16:27,350 --> 00:16:32,360
<font color="#E5E5E5">glitch so how the glitch is observed by</font>

464
00:16:30,410 --> 00:16:34,610
the target<font color="#CCCCCC"> and that is the glitch with</font>

465
00:16:32,360 --> 00:16:36,649
such as what<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> called here the</font>

466
00:16:34,610 --> 00:16:38,810
<font color="#E5E5E5">case duration so</font><font color="#CCCCCC"> that is the width of</font>

467
00:16:36,649 --> 00:16:40,189
<font color="#E5E5E5">the pulse that goes</font><font color="#CCCCCC"> down and there's</font><font color="#E5E5E5"> the</font>

468
00:16:38,810 --> 00:16:43,310
<font color="#CCCCCC">gates</font><font color="#E5E5E5"> voltage and that's really the</font>

469
00:16:40,189 --> 00:16:49,240
amplitudes<font color="#E5E5E5"> towards the tip is being made</font>

470
00:16:43,310 --> 00:16:52,250
in<font color="#E5E5E5"> the voltage</font><font color="#CCCCCC"> signal one thing</font><font color="#E5E5E5"> that the</font>

471
00:16:49,240 --> 00:16:54,529
<font color="#E5E5E5">registration</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the gates foetus have</font>

472
00:16:52,250 --> 00:16:56,959
in common is that<font color="#E5E5E5"> a form some form of</font>

473
00:16:54,529 --> 00:17:00,050
<font color="#CCCCCC">relationship</font><font color="#E5E5E5"> because they define the</font>

474
00:16:56,959 --> 00:17:01,369
shape of<font color="#E5E5E5"> this place so if you glitch too</font>

475
00:17:00,050 --> 00:17:02,959
strong<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> combination between</font>

476
00:17:01,370 --> 00:17:04,669
<font color="#E5E5E5">eaglets</font><font color="#CCCCCC"> foetus</font><font color="#E5E5E5"> and the glyphs</font><font color="#CCCCCC"> race is</font>

477
00:17:02,959 --> 00:17:06,589
too strong then the target<font color="#E5E5E5"> is not</font>

478
00:17:04,669 --> 00:17:08,449
capable of<font color="#E5E5E5"> continuing anymore</font><font color="#CCCCCC"> and we</font>

479
00:17:06,589 --> 00:17:10,908
<font color="#E5E5E5">want</font><font color="#CCCCCC"> that right we want to send the</font>

480
00:17:08,449 --> 00:17:12,980
response inject the glitch<font color="#E5E5E5"> but also get</font>

481
00:17:10,909 --> 00:17:14,089
<font color="#E5E5E5">the data from the firmware back so we're</font>

482
00:17:12,980 --> 00:17:15,799
going<font color="#CCCCCC"> to top that you</font><font color="#E5E5E5"> see all the</font>

483
00:17:14,089 --> 00:17:17,750
combinations where the base was too

484
00:17:15,799 --> 00:17:19,639
strong<font color="#E5E5E5"> the yellow area on the bottom</font>

485
00:17:17,750 --> 00:17:21,589
<font color="#CCCCCC">right is it a green</font><font color="#E5E5E5"> area</font><font color="#CCCCCC"> and these</font><font color="#E5E5E5"> are</font>

486
00:17:19,640 --> 00:17:23,510
all the<font color="#CCCCCC"> glitches</font><font color="#E5E5E5"> where the combination</font>

487
00:17:21,589 --> 00:17:26,359
is too weak so<font color="#E5E5E5"> there's no impact on the</font>

488
00:17:23,510 --> 00:17:28,039
target whatsoever between those two

489
00:17:26,359 --> 00:17:29,899
areas<font color="#CCCCCC"> you see something interesting you</font>

490
00:17:28,039 --> 00:17:32,059
<font color="#E5E5E5">see all these red dots</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> these are</font>

491
00:17:29,900 --> 00:17:34,760
actually all successful places<font color="#E5E5E5"> where we</font>

492
00:17:32,059 --> 00:17:37,100
extracted<font color="#CCCCCC"> 40x</font><font color="#E5E5E5"> bytes from the internal</font>

493
00:17:34,760 --> 00:17:38,600
firmware of this device<font color="#E5E5E5"> so in order to</font>

494
00:17:37,100 --> 00:17:40,459
<font color="#CCCCCC">increase the success rate which is</font>

495
00:17:38,600 --> 00:17:42,020
important because we<font color="#E5E5E5"> need a lot</font><font color="#CCCCCC"> of</font>

496
00:17:40,460 --> 00:17:44,840
glitches in order to get<font color="#E5E5E5"> four megabytes</font>

497
00:17:42,020 --> 00:17:46,309
of internal<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> we can focus</font>

498
00:17:44,840 --> 00:17:48,439
on the parameter space<font color="#CCCCCC"> there are these</font>

499
00:17:46,309 --> 00:17:50,299
red dots appear<font color="#E5E5E5"> and this increases the</font>

500
00:17:48,440 --> 00:17:51,860
success rate<font color="#E5E5E5"> and it also allows</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to</font>

501
00:17:50,299 --> 00:17:53,149
actually<font color="#E5E5E5"> do this here</font><font color="#CCCCCC"> life in States if</font>

502
00:17:51,860 --> 00:17:57,049
you<font color="#CCCCCC"> could not</font><font color="#E5E5E5"> increase the success rate</font>

503
00:17:53,149 --> 00:18:01,370
<font color="#CCCCCC">it would</font><font color="#E5E5E5"> not be possible can we switch</font>

504
00:17:57,049 --> 00:18:03,649
to the<font color="#E5E5E5"> other laptop so what you see here</font>

505
00:18:01,370 --> 00:18:06,018
<font color="#CCCCCC">on the left side is the exact same</font>

506
00:18:03,649 --> 00:18:07,549
picture from the<font color="#E5E5E5"> accessibility show cell</font>

507
00:18:06,019 --> 00:18:09,830
<font color="#CCCCCC">before</font><font color="#E5E5E5"> mr. voltage there's the</font>

508
00:18:07,549 --> 00:18:12,610
communication there's a tape<font color="#E5E5E5"> and on the</font>

509
00:18:09,830 --> 00:18:15,110
right<font color="#CCCCCC"> side you actually</font><font color="#E5E5E5"> see the</font>

510
00:18:12,610 --> 00:18:16,459
communication towards<font color="#E5E5E5"> RF behavior</font>

511
00:18:15,110 --> 00:18:18,199
so on the first<font color="#CCCCCC"> column you see you polar</font>

512
00:18:16,460 --> 00:18:21,259
<font color="#E5E5E5">that represents exactly the same as the</font>

513
00:18:18,200 --> 00:18:24,320
plot game for two week<font color="#CCCCCC"> yellow</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> too</font>

514
00:18:21,259 --> 00:18:26,149
<font color="#CCCCCC">strong a cat</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> successfully</font><font color="#E5E5E5"> and then</font>

515
00:18:24,320 --> 00:18:28,059
<font color="#E5E5E5">we see that since we are here in this</font>

516
00:18:26,149 --> 00:18:31,279
<font color="#CCCCCC">room we performed roughly</font><font color="#E5E5E5"> 3000</font>

517
00:18:28,059 --> 00:18:34,039
experiments we deviate<font color="#CCCCCC"> the glitch delay</font>

518
00:18:31,279 --> 00:18:35,600
which is<font color="#CCCCCC"> nanoseconds a little bit we fix</font>

519
00:18:34,039 --> 00:18:37,490
the<font color="#E5E5E5"> glitch duration</font><font color="#CCCCCC"> because there's this</font>

520
00:18:35,600 --> 00:18:39,709
relationship<font color="#E5E5E5"> between the</font><font color="#CCCCCC"> glyph</font><font color="#E5E5E5"> duration</font>

521
00:18:37,490 --> 00:18:41,360
and the glitch voltage we randomize the

522
00:18:39,710 --> 00:18:43,610
cleats for this a<font color="#E5E5E5"> little bit because one</font>

523
00:18:41,360 --> 00:18:46,039
thing to realize<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the parameters</font>

524
00:18:43,610 --> 00:18:47,959
of<font color="#E5E5E5"> itlet's they're also affected by the</font>

525
00:18:46,039 --> 00:18:49,309
ambient<font color="#E5E5E5"> temperature so the temperature</font>

526
00:18:47,960 --> 00:18:51,470
in the Netherlands<font color="#E5E5E5"> where</font><font color="#CCCCCC"> the problem is</font>

527
00:18:49,309 --> 00:18:53,210
<font color="#E5E5E5">different than in this</font><font color="#CCCCCC"> casino here in</font>

528
00:18:51,470 --> 00:18:58,669
Vegas where the<font color="#E5E5E5"> air conditioning is</font>

529
00:18:53,210 --> 00:19:00,379
brutal<font color="#CCCCCC"> but if something would go wrong</font>

530
00:18:58,669 --> 00:19:02,240
we could<font color="#E5E5E5"> change the parameters here</font>

531
00:19:00,379 --> 00:19:04,580
<font color="#E5E5E5">we're not going</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> but more</font>

532
00:19:02,240 --> 00:19:06,499
importantly<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> people that</font><font color="#E5E5E5"> know UDS</font>

533
00:19:04,580 --> 00:19:08,360
what we see here in the data problem is

534
00:19:06,499 --> 00:19:10,399
actually<font color="#E5E5E5"> the response of the target</font><font color="#CCCCCC"> so</font>

535
00:19:08,360 --> 00:19:12,229
<font color="#E5E5E5">the first by this</font><font color="#CCCCCC"> oh I'm gonna interrupt</font>

536
00:19:10,399 --> 00:19:14,239
myself<font color="#E5E5E5"> this is actually a successful</font>

537
00:19:12,230 --> 00:19:16,639
glitch these are the 40 bytes from the

538
00:19:14,240 --> 00:19:18,440
internal firmer<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is laying in</font><font color="#CCCCCC"> front</font>

539
00:19:16,639 --> 00:19:21,139
of me that should not come out<font color="#CCCCCC"> here</font><font color="#E5E5E5"> live</font>

540
00:19:18,440 --> 00:19:23,330
on stage in Vegas<font color="#CCCCCC"> it's pretty cool</font><font color="#E5E5E5"> but</font>

541
00:19:21,139 --> 00:19:26,590
<font color="#E5E5E5">what you can</font><font color="#CCCCCC"> see here</font><font color="#E5E5E5"> in the data</font><font color="#CCCCCC"> here</font>

542
00:19:23,330 --> 00:19:29,240
<font color="#CCCCCC">is that seven</font><font color="#E5E5E5"> half is 0.23 means we are</font>

543
00:19:26,590 --> 00:19:31,189
sending the heat memory<font color="#E5E5E5"> by address 33</font>

544
00:19:29,240 --> 00:19:33,230
means you're not authenticated<font color="#E5E5E5"> well</font>

545
00:19:31,190 --> 00:19:34,879
that's all as expected well because this

546
00:19:33,230 --> 00:19:37,119
<font color="#CCCCCC">is called</font><font color="#E5E5E5"> true we save one</font><font color="#CCCCCC"> of the</font>

547
00:19:34,879 --> 00:19:39,498
<font color="#E5E5E5">results notice this is the exact same</font>

548
00:19:37,119 --> 00:19:41,600
experience we started today<font color="#E5E5E5"> so this</font>

549
00:19:39,499 --> 00:19:44,210
successful result is<font color="#E5E5E5"> also obtained here</font>

550
00:19:41,600 --> 00:19:46,129
live on stage<font color="#E5E5E5"> so what you can see</font><font color="#CCCCCC"> here</font>

551
00:19:44,210 --> 00:19:48,440
is the 63

552
00:19:46,129 --> 00:19:50,389
that means<font color="#E5E5E5"> did is to collect</font><font color="#CCCCCC"> the</font>

553
00:19:48,440 --> 00:19:52,220
<font color="#CCCCCC">turncoat</font><font color="#E5E5E5"> and the rest of these bytes are</font>

554
00:19:50,389 --> 00:19:54,080
exceeded 40 X<font color="#CCCCCC"> bytes are interested</font><font color="#E5E5E5"> in</font>

555
00:19:52,220 --> 00:19:56,619
typically<font color="#E5E5E5"> what's stored there are the</font>

556
00:19:54,080 --> 00:19:58,730
reset vector<font color="#E5E5E5"> and the exception factors</font>

557
00:19:56,619 --> 00:20:00,020
for the people that<font color="#CCCCCC"> are good at</font>

558
00:19:58,730 --> 00:20:01,370
<font color="#E5E5E5">mechanician you see all of the same</font>

559
00:20:00,020 --> 00:20:06,230
<font color="#E5E5E5">fights going on so</font><font color="#CCCCCC"> probably it's the</font>

560
00:20:01,370 --> 00:20:08,810
<font color="#E5E5E5">great data so what I'm</font><font color="#CCCCCC"> interested in is</font>

561
00:20:06,230 --> 00:20:10,700
<font color="#E5E5E5">how</font><font color="#CCCCCC"> many glitches did we get since the</font>

562
00:20:08,810 --> 00:20:12,530
beginning and<font color="#E5E5E5"> this is the</font><font color="#CCCCCC"> tool to plot</font>

563
00:20:10,700 --> 00:20:15,770
our experiments so this is the same the

564
00:20:12,530 --> 00:20:18,170
videos for plotting<font color="#E5E5E5"> the plot I showed</font>

565
00:20:15,770 --> 00:20:19,970
you earlier<font color="#CCCCCC"> you see by the red diamonds</font>

566
00:20:18,170 --> 00:20:22,790
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we did not get too many glitches</font>

567
00:20:19,970 --> 00:20:24,710
but at least we got some and it really

568
00:20:22,790 --> 00:20:26,420
shows<font color="#E5E5E5"> the fault injection is not too</font>

569
00:20:24,710 --> 00:20:29,600
difficult<font color="#CCCCCC"> you can do here live on stage</font>

570
00:20:26,420 --> 00:20:31,090
on a<font color="#CCCCCC"> real car or on a real target from</font><font color="#E5E5E5"> a</font>

571
00:20:29,600 --> 00:20:35,360
modern car that's<font color="#E5E5E5"> being produced</font>

572
00:20:31,090 --> 00:20:41,720
recently<font color="#E5E5E5"> can</font><font color="#CCCCCC"> we back to go</font><font color="#E5E5E5"> back to the</font>

573
00:20:35,360 --> 00:20:43,699
other laptop so<font color="#E5E5E5"> you probably noticed and</font>

574
00:20:41,720 --> 00:20:47,120
I already<font color="#E5E5E5"> said it there's not a 100%</font>

575
00:20:43,700 --> 00:20:49,430
<font color="#E5E5E5">success rate</font><font color="#CCCCCC"> and you would like</font><font color="#E5E5E5"> to build</font>

576
00:20:47,120 --> 00:20:51,560
up to a<font color="#E5E5E5"> skosh as you can get</font><font color="#CCCCCC"> to this on</font>

577
00:20:49,430 --> 00:20:52,880
a percent success rate<font color="#CCCCCC"> especially when</font>

578
00:20:51,560 --> 00:20:54,320
you need thousands<font color="#E5E5E5"> of successful</font>

579
00:20:52,880 --> 00:20:57,710
glitches in order to get the internal

580
00:20:54,320 --> 00:20:59,570
firmware out well you probably already

581
00:20:57,710 --> 00:21:01,480
<font color="#E5E5E5">saw it in your sales code window is that</font>

582
00:20:59,570 --> 00:21:03,919
<font color="#E5E5E5">there's something</font><font color="#CCCCCC"> interesting going on</font>

583
00:21:01,480 --> 00:21:06,020
the reference point<font color="#CCCCCC"> that we used to</font>

584
00:21:03,920 --> 00:21:07,580
glitch is<font color="#CCCCCC"> it's a moment in time the</font>

585
00:21:06,020 --> 00:21:09,470
command we send out<font color="#E5E5E5"> is the same moment</font>

586
00:21:07,580 --> 00:21:10,970
in<font color="#E5E5E5"> time but the response that comes back</font>

587
00:21:09,470 --> 00:21:13,220
<font color="#E5E5E5">from the target is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> always at the</font>

588
00:21:10,970 --> 00:21:15,200
<font color="#CCCCCC">same moment in time</font><font color="#E5E5E5"> and is this because</font>

589
00:21:13,220 --> 00:21:17,090
our reference point<font color="#CCCCCC"> is</font><font color="#E5E5E5"> decoupled from</font>

590
00:21:15,200 --> 00:21:18,950
the<font color="#E5E5E5"> moment we want</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> glitch from the</font>

591
00:21:17,090 --> 00:21:21,649
event we want to do it it's not<font color="#CCCCCC"> composed</font>

592
00:21:18,950 --> 00:21:23,210
to the authentication check so in order

593
00:21:21,650 --> 00:21:26,920
to<font color="#E5E5E5"> increase the success rate</font>

594
00:21:23,210 --> 00:21:29,060
significantly<font color="#CCCCCC"> we need a way to couple</font>

595
00:21:26,920 --> 00:21:31,010
the reference<font color="#E5E5E5"> points to the other</font>

596
00:21:29,060 --> 00:21:33,050
<font color="#E5E5E5">indication check and this</font><font color="#CCCCCC"> is something</font>

597
00:21:31,010 --> 00:21:35,240
that's certainly possible<font color="#CCCCCC"> it increases</font>

598
00:21:33,050 --> 00:21:37,000
the complexity of the<font color="#E5E5E5"> setup and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

599
00:21:35,240 --> 00:21:40,010
<font color="#E5E5E5">really something is for another day</font>

600
00:21:37,000 --> 00:21:42,350
so after having enough successful

601
00:21:40,010 --> 00:21:43,550
glitches<font color="#CCCCCC"> you got the</font><font color="#E5E5E5"> firmware out but</font>

602
00:21:42,350 --> 00:21:44,870
the firmer at the end of the day there

603
00:21:43,550 --> 00:21:47,330
might<font color="#E5E5E5"> be some strings in there but this</font>

604
00:21:44,870 --> 00:21:48,949
<font color="#CCCCCC">is just</font><font color="#E5E5E5"> a binary book what are we gonna</font>

605
00:21:47,330 --> 00:21:54,679
do with this firmer<font color="#CCCCCC"> and this is exactly</font>

606
00:21:48,950 --> 00:21:57,890
<font color="#CCCCCC">where Elesha comes into play so hi</font>

607
00:21:54,680 --> 00:22:00,620
so this is basically the<font color="#E5E5E5"> story so</font><font color="#CCCCCC"> far we</font>

608
00:21:57,890 --> 00:22:02,900
have a part of firmware<font color="#CCCCCC"> it's a huge</font>

609
00:22:00,620 --> 00:22:04,070
binary<font color="#CCCCCC"> blow up and we want to do</font>

610
00:22:02,900 --> 00:22:06,320
something<font color="#CCCCCC"> with it the idea was</font>

611
00:22:04,070 --> 00:22:08,929
understanding<font color="#E5E5E5"> so just kind of to go back</font>

612
00:22:06,320 --> 00:22:10,939
to the<font color="#CCCCCC"> high-level plan here we wanted</font><font color="#E5E5E5"> to</font>

613
00:22:08,930 --> 00:22:12,470
<font color="#E5E5E5">get the</font><font color="#CCCCCC"> firmware it was a great</font><font color="#E5E5E5"> success</font>

614
00:22:10,940 --> 00:22:15,260
we did it<font color="#E5E5E5"> here on stage</font>

615
00:22:12,470 --> 00:22:17,419
<font color="#E5E5E5">there were glitches and the next step</font><font color="#CCCCCC"> I</font>

616
00:22:15,260 --> 00:22:19,820
hope you can guess is to do some<font color="#E5E5E5"> kind of</font>

617
00:22:17,419 --> 00:22:21,140
reverse<font color="#CCCCCC"> engineering</font><font color="#E5E5E5"> but the reverse</font>

618
00:22:19,820 --> 00:22:22,789
<font color="#CCCCCC">engineering of course isn't</font><font color="#E5E5E5"> the goal</font>

619
00:22:21,140 --> 00:22:24,260
here<font color="#E5E5E5"> the goal is to</font><font color="#CCCCCC"> obtain this</font>

620
00:22:22,789 --> 00:22:26,030
understanding<font color="#CCCCCC"> that we had in the first</font>

621
00:22:24,260 --> 00:22:27,110
<font color="#E5E5E5">place</font><font color="#CCCCCC"> and why do we</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> this</font>

622
00:22:26,030 --> 00:22:28,970
understanding<font color="#CCCCCC"> well different people</font>

623
00:22:27,110 --> 00:22:30,649
<font color="#E5E5E5">might have different goals</font><font color="#CCCCCC"> you might</font>

624
00:22:28,970 --> 00:22:32,450
want to do some chip tuning<font color="#E5E5E5"> on your</font>

625
00:22:30,650 --> 00:22:34,250
engine<font color="#E5E5E5"> you might want</font><font color="#CCCCCC"> some kind of</font>

626
00:22:32,450 --> 00:22:36,650
secrets maybe to make aftermarket tools

627
00:22:34,250 --> 00:22:38,570
<font color="#E5E5E5">you might want to actually find some</font>

628
00:22:36,650 --> 00:22:41,510
vulnerabilities<font color="#E5E5E5"> probably very popular</font>

629
00:22:38,570 --> 00:22:43,220
here<font color="#E5E5E5"> so it should be easy right</font><font color="#CCCCCC"> we have</font>

630
00:22:41,510 --> 00:22:45,260
this<font color="#E5E5E5"> firmware blob we could do some kind</font>

631
00:22:43,220 --> 00:22:46,940
of static analysis<font color="#CCCCCC"> and</font><font color="#E5E5E5"> everything will</font>

632
00:22:45,260 --> 00:22:48,860
<font color="#E5E5E5">be clear</font><font color="#CCCCCC"> and kind of</font><font color="#E5E5E5"> the typical way</font>

633
00:22:46,940 --> 00:22:50,720
this works is<font color="#E5E5E5"> you have her some kind</font><font color="#CCCCCC"> of</font>

634
00:22:48,860 --> 00:22:51,740
operating system<font color="#CCCCCC"> code</font><font color="#E5E5E5"> maybe Linux</font>

635
00:22:50,720 --> 00:22:54,049
<font color="#CCCCCC">VxWorks</font>

636
00:22:51,740 --> 00:22:55,700
<font color="#E5E5E5">Q and X and you have some kind of ECU</font>

637
00:22:54,049 --> 00:22:57,830
specific code maybe something<font color="#E5E5E5"> to drive</font>

638
00:22:55,700 --> 00:23:00,200
<font color="#E5E5E5">your display to handle inputs maybe an</font>

639
00:22:57,830 --> 00:23:01,370
application on your<font color="#E5E5E5"> file system</font><font color="#CCCCCC"> and you</font>

640
00:23:00,200 --> 00:23:03,590
can simply reverse engineer<font color="#E5E5E5"> this</font>

641
00:23:01,370 --> 00:23:06,080
application<font color="#CCCCCC"> of</font><font color="#E5E5E5"> course and the automotive</font>

642
00:23:03,590 --> 00:23:09,199
<font color="#CCCCCC">world for these is used</font><font color="#E5E5E5"> for many issues</font>

643
00:23:06,080 --> 00:23:13,309
this<font color="#CCCCCC"> is not how it works</font><font color="#E5E5E5"> what actually</font>

644
00:23:09,200 --> 00:23:14,450
happens is you get a blob<font color="#E5E5E5"> and okay you</font>

645
00:23:13,309 --> 00:23:15,860
might say okay<font color="#CCCCCC"> but they're still</font><font color="#E5E5E5"> going</font>

646
00:23:14,450 --> 00:23:17,179
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> something like maybe we ought on</font>

647
00:23:15,860 --> 00:23:18,678
<font color="#E5E5E5">operating system</font><font color="#CCCCCC"> but it's still kind of</font>

648
00:23:17,179 --> 00:23:21,020
separate and<font color="#CCCCCC"> you're going to have</font><font color="#E5E5E5"> some</font>

649
00:23:18,679 --> 00:23:23,570
custom code<font color="#E5E5E5"> one of the big problems</font><font color="#CCCCCC"> is</font>

650
00:23:21,020 --> 00:23:24,980
this<font color="#E5E5E5"> is not quite how it works what</font>

651
00:23:23,570 --> 00:23:27,260
<font color="#E5E5E5">actually happens is you</font><font color="#CCCCCC"> have a huge</font>

652
00:23:24,980 --> 00:23:29,270
amount<font color="#CCCCCC"> of generated code</font><font color="#E5E5E5"> so you have</font>

653
00:23:27,260 --> 00:23:32,000
some<font color="#E5E5E5"> kind of configuration</font><font color="#CCCCCC"> and might</font>

654
00:23:29,270 --> 00:23:34,668
differ to<font color="#CCCCCC"> a market might differ per</font>

655
00:23:32,000 --> 00:23:36,770
brand of the<font color="#E5E5E5"> car per model of the car</font>

656
00:23:34,669 --> 00:23:38,600
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you also have these models which</font>

657
00:23:36,770 --> 00:23:40,850
<font color="#E5E5E5">defined at a very high level</font><font color="#CCCCCC"> using</font>

658
00:23:38,600 --> 00:23:42,949
something like<font color="#CCCCCC"> Simulink</font><font color="#E5E5E5"> on this old</font>

659
00:23:40,850 --> 00:23:45,620
<font color="#E5E5E5">generator generated code which goes into</font>

660
00:23:42,950 --> 00:23:47,659
<font color="#E5E5E5">your firmware</font><font color="#CCCCCC"> block worse the parts of</font>

661
00:23:45,620 --> 00:23:50,000
your<font color="#E5E5E5"> operating system code are</font><font color="#CCCCCC"> also</font>

662
00:23:47,659 --> 00:23:51,380
generated from this<font color="#CCCCCC"> system</font><font color="#E5E5E5"> so you might</font>

663
00:23:50,000 --> 00:23:53,030
say<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> just kind of match</font><font color="#E5E5E5"> these</font>

664
00:23:51,380 --> 00:23:55,220
operating system functions but often

665
00:23:53,030 --> 00:23:58,158
these actually<font color="#CCCCCC"> look very very different</font>

666
00:23:55,220 --> 00:23:59,630
so that<font color="#CCCCCC"> means we end up with kind</font><font color="#E5E5E5"> of</font>

667
00:23:58,159 --> 00:24:01,940
incomprehensible blobs<font color="#E5E5E5"> this is a</font>

668
00:23:59,630 --> 00:24:03,530
screenshot from either<font color="#CCCCCC"> post graph tool</font>

669
00:24:01,940 --> 00:24:05,929
and as you can<font color="#CCCCCC"> guess by the fact I'm</font>

670
00:24:03,530 --> 00:24:07,010
saying Ida Pro the good news is the

671
00:24:05,929 --> 00:24:08,929
firmware we're going to be<font color="#E5E5E5"> looking at</font>

672
00:24:07,010 --> 00:24:10,100
which is<font color="#CCCCCC"> the firmware running on</font><font color="#E5E5E5"> this</font>

673
00:24:08,929 --> 00:24:11,870
instrument<font color="#E5E5E5"> cluster we've been</font><font color="#CCCCCC"> glittery</font>

674
00:24:10,100 --> 00:24:15,080
<font color="#CCCCCC">bright in</font><font color="#E5E5E5"> front of us</font><font color="#CCCCCC"> is supported by</font>

675
00:24:11,870 --> 00:24:16,549
popular static analysis tools<font color="#CCCCCC"> I must say</font>

676
00:24:15,080 --> 00:24:18,379
at<font color="#E5E5E5"> this point we're</font><font color="#CCCCCC"> clearly trying</font><font color="#E5E5E5"> to</font>

677
00:24:16,549 --> 00:24:20,720
<font color="#E5E5E5">keep this anonymous many of you can</font>

678
00:24:18,380 --> 00:24:22,210
pretty kind of guess what's<font color="#E5E5E5"> going on but</font>

679
00:24:20,720 --> 00:24:24,890
<font color="#E5E5E5">we don't want to pick on a specific</font>

680
00:24:22,210 --> 00:24:26,240
<font color="#E5E5E5">manufacturer or specific processor as</font>

681
00:24:24,890 --> 00:24:28,610
<font color="#CCCCCC">nique</font><font color="#E5E5E5"> said this is a very</font>

682
00:24:26,240 --> 00:24:32,270
generic<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> and so we're just gonna</font>

683
00:24:28,610 --> 00:24:34,580
leave<font color="#E5E5E5"> the architecture anonymous and the</font>

684
00:24:32,270 --> 00:24:36,530
fun thing<font color="#CCCCCC"> is we chose an interesting</font>

685
00:24:34,580 --> 00:24:37,970
target<font color="#E5E5E5"> that it's not actually</font><font color="#CCCCCC"> that well</font>

686
00:24:36,530 --> 00:24:39,950
supported<font color="#E5E5E5"> by</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> first engineering</font>

687
00:24:37,970 --> 00:24:43,880
<font color="#E5E5E5">tours</font><font color="#CCCCCC"> well that's</font><font color="#E5E5E5"> fine</font><font color="#CCCCCC"> you can patch</font>

688
00:24:39,950 --> 00:24:45,710
<font color="#E5E5E5">these up that's a known problem kind of</font>

689
00:24:43,880 --> 00:24:47,630
our worst<font color="#CCCCCC"> problem is we talked okay this</font>

690
00:24:45,710 --> 00:24:49,910
is<font color="#CCCCCC"> very complex</font><font color="#E5E5E5"> static analysis are</font>

691
00:24:47,630 --> 00:24:51,230
<font color="#CCCCCC">gonna be a pain</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> dynamic</font><font color="#E5E5E5"> analysis</font>

692
00:24:49,910 --> 00:24:53,420
<font color="#E5E5E5">should come to our rescue</font>

693
00:24:51,230 --> 00:24:55,370
and let<font color="#E5E5E5"> us get understanding quickly of</font>

694
00:24:53,420 --> 00:24:57,470
<font color="#E5E5E5">course this architecture</font><font color="#CCCCCC"> is also</font><font color="#E5E5E5"> not</font>

695
00:24:55,370 --> 00:24:59,810
<font color="#E5E5E5">supported by any standard</font><font color="#CCCCCC"> dynamic</font>

696
00:24:57,470 --> 00:25:01,280
analysis tools so if you don't have any

697
00:24:59,810 --> 00:25:03,050
tools then what you do as a reverse

698
00:25:01,280 --> 00:25:04,460
engineer you make some<font color="#E5E5E5"> tools so I'm</font>

699
00:25:03,050 --> 00:25:07,070
going to<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> go through</font><font color="#E5E5E5"> how we vote</font>

700
00:25:04,460 --> 00:25:10,940
<font color="#E5E5E5">an emulator let us do dynamic analysis</font>

701
00:25:07,070 --> 00:25:12,980
on this firmware so we go<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> our</font>

702
00:25:10,940 --> 00:25:15,230
kind<font color="#CCCCCC"> of initial view we open up the</font>

703
00:25:12,980 --> 00:25:16,490
instrument cluster<font color="#CCCCCC"> and</font><font color="#E5E5E5"> what kind of</font>

704
00:25:15,230 --> 00:25:18,620
things have<font color="#E5E5E5"> in now what are we going to</font>

705
00:25:16,490 --> 00:25:20,570
<font color="#E5E5E5">need in our emulator</font><font color="#CCCCCC"> in order to</font>

706
00:25:18,620 --> 00:25:22,399
<font color="#CCCCCC">actually behave the same</font><font color="#E5E5E5"> as the</font>

707
00:25:20,570 --> 00:25:23,929
instrument cluster here<font color="#E5E5E5"> well we have a</font>

708
00:25:22,400 --> 00:25:25,700
<font color="#CCCCCC">microcontroller</font><font color="#E5E5E5"> so we're going to need</font>

709
00:25:23,930 --> 00:25:28,100
to emulate<font color="#E5E5E5"> this instruction set it's not</font>

710
00:25:25,700 --> 00:25:29,630
<font color="#CCCCCC">supported by QEMU and so forth</font><font color="#E5E5E5"> but sure</font>

711
00:25:28,100 --> 00:25:30,439
we're also gonna need<font color="#CCCCCC"> all these</font>

712
00:25:29,630 --> 00:25:32,420
peripherals

713
00:25:30,440 --> 00:25:34,160
<font color="#E5E5E5">we're gonna need timers interrupts all</font>

714
00:25:32,420 --> 00:25:35,690
kinds of<font color="#E5E5E5"> this boring stuff</font><font color="#CCCCCC"> but we also</font>

715
00:25:34,160 --> 00:25:37,790
have this e form in this plate that's

716
00:25:35,690 --> 00:25:39,800
fine we can emulate those<font color="#CCCCCC"> too but</font><font color="#E5E5E5"> then</font>

717
00:25:37,790 --> 00:25:41,030
they're connected<font color="#CCCCCC"> by I squared C we're</font>

718
00:25:39,800 --> 00:25:44,480
going<font color="#CCCCCC"> to I squared C we're</font><font color="#E5E5E5"> going to need</font>

719
00:25:41,030 --> 00:25:46,490
IO we're going to need<font color="#E5E5E5"> cam</font><font color="#CCCCCC"> okay so let's</font>

720
00:25:44,480 --> 00:25:49,010
actually look how painful is this to do

721
00:25:46,490 --> 00:25:50,510
we can emulate the CPU architecture

722
00:25:49,010 --> 00:25:52,940
<font color="#E5E5E5">itself which is just</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of reading</font>

723
00:25:50,510 --> 00:25:57,050
data sheets<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> boring but you can do</font>

724
00:25:52,940 --> 00:25:58,850
<font color="#E5E5E5">it it's a good opportunity to take</font>

725
00:25:57,050 --> 00:26:00,710
<font color="#E5E5E5">advantage if you've once ever wanted to</font>

726
00:25:58,850 --> 00:26:02,449
<font color="#E5E5E5">write</font><font color="#CCCCCC"> a game</font><font color="#E5E5E5"> point emulator</font><font color="#CCCCCC"> that kind of</font>

727
00:26:00,710 --> 00:26:04,430
thing is really<font color="#E5E5E5"> good experience for this</font>

728
00:26:02,450 --> 00:26:06,380
kind of thing but<font color="#E5E5E5"> then the complicated</font>

729
00:26:04,430 --> 00:26:08,470
<font color="#E5E5E5">part is all these peripherals the good</font>

730
00:26:06,380 --> 00:26:10,700
news is again we're not going perfection

731
00:26:08,470 --> 00:26:12,800
<font color="#E5E5E5">all we need is to get the firmware</font>

732
00:26:10,700 --> 00:26:13,940
running in the correct way<font color="#CCCCCC"> and it turns</font>

733
00:26:12,800 --> 00:26:16,610
<font color="#E5E5E5">out you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> stop out all of</font>

734
00:26:13,940 --> 00:26:17,960
<font color="#E5E5E5">these perforce</font><font color="#CCCCCC"> and if ECU is often</font><font color="#E5E5E5"> very</font>

735
00:26:16,610 --> 00:26:20,120
concerned<font color="#CCCCCC"> about their power supply in</font>

736
00:26:17,960 --> 00:26:21,860
their clocks<font color="#E5E5E5"> this dedicated</font><font color="#CCCCCC"> hardware and</font>

737
00:26:20,120 --> 00:26:23,899
these chips for monitoring<font color="#E5E5E5"> these things</font>

738
00:26:21,860 --> 00:26:25,250
<font color="#E5E5E5">but we don't really care we can just lie</font>

739
00:26:23,900 --> 00:26:27,680
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the firmware and say everything is</font>

740
00:26:25,250 --> 00:26:29,150
absolutely<font color="#E5E5E5"> fine sometimes</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> just don't</font>

741
00:26:27,680 --> 00:26:31,700
implement<font color="#CCCCCC"> these perforce then we</font><font color="#E5E5E5"> just</font>

742
00:26:29,150 --> 00:26:33,650
not actually as much<font color="#E5E5E5"> work as it seems so</font>

743
00:26:31,700 --> 00:26:36,260
<font color="#E5E5E5">how painful is</font><font color="#CCCCCC"> it to actually do this</font>

744
00:26:33,650 --> 00:26:39,350
<font color="#E5E5E5">well I wrote before Christmas last</font><font color="#CCCCCC"> year</font>

745
00:26:36,260 --> 00:26:40,070
an emulator<font color="#E5E5E5"> for this target</font><font color="#CCCCCC"> and I was</font>

746
00:26:39,350 --> 00:26:42,050
kind of working

747
00:26:40,070 --> 00:26:44,990
about a week<font color="#E5E5E5"> of work it was a sleepless</font>

748
00:26:42,050 --> 00:26:48,560
work my<font color="#E5E5E5"> family were away and of course I</font>

749
00:26:44,990 --> 00:26:50,660
<font color="#CCCCCC">decide</font><font color="#E5E5E5"> to spend my free time</font><font color="#CCCCCC"> winding a</font>

750
00:26:48,560 --> 00:26:52,070
crazy emulator for<font color="#E5E5E5"> this thing and</font><font color="#CCCCCC"> I have</font>

751
00:26:50,660 --> 00:26:54,950
had a chance doing this<font color="#E5E5E5"> before but still</font>

752
00:26:52,070 --> 00:26:57,110
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> something that's fun to do and I'm</font>

753
00:26:54,950 --> 00:26:59,240
<font color="#CCCCCC">sure many of you can can do this</font><font color="#E5E5E5"> and</font>

754
00:26:57,110 --> 00:27:01,879
it's fun to<font color="#E5E5E5"> try at</font><font color="#CCCCCC"> least for</font><font color="#E5E5E5"> something</font>

755
00:26:59,240 --> 00:27:03,500
like the<font color="#CCCCCC"> Gameboy and how much code in it</font>

756
00:27:01,880 --> 00:27:05,750
you can guess if I did it in a<font color="#E5E5E5"> week it's</font>

757
00:27:03,500 --> 00:27:07,700
<font color="#E5E5E5">not that much code</font><font color="#CCCCCC"> it's about 3,000</font>

758
00:27:05,750 --> 00:27:09,200
<font color="#CCCCCC">lines of code in the end not including</font>

759
00:27:07,700 --> 00:27:11,510
<font color="#CCCCCC">so with a neat</font><font color="#E5E5E5"> toss and we're going to</font>

760
00:27:09,200 --> 00:27:13,400
show in a moment<font color="#CCCCCC"> but this was enough to</font>

761
00:27:11,510 --> 00:27:15,440
<font color="#CCCCCC">make it</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is surprisingly</font>

762
00:27:13,400 --> 00:27:17,660
practical<font color="#CCCCCC"> a lot of people say in no way</font>

763
00:27:15,440 --> 00:27:20,090
this<font color="#E5E5E5"> is way too complicated</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you can</font>

764
00:27:17,660 --> 00:27:23,360
certainly get this working<font color="#E5E5E5"> relatively</font>

765
00:27:20,090 --> 00:27:24,230
efficiently so why did we do it<font color="#CCCCCC"> in the</font>

766
00:27:23,360 --> 00:27:25,639
first<font color="#E5E5E5"> place we're going for</font>

767
00:27:24,230 --> 00:27:26,930
understanding right<font color="#E5E5E5"> then we got a bit</font>

768
00:27:25,640 --> 00:27:28,880
<font color="#CCCCCC">distracted here</font><font color="#E5E5E5"> suddenly we have an</font>

769
00:27:26,930 --> 00:27:31,520
emulator<font color="#E5E5E5"> it's a week of work why would</font>

770
00:27:28,880 --> 00:27:33,230
you did<font color="#E5E5E5"> this well obviously it lets us</font>

771
00:27:31,520 --> 00:27:34,220
debug things that she's single<font color="#E5E5E5"> step</font>

772
00:27:33,230 --> 00:27:36,290
through the code<font color="#E5E5E5"> which gives you a</font>

773
00:27:34,220 --> 00:27:39,410
reasonable idea<font color="#CCCCCC"> of what's going</font><font color="#E5E5E5"> on set</font>

774
00:27:36,290 --> 00:27:42,860
breakpoints<font color="#CCCCCC"> it also allows you to</font><font color="#E5E5E5"> hook</font>

775
00:27:39,410 --> 00:27:45,410
up a wheel can<font color="#E5E5E5"> network</font><font color="#CCCCCC"> you can hook this</font>

776
00:27:42,860 --> 00:27:47,030
emulator<font color="#CCCCCC"> up to socket can on</font><font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> that</font>

777
00:27:45,410 --> 00:27:48,860
means you can<font color="#E5E5E5"> use standard camp</font>

778
00:27:47,030 --> 00:27:50,990
penetration testing tools but<font color="#E5E5E5"> also you</font>

779
00:27:48,860 --> 00:27:52,760
can<font color="#E5E5E5"> hook it up to your actual car which</font>

780
00:27:50,990 --> 00:27:54,500
<font color="#E5E5E5">you took your instrument cluster form or</font>

781
00:27:52,760 --> 00:27:57,760
simply<font color="#CCCCCC"> other issues from the car</font><font color="#E5E5E5"> and</font>

782
00:27:54,500 --> 00:28:01,460
<font color="#E5E5E5">that lets you have a much relatively</font>

783
00:27:57,760 --> 00:28:03,200
<font color="#E5E5E5">real environment</font><font color="#CCCCCC"> and you don't have to</font>

784
00:28:01,460 --> 00:28:05,600
go kind<font color="#E5E5E5"> of trying to work out which can</font>

785
00:28:03,200 --> 00:28:07,880
messages you have<font color="#CCCCCC"> to play but it also</font>

786
00:28:05,600 --> 00:28:09,649
means<font color="#CCCCCC"> that you can play some neat</font>

787
00:28:07,880 --> 00:28:10,880
dynamic analysis tricks<font color="#E5E5E5"> these are</font>

788
00:28:09,650 --> 00:28:12,980
relatively standard but I'm going<font color="#E5E5E5"> to</font>

789
00:28:10,880 --> 00:28:15,080
quickly<font color="#E5E5E5"> go through the tricks that</font><font color="#CCCCCC"> we</font>

790
00:28:12,980 --> 00:28:16,610
found useful<font color="#E5E5E5"> here the first one of which</font>

791
00:28:15,080 --> 00:28:18,560
is<font color="#E5E5E5"> execution tracing so this is a</font>

792
00:28:16,610 --> 00:28:20,030
<font color="#CCCCCC">screenshot for Ida Pro</font><font color="#E5E5E5"> I've named things</font>

793
00:28:18,560 --> 00:28:22,730
nicely<font color="#E5E5E5"> here this is the function</font>

794
00:28:20,030 --> 00:28:24,980
responsible<font color="#E5E5E5"> for doing the checksums on</font>

795
00:28:22,730 --> 00:28:27,260
top of the content<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> EEPROM in this</font>

796
00:28:24,980 --> 00:28:28,520
device<font color="#E5E5E5"> but of course if you don't have</font>

797
00:28:27,260 --> 00:28:30,379
names for<font color="#CCCCCC"> this you just</font><font color="#E5E5E5"> have this huge</font>

798
00:28:28,520 --> 00:28:32,660
blob<font color="#E5E5E5"> of firmware how enough you meant to</font>

799
00:28:30,380 --> 00:28:34,670
go<font color="#CCCCCC"> no what's going on</font><font color="#E5E5E5"> well the first</font>

800
00:28:32,660 --> 00:28:37,610
track<font color="#E5E5E5"> first trick used to see which code</font>

801
00:28:34,670 --> 00:28:38,780
is<font color="#E5E5E5"> actually being executed</font><font color="#CCCCCC"> because I we</font>

802
00:28:37,610 --> 00:28:39,979
know from experience one of<font color="#CCCCCC"> my</font>

803
00:28:38,780 --> 00:28:41,840
colleagues tried just doing the

804
00:28:39,980 --> 00:28:43,520
<font color="#CCCCCC">traditional static</font><font color="#E5E5E5"> analysis approach on</font>

805
00:28:41,840 --> 00:28:45,290
<font color="#E5E5E5">this firmware</font><font color="#CCCCCC"> it turns if you start at</font>

806
00:28:43,520 --> 00:28:46,610
the start and<font color="#CCCCCC"> just kind of look at the</font>

807
00:28:45,290 --> 00:28:48,889
functions that<font color="#E5E5E5"> looked likely to be</font>

808
00:28:46,610 --> 00:28:50,780
executed<font color="#E5E5E5"> you will find a UDS</font>

809
00:28:48,890 --> 00:28:52,520
implementation in there<font color="#E5E5E5"> somewhere but</font>

810
00:28:50,780 --> 00:28:53,899
<font color="#E5E5E5">it's the wrong UDS implementation</font>

811
00:28:52,520 --> 00:28:55,490
<font color="#E5E5E5">there's actually</font><font color="#CCCCCC"> two</font>

812
00:28:53,900 --> 00:28:56,930
<font color="#CCCCCC">yes implementations on this</font><font color="#E5E5E5"> thing and</font>

813
00:28:55,490 --> 00:28:58,670
only<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> them is used during</font><font color="#CCCCCC"> normal</font>

814
00:28:56,930 --> 00:29:00,530
one time<font color="#E5E5E5"> so you really want to know what</font>

815
00:28:58,670 --> 00:29:03,140
code<font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> being used but that's</font>

816
00:29:00,530 --> 00:29:05,210
fine<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can just have a bunch of</font>

817
00:29:03,140 --> 00:29:07,490
candidate instructions in your static

818
00:29:05,210 --> 00:29:09,410
analysis<font color="#E5E5E5"> tour like</font><font color="#CCCCCC"> Ida</font><font color="#E5E5E5"> which might get</font>

819
00:29:07,490 --> 00:29:11,180
executed<font color="#E5E5E5"> you run it in the emulator and</font>

820
00:29:09,410 --> 00:29:13,040
<font color="#E5E5E5">now you know which</font><font color="#CCCCCC"> instructure's did get</font>

821
00:29:11,180 --> 00:29:14,690
<font color="#E5E5E5">executed and then you can just add color</font>

822
00:29:13,040 --> 00:29:16,909
codings your static analysis<font color="#E5E5E5"> tour and</font>

823
00:29:14,690 --> 00:29:18,530
this makes things<font color="#E5E5E5"> much easier</font><font color="#CCCCCC"> but the</font>

824
00:29:16,910 --> 00:29:21,260
reason I picked the<font color="#E5E5E5"> EEPROM checksum</font>

825
00:29:18,530 --> 00:29:23,480
example here is what happens if we run

826
00:29:21,260 --> 00:29:25,400
<font color="#CCCCCC">the emulator</font><font color="#E5E5E5"> again but we</font><font color="#CCCCCC"> flip some bits</font>

827
00:29:23,480 --> 00:29:27,380
in the EEPROM<font color="#E5E5E5"> what happens well</font>

828
00:29:25,400 --> 00:29:30,260
certainly a different path<font color="#CCCCCC"> gex executed</font>

829
00:29:27,380 --> 00:29:31,910
and this is quite<font color="#CCCCCC"> a neat</font><font color="#E5E5E5"> trick that once</font>

830
00:29:30,260 --> 00:29:33,590
you have some kind of dynamic analysis

831
00:29:31,910 --> 00:29:35,780
<font color="#CCCCCC">touring it really</font><font color="#E5E5E5"> it lets you</font><font color="#CCCCCC"> see</font>

832
00:29:33,590 --> 00:29:38,780
<font color="#CCCCCC">oh-hoh we changed this input or we</font>

833
00:29:35,780 --> 00:29:40,790
changed this state<font color="#E5E5E5"> and suddenly this</font>

834
00:29:38,780 --> 00:29:42,230
code is executed<font color="#E5E5E5"> that must be your error</font>

835
00:29:40,790 --> 00:29:44,330
path or that<font color="#E5E5E5"> must be whatever's</font>

836
00:29:42,230 --> 00:29:46,700
responsible handling this code<font color="#E5E5E5"> there's</font>

837
00:29:44,330 --> 00:29:49,429
also something called taint analysis

838
00:29:46,700 --> 00:29:51,530
which we use very useful so the idea is

839
00:29:49,430 --> 00:29:53,990
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have some</font><font color="#E5E5E5"> kind of input to your</font>

840
00:29:51,530 --> 00:29:56,030
program<font color="#E5E5E5"> in this case we're going to pick</font>

841
00:29:53,990 --> 00:29:58,940
a<font color="#E5E5E5"> canned message which</font><font color="#CCCCCC"> you see why in a</font>

842
00:29:56,030 --> 00:30:00,649
moment<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> is that you would</font>

843
00:29:58,940 --> 00:30:04,400
pertain to this canned message you give

844
00:30:00,650 --> 00:30:06,920
it some kind<font color="#E5E5E5"> of color and then when the</font>

845
00:30:04,400 --> 00:30:08,810
firmware<font color="#CCCCCC"> reads from</font><font color="#E5E5E5"> this purple with</font>

846
00:30:06,920 --> 00:30:10,400
this canned message<font color="#CCCCCC"> and write</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to</font>

847
00:30:08,810 --> 00:30:12,409
memory<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> on the left side of the</font>

848
00:30:10,400 --> 00:30:14,840
<font color="#E5E5E5">screen here then you propagate the taint</font>

849
00:30:12,410 --> 00:30:16,370
<font color="#CCCCCC">so you also kind of keep track of this</font>

850
00:30:14,840 --> 00:30:19,340
<font color="#E5E5E5">and you can do that because you have an</font>

851
00:30:16,370 --> 00:30:21,560
emulator<font color="#E5E5E5"> it also</font><font color="#CCCCCC"> tours like</font><font color="#E5E5E5"> Avatar</font><font color="#CCCCCC"> to</font>

852
00:30:19,340 --> 00:30:23,540
which do this<font color="#E5E5E5"> for more standard</font>

853
00:30:21,560 --> 00:30:24,919
architectures<font color="#CCCCCC"> and again you can</font>

854
00:30:23,540 --> 00:30:26,330
propagate this chain so<font color="#CCCCCC"> if you copy from</font>

855
00:30:24,920 --> 00:30:28,790
<font color="#CCCCCC">one location in memory</font><font color="#E5E5E5"> to another</font><font color="#CCCCCC"> war</font>

856
00:30:26,330 --> 00:30:30,980
between registers<font color="#E5E5E5"> then you</font><font color="#CCCCCC"> also</font>

857
00:30:28,790 --> 00:30:32,840
propagate the<font color="#CCCCCC"> taint and</font><font color="#E5E5E5"> eventually when</font>

858
00:30:30,980 --> 00:30:35,180
you do<font color="#E5E5E5"> something with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> effects control</font>

859
00:30:32,840 --> 00:30:37,070
flow with<font color="#CCCCCC"> this data then you can say I</font>

860
00:30:35,180 --> 00:30:39,500
have this comparison depends on the

861
00:30:37,070 --> 00:30:40,520
<font color="#CCCCCC">input</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so why is</font><font color="#E5E5E5"> this useful word</font>

862
00:30:39,500 --> 00:30:42,140
let's go all<font color="#E5E5E5"> the way back to this</font>

863
00:30:40,520 --> 00:30:46,220
annoying security<font color="#CCCCCC"> access check</font><font color="#E5E5E5"> that</font>

864
00:30:42,140 --> 00:30:48,020
flummoxed us a bit earlier we have this

865
00:30:46,220 --> 00:30:50,270
response so<font color="#CCCCCC"> it's a challenge response</font>

866
00:30:48,020 --> 00:30:52,490
<font color="#E5E5E5">mechanism so we send some random</font>

867
00:30:50,270 --> 00:30:54,230
response to the<font color="#E5E5E5"> emulator in response to</font>

868
00:30:52,490 --> 00:30:57,260
the security access<font color="#E5E5E5"> check and we</font>

869
00:30:54,230 --> 00:30:58,850
<font color="#CCCCCC">propagate this taint</font><font color="#E5E5E5"> and then at some</font>

870
00:30:57,260 --> 00:31:00,530
<font color="#CCCCCC">point the emulative is going to</font><font color="#E5E5E5"> execute</font>

871
00:30:58,850 --> 00:31:03,379
the comparison which<font color="#E5E5E5"> checks is this the</font>

872
00:31:00,530 --> 00:31:05,060
<font color="#CCCCCC">correct response</font><font color="#E5E5E5"> and then a hat so what</font>

873
00:31:03,380 --> 00:31:06,740
we've actually<font color="#CCCCCC"> done is we found</font><font color="#E5E5E5"> where</font>

874
00:31:05,060 --> 00:31:07,309
<font color="#E5E5E5">this comparison is which means we found</font>

875
00:31:06,740 --> 00:31:09,080
<font color="#CCCCCC">a KO</font>

876
00:31:07,309 --> 00:31:10,610
<font color="#E5E5E5">this responsible for this and it turns</font>

877
00:31:09,080 --> 00:31:11,960
out you could<font color="#CCCCCC"> just repeat</font><font color="#E5E5E5"> this once you</font>

878
00:31:10,610 --> 00:31:13,729
have an emulator working you can take a

879
00:31:11,960 --> 00:31:15,440
bunch<font color="#E5E5E5"> of different firmware and you can</font>

880
00:31:13,730 --> 00:31:17,509
simply<font color="#CCCCCC"> find</font><font color="#E5E5E5"> these comparisons and find</font>

881
00:31:15,440 --> 00:31:19,070
where is<font color="#CCCCCC"> this security</font><font color="#E5E5E5"> access function</font>

882
00:31:17,509 --> 00:31:22,730
<font color="#E5E5E5">and certainly you can calculate your own</font>

883
00:31:19,070 --> 00:31:27,320
<font color="#E5E5E5">responses I'm going to show you a quick</font>

884
00:31:22,730 --> 00:31:28,789
demo<font color="#CCCCCC"> of another way in which having an</font>

885
00:31:27,320 --> 00:31:29,418
emulator really helps you understand

886
00:31:28,789 --> 00:31:30,830
<font color="#E5E5E5">these</font><font color="#CCCCCC"> things</font>

887
00:31:29,419 --> 00:31:33,379
but first I'm<font color="#CCCCCC"> just</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> give you</font>

888
00:31:30,830 --> 00:31:35,449
kind of a very pretty incorrect

889
00:31:33,379 --> 00:31:37,668
viewpoint<font color="#E5E5E5"> over a high level of how this</font>

890
00:31:35,450 --> 00:31:40,220
automotive software works at least<font color="#E5E5E5"> on</font>

891
00:31:37,669 --> 00:31:41,419
this<font color="#E5E5E5"> instrument cluster so I kind of had</font>

892
00:31:40,220 --> 00:31:42,980
a<font color="#CCCCCC"> global tea you</font><font color="#E5E5E5"> have some kind of</font>

893
00:31:41,419 --> 00:31:45,769
<font color="#E5E5E5">software components</font><font color="#CCCCCC"> which we</font><font color="#E5E5E5"> don't care</font>

894
00:31:42,980 --> 00:31:47,179
about inside the<font color="#CCCCCC"> software component you</font>

895
00:31:45,769 --> 00:31:48,889
have<font color="#E5E5E5"> different tasks so the real-time</font>

896
00:31:47,179 --> 00:31:50,690
<font color="#CCCCCC">operating system is</font><font color="#E5E5E5"> going to be</font>

897
00:31:48,889 --> 00:31:52,158
scheduling these different tasks with

898
00:31:50,690 --> 00:31:55,730
different<font color="#CCCCCC"> priorities and so if you have</font>

899
00:31:52,159 --> 00:31:58,429
a higher<font color="#CCCCCC"> priority</font><font color="#E5E5E5"> task for</font><font color="#CCCCCC"> example on</font>

900
00:31:55,730 --> 00:32:00,559
the dashboard<font color="#E5E5E5"> some of your warning</font>

901
00:31:58,429 --> 00:32:03,440
lights are much more important than<font color="#CCCCCC"> say</font>

902
00:32:00,559 --> 00:32:05,869
something<font color="#E5E5E5"> repeating your car video names</font>

903
00:32:03,440 --> 00:32:07,129
and then inside<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> have these</font>

904
00:32:05,869 --> 00:32:08,899
things<font color="#E5E5E5"> called</font><font color="#CCCCCC"> runner boards which are</font>

905
00:32:07,129 --> 00:32:10,789
basically individual pieces<font color="#E5E5E5"> of code</font>

906
00:32:08,899 --> 00:32:12,799
responsible kind<font color="#E5E5E5"> of football</font><font color="#CCCCCC"> action and</font>

907
00:32:10,789 --> 00:32:14,389
you also have communication between them

908
00:32:12,799 --> 00:32:16,309
so<font color="#E5E5E5"> you have an</font><font color="#CCCCCC"> avro coming in on the</font>

909
00:32:14,389 --> 00:32:18,139
<font color="#E5E5E5">left</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> might be an incoming security</font>

910
00:32:16,309 --> 00:32:20,059
access message<font color="#E5E5E5"> the first one of all</font>

911
00:32:18,139 --> 00:32:21,889
might be possible for<font color="#E5E5E5"> handling</font><font color="#CCCCCC"> UDS and</font>

912
00:32:20,059 --> 00:32:24,200
then it might wake up<font color="#CCCCCC"> and offer belabor</font>

913
00:32:21,889 --> 00:32:28,129
that's responsible for<font color="#CCCCCC"> actually handling</font>

914
00:32:24,200 --> 00:32:32,659
<font color="#E5E5E5">the specific UDS message you responded</font>

915
00:32:28,129 --> 00:32:34,219
with so this is actually the emulator

916
00:32:32,659 --> 00:32:36,499
life in action and this<font color="#E5E5E5"> is a</font>

917
00:32:34,220 --> 00:32:38,720
visualization view that kind<font color="#E5E5E5"> of lets you</font>

918
00:32:36,499 --> 00:32:41,210
see on a timeline basis what's going on

919
00:32:38,720 --> 00:32:43,249
<font color="#E5E5E5">so the further to the right</font><font color="#CCCCCC"> you go as</font>

920
00:32:41,210 --> 00:32:45,110
<font color="#CCCCCC">increased time and</font><font color="#E5E5E5"> we're running this</font>

921
00:32:43,249 --> 00:32:47,840
into your<font color="#E5E5E5"> time so I'm going to filter</font>

922
00:32:45,110 --> 00:32:49,789
the events<font color="#E5E5E5"> of</font><font color="#CCCCCC"> it also everywhere</font><font color="#E5E5E5"> with a</font>

923
00:32:47,840 --> 00:32:52,549
different<font color="#E5E5E5"> event for example</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> top</font>

924
00:32:49,789 --> 00:32:54,830
here you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> can messages you have</font>

925
00:32:52,549 --> 00:32:56,509
<font color="#E5E5E5">intimate handlers and below here</font><font color="#CCCCCC"> you</font>

926
00:32:54,830 --> 00:32:58,129
actually have tasks and then you have

927
00:32:56,509 --> 00:32:59,809
some individual<font color="#E5E5E5"> adabot so if I pause</font><font color="#CCCCCC"> the</font>

928
00:32:58,129 --> 00:33:02,240
simulation a moment and go back to the

929
00:32:59,809 --> 00:33:04,190
start of<font color="#E5E5E5"> the execution then you can see</font>

930
00:33:02,240 --> 00:33:05,899
that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> start of the execution we have</font>

931
00:33:04,190 --> 00:33:08,029
a timer starting up where the early<font color="#E5E5E5"> an</font>

932
00:33:05,899 --> 00:33:10,189
<font color="#CCCCCC">EPROM we have one task</font><font color="#E5E5E5"> which is very</font>

933
00:33:08,029 --> 00:33:12,080
suspiciously<font color="#E5E5E5"> firing basically when the</font>

934
00:33:10,190 --> 00:33:13,100
<font color="#E5E5E5">EEPROM interrupts are happening when</font>

935
00:33:12,080 --> 00:33:14,299
there's<font color="#E5E5E5"> something being read from the</font>

936
00:33:13,100 --> 00:33:15,889
EEPROM<font color="#E5E5E5"> and then you have these</font>

937
00:33:14,299 --> 00:33:17,720
vulnerables which are also<font color="#E5E5E5"> happening at</font>

938
00:33:15,889 --> 00:33:20,059
the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> time and we can</font><font color="#E5E5E5"> look at this</font>

939
00:33:17,720 --> 00:33:21,179
and<font color="#E5E5E5"> actually say</font><font color="#CCCCCC"> AHA these are</font>

940
00:33:20,059 --> 00:33:22,559
responsible<font color="#CCCCCC"> for doing</font><font color="#E5E5E5"> this</font>

941
00:33:21,179 --> 00:33:24,749
of course<font color="#E5E5E5"> you need to know where the</font>

942
00:33:22,559 --> 00:33:26,639
tasks and<font color="#CCCCCC"> wonder balls are but you can</font>

943
00:33:24,749 --> 00:33:28,830
<font color="#E5E5E5">find those surprisingly easy once you</font>

944
00:33:26,639 --> 00:33:31,139
know<font color="#E5E5E5"> what you're</font><font color="#CCCCCC"> looking for so give you</font>

945
00:33:28,830 --> 00:33:35,519
another<font color="#CCCCCC"> example we</font><font color="#E5E5E5"> discussed</font><font color="#CCCCCC"> earlier</font>

946
00:33:31,139 --> 00:33:38,459
about<font color="#E5E5E5"> the this jitter that we saw when</font>

947
00:33:35,519 --> 00:33:40,830
sending a security access message<font color="#E5E5E5"> and if</font>

948
00:33:38,460 --> 00:33:42,450
we do the same<font color="#E5E5E5"> in the emulator so this</font>

949
00:33:40,830 --> 00:33:45,509
line here<font color="#CCCCCC"> if that represents incoming</font>

950
00:33:42,450 --> 00:33:47,460
<font color="#CCCCCC">count messages and this line here</font><font color="#E5E5E5"> at the</font>

951
00:33:45,509 --> 00:33:49,289
top that's the outgoing<font color="#CCCCCC"> kam</font><font color="#E5E5E5"> message</font>

952
00:33:47,460 --> 00:33:51,450
which responds to the read memory<font color="#E5E5E5"> by</font>

953
00:33:49,289 --> 00:33:54,539
address which was giving us all this

954
00:33:51,450 --> 00:33:56,309
jitter<font color="#E5E5E5"> so if I hold down</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> key on my</font>

955
00:33:54,539 --> 00:33:58,200
keyboard this kind<font color="#E5E5E5"> of repeatedly sends</font>

956
00:33:56,309 --> 00:33:59,969
these messages you see you're actually

957
00:33:58,200 --> 00:34:02,070
seeing a lot of jitter there and the

958
00:33:59,969 --> 00:34:04,950
<font color="#E5E5E5">reason why can be seen here so what's</font>

959
00:34:02,070 --> 00:34:07,019
happened here<font color="#E5E5E5"> is we've received a</font><font color="#CCCCCC"> canned</font>

960
00:34:04,950 --> 00:34:08,909
<font color="#E5E5E5">message but at the time there's a task</font>

961
00:34:07,019 --> 00:34:11,069
<font color="#E5E5E5">running and that task happens to be</font>

962
00:34:08,909 --> 00:34:13,379
higher priority<font color="#CCCCCC"> than task is responsible</font>

963
00:34:11,069 --> 00:34:15,629
for<font color="#E5E5E5"> handling our UDS messages and that</font>

964
00:34:13,379 --> 00:34:17,909
means that<font color="#E5E5E5"> the response simply gets</font>

965
00:34:15,629 --> 00:34:19,379
delayed until that task is finished<font color="#CCCCCC"> on</font>

966
00:34:17,909 --> 00:34:21,450
the tasks and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> runner post</font>

967
00:34:19,379 --> 00:34:23,489
responsible for handling<font color="#E5E5E5"> the read memory</font>

968
00:34:21,449 --> 00:34:25,799
by address<font color="#E5E5E5"> a hand dot and this means</font>

969
00:34:23,489 --> 00:34:27,598
<font color="#E5E5E5">that it's basically entirely dependent</font>

970
00:34:25,799 --> 00:34:29,159
on<font color="#CCCCCC"> the internal</font><font color="#E5E5E5"> task state of this thing</font>

971
00:34:27,599 --> 00:34:30,960
what's<font color="#E5E5E5"> happening which interrupts are</font>

972
00:34:29,159 --> 00:34:33,029
burning exactly when the response is

973
00:34:30,960 --> 00:34:35,039
sent and<font color="#E5E5E5"> that means the jitter is</font><font color="#CCCCCC"> maybe</font>

974
00:34:33,029 --> 00:34:37,500
<font color="#E5E5E5">inevitable</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can do a few cool</font>

975
00:34:35,039 --> 00:34:38,789
things<font color="#E5E5E5"> with</font><font color="#CCCCCC"> this so I'm going</font><font color="#E5E5E5"> to bring</font>

976
00:34:37,500 --> 00:34:43,379
up<font color="#E5E5E5"> the dashboard</font><font color="#CCCCCC"> here we're going</font><font color="#E5E5E5"> to</font>

977
00:34:38,789 --> 00:34:44,879
<font color="#CCCCCC">leave it running and you</font><font color="#E5E5E5"> can see there's</font>

978
00:34:43,379 --> 00:34:47,098
no left indicator light showing on the

979
00:34:44,879 --> 00:34:50,219
dashboard<font color="#E5E5E5"> here what I can do is I can</font>

980
00:34:47,099 --> 00:34:52,889
switch<font color="#CCCCCC"> to a lender terminal and use a</font>

981
00:34:50,219 --> 00:34:54,270
standard socket hand tool<font color="#E5E5E5"> to send a</font>

982
00:34:52,889 --> 00:34:56,609
<font color="#E5E5E5">message here which should turn on the</font>

983
00:34:54,270 --> 00:34:57,930
Left indicator<font color="#E5E5E5"> and if I do that then the</font>

984
00:34:56,609 --> 00:35:00,990
lifter indicator does turn on

985
00:34:57,930 --> 00:35:02,819
it's a<font color="#E5E5E5"> city example but this is fun to</font>

986
00:35:00,990 --> 00:35:04,379
<font color="#CCCCCC">set up we</font><font color="#E5E5E5"> don't actually do</font><font color="#CCCCCC"> this in</font>

987
00:35:02,819 --> 00:35:06,210
practice setting up fake dashboards to

988
00:35:04,380 --> 00:35:07,619
kind<font color="#E5E5E5"> of know what's going on but I</font><font color="#CCCCCC"> gives</font>

989
00:35:06,210 --> 00:35:12,900
<font color="#CCCCCC">you an</font><font color="#E5E5E5"> idea you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> really use standard</font>

990
00:35:07,619 --> 00:35:15,089
<font color="#CCCCCC">ice</font><font color="#E5E5E5"> touring here so just to kind of wrap</font>

991
00:35:12,900 --> 00:35:16,980
up what we've<font color="#E5E5E5"> seen so far</font><font color="#CCCCCC"> we shown your</font>

992
00:35:15,089 --> 00:35:18,750
hardware<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to portray you it's</font>

993
00:35:16,980 --> 00:35:22,079
<font color="#E5E5E5">basically the</font><font color="#CCCCCC"> message here</font><font color="#E5E5E5"> fault</font>

994
00:35:18,750 --> 00:35:24,089
injection<font color="#CCCCCC"> lets attackers</font><font color="#E5E5E5"> really pull the</font>

995
00:35:22,079 --> 00:35:25,770
ground out<font color="#CCCCCC"> from under</font><font color="#E5E5E5"> your software</font><font color="#CCCCCC"> so</font>

996
00:35:24,089 --> 00:35:27,058
the<font color="#CCCCCC"> eminating a dashboards not too</font>

997
00:35:25,770 --> 00:35:29,430
tricky it's something you can actually

998
00:35:27,059 --> 00:35:31,619
do it works<font color="#E5E5E5"> for many</font><font color="#CCCCCC"> issues</font><font color="#E5E5E5"> and many</font>

999
00:35:29,430 --> 00:35:33,390
<font color="#E5E5E5">embedded systems and</font><font color="#CCCCCC"> we know the false</font>

1000
00:35:31,619 --> 00:35:35,070
rejection<font color="#E5E5E5"> attacks on</font><font color="#CCCCCC"> UTS there such as</font>

1001
00:35:33,390 --> 00:35:37,259
one we<font color="#CCCCCC"> described they're pretty</font><font color="#E5E5E5"> core</font>

1002
00:35:35,070 --> 00:35:38,700
but the thing is if<font color="#E5E5E5"> you have an</font><font color="#CCCCCC"> ECU if</font>

1003
00:35:37,260 --> 00:35:40,980
you need to get the firmware<font color="#E5E5E5"> out of an</font>

1004
00:35:38,700 --> 00:35:42,480
issue and a better system<font color="#E5E5E5"> how many</font><font color="#CCCCCC"> of</font>

1005
00:35:40,980 --> 00:35:44,340
you are<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to look back to this black</font>

1006
00:35:42,480 --> 00:35:46,410
<font color="#E5E5E5">hat talk and go I know I learned</font><font color="#CCCCCC"> about</font>

1007
00:35:44,340 --> 00:35:48,930
this<font color="#E5E5E5"> really cool attack</font><font color="#CCCCCC"> I can replicate</font>

1008
00:35:46,410 --> 00:35:51,540
that that sounds efficient and easy just

1009
00:35:48,930 --> 00:35:54,480
any hands I'm<font color="#E5E5E5"> not seeing a lot of</font>

1010
00:35:51,540 --> 00:35:56,430
support<font color="#CCCCCC"> here and it's not</font><font color="#E5E5E5"> an efficient</font>

1011
00:35:54,480 --> 00:35:58,350
attack it's<font color="#CCCCCC"> crazily overcomplicated I</font>

1012
00:35:56,430 --> 00:35:59,879
mean it's nice it works<font color="#CCCCCC"> it was really</font>

1013
00:35:58,350 --> 00:36:01,410
neat work<font color="#E5E5E5"> but it turns out</font><font color="#CCCCCC"> actually</font>

1014
00:35:59,880 --> 00:36:03,630
there were much easier<font color="#CCCCCC"> ways to get</font>

1015
00:36:01,410 --> 00:36:04,950
firmware<font color="#E5E5E5"> out of these things so if we go</font>

1016
00:36:03,630 --> 00:36:07,440
back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our high-level view</font>

1017
00:36:04,950 --> 00:36:08,970
<font color="#E5E5E5">let's go back to our assumptions one of</font>

1018
00:36:07,440 --> 00:36:11,790
the things we kind<font color="#E5E5E5"> of dismissed</font><font color="#CCCCCC"> at the</font>

1019
00:36:08,970 --> 00:36:12,990
start<font color="#E5E5E5"> was this debug port because maybe</font>

1020
00:36:11,790 --> 00:36:14,820
it's locked down maybe there's a

1021
00:36:12,990 --> 00:36:16,319
password<font color="#CCCCCC"> but there is</font><font color="#E5E5E5"> almost certainly</font>

1022
00:36:14,820 --> 00:36:18,150
<font color="#E5E5E5">going to be some kind of debugging space</font>

1023
00:36:16,320 --> 00:36:19,920
on this thing and the bad news<font color="#E5E5E5"> is</font>

1024
00:36:18,150 --> 00:36:21,930
<font color="#E5E5E5">generally this debug interface</font>

1025
00:36:19,920 --> 00:36:24,180
protection is implemented in software<font color="#E5E5E5"> in</font>

1026
00:36:21,930 --> 00:36:25,379
some kind of<font color="#CCCCCC"> butuan and</font><font color="#E5E5E5"> I hope you've</font>

1027
00:36:24,180 --> 00:36:27,509
<font color="#CCCCCC">learnt your hardware's going</font><font color="#E5E5E5"> to betray</font>

1028
00:36:25,380 --> 00:36:29,130
<font color="#E5E5E5">you if you have software we</font><font color="#CCCCCC"> can change</font>

1029
00:36:27,510 --> 00:36:31,170
the software<font color="#E5E5E5"> from underneath you we</font>

1030
00:36:29,130 --> 00:36:33,390
install the<font color="#CCCCCC"> ditch here - oh the glitch</font>

1031
00:36:31,170 --> 00:36:35,520
here<font color="#E5E5E5"> and the debug port will open and</font>

1032
00:36:33,390 --> 00:36:38,129
what's amazing about this is you only

1033
00:36:35,520 --> 00:36:40,110
have<font color="#CCCCCC"> to be successful once</font><font color="#E5E5E5"> for this to</font>

1034
00:36:38,130 --> 00:36:41,670
work you<font color="#CCCCCC"> just open this debugging</font><font color="#E5E5E5"> space</font>

1035
00:36:40,110 --> 00:36:43,530
once and you<font color="#E5E5E5"> can pull all of the</font>

1036
00:36:41,670 --> 00:36:46,140
firmware out<font color="#E5E5E5"> and this trick also works</font>

1037
00:36:43,530 --> 00:36:48,330
on pretty<font color="#E5E5E5"> much</font><font color="#CCCCCC"> for many of the ECU's</font>

1038
00:36:46,140 --> 00:36:50,069
that we've looked<font color="#E5E5E5"> at what else can we do</font>

1039
00:36:48,330 --> 00:36:52,799
here well we saw all these<font color="#CCCCCC"> cables and</font>

1040
00:36:50,070 --> 00:36:54,450
<font color="#CCCCCC">stuff this</font><font color="#E5E5E5"> is very fiddly but how about</font>

1041
00:36:52,800 --> 00:36:56,970
instead<font color="#CCCCCC"> of heading attacking the voltage</font>

1042
00:36:54,450 --> 00:37:00,390
we just head straight<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> MCU so</font>

1043
00:36:56,970 --> 00:37:02,220
this is an electromagnetic<font color="#E5E5E5"> force</font>

1044
00:37:00,390 --> 00:37:04,589
injection probe so this sense<font color="#E5E5E5"> basically</font>

1045
00:37:02,220 --> 00:37:06,209
electromagnetic pulses<font color="#E5E5E5"> for the distance</font>

1046
00:37:04,590 --> 00:37:08,250
you usually have it somewhat closer<font color="#E5E5E5"> to</font>

1047
00:37:06,210 --> 00:37:10,530
the chip for<font color="#E5E5E5"> it to work</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> basically it</font>

1048
00:37:08,250 --> 00:37:14,310
generates<font color="#E5E5E5"> thoughts using electromagnetic</font>

1049
00:37:10,530 --> 00:37:15,240
<font color="#E5E5E5">forces and again the Vark commercial</font>

1050
00:37:14,310 --> 00:37:16,890
tools available for<font color="#E5E5E5"> this</font>

1051
00:37:15,240 --> 00:37:18,629
there's<font color="#E5E5E5"> chip</font><font color="#CCCCCC"> shouter which i</font><font color="#E5E5E5"> hear will</font>

1052
00:37:16,890 --> 00:37:20,549
be<font color="#E5E5E5"> available any day now or looking</font>

1053
00:37:18,630 --> 00:37:22,380
forward to it<font color="#E5E5E5"> there's also commercial</font>

1054
00:37:20,550 --> 00:37:24,150
risk your tools<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> open source</font>

1055
00:37:22,380 --> 00:37:26,820
tools for those<font color="#E5E5E5"> of you who are even</font>

1056
00:37:24,150 --> 00:37:28,980
<font color="#CCCCCC">crazier</font><font color="#E5E5E5"> and again these tools</font><font color="#CCCCCC"> they're</font>

1057
00:37:26,820 --> 00:37:30,000
really available<font color="#CCCCCC"> to the masses so this</font>

1058
00:37:28,980 --> 00:37:31,290
is something<font color="#CCCCCC"> that people are actually</font>

1059
00:37:30,000 --> 00:37:33,900
<font color="#E5E5E5">doing and it's</font><font color="#CCCCCC"> something you can</font>

1060
00:37:31,290 --> 00:37:35,370
actually<font color="#E5E5E5"> do it may be more expensive to</font>

1061
00:37:33,900 --> 00:37:36,810
<font color="#CCCCCC">get started on but it</font><font color="#E5E5E5"> does mean you</font>

1062
00:37:35,370 --> 00:37:40,200
<font color="#E5E5E5">don't have to worry about all these</font>

1063
00:37:36,810 --> 00:37:42,270
<font color="#CCCCCC">cables so just a kind</font><font color="#E5E5E5"> of hammer at this</font>

1064
00:37:40,200 --> 00:37:44,730
point home a bit<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> universal we're</font>

1065
00:37:42,270 --> 00:37:47,310
not picking on what device<font color="#E5E5E5"> or one ECU it</font>

1066
00:37:44,730 --> 00:37:48,990
works on<font color="#E5E5E5"> pretty much everything all CPUs</font>

1067
00:37:47,310 --> 00:37:50,580
<font color="#CCCCCC">all microcontrollers</font>

1068
00:37:48,990 --> 00:37:52,140
<font color="#CCCCCC">and it works on all software so it works</font>

1069
00:37:50,580 --> 00:37:54,360
<font color="#E5E5E5">on this issue from where whether you can</font>

1070
00:37:52,140 --> 00:37:56,549
also play these games on that and<font color="#CCCCCC"> Meeker</font>

1071
00:37:54,360 --> 00:37:58,820
<font color="#E5E5E5">and other colleagues previously</font>

1072
00:37:56,550 --> 00:38:01,619
presented work on how to do<font color="#E5E5E5"> this</font>

1073
00:37:58,820 --> 00:38:03,240
question is what can<font color="#E5E5E5"> we do about this so</font>

1074
00:38:01,619 --> 00:38:06,300
if you have an ECU<font color="#E5E5E5"> or you have an</font>

1075
00:38:03,240 --> 00:38:07,680
embedded<font color="#CCCCCC"> device and you want to defend</font>

1076
00:38:06,300 --> 00:38:09,030
against attackers<font color="#E5E5E5"> who we're going to be</font>

1077
00:38:07,680 --> 00:38:10,500
using<font color="#E5E5E5"> its fault injection techniques</font>

1078
00:38:09,030 --> 00:38:11,820
what can you do

1079
00:38:10,500 --> 00:38:14,160
so we're going<font color="#E5E5E5"> to go over kind of three</font>

1080
00:38:11,820 --> 00:38:15,360
broad categories here the first one is

1081
00:38:14,160 --> 00:38:17,430
you<font color="#E5E5E5"> could do something</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

1082
00:38:15,360 --> 00:38:19,470
<font color="#E5E5E5">hardware so that's I think a lot</font><font color="#CCCCCC"> of</font>

1083
00:38:17,430 --> 00:38:21,810
people's<font color="#CCCCCC"> natural response</font><font color="#E5E5E5"> the hardware's</font>

1084
00:38:19,470 --> 00:38:23,009
betraying you but why<font color="#E5E5E5"> on earth is it</font>

1085
00:38:21,810 --> 00:38:27,210
doing that<font color="#E5E5E5"> can't we do</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> about</font>

1086
00:38:23,010 --> 00:38:29,070
this so one thing<font color="#E5E5E5"> you can do is try</font><font color="#CCCCCC"> and</font>

1087
00:38:27,210 --> 00:38:31,470
preserve the integrity of your system

1088
00:38:29,070 --> 00:38:34,410
try and stop it<font color="#CCCCCC"> from portraying you here</font>

1089
00:38:31,470 --> 00:38:36,629
so you can<font color="#E5E5E5"> try and add some kind of</font>

1090
00:38:34,410 --> 00:38:38,310
party checks to memory<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> also</font>

1091
00:38:36,630 --> 00:38:40,680
help defend against<font color="#CCCCCC"> row hammer and these</font>

1092
00:38:38,310 --> 00:38:42,150
kind of<font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> or you can use some</font><font color="#CCCCCC"> kind</font>

1093
00:38:40,680 --> 00:38:44,069
of mechanism such<font color="#CCCCCC"> as running</font><font color="#E5E5E5"> the same</font>

1094
00:38:42,150 --> 00:38:45,720
code<font color="#E5E5E5"> or</font><font color="#CCCCCC"> two processors to make sure your</font>

1095
00:38:44,070 --> 00:38:48,210
code is being<font color="#E5E5E5"> executed and you're not</font>

1096
00:38:45,720 --> 00:38:49,890
mutating or skipping instructions at

1097
00:38:48,210 --> 00:38:51,180
least in the automotive<font color="#CCCCCC"> industry the bad</font>

1098
00:38:49,890 --> 00:38:54,150
news is that<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> generally</font>

1099
00:38:51,180 --> 00:38:56,040
implemented<font color="#E5E5E5"> for safety purposes</font><font color="#CCCCCC"> and two</font>

1100
00:38:54,150 --> 00:38:58,740
of<font color="#E5E5E5"> my other colleagues</font><font color="#CCCCCC"> knew some amiibo</font>

1101
00:38:56,040 --> 00:39:00,270
have previously done research on<font color="#E5E5E5"> how it</font>

1102
00:38:58,740 --> 00:39:02,520
turns out<font color="#E5E5E5"> these safety mechanisms don't</font>

1103
00:39:00,270 --> 00:39:04,230
actually<font color="#E5E5E5"> work</font><font color="#CCCCCC"> for security</font><font color="#E5E5E5"> security</font>

1104
00:39:02,520 --> 00:39:05,640
<font color="#CCCCCC">awareness hackers are deliberately doing</font>

1105
00:39:04,230 --> 00:39:09,450
fault rejection or a very different

1106
00:39:05,640 --> 00:39:11,609
<font color="#CCCCCC">thing and just</font><font color="#E5E5E5"> it's a kind of a remind</font>

1107
00:39:09,450 --> 00:39:13,549
you don't forget about<font color="#E5E5E5"> the debug</font>

1108
00:39:11,609 --> 00:39:16,259
interfaces they can be a real problem

1109
00:39:13,550 --> 00:39:17,550
<font color="#CCCCCC">they leave a real gap in</font><font color="#E5E5E5"> your defense</font>

1110
00:39:16,260 --> 00:39:20,910
model it<font color="#E5E5E5"> doesn't matter how much you</font>

1111
00:39:17,550 --> 00:39:22,830
<font color="#E5E5E5">secure your software if an attacker can</font>

1112
00:39:20,910 --> 00:39:25,020
just use the debug interface<font color="#E5E5E5"> and break</font>

1113
00:39:22,830 --> 00:39:26,700
all your security<font color="#E5E5E5"> what else can you do</font>

1114
00:39:25,020 --> 00:39:29,700
<font color="#E5E5E5">well we mentioned software on this</font>

1115
00:39:26,700 --> 00:39:31,140
device<font color="#E5E5E5"> so what can you do about</font><font color="#CCCCCC"> this</font>

1116
00:39:29,700 --> 00:39:33,450
there's an awful lot<font color="#CCCCCC"> of things</font><font color="#E5E5E5"> you can</font>

1117
00:39:31,140 --> 00:39:34,920
do here<font color="#CCCCCC"> there were papers</font><font color="#E5E5E5"> about this you</font>

1118
00:39:33,450 --> 00:39:37,379
can just<font color="#CCCCCC"> go</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> google this but</font><font color="#E5E5E5"> just to</font>

1119
00:39:34,920 --> 00:39:38,880
<font color="#E5E5E5">give</font><font color="#CCCCCC"> you kind of two broad ideas you</font>

1120
00:39:37,380 --> 00:39:41,640
know that things are<font color="#E5E5E5"> kind of going to go</font>

1121
00:39:38,880 --> 00:39:42,960
wrong so how about you add redundancy<font color="#CCCCCC"> so</font>

1122
00:39:41,640 --> 00:39:45,000
for<font color="#E5E5E5"> example if you're</font><font color="#CCCCCC"> going to check</font>

1123
00:39:42,960 --> 00:39:47,850
<font color="#E5E5E5">where</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> user is authenticated before</font>

1124
00:39:45,000 --> 00:39:49,500
UDS<font color="#E5E5E5"> read by read memory by address</font>

1125
00:39:47,850 --> 00:39:51,960
succeeds<font color="#E5E5E5"> how about you do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> check</font>

1126
00:39:49,500 --> 00:39:53,700
twice<font color="#E5E5E5"> so make sure that</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> be</font>

1127
00:39:51,960 --> 00:39:55,350
<font color="#CCCCCC">successful in the</font><font color="#E5E5E5"> automotive industry</font>

1128
00:39:53,700 --> 00:39:57,509
this<font color="#E5E5E5"> is something called software lock</font>

1129
00:39:55,350 --> 00:39:59,040
step<font color="#E5E5E5"> we're in a more software based</font>

1130
00:39:57,510 --> 00:40:01,050
manner for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to run</font>

1131
00:39:59,040 --> 00:40:02,160
a ball twice or<font color="#E5E5E5"> slightly</font><font color="#CCCCCC"> different</font>

1132
00:40:01,050 --> 00:40:03,180
versions of one<font color="#CCCCCC"> of those twice and</font>

1133
00:40:02,160 --> 00:40:07,230
compare the out

1134
00:40:03,180 --> 00:40:08,640
but these<font color="#E5E5E5"> are they might help but</font>

1135
00:40:07,230 --> 00:40:10,920
they're definitely<font color="#E5E5E5"> not silver bullets</font>

1136
00:40:08,640 --> 00:40:12,960
<font color="#E5E5E5">the other thing you can do</font><font color="#CCCCCC"> remember it's</font>

1137
00:40:10,920 --> 00:40:14,369
just<font color="#E5E5E5"> well you just assume there's going</font>

1138
00:40:12,960 --> 00:40:16,349
to be an attacker<font color="#CCCCCC"> they're going to</font>

1139
00:40:14,369 --> 00:40:19,680
default ejection you can make their life

1140
00:40:16,349 --> 00:40:21,299
harder so you can add random delays you

1141
00:40:19,680 --> 00:40:23,640
saw that jitter from earlier which

1142
00:40:21,299 --> 00:40:25,589
reduces our success rate<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> deliver</font>

1143
00:40:23,640 --> 00:40:27,299
with the<font color="#E5E5E5"> add random</font><font color="#CCCCCC"> delays everywhere</font><font color="#E5E5E5"> so</font>

1144
00:40:25,589 --> 00:40:30,058
that we can't synchronize to any trigger

1145
00:40:27,299 --> 00:40:31,950
at all then<font color="#E5E5E5"> that means that these kind</font>

1146
00:40:30,059 --> 00:40:33,630
<font color="#E5E5E5">of fortunate campaigns do take more time</font>

1147
00:40:31,950 --> 00:40:36,058
then you can<font color="#E5E5E5"> also do some kind of</font>

1148
00:40:33,630 --> 00:40:38,220
control flow integrity for example you

1149
00:40:36,059 --> 00:40:39,539
can have<font color="#E5E5E5"> a counter and make sure that</font>

1150
00:40:38,220 --> 00:40:41,189
the counter has<font color="#CCCCCC"> been incremented</font><font color="#E5E5E5"> the</font>

1151
00:40:39,539 --> 00:40:42,660
correct number of<font color="#E5E5E5"> times by each bit of</font>

1152
00:40:41,190 --> 00:40:44,490
<font color="#CCCCCC">the code but you</font><font color="#E5E5E5"> can read more</font><font color="#CCCCCC"> about</font>

1153
00:40:42,660 --> 00:40:45,899
this company<font color="#E5E5E5"> thing online</font><font color="#CCCCCC"> so we looked</font><font color="#E5E5E5"> a</font>

1154
00:40:44,490 --> 00:40:48,089
<font color="#E5E5E5">hardware we'd have</font><font color="#CCCCCC"> to software what else</font>

1155
00:40:45,900 --> 00:40:49,589
can you<font color="#E5E5E5"> do well you can actually improve</font>

1156
00:40:48,089 --> 00:40:52,049
your<font color="#E5E5E5"> design in the first place</font>

1157
00:40:49,589 --> 00:40:53,759
so<font color="#E5E5E5"> both of them here for this security</font>

1158
00:40:52,049 --> 00:40:56,279
<font color="#E5E5E5">access check we just pulled out the</font>

1159
00:40:53,759 --> 00:40:57,779
<font color="#E5E5E5">firmware</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of these</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> is and you</font>

1160
00:40:56,279 --> 00:41:00,180
just<font color="#CCCCCC"> look at the firmware</font><font color="#E5E5E5"> and the code</font>

1161
00:40:57,779 --> 00:41:04,019
is right there to<font color="#E5E5E5"> calculate these UDS</font>

1162
00:41:00,180 --> 00:41:07,049
responses<font color="#E5E5E5"> one thing you can do is</font>

1163
00:41:04,019 --> 00:41:08,038
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of putting the keys the secrets</font>

1164
00:41:07,049 --> 00:41:10,710
that<font color="#E5E5E5"> you need to calculate these</font>

1165
00:41:08,039 --> 00:41:12,480
responses in software instead<font color="#E5E5E5"> you put</font>

1166
00:41:10,710 --> 00:41:14,549
them in in your processor itself into

1167
00:41:12,480 --> 00:41:16,559
some kind of fuses<font color="#CCCCCC"> and then you use some</font>

1168
00:41:14,549 --> 00:41:18,829
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of hardened cryptographic engine</font>

1169
00:41:16,559 --> 00:41:23,190
available<font color="#CCCCCC"> in many many more</font><font color="#E5E5E5"> than</font>

1170
00:41:18,829 --> 00:41:24,930
automotive<font color="#CCCCCC"> ECU's and</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> we</font>

1171
00:41:23,190 --> 00:41:27,359
don't expose the keys the software so if

1172
00:41:24,930 --> 00:41:28,799
an attacker obtains the firmware<font color="#CCCCCC"> that</font>

1173
00:41:27,359 --> 00:41:31,078
still doesn't let them calculate the

1174
00:41:28,799 --> 00:41:33,329
responses themselves<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> a much</font>

1175
00:41:31,079 --> 00:41:35,609
better idea<font color="#E5E5E5"> is simply use asymmetric</font>

1176
00:41:33,329 --> 00:41:39,359
cryptography<font color="#CCCCCC"> if you only have a public</font>

1177
00:41:35,609 --> 00:41:41,339
key on your ECU then it's not<font color="#E5E5E5"> going to</font>

1178
00:41:39,359 --> 00:41:43,288
matter how many<font color="#E5E5E5"> nifty attacks an</font>

1179
00:41:41,339 --> 00:41:44,578
attacker can<font color="#E5E5E5"> pull on this they're still</font>

1180
00:41:43,289 --> 00:41:47,849
not<font color="#E5E5E5"> going to manage to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> the private</font>

1181
00:41:44,579 --> 00:41:52,559
key<font color="#E5E5E5"> for your data center and I managed</font>

1182
00:41:47,849 --> 00:41:54,269
to calculate these things itself but<font color="#E5E5E5"> of</font>

1183
00:41:52,559 --> 00:41:56,190
<font color="#E5E5E5">course what's most important is</font><font color="#CCCCCC"> combine</font>

1184
00:41:54,269 --> 00:41:59,669
all of<font color="#E5E5E5"> those techniques you should</font><font color="#CCCCCC"> use</font>

1185
00:41:56,190 --> 00:42:03,119
<font color="#CCCCCC">artist hardened microprocessor don't</font>

1186
00:41:59,670 --> 00:42:04,980
just use something<font color="#CCCCCC"> that you're hoping</font><font color="#E5E5E5"> is</font>

1187
00:42:03,119 --> 00:42:06,599
going to be<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> get something</font>

1188
00:42:04,980 --> 00:42:07,339
that<font color="#CCCCCC"> actually been</font><font color="#E5E5E5"> tested or tested</font>

1189
00:42:06,599 --> 00:42:09,720
<font color="#CCCCCC">yourself</font>

1190
00:42:07,339 --> 00:42:11,160
<font color="#E5E5E5">harden your software or</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> hard and</font>

1191
00:42:09,720 --> 00:42:14,490
the important parts of your software

1192
00:42:11,160 --> 00:42:16,589
<font color="#E5E5E5">trying to harden everything is just not</font>

1193
00:42:14,490 --> 00:42:19,290
really viable<font color="#CCCCCC"> at least at the moment</font>

1194
00:42:16,590 --> 00:42:23,100
and please<font color="#E5E5E5"> bear this in mind when you're</font>

1195
00:42:19,290 --> 00:42:24,180
<font color="#CCCCCC">making your design so the key takeaways</font>

1196
00:42:23,100 --> 00:42:26,100
I hope you're taking<font color="#E5E5E5"> away from this</font>

1197
00:42:24,180 --> 00:42:28,680
report<font color="#E5E5E5"> is of course your hardware is</font>

1198
00:42:26,100 --> 00:42:29,640
going<font color="#E5E5E5"> to betray you and that it doesn't</font>

1199
00:42:28,680 --> 00:42:31,020
matter<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you fix</font><font color="#E5E5E5"> all the</font>

1200
00:42:29,640 --> 00:42:33,390
<font color="#CCCCCC">vulnerabilities in your</font><font color="#E5E5E5"> software which</font>

1201
00:42:31,020 --> 00:42:36,000
you won't<font color="#E5E5E5"> that still doesn't mean that</font>

1202
00:42:33,390 --> 00:42:38,850
your device is<font color="#E5E5E5"> going to be secure</font><font color="#CCCCCC"> I hope</font>

1203
00:42:36,000 --> 00:42:41,010
you take away that it's not that part<font color="#E5E5E5"> is</font>

1204
00:42:38,850 --> 00:42:42,750
she<font color="#CCCCCC"> fort</font><font color="#E5E5E5"> I promise you it's not as hard</font>

1205
00:42:41,010 --> 00:42:45,270
as before<font color="#E5E5E5"> to avoid these kind of fun</font>

1206
00:42:42,750 --> 00:42:47,430
every<font color="#E5E5E5"> laters you do have to get some</font>

1207
00:42:45,270 --> 00:42:50,009
experience<font color="#CCCCCC"> in this but if nothing else</font>

1208
00:42:47,430 --> 00:42:51,720
go and<font color="#E5E5E5"> write one for</font><font color="#CCCCCC"> fun and of course</font>

1209
00:42:50,010 --> 00:42:54,420
your firmware<font color="#E5E5E5"> is going to be</font><font color="#CCCCCC"> extracted</font>

1210
00:42:51,720 --> 00:42:55,770
<font color="#E5E5E5">I'm emphasizing don't point your secrets</font>

1211
00:42:54,420 --> 00:42:59,190
in your firmware<font color="#CCCCCC"> but of course the</font>

1212
00:42:55,770 --> 00:43:02,490
<font color="#CCCCCC">reason for this is that an attackers</font>

1213
00:42:59,190 --> 00:43:04,470
will obtain your firmware wherever as we

1214
00:43:02,490 --> 00:43:09,120
said in the<font color="#E5E5E5"> start maybe for some upgrade</font>

1215
00:43:04,470 --> 00:43:10,770
process maybe by leaks of some kind or

1216
00:43:09,120 --> 00:43:13,830
any of the other mechanisms we talked

1217
00:43:10,770 --> 00:43:16,140
<font color="#CCCCCC">about so I'd like to</font><font color="#E5E5E5"> thank the</font>

1218
00:43:13,830 --> 00:43:18,900
colleagues who worked on this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is on</font>

1219
00:43:16,140 --> 00:43:20,100
the left<font color="#E5E5E5"> side Emily who were</font><font color="#CCCCCC"> served one</font>

1220
00:43:18,900 --> 00:43:22,530
of my<font color="#E5E5E5"> colleagues a brilliant reverse</font>

1221
00:43:20,100 --> 00:43:24,240
engineer who really did this trick<font color="#E5E5E5"> start</font>

1222
00:43:22,530 --> 00:43:26,460
<font color="#E5E5E5">doing static analysis tonic install</font><font color="#CCCCCC"> the</font>

1223
00:43:24,240 --> 00:43:28,649
firmware<font color="#E5E5E5"> just trying</font><font color="#CCCCCC"> to work</font><font color="#E5E5E5"> out what</font>

1224
00:43:26,460 --> 00:43:32,330
when it doesn't<font color="#CCCCCC"> work I mean I love</font>

1225
00:43:28,650 --> 00:43:34,440
static analysis<font color="#E5E5E5"> but it's a terrible idea</font>

1226
00:43:32,330 --> 00:43:37,140
<font color="#E5E5E5">for trying to analyze this kind of</font>

1227
00:43:34,440 --> 00:43:40,620
firmware<font color="#CCCCCC"> santi who you saw earlier who</font>

1228
00:43:37,140 --> 00:43:43,170
was<font color="#CCCCCC"> responsible for doing</font><font color="#E5E5E5"> some of the fi</font>

1229
00:43:40,620 --> 00:43:44,370
setups on this dashboard certainly mmm

1230
00:43:43,170 --> 00:43:46,890
oh and<font color="#E5E5E5"> the O's who did some</font><font color="#CCCCCC"> awful work</font>

1231
00:43:44,370 --> 00:43:50,910
<font color="#E5E5E5">you can find their papers linked from</font>

1232
00:43:46,890 --> 00:43:53,310
<font color="#E5E5E5">the slides or</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> whisky website so</font>

1233
00:43:50,910 --> 00:43:56,520
this work<font color="#CCCCCC"> was done at whisker</font><font color="#E5E5E5"> as Nick</font>

1234
00:43:53,310 --> 00:43:58,980
<font color="#CCCCCC">said Nick is a he's shy but he's a head</font>

1235
00:43:56,520 --> 00:44:01,200
of the automotive her team at whisker<font color="#E5E5E5"> so</font>

1236
00:43:58,980 --> 00:44:02,490
he knows all<font color="#CCCCCC"> about this don't</font><font color="#E5E5E5"> listen to</font>

1237
00:44:01,200 --> 00:44:05,189
him oh we realized there were so<font color="#CCCCCC"> many</font>

1238
00:44:02,490 --> 00:44:07,169
code UDS this is all<font color="#CCCCCC"> wise</font><font color="#E5E5E5"> and I thought</font>

1239
00:44:05,190 --> 00:44:09,750
<font color="#E5E5E5">the first of August</font><font color="#CCCCCC"> I'm a PhD student of</font>

1240
00:44:07,170 --> 00:44:12,210
<font color="#CCCCCC">ducek</font><font color="#E5E5E5"> so I leave her</font><font color="#CCCCCC"> whisk your</font><font color="#E5E5E5"> behind</font>

1241
00:44:09,750 --> 00:44:14,270
<font color="#E5E5E5">so thanks very much</font><font color="#CCCCCC"> and I hope you have</font>

1242
00:44:12,210 --> 00:44:16,330
questions

1243
00:44:14,270 --> 00:44:19,110
[Applause]

1244
00:44:16,330 --> 00:44:19,110
nice

1245
00:44:19,860 --> 00:44:24,559
[Applause]

1246
00:44:41,470 --> 00:44:45,009
it's for me hard to see if anybody has

1247
00:44:43,360 --> 00:44:49,200
questions but I don't<font color="#E5E5E5"> think I see</font>

1248
00:44:45,010 --> 00:44:51,960
<font color="#E5E5E5">anybody</font><font color="#CCCCCC"> hi Ron I</font><font color="#E5E5E5"> just had one</font><font color="#CCCCCC"> question</font>

1249
00:44:49,200 --> 00:44:54,899
<font color="#CCCCCC">some of the processors that I've been</font>

1250
00:44:51,960 --> 00:44:58,060
<font color="#E5E5E5">involved with have</font><font color="#CCCCCC"> Glick</font><font color="#E5E5E5"> glitch</font>

1251
00:44:54,900 --> 00:45:00,790
detection<font color="#E5E5E5"> at least it's supposed</font><font color="#CCCCCC"> to be a</font>

1252
00:44:58,060 --> 00:45:05,580
glitch<font color="#E5E5E5"> to ginger how effective or goes</font>

1253
00:45:00,790 --> 00:45:08,890
at<font color="#CCCCCC"> the fitti or Lachie power glitching</font>

1254
00:45:05,580 --> 00:45:10,720
<font color="#E5E5E5">yeah that's the question</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that there's</font>

1255
00:45:08,890 --> 00:45:12,220
chips out there that have specific

1256
00:45:10,720 --> 00:45:16,330
countermeasures in<font color="#E5E5E5"> there to prevent</font>

1257
00:45:12,220 --> 00:45:19,959
<font color="#E5E5E5">glitch attacks these things</font><font color="#CCCCCC"> are always a</font>

1258
00:45:16,330 --> 00:45:21,880
bit<font color="#CCCCCC"> difficult to answer</font><font color="#E5E5E5"> however if you</font>

1259
00:45:19,960 --> 00:45:24,580
look for<font color="#CCCCCC"> example at smart cards where</font>

1260
00:45:21,880 --> 00:45:26,380
glitchet<font color="#CCCCCC"> X</font><font color="#E5E5E5"> actually originated from</font>

1261
00:45:24,580 --> 00:45:27,850
<font color="#E5E5E5">these people</font><font color="#CCCCCC"> laughing</font><font color="#E5E5E5"> those were</font><font color="#CCCCCC"> the</font>

1262
00:45:26,380 --> 00:45:29,830
<font color="#E5E5E5">first targets where people started</font><font color="#CCCCCC"> doing</font>

1263
00:45:27,850 --> 00:45:33,370
fault injection<font color="#E5E5E5"> and those were also the</font>

1264
00:45:29,830 --> 00:45:35,980
first<font color="#CCCCCC"> targets where countermeasures were</font>

1265
00:45:33,370 --> 00:45:37,420
is being implemented<font color="#E5E5E5"> and in order to</font>

1266
00:45:35,980 --> 00:45:39,850
perform<font color="#E5E5E5"> a fault injection attack on</font>

1267
00:45:37,420 --> 00:45:45,040
search<font color="#CCCCCC"> target it's not as easy</font><font color="#E5E5E5"> as here</font>

1268
00:45:39,850 --> 00:45:46,960
and it's my<font color="#CCCCCC"> opinion but I'm quite</font>

1269
00:45:45,040 --> 00:45:48,670
<font color="#CCCCCC">content to</font><font color="#E5E5E5"> state that if you want to</font>

1270
00:45:46,960 --> 00:45:52,030
perform<font color="#E5E5E5"> a fault injection attack on such</font>

1271
00:45:48,670 --> 00:45:55,120
targets it will become<font color="#E5E5E5"> a specialized lab</font>

1272
00:45:52,030 --> 00:45:56,590
attack<font color="#CCCCCC"> if you'll not be using the</font>

1273
00:45:55,120 --> 00:45:58,240
tooling<font color="#CCCCCC"> that we have in front</font><font color="#E5E5E5"> of here</font>

1274
00:45:56,590 --> 00:45:59,740
<font color="#CCCCCC">you vote this</font><font color="#E5E5E5"> fault injection</font>

1275
00:45:58,240 --> 00:46:02,080
you really have<font color="#E5E5E5"> to resort to</font><font color="#CCCCCC"> a more</font>

1276
00:45:59,740 --> 00:46:03,939
sophisticated<font color="#E5E5E5"> form injection like</font>

1277
00:46:02,080 --> 00:46:06,069
shooting lasers<font color="#CCCCCC"> at the chip for example</font>

1278
00:46:03,940 --> 00:46:07,750
and opening the package<font color="#E5E5E5"> but obviously as</font>

1279
00:46:06,070 --> 00:46:09,340
always it really depends<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

1280
00:46:07,750 --> 00:46:11,320
effectiveness of<font color="#E5E5E5"> the countermeasure</font><font color="#CCCCCC"> and</font>

1281
00:46:09,340 --> 00:46:14,020
whatever I'm saying<font color="#E5E5E5"> is not guaranteed to</font>

1282
00:46:11,320 --> 00:46:15,670
<font color="#E5E5E5">be true for all targets but maybe it's</font>

1283
00:46:14,020 --> 00:46:17,620
also important to<font color="#E5E5E5"> say</font><font color="#CCCCCC"> that these are</font>

1284
00:46:15,670 --> 00:46:19,780
<font color="#E5E5E5">easy use they're in your car</font><font color="#CCCCCC"> they're</font>

1285
00:46:17,620 --> 00:46:21,640
often safety critical<font color="#E5E5E5"> and voltage</font>

1286
00:46:19,780 --> 00:46:23,980
fluctuations are a fact of life<font color="#E5E5E5"> and</font>

1287
00:46:21,640 --> 00:46:26,230
these kind of vehicles<font color="#CCCCCC"> you can't just</font>

1288
00:46:23,980 --> 00:46:29,140
start shutting down things<font color="#CCCCCC"> if you detect</font>

1289
00:46:26,230 --> 00:46:30,190
voltage glitching which is one of<font color="#CCCCCC"> the</font>

1290
00:46:29,140 --> 00:46:32,379
ways<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can implement these ditch</font>

1291
00:46:30,190 --> 00:46:35,320
detectors<font color="#E5E5E5"> so you need to actually</font>

1292
00:46:32,380 --> 00:46:37,240
<font color="#E5E5E5">survive these kind of glitches because</font>

1293
00:46:35,320 --> 00:46:39,220
they do happen<font color="#CCCCCC"> if you like and</font><font color="#E5E5E5"> you can't</font>

1294
00:46:37,240 --> 00:46:41,220
just stop your<font color="#CCCCCC"> car so safety</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a real</font>

1295
00:46:39,220 --> 00:46:49,660
problem for<font color="#E5E5E5"> ECU's in particular here</font>

1296
00:46:41,220 --> 00:46:52,959
thank you<font color="#E5E5E5"> I really enjoyed</font><font color="#CCCCCC"> your talk I</font>

1297
00:46:49,660 --> 00:46:55,109
know you're trying<font color="#E5E5E5"> to stay away from any</font>

1298
00:46:52,960 --> 00:46:59,009
specifics or anything like<font color="#E5E5E5"> that</font>

1299
00:46:55,109 --> 00:47:05,509
have you ever emulated a<font color="#CCCCCC"> microprocessor</font>

1300
00:46:59,009 --> 00:47:05,509
that<font color="#E5E5E5"> as a memory</font><font color="#CCCCCC"> management unit</font><font color="#E5E5E5"> sort of</font>

1301
00:47:05,959 --> 00:47:10,440
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> it it's a good question</font><font color="#CCCCCC"> because</font>

1302
00:47:08,519 --> 00:47:12,299
that's<font color="#E5E5E5"> not adding the complexity</font><font color="#CCCCCC"> I can</font>

1303
00:47:10,440 --> 00:47:14,339
say that<font color="#CCCCCC"> the week I coded</font><font color="#E5E5E5"> for this</font>

1304
00:47:12,299 --> 00:47:16,890
emulator does not import implementing

1305
00:47:14,339 --> 00:47:19,890
the memory management<font color="#CCCCCC"> in this thing I</font>

1306
00:47:16,890 --> 00:47:22,200
think<font color="#CCCCCC"> honestly for</font><font color="#E5E5E5"> me at</font><font color="#CCCCCC"> least I have</font>

1307
00:47:19,890 --> 00:47:25,078
implemented<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> mmm used</font>

1308
00:47:22,200 --> 00:47:26,640
before<font color="#CCCCCC"> emulators for them and it's</font>

1309
00:47:25,079 --> 00:47:27,930
frustrating<font color="#E5E5E5"> for me not so much because</font>

1310
00:47:26,640 --> 00:47:30,538
<font color="#E5E5E5">of the complexity of writing the thing</font>

1311
00:47:27,930 --> 00:47:32,009
but it makes<font color="#E5E5E5"> it slower</font><font color="#CCCCCC"> I mean at some</font>

1312
00:47:30,539 --> 00:47:34,140
<font color="#CCCCCC">point the speed of</font><font color="#E5E5E5"> these things really</font>

1313
00:47:32,009 --> 00:47:36,809
gets annoying but the good<font color="#CCCCCC"> news is the</font>

1314
00:47:34,140 --> 00:47:38,219
more<font color="#E5E5E5"> complicated your protesters get the</font>

1315
00:47:36,809 --> 00:47:40,529
more<font color="#E5E5E5"> likely it is it might be</font><font color="#CCCCCC"> running</font>

1316
00:47:38,219 --> 00:47:42,150
something like<font color="#CCCCCC"> the nips QNX vxworks</font><font color="#E5E5E5"> and</font>

1317
00:47:40,529 --> 00:47:45,660
that's a lot<font color="#CCCCCC"> easier to work with without</font>

1318
00:47:42,150 --> 00:47:48,599
<font color="#CCCCCC">having to resort</font><font color="#E5E5E5"> to this but so if you</font>

1319
00:47:45,660 --> 00:47:53,459
did if you<font color="#E5E5E5"> did have to do an MMU you</font>

1320
00:47:48,599 --> 00:47:55,559
probably are not<font color="#CCCCCC"> going if you do have to</font>

1321
00:47:53,459 --> 00:47:58,019
emulate<font color="#CCCCCC"> it MMU you're probably not going</font>

1322
00:47:55,559 --> 00:47:59,699
to approach it this way I don't<font color="#CCCCCC"> know I</font>

1323
00:47:58,019 --> 00:48:02,609
think I<font color="#CCCCCC"> would stead approach it this way</font>

1324
00:47:59,699 --> 00:48:04,890
but<font color="#CCCCCC"> it it makes it more painful</font><font color="#E5E5E5"> the more</font>

1325
00:48:02,609 --> 00:48:06,479
complicated<font color="#CCCCCC"> your processors get and I</font>

1326
00:48:04,890 --> 00:48:08,879
<font color="#CCCCCC">think that's maybe the way a lot of the</font>

1327
00:48:06,479 --> 00:48:11,098
automotive<font color="#E5E5E5"> market is going but again for</font>

1328
00:48:08,880 --> 00:48:12,599
<font color="#CCCCCC">ECU in</font><font color="#E5E5E5"> particular you want relatively</font>

1329
00:48:11,099 --> 00:48:15,180
simple processors if you didn't get away

1330
00:48:12,599 --> 00:48:20,430
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it thank you</font>

1331
00:48:15,180 --> 00:48:22,859
but thanks do you<font color="#E5E5E5"> release the code for</font>

1332
00:48:20,430 --> 00:48:25,769
<font color="#E5E5E5">your emulator</font><font color="#CCCCCC"> or you you're planning to</font>

1333
00:48:22,859 --> 00:48:27,479
it's a good question<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font>

1334
00:48:25,769 --> 00:48:29,069
definitely<font color="#E5E5E5"> not because we want to keep</font>

1335
00:48:27,479 --> 00:48:30,569
the processor anonymous and<font color="#E5E5E5"> I think</font>

1336
00:48:29,069 --> 00:48:33,209
doing<font color="#E5E5E5"> that for the emulator is not a</font>

1337
00:48:30,569 --> 00:48:38,038
good idea<font color="#CCCCCC"> I'm hoping to</font><font color="#E5E5E5"> at least extract</font>

1338
00:48:33,209 --> 00:48:40,529
useful things from this<font color="#E5E5E5"> and and actually</font>

1339
00:48:38,039 --> 00:48:42,569
<font color="#E5E5E5">get something</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> at least the</font>

1340
00:48:40,529 --> 00:48:45,449
visualization side but yeah<font color="#CCCCCC"> I wish I</font>

1341
00:48:42,569 --> 00:48:47,249
could so good<font color="#CCCCCC"> in that</font><font color="#E5E5E5"> case could</font><font color="#CCCCCC"> you</font>

1342
00:48:45,449 --> 00:48:49,319
elaborate a little bit<font color="#E5E5E5"> more</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> how you</font>

1343
00:48:47,249 --> 00:48:51,359
<font color="#E5E5E5">approached in writing the emulator so</font>

1344
00:48:49,319 --> 00:48:55,019
you<font color="#E5E5E5"> took presumably you started off with</font>

1345
00:48:51,359 --> 00:48:57,359
<font color="#E5E5E5">some existing emulators and use that as</font>

1346
00:48:55,019 --> 00:48:58,859
a pattern<font color="#E5E5E5"> or so no this is entirely from</font>

1347
00:48:57,359 --> 00:49:00,779
scratch<font color="#E5E5E5"> that's why I'm saying writing a</font>

1348
00:48:58,859 --> 00:49:03,359
gameboy emulator<font color="#E5E5E5"> the question is did I</font>

1349
00:49:00,779 --> 00:49:04,769
base<font color="#CCCCCC"> it on something</font><font color="#E5E5E5"> else this is</font><font color="#CCCCCC"> - a</font>

1350
00:49:03,359 --> 00:49:06,359
scratch but if you want to talk<font color="#E5E5E5"> more</font>

1351
00:49:04,769 --> 00:49:08,129
about this<font color="#E5E5E5"> I'd love to talk more</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

1352
00:49:06,359 --> 00:49:08,910
wrap-up room and we can also<font color="#E5E5E5"> show you</font>

1353
00:49:08,130 --> 00:49:12,810
the

1354
00:49:08,910 --> 00:49:14,160
Injection<font color="#CCCCCC"> set up yeah</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> interests of</font>

1355
00:49:12,810 --> 00:49:15,750
respecting everyone's time we're<font color="#E5E5E5"> going</font>

1356
00:49:14,160 --> 00:49:19,460
<font color="#E5E5E5">to move questions across the hall to</font><font color="#CCCCCC"> the</font>

1357
00:49:15,750 --> 00:49:19,460
<font color="#E5E5E5">rep room thank you</font>

