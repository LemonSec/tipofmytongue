1
00:00:00,030 --> 00:00:03,449
thank you everybody for being here<font color="#CCCCCC"> we've</font>

2
00:00:01,650 --> 00:00:05,759
got a lot<font color="#CCCCCC"> of slides to</font><font color="#E5E5E5"> go through</font><font color="#CCCCCC"> so I'm</font>

3
00:00:03,449 --> 00:00:11,389
just gonna<font color="#E5E5E5"> dive right in and we're gonna</font>

4
00:00:05,759 --> 00:00:11,389
<font color="#E5E5E5">start by looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the TLS handshake</font><font color="#CCCCCC"> so</font>

5
00:00:11,420 --> 00:00:15,750
the purpose<font color="#E5E5E5"> of the TLS handshake of</font>

6
00:00:14,070 --> 00:00:18,289
course<font color="#E5E5E5"> is that the client and server</font>

7
00:00:15,750 --> 00:00:21,119
want to<font color="#E5E5E5"> agree upon</font><font color="#CCCCCC"> a shared secret</font><font color="#E5E5E5"> and</font>

8
00:00:18,289 --> 00:00:24,300
that's going<font color="#CCCCCC"> to happen oftentimes</font>

9
00:00:21,119 --> 00:00:26,820
through RSA base key exchanges<font color="#E5E5E5"> so you</font>

10
00:00:24,300 --> 00:00:28,199
have two<font color="#E5E5E5"> modes of RSA key exchanges</font>

11
00:00:26,820 --> 00:00:31,830
you've got encryption<font color="#E5E5E5"> based and</font>

12
00:00:28,199 --> 00:00:34,230
signature based now<font color="#E5E5E5"> what we're focusing</font>

13
00:00:31,830 --> 00:00:37,110
on<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this talk is RSA encryption based</font>

14
00:00:34,230 --> 00:00:37,828
key exchanges and that<font color="#CCCCCC"> looks something</font>

15
00:00:37,110 --> 00:00:39,450
like this

16
00:00:37,829 --> 00:00:41,399
what we're<font color="#E5E5E5"> really interested</font><font color="#CCCCCC"> in here is</font>

17
00:00:39,450 --> 00:00:45,329
<font color="#E5E5E5">only the one message that client key</font>

18
00:00:41,399 --> 00:00:48,480
exchange<font color="#E5E5E5"> and so what this contains is</font>

19
00:00:45,329 --> 00:00:49,950
RSA encrypted<font color="#CCCCCC"> premaster secret data so</font>

20
00:00:48,480 --> 00:00:52,319
this is<font color="#E5E5E5"> going to be the data that's used</font>

21
00:00:49,950 --> 00:00:55,410
<font color="#E5E5E5">to later derive keys in the sand shake</font>

22
00:00:52,320 --> 00:00:57,059
and authenticate it to understand what's

23
00:00:55,410 --> 00:01:00,510
<font color="#CCCCCC">going on</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> we need to look at RSA</font>

24
00:00:57,059 --> 00:01:02,578
encryption<font color="#E5E5E5"> the basic algorithms for RSA</font>

25
00:01:00,510 --> 00:01:05,369
encryption<font color="#E5E5E5"> are pretty easy to understand</font>

26
00:01:02,579 --> 00:01:06,840
but it can't really work this way in the

27
00:01:05,369 --> 00:01:09,659
real world<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> what we would call</font>

28
00:01:06,840 --> 00:01:11,790
textbook RSA<font color="#E5E5E5"> and it breaks down when</font>

29
00:01:09,659 --> 00:01:13,680
you're in looking at values of<font color="#E5E5E5"> 0 and 1</font>

30
00:01:11,790 --> 00:01:17,130
you've got<font color="#E5E5E5"> identity</font><font color="#CCCCCC"> arrangements here</font>

31
00:01:13,680 --> 00:01:18,960
and this is why we need padding so

32
00:01:17,130 --> 00:01:20,970
padding is going to be a way<font color="#E5E5E5"> that we're</font>

33
00:01:18,960 --> 00:01:23,130
going to specially format our messages

34
00:01:20,970 --> 00:01:26,280
<font color="#E5E5E5">so that they will be appropriate for</font>

35
00:01:23,130 --> 00:01:28,979
secure encryption through RSA and the

36
00:01:26,280 --> 00:01:34,829
padding<font color="#E5E5E5"> that's being used for TLS prior</font>

37
00:01:28,979 --> 00:01:36,780
to 1.3<font color="#E5E5E5"> is pkcs number 11.5 the structure</font>

38
00:01:34,829 --> 00:01:39,360
of this looks something like this<font color="#CCCCCC"> we</font>

39
00:01:36,780 --> 00:01:43,079
start<font color="#CCCCCC"> out</font><font color="#E5E5E5"> with a block type that's going</font>

40
00:01:39,360 --> 00:01:45,270
to be a constant<font color="#E5E5E5"> 0 0 0 2 we then have</font>

41
00:01:43,079 --> 00:01:48,059
some random<font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> the random bytes</font>

42
00:01:45,270 --> 00:01:51,329
cannot contain any<font color="#E5E5E5"> nulls because it is</font>

43
00:01:48,060 --> 00:01:54,000
then terminated<font color="#E5E5E5"> with null byte and then</font>

44
00:01:51,329 --> 00:01:57,389
we see the TLS version<font color="#E5E5E5"> now you see here</font>

45
00:01:54,000 --> 00:02:01,520
this<font color="#CCCCCC"> has 0 3 0 3 that naturally stands</font>

46
00:01:57,390 --> 00:02:04,560
<font color="#E5E5E5">for TLS 1.2 because yeah it just</font><font color="#CCCCCC"> does</font>

47
00:02:01,520 --> 00:02:06,060
and TLS versions are<font color="#CCCCCC"> saying we could</font>

48
00:02:04,560 --> 00:02:09,959
give<font color="#CCCCCC"> it a we'll talk about TLS version</font>

49
00:02:06,060 --> 00:02:12,660
<font color="#E5E5E5">numbers like yeah but that's not the</font>

50
00:02:09,959 --> 00:02:13,950
<font color="#CCCCCC">topic of the talk today yeah the topic</font>

51
00:02:12,660 --> 00:02:15,270
is more about this

52
00:02:13,950 --> 00:02:16,829
<font color="#CCCCCC">gripped out</font><font color="#E5E5E5"> of here these random</font><font color="#CCCCCC"> bites</font>

53
00:02:15,270 --> 00:02:18,900
at the<font color="#CCCCCC"> end this is the premaster secret</font>

54
00:02:16,830 --> 00:02:23,250
<font color="#E5E5E5">in this case and the client key exchange</font>

55
00:02:18,900 --> 00:02:26,250
<font color="#E5E5E5">and Daniel Blake and</font><font color="#CCCCCC"> Bakker</font><font color="#E5E5E5"> had looked</font>

56
00:02:23,250 --> 00:02:28,739
at this and considered the possibility

57
00:02:26,250 --> 00:02:32,910
of chosen cipher<font color="#E5E5E5"> test ciphertext attacks</font>

58
00:02:28,739 --> 00:02:35,430
on this and so this<font color="#E5E5E5"> is based on the fact</font>

59
00:02:32,910 --> 00:02:37,709
that an RSA block is going<font color="#CCCCCC"> to start with</font>

60
00:02:35,430 --> 00:02:40,470
these static bytes<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> zero two</font>

61
00:02:37,709 --> 00:02:43,379
<font color="#E5E5E5">and we have to think</font><font color="#CCCCCC"> about what happens</font>

62
00:02:40,470 --> 00:02:45,480
<font color="#E5E5E5">when what the server should do if it</font>

63
00:02:43,379 --> 00:02:49,140
receives<font color="#E5E5E5"> a value that decrypts but does</font>

64
00:02:45,480 --> 00:02:52,048
not<font color="#E5E5E5"> start</font><font color="#CCCCCC"> with these</font><font color="#E5E5E5"> values so the</font>

65
00:02:49,140 --> 00:02:54,059
initial idea here<font color="#E5E5E5"> was just why not send</font>

66
00:02:52,049 --> 00:02:55,530
an error<font color="#E5E5E5"> back let the user know or let</font>

67
00:02:54,060 --> 00:03:00,390
the client know that<font color="#E5E5E5"> there was for</font>

68
00:02:55,530 --> 00:03:02,790
<font color="#CCCCCC">example Iran block type prefix but this</font>

69
00:03:00,390 --> 00:03:04,708
doesn't<font color="#E5E5E5"> really turn out to</font><font color="#CCCCCC"> be such a</font>

70
00:03:02,790 --> 00:03:06,239
great<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> because when you're doing</font>

71
00:03:04,709 --> 00:03:08,250
<font color="#CCCCCC">this</font><font color="#E5E5E5"> that error</font><font color="#CCCCCC"> message is actually</font>

72
00:03:06,239 --> 00:03:11,370
<font color="#CCCCCC">leaking information about</font><font color="#E5E5E5"> the encrypted</font>

73
00:03:08,250 --> 00:03:13,799
<font color="#E5E5E5">data</font><font color="#CCCCCC"> so if you know</font><font color="#E5E5E5"> that it has</font><font color="#CCCCCC"> a</font>

74
00:03:11,370 --> 00:03:16,140
correct prefix<font color="#E5E5E5"> you know that the value</font>

75
00:03:13,799 --> 00:03:18,690
<font color="#CCCCCC">of the message is within certain ranges</font>

76
00:03:16,140 --> 00:03:20,100
and if it has a bad prefix<font color="#E5E5E5"> it's going to</font>

77
00:03:18,690 --> 00:03:24,329
be outside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> those ranges</font>

78
00:03:20,100 --> 00:03:26,459
now this combines with a factor of<font color="#E5E5E5"> our</font>

79
00:03:24,329 --> 00:03:29,430
property of RSA encryption<font color="#CCCCCC"> known</font><font color="#E5E5E5"> as</font>

80
00:03:26,459 --> 00:03:32,609
malleability<font color="#CCCCCC"> in which we can multiply to</font>

81
00:03:29,430 --> 00:03:34,650
plain text<font color="#CCCCCC"> or the multiplication of</font>

82
00:03:32,609 --> 00:03:36,750
plaintext<font color="#E5E5E5"> has a correlation</font><font color="#CCCCCC"> with the</font>

83
00:03:34,650 --> 00:03:42,630
multiplication<font color="#CCCCCC"> of the ciphertext there</font>

84
00:03:36,750 --> 00:03:45,239
so by multiplying<font color="#E5E5E5"> chosen ciphertext</font><font color="#CCCCCC"> with</font>

85
00:03:42,630 --> 00:03:46,709
the known ciphertext you can drive that

86
00:03:45,239 --> 00:03:49,620
these plain texts have a relationship

87
00:03:46,709 --> 00:03:51,870
<font color="#E5E5E5">and really at this point</font><font color="#CCCCCC"> it's important</font>

88
00:03:49,620 --> 00:03:53,670
to reiterate that RSA is doing

89
00:03:51,870 --> 00:03:54,959
everything<font color="#E5E5E5"> based on numbers</font><font color="#CCCCCC"> you're not</font>

90
00:03:53,670 --> 00:03:56,940
talking about strings here you're

91
00:03:54,959 --> 00:04:03,560
talking<font color="#CCCCCC"> about messages and keys and</font>

92
00:03:56,940 --> 00:04:06,660
modulo<font color="#E5E5E5"> and these are all just numbers so</font>

93
00:04:03,560 --> 00:04:09,810
what we can say then is that<font color="#E5E5E5"> if we have</font>

94
00:04:06,660 --> 00:04:13,889
some message<font color="#E5E5E5"> times some chosen value and</font>

95
00:04:09,810 --> 00:04:18,269
that ends up starting<font color="#CCCCCC"> with</font><font color="#E5E5E5"> 0 X or with 0</font>

96
00:04:13,889 --> 00:04:20,160
0 0<font color="#CCCCCC"> to that we know something</font><font color="#E5E5E5"> but what</font>

97
00:04:18,269 --> 00:04:23,729
<font color="#CCCCCC">exactly do we know what's the importance</font>

98
00:04:20,160 --> 00:04:26,400
of<font color="#CCCCCC"> this</font><font color="#E5E5E5"> well to get an idea of that</font>

99
00:04:23,729 --> 00:04:27,719
let's just look at a basic algebraic

100
00:04:26,400 --> 00:04:29,640
example<font color="#CCCCCC"> here</font>

101
00:04:27,720 --> 00:04:32,160
let's say that<font color="#E5E5E5"> I give</font><font color="#CCCCCC"> you a problem</font><font color="#E5E5E5"> and</font>

102
00:04:29,640 --> 00:04:34,380
you know that<font color="#E5E5E5"> three thousand times the</font>

103
00:04:32,160 --> 00:04:36,390
number<font color="#CCCCCC"> of the variable</font><font color="#E5E5E5"> X is going to</font><font color="#CCCCCC"> be</font>

104
00:04:34,380 --> 00:04:39,150
<font color="#CCCCCC">a five digit decimal starting with the</font>

105
00:04:36,390 --> 00:04:41,130
numbers four and five<font color="#E5E5E5"> that means that</font>

106
00:04:39,150 --> 00:04:42,780
three thousand<font color="#E5E5E5"> X in other words has to</font>

107
00:04:41,130 --> 00:04:44,850
be greater than<font color="#E5E5E5"> or equal to forty five</font>

108
00:04:42,780 --> 00:04:47,250
thousand but it<font color="#E5E5E5"> has to be less than</font>

109
00:04:44,850 --> 00:04:49,620
<font color="#CCCCCC">forty six thousand</font><font color="#E5E5E5"> we can reduce</font><font color="#CCCCCC"> that</font>

110
00:04:47,250 --> 00:04:52,260
<font color="#E5E5E5">and you know that</font><font color="#CCCCCC"> fifteen</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> less than</font>

111
00:04:49,620 --> 00:04:55,260
<font color="#E5E5E5">or equal to X is less</font><font color="#CCCCCC"> than fifteen point</font>

112
00:04:52,260 --> 00:04:56,849
three three<font color="#E5E5E5"> now if you get some</font>

113
00:04:55,260 --> 00:04:59,520
<font color="#E5E5E5">additional information here and</font><font color="#CCCCCC"> you</font>

114
00:04:56,850 --> 00:05:02,190
learn that also<font color="#E5E5E5"> three thousand ten times</font>

115
00:04:59,520 --> 00:05:04,200
<font color="#E5E5E5">X follows that same property</font><font color="#CCCCCC"> where</font>

116
00:05:02,190 --> 00:05:06,810
<font color="#E5E5E5">you've got a five digit decimal starting</font>

117
00:05:04,200 --> 00:05:09,420
with four<font color="#E5E5E5"> five then you</font><font color="#CCCCCC"> get another</font>

118
00:05:06,810 --> 00:05:13,590
interval you can<font color="#CCCCCC"> combine these intervals</font>

119
00:05:09,420 --> 00:05:15,540
<font color="#CCCCCC">into a smaller range</font><font color="#E5E5E5"> and so with each</font>

120
00:05:13,590 --> 00:05:18,599
time that<font color="#E5E5E5"> you're learning about this</font>

121
00:05:15,540 --> 00:05:22,560
other<font color="#CCCCCC"> factor of</font><font color="#E5E5E5"> X you're able to narrow</font>

122
00:05:18,600 --> 00:05:26,220
down<font color="#E5E5E5"> the range and</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> principle it</font>

123
00:05:22,560 --> 00:05:28,020
works<font color="#E5E5E5"> with RSA too but it is just a bit</font>

124
00:05:26,220 --> 00:05:30,090
<font color="#E5E5E5">more complicated because of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> modulo</font>

125
00:05:28,020 --> 00:05:32,370
you end up with multiple intervals that

126
00:05:30,090 --> 00:05:35,219
have to reconcile but<font color="#E5E5E5"> like and baakir</font>

127
00:05:32,370 --> 00:05:37,440
did derive a formula for going<font color="#CCCCCC"> through</font>

128
00:05:35,220 --> 00:05:39,870
this and the long<font color="#E5E5E5"> story of that is</font>

129
00:05:37,440 --> 00:05:41,940
basically just<font color="#E5E5E5"> that each time you get</font><font color="#CCCCCC"> a</font>

130
00:05:39,870 --> 00:05:43,530
<font color="#CCCCCC">positive response back from the</font><font color="#E5E5E5"> server</font>

131
00:05:41,940 --> 00:05:45,840
telling you that the padding<font color="#CCCCCC"> was correct</font>

132
00:05:43,530 --> 00:05:50,039
<font color="#CCCCCC">you're narrowing in on the possibilities</font>

133
00:05:45,840 --> 00:05:52,020
<font color="#E5E5E5">of the decrypted value and after you've</font>

134
00:05:50,040 --> 00:05:53,940
done<font color="#E5E5E5"> this enough you've got a small</font>

135
00:05:52,020 --> 00:05:55,650
enough<font color="#CCCCCC"> space</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can simply do a</font>

136
00:05:53,940 --> 00:05:59,370
<font color="#CCCCCC">brute-force</font><font color="#E5E5E5"> search</font><font color="#CCCCCC"> and recover the</font>

137
00:05:55,650 --> 00:06:01,919
message<font color="#E5E5E5"> so there are various variations</font>

138
00:05:59,370 --> 00:06:03,750
of<font color="#E5E5E5"> this though it's not necessarily</font>

139
00:06:01,919 --> 00:06:05,520
<font color="#CCCCCC">always going to be</font><font color="#E5E5E5"> that a server tells</font>

140
00:06:03,750 --> 00:06:07,890
you that the block type prefix is

141
00:06:05,520 --> 00:06:09,870
incorrect<font color="#E5E5E5"> it could also be</font><font color="#CCCCCC"> that the</font>

142
00:06:07,890 --> 00:06:11,490
padding<font color="#E5E5E5"> length or various other fields</font>

143
00:06:09,870 --> 00:06:13,710
<font color="#E5E5E5">like the null byte might be in the wrong</font>

144
00:06:11,490 --> 00:06:15,360
<font color="#E5E5E5">place</font><font color="#CCCCCC"> and so depending</font><font color="#E5E5E5"> on what server</font>

145
00:06:13,710 --> 00:06:17,219
checks are actually there you're<font color="#E5E5E5"> going</font>

146
00:06:15,360 --> 00:06:19,080
<font color="#E5E5E5">to get different Oracle's and these</font>

147
00:06:17,220 --> 00:06:21,360
different Oracle's<font color="#E5E5E5"> will have different</font>

148
00:06:19,080 --> 00:06:25,020
<font color="#E5E5E5">strengths meaning that they will require</font>

149
00:06:21,360 --> 00:06:27,600
more or fewer numbers of<font color="#E5E5E5"> connections to</font>

150
00:06:25,020 --> 00:06:33,719
the<font color="#E5E5E5"> Oracle to get down to your final</font>

151
00:06:27,600 --> 00:06:37,229
value<font color="#E5E5E5"> yeah so okay</font><font color="#CCCCCC"> so this was detected</font>

152
00:06:33,720 --> 00:06:39,180
<font color="#E5E5E5">back in 1998 so after that people</font><font color="#CCCCCC"> of</font>

153
00:06:37,229 --> 00:06:40,688
course<font color="#CCCCCC"> wondered what do we do now how do</font>

154
00:06:39,180 --> 00:06:43,330
we<font color="#E5E5E5"> fix this</font>

155
00:06:40,689 --> 00:06:46,269
and so you have to remember 1998 that

156
00:06:43,330 --> 00:06:50,799
was back<font color="#CCCCCC"> pls didn't exist there it was</font>

157
00:06:46,269 --> 00:06:55,059
still called SSL<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then in 1999 the</font>

158
00:06:50,799 --> 00:06:56,378
first TLS<font color="#E5E5E5"> turn dirtiest 1.0 was</font>

159
00:06:55,059 --> 00:06:58,269
published and<font color="#E5E5E5"> this was the first</font>

160
00:06:56,379 --> 00:07:01,389
standard that contained countermeasures

161
00:06:58,269 --> 00:07:03,759
against this kind<font color="#E5E5E5"> of attack and I'll</font>

162
00:07:01,389 --> 00:07:06,129
just read this to<font color="#CCCCCC"> you the best way to</font>

163
00:07:03,759 --> 00:07:08,259
<font color="#E5E5E5">avoid one ability to this attack is to</font>

164
00:07:06,129 --> 00:07:09,749
treat incorrectly formatted messages in

165
00:07:08,259 --> 00:07:12,279
a manner indistinguishable<font color="#E5E5E5"> from</font>

166
00:07:09,749 --> 00:07:14,529
<font color="#E5E5E5">correctly formatted</font><font color="#CCCCCC"> RS</font><font color="#E5E5E5"> a blocks</font>

167
00:07:12,279 --> 00:07:16,959
thus when it receives an incorrectly

168
00:07:14,529 --> 00:07:19,869
formatted<font color="#E5E5E5"> RSA block a server should</font>

169
00:07:16,959 --> 00:07:22,349
generate<font color="#E5E5E5"> a random 48 byte value and</font>

170
00:07:19,869 --> 00:07:26,259
proceed using<font color="#CCCCCC"> it as the premaster secret</font>

171
00:07:22,349 --> 00:07:28,058
<font color="#E5E5E5">thus the server act in identically</font>

172
00:07:26,259 --> 00:07:30,249
whether the receive<font color="#E5E5E5"> earth a block is</font>

173
00:07:28,059 --> 00:07:32,199
correctly encoded or not<font color="#E5E5E5"> so the idea</font>

174
00:07:30,249 --> 00:07:35,079
here<font color="#E5E5E5"> is if the server detects something</font>

175
00:07:32,199 --> 00:07:36,749
is wrong about<font color="#E5E5E5"> this RSA message it will</font>

176
00:07:35,079 --> 00:07:39,339
not send an error but it will continue

177
00:07:36,749 --> 00:07:41,349
<font color="#E5E5E5">with a random value and pretend</font>

178
00:07:39,339 --> 00:07:43,749
everything<font color="#E5E5E5"> is all right and this will</font>

179
00:07:41,349 --> 00:07:45,669
<font color="#E5E5E5">then fail later on because</font><font color="#CCCCCC"> obviously</font>

180
00:07:43,749 --> 00:07:47,949
then the<font color="#E5E5E5"> server and the kind will end up</font>

181
00:07:45,669 --> 00:07:51,308
with a<font color="#E5E5E5"> different key and</font><font color="#CCCCCC"> they there will</font>

182
00:07:47,949 --> 00:07:53,860
be no useful<font color="#E5E5E5"> communication</font><font color="#CCCCCC"> so if this</font>

183
00:07:51,309 --> 00:07:55,779
sounds a bit strange<font color="#E5E5E5"> to you then maybe</font>

184
00:07:53,860 --> 00:07:57,579
you're right because<font color="#E5E5E5"> like maybe this was</font>

185
00:07:55,779 --> 00:08:01,029
<font color="#CCCCCC">not the best</font><font color="#E5E5E5"> fix but that's what they</font>

186
00:07:57,579 --> 00:08:05,229
<font color="#CCCCCC">came up with now but</font><font color="#E5E5E5"> the current TLS</font>

187
00:08:01,029 --> 00:08:07,689
tunnel is TLS 1.2 and<font color="#E5E5E5"> yeah so that's</font>

188
00:08:05,229 --> 00:08:09,489
what<font color="#CCCCCC"> is it so in case of</font><font color="#E5E5E5"> a bad padding a</font>

189
00:08:07,689 --> 00:08:12,399
server should pretend<font color="#E5E5E5"> everything's</font>

190
00:08:09,489 --> 00:08:16,299
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> and then use a random value to</font>

191
00:08:12,399 --> 00:08:18,879
continue the handshake<font color="#E5E5E5"> now the current</font>

192
00:08:16,300 --> 00:08:22,209
TLS<font color="#CCCCCC"> stirlitz TLS 1.2 and</font><font color="#E5E5E5"> there this</font>

193
00:08:18,879 --> 00:08:23,649
section got a bit longer<font color="#CCCCCC"> so because</font>

194
00:08:22,209 --> 00:08:25,499
someone figured out<font color="#CCCCCC"> ok there are</font><font color="#E5E5E5"> some</font>

195
00:08:23,649 --> 00:08:27,639
<font color="#CCCCCC">problems this is</font><font color="#E5E5E5"> old algorithm</font>

196
00:08:25,499 --> 00:08:30,269
<font color="#CCCCCC">particular with the handling of the</font>

197
00:08:27,639 --> 00:08:32,680
version number<font color="#CCCCCC"> someone</font><font color="#E5E5E5"> fell out there's</font>

198
00:08:30,269 --> 00:08:37,419
attack very similar to<font color="#CCCCCC"> Platon bajas</font>

199
00:08:32,679 --> 00:08:39,519
attack<font color="#CCCCCC"> and so TLS 1.2 says yeah</font><font color="#E5E5E5"> as</font>

200
00:08:37,419 --> 00:08:41,620
described by<font color="#E5E5E5"> kima this was this improved</font>

201
00:08:39,519 --> 00:08:44,049
<font color="#CCCCCC">platypi</font><font color="#E5E5E5"> attack these vulnerabilities</font><font color="#CCCCCC"> can</font>

202
00:08:41,620 --> 00:08:46,540
be avoided by<font color="#E5E5E5"> treating incorrectly</font>

203
00:08:44,049 --> 00:08:48,269
formatted messages<font color="#E5E5E5"> blocks and or</font>

204
00:08:46,540 --> 00:08:50,349
mismatched version numbers in a manner

205
00:08:48,269 --> 00:08:52,209
indistinguishable from correctly

206
00:08:50,350 --> 00:08:53,370
formatted<font color="#E5E5E5"> RSA blocks and then it</font>

207
00:08:52,209 --> 00:08:56,250
describes<font color="#E5E5E5"> an algorithm</font>

208
00:08:53,370 --> 00:08:58,740
<font color="#CCCCCC">three steps here apparently in step</font>

209
00:08:56,250 --> 00:09:03,960
<font color="#E5E5E5">three there's a variation</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> could do</font>

210
00:08:58,740 --> 00:09:06,540
several<font color="#E5E5E5"> different things</font><font color="#CCCCCC"> then it goes</font><font color="#E5E5E5"> on</font>

211
00:09:03,960 --> 00:09:10,020
it<font color="#E5E5E5"> proposes another</font><font color="#CCCCCC"> algorithm which you</font>

212
00:09:06,540 --> 00:09:11,910
could<font color="#E5E5E5"> also use the difference between</font>

213
00:09:10,020 --> 00:09:15,270
<font color="#E5E5E5">the two is how you would actually handle</font>

214
00:09:11,910 --> 00:09:17,670
a wrong version<font color="#E5E5E5"> number and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> it tells</font>

215
00:09:15,270 --> 00:09:20,430
you although no practical attacks

216
00:09:17,670 --> 00:09:21,750
against this construction<font color="#CCCCCC"> unknown key</font>

217
00:09:20,430 --> 00:09:23,520
might<font color="#CCCCCC"> our describes</font><font color="#E5E5E5"> on theoretical</font>

218
00:09:21,750 --> 00:09:25,740
attacks and therefore the<font color="#E5E5E5"> first</font>

219
00:09:23,520 --> 00:09:27,360
<font color="#E5E5E5">construction is recommended so we have</font>

220
00:09:25,740 --> 00:09:30,000
two algorithms<font color="#CCCCCC"> how to prevent this</font>

221
00:09:27,360 --> 00:09:32,960
attack<font color="#E5E5E5"> we really should only use one of</font>

222
00:09:30,000 --> 00:09:35,880
them but yeah the<font color="#E5E5E5"> standard describes two</font>

223
00:09:32,960 --> 00:09:38,070
<font color="#E5E5E5">and also by the way</font><font color="#CCCCCC"> we should prevent</font>

224
00:09:35,880 --> 00:09:41,430
timing attacks and other<font color="#CCCCCC"> kinds</font><font color="#E5E5E5"> of leaks</font>

225
00:09:38,070 --> 00:09:42,779
<font color="#CCCCCC">and yeah</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> really long section</font>

226
00:09:41,430 --> 00:09:46,050
how to prevent<font color="#E5E5E5"> these attacks</font>

227
00:09:42,779 --> 00:09:48,330
<font color="#E5E5E5">so to summarize</font><font color="#CCCCCC"> that so what you're</font>

228
00:09:46,050 --> 00:09:51,180
supposed to do is that<font color="#CCCCCC"> you generate a</font>

229
00:09:48,330 --> 00:09:53,160
random<font color="#CCCCCC"> value</font><font color="#E5E5E5"> before you actually decrypt</font>

230
00:09:51,180 --> 00:09:54,870
the message and the reason<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> is</font>

231
00:09:53,160 --> 00:09:56,699
<font color="#E5E5E5">the timing attack because if you</font>

232
00:09:54,870 --> 00:09:58,459
generate<font color="#E5E5E5"> this random value</font><font color="#CCCCCC"> after you</font>

233
00:09:56,700 --> 00:10:01,230
figured<font color="#E5E5E5"> out that this message is wrong</font>

234
00:09:58,459 --> 00:10:02,880
<font color="#E5E5E5">then the client could depending on how</font>

235
00:10:01,230 --> 00:10:06,779
long it takes you to generate this

236
00:10:02,880 --> 00:10:08,760
random value kind of figure<font color="#CCCCCC"> out whether</font>

237
00:10:06,779 --> 00:10:11,040
you had a correctly<font color="#CCCCCC"> formatted message or</font>

238
00:10:08,760 --> 00:10:13,740
not<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> generate</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> random value</font>

239
00:10:11,040 --> 00:10:15,449
anyway and you only swap out your value

240
00:10:13,740 --> 00:10:22,830
<font color="#E5E5E5">if you figure out the</font><font color="#CCCCCC"> pending is</font>

241
00:10:15,450 --> 00:10:25,050
incorrect yeah and if you have a bad

242
00:10:22,830 --> 00:10:27,440
version<font color="#E5E5E5"> number then the server can do</font>

243
00:10:25,050 --> 00:10:29,790
different things<font color="#E5E5E5"> it could either</font>

244
00:10:27,440 --> 00:10:32,700
<font color="#E5E5E5">continue with the</font><font color="#CCCCCC"> random value</font><font color="#E5E5E5"> or it</font>

245
00:10:29,790 --> 00:10:35,029
could replace<font color="#CCCCCC"> the</font><font color="#E5E5E5"> version with actually</font>

246
00:10:32,700 --> 00:10:38,070
<font color="#E5E5E5">the correct version there's a very</font>

247
00:10:35,029 --> 00:10:42,660
subtle<font color="#E5E5E5"> theoretical argument why this is</font>

248
00:10:38,070 --> 00:10:44,430
preferable so ultimately the second

249
00:10:42,660 --> 00:10:45,779
variation<font color="#E5E5E5"> is better but we would like</font><font color="#CCCCCC"> to</font>

250
00:10:44,430 --> 00:10:47,370
<font color="#E5E5E5">make the standard longer and more</font>

251
00:10:45,779 --> 00:10:52,140
<font color="#CCCCCC">complicated and therefore we have two</font>

252
00:10:47,370 --> 00:10:53,910
<font color="#CCCCCC">variations and yeah</font><font color="#E5E5E5"> everything has to be</font>

253
00:10:52,140 --> 00:10:57,689
timing safe and please<font color="#E5E5E5"> figure out how to</font>

254
00:10:53,910 --> 00:11:01,500
do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> totally</font><font color="#E5E5E5"> easy right I</font>

255
00:10:57,690 --> 00:11:05,950
mean everyone will get this right and I

256
00:11:01,500 --> 00:11:07,930
mean it's<font color="#CCCCCC"> it's an attack from 1998 so</font>

257
00:11:05,950 --> 00:11:10,510
<font color="#E5E5E5">everyone knows</font><font color="#CCCCCC"> about this it's a</font>

258
00:11:07,930 --> 00:11:12,310
well-known<font color="#E5E5E5"> attack it's</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> documented so</font>

259
00:11:10,510 --> 00:11:14,830
everyone has regression tests for this

260
00:11:12,310 --> 00:11:16,270
right<font color="#CCCCCC"> I mean if you</font><font color="#E5E5E5"> write or TLS library</font>

261
00:11:14,830 --> 00:11:20,050
you would have regression tests for

262
00:11:16,270 --> 00:11:24,670
known attacks so this would not<font color="#CCCCCC"> be a big</font>

263
00:11:20,050 --> 00:11:26,319
<font color="#CCCCCC">deal right or maybe maybe this</font><font color="#E5E5E5"> so at</font>

264
00:11:24,670 --> 00:11:29,410
some point last<font color="#CCCCCC"> year I thought</font><font color="#E5E5E5"> I should</font>

265
00:11:26,320 --> 00:11:31,270
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> test that because like and I</font>

266
00:11:29,410 --> 00:11:33,699
knew about this attack but I didn't

267
00:11:31,270 --> 00:11:36,310
really<font color="#CCCCCC"> know if anyone had in</font><font color="#E5E5E5"> recent</font>

268
00:11:33,700 --> 00:11:40,780
years<font color="#E5E5E5"> tried to exploit this attack or</font>

269
00:11:36,310 --> 00:11:44,380
find more neural implementations<font color="#E5E5E5"> so in</font>

270
00:11:40,780 --> 00:11:46,980
order to<font color="#E5E5E5"> test this I initially I patched</font>

271
00:11:44,380 --> 00:11:50,140
<font color="#E5E5E5">open SSL so I was able to send different</font>

272
00:11:46,980 --> 00:11:52,710
versions of protein<font color="#CCCCCC"> arts a key exchanges</font>

273
00:11:50,140 --> 00:11:55,330
because<font color="#CCCCCC"> what we want to</font><font color="#E5E5E5"> know is whether</font>

274
00:11:52,710 --> 00:11:58,900
depending on different<font color="#CCCCCC"> errors the server</font>

275
00:11:55,330 --> 00:12:00,370
behaves in different<font color="#CCCCCC"> ways</font><font color="#E5E5E5"> and as soon as</font>

276
00:11:58,900 --> 00:12:02,079
<font color="#E5E5E5">I get differences between these</font>

277
00:12:00,370 --> 00:12:03,790
<font color="#CCCCCC">different error types</font><font color="#E5E5E5"> I know I have an</font>

278
00:12:02,080 --> 00:12:07,840
Oracle<font color="#E5E5E5"> and this could somehow be</font>

279
00:12:03,790 --> 00:12:10,089
exploited and what you can<font color="#E5E5E5"> look there is</font>

280
00:12:07,840 --> 00:12:11,980
not<font color="#CCCCCC"> just error codes but any kind</font><font color="#E5E5E5"> of</font>

281
00:12:10,090 --> 00:12:14,920
different behavior from<font color="#E5E5E5"> the server you</font>

282
00:12:11,980 --> 00:12:17,410
can<font color="#E5E5E5"> detect can be used as an Oracle</font><font color="#CCCCCC"> so</font>

283
00:12:14,920 --> 00:12:19,870
<font color="#CCCCCC">these can be</font><font color="#E5E5E5"> different TLS errors this</font>

284
00:12:17,410 --> 00:12:22,630
can<font color="#E5E5E5"> also with we saw implementation sets</font>

285
00:12:19,870 --> 00:12:23,770
in duplicate TLS<font color="#CCCCCC"> arrows</font><font color="#E5E5E5"> I think this is</font>

286
00:12:22,630 --> 00:12:27,220
not really<font color="#E5E5E5"> considered by the</font>

287
00:12:23,770 --> 00:12:29,439
<font color="#E5E5E5">specification but some do this we can</font>

288
00:12:27,220 --> 00:12:31,840
also have service that on some errors

289
00:12:29,440 --> 00:12:33,730
just<font color="#E5E5E5"> close the connection or that just</font>

290
00:12:31,840 --> 00:12:36,280
<font color="#E5E5E5">don't answer</font><font color="#CCCCCC"> anymore and you have a</font>

291
00:12:33,730 --> 00:12:39,730
<font color="#CCCCCC">timeout</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are different ways</font>

292
00:12:36,280 --> 00:12:41,770
<font color="#E5E5E5">where you can have</font><font color="#CCCCCC"> these Oracle's</font><font color="#E5E5E5"> and so</font>

293
00:12:39,730 --> 00:12:44,140
<font color="#CCCCCC">it</font><font color="#E5E5E5"> can't</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> Alexa top 1 million list and</font>

294
00:12:41,770 --> 00:12:48,490
the first hit was Facebook<font color="#E5E5E5"> facebook.com</font>

295
00:12:44,140 --> 00:12:52,900
was vulnerable<font color="#E5E5E5"> so I thought</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we have</font>

296
00:12:48,490 --> 00:12:54,490
to attack Facebook and it would be

297
00:12:52,900 --> 00:12:57,520
<font color="#E5E5E5">really nice to</font><font color="#CCCCCC"> have a message that</font>

298
00:12:54,490 --> 00:12:57,970
<font color="#CCCCCC">assigned</font><font color="#E5E5E5"> with Facebook's key</font><font color="#CCCCCC"> why would I</font>

299
00:12:57,520 --> 00:12:59,470
do that

300
00:12:57,970 --> 00:13:01,930
I mean this<font color="#E5E5E5"> doesn't really have any</font>

301
00:12:59,470 --> 00:13:04,150
value it<font color="#E5E5E5"> doesn't put</font><font color="#CCCCCC"> facebook at risk in</font>

302
00:13:01,930 --> 00:13:06,790
any<font color="#E5E5E5"> way but I would have cryptographic</font>

303
00:13:04,150 --> 00:13:09,850
proof that this really happened<font color="#E5E5E5"> like</font>

304
00:13:06,790 --> 00:13:13,180
nobody can tell that I'm just<font color="#E5E5E5"> making</font>

305
00:13:09,850 --> 00:13:15,940
this<font color="#E5E5E5"> up or anything</font><font color="#CCCCCC"> so so yeah</font><font color="#E5E5E5"> so I</font>

306
00:13:13,180 --> 00:13:18,069
reach<font color="#E5E5E5"> out to you I he is like the</font>

307
00:13:15,940 --> 00:13:19,090
thought author of the<font color="#E5E5E5"> paper who is not</font>

308
00:13:18,070 --> 00:13:21,910
here

309
00:13:19,090 --> 00:13:26,440
and<font color="#E5E5E5"> together like we</font><font color="#CCCCCC"> put together</font><font color="#E5E5E5"> a</font>

310
00:13:21,910 --> 00:13:28,180
proof-of-concept<font color="#CCCCCC"> attack and as we would</font>

311
00:13:26,440 --> 00:13:30,820
meet several<font color="#E5E5E5"> thousands of connections</font><font color="#CCCCCC"> to</font>

312
00:13:28,180 --> 00:13:32,500
Facebook<font color="#E5E5E5"> we wanted this to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> fast so we</font>

313
00:13:30,820 --> 00:13:33,430
didn't have<font color="#E5E5E5"> to wait several weeks till</font>

314
00:13:32,500 --> 00:13:39,160
it completed

315
00:13:33,430 --> 00:13:40,900
so one thing<font color="#CCCCCC"> we did we try to all AWS</font>

316
00:13:39,160 --> 00:13:44,199
locations where you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> rent</font><font color="#E5E5E5"> service</font>

317
00:13:40,900 --> 00:13:46,390
from<font color="#E5E5E5"> AWS and measure the ping times and</font>

318
00:13:44,200 --> 00:13:50,740
on some<font color="#E5E5E5"> of them we got ping times of</font><font color="#CCCCCC"> two</font>

319
00:13:46,390 --> 00:13:53,050
to<font color="#CCCCCC"> three</font><font color="#E5E5E5"> milliseconds to Facebook</font><font color="#CCCCCC"> we</font>

320
00:13:50,740 --> 00:13:55,240
also figured out<font color="#E5E5E5"> that if you set the if</font>

321
00:13:53,050 --> 00:13:57,459
you have many very short connections

322
00:13:55,240 --> 00:14:01,360
then using this<font color="#CCCCCC"> option called</font><font color="#E5E5E5"> TCP no</font>

323
00:13:57,460 --> 00:14:03,520
delay<font color="#E5E5E5"> gives you a huge</font><font color="#CCCCCC"> speed-up so</font><font color="#E5E5E5"> this</font>

324
00:14:01,360 --> 00:14:08,050
was I think<font color="#E5E5E5"> by a factor of 10 in faster</font>

325
00:14:03,520 --> 00:14:10,480
we got there with the<font color="#E5E5E5"> attack and yeah</font>

326
00:14:08,050 --> 00:14:13,569
after<font color="#CCCCCC"> throat tries so we had several</font>

327
00:14:10,480 --> 00:14:15,310
<font color="#CCCCCC">bugs</font><font color="#E5E5E5"> in our script which</font><font color="#CCCCCC"> had after</font>

328
00:14:13,570 --> 00:14:20,290
several tries we managed<font color="#E5E5E5"> it and we sign</font>

329
00:14:15,310 --> 00:14:22,750
a message<font color="#E5E5E5"> with Facebook's key of course</font>

330
00:14:20,290 --> 00:14:25,349
we reported<font color="#E5E5E5"> that to Facebook they also</font>

331
00:14:22,750 --> 00:14:29,730
gave<font color="#CCCCCC"> us a very generous</font><font color="#E5E5E5"> Park bounty and</font>

332
00:14:25,350 --> 00:14:34,210
they fixed it<font color="#E5E5E5"> I think about a week later</font>

333
00:14:29,730 --> 00:14:35,860
<font color="#E5E5E5">and then yeah so now at this point</font><font color="#CCCCCC"> after</font>

334
00:14:34,210 --> 00:14:38,380
Facebook<font color="#E5E5E5"> had delivered their patch you</font>

335
00:14:35,860 --> 00:14:41,470
can see if<font color="#E5E5E5"> we send a crafted client key</font>

336
00:14:38,380 --> 00:14:43,839
exchange that has improper padding<font color="#CCCCCC"> we</font>

337
00:14:41,470 --> 00:14:46,690
just get generic alerts back<font color="#E5E5E5"> we're not</font>

338
00:14:43,839 --> 00:14:50,110
<font color="#E5E5E5">seeing anything that is going to be in</font>

339
00:14:46,690 --> 00:14:51,460
<font color="#CCCCCC">Oracle</font><font color="#E5E5E5"> anymore but what happens if</font><font color="#CCCCCC"> we</font>

340
00:14:50,110 --> 00:14:55,120
play with<font color="#E5E5E5"> the message flow a little bit</font>

341
00:14:51,460 --> 00:14:56,620
so going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to this diagram</font><font color="#E5E5E5"> again you</font>

342
00:14:55,120 --> 00:14:59,200
should understand that<font color="#E5E5E5"> each one</font><font color="#CCCCCC"> of these</font>

343
00:14:56,620 --> 00:15:00,670
blocks<font color="#E5E5E5"> they can be sent together</font><font color="#CCCCCC"> or a</font>

344
00:14:59,200 --> 00:15:02,980
lot<font color="#E5E5E5"> of them can be sent together in the</font>

345
00:15:00,670 --> 00:15:05,620
same packet or they can be split and

346
00:15:02,980 --> 00:15:08,740
what we found is that<font color="#E5E5E5"> when splitting</font>

347
00:15:05,620 --> 00:15:10,210
these messages up that Facebook would

348
00:15:08,740 --> 00:15:12,610
actually have some slightly<font color="#E5E5E5"> different</font>

349
00:15:10,210 --> 00:15:14,440
<font color="#CCCCCC">behavior</font><font color="#E5E5E5"> you could actually just omit</font>

350
00:15:12,610 --> 00:15:16,480
the change cypher spec and the finished

351
00:15:14,440 --> 00:15:19,630
message<font color="#E5E5E5"> and you end up with something</font>

352
00:15:16,480 --> 00:15:21,250
like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> so now this</font><font color="#E5E5E5"> is with after</font>

353
00:15:19,630 --> 00:15:24,400
<font color="#CCCCCC">Facebook had deployed their first patch</font>

354
00:15:21,250 --> 00:15:25,930
we run our test again<font color="#CCCCCC"> but</font><font color="#E5E5E5"> this time we</font>

355
00:15:24,400 --> 00:15:28,540
are<font color="#CCCCCC"> not</font><font color="#E5E5E5"> sending out the final change</font>

356
00:15:25,930 --> 00:15:30,849
<font color="#CCCCCC">Cypress</font><font color="#E5E5E5"> back and finish message and you</font>

357
00:15:28,540 --> 00:15:33,040
can see on the left here when we send an

358
00:15:30,850 --> 00:15:34,540
invalid padding<font color="#E5E5E5"> Facebook is in</font><font color="#CCCCCC"> the</font>

359
00:15:33,040 --> 00:15:37,599
<font color="#E5E5E5">lately tearing down the connection with</font>

360
00:15:34,540 --> 00:15:39,790
the TCP<font color="#E5E5E5"> fin but if we have a PCI</font>

361
00:15:37,600 --> 00:15:41,949
conforming client key exchange meaning

362
00:15:39,790 --> 00:15:44,380
<font color="#E5E5E5">it has that valid block prefix and</font>

363
00:15:41,949 --> 00:15:46,449
everything<font color="#E5E5E5"> Facebook servers were leaving</font>

364
00:15:44,380 --> 00:15:49,449
the connection open<font color="#E5E5E5"> waiting</font><font color="#CCCCCC"> for us to</font>

365
00:15:46,449 --> 00:15:51,699
send more data and it turned out that

366
00:15:49,449 --> 00:15:53,920
<font color="#CCCCCC">Facebook was not the only</font><font color="#E5E5E5"> server that</font>

367
00:15:51,699 --> 00:15:56,290
<font color="#E5E5E5">was doing this when we kept scanning the</font>

368
00:15:53,920 --> 00:15:59,500
<font color="#CCCCCC">internet we found that various other</font>

369
00:15:56,290 --> 00:16:03,099
products so for example<font color="#CCCCCC"> f5s big IP here</font>

370
00:15:59,500 --> 00:16:04,839
<font color="#E5E5E5">this is one of</font><font color="#CCCCCC"> the various</font><font color="#E5E5E5"> Oracle's that</font>

371
00:16:03,100 --> 00:16:07,089
<font color="#E5E5E5">was in their product you can</font><font color="#CCCCCC"> see that</font>

372
00:16:04,839 --> 00:16:08,740
they were<font color="#E5E5E5"> sending an alert in one case</font>

373
00:16:07,089 --> 00:16:12,069
and leaving the connection open<font color="#E5E5E5"> in the</font>

374
00:16:08,740 --> 00:16:13,930
other case<font color="#E5E5E5"> but</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> if we would not send</font>

375
00:16:12,069 --> 00:16:17,189
<font color="#E5E5E5">that change</font><font color="#CCCCCC"> cypress peck and finished</font>

376
00:16:13,930 --> 00:16:20,199
message<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> one more example</font>

377
00:16:17,190 --> 00:16:22,540
with the citrix netscaler<font color="#CCCCCC"> this one we</font>

378
00:16:20,199 --> 00:16:24,310
would<font color="#E5E5E5"> send the full exchange and the</font>

379
00:16:22,540 --> 00:16:26,139
connection<font color="#E5E5E5"> status would again indicate</font>

380
00:16:24,310 --> 00:16:31,930
to<font color="#CCCCCC"> us whether or</font><font color="#E5E5E5"> not we had valid</font>

381
00:16:26,139 --> 00:16:34,480
padding<font color="#E5E5E5"> yeah so what is the impact of</font>

382
00:16:31,930 --> 00:16:37,510
this you will<font color="#E5E5E5"> assume</font><font color="#CCCCCC"> okay we can decrypt</font>

383
00:16:34,480 --> 00:16:40,709
messages<font color="#E5E5E5"> that sounds pretty bad</font><font color="#CCCCCC"> but in</font>

384
00:16:37,510 --> 00:16:44,410
<font color="#E5E5E5">practice it it's a bit more complicated</font>

385
00:16:40,709 --> 00:16:46,750
<font color="#CCCCCC">so we</font><font color="#E5E5E5"> learnt earlier</font><font color="#CCCCCC"> that there are at</font>

386
00:16:44,410 --> 00:16:50,230
<font color="#CCCCCC">least two different</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to do TLS</font>

387
00:16:46,750 --> 00:16:51,639
handshakes one is this older RSA

388
00:16:50,230 --> 00:16:53,800
encryption modes and<font color="#E5E5E5"> there are these</font>

389
00:16:51,639 --> 00:16:56,500
more<font color="#E5E5E5"> modern modes that use only RSA</font>

390
00:16:53,800 --> 00:17:00,250
signatures and use it if you had a

391
00:16:56,500 --> 00:17:03,940
<font color="#E5E5E5">monkey exchange and if the server</font><font color="#CCCCCC"> and or</font>

392
00:17:00,250 --> 00:17:05,380
a<font color="#E5E5E5"> client</font><font color="#CCCCCC"> only support this old mode</font><font color="#E5E5E5"> so</font>

393
00:17:03,940 --> 00:17:06,549
we have a connection<font color="#E5E5E5"> with this old mode</font>

394
00:17:05,380 --> 00:17:09,699
this<font color="#CCCCCC"> is kind of the most devastating</font>

395
00:17:06,549 --> 00:17:12,309
attack because then we can<font color="#CCCCCC"> just record</font>

396
00:17:09,699 --> 00:17:16,720
<font color="#CCCCCC">that data later undo the attack and</font><font color="#E5E5E5"> then</font>

397
00:17:12,309 --> 00:17:19,149
decrypt<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the data however these days</font>

398
00:17:16,720 --> 00:17:20,919
<font color="#E5E5E5">most people</font><font color="#CCCCCC"> prefer to</font><font color="#E5E5E5"> use these more</font>

399
00:17:19,150 --> 00:17:23,470
modern<font color="#E5E5E5"> modes of course and they still</font>

400
00:17:20,919 --> 00:17:27,790
support<font color="#E5E5E5"> earth encryption for legacy</font>

401
00:17:23,470 --> 00:17:29,950
<font color="#CCCCCC">connections but they would usually</font><font color="#E5E5E5"> not</font>

402
00:17:27,790 --> 00:17:33,158
use them because<font color="#E5E5E5"> all the modern browsers</font>

403
00:17:29,950 --> 00:17:35,290
<font color="#E5E5E5">support these different modes</font><font color="#CCCCCC"> and if you</font>

404
00:17:33,159 --> 00:17:39,130
have server<font color="#CCCCCC"> that supports</font><font color="#E5E5E5"> both then it</font>

405
00:17:35,290 --> 00:17:41,530
will choose the<font color="#E5E5E5"> diffie-hellman mode this</font>

406
00:17:39,130 --> 00:17:43,450
could still<font color="#E5E5E5"> be</font><font color="#CCCCCC"> attacked in theory</font><font color="#E5E5E5"> but in</font>

407
00:17:41,530 --> 00:17:45,370
<font color="#E5E5E5">order to</font><font color="#CCCCCC"> do that you would have</font><font color="#E5E5E5"> to do</font>

408
00:17:43,450 --> 00:17:47,380
this attack really fast

409
00:17:45,370 --> 00:17:49,389
and as I<font color="#E5E5E5"> mentioned earlier we're talking</font>

410
00:17:47,380 --> 00:17:51,880
<font color="#CCCCCC">about</font><font color="#E5E5E5"> several tens of thousands of</font>

411
00:17:49,390 --> 00:17:54,790
connections<font color="#CCCCCC"> so this would be challenging</font>

412
00:17:51,880 --> 00:17:56,920
and we<font color="#E5E5E5"> we think this might be possible</font>

413
00:17:54,790 --> 00:17:58,780
<font color="#CCCCCC">but we've never performed</font><font color="#E5E5E5"> such an attack</font>

414
00:17:56,920 --> 00:18:00,460
so<font color="#CCCCCC"> we don't know</font><font color="#E5E5E5"> if it's practical</font><font color="#CCCCCC"> but</font>

415
00:17:58,780 --> 00:18:02,830
if you think<font color="#CCCCCC"> about the target like</font>

416
00:18:00,460 --> 00:18:04,570
<font color="#E5E5E5">Facebook they have many servers they are</font>

417
00:18:02,830 --> 00:18:06,939
<font color="#E5E5E5">fast so you could also parallel eyes</font>

418
00:18:04,570 --> 00:18:09,310
this attack so you<font color="#E5E5E5"> could run it from ten</font>

419
00:18:06,940 --> 00:18:11,380
different<font color="#E5E5E5"> places on the internet and so</font>

420
00:18:09,310 --> 00:18:14,110
this should<font color="#CCCCCC"> be feasible but we never</font>

421
00:18:11,380 --> 00:18:16,300
tried it in practice but still the<font color="#E5E5E5"> idea</font>

422
00:18:14,110 --> 00:18:18,100
is<font color="#E5E5E5"> like even if server and client</font>

423
00:18:16,300 --> 00:18:20,260
support these more modern modes and have

424
00:18:18,100 --> 00:18:22,120
this far back to this<font color="#E5E5E5"> older mode that</font>

425
00:18:20,260 --> 00:18:25,800
could still be<font color="#E5E5E5"> used for an attack but</font>

426
00:18:22,120 --> 00:18:25,800
this is a much more challenging<font color="#E5E5E5"> attack</font>

427
00:18:27,090 --> 00:18:32,290
<font color="#CCCCCC">yeah Facebook of course was</font><font color="#E5E5E5"> not the only</font>

428
00:18:30,040 --> 00:18:35,020
<font color="#E5E5E5">one over</font><font color="#CCCCCC"> host so here are a few</font><font color="#E5E5E5"> others</font>

429
00:18:32,290 --> 00:18:36,909
maybe you recognize<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the company</font>

430
00:18:35,020 --> 00:18:40,300
names<font color="#CCCCCC"> I heard</font><font color="#E5E5E5"> something like quite</font>

431
00:18:36,910 --> 00:18:47,560
<font color="#CCCCCC">well-known like epic</font><font color="#E5E5E5"> um Cisco</font><font color="#CCCCCC"> come eBay</font>

432
00:18:40,300 --> 00:18:49,270
paper something<font color="#E5E5E5"> from Microsoft</font><font color="#CCCCCC"> the</font>

433
00:18:47,560 --> 00:18:51,520
figures so we knew<font color="#E5E5E5"> how these web pages</font>

434
00:18:49,270 --> 00:18:52,960
<font color="#E5E5E5">are vulnerable but what's really</font><font color="#CCCCCC"> a</font>

435
00:18:51,520 --> 00:18:56,430
challenge if<font color="#CCCCCC"> you do something like</font><font color="#E5E5E5"> this</font>

436
00:18:52,960 --> 00:18:59,170
<font color="#CCCCCC">is then we</font><font color="#E5E5E5"> need to find the vendors and</font>

437
00:18:56,430 --> 00:19:01,720
so we're trying<font color="#E5E5E5"> to contact the owners of</font>

438
00:18:59,170 --> 00:19:04,030
these web pages<font color="#E5E5E5"> but many people are not</font>

439
00:19:01,720 --> 00:19:06,430
<font color="#CCCCCC">very happy</font><font color="#E5E5E5"> to tell</font><font color="#CCCCCC"> you about what</font>

440
00:19:04,030 --> 00:19:13,360
products<font color="#E5E5E5"> they're using</font><font color="#CCCCCC"> for example</font><font color="#E5E5E5"> like</font>

441
00:19:06,430 --> 00:19:16,360
the first one here the epic on Apple<font color="#CCCCCC"> is</font>

442
00:19:13,360 --> 00:19:22,570
using Citrix devices<font color="#E5E5E5"> but they didn't</font>

443
00:19:16,360 --> 00:19:24,879
<font color="#E5E5E5">want to tell us this but trying</font><font color="#CCCCCC"> to</font>

444
00:19:22,570 --> 00:19:26,290
contact<font color="#E5E5E5"> a lot of web pages</font><font color="#CCCCCC"> after we</font>

445
00:19:24,880 --> 00:19:28,180
found a lot of<font color="#CCCCCC"> vendors that</font><font color="#E5E5E5"> were</font>

446
00:19:26,290 --> 00:19:30,760
<font color="#E5E5E5">vulnerable so we figure out yeah five</font>

447
00:19:28,180 --> 00:19:33,820
devices<font color="#E5E5E5"> were vulnerable Citrix devices</font>

448
00:19:30,760 --> 00:19:36,520
<font color="#CCCCCC">radware</font><font color="#E5E5E5"> Cisco Cisco had two</font><font color="#CCCCCC"> different</font>

449
00:19:33,820 --> 00:19:39,939
products<font color="#E5E5E5"> that were vulnerable</font><font color="#CCCCCC"> then we</font>

450
00:19:36,520 --> 00:19:42,100
tested various open<font color="#CCCCCC"> source libraries</font><font color="#E5E5E5"> we</font>

451
00:19:39,940 --> 00:19:46,150
found a bouncy castle was vulnerable

452
00:19:42,100 --> 00:19:49,659
along with SSL<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then after we</font>

453
00:19:46,150 --> 00:19:51,180
<font color="#CCCCCC">published our paper other people found</font>

454
00:19:49,660 --> 00:19:54,100
<font color="#E5E5E5">out that</font><font color="#CCCCCC"> there were</font><font color="#E5E5E5"> more vulnerable</font>

455
00:19:51,180 --> 00:19:57,740
products for example<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> networked</font>

456
00:19:54,100 --> 00:20:01,279
<font color="#E5E5E5">IBM several products from Symantec</font>

457
00:19:57,740 --> 00:20:03,470
<font color="#CCCCCC">unisys</font><font color="#E5E5E5"> what was the</font><font color="#CCCCCC"> kea</font><font color="#E5E5E5"> participants</font><font color="#CCCCCC"> EP</font>

458
00:20:01,279 --> 00:20:07,279
<font color="#CCCCCC">I heard it's important I have no idea</font>

459
00:20:03,470 --> 00:20:09,350
what it is<font color="#CCCCCC"> and</font><font color="#E5E5E5"> cambium chips which are</font>

460
00:20:07,279 --> 00:20:12,049
accelerator chips which are used in many

461
00:20:09,350 --> 00:20:15,709
<font color="#CCCCCC">other products</font><font color="#E5E5E5"> so we had a long</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> of</font>

462
00:20:12,049 --> 00:20:18,260
<font color="#CCCCCC">foreigner aligners</font><font color="#E5E5E5"> the Cisco thing was</font>

463
00:20:15,710 --> 00:20:20,630
particularly interesting so we heard

464
00:20:18,260 --> 00:20:24,140
from some<font color="#E5E5E5"> webpage operator that they</font>

465
00:20:20,630 --> 00:20:27,320
were using a<font color="#E5E5E5"> Cisco AC and so we</font>

466
00:20:24,140 --> 00:20:29,899
contacted<font color="#E5E5E5"> Cisco about it obviously</font>

467
00:20:27,320 --> 00:20:32,389
and Cisco told us yeah we<font color="#E5E5E5"> won't fix this</font>

468
00:20:29,899 --> 00:20:35,090
because<font color="#E5E5E5"> this</font><font color="#CCCCCC"> device has been out of</font>

469
00:20:32,390 --> 00:20:37,340
support for for<font color="#E5E5E5"> many years so we're not</font>

470
00:20:35,090 --> 00:20:39,529
<font color="#E5E5E5">doing any updates on this anymore and</font>

471
00:20:37,340 --> 00:20:41,510
this vulnerability<font color="#E5E5E5"> was particularly</font>

472
00:20:39,529 --> 00:20:43,520
<font color="#E5E5E5">severe because these devices</font><font color="#CCCCCC"> didn't</font>

473
00:20:41,510 --> 00:20:46,250
support<font color="#E5E5E5"> any</font><font color="#CCCCCC"> of these different</font><font color="#E5E5E5"> modes so</font>

474
00:20:43,520 --> 00:20:48,470
you would<font color="#CCCCCC"> always</font><font color="#E5E5E5"> have this classic as a</font>

475
00:20:46,250 --> 00:20:52,820
heat exchange so we could easily decrypt

476
00:20:48,470 --> 00:20:54,679
traffic from<font color="#CCCCCC"> that</font><font color="#E5E5E5"> but there were a lot</font>

477
00:20:52,820 --> 00:20:58,210
<font color="#CCCCCC">of web pages that</font><font color="#E5E5E5"> were still using these</font>

478
00:20:54,679 --> 00:21:02,419
<font color="#CCCCCC">AC devices for example Cisco come and</font>

479
00:20:58,210 --> 00:21:04,250
like I told<font color="#E5E5E5"> them</font><font color="#CCCCCC"> that and they didn't</font>

480
00:21:02,419 --> 00:21:05,990
answer<font color="#E5E5E5"> that email and and a</font><font color="#CCCCCC"> few</font><font color="#E5E5E5"> weeks</font>

481
00:21:04,250 --> 00:21:07,970
<font color="#CCCCCC">later I said</font><font color="#E5E5E5"> yeah we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> publish</font>

482
00:21:05,990 --> 00:21:10,309
<font color="#E5E5E5">this soon and I think Cisco comm is</font>

483
00:21:07,970 --> 00:21:12,649
<font color="#E5E5E5">running these AC devices and I'm</font><font color="#CCCCCC"> gonna</font>

484
00:21:10,309 --> 00:21:15,678
<font color="#CCCCCC">publish that - do you want to comment on</font>

485
00:21:12,649 --> 00:21:17,178
that<font color="#E5E5E5"> didn't get an</font><font color="#CCCCCC"> answer on that</font><font color="#E5E5E5"> it's</font>

486
00:21:15,679 --> 00:21:18,799
no longer<font color="#E5E5E5"> running on that right now</font>

487
00:21:17,179 --> 00:21:20,419
<font color="#E5E5E5">oh yeah where they have a firewall</font><font color="#CCCCCC"> on</font>

488
00:21:18,799 --> 00:21:21,889
<font color="#CCCCCC">purpose yeah maybe they have a firewall</font>

489
00:21:20,419 --> 00:21:29,210
<font color="#E5E5E5">or maybe you</font><font color="#CCCCCC"> can't</font><font color="#E5E5E5"> figure out what the</font>

490
00:21:21,890 --> 00:21:30,860
origin<font color="#E5E5E5"> is yeah what we also did is that</font>

491
00:21:29,210 --> 00:21:33,260
we<font color="#E5E5E5"> try to reach out to developers of</font>

492
00:21:30,860 --> 00:21:34,879
<font color="#E5E5E5">test tools and I mean probably most of</font>

493
00:21:33,260 --> 00:21:37,010
you<font color="#E5E5E5"> know this right this is the test</font>

494
00:21:34,880 --> 00:21:39,320
from quality as<font color="#CCCCCC"> its elapsed</font><font color="#E5E5E5"> test which</font>

495
00:21:37,010 --> 00:21:42,080
is very popular<font color="#E5E5E5"> when you want to know if</font>

496
00:21:39,320 --> 00:21:47,240
your<font color="#CCCCCC"> els configuration on your</font><font color="#E5E5E5"> website</font>

497
00:21:42,080 --> 00:21:49,668
is any good<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> I think this a</font>

498
00:21:47,240 --> 00:21:52,100
<font color="#E5E5E5">crucial see here because I mean we're</font>

499
00:21:49,669 --> 00:21:55,460
talking<font color="#E5E5E5"> about vulnerability from 1998</font>

500
00:21:52,100 --> 00:21:57,379
<font color="#E5E5E5">and why is this still around and the</font>

501
00:21:55,460 --> 00:21:59,120
obvious answer<font color="#CCCCCC"> is</font><font color="#E5E5E5"> nobody is test was</font>

502
00:21:57,380 --> 00:22:02,299
testing<font color="#CCCCCC"> for it before we did this</font>

503
00:21:59,120 --> 00:22:04,100
<font color="#E5E5E5">research</font><font color="#CCCCCC"> like all the commonly</font><font color="#E5E5E5"> easily</font>

504
00:22:02,299 --> 00:22:05,899
available tools they didn't have a test

505
00:22:04,100 --> 00:22:08,178
<font color="#E5E5E5">for this vulnerability and that's I</font>

506
00:22:05,899 --> 00:22:10,699
<font color="#E5E5E5">think why it was still around</font><font color="#CCCCCC"> and where</font>

507
00:22:08,179 --> 00:22:11,559
it was still so prevalent so we reached

508
00:22:10,700 --> 00:22:14,919
<font color="#E5E5E5">out to as</font>

509
00:22:11,559 --> 00:22:16,960
and they added<font color="#E5E5E5"> a check for it and yes</font>

510
00:22:14,919 --> 00:22:19,870
you can<font color="#E5E5E5"> see here now you get an F if</font>

511
00:22:16,960 --> 00:22:24,970
you're vulnerable to<font color="#E5E5E5"> this attack</font><font color="#CCCCCC"> we were</font>

512
00:22:19,870 --> 00:22:26,709
<font color="#CCCCCC">to</font><font color="#E5E5E5"> test SSL</font><font color="#CCCCCC"> which is a very powerful</font><font color="#E5E5E5"> SSL</font>

513
00:22:24,970 --> 00:22:30,909
testing tool which is written<font color="#E5E5E5"> in bash</font>

514
00:22:26,710 --> 00:22:33,549
so quite impressive TLS<font color="#E5E5E5"> attacker which</font>

515
00:22:30,909 --> 00:22:37,389
is written<font color="#E5E5E5"> by</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> our co-authors so</font>

516
00:22:33,549 --> 00:22:40,179
and TLS<font color="#E5E5E5"> father which is from a ratchet</font>

517
00:22:37,389 --> 00:22:43,600
developer and also tripwire yes<font color="#E5E5E5"> tripwire</font>

518
00:22:40,179 --> 00:22:47,139
<font color="#E5E5E5">IP 360 was</font><font color="#CCCCCC"> killed four as well</font><font color="#E5E5E5"> yeah so</font>

519
00:22:43,600 --> 00:22:48,879
so<font color="#CCCCCC"> before robot</font><font color="#E5E5E5"> no easily no test tool</font>

520
00:22:47,139 --> 00:22:51,309
was available<font color="#CCCCCC"> really</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> blacking</font><font color="#E5E5E5"> Baja</font>

521
00:22:48,879 --> 00:22:53,949
<font color="#E5E5E5">text and after that so we hope that</font><font color="#CCCCCC"> now</font>

522
00:22:51,309 --> 00:22:56,860
these vulnerabilities will be detected

523
00:22:53,950 --> 00:22:58,629
<font color="#CCCCCC">more easily and we also think we were</font>

524
00:22:56,860 --> 00:23:01,299
successful<font color="#CCCCCC"> with that because as I said</font>

525
00:22:58,629 --> 00:23:03,668
<font color="#E5E5E5">earlier</font><font color="#CCCCCC"> after we published this research</font>

526
00:23:01,299 --> 00:23:05,259
<font color="#CCCCCC">many more</font><font color="#E5E5E5"> products showed up to be</font>

527
00:23:03,669 --> 00:23:09,220
<font color="#CCCCCC">vulnerable which we did not know about</font>

528
00:23:05,259 --> 00:23:10,990
before yeah

529
00:23:09,220 --> 00:23:13,990
what we also did was a capture the flag

530
00:23:10,990 --> 00:23:15,789
contest<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we thought</font><font color="#E5E5E5"> yeah we want to</font>

531
00:23:13,990 --> 00:23:18,580
give<font color="#CCCCCC"> people a chance to try to</font>

532
00:23:15,789 --> 00:23:21,009
re-implement this attack so originally

533
00:23:18,580 --> 00:23:22,418
we did<font color="#E5E5E5"> not publish our attack tool we</font>

534
00:23:21,009 --> 00:23:25,600
have<font color="#E5E5E5"> published it later after the</font>

535
00:23:22,419 --> 00:23:28,480
<font color="#E5E5E5">capture the flag so and we set up a</font>

536
00:23:25,600 --> 00:23:31,389
vulnerable hosts and we<font color="#CCCCCC"> gave people an</font>

537
00:23:28,480 --> 00:23:34,059
encrypted message<font color="#CCCCCC"> and they should</font>

538
00:23:31,389 --> 00:23:37,539
decrypt it<font color="#E5E5E5"> by implementing this attack</font>

539
00:23:34,059 --> 00:23:39,879
against this<font color="#E5E5E5"> host and then they got a</font>

540
00:23:37,539 --> 00:23:40,299
message<font color="#E5E5E5"> which told them about the second</font>

541
00:23:39,879 --> 00:23:42,219
<font color="#CCCCCC">host</font>

542
00:23:40,299 --> 00:23:44,168
but it only<font color="#E5E5E5"> gave them the key of that</font>

543
00:23:42,220 --> 00:23:45,850
host<font color="#E5E5E5"> and interestingly this seemed to be</font>

544
00:23:44,169 --> 00:23:47,919
<font color="#CCCCCC">the most</font><font color="#E5E5E5"> difficult part because I got</font>

545
00:23:45,850 --> 00:23:49,570
many people<font color="#E5E5E5"> asking me hey how do I find</font>

546
00:23:47,919 --> 00:23:52,330
your second toast<font color="#E5E5E5"> you're only giving</font><font color="#CCCCCC"> me</font>

547
00:23:49,570 --> 00:23:54,039
the key<font color="#E5E5E5"> the idea there was that you can</font>

548
00:23:52,330 --> 00:23:56,139
use that key<font color="#CCCCCC"> and search in the</font>

549
00:23:54,039 --> 00:23:57,700
certificate<font color="#CCCCCC"> transparency database and</font>

550
00:23:56,139 --> 00:24:00,369
then find<font color="#E5E5E5"> the host name and then you</font><font color="#CCCCCC"> had</font>

551
00:23:57,700 --> 00:24:03,580
that host and the second step was then

552
00:24:00,369 --> 00:24:06,189
you had to sign a message<font color="#E5E5E5"> because the</font>

553
00:24:03,580 --> 00:24:08,080
<font color="#E5E5E5">the attack for signatures</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> it requires</font>

554
00:24:06,190 --> 00:24:11,080
an additional<font color="#E5E5E5"> step so this is a bit more</font>

555
00:24:08,080 --> 00:24:12,759
complicated<font color="#E5E5E5"> and I think</font><font color="#CCCCCC"> we had like 10</font>

556
00:24:11,080 --> 00:24:15,549
<font color="#CCCCCC">people who</font><font color="#E5E5E5"> finish the capture the flag</font>

557
00:24:12,759 --> 00:24:17,740
successfully so I think<font color="#E5E5E5"> this was a nice</font>

558
00:24:15,549 --> 00:24:19,690
thing so when you publish a

559
00:24:17,740 --> 00:24:23,009
vulnerability also give people<font color="#CCCCCC"> a chance</font>

560
00:24:19,690 --> 00:24:23,009
to practically play with it

561
00:24:23,930 --> 00:24:29,550
so then<font color="#E5E5E5"> there's this issue of timing</font>

562
00:24:27,510 --> 00:24:31,680
attacks so we did<font color="#E5E5E5"> not really look into</font>

563
00:24:29,550 --> 00:24:34,230
<font color="#E5E5E5">this in detail but</font><font color="#CCCCCC"> I mentioned it</font>

564
00:24:31,680 --> 00:24:38,340
earlier<font color="#E5E5E5"> that particular these changes in</font>

565
00:24:34,230 --> 00:24:44,850
TLS 1.2 were also to prevent<font color="#E5E5E5"> timing</font>

566
00:24:38,340 --> 00:24:45,959
attacks but<font color="#E5E5E5"> so these timing</font>

567
00:24:44,850 --> 00:24:48,090
countermeasures are relatively

568
00:24:45,960 --> 00:24:50,010
complicated and there<font color="#E5E5E5"> are some</font><font color="#CCCCCC"> TLS ticks</font>

569
00:24:48,090 --> 00:24:51,750
that<font color="#E5E5E5"> where it's well known that they</font>

570
00:24:50,010 --> 00:24:53,879
just don't implement protection against

571
00:24:51,750 --> 00:24:57,270
<font color="#E5E5E5">these timing attacks for example</font><font color="#CCCCCC"> in NSS</font>

572
00:24:53,880 --> 00:24:59,760
there's an open bar<font color="#E5E5E5"> but it's been hopes</font>

573
00:24:57,270 --> 00:25:02,370
in several years I guess it's not that

574
00:24:59,760 --> 00:25:08,850
<font color="#E5E5E5">relevant because almost nobody is using</font>

575
00:25:02,370 --> 00:25:10,530
<font color="#E5E5E5">NSS on servers but yeah but then we</font>

576
00:25:08,850 --> 00:25:14,909
<font color="#CCCCCC">learned</font><font color="#E5E5E5"> something that even if you</font>

577
00:25:10,530 --> 00:25:17,280
<font color="#E5E5E5">implement the specification from TLS 1.2</font>

578
00:25:14,910 --> 00:25:21,690
which should protect you against timing

579
00:25:17,280 --> 00:25:24,270
attacks you may still<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> problem and</font>

580
00:25:21,690 --> 00:25:26,580
<font color="#CCCCCC">that</font><font color="#E5E5E5"> comes back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this that crypto is</font>

581
00:25:24,270 --> 00:25:28,830
just<font color="#E5E5E5"> math</font><font color="#CCCCCC"> so when we talk about</font>

582
00:25:26,580 --> 00:25:30,870
cryptographic keys or signatures

583
00:25:28,830 --> 00:25:33,600
<font color="#CCCCCC">everything it's</font><font color="#E5E5E5"> just we're talking about</font>

584
00:25:30,870 --> 00:25:37,229
numbers right cryptographic key and RSA

585
00:25:33,600 --> 00:25:41,939
<font color="#E5E5E5">key is two numbers</font><font color="#CCCCCC"> signature is one</font>

586
00:25:37,230 --> 00:25:44,700
number<font color="#E5E5E5"> and so these cryptographic</font>

587
00:25:41,940 --> 00:25:47,040
libraries like open<font color="#E5E5E5"> SSL they use bignum</font>

588
00:25:44,700 --> 00:25:49,470
libraries that is like they<font color="#E5E5E5"> have</font>

589
00:25:47,040 --> 00:25:53,970
<font color="#E5E5E5">mathematical functions that operate on</font>

590
00:25:49,470 --> 00:25:55,380
numbers of arbitrary<font color="#CCCCCC"> size and this</font><font color="#E5E5E5"> has</font>

591
00:25:53,970 --> 00:25:58,050
the<font color="#E5E5E5"> effect that if you have smaller</font>

592
00:25:55,380 --> 00:26:00,660
numbers they take less memory because

593
00:25:58,050 --> 00:26:04,230
like you have I don't<font color="#E5E5E5"> know your number</font>

594
00:26:00,660 --> 00:26:06,810
<font color="#E5E5E5">is 500 bytes large so you have a buffer</font>

595
00:26:04,230 --> 00:26:10,050
<font color="#CCCCCC">of 500 bytes maybe a size value in front</font>

596
00:26:06,810 --> 00:26:11,669
<font color="#E5E5E5">and they restore your number</font><font color="#CCCCCC"> and but if</font>

597
00:26:10,050 --> 00:26:16,800
you have a smaller<font color="#CCCCCC"> number</font><font color="#E5E5E5"> it's less</font>

598
00:26:11,670 --> 00:26:19,860
space<font color="#CCCCCC"> and if you look</font><font color="#E5E5E5"> back at</font><font color="#CCCCCC"> RSA okay</font>

599
00:26:16,800 --> 00:26:22,550
<font color="#E5E5E5">ours is to</font><font color="#CCCCCC"> some formula</font><font color="#E5E5E5"> where you do</font>

600
00:26:19,860 --> 00:26:25,290
some exponentiation<font color="#E5E5E5"> and the modulus and</font>

601
00:26:22,550 --> 00:26:30,060
if you have a standard<font color="#E5E5E5"> key size then the</font>

602
00:26:25,290 --> 00:26:33,300
result is 250 256 bytes large<font color="#CCCCCC"> usually</font>

603
00:26:30,060 --> 00:26:37,200
but it may start with<font color="#CCCCCC"> the 0 and then</font>

604
00:26:33,300 --> 00:26:41,040
it's 255 bytes or<font color="#E5E5E5"> 254 if it starts with</font>

605
00:26:37,200 --> 00:26:44,190
<font color="#CCCCCC">2</font><font color="#E5E5E5"> zeros</font><font color="#CCCCCC"> so simply the fact that this big</font>

606
00:26:41,040 --> 00:26:45,810
<font color="#CCCCCC">name library has variable size</font><font color="#E5E5E5"> may give</font>

607
00:26:44,190 --> 00:26:49,890
you another timing signal because

608
00:26:45,810 --> 00:26:56,879
storing 255 bytes<font color="#E5E5E5"> takes less time</font><font color="#CCCCCC"> than</font>

609
00:26:49,890 --> 00:26:59,280
<font color="#E5E5E5">storing 256 bytes</font><font color="#CCCCCC"> so you may have a</font><font color="#E5E5E5"> side</font>

610
00:26:56,880 --> 00:27:04,050
<font color="#E5E5E5">channel due to the use</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> big name</font>

611
00:26:59,280 --> 00:27:06,660
libraries with variable size<font color="#CCCCCC"> if this is</font>

612
00:27:04,050 --> 00:27:08,879
practical<font color="#E5E5E5"> we don't know this is kind of</font>

613
00:27:06,660 --> 00:27:11,700
an open<font color="#E5E5E5"> research question if someone</font>

614
00:27:08,880 --> 00:27:17,250
<font color="#E5E5E5">wants to have a research topic</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> be</font>

615
00:27:11,700 --> 00:27:20,130
an<font color="#CCCCCC"> interesting one and to our knowledge</font>

616
00:27:17,250 --> 00:27:23,820
this<font color="#E5E5E5"> effect practically all common TLS</font>

617
00:27:20,130 --> 00:27:26,490
libraries and<font color="#CCCCCC"> david benjamin from google</font>

618
00:27:23,820 --> 00:27:29,520
has<font color="#E5E5E5"> recently fixed this in boring as a</font>

619
00:27:26,490 --> 00:27:32,490
cell and has submitted a pull request<font color="#E5E5E5"> to</font>

620
00:27:29,520 --> 00:27:34,260
<font color="#CCCCCC">organize a cell but right now they are</font>

621
00:27:32,490 --> 00:27:41,790
<font color="#E5E5E5">still the stuff that's out there is</font>

622
00:27:34,260 --> 00:27:43,200
usually one<font color="#CCCCCC"> or two this yeah so one of</font>

623
00:27:41,790 --> 00:27:46,110
the<font color="#CCCCCC"> other things that we were seeing</font>

624
00:27:43,200 --> 00:27:48,480
<font color="#E5E5E5">during scans is the</font><font color="#CCCCCC"> internet is a</font><font color="#E5E5E5"> lot of</font>

625
00:27:46,110 --> 00:27:52,229
hosts would respond let's say

626
00:27:48,480 --> 00:27:54,210
inconsistently so in some<font color="#E5E5E5"> cases I would</font>

627
00:27:52,230 --> 00:27:55,860
see that a<font color="#CCCCCC"> root</font><font color="#E5E5E5"> see that certificate</font>

628
00:27:54,210 --> 00:27:57,480
chains would actually come<font color="#CCCCCC"> back to in</font>

629
00:27:55,860 --> 00:28:00,120
response<font color="#E5E5E5"> to a malformed client key</font>

630
00:27:57,480 --> 00:28:02,220
exchange but in other cases we would

631
00:28:00,120 --> 00:28:04,919
<font color="#CCCCCC">actually just</font><font color="#E5E5E5"> see what appeared to</font><font color="#CCCCCC"> be</font>

632
00:28:02,220 --> 00:28:08,310
random bytes<font color="#CCCCCC"> I entropy streams of data</font>

633
00:28:04,920 --> 00:28:10,560
unclear what it was exactly<font color="#E5E5E5"> the only</font>

634
00:28:08,310 --> 00:28:14,100
vendor that we were able<font color="#CCCCCC"> to pin down on</font>

635
00:28:10,560 --> 00:28:15,810
<font color="#E5E5E5">this is this communicate</font><font color="#CCCCCC"> Pro but there</font>

636
00:28:14,100 --> 00:28:17,550
are definitely others out<font color="#CCCCCC"> there based on</font>

637
00:28:15,810 --> 00:28:19,350
<font color="#E5E5E5">looking the debt at the</font><font color="#CCCCCC"> data that</font><font color="#E5E5E5"> we had</font>

638
00:28:17,550 --> 00:28:23,250
from scans of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Alexa top million</font>

639
00:28:19,350 --> 00:28:25,409
sites and this leads me<font color="#CCCCCC"> to believe that</font>

640
00:28:23,250 --> 00:28:28,020
<font color="#E5E5E5">maybe there's something out there</font><font color="#CCCCCC"> that's</font>

641
00:28:25,410 --> 00:28:29,280
like<font color="#E5E5E5"> a heartbleed style bug</font><font color="#CCCCCC"> within the</font>

642
00:28:28,020 --> 00:28:32,940
<font color="#CCCCCC">way that these</font><font color="#E5E5E5"> things are being</font>

643
00:28:29,280 --> 00:28:35,070
processed<font color="#CCCCCC"> and so perhaps if some of you</font>

644
00:28:32,940 --> 00:28:37,410
want<font color="#CCCCCC"> to take the robots.txt script and</font>

645
00:28:35,070 --> 00:28:39,270
run it against obscure hosts<font color="#E5E5E5"> that you</font>

646
00:28:37,410 --> 00:28:41,160
have if you get inconsistent results

647
00:28:39,270 --> 00:28:42,450
<font color="#E5E5E5">might be worth digging into that a</font>

648
00:28:41,160 --> 00:28:44,520
little<font color="#E5E5E5"> bit further</font><font color="#CCCCCC"> to see what's going</font>

649
00:28:42,450 --> 00:28:48,940
<font color="#CCCCCC">on</font>

650
00:28:44,520 --> 00:28:50,560
yeah so after that<font color="#E5E5E5"> you might wonder what</font>

651
00:28:48,940 --> 00:28:52,360
what should<font color="#E5E5E5"> we do about this because</font>

652
00:28:50,560 --> 00:28:54,429
like<font color="#E5E5E5"> these countermeasures are really</font>

653
00:28:52,360 --> 00:28:56,110
complicated<font color="#CCCCCC"> and many people get them</font>

654
00:28:54,430 --> 00:28:57,550
wrong<font color="#CCCCCC"> and then they are still these</font>

655
00:28:56,110 --> 00:28:59,590
timing issues even<font color="#E5E5E5"> if you do the</font>

656
00:28:57,550 --> 00:29:01,540
countermeasures<font color="#CCCCCC"> and what we actually</font>

657
00:28:59,590 --> 00:29:03,790
<font color="#E5E5E5">recommend is that</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> run tear less</font>

658
00:29:01,540 --> 00:29:07,720
than just disable these are say cipher

659
00:29:03,790 --> 00:29:10,389
<font color="#CCCCCC">suites</font><font color="#E5E5E5"> so we did subjects with where we</font>

660
00:29:07,720 --> 00:29:12,280
<font color="#E5E5E5">locked connections to web pages these</font>

661
00:29:10,390 --> 00:29:16,680
were not the most<font color="#E5E5E5"> high volume web pages</font>

662
00:29:12,280 --> 00:29:19,780
but reasonable<font color="#CCCCCC"> sample I think and we saw</font>

663
00:29:16,680 --> 00:29:21,460
practically no legitimate connections

664
00:29:19,780 --> 00:29:24,700
that<font color="#CCCCCC"> we're using these old cipher</font><font color="#E5E5E5"> suites</font>

665
00:29:21,460 --> 00:29:27,130
<font color="#E5E5E5">so almost everyone these</font><font color="#CCCCCC"> days is using a</font>

666
00:29:24,700 --> 00:29:30,130
browser that<font color="#E5E5E5"> will support one</font><font color="#CCCCCC"> of the</font>

667
00:29:27,130 --> 00:29:32,710
more modern modes<font color="#E5E5E5"> and this also gives</font>

668
00:29:30,130 --> 00:29:35,860
you forward secrecy which is a nice

669
00:29:32,710 --> 00:29:38,020
property<font color="#E5E5E5"> roughly so we would</font><font color="#CCCCCC"> recommend</font>

670
00:29:35,860 --> 00:29:40,540
if<font color="#E5E5E5"> you're on a server that's using TLS</font>

671
00:29:38,020 --> 00:29:42,970
<font color="#E5E5E5">just consider disabling these all cipher</font>

672
00:29:40,540 --> 00:29:44,680
modes because really I don't believe

673
00:29:42,970 --> 00:29:46,570
there's any implementation<font color="#E5E5E5"> out there</font>

674
00:29:44,680 --> 00:29:52,330
right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> that I would call robust on</font>

675
00:29:46,570 --> 00:29:54,909
this<font color="#E5E5E5"> until</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> 1.3 will no longer</font>

676
00:29:52,330 --> 00:29:57,699
support these modes<font color="#E5E5E5"> anyway</font><font color="#CCCCCC"> because it it</font>

677
00:29:54,910 --> 00:30:00,100
has deprecated a lot of<font color="#E5E5E5"> bad stuff</font><font color="#CCCCCC"> we're</font>

678
00:29:57,700 --> 00:30:03,420
expecting<font color="#CCCCCC"> that TLS 1.3 will now be</font>

679
00:30:00,100 --> 00:30:08,620
published<font color="#E5E5E5"> every</font><font color="#CCCCCC"> day took a bit longer</font>

680
00:30:03,420 --> 00:30:11,710
but yeah but you may still<font color="#CCCCCC"> be at risk</font>

681
00:30:08,620 --> 00:30:13,659
<font color="#E5E5E5">even</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you use</font><font color="#CCCCCC"> ETS 1.3 because if you</font>

682
00:30:11,710 --> 00:30:15,190
we mentioned earlier that you could do

683
00:30:13,660 --> 00:30:17,230
<font color="#E5E5E5">these signature attacks where you're</font>

684
00:30:15,190 --> 00:30:18,820
doing a man-in-the-middle attack by

685
00:30:17,230 --> 00:30:20,920
attacking the property that the server

686
00:30:18,820 --> 00:30:25,570
still supports<font color="#E5E5E5"> these old RSA encryption</font>

687
00:30:20,920 --> 00:30:27,340
modes so even if you have<font color="#CCCCCC"> TS 1.3 the</font>

688
00:30:25,570 --> 00:30:30,429
attack may still be<font color="#CCCCCC"> possible in some</font>

689
00:30:27,340 --> 00:30:35,470
circumstances<font color="#E5E5E5"> so ideally</font><font color="#CCCCCC"> just disable</font>

690
00:30:30,430 --> 00:30:38,260
these modes if you can and then we

691
00:30:35,470 --> 00:30:41,650
definitely<font color="#CCCCCC"> recommend</font><font color="#E5E5E5"> no longer use RSA</font>

692
00:30:38,260 --> 00:30:45,610
with<font color="#E5E5E5"> pkcs1 1.5 this is standard from the</font>

693
00:30:41,650 --> 00:30:46,960
<font color="#E5E5E5">90s it is many problems it also also if</font>

694
00:30:45,610 --> 00:30:49,090
you use<font color="#CCCCCC"> it</font><font color="#E5E5E5"> for signatures there are</font>

695
00:30:46,960 --> 00:30:51,820
other problems<font color="#E5E5E5"> with</font><font color="#CCCCCC"> it and there's a</font>

696
00:30:49,090 --> 00:30:53,199
more modern version<font color="#CCCCCC"> of this pkcs</font>

697
00:30:51,820 --> 00:30:56,290
standard purchased using something

698
00:30:53,200 --> 00:30:58,549
called<font color="#CCCCCC"> Oh a EP for encryption</font><font color="#E5E5E5"> and PSS</font>

699
00:30:56,290 --> 00:31:00,470
for<font color="#CCCCCC"> Sigma</font>

700
00:30:58,549 --> 00:31:04,010
I think the first version has been

701
00:31:00,470 --> 00:31:06,710
<font color="#E5E5E5">published in 2001</font><font color="#CCCCCC"> and it's not</font><font color="#E5E5E5"> really</font>

702
00:31:04,010 --> 00:31:10,100
<font color="#CCCCCC">clear why TLS doesn't use that</font><font color="#E5E5E5"> until now</font>

703
00:31:06,710 --> 00:31:12,200
it will<font color="#E5E5E5"> use it</font><font color="#CCCCCC"> appears 1.3 but yeah so</font>

704
00:31:10,100 --> 00:31:14,659
really<font color="#E5E5E5"> don't use these legacy modes</font><font color="#CCCCCC"> they</font>

705
00:31:12,200 --> 00:31:17,240
have so many problems<font color="#CCCCCC"> if you if you want</font>

706
00:31:14,660 --> 00:31:19,820
<font color="#E5E5E5">to use RSA</font><font color="#CCCCCC"> I mean you could of</font><font color="#E5E5E5"> course</font>

707
00:31:17,240 --> 00:31:22,580
also<font color="#E5E5E5"> use more modern crypto algorithms</font>

708
00:31:19,820 --> 00:31:25,220
<font color="#E5E5E5">but if you want to use RSA in anything</font>

709
00:31:22,580 --> 00:31:31,549
new you build please use<font color="#CCCCCC"> this more</font>

710
00:31:25,220 --> 00:31:34,990
<font color="#CCCCCC">modern encryption</font><font color="#E5E5E5"> most yeah so our</font>

711
00:31:31,549 --> 00:31:38,270
takeaways<font color="#E5E5E5"> here is all the texture work</font>

712
00:31:34,990 --> 00:31:42,350
<font color="#CCCCCC">you can win a pony award</font><font color="#E5E5E5"> by recycling a</font>

713
00:31:38,270 --> 00:31:46,190
20 year<font color="#CCCCCC"> old attack we recommend stop</font>

714
00:31:42,350 --> 00:31:51,559
using the TLS<font color="#CCCCCC"> RSA modes in TLS</font><font color="#E5E5E5"> and stop</font>

715
00:31:46,190 --> 00:31:54,500
using<font color="#CCCCCC"> pkcs1 1.5 yeah and</font><font color="#E5E5E5"> also if you do</font>

716
00:31:51,559 --> 00:31:57,470
<font color="#E5E5E5">have a server that does support the</font><font color="#CCCCCC"> tell</font>

717
00:31:54,500 --> 00:31:59,690
<font color="#CCCCCC">us RSA ciphers but also supports forward</font>

718
00:31:57,470 --> 00:32:01,669
secrecy<font color="#E5E5E5"> if somebody is able to do this</font>

719
00:31:59,690 --> 00:32:04,730
attack fast enough they would be able<font color="#E5E5E5"> to</font>

720
00:32:01,669 --> 00:32:11,600
<font color="#E5E5E5">do a downgrade to force</font><font color="#CCCCCC"> a client to use</font>

721
00:32:04,730 --> 00:32:13,640
TLS RSA ciphers yeah<font color="#E5E5E5"> so yeah I think we</font>

722
00:32:11,600 --> 00:32:16,480
<font color="#CCCCCC">meant you</font><font color="#E5E5E5"> have time for questions</font>

723
00:32:13,640 --> 00:32:16,480
<font color="#CCCCCC">Thanks</font>

724
00:32:20,740 --> 00:32:24,640
[Applause]

