1
00:00:00,060 --> 00:00:04,409
so thanks everyone for<font color="#E5E5E5"> coming avoiding</font>

2
00:00:02,669 --> 00:00:05,850
like whatever free drinks you can<font color="#E5E5E5"> get</font>

3
00:00:04,410 --> 00:00:08,730
there's lots of<font color="#E5E5E5"> those still I'm sure</font>

4
00:00:05,850 --> 00:00:12,450
don't<font color="#E5E5E5"> worry</font><font color="#CCCCCC"> so I'm gonna be</font><font color="#E5E5E5"> talking</font>

5
00:00:08,730 --> 00:00:14,549
about<font color="#E5E5E5"> a new tool that was just pushed to</font>

6
00:00:12,450 --> 00:00:17,220
get<font color="#E5E5E5"> happen it's</font><font color="#CCCCCC"> really more proof</font><font color="#E5E5E5"> of</font>

7
00:00:14,549 --> 00:00:19,590
concept<font color="#E5E5E5"> but it's supposed</font><font color="#CCCCCC"> to take</font>

8
00:00:17,220 --> 00:00:23,130
<font color="#E5E5E5">side-channel power analysis and make it</font>

9
00:00:19,590 --> 00:00:25,619
<font color="#E5E5E5">really</font><font color="#CCCCCC"> easy and</font><font color="#E5E5E5"> accessible with one you</font>

10
00:00:23,130 --> 00:00:27,269
<font color="#E5E5E5">know the idea is to make this work on a</font>

11
00:00:25,619 --> 00:00:30,179
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different devices to show you how</font>

12
00:00:27,269 --> 00:00:33,420
easy power analysis can<font color="#CCCCCC"> be so I started</font>

13
00:00:30,179 --> 00:00:35,280
<font color="#E5E5E5">a project chip</font><font color="#CCCCCC"> whisper which then has</font>

14
00:00:33,420 --> 00:00:37,469
led me to<font color="#CCCCCC"> this project</font><font color="#E5E5E5"> as well</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

15
00:00:35,280 --> 00:00:40,170
an extension<font color="#E5E5E5"> of it as part of that</font><font color="#CCCCCC"> I</font>

16
00:00:37,469 --> 00:00:42,660
have a<font color="#CCCCCC"> startup</font><font color="#E5E5E5"> new a technology so we do</font>

17
00:00:40,170 --> 00:00:44,640
<font color="#E5E5E5">open source tools we sell tools</font><font color="#CCCCCC"> we do</font>

18
00:00:42,660 --> 00:00:46,019
trainings<font color="#CCCCCC"> one of the problems</font><font color="#E5E5E5"> with the</font>

19
00:00:44,640 --> 00:00:49,440
open source of<font color="#CCCCCC"> course is you</font><font color="#E5E5E5"> know you</font>

20
00:00:46,020 --> 00:00:51,840
can't get clone<font color="#E5E5E5"> PCB file as much as we</font>

21
00:00:49,440 --> 00:00:53,849
would love<font color="#E5E5E5"> to</font><font color="#CCCCCC"> so as a temporary fix for</font>

22
00:00:51,840 --> 00:00:56,430
that<font color="#E5E5E5"> I brought a few</font><font color="#CCCCCC"> of these tools with</font>

23
00:00:53,850 --> 00:00:58,710
me<font color="#E5E5E5"> and we're just</font><font color="#CCCCCC"> gonna do the Mandalay</font>

24
00:00:56,430 --> 00:01:01,620
Bay insurance approved<font color="#E5E5E5"> toss into the</font>

25
00:00:58,710 --> 00:01:04,680
crowd so who wants them look<font color="#CCCCCC"> you got one</font>

26
00:01:01,620 --> 00:01:07,470
that way<font color="#E5E5E5"> oh crap okay</font><font color="#CCCCCC"> sure</font>

27
00:01:04,680 --> 00:01:09,900
I don't know and we'll do a<font color="#E5E5E5"> fire back I</font>

28
00:01:07,470 --> 00:01:14,100
don't<font color="#CCCCCC"> know Oh disaster</font>

29
00:01:09,900 --> 00:01:16,799
<font color="#CCCCCC">alright cool thank</font><font color="#E5E5E5"> you yeah at the same</font>

30
00:01:14,100 --> 00:01:19,140
time<font color="#E5E5E5"> all right there</font><font color="#CCCCCC"> you go get cloned</font>

31
00:01:16,799 --> 00:01:20,790
PCB<font color="#CCCCCC"> at the same time so I recently</font>

32
00:01:19,140 --> 00:01:22,439
started<font color="#CCCCCC"> doing a little</font><font color="#E5E5E5"> more research as</font>

33
00:01:20,790 --> 00:01:25,890
part<font color="#E5E5E5"> of that I'm with a University in</font>

34
00:01:22,439 --> 00:01:27,389
Halifax Dalhousie University<font color="#CCCCCC"> so I'll put</font>

35
00:01:25,890 --> 00:01:29,159
this<font color="#E5E5E5"> sort of advertisement out there if</font>

36
00:01:27,390 --> 00:01:31,650
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> student interested in doing a lot</font>

37
00:01:29,159 --> 00:01:34,110
<font color="#CCCCCC">of deep dive into this research</font><font color="#E5E5E5"> like a</font>

38
00:01:31,650 --> 00:01:36,090
masters or PhD if that's<font color="#E5E5E5"> something you</font>

39
00:01:34,110 --> 00:01:38,130
might<font color="#CCCCCC"> want to do</font><font color="#E5E5E5"> no comment on if you</font>

40
00:01:36,090 --> 00:01:40,229
should<font color="#CCCCCC"> or shouldn't feel free to talk</font><font color="#E5E5E5"> to</font>

41
00:01:38,130 --> 00:01:43,079
me<font color="#E5E5E5"> find me I'll be here until</font><font color="#CCCCCC"> Saturday</font>

42
00:01:40,229 --> 00:01:44,149
morning<font color="#E5E5E5"> at DEFCON</font><font color="#CCCCCC"> 2 so find me on</font>

43
00:01:43,079 --> 00:01:46,740
Twitter or anything like<font color="#E5E5E5"> that</font>

44
00:01:44,149 --> 00:01:49,140
<font color="#CCCCCC">alright so into</font><font color="#E5E5E5"> it what are we looking</font>

45
00:01:46,740 --> 00:01:52,140
<font color="#CCCCCC">for we're looking for</font><font color="#E5E5E5"> hardware</font>

46
00:01:49,140 --> 00:01:55,049
acceleration<font color="#E5E5E5"> in crypto specifically I'm</font>

47
00:01:52,140 --> 00:01:57,000
looking<font color="#CCCCCC"> at a es</font><font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> interesting</font>

48
00:01:55,049 --> 00:01:58,640
it's used for<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> stuff it's used</font>

49
00:01:57,000 --> 00:02:01,740
for firmware<font color="#E5E5E5"> updates it's used for</font>

50
00:01:58,640 --> 00:02:03,659
<font color="#E5E5E5">securing magic money</font><font color="#CCCCCC"> and wallets it's</font>

51
00:02:01,740 --> 00:02:06,689
used for<font color="#CCCCCC"> all</font><font color="#E5E5E5"> sorts of interesting</font><font color="#CCCCCC"> things</font>

52
00:02:03,659 --> 00:02:08,789
<font color="#CCCCCC">and</font><font color="#E5E5E5"> these devices</font><font color="#CCCCCC"> all saying ok they</font>

53
00:02:06,689 --> 00:02:10,139
have<font color="#CCCCCC"> a AES and you know the</font><font color="#E5E5E5"> marketing</font>

54
00:02:08,788 --> 00:02:12,690
people<font color="#E5E5E5"> tell you it's</font><font color="#CCCCCC"> the best in the</font>

55
00:02:10,139 --> 00:02:13,359
world<font color="#CCCCCC"> you might want</font><font color="#E5E5E5"> to validate that</font>

56
00:02:12,690 --> 00:02:15,430
you might

57
00:02:13,360 --> 00:02:17,400
<font color="#E5E5E5">you curious what that actually means</font>

58
00:02:15,430 --> 00:02:20,890
<font color="#E5E5E5">because there's ways to break it so</font>

59
00:02:17,400 --> 00:02:22,810
<font color="#E5E5E5">power analysis there was</font><font color="#CCCCCC"> a talk even</font>

60
00:02:20,890 --> 00:02:25,029
showing<font color="#E5E5E5"> how to do this at a distance</font>

61
00:02:22,810 --> 00:02:25,590
<font color="#CCCCCC">just a</font><font color="#E5E5E5"> few hours ago so that's pretty</font>

62
00:02:25,030 --> 00:02:28,210
cool

63
00:02:25,590 --> 00:02:30,910
has been<font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> since 1999 though</font>

64
00:02:28,210 --> 00:02:33,730
<font color="#E5E5E5">and in this example I'm</font><font color="#CCCCCC"> using it to</font>

65
00:02:30,910 --> 00:02:36,070
break<font color="#E5E5E5"> a Phillips hue smart</font><font color="#CCCCCC"> light bulbs</font>

66
00:02:33,730 --> 00:02:39,100
to<font color="#E5E5E5"> recover their encryption keys</font><font color="#CCCCCC"> and</font>

67
00:02:36,070 --> 00:02:40,299
it's relatively<font color="#E5E5E5"> applicable</font><font color="#CCCCCC"> it's</font>

68
00:02:39,100 --> 00:02:43,900
something you can do and it's very

69
00:02:40,300 --> 00:02:47,350
fundamental it happens because the<font color="#E5E5E5"> power</font>

70
00:02:43,900 --> 00:02:50,080
<font color="#CCCCCC">device use actually changes a little</font><font color="#E5E5E5"> bit</font>

71
00:02:47,350 --> 00:02:51,910
<font color="#E5E5E5">with what data is going across internal</font>

72
00:02:50,080 --> 00:02:54,040
data buses<font color="#E5E5E5"> so we have internal states</font>

73
00:02:51,910 --> 00:02:56,890
that<font color="#E5E5E5"> are affecting measurements we can</font>

74
00:02:54,040 --> 00:02:59,350
<font color="#CCCCCC">take externally on the chip and we can</font>

75
00:02:56,890 --> 00:03:01,320
use this to break implementations<font color="#CCCCCC"> of</font>

76
00:02:59,350 --> 00:03:03,070
really secure devices<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can break</font><font color="#E5E5E5"> an</font>

77
00:03:01,320 --> 00:03:05,950
implementation of AES<font color="#E5E5E5"> or an</font>

78
00:03:03,070 --> 00:03:07,450
implementation of RSA<font color="#E5E5E5"> I'm not saying RSA</font>

79
00:03:05,950 --> 00:03:07,958
is broken<font color="#E5E5E5"> you know I'm not saying</font><font color="#CCCCCC"> Adi</font>

80
00:03:07,450 --> 00:03:10,450
<font color="#CCCCCC">Shamir</font>

81
00:03:07,959 --> 00:03:12,310
screwed up somehow<font color="#E5E5E5"> I'm saying the</font>

82
00:03:10,450 --> 00:03:15,310
engineers that<font color="#E5E5E5"> do the implementations</font>

83
00:03:12,310 --> 00:03:17,290
<font color="#E5E5E5">they might have screwed up but it's</font>

84
00:03:15,310 --> 00:03:19,959
really fundamental it's really you<font color="#E5E5E5"> know</font>

85
00:03:17,290 --> 00:03:21,850
when it<font color="#E5E5E5"> gets implemented in a design</font>

86
00:03:19,959 --> 00:03:23,200
this is where the problems happen and

87
00:03:21,850 --> 00:03:25,959
that's<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> really interesting</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> us</font>

88
00:03:23,200 --> 00:03:27,459
to exploit power analysis there's a

89
00:03:25,959 --> 00:03:30,910
bunch ways to do it

90
00:03:27,459 --> 00:03:32,410
one way is that we<font color="#E5E5E5"> have a model and sort</font>

91
00:03:30,910 --> 00:03:34,660
<font color="#E5E5E5">of most of them have this idea of some</font>

92
00:03:32,410 --> 00:03:37,420
<font color="#E5E5E5">sort of fundamental model of there's</font>

93
00:03:34,660 --> 00:03:40,989
<font color="#E5E5E5">secret data inside the chip I need</font><font color="#CCCCCC"> to</font>

94
00:03:37,420 --> 00:03:42,850
get out<font color="#E5E5E5"> of the chip</font><font color="#CCCCCC"> and I'm gonna</font><font color="#E5E5E5"> make</font>

95
00:03:40,989 --> 00:03:45,970
<font color="#CCCCCC">some</font><font color="#E5E5E5"> assumptions regarding you</font><font color="#CCCCCC"> know when</font>

96
00:03:42,850 --> 00:03:47,980
some secret key<font color="#E5E5E5"> bite is some value what</font>

97
00:03:45,970 --> 00:03:49,420
the power measurement looks<font color="#E5E5E5"> like we</font>

98
00:03:47,980 --> 00:03:50,950
could do that with you know a template

99
00:03:49,420 --> 00:03:52,750
we could record a<font color="#E5E5E5"> whole bunch of data</font>

100
00:03:50,950 --> 00:03:54,790
being processed with<font color="#CCCCCC"> with different</font>

101
00:03:52,750 --> 00:03:56,230
<font color="#CCCCCC">encryption</font><font color="#E5E5E5"> keys and figure</font><font color="#CCCCCC"> out exactly</font>

102
00:03:54,790 --> 00:03:57,489
what it might look like<font color="#E5E5E5"> for every</font>

103
00:03:56,230 --> 00:03:59,980
encryption key every part of<font color="#E5E5E5"> the</font>

104
00:03:57,489 --> 00:04:01,299
<font color="#E5E5E5">encryption key</font><font color="#CCCCCC"> or we can use the</font><font color="#E5E5E5"> sort of</font>

105
00:03:59,980 --> 00:04:03,730
easier way we use some<font color="#E5E5E5"> really basic</font>

106
00:04:01,299 --> 00:04:06,489
models that have really sort of

107
00:04:03,730 --> 00:04:09,220
fundamental underlying assumptions<font color="#E5E5E5"> this</font>

108
00:04:06,489 --> 00:04:11,230
method with these basic<font color="#CCCCCC"> models is nice</font>

109
00:04:09,220 --> 00:04:13,060
<font color="#E5E5E5">because we don't need to know a lot</font>

110
00:04:11,230 --> 00:04:14,920
about any<font color="#E5E5E5"> device if you give me a device</font>

111
00:04:13,060 --> 00:04:16,988
<font color="#E5E5E5">it's running</font><font color="#CCCCCC"> AES that's kind of all I</font>

112
00:04:14,920 --> 00:04:18,849
need<font color="#CCCCCC"> to know</font><font color="#E5E5E5"> to run some</font><font color="#CCCCCC"> of these basic</font>

113
00:04:16,988 --> 00:04:21,820
models on them you<font color="#CCCCCC"> don't need to do any</font>

114
00:04:18,850 --> 00:04:24,520
sort of work<font color="#CCCCCC"> ahead of time</font><font color="#E5E5E5"> and it's this</font>

115
00:04:21,820 --> 00:04:26,419
basic attack that we've seen used in

116
00:04:24,520 --> 00:04:28,099
real life a<font color="#E5E5E5"> few times</font>

117
00:04:26,419 --> 00:04:29,960
and this has been used<font color="#CCCCCC"> to</font><font color="#E5E5E5"> break you know</font>

118
00:04:28,099 --> 00:04:31,909
real products real devices<font color="#E5E5E5"> to recover</font>

119
00:04:29,960 --> 00:04:34,310
encryption keys to demonstrate how they

120
00:04:31,909 --> 00:04:36,199
could be cloned<font color="#CCCCCC"> so it's far</font><font color="#E5E5E5"> from just</font>

121
00:04:34,310 --> 00:04:37,879
I've chosen this on purpose I've kind of

122
00:04:36,199 --> 00:04:40,210
chosen this method because when you look

123
00:04:37,879 --> 00:04:42,800
at what<font color="#CCCCCC"> people have used for attacks</font>

124
00:04:40,210 --> 00:04:44,960
<font color="#E5E5E5">it's this kind of</font><font color="#CCCCCC"> basic model and this</font>

125
00:04:42,800 --> 00:04:47,389
<font color="#E5E5E5">is known as correlation power analysis</font>

126
00:04:44,960 --> 00:04:49,340
or CPA attacks<font color="#E5E5E5"> and this is the only</font>

127
00:04:47,389 --> 00:04:51,680
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> I'm really</font><font color="#E5E5E5"> concentrating</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> this</font>

128
00:04:49,340 --> 00:04:56,869
<font color="#E5E5E5">tack talk is this</font><font color="#CCCCCC"> specific version of</font>

129
00:04:51,680 --> 00:04:59,599
that of that<font color="#CCCCCC"> talk</font><font color="#E5E5E5"> so to do this you need</font>

130
00:04:56,870 --> 00:05:01,250
this model of the<font color="#E5E5E5"> device and if you look</font>

131
00:04:59,599 --> 00:05:03,469
in a<font color="#E5E5E5"> few papers there's some like notes</font>

132
00:05:01,250 --> 00:05:05,090
that they<font color="#E5E5E5"> found these crazy models that</font>

133
00:05:03,469 --> 00:05:07,039
they sort<font color="#E5E5E5"> of found by</font><font color="#CCCCCC"> coincidence and</font><font color="#E5E5E5"> it</font>

134
00:05:05,090 --> 00:05:07,729
worked<font color="#E5E5E5"> really well that's the thing it</font>

135
00:05:07,039 --> 00:05:09,650
worked really well

136
00:05:07,729 --> 00:05:12,409
it wasn't what they were expecting<font color="#CCCCCC"> but</font>

137
00:05:09,650 --> 00:05:14,479
they<font color="#E5E5E5"> found it great so I want to improve</font>

138
00:05:12,409 --> 00:05:16,460
<font color="#CCCCCC">that because you know the researcher</font>

139
00:05:14,479 --> 00:05:17,719
shouldn't be testing all<font color="#E5E5E5"> these models</font>

140
00:05:16,460 --> 00:05:20,840
they're thinking up or anything<font color="#E5E5E5"> like</font>

141
00:05:17,719 --> 00:05:22,580
that it seems<font color="#E5E5E5"> like a silly problem</font><font color="#CCCCCC"> and</font>

142
00:05:20,840 --> 00:05:25,039
it seems like it<font color="#E5E5E5"> might be a good problem</font>

143
00:05:22,580 --> 00:05:28,520
for machine<font color="#CCCCCC"> learning</font><font color="#E5E5E5"> I tried that once</font>

144
00:05:25,039 --> 00:05:31,039
the year was 2003<font color="#CCCCCC"> I was in high school</font>

145
00:05:28,520 --> 00:05:33,049
<font color="#CCCCCC">in</font><font color="#E5E5E5"> my parents basement</font><font color="#CCCCCC"> working on a</font>

146
00:05:31,039 --> 00:05:36,680
<font color="#E5E5E5">robot that</font><font color="#CCCCCC"> was trying</font><font color="#E5E5E5"> to use a</font><font color="#CCCCCC"> neural</font>

147
00:05:33,050 --> 00:05:39,919
network<font color="#E5E5E5"> to drive and it did a little bit</font>

148
00:05:36,680 --> 00:05:41,449
<font color="#E5E5E5">worse</font><font color="#CCCCCC"> than an if-statement but you know</font>

149
00:05:39,919 --> 00:05:42,948
that seems to<font color="#CCCCCC"> be kind of</font><font color="#E5E5E5"> pretty good so</font>

150
00:05:41,449 --> 00:05:45,919
<font color="#CCCCCC">and actually I tried</font><font color="#E5E5E5"> it twice the first</font>

151
00:05:42,949 --> 00:05:47,000
<font color="#E5E5E5">time with basic on a micro so that was</font>

152
00:05:45,919 --> 00:05:49,068
you know<font color="#CCCCCC"> we're kind of coming around</font>

153
00:05:47,000 --> 00:05:52,069
<font color="#E5E5E5">back to like Python on micros and stuff</font>

154
00:05:49,069 --> 00:05:53,900
so maybe<font color="#E5E5E5"> it'll be cool</font><font color="#CCCCCC"> again but I kind</font>

155
00:05:52,069 --> 00:05:56,150
of gave up<font color="#E5E5E5"> on that it's actually a</font>

156
00:05:53,900 --> 00:05:59,388
really<font color="#E5E5E5"> pretty nice problem for machine</font>

157
00:05:56,150 --> 00:06:00,919
learning<font color="#E5E5E5"> we have huge</font><font color="#CCCCCC"> data sets for this</font>

158
00:05:59,389 --> 00:06:02,270
or actually<font color="#CCCCCC"> Jasper's</font><font color="#E5E5E5"> going to be talking</font>

159
00:06:00,919 --> 00:06:05,419
about this later<font color="#CCCCCC"> so you're</font><font color="#E5E5E5"> gonna find</font>

160
00:06:02,270 --> 00:06:06,889
out the smart way to do this<font color="#CCCCCC"> tomorrow we</font>

161
00:06:05,419 --> 00:06:09,080
can make pretty<font color="#E5E5E5"> big data sets because we</font>

162
00:06:06,889 --> 00:06:11,659
<font color="#E5E5E5">controlled the device the acquisition</font>

163
00:06:09,080 --> 00:06:13,490
environment we control the outcomes very

164
00:06:11,659 --> 00:06:15,379
<font color="#CCCCCC">well-defined</font><font color="#E5E5E5"> you know we get this key</font>

165
00:06:13,490 --> 00:06:18,169
<font color="#CCCCCC">byte this</font><font color="#E5E5E5"> is a success this</font><font color="#CCCCCC"> is what</font>

166
00:06:15,379 --> 00:06:19,669
we're trying<font color="#CCCCCC"> to find the main problems</font>

167
00:06:18,169 --> 00:06:21,979
<font color="#CCCCCC">with machine learning is I didn't look</font>

168
00:06:19,669 --> 00:06:23,690
at it<font color="#E5E5E5"> since 2003 and people don't use</font>

169
00:06:21,979 --> 00:06:25,310
basic anymore

170
00:06:23,690 --> 00:06:26,750
the other problem with it is<font color="#CCCCCC"> that we</font>

171
00:06:25,310 --> 00:06:28,610
actually do know sometimes the

172
00:06:26,750 --> 00:06:31,400
<font color="#CCCCCC">underlaying</font><font color="#E5E5E5"> model and it would actually</font>

173
00:06:28,610 --> 00:06:33,589
validate what that<font color="#E5E5E5"> model is so in our</font>

174
00:06:31,400 --> 00:06:36,739
case we know what the algorithm is<font color="#E5E5E5"> and</font>

175
00:06:33,589 --> 00:06:38,360
we'd like<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out where the</font>

176
00:06:36,740 --> 00:06:39,639
problems coming<font color="#E5E5E5"> from because</font><font color="#CCCCCC"> that can</font>

177
00:06:38,360 --> 00:06:41,889
help<font color="#E5E5E5"> us fix the prowl</font>

178
00:06:39,639 --> 00:06:46,090
in the design<font color="#E5E5E5"> it does help us attack it</font>

179
00:06:41,889 --> 00:06:47,979
<font color="#CCCCCC">they</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> help us fix the problem so the</font>

180
00:06:46,090 --> 00:06:51,280
basic<font color="#E5E5E5"> dumb method the summary of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is I</font>

181
00:06:47,979 --> 00:06:53,620
take the algorithm<font color="#CCCCCC"> and if you look at a</font>

182
00:06:51,280 --> 00:06:54,669
yes it has all these states and<font color="#E5E5E5"> we just</font>

183
00:06:53,620 --> 00:06:56,650
say well we're just<font color="#E5E5E5"> going to look at</font>

184
00:06:54,669 --> 00:06:59,229
every state and just<font color="#E5E5E5"> try all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them in</font>

185
00:06:56,650 --> 00:07:02,679
combinations of<font color="#E5E5E5"> them</font><font color="#CCCCCC"> and there's a lot</font>

186
00:06:59,229 --> 00:07:05,949
you<font color="#CCCCCC"> know it's</font><font color="#E5E5E5"> not a simple problem</font><font color="#CCCCCC"> to</font>

187
00:07:02,680 --> 00:07:08,979
solve<font color="#E5E5E5"> manually but luckily Amazon</font>

188
00:07:05,949 --> 00:07:12,340
converts money into lots of cycles<font color="#E5E5E5"> and</font>

189
00:07:08,979 --> 00:07:14,800
so we use money<font color="#CCCCCC"> to</font><font color="#E5E5E5"> cycles to solve our</font>

190
00:07:12,340 --> 00:07:17,080
problem<font color="#CCCCCC"> and this is really what it is is</font>

191
00:07:14,800 --> 00:07:18,729
<font color="#CCCCCC">that it's sort of a</font><font color="#E5E5E5"> tractable amount of</font>

192
00:07:17,080 --> 00:07:21,400
problems like it takes you know a few

193
00:07:18,729 --> 00:07:23,438
<font color="#E5E5E5">minutes to run on a reasonable server or</font>

194
00:07:21,400 --> 00:07:26,620
if it's a complicated one<font color="#E5E5E5"> a few hours</font><font color="#CCCCCC"> if</font>

195
00:07:23,439 --> 00:07:29,139
it's<font color="#E5E5E5"> far from a you know really</font>

196
00:07:26,620 --> 00:07:31,360
prohibitive<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> computation</font><font color="#CCCCCC"> that</font>

197
00:07:29,139 --> 00:07:34,120
<font color="#E5E5E5">you might need</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> this was</font><font color="#CCCCCC"> one of</font>

198
00:07:31,360 --> 00:07:36,189
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ideas is that</font><font color="#E5E5E5"> why</font><font color="#CCCCCC"> don't we just try</font>

199
00:07:34,120 --> 00:07:39,639
<font color="#CCCCCC">everything take our model try everything</font>

200
00:07:36,189 --> 00:07:41,439
<font color="#E5E5E5">and see what we get</font><font color="#CCCCCC"> so the question is</font>

201
00:07:39,639 --> 00:07:43,300
what<font color="#E5E5E5"> are we using to define this you</font>

202
00:07:41,439 --> 00:07:45,009
know how do<font color="#E5E5E5"> you know that it's a bad</font>

203
00:07:43,300 --> 00:07:47,589
problem<font color="#E5E5E5"> how do you know it's a witch</font>

204
00:07:45,009 --> 00:07:50,349
and we're using<font color="#CCCCCC"> test vector leakage</font>

205
00:07:47,589 --> 00:07:52,389
assessment for this<font color="#CCCCCC"> it's based on the</font>

206
00:07:50,349 --> 00:07:54,279
proposal<font color="#CCCCCC"> so</font><font color="#E5E5E5"> there there's a proposal on</font>

207
00:07:52,389 --> 00:07:56,379
how<font color="#CCCCCC"> you could validate if a device is</font>

208
00:07:54,279 --> 00:07:58,629
<font color="#CCCCCC">secure</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> not at all</font>

209
00:07:56,379 --> 00:08:01,330
which really just<font color="#E5E5E5"> answers the question</font>

210
00:07:58,629 --> 00:08:05,050
is this device secure not specifically

211
00:08:01,330 --> 00:08:06,698
how how<font color="#CCCCCC"> does the device leak and it's</font>

212
00:08:05,050 --> 00:08:09,759
really<font color="#E5E5E5"> pretty straightforward</font>

213
00:08:06,699 --> 00:08:11,529
the<font color="#CCCCCC"> quick</font><font color="#E5E5E5"> explanation for it is imagine</font>

214
00:08:09,759 --> 00:08:13,060
you had a device you<font color="#E5E5E5"> want to know hey is</font>

215
00:08:11,529 --> 00:08:15,580
this<font color="#E5E5E5"> device secure can I figure out the</font>

216
00:08:13,060 --> 00:08:17,889
<font color="#E5E5E5">encryption key from this device</font><font color="#CCCCCC"> if you</font>

217
00:08:15,580 --> 00:08:20,800
could imagine<font color="#E5E5E5"> encrypting a bunch of data</font>

218
00:08:17,889 --> 00:08:22,870
with one<font color="#E5E5E5"> secret key encrypting a bunch</font>

219
00:08:20,800 --> 00:08:25,330
<font color="#CCCCCC">of</font><font color="#E5E5E5"> data with</font><font color="#CCCCCC"> another secret</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> the</font>

220
00:08:22,870 --> 00:08:26,919
<font color="#CCCCCC">question might be you know could I tell</font>

221
00:08:25,330 --> 00:08:30,758
which key was<font color="#CCCCCC"> in use if I gave you any</font>

222
00:08:26,919 --> 00:08:33,279
random<font color="#E5E5E5"> trace of the encryption could I</font>

223
00:08:30,759 --> 00:08:36,279
figure out what key was in use so we can

224
00:08:33,279 --> 00:08:38,500
use this these sort<font color="#E5E5E5"> of questions we can</font>

225
00:08:36,279 --> 00:08:41,620
use statistics<font color="#CCCCCC"> to answer and they give</font>

226
00:08:38,500 --> 00:08:44,440
us a<font color="#E5E5E5"> value that has some confidence on</font>

227
00:08:41,620 --> 00:08:47,860
how likely<font color="#CCCCCC"> or unlikely</font><font color="#E5E5E5"> the AES</font>

228
00:08:44,440 --> 00:08:51,339
algorithms<font color="#E5E5E5"> a witch</font><font color="#CCCCCC"> so the results</font><font color="#E5E5E5"> of</font>

229
00:08:47,860 --> 00:08:53,010
<font color="#E5E5E5">this are a</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> statistic we're using with</font>

230
00:08:51,339 --> 00:08:54,389
two<font color="#CCCCCC"> different types of test</font>

231
00:08:53,010 --> 00:08:55,949
so the one<font color="#E5E5E5"> on the left is the soda</font>

232
00:08:54,389 --> 00:08:58,230
classic test<font color="#E5E5E5"> that was previously</font>

233
00:08:55,949 --> 00:09:01,109
presented<font color="#E5E5E5"> which is giving you pass/fail</font>

234
00:08:58,230 --> 00:09:04,500
type of testing<font color="#E5E5E5"> the one</font><font color="#CCCCCC"> on the right is</font>

235
00:09:01,110 --> 00:09:06,449
<font color="#CCCCCC">which the the tool can output</font><font color="#E5E5E5"> the one of</font>

236
00:09:04,500 --> 00:09:11,639
the right is more interesting<font color="#E5E5E5"> because</font>

237
00:09:06,449 --> 00:09:15,449
<font color="#CCCCCC">basically we extend this model</font><font color="#E5E5E5"> to figure</font>

238
00:09:11,639 --> 00:09:18,570
out what<font color="#CCCCCC"> specific state within it could</font>

239
00:09:15,449 --> 00:09:20,689
be leaking<font color="#E5E5E5"> so what specific area are we</font>

240
00:09:18,570 --> 00:09:23,459
seeing<font color="#E5E5E5"> this problem from this helps us</font>

241
00:09:20,690 --> 00:09:25,800
<font color="#E5E5E5">figure it if a device is breakable step</font>

242
00:09:23,459 --> 00:09:27,510
<font color="#E5E5E5">one</font><font color="#CCCCCC"> and how to break</font><font color="#E5E5E5"> it step two so we</font>

243
00:09:25,800 --> 00:09:29,399
know it's a real problem<font color="#E5E5E5"> and then</font>

244
00:09:27,510 --> 00:09:31,889
<font color="#E5E5E5">probably fix it but I don't do that part</font>

245
00:09:29,399 --> 00:09:33,720
<font color="#E5E5E5">so this is supposed to say get on with</font>

246
00:09:31,889 --> 00:09:35,339
<font color="#CCCCCC">it which I don't</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> music audio</font>

247
00:09:33,720 --> 00:09:39,870
<font color="#CCCCCC">to to know that if you've seen Monty</font>

248
00:09:35,339 --> 00:09:40,949
Python<font color="#E5E5E5"> so I said I was going</font><font color="#CCCCCC"> to do hard</font>

249
00:09:39,870 --> 00:09:44,010
work<font color="#CCCCCC"> after I said it</font><font color="#E5E5E5"> was gonna break</font>

250
00:09:40,949 --> 00:09:46,229
some micro so let's do<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I've chosen</font>

251
00:09:44,010 --> 00:09:47,880
some some representative samples I've

252
00:09:46,230 --> 00:09:49,350
basically<font color="#E5E5E5"> chosen a few different</font>

253
00:09:47,880 --> 00:09:54,510
microbes<font color="#E5E5E5"> that you might use for various</font>

254
00:09:49,350 --> 00:09:56,100
tax mostly<font color="#E5E5E5"> cortex-m for do not secure</font>

255
00:09:54,510 --> 00:09:58,310
devices<font color="#E5E5E5"> so they're not marked for like</font>

256
00:09:56,100 --> 00:10:01,709
content delivery or in your<font color="#E5E5E5"> credit card</font>

257
00:09:58,310 --> 00:10:05,099
<font color="#CCCCCC">some of them find their way</font><font color="#E5E5E5"> into special</font>

258
00:10:01,709 --> 00:10:07,290
wallets anyway<font color="#E5E5E5"> you can take a look and</font>

259
00:10:05,100 --> 00:10:08,910
see which ones get used and it's not an

260
00:10:07,290 --> 00:10:11,130
attack<font color="#E5E5E5"> specific to these</font><font color="#CCCCCC"> micro so I've</font>

261
00:10:08,910 --> 00:10:13,649
talked to these<font color="#E5E5E5"> companies about it and</font>

262
00:10:11,130 --> 00:10:15,689
they were often<font color="#E5E5E5"> well aware about these</font>

263
00:10:13,649 --> 00:10:17,399
<font color="#E5E5E5">attacks they</font><font color="#CCCCCC"> have people</font><font color="#E5E5E5"> that do this</font>

264
00:10:15,690 --> 00:10:18,959
type<font color="#CCCCCC"> of work themselves one of the</font>

265
00:10:17,399 --> 00:10:22,139
problem is<font color="#E5E5E5"> that you know customers</font>

266
00:10:18,959 --> 00:10:23,279
<font color="#E5E5E5">aren't asking for protection against</font>

267
00:10:22,139 --> 00:10:24,959
<font color="#E5E5E5">these attacks because they might not</font>

268
00:10:23,279 --> 00:10:27,870
<font color="#E5E5E5">actually care about them or know about</font>

269
00:10:24,959 --> 00:10:30,779
<font color="#CCCCCC">them so the attack</font><font color="#E5E5E5"> really exists because</font>

270
00:10:27,870 --> 00:10:33,600
people<font color="#E5E5E5"> misuse the crypto core they they</font>

271
00:10:30,779 --> 00:10:36,300
take<font color="#CCCCCC"> a device that shouldn't be used for</font>

272
00:10:33,600 --> 00:10:37,740
<font color="#E5E5E5">really secure key storage and they just</font>

273
00:10:36,300 --> 00:10:39,859
use<font color="#E5E5E5"> it anyway and say that's fine</font>

274
00:10:37,740 --> 00:10:43,230
we'll<font color="#E5E5E5"> just use</font><font color="#CCCCCC"> that same key everywhere</font>

275
00:10:39,860 --> 00:10:51,420
<font color="#CCCCCC">okay that's enough of that these</font><font color="#E5E5E5"> are the</font>

276
00:10:43,230 --> 00:10:53,579
devices<font color="#E5E5E5"> so stm32f4</font><font color="#CCCCCC"> 1/5 a NXP kinetise or</font>

277
00:10:51,420 --> 00:10:56,339
<font color="#CCCCCC">Connexus</font><font color="#E5E5E5"> someone told me how to say that</font>

278
00:10:53,579 --> 00:11:02,459
properly<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm not stayin on brand so</font>

279
00:10:56,339 --> 00:11:05,010
I'm sorry<font color="#CCCCCC"> k</font><font color="#E5E5E5"> 24f expressive ESP 32</font><font color="#CCCCCC"> Atmel</font>

280
00:11:02,459 --> 00:11:06,959
<font color="#E5E5E5">Sam for</font><font color="#CCCCCC"> Ahlers that should be microchip</font>

281
00:11:05,010 --> 00:11:09,390
again<font color="#CCCCCC"> brandy</font>

282
00:11:06,960 --> 00:11:12,090
<font color="#E5E5E5">choose here the</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> setup looks like</font>

283
00:11:09,390 --> 00:11:14,280
this<font color="#E5E5E5"> so I'm using the same chip whisper</font>

284
00:11:12,090 --> 00:11:15,900
light on the left<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> doing</font>

285
00:11:14,280 --> 00:11:18,750
power measurement<font color="#E5E5E5"> so this is allowing</font><font color="#CCCCCC"> me</font>

286
00:11:15,900 --> 00:11:20,550
<font color="#CCCCCC">to measure</font><font color="#E5E5E5"> power traces</font><font color="#CCCCCC"> of a device and</font>

287
00:11:18,750 --> 00:11:22,080
then I have all these test boards with

288
00:11:20,550 --> 00:11:24,390
different chips that<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> chosen and so</font>

289
00:11:22,080 --> 00:11:26,160
the test<font color="#E5E5E5"> boards run an algorithm</font><font color="#CCCCCC"> I</font>

290
00:11:24,390 --> 00:11:27,420
measure the power consumption<font color="#E5E5E5"> and then</font>

291
00:11:26,160 --> 00:11:30,260
run it<font color="#CCCCCC"> through a</font><font color="#E5E5E5"> tool to see what it</font>

292
00:11:27,420 --> 00:11:33,209
comes<font color="#E5E5E5"> up with this is the first one the</font>

293
00:11:30,260 --> 00:11:36,930
stm32f4<font color="#CCCCCC"> one</font><font color="#E5E5E5"> five it is</font><font color="#CCCCCC"> hardware crypto</font>

294
00:11:33,210 --> 00:11:40,890
it's a pretty powerful<font color="#CCCCCC"> arm core cortex</font>

295
00:11:36,930 --> 00:11:42,839
m4<font color="#E5E5E5"> and the encryption itself so I just</font>

296
00:11:40,890 --> 00:11:44,100
have<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> traces</font><font color="#CCCCCC"> - if you wonder</font>

297
00:11:42,840 --> 00:11:46,440
<font color="#CCCCCC">like what does</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> look like when</font><font color="#E5E5E5"> we're</font>

298
00:11:44,100 --> 00:11:48,450
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> at the leakage the green line is</font>

299
00:11:46,440 --> 00:11:50,160
the<font color="#CCCCCC"> start of encryption</font><font color="#E5E5E5"> based on some</font>

300
00:11:48,450 --> 00:11:51,840
measurements<font color="#CCCCCC"> from the tool the red line</font>

301
00:11:50,160 --> 00:11:54,060
is the end of encryption so the middle

302
00:11:51,840 --> 00:11:58,410
<font color="#CCCCCC">part is the actual Hardware crypto</font>

303
00:11:54,060 --> 00:12:00,930
itself<font color="#E5E5E5"> as the device</font><font color="#CCCCCC"> is running so what</font>

304
00:11:58,410 --> 00:12:03,150
you see is this is<font color="#CCCCCC"> a classic problem</font>

305
00:12:00,930 --> 00:12:05,370
with<font color="#CCCCCC"> hardware implementations</font><font color="#E5E5E5"> they</font>

306
00:12:03,150 --> 00:12:07,110
<font color="#E5E5E5">basically save the AES State in a</font>

307
00:12:05,370 --> 00:12:09,750
register<font color="#E5E5E5"> and they'll overwrite that</font>

308
00:12:07,110 --> 00:12:11,610
<font color="#E5E5E5">state register as the the algorithm</font>

309
00:12:09,750 --> 00:12:14,970
progresses so you get what is<font color="#CCCCCC"> known</font><font color="#E5E5E5"> as a</font>

310
00:12:11,610 --> 00:12:16,710
state to state leakage and<font color="#E5E5E5"> it's Hamming</font>

311
00:12:14,970 --> 00:12:19,140
distance because number of bits that are

312
00:12:16,710 --> 00:12:22,350
<font color="#E5E5E5">flipping we can measure that so you see</font>

313
00:12:19,140 --> 00:12:25,470
that leakage is what the suggested model

314
00:12:22,350 --> 00:12:27,270
is performing the analysis<font color="#E5E5E5"> gives you</font>

315
00:12:25,470 --> 00:12:29,430
that they all leak at one point in time

316
00:12:27,270 --> 00:12:32,220
<font color="#CCCCCC">again kind of</font><font color="#E5E5E5"> what you expect with a</font>

317
00:12:29,430 --> 00:12:34,020
<font color="#E5E5E5">hardware crypto</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> with this basic</font>

318
00:12:32,220 --> 00:12:37,080
attack it's about<font color="#CCCCCC"> 6,000 encryptions</font>

319
00:12:34,020 --> 00:12:39,510
needed to recover<font color="#E5E5E5"> the key so if you had</font>

320
00:12:37,080 --> 00:12:40,830
a device you can cause it<font color="#CCCCCC"> to do 6000</font>

321
00:12:39,510 --> 00:12:43,050
encryption operations<font color="#E5E5E5"> and you can</font>

322
00:12:40,830 --> 00:12:46,500
recover the<font color="#CCCCCC"> AES key</font><font color="#E5E5E5"> with almost</font><font color="#CCCCCC"> a</font>

323
00:12:43,050 --> 00:12:50,939
<font color="#CCCCCC">hundred percent confidence</font><font color="#E5E5E5"> the next guy</font>

324
00:12:46,500 --> 00:12:53,220
kinetise<font color="#E5E5E5"> k24 cortex m4</font><font color="#CCCCCC"> gain</font><font color="#E5E5E5"> a bunch of</font>

325
00:12:50,940 --> 00:12:56,400
different<font color="#CCCCCC"> hardware crypto in it</font>

326
00:12:53,220 --> 00:12:58,950
<font color="#E5E5E5">including</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> AES</font><font color="#CCCCCC"> this one's a</font>

327
00:12:56,400 --> 00:13:01,620
little<font color="#CCCCCC"> different so the best leakage was</font>

328
00:12:58,950 --> 00:13:04,020
on the the substitution<font color="#CCCCCC"> box of AES the</font><font color="#E5E5E5"> S</font>

329
00:13:01,620 --> 00:13:06,000
<font color="#E5E5E5">box</font><font color="#CCCCCC"> you saw a difference between</font><font color="#E5E5E5"> the</font>

330
00:13:04,020 --> 00:13:09,480
input<font color="#CCCCCC"> data</font><font color="#E5E5E5"> - and</font><font color="#CCCCCC"> the output</font><font color="#E5E5E5"> data from it</font>

331
00:13:06,000 --> 00:13:12,000
so actually<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> more odd for a pure</font>

332
00:13:09,480 --> 00:13:14,760
<font color="#E5E5E5">Hardware crypto implementation</font><font color="#CCCCCC"> the other</font>

333
00:13:12,000 --> 00:13:17,250
thing with it is<font color="#CCCCCC"> that so there's the out</font>

334
00:13:14,760 --> 00:13:19,439
the power trace of it<font color="#E5E5E5"> running the</font>

335
00:13:17,250 --> 00:13:20,610
hardware crypto so that looks kind<font color="#E5E5E5"> of</font>

336
00:13:19,440 --> 00:13:23,339
what<font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> assume for hard</font>

337
00:13:20,610 --> 00:13:25,050
krypter you see a lot of spikes<font color="#CCCCCC"> related</font>

338
00:13:23,339 --> 00:13:26,220
to each round but this<font color="#E5E5E5"> sort of</font>

339
00:13:25,050 --> 00:13:28,529
<font color="#E5E5E5">interesting thing was that</font>

340
00:13:26,220 --> 00:13:31,980
now this figures probably<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little messy</font>

341
00:13:28,529 --> 00:13:34,350
but there's kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> four peaks</font><font color="#E5E5E5"> so it's</font>

342
00:13:31,980 --> 00:13:36,930
not all lined<font color="#E5E5E5"> up perfectly there seems</font>

343
00:13:34,350 --> 00:13:39,329
to be like four points in time where

344
00:13:36,930 --> 00:13:41,609
that<font color="#CCCCCC"> sbox input</font><font color="#E5E5E5"> output is being</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> so</font>

345
00:13:39,329 --> 00:13:43,290
if the implementation<font color="#E5E5E5"> is a little</font>

346
00:13:41,610 --> 00:13:47,880
different than<font color="#CCCCCC"> expected</font><font color="#E5E5E5"> but it still</font>

347
00:13:43,290 --> 00:13:49,920
results in a<font color="#E5E5E5"> successful key recovery so</font>

348
00:13:47,880 --> 00:13:52,800
<font color="#E5E5E5">and that's about</font><font color="#CCCCCC"> in this case</font><font color="#E5E5E5"> 14,000</font>

349
00:13:49,920 --> 00:13:54,660
traces so it's a little noisier<font color="#CCCCCC"> I'm</font>

350
00:13:52,800 --> 00:13:55,920
using pretty basic<font color="#CCCCCC"> Windows here</font><font color="#E5E5E5"> but you</font>

351
00:13:54,660 --> 00:13:58,620
can<font color="#E5E5E5"> see it's</font><font color="#CCCCCC"> you know we're talking</font>

352
00:13:55,920 --> 00:14:02,550
<font color="#E5E5E5">still within the same order as the</font>

353
00:13:58,620 --> 00:14:04,890
previous<font color="#E5E5E5"> device</font><font color="#CCCCCC"> one of the other things</font>

354
00:14:02,550 --> 00:14:07,199
that occasionally caught this tool is

355
00:14:04,890 --> 00:14:09,329
you<font color="#CCCCCC"> could see stuff like</font><font color="#E5E5E5"> ROM code so</font>

356
00:14:07,200 --> 00:14:12,060
some devices have<font color="#E5E5E5"> ROM code that calls</font>

357
00:14:09,329 --> 00:14:14,010
the hardware accelerator or they provide

358
00:14:12,060 --> 00:14:16,439
a library that<font color="#E5E5E5"> most people are</font><font color="#CCCCCC"> using for</font>

359
00:14:14,010 --> 00:14:18,600
talking to<font color="#E5E5E5"> the hardware accelerator and</font>

360
00:14:16,440 --> 00:14:21,540
you can have<font color="#E5E5E5"> issues like if you store</font>

361
00:14:18,600 --> 00:14:24,540
the key in a register<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you overrate</font>

362
00:14:21,540 --> 00:14:27,149
that key<font color="#E5E5E5"> with</font><font color="#CCCCCC"> control data</font>

363
00:14:24,540 --> 00:14:29,279
so either ciphertext that's known<font color="#CCCCCC"> or</font><font color="#E5E5E5"> the</font>

364
00:14:27,149 --> 00:14:30,899
<font color="#CCCCCC">plaintext or</font><font color="#E5E5E5"> something like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font>

365
00:14:29,279 --> 00:14:33,510
gives<font color="#E5E5E5"> you leakage that could actually be</font>

366
00:14:30,899 --> 00:14:36,690
exploited so some of<font color="#E5E5E5"> some of these</font>

367
00:14:33,510 --> 00:14:38,730
detection<font color="#CCCCCC"> x' found that which could be</font>

368
00:14:36,690 --> 00:14:39,930
really<font color="#CCCCCC"> useful in a real product where if</font>

369
00:14:38,730 --> 00:14:41,940
you know you're just<font color="#CCCCCC"> trying to recover a</font>

370
00:14:39,930 --> 00:14:45,779
key it's<font color="#E5E5E5"> not the actual</font><font color="#CCCCCC"> hardware</font>

371
00:14:41,940 --> 00:14:48,420
accelerator causing the leakage<font color="#E5E5E5"> but some</font>

372
00:14:45,779 --> 00:14:51,899
bad usage of it really<font color="#CCCCCC"> made</font><font color="#E5E5E5"> this side</font>

373
00:14:48,420 --> 00:14:57,329
<font color="#E5E5E5">channel leakage a lot worse</font><font color="#CCCCCC"> the next</font>

374
00:14:51,899 --> 00:15:00,750
<font color="#CCCCCC">device expressive ESP 32 it's a really</font>

375
00:14:57,329 --> 00:15:02,370
low cost<font color="#E5E5E5"> device has a yeah a lot of</font>

376
00:15:00,750 --> 00:15:04,980
<font color="#CCCCCC">stuff in it for the cost it's crazy</font>

377
00:15:02,370 --> 00:15:07,290
it has an<font color="#CCCCCC"> Aes accelerator anyway that</font>

378
00:15:04,980 --> 00:15:11,029
can be used to decrypt external spy

379
00:15:07,290 --> 00:15:14,219
flash to load data<font color="#CCCCCC"> in</font><font color="#E5E5E5"> as it's coming in</font>

380
00:15:11,029 --> 00:15:16,170
so this one<font color="#CCCCCC"> just shows</font><font color="#E5E5E5"> it was suggesting</font>

381
00:15:14,220 --> 00:15:20,880
<font color="#CCCCCC">it and indeed was going to be breakable</font>

382
00:15:16,170 --> 00:15:23,849
<font color="#E5E5E5">and it saw a Hamming weight of the sbox</font>

383
00:15:20,880 --> 00:15:26,430
output so relatively common leakage

384
00:15:23,850 --> 00:15:29,430
model in this case about<font color="#E5E5E5"> 18,000 traces</font>

385
00:15:26,430 --> 00:15:31,529
are needed to break this<font color="#E5E5E5"> wasn't looking</font>

386
00:15:29,430 --> 00:15:33,390
at the the boot usage so this is using

387
00:15:31,529 --> 00:15:34,510
<font color="#E5E5E5">the device to encrypt or decrypt data</font>

388
00:15:33,390 --> 00:15:36,490
all of<font color="#CCCCCC"> these</font>

389
00:15:34,510 --> 00:15:38,439
<font color="#CCCCCC">I tried to keep it as consistent as</font>

390
00:15:36,490 --> 00:15:41,050
possible<font color="#CCCCCC"> you set up</font><font color="#E5E5E5"> the device do</font>

391
00:15:38,440 --> 00:15:43,360
<font color="#E5E5E5">encryption or decryption</font><font color="#CCCCCC"> and you're able</font>

392
00:15:41,050 --> 00:15:44,680
<font color="#E5E5E5">to recover the keys with this so an</font>

393
00:15:43,360 --> 00:15:48,040
interesting extension<font color="#E5E5E5"> is to actually</font>

394
00:15:44,680 --> 00:15:51,939
<font color="#CCCCCC">look</font><font color="#E5E5E5"> at the device as</font><font color="#CCCCCC"> it's booting and</font>

395
00:15:48,040 --> 00:15:54,790
<font color="#E5E5E5">if it's the same crypto core usage</font><font color="#CCCCCC"> the</font>

396
00:15:51,940 --> 00:15:56,770
<font color="#CCCCCC">microchips am Forel</font><font color="#E5E5E5"> this one's kind of</font>

397
00:15:54,790 --> 00:16:00,400
cool because the hardware<font color="#E5E5E5"> AES engine has</font>

398
00:15:56,770 --> 00:16:02,530
countermeasures<font color="#CCCCCC"> so some of these vary</font>

399
00:16:00,400 --> 00:16:04,959
with how well they work as we'll see<font color="#CCCCCC"> in</font>

400
00:16:02,530 --> 00:16:07,510
a second so it's a cortex m4 it's

401
00:16:04,960 --> 00:16:09,100
running at<font color="#CCCCCC"> 48</font><font color="#E5E5E5"> megahertz</font><font color="#CCCCCC"> so it's kind of</font>

402
00:16:07,510 --> 00:16:12,340
a<font color="#E5E5E5"> low-power guy but it's still got</font>

403
00:16:09,100 --> 00:16:14,770
hardware yes<font color="#E5E5E5"> it's all we care about</font><font color="#CCCCCC"> and</font>

404
00:16:12,340 --> 00:16:16,660
<font color="#E5E5E5">here's what the power trace looks like</font>

405
00:16:14,770 --> 00:16:18,340
so there's a middle<font color="#E5E5E5"> section there that's</font>

406
00:16:16,660 --> 00:16:22,930
<font color="#E5E5E5">actually running the AES algorithm</font>

407
00:16:18,340 --> 00:16:26,110
itself<font color="#E5E5E5"> which is the core part of it so</font>

408
00:16:22,930 --> 00:16:28,209
when I first booted this chip up<font color="#E5E5E5"> which</font>

409
00:16:26,110 --> 00:16:31,990
<font color="#E5E5E5">claimed to have countermeasures on fully</font>

410
00:16:28,210 --> 00:16:34,090
on<font color="#E5E5E5"> we saw the same sort of leakage as I</font>

411
00:16:31,990 --> 00:16:35,560
saw from the the STM device which<font color="#E5E5E5"> you</font>

412
00:16:34,090 --> 00:16:37,750
<font color="#E5E5E5">wouldn't expect basically that was a</font>

413
00:16:35,560 --> 00:16:40,270
little<font color="#E5E5E5"> weird</font><font color="#CCCCCC"> and it turns out</font><font color="#E5E5E5"> that</font>

414
00:16:37,750 --> 00:16:44,410
<font color="#CCCCCC">there's a datasheet bug so if you just</font>

415
00:16:40,270 --> 00:16:46,150
look at<font color="#E5E5E5"> the data sheet it says when the</font>

416
00:16:44,410 --> 00:16:48,189
device is up<font color="#CCCCCC"> everything's</font><font color="#E5E5E5"> on you don't</font>

417
00:16:46,150 --> 00:16:49,990
<font color="#E5E5E5">have to do anything it turns out there's</font>

418
00:16:48,190 --> 00:16:52,030
an initialization step you have<font color="#CCCCCC"> to do</font>

419
00:16:49,990 --> 00:16:52,770
that's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> documented at all in the</font>

420
00:16:52,030 --> 00:16:55,990
datasheet

421
00:16:52,770 --> 00:16:57,340
<font color="#CCCCCC">but</font><font color="#E5E5E5"> is so the library code</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> eventually</font>

422
00:16:55,990 --> 00:16:59,380
switched to using their library which

423
00:16:57,340 --> 00:17:01,000
seemed<font color="#E5E5E5"> to work which it took a little</font>

424
00:16:59,380 --> 00:17:02,920
<font color="#CCCCCC">while to figure</font><font color="#E5E5E5"> it out but when I</font>

425
00:17:01,000 --> 00:17:04,690
contacted<font color="#E5E5E5"> them to sort of go through</font>

426
00:17:02,920 --> 00:17:07,359
<font color="#E5E5E5">this they basically said oh yeah okay</font>

427
00:17:04,690 --> 00:17:09,070
that's the problem<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> sort of</font>

428
00:17:07,359 --> 00:17:10,899
interesting<font color="#CCCCCC"> so once you turn it on it's</font>

429
00:17:09,069 --> 00:17:13,540
basically jittering around the last few

430
00:17:10,900 --> 00:17:15,010
<font color="#CCCCCC">rounds</font><font color="#E5E5E5"> so that the direct attack I kind</font>

431
00:17:13,540 --> 00:17:17,740
<font color="#E5E5E5">of used the same attack on all of them</font>

432
00:17:15,010 --> 00:17:19,599
<font color="#E5E5E5">it would stop</font><font color="#CCCCCC"> that so there might be</font>

433
00:17:17,740 --> 00:17:21,640
more work to<font color="#CCCCCC"> be done to fix that</font><font color="#E5E5E5"> or</font>

434
00:17:19,599 --> 00:17:24,969
machine learning<font color="#E5E5E5"> will probably save</font><font color="#CCCCCC"> us</font>

435
00:17:21,640 --> 00:17:27,339
and break it<font color="#CCCCCC"> you can ask Jasper that I'm</font>

436
00:17:24,970 --> 00:17:29,500
<font color="#CCCCCC">somebody here but what it</font><font color="#E5E5E5"> found out</font>

437
00:17:27,339 --> 00:17:31,060
<font color="#E5E5E5">basically is</font><font color="#CCCCCC"> that the some of the</font>

438
00:17:29,500 --> 00:17:32,950
counter measures don't<font color="#CCCCCC"> do it so there's</font>

439
00:17:31,060 --> 00:17:34,600
an<font color="#E5E5E5"> add noise countermeasure for example</font>

440
00:17:32,950 --> 00:17:37,060
that didn't do anything<font color="#CCCCCC"> even when</font>

441
00:17:34,600 --> 00:17:38,679
properly enabled<font color="#E5E5E5"> bit more importantly</font>

442
00:17:37,060 --> 00:17:41,230
there<font color="#CCCCCC"> is this</font><font color="#E5E5E5"> datasheet bug that you</font>

443
00:17:38,680 --> 00:17:42,700
might not<font color="#E5E5E5"> find if you just relied on the</font>

444
00:17:41,230 --> 00:17:46,120
pure you know<font color="#E5E5E5"> the datasheet and</font>

445
00:17:42,700 --> 00:17:47,740
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> so that's the</font><font color="#E5E5E5"> four</font><font color="#CCCCCC"> of them</font>

446
00:17:46,120 --> 00:17:48,159
there's the fifth device<font color="#E5E5E5"> there's an</font>

447
00:17:47,740 --> 00:17:50,110
eraser

448
00:17:48,160 --> 00:17:51,840
<font color="#CCCCCC">Rahm code in the white paper just for</font>

449
00:17:50,110 --> 00:17:54,219
speed I haven't included<font color="#E5E5E5"> it here</font>

450
00:17:51,840 --> 00:17:57,010
<font color="#CCCCCC">basically what you can</font><font color="#E5E5E5"> see is that it's</font>

451
00:17:54,220 --> 00:17:59,170
all pretty similar<font color="#E5E5E5"> leakage amounts you</font>

452
00:17:57,010 --> 00:18:02,350
know<font color="#E5E5E5"> three thousand to twenty thousand</font>

453
00:17:59,170 --> 00:18:05,140
traces<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you're using these in a</font>

454
00:18:02,350 --> 00:18:07,149
<font color="#E5E5E5">product where</font><font color="#CCCCCC"> you need to rely on</font><font color="#E5E5E5"> the</font>

455
00:18:05,140 --> 00:18:08,710
key storage<font color="#E5E5E5"> and key protection it's</font>

456
00:18:07,150 --> 00:18:10,450
really important<font color="#E5E5E5"> to understand that</font>

457
00:18:08,710 --> 00:18:12,130
<font color="#E5E5E5">power analysis can you know really</font>

458
00:18:10,450 --> 00:18:14,500
<font color="#E5E5E5">quickly</font><font color="#CCCCCC"> really easily break these</font>

459
00:18:12,130 --> 00:18:16,630
devices<font color="#E5E5E5"> and the point of selecting these</font>

460
00:18:14,500 --> 00:18:18,670
was many of<font color="#E5E5E5"> them I hadn't seen published</font>

461
00:18:16,630 --> 00:18:20,800
<font color="#CCCCCC">before</font><font color="#E5E5E5"> you know a specific break on them</font>

462
00:18:18,670 --> 00:18:22,480
so some<font color="#CCCCCC"> people might say</font><font color="#E5E5E5"> like okay they</font>

463
00:18:20,800 --> 00:18:24,490
haven't been talked about so<font color="#E5E5E5"> sugar fine</font>

464
00:18:22,480 --> 00:18:27,250
the other thing with the tool that's

465
00:18:24,490 --> 00:18:30,040
kind<font color="#CCCCCC"> of interesting is that we</font><font color="#E5E5E5"> can do</font>

466
00:18:27,250 --> 00:18:33,190
some sort<font color="#E5E5E5"> of automated testing of</font>

467
00:18:30,040 --> 00:18:35,260
<font color="#CCCCCC">various libraries so this one</font><font color="#E5E5E5"> what we</font>

468
00:18:33,190 --> 00:18:37,480
have is like<font color="#E5E5E5"> this kind of crazy diagram</font>

469
00:18:35,260 --> 00:18:39,340
and the top step we have source code we

470
00:18:37,480 --> 00:18:41,440
compile it with whatever<font color="#E5E5E5"> compiler so we</font>

471
00:18:39,340 --> 00:18:44,199
have like<font color="#CCCCCC"> ia R and GCC and everything</font>

472
00:18:41,440 --> 00:18:46,510
like<font color="#CCCCCC"> that we take the binaries and</font>

473
00:18:44,200 --> 00:18:49,150
program them<font color="#CCCCCC"> onto different hardware so</font>

474
00:18:46,510 --> 00:18:50,950
I was using<font color="#CCCCCC"> different</font><font color="#E5E5E5"> cortex-m series</font>

475
00:18:49,150 --> 00:18:52,300
devices<font color="#E5E5E5"> was the</font><font color="#CCCCCC"> objective to see if</font>

476
00:18:50,950 --> 00:18:55,930
there's differences<font color="#CCCCCC"> in the cortex-m</font>

477
00:18:52,300 --> 00:18:58,180
<font color="#E5E5E5">series put it on the platform do the</font>

478
00:18:55,930 --> 00:18:59,440
power analysis and get these results<font color="#CCCCCC"> and</font>

479
00:18:58,180 --> 00:19:01,540
so the results<font color="#E5E5E5"> are kind of giving you</font>

480
00:18:59,440 --> 00:19:03,790
pass/fail<font color="#CCCCCC"> four different steps in the</font>

481
00:19:01,540 --> 00:19:06,100
<font color="#E5E5E5">process</font><font color="#CCCCCC"> if it's suggesting it might</font><font color="#E5E5E5"> be</font>

482
00:19:03,790 --> 00:19:09,220
breakable<font color="#E5E5E5"> so you can see a few</font><font color="#CCCCCC"> things</font>

483
00:19:06,100 --> 00:19:10,990
<font color="#E5E5E5">you can see that you know don't</font><font color="#CCCCCC"> worry</font>

484
00:19:09,220 --> 00:19:13,000
<font color="#CCCCCC">about the text you can</font><font color="#E5E5E5"> see the white</font>

485
00:19:10,990 --> 00:19:16,810
paper<font color="#E5E5E5"> for details but basically</font><font color="#CCCCCC"> four</font>

486
00:19:13,000 --> 00:19:19,300
<font color="#CCCCCC">different options some things seem leaky</font>

487
00:19:16,810 --> 00:19:21,730
where other<font color="#E5E5E5"> things aren't leaky and</font>

488
00:19:19,300 --> 00:19:24,370
depending<font color="#E5E5E5"> on ROM or Ram tables for the</font>

489
00:19:21,730 --> 00:19:25,960
lookups the compiler<font color="#CCCCCC"> churning</font>

490
00:19:24,370 --> 00:19:27,879
optimizations on or off you<font color="#E5E5E5"> saw</font>

491
00:19:25,960 --> 00:19:29,410
differences<font color="#E5E5E5"> so if you just took a</font>

492
00:19:27,880 --> 00:19:31,240
library<font color="#CCCCCC"> that you said</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> this has</font>

493
00:19:29,410 --> 00:19:33,550
<font color="#E5E5E5">side-channel countermeasures we tested</font>

494
00:19:31,240 --> 00:19:35,110
it it's<font color="#E5E5E5"> great when you compile</font><font color="#CCCCCC"> it later</font>

495
00:19:33,550 --> 00:19:36,760
<font color="#CCCCCC">or compile it for a different</font>

496
00:19:35,110 --> 00:19:38,260
architecture<font color="#E5E5E5"> you may find things change</font>

497
00:19:36,760 --> 00:19:40,720
a lot

498
00:19:38,260 --> 00:19:43,210
so yeah just<font color="#E5E5E5"> testing for one device even</font>

499
00:19:40,720 --> 00:19:45,760
<font color="#CCCCCC">if</font><font color="#E5E5E5"> it's in the same</font><font color="#CCCCCC"> family</font><font color="#E5E5E5"> probably is</font>

500
00:19:43,210 --> 00:19:48,520
insufficient<font color="#E5E5E5"> the other kind of</font>

501
00:19:45,760 --> 00:19:50,379
<font color="#E5E5E5">interesting thing is that</font><font color="#CCCCCC"> I didn't</font>

502
00:19:48,520 --> 00:19:53,350
<font color="#E5E5E5">expect</font><font color="#CCCCCC"> actually to</font><font color="#E5E5E5"> find out is some of</font>

503
00:19:50,380 --> 00:19:56,400
these<font color="#E5E5E5"> also introduced timing attacks</font><font color="#CCCCCC"> and</font>

504
00:19:53,350 --> 00:20:01,570
<font color="#CCCCCC">basically what it is is that the flash</font>

505
00:19:56,400 --> 00:20:05,860
look up on the stm32 f2 is done 120

506
00:20:01,570 --> 00:20:08,409
bits of<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> within this 128 bit</font>

507
00:20:05,860 --> 00:20:10,929
<font color="#E5E5E5">look up if</font><font color="#CCCCCC"> your same lookup is in that</font>

508
00:20:08,410 --> 00:20:12,610
same sort of row<font color="#E5E5E5"> it's a little bit</font>

509
00:20:10,930 --> 00:20:14,440
<font color="#CCCCCC">faster than</font><font color="#E5E5E5"> if you go outside of</font><font color="#CCCCCC"> it so</font>

510
00:20:12,610 --> 00:20:16,540
it's it's similar to<font color="#E5E5E5"> a cache time unit</font>

511
00:20:14,440 --> 00:20:18,160
attack<font color="#CCCCCC"> but without the cache being</font>

512
00:20:16,540 --> 00:20:19,810
enabled<font color="#E5E5E5"> so if you can totally disabled</font>

513
00:20:18,160 --> 00:20:22,930
the cache you turn everything off you

514
00:20:19,810 --> 00:20:25,629
can you<font color="#E5E5E5"> always see this inconsistency</font>

515
00:20:22,930 --> 00:20:28,300
the only way basically is to switch to

516
00:20:25,630 --> 00:20:30,850
<font color="#CCCCCC">RAM tables or to always do a lookup back</font>

517
00:20:28,300 --> 00:20:32,980
to some constant address which you

518
00:20:30,850 --> 00:20:35,230
<font color="#E5E5E5">wouldn't really catch without</font><font color="#CCCCCC"> Hardware</font>

519
00:20:32,980 --> 00:20:37,120
validation<font color="#CCCCCC"> no it is a little</font><font color="#E5E5E5"> different</font>

520
00:20:35,230 --> 00:20:39,400
<font color="#CCCCCC">than</font><font color="#E5E5E5"> cache timing it's not as clearly</font>

521
00:20:37,120 --> 00:20:42,010
<font color="#E5E5E5">possible to exploit this it does have</font>

522
00:20:39,400 --> 00:20:43,630
some information<font color="#E5E5E5"> but because</font><font color="#CCCCCC"> you can't</font>

523
00:20:42,010 --> 00:20:47,379
clear the cache or anything like<font color="#E5E5E5"> that</font>

524
00:20:43,630 --> 00:20:50,020
<font color="#CCCCCC">it's not as bad an attack as a classic</font>

525
00:20:47,380 --> 00:20:52,570
cache timing<font color="#E5E5E5"> attack so yeah that's sort</font>

526
00:20:50,020 --> 00:20:54,820
<font color="#E5E5E5">of a quick overview</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things that you</font>

527
00:20:52,570 --> 00:20:56,950
can do with chip West Berlin<font color="#E5E5E5"> and the</font>

528
00:20:54,820 --> 00:20:59,530
point of<font color="#CCCCCC"> this is that power analysis</font>

529
00:20:56,950 --> 00:21:01,960
<font color="#E5E5E5">please care it's real there's lots of</font>

530
00:20:59,530 --> 00:21:05,050
talks now demonstrating it<font color="#E5E5E5"> and one of</font>

531
00:21:01,960 --> 00:21:07,210
the points<font color="#CCCCCC"> here is that you know it's</font>

532
00:21:05,050 --> 00:21:09,760
<font color="#E5E5E5">not necessary</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be doing lots of</font>

533
00:21:07,210 --> 00:21:12,130
research<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out if a new device</font>

534
00:21:09,760 --> 00:21:14,260
<font color="#CCCCCC">is breakable or not there might be a bit</font>

535
00:21:12,130 --> 00:21:15,700
of research<font color="#E5E5E5"> needed but you</font><font color="#CCCCCC"> can automate</font>

536
00:21:14,260 --> 00:21:19,240
some of<font color="#E5E5E5"> the this sort of detection</font>

537
00:21:15,700 --> 00:21:21,460
<font color="#E5E5E5">mechanisms if you need to break you know</font>

538
00:21:19,240 --> 00:21:23,950
a generic sort of crypto<font color="#E5E5E5"> AES</font>

539
00:21:21,460 --> 00:21:27,100
implementation chip West Berlin<font color="#E5E5E5"> which is</font>

540
00:21:23,950 --> 00:21:28,510
published at this repo now<font color="#CCCCCC"> can help you</font>

541
00:21:27,100 --> 00:21:30,040
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> of brute force some</font><font color="#E5E5E5"> of these</font>

542
00:21:28,510 --> 00:21:31,629
leakage models and it's a pretty simple

543
00:21:30,040 --> 00:21:35,260
<font color="#CCCCCC">idea so you</font><font color="#E5E5E5"> know you can extend this to</font>

544
00:21:31,630 --> 00:21:37,090
<font color="#E5E5E5">other other algorithms really easily</font><font color="#CCCCCC"> and</font>

545
00:21:35,260 --> 00:21:39,670
the other thing is to start<font color="#CCCCCC"> looking at</font>

546
00:21:37,090 --> 00:21:41,199
<font color="#E5E5E5">doing automated software testing</font><font color="#CCCCCC"> so if</font>

547
00:21:39,670 --> 00:21:44,820
we do<font color="#CCCCCC"> Hardware in the</font><font color="#E5E5E5"> loop testing we</font>

548
00:21:41,200 --> 00:21:47,230
can<font color="#CCCCCC"> actually detect flaws coming up from</font>

549
00:21:44,820 --> 00:21:50,230
specific compiler optimizations or

550
00:21:47,230 --> 00:21:51,880
architecture optimizations<font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah</font>

551
00:21:50,230 --> 00:21:53,710
that's what I wanted<font color="#E5E5E5"> to talk to you</font>

552
00:21:51,880 --> 00:21:55,510
about<font color="#E5E5E5"> today to show you these demos show</font>

553
00:21:53,710 --> 00:21:56,830
you it's<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> and if there's any</font>

554
00:21:55,510 --> 00:22:00,070
questions I'm happy to<font color="#E5E5E5"> take it</font><font color="#CCCCCC"> I think</font>

555
00:21:56,830 --> 00:22:02,800
<font color="#CCCCCC">we have two minutes zero minutes three</font>

556
00:22:00,070 --> 00:22:06,280
<font color="#E5E5E5">okay three minutes so if there's one or</font>

557
00:22:02,800 --> 00:22:08,379
<font color="#CCCCCC">two questions yeah</font><font color="#E5E5E5"> I you skipped over</font>

558
00:22:06,280 --> 00:22:09,790
<font color="#E5E5E5">one slide</font><font color="#CCCCCC"> very quickly where you talked</font>

559
00:22:08,380 --> 00:22:11,650
about<font color="#E5E5E5"> the test setup and you have</font>

560
00:22:09,790 --> 00:22:14,710
empathy<font color="#E5E5E5"> LS</font><font color="#CCCCCC"> India so</font><font color="#E5E5E5"> I was wondering</font>

561
00:22:11,650 --> 00:22:15,460
<font color="#E5E5E5">whether you had</font><font color="#CCCCCC"> incorporated</font><font color="#E5E5E5"> access to</font>

562
00:22:14,710 --> 00:22:17,620
the<font color="#CCCCCC"> hard work</font>

563
00:22:15,460 --> 00:22:20,380
so into the<font color="#CCCCCC"> mpls library made that color</font>

564
00:22:17,620 --> 00:22:22,989
well code available<font color="#CCCCCC"> or</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> how did that</font>

565
00:22:20,380 --> 00:22:25,000
fit<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> ibis lipos advanced</font><font color="#E5E5E5"> is so</font>

566
00:22:22,990 --> 00:22:29,350
fast that<font color="#E5E5E5"> I didn't for which slide</font><font color="#CCCCCC"> sorry</font>

567
00:22:25,000 --> 00:22:31,840
<font color="#E5E5E5">go</font><font color="#CCCCCC"> back a little bit</font><font color="#E5E5E5"> one more this one</font>

568
00:22:29,350 --> 00:22:35,020
<font color="#E5E5E5">yes yes so the embed Tila so I was</font>

569
00:22:31,840 --> 00:22:37,510
<font color="#E5E5E5">looking at the AES software so</font>

570
00:22:35,020 --> 00:22:39,100
specifically I<font color="#E5E5E5"> was curious about when</font>

571
00:22:37,510 --> 00:22:40,840
people are<font color="#CCCCCC"> building the software</font>

572
00:22:39,100 --> 00:22:43,178
<font color="#CCCCCC">krypter libraries across different</font>

573
00:22:40,840 --> 00:22:45,340
architectures<font color="#CCCCCC"> the hardware crypto</font>

574
00:22:43,179 --> 00:22:47,470
changed that's kind of<font color="#E5E5E5"> a pretty I'd</font>

575
00:22:45,340 --> 00:22:49,870
expect that to change quite a bit<font color="#CCCCCC"> I was</font>

576
00:22:47,470 --> 00:22:52,630
<font color="#E5E5E5">curious if you take a</font><font color="#CCCCCC"> software crypto so</font>

577
00:22:49,870 --> 00:22:53,860
this is all with<font color="#E5E5E5"> AES software build so</font>

578
00:22:52,630 --> 00:22:55,330
this demo is also online

579
00:22:53,860 --> 00:22:57,520
<font color="#E5E5E5">it's linked if you want to try building</font>

580
00:22:55,330 --> 00:22:59,379
<font color="#E5E5E5">them yourself for seeing all the build</font>

581
00:22:57,520 --> 00:23:02,110
flags that were in use for<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

582
00:22:59,380 --> 00:23:03,970
<font color="#CCCCCC">that's an in the same repository yes</font>

583
00:23:02,110 --> 00:23:06,250
it's linked<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the repo I just didn't</font>

584
00:23:03,970 --> 00:23:08,500
yeah it's it's not in the repo<font color="#CCCCCC"> because</font>

585
00:23:06,250 --> 00:23:12,700
it's a bunch of files so<font color="#CCCCCC"> oh yeah</font>

586
00:23:08,500 --> 00:23:14,620
Jasper one one tip<font color="#E5E5E5"> and one question so</font>

587
00:23:12,700 --> 00:23:16,450
if you put the chip in water and if it

588
00:23:14,620 --> 00:23:19,689
floats<font color="#E5E5E5"> then you know where did</font><font color="#CCCCCC"> it switch</font>

589
00:23:16,450 --> 00:23:21,880
or<font color="#E5E5E5"> not the question is</font><font color="#CCCCCC"> a bit more</font>

590
00:23:19,690 --> 00:23:23,140
<font color="#CCCCCC">serious it did you see</font><font color="#E5E5E5"> when you look at</font>

591
00:23:21,880 --> 00:23:25,120
different<font color="#E5E5E5"> compiler options were there</font>

592
00:23:23,140 --> 00:23:26,710
particular<font color="#E5E5E5"> ones that</font><font color="#CCCCCC"> always let them</font>

593
00:23:25,120 --> 00:23:28,209
more or less leakage<font color="#CCCCCC"> your particular</font>

594
00:23:26,710 --> 00:23:31,720
compilers<font color="#CCCCCC"> that let some</font><font color="#E5E5E5"> more or less</font>

595
00:23:28,210 --> 00:23:33,309
leakage<font color="#CCCCCC"> know not I didn't really do too</font>

596
00:23:31,720 --> 00:23:36,909
much work besides seeing there is

597
00:23:33,309 --> 00:23:38,799
differences so I don't know<font color="#CCCCCC"> yeah offhand</font>

598
00:23:36,909 --> 00:23:41,169
<font color="#CCCCCC">I don't have a</font><font color="#E5E5E5"> good answer there was the</font>

599
00:23:38,799 --> 00:23:43,270
<font color="#CCCCCC">ROM Ram table so that was not so much</font>

600
00:23:41,169 --> 00:23:46,450
<font color="#E5E5E5">the compiler as the embed TLS option</font>

601
00:23:43,270 --> 00:23:50,080
<font color="#E5E5E5">that tended to add a lot of differences</font>

602
00:23:46,450 --> 00:23:53,710
between<font color="#E5E5E5"> IR and GCC I don't think I saw</font>

603
00:23:50,080 --> 00:23:58,740
much difference which I think<font color="#CCCCCC"> IR went</font>

604
00:23:53,710 --> 00:23:58,740
like me saying that<font color="#CCCCCC"> but</font><font color="#E5E5E5"> okay thanks</font>

605
00:23:58,809 --> 00:24:06,490
so um I don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> we're we're sorry I</font>

606
00:24:04,080 --> 00:24:07,840
didn't see who is first sorry<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> okay</font>

607
00:24:06,490 --> 00:24:10,360
I'll get it next<font color="#CCCCCC"> time I will go this</font>

608
00:24:07,840 --> 00:24:12,490
side<font color="#E5E5E5"> can you go back to the slide where</font>

609
00:24:10,360 --> 00:24:15,090
you<font color="#CCCCCC"> introduced the</font><font color="#E5E5E5"> four targets of</font>

610
00:24:12,490 --> 00:24:15,090
evaluation

611
00:24:16,820 --> 00:24:28,169
<font color="#CCCCCC">once</font><font color="#E5E5E5"> this one okay so there's one with a</font>

612
00:24:24,260 --> 00:24:33,330
sub like a footnote<font color="#E5E5E5"> it's got an asterisk</font>

613
00:24:28,170 --> 00:24:37,920
on it just<font color="#E5E5E5"> scan</font><font color="#CCCCCC"> for words slowly like on</font>

614
00:24:33,330 --> 00:24:39,780
the summary<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> crypto yeah and it</font>

615
00:24:37,920 --> 00:24:48,840
was just<font color="#E5E5E5"> try the same for L that one has</font>

616
00:24:39,780 --> 00:24:54,990
the<font color="#E5E5E5"> weird this one here no no there it</font>

617
00:24:48,840 --> 00:24:56,820
<font color="#E5E5E5">is okay you had you had the responses</font>

618
00:24:54,990 --> 00:24:58,800
<font color="#CCCCCC">you said you contacted the manufacturers</font>

619
00:24:56,820 --> 00:25:02,550
and<font color="#CCCCCC"> you had the responses from</font><font color="#E5E5E5"> them is</font>

620
00:24:58,800 --> 00:25:06,000
<font color="#CCCCCC">that on here not speed optimized oh no</font>

621
00:25:02,550 --> 00:25:07,590
that was earlier<font color="#E5E5E5"> yeah okay are you able</font>

622
00:25:06,000 --> 00:25:09,690
to<font color="#E5E5E5"> get to that slide fairly quickly</font>

623
00:25:07,590 --> 00:25:12,840
<font color="#E5E5E5">there was something on there</font><font color="#CCCCCC"> that was a</font>

624
00:25:09,690 --> 00:25:17,880
little<font color="#E5E5E5"> bothersome was it the one week</font>

625
00:25:12,840 --> 00:25:19,379
before<font color="#E5E5E5"> no no not even that we're out of</font>

626
00:25:17,880 --> 00:25:24,030
<font color="#E5E5E5">time okay here we go</font>

627
00:25:19,380 --> 00:25:25,740
yeah<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is not an attack specific</font>

628
00:25:24,030 --> 00:25:27,720
<font color="#CCCCCC">gross</font>

629
00:25:25,740 --> 00:25:29,340
<font color="#E5E5E5">nothing is more broken now I mean</font><font color="#CCCCCC"> I</font>

630
00:25:27,720 --> 00:25:31,610
<font color="#E5E5E5">think we've actually run out of time</font>

631
00:25:29,340 --> 00:25:31,610
yeah

