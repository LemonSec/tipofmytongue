1
00:00:00,030 --> 00:00:05,490
hello everyone today<font color="#CCCCCC"> we will talk about</font>

2
00:00:03,060 --> 00:00:10,200
the exploitation of a modern<font color="#CCCCCC"> smartphone</font>

3
00:00:05,490 --> 00:00:13,830
<font color="#CCCCCC">based</font><font color="#E5E5E5"> and so this is our</font><font color="#CCCCCC"> agenda for</font>

4
00:00:10,200 --> 00:00:16,108
today<font color="#CCCCCC"> at the beginning we will do some</font>

5
00:00:13,830 --> 00:00:19,740
introduction and show some<font color="#CCCCCC"> related work</font>

6
00:00:16,109 --> 00:00:23,070
<font color="#E5E5E5">and then do some</font><font color="#CCCCCC"> background for some</font>

7
00:00:19,740 --> 00:00:27,089
necessary<font color="#E5E5E5"> knowledge to</font><font color="#CCCCCC"> understand this</font>

8
00:00:23,070 --> 00:00:29,310
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> and then we will show to you a pack</font>

9
00:00:27,090 --> 00:00:33,630
of the basement<font color="#CCCCCC"> which we use in mobile</font>

10
00:00:29,310 --> 00:00:35,010
upon<font color="#E5E5E5"> to own what we device and then we</font>

11
00:00:33,630 --> 00:00:37,890
will show to you<font color="#E5E5E5"> how to deliver and</font>

12
00:00:35,010 --> 00:00:41,099
<font color="#E5E5E5">exploit at the back we will do a demo</font>

13
00:00:37,890 --> 00:00:43,290
<font color="#E5E5E5">and finally we will explore a little bit</font>

14
00:00:41,100 --> 00:00:47,420
<font color="#CCCCCC">the concept of escaping from the</font>

15
00:00:43,290 --> 00:00:51,750
basement<font color="#CCCCCC"> and then we will do conclusions</font>

16
00:00:47,420 --> 00:00:54,239
so we are from<font color="#CCCCCC"> $0.10</font><font color="#E5E5E5"> keen security lab</font>

17
00:00:51,750 --> 00:00:58,219
and previously we were known<font color="#CCCCCC"> as skin</font>

18
00:00:54,239 --> 00:01:00,959
team and I'm<font color="#E5E5E5"> Marko</font><font color="#CCCCCC"> and my main focus is</font>

19
00:00:58,219 --> 00:01:09,570
hypervisor<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> basement</font><font color="#CCCCCC"> and CM where</font>

20
00:01:00,960 --> 00:01:12,810
and those are my colleagues<font color="#CCCCCC"> and is a</font>

21
00:01:09,570 --> 00:01:20,039
member<font color="#CCCCCC"> of a jury</font>

22
00:01:12,810 --> 00:01:22,470
<font color="#E5E5E5">Kim Kim also</font><font color="#CCCCCC"> steeped</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> foreign country</font>

23
00:01:20,040 --> 00:01:28,890
the captain of<font color="#CCCCCC"> city in video here and</font>

24
00:01:22,470 --> 00:01:30,930
trip<font color="#CCCCCC"> movie okay so about</font><font color="#E5E5E5"> our security</font>

25
00:01:28,890 --> 00:01:33,720
<font color="#E5E5E5">lab we are</font><font color="#CCCCCC"> a white</font><font color="#E5E5E5"> hat security</font>

26
00:01:30,930 --> 00:01:36,869
researcher and we are based in<font color="#E5E5E5"> Shanghai</font>

27
00:01:33,720 --> 00:01:38,700
in China<font color="#E5E5E5"> and you can see our blog and</font>

28
00:01:36,869 --> 00:01:42,689
<font color="#E5E5E5">Twitter if you want to follow our our</font>

29
00:01:38,700 --> 00:01:45,509
research<font color="#E5E5E5"> our research area our DC</font>

30
00:01:42,689 --> 00:01:48,539
security mobile security<font color="#CCCCCC"> baseband and</font>

31
00:01:45,509 --> 00:01:53,670
VMware virtualization<font color="#CCCCCC"> car</font><font color="#E5E5E5"> security and</font>

32
00:01:48,540 --> 00:01:56,700
application security<font color="#E5E5E5"> so let's start</font>

33
00:01:53,670 --> 00:01:59,040
<font color="#E5E5E5">start talking about baseband</font><font color="#CCCCCC"> so there is</font>

34
00:01:56,700 --> 00:02:02,159
a small<font color="#CCCCCC"> amount of public</font><font color="#E5E5E5"> research on</font>

35
00:01:59,040 --> 00:02:04,590
basement this<font color="#CCCCCC"> is most likely because</font><font color="#E5E5E5"> the</font>

36
00:02:02,159 --> 00:02:07,530
complexity of the<font color="#CCCCCC"> baseband is</font><font color="#E5E5E5"> by type</font>

37
00:02:04,590 --> 00:02:10,950
and you have to deal<font color="#E5E5E5"> with complex</font>

38
00:02:07,530 --> 00:02:13,640
specification so you need to<font color="#E5E5E5"> study a lot</font>

39
00:02:10,949 --> 00:02:17,488
<font color="#CCCCCC">of</font><font color="#E5E5E5"> material in order to get</font>

40
00:02:13,640 --> 00:02:20,518
<font color="#CCCCCC">- no this this radio network</font><font color="#E5E5E5"> so the</font>

41
00:02:17,489 --> 00:02:22,530
entry barrier<font color="#E5E5E5"> is a little bit high</font><font color="#CCCCCC"> but</font>

42
00:02:20,519 --> 00:02:25,470
nevertheless we have<font color="#E5E5E5"> the billions of</font>

43
00:02:22,530 --> 00:02:26,879
<font color="#CCCCCC">smart phone around</font><font color="#E5E5E5"> the world and the</font>

44
00:02:25,470 --> 00:02:30,870
<font color="#E5E5E5">most of them they have a baseband</font>

45
00:02:26,879 --> 00:02:33,870
processor and this attack surface is

46
00:02:30,870 --> 00:02:38,220
reachable<font color="#E5E5E5"> remotely so it's important to</font>

47
00:02:33,870 --> 00:02:40,170
<font color="#CCCCCC">study and doubt it</font><font color="#E5E5E5"> usually a baseband</font>

48
00:02:38,220 --> 00:02:42,180
can provide the first<font color="#E5E5E5"> remote code</font>

49
00:02:40,170 --> 00:02:44,790
execution<font color="#CCCCCC"> bug that you can trigger</font>

50
00:02:42,180 --> 00:02:48,750
over-the-air<font color="#E5E5E5"> and start to compromise a</font>

51
00:02:44,790 --> 00:02:51,030
smartphone<font color="#E5E5E5"> without user interaction so</font>

52
00:02:48,750 --> 00:02:53,670
our talk will focus on the<font color="#E5E5E5"> huawei</font>

53
00:02:51,030 --> 00:02:56,519
basement<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it was our work at the</font>

54
00:02:53,670 --> 00:02:59,640
mobile point 1 2017<font color="#E5E5E5"> where we</font>

55
00:02:56,519 --> 00:03:02,910
successfully exploited it<font color="#E5E5E5"> over there</font><font color="#CCCCCC"> but</font>

56
00:02:59,640 --> 00:03:05,910
there are<font color="#E5E5E5"> other works on other baseband</font>

57
00:03:02,910 --> 00:03:08,910
for example there is<font color="#E5E5E5"> work on</font><font color="#CCCCCC"> samsung</font>

58
00:03:05,910 --> 00:03:15,090
<font color="#E5E5E5">Shannon the Intel baseband</font><font color="#CCCCCC"> the Qualcomm</font>

59
00:03:08,910 --> 00:03:19,440
basement and<font color="#CCCCCC"> mtk basement so how does a</font>

60
00:03:15,090 --> 00:03:21,630
modern smartphone looks like maybe 20

61
00:03:19,440 --> 00:03:24,780
<font color="#E5E5E5">years ago or I don't know 10 years</font><font color="#CCCCCC"> ago a</font>

62
00:03:21,630 --> 00:03:28,889
phone was<font color="#CCCCCC"> just a single CPU</font><font color="#E5E5E5"> executing</font>

63
00:03:24,780 --> 00:03:30,900
everything<font color="#E5E5E5"> and but now it's different</font>

64
00:03:28,889 --> 00:03:33,599
<font color="#CCCCCC">you have a main CPU which is called</font>

65
00:03:30,900 --> 00:03:35,760
<font color="#CCCCCC">application</font><font color="#E5E5E5"> processor which</font><font color="#CCCCCC"> is executing</font>

66
00:03:33,599 --> 00:03:38,399
your<font color="#E5E5E5"> main operating system which can</font><font color="#CCCCCC"> be</font>

67
00:03:35,760 --> 00:03:41,399
for example Android or iOS and then you

68
00:03:38,400 --> 00:03:45,569
say you have several<font color="#E5E5E5"> other processor</font>

69
00:03:41,400 --> 00:03:47,370
involved in other operation and in the

70
00:03:45,569 --> 00:03:49,530
<font color="#E5E5E5">radio area you have the basement</font>

71
00:03:47,370 --> 00:03:53,639
processor and the Wi-Fi and Bluetooth

72
00:03:49,530 --> 00:03:56,370
system<font color="#E5E5E5"> of system chip mainly and the</font>

73
00:03:53,639 --> 00:03:58,769
<font color="#E5E5E5">basement handled the communication the</font>

74
00:03:56,370 --> 00:04:03,090
radio communication<font color="#CCCCCC"> with many different</font>

75
00:03:58,769 --> 00:04:07,260
<font color="#E5E5E5">type of network such as 2g 3G 4G so for</font>

76
00:04:03,090 --> 00:04:10,650
example<font color="#E5E5E5"> they</font><font color="#CCCCCC"> could be GSM UMTS</font><font color="#E5E5E5"> and LTE</font>

77
00:04:07,260 --> 00:04:17,070
and this kind of radio component can be

78
00:04:10,650 --> 00:04:19,168
<font color="#CCCCCC">attacked</font><font color="#E5E5E5"> remotely over-the-air so we</font>

79
00:04:17,070 --> 00:04:20,909
just told you that you have application

80
00:04:19,168 --> 00:04:25,799
processor and then<font color="#E5E5E5"> you have a paste and</font>

81
00:04:20,910 --> 00:04:26,920
and they are two separate<font color="#E5E5E5"> CPU but they</font>

82
00:04:25,800 --> 00:04:31,120
communicate each

83
00:04:26,920 --> 00:04:34,120
and<font color="#E5E5E5"> usually they do it with a bus which</font>

84
00:04:31,120 --> 00:04:39,580
depending<font color="#E5E5E5"> on implementation</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> be USB</font>

85
00:04:34,120 --> 00:04:41,680
PCI Express<font color="#CCCCCC"> or shared</font><font color="#E5E5E5"> memory so since</font>

86
00:04:39,580 --> 00:04:43,870
they<font color="#CCCCCC"> are separate system from each other</font>

87
00:04:41,680 --> 00:04:46,300
<font color="#E5E5E5">if you get remote code execution on</font><font color="#CCCCCC"> the</font>

88
00:04:43,870 --> 00:04:48,520
basement<font color="#CCCCCC"> you run code inside the</font>

89
00:04:46,300 --> 00:04:50,350
<font color="#E5E5E5">debasement you don't run code</font><font color="#CCCCCC"> on the</font>

90
00:04:48,520 --> 00:04:54,520
application processor<font color="#E5E5E5"> because those two</font>

91
00:04:50,350 --> 00:04:56,620
are<font color="#E5E5E5"> two separate CPU but the</font><font color="#CCCCCC"> Advanta</font>

92
00:04:54,520 --> 00:04:59,560
advantage is that<font color="#E5E5E5"> based on</font><font color="#CCCCCC"> the lag</font>

93
00:04:56,620 --> 00:05:02,650
behind<font color="#E5E5E5"> in terms of mitigation</font><font color="#CCCCCC"> compared</font>

94
00:04:59,560 --> 00:05:05,110
<font color="#E5E5E5">to the application processor for example</font>

95
00:05:02,650 --> 00:05:08,710
in the<font color="#E5E5E5"> Wow</font><font color="#CCCCCC"> in basement we notice that</font>

96
00:05:05,110 --> 00:05:12,760
they lack of<font color="#CCCCCC"> SLR and</font><font color="#E5E5E5"> stack cookies so</font>

97
00:05:08,710 --> 00:05:15,760
the remote exploitation is easier but

98
00:05:12,760 --> 00:05:18,099
this kind<font color="#E5E5E5"> of lack of mitigation is not</font>

99
00:05:15,760 --> 00:05:23,680
only<font color="#E5E5E5"> on this basement it's widespread</font>

100
00:05:18,100 --> 00:05:25,390
between<font color="#E5E5E5"> basically all</font><font color="#CCCCCC"> manufacture so why</font>

101
00:05:23,680 --> 00:05:29,680
do we<font color="#CCCCCC"> want to target the basement</font>

102
00:05:25,390 --> 00:05:32,890
there are<font color="#E5E5E5"> several reason which can be an</font>

103
00:05:29,680 --> 00:05:37,420
advantage<font color="#CCCCCC"> first</font><font color="#E5E5E5"> it's less understood</font>

104
00:05:32,890 --> 00:05:39,640
attack surface and less audited<font color="#CCCCCC"> second</font>

105
00:05:37,420 --> 00:05:41,920
one it can<font color="#CCCCCC"> be exploited remotely over</font>

106
00:05:39,640 --> 00:05:44,140
<font color="#CCCCCC">the</font><font color="#E5E5E5"> air and potentially you can do it</font>

107
00:05:41,920 --> 00:05:46,060
from very long distance because<font color="#CCCCCC"> if you</font>

108
00:05:44,140 --> 00:05:47,849
<font color="#E5E5E5">think about it maybe your phone right</font>

109
00:05:46,060 --> 00:05:52,240
now<font color="#E5E5E5"> is connected to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> base station</font>

110
00:05:47,850 --> 00:05:54,550
<font color="#E5E5E5">several kilometres from here</font><font color="#CCCCCC"> the third</font>

111
00:05:52,240 --> 00:06:01,330
reason is<font color="#E5E5E5"> like I said the lack of</font>

112
00:05:54,550 --> 00:06:03,880
<font color="#E5E5E5">mitigation and often when a device</font><font color="#CCCCCC"> die</font>

113
00:06:01,330 --> 00:06:07,150
such as for example<font color="#CCCCCC"> the iPhone has a</font>

114
00:06:03,880 --> 00:06:08,800
quite<font color="#E5E5E5"> calm voice then maybe Apple</font>

115
00:06:07,150 --> 00:06:10,599
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the source code</font>

116
00:06:08,800 --> 00:06:13,540
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> basement so they cannot audit</font>

117
00:06:10,600 --> 00:06:16,090
themselves<font color="#CCCCCC"> so it's less people looking</font>

118
00:06:13,540 --> 00:06:18,820
for<font color="#CCCCCC"> Bobby there and last but not least</font>

119
00:06:16,090 --> 00:06:23,169
<font color="#E5E5E5">reason it's because</font><font color="#CCCCCC"> of complexity of</font>

120
00:06:18,820 --> 00:06:26,400
course so we need to interact<font color="#E5E5E5"> with radio</font>

121
00:06:23,170 --> 00:06:29,500
so we<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to know</font><font color="#CCCCCC"> Auto radio technology</font>

122
00:06:26,400 --> 00:06:31,090
luckily<font color="#E5E5E5"> today it's easier to do this</font>

123
00:06:29,500 --> 00:06:34,090
kind of research<font color="#E5E5E5"> tends to</font>

124
00:06:31,090 --> 00:06:36,729
software-defined radio they are

125
00:06:34,090 --> 00:06:40,090
<font color="#E5E5E5">inexpensive electronic device which</font>

126
00:06:36,730 --> 00:06:40,750
allows<font color="#E5E5E5"> you to run fake base station</font>

127
00:06:40,090 --> 00:06:43,630
basically

128
00:06:40,750 --> 00:06:46,660
and with this fake base station you can

129
00:06:43,630 --> 00:06:49,150
attack the<font color="#E5E5E5"> basement and example of this</font>

130
00:06:46,660 --> 00:06:52,450
kind<font color="#E5E5E5"> of product can be blade RF for us</font>

131
00:06:49,150 --> 00:06:54,549
<font color="#CCCCCC">RT and there is a lot of open source</font>

132
00:06:52,450 --> 00:06:58,930
<font color="#CCCCCC">software</font><font color="#E5E5E5"> but the only</font><font color="#CCCCCC"> problem is</font><font color="#E5E5E5"> that</font>

133
00:06:54,550 --> 00:07:01,270
they cover<font color="#CCCCCC"> only some radio stacks and we</font>

134
00:06:58,930 --> 00:07:05,170
<font color="#E5E5E5">will see why this will be a problem for</font>

135
00:07:01,270 --> 00:07:07,960
us so the traditional way<font color="#CCCCCC"> to attack a</font>

136
00:07:05,170 --> 00:07:12,550
basement is to run<font color="#E5E5E5"> base station with a</font>

137
00:07:07,960 --> 00:07:16,840
<font color="#E5E5E5">STR and the problem why this is exactly</font>

138
00:07:12,550 --> 00:07:19,419
is it because the<font color="#CCCCCC"> older network like</font><font color="#E5E5E5"> GSM</font>

139
00:07:16,840 --> 00:07:22,690
<font color="#E5E5E5">they don't have mutual authentication so</font>

140
00:07:19,419 --> 00:07:24,880
if I just go around<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a SDR</font><font color="#E5E5E5"> and my</font>

141
00:07:22,690 --> 00:07:27,460
signal<font color="#E5E5E5"> is stronger than the base station</font>

142
00:07:24,880 --> 00:07:30,580
of<font color="#E5E5E5"> the carrier then your phone will</font>

143
00:07:27,460 --> 00:07:33,070
connect to my SDR based fake base

144
00:07:30,580 --> 00:07:36,849
station and I can exploit your basement

145
00:07:33,070 --> 00:07:41,880
<font color="#E5E5E5">and like I</font><font color="#CCCCCC"> said we cannot use this</font>

146
00:07:36,850 --> 00:07:44,140
approach in our case<font color="#CCCCCC"> unfortunately so</font>

147
00:07:41,880 --> 00:07:48,370
probably<font color="#E5E5E5"> in the u.s. you already know</font>

148
00:07:44,140 --> 00:07:51,490
what CDMA<font color="#CCCCCC"> is because it was popular in</font>

149
00:07:48,370 --> 00:07:54,910
<font color="#E5E5E5">the US and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> bot will</font><font color="#E5E5E5"> be in the</font>

150
00:07:51,490 --> 00:07:59,260
CDMA part so we needed to at least know

151
00:07:54,910 --> 00:08:03,490
what CDMA is<font color="#E5E5E5"> CDMA is a family of</font><font color="#CCCCCC"> three G</font>

152
00:07:59,260 --> 00:08:07,780
<font color="#CCCCCC">Network which allow you</font><font color="#E5E5E5"> to carry a voice</font>

153
00:08:03,490 --> 00:08:13,260
data<font color="#E5E5E5"> and signal data so it was</font><font color="#CCCCCC"> competing</font>

154
00:08:07,780 --> 00:08:18,190
<font color="#E5E5E5">in some area of the world with unts so</font>

155
00:08:13,260 --> 00:08:20,560
to some<font color="#CCCCCC"> sama sum up basically a dividend</font>

156
00:08:18,190 --> 00:08:23,820
is a black box<font color="#E5E5E5"> inside of your phone</font>

157
00:08:20,560 --> 00:08:27,100
which<font color="#E5E5E5"> fans are not specified VMware and</font>

158
00:08:23,820 --> 00:08:29,229
it's kind of similar<font color="#CCCCCC"> to</font><font color="#E5E5E5"> IOT device</font>

159
00:08:27,100 --> 00:08:32,050
because they<font color="#E5E5E5"> run like</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> real-time</font>

160
00:08:29,229 --> 00:08:35,679
<font color="#CCCCCC">operating system and they have tasks and</font>

161
00:08:32,049 --> 00:08:39,130
they schedule those tasks<font color="#E5E5E5"> and each task</font>

162
00:08:35,679 --> 00:08:41,109
is responsible<font color="#CCCCCC"> for some layer or some</font>

163
00:08:39,130 --> 00:08:44,200
component<font color="#E5E5E5"> of the basement and the</font>

164
00:08:41,110 --> 00:08:47,639
complexity is huge<font color="#E5E5E5"> because if you take</font>

165
00:08:44,200 --> 00:08:50,800
for example the<font color="#E5E5E5"> GPRS or GSM</font>

166
00:08:47,639 --> 00:08:56,139
<font color="#E5E5E5">specification they are thousands of</font>

167
00:08:50,800 --> 00:08:58,689
pages so<font color="#CCCCCC"> let's talk a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more</font>

168
00:08:56,139 --> 00:09:01,779
<font color="#E5E5E5">about real-time operating system on</font><font color="#CCCCCC"> days</font>

169
00:08:58,690 --> 00:09:04,779
<font color="#CCCCCC">when like I said they run tasks</font><font color="#E5E5E5"> but what</font>

170
00:09:01,779 --> 00:09:08,290
you need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> know is that often there is</font>

171
00:09:04,779 --> 00:09:11,410
a task<font color="#E5E5E5"> for every</font><font color="#CCCCCC"> Network layer</font><font color="#E5E5E5"> you can</font>

172
00:09:08,290 --> 00:09:13,120
find in the protocol<font color="#E5E5E5"> so for example if</font>

173
00:09:11,410 --> 00:09:18,850
you take<font color="#E5E5E5"> it a mobility management layer</font>

174
00:09:13,120 --> 00:09:21,670
which is<font color="#E5E5E5"> a GSM part you are often able</font>

175
00:09:18,850 --> 00:09:24,880
<font color="#E5E5E5">to find a task called</font><font color="#CCCCCC"> mmm which</font><font color="#E5E5E5"> is</font>

176
00:09:21,670 --> 00:09:27,579
responsible<font color="#CCCCCC"> for this part</font><font color="#E5E5E5"> so once you</font>

177
00:09:24,880 --> 00:09:30,670
<font color="#E5E5E5">identify the correct</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> you can check</font>

178
00:09:27,579 --> 00:09:34,180
the message handler<font color="#E5E5E5"> because this kind of</font>

179
00:09:30,670 --> 00:09:37,689
<font color="#CCCCCC">task they communicate via IPC</font><font color="#E5E5E5"> and once</font>

180
00:09:34,180 --> 00:09:41,019
<font color="#E5E5E5">you found this message handler you can</font>

181
00:09:37,690 --> 00:09:44,010
identify the function responsible for

182
00:09:41,019 --> 00:09:46,180
parsing and processing the radio message

183
00:09:44,010 --> 00:09:48,760
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the one that the attacker</font>

184
00:09:46,180 --> 00:09:54,489
controls<font color="#E5E5E5"> and you can start</font><font color="#CCCCCC"> from here</font><font color="#E5E5E5"> to</font>

185
00:09:48,760 --> 00:09:56,260
<font color="#CCCCCC">audit for memory corruption bugs so how</font>

186
00:09:54,490 --> 00:09:57,910
do you start<font color="#CCCCCC"> to define bugs</font>

187
00:09:56,260 --> 00:10:00,069
we need the first of course<font color="#E5E5E5"> to collect</font>

188
00:09:57,910 --> 00:10:02,949
information<font color="#E5E5E5"> and we have three mains</font>

189
00:10:00,070 --> 00:10:05,290
<font color="#CCCCCC">trimming area to get information the</font>

190
00:10:02,949 --> 00:10:08,019
first<font color="#E5E5E5"> one is of course fumer the second</font>

191
00:10:05,290 --> 00:10:10,390
one is runtime information<font color="#CCCCCC"> for some</font>

192
00:10:08,019 --> 00:10:12,550
debugging<font color="#E5E5E5"> at least the third one is</font>

193
00:10:10,390 --> 00:10:17,470
<font color="#CCCCCC">online information so we will check</font>

194
00:10:12,550 --> 00:10:20,469
those<font color="#E5E5E5"> three so the</font><font color="#CCCCCC"> fumer</font><font color="#E5E5E5"> for huawei we</font>

195
00:10:17,470 --> 00:10:22,630
<font color="#CCCCCC">grabbed it from</font><font color="#E5E5E5"> the file system</font><font color="#CCCCCC"> of the</font>

196
00:10:20,470 --> 00:10:26,130
<font color="#E5E5E5">smartphone you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> find a file</font><font color="#CCCCCC"> called</font>

197
00:10:22,630 --> 00:10:28,540
the<font color="#CCCCCC"> sector</font><font color="#E5E5E5"> belong modem dot</font><font color="#CCCCCC"> bean and</font>

198
00:10:26,130 --> 00:10:30,279
it's on the file<font color="#CCCCCC"> system of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> phone</font>

199
00:10:28,540 --> 00:10:32,560
because<font color="#E5E5E5"> the Android kernel will load it</font>

200
00:10:30,279 --> 00:10:36,069
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> it will pass it to the trust</font>

201
00:10:32,560 --> 00:10:37,989
zone trusted execution environment<font color="#CCCCCC"> to</font>

202
00:10:36,069 --> 00:10:39,670
check the signature<font color="#E5E5E5"> and then load</font><font color="#CCCCCC"> it</font>

203
00:10:37,990 --> 00:10:42,760
into the<font color="#CCCCCC"> base and memory</font><font color="#E5E5E5"> and start to</font>

204
00:10:39,670 --> 00:10:44,979
the basement since we got this file

205
00:10:42,760 --> 00:10:46,750
after some adjustment we can just load

206
00:10:44,980 --> 00:10:50,410
it<font color="#E5E5E5"> in either</font><font color="#CCCCCC"> Pro and start at the</font>

207
00:10:46,750 --> 00:10:52,600
reverse<font color="#E5E5E5"> engineering as you know if you</font>

208
00:10:50,410 --> 00:10:55,660
do reverse engineering<font color="#CCCCCC"> if you have any</font>

209
00:10:52,600 --> 00:10:58,140
kind<font color="#E5E5E5"> of debugging or runtime information</font>

210
00:10:55,660 --> 00:11:00,959
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> very useful</font>

211
00:10:58,140 --> 00:11:04,010
in the wall<font color="#CCCCCC"> a basement</font><font color="#E5E5E5"> there was some</font>

212
00:11:00,959 --> 00:11:06,869
runtime shell called the<font color="#CCCCCC"> seashell but</font>

213
00:11:04,010 --> 00:11:09,720
sadly now it has<font color="#E5E5E5"> been removed</font><font color="#CCCCCC"> when you</font>

214
00:11:06,870 --> 00:11:12,690
were version so we<font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> anymore</font>

215
00:11:09,720 --> 00:11:15,959
however we found<font color="#CCCCCC"> out that when you crash</font>

216
00:11:12,690 --> 00:11:18,300
the basement<font color="#CCCCCC"> with some bug it will</font>

217
00:11:15,959 --> 00:11:20,449
output<font color="#E5E5E5"> some log to the application</font>

218
00:11:18,300 --> 00:11:23,040
processor and store it on the<font color="#CCCCCC"> filesystem</font>

219
00:11:20,450 --> 00:11:25,980
<font color="#CCCCCC">and also if you have kernel code</font>

220
00:11:23,040 --> 00:11:27,689
execution<font color="#CCCCCC"> you can just read the basement</font>

221
00:11:25,980 --> 00:11:30,930
memory from physical memory of the

222
00:11:27,690 --> 00:11:33,690
device<font color="#CCCCCC"> starting from this address and</font>

223
00:11:30,930 --> 00:11:40,410
this kind of memory<font color="#E5E5E5"> dump capability</font>

224
00:11:33,690 --> 00:11:42,750
<font color="#E5E5E5">helped us a lot</font><font color="#CCCCCC"> to adjust our expert we</font>

225
00:11:40,410 --> 00:11:44,550
did some research<font color="#CCCCCC"> online and I mean</font><font color="#E5E5E5"> of</font>

226
00:11:42,750 --> 00:11:46,380
<font color="#CCCCCC">course you need to know that 3gpp</font>

227
00:11:44,550 --> 00:11:49,290
specifications since you are attacking

228
00:11:46,380 --> 00:11:52,230
<font color="#CCCCCC">radio network</font><font color="#E5E5E5"> you need to know how those</font>

229
00:11:49,290 --> 00:11:54,209
<font color="#CCCCCC">network work and the second one we</font><font color="#E5E5E5"> found</font>

230
00:11:52,230 --> 00:11:54,720
some leak at<font color="#CCCCCC"> the version of the source</font>

231
00:11:54,209 --> 00:11:58,529
code

232
00:11:54,720 --> 00:12:02,579
it was old<font color="#CCCCCC"> but it was</font><font color="#E5E5E5"> very useful for</font>

233
00:11:58,529 --> 00:12:04,920
reverse engineer and then there is this

234
00:12:02,579 --> 00:12:07,439
<font color="#CCCCCC">small project</font><font color="#E5E5E5"> which also was quite</font>

235
00:12:04,920 --> 00:12:12,500
<font color="#CCCCCC">useful because it documents</font><font color="#E5E5E5"> the format</font>

236
00:12:07,440 --> 00:12:15,570
of the non-volatile Ram<font color="#CCCCCC"> for this data so</font>

237
00:12:12,500 --> 00:12:20,220
let's now<font color="#CCCCCC"> go into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> case study of the</font>

238
00:12:15,570 --> 00:12:23,579
<font color="#E5E5E5">basement so this section of</font><font color="#CCCCCC"> the</font>

239
00:12:20,220 --> 00:12:26,520
<font color="#E5E5E5">presentation we</font><font color="#CCCCCC"> will first show</font><font color="#E5E5E5"> the back</font>

240
00:12:23,579 --> 00:12:31,770
<font color="#E5E5E5">then we will explain how we trigger it</font>

241
00:12:26,520 --> 00:12:34,230
<font color="#CCCCCC">and then our</font><font color="#E5E5E5"> we exploited it so our</font>

242
00:12:31,770 --> 00:12:37,260
point woman vulnerability was<font color="#E5E5E5"> in the</font>

243
00:12:34,230 --> 00:12:42,350
<font color="#E5E5E5">CDMA part of the basement</font><font color="#CCCCCC"> specifically</font>

244
00:12:37,260 --> 00:12:46,260
in a apart<font color="#CCCCCC"> CDMA 1x SMS transport message</font>

245
00:12:42,350 --> 00:12:49,290
<font color="#E5E5E5">transport</font><font color="#CCCCCC"> layer message in a function</font>

246
00:12:46,260 --> 00:12:53,279
<font color="#CCCCCC">that it's responsible for some message</font>

247
00:12:49,290 --> 00:12:55,380
called<font color="#CCCCCC"> PR L so at the bottom you can see</font>

248
00:12:53,279 --> 00:12:59,130
<font color="#CCCCCC">a like a very</font><font color="#E5E5E5"> simplified version of the</font>

249
00:12:55,380 --> 00:13:03,329
back<font color="#E5E5E5"> but first before we check the back</font>

250
00:12:59,130 --> 00:13:05,880
we<font color="#E5E5E5"> need to check what</font><font color="#CCCCCC"> men copy s is and</font>

251
00:13:03,329 --> 00:13:07,849
copy s is a secure version of a more

252
00:13:05,880 --> 00:13:10,870
secure<font color="#CCCCCC"> version of the memory</font><font color="#E5E5E5"> copy</font>

253
00:13:07,850 --> 00:13:13,240
<font color="#E5E5E5">instead of taking three parameters</font>

254
00:13:10,870 --> 00:13:17,069
which should be<font color="#CCCCCC"> a destination</font><font color="#E5E5E5"> source and</font>

255
00:13:13,240 --> 00:13:20,560
<font color="#CCCCCC">size they take four because if</font>

256
00:13:17,069 --> 00:13:23,079
destination<font color="#E5E5E5"> destination size source and</font>

257
00:13:20,560 --> 00:13:26,859
source size<font color="#E5E5E5"> in this way they can</font><font color="#CCCCCC"> check</font>

258
00:13:23,079 --> 00:13:29,709
if the copy<font color="#CCCCCC"> goes out of bound the right</font>

259
00:13:26,860 --> 00:13:32,949
or out of boundary<font color="#E5E5E5"> in terms of length so</font>

260
00:13:29,709 --> 00:13:34,388
they can do this kind<font color="#E5E5E5"> of check and for</font>

261
00:13:32,949 --> 00:13:37,750
<font color="#E5E5E5">example if you are overflowing the</font>

262
00:13:34,389 --> 00:13:39,759
destination<font color="#CCCCCC"> they will panic the basement</font>

263
00:13:37,750 --> 00:13:42,490
<font color="#E5E5E5">and they will you you cannot exploit</font>

264
00:13:39,759 --> 00:13:46,870
<font color="#E5E5E5">this back and this kind of method is a</font>

265
00:13:42,490 --> 00:13:49,060
<font color="#E5E5E5">little bit maybe</font><font color="#CCCCCC"> primitive</font><font color="#E5E5E5"> but it gives</font>

266
00:13:46,870 --> 00:13:53,019
a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> purely by chance</font>

267
00:13:49,060 --> 00:13:56,109
<font color="#E5E5E5">and luckily</font><font color="#CCCCCC"> our body is</font><font color="#E5E5E5"> not affected by</font>

268
00:13:53,019 --> 00:14:01,209
<font color="#CCCCCC">this because</font><font color="#E5E5E5"> we control the offset of</font>

269
00:13:56,110 --> 00:14:05,110
the destination so let's check again<font color="#E5E5E5"> in</font>

270
00:14:01,209 --> 00:14:07,149
the<font color="#CCCCCC"> bud basically in this function</font><font color="#E5E5E5"> some</font>

271
00:14:05,110 --> 00:14:09,100
offset and the lengths are extracted

272
00:14:07,149 --> 00:14:11,920
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the message then you have this for</font>

273
00:14:09,100 --> 00:14:15,100
<font color="#E5E5E5">loop which is incrementing the variable</font>

274
00:14:11,920 --> 00:14:17,349
called<font color="#CCCCCC"> byte position and it keep adding</font>

275
00:14:15,100 --> 00:14:20,230
some length that we control to the to

276
00:14:17,350 --> 00:14:22,809
the offset<font color="#E5E5E5"> and these</font><font color="#CCCCCC"> objects</font><font color="#E5E5E5"> this offset</font>

277
00:14:20,230 --> 00:14:27,160
<font color="#E5E5E5">is used as a offset into the destination</font>

278
00:14:22,809 --> 00:14:31,209
buffer so at the end we can out of<font color="#E5E5E5"> bound</font>

279
00:14:27,160 --> 00:14:36,370
right and we this lead<font color="#CCCCCC"> to a exploitable</font>

280
00:14:31,209 --> 00:14:38,920
stack overflow<font color="#E5E5E5"> on the base so now they</font>

281
00:14:36,370 --> 00:14:41,050
will I will leave the stage<font color="#CCCCCC"> and they</font>

282
00:14:38,920 --> 00:14:46,269
will<font color="#E5E5E5"> explain to you how to trigger the</font>

283
00:14:41,050 --> 00:14:48,670
body<font color="#E5E5E5"> okay I will talk about how to how</font>

284
00:14:46,269 --> 00:14:54,600
it figure and deliver or exploit to the

285
00:14:48,670 --> 00:14:57,219
base<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so probably you will know that</font>

286
00:14:54,600 --> 00:15:01,029
traditional to talk with the<font color="#CCCCCC"> pace van</font><font color="#E5E5E5"> we</font>

287
00:14:57,220 --> 00:15:03,939
need some open<font color="#CCCCCC"> relay some open source</font>

288
00:15:01,029 --> 00:15:07,420
project<font color="#CCCCCC"> which based on</font><font color="#E5E5E5"> the soft</font><font color="#CCCCCC"> defined</font>

289
00:15:03,939 --> 00:15:09,699
radio<font color="#CCCCCC"> tracks</font><font color="#E5E5E5"> there are many many open</font>

290
00:15:07,420 --> 00:15:13,449
source<font color="#E5E5E5"> project that can help us to set</font>

291
00:15:09,699 --> 00:15:16,508
up<font color="#E5E5E5"> certain networks such as</font><font color="#CCCCCC"> via open DPS</font>

292
00:15:13,449 --> 00:15:17,819
<font color="#E5E5E5">which help us to give you the GSM</font>

293
00:15:16,509 --> 00:15:20,250
<font color="#CCCCCC">network or</font>

294
00:15:17,820 --> 00:15:25,800
open<font color="#E5E5E5"> or open our interface which can</font>

295
00:15:20,250 --> 00:15:29,190
<font color="#E5E5E5">help us</font><font color="#CCCCCC"> to set up a LTE network but you</font>

296
00:15:25,800 --> 00:15:31,890
<font color="#E5E5E5">know that</font><font color="#CCCCCC"> or case it</font><font color="#E5E5E5"> the refined back in</font>

297
00:15:29,190 --> 00:15:36,390
the CDMA that seems none of the those

298
00:15:31,890 --> 00:15:39,870
open source project do not support the

299
00:15:36,390 --> 00:15:42,990
CDMA protocol<font color="#E5E5E5"> so is that means that we</font>

300
00:15:39,870 --> 00:15:46,740
<font color="#E5E5E5">have to build a new project</font><font color="#CCCCCC"> to export it</font>

301
00:15:42,990 --> 00:15:51,770
to write a thousand or much much<font color="#E5E5E5"> more</font>

302
00:15:46,740 --> 00:15:55,470
co2 to make<font color="#E5E5E5"> a new product to support</font><font color="#CCCCCC"> its</font>

303
00:15:51,770 --> 00:16:01,189
anomia higher<font color="#CCCCCC"> stop</font><font color="#E5E5E5"> so we came up with</font><font color="#CCCCCC"> a</font>

304
00:15:55,470 --> 00:16:04,770
<font color="#E5E5E5">different solution</font><font color="#CCCCCC"> actually we abused</font>

305
00:16:01,190 --> 00:16:09,000
<font color="#E5E5E5">multi-protocol testers made</font><font color="#CCCCCC"> by loads</font>

306
00:16:04,770 --> 00:16:12,150
<font color="#CCCCCC">Schwartz</font><font color="#E5E5E5"> this machine is used used to be</font>

307
00:16:09,000 --> 00:16:14,730
design<font color="#E5E5E5"> is</font><font color="#CCCCCC"> designed</font><font color="#E5E5E5"> we tested signal and</font>

308
00:16:12,150 --> 00:16:18,660
non signal functionality of mobile

309
00:16:14,730 --> 00:16:22,620
stations<font color="#CCCCCC"> it supports different</font><font color="#E5E5E5"> networks</font>

310
00:16:18,660 --> 00:16:25,199
including<font color="#CCCCCC"> or targets which is in CDMA</font><font color="#E5E5E5"> so</font>

311
00:16:22,620 --> 00:16:28,770
you will see that<font color="#E5E5E5"> how we reverse this</font>

312
00:16:25,200 --> 00:16:33,240
machine and<font color="#E5E5E5"> Paget's to make it specify</font>

313
00:16:28,770 --> 00:16:37,410
our requirement to deliver<font color="#E5E5E5"> and to to</font>

314
00:16:33,240 --> 00:16:40,500
trigger back so we use this machine

315
00:16:37,410 --> 00:16:44,900
<font color="#E5E5E5">together with</font><font color="#CCCCCC"> a Faraday cage assuring</font>

316
00:16:40,500 --> 00:16:50,040
box in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> gain better stability</font>

317
00:16:44,900 --> 00:16:52,980
<font color="#E5E5E5">and now as well we also use this cake to</font>

318
00:16:50,040 --> 00:16:56,699
avoid any interferences<font color="#E5E5E5"> you know that</font>

319
00:16:52,980 --> 00:16:57,960
you cannot it cannot disturb any common

320
00:16:56,700 --> 00:17:00,330
communications in the air

321
00:16:57,960 --> 00:17:03,770
otherwise you<font color="#E5E5E5"> may</font><font color="#CCCCCC"> breaks law in many</font>

322
00:17:00,330 --> 00:17:06,180
<font color="#E5E5E5">countries so we have to do that and</font>

323
00:17:03,770 --> 00:17:09,540
using this machine<font color="#E5E5E5"> from the user</font>

324
00:17:06,180 --> 00:17:12,150
interface<font color="#E5E5E5"> we can adjust the network</font>

325
00:17:09,540 --> 00:17:14,310
parameters such as<font color="#E5E5E5"> the country code the</font>

326
00:17:12,150 --> 00:17:16,800
network code and

327
00:17:14,310 --> 00:17:20,010
even the channel<font color="#E5E5E5"> channel neighbors and</font>

328
00:17:16,800 --> 00:17:23,069
so on<font color="#E5E5E5"> so after connecting the</font><font color="#CCCCCC"> mobile</font>

329
00:17:20,010 --> 00:17:27,480
phone with the<font color="#E5E5E5"> this machine we can to</font>

330
00:17:23,069 --> 00:17:31,379
this network which the this machine<font color="#E5E5E5"> make</font>

331
00:17:27,480 --> 00:17:35,900
it we can<font color="#E5E5E5"> make her phone calls and even</font>

332
00:17:31,380 --> 00:17:35,900
send text<font color="#CCCCCC"> messages from the interface</font>

333
00:17:36,200 --> 00:17:43,920
but it's a common<font color="#E5E5E5"> tester</font><font color="#CCCCCC"> so we cannot</font>

334
00:17:40,710 --> 00:17:47,460
use<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> deliver or malicious payload</font>

335
00:17:43,920 --> 00:17:50,700
<font color="#E5E5E5">so we have to hack into this</font><font color="#CCCCCC"> machine to</font>

336
00:17:47,460 --> 00:17:55,770
<font color="#E5E5E5">make it satisfy our requirement this</font>

337
00:17:50,700 --> 00:17:58,520
machine contains<font color="#CCCCCC"> different part</font><font color="#E5E5E5"> the</font>

338
00:17:55,770 --> 00:18:01,560
major part is<font color="#CCCCCC"> so-called base unit which</font>

339
00:17:58,520 --> 00:18:04,370
including mainboard and memories and

340
00:18:01,560 --> 00:18:06,990
<font color="#E5E5E5">hard drive the person experienced</font>

341
00:18:04,370 --> 00:18:10,979
Windows operating system which<font color="#CCCCCC"> is a</font>

342
00:18:06,990 --> 00:18:13,470
quite old version of Windows<font color="#E5E5E5"> and to</font>

343
00:18:10,980 --> 00:18:16,830
<font color="#E5E5E5">support different different protocol</font>

344
00:18:13,470 --> 00:18:21,600
stacks the different<font color="#CCCCCC"> so-called</font><font color="#E5E5E5"> optional</font>

345
00:18:16,830 --> 00:18:23,370
<font color="#E5E5E5">link</font><font color="#CCCCCC"> handle pores</font><font color="#E5E5E5"> plaque needed if for</font>

346
00:18:21,600 --> 00:18:26,610
<font color="#CCCCCC">example if you want this machine's</font>

347
00:18:23,370 --> 00:18:30,929
<font color="#CCCCCC">whispered the GSM you need to plug</font><font color="#E5E5E5"> a</font>

348
00:18:26,610 --> 00:18:34,939
<font color="#E5E5E5">so-called p21 singular unit and</font>

349
00:18:30,930 --> 00:18:36,180
<font color="#E5E5E5">mainboard and to support CVMA we need</font>

350
00:18:34,940 --> 00:18:40,320
<font color="#CCCCCC">b83</font>

351
00:18:36,180 --> 00:18:44,100
<font color="#CCCCCC">signal early on it</font><font color="#E5E5E5"> so like the shot</font>

352
00:18:40,320 --> 00:18:46,770
<font color="#E5E5E5">message as example when the users tried</font>

353
00:18:44,100 --> 00:18:50,639
<font color="#E5E5E5">to send a message</font><font color="#CCCCCC"> to the mobile station</font>

354
00:18:46,770 --> 00:18:53,760
to the base<font color="#E5E5E5"> pair</font><font color="#CCCCCC"> he input the</font><font color="#E5E5E5"> plain tax</font>

355
00:18:50,640 --> 00:18:57,210
and interface and soon it<font color="#CCCCCC"> will try</font><font color="#E5E5E5"> to</font>

356
00:18:53,760 --> 00:18:59,940
encode the message and send it<font color="#CCCCCC"> as a</font>

357
00:18:57,210 --> 00:19:02,280
<font color="#E5E5E5">so-called link</font><font color="#CCCCCC"> handling message to the</font>

358
00:18:59,940 --> 00:19:06,120
<font color="#E5E5E5">sync single unit and then the single</font>

359
00:19:02,280 --> 00:19:09,149
<font color="#CCCCCC">errand in Rio had headers and calculate</font>

360
00:19:06,120 --> 00:19:12,020
the checksum to<font color="#CCCCCC"> generate assembled</font>

361
00:19:09,150 --> 00:19:15,030
<font color="#CCCCCC">automatic one unit and finally it is</font>

362
00:19:12,020 --> 00:19:18,960
unknown<font color="#CCCCCC"> if you have sent</font><font color="#E5E5E5"> to the base can</font>

363
00:19:15,030 --> 00:19:20,370
<font color="#E5E5E5">browse</font><font color="#CCCCCC"> on channels so or target</font><font color="#E5E5E5"> is</font>

364
00:19:18,960 --> 00:19:25,140
trying to

365
00:19:20,370 --> 00:19:32,110
patch<font color="#E5E5E5"> this machine to make it deliver or</font>

366
00:19:25,140 --> 00:19:34,440
malicious payload<font color="#CCCCCC"> so we have to do some</font>

367
00:19:32,110 --> 00:19:35,979
work on<font color="#E5E5E5"> the base unit as well as</font><font color="#CCCCCC"> the</font>

368
00:19:34,440 --> 00:19:39,640
<font color="#E5E5E5">single</font><font color="#CCCCCC"> a on</font><font color="#E5E5E5"> it</font>

369
00:19:35,980 --> 00:19:42,820
so it<font color="#E5E5E5"> can just make</font><font color="#CCCCCC"> the a</font><font color="#E5E5E5"> pair of just</font>

370
00:19:39,640 --> 00:19:47,490
pass through<font color="#E5E5E5"> the two units and</font><font color="#CCCCCC"> attract</font>

371
00:19:42,820 --> 00:19:53,710
<font color="#CCCCCC">Li instant</font><font color="#E5E5E5"> into the base station</font>

372
00:19:47,490 --> 00:20:02,530
immobilization so let<font color="#E5E5E5"> me talk about the</font>

373
00:19:53,710 --> 00:20:06,780
<font color="#E5E5E5">basics we reverse the base unit the</font>

374
00:20:02,530 --> 00:20:10,210
facility is built<font color="#E5E5E5"> on top of the min/max</font>

375
00:20:06,780 --> 00:20:15,039
<font color="#CCCCCC">of stars and the windows you</font><font color="#E5E5E5"> can see the</font>

376
00:20:10,210 --> 00:20:17,140
<font color="#CCCCCC">house list in the right of the slide</font><font color="#E5E5E5"> and</font>

377
00:20:15,039 --> 00:20:19,629
users<font color="#CCCCCC"> can send</font><font color="#E5E5E5"> a short message from</font>

378
00:20:17,140 --> 00:20:23,710
<font color="#E5E5E5">using user individual</font><font color="#CCCCCC"> truce a pretty</font>

379
00:20:19,630 --> 00:20:26,530
<font color="#CCCCCC">fine line to send so it's all</font><font color="#E5E5E5"> about the</font>

380
00:20:23,710 --> 00:20:28,980
<font color="#CCCCCC">p reversing work</font><font color="#E5E5E5"> so we are able to</font>

381
00:20:26,530 --> 00:20:33,299
<font color="#E5E5E5">locate the</font><font color="#CCCCCC"> person sending the message to</font>

382
00:20:28,980 --> 00:20:35,890
single element now actually we find

383
00:20:33,299 --> 00:20:41,250
dynamic library in this file system

384
00:20:35,890 --> 00:20:44,740
<font color="#CCCCCC">which probably means the the cdma2000</font>

385
00:20:41,250 --> 00:20:47,350
mobile<font color="#CCCCCC"> station this dynamic</font><font color="#E5E5E5"> library</font><font color="#CCCCCC"> to</font>

386
00:20:44,740 --> 00:20:50,919
read<font color="#E5E5E5"> content from internal file and</font>

387
00:20:47,350 --> 00:20:53,379
encode it and<font color="#E5E5E5"> then send it to the single</font>

388
00:20:50,919 --> 00:20:55,020
<font color="#CCCCCC">layer on it</font><font color="#E5E5E5"> as so cuddling</font><font color="#CCCCCC"> handling</font>

389
00:20:53,380 --> 00:20:58,480
message

390
00:20:55,020 --> 00:21:01,389
the foul is<font color="#E5E5E5"> showing the</font><font color="#CCCCCC"> low box in the</font>

391
00:20:58,480 --> 00:21:05,679
slide<font color="#E5E5E5"> so you can see that we can specify</font>

392
00:21:01,390 --> 00:21:10,510
the<font color="#CCCCCC"> telus server's IP which is quite low</font>

393
00:21:05,679 --> 00:21:15,400
<font color="#CCCCCC">allow parameters in the shut message if</font>

394
00:21:10,510 --> 00:21:18,340
<font color="#CCCCCC">we give a message</font><font color="#E5E5E5"> in our investigation</font>

395
00:21:15,400 --> 00:21:20,380
that<font color="#E5E5E5"> we can we find that we actually we</font>

396
00:21:18,340 --> 00:21:24,549
cannot control<font color="#E5E5E5"> the</font><font color="#CCCCCC"> full paradise which</font>

397
00:21:20,380 --> 00:21:26,460
is needed<font color="#E5E5E5"> in your in our exploit so we</font>

398
00:21:24,549 --> 00:21:29,430
have to go further

399
00:21:26,460 --> 00:21:31,830
in this stage we patch the best<font color="#E5E5E5"> unit to</font>

400
00:21:29,430 --> 00:21:35,490
escape the payload length check and

401
00:21:31,830 --> 00:21:37,949
force the force it to<font color="#E5E5E5"> upwards singly on</font>

402
00:21:35,490 --> 00:21:43,320
it you will<font color="#E5E5E5"> see</font><font color="#CCCCCC"> what's at that in the</font>

403
00:21:37,950 --> 00:21:47,070
next<font color="#CCCCCC"> page so another work is to we have</font>

404
00:21:43,320 --> 00:21:49,679
to make<font color="#CCCCCC"> the single layer on it works</font><font color="#E5E5E5"> so</font>

405
00:21:47,070 --> 00:21:52,800
we find the upgrade functionality of

406
00:21:49,680 --> 00:21:55,110
this single unit<font color="#CCCCCC"> the arc welding is</font>

407
00:21:52,800 --> 00:21:57,690
<font color="#E5E5E5">occurs when the</font><font color="#CCCCCC"> self-check fills which</font>

408
00:21:55,110 --> 00:22:00,178
means the less unit when the<font color="#CCCCCC"> person is</font>

409
00:21:57,690 --> 00:22:02,850
<font color="#CCCCCC">put it will check if the single</font><font color="#E5E5E5"> unit</font>

410
00:22:00,179 --> 00:22:04,770
works well so<font color="#E5E5E5"> if it's not it will</font>

411
00:22:02,850 --> 00:22:09,719
<font color="#E5E5E5">trigger the single unit to operate</font>

412
00:22:04,770 --> 00:22:11,580
itself<font color="#CCCCCC"> - to try to fix</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> found</font><font color="#CCCCCC"> a</font>

413
00:22:09,720 --> 00:22:14,880
similar package<font color="#E5E5E5"> in the file system</font><font color="#CCCCCC"> and</font>

414
00:22:11,580 --> 00:22:18,889
we<font color="#CCCCCC"> recover</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> format by some reverse</font>

415
00:22:14,880 --> 00:22:24,290
and some gas so it's actually space

416
00:22:18,890 --> 00:22:29,580
reacts works at us and it's a PowerPC

417
00:22:24,290 --> 00:22:31,889
architecture<font color="#E5E5E5"> so actually a</font><font color="#CCCCCC"> quite Laxus</font>

418
00:22:29,580 --> 00:22:34,199
town you know<font color="#E5E5E5"> hectoring has a purpose</font>

419
00:22:31,890 --> 00:22:39,000
<font color="#CCCCCC">they become higher Tyler so we have the</font>

420
00:22:34,200 --> 00:22:41,670
we can get the be compiled code and<font color="#E5E5E5"> we</font>

421
00:22:39,000 --> 00:22:44,520
<font color="#E5E5E5">find the single</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> name</font><font color="#E5E5E5"> toy box at</font>

422
00:22:41,670 --> 00:22:46,980
the<font color="#E5E5E5"> end of the file and you know it's a</font>

423
00:22:44,520 --> 00:22:49,470
<font color="#E5E5E5">very old machine so there's a</font><font color="#CCCCCC"> tray</font>

424
00:22:46,980 --> 00:22:52,500
there's the no signal<font color="#CCCCCC"> check and it's</font>

425
00:22:49,470 --> 00:22:56,640
only<font color="#E5E5E5"> rather than to the jacks up so if</font>

426
00:22:52,500 --> 00:22:59,960
it can<font color="#E5E5E5"> be either leap and bypass so</font>

427
00:22:56,640 --> 00:23:03,330
finally we located<font color="#E5E5E5"> some functions and</font>

428
00:22:59,960 --> 00:23:06,510
<font color="#CCCCCC">short message message</font><font color="#E5E5E5"> in the firmware</font>

429
00:23:03,330 --> 00:23:10,830
<font color="#E5E5E5">and we patch it just patch it to carry</font>

430
00:23:06,510 --> 00:23:14,040
arbitrary<font color="#CCCCCC"> very data and then we packed</font>

431
00:23:10,830 --> 00:23:18,300
Vermeer<font color="#E5E5E5"> and trigger the self-test to</font>

432
00:23:14,040 --> 00:23:23,879
upgrade the single unit<font color="#E5E5E5"> and the family</font>

433
00:23:18,300 --> 00:23:29,100
we<font color="#E5E5E5"> got the gun to shoot</font><font color="#CCCCCC"> our boys to</font>

434
00:23:23,880 --> 00:23:34,220
crash<font color="#CCCCCC"> base</font><font color="#E5E5E5"> net so not can you talk about</font>

435
00:23:29,100 --> 00:23:34,219
did help the our payload look like

436
00:23:34,340 --> 00:23:41,370
<font color="#E5E5E5">okay thanks Luce</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> next I will briefly</font>

437
00:23:38,070 --> 00:23:43,230
talk<font color="#E5E5E5"> about the exploitation</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and as</font>

438
00:23:41,370 --> 00:23:48,919
you<font color="#CCCCCC"> can hear I got coal recently so</font>

439
00:23:43,230 --> 00:23:48,920
pardon me<font color="#CCCCCC"> if I don't sound clearly okay</font>

440
00:23:48,980 --> 00:23:55,080
<font color="#E5E5E5">so firstly we do to me to doing</font>

441
00:23:52,200 --> 00:23:58,380
exploitation we need to find<font color="#E5E5E5"> a path to</font>

442
00:23:55,080 --> 00:24:00,510
<font color="#E5E5E5">reach the vulnerable function so the</font>

443
00:23:58,380 --> 00:24:03,840
<font color="#E5E5E5">payload we should construct is basically</font>

444
00:24:00,510 --> 00:24:06,990
<font color="#E5E5E5">a malformed</font><font color="#CCCCCC"> CDMA</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> x SMS transport layer</font>

445
00:24:03,840 --> 00:24:09,360
message so there are many fields<font color="#E5E5E5"> and</font>

446
00:24:06,990 --> 00:24:12,000
many structures in status message and we

447
00:24:09,360 --> 00:24:14,969
have to set<font color="#E5E5E5"> them all correctly to reach</font>

448
00:24:12,000 --> 00:24:17,580
that one one function so the first field

449
00:24:14,970 --> 00:24:20,670
we need<font color="#E5E5E5"> to step is this messenger type</font>

450
00:24:17,580 --> 00:24:24,750
message we have to state it<font color="#E5E5E5"> to 0 0 0</font><font color="#CCCCCC"> and</font>

451
00:24:20,670 --> 00:24:30,290
<font color="#CCCCCC">2 indicating</font><font color="#E5E5E5"> itself</font><font color="#CCCCCC"> on self SMS</font><font color="#E5E5E5"> p2p</font>

452
00:24:24,750 --> 00:24:34,650
message and next we the message<font color="#E5E5E5"> actually</font>

453
00:24:30,290 --> 00:24:38,070
consists of several<font color="#CCCCCC"> TLV format they call</font>

454
00:24:34,650 --> 00:24:41,070
it as parameters in a specification<font color="#E5E5E5"> so</font>

455
00:24:38,070 --> 00:24:42,030
this is a list of the parameters<font color="#CCCCCC"> hope</font>

456
00:24:41,070 --> 00:24:47,790
you can see it<font color="#E5E5E5"> clearly</font>

457
00:24:42,030 --> 00:24:50,490
and the<font color="#E5E5E5"> two one as I said a red marked</font>

458
00:24:47,790 --> 00:24:52,680
and this is<font color="#CCCCCC"> a two mandatory</font><font color="#E5E5E5"> field we</font>

459
00:24:50,490 --> 00:24:57,620
have<font color="#E5E5E5"> to set this</font><font color="#CCCCCC"> terror service</font>

460
00:24:52,680 --> 00:24:57,620
<font color="#CCCCCC">identifier on</font><font color="#E5E5E5"> the originating address</font><font color="#CCCCCC"> a</font>

461
00:24:57,650 --> 00:25:04,740
<font color="#E5E5E5">next one you can</font><font color="#CCCCCC"> see here this is a very</font>

462
00:25:01,050 --> 00:25:07,310
<font color="#E5E5E5">data field so although this field is</font>

463
00:25:04,740 --> 00:25:11,070
optional but since this<font color="#E5E5E5"> field is</font>

464
00:25:07,310 --> 00:25:15,540
critical to our exploit and this field

465
00:25:11,070 --> 00:25:18,270
actually<font color="#E5E5E5"> means the upper</font><font color="#CCCCCC"> layer payload</font>

466
00:25:15,540 --> 00:25:20,810
of this message<font color="#E5E5E5"> so actually it contains</font>

467
00:25:18,270 --> 00:25:24,690
the data of the upper layer protocol and

468
00:25:20,810 --> 00:25:29,639
this is where the<font color="#E5E5E5"> volleyball very copy</font>

469
00:25:24,690 --> 00:25:32,490
happens so we have to again<font color="#CCCCCC"> state</font>

470
00:25:29,640 --> 00:25:37,410
attractively the data<font color="#CCCCCC"> inside this very</font>

471
00:25:32,490 --> 00:25:41,760
data<font color="#E5E5E5"> and similarly the bearer data also</font>

472
00:25:37,410 --> 00:25:45,330
contains<font color="#E5E5E5"> TLB format structures they call</font>

473
00:25:41,760 --> 00:25:48,539
it<font color="#E5E5E5"> stop parameters so</font>

474
00:25:45,330 --> 00:25:50,158
the parameters inside<font color="#CCCCCC"> better data should</font>

475
00:25:48,539 --> 00:25:54,149
indicate<font color="#E5E5E5"> itself</font>

476
00:25:50,159 --> 00:25:56,549
<font color="#E5E5E5">pío message so the structure of a sub</font>

477
00:25:54,149 --> 00:26:00,779
parameter is basically like this open

478
00:25:56,549 --> 00:26:04,139
<font color="#E5E5E5">stuff with a ID the</font><font color="#CCCCCC"> 8 here means</font><font color="#E5E5E5"> 8 bits</font>

479
00:26:00,779 --> 00:26:06,690
<font color="#CCCCCC">so it is one part</font><font color="#E5E5E5"> and it has a one part</font>

480
00:26:04,139 --> 00:26:15,269
<font color="#CCCCCC">less and following with the rest of the</font>

481
00:26:06,690 --> 00:26:18,659
content<font color="#CCCCCC"> so as to reach that vulnerable</font>

482
00:26:15,269 --> 00:26:22,470
memory copy<font color="#E5E5E5"> relation so we have to set</font>

483
00:26:18,659 --> 00:26:25,980
the<font color="#CCCCCC"> stop parameters correctly inside the</font>

484
00:26:22,470 --> 00:26:28,919
bearer data so<font color="#E5E5E5"> first one is we have</font><font color="#CCCCCC"> to</font>

485
00:26:25,980 --> 00:26:31,379
set<font color="#E5E5E5"> this message display mode sub</font>

486
00:26:28,919 --> 00:26:33,869
parameter<font color="#E5E5E5"> so the structure of the</font>

487
00:26:31,379 --> 00:26:37,559
message of display mode<font color="#E5E5E5"> looks like this</font>

488
00:26:33,869 --> 00:26:39,869
it<font color="#E5E5E5"> has many many fields itself and we</font>

489
00:26:37,559 --> 00:26:43,918
have to stay as a message discipline

490
00:26:39,869 --> 00:26:46,168
mode<font color="#CCCCCC"> to</font><font color="#E5E5E5"> directs the rows 3 which is 2 1</font>

491
00:26:43,919 --> 00:26:49,350
bits and we have to stand<font color="#E5E5E5"> on the</font>

492
00:26:46,169 --> 00:26:51,450
<font color="#E5E5E5">reserved field to the</font><font color="#CCCCCC"> rocks 1 0 so as</font>

493
00:26:49,350 --> 00:26:56,189
you can<font color="#E5E5E5"> see the P our message is</font>

494
00:26:51,450 --> 00:27:00,869
<font color="#CCCCCC">actually a vendor specific feature so it</font>

495
00:26:56,190 --> 00:27:03,899
is not in the specification so after

496
00:27:00,869 --> 00:27:07,249
we've that or the field correct<font color="#E5E5E5"> it looks</font>

497
00:27:03,899 --> 00:27:09,918
like we can just<font color="#CCCCCC"> reach that final</font>

498
00:27:07,249 --> 00:27:13,799
wonderful memory copy

499
00:27:09,919 --> 00:27:16,320
so the basic function of<font color="#E5E5E5"> that vulnerable</font>

500
00:27:13,799 --> 00:27:19,049
<font color="#E5E5E5">code it actually sorts the stock</font>

501
00:27:16,320 --> 00:27:22,950
parameters inside the mirror data is

502
00:27:19,049 --> 00:27:26,940
<font color="#E5E5E5">sort the parameters by their a parameter</font>

503
00:27:22,950 --> 00:27:30,739
<font color="#E5E5E5">ID from small to big and that is where</font>

504
00:27:26,940 --> 00:27:34,230
the overflow happens<font color="#E5E5E5"> so it looks like</font>

505
00:27:30,739 --> 00:27:36,029
trivial to exploit<font color="#E5E5E5"> since there are no</font>

506
00:27:34,230 --> 00:27:38,700
index no<font color="#CCCCCC"> AF there are in the basement</font>

507
00:27:36,029 --> 00:27:42,539
<font color="#CCCCCC">and those that</font><font color="#E5E5E5"> cannery looks like a very</font>

508
00:27:38,700 --> 00:27:44,639
classical<font color="#CCCCCC"> stack overflow</font><font color="#E5E5E5"> quite like like</font>

509
00:27:42,539 --> 00:27:48,119
in the<font color="#E5E5E5"> 90s</font><font color="#CCCCCC"> smashing</font><font color="#E5E5E5"> a stack for fun and</font>

510
00:27:44,639 --> 00:27:54,090
profit<font color="#E5E5E5"> looks a very</font><font color="#CCCCCC"> eerie task stop it</font>

511
00:27:48,119 --> 00:27:57,050
it<font color="#CCCCCC"> qu and next so we are</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do</font>

512
00:27:54,090 --> 00:28:00,470
this but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> found there</font><font color="#E5E5E5"> are many</font>

513
00:27:57,050 --> 00:28:02,840
we need<font color="#CCCCCC"> travels</font><font color="#E5E5E5"> we encountered here so</font>

514
00:28:00,470 --> 00:28:05,420
first<font color="#E5E5E5"> of all there</font><font color="#CCCCCC"> are multiple code</font>

515
00:28:02,840 --> 00:28:08,659
parties to reach<font color="#E5E5E5"> that vulnerable</font>

516
00:28:05,420 --> 00:28:10,310
function and two of them<font color="#CCCCCC"> actually not</font>

517
00:28:08,660 --> 00:28:14,030
<font color="#CCCCCC">very useful</font><font color="#E5E5E5"> since they are only</font>

518
00:28:10,310 --> 00:28:17,020
reachable<font color="#CCCCCC"> they are usually</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> in an mo</font>

519
00:28:14,030 --> 00:28:20,060
message situation<font color="#E5E5E5"> mo message stands for</font>

520
00:28:17,020 --> 00:28:22,310
mobile<font color="#CCCCCC"> or originating messages at random</font>

521
00:28:20,060 --> 00:28:25,310
<font color="#E5E5E5">method actually stands from your mobile</font>

522
00:28:22,310 --> 00:28:29,210
<font color="#CCCCCC">phone so you cannot reach this code</font><font color="#E5E5E5"> pass</font>

523
00:28:25,310 --> 00:28:32,480
over there<font color="#E5E5E5"> and actually we hung</font><font color="#CCCCCC"> found</font>

524
00:28:29,210 --> 00:28:34,910
one code path that I reachable through

525
00:28:32,480 --> 00:28:39,680
an empty message<font color="#CCCCCC"> mobile terminating</font>

526
00:28:34,910 --> 00:28:41,750
message but yes and but we found<font color="#E5E5E5"> that</font>

527
00:28:39,680 --> 00:28:44,240
<font color="#E5E5E5">the power you can overflow is not</font>

528
00:28:41,750 --> 00:28:48,530
understand it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> it actually inside the</font>

529
00:28:44,240 --> 00:28:51,170
<font color="#E5E5E5">global variable section and</font><font color="#CCCCCC"> yeah we try</font>

530
00:28:48,530 --> 00:28:53,860
<font color="#E5E5E5">to see what</font><font color="#CCCCCC"> we can overflow what we can</font>

531
00:28:51,170 --> 00:28:57,380
<font color="#E5E5E5">overwrite see if we can exploit but</font>

532
00:28:53,860 --> 00:29:01,209
<font color="#E5E5E5">sadly we failed and we cannot exploit</font>

533
00:28:57,380 --> 00:29:03,890
<font color="#E5E5E5">this situation an active moment we just</font>

534
00:29:01,210 --> 00:29:09,560
<font color="#E5E5E5">got confused to state it is a stack</font>

535
00:29:03,890 --> 00:29:13,160
<font color="#CCCCCC">overflow and yes indeed</font><font color="#E5E5E5"> we do find a</font>

536
00:29:09,560 --> 00:29:14,870
code<font color="#CCCCCC"> pass that</font><font color="#E5E5E5"> you know with it has the</font>

537
00:29:13,160 --> 00:29:18,670
<font color="#E5E5E5">buffer you have of wrote it on a step</font>

538
00:29:14,870 --> 00:29:22,250
but that<font color="#E5E5E5"> code</font><font color="#CCCCCC"> pass is only used when you</font>

539
00:29:18,670 --> 00:29:25,430
the<font color="#E5E5E5"> mobile station reads out an SMS from</font>

540
00:29:22,250 --> 00:29:28,490
<font color="#CCCCCC">a using card</font><font color="#E5E5E5"> seems not very</font><font color="#CCCCCC"> useful since</font>

541
00:29:25,430 --> 00:29:30,890
an attacker<font color="#E5E5E5"> you attacked</font><font color="#CCCCCC"> over-the-air</font><font color="#E5E5E5"> so</font>

542
00:29:28,490 --> 00:29:34,030
<font color="#E5E5E5">you cannot</font><font color="#CCCCCC"> put inserts on malicious</font>

543
00:29:30,890 --> 00:29:38,210
using cut and tribute to read your

544
00:29:34,030 --> 00:29:41,149
malicious SMS<font color="#E5E5E5"> so looks like we are out</font>

545
00:29:38,210 --> 00:29:44,540
<font color="#E5E5E5">of options and we since the flow is at</font>

546
00:29:41,150 --> 00:29:46,250
the end<font color="#E5E5E5"> but since we are determined</font>

547
00:29:44,540 --> 00:29:49,820
hacker<font color="#E5E5E5"> we are determined attacker</font>

548
00:29:46,250 --> 00:29:52,120
so<font color="#CCCCCC"> there is all the one saying where</font>

549
00:29:49,820 --> 00:29:56,510
there is a will there is a way<font color="#E5E5E5"> so we</font>

550
00:29:52,120 --> 00:29:59,540
<font color="#CCCCCC">again</font><font color="#E5E5E5"> we read all the source</font><font color="#CCCCCC"> code and</font>

551
00:29:56,510 --> 00:30:02,010
<font color="#CCCCCC">you know we try</font><font color="#E5E5E5"> to understand the</font><font color="#CCCCCC"> whole</font>

552
00:29:59,540 --> 00:30:06,350
process<font color="#E5E5E5"> when</font>

553
00:30:02,010 --> 00:30:11,129
<font color="#E5E5E5">your mobile home receiving an SMS and</font>

554
00:30:06,350 --> 00:30:14,250
finally we did discover a deep but very

555
00:30:11,130 --> 00:30:18,750
stable<font color="#CCCCCC"> pass to trigger</font><font color="#E5E5E5"> that Stack</font>

556
00:30:14,250 --> 00:30:22,410
<font color="#E5E5E5">Overflow</font><font color="#CCCCCC"> it is following this this</font>

557
00:30:18,750 --> 00:30:23,520
<font color="#E5E5E5">specific past</font><font color="#CCCCCC"> it's this specific could</font>

558
00:30:22,410 --> 00:30:28,530
use this<font color="#CCCCCC"> past</font>

559
00:30:23,520 --> 00:30:31,080
<font color="#CCCCCC">look seem</font><font color="#E5E5E5"> in a useless</font><font color="#CCCCCC"> parts so what</font>

560
00:30:28,530 --> 00:30:33,480
does the the whole process of<font color="#E5E5E5"> mobile for</font>

561
00:30:31,080 --> 00:30:35,610
<font color="#E5E5E5">handling or PR message looks like so</font>

562
00:30:33,480 --> 00:30:38,520
first of<font color="#E5E5E5"> all it</font><font color="#CCCCCC"> has to</font><font color="#E5E5E5"> receive the</font>

563
00:30:35,610 --> 00:30:40,530
message<font color="#E5E5E5"> over there right and then well</font>

564
00:30:38,520 --> 00:30:43,379
try to decode your message and<font color="#E5E5E5"> this is</font>

565
00:30:40,530 --> 00:30:46,320
where the overflow could happens<font color="#E5E5E5"> but</font>

566
00:30:43,380 --> 00:30:49,140
since as I mentioned the first<font color="#CCCCCC"> all flow</font>

567
00:30:46,320 --> 00:30:52,070
you can<font color="#E5E5E5"> trigger this with the buffer and</font>

568
00:30:49,140 --> 00:30:56,190
not on<font color="#CCCCCC"> the step it's not</font><font color="#E5E5E5"> very useful</font><font color="#CCCCCC"> and</font>

569
00:30:52,070 --> 00:30:58,740
then it will try to encode your message

570
00:30:56,190 --> 00:31:01,590
and<font color="#CCCCCC"> write eight things into the using</font>

571
00:30:58,740 --> 00:31:03,840
<font color="#E5E5E5">card and just</font><font color="#CCCCCC"> immediately after it right</font>

572
00:31:01,590 --> 00:31:06,870
into into the SIM card<font color="#CCCCCC"> it reads the</font>

573
00:31:03,840 --> 00:31:09,480
message<font color="#E5E5E5"> back out and decode it again and</font>

574
00:31:06,870 --> 00:31:12,030
the second<font color="#CCCCCC"> time decoding is were the</font>

575
00:31:09,480 --> 00:31:20,130
stack buffer overflow<font color="#CCCCCC"> happens</font><font color="#E5E5E5"> and it is</font>

576
00:31:12,030 --> 00:31:22,950
where we try to exploit it I saw<font color="#E5E5E5"> it it's</font>

577
00:31:20,130 --> 00:31:26,550
not<font color="#CCCCCC"> a very trivial task</font><font color="#E5E5E5"> so our payload</font>

578
00:31:22,950 --> 00:31:29,520
actually<font color="#E5E5E5"> must survive the first encoding</font>

579
00:31:26,550 --> 00:31:31,889
and decoding cycle so<font color="#E5E5E5"> you are not going</font>

580
00:31:29,520 --> 00:31:34,260
<font color="#CCCCCC">to overflow the stack for the</font><font color="#E5E5E5"> first time</font>

581
00:31:31,890 --> 00:31:36,270
you are<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> overflow</font><font color="#E5E5E5"> stack on</font><font color="#CCCCCC"> the</font>

582
00:31:34,260 --> 00:31:39,420
second time and your payload must

583
00:31:36,270 --> 00:31:45,090
survive is this<font color="#E5E5E5"> cycle so this is not a</font>

584
00:31:39,420 --> 00:31:48,150
very trivial task so every time when<font color="#E5E5E5"> you</font>

585
00:31:45,090 --> 00:31:50,550
<font color="#E5E5E5">want to solve a</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> you will want to</font>

586
00:31:48,150 --> 00:31:52,770
<font color="#E5E5E5">make it abstraction and make it a math</font>

587
00:31:50,550 --> 00:31:55,530
problem<font color="#E5E5E5"> so we will do some simple</font>

588
00:31:52,770 --> 00:31:59,070
abstraction<font color="#E5E5E5"> a simple math here so first</font>

589
00:31:55,530 --> 00:32:02,100
I will<font color="#E5E5E5"> add in like the payload as X and</font>

590
00:31:59,070 --> 00:32:05,189
the decoding function has decode X and

591
00:32:02,100 --> 00:32:07,740
encoding function has encode X so<font color="#CCCCCC"> our</font>

592
00:32:05,190 --> 00:32:12,330
final<font color="#E5E5E5"> step over for option should</font><font color="#CCCCCC"> be P</font>

593
00:32:07,740 --> 00:32:15,210
so our goal is<font color="#E5E5E5"> actually to find an X for</font>

594
00:32:12,330 --> 00:32:15,790
<font color="#E5E5E5">a given P such that P a post decoding</font>

595
00:32:15,210 --> 00:32:19,900
encoding

596
00:32:15,790 --> 00:32:22,389
<font color="#E5E5E5">decoding sex right it's just right what</font>

597
00:32:19,900 --> 00:32:24,490
we want the 4x goes through the decoding

598
00:32:22,390 --> 00:32:31,930
and encoding and decoding again<font color="#E5E5E5"> and it</font>

599
00:32:24,490 --> 00:32:33,790
<font color="#E5E5E5">becomes our</font><font color="#CCCCCC"> stack overflow R option</font><font color="#E5E5E5"> so</font>

600
00:32:31,930 --> 00:32:36,940
as we are<font color="#E5E5E5"> a hacker and we are trying</font><font color="#CCCCCC"> to</font>

601
00:32:33,790 --> 00:32:39,010
<font color="#E5E5E5">solve a mathematical problem</font><font color="#CCCCCC"> so we will</font>

602
00:32:36,940 --> 00:32:41,230
always<font color="#E5E5E5"> want to solve it in a more</font>

603
00:32:39,010 --> 00:32:47,020
mathematical way<font color="#E5E5E5"> in a more elegant way</font>

604
00:32:41,230 --> 00:32:49,330
<font color="#CCCCCC">so we adjust</font><font color="#E5E5E5"> our go to to another go</font>

605
00:32:47,020 --> 00:32:52,210
life like<font color="#E5E5E5"> this so we are trying to find</font>

606
00:32:49,330 --> 00:32:56,980
an<font color="#E5E5E5"> X for</font><font color="#CCCCCC"> a given shape such as PE post</font>

607
00:32:52,210 --> 00:33:00,640
<font color="#E5E5E5">decoding</font><font color="#CCCCCC"> X and x equals</font><font color="#E5E5E5"> encoding</font>

608
00:32:56,980 --> 00:33:03,610
<font color="#E5E5E5">decoding X so we can find here the X is</font>

609
00:33:00,640 --> 00:33:07,710
<font color="#CCCCCC">actually the fixed point of the</font>

610
00:33:03,610 --> 00:33:10,629
<font color="#E5E5E5">combination function encoding decoding X</font>

611
00:33:07,710 --> 00:33:12,910
so with this condition<font color="#E5E5E5"> actually the P</font>

612
00:33:10,630 --> 00:33:16,780
you<font color="#CCCCCC"> can see the P you can't derive it P</font>

613
00:33:12,910 --> 00:33:17,800
from<font color="#CCCCCC"> 2 to the end PE post decoding</font>

614
00:33:16,780 --> 00:33:21,550
encoding<font color="#CCCCCC"> tacones</font>

615
00:33:17,800 --> 00:33:23,500
that's exactly what we want<font color="#E5E5E5"> and the</font>

616
00:33:21,550 --> 00:33:26,080
furthermore actually<font color="#E5E5E5"> this kind of</font>

617
00:33:23,500 --> 00:33:29,050
<font color="#E5E5E5">payload</font><font color="#CCCCCC"> that can go through</font><font color="#E5E5E5"> not only one</font>

618
00:33:26,080 --> 00:33:30,879
<font color="#CCCCCC">or two</font><font color="#E5E5E5"> cycles of this encoding and</font>

619
00:33:29,050 --> 00:33:33,460
decoding it can go through arbitrary

620
00:33:30,880 --> 00:33:35,710
levels of encoding<font color="#CCCCCC"> and decoding</font><font color="#E5E5E5"> under</font>

621
00:33:33,460 --> 00:33:38,260
<font color="#E5E5E5">survived all the time so this</font><font color="#CCCCCC"> is</font>

622
00:33:35,710 --> 00:33:43,030
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> a very elegant stop and it is</font>

623
00:33:38,260 --> 00:33:47,680
what<font color="#E5E5E5"> we want and what's more at the CMU</font>

624
00:33:43,030 --> 00:33:50,530
200 machine<font color="#E5E5E5"> actually we don't we don't</font>

625
00:33:47,680 --> 00:33:53,050
know<font color="#E5E5E5"> how to pass a bypass</font><font color="#CCCCCC"> des</font><font color="#E5E5E5"> restrict</font>

626
00:33:50,530 --> 00:33:56,230
<font color="#E5E5E5">it's actually restrict your length of</font>

627
00:33:53,050 --> 00:34:00,100
the TP layer message to be less than 130

628
00:33:56,230 --> 00:34:04,570
<font color="#E5E5E5">bytes and the buffer</font><font color="#CCCCCC"> you want to</font>

629
00:34:00,100 --> 00:34:07,949
overflow is 256<font color="#E5E5E5"> bytes long so you have</font>

630
00:34:04,570 --> 00:34:11,529
to make a 130<font color="#CCCCCC"> bite payload to overflow</font><font color="#E5E5E5"> a</font>

631
00:34:07,950 --> 00:34:14,800
256 byte buffer so this is not a very

632
00:34:11,530 --> 00:34:19,889
trivial task but it indeed<font color="#CCCCCC"> is possible</font>

633
00:34:14,800 --> 00:34:23,500
and yes we successfully<font color="#CCCCCC"> made it and</font>

634
00:34:19,889 --> 00:34:26,590
since the details<font color="#E5E5E5"> is very complicated so</font>

635
00:34:23,500 --> 00:34:28,359
<font color="#CCCCCC">I will not talk it here but</font><font color="#E5E5E5"> you can find</font>

636
00:34:26,590 --> 00:34:31,929
all the details<font color="#E5E5E5"> in</font>

637
00:34:28,359 --> 00:34:35,498
paper and<font color="#CCCCCC"> I gave an example</font><font color="#E5E5E5"> payload and</font>

638
00:34:31,929 --> 00:34:37,149
all the process when the<font color="#CCCCCC"> decoding and</font>

639
00:34:35,498 --> 00:34:39,759
encoding happens and you can see the

640
00:34:37,149 --> 00:34:41,710
payload stays the same<font color="#CCCCCC"> when going</font>

641
00:34:39,759 --> 00:34:44,710
through<font color="#E5E5E5"> the encoding and decoding cycle</font>

642
00:34:41,710 --> 00:34:47,889
and<font color="#CCCCCC"> thus were MOF I am</font><font color="#E5E5E5"> a fifth</font><font color="#CCCCCC"> year</font>

643
00:34:44,710 --> 00:34:52,230
player so<font color="#CCCCCC"> I adapted to a CTF challenge</font>

644
00:34:47,889 --> 00:34:55,450
of this<font color="#E5E5E5"> year's</font><font color="#CCCCCC"> DeRosa</font><font color="#E5E5E5"> TFT CTF cost and</font>

645
00:34:52,230 --> 00:34:58,599
they meet<font color="#E5E5E5"> mighty dragon and this name</font>

646
00:34:55,449 --> 00:35:02,230
actually<font color="#E5E5E5"> writes comes from</font><font color="#CCCCCC"> an ACO</font><font color="#E5E5E5"> name</font>

647
00:34:58,599 --> 00:35:04,539
of the<font color="#E5E5E5"> mob</font><font color="#CCCCCC"> demon we exploited so if you</font>

648
00:35:02,230 --> 00:35:06,730
are interested<font color="#CCCCCC"> you can try to see if</font><font color="#E5E5E5"> you</font>

649
00:35:04,539 --> 00:35:09,099
can<font color="#E5E5E5"> solve this</font><font color="#CCCCCC"> challenge and the Turing</font>

650
00:35:06,730 --> 00:35:11,890
the<font color="#E5E5E5"> game</font><font color="#CCCCCC"> only one team successfully</font>

651
00:35:09,099 --> 00:35:24,099
solved it<font color="#E5E5E5"> so it is a very challenging</font>

652
00:35:11,890 --> 00:35:25,629
<font color="#E5E5E5">task so that's all for my parts</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so at</font>

653
00:35:24,099 --> 00:35:28,150
<font color="#CCCCCC">this point we gain remote code execution</font>

654
00:35:25,630 --> 00:35:31,180
on the<font color="#CCCCCC"> base line but we are at</font><font color="#E5E5E5"> a</font>

655
00:35:28,150 --> 00:35:34,989
<font color="#CCCCCC">competition</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to provide a visual</font>

656
00:35:31,180 --> 00:35:37,509
confirmation<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> judges</font><font color="#CCCCCC"> but the</font>

657
00:35:34,989 --> 00:35:39,910
<font color="#CCCCCC">problem is there is no display on the</font>

658
00:35:37,509 --> 00:35:42,029
<font color="#E5E5E5">beta and there is nothing and we cannot</font>

659
00:35:39,910 --> 00:35:45,549
<font color="#E5E5E5">just pop calculator like on</font><font color="#CCCCCC"> windows</font>

660
00:35:42,029 --> 00:35:48,009
because<font color="#E5E5E5"> there is no UI so we decided</font>

661
00:35:45,549 --> 00:35:52,890
from the<font color="#CCCCCC"> bateman to change the phone</font>

662
00:35:48,009 --> 00:35:55,660
IMEI which is like phone identifier and

663
00:35:52,890 --> 00:35:58,019
this identifier can be<font color="#CCCCCC"> checked</font><font color="#E5E5E5"> from the</font>

664
00:35:55,660 --> 00:36:01,480
settings of<font color="#CCCCCC"> the phone</font><font color="#E5E5E5"> so after our</font>

665
00:35:58,019 --> 00:36:04,180
exploitation attempt the judge can just

666
00:36:01,480 --> 00:36:07,269
go<font color="#E5E5E5"> to settings and see if we</font>

667
00:36:04,180 --> 00:36:14,288
successfully<font color="#CCCCCC"> change the IMEI</font><font color="#E5E5E5"> to 1 3 3 7</font>

668
00:36:07,269 --> 00:36:17,200
<font color="#E5E5E5">1</font><font color="#CCCCCC"> 2 3 7</font><font color="#E5E5E5"> so with our C is already quite</font><font color="#CCCCCC"> a</font>

669
00:36:14,289 --> 00:36:18,789
<font color="#CCCCCC">good capability for an attacker</font><font color="#E5E5E5"> because</font>

670
00:36:17,200 --> 00:36:22,328
it's running<font color="#E5E5E5"> code inside the base band</font>

671
00:36:18,789 --> 00:36:26,559
and from the basement you can gain

672
00:36:22,329 --> 00:36:31,930
control you can intercept and modify SMS

673
00:36:26,559 --> 00:36:35,549
calls and<font color="#E5E5E5"> mobile</font><font color="#CCCCCC"> Internet traffic so we</font>

674
00:36:31,930 --> 00:36:35,549
<font color="#CCCCCC">will do a demo</font><font color="#E5E5E5"> now</font>

675
00:36:43,529 --> 00:36:57,160
oops so here you<font color="#E5E5E5"> can see the machine</font>

676
00:36:54,369 --> 00:36:59,890
<font color="#E5E5E5">that we described to you and the Faraday</font>

677
00:36:57,160 --> 00:37:03,190
cage<font color="#CCCCCC"> here we show you the</font><font color="#E5E5E5"> original IMEI</font>

678
00:36:59,890 --> 00:37:07,319
which is<font color="#E5E5E5"> eight</font><font color="#CCCCCC"> six one nine now we will</font>

679
00:37:03,190 --> 00:37:07,319
use<font color="#E5E5E5"> the machine to trigger the exploit</font>

680
00:37:09,580 --> 00:37:15,819
[Music]

681
00:37:11,729 --> 00:37:17,919
and then now we will check<font color="#E5E5E5"> if the if the</font>

682
00:37:15,819 --> 00:37:26,619
IMEI is<font color="#CCCCCC"> one two three seven one three</font>

683
00:37:17,920 --> 00:37:29,529
<font color="#CCCCCC">three seven and you</font><font color="#E5E5E5"> can see the IMEI is</font>

684
00:37:26,619 --> 00:37:30,270
one two three<font color="#CCCCCC"> seven so we will ponder</font>

685
00:37:29,529 --> 00:37:33,389
<font color="#CCCCCC">the basement</font>

686
00:37:30,270 --> 00:37:33,389
[Music]

687
00:37:35,110 --> 00:37:38,429
[Applause]

688
00:37:35,360 --> 00:37:38,429
[Music]

689
00:37:45,740 --> 00:37:51,689
<font color="#E5E5E5">okay so the vendor response</font><font color="#CCCCCC"> was very</font>

690
00:37:49,350 --> 00:37:55,440
<font color="#E5E5E5">quick and while we quickly patched the</font>

691
00:37:51,690 --> 00:37:57,990
issue<font color="#E5E5E5"> releasing</font><font color="#CCCCCC"> an update and we had a</font>

692
00:37:55,440 --> 00:38:00,570
good<font color="#E5E5E5"> communication</font><font color="#CCCCCC"> with the Security</font>

693
00:37:57,990 --> 00:38:04,140
<font color="#E5E5E5">Response Team and we even follow up</font>

694
00:38:00,570 --> 00:38:06,390
after<font color="#CCCCCC"> a pontoon</font><font color="#E5E5E5"> and they are they</font>

695
00:38:04,140 --> 00:38:08,609
we had a very responsive feedback and

696
00:38:06,390 --> 00:38:13,529
<font color="#E5E5E5">they seems to care a lot</font><font color="#CCCCCC"> about the</font>

697
00:38:08,610 --> 00:38:15,300
<font color="#E5E5E5">security of their base them so mmm we</font>

698
00:38:13,530 --> 00:38:18,540
<font color="#E5E5E5">talked</font><font color="#CCCCCC"> about remote code execution on</font>

699
00:38:15,300 --> 00:38:21,560
<font color="#CCCCCC">the base line</font><font color="#E5E5E5"> but what can you do after</font>

700
00:38:18,540 --> 00:38:24,920
this to get more capabilities well<font color="#E5E5E5"> I</font>

701
00:38:21,560 --> 00:38:28,049
<font color="#E5E5E5">like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> think it's similar to browser</font>

702
00:38:24,920 --> 00:38:29,970
exploitation in the<font color="#E5E5E5"> browser context you</font>

703
00:38:28,050 --> 00:38:32,250
get first a browser bug and<font color="#E5E5E5"> you get</font>

704
00:38:29,970 --> 00:38:35,640
remote code execution<font color="#E5E5E5"> then you chain a</font>

705
00:38:32,250 --> 00:38:38,400
sandbox escape and you get like machine

706
00:38:35,640 --> 00:38:41,069
compromising<font color="#E5E5E5"> here it's the same the</font>

707
00:38:38,400 --> 00:38:43,290
first bug might be a baseband remote

708
00:38:41,070 --> 00:38:46,230
code execution<font color="#E5E5E5"> and then you can launch</font>

709
00:38:43,290 --> 00:38:49,320
another bug to escape the<font color="#E5E5E5"> basement it's</font>

710
00:38:46,230 --> 00:38:52,350
not a very well studied topic<font color="#E5E5E5"> but there</font>

711
00:38:49,320 --> 00:38:55,650
are some material known<font color="#E5E5E5"> on similar</font>

712
00:38:52,350 --> 00:38:59,759
scenarios<font color="#CCCCCC"> we didn't have to provide</font><font color="#E5E5E5"> this</font>

713
00:38:55,650 --> 00:39:02,640
kind<font color="#E5E5E5"> of proof</font><font color="#CCCCCC"> to the competition</font><font color="#E5E5E5"> because</font>

714
00:38:59,760 --> 00:39:04,830
it was not<font color="#CCCCCC"> a</font><font color="#E5E5E5"> required by the rule but</font>

715
00:39:02,640 --> 00:39:06,600
<font color="#E5E5E5">you I recommend</font><font color="#CCCCCC"> you to</font><font color="#E5E5E5"> check out the</font>

716
00:39:04,830 --> 00:39:09,720
<font color="#CCCCCC">Galvan a meaning of project zero</font>

717
00:39:06,600 --> 00:39:13,350
<font color="#E5E5E5">research where from the Wi-Fi chip</font>

718
00:39:09,720 --> 00:39:15,540
he used DMA to<font color="#CCCCCC"> override memory on the</font>

719
00:39:13,350 --> 00:39:17,279
application processor and<font color="#CCCCCC"> the comm</font>

720
00:39:15,540 --> 00:39:20,970
<font color="#CCCCCC">securest blog post where they use a</font>

721
00:39:17,280 --> 00:39:23,820
<font color="#E5E5E5">potato itself in the</font><font color="#CCCCCC"> MDK reachable from</font>

722
00:39:20,970 --> 00:39:26,609
the<font color="#CCCCCC"> empty K basement in order to</font><font color="#E5E5E5"> modify</font>

723
00:39:23,820 --> 00:39:30,510
files on the application processor and

724
00:39:26,609 --> 00:39:32,640
escape the basement<font color="#CCCCCC"> and after this you</font>

725
00:39:30,510 --> 00:39:35,910
can<font color="#CCCCCC"> potentially get complete</font><font color="#E5E5E5"> control of</font>

726
00:39:32,640 --> 00:39:39,810
the target<font color="#E5E5E5"> device and the attack surface</font>

727
00:39:35,910 --> 00:39:44,759
in this area is significant and there is

728
00:39:39,810 --> 00:39:48,540
no<font color="#E5E5E5"> public research so now we will</font>

729
00:39:44,760 --> 00:39:50,940
<font color="#E5E5E5">conclude the talk</font><font color="#CCCCCC"> just to summarize we</font>

730
00:39:48,540 --> 00:39:52,740
show it<font color="#E5E5E5"> we show to you that baseband</font>

731
00:39:50,940 --> 00:39:55,380
remote code execution not<font color="#E5E5E5"> only it's</font>

732
00:39:52,740 --> 00:39:59,069
possible but also practical<font color="#E5E5E5"> if you are</font>

733
00:39:55,380 --> 00:40:01,080
determind attacker<font color="#CCCCCC"> second</font><font color="#E5E5E5"> point based on</font>

734
00:39:59,070 --> 00:40:04,530
<font color="#E5E5E5">their very complex and they have a huge</font>

735
00:40:01,080 --> 00:40:06,450
<font color="#E5E5E5">remote attack surface</font><font color="#CCCCCC"> Third Point they</font>

736
00:40:04,530 --> 00:40:09,570
are written in<font color="#CCCCCC"> a memory unsafe language</font>

737
00:40:06,450 --> 00:40:12,689
<font color="#E5E5E5">C and C++ and they lack of even basic</font>

738
00:40:09,570 --> 00:40:15,000
mitigations<font color="#CCCCCC"> so it should not surprise</font>

739
00:40:12,690 --> 00:40:17,610
you if someone<font color="#E5E5E5"> came back can get a</font>

740
00:40:15,000 --> 00:40:20,430
<font color="#E5E5E5">remote code execution on wave them given</font>

741
00:40:17,610 --> 00:40:22,230
those<font color="#CCCCCC"> two facts and we</font><font color="#E5E5E5"> hope in the</font>

742
00:40:20,430 --> 00:40:25,020
<font color="#CCCCCC">future to see more mitigation on the</font>

743
00:40:22,230 --> 00:40:27,750
<font color="#E5E5E5">basement and maybe in the long term to</font>

744
00:40:25,020 --> 00:40:31,259
<font color="#CCCCCC">see that</font><font color="#E5E5E5"> the basement are</font><font color="#CCCCCC"> written in</font>

745
00:40:27,750 --> 00:40:33,840
some memory safe<font color="#E5E5E5"> language and but this</font>

746
00:40:31,260 --> 00:40:35,910
cannot happen in<font color="#CCCCCC"> short a</font><font color="#E5E5E5"> time frame</font><font color="#CCCCCC"> so</font>

747
00:40:33,840 --> 00:40:40,860
maybe in the meanwhile<font color="#E5E5E5"> more people</font>

748
00:40:35,910 --> 00:40:43,770
should audit<font color="#CCCCCC"> a</font><font color="#E5E5E5"> basement</font><font color="#CCCCCC"> and we would</font>

749
00:40:40,860 --> 00:40:47,490
like<font color="#CCCCCC"> to talk at</font><font color="#E5E5E5"> knowledge the following</font>

750
00:40:43,770 --> 00:40:50,810
of our colleagues and thank you everyone

751
00:40:47,490 --> 00:40:50,810
for attending our talk

752
00:40:52,640 --> 00:40:57,339
[Applause]

