1
00:00:00,000 --> 00:00:05,549
<font color="#E5E5E5">all right Aloha and welcome to my talk</font>

2
00:00:02,040 --> 00:00:07,770
<font color="#E5E5E5">on making and breaking</font><font color="#CCCCCC"> mac firewalls my</font>

3
00:00:05,549 --> 00:00:09,330
name is Patrick<font color="#CCCCCC"> I work at digital</font>

4
00:00:07,770 --> 00:00:11,639
<font color="#CCCCCC">security</font><font color="#E5E5E5"> where we are creating</font>

5
00:00:09,330 --> 00:00:14,099
<font color="#CCCCCC">cybersecurity tools for the Mac</font>

6
00:00:11,639 --> 00:00:18,180
<font color="#CCCCCC">Enterprise I'm also the creator of the</font>

7
00:00:14,099 --> 00:00:20,460
Mac<font color="#CCCCCC"> security website objective-c</font><font color="#E5E5E5"> so</font>

8
00:00:18,180 --> 00:00:23,279
today we're<font color="#E5E5E5"> gonna talk about creating or</font>

9
00:00:20,460 --> 00:00:24,900
<font color="#CCCCCC">making a firewall</font><font color="#E5E5E5"> for Mac OS we're then</font>

10
00:00:23,279 --> 00:00:27,210
<font color="#CCCCCC">gonna shift gears we're gonna put on our</font>

11
00:00:24,900 --> 00:00:32,430
<font color="#CCCCCC">hack your</font><font color="#E5E5E5"> hats and talk about then</font>

12
00:00:27,210 --> 00:00:33,899
<font color="#E5E5E5">breaking or bypassing such products so</font>

13
00:00:32,430 --> 00:00:36,960
about<font color="#E5E5E5"> a</font><font color="#CCCCCC"> year</font><font color="#E5E5E5"> ago I decided</font><font color="#CCCCCC"> hey I want</font><font color="#E5E5E5"> to</font>

14
00:00:33,899 --> 00:00:39,270
write<font color="#E5E5E5"> a firewall for Mac OS so this</font>

15
00:00:36,960 --> 00:00:42,540
<font color="#E5E5E5">section of the talk will describe</font><font color="#CCCCCC"> that</font>

16
00:00:39,270 --> 00:00:45,469
process<font color="#CCCCCC"> in creating a free Mac firewall</font>

17
00:00:42,540 --> 00:00:48,210
product called<font color="#E5E5E5"> Lulu</font>

18
00:00:45,469 --> 00:00:50,670
so there's many<font color="#CCCCCC"> reasons you might</font><font color="#E5E5E5"> want</font>

19
00:00:48,210 --> 00:00:52,890
<font color="#CCCCCC">to</font><font color="#E5E5E5"> create or install a firewall some of</font>

20
00:00:50,670 --> 00:00:55,680
the<font color="#E5E5E5"> obvious ones are obviously</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> help</font>

21
00:00:52,890 --> 00:00:58,109
protect<font color="#E5E5E5"> your privacy</font><font color="#CCCCCC"> firewalls are also</font>

22
00:00:55,680 --> 00:01:00,960
good at sorting a<font color="#E5E5E5"> cyber</font><font color="#CCCCCC"> attacks so many</font>

23
00:00:58,109 --> 00:01:03,149
firewalls are able to<font color="#E5E5E5"> generically detect</font>

24
00:01:00,960 --> 00:01:05,489
malware that<font color="#E5E5E5"> perhaps has gotten onto</font>

25
00:01:03,149 --> 00:01:07,110
<font color="#E5E5E5">your system</font><font color="#CCCCCC"> and now is</font><font color="#E5E5E5"> trying to beacon</font>

26
00:01:05,489 --> 00:01:09,540
out perhaps<font color="#E5E5E5"> to talk to a command and</font>

27
00:01:07,110 --> 00:01:11,460
<font color="#E5E5E5">control server so what our firewall will</font>

28
00:01:09,540 --> 00:01:14,310
do is monitor all network traffic<font color="#E5E5E5"> and</font>

29
00:01:11,460 --> 00:01:16,380
allow trusted traffic while detecting

30
00:01:14,310 --> 00:01:20,790
and blocking<font color="#E5E5E5"> malicious or</font><font color="#CCCCCC"> unauthorized</font>

31
00:01:16,380 --> 00:01:22,380
traffic now since we need to monitor<font color="#E5E5E5"> all</font>

32
00:01:20,790 --> 00:01:25,110
network connections we are going to have

33
00:01:22,380 --> 00:01:27,720
to write a kernel extension<font color="#E5E5E5"> luckily in</font>

34
00:01:25,110 --> 00:01:30,930
Mac OS<font color="#CCCCCC"> Apple provides something</font><font color="#E5E5E5"> called</font>

35
00:01:27,720 --> 00:01:33,929
<font color="#CCCCCC">Network kernel extensions or</font><font color="#E5E5E5"> NK ease and</font>

36
00:01:30,930 --> 00:01:37,079
they provide a<font color="#E5E5E5"> way to modify or extend</font>

37
00:01:33,930 --> 00:01:38,009
the<font color="#E5E5E5"> network infrastructure one type of</font>

38
00:01:37,079 --> 00:01:40,860
<font color="#E5E5E5">nke</font>

39
00:01:38,009 --> 00:01:43,860
is called a socket filter filter which

40
00:01:40,860 --> 00:01:45,840
as its name<font color="#E5E5E5"> obviously implies can filter</font>

41
00:01:43,860 --> 00:01:48,090
network<font color="#E5E5E5"> traffic at the socket level</font>

42
00:01:45,840 --> 00:01:52,920
<font color="#E5E5E5">which for creating a firewall sounds</font>

43
00:01:48,090 --> 00:01:55,710
perfect so in order<font color="#E5E5E5"> to filter network</font>

44
00:01:52,920 --> 00:01:58,530
traffic<font color="#E5E5E5"> and connections we first have</font><font color="#CCCCCC"> to</font>

45
00:01:55,710 --> 00:02:00,809
register<font color="#E5E5E5"> a socket filter so</font><font color="#CCCCCC"> you</font>

46
00:01:58,530 --> 00:02:03,570
<font color="#E5E5E5">accomplish this by first filling out a</font>

47
00:02:00,810 --> 00:02:06,210
socket<font color="#CCCCCC"> filter structure and this</font>

48
00:02:03,570 --> 00:02:08,190
structure has various callbacks<font color="#E5E5E5"> which</font>

49
00:02:06,210 --> 00:02:11,190
once registered<font color="#E5E5E5"> will be invoked by</font><font color="#CCCCCC"> the</font>

50
00:02:08,190 --> 00:02:13,440
operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> anytime a socket</font><font color="#E5E5E5"> action</font>

51
00:02:11,190 --> 00:02:16,440
occurs this thing gives our fire

52
00:02:13,440 --> 00:02:20,730
while the ability<font color="#CCCCCC"> to monitor</font><font color="#E5E5E5"> examine and</font>

53
00:02:16,440 --> 00:02:23,090
filter these socket actions now once

54
00:02:20,730 --> 00:02:26,519
this socket filter<font color="#E5E5E5"> structure has been</font>

55
00:02:23,090 --> 00:02:29,160
<font color="#E5E5E5">populated you invoke the socket filter</font>

56
00:02:26,520 --> 00:02:31,440
register<font color="#E5E5E5"> function and this will as its</font>

57
00:02:29,160 --> 00:02:34,859
name<font color="#CCCCCC"> implies register or install the</font>

58
00:02:31,440 --> 00:02:36,540
socket<font color="#E5E5E5"> filter now besides that populated</font>

59
00:02:34,860 --> 00:02:39,570
structure structure<font color="#E5E5E5"> we just discussed</font>

60
00:02:36,540 --> 00:02:42,630
this filter<font color="#E5E5E5"> also takes the socket domain</font>

61
00:02:39,570 --> 00:02:45,720
type and the protocol<font color="#CCCCCC"> so this means if</font>

62
00:02:42,630 --> 00:02:49,260
<font color="#E5E5E5">you want to filter multiple socket types</font>

63
00:02:45,720 --> 00:02:52,820
for example<font color="#E5E5E5"> ipv4 ipv6 etc etc you</font><font color="#CCCCCC"> have</font>

64
00:02:49,260 --> 00:02:54,929
to invoke this function<font color="#CCCCCC"> multiple times</font>

65
00:02:52,820 --> 00:02:57,299
<font color="#E5E5E5">all right so now let's talk about these</font>

66
00:02:54,930 --> 00:02:59,940
<font color="#CCCCCC">callbacks which as I mentioned once your</font>

67
00:02:57,300 --> 00:03:01,740
socket filter is installed<font color="#E5E5E5"> the operating</font>

68
00:02:59,940 --> 00:03:03,780
<font color="#E5E5E5">system will automatically invoked when</font>

69
00:03:01,740 --> 00:03:05,610
socket actions occur allowing your

70
00:03:03,780 --> 00:03:08,520
firewall to examine and either allow or

71
00:03:05,610 --> 00:03:10,560
<font color="#CCCCCC">block these events</font><font color="#E5E5E5"> so first up we</font><font color="#CCCCCC"> have</font>

72
00:03:08,520 --> 00:03:12,390
the attach callback<font color="#E5E5E5"> as the slide</font>

73
00:03:10,560 --> 00:03:14,760
mentioned this is called<font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> a</font>

74
00:03:12,390 --> 00:03:17,488
<font color="#E5E5E5">socket is created and it's</font><font color="#CCCCCC"> called with</font>

75
00:03:14,760 --> 00:03:19,950
the actual socket<font color="#CCCCCC"> and also a cookie</font>

76
00:03:17,489 --> 00:03:23,040
parameter which can<font color="#CCCCCC"> hold any socket</font>

77
00:03:19,950 --> 00:03:25,410
specific data<font color="#E5E5E5"> so here we allocate a</font>

78
00:03:23,040 --> 00:03:27,959
chunk<font color="#E5E5E5"> of memory and then we store an</font>

79
00:03:25,410 --> 00:03:29,850
action based on the<font color="#CCCCCC"> pit of</font><font color="#E5E5E5"> the process</font>

80
00:03:27,959 --> 00:03:32,160
<font color="#CCCCCC">if it's a</font><font color="#E5E5E5"> process we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> allow</font>

81
00:03:29,850 --> 00:03:34,769
we set it to<font color="#E5E5E5"> allow if it's a</font><font color="#CCCCCC"> process we</font>

82
00:03:32,160 --> 00:03:36,690
want<font color="#E5E5E5"> to block we set the action to block</font>

83
00:03:34,770 --> 00:03:38,670
<font color="#E5E5E5">and if it's a</font><font color="#CCCCCC"> new process or</font><font color="#E5E5E5"> something</font>

84
00:03:36,690 --> 00:03:43,650
that we<font color="#E5E5E5"> don't recognize</font><font color="#CCCCCC"> we set the</font>

85
00:03:38,670 --> 00:03:45,958
action to ask next<font color="#E5E5E5"> up is the connect out</font>

86
00:03:43,650 --> 00:03:48,000
callback and this will be called by the

87
00:03:45,959 --> 00:03:49,920
operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> anytime a socket</font>

88
00:03:48,000 --> 00:03:52,350
<font color="#E5E5E5">attempts to initiate an outgoing</font>

89
00:03:49,920 --> 00:03:54,089
<font color="#E5E5E5">connection it takes that same cookie</font>

90
00:03:52,350 --> 00:03:57,209
parameter which we've set to either

91
00:03:54,090 --> 00:03:59,100
allow block or ask the socket and then

92
00:03:57,209 --> 00:04:00,930
the<font color="#E5E5E5"> remote address</font><font color="#CCCCCC"> that the socket is</font>

93
00:03:59,100 --> 00:04:03,930
trying to connect<font color="#E5E5E5"> to so we can examine</font>

94
00:04:00,930 --> 00:04:06,570
the<font color="#CCCCCC"> endpoint now if we've previously</font><font color="#E5E5E5"> set</font>

95
00:04:03,930 --> 00:04:08,100
the action to allow we just return<font color="#CCCCCC"> okay</font>

96
00:04:06,570 --> 00:04:09,810
from<font color="#E5E5E5"> this function</font><font color="#CCCCCC"> this tells the</font>

97
00:04:08,100 --> 00:04:11,820
operating system<font color="#CCCCCC"> we're cool with this</font>

98
00:04:09,810 --> 00:04:14,040
and it should<font color="#E5E5E5"> be allowed if we want to</font>

99
00:04:11,820 --> 00:04:15,600
<font color="#E5E5E5">block this we</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> return an error from</font>

100
00:04:14,040 --> 00:04:17,339
<font color="#E5E5E5">this callback</font><font color="#CCCCCC"> and this will tell the</font>

101
00:04:15,600 --> 00:04:20,070
operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> to block</font><font color="#E5E5E5"> or deny the</font>

102
00:04:17,339 --> 00:04:22,079
connection<font color="#E5E5E5"> now if the cookie has been</font>

103
00:04:20,070 --> 00:04:23,640
set<font color="#CCCCCC"> to ask this means we we're</font><font color="#E5E5E5"> not sure</font>

104
00:04:22,079 --> 00:04:25,020
what to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> you know should we allow the</font>

105
00:04:23,640 --> 00:04:28,169
process should<font color="#E5E5E5"> we block it we're just</font>

106
00:04:25,020 --> 00:04:31,419
<font color="#CCCCCC">not sure so we have to have some</font><font color="#E5E5E5"> extra</font>

107
00:04:28,170 --> 00:04:33,700
so if we don't know what we<font color="#E5E5E5"> should do</font>

108
00:04:31,420 --> 00:04:36,040
<font color="#E5E5E5">we're gonna have</font><font color="#CCCCCC"> to ask some other</font>

109
00:04:33,700 --> 00:04:37,900
firewall components so the first thing

110
00:04:36,040 --> 00:04:39,700
we do is still in the kernel we set the

111
00:04:37,900 --> 00:04:42,400
thread to sleep basically pausing the

112
00:04:39,700 --> 00:04:45,280
operation<font color="#E5E5E5"> we then ask our user mode</font>

113
00:04:42,400 --> 00:04:47,530
<font color="#E5E5E5">firewall component daemon for assistance</font>

114
00:04:45,280 --> 00:04:50,229
<font color="#E5E5E5">and we pass the</font><font color="#CCCCCC"> information that we have</font>

115
00:04:47,530 --> 00:04:52,510
from the kernel<font color="#E5E5E5"> to user mode via shared</font>

116
00:04:50,230 --> 00:04:54,070
<font color="#E5E5E5">queue for example the pit and the socket</font>

117
00:04:52,510 --> 00:04:57,280
that's trying to<font color="#CCCCCC"> initiate the</font><font color="#E5E5E5"> outgoing</font>

118
00:04:54,070 --> 00:04:59,349
connection so the daemon now gets this

119
00:04:57,280 --> 00:05:01,869
<font color="#E5E5E5">request from the kernel and what it does</font>

120
00:04:59,350 --> 00:05:04,510
is that<font color="#E5E5E5"> map's a</font><font color="#CCCCCC"> pit</font><font color="#E5E5E5"> to a path and then</font>

121
00:05:01,870 --> 00:05:07,060
first checks if this path exists in the

122
00:05:04,510 --> 00:05:09,039
rules database<font color="#E5E5E5"> if it's not found meaning</font>

123
00:05:07,060 --> 00:05:10,630
<font color="#E5E5E5">it's a brand new application or a piece</font>

124
00:05:09,040 --> 00:05:12,730
of<font color="#CCCCCC"> malware</font><font color="#E5E5E5"> that's never been on the</font>

125
00:05:10,630 --> 00:05:14,770
system<font color="#CCCCCC"> before</font><font color="#E5E5E5"> what it then does is it</font>

126
00:05:12,730 --> 00:05:17,170
sends<font color="#E5E5E5"> another message to</font><font color="#CCCCCC"> another</font>

127
00:05:14,770 --> 00:05:19,210
firewall component that's running in the

128
00:05:17,170 --> 00:05:21,910
<font color="#E5E5E5">user's UI session which will now</font>

129
00:05:19,210 --> 00:05:25,719
actually display<font color="#CCCCCC"> the firewall alert to</font>

130
00:05:21,910 --> 00:05:27,790
the<font color="#CCCCCC"> user so</font><font color="#E5E5E5"> the user now has has to</font>

131
00:05:25,720 --> 00:05:30,100
basically<font color="#E5E5E5"> answer the question should</font>

132
00:05:27,790 --> 00:05:31,540
<font color="#CCCCCC">they allow this connection and what we</font>

133
00:05:30,100 --> 00:05:33,880
do is we<font color="#E5E5E5"> wait until they interact with</font>

134
00:05:31,540 --> 00:05:36,340
<font color="#E5E5E5">this alert once they've clicked either</font>

135
00:05:33,880 --> 00:05:38,320
allow or<font color="#CCCCCC"> block</font><font color="#E5E5E5"> this response is first</font>

136
00:05:36,340 --> 00:05:40,359
sent<font color="#E5E5E5"> back to the daemon the daemon then</font>

137
00:05:38,320 --> 00:05:42,760
updates<font color="#E5E5E5"> the rule database and then</font>

138
00:05:40,360 --> 00:05:45,700
propagates this response<font color="#E5E5E5"> back into the</font>

139
00:05:42,760 --> 00:05:47,980
kernel<font color="#E5E5E5"> via and i/o kit interface the</font>

140
00:05:45,700 --> 00:05:49,690
kernel extension wakes up the thread

141
00:05:47,980 --> 00:05:51,610
that it had previously put asleep and

142
00:05:49,690 --> 00:05:53,800
then applies<font color="#CCCCCC"> the action that</font><font color="#E5E5E5"> the user</font>

143
00:05:51,610 --> 00:05:57,610
specified either<font color="#CCCCCC"> allowing or blocking</font>

144
00:05:53,800 --> 00:05:59,410
the connection<font color="#E5E5E5"> so basically that at</font>

145
00:05:57,610 --> 00:06:01,030
<font color="#E5E5E5">least from a conceptual point of view is</font>

146
00:05:59,410 --> 00:06:02,890
all the pieces we need to build a

147
00:06:01,030 --> 00:06:05,380
comprehensive kernel level firewall for

148
00:06:02,890 --> 00:06:07,870
Mac OS so we put this all<font color="#E5E5E5"> together we</font>

149
00:06:05,380 --> 00:06:10,690
<font color="#CCCCCC">have</font><font color="#E5E5E5"> Lulu so mention Lulu is a free</font>

150
00:06:07,870 --> 00:06:12,490
firewall for<font color="#E5E5E5"> Mac OS the entire source</font>

151
00:06:10,690 --> 00:06:14,590
code<font color="#E5E5E5"> for this product is available on</font>

152
00:06:12,490 --> 00:06:19,390
<font color="#E5E5E5">Lion and as of today</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> download</font>

153
00:06:14,590 --> 00:06:21,520
and<font color="#CCCCCC"> install</font><font color="#E5E5E5"> version 1.0 all right now</font>

154
00:06:19,390 --> 00:06:23,590
black<font color="#E5E5E5"> hat</font><font color="#CCCCCC"> is predominantly at least in</font>

155
00:06:21,520 --> 00:06:26,349
my<font color="#CCCCCC"> opinion at a hacker conference</font><font color="#E5E5E5"> so now</font>

156
00:06:23,590 --> 00:06:30,969
let's turn our attention<font color="#CCCCCC"> to</font><font color="#E5E5E5"> breaking or</font>

157
00:06:26,350 --> 00:06:33,310
<font color="#CCCCCC">bypassing these firewalls so imagine you</font>

158
00:06:30,970 --> 00:06:35,320
are an attacker or perhaps<font color="#E5E5E5"> a piece of</font>

159
00:06:33,310 --> 00:06:36,730
malware<font color="#E5E5E5"> that's made it to a host so</font>

160
00:06:35,320 --> 00:06:39,520
you've infected a system<font color="#E5E5E5"> unfortunately</font>

161
00:06:36,730 --> 00:06:41,050
<font color="#CCCCCC">there is a firewall</font><font color="#E5E5E5"> installed so what</font>

162
00:06:39,520 --> 00:06:43,568
your goal<font color="#CCCCCC"> is pretty simple</font>

163
00:06:41,050 --> 00:06:45,159
it's to connect<font color="#E5E5E5"> out to either a command</font>

164
00:06:43,569 --> 00:06:47,740
and<font color="#E5E5E5"> control server for tasking or</font>

165
00:06:45,159 --> 00:06:50,050
perhaps to exfiltrate some data<font color="#E5E5E5"> without</font>

166
00:06:47,740 --> 00:06:52,569
<font color="#E5E5E5">being blocked by whatever firewall is</font>

167
00:06:50,050 --> 00:06:53,740
installed on<font color="#CCCCCC"> that system so in</font><font color="#E5E5E5"> this part</font>

168
00:06:52,569 --> 00:06:56,590
of<font color="#E5E5E5"> the talk we're first going</font><font color="#CCCCCC"> to look at</font>

169
00:06:53,740 --> 00:06:58,419
some malware<font color="#E5E5E5"> firewall aware malware</font>

170
00:06:56,590 --> 00:07:01,090
we're then going to talk about some

171
00:06:58,419 --> 00:07:03,219
exploitable security flaws in firewall

172
00:07:01,090 --> 00:07:07,210
products and then end with<font color="#E5E5E5"> talking about</font>

173
00:07:03,220 --> 00:07:08,830
some of<font color="#E5E5E5"> firewall bypasses so it's</font>

174
00:07:07,210 --> 00:07:11,680
actually<font color="#CCCCCC"> very important for malware</font><font color="#E5E5E5"> to</font>

175
00:07:08,830 --> 00:07:13,750
detect<font color="#E5E5E5"> if there is a firewall</font><font color="#CCCCCC"> on the box</font>

176
00:07:11,680 --> 00:07:15,250
because<font color="#E5E5E5"> if they don't</font><font color="#CCCCCC"> as we can see on</font>

177
00:07:13,750 --> 00:07:17,500
the<font color="#CCCCCC"> slide this might be their undoing</font>

178
00:07:15,250 --> 00:07:19,240
<font color="#CCCCCC">the firewall might detect when the</font>

179
00:07:17,500 --> 00:07:21,759
<font color="#E5E5E5">malware which was previously undetected</font>

180
00:07:19,240 --> 00:07:23,680
<font color="#CCCCCC">connects out and that's alert the user</font>

181
00:07:21,759 --> 00:07:27,550
<font color="#E5E5E5">that there's something suspicious on</font>

182
00:07:23,680 --> 00:07:29,770
their box<font color="#E5E5E5"> now I've yet to see any public</font>

183
00:07:27,550 --> 00:07:32,710
Mac malware that is proactively trying

184
00:07:29,770 --> 00:07:34,659
<font color="#E5E5E5">to bat bypass firewall products but</font>

185
00:07:32,710 --> 00:07:37,239
there are some Mac malware specimens

186
00:07:34,659 --> 00:07:39,400
that are firewall aware what I mean by

187
00:07:37,240 --> 00:07:41,259
this<font color="#E5E5E5"> is they actively look to see if any</font>

188
00:07:39,400 --> 00:07:43,679
firewall product is installed<font color="#E5E5E5"> on the</font>

189
00:07:41,259 --> 00:07:46,930
<font color="#CCCCCC">system and if there is they will not</font>

190
00:07:43,680 --> 00:07:49,029
persistently infect that<font color="#E5E5E5"> box so one</font>

191
00:07:46,930 --> 00:07:51,550
example is devil robber<font color="#E5E5E5"> here is a</font>

192
00:07:49,029 --> 00:07:53,680
snippet of code from<font color="#CCCCCC"> one of its scripts</font>

193
00:07:51,550 --> 00:07:55,630
<font color="#E5E5E5">install scripts and we can see what it's</font>

194
00:07:53,680 --> 00:07:57,580
doing<font color="#E5E5E5"> is it's checking for the presence</font>

195
00:07:55,630 --> 00:08:00,819
of<font color="#E5E5E5"> Little Snitch which is a popular</font>

196
00:07:57,580 --> 00:08:03,279
<font color="#CCCCCC">third-party firewall if it finds that</font>

197
00:08:00,819 --> 00:08:06,849
extension<font color="#E5E5E5"> instead of infecting the</font>

198
00:08:03,279 --> 00:08:08,979
system persistently<font color="#E5E5E5"> it just executes a</font>

199
00:08:06,849 --> 00:08:11,469
benign app version of the<font color="#E5E5E5"> application it</font>

200
00:08:08,979 --> 00:08:14,469
infected and then exits<font color="#E5E5E5"> so the author of</font>

201
00:08:11,469 --> 00:08:15,819
this<font color="#E5E5E5"> malware basically said hey I don't</font>

202
00:08:14,469 --> 00:08:18,940
<font color="#E5E5E5">want to be detected</font><font color="#CCCCCC"> so if there's a</font>

203
00:08:15,819 --> 00:08:21,819
<font color="#E5E5E5">firewall I'm just</font><font color="#CCCCCC"> gonna bail</font><font color="#E5E5E5"> all right</font>

204
00:08:18,940 --> 00:08:24,190
so now<font color="#E5E5E5"> on to some real issues</font><font color="#CCCCCC"> firewalls</font>

205
00:08:21,819 --> 00:08:26,139
are obviously rather<font color="#E5E5E5"> complex pieces of</font>

206
00:08:24,190 --> 00:08:29,310
software<font color="#E5E5E5"> they run with elevated</font>

207
00:08:26,139 --> 00:08:31,300
<font color="#E5E5E5">privileges in</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> or in the kernel and</font>

208
00:08:29,310 --> 00:08:33,399
unfortunately they're often not<font color="#CCCCCC"> as</font>

209
00:08:31,300 --> 00:08:35,500
<font color="#E5E5E5">well-written as the operating system nor</font>

210
00:08:33,399 --> 00:08:37,149
as audited<font color="#CCCCCC"> so they make great targets</font>

211
00:08:35,500 --> 00:08:40,089
for looking<font color="#CCCCCC"> for local privilege</font>

212
00:08:37,149 --> 00:08:42,549
escalation vulnerabilities so a while

213
00:08:40,089 --> 00:08:45,010
back I found a kernel bug in<font color="#E5E5E5"> the Little</font>

214
00:08:42,549 --> 00:08:48,189
Snitch<font color="#E5E5E5"> firewall driver</font><font color="#CCCCCC"> basically it</font><font color="#E5E5E5"> took</font>

215
00:08:45,010 --> 00:08:50,079
<font color="#E5E5E5">a 64-bit value from user mode and</font><font color="#CCCCCC"> passed</font>

216
00:08:48,190 --> 00:08:53,380
this<font color="#E5E5E5"> value to an allocation routine and</font>

217
00:08:50,079 --> 00:08:54,670
then a copy routine now the issue was

218
00:08:53,380 --> 00:08:57,189
the

219
00:08:54,670 --> 00:09:00,219
<font color="#CCCCCC">Haitian routine</font><font color="#E5E5E5"> expected a 32-bit value</font>

220
00:08:57,190 --> 00:09:02,790
so it truncated<font color="#CCCCCC"> the 64-bit value</font><font color="#E5E5E5"> the</font>

221
00:09:00,220 --> 00:09:05,440
copy however used the full<font color="#CCCCCC"> 64-bit value</font>

222
00:09:02,790 --> 00:09:08,170
<font color="#E5E5E5">meaning we could cause</font><font color="#CCCCCC"> a controllable</font>

223
00:09:05,440 --> 00:09:09,280
mismatch between<font color="#E5E5E5"> the allocation and the</font>

224
00:09:08,170 --> 00:09:11,740
copy routine

225
00:09:09,280 --> 00:09:15,819
<font color="#E5E5E5">giving us an exploitable heap overflow</font>

226
00:09:11,740 --> 00:09:17,230
in the kernel<font color="#E5E5E5"> another issue I found also</font>

227
00:09:15,820 --> 00:09:19,240
in<font color="#E5E5E5"> Little Snitch when I was working on</font>

228
00:09:17,230 --> 00:09:21,970
these slides<font color="#CCCCCC"> affects its installer or</font>

229
00:09:19,240 --> 00:09:24,340
updater component basically<font color="#CCCCCC"> it would not</font>

230
00:09:21,970 --> 00:09:26,470
validate that the new firewall

231
00:09:24,340 --> 00:09:28,330
components it was installing had not

232
00:09:26,470 --> 00:09:31,390
been tampered<font color="#E5E5E5"> so what a local</font>

233
00:09:28,330 --> 00:09:34,330
<font color="#E5E5E5">unprivileged attacker could do is modify</font>

234
00:09:31,390 --> 00:09:37,300
these<font color="#E5E5E5"> components and then the privileged</font>

235
00:09:34,330 --> 00:09:39,640
<font color="#E5E5E5">firewall installer would naively</font><font color="#CCCCCC"> use</font>

236
00:09:37,300 --> 00:09:41,800
these<font color="#E5E5E5"> infected or modified components</font>

237
00:09:39,640 --> 00:09:43,480
and execute them<font color="#E5E5E5"> as</font><font color="#CCCCCC"> root</font><font color="#E5E5E5"> basically</font>

238
00:09:41,800 --> 00:09:48,099
giving again<font color="#E5E5E5"> a local and</font><font color="#CCCCCC"> privilege</font>

239
00:09:43,480 --> 00:09:49,720
attacker root privileges<font color="#E5E5E5"> all right so</font>

240
00:09:48,100 --> 00:09:51,730
now<font color="#CCCCCC"> let's talk about bypassing these</font>

241
00:09:49,720 --> 00:09:54,460
products<font color="#CCCCCC"> first</font><font color="#E5E5E5"> we'll look</font><font color="#CCCCCC"> at ways to</font>

242
00:09:51,730 --> 00:09:57,490
<font color="#CCCCCC">bypass various products so some specific</font>

243
00:09:54,460 --> 00:09:59,290
<font color="#E5E5E5">product specific bypasses and then we'll</font>

244
00:09:57,490 --> 00:10:01,570
talk<font color="#CCCCCC"> about some more</font><font color="#E5E5E5"> powerful</font>

245
00:09:59,290 --> 00:10:04,060
capabilities that<font color="#E5E5E5"> can bypass all</font><font color="#CCCCCC"> third</font>

246
00:10:01,570 --> 00:10:06,040
<font color="#CCCCCC">party firewalls</font><font color="#E5E5E5"> again the goal is</font><font color="#CCCCCC"> to</font>

247
00:10:04,060 --> 00:10:09,069
<font color="#CCCCCC">access</font><font color="#E5E5E5"> the network without being blocked</font>

248
00:10:06,040 --> 00:10:10,870
by and installed<font color="#E5E5E5"> firewall now I do want</font>

249
00:10:09,070 --> 00:10:13,090
to make one<font color="#CCCCCC"> point and that is any</font>

250
00:10:10,870 --> 00:10:15,370
security tool that is proactively or

251
00:10:13,090 --> 00:10:17,950
specifically targeted<font color="#E5E5E5"> will be by</font>

252
00:10:15,370 --> 00:10:19,600
passable<font color="#E5E5E5"> so in my</font><font color="#CCCCCC"> opinion these aren't</font>

253
00:10:17,950 --> 00:10:21,310
necessarily security flaws like<font color="#E5E5E5"> these</font>

254
00:10:19,600 --> 00:10:22,840
shouldn't be assigned CDs I think that's

255
00:10:21,310 --> 00:10:25,630
kind of lame<font color="#E5E5E5"> however they</font><font color="#CCCCCC"> are very</font>

256
00:10:22,840 --> 00:10:28,920
<font color="#E5E5E5">important for attackers or malware which</font>

257
00:10:25,630 --> 00:10:31,750
might otherwise<font color="#E5E5E5"> be detected or blocked</font>

258
00:10:28,920 --> 00:10:34,270
so first up we have<font color="#E5E5E5"> radio silence radio</font>

259
00:10:31,750 --> 00:10:36,580
silence is a popular firewall for Mac OS

260
00:10:34,270 --> 00:10:39,100
and by<font color="#E5E5E5"> default it actually allows any</font>

261
00:10:36,580 --> 00:10:41,350
new process<font color="#CCCCCC"> so it basically takes a more</font>

262
00:10:39,100 --> 00:10:44,410
blacklisting approach expecting the user

263
00:10:41,350 --> 00:10:46,600
to blacklist<font color="#CCCCCC"> a process now if you look</font>

264
00:10:44,410 --> 00:10:48,579
<font color="#E5E5E5">at the disassembly for</font><font color="#CCCCCC"> it's blacklisting</font>

265
00:10:46,600 --> 00:10:50,950
logic in the kernel we can see it's

266
00:10:48,580 --> 00:10:53,560
checking<font color="#E5E5E5"> the name of a process and if</font>

267
00:10:50,950 --> 00:10:56,950
the<font color="#CCCCCC"> process named</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> Launch D it cannot</font>

268
00:10:53,560 --> 00:10:59,020
be<font color="#E5E5E5"> blacklisted more blocked so to test</font>

269
00:10:56,950 --> 00:11:00,730
this we<font color="#E5E5E5"> create some malware and we name</font>

270
00:10:59,020 --> 00:11:03,130
it<font color="#E5E5E5"> launch D doesn't</font><font color="#CCCCCC"> matter where it is</font>

271
00:11:00,730 --> 00:11:05,470
<font color="#E5E5E5">just as long as</font><font color="#CCCCCC"> its name is Launch D we</font>

272
00:11:03,130 --> 00:11:07,420
<font color="#E5E5E5">manually create a rule to blacklist the</font>

273
00:11:05,470 --> 00:11:08,089
malware<font color="#E5E5E5"> and then we execute the malware</font>

274
00:11:07,420 --> 00:11:09,469
and low

275
00:11:08,089 --> 00:11:11,839
hold even though there's a rule to

276
00:11:09,470 --> 00:11:14,240
blacklist<font color="#CCCCCC"> that it is allowed</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it</font>

277
00:11:11,839 --> 00:11:16,279
matches on<font color="#CCCCCC"> the name in the kernel so</font>

278
00:11:14,240 --> 00:11:19,639
<font color="#CCCCCC">this is kind of lame</font><font color="#E5E5E5"> but you know it's a</font>

279
00:11:16,279 --> 00:11:21,620
full<font color="#E5E5E5"> bypass another popular</font>

280
00:11:19,639 --> 00:11:24,259
<font color="#E5E5E5">Mac</font><font color="#CCCCCC"> Firewall product is called</font><font color="#E5E5E5"> hands-off</font>

281
00:11:21,620 --> 00:11:26,389
and it turns out we can<font color="#E5E5E5"> fairly</font><font color="#CCCCCC"> easily</font>

282
00:11:24,259 --> 00:11:29,300
bypass it via synthetic or

283
00:11:26,389 --> 00:11:31,430
programmatically generated clicks so say

284
00:11:29,300 --> 00:11:33,709
<font color="#CCCCCC">for example we want</font><font color="#E5E5E5"> to execute</font><font color="#CCCCCC"> curl curl</font>

285
00:11:31,430 --> 00:11:35,989
is used a lot by malware to download

286
00:11:33,709 --> 00:11:38,599
other components<font color="#E5E5E5"> maybe a second stage</font>

287
00:11:35,990 --> 00:11:40,790
implant<font color="#E5E5E5"> etc etc</font><font color="#CCCCCC"> so if we</font><font color="#E5E5E5"> execute this</font>

288
00:11:38,600 --> 00:11:42,439
the firewall<font color="#E5E5E5"> will detect</font><font color="#CCCCCC"> that curl is</font>

289
00:11:40,790 --> 00:11:44,509
generating an outgoing connection which

290
00:11:42,439 --> 00:11:46,430
<font color="#CCCCCC">is good but</font><font color="#E5E5E5"> what an attacker or piece of</font>

291
00:11:44,509 --> 00:11:48,170
<font color="#CCCCCC">malware can then do is send a synthetic</font>

292
00:11:46,430 --> 00:11:50,029
mouse click to<font color="#CCCCCC"> that alert</font><font color="#E5E5E5"> to</font>

293
00:11:48,170 --> 00:11:52,910
programmatically click the allow button

294
00:11:50,029 --> 00:11:55,189
<font color="#CCCCCC">this will allow the</font><font color="#E5E5E5"> connection and</font>

295
00:11:52,910 --> 00:11:56,839
dismiss the alert and there's also ways

296
00:11:55,189 --> 00:11:58,670
to<font color="#CCCCCC"> do this invisibly so that the user</font>

297
00:11:56,839 --> 00:12:02,600
<font color="#E5E5E5">doesn't see the alert pop-up and the</font>

298
00:11:58,670 --> 00:12:04,939
mouse generate the click now<font color="#CCCCCC"> odd to Lulu</font>

299
00:12:02,600 --> 00:12:07,610
<font color="#CCCCCC">as Lulu is open-source turns out it's</font>

300
00:12:04,939 --> 00:12:09,829
really<font color="#E5E5E5"> not that</font><font color="#CCCCCC"> hard</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> a bypass by</font>

301
00:12:07,610 --> 00:12:12,470
default Lulu trusts Apple signed

302
00:12:09,829 --> 00:12:14,329
binaries although it has a<font color="#E5E5E5"> grey list of</font>

303
00:12:12,470 --> 00:12:16,160
<font color="#E5E5E5">Apple</font><font color="#CCCCCC"> signed binaries that perhaps could</font>

304
00:12:14,329 --> 00:12:17,599
<font color="#CCCCCC">be utilized</font><font color="#E5E5E5"> by malware to perform</font>

305
00:12:16,160 --> 00:12:20,870
malicious<font color="#CCCCCC"> Network actions for example</font>

306
00:12:17,600 --> 00:12:23,990
curl and net<font color="#CCCCCC"> cat so the question is can</font>

307
00:12:20,870 --> 00:12:25,910
<font color="#CCCCCC">we find</font><font color="#E5E5E5"> a Apple sign system binary</font><font color="#CCCCCC"> that</font>

308
00:12:23,990 --> 00:12:29,230
can allow us<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do nefarious Network</font>

309
00:12:25,910 --> 00:12:31,969
actions but that is not on the<font color="#CCCCCC"> grey list</font>

310
00:12:29,230 --> 00:12:33,860
the answer is of course yes<font color="#E5E5E5"> turns out</font>

311
00:12:31,970 --> 00:12:36,639
you can<font color="#CCCCCC"> actually use the</font><font color="#E5E5E5"> Whois utility</font>

312
00:12:33,860 --> 00:12:40,069
to exfiltrate data this was news to<font color="#E5E5E5"> me</font>

313
00:12:36,639 --> 00:12:42,529
since<font color="#CCCCCC"> Whois is signed by Apple proper as</font>

314
00:12:40,069 --> 00:12:45,139
we can see on the slide<font color="#CCCCCC"> when</font><font color="#E5E5E5"> we use</font>

315
00:12:42,529 --> 00:12:46,970
Whois to exfiltrate data<font color="#E5E5E5"> the firewall</font>

316
00:12:45,139 --> 00:12:48,649
<font color="#E5E5E5">Lulu will see the connection because</font>

317
00:12:46,970 --> 00:12:50,959
it's monitoring<font color="#E5E5E5"> all connections globally</font>

318
00:12:48,649 --> 00:12:55,790
but since it's signed by<font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> and not</font>

319
00:12:50,959 --> 00:12:57,258
on the<font color="#E5E5E5"> grey list it is allowed finally</font>

320
00:12:55,790 --> 00:12:58,998
we have<font color="#E5E5E5"> Little Snitch which is probably</font>

321
00:12:57,259 --> 00:13:01,100
the most popular<font color="#E5E5E5"> or</font><font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> Mac</font>

322
00:12:58,999 --> 00:13:03,319
security<font color="#CCCCCC"> product and it turns</font><font color="#E5E5E5"> out it has</font>

323
00:13:01,100 --> 00:13:05,749
<font color="#CCCCCC">an</font><font color="#E5E5E5"> undeletable system rule to allow any</font>

324
00:13:03,319 --> 00:13:08,300
process to<font color="#E5E5E5"> talk to icloud.com</font>

325
00:13:05,749 --> 00:13:11,509
this means any process even malware will

326
00:13:08,300 --> 00:13:14,120
be able<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> Apple's servers so to</font>

327
00:13:11,509 --> 00:13:16,819
test this we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> create a rule to block</font>

328
00:13:14,120 --> 00:13:19,549
curl<font color="#E5E5E5"> and then we can execute curl and</font>

329
00:13:16,819 --> 00:13:21,680
specify a URL<font color="#CCCCCC"> that exists on iCloud</font><font color="#E5E5E5"> and</font>

330
00:13:19,549 --> 00:13:23,660
turns out<font color="#E5E5E5"> even if we have this rule</font>

331
00:13:21,680 --> 00:13:25,760
curl<font color="#E5E5E5"> because of the end point has been</font>

332
00:13:23,660 --> 00:13:27,550
basically<font color="#E5E5E5"> whitelisted it is allowed by</font>

333
00:13:25,760 --> 00:13:30,620
Little Snitch

334
00:13:27,550 --> 00:13:33,229
so while back<font color="#E5E5E5"> i reverse-engineered the</font>

335
00:13:30,620 --> 00:13:35,450
<font color="#E5E5E5">iCloud protocol and set up a command</font>

336
00:13:33,230 --> 00:13:37,490
control server<font color="#E5E5E5"> on</font><font color="#CCCCCC"> iDrive which</font><font color="#E5E5E5"> is also</font>

337
00:13:35,450 --> 00:13:40,130
an iCloud domain of course just<font color="#CCCCCC"> for</font>

338
00:13:37,490 --> 00:13:41,570
testing purposes so once we understand

339
00:13:40,130 --> 00:13:43,010
the protocol<font color="#E5E5E5"> we can write a script</font><font color="#CCCCCC"> that</font>

340
00:13:41,570 --> 00:13:46,240
<font color="#E5E5E5">will</font><font color="#CCCCCC"> export</font><font color="#E5E5E5"> rate files for example</font>

341
00:13:43,010 --> 00:13:49,130
<font color="#CCCCCC">something called top-secret</font><font color="#E5E5E5"> txt to</font>

342
00:13:46,240 --> 00:13:51,440
iCloud to the<font color="#CCCCCC"> iDrive</font><font color="#E5E5E5"> command control</font>

343
00:13:49,130 --> 00:13:53,029
server<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> set up</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> little</font>

344
00:13:51,440 --> 00:13:54,860
<font color="#CCCCCC">snitch</font><font color="#E5E5E5"> will see this connection but</font>

345
00:13:53,029 --> 00:13:58,790
because of the<font color="#CCCCCC"> endpoint is allowed it</font>

346
00:13:54,860 --> 00:14:00,410
will allow the exfiltration<font color="#E5E5E5"> to occur all</font>

347
00:13:58,790 --> 00:14:01,939
right so those were product specific

348
00:14:00,410 --> 00:14:04,219
bypasses<font color="#CCCCCC"> there kind</font><font color="#E5E5E5"> of neat but they're</font>

349
00:14:01,940 --> 00:14:06,350
also kind of lame why well<font color="#CCCCCC"> the attacker</font>

350
00:14:04,220 --> 00:14:08,149
<font color="#E5E5E5">will first have to</font><font color="#CCCCCC"> enumerate what</font><font color="#E5E5E5"> exact</font>

351
00:14:06,350 --> 00:14:09,980
product firewall product is installed

352
00:14:08,149 --> 00:14:11,990
<font color="#CCCCCC">and then use one of these product</font>

353
00:14:09,980 --> 00:14:14,360
specific exploits<font color="#CCCCCC"> so that's kind of a</font>

354
00:14:11,990 --> 00:14:17,120
pain<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the butt now much much better</font>

355
00:14:14,360 --> 00:14:20,270
would would<font color="#CCCCCC"> be to have a generic bypass</font>

356
00:14:17,120 --> 00:14:22,190
which would in type ass any installed

357
00:14:20,270 --> 00:14:23,689
firewall basically saying I'm<font color="#CCCCCC"> agnostic</font>

358
00:14:22,190 --> 00:14:25,100
to<font color="#E5E5E5"> whatever firewall that's installed</font>

359
00:14:23,690 --> 00:14:28,250
I'm just gonna generically bypass this

360
00:14:25,100 --> 00:14:30,770
and these<font color="#CCCCCC"> are possible because firewalls</font>

361
00:14:28,250 --> 00:14:33,680
must allow some traffic<font color="#E5E5E5"> on the network</font>

362
00:14:30,770 --> 00:14:35,810
for<font color="#E5E5E5"> example system protocols system</font>

363
00:14:33,680 --> 00:14:37,279
binaries<font color="#E5E5E5"> and also the user is probably</font>

364
00:14:35,810 --> 00:14:39,170
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> fully allow things like</font>

365
00:14:37,279 --> 00:14:42,920
browsers giving them<font color="#E5E5E5"> indiscriminate</font>

366
00:14:39,170 --> 00:14:44,839
network access so<font color="#E5E5E5"> to generically bypass</font>

367
00:14:42,920 --> 00:14:46,490
a system with a firewall we going to do

368
00:14:44,839 --> 00:14:49,040
two things<font color="#E5E5E5"> first we're going to</font>

369
00:14:46,490 --> 00:14:51,050
passively sniff and determine what

370
00:14:49,040 --> 00:14:52,910
traffic the firewall is allowing out and

371
00:14:51,050 --> 00:14:54,709
then we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to abuse</font><font color="#E5E5E5"> either these</font>

372
00:14:52,910 --> 00:14:59,449
<font color="#E5E5E5">protocols or these applications to</font>

373
00:14:54,709 --> 00:15:02,449
<font color="#E5E5E5">perform nefarious Network actions so</font>

374
00:14:59,450 --> 00:15:05,630
first to<font color="#CCCCCC"> determine what processes or</font>

375
00:15:02,450 --> 00:15:07,640
protocols are allowed<font color="#E5E5E5"> we can use the</font><font color="#CCCCCC"> LSO</font>

376
00:15:05,630 --> 00:15:09,829
<font color="#CCCCCC">F utility which is built-in</font><font color="#E5E5E5"> system</font>

377
00:15:07,640 --> 00:15:11,779
utility on Mac OS you can<font color="#E5E5E5"> execute it</font>

378
00:15:09,829 --> 00:15:13,939
<font color="#CCCCCC">without any special privileges and</font><font color="#E5E5E5"> it</font>

379
00:15:11,779 --> 00:15:16,220
will show you what network traffic is

380
00:15:13,940 --> 00:15:19,190
allowed<font color="#CCCCCC"> so this is a dump for my box we</font>

381
00:15:16,220 --> 00:15:20,990
can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> things like chrome the browser</font>

382
00:15:19,190 --> 00:15:23,870
you know chat applications like slack

383
00:15:20,990 --> 00:15:26,839
signal<font color="#E5E5E5"> bunch of Adobe crap basically</font><font color="#CCCCCC"> a</font>

384
00:15:23,870 --> 00:15:29,510
lot<font color="#E5E5E5"> of stuff now some firewalls will</font>

385
00:15:26,839 --> 00:15:31,250
have<font color="#CCCCCC"> endpoints specific rules</font><font color="#E5E5E5"> meaning</font>

386
00:15:29,510 --> 00:15:33,740
that they might say<font color="#CCCCCC"> ok Adobe is only</font>

387
00:15:31,250 --> 00:15:35,360
allowed<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> to the Adobe servers</font><font color="#E5E5E5"> but</font>

388
00:15:33,740 --> 00:15:35,630
<font color="#E5E5E5">as I mentioned something</font><font color="#CCCCCC"> like a browsers</font>

389
00:15:35,360 --> 00:15:38,090
go

390
00:15:35,630 --> 00:15:41,660
to be<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> to any remote web</font>

391
00:15:38,090 --> 00:15:43,190
server on<font color="#CCCCCC"> port 80 or</font><font color="#E5E5E5"> 443 of course also</font>

392
00:15:41,660 --> 00:15:45,589
a lot of<font color="#CCCCCC"> these applications now talk to</font>

393
00:15:43,190 --> 00:15:47,150
<font color="#CCCCCC">the</font><font color="#E5E5E5"> cloud for example AWS so even if</font>

394
00:15:45,590 --> 00:15:49,850
there's a rule<font color="#E5E5E5"> to say I only want slack</font>

395
00:15:47,150 --> 00:15:55,040
to talk to the AWS infrastructure we<font color="#CCCCCC"> can</font>

396
00:15:49,850 --> 00:15:57,110
probably<font color="#E5E5E5"> also create</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> CNC on AWS okay</font>

397
00:15:55,040 --> 00:15:59,300
<font color="#E5E5E5">so now we know what</font><font color="#CCCCCC"> traffic and what</font>

398
00:15:57,110 --> 00:16:00,200
processes<font color="#E5E5E5"> are allowed or allowed</font><font color="#CCCCCC"> to pass</font>

399
00:15:59,300 --> 00:16:02,479
<font color="#E5E5E5">through</font><font color="#CCCCCC"> the firewall</font>

400
00:16:00,200 --> 00:16:04,850
so the first generic bypass were

401
00:16:02,480 --> 00:16:07,490
actually going to indirectly exploit<font color="#E5E5E5"> the</font>

402
00:16:04,850 --> 00:16:11,600
trust of a process via a trusted

403
00:16:07,490 --> 00:16:15,200
protocol so on Mac DNS on Mac OS DNS

404
00:16:11,600 --> 00:16:17,660
requests are<font color="#CCCCCC"> handled by the system mdns</font>

405
00:16:15,200 --> 00:16:20,240
responder<font color="#E5E5E5"> so if a random application or</font>

406
00:16:17,660 --> 00:16:22,280
a piece<font color="#E5E5E5"> of malware wants to resolve a</font>

407
00:16:20,240 --> 00:16:24,710
domain this<font color="#E5E5E5"> is sent locally to the</font>

408
00:16:22,280 --> 00:16:26,209
<font color="#E5E5E5">system daemon then the system daemon is</font>

409
00:16:24,710 --> 00:16:31,190
the one that<font color="#E5E5E5"> actually generates the</font>

410
00:16:26,210 --> 00:16:32,990
network<font color="#CCCCCC"> requests so</font><font color="#E5E5E5"> the firewall is</font>

411
00:16:31,190 --> 00:16:35,000
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> see this</font><font color="#CCCCCC"> DNS request but it's</font>

412
00:16:32,990 --> 00:16:38,540
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> coming</font><font color="#CCCCCC"> from a trusted system</font>

413
00:16:35,000 --> 00:16:40,610
<font color="#E5E5E5">daemon which is generating all DNS</font>

414
00:16:38,540 --> 00:16:42,319
requests for the entire system<font color="#CCCCCC"> so the</font>

415
00:16:40,610 --> 00:16:44,690
firewall basically has no choice<font color="#E5E5E5"> but</font><font color="#CCCCCC"> to</font>

416
00:16:42,320 --> 00:16:46,640
allow it<font color="#E5E5E5"> so what we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> do is we can</font>

417
00:16:44,690 --> 00:16:47,930
basically build<font color="#E5E5E5"> a</font><font color="#CCCCCC"> DNS</font><font color="#E5E5E5"> based CNC</font>

418
00:16:46,640 --> 00:16:50,180
mechanism which has<font color="#CCCCCC"> been discussed</font>

419
00:16:47,930 --> 00:16:52,069
<font color="#CCCCCC">before</font><font color="#E5E5E5"> and again since the firewall is</font>

420
00:16:50,180 --> 00:16:54,140
going to trust DNS requests from<font color="#E5E5E5"> the</font>

421
00:16:52,070 --> 00:16:55,670
trusted Apple system daemon this will

422
00:16:54,140 --> 00:16:57,860
allow us<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> a full command and</font>

423
00:16:55,670 --> 00:17:01,760
control mechanism which can generically

424
00:16:57,860 --> 00:17:04,250
bypass all<font color="#E5E5E5"> third party firewalls next up</font>

425
00:17:01,760 --> 00:17:06,920
let's abuse browsers<font color="#CCCCCC"> the simple</font><font color="#E5E5E5"> fact is</font>

426
00:17:04,250 --> 00:17:08,599
<font color="#CCCCCC">if you have a browser installed</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> if</font>

427
00:17:06,920 --> 00:17:09,850
you also have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> firewall installed</font>

428
00:17:08,599 --> 00:17:12,290
you're going<font color="#CCCCCC"> to give the browser</font>

429
00:17:09,849 --> 00:17:13,520
<font color="#E5E5E5">generally indiscriminate access because</font>

430
00:17:12,290 --> 00:17:15,230
I mean think<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> it browses to</font>

431
00:17:13,520 --> 00:17:16,189
hundreds<font color="#E5E5E5"> of websites every day there's</font>

432
00:17:15,230 --> 00:17:17,959
no way you're just<font color="#CCCCCC"> gonna sit and</font>

433
00:17:16,189 --> 00:17:19,310
whitelist<font color="#E5E5E5"> all of them and of course this</font>

434
00:17:17,959 --> 00:17:21,949
<font color="#E5E5E5">is</font><font color="#CCCCCC"> something that</font><font color="#E5E5E5"> we can passively</font>

435
00:17:19,310 --> 00:17:23,869
determine via<font color="#CCCCCC"> l sof we</font><font color="#E5E5E5"> can for example</font>

436
00:17:21,949 --> 00:17:25,970
<font color="#E5E5E5">watch for a few</font><font color="#CCCCCC"> hours even a few</font><font color="#E5E5E5"> days</font>

437
00:17:23,869 --> 00:17:27,500
<font color="#E5E5E5">and build a profile of</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> traffic the</font>

438
00:17:25,970 --> 00:17:29,720
browser allows and then basically<font color="#E5E5E5"> say</font>

439
00:17:27,500 --> 00:17:32,510
okay<font color="#E5E5E5"> it looks like</font><font color="#CCCCCC"> chrome</font><font color="#E5E5E5"> is allowed</font><font color="#CCCCCC"> to</font>

440
00:17:29,720 --> 00:17:34,340
talk<font color="#CCCCCC"> to any</font><font color="#E5E5E5"> network endpoint so the</font>

441
00:17:32,510 --> 00:17:37,070
first way we can<font color="#E5E5E5"> abuse a browser to do</font>

442
00:17:34,340 --> 00:17:39,919
some malicious<font color="#CCCCCC"> network activity based on</font>

443
00:17:37,070 --> 00:17:41,570
our behalf<font color="#E5E5E5"> is via</font><font color="#CCCCCC"> Apple script so on the</font>

444
00:17:39,920 --> 00:17:43,580
<font color="#E5E5E5">slide there's a few little</font><font color="#CCCCCC"> Apple script</font>

445
00:17:41,570 --> 00:17:46,550
commands we're basically asking<font color="#CCCCCC"> Safari</font>

446
00:17:43,580 --> 00:17:48,949
to invisibly browse to a remote attacker

447
00:17:46,550 --> 00:17:50,720
<font color="#E5E5E5">controlled</font><font color="#CCCCCC"> command-and-control</font><font color="#E5E5E5"> server</font>

448
00:17:48,950 --> 00:17:52,640
again the<font color="#CCCCCC"> firewall will see this request</font>

449
00:17:50,720 --> 00:17:57,440
<font color="#E5E5E5">but will allow it because</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> coming</font>

450
00:17:52,640 --> 00:17:59,480
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the context of the users browser an</font>

451
00:17:57,440 --> 00:18:02,120
even better way to generically bypass

452
00:17:59,480 --> 00:18:04,250
all firewalls is to abuse the<font color="#CCCCCC"> browser's</font>

453
00:18:02,120 --> 00:18:07,370
<font color="#E5E5E5">command-line interfaces all the major</font>

454
00:18:04,250 --> 00:18:09,440
browsers<font color="#E5E5E5"> now support</font><font color="#CCCCCC"> synthetic browsing</font>

455
00:18:07,370 --> 00:18:11,810
via the command line<font color="#E5E5E5"> really doesn't get</font>

456
00:18:09,440 --> 00:18:14,060
easier than<font color="#CCCCCC"> this so again the firewall</font>

457
00:18:11,810 --> 00:18:16,129
<font color="#E5E5E5">will see these</font><font color="#CCCCCC"> connections</font><font color="#E5E5E5"> but will</font>

458
00:18:14,060 --> 00:18:17,840
allow<font color="#E5E5E5"> them as it really just appears</font>

459
00:18:16,130 --> 00:18:20,030
like it's the<font color="#E5E5E5"> users default browser</font>

460
00:18:17,840 --> 00:18:24,740
browsing to some<font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> which is what</font>

461
00:18:20,030 --> 00:18:27,830
browsers do yet<font color="#E5E5E5"> another way to abuse any</font>

462
00:18:24,740 --> 00:18:30,800
application or trusted binary is to

463
00:18:27,830 --> 00:18:32,870
inject<font color="#E5E5E5"> a dynamic library</font><font color="#CCCCCC"> into it</font><font color="#E5E5E5"> once</font>

464
00:18:30,800 --> 00:18:36,020
the library<font color="#E5E5E5"> or your code is in</font><font color="#CCCCCC"> the</font>

465
00:18:32,870 --> 00:18:38,300
<font color="#E5E5E5">process context of this trusted process</font>

466
00:18:36,020 --> 00:18:41,420
from the firewalls point of view

467
00:18:38,300 --> 00:18:44,090
whatever<font color="#E5E5E5"> trust that application has will</font>

468
00:18:41,420 --> 00:18:45,110
be<font color="#CCCCCC"> also</font><font color="#E5E5E5"> given</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> dynamic library so</font>

469
00:18:44,090 --> 00:18:46,939
for example if you have a chat

470
00:18:45,110 --> 00:18:49,040
application<font color="#E5E5E5"> or a browser that's allowed</font>

471
00:18:46,940 --> 00:18:51,740
to<font color="#CCCCCC"> talk</font><font color="#E5E5E5"> to any network endpoint you can</font>

472
00:18:49,040 --> 00:18:53,899
inject a dye<font color="#CCCCCC"> Lib into that process the</font>

473
00:18:51,740 --> 00:18:56,060
firewall<font color="#E5E5E5"> will also give that library</font>

474
00:18:53,900 --> 00:18:57,800
full<font color="#CCCCCC"> access because</font><font color="#E5E5E5"> it's checks or</font>

475
00:18:56,060 --> 00:19:00,350
insight is really only at the process

476
00:18:57,800 --> 00:19:02,210
level<font color="#E5E5E5"> now there's many ways to inject</font>

477
00:19:00,350 --> 00:19:04,189
dye lives into<font color="#CCCCCC"> third-party applications</font>

478
00:19:02,210 --> 00:19:05,510
on Mac OS fortunately due to time

479
00:19:04,190 --> 00:19:08,590
constraints<font color="#CCCCCC"> we can't go through these</font>

480
00:19:05,510 --> 00:19:12,440
but<font color="#E5E5E5"> I've listed them</font><font color="#CCCCCC"> on the slide now</font>

481
00:19:08,590 --> 00:19:13,879
<font color="#CCCCCC">the final way to bypass</font><font color="#E5E5E5"> firewalls invert</font>

482
00:19:12,440 --> 00:19:15,980
involves getting a malicious code

483
00:19:13,880 --> 00:19:18,020
<font color="#E5E5E5">running in the kernel</font><font color="#CCCCCC"> in short if an</font>

484
00:19:15,980 --> 00:19:20,060
attacker<font color="#E5E5E5"> can get code running in ring</font>

485
00:19:18,020 --> 00:19:22,070
zero<font color="#CCCCCC"> it's really game over from the</font>

486
00:19:20,060 --> 00:19:24,169
firewalls point of view<font color="#E5E5E5"> first most</font>

487
00:19:22,070 --> 00:19:26,330
<font color="#CCCCCC">firewalls actually generically allow any</font>

488
00:19:24,170 --> 00:19:28,580
traffic<font color="#E5E5E5"> that originates from the kernel</font>

489
00:19:26,330 --> 00:19:30,560
anyways so you can just generate an

490
00:19:28,580 --> 00:19:32,389
outgoing<font color="#CCCCCC"> network</font><font color="#E5E5E5"> request the firewall</font>

491
00:19:30,560 --> 00:19:34,340
<font color="#CCCCCC">will see it but again</font><font color="#E5E5E5"> since it's coming</font>

492
00:19:32,390 --> 00:19:37,700
<font color="#E5E5E5">from the context of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> kernel it will</font>

493
00:19:34,340 --> 00:19:40,399
be allowed you can<font color="#E5E5E5"> also do something</font>

494
00:19:37,700 --> 00:19:42,440
<font color="#CCCCCC">like generically unhook or uninstall the</font>

495
00:19:40,400 --> 00:19:44,600
socket filter<font color="#E5E5E5"> firewall driver or</font>

496
00:19:42,440 --> 00:19:46,850
extension<font color="#E5E5E5"> this will transparently</font>

497
00:19:44,600 --> 00:19:49,010
disable the firewall<font color="#E5E5E5"> and then the</font>

498
00:19:46,850 --> 00:19:51,050
attackers code or any component in user

499
00:19:49,010 --> 00:19:52,430
<font color="#E5E5E5">mode can generate outgoing connections</font>

500
00:19:51,050 --> 00:19:54,379
<font color="#E5E5E5">and since the firewall has been</font>

501
00:19:52,430 --> 00:19:57,650
effectively neutered<font color="#E5E5E5"> this connection</font>

502
00:19:54,380 --> 00:19:59,120
will be<font color="#E5E5E5"> allowed now a valid question</font><font color="#CCCCCC"> is</font>

503
00:19:57,650 --> 00:20:02,360
how do we<font color="#E5E5E5"> get code running in the kernel</font>

504
00:19:59,120 --> 00:20:04,580
recent<font color="#E5E5E5"> versions of Mac OS require kernel</font>

505
00:20:02,360 --> 00:20:06,620
tensions to be signed<font color="#E5E5E5"> so one way</font><font color="#CCCCCC"> it's</font>

506
00:20:04,580 --> 00:20:08,960
<font color="#CCCCCC">just to bring a third-party</font><font color="#E5E5E5"> driver that</font>

507
00:20:06,620 --> 00:20:11,060
has a vulnerability<font color="#E5E5E5"> along with you to</font>

508
00:20:08,960 --> 00:20:12,680
the target<font color="#CCCCCC"> you then load that driver</font><font color="#E5E5E5"> it</font>

509
00:20:11,060 --> 00:20:14,600
will be allowed because<font color="#E5E5E5"> it's validly</font>

510
00:20:12,680 --> 00:20:16,310
signed and then you can exploit the

511
00:20:14,600 --> 00:20:17,810
vulnerability<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example we could</font>

512
00:20:16,310 --> 00:20:20,419
bring the<font color="#E5E5E5"> Little Snitch</font><font color="#CCCCCC"> Colonel</font>

513
00:20:17,810 --> 00:20:22,820
extension<font color="#E5E5E5"> load it and then exploit it</font>

514
00:20:20,420 --> 00:20:24,650
<font color="#E5E5E5">eventually</font><font color="#CCCCCC"> Apple does blacklist some of</font>

515
00:20:22,820 --> 00:20:26,149
these<font color="#E5E5E5"> extensions but not for a very long</font>

516
00:20:24,650 --> 00:20:27,980
time<font color="#E5E5E5"> and this is obviously only if they</font>

517
00:20:26,150 --> 00:20:29,810
know<font color="#CCCCCC"> about the vulnerability</font><font color="#E5E5E5"> this is</font>

518
00:20:27,980 --> 00:20:31,820
interesting<font color="#E5E5E5"> because the slingshot apt</font>

519
00:20:29,810 --> 00:20:34,669
group did exactly<font color="#E5E5E5"> this on Windows</font><font color="#CCCCCC"> 2</font>

520
00:20:31,820 --> 00:20:38,030
<font color="#CCCCCC">VIPRE</font><font color="#E5E5E5"> bypass Microsoft's kernel code</font>

521
00:20:34,670 --> 00:20:40,670
signing enforcement now I talked<font color="#CCCCCC"> about</font>

522
00:20:38,030 --> 00:20:43,700
this attack<font color="#E5E5E5"> at Def Con 2016 and since</font>

523
00:20:40,670 --> 00:20:45,800
then<font color="#E5E5E5"> Apple has sought to mitigate this</font>

524
00:20:43,700 --> 00:20:48,650
by<font color="#E5E5E5"> introducing</font><font color="#CCCCCC"> a security mechanism</font>

525
00:20:45,800 --> 00:20:51,200
<font color="#E5E5E5">called user approved kernel extension</font>

526
00:20:48,650 --> 00:20:53,120
loading basically<font color="#CCCCCC"> apple says ok</font><font color="#E5E5E5"> even if</font>

527
00:20:51,200 --> 00:20:55,340
you have a<font color="#CCCCCC"> third-party driver that's</font>

528
00:20:53,120 --> 00:20:57,409
validly signed<font color="#E5E5E5"> if you try to load it</font>

529
00:20:55,340 --> 00:20:59,350
even if it's a<font color="#E5E5E5"> legitimate driver we are</font>

530
00:20:57,410 --> 00:21:01,700
going to<font color="#E5E5E5"> block</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> prompt the user</font>

531
00:20:59,350 --> 00:21:03,949
turns out it was trivial<font color="#E5E5E5"> to bypass this</font>

532
00:21:01,700 --> 00:21:06,530
via a<font color="#E5E5E5"> synthetic click and although Apple</font>

533
00:21:03,950 --> 00:21:07,790
patches<font color="#E5E5E5"> patch that unfortunately as is</font>

534
00:21:06,530 --> 00:21:09,740
the case<font color="#CCCCCC"> with many</font><font color="#E5E5E5"> Apple security</font>

535
00:21:07,790 --> 00:21:11,629
mechanisms<font color="#E5E5E5"> it's still completely</font><font color="#CCCCCC"> trivial</font>

536
00:21:09,740 --> 00:21:12,860
to bypass so since the introduction of

537
00:21:11,630 --> 00:21:14,540
<font color="#E5E5E5">the security feature it's been</font>

538
00:21:12,860 --> 00:21:16,159
completely broken<font color="#E5E5E5"> so I'm gonna give a</font>

539
00:21:14,540 --> 00:21:19,310
talk at<font color="#E5E5E5"> DEFCON on this if you</font><font color="#CCCCCC"> are more</font>

540
00:21:16,160 --> 00:21:22,220
interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that all right so let's</font>

541
00:21:19,310 --> 00:21:24,860
wrap this up so<font color="#E5E5E5"> today we talked about</font>

542
00:21:22,220 --> 00:21:26,990
<font color="#E5E5E5">making firewalls</font><font color="#CCCCCC"> basically using a</font>

543
00:21:24,860 --> 00:21:29,060
socket filter it's really not too

544
00:21:26,990 --> 00:21:31,640
complicated<font color="#CCCCCC"> if you're interested more</font>

545
00:21:29,060 --> 00:21:33,230
<font color="#E5E5E5">some of the details or</font><font color="#CCCCCC"> the source code</font>

546
00:21:31,640 --> 00:21:34,790
check out lulu again it's fully<font color="#CCCCCC"> open</font>

547
00:21:33,230 --> 00:21:36,560
source lots of<font color="#E5E5E5"> comments you can build it</font>

548
00:21:34,790 --> 00:21:38,090
compile<font color="#E5E5E5"> it poke around and hopefully</font><font color="#CCCCCC"> it</font>

549
00:21:36,560 --> 00:21:40,060
<font color="#E5E5E5">gives you a good idea exactly how you</font>

550
00:21:38,090 --> 00:21:42,620
would<font color="#E5E5E5"> go about</font><font color="#CCCCCC"> building such a firewall</font>

551
00:21:40,060 --> 00:21:44,149
<font color="#E5E5E5">we then talk</font><font color="#CCCCCC"> about breaking firewalls</font>

552
00:21:42,620 --> 00:21:45,800
<font color="#CCCCCC">turns out yes they have security</font>

553
00:21:44,150 --> 00:21:47,900
vulnerabilities and unfortunately they

554
00:21:45,800 --> 00:21:50,780
are<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to generically bypass</font>

555
00:21:47,900 --> 00:21:52,450
now this doesn't mean<font color="#E5E5E5"> all is lost</font><font color="#CCCCCC"> but it</font>

556
00:21:50,780 --> 00:21:53,570
certainly<font color="#E5E5E5"> makes a good case for</font>

557
00:21:52,450 --> 00:21:55,310
<font color="#CCCCCC">defense-in-depth</font>

558
00:21:53,570 --> 00:21:57,290
<font color="#E5E5E5">in my opinion you should have some other</font>

559
00:21:55,310 --> 00:22:00,169
<font color="#E5E5E5">security tools perhaps that are</font>

560
00:21:57,290 --> 00:22:02,450
detecting<font color="#E5E5E5"> dial-up injections or perhaps</font>

561
00:22:00,170 --> 00:22:04,760
detecting if a browser<font color="#E5E5E5"> is executed from</font>

562
00:22:02,450 --> 00:22:06,650
the command line<font color="#CCCCCC"> more behavioral</font><font color="#E5E5E5"> based</font>

563
00:22:04,760 --> 00:22:09,500
activities that<font color="#E5E5E5"> might indicate a</font>

564
00:22:06,650 --> 00:22:11,510
precursor<font color="#E5E5E5"> to an attack now a firewall I</font>

565
00:22:09,500 --> 00:22:13,760
don't<font color="#E5E5E5"> think should be monitoring all</font>

566
00:22:11,510 --> 00:22:15,710
these other behavioral detections<font color="#E5E5E5"> but</font>

567
00:22:13,760 --> 00:22:17,710
perhaps<font color="#E5E5E5"> some other third party utility</font>

568
00:22:15,710 --> 00:22:20,150
can

569
00:22:17,710 --> 00:22:22,700
also finally<font color="#E5E5E5"> I'm stoked to announce that</font>

570
00:22:20,150 --> 00:22:24,770
I'm going to<font color="#E5E5E5"> be organizing max security</font>

571
00:22:22,700 --> 00:22:27,890
<font color="#E5E5E5">conference called objective by the sea</font>

572
00:22:24,770 --> 00:22:30,170
it's gonna be this<font color="#E5E5E5"> November in Maui</font><font color="#CCCCCC"> we</font>

573
00:22:27,890 --> 00:22:31,760
got a great lineup<font color="#CCCCCC"> of speakers and</font><font color="#E5E5E5"> if</font>

574
00:22:30,170 --> 00:22:33,320
you're a<font color="#E5E5E5"> supporter of objective-c which</font>

575
00:22:31,760 --> 00:22:36,860
you can be for<font color="#CCCCCC"> $1 the conference is</font>

576
00:22:33,320 --> 00:22:38,419
actually<font color="#E5E5E5"> completely free</font><font color="#CCCCCC"> I can</font><font color="#E5E5E5"> talk a</font>

577
00:22:36,860 --> 00:22:40,459
lot about<font color="#E5E5E5"> how awesome speakers are</font>

578
00:22:38,420 --> 00:22:43,340
they're<font color="#CCCCCC"> very awesome but you</font><font color="#E5E5E5"> know come</font>

579
00:22:40,460 --> 00:22:45,110
on<font color="#E5E5E5"> it's in</font><font color="#CCCCCC"> Hawaii</font><font color="#E5E5E5"> in November</font><font color="#CCCCCC"> so if</font>

580
00:22:43,340 --> 00:22:47,510
you're interested<font color="#CCCCCC"> check out objective by</font>

581
00:22:45,110 --> 00:22:48,919
the sea calm<font color="#E5E5E5"> this is the resort it's</font>

582
00:22:47,510 --> 00:22:50,870
going to be held<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> me a</font>

583
00:22:48,920 --> 00:22:54,410
lot of<font color="#E5E5E5"> great</font><font color="#CCCCCC"> talks about iOS</font><font color="#E5E5E5"> and Mac</font>

584
00:22:50,870 --> 00:22:56,030
<font color="#E5E5E5">security</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> that's a wrap</font>

585
00:22:54,410 --> 00:22:57,440
really want to<font color="#E5E5E5"> say thank you for</font>

586
00:22:56,030 --> 00:22:58,899
attending also want to thank the

587
00:22:57,440 --> 00:23:02,420
<font color="#E5E5E5">partners and Friends of objective-c</font>

588
00:22:58,900 --> 00:23:04,490
<font color="#E5E5E5">digital security and</font><font color="#CCCCCC"> Malwarebytes</font><font color="#E5E5E5"> and we</font>

589
00:23:02,420 --> 00:23:06,650
have about two minutes for questions and

590
00:23:04,490 --> 00:23:08,120
<font color="#CCCCCC">also be around</font><font color="#E5E5E5"> after the talk if there's</font>

591
00:23:06,650 --> 00:23:10,420
some more questions you'd<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to</font>

592
00:23:08,120 --> 00:23:10,419
discuss

593
00:23:23,580 --> 00:23:28,000
yeah great<font color="#CCCCCC"> question so is in the Mojave</font>

594
00:23:26,380 --> 00:23:30,220
<font color="#E5E5E5">bet</font><font color="#CCCCCC"> betas that are coming out how</font><font color="#E5E5E5"> has</font>

595
00:23:28,000 --> 00:23:31,810
Apple<font color="#CCCCCC"> basically implemented any security</font>

596
00:23:30,220 --> 00:23:33,310
features<font color="#CCCCCC"> that may impact this and that's</font>

597
00:23:31,810 --> 00:23:34,720
a great<font color="#E5E5E5"> question because they've</font>

598
00:23:33,310 --> 00:23:36,909
<font color="#E5E5E5">actually limited what certain</font>

599
00:23:34,720 --> 00:23:38,890
applications can do so for<font color="#CCCCCC"> example you</font>

600
00:23:36,910 --> 00:23:41,650
can<font color="#CCCCCC"> now no longer</font><font color="#E5E5E5"> use Apple</font><font color="#CCCCCC"> Script to</font>

601
00:23:38,890 --> 00:23:43,720
talk to another application<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can't</font>

602
00:23:41,650 --> 00:23:45,970
for example<font color="#CCCCCC"> drive Safari via Apple</font>

603
00:23:43,720 --> 00:23:47,890
script<font color="#E5E5E5"> unfortunately you can still do</font>

604
00:23:45,970 --> 00:23:50,230
things<font color="#E5E5E5"> like various die live attacks or</font>

605
00:23:47,890 --> 00:23:52,150
execute Safari<font color="#E5E5E5"> from the command line so</font>

606
00:23:50,230 --> 00:23:54,010
there's still<font color="#CCCCCC"> multiple waves</font><font color="#E5E5E5"> but they</font>

607
00:23:52,150 --> 00:23:56,680
are kind<font color="#E5E5E5"> of blocking some of these</font>

608
00:23:54,010 --> 00:23:59,020
attack vectors<font color="#E5E5E5"> some of the precursors</font><font color="#CCCCCC"> to</font>

609
00:23:56,680 --> 00:24:00,340
the attacks so<font color="#E5E5E5"> you know I</font><font color="#CCCCCC"> think I would</font>

610
00:23:59,020 --> 00:24:02,050
definitely install it when it<font color="#E5E5E5"> comes out</font>

611
00:24:00,340 --> 00:24:04,649
<font color="#CCCCCC">because it</font><font color="#E5E5E5"> it does increase</font><font color="#CCCCCC"> the bar in</font>

612
00:24:02,050 --> 00:24:12,159
terms of<font color="#E5E5E5"> security so that's a good</font><font color="#CCCCCC"> thing</font>

613
00:24:04,650 --> 00:24:14,770
any other questions I'm guessing this

614
00:24:12,160 --> 00:24:16,990
applies<font color="#CCCCCC"> to the built-in firewall as well</font>

615
00:24:14,770 --> 00:24:19,330
<font color="#CCCCCC">Oh excellent</font><font color="#E5E5E5"> question so the built-in</font>

616
00:24:16,990 --> 00:24:22,480
firewall is is great<font color="#E5E5E5"> but the problem is</font>

617
00:24:19,330 --> 00:24:24,280
it only<font color="#E5E5E5"> monitors incoming connections so</font>

618
00:24:22,480 --> 00:24:25,810
any activity for example<font color="#CCCCCC"> any malware</font>

619
00:24:24,280 --> 00:24:27,520
<font color="#E5E5E5">that gets on your system that tries to</font>

620
00:24:25,810 --> 00:24:30,220
<font color="#E5E5E5">connect out to a command control server</font>

621
00:24:27,520 --> 00:24:32,950
or exfiltrate data the built-in firewall

622
00:24:30,220 --> 00:24:35,170
is not even looking at this<font color="#CCCCCC"> traffic and</font>

623
00:24:32,950 --> 00:24:37,270
the majority<font color="#CCCCCC"> of attacks</font><font color="#E5E5E5"> affecting both</font>

624
00:24:35,170 --> 00:24:39,490
<font color="#CCCCCC">the enterprise</font><font color="#E5E5E5"> and end-user and Mac</font>

625
00:24:37,270 --> 00:24:41,260
users<font color="#CCCCCC"> that is going to be kind</font><font color="#E5E5E5"> of that</font>

626
00:24:39,490 --> 00:24:42,910
behavior<font color="#CCCCCC"> that the malware</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to</font>

627
00:24:41,260 --> 00:24:44,470
come in maybe via an<font color="#CCCCCC"> email the users</font>

628
00:24:42,910 --> 00:24:46,210
<font color="#E5E5E5">going to be tricked into downloading and</font>

629
00:24:44,470 --> 00:24:47,470
running something<font color="#CCCCCC"> so the first network</font>

630
00:24:46,210 --> 00:24:49,720
<font color="#CCCCCC">traffic that's actually going to</font><font color="#E5E5E5"> be</font>

631
00:24:47,470 --> 00:24:50,890
generated is this outgoing<font color="#CCCCCC"> traffic so</font>

632
00:24:49,720 --> 00:24:52,300
it's good<font color="#CCCCCC"> to turn on the built-in</font>

633
00:24:50,890 --> 00:24:54,100
firewall but<font color="#E5E5E5"> it really doesn't buy you</font>

634
00:24:52,300 --> 00:24:55,510
that<font color="#E5E5E5"> much in</font><font color="#CCCCCC"> my opinion and</font><font color="#E5E5E5"> I think</font>

635
00:24:54,100 --> 00:24:57,459
Apple did this because they don't<font color="#E5E5E5"> want</font>

636
00:24:55,510 --> 00:24:59,740
to<font color="#E5E5E5"> annoy the average Mac user with</font>

637
00:24:57,460 --> 00:25:00,970
<font color="#E5E5E5">pop-ups when for example</font><font color="#CCCCCC"> the browser</font>

638
00:24:59,740 --> 00:25:02,470
they installed tries to connect to the

639
00:25:00,970 --> 00:25:04,150
<font color="#E5E5E5">internet because you know that would be</font>

640
00:25:02,470 --> 00:25:06,040
<font color="#E5E5E5">confusing to at least a handful</font><font color="#CCCCCC"> of Mac</font>

641
00:25:04,150 --> 00:25:11,380
<font color="#CCCCCC">users</font><font color="#E5E5E5"> and Apple usually airs on the side</font>

642
00:25:06,040 --> 00:25:12,850
<font color="#CCCCCC">of usability versus security</font><font color="#E5E5E5"> awesome all</font>

643
00:25:11,380 --> 00:25:14,170
right we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> out of time I will be here</font>

644
00:25:12,850 --> 00:25:16,330
<font color="#CCCCCC">for a</font><font color="#E5E5E5"> few more</font><font color="#CCCCCC"> questions again</font>

645
00:25:14,170 --> 00:25:18,280
Mahalo so much for attending<font color="#E5E5E5"> my talk and</font>

646
00:25:16,330 --> 00:25:20,639
I hope to see you all in Hawaii this

647
00:25:18,280 --> 00:25:20,639
November

