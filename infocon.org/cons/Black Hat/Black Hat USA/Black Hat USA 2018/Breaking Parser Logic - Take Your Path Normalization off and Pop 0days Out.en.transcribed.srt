1
00:00:00,030 --> 00:00:05,670
hi<font color="#E5E5E5"> thanks for coming</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> next 15</font>

2
00:00:03,389 --> 00:00:08,340
<font color="#CCCCCC">minutes I will present rocket breaking</font>

3
00:00:05,670 --> 00:00:12,389
pathologic take your pet normalization

4
00:00:08,340 --> 00:00:14,610
of and<font color="#E5E5E5"> pop the others out also test</font>

5
00:00:12,389 --> 00:00:16,948
<font color="#CCCCCC">traversal is a common problem</font><font color="#E5E5E5"> in web</font>

6
00:00:14,610 --> 00:00:20,698
applications<font color="#CCCCCC"> but if they're hard to</font>

7
00:00:16,949 --> 00:00:23,760
<font color="#E5E5E5">apply the good security mechanism there</font>

8
00:00:20,699 --> 00:00:26,760
are<font color="#E5E5E5"> lots of pitfalls and edge cases that</font>

9
00:00:23,760 --> 00:00:29,160
program<font color="#E5E5E5"> and may</font><font color="#CCCCCC"> even no but but</font><font color="#E5E5E5"> the only</font>

10
00:00:26,760 --> 00:00:32,489
thing they care about is still that<font color="#CCCCCC"> dust</font>

11
00:00:29,160 --> 00:00:35,460
<font color="#E5E5E5">leash</font><font color="#CCCCCC"> in this talk we try to pay more</font>

12
00:00:32,488 --> 00:00:38,699
attention and analyzing pathologic and

13
00:00:35,460 --> 00:00:41,520
<font color="#E5E5E5">pest normalizations during this process</font>

14
00:00:38,700 --> 00:00:44,760
with we noticed an<font color="#CCCCCC"> interesting feature</font>

15
00:00:41,520 --> 00:00:48,239
<font color="#CCCCCC">that could be perfectly applied Almaty</font>

16
00:00:44,760 --> 00:00:50,789
<font color="#CCCCCC">layer architecture</font><font color="#E5E5E5"> we will tilt with we</font>

17
00:00:48,239 --> 00:00:56,669
will<font color="#CCCCCC"> detail this attack surface and give</font>

18
00:00:50,789 --> 00:00:59,489
several<font color="#E5E5E5"> case studies</font><font color="#CCCCCC"> ok let's go hi</font><font color="#E5E5E5"> an</font>

19
00:00:56,670 --> 00:01:02,039
orange a security researcher from<font color="#CCCCCC"> def</font>

20
00:00:59,489 --> 00:01:04,798
<font color="#E5E5E5">coral we provide the most professional</font>

21
00:01:02,039 --> 00:01:05,489
rating service and penetration testing

22
00:01:04,799 --> 00:01:08,909
in Asia

23
00:01:05,489 --> 00:01:12,510
my job is researching<font color="#CCCCCC"> and fighting news</font>

24
00:01:08,909 --> 00:01:15,270
<font color="#CCCCCC">the OTAs and</font><font color="#E5E5E5"> attack service and also the</font>

25
00:01:12,510 --> 00:01:18,869
member of<font color="#E5E5E5"> head</font><font color="#CCCCCC"> Kong will hold a largest</font>

26
00:01:15,270 --> 00:01:21,630
<font color="#CCCCCC">Haeckel conference in</font><font color="#E5E5E5"> Taiwan apart from</font>

27
00:01:18,869 --> 00:01:26,580
<font color="#E5E5E5">that and also a speaker</font><font color="#CCCCCC"> bounty hunter</font>

28
00:01:21,630 --> 00:01:29,908
and<font color="#CCCCCC"> CTF prayer this is our agenda today</font>

29
00:01:26,580 --> 00:01:32,729
we will first highlight<font color="#CCCCCC"> price tag on PES</font>

30
00:01:29,909 --> 00:01:36,840
normalization<font color="#CCCCCC"> and talk about high focus</font>

31
00:01:32,729 --> 00:01:39,329
<font color="#CCCCCC">on this by</font><font color="#E5E5E5"> knowing the plant side we try</font>

32
00:01:36,840 --> 00:01:42,150
to<font color="#E5E5E5"> review existing web frameworks and</font>

33
00:01:39,329 --> 00:01:44,579
<font color="#E5E5E5">five bucks from them we will show the</font>

34
00:01:42,150 --> 00:01:45,710
others<font color="#E5E5E5"> on both Ruby and rails and spring</font>

35
00:01:44,579 --> 00:01:49,649
<font color="#E5E5E5">framework</font>

36
00:01:45,710 --> 00:01:52,470
lastly the new attack surface<font color="#E5E5E5"> of course</font>

37
00:01:49,649 --> 00:01:54,570
in order<font color="#CCCCCC"> to convince this is awesome</font>

38
00:01:52,470 --> 00:01:57,259
we will eclipse the<font color="#CCCCCC"> road but bundi case</font>

39
00:01:54,570 --> 00:01:57,258
cases

40
00:01:57,290 --> 00:02:04,890
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> first last last learn new world</font>

41
00:02:00,899 --> 00:02:07,229
<font color="#E5E5E5">normalize to max tender determine the</font>

42
00:02:04,890 --> 00:02:10,440
value by comparison to<font color="#CCCCCC"> an</font><font color="#E5E5E5"> item of</font>

43
00:02:07,229 --> 00:02:13,540
<font color="#CCCCCC">non-standard value</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> definition is</font>

44
00:02:10,440 --> 00:02:18,549
easy<font color="#E5E5E5"> but if every system has</font>

45
00:02:13,540 --> 00:02:22,180
<font color="#E5E5E5">on standards it must be province and</font><font color="#CCCCCC"> the</font>

46
00:02:18,549 --> 00:02:25,049
next<font color="#E5E5E5"> high normalization</font><font color="#CCCCCC"> in security it</font>

47
00:02:22,180 --> 00:02:29,200
means that you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to protect something</font>

48
00:02:25,049 --> 00:02:31,720
in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> fix a bad result impacting</font>

49
00:02:29,200 --> 00:02:34,390
business logic<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> government to apply</font>

50
00:02:31,720 --> 00:02:38,439
to work<font color="#E5E5E5"> Iran or filter instead of</font>

51
00:02:34,390 --> 00:02:40,510
<font color="#E5E5E5">patching the</font><font color="#CCCCCC"> birth directory to apply</font>

52
00:02:38,439 --> 00:02:43,299
the<font color="#E5E5E5"> filter you need to pass the</font><font color="#CCCCCC"> data</font>

53
00:02:40,510 --> 00:02:47,170
first<font color="#E5E5E5"> but it's how to implement a real</font>

54
00:02:43,299 --> 00:02:50,379
<font color="#E5E5E5">decide parcel</font><font color="#CCCCCC"> ap one fellow fellows</font><font color="#E5E5E5"> I've</font>

55
00:02:47,170 --> 00:02:52,958
see as their standard<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> see defined a</font>

56
00:02:50,379 --> 00:02:56,290
specification<font color="#CCCCCC"> but didn't tell you how to</font>

57
00:02:52,959 --> 00:02:58,750
implement<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> moral complicated that</font>

58
00:02:56,290 --> 00:03:03,340
they'd have format is<font color="#E5E5E5"> the harder is to</font>

59
00:02:58,750 --> 00:03:05,430
pass so husband<font color="#CCCCCC"> with so hast promised</font>

60
00:03:03,340 --> 00:03:08,919
that<font color="#E5E5E5"> on</font><font color="#CCCCCC"> to normalization</font>

61
00:03:05,430 --> 00:03:11,349
yes<font color="#E5E5E5"> inconsistency this is a tight</font><font color="#CCCCCC"> coat</font>

62
00:03:08,919 --> 00:03:15,639
dangerous<font color="#CCCCCC"> patent and easy to fight</font>

63
00:03:11,349 --> 00:03:19,149
problems on it the<font color="#E5E5E5"> behavior in check</font>

64
00:03:15,639 --> 00:03:19,810
must be<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> does the behavior</font><font color="#CCCCCC"> in</font>

65
00:03:19,150 --> 00:03:22,269
use

66
00:03:19,810 --> 00:03:25,780
otherwise the check function<font color="#E5E5E5"> will be</font>

67
00:03:22,269 --> 00:03:28,500
bypassed<font color="#E5E5E5"> it's just like my SS I've</font>

68
00:03:25,780 --> 00:03:31,720
<font color="#CCCCCC">talked in black hair last year</font><font color="#E5E5E5"> finding</font>

69
00:03:28,500 --> 00:03:34,930
inconsistency between URL passes and URL

70
00:03:31,720 --> 00:03:39,459
<font color="#CCCCCC">fetchers that lead leads to whole</font><font color="#E5E5E5"> SSI</font>

71
00:03:34,930 --> 00:03:44,220
bypass so for the<font color="#E5E5E5"> past two years</font><font color="#CCCCCC"> I pay</font>

72
00:03:39,459 --> 00:03:44,220
more<font color="#CCCCCC"> attention and the bug</font><font color="#E5E5E5"> inconsistency</font>

73
00:03:44,639 --> 00:03:50,500
for example this<font color="#E5E5E5"> is an interesting</font>

74
00:03:47,409 --> 00:03:52,780
implementation<font color="#CCCCCC"> in Java</font><font color="#E5E5E5"> they are</font>

75
00:03:50,500 --> 00:03:56,650
<font color="#E5E5E5">different file handles for each</font>

76
00:03:52,780 --> 00:04:01,090
operating system<font color="#E5E5E5"> in Windows geometry the</font>

77
00:03:56,650 --> 00:04:05,470
file as UNC<font color="#CCCCCC"> unc path but lineage treated</font>

78
00:04:01,090 --> 00:04:06,099
as URL the most difference between each

79
00:04:05,470 --> 00:04:09,699
other

80
00:04:06,099 --> 00:04:12,790
is the URL suppose Christian but<font color="#CCCCCC"> us the</font>

81
00:04:09,699 --> 00:04:18,130
person once we note that<font color="#E5E5E5"> there are</font>

82
00:04:12,790 --> 00:04:21,130
several dangerous patents for example

83
00:04:18,130 --> 00:04:23,800
the<font color="#CCCCCC"> Mesa</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> past only</font><font color="#E5E5E5"> return</font><font color="#CCCCCC"> the part</font>

84
00:04:21,130 --> 00:04:27,130
before the<font color="#E5E5E5"> question mark but the file</font>

85
00:04:23,800 --> 00:04:31,420
<font color="#CCCCCC">system still recognize Oh earth is</font><font color="#E5E5E5"> past</font>

86
00:04:27,130 --> 00:04:34,659
so here is<font color="#E5E5E5"> that inconsistency</font><font color="#CCCCCC"> on the</font>

87
00:04:31,420 --> 00:04:37,810
other hand the<font color="#E5E5E5"> main circuit file or</font><font color="#CCCCCC"> two</font>

88
00:04:34,660 --> 00:04:40,810
external<font color="#E5E5E5"> from return</font><font color="#CCCCCC"> all the URL</font><font color="#E5E5E5"> path</font>

89
00:04:37,810 --> 00:04:43,540
but it but if the<font color="#E5E5E5"> chat we like</font><font color="#CCCCCC"> under</font>

90
00:04:40,810 --> 00:04:46,450
normalization without from<font color="#E5E5E5"> them we</font><font color="#CCCCCC"> can</font>

91
00:04:43,540 --> 00:04:51,820
<font color="#CCCCCC">forge</font><font color="#E5E5E5"> a valid path to bypass the</font><font color="#CCCCCC"> track</font>

92
00:04:46,450 --> 00:04:53,440
and read actually file on the leaners so

93
00:04:51,820 --> 00:04:57,010
back<font color="#CCCCCC"> to our topic</font>

94
00:04:53,440 --> 00:05:01,060
why<font color="#E5E5E5"> I target path normalization because</font>

95
00:04:57,010 --> 00:05:03,219
most websites<font color="#E5E5E5"> handle files also</font><font color="#CCCCCC"> page</font>

96
00:05:01,060 --> 00:05:05,890
traversal is that it's<font color="#CCCCCC"> an old problem in</font>

97
00:05:03,220 --> 00:05:08,800
many web applications<font color="#CCCCCC"> but that is also</font>

98
00:05:05,890 --> 00:05:12,729
the press with<font color="#E5E5E5"> lot of protections and</font>

99
00:05:08,800 --> 00:05:15,640
bypasses as I mentioned<font color="#E5E5E5"> before there are</font>

100
00:05:12,730 --> 00:05:17,950
lots of<font color="#E5E5E5"> dangerous</font><font color="#CCCCCC"> patterns so that if</font>

101
00:05:15,640 --> 00:05:20,830
you can find<font color="#E5E5E5"> a difference between the</font>

102
00:05:17,950 --> 00:05:25,719
chat and the use you can bypass the

103
00:05:20,830 --> 00:05:29,190
protection<font color="#E5E5E5"> another reason is in large</font>

104
00:05:25,720 --> 00:05:32,980
<font color="#E5E5E5">projects</font><font color="#CCCCCC"> the code change too fast and</font>

105
00:05:29,190 --> 00:05:36,090
<font color="#CCCCCC">lack an overall security</font><font color="#E5E5E5"> review for the</font>

106
00:05:32,980 --> 00:05:40,030
new commit is there any side effect<font color="#E5E5E5"> or</font>

107
00:05:36,090 --> 00:05:45,000
<font color="#E5E5E5">bypassed existing security mechanism who</font>

108
00:05:40,030 --> 00:05:48,789
knows let's talk<font color="#E5E5E5"> let's talk about majora</font>

109
00:05:45,000 --> 00:05:51,850
<font color="#CCCCCC">JavaServer faces JavaServer faces is a</font>

110
00:05:48,790 --> 00:05:55,000
standard<font color="#E5E5E5"> under</font><font color="#CCCCCC"> java ee but it's just</font>

111
00:05:51,850 --> 00:05:57,730
<font color="#E5E5E5">just a standard need someone someone</font><font color="#CCCCCC"> to</font>

112
00:05:55,000 --> 00:06:01,540
implement so the top<font color="#CCCCCC"> two implementations</font>

113
00:05:57,730 --> 00:06:05,500
<font color="#E5E5E5">in the world are my</font><font color="#CCCCCC"> faces by a</font><font color="#E5E5E5"> patch in</font>

114
00:06:01,540 --> 00:06:07,900
the majora<font color="#E5E5E5"> bio local while reading</font>

115
00:06:05,500 --> 00:06:12,760
<font color="#CCCCCC">advanced stories and</font><font color="#E5E5E5"> notice that we</font><font color="#CCCCCC"> put</font>

116
00:06:07,900 --> 00:06:16,090
<font color="#E5E5E5">that reviewed majora and find CVE 2013</font><font color="#CCCCCC"> 3</font>

117
00:06:12,760 --> 00:06:20,349
<font color="#E5E5E5">a</font><font color="#CCCCCC"> true stable the report also inspired</font>

118
00:06:16,090 --> 00:06:22,989
me to take more into the<font color="#CCCCCC"> source with a</font>

119
00:06:20,350 --> 00:06:25,840
couple of days<font color="#CCCCCC"> i find a new</font><font color="#E5E5E5"> battle</font>

120
00:06:22,990 --> 00:06:28,630
ability<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> very obvious</font><font color="#CCCCCC"> pest</font>

121
00:06:25,840 --> 00:06:33,669
<font color="#CCCCCC">reversal just little just read the file</font>

122
00:06:28,630 --> 00:06:36,340
from<font color="#CCCCCC"> Cora stream why I find this</font><font color="#E5E5E5"> I was</font>

123
00:06:33,670 --> 00:06:40,440
very<font color="#E5E5E5"> curious about why the</font><font color="#CCCCCC"> advisory</font>

124
00:06:36,340 --> 00:06:44,070
didn't notice that<font color="#E5E5E5"> with a little</font><font color="#CCCCCC"> bit in</font>

125
00:06:40,440 --> 00:06:47,760
<font color="#E5E5E5">station</font><font color="#CCCCCC"> i find</font><font color="#E5E5E5"> the reason the part was</font>

126
00:06:44,070 --> 00:06:52,800
<font color="#CCCCCC">committed in 2015 but the code</font><font color="#E5E5E5"> review</font>

127
00:06:47,760 --> 00:06:54,060
was done<font color="#E5E5E5"> in 2013</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> points are a</font>

128
00:06:52,800 --> 00:06:57,060
serious<font color="#CCCCCC"> problem</font>

129
00:06:54,060 --> 00:06:59,340
majora is<font color="#CCCCCC"> a very fundamental library</font><font color="#E5E5E5"> but</font>

130
00:06:57,060 --> 00:07:01,970
since<font color="#E5E5E5"> there's no one to work for most</font>

131
00:06:59,340 --> 00:07:05,729
security reviews since 2015

132
00:07:01,970 --> 00:07:07,470
so that's the<font color="#E5E5E5"> reason to push me take in</font>

133
00:07:05,730 --> 00:07:10,250
through the personal purpose

134
00:07:07,470 --> 00:07:16,950
normalization<font color="#CCCCCC"> and web frameworks</font><font color="#E5E5E5"> and</font>

135
00:07:10,250 --> 00:07:22,110
applications so last<font color="#E5E5E5"> our topic first how</font>

136
00:07:16,950 --> 00:07:24,900
pastors should<font color="#CCCCCC"> be fair</font><font color="#E5E5E5"> here is a very</font>

137
00:07:22,110 --> 00:07:30,020
obvious programming error can use by the

138
00:07:24,900 --> 00:07:33,030
back this call was copied<font color="#CCCCCC"> front wheels</font>

139
00:07:30,020 --> 00:07:36,180
first<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the powerful through the best</font>

140
00:07:33,030 --> 00:07:39,479
web application framework<font color="#CCCCCC"> if you want to</font>

141
00:07:36,180 --> 00:07:43,410
use groovy<font color="#E5E5E5"> as European language you must</font>

142
00:07:39,480 --> 00:07:46,650
have heard about girls and this is the

143
00:07:43,410 --> 00:07:48,810
part<font color="#E5E5E5"> of static file handling the abdomen</font>

144
00:07:46,650 --> 00:07:52,229
<font color="#CCCCCC">roulette drift past is a taker</font>

145
00:07:48,810 --> 00:07:55,110
controllable in order<font color="#E5E5E5"> to be comfortable</font>

146
00:07:52,230 --> 00:07:58,050
<font color="#CCCCCC">with Windows environment</font><font color="#E5E5E5"> the code</font>

147
00:07:55,110 --> 00:08:03,080
<font color="#E5E5E5">repressed current files operator who is</font>

148
00:07:58,050 --> 00:08:08,250
forward slash<font color="#E5E5E5"> so happy you fight back</font>

149
00:08:03,080 --> 00:08:10,109
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> the answer</font><font color="#CCCCCC"> is the Mesa</font><font color="#E5E5E5"> repress girls</font>

150
00:08:08,250 --> 00:08:13,169
would like to repress current<font color="#E5E5E5"> file</font>

151
00:08:10,110 --> 00:08:16,520
separator<font color="#E5E5E5"> with regular expression so</font>

152
00:08:13,169 --> 00:08:21,620
gross<font color="#E5E5E5"> escape the past by</font><font color="#CCCCCC"> patent accrued</font>

153
00:08:16,520 --> 00:08:24,210
but was the repressed used correctly

154
00:08:21,620 --> 00:08:26,490
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> prototype of mains the</font>

155
00:08:24,210 --> 00:08:28,650
<font color="#E5E5E5">repressed but in Java</font>

156
00:08:26,490 --> 00:08:32,520
the<font color="#E5E5E5"> repressed has a big brother and his</font>

157
00:08:28,650 --> 00:08:34,890
name is repressed all post<font color="#CCCCCC"> pencils</font><font color="#E5E5E5"> are</font>

158
00:08:32,520 --> 00:08:37,049
very similar<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> only difference</font>

159
00:08:34,890 --> 00:08:40,169
between each<font color="#E5E5E5"> other is the meaning of the</font>

160
00:08:37,049 --> 00:08:42,449
first argument<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first argument in</font>

161
00:08:40,169 --> 00:08:45,120
repressed<font color="#CCCCCC"> is the literal string to be</font>

162
00:08:42,450 --> 00:08:47,300
repressed<font color="#E5E5E5"> but other is the regular</font>

163
00:08:45,120 --> 00:08:50,640
expression<font color="#CCCCCC"> to be rescued</font>

164
00:08:47,300 --> 00:08:54,800
both argument are the string type<font color="#E5E5E5"> since</font>

165
00:08:50,640 --> 00:08:57,870
<font color="#CCCCCC">the developer use the wrong answer</font>

166
00:08:54,800 --> 00:09:01,410
the<font color="#E5E5E5"> patent accrued in crosses the</font>

167
00:08:57,870 --> 00:09:05,610
current file separator with s cap Q and

168
00:09:01,410 --> 00:09:08,250
s<font color="#CCCCCC"> JP</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> of the misuse gross</font>

169
00:09:05,610 --> 00:09:12,779
reorganized the<font color="#CCCCCC"> ASCAP record</font><font color="#E5E5E5"> rigorous</font>

170
00:09:08,250 --> 00:09:17,450
<font color="#CCCCCC">version as literal string as the result</font>

171
00:09:12,779 --> 00:09:17,450
<font color="#E5E5E5">there's</font><font color="#CCCCCC"> a new tap a slash in</font><font color="#E5E5E5"> the girls</font>

172
00:09:17,540 --> 00:09:27,329
yes<font color="#E5E5E5"> first every furrow even was the</font>

173
00:09:23,070 --> 00:09:31,490
buggy code was<font color="#CCCCCC"> committed in 2014 so the</font>

174
00:09:27,330 --> 00:09:31,490
<font color="#E5E5E5">back has been there for several years</font>

175
00:09:32,240 --> 00:09:39,959
<font color="#E5E5E5">the next topic is how single slash could</font>

176
00:09:36,390 --> 00:09:43,199
be fair maybe you have set<font color="#CCCCCC"> out civil</font>

177
00:09:39,959 --> 00:09:47,219
past in the past<font color="#CCCCCC"> but does your</font><font color="#E5E5E5"> past and</font>

178
00:09:43,200 --> 00:09:50,970
with a<font color="#E5E5E5"> slash this is a good question</font>

179
00:09:47,220 --> 00:09:55,200
is<font color="#E5E5E5"> it important yes let me show you how</font>

180
00:09:50,970 --> 00:09:58,820
<font color="#E5E5E5">single slash could be fair this isn't</font>

181
00:09:55,200 --> 00:10:01,709
this<font color="#CCCCCC"> East End</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> pen</font><font color="#E5E5E5"> / fell on engine</font><font color="#CCCCCC"> X</font>

182
00:09:58,820 --> 00:10:05,910
the first<font color="#E5E5E5"> time this problem is shown was</font>

183
00:10:01,709 --> 00:10:10,349
in the end of 2016 and this created<font color="#CCCCCC"> two</font>

184
00:10:05,910 --> 00:10:13,620
<font color="#CCCCCC">Ackley's also</font><font color="#E5E5E5"> this is not new but it's</font>

185
00:10:10,350 --> 00:10:15,720
still worth to mention this is a good

186
00:10:13,620 --> 00:10:18,480
attack vector without<font color="#CCCCCC"> too much people</font>

187
00:10:15,720 --> 00:10:22,890
<font color="#E5E5E5">known and the idea appear in real world</font>

188
00:10:18,480 --> 00:10:25,860
again and again in engine<font color="#CCCCCC"> ax tests and</font>

189
00:10:22,890 --> 00:10:30,380
areas directive and it can define a

190
00:10:25,860 --> 00:10:33,329
replacement for<font color="#E5E5E5"> the specified</font><font color="#CCCCCC"> location</font>

191
00:10:30,380 --> 00:10:36,750
this direct this directive is very

192
00:10:33,329 --> 00:10:39,239
common in web architectures in practical

193
00:10:36,750 --> 00:10:42,089
applications such<font color="#CCCCCC"> as jingle</font><font color="#E5E5E5"> and rails</font>

194
00:10:39,240 --> 00:10:45,180
are not<font color="#E5E5E5"> familiar with</font><font color="#CCCCCC"> handling static</font>

195
00:10:42,089 --> 00:10:48,570
files so it's free it's prevalent

196
00:10:45,180 --> 00:10:52,410
<font color="#CCCCCC">pattern to put the</font><font color="#E5E5E5"> engine X in front of</font>

197
00:10:48,570 --> 00:10:56,160
them but<font color="#E5E5E5"> due to the lack of</font><font color="#CCCCCC"> trans lash</font>

198
00:10:52,410 --> 00:11:02,010
in the location<font color="#CCCCCC"> rule the slash</font><font color="#E5E5E5"> static</font>

199
00:10:56,160 --> 00:11:04,319
data will<font color="#E5E5E5"> also hit the alias block so as</font>

200
00:11:02,010 --> 00:11:06,569
the result<font color="#E5E5E5"> Android apps will append</font><font color="#CCCCCC"> a</font>

201
00:11:04,320 --> 00:11:09,720
remaining<font color="#CCCCCC"> path to the home</font>

202
00:11:06,570 --> 00:11:13,740
app static and we<font color="#CCCCCC"> can traverse one label</font>

203
00:11:09,720 --> 00:11:16,290
to parent directory<font color="#E5E5E5"> so how single slash</font>

204
00:11:13,740 --> 00:11:19,590
could be fair you can search how<font color="#E5E5E5"> to</font>

205
00:11:16,290 --> 00:11:22,380
serve static<font color="#E5E5E5"> file with engine X and</font>

206
00:11:19,590 --> 00:11:26,880
<font color="#E5E5E5">Google or a</font><font color="#CCCCCC"> Stack Overflow</font><font color="#E5E5E5"> and you will</font>

207
00:11:22,380 --> 00:11:29,130
find numbers answers with missteps<font color="#E5E5E5"> this</font>

208
00:11:26,880 --> 00:11:31,800
product<font color="#E5E5E5"> this product is also common in</font>

209
00:11:29,130 --> 00:11:34,830
the implementation<font color="#CCCCCC"> that you need to</font>

210
00:11:31,800 --> 00:11:38,010
process the<font color="#CCCCCC"> path</font><font color="#E5E5E5"> by yourself it's just</font>

211
00:11:34,830 --> 00:11:40,620
<font color="#CCCCCC">like string coupling</font><font color="#E5E5E5"> in C language to</font>

212
00:11:38,010 --> 00:11:44,790
attain a slash or nada<font color="#CCCCCC"> it's a serious</font>

213
00:11:40,620 --> 00:11:46,710
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> to you so how to find this</font>

214
00:11:44,790 --> 00:11:50,280
problem in real<font color="#E5E5E5"> world with clipper</font>

215
00:11:46,710 --> 00:11:53,790
primate<font color="#CCCCCC"> back tandy cast here from direct</font>

216
00:11:50,280 --> 00:11:57,900
<font color="#CCCCCC">access</font><font color="#E5E5E5"> in the SS folder ng</font><font color="#CCCCCC"> x returned</font>

217
00:11:53,790 --> 00:12:02,730
for the<font color="#E5E5E5"> OC forbidden however when we try</font>

218
00:11:57,900 --> 00:12:06,000
the<font color="#CCCCCC"> /ss that does slash it also</font><font color="#E5E5E5"> returned</font>

219
00:12:02,730 --> 00:12:08,250
for the ostrich<font color="#E5E5E5"> it look like it</font><font color="#CCCCCC"> looks</font>

220
00:12:06,000 --> 00:12:11,460
like<font color="#E5E5E5"> we have successfully traversed the</font>

221
00:12:08,250 --> 00:12:16,620
label to parent directory<font color="#E5E5E5"> but how to</font>

222
00:12:11,460 --> 00:12:22,400
<font color="#E5E5E5">prove this</font><font color="#CCCCCC"> we app an SS / a PP that</font><font color="#E5E5E5"> says</font>

223
00:12:16,620 --> 00:12:25,620
again and check the country<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> the same</font>

224
00:12:22,400 --> 00:12:28,890
so now<font color="#CCCCCC"> we can download all the sauce and</font>

225
00:12:25,620 --> 00:12:31,550
configuration file on the web loot in

226
00:12:28,890 --> 00:12:34,949
this case we cut several sensitive

227
00:12:31,550 --> 00:12:41,550
<font color="#CCCCCC">sensitive</font><font color="#E5E5E5"> data such</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the jungle</font><font color="#CCCCCC"> secret</font>

228
00:12:34,950 --> 00:12:43,500
<font color="#CCCCCC">key and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> cycle light database so for</font>

229
00:12:41,550 --> 00:12:45,510
the past several months<font color="#CCCCCC"> I start to</font>

230
00:12:43,500 --> 00:12:48,360
review<font color="#E5E5E5"> the past normalization and</font>

231
00:12:45,510 --> 00:12:51,180
<font color="#E5E5E5">password</font><font color="#CCCCCC"> pad and web applications</font><font color="#E5E5E5"> of</font>

232
00:12:48,360 --> 00:12:56,760
course<font color="#E5E5E5"> we find</font><font color="#CCCCCC"> several permit in diverse</font>

233
00:12:51,180 --> 00:12:59,130
implementation<font color="#E5E5E5"> here is the list so the</font>

234
00:12:56,760 --> 00:13:02,640
next<font color="#E5E5E5"> section is in-depth review</font><font color="#CCCCCC"> of</font>

235
00:12:59,130 --> 00:13:05,070
<font color="#E5E5E5">existing implementations due to the time</font>

236
00:13:02,640 --> 00:13:07,380
consideration and<font color="#E5E5E5"> our new</font><font color="#CCCCCC"> fading is more</font>

237
00:13:05,070 --> 00:13:12,300
important we will only show you two

238
00:13:07,380 --> 00:13:14,150
<font color="#CCCCCC">cases the first</font><font color="#E5E5E5"> one directory traversal</font>

239
00:13:12,300 --> 00:13:17,339
and<font color="#E5E5E5"> Spring Framework</font>

240
00:13:14,150 --> 00:13:20,180
<font color="#E5E5E5">we all</font><font color="#CCCCCC"> agreed that spring is the famous</font>

241
00:13:17,340 --> 00:13:25,370
framework in<font color="#E5E5E5"> Java</font><font color="#CCCCCC"> web Echo's things</font>

242
00:13:20,180 --> 00:13:27,500
so we start<font color="#E5E5E5"> from the patch of</font><font color="#CCCCCC"> CBE 2014 3</font>

243
00:13:25,370 --> 00:13:31,160
<font color="#E5E5E5">a 2 5 3 6 2 5</font>

244
00:13:27,500 --> 00:13:33,800
it's also a<font color="#CCCCCC"> pass</font><font color="#E5E5E5"> reversal in order</font>

245
00:13:31,160 --> 00:13:36,290
<font color="#E5E5E5">spring in order to preach to</font><font color="#CCCCCC"> prevents</font>

246
00:13:33,800 --> 00:13:39,439
<font color="#CCCCCC">demoness Berg</font><font color="#E5E5E5"> again spring a</font><font color="#CCCCCC"> price</font>

247
00:13:36,290 --> 00:13:40,280
several<font color="#E5E5E5"> security mechanism from</font><font color="#CCCCCC"> the</font>

248
00:13:39,440 --> 00:13:43,280
mezzanine

249
00:13:40,280 --> 00:13:46,370
we know spring<font color="#E5E5E5"> first</font><font color="#CCCCCC"> shape Raider the</font>

250
00:13:43,280 --> 00:13:48,890
past is valid or not<font color="#CCCCCC"> and used</font><font color="#E5E5E5"> its</font>

251
00:13:46,370 --> 00:13:51,020
resource<font color="#E5E5E5"> under location as the</font><font color="#CCCCCC"> last</font>

252
00:13:48,890 --> 00:13:55,850
<font color="#CCCCCC">guardian</font><font color="#E5E5E5"> to ensure the past under</font>

253
00:13:51,020 --> 00:13:57,920
<font color="#CCCCCC">appropriate</font><font color="#E5E5E5"> locations this</font><font color="#CCCCCC"> is the</font>

254
00:13:55,850 --> 00:14:01,250
simplified<font color="#CCCCCC"> version of Maysville is</font>

255
00:13:57,920 --> 00:14:04,699
invalid<font color="#E5E5E5"> pass it's just it's just a</font>

256
00:14:01,250 --> 00:14:08,210
<font color="#E5E5E5">simple black list and the most important</font>

257
00:14:04,700 --> 00:14:11,720
is if there is any<font color="#CCCCCC"> tapped up in the past</font>

258
00:14:08,210 --> 00:14:14,990
spring will normalize the past<font color="#E5E5E5"> check and</font>

259
00:14:11,720 --> 00:14:17,570
return a boolean as I mentioned before

260
00:14:14,990 --> 00:14:20,150
<font color="#E5E5E5">this is the</font><font color="#CCCCCC"> dangerous</font><font color="#E5E5E5"> pattern spring</font>

261
00:14:17,570 --> 00:14:23,420
just<font color="#E5E5E5"> rely on this</font><font color="#CCCCCC"> pooling to protect</font>

262
00:14:20,150 --> 00:14:26,209
<font color="#CCCCCC">oldest instance</font><font color="#E5E5E5"> so if you find a problem</font>

263
00:14:23,420 --> 00:14:29,150
<font color="#E5E5E5">in</font><font color="#CCCCCC"> the clean pass or inconsistency</font>

264
00:14:26,210 --> 00:14:34,010
<font color="#CCCCCC">between</font><font color="#E5E5E5"> the chair and</font><font color="#CCCCCC"> the use you can</font>

265
00:14:29,150 --> 00:14:37,670
bypass all the protection so how clean

266
00:14:34,010 --> 00:14:40,520
pass work this<font color="#E5E5E5"> is the source code of</font>

267
00:14:37,670 --> 00:14:43,579
clean pass in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be compatible</font>

268
00:14:40,520 --> 00:14:49,160
with<font color="#CCCCCC"> Windows environment is simply</font><font color="#E5E5E5"> we</font>

269
00:14:43,580 --> 00:14:51,980
press<font color="#E5E5E5"> backslash to /bin also separate</font>

270
00:14:49,160 --> 00:14:54,410
the past<font color="#E5E5E5"> with the forward slash check</font>

271
00:14:51,980 --> 00:14:58,760
the element one by one and store the

272
00:14:54,410 --> 00:15:01,569
result<font color="#CCCCCC"> in to pass element if the element</font>

273
00:14:58,760 --> 00:15:05,480
is the single<font color="#CCCCCC"> dot spring just do nothing</font>

274
00:15:01,570 --> 00:15:07,850
<font color="#CCCCCC">but if it is the parent directory</font><font color="#E5E5E5"> spring</font>

275
00:15:05,480 --> 00:15:12,920
will set a flag<font color="#CCCCCC"> to the remote that a</font>

276
00:15:07,850 --> 00:15:15,110
turn in naps<font color="#E5E5E5"> iteration in the end spring</font>

277
00:15:12,920 --> 00:15:18,410
use the<font color="#E5E5E5"> forward slash to join all the</font>

278
00:15:15,110 --> 00:15:24,140
element<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's all did you find the</font>

279
00:15:18,410 --> 00:15:27,589
problem the problem<font color="#CCCCCC"> is spring allows the</font>

280
00:15:24,140 --> 00:15:31,130
empty element that<font color="#CCCCCC"> means you can fold an</font>

281
00:15:27,590 --> 00:15:33,920
empty element<font color="#E5E5E5"> in path of rain during the</font>

282
00:15:31,130 --> 00:15:36,139
normalization<font color="#CCCCCC"> it will be normalized</font><font color="#E5E5E5"> with</font>

283
00:15:33,920 --> 00:15:37,760
the parent directory and<font color="#CCCCCC"> cause the</font>

284
00:15:36,139 --> 00:15:41,300
Incans distance that you<font color="#CCCCCC"> with file</font>

285
00:15:37,760 --> 00:15:47,569
system it seems to be a<font color="#E5E5E5"> small problem</font>

286
00:15:41,300 --> 00:15:49,370
<font color="#CCCCCC">but the impact is huge</font><font color="#E5E5E5"> this table</font><font color="#CCCCCC"> shows</font>

287
00:15:47,570 --> 00:15:52,760
the<font color="#E5E5E5"> difference between the clean path</font>

288
00:15:49,370 --> 00:15:55,070
and the files instant<font color="#CCCCCC"> due to</font><font color="#E5E5E5"> the empty</font>

289
00:15:52,760 --> 00:15:59,360
element when there's mode and one slash

290
00:15:55,070 --> 00:16:02,630
in the<font color="#E5E5E5"> past</font><font color="#CCCCCC"> scene start going wrong the</font>

291
00:15:59,360 --> 00:16:05,510
Mesa is invalid past return true<font color="#CCCCCC"> because</font>

292
00:16:02,630 --> 00:16:07,579
there is no<font color="#E5E5E5"> top top in the result so</font>

293
00:16:05,510 --> 00:16:10,760
spring believe<font color="#CCCCCC"> without any doubt and</font>

294
00:16:07,579 --> 00:16:16,910
<font color="#E5E5E5">read a file with use with users of pride</font>

295
00:16:10,760 --> 00:16:19,370
pairs so how to<font color="#CCCCCC"> ex</font><font color="#E5E5E5"> for you we</font><font color="#CCCCCC"> Chrome the</font>

296
00:16:16,910 --> 00:16:22,219
spring of this show simple front github

297
00:16:19,370 --> 00:16:25,690
<font color="#E5E5E5">as you can see the payload</font><font color="#CCCCCC"> there are six</font>

298
00:16:22,220 --> 00:16:28,910
slash<font color="#E5E5E5"> normalize the next six data slash</font>

299
00:16:25,690 --> 00:16:32,630
this<font color="#E5E5E5"> exploit also works on the container</font>

300
00:16:28,910 --> 00:16:35,480
such as<font color="#E5E5E5"> Tomcat as the secured container</font>

301
00:16:32,630 --> 00:16:38,180
<font color="#CCCCCC">tank head by default enables the real</font>

302
00:16:35,480 --> 00:16:43,640
security<font color="#E5E5E5"> features but this exploit</font>

303
00:16:38,180 --> 00:16:45,949
perfectly bypass<font color="#CCCCCC"> all destructions as the</font>

304
00:16:43,640 --> 00:16:54,130
result we<font color="#E5E5E5"> can read up</font><font color="#CCCCCC"> Cherie file</font><font color="#E5E5E5"> and</font>

305
00:16:45,949 --> 00:16:54,130
<font color="#E5E5E5">windows so how to fix to now use</font><font color="#CCCCCC"> Windows</font>

306
00:16:54,370 --> 00:17:03,760
yeah this is the real<font color="#E5E5E5"> medication from</font>

307
00:16:57,980 --> 00:17:07,069
spring official website excellent

308
00:17:03,760 --> 00:17:10,520
as a bonus<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the code in</font>

309
00:17:07,069 --> 00:17:13,418
<font color="#E5E5E5">fact hibbity programmers</font><font color="#CCCCCC"> follow the DRI</font>

310
00:17:10,520 --> 00:17:16,849
principle<font color="#E5E5E5"> don't repeat yourself</font><font color="#CCCCCC"> and</font>

311
00:17:13,419 --> 00:17:19,429
spring is a popular framework under a

312
00:17:16,849 --> 00:17:22,299
free<font color="#CCCCCC"> software license so lots of</font>

313
00:17:19,429 --> 00:17:25,579
projects refer the cold front spring

314
00:17:22,299 --> 00:17:30,080
spark also<font color="#E5E5E5"> is also a famous framework</font>

315
00:17:25,579 --> 00:17:32,570
for web applications in<font color="#CCCCCC"> 2013</font><font color="#E5E5E5"> spark want</font>

316
00:17:30,080 --> 00:17:36,020
to improve their security<font color="#CCCCCC"> mechanism</font><font color="#E5E5E5"> and</font>

317
00:17:32,570 --> 00:17:39,350
<font color="#E5E5E5">static file handling but since writing a</font>

318
00:17:36,020 --> 00:17:44,000
<font color="#CCCCCC">cute pastor is very hard so it just copy</font>

319
00:17:39,350 --> 00:17:46,250
the code from spring<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the result spark</font>

320
00:17:44,000 --> 00:17:47,330
<font color="#CCCCCC">also copied a similar problem into their</font>

321
00:17:46,250 --> 00:17:49,669
code<font color="#E5E5E5"> best</font>

322
00:17:47,330 --> 00:17:55,600
so spark also<font color="#E5E5E5"> suffered from this</font><font color="#CCCCCC"> model</font>

323
00:17:49,669 --> 00:17:58,399
ability the next<font color="#CCCCCC"> case</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> Ruby on Rails</font>

324
00:17:55,600 --> 00:18:01,340
<font color="#CCCCCC">sprocket is the</font><font color="#E5E5E5"> Esther pipelines instant</font>

325
00:17:58,399 --> 00:18:05,238
in rails<font color="#E5E5E5"> which means all static files</font>

326
00:18:01,340 --> 00:18:08,299
will be manager compared and served by

327
00:18:05,239 --> 00:18:12,230
<font color="#CCCCCC">structures and of course we find a</font>

328
00:18:08,299 --> 00:18:14,899
problem<font color="#CCCCCC"> here</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> unfortunately</font><font color="#E5E5E5"> we also</font>

329
00:18:12,230 --> 00:18:20,330
only use the<font color="#CCCCCC"> SA pipelines instant</font><font color="#E5E5E5"> and</font>

330
00:18:14,899 --> 00:18:22,758
development mode also<font color="#CCCCCC"> this</font><font color="#E5E5E5"> only affect</font>

331
00:18:20,330 --> 00:18:25,789
development servers that the for<font color="#CCCCCC"> Rails</font>

332
00:18:22,759 --> 00:18:28,549
comment<font color="#E5E5E5"> is under threat so you can</font>

333
00:18:25,789 --> 00:18:34,820
simply we produce the<font color="#CCCCCC"> pack</font><font color="#E5E5E5"> by just to</font>

334
00:18:28,549 --> 00:18:36,889
comment<font color="#E5E5E5"> Rios new and real server due to</font>

335
00:18:34,820 --> 00:18:39,799
the Tang consideration I will not go

336
00:18:36,889 --> 00:18:42,469
into<font color="#CCCCCC"> too much detail</font><font color="#E5E5E5"> the loot cross is</font>

337
00:18:39,799 --> 00:18:45,289
that<font color="#CCCCCC"> sprocket supposed an undocumented</font>

338
00:18:42,470 --> 00:18:47,840
<font color="#CCCCCC">sting in the past</font><font color="#E5E5E5"> there are several</font>

339
00:18:45,289 --> 00:18:50,509
pieces in this exploit<font color="#E5E5E5"> but because of</font>

340
00:18:47,840 --> 00:18:52,879
<font color="#E5E5E5">the time you</font><font color="#CCCCCC"> can check the detail after</font>

341
00:18:50,509 --> 00:18:57,529
this talk we will just go to the<font color="#E5E5E5"> next</font>

342
00:18:52,879 --> 00:18:59,629
<font color="#E5E5E5">page but it's the but it is still</font><font color="#CCCCCC"> worse</font>

343
00:18:57,529 --> 00:19:02,539
to say this is possible for code

344
00:18:59,629 --> 00:19:05,029
execution<font color="#E5E5E5"> because of the support of</font>

345
00:19:02,539 --> 00:19:07,869
<font color="#E5E5E5">files game you can</font><font color="#CCCCCC"> overwrite some</font>

346
00:19:05,029 --> 00:19:10,669
internal<font color="#CCCCCC"> actions with</font><font color="#E5E5E5"> your career stream</font>

347
00:19:07,869 --> 00:19:13,759
first<font color="#CCCCCC"> and Esther</font><font color="#E5E5E5"> pipeline since turn</font>

348
00:19:10,669 --> 00:19:16,399
sprocket<font color="#E5E5E5"> will compile the content while</font>

349
00:19:13,759 --> 00:19:20,210
processing the<font color="#E5E5E5"> file if the file</font>

350
00:19:16,399 --> 00:19:22,609
extension is<font color="#CCCCCC"> ERP sprocket</font><font color="#E5E5E5"> will interpret</font>

351
00:19:20,210 --> 00:19:26,659
<font color="#CCCCCC">it in the period file as will be</font>

352
00:19:22,609 --> 00:19:29,059
temperate<font color="#CCCCCC"> loopy temperate</font><font color="#E5E5E5"> engine this</font>

353
00:19:26,659 --> 00:19:31,970
feature could be compared with file

354
00:19:29,059 --> 00:19:34,609
upload<font color="#E5E5E5"> attack to</font><font color="#CCCCCC"> upload malicious file</font>

355
00:19:31,970 --> 00:19:40,940
to<font color="#E5E5E5"> attempt folder and ask you the code</font>

356
00:19:34,609 --> 00:19:41,918
by sprocket who I okay the boring part

357
00:19:40,940 --> 00:19:45,489
is over

358
00:19:41,919 --> 00:19:48,350
you can stretch yourself a little<font color="#E5E5E5"> bit</font>

359
00:19:45,489 --> 00:19:53,119
okay here's the cat and let's go to the

360
00:19:48,350 --> 00:19:55,639
most<font color="#E5E5E5"> interest interesting part</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> I</font>

361
00:19:53,119 --> 00:19:57,830
<font color="#E5E5E5">was reading</font><font color="#CCCCCC"> my file I was</font><font color="#E5E5E5"> reading the</font>

362
00:19:55,639 --> 00:19:59,990
<font color="#E5E5E5">Advisory sorry</font>

363
00:19:57,830 --> 00:20:00,800
<font color="#CCCCCC">while I was</font><font color="#E5E5E5"> reading</font><font color="#CCCCCC"> the sauce I noticed</font>

364
00:19:59,990 --> 00:20:03,020
<font color="#CCCCCC">the feature</font>

365
00:20:00,800 --> 00:20:05,720
that could be perfectly exploit<font color="#E5E5E5"> are not</font>

366
00:20:03,020 --> 00:20:08,090
alert architectures in the following

367
00:20:05,720 --> 00:20:11,420
<font color="#E5E5E5">pack</font><font color="#CCCCCC"> I will introduce the idea and</font>

368
00:20:08,090 --> 00:20:14,179
several cases including an SS control

369
00:20:11,420 --> 00:20:18,080
bypass in uber and<font color="#CCCCCC"> two remote code</font>

370
00:20:14,180 --> 00:20:20,750
execution<font color="#E5E5E5"> in addition I would like to</font>

371
00:20:18,080 --> 00:20:23,330
<font color="#CCCCCC">thank Emerson and binder</font><font color="#E5E5E5"> for the open</font>

372
00:20:20,750 --> 00:20:26,150
<font color="#CCCCCC">net valid ability disclosure</font><font color="#E5E5E5"> and their</font>

373
00:20:23,330 --> 00:20:30,679
<font color="#E5E5E5">quick response time it's a very good</font>

374
00:20:26,150 --> 00:20:35,000
<font color="#E5E5E5">experience working with dead we start</font>

375
00:20:30,680 --> 00:20:37,880
with the HTTP feature URL<font color="#E5E5E5"> pass permit it</font>

376
00:20:35,000 --> 00:20:41,740
can define<font color="#CCCCCC"> information for the specified</font>

377
00:20:37,880 --> 00:20:44,960
<font color="#CCCCCC">path</font><font color="#E5E5E5"> segment some researchers have</font>

378
00:20:41,740 --> 00:20:48,260
<font color="#CCCCCC">already pointed</font><font color="#E5E5E5"> out this feature may</font>

379
00:20:44,960 --> 00:20:50,660
lead<font color="#E5E5E5"> little security issues</font><font color="#CCCCCC"> but they're</font>

380
00:20:48,260 --> 00:20:54,080
<font color="#CCCCCC">concerned still depend</font><font color="#E5E5E5"> on programming</font>

381
00:20:50,660 --> 00:20:56,810
<font color="#E5E5E5">first when I saw this I</font><font color="#CCCCCC"> was thinking</font>

382
00:20:54,080 --> 00:21:02,050
<font color="#E5E5E5">about how to make this feature more</font>

383
00:20:56,810 --> 00:21:04,220
severely yes<font color="#CCCCCC"> I find reverse proxy</font>

384
00:21:02,050 --> 00:21:06,610
reverse proxy is a common web

385
00:21:04,220 --> 00:21:11,560
architecture<font color="#E5E5E5"> there are several benefits</font>

386
00:21:06,610 --> 00:21:14,389
<font color="#E5E5E5">with so Sharon Lopez cash and security</font>

387
00:21:11,560 --> 00:21:18,260
for example<font color="#CCCCCC"> you can share different</font>

388
00:21:14,390 --> 00:21:22,370
<font color="#CCCCCC">services understand</font><font color="#E5E5E5"> code or IP ages or</font>

389
00:21:18,260 --> 00:21:25,490
<font color="#E5E5E5">use Lopez to distribute</font><font color="#CCCCCC"> a request to</font>

390
00:21:22,370 --> 00:21:28,580
different back-end servers as the

391
00:21:25,490 --> 00:21:31,520
security reverse proxy can isolate the

392
00:21:28,580 --> 00:21:36,010
server<font color="#CCCCCC"> from outside in config and</font>

393
00:21:31,520 --> 00:21:38,780
configure the SS control in plastic part

394
00:21:36,010 --> 00:21:41,629
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> classic reverse proxy</font>

395
00:21:38,780 --> 00:21:44,180
architecture as I said<font color="#E5E5E5"> before</font><font color="#CCCCCC"> it's a</font>

396
00:21:41,630 --> 00:21:47,210
prevalent<font color="#E5E5E5"> pattern to serve static file</font>

397
00:21:44,180 --> 00:21:50,720
directly and pass the<font color="#CCCCCC"> business logic</font><font color="#E5E5E5"> to</font>

398
00:21:47,210 --> 00:21:53,810
<font color="#CCCCCC">bacon service I have talked</font><font color="#E5E5E5"> a powder of</font>

399
00:21:50,720 --> 00:21:55,880
<font color="#CCCCCC">path slash problem but now we</font><font color="#E5E5E5"> focus on</font>

400
00:21:53,810 --> 00:21:59,870
the<font color="#CCCCCC"> interaction between the porosity</font><font color="#E5E5E5"> and</font>

401
00:21:55,880 --> 00:22:02,180
back-end<font color="#E5E5E5"> servers engine acts will serve</font>

402
00:21:59,870 --> 00:22:04,790
it directly<font color="#E5E5E5"> if the incoming requests</font>

403
00:22:02,180 --> 00:22:09,050
match the static<font color="#E5E5E5"> pattern such as files</font>

404
00:22:04,790 --> 00:22:11,450
and scripts but if but<font color="#E5E5E5"> if it is the</font>

405
00:22:09,050 --> 00:22:14,509
request for business logic<font color="#E5E5E5"> engine</font><font color="#CCCCCC"> acts</font>

406
00:22:11,450 --> 00:22:17,089
will pass to<font color="#E5E5E5"> back-end servers</font>

407
00:22:14,509 --> 00:22:18,709
<font color="#E5E5E5">okay back to our topic so hot will</font>

408
00:22:17,089 --> 00:22:23,089
happen<font color="#E5E5E5"> for in the future</font>

409
00:22:18,709 --> 00:22:26,539
<font color="#CCCCCC">mr. reverse proxy URL path parameter is</font>

410
00:22:23,089 --> 00:22:29,658
defined<font color="#CCCCCC"> in HTTP specification but not</font>

411
00:22:26,539 --> 00:22:30,459
all but not all web servers care about

412
00:22:29,659 --> 00:22:35,209
it

413
00:22:30,459 --> 00:22:37,159
however Java mostly<font color="#E5E5E5"> supposes feature the</font>

414
00:22:35,209 --> 00:22:40,279
best<font color="#CCCCCC"> proxy</font><font color="#E5E5E5"> is not a single request</font>

415
00:22:37,159 --> 00:22:42,739
<font color="#CCCCCC">single server handling architecture the</font>

416
00:22:40,279 --> 00:22:45,499
<font color="#CCCCCC">sender cost will be interpreted by</font>

417
00:22:42,739 --> 00:22:47,690
different<font color="#CCCCCC"> web servers</font><font color="#E5E5E5"> so the</font>

418
00:22:45,499 --> 00:22:50,329
inconsistency<font color="#E5E5E5"> between the prosti and</font>

419
00:22:47,690 --> 00:22:52,359
back-end servers will lead to security

420
00:22:50,329 --> 00:22:55,849
<font color="#CCCCCC">problems</font>

421
00:22:52,359 --> 00:22:58,658
it stays popular<font color="#CCCCCC"> to given n for VAR an</font>

422
00:22:55,849 --> 00:23:01,129
<font color="#CCCCCC">ability</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> and then displayed precision</font>

423
00:22:58,659 --> 00:23:05,239
<font color="#E5E5E5">okay not really just kidding the domain</font>

424
00:23:01,129 --> 00:23:07,399
is still available<font color="#CCCCCC"> for back so how</font>

425
00:23:05,239 --> 00:23:11,269
<font color="#E5E5E5">danger it is could</font><font color="#CCCCCC"> be in the reverse</font>

426
00:23:07,399 --> 00:23:14,869
proxy<font color="#E5E5E5"> it can bypass SS control Lemaitre</font>

427
00:23:11,269 --> 00:23:18,379
<font color="#E5E5E5">is practiced or</font><font color="#CCCCCC"> hi list it can also</font>

428
00:23:14,869 --> 00:23:20,658
accept from current context mapping to

429
00:23:18,379 --> 00:23:24,189
<font color="#CCCCCC">access the management in the fest and</font>

430
00:23:20,659 --> 00:23:27,499
other<font color="#CCCCCC"> context this on</font><font color="#E5E5E5"> the same server</font>

431
00:23:24,190 --> 00:23:30,229
<font color="#E5E5E5">the apps always believe that no one</font><font color="#CCCCCC"> can</font>

432
00:23:27,499 --> 00:23:33,289
touch their internal service<font color="#E5E5E5"> but today</font>

433
00:23:30,229 --> 00:23:39,559
this is posed to outside and they must

434
00:23:33,289 --> 00:23:41,959
be<font color="#CCCCCC"> lots of fun</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> hackers in</font><font color="#E5E5E5"> IFA</font><font color="#CCCCCC"> effect</font>

435
00:23:39,559 --> 00:23:44,809
by this this is the this is the

436
00:23:41,959 --> 00:23:46,940
<font color="#E5E5E5">architectures problem available but if</font>

437
00:23:44,809 --> 00:23:49,609
thought without<font color="#E5E5E5"> any programming errors</font>

438
00:23:46,940 --> 00:23:52,309
<font color="#E5E5E5">so if you are using the reverse proxy</font>

439
00:23:49,609 --> 00:23:54,978
with Java<font color="#E5E5E5"> as European service you</font><font color="#CCCCCC"> want</font>

440
00:23:52,309 --> 00:23:58,249
<font color="#CCCCCC">the straight path curry</font>

441
00:23:54,979 --> 00:24:00,259
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a huge attack surface think</font>

442
00:23:58,249 --> 00:24:03,049
about how<font color="#CCCCCC"> many rivers processes in the</font>

443
00:24:00,259 --> 00:24:05,389
<font color="#E5E5E5">world could be bypassed so that you can</font>

444
00:24:03,049 --> 00:24:11,149
touch many<font color="#E5E5E5"> internal services from</font>

445
00:24:05,389 --> 00:24:13,879
outside for an<font color="#E5E5E5"> S for an</font><font color="#CCCCCC"> East a example</font>

446
00:24:11,149 --> 00:24:17,629
<font color="#E5E5E5">to understand</font><font color="#CCCCCC"> tomcat is post application</font>

447
00:24:13,879 --> 00:24:20,629
<font color="#E5E5E5">portal in localhost and</font><font color="#CCCCCC"> map and maps</font><font color="#E5E5E5"> to</font>

448
00:24:17,629 --> 00:24:22,939
outside by a patch<font color="#E5E5E5"> due to the</font>

449
00:24:20,629 --> 00:24:25,009
normalization of<font color="#E5E5E5"> a patch we cannot</font>

450
00:24:22,940 --> 00:24:26,799
<font color="#E5E5E5">directly search the</font><font color="#CCCCCC"> back pain management</font>

451
00:24:25,009 --> 00:24:28,070
<font color="#E5E5E5">in the face</font>

452
00:24:26,799 --> 00:24:30,170
hi

453
00:24:28,070 --> 00:24:32,600
we can use our<font color="#E5E5E5"> traversal</font><font color="#CCCCCC"> check</font><font color="#E5E5E5"> that does</font>

454
00:24:30,170 --> 00:24:37,460
semicolon to traverse well<font color="#CCCCCC"> label</font><font color="#E5E5E5"> to</font>

455
00:24:32,600 --> 00:24:40,669
touch the load of<font color="#E5E5E5"> punk head the patch</font>

456
00:24:37,460 --> 00:24:43,190
first<font color="#E5E5E5"> handled this request from the view</font>

457
00:24:40,670 --> 00:24:46,220
of a patch<font color="#E5E5E5"> that a semicolon is</font><font color="#CCCCCC"> the</font>

458
00:24:43,190 --> 00:24:48,760
normal folder name and match the<font color="#E5E5E5"> context</font>

459
00:24:46,220 --> 00:24:52,010
making so it<font color="#CCCCCC"> passed to beckon service</font>

460
00:24:48,760 --> 00:24:54,470
but in<font color="#CCCCCC"> Tomcat that ostomy current is</font><font color="#E5E5E5"> the</font>

461
00:24:52,010 --> 00:24:58,670
parent directory<font color="#E5E5E5"> and will normalize with</font>

462
00:24:54,470 --> 00:25:01,460
<font color="#E5E5E5">the portal the</font><font color="#CCCCCC"> result we can ask this</font>

463
00:24:58,670 --> 00:25:04,610
old application on the<font color="#CCCCCC"> tongkat including</font>

464
00:25:01,460 --> 00:25:07,850
the<font color="#CCCCCC"> management in</font><font color="#E5E5E5"> the fest everything</font>

465
00:25:04,610 --> 00:25:10,429
looks good in<font color="#E5E5E5"> front inside but when they</font>

466
00:25:07,850 --> 00:25:15,050
put<font color="#CCCCCC"> all together</font><font color="#E5E5E5"> everything start going</font>

467
00:25:10,430 --> 00:25:17,510
wrong<font color="#CCCCCC"> ok by knowing but by knowing that</font>

468
00:25:15,050 --> 00:25:20,870
the real as the<font color="#E5E5E5"> real</font><font color="#CCCCCC"> world cases the</font>

469
00:25:17,510 --> 00:25:23,300
first<font color="#CCCCCC"> case</font><font color="#E5E5E5"> is Rupert</font><font color="#CCCCCC"> Hubert is allowed</font>

470
00:25:20,870 --> 00:25:26,449
to<font color="#CCCCCC"> read assessed to determine uber in</font>

471
00:25:23,300 --> 00:25:28,690
Tanaka front and then we know this is

472
00:25:26,450 --> 00:25:32,030
<font color="#CCCCCC">the domain</font><font color="#E5E5E5"> for internal purpose</font>

473
00:25:28,690 --> 00:25:34,070
once we assess it<font color="#E5E5E5"> redirect us to the</font>

474
00:25:32,030 --> 00:25:36,680
when<font color="#E5E5E5"> loading single</font><font color="#CCCCCC"> sec single science</font>

475
00:25:34,070 --> 00:25:39,860
service and this new direction<font color="#E5E5E5"> was done</font>

476
00:25:36,680 --> 00:25:43,310
by engine<font color="#CCCCCC"> effects we find a domain</font>

477
00:25:39,860 --> 00:25:47,530
<font color="#CCCCCC">Kurata</font><font color="#E5E5E5"> uber internal</font><font color="#CCCCCC"> pecan and we also</font>

478
00:25:43,310 --> 00:25:50,210
know that ERISA java-based application

479
00:25:47,530 --> 00:25:53,300
hmm it seems to be<font color="#CCCCCC"> in Reverse proceed</font>

480
00:25:50,210 --> 00:25:56,450
again with a little bit<font color="#CCCCCC"> searching we</font>

481
00:25:53,300 --> 00:25:59,840
find this website<font color="#E5E5E5"> is post a status API</font>

482
00:25:56,450 --> 00:26:02,110
and this appears to be<font color="#E5E5E5"> the finalist for</font>

483
00:25:59,840 --> 00:26:05,449
<font color="#CCCCCC">monitored purple's</font>

484
00:26:02,110 --> 00:26:09,080
we<font color="#E5E5E5"> applied our chorizo</font><font color="#CCCCCC"> trick again it</font>

485
00:26:05,450 --> 00:26:13,450
looks<font color="#E5E5E5"> good in nginx and</font><font color="#CCCCCC"> match the file</font>

486
00:26:09,080 --> 00:26:16,310
<font color="#CCCCCC">list prefix</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> path to cure</font>

487
00:26:13,450 --> 00:26:19,330
thus the result we<font color="#E5E5E5"> can assess</font><font color="#CCCCCC"> the turret</font>

488
00:26:16,310 --> 00:26:23,300
-<font color="#CCCCCC"> pro and see the internal project and</font>

489
00:26:19,330 --> 00:26:29,629
this<font color="#E5E5E5"> is another proto we assess and in</font>

490
00:26:23,300 --> 00:26:33,290
the<font color="#E5E5E5"> non callable photo okay so next how</font>

491
00:26:29,630 --> 00:26:35,150
can we do if we bypass<font color="#CCCCCC"> the SS control we</font>

492
00:26:33,290 --> 00:26:38,210
will keep a code execution cast in

493
00:26:35,150 --> 00:26:41,930
binder bath career I find this<font color="#E5E5E5"> code as a</font>

494
00:26:38,210 --> 00:26:44,570
cushion<font color="#CCCCCC"> in another bounty</font><font color="#E5E5E5"> program also</font><font color="#CCCCCC"> I</font>

495
00:26:41,930 --> 00:26:47,030
got a code execution<font color="#CCCCCC"> I</font><font color="#E5E5E5"> find my target is</font>

496
00:26:44,570 --> 00:26:50,419
not in their bounty scope<font color="#E5E5E5"> because it's</font>

497
00:26:47,030 --> 00:26:52,670
<font color="#CCCCCC">understeer party service but</font><font color="#E5E5E5"> fortune</font>

498
00:26:50,420 --> 00:26:55,820
<font color="#CCCCCC">arretez also</font><font color="#E5E5E5"> upon the</font><font color="#CCCCCC"> program in</font><font color="#E5E5E5"> that</font>

499
00:26:52,670 --> 00:27:00,490
service provider<font color="#CCCCCC"> so in the following</font>

500
00:26:55,820 --> 00:27:03,350
test<font color="#E5E5E5"> ever use their</font><font color="#CCCCCC"> side percent example</font>

501
00:27:00,490 --> 00:27:06,200
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> screenshot for the</font><font color="#E5E5E5"> website</font>

502
00:27:03,350 --> 00:27:11,719
is<font color="#CCCCCC"> just a logging pad without</font><font color="#E5E5E5"> too much</font>

503
00:27:06,200 --> 00:27:13,760
functionality<font color="#E5E5E5"> when I'd like to have</font>

504
00:27:11,720 --> 00:27:17,330
something<font color="#E5E5E5"> the first thing I care about</font>

505
00:27:13,760 --> 00:27:19,850
is the HTTP hater<font color="#E5E5E5"> it's not a hater we</font>

506
00:27:17,330 --> 00:27:22,939
can observe many interesting information

507
00:27:19,850 --> 00:27:26,719
the hater told you that<font color="#CCCCCC"> it is running</font>

508
00:27:22,940 --> 00:27:30,040
under<font color="#E5E5E5"> engine</font><font color="#CCCCCC"> X however</font><font color="#E5E5E5"> the response</font><font color="#CCCCCC"> also</font>

509
00:27:26,720 --> 00:27:32,690
<font color="#CCCCCC">said a special</font><font color="#E5E5E5"> cookie PlayStation ID</font>

510
00:27:30,040 --> 00:27:36,379
<font color="#E5E5E5">this seems to be</font><font color="#CCCCCC"> the default station</font>

511
00:27:32,690 --> 00:27:39,290
name in<font color="#CCCCCC"> Tomcat</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> hi angel ixnay this</font>

512
00:27:36,380 --> 00:27:41,360
<font color="#CCCCCC">cookie from our</font><font color="#E5E5E5"> experience we believe</font>

513
00:27:39,290 --> 00:27:44,930
<font color="#E5E5E5">this is also the reverse process the</font>

514
00:27:41,360 --> 00:27:47,360
architecture by the way this is also<font color="#E5E5E5"> a</font>

515
00:27:44,930 --> 00:27:49,760
good methodology<font color="#E5E5E5"> to know whether the</font>

516
00:27:47,360 --> 00:27:54,500
target<font color="#E5E5E5"> is running on the reverse proxy</font>

517
00:27:49,760 --> 00:27:58,280
or not we applied our traversal tree and

518
00:27:54,500 --> 00:28:01,100
got a crew<font color="#E5E5E5"> page this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> foldable page</font>

519
00:27:58,280 --> 00:28:04,580
but a<font color="#E5E5E5"> special</font><font color="#CCCCCC"> is the patch was returned</font>

520
00:28:01,100 --> 00:28:07,250
by<font color="#E5E5E5"> Tomcat this represents that we have</font>

521
00:28:04,580 --> 00:28:10,720
<font color="#CCCCCC">already posted</font><font color="#E5E5E5"> past the first</font><font color="#CCCCCC"> prosti</font><font color="#E5E5E5"> and</font>

522
00:28:07,250 --> 00:28:14,360
answers the<font color="#CCCCCC"> backend service</font>

523
00:28:10,720 --> 00:28:17,630
another thing is front ello message we

524
00:28:14,360 --> 00:28:21,139
got an important hint the hint is that

525
00:28:17,630 --> 00:28:27,440
<font color="#E5E5E5">our request</font><font color="#CCCCCC"> past will be the past</font><font color="#E5E5E5"> info</font>

526
00:28:21,140 --> 00:28:29,380
in the<font color="#CCCCCC"> backend in the</font><font color="#E5E5E5"> ecstasy of n from</font>

527
00:28:27,440 --> 00:28:31,480
the Hank<font color="#CCCCCC"> we can construct</font><font color="#E5E5E5"> a server</font>

528
00:28:29,380 --> 00:28:34,790
configuration<font color="#E5E5E5"> in all night</font>

529
00:28:31,480 --> 00:28:37,970
engine<font color="#CCCCCC"> acts</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> reload the request to</font>

530
00:28:34,790 --> 00:28:41,060
pain<font color="#CCCCCC"> index thus the affair but</font><font color="#E5E5E5"> for the</font>

531
00:28:37,970 --> 00:28:44,030
data slash it will rest and<font color="#E5E5E5"> 400 arrow</font>

532
00:28:41,060 --> 00:28:48,080
because the past<font color="#E5E5E5"> jump out jump out of</font>

533
00:28:44,030 --> 00:28:49,340
the<font color="#E5E5E5"> web loot however our trick and</font>

534
00:28:48,080 --> 00:28:52,550
passed through the porosity<font color="#E5E5E5"> and</font>

535
00:28:49,340 --> 00:28:55,379
<font color="#E5E5E5">normalized the index does the</font><font color="#CCCCCC"> FN so we</font>

536
00:28:52,550 --> 00:28:59,409
can catch the load in<font color="#CCCCCC"> tomcat</font>

537
00:28:55,380 --> 00:29:02,350
as you seen the fair extension is CFN

538
00:28:59,410 --> 00:29:05,200
the<font color="#CCCCCC"> cold fusion knockout language</font><font color="#E5E5E5"> now</font>

539
00:29:02,350 --> 00:29:10,419
the extension we can<font color="#E5E5E5"> gas hot bacon</font>

540
00:29:05,200 --> 00:29:13,030
engine is it in this<font color="#E5E5E5"> case is it is</font>

541
00:29:10,420 --> 00:29:16,660
<font color="#E5E5E5">running under very low an open-sourced</font>

542
00:29:13,030 --> 00:29:18,970
<font color="#E5E5E5">CFN engine and from the</font><font color="#CCCCCC"> radar</font><font color="#E5E5E5"> menu we</font>

543
00:29:16,660 --> 00:29:22,810
also<font color="#E5E5E5"> note</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> management in the</font>

544
00:29:18,970 --> 00:29:26,890
fest<font color="#E5E5E5"> is under very low context / admin /</font>

545
00:29:22,810 --> 00:29:28,899
web<font color="#E5E5E5"> does the event this</font><font color="#CCCCCC"> is the</font>

546
00:29:26,890 --> 00:29:33,030
<font color="#CCCCCC">screenshot for the management in</font><font color="#E5E5E5"> the</font>

547
00:29:28,900 --> 00:29:33,030
first but did you find something<font color="#E5E5E5"> wrong</font>

548
00:29:33,360 --> 00:29:38,219
yes<font color="#E5E5E5"> the</font><font color="#CCCCCC"> interface just ask you</font><font color="#E5E5E5"> to set a</font>

549
00:29:36,700 --> 00:29:42,430
new password

550
00:29:38,220 --> 00:29:45,040
<font color="#E5E5E5">but it's</font><font color="#CCCCCC"> that easy</font><font color="#E5E5E5"> no the first</font><font color="#CCCCCC"> time I</font>

551
00:29:42,430 --> 00:29:49,060
thought it<font color="#E5E5E5"> was</font><font color="#CCCCCC"> not like this it's the</font>

552
00:29:45,040 --> 00:29:52,379
<font color="#CCCCCC">normal-looking patch however when i</font>

553
00:29:49,060 --> 00:29:57,399
<font color="#E5E5E5">refresh the</font><font color="#CCCCCC"> row ties</font><font color="#E5E5E5"> the patch changed</font>

554
00:29:52,380 --> 00:30:00,130
<font color="#E5E5E5">so hot small ways it with a little bit</font>

555
00:29:57,400 --> 00:30:02,890
<font color="#E5E5E5">in the investigation I think I find a</font>

556
00:30:00,130 --> 00:30:05,560
<font color="#CCCCCC">load close when</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> the large number of</font>

557
00:30:02,890 --> 00:30:09,370
the crossed the website will use the

558
00:30:05,560 --> 00:30:11,919
crowd to scale up automatically<font color="#E5E5E5"> the file</font>

559
00:30:09,370 --> 00:30:14,709
scaling up is seems<font color="#E5E5E5"> to forget to</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> the</font>

560
00:30:11,920 --> 00:30:17,940
<font color="#CCCCCC">password file</font><font color="#E5E5E5"> so this is the load</font><font color="#CCCCCC"> close</font>

561
00:30:14,710 --> 00:30:21,820
<font color="#E5E5E5">to invite you to</font><font color="#CCCCCC"> enter</font><font color="#E5E5E5"> the new password</font>

562
00:30:17,940 --> 00:30:25,720
however<font color="#E5E5E5"> not all instance are vulnerable</font>

563
00:30:21,820 --> 00:30:28,929
it seems to be only<font color="#CCCCCC"> 3 to</font><font color="#E5E5E5"> fat32 for</font>

564
00:30:25,720 --> 00:30:32,800
misconfigurations<font color="#E5E5E5"> so we only</font><font color="#CCCCCC"> have about</font>

565
00:30:28,930 --> 00:30:36,580
<font color="#E5E5E5">16 percent probability to see the to see</font>

566
00:30:32,800 --> 00:30:39,730
the new password page also that a

567
00:30:36,580 --> 00:30:42,220
successful the successful looking still

568
00:30:39,730 --> 00:30:46,000
is still not easy<font color="#E5E5E5"> because there is the</font>

569
00:30:42,220 --> 00:30:49,720
<font color="#E5E5E5">capture</font><font color="#CCCCCC"> in loading process and to make</font>

570
00:30:46,000 --> 00:30:52,360
<font color="#CCCCCC">things worse</font><font color="#E5E5E5"> every request to the</font><font color="#CCCCCC"> cloud</font>

571
00:30:49,720 --> 00:30:55,600
will<font color="#E5E5E5"> be dispatched Randall E to</font>

572
00:30:52,360 --> 00:30:57,939
different back-end servers<font color="#E5E5E5"> for example</font>

573
00:30:55,600 --> 00:31:00,490
if the server in this<font color="#CCCCCC"> brain</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> CAPTCHA</font>

574
00:30:57,940 --> 00:31:03,460
is different from the server<font color="#E5E5E5"> in</font>

575
00:31:00,490 --> 00:31:07,450
receiving the credential it will rest in

576
00:31:03,460 --> 00:31:08,710
<font color="#CCCCCC">wrong capture</font><font color="#E5E5E5"> arrow so it's just like</font>

577
00:31:07,450 --> 00:31:11,499
playing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lottery</font>

578
00:31:08,710 --> 00:31:14,590
we need to keep<font color="#E5E5E5"> the</font><font color="#CCCCCC"> station and put the</font>

579
00:31:11,499 --> 00:31:20,679
<font color="#E5E5E5">same server on both</font><font color="#CCCCCC"> capture and logging</font>

580
00:31:14,590 --> 00:31:23,529
process with with hundreds of<font color="#E5E5E5"> China</font>

581
00:31:20,679 --> 00:31:26,830
<font color="#E5E5E5">arrow we finally get into the manager</font>

582
00:31:23,529 --> 00:31:30,460
interface<font color="#E5E5E5"> once we</font><font color="#CCCCCC"> enter in</font><font color="#E5E5E5"> the face the</font>

583
00:31:26,830 --> 00:31:33,129
next question is how to pop our show<font color="#E5E5E5"> in</font>

584
00:31:30,460 --> 00:31:36,100
<font color="#CCCCCC">Vernal there are several</font><font color="#E5E5E5"> ways to pop up</font>

585
00:31:33,129 --> 00:31:38,949
pop our show<font color="#E5E5E5"> but due to the request</font>

586
00:31:36,100 --> 00:31:44,439
being<font color="#E5E5E5"> dispatched to different servers we</font>

587
00:31:38,950 --> 00:31:47,889
need to minify<font color="#E5E5E5"> our steps here which</font>

588
00:31:44,440 --> 00:31:50,619
shows log injection<font color="#CCCCCC"> reload suppose many</font>

589
00:31:47,889 --> 00:31:54,549
feature<font color="#E5E5E5"> one is the customized template</font>

590
00:31:50,619 --> 00:31:59,110
file<font color="#E5E5E5"> so we modified the</font><font color="#CCCCCC"> folio for pet to</font>

591
00:31:54,549 --> 00:32:01,779
exception that log<font color="#E5E5E5"> and then we need to</font>

592
00:31:59,110 --> 00:32:02,610
inject our malicious code<font color="#E5E5E5"> into exception</font>

593
00:32:01,779 --> 00:32:05,980
<font color="#E5E5E5">that load</font>

594
00:32:02,610 --> 00:32:10,059
however while exploring this we<font color="#CCCCCC"> fast</font>

595
00:32:05,980 --> 00:32:14,440
<font color="#CCCCCC">forward the log file is too large to be</font>

596
00:32:10,059 --> 00:32:17,139
<font color="#CCCCCC">as cute but did you remember the website</font>

597
00:32:14,440 --> 00:32:20,830
will<font color="#CCCCCC"> scale up when there</font><font color="#E5E5E5"> are lots of</font>

598
00:32:17,139 --> 00:32:23,498
requests so<font color="#CCCCCC"> that we can used heavy</font>

599
00:32:20,830 --> 00:32:28,320
<font color="#CCCCCC">requests to force the crowd launch a new</font>

600
00:32:23,499 --> 00:32:28,320
instance<font color="#E5E5E5"> and exploit on that instance</font>

601
00:32:29,009 --> 00:32:38,049
<font color="#CCCCCC">okay now every folder full page is our</font>

602
00:32:32,409 --> 00:32:40,960
<font color="#CCCCCC">backdoor and we got</font><font color="#E5E5E5"> a show back the last</font>

603
00:32:38,049 --> 00:32:44,019
is our<font color="#CCCCCC"> Amazon cast while searching</font><font color="#E5E5E5"> for</font>

604
00:32:40,960 --> 00:32:46,299
<font color="#E5E5E5">targets</font><font color="#CCCCCC"> we find a space shuttle men</font><font color="#E5E5E5"> from</font>

605
00:32:44,019 --> 00:32:49,929
<font color="#E5E5E5">the name is faced to be the cultivation</font>

606
00:32:46,299 --> 00:32:51,879
since<font color="#E5E5E5"> turned</font><font color="#CCCCCC"> into no</font><font color="#E5E5E5"> Purple's in</font><font color="#CCCCCC"> front</font>

607
00:32:49,929 --> 00:32:55,029
<font color="#CCCCCC">of copyright we noticed instant was</font>

608
00:32:51,879 --> 00:32:55,619
built from<font color="#E5E5E5"> an open source source project</font>

609
00:32:55,029 --> 00:32:58,570
Nastya

610
00:32:55,619 --> 00:33:01,649
nacio is a content management<font color="#CCCCCC"> system for</font>

611
00:32:58,570 --> 00:33:05,230
business application<font color="#E5E5E5"> is written in Java</font>

612
00:33:01,649 --> 00:33:07,600
in that time I<font color="#E5E5E5"> also I just want to</font>

613
00:33:05,230 --> 00:33:11,440
improve my<font color="#CCCCCC"> java</font><font color="#E5E5E5"> auditing skill so I</font>

614
00:33:07,600 --> 00:33:14,379
start review the code during<font color="#CCCCCC"> the code</font>

615
00:33:11,440 --> 00:33:19,600
<font color="#CCCCCC">review we find several</font><font color="#E5E5E5"> tiny bugs can</font><font color="#CCCCCC"> be</font>

616
00:33:14,379 --> 00:33:21,250
<font color="#CCCCCC">chained together</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> gain Co as fusion we</font>

617
00:33:19,600 --> 00:33:24,250
first look at<font color="#CCCCCC"> SS</font>

618
00:33:21,250 --> 00:33:28,060
control in nasty<font color="#CCCCCC"> oh I</font><font color="#E5E5E5"> auditing the sauce</font>

619
00:33:24,250 --> 00:33:30,730
we find a still<font color="#E5E5E5"> maps</font><font color="#CCCCCC"> Oh URL to a</font><font color="#E5E5E5"> spatial</font>

620
00:33:28,060 --> 00:33:35,290
authentication filter and the first part

621
00:33:30,730 --> 00:33:38,110
<font color="#E5E5E5">is lying on that from the filter we know</font>

622
00:33:35,290 --> 00:33:41,080
most pages required required<font color="#E5E5E5"> a valid</font>

623
00:33:38,110 --> 00:33:44,490
station but some entrances can bypass

624
00:33:41,080 --> 00:33:47,590
<font color="#E5E5E5">that such as</font><font color="#CCCCCC"> logging</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> ASP</font>

625
00:33:44,490 --> 00:33:49,960
but how<font color="#CCCCCC"> did the filter which freed</font>

626
00:33:47,590 --> 00:33:53,459
<font color="#CCCCCC">achieved the</font><font color="#E5E5E5"> current</font><font color="#CCCCCC"> patch -</font><font color="#E5E5E5"> compared</font>

627
00:33:49,960 --> 00:33:57,220
<font color="#E5E5E5">with</font><font color="#CCCCCC"> that we treat the path from</font>

628
00:33:53,460 --> 00:34:00,490
httpservletrequest<font color="#E5E5E5"> so how's the problem</font>

629
00:33:57,220 --> 00:34:03,250
in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> handle URL pass</font><font color="#E5E5E5"> permanent</font>

630
00:34:00,490 --> 00:34:08,590
nasty<font color="#E5E5E5"> Oh</font><font color="#CCCCCC"> Tron catch the pass</font><font color="#E5E5E5"> by</font>

631
00:34:03,250 --> 00:34:11,820
semicolon as I mentioned we firm the

632
00:34:08,590 --> 00:34:14,379
behavior in Europe has<font color="#E5E5E5"> pyramid values</font>

633
00:34:11,820 --> 00:34:17,470
<font color="#E5E5E5">every web server has</font><font color="#CCCCCC"> its own</font>

634
00:34:14,379 --> 00:34:20,020
implementation<font color="#E5E5E5"> the nasty old spray may</font>

635
00:34:17,469 --> 00:34:23,589
be safe in containers such as<font color="#CCCCCC"> white fry</font>

636
00:34:20,020 --> 00:34:27,040
and<font color="#CCCCCC"> WebLogic but now it's wrong</font><font color="#E5E5E5"> but now</font>

637
00:34:23,590 --> 00:34:29,440
it runs<font color="#E5E5E5"> under Tomcat the difference</font>

638
00:34:27,040 --> 00:34:33,100
between the nasty<font color="#CCCCCC"> oh and the Tomcat will</font>

639
00:34:29,440 --> 00:34:36,490
lead to security problems<font color="#E5E5E5"> so due to the</font>

640
00:34:33,100 --> 00:34:39,429
<font color="#E5E5E5">transaction we can forge a record that</font>

641
00:34:36,489 --> 00:34:42,219
<font color="#CCCCCC">matches the high list in SS control</font><font color="#E5E5E5"> but</font>

642
00:34:39,429 --> 00:34:48,429
<font color="#E5E5E5">rich reached an authorized area in</font>

643
00:34:42,219 --> 00:34:49,029
<font color="#CCCCCC">Nastya however we</font><font color="#E5E5E5"> still could</font><font color="#CCCCCC"> not do</font>

644
00:34:48,429 --> 00:34:52,570
anything

645
00:34:49,030 --> 00:34:55,270
in fact most patches return a null

646
00:34:52,570 --> 00:34:58,030
pointer exception because<font color="#E5E5E5"> the subway</font>

647
00:34:55,270 --> 00:35:01,060
logic was unable to<font color="#E5E5E5"> obtain a valid</font>

648
00:34:58,030 --> 00:35:04,120
credential but<font color="#E5E5E5"> this still give us</font><font color="#CCCCCC"> a</font>

649
00:35:01,060 --> 00:35:06,970
chance<font color="#CCCCCC"> to knock the door</font><font color="#E5E5E5"> from the</font>

650
00:35:04,120 --> 00:35:10,109
configuration<font color="#CCCCCC"> file we</font><font color="#E5E5E5"> noticed that how</font>

651
00:35:06,970 --> 00:35:13,290
the<font color="#CCCCCC"> nacio is based on sting framework I</font>

652
00:35:10,110 --> 00:35:16,890
have a review<font color="#E5E5E5"> thing several years ago</font>

653
00:35:13,290 --> 00:35:20,140
<font color="#CCCCCC">inside numbers</font><font color="#E5E5E5"> hacker friendly features</font>

654
00:35:16,890 --> 00:35:22,900
<font color="#E5E5E5">so for me the next step is training the</font>

655
00:35:20,140 --> 00:35:28,180
first part<font color="#E5E5E5"> to assess the unauthorized</font>

656
00:35:22,900 --> 00:35:31,030
<font color="#E5E5E5">things framework so let's talk about the</font>

657
00:35:28,180 --> 00:35:33,730
<font color="#CCCCCC">thin feature in</font><font color="#E5E5E5"> order to control the</font>

658
00:35:31,030 --> 00:35:34,320
<font color="#E5E5E5">browser sync framework introduces</font>

659
00:35:33,730 --> 00:35:38,340
serious

660
00:35:34,320 --> 00:35:41,220
of HTTP permit action<font color="#CCCCCC"> Meza</font><font color="#E5E5E5"> is one of</font>

661
00:35:38,340 --> 00:35:45,060
them<font color="#E5E5E5"> it can invoke specific expression</font>

662
00:35:41,220 --> 00:35:47,669
language from the Christian<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> this</font>

663
00:35:45,060 --> 00:35:50,850
dangerous<font color="#E5E5E5"> however there are some</font><font color="#CCCCCC"> three</font>

664
00:35:47,670 --> 00:35:54,150
<font color="#E5E5E5">conviction before</font><font color="#CCCCCC"> the invocation the</font>

665
00:35:50,850 --> 00:35:57,180
invoke expression language must<font color="#E5E5E5"> be in a</font>

666
00:35:54,150 --> 00:36:00,810
<font color="#E5E5E5">certain format and in a file</font><font color="#CCCCCC"> under</font>

667
00:35:57,180 --> 00:36:05,129
<font color="#CCCCCC">contact suit so example they taste a</font>

668
00:36:00,810 --> 00:36:08,640
file<font color="#CCCCCC"> named F Alta XHTML and you can</font>

669
00:36:05,130 --> 00:36:13,890
invoke the as<font color="#E5E5E5"> u tilde</font><font color="#CCCCCC"> escape by the</font>

670
00:36:08,640 --> 00:36:16,319
following<font color="#E5E5E5"> you by the following URL the</font>

671
00:36:13,890 --> 00:36:19,080
future looks good<font color="#CCCCCC"> you cannot control any</font>

672
00:36:16,320 --> 00:36:22,260
file on remote server<font color="#E5E5E5"> therefore</font><font color="#CCCCCC"> you can</font>

673
00:36:19,080 --> 00:36:25,049
invoke<font color="#E5E5E5"> any expression language however</font>

674
00:36:22,260 --> 00:36:28,370
<font color="#CCCCCC">it is one</font><font color="#E5E5E5"> more crazy feature to make</font>

675
00:36:25,050 --> 00:36:31,230
<font color="#E5E5E5">things worse if the previous invocation</font>

676
00:36:28,370 --> 00:36:33,810
<font color="#E5E5E5">returns the string and the string looks</font>

677
00:36:31,230 --> 00:36:37,740
like an<font color="#E5E5E5"> expression language same</font>

678
00:36:33,810 --> 00:36:42,450
framework<font color="#E5E5E5"> will invoke again yes</font>

679
00:36:37,740 --> 00:36:44,759
<font color="#CCCCCC">it's double</font><font color="#E5E5E5"> evaluation the first feature</font>

680
00:36:42,450 --> 00:36:51,000
is handlers for the<font color="#CCCCCC"> table</font><font color="#E5E5E5"> evaluation is</font>

681
00:36:44,760 --> 00:36:53,760
<font color="#CCCCCC">very</font><font color="#E5E5E5"> scary with the crazy feature if we</font>

682
00:36:51,000 --> 00:36:58,020
can control<font color="#E5E5E5"> the return value we can ask</font>

683
00:36:53,760 --> 00:37:00,510
you<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> arrow so we need to find a</font>

684
00:36:58,020 --> 00:37:03,630
good<font color="#CCCCCC"> captured this</font><font color="#E5E5E5"> is very similar</font><font color="#CCCCCC"> to</font>

685
00:37:00,510 --> 00:37:05,160
the LP oriented programming<font color="#E5E5E5"> return</font>

686
00:37:03,630 --> 00:37:08,130
oriented programming in binary

687
00:37:05,160 --> 00:37:10,890
exploitation<font color="#E5E5E5"> we choose the file with the</font>

688
00:37:08,130 --> 00:37:13,320
long net why we<font color="#CCCCCC"> choose</font><font color="#E5E5E5"> this it is</font>

689
00:37:10,890 --> 00:37:15,629
<font color="#E5E5E5">because the request packet pyramid</font>

690
00:37:13,320 --> 00:37:20,940
<font color="#E5E5E5">returns the string that we</font><font color="#CCCCCC"> can control</font>

691
00:37:15,630 --> 00:37:24,210
from<font color="#E5E5E5"> URL also</font><font color="#CCCCCC"> the whole tag is supposed</font>

692
00:37:20,940 --> 00:37:28,110
to assign a variable variable<font color="#E5E5E5"> which we</font>

693
00:37:24,210 --> 00:37:30,960
can still<font color="#E5E5E5"> ask you the partial check so</font>

694
00:37:28,110 --> 00:37:33,270
by chaining with the 1st SS control

695
00:37:30,960 --> 00:37:37,770
<font color="#CCCCCC">bypass we can now ask you to actually</font>

696
00:37:33,270 --> 00:37:40,560
arrow<font color="#E5E5E5"> we solve any authentication but</font>

697
00:37:37,770 --> 00:37:46,830
it's<font color="#E5E5E5"> still not over yet we fail to pop</font>

698
00:37:40,560 --> 00:37:47,920
our<font color="#E5E5E5"> shell sing also knows that</font><font color="#CCCCCC"> arrow is</font>

699
00:37:46,830 --> 00:37:50,190
risky

700
00:37:47,920 --> 00:37:54,369
so<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> practice</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> practice</font>

701
00:37:50,190 --> 00:37:57,250
<font color="#CCCCCC">invocations however is just as simple it</font>

702
00:37:54,369 --> 00:38:00,329
<font color="#E5E5E5">just a simple</font><font color="#CCCCCC"> string matching and we all</font>

703
00:37:57,250 --> 00:38:03,760
know<font color="#E5E5E5"> that practiced is always a bad idea</font>

704
00:38:00,329 --> 00:38:10,150
<font color="#CCCCCC">so we simply used a</font><font color="#E5E5E5"> real like operator</font>

705
00:38:03,760 --> 00:38:13,180
<font color="#E5E5E5">to avoid bad Peyton so let's summarize</font>

706
00:38:10,150 --> 00:38:15,819
<font color="#E5E5E5">our steps and chain all together</font><font color="#CCCCCC"> we</font>

707
00:38:13,180 --> 00:38:19,210
first<font color="#E5E5E5"> find a pest normalization but to</font>

708
00:38:15,819 --> 00:38:21,849
bypass the<font color="#CCCCCC"> SS control while</font><font color="#E5E5E5"> we can</font>

709
00:38:19,210 --> 00:38:25,329
<font color="#E5E5E5">insert</font><font color="#CCCCCC"> the PR authorize the scene sublet</font>

710
00:38:21,849 --> 00:38:27,700
we use the feature and choose a good

711
00:38:25,329 --> 00:38:33,040
<font color="#E5E5E5">catcher</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that we can control</font><font color="#CCCCCC"> the</font>

712
00:38:27,700 --> 00:38:36,009
<font color="#E5E5E5">return value we also prepare our steak</font>

713
00:38:33,040 --> 00:38:38,619
instead pay low in the<font color="#CCCCCC"> URL and use a</font>

714
00:38:36,010 --> 00:38:42,369
<font color="#E5E5E5">real light operator to bypass the break</font>

715
00:38:38,619 --> 00:38:45,609
list the last<font color="#E5E5E5"> step is</font><font color="#CCCCCC"> to write our show</font>

716
00:38:42,369 --> 00:38:49,780
code<font color="#E5E5E5"> with Java reflection</font><font color="#CCCCCC"> API and wait</font>

717
00:38:45,609 --> 00:38:52,029
for our show back so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

718
00:38:49,780 --> 00:38:56,040
overview<font color="#E5E5E5"> for</font><font color="#CCCCCC"> holder</font><font color="#E5E5E5"> X for you</font><font color="#CCCCCC"> I will</font>

719
00:38:52,030 --> 00:38:56,040
explain each<font color="#E5E5E5"> path one by one in detail</font>

720
00:38:56,880 --> 00:39:02,500
first the yellow highlight is the<font color="#E5E5E5"> SS</font>

721
00:38:59,859 --> 00:39:05,710
controlled I passed in<font color="#E5E5E5"> order to bypass</font>

722
00:39:02,500 --> 00:39:11,349
<font color="#E5E5E5">the file list which shows login dot ASP</font>

723
00:39:05,710 --> 00:39:14,559
was our prefix<font color="#CCCCCC"> NASA</font><font color="#E5E5E5"> will scan all the</font>

724
00:39:11,349 --> 00:39:18,190
<font color="#E5E5E5">request path and chunk at until the</font>

725
00:39:14,559 --> 00:39:20,440
first semicolon<font color="#E5E5E5"> due</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> inconsistency</font>

726
00:39:18,190 --> 00:39:23,200
between osteo<font color="#E5E5E5"> and the container we can</font>

727
00:39:20,440 --> 00:39:27,400
<font color="#CCCCCC">bypass the authentication and hash the</font>

728
00:39:23,200 --> 00:39:30,069
create file<font color="#E5E5E5"> to XHTML we choose this file</font>

729
00:39:27,400 --> 00:39:34,180
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will be handled by</font><font color="#CCCCCC"> Sting</font>

730
00:39:30,069 --> 00:39:36,970
framework once we can touch the<font color="#CCCCCC"> since</font>

731
00:39:34,180 --> 00:39:39,190
<font color="#CCCCCC">tablet we use the action</font><font color="#E5E5E5"> mr. to invoke</font>

732
00:39:36,970 --> 00:39:42,129
<font color="#CCCCCC">pasture expression language in an own</font>

733
00:39:39,190 --> 00:39:45,099
file here we choose<font color="#CCCCCC"> the featured</font><font color="#E5E5E5"> and the</font>

734
00:39:42,130 --> 00:39:48,640
under file with a long name<font color="#CCCCCC"> so high we</font>

735
00:39:45,099 --> 00:39:51,819
<font color="#CCCCCC">choose this is</font><font color="#E5E5E5"> because the return value</font>

736
00:39:48,640 --> 00:39:55,839
<font color="#E5E5E5">of the cross request target pyramid is a</font>

737
00:39:51,819 --> 00:39:58,450
string and we can<font color="#E5E5E5"> control from URL so we</font>

738
00:39:55,839 --> 00:40:00,910
prepared our second stage<font color="#CCCCCC"> payload in the</font>

739
00:39:58,450 --> 00:40:04,180
query<font color="#E5E5E5"> string directory name for</font>

740
00:40:00,910 --> 00:40:06,549
<font color="#CCCCCC">hop up</font><font color="#E5E5E5"> as the crazy feature</font><font color="#CCCCCC"> thing</font>

741
00:40:04,180 --> 00:40:10,810
framework will<font color="#CCCCCC"> involve</font><font color="#E5E5E5"> value</font><font color="#CCCCCC"> as the</font>

742
00:40:06,550 --> 00:40:13,240
<font color="#CCCCCC">expression language</font><font color="#E5E5E5"> again in order</font><font color="#CCCCCC"> to</font>

743
00:40:10,810 --> 00:40:16,779
avoid bad pattern we use a very light

744
00:40:13,240 --> 00:40:19,540
operator<font color="#E5E5E5"> to bypass the break list we</font>

745
00:40:16,780 --> 00:40:21,970
also use<font color="#CCCCCC"> trouble diffraction</font><font color="#E5E5E5"> API to get</font>

746
00:40:19,540 --> 00:40:26,290
<font color="#E5E5E5">all maesters from Java</font><font color="#CCCCCC"> the link and</font>

747
00:40:21,970 --> 00:40:28,540
<font color="#CCCCCC">runtime the element in</font><font color="#E5E5E5"> text 7 is the</font>

748
00:40:26,290 --> 00:40:32,050
<font color="#E5E5E5">Mesa get run</font><font color="#CCCCCC"> tight to return home to</font>

749
00:40:28,540 --> 00:40:37,420
observe and the<font color="#CCCCCC"> in depth 15 is the</font><font color="#E5E5E5"> Mesa</font>

750
00:40:32,050 --> 00:40:39,460
<font color="#E5E5E5">efcc with a string type argument</font><font color="#CCCCCC"> okay</font>

751
00:40:37,420 --> 00:40:41,470
the<font color="#CCCCCC"> last thing</font><font color="#E5E5E5"> is the show come in here</font>

752
00:40:39,460 --> 00:40:49,240
we would<font color="#CCCCCC"> like to putt-putt a shirt back</font>

753
00:40:41,470 --> 00:40:52,149
and<font color="#CCCCCC"> we got a shoe okay so how to prevent</font>

754
00:40:49,240 --> 00:40:55,000
<font color="#E5E5E5">this</font><font color="#CCCCCC"> type of attack this is how to fix</font>

755
00:40:52,150 --> 00:40:57,700
because<font color="#CCCCCC"> the</font><font color="#E5E5E5"> URL path parameter is the</font>

756
00:40:55,000 --> 00:41:01,180
normal feature and not<font color="#CCCCCC"> a back in each</font>

757
00:40:57,700 --> 00:41:04,210
side according<font color="#CCCCCC"> to my</font><font color="#E5E5E5"> experience in</font>

758
00:41:01,180 --> 00:41:06,910
<font color="#CCCCCC">Berkeley protein most vendors cannot</font>

759
00:41:04,210 --> 00:41:10,900
patch the book completely<font color="#E5E5E5"> in the first</font>

760
00:41:06,910 --> 00:41:14,290
time<font color="#CCCCCC"> their patch is by possible so</font>

761
00:41:10,900 --> 00:41:16,260
immediate from two aspects one is to

762
00:41:14,290 --> 00:41:18,910
<font color="#CCCCCC">isolate your</font><font color="#E5E5E5"> back-end application</font>

763
00:41:16,260 --> 00:41:21,610
remove management in the<font color="#CCCCCC"> first and other</font>

764
00:41:18,910 --> 00:41:24,730
<font color="#CCCCCC">contexts from your</font><font color="#E5E5E5"> Java container and</font>

765
00:41:21,610 --> 00:41:27,330
the second is to<font color="#E5E5E5"> ensure the behavior</font>

766
00:41:24,730 --> 00:41:30,370
between<font color="#E5E5E5"> the proxy and</font><font color="#CCCCCC"> back-end</font><font color="#E5E5E5"> servers</font>

767
00:41:27,330 --> 00:41:32,860
but<font color="#E5E5E5"> it says there is no directive to</font>

768
00:41:30,370 --> 00:41:34,779
<font color="#E5E5E5">disable the feature so I write a patch</font>

769
00:41:32,860 --> 00:41:40,000
for dead you can check the hyperlink

770
00:41:34,780 --> 00:41:42,070
after this talk<font color="#CCCCCC"> ok summary in this talk</font>

771
00:41:40,000 --> 00:41:44,430
we first show the branch site about<font color="#E5E5E5"> the</font>

772
00:41:42,070 --> 00:41:47,260
<font color="#E5E5E5">past posture and personalization</font>

773
00:41:44,430 --> 00:41:51,370
<font color="#E5E5E5">including the inconsistency is use</font>

774
00:41:47,260 --> 00:41:53,290
<font color="#CCCCCC">Meister</font><font color="#E5E5E5"> and of PI slash problem then we</font>

775
00:41:51,370 --> 00:41:55,060
<font color="#CCCCCC">introduce a new attack surfaced on the</font>

776
00:41:53,290 --> 00:41:58,029
<font color="#CCCCCC">reverse</font><font color="#E5E5E5"> proxy architecture that can</font>

777
00:41:55,060 --> 00:42:01,029
bypass<font color="#CCCCCC"> disease control</font><font color="#E5E5E5"> and as</font><font color="#CCCCCC"> gap from</font>

778
00:41:58,030 --> 00:42:03,730
<font color="#E5E5E5">the</font><font color="#CCCCCC"> contact may be the last we saw</font>

779
00:42:01,030 --> 00:42:08,250
<font color="#E5E5E5">several case studies are not</font><font color="#CCCCCC"> only web</font>

780
00:42:03,730 --> 00:42:11,560
applications and bug bounty programs

781
00:42:08,250 --> 00:42:13,270
here's the reference<font color="#CCCCCC"> ok</font>

782
00:42:11,560 --> 00:42:14,660
the last page<font color="#E5E5E5"> here is my contact</font>

783
00:42:13,270 --> 00:42:16,730
<font color="#E5E5E5">information</font>

784
00:42:14,660 --> 00:42:19,120
let me let<font color="#CCCCCC"> me let me know if you have</font>

785
00:42:16,730 --> 00:42:21,290
any further<font color="#CCCCCC"> question or new</font><font color="#E5E5E5"> failings</font>

786
00:42:19,120 --> 00:42:24,470
<font color="#E5E5E5">also we</font><font color="#CCCCCC"> will only release the whole</font>

787
00:42:21,290 --> 00:42:26,480
story of our case study<font color="#E5E5E5"> in my blog you</font>

788
00:42:24,470 --> 00:42:29,899
can follow my<font color="#E5E5E5"> Twitter</font><font color="#CCCCCC"> too not to know</font>

789
00:42:26,480 --> 00:42:31,910
the<font color="#E5E5E5"> latest post this is the end of my</font>

790
00:42:29,900 --> 00:42:33,020
presentations thank you for being<font color="#E5E5E5"> here</font>

791
00:42:31,910 --> 00:42:35,908
<font color="#CCCCCC">thanks</font>

792
00:42:33,020 --> 00:42:35,909
[Applause]

