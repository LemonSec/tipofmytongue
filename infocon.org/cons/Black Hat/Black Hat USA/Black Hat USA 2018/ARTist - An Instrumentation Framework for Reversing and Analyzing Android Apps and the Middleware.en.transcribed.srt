1
00:00:00,030 --> 00:00:03,480
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so thanks for introduction and</font>

2
00:00:01,829 --> 00:00:05,700
thanks to everyone<font color="#CCCCCC"> for coming that early</font>

3
00:00:03,480 --> 00:00:07,740
to my talk<font color="#CCCCCC"> so today I'm going</font><font color="#E5E5E5"> to talk</font>

4
00:00:05,700 --> 00:00:09,300
about<font color="#E5E5E5"> a novel instrumentation framework</font>

5
00:00:07,740 --> 00:00:11,160
called artists<font color="#E5E5E5"> Android runtime</font>

6
00:00:09,300 --> 00:00:13,110
instrumentation<font color="#CCCCCC"> Institute</font><font color="#E5E5E5"> security</font>

7
00:00:11,160 --> 00:00:15,389
toolkit<font color="#CCCCCC"> little actually joined work</font><font color="#E5E5E5"> with</font>

8
00:00:13,110 --> 00:00:17,820
my fellow<font color="#E5E5E5"> colleagues from Cisco so a few</font>

9
00:00:15,389 --> 00:00:19,619
words<font color="#CCCCCC"> about</font><font color="#E5E5E5"> myself</font><font color="#CCCCCC"> I'm a PhD student at</font>

10
00:00:17,820 --> 00:00:21,090
<font color="#CCCCCC">the</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> Bahaman Center AG which</font><font color="#E5E5E5"> is a</font>

11
00:00:19,619 --> 00:00:23,609
large research<font color="#E5E5E5"> site and Germany Korea</font>

12
00:00:21,090 --> 00:00:26,189
<font color="#CCCCCC">McCurley billion build it</font><font color="#E5E5E5"> up and my</font>

13
00:00:23,609 --> 00:00:28,019
research focus<font color="#E5E5E5"> is on Android security in</font>

14
00:00:26,189 --> 00:00:30,029
particular<font color="#CCCCCC"> creating solutions that are</font>

15
00:00:28,019 --> 00:00:31,380
<font color="#E5E5E5">working on the</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> player only so no</font>

16
00:00:30,029 --> 00:00:33,420
changes the operating system and<font color="#CCCCCC"> no</font>

17
00:00:31,380 --> 00:00:35,100
flashing and so on so<font color="#E5E5E5"> I'm also software</font>

18
00:00:33,420 --> 00:00:37,950
engineer and occasionally<font color="#E5E5E5"> pen tester at</font>

19
00:00:35,100 --> 00:00:39,360
the<font color="#CCCCCC"> pocket SRT company and I'm a</font>

20
00:00:37,950 --> 00:00:40,829
founding member of a local CTF team

21
00:00:39,360 --> 00:00:43,440
called<font color="#CCCCCC"> sour sake of the southern</font>

22
00:00:40,829 --> 00:00:44,730
<font color="#CCCCCC">university some</font><font color="#E5E5E5"> frequent conference</font>

23
00:00:43,440 --> 00:00:47,730
attendee and speaker mostly academic

24
00:00:44,730 --> 00:00:49,468
<font color="#E5E5E5">conferences like</font><font color="#CCCCCC"> CCS u6</font><font color="#E5E5E5"> on but this year</font>

25
00:00:47,730 --> 00:00:52,050
also<font color="#E5E5E5"> things like droidcon and is</font>

26
00:00:49,469 --> 00:00:53,969
<font color="#E5E5E5">actually my first black</font><font color="#CCCCCC"> Hedgehog</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> i'm</font>

27
00:00:52,050 --> 00:00:57,300
general very passionate about all<font color="#E5E5E5"> topics</font>

28
00:00:53,969 --> 00:00:58,829
of ready to<font color="#E5E5E5"> security any kind all right</font>

29
00:00:57,300 --> 00:01:01,169
so let's actually start<font color="#E5E5E5"> with the talk</font>

30
00:00:58,829 --> 00:01:02,910
here the thing<font color="#CCCCCC"> that I'm talking about</font>

31
00:01:01,170 --> 00:01:04,500
<font color="#CCCCCC">Epis fermentation well the first thing</font>

32
00:01:02,910 --> 00:01:06,210
<font color="#E5E5E5">that might come</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> your mind is there</font>

33
00:01:04,500 --> 00:01:08,729
are already frameworks that<font color="#E5E5E5"> can do that</font>

34
00:01:06,210 --> 00:01:12,899
so quick question<font color="#E5E5E5"> how many of you do</font>

35
00:01:08,729 --> 00:01:15,030
know<font color="#E5E5E5"> it's posts and for freedom</font><font color="#CCCCCC"> that's</font>

36
00:01:12,900 --> 00:01:16,049
<font color="#E5E5E5">quite a lot so in order to answer that</font>

37
00:01:15,030 --> 00:01:17,850
<font color="#E5E5E5">question why do we need another</font>

38
00:01:16,049 --> 00:01:19,590
instrumentation framework<font color="#CCCCCC"> I'll very</font>

39
00:01:17,850 --> 00:01:21,720
briefly explain how both<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them are</font>

40
00:01:19,590 --> 00:01:23,400
<font color="#CCCCCC">actually working I will talk a little</font>

41
00:01:21,720 --> 00:01:25,200
<font color="#E5E5E5">bit about their disadvantages and then</font>

42
00:01:23,400 --> 00:01:26,960
move over to why artists can improve

43
00:01:25,200 --> 00:01:30,540
<font color="#E5E5E5">upon the current state of the</font><font color="#CCCCCC"> art here</font>

44
00:01:26,960 --> 00:01:32,280
<font color="#CCCCCC">all right so very briefly um exposed is</font>

45
00:01:30,540 --> 00:01:33,900
a really<font color="#E5E5E5"> great framework and the basic</font>

46
00:01:32,280 --> 00:01:36,810
idea<font color="#CCCCCC"> is that it's overriding the</font><font color="#E5E5E5"> so</font>

47
00:01:33,900 --> 00:01:38,520
<font color="#E5E5E5">called at process on</font><font color="#CCCCCC"> Android so this I</font>

48
00:01:36,810 --> 00:01:39,750
go<font color="#CCCCCC"> deep</font><font color="#E5E5E5"> process it's kind</font><font color="#CCCCCC"> of the base</font>

49
00:01:38,520 --> 00:01:41,970
process that is loading a lot<font color="#E5E5E5"> of</font>

50
00:01:39,750 --> 00:01:43,680
<font color="#E5E5E5">libraries and it's kind of a</font><font color="#CCCCCC"> pre-warmed</font>

51
00:01:41,970 --> 00:01:46,500
at process which means<font color="#E5E5E5"> whenever an</font>

52
00:01:43,680 --> 00:01:48,750
application is<font color="#E5E5E5"> started</font><font color="#CCCCCC"> the app process</font>

53
00:01:46,500 --> 00:01:51,090
is forked and then the new application

54
00:01:48,750 --> 00:01:52,409
code is dynamically loaded<font color="#E5E5E5"> and they do</font>

55
00:01:51,090 --> 00:01:54,149
every post<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that they overwrite</font>

56
00:01:52,409 --> 00:01:56,189
<font color="#CCCCCC">two-step process</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> add own code here</font>

57
00:01:54,149 --> 00:01:58,229
which means this code is carrying over

58
00:01:56,189 --> 00:02:01,048
<font color="#E5E5E5">to H single applications and also</font><font color="#CCCCCC"> the</font>

59
00:01:58,229 --> 00:02:03,149
system server by definition<font color="#E5E5E5"> so the good</font>

60
00:02:01,049 --> 00:02:04,710
thing<font color="#CCCCCC"> here is we can have we can unhook</font>

61
00:02:03,149 --> 00:02:06,719
apps and<font color="#E5E5E5"> also the system server and</font>

62
00:02:04,710 --> 00:02:08,250
other<font color="#E5E5E5"> components</font><font color="#CCCCCC"> on Android but as</font>

63
00:02:06,719 --> 00:02:10,139
promised I<font color="#E5E5E5"> will talk a little bit</font><font color="#CCCCCC"> more</font>

64
00:02:08,250 --> 00:02:11,819
about the<font color="#CCCCCC"> disadvantages here so we can</font>

65
00:02:10,139 --> 00:02:12,980
actually kind<font color="#E5E5E5"> of talk about how to</font>

66
00:02:11,819 --> 00:02:14,958
<font color="#E5E5E5">improve here</font>

67
00:02:12,980 --> 00:02:17,349
<font color="#CCCCCC">there's actually three things I want</font><font color="#E5E5E5"> to</font>

68
00:02:14,959 --> 00:02:20,060
talk<font color="#E5E5E5"> about the first one is performance</font>

69
00:02:17,349 --> 00:02:22,369
because<font color="#CCCCCC"> the best of my knowledge exposed</font>

70
00:02:20,060 --> 00:02:24,409
is kind<font color="#E5E5E5"> of hooking all methods and then</font>

71
00:02:22,370 --> 00:02:25,940
multiplexing them through a single API

72
00:02:24,409 --> 00:02:27,920
<font color="#E5E5E5">whereas checking it for this method</font>

73
00:02:25,940 --> 00:02:30,650
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is a hook</font><font color="#E5E5E5"> and if yes the hook is</font>

74
00:02:27,920 --> 00:02:32,268
executed and if no<font color="#CCCCCC"> then the original</font>

75
00:02:30,650 --> 00:02:34,940
<font color="#E5E5E5">effort is executed so you lose some</font>

76
00:02:32,269 --> 00:02:37,700
performance here<font color="#E5E5E5"> second talking</font><font color="#CCCCCC"> about</font>

77
00:02:34,940 --> 00:02:39,109
<font color="#E5E5E5">the granularity</font><font color="#CCCCCC"> the idea is that</font><font color="#E5E5E5"> you can</font>

78
00:02:37,700 --> 00:02:41,000
<font color="#E5E5E5">hook methods</font><font color="#CCCCCC"> but you kind of</font><font color="#E5E5E5"> just</font>

79
00:02:39,110 --> 00:02:42,650
<font color="#CCCCCC">exchange single instructions which mean</font>

80
00:02:41,000 --> 00:02:43,790
which means it's actually<font color="#CCCCCC"> none</font>

81
00:02:42,650 --> 00:02:46,010
instrumentation but<font color="#E5E5E5"> the hooking</font>

82
00:02:43,790 --> 00:02:48,859
framework<font color="#E5E5E5"> and the third thing and this</font>

83
00:02:46,010 --> 00:02:50,899
came to as a surprise<font color="#CCCCCC"> to me is that</font>

84
00:02:48,860 --> 00:02:52,879
<font color="#CCCCCC">always all the modules</font><font color="#E5E5E5"> are executed in</font>

85
00:02:50,900 --> 00:02:54,379
each single<font color="#E5E5E5"> a process which means if you</font>

86
00:02:52,879 --> 00:02:56,480
<font color="#E5E5E5">have for example</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> switch at blocker</font>

87
00:02:54,379 --> 00:02:58,700
<font color="#E5E5E5">which I suppose is an ad blocker for</font>

88
00:02:56,480 --> 00:03:00,349
<font color="#E5E5E5">twitch this one is also run in the</font>

89
00:02:58,700 --> 00:03:01,640
system server<font color="#CCCCCC"> in switch but also your</font>

90
00:03:00,349 --> 00:03:03,679
banking app your Facebook<font color="#E5E5E5"> and your</font>

91
00:03:01,640 --> 00:03:05,809
Twitter<font color="#E5E5E5"> and the basic</font><font color="#CCCCCC"> idea here</font><font color="#E5E5E5"> is that</font>

92
00:03:03,680 --> 00:03:07,760
you<font color="#E5E5E5"> execute the modules and they by</font>

93
00:03:05,810 --> 00:03:09,709
themselves<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to decide if they want</font>

94
00:03:07,760 --> 00:03:11,629
<font color="#CCCCCC">to run</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> current process or not</font><font color="#E5E5E5"> so</font>

95
00:03:09,709 --> 00:03:14,000
you<font color="#E5E5E5"> put some trust assumptions here into</font>

96
00:03:11,629 --> 00:03:16,459
the modules so how do you deploy<font color="#E5E5E5"> it is</font>

97
00:03:14,000 --> 00:03:20,030
actually basic<font color="#CCCCCC"> idea is you</font><font color="#E5E5E5"> flash this by</font>

98
00:03:16,459 --> 00:03:21,349
<font color="#E5E5E5">a custom a</font><font color="#CCCCCC"> custom recovery so</font><font color="#E5E5E5"> you need</font>

99
00:03:20,030 --> 00:03:24,230
an<font color="#CCCCCC"> unlock bootloader but it's just</font><font color="#E5E5E5"> not</font>

100
00:03:21,349 --> 00:03:26,599
<font color="#E5E5E5">possible for all devices and if I have a</font>

101
00:03:24,230 --> 00:03:28,518
quick<font color="#CCCCCC"> conclusion here</font><font color="#E5E5E5"> then we use expose</font>

102
00:03:26,599 --> 00:03:30,500
for persistent modifications kind of the

103
00:03:28,519 --> 00:03:33,049
<font color="#E5E5E5">modules and this is only possible for</font>

104
00:03:30,500 --> 00:03:34,849
<font color="#E5E5E5">power users because you need to unlock</font>

105
00:03:33,049 --> 00:03:37,579
device and you need<font color="#E5E5E5"> root and it's not</font>

106
00:03:34,849 --> 00:03:39,349
quite easy for<font color="#CCCCCC"> the lemon user if you</font>

107
00:03:37,579 --> 00:03:40,819
compare this actually to freedom then we

108
00:03:39,349 --> 00:03:43,459
have a<font color="#E5E5E5"> different approach</font><font color="#CCCCCC"> here because</font>

109
00:03:40,819 --> 00:03:45,858
free<font color="#CCCCCC"> is injecting the</font><font color="#E5E5E5"> JavaScript engine</font>

110
00:03:43,459 --> 00:03:49,010
of<font color="#CCCCCC"> Chrome into</font><font color="#E5E5E5"> running processes so</font><font color="#CCCCCC"> do</font>

111
00:03:45,859 --> 00:03:51,739
v8 and here<font color="#CCCCCC"> again we can not only hook</font>

112
00:03:49,010 --> 00:03:53,450
apps but<font color="#CCCCCC"> also any process and there's</font>

113
00:03:51,739 --> 00:03:54,919
actually a<font color="#E5E5E5"> great</font><font color="#CCCCCC"> thing here</font><font color="#E5E5E5"> but once</font>

114
00:03:53,450 --> 00:03:58,160
again<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> make a little bit</font><font color="#E5E5E5"> about the</font>

115
00:03:54,919 --> 00:03:59,510
<font color="#E5E5E5">disadvantages</font><font color="#CCCCCC"> so in this case we have a</font>

116
00:03:58,160 --> 00:04:00,709
<font color="#CCCCCC">performance loss because we're</font><font color="#E5E5E5"> going</font>

117
00:03:59,510 --> 00:04:03,470
<font color="#CCCCCC">through</font><font color="#E5E5E5"> an additional virtual machine</font>

118
00:04:00,709 --> 00:04:04,819
and also kernel energy it is<font color="#E5E5E5"> again</font>

119
00:04:03,470 --> 00:04:06,319
because<font color="#E5E5E5"> this is a hooking framework</font>

120
00:04:04,819 --> 00:04:07,730
<font color="#E5E5E5">which means you have the really big</font>

121
00:04:06,319 --> 00:04:09,768
method and you just want<font color="#E5E5E5"> to change the</font>

122
00:04:07,730 --> 00:04:12,470
<font color="#E5E5E5">tiny bit</font><font color="#CCCCCC"> above that for example</font><font color="#E5E5E5"> you want</font>

123
00:04:09,769 --> 00:04:13,940
<font color="#E5E5E5">to kind of revert a condition or change</font>

124
00:04:12,470 --> 00:04:15,799
the string or just replace<font color="#E5E5E5"> any</font>

125
00:04:13,940 --> 00:04:19,250
instruction<font color="#E5E5E5"> then you have to hook the</font>

126
00:04:15,799 --> 00:04:21,140
method then actually rewrite the<font color="#E5E5E5"> whole</font>

127
00:04:19,250 --> 00:04:24,169
method<font color="#E5E5E5"> in for freedom</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> JavaScript</font>

128
00:04:21,140 --> 00:04:26,060
<font color="#E5E5E5">and then change the single detail so</font><font color="#CCCCCC"> I</font>

129
00:04:24,169 --> 00:04:26,719
<font color="#CCCCCC">was thus employed well</font><font color="#E5E5E5"> you either have</font>

130
00:04:26,060 --> 00:04:28,820
this big

131
00:04:26,720 --> 00:04:30,650
<font color="#E5E5E5">running on your device on the route and</font>

132
00:04:28,820 --> 00:04:32,960
<font color="#E5E5E5">this is injecting the</font><font color="#CCCCCC"> Frida's stuff into</font>

133
00:04:30,650 --> 00:04:34,669
running processes<font color="#CCCCCC"> or you add this by</font>

134
00:04:32,960 --> 00:04:36,859
hand<font color="#CCCCCC"> bike</font><font color="#E5E5E5"> using the</font><font color="#CCCCCC"> so called</font><font color="#E5E5E5"> freely</font><font color="#CCCCCC"> a</font>

135
00:04:34,670 --> 00:04:38,330
gadget<font color="#CCCCCC"> but again to the best</font><font color="#E5E5E5"> of my</font>

136
00:04:36,860 --> 00:04:41,270
knowledge in<font color="#E5E5E5"> both cases you either need</font>

137
00:04:38,330 --> 00:04:43,789
to<font color="#E5E5E5"> disable</font><font color="#CCCCCC"> SELinux or you need</font><font color="#E5E5E5"> to kind</font>

138
00:04:41,270 --> 00:04:46,430
<font color="#E5E5E5">of add additional whitelist entries for</font>

139
00:04:43,790 --> 00:04:47,840
<font color="#E5E5E5">that on Patchett so in this case</font>

140
00:04:46,430 --> 00:04:49,400
compared to expose we're talking about

141
00:04:47,840 --> 00:04:51,469
<font color="#E5E5E5">temporary changes because you're only</font>

142
00:04:49,400 --> 00:04:52,789
doing<font color="#E5E5E5"> this to a running process and this</font>

143
00:04:51,470 --> 00:04:55,520
<font color="#E5E5E5">is never persisted back to the file</font>

144
00:04:52,790 --> 00:04:57,860
<font color="#E5E5E5">system</font><font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> more meant for kind of</font>

145
00:04:55,520 --> 00:04:58,130
analysts and security pen testers<font color="#E5E5E5"> and so</font>

146
00:04:57,860 --> 00:05:01,880
on

147
00:04:58,130 --> 00:05:04,159
not really power users or<font color="#E5E5E5"> motors okay so</font>

148
00:05:01,880 --> 00:05:05,510
let's put<font color="#E5E5E5"> those two in perspective if we</font>

149
00:05:04,160 --> 00:05:07,490
<font color="#E5E5E5">have a look at installation process we</font>

150
00:05:05,510 --> 00:05:08,480
can soon see<font color="#E5E5E5"> how</font><font color="#CCCCCC"> actually both of them</font>

151
00:05:07,490 --> 00:05:10,880
relate<font color="#E5E5E5"> to each other</font>

152
00:05:08,480 --> 00:05:13,400
so everything<font color="#E5E5E5"> in Android start with apk</font>

153
00:05:10,880 --> 00:05:15,740
we have the Dex<font color="#CCCCCC"> bytecode we have a</font>

154
00:05:13,400 --> 00:05:17,390
signature on<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then the</font><font color="#CCCCCC"> signature</font>

155
00:05:15,740 --> 00:05:19,430
<font color="#E5E5E5">is verified and</font><font color="#CCCCCC"> it's very important that</font>

156
00:05:17,390 --> 00:05:21,320
after<font color="#E5E5E5"> the signature verification then</font>

157
00:05:19,430 --> 00:05:23,210
the<font color="#CCCCCC"> optimisation kicks in and is</font>

158
00:05:21,320 --> 00:05:24,669
creating kind<font color="#E5E5E5"> of an optimized version</font><font color="#CCCCCC"> of</font>

159
00:05:23,210 --> 00:05:27,590
the app<font color="#E5E5E5"> so keep that in mind</font><font color="#CCCCCC"> for later</font>

160
00:05:24,669 --> 00:05:30,140
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so at runtime we have the app</font>

161
00:05:27,590 --> 00:05:32,030
process and it is<font color="#CCCCCC"> Forge</font><font color="#E5E5E5"> for the app and</font>

162
00:05:30,140 --> 00:05:34,520
this app is loading this optimized

163
00:05:32,030 --> 00:05:36,950
version so where it's<font color="#E5E5E5"> exposed actually</font>

164
00:05:34,520 --> 00:05:39,500
as<font color="#E5E5E5"> you can see exposed is mentioned</font>

165
00:05:36,950 --> 00:05:41,180
earlier in this app process and<font color="#CCCCCC"> fork</font>

166
00:05:39,500 --> 00:05:43,900
during the fork it's carrying<font color="#E5E5E5"> over to</font>

167
00:05:41,180 --> 00:05:46,100
the<font color="#E5E5E5"> app freedom and contrast is</font>

168
00:05:43,900 --> 00:05:47,450
operating at<font color="#E5E5E5"> this point here because</font>

169
00:05:46,100 --> 00:05:50,330
<font color="#CCCCCC">they are injecting</font><font color="#E5E5E5"> into an already</font>

170
00:05:47,450 --> 00:05:53,060
running<font color="#E5E5E5"> process and if you have a look</font>

171
00:05:50,330 --> 00:05:55,190
<font color="#E5E5E5">at</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> of them are</font><font color="#CCCCCC"> working on for</font>

172
00:05:53,060 --> 00:05:56,510
actually<font color="#E5E5E5"> running processes in order to</font>

173
00:05:55,190 --> 00:05:58,250
improve upon<font color="#CCCCCC"> the</font><font color="#E5E5E5"> current state of the</font>

174
00:05:56,510 --> 00:06:01,010
art<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that we want to lift this</font>

175
00:05:58,250 --> 00:06:02,960
up<font color="#E5E5E5"> one layer so the idea</font><font color="#CCCCCC"> here is that</font>

176
00:06:01,010 --> 00:06:05,450
artists actually<font color="#E5E5E5"> not running at runtime</font>

177
00:06:02,960 --> 00:06:07,880
of<font color="#E5E5E5"> those apps but we have chosen this</font>

178
00:06:05,450 --> 00:06:10,580
optimization step to be beneficial<font color="#CCCCCC"> for</font>

179
00:06:07,880 --> 00:06:12,350
us<font color="#E5E5E5"> and on devices running Android</font>

180
00:06:10,580 --> 00:06:14,570
<font color="#CCCCCC">runtime so everything from</font><font color="#E5E5E5"> Android 5</font>

181
00:06:12,350 --> 00:06:17,090
this optimization step is guided by a

182
00:06:14,570 --> 00:06:19,159
tool called<font color="#E5E5E5"> text</font><font color="#CCCCCC"> wrote and I will now</font>

183
00:06:17,090 --> 00:06:21,080
tell<font color="#CCCCCC"> you</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> Xcode</font><font color="#E5E5E5"> is what it's doing</font>

184
00:06:19,160 --> 00:06:23,570
and how we create<font color="#CCCCCC"> artist based</font><font color="#E5E5E5"> index</font>

185
00:06:21,080 --> 00:06:26,419
<font color="#E5E5E5">node actually how</font><font color="#CCCCCC"> we'll improve</font><font color="#E5E5E5"> upon the</font>

186
00:06:23,570 --> 00:06:29,150
existing frameworks so for Android

187
00:06:26,419 --> 00:06:31,310
<font color="#E5E5E5">runtime art we have decks to out as an</font>

188
00:06:29,150 --> 00:06:33,890
undivided<font color="#E5E5E5"> so this one is actually</font>

189
00:06:31,310 --> 00:06:35,900
transforming the decks bytecode<font color="#CCCCCC"> of the</font>

190
00:06:33,890 --> 00:06:37,849
application into an file format called

191
00:06:35,900 --> 00:06:39,679
<font color="#CCCCCC">ot but don't worry</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> it</font>

192
00:06:37,849 --> 00:06:40,340
essentially<font color="#CCCCCC"> in your left file so think</font>

193
00:06:39,680 --> 00:06:41,930
<font color="#CCCCCC">about it</font>

194
00:06:40,340 --> 00:06:44,659
<font color="#E5E5E5">forming the byte codes to actual native</font>

195
00:06:41,930 --> 00:06:46,820
code<font color="#CCCCCC"> shared native library</font><font color="#E5E5E5"> and what is</font>

196
00:06:44,660 --> 00:06:48,290
doing<font color="#E5E5E5"> it is transforming the byte code</font>

197
00:06:46,820 --> 00:06:49,790
into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> so-called intermediate</font>

198
00:06:48,290 --> 00:06:51,800
representation<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> really a typical</font>

199
00:06:49,790 --> 00:06:53,240
<font color="#E5E5E5">thing to do for a compiler it is running</font>

200
00:06:51,800 --> 00:06:54,860
state-of-the-art optimizations on that

201
00:06:53,240 --> 00:06:57,320
<font color="#E5E5E5">so think about this</font>

202
00:06:54,860 --> 00:07:00,650
<font color="#CCCCCC">ir as kind of a control flow graph of</font>

203
00:06:57,320 --> 00:07:02,120
instructions per method and then later

204
00:07:00,650 --> 00:07:04,429
this<font color="#CCCCCC"> is actually specialized</font><font color="#E5E5E5"> by</font>

205
00:07:02,120 --> 00:07:05,600
<font color="#E5E5E5">generating</font><font color="#CCCCCC"> the platform-specific code so</font>

206
00:07:04,430 --> 00:07:08,479
keep in mind<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> running on the</font>

207
00:07:05,600 --> 00:07:09,199
device not<font color="#E5E5E5"> on a developer side so what</font>

208
00:07:08,479 --> 00:07:11,359
will you<font color="#E5E5E5"> do here</font>

209
00:07:09,199 --> 00:07:14,330
we took texture<font color="#CCCCCC"> ode as a base and then</font>

210
00:07:11,360 --> 00:07:16,880
<font color="#CCCCCC">created artist on it so we essentially</font>

211
00:07:14,330 --> 00:07:18,260
added two different parts here<font color="#E5E5E5"> on the</font>

212
00:07:16,880 --> 00:07:20,180
one<font color="#E5E5E5"> hand you can see we added</font><font color="#CCCCCC"> a</font>

213
00:07:18,260 --> 00:07:21,650
pre-processing<font color="#CCCCCC"> step</font><font color="#E5E5E5"> and I told you</font>

214
00:07:20,180 --> 00:07:24,650
<font color="#CCCCCC">earlier that</font><font color="#E5E5E5"> the signature is verified</font>

215
00:07:21,650 --> 00:07:25,940
before<font color="#E5E5E5"> the optimization so we are now</font>

216
00:07:24,650 --> 00:07:28,130
working<font color="#CCCCCC"> with a copy</font><font color="#E5E5E5"> of the original</font>

217
00:07:25,940 --> 00:07:30,020
<font color="#E5E5E5">piqué piqué and now we can merge any</font>

218
00:07:28,130 --> 00:07:31,040
<font color="#E5E5E5">byte code in there that we want so</font>

219
00:07:30,020 --> 00:07:33,500
<font color="#E5E5E5">assuming</font><font color="#CCCCCC"> we have an instrumentation</font>

220
00:07:31,040 --> 00:07:34,970
module with its own logic<font color="#E5E5E5"> then you have</font>

221
00:07:33,500 --> 00:07:36,590
a<font color="#E5E5E5"> Java</font><font color="#CCCCCC"> library with all your business</font>

222
00:07:34,970 --> 00:07:38,810
logic<font color="#E5E5E5"> and this one is merged in the</font>

223
00:07:36,590 --> 00:07:39,859
<font color="#E5E5E5">first step then the whole code is</font>

224
00:07:38,810 --> 00:07:42,740
transformed<font color="#CCCCCC"> to the intermediate</font>

225
00:07:39,860 --> 00:07:44,870
representation and now we now have this

226
00:07:42,740 --> 00:07:47,330
interview representation of the original

227
00:07:44,870 --> 00:07:49,910
<font color="#CCCCCC">apps code and</font><font color="#E5E5E5"> also offer injected coach</font>

228
00:07:47,330 --> 00:07:52,180
<font color="#E5E5E5">and now the second extension to</font><font color="#CCCCCC"> artist</font>

229
00:07:49,910 --> 00:07:54,500
is coming into play<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we added</font><font color="#E5E5E5"> new</font>

230
00:07:52,180 --> 00:07:56,660
<font color="#E5E5E5">optimization passes so we kind of</font>

231
00:07:54,500 --> 00:07:59,539
<font color="#E5E5E5">tricked the optimization framework into</font>

232
00:07:56,660 --> 00:08:01,580
executing or instrumentation stuff<font color="#E5E5E5"> so we</font>

233
00:07:59,539 --> 00:08:04,789
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> disguise as an optimization pass</font>

234
00:08:01,580 --> 00:08:06,859
and we use this one<font color="#CCCCCC"> to reconnect or</font>

235
00:08:04,789 --> 00:08:08,630
connect<font color="#E5E5E5"> to connect for first time the</font>

236
00:08:06,860 --> 00:08:10,520
target<font color="#E5E5E5"> code and the code we</font><font color="#CCCCCC"> are</font>

237
00:08:08,630 --> 00:08:12,800
injecting<font color="#E5E5E5"> so first you add a complete</font>

238
00:08:10,520 --> 00:08:14,599
Java or cotton library and then you<font color="#E5E5E5"> use</font>

239
00:08:12,800 --> 00:08:16,099
those<font color="#E5E5E5"> optimization passes to kind of</font>

240
00:08:14,599 --> 00:08:18,620
stitch together<font color="#E5E5E5"> your code and the</font>

241
00:08:16,099 --> 00:08:20,630
original code and the good thing<font color="#E5E5E5"> here is</font>

242
00:08:18,620 --> 00:08:22,190
that<font color="#E5E5E5"> first you're not</font><font color="#CCCCCC"> breaking the app</font>

243
00:08:20,630 --> 00:08:24,320
signature which means you still<font color="#CCCCCC"> get</font>

244
00:08:22,190 --> 00:08:25,990
updates<font color="#E5E5E5"> because I set the signature</font>

245
00:08:24,320 --> 00:08:28,250
happens before this optimization step

246
00:08:25,990 --> 00:08:29,720
second<font color="#E5E5E5"> you have close to no runtime</font>

247
00:08:28,250 --> 00:08:31,490
overhead<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there's no virtual</font>

248
00:08:29,720 --> 00:08:33,650
machine nothing<font color="#E5E5E5"> running in additional</font>

249
00:08:31,490 --> 00:08:35,180
<font color="#E5E5E5">runtime on the side effects the stuff</font>

250
00:08:33,650 --> 00:08:37,990
<font color="#E5E5E5">that you're adding by hand so this</font>

251
00:08:35,179 --> 00:08:40,189
happens at install time or compile time

252
00:08:37,990 --> 00:08:43,010
search this<font color="#E5E5E5"> is really non intrusive</font>

253
00:08:40,190 --> 00:08:44,900
<font color="#E5E5E5">because we are generating an alternative</font>

254
00:08:43,010 --> 00:08:46,339
<font color="#CCCCCC">version of this ohe file</font><font color="#E5E5E5"> so that's one</font>

255
00:08:44,900 --> 00:08:49,189
of<font color="#CCCCCC"> the system there is one that we</font>

256
00:08:46,339 --> 00:08:51,320
<font color="#CCCCCC">created and just for</font><font color="#E5E5E5"> this single step we</font>

257
00:08:49,190 --> 00:08:52,790
need<font color="#CCCCCC"> root to switch both</font><font color="#E5E5E5"> which means</font>

258
00:08:51,320 --> 00:08:54,060
<font color="#E5E5E5">from now on when you</font><font color="#CCCCCC"> start</font><font color="#E5E5E5"> the</font>

259
00:08:52,790 --> 00:08:55,709
application<font color="#E5E5E5"> the new</font>

260
00:08:54,060 --> 00:08:57,420
five will be picked up and executed and

261
00:08:55,710 --> 00:08:58,950
then you have<font color="#E5E5E5"> to instrument version</font>

262
00:08:57,420 --> 00:09:01,829
running<font color="#E5E5E5"> and if you want to revert this</font>

263
00:08:58,950 --> 00:09:03,660
you just switch it<font color="#E5E5E5"> back and we're also</font>

264
00:09:01,830 --> 00:09:05,640
<font color="#E5E5E5">not replacing the original</font><font color="#CCCCCC"> Dex or</font>

265
00:09:03,660 --> 00:09:08,130
compiler on the device<font color="#E5E5E5"> but we're using</font>

266
00:09:05,640 --> 00:09:09,480
our version of<font color="#CCCCCC"> textures</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> artists in</font>

267
00:09:08,130 --> 00:09:12,300
addition but I will come to that in<font color="#CCCCCC"> a</font>

268
00:09:09,480 --> 00:09:14,310
minute<font color="#CCCCCC"> and the big</font><font color="#E5E5E5"> thing here</font><font color="#CCCCCC"> is that</font>

269
00:09:12,300 --> 00:09:15,540
it's running<font color="#E5E5E5"> on a rooted devices which</font>

270
00:09:14,310 --> 00:09:17,160
means you don't need<font color="#CCCCCC"> to unlock your</font>

271
00:09:15,540 --> 00:09:18,329
bootloader<font color="#CCCCCC"> you don't need to flash</font>

272
00:09:17,160 --> 00:09:20,189
anything don't have to change<font color="#E5E5E5"> your</font>

273
00:09:18,330 --> 00:09:22,500
operating system<font color="#E5E5E5"> this</font><font color="#CCCCCC"> single step we're</font>

274
00:09:20,190 --> 00:09:24,360
replacing one<font color="#CCCCCC"> ohe</font><font color="#E5E5E5"> file with</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> it's</font>

275
00:09:22,500 --> 00:09:25,890
the<font color="#E5E5E5"> only time that we need root because</font>

276
00:09:24,360 --> 00:09:28,920
obviously executable code is in a

277
00:09:25,890 --> 00:09:31,230
protected location<font color="#E5E5E5"> all right so how do</font>

278
00:09:28,920 --> 00:09:32,939
we deploy us um if you think<font color="#E5E5E5"> of</font><font color="#CCCCCC"> our</font>

279
00:09:31,230 --> 00:09:35,310
<font color="#CCCCCC">chest as a</font><font color="#E5E5E5"> command line tool</font><font color="#CCCCCC"> where just</font>

280
00:09:32,940 --> 00:09:38,070
<font color="#E5E5E5">input an</font><font color="#CCCCCC"> apk</font><font color="#E5E5E5"> and it outputs an OT file</font>

281
00:09:35,310 --> 00:09:40,229
then our chest<font color="#CCCCCC"> gooey or</font><font color="#E5E5E5"> wrapper app it's</font>

282
00:09:38,070 --> 00:09:42,839
the<font color="#E5E5E5"> convenience lever</font><font color="#CCCCCC"> around this so it</font>

283
00:09:40,230 --> 00:09:44,490
<font color="#E5E5E5">is searching for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> correct apk in</font>

284
00:09:42,839 --> 00:09:46,320
putting it into our<font color="#E5E5E5"> chests and then</font>

285
00:09:44,490 --> 00:09:48,779
pushing the new OT file to the correct

286
00:09:46,320 --> 00:09:50,730
location<font color="#CCCCCC"> and it has also</font><font color="#E5E5E5"> some other</font>

287
00:09:48,779 --> 00:09:52,560
functionality<font color="#E5E5E5"> like keeping all the</font>

288
00:09:50,730 --> 00:09:53,580
instrumentation modules and<font color="#E5E5E5"> artists up</font>

289
00:09:52,560 --> 00:09:56,000
<font color="#E5E5E5">to date so does something we'll be</font>

290
00:09:53,580 --> 00:09:58,080
working<font color="#E5E5E5"> on currently and</font><font color="#CCCCCC"> you can import</font>

291
00:09:56,000 --> 00:10:00,420
instrumentation modules from yourself<font color="#E5E5E5"> or</font>

292
00:09:58,080 --> 00:10:03,180
the developers and apply them so we will

293
00:10:00,420 --> 00:10:05,069
<font color="#E5E5E5">see</font><font color="#CCCCCC"> that later</font><font color="#E5E5E5"> so not if we have a basic</font>

294
00:10:03,180 --> 00:10:07,500
idea<font color="#CCCCCC"> about how all three of them are</font>

295
00:10:05,070 --> 00:10:08,670
<font color="#CCCCCC">working we can compare them now</font><font color="#E5E5E5"> let me</font>

296
00:10:07,500 --> 00:10:10,980
<font color="#E5E5E5">first talk a little bit about the</font>

297
00:10:08,670 --> 00:10:13,079
deployment<font color="#E5E5E5"> here because artist is</font>

298
00:10:10,980 --> 00:10:15,240
improving here a lot concerned<font color="#E5E5E5"> compared</font>

299
00:10:13,080 --> 00:10:16,740
<font color="#E5E5E5">to exposed and</font><font color="#CCCCCC"> freida because we're</font>

300
00:10:15,240 --> 00:10:18,990
exposed to<font color="#CCCCCC"> needs</font><font color="#E5E5E5"> this custom recovery</font>

301
00:10:16,740 --> 00:10:20,040
<font color="#E5E5E5">which restricts you to certain devices</font>

302
00:10:18,990 --> 00:10:21,750
but<font color="#E5E5E5"> as</font><font color="#CCCCCC"> is possible</font>

303
00:10:20,040 --> 00:10:24,240
and of<font color="#CCCCCC"> course you need</font><font color="#E5E5E5"> the knowledge to</font>

304
00:10:21,750 --> 00:10:26,610
do it for<font color="#E5E5E5"> freedom</font><font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to connect a</font>

305
00:10:24,240 --> 00:10:27,690
PC in an ADB connection and again the

306
00:10:26,610 --> 00:10:29,430
debug mode<font color="#E5E5E5"> is not something that you</font>

307
00:10:27,690 --> 00:10:31,500
want<font color="#CCCCCC"> to have on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> layman users device</font>

308
00:10:29,430 --> 00:10:33,180
<font color="#E5E5E5">but for artists you're just</font><font color="#CCCCCC"> installing</font>

309
00:10:31,500 --> 00:10:34,380
an app so assuming you have rooted<font color="#E5E5E5"> your</font>

310
00:10:33,180 --> 00:10:36,000
device and there are ready-made

311
00:10:34,380 --> 00:10:37,650
applications that can just root your

312
00:10:36,000 --> 00:10:40,830
device<font color="#CCCCCC"> I think they're trying</font><font color="#E5E5E5"> just a</font>

313
00:10:37,650 --> 00:10:42,900
bunch of<font color="#CCCCCC"> root explodes then you can just</font>

314
00:10:40,830 --> 00:10:44,580
go<font color="#E5E5E5"> add so this is also not</font><font color="#CCCCCC"> only meant</font>

315
00:10:42,900 --> 00:10:46,709
for experts but also<font color="#E5E5E5"> for laymen using it</font>

316
00:10:44,580 --> 00:10:49,980
just<font color="#E5E5E5"> install it</font><font color="#CCCCCC"> artistically and some</font>

317
00:10:46,709 --> 00:10:51,900
use it talk<font color="#E5E5E5"> about the invasiveness so</font>

318
00:10:49,980 --> 00:10:54,779
the extent to which<font color="#E5E5E5"> you're changing the</font>

319
00:10:51,900 --> 00:10:56,819
operating<font color="#E5E5E5"> system well are just</font>

320
00:10:54,779 --> 00:10:57,750
<font color="#E5E5E5">definitely improves upon exposed because</font>

321
00:10:56,820 --> 00:10:59,040
you're not<font color="#E5E5E5"> changing</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> of the</font>

322
00:10:57,750 --> 00:11:01,529
operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> you're just changing</font>

323
00:10:59,040 --> 00:11:03,360
<font color="#E5E5E5">this compiled version of the</font><font color="#CCCCCC"> application</font>

324
00:11:01,529 --> 00:11:06,060
that<font color="#CCCCCC"> you're instrumenting</font><font color="#E5E5E5"> not all the</font>

325
00:11:03,360 --> 00:11:07,680
others<font color="#CCCCCC"> and</font><font color="#E5E5E5"> depending on if you want</font>

326
00:11:06,060 --> 00:11:09,540
persistent<font color="#E5E5E5"> changes or non-person</font>

327
00:11:07,680 --> 00:11:12,689
<font color="#E5E5E5">Changez than either</font><font color="#CCCCCC"> Frieda or</font><font color="#E5E5E5"> artists</font>

328
00:11:09,540 --> 00:11:14,520
<font color="#CCCCCC">twins</font><font color="#E5E5E5"> talk about the criminality here</font>

329
00:11:12,690 --> 00:11:17,070
<font color="#CCCCCC">artists is the only framework</font><font color="#E5E5E5"> that can</font>

330
00:11:14,520 --> 00:11:19,829
operate<font color="#E5E5E5"> on the instruction level</font><font color="#CCCCCC"> and the</font>

331
00:11:17,070 --> 00:11:21,960
reason is that we have this intermediate

332
00:11:19,830 --> 00:11:23,880
<font color="#E5E5E5">representation and as I</font><font color="#CCCCCC"> said this is a</font>

333
00:11:21,960 --> 00:11:26,160
control<font color="#E5E5E5"> flow graph of instructions and</font>

334
00:11:23,880 --> 00:11:27,689
<font color="#CCCCCC">concise just</font><font color="#E5E5E5"> think of</font><font color="#CCCCCC"> this as you have</font>

335
00:11:26,160 --> 00:11:29,490
one kind of object-oriented

336
00:11:27,690 --> 00:11:30,959
<font color="#E5E5E5">representation of each sing instruction</font>

337
00:11:29,490 --> 00:11:32,730
so we<font color="#E5E5E5"> can just create a new</font><font color="#CCCCCC"> one exchange</font>

338
00:11:30,959 --> 00:11:35,939
<font color="#E5E5E5">them you can essentially do whatever you</font>

339
00:11:32,730 --> 00:11:38,250
want to the<font color="#CCCCCC"> code</font><font color="#E5E5E5"> and talking about</font>

340
00:11:35,940 --> 00:11:39,240
<font color="#E5E5E5">module updates well for exposed if you</font>

341
00:11:38,250 --> 00:11:41,550
have to have a new instrumentation

342
00:11:39,240 --> 00:11:43,110
module you<font color="#E5E5E5"> have to reboot the device for</font>

343
00:11:41,550 --> 00:11:45,180
<font color="#CCCCCC">artists you actually</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> have to import</font>

344
00:11:43,110 --> 00:11:46,709
<font color="#E5E5E5">this and recompile the target for which</font>

345
00:11:45,180 --> 00:11:48,420
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply this so</font><font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> bit</font>

346
00:11:46,709 --> 00:11:49,770
better here but<font color="#E5E5E5"> the</font><font color="#CCCCCC"> key burner is freed</font>

347
00:11:48,420 --> 00:11:52,319
up<font color="#E5E5E5"> because they're loading JavaScript</font>

348
00:11:49,770 --> 00:11:54,300
and you<font color="#CCCCCC"> can do this at runtime</font><font color="#E5E5E5"> right but</font>

349
00:11:52,320 --> 00:11:55,980
that's one big<font color="#CCCCCC"> thing since we're relying</font>

350
00:11:54,300 --> 00:11:57,750
<font color="#E5E5E5">on the Android</font><font color="#CCCCCC"> runtime which was</font>

351
00:11:55,980 --> 00:11:59,580
introduced Android<font color="#E5E5E5"> 5 and we're relying</font>

352
00:11:57,750 --> 00:12:01,649
on a particular component called the

353
00:11:59,580 --> 00:12:03,630
<font color="#E5E5E5">optimizing</font><font color="#CCCCCC"> backend which is only stable</font>

354
00:12:01,649 --> 00:12:06,930
<font color="#E5E5E5">from Android 6 we cannot support</font>

355
00:12:03,630 --> 00:12:08,189
anything<font color="#E5E5E5"> before that</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so I hope</font>

356
00:12:06,930 --> 00:12:09,930
<font color="#CCCCCC">that at this point</font><font color="#E5E5E5"> I could convince you</font>

357
00:12:08,190 --> 00:12:12,330
<font color="#E5E5E5">that</font><font color="#CCCCCC"> artist is aiming for kind</font><font color="#E5E5E5"> of a</font>

358
00:12:09,930 --> 00:12:14,849
sweet<font color="#CCCCCC"> spot here because we have quite</font>

359
00:12:12,330 --> 00:12:18,029
<font color="#E5E5E5">easy deployment</font><font color="#CCCCCC"> we have a find clarity</font>

360
00:12:14,850 --> 00:12:20,370
for the<font color="#E5E5E5"> instrumentation and also we are</font>

361
00:12:18,029 --> 00:12:20,910
non<font color="#CCCCCC"> non-invasive which means also hard</font>

362
00:12:20,370 --> 00:12:23,790
<font color="#CCCCCC">to</font><font color="#E5E5E5"> detect</font>

363
00:12:20,910 --> 00:12:25,170
artists on a device so there's one

364
00:12:23,790 --> 00:12:28,560
particular<font color="#CCCCCC"> model that I want to showcase</font>

365
00:12:25,170 --> 00:12:30,449
<font color="#E5E5E5">you may ask you to quickly show of hands</font>

366
00:12:28,560 --> 00:12:34,199
who ever heard of the<font color="#E5E5E5"> steve-o library</font>

367
00:12:30,450 --> 00:12:35,430
from<font color="#E5E5E5"> Facebook</font><font color="#CCCCCC"> engineering alright we</font>

368
00:12:34,200 --> 00:12:36,990
<font color="#E5E5E5">have one</font><font color="#CCCCCC"> here well that's</font><font color="#E5E5E5"> actually</font>

369
00:12:35,430 --> 00:12:38,670
pretty<font color="#E5E5E5"> great so the basic idea</font><font color="#CCCCCC"> is you</font>

370
00:12:36,990 --> 00:12:40,260
have<font color="#E5E5E5"> your own application you add it to</font>

371
00:12:38,670 --> 00:12:41,910
<font color="#CCCCCC">a debug version of your app</font><font color="#E5E5E5"> and this</font>

372
00:12:40,260 --> 00:12:43,260
library is connecting your app to<font color="#E5E5E5"> the</font>

373
00:12:41,910 --> 00:12:45,240
chrome developer tools running<font color="#CCCCCC"> on your</font>

374
00:12:43,260 --> 00:12:47,400
PC<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can now debug your app as it</font>

375
00:12:45,240 --> 00:12:49,110
<font color="#CCCCCC">was a web app so you</font><font color="#E5E5E5"> see all the files</font>

376
00:12:47,400 --> 00:12:51,420
<font color="#E5E5E5">to see the database you can even execute</font>

377
00:12:49,110 --> 00:12:52,620
JavaScript<font color="#E5E5E5"> so what do you think happens</font>

378
00:12:51,420 --> 00:12:55,319
if<font color="#E5E5E5"> you inject this into arbitrary</font>

379
00:12:52,620 --> 00:12:57,180
processes<font color="#E5E5E5"> so this is actually the demo</font>

380
00:12:55,320 --> 00:12:59,970
<font color="#CCCCCC">that I prepared here let's see if that</font>

381
00:12:57,180 --> 00:13:03,029
one is<font color="#E5E5E5"> working so you can see my</font><font color="#CCCCCC"> device</font>

382
00:12:59,970 --> 00:13:04,140
right<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so you have to</font><font color="#CCCCCC"> trust</font><font color="#E5E5E5"> me</font>

383
00:13:03,029 --> 00:13:05,610
<font color="#CCCCCC">here there</font><font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> a developer off</font>

384
00:13:04,140 --> 00:13:07,770
<font color="#CCCCCC">Reddit so I don't</font><font color="#E5E5E5"> have the code here but</font>

385
00:13:05,610 --> 00:13:10,709
<font color="#CCCCCC">I instrumented it before</font><font color="#E5E5E5"> a talk for time</font>

386
00:13:07,770 --> 00:13:12,480
reasons and if I starts<font color="#E5E5E5"> reddit now you</font>

387
00:13:10,709 --> 00:13:16,260
see in the chrome developer<font color="#CCCCCC"> tools here</font>

388
00:13:12,480 --> 00:13:18,990
<font color="#E5E5E5">we can inspect it let me arrange this</font>

389
00:13:16,260 --> 00:13:21,770
<font color="#E5E5E5">because it never stays as it should all</font>

390
00:13:18,990 --> 00:13:24,450
right<font color="#E5E5E5"> no</font>

391
00:13:21,770 --> 00:13:27,000
now we have it<font color="#E5E5E5"> okay so the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> thing</font>

392
00:13:24,450 --> 00:13:29,460
you're<font color="#E5E5E5"> seeing is</font><font color="#CCCCCC"> that we see the UI of</font>

393
00:13:27,000 --> 00:13:32,370
<font color="#E5E5E5">Reddit</font><font color="#CCCCCC"> and let me speed this up a little</font>

394
00:13:29,460 --> 00:13:37,320
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> search</font><font color="#CCCCCC"> photos</font><font color="#E5E5E5"> webcam string</font>

395
00:13:32,370 --> 00:13:41,340
we see and where is<font color="#E5E5E5"> it here it is and we</font>

396
00:13:37,320 --> 00:13:44,460
<font color="#E5E5E5">can change it</font><font color="#CCCCCC"> so if you have a look at</font>

397
00:13:41,340 --> 00:13:46,500
the left<font color="#CCCCCC"> side here on well</font><font color="#E5E5E5"> it's a neat</font>

398
00:13:44,460 --> 00:13:48,240
<font color="#CCCCCC">little</font><font color="#E5E5E5"> trick but I have complete</font><font color="#CCCCCC"> control</font>

399
00:13:46,500 --> 00:13:50,670
over<font color="#E5E5E5"> the app I can actually show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> a</font>

400
00:13:48,240 --> 00:13:52,920
more<font color="#E5E5E5"> interesting thing which</font><font color="#CCCCCC"> is the</font>

401
00:13:50,670 --> 00:13:55,829
network<font color="#CCCCCC"> tap here</font><font color="#E5E5E5"> so if I just start</font>

402
00:13:52,920 --> 00:13:57,630
<font color="#E5E5E5">loading content</font><font color="#CCCCCC"> here and read it then</font>

403
00:13:55,830 --> 00:13:59,280
you can see<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> traffic coming</font><font color="#E5E5E5"> in</font>

404
00:13:57,630 --> 00:14:00,600
here and we don't<font color="#E5E5E5"> care about encryption</font>

405
00:13:59,280 --> 00:14:01,439
because<font color="#CCCCCC"> we're directly getting</font><font color="#E5E5E5"> this from</font>

406
00:14:00,600 --> 00:14:04,830
<font color="#E5E5E5">the application</font>

407
00:14:01,440 --> 00:14:07,860
so we're subverting all kinds of well

408
00:14:04,830 --> 00:14:09,180
pinning and encryption so on and you<font color="#CCCCCC"> can</font>

409
00:14:07,860 --> 00:14:10,500
see all<font color="#CCCCCC"> information that</font><font color="#E5E5E5"> you used to</font>

410
00:14:09,180 --> 00:14:12,900
<font color="#E5E5E5">like there the headers</font><font color="#CCCCCC"> there was</font>

411
00:14:10,500 --> 00:14:15,450
responses and for pictures also<font color="#CCCCCC"> see the</font>

412
00:14:12,900 --> 00:14:17,990
<font color="#E5E5E5">preview and actually my favorite thing</font>

413
00:14:15,450 --> 00:14:20,250
<font color="#CCCCCC">to do here is the resources</font><font color="#E5E5E5"> tab and</font>

414
00:14:17,990 --> 00:14:22,560
don't get<font color="#E5E5E5"> confused by</font><font color="#CCCCCC"> the name</font><font color="#E5E5E5"> there are</font>

415
00:14:20,250 --> 00:14:24,300
<font color="#E5E5E5">obviously meant for the web but you see</font>

416
00:14:22,560 --> 00:14:26,310
<font color="#CCCCCC">all the files</font><font color="#E5E5E5"> of an application here</font><font color="#CCCCCC"> you</font>

417
00:14:24,300 --> 00:14:27,750
can expect them<font color="#E5E5E5"> and my actual</font><font color="#CCCCCC"> favorite</font>

418
00:14:26,310 --> 00:14:30,569
part here is you can<font color="#E5E5E5"> look at the</font>

419
00:14:27,750 --> 00:14:31,710
databases<font color="#E5E5E5"> of an application so let me</font>

420
00:14:30,570 --> 00:14:33,660
have a look at the submitted<font color="#E5E5E5"> shared</font>

421
00:14:31,710 --> 00:14:36,990
<font color="#E5E5E5">database</font><font color="#CCCCCC"> and the subreddit info table</font>

422
00:14:33,660 --> 00:14:38,819
and the use of<font color="#CCCCCC"> the reddit users among</font>

423
00:14:36,990 --> 00:14:43,590
you might recognize the subreddit we

424
00:14:38,820 --> 00:14:47,970
have here and we have this nice can<font color="#E5E5E5"> you</font>

425
00:14:43,590 --> 00:14:49,140
see it white<font color="#CCCCCC"> list</font><font color="#E5E5E5"> white this row here</font>

426
00:14:47,970 --> 00:14:51,180
and<font color="#E5E5E5"> it says actually for which</font>

427
00:14:49,140 --> 00:14:53,340
<font color="#CCCCCC">subreddits you have how</font><font color="#E5E5E5"> many and what</font>

428
00:14:51,180 --> 00:14:54,689
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> ads so</font><font color="#CCCCCC"> I'm pretty sure if I will</font>

429
00:14:53,340 --> 00:14:56,460
<font color="#E5E5E5">dig into this a little bit it would be</font>

430
00:14:54,690 --> 00:15:00,420
quite<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to write an ad</font><font color="#E5E5E5"> blog of our</font>

431
00:14:56,460 --> 00:15:01,440
<font color="#E5E5E5">edit just saying all right so this is</font>

432
00:15:00,420 --> 00:15:03,770
one<font color="#CCCCCC"> of the things you could</font><font color="#E5E5E5"> do without</font>

433
00:15:01,440 --> 00:15:06,180
<font color="#CCCCCC">just and of course you can do a</font><font color="#E5E5E5"> lot more</font>

434
00:15:03,770 --> 00:15:08,760
<font color="#CCCCCC">we created for example</font><font color="#E5E5E5"> individual paper</font>

435
00:15:06,180 --> 00:15:09,930
and intra app pain tracking system they

436
00:15:08,760 --> 00:15:11,819
<font color="#E5E5E5">would just inject all the code using</font>

437
00:15:09,930 --> 00:15:14,040
<font color="#E5E5E5">compiler to track information flow and</font>

438
00:15:11,820 --> 00:15:15,840
<font color="#E5E5E5">application together</font><font color="#CCCCCC"> with my colleague</font>

439
00:15:14,040 --> 00:15:18,689
<font color="#CCCCCC">Jaquan we're</font><font color="#E5E5E5"> creating quite</font><font color="#CCCCCC"> a personal</font>

440
00:15:15,840 --> 00:15:19,980
process<font color="#E5E5E5"> system called</font><font color="#CCCCCC"> comp artist</font><font color="#E5E5E5"> where</font>

441
00:15:18,690 --> 00:15:21,930
we are compartmentalizing<font color="#E5E5E5"> single</font>

442
00:15:19,980 --> 00:15:24,060
libraries<font color="#E5E5E5"> so in our case we took an</font>

443
00:15:21,930 --> 00:15:25,739
application with<font color="#E5E5E5"> a net library we took</font>

444
00:15:24,060 --> 00:15:28,109
out the at library completely remove the

445
00:15:25,740 --> 00:15:30,120
two different application so now instead

446
00:15:28,110 --> 00:15:32,130
of<font color="#CCCCCC"> calling from the app</font><font color="#E5E5E5"> into the library</font>

447
00:15:30,120 --> 00:15:33,480
it is<font color="#CCCCCC"> an inter process communication so</font>

448
00:15:32,130 --> 00:15:34,590
we<font color="#E5E5E5"> create a custom</font><font color="#CCCCCC"> binder protocol to</font>

449
00:15:33,480 --> 00:15:36,300
connect them again

450
00:15:34,590 --> 00:15:38,730
and the<font color="#CCCCCC"> ad view is</font><font color="#E5E5E5"> displayed on top of</font>

451
00:15:36,300 --> 00:15:40,949
the running application so now<font color="#E5E5E5"> from the</font>

452
00:15:38,730 --> 00:15:43,200
design perspective you<font color="#CCCCCC"> have two distinct</font>

453
00:15:40,950 --> 00:15:45,540
security principles which means you can

454
00:15:43,200 --> 00:15:48,120
revoke permissions from the ad library

455
00:15:45,540 --> 00:15:49,949
<font color="#CCCCCC">but the app still has it and also</font><font color="#E5E5E5"> the ad</font>

456
00:15:48,120 --> 00:15:52,470
library cannot access the file of<font color="#E5E5E5"> the</font>

457
00:15:49,950 --> 00:15:54,210
application<font color="#E5E5E5"> and we've put we've done a</font>

458
00:15:52,470 --> 00:15:55,800
bit<font color="#CCCCCC"> more</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and we have created in a</font>

459
00:15:54,210 --> 00:15:58,410
reference monitoring approaches method

460
00:15:55,800 --> 00:16:00,420
tracing so on and if you<font color="#E5E5E5"> want to you can</font>

461
00:15:58,410 --> 00:16:02,130
also<font color="#E5E5E5"> use arches to replace the system</font>

462
00:16:00,420 --> 00:16:04,110
compiler<font color="#CCCCCC"> then you can also rinse</font>

463
00:16:02,130 --> 00:16:05,640
tremendous system server and the boot

464
00:16:04,110 --> 00:16:06,960
out file and sort of kind<font color="#CCCCCC"> of the</font>

465
00:16:05,640 --> 00:16:09,270
framework classes<font color="#E5E5E5"> of Android</font>

466
00:16:06,960 --> 00:16:10,890
so whatever runs on Java<font color="#E5E5E5"> on Android is</font>

467
00:16:09,270 --> 00:16:13,290
compiled through the<font color="#E5E5E5"> x2 out so this is</font>

468
00:16:10,890 --> 00:16:15,720
<font color="#CCCCCC">women reach</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> just we're actually</font>

469
00:16:13,290 --> 00:16:17,430
<font color="#E5E5E5">currently working on doing this from</font>

470
00:16:15,720 --> 00:16:18,900
<font color="#E5E5E5">artists</font><font color="#CCCCCC"> GUI</font><font color="#E5E5E5"> wrapper so you don't have to</font>

471
00:16:17,430 --> 00:16:22,140
<font color="#E5E5E5">create a custom ROM but this is work in</font>

472
00:16:18,900 --> 00:16:24,420
<font color="#CCCCCC">progress</font><font color="#E5E5E5"> all right so I've been talking</font>

473
00:16:22,140 --> 00:16:25,620
<font color="#CCCCCC">about modules</font><font color="#E5E5E5"> for a while now and let me</font>

474
00:16:24,420 --> 00:16:28,380
be<font color="#CCCCCC"> sure we're all on the same page here</font>

475
00:16:25,620 --> 00:16:29,790
<font color="#E5E5E5">so</font><font color="#CCCCCC"> for artists actually module is kind</font>

476
00:16:28,380 --> 00:16:31,350
of an<font color="#CCCCCC"> abstract functionality that is</font>

477
00:16:29,790 --> 00:16:33,990
<font color="#CCCCCC">self-contained</font><font color="#E5E5E5"> so it needs at least</font>

478
00:16:31,350 --> 00:16:36,270
<font color="#CCCCCC">three different</font><font color="#E5E5E5"> things first the</font>

479
00:16:33,990 --> 00:16:38,820
<font color="#CCCCCC">so-called</font><font color="#E5E5E5"> code nib</font><font color="#CCCCCC"> this is the version</font>

480
00:16:36,270 --> 00:16:39,810
<font color="#CCCCCC">with</font><font color="#E5E5E5"> the Java library with business</font>

481
00:16:38,820 --> 00:16:42,000
logic that<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> beginning</font>

482
00:16:39,810 --> 00:16:45,209
and this one is merged in very beginning

483
00:16:42,000 --> 00:16:46,650
here second we<font color="#E5E5E5"> have those</font><font color="#CCCCCC"> optimization</font>

484
00:16:45,210 --> 00:16:49,230
passes which are essentially<font color="#E5E5E5"> kind of</font>

485
00:16:46,650 --> 00:16:50,640
stitching<font color="#E5E5E5"> together your code this is a</font>

486
00:16:49,230 --> 00:16:52,980
shared<font color="#CCCCCC"> object that you</font><font color="#E5E5E5"> have in your</font>

487
00:16:50,640 --> 00:16:54,330
module and then also you<font color="#E5E5E5"> have some</font><font color="#CCCCCC"> media</font>

488
00:16:52,980 --> 00:16:56,070
information<font color="#E5E5E5"> like who's the author or</font>

489
00:16:54,330 --> 00:17:02,490
what is the version<font color="#CCCCCC"> and so on we're</font>

490
00:16:56,070 --> 00:17:03,960
going to<font color="#CCCCCC"> use it in the future yeah so if</font>

491
00:17:02,490 --> 00:17:05,760
you're interested now it's quite easy<font color="#E5E5E5"> to</font>

492
00:17:03,960 --> 00:17:08,310
create modules of<font color="#CCCCCC"> artist</font><font color="#E5E5E5"> so we created</font>

493
00:17:05,760 --> 00:17:09,300
module<font color="#E5E5E5"> SDK essentially something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> 60</font>

494
00:17:08,310 --> 00:17:12,240
<font color="#CCCCCC">megabytes</font><font color="#E5E5E5"> you can download and install</font>

495
00:17:09,300 --> 00:17:14,490
<font color="#CCCCCC">it</font><font color="#E5E5E5"> and then we have a template module</font>

496
00:17:12,240 --> 00:17:15,990
and code lab<font color="#CCCCCC"> available</font><font color="#E5E5E5"> you can just kind</font>

497
00:17:14,490 --> 00:17:18,959
of start<font color="#CCCCCC"> from that and create your own</font>

498
00:17:15,990 --> 00:17:20,880
<font color="#CCCCCC">logic</font><font color="#E5E5E5"> and after</font><font color="#CCCCCC"> that we have ready-made</font>

499
00:17:18,959 --> 00:17:24,000
<font color="#CCCCCC">birth</font><font color="#E5E5E5"> scripts you just have to hit make</font>

500
00:17:20,880 --> 00:17:25,709
and it's done<font color="#CCCCCC"> and it creates a zip file</font>

501
00:17:24,000 --> 00:17:27,930
<font color="#E5E5E5">and</font><font color="#CCCCCC"> this one can be imported into</font><font color="#E5E5E5"> artist</font>

502
00:17:25,709 --> 00:17:29,640
GUI so all of this is actually<font color="#E5E5E5"> open</font>

503
00:17:27,930 --> 00:17:31,380
<font color="#CCCCCC">source and as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> right</font>

504
00:17:29,640 --> 00:17:33,870
<font color="#E5E5E5">hand side</font><font color="#CCCCCC"> I applied this to the black</font>

505
00:17:31,380 --> 00:17:34,860
head<font color="#E5E5E5"> USA app and it works like</font><font color="#CCCCCC"> a charm</font>

506
00:17:33,870 --> 00:17:37,409
<font color="#E5E5E5">so I can actually see how the</font>

507
00:17:34,860 --> 00:17:38,610
<font color="#CCCCCC">application</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> looks like we</font><font color="#E5E5E5"> sing</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> app</font>

508
00:17:37,410 --> 00:17:40,470
on<font color="#CCCCCC"> your device</font><font color="#E5E5E5"> you can choose which</font>

509
00:17:38,610 --> 00:17:42,389
<font color="#CCCCCC">module supply</font><font color="#E5E5E5"> remove the instrumentation</font>

510
00:17:40,470 --> 00:17:45,120
<font color="#CCCCCC">reinstall and</font><font color="#E5E5E5"> so on so kind of the</font>

511
00:17:42,390 --> 00:17:48,270
convenience and I think I have time<font color="#CCCCCC"> to</font>

512
00:17:45,120 --> 00:17:51,679
quickly<font color="#E5E5E5"> show how this looks so it</font>

513
00:17:48,270 --> 00:17:55,980
we switch to<font color="#E5E5E5"> something different here</font>

514
00:17:51,680 --> 00:17:58,200
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so I will kill this app and</font>

515
00:17:55,980 --> 00:18:01,200
once again I already instrumented

516
00:17:58,200 --> 00:18:03,630
<font color="#E5E5E5">blackhat use a app and when I started</font>

517
00:18:01,200 --> 00:18:05,370
now<font color="#E5E5E5"> you can see that it blocks the name</font>

518
00:18:03,630 --> 00:18:07,410
of each single<font color="#E5E5E5"> method that is</font><font color="#CCCCCC"> invoked</font><font color="#E5E5E5"> to</font>

519
00:18:05,370 --> 00:18:09,149
lock<font color="#CCCCCC"> it so of course this</font><font color="#E5E5E5"> is again a toy</font>

520
00:18:07,410 --> 00:18:10,640
module but it's kind of interesting<font color="#E5E5E5"> to</font>

521
00:18:09,150 --> 00:18:12,510
<font color="#CCCCCC">see what your applications are doing</font>

522
00:18:10,640 --> 00:18:13,650
particularly<font color="#E5E5E5"> if you instrument all of</font>

523
00:18:12,510 --> 00:18:15,629
them and see what's happening in the

524
00:18:13,650 --> 00:18:19,620
background<font color="#CCCCCC"> so for this step for</font><font color="#E5E5E5"> example</font>

525
00:18:15,630 --> 00:18:21,990
<font color="#CCCCCC">it's what we see sync engine a</font><font color="#E5E5E5"> lot of</font>

526
00:18:19,620 --> 00:18:24,479
data classes<font color="#E5E5E5"> if I start something well</font>

527
00:18:21,990 --> 00:18:27,770
it's executing quite a lot so you can

528
00:18:24,480 --> 00:18:32,280
see what it<font color="#E5E5E5"> takes some</font><font color="#CCCCCC"> time for</font><font color="#E5E5E5"> loading</font>

529
00:18:27,770 --> 00:18:35,160
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> one so what is the current</font>

530
00:18:32,280 --> 00:18:37,620
state here the<font color="#CCCCCC"> basic eight years we just</font>

531
00:18:35,160 --> 00:18:39,210
created this<font color="#E5E5E5"> artist module SDK and chef</font>

532
00:18:37,620 --> 00:18:41,399
<font color="#E5E5E5">the module management engine or</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> your</font>

533
00:18:39,210 --> 00:18:42,780
<font color="#E5E5E5">outer</font><font color="#CCCCCC"> story app and we have some so many</font>

534
00:18:41,400 --> 00:18:44,460
versioning and documentation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so on</font>

535
00:18:42,780 --> 00:18:46,560
and all<font color="#E5E5E5"> of this is</font><font color="#CCCCCC"> open source you can</font>

536
00:18:44,460 --> 00:18:48,660
<font color="#E5E5E5">check it out and we want to improve upon</font>

537
00:18:46,560 --> 00:18:51,300
<font color="#E5E5E5">this of</font><font color="#CCCCCC"> course we want to have automated</font>

538
00:18:48,660 --> 00:18:52,830
<font color="#E5E5E5">releases and testing we want to have</font><font color="#CCCCCC"> the</font>

539
00:18:51,300 --> 00:18:54,600
public module marketplace where you<font color="#E5E5E5"> can</font>

540
00:18:52,830 --> 00:18:56,730
<font color="#CCCCCC">create modules and upload them just</font>

541
00:18:54,600 --> 00:18:58,530
similar<font color="#E5E5E5"> to what expose is offering right</font>

542
00:18:56,730 --> 00:19:02,610
now<font color="#E5E5E5"> and actually one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my students is</font>

543
00:18:58,530 --> 00:19:04,320
working<font color="#E5E5E5"> on</font><font color="#CCCCCC"> creating an well layer</font>

544
00:19:02,610 --> 00:19:06,179
between expose and artists who can

545
00:19:04,320 --> 00:19:07,830
actually<font color="#E5E5E5"> reuse exposed modules at least</font>

546
00:19:06,180 --> 00:19:10,860
some<font color="#E5E5E5"> of them so I think for</font><font color="#CCCCCC"> now it's</font>

547
00:19:07,830 --> 00:19:12,210
like<font color="#CCCCCC"> 1200 module</font><font color="#E5E5E5"> for for exposed it</font>

548
00:19:10,860 --> 00:19:14,459
would be nice<font color="#E5E5E5"> to kind of reuse some of</font>

549
00:19:12,210 --> 00:19:17,820
<font color="#E5E5E5">them to bootstrap</font><font color="#CCCCCC"> to a thing</font><font color="#E5E5E5"> for artists</font>

550
00:19:14,460 --> 00:19:19,740
<font color="#E5E5E5">and as I said</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to implement</font><font color="#CCCCCC"> a</font>

551
00:19:17,820 --> 00:19:21,240
<font color="#E5E5E5">system server and framework supports so</font>

552
00:19:19,740 --> 00:19:24,450
we can just instrument them from any

553
00:19:21,240 --> 00:19:26,670
rooted device<font color="#E5E5E5"> all</font><font color="#CCCCCC"> right so since it's</font>

554
00:19:24,450 --> 00:19:28,260
<font color="#E5E5E5">pretty early if you slept through the</font>

555
00:19:26,670 --> 00:19:30,000
whole talk this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the perfect time to</font>

556
00:19:28,260 --> 00:19:32,280
<font color="#E5E5E5">wake up now because</font><font color="#CCCCCC"> I have three</font>

557
00:19:30,000 --> 00:19:34,170
takeaway messages for you<font color="#E5E5E5"> the first one</font>

558
00:19:32,280 --> 00:19:35,760
is Android<font color="#CCCCCC"> ice fermentation</font><font color="#E5E5E5"> analysis is</font>

559
00:19:34,170 --> 00:19:39,420
fun<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> I showed you that with</font><font color="#CCCCCC"> this</font>

560
00:19:35,760 --> 00:19:41,250
<font color="#CCCCCC">devil</font><font color="#E5E5E5"> module second</font><font color="#CCCCCC"> artist occupies a</font>

561
00:19:39,420 --> 00:19:42,810
sweet spot here because it provides some

562
00:19:41,250 --> 00:19:45,480
advantages<font color="#CCCCCC"> that exposed and</font><font color="#E5E5E5"> freed</font><font color="#CCCCCC"> I</font>

563
00:19:42,810 --> 00:19:47,250
cannot<font color="#E5E5E5"> offer and search artist is</font>

564
00:19:45,480 --> 00:19:49,770
completely<font color="#CCCCCC"> open-source and we're pretty</font>

565
00:19:47,250 --> 00:19:51,210
early in this face<font color="#E5E5E5"> so if you find this</font>

566
00:19:49,770 --> 00:19:53,340
interesting<font color="#E5E5E5"> if you want to get involved</font>

567
00:19:51,210 --> 00:19:54,840
<font color="#E5E5E5">well drop me a message</font><font color="#CCCCCC"> we have a jitter</font>

568
00:19:53,340 --> 00:19:57,149
<font color="#E5E5E5">chat we have github</font>

569
00:19:54,840 --> 00:20:00,480
I have<font color="#E5E5E5"> Twitter and key base whatever so</font>

570
00:19:57,150 --> 00:20:01,950
<font color="#CCCCCC">just send</font><font color="#E5E5E5"> me a message or my team and so</font>

571
00:20:00,480 --> 00:20:04,230
we're happy to talk<font color="#CCCCCC"> about this and</font>

572
00:20:01,950 --> 00:20:05,549
<font color="#E5E5E5">answer</font><font color="#CCCCCC"> questions</font><font color="#E5E5E5"> at this point thanks</font>

573
00:20:04,230 --> 00:20:07,409
again<font color="#E5E5E5"> to</font><font color="#CCCCCC"> all of you for coming that</font>

574
00:20:05,549 --> 00:20:08,850
early and I'm happy<font color="#CCCCCC"> to take your</font>

575
00:20:07,409 --> 00:20:10,559
questions now<font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> questions</font>

576
00:20:08,850 --> 00:20:13,019
there are microphones there<font color="#CCCCCC"> I will try</font>

577
00:20:10,559 --> 00:20:14,639
to repeat<font color="#E5E5E5"> the question and think we have</font>

578
00:20:13,019 --> 00:20:17,020
some time<font color="#CCCCCC"> left</font><font color="#E5E5E5"> for questions</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

579
00:20:14,639 --> 00:20:24,709
so thanks a<font color="#E5E5E5"> lot</font>

580
00:20:17,020 --> 00:20:24,710
[Applause]

