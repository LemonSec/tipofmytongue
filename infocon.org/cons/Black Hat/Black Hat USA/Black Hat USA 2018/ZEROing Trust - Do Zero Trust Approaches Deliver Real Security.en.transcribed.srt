1
00:00:00,000 --> 00:00:05,460
<font color="#E5E5E5">all right thank you</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right you can</font>

2
00:00:02,429 --> 00:00:07,529
hear me<font color="#E5E5E5"> I'm impressed you all</font><font color="#CCCCCC"> blackhat</font>

3
00:00:05,460 --> 00:00:10,290
you made it to<font color="#E5E5E5"> 4:00</font><font color="#CCCCCC"> p.m. I</font><font color="#E5E5E5"> think the</font>

4
00:00:07,529 --> 00:00:12,000
what the medium like number of party

5
00:00:10,290 --> 00:00:15,268
invites you got<font color="#E5E5E5"> from vendors is what six</font>

6
00:00:12,000 --> 00:00:18,690
or seven so<font color="#CCCCCC"> making</font><font color="#E5E5E5"> it to</font><font color="#CCCCCC"> four pm is is</font>

7
00:00:15,269 --> 00:00:20,520
impressive<font color="#E5E5E5"> and I feel blessed so I'm</font>

8
00:00:18,690 --> 00:00:22,800
here to talk<font color="#E5E5E5"> to you today about zero</font>

9
00:00:20,520 --> 00:00:25,980
trust so if that's what you came<font color="#CCCCCC"> here in</font>

10
00:00:22,800 --> 00:00:27,840
the right place<font color="#CCCCCC"> so little introduction</font>

11
00:00:25,980 --> 00:00:30,359
my<font color="#CCCCCC"> name is Dave</font><font color="#E5E5E5"> West and I work out</font>

12
00:00:27,840 --> 00:00:32,340
<font color="#E5E5E5">windows security which means anything</font>

13
00:00:30,359 --> 00:00:34,530
<font color="#CCCCCC">you like</font><font color="#E5E5E5"> about Windows security was</font>

14
00:00:32,340 --> 00:00:36,780
probably my decision anything bad was

15
00:00:34,530 --> 00:00:37,950
somebody else so that's<font color="#CCCCCC"> generally how</font><font color="#E5E5E5"> it</font>

16
00:00:36,780 --> 00:00:39,960
goes

17
00:00:37,950 --> 00:00:42,629
in addition to<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to fix</font><font color="#E5E5E5"> stuff</font>

18
00:00:39,960 --> 00:00:44,160
that's never easy<font color="#E5E5E5"> easy task</font><font color="#CCCCCC"> I have</font>

19
00:00:42,629 --> 00:00:46,019
another team that<font color="#E5E5E5"> breaks stuff so</font>

20
00:00:44,160 --> 00:00:47,129
there's kind of this tit-for-tat that

21
00:00:46,020 --> 00:00:49,230
kind of goes back<font color="#E5E5E5"> and forth</font>

22
00:00:47,129 --> 00:00:51,480
all<font color="#CCCCCC"> the time</font><font color="#E5E5E5"> and that's one of the</font>

23
00:00:49,230 --> 00:00:53,489
reasons I became interested<font color="#E5E5E5"> in in</font><font color="#CCCCCC"> Xero</font>

24
00:00:51,480 --> 00:00:56,669
<font color="#E5E5E5">trust so without further ado I'm gonna</font>

25
00:00:53,489 --> 00:00:59,370
jump in so the obvious question<font color="#CCCCCC"> is what</font>

26
00:00:56,670 --> 00:01:02,100
<font color="#E5E5E5">is zero trust and in reality this is a</font>

27
00:00:59,370 --> 00:01:05,158
massively overloaded term trying to find

28
00:01:02,100 --> 00:01:05,880
the actual<font color="#E5E5E5"> definition of it is really</font>

29
00:01:05,159 --> 00:01:07,170
<font color="#E5E5E5">difficult</font>

30
00:01:05,880 --> 00:01:09,270
it<font color="#CCCCCC"> sounds cool though</font><font color="#E5E5E5"> like I don't want</font>

31
00:01:07,170 --> 00:01:09,900
to<font color="#E5E5E5"> trust anything I have zero trust I'm</font>

32
00:01:09,270 --> 00:01:12,089
good

33
00:01:09,900 --> 00:01:14,340
<font color="#E5E5E5">it sounds really impressive</font><font color="#CCCCCC"> but in</font>

34
00:01:12,090 --> 00:01:16,020
reality there's very few definitions<font color="#CCCCCC"> of</font>

35
00:01:14,340 --> 00:01:17,310
what's happening<font color="#E5E5E5"> here and I'll talk to</font>

36
00:01:16,020 --> 00:01:19,408
you a little<font color="#CCCCCC"> bit of throughout this talk</font>

37
00:01:17,310 --> 00:01:22,110
but<font color="#E5E5E5"> I think in reality zero trust is not</font>

38
00:01:19,409 --> 00:01:24,360
<font color="#CCCCCC">a product it's</font><font color="#E5E5E5"> not an architecture it's</font>

39
00:01:22,110 --> 00:01:26,700
more of a philosophy<font color="#E5E5E5"> similar to saying I</font>

40
00:01:24,360 --> 00:01:31,079
want to sandbox everything or mandatory

41
00:01:26,700 --> 00:01:33,570
<font color="#E5E5E5">access control so the reason why did I</font>

42
00:01:31,079 --> 00:01:35,699
get<font color="#E5E5E5"> interested in ztn well besides all</font>

43
00:01:33,570 --> 00:01:37,258
<font color="#E5E5E5">the security hipsters out there and by</font>

44
00:01:35,700 --> 00:01:38,729
hipsters<font color="#E5E5E5"> and security I actually mean</font>

45
00:01:37,259 --> 00:01:41,009
this in a<font color="#E5E5E5"> positive way it's the people</font>

46
00:01:38,729 --> 00:01:42,240
looking<font color="#CCCCCC"> for new stuff they're looking in</font>

47
00:01:41,009 --> 00:01:44,399
the right directions they're constantly

48
00:01:42,240 --> 00:01:46,199
saying is there a better way<font color="#CCCCCC"> you know I</font>

49
00:01:44,399 --> 00:01:50,130
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use clouds with Chromebooks</font>

50
00:01:46,200 --> 00:01:51,060
directly I don't need antivirus<font color="#CCCCCC"> you know</font>

51
00:01:50,130 --> 00:01:52,890
I don't want to<font color="#E5E5E5"> call anyone</font>

52
00:01:51,060 --> 00:01:54,780
<font color="#E5E5E5">security hipster but I'll call</font><font color="#CCCCCC"> it chris</font>

53
00:01:52,890 --> 00:01:56,640
<font color="#E5E5E5">roll definitely a security hipster</font><font color="#CCCCCC"> i saw</font>

54
00:01:54,780 --> 00:01:59,420
this a few<font color="#CCCCCC"> times and</font><font color="#E5E5E5"> so my interest</font>

55
00:01:56,640 --> 00:02:02,100
<font color="#CCCCCC">became you know these are smart</font><font color="#E5E5E5"> people</font>

56
00:01:59,420 --> 00:02:03,899
<font color="#E5E5E5">quite a few people dino</font><font color="#CCCCCC"> daizo via so a</font>

57
00:02:02,100 --> 00:02:05,339
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people say i want to look at</font>

58
00:02:03,899 --> 00:02:08,429
Chromebooks I'm looking at zero trust

59
00:02:05,340 --> 00:02:10,950
architectures<font color="#CCCCCC"> Google's paper on</font><font color="#E5E5E5"> beyond</font>

60
00:02:08,429 --> 00:02:13,380
<font color="#E5E5E5">Corp was fascinating you've got some</font>

61
00:02:10,949 --> 00:02:15,060
<font color="#E5E5E5">other architectures being proposed</font>

62
00:02:13,380 --> 00:02:17,340
it's very kind<font color="#E5E5E5"> of hip thing in the</font>

63
00:02:15,060 --> 00:02:20,130
security space<font color="#CCCCCC"> so there's some interests</font>

64
00:02:17,340 --> 00:02:21,480
<font color="#CCCCCC">there generally though when I hear a lot</font>

65
00:02:20,130 --> 00:02:24,180
<font color="#CCCCCC">of buzz</font><font color="#E5E5E5"> about something I'm super</font>

66
00:02:21,480 --> 00:02:26,010
skeptical<font color="#CCCCCC"> and when I show up at RSA and</font>

67
00:02:24,180 --> 00:02:27,720
there's a truck<font color="#E5E5E5"> that's a zero trust I'm</font>

68
00:02:26,010 --> 00:02:30,209
really skeptical at that point<font color="#E5E5E5"> right</font>

69
00:02:27,720 --> 00:02:31,980
there's no free<font color="#CCCCCC"> lunch</font><font color="#E5E5E5"> and even though I</font>

70
00:02:30,210 --> 00:02:33,570
implement security<font color="#E5E5E5"> software my</font>

71
00:02:31,980 --> 00:02:36,049
backgrounds<font color="#E5E5E5"> in attack so it's always</font>

72
00:02:33,570 --> 00:02:40,140
<font color="#E5E5E5">what's the catch here this can't work</font>

73
00:02:36,050 --> 00:02:42,060
<font color="#E5E5E5">however I'm very you know I'm very into</font>

74
00:02:40,140 --> 00:02:44,850
the zero trust mantra<font color="#E5E5E5"> I'm very skeptical</font>

75
00:02:42,060 --> 00:02:47,910
but Heather<font color="#E5E5E5"> Atkins from Google I respect</font>

76
00:02:44,850 --> 00:02:50,910
a<font color="#E5E5E5"> lot I trust her yeah I saw her talk at</font>

77
00:02:47,910 --> 00:02:53,250
RSA in a very<font color="#CCCCCC"> open and transparent way</font>

78
00:02:50,910 --> 00:02:55,410
about the transformative exercise of

79
00:02:53,250 --> 00:02:56,700
getting<font color="#CCCCCC"> zero trust implemented to defend</font>

80
00:02:55,410 --> 00:02:57,120
against adversaries<font color="#E5E5E5"> at Google what I</font>

81
00:02:56,700 --> 00:02:58,500
said okay

82
00:02:57,120 --> 00:03:01,350
there might be something interesting

83
00:02:58,500 --> 00:03:04,020
there now the second reason I was

84
00:03:01,350 --> 00:03:06,269
interested<font color="#E5E5E5"> is I work on device and OS</font>

85
00:03:04,020 --> 00:03:08,310
security and my life looks something

86
00:03:06,270 --> 00:03:09,600
<font color="#CCCCCC">like I live five years</font><font color="#E5E5E5"> or ten</font><font color="#CCCCCC"> years in</font>

87
00:03:08,310 --> 00:03:11,580
the<font color="#E5E5E5"> future</font><font color="#CCCCCC"> that's what all my friends</font>

88
00:03:09,600 --> 00:03:13,560
<font color="#E5E5E5">tell me you know mentioned an attack I'm</font>

89
00:03:11,580 --> 00:03:14,910
like I've mitigated that<font color="#E5E5E5"> to releases ago</font>

90
00:03:13,560 --> 00:03:17,250
<font color="#E5E5E5">they're like people</font><font color="#CCCCCC"> are still trying</font><font color="#E5E5E5"> to</font>

91
00:03:14,910 --> 00:03:20,490
update<font color="#CCCCCC"> XP man like you're</font><font color="#E5E5E5"> talking about</font>

92
00:03:17,250 --> 00:03:22,260
hypervisor security come on and so

93
00:03:20,490 --> 00:03:25,050
there's a reality to<font color="#CCCCCC"> that right</font><font color="#E5E5E5"> and</font>

94
00:03:22,260 --> 00:03:27,030
occasionally I<font color="#CCCCCC"> seem I see the error in</font>

95
00:03:25,050 --> 00:03:28,920
my<font color="#CCCCCC"> ways which is</font><font color="#E5E5E5"> you know I'll work with</font>

96
00:03:27,030 --> 00:03:30,480
<font color="#CCCCCC">maybe</font><font color="#E5E5E5"> a corporate</font><font color="#CCCCCC"> red</font><font color="#E5E5E5"> team and I'll give</font>

97
00:03:28,920 --> 00:03:32,730
them a<font color="#E5E5E5"> zero-day exploit chain and</font>

98
00:03:30,480 --> 00:03:35,190
they'll<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of go like I don't even</font>

99
00:03:32,730 --> 00:03:36,929
<font color="#E5E5E5">need your exploit</font><font color="#CCCCCC"> Ain</font><font color="#E5E5E5"> I'll find the I'll</font>

100
00:03:35,190 --> 00:03:39,359
find the weakest part<font color="#CCCCCC"> of the herd I'll</font>

101
00:03:36,930 --> 00:03:42,990
find the<font color="#E5E5E5"> HVAC machine</font><font color="#CCCCCC"> I'll find</font><font color="#E5E5E5"> that</font>

102
00:03:39,360 --> 00:03:44,880
printer still running Sun OS<font color="#CCCCCC"> 5 from 1989</font>

103
00:03:42,990 --> 00:03:46,830
and all you<font color="#E5E5E5"> red team is in here no</font>

104
00:03:44,880 --> 00:03:48,450
<font color="#CCCCCC">that's exactly what you look for you get</font>

105
00:03:46,830 --> 00:03:50,550
the necessary<font color="#E5E5E5"> like oh there's this</font>

106
00:03:48,450 --> 00:03:52,589
printer<font color="#E5E5E5"> that's not patch there's this IP</font>

107
00:03:50,550 --> 00:03:55,080
cam and pretty soon you're moving

108
00:03:52,590 --> 00:03:57,300
throughout<font color="#CCCCCC"> the network</font><font color="#E5E5E5"> and so you know</font>

109
00:03:55,080 --> 00:03:58,980
as I'm actually giving<font color="#CCCCCC"> people these you</font>

110
00:03:57,300 --> 00:04:00,450
know million dollar<font color="#E5E5E5"> explains are like</font>

111
00:03:58,980 --> 00:04:03,420
we're good we already sent the

112
00:04:00,450 --> 00:04:05,609
<font color="#E5E5E5">spearfishing mails</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> dumped creds</font><font color="#CCCCCC"> we're</font>

113
00:04:03,420 --> 00:04:07,708
good what I started to realize is you're

114
00:04:05,610 --> 00:04:09,810
not actually solving much at an

115
00:04:07,709 --> 00:04:12,360
individual device<font color="#E5E5E5"> level you've actually</font>

116
00:04:09,810 --> 00:04:14,910
got an<font color="#E5E5E5"> up level in terms of networks and</font>

117
00:04:12,360 --> 00:04:16,859
the reality is<font color="#E5E5E5"> you know I'm not a</font>

118
00:04:14,910 --> 00:04:18,600
<font color="#E5E5E5">network architecture person but from</font><font color="#CCCCCC"> an</font>

119
00:04:16,858 --> 00:04:20,130
outside perspective<font color="#CCCCCC"> it</font><font color="#E5E5E5"> seems to be</font>

120
00:04:18,600 --> 00:04:22,530
<font color="#CCCCCC">moving slow there isn't a ton</font><font color="#E5E5E5"> of</font>

121
00:04:20,130 --> 00:04:24,960
innovation<font color="#CCCCCC"> so when I saw the concept of</font>

122
00:04:22,530 --> 00:04:26,460
zero trust which from my<font color="#E5E5E5"> operating</font>

123
00:04:24,960 --> 00:04:28,258
<font color="#E5E5E5">systems background matches</font>

124
00:04:26,460 --> 00:04:30,000
quite a bit<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think of it as</font><font color="#E5E5E5"> mandatory</font>

125
00:04:28,259 --> 00:04:31,680
access control which<font color="#CCCCCC"> is you know</font>

126
00:04:30,000 --> 00:04:34,979
principle of least privilege<font color="#CCCCCC"> enforced on</font>

127
00:04:31,680 --> 00:04:36,630
every process no if ands or<font color="#E5E5E5"> buts unless</font>

128
00:04:34,979 --> 00:04:38,340
I know who<font color="#CCCCCC"> you are you're not</font><font color="#E5E5E5"> getting</font>

129
00:04:36,630 --> 00:04:41,460
access<font color="#E5E5E5"> you know it kind of makes sense</font>

130
00:04:38,340 --> 00:04:44,280
<font color="#CCCCCC">and hopefully</font><font color="#E5E5E5"> it's ELPS to solve that</font>

131
00:04:41,460 --> 00:04:46,198
<font color="#E5E5E5">HVAC machine or that one user</font><font color="#CCCCCC"> who got</font>

132
00:04:44,280 --> 00:04:49,080
the exemption from<font color="#CCCCCC"> mfa which is always</font>

133
00:04:46,199 --> 00:04:50,430
<font color="#E5E5E5">how the attackers come in and it's going</font>

134
00:04:49,080 --> 00:04:53,310
to<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the weakest in</font><font color="#CCCCCC"> the</font>

135
00:04:50,430 --> 00:04:55,590
<font color="#CCCCCC">herd is still fairly substantial</font><font color="#E5E5E5"> the</font>

136
00:04:53,310 --> 00:04:59,250
real question is is how<font color="#E5E5E5"> hard is that to</font>

137
00:04:55,590 --> 00:05:01,080
do and how well does<font color="#CCCCCC"> it work</font><font color="#E5E5E5"> so there's</font>

138
00:04:59,250 --> 00:05:02,970
a couple<font color="#CCCCCC"> other things</font><font color="#E5E5E5"> that are going on</font>

139
00:05:01,080 --> 00:05:06,090
I<font color="#CCCCCC"> think are driving the massive interest</font>

140
00:05:02,970 --> 00:05:08,610
<font color="#E5E5E5">in zero trust the first is perimeter</font>

141
00:05:06,090 --> 00:05:10,799
security models are<font color="#E5E5E5"> whacked when I can</font>

142
00:05:08,610 --> 00:05:12,690
own your whole<font color="#CCCCCC"> network because somebody</font>

143
00:05:10,800 --> 00:05:14,580
and accounting clicked on a macro it's

144
00:05:12,690 --> 00:05:16,680
<font color="#E5E5E5">just not working with like we need to</font>

145
00:05:14,580 --> 00:05:20,340
<font color="#E5E5E5">rethink and so I think a lot of people</font>

146
00:05:16,680 --> 00:05:22,380
realize<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the second thing is BYOD</font>

147
00:05:20,340 --> 00:05:24,960
and<font color="#E5E5E5"> bringing all your devices means when</font>

148
00:05:22,380 --> 00:05:26,849
you used<font color="#E5E5E5"> to stack those 27 agents on the</font>

149
00:05:24,960 --> 00:05:29,430
device<font color="#E5E5E5"> where there's like</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> antivirus</font>

150
00:05:26,849 --> 00:05:30,389
<font color="#E5E5E5">is a one DLP and the users machines now</font>

151
00:05:29,430 --> 00:05:32,729
<font color="#CCCCCC">have</font><font color="#E5E5E5"> 40% slower</font>

152
00:05:30,389 --> 00:05:35,580
<font color="#E5E5E5">that can't happen when your users are</font>

153
00:05:32,729 --> 00:05:37,740
bringing in you know<font color="#E5E5E5"> iPads</font><font color="#CCCCCC"> iDevices</font><font color="#E5E5E5"> 10s</font>

154
00:05:35,580 --> 00:05:39,508
devices<font color="#CCCCCC"> etc so there's a lot</font><font color="#E5E5E5"> of people</font>

155
00:05:37,740 --> 00:05:41,849
saying the way I used to<font color="#E5E5E5"> do things</font>

156
00:05:39,509 --> 00:05:43,919
provision you know my<font color="#CCCCCC"> 27 security agents</font>

157
00:05:41,849 --> 00:05:47,280
<font color="#E5E5E5">that's just not going to work and I need</font>

158
00:05:43,919 --> 00:05:49,830
that<font color="#CCCCCC"> because of</font><font color="#E5E5E5"> exhibit</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> around the the</font>

159
00:05:47,280 --> 00:05:52,198
softness<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the endpoints</font><font color="#E5E5E5"> and then</font>

160
00:05:49,830 --> 00:05:55,800
number three is is<font color="#E5E5E5"> cloud so even if</font>

161
00:05:52,199 --> 00:05:58,800
you're doing<font color="#CCCCCC"> these</font><font color="#E5E5E5"> IDs and</font><font color="#CCCCCC"> backhauling</font>

162
00:05:55,800 --> 00:06:01,590
traffic and doing DLP systems<font color="#E5E5E5"> involve</font>

163
00:05:58,800 --> 00:06:03,870
<font color="#E5E5E5">deep packet inspection and and deep</font>

164
00:06:01,590 --> 00:06:05,609
analysis that's not really going<font color="#E5E5E5"> to work</font>

165
00:06:03,870 --> 00:06:07,620
in a cloud native<font color="#E5E5E5"> world when most of</font>

166
00:06:05,610 --> 00:06:10,830
your<font color="#CCCCCC"> users</font><font color="#E5E5E5"> are rocking off of Dropbox or</font>

167
00:06:07,620 --> 00:06:12,719
onedrive<font color="#CCCCCC"> or Twitter or whatever</font><font color="#E5E5E5"> so there</font>

168
00:06:10,830 --> 00:06:14,669
are a<font color="#CCCCCC"> bunch of transformative things</font>

169
00:06:12,719 --> 00:06:16,590
happening at one time that are allowing

170
00:06:14,669 --> 00:06:18,479
this inflection<font color="#E5E5E5"> point</font><font color="#CCCCCC"> where someone</font><font color="#E5E5E5"> can</font>

171
00:06:16,590 --> 00:06:20,400
say maybe<font color="#E5E5E5"> I should change my network</font>

172
00:06:18,479 --> 00:06:24,120
architecture and I think that drives

173
00:06:20,400 --> 00:06:25,620
some interest in<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of trust now</font><font color="#E5E5E5"> as I</font>

174
00:06:24,120 --> 00:06:28,080
said<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think of zero trust is a</font>

175
00:06:25,620 --> 00:06:30,090
philosophy that's realistically what it

176
00:06:28,080 --> 00:06:32,940
is and I<font color="#E5E5E5"> think of it as three tenets</font>

177
00:06:30,090 --> 00:06:35,190
<font color="#E5E5E5">this is just D</font><font color="#CCCCCC"> wizzle's three tenets so</font>

178
00:06:32,940 --> 00:06:37,289
the first is you don't get anything<font color="#CCCCCC"> just</font>

179
00:06:35,190 --> 00:06:40,410
because<font color="#CCCCCC"> you're on the network that's the</font>

180
00:06:37,289 --> 00:06:41,909
simple<font color="#E5E5E5"> concept</font><font color="#CCCCCC"> if I plug</font><font color="#E5E5E5"> into an rj45</font>

181
00:06:40,410 --> 00:06:43,950
in your network<font color="#CCCCCC"> I</font><font color="#E5E5E5"> shouldn't be able to</font>

182
00:06:41,910 --> 00:06:45,570
<font color="#E5E5E5">hit an SMB share or we're gonna see</font>

183
00:06:43,950 --> 00:06:49,140
dollar admin right I shouldn't be able

184
00:06:45,570 --> 00:06:51,840
<font color="#E5E5E5">to do that or</font><font color="#CCCCCC"> and in the zero trust</font>

185
00:06:49,140 --> 00:06:54,719
world<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> assume anybody</font><font color="#E5E5E5"> on the</font>

186
00:06:51,840 --> 00:06:56,760
network is pwned<font color="#CCCCCC"> and that actually turns</font>

187
00:06:54,720 --> 00:06:58,890
out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be a philosophy that helps a lot</font>

188
00:06:56,760 --> 00:07:01,260
it's<font color="#E5E5E5"> very similar to thinking your</font>

189
00:06:58,890 --> 00:07:02,940
browser tab is compromised<font color="#CCCCCC"> and thus you</font>

190
00:07:01,260 --> 00:07:04,800
always have to be thinking<font color="#CCCCCC"> about what</font>

191
00:07:02,940 --> 00:07:07,200
exploit mitigations can I apply how do I

192
00:07:04,800 --> 00:07:09,930
get isolation there etc etc<font color="#E5E5E5"> it sort of</font>

193
00:07:07,200 --> 00:07:12,030
brings<font color="#E5E5E5"> that concept to the network the</font>

194
00:07:09,930 --> 00:07:15,150
second thing that's<font color="#E5E5E5"> very</font><font color="#CCCCCC"> interesting in</font>

195
00:07:12,030 --> 00:07:18,750
my<font color="#CCCCCC"> opinion is this idea of everything</font><font color="#E5E5E5"> is</font>

196
00:07:15,150 --> 00:07:21,390
rejected by default<font color="#E5E5E5"> and again to harp on</font>

197
00:07:18,750 --> 00:07:23,580
<font color="#E5E5E5">that term mandatory access</font><font color="#CCCCCC"> control in a</font>

198
00:07:21,390 --> 00:07:25,890
world<font color="#E5E5E5"> where you have</font><font color="#CCCCCC"> a centralized proxy</font>

199
00:07:23,580 --> 00:07:28,080
that understands identity and device

200
00:07:25,890 --> 00:07:30,630
<font color="#E5E5E5">trust by default you're dropping all</font>

201
00:07:28,080 --> 00:07:32,190
traffic<font color="#CCCCCC"> so</font><font color="#E5E5E5"> even if I send a TCP packet</font>

202
00:07:30,630 --> 00:07:35,490
it should be routed<font color="#E5E5E5"> through this you</font>

203
00:07:32,190 --> 00:07:37,140
<font color="#E5E5E5">know magic proxy or segmentation gateway</font>

204
00:07:35,490 --> 00:07:40,140
<font color="#E5E5E5">or whatever you want to call it and if I</font>

205
00:07:37,140 --> 00:07:41,700
cannot<font color="#CCCCCC"> identify</font><font color="#E5E5E5"> the key policy</font><font color="#CCCCCC"> elements</font>

206
00:07:40,140 --> 00:07:44,070
so identity<font color="#E5E5E5"> and device trip</font>

207
00:07:41,700 --> 00:07:46,590
it's just dropped<font color="#E5E5E5"> there is no access</font><font color="#CCCCCC"> to</font>

208
00:07:44,070 --> 00:07:48,120
resources<font color="#CCCCCC"> that's a very big</font><font color="#E5E5E5"> change</font><font color="#CCCCCC"> from</font>

209
00:07:46,590 --> 00:07:50,159
you<font color="#CCCCCC"> know your conventional Windows</font>

210
00:07:48,120 --> 00:07:52,200
<font color="#CCCCCC">network where I'm able to hop around</font><font color="#E5E5E5"> on</font>

211
00:07:50,160 --> 00:07:55,830
admin shares the second I get<font color="#E5E5E5"> on the</font>

212
00:07:52,200 --> 00:07:58,950
network<font color="#CCCCCC"> and get</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> DHCP IFP the third</font>

213
00:07:55,830 --> 00:08:01,440
thing<font color="#E5E5E5"> is you're really shifting to a</font>

214
00:07:58,950 --> 00:08:04,229
model that<font color="#CCCCCC"> requires two things at all</font>

215
00:08:01,440 --> 00:08:05,940
times<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> is that I understand</font>

216
00:08:04,230 --> 00:08:07,890
deeply<font color="#E5E5E5"> who the user is and there's a</font>

217
00:08:05,940 --> 00:08:09,870
rabbit hole<font color="#CCCCCC"> of that of they have the</font>

218
00:08:07,890 --> 00:08:11,580
password all the way down to<font color="#E5E5E5"> they're</font>

219
00:08:09,870 --> 00:08:13,620
coming<font color="#E5E5E5"> from a device that I specifically</font>

220
00:08:11,580 --> 00:08:16,859
<font color="#CCCCCC">a provision to key in the you know</font>

221
00:08:13,620 --> 00:08:18,930
<font color="#E5E5E5">iPhone step and the trust in the device</font>

222
00:08:16,860 --> 00:08:20,910
<font color="#E5E5E5">and again that's a rabbit hole from this</font>

223
00:08:18,930 --> 00:08:22,890
device looks<font color="#E5E5E5"> like it's patched from the</font>

224
00:08:20,910 --> 00:08:25,380
<font color="#E5E5E5">JavaScript user agent string I read all</font>

225
00:08:22,890 --> 00:08:27,840
<font color="#E5E5E5">the way down to</font><font color="#CCCCCC"> Harbor based</font><font color="#E5E5E5"> attestation</font>

226
00:08:25,380 --> 00:08:30,600
with something like<font color="#E5E5E5"> Intel txt but the</font>

227
00:08:27,840 --> 00:08:33,478
concept is<font color="#E5E5E5"> at any given time I can</font>

228
00:08:30,600 --> 00:08:34,680
dynamically gate access<font color="#E5E5E5"> based on what I</font>

229
00:08:33,479 --> 00:08:36,419
know about<font color="#CCCCCC"> the user</font><font color="#E5E5E5"> and what I know</font>

230
00:08:34,679 --> 00:08:38,640
about<font color="#E5E5E5"> the device and so there's a</font>

231
00:08:36,419 --> 00:08:40,020
<font color="#E5E5E5">sliding scale there which is in the</font>

232
00:08:38,640 --> 00:08:41,729
<font color="#E5E5E5">morning maybe you had</font><font color="#CCCCCC"> access to the</font>

233
00:08:40,020 --> 00:08:43,949
Joint Strike Fighter plans but if you

234
00:08:41,729 --> 00:08:45,540
clicked on the macro<font color="#E5E5E5"> you should only be</font>

235
00:08:43,950 --> 00:08:47,420
<font color="#CCCCCC">able to get to the wiki that tells you</font>

236
00:08:45,540 --> 00:08:50,579
how<font color="#CCCCCC"> to clean</font><font color="#E5E5E5"> that up you should</font>

237
00:08:47,420 --> 00:08:52,500
automatically<font color="#E5E5E5"> have dynamic security</font>

238
00:08:50,580 --> 00:08:54,180
<font color="#E5E5E5">policies applied that's a really</font>

239
00:08:52,500 --> 00:08:55,860
powerful<font color="#CCCCCC"> concept because today</font>

240
00:08:54,180 --> 00:08:59,459
very<font color="#CCCCCC"> binary it's either you have access</font>

241
00:08:55,860 --> 00:09:01,440
or you don't so moving<font color="#E5E5E5"> ahead</font><font color="#CCCCCC"> really</font>

242
00:08:59,460 --> 00:09:03,720
there's three key security properties<font color="#CCCCCC"> a</font>

243
00:09:01,440 --> 00:09:05,790
<font color="#E5E5E5">zero trust claims to give us one is</font>

244
00:09:03,720 --> 00:09:07,500
attack surface reduction because<font color="#E5E5E5"> we've</font>

245
00:09:05,790 --> 00:09:09,719
cleaned up<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> so it goes</font>

246
00:09:07,500 --> 00:09:11,520
through<font color="#CCCCCC"> the central hub ostensibly we</font>

247
00:09:09,720 --> 00:09:13,440
removed any<font color="#E5E5E5"> network surface flows that</font>

248
00:09:11,520 --> 00:09:15,870
were not in our control plane previously

249
00:09:13,440 --> 00:09:17,700
the second as I said is<font color="#CCCCCC"> mandatory access</font>

250
00:09:15,870 --> 00:09:19,770
control every<font color="#CCCCCC"> Network flow has to be</font>

251
00:09:17,700 --> 00:09:22,500
<font color="#CCCCCC">accounted for from a device trust an</font>

252
00:09:19,770 --> 00:09:25,290
identity perspective<font color="#E5E5E5"> and then the third</font>

253
00:09:22,500 --> 00:09:27,270
thing<font color="#E5E5E5"> which is a key</font><font color="#CCCCCC"> component is least</font>

254
00:09:25,290 --> 00:09:28,829
<font color="#E5E5E5">privilege at all times</font><font color="#CCCCCC"> only get</font>

255
00:09:27,270 --> 00:09:31,380
absolutely<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you need access to</font>

256
00:09:28,830 --> 00:09:32,580
<font color="#E5E5E5">that's easier</font><font color="#CCCCCC"> said than done for</font><font color="#E5E5E5"> anybody</font>

257
00:09:31,380 --> 00:09:36,230
who's worked in Identity and Access

258
00:09:32,580 --> 00:09:39,990
Management<font color="#E5E5E5"> but that's the concept here</font>

259
00:09:36,230 --> 00:09:41,520
now the real<font color="#CCCCCC"> issue I think is this also</font>

260
00:09:39,990 --> 00:09:43,980
probably<font color="#E5E5E5"> sounds good at a high level</font>

261
00:09:41,520 --> 00:09:46,890
<font color="#CCCCCC">you're like this is cool but you know</font>

262
00:09:43,980 --> 00:09:48,570
<font color="#E5E5E5">Dave what do I do here and the reality</font>

263
00:09:46,890 --> 00:09:52,020
is it's<font color="#CCCCCC"> very squishy what people mean by</font>

264
00:09:48,570 --> 00:09:53,910
<font color="#CCCCCC">Xero trusts in fact as I said</font><font color="#E5E5E5"> because</font>

265
00:09:52,020 --> 00:09:56,819
<font color="#CCCCCC">it's a philosophy</font><font color="#E5E5E5"> people can easily</font>

266
00:09:53,910 --> 00:09:57,719
adopt<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and say this thing I built is</font>

267
00:09:56,820 --> 00:10:00,570
zero<font color="#E5E5E5"> trust</font>

268
00:09:57,720 --> 00:10:02,010
there's no<font color="#E5E5E5"> RFC manual that you</font><font color="#CCCCCC"> can look</font>

269
00:10:00,570 --> 00:10:03,600
up<font color="#E5E5E5"> that's going to have a standard on</font>

270
00:10:02,010 --> 00:10:06,420
this although I'm sure<font color="#E5E5E5"> somebody</font><font color="#CCCCCC"> will try</font>

271
00:10:03,600 --> 00:10:08,070
at some point<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the reality is some</font>

272
00:10:06,420 --> 00:10:09,719
people<font color="#E5E5E5"> are client focus which</font><font color="#CCCCCC"> is your</font>

273
00:10:08,070 --> 00:10:11,880
conventional enterprise network and

274
00:10:09,720 --> 00:10:14,790
they're building<font color="#E5E5E5"> kind of constructs or</font>

275
00:10:11,880 --> 00:10:16,770
internal through internal mechanisms to

276
00:10:14,790 --> 00:10:20,069
do that<font color="#E5E5E5"> other folks are very focused on</font>

277
00:10:16,770 --> 00:10:21,660
the server side<font color="#CCCCCC"> I've seen lots of micro</font>

278
00:10:20,070 --> 00:10:23,850
segmentation based networks where

279
00:10:21,660 --> 00:10:26,010
they're trying<font color="#E5E5E5"> to do everything around</font>

280
00:10:23,850 --> 00:10:27,990
<font color="#E5E5E5">the Weisse trust just by looking at</font><font color="#CCCCCC"> the</font>

281
00:10:26,010 --> 00:10:30,270
<font color="#E5E5E5">network traffic coming</font><font color="#CCCCCC"> from the device</font><font color="#E5E5E5"> I</font>

282
00:10:27,990 --> 00:10:31,920
don't advise you<font color="#CCCCCC"> do that but if you're a</font>

283
00:10:30,270 --> 00:10:33,630
<font color="#E5E5E5">network centric person maybe that's the</font>

284
00:10:31,920 --> 00:10:35,610
way you do<font color="#E5E5E5"> things you want to look at</font>

285
00:10:33,630 --> 00:10:37,740
for<font color="#E5E5E5"> traffic anomalies you want to apply</font>

286
00:10:35,610 --> 00:10:40,079
IDs to the device and if you see any

287
00:10:37,740 --> 00:10:43,860
weird traffic you put<font color="#E5E5E5"> that in a lower</font>

288
00:10:40,079 --> 00:10:46,109
trust category however<font color="#CCCCCC"> for my</font><font color="#E5E5E5"> purposes</font>

289
00:10:43,860 --> 00:10:47,730
and again this is my this<font color="#CCCCCC"> is sort of my</font>

290
00:10:46,110 --> 00:10:50,040
selfish thing is I'm looking<font color="#E5E5E5"> at what is</font>

291
00:10:47,730 --> 00:10:52,140
<font color="#E5E5E5">the next generation</font><font color="#CCCCCC"> terrible term but</font>

292
00:10:50,040 --> 00:10:54,300
<font color="#E5E5E5">what</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> next generation</font><font color="#CCCCCC"> of client</font>

293
00:10:52,140 --> 00:10:56,520
networks look like how<font color="#E5E5E5"> can we adopt some</font>

294
00:10:54,300 --> 00:11:00,120
of<font color="#CCCCCC"> these philosophies and the two major</font>

295
00:10:56,520 --> 00:11:02,100
kind of solution architectures<font color="#CCCCCC"> that I've</font>

296
00:11:00,120 --> 00:11:04,110
seen our<font color="#CCCCCC"> Google</font><font color="#E5E5E5"> beyond</font><font color="#CCCCCC"> core</font><font color="#E5E5E5"> of which</font>

297
00:11:02,100 --> 00:11:05,730
there's quite a few vendors<font color="#E5E5E5"> building</font>

298
00:11:04,110 --> 00:11:08,010
stuff<font color="#E5E5E5"> on and then Microsoft's</font>

299
00:11:05,730 --> 00:11:10,230
conditional access<font color="#E5E5E5"> which again</font>

300
00:11:08,010 --> 00:11:12,630
loose<font color="#E5E5E5"> terms is essentially a</font><font color="#CCCCCC"> zero trust</font>

301
00:11:10,230 --> 00:11:16,910
<font color="#E5E5E5">architecture and so that's what I looked</font>

302
00:11:12,630 --> 00:11:19,260
at when evaluating<font color="#CCCCCC"> the</font><font color="#E5E5E5"> security so</font>

303
00:11:16,910 --> 00:11:21,839
probably the easiest thing<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> is to</font>

304
00:11:19,260 --> 00:11:24,480
<font color="#E5E5E5">level set on what are we trying to solve</font>

305
00:11:21,840 --> 00:11:26,100
<font color="#E5E5E5">here</font><font color="#CCCCCC"> and as much as people talk about</font>

306
00:11:24,480 --> 00:11:27,960
breaches there's actually very<font color="#E5E5E5"> little</font>

307
00:11:26,100 --> 00:11:29,940
<font color="#E5E5E5">public information about what a real</font>

308
00:11:27,960 --> 00:11:31,860
breach looks like normally if you get

309
00:11:29,940 --> 00:11:34,050
completely pwned<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a bunch of</font><font color="#CCCCCC"> IR people</font>

310
00:11:31,860 --> 00:11:35,850
come into<font color="#CCCCCC"> your network</font><font color="#E5E5E5"> you don't write a</font>

311
00:11:34,050 --> 00:11:38,459
blog<font color="#CCCCCC"> about it sometimes you do there was</font>

312
00:11:35,850 --> 00:11:40,410
a great one<font color="#CCCCCC"> I think I read it just the</font>

313
00:11:38,460 --> 00:11:42,840
other<font color="#E5E5E5"> week</font><font color="#CCCCCC"> but it's it's very infrequent</font>

314
00:11:40,410 --> 00:11:46,199
so I modeled what<font color="#E5E5E5"> I think is a canonical</font>

315
00:11:42,840 --> 00:11:48,690
sort of classic<font color="#E5E5E5"> enterprise breach based</font>

316
00:11:46,200 --> 00:11:51,390
on the cert documentation on grisly step

317
00:11:48,690 --> 00:11:53,790
which is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> so-called BNC hack but it's</font>

318
00:11:51,390 --> 00:11:55,439
<font color="#E5E5E5">very kind of rinse and repeat so</font>

319
00:11:53,790 --> 00:11:57,449
conceptually<font color="#CCCCCC"> you've got a</font><font color="#E5E5E5"> bunch of</font>

320
00:11:55,440 --> 00:11:58,950
devices<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are in this chewy</font><font color="#CCCCCC"> center</font>

321
00:11:57,450 --> 00:12:01,410
<font color="#CCCCCC">network right where you've got a</font>

322
00:11:58,950 --> 00:12:03,600
hardened<font color="#CCCCCC"> dmz probably some firewall some</font>

323
00:12:01,410 --> 00:12:07,079
IDs kind of stuff and then internally

324
00:12:03,600 --> 00:12:08,640
<font color="#E5E5E5">you have a free-for-all of access</font><font color="#CCCCCC"> to</font>

325
00:12:07,080 --> 00:12:10,890
shares and transitive trust

326
00:12:08,640 --> 00:12:13,740
relationships<font color="#E5E5E5"> admin</font><font color="#CCCCCC"> shares</font><font color="#E5E5E5"> remote method</font>

327
00:12:10,890 --> 00:12:15,300
invocation all that good<font color="#CCCCCC"> stuff and so</font>

328
00:12:13,740 --> 00:12:17,940
what we know<font color="#CCCCCC"> from at least</font><font color="#E5E5E5"> the IOC is</font>

329
00:12:15,300 --> 00:12:19,859
published by<font color="#CCCCCC"> us</font><font color="#E5E5E5"> cert and others is the</font>

330
00:12:17,940 --> 00:12:21,540
initial compromise came from a link to

331
00:12:19,860 --> 00:12:24,150
you guessed it<font color="#E5E5E5"> an executable which</font>

332
00:12:21,540 --> 00:12:25,469
someone ran once that I ran that

333
00:12:24,150 --> 00:12:28,020
executable<font color="#CCCCCC"> there living off the land</font>

334
00:12:25,470 --> 00:12:29,730
trying<font color="#E5E5E5"> to evade whatever client-side</font>

335
00:12:28,020 --> 00:12:32,490
introspection there is there so they're

336
00:12:29,730 --> 00:12:34,110
running<font color="#CCCCCC"> a Python implant which should do</font>

337
00:12:32,490 --> 00:12:36,390
a lot<font color="#CCCCCC"> of interpreted stuff in memory</font>

338
00:12:34,110 --> 00:12:38,370
<font color="#E5E5E5">that should be harder to detect from</font>

339
00:12:36,390 --> 00:12:41,160
there they get credentials<font color="#E5E5E5"> in a very</font>

340
00:12:38,370 --> 00:12:43,680
classic way<font color="#E5E5E5"> PowerShell me me cats dump</font>

341
00:12:41,160 --> 00:12:46,890
<font color="#E5E5E5">nothing new here I end up doing</font><font color="#CCCCCC"> past the</font>

342
00:12:43,680 --> 00:12:49,020
hash<font color="#E5E5E5"> and</font><font color="#CCCCCC"> move around with a WMI based</font>

343
00:12:46,890 --> 00:12:50,790
persistence mechanism as a way to get<font color="#E5E5E5"> in</font>

344
00:12:49,020 --> 00:12:53,550
the back door<font color="#CCCCCC"> and then they eventually</font>

345
00:12:50,790 --> 00:12:55,740
<font color="#E5E5E5">exfiltrate information so the key here</font>

346
00:12:53,550 --> 00:12:58,290
<font color="#CCCCCC">is they get</font><font color="#E5E5E5"> on one device lateral</font>

347
00:12:55,740 --> 00:12:59,850
movement expand<font color="#E5E5E5"> breach scope rinse and</font>

348
00:12:58,290 --> 00:13:02,219
<font color="#CCCCCC">repeat and the network is completely</font>

349
00:12:59,850 --> 00:13:03,660
<font color="#E5E5E5">owned and this is ultimately the</font>

350
00:13:02,220 --> 00:13:06,090
potential<font color="#CCCCCC"> value of zero Trust is</font>

351
00:13:03,660 --> 00:13:09,600
removing this concept or<font color="#E5E5E5"> this very</font>

352
00:13:06,090 --> 00:13:11,730
slippery<font color="#E5E5E5"> slope from network design so</font>

353
00:13:09,600 --> 00:13:13,590
the way<font color="#E5E5E5"> that Google proposes to do this</font>

354
00:13:11,730 --> 00:13:14,970
is they<font color="#E5E5E5"> sort of implement a few</font>

355
00:13:13,590 --> 00:13:17,850
different constructs in their network

356
00:13:14,970 --> 00:13:20,400
<font color="#E5E5E5">the first is they use mandatory user</font>

357
00:13:17,850 --> 00:13:21,560
identity management<font color="#E5E5E5"> which could be an</font>

358
00:13:20,400 --> 00:13:23,029
LDAP server

359
00:13:21,560 --> 00:13:25,099
<font color="#CCCCCC">oh gee sweet server it could be</font>

360
00:13:23,029 --> 00:13:26,720
<font color="#E5E5E5">cloud-based Active Directory it could be</font>

361
00:13:25,100 --> 00:13:28,820
a local active<font color="#CCCCCC"> directory's long as it's</font>

362
00:13:26,720 --> 00:13:30,680
got<font color="#E5E5E5"> an API where from an enforcement</font>

363
00:13:28,820 --> 00:13:33,740
<font color="#E5E5E5">point I can query attributes about the</font>

364
00:13:30,680 --> 00:13:35,689
user<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can probably use</font><font color="#CCCCCC"> it if there's</font>

365
00:13:33,740 --> 00:13:38,000
<font color="#E5E5E5">single sign-on integrated that's even</font>

366
00:13:35,690 --> 00:13:39,470
better<font color="#CCCCCC"> because now the identity itself</font>

367
00:13:38,000 --> 00:13:41,810
<font color="#E5E5E5">becomes the control point</font>

368
00:13:39,470 --> 00:13:43,520
<font color="#CCCCCC">anytime you login I can demand</font><font color="#E5E5E5"> or you</font>

369
00:13:41,810 --> 00:13:46,069
that try to<font color="#E5E5E5"> access resources I can</font>

370
00:13:43,520 --> 00:13:47,870
demand<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you present MFA I can demand</font>

371
00:13:46,070 --> 00:13:49,430
<font color="#E5E5E5">attributes about your identity</font><font color="#CCCCCC"> I can</font>

372
00:13:47,870 --> 00:13:51,740
demand you<font color="#E5E5E5"> come from a certain</font><font color="#CCCCCC"> geo</font>

373
00:13:49,430 --> 00:13:52,449
<font color="#CCCCCC">location</font><font color="#E5E5E5"> it's a lot of control available</font>

374
00:13:51,740 --> 00:13:55,160
there

375
00:13:52,450 --> 00:13:57,680
the second component<font color="#CCCCCC"> in the architecture</font>

376
00:13:55,160 --> 00:14:01,250
is what we call a<font color="#E5E5E5"> device trust and</font>

377
00:13:57,680 --> 00:14:03,620
inventory<font color="#E5E5E5"> in the stuff that I reviewed</font>

378
00:14:01,250 --> 00:14:05,240
mostly that looks like an MDM<font color="#E5E5E5"> which is I</font>

379
00:14:03,620 --> 00:14:07,580
know what devices are out there I know

380
00:14:05,240 --> 00:14:09,529
what operating<font color="#E5E5E5"> systems I ran and I put</font>

381
00:14:07,580 --> 00:14:11,779
some<font color="#CCCCCC"> kind of certificate</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the devices</font>

382
00:14:09,529 --> 00:14:15,230
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are associated</font><font color="#E5E5E5"> with my enterprise</font>

383
00:14:11,779 --> 00:14:17,480
that's ultimately well it looks like the

384
00:14:15,230 --> 00:14:21,050
third piece<font color="#CCCCCC"> which is the</font><font color="#E5E5E5"> arguably the</font>

385
00:14:17,480 --> 00:14:24,290
<font color="#CCCCCC">most important is a combination of the</font>

386
00:14:21,050 --> 00:14:26,990
signals<font color="#E5E5E5"> having policy applied to them so</font>

387
00:14:24,290 --> 00:14:28,550
<font color="#E5E5E5">an access control engine is essentially</font>

388
00:14:26,990 --> 00:14:30,410
a set<font color="#CCCCCC"> of rules or heuristics that you</font>

389
00:14:28,550 --> 00:14:32,719
have for<font color="#CCCCCC"> your network</font><font color="#E5E5E5"> so a very simple</font>

390
00:14:30,410 --> 00:14:34,250
one could be for you to log<font color="#CCCCCC"> into</font><font color="#E5E5E5"> this</font>

391
00:14:32,720 --> 00:14:36,920
critical mission critical<font color="#CCCCCC"> business</font>

392
00:14:34,250 --> 00:14:38,600
system I need you to have macros turned

393
00:14:36,920 --> 00:14:40,490
off on your device<font color="#E5E5E5"> I need you to be</font>

394
00:14:38,600 --> 00:14:42,950
fully patched<font color="#E5E5E5"> and I need you to have</font>

395
00:14:40,490 --> 00:14:45,080
authenticated<font color="#CCCCCC"> with MFA in the last 24</font>

396
00:14:42,950 --> 00:14:47,589
hours<font color="#CCCCCC"> and I need you to have you know a</font>

397
00:14:45,080 --> 00:14:50,450
TPM where I can store<font color="#E5E5E5"> the device</font>

398
00:14:47,589 --> 00:14:52,940
identity key<font color="#E5E5E5"> maybe those</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> rules</font>

399
00:14:50,450 --> 00:14:56,420
are that<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> and then the third piece</font>

400
00:14:52,940 --> 00:14:59,060
is<font color="#E5E5E5"> the access proxy that is the central</font>

401
00:14:56,420 --> 00:15:01,189
nervous<font color="#CCCCCC"> system where all traffic flows</font>

402
00:14:59,060 --> 00:15:03,109
through and it talks directly to<font color="#E5E5E5"> the</font>

403
00:15:01,190 --> 00:15:04,790
access control engine for every<font color="#CCCCCC"> network</font>

404
00:15:03,110 --> 00:15:07,730
flow which ultimately<font color="#E5E5E5"> looks most like</font>

405
00:15:04,790 --> 00:15:11,089
HTTP at this point in time and<font color="#E5E5E5"> it's</font>

406
00:15:07,730 --> 00:15:12,890
consulting this database<font color="#E5E5E5"> and rule set to</font>

407
00:15:11,089 --> 00:15:15,170
determine<font color="#E5E5E5"> whether the traffic</font><font color="#CCCCCC"> should be</font>

408
00:15:12,890 --> 00:15:16,880
allowed it's actually<font color="#E5E5E5"> pretty simple this</font>

409
00:15:15,170 --> 00:15:18,979
<font color="#E5E5E5">is the canonical picture you'll</font><font color="#CCCCCC"> see in</font>

410
00:15:16,880 --> 00:15:20,660
just<font color="#E5E5E5"> about any document but it's</font>

411
00:15:18,980 --> 00:15:22,160
relatively straightforward<font color="#CCCCCC"> you put</font>

412
00:15:20,660 --> 00:15:24,949
everything<font color="#E5E5E5"> you care about behind the</font>

413
00:15:22,160 --> 00:15:27,260
access proxy<font color="#E5E5E5"> and anybody trying to touch</font>

414
00:15:24,950 --> 00:15:29,480
those resources<font color="#E5E5E5"> it's going to have to</font>

415
00:15:27,260 --> 00:15:31,160
show their identity and some<font color="#CCCCCC"> information</font>

416
00:15:29,480 --> 00:15:33,440
about the device they're coming from and

417
00:15:31,160 --> 00:15:34,910
it has to pass<font color="#E5E5E5"> policy for that access to</font>

418
00:15:33,440 --> 00:15:39,050
happen

419
00:15:34,910 --> 00:15:40,640
so how do we evaluate<font color="#E5E5E5"> this and I can</font>

420
00:15:39,050 --> 00:15:42,859
tell you as<font color="#CCCCCC"> much</font><font color="#E5E5E5"> information as you</font><font color="#CCCCCC"> can</font>

421
00:15:40,640 --> 00:15:44,660
<font color="#E5E5E5">find about ztn please come up to me</font>

422
00:15:42,860 --> 00:15:46,910
<font color="#E5E5E5">afterwards and show me if anybody</font><font color="#CCCCCC"> has</font>

423
00:15:44,660 --> 00:15:48,770
actually applied a threat model<font color="#E5E5E5"> to see</font>

424
00:15:46,910 --> 00:15:50,480
if it's worth<font color="#E5E5E5"> I couldn't find that</font>

425
00:15:48,770 --> 00:15:52,579
there's lots of ways I could<font color="#E5E5E5"> think about</font>

426
00:15:50,480 --> 00:15:54,620
<font color="#E5E5E5">this being valuable but there didn't</font>

427
00:15:52,580 --> 00:15:56,540
<font color="#E5E5E5">even seem to be a basic analysis about</font>

428
00:15:54,620 --> 00:15:57,980
<font color="#E5E5E5">what is the security value of the system</font>

429
00:15:56,540 --> 00:15:59,540
<font color="#E5E5E5">and it</font><font color="#CCCCCC"> wouldn't work well and that's</font>

430
00:15:57,980 --> 00:16:01,100
<font color="#E5E5E5">never a good</font><font color="#CCCCCC"> thing to have a bunch</font><font color="#E5E5E5"> of</font>

431
00:15:59,540 --> 00:16:02,480
people<font color="#E5E5E5"> ready to spend money when we</font>

432
00:16:01,100 --> 00:16:03,890
<font color="#E5E5E5">haven't actually looked to see</font><font color="#CCCCCC"> if the</font>

433
00:16:02,480 --> 00:16:07,220
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> works at least in a</font><font color="#CCCCCC"> way that could</font>

434
00:16:03,890 --> 00:16:08,689
<font color="#CCCCCC">be independently reviewed so it turns</font>

435
00:16:07,220 --> 00:16:10,280
out<font color="#CCCCCC"> that mitre</font><font color="#E5E5E5"> is done a pretty good</font>

436
00:16:08,690 --> 00:16:11,420
thing and<font color="#E5E5E5"> I know there's lots of chat</font>

437
00:16:10,280 --> 00:16:13,730
about<font color="#E5E5E5"> this we have something similar</font>

438
00:16:11,420 --> 00:16:16,069
internally which is they've<font color="#CCCCCC"> published</font>

439
00:16:13,730 --> 00:16:17,870
<font color="#E5E5E5">very similar to what I</font><font color="#CCCCCC"> showed there</font>

440
00:16:16,070 --> 00:16:20,000
<font color="#CCCCCC">previously with the Grizzly</font><font color="#E5E5E5"> SEP incident</font>

441
00:16:17,870 --> 00:16:22,640
but they've published<font color="#E5E5E5"> a manual on how to</font>

442
00:16:20,000 --> 00:16:26,750
emulate<font color="#E5E5E5"> a common adversary in this case</font>

443
00:16:22,640 --> 00:16:28,880
you know adversary soup<font color="#CCCCCC"> apt three so</font>

444
00:16:26,750 --> 00:16:31,160
what I<font color="#E5E5E5"> did for the purposes of the stock</font>

445
00:16:28,880 --> 00:16:34,550
<font color="#CCCCCC">to evaluate security is</font><font color="#E5E5E5"> I took</font><font color="#CCCCCC"> miners</font>

446
00:16:31,160 --> 00:16:36,860
<font color="#E5E5E5">apt three adversary emulation doctrine</font>

447
00:16:34,550 --> 00:16:37,400
and I said how<font color="#CCCCCC"> would this work on a CTN</font>

448
00:16:36,860 --> 00:16:39,440
<font color="#CCCCCC">Network</font>

449
00:16:37,400 --> 00:16:41,360
I wouldn't grabbed as<font color="#E5E5E5"> many solutions</font>

450
00:16:39,440 --> 00:16:43,250
that were publicly<font color="#E5E5E5"> available</font><font color="#CCCCCC"> I'm not</font>

451
00:16:41,360 --> 00:16:45,680
<font color="#E5E5E5">aiming to name</font><font color="#CCCCCC"> names because the idea</font><font color="#E5E5E5"> is</font>

452
00:16:43,250 --> 00:16:47,270
<font color="#CCCCCC">we're looking at how this works as a</font>

453
00:16:45,680 --> 00:16:49,880
philosophy<font color="#CCCCCC"> not as an independent</font>

454
00:16:47,270 --> 00:16:50,870
solution and then the mobile<font color="#E5E5E5"> space which</font>

455
00:16:49,880 --> 00:16:53,630
is critical<font color="#CCCCCC"> here</font>

456
00:16:50,870 --> 00:16:55,430
<font color="#E5E5E5">I looked for inspiration</font><font color="#CCCCCC"> to incidents</font>

457
00:16:53,630 --> 00:16:57,020
like Trident<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> Azura they exploit</font>

458
00:16:55,430 --> 00:16:58,160
one of the only ones we've seen<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

459
00:16:57,020 --> 00:17:00,890
the only one<font color="#E5E5E5"> we've</font><font color="#CCCCCC"> seen in the wild on</font>

460
00:16:58,160 --> 00:17:02,689
iOS<font color="#E5E5E5"> the ex-agent malware on</font><font color="#CCCCCC"> android</font><font color="#E5E5E5"> and</font>

461
00:17:00,890 --> 00:17:07,010
hacking team which was site loaded on

462
00:17:02,690 --> 00:17:08,180
both Android<font color="#CCCCCC"> and iOS</font><font color="#E5E5E5"> and the concept</font>

463
00:17:07,010 --> 00:17:11,599
here<font color="#CCCCCC"> is I'm looking at two properties</font>

464
00:17:08,180 --> 00:17:14,240
<font color="#CCCCCC">one</font><font color="#E5E5E5"> is how well does the ztn approach</font>

465
00:17:11,599 --> 00:17:15,889
work for pre exploitation<font color="#CCCCCC"> that is how</font>

466
00:17:14,240 --> 00:17:17,689
well does it work for stopping anybody

467
00:17:15,890 --> 00:17:19,910
from<font color="#CCCCCC"> getting onto a</font><font color="#E5E5E5"> device or getting</font>

468
00:17:17,689 --> 00:17:21,740
<font color="#E5E5E5">access to an identity that's associated</font>

469
00:17:19,910 --> 00:17:23,689
<font color="#E5E5E5">with a resource I care about so it's</font>

470
00:17:21,740 --> 00:17:25,310
just stopping it to begin<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

471
00:17:23,689 --> 00:17:27,829
second<font color="#E5E5E5"> component I looked at</font><font color="#CCCCCC"> it's post</font>

472
00:17:25,310 --> 00:17:30,919
exploitation which is assuming a device

473
00:17:27,829 --> 00:17:33,470
or an<font color="#E5E5E5"> identity gets compromised</font><font color="#CCCCCC"> how well</font>

474
00:17:30,920 --> 00:17:36,290
does a<font color="#CCCCCC"> particular architecture solution</font>

475
00:17:33,470 --> 00:17:37,970
do<font color="#CCCCCC"> it</font><font color="#E5E5E5"> isolating that to kind of the</font>

476
00:17:36,290 --> 00:17:40,040
minimal impact right so if one machine

477
00:17:37,970 --> 00:17:42,140
<font color="#E5E5E5">gets compromised ideally it would</font>

478
00:17:40,040 --> 00:17:45,740
immediately<font color="#E5E5E5"> lose access and it would</font>

479
00:17:42,140 --> 00:17:47,750
stop any potential lateral movement so

480
00:17:45,740 --> 00:17:48,810
if we look then about essentially how

481
00:17:47,750 --> 00:17:50,670
this would<font color="#E5E5E5"> be applied</font>

482
00:17:48,810 --> 00:17:52,679
in a zero trust world here's what it

483
00:17:50,670 --> 00:17:55,650
looks like<font color="#E5E5E5"> again</font><font color="#CCCCCC"> high level</font><font color="#E5E5E5"> conceptually</font>

484
00:17:52,680 --> 00:17:57,180
and<font color="#CCCCCC"> will dive down so it will take</font>

485
00:17:55,650 --> 00:17:58,620
grizzly step and<font color="#E5E5E5"> will remove everything</font>

486
00:17:57,180 --> 00:18:01,890
right we're going zero trust cloud

487
00:17:58,620 --> 00:18:04,409
directly<font color="#E5E5E5"> we put the access control</font>

488
00:18:01,890 --> 00:18:07,260
engine in front<font color="#CCCCCC"> of the cloud or maybe</font>

489
00:18:04,410 --> 00:18:09,270
even<font color="#CCCCCC"> Web Services we own that</font><font color="#E5E5E5"> we care</font>

490
00:18:07,260 --> 00:18:11,700
<font color="#CCCCCC">about</font><font color="#E5E5E5"> we have the access control engine</font>

491
00:18:09,270 --> 00:18:15,300
we<font color="#CCCCCC"> have our device inventory</font><font color="#E5E5E5"> and an SSO</font>

492
00:18:11,700 --> 00:18:17,130
<font color="#CCCCCC">/ user directory</font><font color="#E5E5E5"> conceptually any access</font>

493
00:18:15,300 --> 00:18:18,389
<font color="#CCCCCC">to that now is considered</font><font color="#E5E5E5"> untrusted</font>

494
00:18:17,130 --> 00:18:21,120
remember we have mandatory<font color="#E5E5E5"> access</font>

495
00:18:18,390 --> 00:18:23,910
control the access control engine and

496
00:18:21,120 --> 00:18:27,149
proxy will force the device and the user

497
00:18:23,910 --> 00:18:29,280
to prove<font color="#E5E5E5"> trust for any potential access</font>

498
00:18:27,150 --> 00:18:31,610
<font color="#CCCCCC">requests</font><font color="#E5E5E5"> and if the access is granted</font>

499
00:18:29,280 --> 00:18:34,139
and you<font color="#CCCCCC"> pass policy everything is</font><font color="#E5E5E5"> cool</font>

500
00:18:31,610 --> 00:18:37,020
now if we take the exact same<font color="#CCCCCC"> grizzly</font>

501
00:18:34,140 --> 00:18:38,610
step attack<font color="#E5E5E5"> conceptually zero trust</font>

502
00:18:37,020 --> 00:18:41,010
would help in a couple ways first is

503
00:18:38,610 --> 00:18:44,399
<font color="#E5E5E5">whatever the initial attack surface was</font>

504
00:18:41,010 --> 00:18:47,550
in<font color="#E5E5E5"> this case a untrusted</font><font color="#CCCCCC"> XE being</font><font color="#E5E5E5"> set by</font>

505
00:18:44,400 --> 00:18:49,770
<font color="#E5E5E5">email the device properties here should</font>

506
00:18:47,550 --> 00:18:51,120
tell me<font color="#E5E5E5"> that this device if it would</font>

507
00:18:49,770 --> 00:18:52,830
enable that attack let's say it doesn't

508
00:18:51,120 --> 00:18:54,659
<font color="#E5E5E5">have application control or code signing</font>

509
00:18:52,830 --> 00:18:58,889
enabled shouldn't have access<font color="#CCCCCC"> to</font>

510
00:18:54,660 --> 00:19:01,200
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> too sensitive secondarily if</font>

511
00:18:58,890 --> 00:19:03,210
they were to eventually get<font color="#E5E5E5"> access to</font>

512
00:19:01,200 --> 00:19:05,010
<font color="#E5E5E5">this device</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> shouldn't be able to</font>

513
00:19:03,210 --> 00:19:06,840
dump credentials<font color="#E5E5E5"> and laterally move one</font>

514
00:19:05,010 --> 00:19:09,330
because I've removed all transitive

515
00:19:06,840 --> 00:19:11,310
trusts in my network<font color="#E5E5E5"> I'm now going</font>

516
00:19:09,330 --> 00:19:13,139
through<font color="#E5E5E5"> the access proxy and to the</font>

517
00:19:11,310 --> 00:19:15,030
credentials themselves would hopefully

518
00:19:13,140 --> 00:19:17,130
<font color="#E5E5E5">be subject hopefully be subject to a</font>

519
00:19:15,030 --> 00:19:20,430
policy<font color="#E5E5E5"> that would make credential theft</font>

520
00:19:17,130 --> 00:19:21,570
<font color="#CCCCCC">hard so maybe</font><font color="#E5E5E5"> you're ready credential</font>

521
00:19:20,430 --> 00:19:24,630
guard from Microsoft

522
00:19:21,570 --> 00:19:25,800
maybe you're mandating the<font color="#CCCCCC"> use</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> u2f</font>

523
00:19:24,630 --> 00:19:28,170
<font color="#E5E5E5">keys which is always</font><font color="#CCCCCC"> a good idea</font>

524
00:19:25,800 --> 00:19:31,020
whatever<font color="#E5E5E5"> your identity protection scheme</font>

525
00:19:28,170 --> 00:19:33,660
is should make lateral movement hard so

526
00:19:31,020 --> 00:19:35,010
we we end that<font color="#E5E5E5"> and now that the device</font>

527
00:19:33,660 --> 00:19:37,590
has been<font color="#E5E5E5"> infected in one way or another</font>

528
00:19:35,010 --> 00:19:39,720
<font color="#E5E5E5">it should actually</font><font color="#CCCCCC"> be put</font><font color="#E5E5E5"> onto an</font><font color="#CCCCCC"> island</font>

529
00:19:37,590 --> 00:19:43,290
<font color="#E5E5E5">and there should be no more resources</font><font color="#CCCCCC"> so</font>

530
00:19:39,720 --> 00:19:45,480
<font color="#CCCCCC">this is the conceptual model</font><font color="#E5E5E5"> the reality</font>

531
00:19:43,290 --> 00:19:47,580
<font color="#E5E5E5">is this kind of a cool</font><font color="#CCCCCC"> story</font><font color="#E5E5E5"> cool story</font>

532
00:19:45,480 --> 00:19:50,160
<font color="#E5E5E5">but does this actually work that's</font>

533
00:19:47,580 --> 00:19:52,590
that's<font color="#E5E5E5"> the real question so let's look</font>

534
00:19:50,160 --> 00:19:54,810
at this<font color="#E5E5E5"> a little bit so the first and I</font>

535
00:19:52,590 --> 00:19:56,490
would argue<font color="#E5E5E5"> the most critical in my</font>

536
00:19:54,810 --> 00:19:58,770
opinion at least critical and I<font color="#CCCCCC"> don't</font>

537
00:19:56,490 --> 00:20:00,810
<font color="#E5E5E5">think we've gone very far here is how do</font>

538
00:19:58,770 --> 00:20:02,760
we establish device trust in a way that

539
00:20:00,810 --> 00:20:04,770
would be<font color="#E5E5E5"> meaningful for this attack</font>

540
00:20:02,760 --> 00:20:06,660
so let's talk<font color="#CCCCCC"> about what we're</font><font color="#E5E5E5"> trying to</font>

541
00:20:04,770 --> 00:20:08,639
<font color="#E5E5E5">achieve there so there are a couple</font>

542
00:20:06,660 --> 00:20:10,740
<font color="#CCCCCC">properties for device Trust's that we</font>

543
00:20:08,640 --> 00:20:13,590
want<font color="#E5E5E5"> the first is properties that would</font>

544
00:20:10,740 --> 00:20:14,940
help<font color="#E5E5E5"> us in the pre reach situation the</font>

545
00:20:13,590 --> 00:20:18,120
first<font color="#E5E5E5"> thing that's arguably the most</font>

546
00:20:14,940 --> 00:20:20,460
simple is we want to<font color="#CCCCCC"> identify</font><font color="#E5E5E5"> devices</font>

547
00:20:18,120 --> 00:20:23,010
that are associated<font color="#E5E5E5"> with our enterprise</font>

548
00:20:20,460 --> 00:20:24,270
<font color="#CCCCCC">group home network whatever</font><font color="#E5E5E5"> that is</font>

549
00:20:23,010 --> 00:20:27,240
so we're going to<font color="#CCCCCC"> strongly identify</font>

550
00:20:24,270 --> 00:20:28,950
those devices<font color="#E5E5E5"> that mitigates the threat</font>

551
00:20:27,240 --> 00:20:30,270
or it mitigates the control we're giving

552
00:20:28,950 --> 00:20:32,640
<font color="#E5E5E5">up because we're now essentially saying</font>

553
00:20:30,270 --> 00:20:35,309
yeah anybody<font color="#E5E5E5"> come talk to</font><font color="#CCCCCC"> my open web</font>

554
00:20:32,640 --> 00:20:37,410
service<font color="#E5E5E5"> but one</font><font color="#CCCCCC"> of the things you you</font>

555
00:20:35,309 --> 00:20:39,360
would do to establish<font color="#E5E5E5"> trust is is this a</font>

556
00:20:37,410 --> 00:20:41,130
device<font color="#E5E5E5"> I know about</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the first</font>

557
00:20:39,360 --> 00:20:43,409
layer of<font color="#CCCCCC"> defense not just anybody can</font>

558
00:20:41,130 --> 00:20:45,120
<font color="#E5E5E5">come onto</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> make a request</font><font color="#CCCCCC"> to my</font>

559
00:20:43,410 --> 00:20:48,090
network<font color="#CCCCCC"> if they haven't got a device</font>

560
00:20:45,120 --> 00:20:50,100
<font color="#E5E5E5">that I know about the second component</font>

561
00:20:48,090 --> 00:20:53,668
<font color="#E5E5E5">and this is kind of interesting from our</font>

562
00:20:50,100 --> 00:20:56,399
perspective is patch<font color="#E5E5E5"> state so ideally a</font>

563
00:20:53,669 --> 00:20:58,950
part of device trust<font color="#E5E5E5"> would say you</font><font color="#CCCCCC"> or</font>

564
00:20:56,400 --> 00:21:00,890
your device is patched<font color="#E5E5E5"> right mitigating</font>

565
00:20:58,950 --> 00:21:03,390
hopefully exploitation and other threats

566
00:21:00,890 --> 00:21:07,049
<font color="#CCCCCC">before it gets access</font><font color="#E5E5E5"> to any critical</font>

567
00:21:03,390 --> 00:21:08,640
resources<font color="#E5E5E5"> the third pre breach help is</font>

568
00:21:07,049 --> 00:21:10,650
<font color="#E5E5E5">something was called like the security</font>

569
00:21:08,640 --> 00:21:13,410
profile of the device so<font color="#CCCCCC"> you might be</font>

570
00:21:10,650 --> 00:21:16,890
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> mitigate say data loss attacks</font>

571
00:21:13,410 --> 00:21:18,900
by mandating<font color="#CCCCCC"> at rest encryption</font><font color="#E5E5E5"> you</font>

572
00:21:16,890 --> 00:21:20,820
might be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> mitigate macro attacks</font>

573
00:21:18,900 --> 00:21:23,250
by saying you have<font color="#CCCCCC"> to use exploit art or</font>

574
00:21:20,820 --> 00:21:25,049
some other GP policy to disable macros

575
00:21:23,250 --> 00:21:26,880
on this<font color="#E5E5E5"> machine before it talks to my</font>

576
00:21:25,049 --> 00:21:28,980
network<font color="#CCCCCC"> the list can go on</font><font color="#E5E5E5"> you could</font>

577
00:21:26,880 --> 00:21:30,540
require you know<font color="#E5E5E5"> virtualization based</font>

578
00:21:28,980 --> 00:21:35,130
security<font color="#CCCCCC"> if you're</font><font color="#E5E5E5"> running a Windows</font>

579
00:21:30,540 --> 00:21:36,780
<font color="#CCCCCC">device and so all of that prevents the</font>

580
00:21:35,130 --> 00:21:39,419
attack from happening<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's the</font>

581
00:21:36,780 --> 00:21:41,970
<font color="#CCCCCC">primary security value and I trust this</font>

582
00:21:39,419 --> 00:21:44,160
device that's a concept<font color="#CCCCCC"> I trust this</font>

583
00:21:41,970 --> 00:21:46,290
device because<font color="#E5E5E5"> the the risk that it's</font>

584
00:21:44,160 --> 00:21:48,380
<font color="#E5E5E5">going to get actually pwned</font><font color="#CCCCCC"> is somehow</font>

585
00:21:46,290 --> 00:21:50,549
lower because of<font color="#E5E5E5"> these three properties</font>

586
00:21:48,380 --> 00:21:53,179
<font color="#E5E5E5">the first thing is what we'll</font><font color="#CCCCCC"> call</font>

587
00:21:50,549 --> 00:21:55,590
runtime integrity which is post breach

588
00:21:53,179 --> 00:21:57,360
<font color="#CCCCCC">this is actually sorely lacking and I'll</font>

589
00:21:55,590 --> 00:21:59,699
talk<font color="#CCCCCC"> about this but</font><font color="#E5E5E5"> all of these three</font>

590
00:21:57,360 --> 00:22:02,520
<font color="#E5E5E5">things are facts I know our properties</font>

591
00:21:59,700 --> 00:22:04,799
about the<font color="#E5E5E5"> device but I can just easily</font>

592
00:22:02,520 --> 00:22:07,379
boot up a machine<font color="#E5E5E5"> pass all of these</font>

593
00:22:04,799 --> 00:22:09,780
device priorities our device properties

594
00:22:07,380 --> 00:22:11,790
<font color="#E5E5E5">and someone can</font><font color="#CCCCCC"> pone</font><font color="#E5E5E5"> me right they can</font>

595
00:22:09,780 --> 00:22:14,399
send me<font color="#CCCCCC"> code it could be a zero-day</font>

596
00:22:11,790 --> 00:22:15,139
exploit and the device is hosed so we

597
00:22:14,400 --> 00:22:16,850
want to have

598
00:22:15,140 --> 00:22:18,620
some affordance for that by<font color="#E5E5E5"> also</font><font color="#CCCCCC"> having</font>

599
00:22:16,850 --> 00:22:20,240
<font color="#E5E5E5">runtime integrity</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> so just</font>

600
00:22:18,620 --> 00:22:21,919
<font color="#CCCCCC">because the device booted up trusted</font>

601
00:22:20,240 --> 00:22:23,960
<font color="#E5E5E5">doesn't mean it should be trusted</font>

602
00:22:21,920 --> 00:22:26,720
forever or even<font color="#CCCCCC"> for a very long</font><font color="#E5E5E5"> time</font>

603
00:22:23,960 --> 00:22:28,880
without runtime verification so the goal

604
00:22:26,720 --> 00:22:31,850
with runtime verification is remove

605
00:22:28,880 --> 00:22:35,420
access<font color="#E5E5E5"> or reduced a trust level if the</font>

606
00:22:31,850 --> 00:22:38,600
device has<font color="#CCCCCC"> been popped so how do people</font>

607
00:22:35,420 --> 00:22:41,360
do device<font color="#E5E5E5"> authentication in practice in</font>

608
00:22:38,600 --> 00:22:43,250
<font color="#E5E5E5">Xero</font><font color="#CCCCCC"> trusts implementations again</font><font color="#E5E5E5"> my</font>

609
00:22:41,360 --> 00:22:44,959
taxonomy here was to cruise around the

610
00:22:43,250 --> 00:22:46,550
web<font color="#E5E5E5"> and grab every solution I could</font><font color="#CCCCCC"> get</font>

611
00:22:44,960 --> 00:22:50,510
my hands on across a bunch<font color="#E5E5E5"> of platforms</font>

612
00:22:46,550 --> 00:22:53,690
<font color="#CCCCCC">and test them out</font><font color="#E5E5E5"> and so what</font><font color="#CCCCCC"> I actually</font>

613
00:22:50,510 --> 00:22:57,140
<font color="#CCCCCC">found is for most devices</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> are</font>

614
00:22:53,690 --> 00:22:59,690
<font color="#CCCCCC">using simple x.509 authentication</font>

615
00:22:57,140 --> 00:23:01,880
<font color="#E5E5E5">mechanisms so this looks something like</font>

616
00:22:59,690 --> 00:23:03,950
this is<font color="#E5E5E5"> they're getting an</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> phone if I</font>

617
00:23:01,880 --> 00:23:05,420
have<font color="#E5E5E5"> a nice a CA certificate sometimes</font>

618
00:23:03,950 --> 00:23:07,550
it's self signed sometimes they're

619
00:23:05,420 --> 00:23:09,500
getting it from<font color="#CCCCCC"> an actual</font><font color="#E5E5E5"> CA they're</font>

620
00:23:07,550 --> 00:23:12,080
setting up their<font color="#CCCCCC"> PKA</font><font color="#E5E5E5"> from infrastructure</font>

621
00:23:09,500 --> 00:23:14,660
<font color="#E5E5E5">with intermediate</font><font color="#CCCCCC"> CAS and then they're</font>

622
00:23:12,080 --> 00:23:17,210
generally using an MDM or in some cases

623
00:23:14,660 --> 00:23:20,900
their own software<font color="#E5E5E5"> agent to plop that</font>

624
00:23:17,210 --> 00:23:22,610
<font color="#CCCCCC">x.509 certain software on the device</font>

625
00:23:20,900 --> 00:23:24,590
I remember this includes a<font color="#E5E5E5"> private key</font>

626
00:23:22,610 --> 00:23:26,719
sometimes this password<font color="#E5E5E5"> protected and</font>

627
00:23:24,590 --> 00:23:28,730
<font color="#E5E5E5">sometimes it's</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> and that is how they</font>

628
00:23:26,720 --> 00:23:31,040
are<font color="#E5E5E5"> establishing</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> property</font>

629
00:23:28,730 --> 00:23:34,490
which is is this my corporate or

630
00:23:31,040 --> 00:23:36,379
enterprise device or<font color="#E5E5E5"> not so you have the</font>

631
00:23:34,490 --> 00:23:39,710
software<font color="#CCCCCC"> x.509</font><font color="#E5E5E5"> and in the best case</font>

632
00:23:36,380 --> 00:23:41,210
<font color="#E5E5E5">scenarios there are people using TPM and</font>

633
00:23:39,710 --> 00:23:44,000
the<font color="#CCCCCC"> aik</font>

634
00:23:41,210 --> 00:23:46,190
or the endorsement key in the TPM as a

635
00:23:44,000 --> 00:23:48,380
<font color="#E5E5E5">harbor</font><font color="#CCCCCC"> rooted</font><font color="#E5E5E5"> anchor for device</font>

636
00:23:46,190 --> 00:23:51,440
authentication<font color="#E5E5E5"> that's a much better</font>

637
00:23:48,380 --> 00:23:53,240
situation<font color="#E5E5E5"> so the question is is assuming</font>

638
00:23:51,440 --> 00:23:55,670
again<font color="#E5E5E5"> back to the</font><font color="#CCCCCC"> grisly step or</font>

639
00:23:53,240 --> 00:23:57,520
whatever the apt<font color="#CCCCCC"> three scenario how</font>

640
00:23:55,670 --> 00:24:01,250
<font color="#E5E5E5">would that help us in practice</font><font color="#CCCCCC"> in</font>

641
00:23:57,520 --> 00:24:03,350
<font color="#E5E5E5">practice it's incredibly trivial to take</font>

642
00:24:01,250 --> 00:24:06,410
most<font color="#E5E5E5"> of these authentication mechanisms</font>

643
00:24:03,350 --> 00:24:09,560
and export the device identity<font color="#E5E5E5"> move it</font>

644
00:24:06,410 --> 00:24:12,140
on to an attackers device etc<font color="#E5E5E5"> and kind</font>

645
00:24:09,560 --> 00:24:14,210
of<font color="#E5E5E5"> do your thing and</font><font color="#CCCCCC"> the reason for that</font>

646
00:24:12,140 --> 00:24:15,740
is in a lot of<font color="#E5E5E5"> cases I think</font><font color="#CCCCCC"> for</font>

647
00:24:14,210 --> 00:24:17,780
convenience people doing things<font color="#CCCCCC"> like</font>

648
00:24:15,740 --> 00:24:19,130
provisioning through their mDM's<font color="#E5E5E5"> are</font>

649
00:24:17,780 --> 00:24:22,330
just kind of pushing these certs<font color="#CCCCCC"> out</font>

650
00:24:19,130 --> 00:24:25,400
<font color="#E5E5E5">they don't necessarily have a</font>

651
00:24:22,330 --> 00:24:26,810
heterogeneous kind of hardware

652
00:24:25,400 --> 00:24:28,980
environment<font color="#CCCCCC"> we're thinking</font><font color="#E5E5E5"> guarantee</font>

653
00:24:26,810 --> 00:24:31,190
<font color="#E5E5E5">TPMS are going to be in place</font>

654
00:24:28,980 --> 00:24:34,500
they support<font color="#CCCCCC"> TPMS but they don't support</font>

655
00:24:31,190 --> 00:24:36,690
<font color="#CCCCCC">key</font><font color="#E5E5E5"> storage on Android it's very hard in</font>

656
00:24:34,500 --> 00:24:38,520
practice<font color="#E5E5E5"> to actually do this to get the</font>

657
00:24:36,690 --> 00:24:40,980
keys out so<font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> cases we have a</font>

658
00:24:38,520 --> 00:24:45,059
software<font color="#CCCCCC"> fall back now if you're storing</font>

659
00:24:40,980 --> 00:24:46,950
this key<font color="#E5E5E5"> using say</font><font color="#CCCCCC"> Windows API</font>

660
00:24:45,059 --> 00:24:48,660
mechanisms the best you can do in

661
00:24:46,950 --> 00:24:52,919
software<font color="#CCCCCC"> I say please</font><font color="#E5E5E5"> don't export this</font>

662
00:24:48,660 --> 00:24:54,750
window<font color="#E5E5E5"> but of course</font><font color="#CCCCCC"> Benjamin and other</font>

663
00:24:52,919 --> 00:24:56,790
people have proven that<font color="#E5E5E5"> that's probably</font>

664
00:24:54,750 --> 00:25:00,179
<font color="#E5E5E5">you know not that hard</font><font color="#CCCCCC"> to inject code</font>

665
00:24:56,790 --> 00:25:02,850
into CNG<font color="#CCCCCC"> or others to patch things out</font>

666
00:25:00,179 --> 00:25:05,220
and while I you can export certificates

667
00:25:02,850 --> 00:25:07,889
it's a similar situation on Android

668
00:25:05,220 --> 00:25:11,010
which is<font color="#E5E5E5"> Android actually has some</font>

669
00:25:07,890 --> 00:25:13,410
<font color="#E5E5E5">really excellent mechanisms for storing</font>

670
00:25:11,010 --> 00:25:15,030
keys and<font color="#E5E5E5"> other things and I actually</font>

671
00:25:13,410 --> 00:25:17,040
<font color="#E5E5E5">reference a paper here with someone did</font>

672
00:25:15,030 --> 00:25:18,899
an analysis<font color="#E5E5E5"> of you know what is the</font>

673
00:25:17,040 --> 00:25:20,610
threat model<font color="#E5E5E5"> that's resistant if you</font>

674
00:25:18,900 --> 00:25:22,380
store keys<font color="#CCCCCC"> and software</font><font color="#E5E5E5"> on Android or</font>

675
00:25:20,610 --> 00:25:24,299
<font color="#E5E5E5">the various mechanisms and we can</font>

676
00:25:22,380 --> 00:25:26,730
actually see storing say in the key

677
00:25:24,299 --> 00:25:30,090
store using a Qualcomm<font color="#E5E5E5"> T is actually</font>

678
00:25:26,730 --> 00:25:32,309
fairly resilient<font color="#E5E5E5"> to export and access</font>

679
00:25:30,090 --> 00:25:34,409
the keys<font color="#E5E5E5"> but we don't see that in</font>

680
00:25:32,309 --> 00:25:36,990
practice in my experience looking at

681
00:25:34,410 --> 00:25:38,250
some<font color="#CCCCCC"> of these vendors</font><font color="#E5E5E5"> so again that</font>

682
00:25:36,990 --> 00:25:39,660
doesn't<font color="#CCCCCC"> mean this is a blanket</font><font color="#E5E5E5"> statement</font>

683
00:25:38,250 --> 00:25:42,360
across the board some people were

684
00:25:39,660 --> 00:25:43,830
storing<font color="#E5E5E5"> in</font><font color="#CCCCCC"> TPMS</font><font color="#E5E5E5"> but even in the cases</font>

685
00:25:42,360 --> 00:25:46,740
where<font color="#E5E5E5"> they were storing the device</font>

686
00:25:43,830 --> 00:25:48,570
identification<font color="#E5E5E5"> key in the TPM in most</font>

687
00:25:46,740 --> 00:25:51,390
cases there<font color="#E5E5E5"> was no way to attest to it</font>

688
00:25:48,570 --> 00:25:53,760
so it was<font color="#E5E5E5"> like I'll try</font><font color="#CCCCCC"> the TPM but if</font>

689
00:25:51,390 --> 00:25:56,400
it<font color="#E5E5E5"> doesn't happen you'll never know</font><font color="#CCCCCC"> that</font>

690
00:25:53,760 --> 00:25:58,410
<font color="#CCCCCC">is not ideal and this is a general</font>

691
00:25:56,400 --> 00:26:00,030
blanket statement which is<font color="#CCCCCC"> device I</font>

692
00:25:58,410 --> 00:26:02,610
thought on occasion I think is a<font color="#E5E5E5"> very</font>

693
00:26:00,030 --> 00:26:05,668
<font color="#E5E5E5">good security property but in practice</font>

694
00:26:02,610 --> 00:26:10,530
it's actually hard<font color="#E5E5E5"> to do in a way that's</font>

695
00:26:05,669 --> 00:26:12,390
meaningful<font color="#E5E5E5"> so it turns out that</font><font color="#CCCCCC"> Windows</font>

696
00:26:10,530 --> 00:26:14,129
had a slightly<font color="#CCCCCC"> bec better mechanism for</font>

697
00:26:12,390 --> 00:26:15,900
<font color="#E5E5E5">doing this that almost anybody</font><font color="#CCCCCC"> can</font>

698
00:26:14,130 --> 00:26:19,440
extend<font color="#E5E5E5"> and so I did want to talk</font><font color="#CCCCCC"> about</font>

699
00:26:15,900 --> 00:26:22,260
<font color="#E5E5E5">that for a second the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> is we</font><font color="#CCCCCC"> have a</font>

700
00:26:19,440 --> 00:26:24,120
device<font color="#E5E5E5"> attestation service called the</font>

701
00:26:22,260 --> 00:26:27,210
device health<font color="#CCCCCC"> add test station that is</font>

702
00:26:24,120 --> 00:26:28,799
extensible<font color="#E5E5E5"> by most</font><font color="#CCCCCC"> end EMS</font><font color="#E5E5E5"> and actually</font>

703
00:26:27,210 --> 00:26:31,020
has some API and some extensibility

704
00:26:28,799 --> 00:26:33,629
constructs<font color="#E5E5E5"> that people can use</font><font color="#CCCCCC"> and the</font>

705
00:26:31,020 --> 00:26:35,910
way that that works is we start<font color="#E5E5E5"> with a</font>

706
00:26:33,630 --> 00:26:38,010
TPM<font color="#E5E5E5"> where the endorsement key that</font>

707
00:26:35,910 --> 00:26:40,590
uniquely<font color="#E5E5E5"> identifies</font><font color="#CCCCCC"> the device is</font>

708
00:26:38,010 --> 00:26:42,150
<font color="#E5E5E5">actually stored in the TPM at factory</font>

709
00:26:40,590 --> 00:26:43,949
time

710
00:26:42,150 --> 00:26:45,570
and in the<font color="#CCCCCC"> windows space we actually</font>

711
00:26:43,950 --> 00:26:47,430
<font color="#CCCCCC">have a new program</font><font color="#E5E5E5"> called autopilot</font>

712
00:26:45,570 --> 00:26:49,290
where that device<font color="#E5E5E5"> straight from the</font>

713
00:26:47,430 --> 00:26:51,570
factory<font color="#E5E5E5"> can be shipped to your door and</font>

714
00:26:49,290 --> 00:26:54,990
eventually<font color="#CCCCCC"> you'd actually</font><font color="#E5E5E5"> have the</font>

715
00:26:51,570 --> 00:26:57,629
<font color="#CCCCCC">ability to measure in</font><font color="#E5E5E5"> the factory</font><font color="#CCCCCC"> pcr</font>

716
00:26:54,990 --> 00:26:59,580
<font color="#E5E5E5">the factory firmware into a PCR and</font>

717
00:26:57,630 --> 00:27:02,280
compare it to<font color="#E5E5E5"> what it was on the factory</font>

718
00:26:59,580 --> 00:27:04,500
floor<font color="#E5E5E5"> so if you're a real kind of</font>

719
00:27:02,280 --> 00:27:08,520
<font color="#E5E5E5">tinfoil hat</font><font color="#CCCCCC"> person you could actually</font>

720
00:27:04,500 --> 00:27:10,080
establish<font color="#E5E5E5"> supply chain</font><font color="#CCCCCC"> integrity from</font>

721
00:27:08,520 --> 00:27:12,660
<font color="#CCCCCC">the factory all the way to</font><font color="#E5E5E5"> your door</font>

722
00:27:10,080 --> 00:27:15,899
<font color="#CCCCCC">which means</font><font color="#E5E5E5"> you have some trust in this</font>

723
00:27:12,660 --> 00:27:17,100
device authentication key now it's a

724
00:27:15,900 --> 00:27:19,730
fairly<font color="#E5E5E5"> simple and</font><font color="#CCCCCC"> straightforward</font>

725
00:27:17,100 --> 00:27:22,709
service what the service does is it

726
00:27:19,730 --> 00:27:26,220
forces<font color="#E5E5E5"> a secret that only lives in the</font>

727
00:27:22,710 --> 00:27:29,100
TPM<font color="#E5E5E5"> to be signed using</font><font color="#CCCCCC"> the private key</font>

728
00:27:26,220 --> 00:27:31,290
in the TPM<font color="#E5E5E5"> and proof</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> are able</font>

729
00:27:29,100 --> 00:27:32,699
to<font color="#E5E5E5"> assign</font><font color="#CCCCCC"> that key will allow you to set</font>

730
00:27:31,290 --> 00:27:35,610
<font color="#CCCCCC">the device in a way that we can</font>

731
00:27:32,700 --> 00:27:37,800
guarantee<font color="#E5E5E5"> that the identity AI K key is</font>

732
00:27:35,610 --> 00:27:41,070
not compromised and is<font color="#CCCCCC"> exactly what we</font>

733
00:27:37,800 --> 00:27:43,020
would<font color="#E5E5E5"> expect from the TPM Android has</font>

734
00:27:41,070 --> 00:27:45,659
very similar architecture<font color="#E5E5E5"> with key</font>

735
00:27:43,020 --> 00:27:48,690
<font color="#CCCCCC">master which provides Hardware back at</font>

736
00:27:45,660 --> 00:27:50,430
the<font color="#E5E5E5"> station in a truss own</font><font color="#CCCCCC"> tea</font><font color="#E5E5E5"> and iOS</font>

737
00:27:48,690 --> 00:27:52,110
and<font color="#CCCCCC"> iMac have the ability to do</font>

738
00:27:50,430 --> 00:27:54,150
<font color="#E5E5E5">something very similar</font><font color="#CCCCCC"> in the secure</font>

739
00:27:52,110 --> 00:27:57,479
Enclave<font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are better ways of</font>

740
00:27:54,150 --> 00:27:59,430
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> it this</font><font color="#E5E5E5"> is just one example</font><font color="#CCCCCC"> but in</font>

741
00:27:57,480 --> 00:28:01,890
practice<font color="#E5E5E5"> even though these affordances</font>

742
00:27:59,430 --> 00:28:03,540
<font color="#E5E5E5">are on the</font><font color="#CCCCCC"> platform's</font><font color="#E5E5E5"> at least on the PC</font>

743
00:28:01,890 --> 00:28:05,730
side we're not seeing it done<font color="#E5E5E5"> on the</font>

744
00:28:03,540 --> 00:28:09,060
<font color="#CCCCCC">mobile side from my</font><font color="#E5E5E5"> perspective things</font>

745
00:28:05,730 --> 00:28:11,820
look better<font color="#E5E5E5"> there so the second property</font>

746
00:28:09,060 --> 00:28:14,220
<font color="#E5E5E5">we</font><font color="#CCCCCC"> wanted to look</font><font color="#E5E5E5"> at was assessing patch</font>

747
00:28:11,820 --> 00:28:17,220
<font color="#E5E5E5">State this was actually</font><font color="#CCCCCC"> very interesting</font>

748
00:28:14,220 --> 00:28:19,920
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> most of the patch</font><font color="#CCCCCC"> State</font><font color="#E5E5E5"> I saw</font>

749
00:28:17,220 --> 00:28:22,080
was incredibly rudimentary<font color="#E5E5E5"> so in the</font>

750
00:28:19,920 --> 00:28:24,540
lower right hand corner in<font color="#E5E5E5"> Windows we</font>

751
00:28:22,080 --> 00:28:26,250
have an API<font color="#E5E5E5"> that goes all the way</font><font color="#CCCCCC"> back</font>

752
00:28:24,540 --> 00:28:28,920
to the<font color="#CCCCCC"> network access control days</font>

753
00:28:26,250 --> 00:28:30,330
remember 802<font color="#CCCCCC"> 11 X neck</font><font color="#E5E5E5"> where you could</font>

754
00:28:28,920 --> 00:28:32,280
say things<font color="#CCCCCC"> like if you don't</font><font color="#E5E5E5"> have</font>

755
00:28:30,330 --> 00:28:33,629
antivirus you<font color="#E5E5E5"> can't join the Wi-Fi stuff</font>

756
00:28:32,280 --> 00:28:36,060
like that

757
00:28:33,630 --> 00:28:38,850
I saw vendors basically using this which

758
00:28:36,060 --> 00:28:41,000
at<font color="#CCCCCC"> best it would tell you like</font><font color="#E5E5E5"> Windows</font>

759
00:28:38,850 --> 00:28:43,290
<font color="#E5E5E5">was patched in the last 30 days which</font>

760
00:28:41,000 --> 00:28:45,090
might be<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> but if you've got other</font>

761
00:28:43,290 --> 00:28:46,860
vulnerable apps on the on the system

762
00:28:45,090 --> 00:28:48,179
that's not<font color="#CCCCCC"> going to tell you a ton</font><font color="#E5E5E5"> it'll</font>

763
00:28:46,860 --> 00:28:51,000
tell you things like<font color="#E5E5E5"> if you have UAC</font>

764
00:28:48,180 --> 00:28:52,910
installed<font color="#E5E5E5"> very basic things and a lot of</font>

765
00:28:51,000 --> 00:28:54,660
cases<font color="#CCCCCC"> this was a sole source</font><font color="#E5E5E5"> of</font>

766
00:28:52,910 --> 00:28:56,320
identifying the patch<font color="#E5E5E5"> state of the</font>

767
00:28:54,660 --> 00:28:59,680
<font color="#E5E5E5">device which I think</font>

768
00:28:56,320 --> 00:29:02,320
is is it's not sufficient<font color="#CCCCCC"> in other cases</font>

769
00:28:59,680 --> 00:29:04,390
I saw vendors using javascript<font color="#CCCCCC"> to</font>

770
00:29:02,320 --> 00:29:06,939
<font color="#E5E5E5">establish the trust of a Windows device</font>

771
00:29:04,390 --> 00:29:09,760
so saying things like are you Windows 10

772
00:29:06,940 --> 00:29:12,460
<font color="#CCCCCC">just from the user</font><font color="#E5E5E5"> agent or is your</font><font color="#CCCCCC"> java</font>

773
00:29:09,760 --> 00:29:14,350
<font color="#E5E5E5">today cool like you're</font><font color="#CCCCCC"> patched right and</font>

774
00:29:12,460 --> 00:29:17,500
in reality<font color="#E5E5E5"> when we're</font><font color="#CCCCCC"> talking about</font>

775
00:29:14,350 --> 00:29:19,149
<font color="#E5E5E5">things like macro attacks or if you've</font>

776
00:29:17,500 --> 00:29:21,130
<font color="#CCCCCC">got a</font><font color="#E5E5E5"> third party binary on the device</font>

777
00:29:19,150 --> 00:29:24,730
<font color="#CCCCCC">you're not gonna</font><font color="#E5E5E5"> be able to assess</font><font color="#CCCCCC"> that</font>

778
00:29:21,130 --> 00:29:27,910
<font color="#E5E5E5">simply from from the web and so that</font>

779
00:29:24,730 --> 00:29:29,920
makes things incredibly<font color="#E5E5E5"> difficult when</font>

780
00:29:27,910 --> 00:29:31,990
you're you're saying<font color="#E5E5E5"> I I have trust in</font>

781
00:29:29,920 --> 00:29:36,340
<font color="#E5E5E5">this device if it's that simple to</font>

782
00:29:31,990 --> 00:29:37,900
tamper both duo<font color="#E5E5E5"> and Microsoft and</font>

783
00:29:36,340 --> 00:29:39,429
<font color="#E5E5E5">defender ATP have an interesting</font>

784
00:29:37,900 --> 00:29:41,830
construct which is kind<font color="#E5E5E5"> of scoring the</font>

785
00:29:39,430 --> 00:29:44,170
<font color="#E5E5E5">risk of the device and that's a very</font>

786
00:29:41,830 --> 00:29:46,240
nice aggregate metric because<font color="#E5E5E5"> in reality</font>

787
00:29:44,170 --> 00:29:48,580
<font color="#E5E5E5">I don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> many enterprises are gonna</font>

788
00:29:46,240 --> 00:29:50,170
sit down<font color="#CCCCCC"> and author 65 security</font>

789
00:29:48,580 --> 00:29:52,360
properties that<font color="#E5E5E5"> they want to be true for</font>

790
00:29:50,170 --> 00:29:54,390
you to access the<font color="#E5E5E5"> wiki so</font><font color="#CCCCCC"> this aggregate</font>

791
00:29:52,360 --> 00:29:57,040
score kind of gives you<font color="#CCCCCC"> a way to say</font>

792
00:29:54,390 --> 00:29:59,590
just figure this all out<font color="#E5E5E5"> for</font><font color="#CCCCCC"> me and as</font>

793
00:29:57,040 --> 00:30:02,139
<font color="#CCCCCC">long as</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> device is 85% or better or</font>

794
00:29:59,590 --> 00:30:04,810
whatever<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> allow it</font><font color="#E5E5E5"> to be trusted</font>

795
00:30:02,140 --> 00:30:07,180
<font color="#E5E5E5">but certainly in the patch case we're</font>

796
00:30:04,810 --> 00:30:09,429
seeing a lot to be desired<font color="#CCCCCC"> and even when</font>

797
00:30:07,180 --> 00:30:10,960
you<font color="#E5E5E5"> have maybe a good vulnerability</font>

798
00:30:09,430 --> 00:30:12,580
management<font color="#E5E5E5"> solution or something that</font>

799
00:30:10,960 --> 00:30:15,190
would give you a<font color="#E5E5E5"> data set about the</font>

800
00:30:12,580 --> 00:30:16,419
device in my experience and<font color="#E5E5E5"> again</font><font color="#CCCCCC"> I</font>

801
00:30:15,190 --> 00:30:17,260
didn't<font color="#E5E5E5"> look at everything out there</font>

802
00:30:16,420 --> 00:30:19,930
there was<font color="#CCCCCC"> a lot of things that</font><font color="#E5E5E5"> were</font>

803
00:30:17,260 --> 00:30:22,200
<font color="#E5E5E5">behind kind of sales calls or whatever</font>

804
00:30:19,930 --> 00:30:24,550
and I wasn't<font color="#E5E5E5"> willing to do those I</font>

805
00:30:22,200 --> 00:30:25,930
haven't seen a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> more robust</font>

806
00:30:24,550 --> 00:30:27,760
vulnerability management<font color="#E5E5E5"> solutions</font>

807
00:30:25,930 --> 00:30:29,170
supplying the data that<font color="#CCCCCC"> a zero trust</font>

808
00:30:27,760 --> 00:30:32,770
implementation<font color="#CCCCCC"> around the Weisse state</font>

809
00:30:29,170 --> 00:30:35,610
would be able<font color="#E5E5E5"> to use so let's talk</font><font color="#CCCCCC"> about</font>

810
00:30:32,770 --> 00:30:39,010
what it might look like to have a better

811
00:30:35,610 --> 00:30:41,189
trust anchor on Windows<font color="#E5E5E5"> devices there's</font>

812
00:30:39,010 --> 00:30:43,629
four or<font color="#E5E5E5"> five different Hardware rooted</font>

813
00:30:41,190 --> 00:30:46,930
capabilities<font color="#E5E5E5"> that we can use to</font><font color="#CCCCCC"> at least</font>

814
00:30:43,630 --> 00:30:50,140
raise the bar up it<font color="#E5E5E5"> the bar</font><font color="#CCCCCC"> right now is</font>

815
00:30:46,930 --> 00:30:51,910
run<font color="#CCCCCC"> Mimi cats playing</font><font color="#E5E5E5"> around with</font>

816
00:30:50,140 --> 00:30:53,830
fiddler<font color="#CCCCCC"> in JavaScript</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> things like</font>

817
00:30:51,910 --> 00:30:56,500
<font color="#CCCCCC">that which is</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very high bar when</font>

818
00:30:53,830 --> 00:30:59,169
it<font color="#CCCCCC"> comes to device</font><font color="#E5E5E5"> trust</font><font color="#CCCCCC"> the first is</font>

819
00:30:56,500 --> 00:31:01,420
obviously<font color="#CCCCCC"> you</font><font color="#E5E5E5"> fee secure boot gives us</font>

820
00:30:59,170 --> 00:31:03,100
the capability to determine if the<font color="#E5E5E5"> firm</font>

821
00:31:01,420 --> 00:31:05,530
<font color="#E5E5E5">around the device and the bootloader run</font>

822
00:31:03,100 --> 00:31:07,840
it all brought<font color="#CCCCCC"> up together are as the</font>

823
00:31:05,530 --> 00:31:08,790
manufacturer and<font color="#E5E5E5"> the OS system vendor</font>

824
00:31:07,840 --> 00:31:10,350
intended

825
00:31:08,790 --> 00:31:12,800
those are critical capabilities to<font color="#E5E5E5"> know</font>

826
00:31:10,350 --> 00:31:14,820
kind<font color="#CCCCCC"> of baseline can I trust</font><font color="#E5E5E5"> this device</font>

827
00:31:12,800 --> 00:31:17,040
<font color="#E5E5E5">the second</font><font color="#CCCCCC"> component as we already</font>

828
00:31:14,820 --> 00:31:19,200
<font color="#E5E5E5">talked about</font><font color="#CCCCCC"> is the TPM and</font><font color="#E5E5E5"> the ability</font>

829
00:31:17,040 --> 00:31:22,470
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> both key at the station there as</font>

830
00:31:19,200 --> 00:31:26,280
well as<font color="#E5E5E5"> store secrets segmented from the</font>

831
00:31:22,470 --> 00:31:28,320
operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> going forward</font><font color="#CCCCCC"> on the</font>

832
00:31:26,280 --> 00:31:30,330
latest<font color="#CCCCCC"> windows and future Windows</font>

833
00:31:28,320 --> 00:31:32,490
devices<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have something even</font><font color="#CCCCCC"> better</font>

834
00:31:30,330 --> 00:31:34,320
which is<font color="#CCCCCC"> Intel's</font><font color="#E5E5E5"> txt and</font><font color="#CCCCCC"> Skinit which</font>

835
00:31:32,490 --> 00:31:36,960
I'm going<font color="#E5E5E5"> to go into in just a moment</font>

836
00:31:34,320 --> 00:31:40,320
<font color="#E5E5E5">Intel's txt and Skinit allow us to</font>

837
00:31:36,960 --> 00:31:42,240
<font color="#CCCCCC">actually measure the bootloader and</font>

838
00:31:40,320 --> 00:31:47,399
other key<font color="#E5E5E5"> operating system constructs</font>

839
00:31:42,240 --> 00:31:50,220
<font color="#E5E5E5">without taking a dependency trusting you</font>

840
00:31:47,400 --> 00:31:51,120
feed vendors<font color="#CCCCCC"> assuming that those</font><font color="#E5E5E5"> you</font>

841
00:31:50,220 --> 00:31:53,520
feed vendors might have vulnerabilities

842
00:31:51,120 --> 00:31:56,610
<font color="#CCCCCC">in their firmware which is happening</font>

843
00:31:53,520 --> 00:31:58,650
<font color="#CCCCCC">more and more often</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the third bit</font>

844
00:31:56,610 --> 00:32:00,419
that we can use as a trust anchor and

845
00:31:58,650 --> 00:32:03,210
hardware is<font color="#E5E5E5"> Intel's</font>

846
00:32:00,420 --> 00:32:05,880
<font color="#CCCCCC">etx</font><font color="#E5E5E5"> vtd and the similar equivalents from</font>

847
00:32:03,210 --> 00:32:08,190
<font color="#E5E5E5">AMD and Qualcomm which</font><font color="#CCCCCC"> will allow us to</font>

848
00:32:05,880 --> 00:32:10,320
create<font color="#E5E5E5"> an isolated code segment for</font>

849
00:32:08,190 --> 00:32:13,380
things like trusted code and secrets

850
00:32:10,320 --> 00:32:15,030
<font color="#E5E5E5">that we can use to assess the</font><font color="#CCCCCC"> security</font>

851
00:32:13,380 --> 00:32:18,210
of the<font color="#CCCCCC"> device or at least reduce its</font>

852
00:32:15,030 --> 00:32:21,149
risk profile<font color="#E5E5E5"> so putting this together</font>

853
00:32:18,210 --> 00:32:22,800
<font color="#E5E5E5">into an attestation solution is actually</font>

854
00:32:21,150 --> 00:32:25,260
<font color="#CCCCCC">relatively powerful</font><font color="#E5E5E5"> at least when we're</font>

855
00:32:22,800 --> 00:32:28,800
talking about boot properties so in this

856
00:32:25,260 --> 00:32:31,910
simple<font color="#CCCCCC"> animation from</font><font color="#E5E5E5"> the hardware at</font>

857
00:32:28,800 --> 00:32:34,620
the<font color="#E5E5E5"> factory using secure boot we can</font>

858
00:32:31,910 --> 00:32:36,720
attest to the bootloader being signed<font color="#E5E5E5"> by</font>

859
00:32:34,620 --> 00:32:39,300
the manufacturers requirements<font color="#E5E5E5"> the</font>

860
00:32:36,720 --> 00:32:41,490
platform owner<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can use that</font><font color="#CCCCCC"> to create</font>

861
00:32:39,300 --> 00:32:43,889
<font color="#E5E5E5">a trust change and load the Windows</font><font color="#CCCCCC"> boot</font>

862
00:32:41,490 --> 00:32:45,930
manager<font color="#E5E5E5"> once we get in to win load we</font>

863
00:32:43,890 --> 00:32:48,330
<font color="#CCCCCC">can measure the hashes of</font><font color="#E5E5E5"> all the code</font>

864
00:32:45,930 --> 00:32:51,270
that<font color="#CCCCCC"> start</font><font color="#E5E5E5"> on the device into these PC</font>

865
00:32:48,330 --> 00:32:53,699
configuration registers<font color="#E5E5E5"> so on and so</font>

866
00:32:51,270 --> 00:32:55,889
forth<font color="#E5E5E5"> so</font><font color="#CCCCCC"> in the end</font><font color="#E5E5E5"> what we're able to</font>

867
00:32:53,700 --> 00:32:57,300
<font color="#CCCCCC">do is say</font><font color="#E5E5E5"> that the basic components of</font>

868
00:32:55,890 --> 00:32:58,980
the operating systems are<font color="#E5E5E5"> absolutely</font>

869
00:32:57,300 --> 00:33:00,870
<font color="#E5E5E5">required the engine in the car is</font>

870
00:32:58,980 --> 00:33:02,940
running<font color="#E5E5E5"> as intended</font>

871
00:33:00,870 --> 00:33:05,340
if you can't have<font color="#E5E5E5"> these</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> then</font>

872
00:33:02,940 --> 00:33:07,620
<font color="#CCCCCC">there is ZERO way for you to establish</font>

873
00:33:05,340 --> 00:33:09,449
<font color="#E5E5E5">trust in the device because essentially</font>

874
00:33:07,620 --> 00:33:10,770
at that point any property that<font color="#CCCCCC"> you</font>

875
00:33:09,450 --> 00:33:14,220
would measure remotely would be

876
00:33:10,770 --> 00:33:15,990
immutable<font color="#E5E5E5"> using these PCRs we can</font>

877
00:33:14,220 --> 00:33:18,540
actually<font color="#E5E5E5"> sign a report using</font><font color="#CCCCCC"> the</font>

878
00:33:15,990 --> 00:33:20,250
endorsement key in the TPM and<font color="#E5E5E5"> we can</font>

879
00:33:18,540 --> 00:33:22,260
write<font color="#E5E5E5"> that into something called the TCG</font>

880
00:33:20,250 --> 00:33:24,179
log or<font color="#CCCCCC"> the trusted computing group log</font>

881
00:33:22,260 --> 00:33:26,100
so what we end<font color="#E5E5E5"> up with is a list of</font>

882
00:33:24,179 --> 00:33:27,960
<font color="#E5E5E5">properties things like is code integrity</font>

883
00:33:26,100 --> 00:33:31,080
running on this<font color="#CCCCCC"> device</font><font color="#E5E5E5"> is there a kernel</font>

884
00:33:27,960 --> 00:33:32,820
debugger<font color="#CCCCCC"> is the UV code</font><font color="#E5E5E5"> sign what is the</font>

885
00:33:31,080 --> 00:33:34,110
current<font color="#E5E5E5"> operating system version is this</font>

886
00:33:32,820 --> 00:33:37,260
<font color="#E5E5E5">the version of the kernel that came from</font>

887
00:33:34,110 --> 00:33:39,360
Microsoft<font color="#E5E5E5"> all good stuff and</font><font color="#CCCCCC"> you can use</font>

888
00:33:37,260 --> 00:33:41,040
that and<font color="#E5E5E5"> send that signal up</font><font color="#CCCCCC"> to a cloud</font>

889
00:33:39,360 --> 00:33:43,290
<font color="#E5E5E5">service in this case the device health</font>

890
00:33:41,040 --> 00:33:46,080
attestation server<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can use that</font>

891
00:33:43,290 --> 00:33:47,730
as a signal<font color="#E5E5E5"> into your access proxy to</font>

892
00:33:46,080 --> 00:33:52,020
<font color="#E5E5E5">determine access sounds pretty good</font>

893
00:33:47,730 --> 00:33:53,309
right so definitely the device<font color="#CCCCCC"> health</font>

894
00:33:52,020 --> 00:33:55,770
<font color="#CCCCCC">app to</font><font color="#E5E5E5"> station service which is</font>

895
00:33:53,309 --> 00:33:57,570
extensible many mDM's use it but<font color="#E5E5E5"> there's</font>

896
00:33:55,770 --> 00:34:00,860
<font color="#E5E5E5">still things that we could do better</font>

897
00:33:57,570 --> 00:34:03,240
<font color="#CCCCCC">what are those things well first is the</font>

898
00:34:00,860 --> 00:34:06,449
<font color="#E5E5E5">implementation</font><font color="#CCCCCC"> I showed you here has</font>

899
00:34:03,240 --> 00:34:08,399
complete trust<font color="#E5E5E5"> on the UV code in the</font>

900
00:34:06,450 --> 00:34:11,280
devices<font color="#E5E5E5"> is running on at least on the PC</font>

901
00:34:08,399 --> 00:34:13,199
side<font color="#E5E5E5"> if you follow kind of security news</font>

902
00:34:11,280 --> 00:34:15,750
and the amount of<font color="#CCCCCC"> CVEs flowing and</font>

903
00:34:13,199 --> 00:34:18,118
exploitation happening<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Newfie and the</font>

904
00:34:15,750 --> 00:34:20,340
challenges with updating that<font color="#E5E5E5"> that is</font>

905
00:34:18,119 --> 00:34:22,109
not a good best<font color="#E5E5E5"> bet especially if you're</font>

906
00:34:20,340 --> 00:34:24,869
<font color="#CCCCCC">betting</font><font color="#E5E5E5"> on zero trust and</font><font color="#CCCCCC"> hardware</font>

907
00:34:22,109 --> 00:34:27,869
<font color="#E5E5E5">rooted security the second challenge</font>

908
00:34:24,869 --> 00:34:29,970
with DHA is<font color="#CCCCCC"> its boot time</font><font color="#E5E5E5"> all the action</font>

909
00:34:27,869 --> 00:34:31,980
in my opinion when we<font color="#E5E5E5"> looked at breaches</font>

910
00:34:29,969 --> 00:34:33,629
actually happens at<font color="#E5E5E5"> run time so saying</font>

911
00:34:31,980 --> 00:34:35,850
this device booted up healthy and<font color="#E5E5E5"> as</font>

912
00:34:33,629 --> 00:34:37,949
Hardware<font color="#E5E5E5"> rooted is not super</font><font color="#CCCCCC"> useful</font>

913
00:34:35,850 --> 00:34:39,569
against a macro attack I<font color="#E5E5E5"> can like bring</font>

914
00:34:37,949 --> 00:34:41,399
up virtualization<font color="#CCCCCC"> based security but if</font>

915
00:34:39,570 --> 00:34:44,280
somebody still clicks on<font color="#CCCCCC"> that X seat it</font>

916
00:34:41,399 --> 00:34:46,290
<font color="#E5E5E5">doesn't really matter</font><font color="#CCCCCC"> and the third</font>

917
00:34:44,280 --> 00:34:50,010
challenge with increasing device<font color="#E5E5E5"> trust</font>

918
00:34:46,290 --> 00:34:51,719
is ostensibly<font color="#CCCCCC"> AV</font><font color="#E5E5E5"> and maybe an EDR</font>

919
00:34:50,010 --> 00:34:53,159
solution would<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to kind of tell</font>

920
00:34:51,719 --> 00:34:55,589
us<font color="#E5E5E5"> what's happening on the device at</font>

921
00:34:53,159 --> 00:34:57,869
<font color="#E5E5E5">runtime but those are all trivially</font>

922
00:34:55,590 --> 00:35:02,450
subverted<font color="#E5E5E5"> with attacks against things</font>

923
00:34:57,869 --> 00:35:05,130
like ppl loading<font color="#E5E5E5"> drivers that are</font>

924
00:35:02,450 --> 00:35:07,439
<font color="#E5E5E5">vulnerable but signed and various other</font>

925
00:35:05,130 --> 00:35:09,990
mechanisms for<font color="#E5E5E5"> tampering mean that a</font>

926
00:35:07,440 --> 00:35:12,330
software component<font color="#CCCCCC"> in the best of</font>

927
00:35:09,990 --> 00:35:17,520
circumstances is difficult to use<font color="#CCCCCC"> as a</font>

928
00:35:12,330 --> 00:35:20,340
<font color="#CCCCCC">trust anchor one of the things that I</font>

929
00:35:17,520 --> 00:35:23,060
wanted<font color="#CCCCCC"> to point</font><font color="#E5E5E5"> out was in our own</font>

930
00:35:20,340 --> 00:35:25,830
testing internally<font color="#E5E5E5"> at Microsoft we</font>

931
00:35:23,060 --> 00:35:27,240
evaluated the security of<font color="#E5E5E5"> device</font><font color="#CCCCCC"> Health</font>

932
00:35:25,830 --> 00:35:30,420
<font color="#CCCCCC">Association</font><font color="#E5E5E5"> while we found it pretty</font>

933
00:35:27,240 --> 00:35:33,868
<font color="#E5E5E5">good we also identified as I said</font><font color="#CCCCCC"> SMM</font><font color="#E5E5E5"> as</font>

934
00:35:30,420 --> 00:35:35,910
a critical<font color="#CCCCCC"> area</font><font color="#E5E5E5"> for improvement in an</font>

935
00:35:33,869 --> 00:35:37,380
area that<font color="#CCCCCC"> attackers could</font><font color="#E5E5E5"> target</font>

936
00:35:35,910 --> 00:35:38,578
because so much of<font color="#E5E5E5"> our security</font>

937
00:35:37,380 --> 00:35:40,380
<font color="#E5E5E5">infrastructure is based on</font>

938
00:35:38,579 --> 00:35:42,210
virtualization<font color="#E5E5E5"> based security</font><font color="#CCCCCC"> and the</font>

939
00:35:40,380 --> 00:35:45,059
ability<font color="#CCCCCC"> to hide secrets and trusted code</font>

940
00:35:42,210 --> 00:35:47,339
<font color="#E5E5E5">across a hypervisor boundary</font><font color="#CCCCCC"> SMM turns</font>

941
00:35:45,059 --> 00:35:49,650
out to<font color="#CCCCCC"> be the lowest</font><font color="#E5E5E5"> hanging fruit in</font>

942
00:35:47,339 --> 00:35:52,349
<font color="#CCCCCC">that world it's the lagging gazelle</font><font color="#E5E5E5"> it's</font>

943
00:35:49,650 --> 00:35:54,150
the place you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> target</font><font color="#E5E5E5"> so both</font>

944
00:35:52,349 --> 00:35:55,500
external researchers and the internal

945
00:35:54,150 --> 00:35:58,140
windows<font color="#E5E5E5"> red team when they want to</font>

946
00:35:55,500 --> 00:36:00,720
<font color="#E5E5E5">compromise devices they're generally</font>

947
00:35:58,140 --> 00:36:04,828
looking at the<font color="#CCCCCC"> UV code available at</font>

948
00:36:00,720 --> 00:36:08,098
<font color="#CCCCCC">runtime or SMM</font><font color="#E5E5E5"> as a mechanism for</font>

949
00:36:04,829 --> 00:36:10,079
<font color="#E5E5E5">attacking the hypervisor</font><font color="#CCCCCC"> so one of the</font>

950
00:36:08,099 --> 00:36:13,440
kind<font color="#CCCCCC"> of examples</font><font color="#E5E5E5"> I wanted to show here</font>

951
00:36:10,079 --> 00:36:15,720
<font color="#E5E5E5">was back when we shipped Windows 10 with</font>

952
00:36:13,440 --> 00:36:18,119
device guard the internal<font color="#E5E5E5"> red team</font>

953
00:36:15,720 --> 00:36:20,910
looked at a surface<font color="#CCCCCC"> pro 3 at the time</font>

954
00:36:18,119 --> 00:36:26,010
<font color="#CCCCCC">actually found a trivial stack overflow</font>

955
00:36:20,910 --> 00:36:28,140
and<font color="#E5E5E5"> an SMI</font><font color="#CCCCCC"> eye handler in SMM the impact</font>

956
00:36:26,010 --> 00:36:29,430
of this was<font color="#E5E5E5"> triggering</font><font color="#CCCCCC"> the SMI handler</font>

957
00:36:28,140 --> 00:36:31,109
from kernel<font color="#E5E5E5"> and they already had kernel</font>

958
00:36:29,430 --> 00:36:33,270
code execution with a<font color="#E5E5E5"> criminal exploit</font>

959
00:36:31,109 --> 00:36:36,900
<font color="#CCCCCC">they were able to completely override</font>

960
00:36:33,270 --> 00:36:39,089
<font color="#CCCCCC">SMM memory and use that to tamper with</font>

961
00:36:36,900 --> 00:36:40,829
the hypervisor<font color="#E5E5E5"> eventually leading to</font>

962
00:36:39,089 --> 00:36:42,930
leaking credentials from credential

963
00:36:40,829 --> 00:36:46,799
<font color="#E5E5E5">guard so credential guard has a strong</font>

964
00:36:42,930 --> 00:36:48,480
dependency on<font color="#CCCCCC"> SMM security</font><font color="#E5E5E5"> obviously we</font>

965
00:36:46,799 --> 00:36:49,710
<font color="#CCCCCC">fix</font><font color="#E5E5E5"> that vulnerability that we're able</font>

966
00:36:48,480 --> 00:36:52,859
<font color="#E5E5E5">to ship that</font><font color="#CCCCCC"> out and then</font><font color="#E5E5E5"> we looked at</font>

967
00:36:49,710 --> 00:36:55,140
<font color="#E5E5E5">other devices</font><font color="#CCCCCC"> a couple of CVS I linked</font>

968
00:36:52,859 --> 00:36:56,460
out related to Lenovo devices as<font color="#E5E5E5"> well</font>

969
00:36:55,140 --> 00:36:58,529
but<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> very common pattern</font>

970
00:36:56,460 --> 00:37:01,200
<font color="#E5E5E5">throughout the industry</font><font color="#CCCCCC"> and so the</font>

971
00:36:58,529 --> 00:37:03,329
general<font color="#E5E5E5"> concern here is it's nice to</font>

972
00:37:01,200 --> 00:37:06,180
have<font color="#E5E5E5"> Hardware rooted security but it's</font>

973
00:37:03,329 --> 00:37:08,339
currently subverted by<font color="#E5E5E5"> limitations and</font>

974
00:37:06,180 --> 00:37:09,288
<font color="#CCCCCC">Trust</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> SMM so how do we solve</font><font color="#E5E5E5"> that</font>

975
00:37:08,339 --> 00:37:12,000
problem

976
00:37:09,289 --> 00:37:14,970
the first way we solve<font color="#CCCCCC"> that problem is</font>

977
00:37:12,000 --> 00:37:17,400
<font color="#E5E5E5">by moving to a boob mechanism that no</font>

978
00:37:14,970 --> 00:37:20,220
longer<font color="#E5E5E5"> has a static route of trust</font><font color="#CCCCCC"> that</font>

979
00:37:17,400 --> 00:37:21,960
has a dependency on<font color="#E5E5E5"> the UV vendor or</font>

980
00:37:20,220 --> 00:37:24,959
firmware vendor writing perfect code

981
00:37:21,960 --> 00:37:28,109
which is hard to<font color="#E5E5E5"> do the way that we do</font>

982
00:37:24,960 --> 00:37:29,730
<font color="#E5E5E5">that is by</font><font color="#CCCCCC"> using the</font><font color="#E5E5E5"> Intel txt</font>

983
00:37:28,109 --> 00:37:33,119
extensions to implement what's called

984
00:37:29,730 --> 00:37:35,549
dynamic route of trust or<font color="#CCCCCC"> D RT M & D RT</font>

985
00:37:33,119 --> 00:37:37,890
<font color="#CCCCCC">EMA is relatively</font><font color="#E5E5E5"> simple the concept is</font>

986
00:37:35,549 --> 00:37:40,440
allow you<font color="#E5E5E5"> feel secure</font><font color="#CCCCCC"> boot to work as it</font>

987
00:37:37,890 --> 00:37:41,759
is but when we get to the point<font color="#E5E5E5"> where</font>

988
00:37:40,440 --> 00:37:44,609
we're loading operating system

989
00:37:41,760 --> 00:37:46,289
<font color="#CCCCCC">components</font><font color="#E5E5E5"> let's load a piece of code</font>

990
00:37:44,609 --> 00:37:48,940
card<font color="#CCCCCC"> MLE or a measured launch</font>

991
00:37:46,289 --> 00:37:50,650
environment<font color="#CCCCCC"> that's guaranteed</font><font color="#E5E5E5"> by an AC</font>

992
00:37:48,940 --> 00:37:52,240
which is written<font color="#CCCCCC"> by</font><font color="#E5E5E5"> Intel and signed</font>

993
00:37:50,650 --> 00:37:55,990
<font color="#E5E5E5">only to run until</font><font color="#CCCCCC"> it's harder so it's</font>

994
00:37:52,240 --> 00:37:58,419
trusted and trigger what's called in an

995
00:37:55,990 --> 00:38:02,169
<font color="#CCCCCC">S</font><font color="#E5E5E5"> in it call to start to measure that</font>

996
00:37:58,420 --> 00:38:04,329
code<font color="#E5E5E5"> into a PCR and the idea here is we</font>

997
00:38:02,170 --> 00:38:06,250
<font color="#CCCCCC">can link both unsealing</font><font color="#E5E5E5"> a secrets that</font>

998
00:38:04,329 --> 00:38:07,960
is like the<font color="#E5E5E5"> ability to whether or not to</font>

999
00:38:06,250 --> 00:38:11,319
decrypt<font color="#E5E5E5"> the device using something like</font>

1000
00:38:07,960 --> 00:38:14,170
BitLocker<font color="#CCCCCC"> as well as device health based</font>

1001
00:38:11,319 --> 00:38:16,630
on<font color="#E5E5E5"> dependency only on Microsoft and</font>

1002
00:38:14,170 --> 00:38:19,690
Intel<font color="#E5E5E5"> code so we took the trust circle</font>

1003
00:38:16,630 --> 00:38:21,970
<font color="#E5E5E5">from every vendor out there with all the</font>

1004
00:38:19,690 --> 00:38:23,740
permutations<font color="#CCCCCC"> of firmer code to just</font>

1005
00:38:21,970 --> 00:38:26,259
Microsoft and Intel which wrote the

1006
00:38:23,740 --> 00:38:28,299
chipset<font color="#E5E5E5"> and wrote the operating system</font>

1007
00:38:26,260 --> 00:38:30,130
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is a dramatic reduction</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the tax</font>

1008
00:38:28,300 --> 00:38:31,359
surface and can<font color="#E5E5E5"> give us a lot</font><font color="#CCCCCC"> more</font>

1009
00:38:30,130 --> 00:38:33,790
confidence<font color="#E5E5E5"> that we're at least we're</font>

1010
00:38:31,359 --> 00:38:36,609
bringing up<font color="#E5E5E5"> the device in a healthy</font><font color="#CCCCCC"> way</font>

1011
00:38:33,790 --> 00:38:39,910
<font color="#CCCCCC">and so in an upcoming version of Windows</font>

1012
00:38:36,609 --> 00:38:42,609
<font color="#E5E5E5">we'll be shipping</font><font color="#CCCCCC"> D RT M as</font><font color="#E5E5E5"> a mechanism</font>

1013
00:38:39,910 --> 00:38:44,859
<font color="#E5E5E5">in boot and we will also</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> exposing the</font>

1014
00:38:42,609 --> 00:38:47,290
ability to<font color="#CCCCCC"> test</font><font color="#E5E5E5"> that remotely which is a</font>

1015
00:38:44,859 --> 00:38:51,400
critical factor<font color="#CCCCCC"> in building a real zero</font>

1016
00:38:47,290 --> 00:38:54,640
trust device now when I<font color="#E5E5E5"> introduced this</font>

1017
00:38:51,400 --> 00:38:56,980
I kind of boasted like this is real zero

1018
00:38:54,640 --> 00:38:58,690
trust we're getting rid of firmware

1019
00:38:56,980 --> 00:39:00,190
dependencies and<font color="#E5E5E5"> that's because I've</font>

1020
00:38:58,690 --> 00:39:02,619
<font color="#CCCCCC">been involved in some of</font><font color="#E5E5E5"> these internal</font>

1021
00:39:00,190 --> 00:39:04,210
<font color="#E5E5E5">and external operations where</font><font color="#CCCCCC"> SMM have</font>

1022
00:39:02,619 --> 00:39:06,220
been used to attack the<font color="#E5E5E5"> hypervisor and</font>

1023
00:39:04,210 --> 00:39:08,230
<font color="#E5E5E5">other</font><font color="#CCCCCC"> mechanisms and so</font><font color="#E5E5E5"> I what this is</font>

1024
00:39:06,220 --> 00:39:11,169
super cool<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> have trust</font><font color="#E5E5E5"> and</font>

1025
00:39:08,230 --> 00:39:13,300
rightfully so<font color="#CCCCCC"> a couple of really</font><font color="#E5E5E5"> smart</font>

1026
00:39:11,170 --> 00:39:15,970
<font color="#E5E5E5">folks pointed out you know Dave that</font><font color="#CCCCCC"> is</font>

1027
00:39:13,300 --> 00:39:18,400
cool<font color="#CCCCCC"> that you have</font><font color="#E5E5E5"> txt but you still</font>

1028
00:39:15,970 --> 00:39:21,598
have a dependency on<font color="#CCCCCC"> SMM in these cases</font>

1029
00:39:18,400 --> 00:39:24,400
<font color="#E5E5E5">and they pointed out a few older</font>

1030
00:39:21,599 --> 00:39:26,260
<font color="#CCCCCC">research papers by</font><font color="#E5E5E5"> joanna</font><font color="#CCCCCC"> rutkowska</font><font color="#E5E5E5"> and</font>

1031
00:39:24,400 --> 00:39:29,020
other which pointed<font color="#E5E5E5"> out that there's a</font>

1032
00:39:26,260 --> 00:39:31,089
very<font color="#CCCCCC"> strong</font><font color="#E5E5E5"> linkage between txt and</font><font color="#CCCCCC"> SMM</font>

1033
00:39:29,020 --> 00:39:33,009
security and one of the reasons is is

1034
00:39:31,089 --> 00:39:35,859
<font color="#CCCCCC">SMM is running at such a privilege level</font>

1035
00:39:33,010 --> 00:39:38,230
<font color="#E5E5E5">we call it really bring - - that has the</font>

1036
00:39:35,859 --> 00:39:41,560
<font color="#E5E5E5">ability to tamper essentially any code</font>

1037
00:39:38,230 --> 00:39:44,319
running on<font color="#E5E5E5"> the device and so the</font>

1038
00:39:41,560 --> 00:39:47,980
mechanism<font color="#CCCCCC"> for defeating that is is not</font>

1039
00:39:44,319 --> 00:39:49,599
simple<font color="#CCCCCC"> so when I announced that</font><font color="#E5E5E5"> we might</font>

1040
00:39:47,980 --> 00:39:50,319
have a mechanism<font color="#CCCCCC"> for</font><font color="#E5E5E5"> doing this in the</font>

1041
00:39:49,599 --> 00:39:53,140
future

1042
00:39:50,319 --> 00:39:55,060
<font color="#E5E5E5">Alex turrican who is a really awesome</font>

1043
00:39:53,140 --> 00:39:57,770
researcher pointed out like so you're

1044
00:39:55,060 --> 00:40:00,650
gonna force oh em

1045
00:39:57,770 --> 00:40:02,930
<font color="#CCCCCC">are</font><font color="#E5E5E5"> kind of device vendors to run in</font>

1046
00:40:00,650 --> 00:40:04,280
<font color="#CCCCCC">what's called</font><font color="#E5E5E5"> STM or a reduced sort of</font>

1047
00:40:02,930 --> 00:40:06,830
functionality<font color="#E5E5E5"> or</font><font color="#CCCCCC"> reduced privilege</font>

1048
00:40:04,280 --> 00:40:09,770
version of<font color="#CCCCCC"> SMM</font><font color="#E5E5E5"> and so</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> got really</font>

1049
00:40:06,830 --> 00:40:11,930
<font color="#CCCCCC">excited about that</font><font color="#E5E5E5"> and I actually poked</font>

1050
00:40:09,770 --> 00:40:14,090
on my<font color="#E5E5E5"> Intel buddies and said every time</font>

1051
00:40:11,930 --> 00:40:15,589
I<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> dr TM</font><font color="#E5E5E5"> super-smart</font>

1052
00:40:14,090 --> 00:40:17,330
researchers point<font color="#E5E5E5"> out that we got the</font>

1053
00:40:15,590 --> 00:40:19,040
strong dependency on<font color="#CCCCCC"> SMM and we're</font>

1054
00:40:17,330 --> 00:40:19,640
<font color="#E5E5E5">working on something together can I talk</font>

1055
00:40:19,040 --> 00:40:22,700
<font color="#E5E5E5">about it</font>

1056
00:40:19,640 --> 00:40:24,620
and so for<font color="#E5E5E5"> blackhat I got them to allow</font>

1057
00:40:22,700 --> 00:40:25,759
me<font color="#E5E5E5"> to do that so I wanted to talk</font><font color="#CCCCCC"> a</font>

1058
00:40:24,620 --> 00:40:27,920
little<font color="#CCCCCC"> bit about some of</font><font color="#E5E5E5"> the things</font>

1059
00:40:25,760 --> 00:40:31,100
we've<font color="#CCCCCC"> been cooking</font><font color="#E5E5E5"> up with Intel in the</font>

1060
00:40:27,920 --> 00:40:33,110
SMM space the first thing is Intel

1061
00:40:31,100 --> 00:40:35,150
runtime<font color="#CCCCCC"> BIOS resilience which is</font>

1062
00:40:33,110 --> 00:40:38,330
essentially in my mind a stripped down

1063
00:40:35,150 --> 00:40:40,820
<font color="#CCCCCC">version of SCM so it guarantees a few</font>

1064
00:40:38,330 --> 00:40:44,330
security<font color="#E5E5E5"> properties about</font><font color="#CCCCCC"> SMM one is all</font>

1065
00:40:40,820 --> 00:40:46,520
of the code<font color="#E5E5E5"> running</font><font color="#CCCCCC"> and SMM it has</font>

1066
00:40:44,330 --> 00:40:48,970
locked down page tables and cannot map

1067
00:40:46,520 --> 00:40:52,610
or modify operating system<font color="#E5E5E5"> memory at all</font>

1068
00:40:48,970 --> 00:40:54,319
<font color="#CCCCCC">so they use page tables and translation</font>

1069
00:40:52,610 --> 00:40:56,360
mechanisms to prevent access to<font color="#E5E5E5"> the</font>

1070
00:40:54,320 --> 00:40:58,070
hypervisor<font color="#E5E5E5"> or</font><font color="#CCCCCC"> OS memory which are</font>

1071
00:40:56,360 --> 00:40:59,840
<font color="#E5E5E5">critical because conceptually what</font>

1072
00:40:58,070 --> 00:41:01,070
you're doing is compromising in this and

1073
00:40:59,840 --> 00:41:03,410
them<font color="#E5E5E5"> and the first thing you want to do</font>

1074
00:41:01,070 --> 00:41:05,510
is allow an arbitrary read or write<font color="#E5E5E5"> to</font>

1075
00:41:03,410 --> 00:41:07,910
hypervisor or<font color="#CCCCCC"> other operating</font><font color="#E5E5E5"> system</font>

1076
00:41:05,510 --> 00:41:11,120
memory<font color="#E5E5E5"> to tamper</font><font color="#CCCCCC"> with it that's</font><font color="#E5E5E5"> the key</font>

1077
00:41:07,910 --> 00:41:13,129
value proposition of<font color="#CCCCCC"> SMM and the second</font>

1078
00:41:11,120 --> 00:41:14,960
component<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> we can attest to the</font>

1079
00:41:13,130 --> 00:41:17,030
fact that<font color="#E5E5E5"> a machine is running Intel</font>

1080
00:41:14,960 --> 00:41:20,420
<font color="#E5E5E5">BIOS runtime resilience so the</font>

1081
00:41:17,030 --> 00:41:23,270
<font color="#E5E5E5">combination of</font><font color="#CCCCCC"> SMM at the station SMM</font>

1082
00:41:20,420 --> 00:41:25,160
paging protections and dr TM means we

1083
00:41:23,270 --> 00:41:27,890
can<font color="#E5E5E5"> have a full Windows</font><font color="#CCCCCC"> Device boot up</font>

1084
00:41:25,160 --> 00:41:31,160
with trust that even malicious<font color="#CCCCCC"> SMM code</font>

1085
00:41:27,890 --> 00:41:32,540
if it's present<font color="#CCCCCC"> has a restricted ability</font>

1086
00:41:31,160 --> 00:41:34,609
to touch<font color="#CCCCCC"> the hypervisor or other</font>

1087
00:41:32,540 --> 00:41:36,050
constructs so that's super<font color="#E5E5E5"> critical and</font>

1088
00:41:34,610 --> 00:41:40,100
<font color="#E5E5E5">something we can work into the zero</font>

1089
00:41:36,050 --> 00:41:43,160
trust implementations now<font color="#E5E5E5"> I mentioned</font>

1090
00:41:40,100 --> 00:41:44,960
previously<font color="#E5E5E5"> that the other issue that</font><font color="#CCCCCC"> we</font>

1091
00:41:43,160 --> 00:41:47,779
have with<font color="#E5E5E5"> establishing device trust at</font>

1092
00:41:44,960 --> 00:41:50,300
least on Windows devices is<font color="#E5E5E5"> the key</font>

1093
00:41:47,780 --> 00:41:52,430
thing the key<font color="#E5E5E5"> kind of data that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> want</font>

1094
00:41:50,300 --> 00:41:54,320
<font color="#CCCCCC">to get is what's</font><font color="#E5E5E5"> coming from the AVR EBR</font>

1095
00:41:52,430 --> 00:41:56,259
so if you have a<font color="#CCCCCC"> PowerShell attack on</font>

1096
00:41:54,320 --> 00:41:58,550
the device if you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a phishing attack</font>

1097
00:41:56,260 --> 00:42:01,400
<font color="#E5E5E5">whatever attack is happening</font><font color="#CCCCCC"> on the</font>

1098
00:41:58,550 --> 00:42:03,020
device your best optics<font color="#E5E5E5"> into that and</font>

1099
00:42:01,400 --> 00:42:04,520
your best mechanism of establishing

1100
00:42:03,020 --> 00:42:07,160
trust are probably going<font color="#E5E5E5"> to come from</font><font color="#CCCCCC"> an</font>

1101
00:42:04,520 --> 00:42:08,960
<font color="#CCCCCC">AV or a TDR that you've invested in the</font>

1102
00:42:07,160 --> 00:42:11,390
challenge with those<font color="#E5E5E5"> and was pointed out</font>

1103
00:42:08,960 --> 00:42:15,410
last year at blackhat by our research

1104
00:42:11,390 --> 00:42:16,970
from IBM is that even ppl or a

1105
00:42:15,410 --> 00:42:19,038
protective process<font color="#CCCCCC"> the Microsoft</font>

1106
00:42:16,970 --> 00:42:21,950
<font color="#CCCCCC">platform can be relatively</font><font color="#E5E5E5"> easily</font>

1107
00:42:19,039 --> 00:42:24,500
subverted using a<font color="#E5E5E5"> kernel driver in this</font>

1108
00:42:21,950 --> 00:42:26,480
case<font color="#E5E5E5"> me me cats or a kernel driver that</font>

1109
00:42:24,500 --> 00:42:28,549
<font color="#E5E5E5">maybe it was</font><font color="#CCCCCC"> signed validly at one point</font>

1110
00:42:26,480 --> 00:42:30,619
but had a vulnerability<font color="#CCCCCC"> but hasn't</font><font color="#E5E5E5"> been</font>

1111
00:42:28,549 --> 00:42:32,779
revoked<font color="#E5E5E5"> using those</font><font color="#CCCCCC"> you can perform</font>

1112
00:42:30,619 --> 00:42:34,250
memory corruption<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> ppl bit in</font>

1113
00:42:32,779 --> 00:42:36,680
what's<font color="#E5E5E5"> called the e process structure</font>

1114
00:42:34,250 --> 00:42:39,200
<font color="#CCCCCC">and use</font><font color="#E5E5E5"> that to restore the full</font>

1115
00:42:36,680 --> 00:42:43,970
capability to inject code read and write

1116
00:42:39,200 --> 00:42:46,069
<font color="#CCCCCC">memory</font><font color="#E5E5E5"> in a protected process so the</font>

1117
00:42:43,970 --> 00:42:48,740
best we offer today<font color="#E5E5E5"> on the Windows</font>

1118
00:42:46,069 --> 00:42:50,750
<font color="#E5E5E5">platform</font><font color="#CCCCCC"> for any AV or software agent is</font>

1119
00:42:48,740 --> 00:42:53,058
ppl<font color="#E5E5E5"> and if that's going to have</font>

1120
00:42:50,750 --> 00:42:54,680
challenges<font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms of security</font><font color="#CCCCCC"> it's</font>

1121
00:42:53,059 --> 00:42:56,390
going to make it very<font color="#E5E5E5"> difficult to trust</font>

1122
00:42:54,680 --> 00:43:00,470
the signals coming from<font color="#E5E5E5"> this in a zero</font>

1123
00:42:56,390 --> 00:43:02,359
trust implementation so we<font color="#E5E5E5"> came up with</font>

1124
00:43:00,470 --> 00:43:04,250
<font color="#E5E5E5">a solution</font><font color="#CCCCCC"> for this</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we want to</font>

1125
00:43:02,359 --> 00:43:07,038
<font color="#CCCCCC">be able to</font><font color="#E5E5E5"> do premiere zero trust on</font>

1126
00:43:04,250 --> 00:43:10,539
Windows platform<font color="#CCCCCC"> and that solution was</font>

1127
00:43:07,039 --> 00:43:13,180
what we're calling<font color="#E5E5E5"> Windows runtime</font>

1128
00:43:10,539 --> 00:43:16,130
system<font color="#E5E5E5"> or Windows run system guard</font>

1129
00:43:13,180 --> 00:43:18,379
system guard runtime attestation<font color="#CCCCCC"> which</font>

1130
00:43:16,130 --> 00:43:21,559
is a<font color="#E5E5E5"> mechanism for measuring key</font>

1131
00:43:18,380 --> 00:43:24,049
security properties of the device<font color="#E5E5E5"> from</font>

1132
00:43:21,559 --> 00:43:25,339
inside of the hypervisor<font color="#CCCCCC"> some of those</font>

1133
00:43:24,049 --> 00:43:27,170
key properties will allow us to

1134
00:43:25,339 --> 00:43:28,670
<font color="#CCCCCC">determine things like</font><font color="#E5E5E5"> if there is</font><font color="#CCCCCC"> a</font>

1135
00:43:27,170 --> 00:43:31,190
software<font color="#CCCCCC"> agent running</font><font color="#E5E5E5"> on your machine</font>

1136
00:43:28,670 --> 00:43:34,009
protected by ppl has<font color="#CCCCCC"> it</font><font color="#E5E5E5"> had code</font>

1137
00:43:31,190 --> 00:43:36,109
injected into<font color="#CCCCCC"> it has ppl been removed</font><font color="#E5E5E5"> it</font>

1138
00:43:34,009 --> 00:43:38,269
essentially<font color="#CCCCCC"> allows us without moving the</font>

1139
00:43:36,109 --> 00:43:40,369
entire AV or EDR stack into the

1140
00:43:38,269 --> 00:43:42,019
hypervisor<font color="#CCCCCC"> to have Hardware rooted</font>

1141
00:43:40,369 --> 00:43:45,440
trusts<font color="#E5E5E5"> so let me explain a little bit</font>

1142
00:43:42,019 --> 00:43:47,390
<font color="#CCCCCC">more about how that</font><font color="#E5E5E5"> works</font><font color="#CCCCCC"> so as I</font>

1143
00:43:45,440 --> 00:43:50,509
<font color="#E5E5E5">mentioned</font><font color="#CCCCCC"> C to system</font><font color="#E5E5E5"> guard runtime</font>

1144
00:43:47,390 --> 00:43:53,029
<font color="#CCCCCC">access station leverages virtualization</font>

1145
00:43:50,509 --> 00:43:54,950
based<font color="#CCCCCC"> security to run its code in a</font>

1146
00:43:53,029 --> 00:43:56,779
hypervisor segmented area of the

1147
00:43:54,950 --> 00:43:59,240
operating system that<font color="#CCCCCC"> we call virtual</font>

1148
00:43:56,779 --> 00:44:01,190
trust level<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the sensor that runs in</font>

1149
00:43:59,240 --> 00:44:04,008
there as a<font color="#CCCCCC"> userland process it has a</font>

1150
00:44:01,190 --> 00:44:06,859
scriptable runtime based<font color="#E5E5E5"> on Lua that</font>

1151
00:44:04,009 --> 00:44:09,109
allows<font color="#CCCCCC"> us</font><font color="#E5E5E5"> to measure from a privileged</font>

1152
00:44:06,859 --> 00:44:11,029
position everything<font color="#E5E5E5"> happening in the</font>

1153
00:44:09,109 --> 00:44:12,589
normal world<font color="#E5E5E5"> operating system so</font>

1154
00:44:11,029 --> 00:44:14,750
conceptually<font color="#E5E5E5"> one way to</font><font color="#CCCCCC"> think about this</font>

1155
00:44:12,589 --> 00:44:16,130
is imagine<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you had like someone</font>

1156
00:44:14,750 --> 00:44:18,710
running forensics on your machine at all

1157
00:44:16,130 --> 00:44:20,690
<font color="#E5E5E5">times volatility etc but they're behind</font>

1158
00:44:18,710 --> 00:44:22,970
a boundary that even a kernel exploit

1159
00:44:20,690 --> 00:44:24,740
cannot violate that's a critical

1160
00:44:22,970 --> 00:44:26,660
security<font color="#E5E5E5"> property in advance</font>

1161
00:44:24,740 --> 00:44:29,959
allows us<font color="#CCCCCC"> to Harbor route what we're</font>

1162
00:44:26,660 --> 00:44:31,399
<font color="#E5E5E5">seeing and system guard</font><font color="#CCCCCC"> runtime access</font>

1163
00:44:29,960 --> 00:44:33,349
<font color="#CCCCCC">station allows these scripts which are</font>

1164
00:44:31,400 --> 00:44:35,119
can<font color="#E5E5E5"> be dynamically loadable to be</font>

1165
00:44:33,349 --> 00:44:36,650
improved over<font color="#CCCCCC"> time</font><font color="#E5E5E5"> and measure more and</font>

1166
00:44:35,119 --> 00:44:39,950
more of the critical operating system

1167
00:44:36,650 --> 00:44:42,319
space<font color="#E5E5E5"> so the system where our runtime</font>

1168
00:44:39,950 --> 00:44:44,328
broker can walk<font color="#E5E5E5"> around it can measure</font>

1169
00:44:42,319 --> 00:44:46,009
things<font color="#E5E5E5"> like do you have</font><font color="#CCCCCC"> code integrity</font>

1170
00:44:44,329 --> 00:44:47,829
on this device was<font color="#E5E5E5"> there memory</font>

1171
00:44:46,009 --> 00:44:50,269
corruption on the<font color="#CCCCCC"> e process bit that</font>

1172
00:44:47,829 --> 00:44:53,180
establishes<font color="#CCCCCC"> ppl</font><font color="#E5E5E5"> or a process isolation</font>

1173
00:44:50,269 --> 00:44:54,859
<font color="#E5E5E5">for say the</font><font color="#CCCCCC"> IV</font><font color="#E5E5E5"> it can determine things</font>

1174
00:44:53,180 --> 00:44:57,319
like<font color="#E5E5E5"> did the firewall and this device</font>

1175
00:44:54,859 --> 00:44:59,180
get shut off<font color="#CCCCCC"> what is there a known</font>

1176
00:44:57,319 --> 00:45:01,420
kernel driver<font color="#E5E5E5"> that provides readwrite</font>

1177
00:44:59,180 --> 00:45:04,549
access to the kernel loaded etc etc

1178
00:45:01,420 --> 00:45:08,150
there is<font color="#E5E5E5"> actually an API that</font><font color="#CCCCCC"> will allow</font>

1179
00:45:04,549 --> 00:45:10,339
arbitrary client pick your<font color="#E5E5E5"> favorite zero</font>

1180
00:45:08,150 --> 00:45:15,470
<font color="#E5E5E5">trust client to call</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> system guard</font>

1181
00:45:10,339 --> 00:45:17,990
<font color="#E5E5E5">API and receive a TPM signed report</font>

1182
00:45:15,470 --> 00:45:20,240
about what's happening in the device and

1183
00:45:17,990 --> 00:45:22,609
so you're<font color="#CCCCCC"> able to do things like call</font>

1184
00:45:20,240 --> 00:45:24,950
<font color="#E5E5E5">into the API get a set of assertions</font>

1185
00:45:22,609 --> 00:45:27,230
<font color="#E5E5E5">coming back about whether the machines</font>

1186
00:45:24,950 --> 00:45:29,990
<font color="#E5E5E5">been tampered or not and then use</font><font color="#CCCCCC"> that</font>

1187
00:45:27,230 --> 00:45:33,019
in the cloud in your access product in

1188
00:45:29,990 --> 00:45:34,700
<font color="#E5E5E5">your access proxy to establish whether</font>

1189
00:45:33,019 --> 00:45:36,828
<font color="#E5E5E5">or not this device now</font><font color="#CCCCCC"> meets the trust</font>

1190
00:45:34,700 --> 00:45:39,410
level<font color="#E5E5E5"> that you expect so that is really</font>

1191
00:45:36,829 --> 00:45:41,450
<font color="#E5E5E5">cool because again assuming that</font><font color="#CCCCCC"> we</font>

1192
00:45:39,410 --> 00:45:43,730
brought<font color="#E5E5E5"> things up with txt that we've</font>

1193
00:45:41,450 --> 00:45:45,379
got<font color="#CCCCCC"> SMM at the station that we brought</font>

1194
00:45:43,730 --> 00:45:47,180
<font color="#CCCCCC">up the</font><font color="#E5E5E5"> virtualization based</font><font color="#CCCCCC"> security</font>

1195
00:45:45,380 --> 00:45:49,490
environment and<font color="#E5E5E5"> that we're completely</font>

1196
00:45:47,180 --> 00:45:53,058
Hardware<font color="#E5E5E5"> rooted at this point it's a</font>

1197
00:45:49,490 --> 00:45:54,979
very difficult<font color="#E5E5E5"> to tamper with mechanism</font>

1198
00:45:53,059 --> 00:45:57,109
for independently measuring the device

1199
00:45:54,980 --> 00:46:01,970
<font color="#CCCCCC">trust and in combination relatively</font>

1200
00:45:57,109 --> 00:46:04,730
powerful so let's talk really quickly

1201
00:46:01,970 --> 00:46:06,259
about<font color="#E5E5E5"> how this would</font><font color="#CCCCCC"> work in practice</font><font color="#E5E5E5"> so</font>

1202
00:46:04,730 --> 00:46:08,869
let's<font color="#CCCCCC"> take an arbitrary attacker process</font>

1203
00:46:06,259 --> 00:46:11,539
let's call it<font color="#CCCCCC"> Mimi</font><font color="#E5E5E5"> cats we load a driver</font>

1204
00:46:08,869 --> 00:46:14,539
<font color="#E5E5E5">that signed by vulnerable into the</font>

1205
00:46:11,539 --> 00:46:16,970
kernel<font color="#CCCCCC"> V Box</font><font color="#E5E5E5"> Capcom cpu-z are all</font>

1206
00:46:14,539 --> 00:46:17,660
commonly<font color="#E5E5E5"> used</font><font color="#CCCCCC"> by tools you can grab on</font>

1207
00:46:16,970 --> 00:46:19,788
github

1208
00:46:17,660 --> 00:46:21,710
the attacker process now has a<font color="#CCCCCC"> readwrite</font>

1209
00:46:19,789 --> 00:46:23,089
mechanism in the kernel they can corrupt

1210
00:46:21,710 --> 00:46:24,859
<font color="#E5E5E5">things like the e process</font><font color="#CCCCCC"> driver</font>

1211
00:46:23,089 --> 00:46:28,190
<font color="#E5E5E5">dispatch process mitigations whatever</font>

1212
00:46:24,859 --> 00:46:29,920
they want to do the<font color="#CCCCCC"> octagon</font><font color="#E5E5E5"> agent or the</font>

1213
00:46:28,190 --> 00:46:32,029
<font color="#E5E5E5">system</font><font color="#CCCCCC"> guard agent will measure those</font>

1214
00:46:29,920 --> 00:46:35,390
report them back<font color="#E5E5E5"> through the</font><font color="#CCCCCC"> octagon</font>

1215
00:46:32,029 --> 00:46:37,589
agent and then the<font color="#CCCCCC"> rime party which can</font>

1216
00:46:35,390 --> 00:46:39,900
be an access proxy or a

1217
00:46:37,589 --> 00:46:44,819
zero trust<font color="#E5E5E5"> enforcement point in the</font>

1218
00:46:39,900 --> 00:46:48,930
cloud<font color="#E5E5E5"> can establish that run through</font>

1219
00:46:44,819 --> 00:46:50,670
<font color="#E5E5E5">this we</font><font color="#CCCCCC"> will we don't have yet but we</font>

1220
00:46:48,930 --> 00:46:52,649
will<font color="#CCCCCC"> in the short future Microsoft will</font>

1221
00:46:50,670 --> 00:46:54,749
be providing an API<font color="#CCCCCC"> that anybody can use</font>

1222
00:46:52,650 --> 00:46:57,509
for<font color="#CCCCCC"> this it's relatively simple</font>

1223
00:46:54,749 --> 00:47:00,598
you establish a session with<font color="#E5E5E5"> the agent</font>

1224
00:46:57,509 --> 00:47:02,579
<font color="#E5E5E5">running in VT l1 you can exchange keys</font>

1225
00:47:00,599 --> 00:47:04,380
and at the<font color="#E5E5E5"> station back with that agent</font>

1226
00:47:02,579 --> 00:47:06,390
to<font color="#CCCCCC"> make sure that</font><font color="#E5E5E5"> it's reporting from</font>

1227
00:47:04,380 --> 00:47:10,140
hardware<font color="#CCCCCC"> and then you can</font><font color="#E5E5E5"> continuously</font>

1228
00:47:06,390 --> 00:47:12,868
call<font color="#CCCCCC"> runtime reports to get a view</font><font color="#E5E5E5"> of</font>

1229
00:47:10,140 --> 00:47:16,410
what's happening<font color="#CCCCCC"> on the device</font><font color="#E5E5E5"> that is</font>

1230
00:47:12,869 --> 00:47:18,930
relatively difficult to tamper with so

1231
00:47:16,410 --> 00:47:24,899
let's quickly look<font color="#CCCCCC"> at</font><font color="#E5E5E5"> how this works in</font>

1232
00:47:18,930 --> 00:47:27,390
practice so I'm going to<font color="#E5E5E5"> in this case</font>

1233
00:47:24,900 --> 00:47:30,599
<font color="#E5E5E5">pick on the MSP engine which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

1234
00:47:27,390 --> 00:47:33,979
<font color="#E5E5E5">Microsoft defender engine</font><font color="#CCCCCC"> you can see</font>

1235
00:47:30,599 --> 00:47:36,180
here<font color="#E5E5E5"> that it is</font><font color="#CCCCCC"> protected in the ppl</font>

1236
00:47:33,979 --> 00:47:37,819
which again will prevent you from doing

1237
00:47:36,180 --> 00:47:39,960
<font color="#E5E5E5">things like read or write process memory</font>

1238
00:47:37,819 --> 00:47:41,609
<font color="#CCCCCC">stopping the service things that we</font>

1239
00:47:39,960 --> 00:47:45,499
<font color="#E5E5E5">don't want to happen when we're using it</font>

1240
00:47:41,609 --> 00:47:45,499
as a key mechanism<font color="#CCCCCC"> for</font><font color="#E5E5E5"> trust</font>

1241
00:47:48,410 --> 00:47:56,460
I'm going to quickly<font color="#CCCCCC"> show you how we</font><font color="#E5E5E5"> can</font>

1242
00:47:53,729 --> 00:47:59,038
from power show call<font color="#E5E5E5"> into the system</font>

1243
00:47:56,460 --> 00:48:00,989
<font color="#E5E5E5">guard runtime agent and get some</font>

1244
00:47:59,039 --> 00:48:03,089
information<font color="#CCCCCC"> about the device</font><font color="#E5E5E5"> so again</font>

1245
00:48:00,989 --> 00:48:05,900
this is the kind<font color="#CCCCCC"> of API that</font><font color="#E5E5E5"> a zero</font>

1246
00:48:03,089 --> 00:48:09,299
trust agent would be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call</font><font color="#CCCCCC"> into</font>

1247
00:48:05,900 --> 00:48:10,829
<font color="#E5E5E5">if we look at the payload</font><font color="#CCCCCC"> return we've</font>

1248
00:48:09,299 --> 00:48:12,779
just made a call into<font color="#E5E5E5"> the API to get</font>

1249
00:48:10,829 --> 00:48:14,999
information from<font color="#E5E5E5"> the SM on this</font><font color="#CCCCCC"> machine</font>

1250
00:48:12,779 --> 00:48:16,650
about<font color="#E5E5E5"> the device security properties a</font>

1251
00:48:14,999 --> 00:48:18,779
couple of<font color="#E5E5E5"> things we</font><font color="#CCCCCC"> can see that</font><font color="#E5E5E5"> are</font>

1252
00:48:16,650 --> 00:48:19,410
<font color="#E5E5E5">cool here are we've</font><font color="#CCCCCC"> got code integrity</font>

1253
00:48:18,779 --> 00:48:21,569
enabled

1254
00:48:19,410 --> 00:48:25,828
we've got<font color="#CCCCCC"> VSM enabled we're running a</font>

1255
00:48:21,569 --> 00:48:27,749
TPM<font color="#E5E5E5"> we don't have a debugging port</font>

1256
00:48:25,829 --> 00:48:29,809
enabled<font color="#E5E5E5"> we have secure boot on the</font>

1257
00:48:27,749 --> 00:48:33,149
device<font color="#CCCCCC"> all of those critical properties</font>

1258
00:48:29,809 --> 00:48:35,670
now an attacker who wants to tamper<font color="#CCCCCC"> with</font>

1259
00:48:33,150 --> 00:48:38,789
ppl would first<font color="#CCCCCC"> probably need to load a</font>

1260
00:48:35,670 --> 00:48:41,339
driver<font color="#CCCCCC"> in this case we'll try to load a</font>

1261
00:48:38,789 --> 00:48:43,589
<font color="#CCCCCC">Stryker tool which is essentially a tool</font>

1262
00:48:41,339 --> 00:48:46,710
that loads the<font color="#CCCCCC"> CPUC driver and allows e</font>

1263
00:48:43,589 --> 00:48:50,910
process to be corrupted<font color="#CCCCCC"> our process is</font>

1264
00:48:46,710 --> 00:48:54,140
<font color="#CCCCCC">40508 we</font><font color="#E5E5E5"> tried to run</font><font color="#CCCCCC"> that but because</font>

1265
00:48:50,910 --> 00:48:57,328
have pre<font color="#CCCCCC"> breach protection through HV CI</font>

1266
00:48:54,140 --> 00:49:01,589
when we look at the log<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually</font>

1267
00:48:57,329 --> 00:49:07,289
see it just takes a second that the

1268
00:49:01,589 --> 00:49:09,750
driver load was actually blocked<font color="#E5E5E5"> keep</font>

1269
00:49:07,289 --> 00:49:11,670
that a second<font color="#CCCCCC"> I'll come back there</font><font color="#E5E5E5"> so</font>

1270
00:49:09,750 --> 00:49:13,200
the driver load was blocked<font color="#CCCCCC"> so we're</font>

1271
00:49:11,670 --> 00:49:14,940
forced to<font color="#E5E5E5"> think of another</font><font color="#CCCCCC"> mechanism</font>

1272
00:49:13,200 --> 00:49:18,359
because<font color="#E5E5E5"> of pre breach protection for HV</font>

1273
00:49:14,940 --> 00:49:21,299
CI<font color="#E5E5E5"> for tampering with this process so</font>

1274
00:49:18,359 --> 00:49:24,240
that's actually there's a relatively

1275
00:49:21,299 --> 00:49:30,809
<font color="#E5E5E5">straightforward path for that so we can</font>

1276
00:49:24,240 --> 00:49:32,578
modify the striker tool to just read<font color="#E5E5E5"> the</font>

1277
00:49:30,809 --> 00:49:34,710
location of the<font color="#CCCCCC"> processor memory and</font>

1278
00:49:32,579 --> 00:49:39,539
we'll use<font color="#CCCCCC"> an alternative mechanism for</font>

1279
00:49:34,710 --> 00:49:42,869
tampering it so we've<font color="#CCCCCC"> just read the</font>

1280
00:49:39,539 --> 00:49:45,420
location and here's an<font color="#E5E5E5"> address where our</font>

1281
00:49:42,869 --> 00:49:47,160
ppl bit lives in<font color="#E5E5E5"> memory if we remove</font>

1282
00:49:45,420 --> 00:49:50,220
this bit<font color="#CCCCCC"> we can now tamper with the</font>

1283
00:49:47,160 --> 00:49:53,839
agent<font color="#E5E5E5"> anchoring</font><font color="#CCCCCC"> trust and the device</font>

1284
00:49:50,220 --> 00:49:53,839
<font color="#CCCCCC">will be difficult to trust at</font><font color="#E5E5E5"> this point</font>

1285
00:50:01,760 --> 00:50:13,980
<font color="#CCCCCC">one thing I</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to show</font><font color="#E5E5E5"> you is</font><font color="#CCCCCC"> that the</font>

1286
00:50:06,089 --> 00:50:15,630
<font color="#E5E5E5">vise is clean now so all of our and</font>

1287
00:50:13,980 --> 00:50:18,289
measurements<font color="#E5E5E5"> and kernel memory are good</font>

1288
00:50:15,630 --> 00:50:23,420
everything is nice and<font color="#CCCCCC"> good to go</font>

1289
00:50:18,289 --> 00:50:25,770
so<font color="#CCCCCC"> we'll now use rope which is a</font>

1290
00:50:23,420 --> 00:50:28,349
recently released tool that allows you

1291
00:50:25,770 --> 00:50:30,809
to<font color="#E5E5E5"> tamper</font><font color="#CCCCCC"> with kernel memory</font><font color="#E5E5E5"> so using</font>

1292
00:50:28,349 --> 00:50:33,650
rope<font color="#E5E5E5"> will take that same</font><font color="#CCCCCC"> Cpl address or</font>

1293
00:50:30,809 --> 00:50:33,650
write a<font color="#E5E5E5"> zero</font>

1294
00:50:40,280 --> 00:50:49,020
we now moved<font color="#E5E5E5"> ppl you can see protections</font>

1295
00:50:46,890 --> 00:50:50,670
<font color="#CCCCCC">none there now we can actually</font><font color="#E5E5E5"> read and</font>

1296
00:50:49,020 --> 00:50:54,240
write memory<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can see all the modules</font>

1297
00:50:50,670 --> 00:50:55,590
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> we control this device</font><font color="#E5E5E5"> so in a</font>

1298
00:50:54,240 --> 00:50:58,500
software<font color="#CCCCCC"> anchor drill this is</font>

1299
00:50:55,590 --> 00:51:00,030
<font color="#E5E5E5">challenging but let's see how a system</font>

1300
00:50:58,500 --> 00:51:00,860
<font color="#E5E5E5">guard</font><font color="#CCCCCC"> runtime at the station helps with</font>

1301
00:51:00,030 --> 00:51:03,210
this

1302
00:51:00,860 --> 00:51:10,110
so<font color="#CCCCCC"> we'll rerun our</font><font color="#E5E5E5"> at the station</font>

1303
00:51:03,210 --> 00:51:12,930
<font color="#CCCCCC">components and now if we look at</font><font color="#E5E5E5"> the</font>

1304
00:51:10,110 --> 00:51:15,960
same assertions you can actually<font color="#CCCCCC"> see</font>

1305
00:51:12,930 --> 00:51:17,819
that from<font color="#E5E5E5"> hardware what we were</font><font color="#CCCCCC"> able to</font>

1306
00:51:15,960 --> 00:51:20,040
<font color="#E5E5E5">see that the agent was tampered with</font>

1307
00:51:17,820 --> 00:51:24,030
<font color="#E5E5E5">that</font><font color="#CCCCCC"> sig will now go up to</font><font color="#E5E5E5"> zero just</font>

1308
00:51:20,040 --> 00:51:27,960
<font color="#CCCCCC">cloud and prevent access so that's</font><font color="#E5E5E5"> a</font>

1309
00:51:24,030 --> 00:51:30,330
<font color="#E5E5E5">just one way in which we</font><font color="#CCCCCC"> are helping</font><font color="#E5E5E5"> to</font>

1310
00:51:27,960 --> 00:51:32,070
do<font color="#E5E5E5"> Hardware anchoring running out of</font>

1311
00:51:30,330 --> 00:51:34,340
<font color="#E5E5E5">time here but</font><font color="#CCCCCC"> I quickly wanted to point</font>

1312
00:51:32,070 --> 00:51:36,810
out<font color="#CCCCCC"> that other platforms have similar</font>

1313
00:51:34,340 --> 00:51:39,510
attribution<font color="#E5E5E5"> quality so iOS is a great</font>

1314
00:51:36,810 --> 00:51:42,330
<font color="#E5E5E5">example of a device</font><font color="#CCCCCC"> that has Hardware</font>

1315
00:51:39,510 --> 00:51:43,980
rooted<font color="#CCCCCC"> trusts</font><font color="#E5E5E5"> however at a station on</font>

1316
00:51:42,330 --> 00:51:46,200
the iOS<font color="#CCCCCC"> platform</font><font color="#E5E5E5"> is currently really</font>

1317
00:51:43,980 --> 00:51:48,420
challenging<font color="#E5E5E5"> you're forced</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> from</font>

1318
00:51:46,200 --> 00:51:51,060
a user application from the store which

1319
00:51:48,420 --> 00:51:53,190
<font color="#CCCCCC">is running</font><font color="#E5E5E5"> in a sandbox</font><font color="#CCCCCC"> and at</font><font color="#E5E5E5"> best what</font>

1320
00:51:51,060 --> 00:51:57,359
that generally looks like<font color="#E5E5E5"> is looking for</font>

1321
00:51:53,190 --> 00:51:59,250
file paths on the<font color="#E5E5E5"> device to determine if</font>

1322
00:51:57,359 --> 00:52:01,770
it's rooted or not and of course

1323
00:51:59,250 --> 00:52:04,320
<font color="#E5E5E5">attackers have a fairly simple mechanism</font>

1324
00:52:01,770 --> 00:52:06,720
of hooking out those calls using<font color="#E5E5E5"> code</font>

1325
00:52:04,320 --> 00:52:09,090
inject in fact I used<font color="#E5E5E5"> a couple of</font>

1326
00:52:06,720 --> 00:52:11,100
<font color="#E5E5E5">commonly available apps GL protect and</font>

1327
00:52:09,090 --> 00:52:13,410
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> really light that would defeated</font>

1328
00:52:11,100 --> 00:52:15,450
most of<font color="#E5E5E5"> the zero trust agents I had on</font>

1329
00:52:13,410 --> 00:52:17,460
that<font color="#E5E5E5"> rooted iPhone and so that's</font>

1330
00:52:15,450 --> 00:52:19,560
<font color="#E5E5E5">incredibly challenging just looking at</font>

1331
00:52:17,460 --> 00:52:23,100
the code<font color="#CCCCCC"> here we can see those hooks are</font>

1332
00:52:19,560 --> 00:52:24,930
happening so just about out of time<font color="#E5E5E5"> here</font>

1333
00:52:23,100 --> 00:52:30,200
<font color="#CCCCCC">so I</font><font color="#E5E5E5"> wanted to kind of summarize the</font>

1334
00:52:24,930 --> 00:52:31,919
learning so does it<font color="#CCCCCC"> work now</font>

1335
00:52:30,200 --> 00:52:34,259
<font color="#CCCCCC">unfortunately</font><font color="#E5E5E5"> I didn't get to the</font>

1336
00:52:31,920 --> 00:52:37,080
identity section but the reality is<font color="#E5E5E5"> zero</font>

1337
00:52:34,260 --> 00:52:38,430
<font color="#CCCCCC">Trust is incredibly promising</font><font color="#E5E5E5"> and I</font>

1338
00:52:37,080 --> 00:52:40,650
believe<font color="#CCCCCC"> that the mandatory</font><font color="#E5E5E5"> access</font>

1339
00:52:38,430 --> 00:52:41,790
control<font color="#E5E5E5"> mechanism for the network would</font>

1340
00:52:40,650 --> 00:52:44,220
<font color="#CCCCCC">be very</font><font color="#E5E5E5"> useful</font>

1341
00:52:41,790 --> 00:52:45,600
the major challenge today is<font color="#E5E5E5"> out a lot</font>

1342
00:52:44,220 --> 00:52:47,939
of the ingredients<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> on the table</font>

1343
00:52:45,600 --> 00:52:49,589
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we haven't put together a</font><font color="#CCCCCC"> recipe</font>

1344
00:52:47,940 --> 00:52:51,750
that<font color="#E5E5E5"> would expose those to zero trust</font>

1345
00:52:49,590 --> 00:52:52,740
vendors in a way that they would capably

1346
00:52:51,750 --> 00:52:57,150
impact the<font color="#CCCCCC"> TAC</font>

1347
00:52:52,740 --> 00:52:58,200
on Android iOS or<font color="#E5E5E5"> Windows devices</font><font color="#CCCCCC"> we're</font>

1348
00:52:57,150 --> 00:53:00,600
making a lot of<font color="#E5E5E5"> steps especially</font>

1349
00:52:58,200 --> 00:53:02,520
identity space<font color="#E5E5E5"> by extending out</font><font color="#CCCCCC"> u2f</font>

1350
00:53:00,600 --> 00:53:04,100
tokens and<font color="#E5E5E5"> the web auth and</font><font color="#CCCCCC"> SPECT</font><font color="#E5E5E5"> that</font>

1351
00:53:02,520 --> 00:53:07,440
would allow you<font color="#E5E5E5"> to have more hardware</font>

1352
00:53:04,100 --> 00:53:10,049
<font color="#E5E5E5">our stronger integrity and user identity</font>

1353
00:53:07,440 --> 00:53:12,300
along<font color="#E5E5E5"> with a hardware</font><font color="#CCCCCC"> trust</font><font color="#E5E5E5"> well</font>

1354
00:53:10,050 --> 00:53:14,250
currently most of<font color="#E5E5E5"> solutions today make</font>

1355
00:53:12,300 --> 00:53:16,230
use<font color="#CCCCCC"> of very simple software</font><font color="#E5E5E5"> mechanisms</font>

1356
00:53:14,250 --> 00:53:19,440
<font color="#E5E5E5">like I showed today that are</font><font color="#CCCCCC"> trivial to</font>

1357
00:53:16,230 --> 00:53:21,510
tamper<font color="#CCCCCC"> with</font><font color="#E5E5E5"> so in reality moving forward</font>

1358
00:53:19,440 --> 00:53:23,430
<font color="#CCCCCC">as platforms increase and there's more</font>

1359
00:53:21,510 --> 00:53:25,530
extensibility<font color="#E5E5E5"> and the ability to test to</font>

1360
00:53:23,430 --> 00:53:28,259
those platforms<font color="#CCCCCC"> we will see the ability</font>

1361
00:53:25,530 --> 00:53:30,030
<font color="#CCCCCC">to do meaningful device</font><font color="#E5E5E5"> trust skyrocket</font>

1362
00:53:28,260 --> 00:53:32,910
<font color="#E5E5E5">and in</font><font color="#CCCCCC"> combination</font><font color="#E5E5E5"> with identity</font>

1363
00:53:30,030 --> 00:53:35,100
<font color="#E5E5E5">solutions</font><font color="#CCCCCC"> BG sweet</font><font color="#E5E5E5"> RA ad and</font>

1364
00:53:32,910 --> 00:53:36,720
multi-factor authentication<font color="#E5E5E5"> with the</font>

1365
00:53:35,100 --> 00:53:38,910
move to the<font color="#CCCCCC"> cloud I think there's a</font>

1366
00:53:36,720 --> 00:53:41,419
pretty<font color="#E5E5E5"> bright future for ztn but it's</font>

1367
00:53:38,910 --> 00:53:41,420
not there now

