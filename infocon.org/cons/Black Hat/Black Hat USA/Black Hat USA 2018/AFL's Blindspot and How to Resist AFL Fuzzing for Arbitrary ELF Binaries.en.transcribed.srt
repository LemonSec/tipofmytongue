1
00:00:00,030 --> 00:00:06,270
and<font color="#E5E5E5"> will come to</font><font color="#CCCCCC"> my talk I'm Ken and</font>

2
00:00:02,870 --> 00:00:08,490
here<font color="#E5E5E5"> I'm give a talk about</font><font color="#CCCCCC"> AFL's blind</font>

3
00:00:06,270 --> 00:00:12,210
<font color="#E5E5E5">spot our small limitation about AFL and</font>

4
00:00:08,490 --> 00:00:14,730
<font color="#E5E5E5">how we can use it to resist AFL</font><font color="#CCCCCC"> passing</font>

5
00:00:12,210 --> 00:00:17,100
against arbitrary boundaries<font color="#E5E5E5"> first a</font>

6
00:00:14,730 --> 00:00:19,770
brief<font color="#E5E5E5"> introduction about</font><font color="#CCCCCC"> myself and</font>

7
00:00:17,100 --> 00:00:22,439
professor<font color="#E5E5E5"> from University Georgia in the</font>

8
00:00:19,770 --> 00:00:26,400
past<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> been doing</font><font color="#E5E5E5"> a bunch of CTF</font>

9
00:00:22,439 --> 00:00:28,349
work<font color="#E5E5E5"> helped organize a few CTF team the</font>

10
00:00:26,400 --> 00:00:31,619
relatively<font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> one including Zack</font>

11
00:00:28,349 --> 00:00:34,559
darks<font color="#E5E5E5"> and I'm the founding mentor for</font>

12
00:00:31,619 --> 00:00:37,950
the<font color="#CCCCCC"> Team</font><font color="#E5E5E5"> Blue Lotus</font><font color="#CCCCCC"> I also have found</font><font color="#E5E5E5"> a</font>

13
00:00:34,559 --> 00:00:40,709
team called<font color="#E5E5E5"> dissect I'm also a player of</font>

14
00:00:37,950 --> 00:00:44,610
their dissect was one of the finalists

15
00:00:40,710 --> 00:00:47,430
<font color="#E5E5E5">in the 2016 top a</font><font color="#CCCCCC"> cyber franchise cyber</font>

16
00:00:44,610 --> 00:00:51,780
<font color="#CCCCCC">Grand Challenge</font><font color="#E5E5E5"> recently I'm on</font>

17
00:00:47,430 --> 00:00:57,120
sabbatical leave<font color="#E5E5E5"> currently I am the team</font>

18
00:00:51,780 --> 00:01:01,920
lead<font color="#E5E5E5"> for the 360 cyber immunity</font><font color="#CCCCCC"> so come</font>

19
00:00:57,120 --> 00:01:04,319
back<font color="#CCCCCC"> to the talk</font><font color="#E5E5E5"> and when I explain to</font>

20
00:01:01,920 --> 00:01:07,380
other people<font color="#CCCCCC"> about afl's limitation and</font>

21
00:01:04,319 --> 00:01:09,750
we can use it to<font color="#E5E5E5"> assist a up of passing</font>

22
00:01:07,380 --> 00:01:11,369
group and they asked me<font color="#CCCCCC"> a question</font><font color="#E5E5E5"> the</font>

23
00:01:09,750 --> 00:01:14,040
<font color="#E5E5E5">first question they</font><font color="#CCCCCC"> asked</font><font color="#E5E5E5"> us why do you</font>

24
00:01:11,369 --> 00:01:16,290
want<font color="#E5E5E5"> to resist AFL fussing so I have</font><font color="#CCCCCC"> to</font>

25
00:01:14,040 --> 00:01:18,090
there are many answer to this but I'm

26
00:01:16,290 --> 00:01:20,369
<font color="#E5E5E5">gonna use</font><font color="#CCCCCC"> one of them relate to my own</font>

27
00:01:18,090 --> 00:01:24,240
experience<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just mentioned to</font><font color="#CCCCCC"> you that</font>

28
00:01:20,369 --> 00:01:26,640
I<font color="#CCCCCC"> am a</font><font color="#E5E5E5"> college professor</font><font color="#CCCCCC"> I teach</font>

29
00:01:24,240 --> 00:01:30,449
<font color="#CCCCCC">cybersecurity</font><font color="#E5E5E5"> class and so when I teach</font>

30
00:01:26,640 --> 00:01:33,030
<font color="#E5E5E5">software security class I open a sign</font>

31
00:01:30,450 --> 00:01:35,369
like buggy<font color="#CCCCCC"> program</font><font color="#E5E5E5"> to my students and I</font>

32
00:01:33,030 --> 00:01:37,280
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> them to reverse try to reverse</font>

33
00:01:35,369 --> 00:01:40,170
<font color="#E5E5E5">engineer it look at the binary and</font>

34
00:01:37,280 --> 00:01:41,880
certainly during<font color="#E5E5E5"> that time you relate</font><font color="#CCCCCC"> to</font>

35
00:01:40,170 --> 00:01:44,009
student take a while to<font color="#E5E5E5"> do it so I</font><font color="#CCCCCC"> can</font>

36
00:01:41,880 --> 00:01:45,329
<font color="#E5E5E5">rest</font><font color="#CCCCCC"> or maybe you know some you know</font>

37
00:01:44,009 --> 00:01:49,320
during<font color="#E5E5E5"> that time I can write a</font>

38
00:01:45,329 --> 00:01:52,199
submission<font color="#E5E5E5"> to blackhat</font><font color="#CCCCCC"> so here's the</font>

39
00:01:49,320 --> 00:01:54,750
example<font color="#CCCCCC"> I use in class like this is</font>

40
00:01:52,200 --> 00:01:58,380
simple function<font color="#CCCCCC"> it takes the input and</font>

41
00:01:54,750 --> 00:02:00,210
if you have a<font color="#E5E5E5"> special input string like</font>

42
00:01:58,380 --> 00:02:02,219
magic<font color="#E5E5E5"> and the program will crash</font>

43
00:02:00,210 --> 00:02:04,649
<font color="#E5E5E5">otherwise it will ask the student to try</font>

44
00:02:02,219 --> 00:02:07,079
<font color="#CCCCCC">a different input again</font><font color="#E5E5E5"> now for binary</font>

45
00:02:04,649 --> 00:02:09,209
like this if I<font color="#CCCCCC"> compile it I strip to</font><font color="#E5E5E5"> the</font>

46
00:02:07,079 --> 00:02:11,099
<font color="#E5E5E5">symbol like here's a binary</font><font color="#CCCCCC"> to my</font>

47
00:02:09,209 --> 00:02:12,810
student it actually<font color="#CCCCCC"> takes them</font><font color="#E5E5E5"> a while</font>

48
00:02:11,099 --> 00:02:13,649
<font color="#CCCCCC">to finish</font><font color="#E5E5E5"> for people here in the</font>

49
00:02:12,810 --> 00:02:16,110
<font color="#E5E5E5">audience I expect</font>

50
00:02:13,650 --> 00:02:18,030
<font color="#E5E5E5">probably finish in five minutes</font><font color="#CCCCCC"> but my</font>

51
00:02:16,110 --> 00:02:19,920
student<font color="#CCCCCC"> usually take like you know</font><font color="#E5E5E5"> 45</font>

52
00:02:18,030 --> 00:02:23,159
minutes whole class time or maybe hours

53
00:02:19,920 --> 00:02:25,530
okay so I call those are you know<font color="#CCCCCC"> the</font>

54
00:02:23,159 --> 00:02:27,780
old peaceful class time now of<font color="#E5E5E5"> course</font>

55
00:02:25,530 --> 00:02:30,000
you<font color="#CCCCCC"> know what happened like</font><font color="#E5E5E5"> recently</font>

56
00:02:27,780 --> 00:02:32,220
<font color="#E5E5E5">when I gave this challenge to my student</font>

57
00:02:30,000 --> 00:02:34,349
they just simply run<font color="#CCCCCC"> AFL and they</font><font color="#E5E5E5"> are</font>

58
00:02:32,220 --> 00:02:36,180
<font color="#CCCCCC">feel like for that particular example</font><font color="#E5E5E5"> it</font>

59
00:02:34,349 --> 00:02:38,010
takes like<font color="#E5E5E5"> two or three minutes to find</font>

60
00:02:36,180 --> 00:02:40,470
out the passes and certainly one of them

61
00:02:38,010 --> 00:02:42,720
lead to<font color="#E5E5E5"> the crash so that's what I call</font>

62
00:02:40,470 --> 00:02:45,510
the peace peace disrupted my peaceful

63
00:02:42,720 --> 00:02:45,900
<font color="#CCCCCC">time</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> I can rest no longer</font>

64
00:02:45,510 --> 00:02:48,690
there

65
00:02:45,900 --> 00:02:51,000
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so so that's why that's one of the</font>

66
00:02:48,690 --> 00:02:54,750
reason I tell<font color="#E5E5E5"> you</font><font color="#CCCCCC"> why I'm doing this</font>

67
00:02:51,000 --> 00:02:56,549
I know prepare<font color="#E5E5E5"> this software</font><font color="#CCCCCC"> to like cut</font>

68
00:02:54,750 --> 00:02:59,400
I call it<font color="#E5E5E5"> vfl/afl</font>

69
00:02:56,549 --> 00:03:02,519
and what it does is<font color="#E5E5E5"> they try to change</font>

70
00:02:59,400 --> 00:03:05,340
the binary so that<font color="#E5E5E5"> AFL when</font><font color="#CCCCCC"> it's fast it</font>

71
00:03:02,519 --> 00:03:07,230
takes much<font color="#E5E5E5"> much longer</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so then you</font>

72
00:03:05,340 --> 00:03:09,540
know<font color="#E5E5E5"> I can force the student to look at</font>

73
00:03:07,230 --> 00:03:11,909
the binary<font color="#E5E5E5"> rather than just render FL I</font>

74
00:03:09,540 --> 00:03:13,470
would rather them to open a<font color="#CCCCCC"> binary you</font>

75
00:03:11,909 --> 00:03:15,358
know or maybe even<font color="#CCCCCC"> just either this</font>

76
00:03:13,470 --> 00:03:17,629
assembly that's<font color="#CCCCCC"> steamed</font><font color="#E5E5E5"> I want them to</font>

77
00:03:15,359 --> 00:03:20,040
do<font color="#CCCCCC"> that rather than</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> run NFL</font>

78
00:03:17,629 --> 00:03:23,099
certainly there are other<font color="#CCCCCC"> reason we do</font>

79
00:03:20,040 --> 00:03:25,858
this<font color="#E5E5E5"> one of the reason I also mentioned</font>

80
00:03:23,099 --> 00:03:29,069
to<font color="#E5E5E5"> others is that you know we want to</font>

81
00:03:25,859 --> 00:03:31,169
really find<font color="#E5E5E5"> challenging program for AFL</font>

82
00:03:29,069 --> 00:03:33,328
<font color="#E5E5E5">try to see its limitation and we want to</font>

83
00:03:31,169 --> 00:03:35,340
improve<font color="#E5E5E5"> you know which one to get better</font>

84
00:03:33,329 --> 00:03:37,019
<font color="#CCCCCC">father's now certainly there</font><font color="#E5E5E5"> are evil</font>

85
00:03:35,340 --> 00:03:38,609
<font color="#E5E5E5">minds that you really just want to hide</font>

86
00:03:37,019 --> 00:03:41,879
the<font color="#CCCCCC"> bugs that's also</font><font color="#E5E5E5"> another possibility</font>

87
00:03:38,609 --> 00:03:44,040
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> imagine that</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> the rest of</font>

88
00:03:41,879 --> 00:03:47,069
talk I need<font color="#CCCCCC"> to first explain</font><font color="#E5E5E5"> the blind</font>

89
00:03:44,040 --> 00:03:49,500
spot of<font color="#E5E5E5"> AFL AFL small limitation so</font>

90
00:03:47,069 --> 00:03:52,978
let's give a really quick<font color="#CCCCCC"> overview about</font>

91
00:03:49,500 --> 00:03:57,120
how AFL<font color="#CCCCCC"> fuzzing words</font><font color="#E5E5E5"> so I'm using this</font>

92
00:03:52,979 --> 00:04:01,500
<font color="#CCCCCC">five steps to</font><font color="#E5E5E5"> summarize the high level</font>

93
00:03:57,120 --> 00:04:04,829
process<font color="#E5E5E5"> of AFL fuzzing so first</font><font color="#CCCCCC"> AFL has</font>

94
00:04:01,500 --> 00:04:06,510
to start with<font color="#E5E5E5"> some seed input once you</font>

95
00:04:04,829 --> 00:04:09,449
have seed input the next step<font color="#CCCCCC"> Airport</font>

96
00:04:06,510 --> 00:04:13,198
does is take<font color="#CCCCCC"> CD input it modify some of</font>

97
00:04:09,449 --> 00:04:16,109
<font color="#E5E5E5">the you know bytes and you can you can</font>

98
00:04:13,199 --> 00:04:18,930
<font color="#CCCCCC">call this mutation</font><font color="#E5E5E5"> and FL you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> take</font>

99
00:04:16,108 --> 00:04:22,620
a seed and<font color="#E5E5E5"> then mutate to</font><font color="#CCCCCC"> a new mutant</font>

100
00:04:18,930 --> 00:04:25,750
<font color="#E5E5E5">or mutated input and after that</font><font color="#CCCCCC"> F I</font><font color="#E5E5E5"> will</font>

101
00:04:22,620 --> 00:04:29,050
run this<font color="#CCCCCC"> you know target program</font><font color="#E5E5E5"> with</font>

102
00:04:25,750 --> 00:04:31,300
this new input and track the code

103
00:04:29,050 --> 00:04:33,310
<font color="#E5E5E5">coverage a detail called courage I</font><font color="#CCCCCC"> will</font>

104
00:04:31,300 --> 00:04:35,770
cover<font color="#E5E5E5"> I will talk about in the</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> few</font>

105
00:04:33,310 --> 00:04:40,270
slides<font color="#CCCCCC"> what matters here at a high level</font>

106
00:04:35,770 --> 00:04:42,039
is that if<font color="#CCCCCC"> FL</font><font color="#E5E5E5"> Brenda's new input and if</font>

107
00:04:40,270 --> 00:04:44,979
<font color="#CCCCCC">you</font><font color="#E5E5E5"> therefore believe the courage</font>

108
00:04:42,040 --> 00:04:48,130
increased then<font color="#CCCCCC"> af I will take this new</font>

109
00:04:44,980 --> 00:04:51,040
<font color="#E5E5E5">mutated input and put it into the place</font>

110
00:04:48,130 --> 00:04:53,530
you know<font color="#CCCCCC"> FL Q which</font><font color="#E5E5E5"> is a place that will</font>

111
00:04:51,040 --> 00:04:55,990
keep<font color="#E5E5E5"> all the seed there so you basically</font>

112
00:04:53,530 --> 00:04:58,390
have a new seed if there's no coverage

113
00:04:55,990 --> 00:05:00,460
increase then<font color="#E5E5E5"> AFI will discard this and</font>

114
00:04:58,390 --> 00:05:01,840
then the whole<font color="#E5E5E5"> process will start from</font>

115
00:05:00,460 --> 00:05:04,030
the step<font color="#CCCCCC"> two</font><font color="#E5E5E5"> okay</font>

116
00:05:01,840 --> 00:05:07,000
so that's the high level<font color="#CCCCCC"> process now the</font>

117
00:05:04,030 --> 00:05:11,020
important<font color="#E5E5E5"> part of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and if I use a</font>

118
00:05:07,000 --> 00:05:15,190
<font color="#E5E5E5">really compact</font><font color="#CCCCCC"> a small data structure of</font>

119
00:05:11,020 --> 00:05:17,560
<font color="#E5E5E5">the share man part like</font><font color="#CCCCCC"> p4 64 K to keep</font>

120
00:05:15,190 --> 00:05:21,310
track all the edge coverage and this<font color="#CCCCCC"> is</font>

121
00:05:17,560 --> 00:05:23,640
<font color="#E5E5E5">one</font><font color="#CCCCCC"> of the sort of</font><font color="#E5E5E5"> the main contribution</font>

122
00:05:21,310 --> 00:05:26,590
<font color="#E5E5E5">like ever used to get it run fast and</font>

123
00:05:23,640 --> 00:05:28,150
efficient<font color="#CCCCCC"> and because of this</font><font color="#E5E5E5"> fo</font>

124
00:05:26,590 --> 00:05:30,130
actually it's very<font color="#CCCCCC"> successful</font><font color="#E5E5E5"> I don't</font>

125
00:05:28,150 --> 00:05:31,570
need to really<font color="#CCCCCC"> go into the detail</font><font color="#E5E5E5"> about</font>

126
00:05:30,130 --> 00:05:33,580
how<font color="#CCCCCC"> successful they are but</font><font color="#E5E5E5"> you can go</font>

127
00:05:31,570 --> 00:05:36,640
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> website of FL and you</font><font color="#E5E5E5"> can find</font>

128
00:05:33,580 --> 00:05:38,830
<font color="#E5E5E5">lots of bugs you know</font><font color="#CCCCCC"> fine</font><font color="#E5E5E5"> by FL you</font>

129
00:05:36,640 --> 00:05:41,289
<font color="#E5E5E5">know</font><font color="#CCCCCC"> by lots of other people and one</font>

130
00:05:38,830 --> 00:05:46,030
thing I do can<font color="#E5E5E5"> I can definitely add on</font>

131
00:05:41,290 --> 00:05:48,490
to say that<font color="#E5E5E5"> in the 2016 da da cyber</font>

132
00:05:46,030 --> 00:05:52,179
<font color="#CCCCCC">Grand Challenge the seven seven</font>

133
00:05:48,490 --> 00:05:54,070
finalists<font color="#E5E5E5"> of them almost use FL as part</font>

134
00:05:52,180 --> 00:05:56,520
of their solution<font color="#CCCCCC"> ok so that's how</font>

135
00:05:54,070 --> 00:06:00,040
successful<font color="#E5E5E5"> dar but let's look at the</font>

136
00:05:56,520 --> 00:06:02,710
<font color="#E5E5E5">detail the coverage information</font><font color="#CCCCCC"> how they</font>

137
00:06:00,040 --> 00:06:05,200
<font color="#E5E5E5">track I mention that if I use a small</font>

138
00:06:02,710 --> 00:06:08,020
compact in map to track the coverage the

139
00:06:05,200 --> 00:06:10,650
way FL does this<font color="#E5E5E5"> is if I use code</font>

140
00:06:08,020 --> 00:06:14,770
instrumentation<font color="#E5E5E5"> if you have smores code</font>

141
00:06:10,650 --> 00:06:17,979
then FL if you compile code with AF<font color="#E5E5E5"> our</font>

142
00:06:14,770 --> 00:06:20,349
GCC whatever does is to put a piece of

143
00:06:17,979 --> 00:06:22,090
code at each of the code block<font color="#E5E5E5"> what is</font>

144
00:06:20,350 --> 00:06:24,100
called does in general<font color="#CCCCCC"> you can consider</font>

145
00:06:22,090 --> 00:06:26,500
the following it<font color="#CCCCCC"> assign a random</font><font color="#E5E5E5"> number</font>

146
00:06:24,100 --> 00:06:28,930
to<font color="#CCCCCC"> each other code block and</font><font color="#E5E5E5"> every time</font>

147
00:06:26,500 --> 00:06:30,940
<font color="#E5E5E5">you your Kodak you can go from one block</font>

148
00:06:28,930 --> 00:06:33,550
to the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> you just basically take</font>

149
00:06:30,940 --> 00:06:37,020
this two codes random number you do X or

150
00:06:33,550 --> 00:06:39,900
and<font color="#E5E5E5"> that you use that at the index to</font>

151
00:06:37,020 --> 00:06:42,900
to index your the small pin map then<font color="#CCCCCC"> you</font>

152
00:06:39,900 --> 00:06:44,460
mark there<font color="#E5E5E5"> that's how you track the cold</font>

153
00:06:42,900 --> 00:06:47,789
<font color="#CCCCCC">courage when you have source code now</font>

154
00:06:44,460 --> 00:06:49,710
<font color="#CCCCCC">for this talk we're interest</font><font color="#E5E5E5"> to the case</font>

155
00:06:47,789 --> 00:06:52,560
<font color="#CCCCCC">that you only have binary</font><font color="#E5E5E5"> so it's not</font>

156
00:06:49,710 --> 00:06:54,508
<font color="#E5E5E5">that easy</font><font color="#CCCCCC"> to modify</font><font color="#E5E5E5"> the code to just you</font>

157
00:06:52,560 --> 00:06:56,580
know<font color="#E5E5E5"> add this instrumentation so what</font>

158
00:06:54,509 --> 00:06:59,580
ever does<font color="#CCCCCC"> a multiple way</font><font color="#E5E5E5"> but the</font>

159
00:06:56,580 --> 00:07:03,060
dominant<font color="#E5E5E5"> ways using FL</font><font color="#CCCCCC"> QEMU and then</font>

160
00:06:59,580 --> 00:07:05,909
modify<font color="#CCCCCC"> QEMU so every time when QEMU</font><font color="#E5E5E5"> hits</font>

161
00:07:03,060 --> 00:07:07,710
<font color="#E5E5E5">a new code block instead of using a</font>

162
00:07:05,909 --> 00:07:09,509
random number<font color="#CCCCCC"> because you can now modify</font>

163
00:07:07,710 --> 00:07:11,909
<font color="#CCCCCC">easily modify the code instead</font><font color="#E5E5E5"> of using</font>

164
00:07:09,509 --> 00:07:14,639
random number<font color="#E5E5E5"> you're actually</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> the</font>

165
00:07:11,909 --> 00:07:17,909
code<font color="#CCCCCC"> address the current</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> add block</font>

166
00:07:14,639 --> 00:07:20,550
address as the seed to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to to do this</font>

167
00:07:17,909 --> 00:07:24,599
<font color="#CCCCCC">much okay</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> i show the the code there</font>

168
00:07:20,550 --> 00:07:27,240
this is a simple harsh<font color="#E5E5E5"> they use now to</font>

169
00:07:24,599 --> 00:07:30,990
illustrate<font color="#E5E5E5"> this example in a little</font>

170
00:07:27,240 --> 00:07:33,330
detail<font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to use this control</font>

171
00:07:30,990 --> 00:07:36,180
<font color="#E5E5E5">flow graph from the program called</font><font color="#CCCCCC"> read</font>

172
00:07:33,330 --> 00:07:37,889
out and<font color="#E5E5E5"> i</font><font color="#CCCCCC"> actually show a partial one</font><font color="#E5E5E5"> in</font>

173
00:07:36,180 --> 00:07:39,690
the middle<font color="#E5E5E5"> of this picture now let's</font>

174
00:07:37,889 --> 00:07:42,569
assume you we have a test case called

175
00:07:39,690 --> 00:07:44,909
test case<font color="#CCCCCC"> one and we're running race AFL</font>

176
00:07:42,569 --> 00:07:47,099
and<font color="#CCCCCC"> if suppose the execution for this</font>

177
00:07:44,909 --> 00:07:50,099
test case one goes<font color="#E5E5E5"> through this yellow</font>

178
00:07:47,099 --> 00:07:53,880
<font color="#CCCCCC">line and in this partial CFG they touch</font>

179
00:07:50,099 --> 00:07:57,330
like three basic block<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and FL</font>

180
00:07:53,880 --> 00:08:00,509
captures the edge coverage<font color="#CCCCCC"> so</font><font color="#E5E5E5"> between</font>

181
00:07:57,330 --> 00:08:02,880
<font color="#E5E5E5">each pair of the block FL using the</font>

182
00:08:00,509 --> 00:08:05,610
early<font color="#E5E5E5"> hot air what am i mentioned it</font>

183
00:08:02,880 --> 00:08:08,400
<font color="#E5E5E5">generate a harsh and then index</font><font color="#CCCCCC"> of speed</font>

184
00:08:05,610 --> 00:08:10,500
map if<font color="#E5E5E5"> you in this particular case in</font>

185
00:08:08,400 --> 00:08:13,080
<font color="#E5E5E5">this small picture we have another block</font>

186
00:08:10,500 --> 00:08:15,419
<font color="#CCCCCC">being covered</font><font color="#E5E5E5"> so the second edge also we</font>

187
00:08:13,080 --> 00:08:18,000
do a<font color="#CCCCCC"> harsh we mark the corresponding</font>

188
00:08:15,419 --> 00:08:20,698
bits in the bitmap now assuming

189
00:08:18,000 --> 00:08:23,729
initially you have<font color="#CCCCCC"> a mature</font><font color="#E5E5E5"> bitmap now</font>

190
00:08:20,699 --> 00:08:26,120
you<font color="#E5E5E5"> run this you show that to place be</font>

191
00:08:23,729 --> 00:08:29,729
marked then you<font color="#CCCCCC"> know that</font><font color="#E5E5E5"> this test case</font>

192
00:08:26,120 --> 00:08:33,719
have new coverage<font color="#CCCCCC"> as a result</font><font color="#E5E5E5"> you want</font>

193
00:08:29,729 --> 00:08:36,328
to add this test case<font color="#E5E5E5"> one to your</font><font color="#CCCCCC"> FLQ at</font>

194
00:08:33,719 --> 00:08:38,579
your<font color="#E5E5E5"> seat for future mutation okay so we</font>

195
00:08:36,328 --> 00:08:40,468
<font color="#CCCCCC">put this into</font><font color="#E5E5E5"> cue now let's say you get</font>

196
00:08:38,578 --> 00:08:44,370
another test case called test case in

197
00:08:40,469 --> 00:08:45,600
<font color="#E5E5E5">okay now you ran this code you know on</font>

198
00:08:44,370 --> 00:08:47,880
the picture we know<font color="#E5E5E5"> it's goes to a</font>

199
00:08:45,600 --> 00:08:50,590
<font color="#E5E5E5">different path and if you look at the</font>

200
00:08:47,880 --> 00:08:53,110
first<font color="#E5E5E5"> two block if we do the hash and</font>

201
00:08:50,590 --> 00:08:55,840
go to the bitmap<font color="#CCCCCC"> if you hit a</font><font color="#E5E5E5"> place that</font>

202
00:08:53,110 --> 00:08:58,450
has no it has you know previously<font color="#CCCCCC"> now</font>

203
00:08:55,840 --> 00:09:00,610
<font color="#E5E5E5">been marked then you know</font><font color="#CCCCCC"> you find some</font>

204
00:08:58,450 --> 00:09:05,020
new<font color="#E5E5E5"> courage again you know conceptually</font>

205
00:09:00,610 --> 00:09:07,570
<font color="#CCCCCC">you know this is a test case that</font><font color="#E5E5E5"> find a</font>

206
00:09:05,020 --> 00:09:10,720
new path so<font color="#CCCCCC"> FL consider this is</font>

207
00:09:07,570 --> 00:09:12,970
something worse to<font color="#E5E5E5"> be keep mutating so</font>

208
00:09:10,720 --> 00:09:14,860
<font color="#CCCCCC">we'll save this to the</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> or to</font><font color="#E5E5E5"> okay</font>

209
00:09:12,970 --> 00:09:17,920
so test case<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> put into the queue</font>

210
00:09:14,860 --> 00:09:20,230
<font color="#E5E5E5">now let's look at the third</font><font color="#CCCCCC"> case this</font>

211
00:09:17,920 --> 00:09:22,569
case we have suppose we have a test case

212
00:09:20,230 --> 00:09:24,220
called test case X and we<font color="#CCCCCC"> have a</font>

213
00:09:22,570 --> 00:09:27,100
execution that goes through the blue

214
00:09:24,220 --> 00:09:29,920
line<font color="#E5E5E5"> okay and</font><font color="#CCCCCC"> this is on this picture I</font>

215
00:09:27,100 --> 00:09:32,740
marked<font color="#CCCCCC"> all the blocks that being covered</font>

216
00:09:29,920 --> 00:09:35,829
in yellow and the blue line<font color="#E5E5E5"> actually</font>

217
00:09:32,740 --> 00:09:39,460
<font color="#CCCCCC">touched to block that</font><font color="#E5E5E5"> not being used by</font>

218
00:09:35,830 --> 00:09:43,690
the previous<font color="#CCCCCC"> test cases but what if the</font>

219
00:09:39,460 --> 00:09:46,660
<font color="#CCCCCC">heart of this to address that end up</font>

220
00:09:43,690 --> 00:09:48,640
index bits that are already been<font color="#E5E5E5"> marked</font>

221
00:09:46,660 --> 00:09:52,420
by previous<font color="#CCCCCC"> you know because a harsh</font>

222
00:09:48,640 --> 00:09:56,520
conflict<font color="#E5E5E5"> as a result in this</font><font color="#CCCCCC"> case this</font>

223
00:09:52,420 --> 00:09:59,290
test case<font color="#E5E5E5"> X even is cover new passes</font>

224
00:09:56,520 --> 00:10:03,280
it's now going<font color="#E5E5E5"> to be taken so this is</font>

225
00:09:59,290 --> 00:10:06,219
what we call a house blind spot<font color="#E5E5E5"> now the</font>

226
00:10:03,280 --> 00:10:08,110
developer of air FL knows that the

227
00:10:06,220 --> 00:10:10,060
bitmap<font color="#E5E5E5"> come harsh conflict there's a</font>

228
00:10:08,110 --> 00:10:12,730
<font color="#E5E5E5">problem so they have recommendation to</font>

229
00:10:10,060 --> 00:10:15,660
say if you ran<font color="#CCCCCC"> airfare</font><font color="#E5E5E5"> over a program</font>

230
00:10:12,730 --> 00:10:18,580
<font color="#E5E5E5">you should watch for this you know</font>

231
00:10:15,660 --> 00:10:21,339
report called<font color="#E5E5E5"> map density in for on the</font>

232
00:10:18,580 --> 00:10:22,870
screen and it<font color="#CCCCCC"> is more than let's say</font>

233
00:10:21,340 --> 00:10:24,640
<font color="#CCCCCC">twenty percent you</font><font color="#E5E5E5"> probably should think</font>

234
00:10:22,870 --> 00:10:27,220
<font color="#CCCCCC">about something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> either</font><font color="#E5E5E5"> make a</font>

235
00:10:24,640 --> 00:10:29,830
<font color="#E5E5E5">larger bitmap or maybe only you know</font>

236
00:10:27,220 --> 00:10:32,110
fossa<font color="#E5E5E5"> part of the program okay now what</font>

237
00:10:29,830 --> 00:10:34,930
we find<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it turns</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> even</font>

238
00:10:32,110 --> 00:10:36,610
for small program like you read<font color="#CCCCCC"> else we</font>

239
00:10:34,930 --> 00:10:38,589
find<font color="#E5E5E5"> that the hot country actually</font>

240
00:10:36,610 --> 00:10:41,560
<font color="#CCCCCC">happened much</font><font color="#E5E5E5"> more often</font><font color="#CCCCCC"> so what</font>

241
00:10:38,590 --> 00:10:43,240
happened is<font color="#E5E5E5"> during our early work on the</font>

242
00:10:41,560 --> 00:10:46,119
cyber Grand<font color="#CCCCCC"> Challenges</font><font color="#E5E5E5"> and then also the</font>

243
00:10:43,240 --> 00:10:49,360
later work we try to combine<font color="#E5E5E5"> like</font>

244
00:10:46,120 --> 00:10:52,750
<font color="#CCCCCC">Somalia execution engine which FL we try</font>

245
00:10:49,360 --> 00:10:54,820
to use<font color="#E5E5E5"> other master to help</font><font color="#CCCCCC"> Airport to</font>

246
00:10:52,750 --> 00:10:57,820
find new paths<font color="#E5E5E5"> and then turns out</font>

247
00:10:54,820 --> 00:10:59,830
whatever is out here like we use similar

248
00:10:57,820 --> 00:11:02,230
<font color="#E5E5E5">extra challenging to find a path showing</font>

249
00:10:59,830 --> 00:11:03,350
the blue line<font color="#E5E5E5"> and all the address and</font>

250
00:11:02,230 --> 00:11:06,230
the block are copied

251
00:11:03,350 --> 00:11:09,710
from the real code<font color="#CCCCCC"> the blue line</font><font color="#E5E5E5"> is the</font>

252
00:11:06,230 --> 00:11:14,240
our symbolic<font color="#CCCCCC"> execution path find</font><font color="#E5E5E5"> by by</font>

253
00:11:09,710 --> 00:11:16,910
our<font color="#E5E5E5"> engine</font><font color="#CCCCCC"> and we feed this</font><font color="#E5E5E5"> to FL which</font>

254
00:11:14,240 --> 00:11:18,800
we tell<font color="#CCCCCC"> with FL says no</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a pass</font>

255
00:11:16,910 --> 00:11:20,030
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> never you haven't find that</font>

256
00:11:18,800 --> 00:11:20,900
<font color="#E5E5E5">this is interesting you</font><font color="#CCCCCC"> should keep</font>

257
00:11:20,030 --> 00:11:23,480
rotating it

258
00:11:20,900 --> 00:11:26,090
well<font color="#CCCCCC"> AFL</font><font color="#E5E5E5"> refused to take</font><font color="#CCCCCC"> it in that case</font>

259
00:11:23,480 --> 00:11:28,250
<font color="#E5E5E5">because FL has already covered the</font><font color="#CCCCCC"> other</font>

260
00:11:26,090 --> 00:11:30,410
the<font color="#CCCCCC"> the to pass down the yellow</font>

261
00:11:28,250 --> 00:11:32,660
indicated by the yellow line<font color="#E5E5E5"> even there</font>

262
00:11:30,410 --> 00:11:34,910
are different paths<font color="#CCCCCC"> but because the hot</font>

263
00:11:32,660 --> 00:11:38,000
conflict<font color="#E5E5E5"> if I will just</font><font color="#CCCCCC"> refuse</font><font color="#E5E5E5"> to take</font>

264
00:11:34,910 --> 00:11:40,910
it<font color="#CCCCCC"> so what I want</font><font color="#E5E5E5"> to mention here our</font>

265
00:11:38,000 --> 00:11:43,760
precise here is that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> FL the harsh</font>

266
00:11:40,910 --> 00:11:45,469
conflict all the<font color="#E5E5E5"> efforts</font><font color="#CCCCCC"> blind-spot</font><font color="#E5E5E5"> even</font>

267
00:11:43,760 --> 00:11:47,960
<font color="#CCCCCC">people know that you should not know</font>

268
00:11:45,470 --> 00:11:50,330
just you know<font color="#E5E5E5"> you should try to look at</font>

269
00:11:47,960 --> 00:11:53,960
the<font color="#E5E5E5"> bitmap density and try to maybe</font>

270
00:11:50,330 --> 00:11:56,960
change the image size<font color="#E5E5E5"> there are other</font>

271
00:11:53,960 --> 00:12:00,080
situation like when you combine symbolic

272
00:11:56,960 --> 00:12:02,120
<font color="#CCCCCC">cm is FL you also have to watch this</font>

273
00:12:00,080 --> 00:12:04,730
<font color="#CCCCCC">otherwise</font><font color="#E5E5E5"> you might waste your time you</font>

274
00:12:02,120 --> 00:12:08,210
generate test case for<font color="#E5E5E5"> FL another way</font>

275
00:12:04,730 --> 00:12:10,220
but<font color="#CCCCCC"> they FL won't take it ok now there's</font>

276
00:12:08,210 --> 00:12:13,670
that may be a simple<font color="#CCCCCC"> solution you could</font>

277
00:12:10,220 --> 00:12:16,250
say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> if we know FL has this</font><font color="#CCCCCC"> hot</font>

278
00:12:13,670 --> 00:12:19,550
conflict let's just use a larger than

279
00:12:16,250 --> 00:12:22,250
map<font color="#E5E5E5"> right so we had a work related to</font>

280
00:12:19,550 --> 00:12:24,740
this talking about the consequence of a

281
00:12:22,250 --> 00:12:27,740
<font color="#CCCCCC">larger bitmap this is</font><font color="#E5E5E5"> published in early</font>

282
00:12:24,740 --> 00:12:30,320
<font color="#E5E5E5">this year in the I Triple</font><font color="#CCCCCC"> E</font><font color="#E5E5E5"> as important</font>

283
00:12:27,740 --> 00:12:32,920
<font color="#CCCCCC">about privacy security</font><font color="#E5E5E5"> and privacy</font><font color="#CCCCCC"> and</font>

284
00:12:30,320 --> 00:12:35,930
so we have two findings there first

285
00:12:32,920 --> 00:12:37,969
even you use a large<font color="#CCCCCC"> bitmap</font><font color="#E5E5E5"> depend on</font>

286
00:12:35,930 --> 00:12:40,489
the type<font color="#CCCCCC"> of a harsh conflict there are</font>

287
00:12:37,970 --> 00:12:42,320
some<font color="#E5E5E5"> hot coupling you can remove it by</font>

288
00:12:40,490 --> 00:12:45,080
<font color="#E5E5E5">using a larger pin map because it's</font>

289
00:12:42,320 --> 00:12:47,330
really<font color="#CCCCCC"> not the size of</font><font color="#E5E5E5"> the tumor size</font>

290
00:12:45,080 --> 00:12:49,580
but there are other harsh conflict you

291
00:12:47,330 --> 00:12:51,950
just can now get rid<font color="#CCCCCC"> of it so larger</font>

292
00:12:49,580 --> 00:12:53,990
first<font color="#E5E5E5"> larger</font><font color="#CCCCCC"> pin map says there's</font><font color="#E5E5E5"> no</font>

293
00:12:51,950 --> 00:12:56,690
guarantee you<font color="#E5E5E5"> don't have harsh conflict</font>

294
00:12:53,990 --> 00:12:58,850
second there's the penalty of muting

295
00:12:56,690 --> 00:13:02,180
<font color="#E5E5E5">large</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> map there's a reason why the</font>

296
00:12:58,850 --> 00:13:04,280
developer will<font color="#E5E5E5"> be a FL choose</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> 64k</font>

297
00:13:02,180 --> 00:13:06,829
because<font color="#E5E5E5"> they really</font><font color="#CCCCCC"> want have the shared</font>

298
00:13:04,280 --> 00:13:11,480
memory<font color="#E5E5E5"> the frequently used</font><font color="#CCCCCC"> you know</font>

299
00:13:06,830 --> 00:13:14,230
piece of<font color="#E5E5E5"> data in the CPU cache when you</font>

300
00:13:11,480 --> 00:13:16,090
use a larger than map you end up

301
00:13:14,230 --> 00:13:18,520
last chance<font color="#E5E5E5"> to have in the cache</font><font color="#CCCCCC"> land in</font>

302
00:13:16,090 --> 00:13:20,290
your execution<font color="#E5E5E5"> speed slow down so the</font>

303
00:13:18,520 --> 00:13:22,449
picture I show here on the<font color="#CCCCCC"> horizontal</font>

304
00:13:20,290 --> 00:13:26,020
<font color="#CCCCCC">Direction is the pin websites increasing</font>

305
00:13:22,450 --> 00:13:27,970
from 64 K to 32 Mac and the word<font color="#E5E5E5"> code</font>

306
00:13:26,020 --> 00:13:30,880
<font color="#CCCCCC">error controls to slow</font><font color="#E5E5E5"> down the ratio</font>

307
00:13:27,970 --> 00:13:33,760
<font color="#E5E5E5">and you can see that by the way for each</font>

308
00:13:30,880 --> 00:13:35,560
of the line there it means like<font color="#E5E5E5"> for</font>

309
00:13:33,760 --> 00:13:37,740
particular<font color="#E5E5E5"> test program</font><font color="#CCCCCC"> they use to</font><font color="#E5E5E5"> show</font>

310
00:13:35,560 --> 00:13:40,060
the<font color="#CCCCCC"> slowdown and</font><font color="#E5E5E5"> you can see in general</font>

311
00:13:37,740 --> 00:13:41,410
the general<font color="#E5E5E5"> trend is you know</font><font color="#CCCCCC"> slowed</font>

312
00:13:40,060 --> 00:13:43,359
<font color="#CCCCCC">down a lot if you use</font><font color="#E5E5E5"> a large</font><font color="#CCCCCC"> bin</font>

313
00:13:41,410 --> 00:13:46,089
websites and the program here<font color="#E5E5E5"> we use</font>

314
00:13:43,360 --> 00:13:48,850
<font color="#E5E5E5">there's really a wide range of program</font>

315
00:13:46,090 --> 00:13:52,450
including like TCP<font color="#CCCCCC"> dump</font><font color="#E5E5E5"> Claire maybe and</font>

316
00:13:48,850 --> 00:13:54,640
a bunch of others<font color="#CCCCCC"> ok so that's the part</font>

317
00:13:52,450 --> 00:13:56,260
I want to mention<font color="#E5E5E5"> to you to say</font><font color="#CCCCCC"> ok if I</font>

318
00:13:54,640 --> 00:13:58,540
had this<font color="#E5E5E5"> small limitation you need to be</font>

319
00:13:56,260 --> 00:14:01,260
careful<font color="#CCCCCC"> about it now let's look at</font><font color="#E5E5E5"> how</font>

320
00:13:58,540 --> 00:14:05,589
we can resist<font color="#E5E5E5"> the FL fasting you know</font>

321
00:14:01,260 --> 00:14:09,069
using<font color="#E5E5E5"> this</font><font color="#CCCCCC"> so first let's put</font><font color="#E5E5E5"> this aside</font>

322
00:14:05,590 --> 00:14:11,140
this say simply we want<font color="#E5E5E5"> to reduce the FL</font>

323
00:14:09,070 --> 00:14:13,120
<font color="#CCCCCC">Fozzie okay</font><font color="#E5E5E5"> now if you have a source</font>

324
00:14:11,140 --> 00:14:14,949
code or if you are<font color="#E5E5E5"> the author of the</font>

325
00:14:13,120 --> 00:14:17,020
program<font color="#E5E5E5"> you actually</font><font color="#CCCCCC"> can do lots of</font>

326
00:14:14,950 --> 00:14:19,360
things<font color="#E5E5E5"> right for</font><font color="#CCCCCC"> example I put</font><font color="#E5E5E5"> a few</font>

327
00:14:17,020 --> 00:14:21,910
example here like<font color="#E5E5E5"> one case you can do is</font>

328
00:14:19,360 --> 00:14:25,060
if<font color="#CCCCCC"> you add a complex constraint like if</font>

329
00:14:21,910 --> 00:14:26,980
you have you<font color="#E5E5E5"> felt like input</font><font color="#CCCCCC"> multiply</font>

330
00:14:25,060 --> 00:14:28,510
employee equal quite large number that

331
00:14:26,980 --> 00:14:31,690
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> it's really hard</font><font color="#CCCCCC"> for you how to</font>

332
00:14:28,510 --> 00:14:34,120
find it you can<font color="#E5E5E5"> also like introduce like</font>

333
00:14:31,690 --> 00:14:36,400
long sleep time for<font color="#CCCCCC"> knowing invalid</font>

334
00:14:34,120 --> 00:14:38,500
input that it because the FLT<font color="#CCCCCC"> phases</font>

335
00:14:36,400 --> 00:14:40,600
really<font color="#E5E5E5"> depend on them you know how fast</font>

336
00:14:38,500 --> 00:14:42,730
<font color="#E5E5E5">you can make a run through this and if</font>

337
00:14:40,600 --> 00:14:44,800
you write a code you can try to

338
00:14:42,730 --> 00:14:47,830
introduce<font color="#E5E5E5"> now</font><font color="#CCCCCC"> determining</font><font color="#E5E5E5"> event or maybe</font>

339
00:14:44,800 --> 00:14:49,959
even realloc relocate the code so<font color="#E5E5E5"> it the</font>

340
00:14:47,830 --> 00:14:52,000
hush<font color="#E5E5E5"> the add</font><font color="#CCCCCC"> tracking is not</font><font color="#E5E5E5"> accurate</font>

341
00:14:49,960 --> 00:14:53,260
<font color="#E5E5E5">but what we're going</font><font color="#CCCCCC"> to do here is in</font>

342
00:14:52,000 --> 00:14:55,900
this talk we're going<font color="#E5E5E5"> to try to</font><font color="#CCCCCC"> use</font>

343
00:14:53,260 --> 00:14:58,540
harsh conflict<font color="#E5E5E5"> to to try to resist it</font>

344
00:14:55,900 --> 00:15:00,790
buzzing<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so the general idea</font><font color="#CCCCCC"> is like</font>

345
00:14:58,540 --> 00:15:03,370
we want<font color="#CCCCCC"> to insert a bunch</font><font color="#E5E5E5"> of code to it</font>

346
00:15:00,790 --> 00:15:07,329
to the<font color="#CCCCCC"> binary so that it creates harsh</font>

347
00:15:03,370 --> 00:15:09,520
conflict it's the target<font color="#E5E5E5"> path that</font>

348
00:15:07,330 --> 00:15:12,880
potential lead to a crash<font color="#CCCCCC"> so that's the</font>

349
00:15:09,520 --> 00:15:14,790
<font color="#CCCCCC">generator</font><font color="#E5E5E5"> now in order</font><font color="#CCCCCC"> to do this we</font>

350
00:15:12,880 --> 00:15:17,500
need<font color="#CCCCCC"> to answer three questions</font><font color="#E5E5E5"> so first</font>

351
00:15:14,790 --> 00:15:19,380
which targets which act you want<font color="#CCCCCC"> to</font>

352
00:15:17,500 --> 00:15:23,290
target<font color="#E5E5E5"> to generate the harsh conflict</font>

353
00:15:19,380 --> 00:15:25,660
<font color="#E5E5E5">second question if you have the target</font>

354
00:15:23,290 --> 00:15:26,730
for<font color="#CCCCCC"> fertile at how even a</font><font color="#E5E5E5"> general piece</font>

355
00:15:25,660 --> 00:15:29,880
of code that you<font color="#E5E5E5"> know</font>

356
00:15:26,730 --> 00:15:31,110
had<font color="#CCCCCC"> to exactly</font><font color="#E5E5E5"> hush</font><font color="#CCCCCC"> the last question is</font>

357
00:15:29,880 --> 00:15:32,880
like how<font color="#E5E5E5"> you're gonna put this piece</font>

358
00:15:31,110 --> 00:15:35,190
<font color="#CCCCCC">coat there I'm</font><font color="#E5E5E5"> gonna answer this you</font>

359
00:15:32,880 --> 00:15:36,870
know in the<font color="#CCCCCC"> next few minutes</font><font color="#E5E5E5"> so the</font>

360
00:15:35,190 --> 00:15:39,300
first question<font color="#E5E5E5"> which edge we should</font>

361
00:15:36,870 --> 00:15:40,620
target<font color="#E5E5E5"> one naive</font><font color="#CCCCCC"> solution is like let's</font>

362
00:15:39,300 --> 00:15:43,199
just generate a bunch<font color="#E5E5E5"> of code</font><font color="#CCCCCC"> like</font>

363
00:15:40,620 --> 00:15:46,290
<font color="#CCCCCC">pollute the binary so that there's you</font>

364
00:15:43,199 --> 00:15:48,930
<font color="#CCCCCC">know all the</font><font color="#E5E5E5"> pits are filled</font><font color="#CCCCCC"> okay you</font>

365
00:15:46,290 --> 00:15:50,730
can do that<font color="#E5E5E5"> by by generally</font><font color="#CCCCCC"> lasso code</font>

366
00:15:48,930 --> 00:15:53,670
and you know<font color="#E5E5E5"> to have lots of code block</font>

367
00:15:50,730 --> 00:15:56,279
jump back<font color="#E5E5E5"> and</font><font color="#CCCCCC"> forth and you can do that</font>

368
00:15:53,670 --> 00:15:58,079
but the trouble is<font color="#CCCCCC"> that you</font>

369
00:15:56,279 --> 00:16:00,449
<font color="#CCCCCC">you're first you get the</font><font color="#E5E5E5"> target binary</font>

370
00:15:58,079 --> 00:16:02,430
much much much bigger<font color="#E5E5E5"> and second the</font>

371
00:16:00,449 --> 00:16:03,870
code<font color="#E5E5E5"> will run really slow our goal is</font>

372
00:16:02,430 --> 00:16:06,149
like this<font color="#E5E5E5"> do you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> preserve the</font>

373
00:16:03,870 --> 00:16:08,010
original<font color="#CCCCCC"> programs function and we</font><font color="#E5E5E5"> don't</font>

374
00:16:06,149 --> 00:16:10,949
want to do this<font color="#CCCCCC"> so our goal is</font>

375
00:16:08,010 --> 00:16:13,589
<font color="#E5E5E5">eventually our current implementation is</font>

376
00:16:10,949 --> 00:16:15,870
we<font color="#E5E5E5"> just want to target a particular you</font>

377
00:16:13,589 --> 00:16:18,779
know a bunch<font color="#E5E5E5"> of edge that</font><font color="#CCCCCC"> lead toward</font>

378
00:16:15,870 --> 00:16:21,690
the the<font color="#CCCCCC"> seed and eventually mutate to</font>

379
00:16:18,779 --> 00:16:24,269
the another<font color="#E5E5E5"> crash</font><font color="#CCCCCC"> so here's what we did</font>

380
00:16:21,690 --> 00:16:26,850
<font color="#E5E5E5">so if we if you gave me</font><font color="#CCCCCC"> a binary we will</font>

381
00:16:24,269 --> 00:16:28,620
first run<font color="#CCCCCC"> AF out to try to</font><font color="#E5E5E5"> find a crash</font>

382
00:16:26,850 --> 00:16:30,630
over<font color="#E5E5E5"> certain side because I</font><font color="#CCCCCC"> don't know</font>

383
00:16:28,620 --> 00:16:31,160
where the where<font color="#CCCCCC"> the crash is</font><font color="#E5E5E5"> or where</font>

384
00:16:30,630 --> 00:16:34,829
<font color="#CCCCCC">the bug is</font>

385
00:16:31,160 --> 00:16:37,230
suppose we and we find one then we will

386
00:16:34,829 --> 00:16:39,149
<font color="#E5E5E5">find a</font><font color="#CCCCCC"> witch see that</font><font color="#E5E5E5"> leads you there so</font>

387
00:16:37,230 --> 00:16:40,199
I will<font color="#CCCCCC"> explain how you</font><font color="#E5E5E5"> know how to do</font>

388
00:16:39,149 --> 00:16:42,300
this in the next<font color="#CCCCCC"> slide</font>

389
00:16:40,199 --> 00:16:44,939
so we call<font color="#E5E5E5"> this seed are targeted seed</font>

390
00:16:42,300 --> 00:16:47,310
<font color="#E5E5E5">let me compare the initial seed in their</font>

391
00:16:44,940 --> 00:16:49,019
code coverage and the target seed in

392
00:16:47,310 --> 00:16:50,910
your<font color="#CCCCCC"> car coverage and the difference and</font>

393
00:16:49,019 --> 00:16:53,190
<font color="#CCCCCC">the</font><font color="#E5E5E5"> edge difference are the</font><font color="#CCCCCC"> one we're</font>

394
00:16:50,910 --> 00:16:55,439
going<font color="#E5E5E5"> to try to pollute I'll try to</font>

395
00:16:53,190 --> 00:16:57,300
cause harsh conflict so give you an

396
00:16:55,440 --> 00:16:59,430
example if you run<font color="#E5E5E5"> AFL you</font><font color="#CCCCCC"> know like if</font>

397
00:16:57,300 --> 00:17:02,130
you<font color="#CCCCCC"> have a crush the filename actually</font>

398
00:16:59,430 --> 00:17:04,470
tells you which seed<font color="#CCCCCC"> actually help you</font>

399
00:17:02,130 --> 00:17:07,140
generate<font color="#E5E5E5"> that crash</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this example the</font>

400
00:17:04,470 --> 00:17:10,829
file name<font color="#E5E5E5"> tells you this craft actually</font>

401
00:17:07,140 --> 00:17:14,220
come from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> source 179 48 so it's</font>

402
00:17:10,829 --> 00:17:15,928
actually<font color="#E5E5E5"> have two parents and from</font><font color="#CCCCCC"> those</font>

403
00:17:14,220 --> 00:17:17,459
<font color="#E5E5E5">two parents for each of the parents we</font>

404
00:17:15,929 --> 00:17:20,309
can just look at<font color="#CCCCCC"> their called car out</font>

405
00:17:17,459 --> 00:17:22,500
the potential<font color="#CCCCCC"> flow coverage and try to</font>

406
00:17:20,309 --> 00:17:25,109
compare difference so we write a tool<font color="#CCCCCC"> if</font>

407
00:17:22,500 --> 00:17:27,209
you<font color="#E5E5E5"> gave a certain seed and you have the</font>

408
00:17:25,109 --> 00:17:29,370
<font color="#CCCCCC">initial seed it will tell you recharge</font>

409
00:17:27,209 --> 00:17:32,010
you should target so that's the list

410
00:17:29,370 --> 00:17:33,299
so<font color="#CCCCCC"> that's answer</font><font color="#E5E5E5"> the first question the</font>

411
00:17:32,010 --> 00:17:36,600
second question<font color="#E5E5E5"> let's say suppose we</font>

412
00:17:33,299 --> 00:17:39,629
<font color="#CCCCCC">have a target okay</font><font color="#E5E5E5"> okay go from cold</font>

413
00:17:36,600 --> 00:17:39,990
<font color="#E5E5E5">brach</font><font color="#CCCCCC"> acts</font><font color="#E5E5E5"> both code block a to block</font><font color="#CCCCCC"> P</font>

414
00:17:39,630 --> 00:17:42,570
so

415
00:17:39,990 --> 00:17:44,220
these<font color="#CCCCCC"> two address in oh hush now how do</font>

416
00:17:42,570 --> 00:17:47,010
you<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> a piece of code that have</font>

417
00:17:44,220 --> 00:17:49,980
<font color="#CCCCCC">the exact</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> cache</font><font color="#E5E5E5"> now we assume</font><font color="#CCCCCC"> we</font>

418
00:17:47,010 --> 00:17:53,250
have a fixed starting<font color="#CCCCCC"> address</font><font color="#E5E5E5"> so we want</font>

419
00:17:49,980 --> 00:17:54,900
to use a jump<font color="#CCCCCC"> initially we just simply</font>

420
00:17:53,250 --> 00:17:57,210
<font color="#CCCCCC">say let's do a jump like</font><font color="#E5E5E5"> we have an</font>

421
00:17:54,900 --> 00:17:59,309
initial address<font color="#E5E5E5"> let's find a target if</font>

422
00:17:57,210 --> 00:18:03,510
<font color="#CCCCCC">we don't come to the right target if the</font>

423
00:17:59,309 --> 00:18:05,639
<font color="#CCCCCC">target</font><font color="#E5E5E5"> address harsh with the same harsh</font>

424
00:18:03,510 --> 00:18:06,059
outcome with the given one<font color="#CCCCCC"> then we're</font>

425
00:18:05,640 --> 00:18:08,160
good

426
00:18:06,059 --> 00:18:10,020
if it turns out if you only do a jump

427
00:18:08,160 --> 00:18:12,990
command like um you<font color="#E5E5E5"> don't consider those</font>

428
00:18:10,020 --> 00:18:14,850
<font color="#E5E5E5">are</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> like to block</font><font color="#CCCCCC"> to new block so</font><font color="#E5E5E5"> you</font>

429
00:18:12,990 --> 00:18:16,500
have to fake a little bit more so we

430
00:18:14,850 --> 00:18:18,899
don't<font color="#CCCCCC"> have too much codes or any uh but</font>

431
00:18:16,500 --> 00:18:21,540
we do<font color="#CCCCCC"> have a dummy compared and</font><font color="#E5E5E5"> we do a</font>

432
00:18:18,900 --> 00:18:24,390
jump<font color="#E5E5E5"> then we end up able to do this now</font>

433
00:18:21,540 --> 00:18:26,010
when you calculate the the<font color="#E5E5E5"> target it's</font>

434
00:18:24,390 --> 00:18:28,080
actually not that<font color="#E5E5E5"> hard it turns out you</font>

435
00:18:26,010 --> 00:18:30,059
<font color="#E5E5E5">have you can have multiple answer and</font>

436
00:18:28,080 --> 00:18:32,250
<font color="#E5E5E5">also suppose you have a previous</font>

437
00:18:30,059 --> 00:18:34,889
location you just<font color="#CCCCCC"> do this</font><font color="#E5E5E5"> compare jump</font>

438
00:18:32,250 --> 00:18:37,260
and<font color="#CCCCCC"> the to the target</font><font color="#E5E5E5"> you don't in the</font>

439
00:18:34,890 --> 00:18:39,000
middle we put knobs in it and you<font color="#E5E5E5"> don't</font>

440
00:18:37,260 --> 00:18:40,650
have to continue<font color="#E5E5E5"> jump down you can</font>

441
00:18:39,000 --> 00:18:43,559
actually<font color="#E5E5E5"> jump back and</font><font color="#CCCCCC"> forth so you end</font>

442
00:18:40,650 --> 00:18:45,750
<font color="#E5E5E5">up having a piece of code that you</font><font color="#CCCCCC"> have</font>

443
00:18:43,559 --> 00:18:48,300
an acid jump in the middle<font color="#CCCCCC"> okay so</font>

444
00:18:45,750 --> 00:18:51,929
that's<font color="#E5E5E5"> how we created the harsh conflict</font>

445
00:18:48,300 --> 00:18:53,159
now once you<font color="#CCCCCC"> have that and</font><font color="#E5E5E5"> then the next</font>

446
00:18:51,929 --> 00:18:55,590
thing<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do is you</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font>

447
00:18:53,160 --> 00:18:58,440
insert<font color="#E5E5E5"> this piece of code to the target</font>

448
00:18:55,590 --> 00:19:02,340
program to generate<font color="#CCCCCC"> new out binary so we</font>

449
00:18:58,440 --> 00:19:04,350
what we did is we modified the code<font color="#CCCCCC"> text</font>

450
00:19:02,340 --> 00:19:06,470
<font color="#E5E5E5">section we</font><font color="#CCCCCC"> expanded so you put our code</font>

451
00:19:04,350 --> 00:19:09,570
at the<font color="#E5E5E5"> end then we modify the the</font>

452
00:19:06,470 --> 00:19:11,580
<font color="#CCCCCC">program header to make sure it starts</font>

453
00:19:09,570 --> 00:19:15,000
<font color="#E5E5E5">from our code first because we want to</font>

454
00:19:11,580 --> 00:19:17,220
pollute<font color="#E5E5E5"> the</font><font color="#CCCCCC"> harsh first then we</font><font color="#E5E5E5"> return</font>

455
00:19:15,000 --> 00:19:18,750
<font color="#CCCCCC">back</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> original code now there are a</font>

456
00:19:17,220 --> 00:19:21,300
lot<font color="#CCCCCC"> of additional</font><font color="#E5E5E5"> work we have to do</font>

457
00:19:18,750 --> 00:19:22,100
<font color="#CCCCCC">because once we enlarge the the text</font>

458
00:19:21,300 --> 00:19:26,010
segment

459
00:19:22,100 --> 00:19:28,020
we<font color="#E5E5E5"> actually we put it at the</font><font color="#CCCCCC"> end because</font>

460
00:19:26,010 --> 00:19:30,420
we don't want<font color="#CCCCCC"> to mess up</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> initial</font>

461
00:19:28,020 --> 00:19:34,410
<font color="#E5E5E5">code location because there's no other</font>

462
00:19:30,420 --> 00:19:37,260
hush we calculate before<font color="#E5E5E5"> but once we put</font>

463
00:19:34,410 --> 00:19:39,690
<font color="#E5E5E5">once we make the text second section</font>

464
00:19:37,260 --> 00:19:42,840
large<font color="#E5E5E5"> then there are other section</font>

465
00:19:39,690 --> 00:19:45,870
<font color="#E5E5E5">behind it have to change the location</font>

466
00:19:42,840 --> 00:19:47,370
<font color="#E5E5E5">and end up if your text section use any</font>

467
00:19:45,870 --> 00:19:50,070
<font color="#E5E5E5">of those you have</font><font color="#CCCCCC"> to modify the address</font>

468
00:19:47,370 --> 00:19:51,959
<font color="#CCCCCC">so there's lots of</font><font color="#E5E5E5"> labor work there</font><font color="#CCCCCC"> I</font>

469
00:19:50,070 --> 00:19:53,200
<font color="#E5E5E5">just skip the detail</font><font color="#CCCCCC"> okay</font>

470
00:19:51,960 --> 00:19:55,659
but the general

471
00:19:53,200 --> 00:19:59,760
<font color="#CCCCCC">we</font><font color="#E5E5E5"> just enlarge this tag section so</font>

472
00:19:55,659 --> 00:20:02,200
let's<font color="#CCCCCC"> look at a few example like first</font>

473
00:19:59,760 --> 00:20:05,379
again the old example<font color="#CCCCCC"> I use in a class</font>

474
00:20:02,200 --> 00:20:06,909
<font color="#E5E5E5">all right this is a path that has a</font><font color="#CCCCCC"> 7</font>

475
00:20:05,380 --> 00:20:09,010
pass of one of them lead to<font color="#E5E5E5"> the crash</font>

476
00:20:06,909 --> 00:20:10,389
and this is the old picture that you

477
00:20:09,010 --> 00:20:12,700
know if you use a<font color="#CCCCCC"> pal you find it</font>

478
00:20:10,389 --> 00:20:15,070
immediately<font color="#E5E5E5"> now here's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> picture that we</font>

479
00:20:12,700 --> 00:20:16,870
show that if we<font color="#CCCCCC"> do a little work then</font>

480
00:20:15,070 --> 00:20:19,480
you<font color="#E5E5E5"> can see like</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> fall expand like 20</font>

481
00:20:16,870 --> 00:20:21,459
minutes<font color="#CCCCCC"> stood on that</font><font color="#E5E5E5"> six pass</font><font color="#CCCCCC"> okay if</font>

482
00:20:19,480 --> 00:20:24,669
you pollute more then you can<font color="#E5E5E5"> see that</font>

483
00:20:21,460 --> 00:20:27,250
<font color="#CCCCCC">I'll fail to find the</font><font color="#E5E5E5"> other pass and</font>

484
00:20:24,669 --> 00:20:29,380
then like spend like<font color="#CCCCCC"> ninety days there</font>

485
00:20:27,250 --> 00:20:31,210
but those are like you know my program

486
00:20:29,380 --> 00:20:34,330
it's not<font color="#E5E5E5"> interesting right</font><font color="#CCCCCC"> so you want</font>

487
00:20:31,210 --> 00:20:36,639
<font color="#E5E5E5">to see how I fell how this F word apply</font>

488
00:20:34,330 --> 00:20:38,860
to other binary<font color="#E5E5E5"> so the first thing we</font>

489
00:20:36,639 --> 00:20:41,860
try this we find<font color="#CCCCCC"> t</font><font color="#E5E5E5"> sweet</font><font color="#CCCCCC"> on there's</font><font color="#E5E5E5"> a</font>

490
00:20:38,860 --> 00:20:42,459
there's<font color="#E5E5E5"> an old bug like this is in 2015</font>

491
00:20:41,860 --> 00:20:45,580
right

492
00:20:42,460 --> 00:20:48,370
<font color="#CCCCCC">we know the spark so we find a</font><font color="#E5E5E5"> input</font>

493
00:20:45,580 --> 00:20:50,710
that it's close<font color="#CCCCCC"> to this right</font><font color="#E5E5E5"> and then</font>

494
00:20:48,370 --> 00:20:52,629
<font color="#E5E5E5">if we feed that see the intro to FL you</font>

495
00:20:50,710 --> 00:20:55,570
know FL like less than five minutes find

496
00:20:52,630 --> 00:20:58,000
<font color="#E5E5E5">the crash and report the bug now apply</font>

497
00:20:55,570 --> 00:21:00,158
our tool to this then<font color="#E5E5E5"> you can see like</font>

498
00:20:58,000 --> 00:21:02,769
<font color="#E5E5E5">we generate new binary if you know I</font>

499
00:21:00,159 --> 00:21:04,960
didn't show I<font color="#E5E5E5"> don't show you the result</font>

500
00:21:02,769 --> 00:21:06,820
of running<font color="#E5E5E5"> this new</font><font color="#CCCCCC"> T</font><font color="#E5E5E5"> series</font><font color="#CCCCCC"> on let's do</font>

501
00:21:04,960 --> 00:21:09,610
functioning at the normal cheese<font color="#E5E5E5"> feed um</font>

502
00:21:06,820 --> 00:21:11,590
but I already<font color="#E5E5E5"> ran like two weeks with</font>

503
00:21:09,610 --> 00:21:14,110
<font color="#E5E5E5">the FL on the same machine that find the</font>

504
00:21:11,590 --> 00:21:17,019
bug in the in<font color="#CCCCCC"> in five minutes with the</font>

505
00:21:14,110 --> 00:21:19,928
<font color="#CCCCCC">same seed and two weeks yeah FL still</font>

506
00:21:17,019 --> 00:21:22,059
hasn't<font color="#CCCCCC"> find it</font><font color="#E5E5E5"> okay at while the binary</font>

507
00:21:19,929 --> 00:21:23,830
because<font color="#E5E5E5"> the the previous</font><font color="#CCCCCC"> one is like</font>

508
00:21:22,059 --> 00:21:25,960
sort<font color="#E5E5E5"> of all about and we</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> of</font>

509
00:21:23,830 --> 00:21:30,250
recently<font color="#E5E5E5"> we found a new CD</font><font color="#CCCCCC"> in object</font>

510
00:21:25,960 --> 00:21:32,320
copy<font color="#E5E5E5"> so we take that for similar for EZ</font>

511
00:21:30,250 --> 00:21:34,269
seed<font color="#E5E5E5"> input that close to the crash</font>

512
00:21:32,320 --> 00:21:37,000
we gave it<font color="#E5E5E5"> like one minute</font><font color="#CCCCCC"> app I find</font>

513
00:21:34,269 --> 00:21:39,429
the bug then in our case if we could you

514
00:21:37,000 --> 00:21:41,230
know modify the binary bits are true in

515
00:21:39,429 --> 00:21:44,590
this case where<font color="#E5E5E5"> we run nine hours and</font>

516
00:21:41,230 --> 00:21:46,720
have them find<font color="#E5E5E5"> about okay so that's</font><font color="#CCCCCC"> so a</font>

517
00:21:44,590 --> 00:21:48,730
<font color="#E5E5E5">quick summary demoing in terms of</font>

518
00:21:46,720 --> 00:21:52,179
<font color="#CCCCCC">showing like you know what we can do</font><font color="#E5E5E5"> so</font>

519
00:21:48,730 --> 00:21:54,610
far but then<font color="#CCCCCC"> originally I saw like I</font>

520
00:21:52,179 --> 00:21:58,149
find a way to relate to<font color="#E5E5E5"> say okay this is</font>

521
00:21:54,610 --> 00:22:00,399
maybe a<font color="#E5E5E5"> to our master to hide bugs but</font>

522
00:21:58,149 --> 00:22:02,439
then<font color="#CCCCCC"> we I look at the scene</font><font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit</font>

523
00:22:00,399 --> 00:22:05,439
more detail feel like this is too

524
00:22:02,440 --> 00:22:05,860
<font color="#CCCCCC">there's our master so lots of trouble</font><font color="#E5E5E5"> at</font>

525
00:22:05,440 --> 00:22:07,630
least in

526
00:22:05,860 --> 00:22:09,549
current implementation first<font color="#E5E5E5"> our</font>

527
00:22:07,630 --> 00:22:10,600
Angelica<font color="#CCCCCC"> comb it's really easy</font><font color="#E5E5E5"> to</font>

528
00:22:09,549 --> 00:22:12,790
<font color="#CCCCCC">identify I</font>

529
00:22:10,600 --> 00:22:15,909
for someone like if they see our binary

530
00:22:12,790 --> 00:22:18,159
<font color="#E5E5E5">they know ignore modify the entry point</font>

531
00:22:15,910 --> 00:22:21,340
of the program<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> find our code they</font>

532
00:22:18,160 --> 00:22:23,559
can<font color="#E5E5E5"> do another run of modification they</font>

533
00:22:21,340 --> 00:22:25,870
can just remove our you know called then

534
00:22:23,559 --> 00:22:28,149
they can<font color="#E5E5E5"> father again so and worse than</font>

535
00:22:25,870 --> 00:22:31,959
<font color="#CCCCCC">that if we if you think</font><font color="#E5E5E5"> about using this</font>

536
00:22:28,150 --> 00:22:35,500
way as<font color="#E5E5E5"> to hide about well our</font><font color="#CCCCCC"> are to</font>

537
00:22:31,960 --> 00:22:37,660
certainly kind of<font color="#E5E5E5"> gave the hint to who I</font>

538
00:22:35,500 --> 00:22:39,220
want to<font color="#E5E5E5"> find the bug so now like instead</font>

539
00:22:37,660 --> 00:22:42,220
all<font color="#CCCCCC"> they do</font><font color="#E5E5E5"> far they can just follow my</font>

540
00:22:39,220 --> 00:22:44,169
jump<font color="#E5E5E5"> that maybe they find out address to</font>

541
00:22:42,220 --> 00:22:46,960
the<font color="#E5E5E5"> bug</font><font color="#CCCCCC"> so that's why the current</font>

542
00:22:44,169 --> 00:22:50,080
<font color="#E5E5E5">implementation is more like illustrating</font>

543
00:22:46,960 --> 00:22:52,840
the point<font color="#E5E5E5"> but it's</font><font color="#CCCCCC"> now ready to be used</font>

544
00:22:50,080 --> 00:22:57,399
as a defense a<font color="#E5E5E5"> mess or general</font><font color="#CCCCCC"> matter</font><font color="#E5E5E5"> to</font>

545
00:22:52,840 --> 00:22:59,620
resist<font color="#E5E5E5"> the FL and then and also</font><font color="#CCCCCC"> there</font>

546
00:22:57,400 --> 00:23:03,630
are<font color="#CCCCCC"> other master to do instrumentation</font>

547
00:22:59,620 --> 00:23:05,949
and to handle the<font color="#CCCCCC"> cull code coverage</font>

548
00:23:03,630 --> 00:23:08,410
collection information<font color="#E5E5E5"> collection like</font>

549
00:23:05,950 --> 00:23:11,049
you know<font color="#E5E5E5"> using Intel PT or</font><font color="#CCCCCC"> you know</font>

550
00:23:08,410 --> 00:23:13,960
<font color="#CCCCCC">dynamo real</font><font color="#E5E5E5"> so you know my talk doesn't</font>

551
00:23:11,049 --> 00:23:16,750
deal with that and the<font color="#E5E5E5"> third point is</font>

552
00:23:13,960 --> 00:23:19,090
<font color="#CCCCCC">that even</font><font color="#E5E5E5"> we are successfully to create</font>

553
00:23:16,750 --> 00:23:21,370
out the harsh conflict we don't

554
00:23:19,090 --> 00:23:23,230
guarantee if they move the chance of<font color="#E5E5E5"> a</font>

555
00:23:21,370 --> 00:23:25,719
<font color="#E5E5E5">FL find it because their fathers all</font>

556
00:23:23,230 --> 00:23:28,900
this you know<font color="#E5E5E5"> how kinds of mutation the</font>

557
00:23:25,720 --> 00:23:32,740
<font color="#CCCCCC">Rendon case that it could be</font><font color="#E5E5E5"> just like</font>

558
00:23:28,900 --> 00:23:34,390
even I hide all<font color="#E5E5E5"> the edges but from the</font>

559
00:23:32,740 --> 00:23:36,910
<font color="#CCCCCC">inner proceed yeah if I might just</font>

560
00:23:34,390 --> 00:23:39,220
randomly<font color="#E5E5E5"> we're lucky lately just my</font>

561
00:23:36,910 --> 00:23:41,110
<font color="#E5E5E5">steel to create</font><font color="#CCCCCC"> the crush right so</font>

562
00:23:39,220 --> 00:23:44,080
<font color="#E5E5E5">that's some of</font><font color="#CCCCCC"> the limitation with our</font>

563
00:23:41,110 --> 00:23:45,668
current solution but when<font color="#E5E5E5"> we look at</font>

564
00:23:44,080 --> 00:23:49,090
this we<font color="#CCCCCC"> actually also</font><font color="#E5E5E5"> find a lots of</font>

565
00:23:45,669 --> 00:23:50,890
other<font color="#E5E5E5"> ways to reduce AF of</font><font color="#CCCCCC"> buzzing so</font>

566
00:23:49,090 --> 00:23:53,770
I'm going to<font color="#E5E5E5"> smashing a few here so two</font>

567
00:23:50,890 --> 00:23:56,970
of the solution here<font color="#CCCCCC"> when we look at</font><font color="#E5E5E5"> the</font>

568
00:23:53,770 --> 00:23:59,860
<font color="#E5E5E5">FLQ</font><font color="#CCCCCC"> emu it turns out that M Fouquet</font>

569
00:23:56,970 --> 00:24:02,080
Miriam you<font color="#E5E5E5"> only track the</font><font color="#CCCCCC"> first text</font>

570
00:23:59,860 --> 00:24:02,918
segment if<font color="#E5E5E5"> you look at the patch over</font>

571
00:24:02,080 --> 00:24:05,649
<font color="#CCCCCC">FLQ</font>

572
00:24:02,919 --> 00:24:07,990
<font color="#E5E5E5">so a simple solution to a wall you</font><font color="#CCCCCC"> FL to</font>

573
00:24:05,650 --> 00:24:10,059
find in<font color="#E5E5E5"> your code it's like you just add</font>

574
00:24:07,990 --> 00:24:11,500
<font color="#CCCCCC">another text salmon move all the</font>

575
00:24:10,059 --> 00:24:13,809
meaningful code there and<font color="#CCCCCC"> they have I</font>

576
00:24:11,500 --> 00:24:15,550
<font color="#CCCCCC">won't able</font><font color="#E5E5E5"> to even see</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> okay so that's</font>

577
00:24:13,809 --> 00:24:18,399
one a solution the<font color="#CCCCCC"> other solution is</font>

578
00:24:15,550 --> 00:24:20,500
like if<font color="#E5E5E5"> you inject like fake</font><font color="#CCCCCC"> termination</font>

579
00:24:18,400 --> 00:24:22,990
you know like a your code<font color="#E5E5E5"> say normally</font>

580
00:24:20,500 --> 00:24:25,060
has a regular exit point<font color="#E5E5E5"> and you can</font>

581
00:24:22,990 --> 00:24:26,650
<font color="#E5E5E5">simply do that by say put up more there</font>

582
00:24:25,060 --> 00:24:29,649
<font color="#CCCCCC">and then half I will</font><font color="#E5E5E5"> have lots of false</font>

583
00:24:26,650 --> 00:24:32,290
positive<font color="#CCCCCC"> okay so that's pretty much all</font>

584
00:24:29,650 --> 00:24:35,560
I have for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to quickly summarize</font><font color="#CCCCCC"> what</font>

585
00:24:32,290 --> 00:24:37,659
<font color="#CCCCCC">I have I showed</font><font color="#E5E5E5"> you that a</font><font color="#CCCCCC"> NAPA has a</font>

586
00:24:35,560 --> 00:24:40,720
small limitation<font color="#E5E5E5"> that is it's</font><font color="#CCCCCC"> really</font>

587
00:24:37,660 --> 00:24:43,090
it's harsh conflict it caused by his

588
00:24:40,720 --> 00:24:45,790
efficient data structure because it's

589
00:24:43,090 --> 00:24:47,649
really want to run fast<font color="#CCCCCC"> and we show you</font>

590
00:24:45,790 --> 00:24:50,740
<font color="#CCCCCC">a tool</font><font color="#E5E5E5"> that we can actually rewrite</font>

591
00:24:47,650 --> 00:24:52,240
binary to create this harsh conflict<font color="#E5E5E5"> so</font>

592
00:24:50,740 --> 00:24:54,040
that's all I have<font color="#CCCCCC"> for today</font>

593
00:24:52,240 --> 00:24:55,930
and I don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> whether I have</font>

594
00:24:54,040 --> 00:25:11,580
questions<font color="#E5E5E5"> I have time for a question</font>

595
00:24:55,930 --> 00:25:16,690
answer<font color="#CCCCCC"> it yeah any questions any papers</font>

596
00:25:11,580 --> 00:25:19,330
I assume like you are saying<font color="#E5E5E5"> like if</font>

597
00:25:16,690 --> 00:25:23,140
there's already a packer<font color="#CCCCCC"> right he you</font>

598
00:25:19,330 --> 00:25:26,379
pack it<font color="#E5E5E5"> and I I didn't evaluate like in</font>

599
00:25:23,140 --> 00:25:29,590
in fact<font color="#E5E5E5"> NFL might actually have hard</font>

600
00:25:26,380 --> 00:25:32,050
time to<font color="#E5E5E5"> to deal with the</font><font color="#CCCCCC"> UPI to</font><font color="#E5E5E5"> pack the</font>

601
00:25:29,590 --> 00:25:34,419
binary I don't know but I think<font color="#CCCCCC"> this to</font>

602
00:25:32,050 --> 00:25:36,550
effort can be<font color="#CCCCCC"> complimentary I didn't try</font>

603
00:25:34,420 --> 00:25:45,640
<font color="#CCCCCC">it so I don't know</font><font color="#E5E5E5"> the exact answer</font>

604
00:25:36,550 --> 00:25:48,550
<font color="#CCCCCC">thank you yeah thanks another question</font>

605
00:25:45,640 --> 00:25:52,180
so<font color="#E5E5E5"> this intellect so very</font><font color="#CCCCCC"> interesting</font>

606
00:25:48,550 --> 00:25:55,000
talk and so you mentioned<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> the</font>

607
00:25:52,180 --> 00:25:59,520
issue about<font color="#E5E5E5"> AFL so I'm</font><font color="#CCCCCC"> wondering</font><font color="#E5E5E5"> if this</font>

608
00:25:55,000 --> 00:26:03,700
<font color="#CCCCCC">could</font><font color="#E5E5E5"> be solved by easily using multiple</font>

609
00:25:59,520 --> 00:26:06,430
big maps with<font color="#CCCCCC"> spouts with multiple hash</font>

610
00:26:03,700 --> 00:26:08,590
functions right so<font color="#E5E5E5"> thankfully you</font><font color="#CCCCCC"> can</font>

611
00:26:06,430 --> 00:26:12,490
either modify<font color="#E5E5E5"> the hash function you can</font>

612
00:26:08,590 --> 00:26:15,040
use<font color="#CCCCCC"> smart open map</font><font color="#E5E5E5"> but remember why the</font>

613
00:26:12,490 --> 00:26:17,340
developer if<font color="#CCCCCC"> I</font><font color="#E5E5E5"> use this you know really</font>

614
00:26:15,040 --> 00:26:20,920
simple<font color="#CCCCCC"> messer</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> they FL want</font>

615
00:26:17,340 --> 00:26:23,110
really<font color="#E5E5E5"> use a very low overhead approach</font>

616
00:26:20,920 --> 00:26:25,060
to<font color="#CCCCCC"> then make sure</font><font color="#E5E5E5"> it run fast</font><font color="#CCCCCC"> so I ever</font>

617
00:26:23,110 --> 00:26:26,979
tell me<font color="#E5E5E5"> you add additional effort like</font>

618
00:26:25,060 --> 00:26:28,720
<font color="#E5E5E5">you know maybe multiple map large urban</font>

619
00:26:26,980 --> 00:26:31,020
map multiple<font color="#E5E5E5"> hash function better hash</font>

620
00:26:28,720 --> 00:26:33,630
<font color="#CCCCCC">functions you actually</font><font color="#E5E5E5"> slow it</font><font color="#CCCCCC"> down</font>

621
00:26:31,020 --> 00:26:35,460
that there's the<font color="#CCCCCC"> penalty so if you want</font>

622
00:26:33,630 --> 00:26:38,910
to<font color="#E5E5E5"> do the</font><font color="#CCCCCC"> trade-off yes you can you can</font>

623
00:26:35,460 --> 00:26:41,490
<font color="#E5E5E5">reduce this harsh conflict to a certain</font>

624
00:26:38,910 --> 00:26:44,610
extent<font color="#CCCCCC"> but you have the penalty in fact</font>

625
00:26:41,490 --> 00:26:46,110
<font color="#E5E5E5">our paper in the ITV SNP actually</font>

626
00:26:44,610 --> 00:26:48,240
<font color="#CCCCCC">proposed</font><font color="#E5E5E5"> like just a really a</font>

627
00:26:46,110 --> 00:26:50,879
modification<font color="#E5E5E5"> on the harsh algorithm try</font>

628
00:26:48,240 --> 00:26:52,650
to reduce as much<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> try to try to</font>

629
00:26:50,880 --> 00:27:00,810
<font color="#E5E5E5">really minimize the harsh conflict in</font>

630
00:26:52,650 --> 00:27:02,760
<font color="#E5E5E5">the impact so you can do that yes</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> yeah</font>

631
00:27:00,810 --> 00:27:08,580
you mentioned<font color="#E5E5E5"> he</font><font color="#CCCCCC"> passed</font><font color="#E5E5E5"> sensitive sizing</font>

632
00:27:02,760 --> 00:27:10,620
paper as well<font color="#CCCCCC"> so did you</font><font color="#E5E5E5"> try to run the</font>

633
00:27:08,580 --> 00:27:12,929
resisting boundaries<font color="#E5E5E5"> against this view</font>

634
00:27:10,620 --> 00:27:16,560
<font color="#CCCCCC">fuzzy in both working adults</font><font color="#E5E5E5"> right we</font>

635
00:27:12,930 --> 00:27:18,510
haven't ran it but for this particular

636
00:27:16,560 --> 00:27:22,080
particular<font color="#CCCCCC"> tool like the FL we didn't</font>

637
00:27:18,510 --> 00:27:27,720
but when we evaluate the harsh conflict

638
00:27:22,080 --> 00:27:29,820
<font color="#E5E5E5">impact in the</font><font color="#CCCCCC"> ITP</font><font color="#E5E5E5"> SNP paper and you can</font>

639
00:27:27,720 --> 00:27:31,830
find this is called a<font color="#CCCCCC"> path sensitive</font>

640
00:27:29,820 --> 00:27:33,899
fuzzing<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually tried other</font>

641
00:27:31,830 --> 00:27:36,149
<font color="#CCCCCC">falls to the</font><font color="#E5E5E5"> Father like lip fuzz home</font>

642
00:27:33,900 --> 00:27:39,480
files which wider about<font color="#CCCCCC"> two other one</font>

643
00:27:36,150 --> 00:27:40,950
and<font color="#E5E5E5"> almost all of them</font><font color="#CCCCCC"> have potential</font>

644
00:27:39,480 --> 00:27:43,530
<font color="#E5E5E5">this harsh come for the problem because</font>

645
00:27:40,950 --> 00:27:46,290
they all want<font color="#E5E5E5"> to use a compact</font><font color="#CCCCCC"> data try</font>

646
00:27:43,530 --> 00:27:50,879
<font color="#E5E5E5">to record it so that that trade-off is</font>

647
00:27:46,290 --> 00:27:52,379
always there when<font color="#CCCCCC"> you say you developed</font>

648
00:27:50,880 --> 00:27:55,440
a new<font color="#CCCCCC"> file in the past sensitive</font><font color="#E5E5E5"> is</font>

649
00:27:52,380 --> 00:27:58,920
passing paper right<font color="#CCCCCC"> do you think that</font>

650
00:27:55,440 --> 00:28:01,620
resolves<font color="#CCCCCC"> the issue no like so the work</font>

651
00:27:58,920 --> 00:28:03,480
we<font color="#E5E5E5"> did there is actually real I rely on</font>

652
00:28:01,620 --> 00:28:06,419
some assumption it<font color="#E5E5E5"> requires you to know</font>

653
00:28:03,480 --> 00:28:08,550
<font color="#CCCCCC">the control flow graph or at</font><font color="#E5E5E5"> least know</font>

654
00:28:06,420 --> 00:28:11,550
a rough control flow graph<font color="#E5E5E5"> so</font><font color="#CCCCCC"> then you</font>

655
00:28:08,550 --> 00:28:14,280
can avoid if you know that<font color="#E5E5E5"> initially if</font>

656
00:28:11,550 --> 00:28:16,770
you already<font color="#E5E5E5"> know what are the edges you</font>

657
00:28:14,280 --> 00:28:18,990
<font color="#E5E5E5">can make</font><font color="#CCCCCC"> sure when you insert you</font>

658
00:28:16,770 --> 00:28:21,660
calculate<font color="#CCCCCC"> harsh</font><font color="#E5E5E5"> you can just remove the</font>

659
00:28:18,990 --> 00:28:25,050
<font color="#CCCCCC">hard conflict there but we all know</font><font color="#E5E5E5"> that</font>

660
00:28:21,660 --> 00:28:25,830
having a accurate complete<font color="#E5E5E5"> control flow</font>

661
00:28:25,050 --> 00:28:29,070
graph that's

662
00:28:25,830 --> 00:28:31,490
<font color="#E5E5E5">itself is invalid assumption like in at</font>

663
00:28:29,070 --> 00:28:37,710
least<font color="#E5E5E5"> for largely a meaningful program</font>

664
00:28:31,490 --> 00:28:39,500
<font color="#E5E5E5">thanks thank you any other questions or</font>

665
00:28:37,710 --> 00:28:44,309
if not thank<font color="#CCCCCC"> you</font>

666
00:28:39,500 --> 00:28:44,309
[Applause]

