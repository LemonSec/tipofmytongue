1
00:00:00,030 --> 00:00:06,000
thank you for the last<font color="#E5E5E5"> nine</font><font color="#CCCCCC"> years we've</font>

2
00:00:04,019 --> 00:00:09,660
underestimated the impact<font color="#E5E5E5"> of a whole</font>

3
00:00:06,000 --> 00:00:11,639
class<font color="#E5E5E5"> of vulnerabilities in PHP hundreds</font>

4
00:00:09,660 --> 00:00:14,099
probably thousands of instances<font color="#CCCCCC"> of this</font>

5
00:00:11,639 --> 00:00:17,070
issue have been<font color="#E5E5E5"> found</font><font color="#CCCCCC"> and a simple</font>

6
00:00:14,099 --> 00:00:21,750
behavior in PHP exposes them<font color="#CCCCCC"> to</font>

7
00:00:17,070 --> 00:00:23,698
exploitation through<font color="#CCCCCC"> on serialization my</font>

8
00:00:21,750 --> 00:00:27,448
<font color="#E5E5E5">name is Sam and</font><font color="#CCCCCC"> I spend a lot of my</font><font color="#E5E5E5"> time</font>

9
00:00:23,699 --> 00:00:30,060
attacking web applications<font color="#E5E5E5"> and so I</font>

10
00:00:27,449 --> 00:00:31,859
always<font color="#E5E5E5"> ask myself what vulnerabilities</font>

11
00:00:30,060 --> 00:00:34,589
does this app have and what can you<font color="#E5E5E5"> do</font>

12
00:00:31,859 --> 00:00:36,420
with the vulnerabilities<font color="#E5E5E5"> and the</font>

13
00:00:34,590 --> 00:00:38,370
research<font color="#E5E5E5"> I'm going to talk about today</font>

14
00:00:36,420 --> 00:00:40,079
doesn't really<font color="#E5E5E5"> affect the first part of</font>

15
00:00:38,370 --> 00:00:42,930
<font color="#CCCCCC">that</font><font color="#E5E5E5"> question so I won't be introducing</font>

16
00:00:40,079 --> 00:00:45,450
any new<font color="#E5E5E5"> types of</font><font color="#CCCCCC"> vulnerabilities</font><font color="#E5E5E5"> but</font>

17
00:00:42,930 --> 00:00:48,059
I'll be demonstrating<font color="#E5E5E5"> a new exploitation</font>

18
00:00:45,450 --> 00:00:49,710
technique which should hopefully give

19
00:00:48,059 --> 00:00:51,239
you guys a surprising<font color="#E5E5E5"> answer to the</font>

20
00:00:49,710 --> 00:00:55,410
second<font color="#CCCCCC"> part of the question what can you</font>

21
00:00:51,239 --> 00:00:57,089
do with<font color="#E5E5E5"> certain vulnerabilities before</font><font color="#CCCCCC"> I</font>

22
00:00:55,410 --> 00:00:58,559
<font color="#E5E5E5">introduce my own research I think</font><font color="#CCCCCC"> it's</font>

23
00:00:57,090 --> 00:01:00,780
important<font color="#E5E5E5"> to say that this is</font><font color="#CCCCCC"> really</font>

24
00:00:58,559 --> 00:01:03,419
just<font color="#E5E5E5"> a tiny addition to some</font><font color="#CCCCCC"> wonderful</font>

25
00:01:00,780 --> 00:01:06,689
research done by<font color="#CCCCCC"> Stephan</font><font color="#E5E5E5"> essa almost</font><font color="#CCCCCC"> ten</font>

26
00:01:03,420 --> 00:01:08,850
<font color="#CCCCCC">years</font><font color="#E5E5E5"> ago he discovered this on</font>

27
00:01:06,689 --> 00:01:12,320
serialization vulnerability and came up

28
00:01:08,850 --> 00:01:15,869
<font color="#CCCCCC">with a really unique way to exploit it</font>

29
00:01:12,320 --> 00:01:18,149
<font color="#E5E5E5">so I'm not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to go into a lot of</font>

30
00:01:15,869 --> 00:01:19,979
detail about<font color="#E5E5E5"> serialization and on</font>

31
00:01:18,150 --> 00:01:23,130
serialization but really briefly for

32
00:01:19,979 --> 00:01:25,590
anyone who doesn't know<font color="#E5E5E5"> what it is it's</font>

33
00:01:23,130 --> 00:01:28,439
a process<font color="#E5E5E5"> by which internal objects in</font>

34
00:01:25,590 --> 00:01:31,140
PHP are converted into a string

35
00:01:28,439 --> 00:01:33,149
representation<font color="#E5E5E5"> which can be passed over</font>

36
00:01:31,140 --> 00:01:36,060
<font color="#E5E5E5">the wire or stored in a database and</font>

37
00:01:33,150 --> 00:01:38,280
then<font color="#CCCCCC"> uncie realization can convert that</font>

38
00:01:36,060 --> 00:01:39,530
representation back into an instance of

39
00:01:38,280 --> 00:01:42,119
the<font color="#CCCCCC"> object</font>

40
00:01:39,530 --> 00:01:43,829
now obviously the examples on the<font color="#CCCCCC"> slide</font>

41
00:01:42,119 --> 00:01:45,750
are really<font color="#E5E5E5"> simple so there's an integer</font>

42
00:01:43,829 --> 00:01:49,289
and<font color="#E5E5E5"> a string but it can represent far</font>

43
00:01:45,750 --> 00:01:51,420
<font color="#E5E5E5">more</font><font color="#CCCCCC"> complicated objects and what</font><font color="#E5E5E5"> Stefan</font>

44
00:01:49,290 --> 00:01:53,549
<font color="#E5E5E5">SR realized was that</font><font color="#CCCCCC"> you can use this</font>

45
00:01:51,420 --> 00:01:55,710
technique<font color="#CCCCCC"> called property orientated</font>

46
00:01:53,549 --> 00:01:58,890
programming which<font color="#E5E5E5"> is very similar to</font>

47
00:01:55,710 --> 00:02:02,369
return orientated programming in<font color="#E5E5E5"> store</font>

48
00:01:58,890 --> 00:02:03,899
native code<font color="#CCCCCC"> to reuse certain bits of</font>

49
00:02:02,369 --> 00:02:06,540
code which are already<font color="#CCCCCC"> loaded or</font>

50
00:02:03,899 --> 00:02:08,399
accessible to the application and chain

51
00:02:06,540 --> 00:02:09,780
them together to cause some malicious

52
00:02:08,399 --> 00:02:13,260
action to occur

53
00:02:09,780 --> 00:02:14,760
and to me<font color="#E5E5E5"> his research was years ahead</font>

54
00:02:13,260 --> 00:02:18,420
<font color="#E5E5E5">of its time so if we look at the</font>

55
00:02:14,760 --> 00:02:19,799
<font color="#CCCCCC">corresponding issue in Java</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> sort</font>

56
00:02:18,420 --> 00:02:23,339
<font color="#E5E5E5">of started talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it in about</font>

57
00:02:19,800 --> 00:02:25,890
2011<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> wasn't</font><font color="#E5E5E5"> until a couple</font><font color="#CCCCCC"> of</font>

58
00:02:23,340 --> 00:02:27,960
<font color="#E5E5E5">years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> when Christopher Hoff</font><font color="#CCCCCC"> I</font>

59
00:02:25,890 --> 00:02:30,200
released the tool why so<font color="#CCCCCC"> serial</font><font color="#E5E5E5"> that we</font>

60
00:02:27,960 --> 00:02:33,630
really started<font color="#CCCCCC"> to see widespread</font>

61
00:02:30,200 --> 00:02:36,989
exploitation<font color="#CCCCCC"> whereas the issue of stefan</font>

62
00:02:33,630 --> 00:02:39,660
<font color="#E5E5E5">SR introduced it in PHP already came</font>

63
00:02:36,990 --> 00:02:41,850
with sort<font color="#E5E5E5"> of example payloads in widely</font>

64
00:02:39,660 --> 00:02:48,870
deployed libraries and was essentially

65
00:02:41,850 --> 00:02:50,700
<font color="#E5E5E5">fully formed in his original work</font><font color="#CCCCCC"> so the</font>

66
00:02:48,870 --> 00:02:53,670
<font color="#E5E5E5">the details here are essentially how the</font>

67
00:02:50,700 --> 00:02:56,149
<font color="#CCCCCC">issue is exploited so when the target</font>

68
00:02:53,670 --> 00:02:58,489
application uncie realises the malicious

69
00:02:56,150 --> 00:03:01,320
serialized object that we've given<font color="#E5E5E5"> it</font>

70
00:02:58,490 --> 00:03:04,530
this will cause certain what PHP<font color="#E5E5E5"> cause</font>

71
00:03:01,320 --> 00:03:06,239
magic<font color="#E5E5E5"> methods to execute so there's one</font>

72
00:03:04,530 --> 00:03:08,700
called underscore underscore<font color="#CCCCCC"> wakeup</font>

73
00:03:06,240 --> 00:03:11,520
which will occur whenever an object<font color="#CCCCCC"> Sun</font>

74
00:03:08,700 --> 00:03:13,920
serialized<font color="#E5E5E5"> and also there's a garbage</font>

75
00:03:11,520 --> 00:03:18,630
collector which will cause the<font color="#E5E5E5"> method</font>

76
00:03:13,920 --> 00:03:21,510
destruct<font color="#E5E5E5"> to execute in the conventional</font>

77
00:03:18,630 --> 00:03:23,730
<font color="#CCCCCC">line serialization</font><font color="#E5E5E5"> issue something</font><font color="#CCCCCC"> is</font>

78
00:03:21,510 --> 00:03:25,260
going to be done<font color="#CCCCCC"> with that</font><font color="#E5E5E5"> data so the</font>

79
00:03:23,730 --> 00:03:26,880
application<font color="#E5E5E5"> is deliberately</font><font color="#CCCCCC"> uncy</font>

80
00:03:25,260 --> 00:03:28,739
realized something<font color="#E5E5E5"> and is expecting a</font>

81
00:03:26,880 --> 00:03:31,440
<font color="#CCCCCC">certain type of data so it's also quite</font>

82
00:03:28,739 --> 00:03:35,720
easy<font color="#CCCCCC"> to trigger</font><font color="#E5E5E5"> magic methods like to</font>

83
00:03:31,440 --> 00:03:38,250
string or other similar<font color="#CCCCCC"> things to</font><font color="#E5E5E5"> that</font>

84
00:03:35,720 --> 00:03:39,300
essentially at this point all if you

85
00:03:38,250 --> 00:03:41,220
don't know anything<font color="#E5E5E5"> about on</font>

86
00:03:39,300 --> 00:03:43,920
serialization I just need you to<font color="#E5E5E5"> accept</font>

87
00:03:41,220 --> 00:03:46,620
<font color="#E5E5E5">that it's really bad to unsee realized</font>

88
00:03:43,920 --> 00:03:48,869
attacker<font color="#CCCCCC"> controlled data so this is the</font>

89
00:03:46,620 --> 00:03:50,280
<font color="#E5E5E5">agenda</font><font color="#CCCCCC"> for the talk and the first thing</font>

90
00:03:48,870 --> 00:03:52,530
I'm<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> discuss is something</font><font color="#CCCCCC"> called</font>

91
00:03:50,280 --> 00:03:54,420
<font color="#E5E5E5">stream wrappers and</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> focus</font><font color="#CCCCCC"> on on</font>

92
00:03:52,530 --> 00:03:56,700
<font color="#E5E5E5">this specific stream wrapper called the</font>

93
00:03:54,420 --> 00:03:58,829
<font color="#E5E5E5">far stream wrapper we'll look at the</font>

94
00:03:56,700 --> 00:04:01,619
file format<font color="#E5E5E5"> where far is a type of</font>

95
00:03:58,830 --> 00:04:06,360
archive so it's supposed<font color="#E5E5E5"> to be the PHP</font>

96
00:04:01,620 --> 00:04:08,160
equivalent to the jar<font color="#CCCCCC"> Java archive and</font>

97
00:04:06,360 --> 00:04:10,019
we'll look at the file format<font color="#CCCCCC"> for a far</font>

98
00:04:08,160 --> 00:04:12,390
archive<font color="#E5E5E5"> we'll look at something I've</font>

99
00:04:10,019 --> 00:04:16,048
called<font color="#CCCCCC"> far planting so that's getting</font><font color="#E5E5E5"> a</font>

100
00:04:12,390 --> 00:04:17,668
far archive<font color="#E5E5E5"> onto your target</font><font color="#CCCCCC"> looking at</font>

101
00:04:16,048 --> 00:04:21,390
any methods that<font color="#E5E5E5"> might work beyond</font>

102
00:04:17,668 --> 00:04:22,530
simply uploading<font color="#CCCCCC"> a file identifying the</font>

103
00:04:21,390 --> 00:04:23,060
type of vulnerabilities that are

104
00:04:22,530 --> 00:04:26,450
<font color="#E5E5E5">effective</font>

105
00:04:23,060 --> 00:04:29,120
by<font color="#CCCCCC"> this there's a tool called PHP GGC</font>

106
00:04:26,450 --> 00:04:32,360
which is essentially the PHP equivalent

107
00:04:29,120 --> 00:04:35,180
of<font color="#E5E5E5"> Y so serial and the</font><font color="#CCCCCC"> authors kindly</font>

108
00:04:32,360 --> 00:04:37,190
given me<font color="#CCCCCC"> permission to</font><font color="#E5E5E5"> release a branch</font>

109
00:04:35,180 --> 00:04:39,650
alongside this<font color="#E5E5E5"> talk which implements the</font>

110
00:04:37,190 --> 00:04:41,510
techniques I'll be<font color="#CCCCCC"> talking about but it</font>

111
00:04:39,650 --> 00:04:43,429
uses<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the same payloads which are</font>

112
00:04:41,510 --> 00:04:46,639
<font color="#CCCCCC">already</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> but can encapsulate them</font>

113
00:04:43,430 --> 00:04:48,500
in this<font color="#CCCCCC"> far file format the second half</font>

114
00:04:46,639 --> 00:04:50,720
<font color="#CCCCCC">of the presentation</font><font color="#E5E5E5"> is largely looking</font>

115
00:04:48,500 --> 00:04:52,430
at some<font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> case studies I'll</font>

116
00:04:50,720 --> 00:04:54,410
talk briefly<font color="#E5E5E5"> about how we might defend</font>

117
00:04:52,430 --> 00:04:58,840
against<font color="#E5E5E5"> this issue and a few things I'd</font>

118
00:04:54,410 --> 00:05:01,310
like<font color="#CCCCCC"> you to take away from</font><font color="#E5E5E5"> the talk so</font>

119
00:04:58,840 --> 00:05:03,560
<font color="#E5E5E5">largely the first part of this talk is</font>

120
00:05:01,310 --> 00:05:07,700
just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> stuff in the</font><font color="#CCCCCC"> PHP</font>

121
00:05:03,560 --> 00:05:09,979
manual<font color="#CCCCCC"> to explain how I</font><font color="#E5E5E5"> found out the</font>

122
00:05:07,700 --> 00:05:12,740
<font color="#E5E5E5">behavior</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I mentioned earlier</font><font color="#CCCCCC"> and I</font>

123
00:05:09,979 --> 00:05:16,099
found this xkcd comic which I<font color="#E5E5E5"> thought</font>

124
00:05:12,740 --> 00:05:17,600
<font color="#E5E5E5">was particularly apt if it doesn't make</font>

125
00:05:16,100 --> 00:05:19,190
a lot<font color="#CCCCCC"> of sense now hopefully when I've</font>

126
00:05:17,600 --> 00:05:22,820
shown you<font color="#CCCCCC"> a few sections of</font><font color="#E5E5E5"> the manual</font>

127
00:05:19,190 --> 00:05:24,740
<font color="#E5E5E5">you'll begin</font><font color="#CCCCCC"> to see why so this is</font>

128
00:05:22,820 --> 00:05:28,570
<font color="#CCCCCC">Stream wrappers as they're defined in</font>

129
00:05:24,740 --> 00:05:32,150
the PHP<font color="#E5E5E5"> manual</font><font color="#CCCCCC"> and essentially</font><font color="#E5E5E5"> they're a</font>

130
00:05:28,570 --> 00:05:35,050
an interesting<font color="#CCCCCC"> feature which causes</font>

131
00:05:32,150 --> 00:05:39,169
<font color="#E5E5E5">certain complex functionality to kick in</font>

132
00:05:35,050 --> 00:05:41,240
from<font color="#E5E5E5"> any file operation so they should</font>

133
00:05:39,169 --> 00:05:43,159
be<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> familiar to</font><font color="#E5E5E5"> anyone who's done</font>

134
00:05:41,240 --> 00:05:44,960
sort<font color="#E5E5E5"> of exploit development or web app</font>

135
00:05:43,160 --> 00:05:46,520
<font color="#E5E5E5">testing before because they're used in</font>

136
00:05:44,960 --> 00:05:49,640
lots<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> types of</font>

137
00:05:46,520 --> 00:05:52,370
vulnerabilities<font color="#E5E5E5"> so these are all the</font>

138
00:05:49,640 --> 00:05:56,719
Stream wrappers<font color="#E5E5E5"> which are enabled in PHP</font>

139
00:05:52,370 --> 00:06:00,340
by default and I've sort of grouped<font color="#E5E5E5"> four</font>

140
00:05:56,720 --> 00:06:03,830
of them as the remote stream wrappers<font color="#E5E5E5"> so</font>

141
00:06:00,340 --> 00:06:06,950
provided this PHP any setting allow URL

142
00:06:03,830 --> 00:06:09,380
F<font color="#E5E5E5"> open is true then we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> access remote</font>

143
00:06:06,950 --> 00:06:11,570
files as if<font color="#E5E5E5"> they're local files simply</font>

144
00:06:09,380 --> 00:06:15,260
by supplying for instance<font color="#E5E5E5"> the HTTP path</font>

145
00:06:11,570 --> 00:06:17,120
or an FTP path<font color="#E5E5E5"> I've put data into that</font>

146
00:06:15,260 --> 00:06:19,729
<font color="#E5E5E5">group although it's not strictly remote</font>

147
00:06:17,120 --> 00:06:21,770
obviously<font color="#E5E5E5"> you you would include the data</font>

148
00:06:19,729 --> 00:06:24,700
that you wanted to<font color="#E5E5E5"> use in the URL but it</font>

149
00:06:21,770 --> 00:06:28,219
also requires this setting<font color="#CCCCCC"> to be true</font><font color="#E5E5E5"> so</font>

150
00:06:24,700 --> 00:06:31,250
<font color="#CCCCCC">a simple example of where that's used in</font>

151
00:06:28,220 --> 00:06:33,200
exploitation is turning a local file

152
00:06:31,250 --> 00:06:35,670
include into a remote<font color="#E5E5E5"> file include now</font>

153
00:06:33,200 --> 00:06:37,349
there's another PHP any setting which

154
00:06:35,670 --> 00:06:41,490
he controls<font color="#E5E5E5"> whether that</font><font color="#CCCCCC"> works</font><font color="#E5E5E5"> you also</font>

155
00:06:37,350 --> 00:06:45,390
need allow URL include I think to be set

156
00:06:41,490 --> 00:06:47,460
to<font color="#CCCCCC"> true</font><font color="#E5E5E5"> but this is also sort</font><font color="#CCCCCC"> of this</font>

157
00:06:45,390 --> 00:06:49,800
behavior<font color="#CCCCCC"> is what makes a larger number</font>

158
00:06:47,460 --> 00:06:53,310
of<font color="#E5E5E5"> server-side</font><font color="#CCCCCC"> request forgery issues</font>

159
00:06:49,800 --> 00:06:54,930
<font color="#E5E5E5">exist so if we have control of the</font>

160
00:06:53,310 --> 00:06:57,450
variable that's<font color="#E5E5E5"> used in a call to file</font>

161
00:06:54,930 --> 00:07:00,060
get contents and<font color="#E5E5E5"> we give it an HTTP path</font>

162
00:06:57,450 --> 00:07:01,650
or an<font color="#E5E5E5"> FTP path then it will go off and</font>

163
00:07:00,060 --> 00:07:03,360
remotely retrieve something<font color="#E5E5E5"> and</font>

164
00:07:01,650 --> 00:07:06,780
obviously<font color="#E5E5E5"> that could be an issue and</font>

165
00:07:03,360 --> 00:07:09,240
it's the same behavior that's used for

166
00:07:06,780 --> 00:07:12,510
<font color="#E5E5E5">any external communication from an</font><font color="#CCCCCC"> xxe</font>

167
00:07:09,240 --> 00:07:16,950
issue the<font color="#E5E5E5"> next interesting stream</font>

168
00:07:12,510 --> 00:07:18,840
wrapper is the PHP<font color="#E5E5E5"> stream wrapper one</font>

169
00:07:16,950 --> 00:07:22,140
way this has<font color="#E5E5E5"> been used in a number</font><font color="#CCCCCC"> of</font>

170
00:07:18,840 --> 00:07:24,239
exploits<font color="#CCCCCC"> is if we have PHP code</font><font color="#E5E5E5"> on slash</font>

171
00:07:22,140 --> 00:07:26,610
<font color="#E5E5E5">/ input that kind of grabs standard i/o</font>

172
00:07:24,240 --> 00:07:29,160
and treats<font color="#E5E5E5"> it as</font><font color="#CCCCCC"> if it's a file so if</font>

173
00:07:26,610 --> 00:07:30,510
we're in<font color="#E5E5E5"> a web server web application</font>

174
00:07:29,160 --> 00:07:32,580
scenario that's generally what you've

175
00:07:30,510 --> 00:07:36,060
posted<font color="#E5E5E5"> to the page</font><font color="#CCCCCC"> but it</font><font color="#E5E5E5"> will be</font>

176
00:07:32,580 --> 00:07:38,190
treated<font color="#CCCCCC"> as</font><font color="#E5E5E5"> if it's a file</font><font color="#CCCCCC"> if you have a</font>

177
00:07:36,060 --> 00:07:40,800
local<font color="#CCCCCC"> file include issue</font><font color="#E5E5E5"> and you want to</font>

178
00:07:38,190 --> 00:07:42,719
read the source code of<font color="#CCCCCC"> a file obviously</font>

179
00:07:40,800 --> 00:07:45,750
if you try to include a PHP file that

180
00:07:42,720 --> 00:07:47,160
will<font color="#CCCCCC"> be executed</font><font color="#E5E5E5"> but this stream wrapper</font>

181
00:07:45,750 --> 00:07:50,940
has<font color="#E5E5E5"> this interesting feature called</font>

182
00:07:47,160 --> 00:07:52,620
filters<font color="#E5E5E5"> so we could basics before encode</font>

183
00:07:50,940 --> 00:07:54,480
<font color="#E5E5E5">a file</font><font color="#CCCCCC"> before it's included</font><font color="#E5E5E5"> and then</font>

184
00:07:52,620 --> 00:07:57,810
decode that<font color="#CCCCCC"> on our end and</font><font color="#E5E5E5"> read the</font>

185
00:07:54,480 --> 00:07:59,730
source code from<font color="#E5E5E5"> a file and as Stefan</font>

186
00:07:57,810 --> 00:08:02,280
<font color="#CCCCCC">essa made the</font><font color="#E5E5E5"> really clever use of</font><font color="#CCCCCC"> this</font>

187
00:07:59,730 --> 00:08:04,830
<font color="#E5E5E5">filter feature in a certain</font><font color="#CCCCCC"> scenario and</font>

188
00:08:02,280 --> 00:08:07,590
one of his first<font color="#E5E5E5"> unsee</font><font color="#CCCCCC"> realization</font>

189
00:08:04,830 --> 00:08:10,650
exploits<font color="#E5E5E5"> so he managed</font><font color="#CCCCCC"> to put together a</font>

190
00:08:07,590 --> 00:08:12,150
gadget chain which resulted in writing

191
00:08:10,650 --> 00:08:14,880
some data to a file but this was

192
00:08:12,150 --> 00:08:17,729
prefixed<font color="#E5E5E5"> with this sort of PHP Die</font>

193
00:08:14,880 --> 00:08:21,290
command<font color="#E5E5E5"> which would prevent any anything</font>

194
00:08:17,730 --> 00:08:23,790
<font color="#E5E5E5">after that from running but if we simply</font>

195
00:08:21,290 --> 00:08:25,800
base64 decode what's being written to

196
00:08:23,790 --> 00:08:28,680
the file then that would sort<font color="#E5E5E5"> of nullify</font>

197
00:08:25,800 --> 00:08:31,980
this this sequence<font color="#E5E5E5"> and he could execute</font>

198
00:08:28,680 --> 00:08:33,840
<font color="#E5E5E5">code the next stream</font><font color="#CCCCCC"> wrapper</font><font color="#E5E5E5"> there's one</font>

199
00:08:31,980 --> 00:08:35,310
called glob<font color="#E5E5E5"> which whenever I'm looking</font>

200
00:08:33,840 --> 00:08:36,960
<font color="#CCCCCC">through these I think</font><font color="#E5E5E5"> is going to be</font>

201
00:08:35,309 --> 00:08:39,270
<font color="#E5E5E5">really useful and sort of allow you to</font>

202
00:08:36,960 --> 00:08:41,010
get directory listings<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it doesn't</font>

203
00:08:39,270 --> 00:08:44,640
work the same<font color="#CCCCCC"> as the others so you can't</font>

204
00:08:41,010 --> 00:08:47,460
file get contents on a glob URL and get

205
00:08:44,640 --> 00:08:48,660
<font color="#CCCCCC">a listing</font><font color="#E5E5E5"> of files this is the</font><font color="#CCCCCC"> example</font>

206
00:08:47,460 --> 00:08:50,850
they give<font color="#CCCCCC"> him</font><font color="#E5E5E5"> the manual</font>

207
00:08:48,660 --> 00:08:56,579
so they use a directory iterator<font color="#E5E5E5"> with a</font>

208
00:08:50,850 --> 00:08:58,470
with a<font color="#CCCCCC"> glob</font><font color="#E5E5E5"> URL or URI and similarly</font>

209
00:08:56,580 --> 00:09:00,030
<font color="#E5E5E5">each stream</font><font color="#CCCCCC"> rapper kind of has a list of</font>

210
00:08:58,470 --> 00:09:03,780
<font color="#CCCCCC">what</font><font color="#E5E5E5"> features it supports</font><font color="#CCCCCC"> and glob</font>

211
00:09:00,030 --> 00:09:05,339
<font color="#E5E5E5">literally supports none of them okay so</font>

212
00:09:03,780 --> 00:09:07,380
then there's two stream rappers left

213
00:09:05,340 --> 00:09:09,210
<font color="#E5E5E5">which these are you know of the ones</font>

214
00:09:07,380 --> 00:09:10,950
enabled by default and<font color="#E5E5E5"> one is</font><font color="#CCCCCC"> dead live</font>

215
00:09:09,210 --> 00:09:14,270
and one is far and<font color="#E5E5E5"> these are both for</font>

216
00:09:10,950 --> 00:09:16,620
dealing<font color="#E5E5E5"> with</font><font color="#CCCCCC"> archive files and so</font>

217
00:09:14,270 --> 00:09:17,970
looking<font color="#E5E5E5"> at them you know very briefly</font>

218
00:09:16,620 --> 00:09:20,340
they look<font color="#E5E5E5"> like they'll be quite boring</font>

219
00:09:17,970 --> 00:09:22,950
maybe there'll be some issues with the

220
00:09:20,340 --> 00:09:25,320
native code<font color="#E5E5E5"> and we can sort of give a</font>

221
00:09:22,950 --> 00:09:27,990
<font color="#E5E5E5">corrupted archive or a maliciously</font>

222
00:09:25,320 --> 00:09:31,230
constructed archive and try to<font color="#CCCCCC"> hijack</font>

223
00:09:27,990 --> 00:09:33,060
the system that way exploiting an issue

224
00:09:31,230 --> 00:09:35,760
like<font color="#E5E5E5"> that's likely to be quite difficult</font>

225
00:09:33,060 --> 00:09:37,619
<font color="#E5E5E5">in the presence of modern mitigation</font>

226
00:09:35,760 --> 00:09:40,319
<font color="#E5E5E5">sort of a SLR and</font><font color="#CCCCCC"> depth and</font><font color="#E5E5E5"> things like</font>

227
00:09:37,620 --> 00:09:43,260
<font color="#E5E5E5">that obviously</font><font color="#CCCCCC"> I wouldn't be giving this</font>

228
00:09:40,320 --> 00:09:45,300
talk if we finished there so what

229
00:09:43,260 --> 00:09:48,270
happened is I had<font color="#CCCCCC"> a more detailed look</font>

230
00:09:45,300 --> 00:09:49,920
at this far<font color="#E5E5E5"> wrapper</font><font color="#CCCCCC"> because I've never</font>

231
00:09:48,270 --> 00:09:52,530
<font color="#E5E5E5">heard</font><font color="#CCCCCC"> of the file format before</font><font color="#E5E5E5"> you know</font>

232
00:09:49,920 --> 00:09:54,719
<font color="#E5E5E5">what's actually in a far archive so</font>

233
00:09:52,530 --> 00:09:56,939
<font color="#E5E5E5">immediately upon looking at the elements</font>

234
00:09:54,720 --> 00:09:59,670
<font color="#CCCCCC">of the archive and again this is another</font>

235
00:09:56,940 --> 00:10:01,290
<font color="#E5E5E5">excerpt from the manual the first thing</font>

236
00:09:59,670 --> 00:10:04,050
they list is in an archive is called<font color="#CCCCCC"> the</font>

237
00:10:01,290 --> 00:10:07,230
stub<font color="#E5E5E5"> and the stub contains PHP code</font>

238
00:10:04,050 --> 00:10:08,699
which<font color="#E5E5E5"> you know anyone doing offensive</font>

239
00:10:07,230 --> 00:10:11,700
security<font color="#CCCCCC"> that</font><font color="#E5E5E5"> immediately looks</font>

240
00:10:08,700 --> 00:10:13,890
interesting<font color="#CCCCCC"> I'd love to say that</font><font color="#E5E5E5"> the</font>

241
00:10:11,700 --> 00:10:15,840
stuff I'm gonna talk<font color="#CCCCCC"> about today I sort</font>

242
00:10:13,890 --> 00:10:18,720
<font color="#CCCCCC">of did some complex code analysis</font><font color="#E5E5E5"> and</font>

243
00:10:15,840 --> 00:10:20,160
and found<font color="#E5E5E5"> the issue but</font><font color="#CCCCCC"> to be honest I</font>

244
00:10:18,720 --> 00:10:21,900
read the manual and tried some silly

245
00:10:20,160 --> 00:10:25,560
stuff and one silly thing worked

246
00:10:21,900 --> 00:10:27,780
so the first<font color="#E5E5E5"> anything I tried was</font><font color="#CCCCCC"> to</font>

247
00:10:25,560 --> 00:10:30,060
write a simple<font color="#E5E5E5"> test program to</font><font color="#CCCCCC"> generate</font>

248
00:10:27,780 --> 00:10:32,400
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these archives with the stub set</font>

249
00:10:30,060 --> 00:10:35,550
to some code<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just echo</font><font color="#CCCCCC"> out something</font>

250
00:10:32,400 --> 00:10:37,410
if the stub<font color="#E5E5E5"> was running and then tried</font>

251
00:10:35,550 --> 00:10:39,319
accessing<font color="#E5E5E5"> a file within that archive</font>

252
00:10:37,410 --> 00:10:42,689
through<font color="#CCCCCC"> the stream wrapper and</font>

253
00:10:39,320 --> 00:10:45,480
unsurprisingly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> stub doesn't execute</font>

254
00:10:42,690 --> 00:10:47,220
and just to sort<font color="#CCCCCC"> of confirm</font><font color="#E5E5E5"> everything</font>

255
00:10:45,480 --> 00:10:49,590
was working<font color="#CCCCCC"> right</font><font color="#E5E5E5"> I executed that</font>

256
00:10:47,220 --> 00:10:51,930
archive and the<font color="#CCCCCC"> stub indeed gets</font>

257
00:10:49,590 --> 00:10:53,910
executed<font color="#CCCCCC"> and as</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> as I can tell</font><font color="#E5E5E5"> that's</font>

258
00:10:51,930 --> 00:10:56,219
actually the<font color="#E5E5E5"> only way to</font><font color="#CCCCCC"> activate the</font>

259
00:10:53,910 --> 00:10:59,459
stub so you would need one<font color="#E5E5E5"> of these file</font>

260
00:10:56,220 --> 00:11:01,440
files to be executed<font color="#E5E5E5"> which would mean</font>

261
00:10:59,460 --> 00:11:02,279
essentially<font color="#E5E5E5"> you know if I could execute</font>

262
00:11:01,440 --> 00:11:04,379
<font color="#CCCCCC">a file file</font>

263
00:11:02,279 --> 00:11:07,860
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> execute a PHP file so it's not</font>

264
00:11:04,379 --> 00:11:09,930
buying me anything<font color="#E5E5E5"> but not wanting</font><font color="#CCCCCC"> to be</font>

265
00:11:07,860 --> 00:11:11,850
deterred we look at the next<font color="#CCCCCC"> element in</font>

266
00:11:09,930 --> 00:11:13,529
all<font color="#E5E5E5"> fire files and it has something</font>

267
00:11:11,850 --> 00:11:15,990
<font color="#CCCCCC">called a manifest and there's another</font>

268
00:11:13,529 --> 00:11:17,970
page<font color="#CCCCCC"> in the manual which lists what's in</font>

269
00:11:15,990 --> 00:11:19,709
a manifest<font color="#CCCCCC"> and there was one thing which</font>

270
00:11:17,970 --> 00:11:22,709
immediately<font color="#E5E5E5"> grabbed my</font><font color="#CCCCCC"> attention so a</font>

271
00:11:19,709 --> 00:11:25,800
manifest can contain serialized metadata

272
00:11:22,709 --> 00:11:30,800
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> serialized in the standard PHP</font>

273
00:11:25,800 --> 00:11:33,479
<font color="#E5E5E5">form so again</font><font color="#CCCCCC"> I tried something</font><font color="#E5E5E5"> stupid</font><font color="#CCCCCC"> a</font>

274
00:11:30,800 --> 00:11:35,399
<font color="#CCCCCC">simple test program which defines a</font>

275
00:11:33,480 --> 00:11:38,029
<font color="#E5E5E5">class called test object and sets the</font>

276
00:11:35,399 --> 00:11:40,529
<font color="#E5E5E5">metadata to an instance of this class</font>

277
00:11:38,029 --> 00:11:42,329
<font color="#E5E5E5">then I ran another</font><font color="#CCCCCC"> test program which</font>

278
00:11:40,529 --> 00:11:45,300
defines this class<font color="#E5E5E5"> again but this time</font>

279
00:11:42,329 --> 00:11:48,239
includes<font color="#E5E5E5"> a destructor so that if this</font>

280
00:11:45,300 --> 00:11:51,628
object is<font color="#CCCCCC"> uncivilized and then destroyed</font>

281
00:11:48,240 --> 00:11:54,600
we would see the destructor get executed

282
00:11:51,629 --> 00:11:56,970
and<font color="#CCCCCC"> so I tried my silly test program and</font>

283
00:11:54,600 --> 00:11:59,069
much to<font color="#CCCCCC"> my</font><font color="#E5E5E5"> surprise</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually worked</font>

284
00:11:56,970 --> 00:11:59,970
<font color="#E5E5E5">and I guess if I hadn't told you all</font>

285
00:11:59,069 --> 00:12:04,110
<font color="#E5E5E5">this was coming</font>

286
00:11:59,970 --> 00:12:05,670
you'd probably go<font color="#E5E5E5"> something like this so</font>

287
00:12:04,110 --> 00:12:08,910
sort of<font color="#E5E5E5"> to confirm</font><font color="#CCCCCC"> everything was</font>

288
00:12:05,670 --> 00:12:10,319
working<font color="#CCCCCC"> how I expected I tried changing</font>

289
00:12:08,910 --> 00:12:13,889
<font color="#E5E5E5">a couple of things so I wrote another</font>

290
00:12:10,319 --> 00:12:15,599
<font color="#E5E5E5">test test program instead of grabbing</font>

291
00:12:13,889 --> 00:12:18,300
<font color="#E5E5E5">the contents</font><font color="#CCCCCC"> of a file let's just check</font>

292
00:12:15,600 --> 00:12:20,490
if that<font color="#E5E5E5"> file exists now to me this seems</font>

293
00:12:18,300 --> 00:12:22,109
<font color="#E5E5E5">like probably the least significant file</font>

294
00:12:20,490 --> 00:12:24,300
<font color="#E5E5E5">operation all you would think the least</font>

295
00:12:22,110 --> 00:12:25,559
risky is a developer<font color="#E5E5E5"> like the worst</font>

296
00:12:24,300 --> 00:12:28,109
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> that's going</font><font color="#E5E5E5"> to happen</font><font color="#CCCCCC"> is someone</font>

297
00:12:25,559 --> 00:12:31,680
<font color="#E5E5E5">can figure out if a local file exists or</font>

298
00:12:28,110 --> 00:12:35,040
not<font color="#CCCCCC"> similarly</font><font color="#E5E5E5"> we can change the path</font>

299
00:12:31,680 --> 00:12:36,989
after<font color="#E5E5E5"> the name of the archive to just</font>

300
00:12:35,040 --> 00:12:39,059
some<font color="#CCCCCC"> gibberish to see what it</font><font color="#E5E5E5"> will say</font>

301
00:12:36,990 --> 00:12:41,790
<font color="#E5E5E5">to a file that</font><font color="#CCCCCC"> clearly doesn't exist</font><font color="#E5E5E5"> and</font>

302
00:12:39,059 --> 00:12:44,819
in both<font color="#CCCCCC"> cases</font><font color="#E5E5E5"> the destructor runs again</font>

303
00:12:41,790 --> 00:12:46,679
and so<font color="#CCCCCC"> hopefully that Manion that</font>

304
00:12:44,819 --> 00:12:51,389
<font color="#E5E5E5">cartoon now makes a</font><font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> more</font>

305
00:12:46,679 --> 00:12:53,759
sense<font color="#CCCCCC"> so sort</font><font color="#E5E5E5"> of from this information a</font>

306
00:12:51,389 --> 00:12:56,759
really obvious approach<font color="#E5E5E5"> to an attack</font>

307
00:12:53,759 --> 00:12:58,230
emerges<font color="#CCCCCC"> there'll be two steps if we can</font>

308
00:12:56,759 --> 00:13:00,540
get one<font color="#CCCCCC"> of these archives onto the</font>

309
00:12:58,230 --> 00:13:02,189
<font color="#E5E5E5">target and then trigger some operation</font>

310
00:13:00,540 --> 00:13:04,110
with the<font color="#E5E5E5"> stream wrapper upon it we can</font>

311
00:13:02,189 --> 00:13:07,079
<font color="#CCCCCC">uncie realize sort of an</font><font color="#E5E5E5"> arbitrary</font>

312
00:13:04,110 --> 00:13:09,809
payload this is quite similar<font color="#CCCCCC"> to local</font>

313
00:13:07,079 --> 00:13:11,370
file include and indeed later I'll<font color="#CCCCCC"> talk</font>

314
00:13:09,809 --> 00:13:13,439
<font color="#CCCCCC">about</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the inspiration we can</font>

315
00:13:11,370 --> 00:13:15,430
take from different ways<font color="#E5E5E5"> people have</font>

316
00:13:13,439 --> 00:13:19,569
<font color="#E5E5E5">come up with</font><font color="#CCCCCC"> or</font>

317
00:13:15,430 --> 00:13:21,069
<font color="#E5E5E5">exploiting local file include for people</font>

318
00:13:19,570 --> 00:13:24,220
who are more familiar with<font color="#E5E5E5"> the</font>

319
00:13:21,070 --> 00:13:26,560
<font color="#E5E5E5">traditional issue these are kind of</font><font color="#CCCCCC"> this</font>

320
00:13:24,220 --> 00:13:29,020
a<font color="#E5E5E5"> couple of small things</font><font color="#CCCCCC"> I bear in mind</font>

321
00:13:26,560 --> 00:13:31,239
when we're exploiting<font color="#E5E5E5"> this issue so I</font>

322
00:13:29,020 --> 00:13:33,220
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> hinted at it earlier</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> this</font>

323
00:13:31,240 --> 00:13:35,470
happens the application<font color="#E5E5E5"> has had no</font>

324
00:13:33,220 --> 00:13:36,880
intention to<font color="#E5E5E5"> unsee realized our data so</font>

325
00:13:35,470 --> 00:13:39,760
it's<font color="#E5E5E5"> not going to do anything with</font><font color="#CCCCCC"> it it</font>

326
00:13:36,880 --> 00:13:42,160
just<font color="#E5E5E5"> sits there</font><font color="#CCCCCC"> so the only sort of</font>

327
00:13:39,760 --> 00:13:45,720
<font color="#CCCCCC">payloads which we can use have to either</font>

328
00:13:42,160 --> 00:13:48,339
<font color="#E5E5E5">be started by wake up or destruct and</font>

329
00:13:45,720 --> 00:13:50,110
there's this unusual behavior with the

330
00:13:48,339 --> 00:13:52,990
destruct<font color="#E5E5E5"> change that for whatever reason</font>

331
00:13:50,110 --> 00:13:54,670
<font color="#CCCCCC">the object is garbage collected</font><font color="#E5E5E5"> I think</font>

332
00:13:52,990 --> 00:13:57,490
probably<font color="#CCCCCC"> after the rest of the</font>

333
00:13:54,670 --> 00:13:59,020
application<font color="#CCCCCC"> has run but for some reason</font>

334
00:13:57,490 --> 00:14:01,000
it sort of lost<font color="#CCCCCC"> the context of the</font>

335
00:13:59,020 --> 00:14:03,459
<font color="#CCCCCC">application so any file operations that</font>

336
00:14:01,000 --> 00:14:07,600
we do in that chain have to use absolute

337
00:14:03,459 --> 00:14:09,760
<font color="#CCCCCC">pass and the final Empire</font><font color="#E5E5E5"> no sorry I've</font>

338
00:14:07,600 --> 00:14:14,140
skipped an elephant an elephant<font color="#CCCCCC"> an</font>

339
00:14:09,760 --> 00:14:16,480
element<font color="#CCCCCC"> there'd</font><font color="#E5E5E5"> be the</font><font color="#CCCCCC"> file contents are</font>

340
00:14:14,140 --> 00:14:18,310
<font color="#CCCCCC">the file contents bol so there's a</font>

341
00:14:16,480 --> 00:14:20,770
<font color="#E5E5E5">there's a signature which it says</font><font color="#CCCCCC"> is</font>

342
00:14:18,310 --> 00:14:23,260
optional<font color="#E5E5E5"> but again this is a PHP any</font>

343
00:14:20,770 --> 00:14:25,029
<font color="#E5E5E5">setting which by default is</font><font color="#CCCCCC"> set so that</font>

344
00:14:23,260 --> 00:14:29,319
<font color="#E5E5E5">we need a signature so as an attacker</font>

345
00:14:25,029 --> 00:14:30,520
that's not optional for<font color="#E5E5E5"> us hopefully by</font>

346
00:14:29,320 --> 00:14:32,410
this point<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> got bored</font><font color="#CCCCCC"> of the</font>

347
00:14:30,520 --> 00:14:35,079
manual and<font color="#CCCCCC"> will trust me if I tell you a</font>

348
00:14:32,410 --> 00:14:37,240
few<font color="#E5E5E5"> more details about the file so so</font>

349
00:14:35,080 --> 00:14:39,580
there's three valid file formats for<font color="#E5E5E5"> for</font>

350
00:14:37,240 --> 00:14:41,770
archives<font color="#E5E5E5"> there's this sort of base file</font>

351
00:14:39,580 --> 00:14:43,480
format<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a tar version of the</font>

352
00:14:41,770 --> 00:14:45,160
format<font color="#E5E5E5"> and a zip version of the format</font>

353
00:14:43,480 --> 00:14:47,350
<font color="#E5E5E5">but for the rest of the talk I'm</font><font color="#CCCCCC"> going</font>

354
00:14:45,160 --> 00:14:49,480
to ignore<font color="#CCCCCC"> the zip format it could be</font>

355
00:14:47,350 --> 00:14:51,910
useful<font color="#E5E5E5"> if we're targeting an application</font>

356
00:14:49,480 --> 00:14:54,220
which has some legitimate functionality

357
00:14:51,910 --> 00:14:55,779
which allows<font color="#CCCCCC"> us to upload a zip file but</font>

358
00:14:54,220 --> 00:14:57,750
the<font color="#E5E5E5"> other two offers some interesting</font>

359
00:14:55,779 --> 00:15:00,070
flexibility that I wanted<font color="#CCCCCC"> to talk about</font>

360
00:14:57,750 --> 00:15:02,950
so the first one we'll start<font color="#CCCCCC"> with</font><font color="#E5E5E5"> is the</font>

361
00:15:00,070 --> 00:15:05,800
base file format and I've done sort of<font color="#E5E5E5"> a</font>

362
00:15:02,950 --> 00:15:07,779
hex dump<font color="#E5E5E5"> of one of those test files that</font>

363
00:15:05,800 --> 00:15:09,520
I generated with these test programs and

364
00:15:07,779 --> 00:15:12,670
we can see the different elements

365
00:15:09,520 --> 00:15:14,800
highlighted of<font color="#E5E5E5"> a fire archive so in</font>

366
00:15:12,670 --> 00:15:17,260
terms of uncie realization the the green

367
00:15:14,800 --> 00:15:19,209
bit here is the serialized<font color="#CCCCCC"> data in the</font>

368
00:15:17,260 --> 00:15:21,069
standard PHP form but<font color="#E5E5E5"> what I sort of</font>

369
00:15:19,209 --> 00:15:24,160
really want you<font color="#E5E5E5"> to notice from this is</font>

370
00:15:21,070 --> 00:15:26,440
that<font color="#CCCCCC"> the stub although the stubs no use</font>

371
00:15:24,160 --> 00:15:28,480
for running code it's the first thing<font color="#E5E5E5"> in</font>

372
00:15:26,440 --> 00:15:29,080
<font color="#CCCCCC">the archive</font><font color="#E5E5E5"> and we can put anything in</font>

373
00:15:28,480 --> 00:15:30,700
there

374
00:15:29,080 --> 00:15:33,940
<font color="#E5E5E5">as long as</font><font color="#CCCCCC"> we have this small piece of</font>

375
00:15:30,700 --> 00:15:35,380
PHP code so we can prefix this but then

376
00:15:33,940 --> 00:15:37,600
I<font color="#CCCCCC"> think we want and it will still be a</font>

377
00:15:35,380 --> 00:15:39,100
valid<font color="#CCCCCC"> fire</font><font color="#E5E5E5"> archive provided that we</font>

378
00:15:37,600 --> 00:15:42,820
calculate<font color="#CCCCCC"> a</font><font color="#E5E5E5"> signature and everything</font>

379
00:15:39,100 --> 00:15:44,830
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is saying</font>

380
00:15:42,820 --> 00:15:47,920
<font color="#E5E5E5">essentially the same as I just said so</font>

381
00:15:44,830 --> 00:15:50,230
<font color="#E5E5E5">so we can make a pretty good fake of any</font>

382
00:15:47,920 --> 00:15:53,349
file format by putting data in front of

383
00:15:50,230 --> 00:15:54,760
the fire archive one important<font color="#CCCCCC"> detail is</font>

384
00:15:53,350 --> 00:15:56,590
<font color="#E5E5E5">that we literally can't put anything</font>

385
00:15:54,760 --> 00:15:59,620
after<font color="#E5E5E5"> it so the signature was the last</font>

386
00:15:56,590 --> 00:16:02,260
<font color="#E5E5E5">thing in the archive and literally any</font>

387
00:15:59,620 --> 00:16:05,170
single<font color="#E5E5E5"> byte after that</font><font color="#CCCCCC"> G BMB will cause</font>

388
00:16:02,260 --> 00:16:07,140
it to no longer be a valid archive<font color="#E5E5E5"> so</font>

389
00:16:05,170 --> 00:16:09,490
there's some circumstances in<font color="#E5E5E5"> which</font>

390
00:16:07,140 --> 00:16:13,120
flexibility elsewhere would<font color="#E5E5E5"> be useful to</font>

391
00:16:09,490 --> 00:16:14,860
us and<font color="#E5E5E5"> tar is quite a complicated file</font>

392
00:16:13,120 --> 00:16:17,380
format I'm not going to go<font color="#E5E5E5"> into the full</font>

393
00:16:14,860 --> 00:16:19,090
<font color="#CCCCCC">details of tar but these are the details</font>

394
00:16:17,380 --> 00:16:21,880
that<font color="#CCCCCC"> are interesting to us in terms of</font>

395
00:16:19,090 --> 00:16:24,520
<font color="#E5E5E5">this attack and essentially particularly</font>

396
00:16:21,880 --> 00:16:28,030
<font color="#E5E5E5">these two details so the first a hundred</font>

397
00:16:24,520 --> 00:16:31,630
bytes of a sort of tar encapsulated<font color="#E5E5E5"> fire</font>

398
00:16:28,030 --> 00:16:33,339
archive and indeed any tar file the file

399
00:16:31,630 --> 00:16:34,750
name of<font color="#E5E5E5"> the first file so there's no</font>

400
00:16:33,340 --> 00:16:37,240
reason we shouldn't be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> change</font>

401
00:16:34,750 --> 00:16:39,160
that and the end of the archive is

402
00:16:37,240 --> 00:16:41,560
marked by<font color="#CCCCCC"> a thousand and</font><font color="#E5E5E5"> twenty four now</font>

403
00:16:39,160 --> 00:16:45,310
bytes<font color="#E5E5E5"> and critically everything after</font>

404
00:16:41,560 --> 00:16:47,650
this is ignored<font color="#E5E5E5"> so what we can do is</font>

405
00:16:45,310 --> 00:16:50,199
take a simple<font color="#E5E5E5"> this is a simple sort of</font>

406
00:16:47,650 --> 00:16:52,870
test archive that<font color="#E5E5E5"> are generated and I</font>

407
00:16:50,200 --> 00:16:56,980
can change<font color="#E5E5E5"> the</font><font color="#CCCCCC"> file name</font><font color="#E5E5E5"> provided that I</font>

408
00:16:52,870 --> 00:16:58,420
fix up the checksum and I'm going<font color="#E5E5E5"> to</font>

409
00:16:56,980 --> 00:17:00,520
explain<font color="#CCCCCC"> to you what I've changed</font><font color="#E5E5E5"> that</font>

410
00:16:58,420 --> 00:17:03,430
<font color="#E5E5E5">file name</font><font color="#CCCCCC"> too so the first two bytes are</font>

411
00:17:00,520 --> 00:17:05,770
a jpg header the second two bytes are

412
00:17:03,430 --> 00:17:07,569
saying this is<font color="#E5E5E5"> a common and the next two</font>

413
00:17:05,770 --> 00:17:08,920
bytes are the length of that comment now

414
00:17:07,569 --> 00:17:12,730
I've set the length so it encapsulates

415
00:17:08,920 --> 00:17:14,949
<font color="#E5E5E5">the whole archive including the 1024</font>

416
00:17:12,730 --> 00:17:18,970
<font color="#E5E5E5">zero bytes at the end and then we can</font>

417
00:17:14,949 --> 00:17:22,089
simply carry on the<font color="#CCCCCC"> jpg file and be both</font>

418
00:17:18,970 --> 00:17:25,270
a valid<font color="#CCCCCC"> file / tar archive and a</font><font color="#E5E5E5"> valid</font>

419
00:17:22,089 --> 00:17:26,829
<font color="#CCCCCC">JPEG</font><font color="#E5E5E5"> so I'm just</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> sort of</font>

420
00:17:25,270 --> 00:17:32,560
<font color="#E5E5E5">quickly</font><font color="#CCCCCC"> try and demonstrate that with</font>

421
00:17:26,829 --> 00:17:34,800
the picture so on my desktop<font color="#E5E5E5"> I've got a</font>

422
00:17:32,560 --> 00:17:37,810
picture<font color="#E5E5E5"> of my cat</font>

423
00:17:34,800 --> 00:17:40,050
<font color="#CCCCCC">but if I change the</font><font color="#E5E5E5"> filename of this</font>

424
00:17:37,810 --> 00:17:40,050
picture

425
00:17:41,180 --> 00:17:49,760
<font color="#CCCCCC">I can remember I wants to tell me</font>

426
00:17:45,650 --> 00:17:52,430
<font color="#CCCCCC">something oh yeah so it's got this</font>

427
00:17:49,760 --> 00:17:54,410
unusually named file in it but it's also

428
00:17:52,430 --> 00:17:58,660
got all<font color="#E5E5E5"> the elements which make up a</font>

429
00:17:54,410 --> 00:18:02,960
<font color="#E5E5E5">fire archive so it's got the stub and</font>

430
00:17:58,660 --> 00:18:07,310
it's got the<font color="#E5E5E5"> metadata which is in the</font>

431
00:18:02,960 --> 00:18:08,800
standard PHP serialized format<font color="#E5E5E5"> and it's</font>

432
00:18:07,310 --> 00:18:14,200
got the signature which isn't<font color="#CCCCCC"> really</font>

433
00:18:08,800 --> 00:18:16,790
sort of readable<font color="#CCCCCC"> there so that file is</font>

434
00:18:14,200 --> 00:18:21,520
you know a perfect polyglot<font color="#E5E5E5"> it's it is</font>

435
00:18:16,790 --> 00:18:21,520
both a valid<font color="#E5E5E5"> JPEG and</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> valid archive</font>

436
00:18:23,500 --> 00:18:28,190
<font color="#E5E5E5">okay so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mentioned sort of thinking</font>

437
00:18:26,660 --> 00:18:29,930
<font color="#CCCCCC">about other</font><font color="#E5E5E5"> ways we might get one of</font>

438
00:18:28,190 --> 00:18:32,810
these<font color="#E5E5E5"> files onto the target if we can't</font>

439
00:18:29,930 --> 00:18:34,730
just<font color="#E5E5E5"> stop load it we can look at a few</font>

440
00:18:32,810 --> 00:18:38,480
<font color="#CCCCCC">tricks people</font><font color="#E5E5E5"> have developed</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> a local</font>

441
00:18:34,730 --> 00:18:41,390
file includes<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Brett</font><font color="#E5E5E5"> Moore came up</font>

442
00:18:38,480 --> 00:18:44,990
with this technique using<font color="#E5E5E5"> PHP info where</font>

443
00:18:41,390 --> 00:18:49,820
if you post anything<font color="#CCCCCC"> to a PHP file that</font>

444
00:18:44,990 --> 00:18:51,800
so if you post a file to a<font color="#CCCCCC"> PHP</font><font color="#E5E5E5"> page it</font>

445
00:18:49,820 --> 00:18:53,899
will save a copy of<font color="#CCCCCC"> that file in the</font>

446
00:18:51,800 --> 00:18:58,250
<font color="#E5E5E5">temporary</font><font color="#CCCCCC"> directory</font><font color="#E5E5E5"> and populate the</font>

447
00:18:53,900 --> 00:19:00,470
<font color="#CCCCCC">dollar underscore files variable and PHP</font>

448
00:18:58,250 --> 00:19:02,660
<font color="#E5E5E5">info gives you a dump of this file</font>

449
00:19:00,470 --> 00:19:05,000
but once PHP info is finished running

450
00:19:02,660 --> 00:19:08,150
that file will be deleted<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what you</font>

451
00:19:05,000 --> 00:19:10,790
can do is essentially<font color="#E5E5E5"> sort of stall PHP</font>

452
00:19:08,150 --> 00:19:12,230
info from returning<font color="#E5E5E5"> everything and that</font>

453
00:19:10,790 --> 00:19:15,590
file sits there and you've<font color="#CCCCCC"> got the name</font>

454
00:19:12,230 --> 00:19:18,950
<font color="#E5E5E5">of it</font><font color="#CCCCCC"> and similarly</font><font color="#E5E5E5"> a guy could</font><font color="#CCCCCC"> Jimmy</font>

455
00:19:15,590 --> 00:19:21,530
Rams<font color="#E5E5E5"> mark demonstrated that the entropy</font>

456
00:19:18,950 --> 00:19:23,180
basically isn't<font color="#E5E5E5"> very good in windows in</font>

457
00:19:21,530 --> 00:19:25,310
particular with<font color="#CCCCCC"> its temporary files so</font>

458
00:19:23,180 --> 00:19:29,060
it's not<font color="#E5E5E5"> that</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> brute-force</font>

459
00:19:25,310 --> 00:19:30,830
<font color="#CCCCCC">the name of a temporary file</font><font color="#E5E5E5"> if we have</font>

460
00:19:29,060 --> 00:19:33,169
some primitive like the one shown<font color="#E5E5E5"> on the</font>

461
00:19:30,830 --> 00:19:35,449
slide where<font color="#E5E5E5"> we can completely control a</font>

462
00:19:33,170 --> 00:19:37,430
session variable<font color="#CCCCCC"> then</font><font color="#E5E5E5"> we can do</font>

463
00:19:35,450 --> 00:19:40,070
something<font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> to why I showed</font>

464
00:19:37,430 --> 00:19:42,830
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> JPEG provided within the first</font>

465
00:19:40,070 --> 00:19:44,720
100 bytes we can cause the session file

466
00:19:42,830 --> 00:19:46,689
to both be the valid session file and a

467
00:19:44,720 --> 00:19:48,490
<font color="#E5E5E5">valid archive and</font>

468
00:19:46,690 --> 00:19:50,560
<font color="#CCCCCC">being a reference</font><font color="#E5E5E5"> that through the</font>

469
00:19:48,490 --> 00:19:52,030
stream<font color="#CCCCCC"> wrapper there's a</font><font color="#E5E5E5"> couple of other</font>

470
00:19:50,560 --> 00:19:53,350
<font color="#E5E5E5">ones I've listed there which are things</font>

471
00:19:52,030 --> 00:19:56,950
<font color="#E5E5E5">I haven't managed</font><font color="#CCCCCC"> to pull off but</font><font color="#E5E5E5"> I</font>

472
00:19:53,350 --> 00:20:00,070
suspect<font color="#E5E5E5"> a possible so</font><font color="#CCCCCC"> on some</font>

473
00:19:56,950 --> 00:20:02,140
architectures<font color="#CCCCCC"> proc</font><font color="#E5E5E5"> self you know older</font>

474
00:20:00,070 --> 00:20:06,100
file<font color="#CCCCCC"> well the things that look like</font>

475
00:20:02,140 --> 00:20:08,260
files to PHP within proc so will be

476
00:20:06,100 --> 00:20:10,120
populated<font color="#CCCCCC"> with different things so proc</font>

477
00:20:08,260 --> 00:20:13,740
self environs sometimes gets the user

478
00:20:10,120 --> 00:20:16,120
<font color="#CCCCCC">agent and things like</font><font color="#E5E5E5"> that and log files</font>

479
00:20:13,740 --> 00:20:17,890
should be exploitable but it's quite

480
00:20:16,120 --> 00:20:20,620
tricky so if we were going<font color="#E5E5E5"> to use the</font>

481
00:20:17,890 --> 00:20:22,270
base file format<font color="#CCCCCC"> and we'd need to</font><font color="#E5E5E5"> be</font>

482
00:20:20,620 --> 00:20:25,360
writing<font color="#CCCCCC"> right to the very</font><font color="#E5E5E5"> last bite of</font>

483
00:20:22,270 --> 00:20:28,270
<font color="#CCCCCC">the log file even</font><font color="#E5E5E5"> a new line would would</font>

484
00:20:25,360 --> 00:20:29,620
break our archive<font color="#E5E5E5"> if we went to do the</font>

485
00:20:28,270 --> 00:20:31,570
tar trick we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to need to write</font>

486
00:20:29,620 --> 00:20:33,939
an awful lot of null bytes to a log file

487
00:20:31,570 --> 00:20:36,909
which<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know might not</font><font color="#E5E5E5"> be possible</font><font color="#CCCCCC"> and</font>

488
00:20:33,940 --> 00:20:39,580
in both cases<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to know the</font><font color="#E5E5E5"> entire</font>

489
00:20:36,910 --> 00:20:42,820
contents of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> file to have valid</font>

490
00:20:39,580 --> 00:20:44,409
signatures<font color="#CCCCCC"> okay so in terms of</font>

491
00:20:42,820 --> 00:20:45,820
<font color="#E5E5E5">identifying</font><font color="#CCCCCC"> vulnerabilities like I</font>

492
00:20:44,410 --> 00:20:48,700
mentioned we're not<font color="#E5E5E5"> really talking about</font>

493
00:20:45,820 --> 00:20:51,340
any new types of vulnerability it's<font color="#E5E5E5"> it's</font>

494
00:20:48,700 --> 00:20:53,890
exploiting what are essentially<font color="#E5E5E5"> xxe</font>

495
00:20:51,340 --> 00:20:57,820
issues or server<font color="#CCCCCC"> side request forgery so</font>

496
00:20:53,890 --> 00:21:00,730
the<font color="#CCCCCC"> one interesting axe</font><font color="#E5E5E5"> aspect with xxe</font>

497
00:20:57,820 --> 00:21:03,399
<font color="#E5E5E5">well both of</font><font color="#CCCCCC"> them essentially is that</font>

498
00:21:00,730 --> 00:21:05,440
<font color="#CCCCCC">you don't need any outbound connectivity</font>

499
00:21:03,400 --> 00:21:07,990
and you can even<font color="#E5E5E5"> specifically there's a</font>

500
00:21:05,440 --> 00:21:11,020
live<font color="#E5E5E5"> XML option which disables network</font>

501
00:21:07,990 --> 00:21:13,480
connectivity but far is a local file you

502
00:21:11,020 --> 00:21:15,010
know<font color="#CCCCCC"> it's all to do with local file so</font>

503
00:21:13,480 --> 00:21:20,680
it won't prevent<font color="#E5E5E5"> you using the file</font>

504
00:21:15,010 --> 00:21:22,840
stream wrapper<font color="#CCCCCC"> ftp stream wrapper is far</font>

505
00:21:20,680 --> 00:21:25,840
<font color="#E5E5E5">better than the HTTP one for detecting</font>

506
00:21:22,840 --> 00:21:28,179
<font color="#E5E5E5">this issue because it supports many more</font>

507
00:21:25,840 --> 00:21:30,520
<font color="#E5E5E5">operations so if you call file exists on</font>

508
00:21:28,180 --> 00:21:33,160
a HTTP URL that will<font color="#E5E5E5"> do nothing and just</font>

509
00:21:30,520 --> 00:21:36,790
<font color="#CCCCCC">return false but if you call file exists</font>

510
00:21:33,160 --> 00:21:38,680
with an FTP URL it will<font color="#E5E5E5"> go out and</font>

511
00:21:36,790 --> 00:21:40,420
connect<font color="#CCCCCC"> to the FTP server and I'll sort</font>

512
00:21:38,680 --> 00:21:42,340
of<font color="#E5E5E5"> I'll demonstrate that with one of</font><font color="#CCCCCC"> the</font>

513
00:21:40,420 --> 00:21:44,560
issues<font color="#E5E5E5"> to see you know it's quite an</font>

514
00:21:42,340 --> 00:21:47,669
<font color="#E5E5E5">easy way</font><font color="#CCCCCC"> to try and</font><font color="#E5E5E5"> to take these issues</font>

515
00:21:44,560 --> 00:21:49,899
<font color="#E5E5E5">in a black box scenario if we've got no</font>

516
00:21:47,670 --> 00:21:52,660
out-of-band communication so<font color="#E5E5E5"> either</font>

517
00:21:49,900 --> 00:21:54,670
allow URL<font color="#CCCCCC"> F open is set to false or</font>

518
00:21:52,660 --> 00:21:57,370
there's no path to<font color="#CCCCCC"> our system either</font>

519
00:21:54,670 --> 00:21:59,140
<font color="#CCCCCC">directly or through</font><font color="#E5E5E5"> DNS then we can</font>

520
00:21:57,370 --> 00:21:59,659
<font color="#E5E5E5">sometimes look at how the file stream</font>

521
00:21:59,140 --> 00:22:02,270
<font color="#CCCCCC">wrapper</font>

522
00:21:59,660 --> 00:22:06,530
Caves<font color="#E5E5E5"> so if that works then it's likely</font>

523
00:22:02,270 --> 00:22:08,930
<font color="#CCCCCC">that we're triggering</font><font color="#E5E5E5"> stream</font><font color="#CCCCCC"> rappers so</font>

524
00:22:06,530 --> 00:22:11,990
PHP GDC which I mentioned earlier

525
00:22:08,930 --> 00:22:13,640
is essentially the PHP equivalent of why

526
00:22:11,990 --> 00:22:15,890
so serious oh it's a tool<font color="#CCCCCC"> for generating</font>

527
00:22:13,640 --> 00:22:18,190
payloads which has a lot of almost<font color="#E5E5E5"> like</font>

528
00:22:15,890 --> 00:22:20,270
<font color="#CCCCCC">a database of known payloads within it</font>

529
00:22:18,190 --> 00:22:23,600
it's<font color="#E5E5E5"> developed by a guy called</font><font color="#CCCCCC"> Charles</font>

530
00:22:20,270 --> 00:22:25,460
<font color="#E5E5E5">fall and he kindly gave me permission to</font>

531
00:22:23,600 --> 00:22:27,439
<font color="#E5E5E5">branch it so what I've done</font><font color="#CCCCCC"> is just</font>

532
00:22:25,460 --> 00:22:30,410
added a<font color="#CCCCCC"> really simple tool</font><font color="#E5E5E5"> on to it</font>

533
00:22:27,440 --> 00:22:32,750
called fire GGC<font color="#E5E5E5"> which allows you to put</font>

534
00:22:30,410 --> 00:22:34,900
<font color="#CCCCCC">these payloads</font><font color="#E5E5E5"> into a fire using one of</font>

535
00:22:32,750 --> 00:22:38,420
<font color="#E5E5E5">the two</font><font color="#CCCCCC"> techniques I mentioned earlier</font>

536
00:22:34,900 --> 00:22:40,010
there's this PHP any setting which we

537
00:22:38,420 --> 00:22:41,720
need<font color="#E5E5E5"> to set on our</font><font color="#CCCCCC"> local system</font><font color="#E5E5E5"> to</font>

538
00:22:40,010 --> 00:22:43,580
actually<font color="#CCCCCC"> be able to write too far</font>

539
00:22:41,720 --> 00:22:45,830
archives because<font color="#E5E5E5"> we let PHP do all the</font>

540
00:22:43,580 --> 00:22:50,240
work<font color="#E5E5E5"> in terms of generating</font><font color="#CCCCCC"> the archive</font>

541
00:22:45,830 --> 00:22:51,919
file<font color="#E5E5E5"> I've made the slight change</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

542
00:22:50,240 --> 00:22:54,050
payloads that<font color="#CCCCCC"> are included with it at</font>

543
00:22:51,920 --> 00:22:57,470
the moment<font color="#CCCCCC"> because most</font><font color="#E5E5E5"> of them no</font>

544
00:22:54,050 --> 00:22:59,629
<font color="#CCCCCC">longer work with PHP 7.2 as a defense</font>

545
00:22:57,470 --> 00:23:00,950
<font color="#CCCCCC">in-depth mechanism they sort of got</font><font color="#E5E5E5"> rid</font>

546
00:22:59,630 --> 00:23:04,100
<font color="#E5E5E5">of something</font><font color="#CCCCCC"> that people</font><font color="#E5E5E5"> used to often</font>

547
00:23:00,950 --> 00:23:06,440
<font color="#E5E5E5">use in exploits which is they limit what</font>

548
00:23:04,100 --> 00:23:08,090
functions you can<font color="#E5E5E5"> call dynamically so</font>

549
00:23:06,440 --> 00:23:10,850
for<font color="#E5E5E5"> instance you can't call it</font><font color="#CCCCCC"> Val or</font>

550
00:23:08,090 --> 00:23:12,740
<font color="#E5E5E5">include but for a long time they left it</font>

551
00:23:10,850 --> 00:23:14,480
so you could dynamically call assert

552
00:23:12,740 --> 00:23:16,250
with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> string and that code would get</font>

553
00:23:14,480 --> 00:23:18,980
<font color="#CCCCCC">evaluated but that doesn't happen</font>

554
00:23:16,250 --> 00:23:20,810
<font color="#E5E5E5">anymore as a sort of quick fix I've</font>

555
00:23:18,980 --> 00:23:23,120
changed everything<font color="#E5E5E5"> to use pass through</font>

556
00:23:20,810 --> 00:23:26,270
which runs a system command and spits

557
00:23:23,120 --> 00:23:28,699
out<font color="#CCCCCC"> the output</font><font color="#E5E5E5"> on some sort of lock down</font>

558
00:23:26,270 --> 00:23:31,430
systems commands<font color="#E5E5E5"> like pass through or</font>

559
00:23:28,700 --> 00:23:34,160
<font color="#E5E5E5">exit or other sort of commands which</font>

560
00:23:31,430 --> 00:23:35,930
actually<font color="#E5E5E5"> execute system commands will</font>

561
00:23:34,160 --> 00:23:38,990
have been sort of locked down and

562
00:23:35,930 --> 00:23:41,300
prevented<font color="#E5E5E5"> from running it seems to me</font>

563
00:23:38,990 --> 00:23:43,250
that<font color="#E5E5E5"> nearly every large application now</font>

564
00:23:41,300 --> 00:23:46,190
uses a library manager called composer

565
00:23:43,250 --> 00:23:48,140
<font color="#E5E5E5">and that includes a simple wrapper for</font>

566
00:23:46,190 --> 00:23:50,540
include so suddenly<font color="#E5E5E5"> we can dynamically</font>

567
00:23:48,140 --> 00:23:52,640
call include<font color="#E5E5E5"> so if we're in</font><font color="#CCCCCC"> that</font>

568
00:23:50,540 --> 00:23:55,310
scenario where we<font color="#E5E5E5"> want to run</font><font color="#CCCCCC"> PHP code</font>

569
00:23:52,640 --> 00:23:58,130
because<font color="#E5E5E5"> we can't run one simple command</font>

570
00:23:55,310 --> 00:24:00,139
<font color="#E5E5E5">to do what we want to do we can consider</font>

571
00:23:58,130 --> 00:24:02,320
<font color="#E5E5E5">calling this this function as I</font>

572
00:24:00,140 --> 00:24:05,390
mentioned if we're in a destruction

573
00:24:02,320 --> 00:24:07,730
<font color="#E5E5E5">we'll have to use absolute</font><font color="#CCCCCC"> pass so what</font>

574
00:24:05,390 --> 00:24:10,520
we might do is start off by including<font color="#CCCCCC"> a</font>

575
00:24:07,730 --> 00:24:12,140
<font color="#CCCCCC">TC password and as long as that works we</font>

576
00:24:10,520 --> 00:24:13,620
can start trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> brute-force</font><font color="#E5E5E5"> the name</font>

577
00:24:12,140 --> 00:24:15,300
of either some<font color="#E5E5E5"> fire</font>

578
00:24:13,620 --> 00:24:17,790
we've uploaded or if we want to<font color="#E5E5E5"> look</font>

579
00:24:15,300 --> 00:24:20,129
clever we could include<font color="#CCCCCC"> the code</font><font color="#E5E5E5"> into</font>

580
00:24:17,790 --> 00:24:24,870
<font color="#E5E5E5">the far archive and and grab</font><font color="#CCCCCC"> it from</font>

581
00:24:20,130 --> 00:24:28,860
there<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so there's a bunch</font><font color="#E5E5E5"> of case</font>

582
00:24:24,870 --> 00:24:30,689
studies I'm going to go through and with

583
00:24:28,860 --> 00:24:34,050
all of them I found<font color="#E5E5E5"> the issue through</font>

584
00:24:30,690 --> 00:24:35,880
manual code analysis<font color="#E5E5E5"> two of them could</font>

585
00:24:34,050 --> 00:24:38,730
<font color="#E5E5E5">have really easily been found just</font><font color="#CCCCCC"> by</font>

586
00:24:35,880 --> 00:24:42,390
using the<font color="#CCCCCC"> ftp wrapper one of</font><font color="#E5E5E5"> them is a</font>

587
00:24:38,730 --> 00:24:43,800
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit more subtle and it might be a</font>

588
00:24:42,390 --> 00:24:45,390
bit boring<font color="#E5E5E5"> but all of them are sort of</font>

589
00:24:43,800 --> 00:24:48,389
in scenarios where<font color="#CCCCCC"> i can just upload a</font>

590
00:24:45,390 --> 00:24:53,040
file<font color="#E5E5E5"> onto</font><font color="#CCCCCC"> the target</font><font color="#E5E5E5"> so the first one</font><font color="#CCCCCC"> is</font>

591
00:24:48,390 --> 00:24:55,260
a<font color="#E5E5E5"> CMS called typo3</font><font color="#CCCCCC"> they fix this</font><font color="#E5E5E5"> issue</font>

592
00:24:53,040 --> 00:24:56,550
in the<font color="#E5E5E5"> most recent version it's the</font><font color="#CCCCCC"> only</font>

593
00:24:55,260 --> 00:24:59,190
issue I'm going to look at<font color="#E5E5E5"> today that's</font>

594
00:24:56,550 --> 00:25:00,919
actually been fixed<font color="#E5E5E5"> and many things to a</font>

595
00:24:59,190 --> 00:25:03,750
guy<font color="#E5E5E5"> called Oliver</font><font color="#CCCCCC"> Haider who basically</font>

596
00:25:00,920 --> 00:25:05,100
<font color="#E5E5E5">looked</font><font color="#CCCCCC"> after fixing</font><font color="#E5E5E5"> it and they've done</font>

597
00:25:03,750 --> 00:25:07,710
<font color="#CCCCCC">quite an interesting</font><font color="#E5E5E5"> thing as well</font>

598
00:25:05,100 --> 00:25:08,939
they've created their own custom faster

599
00:25:07,710 --> 00:25:11,130
as well<font color="#E5E5E5"> as sort of fixing the underlying</font>

600
00:25:08,940 --> 00:25:12,690
<font color="#E5E5E5">issue which I identified which allowed</font>

601
00:25:11,130 --> 00:25:15,690
you to activate the stream<font color="#E5E5E5"> wrappers</font>

602
00:25:12,690 --> 00:25:17,940
<font color="#E5E5E5">they've written a custom file wrapper to</font>

603
00:25:15,690 --> 00:25:22,320
prevent the system one from being abused

604
00:25:17,940 --> 00:25:25,230
in<font color="#E5E5E5"> any scenario so the the path from</font>

605
00:25:22,320 --> 00:25:26,909
user data<font color="#E5E5E5"> to the vulnerability</font><font color="#CCCCCC"> is</font>

606
00:25:25,230 --> 00:25:29,640
<font color="#E5E5E5">recently complicated but the actual</font>

607
00:25:26,910 --> 00:25:32,640
issue is fairly straightforward<font color="#CCCCCC"> so what</font>

608
00:25:29,640 --> 00:25:34,290
happens when it's processing links sort

609
00:25:32,640 --> 00:25:37,880
<font color="#E5E5E5">of internally it tries to</font><font color="#CCCCCC"> figure out</font>

610
00:25:34,290 --> 00:25:40,800
<font color="#CCCCCC">what sort</font><font color="#E5E5E5"> of file it's looking at and</font>

611
00:25:37,880 --> 00:25:43,740
the problem here is<font color="#CCCCCC"> that after it's</font><font color="#E5E5E5"> done</font>

612
00:25:40,800 --> 00:25:45,990
all<font color="#E5E5E5"> these checks</font><font color="#CCCCCC"> at URL decodes the</font>

613
00:25:43,740 --> 00:25:48,990
value so what provided that we encode

614
00:25:45,990 --> 00:25:51,510
any colons<font color="#E5E5E5"> it's not going to see</font>

615
00:25:48,990 --> 00:25:53,340
<font color="#E5E5E5">something as</font><font color="#CCCCCC"> happy as being a URI with a</font>

616
00:25:51,510 --> 00:25:56,510
scheme it's going to assume it's a local

617
00:25:53,340 --> 00:25:58,860
file and<font color="#E5E5E5"> cool file exists on it so by</font>

618
00:25:56,510 --> 00:26:01,590
encoding we can we can cause it to

619
00:25:58,860 --> 00:26:07,379
<font color="#E5E5E5">activate the stream</font><font color="#CCCCCC"> records</font><font color="#E5E5E5"> so let's</font>

620
00:26:01,590 --> 00:26:09,360
have a quick<font color="#CCCCCC"> look at the demo so the</font>

621
00:26:07,380 --> 00:26:11,870
first thing we need<font color="#CCCCCC"> to do is generate a</font>

622
00:26:09,360 --> 00:26:11,870
payload

623
00:26:19,170 --> 00:26:23,010
like any<font color="#CCCCCC"> sensible person I've got a</font>

624
00:26:20,910 --> 00:26:30,210
bunch of pictures<font color="#E5E5E5"> of cats in my pictures</font>

625
00:26:23,010 --> 00:26:34,320
directory so what I'll do first<font color="#E5E5E5"> so this</font>

626
00:26:30,210 --> 00:26:39,180
<font color="#E5E5E5">will list the payloads available in PHP</font>

627
00:26:34,320 --> 00:26:40,740
<font color="#E5E5E5">GGC some of them use to string as the</font>

628
00:26:39,180 --> 00:26:42,420
<font color="#E5E5E5">starting</font><font color="#CCCCCC"> point so</font><font color="#E5E5E5"> they're no good for us</font>

629
00:26:40,740 --> 00:26:44,790
<font color="#E5E5E5">but all the ones</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> use destructor</font>

630
00:26:42,420 --> 00:26:49,470
<font color="#E5E5E5">wake up we can use with this technique</font>

631
00:26:44,790 --> 00:26:52,860
so<font color="#CCCCCC"> what I'm going to do is generate a</font>

632
00:26:49,470 --> 00:26:53,840
payload so I'm<font color="#E5E5E5"> going to use</font><font color="#CCCCCC"> cat 1 as the</font>

633
00:26:52,860 --> 00:27:02,570
input

634
00:26:53,840 --> 00:27:02,570
<font color="#E5E5E5">I'll output it as</font><font color="#CCCCCC"> type</font><font color="#E5E5E5"> O 3 I will use</font>

635
00:27:02,750 --> 00:27:09,240
guzzle<font color="#CCCCCC"> / RC e 1 is the payload</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm</font>

636
00:27:07,350 --> 00:27:11,429
<font color="#E5E5E5">gonna try</font><font color="#CCCCCC"> and run new name - a on the</font>

637
00:27:09,240 --> 00:27:17,180
target<font color="#E5E5E5"> so that's been written to type O</font>

638
00:27:11,430 --> 00:27:21,270
3<font color="#E5E5E5"> jpg</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> moment in my pictures directory</font>

639
00:27:17,180 --> 00:27:23,940
I'm going to exploit the<font color="#E5E5E5"> issue as admin</font>

640
00:27:21,270 --> 00:27:25,889
which might seem a<font color="#CCCCCC"> bit weird</font><font color="#E5E5E5"> but so this</font>

641
00:27:23,940 --> 00:27:28,680
CMS sort of implements<font color="#E5E5E5"> a fine-grained</font>

642
00:27:25,890 --> 00:27:29,730
<font color="#CCCCCC">access</font><font color="#E5E5E5"> model there's no standard roles</font>

643
00:27:28,680 --> 00:27:32,460
and<font color="#E5E5E5"> stuff set up</font>

644
00:27:29,730 --> 00:27:36,650
so the functionality we're<font color="#CCCCCC"> abusing is</font>

645
00:27:32,460 --> 00:27:36,650
certainly not only<font color="#E5E5E5"> available to admins</font>

646
00:27:37,430 --> 00:27:46,620
so the first thing we need to do is

647
00:27:39,840 --> 00:27:48,179
simply upload that file whoever's doing

648
00:27:46,620 --> 00:27:53,310
the other presentation is much fun the

649
00:27:48,180 --> 00:27:55,110
other<font color="#CCCCCC"> Maya</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so we you</font><font color="#E5E5E5"> know we</font><font color="#CCCCCC"> just</font>

650
00:27:53,310 --> 00:27:57,179
upload you know we're<font color="#E5E5E5"> in a scenario</font>

651
00:27:55,110 --> 00:28:01,219
where we're able to upload files<font color="#E5E5E5"> into</font>

652
00:27:57,180 --> 00:28:01,220
<font color="#E5E5E5">the application that appears as a JPEG</font>

653
00:28:01,370 --> 00:28:07,919
so I'm<font color="#CCCCCC"> gonna go to any page and I'm</font>

654
00:28:05,670 --> 00:28:10,980
going to add some content<font color="#CCCCCC"> and I'm going</font>

655
00:28:07,920 --> 00:28:13,430
to<font color="#E5E5E5"> add an image is only element which</font>

656
00:28:10,980 --> 00:28:18,570
has<font color="#CCCCCC"> a link property Danny</font>

657
00:28:13,430 --> 00:28:22,370
so actually what I'll do if I set up a

658
00:28:18,570 --> 00:28:22,370
listener on another server

659
00:28:27,730 --> 00:28:38,299
<font color="#CCCCCC">he's knit all right so that's</font><font color="#E5E5E5"> listening</font>

660
00:28:32,539 --> 00:28:46,389
on port 443 and provided that<font color="#CCCCCC"> I encode</font>

661
00:28:38,299 --> 00:28:46,389
the colons<font color="#CCCCCC"> and don't have</font><font color="#E5E5E5"> stubby fingers</font>

662
00:28:57,940 --> 00:29:10,850
<font color="#CCCCCC">12:43</font><font color="#E5E5E5"> now if I've got this right when I</font>

663
00:29:06,649 --> 00:29:19,010
save this I've clearly got it wrong<font color="#CCCCCC"> put</font>

664
00:29:10,850 --> 00:29:31,219
it and<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> lost</font><font color="#E5E5E5"> track</font><font color="#CCCCCC"> of my</font><font color="#E5E5E5"> ip's this</font>

665
00:29:19,010 --> 00:29:33,230
is one<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> yeah round papaji's so</font>

666
00:29:31,220 --> 00:29:38,299
<font color="#E5E5E5">the server I'm attacking</font><font color="#CCCCCC"> is got</font><font color="#E5E5E5"> 100 and</font>

667
00:29:33,230 --> 00:29:43,370
I want it to contact<font color="#CCCCCC"> dot one I want when</font>

668
00:29:38,299 --> 00:29:45,529
I say that this<font color="#CCCCCC"> timer has connected to</font>

669
00:29:43,370 --> 00:29:54,320
us and if I pretend to<font color="#E5E5E5"> be an FTP server</font>

670
00:29:45,529 --> 00:29:56,299
<font color="#E5E5E5">they'll probably do it's basically</font>

671
00:29:54,320 --> 00:29:57,740
<font color="#CCCCCC">looking for the</font><font color="#E5E5E5"> file in the URL that we</font>

672
00:29:56,299 --> 00:30:00,879
gave it so we can see that stream

673
00:29:57,740 --> 00:30:09,830
<font color="#E5E5E5">wrappers are definitely activated there</font>

674
00:30:00,880 --> 00:30:17,899
if I<font color="#E5E5E5"> go to my</font><font color="#CCCCCC"> notes and</font><font color="#E5E5E5"> get the file</font>

675
00:30:09,830 --> 00:30:20,710
path just<font color="#E5E5E5"> going to intercept the</font>

676
00:30:17,899 --> 00:30:20,709
requests

677
00:30:36,150 --> 00:30:43,600
<font color="#CCCCCC">now intercept the response to this</font>

678
00:30:38,560 --> 00:30:47,200
request<font color="#E5E5E5"> and hope for me at the top of it</font>

679
00:30:43,600 --> 00:31:00,159
is run new name<font color="#E5E5E5"> - a so that's</font>

680
00:30:47,200 --> 00:31:03,430
essentially<font color="#E5E5E5"> the exploit working ok the</font>

681
00:31:00,160 --> 00:31:04,960
<font color="#E5E5E5">next example is in WordPress and when I</font>

682
00:31:03,430 --> 00:31:06,700
first<font color="#E5E5E5"> discovered this issue I sort of</font>

683
00:31:04,960 --> 00:31:09,790
wanted<font color="#CCCCCC"> to find an instance in it in a</font>

684
00:31:06,700 --> 00:31:11,410
fairly<font color="#E5E5E5"> high profile app and thought you</font>

685
00:31:09,790 --> 00:31:13,180
know WordPress was a good target<font color="#E5E5E5"> and I</font>

686
00:31:11,410 --> 00:31:15,370
assumed they would fix it fairly quickly

687
00:31:13,180 --> 00:31:18,670
and<font color="#E5E5E5"> I could move on and find some other</font>

688
00:31:15,370 --> 00:31:20,520
examples and<font color="#E5E5E5"> do a presentation but they</font>

689
00:31:18,670 --> 00:31:21,780
still<font color="#E5E5E5"> haven't fixed it at this point and</font>

690
00:31:20,520 --> 00:31:25,990
[Music]

691
00:31:21,780 --> 00:31:28,210
<font color="#E5E5E5">you know understanding this issue</font>

692
00:31:25,990 --> 00:31:30,730
<font color="#E5E5E5">obviously affects lots of applications</font>

693
00:31:28,210 --> 00:31:32,650
so it's difficult<font color="#E5E5E5"> to try to wait to talk</font>

694
00:31:30,730 --> 00:31:34,480
<font color="#E5E5E5">about</font><font color="#CCCCCC"> it because there's one instance in</font>

695
00:31:32,650 --> 00:31:37,240
the<font color="#CCCCCC"> nap and I felt it</font><font color="#E5E5E5"> had got to</font><font color="#CCCCCC"> the</font>

696
00:31:34,480 --> 00:31:38,860
point where it was<font color="#CCCCCC"> irresponsible not to</font>

697
00:31:37,240 --> 00:31:41,080
<font color="#E5E5E5">disclose if that makes sense</font>

698
00:31:38,860 --> 00:31:43,679
so this is my favorite vulnerability

699
00:31:41,080 --> 00:31:46,120
because it's more subtle<font color="#E5E5E5"> than</font><font color="#CCCCCC"> the others</font>

700
00:31:43,680 --> 00:31:48,220
<font color="#E5E5E5">the vulnerabilities in some legacy</font>

701
00:31:46,120 --> 00:31:52,570
functionality for dealing<font color="#E5E5E5"> with</font>

702
00:31:48,220 --> 00:31:55,180
thumbnails<font color="#CCCCCC"> and the problem is is in the</font>

703
00:31:52,570 --> 00:31:56,800
<font color="#CCCCCC">highlighted code</font><font color="#E5E5E5"> so it calculates a</font>

704
00:31:55,180 --> 00:31:59,950
variable called<font color="#E5E5E5"> thumb file and then</font>

705
00:31:56,800 --> 00:32:01,629
cause file exists on it and it

706
00:31:59,950 --> 00:32:04,960
calculates<font color="#CCCCCC"> the</font><font color="#E5E5E5"> value of this variable by</font>

707
00:32:01,630 --> 00:32:07,330
replacing<font color="#CCCCCC"> within file the base name with</font>

708
00:32:04,960 --> 00:32:10,210
file with something now there's a bad

709
00:32:07,330 --> 00:32:13,629
<font color="#E5E5E5">assumption there which is that the base</font>

710
00:32:10,210 --> 00:32:16,870
name of the file only<font color="#E5E5E5"> occurs in</font><font color="#CCCCCC"> in the</font>

711
00:32:13,630 --> 00:32:20,470
place where the base name is so we can

712
00:32:16,870 --> 00:32:22,300
completely control this valid this value

713
00:32:20,470 --> 00:32:25,120
image data thumb and we can partially

714
00:32:22,300 --> 00:32:30,300
control the value<font color="#CCCCCC"> of file</font><font color="#E5E5E5"> so file comes</font>

715
00:32:25,120 --> 00:32:32,500
from get attached file<font color="#E5E5E5"> get</font><font color="#CCCCCC"> attach file</font>

716
00:32:30,300 --> 00:32:34,930
<font color="#E5E5E5">so if we look at the code from get</font>

717
00:32:32,500 --> 00:32:38,100
<font color="#CCCCCC">attach file it in most circumstances it</font>

718
00:32:34,930 --> 00:32:40,480
<font color="#E5E5E5">prepends the applications upload path</font>

719
00:32:38,100 --> 00:32:43,060
but there's certain circumstances in

720
00:32:40,480 --> 00:32:45,130
which<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> so if the</font><font color="#E5E5E5"> value of file</font>

721
00:32:43,060 --> 00:32:47,320
starts with a slash<font color="#E5E5E5"> then it's an</font>

722
00:32:45,130 --> 00:32:48,140
absolute<font color="#E5E5E5"> Linux path and it doesn't</font>

723
00:32:47,320 --> 00:32:50,990
bother<font color="#CCCCCC"> prepending</font>

724
00:32:48,140 --> 00:32:52,520
but that's no use<font color="#E5E5E5"> to</font><font color="#CCCCCC"> us but if the file</font>

725
00:32:50,990 --> 00:32:54,200
starts with<font color="#E5E5E5"> something that looks like an</font>

726
00:32:52,520 --> 00:32:55,879
absolute<font color="#CCCCCC"> windows path so a single</font>

727
00:32:54,200 --> 00:32:59,150
<font color="#E5E5E5">character followed by colon forward</font>

728
00:32:55,880 --> 00:33:01,150
slash then it also doesn't prepend<font color="#E5E5E5"> this</font>

729
00:32:59,150 --> 00:33:04,130
value<font color="#CCCCCC"> now despite the fact</font><font color="#E5E5E5"> we're</font>

730
00:33:01,150 --> 00:33:05,480
<font color="#E5E5E5">attacking a Linux</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can set this</font>

731
00:33:04,130 --> 00:33:09,620
value to<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like a</font>

732
00:33:05,480 --> 00:33:11,210
<font color="#E5E5E5">Windows path in terms of the payload</font>

733
00:33:09,620 --> 00:33:15,070
that<font color="#CCCCCC"> we use to exploit this</font>

734
00:33:11,210 --> 00:33:17,570
so until<font color="#CCCCCC"> WordPress</font><font color="#E5E5E5"> 4.9 there was a</font>

735
00:33:15,070 --> 00:33:22,399
publicly<font color="#E5E5E5"> known payload to go from</font><font color="#CCCCCC"> to</font>

736
00:33:17,570 --> 00:33:24,230
string<font color="#E5E5E5"> to code execution</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we'd simply</font>

737
00:33:22,400 --> 00:33:26,840
basically add something<font color="#E5E5E5"> to trigger a</font><font color="#CCCCCC"> to</font>

738
00:33:24,230 --> 00:33:28,250
string from a destruct<font color="#E5E5E5"> but that doesn't</font>

739
00:33:26,840 --> 00:33:31,970
work<font color="#E5E5E5"> anymore so we have to go looking</font>

740
00:33:28,250 --> 00:33:33,920
<font color="#E5E5E5">for a new payload and</font><font color="#CCCCCC"> wordpress is one</font>

741
00:33:31,970 --> 00:33:35,780
of the few PHP applications that doesn't

742
00:33:33,920 --> 00:33:38,060
have an<font color="#CCCCCC"> autoloader so you're</font><font color="#E5E5E5"> limited</font><font color="#CCCCCC"> to</font>

743
00:33:35,780 --> 00:33:41,030
<font color="#E5E5E5">the classes which are</font><font color="#CCCCCC"> already loaded</font><font color="#E5E5E5"> by</font>

744
00:33:38,060 --> 00:33:42,470
<font color="#E5E5E5">the application</font><font color="#CCCCCC"> and this is one of the</font>

745
00:33:41,030 --> 00:33:44,330
few classes<font color="#E5E5E5"> that looked particularly</font>

746
00:33:42,470 --> 00:33:46,040
interesting so they've got<font color="#E5E5E5"> this class</font>

747
00:33:44,330 --> 00:33:48,770
<font color="#E5E5E5">called</font><font color="#CCCCCC"> requests utility filtered</font>

748
00:33:46,040 --> 00:33:50,780
iterator<font color="#CCCCCC"> which is an array iterator so</font>

749
00:33:48,770 --> 00:33:53,360
you can basically set<font color="#E5E5E5"> this as the</font>

750
00:33:50,780 --> 00:33:54,830
iterator of an array<font color="#E5E5E5"> and if you iterate</font>

751
00:33:53,360 --> 00:33:57,770
through that array this code is

752
00:33:54,830 --> 00:34:00,530
triggered<font color="#E5E5E5"> and this code calls a function</font>

753
00:33:57,770 --> 00:34:02,870
<font color="#CCCCCC">which is defined by</font><font color="#E5E5E5"> a property so</font>

754
00:34:00,530 --> 00:34:05,060
provided<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can trigger something</font><font color="#E5E5E5"> to go</font>

755
00:34:02,870 --> 00:34:07,610
through this array<font color="#E5E5E5"> then we can execute</font>

756
00:34:05,060 --> 00:34:10,610
arbitrary code<font color="#CCCCCC"> I</font><font color="#E5E5E5"> serve I looked around</font>

757
00:34:07,610 --> 00:34:12,710
<font color="#E5E5E5">within system classes and any of the few</font>

758
00:34:10,610 --> 00:34:16,070
classes<font color="#CCCCCC"> that were already loaded and I</font>

759
00:34:12,710 --> 00:34:17,960
couldn't<font color="#E5E5E5"> find something to do</font><font color="#CCCCCC"> that so</font>

760
00:34:16,070 --> 00:34:22,640
the sort of next<font color="#E5E5E5"> natural thing to do is</font>

761
00:34:17,960 --> 00:34:25,250
to go<font color="#E5E5E5"> and look at popular plugins</font><font color="#CCCCCC"> and</font>

762
00:34:22,639 --> 00:34:26,750
WooCommerce which is commonly<font color="#E5E5E5"> come you</font>

763
00:34:25,250 --> 00:34:27,830
know it's a very<font color="#E5E5E5"> common e-commerce</font><font color="#CCCCCC"> cell</font>

764
00:34:26,750 --> 00:34:31,550
to<font color="#E5E5E5"> use WordPress and WooCommerce</font>

765
00:34:27,830 --> 00:34:33,380
together<font color="#E5E5E5"> has a destructor which runs</font>

766
00:34:31,550 --> 00:34:35,060
through<font color="#CCCCCC"> a</font><font color="#E5E5E5"> bunch of handles and is</font>

767
00:34:33,380 --> 00:34:36,530
supposed<font color="#E5E5E5"> to just check if something's a</font>

768
00:34:35,060 --> 00:34:38,659
resource and close the file but all

769
00:34:36,530 --> 00:34:40,000
we're really<font color="#E5E5E5"> interested in is the</font><font color="#CCCCCC"> fact</font>

770
00:34:38,659 --> 00:34:43,899
that it runs for<font color="#E5E5E5"> e</font>

771
00:34:40,000 --> 00:34:43,899
<font color="#E5E5E5">so let's have a look at that though</font>

772
00:34:49,210 --> 00:34:54,429
for this demo<font color="#E5E5E5"> I've scripted most of it</font>

773
00:34:53,230 --> 00:34:59,529
<font color="#E5E5E5">because I'm sure</font><font color="#CCCCCC"> I would forget</font>

774
00:34:54,429 --> 00:35:02,470
something in<font color="#E5E5E5"> my setup well I'm actually</font>

775
00:34:59,529 --> 00:35:19,390
gonna do first provided<font color="#E5E5E5"> WordPress seems</font>

776
00:35:02,470 --> 00:35:21,788
to run horribly slowly so<font color="#E5E5E5"> I what I was</font>

777
00:35:19,390 --> 00:35:24,339
gonna do here and<font color="#E5E5E5"> I may</font><font color="#CCCCCC"> abandon was just</font>

778
00:35:21,789 --> 00:35:26,559
load up WordPress<font color="#CCCCCC"> and show you what user</font>

779
00:35:24,339 --> 00:35:30,038
I'll be exploiting it as so it has quite

780
00:35:26,559 --> 00:35:32,319
as well by default<font color="#E5E5E5"> as a far simpler so a</font>

781
00:35:30,039 --> 00:35:33,700
<font color="#CCCCCC">privilege model and you have in</font>

782
00:35:32,319 --> 00:35:37,630
WordPress you have unauthenticated

783
00:35:33,700 --> 00:35:39,939
subscriber<font color="#E5E5E5"> author editor admin and we</font>

784
00:35:37,630 --> 00:35:43,599
can exploit this issue as an author<font color="#E5E5E5"> so</font>

785
00:35:39,940 --> 00:35:46,510
I've got a user<font color="#CCCCCC"> set up called author to</font>

786
00:35:43,599 --> 00:35:47,859
<font color="#E5E5E5">exploit it now given that this isn't</font>

787
00:35:46,510 --> 00:35:51,150
loading there's a good chance it's not

788
00:35:47,859 --> 00:35:51,150
<font color="#E5E5E5">going to work</font><font color="#CCCCCC"> but I'll give</font><font color="#E5E5E5"> it a try</font>

789
00:35:59,039 --> 00:36:08,069
thank you I always keep doing<font color="#E5E5E5"> that</font>

790
00:36:04,170 --> 00:36:08,069
that's the problem<font color="#CCCCCC"> yet</font>

791
00:36:12,660 --> 00:36:28,000
that's my favorite way<font color="#CCCCCC"> to fail</font><font color="#E5E5E5"> right so</font>

792
00:36:27,460 --> 00:36:29,950
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

793
00:36:28,000 --> 00:36:31,900
is version of<font color="#CCCCCC"> WordPress and has the</font>

794
00:36:29,950 --> 00:36:33,490
latest version of WooCommerce installed

795
00:36:31,900 --> 00:36:36,370
<font color="#E5E5E5">as a plugin but we're going</font><font color="#CCCCCC"> to be</font>

796
00:36:33,490 --> 00:36:45,399
exploiting as<font color="#E5E5E5"> this author user who has</font>

797
00:36:36,370 --> 00:36:57,580
<font color="#E5E5E5">the</font><font color="#CCCCCC"> role author and now I actually want</font>

798
00:36:45,400 --> 00:36:59,530
intercept<font color="#CCCCCC"> one</font><font color="#E5E5E5"> just so this runs through</font>

799
00:36:57,580 --> 00:37:02,350
quite a few<font color="#CCCCCC"> requests to</font><font color="#E5E5E5"> just set the</font>

800
00:36:59,530 --> 00:37:04,750
various<font color="#E5E5E5"> elements that we need to and the</font>

801
00:37:02,350 --> 00:37:10,630
<font color="#E5E5E5">first thing it</font><font color="#CCCCCC"> does is an</font><font color="#E5E5E5"> XML RPC call</font>

802
00:37:04,750 --> 00:37:13,510
to upload a file<font color="#CCCCCC"> so doing</font><font color="#E5E5E5"> it via XML RPC</font>

803
00:37:10,630 --> 00:37:16,630
means that uploads<font color="#E5E5E5"> of you know the value</font>

804
00:37:13,510 --> 00:37:18,010
in the request is base64 encoded but we

805
00:37:16,630 --> 00:37:21,910
can have a<font color="#E5E5E5"> quick</font><font color="#CCCCCC"> look at what that looks</font>

806
00:37:18,010 --> 00:37:23,740
like<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> basically is a standard</font>

807
00:37:21,910 --> 00:37:25,690
file format<font color="#E5E5E5"> archive but it just has a</font>

808
00:37:23,740 --> 00:37:29,669
<font color="#E5E5E5">few bytes in front of the stub that</font>

809
00:37:25,690 --> 00:37:35,290
<font color="#CCCCCC">makes it look a tiny bit like a PHP</font><font color="#E5E5E5"> file</font>

810
00:37:29,670 --> 00:37:39,070
now so it's uploaded the file<font color="#E5E5E5"> the next</font>

811
00:37:35,290 --> 00:37:40,420
thing it does is<font color="#E5E5E5"> log</font><font color="#CCCCCC"> into the you know</font>

812
00:37:39,070 --> 00:37:41,710
<font color="#E5E5E5">into the application through the web</font>

813
00:37:40,420 --> 00:37:46,660
interface<font color="#CCCCCC"> because we need to grab a</font>

814
00:37:41,710 --> 00:37:49,480
<font color="#E5E5E5">cookie so it does that you know</font><font color="#CCCCCC"> we'll be</font>

815
00:37:46,660 --> 00:37:55,330
grabbing the cookie for access<font color="#CCCCCC"> to the</font>

816
00:37:49,480 --> 00:37:57,700
<font color="#E5E5E5">backend once it's got that cookie it's</font>

817
00:37:55,330 --> 00:38:00,400
going to access the<font color="#CCCCCC"> URL to edit the post</font>

818
00:37:57,700 --> 00:38:03,460
which corresponds to the media item that

819
00:38:00,400 --> 00:38:05,580
we just uploaded<font color="#E5E5E5"> and it needs to do this</font>

820
00:38:03,460 --> 00:38:09,580
to get a nonce<font color="#CCCCCC"> to do something else</font>

821
00:38:05,580 --> 00:38:16,509
<font color="#E5E5E5">so before we intercept the response to</font>

822
00:38:09,580 --> 00:38:18,460
<font color="#E5E5E5">that in here so it's</font><font color="#CCCCCC"> grabbing this nonce</font>

823
00:38:16,510 --> 00:38:20,950
which is a hidden value<font color="#E5E5E5"> in a form so it</font>

824
00:38:18,460 --> 00:38:26,590
can set the<font color="#CCCCCC"> the file value in the thumb</font>

825
00:38:20,950 --> 00:38:29,589
value to what it wants so this one is

826
00:38:26,590 --> 00:38:32,380
<font color="#E5E5E5">setting the</font><font color="#CCCCCC"> file name</font><font color="#E5E5E5"> to Zed colon slash</font>

827
00:38:29,590 --> 00:38:34,180
said<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> going to cause when that</font>

828
00:38:32,380 --> 00:38:35,800
replacement<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the base name happens</font>

829
00:38:34,180 --> 00:38:38,049
it's also going to<font color="#CCCCCC"> replace the very</font>

830
00:38:35,800 --> 00:38:41,580
start of the<font color="#E5E5E5"> file name which allows us</font>

831
00:38:38,050 --> 00:38:41,580
to trigger the stream<font color="#E5E5E5"> wrapper</font>

832
00:38:46,260 --> 00:38:54,670
and then it's setting the<font color="#E5E5E5"> value of thumb</font>

833
00:38:48,960 --> 00:38:56,859
<font color="#CCCCCC">to this far path now</font><font color="#E5E5E5"> I mentioned that in</font>

834
00:38:54,670 --> 00:38:58,330
<font color="#CCCCCC">the payload we can't use relative paths</font>

835
00:38:56,859 --> 00:39:01,359
but you'll see here<font color="#CCCCCC"> you know when we're</font>

836
00:38:58,330 --> 00:39:03,250
triggering the issue<font color="#E5E5E5"> we can find the</font>

837
00:39:01,359 --> 00:39:04,660
relative<font color="#E5E5E5"> path on</font><font color="#CCCCCC"> our local system and</font>

838
00:39:03,250 --> 00:39:06,670
this<font color="#CCCCCC"> is a you</font><font color="#E5E5E5"> know will be a valid</font>

839
00:39:04,660 --> 00:39:10,450
<font color="#E5E5E5">attack on any system because we're</font>

840
00:39:06,670 --> 00:39:11,849
simply<font color="#E5E5E5"> using you know a single dot so</font>

841
00:39:10,450 --> 00:39:15,629
just the<font color="#E5E5E5"> current directory and then</font>

842
00:39:11,849 --> 00:39:19,270
wp-content<font color="#E5E5E5"> where we've uploaded the file</font>

843
00:39:15,630 --> 00:39:22,180
<font color="#E5E5E5">so now we've set all those values when</font>

844
00:39:19,270 --> 00:39:29,910
<font color="#E5E5E5">we call this XML RPC method</font><font color="#CCCCCC"> get meteor</font>

845
00:39:22,180 --> 00:39:29,910
item it should do something interesting

846
00:39:30,390 --> 00:39:45,480
so at the<font color="#CCCCCC"> very end of this you'll see</font>

847
00:39:34,570 --> 00:39:47,830
<font color="#E5E5E5">that I've run LS dash L so very quickly</font>

848
00:39:45,480 --> 00:39:51,089
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the script and we could just</font>

849
00:39:47,830 --> 00:39:51,089
<font color="#E5E5E5">change that to anything</font>

850
00:40:00,470 --> 00:40:06,169
to<font color="#E5E5E5"> upload the file and triggers the</font>

851
00:40:03,089 --> 00:40:06,170
<font color="#CCCCCC">staff and runs at</font><font color="#E5E5E5"> one</font>

852
00:40:15,410 --> 00:40:20,819
<font color="#E5E5E5">okay so the final case</font><font color="#CCCCCC"> study is in a</font>

853
00:40:17,970 --> 00:40:23,669
<font color="#CCCCCC">library called</font><font color="#E5E5E5"> TC PDF which seems</font><font color="#CCCCCC"> to be</font>

854
00:40:20,820 --> 00:40:26,700
<font color="#E5E5E5">the</font><font color="#CCCCCC"> standard library to convert HTML</font><font color="#E5E5E5"> to</font>

855
00:40:23,670 --> 00:40:29,610
a PDF<font color="#E5E5E5"> in PHP</font><font color="#CCCCCC"> so loads of applications</font>

856
00:40:26,700 --> 00:40:33,330
use this it's sort of developed by one

857
00:40:29,610 --> 00:40:35,910
guy who's<font color="#E5E5E5"> been really</font><font color="#CCCCCC"> helpful</font><font color="#E5E5E5"> and I</font>

858
00:40:33,330 --> 00:40:37,259
think<font color="#CCCCCC"> he's you know he's depreciated it</font>

859
00:40:35,910 --> 00:40:38,779
and he's coming out<font color="#E5E5E5"> with a new</font><font color="#CCCCCC"> library</font>

860
00:40:37,260 --> 00:40:41,010
<font color="#E5E5E5">but I think he's gonna fix this</font>

861
00:40:38,780 --> 00:40:45,510
<font color="#E5E5E5">hopefully very</font><font color="#CCCCCC"> soon and released a new</font>

862
00:40:41,010 --> 00:40:48,300
version<font color="#E5E5E5"> so as I mentioned this is a very</font>

863
00:40:45,510 --> 00:40:50,130
<font color="#E5E5E5">common library to render into</font><font color="#CCCCCC"> a PDF so</font>

864
00:40:48,300 --> 00:40:53,220
it can be exposed<font color="#E5E5E5"> either deliberately</font>

865
00:40:50,130 --> 00:40:54,930
<font color="#E5E5E5">when you know by design we can edit the</font>

866
00:40:53,220 --> 00:40:58,529
HTML that's going to be put into a PDF

867
00:40:54,930 --> 00:41:00,270
<font color="#E5E5E5">but often in testing we find scenarios</font>

868
00:40:58,530 --> 00:41:02,580
where<font color="#CCCCCC"> you can cross-site script into</font>

869
00:41:00,270 --> 00:41:04,980
some HTML<font color="#E5E5E5"> that's being sent to a PDF and</font>

870
00:41:02,580 --> 00:41:07,490
<font color="#E5E5E5">that's a very common scenario for</font><font color="#CCCCCC"> server</font>

871
00:41:04,980 --> 00:41:09,900
<font color="#CCCCCC">side request forgery</font>

872
00:41:07,490 --> 00:41:10,640
so the vulnerability here is<font color="#E5E5E5"> really</font>

873
00:41:09,900 --> 00:41:13,800
<font color="#E5E5E5">simple</font>

874
00:41:10,640 --> 00:41:16,259
the library has a type HTML tag handler

875
00:41:13,800 --> 00:41:19,770
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if it</font><font color="#CCCCCC"> encounters an image tag it</font>

876
00:41:16,260 --> 00:41:21,510
calls<font color="#E5E5E5"> this other function image and this</font>

877
00:41:19,770 --> 00:41:23,730
does<font color="#E5E5E5"> various stuff but eventually falls</font>

878
00:41:21,510 --> 00:41:26,490
<font color="#E5E5E5">through to calling file exists on the</font>

879
00:41:23,730 --> 00:41:29,360
path that's<font color="#CCCCCC"> been supplied so let's</font><font color="#E5E5E5"> have</font>

880
00:41:26,490 --> 00:41:29,359
a<font color="#E5E5E5"> look at the demo for that</font>

881
00:41:39,650 --> 00:41:45,470
so again I need<font color="#E5E5E5"> to generate</font><font color="#CCCCCC"> a payload</font>

882
00:41:43,480 --> 00:42:18,020
obviously using a different bit to

883
00:41:45,470 --> 00:42:19,540
account will run<font color="#CCCCCC"> at ATC pasture as</font>

884
00:42:18,020 --> 00:42:22,400
similar to<font color="#E5E5E5"> typo3</font>

885
00:42:19,540 --> 00:42:26,990
<font color="#CCCCCC">this is quite a complex CMS that has</font>

886
00:42:22,400 --> 00:42:28,310
fine-grained access controls<font color="#CCCCCC"> and the</font>

887
00:42:26,990 --> 00:42:29,959
point here<font color="#CCCCCC"> is really</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

888
00:42:28,310 --> 00:42:32,240
vulnerabilities in the library<font color="#E5E5E5"> not in</font>

889
00:42:29,960 --> 00:42:39,290
the CMS but the CMS is a nice easy<font color="#E5E5E5"> way</font>

890
00:42:32,240 --> 00:42:41,029
to sort<font color="#E5E5E5"> of trigger it so again</font><font color="#CCCCCC"> the first</font>

891
00:42:39,290 --> 00:42:50,390
thing we need to do is just upload the

892
00:42:41,030 --> 00:42:52,430
payload which we generated and again the

893
00:42:50,390 --> 00:42:55,580
application<font color="#CCCCCC"> just sees this as if it's an</font>

894
00:42:52,430 --> 00:42:59,950
image<font color="#E5E5E5"> and I've already got within the</font>

895
00:42:55,580 --> 00:43:03,560
application an article sets up in fact

896
00:42:59,950 --> 00:43:10,939
<font color="#CCCCCC">I'd open this so at the moment the</font>

897
00:43:03,560 --> 00:43:14,840
article<font color="#CCCCCC"> just has xxx yyy in and I've got</font>

898
00:43:10,940 --> 00:43:16,550
this setting here<font color="#E5E5E5"> export as PDF enabled</font>

899
00:43:14,840 --> 00:43:17,720
so that's an option<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this article</font>

900
00:43:16,550 --> 00:43:23,120
which will send it straight to<font color="#CCCCCC"> the</font>

901
00:43:17,720 --> 00:43:25,990
<font color="#E5E5E5">library</font><font color="#CCCCCC"> so if I edit the contents of</font>

902
00:43:23,120 --> 00:43:25,990
this article

903
00:43:39,400 --> 00:43:46,690
so I'm gonna<font color="#E5E5E5"> Chuck an image tag into the</font>

904
00:43:42,080 --> 00:43:46,690
middle of the if I press the<font color="#CCCCCC"> right map</font>

905
00:43:54,940 --> 00:44:00,500
at the<font color="#E5E5E5"> moment I</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> put the stream</font>

906
00:43:57,350 --> 00:44:03,710
<font color="#E5E5E5">wrapper on that image tag I was just</font>

907
00:44:00,500 --> 00:44:07,580
going<font color="#E5E5E5"> to show you how it behaves</font><font color="#CCCCCC"> with</font>

908
00:44:03,710 --> 00:44:09,050
just a pointer<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> image so there's</font>

909
00:44:07,580 --> 00:44:12,890
no image as far as the<font color="#CCCCCC"> browsers</font>

910
00:44:09,050 --> 00:44:14,210
concerned<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that path</font><font color="#CCCCCC"> that the PDF</font>

911
00:44:12,890 --> 00:44:19,129
render it deals with it slightly

912
00:44:14,210 --> 00:44:22,720
differently<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> yet we'll get a PDF</font>

913
00:44:19,130 --> 00:44:22,720
<font color="#E5E5E5">with just the picture in as a picture</font>

914
00:44:30,290 --> 00:44:40,759
but if I<font color="#E5E5E5"> tell it</font><font color="#CCCCCC"> to use to try</font><font color="#E5E5E5"> to access</font>

915
00:44:33,329 --> 00:44:43,200
something<font color="#E5E5E5"> within that as an archive but</font>

916
00:44:40,760 --> 00:44:45,559
now the browser doesn't<font color="#CCCCCC"> even display a</font>

917
00:44:43,200 --> 00:44:48,808
broken image tab because<font color="#E5E5E5"> it doesn't like</font>

918
00:44:45,559 --> 00:44:50,099
sort<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> the scheme of far it's</font>

919
00:44:48,809 --> 00:44:53,400
obviously<font color="#E5E5E5"> not something the browser</font>

920
00:44:50,099 --> 00:44:57,349
knows what to do<font color="#CCCCCC"> in but once we tell it</font>

921
00:44:53,400 --> 00:44:57,349
to<font color="#E5E5E5"> generate a PDF it</font><font color="#CCCCCC"> should be suppose</font>

922
00:44:59,920 --> 00:45:04,799
[Applause]

923
00:45:02,180 --> 00:45:06,359
and<font color="#E5E5E5"> as the demos gone through and thanks</font>

924
00:45:04,799 --> 00:45:14,099
to the<font color="#E5E5E5"> person who told me interceptor</font>

925
00:45:06,359 --> 00:45:17,130
was on they all worked right in terms<font color="#E5E5E5"> of</font>

926
00:45:14,099 --> 00:45:20,010
<font color="#E5E5E5">defending against this issue</font><font color="#CCCCCC"> obviously</font>

927
00:45:17,130 --> 00:45:22,230
<font color="#CCCCCC">we'd love to avoid it</font><font color="#E5E5E5"> altogether by not</font>

928
00:45:20,010 --> 00:45:24,059
having the vulnerability but bear<font color="#CCCCCC"> in</font>

929
00:45:22,230 --> 00:45:25,740
<font color="#CCCCCC">mind that it's</font><font color="#E5E5E5"> xxe or server side</font>

930
00:45:24,059 --> 00:45:28,980
<font color="#E5E5E5">request forgery looking things obviously</font>

931
00:45:25,740 --> 00:45:31,200
<font color="#E5E5E5">these are found all the time certainly</font>

932
00:45:28,980 --> 00:45:33,660
<font color="#E5E5E5">should be easy to sort</font><font color="#CCCCCC"> of detect in a</font>

933
00:45:31,200 --> 00:45:35,910
<font color="#CCCCCC">signature based way so ids</font><font color="#E5E5E5"> is or IPS</font>

934
00:45:33,660 --> 00:45:37,799
this should be easily<font color="#E5E5E5"> able to pick up</font>

935
00:45:35,910 --> 00:45:42,058
<font color="#CCCCCC">the</font><font color="#E5E5E5"> fact that we've got</font><font color="#CCCCCC"> a nasty payload</font>

936
00:45:37,799 --> 00:45:43,740
in<font color="#E5E5E5"> an archive or</font><font color="#CCCCCC"> or a polyglot</font><font color="#E5E5E5"> you can't</font>

937
00:45:42,059 --> 00:45:45,450
disable<font color="#E5E5E5"> the stream wrapper from the</font>

938
00:45:43,740 --> 00:45:49,200
<font color="#E5E5E5">command</font><font color="#CCCCCC"> line as far as</font><font color="#E5E5E5"> I can tell or</font>

939
00:45:45,450 --> 00:45:50,970
from any any settings but if you know

940
00:45:49,200 --> 00:45:52,558
you really<font color="#E5E5E5"> urgent</font><font color="#CCCCCC"> Lee decided you needed</font>

941
00:45:50,970 --> 00:45:55,649
<font color="#CCCCCC">to disable this you could probably</font><font color="#E5E5E5"> look</font>

942
00:45:52,559 --> 00:45:57,420
at doing it<font color="#E5E5E5"> during compilation</font><font color="#CCCCCC"> I did let</font>

943
00:45:55,650 --> 00:45:59,819
PHP know about this a<font color="#E5E5E5"> couple of months</font>

944
00:45:57,420 --> 00:46:01,619
<font color="#E5E5E5">ago and I haven't heard back but I'm</font>

945
00:45:59,819 --> 00:46:03,270
hoping in the long term<font color="#CCCCCC"> that they'll</font>

946
00:46:01,619 --> 00:46:05,490
obviously<font color="#E5E5E5"> change the behavior because</font>

947
00:46:03,270 --> 00:46:07,980
there isn't<font color="#CCCCCC"> really any reason to</font><font color="#E5E5E5"> one</font>

948
00:46:05,490 --> 00:46:09,959
serialize that data at that<font color="#E5E5E5"> point though</font>

949
00:46:07,980 --> 00:46:11,579
there's you know that<font color="#CCCCCC"> it's a feature</font>

950
00:46:09,960 --> 00:46:13,799
that supposed to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> there that you can</font>

951
00:46:11,579 --> 00:46:15,420
have metadata in these<font color="#E5E5E5"> archives but</font>

952
00:46:13,799 --> 00:46:17,339
there's no<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> to unsee</font><font color="#E5E5E5"> realize it</font>

953
00:46:15,420 --> 00:46:19,829
until<font color="#E5E5E5"> someone specifically requests it</font>

954
00:46:17,339 --> 00:46:23,069
rather than just<font color="#E5E5E5"> accessing the archive</font>

955
00:46:19,829 --> 00:46:25,680
through the stream<font color="#E5E5E5"> wrapper</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> what do</font>

956
00:46:23,069 --> 00:46:27,480
I want<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to take away</font><font color="#CCCCCC"> so it more</font>

957
00:46:25,680 --> 00:46:30,029
broadly than<font color="#E5E5E5"> just this issue I</font><font color="#CCCCCC"> think</font>

958
00:46:27,480 --> 00:46:32,960
there's there's a deeper issue<font color="#E5E5E5"> in</font>

959
00:46:30,030 --> 00:46:35,190
in<font color="#E5E5E5"> this in PHP and other languages</font><font color="#CCCCCC"> that</font>

960
00:46:32,960 --> 00:46:37,260
<font color="#CCCCCC">basically applications are getting more</font>

961
00:46:35,190 --> 00:46:39,660
and<font color="#CCCCCC"> more complex and</font><font color="#E5E5E5"> we're not paying</font>

962
00:46:37,260 --> 00:46:41,880
any attention to what<font color="#E5E5E5"> code</font><font color="#CCCCCC"> is included</font>

963
00:46:39,660 --> 00:46:45,240
<font color="#CCCCCC">we're leaving</font><font color="#E5E5E5"> stuff in that's no longer</font>

964
00:46:41,880 --> 00:46:47,130
<font color="#E5E5E5">used this library manager called</font>

965
00:46:45,240 --> 00:46:50,520
<font color="#CCCCCC">composers seems to be the standard now</font>

966
00:46:47,130 --> 00:46:52,890
in PHP<font color="#E5E5E5"> and that lets you through on</font>

967
00:46:50,520 --> 00:46:55,290
serialization load any class included in

968
00:46:52,890 --> 00:46:57,720
the application<font color="#E5E5E5"> by abusing the stream</font>

969
00:46:55,290 --> 00:47:00,290
wrapper<font color="#E5E5E5"> in a few different vulnerability</font>

970
00:46:57,720 --> 00:47:02,759
scenarios we can<font color="#CCCCCC"> trigger</font><font color="#E5E5E5"> this behavior</font>

971
00:47:00,290 --> 00:47:05,070
<font color="#E5E5E5">some of the</font><font color="#CCCCCC"> vulnerabilities that</font><font color="#E5E5E5"> we can</font>

972
00:47:02,760 --> 00:47:07,470
get code execution<font color="#CCCCCC"> from would have been</font>

973
00:47:05,070 --> 00:47:10,460
considered extremely<font color="#E5E5E5"> minor especially if</font>

974
00:47:07,470 --> 00:47:13,049
you<font color="#E5E5E5"> know allow URL F open</font><font color="#CCCCCC"> was set to</font><font color="#E5E5E5"> OFF</font>

975
00:47:10,460 --> 00:47:14,820
<font color="#CCCCCC">they might have disclosed to you that a</font>

976
00:47:13,050 --> 00:47:16,620
local file exists was what people<font color="#CCCCCC"> would</font>

977
00:47:14,820 --> 00:47:20,970
<font color="#E5E5E5">have imagined the worst that could</font>

978
00:47:16,620 --> 00:47:23,430
happen and it's fairly easy<font color="#E5E5E5"> to find</font>

979
00:47:20,970 --> 00:47:26,959
<font color="#E5E5E5">these issues either through black box</font>

980
00:47:23,430 --> 00:47:26,960
<font color="#E5E5E5">techniques or</font><font color="#CCCCCC"> gold analysis</font>

