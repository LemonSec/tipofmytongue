1
00:00:00,040 --> 00:00:03,750
are good afternoon everyone arm you are
in dallas won

2
00:00:03,750 --> 00:00:07,830
and the name on this talk is pressed
through to continue detecting OS X and

3
00:00:07,830 --> 00:00:09,769
Windows bond that's what argue

4
00:00:09,769 --> 00:00:13,660
senior RDF you I hand you over to your
prisoners thank you

5
00:00:13,660 --> 00:00:18,800
hello my name is Mario exxon

6
00:00:18,800 --> 00:00:20,460
and the

7
00:00:20,460 --> 00:00:23,500
we're here to talk about actually are

8
00:00:23,500 --> 00:00:24,740
boot kits

9
00:00:24,740 --> 00:00:28,330
are you for you if I are and

10
00:00:28,330 --> 00:00:31,180
really you know again you know to I
think people from when former than

11
00:00:31,180 --> 00:00:34,269
fortunately the year fis not seen are
tabloids

12
00:00:34,270 --> 00:00:39,390
size the and also it's not in
Technicolor Sarmina

13
00:00:39,390 --> 00:00:42,920
letters will be smaller and another
definitely like a collar

14
00:00:42,920 --> 00:00:46,290
about serving nevertheless in a fine
it's very exciting

15
00:00:46,290 --> 00:00:50,059
and interesting and I would like to
first begin by first telling you

16
00:00:50,059 --> 00:00:53,160
more in terms of how we're going to
structure the stock be obviously

17
00:00:53,160 --> 00:00:55,320
interesting tell me more about our
motivation

18
00:00:55,320 --> 00:00:58,650
unifies knots everybody's cup of tea
it's not really

19
00:00:58,650 --> 00:01:01,699
I love written about all that much

20
00:01:01,699 --> 00:01:05,259
all their last year's seniors see more
and more research we also like to talk

21
00:01:05,260 --> 00:01:07,689
to you more about who we are as we have
been

22
00:01:07,689 --> 00:01:12,030
regularly speaking at like at 10 are
releasing various open source projects

23
00:01:12,030 --> 00:01:17,159
and the we find you know this research
been growing extension of what we've

24
00:01:17,159 --> 00:01:17,770
been doing

25
00:01:17,770 --> 00:01:22,908
are also we had like 10 follow-up while
with the surf in a brief introduction to

26
00:01:22,909 --> 00:01:24,409
you if I am sure a lot

27
00:01:24,409 --> 00:01:28,530
in a lottery are very aren't familiar
with it but nevertheless it's a unit

28
00:01:28,530 --> 00:01:29,580
with surfing a2

29
00:01:29,580 --> 00:01:33,039
had to set the stage in and also to
mention some other previous

30
00:01:33,039 --> 00:01:37,189
you fight with cancer %uh research are
some of its present at that

31
00:01:37,189 --> 00:01:40,310
Black Cats very good material thats

32
00:01:40,310 --> 00:01:43,729
a will certainly are influential

33
00:01:43,729 --> 00:01:48,189
in our own work I and the then we want
to get into the actually are presenting

34
00:01:48,189 --> 00:01:52,319
garth detection framework or what we
called Rd a few

35
00:01:52,319 --> 00:01:55,409
by we are looking at the framework
designed

36
00:01:55,409 --> 00:01:58,770
they're thinking about you know
discussing car

37
00:01:58,770 --> 00:02:02,649
are rare reasons that's our

38
00:02:02,649 --> 00:02:05,749
were behind its structure

39
00:02:05,749 --> 00:02:09,090
and then also are going through the
VMware implementation

40
00:02:09,090 --> 00:02:13,400
demo and then obviously their every good
defense measure our

41
00:02:13,400 --> 00:02:16,020
comes with proof of our

42
00:02:16,020 --> 00:02:17,560
are

43
00:02:17,560 --> 00:02:20,720
to approve concepts are

44
00:02:20,720 --> 00:02:26,850
material to validated so we will I i dnt
the talker are demonstrate the Mac OS

45
00:02:26,850 --> 00:02:29,000
attend

46
00:02:29,000 --> 00:02:32,510
with kids now I'm

47
00:02:32,510 --> 00:02:35,810
to start somewhere it's really our
motivation

48
00:02:35,810 --> 00:02:38,830
and so are we as a company

49
00:02:38,830 --> 00:02:42,650
have always been very much interested in
there are followed born threats

50
00:02:42,650 --> 00:02:45,710
a the file analysis and

51
00:02:45,710 --> 00:02:48,710
after having spent a lot of time with
Windows with the

52
00:02:48,710 --> 00:02:52,500
with Alf documents for more are more
while packages

53
00:02:52,500 --> 00:02:57,020
be really sad like no hey you know min
even really really interesting

54
00:02:57,020 --> 00:03:00,610
to do a deeper dive bar me know on the
from a reliable

55
00:03:00,610 --> 00:03:04,090
are so I love you obviously know this
that's you know

56
00:03:04,090 --> 00:03:08,260
you know you if I said popularity these
days is really paramount as it runs

57
00:03:08,260 --> 00:03:12,200
on Windows platform in Iran sundar
Android runs

58
00:03:12,200 --> 00:03:15,090
on the Mac OS and it's actually are

59
00:03:15,090 --> 00:03:18,959
are everywhere and not just on that it's
a everywhere it's extremely powerful

60
00:03:18,959 --> 00:03:23,480
Rufi today the zona for stock car or
C-nine has

61
00:03:23,480 --> 00:03:27,670
all the cool things you would want other
OS to allow you to write through really

62
00:03:27,670 --> 00:03:29,310
really cool applications

63
00:03:29,310 --> 00:03:33,519
sitting atop a bit and obviously its
exiting extremely interesting girl for

64
00:03:33,519 --> 00:03:36,110
exploitation that point saw it has

65
00:03:36,110 --> 00:03:41,959
a special arm are set the power for
remembering fire many manipulation

66
00:03:41,959 --> 00:03:44,120
features who has a full network stack

67
00:03:44,120 --> 00:03:48,620
which definitely know very very are
important enough for our the

68
00:03:48,620 --> 00:03:52,910
a exploitation but that also has lotsa
really other cool things

69
00:03:52,910 --> 00:03:56,560
such as graphic APIC can imagine you
know the the vulnerable to the siege

70
00:03:56,560 --> 00:03:57,280
that area

71
00:03:57,280 --> 00:04:01,690
could be extremely extremely useful I
has a great in our device management

72
00:04:01,690 --> 00:04:06,209
our capability and it also has a
believed to do our remote boots are you

73
00:04:06,209 --> 00:04:07,030
pretty much have

74
00:04:07,030 --> 00:04:10,890
all the elements are to be able to do
are really really interesting and

75
00:04:10,890 --> 00:04:11,620
wonderful

76
00:04:11,620 --> 00:04:15,510
a attack your components

77
00:04:15,510 --> 00:04:19,280
now I beyond these said the feature set

78
00:04:19,280 --> 00:04:23,050
are you if I is really attackers
paradise because the defenders

79
00:04:23,050 --> 00:04:26,380
definitely have a lot disadvantages in
the area

80
00:04:26,380 --> 00:04:30,050
you know it has definitely visibility
because there's very few

81
00:04:30,050 --> 00:04:33,980
tools and actually do anything about
intact any presence or

82
00:04:33,980 --> 00:04:39,040
malformation or invalid traffic
originating specifically from there

83
00:04:39,040 --> 00:04:44,820
you if I stack then all zarar if you
were actually trying to investigates

84
00:04:44,820 --> 00:04:48,849
a I am a malicious

85
00:04:48,850 --> 00:04:52,860
for Murray mentioned herein malicious
you if I image you be very difficult for

86
00:04:52,860 --> 00:04:56,780
you to set up our own are nice
off-the-shelf are tall stack largely we

87
00:04:56,780 --> 00:04:58,270
have to build your own things

88
00:04:58,270 --> 00:05:02,180
would be extremely painful a lot of
stuff would be hard for connected

89
00:05:02,180 --> 00:05:06,419
I eat you know of should get stacked
against you

90
00:05:06,419 --> 00:05:09,719
in actually trying to easily and quickly
analyze what's happening

91
00:05:09,720 --> 00:05:14,580
of course I R you know they're you know
there are being in this story lots of

92
00:05:14,580 --> 00:05:15,359
you know

93
00:05:15,360 --> 00:05:19,380
who knows I'll good positive elements in
the nearby has been around the

94
00:05:19,380 --> 00:05:23,729
has been developed here in almost in
backing from actually

95
00:05:23,729 --> 00:05:27,289
you know in depth in a security a
analysis

96
00:05:27,290 --> 00:05:32,040
about you know what we've seen with you
if i secure both specially are on some

97
00:05:32,040 --> 00:05:34,050
Android devices and service RT

98
00:05:34,050 --> 00:05:37,370
is definitely very promising cancer much
higher

99
00:05:37,370 --> 00:05:40,380
a security strength we have ever seen

100
00:05:40,380 --> 00:05:43,740
when you fry and we are really hoping
that that most of the new

101
00:05:43,740 --> 00:05:47,610
devices will be are shipping with secure
boats

102
00:05:47,610 --> 00:05:52,669
enabled now are few words about who we
are are so the company was far found

103
00:05:52,669 --> 00:05:56,830
that you know by tossing a me Mario son
and thomas affair channel were here

104
00:05:56,830 --> 00:05:59,830
we've started a company known I'm

105
00:05:59,830 --> 00:06:05,789
and the our focus has always been in the
final analysis open wide range of our

106
00:06:05,789 --> 00:06:08,830
executable of formats and

107
00:06:08,830 --> 00:06:12,950
ago while doing the analysis clearly try
to pull out as much

108
00:06:12,950 --> 00:06:18,300
material I'll give those formats
specifically trying to understand the

109
00:06:18,300 --> 00:06:21,720
the reputation of various components
malformations

110
00:06:21,720 --> 00:06:24,900
and the different anomaly here the
texan's

111
00:06:24,900 --> 00:06:30,530
now I R in our process of developing
some commercial products we have her

112
00:06:30,530 --> 00:06:33,490
been very very are interested in our

113
00:06:33,490 --> 00:06:37,900
developing our why the Ranger open
source and free were tools we start in

114
00:06:37,900 --> 00:06:38,650
09 with

115
00:06:38,650 --> 00:06:43,159
something that's called the a tight to
mention which is a really a a library

116
00:06:43,159 --> 00:06:44,000
for

117
00:06:44,000 --> 00:06:47,460
portable executable form at the
construction and has been successfully

118
00:06:47,460 --> 00:06:49,289
used by various organization

119
00:06:49,289 --> 00:06:51,669
in building you know from a

120
00:06:51,670 --> 00:06:57,670
I'll custom on Packers to oval nobility
scanners and even some in a pen testing

121
00:06:57,670 --> 00:06:59,270
cora projects

122
00:06:59,270 --> 00:07:02,580
then we really had to car

123
00:07:02,580 --> 00:07:05,299
deeper dive into archive for

124
00:07:05,299 --> 00:07:09,149
formats release 13 2010 something called
me an extension

125
00:07:09,149 --> 00:07:13,249
which was the archive formats take a
detection tool are something that's a

126
00:07:13,249 --> 00:07:14,839
only recently

127
00:07:14,839 --> 00:07:16,069
words the

128
00:07:16,069 --> 00:07:19,550
blue boxer Android announcements has
actually

129
00:07:19,550 --> 00:07:23,199
come a full circle we have realized that
we have had a tool to

130
00:07:23,199 --> 00:07:27,759
other texts a these really more like you
know

131
00:07:27,759 --> 00:07:31,490
stagger hiding you know artifacts inside
of you know and Rita

132
00:07:31,490 --> 00:07:35,080
AP case and we believe that there is
this is serving a really interesting

133
00:07:35,080 --> 00:07:38,560
area to go back to and try to see how
they are performance

134
00:07:38,560 --> 00:07:42,240
actually I the can

135
00:07:42,240 --> 00:07:46,660
a be misused you know in an executable
our environment

136
00:07:46,660 --> 00:07:50,370
following our next engine we

137
00:07:50,370 --> 00:07:54,509
try to put together a open source a
platform for actually

138
00:07:54,509 --> 00:07:57,970
on Packer writing analysis of RR

139
00:07:57,970 --> 00:08:01,820
Windows binaries which we then followed
with an R

140
00:08:01,820 --> 00:08:03,659
unofficial guide to a

141
00:08:03,660 --> 00:08:08,270
p.m. of formation promise on the summer
some if you are keen to that saw couple

142
00:08:08,270 --> 00:08:08,890
years ago

143
00:08:08,890 --> 00:08:12,780
we really really surprised how many
people over a

144
00:08:12,780 --> 00:08:16,210
excited you know about you know always
new things that you

145
00:08:16,210 --> 00:08:18,219
arcane

146
00:08:18,219 --> 00:08:22,619
I learned from P you know so for us it's
thats format never cease to

147
00:08:22,619 --> 00:08:28,519
surprise us and then last year I'll we
year are we started za

148
00:08:28,519 --> 00:08:32,870
a project that is our first cooperation
with our perceived c:\program

149
00:08:32,870 --> 00:08:36,870
I and we have released for something
called their file disaffection framework

150
00:08:36,870 --> 00:08:41,750
we h are is in our open source platform
that allows people to actually write

151
00:08:41,750 --> 00:08:42,799
this in factors

152
00:08:42,800 --> 00:08:46,899
I'll fight you know there's a picture
detectors for very cinefile

153
00:08:46,899 --> 00:08:51,569
infection attacks on the Windows and
this obviously bring just enough to this

154
00:08:51,569 --> 00:08:52,560
year's sir

155
00:08:52,560 --> 00:08:57,490
I'll work that theater on you if I that
has also been

156
00:08:57,490 --> 00:08:58,889
funded by

157
00:08:58,889 --> 00:09:03,660
darpa CFT so having said that obviously
would love to

158
00:09:03,660 --> 00:09:07,509
things are perceived to be for being
such a great program that has allow this

159
00:09:07,509 --> 00:09:08,230
to work

160
00:09:08,230 --> 00:09:12,769
on things that's were you know things
three a really interesting that the one

161
00:09:12,769 --> 00:09:15,639
who wanted to do but we're slightly
outside of our Reno

162
00:09:15,639 --> 00:09:18,660
commercial RR offering

163
00:09:18,660 --> 00:09:22,399
but nevertheless are relevance topics
for the

164
00:09:22,399 --> 00:09:26,819
community in general are also we would
like to

165
00:09:26,819 --> 00:09:29,469
R&R expressly thanks to our

166
00:09:29,470 --> 00:09:33,519
in a several researchers that have
influenced the this presentation and

167
00:09:33,519 --> 00:09:35,209
whose work will be citing

168
00:09:35,209 --> 00:09:41,600
as we are set the stage for are talking
go deeper about the RT a few

169
00:09:41,600 --> 00:09:45,550
she wanna thank to join his man who
spoke at Black Cat in 2007

170
00:09:45,550 --> 00:09:50,079
I V one RRR thing to snare from
assurance cool spoke last year

171
00:09:50,079 --> 00:09:54,610
really great talk are here a black cat
be also like to our thang to Bhangra

172
00:09:54,610 --> 00:09:55,839
think who spoke

173
00:09:55,839 --> 00:10:00,029
there are only a couple days later that
Khan and service the encroachment extra

174
00:10:00,029 --> 00:10:01,870
cool had an interesting for

175
00:10:01,870 --> 00:10:06,220
I with kids are talk at the hack in the
box in Amsterdam

176
00:10:06,220 --> 00:10:09,980
Justin or a few months ago so we offer
though

177
00:10:09,980 --> 00:10:14,000
for the you are you dr. in one HTC
Tomislav

178
00:10:14,000 --> 00:10:19,810
and he or continue with you if i hope

179
00:10:19,810 --> 00:10:23,060
and my name is some slippage in on d2 sa
track

180
00:10:23,060 --> 00:10:26,480
they go through for some months on the
guy behind a

181
00:10:26,480 --> 00:10:30,879
while the one of the guys behind all the
projects mine has mentioned so far

182
00:10:30,879 --> 00:10:35,529
today we are focusing on the UEFI an
early this project which is sponsored by

183
00:10:35,529 --> 00:10:36,050
the Harper

184
00:10:36,050 --> 00:10:40,459
so how does the booting process look
today

185
00:10:40,459 --> 00:10:43,519
on machines that do not have you too you
if I so this is the

186
00:10:43,519 --> 00:10:47,810
old version of following the operating
system so you start with the

187
00:10:47,810 --> 00:10:51,259
buy ostriches the basic input/output
system you load

188
00:10:51,259 --> 00:10:54,269
the operating system to its rating to
the

189
00:10:54,269 --> 00:10:57,290
the in the army in BR that is all

190
00:10:57,290 --> 00:11:01,259
executed in real mode %uh the control is
then passed through the windows

191
00:11:01,259 --> 00:11:02,139
components

192
00:11:02,139 --> 00:11:05,290
we'd should any you and initialize the
kernel

193
00:11:05,290 --> 00:11:08,449
a run the other a hard group action
layers are

194
00:11:08,449 --> 00:11:12,069
create sessions and so on this is the

195
00:11:12,069 --> 00:11:16,719
all the model which still is in use
today on the older machines but

196
00:11:16,720 --> 00:11:21,509
if you have bought the laptop or a PC
recently within the last couple years

197
00:11:21,509 --> 00:11:26,529
you most commonly have a thing called I
unified extensible firmware interface

198
00:11:26,529 --> 00:11:29,709
solar what it is it's a in

199
00:11:29,709 --> 00:11:33,279
it's a set of tools that to enable the

200
00:11:33,279 --> 00:11:37,699
people who Creed devices to it really
easily

201
00:11:37,699 --> 00:11:41,100
a create new protocols and support you
new devices

202
00:11:41,100 --> 00:11:44,720
it was originally developed by in full
with something which is called

203
00:11:44,720 --> 00:11:48,790
intell boot initiative I it is being
worked on ever sense

204
00:11:48,790 --> 00:11:53,250
anne's are now grown into a community
effort to modernize the PC booting

205
00:11:53,250 --> 00:11:54,120
process

206
00:11:54,120 --> 00:11:59,689
it greatly ships as Abboud of Shin
alongside understand that legacy by RC

207
00:11:59,689 --> 00:12:00,849
have to turn it on

208
00:12:00,850 --> 00:12:05,779
on most on on most devices you choose to
install an operating system

209
00:12:05,779 --> 00:12:09,929
we have had their turn on to be able to
actually install you if I

210
00:12:09,929 --> 00:12:13,600
other operating systems like Windows all
support to secure boot

211
00:12:13,600 --> 00:12:17,279
so that enables you to have much more
security when you're on

212
00:12:17,279 --> 00:12:21,459
installing an operating system to make
sure net all the components have not

213
00:12:21,459 --> 00:12:22,540
been tampered bit

214
00:12:22,540 --> 00:12:27,920
while you are booting into your
operating system solo the FIA aims to be

215
00:12:27,920 --> 00:12:29,309
the future

216
00:12:29,309 --> 00:12:34,059
a the only putting in the face in the
future it is used today in all

217
00:12:34,059 --> 00:12:37,839
Intel intel-powered a Mac are I'm Mac
books

218
00:12:37,839 --> 00:12:42,110
and PC as well it is managed by the

219
00:12:42,110 --> 00:12:45,149
unified extensible firmware interface
consortium

220
00:12:45,149 --> 00:12:48,630
and you can find and download the specs
on their website

221
00:12:48,630 --> 00:12:52,029
a it's a pretty good read even though
it's like two thousand pages

222
00:12:52,029 --> 00:12:56,230
there's quite a bit of and elements
there which you can find me to really

223
00:12:56,230 --> 00:13:00,240
interesting most to those were use for
this particular talk with death enabled

224
00:13:00,240 --> 00:13:01,189
us to create

225
00:13:01,189 --> 00:13:04,490
Rd a few so how does the voting system

226
00:13:04,490 --> 00:13:07,720
change when there's unified extensible
firmware interface

227
00:13:07,720 --> 00:13:11,309
so the only thing which actually changes
is there's no more

228
00:13:11,309 --> 00:13:14,529
my arse all the firmware gets
initialized by the

229
00:13:14,529 --> 00:13:20,160
you if I bend dead end the you if I go
through the list of available devices

230
00:13:20,160 --> 00:13:24,449
Carlos the boot manager in this case be
highlighted the Microsoft the

231
00:13:24,449 --> 00:13:27,959
with manager which then selects which
operating system

232
00:13:27,959 --> 00:13:31,759
wants to it wants to load than all the
remaining things

233
00:13:31,759 --> 00:13:35,660
happen as they were before in Windows so
do you if I

234
00:13:35,660 --> 00:13:39,029
is something which boots on the machine
but

235
00:13:39,029 --> 00:13:43,929
it also leaves the remnants running as
long as the PCs powered on

236
00:13:43,929 --> 00:13:47,439
so in in our shelf this is a conceptual
overview

237
00:13:47,439 --> 00:13:52,679
of how this entire stack looks likes on
the top you have the operating system

238
00:13:52,679 --> 00:13:55,720
and the bottom you had the FIA operating
system loader

239
00:13:55,720 --> 00:13:59,010
which initialize the entire process so
the EF I

240
00:13:59,010 --> 00:14:03,910
consists of the food services which
really important runtime: services while

241
00:14:03,910 --> 00:14:07,410
so does are gonna be did two things we
talk about next

242
00:14:07,410 --> 00:14:10,769
in addition to dat you had the
underlying layers on the platform

243
00:14:10,769 --> 00:14:11,610
hardware

244
00:14:11,610 --> 00:14:15,549
which is up shot dead by the unified
expense extensible interface

245
00:14:15,549 --> 00:14:19,959
from where which enables you to you
communicate with devices to create new

246
00:14:19,959 --> 00:14:20,889
protocols

247
00:14:20,889 --> 00:14:24,019
and so on all that is contained on and

248
00:14:24,019 --> 00:14:28,240
if I partition and that is actually
installed by the operating system so

249
00:14:28,240 --> 00:14:29,429
when you create

250
00:14:29,429 --> 00:14:33,269
I a new install of windows for example
would be steamy get

251
00:14:33,269 --> 00:14:38,169
to new partitions a 140 if i layer an
additional Windows

252
00:14:38,169 --> 00:14:41,569
a partition which actually is used for

253
00:14:41,569 --> 00:14:45,309
storing additional Windows the to up
following data have other

254
00:14:45,309 --> 00:14:49,569
IDR parts of the disc which are used by
the user

255
00:14:49,569 --> 00:14:54,059
so the boot sequence i has changed a bit
so here's how it looks like today

256
00:14:54,059 --> 00:14:57,079
all the green items are two things that
happen with

257
00:14:57,079 --> 00:15:01,549
with the with managers assistance so
you'd munis lies the platform by loading

258
00:15:01,549 --> 00:15:02,510
the firmware

259
00:15:02,510 --> 00:15:06,260
and then the firmware takes off my
loading other interesting things which

260
00:15:06,260 --> 00:15:09,040
need to be lowered its like if I drivers

261
00:15:09,040 --> 00:15:11,880
all those drivers had that have an
option of running additional

262
00:15:11,880 --> 00:15:12,889
applications

263
00:15:12,889 --> 00:15:17,240
and all that is to assure that all the
devices you have on the machine

264
00:15:17,240 --> 00:15:20,439
are actually communicating properly I

265
00:15:20,439 --> 00:15:23,500
once the boarding process has completed
the

266
00:15:23,500 --> 00:15:27,839
the defi search for the such as forty
always lower code

267
00:15:27,839 --> 00:15:31,299
and heater boots out that's the specific
application

268
00:15:31,299 --> 00:15:36,169
which then calls al- function which
terminates the building services which

269
00:15:36,169 --> 00:15:37,750
actually shuts down

270
00:15:37,750 --> 00:15:43,169
part are defi drivers which I'm just
meant to be running as

271
00:15:43,169 --> 00:15:47,939
device is booting a once that happens
the control is faster the operating

272
00:15:47,939 --> 00:15:48,559
system

273
00:15:48,559 --> 00:15:51,569
we stand continues on normally

274
00:15:51,569 --> 00:15:54,970
so with that in mind here a couple
different things we shouldn't we

275
00:15:54,970 --> 00:15:56,620
shouldn't really know about that

276
00:15:56,620 --> 00:16:00,220
you're fighting occurred images and that
is that they are typically portable

277
00:16:00,220 --> 00:16:01,730
executable switch our

278
00:16:01,730 --> 00:16:05,260
which is the most important thing for us
because for to executable format is

279
00:16:05,260 --> 00:16:07,540
something we have been talking about in
the past

280
00:16:07,540 --> 00:16:11,500
and has just one subset all tile that
format that's why this was

281
00:16:11,500 --> 00:16:15,519
of interest to us months in addition to
die and the standard actually predicts

282
00:16:15,519 --> 00:16:18,860
there are other formats as well so
basically any when they're can

283
00:16:18,860 --> 00:16:22,000
Greek any kind of executable for mines
they want

284
00:16:22,000 --> 00:16:25,049
so include designed this format coltie

285
00:16:25,049 --> 00:16:30,910
I and he's mean used by Apple as while
in their implementation of the UEFI

286
00:16:30,910 --> 00:16:34,589
so even though you if I he's a standard
anybody can a

287
00:16:34,589 --> 00:16:39,029
basically use any part the vid and
create a standard on their own basically

288
00:16:39,029 --> 00:16:40,790
that includes the UEFI

289
00:16:40,790 --> 00:16:45,189
I images while that was the case with
with the first version on the you find

290
00:16:45,189 --> 00:16:48,679
the specification which was on point and
ideal leader

291
00:16:48,679 --> 00:16:52,679
a specifications so 2.0 which is the
more most more current

292
00:16:52,679 --> 00:16:56,199
is much more streak in that regard to
have

293
00:16:56,199 --> 00:17:00,169
to you types of your fight images you
have drivers switch

294
00:17:00,169 --> 00:17:04,579
yet again there are two types of drivers
we had to do service try risk which are

295
00:17:04,579 --> 00:17:08,148
actually terminated as soon as the
operating system loader

296
00:17:08,149 --> 00:17:11,959
calls the exit do services so and that
point all the drivers

297
00:17:11,959 --> 00:17:16,350
are which are just food service drivers
RI Louis from the system

298
00:17:16,349 --> 00:17:19,839
and the system is a the continues with a
lonely

299
00:17:19,839 --> 00:17:24,958
yours had the run them service drivers
which are present all time so as long as

300
00:17:24,959 --> 00:17:27,339
the application or the system is running

301
00:17:27,339 --> 00:17:30,549
all those drivers are also running as
well

302
00:17:30,549 --> 00:17:36,000
so that a death becomes a really nice a
way for you to inject any kind of cold

303
00:17:36,000 --> 00:17:39,500
which actually runs as long as the
machine is running and that is what I

304
00:17:39,500 --> 00:17:41,059
project is focused on

305
00:17:41,059 --> 00:17:45,928
finding these images and letting you
know that they are present in the system

306
00:17:45,929 --> 00:17:49,600
so those with more the drivers they're
also obligations there's two types of

307
00:17:49,600 --> 00:17:51,780
occasions like normal applications

308
00:17:51,780 --> 00:17:55,780
that actually exist exist then execute
only in the pre with environment

309
00:17:55,780 --> 00:17:59,639
I'm gonna show you how that looks like
an hour later on during the demo

310
00:17:59,639 --> 00:18:03,659
and there's a specific I you file the
cation which just slows the operating

311
00:18:03,659 --> 00:18:04,409
system

312
00:18:04,409 --> 00:18:08,030
and that's the only kind of the cation
which can actually take control the

313
00:18:08,030 --> 00:18:08,760
system

314
00:18:08,760 --> 00:18:12,260
I by calling the exit good services
which then later on

315
00:18:12,260 --> 00:18:17,340
on Lowe's all the drivers are which are
the food service drivers

316
00:18:17,340 --> 00:18:22,070
so I how do do these programs
communicate with the firmware

317
00:18:22,070 --> 00:18:26,559
there's this thing called boo services
and and run them services while

318
00:18:26,559 --> 00:18:30,889
still both services are you can become
its like a said on the PI's which are

319
00:18:30,889 --> 00:18:35,000
available to developers which are
actually creating programs that's Ron

320
00:18:35,000 --> 00:18:38,690
in the you find a buyer meant and
ecosystem functions which are only

321
00:18:38,690 --> 00:18:40,050
available before

322
00:18:40,050 --> 00:18:43,450
the exit both services is called seldes
these would be

323
00:18:43,450 --> 00:18:48,369
and it was service drivers so the have
functions which can be categorized as

324
00:18:48,369 --> 00:18:51,418
as global so they are available
everywhere

325
00:18:51,419 --> 00:18:54,940
and they're also handle based which
means that you can dynamically trees

326
00:18:54,940 --> 00:18:56,119
protocols

327
00:18:56,119 --> 00:18:59,360
by applying many of these handle
characteristics

328
00:18:59,360 --> 00:19:02,820
do I handles that are already open by
opening under handles

329
00:19:02,820 --> 00:19:05,860
you basically Creepo locals are so we
have

330
00:19:05,860 --> 00:19:10,300
a global functions which are available
on all platforms that is by you if I

331
00:19:10,300 --> 00:19:11,440
specification

332
00:19:11,440 --> 00:19:16,429
I see have you meant the you can do
basic task with these kinds of the PI's

333
00:19:16,429 --> 00:19:17,000
like

334
00:19:17,000 --> 00:19:20,559
creative answer timers allocate some
memory

335
00:19:20,559 --> 00:19:23,559
a can look other protocols which can be

336
00:19:23,559 --> 00:19:27,550
available if a specific device and
driver is it in is installed

337
00:19:27,550 --> 00:19:31,580
have image services which enable you to
communicate with other low the drivers

338
00:19:31,580 --> 00:19:35,220
and you have other miscellaneous
services while so handle waste are not

339
00:19:35,220 --> 00:19:38,020
are specific functionality they're not
available

340
00:19:38,020 --> 00:19:41,429
everywhere and their own media if you
create a handle

341
00:19:41,429 --> 00:19:45,050
warriors are other devices which other
device drivers we have

342
00:19:45,050 --> 00:19:48,280
which have created that and less while

343
00:19:48,280 --> 00:19:51,730
to the leaderboard services he also had
the runtime services

344
00:19:51,730 --> 00:19:54,980
which are unavailable throughout the
actual

345
00:19:54,980 --> 00:19:59,790
a loading process so as long as the
first machines running

346
00:19:59,790 --> 00:20:03,710
does run time: services are available I

347
00:20:03,710 --> 00:20:07,250
yet again these are functions are also
global and handle waste and you can

348
00:20:07,250 --> 00:20:08,950
dynamically create them as well

349
00:20:08,950 --> 00:20:12,889
I unlike and the booth services at these
ones are can

350
00:20:12,889 --> 00:20:16,240
on a offer different kinds of things

351
00:20:16,240 --> 00:20:19,419
I like Kyle runtime: rules you can a

352
00:20:19,419 --> 00:20:24,919
create noses while you can a accident
the variable services so

353
00:20:24,919 --> 00:20:29,639
I you can also creeds as you can axis
time and other things like a

354
00:20:29,639 --> 00:20:33,520
keyboard and so on and so forth they
also handle based as while

355
00:20:33,520 --> 00:20:36,980
so you can create more on the fly

356
00:20:36,980 --> 00:20:42,190
so how to developers actually use these
kinds of a of available tools

357
00:20:42,190 --> 00:20:45,389
so there's a there's a specific package

358
00:20:45,389 --> 00:20:50,350
available online at: it's a is a free
download and his cold and Effie

359
00:20:50,350 --> 00:20:55,899
development kit already k2 it's based on
the impulse a reference implementation

360
00:20:55,899 --> 00:21:00,330
and he'd enables you to write to you if
I applications in C++

361
00:21:00,330 --> 00:21:06,030
I in does have his own as a standalone
implementation but it's not really did

362
00:21:06,030 --> 00:21:07,500
this desi you know

363
00:21:07,500 --> 00:21:12,340
I already it only offers a small portion
of the C library

364
00:21:12,340 --> 00:21:16,399
and that is because is been basically
wrapped around is available services

365
00:21:16,399 --> 00:21:18,190
which basically enable you to you

366
00:21:18,190 --> 00:21:21,740
I allocate memory communicate with
devices and so on

367
00:21:21,740 --> 00:21:25,250
it's only a small subset the C
programming language he's available

368
00:21:25,250 --> 00:21:28,299
however it's good enough for you to
actually

369
00:21:28,299 --> 00:21:32,619
working memory allocated pointers and so
on and that enables you to easily write

370
00:21:32,619 --> 00:21:34,290
a year five drivers

371
00:21:34,290 --> 00:21:38,049
and I'll show you an example in in a sec

372
00:21:38,049 --> 00:21:41,700
so it has a lot of packages which are
available there as well

373
00:21:41,700 --> 00:21:46,270
I eat as a shall see you can actually
type to stop in command line has a

374
00:21:46,270 --> 00:21:50,270
crypto functions a he'd offer some
emulation capabilities

375
00:21:50,270 --> 00:21:53,820
there's even a Python reference
implementation so you can even I use

376
00:21:53,820 --> 00:21:57,580
fight on from the year file air to
stricter on your drivers and

377
00:21:57,580 --> 00:22:00,949
and do whatever you want but at I when
you write

378
00:22:00,950 --> 00:22:04,809
jurors applications the year he DK
actually supports the use of many

379
00:22:04,809 --> 00:22:05,850
different compilers

380
00:22:05,850 --> 00:22:11,020
and all and you can use Visual Studios
compiler he used the GCC one you can use

381
00:22:11,020 --> 00:22:12,110
the Xcode

382
00:22:12,110 --> 00:22:16,080
it's all fine goal compiles all almost
to the binary exact

383
00:22:16,080 --> 00:22:20,129
images regardless of and if I from used

384
00:22:20,129 --> 00:22:23,280
there so he supports many different CPU
so

385
00:22:23,280 --> 00:22:27,360
the a64 which includes both 32-bit and
64-bit architectures

386
00:22:27,360 --> 00:22:32,450
an ARM architecture as well I hear you
would have a sample of how

387
00:22:32,450 --> 00:22:35,840
this application actually look like if
you were to write it

388
00:22:35,840 --> 00:22:42,178
with the help of idek so it's a standard
C++ application which has said their

389
00:22:42,179 --> 00:22:44,770
number of arguments passed to the
program and

390
00:22:44,770 --> 00:22:47,820
all those for parameters as a

391
00:22:47,820 --> 00:22:51,629
and even as trains as well so so this is

392
00:22:51,629 --> 00:22:55,080
something you can use from the ED case
but this is not

393
00:22:55,080 --> 00:22:59,330
the way you actually writes I you if I
applications

394
00:22:59,330 --> 00:23:04,309
this a entry point to which you created
here so shall at main

395
00:23:04,309 --> 00:23:07,830
is basically we wrapped around the
natural way

396
00:23:07,830 --> 00:23:11,820
the US I'll the cations a written so the
next line actually shows that

397
00:23:11,820 --> 00:23:15,389
so this main function still takes two
parameters

398
00:23:15,389 --> 00:23:19,000
to the first one will be the Hannah love
the image you are add some

399
00:23:19,000 --> 00:23:22,889
can love your image and then you have a
pointer to the system the mall which

400
00:23:22,889 --> 00:23:25,570
actually consists of pointers to

401
00:23:25,570 --> 00:23:30,389
Putin runtime: services so did these are
the functions you can actually use

402
00:23:30,389 --> 00:23:33,879
and and the previous example was just a
brat around this

403
00:23:33,879 --> 00:23:37,200
to make it more like a see code

404
00:23:37,200 --> 00:23:40,429
so the C programmers feel at home much

405
00:23:40,429 --> 00:23:44,609
we will be using these pointers net need
to police because the enable us to

406
00:23:44,609 --> 00:23:46,250
access functions which

407
00:23:46,250 --> 00:23:49,530
enable us to creeds advance to you

408
00:23:49,530 --> 00:23:53,668
basic things that memory to see other
images to access firmware

409
00:23:53,669 --> 00:23:58,179
and so on the functions are located in
this kinda structure

410
00:23:58,179 --> 00:24:01,330
solar naturally Island dear dear

411
00:24:01,330 --> 00:24:04,820
is away to actually abuse all these a

412
00:24:04,820 --> 00:24:08,549
all this unified interface as well
because

413
00:24:08,549 --> 00:24:12,970
all that is feeling pretty much open to
whoever's writing the driver

414
00:24:12,970 --> 00:24:16,389
so if you write the driver who have
access to the entire machine

415
00:24:16,389 --> 00:24:20,770
there's almost no restrictions about you
accessing the part that the memory

416
00:24:20,770 --> 00:24:24,399
so you can imagine like a writing the
user mode application but

417
00:24:24,399 --> 00:24:28,080
having all other drivers loaded in the
same address space

418
00:24:28,080 --> 00:24:31,699
hidden is basically like that because
you can access all the memory

419
00:24:31,700 --> 00:24:36,379
regardless of my memory permissions at
all seeking install hooks you can

420
00:24:36,379 --> 00:24:38,730
alright drivers you can download images

421
00:24:38,730 --> 00:24:43,399
basically defi layer is trusting you to
do the right thing and

422
00:24:43,399 --> 00:24:47,270
you might the choose to abuse that as
well that is why you do

423
00:24:47,270 --> 00:24:51,460
concepts like secure would have been an
introduced as well

424
00:24:51,460 --> 00:24:54,609
so this there has been some previous
work and research about good kids

425
00:24:54,609 --> 00:24:57,918
and how you can create does as well ISO

426
00:24:57,919 --> 00:25:00,919
on the previous work I what was
happening

427
00:25:00,919 --> 00:25:05,159
07 I'll was presented to a here and
black at

428
00:25:05,159 --> 00:25:08,159
I E in there what they did is they
modified

429
00:25:08,159 --> 00:25:12,760
the and we're on variables the injected
some code and

430
00:25:12,760 --> 00:25:15,780
the shows how you can abuse system
management Mon

431
00:25:15,780 --> 00:25:19,030
basically and that was followed the

432
00:25:19,030 --> 00:25:22,460
lot and by last year's stock car which
the Witcher snare did

433
00:25:22,460 --> 00:25:26,270
and there he Shotokan patch the Mac OS
kernel

434
00:25:26,270 --> 00:25:29,559
if you had a maliciously loaded I if I
driver

435
00:25:29,559 --> 00:25:33,600
and he Avengers the concept of a you
made a tax for

436
00:25:33,600 --> 00:25:37,470
the if i layer and just this year

437
00:25:37,470 --> 00:25:41,450
at a hack into locks in Amsterdam /url
model differs

438
00:25:41,450 --> 00:25:44,990
put kids for a the we know Saito was

439
00:25:44,990 --> 00:25:51,059
presented and he's so law approach was
so quite similar to ours and I E

440
00:25:51,059 --> 00:25:56,340
and if you compare the way that dream
good works and compared to the way our

441
00:25:56,340 --> 00:26:00,419
I Mac OS book it works there quite a
similar

442
00:26:00,419 --> 00:26:04,809
in the case that you have to do i hook a
certain things and you have to inject

443
00:26:04,809 --> 00:26:06,428
code as well

444
00:26:06,429 --> 00:26:11,129
to be able to you I execute a commands
and at a much higher level

445
00:26:11,129 --> 00:26:15,090
I will go in a minute in a bit more
detail later on of how did

446
00:26:15,090 --> 00:26:20,210
did we create our own bucket but here is
is a simple diagram that shows how dream

447
00:26:20,210 --> 00:26:21,790
would actually operates

448
00:26:21,790 --> 00:26:26,549
at certain layers are juice I reinstall
the Witcher ready to act code

449
00:26:26,549 --> 00:26:32,290
to mostly low the drivers which then
install call backs which are executed

450
00:26:32,290 --> 00:26:36,149
when certain a man's hand when does
happen so that enables religious

451
00:26:36,149 --> 00:26:36,889
collation

452
00:26:36,889 --> 00:26:41,839
attacks and so on so that that brought
us to argue few

453
00:26:41,839 --> 00:26:46,190
which is a rootkit detection framework
and all forty year FY layer

454
00:26:46,190 --> 00:26:49,679
its as we mentioned before it's a darpa
sponsored project in like to thank our

455
00:26:49,679 --> 00:26:50,970
plan yet again

456
00:26:50,970 --> 00:26:54,010
so what what actually is are you a few

457
00:26:54,010 --> 00:26:58,599
so I T fue is a set of applications and
drivers that enable you to less

458
00:26:58,599 --> 00:27:02,000
all I loaded the drivers in the year
find my meant

459
00:27:02,000 --> 00:27:07,169
improved entire memory range you can
scan for executables that might be human

460
00:27:07,169 --> 00:27:11,240
I you can monitor all drivers which are
loaded before the operating system

461
00:27:11,240 --> 00:27:12,119
starts

462
00:27:12,119 --> 00:27:15,320
you can a starter I a listing in
scanning

463
00:27:15,320 --> 00:27:19,520
the booze in runtime services for modify
function pointers

464
00:27:19,520 --> 00:27:24,720
that will be shown as well still is
Texans are not matching more specific

465
00:27:24,720 --> 00:27:26,859
images that is displayed in the log

466
00:27:26,859 --> 00:27:31,099
all those files are automatically dont
as well as you can analyze them

467
00:27:31,099 --> 00:27:35,639
and later on as well we also
continuously monitoring both the boot

468
00:27:35,639 --> 00:27:38,609
and the runtime services while the
operating system is being loaded

469
00:27:38,609 --> 00:27:42,149
making sure that none of those
modifications occur

470
00:27:42,149 --> 00:27:45,230
do while are I refuse loaded

471
00:27:45,230 --> 00:27:49,200
we can also less and olive answer which
are happening

472
00:27:49,200 --> 00:27:52,760
and it also works as a stand-alone
because

473
00:27:52,760 --> 00:27:57,369
I defi I'm specification says that shall
is

474
00:27:57,369 --> 00:28:00,859
absolutely optional see you might choose
not to implement shell if you don't want

475
00:28:00,859 --> 00:28:01,439
to you

476
00:28:01,440 --> 00:28:04,810
Rd if you would work even though if
there's no shell

477
00:28:04,810 --> 00:28:08,500
so he becomes a dog who is with its own
graphical user interface which you can

478
00:28:08,500 --> 00:28:09,310
use to

479
00:28:09,310 --> 00:28:14,359
axis all its functionality so what does
it supports ties supports a

480
00:28:14,359 --> 00:28:17,500
devote at the order specifications a
one-point axe

481
00:28:17,500 --> 00:28:21,760
and the latest one for both 32 bit and
64 bit in my menses while

482
00:28:21,760 --> 00:28:25,589
it supports a specific Mac OS
implementation all the you if I

483
00:28:25,589 --> 00:28:29,560
it works on the ritual box even doorsill
box currently

484
00:28:29,560 --> 00:28:33,570
delays wasn't my check till I does have
an

485
00:28:33,570 --> 00:28:34,559
and

486
00:28:34,559 --> 00:28:38,279
and yet if I shall but it's on capable
of actually installing an operating

487
00:28:38,279 --> 00:28:39,190
system

488
00:28:39,190 --> 00:28:43,559
Andrea fi they are still working on that
%um where has much better support

489
00:28:43,559 --> 00:28:47,970
a and you can actually use I DFI layers
it has a shell company actually install

490
00:28:47,970 --> 00:28:49,100
the operating system

491
00:28:49,100 --> 00:28:53,549
and works just fine I currently and I we
do not support

492
00:28:53,549 --> 00:28:57,190
if I forearm because there's only one
implementation

493
00:28:57,190 --> 00:29:01,200
and thats surface RT and that
implementation already has a cue ball

494
00:29:01,200 --> 00:29:03,830
that enabled by default and that's why

495
00:29:03,830 --> 00:29:07,970
we opted not to support that one because
you should be pretty safe and there's no

496
00:29:07,970 --> 00:29:09,909
need for you to actually scan

497
00:29:09,909 --> 00:29:14,139
and those devices so how does I if you
work

498
00:29:14,139 --> 00:29:18,279
there's a couple of options you can
actually load the driver if there's an

499
00:29:18,279 --> 00:29:19,649
now you if I shall

500
00:29:19,649 --> 00:29:23,679
enabled you can create a bootable thumb
drive which can just plug into the

501
00:29:23,679 --> 00:29:24,379
machine

502
00:29:24,379 --> 00:29:27,460
and and the I then the

503
00:29:27,460 --> 00:29:31,659
Rd if you would be I executed
automatically then you can actually scan

504
00:29:31,659 --> 00:29:33,809
your entire machine for

505
00:29:33,809 --> 00:29:38,240
I drivers we should not be there or
modified firmware as well

506
00:29:38,240 --> 00:29:43,210
a I band it has a scanner application
which room where

507
00:29:43,210 --> 00:29:47,169
works on their you if I shall you can't
you have to actually have you if I shall

508
00:29:47,169 --> 00:29:48,240
to execute at

509
00:29:48,240 --> 00:29:53,629
a while is executing its login dumping
all the information which it finds

510
00:29:53,629 --> 00:29:56,789
on the onto the mouth and hard drive or

511
00:29:56,789 --> 00:30:01,158
to the thumb drive from it treat was
loaded so here is an example of how that

512
00:30:01,159 --> 00:30:01,999
would look like

513
00:30:01,999 --> 00:30:05,809
so this is the you actually using

514
00:30:05,809 --> 00:30:08,879
the user ID if you framework on their
VMware

515
00:30:08,879 --> 00:30:12,649
I'll while you're bleeding the system
you would actually I just press a button

516
00:30:12,649 --> 00:30:13,429
to

517
00:30:13,429 --> 00:30:17,519
selected the with manager and that
brings you to the option of actually

518
00:30:17,519 --> 00:30:18,399
selecting

519
00:30:18,399 --> 00:30:22,869
which kinda but the wise would you like
to load I there's an option call their E

520
00:30:22,869 --> 00:30:27,159
internal shell we know it says is an
unsupported option actually works just

521
00:30:27,159 --> 00:30:27,850
fine

522
00:30:27,850 --> 00:30:31,559
so you are prompted to the I'm to the
shell

523
00:30:31,559 --> 00:30:34,668
all the year find a phase where you can
actually start

524
00:30:34,669 --> 00:30:37,980
and the low the RRT a few I which

525
00:30:37,980 --> 00:30:42,090
comes with its loading screen and then
comes with a celeb options which

526
00:30:42,090 --> 00:30:45,320
anywhere you to do all sorts of cool
thanks so a

527
00:30:45,320 --> 00:30:48,700
it has a lot of options are the first
will be to list all the channels which

528
00:30:48,700 --> 00:30:50,039
are presently machine

529
00:30:50,039 --> 00:30:53,799
and that would be cool and protocols as
while to list all images

530
00:30:53,799 --> 00:30:56,850
number l'image is to this to begin later
on inspect them

531
00:30:56,850 --> 00:31:00,379
you can check the pointers you can list
all the advance

532
00:31:00,379 --> 00:31:04,340
you can basically brute force can and
the in the memory do

533
00:31:04,340 --> 00:31:08,759
tried to find any images which should
not be there are solely somebody has

534
00:31:08,759 --> 00:31:10,720
dynamically allocated memory input in

535
00:31:10,720 --> 00:31:14,000
with an image dare to Mason executed
that'll be

536
00:31:14,000 --> 00:31:18,179
I detected as well you can display the
memory mad I you can

537
00:31:18,179 --> 00:31:22,659
donde from where show the the are you
DNG tears while

538
00:31:22,659 --> 00:31:25,869
and you can ease tell residents can
there's that's an option which enables

539
00:31:25,869 --> 00:31:27,029
you to actually

540
00:31:27,029 --> 00:31:30,139
install Rd a few so it's more heat
source

541
00:31:30,139 --> 00:31:34,340
a the entire loading process until the
operating system starts

542
00:31:34,340 --> 00:31:37,470
now this is this was ass actually I'll

543
00:31:37,470 --> 00:31:41,529
running year 5 from Sal other things
have been loaded before this

544
00:31:41,529 --> 00:31:45,110
but defi shell comes with the startup
script

545
00:31:45,110 --> 00:31:48,190
which enables you to install this as a
residence can there

546
00:31:48,190 --> 00:31:52,399
so it's a automatically executed every
time you would a machine that does that

547
00:31:52,399 --> 00:31:53,000
option

548
00:31:53,000 --> 00:31:56,869
we can actually manually install it if
you have I root privileges

549
00:31:56,869 --> 00:32:00,490
or you are actually assimilating the
process of installing an operating

550
00:32:00,490 --> 00:32:01,359
system

551
00:32:01,359 --> 00:32:06,940
a so here we're gonna show demo of how
this sorry if you actually works

552
00:32:06,940 --> 00:32:10,820
I'm I'm gonna be using the I'll the
Ameren plantation

553
00:32:10,820 --> 00:32:17,820
so to show the dock works correctly so
we move started the

554
00:32:19,090 --> 00:32:22,100
up I'm sorry actually have to you

555
00:32:22,100 --> 00:32:29,100
do this so as I mentioned before you'd
have to select to boot manager auction

556
00:32:31,399 --> 00:32:36,619
and there you have the internal shall
when you go back to dads it actually

557
00:32:36,619 --> 00:32:37,330
loads

558
00:32:37,330 --> 00:32:41,109
and it it enables you to do

559
00:32:41,109 --> 00:32:44,429
shell command so things like a listing
files and so on

560
00:32:44,429 --> 00:32:49,799
can be supported depending on what the
actual I implementation of the year and

561
00:32:49,799 --> 00:32:50,889
unify Nyssa

562
00:32:50,889 --> 00:32:54,720
it has won their face you are working
with so this one actually

563
00:32:54,720 --> 00:32:57,940
has the are I if you

564
00:32:57,940 --> 00:33:01,480
I installed on on the separate the hard
drive

565
00:33:01,480 --> 00:33:05,590
so here are the Martin that drive and
I'm shown you that

566
00:33:05,590 --> 00:33:10,190
all those things aren't there so all I
need to do now is low their scanner

567
00:33:10,190 --> 00:33:13,929
soloed if I scanner application this is
64-bit

568
00:33:13,929 --> 00:33:18,529
publications so we're loading a driver
which will show the logo of our tool

569
00:33:18,529 --> 00:33:22,629
and then I'll following dad today you
have all the options

570
00:33:22,629 --> 00:33:26,179
which are available so for example which
is on a list all the channels which are

571
00:33:26,179 --> 00:33:30,490
available and we can down and the
firmware as well

572
00:33:30,490 --> 00:33:33,970
so we can a number for my wrong that's
Gd and that's a

573
00:33:33,970 --> 00:33:37,549
now dumped on the same a hard drive you
can actually in

574
00:33:37,549 --> 00:33:41,940
do your analysis is there I you can do
you abroad for scanning for other I

575
00:33:41,940 --> 00:33:43,309
install the

576
00:33:43,309 --> 00:33:47,158
be if I drivers that'll be listed here
as well

577
00:33:47,159 --> 00:33:51,309
I E in the in dolog so on which is gonna
quit now

578
00:33:51,309 --> 00:33:55,960
and I'm gonna show you that the if I
actually comes with

579
00:33:55,960 --> 00:34:01,990
at the with some tools which enable it
actually expect this without actually

580
00:34:01,990 --> 00:34:02,879
going

581
00:34:02,879 --> 00:34:06,210
a to Windows or any other operating
system to actually

582
00:34:06,210 --> 00:34:09,470
a view to those things so this will be
just for you

583
00:34:09,470 --> 00:34:14,230
inspecting dat log I'll with a a text
editor which is basically available

584
00:34:14,230 --> 00:34:18,359
we'd this implementation of the if I
shall so a the and as you can see with

585
00:34:18,359 --> 00:34:19,810
dot down the from where

586
00:34:19,810 --> 00:34:22,949
I its own are a USB thumb drive you can

587
00:34:22,949 --> 00:34:26,049
I inspected leader on low tonight a pro

588
00:34:26,049 --> 00:34:29,679
or anything like that so that is how the

589
00:34:29,679 --> 00:34:35,119
how the I'm Rd Rd a few works

590
00:34:35,119 --> 00:34:40,899
so next the we will be

591
00:34:40,899 --> 00:34:44,839
support site

592
00:34:44,840 --> 00:34:49,000
some next we will be talking about this
specific book it to which we

593
00:34:49,000 --> 00:34:52,190
we ourselves wrote for the Mac West

594
00:34:52,190 --> 00:34:56,389
and now we will go into details of how
this serb which it was created and

595
00:34:56,389 --> 00:35:00,279
what what what or was the our intention
with this store as well

596
00:35:00,280 --> 00:35:03,300
so we had a goal I and that was a

597
00:35:03,300 --> 00:35:06,350
to do a certain things are which the

598
00:35:06,350 --> 00:35:09,700
normal good kids and rookies will be
doing and that is creating

599
00:35:09,700 --> 00:35:12,710
a hidden content so creating him folders

600
00:35:12,710 --> 00:35:16,020
I you know restoring thats the

601
00:35:16,020 --> 00:35:20,980
lawyers are in Los Feliz while so we
wanted to be able to hide running

602
00:35:20,980 --> 00:35:22,570
processes and

603
00:35:22,570 --> 00:35:28,240
show them back again as well you want to
have I N ability to elevate privilege

604
00:35:28,240 --> 00:35:31,470
and have a shell which gives as root
privilege so you can do

605
00:35:31,470 --> 00:35:35,610
anything we want and the bonus points
would be us receiving the fold

606
00:35:35,610 --> 00:35:38,860
filed password if it was available

607
00:35:38,860 --> 00:35:42,520
so how does the this serb would get work

608
00:35:42,520 --> 00:35:46,830
so are we tested this on the live a Mac
OS machine

609
00:35:46,830 --> 00:35:51,529
we don't have one present today however
the UVM employment Asian

610
00:35:51,530 --> 00:35:55,080
well will suffice so for dat

611
00:35:55,080 --> 00:35:58,759
if you are using this on ally machine

612
00:35:58,760 --> 00:36:03,300
the the option would be I just using the
ER Rd if you to create

613
00:36:03,300 --> 00:36:06,990
a bootable I USB thumb drive which

614
00:36:06,990 --> 00:36:10,370
can enable you to basically booed no's'

615
00:36:10,370 --> 00:36:14,779
to that time driving to Skopje are both
key code which automatically scans on

616
00:36:14,780 --> 00:36:15,880
the petitions

617
00:36:15,880 --> 00:36:20,830
and then the selects Mac OS loads it and
does all the things we'll mention in a

618
00:36:20,830 --> 00:36:21,380
sec

619
00:36:21,380 --> 00:36:25,630
automatically so since we don't have a
man netbook

620
00:36:25,630 --> 00:36:30,470
present to hear is a what the artist you
we want to do this scene in Brea mer

621
00:36:30,470 --> 00:36:35,560
ISO the VMware is perfectly fine because
a Mac OS can run in its

622
00:36:35,560 --> 00:36:38,790
I am eat runs in its

623
00:36:38,790 --> 00:36:43,670
only if you have an unofficial patch
sadly a soul you have to patch your

624
00:36:43,670 --> 00:36:47,530
I VMware to be able to actually execute
the

625
00:36:47,530 --> 00:36:50,820
a Mac OS on red and the only thing you
have to add

626
00:36:50,820 --> 00:36:56,050
after Dad is make sure that the VMX file
has the firmware auction he if I

627
00:36:56,050 --> 00:37:00,120
enabled that enables the VMware at
actually run with the

628
00:37:00,120 --> 00:37:06,020
if beat you find your face after data
Mac OS install and it has a support for

629
00:37:06,020 --> 00:37:06,660
Air

630
00:37:06,660 --> 00:37:09,819
diversion one point an RTF ice on the
standard

631
00:37:09,820 --> 00:37:14,720
so how does the which keeps work I he's
a typical workflow

632
00:37:14,720 --> 00:37:18,100
the EF the you if I is loaded eat

633
00:37:18,100 --> 00:37:21,660
loads armed militias driver which Dan

634
00:37:21,660 --> 00:37:24,710
a registers for an event

635
00:37:24,710 --> 00:37:27,900
and this event is called the virtual
address change

636
00:37:27,900 --> 00:37:31,610
and that means that the won this event
is fired

637
00:37:31,610 --> 00:37:36,450
basically the operating system he's been
loaded so are all the drivers and which

638
00:37:36,450 --> 00:37:37,680
are still running

639
00:37:37,680 --> 00:37:41,129
as old run-down drivers which are still
running has two

640
00:37:41,130 --> 00:37:44,260
adjusts for a transitioning from the

641
00:37:44,260 --> 00:37:47,750
physical address ng mo to the vigil
official addressing mode and this is

642
00:37:47,750 --> 00:37:49,850
what the disadvantage will do

643
00:37:49,850 --> 00:37:53,640
I we also hooks a specific system table

644
00:37:53,640 --> 00:37:56,930
function which is a real keystroke that

645
00:37:56,930 --> 00:38:01,100
enables honestly actually a sniff all
the keys user pass

646
00:38:01,100 --> 00:38:04,440
has type and a while booting adding
machine

647
00:38:04,440 --> 00:38:07,630
and the idea here is that if I'll alt

648
00:38:07,630 --> 00:38:12,270
and he's installed then know the user
has to enter the password and that hot

649
00:38:12,270 --> 00:38:15,370
comes to the keyboard so since we are
logging all the keys

650
00:38:15,370 --> 00:38:18,890
would get this password I once the
system is loaded

651
00:38:18,890 --> 00:38:23,339
so there's a fail safe unless II if
something goes wrong

652
00:38:23,340 --> 00:38:26,660
weaver registered ourselves for the
onload protocol

653
00:38:26,660 --> 00:38:30,109
which means that are loading his field
and we just have to you

654
00:38:30,110 --> 00:38:35,700
I Merkley basically cleanup are so that
we have to load Mac OS because I but it

655
00:38:35,700 --> 00:38:36,770
has been installed

656
00:38:36,770 --> 00:38:41,340
salute loading Mac OS is basically
enumerating all drives

657
00:38:41,340 --> 00:38:44,590
which has a have a specific if I image
present

658
00:38:44,590 --> 00:38:48,900
I you the user has a choice of selecting
guy which he if I

659
00:38:48,900 --> 00:38:52,820
I body if I guess loaded if there are
multiple ones but if there's just one

660
00:38:52,820 --> 00:38:53,440
found

661
00:38:53,440 --> 00:38:57,510
we automatically boot to it as well so
just call load image to

662
00:38:57,510 --> 00:39:03,070
load at the FIA image and then we
started sold at that point and Mac West

663
00:39:03,070 --> 00:39:04,960
cites the routing process

664
00:39:04,960 --> 00:39:10,820
and we get signaled Abidi event when the
Mac was bootloader calls

665
00:39:10,820 --> 00:39:15,810
a sad virtual address map so that's
triggers that the event which I mention

666
00:39:15,810 --> 00:39:16,440
which is the

667
00:39:16,440 --> 00:39:21,010
virtual which is the official I just
change thats tells us the Mac OS spread

668
00:39:21,010 --> 00:39:23,370
it to be viewed it and that the next
command it will

669
00:39:23,370 --> 00:39:27,650
bill is will call is the one which
actually unloads all day

670
00:39:27,650 --> 00:39:31,150
older drivers which are running only
during the boot

671
00:39:31,150 --> 00:39:35,390
and dats triggers the part in the coach
actually locates the

672
00:39:35,390 --> 00:39:39,000
says call table and from that is cool
table we are just hooking a few

673
00:39:39,000 --> 00:39:39,940
functions

674
00:39:39,940 --> 00:39:43,280
which enable us to do all those things
we set

675
00:39:43,280 --> 00:39:46,840
to do I so we are talking days that you
I D E get the

676
00:39:46,840 --> 00:39:51,380
directory entry visa get their
attributes and sis call as well

677
00:39:51,380 --> 00:39:55,780
so how do we actually get through it
this is a small see application which

678
00:39:55,780 --> 00:39:58,130
actually enables you to get root

679
00:39:58,130 --> 00:40:02,260
I so would be tried to set our User ID
to a specific number

680
00:40:02,260 --> 00:40:06,030
the specific number has been hard coded
inside denuded Woodkid

681
00:40:06,030 --> 00:40:09,620
so as soon as are both cute in in the
kernel level sees this

682
00:40:09,620 --> 00:40:14,080
user ID it knows to elevate the
privileges that process

683
00:40:14,080 --> 00:40:17,759
to route so how do we hiked Russa says
this is

684
00:40:17,760 --> 00:40:21,400
yet another short snippet which is
basically ass a

685
00:40:21,400 --> 00:40:24,410
and running us his column and with

686
00:40:24,410 --> 00:40:29,290
with the gonna set the parameters which
are analyzed by the bucket itself

687
00:40:29,290 --> 00:40:33,060
which then knows what to do and in the
in in this case with his just

688
00:40:33,060 --> 00:40:36,960
adding a new process to be hidden isol

689
00:40:36,960 --> 00:40:40,870
weed at we have a demo of how that
actually works

690
00:40:40,870 --> 00:40:47,870
and I'm let me just put up michael s
once again

691
00:40:49,470 --> 00:40:52,970
so young and naive since I'm using the
con

692
00:40:52,970 --> 00:40:57,980
the VMware implementation this actually
has

693
00:40:57,980 --> 00:41:01,090
this actually has two be done manually

694
00:41:01,090 --> 00:41:04,680
if I was using a physical machine I
could just plug in a thumb drive in all

695
00:41:04,680 --> 00:41:05,649
this would be

696
00:41:05,650 --> 00:41:09,050
happen automatically the only thing I
had to do is select that

697
00:41:09,050 --> 00:41:12,240
I want to boot from thumb drive so this

698
00:41:12,240 --> 00:41:15,770
I go to the internal shall option

699
00:41:15,770 --> 00:41:20,660
and then hi basically just go through
the

700
00:41:20,660 --> 00:41:26,690
malted hard drive and loaded with the
coat

701
00:41:26,690 --> 00:41:30,350
that automatically finds the Mac OS
partition

702
00:41:30,350 --> 00:41:33,480
it loads it's a boo DFI code

703
00:41:33,480 --> 00:41:37,100
anne's splashed all the things a.m.
behind it

704
00:41:37,100 --> 00:41:41,260
solo what's not happening now is the OS
is loading that to take a while since we

705
00:41:41,260 --> 00:41:42,250
are on the

706
00:41:42,250 --> 00:41:45,400
a virtual machine implementation once PU

707
00:41:45,400 --> 00:41:48,840
we we have booted I'll log in and I'll
show you that

708
00:41:48,840 --> 00:41:52,020
all the functionality I wish to mention
which is

709
00:41:52,020 --> 00:41:55,450
hiding processes are hiding folders and
so on

710
00:41:55,450 --> 00:42:01,870
actually does work so we're loading

711
00:42:01,870 --> 00:42:05,529
and that's gonna give us in into the
shop so here

712
00:42:05,530 --> 00:42:09,220
as as you can see I we can do all sorts
of things

713
00:42:09,220 --> 00:42:12,520
here have all those applications are
written in C

714
00:42:12,520 --> 00:42:15,870
and they have all been compiled so we
don't have to do that again

715
00:42:15,870 --> 00:42:19,690
I sole advisor first thing first LS hide
this process

716
00:42:19,690 --> 00:42:23,170
so the process ID for bash grant least
140

717
00:42:23,170 --> 00:42:26,940
so I can just and and and pade 140

718
00:42:26,940 --> 00:42:31,290
and thats gonna be a.m. hit and now as
you can see process list is

719
00:42:31,290 --> 00:42:35,020
is basically empty and looking on hi dad
has while

720
00:42:35,020 --> 00:42:38,680
by an remove pete so the same PAD

721
00:42:38,680 --> 00:42:41,859
and and we can show in this process is
now

722
00:42:41,860 --> 00:42:46,070
visible yet again in addition to data we
can create a hidden folder

723
00:42:46,070 --> 00:42:50,560
so and Kadir so a it's actually hard
coded

724
00:42:50,560 --> 00:42:54,799
to to this first rain but the other part
to the strain you can

725
00:42:54,800 --> 00:42:59,060
by pin anything you like so a listing of
directories actually doesn't show this

726
00:42:59,060 --> 00:42:59,750
one but

727
00:42:59,750 --> 00:43:04,320
eats accessible I anyway

728
00:43:04,320 --> 00:43:11,320
so we are in this folder they are no
files there but we can discrete 1

729
00:43:12,000 --> 00:43:16,050
and sexy there's a file there now so we
can just remove that since we don't need

730
00:43:16,050 --> 00:43:21,150
it

731
00:43:21,150 --> 00:43:28,150
and go back one level to remove that
folder

732
00:43:29,960 --> 00:43:33,320
CNN fuller's gone but it was shown there
as well

733
00:43:33,320 --> 00:43:36,480
the last thing we need to do is to
elevate privilege

734
00:43:36,480 --> 00:43:39,970
to grant him a user

735
00:43:39,970 --> 00:43:43,710
but if I wanted to get through it all
all I had to do is execute shell

736
00:43:43,710 --> 00:43:46,720
dad C code as you remember has only two
lines

737
00:43:46,720 --> 00:43:51,000
to execute in shallow and then I'll

738
00:43:51,000 --> 00:43:55,190
we got root and from this point you can
do anything you like we can even install

739
00:43:55,190 --> 00:43:58,420
R Balki permanently by accessing the

740
00:43:58,420 --> 00:44:02,200
if I partition and installing yet so we
to close every time

741
00:44:02,200 --> 00:44:06,849
so the bird cage right now it is loaded
but if I were to reboot

742
00:44:06,849 --> 00:44:10,460
it would not be loaded and also all the
changes I'm done

743
00:44:10,460 --> 00:44:13,700
I will not matter so all those hidden
folders will be visible

744
00:44:13,700 --> 00:44:18,650
soda boutique it is only in memory so
that concludes the

745
00:44:18,650 --> 00:44:25,650
at the Bukit presentation and that
brings us to you

746
00:44:28,759 --> 00:44:35,220
to the reminder of our talk

747
00:44:35,220 --> 00:44:39,490
so we've done this and here that was the
demo

748
00:44:39,490 --> 00:44:42,859
so out what can you do with RT a few I

749
00:44:42,859 --> 00:44:46,900
you can use the EF I shall someone its
functionality even though

750
00:44:46,900 --> 00:44:50,710
a even if there is no wi-fi shell
available

751
00:44:50,710 --> 00:44:56,510
I as I said the the documentation and
certification does not require shell to

752
00:44:56,510 --> 00:44:57,250
be present

753
00:44:57,250 --> 00:45:01,670
you can check which Rd installed and
loaded the if I components you can scan

754
00:45:01,670 --> 00:45:03,650
the environment for hidden ones

755
00:45:03,650 --> 00:45:07,240
and you can actually modified source
code to make it the

756
00:45:07,240 --> 00:45:10,950
act like 62 boots so we can actually
check all the installed

757
00:45:10,950 --> 00:45:14,190
and they're running drivers in Cannes
unloads

758
00:45:14,190 --> 00:45:17,520
things here you know like cocaine just
report them as well

759
00:45:17,520 --> 00:45:21,310
for that you have to modify the source
code which brings us to where you get to

760
00:45:21,310 --> 00:45:22,310
where you can get it

761
00:45:22,310 --> 00:45:26,430
so it's available on our website now you
can go and download the source code

762
00:45:26,430 --> 00:45:30,140
you can get almost everything the only
thing we have not

763
00:45:30,140 --> 00:45:33,830
out publicly I we cannot publish is the
Bukit source code

764
00:45:33,830 --> 00:45:37,569
because a this was a dark was sponsored
project we wouldn't be

765
00:45:37,570 --> 00:45:40,800
the feeling comfortable to release a
code touch actually does

766
00:45:40,800 --> 00:45:44,550
malicious thanks so the scanner and its
source code are actually available on

767
00:45:44,550 --> 00:45:45,609
our website right now

768
00:45:45,609 --> 00:45:48,960
that concludes our talk but we r

769
00:45:48,960 --> 00:45:55,960
my we will be taking questions and
answers so job

770
00:45:59,200 --> 00:46:01,440
yep

771
00:46:01,440 --> 00:46:08,440
get

772
00:46:10,890 --> 00:46:14,848
us so the book it so how can you install
a book it permanently and

773
00:46:14,849 --> 00:46:21,150
while you do that manually by basically
writing it all over India original order

774
00:46:21,150 --> 00:46:21,719
code

775
00:46:21,719 --> 00:46:25,689
a so-so for the Mac OS and then you can
just rename that to any any other

776
00:46:25,689 --> 00:46:32,689
publication loaded normally so you can
do that

777
00:46:34,069 --> 00:46:39,420
how will be removed with the a while
defi partitions trauma from the year FY

778
00:46:39,420 --> 00:46:40,960
layer is read-only

779
00:46:40,960 --> 00:46:44,609
so the only way to actually room with
these from the operating system so that

780
00:46:44,609 --> 00:46:47,328
the same way we install that you can
uninstall it as well

781
00:46:47,329 --> 00:46:54,329
just by overwriting with it with the
original binary I with the idea of you

782
00:46:54,730 --> 00:46:57,990
know I if you just ask and they re
doesn't prevent anything you just report

783
00:46:57,990 --> 00:46:58,670
states

784
00:46:58,670 --> 00:47:03,319
yeah we can do you have a potential to
do that

785
00:47:03,319 --> 00:47:07,230
a few a modify the source code then you
have a pro the

786
00:47:07,230 --> 00:47:11,230
you can basically go through the entire
filesystem make sure that those same

787
00:47:11,230 --> 00:47:13,109
ages are still cracked and you are

788
00:47:13,109 --> 00:47:20,109
basically a implementing your own secure
but any other questions

789
00:47:28,189 --> 00:47:31,670
if he is actually loaded by that he is
available to the firmware

790
00:47:31,670 --> 00:47:35,249
so the firmware is a is the thing which
enables you to use these

791
00:47:35,249 --> 00:47:38,279
this functionality its actually in the
wrong

792
00:47:38,279 --> 00:47:45,279
and you can actually dump it with the
hurdle I and no

793
00:47:46,239 --> 00:47:50,329
now we have to be at the if I level but
you can create a bootable thumb drive

794
00:47:50,329 --> 00:47:55,069
which just enables you to you boot Rd if
you normally and then just run the

795
00:47:55,069 --> 00:48:00,089
run the opening system after that no

796
00:48:00,089 --> 00:48:03,739
there's no ice level use to it it has to
be loaded before the operating system

797
00:48:03,739 --> 00:48:10,739
and what else

798
00:48:11,240 --> 00:48:16,140
so I'm not missing any money mentally it
well thank you very much for your time

