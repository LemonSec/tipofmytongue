1
00:00:00,000 --> 00:00:06,270
and you are about to see<font color="#CCCCCC"> the emperor has</font>

2
00:00:03,750 --> 00:00:09,030
<font color="#CCCCCC">no clothes insecurities insecurities</font>

3
00:00:06,270 --> 00:00:11,820
infrastructure speakers are Ben

4
00:00:09,030 --> 00:00:17,759
Feinstein Jeff jarmoc and<font color="#E5E5E5"> Dan</font><font color="#CCCCCC"> King</font>

5
00:00:11,820 --> 00:00:21,119
please give them a big welcome thanks

6
00:00:17,760 --> 00:00:22,740
everyone first off just wanted to thank

7
00:00:21,119 --> 00:00:24,509
<font color="#E5E5E5">you all</font><font color="#CCCCCC"> for joining us here this morning</font>

8
00:00:22,740 --> 00:00:25,769
I know there's plenty of other talks<font color="#E5E5E5"> if</font>

9
00:00:24,510 --> 00:00:27,869
you go<font color="#CCCCCC"> too so I'm flattered that you</font>

10
00:00:25,769 --> 00:00:30,209
would join us so just<font color="#CCCCCC"> a brief</font>

11
00:00:27,869 --> 00:00:32,099
introduction my<font color="#CCCCCC"> name is Ben Feinstein I</font>

12
00:00:30,210 --> 00:00:34,230
run<font color="#E5E5E5"> a small research team for secure</font>

13
00:00:32,098 --> 00:00:35,879
works out<font color="#CCCCCC"> of Atlanta Georgia on my left</font>

14
00:00:34,230 --> 00:00:37,559
<font color="#E5E5E5">here as Jeff jarmoc who's one of our</font>

15
00:00:35,880 --> 00:00:39,510
firewall engineers<font color="#E5E5E5"> out of our Chicago</font>

16
00:00:37,559 --> 00:00:40,709
operation and over<font color="#E5E5E5"> here is Daniel King</font>

17
00:00:39,510 --> 00:00:42,899
who works out of<font color="#E5E5E5"> our Providence Rhode</font>

18
00:00:40,710 --> 00:00:47,399
Island office doing security<font color="#E5E5E5"> engineering</font>

19
00:00:42,899 --> 00:00:49,079
so this talk is really<font color="#E5E5E5"> about the</font>

20
00:00:47,399 --> 00:00:51,059
<font color="#CCCCCC">discovery of a series of security</font>

21
00:00:49,079 --> 00:00:54,870
vulnerabilities in security

22
00:00:51,059 --> 00:00:55,828
infrastructure and talking about<font color="#E5E5E5"> why or</font>

23
00:00:54,870 --> 00:00:57,839
what are the impact of<font color="#E5E5E5"> these</font>

24
00:00:55,829 --> 00:00:59,520
vulnerabilities why you should care and

25
00:00:57,840 --> 00:01:02,250
making recommendations for how

26
00:00:59,520 --> 00:01:04,080
enterprises should better secure and

27
00:01:02,250 --> 00:01:05,939
consider their security infrastructure

28
00:01:04,080 --> 00:01:09,390
within scope for their security program

29
00:01:05,939 --> 00:01:11,789
so in today's world of regulation

30
00:01:09,390 --> 00:01:14,369
compliance PCI all these different

31
00:01:11,790 --> 00:01:15,630
acronyms these your security

32
00:01:14,369 --> 00:01:19,290
infrastructure really represents

33
00:01:15,630 --> 00:01:20,759
controls in the<font color="#CCCCCC"> sense of an auditor who</font>

34
00:01:19,290 --> 00:01:23,790
is looking for controls in that

35
00:01:20,759 --> 00:01:25,920
regulatory<font color="#E5E5E5"> environment so these</font><font color="#CCCCCC"> are high</font>

36
00:01:23,790 --> 00:01:27,810
value targets these are the systems that

37
00:01:25,920 --> 00:01:30,180
<font color="#E5E5E5">are keeping the bad guys out and keeping</font>

38
00:01:27,810 --> 00:01:31,619
<font color="#E5E5E5">your data within your environment many</font>

39
00:01:30,180 --> 00:01:35,520
times particular with firewalls or

40
00:01:31,619 --> 00:01:37,259
<font color="#E5E5E5">network devices these these systems are</font>

41
00:01:35,520 --> 00:01:39,539
in charge of separating physical or

42
00:01:37,259 --> 00:01:41,970
logical zones of trust or different

43
00:01:39,540 --> 00:01:44,340
zones of trust within an environment<font color="#E5E5E5"> and</font>

44
00:01:41,970 --> 00:01:46,079
in the<font color="#E5E5E5"> case of IPs IDs or network</font>

45
00:01:44,340 --> 00:01:48,210
devices many times they're active or

46
00:01:46,079 --> 00:01:51,419
passive defensive systems so they<font color="#E5E5E5"> may be</font>

47
00:01:48,210 --> 00:01:53,490
modifying traffic on the network they

48
00:01:51,420 --> 00:01:55,740
may be injecting traffic on<font color="#E5E5E5"> that network</font>

49
00:01:53,490 --> 00:01:57,780
or they may simply<font color="#CCCCCC"> be monitoring all the</font>

50
00:01:55,740 --> 00:02:01,679
<font color="#E5E5E5">traffic and that's important to note is</font>

51
00:01:57,780 --> 00:02:03,240
that these systems firewalls<font color="#CCCCCC"> ids IPS of</font>

52
00:02:01,680 --> 00:02:06,270
the security infrastructure of your

53
00:02:03,240 --> 00:02:09,179
enterprise has a very sensitive position

54
00:02:06,270 --> 00:02:11,008
of trust it is monitoring vast amounts

55
00:02:09,179 --> 00:02:13,470
of<font color="#E5E5E5"> data crossing the network it is in</font>

56
00:02:11,008 --> 00:02:15,540
charge of enforcing controls and<font color="#CCCCCC"> log</font>

57
00:02:13,470 --> 00:02:18,030
separations on that<font color="#E5E5E5"> data so when these</font>

58
00:02:15,540 --> 00:02:19,350
systems fail or when they're attacked or

59
00:02:18,030 --> 00:02:23,310
subverted the impact can be pretty

60
00:02:19,350 --> 00:02:25,019
severe so just to look<font color="#E5E5E5"> at you know</font>

61
00:02:23,310 --> 00:02:27,210
what's<font color="#E5E5E5"> the outcome of</font><font color="#CCCCCC"> an attacker</font>

62
00:02:25,020 --> 00:02:29,970
successfully exporting some of your gear

63
00:02:27,210 --> 00:02:31,170
some of your infrastructure from<font color="#E5E5E5"> the</font>

64
00:02:29,970 --> 00:02:32,820
least severe it really could be a denial

65
00:02:31,170 --> 00:02:35,339
<font color="#E5E5E5">of service right you know an attacker</font>

66
00:02:32,820 --> 00:02:37,410
may not be able to take complete control

67
00:02:35,340 --> 00:02:39,390
over your firewall but he may<font color="#CCCCCC"> have a bug</font>

68
00:02:37,410 --> 00:02:41,640
or vulnerability that could impact the

69
00:02:39,390 --> 00:02:43,589
availability of your networks<font color="#E5E5E5"> right and</font>

70
00:02:41,640 --> 00:02:46,619
for<font color="#CCCCCC"> in-line devices and firewalls and</font>

71
00:02:43,590 --> 00:02:48,420
<font color="#CCCCCC">inline IPS is they can completely impact</font>

72
00:02:46,620 --> 00:02:50,940
your availability and it's sort<font color="#E5E5E5"> of</font>

73
00:02:48,420 --> 00:02:53,458
denial of service situation but<font color="#E5E5E5"> getting</font>

74
00:02:50,940 --> 00:02:55,170
even more severe and<font color="#E5E5E5"> more serious an</font>

75
00:02:53,459 --> 00:02:57,959
attacker<font color="#E5E5E5"> can gain control of device</font>

76
00:02:55,170 --> 00:03:00,540
configurations and device policies in

77
00:02:57,959 --> 00:03:02,760
the<font color="#E5E5E5"> environment frequently this that the</font>

78
00:03:00,540 --> 00:03:04,980
attackers go here might be<font color="#E5E5E5"> to squelch</font>

79
00:03:02,760 --> 00:03:07,530
alerts about the intrusion that they're

80
00:03:04,980 --> 00:03:09,929
they're committing potentially drop the

81
00:03:07,530 --> 00:03:13,440
shields or reduce security controls or

82
00:03:09,930 --> 00:03:15,000
security you know data exfiltration or

83
00:03:13,440 --> 00:03:16,980
open up<font color="#E5E5E5"> new back channels and new</font>

84
00:03:15,000 --> 00:03:20,940
firewall holes for the attacker to

85
00:03:16,980 --> 00:03:24,480
further impact your environment but also

86
00:03:20,940 --> 00:03:26,550
for VPN concentrators firewalls those

87
00:03:24,480 --> 00:03:29,820
devices they hold cryptographic keys

88
00:03:26,550 --> 00:03:31,890
they hold VPN keys and sensitive

89
00:03:29,820 --> 00:03:34,200
credentials so if an attacker is able to

90
00:03:31,890 --> 00:03:36,238
get get control of these devices<font color="#E5E5E5"> they</font>

91
00:03:34,200 --> 00:03:38,190
may be able<font color="#E5E5E5"> to pull out your VPN</font><font color="#CCCCCC"> keys</font>

92
00:03:36,239 --> 00:03:39,989
<font color="#E5E5E5">your cryptographic keys to your</font>

93
00:03:38,190 --> 00:03:42,510
environment that can obviously need<font color="#CCCCCC"> to</font>

94
00:03:39,989 --> 00:03:44,220
ease dropping but also it can allow<font color="#CCCCCC"> the</font>

95
00:03:42,510 --> 00:03:47,160
attacker to pivot through your

96
00:03:44,220 --> 00:03:49,380
environment into other systems so

97
00:03:47,160 --> 00:03:51,750
without<font color="#CCCCCC"> further ado I want to pass this</font>

98
00:03:49,380 --> 00:03:54,390
<font color="#E5E5E5">off to Jeff jarmoc Jeff will be talking</font>

99
00:03:51,750 --> 00:03:57,180
about some vulnerabilities we<font color="#E5E5E5"> discovered</font>

100
00:03:54,390 --> 00:04:00,779
and in<font color="#CCCCCC"> Cisco a</font><font color="#E5E5E5"> sa management console and</font>

101
00:03:57,180 --> 00:04:02,670
<font color="#CCCCCC">cisco NSA itself and</font><font color="#E5E5E5"> also will</font><font color="#CCCCCC"> be</font>

102
00:04:00,780 --> 00:04:04,590
attempting<font color="#E5E5E5"> a live demo of the TLS</font>

103
00:04:02,670 --> 00:04:06,298
renegotiation bug which we did not

104
00:04:04,590 --> 00:04:09,720
<font color="#E5E5E5">discover that was Steve dispensing</font>

105
00:04:06,299 --> 00:04:11,519
<font color="#E5E5E5">Marshall a disclosed in November but we</font>

106
00:04:09,720 --> 00:04:13,019
have proof of concept of how you can<font color="#E5E5E5"> use</font>

107
00:04:11,519 --> 00:04:18,899
this against the cisco management

108
00:04:13,019 --> 00:04:19,680
infrastructure all right hi everybody so

109
00:04:18,899 --> 00:04:22,650
the<font color="#E5E5E5"> first thing we're going to talk</font>

110
00:04:19,680 --> 00:04:26,970
<font color="#E5E5E5">about is an AC ACL bypass vulnerability</font>

111
00:04:22,650 --> 00:04:27,630
in<font color="#E5E5E5"> cisco a</font><font color="#CCCCCC"> sa we discovered this last</font>

112
00:04:26,970 --> 00:04:29,970
year

113
00:04:27,630 --> 00:04:32,250
worked<font color="#E5E5E5"> with Cisco to identify root cause</font>

114
00:04:29,970 --> 00:04:33,540
and you<font color="#CCCCCC"> know they were responsive in</font>

115
00:04:32,250 --> 00:04:35,940
developing a patch so this is a patch

116
00:04:33,540 --> 00:04:38,070
vulnerability at this point throughout

117
00:04:35,940 --> 00:04:40,290
this when we're talking about<font color="#E5E5E5"> a</font><font color="#CCCCCC"> sa one</font>

118
00:04:38,070 --> 00:04:42,150
point<font color="#E5E5E5"> I like to highlight is</font><font color="#CCCCCC"> that just</font>

119
00:04:40,290 --> 00:04:43,590
because<font color="#CCCCCC"> they're patched you know in</font>

120
00:04:42,150 --> 00:04:45,690
release doesn't mean they're patched in

121
00:04:43,590 --> 00:04:48,570
production as<font color="#E5E5E5"> Ben was saying all too</font>

122
00:04:45,690 --> 00:04:51,930
often<font color="#E5E5E5"> you know the infrastructure is</font>

123
00:04:48,570 --> 00:04:54,090
treated as as network infrastructure and

124
00:04:51,930 --> 00:04:55,560
often times depending on network

125
00:04:54,090 --> 00:04:57,869
architecture there's downtime involved

126
00:04:55,560 --> 00:04:59,460
<font color="#CCCCCC">upgrades so it's kind of a</font><font color="#E5E5E5"> problem that</font>

127
00:04:57,870 --> 00:05:03,540
these<font color="#E5E5E5"> things tend to be out of date and</font>

128
00:04:59,460 --> 00:05:05,400
contain known vulnerabilities so a cisco

129
00:05:03,540 --> 00:05:08,340
a<font color="#E5E5E5"> sa for those that you aren't familiar</font>

130
00:05:05,400 --> 00:05:12,419
with it is Cisco's flagship firewall

131
00:05:08,340 --> 00:05:14,969
platform it's the successor to the

132
00:05:12,420 --> 00:05:16,200
popular pix firewalls but it has some

133
00:05:14,970 --> 00:05:19,230
<font color="#E5E5E5">other features</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are interesting too</font>

134
00:05:16,200 --> 00:05:24,030
it's also a VPN terminator for both

135
00:05:19,230 --> 00:05:25,650
IPSec and ssl vpns and it also has<font color="#E5E5E5"> IPs</font>

136
00:05:24,030 --> 00:05:28,469
and content security web filtering

137
00:05:25,650 --> 00:05:31,169
capabilities through additional add-on

138
00:05:28,470 --> 00:05:33,330
modules so it does a bit<font color="#E5E5E5"> more than what</font>

139
00:05:31,170 --> 00:05:36,150
people typically think of as as

140
00:05:33,330 --> 00:05:37,919
firewalling it seems<font color="#E5E5E5"> that the trend in</font>

141
00:05:36,150 --> 00:05:40,080
the industry is to ask our firewalls<font color="#E5E5E5"> to</font>

142
00:05:37,920 --> 00:05:42,780
do more and<font color="#CCCCCC"> more you know what moves</font>

143
00:05:40,080 --> 00:05:44,849
toward UTM appliances and things and i

144
00:05:42,780 --> 00:05:47,940
find that<font color="#E5E5E5"> concerning the more the more</font>

145
00:05:44,850 --> 00:05:50,160
functionality you have the more avenues

146
00:05:47,940 --> 00:05:51,570
of attack are available so it's it's

147
00:05:50,160 --> 00:05:56,700
sort of a concerning<font color="#E5E5E5"> trend from from</font>

148
00:05:51,570 --> 00:05:59,730
that perspective so let get to the next

149
00:05:56,700 --> 00:06:02,880
<font color="#E5E5E5">slide so there's two methods that the</font>

150
00:05:59,730 --> 00:06:05,520
a-si uses for deciding how to filter

151
00:06:02,880 --> 00:06:08,159
traffic when there's an ACL bound to an

152
00:06:05,520 --> 00:06:11,880
interface it evaluates<font color="#CCCCCC"> it in</font><font color="#E5E5E5"> top-down</font>

153
00:06:08,160 --> 00:06:13,470
order the first rule that matches is the

154
00:06:11,880 --> 00:06:15,330
rule that's action is taken whether it

155
00:06:13,470 --> 00:06:17,640
be allowing a traffic denying it

156
00:06:15,330 --> 00:06:20,430
rejecting it if there's no rule that

157
00:06:17,640 --> 00:06:22,979
matches the traffic is processed by<font color="#CCCCCC"> a</font>

158
00:06:20,430 --> 00:06:24,360
default and I rule so at the bottom<font color="#E5E5E5"> of</font>

159
00:06:22,980 --> 00:06:26,760
every ACL you can think<font color="#E5E5E5"> of there being</font>

160
00:06:24,360 --> 00:06:28,320
ruled that<font color="#E5E5E5"> that drops everything even</font>

161
00:06:26,760 --> 00:06:31,710
though it's not explicitly displayed

162
00:06:28,320 --> 00:06:33,000
that's the documented behavior when

163
00:06:31,710 --> 00:06:35,190
there's no way<font color="#CCCCCC"> cl's bound to an</font>

164
00:06:33,000 --> 00:06:36,990
interface what happens is that there's a

165
00:06:35,190 --> 00:06:39,630
numeric security level that determines

166
00:06:36,990 --> 00:06:40,610
how the traffic's handle so traffic<font color="#E5E5E5"> is</font>

167
00:06:39,630 --> 00:06:43,310
allowed from

168
00:06:40,610 --> 00:06:45,530
from an interface to any other

169
00:06:43,310 --> 00:06:47,479
interfaces with a lower lower security

170
00:06:45,530 --> 00:06:49,638
level<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> explain that a little bit</font>

171
00:06:47,479 --> 00:06:55,039
further it<font color="#E5E5E5"> could be a little little</font>

172
00:06:49,639 --> 00:06:58,340
strange to get your head around so this

173
00:06:55,039 --> 00:07:01,370
<font color="#CCCCCC">is an example configuration for an</font><font color="#E5E5E5"> AAS a</font>

174
00:06:58,340 --> 00:07:03,049
firewall it there's a<font color="#E5E5E5"> lot of text</font><font color="#CCCCCC"> here</font>

175
00:07:01,370 --> 00:07:05,509
but it's<font color="#E5E5E5"> really</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> really fairly</font>

176
00:07:03,050 --> 00:07:09,650
straightforward there's whoops excuse me

177
00:07:05,509 --> 00:07:10,879
there's three you know three groups

178
00:07:09,650 --> 00:07:14,900
there for each of our interfaces

179
00:07:10,879 --> 00:07:16,610
Ethernet 00 01 02 in this case<font color="#E5E5E5"> you</font><font color="#CCCCCC"> see</font>

180
00:07:14,900 --> 00:07:19,340
that ethernet 00 is configured as our

181
00:07:16,610 --> 00:07:21,710
outside interface it's named outside and

182
00:07:19,340 --> 00:07:24,409
it has a security<font color="#E5E5E5"> level 0 so</font><font color="#CCCCCC"> that is the</font>

183
00:07:21,710 --> 00:07:28,400
least trusted interface representing the

184
00:07:24,409 --> 00:07:30,409
<font color="#CCCCCC">internet our dmz interface then i'm</font>

185
00:07:28,400 --> 00:07:31,938
sorry our inside interface is security

186
00:07:30,409 --> 00:07:34,099
<font color="#CCCCCC">level 100 so that's our most trusted</font>

187
00:07:31,939 --> 00:07:37,370
interface and the dmz sits in the middle

188
00:07:34,099 --> 00:07:39,469
security level 50 so what this

189
00:07:37,370 --> 00:07:41,750
represents is if there were no acl's

190
00:07:39,469 --> 00:07:44,120
traffic would be allowed from the

191
00:07:41,750 --> 00:07:46,460
internal network to go to the DMZ

192
00:07:44,120 --> 00:07:48,080
network or the<font color="#CCCCCC"> outside network traffic</font>

193
00:07:46,460 --> 00:07:49,669
from the<font color="#CCCCCC"> dmz would only be allowed to</font>

194
00:07:48,080 --> 00:07:51,318
the outside network and traffic coming

195
00:07:49,669 --> 00:07:53,448
in from the outside would be dropped

196
00:07:51,319 --> 00:07:55,969
regardless of destination because it's

197
00:07:53,449 --> 00:07:57,860
it's a completely untrusted interface so

198
00:07:55,969 --> 00:08:01,969
that<font color="#CCCCCC"> sort of explains that security</font>

199
00:07:57,860 --> 00:08:04,490
level behavior we have also<font color="#E5E5E5"> a couple of</font>

200
00:08:01,969 --> 00:08:06,110
access control lists here just basically

201
00:08:04,490 --> 00:08:08,419
denying everything explicitly on the

202
00:08:06,110 --> 00:08:10,279
outside on<font color="#CCCCCC"> the inside we've got</font><font color="#E5E5E5"> a sample</font>

203
00:08:08,419 --> 00:08:14,688
rule that's allowing you know HTTP and

204
00:08:10,279 --> 00:08:18,800
<font color="#E5E5E5">HTTPS as well as dns to a server that</font>

205
00:08:14,689 --> 00:08:22,099
sits in the DMZ and then the DMZ access

206
00:08:18,800 --> 00:08:23,960
list allows outbound smtp and DNS

207
00:08:22,099 --> 00:08:27,020
traffic from our servers so this<font color="#E5E5E5"> is kind</font>

208
00:08:23,960 --> 00:08:33,289
of a you know sample of a pretty basic

209
00:08:27,020 --> 00:08:34,880
configuration so what happens when these

210
00:08:33,289 --> 00:08:39,169
commands are put in the wrong order

211
00:08:34,880 --> 00:08:41,870
instead<font color="#CCCCCC"> of using the access group</font>

212
00:08:39,169 --> 00:08:43,338
command to bind an access list after<font color="#CCCCCC"> its</font>

213
00:08:41,870 --> 00:08:47,060
created what happens if we try to bind

214
00:08:43,339 --> 00:08:48,770
an access list that doesn't exist what

215
00:08:47,060 --> 00:08:50,300
we see is<font color="#CCCCCC"> that the newer versions of a</font>

216
00:08:48,770 --> 00:08:53,600
sa will give you an error message that

217
00:08:50,300 --> 00:08:54,410
says<font color="#E5E5E5"> access group does not exist but it</font>

218
00:08:53,600 --> 00:08:58,040
seems<font color="#CCCCCC"> that</font><font color="#E5E5E5"> on</font>

219
00:08:54,410 --> 00:08:59,839
some prior unknown to<font color="#CCCCCC"> me version it</font>

220
00:08:58,040 --> 00:09:02,810
would accept that command and then<font color="#E5E5E5"> when</font>

221
00:08:59,839 --> 00:09:05,149
you created the access list it would you

222
00:09:02,810 --> 00:09:07,819
know process it with the normal<font color="#CCCCCC"> behavior</font>

223
00:09:05,149 --> 00:09:09,529
so what happens is is when you've done

224
00:09:07,819 --> 00:09:11,089
that on a prior version when you upgrade

225
00:09:09,529 --> 00:09:14,959
to<font color="#CCCCCC"> the versions that are affected by</font>

226
00:09:11,089 --> 00:09:17,870
this bug the<font color="#E5E5E5"> default</font><font color="#CCCCCC"> denied that's</font>

227
00:09:14,959 --> 00:09:20,959
implicit at the end of<font color="#E5E5E5"> the ACL is not</font>

228
00:09:17,870 --> 00:09:22,819
applied so the effect of that is that

229
00:09:20,959 --> 00:09:25,670
our default and I behavior is bypassed

230
00:09:22,819 --> 00:09:28,339
essentially what's happening is that<font color="#E5E5E5"> the</font>

231
00:09:25,670 --> 00:09:30,920
behavior changes from<font color="#CCCCCC"> the documentary</font>

232
00:09:28,339 --> 00:09:34,610
behavior when an access list is bound to

233
00:09:30,920 --> 00:09:36,199
deny anything by default to to the

234
00:09:34,610 --> 00:09:39,139
behavior that's a<font color="#E5E5E5"> little bit less secure</font>

235
00:09:36,199 --> 00:09:43,459
with the security level you know the

236
00:09:39,139 --> 00:09:45,019
numeric security level filtering so so

237
00:09:43,459 --> 00:09:47,628
when you're relying on security levels

238
00:09:45,019 --> 00:09:49,970
you're allowed<font color="#CCCCCC"> outbound as we discussed</font>

239
00:09:47,629 --> 00:09:52,519
earlier from a higher security to a

240
00:09:49,970 --> 00:09:56,209
lower security level interface so so

241
00:09:52,519 --> 00:10:00,199
this this this bug<font color="#E5E5E5"> doesn't allow inbound</font>

242
00:09:56,209 --> 00:10:04,160
ACL bypass it's only outbound night ACL

243
00:10:00,199 --> 00:10:05,750
bypass but that's still concerning you

244
00:10:04,160 --> 00:10:07,069
know a lot<font color="#CCCCCC"> of times you</font><font color="#E5E5E5"> you want to</font>

245
00:10:05,750 --> 00:10:08,899
restrict your outbound traffic so you're

246
00:10:07,069 --> 00:10:11,389
blocking things like phone<font color="#E5E5E5"> home traffic</font>

247
00:10:08,899 --> 00:10:13,550
for malware botnet command and controls

248
00:10:11,389 --> 00:10:16,279
you know possibly<font color="#CCCCCC"> second stage</font>

249
00:10:13,550 --> 00:10:19,130
downloaders you know maybe connect back

250
00:10:16,279 --> 00:10:22,160
shells and those sorts of things so so

251
00:10:19,130 --> 00:10:27,319
this<font color="#E5E5E5"> is a pretty significant you know</font>

252
00:10:22,160 --> 00:10:31,610
vulnerability in in how the the traffic

253
00:10:27,319 --> 00:10:33,170
filtering occurs it's also pretty hard

254
00:10:31,610 --> 00:10:35,389
to identify when this is actually

255
00:10:33,170 --> 00:10:37,579
affecting you there's essentially two

256
00:10:35,389 --> 00:10:40,850
ways to to know that this is affected

257
00:10:37,579 --> 00:10:43,339
the first is simply through analyzing

258
00:10:40,850 --> 00:10:45,559
your logs this is actually how we how we

259
00:10:43,339 --> 00:10:47,209
<font color="#E5E5E5">first came across this you know we</font>

260
00:10:45,559 --> 00:10:50,600
noticed through log analysis that all of

261
00:10:47,209 --> 00:10:53,000
a sudden our outbound drops you want

262
00:10:50,600 --> 00:10:54,860
went<font color="#E5E5E5"> to zero you know rather than</font>

263
00:10:53,000 --> 00:10:56,569
dropping outbound<font color="#E5E5E5"> traffic that's not</font>

264
00:10:54,860 --> 00:10:59,120
allowed we weren't seeing anything up

265
00:10:56,569 --> 00:11:00,500
I'm being dropped in the logs and you

266
00:10:59,120 --> 00:11:03,439
know began investigating the root cause

267
00:11:00,500 --> 00:11:06,019
one<font color="#CCCCCC"> thing to</font><font color="#E5E5E5"> note here is that you'll</font>

268
00:11:03,439 --> 00:11:07,260
only get these syslog messages since

269
00:11:06,019 --> 00:11:10,440
it's showing built connection

270
00:11:07,260 --> 00:11:12,689
you have to be logging at a more verbose

271
00:11:10,440 --> 00:11:15,270
level in<font color="#E5E5E5"> order to see those logs and</font>

272
00:11:12,690 --> 00:11:17,760
that is something<font color="#E5E5E5"> that people don't</font>

273
00:11:15,270 --> 00:11:19,860
commonly do a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people are</font>

274
00:11:17,760 --> 00:11:22,950
<font color="#CCCCCC">generally not concerned about logging</font>

275
00:11:19,860 --> 00:11:24,870
traffic that's<font color="#E5E5E5"> permitted you know since</font>

276
00:11:22,950 --> 00:11:27,330
<font color="#E5E5E5">it's permitted they you</font><font color="#CCCCCC"> know they're not</font>

277
00:11:24,870 --> 00:11:29,190
<font color="#E5E5E5">concerned about it but you</font><font color="#CCCCCC"> know it's</font>

278
00:11:27,330 --> 00:11:30,630
important<font color="#E5E5E5"> to monitor that traffic and</font>

279
00:11:29,190 --> 00:11:32,520
confirm that the permitted traffic is

280
00:11:30,630 --> 00:11:37,680
traffic<font color="#E5E5E5"> that you meant to permit the</font>

281
00:11:32,520 --> 00:11:39,569
other way to to identify that's

282
00:11:37,680 --> 00:11:42,180
misbehaving is by using the built-in

283
00:11:39,570 --> 00:11:43,680
packet tracer on a<font color="#CCCCCC"> si so what this</font>

284
00:11:42,180 --> 00:11:46,439
allows you to do is<font color="#CCCCCC"> simulate the flow of</font>

285
00:11:43,680 --> 00:11:48,810
a<font color="#E5E5E5"> trap of you know a given packet</font>

286
00:11:46,440 --> 00:11:51,270
through the a-si and it identifies what

287
00:11:48,810 --> 00:11:52,290
rules and what actions are taken this

288
00:11:51,270 --> 00:11:55,110
can<font color="#CCCCCC"> be a really</font><font color="#E5E5E5"> helpful troubleshooting</font>

289
00:11:52,290 --> 00:11:58,230
tool because it'll you know points right

290
00:11:55,110 --> 00:12:02,940
at at what's happening and here we<font color="#E5E5E5"> see</font>

291
00:11:58,230 --> 00:12:06,330
in our example here an entry that

292
00:12:02,940 --> 00:12:09,660
<font color="#E5E5E5">indicates that the rule was allowed by</font>

293
00:12:06,330 --> 00:12:10,830
an implicit rule which again should it

294
00:12:09,660 --> 00:12:12,900
be the behavior when there's an access

295
00:12:10,830 --> 00:12:14,670
list bound to the interface you should

296
00:12:12,900 --> 00:12:17,790
only see this<font color="#E5E5E5"> when when you're relying</font>

297
00:12:14,670 --> 00:12:19,530
on security levels so it it's not

298
00:12:17,790 --> 00:12:22,410
something that's super easy<font color="#E5E5E5"> to identify</font>

299
00:12:19,530 --> 00:12:24,089
you know<font color="#E5E5E5"> when it's occurring and that</font>

300
00:12:22,410 --> 00:12:27,000
and that can make<font color="#E5E5E5"> it</font><font color="#CCCCCC"> even more nefarious</font>

301
00:12:24,090 --> 00:12:29,550
you know if you're<font color="#E5E5E5"> not aware that that</font>

302
00:12:27,000 --> 00:12:30,960
this<font color="#CCCCCC"> behavior is occurring then</font>

303
00:12:29,550 --> 00:12:34,260
obviously you're<font color="#E5E5E5"> not going to take</font>

304
00:12:30,960 --> 00:12:35,610
action to prevent it so there's a<font color="#CCCCCC"> few</font>

305
00:12:34,260 --> 00:12:37,710
different ways<font color="#CCCCCC"> to mitigate this you can</font>

306
00:12:35,610 --> 00:12:39,120
upgrade<font color="#E5E5E5"> to a patch version and there's</font>

307
00:12:37,710 --> 00:12:43,320
several different versions depending on

308
00:12:39,120 --> 00:12:46,110
what what provision are on or you can

309
00:12:43,320 --> 00:12:48,180
add an explicit deny entry to to each

310
00:12:46,110 --> 00:12:52,290
ACL so that you're not<font color="#E5E5E5"> relying on the</font>

311
00:12:48,180 --> 00:12:54,839
implicit<font color="#CCCCCC"> 9 now this isn't</font><font color="#E5E5E5"> something that</font>

312
00:12:52,290 --> 00:12:58,650
can<font color="#CCCCCC"> be triggered remotely or at will by</font>

313
00:12:54,840 --> 00:13:01,950
an attacker so it's not it's<font color="#E5E5E5"> not really</font>

314
00:12:58,650 --> 00:13:04,590
a weapon I zabal vulnerability but it's

315
00:13:01,950 --> 00:13:06,660
still important you know that in that<font color="#E5E5E5"> it</font>

316
00:13:04,590 --> 00:13:08,130
points out the need to monitor what

317
00:13:06,660 --> 00:13:10,770
these devices are actually doing and

318
00:13:08,130 --> 00:13:14,730
verifying that you know that the

319
00:13:10,770 --> 00:13:16,079
behavior<font color="#E5E5E5"> it's exhibit intended you can't</font>

320
00:13:14,730 --> 00:13:18,270
really<font color="#E5E5E5"> tell that this is occurring by</font>

321
00:13:16,080 --> 00:13:19,860
looking at the configuration so simple

322
00:13:18,270 --> 00:13:20,970
you know configuration auditing and

323
00:13:19,860 --> 00:13:22,800
strong

324
00:13:20,970 --> 00:13:25,350
change control and configuration control

325
00:13:22,800 --> 00:13:30,060
is really not sufficient<font color="#E5E5E5"> you need to</font>

326
00:13:25,350 --> 00:13:32,220
actually monitor monitor behavior yeah

327
00:13:30,060 --> 00:13:34,589
there's a<font color="#E5E5E5"> Benz reminding me there's a</font>

328
00:13:32,220 --> 00:13:37,500
CBE and I<font color="#E5E5E5"> thought I had that in the</font>

329
00:13:34,589 --> 00:13:40,529
slides here well here's here's Cisco's

330
00:13:37,500 --> 00:13:43,019
bug number that has more information I

331
00:13:40,529 --> 00:13:45,899
don't<font color="#E5E5E5"> make it one of the</font><font color="#CCCCCC"> CBD number here</font>

332
00:13:43,019 --> 00:13:48,600
you guys<font color="#E5E5E5"> have yeah it's in the white</font>

333
00:13:45,899 --> 00:13:53,009
paper there's a there is a CD<font color="#E5E5E5"> entry for</font>

334
00:13:48,600 --> 00:13:57,120
this for this issue from 2009 late 2009

335
00:13:53,009 --> 00:13:59,009
so moving<font color="#E5E5E5"> on the next thing I want to</font>

336
00:13:57,120 --> 00:14:02,040
talk about is some some vulnerabilities

337
00:13:59,009 --> 00:14:03,839
I discovered in the the web server the

338
00:14:02,040 --> 00:14:07,259
integrated<font color="#CCCCCC"> web server of a</font><font color="#E5E5E5"> sa that</font>

339
00:14:03,839 --> 00:14:09,480
supports the act of direct I'm sorry<font color="#E5E5E5"> act</font>

340
00:14:07,259 --> 00:14:18,240
adaptive security device manager

341
00:14:09,480 --> 00:14:19,889
administration googly so so for those of

342
00:14:18,240 --> 00:14:21,930
you who may never have seen it the

343
00:14:19,889 --> 00:14:25,920
screenshot here is an example of what

344
00:14:21,930 --> 00:14:27,870
Sdn looks like essentially<font color="#E5E5E5"> it's a it's a</font>

345
00:14:25,920 --> 00:14:29,579
java GUI that allows you<font color="#E5E5E5"> to manage and</font>

346
00:14:27,870 --> 00:14:31,709
monitor different aspects the firewall

347
00:14:29,579 --> 00:14:33,689
configuration it's meant<font color="#E5E5E5"> to be a lot</font>

348
00:14:31,709 --> 00:14:35,219
friendlier than the command line

349
00:14:33,689 --> 00:14:37,290
interface that can be kind of daunting

350
00:14:35,220 --> 00:14:39,870
to you know<font color="#E5E5E5"> to people when they're when</font>

351
00:14:37,290 --> 00:14:42,269
they're first learning it you can launch

352
00:14:39,870 --> 00:14:44,699
launch this from the browser or install

353
00:14:42,269 --> 00:14:48,809
install a package on<font color="#E5E5E5"> your local machine</font>

354
00:14:44,699 --> 00:14:52,319
it runs through java web start and uses

355
00:14:48,809 --> 00:14:59,160
https for for communication back to the

356
00:14:52,319 --> 00:15:00,449
pasa so<font color="#E5E5E5"> i decided to look at that</font>

357
00:14:59,160 --> 00:15:02,100
communication that's that's flowing

358
00:15:00,449 --> 00:15:05,008
between the client and<font color="#E5E5E5"> the and the</font>

359
00:15:02,100 --> 00:15:06,329
firewall and see exactly what what you

360
00:15:05,009 --> 00:15:08,730
<font color="#CCCCCC">know how that how that exchange is</font>

361
00:15:06,329 --> 00:15:10,949
performed what we see<font color="#E5E5E5"> here is a</font>

362
00:15:08,730 --> 00:15:13,889
screenshot from from burp suite where

363
00:15:10,949 --> 00:15:18,508
we're we're proxying and re

364
00:15:13,889 --> 00:15:20,370
renegotiating the ssl session so we've

365
00:15:18,509 --> 00:15:23,790
got to<font color="#E5E5E5"> SSL streams one between this</font>

366
00:15:20,370 --> 00:15:26,370
machine and the a-si any other between

367
00:15:23,790 --> 00:15:28,319
<font color="#E5E5E5">the beyond the bird machine and the</font>

368
00:15:26,370 --> 00:15:30,329
client so this allows us<font color="#E5E5E5"> to see the</font>

369
00:15:28,319 --> 00:15:32,880
<font color="#E5E5E5">contents of the HTTPS dream that would</font>

370
00:15:30,329 --> 00:15:34,410
otherwise be encrypted and and not

371
00:15:32,880 --> 00:15:36,509
visible to us

372
00:15:34,410 --> 00:15:39,149
if you look through here you can start

373
00:15:36,509 --> 00:15:41,850
to<font color="#E5E5E5"> get an idea for the command flow the</font>

374
00:15:39,149 --> 00:15:44,370
first few lines there are downloading

375
00:15:41,850 --> 00:15:49,110
some of the Java components the jar

376
00:15:44,370 --> 00:15:51,329
files and<font color="#E5E5E5"> jnlp files further on we see</font>

377
00:15:49,110 --> 00:15:53,399
we see the client software after it

378
00:15:51,329 --> 00:15:54,930
starts up check the version of<font color="#CCCCCC"> the EA se</font>

379
00:15:53,399 --> 00:15:57,329
so it knows what commands are supported

380
00:15:54,930 --> 00:15:59,550
and<font color="#CCCCCC"> how it can how it can talk to it and</font>

381
00:15:57,329 --> 00:16:02,579
then the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> session that's highlighted</font>

382
00:15:59,550 --> 00:16:05,189
here shows<font color="#CCCCCC"> the first authenticated</font>

383
00:16:02,579 --> 00:16:06,839
session so this<font color="#CCCCCC"> is after after</font><font color="#E5E5E5"> the</font>

384
00:16:05,189 --> 00:16:09,599
administrators<font color="#E5E5E5"> enter their username and</font>

385
00:16:06,839 --> 00:16:12,180
password and connected you<font color="#E5E5E5"> know under</font>

386
00:16:09,600 --> 00:16:13,199
with administrative credentials what's

387
00:16:12,180 --> 00:16:16,079
<font color="#E5E5E5">interesting here if you look at the</font>

388
00:16:13,199 --> 00:16:20,099
<font color="#E5E5E5">details down at the bottom it's using</font>

389
00:16:16,079 --> 00:16:24,329
HTTP basic auth so all<font color="#E5E5E5"> that really does</font>

390
00:16:20,100 --> 00:16:27,870
is is base64 encode your<font color="#E5E5E5"> username and</font>

391
00:16:24,329 --> 00:16:30,060
<font color="#E5E5E5">password it's pretty pretty weak way to</font>

392
00:16:27,870 --> 00:16:32,910
protect administrative credentials<font color="#CCCCCC"> it</font>

393
00:16:30,060 --> 00:16:35,040
you know it is generally over SSL but as

394
00:16:32,910 --> 00:16:38,250
we'll see you know there's there's ways

395
00:16:35,040 --> 00:16:39,630
<font color="#CCCCCC">to defeat defeat that protection and</font>

396
00:16:38,250 --> 00:16:43,199
there's no<font color="#E5E5E5"> further protection from the</font>

397
00:16:39,630 --> 00:16:46,230
application so just took summer ii of

398
00:16:43,199 --> 00:16:48,329
the different<font color="#E5E5E5"> urls that that asdm uses</font>

399
00:16:46,230 --> 00:16:50,790
to communicate<font color="#E5E5E5"> with the firewall we've</font>

400
00:16:48,329 --> 00:16:53,279
got an admin directory as well as an

401
00:16:50,790 --> 00:16:56,519
admin public directory which basically

402
00:16:53,279 --> 00:16:58,620
store the the java files and the helper

403
00:16:56,519 --> 00:17:01,410
files that are given to the client these

404
00:16:58,620 --> 00:17:04,949
are<font color="#E5E5E5"> are accessible anonymously they're</font>

405
00:17:01,410 --> 00:17:06,510
basically public directories our

406
00:17:04,949 --> 00:17:08,459
remaining directories all require

407
00:17:06,510 --> 00:17:10,829
authentication and this is<font color="#E5E5E5"> always done</font>

408
00:17:08,459 --> 00:17:13,650
with HTTP basic auth every authenticated

409
00:17:10,829 --> 00:17:16,319
request has your username<font color="#CCCCCC"> and password</font>

410
00:17:13,650 --> 00:17:19,319
so there's<font color="#E5E5E5"> there's basically three</font>

411
00:17:16,319 --> 00:17:23,069
different different paths that are of

412
00:17:19,319 --> 00:17:25,799
interest to us the first is the / admin

413
00:17:23,069 --> 00:17:28,289
/ exact this allows us to execute

414
00:17:25,799 --> 00:17:32,220
commands by<font color="#CCCCCC"> sending the command</font><font color="#E5E5E5"> text in</font>

415
00:17:28,289 --> 00:17:34,080
the URI of the request admin config

416
00:17:32,220 --> 00:17:37,679
returns the current running

417
00:17:34,080 --> 00:17:40,439
configuration of the firewall then admin

418
00:17:37,679 --> 00:17:42,450
capture will allow us to to view any

419
00:17:40,440 --> 00:17:44,490
<font color="#E5E5E5">packet packet captures</font><font color="#CCCCCC"> that we've</font>

420
00:17:42,450 --> 00:17:47,190
configured on the<font color="#E5E5E5"> firewall and you can</font>

421
00:17:44,490 --> 00:17:49,710
also get those in pcap format by

422
00:17:47,190 --> 00:17:50,760
by appending pcap so down at the bottom

423
00:17:49,710 --> 00:17:52,410
<font color="#E5E5E5">of the slide here</font><font color="#CCCCCC"> we've got some</font>

424
00:17:50,760 --> 00:17:54,600
examples of running the show over

425
00:17:52,410 --> 00:17:57,270
command you notice that<font color="#E5E5E5"> the space</font><font color="#CCCCCC"> is</font>

426
00:17:54,600 --> 00:17:58,590
HTTP encoded you can run any command

427
00:17:57,270 --> 00:18:00,780
that you<font color="#E5E5E5"> can run on the command line by</font>

428
00:17:58,590 --> 00:18:07,199
just appending it to the slash execu RL

429
00:18:00,780 --> 00:18:09,180
so let's see then the<font color="#E5E5E5"> next example there</font>

430
00:18:07,200 --> 00:18:12,420
is showing showing the download of a

431
00:18:09,180 --> 00:18:15,900
pcap file for the capture<font color="#E5E5E5"> name test the</font>

432
00:18:12,420 --> 00:18:18,210
<font color="#E5E5E5">next example</font><font color="#CCCCCC"> there shows a command is</font>

433
00:18:15,900 --> 00:18:20,550
going to return the current clock the

434
00:18:18,210 --> 00:18:22,950
time on<font color="#E5E5E5"> the device as</font><font color="#CCCCCC"> well as the</font>

435
00:18:20,550 --> 00:18:24,180
contents of the inside access list now

436
00:18:22,950 --> 00:18:26,490
in that example you'll notice that we've

437
00:18:24,180 --> 00:18:29,940
chain two commands together you can do

438
00:18:26,490 --> 00:18:31,170
this pretty you know at a pretty good

439
00:18:29,940 --> 00:18:32,280
<font color="#E5E5E5">amount of depth I actually haven't found</font>

440
00:18:31,170 --> 00:18:34,290
a maximum<font color="#CCCCCC"> number of commands</font><font color="#E5E5E5"> that you</font>

441
00:18:32,280 --> 00:18:36,750
could<font color="#E5E5E5"> chain together that way so as long</font>

442
00:18:34,290 --> 00:18:37,920
<font color="#CCCCCC">as you you know HTTP in code your space</font>

443
00:18:36,750 --> 00:18:39,930
isn't about you know any special

444
00:18:37,920 --> 00:18:42,120
characters that are present you can

445
00:18:39,930 --> 00:18:44,610
chain as many arbitrary commands as

446
00:18:42,120 --> 00:18:50,040
you'd like into into a single get

447
00:18:44,610 --> 00:18:54,300
<font color="#E5E5E5">request as i mentioned we're using HTTP</font>

448
00:18:50,040 --> 00:18:56,250
basic auth for for authentication so our

449
00:18:54,300 --> 00:18:57,960
credentials are just basics<font color="#E5E5E5"> t4 encoded</font>

450
00:18:56,250 --> 00:19:01,500
so in an example<font color="#CCCCCC"> I had previously this</font>

451
00:18:57,960 --> 00:19:04,260
<font color="#E5E5E5">is why WR is the base64 string and as</font>

452
00:19:01,500 --> 00:19:07,170
you can see<font color="#E5E5E5"> that at base64 decodes to</font>

453
00:19:04,260 --> 00:19:09,900
admin colon<font color="#E5E5E5"> super secret which is our</font>

454
00:19:07,170 --> 00:19:14,070
username and password you know separated

455
00:19:09,900 --> 00:19:16,590
by colon so the obvious the obvious

456
00:19:14,070 --> 00:19:20,250
weakness here is that if we<font color="#CCCCCC"> use an</font><font color="#E5E5E5"> SSL</font>

457
00:19:16,590 --> 00:19:25,080
interception proxy like<font color="#CCCCCC"> perros you</font><font color="#E5E5E5"> know</font>

458
00:19:20,250 --> 00:19:28,080
any number of those web scarab you can

459
00:19:25,080 --> 00:19:31,169
rewrite a you know we encrypt decrypt

460
00:19:28,080 --> 00:19:33,540
<font color="#E5E5E5">andrey encrypt the session and men and</font>

461
00:19:31,170 --> 00:19:34,830
<font color="#E5E5E5">ventilate this would require that you</font>

462
00:19:33,540 --> 00:19:36,870
would you would send a different

463
00:19:34,830 --> 00:19:38,639
certificate to clients since you don't

464
00:19:36,870 --> 00:19:42,239
have<font color="#E5E5E5"> access to the private key that the</font>

465
00:19:38,640 --> 00:19:45,780
a-si is using so it<font color="#E5E5E5"> is easily detectable</font>

466
00:19:42,240 --> 00:19:48,090
however I found<font color="#E5E5E5"> that often</font><font color="#CCCCCC"> times people</font>

467
00:19:45,780 --> 00:19:49,680
don't you<font color="#E5E5E5"> know people will run</font>

468
00:19:48,090 --> 00:19:52,530
self-signed certificates on there ASAS

469
00:19:49,680 --> 00:19:55,560
you know there's generally a fairly

470
00:19:52,530 --> 00:19:57,149
<font color="#CCCCCC">small user base often as few as you know</font>

471
00:19:55,560 --> 00:20:00,240
one or two administrators that<font color="#CCCCCC"> are going</font>

472
00:19:57,150 --> 00:20:00,930
<font color="#E5E5E5">to be using using that so you know</font>

473
00:20:00,240 --> 00:20:02,310
<font color="#E5E5E5">companies that</font>

474
00:20:00,930 --> 00:20:04,650
maintain their own certificate authority

475
00:20:02,310 --> 00:20:06,960
you don't want to go<font color="#E5E5E5"> out pay for a</font>

476
00:20:04,650 --> 00:20:09,870
certificate so they'll just use self

477
00:20:06,960 --> 00:20:11,940
sensors with that being the case you

478
00:20:09,870 --> 00:20:14,070
know<font color="#E5E5E5"> oftentimes administrators become</font>

479
00:20:11,940 --> 00:20:15,540
complacent about the about the<font color="#E5E5E5"> SSL</font>

480
00:20:14,070 --> 00:20:21,300
warnings and may just click right

481
00:20:15,540 --> 00:20:22,800
through so the<font color="#E5E5E5"> next way that you can</font>

482
00:20:21,300 --> 00:20:25,919
<font color="#E5E5E5">leverage this weakness is through</font>

483
00:20:22,800 --> 00:20:28,110
cross-site request forgery you know as

484
00:20:25,920 --> 00:20:29,520
we discussed you can you can depend<font color="#E5E5E5"> on</font>

485
00:20:28,110 --> 00:20:31,080
any command you want into<font color="#E5E5E5"> the URL</font>

486
00:20:29,520 --> 00:20:33,780
there's no not<font color="#E5E5E5"> saying there's no</font>

487
00:20:31,080 --> 00:20:37,050
randomization<font color="#E5E5E5"> of the URL it's just</font><font color="#CCCCCC"> slash</font>

488
00:20:33,780 --> 00:20:38,070
exact / command so you know there's

489
00:20:37,050 --> 00:20:40,440
there's nothing protecting us from

490
00:20:38,070 --> 00:20:42,540
cross-site request forgery there's no

491
00:20:40,440 --> 00:20:44,580
hashing of<font color="#E5E5E5"> the you</font><font color="#CCCCCC"> our eyes in your</font>

492
00:20:42,540 --> 00:20:47,909
authentication credentials as digest off

493
00:20:44,580 --> 00:20:49,169
might might might do so there's

494
00:20:47,910 --> 00:20:52,620
basically nothing protecting the

495
00:20:49,170 --> 00:20:56,220
integrity<font color="#E5E5E5"> of the URL in that request</font>

496
00:20:52,620 --> 00:20:58,860
although to exploit cross-site request

497
00:20:56,220 --> 00:21:00,000
forgery the client would have to have

498
00:20:58,860 --> 00:21:02,729
hit the<font color="#CCCCCC"> sa through a browser</font>

499
00:21:00,000 --> 00:21:05,700
authenticated this isn't something

500
00:21:02,730 --> 00:21:08,250
<font color="#E5E5E5">that's done frequently most people will</font>

501
00:21:05,700 --> 00:21:10,500
navigate to it download the java client

502
00:21:08,250 --> 00:21:12,660
and then authenticate through java so

503
00:21:10,500 --> 00:21:14,400
the browser may not have cash

504
00:21:12,660 --> 00:21:15,930
credentials often since since those

505
00:21:14,400 --> 00:21:20,370
credentials aren't generally given to

506
00:21:15,930 --> 00:21:24,150
the browser but if an admin user browses

507
00:21:20,370 --> 00:21:25,350
you know<font color="#E5E5E5"> using a normal</font><font color="#CCCCCC"> web browser the</font>

508
00:21:24,150 --> 00:21:28,530
browser will<font color="#CCCCCC"> cache those credentials</font>

509
00:21:25,350 --> 00:21:32,580
there's no logout mechanism there's no

510
00:21:28,530 --> 00:21:35,399
age out or time out as long as they that

511
00:21:32,580 --> 00:21:36,659
browser process is running those

512
00:21:35,400 --> 00:21:41,100
credentials are gonna be cached on the

513
00:21:36,660 --> 00:21:42,600
client so there's actually<font color="#CCCCCC"> a few cases</font>

514
00:21:41,100 --> 00:21:45,449
where<font color="#E5E5E5"> cisco recommends you use the</font>

515
00:21:42,600 --> 00:21:46,709
browser to connect<font color="#E5E5E5"> to your a</font><font color="#CCCCCC"> sa you know</font>

516
00:21:45,450 --> 00:21:48,060
as<font color="#CCCCCC"> i said this isn't</font><font color="#E5E5E5"> this isn't</font>

517
00:21:46,710 --> 00:21:50,490
<font color="#E5E5E5">something that's done real frequently</font>

518
00:21:48,060 --> 00:21:53,040
but there's some corner cases where it's

519
00:21:50,490 --> 00:21:55,560
where it's recommended it's the

520
00:21:53,040 --> 00:21:57,240
recommended way to access the a-si one

521
00:21:55,560 --> 00:21:59,370
of these<font color="#E5E5E5"> is for copying packet captures</font>

522
00:21:57,240 --> 00:22:01,320
off the sensor you know can<font color="#CCCCCC"> be able to</font>

523
00:21:59,370 --> 00:22:04,110
hook up a lot<font color="#E5E5E5"> easier than copying it</font>

524
00:22:01,320 --> 00:22:05,669
over ftp or<font color="#E5E5E5"> SCP you know to just pull up</font>

525
00:22:04,110 --> 00:22:07,919
<font color="#E5E5E5">that URL but as soon as you enter those</font>

526
00:22:05,670 --> 00:22:12,420
credentials that browser sessions got

527
00:22:07,920 --> 00:22:13,950
them another example<font color="#CCCCCC"> of a place where</font>

528
00:22:12,420 --> 00:22:14,490
they recommend connecting through<font color="#E5E5E5"> the</font>

529
00:22:13,950 --> 00:22:17,730
browser

530
00:22:14,490 --> 00:22:20,460
is in pre-shared key recovery as been

531
00:22:17,730 --> 00:22:22,980
mentioned you<font color="#CCCCCC"> know the a-si</font><font color="#E5E5E5"> will have</font>

532
00:22:20,460 --> 00:22:25,440
you no access to pre cherkis of any

533
00:22:22,980 --> 00:22:30,179
ipsec VPN s that<font color="#E5E5E5"> are that are configured</font>

534
00:22:25,440 --> 00:22:33,090
on it<font color="#E5E5E5"> cisco generally does</font><font color="#CCCCCC"> not allow the</font>

535
00:22:30,179 --> 00:22:35,370
administrator to see those keys if<font color="#E5E5E5"> you</font>

536
00:22:33,090 --> 00:22:37,678
run a show run command on the command

537
00:22:35,370 --> 00:22:40,590
line instead of<font color="#E5E5E5"> your pre</font><font color="#CCCCCC"> sharkey you're</font>

538
00:22:37,679 --> 00:22:41,940
going to see a series of stars this is

539
00:22:40,590 --> 00:22:44,520
despite<font color="#E5E5E5"> being an authorized</font>

540
00:22:41,940 --> 00:22:46,260
administrator<font color="#E5E5E5"> / an encrypted session so</font>

541
00:22:44,520 --> 00:22:47,790
they have an<font color="#E5E5E5"> article out there that that</font>

542
00:22:46,260 --> 00:22:49,290
<font color="#CCCCCC">explained some ways to recover those</font>

543
00:22:47,790 --> 00:22:52,710
keys in the event that are lost and you

544
00:22:49,290 --> 00:22:54,389
need to need<font color="#CCCCCC"> to replicate them this is</font>

545
00:22:52,710 --> 00:22:56,460
kind of an interesting article the first

546
00:22:54,390 --> 00:22:58,740
the<font color="#E5E5E5"> first method that they recommend is</font>

547
00:22:56,460 --> 00:23:00,750
to use use the more command on the

548
00:22:58,740 --> 00:23:02,190
command line to process your your system

549
00:23:00,750 --> 00:23:05,040
configuration so basically by not going

550
00:23:02,190 --> 00:23:08,820
through the show command that masking<font color="#E5E5E5"> is</font>

551
00:23:05,040 --> 00:23:11,340
bypassed cisco has kind of changed their

552
00:23:08,820 --> 00:23:13,500
tune on this they're saying<font color="#CCCCCC"> now that</font>

553
00:23:11,340 --> 00:23:15,419
this<font color="#E5E5E5"> is a bug so they've got one article</font>

554
00:23:13,500 --> 00:23:17,730
that says this can be a way<font color="#E5E5E5"> to recover</font>

555
00:23:15,420 --> 00:23:19,950
creature keys and then they've<font color="#CCCCCC"> got a bug</font>

556
00:23:17,730 --> 00:23:21,990
saying yeah what we told you to<font color="#E5E5E5"> do in</font>

557
00:23:19,950 --> 00:23:24,450
that<font color="#E5E5E5"> other article that's that's bug</font>

558
00:23:21,990 --> 00:23:26,550
behavior so the release notes for a 3-1

559
00:23:24,450 --> 00:23:29,790
you know state that that's<font color="#CCCCCC"> that that's</font>

560
00:23:26,550 --> 00:23:30,960
been fixed and no longer<font color="#E5E5E5"> works I haven't</font>

561
00:23:29,790 --> 00:23:33,090
<font color="#E5E5E5">actually confirmed that but that's from</font>

562
00:23:30,960 --> 00:23:34,380
<font color="#E5E5E5">the release notes the other way is to</font>

563
00:23:33,090 --> 00:23:38,370
<font color="#E5E5E5">get pretty sure key recovery are also</font>

564
00:23:34,380 --> 00:23:41,790
kind<font color="#E5E5E5"> of interesting the next to our to</font>

565
00:23:38,370 --> 00:23:43,949
copy it over<font color="#E5E5E5"> tftp or ftp the thing that</font>

566
00:23:41,790 --> 00:23:45,450
strikes me<font color="#E5E5E5"> as odd about this is that the</font>

567
00:23:43,950 --> 00:23:46,800
whole reason<font color="#CCCCCC"> you need to do this is</font>

568
00:23:45,450 --> 00:23:48,720
because they won't show<font color="#E5E5E5"> you the</font>

569
00:23:46,800 --> 00:23:51,570
<font color="#CCCCCC">pre-shared keys over an encrypted ssh</font>

570
00:23:48,720 --> 00:23:53,670
session when you're authorized but they

571
00:23:51,570 --> 00:23:56,669
suggest that you send them over<font color="#CCCCCC"> gftp or</font>

572
00:23:53,670 --> 00:23:59,250
<font color="#E5E5E5">ftp which are plain text protocols</font><font color="#CCCCCC"> i</font>

573
00:23:56,670 --> 00:24:03,690
kind of don't understand how those two

574
00:23:59,250 --> 00:24:05,970
you know those those two stances can be

575
00:24:03,690 --> 00:24:07,530
resolved with each other if pretty sure

576
00:24:05,970 --> 00:24:08,910
keys are so sensitive that we<font color="#CCCCCC"> don't want</font>

577
00:24:07,530 --> 00:24:10,889
to show them over and<font color="#E5E5E5"> crypt a channel</font>

578
00:24:08,910 --> 00:24:13,140
for risk of interception why would we

579
00:24:10,890 --> 00:24:15,420
want<font color="#E5E5E5"> to send them over plain text and</font>

580
00:24:13,140 --> 00:24:18,540
then their last option is to copy or

581
00:24:15,420 --> 00:24:20,520
download via HTTPS just by connecting to

582
00:24:18,540 --> 00:24:23,159
the browser you know your browser<font color="#E5E5E5"> to da</font>

583
00:24:20,520 --> 00:24:26,460
<font color="#E5E5E5">sa with the slash config directly and</font>

584
00:24:23,160 --> 00:24:28,070
that that option will make your browser

585
00:24:26,460 --> 00:24:32,330
susceptible to cross-site request

586
00:24:28,070 --> 00:24:34,790
there's really there's<font color="#E5E5E5"> really you know</font>

587
00:24:32,330 --> 00:24:37,189
each of these methods that they

588
00:24:34,790 --> 00:24:39,920
described in this article are inherently

589
00:24:37,190 --> 00:24:43,670
flawed but<font color="#E5E5E5"> there are recommended methods</font>

590
00:24:39,920 --> 00:24:46,340
so another way that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can exploit</font>

591
00:24:43,670 --> 00:24:48,320
these these weaknesses is through the

592
00:24:46,340 --> 00:24:51,199
SSL renegotiation vulnerability that was

593
00:24:48,320 --> 00:24:52,399
<font color="#E5E5E5">discovered in November this</font>

594
00:24:51,200 --> 00:24:54,260
vulnerability it was<font color="#E5E5E5"> discovered by</font>

595
00:24:52,400 --> 00:24:58,160
<font color="#CCCCCC">Marcia</font><font color="#E5E5E5"> ray and Steve</font><font color="#CCCCCC"> dispenza a phone</font>

596
00:24:54,260 --> 00:24:59,840
factor it affects pretty much in fact

597
00:24:58,160 --> 00:25:02,600
I'm not<font color="#E5E5E5"> aware of any SSL implementation</font>

598
00:24:59,840 --> 00:25:05,060
that<font color="#E5E5E5"> wasn't affected it's it's</font><font color="#CCCCCC"> a</font>

599
00:25:02,600 --> 00:25:07,459
protocol design flaw not a not an

600
00:25:05,060 --> 00:25:09,409
implementation flaw so this goes far

601
00:25:07,460 --> 00:25:11,450
from<font color="#E5E5E5"> alone and being impacted by this</font>

602
00:25:09,410 --> 00:25:13,430
there's a<font color="#E5E5E5"> lot that can be said about</font>

603
00:25:11,450 --> 00:25:15,620
<font color="#E5E5E5">that bug but the short version of it is</font>

604
00:25:13,430 --> 00:25:17,090
<font color="#CCCCCC">that a man-in-the-middle can ask both</font>

605
00:25:15,620 --> 00:25:19,370
endpoints to renegotiate their

606
00:25:17,090 --> 00:25:21,230
encryption settings and during<font color="#CCCCCC"> that</font>

607
00:25:19,370 --> 00:25:23,629
process there's a time when they can

608
00:25:21,230 --> 00:25:25,370
<font color="#E5E5E5">send plaintext to the server and</font><font color="#CCCCCC"> the</font>

609
00:25:23,630 --> 00:25:26,900
server will accept that<font color="#E5E5E5"> and then prepend</font>

610
00:25:25,370 --> 00:25:30,379
it to the request that's received

611
00:25:26,900 --> 00:25:34,310
encrypted from the<font color="#CCCCCC"> client so what that</font>

612
00:25:30,380 --> 00:25:37,700
allows<font color="#CCCCCC"> us to do is inject text into an</font>

613
00:25:34,310 --> 00:25:41,300
SSL encrypted session there's no way to

614
00:25:37,700 --> 00:25:43,970
decrypt data you can't view what's going

615
00:25:41,300 --> 00:25:45,230
on but you can inject arbitrary plane

616
00:25:43,970 --> 00:25:47,510
<font color="#CCCCCC">tax at the beginning</font><font color="#E5E5E5"> of a request</font>

617
00:25:45,230 --> 00:25:49,340
combined with the week authentication

618
00:25:47,510 --> 00:25:53,750
mechanisms that are that are inherent in

619
00:25:49,340 --> 00:25:56,090
in a<font color="#E5E5E5"> SaaS</font><font color="#CCCCCC"> dm's architecture you can</font>

620
00:25:53,750 --> 00:26:00,050
inject a<font color="#CCCCCC"> URI at the beginning of the</font>

621
00:25:56,090 --> 00:26:02,209
packet the next slide here demonstrates

622
00:26:00,050 --> 00:26:06,320
oops actually there's<font color="#CCCCCC"> one more before</font>

623
00:26:02,210 --> 00:26:08,060
that yeah so<font color="#CCCCCC"> Cisco published a security</font>

624
00:26:06,320 --> 00:26:09,200
advisory rapidly after the the

625
00:26:08,060 --> 00:26:11,480
renegotiation vulnerability was

626
00:26:09,200 --> 00:26:14,960
discovered they have one security

627
00:26:11,480 --> 00:26:17,960
advisory covering their response to this

628
00:26:14,960 --> 00:26:19,910
issue across all all of<font color="#CCCCCC"> their products</font>

629
00:26:17,960 --> 00:26:22,520
<font color="#E5E5E5">obviously they had quite a few products</font>

630
00:26:19,910 --> 00:26:25,100
<font color="#CCCCCC">that were affected they also have</font>

631
00:26:22,520 --> 00:26:27,320
individual bugs tracking each individual

632
00:26:25,100 --> 00:26:29,990
product and they have bugs for a<font color="#CCCCCC"> essay</font>

633
00:26:27,320 --> 00:26:33,080
and<font color="#CCCCCC"> ASTM and there's the</font><font color="#E5E5E5"> bug IDs out</font>

634
00:26:29,990 --> 00:26:36,170
there the the<font color="#E5E5E5"> problem here is</font><font color="#CCCCCC"> that these</font>

635
00:26:33,080 --> 00:26:39,470
aren't very<font color="#E5E5E5"> detailed bugs and the</font>

636
00:26:36,170 --> 00:26:41,850
<font color="#E5E5E5">security advisory is is kinda by its</font>

637
00:26:39,470 --> 00:26:44,669
nature a little bit vague sense

638
00:26:41,850 --> 00:26:48,149
meant<font color="#E5E5E5"> to apply to everything that Cisco</font>

639
00:26:44,669 --> 00:26:50,429
produces basically they include the text

640
00:26:48,150 --> 00:26:52,289
the impact<font color="#E5E5E5"> of an attack depends on the</font>

641
00:26:50,429 --> 00:26:55,799
application protocol running<font color="#E5E5E5"> over TLS</font>

642
00:26:52,289 --> 00:27:00,390
that's<font color="#E5E5E5"> a that's a pretty broad statement</font>

643
00:26:55,799 --> 00:27:03,660
you<font color="#E5E5E5"> know in my</font><font color="#CCCCCC"> mind the impact</font>

644
00:27:00,390 --> 00:27:05,160
specifically against asdm is that an

645
00:27:03,660 --> 00:27:07,770
attacker can<font color="#E5E5E5"> insert any arbitrary</font>

646
00:27:05,160 --> 00:27:09,809
commands and take<font color="#E5E5E5"> over the firewall they</font>

647
00:27:07,770 --> 00:27:11,250
can insert commands in the<font color="#E5E5E5"> context of</font>

648
00:27:09,809 --> 00:27:13,770
your authorized administrative session

649
00:27:11,250 --> 00:27:17,549
and do basically anything they want is

650
00:27:13,770 --> 00:27:19,230
if they were on the CLI so here's here's

651
00:27:17,549 --> 00:27:20,879
kind<font color="#E5E5E5"> of an example of how this works at</font>

652
00:27:19,230 --> 00:27:23,190
the top here we see our original request

653
00:27:20,880 --> 00:27:24,750
sent by the client and<font color="#CCCCCC"> you can see it's</font>

654
00:27:23,190 --> 00:27:26,880
just<font color="#E5E5E5"> running a show version</font><font color="#CCCCCC"> and some</font>

655
00:27:24,750 --> 00:27:29,250
other show commands it's not actually

656
00:27:26,880 --> 00:27:31,740
doing anything that<font color="#CCCCCC"> would modify the</font>

657
00:27:29,250 --> 00:27:36,000
configuration and again we see our

658
00:27:31,740 --> 00:27:39,270
friendly little HTTP basic auth so then

659
00:27:36,000 --> 00:27:40,799
the next<font color="#E5E5E5"> section there is the you know</font>

660
00:27:39,270 --> 00:27:42,690
an example of text<font color="#CCCCCC"> that an attacker</font>

661
00:27:40,799 --> 00:27:45,389
might want to inject into this session

662
00:27:42,690 --> 00:27:48,600
so the attacker is basically injecting

663
00:27:45,390 --> 00:27:51,090
another get request that says you<font color="#E5E5E5"> know</font>

664
00:27:48,600 --> 00:27:55,230
to<font color="#E5E5E5"> create a name record associating the</font>

665
00:27:51,090 --> 00:27:57,030
IP 11 11 11 8 pwned you could basically

666
00:27:55,230 --> 00:27:59,309
do anything you wanted you could create

667
00:27:57,030 --> 00:28:02,460
a username you could you know clearly

668
00:27:59,309 --> 00:28:04,500
config you know open<font color="#E5E5E5"> up modify access</font>

669
00:28:02,460 --> 00:28:06,090
list to allow yourself access to other

670
00:28:04,500 --> 00:28:08,370
other hosts that<font color="#E5E5E5"> you're not supposed to</font>

671
00:28:06,090 --> 00:28:10,980
have and then you'll see there's a new

672
00:28:08,370 --> 00:28:12,928
line followed by this X ignore and

673
00:28:10,980 --> 00:28:16,289
there's<font color="#E5E5E5"> no new line following the X</font>

674
00:28:12,929 --> 00:28:20,280
ignore so the effect is when the

675
00:28:16,289 --> 00:28:22,440
attackers text is prepended to the to

676
00:28:20,280 --> 00:28:23,850
the<font color="#E5E5E5"> actual client</font><font color="#CCCCCC"> request we get</font>

677
00:28:22,440 --> 00:28:26,220
<font color="#E5E5E5">something that looks like the like the</font>

678
00:28:23,850 --> 00:28:28,980
<font color="#E5E5E5">final request here we have the attacker</font>

679
00:28:26,220 --> 00:28:33,270
supplied get command and that<font color="#E5E5E5"> X ignore</font>

680
00:28:28,980 --> 00:28:35,010
causes the the true clients client

681
00:28:33,270 --> 00:28:37,559
initiated request to be ignored by the

682
00:28:35,010 --> 00:28:41,190
firewall you'll<font color="#E5E5E5"> notice that the HTTP</font>

683
00:28:37,559 --> 00:28:42,720
basic off header is still there so you

684
00:28:41,190 --> 00:28:44,610
know we still have those valid

685
00:28:42,720 --> 00:28:47,190
legitimate credentials that the that the

686
00:28:44,610 --> 00:28:49,020
client provided us and so that's that's

687
00:28:47,190 --> 00:28:51,370
basically how how this would be

688
00:28:49,020 --> 00:28:53,950
exploited

689
00:28:51,370 --> 00:28:55,929
so there is proof of concept code for

690
00:28:53,950 --> 00:28:59,230
the TLS ssl renegotiation vulnerability

691
00:28:55,930 --> 00:29:02,020
it was<font color="#E5E5E5"> released by a group called red</font>

692
00:28:59,230 --> 00:29:04,720
<font color="#E5E5E5">team fantastic out of Germany it's up on</font>

693
00:29:02,020 --> 00:29:06,700
their site as well as<font color="#E5E5E5"> on exploit DB it</font>

694
00:29:04,720 --> 00:29:09,490
does require some some modifications to

695
00:29:06,700 --> 00:29:12,820
to work with with<font color="#CCCCCC"> asdm and I've actually</font>

696
00:29:09,490 --> 00:29:15,490
had some some issues trying to get it

697
00:29:12,820 --> 00:29:17,139
working with ASTM the first of all we

698
00:29:15,490 --> 00:29:20,559
would need to<font color="#E5E5E5"> skip the first first</font>

699
00:29:17,140 --> 00:29:22,570
<font color="#E5E5E5">several requests since there's you know</font>

700
00:29:20,559 --> 00:29:24,730
some initial setup in downloading files

701
00:29:22,570 --> 00:29:26,620
and those initial requests don't have

702
00:29:24,730 --> 00:29:29,260
the authentication credentials that are

703
00:29:26,620 --> 00:29:31,360
what we're really after<font color="#E5E5E5"> I also noticed</font>

704
00:29:29,260 --> 00:29:33,760
that the the connection handling on this

705
00:29:31,360 --> 00:29:35,889
this proof concept script was in my

706
00:29:33,760 --> 00:29:38,140
testing a<font color="#CCCCCC"> little strange when the server</font>

707
00:29:35,890 --> 00:29:40,210
would send a fan<font color="#CCCCCC"> or a reset packet that</font>

708
00:29:38,140 --> 00:29:41,559
wasn't being passed through to<font color="#E5E5E5"> client so</font>

709
00:29:40,210 --> 00:29:45,309
the client would basically sit there and

710
00:29:41,559 --> 00:29:47,590
wait forever you<font color="#E5E5E5"> know it's not a problem</font>

711
00:29:45,309 --> 00:29:49,809
when there's only one session 11

712
00:29:47,590 --> 00:29:52,720
connection but something like<font color="#CCCCCC"> asdm</font>

713
00:29:49,809 --> 00:29:56,200
<font color="#E5E5E5">firing off connections rapid fire you</font>

714
00:29:52,720 --> 00:29:57,760
know that<font color="#E5E5E5"> could be a</font><font color="#CCCCCC"> big problem so with</font>

715
00:29:56,200 --> 00:30:00,910
that I'm going<font color="#E5E5E5"> to I'm going to attempt a</font>

716
00:29:57,760 --> 00:30:04,929
couple of a couple of demos yeah if you

717
00:30:00,910 --> 00:30:07,300
don't mind so the two things<font color="#E5E5E5"> I</font><font color="#CCCCCC"> want to</font>

718
00:30:04,929 --> 00:30:10,000
<font color="#E5E5E5">get all here are the cross-site request</font>

719
00:30:07,300 --> 00:30:11,110
forgery attack I'll kind of show an

720
00:30:10,000 --> 00:30:14,020
example of how<font color="#CCCCCC"> that works as well as</font>

721
00:30:11,110 --> 00:30:16,840
kind of an interesting way to to make it

722
00:30:14,020 --> 00:30:18,760
a little more weapon I zabal and then

723
00:30:16,840 --> 00:30:21,610
I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> also a type to demonstrate</font>

724
00:30:18,760 --> 00:30:25,929
the ssl renegotiation vulnerability and

725
00:30:21,610 --> 00:30:28,120
injecting administrative you know its

726
00:30:25,929 --> 00:30:29,710
administrative commands now that one I

727
00:30:28,120 --> 00:30:31,120
should<font color="#E5E5E5"> caution I've had some issues</font>

728
00:30:29,710 --> 00:30:33,280
getting it to work in the vm because<font color="#CCCCCC"> i'm</font>

729
00:30:31,120 --> 00:30:41,678
basically basically trying to man in the

730
00:30:33,280 --> 00:30:44,240
middle myself so it wish me luck good

731
00:30:41,679 --> 00:30:50,030
<font color="#CCCCCC">i'm gonna have to run it</font><font color="#E5E5E5"> on</font>

732
00:30:44,240 --> 00:30:56,090
spring I'm saying what like look at<font color="#E5E5E5"> the</font>

733
00:30:50,030 --> 00:31:08,629
<font color="#E5E5E5">I can't connector</font><font color="#CCCCCC"> alright if we can just</font>

734
00:30:56,090 --> 00:31:10,730
get our that's too<font color="#E5E5E5"> okay so you just have</font>

735
00:31:08,630 --> 00:31:14,720
to like look over here okay this<font color="#E5E5E5"> could</font>

736
00:31:10,730 --> 00:31:16,580
be fun<font color="#E5E5E5"> all right so I guess we can't</font>

737
00:31:14,720 --> 00:31:35,390
clone the screen so I'm going to<font color="#E5E5E5"> have to</font>

738
00:31:16,580 --> 00:31:36,678
wow this<font color="#E5E5E5"> is going to be fun so we can't</font>

739
00:31:35,390 --> 00:31:37,880
bear the monitor so I'm going to<font color="#E5E5E5"> end up</font>

740
00:31:36,679 --> 00:31:53,600
trying<font color="#E5E5E5"> to do this looking over my</font>

741
00:31:37,880 --> 00:31:57,410
shoulder yeah okay<font color="#CCCCCC"> so we've got here is</font>

742
00:31:53,600 --> 00:32:00,409
an ssh session to this little 5505 ASAS

743
00:31:57,410 --> 00:32:02,720
sitting up here this is on a lower end

744
00:32:00,410 --> 00:32:03,950
of the AS a line but it's still a pretty

745
00:32:02,720 --> 00:32:06,559
capable small office home office

746
00:32:03,950 --> 00:32:07,910
firewall and it only<font color="#CCCCCC"> costs</font><font color="#E5E5E5"> a couple</font>

747
00:32:06,559 --> 00:32:10,790
hundred<font color="#E5E5E5"> bucks it runs the same code as</font>

748
00:32:07,910 --> 00:32:14,870
all the other ASAS so it can be a really

749
00:32:10,790 --> 00:32:17,330
<font color="#E5E5E5">great testing development platform i'm</font>

750
00:32:14,870 --> 00:32:20,709
going<font color="#E5E5E5"> to show you here the current</font>

751
00:32:17,330 --> 00:32:20,710
configuration if<font color="#CCCCCC"> i can</font>

752
00:32:24,029 --> 00:32:30,719
sorry this is hard to drive this way let

753
00:32:28,080 --> 00:32:33,139
<font color="#CCCCCC">me I'll let you all look at my back so I</font>

754
00:32:30,719 --> 00:32:33,139
can see

755
00:32:51,100 --> 00:33:05,949
ok so my ssh session got<font color="#CCCCCC"> chilled I can't</font>

756
00:32:54,490 --> 00:33:10,660
<font color="#CCCCCC">even see the bottom there yeah yeah let</font>

757
00:33:05,950 --> 00:33:16,570
me<font color="#CCCCCC"> try that</font><font color="#E5E5E5"> no full screen doesn't work</font>

758
00:33:10,660 --> 00:33:31,720
on the projector well this stinks<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> see</font>

759
00:33:16,570 --> 00:33:33,549
<font color="#E5E5E5">their bottom ok so all I really want to</font>

760
00:33:31,720 --> 00:33:36,190
show from the command line is current

761
00:33:33,549 --> 00:33:37,780
users so we've got to users there's one

762
00:33:36,190 --> 00:33:39,640
that's<font color="#CCCCCC"> that's my</font><font color="#E5E5E5"> name and there's</font><font color="#CCCCCC"> one</font>

763
00:33:37,780 --> 00:33:40,960
that's just<font color="#E5E5E5"> admin that's our admin super</font>

764
00:33:39,640 --> 00:33:52,539
secret that we were talking<font color="#E5E5E5"> about before</font>

765
00:33:40,960 --> 00:33:55,659
and<font color="#CCCCCC"> what we have here is a page that</font>

766
00:33:52,539 --> 00:33:56,950
demos to<font color="#CCCCCC"> csrf attack so while everybody</font>

767
00:33:55,659 --> 00:33:58,240
is looking<font color="#E5E5E5"> at this lolcat there's</font><font color="#CCCCCC"> a</font>

768
00:33:56,950 --> 00:34:00,820
there's some script run in the

769
00:33:58,240 --> 00:34:04,480
background here this script uses

770
00:34:00,820 --> 00:34:08,379
Jeremiah Grossman's<font color="#E5E5E5"> CSR CSS history</font>

771
00:34:04,480 --> 00:34:11,740
searching you know one of the one of<font color="#E5E5E5"> the</font>

772
00:34:08,379 --> 00:34:14,770
tricks in weaponizing of crs<font color="#CCCCCC"> CSRF</font>

773
00:34:11,739 --> 00:34:17,229
exploit against a<font color="#CCCCCC"> sa is that you have</font><font color="#E5E5E5"> to</font>

774
00:34:14,770 --> 00:34:19,480
be able to identify the name the URL

775
00:34:17,230 --> 00:34:22,600
that the you know that the victim would

776
00:34:19,480 --> 00:34:25,510
<font color="#CCCCCC">be using</font><font color="#E5E5E5"> to access it you know people</font>

777
00:34:22,600 --> 00:34:29,109
don't often have DNS names pointing to

778
00:34:25,510 --> 00:34:32,530
their their firewalls so they may access

779
00:34:29,109 --> 00:34:35,529
it by IP so what this page does it's got

780
00:34:32,530 --> 00:34:39,340
some JavaScript that<font color="#CCCCCC"> basically creates a</font>

781
00:34:35,530 --> 00:34:42,310
link to every IP in a given class see

782
00:34:39,340 --> 00:34:44,830
I've done this for up to class B's and

783
00:34:42,310 --> 00:34:47,590
it works it just takes a few seconds to

784
00:34:44,830 --> 00:34:50,080
to run it's also checking for a few

785
00:34:47,590 --> 00:34:52,359
names you<font color="#E5E5E5"> know you might have a name</font>

786
00:34:50,080 --> 00:34:54,369
<font color="#E5E5E5">record called VPN or ssl VPN that points</font>

787
00:34:52,359 --> 00:34:57,970
to your firewall so we're basically

788
00:34:54,369 --> 00:35:02,440
searching for you know searching the the

789
00:34:57,970 --> 00:35:04,459
history by adding links to those it to

790
00:35:02,440 --> 00:35:07,820
the page and then checking their call

791
00:35:04,460 --> 00:35:11,630
in CSS to see if they've been visited so

792
00:35:07,820 --> 00:35:14,869
if we visited an IP and that IP you know

793
00:35:11,630 --> 00:35:18,619
the URL to that IP contains ASTM jnlp

794
00:35:14,869 --> 00:35:20,900
then we know<font color="#CCCCCC"> that that's that's</font><font color="#E5E5E5"> a sa</font>

795
00:35:18,619 --> 00:35:23,180
this running<font color="#E5E5E5"> ASTM we still don't know</font>

796
00:35:20,900 --> 00:35:26,000
that the client has has connected to<font color="#E5E5E5"> it</font>

797
00:35:23,180 --> 00:35:27,140
you know with with her credentials but

798
00:35:26,000 --> 00:35:30,530
<font color="#E5E5E5">we can least be sure it's in the essay</font>

799
00:35:27,140 --> 00:35:33,080
so here you can<font color="#CCCCCC"> see you know is tested a</font>

800
00:35:30,530 --> 00:35:35,330
few different<font color="#E5E5E5"> names and you know several</font>

801
00:35:33,080 --> 00:35:37,460
different IP addresses went through the

802
00:35:35,330 --> 00:35:41,900
whole class fee and you can scroll down

803
00:35:37,460 --> 00:35:44,030
<font color="#E5E5E5">there and it found one so here's a URL</font>

804
00:35:41,900 --> 00:35:46,670
that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> cached you know in</font><font color="#E5E5E5"> my browser</font>

805
00:35:44,030 --> 00:35:50,150
history showing that a launch day<font color="#E5E5E5"> is STM</font>

806
00:35:46,670 --> 00:35:52,099
from this IP this<font color="#E5E5E5"> little Cisco image is</font>

807
00:35:50,150 --> 00:35:55,070
just a<font color="#E5E5E5"> just an image linked from that</font>

808
00:35:52,099 --> 00:35:56,420
from the a-si itself so this<font color="#E5E5E5"> is just</font>

809
00:35:55,070 --> 00:35:59,150
<font color="#E5E5E5">kind of further confirmation that this</font>

810
00:35:56,420 --> 00:36:03,980
isn't a<font color="#CCCCCC"> sa I'm looking</font><font color="#E5E5E5"> at this broken</font>

811
00:35:59,150 --> 00:36:06,589
broken link here is my is<font color="#CCCCCC"> my ASTM I'm</font>

812
00:36:03,980 --> 00:36:09,530
sorry my<font color="#CCCCCC"> CSRF payload so it's an image</font>

813
00:36:06,589 --> 00:36:15,080
tag that<font color="#CCCCCC"> just runs a command against</font>

814
00:36:09,530 --> 00:36:20,300
against KSA through the HTTP<font color="#E5E5E5"> request now</font>

815
00:36:15,080 --> 00:36:23,299
if we go<font color="#E5E5E5"> back to our ssh session you'll</font>

816
00:36:20,300 --> 00:36:25,580
see now that<font color="#CCCCCC"> i</font><font color="#E5E5E5"> ran that we've got a new</font>

817
00:36:23,300 --> 00:36:28,010
user on the firewall so just by visiting

818
00:36:25,580 --> 00:36:29,450
that page you know that cross-site

819
00:36:28,010 --> 00:36:30,830
request forgery kicks in it uses my

820
00:36:29,450 --> 00:36:33,680
cache credentials to create an

821
00:36:30,830 --> 00:36:35,540
administrative user on the<font color="#E5E5E5"> firewall this</font>

822
00:36:33,680 --> 00:36:37,790
was<font color="#E5E5E5"> with no interaction on the clients</font>

823
00:36:35,540 --> 00:36:40,220
part is<font color="#CCCCCC"> just so I</font><font color="#E5E5E5"> just refreshed the job</font>

824
00:36:37,790 --> 00:36:41,900
<font color="#CCCCCC">at the browser any children physics</font>

825
00:36:40,220 --> 00:36:43,520
created it was hard to miss but when he

826
00:36:41,900 --> 00:36:46,700
just refresh that page it launched the

827
00:36:43,520 --> 00:36:49,730
<font color="#CCCCCC">CSRF add a new user to that firewall the</font>

828
00:36:46,700 --> 00:36:51,290
CSS FCSS history trick would be<font color="#E5E5E5"> what you</font>

829
00:36:49,730 --> 00:36:54,140
use to actually target an administrator

830
00:36:51,290 --> 00:36:56,330
within the enterprise because as I

831
00:36:54,140 --> 00:36:59,000
outsider you may not know the URL and

832
00:36:56,330 --> 00:36:59,990
the IP address of that Cisco a<font color="#CCCCCC"> ese so we</font>

833
00:36:59,000 --> 00:37:01,670
basically iterated through all

834
00:36:59,990 --> 00:37:03,348
possibilities and discovered the

835
00:37:01,670 --> 00:37:07,190
location of<font color="#E5E5E5"> the a-si within his browser</font>

836
00:37:03,349 --> 00:37:12,440
history yeah thanks Ben so that's

837
00:37:07,190 --> 00:37:14,900
basically the the<font color="#CCCCCC"> CSRF demo I'm going to</font>

838
00:37:12,440 --> 00:37:17,230
try that TLS<font color="#E5E5E5"> reenacting it's going to be</font>

839
00:37:14,900 --> 00:37:18,760
hard with helping able to see

840
00:37:17,230 --> 00:37:20,800
maybe we<font color="#E5E5E5"> should just come</font><font color="#CCCCCC"> back to that</font>

841
00:37:18,760 --> 00:37:23,590
if we're yeah if we're not running out

842
00:37:20,800 --> 00:37:25,090
of time yeah we got ya the assault

843
00:37:23,590 --> 00:37:26,710
renegotiation I've had a<font color="#E5E5E5"> little bit of</font>

844
00:37:25,090 --> 00:37:28,180
issue with it on the BM and given<font color="#CCCCCC"> that i</font>

845
00:37:26,710 --> 00:37:31,180
may be<font color="#CCCCCC"> looking over</font><font color="#E5E5E5"> my shoulder typing</font>

846
00:37:28,180 --> 00:37:33,279
I'm not<font color="#E5E5E5"> sure it's worth attempting so</font>

847
00:37:31,180 --> 00:37:35,470
I'm<font color="#E5E5E5"> going to let let</font><font color="#CCCCCC"> yeah we got time</font>

848
00:37:33,280 --> 00:37:37,090
<font color="#CCCCCC">was</font><font color="#E5E5E5"> right yeah yeah I'm gonna let Dan</font>

849
00:37:35,470 --> 00:37:38,618
continue on with with his portion<font color="#CCCCCC"> of</font>

850
00:37:37,090 --> 00:37:40,480
<font color="#CCCCCC">talking and if there's time remaining at</font>

851
00:37:38,619 --> 00:38:01,090
the end of Allah will come back and demo

852
00:37:40,480 --> 00:38:02,830
that I'm sorry what was that this one I

853
00:38:01,090 --> 00:38:06,790
think<font color="#CCCCCC"> I've got it on a doe for right now</font>

854
00:38:02,830 --> 00:38:09,369
can you do a<font color="#CCCCCC"> Shover on there</font><font color="#E5E5E5"> baby are</font>

855
00:38:06,790 --> 00:38:13,480
you trying to switch over yeah I think

856
00:38:09,369 --> 00:38:17,680
<font color="#E5E5E5">I've</font><font color="#CCCCCC"> got it on</font><font color="#E5E5E5"> 804 just because you know</font>

857
00:38:13,480 --> 00:38:19,930
some of the later versions fix the the

858
00:38:17,680 --> 00:38:24,190
ACL bypass that I was that I was working

859
00:38:19,930 --> 00:38:26,169
<font color="#CCCCCC">on as well but essentially I haven't</font>

860
00:38:24,190 --> 00:38:28,150
<font color="#E5E5E5">looked at 83 yet so I can't say for sure</font>

861
00:38:26,170 --> 00:38:31,869
how a<font color="#CCCCCC"> 3 does it does it's a</font>

862
00:38:28,150 --> 00:38:35,770
authorization but every<font color="#E5E5E5"> other version of</font>

863
00:38:31,869 --> 00:38:38,290
ASTM<font color="#CCCCCC"> a sa</font><font color="#E5E5E5"> that I've looked at has the</font>

864
00:38:35,770 --> 00:38:41,080
basic auth issue and<font color="#E5E5E5"> that's really what</font>

865
00:38:38,290 --> 00:38:43,600
makes this possible so I you know I

866
00:38:41,080 --> 00:38:46,240
<font color="#E5E5E5">believe this is this is present on every</font>

867
00:38:43,600 --> 00:38:47,650
currently shipping version but again you

868
00:38:46,240 --> 00:38:51,040
know I haven't<font color="#E5E5E5"> actually confirmed that</font>

869
00:38:47,650 --> 00:38:59,410
on 83 so you know there's caveat there

870
00:38:51,040 --> 00:39:01,240
good yeah yeah so the question was do

871
00:38:59,410 --> 00:39:04,060
the session tokens ever expire there

872
00:39:01,240 --> 00:39:06,040
really is no<font color="#E5E5E5"> session token you know all</font>

873
00:39:04,060 --> 00:39:08,500
there is is this is this basic auth and

874
00:39:06,040 --> 00:39:10,930
that's<font color="#E5E5E5"> just handled by the browser so as</font>

875
00:39:08,500 --> 00:39:12,850
long as<font color="#E5E5E5"> you keep your browser you know</font>

876
00:39:10,930 --> 00:39:15,040
your browser<font color="#E5E5E5"> process running that's</font>

877
00:39:12,850 --> 00:39:17,560
going to remain you know remain cached

878
00:39:15,040 --> 00:39:19,210
so the only way to clear that is to is

879
00:39:17,560 --> 00:39:21,790
to close your browser kill the process

880
00:39:19,210 --> 00:39:22,930
and restarted when I did this user up

881
00:39:21,790 --> 00:39:24,400
attack here I was actually using

882
00:39:22,930 --> 00:39:26,319
credentials that I entered this morning

883
00:39:24,400 --> 00:39:29,260
you know a few hours<font color="#CCCCCC"> before this talk</font>

884
00:39:26,320 --> 00:39:30,280
and they're still valid so there's no

885
00:39:29,260 --> 00:39:34,630
<font color="#E5E5E5">timeout</font>

886
00:39:30,280 --> 00:39:35,740
go ahead you're learning for a jump<font color="#CCCCCC"> and</font>

887
00:39:34,630 --> 00:39:38,590
<font color="#CCCCCC">I</font><font color="#E5E5E5"> Jordan take a moment to introduce</font>

888
00:39:35,740 --> 00:39:40,240
<font color="#E5E5E5">myself my name is Dan King I'm a</font>

889
00:39:38,590 --> 00:39:43,810
security<font color="#CCCCCC"> engineer with secure works in</font>

890
00:39:40,240 --> 00:39:46,899
that role I conduct<font color="#E5E5E5"> network and web</font>

891
00:39:43,810 --> 00:39:49,810
penetration tests and do pci auditing

892
00:39:46,900 --> 00:39:54,700
for large retail chains and financial

893
00:39:49,810 --> 00:39:56,529
organizations<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to quickly go over</font>

894
00:39:54,700 --> 00:39:58,600
the material that I want<font color="#CCCCCC"> to talk about</font>

895
00:39:56,530 --> 00:40:00,310
<font color="#E5E5E5">today the very first thing</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to</font>

896
00:39:58,600 --> 00:40:02,710
talk<font color="#CCCCCC"> about these in the implicit trust</font>

897
00:40:00,310 --> 00:40:05,440
that we place in our vendors and their

898
00:40:02,710 --> 00:40:07,630
products I'm going<font color="#E5E5E5"> to follow that up</font>

899
00:40:05,440 --> 00:40:09,430
with<font color="#E5E5E5"> speaking a little</font><font color="#CCCCCC"> bit about</font><font color="#E5E5E5"> Mac of</font>

900
00:40:07,630 --> 00:40:12,100
his network security manager some of its

901
00:40:09,430 --> 00:40:15,520
features and I'm going<font color="#E5E5E5"> to segue into</font>

902
00:40:12,100 --> 00:40:17,440
using cross-site scripting to completely

903
00:40:15,520 --> 00:40:20,890
exploit their network security manager

904
00:40:17,440 --> 00:40:22,900
come back right after that I want<font color="#E5E5E5"> to</font>

905
00:40:20,890 --> 00:40:24,879
start<font color="#E5E5E5"> talking a little bit about the</font>

906
00:40:22,900 --> 00:40:27,250
cisco a<font color="#CCCCCC"> SI i'm not going</font><font color="#E5E5E5"> to beat it too</font>

907
00:40:24,880 --> 00:40:30,280
much is just<font color="#E5E5E5"> pretty much filled you in</font>

908
00:40:27,250 --> 00:40:32,650
on all the details of that and i want to

909
00:40:30,280 --> 00:40:36,490
<font color="#E5E5E5">show</font><font color="#CCCCCC"> how using HTTP response splitting</font>

910
00:40:32,650 --> 00:40:39,610
against<font color="#CCCCCC"> Cisco ASAS a web client lyst</font>

911
00:40:36,490 --> 00:40:41,859
webvpn you can steal their user

912
00:40:39,610 --> 00:40:43,660
credentials and I want<font color="#E5E5E5"> to follow</font><font color="#CCCCCC"> that up</font>

913
00:40:41,860 --> 00:40:47,830
with some ideas on how we can kind<font color="#CCCCCC"> of do</font>

914
00:40:43,660 --> 00:40:50,620
things<font color="#E5E5E5"> a little bit better when we buy</font>

915
00:40:47,830 --> 00:40:52,509
products that are designed to help us

916
00:40:50,620 --> 00:40:54,520
secure our networks we naturally assume

917
00:40:52,510 --> 00:40:56,530
that they're secure right I mean they

918
00:40:54,520 --> 00:40:59,410
are superior products well oftentimes

919
00:40:56,530 --> 00:41:01,840
isn't the case they're subject to the

920
00:40:59,410 --> 00:41:04,930
same issues and pitfalls is all software

921
00:41:01,840 --> 00:41:07,240
their rigorous software life cycles they

922
00:41:04,930 --> 00:41:09,910
have pressure from the<font color="#CCCCCC"> business to</font><font color="#E5E5E5"> get</font>

923
00:41:07,240 --> 00:41:13,270
to market and they have demand for new

924
00:41:09,910 --> 00:41:15,670
features constantly this<font color="#E5E5E5"> is just a few</font>

925
00:41:13,270 --> 00:41:19,690
<font color="#CCCCCC">of the many reasons why making secures</font>

926
00:41:15,670 --> 00:41:22,720
offers hard ring when<font color="#CCCCCC"> we talk about new</font>

927
00:41:19,690 --> 00:41:24,400
services I<font color="#CCCCCC"> new new features we also have</font>

928
00:41:22,720 --> 00:41:27,430
<font color="#CCCCCC">to</font><font color="#E5E5E5"> remember that's that's new threats</font>

929
00:41:24,400 --> 00:41:29,770
for the more complexity a single<font color="#E5E5E5"> device</font>

930
00:41:27,430 --> 00:41:32,740
has the threat service just gets larger

931
00:41:29,770 --> 00:41:35,560
and larger for example firewalls and<font color="#CCCCCC"> a</font>

932
00:41:32,740 --> 00:41:37,000
deep packet inspection we need to make

933
00:41:35,560 --> 00:41:42,130
<font color="#CCCCCC">sure that they're not vulnerable to</font>

934
00:41:37,000 --> 00:41:43,569
malformed packets these devices that

935
00:41:42,130 --> 00:41:45,969
we're trusting completa

936
00:41:43,569 --> 00:41:47,979
implicitly are within<font color="#CCCCCC"> various sensitive</font>

937
00:41:45,969 --> 00:41:50,589
areas in<font color="#E5E5E5"> our network they're the</font>

938
00:41:47,979 --> 00:41:52,419
gatekeepers and watchdogs of our servers

939
00:41:50,589 --> 00:41:54,279
and data we<font color="#CCCCCC"> need to rely on these</font>

940
00:41:52,420 --> 00:42:01,420
devices<font color="#E5E5E5"> and we need to really need to</font>

941
00:41:54,279 --> 00:42:04,420
<font color="#E5E5E5">trust them McAfee has a few products</font>

942
00:42:01,420 --> 00:42:07,119
that<font color="#CCCCCC"> are too kind of help us you know</font>

943
00:42:04,420 --> 00:42:10,869
secure our networks their ips systems

944
00:42:07,119 --> 00:42:12,670
<font color="#E5E5E5">knack systems</font><font color="#CCCCCC"> hid's systems a little</font>

945
00:42:10,869 --> 00:42:18,609
<font color="#CCCCCC">large problems with</font><font color="#E5E5E5"> these types of</font>

946
00:42:12,670 --> 00:42:20,349
<font color="#CCCCCC">systems is</font><font color="#E5E5E5"> management that's why Mac if</font>

947
00:42:18,609 --> 00:42:22,839
<font color="#E5E5E5">you created their network security</font>

948
00:42:20,349 --> 00:42:25,299
manager<font color="#E5E5E5"> basically what it does is allows</font>

949
00:42:22,839 --> 00:42:28,359
you to remote control all of their ips

950
00:42:25,299 --> 00:42:30,339
system snacks and and<font color="#E5E5E5"> whatnot and also</font>

951
00:42:28,359 --> 00:42:32,529
collect all the data so that way an

952
00:42:30,339 --> 00:42:35,259
analyst can make sound decisions or

953
00:42:32,529 --> 00:42:38,829
start an investigation of possible

954
00:42:35,259 --> 00:42:41,619
breach the system runs on windows 2003

955
00:42:38,829 --> 00:42:43,390
and it has a very nice web GUI and<font color="#E5E5E5"> Java</font>

956
00:42:41,619 --> 00:42:47,650
component so it makes<font color="#E5E5E5"> it really really</font>

957
00:42:43,390 --> 00:42:49,989
simple for administration we that skirt

958
00:42:47,650 --> 00:42:52,449
works use this exact tool to manage

959
00:42:49,989 --> 00:42:53,529
sensors and our client networks so I

960
00:42:52,449 --> 00:42:55,509
thought it would<font color="#E5E5E5"> be a really good idea</font>

961
00:42:53,529 --> 00:42:57,819
that you know maybe we<font color="#CCCCCC"> should test this</font>

962
00:42:55,509 --> 00:43:00,069
and make sure<font color="#E5E5E5"> it is what it's supposed</font>

963
00:42:57,819 --> 00:43:03,339
to be doing<font color="#E5E5E5"> and it didn't take long and</font>

964
00:43:00,069 --> 00:43:07,989
I found<font color="#E5E5E5"> out that the login page was</font>

965
00:43:03,339 --> 00:43:09,369
horrible to cross-site scripting if I

966
00:43:07,989 --> 00:43:11,440
had to say what web vulnerability

967
00:43:09,369 --> 00:43:13,839
exploited trust the most<font color="#E5E5E5"> out of office a</font>

968
00:43:11,440 --> 00:43:16,420
cross-site scripting it's an injection

969
00:43:13,839 --> 00:43:18,940
style attack that allows you to inject

970
00:43:16,420 --> 00:43:21,640
code generally JavaScript into trusted

971
00:43:18,940 --> 00:43:25,180
websites and then the power here really

972
00:43:21,640 --> 00:43:27,819
is when when<font color="#E5E5E5"> when the user navigates to</font>

973
00:43:25,180 --> 00:43:29,589
your website or whatever they trust that

974
00:43:27,819 --> 00:43:31,269
that content is really coming<font color="#E5E5E5"> from you</font>

975
00:43:29,589 --> 00:43:33,940
and by leveraging cross-site scripting

976
00:43:31,269 --> 00:43:36,098
you take advantage<font color="#CCCCCC"> of that trust and you</font>

977
00:43:33,940 --> 00:43:38,949
can make<font color="#CCCCCC"> that client do almost anything</font>

978
00:43:36,099 --> 00:43:41,380
you<font color="#E5E5E5"> want keep grabbing the keystrokes</font>

979
00:43:38,949 --> 00:43:45,339
their cookies session token' they have

980
00:43:41,380 --> 00:43:46,779
no idea<font color="#CCCCCC"> is happening and the network</font>

981
00:43:45,339 --> 00:43:49,930
security manager is vulnerable to<font color="#CCCCCC"> this</font>

982
00:43:46,779 --> 00:43:53,709
as I<font color="#E5E5E5"> stated the login form has two</font>

983
00:43:49,930 --> 00:43:56,020
hidden form objects that are not

984
00:43:53,709 --> 00:43:58,839
evaluated at all for their content

985
00:43:56,020 --> 00:44:04,480
so let's take<font color="#E5E5E5"> a look on how</font><font color="#CCCCCC"> I leverage</font>

986
00:43:58,840 --> 00:44:06,310
this to take take over admin session the

987
00:44:04,480 --> 00:44:07,780
since I knew the page was already

988
00:44:06,310 --> 00:44:09,759
vulnerable to cross the scripting I just

989
00:44:07,780 --> 00:44:11,950
needed to figure out you know<font color="#E5E5E5"> how to how</font>

990
00:44:09,760 --> 00:44:14,350
to get<font color="#E5E5E5"> access so the logical step would</font>

991
00:44:11,950 --> 00:44:17,439
be to fish the administrators they're

992
00:44:14,350 --> 00:44:20,770
<font color="#E5E5E5">pretty gullible I just need</font><font color="#CCCCCC"> to decide</font><font color="#E5E5E5"> on</font>

993
00:44:17,440 --> 00:44:22,420
<font color="#E5E5E5">what I wanted to execute knowing a</font>

994
00:44:20,770 --> 00:44:24,400
little bit about<font color="#E5E5E5"> JavaScript I knew</font><font color="#CCCCCC"> that</font>

995
00:44:22,420 --> 00:44:29,500
the image object was a great way to

996
00:44:24,400 --> 00:44:31,510
smuggle data out of<font color="#E5E5E5"> out of websites so</font>

997
00:44:29,500 --> 00:44:33,340
<font color="#E5E5E5">now the next step was</font><font color="#CCCCCC"> to determine well</font>

998
00:44:31,510 --> 00:44:36,460
can I get to the keys to the kingdom is

999
00:44:33,340 --> 00:44:39,280
that session data available to me and I

1000
00:44:36,460 --> 00:44:42,160
noticed<font color="#CCCCCC"> that the web server component</font>

1001
00:44:39,280 --> 00:44:44,470
does not set the HTTP only flag on their

1002
00:44:42,160 --> 00:44:47,500
session<font color="#E5E5E5"> cookie which allowed JavaScript</font>

1003
00:44:44,470 --> 00:44:49,390
total access<font color="#CCCCCC"> to this cookie value so now</font>

1004
00:44:47,500 --> 00:44:50,920
I now i know i can<font color="#E5E5E5"> get data out of it</font>

1005
00:44:49,390 --> 00:44:53,440
now<font color="#CCCCCC"> i know i can</font><font color="#E5E5E5"> access</font><font color="#CCCCCC"> all the data i</font>

1006
00:44:50,920 --> 00:44:56,890
need so now the next<font color="#E5E5E5"> step was</font><font color="#CCCCCC"> to just</font>

1007
00:44:53,440 --> 00:45:00,790
actually create the URL and<font color="#CCCCCC"> i decided to</font>

1008
00:44:56,890 --> 00:45:04,480
<font color="#CCCCCC">use the JavaScript encode URI and that</font>

1009
00:45:00,790 --> 00:45:06,400
will allow me to uri encode all the data

1010
00:45:04,480 --> 00:45:08,740
so that way i have no parsing issues it

1011
00:45:06,400 --> 00:45:11,860
just it just comes through then<font color="#E5E5E5"> i just</font>

1012
00:45:08,740 --> 00:45:13,720
<font color="#E5E5E5">created the object so now all</font><font color="#CCCCCC"> i do is</font>

1013
00:45:11,860 --> 00:45:15,460
wait and<font color="#E5E5E5"> that's the beauty of it you</font>

1014
00:45:13,720 --> 00:45:16,689
<font color="#CCCCCC">know you launch an attack you make it</font>

1015
00:45:15,460 --> 00:45:19,480
<font color="#E5E5E5">look as good as you can</font><font color="#CCCCCC"> you just sit</font>

1016
00:45:16,690 --> 00:45:22,090
back and<font color="#CCCCCC"> wait and</font><font color="#E5E5E5"> watch your HTTP logs</font>

1017
00:45:19,480 --> 00:45:23,860
and you just once they click that link

1018
00:45:22,090 --> 00:45:25,510
you know<font color="#E5E5E5"> you'll you'll see a log in your</font>

1019
00:45:23,860 --> 00:45:28,900
web server logs with the session

1020
00:45:25,510 --> 00:45:31,660
identification then I take<font color="#CCCCCC"> that session</font>

1021
00:45:28,900 --> 00:45:35,590
<font color="#CCCCCC">token put it into the burp suite connect</font>

1022
00:45:31,660 --> 00:45:40,720
to<font color="#E5E5E5"> their their the web interface and</font>

1023
00:45:35,590 --> 00:45:43,030
bypass<font color="#E5E5E5"> the login I put together a quick</font>

1024
00:45:40,720 --> 00:45:47,259
and video outlining this entire process

1025
00:45:43,030 --> 00:45:52,770
you<font color="#CCCCCC"> should give</font><font color="#E5E5E5"> me one second escape</font>

1026
00:45:47,260 --> 00:45:55,530
just minimize it

1027
00:45:52,770 --> 00:45:59,720
it's on the desktop<font color="#E5E5E5"> you just drag the</font>

1028
00:45:55,530 --> 00:45:59,720
window to the left asking the right pane

1029
00:46:11,060 --> 00:46:21,920
or the cursor girl

1030
00:46:13,380 --> 00:46:21,920
yeah I have no mouth

1031
00:46:39,030 --> 00:46:50,010
quit it<font color="#CCCCCC"> do you still need that now you</font>

1032
00:46:41,880 --> 00:46:52,820
can kill the vm oh I think<font color="#E5E5E5"> I think we</font>

1033
00:46:50,010 --> 00:46:52,820
done took your<font color="#E5E5E5"> mouse</font>

1034
00:47:02,420 --> 00:47:05,530
beyond<font color="#E5E5E5"> captured</font>

1035
00:47:17,040 --> 00:47:24,330
you'll see that<font color="#CCCCCC"> okay there the admin</font>

1036
00:47:22,740 --> 00:47:30,120
user<font color="#E5E5E5"> just logging in real quick and</font>

1037
00:47:24,330 --> 00:47:37,740
there's the job interface narrates it so

1038
00:47:30,120 --> 00:47:39,810
is the phishing attack that's all admin

1039
00:47:37,740 --> 00:47:44,790
all admins fall<font color="#E5E5E5"> fridge free donors</font>

1040
00:47:39,810 --> 00:47:48,080
<font color="#CCCCCC">Brothers tickets swear so it's strange</font>

1041
00:47:44,790 --> 00:47:48,080
it clicks the link nothing happens

1042
00:48:05,329 --> 00:48:08,930
in ephraim lowered burp this is a fire

1043
00:48:07,339 --> 00:48:10,279
and<font color="#CCCCCC"> replaced method on any cookie value</font>

1044
00:48:08,930 --> 00:48:15,950
i'm just going to force it to that

1045
00:48:10,279 --> 00:48:18,219
session Eddie now I now get to<font color="#E5E5E5"> the main</font>

1046
00:48:15,950 --> 00:48:18,218
<font color="#CCCCCC">page</font>

1047
00:48:25,530 --> 00:48:33,890
mmm yeah logged in with no credentials

1048
00:48:37,280 --> 00:48:43,610
I guess<font color="#E5E5E5"> it's quick and easy dirty what</font>

1049
00:48:41,090 --> 00:48:47,240
it works so what we just saw is he used

1050
00:48:43,610 --> 00:48:48,890
the<font color="#CCCCCC"> xss to basically capture the session</font>

1051
00:48:47,240 --> 00:48:50,270
credentials from the administrator<font color="#E5E5E5"> that</font>

1052
00:48:48,890 --> 00:48:51,920
were cashed and now leverage those

1053
00:48:50,270 --> 00:48:55,580
credentials to get an administrative

1054
00:48:51,920 --> 00:49:00,350
session to the mcafee and STM console

1055
00:48:55,580 --> 00:49:11,480
correct the question was that were

1056
00:49:00,350 --> 00:49:14,660
reflected<font color="#CCCCCC"> XSS and yes all right moving</font>

1057
00:49:11,480 --> 00:49:16,670
on I just want<font color="#CCCCCC"> to start</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font>

1058
00:49:14,660 --> 00:49:20,210
Cisco's adaptive security appliance now

1059
00:49:16,670 --> 00:49:22,520
before<font color="#CCCCCC"> I said when you start</font><font color="#E5E5E5"> putting a</font>

1060
00:49:20,210 --> 00:49:24,890
whole lot<font color="#CCCCCC"> of features into one single</font>

1061
00:49:22,520 --> 00:49:27,140
appliance it start to open the threat

1062
00:49:24,890 --> 00:49:29,390
surface up and I won't beat this to

1063
00:49:27,140 --> 00:49:31,040
death because Jeff I think<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> gave</font>

1064
00:49:29,390 --> 00:49:33,020
a really<font color="#CCCCCC"> good explanation on what these</font>

1065
00:49:31,040 --> 00:49:35,029
systems can do<font color="#E5E5E5"> I just want</font><font color="#CCCCCC"> to point out</font>

1066
00:49:33,020 --> 00:49:37,670
<font color="#CCCCCC">that it has a really nice web interface</font>

1067
00:49:35,030 --> 00:49:43,550
or climas VPN will touch back with that

1068
00:49:37,670 --> 00:49:46,010
in two seconds during a recent<font color="#CCCCCC"> PCI audit</font>

1069
00:49:43,550 --> 00:49:49,550
I'm I ran<font color="#E5E5E5"> into a client wanting one of</font>

1070
00:49:46,010 --> 00:49:50,870
these and I wasn't too familiar with<font color="#E5E5E5"> the</font>

1071
00:49:49,550 --> 00:49:53,630
web interface so I started really

1072
00:49:50,870 --> 00:49:56,240
banging on it and I discovered<font color="#CCCCCC"> that it</font>

1073
00:49:53,630 --> 00:49:59,960
was horrible to HTTP response splitting

1074
00:49:56,240 --> 00:50:03,740
you don't find it too<font color="#E5E5E5"> often these days</font>

1075
00:49:59,960 --> 00:50:06,140
most most web servers kind of validate

1076
00:50:03,740 --> 00:50:09,169
this correctly the basic gist of it is

1077
00:50:06,140 --> 00:50:10,910
when you submit an HTTP request you can

1078
00:50:09,170 --> 00:50:14,240
inject a character turn in line feed

1079
00:50:10,910 --> 00:50:16,759
character into the URL sometimes that

1080
00:50:14,240 --> 00:50:18,950
<font color="#E5E5E5">web server will pars that and treat</font>

1081
00:50:16,760 --> 00:50:21,530
those character on line feeds just as

1082
00:50:18,950 --> 00:50:25,310
they are<font color="#E5E5E5"> and anything following them in</font>

1083
00:50:21,530 --> 00:50:26,930
the URL will then be injected<font color="#E5E5E5"> into HTTP</font>

1084
00:50:25,310 --> 00:50:28,790
headers that was going back<font color="#CCCCCC"> to the</font>

1085
00:50:26,930 --> 00:50:31,220
client well this could be a very bad

1086
00:50:28,790 --> 00:50:33,920
thing we don't<font color="#CCCCCC"> necessarily want this to</font>

1087
00:50:31,220 --> 00:50:35,990
occur let's go<font color="#CCCCCC"> now an attacker didn't</font>

1088
00:50:33,920 --> 00:50:43,010
you know inject any arbitrary<font color="#CCCCCC"> hair they</font>

1089
00:50:35,990 --> 00:50:46,879
want when when we're using HTTP response

1090
00:50:43,010 --> 00:50:51,050
splitting there's one header that is

1091
00:50:46,880 --> 00:50:52,220
that is more useful than

1092
00:50:51,050 --> 00:50:57,140
any of the other<font color="#CCCCCC"> ones that's the</font>

1093
00:50:52,220 --> 00:51:00,230
location header if the HTTP server is

1094
00:50:57,140 --> 00:51:02,930
already feeding a redirect back to the

1095
00:51:00,230 --> 00:51:06,080
<font color="#CCCCCC">client you</font><font color="#E5E5E5"> can change the location field</font>

1096
00:51:02,930 --> 00:51:08,060
the way this<font color="#E5E5E5"> works is a lot of times</font>

1097
00:51:06,080 --> 00:51:10,640
you'll<font color="#CCCCCC"> have a web server where you go to</font>

1098
00:51:08,060 --> 00:51:13,009
authenticate adage without using SSL<font color="#E5E5E5"> and</font>

1099
00:51:10,640 --> 00:51:15,500
it forces you to the ssl version of that

1100
00:51:13,010 --> 00:51:17,300
<font color="#E5E5E5">site well that they're using a redirect</font>

1101
00:51:15,500 --> 00:51:19,910
their or 301 you redirect or 302

1102
00:51:17,300 --> 00:51:21,470
redirect so it's<font color="#E5E5E5"> very common but if the</font>

1103
00:51:19,910 --> 00:51:24,620
web server is vulnerable to HTTP

1104
00:51:21,470 --> 00:51:26,390
response splitting<font color="#CCCCCC"> you'd be trivial to</font>

1105
00:51:24,620 --> 00:51:32,120
change the location where that clients

1106
00:51:26,390 --> 00:51:35,629
being redirected to the cisco a<font color="#CCCCCC"> sa is</font>

1107
00:51:32,120 --> 00:51:41,569
vulnerable<font color="#CCCCCC"> to this or was vulnerable as</font>

1108
00:51:35,630 --> 00:51:46,580
i should<font color="#E5E5E5"> say when a user connects to the</font>

1109
00:51:41,570 --> 00:51:47,630
web VPN component to log in the first

1110
00:51:46,580 --> 00:51:49,040
thing<font color="#CCCCCC"> that happens if</font><font color="#E5E5E5"> they're not</font>

1111
00:51:47,630 --> 00:51:52,040
already using us it sells their

1112
00:51:49,040 --> 00:51:53,480
redirected to the secure page an

1113
00:51:52,040 --> 00:51:56,240
attacker could very easily use a

1114
00:51:53,480 --> 00:51:58,130
phishing attack send out hey<font color="#E5E5E5"> you know on</font>

1115
00:51:56,240 --> 00:52:00,379
<font color="#E5E5E5">the IT this is the new link you need to</font>

1116
00:51:58,130 --> 00:52:03,980
go here instead you know users just

1117
00:52:00,380 --> 00:52:06,200
follow<font color="#E5E5E5"> that link and now the web server</font>

1118
00:52:03,980 --> 00:52:09,440
component of the a-si will parse that

1119
00:52:06,200 --> 00:52:11,779
link act on the character<font color="#E5E5E5"> term line feed</font>

1120
00:52:09,440 --> 00:52:15,110
and inject the new location here the

1121
00:52:11,780 --> 00:52:17,030
attacker is injected<font color="#CCCCCC"> into their URL so</font>

1122
00:52:15,110 --> 00:52:18,950
now now the attacker has complete

1123
00:52:17,030 --> 00:52:25,100
control over where your browser is going

1124
00:52:18,950 --> 00:52:27,649
so in the case that<font color="#CCCCCC"> I i was doing i</font>

1125
00:52:25,100 --> 00:52:29,690
<font color="#CCCCCC">create</font><font color="#E5E5E5"> an identical website to look like</font>

1126
00:52:27,650 --> 00:52:31,910
just<font color="#E5E5E5"> like the login page of this</font>

1127
00:52:29,690 --> 00:52:33,230
particular<font color="#E5E5E5"> client so when you follow the</font>

1128
00:52:31,910 --> 00:52:34,520
link it happened so<font color="#CCCCCC"> fast you don't even</font>

1129
00:52:33,230 --> 00:52:39,500
realize<font color="#CCCCCC"> that you're</font><font color="#E5E5E5"> not where you're</font>

1130
00:52:34,520 --> 00:52:41,720
supposed to<font color="#E5E5E5"> be so at this point</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> had my</font>

1131
00:52:39,500 --> 00:52:43,160
own custom<font color="#E5E5E5"> JavaScript on the page so I</font>

1132
00:52:41,720 --> 00:52:45,950
could harvest their login credentials

1133
00:52:43,160 --> 00:52:48,500
and then redirect them and send their

1134
00:52:45,950 --> 00:52:50,330
post<font color="#CCCCCC"> request back to the original a sa</font>

1135
00:52:48,500 --> 00:52:52,190
so they will authenticate and not have

1136
00:52:50,330 --> 00:52:55,549
any idea what<font color="#E5E5E5"> was occurring but now I</font>

1137
00:52:52,190 --> 00:53:00,500
<font color="#E5E5E5">can authenticate as them</font><font color="#CCCCCC"> too not a great</font>

1138
00:52:55,550 --> 00:53:03,320
<font color="#CCCCCC">idea all right so in this slide here we</font>

1139
00:53:00,500 --> 00:53:05,030
can see an evil get requests and

1140
00:53:03,320 --> 00:53:08,120
the first two characters that are in hex

1141
00:53:05,030 --> 00:53:10,070
<font color="#CCCCCC">they're the character</font><font color="#E5E5E5"> online feed follow</font>

1142
00:53:08,120 --> 00:53:11,630
that is the new location header and this

1143
00:53:10,070 --> 00:53:16,850
one's not so we locals it so I'm going

1144
00:53:11,630 --> 00:53:19,730
<font color="#E5E5E5">to shut them to google the slide here</font>

1145
00:53:16,850 --> 00:53:22,880
<font color="#CCCCCC">shows the</font><font color="#E5E5E5"> two location headers and this</font>

1146
00:53:19,730 --> 00:53:26,060
is important because it's<font color="#E5E5E5"> kind of</font>

1147
00:53:22,880 --> 00:53:28,550
confusing which one's going<font color="#E5E5E5"> to work well</font>

1148
00:53:26,060 --> 00:53:30,049
at any time this occurs the location

1149
00:53:28,550 --> 00:53:32,960
<font color="#E5E5E5">there can only ever be one location</font>

1150
00:53:30,050 --> 00:53:34,970
header so the last<font color="#E5E5E5"> one is always going</font>

1151
00:53:32,960 --> 00:53:36,770
to<font color="#E5E5E5"> win which is fortunate for us because</font>

1152
00:53:34,970 --> 00:53:41,359
when we inject it will always<font color="#E5E5E5"> be the</font>

1153
00:53:36,770 --> 00:53:44,509
last one so you can see the down the

1154
00:53:41,360 --> 00:53:47,060
body there the location header<font color="#E5E5E5"> hope is</font>

1155
00:53:44,510 --> 00:53:52,610
moving to<font color="#CCCCCC"> Google instead of instead of</font>

1156
00:53:47,060 --> 00:53:56,930
where they expect it to so in<font color="#CCCCCC"> conclusion</font>

1157
00:53:52,610 --> 00:53:59,330
creating complex system is hard there's

1158
00:53:56,930 --> 00:54:03,020
lots of hurdles to get software to

1159
00:53:59,330 --> 00:54:05,450
actually function let alone be secure so

1160
00:54:03,020 --> 00:54:06,950
what do we do I mean when we deploy this

1161
00:54:05,450 --> 00:54:11,689
edge assistance we have to test<font color="#E5E5E5"> them</font>

1162
00:54:06,950 --> 00:54:13,279
it's far far far too often these

1163
00:54:11,690 --> 00:54:15,230
security devices are deployed within

1164
00:54:13,280 --> 00:54:19,010
networks and just never<font color="#E5E5E5"> even looked at a</font>

1165
00:54:15,230 --> 00:54:20,540
second time the next time you know

1166
00:54:19,010 --> 00:54:23,240
you're going<font color="#E5E5E5"> to be purchasing a device</font>

1167
00:54:20,540 --> 00:54:24,980
like this ask a vendor for a demo you

1168
00:54:23,240 --> 00:54:26,299
know a lot<font color="#CCCCCC"> of times they'll give you 60</font>

1169
00:54:24,980 --> 00:54:28,820
days<font color="#E5E5E5"> to make sure it works within your</font>

1170
00:54:26,300 --> 00:54:31,550
environments hit it with a vulnerability

1171
00:54:28,820 --> 00:54:33,290
scanner if it's got a web interface get

1172
00:54:31,550 --> 00:54:37,190
it whether what you<font color="#E5E5E5"> know a scanner</font>

1173
00:54:33,290 --> 00:54:39,860
<font color="#E5E5E5">learned of protocols it uses fazem see</font>

1174
00:54:37,190 --> 00:54:42,890
if see if it'll it'll stand up port

1175
00:54:39,860 --> 00:54:44,030
scanning it was a lot of a lot of ports

1176
00:54:42,890 --> 00:54:47,990
and these devices that are open that

1177
00:54:44,030 --> 00:54:49,850
really should they be probably<font color="#E5E5E5"> not so</font><font color="#CCCCCC"> I</font>

1178
00:54:47,990 --> 00:54:52,729
would<font color="#E5E5E5"> highly recommend working with your</font>

1179
00:54:49,850 --> 00:54:55,040
<font color="#E5E5E5">vendors to try to figure out you know a</font>

1180
00:54:52,730 --> 00:54:57,680
better way to do<font color="#CCCCCC"> this and to really make</font>

1181
00:54:55,040 --> 00:54:59,390
a better product I had<font color="#E5E5E5"> a fortunate luck</font>

1182
00:54:57,680 --> 00:55:01,460
of working with McAfee directly I'm

1183
00:54:59,390 --> 00:55:03,080
fixing their their issue and they were

1184
00:55:01,460 --> 00:55:04,910
<font color="#E5E5E5">great to work where they want to know</font>

1185
00:55:03,080 --> 00:55:06,710
more information you wanted me<font color="#E5E5E5"> to help</font>

1186
00:55:04,910 --> 00:55:08,600
validate patch like everything it<font color="#E5E5E5"> was</font>

1187
00:55:06,710 --> 00:55:11,420
fabulous so I can't recommend enough

1188
00:55:08,600 --> 00:55:12,560
work with your<font color="#E5E5E5"> vendors and with that I'm</font>

1189
00:55:11,420 --> 00:55:15,590
going to<font color="#E5E5E5"> turn things back over to been</font>

1190
00:55:12,560 --> 00:55:16,538
great so we a problem probably should

1191
00:55:15,590 --> 00:55:18,489
have been more explicit

1192
00:55:16,539 --> 00:55:20,589
this but the vulnerabilities that were

1193
00:55:18,489 --> 00:55:23,319
<font color="#CCCCCC">presented here were disclosed in a</font>

1194
00:55:20,589 --> 00:55:25,599
coordinated fashion with the vendor they

1195
00:55:23,319 --> 00:55:28,390
are fixed in stable production releases

1196
00:55:25,599 --> 00:55:31,239
of the software the white paper on the

1197
00:55:28,390 --> 00:55:34,660
cd-rom has additional details they have

1198
00:55:31,239 --> 00:55:36,130
<font color="#CCCCCC">CVE numbers and product errata that</font>

1199
00:55:34,660 --> 00:55:38,499
would indicate which versions these

1200
00:55:36,130 --> 00:55:40,869
issues have<font color="#CCCCCC"> been fixed in and also just</font>

1201
00:55:38,499 --> 00:55:43,149
to thank more<font color="#E5E5E5"> Santos and the cisco p</font>

1202
00:55:40,869 --> 00:55:46,479
cert<font color="#CCCCCC"> ryan permai of the mcafee p cert</font>

1203
00:55:43,150 --> 00:55:49,749
for the<font color="#E5E5E5"> coordination that we receive</font>

1204
00:55:46,479 --> 00:55:51,819
from them and we have just a couple

1205
00:55:49,749 --> 00:56:01,928
minutes<font color="#E5E5E5"> for some</font><font color="#CCCCCC"> cue questions and</font>

1206
00:55:51,819 --> 00:56:02,949
answers<font color="#E5E5E5"> bueller bueller that I guess</font>

1207
00:56:01,929 --> 00:56:06,419
we're really good at explaining stuff

1208
00:56:02,949 --> 00:56:06,419
there's<font color="#CCCCCC"> no questions thank</font><font color="#E5E5E5"> you</font>

