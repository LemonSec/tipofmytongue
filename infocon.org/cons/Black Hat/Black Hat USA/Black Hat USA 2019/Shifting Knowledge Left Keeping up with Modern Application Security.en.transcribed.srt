1
00:00:00,030 --> 00:00:03,840
welcome to shifting knowledge lips

2
00:00:01,860 --> 00:00:05,700
keeping up with modern application

3
00:00:03,840 --> 00:00:16,049
security I notice the end of the day so

4
00:00:05,700 --> 00:00:16,410
we're gonna dive right in baby we'll go

5
00:00:16,049 --> 00:00:20,810
on

6
00:00:16,410 --> 00:00:24,859
dive I'm trying I'm clicking harder

7
00:00:20,810 --> 00:00:27,840
we're gonna use the arrow keys all right

8
00:00:24,859 --> 00:00:29,849
so this is mark from do oh don't worry

9
00:00:27,840 --> 00:00:33,030
about it it's fine I'm Fletcher from

10
00:00:29,849 --> 00:00:35,430
Hunter - we've been working together to

11
00:00:33,030 --> 00:00:37,170
engage engineers in app sack and make

12
00:00:35,430 --> 00:00:39,809
the security training experience better

13
00:00:37,170 --> 00:00:41,250
for engineers if you want to know more

14
00:00:39,809 --> 00:00:42,870
about who we are you've probably looked

15
00:00:41,250 --> 00:00:46,469
us up already so we're gonna dive right

16
00:00:42,870 --> 00:00:48,718
into the dock we're gonna start with the

17
00:00:46,469 --> 00:00:51,390
general state of developer security

18
00:00:48,719 --> 00:00:54,660
knowledge as it currently stands the

19
00:00:51,390 --> 00:00:56,789
need to reduce time to education in app

20
00:00:54,660 --> 00:00:59,429
sec and especially why that's important

21
00:00:56,789 --> 00:01:01,469
over the last few years given trends in

22
00:00:59,430 --> 00:01:03,449
the industry mark we'll talk a little

23
00:01:01,469 --> 00:01:05,909
bit about what they're up to a duo in

24
00:01:03,449 --> 00:01:08,429
terms of engaging and enabling engineers

25
00:01:05,909 --> 00:01:10,590
from their security team and then we'll

26
00:01:08,430 --> 00:01:12,560
go into changing course on security

27
00:01:10,590 --> 00:01:15,119
education and ways to grow the community

28
00:01:12,560 --> 00:01:17,729
we'll wrap up with sharing a tool that

29
00:01:15,119 --> 00:01:19,320
we're opening up a platform for some

30
00:01:17,729 --> 00:01:23,850
free training resources that we hope

31
00:01:19,320 --> 00:01:26,490
you'll also be able to give back to so

32
00:01:23,850 --> 00:01:29,158
to start out the state of developers

33
00:01:26,490 --> 00:01:31,169
security knowledge we'll start with the

34
00:01:29,159 --> 00:01:33,630
OS the top ten because it's such an

35
00:01:31,170 --> 00:01:35,549
industry standard when you talk about

36
00:01:33,630 --> 00:01:39,000
app sec it's the first thing people

37
00:01:35,549 --> 00:01:41,280
gravitate toward first published in 2003

38
00:01:39,000 --> 00:01:44,009
it's become a de facto standard

39
00:01:41,280 --> 00:01:47,369
so from wasps themselves the OWASP top

40
00:01:44,009 --> 00:01:49,799
10 is a powerful awareness document for

41
00:01:47,369 --> 00:01:52,290
a web application security represents a

42
00:01:49,799 --> 00:01:55,619
broad consensus about the most critical

43
00:01:52,290 --> 00:01:57,810
security risk to web apps it's

44
00:01:55,619 --> 00:02:02,040
necessarily broad it's intentionally

45
00:01:57,810 --> 00:02:04,619
broad now o wasp as an organization has

46
00:02:02,040 --> 00:02:09,720
grown significantly and they have over

47
00:02:04,619 --> 00:02:11,038
125 different projects such as the

48
00:02:09,720 --> 00:02:12,510
application security verification

49
00:02:11,038 --> 00:02:13,859
standard ASVs

50
00:02:12,510 --> 00:02:15,299
is a really wonder

51
00:02:13,860 --> 00:02:17,760
whole checklist of security controls

52
00:02:15,300 --> 00:02:21,210
that you can use as you're developing an

53
00:02:17,760 --> 00:02:23,429
application unfortunately the OAuth top

54
00:02:21,210 --> 00:02:26,730
10 has been overlap overloading a bunch

55
00:02:23,430 --> 00:02:28,950
of what OS is as an organization and so

56
00:02:26,730 --> 00:02:31,079
we tend to gravitate toward it as our

57
00:02:28,950 --> 00:02:34,709
catch-all for for all of these topics

58
00:02:31,080 --> 00:02:37,500
and all of these needs now it's true we

59
00:02:34,710 --> 00:02:39,660
can start with the OS top 10 as a good

60
00:02:37,500 --> 00:02:42,180
starting point and we should do more

61
00:02:39,660 --> 00:02:45,000
overall awareness you know build some

62
00:02:42,180 --> 00:02:47,250
awareness among engineers of that list

63
00:02:45,000 --> 00:02:50,790
nearly one in five developers aren't

64
00:02:47,250 --> 00:02:52,560
familiar at all with it however this is

65
00:02:50,790 --> 00:02:55,440
much more than a talk about just the top

66
00:02:52,560 --> 00:02:57,870
10 because it's not all of these things

67
00:02:55,440 --> 00:02:59,579
necessarily it's it's not up to date it

68
00:02:57,870 --> 00:03:02,400
takes multiple years to come out with

69
00:02:59,580 --> 00:03:05,970
the next version it's not even language

70
00:03:02,400 --> 00:03:07,709
or framework specific so as a SI

71
00:03:05,970 --> 00:03:10,709
developer as opposed to someone

72
00:03:07,709 --> 00:03:12,780
developing a node.js web app I probably

73
00:03:10,709 --> 00:03:14,310
have very different security concerns I

74
00:03:12,780 --> 00:03:16,250
probably have a different threat model

75
00:03:14,310 --> 00:03:18,959
depending on the business on the product

76
00:03:16,250 --> 00:03:23,040
none of that is necessarily covered in a

77
00:03:18,959 --> 00:03:25,890
very broad set of top 10 it's also not a

78
00:03:23,040 --> 00:03:28,410
checklist for for code scanning for pen

79
00:03:25,890 --> 00:03:32,790
testing now you'll see a lot of vendors

80
00:03:28,410 --> 00:03:35,160
who say we cover the full top 10 it's

81
00:03:32,790 --> 00:03:37,380
good and it's expected because that's

82
00:03:35,160 --> 00:03:40,320
what we're asking of them but of course

83
00:03:37,380 --> 00:03:41,730
it's a very broad set of categories so

84
00:03:40,320 --> 00:03:44,790
it's hard to say we cover all of

85
00:03:41,730 --> 00:03:46,798
injection for instance on the same note

86
00:03:44,790 --> 00:03:49,230
it's not an exhaustive list of all

87
00:03:46,799 --> 00:03:50,790
vulnerability classes and most

88
00:03:49,230 --> 00:03:52,738
importantly and most relevant to this

89
00:03:50,790 --> 00:03:53,310
talk it's definitely not a training

90
00:03:52,739 --> 00:03:55,650
syllabus

91
00:03:53,310 --> 00:03:57,989
even though whenever any of us is

92
00:03:55,650 --> 00:03:59,880
developing an app stack workshop will

93
00:03:57,989 --> 00:04:03,410
probably start with the top 10 and make

94
00:03:59,880 --> 00:04:03,410
sure we hit a little bit of each point

95
00:04:03,799 --> 00:04:09,780
so where do developers where did new

96
00:04:07,890 --> 00:04:13,170
students get this knowledge when it

97
00:04:09,780 --> 00:04:14,760
comes to security training if you're

98
00:04:13,170 --> 00:04:16,620
taking the most traditional path let's

99
00:04:14,760 --> 00:04:19,829
say you went through Comp Sci program

100
00:04:16,620 --> 00:04:23,880
before heading into the workforce here's

101
00:04:19,829 --> 00:04:26,340
a list of the top ten CS programs I'll

102
00:04:23,880 --> 00:04:27,180
let you guess how many of these require

103
00:04:26,340 --> 00:04:30,020
just

104
00:04:27,180 --> 00:04:34,050
one course relating to software security

105
00:04:30,020 --> 00:04:36,570
that's that's it none of those now to be

106
00:04:34,050 --> 00:04:38,460
fair a lot of them most of them offer

107
00:04:36,570 --> 00:04:41,699
security electives but that's usually

108
00:04:38,460 --> 00:04:43,909
more policy oriented or you know focused

109
00:04:41,699 --> 00:04:46,580
on privacy or a low-level at best

110
00:04:43,910 --> 00:04:48,780
technical topics like buffer overflows

111
00:04:46,580 --> 00:04:50,609
usually things like modern web

112
00:04:48,780 --> 00:04:52,948
development or even version control

113
00:04:50,610 --> 00:04:55,770
aren't even covered in in traditional

114
00:04:52,949 --> 00:04:57,690
education likewise if you even went

115
00:04:55,770 --> 00:04:59,130
through a coding bootcamp that is

116
00:04:57,690 --> 00:05:03,169
teaching you how to build modern web

117
00:04:59,130 --> 00:05:05,880
apps chances are you don't get much

118
00:05:03,169 --> 00:05:09,090
knowledge of any estate anything AB SEC

119
00:05:05,880 --> 00:05:10,289
related through that process and at

120
00:05:09,090 --> 00:05:12,810
worst you're learning the wrong things

121
00:05:10,289 --> 00:05:16,169
so you've entered the workforce let's

122
00:05:12,810 --> 00:05:18,060
say you are a new developer using a new

123
00:05:16,169 --> 00:05:21,000
language new framework maybe you're

124
00:05:18,060 --> 00:05:23,729
working in let's say rails and you need

125
00:05:21,000 --> 00:05:26,130
to access a database your incentive is

126
00:05:23,729 --> 00:05:27,389
to get things done quickly and and ship

127
00:05:26,130 --> 00:05:28,590
some code and show that you know what

128
00:05:27,389 --> 00:05:31,199
you're doing while you're learning all

129
00:05:28,590 --> 00:05:34,109
of this on the fly let's take a look

130
00:05:31,199 --> 00:05:36,800
into what your life might be like there

131
00:05:34,110 --> 00:05:39,120
a moment in the life of the developer

132
00:05:36,800 --> 00:05:42,090
real sequel yeah I'm feeling lucky

133
00:05:39,120 --> 00:05:42,599
what's the first result here 372 votes

134
00:05:42,090 --> 00:05:44,969
creeps

135
00:05:42,599 --> 00:05:46,919
that's copy-paste Stack Overflow driven

136
00:05:44,970 --> 00:05:49,770
development and I'm done

137
00:05:46,919 --> 00:05:51,090
I have my database result I'll go

138
00:05:49,770 --> 00:05:52,889
through that really quick one more time

139
00:05:51,090 --> 00:05:54,900
just was that's fun this was not a

140
00:05:52,889 --> 00:05:56,610
cheery picked you know hard to find

141
00:05:54,900 --> 00:06:00,388
example this was just the first thing I

142
00:05:56,610 --> 00:06:02,849
tried and to be fair you know rails as a

143
00:06:00,389 --> 00:06:05,849
framework has a lot of really great same

144
00:06:02,849 --> 00:06:06,960
defaults to keep you safe it has a very

145
00:06:05,849 --> 00:06:09,990
well-built

146
00:06:06,960 --> 00:06:12,840
ORM the rails documentation itself also

147
00:06:09,990 --> 00:06:15,030
says all sorts of places your warnings

148
00:06:12,840 --> 00:06:16,969
against doing exactly this but it's

149
00:06:15,030 --> 00:06:19,258
still very easy to fall into those traps

150
00:06:16,970 --> 00:06:21,659
especially as a new developer who hasn't

151
00:06:19,259 --> 00:06:24,750
been given that framework yet to know

152
00:06:21,659 --> 00:06:27,509
what what to look out for so it's up to

153
00:06:24,750 --> 00:06:30,740
us there employers to to help educate

154
00:06:27,509 --> 00:06:33,599
and to get developers up to speed

155
00:06:30,740 --> 00:06:35,760
meanwhile though with the trends in dev

156
00:06:33,599 --> 00:06:38,729
check ups we're asking them to do more

157
00:06:35,760 --> 00:06:40,740
with less all the time so taking on more

158
00:06:38,729 --> 00:06:41,099
areas of responsibility now taking on

159
00:06:40,740 --> 00:06:44,120
more

160
00:06:41,100 --> 00:06:46,680
security as a an engineer day-to-day

161
00:06:44,120 --> 00:06:51,360
without the training or background to do

162
00:06:46,680 --> 00:06:54,600
so this was from a recent report the gap

163
00:06:51,360 --> 00:06:56,760
gitlab did where they said 70% of

164
00:06:54,600 --> 00:06:58,830
developers are expected as part of their

165
00:06:56,760 --> 00:07:00,750
job descriptions and and part of what

166
00:06:58,830 --> 00:07:04,109
they're measured on their performance to

167
00:07:00,750 --> 00:07:05,640
write secure code at the same time less

168
00:07:04,110 --> 00:07:08,130
than half of them get any sort of

169
00:07:05,640 --> 00:07:10,440
feedback on security so we expect them

170
00:07:08,130 --> 00:07:12,990
to do it somehow out of the ether to get

171
00:07:10,440 --> 00:07:15,180
this knowledge and put it into their

172
00:07:12,990 --> 00:07:16,470
day-to-day work but they don't even know

173
00:07:15,180 --> 00:07:18,720
if they're doing it right or wrong we

174
00:07:16,470 --> 00:07:22,050
don't tell them afterward how things are

175
00:07:18,720 --> 00:07:24,300
going and developers are smart you know

176
00:07:22,050 --> 00:07:26,190
25 percent of them think that their

177
00:07:24,300 --> 00:07:28,530
organization's security practices are

178
00:07:26,190 --> 00:07:30,120
good so they know something's up but we

179
00:07:28,530 --> 00:07:35,390
haven't shared all the right stories all

180
00:07:30,120 --> 00:07:37,530
the right lessons with them yet instead

181
00:07:35,390 --> 00:07:39,750
especially as busy security

182
00:07:37,530 --> 00:07:42,179
professionals we end up dumbing down

183
00:07:39,750 --> 00:07:46,170
topics and that ends up expanding

184
00:07:42,180 --> 00:07:48,120
possible risk so we say things like just

185
00:07:46,170 --> 00:07:50,970
use the ORM which is a good start that

186
00:07:48,120 --> 00:07:55,050
might have prevented that I'm feeling

187
00:07:50,970 --> 00:07:57,780
lucky database query but it's not real

188
00:07:55,050 --> 00:08:00,750
code security and again it's an

189
00:07:57,780 --> 00:08:03,390
incomplete answer that can add a false

190
00:08:00,750 --> 00:08:05,190
sense of security just use the ORM isn't

191
00:08:03,390 --> 00:08:09,020
necessarily good enough or just use this

192
00:08:05,190 --> 00:08:11,790
package a lot of the time that's through

193
00:08:09,020 --> 00:08:14,310
infrequent annual trainings where things

194
00:08:11,790 --> 00:08:16,680
can go out of date we could say use this

195
00:08:14,310 --> 00:08:19,320
header and it turns out that's not best

196
00:08:16,680 --> 00:08:21,360
practices anymore either but real code

197
00:08:19,320 --> 00:08:24,450
security is about defense in depth

198
00:08:21,360 --> 00:08:26,100
it's about modeling what threats are

199
00:08:24,450 --> 00:08:29,159
actually possible thinking like an

200
00:08:26,100 --> 00:08:30,420
attacker and making the practical

201
00:08:29,160 --> 00:08:33,450
trade-offs to write

202
00:08:30,420 --> 00:08:36,360
reasonably secure code and these best

203
00:08:33,450 --> 00:08:37,950
practices evolve so you know there are

204
00:08:36,360 --> 00:08:41,370
many pen testers probably in the

205
00:08:37,950 --> 00:08:44,190
audience you probably relate to the

206
00:08:41,370 --> 00:08:46,110
frustration of saying oh I can load a

207
00:08:44,190 --> 00:08:48,810
Metasploit module therefore I can end

208
00:08:46,110 --> 00:08:50,580
test without knowing what it does what

209
00:08:48,810 --> 00:08:52,739
the vulnerability is how it works under

210
00:08:50,580 --> 00:08:55,470
the hood or why you're using that

211
00:08:52,740 --> 00:08:57,690
particular module that's

212
00:08:55,470 --> 00:08:59,970
a pretty close equivalent until when we

213
00:08:57,690 --> 00:09:03,060
say just use this browser header now you

214
00:08:59,970 --> 00:09:04,890
can prevent cross-site scripting so we

215
00:09:03,060 --> 00:09:06,569
don't need to get into all the

216
00:09:04,890 --> 00:09:09,750
nitty-gritty and our workings every time

217
00:09:06,570 --> 00:09:12,870
but giving some more context around the

218
00:09:09,750 --> 00:09:16,760
trade-offs and around the the relevant

219
00:09:12,870 --> 00:09:16,760
details to a developer can go a long way

220
00:09:17,390 --> 00:09:22,980
instead in terms of best practices

221
00:09:20,520 --> 00:09:28,380
evolving we often see things like this

222
00:09:22,980 --> 00:09:33,030
so the XSS auditor was a is a experiment

223
00:09:28,380 --> 00:09:35,130
for attempting to prevent cross site

224
00:09:33,030 --> 00:09:37,230
scripting automatically to help out

225
00:09:35,130 --> 00:09:39,870
developers to especially help out end

226
00:09:37,230 --> 00:09:41,700
users chrome would block this in your

227
00:09:39,870 --> 00:09:44,400
browser automatically and say this looks

228
00:09:41,700 --> 00:09:46,980
like cross-site scripting you know we're

229
00:09:44,400 --> 00:09:49,260
not going to trust it and so there's a

230
00:09:46,980 --> 00:09:52,290
tendency especially in developer

231
00:09:49,260 --> 00:09:54,510
training to skip over or downplay the

232
00:09:52,290 --> 00:09:57,540
the client side and even more so when we

233
00:09:54,510 --> 00:10:00,150
have tools like this to say chrome will

234
00:09:57,540 --> 00:10:02,699
take care of it for you well it turned

235
00:10:00,150 --> 00:10:04,770
out adding this in is a really really

236
00:10:02,700 --> 00:10:08,430
hard problem to solve automatically and

237
00:10:04,770 --> 00:10:10,260
it introduced as many or more potential

238
00:10:08,430 --> 00:10:15,810
vulnerabilities as it tried to address

239
00:10:10,260 --> 00:10:18,840
and so has been deprecated another quick

240
00:10:15,810 --> 00:10:23,069
example HP KP so this is a public key

241
00:10:18,840 --> 00:10:25,410
pinning this is for preventing as you're

242
00:10:23,070 --> 00:10:29,070
verifying a domain preventing meta metal

243
00:10:25,410 --> 00:10:33,120
type attacks the RFC originally for HP

244
00:10:29,070 --> 00:10:35,120
KP was back in April 2015 a few months

245
00:10:33,120 --> 00:10:37,590
later Google rolling this out

246
00:10:35,120 --> 00:10:40,830
automatically so you can you know there

247
00:10:37,590 --> 00:10:42,210
were lots of great blog posts about you

248
00:10:40,830 --> 00:10:44,370
should turn this on this is a great

249
00:10:42,210 --> 00:10:48,660
security improvement to keep your site

250
00:10:44,370 --> 00:10:50,970
safe keep it securely loading it turned

251
00:10:48,660 --> 00:10:54,089
out though that there were no take-backs

252
00:10:50,970 --> 00:10:56,280
with it with HP KP this was by design

253
00:10:54,089 --> 00:10:57,589
but again if you're just implementing

254
00:10:56,280 --> 00:11:00,449
this quickly you don't necessarily

255
00:10:57,589 --> 00:11:02,790
understand that innards all the details

256
00:11:00,450 --> 00:11:04,589
of what you're implementing you could

257
00:11:02,790 --> 00:11:07,290
end up breaking your site more or less

258
00:11:04,589 --> 00:11:08,940
and so a lot of people ended up saying

259
00:11:07,290 --> 00:11:12,270
well how do i how do I

260
00:11:08,940 --> 00:11:14,700
undo and the recommendation here was use

261
00:11:12,270 --> 00:11:17,640
a different domains you you won't be

262
00:11:14,700 --> 00:11:19,520
accessible for quite some time so best

263
00:11:17,640 --> 00:11:24,660
of luck

264
00:11:19,520 --> 00:11:26,760
so come mid late 2016 some questions

265
00:11:24,660 --> 00:11:28,350
about was this such a good idea a lot of

266
00:11:26,760 --> 00:11:31,410
folks have been breaking their their

267
00:11:28,350 --> 00:11:35,640
sites and breaking access by accidents

268
00:11:31,410 --> 00:11:36,630
with with no take-backs into mid late

269
00:11:35,640 --> 00:11:38,970
2017

270
00:11:36,630 --> 00:11:41,700
Scott helm who was an early cautious

271
00:11:38,970 --> 00:11:44,640
proponent of HP KP saying I'm giving up

272
00:11:41,700 --> 00:11:46,830
it wasn't worth it and finally a few

273
00:11:44,640 --> 00:11:49,830
months later intent to deprecate so

274
00:11:46,830 --> 00:11:52,290
these best practices as I said evolve

275
00:11:49,830 --> 00:11:55,430
it's it's much more than just saying

276
00:11:52,290 --> 00:11:58,110
plug this in follow this tutorial

277
00:11:55,430 --> 00:12:00,959
besides getting some context on what the

278
00:11:58,110 --> 00:12:02,730
possible downsides could be you know we

279
00:12:00,960 --> 00:12:05,640
need to think about defense in depth and

280
00:12:02,730 --> 00:12:09,240
what if this gets deprecated how do I

281
00:12:05,640 --> 00:12:13,170
protect on my own as well now these are

282
00:12:09,240 --> 00:12:15,510
more specific you know more advanced

283
00:12:13,170 --> 00:12:18,120
specific topics here but to go back to

284
00:12:15,510 --> 00:12:21,330
the basics for a second around sequel

285
00:12:18,120 --> 00:12:22,770
injection it's true that's even the the

286
00:12:21,330 --> 00:12:27,180
basics the standards that have been

287
00:12:22,770 --> 00:12:29,550
around for over a decade now continue to

288
00:12:27,180 --> 00:12:31,739
appear in our applications left and

289
00:12:29,550 --> 00:12:35,219
right so this is a pretty steady graph

290
00:12:31,740 --> 00:12:36,750
you can see from 2011 through 2017 the

291
00:12:35,220 --> 00:12:39,240
application is vulnerable to sequel

292
00:12:36,750 --> 00:12:41,190
injection like way is according to

293
00:12:39,240 --> 00:12:44,100
hacker 1 cross-site scripting the most

294
00:12:41,190 --> 00:12:47,970
common weakness successfully exploited

295
00:12:44,100 --> 00:12:49,710
in their bug bounties so it's time to

296
00:12:47,970 --> 00:12:53,250
stop pretending that what we've done

297
00:12:49,710 --> 00:12:55,440
works and we're actually seeing that

298
00:12:53,250 --> 00:12:57,150
this is causing even more problems over

299
00:12:55,440 --> 00:13:00,930
time with the the fragmentation of

300
00:12:57,150 --> 00:13:04,620
tooling and that of you know the ability

301
00:13:00,930 --> 00:13:07,319
for instance of anyone to publish an NPM

302
00:13:04,620 --> 00:13:11,070
type package so we made a quick graph of

303
00:13:07,320 --> 00:13:13,530
CVS relating to parsing you can see this

304
00:13:11,070 --> 00:13:16,500
little blip in 2000 I haven't thought

305
00:13:13,530 --> 00:13:19,650
about y2k in a while but there's a huge

306
00:13:16,500 --> 00:13:22,240
spike there of the last few years and a

307
00:13:19,650 --> 00:13:24,610
lot of that is you know the the

308
00:13:22,240 --> 00:13:27,070
cross-site scripting XML injection

309
00:13:24,610 --> 00:13:29,170
things like that coming up in more and

310
00:13:27,070 --> 00:13:31,360
more new tools that new people are

311
00:13:29,170 --> 00:13:35,800
building but there's this explosion in

312
00:13:31,360 --> 00:13:37,870
recent years of this happening so what

313
00:13:35,800 --> 00:13:40,390
do we typically do about this as as

314
00:13:37,870 --> 00:13:43,870
security teams a lot of the time we rely

315
00:13:40,390 --> 00:13:45,939
on saps and deaths and we we scan and we

316
00:13:43,870 --> 00:13:49,810
identify vulnerabilities and then we

317
00:13:45,940 --> 00:13:51,640
call it a job well done instead of you

318
00:13:49,810 --> 00:13:53,770
know how often is that a real feedback

319
00:13:51,640 --> 00:13:56,649
loop how often when you get those

320
00:13:53,770 --> 00:13:58,480
results do you tell some developers

321
00:13:56,649 --> 00:14:00,670
about it do you tell the developers who

322
00:13:58,480 --> 00:14:02,620
wrote that original code share that

323
00:14:00,670 --> 00:14:04,709
feedback make sure that they aren't

324
00:14:02,620 --> 00:14:07,209
making those same mistakes repeatedly

325
00:14:04,709 --> 00:14:09,579
instead a lot of the time we end up

326
00:14:07,209 --> 00:14:12,040
handing off to an early in their career

327
00:14:09,580 --> 00:14:14,560
security analyst to to pick through the

328
00:14:12,040 --> 00:14:17,260
signal versus noise and that can create

329
00:14:14,560 --> 00:14:20,890
a lot of extra work or even some missed

330
00:14:17,260 --> 00:14:23,490
lessons there where you know scanning is

331
00:14:20,890 --> 00:14:25,439
great we should be using this absolutely

332
00:14:23,490 --> 00:14:28,839
but we want to make sure that that's

333
00:14:25,440 --> 00:14:31,270
part of a holistic approach that also

334
00:14:28,839 --> 00:14:36,490
includes the developers in those lessons

335
00:14:31,270 --> 00:14:38,620
learned another really common result

336
00:14:36,490 --> 00:14:41,350
here is wishful thinking as as a

337
00:14:38,620 --> 00:14:42,579
vulnerability management strategy so

338
00:14:41,350 --> 00:14:44,620
it's it's very easy with this

339
00:14:42,579 --> 00:14:47,109
fragmentation of tooling especially to

340
00:14:44,620 --> 00:14:49,240
say we're not gonna Mull nerble because

341
00:14:47,110 --> 00:14:52,899
we don't use that particular library

342
00:14:49,240 --> 00:14:55,450
that particular version without getting

343
00:14:52,899 --> 00:14:57,880
into the details of what is the

344
00:14:55,450 --> 00:15:00,190
underlying concept there and might it

345
00:14:57,880 --> 00:15:02,079
still apply to us in some way I'll hand

346
00:15:00,190 --> 00:15:05,350
it over to mark to talk about one of

347
00:15:02,079 --> 00:15:08,589
those examples in particular so last

348
00:15:05,350 --> 00:15:10,899
year at blackhat Calvi Ludwig at dual

349
00:15:08,589 --> 00:15:13,810
labs with India security released some

350
00:15:10,899 --> 00:15:15,430
really great research around attack

351
00:15:13,810 --> 00:15:18,489
against sam'l that was kind of a new

352
00:15:15,430 --> 00:15:20,500
vulnerability class so not a lot of

353
00:15:18,490 --> 00:15:24,430
people know what xml canonicalization is

354
00:15:20,500 --> 00:15:27,640
most people don't read rfcs from XML so

355
00:15:24,430 --> 00:15:29,589
the overlap between you know the list of

356
00:15:27,640 --> 00:15:31,000
CVS you see up there in a lot of

357
00:15:29,589 --> 00:15:32,620
organizations it's going to be

358
00:15:31,000 --> 00:15:34,690
predicated on a vulnerability management

359
00:15:32,620 --> 00:15:35,870
program where you've got one or many

360
00:15:34,690 --> 00:15:37,220
tools saying you

361
00:15:35,870 --> 00:15:39,260
this phone well this full mobility

362
00:15:37,220 --> 00:15:42,589
applies to this library you should patch

363
00:15:39,260 --> 00:15:44,930
you know hi CBS s score if you simply

364
00:15:42,589 --> 00:15:47,120
took our advisory through cert and

365
00:15:44,930 --> 00:15:49,550
looked at this list of affected

366
00:15:47,120 --> 00:15:52,250
libraries what you didn't take away from

367
00:15:49,550 --> 00:15:54,410
it is that this is a kind of implicit

368
00:15:52,250 --> 00:15:56,810
potential vulnerability in all sam'l

369
00:15:54,410 --> 00:15:58,579
implementations so if you didn't look at

370
00:15:56,810 --> 00:16:01,069
actually how xml canonicalization

371
00:15:58,580 --> 00:16:03,560
happened for your specific sam'l library

372
00:16:01,070 --> 00:16:05,000
you could also be vulnerable but if you

373
00:16:03,560 --> 00:16:06,770
simply looked at the list of affected

374
00:16:05,000 --> 00:16:08,839
libraries and say oh you know we don't

375
00:16:06,770 --> 00:16:11,930
use that you could still be vulnerable

376
00:16:08,839 --> 00:16:14,150
and I was actually at a product security

377
00:16:11,930 --> 00:16:15,680
instant response conference when our

378
00:16:14,150 --> 00:16:17,120
research came out and I had people say

379
00:16:15,680 --> 00:16:18,709
great you know awesome research thank

380
00:16:17,120 --> 00:16:21,110
you for putting you know that out to the

381
00:16:18,710 --> 00:16:22,820
public and I said oh are you affected

382
00:16:21,110 --> 00:16:24,740
and they're like oh we don't use any of

383
00:16:22,820 --> 00:16:27,110
those libraries I said but are you

384
00:16:24,740 --> 00:16:29,210
affected and this is kind of where we

385
00:16:27,110 --> 00:16:32,450
end up at a you know bit of an impasse

386
00:16:29,210 --> 00:16:33,980
there's this reliance on vulnerability

387
00:16:32,450 --> 00:16:36,589
management tools without necessarily

388
00:16:33,980 --> 00:16:37,880
understanding the root cause and so much

389
00:16:36,589 --> 00:16:40,100
of what we see especially like with the

390
00:16:37,880 --> 00:16:43,040
OS top 10 we're shaving off a lot of

391
00:16:40,100 --> 00:16:44,870
nuance and engineers are nuanced driven

392
00:16:43,040 --> 00:16:46,670
they understand very technical things

393
00:16:44,870 --> 00:16:48,620
yet we keep kind of dumbing things down

394
00:16:46,670 --> 00:16:50,900
as Fletcher mentioned until we've

395
00:16:48,620 --> 00:16:54,860
removed and abstract adalah things they

396
00:16:50,900 --> 00:16:56,900
need to know this is only increasing as

397
00:16:54,860 --> 00:16:58,910
Fletcher mentioned because whether it's

398
00:16:56,900 --> 00:17:00,560
the you know increased number of

399
00:16:58,910 --> 00:17:02,060
frameworks or languages that are popular

400
00:17:00,560 --> 00:17:03,229
or just the pure amount of code in

401
00:17:02,060 --> 00:17:05,839
software engineering that's happening in

402
00:17:03,230 --> 00:17:07,280
the world we've got to get ahead of the

403
00:17:05,839 --> 00:17:08,780
problem instead of looking at you know

404
00:17:07,280 --> 00:17:10,699
two to three-year lagging indicators

405
00:17:08,780 --> 00:17:12,260
like OS top ten it's really not keeping

406
00:17:10,699 --> 00:17:14,150
up with the needs of the engineering

407
00:17:12,260 --> 00:17:16,609
people you know that we a nap sect for

408
00:17:14,150 --> 00:17:17,780
instance support it's great to say hey

409
00:17:16,609 --> 00:17:19,069
did you know that three years ago a

410
00:17:17,780 --> 00:17:21,319
sequel injection was still bad

411
00:17:19,069 --> 00:17:23,688
what about like that esoteric bug class

412
00:17:21,319 --> 00:17:24,889
in nodejs you might not hear about it

413
00:17:23,689 --> 00:17:26,209
for three years that doesn't really seem

414
00:17:24,890 --> 00:17:29,020
like a way that we revering in it get

415
00:17:26,209 --> 00:17:32,780
ahead of the problems that we're facing

416
00:17:29,020 --> 00:17:34,250
so looking at this graph you might

417
00:17:32,780 --> 00:17:37,309
assume that I'm pulling up data from

418
00:17:34,250 --> 00:17:39,260
1995 this is just IBM's presentation

419
00:17:37,309 --> 00:17:41,899
style for graphs so this is actually

420
00:17:39,260 --> 00:17:43,700
from 2010 but you know one of the things

421
00:17:41,900 --> 00:17:45,020
that we think about in ministry there's

422
00:17:43,700 --> 00:17:46,360
a lot of tropes in the industry that we

423
00:17:45,020 --> 00:17:49,080
we just take as fact

424
00:17:46,360 --> 00:17:52,620
one of which is its way wave

425
00:17:49,080 --> 00:17:54,059
cheaper to fix a vulnerability farther

426
00:17:52,620 --> 00:17:55,889
left in the development lifecycle verses

427
00:17:54,059 --> 00:17:57,510
farther right here's some data from IBM

428
00:17:55,890 --> 00:17:59,750
that seems to agree with that you know

429
00:17:57,510 --> 00:18:02,490
kind of implicit thesis that we all have

430
00:17:59,750 --> 00:18:04,409
but when you see these numbers it's not

431
00:18:02,490 --> 00:18:06,330
it's not in the ballpark right like

432
00:18:04,409 --> 00:18:07,559
fixing it in designed you know doing it

433
00:18:06,330 --> 00:18:08,070
on a white board before any codes

434
00:18:07,559 --> 00:18:10,139
written

435
00:18:08,070 --> 00:18:11,760
yeah it's dramatically faster versus you

436
00:18:10,140 --> 00:18:13,860
know the far the far right side which is

437
00:18:11,760 --> 00:18:17,210
the maintenance mode side and a little

438
00:18:13,860 --> 00:18:17,209
bit more expensive right a hundred times

439
00:18:17,750 --> 00:18:21,990
lots of organizations that you may have

440
00:18:20,190 --> 00:18:24,059
worked for work with especially large

441
00:18:21,990 --> 00:18:27,570
enterprises could look something like

442
00:18:24,059 --> 00:18:29,129
this you've got a platoon of software

443
00:18:27,570 --> 00:18:30,480
engineers you know all around the world

444
00:18:29,130 --> 00:18:33,000
with different business units and

445
00:18:30,480 --> 00:18:34,500
different teams you've got some you know

446
00:18:33,000 --> 00:18:36,090
people in compliance that are enabling

447
00:18:34,500 --> 00:18:38,460
the business to sell products into you

448
00:18:36,090 --> 00:18:41,279
know regulated markets or provide the

449
00:18:38,460 --> 00:18:43,019
necessary overhead to you know allow

450
00:18:41,279 --> 00:18:45,019
organizations to leverage your products

451
00:18:43,019 --> 00:18:47,039
you've got lots and lots of products and

452
00:18:45,019 --> 00:18:48,809
then you might have some security people

453
00:18:47,039 --> 00:18:50,158
and in fact if you looked at this and

454
00:18:48,809 --> 00:18:52,080
you you know you saw a bunch of people

455
00:18:50,159 --> 00:18:53,549
in software testing you see some

456
00:18:52,080 --> 00:18:56,129
security engineers you see some pen

457
00:18:53,549 --> 00:18:57,418
testers some of you might want that as

458
00:18:56,130 --> 00:18:58,710
your organization you're like wow look

459
00:18:57,419 --> 00:19:00,539
at all that investment they're making in

460
00:18:58,710 --> 00:19:03,120
security but if we think of the

461
00:19:00,539 --> 00:19:05,730
engineers and we think of the people

462
00:19:03,120 --> 00:19:08,250
represented up there number one is it's

463
00:19:05,730 --> 00:19:09,600
an outsize population problem right the

464
00:19:08,250 --> 00:19:11,220
number of software engineers you're

465
00:19:09,600 --> 00:19:13,049
never going to get one-to-one ratios of

466
00:19:11,220 --> 00:19:15,899
like app sec or any other kind of

467
00:19:13,049 --> 00:19:17,519
security role if you think of where most

468
00:19:15,899 --> 00:19:19,830
organizations seem to spend a lot of

469
00:19:17,519 --> 00:19:21,179
their time and resourcing it's literally

470
00:19:19,830 --> 00:19:23,178
at the far right of the spectrum

471
00:19:21,179 --> 00:19:25,260
it's the pen testers it's the red teams

472
00:19:23,179 --> 00:19:27,929
you know if you've been in a red team

473
00:19:25,260 --> 00:19:29,970
before if you don't have a blue team at

474
00:19:27,929 --> 00:19:32,159
that company your red team's gonna be

475
00:19:29,970 --> 00:19:34,590
very successful and we do this all the

476
00:19:32,159 --> 00:19:37,559
time in software security we hire a

477
00:19:34,590 --> 00:19:39,779
annual pen test we hire people to break

478
00:19:37,559 --> 00:19:42,539
our code after it gets released but make

479
00:19:39,779 --> 00:19:44,909
no investments you know at the start of

480
00:19:42,539 --> 00:19:46,490
the project so when the you know third

481
00:19:44,909 --> 00:19:48,929
party comes in and they do a pen test

482
00:19:46,490 --> 00:19:50,490
yeah they're probably gonna find sequel

483
00:19:48,929 --> 00:19:52,169
injection if you've not educated your

484
00:19:50,490 --> 00:19:53,240
engineers you if you haven't supported

485
00:19:52,169 --> 00:19:56,130
them through the development lifecycle

486
00:19:53,240 --> 00:19:57,600
getting that result isn't really kind of

487
00:19:56,130 --> 00:19:59,309
blessing the fact that you hire these

488
00:19:57,600 --> 00:20:00,270
pen testers it's better than shipping

489
00:19:59,309 --> 00:20:02,100
the product of course with those

490
00:20:00,270 --> 00:20:04,139
vulnerabilities but it's

491
00:20:02,100 --> 00:20:05,668
actually indicative that you've not

492
00:20:04,140 --> 00:20:08,130
invested further left into the

493
00:20:05,669 --> 00:20:10,169
development lifecycle this general

494
00:20:08,130 --> 00:20:11,520
picture if you think of you know what's

495
00:20:10,169 --> 00:20:13,530
the biggest population up here

496
00:20:11,520 --> 00:20:15,720
it's the engineers so why are we

497
00:20:13,530 --> 00:20:18,539
investing so much effort at the far end

498
00:20:15,720 --> 00:20:21,000
of the spectrum of Destiel why aren't we

499
00:20:18,539 --> 00:20:23,789
making those engineers and if you saw

500
00:20:21,000 --> 00:20:25,530
Dino's key don't these engineers are

501
00:20:23,789 --> 00:20:27,390
gonna scale we are never going to scale

502
00:20:25,530 --> 00:20:28,950
security programs to the size of an

503
00:20:27,390 --> 00:20:31,020
engineering staff so why are we not

504
00:20:28,950 --> 00:20:34,080
investing more to make them security

505
00:20:31,020 --> 00:20:37,950
engineers and to supplement or to you

506
00:20:34,080 --> 00:20:40,020
know help them out along the way within

507
00:20:37,950 --> 00:20:43,049
do security when we hire new engineers

508
00:20:40,020 --> 00:20:44,760
we actually have this pretty you know

509
00:20:43,049 --> 00:20:46,830
pretty quick survey and we want to know

510
00:20:44,760 --> 00:20:49,530
from the perspective of the people that

511
00:20:46,830 --> 00:20:51,059
we are to serve because no application

512
00:20:49,530 --> 00:20:52,950
security is a customer service role

513
00:20:51,059 --> 00:20:55,500
if there are no engineers there are no

514
00:20:52,950 --> 00:20:57,659
app second-years so we understand and

515
00:20:55,500 --> 00:20:59,429
want to understand better the population

516
00:20:57,659 --> 00:21:02,309
that we actually get hired to help and

517
00:20:59,429 --> 00:21:04,679
if you look at hacker ones data set from

518
00:21:02,309 --> 00:21:06,299
their recent report two of the

519
00:21:04,679 --> 00:21:08,400
vulnerability classes that are the

520
00:21:06,299 --> 00:21:10,500
highest paid out bounties are server

521
00:21:08,400 --> 00:21:13,169
side request forgery and insecure direct

522
00:21:10,500 --> 00:21:15,270
object reference when we hire employees

523
00:21:13,169 --> 00:21:16,500
and we give them a bunch of bug classes

524
00:21:15,270 --> 00:21:18,720
yeah people know what cross-site

525
00:21:16,500 --> 00:21:21,059
scripting is or they've heard of sequel

526
00:21:18,720 --> 00:21:22,919
injection more often than not they

527
00:21:21,059 --> 00:21:25,770
really sincerely don't know what ID or

528
00:21:22,919 --> 00:21:28,320
or s srf is and how could you blame them

529
00:21:25,770 --> 00:21:30,750
based on the comps idea we looked at so

530
00:21:28,320 --> 00:21:33,000
if we see that the highest bounties are

531
00:21:30,750 --> 00:21:34,559
paying out for these things and we see a

532
00:21:33,000 --> 00:21:36,780
huge disparity in the knowledge of our

533
00:21:34,559 --> 00:21:38,940
engineers we now know where to invest

534
00:21:36,780 --> 00:21:40,860
time and where that you know there are

535
00:21:38,940 --> 00:21:43,770
gaps in curriculum or trainings or boot

536
00:21:40,860 --> 00:21:45,178
camps the other problem is with hacker

537
00:21:43,770 --> 00:21:48,780
ones data they show that there's only a

538
00:21:45,179 --> 00:21:51,270
40% overlap within the OS top ten versus

539
00:21:48,780 --> 00:21:54,330
the real-world data they have so because

540
00:21:51,270 --> 00:21:57,240
hacker ones data is again taking a broad

541
00:21:54,330 --> 00:21:59,189
view of data from real-world assessment

542
00:21:57,240 --> 00:22:00,929
the OS top ten is often driven by a

543
00:21:59,190 --> 00:22:02,669
small quorum of people that are you know

544
00:22:00,929 --> 00:22:05,340
again doing their level best to give a

545
00:22:02,669 --> 00:22:08,400
perspective a snapshot in time of risk

546
00:22:05,340 --> 00:22:09,990
in applications but hacker ones data is

547
00:22:08,400 --> 00:22:12,299
actually what is happening in the real

548
00:22:09,990 --> 00:22:13,770
world and if there's only a 40% overlap

549
00:22:12,299 --> 00:22:16,230
there's clearly a lot we're missing and

550
00:22:13,770 --> 00:22:18,429
then we have to address that

551
00:22:16,230 --> 00:22:20,559
so a point Fletcher was making in

552
00:22:18,429 --> 00:22:22,720
passing if you've been a software

553
00:22:20,559 --> 00:22:24,519
developer and you did you know web

554
00:22:22,720 --> 00:22:26,529
applications let's say before

555
00:22:24,519 --> 00:22:28,210
abstraction libraries or other things

556
00:22:26,529 --> 00:22:31,450
that kind of gave you a little bit of

557
00:22:28,210 --> 00:22:33,039
security glue in the middle the it used

558
00:22:31,450 --> 00:22:35,470
to be a little kind of Wild West but now

559
00:22:33,039 --> 00:22:38,259
we have ORM s we have capabilities and

560
00:22:35,470 --> 00:22:40,179
that's great but when you do speak to a

561
00:22:38,259 --> 00:22:41,980
lot of Engineers they say oh the ORM is

562
00:22:40,179 --> 00:22:43,899
gonna handle the security it's gonna

563
00:22:41,980 --> 00:22:45,519
handle sequel injection prevention if

564
00:22:43,899 --> 00:22:47,649
you go to Wikipedia I think right now

565
00:22:45,519 --> 00:22:49,389
unless someone's changing it actively go

566
00:22:47,649 --> 00:22:51,668
to the sequel injection page go to the

567
00:22:49,389 --> 00:22:55,000
mitigation section of that page there's

568
00:22:51,669 --> 00:22:57,159
this one you know single line that says

569
00:22:55,000 --> 00:22:59,500
enforcement at coding level and if you

570
00:22:57,159 --> 00:23:01,149
read that line verbatim and you don't

571
00:22:59,500 --> 00:23:03,250
know about this you're not a person and

572
00:23:01,149 --> 00:23:04,689
you know this audience at blackhat you

573
00:23:03,250 --> 00:23:06,399
would probably take away that this is

574
00:23:04,690 --> 00:23:07,269
literally the right way to handle this

575
00:23:06,399 --> 00:23:09,129
entire problem

576
00:23:07,269 --> 00:23:10,629
it's very terse it's very to the point

577
00:23:09,129 --> 00:23:12,879
and it's in the sequel injection page

578
00:23:10,629 --> 00:23:15,309
for mitigation and it's one line how you

579
00:23:12,879 --> 00:23:16,959
know how simple but the problem is and

580
00:23:15,309 --> 00:23:18,789
luckily some of these great people have

581
00:23:16,960 --> 00:23:19,929
posted blog posts the ORM doesn't

582
00:23:18,789 --> 00:23:21,309
actually protect against sequel

583
00:23:19,929 --> 00:23:23,320
injection in all places

584
00:23:21,309 --> 00:23:25,990
lots of other kinds of database

585
00:23:23,320 --> 00:23:27,519
libraries you think might be protecting

586
00:23:25,990 --> 00:23:29,259
you and they're not and this gets back

587
00:23:27,519 --> 00:23:31,240
to the root cause of if the engineers

588
00:23:29,259 --> 00:23:33,820
don't know why these things work or do

589
00:23:31,240 --> 00:23:35,320
not work how are we supposed to expect

590
00:23:33,820 --> 00:23:37,059
them to understand that in certain cases

591
00:23:35,320 --> 00:23:39,939
the RM does something good in some cases

592
00:23:37,059 --> 00:23:42,639
it doesn't and we we peanut butter over

593
00:23:39,940 --> 00:23:44,669
these kinds of concepts why aren't we

594
00:23:42,639 --> 00:23:46,750
talking to engineers like engineers

595
00:23:44,669 --> 00:23:48,309
these concepts are not that hard they're

596
00:23:46,750 --> 00:23:50,259
patterns and anti patterns their

597
00:23:48,309 --> 00:23:52,210
interfaces these are things that

598
00:23:50,259 --> 00:23:54,580
engineers do every day but yet we keep

599
00:23:52,210 --> 00:23:55,690
trying to pull away the the nuance that

600
00:23:54,580 --> 00:24:00,340
they would understand probably better

601
00:23:55,690 --> 00:24:02,169
than we would if you've dealt with any

602
00:24:00,340 --> 00:24:04,899
sort of web application you've probably

603
00:24:02,169 --> 00:24:06,370
had some password management and again

604
00:24:04,899 --> 00:24:08,408
when you talk to an engineer that's been

605
00:24:06,370 --> 00:24:10,809
in the industry for a while based on the

606
00:24:08,409 --> 00:24:12,610
last you know the loss of technical

607
00:24:10,809 --> 00:24:14,440
training they took her the last you know

608
00:24:12,610 --> 00:24:18,580
blog post they read it or the last loss

609
00:24:14,440 --> 00:24:20,289
top ten you know overview these are the

610
00:24:18,580 --> 00:24:21,850
kinds of things where a lot of engineers

611
00:24:20,289 --> 00:24:24,820
like oh well I don't use them B five

612
00:24:21,850 --> 00:24:28,059
anymore I use shot one and you know 20

613
00:24:24,820 --> 00:24:29,939
years ago that great or I use sha-1 plus

614
00:24:28,059 --> 00:24:32,740
a salt great

615
00:24:29,940 --> 00:24:34,750
from 2011 this flask authentication

616
00:24:32,740 --> 00:24:37,510
module which is was a very popular

617
00:24:34,750 --> 00:24:40,570
module you see right there it's using

618
00:24:37,510 --> 00:24:43,780
sha-1 to do password storage in 2019

619
00:24:40,570 --> 00:24:45,790
there's a website that's a tutorial

620
00:24:43,780 --> 00:24:48,820
website for JavaScript and it's sane to

621
00:24:45,790 --> 00:24:51,340
use md5 client-side to protect people's

622
00:24:48,820 --> 00:24:52,450
passwords and then when we see breaches

623
00:24:51,340 --> 00:24:53,080
happen we go well how could this

624
00:24:52,450 --> 00:24:54,970
possibly be

625
00:24:53,080 --> 00:24:57,490
well because tutorials are still telling

626
00:24:54,970 --> 00:24:59,170
people to do it this way despite all

627
00:24:57,490 --> 00:25:01,510
that you know looking at as far back as

628
00:24:59,170 --> 00:25:04,840
1999 we've had great password storage

629
00:25:01,510 --> 00:25:06,250
algorithms but the time to education for

630
00:25:04,840 --> 00:25:08,230
engineers to know that those are the

631
00:25:06,250 --> 00:25:09,940
things you should be using and then to

632
00:25:08,230 --> 00:25:11,500
ignore everything that's basically index

633
00:25:09,940 --> 00:25:13,540
on Google and Stack Overflow and

634
00:25:11,500 --> 00:25:15,370
curriculum that's out of date that's

635
00:25:13,540 --> 00:25:18,070
kind of an uphill battle to know you

636
00:25:15,370 --> 00:25:19,719
need to know that it's not okay to look

637
00:25:18,070 --> 00:25:21,070
for the answer that is okay and that's

638
00:25:19,720 --> 00:25:23,470
such an intractable problem for most

639
00:25:21,070 --> 00:25:25,600
engineers if they see a resource its

640
00:25:23,470 --> 00:25:26,980
voted up as Fletcher said why would they

641
00:25:25,600 --> 00:25:28,389
think otherwise I wouldn't think

642
00:25:26,980 --> 00:25:29,620
otherwise if I was looking up a topic

643
00:25:28,390 --> 00:25:30,610
and a lot of people seem to really

644
00:25:29,620 --> 00:25:33,520
passionate about it that would be like

645
00:25:30,610 --> 00:25:35,500
okay that sounds great so we have a

646
00:25:33,520 --> 00:25:37,420
region that really has to happen in many

647
00:25:35,500 --> 00:25:40,210
of these areas but what it what is the

648
00:25:37,420 --> 00:25:41,380
source how do we give that truth to an

649
00:25:40,210 --> 00:25:43,480
engineer how do we make sure they're

650
00:25:41,380 --> 00:25:47,200
up-to-date real-time that's a tough

651
00:25:43,480 --> 00:25:48,760
problem one of the areas that I think we

652
00:25:47,200 --> 00:25:50,230
are doing better as an industry and you

653
00:25:48,760 --> 00:25:53,170
can see this in investment you can see

654
00:25:50,230 --> 00:25:55,540
this in M&A we're spending a lot more

655
00:25:53,170 --> 00:25:56,890
money and time and technologies into

656
00:25:55,540 --> 00:25:58,270
vulnerability management of third-party

657
00:25:56,890 --> 00:26:00,340
dependencies so your open source

658
00:25:58,270 --> 00:26:01,810
libraries that everyone is using that's

659
00:26:00,340 --> 00:26:04,570
great and we're giving all that

660
00:26:01,810 --> 00:26:07,360
visibility to the engineers that's also

661
00:26:04,570 --> 00:26:09,850
great but what do we run into now we're

662
00:26:07,360 --> 00:26:11,199
giving more awareness to engineers that

663
00:26:09,850 --> 00:26:12,820
don't understand the root causes of

664
00:26:11,200 --> 00:26:13,660
these vulnerabilities so they're gonna

665
00:26:12,820 --> 00:26:15,730
see a CVE

666
00:26:13,660 --> 00:26:16,690
and they're gonna see some CVS s10 score

667
00:26:15,730 --> 00:26:18,220
and they're gonna like oh oh this is

668
00:26:16,690 --> 00:26:21,520
critical I've got a patch right away

669
00:26:18,220 --> 00:26:24,460
mike-mike sources you know in trouble

670
00:26:21,520 --> 00:26:25,840
I'm gonna get my website compromised but

671
00:26:24,460 --> 00:26:27,550
what if the vulnerability doesn't affect

672
00:26:25,840 --> 00:26:30,100
anything they use like libraries have a

673
00:26:27,550 --> 00:26:31,930
lot of functionality and oftentimes a

674
00:26:30,100 --> 00:26:33,820
lot of CVS are very tightly scoped oh

675
00:26:31,930 --> 00:26:35,710
this one method in this one case with

676
00:26:33,820 --> 00:26:38,230
this one boolean is affected by this

677
00:26:35,710 --> 00:26:40,120
thing what if they have no chance of

678
00:26:38,230 --> 00:26:41,770
ever using that functionality we're

679
00:26:40,120 --> 00:26:44,360
going to get into this habit of just

680
00:26:41,770 --> 00:26:45,530
patch patch patch and if

681
00:26:44,360 --> 00:26:47,360
you've been a software developer you

682
00:26:45,530 --> 00:26:49,040
know that just taking random updates for

683
00:26:47,360 --> 00:26:50,330
the you know trunk codebase of any

684
00:26:49,040 --> 00:26:54,139
library especially when you have like

685
00:26:50,330 --> 00:26:55,370
NPM with 800 you know imports you are

686
00:26:54,140 --> 00:26:57,320
probably going to introduce more

687
00:26:55,370 --> 00:26:59,389
security regressions by doing that sort

688
00:26:57,320 --> 00:27:00,559
of strategy then you would have by not

689
00:26:59,390 --> 00:27:02,660
just patching the thing that wasn't

690
00:27:00,559 --> 00:27:04,549
applicable to you in the first place so

691
00:27:02,660 --> 00:27:05,870
simply giving more visibility without

692
00:27:04,549 --> 00:27:07,610
the knowledge that's commiserate to

693
00:27:05,870 --> 00:27:08,899
actually handle that visibility is

694
00:27:07,610 --> 00:27:10,820
really just going to exasperate the

695
00:27:08,900 --> 00:27:12,380
problem gonna create more friction gonna

696
00:27:10,820 --> 00:27:16,970
create more confusion and possibly

697
00:27:12,380 --> 00:27:19,240
introduce more security issues so from

698
00:27:16,970 --> 00:27:21,530
taking a lot of that you know kind of

699
00:27:19,240 --> 00:27:24,820
thrash that's kind of ahead of us or

700
00:27:21,530 --> 00:27:27,168
that we're walking into it gets worse

701
00:27:24,820 --> 00:27:28,850
and it gets worse because even when

702
00:27:27,169 --> 00:27:31,040
organizations do have an application

703
00:27:28,850 --> 00:27:32,949
security team that doesn't necessarily

704
00:27:31,040 --> 00:27:35,870
mean that they're on the developers side

705
00:27:32,950 --> 00:27:37,610
this was a quote from a conference I

706
00:27:35,870 --> 00:27:39,290
attended a couple years ago and it was

707
00:27:37,610 --> 00:27:41,240
an application security person and I was

708
00:27:39,290 --> 00:27:43,610
super excited to see the talk and then

709
00:27:41,240 --> 00:27:45,890
it was all the dogmatic condescending

710
00:27:43,610 --> 00:27:47,240
you know you know points of view that

711
00:27:45,890 --> 00:27:48,950
we've been trying to get away from from

712
00:27:47,240 --> 00:27:50,270
as an industry and I think again Dino

713
00:27:48,950 --> 00:27:52,610
did a great job in his keynote talking

714
00:27:50,270 --> 00:27:54,139
about this but when we have in an

715
00:27:52,610 --> 00:27:56,000
application security engineer that

716
00:27:54,140 --> 00:27:57,650
really is just kind of going back and

717
00:27:56,000 --> 00:27:59,720
point inflate the the finger and blaming

718
00:27:57,650 --> 00:28:00,950
the engineer they're working with but by

719
00:27:59,720 --> 00:28:02,929
the way the application security

720
00:28:00,950 --> 00:28:04,910
engineer doesn't know how software works

721
00:28:02,929 --> 00:28:07,280
they have no background in development

722
00:28:04,910 --> 00:28:09,320
they have no comps I'd agree they are

723
00:28:07,280 --> 00:28:11,840
self admitted oh I don't really do any

724
00:28:09,320 --> 00:28:14,149
of that but there the app seconds near

725
00:28:11,840 --> 00:28:15,709
so are we really setting up anyone

726
00:28:14,150 --> 00:28:17,390
including that app psych engineer for

727
00:28:15,710 --> 00:28:19,220
success at that point it seems like

728
00:28:17,390 --> 00:28:20,929
we're actually introducing new problems

729
00:28:19,220 --> 00:28:23,900
that we didn't have without an app suck

730
00:28:20,929 --> 00:28:25,460
team so it's you know ideal to have an

731
00:28:23,900 --> 00:28:27,140
app's like team at all but if they're

732
00:28:25,460 --> 00:28:29,240
actually contributing to a negative

733
00:28:27,140 --> 00:28:30,740
outcome or maybe they're gonna introduce

734
00:28:29,240 --> 00:28:32,500
more false positives because they don't

735
00:28:30,740 --> 00:28:34,549
know what the tools are actually saying

736
00:28:32,500 --> 00:28:36,140
are we really doing that much better

737
00:28:34,549 --> 00:28:37,429
other than having a role that you know

738
00:28:36,140 --> 00:28:40,790
someone's LinkedIn title says apps like

739
00:28:37,429 --> 00:28:42,860
engineer isn't that important within duo

740
00:28:40,790 --> 00:28:44,990
one of the things we did very early on

741
00:28:42,860 --> 00:28:46,250
was established really the principles by

742
00:28:44,990 --> 00:28:48,470
which we were going to build our app

743
00:28:46,250 --> 00:28:50,299
suck team and this is something that

744
00:28:48,470 --> 00:28:51,850
I've seen other teams do and I kind of

745
00:28:50,299 --> 00:28:54,020
learned from this in my career where

746
00:28:51,850 --> 00:28:55,280
when you have all these choices in front

747
00:28:54,020 --> 00:28:56,750
of you and you have all these directions

748
00:28:55,280 --> 00:28:58,100
you really have to have some like

749
00:28:56,750 --> 00:28:59,960
anchoring

750
00:28:58,100 --> 00:29:01,340
like what is your team gonna be what is

751
00:28:59,960 --> 00:29:02,870
your team going to do who do you know

752
00:29:01,340 --> 00:29:06,379
who do you serve what is the outcome

753
00:29:02,870 --> 00:29:08,120
that you're looking to achieve so some

754
00:29:06,380 --> 00:29:09,320
of these that you know you can read off

755
00:29:08,120 --> 00:29:11,479
the screen but some of these are obvious

756
00:29:09,320 --> 00:29:12,950
but they're also not necessarily obvious

757
00:29:11,480 --> 00:29:15,020
and practice that a lot of organizations

758
00:29:12,950 --> 00:29:16,970
and by pulling back to these at all

759
00:29:15,020 --> 00:29:18,710
times we don't really ever get too far

760
00:29:16,970 --> 00:29:20,360
off one side or the other we kind of

761
00:29:18,710 --> 00:29:23,480
reset her on these these principles in

762
00:29:20,360 --> 00:29:26,510
these values for our team so the idea

763
00:29:23,480 --> 00:29:28,430
that and kind of a quote I called out a

764
00:29:26,510 --> 00:29:30,020
second ago the idea that you're going to

765
00:29:28,430 --> 00:29:31,550
break people's code all day long like

766
00:29:30,020 --> 00:29:33,590
you are there to tell them everything

767
00:29:31,550 --> 00:29:35,240
that could go wrong that is wrong that's

768
00:29:33,590 --> 00:29:38,330
bad that's you know kind of the ugly

769
00:29:35,240 --> 00:29:40,100
baby thing right we can do that but we

770
00:29:38,330 --> 00:29:42,260
can do that in a respectful way do one

771
00:29:40,100 --> 00:29:44,929
of duos company principles or kind of

772
00:29:42,260 --> 00:29:46,670
core values is kinder than necessary and

773
00:29:44,930 --> 00:29:48,200
wouldn't it go a lot farther with an

774
00:29:46,670 --> 00:29:49,910
engineer if you're like wow you know

775
00:29:48,200 --> 00:29:51,290
software's really hard to do right and

776
00:29:49,910 --> 00:29:52,880
by the way like these things are

777
00:29:51,290 --> 00:29:54,560
changing all the time let me introduce

778
00:29:52,880 --> 00:29:57,080
you to this library that's a little bit

779
00:29:54,560 --> 00:29:59,419
safer out of the box so making the

780
00:29:57,080 --> 00:30:01,730
adversarial effort as a you know a pen

781
00:29:59,420 --> 00:30:03,410
tester or an offensive person doesn't

782
00:30:01,730 --> 00:30:05,420
mean that the relationship that you are

783
00:30:03,410 --> 00:30:06,830
fostering is going to be ad material and

784
00:30:05,420 --> 00:30:08,480
in fact if it's not you're probably

785
00:30:06,830 --> 00:30:10,460
going to be a lot better off when you do

786
00:30:08,480 --> 00:30:12,980
want the thing changed so when that bug

787
00:30:10,460 --> 00:30:14,570
goes out and you know there's a refactor

788
00:30:12,980 --> 00:30:16,940
cost and there's a lot of overhead and

789
00:30:14,570 --> 00:30:18,950
we're hitting that like hundred you know

790
00:30:16,940 --> 00:30:21,410
one hundred number that IBM showed us

791
00:30:18,950 --> 00:30:23,990
that relationship is gonna get the bug

792
00:30:21,410 --> 00:30:24,920
fixed when you want it fixed another one

793
00:30:23,990 --> 00:30:26,120
and this is something that I think

794
00:30:24,920 --> 00:30:27,770
Netflix a lot of other organizations

795
00:30:26,120 --> 00:30:30,860
have done a great job talking about is

796
00:30:27,770 --> 00:30:33,200
this idea of building a paved road it's

797
00:30:30,860 --> 00:30:34,699
very easy when you are in a security

798
00:30:33,200 --> 00:30:36,430
role to point out all the things that

799
00:30:34,700 --> 00:30:38,720
are going wrong but what if you just

800
00:30:36,430 --> 00:30:40,220
kind of obviated a lot of that problem

801
00:30:38,720 --> 00:30:42,320
set and just told engineers what the

802
00:30:40,220 --> 00:30:43,670
right ways to do things are why not tell

803
00:30:42,320 --> 00:30:44,960
them like this library is really good

804
00:30:43,670 --> 00:30:47,240
here's some guidelines on how to

805
00:30:44,960 --> 00:30:49,160
implement it correctly we have security

806
00:30:47,240 --> 00:30:50,390
testing or a pipeline for that isn't

807
00:30:49,160 --> 00:30:52,100
that a lot better than like letting them

808
00:30:50,390 --> 00:30:53,990
whack-a-mole them and then be like oh we

809
00:30:52,100 --> 00:30:56,120
imported this module well you can't ship

810
00:30:53,990 --> 00:30:57,860
that cool we imported this module nope

811
00:30:56,120 --> 00:30:59,209
why don't you just tell them what they

812
00:30:57,860 --> 00:31:00,800
can import why don't you tell them what

813
00:30:59,210 --> 00:31:02,990
they what what's safe and what's not

814
00:31:00,800 --> 00:31:05,149
safe and instead of making this like so

815
00:31:02,990 --> 00:31:06,740
to do this kind of conversation and this

816
00:31:05,150 --> 00:31:08,090
is again when you're focused on shipping

817
00:31:06,740 --> 00:31:10,400
product when you're focused on the

818
00:31:08,090 --> 00:31:11,840
business and you're not focused on

819
00:31:10,400 --> 00:31:13,400
finding bugs I

820
00:31:11,840 --> 00:31:15,860
Deeley if you're a great app suck team

821
00:31:13,400 --> 00:31:17,630
you find very few bugs and it's not for

822
00:31:15,860 --> 00:31:18,408
a lack of staff it's not for a lack of

823
00:31:17,630 --> 00:31:20,840
trying

824
00:31:18,409 --> 00:31:22,580
but you've invested so much in making

825
00:31:20,840 --> 00:31:25,220
sure that bugs don't get introduced if

826
00:31:22,580 --> 00:31:26,270
you're finding a lot of bugs it probably

827
00:31:25,220 --> 00:31:27,799
just means you didn't invest in the

828
00:31:26,270 --> 00:31:29,889
right places upstream and they in the

829
00:31:27,799 --> 00:31:32,720
development lifecycle

830
00:31:29,890 --> 00:31:34,610
so I mentioned peanut butter earlier and

831
00:31:32,720 --> 00:31:36,140
you know in some cases I think peanut

832
00:31:34,610 --> 00:31:37,370
butter in outcomes are probably good

833
00:31:36,140 --> 00:31:40,370
this is very high-rez peanut butter

834
00:31:37,370 --> 00:31:41,809
photo by the way so we see this security

835
00:31:40,370 --> 00:31:43,668
development lifecycle from Microsoft up

836
00:31:41,809 --> 00:31:46,668
here which we map all the work we do at

837
00:31:43,669 --> 00:31:48,350
duo two and then we look at the other

838
00:31:46,669 --> 00:31:50,210
side which is this you know kind of sand

839
00:31:48,350 --> 00:31:53,539
water rock whatever filter charcoal

840
00:31:50,210 --> 00:31:55,179
filter when people see the SDL they just

841
00:31:53,539 --> 00:31:57,169
see it as a linear set of steps and

842
00:31:55,179 --> 00:31:58,909
that's something that I'm generally

843
00:31:57,169 --> 00:32:00,289
opposed to because I don't think that if

844
00:31:58,909 --> 00:32:01,429
you just do things in the order of

845
00:32:00,289 --> 00:32:03,919
operation you're really getting the

846
00:32:01,429 --> 00:32:05,990
intention of the SDL so this this other

847
00:32:03,919 --> 00:32:08,149
image kind of shows what I what I think

848
00:32:05,990 --> 00:32:11,149
about which is we are heavily investing

849
00:32:08,149 --> 00:32:13,279
at the very top of this funnel we want

850
00:32:11,149 --> 00:32:15,709
all of the best things that we can give

851
00:32:13,279 --> 00:32:18,049
our engineers tools and knowledge and

852
00:32:15,710 --> 00:32:21,260
awareness at that point because that

853
00:32:18,049 --> 00:32:22,580
takes that huge pile of you know I con

854
00:32:21,260 --> 00:32:24,320
ahead that I showed you a little bit ago

855
00:32:22,580 --> 00:32:26,299
and that makes them security engineers

856
00:32:24,320 --> 00:32:27,889
and now it's not an outsize problem

857
00:32:26,299 --> 00:32:29,510
anymore it's a very tractable problem

858
00:32:27,890 --> 00:32:32,179
that we are ahead of or at least in

859
00:32:29,510 --> 00:32:33,260
lockstep with and it at the very end of

860
00:32:32,179 --> 00:32:34,700
this you see response

861
00:32:33,260 --> 00:32:36,470
so that's your product sturdy ins to

862
00:32:34,700 --> 00:32:38,210
response that's your advisories that's

863
00:32:36,470 --> 00:32:40,399
you know the bug fixes in production the

864
00:32:38,210 --> 00:32:42,649
hundred you know you know bar chart bar

865
00:32:40,399 --> 00:32:44,750
from IBM we want to avoid that and if

866
00:32:42,649 --> 00:32:46,850
you do everything you need to do you get

867
00:32:44,750 --> 00:32:48,679
all the best code out of it and your

868
00:32:46,850 --> 00:32:50,870
amount of response should be a drop in a

869
00:32:48,679 --> 00:32:53,870
bucket so this is the kind of thing that

870
00:32:50,870 --> 00:32:54,739
it's not about just doing everything all

871
00:32:53,870 --> 00:32:57,199
the time

872
00:32:54,740 --> 00:32:59,899
across the entire STL it's really

873
00:32:57,200 --> 00:33:01,940
picking outsized and you know really

874
00:32:59,899 --> 00:33:04,549
force multipliers of where you're gonna

875
00:33:01,940 --> 00:33:05,690
invest and where better to invest in the

876
00:33:04,549 --> 00:33:07,580
people that you work with every day

877
00:33:05,690 --> 00:33:09,020
because the less they come to you for

878
00:33:07,580 --> 00:33:10,939
this random question of that random

879
00:33:09,020 --> 00:33:12,918
question or the more that you build a

880
00:33:10,940 --> 00:33:15,529
security culture within their team when

881
00:33:12,919 --> 00:33:17,000
they hire new people that will cascade

882
00:33:15,529 --> 00:33:19,250
somewhat there might be some you know

883
00:33:17,000 --> 00:33:20,419
attenuation in that signal but overall

884
00:33:19,250 --> 00:33:22,840
you're gonna get a lot better results

885
00:33:20,419 --> 00:33:25,220
than not doing it so doing it like that

886
00:33:22,840 --> 00:33:26,480
and

887
00:33:25,220 --> 00:33:28,909
an industry that's really good at

888
00:33:26,480 --> 00:33:30,650
fetishizing the idea of rock stars

889
00:33:28,909 --> 00:33:33,559
I would I would promote the idea of

890
00:33:30,650 --> 00:33:35,659
orchestras you want composition you want

891
00:33:33,559 --> 00:33:36,799
alignment with different people from

892
00:33:35,659 --> 00:33:38,150
different backgrounds and different

893
00:33:36,799 --> 00:33:40,940
awareness levels and different processes

894
00:33:38,150 --> 00:33:43,159
and if you put people in the right

895
00:33:40,940 --> 00:33:44,870
positions you know I think a lot of

896
00:33:43,159 --> 00:33:46,070
people these days hopefully have gotten

897
00:33:44,870 --> 00:33:47,570
to the point where you don't really hire

898
00:33:46,070 --> 00:33:49,668
necessarily for roles anymore you hire

899
00:33:47,570 --> 00:33:50,960
four people and then you align roles to

900
00:33:49,669 --> 00:33:53,030
them that you think they're gonna be

901
00:33:50,960 --> 00:33:55,400
successful that move along your program

902
00:33:53,030 --> 00:33:57,830
or your team and if we did more of that

903
00:33:55,400 --> 00:33:59,240
especially an application security yeah

904
00:33:57,830 --> 00:34:01,428
you might have you know two or three

905
00:33:59,240 --> 00:34:03,020
really good pen testers but what about

906
00:34:01,429 --> 00:34:04,460
the person with a super deep knowledge

907
00:34:03,020 --> 00:34:06,639
of computer science that can do really

908
00:34:04,460 --> 00:34:08,899
crazy things in the AFL fuzzy right

909
00:34:06,640 --> 00:34:10,550
those are both important roles and those

910
00:34:08,899 --> 00:34:13,040
are both important skill sets and job

911
00:34:10,550 --> 00:34:15,679
types but simply just doing a hundred

912
00:34:13,040 --> 00:34:17,300
static code people or a hundred you know

913
00:34:15,679 --> 00:34:19,040
end of development life cycle pen

914
00:34:17,300 --> 00:34:20,990
testers you're not going to get the same

915
00:34:19,040 --> 00:34:22,129
value as if you intersperse your team

916
00:34:20,989 --> 00:34:28,040
with different skill sets of different

917
00:34:22,129 --> 00:34:29,659
roles simply doing all that is good but

918
00:34:28,040 --> 00:34:31,639
it's really about providing the

919
00:34:29,659 --> 00:34:35,119
opportunities for those things to occur

920
00:34:31,639 --> 00:34:36,530
so if your engineering team has to run

921
00:34:35,119 --> 00:34:38,149
into you in the parking lot to get your

922
00:34:36,530 --> 00:34:40,369
attention it's probably not gonna be

923
00:34:38,149 --> 00:34:41,659
much more effective than it is today so

924
00:34:40,369 --> 00:34:43,429
a couple of things that we you know we

925
00:34:41,659 --> 00:34:45,230
do a duo and I'll dive into a couple of

926
00:34:43,429 --> 00:34:47,869
these for a little bit more time but you

927
00:34:45,230 --> 00:34:49,219
know we have like a slack channel of app

928
00:34:47,869 --> 00:34:52,190
sec they come in they ask a question

929
00:34:49,219 --> 00:34:53,719
either we can triage them real time we

930
00:34:52,190 --> 00:34:55,490
can say hey go go through this process

931
00:34:53,719 --> 00:34:58,069
or we'll follow up with you out-of-band

932
00:34:55,489 --> 00:34:59,810
we also invite external guest speakers

933
00:34:58,070 --> 00:35:01,099
and just give them kind of knowledge

934
00:34:59,810 --> 00:35:03,950
transfer from different points of view

935
00:35:01,099 --> 00:35:05,270
beyond our team and we give them tool

936
00:35:03,950 --> 00:35:09,618
sets and other things that they can take

937
00:35:05,270 --> 00:35:11,300
advantage of directly for engineers that

938
00:35:09,619 --> 00:35:12,770
have done it a las top ten training you

939
00:35:11,300 --> 00:35:14,330
might have seen something like this

940
00:35:12,770 --> 00:35:16,339
where it's the one equals one sequel

941
00:35:14,330 --> 00:35:18,859
injection it's the alert box for

942
00:35:16,339 --> 00:35:20,240
JavaScript and this is all valid I mean

943
00:35:18,859 --> 00:35:21,830
there's nothing wrong with that but I

944
00:35:20,240 --> 00:35:23,598
think if you've gone through a couple

945
00:35:21,830 --> 00:35:26,089
companies you've probably seen these

946
00:35:23,599 --> 00:35:28,280
same examples every time if you've done

947
00:35:26,089 --> 00:35:30,020
like you know a vulnerable web

948
00:35:28,280 --> 00:35:31,369
application by design you've probably

949
00:35:30,020 --> 00:35:34,790
done roughly the same vulnerability

950
00:35:31,369 --> 00:35:37,130
classes in the same exploitation at duo

951
00:35:34,790 --> 00:35:38,960
in our intro to app set class we do

952
00:35:37,130 --> 00:35:40,430
things like talking about what have

953
00:35:38,960 --> 00:35:41,839
if you have an encrypted session that

954
00:35:40,430 --> 00:35:45,169
you don't have a message authentication

955
00:35:41,839 --> 00:35:46,700
code for now if anyone's had an intro to

956
00:35:45,170 --> 00:35:48,230
AB set class at your company that talks

957
00:35:46,700 --> 00:35:50,390
about something that like that I would

958
00:35:48,230 --> 00:35:51,800
be kind of shocked a lot of people I'd

959
00:35:50,390 --> 00:35:54,078
showed this slide deck to someone and

960
00:35:51,800 --> 00:35:55,550
they said oh that's that's like some

961
00:35:54,079 --> 00:35:57,680
crypto class you have I was like nope

962
00:35:55,550 --> 00:35:59,240
that's just part of the 101 app set

963
00:35:57,680 --> 00:36:01,040
course because we want to challenge

964
00:35:59,240 --> 00:36:02,629
engineers we want to engage them we want

965
00:36:01,040 --> 00:36:04,040
to talk up to them rather than down to

966
00:36:02,630 --> 00:36:06,980
them we want them to meet a bar that

967
00:36:04,040 --> 00:36:08,839
maybe isn't set yet that our that's the

968
00:36:06,980 --> 00:36:10,550
kind of thing that allows us to get

969
00:36:08,839 --> 00:36:11,690
people to come to us to take these

970
00:36:10,550 --> 00:36:13,220
trainings because they've heard good

971
00:36:11,690 --> 00:36:16,430
things about them and they're kind of

972
00:36:13,220 --> 00:36:18,558
bought in a couple quotes up here from

973
00:36:16,430 --> 00:36:20,540
our team from surveys and yes when we do

974
00:36:18,559 --> 00:36:22,220
trainings internally we do surveys we

975
00:36:20,540 --> 00:36:23,750
want their feedback we want to provide

976
00:36:22,220 --> 00:36:24,859
them a better experience and make sure

977
00:36:23,750 --> 00:36:26,270
that we're hitting the things that they

978
00:36:24,859 --> 00:36:27,890
need to know about this is in addition

979
00:36:26,270 --> 00:36:29,300
to the surveys we do when they come

980
00:36:27,890 --> 00:36:31,069
aboard as a team member in the first

981
00:36:29,300 --> 00:36:33,319
place so we've done a bunch of these

982
00:36:31,069 --> 00:36:35,930
courses we've created many of them and

983
00:36:33,319 --> 00:36:37,779
more than that we've never required

984
00:36:35,930 --> 00:36:40,129
anyone to attend it there's not a

985
00:36:37,780 --> 00:36:42,410
required app sect training for any

986
00:36:40,130 --> 00:36:43,750
engineer and this is one of those things

987
00:36:42,410 --> 00:36:46,430
it's a distinction without a difference

988
00:36:43,750 --> 00:36:47,930
when we say there's this great training

989
00:36:46,430 --> 00:36:49,399
we would love to share it with you it's

990
00:36:47,930 --> 00:36:51,470
very engaging it's not we're not gonna

991
00:36:49,400 --> 00:36:52,940
lecture you the whole time we get a

992
00:36:51,470 --> 00:36:55,009
couple people to sign up and do a pilot

993
00:36:52,940 --> 00:36:56,780
and then they start telling their other

994
00:36:55,010 --> 00:36:57,980
engineers and their manager wow that was

995
00:36:56,780 --> 00:36:59,869
a great training for a map psych team

996
00:36:57,980 --> 00:37:02,200
like you all should take it so we get

997
00:36:59,869 --> 00:37:04,790
all these people attending with no

998
00:37:02,200 --> 00:37:06,890
nothing but advocacy we don't do with

999
00:37:04,790 --> 00:37:08,839
threats we don't do it with anything

1000
00:37:06,890 --> 00:37:10,069
that would force their hand they come to

1001
00:37:08,839 --> 00:37:12,529
us because they want to come to us

1002
00:37:10,069 --> 00:37:16,369
because we give good content isn't that

1003
00:37:12,530 --> 00:37:17,720
a crazy idea one of the other things

1004
00:37:16,369 --> 00:37:19,910
we've done is we have office hours so

1005
00:37:17,720 --> 00:37:22,189
once a week in our Austin office in an

1006
00:37:19,910 --> 00:37:24,049
hour Ann Arbor office via WebEx for

1007
00:37:22,190 --> 00:37:25,700
remote employees we have office hours

1008
00:37:24,049 --> 00:37:27,200
you can come in you can talk to us you

1009
00:37:25,700 --> 00:37:29,328
can ask us a question you can have us

1010
00:37:27,200 --> 00:37:31,910
look at code whatever you want to do and

1011
00:37:29,329 --> 00:37:33,220
just one example up here where we had

1012
00:37:31,910 --> 00:37:36,529
someone come in they asked a very good

1013
00:37:33,220 --> 00:37:38,118
logical important question but we didn't

1014
00:37:36,530 --> 00:37:40,040
know why they were asking it and we

1015
00:37:38,119 --> 00:37:41,480
pulled back kind of the layers and we

1016
00:37:40,040 --> 00:37:43,520
decided that actually oh we weren't

1017
00:37:41,480 --> 00:37:45,049
aware of that feature let's look at your

1018
00:37:43,520 --> 00:37:46,700
design and when we looked at the design

1019
00:37:45,049 --> 00:37:48,770
we actually had we realized that we had

1020
00:37:46,700 --> 00:37:50,390
a refactor of the design so simply by

1021
00:37:48,770 --> 00:37:52,710
giving the opportunity to come to us in

1022
00:37:50,390 --> 00:37:54,509
the first place we got a we I guess

1023
00:37:52,710 --> 00:37:55,890
not got ahead of a problem but we got

1024
00:37:54,510 --> 00:37:58,230
ahead of the problem the sense that they

1025
00:37:55,890 --> 00:38:00,390
didn't ship the code they could refactor

1026
00:37:58,230 --> 00:38:01,980
for a much cheaper cost by just simply

1027
00:38:00,390 --> 00:38:05,040
being available and being kind of

1028
00:38:01,980 --> 00:38:07,890
welcoming and everything we do is in

1029
00:38:05,040 --> 00:38:10,050
their world so when we find an issue we

1030
00:38:07,890 --> 00:38:12,089
file it in the issue tracker for them we

1031
00:38:10,050 --> 00:38:14,160
file it in terms we give context we give

1032
00:38:12,089 --> 00:38:16,380
scope we give so you know solution ideas

1033
00:38:14,160 --> 00:38:18,509
but we never dictate we always kind of

1034
00:38:16,380 --> 00:38:20,700
go hey maybe over here maybe over here

1035
00:38:18,510 --> 00:38:22,500
do this or that and then when they start

1036
00:38:20,700 --> 00:38:27,540
idat on on their solution we help them

1037
00:38:22,500 --> 00:38:29,520
out so Fletcher is going to talk a

1038
00:38:27,540 --> 00:38:31,170
little bit more about educational

1039
00:38:29,520 --> 00:38:33,240
modalities and how people actually learn

1040
00:38:31,170 --> 00:38:35,300
and how maybe we can address that bet

1041
00:38:33,240 --> 00:38:37,770
you a little bit better thanks Perry

1042
00:38:35,300 --> 00:38:41,099
yeah so to take a step back and just

1043
00:38:37,770 --> 00:38:42,570
talk about learning in general the ICAP

1044
00:38:41,099 --> 00:38:44,609
framework is a really common way of

1045
00:38:42,570 --> 00:38:47,070
thinking about learning and you can kind

1046
00:38:44,609 --> 00:38:49,589
of view it as a hierarchy from from

1047
00:38:47,070 --> 00:38:52,080
worst to best options in terms that in

1048
00:38:49,589 --> 00:38:54,810
terms of engaging students in the

1049
00:38:52,080 --> 00:38:56,609
learning process typically with security

1050
00:38:54,810 --> 00:38:59,520
education where we're at that bottom

1051
00:38:56,609 --> 00:39:01,920
tier entirely passive watch this video

1052
00:38:59,520 --> 00:39:04,290
and maybe through as Moses you'll take

1053
00:39:01,920 --> 00:39:06,240
in some of the right lessons whereas as

1054
00:39:04,290 --> 00:39:08,700
we keep engaging people more in the

1055
00:39:06,240 --> 00:39:11,160
process answering questions and ideally

1056
00:39:08,700 --> 00:39:13,379
solving hands-on challenges still guided

1057
00:39:11,160 --> 00:39:15,270
with feedback but contributing to the

1058
00:39:13,380 --> 00:39:17,099
process there's a lot more engagement

1059
00:39:15,270 --> 00:39:19,890
there's a lot more deep learning that's

1060
00:39:17,099 --> 00:39:22,140
happening there many of you here know

1061
00:39:19,890 --> 00:39:23,490
how to code to some extent so you know

1062
00:39:22,140 --> 00:39:25,470
how did you learn you you might have

1063
00:39:23,490 --> 00:39:28,140
taken some classes you might have

1064
00:39:25,470 --> 00:39:31,109
watched a video watch some tutorials you

1065
00:39:28,140 --> 00:39:33,060
probably didn't just sit down and read a

1066
00:39:31,109 --> 00:39:35,700
book or have someone talk about coding

1067
00:39:33,060 --> 00:39:37,859
to you and then you could code you had

1068
00:39:35,700 --> 00:39:40,980
to do it you had to practice it and so

1069
00:39:37,859 --> 00:39:42,960
if we want engineers to be writing

1070
00:39:40,980 --> 00:39:44,849
secure code we need them to practice it

1071
00:39:42,960 --> 00:39:47,849
it sounds simple when you put it that

1072
00:39:44,849 --> 00:39:50,880
way but it's really uncommon as a

1073
00:39:47,849 --> 00:39:52,890
strategy have a developer practice

1074
00:39:50,880 --> 00:39:53,970
writing secure code so that they can do

1075
00:39:52,890 --> 00:39:57,299
it in their day job

1076
00:39:53,970 --> 00:39:59,549
I know education as well should be you

1077
00:39:57,300 --> 00:40:02,520
know varied but ongoing and it's it's

1078
00:39:59,550 --> 00:40:04,750
hard to do that kind of training if it's

1079
00:40:02,520 --> 00:40:06,759
an annual requirement

1080
00:40:04,750 --> 00:40:08,650
it's something that only lasts for a few

1081
00:40:06,760 --> 00:40:12,060
hours and then you can kind of forget

1082
00:40:08,650 --> 00:40:14,440
about security for the rest of the year

1083
00:40:12,060 --> 00:40:17,200
instead we end up with a lot of training

1084
00:40:14,440 --> 00:40:20,170
experiences like this generic multimedia

1085
00:40:17,200 --> 00:40:21,970
sit down and watch it and skills

1086
00:40:20,170 --> 00:40:24,760
assessments like this where we say

1087
00:40:21,970 --> 00:40:27,330
multiple-choice tests maybe you can buy

1088
00:40:24,760 --> 00:40:30,730
a rote memorization take in some terms

1089
00:40:27,330 --> 00:40:32,290
but it's not actually practicing secure

1090
00:40:30,730 --> 00:40:35,800
code so it's hard to help you in your

1091
00:40:32,290 --> 00:40:37,570
day job though or at best we tape teach

1092
00:40:35,800 --> 00:40:40,480
engineers how to hack because that's the

1093
00:40:37,570 --> 00:40:42,640
fun part of secure code you know

1094
00:40:40,480 --> 00:40:45,400
allowing them to pop a shell is kind of

1095
00:40:42,640 --> 00:40:47,920
fun to watch but teaching them to patch

1096
00:40:45,400 --> 00:40:49,900
is a separate skill so here you know the

1097
00:40:47,920 --> 00:40:51,700
the common case of let's do an in-person

1098
00:40:49,900 --> 00:40:53,950
workshop then you'll play around with

1099
00:40:51,700 --> 00:40:56,259
Dan vulnerable web app and run sequel

1100
00:40:53,950 --> 00:40:59,919
map and great job you did it now don't

1101
00:40:56,260 --> 00:41:01,840
write code like that we kind of skipped

1102
00:40:59,920 --> 00:41:03,880
the most important step there a lot of

1103
00:41:01,840 --> 00:41:05,890
the time and the lesson that gets taken

1104
00:41:03,880 --> 00:41:07,540
away is of course I'd never write code

1105
00:41:05,890 --> 00:41:09,819
like that that doesn't look like code I

1106
00:41:07,540 --> 00:41:12,279
would write and this one particular

1107
00:41:09,820 --> 00:41:14,230
example I know how to hack it with the

1108
00:41:12,280 --> 00:41:17,710
one equals one and so we're gonna move

1109
00:41:14,230 --> 00:41:19,840
on instead of actually practicing how do

1110
00:41:17,710 --> 00:41:20,920
we patch this up what do we do from here

1111
00:41:19,840 --> 00:41:23,410
what are the trade-offs

1112
00:41:20,920 --> 00:41:25,390
why would someone have written code that

1113
00:41:23,410 --> 00:41:30,720
looks like this in the first place maybe

1114
00:41:25,390 --> 00:41:33,940
they had some good reasons instead as

1115
00:41:30,720 --> 00:41:37,270
busy outnumbered security professionals

1116
00:41:33,940 --> 00:41:39,190
we we end up saying you know you can't

1117
00:41:37,270 --> 00:41:42,400
be trusted to write secure code now

1118
00:41:39,190 --> 00:41:43,990
that's a good mental framework to take

1119
00:41:42,400 --> 00:41:46,240
as a security professional you shouldn't

1120
00:41:43,990 --> 00:41:47,740
trust anyone to do anything but you

1121
00:41:46,240 --> 00:41:50,350
can't start out the conversation that

1122
00:41:47,740 --> 00:41:51,339
way it's a great quote from the hwacha

1123
00:41:50,350 --> 00:41:54,160
chairman here it's the wrong approach

1124
00:41:51,340 --> 00:41:55,570
it's like going up to a parent saying

1125
00:41:54,160 --> 00:41:58,060
the child's ugly and expecting a

1126
00:41:55,570 --> 00:42:00,730
conversation starting with you can't do

1127
00:41:58,060 --> 00:42:03,610
that not a great way to start that

1128
00:42:00,730 --> 00:42:05,410
conversation so instead as Mark

1129
00:42:03,610 --> 00:42:07,860
mentioned we need to engage with

1130
00:42:05,410 --> 00:42:10,720
engineers as peers on their level and

1131
00:42:07,860 --> 00:42:15,280
speak to them as the smart intelligent

1132
00:42:10,720 --> 00:42:17,620
capable developers that they are we have

1133
00:42:15,280 --> 00:42:18,790
seen some progress in terms of tools

1134
00:42:17,620 --> 00:42:21,940
like NPM

1135
00:42:18,790 --> 00:42:25,630
here companies like snick or recently

1136
00:42:21,940 --> 00:42:28,000
github alerts all of these are you know

1137
00:42:25,630 --> 00:42:30,610
integrating more closely into the

1138
00:42:28,000 --> 00:42:32,740
engineers day-to-day again these are

1139
00:42:30,610 --> 00:42:34,600
just for for third-party vulnerabilities

1140
00:42:32,740 --> 00:42:39,040
not necessarily the own code that you

1141
00:42:34,600 --> 00:42:43,470
write but starting to to give folks more

1142
00:42:39,040 --> 00:42:45,820
feedback within their workflow this is a

1143
00:42:43,470 --> 00:42:49,720
quick screenshot and will show a little

1144
00:42:45,820 --> 00:42:52,750
demo later of an actual duo lab in

1145
00:42:49,720 --> 00:42:54,399
Hunter - the most important part as we

1146
00:42:52,750 --> 00:42:56,110
keep hammering on is is to give

1147
00:42:54,400 --> 00:42:58,930
developers a chance to actually practice

1148
00:42:56,110 --> 00:43:01,720
writing secure code and to give them

1149
00:42:58,930 --> 00:43:03,339
guidance and feedback along the way so

1150
00:43:01,720 --> 00:43:05,799
this is part of what we'll be releasing

1151
00:43:03,340 --> 00:43:07,360
to the community where you can see on

1152
00:43:05,800 --> 00:43:10,330
the right side here a developer is

1153
00:43:07,360 --> 00:43:12,150
actually tasked with patching up the

1154
00:43:10,330 --> 00:43:14,440
code of a vulnerable application and

1155
00:43:12,150 --> 00:43:16,060
they're given automated feedback through

1156
00:43:14,440 --> 00:43:17,980
that process on whether their fix is

1157
00:43:16,060 --> 00:43:19,690
working or not but because it's a real

1158
00:43:17,980 --> 00:43:25,840
app they can actually play around with

1159
00:43:19,690 --> 00:43:27,640
that and see what's possible so we're

1160
00:43:25,840 --> 00:43:29,230
gonna talk a little bit more about

1161
00:43:27,640 --> 00:43:32,319
growing the community I'll hand it over

1162
00:43:29,230 --> 00:43:34,630
to de Merc so like all good conference

1163
00:43:32,320 --> 00:43:36,280
talks everyone's that sounds great for

1164
00:43:34,630 --> 00:43:38,200
your company what are we gonna do about

1165
00:43:36,280 --> 00:43:41,140
all this so one of things we're gonna be

1166
00:43:38,200 --> 00:43:43,180
doing to really help kind of see the

1167
00:43:41,140 --> 00:43:44,230
ability to maybe create a program that's

1168
00:43:43,180 --> 00:43:45,310
a little bit different or if you don't

1169
00:43:44,230 --> 00:43:45,790
have an apps like team in the first

1170
00:43:45,310 --> 00:43:47,650
place

1171
00:43:45,790 --> 00:43:49,060
but you have a security function and

1172
00:43:47,650 --> 00:43:51,100
you're looking for resources that are

1173
00:43:49,060 --> 00:43:52,509
maybe more available do a security

1174
00:43:51,100 --> 00:43:54,130
internally I mentioned we do trainings

1175
00:43:52,510 --> 00:43:56,290
we've built those trainings from scratch

1176
00:43:54,130 --> 00:43:58,330
ground up on the curriculum and content

1177
00:43:56,290 --> 00:44:01,150
that we think is important to developers

1178
00:43:58,330 --> 00:44:03,009
the the first time we've built a class

1179
00:44:01,150 --> 00:44:04,420
it was our intro to app set course and I

1180
00:44:03,010 --> 00:44:06,700
sat down with my team which is very

1181
00:44:04,420 --> 00:44:08,950
small at the time and basically the only

1182
00:44:06,700 --> 00:44:11,140
ground rule was we will never mention or

1183
00:44:08,950 --> 00:44:13,330
talk about the OWASP top ten today so we

1184
00:44:11,140 --> 00:44:15,100
did an outsize exercise of look at all

1185
00:44:13,330 --> 00:44:17,110
the resources look at bones we've had

1186
00:44:15,100 --> 00:44:19,299
internally look at libraries we use

1187
00:44:17,110 --> 00:44:20,650
let's come up with a list of things that

1188
00:44:19,300 --> 00:44:22,510
we care about and that we think

1189
00:44:20,650 --> 00:44:25,060
engineer's will want to know about that

1190
00:44:22,510 --> 00:44:26,350
are part of duo and what we ended up

1191
00:44:25,060 --> 00:44:27,970
with is a train that we've been giving

1192
00:44:26,350 --> 00:44:30,160
for I think about 18 months now really

1193
00:44:27,970 --> 00:44:32,629
good results we refine it and as we go

1194
00:44:30,160 --> 00:44:34,399
we also have an advanced app set course

1195
00:44:32,630 --> 00:44:35,960
so just kind of taking the next level

1196
00:44:34,400 --> 00:44:37,790
for a lot of our engineers so that if

1197
00:44:35,960 --> 00:44:39,890
they like the contour from the first

1198
00:44:37,790 --> 00:44:42,320
class and they again advocate for it now

1199
00:44:39,890 --> 00:44:44,480
they have another opportunity so we're

1200
00:44:42,320 --> 00:44:46,730
gonna be releasing our internally built

1201
00:44:44,480 --> 00:44:48,170
intro in advanced apps up courses as

1202
00:44:46,730 --> 00:44:51,500
part of cybersecurity awareness month in

1203
00:44:48,170 --> 00:44:54,410
October but that courseware has a lot of

1204
00:44:51,500 --> 00:44:56,600
lab so over 20 labs across the two

1205
00:44:54,410 --> 00:44:58,100
courses within that one or two platform

1206
00:44:56,600 --> 00:44:59,569
so when we give a little bit of lecture

1207
00:44:58,100 --> 00:45:01,940
we give some context we give some

1208
00:44:59,570 --> 00:45:03,920
education then the engineers sit down

1209
00:45:01,940 --> 00:45:05,660
and do a lesson they exploit the code

1210
00:45:03,920 --> 00:45:07,520
and they patch the code so we're trying

1211
00:45:05,660 --> 00:45:09,170
to give real-time kind of awareness and

1212
00:45:07,520 --> 00:45:11,360
feedback we're trying to engage

1213
00:45:09,170 --> 00:45:13,310
developers the way they work and we're

1214
00:45:11,360 --> 00:45:15,080
trying to create like a relationship

1215
00:45:13,310 --> 00:45:17,060
between the lecture that we presents and

1216
00:45:15,080 --> 00:45:19,069
the lessons that we're providing them

1217
00:45:17,060 --> 00:45:20,540
these are things that within your

1218
00:45:19,070 --> 00:45:22,280
organization will provide speaker notes

1219
00:45:20,540 --> 00:45:24,980
will give some lab guides where relevant

1220
00:45:22,280 --> 00:45:26,540
and you know certainly this won't solve

1221
00:45:24,980 --> 00:45:28,280
all problems for all companies and the

1222
00:45:26,540 --> 00:45:30,320
languages we use or the kinds of lessons

1223
00:45:28,280 --> 00:45:31,940
won't be applicable but we're also want

1224
00:45:30,320 --> 00:45:33,500
to open this to the community to provide

1225
00:45:31,940 --> 00:45:34,850
a little bit more of a chance there are

1226
00:45:33,500 --> 00:45:37,310
other great companies like Pedro duty

1227
00:45:34,850 --> 00:45:39,230
that have released content on like their

1228
00:45:37,310 --> 00:45:40,850
apps of course for instance so we think

1229
00:45:39,230 --> 00:45:42,560
just there's not enough content there's

1230
00:45:40,850 --> 00:45:44,960
not enough visibility into what actual

1231
00:45:42,560 --> 00:45:45,950
real programs are doing in the world and

1232
00:45:44,960 --> 00:45:48,020
we just want to help see the pot a

1233
00:45:45,950 --> 00:45:50,120
little bit more to provide a better

1234
00:45:48,020 --> 00:45:52,400
outcome as part of the hundred two

1235
00:45:50,120 --> 00:45:53,750
platform we've created seven custom

1236
00:45:52,400 --> 00:45:55,250
lessons so this isn't kind of in the

1237
00:45:53,750 --> 00:45:57,110
core platform these are things that

1238
00:45:55,250 --> 00:45:59,060
we've built because we found it a

1239
00:45:57,110 --> 00:46:00,740
relevant to our engineer that they would

1240
00:45:59,060 --> 00:46:02,900
benefit from or kinds of bug classes

1241
00:46:00,740 --> 00:46:04,160
that we didn't see coverage for so we're

1242
00:46:02,900 --> 00:46:05,450
also going to be open sourcing these

1243
00:46:04,160 --> 00:46:07,700
we're gonna be putting these on github

1244
00:46:05,450 --> 00:46:09,950
we hope other participants in the

1245
00:46:07,700 --> 00:46:12,410
community will also build some lessons

1246
00:46:09,950 --> 00:46:13,790
release them open source and just kind

1247
00:46:12,410 --> 00:46:15,200
of keep that curriculum up to date

1248
00:46:13,790 --> 00:46:17,060
because again when we look at things

1249
00:46:15,200 --> 00:46:18,770
like the top 10 and we see vulnerability

1250
00:46:17,060 --> 00:46:20,600
classes that are either a not

1251
00:46:18,770 --> 00:46:22,610
represented or B not gonna be talked

1252
00:46:20,600 --> 00:46:24,049
about for three years when that crazy

1253
00:46:22,610 --> 00:46:25,850
new sam'l vulnerability comes out

1254
00:46:24,050 --> 00:46:28,400
wouldn't you like a challenge the next

1255
00:46:25,850 --> 00:46:30,259
week to actually tell your engineers

1256
00:46:28,400 --> 00:46:32,210
about the real-time risk that's facing

1257
00:46:30,260 --> 00:46:33,410
them as engineers and the only way we're

1258
00:46:32,210 --> 00:46:35,840
gonna get to that idea of time to

1259
00:46:33,410 --> 00:46:38,450
education and reduce it down to a kind

1260
00:46:35,840 --> 00:46:40,910
of important timeline is by having a

1261
00:46:38,450 --> 00:46:42,950
capability to do this on our timeline

1262
00:46:40,910 --> 00:46:44,299
our schedule the things that matter to

1263
00:46:42,950 --> 00:46:47,589
your engineers don't have to be two

1264
00:46:44,300 --> 00:46:47,590
years down the road they can be tomorrow

1265
00:46:47,890 --> 00:46:52,670
so before we wrap up we just wanted to

1266
00:46:50,410 --> 00:46:54,950
show a quick example of this in action

1267
00:46:52,670 --> 00:46:57,410
not a live demo I have not prayed to the

1268
00:46:54,950 --> 00:47:00,470
appropriate gods but this is an example

1269
00:46:57,410 --> 00:47:03,259
of one of duo's labs where they've

1270
00:47:00,470 --> 00:47:06,049
they've cloned essentially a small

1271
00:47:03,260 --> 00:47:08,060
Python flask application intentionally

1272
00:47:06,050 --> 00:47:09,770
vulnerable into the hunter to platform

1273
00:47:08,060 --> 00:47:13,400
to give you sort of a sandbox to play

1274
00:47:09,770 --> 00:47:15,620
around with it this is a simple bank

1275
00:47:13,400 --> 00:47:19,100
transfer type of application where you

1276
00:47:15,620 --> 00:47:23,509
interact over an API so hopefully this

1277
00:47:19,100 --> 00:47:25,580
video there we go

1278
00:47:23,510 --> 00:47:27,230
this is about replay attacks again not

1279
00:47:25,580 --> 00:47:31,040
something that you would typically cover

1280
00:47:27,230 --> 00:47:34,280
in an intro type of class but we're

1281
00:47:31,040 --> 00:47:36,590
going to start by exploiting this this

1282
00:47:34,280 --> 00:47:38,120
simple application you can see step by

1283
00:47:36,590 --> 00:47:39,770
step instructions on the left

1284
00:47:38,120 --> 00:47:42,650
a real terminal where you're interacting

1285
00:47:39,770 --> 00:47:44,360
with a server on the right side and the

1286
00:47:42,650 --> 00:47:47,210
user is just starting out with sort of a

1287
00:47:44,360 --> 00:47:48,710
toy example there's no authentication so

1288
00:47:47,210 --> 00:47:51,800
they can just keep transferring money

1289
00:47:48,710 --> 00:47:54,200
for any user along the way but this is a

1290
00:47:51,800 --> 00:47:57,620
fully functional API so they build out

1291
00:47:54,200 --> 00:48:00,830
you know registering a user this will

1292
00:47:57,620 --> 00:48:02,779
pop up with the browsable api of this

1293
00:48:00,830 --> 00:48:05,720
set of this application that's been spun

1294
00:48:02,780 --> 00:48:08,090
up just for them login that user and

1295
00:48:05,720 --> 00:48:10,000
play around with what's possible on the

1296
00:48:08,090 --> 00:48:13,550
different endpoints of this application

1297
00:48:10,000 --> 00:48:15,860
from there they get to hack it so you're

1298
00:48:13,550 --> 00:48:17,960
actually performing a replay attack now

1299
00:48:15,860 --> 00:48:20,330
again we're not teaching you to be an

1300
00:48:17,960 --> 00:48:22,940
expert pen tester so we've given some

1301
00:48:20,330 --> 00:48:24,560
starter scripts in terms of automating

1302
00:48:22,940 --> 00:48:26,540
some of this through a little bit of

1303
00:48:24,560 --> 00:48:28,700
Python but it's still up to the user to

1304
00:48:26,540 --> 00:48:30,529
to go through what this means how it

1305
00:48:28,700 --> 00:48:33,770
works and actually go through the

1306
00:48:30,530 --> 00:48:36,740
process of in this case replaying their

1307
00:48:33,770 --> 00:48:38,360
own user session to get more sensitive

1308
00:48:36,740 --> 00:48:40,549
info about other users in the database

1309
00:48:38,360 --> 00:48:42,440
and this is giving them feedback

1310
00:48:40,550 --> 00:48:44,750
throughout the process so if they want

1311
00:48:42,440 --> 00:48:48,740
to try this a different way they can do

1312
00:48:44,750 --> 00:48:51,170
so finally we patch it up so we're

1313
00:48:48,740 --> 00:48:53,209
actually practicing here writing secure

1314
00:48:51,170 --> 00:48:55,910
code we'll give some snippets some

1315
00:48:53,210 --> 00:48:57,080
suggestions of how to do this in this

1316
00:48:55,910 --> 00:49:00,348
case we're adding a little bit of

1317
00:48:57,080 --> 00:49:02,538
randomness to to the hash of what gets

1318
00:49:00,349 --> 00:49:05,749
for a request and then we test it out

1319
00:49:02,539 --> 00:49:09,410
and see that that in fact prevented the

1320
00:49:05,749 --> 00:49:11,959
hack that we were trying before now of

1321
00:49:09,410 --> 00:49:14,089
course that's not a perfect solution and

1322
00:49:11,960 --> 00:49:16,130
so there's there's also room at the end

1323
00:49:14,089 --> 00:49:18,470
for additional trade-offs you know it's

1324
00:49:16,130 --> 00:49:22,999
it's all about defense-in-depth it's all

1325
00:49:18,470 --> 00:49:24,950
about what is the the right patch or the

1326
00:49:22,999 --> 00:49:26,749
right security a set of security

1327
00:49:24,950 --> 00:49:29,058
controls for this particular situation

1328
00:49:26,749 --> 00:49:31,160
and because it's a real app you can

1329
00:49:29,059 --> 00:49:33,529
continue to play around with that and

1330
00:49:31,160 --> 00:49:36,078
exercise for the reader of you you can

1331
00:49:33,529 --> 00:49:40,460
try out other patches try out other ways

1332
00:49:36,079 --> 00:49:43,819
to exploit so we encourage you to join

1333
00:49:40,460 --> 00:49:45,710
us as Mark mentioned you know we'll be

1334
00:49:43,819 --> 00:49:47,989
releasing some of these labs as well as

1335
00:49:45,710 --> 00:49:49,819
the other training materials and we

1336
00:49:47,989 --> 00:49:52,940
encourage you to contribute your own

1337
00:49:49,819 --> 00:49:56,150
examples as well we have a link down

1338
00:49:52,940 --> 00:50:00,380
here that will have our speaker our

1339
00:49:56,150 --> 00:50:02,749
slide deck to download as well as you

1340
00:50:00,380 --> 00:50:05,660
can and be informed of when we release

1341
00:50:02,749 --> 00:50:08,930
this and I'll hand it off to mark to

1342
00:50:05,660 --> 00:50:10,759
wrap up great well thanks for finishing

1343
00:50:08,930 --> 00:50:12,200
up your blackout with us we appreciate

1344
00:50:10,759 --> 00:50:14,660
you staying not going to get dinner or

1345
00:50:12,200 --> 00:50:16,939
not getting ready for the party so with

1346
00:50:14,660 --> 00:50:19,009
the kind of curriculum we talked about

1347
00:50:16,940 --> 00:50:20,359
today we again hope to kind of get the

1348
00:50:19,009 --> 00:50:21,829
process started for your organization's

1349
00:50:20,359 --> 00:50:24,078
it's a it's a tough challenge to do this

1350
00:50:21,829 --> 00:50:25,279
from scratch so we're gonna see the pot

1351
00:50:24,079 --> 00:50:27,440
a little bit to get you farther ahead

1352
00:50:25,279 --> 00:50:29,329
but we look forward to having you sign

1353
00:50:27,440 --> 00:50:31,039
up let us know what you think of the

1354
00:50:29,329 --> 00:50:32,420
talk view your feedback forms and we're

1355
00:50:31,039 --> 00:50:33,589
gonna go ahead over to the wrap-up room

1356
00:50:32,420 --> 00:50:34,880
so if you want to talk a little bit more

1357
00:50:33,589 --> 00:50:36,380
about this topic what your

1358
00:50:34,880 --> 00:50:37,999
organization's are doing or kind of

1359
00:50:36,380 --> 00:50:39,469
other perspectives we have in this topic

1360
00:50:37,999 --> 00:50:41,479
we'd love to chat little bit more so

1361
00:50:39,469 --> 00:50:44,079
again I'm mark this is Fletcher and

1362
00:50:41,479 --> 00:50:44,078
thank you for your time

1363
00:50:47,990 --> 00:50:52,290
[Applause]

