1
00:00:00,000 --> 00:00:09,389
and now click once and you're in morning

2
00:00:08,910 --> 00:00:11,040
everyone

3
00:00:09,389 --> 00:00:12,809
so I'm William Burke and today we're

4
00:00:11,040 --> 00:00:16,980
gonna talk about how you can tie a / FM

5
00:00:12,809 --> 00:00:18,150
s into your offensive operations so

6
00:00:16,980 --> 00:00:19,980
we'll kick things off with a real quick

7
00:00:18,150 --> 00:00:21,570
introduction and then from there we'll

8
00:00:19,980 --> 00:00:22,800
give some background some context as to

9
00:00:21,570 --> 00:00:23,990
what pushed us to do this research in

10
00:00:22,800 --> 00:00:26,010
the first place

11
00:00:23,990 --> 00:00:27,720
from there I'll give an overview of

12
00:00:26,010 --> 00:00:30,029
click once as a whole and how a / FM s

13
00:00:27,720 --> 00:00:31,619
ties into that and then we'll talk about

14
00:00:30,029 --> 00:00:33,059
how you can tie a / FM s into your

15
00:00:31,619 --> 00:00:35,090
fishing campaigns use it for some other

16
00:00:33,059 --> 00:00:36,989
things such as your sea - management

17
00:00:35,090 --> 00:00:37,980
after that we'll do a little bit of

18
00:00:36,989 --> 00:00:39,540
talking about how it fits in the

19
00:00:37,980 --> 00:00:40,769
defensive side of the house in terms of

20
00:00:39,540 --> 00:00:42,480
how well you can look out for there and

21
00:00:40,770 --> 00:00:45,210
then what we have time we'll wrap up

22
00:00:42,480 --> 00:00:49,099
with some questions as well as for

23
00:00:45,210 --> 00:00:51,420
myself as mentioned William Burke now

24
00:00:49,100 --> 00:00:53,399
thankfully this briefing template has a

25
00:00:51,420 --> 00:00:54,480
gigantic picture of me up there so you

26
00:00:53,399 --> 00:00:56,190
notice isn't some grand social

27
00:00:54,480 --> 00:00:59,099
engineering experiment but I've got

28
00:00:56,190 --> 00:01:01,260
about 15 years across the Intel world

29
00:00:59,100 --> 00:01:03,000
and InfoSec world with a military

30
00:01:01,260 --> 00:01:04,349
background private sector and then

31
00:01:03,000 --> 00:01:06,780
currently working in the public sector

32
00:01:04,349 --> 00:01:08,640
with the cyber security and instruction

33
00:01:06,780 --> 00:01:11,220
Security Agency or sizzurp as a Red Team

34
00:01:08,640 --> 00:01:13,650
Lead there I also do course of elements

35
00:01:11,220 --> 00:01:17,970
and education at Marymount University as

36
00:01:13,650 --> 00:01:21,390
an adjunct professor there so the end of

37
00:01:17,970 --> 00:01:24,840
the Golden Age and what I'm referring to

38
00:01:21,390 --> 00:01:26,369
here is way back when and we're talking

39
00:01:24,840 --> 00:01:29,009
about InfoSec time here so that's about

40
00:01:26,369 --> 00:01:31,409
4 years ago it was much more difficult

41
00:01:29,009 --> 00:01:34,130
comparatively to do fishing and get that

42
00:01:31,409 --> 00:01:37,950
initial code execution compared to today

43
00:01:34,130 --> 00:01:40,079
so back then you could for example just

44
00:01:37,950 --> 00:01:42,329
take a PowerShell one-liner throw in a

45
00:01:40,079 --> 00:01:44,729
bat pile drop it in a word dogs go Ellie

46
00:01:42,329 --> 00:01:46,320
and then some kind toll on the office on

47
00:01:44,729 --> 00:01:47,759
the other side of the wire will open

48
00:01:46,320 --> 00:01:50,309
that right up for you and then give you

49
00:01:47,759 --> 00:01:51,899
initial access in their hosts but as

50
00:01:50,310 --> 00:01:53,310
time ticked on things got a little more

51
00:01:51,899 --> 00:01:55,979
difficult to actually get that code

52
00:01:53,310 --> 00:01:57,719
execution so if I Windows Defender got

53
00:01:55,979 --> 00:01:59,460
better anti-virus got a bit better at

54
00:01:57,719 --> 00:02:01,408
detecting you know when things are

55
00:01:59,460 --> 00:02:03,539
coming through even things like Gmail

56
00:02:01,409 --> 00:02:04,829
can detect a malicious attachment or

57
00:02:03,540 --> 00:02:06,930
link right when it's attached in or

58
00:02:04,829 --> 00:02:08,910
right when it's sent so there were a lot

59
00:02:06,930 --> 00:02:10,379
more barriers to success in order to

60
00:02:08,910 --> 00:02:12,599
actually get that code execution on the

61
00:02:10,378 --> 00:02:15,659
other side

62
00:02:12,599 --> 00:02:17,969
so we needed a new method to get that

63
00:02:15,659 --> 00:02:19,709
code execution that didn't get those

64
00:02:17,969 --> 00:02:22,590
blocks that the older methods tend to do

65
00:02:19,709 --> 00:02:24,930
these days so we needed something that

66
00:02:22,590 --> 00:02:26,459
can work on Windows 7 fully patched

67
00:02:24,930 --> 00:02:27,749
Windows 10 fully patched because those

68
00:02:26,459 --> 00:02:30,540
are typically the system's will land on

69
00:02:27,749 --> 00:02:32,870
out in the wild had that be completely

70
00:02:30,540 --> 00:02:34,920
patched up a defender had to be enabled

71
00:02:32,870 --> 00:02:37,290
antivirus we tested a couple of those as

72
00:02:34,920 --> 00:02:38,280
well and make sure it got past those and

73
00:02:37,290 --> 00:02:40,319
we looked at a couple different methods

74
00:02:38,280 --> 00:02:43,079
to get that execution and we each have

75
00:02:40,319 --> 00:02:44,849
our preference so personally I'm very

76
00:02:43,079 --> 00:02:46,980
partial to Ellie's I like being able to

77
00:02:44,849 --> 00:02:48,810
drop in a word doc and have that extra

78
00:02:46,980 --> 00:02:50,608
bit of time to really add some digital

79
00:02:48,810 --> 00:02:51,870
details to the campaign to entice that

80
00:02:50,609 --> 00:02:53,790
end user really click that attachment

81
00:02:51,870 --> 00:02:55,019
but some people like the you know

82
00:02:53,790 --> 00:02:56,429
hyperlink some people like direct

83
00:02:55,019 --> 00:02:57,480
attachment so we kind of worked around a

84
00:02:56,430 --> 00:03:00,659
couple different things to see what we

85
00:02:57,480 --> 00:03:02,638
could do from there and the big focus of

86
00:03:00,659 --> 00:03:04,500
what we were looking for here was the

87
00:03:02,639 --> 00:03:06,540
actual execution of the code the

88
00:03:04,500 --> 00:03:09,150
delivery of the code now

89
00:03:06,540 --> 00:03:11,548
what was being sent the payload needed

90
00:03:09,150 --> 00:03:13,319
to be able to be swappable so we need to

91
00:03:11,549 --> 00:03:14,879
be able to change what payload we're

92
00:03:13,319 --> 00:03:17,310
sending but still have a reliable

93
00:03:14,879 --> 00:03:20,250
delivery and execution method to get

94
00:03:17,310 --> 00:03:22,199
that code over there so based on those

95
00:03:20,250 --> 00:03:26,220
requirements were to really kick things

96
00:03:22,199 --> 00:03:27,060
off here so now as mentioned I really

97
00:03:26,220 --> 00:03:29,220
like Oh Alize

98
00:03:27,060 --> 00:03:30,629
I like that additional layer of story

99
00:03:29,220 --> 00:03:32,370
crafting that that we get with that

100
00:03:30,629 --> 00:03:35,009
method so that was the path that I

101
00:03:32,370 --> 00:03:37,109
started going down first and Matt Nelson

102
00:03:35,009 --> 00:03:39,328
had some relatively recent research on

103
00:03:37,109 --> 00:03:40,949
that so digging through that I started

104
00:03:39,329 --> 00:03:42,959
looking at how he discovered the setting

105
00:03:40,949 --> 00:03:44,699
content ms file type and was able to

106
00:03:42,959 --> 00:03:46,560
leverage that for Oh Alize and kind of

107
00:03:44,699 --> 00:03:47,879
started working down a somewhat similar

108
00:03:46,560 --> 00:03:50,790
path in terms of that initial research

109
00:03:47,879 --> 00:03:52,739
so I took the list of Elize that are our

110
00:03:50,790 --> 00:03:55,530
sorry the file types that are blocked as

111
00:03:52,739 --> 00:03:58,379
Oh Alize and then spun up a fresh wind

112
00:03:55,530 --> 00:04:01,620
10 image and worked through and sort of

113
00:03:58,379 --> 00:04:03,569
cross-referencing what types of file

114
00:04:01,620 --> 00:04:05,579
types are permitted as Oh Ellie's and

115
00:04:03,569 --> 00:04:07,108
which ones have any kind of interest to

116
00:04:05,579 --> 00:04:08,819
me and then what is actually the engine

117
00:04:07,109 --> 00:04:12,900
that runs them whenever these file types

118
00:04:08,819 --> 00:04:14,819
are executed so I worked that down to a

119
00:04:12,900 --> 00:04:16,530
relatively smaller list compared to that

120
00:04:14,819 --> 00:04:18,810
initial list of ones that I was

121
00:04:16,529 --> 00:04:20,369
interested in ones that seem that they

122
00:04:18,810 --> 00:04:22,979
have some potential in terms of getting

123
00:04:20,370 --> 00:04:24,389
that code execution and then as I

124
00:04:22,979 --> 00:04:26,219
started digging a little deeper in them

125
00:04:24,389 --> 00:04:30,970
individually

126
00:04:26,220 --> 00:04:32,680
kind of hit a prep ms after FMS is used

127
00:04:30,970 --> 00:04:35,230
to deploy and run remote web

128
00:04:32,680 --> 00:04:37,360
applications and contains a local remote

129
00:04:35,230 --> 00:04:39,700
link to an application commonly used to

130
00:04:37,360 --> 00:04:41,470
enable links from Windows Start menu so

131
00:04:39,700 --> 00:04:43,120
this kind of told me that there might be

132
00:04:41,470 --> 00:04:44,800
something there so this was kind of a

133
00:04:43,120 --> 00:04:48,070
hit for me in terms of the research path

134
00:04:44,800 --> 00:04:50,200
I was going down so based on that I'm

135
00:04:48,070 --> 00:04:52,270
gonna do a little more digging and find

136
00:04:50,200 --> 00:04:54,460
out there's any prior research on this

137
00:04:52,270 --> 00:04:56,919
and for a prof ms specifically I

138
00:04:54,460 --> 00:04:59,530
couldn't find any prior research on this

139
00:04:56,920 --> 00:05:01,870
being used in a malicious context so I

140
00:04:59,530 --> 00:05:03,760
found a couple old blog posts a couple

141
00:05:01,870 --> 00:05:05,410
of different things referencing it in

142
00:05:03,760 --> 00:05:06,940
terms of operations or what it is I

143
00:05:05,410 --> 00:05:08,950
couldn't find any actual malicious use

144
00:05:06,940 --> 00:05:11,350
now click once which is that bigger

145
00:05:08,950 --> 00:05:12,789
picture thing that runs at / if ms there

146
00:05:11,350 --> 00:05:16,030
was some really good research on click

147
00:05:12,790 --> 00:05:17,140
once in particular so net spy six dubbo

148
00:05:16,030 --> 00:05:19,750
hops they had some really really good

149
00:05:17,140 --> 00:05:20,950
write-ups on click once but the

150
00:05:19,750 --> 00:05:24,430
write-ups that they had focused on

151
00:05:20,950 --> 00:05:26,710
leveraging click once to do online only

152
00:05:24,430 --> 00:05:29,050
running of applications be a dot

153
00:05:26,710 --> 00:05:33,609
application link which is no longer

154
00:05:29,050 --> 00:05:35,770
permitted as a Ola and what I wound up

155
00:05:33,610 --> 00:05:38,620
going down was a very different aspects

156
00:05:35,770 --> 00:05:42,700
of that click once research now

157
00:05:38,620 --> 00:05:44,680
ultimately the success was was met so we

158
00:05:42,700 --> 00:05:47,080
were able to meet our goals we got not

159
00:05:44,680 --> 00:05:48,400
only the methods of execution but also

160
00:05:47,080 --> 00:05:49,630
found out some other really cool things

161
00:05:48,400 --> 00:05:50,770
just from tinkering around that we're

162
00:05:49,630 --> 00:05:54,790
actually able to leverage this for as

163
00:05:50,770 --> 00:05:56,409
well so kind of talked a bit about a

164
00:05:54,790 --> 00:05:57,580
prep ends perform that a couple times

165
00:05:56,410 --> 00:06:00,640
here but how does that actually fit in

166
00:05:57,580 --> 00:06:02,590
to the bigger picture of thing so I'm

167
00:06:00,640 --> 00:06:05,200
going to click once real quick now say

168
00:06:02,590 --> 00:06:08,080
you're your average run-of-the-mill

169
00:06:05,200 --> 00:06:11,050
developer and you have an application

170
00:06:08,080 --> 00:06:12,460
that you want to publish out so you can

171
00:06:11,050 --> 00:06:13,630
push that out to a internal share

172
00:06:12,460 --> 00:06:16,210
external share whatever the case might

173
00:06:13,630 --> 00:06:17,380
be but when you decide to publish your

174
00:06:16,210 --> 00:06:19,989
application you're gonna publish it as

175
00:06:17,380 --> 00:06:21,880
online only or online or offline type of

176
00:06:19,990 --> 00:06:22,870
availability and that compel becomes

177
00:06:21,880 --> 00:06:24,130
important a little bit down the road

178
00:06:22,870 --> 00:06:26,770
once you start talking about how after

179
00:06:24,130 --> 00:06:29,290
FMS comes in this in particular but once

180
00:06:26,770 --> 00:06:30,789
it's published the root directory of

181
00:06:29,290 --> 00:06:32,140
wherever you publish it to will have

182
00:06:30,790 --> 00:06:34,090
these sets of files so the publish that

183
00:06:32,140 --> 00:06:36,280
hm is basically a landing page

184
00:06:34,090 --> 00:06:37,869
it's the done application file helps

185
00:06:36,280 --> 00:06:38,818
click once know where to go to run the

186
00:06:37,870 --> 00:06:41,160
actual applica

187
00:06:38,819 --> 00:06:42,870
setup.exe is a generic installer and

188
00:06:41,160 --> 00:06:44,250
then the application files folder has

189
00:06:42,870 --> 00:06:45,630
all of these supporting files for the

190
00:06:44,250 --> 00:06:47,280
application itself so once this is

191
00:06:45,630 --> 00:06:49,229
published out your average

192
00:06:47,280 --> 00:06:51,809
run-of-the-mill end-user could then go

193
00:06:49,229 --> 00:06:53,520
to either that published at HTML HTM

194
00:06:51,810 --> 00:06:54,800
pull that file down and then run the

195
00:06:53,520 --> 00:06:56,789
application they can run the setup.exe

196
00:06:54,800 --> 00:06:57,900
there's a whole lot of options kind of

197
00:06:56,789 --> 00:06:59,580
becomes choose-your-own-adventure at

198
00:06:57,900 --> 00:07:02,210
that point in terms of how you actually

199
00:06:59,580 --> 00:07:04,109
want to get that application to run so

200
00:07:02,210 --> 00:07:05,419
another key thing to point out is that

201
00:07:04,110 --> 00:07:07,440
when they go to run that application

202
00:07:05,419 --> 00:07:09,030
they'll always get the latest version

203
00:07:07,440 --> 00:07:10,919
tap location so as you make updates to

204
00:07:09,030 --> 00:07:11,969
the application when they go and pull it

205
00:07:10,919 --> 00:07:14,460
down and fire it off they'll get

206
00:07:11,970 --> 00:07:15,599
whatever the latest version is so a

207
00:07:14,460 --> 00:07:17,698
little bit ago I mentioned the

208
00:07:15,599 --> 00:07:19,830
online-only versus online or offline

209
00:07:17,699 --> 00:07:23,210
type of availability in terms of when

210
00:07:19,830 --> 00:07:25,289
you publish it so if it is online only

211
00:07:23,210 --> 00:07:27,570
when they run the application they'll be

212
00:07:25,289 --> 00:07:29,430
prompted with a run button if it's

213
00:07:27,570 --> 00:07:30,690
online or offline they get prompted with

214
00:07:29,430 --> 00:07:33,270
an install button and we'll talk about

215
00:07:30,690 --> 00:07:35,520
the differences why in just a minute but

216
00:07:33,270 --> 00:07:37,590
basically what it boils down to here is

217
00:07:35,520 --> 00:07:39,389
that both of those run that application

218
00:07:37,590 --> 00:07:41,310
they only have to click be run or

219
00:07:39,389 --> 00:07:42,810
install button one time and then the

220
00:07:41,310 --> 00:07:45,090
rest of the application will do its own

221
00:07:42,810 --> 00:07:47,370
thing from there and another note is

222
00:07:45,090 --> 00:07:49,919
that once they approve the installation

223
00:07:47,370 --> 00:07:51,659
of this application when when you're

224
00:07:49,919 --> 00:07:54,210
using online or offline availability any

225
00:07:51,659 --> 00:07:56,580
updates that you push which can be

226
00:07:54,210 --> 00:07:59,780
forced updates will no longer require

227
00:07:56,580 --> 00:08:01,349
approval from the end-user to execute

228
00:07:59,780 --> 00:08:04,258
and that's pretty much that

229
00:08:01,349 --> 00:08:06,120
so we have our method of getting the

230
00:08:04,259 --> 00:08:08,039
application deployed and while I was

231
00:08:06,120 --> 00:08:10,560
setting up my lab images and working

232
00:08:08,039 --> 00:08:14,550
through win 10 I went to install Chrome

233
00:08:10,560 --> 00:08:16,469
and noticed that Internet Explorer was

234
00:08:14,550 --> 00:08:18,240
installed or sorry chrome was installed

235
00:08:16,469 --> 00:08:20,909
through Internet Explorer by a click

236
00:08:18,240 --> 00:08:22,020
once deployment package so just setting

237
00:08:20,909 --> 00:08:23,520
up the lab I came across a real-world

238
00:08:22,020 --> 00:08:26,698
example where click once is actually

239
00:08:23,520 --> 00:08:28,859
used to get things executed so that's

240
00:08:26,699 --> 00:08:31,289
cool and all but how does a paratha mess

241
00:08:28,860 --> 00:08:33,510
specifically actually tie into all this

242
00:08:31,289 --> 00:08:35,429
right so as mentioned we have that

243
00:08:33,510 --> 00:08:39,929
online only in online or offline

244
00:08:35,429 --> 00:08:41,968
availability now an online-only it pulls

245
00:08:39,929 --> 00:08:44,098
those files to a temp directory fires it

246
00:08:41,969 --> 00:08:45,180
off one time it's meant to be a single

247
00:08:44,099 --> 00:08:46,560
time use and then if you want to run the

248
00:08:45,180 --> 00:08:49,020
application again you can rerun that

249
00:08:46,560 --> 00:08:50,459
application where the case might be but

250
00:08:49,020 --> 00:08:52,050
typically with the online only is meant

251
00:08:50,459 --> 00:08:53,880
to be short term use you know

252
00:08:52,050 --> 00:08:56,099
like single time run kind of situation

253
00:08:53,880 --> 00:08:58,380
however an online or offline that's

254
00:08:56,100 --> 00:08:59,550
meant to be for more persistent usage so

255
00:08:58,380 --> 00:09:02,130
you know you're running it somewhat

256
00:08:59,550 --> 00:09:04,890
regularly and in that instance it not

257
00:09:02,130 --> 00:09:06,620
only pulls the the files down to a temp

258
00:09:04,890 --> 00:09:09,780
directory and fires off the application

259
00:09:06,620 --> 00:09:11,970
but it does make two pretty significant

260
00:09:09,780 --> 00:09:13,490
changes as well so one thing is is it

261
00:09:11,970 --> 00:09:16,500
adds as part of the installation process

262
00:09:13,490 --> 00:09:19,170
it adds a registry key under the

263
00:09:16,500 --> 00:09:20,940
uninstall tree so that the end user will

264
00:09:19,170 --> 00:09:24,689
be able to go to the uninstalled GUI and

265
00:09:20,940 --> 00:09:27,990
then use that to understand and also it

266
00:09:24,690 --> 00:09:31,500
adds a shortcut a application reference

267
00:09:27,990 --> 00:09:35,700
file or a premise file under a folder in

268
00:09:31,500 --> 00:09:37,110
the user Start menu so these are some

269
00:09:35,700 --> 00:09:39,090
pretty noticeable changes but we'll talk

270
00:09:37,110 --> 00:09:41,100
about those in just a minute but

271
00:09:39,090 --> 00:09:43,560
specifically regarding a / f ms here

272
00:09:41,100 --> 00:09:45,210
once the app FMS which you can kind of

273
00:09:43,560 --> 00:09:48,150
think is a shortcut to the application

274
00:09:45,210 --> 00:09:50,280
once the app for FMS file is executed

275
00:09:48,150 --> 00:09:52,980
based on how its configured when the

276
00:09:50,280 --> 00:09:54,240
application deployed it can be set so

277
00:09:52,980 --> 00:09:56,100
that it checks into the deployment

278
00:09:54,240 --> 00:09:58,410
server sees if there are any updates to

279
00:09:56,100 --> 00:09:59,880
the application if there are updates it

280
00:09:58,410 --> 00:10:02,010
can be configured to force the

281
00:09:59,880 --> 00:10:03,810
installation of said app tap update to

282
00:10:02,010 --> 00:10:05,640
the application then execute it from

283
00:10:03,810 --> 00:10:07,170
there and if there are any missing files

284
00:10:05,640 --> 00:10:10,530
or anything along those lines it'll pull

285
00:10:07,170 --> 00:10:13,079
all those down as well so if we send an

286
00:10:10,530 --> 00:10:14,790
app for SMS file via email only where

287
00:10:13,080 --> 00:10:17,670
the case might be and someone else

288
00:10:14,790 --> 00:10:18,990
executes sit then the a paratha messed

289
00:10:17,670 --> 00:10:20,670
file will notice that there's no

290
00:10:18,990 --> 00:10:21,960
application like this here let me take

291
00:10:20,670 --> 00:10:23,969
care of that for you I've got your back

292
00:10:21,960 --> 00:10:26,430
now the end user will still need to

293
00:10:23,970 --> 00:10:29,370
approve the execution but once they do

294
00:10:26,430 --> 00:10:31,260
that first initial approval everything

295
00:10:29,370 --> 00:10:34,740
runs from there once again including any

296
00:10:31,260 --> 00:10:36,930
updates past that so how can we leverage

297
00:10:34,740 --> 00:10:39,270
this in phishing campaigns now as

298
00:10:36,930 --> 00:10:41,130
mentioned the actual payload itself is

299
00:10:39,270 --> 00:10:42,750
going to be you know very case depended

300
00:10:41,130 --> 00:10:45,240
very malleable and the focus of what

301
00:10:42,750 --> 00:10:47,700
we're looking for here was the execution

302
00:10:45,240 --> 00:10:49,020
and the delivery of the code now we have

303
00:10:47,700 --> 00:10:50,700
our series of payloads that we use in

304
00:10:49,020 --> 00:10:52,880
our ops and so I use one of those for

305
00:10:50,700 --> 00:10:54,570
testing and it was successful now

306
00:10:52,880 --> 00:10:55,950
another thing to point out though is

307
00:10:54,570 --> 00:10:58,110
that for testing purposes I do have a

308
00:10:55,950 --> 00:10:59,730
code signing cert so if you don't have a

309
00:10:58,110 --> 00:11:01,230
code signing cert and using this out in

310
00:10:59,730 --> 00:11:01,800
the wild then you may run into windows

311
00:11:01,230 --> 00:11:03,780
SmartScreen

312
00:11:01,800 --> 00:11:04,670
so that's one thing to consider as well

313
00:11:03,780 --> 00:11:06,319
in terms of leverage

314
00:11:04,670 --> 00:11:08,420
this in your operations how you do

315
00:11:06,320 --> 00:11:10,610
things however if you deploy the

316
00:11:08,420 --> 00:11:11,689
application internally which is kind of

317
00:11:10,610 --> 00:11:13,280
a whole separate talk but if you do

318
00:11:11,690 --> 00:11:15,200
deploy a internal to their organization

319
00:11:13,280 --> 00:11:16,310
theirs is it there's no need for code

320
00:11:15,200 --> 00:11:19,580
signing certs and it's automatically

321
00:11:16,310 --> 00:11:21,349
trusted and then lastly I mentioned

322
00:11:19,580 --> 00:11:23,480
those two things that I don't like that

323
00:11:21,350 --> 00:11:25,970
it pops that uninstall key registry key

324
00:11:23,480 --> 00:11:28,130
and that it populates those files so we

325
00:11:25,970 --> 00:11:29,300
went through and modified the payload so

326
00:11:28,130 --> 00:11:31,610
that as part of the application

327
00:11:29,300 --> 00:11:33,199
deployment process it goes back and

328
00:11:31,610 --> 00:11:34,970
cleans those things out so they never

329
00:11:33,200 --> 00:11:35,930
actually populate or be visible or are

330
00:11:34,970 --> 00:11:38,930
visible to the end-use in the first

331
00:11:35,930 --> 00:11:39,979
place and I had example code for that in

332
00:11:38,930 --> 00:11:42,380
the white paper that is submitted so

333
00:11:39,980 --> 00:11:44,690
feel free to go take a look at that to

334
00:11:42,380 --> 00:11:46,880
see what that proof-of-concept code

335
00:11:44,690 --> 00:11:48,980
looks like so once you've got all that

336
00:11:46,880 --> 00:11:50,180
in place and you're good to go and so

337
00:11:48,980 --> 00:11:52,460
you've got your payload you got your

338
00:11:50,180 --> 00:11:54,920
cleanup etc you need to actually deploy

339
00:11:52,460 --> 00:11:56,210
that application now a key thing here

340
00:11:54,920 --> 00:11:57,229
and this is where that things kind of

341
00:11:56,210 --> 00:11:59,000
pivoted in a different direction

342
00:11:57,230 --> 00:12:01,430
compared to the prior click once

343
00:11:59,000 --> 00:12:03,800
research was that we are going to

344
00:12:01,430 --> 00:12:07,069
publish as make the available offline

345
00:12:03,800 --> 00:12:08,990
and online and offline as well and for a

346
00:12:07,070 --> 00:12:10,940
prep em s that has to be selected

347
00:12:08,990 --> 00:12:13,310
because the installation process doesn't

348
00:12:10,940 --> 00:12:15,050
take place for online only and you need

349
00:12:13,310 --> 00:12:18,170
that a / FM s file to execute the things

350
00:12:15,050 --> 00:12:21,109
we're looking to do so the so we

351
00:12:18,170 --> 00:12:22,579
published as online and offline and then

352
00:12:21,110 --> 00:12:25,970
you can arbitrarily set whatever version

353
00:12:22,580 --> 00:12:28,250
number you want to set so digging into

354
00:12:25,970 --> 00:12:30,520
the options from there you can specify

355
00:12:28,250 --> 00:12:33,020
the application should check for updates

356
00:12:30,520 --> 00:12:35,180
it should check before the application

357
00:12:33,020 --> 00:12:37,610
starts and here's the minimum version

358
00:12:35,180 --> 00:12:41,180
number that we want to be ran on this

359
00:12:37,610 --> 00:12:42,590
system and that in particular comes into

360
00:12:41,180 --> 00:12:44,510
play once we start talking about that C

361
00:12:42,590 --> 00:12:46,970
to management side of the house so I'll

362
00:12:44,510 --> 00:12:48,470
pause on that for now but that being

363
00:12:46,970 --> 00:12:51,920
said you still need an app for FMS file

364
00:12:48,470 --> 00:12:54,290
descent now you could just deploy it and

365
00:12:51,920 --> 00:12:56,000
then copy and paste out of the shortcut

366
00:12:54,290 --> 00:12:57,500
that populates there but like I just

367
00:12:56,000 --> 00:12:59,240
said we clean up after ourselves so that

368
00:12:57,500 --> 00:13:00,950
never hits in the first place so the

369
00:12:59,240 --> 00:13:02,810
save time of trying to deploy redeploy

370
00:13:00,950 --> 00:13:04,760
modify code etc we can just make our own

371
00:13:02,810 --> 00:13:05,660
so there are four things that are going

372
00:13:04,760 --> 00:13:07,220
to need we need the name of the

373
00:13:05,660 --> 00:13:09,020
application the token the culture and

374
00:13:07,220 --> 00:13:10,160
the architecture the application and you

375
00:13:09,020 --> 00:13:12,770
can basically just put all that together

376
00:13:10,160 --> 00:13:15,530
in line with a URL to the actual

377
00:13:12,770 --> 00:13:16,500
application file itself as you can see

378
00:13:15,530 --> 00:13:18,720
here

379
00:13:16,500 --> 00:13:20,220
and that's all that's all the

380
00:13:18,720 --> 00:13:22,620
information need now that information is

381
00:13:20,220 --> 00:13:24,630
in the daunt application file which you

382
00:13:22,620 --> 00:13:27,150
can find in the application files on the

383
00:13:24,630 --> 00:13:28,710
deployment folder so not too much

384
00:13:27,150 --> 00:13:30,750
digging is necessarily involved but once

385
00:13:28,710 --> 00:13:33,270
you have that data save it single line

386
00:13:30,750 --> 00:13:35,580
you have to save it as utf-16 little

387
00:13:33,270 --> 00:13:36,600
endian format or else it won't work and

388
00:13:35,580 --> 00:13:38,250
i won't tell you why it's not working

389
00:13:36,600 --> 00:13:40,200
that one was an absolute pain to work

390
00:13:38,250 --> 00:13:42,600
through but once you have that there

391
00:13:40,200 --> 00:13:45,090
save it off as a Napper FMS and then

392
00:13:42,600 --> 00:13:47,670
you're good to go that's it simple right

393
00:13:45,090 --> 00:13:49,590
so now we can throw this out we have our

394
00:13:47,670 --> 00:13:52,770
a prep ms file we have our application

395
00:13:49,590 --> 00:13:54,960
deployed and it's ready for delivery so

396
00:13:52,770 --> 00:13:57,569
when it comes to testing the first thing

397
00:13:54,960 --> 00:13:58,830
i'm gonna look at is the laziest way can

398
00:13:57,570 --> 00:14:00,770
i throw it directly an email as an

399
00:13:58,830 --> 00:14:03,180
attachment and the answer is yes so

400
00:14:00,770 --> 00:14:06,390
dropping the RF ms file directly into

401
00:14:03,180 --> 00:14:08,579
Gmail for sending delivery receipt

402
00:14:06,390 --> 00:14:12,569
execution at no point in that process

403
00:14:08,580 --> 00:14:14,190
was it at reflect and to circle back

404
00:14:12,570 --> 00:14:15,570
though I really like Oh Ellie's now

405
00:14:14,190 --> 00:14:16,650
that's what kind of drove this research

406
00:14:15,570 --> 00:14:17,520
from the in the first place so that's

407
00:14:16,650 --> 00:14:19,980
what I really wanted to dig into

408
00:14:17,520 --> 00:14:22,650
personally so we took a look at that and

409
00:14:19,980 --> 00:14:25,260
so we took the RF MMS file dropped it in

410
00:14:22,650 --> 00:14:26,850
the word document as Noah Lee and just

411
00:14:25,260 --> 00:14:28,439
like every other method so the document

412
00:14:26,850 --> 00:14:31,530
was delivered it was received

413
00:14:28,440 --> 00:14:32,820
open executed and had no problem so just

414
00:14:31,530 --> 00:14:34,500
like every other Oh Ellie they need to

415
00:14:32,820 --> 00:14:36,540
click run to actually run the run the

416
00:14:34,500 --> 00:14:39,270
package and then they get prompted with

417
00:14:36,540 --> 00:14:42,180
that click once install option and the

418
00:14:39,270 --> 00:14:45,930
second they click that we have c2 we're

419
00:14:42,180 --> 00:14:47,069
good to go we're established now I know

420
00:14:45,930 --> 00:14:49,410
that the majority people here probably

421
00:14:47,070 --> 00:14:50,460
have seen Oh Elly's in action to know

422
00:14:49,410 --> 00:14:51,930
what they look like and everything along

423
00:14:50,460 --> 00:14:53,790
those lines but I want to show you what

424
00:14:51,930 --> 00:14:56,660
the app or FMS side of the house looks

425
00:14:53,790 --> 00:14:59,370
like from the end users perspective so

426
00:14:56,660 --> 00:15:00,839
going through and pulling down the word

427
00:14:59,370 --> 00:15:02,970
document and this is on the corner quote

428
00:15:00,840 --> 00:15:04,560
and the user's side of the house so as

429
00:15:02,970 --> 00:15:06,360
with every other type of you know Ola

430
00:15:04,560 --> 00:15:08,040
delivery they need to enable content up

431
00:15:06,360 --> 00:15:09,540
at the top and then when they scroll

432
00:15:08,040 --> 00:15:11,819
down they'll see the package itself the

433
00:15:09,540 --> 00:15:13,740
i-pro FMS package and when they double

434
00:15:11,820 --> 00:15:15,630
click that you'll see a quick blip in

435
00:15:13,740 --> 00:15:18,450
the top left corner of the screen and

436
00:15:15,630 --> 00:15:19,980
that blip is click once reaching out to

437
00:15:18,450 --> 00:15:22,620
the deployment server to say hey does

438
00:15:19,980 --> 00:15:24,060
this application exist and it did so it

439
00:15:22,620 --> 00:15:26,490
comes back with that click once prompt

440
00:15:24,060 --> 00:15:29,630
do you want to run this and then BOOM

441
00:15:26,490 --> 00:15:31,980
evil calculators

442
00:15:29,630 --> 00:15:33,390
so that being said that's just two

443
00:15:31,980 --> 00:15:34,890
examples there's a lot of other things

444
00:15:33,390 --> 00:15:37,740
you can tie a prof MSN to it's very

445
00:15:34,890 --> 00:15:39,510
malleable as a delivery format so for

446
00:15:37,740 --> 00:15:40,950
example you can combine it with other

447
00:15:39,510 --> 00:15:43,560
methods to do things like delivery via

448
00:15:40,950 --> 00:15:44,880
HTA and a couple other ways however you

449
00:15:43,560 --> 00:15:47,040
know at that point kind of extraneous

450
00:15:44,880 --> 00:15:48,660
since it's ultimately still delivering

451
00:15:47,040 --> 00:15:50,459
the click once application which can be

452
00:15:48,660 --> 00:15:52,230
directly delivered can be directly

453
00:15:50,460 --> 00:15:53,810
dropped as no le but feel free to play

454
00:15:52,230 --> 00:15:56,130
around with an experiment that a bit and

455
00:15:53,810 --> 00:15:58,170
similarly you can also tie a per FMS

456
00:15:56,130 --> 00:16:00,240
into lateral movement capabilities now

457
00:15:58,170 --> 00:16:01,650
once again whatever your preferred

458
00:16:00,240 --> 00:16:03,030
method is you can try to find a way to

459
00:16:01,650 --> 00:16:05,040
work it in there I just have two very

460
00:16:03,030 --> 00:16:06,060
high-level ones here just as examples to

461
00:16:05,040 --> 00:16:09,060
kind of get the gears turning a little

462
00:16:06,060 --> 00:16:10,380
bit but the first one is that as you're

463
00:16:09,060 --> 00:16:11,880
moving you know throughout an

464
00:16:10,380 --> 00:16:13,950
environment you have if you have the

465
00:16:11,880 --> 00:16:17,010
permissions capabilities etc you can

466
00:16:13,950 --> 00:16:19,290
laterally push the a premise file to a

467
00:16:17,010 --> 00:16:20,970
remote startup folder so the next time

468
00:16:19,290 --> 00:16:24,060
that system boots up it'll fire off the

469
00:16:20,970 --> 00:16:26,520
app breath MS and establish c2 and then

470
00:16:24,060 --> 00:16:30,150
similarly you can use PS exact to invoke

471
00:16:26,520 --> 00:16:32,280
DFM DLL which will also run the click

472
00:16:30,150 --> 00:16:34,110
once on the application and then install

473
00:16:32,280 --> 00:16:35,699
things that way now in either of these

474
00:16:34,110 --> 00:16:39,420
circumstances and however other methods

475
00:16:35,700 --> 00:16:40,950
you choose to employ the one time will

476
00:16:39,420 --> 00:16:42,390
still be a play where the end user has

477
00:16:40,950 --> 00:16:44,160
to approve that so keep the social

478
00:16:42,390 --> 00:16:45,750
engineering aspect of that at play if

479
00:16:44,160 --> 00:16:48,569
you want to leverage this because it's

480
00:16:45,750 --> 00:16:50,280
not as quiet as other methods but this

481
00:16:48,570 --> 00:16:52,230
really helps tie into the c2 side of the

482
00:16:50,280 --> 00:16:54,449
house in terms of separating your

483
00:16:52,230 --> 00:16:55,950
typical op chain from other methods of

484
00:16:54,450 --> 00:16:59,070
establishing to c2 itself

485
00:16:55,950 --> 00:17:01,080
so once again keep social engineering at

486
00:16:59,070 --> 00:17:02,640
play if you do for example something

487
00:17:01,080 --> 00:17:04,380
like the startup menu or startup folder

488
00:17:02,640 --> 00:17:06,480
then maybe name the application

489
00:17:04,380 --> 00:17:08,370
something like Windows you know boot

490
00:17:06,480 --> 00:17:10,079
help dot exe something like that so that

491
00:17:08,369 --> 00:17:11,698
way it kind of ties in and doesn't seem

492
00:17:10,079 --> 00:17:13,109
too out of place when the user runs it

493
00:17:11,699 --> 00:17:15,209
but once they do run that a nickel out

494
00:17:13,109 --> 00:17:18,149
initial application then they're good to

495
00:17:15,209 --> 00:17:19,439
go from there which kind of brings us

496
00:17:18,150 --> 00:17:21,689
into the whole situ management side of

497
00:17:19,439 --> 00:17:25,560
this thing so when it comes to c2

498
00:17:21,689 --> 00:17:27,270
management now in ops we tend to have

499
00:17:25,560 --> 00:17:28,560
what we call separate lanes of

500
00:17:27,270 --> 00:17:29,940
communication and different lanes

501
00:17:28,560 --> 00:17:32,040
because different TTP's different

502
00:17:29,940 --> 00:17:33,660
domains things like that so that if if

503
00:17:32,040 --> 00:17:34,889
one of our areas gets burned out or

504
00:17:33,660 --> 00:17:36,570
pushed out of the network then we still

505
00:17:34,890 --> 00:17:38,940
have other methods of maintaining that

506
00:17:36,570 --> 00:17:41,220
access and then we also have lifelines

507
00:17:38,940 --> 00:17:42,450
and then lifelines are very very low and

508
00:17:41,220 --> 00:17:44,160
slow

509
00:17:42,450 --> 00:17:47,250
so like might be canal once every couple

510
00:17:44,160 --> 00:17:50,370
days one times to check-in type of type

511
00:17:47,250 --> 00:17:53,610
of situ traffic now when it comes to the

512
00:17:50,370 --> 00:17:55,889
ops side of the house everyone has those

513
00:17:53,610 --> 00:17:57,719
bad days where they get burned out they

514
00:17:55,890 --> 00:17:59,580
are detected they run through everything

515
00:17:57,720 --> 00:18:00,809
find your stuff burn down the network

516
00:17:59,580 --> 00:18:03,928
right and that's when those lifelines

517
00:18:00,809 --> 00:18:04,830
come into play however tinkering and

518
00:18:03,929 --> 00:18:05,910
playing around with things a little bit

519
00:18:04,830 --> 00:18:08,820
we noticed that we can actually leverage

520
00:18:05,910 --> 00:18:12,690
a prep ms as a lifeline itself in a way

521
00:18:08,820 --> 00:18:14,250
so since it has that capability to force

522
00:18:12,690 --> 00:18:16,020
check updates and if there are updates

523
00:18:14,250 --> 00:18:18,299
force the installation execution of set

524
00:18:16,020 --> 00:18:22,020
updates then we can actually use the app

525
00:18:18,299 --> 00:18:26,280
for FMS file as AC to management type of

526
00:18:22,020 --> 00:18:28,650
tool so basically if you ever burned out

527
00:18:26,280 --> 00:18:29,940
you have these completely benign so they

528
00:18:28,650 --> 00:18:31,830
literally do nothing nothing malicious

529
00:18:29,940 --> 00:18:34,740
no payloads or anything completely

530
00:18:31,830 --> 00:18:37,740
benign applications a / if ms that are

531
00:18:34,740 --> 00:18:40,740
set on a timer and then it could be you

532
00:18:37,740 --> 00:18:42,419
know an hour a day a week for the

533
00:18:40,740 --> 00:18:45,780
example of this demonstration one minute

534
00:18:42,419 --> 00:18:47,610
but every time it runs whether it's on a

535
00:18:45,780 --> 00:18:49,320
scheduled task or on boot you know

536
00:18:47,610 --> 00:18:51,000
whatever the case might be every time it

537
00:18:49,320 --> 00:18:52,409
runs its gonna check into that server

538
00:18:51,000 --> 00:18:54,929
see if there's any you know any new

539
00:18:52,410 --> 00:18:56,820
updates and once again it's a completely

540
00:18:54,929 --> 00:18:58,110
benign there's nothing there type of

541
00:18:56,820 --> 00:18:59,610
applications there's nothing to be

542
00:18:58,110 --> 00:19:00,780
flagged in terms of malicious activity

543
00:18:59,610 --> 00:19:03,510
that this is doing

544
00:19:00,780 --> 00:19:05,940
and since click once is a trusted

545
00:19:03,510 --> 00:19:08,450
Windows way of executing things it's not

546
00:19:05,940 --> 00:19:10,980
suspicious of this activity either now

547
00:19:08,450 --> 00:19:12,150
you have your average everyday run the

548
00:19:10,980 --> 00:19:15,980
mill operator there's up there doing

549
00:19:12,150 --> 00:19:17,940
operator things and as mentioned boom

550
00:19:15,980 --> 00:19:18,419
defense caught on pushed out of the

551
00:19:17,940 --> 00:19:21,330
network

552
00:19:18,419 --> 00:19:22,730
bad day for everybody but as we're

553
00:19:21,330 --> 00:19:24,899
moving through whether it is through

554
00:19:22,730 --> 00:19:25,950
phishing delivery or you know lateral

555
00:19:24,900 --> 00:19:29,400
movement pushed where the case might be

556
00:19:25,950 --> 00:19:30,929
at the bottom there we have a a / FM s

557
00:19:29,400 --> 00:19:32,970
file on a timer once again nothing

558
00:19:30,929 --> 00:19:35,520
malicious it's literally just a

559
00:19:32,970 --> 00:19:37,140
do-nothing application that is set to

560
00:19:35,520 --> 00:19:39,540
execute but it checks for those updates

561
00:19:37,140 --> 00:19:41,040
whenever does execute now now that we're

562
00:19:39,540 --> 00:19:43,620
burned out we don't have access anymore

563
00:19:41,040 --> 00:19:45,480
all we need to do is push an update to

564
00:19:43,620 --> 00:19:48,629
that deployment server and the next time

565
00:19:45,480 --> 00:19:50,669
that a premise pal checks in it'll

566
00:19:48,630 --> 00:19:52,140
download execute and run the updated

567
00:19:50,669 --> 00:19:55,770
application reestablishing us in the

568
00:19:52,140 --> 00:19:57,240
network and based off of that

569
00:19:55,770 --> 00:20:00,690
as you're moving through however many

570
00:19:57,240 --> 00:20:02,700
types of hosts you drop the appli a mess

571
00:20:00,690 --> 00:20:04,440
file - as they independently check-in

572
00:20:02,700 --> 00:20:07,950
they'll all be pulling down that new

573
00:20:04,440 --> 00:20:09,180
malicious update and then likewise once

574
00:20:07,950 --> 00:20:10,890
you have your situ established if you

575
00:20:09,180 --> 00:20:13,440
want you can flip that back to a non

576
00:20:10,890 --> 00:20:14,700
malicious new update so then if anyone

577
00:20:13,440 --> 00:20:16,050
else tries to follow up and see what's

578
00:20:14,700 --> 00:20:19,560
going on there's nothing malicious there

579
00:20:16,050 --> 00:20:23,310
for them to detect so as an example of

580
00:20:19,560 --> 00:20:25,290
this so in the bottom and on the bottom

581
00:20:23,310 --> 00:20:27,810
side left corner you'll notice the quick

582
00:20:25,290 --> 00:20:29,490
blip and then once again that is clicked

583
00:20:27,810 --> 00:20:30,629
that's the upper FMS final checking into

584
00:20:29,490 --> 00:20:33,120
the server to see if there's anything

585
00:20:30,630 --> 00:20:34,800
there so I saw it check in so I go ahead

586
00:20:33,120 --> 00:20:37,080
and change it from that do-nothing

587
00:20:34,800 --> 00:20:39,899
application to our evil calculator its

588
00:20:37,080 --> 00:20:41,370
application when I deploy this it

589
00:20:39,900 --> 00:20:42,840
deploys it to the publishing server

590
00:20:41,370 --> 00:20:45,239
sorry I publish it publishes it to the

591
00:20:42,840 --> 00:20:47,280
deployment server over FTP pushes

592
00:20:45,240 --> 00:20:50,040
everything up and then it confirms to me

593
00:20:47,280 --> 00:20:51,270
and shows the publish of HTM page to

594
00:20:50,040 --> 00:20:54,570
confirm that the application was

595
00:20:51,270 --> 00:20:56,790
successfully deployed so once it's

596
00:20:54,570 --> 00:20:58,560
deployed we can see the published HTM we

597
00:20:56,790 --> 00:21:01,290
know we're good to go and the next time

598
00:20:58,560 --> 00:21:03,090
one of these hosts check in it'll say

599
00:21:01,290 --> 00:21:04,139
okay well you have an update you know

600
00:21:03,090 --> 00:21:05,100
there's something new there that wasn't

601
00:21:04,140 --> 00:21:06,930
there before so I'm gonna go ahead and

602
00:21:05,100 --> 00:21:09,929
pull that new version of the application

603
00:21:06,930 --> 00:21:13,020
and execute that however since the

604
00:21:09,930 --> 00:21:15,450
initial execution the application was

605
00:21:13,020 --> 00:21:17,910
approved no further updates were

606
00:21:15,450 --> 00:21:19,140
required to get that code execution for

607
00:21:17,910 --> 00:21:21,390
the follow-up so you can have something

608
00:21:19,140 --> 00:21:23,490
completely benign initially and then

609
00:21:21,390 --> 00:21:25,200
whenever you're ready you can push

610
00:21:23,490 --> 00:21:34,160
something malicious and then get your

611
00:21:25,200 --> 00:21:38,270
code execution on that host so defense

612
00:21:34,160 --> 00:21:40,440
now in terms of a premise itself

613
00:21:38,270 --> 00:21:42,120
everything that we're doing we're

614
00:21:40,440 --> 00:21:44,790
definitely abusing the way that it's

615
00:21:42,120 --> 00:21:46,889
meant to be used however we're using it

616
00:21:44,790 --> 00:21:47,850
as it's intended to be used as well so

617
00:21:46,890 --> 00:21:50,480
there's nothing here that we're doing

618
00:21:47,850 --> 00:21:53,129
that is outside of the normal scope of

619
00:21:50,480 --> 00:21:55,800
click once usage in terms of how it

620
00:21:53,130 --> 00:21:57,510
pulls things execute things etc we're

621
00:21:55,800 --> 00:21:59,580
just abusing how we get it to do it

622
00:21:57,510 --> 00:22:01,200
because it's it would be pretty uncommon

623
00:21:59,580 --> 00:22:04,889
to just send an a per FNS file to

624
00:22:01,200 --> 00:22:06,870
somebody but the and then you know once

625
00:22:04,890 --> 00:22:08,250
again in terms of abusing the method of

626
00:22:06,870 --> 00:22:09,810
updates and how we push those updates

627
00:22:08,250 --> 00:22:12,480
and applications to switch from benign

628
00:22:09,810 --> 00:22:14,639
malicious etc those are you know once

629
00:22:12,480 --> 00:22:15,960
again abuses but it's still doing what

630
00:22:14,640 --> 00:22:17,040
it's intended to do in terms of pulling

631
00:22:15,960 --> 00:22:20,010
those things and running those things

632
00:22:17,040 --> 00:22:21,149
now so internal to your organization you

633
00:22:20,010 --> 00:22:22,920
certainly have the options just block

634
00:22:21,150 --> 00:22:24,510
any a prof MS activity that's one way to

635
00:22:22,920 --> 00:22:27,210
stop this from executing in your

636
00:22:24,510 --> 00:22:29,220
environment however there may be

637
00:22:27,210 --> 00:22:31,800
legitimate news cases to have click once

638
00:22:29,220 --> 00:22:34,470
applications at for MS etc going on in

639
00:22:31,800 --> 00:22:36,389
your organization so it may be something

640
00:22:34,470 --> 00:22:38,460
don't want to monitor to see if it's

641
00:22:36,390 --> 00:22:39,420
executing but that's once again a thing

642
00:22:38,460 --> 00:22:42,030
that you might want to look at

643
00:22:39,420 --> 00:22:43,350
internally the second big thing is as

644
00:22:42,030 --> 00:22:46,170
mentioned when it does the installation

645
00:22:43,350 --> 00:22:47,100
process it creates a registry key and we

646
00:22:46,170 --> 00:22:48,510
go back through we clean that up

647
00:22:47,100 --> 00:22:50,100
afterwards but those are still actions

648
00:22:48,510 --> 00:22:52,680
in registry that could be detectable as

649
00:22:50,100 --> 00:22:54,540
indicators compromised and then lastly

650
00:22:52,680 --> 00:22:55,860
training end-users not to click things

651
00:22:54,540 --> 00:22:58,379
not to run things they should start

652
00:22:55,860 --> 00:23:00,000
recognizing things like that to where if

653
00:22:58,380 --> 00:23:01,230
they open up a Word document and

654
00:23:00,000 --> 00:23:02,640
double-click what they think is a

655
00:23:01,230 --> 00:23:04,050
schedule or something along those lines

656
00:23:02,640 --> 00:23:05,850
and suddenly get prompted to install

657
00:23:04,050 --> 00:23:08,370
things those are things that people

658
00:23:05,850 --> 00:23:11,399
should be wary about however in most

659
00:23:08,370 --> 00:23:13,229
cases in the red team's townhouse

660
00:23:11,400 --> 00:23:16,320
specifically we tend to look for people

661
00:23:13,230 --> 00:23:18,480
like HR people with recruitments people

662
00:23:16,320 --> 00:23:19,830
who are used to just working people

663
00:23:18,480 --> 00:23:21,810
externally organization running these

664
00:23:19,830 --> 00:23:23,850
things and there's trying to move on to

665
00:23:21,810 --> 00:23:25,290
the next person etc so it can be very

666
00:23:23,850 --> 00:23:26,820
difficult to get people trained up but

667
00:23:25,290 --> 00:23:28,200
that's we're gonna be always be the the

668
00:23:26,820 --> 00:23:30,149
weakest link in terms of getting that

669
00:23:28,200 --> 00:23:31,410
code execution so helping people get

670
00:23:30,150 --> 00:23:33,000
trained up and especially when they're

671
00:23:31,410 --> 00:23:35,520
just trying to do their jobs will be

672
00:23:33,000 --> 00:23:37,200
beneficial as well and then lastly even

673
00:23:35,520 --> 00:23:39,000
though click once itself runs clean

674
00:23:37,200 --> 00:23:41,430
everything else related to click once

675
00:23:39,000 --> 00:23:43,170
they're in terms of that actual

676
00:23:41,430 --> 00:23:46,200
execution we still need a payload that

677
00:23:43,170 --> 00:23:48,570
is executed by this after FMS file so

678
00:23:46,200 --> 00:23:50,850
the post exploitation you know beaconing

679
00:23:48,570 --> 00:23:51,929
traffic any other kind of file movements

680
00:23:50,850 --> 00:23:55,070
etc those are things that you would

681
00:23:51,930 --> 00:23:57,960
still want to look out for then lastly

682
00:23:55,070 --> 00:23:59,250
in regards to our takeaways here so the

683
00:23:57,960 --> 00:24:02,310
the first thing i want to point out is

684
00:23:59,250 --> 00:24:03,900
that a pro FMS is a good addition to any

685
00:24:02,310 --> 00:24:04,800
operators tool belt so there's a lot of

686
00:24:03,900 --> 00:24:06,990
different things you can do with it's

687
00:24:04,800 --> 00:24:09,000
very malleable as a delivery method so

688
00:24:06,990 --> 00:24:12,060
whether using it for fishing lateral

689
00:24:09,000 --> 00:24:13,020
movement situ management etc if you feel

690
00:24:12,060 --> 00:24:14,490
free to tinker with it and see how you

691
00:24:13,020 --> 00:24:16,920
can tie it into the way that you do your

692
00:24:14,490 --> 00:24:18,870
operations and speaking of tinkering

693
00:24:16,920 --> 00:24:20,670
like always feel free to push things to

694
00:24:18,870 --> 00:24:22,050
that next step to see what can I do with

695
00:24:20,670 --> 00:24:23,410
this because initially when we're doing

696
00:24:22,050 --> 00:24:25,330
this research I just wanted something

697
00:24:23,410 --> 00:24:26,590
that I could you know send a no le with

698
00:24:25,330 --> 00:24:28,330
again and get us back in that system

699
00:24:26,590 --> 00:24:29,830
however we're actually able to tied into

700
00:24:28,330 --> 00:24:31,510
other methods once again lateral

701
00:24:29,830 --> 00:24:33,970
movement c2 and found some additional

702
00:24:31,510 --> 00:24:36,310
really cool uses for a prof MS that

703
00:24:33,970 --> 00:24:37,780
weren't out there before and then lastly

704
00:24:36,310 --> 00:24:39,700
I just wanted to also bring awareness to

705
00:24:37,780 --> 00:24:41,200
the use of a prof MS and just make

706
00:24:39,700 --> 00:24:42,550
everyone aware that especially on the

707
00:24:41,200 --> 00:24:43,930
defense side that things like this do

708
00:24:42,550 --> 00:24:46,480
exist and to keep an eye out for it and

709
00:24:43,930 --> 00:24:49,030
then watch from there and hopefully find

710
00:24:46,480 --> 00:24:50,710
that in the future so last thing I want

711
00:24:49,030 --> 00:24:52,270
to point out is we're at the end of the

712
00:24:50,710 --> 00:24:53,800
time here so I won't have time for

713
00:24:52,270 --> 00:24:55,690
questions here however I will be at the

714
00:24:53,800 --> 00:24:57,820
speaker wrap-up room and I'm more than

715
00:24:55,690 --> 00:24:58,930
happy to talk with anyone there after

716
00:24:57,820 --> 00:25:01,740
this if you have any questions from

717
00:24:58,930 --> 00:25:01,740
there thank you

