1
00:00:00,000 --> 00:00:04,920
good morning and welcome this session is

2
00:00:02,610 --> 00:00:07,170
all your Apple are belong to us unique

3
00:00:04,920 --> 00:00:09,590
identification and cross-device tracking

4
00:00:07,170 --> 00:00:12,120
of Apple devices and our speakers are

5
00:00:09,590 --> 00:00:14,849
minjiang and share along bye

6
00:00:12,120 --> 00:00:17,100
so without further ado please join me in

7
00:00:14,849 --> 00:00:29,689
giving a great warm welcome to our

8
00:00:17,100 --> 00:00:34,920
speakers hello hello

9
00:00:29,689 --> 00:00:37,320
okay good morning everyone I'm in June

10
00:00:34,920 --> 00:00:40,500
from Ali Baba it's my pleasure to speak

11
00:00:37,320 --> 00:00:43,290
at blackhat today I will share a topic

12
00:00:40,500 --> 00:00:46,980
about device fingerprinting and across

13
00:00:43,290 --> 00:00:51,420
device present techniques for iOS the

14
00:00:46,980 --> 00:00:53,940
title of my talk is oil Apple are belong

15
00:00:51,420 --> 00:00:56,840
to us unique identification and

16
00:00:53,940 --> 00:01:03,870
cross-device tracking of Apple devices

17
00:00:56,840 --> 00:01:06,600
so let's start our talk firstly I will

18
00:01:03,870 --> 00:01:08,908
briefly introduce myself my name is

19
00:01:06,600 --> 00:01:12,149
engine you can call me Spock

20
00:01:08,909 --> 00:01:15,869
I'm a senior security expert at Alibaba

21
00:01:12,150 --> 00:01:18,810
I got my PhD degree from the series key

22
00:01:15,869 --> 00:01:22,710
and I'm a member of below Lotus and

23
00:01:18,810 --> 00:01:26,670
inside labs I'm a regular speaker at the

24
00:01:22,710 --> 00:01:29,339
head I say DEFCON I try to be etc Shalom

25
00:01:26,670 --> 00:01:33,210
is my colleague er he is also a security

26
00:01:29,340 --> 00:01:35,909
expert at Alibaba he got his PhD from

27
00:01:33,210 --> 00:01:39,380
Shanghai University and he published

28
00:01:35,909 --> 00:01:39,380
papers on big four

29
00:01:40,350 --> 00:01:48,000
here is the outline of our talk first I

30
00:01:45,329 --> 00:01:51,210
will briefly introduce the motivation of

31
00:01:48,000 --> 00:01:53,790
cross device tracking then I will list

32
00:01:51,210 --> 00:01:57,119
the several approaches to uniquely

33
00:01:53,790 --> 00:02:00,570
identify the Apple device even after

34
00:01:57,119 --> 00:02:03,960
system rebooting or resetting a set I

35
00:02:00,570 --> 00:02:06,898
will present more advanced algorithm and

36
00:02:03,960 --> 00:02:10,410
vulnerabilities to associate Apple

37
00:02:06,899 --> 00:02:13,020
devices through deterministic user IDs

38
00:02:10,410 --> 00:02:16,049
for example varieties and

39
00:02:13,020 --> 00:02:20,520
members and the probabilistic data link

40
00:02:16,050 --> 00:02:23,220
like device names and IP addresses last

41
00:02:20,520 --> 00:02:26,000
but not least we will discuss some

42
00:02:23,220 --> 00:02:29,160
feasible solutions for instance

43
00:02:26,000 --> 00:02:32,250
instrumentation and differential privacy

44
00:02:29,160 --> 00:02:36,829
to detect and prevent unique

45
00:02:32,250 --> 00:02:39,480
identification and cross device tracking

46
00:02:36,830 --> 00:02:42,300
ok let's start

47
00:02:39,480 --> 00:02:44,730
we know that smartphones and laptops are

48
00:02:42,300 --> 00:02:47,030
the most of frequently used the personal

49
00:02:44,730 --> 00:02:47,030
devices

50
00:02:47,460 --> 00:02:53,940
moreover iPhones iPads and the MacBook

51
00:02:50,700 --> 00:02:56,489
are very popular in the world therefore

52
00:02:53,940 --> 00:02:59,609
a lot of people have multiple Apple

53
00:02:56,490 --> 00:03:04,020
devices for example I have five items

54
00:02:59,610 --> 00:03:07,380
two iPads and three Mac books a study by

55
00:03:04,020 --> 00:03:10,440
Google showed that 98 percent of

56
00:03:07,380 --> 00:03:15,690
surveyed Internet users in u.s. use

57
00:03:10,440 --> 00:03:19,050
multiple devices daily pieces 90% of

58
00:03:15,690 --> 00:03:22,650
people switch devices sequentially to

59
00:03:19,050 --> 00:03:25,620
accomplish a task over time but if there

60
00:03:22,650 --> 00:03:28,709
is no connection between devices users

61
00:03:25,620 --> 00:03:33,959
miss the rhythm rhythm advertising

62
00:03:28,709 --> 00:03:37,170
things on their device according to a

63
00:03:33,959 --> 00:03:39,959
survey by Google customers neurolytic a

64
00:03:37,170 --> 00:03:44,609
multi device has to have to purchase

65
00:03:39,959 --> 00:03:48,690
their goods for example 65% of people

66
00:03:44,610 --> 00:03:52,670
see advertising advertisement as Maxim

67
00:03:48,690 --> 00:03:56,030
and then continue purchase it a laptop

68
00:03:52,670 --> 00:04:02,970
however device switching may cause

69
00:03:56,030 --> 00:04:06,570
advertisers to lose their customers that

70
00:04:02,970 --> 00:04:09,150
people with artwork motives want to

71
00:04:06,570 --> 00:04:13,200
connect to individuals through these

72
00:04:09,150 --> 00:04:16,108
devices identifying and correlating

73
00:04:13,200 --> 00:04:18,810
people's device allowed cross device

74
00:04:16,108 --> 00:04:20,690
companies to track one person and a

75
00:04:18,810 --> 00:04:24,350
target operations for example

76
00:04:20,690 --> 00:04:26,400
advertising on post o his offer devices

77
00:04:24,350 --> 00:04:30,000
however

78
00:04:26,400 --> 00:04:33,150
such Christ's such craft cross-device

79
00:04:30,000 --> 00:04:36,660
trekking camp principally reveal a

80
00:04:33,150 --> 00:04:40,349
complete picture of a person and become

81
00:04:36,660 --> 00:04:43,620
more privacy invasive than the tracking

82
00:04:40,350 --> 00:04:49,260
of individual devices without connecting

83
00:04:43,620 --> 00:04:52,050
them privacy is about people

84
00:04:49,260 --> 00:04:55,740
although Tim Cook said in the White

85
00:04:52,050 --> 00:04:58,139
House cybersecurity summit he said

86
00:04:55,740 --> 00:05:01,380
people have been inferred us with their

87
00:04:58,139 --> 00:05:03,720
most personal information we own them

88
00:05:01,380 --> 00:05:08,580
nothing less than the best protection

89
00:05:03,720 --> 00:05:11,430
that we can possibly provide well in my

90
00:05:08,580 --> 00:05:14,039
opinion I think Apple is really trying

91
00:05:11,430 --> 00:05:17,340
to provide the best protection for

92
00:05:14,039 --> 00:05:20,460
personal information for devices however

93
00:05:17,340 --> 00:05:23,820
lots of approaches for example private

94
00:05:20,460 --> 00:05:30,570
ideas and vulnerabilities can still be

95
00:05:23,820 --> 00:05:32,849
abused to uniquely identify users cross

96
00:05:30,570 --> 00:05:36,450
device training is based on resolving

97
00:05:32,849 --> 00:05:40,760
two tracks the first one is uniquely

98
00:05:36,450 --> 00:05:43,169
identify users devices the second one is

99
00:05:40,760 --> 00:05:46,169
correlating those that belong to the

100
00:05:43,169 --> 00:05:49,700
same user for an operating system a

101
00:05:46,169 --> 00:05:53,340
large part of maintaining privacy

102
00:05:49,700 --> 00:05:56,940
involves making sure applications don't

103
00:05:53,340 --> 00:06:00,690
have the capabilities to access users

104
00:05:56,940 --> 00:06:03,780
personal resources from documents to

105
00:06:00,690 --> 00:06:06,710
photos or unique identifiers which could

106
00:06:03,780 --> 00:06:11,630
be used to fingerprint the user's device

107
00:06:06,710 --> 00:06:11,630
however this is not an easy task

108
00:06:11,960 --> 00:06:18,000
so now we will share some public areas

109
00:06:15,510 --> 00:06:25,560
and private areas which can be used to

110
00:06:18,000 --> 00:06:27,780
uniquely identify Apple devices we know

111
00:06:25,560 --> 00:06:30,780
that device IDs are very helpful to

112
00:06:27,780 --> 00:06:33,690
build customized service and it is

113
00:06:30,780 --> 00:06:36,750
essential to get to know users and offer

114
00:06:33,690 --> 00:06:38,850
them useful predictions

115
00:06:36,750 --> 00:06:42,110
but the tracking everything and built

116
00:06:38,850 --> 00:06:46,620
creepy suggestions that may put user at

117
00:06:42,110 --> 00:06:49,830
our knees in April products the strategy

118
00:06:46,620 --> 00:06:52,740
is to offer short live a rhythm and

119
00:06:49,830 --> 00:06:56,130
enough anonymous identifiers

120
00:06:52,740 --> 00:06:59,340
however the rotating and analytic

121
00:06:56,130 --> 00:07:01,800
companies they won't permit long term

122
00:06:59,340 --> 00:07:08,880
tracking of a user without a user

123
00:07:01,800 --> 00:07:12,480
control so mo provides developers some

124
00:07:08,880 --> 00:07:16,380
public areas for device ID for instance

125
00:07:12,480 --> 00:07:20,060
euro ID it is a universal unique value

126
00:07:16,380 --> 00:07:23,810
that can be used to identify types

127
00:07:20,060 --> 00:07:27,390
interfaces and other items in addition

128
00:07:23,810 --> 00:07:30,860
vendor ID and other word hiding ID can

129
00:07:27,390 --> 00:07:37,070
be used to uniquely identify a device

130
00:07:30,860 --> 00:07:37,070
most specifically users can control them

131
00:07:37,190 --> 00:07:44,850
where a user enables limit ad tracking

132
00:07:41,210 --> 00:07:49,640
the OS will send along the word hiding

133
00:07:44,850 --> 00:07:53,580
identifier with a new value of zeros so

134
00:07:49,640 --> 00:07:55,950
also we can click reset identifiers to

135
00:07:53,580 --> 00:08:00,060
set a new random value to other word

136
00:07:55,950 --> 00:08:03,690
highs to advertising identifier notation

137
00:08:00,060 --> 00:08:08,130
vendor ID can be reset by only storing

138
00:08:03,690 --> 00:08:10,860
all apps from the same team ID there for

139
00:08:08,130 --> 00:08:14,219
advertising ID and winner ID are not

140
00:08:10,860 --> 00:08:20,820
enough for advertisers for advertising

141
00:08:14,220 --> 00:08:23,580
and analytics companies so lots of

142
00:08:20,820 --> 00:08:27,780
companies it will changing to help them

143
00:08:23,580 --> 00:08:30,450
treat users changing gives as a

144
00:08:27,780 --> 00:08:33,929
mechanism to stop small piece of user

145
00:08:30,450 --> 00:08:36,479
data in an encrypted database the most

146
00:08:33,929 --> 00:08:38,728
important thing is that the app data

147
00:08:36,479 --> 00:08:41,700
stored in English engine will not be

148
00:08:38,729 --> 00:08:45,209
lost even after the the application is

149
00:08:41,700 --> 00:08:47,880
installed however it's very easy for

150
00:08:45,209 --> 00:08:50,160
hackers to delete the data in the King

151
00:08:47,880 --> 00:08:53,100
chain our job rocking device

152
00:08:50,160 --> 00:08:56,280
so Qing Qing is useful for normal user

153
00:08:53,100 --> 00:09:01,200
but it is not helpful to fight against

154
00:08:56,280 --> 00:09:04,439
the fraud or detect malicious use for

155
00:09:01,200 --> 00:09:07,710
example the first picture the first

156
00:09:04,440 --> 00:09:10,080
pictures shows that we can talk AB data

157
00:09:07,710 --> 00:09:13,200
from the Qing Qing and the second

158
00:09:10,080 --> 00:09:15,570
picture it shows that we can use some

159
00:09:13,200 --> 00:09:22,080
circle command to delete the data in the

160
00:09:15,570 --> 00:09:24,960
Qing Qing Zhu broken device there's no

161
00:09:22,080 --> 00:09:27,830
doubt that most useful device IDs are

162
00:09:24,960 --> 00:09:31,530
Hardware pista serial numbers like I'm a

163
00:09:27,830 --> 00:09:35,640
new iOS we have obtained most of device

164
00:09:31,530 --> 00:09:40,860
IDs through the mg copy answer of live

165
00:09:35,640 --> 00:09:42,810
mobile Costa castrato develop however in

166
00:09:40,860 --> 00:09:45,810
order to get a valid value some

167
00:09:42,810 --> 00:09:48,180
entitlements like canto Airport or

168
00:09:45,810 --> 00:09:51,890
private or mobile gaster to allow the

169
00:09:48,180 --> 00:09:57,719
project keys are required for instance

170
00:09:51,890 --> 00:10:00,210
here is a fusee of getting the MEI we

171
00:09:57,720 --> 00:10:02,280
need to get the cannot ask for at first

172
00:10:00,210 --> 00:10:06,300
which means we need to jailbreak the

173
00:10:02,280 --> 00:10:10,380
device after we can inject related

174
00:10:06,300 --> 00:10:13,740
entitlements related entitlements into

175
00:10:10,380 --> 00:10:20,150
the process and as in case the value of

176
00:10:13,740 --> 00:10:23,430
meas through the mg copy answer our

177
00:10:20,150 --> 00:10:27,420
registry also contains lots of hardware

178
00:10:23,430 --> 00:10:33,150
zero numbers you can use the commander

179
00:10:27,420 --> 00:10:38,250
io g geo braking device to see these

180
00:10:33,150 --> 00:10:40,740
serial numbers for example the aisle the

181
00:10:38,250 --> 00:10:44,130
aisle transform serial number from

182
00:10:40,740 --> 00:10:47,400
camera serial number etc so what is our

183
00:10:44,130 --> 00:10:50,370
registry the our registry is a dynamic

184
00:10:47,400 --> 00:10:53,910
database that describes a collection of

185
00:10:50,370 --> 00:10:56,850
live objects for example Maps or drivers

186
00:10:53,910 --> 00:10:57,780
when hardware is added or removed from

187
00:10:56,850 --> 00:11:00,960
system

188
00:10:57,780 --> 00:11:03,270
the registry is immediately updated to

189
00:11:00,960 --> 00:11:05,760
reflect the new car

190
00:11:03,270 --> 00:11:08,939
configuration of devices that it

191
00:11:05,760 --> 00:11:13,110
contains lots of device ideas however

192
00:11:08,940 --> 00:11:16,530
most of these values are protected by

193
00:11:13,110 --> 00:11:23,880
the our kids get properties and box

194
00:11:16,530 --> 00:11:27,439
rules so is there a way to get Hardware

195
00:11:23,880 --> 00:11:31,170
pista device ideas without a privilege

196
00:11:27,440 --> 00:11:31,800
escalation or geo breaking the answer is

197
00:11:31,170 --> 00:11:35,910
yes

198
00:11:31,800 --> 00:11:39,089
for example the MAC address a MAC

199
00:11:35,910 --> 00:11:42,780
address is the unique identifier that is

200
00:11:39,090 --> 00:11:46,200
assigned by the manufacturer to a piece

201
00:11:42,780 --> 00:11:49,040
of network network hardware for example

202
00:11:46,200 --> 00:11:51,930
awareness and Bluetooth however

203
00:11:49,040 --> 00:11:55,110
traditional work method of obtaining a

204
00:11:51,930 --> 00:11:59,069
wife a metal dress has been pruned our

205
00:11:55,110 --> 00:12:01,350
our system for instance if we want to

206
00:11:59,070 --> 00:12:05,550
get the MAC address through get a

207
00:12:01,350 --> 00:12:10,200
address Mac OS will return of valid

208
00:12:05,550 --> 00:12:13,130
address like this picture opening up but

209
00:12:10,200 --> 00:12:16,290
in iOS system only return meaningless

210
00:12:13,130 --> 00:12:22,470
information like this picture it only

211
00:12:16,290 --> 00:12:25,349
returns nearest but our system may miss

212
00:12:22,470 --> 00:12:28,500
some side-channel ways to get a MAC

213
00:12:25,350 --> 00:12:32,100
address for example sake the function

214
00:12:28,500 --> 00:12:34,890
with AF underscore root and sake the

215
00:12:32,100 --> 00:12:39,660
rule parameters can be used to create a

216
00:12:34,890 --> 00:12:42,300
rule focused only super users in only

217
00:12:39,660 --> 00:12:47,100
super users can create this socket in

218
00:12:42,300 --> 00:12:49,859
UNIX and leavers but in ers apps in the

219
00:12:47,100 --> 00:12:53,270
sandbox with mobile privilege can also

220
00:12:49,860 --> 00:12:57,480
create a result can also create a rocket

221
00:12:53,270 --> 00:13:00,720
the rocket we can access the ARP cache

222
00:12:57,480 --> 00:13:05,430
routines which contains Mac information

223
00:13:00,720 --> 00:13:08,370
however in iOS 11 and 4000 allow apps to

224
00:13:05,430 --> 00:13:11,370
access the MAC address in the ARP table

225
00:13:08,370 --> 00:13:13,740
and reads the MAC addresses from there

226
00:13:11,370 --> 00:13:15,420
during the scan because MAC addresses

227
00:13:13,740 --> 00:13:17,850
are unique

228
00:13:15,420 --> 00:13:20,569
and some developers may misuse them to

229
00:13:17,850 --> 00:13:20,570
trade users

230
00:13:22,280 --> 00:13:30,060
another MAC address our iPhone is

231
00:13:25,160 --> 00:13:35,069
Bluetooth device address this is a

232
00:13:30,060 --> 00:13:36,719
unique 48 bytes identifier assigned to

233
00:13:35,070 --> 00:13:39,570
each Bluetooth device by the

234
00:13:36,720 --> 00:13:43,440
manufacturer and it is very similar to

235
00:13:39,570 --> 00:13:46,290
the Wi-Fi metal dress iPhone and iPad

236
00:13:43,440 --> 00:13:49,490
are using an integrity the chipset

237
00:13:46,290 --> 00:13:53,250
supporting both Wi-Fi and Bluetooth

238
00:13:49,490 --> 00:13:55,980
because they are initialized at the same

239
00:13:53,250 --> 00:13:58,460
time during manufacturing their

240
00:13:55,980 --> 00:14:02,940
addresses you early get assigned

241
00:13:58,460 --> 00:14:07,590
consecutively so example this is my

242
00:14:02,940 --> 00:14:10,470
iPhone 6 as you can see web address and

243
00:14:07,590 --> 00:14:13,170
Bluetooth address are very similar only

244
00:14:10,470 --> 00:14:15,870
the last number is different it means if

245
00:14:13,170 --> 00:14:17,969
we can get the Bluetooth MAC address we

246
00:14:15,870 --> 00:14:24,060
can calculate the web fair metal dress

247
00:14:17,970 --> 00:14:27,180
as well so now I will introduce one way

248
00:14:24,060 --> 00:14:29,489
to get the Bluetooth MAC address but

249
00:14:27,180 --> 00:14:33,750
before we talk about it let me briefly

250
00:14:29,490 --> 00:14:37,110
introduce the mark mark messages there

251
00:14:33,750 --> 00:14:39,930
are a rich set of IPC mechanism our iOS

252
00:14:37,110 --> 00:14:42,690
and the most of them are available to

253
00:14:39,930 --> 00:14:45,270
third party applications the most

254
00:14:42,690 --> 00:14:48,870
frequently used the mechanism is mac

255
00:14:45,270 --> 00:14:52,770
message it contains typed data which can

256
00:14:48,870 --> 00:14:56,340
include all rights and the references to

257
00:14:52,770 --> 00:14:59,220
large range of memory pistol mag message

258
00:14:56,340 --> 00:15:02,580
ever developed the X PC which is a

259
00:14:59,220 --> 00:15:05,490
lightweight mechanism for basic

260
00:15:02,580 --> 00:15:08,940
inter-process communication compared

261
00:15:05,490 --> 00:15:12,600
with roll mark message X PC is safer and

262
00:15:08,940 --> 00:15:16,350
easier to use but the cost of X PC

263
00:15:12,600 --> 00:15:19,290
service maintaining is very heavy FX PC

264
00:15:16,350 --> 00:15:22,110
message is built on top of X PC message

265
00:15:19,290 --> 00:15:25,110
which allows the abstraction of X

266
00:15:22,110 --> 00:15:29,460
physique necks and remote objects

267
00:15:25,110 --> 00:15:32,550
through mark X PC and FX is amazing

268
00:15:29,460 --> 00:15:39,060
sandbox apps can communicate with our

269
00:15:32,550 --> 00:15:42,120
sandbox system service so Bluetooth T is

270
00:15:39,060 --> 00:15:45,540
a daemon which handled Bluetooth related

271
00:15:42,120 --> 00:15:48,330
requests Bluetooth T communicate with

272
00:15:45,540 --> 00:15:50,790
sandbox apps and other attend box the

273
00:15:48,330 --> 00:15:54,540
processes for example springboard it

274
00:15:50,790 --> 00:15:57,240
around Mac service called contour

275
00:15:54,540 --> 00:15:59,939
Airport or server table tools and they

276
00:15:57,240 --> 00:16:03,000
are more than 100 functions in this

277
00:15:59,940 --> 00:16:05,760
market service we can analyze this

278
00:16:03,000 --> 00:16:11,130
method by disassemble the Bluetooth T

279
00:16:05,760 --> 00:16:14,010
binary after analyzing we found lots of

280
00:16:11,130 --> 00:16:17,970
useful method in the Bluetooth Mac

281
00:16:14,010 --> 00:16:20,819
service for example we can attach to the

282
00:16:17,970 --> 00:16:23,510
Bluetooth serve servers through PT

283
00:16:20,820 --> 00:16:26,850
session attached with wrong load I think

284
00:16:23,510 --> 00:16:29,850
then we can get a handler of local

285
00:16:26,850 --> 00:16:36,360
device through PG local device get

286
00:16:29,850 --> 00:16:39,120
default after getting a handler of local

287
00:16:36,360 --> 00:16:41,760
device we can use PT local device

288
00:16:39,120 --> 00:16:47,220
getting address string to get the MAC

289
00:16:41,760 --> 00:16:49,980
address of Bluetooth and this picture

290
00:16:47,220 --> 00:16:53,430
this is the pure C and this is result

291
00:16:49,980 --> 00:16:56,010
from the readout we can see that we

292
00:16:53,430 --> 00:17:00,060
successfully gets the Bluetooth address

293
00:16:56,010 --> 00:17:03,450
inside the absent box note that this

294
00:17:00,060 --> 00:17:06,510
method would available hours trough but

295
00:17:03,450 --> 00:17:09,060
it affects the in our cell phone when in

296
00:17:06,510 --> 00:17:12,869
addition Wi-Fi and Bluetooth address of

297
00:17:09,060 --> 00:17:15,629
new iPhone models are not consecutive

298
00:17:12,869 --> 00:17:18,419
maybe after I think server I'm not sure

299
00:17:15,630 --> 00:17:21,089
about that despite of that Bluetooth

300
00:17:18,420 --> 00:17:24,449
address is still a persistent hardware

301
00:17:21,089 --> 00:17:27,990
identifier it means it can be used to

302
00:17:24,449 --> 00:17:31,380
track user even after a system resetting

303
00:17:27,990 --> 00:17:33,930
or rebooting new edition users cannot

304
00:17:31,380 --> 00:17:37,010
control it so it's a very powerful

305
00:17:33,930 --> 00:17:37,010
device ID

306
00:17:38,640 --> 00:17:50,279
okay let's go to step two cross device

307
00:17:41,130 --> 00:17:54,000
tracking after the unique identification

308
00:17:50,279 --> 00:17:56,940
of devices cross device trading

309
00:17:54,000 --> 00:18:00,269
companies must mesh so that appear

310
00:17:56,940 --> 00:18:03,440
similar successful imaging devices a

311
00:18:00,269 --> 00:18:07,320
skill is a core challenge for the best

312
00:18:03,440 --> 00:18:10,559
for cross device tracking a device graph

313
00:18:07,320 --> 00:18:13,649
can be built from connect connected

314
00:18:10,559 --> 00:18:18,750
component with a maximal number of

315
00:18:13,649 --> 00:18:21,809
devices and edges deterministic data

316
00:18:18,750 --> 00:18:25,320
links device together based upon user

317
00:18:21,809 --> 00:18:29,158
IDs for example ever ID from number and

318
00:18:25,320 --> 00:18:32,070
the user account identifier user ID can

319
00:18:29,159 --> 00:18:35,909
be used to correlate the devices without

320
00:18:32,070 --> 00:18:38,580
any advanced algorithm calculation but

321
00:18:35,909 --> 00:18:42,120
fo can easily mitigate them as well

322
00:18:38,580 --> 00:18:44,840
sometimes we may not be able to get a

323
00:18:42,120 --> 00:18:47,850
deterministic information link

324
00:18:44,840 --> 00:18:50,639
information to link devices with

325
00:18:47,850 --> 00:18:53,580
probabilistic data gathering from public

326
00:18:50,639 --> 00:18:57,240
areas it is still possible to cross

327
00:18:53,580 --> 00:19:00,178
device tracking through the device graph

328
00:18:57,240 --> 00:19:03,659
algorithm probabilistic thick teeth data

329
00:19:00,179 --> 00:19:06,750
links devices together based on a set of

330
00:19:03,659 --> 00:19:10,070
feature data that more than the entity

331
00:19:06,750 --> 00:19:12,179
for example ID addresses URLs

332
00:19:10,070 --> 00:19:15,809
coordination information and device

333
00:19:12,179 --> 00:19:23,070
names the goal is to achieve a perfect

334
00:19:15,809 --> 00:19:25,580
matching of similar devices the most

335
00:19:23,070 --> 00:19:29,399
important the user ID our iPhone is the

336
00:19:25,580 --> 00:19:31,949
Apple ID so now we will list the several

337
00:19:29,399 --> 00:19:37,320
vulnerabilities which can be used to

338
00:19:31,950 --> 00:19:43,049
link our IDs the first one is CVD 2 2014

339
00:19:37,320 --> 00:19:46,740
4 4 2 3 4 OS it without sandbox checking

340
00:19:43,049 --> 00:19:50,360
the AC account subsystem in OS it

341
00:19:46,740 --> 00:19:53,270
allowed attackers to bypass as and

342
00:19:50,360 --> 00:19:56,719
protection mechanism and the obtain an

343
00:19:53,270 --> 00:20:00,200
active iCloud account ID and metadata

344
00:19:56,720 --> 00:20:04,300
were across the application you can see

345
00:20:00,200 --> 00:20:08,750
the POC here firstly we need to create

346
00:20:04,300 --> 00:20:12,470
the account ID which is called contour

347
00:20:08,750 --> 00:20:15,530
airport or account to Liverpool after

348
00:20:12,470 --> 00:20:18,770
that we can get the app ID through the

349
00:20:15,530 --> 00:20:24,610
account type with a can type identifier

350
00:20:18,770 --> 00:20:24,610
method of AC accounts though framework

351
00:20:25,240 --> 00:20:39,260
the second one for every link is CVE 217

352
00:20:34,240 --> 00:20:44,540
six nine seven six the Ariston

353
00:20:39,260 --> 00:20:47,570
arrastre a variety of agent it allows a

354
00:20:44,540 --> 00:20:50,360
mark service that handles action

355
00:20:47,570 --> 00:20:53,679
regarding a user's variety including

356
00:20:50,360 --> 00:20:57,919
iCloud information link to that account

357
00:20:53,680 --> 00:21:00,550
it'll run every idea of an occasion

358
00:20:57,920 --> 00:21:03,050
expiry service which could be a success

359
00:21:00,550 --> 00:21:06,139
which could be accessed by any

360
00:21:03,050 --> 00:21:09,980
application inside sandbox and it has a

361
00:21:06,140 --> 00:21:16,640
flaw that links Apple ID you can see the

362
00:21:09,980 --> 00:21:19,600
POC here we can connect the to the X PC

363
00:21:16,640 --> 00:21:22,850
service and the Zen Center commander by

364
00:21:19,600 --> 00:21:26,659
1:02 the server through expenses or

365
00:21:22,850 --> 00:21:34,219
message then we can get a get the link

366
00:21:26,660 --> 00:21:36,590
app ID from the experimental reply here

367
00:21:34,220 --> 00:21:41,240
is a third vulnerability for Apple ID

368
00:21:36,590 --> 00:21:45,080
link a iOS cause this vulnerability is

369
00:21:41,240 --> 00:21:48,650
found by us new iOS and Mac OS Kim

370
00:21:45,080 --> 00:21:52,610
Center has a sspc service which is

371
00:21:48,650 --> 00:21:55,760
called contour fo dog in D it provides

372
00:21:52,610 --> 00:22:00,229
interfaces to get authenticated player

373
00:21:55,760 --> 00:22:02,520
information however if the pattern have

374
00:22:00,230 --> 00:22:05,340
entitlement protection

375
00:22:02,520 --> 00:22:08,040
not any applications inside in fact the

376
00:22:05,340 --> 00:22:12,409
sandbox can access it and get the

377
00:22:08,040 --> 00:22:15,030
username of f ID this vulnerably this

378
00:22:12,410 --> 00:22:18,480
vulnerability was affixed a year I was

379
00:22:15,030 --> 00:22:21,840
twelve point four after we reported this

380
00:22:18,480 --> 00:22:26,300
issue to Apple app you see of getting

381
00:22:21,840 --> 00:22:26,300
ever idea our stove is shown below

382
00:22:26,570 --> 00:22:35,760
firstly we need to get a connection with

383
00:22:31,110 --> 00:22:38,850
the team that with mtfx pc serve service

384
00:22:35,760 --> 00:22:40,860
then we can use get account name will

385
00:22:38,850 --> 00:22:43,290
handle a method of games in the

386
00:22:40,860 --> 00:22:46,459
foundations of framework to get the

387
00:22:43,290 --> 00:22:46,460
information of fib

388
00:22:48,230 --> 00:22:54,210
yes we also find another vulnerability

389
00:22:51,870 --> 00:22:57,899
in the airdrop service which can

390
00:22:54,210 --> 00:23:01,310
remotely link fo IDs before it is padded

391
00:22:57,900 --> 00:23:05,910
let me briefly introduce a airdrop

392
00:23:01,310 --> 00:23:10,169
airdrop is an ad-hoc service in Mac Mac

393
00:23:05,910 --> 00:23:13,230
OS and iOS operating system it enables

394
00:23:10,170 --> 00:23:17,820
the transfer of files among supported

395
00:23:13,230 --> 00:23:22,140
Mac books and RF devices over Wi-Fi and

396
00:23:17,820 --> 00:23:27,030
Bluetooth without using wheel or mass

397
00:23:22,140 --> 00:23:30,600
storage or mass storage device it is

398
00:23:27,030 --> 00:23:34,260
used to set up an ad hoc Wi-Fi network

399
00:23:30,600 --> 00:23:39,300
using a awareness direct link interface

400
00:23:34,260 --> 00:23:43,310
as known as a tableau Piero iOS client

401
00:23:39,300 --> 00:23:46,200
browser from for airdrop service by M

402
00:23:43,310 --> 00:23:53,850
TNS responder and the transmitted files

403
00:23:46,200 --> 00:23:56,850
through the HTTP web server by analyzing

404
00:23:53,850 --> 00:24:00,300
the protocol of airdrop we can find that

405
00:23:56,850 --> 00:24:01,889
airdrop agent discovers lots of personal

406
00:24:00,300 --> 00:24:05,220
information like Flags

407
00:24:01,890 --> 00:24:10,200
computer names service names and under

408
00:24:05,220 --> 00:24:13,230
the hood addresses over for personal

409
00:24:10,200 --> 00:24:15,210
devices with the same app ID airdrop

410
00:24:13,230 --> 00:24:16,290
agent also collects sensitive

411
00:24:15,210 --> 00:24:18,660
information

412
00:24:16,290 --> 00:24:23,909
for example from the picture you can see

413
00:24:18,660 --> 00:24:27,060
it collects the Apple ID username which

414
00:24:23,910 --> 00:24:35,850
is email email address and the email

415
00:24:27,060 --> 00:24:38,010
hash as well this is the Emir Hajj and

416
00:24:35,850 --> 00:24:40,709
we found their sandbox apps can use

417
00:24:38,010 --> 00:24:44,340
sharing the framework to interact with

418
00:24:40,710 --> 00:24:46,920
airdrop service last we can use tear

419
00:24:44,340 --> 00:24:51,480
open that your seam to find some useful

420
00:24:46,920 --> 00:24:55,530
private it is for uses for instance we

421
00:24:51,480 --> 00:24:58,620
can use FF broader create to create a

422
00:24:55,530 --> 00:25:08,010
broader node and then use FF broader

423
00:24:58,620 --> 00:25:10,830
open note to start a broader scale by

424
00:25:08,010 --> 00:25:14,250
using these private areas we could find

425
00:25:10,830 --> 00:25:17,639
a nearby airdrop devices then we can get

426
00:25:14,250 --> 00:25:20,700
computer names service names which is a

427
00:25:17,640 --> 00:25:23,700
unique ID which is a unique device ID

428
00:25:20,700 --> 00:25:27,120
and the display names from the browser

429
00:25:23,700 --> 00:25:29,730
Quebec if the device belong to the same

430
00:25:27,120 --> 00:25:33,360
person we could get the Apple ID other

431
00:25:29,730 --> 00:25:40,860
name as well in this picture you can see

432
00:25:33,360 --> 00:25:43,709
I can't get the app ID so we have

433
00:25:40,860 --> 00:25:47,669
reported this issue to Apple in the last

434
00:25:43,710 --> 00:25:50,420
year Apple fix it in our stroke however

435
00:25:47,670 --> 00:25:54,450
this one nobility was not fist

436
00:25:50,420 --> 00:25:57,240
completely all the iOS devices can still

437
00:25:54,450 --> 00:26:01,110
use this bug to King device IDs and

438
00:25:57,240 --> 00:26:04,830
Apple IDs of other devices even if they

439
00:26:01,110 --> 00:26:08,669
upgraded to iOS 12 after it to the

440
00:26:04,830 --> 00:26:10,830
latest iOS version this vulnerability is

441
00:26:08,670 --> 00:26:13,590
very powerful because it can remotely

442
00:26:10,830 --> 00:26:18,179
gain sensitive information from others

443
00:26:13,590 --> 00:26:23,810
device and use without installing a

444
00:26:18,180 --> 00:26:23,810
pillow that are other are others devices

445
00:26:25,649 --> 00:26:32,408
okay let's talk about another user ID

446
00:26:28,899 --> 00:26:36,158
link mark found by us in our last nine

447
00:26:32,409 --> 00:26:40,539
we find a vulnerability in the Kanto

448
00:26:36,159 --> 00:26:44,080
Airport on media library detour XP C and

449
00:26:40,539 --> 00:26:47,679
F F fitty service this vulnerability can

450
00:26:44,080 --> 00:26:50,379
be exploit to read write and query

451
00:26:47,679 --> 00:26:54,159
arbitrary circle ID files outside the

452
00:26:50,379 --> 00:26:56,590
sandbox the sandbox app can use the

453
00:26:54,159 --> 00:27:00,970
beginning translation for database at a

454
00:26:56,590 --> 00:27:04,689
path method to exclude next to arbitrary

455
00:27:00,970 --> 00:27:08,139
satellite files on the system after it

456
00:27:04,690 --> 00:27:14,109
can use X cube URI to execute circle

457
00:27:08,139 --> 00:27:22,478
commands here is the beauty of circles

458
00:27:14,109 --> 00:27:26,080
of satellite Curie but I always turn

459
00:27:22,479 --> 00:27:29,289
this exploit doesn't work because ever

460
00:27:26,080 --> 00:27:33,609
added a new privacy mechanism called

461
00:27:29,289 --> 00:27:38,019
cousin alert purpose dream to make this

462
00:27:33,609 --> 00:27:41,889
extra water game we need to add a probe

463
00:27:38,019 --> 00:27:44,950
who's drinking name which is as Apple

464
00:27:41,889 --> 00:27:49,478
music usage description to the project

465
00:27:44,950 --> 00:27:51,849
and then Co MP media library t media

466
00:27:49,479 --> 00:27:56,279
library request the authorization method

467
00:27:51,849 --> 00:27:56,279
to get an authorization from the user

468
00:27:59,070 --> 00:28:04,899
application and authorization we can

469
00:28:01,749 --> 00:28:08,529
query arbitrary circle ID files for

470
00:28:04,899 --> 00:28:11,199
example the SMS message database geo

471
00:28:08,529 --> 00:28:12,070
database which hadith database outside

472
00:28:11,200 --> 00:28:15,789
the sandbox

473
00:28:12,070 --> 00:28:18,580
again this databases contains a large

474
00:28:15,789 --> 00:28:23,289
amount of user information for example

475
00:28:18,580 --> 00:28:27,908
some numbers and fr IDs for the for

476
00:28:23,289 --> 00:28:32,139
instance this picture shows that we can

477
00:28:27,909 --> 00:28:35,960
get the content of SMS messages in my

478
00:28:32,139 --> 00:28:38,269
arm I assume my my

479
00:28:35,960 --> 00:28:40,129
in this database it contains lots of

480
00:28:38,269 --> 00:28:44,059
your personal information

481
00:28:40,129 --> 00:28:46,789
for example the email address the email

482
00:28:44,059 --> 00:28:50,690
address of iCloud and the phone number

483
00:28:46,789 --> 00:28:53,149
of the sender phone number also the

484
00:28:50,690 --> 00:28:57,830
message and also the messaging

485
00:28:53,149 --> 00:29:00,309
information also we can control the PC

486
00:28:57,830 --> 00:29:04,580
register of the media library the

487
00:29:00,309 --> 00:29:09,100
process using the FGS rejuvenizer

488
00:29:04,580 --> 00:29:12,439
vulnerability on our stove this picture

489
00:29:09,100 --> 00:29:15,769
the second picture show that we can with

490
00:29:12,440 --> 00:29:22,279
successfully control the value of PC

491
00:29:15,769 --> 00:29:24,769
register to fo fo-fo and for one so this

492
00:29:22,279 --> 00:29:28,700
vulnerability was fixed in I was 12

493
00:29:24,769 --> 00:29:31,429
point to button note that this one rate

494
00:29:28,700 --> 00:29:35,960
vulnerability can be used to execute a

495
00:29:31,429 --> 00:29:40,190
GOP exploit and bypass the PC mitigation

496
00:29:35,960 --> 00:29:41,029
in our Azul an iOS user space so if you

497
00:29:40,190 --> 00:29:44,690
have time

498
00:29:41,029 --> 00:29:48,049
welcome to draw us for another talk heck

499
00:29:44,690 --> 00:29:55,039
pet hacking pointer authentication in OS

500
00:29:48,049 --> 00:29:57,710
us base at DEFCON tomorrow but sometimes

501
00:29:55,039 --> 00:30:00,830
we may not be able to get a determinist

502
00:29:57,710 --> 00:30:03,710
TV information to link devices in this

503
00:30:00,830 --> 00:30:06,619
situation we can use probabilistic data

504
00:30:03,710 --> 00:30:11,299
through public details probabilistic

505
00:30:06,619 --> 00:30:13,999
data links connect a device to a person

506
00:30:11,299 --> 00:30:18,470
based on characteristic and map data

507
00:30:13,999 --> 00:30:23,690
such as IP addresses device names URL

508
00:30:18,470 --> 00:30:26,230
and coordination information it is worth

509
00:30:23,690 --> 00:30:29,539
noting that when the airport device is

510
00:30:26,230 --> 00:30:33,679
initialized after well set the device

511
00:30:29,539 --> 00:30:37,929
name pista under user name as you can

512
00:30:33,679 --> 00:30:44,450
see the username in a well said whose

513
00:30:37,929 --> 00:30:45,910
iPhone and iPad although it's very

514
00:30:44,450 --> 00:30:49,030
convenient

515
00:30:45,910 --> 00:30:51,190
it may reveal the users information or

516
00:30:49,030 --> 00:30:54,040
even help her the advertiser and

517
00:30:51,190 --> 00:30:57,250
analytical companies to associate the

518
00:30:54,040 --> 00:31:02,139
device for example by using the airdrop

519
00:30:57,250 --> 00:31:06,790
sniffing we talked in we talked before

520
00:31:02,140 --> 00:31:09,730
we can find this we can find that in

521
00:31:06,790 --> 00:31:13,570
this picture you can see this item and

522
00:31:09,730 --> 00:31:16,630
this MacBook Air belong to P X error and

523
00:31:13,570 --> 00:31:20,980
we can find that this MacBook Pro and

524
00:31:16,630 --> 00:31:23,340
this Mac this iPhone extra appellant who

525
00:31:20,980 --> 00:31:26,140
me

526
00:31:23,340 --> 00:31:26,820
moreover we found that lots of people

527
00:31:26,140 --> 00:31:33,730
are using

528
00:31:26,820 --> 00:31:36,450
adminstrator as their username so in our

529
00:31:33,730 --> 00:31:38,800
experiment we use the similarity

530
00:31:36,450 --> 00:31:42,340
algorithm to calculate the distance

531
00:31:38,800 --> 00:31:45,010
between devices the process of device

532
00:31:42,340 --> 00:31:49,209
linking through probabilistic Atika is

533
00:31:45,010 --> 00:31:52,810
shown below firstly uniquely identifying

534
00:31:49,210 --> 00:31:54,910
a device through device IDs secondly we

535
00:31:52,810 --> 00:31:58,240
calculate the similarity to each

536
00:31:54,910 --> 00:32:01,660
identified device suddenly the device

537
00:31:58,240 --> 00:32:06,930
appear with the maximal similarity about

538
00:32:01,660 --> 00:32:10,300
a similar stressfull is about 0.1

539
00:32:06,930 --> 00:32:13,900
firstly if such appear exists it is

540
00:32:10,300 --> 00:32:17,320
added to the device graph and the next

541
00:32:13,900 --> 00:32:20,230
iteration starts with a new device this

542
00:32:17,320 --> 00:32:25,179
routine is repeated in four consecutive

543
00:32:20,230 --> 00:32:28,630
stage each develop evaluating similarity

544
00:32:25,180 --> 00:32:30,600
between IP addresses URLs coordination

545
00:32:28,630 --> 00:32:34,120
information and advice names

546
00:32:30,600 --> 00:32:37,959
respectively and finally gathering the

547
00:32:34,120 --> 00:32:40,800
device graph that connect devices to

548
00:32:37,960 --> 00:32:40,800
specific users

549
00:32:47,220 --> 00:32:52,810
okay let's discuss some feasible

550
00:32:50,620 --> 00:32:55,060
solutions for example instrumentation

551
00:32:52,810 --> 00:32:58,510
and the differential privacy to detect

552
00:32:55,060 --> 00:33:03,370
and prevent unique identification and

553
00:32:58,510 --> 00:33:06,340
cross-device tracking the first thing we

554
00:33:03,370 --> 00:33:09,090
should notice that dangerous theta is

555
00:33:06,340 --> 00:33:12,820
very dangerous that are only not only

556
00:33:09,090 --> 00:33:17,470
brain power but Indra as well Catherine

557
00:33:12,820 --> 00:33:20,409
theta as overhead and liability in

558
00:33:17,470 --> 00:33:26,320
addition our expected data as more risks

559
00:33:20,410 --> 00:33:28,840
and this distrust for system service we

560
00:33:26,320 --> 00:33:32,500
can use instrumentation to analyze the

561
00:33:28,840 --> 00:33:37,179
IPC related API calls and messages of

562
00:33:32,500 --> 00:33:40,270
system service this API is may we may be

563
00:33:37,180 --> 00:33:44,320
used to maybe abuse the to uniquely

564
00:33:40,270 --> 00:33:48,970
identify and across and cross-device

565
00:33:44,320 --> 00:33:51,189
have users I think Frieda is a very

566
00:33:48,970 --> 00:33:55,930
youthful thought to the instrumentation

567
00:33:51,190 --> 00:33:58,150
we can easily hook related xpg sending

568
00:33:55,930 --> 00:34:01,630
and receiving functions through

569
00:33:58,150 --> 00:34:06,340
JavaScript and log out the object

570
00:34:01,630 --> 00:34:10,450
information for example this picture so

571
00:34:06,340 --> 00:34:20,830
that I did some instrumentation for the

572
00:34:10,449 --> 00:34:23,949
X PC sending and receiving functions so

573
00:34:20,830 --> 00:34:26,920
the next step is to analyzing the

574
00:34:23,949 --> 00:34:28,989
behavior of the apps because we want to

575
00:34:26,920 --> 00:34:31,810
figure out which app is collecting

576
00:34:28,989 --> 00:34:36,189
sensitive information so we can put some

577
00:34:31,810 --> 00:34:41,320
well-known ApS for example IDs V to get

578
00:34:36,190 --> 00:34:45,429
the vendor ID as that we after cooking

579
00:34:41,320 --> 00:34:47,890
the we all know 80s Frida casabas to

580
00:34:45,429 --> 00:34:49,989
locate the function of device in for

581
00:34:47,889 --> 00:34:56,710
collections through the thread top

582
00:34:49,989 --> 00:34:59,649
actress method for example this picture

583
00:34:56,710 --> 00:35:03,279
and you can see

584
00:34:59,650 --> 00:35:06,640
this is an app which is collecting a lot

585
00:35:03,279 --> 00:35:14,950
of other information for example the

586
00:35:06,640 --> 00:35:18,190
system inversion and the SSID and some

587
00:35:14,950 --> 00:35:20,589
coordination information after the ADA

588
00:35:18,190 --> 00:35:24,009
well standard this information to its

589
00:35:20,589 --> 00:35:26,759
server but through the thread top

590
00:35:24,009 --> 00:35:30,789
actress we can locate this function

591
00:35:26,759 --> 00:35:32,619
which collects this information in this

592
00:35:30,789 --> 00:35:36,190
picture you can see with exemple

593
00:35:32,619 --> 00:35:44,880
successfully located the information

594
00:35:36,190 --> 00:35:47,740
collection function so by using

595
00:35:44,880 --> 00:35:50,289
instrumentation for example the signal

596
00:35:47,740 --> 00:35:52,808
subject and some tricks we can return

597
00:35:50,289 --> 00:35:57,160
rhythm and speak device information to

598
00:35:52,809 --> 00:36:00,339
the app to protect our privacy however a

599
00:35:57,160 --> 00:36:04,589
total random value mimics the F field to

600
00:36:00,339 --> 00:36:07,359
execute that we can patek we can

601
00:36:04,589 --> 00:36:12,299
potentially add noise to the data

602
00:36:07,359 --> 00:36:12,299
through differential privacy algorithm

603
00:36:13,079 --> 00:36:20,559
differential privacy provides a means to

604
00:36:17,170 --> 00:36:23,859
maximal the accuracy of theories from

605
00:36:20,559 --> 00:36:26,980
step step decode database while

606
00:36:23,859 --> 00:36:29,589
mirroring the privacy impacted are

607
00:36:26,980 --> 00:36:33,489
individuals who the information is in

608
00:36:29,589 --> 00:36:35,349
the database now we can partially add

609
00:36:33,489 --> 00:36:37,450
noise to the details through

610
00:36:35,349 --> 00:36:40,119
differential privacy libraries to

611
00:36:37,450 --> 00:36:43,779
prevent cross device checking for

612
00:36:40,119 --> 00:36:46,749
instance circle differential privacy is

613
00:36:43,779 --> 00:36:49,839
a query analyzer and rewriting framework

614
00:36:46,749 --> 00:36:53,140
to enforce differential privacy for

615
00:36:49,839 --> 00:36:56,200
general-purpose circle curious and ever

616
00:36:53,140 --> 00:37:00,930
also provides differential privacy of

617
00:36:56,200 --> 00:37:00,930
framework in the user in the user space

618
00:37:02,190 --> 00:37:12,160
mover in RS in the in the RS searching

619
00:37:08,410 --> 00:37:15,578
our plans to add more mechanism to

620
00:37:12,160 --> 00:37:18,249
protect the users privacy for example

621
00:37:15,579 --> 00:37:21,670
instead of using a social account or

622
00:37:18,249 --> 00:37:25,058
filling out forms we will provide

623
00:37:21,670 --> 00:37:28,839
developers with unique radom unique

624
00:37:25,059 --> 00:37:30,819
random ID companies cannot get the

625
00:37:28,839 --> 00:37:33,670
information of the other names and a

626
00:37:30,819 --> 00:37:35,950
password which means user ID being

627
00:37:33,670 --> 00:37:39,519
vulnerability become more powerful

628
00:37:35,950 --> 00:37:43,169
in addition apple will prevent users

629
00:37:39,519 --> 00:37:45,538
from using Wi-Fi and Bluetooth to

630
00:37:43,170 --> 00:37:49,859
approximate your location without

631
00:37:45,539 --> 00:37:52,839
actually asking for it it means getting

632
00:37:49,859 --> 00:37:56,019
location and many MAC address related

633
00:37:52,839 --> 00:38:08,019
information in silence becomes more

634
00:37:56,019 --> 00:38:10,238
difficult ok here is a conclusion so in

635
00:38:08,019 --> 00:38:13,359
this talk we first read several

636
00:38:10,239 --> 00:38:15,579
approaches for example some public areas

637
00:38:13,359 --> 00:38:18,190
and the vulnerabilities to unique

638
00:38:15,579 --> 00:38:20,769
uniquely identifies the Apple device

639
00:38:18,190 --> 00:38:24,220
even after a system rebooting or

640
00:38:20,769 --> 00:38:26,109
resetting secondly we present more

641
00:38:24,220 --> 00:38:28,720
advanced algorithm and the

642
00:38:26,109 --> 00:38:31,808
vulnerabilities to associate Apple

643
00:38:28,720 --> 00:38:35,129
devices through deterministic user IDs

644
00:38:31,809 --> 00:38:38,170
for example operative and phone numbers

645
00:38:35,130 --> 00:38:40,239
then we talk about probabilistic data

646
00:38:38,170 --> 00:38:42,099
for example device IDs

647
00:38:40,239 --> 00:38:45,309
coordination information and IP

648
00:38:42,099 --> 00:38:48,999
addresses to do the device link

649
00:38:45,309 --> 00:38:50,499
suddenly we discussed feasible solutions

650
00:38:48,999 --> 00:38:52,808
for instance

651
00:38:50,499 --> 00:38:55,689
instrumentation and differential privacy

652
00:38:52,809 --> 00:38:59,220
to detect and prevent unique

653
00:38:55,690 --> 00:39:02,559
identification and cross-device tracking

654
00:38:59,220 --> 00:39:05,379
in the end we want to thank our

655
00:39:02,559 --> 00:39:09,609
colleagues at Alibaba and the team at

656
00:39:05,380 --> 00:39:11,950
Apple security team in this talk all

657
00:39:09,609 --> 00:39:14,680
four vulnerabilities we found and

658
00:39:11,950 --> 00:39:17,980
discussed in this pod were reported to

659
00:39:14,680 --> 00:39:20,890
Apple and we believe our study can help

660
00:39:17,980 --> 00:39:23,279
able to maintain and improve the privacy

661
00:39:20,890 --> 00:39:26,680
of their products

662
00:39:23,279 --> 00:39:33,460
so here are some reference which are

663
00:39:26,680 --> 00:39:35,828
cited in this talk okay that's all for

664
00:39:33,460 --> 00:39:38,500
my talk thank you for listening if you

665
00:39:35,829 --> 00:39:42,190
have some questions you can send me

666
00:39:38,500 --> 00:39:43,250
messages on my Weber and Peter thank you

667
00:39:42,190 --> 00:39:46,389
thank you

668
00:39:43,250 --> 00:39:46,389
[Applause]

