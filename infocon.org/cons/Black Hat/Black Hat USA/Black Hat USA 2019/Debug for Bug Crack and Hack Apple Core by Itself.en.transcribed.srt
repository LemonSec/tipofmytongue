1
00:00:00,000 --> 00:00:05,400
today we have a talk debug for bug crack

2
00:00:02,970 --> 00:00:08,370
and hack apple core by itself so I'd

3
00:00:05,400 --> 00:00:10,410
like to introduce Liang mu and mu Neeley

4
00:00:08,370 --> 00:00:11,350
if everybody could give them a round of

5
00:00:10,410 --> 00:00:17,130
applause thank you

6
00:00:11,350 --> 00:00:17,130
[Applause]

7
00:00:24,300 --> 00:00:36,960
there are so many people less the last

8
00:00:31,590 --> 00:00:43,320
topic debajo buy crack and Epico by

9
00:00:36,960 --> 00:00:46,379
itself let me introduce myself I'm Neela

10
00:00:43,320 --> 00:00:49,350
I have four years Curie parents and many

11
00:00:46,379 --> 00:00:53,370
folks are microwaves and our sworn

12
00:00:49,350 --> 00:00:55,620
deputies and malware and now Rapunzel

13
00:00:53,370 --> 00:01:02,789
for the following projecting our team

14
00:00:55,620 --> 00:01:06,149
and this is a morning glad to meet you

15
00:01:02,789 --> 00:01:11,189
everyone I have about nine years

16
00:01:06,150 --> 00:01:13,740
security clearances and in the past

17
00:01:11,189 --> 00:01:16,380
years I am mo most on the Mac OS and the

18
00:01:13,740 --> 00:01:19,560
windows a sandbox development and now

19
00:01:16,380 --> 00:01:25,439
I'm focusing on Thursday and it's right

20
00:01:19,560 --> 00:01:28,200
on the mobile mobile related mobile

21
00:01:25,439 --> 00:01:32,720
related the bug hunt and the client and

22
00:01:28,200 --> 00:01:32,720
the Duty is my conference list thank you

23
00:01:34,189 --> 00:01:41,279
this is the agenda of our topic first I

24
00:01:38,280 --> 00:01:44,939
will introduce our keynote debugger in

25
00:01:41,280 --> 00:01:48,270
Mac OS and then introduce our LD be

26
00:01:44,939 --> 00:01:52,199
father to afternoon we will detail to

27
00:01:48,270 --> 00:01:55,619
can hidden a tank service on graphic

28
00:01:52,200 --> 00:01:59,729
drivers and how to fasten and then give

29
00:01:55,619 --> 00:02:05,700
the demo video then we were

30
00:01:59,729 --> 00:02:10,560
bugs we we have what's more in order to

31
00:02:05,700 --> 00:02:13,440
apply the LDP father for hacking - SH we

32
00:02:10,560 --> 00:02:15,959
introduce a method to implement kernel

33
00:02:13,440 --> 00:02:20,660
debugger based on open source networking

34
00:02:15,959 --> 00:02:23,819
jars finally we will give the conclusion

35
00:02:20,660 --> 00:02:27,840
first we were introduced over okano

36
00:02:23,819 --> 00:02:30,238
debugger we can use key DP protocol to

37
00:02:27,840 --> 00:02:34,440
debugger remote device this can be

38
00:02:30,239 --> 00:02:37,890
activated by modify put apps using every

39
00:02:34,440 --> 00:02:41,660
run and only a single D bar can be

40
00:02:37,890 --> 00:02:45,268
afterward activated by under given time

41
00:02:41,660 --> 00:02:47,609
Mac OS has implement different kinds of

42
00:02:45,269 --> 00:02:51,480
debugging with colonel including

43
00:02:47,610 --> 00:02:56,970
ethernet debugging fire debugging answer

44
00:02:51,480 --> 00:02:59,640
debugging actually fire fire and serious

45
00:02:56,970 --> 00:03:02,430
debugging are only act and local proxy

46
00:02:59,640 --> 00:03:08,119
for the target machine

47
00:03:02,430 --> 00:03:08,120
RTB still performs network pest toboggan

48
00:03:09,139 --> 00:03:16,950
this is overview cannot be buggy in many

49
00:03:12,840 --> 00:03:19,109
contained three parts Ethernet travel

50
00:03:16,950 --> 00:03:21,480
written before implement receive panget

51
00:03:19,109 --> 00:03:23,760
and self ankle and other in social

52
00:03:21,480 --> 00:03:27,179
functions PST

53
00:03:23,760 --> 00:03:30,388
kenapa Rotundo for using he be poor and

54
00:03:27,180 --> 00:03:34,370
kelly ripa hundred to process debugger

55
00:03:30,389 --> 00:03:40,310
message and networking family

56
00:03:34,370 --> 00:03:40,310
connotations robando for bridges to pass

57
00:03:41,329 --> 00:03:48,060
for the kernel parven cannot post tram

58
00:03:45,359 --> 00:03:53,010
system will create a killaby in need

59
00:03:48,060 --> 00:03:56,010
thread and implement debugger chef the

60
00:03:53,010 --> 00:03:58,858
KDP in israel will impose a KD be

61
00:03:56,010 --> 00:03:59,880
reduced function which can be healed by

62
00:03:58,859 --> 00:04:02,760
our networking

63
00:03:59,880 --> 00:04:05,000
extension to registers and receive

64
00:04:02,760 --> 00:04:07,970
hundra

65
00:04:05,000 --> 00:04:11,140
the debugger loop within the trip is

66
00:04:07,970 --> 00:04:14,900
robando for pouring and replaying

67
00:04:11,140 --> 00:04:18,649
incoming debug message for after capture

68
00:04:14,900 --> 00:04:24,380
the exception when ethernet education

69
00:04:18,649 --> 00:04:26,179
implements our gdp protocol GDP register

70
00:04:24,380 --> 00:04:29,510
function we are richest receive

71
00:04:26,180 --> 00:04:33,160
understand hundred into the debugger

72
00:04:29,510 --> 00:04:36,020
loop other than the debugger can be work

73
00:04:33,160 --> 00:04:39,380
was more excellent implement or the

74
00:04:36,020 --> 00:04:43,880
debugger commands functioning carry

75
00:04:39,380 --> 00:04:47,330
Whittlesea film and retest in into a

76
00:04:43,880 --> 00:04:52,210
dispatch table and these functions may

77
00:04:47,330 --> 00:04:55,760
have the debugger work in the ethernet

78
00:04:52,210 --> 00:05:00,169
station part imagine it must be planning

79
00:04:55,760 --> 00:05:03,880
a pair of handler functions Zanta called

80
00:05:00,169 --> 00:05:06,880
to handle KDP transmit and receive

81
00:05:03,880 --> 00:05:11,990
requests during a debugging session

82
00:05:06,880 --> 00:05:14,719
after you enable the remote debugger it

83
00:05:11,990 --> 00:05:18,790
will cause attached debugger client

84
00:05:14,720 --> 00:05:22,850
method to in is the KDP protocol and

85
00:05:18,790 --> 00:05:29,540
Yosuke DP register send and receive

86
00:05:22,850 --> 00:05:34,040
function which which is posting BST to

87
00:05:29,540 --> 00:05:36,290
registers and receive handle and

88
00:05:34,040 --> 00:05:39,560
eventually the developer the debugger

89
00:05:36,290 --> 00:05:44,330
loop can connect the debugger world with

90
00:05:39,560 --> 00:05:47,990
remote with remote client this is UDP

91
00:05:44,330 --> 00:05:50,300
bangies for flow which in case LD be

92
00:05:47,990 --> 00:05:55,520
world receive debug message and send

93
00:05:50,300 --> 00:05:58,970
replace through Ethernet station now

94
00:05:55,520 --> 00:06:01,549
here is the total care from TD kdp in

95
00:05:58,970 --> 00:06:05,840
many including API wrappers for basic

96
00:06:01,550 --> 00:06:12,590
lldp scribbling bridge api's and in

97
00:06:05,840 --> 00:06:17,229
for all the debug a mouse now that money

98
00:06:12,590 --> 00:06:17,229
introduced our idea about our DB father

99
00:06:20,860 --> 00:06:26,300
okay

100
00:06:23,080 --> 00:06:30,460
it is the whole architecture of our our

101
00:06:26,300 --> 00:06:34,699
DB fast faster on tort and Mac OS kernel

102
00:06:30,460 --> 00:06:38,239
debugger which is the Pistons RDP debug

103
00:06:34,699 --> 00:06:41,360
mechanism as we can see

104
00:06:38,240 --> 00:06:45,430
so our DP fast is based on so beauty in

105
00:06:41,360 --> 00:06:47,290
the park a mechanism of Mac OS which

106
00:06:45,430 --> 00:06:50,479
intercept and bricks

107
00:06:47,290 --> 00:06:52,880
exaction of k AP is a tries to connect a

108
00:06:50,479 --> 00:06:58,039
Madrid and sitcom as at the key point

109
00:06:52,880 --> 00:07:00,500
and fast the chorus occurred the bonding

110
00:06:58,039 --> 00:07:03,919
data our code is the echo section

111
00:07:00,500 --> 00:07:06,530
contestant since the most data or code

112
00:07:03,919 --> 00:07:09,080
dependence the our character during

113
00:07:06,530 --> 00:07:12,109
fuzzy so fast activity could attach

114
00:07:09,080 --> 00:07:14,300
deeper code and branches sensor for

115
00:07:12,110 --> 00:07:18,229
example the typical as where the color

116
00:07:14,300 --> 00:07:20,990
AFL like method in our practice and this

117
00:07:18,229 --> 00:07:23,599
is we do not design the exaction channel

118
00:07:20,990 --> 00:07:27,310
of fathom the hidden attack interface

119
00:07:23,599 --> 00:07:30,080
would be exposed because our deep

120
00:07:27,310 --> 00:07:34,039
interception so we have more chance to

121
00:07:30,080 --> 00:07:36,409
find the hidden attacker interface okay

122
00:07:34,039 --> 00:07:39,409
this figure shows the architecture of

123
00:07:36,410 --> 00:07:42,560
how DP fast solution so fast solution

124
00:07:39,410 --> 00:07:46,789
contains two kind of Pratt so let left

125
00:07:42,560 --> 00:07:50,750
pad is the remote machine of the host

126
00:07:46,789 --> 00:07:55,419
machine and there's large part it's the

127
00:07:50,750 --> 00:08:01,760
target machine which our tobacco father

128
00:07:55,419 --> 00:08:05,210
so as we can society we should pay

129
00:08:01,760 --> 00:08:07,940
attention cited so main fat logic is a

130
00:08:05,210 --> 00:08:09,830
host machine including the probe that

131
00:08:07,940 --> 00:08:13,250
have mutation

132
00:08:09,830 --> 00:08:16,280
to our crash monitor all implemented as

133
00:08:13,250 --> 00:08:18,680
a person scripted piece under our DB

134
00:08:16,280 --> 00:08:21,109
free milk so the derivative could be

135
00:08:18,680 --> 00:08:25,520
actually extracted insert a key the

136
00:08:21,110 --> 00:08:28,280
machine is a left prat so Isis a main

137
00:08:25,520 --> 00:08:30,590
module we can see that in the pro beset

138
00:08:28,280 --> 00:08:33,079
have module will query the fastest

139
00:08:30,590 --> 00:08:35,990
strategy which contains also attack

140
00:08:33,080 --> 00:08:39,770
surfaces we collected affirms for

141
00:08:35,990 --> 00:08:43,370
example xnu kernel or the target chronic

142
00:08:39,770 --> 00:08:46,130
attention and a set and passed them for

143
00:08:43,370 --> 00:08:51,140
the X sector to deploy our prove a point

144
00:08:46,130 --> 00:08:53,000
to target machine when the target point

145
00:08:51,140 --> 00:08:56,510
is a hit base answer the backup

146
00:08:53,000 --> 00:08:59,030
mechanism map of our DB so control the

147
00:08:56,510 --> 00:09:03,860
exaction is transferred to the executor

148
00:08:59,030 --> 00:09:07,339
and as our first strategy where we will

149
00:09:03,860 --> 00:09:10,130
try to mute it or hinton support input

150
00:09:07,340 --> 00:09:12,080
buffer from the youth modem so as to

151
00:09:10,130 --> 00:09:15,410
cause the target the kernel module to

152
00:09:12,080 --> 00:09:18,110
crash in the later section actually

153
00:09:15,410 --> 00:09:21,500
sorry sir you see is kind of mutation

154
00:09:18,110 --> 00:09:25,010
strategy as you can see such as this a

155
00:09:21,500 --> 00:09:27,890
random bit flip integral incrementing or

156
00:09:25,010 --> 00:09:31,069
decrementing or something like that and

157
00:09:27,890 --> 00:09:34,220
we also could control the mutation

158
00:09:31,070 --> 00:09:38,720
frequency and as a scope to why there's

159
00:09:34,220 --> 00:09:41,210
a whole kernel system of sitter mahom to

160
00:09:38,720 --> 00:09:44,570
keep the kernel fast act always active

161
00:09:41,210 --> 00:09:47,060
and the other module is the correct

162
00:09:44,570 --> 00:09:49,280
monitor it will monitor the status of

163
00:09:47,060 --> 00:09:50,030
the target machine Pistons LD be

164
00:09:49,280 --> 00:09:52,970
commanded

165
00:09:50,030 --> 00:09:55,339
typically it'll you send us a card

166
00:09:52,970 --> 00:09:58,460
ampere under the panic log to the remote

167
00:09:55,340 --> 00:10:02,510
machine of the Hooten host machine for

168
00:09:58,460 --> 00:10:04,760
further reproduction and always we will

169
00:10:02,510 --> 00:10:07,130
reboot the toggle machine be sound how

170
00:10:04,760 --> 00:10:12,590
to be commander if we have collected as

171
00:10:07,130 --> 00:10:15,620
a scenario as far as to catch the system

172
00:10:12,590 --> 00:10:17,810
crash at the root with the cost point we

173
00:10:15,620 --> 00:10:20,840
have introduced so certain either

174
00:10:17,810 --> 00:10:21,989
mechanism in the in the red part of the

175
00:10:20,840 --> 00:10:23,910
target machine

176
00:10:21,990 --> 00:10:26,790
attacking the machine will load our

177
00:10:23,910 --> 00:10:29,790
customized death accident as a new

178
00:10:26,790 --> 00:10:31,620
kernel which is open source which we all

179
00:10:29,790 --> 00:10:33,959
which will be compared the basic

180
00:10:31,620 --> 00:10:37,650
security features of work Colonel

181
00:10:33,960 --> 00:10:40,440
Colonel Grayson and either and memorize

182
00:10:37,650 --> 00:10:42,780
Sennheiser and this kind of talking we

183
00:10:40,440 --> 00:10:46,710
have introduced in our last year

184
00:10:42,780 --> 00:10:51,750
conference as we conceived the normal

185
00:10:46,710 --> 00:10:54,990
Mac OS system has no Ethernet point so

186
00:10:51,750 --> 00:10:58,800
as not to be able to so as not to be

187
00:10:54,990 --> 00:11:01,860
enabled to be debug them so so remote

188
00:10:58,800 --> 00:11:06,569
debugger component in the Takeda machine

189
00:11:01,860 --> 00:11:10,230
is is Cartman customized the network

190
00:11:06,570 --> 00:11:12,960
driver which is enabled to set up to

191
00:11:10,230 --> 00:11:16,230
support promoted our DB debugger we will

192
00:11:12,960 --> 00:11:18,960
introduce this kind of key module how to

193
00:11:16,230 --> 00:11:23,880
implement this kind of remote debugger

194
00:11:18,960 --> 00:11:26,700
in the insulator later part and you can

195
00:11:23,880 --> 00:11:29,580
see that accent yo and as a chronic

196
00:11:26,700 --> 00:11:31,610
attention is our fighting target for for

197
00:11:29,580 --> 00:11:34,260
debugger and for fast

198
00:11:31,610 --> 00:11:39,900
typically this kind of kernel engine

199
00:11:34,260 --> 00:11:43,470
could include some or some or Apache

200
00:11:39,900 --> 00:11:47,280
Apache modules that has a graphical

201
00:11:43,470 --> 00:11:52,740
related as audio video of the other kind

202
00:11:47,280 --> 00:11:55,949
of related rarer and this part is for

203
00:11:52,740 --> 00:11:58,260
the Probus that happened module this

204
00:11:55,950 --> 00:12:00,390
module is for the proper setup

205
00:11:58,260 --> 00:12:04,020
configuration typically reviews that

206
00:12:00,390 --> 00:12:06,150
have a probe point according to you can

207
00:12:04,020 --> 00:12:09,150
see that the API name or the word to

208
00:12:06,150 --> 00:12:11,760
address which we are interest increased

209
00:12:09,150 --> 00:12:14,189
the in such as as a I'll connect

210
00:12:11,760 --> 00:12:16,050
combated or system call which is the

211
00:12:14,190 --> 00:12:18,900
common attack in the face for the

212
00:12:16,050 --> 00:12:23,219
current kernel kernel kernel of a Mac OS

213
00:12:18,900 --> 00:12:26,280
and also we will configurations contain

214
00:12:23,220 --> 00:12:28,040
condition strategy for the probe as the

215
00:12:26,280 --> 00:12:30,740
first four examples of

216
00:12:28,040 --> 00:12:34,480
through frequency as a fast cook too

217
00:12:30,740 --> 00:12:34,480
wide so situm aha

218
00:12:38,750 --> 00:12:45,589
a third party uses a faster cheetah

219
00:12:41,480 --> 00:12:47,959
secretary this party is the dad to

220
00:12:45,589 --> 00:12:51,290
intercept is the fat probe and captures

221
00:12:47,959 --> 00:12:55,008
input buffer and read inter Barbara

222
00:12:51,290 --> 00:12:56,779
unmuted and read them to the colonel the

223
00:12:55,009 --> 00:13:01,069
current memory you can see that this is

224
00:12:56,779 --> 00:13:04,129
the main control logic of our fighting

225
00:13:01,069 --> 00:13:08,120
strategy and also after the mutation

226
00:13:04,129 --> 00:13:12,290
interview continue to give the exaction

227
00:13:08,120 --> 00:13:14,569
to the left of Colonel and evil crashed

228
00:13:12,290 --> 00:13:18,050
hey Bo caught would cause a crack

229
00:13:14,569 --> 00:13:21,319
monitor module to try to get the Columba

230
00:13:18,050 --> 00:13:24,589
and the CR the candle for logs for

231
00:13:21,319 --> 00:13:27,019
reproduction to the buzzer oh and also

232
00:13:24,589 --> 00:13:32,329
in will restart for the other section of

233
00:13:27,019 --> 00:13:35,930
us and fall so fast mutation plant the

234
00:13:32,329 --> 00:13:38,899
main purpose is trying to fasten our

235
00:13:35,930 --> 00:13:43,489
taint the input buffer which is always

236
00:13:38,899 --> 00:13:47,120
well heed them from the UT modem and we

237
00:13:43,490 --> 00:13:50,600
have were chance to flip some peppers

238
00:13:47,120 --> 00:13:52,910
some contents of the in the barber and

239
00:13:50,600 --> 00:13:56,509
the keep was the most of the other plant

240
00:13:52,910 --> 00:13:59,209
is valid so as to bypass the physical

241
00:13:56,509 --> 00:14:01,819
check out a check of the against the

242
00:13:59,209 --> 00:14:05,508
colonel so we have more chance to go

243
00:14:01,819 --> 00:14:08,120
deeper to the colonel of the heart as

244
00:14:05,509 --> 00:14:11,980
there are also many kinds of were fast

245
00:14:08,120 --> 00:14:15,500
strategies that has random random in int

246
00:14:11,980 --> 00:14:20,860
increment and decrement and the society

247
00:14:15,500 --> 00:14:25,059
and this is for the basic

248
00:14:20,860 --> 00:14:28,490
mutation strategies that has cute

249
00:14:25,059 --> 00:14:34,730
controls of us gobo by the percentage or

250
00:14:28,490 --> 00:14:37,160
controls about the scope by the bat and

251
00:14:34,730 --> 00:14:39,110
the other party is a quite monster so

252
00:14:37,160 --> 00:14:41,209
crane module model used to separate in

253
00:14:39,110 --> 00:14:45,139
independently from the target machine to

254
00:14:41,209 --> 00:14:49,790
monitor the targeted Colonel anism the

255
00:14:45,139 --> 00:14:53,870
main focus the main the main target is

256
00:14:49,790 --> 00:14:56,390
who try to get its a crisis in our

257
00:14:53,870 --> 00:14:59,180
scenario including Japan incur as a

258
00:14:56,390 --> 00:15:02,780
appender lock on the Kadampa for further

259
00:14:59,180 --> 00:15:05,780
reproduction and the other important the

260
00:15:02,780 --> 00:15:07,610
practice is the data generation for

261
00:15:05,780 --> 00:15:10,520
tagging machine as we can see sent him

262
00:15:07,610 --> 00:15:12,920
how DB barber is belong to the path of

263
00:15:10,520 --> 00:15:15,319
us so in order to touches the mall

264
00:15:12,920 --> 00:15:17,479
that's the attack interface so folding

265
00:15:15,320 --> 00:15:21,980
methods can be very effective for

266
00:15:17,480 --> 00:15:24,260
example if you runs a 3d game in the in

267
00:15:21,980 --> 00:15:27,020
the user space you can have more chance

268
00:15:24,260 --> 00:15:29,930
to catch this a graphical driver in

269
00:15:27,020 --> 00:15:32,030
kernel a for example you you can rent a

270
00:15:29,930 --> 00:15:36,010
pitch mark program in the YouTube user

271
00:15:32,030 --> 00:15:39,589
base such as accident or the GFX bench

272
00:15:36,010 --> 00:15:45,410
and also you can get this kind of normal

273
00:15:39,590 --> 00:15:48,940
data generation also here are some

274
00:15:45,410 --> 00:15:52,670
tricks to how to generate enough a

275
00:15:48,940 --> 00:15:54,410
modulator to fast and keep the whole

276
00:15:52,670 --> 00:15:58,939
system always working you know of

277
00:15:54,410 --> 00:16:04,959
fighting practice for example the left

278
00:15:58,940 --> 00:16:08,510
part is trying to reboot the kernel

279
00:16:04,960 --> 00:16:11,630
representin from kernel because in most

280
00:16:08,510 --> 00:16:14,830
cases so currently is the active one but

281
00:16:11,630 --> 00:16:20,510
so luta mode application is a huh and

282
00:16:14,830 --> 00:16:22,490
Sarah we open know generated noticed the

283
00:16:20,510 --> 00:16:24,800
generated so in this condition we were

284
00:16:22,490 --> 00:16:33,410
trying to reboot the kernel reboot the

285
00:16:24,800 --> 00:16:36,199
whole system from colonel okay okay

286
00:16:33,410 --> 00:16:39,230
i will introduce some attacks always our

287
00:16:36,200 --> 00:16:41,990
graphic connotations

288
00:16:39,230 --> 00:16:45,350
graphic equations can tell md sears and

289
00:16:41,990 --> 00:16:47,210
the entire series for each series there

290
00:16:45,350 --> 00:16:50,540
are also many different iteration

291
00:16:47,210 --> 00:16:53,660
attempt for different module this is

292
00:16:50,540 --> 00:16:58,969
House of Sir editor class diagram with

293
00:16:53,660 --> 00:17:00,949
MD London 4000 iteration we can see that

294
00:16:58,970 --> 00:17:02,240
there are also many different kinds of

295
00:17:00,950 --> 00:17:05,240
implementation

296
00:17:02,240 --> 00:17:08,959
even in one Java and the red ones are

297
00:17:05,240 --> 00:17:13,640
the real a profession classes working in

298
00:17:08,959 --> 00:17:16,100
my macro Yuri the common method to

299
00:17:13,640 --> 00:17:19,069
reverse tank so is for equation can be

300
00:17:16,099 --> 00:17:20,898
the forty-first we can enlist all the

301
00:17:19,069 --> 00:17:23,658
connection types and they are

302
00:17:20,898 --> 00:17:26,270
corresponding our stories and then

303
00:17:23,659 --> 00:17:29,870
rewards also external missile for each

304
00:17:26,270 --> 00:17:33,668
source then we can cut those interfaces

305
00:17:29,870 --> 00:17:37,489
we which can be taught from user space

306
00:17:33,669 --> 00:17:42,380
actually we have introduced an automatic

307
00:17:37,490 --> 00:17:44,179
measure in HIV conference this year here

308
00:17:42,380 --> 00:17:47,600
we list some hidden a tank service

309
00:17:44,179 --> 00:17:50,750
including interfaces which are protected

310
00:17:47,600 --> 00:17:52,730
by physics hours in the faces whose

311
00:17:50,750 --> 00:17:55,779
argument are controlled by the shared

312
00:17:52,730 --> 00:17:58,789
memory and interfaces which cannot be

313
00:17:55,779 --> 00:18:01,760
directly touched by user spelled

314
00:17:58,789 --> 00:18:06,080
processes but can be obsessed by some

315
00:18:01,760 --> 00:18:08,779
special ones due to the first one have

316
00:18:06,080 --> 00:18:11,090
been introduced by previous topic we now

317
00:18:08,779 --> 00:18:13,399
introduce the left to for these

318
00:18:11,090 --> 00:18:19,100
interfaces whose arguments are can be

319
00:18:13,399 --> 00:18:22,158
controlled by shared memory we know that

320
00:18:19,100 --> 00:18:25,490
we can use our connect map memories 64

321
00:18:22,159 --> 00:18:30,580
to map user space hardware or share

322
00:18:25,490 --> 00:18:36,440
memory into kernel Ilocano the response

323
00:18:30,580 --> 00:18:40,309
MIT missouri's is IO Connect map memory

324
00:18:36,440 --> 00:18:45,649
into task then it will call map current

325
00:18:40,309 --> 00:18:49,250
memory safety fourth function and this

326
00:18:45,649 --> 00:18:52,549
function will eventually cause a kind

327
00:18:49,250 --> 00:18:56,870
memory for time function implement in

328
00:18:52,549 --> 00:18:59,929
the connotation here take out of the

329
00:18:56,870 --> 00:19:03,559
Ritter family intentional example is

330
00:18:59,929 --> 00:19:06,740
client is client memory for time

331
00:19:03,559 --> 00:19:09,010
function we are the different memory

332
00:19:06,740 --> 00:19:12,940
operations according to

333
00:19:09,010 --> 00:19:17,940
types we can see that if memory time is

334
00:19:12,940 --> 00:19:23,250
zero it will create our path of memory

335
00:19:17,940 --> 00:19:27,160
descriptor object and return it to color

336
00:19:23,250 --> 00:19:30,880
is color we are easy to create mapping

337
00:19:27,160 --> 00:19:34,000
into the canal task and return is

338
00:19:30,880 --> 00:19:37,030
mapping to the MiG Mesa funny this

339
00:19:34,000 --> 00:19:41,250
method will return the memory address

340
00:19:37,030 --> 00:19:44,860
and site to your space and in the in

341
00:19:41,250 --> 00:19:48,730
connotations it can also use a get base

342
00:19:44,860 --> 00:19:52,959
no company function or no copy function

343
00:19:48,730 --> 00:19:56,020
to kill the water address of the

344
00:19:52,960 --> 00:19:59,560
beginning of the mapping buffer so we

345
00:19:56,020 --> 00:20:04,300
can conserve this popular from other

346
00:19:59,560 --> 00:20:10,240
space next we will search where this

347
00:20:04,300 --> 00:20:13,440
shared member chere buffer is used from

348
00:20:10,240 --> 00:20:16,780
the right finger we can see that the

349
00:20:13,440 --> 00:20:20,280
process side band paper function in the

350
00:20:16,780 --> 00:20:22,899
our accelerator contest to cross use it

351
00:20:20,280 --> 00:20:28,440
it will copy the teller from shared

352
00:20:22,900 --> 00:20:32,350
memory offset 16 to end into our command

353
00:20:28,440 --> 00:20:36,670
stream info object within with Viral

354
00:20:32,350 --> 00:20:40,240
close and then call the process side

355
00:20:36,670 --> 00:20:44,670
band token function and tags a command

356
00:20:40,240 --> 00:20:48,070
stream info object and this argument

357
00:20:44,670 --> 00:20:54,310
here we can see this function use

358
00:20:48,070 --> 00:20:59,139
command info offset 32 Teta and index 2

359
00:20:54,310 --> 00:21:02,620
color process functions and all these

360
00:20:59,140 --> 00:21:06,720
functions arguments are the our command

361
00:21:02,620 --> 00:21:09,790
stream info object and mentioned before

362
00:21:06,720 --> 00:21:15,070
another important thing is and their

363
00:21:09,790 --> 00:21:17,030
total 33 token processing method and

364
00:21:15,070 --> 00:21:19,520
Sergius we discard mess

365
00:21:17,030 --> 00:21:22,730
in the despair table so for these

366
00:21:19,520 --> 00:21:27,110
functions I think it will be now for us

367
00:21:22,730 --> 00:21:29,870
to find a bug here is a pattern for this

368
00:21:27,110 --> 00:21:32,540
kind of hidden service functions refer

369
00:21:29,870 --> 00:21:35,120
to the shared memory data and copies

370
00:21:32,540 --> 00:21:38,090
them into another object and use this

371
00:21:35,120 --> 00:21:40,100
object and argument to call the cause

372
00:21:38,090 --> 00:21:43,250
hazard despair functions

373
00:21:40,100 --> 00:21:47,899
therefore this despair functions can be

374
00:21:43,250 --> 00:21:50,240
our first target for this kind of hidden

375
00:21:47,900 --> 00:21:53,000
interfaces we should hang out the data

376
00:21:50,240 --> 00:21:56,000
structure of the argument objects first

377
00:21:53,000 --> 00:22:00,220
and then set up the probe and critical

378
00:21:56,000 --> 00:22:04,190
functions for example here is process

379
00:22:00,220 --> 00:22:06,500
sideband power function then we can

380
00:22:04,190 --> 00:22:12,100
control the probe piece to mutant and

381
00:22:06,500 --> 00:22:12,100
the test if there are any bugs trigger

382
00:22:12,230 --> 00:22:16,430
besides ants there are also many

383
00:22:13,970 --> 00:22:19,280
interfaces which can not be tired

384
00:22:16,430 --> 00:22:22,040
territory by us where processes but can

385
00:22:19,280 --> 00:22:26,060
be accessed by Windows or Safari or

386
00:22:22,040 --> 00:22:29,240
other special processes and the reason I

387
00:22:26,060 --> 00:22:32,120
why our study studying these kind of

388
00:22:29,240 --> 00:22:34,490
functions is is that normally most of

389
00:22:32,120 --> 00:22:36,830
security researchers mainly focus on

390
00:22:34,490 --> 00:22:40,730
those interfaces which I post directly

391
00:22:36,830 --> 00:22:45,020
to user space so I think then my limit

392
00:22:40,730 --> 00:22:47,180
be some part you know here for example

393
00:22:45,020 --> 00:22:48,889
the drive finger is a cost nib our

394
00:22:47,180 --> 00:22:51,470
friend before New Year the current

395
00:22:48,890 --> 00:22:55,370
function it has three connection types

396
00:22:51,470 --> 00:23:00,220
we can connect shared and diagnose your

397
00:22:55,370 --> 00:23:03,739
kind in user space except so at home

398
00:23:00,220 --> 00:23:06,500
why was there also many external missile

399
00:23:03,740 --> 00:23:09,620
for this connection type so it will be a

400
00:23:06,500 --> 00:23:12,230
good prayer to research actually there

401
00:23:09,620 --> 00:23:14,479
are loss all this kind of your kind we

402
00:23:12,230 --> 00:23:19,880
can simply use our so is open function

403
00:23:14,480 --> 00:23:22,710
to test our rewards the samples per file

404
00:23:19,880 --> 00:23:26,549
safari press l to kill this kind of

405
00:23:22,710 --> 00:23:29,820
potential for takis this is the fast

406
00:23:26,549 --> 00:23:31,918
mythology for this kind of interfaces we

407
00:23:29,820 --> 00:23:36,029
can pass them similar with pencil files

408
00:23:31,919 --> 00:23:38,850
we which said probe in in the is

409
00:23:36,029 --> 00:23:40,860
autonomous or function or research the

410
00:23:38,850 --> 00:23:45,120
argument still has structure for us and

411
00:23:40,860 --> 00:23:48,750
the fat each function separately you

412
00:23:45,120 --> 00:23:52,590
know LD be fat and does not need tram

413
00:23:48,750 --> 00:23:57,330
line so theoretically you can pass any

414
00:23:52,590 --> 00:24:07,260
interfaces freely now I will demo how

415
00:23:57,330 --> 00:24:12,389
our DB father works first it will turn L

416
00:24:07,260 --> 00:24:19,260
the remote target using GDP and Lord

417
00:24:12,389 --> 00:24:29,850
debugging script here are some commands

418
00:24:19,260 --> 00:24:32,429
we added to four files and we said the

419
00:24:29,850 --> 00:24:36,750
pro first and you'll break these to

420
00:24:32,429 --> 00:24:41,940
check it if it is successful and we can

421
00:24:36,750 --> 00:24:48,510
set cell mutation config for

422
00:24:41,940 --> 00:24:52,139
configuration here says the max and min

423
00:24:48,510 --> 00:24:57,899
peace is 1 and you said new teacher

424
00:24:52,139 --> 00:25:02,309
config to show the configuration this is

425
00:24:57,899 --> 00:25:06,768
enable the debug debug mode now I can

426
00:25:02,309 --> 00:25:10,190
continue the process and to see if any

427
00:25:06,769 --> 00:25:17,809
path check trigger

428
00:25:10,190 --> 00:25:23,899
this is the origin data this is the

429
00:25:17,809 --> 00:25:30,240
mutation information list this is the

430
00:25:23,899 --> 00:25:31,639
nutrition piece these are the richest

431
00:25:30,240 --> 00:25:37,549
information

432
00:25:31,640 --> 00:25:42,549
in the first place then we can continue

433
00:25:37,549 --> 00:25:46,220
the process and to see if any trigger

434
00:25:42,549 --> 00:25:49,540
actually we rewrote a controller in

435
00:25:46,220 --> 00:25:49,540
order to file automatically

436
00:26:02,149 --> 00:26:11,738
here here is the an example to find the

437
00:26:05,749 --> 00:26:11,739
process salbon function

438
00:26:20,130 --> 00:26:23,990
okay that's a

439
00:26:24,680 --> 00:26:34,750
this is the example for one crash we got

440
00:26:28,280 --> 00:26:42,590
before which is Alex s war wallet here

441
00:26:34,750 --> 00:26:44,510
we list the crashes Kadampa we coach now

442
00:26:42,590 --> 00:26:50,990
I will introduce the parks we have

443
00:26:44,510 --> 00:26:54,590
disclosed least one opt is founding md

444
00:26:50,990 --> 00:26:56,300
ridden x 4000 driver and the one durable

445
00:26:54,590 --> 00:27:00,020
function is and the accelerator

446
00:26:56,300 --> 00:27:02,770
resources in the initialized method md

447
00:27:00,020 --> 00:27:05,810
absolute accelerator associate cars is

448
00:27:02,770 --> 00:27:09,070
used to process the graphic of cellular

449
00:27:05,810 --> 00:27:11,840
resources information for 3d rendering

450
00:27:09,070 --> 00:27:14,240
this vulnerability can be triggered from

451
00:27:11,840 --> 00:27:18,679
user space by md absolute service

452
00:27:14,240 --> 00:27:22,670
service and the external messes vector

453
00:27:18,680 --> 00:27:27,980
is zero whose function name is as new

454
00:27:22,670 --> 00:27:32,000
resources in this park the register of

455
00:27:27,980 --> 00:27:35,090
RX in the place a is the address of the

456
00:27:32,000 --> 00:27:42,320
buffer which create from our malloc

457
00:27:35,090 --> 00:27:45,110
function a fifth r15 register is in the

458
00:27:42,320 --> 00:27:47,060
place P is point to the structure input

459
00:27:45,110 --> 00:27:52,340
buffer we mentioned before which can

460
00:27:47,060 --> 00:27:57,290
control by user mode and ECX register is

461
00:27:52,340 --> 00:28:00,020
equal to R 15 pass 0xf at which point

462
00:27:57,290 --> 00:28:04,940
you up when you offset

463
00:28:00,020 --> 00:28:10,100
62 t world from structure input from plc

464
00:28:04,940 --> 00:28:12,920
and players F we can see that the

465
00:28:10,100 --> 00:28:17,360
actually used to control the total can

466
00:28:12,920 --> 00:28:21,260
copy time from structure input buffer

467
00:28:17,360 --> 00:28:25,570
content to our millat buffer and from

468
00:28:21,260 --> 00:28:29,270
the place T and press e we can seize and

469
00:28:25,570 --> 00:28:33,649
reduced our TX register results you can

470
00:28:29,270 --> 00:28:37,430
choose a copy size for each copy press G

471
00:28:33,650 --> 00:28:39,560
is the copy operation which coffee

472
00:28:37,430 --> 00:28:43,730
from structure imposed to our Malaga

473
00:28:39,560 --> 00:28:46,909
offer so obviously RC x value is called

474
00:28:43,730 --> 00:28:48,830
from user space in press P and has not

475
00:28:46,910 --> 00:28:52,940
has know any checks

476
00:28:48,830 --> 00:28:58,760
therefore an out boundary raid will be

477
00:28:52,940 --> 00:29:03,230
happy if if it it is a big value here is

478
00:28:58,760 --> 00:29:07,190
another OB bag found in this function

479
00:29:03,230 --> 00:29:13,100
actually this function except structure

480
00:29:07,190 --> 00:29:16,520
input buffer whose size is 20 424

481
00:29:13,100 --> 00:29:19,659
so if any one piece is not checked

482
00:29:16,520 --> 00:29:23,870
probably it may be rerouting

483
00:29:19,660 --> 00:29:27,770
vulnerability this is the pseudocode

484
00:29:23,870 --> 00:29:31,820
snap our initialize function in the

485
00:29:27,770 --> 00:29:35,290
press a we can see that it called our

486
00:29:31,820 --> 00:29:38,470
accelerator resources to initialize

487
00:29:35,290 --> 00:29:42,250
function will structure input and

488
00:29:38,470 --> 00:29:49,630
structure imposed side and Alchemist and

489
00:29:42,250 --> 00:29:49,630
set the offset 34 P to the 6 beta member

490
00:29:49,870 --> 00:29:58,219
21 wunderbar impress P then impel see

491
00:29:54,740 --> 00:30:01,790
the fifth Beatle member 21 was mod left

492
00:29:58,220 --> 00:30:07,010
6 piece and use and off set for one-four

493
00:30:01,790 --> 00:30:09,470
on our malach buffer we can see that for

494
00:30:07,010 --> 00:30:13,640
this value it has no checks and directly

495
00:30:09,470 --> 00:30:19,430
use users user space value so it can be

496
00:30:13,640 --> 00:30:22,070
reloading a no be read this is a table

497
00:30:19,430 --> 00:30:25,820
of read back from the process stretch

498
00:30:22,070 --> 00:30:30,980
test to test function which plan to MDS

499
00:30:25,820 --> 00:30:35,810
i GL context class which is the derived

500
00:30:30,980 --> 00:30:39,440
class of our accelerator context to this

501
00:30:35,810 --> 00:30:42,620
function can be accessed using the MDS

502
00:30:39,440 --> 00:30:43,550
ITIL context user Christ will select the

503
00:30:42,620 --> 00:30:46,989
to function

504
00:30:43,550 --> 00:30:46,990
submit data buffers

505
00:30:47,570 --> 00:30:54,260
this is the studio cause neighbor

506
00:30:50,559 --> 00:31:03,080
test to test function we can see that if

507
00:30:54,260 --> 00:31:07,640
we fire we fill T equal to 0 x HC 0 0

508
00:31:03,080 --> 00:31:10,720
impress a the resources of set H and the

509
00:31:07,640 --> 00:31:15,559
resources of test offset post scale from

510
00:31:10,720 --> 00:31:20,059
our absolute earth share to will share

511
00:31:15,559 --> 00:31:24,610
the memory of such 24 and 28 values and

512
00:31:20,059 --> 00:31:30,830
index and last it was a member to

513
00:31:24,610 --> 00:31:36,678
resources offset at not notice equal is

514
00:31:30,830 --> 00:31:42,110
not equal to 10 this function we are we

515
00:31:36,679 --> 00:31:48,049
are release will release how we are

516
00:31:42,110 --> 00:31:51,918
release resources offset and offset add

517
00:31:48,049 --> 00:31:53,840
from our observed share to obtain

518
00:31:51,919 --> 00:31:59,120
impress in in Mussoorie

519
00:31:53,840 --> 00:32:06,020
impressed p however if we set the shared

520
00:31:59,120 --> 00:32:09,049
memory of such 24 and 28 with same value

521
00:32:06,020 --> 00:32:13,610
it will release release the same

522
00:32:09,049 --> 00:32:16,040
resources twice impressed be admission

523
00:32:13,610 --> 00:32:18,799
before this share Mary can be controlled

524
00:32:16,040 --> 00:32:23,299
from user space therefore it will be a

525
00:32:18,799 --> 00:32:26,120
table of remark this is another type of

526
00:32:23,299 --> 00:32:29,690
rebounding this guard straight to test

527
00:32:26,120 --> 00:32:32,449
to test function the root costs are

528
00:32:29,690 --> 00:32:38,059
similar with the last one so we were not

529
00:32:32,450 --> 00:32:41,780
implement a plane it again this is this

530
00:32:38,059 --> 00:32:45,649
park is according MD oxidizer resources

531
00:32:41,780 --> 00:32:52,580
and XO piece blank function where can be

532
00:32:45,650 --> 00:32:56,020
assessed the real sector 232 this is the

533
00:32:52,580 --> 00:33:00,179
student named course named for its color

534
00:32:56,020 --> 00:33:03,270
and we can see that it caught and

535
00:33:00,180 --> 00:33:05,880
and X orbit fly function we structure

536
00:33:03,270 --> 00:33:08,879
input data and this acts similar the

537
00:33:05,880 --> 00:33:12,200
structure input here is also the proper

538
00:33:08,880 --> 00:33:12,200
way input from user space

539
00:33:12,780 --> 00:33:22,940
this is assembly could cost name of and

540
00:33:17,360 --> 00:33:27,919
exorbitant function respondent impress a

541
00:33:22,940 --> 00:33:32,520
our trio the register is assigned with

542
00:33:27,920 --> 00:33:38,190
structure input data and more it to RDX

543
00:33:32,520 --> 00:33:44,940
register in PLC impress P R X is equal

544
00:33:38,190 --> 00:33:50,520
to R 15 + 0 X 1 C ad which entry point

545
00:33:44,940 --> 00:33:54,720
to a power start address impress T if

546
00:33:50,520 --> 00:33:57,840
directly use at a X pass RTF to read the

547
00:33:54,720 --> 00:34:03,840
paper content therefore it will be an

548
00:33:57,840 --> 00:34:07,770
outer boundary read part list bank is

549
00:34:03,840 --> 00:34:11,009
found in inter inter accelerator tower

550
00:34:07,770 --> 00:34:14,850
and the wonderful function is interest

551
00:34:11,010 --> 00:34:16,110
rate annuity DT function function this

552
00:34:14,850 --> 00:34:20,989
function can be assessed during

553
00:34:16,110 --> 00:34:24,330
connecting the euro kind with type six

554
00:34:20,989 --> 00:34:27,629
this is the tsuyoku nare cost never new

555
00:34:24,330 --> 00:34:32,100
Tiki titi function we we can seasoned it

556
00:34:27,630 --> 00:34:33,270
used log for TP or sales function to get

557
00:34:32,100 --> 00:34:37,170
the

558
00:34:33,270 --> 00:34:43,199
observator system system memory address

559
00:34:37,170 --> 00:34:45,810
and use it to we ate in the place a and

560
00:34:43,199 --> 00:34:49,939
the impressed p memory copy function use

561
00:34:45,810 --> 00:34:54,630
we add and destination addresses for

562
00:34:49,940 --> 00:35:01,640
context contains copy however though we

563
00:34:54,630 --> 00:35:01,640
add value is not always worried here

564
00:35:01,730 --> 00:35:10,170
here it shows it can be 0 however it can

565
00:35:07,320 --> 00:35:11,850
also it can be also also can be other

566
00:35:10,170 --> 00:35:16,950
values which can

567
00:35:11,850 --> 00:35:19,350
which we are not mentioned here unless

568
00:35:16,950 --> 00:35:24,080
we will introduce them authority to

569
00:35:19,350 --> 00:35:27,480
implement debugger for hacking into SH

570
00:35:24,080 --> 00:35:31,170
actually nearly all in open source

571
00:35:27,480 --> 00:35:33,720
networking imitations are not both KDP

572
00:35:31,170 --> 00:35:36,650
protocol so it's necessary to be

573
00:35:33,720 --> 00:35:39,089
preeminent KDP kernel debugger for

574
00:35:36,650 --> 00:35:43,410
hacking to attach in order to apply

575
00:35:39,090 --> 00:35:46,920
apply our first method here is some open

576
00:35:43,410 --> 00:35:52,379
source net to our network drivers and

577
00:35:46,920 --> 00:35:55,290
they're attempting network module cannot

578
00:35:52,380 --> 00:35:59,550
debugger is working in polling mode of

579
00:35:55,290 --> 00:36:01,710
networking and and make an API document

580
00:35:59,550 --> 00:36:04,680
described we should override the foreign

581
00:36:01,710 --> 00:36:10,320
functions in order to support our our

582
00:36:04,680 --> 00:36:15,839
GDP protocol the third one is to enable

583
00:36:10,320 --> 00:36:20,370
the poly mode the second one is called

584
00:36:15,840 --> 00:36:25,260
by interfaces in the first power

585
00:36:20,370 --> 00:36:28,890
Porter's read to retail import package

586
00:36:25,260 --> 00:36:33,840
from the drower the third and the fourth

587
00:36:28,890 --> 00:36:38,460
ones are the debugger controller and the

588
00:36:33,840 --> 00:36:41,700
last two functions are used to be caught

589
00:36:38,460 --> 00:36:44,490
by the debugger can climb to pour

590
00:36:41,700 --> 00:36:49,279
incoming packets or said outbound

591
00:36:44,490 --> 00:36:52,770
bangies of the debugger kind is attached

592
00:36:49,280 --> 00:36:55,980
after reversing the exit travel which

593
00:36:52,770 --> 00:37:00,060
has already explored KDP protocol such

594
00:36:55,980 --> 00:37:03,410
as a OPC PCM ethernet we call the

595
00:37:00,060 --> 00:37:04,620
foreign workflow firstly we should in

596
00:37:03,410 --> 00:37:07,500
initialized

597
00:37:04,620 --> 00:37:08,819
kernel debugger object and turn change

598
00:37:07,500 --> 00:37:11,400
secondly

599
00:37:08,820 --> 00:37:15,050
enable the poly mode and the implements

600
00:37:11,400 --> 00:37:17,610
for input import package function

601
00:37:15,050 --> 00:37:18,990
suddenly overrides the debugger

602
00:37:17,610 --> 00:37:21,840
controller and

603
00:37:18,990 --> 00:37:25,580
prepare our most important functions for

604
00:37:21,840 --> 00:37:28,340
kernel debugging now here is the

605
00:37:25,580 --> 00:37:33,299
implementation for the first step in a

606
00:37:28,340 --> 00:37:37,290
PCM Ethernet tower when so is when so is

607
00:37:33,300 --> 00:37:40,530
that each of your ears that start

608
00:37:37,290 --> 00:37:45,140
getting function to attach the debugger

609
00:37:40,530 --> 00:37:51,869
client here is the implementation of Poe

610
00:37:45,140 --> 00:37:54,779
input input hanky-panky function we can

611
00:37:51,869 --> 00:37:58,380
see that it is actually implemented by

612
00:37:54,780 --> 00:38:02,730
receiver Peggy's function after research

613
00:37:58,380 --> 00:38:06,480
we found there is Raziel panky and so is

614
00:38:02,730 --> 00:38:11,250
rx interrupt functions are all

615
00:38:06,480 --> 00:38:15,060
implemented by this function so there

616
00:38:11,250 --> 00:38:18,530
could not co-star nearly the same likely

617
00:38:15,060 --> 00:38:21,810
the rx interrupt functions has been

618
00:38:18,530 --> 00:38:27,150
implemented in many open source travels

619
00:38:21,810 --> 00:38:30,390
such an RTL series and interior muscle

620
00:38:27,150 --> 00:38:33,420
service so we can refer to them to

621
00:38:30,390 --> 00:38:37,700
implement the polling input panel

622
00:38:33,420 --> 00:38:40,700
functions and receive packages functions

623
00:38:37,700 --> 00:38:45,240
here is a male logical or receive

624
00:38:40,700 --> 00:38:49,189
receive packets function when find

625
00:38:45,240 --> 00:38:54,540
receive interrupt et which retrieves a

626
00:38:49,190 --> 00:38:56,760
packet and check if it is valid if yes

627
00:38:54,540 --> 00:39:01,320
this function will copy and replace the

628
00:38:56,760 --> 00:39:04,080
packet into new and buffer objects by

629
00:39:01,320 --> 00:39:07,230
the way it up to system here whether

630
00:39:04,080 --> 00:39:10,140
copy or whether to copy or repairs

631
00:39:07,230 --> 00:39:14,790
according to you whichever is more time

632
00:39:10,140 --> 00:39:17,460
time efficient if we replace issue a

633
00:39:14,790 --> 00:39:21,330
player update the package physical

634
00:39:17,460 --> 00:39:23,670
address first the N function we are

635
00:39:21,330 --> 00:39:26,609
checked a LAN function will check if

636
00:39:23,670 --> 00:39:27,739
this pagan is the last one if not a

637
00:39:26,609 --> 00:39:31,459
penny

638
00:39:27,739 --> 00:39:35,630
a penny to message and continue to

639
00:39:31,459 --> 00:39:37,578
receive the the other pancreas yes this

640
00:39:35,630 --> 00:39:42,709
function will check the massive checks a

641
00:39:37,579 --> 00:39:46,160
checksum in encoding will wheel and tag

642
00:39:42,709 --> 00:39:50,259
and update message lens and last your

643
00:39:46,160 --> 00:39:55,399
check if this message is KD peep anguish

644
00:39:50,259 --> 00:39:58,670
EPS in in queens networks tag and resell

645
00:39:55,400 --> 00:40:03,229
the received register if not just to the

646
00:39:58,670 --> 00:40:06,469
last step here is the implementation for

647
00:40:03,229 --> 00:40:10,999
the for sent ankle functioning a pro PCM

648
00:40:06,469 --> 00:40:14,390
function it falsely allocate a package

649
00:40:10,999 --> 00:40:18,948
with a data buffer and the Moses saying

650
00:40:14,390 --> 00:40:22,578
thank you in info to eat and update is

651
00:40:18,949 --> 00:40:26,239
Lance net then calling the transmit

652
00:40:22,579 --> 00:40:30,289
package to send to send the package and

653
00:40:26,239 --> 00:40:32,719
last according the transmitted cake cake

654
00:40:30,289 --> 00:40:38,900
function to update the latest data

655
00:40:32,719 --> 00:40:42,949
register and reference to the API

656
00:40:38,900 --> 00:40:45,799
document let working families our the

657
00:40:42,949 --> 00:40:48,709
cell thank yous and the cell packet and

658
00:40:45,799 --> 00:40:51,920
our output style function should be with

659
00:40:48,709 --> 00:40:55,368
the same ability they are you to trust

660
00:40:51,920 --> 00:40:58,309
me the practice so we we can refer to

661
00:40:55,369 --> 00:41:02,239
output style about the implementation of

662
00:40:58,309 --> 00:41:05,029
sent a grid function here is a man

663
00:41:02,239 --> 00:41:05,630
logical to implement the st. angle

664
00:41:05,029 --> 00:41:09,729
function

665
00:41:05,630 --> 00:41:12,920
you know self angle cell tank is active

666
00:41:09,729 --> 00:41:15,410
action system where directory course the

667
00:41:12,920 --> 00:41:18,469
transmedia narratives in the replay for

668
00:41:15,410 --> 00:41:21,259
debug message after calls and buffer

669
00:41:18,469 --> 00:41:23,809
lease function we are first check how

670
00:41:21,259 --> 00:41:28,309
many seconds should be divided into and

671
00:41:23,809 --> 00:41:30,709
then did mine which sec checks checksum

672
00:41:28,309 --> 00:41:35,240
operations should be performed in

673
00:41:30,709 --> 00:41:38,450
hardware after than it should prepare

674
00:41:35,240 --> 00:41:41,509
prepare the header and commit command

675
00:41:38,450 --> 00:41:44,960
base for each segment and the film will

676
00:41:41,510 --> 00:41:47,829
tell her and last update supporting

677
00:41:44,960 --> 00:41:54,470
piece in register and waiting for

678
00:41:47,829 --> 00:41:57,579
articles read to teachers here are the

679
00:41:54,470 --> 00:41:59,930
reference if you want to implement a

680
00:41:57,579 --> 00:42:06,079
debugger travel based on open source

681
00:41:59,930 --> 00:42:11,240
networking networking towers now give

682
00:42:06,079 --> 00:42:14,569
the conclusion we introduced Octavio led

683
00:42:11,240 --> 00:42:18,500
beef debugger and show our debugger file

684
00:42:14,569 --> 00:42:21,710
implementation and usage also introduced

685
00:42:18,500 --> 00:42:25,250
to kinda hidden interfaces in graphic

686
00:42:21,710 --> 00:42:29,680
drivers and show how to follow next we

687
00:42:25,250 --> 00:42:32,770
introduce samples we have found last we

688
00:42:29,680 --> 00:42:36,470
introduced an authority to implement

689
00:42:32,770 --> 00:42:40,790
debugger based on open source network

690
00:42:36,470 --> 00:42:42,410
tower if you have any questions just

691
00:42:40,790 --> 00:42:45,980
email us

692
00:42:42,410 --> 00:42:47,618
actually we have some other parts which

693
00:42:45,980 --> 00:42:54,730
have not fixed yet

694
00:42:47,619 --> 00:42:54,730
you can follow us for details dancer

695
00:42:55,540 --> 00:43:01,699
[Applause]

